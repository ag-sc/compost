id,subid,split,question,sparql,generated_sparql,num_edges,num_edges_full,num_nodes,depth,breadth,base_depth,base_breadth,subgraphs,TP,FP,FN,Precision,Recall,F1
465,68,test,"Give me the successor of the child, that is a royalty, of Anne of Brittany and successor of the child of the parent of Ercole II d'Este, Duke of Ferrara and spouse of the child, that is a royalty, of the parent of Elizabeth of Austria (1526–1545).","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/spouse> ?v7 . <http://dbpedia.org/resource/Anne_of_Brittany> <http://dbpedia.org/ontology/child> ?v3 . <http://dbpedia.org/resource/Ercole_II_d'Este,_Duke_of_Ferrara> <http://dbpedia.org/ontology/parent> ?v5 . ?v0 <http://dbpedia.org/ontology/child> ?v7 . ?v3 <http://dbpedia.org/ontology/successor> ?result . ?v4 <http://dbpedia.org/property/father> ?v5 . ?v0 <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Elizabeth_of_Austria_(1526–1545)> . ?v7 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v4 <http://dbpedia.org/ontology/successor> ?result . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. }","```sparql
SELECT ?successor WHERE {
  # Anne of Brittany's children
  ?anneChild dbo:parent dbc:Anne_of_Brittany .
  
  # Identify which child is royalty
  OPTIONAL { 
    ?anneChild rdf:type dbo:Monarch .
  }
  
  # Successor of Anne of Brittany's royal child
  ?anneSuccessor dbo:predecessor ?anneChild .

  # Ercole II d'Este's",8,10,9,3,3,3,3,71,0,0,1,0,0.0,0
417,64,test,"Give me the child of Christian X of Denmark and spouse of the parent, that is a royalty, of the child of Knud, Hereditary Prince of Denmark and child of the child, that is a royalty, of the parent, that is a royalty, of Alexandrine of Mecklenburg-Schwerin.","SELECT ?result WHERE { ?v1 <http://dbpedia.org/property/father> ?v0 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. <http://dbpedia.org/resource/Alexandrine_of_Mecklenburg-Schwerin> <http://dbpedia.org/ontology/parent> ?v0 . ?result <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Christian_X_of_Denmark> . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?result <http://dbpedia.org/ontology/spouse> ?v2 . ?result <http://dbpedia.org/ontology/parent> ?v1 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v2 <http://dbpedia.org/ontology/child> ?v3 . ?v3 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Knud,_Hereditary_Prince_of_Denmark> . }","```sparql
SELECT ?childOfChristianX ?spouse WHERE {
  # Find a child of Christian X of Denmark
  ?christianX dbo:parent ?childOfChristianX .
  ?christianX rdfs:label ""Christian X of Denmark""@en .

  # Find Knud, Hereditary Prince of Denmark and his parent (royalty)
  ?knud dbo:parent ?parentKnud .
  ?knud rdfs:label ""Knud, Hereditary Prince of Denmark""@en .
  
  # Find a child of the royal parent of Knud
  ?parentKnud dbo:child ?childOfParentKnud .

  # Find a grandchild who is royalty
  ?childOfParentKnud dbo:child ?grandchildRoyalty .

  # Find Alexandrine of Mecklenburg-Schwerin and her parent (royalty)
  ?alexandrine dbo:parent ?parentAlexandrine .
  ?alexandrine rdfs:label ""Alexandrine of Mecklenburg-Schwerin""@en .

  # Find a child who is royalty
  ?parentAlexandrine dbo:child ?childRoyalty .

  # Find the spouse of the parent from step 1
  ?childOfChristianX dbo:spouse ?spouse .
}
```",7,10,8,3,3,3,3,71,0,2,1,0.0,0.0,0
917,67,test,"Give me the child of the father of the child, that is a royalty, of Kamehameha III and parent of Albert Kamehameha and child of the father of the spouse, that is a royalty, of Leleiohoku I.",SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/spouse> <http://dbpedia.org/resource/Leleiohoku_I> . ?v1 <http://dbpedia.org/property/father> ?v5 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?result <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Albert_Kamehameha> . ?result <http://dbpedia.org/property/father> ?v0 . <http://dbpedia.org/resource/Kamehameha_III> <http://dbpedia.org/ontology/child> ?v4 . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v4 <http://dbpedia.org/property/father> ?v0 . ?result <http://dbpedia.org/ontology/parent> ?v5 . },"```sparql
SELECT ?child WHERE {
  # For Kamehameha III
  OPTIONAL {
    ?kamehamehaIII dbo:child ?royalChild .
    ?kamehamehaIII rdfs:label ""Kamehameha III""@en .
    FILTER (regex(str(?royalChild), ""Albert Kamehameha"", ""i""))
    
    ?royalChild dbo:parent ?fatherOfRoyalChild .
    
    ?fatherOfRoyalChild dbo:child ?child .
  }
  
  # For Leleiohoku I
  OPTIONAL {
    ?leleiohokuI dbo:spouse ?royalSpouse .
    ?leleiohokuI rdfs:label ""Leleiohoku I""@en .
    
    FILTER (regex(str(?royalSpouse), ""Queen Kalama"", ""i""))
    
    ?royalSpouse dbo:parent ?fatherOfRoyalSpouse .
    
    ?fatherOfRoyalSpouse dbo:child ?child .
  }
}
```",7,9,8,3,3,3,3,71,0,0,1,0,0.0,0
5,18,test,"Give me the entity in the award of Coro de la Pontificia Universidad Católica de Puerto Rico and birthplace of the person born, that is a politician, as the award of Renata Adler.",SELECT ?result WHERE { ?v3 <http://dbpedia.org/property/birthName> ?v2 . ?result <http://dbpedia.org/ontology/country> ?v0 . <http://dbpedia.org/resource/Coro_de_la_Pontificia_Universidad_Católica_de_Puerto_Rico> <http://dbpedia.org/property/awards> ?v0 . <http://dbpedia.org/resource/Renata_Adler> <http://dbpedia.org/property/awards> ?v2 . ?v3 <http://dbpedia.org/ontology/birthPlace> ?result . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. },"```sparql
SELECT ?entity WHERE {
  # Find the award of Coro de la Pontificia Universidad Católica de Puerto Rico
  ?award dbo:award ""Coro de la Pontificia Universidad Católica de Puerto Rico""@en .
  
  # Find politicians born in a specific place
  ?politician dbo:nationality ?nationality ;
              dbo:birthPlace ?entity ;
              rdf:type dbo:Politician .

  # Check if the birthplace is associated with an award given by Renata Adler
  ?adlerAward dbo:award ""Renata Adler""@en .
  ?adlerAward dbo:recipient ?politician .
  
  FILTER (?award = ?adlerAward)
}
```",5,6,6,3,2,3,2,20,0,0,2,0,0.0,0
459,26,test,"Give me the governor of the death place, that is a settlement, of Cliff Roquemore and governor of Dana Murphy and person born as the birth name of Kevin Stitt.",SELECT ?result WHERE { ?v1 <http://dbpedia.org/property/governor> ?result . <http://dbpedia.org/resource/Dana_Murphy> <http://dbpedia.org/property/governor> ?result . ?result <http://dbpedia.org/property/birthName> ?v2 . <http://dbpedia.org/resource/Kevin_Stitt> <http://dbpedia.org/property/birthName> ?v2 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. <http://dbpedia.org/resource/Cliff_Roquemore> <http://dbpedia.org/ontology/deathPlace> ?v1 . },"```sparql
SELECT ?governor1 ?governor2 WHERE {
  # Find Cliff Roquemore's death place that is a settlement and its governor
  ?cliffRoquemore dbo:deathPlace ?deathPlace .
  ?deathPlace rdfs:label ""Cliff Roquemore""@en ;
              dbo:type ?type .
  FILTER (regex(str(?type), ""Settlement"", ""i""))
  ?deathPlace dbo:governor ?governor1 .

  # Find Dana Murphy's birth place and its governor
  ?danaMurphy dbo:birthPlace ?birthPlace .
  ?birthPlace dbo:governor ?governor2 .

  # Find the person born with the same name as Kevin Stitt
  ?kevinStitt foaf:name ""Kevin Stitt""@en ;
              foaf:givenName ?firstName ;
              foaf:familyName ?lastName .
  
  OPTIONAL {
    ?person foaf:givenName ?firstName ;
            foaf:familyName ?lastName .
  }
}
```",5,6,6,2,3,2,3,28,0,0,1,0,0.0,0
329,27,test,"Give me the entity in the birthplace, that is an organisation and a country, of Robert Bates (loyalist) and entity in the region, that is a country, of Western European Time and birthplace of Eric Cross (writer).",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/country> ?v0 . <http://dbpedia.org/resource/Robert_Bates_(loyalist)> <http://dbpedia.org/ontology/birthPlace> ?v0 . <http://dbpedia.org/resource/Eric_Cross_(writer)> <http://dbpedia.org/ontology/birthPlace> ?result . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. ?result <http://dbpedia.org/ontology/country> ?v3 . ?v3 <http://dbpedia.org/property/timeZone> <http://dbpedia.org/resource/Western_European_Time> . },"```sparql
SELECT ?organization ?country1 ?regionCountry ?country2 WHERE {
  # Robert Bates (loyalist)
  ?bates dbo:birthPlace ?place .
  ?bates rdfs:label ""Robert Bates (loyalist)""@en .
  
  OPTIONAL { 
    ?place dbo:organization ?organization .
  }
  
  OPTIONAL {
    ?place dbo:country ?country1 .
  }

  # Western European Time
  ?time dbo:region ?region .
  ?time rdfs:label ""Western European Time""@en .

  OPTIONAL {
    ?region dbo:country ?regionCountry .
  }

  # Eric Cross (writer)
  ?cross dbo:birthPlace ?place2 .
  ?cross rdfs:label ""Eric Cross (writer)""@en .

  OPTIONAL {
    ?place2 dbo:country ?country2 .
  }
}
```",5,8,6,2,3,2,3,28,0,0,1,0,0.0,0
47,56,test,"Give me the office of the administration of Jagdeep Dhankhar and office of Bidesh Ranjan Bose and office of the awardee of the entity, that is an award, in India.",SELECT ?result WHERE { ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Award>. ?v2 <http://dbpedia.org/property/governor> <http://dbpedia.org/resource/Jagdeep_Dhankhar> . <http://dbpedia.org/resource/Bidesh_Ranjan_Bose> <http://dbpedia.org/property/office> ?result . ?v2 <http://dbpedia.org/property/office> ?result . ?v0 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/India> . ?v1 <http://dbpedia.org/property/office> ?result . ?v1 <http://dbpedia.org/property/awards> ?v0 . },"```sparql
SELECT ?jagdeepOffice ?bideshOffice ?awardeeOffice WHERE {
  # Jagdeep Dhankhar's Office
  ?dhankhar dbo:office ?jagdeepOffice .
  ?dhankhar rdfs:label ""Jagdeep Dhankhar""@en .

  # Bidesh Ranjan Bose's Office
  ?bose dbo:office ?bideshOffice .
  ?bose rdfs:label ""Bidesh Ranjan Bose""@en .

  # Awardee of an Award in India (e.g., Bharat Ratna)
  OPTIONAL {
    ?award dbo:recipient ?awardee .
    ?award rdfs:label ""Bharat Ratna""@en .
    ?awardee dbo:office ?awardeeOffice .
  }
}
```",6,7,7,3,3,3,3,71,0,0,1,0,0.0,0
865,68,test,"Give me the native of the residence, that is a country, of the person decedent at Patna and father of the child, that is a politician, of the spouse of Syeda Shahar Banu and father of the child of Abu Ahmad Abdul Hafiz.",SELECT ?result WHERE { ?v5 <http://dbpedia.org/property/father> ?v2 . ?v4 <http://dbpedia.org/property/father> ?result . ?v5 <http://dbpedia.org/property/father> ?result . ?v4 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Abu_Ahmad_Abdul_Hafiz> . <http://dbpedia.org/resource/Syeda_Shahar_Banu> <http://dbpedia.org/ontology/spouse> ?v2 . ?result <http://dbpedia.org/ontology/birthPlace> ?v0 . ?v1 <http://dbpedia.org/ontology/deathPlace> <http://dbpedia.org/resource/Patna> . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v1 <http://dbpedia.org/property/residence> ?v0 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. },"```sparql
SELECT ?native WHERE {
  # Find Abu Ahmad Abdul Hafiz's child who is a politician
  ?abuHafiz dbo:child ?politician .
  ?abuHafiz rdfs:label ""Abu Ahmad Abdul Hafiz""@en .
  ?politician rdf:type dbo:Politician .

  # Find the father of this politician, which is Syeda Shahar Banu's spouse
  ?spouse dbo:spouse ?syedaShaharBanu .
  ?syedaShaharBanu rdfs:label ""Syeda Shahar Banu""@en .
  ?politician dbo:parent ?spouse .

  # Identify the decedent at Patna and find their residence country
  ?decedent dbo:deathPlace ?patna .
  ?patna rdfs:label ""Patna""@en .
  ?decedent dbo:residence ?countryResidence .
  
  # Find the native of this residence country
  ?native dbo:nationality ?countryResidence .
}
```",8,10,9,3,3,3,3,71,0,0,1,0,0.0,0
865,67,test,"Give me the father of the child of the father of Abul Maal Abdul Muhith and native of British Raj and father of the child, that is a politician, of the spouse of Syeda Shahar Banu.",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/British_Raj> . ?v3 <http://dbpedia.org/property/father> ?v2 . ?v3 <http://dbpedia.org/property/father> ?result . <http://dbpedia.org/resource/Syeda_Shahar_Banu> <http://dbpedia.org/ontology/spouse> ?v1 . ?v5 <http://dbpedia.org/property/father> ?result . ?v5 <http://dbpedia.org/property/father> ?v1 . <http://dbpedia.org/resource/Abul_Maal_Abdul_Muhith> <http://dbpedia.org/property/father> ?v2 . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. },"```sparql
SELECT ?father WHERE {
  # Find Abul Maal Abdul Muhith and his father
  ?muhith dbo:parent ?father .
  ?muhith rdfs:label ""Abul Maal Abdul Muhith""@en .

  # Find the child of this father who is a native of British Raj
  OPTIONAL {
    ?child dbo:parent ?father .
    ?child dbo:nationality dbr:British_Raj .
  }

  # Find spouse of Syeda Shahar Banu
  OPTIONAL {
    ?shaharBanu dbo:spouse ?spouse .
    ?shaharBanu rdfs:label ""Syeda Shahar Banu""@en .
  }

  # Find child of this spouse who is a politician
  OPTIONAL {
    ?childOfSpouse dbo:parent ?spouse .
    ?childOfSpouse rdf:type dbr:Politician .
  }

  # Finally, find the father of this politician
  OPTIONAL {
    ?fatherOfChild dbo:parent ?childOfSpouse .
  }
}
```",7,8,8,3,3,3,3,71,0,0,1,0,0.0,0
965,69,test,"Give me the spouse of the spouse of the parent of Louise Mountbatten and parent of the person born, that is a noble, as the birth name of George Mountbatten, 2nd Marquess of Milford Haven and parent of the child, that is a royalty, of Prince Louis of Battenberg.","SELECT ?result WHERE { ?v6 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. <http://dbpedia.org/resource/George_Mountbatten,_2nd_Marquess_of_Milford_Haven> <http://dbpedia.org/property/birthName> ?v5 . ?v4 <http://dbpedia.org/ontology/spouse> ?v2 . ?result <http://dbpedia.org/ontology/spouse> ?v2 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Noble>. ?v6 <http://dbpedia.org/ontology/parent> ?result . ?v6 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Prince_Louis_of_Battenberg> . ?v0 <http://dbpedia.org/ontology/parent> ?result . ?v0 <http://dbpedia.org/property/birthName> ?v5 . <http://dbpedia.org/resource/Louise_Mountbatten> <http://dbpedia.org/ontology/parent> ?v4 . }","```sparql
SELECT ?finalSpouse WHERE {
  # Step 1: Identify Louise Mountbatten's parent
  ?louise dbo:parent ?parentLouise .
  ?louise rdfs:label ""Louise Mountbatten""@en .

  # Step 2: Find spouse of Louise Mountbatten's parent
  OPTIONAL { 
    ?parentLouise dbo:spouse ?spouseParentLouise .
  }

  # Step 3: Identify George Mountbatten, 2nd Marquess of Milford Haven by birth name and noble status
  ?george rdfs:label ""George Mountbatten, 2nd Marquess of Milford Haven""@en .
  ?george dbo:birthName ?birthName .
  FILTER (regex(str(?birthName), ""Prince Louis of Battenberg"", ""i""))
  ?george a dbo:Noble .

  # Step 4: Determine parent of George Mountbatten
  OPTIONAL {
    ?parentGeorge dbo:child ?george .
  }

  # Step 5: Find spouse of this parent
  OPTIONAL {
    ?parentGeorge dbo:spouse ?finalSpouse .
  }

  # Step 6: Identify Prince Louis of Battenberg's child who is royalty
  ?princeLouis rdfs:label ""Prince Louis of Battenberg""@en .
  ?royalChild dbo:childOf ?princeLouis .
  ?royalChild a dbo:Royalty .

  # Step 7: Determine parent of this royal child
  OPTIONAL {
    ?parentRoyalChild dbo:child ?royalChild .
  }

  # Step 8: Find spouse of this parent
  OPTIONAL {
    ?parentRoyalChild dbo:spouse ?finalSpouse .
  }
}
```",8,10,9,3,3,3,3,71,0,0,2,0,0.0,0
839,69,test,"Give me the band of the member of Böhse Onkelz and band of the person born, that is a musical artist, as the persona of Kevin Russell (musician) and band of the band, that is a musical artist, of the professional in Musician.","SELECT ?result WHERE { <http://dbpedia.org/resource/Böhse_Onkelz> <http://dbpedia.org/ontology/bandMember> ?v7 . ?v1 <http://dbpedia.org/ontology/associatedMusicalArtist> ?v2 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?result <http://dbpedia.org/ontology/bandMember> ?v7 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?v3 <http://dbpedia.org/property/birthName> ?v4 . ?v1 <http://dbpedia.org/property/occupation> ""Musician""@en . <http://dbpedia.org/resource/Kevin_Russell_(musician)> <http://xmlns.com/foaf/0.1/givenName> ?v4 . ?v3 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?result <http://dbpedia.org/ontology/bandMember> ?v2 . }","```sparql
# Query for Böhse Onkelz member's band
SELECT ?member ?band WHERE {
  ?onkelz dbo:member ?member .
  ?onkelz rdfs:label ""Böhse Onkelz""@en .
  OPTIONAL { ?member dbo:memberOf ?band . }
}

# Query for Kevin Russell's band
SELECT ?persona ?band WHERE {
  ?kevin dbo:birthName ""Kevin Russell"" .
  ?kevin dbo:alias ?persona .
  FILTER (regex(str(?persona), ""musical artist"", ""i""))
  OPTIONAL { ?persona dbo:memberOf ?band . }
}

# Query for a professional musician's band
SELECT ?musician ?band WHERE {
  ?musician rdf:type dbo:Musician .
  OPTIONAL { ?musician dbo:memberOf ?band . }
}
```",8,10,9,3,3,3,3,71,0,0,1,0,0.0,0
573,57,test,"Give me the parent of the author, that is a politician and an office holder, of Exchequer Standards and person decedent at the residence, that is a settlement, of the professional, that is American, in Politician and person decedent at Massachusetts.","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/deathPlace> ?v5 . ?v0 <http://dbpedia.org/property/residence> ?v5 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v0 <http://dbpedia.org/ontology/nationality> <http://dbpedia.org/resource/United_States>. ?v0 <http://dbpedia.org/property/occupation> ""Politician""@en . <http://dbpedia.org/resource/Exchequer_Standards> <http://dbpedia.org/property/author> ?v3 . ?v3 <http://dbpedia.org/ontology/parent> ?result . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?result <http://dbpedia.org/ontology/deathPlace> <http://dbpedia.org/resource/Massachusetts> . }","```sparql
SELECT ?parent WHERE {
  # Find the author of ""Exchequer Standards""
  ?author dbo:work ?exchequerStandards .
  ?exchequerStandards rdfs:label ""Exchequer Standards""@en .

  # Ensure the parent is a politician and office holder
  ?author dbo:parent ?parent .
  ?parent rdf:type dbo:Politician ;
          dbo:officeHolder true .

  # Find an American professional with residence in Massachusetts
  ?professional dbo:nationality dbr:United_States ;
                dbo:residence ?settlement .
  ?settlement rdfs:label ?locationLabel .
  FILTER (CONTAINS(LCASE(?locationLabel), ""massachusetts""))

  # Ensure the decedent at this settlement is the same person
  ?decedent dbo:deathPlace ?settlement .
  ?parent dbo:deathPlace ?settlement .

}
```",6,10,7,3,3,3,3,71,0,0,2,0,0.0,0
839,56,test,"Give me the band of the band, that is a musical artist, of the professional in Musician and band of the person born, that is a musical artist, as Kevin Richard Russell and band of Peter Schorowsky.","SELECT ?result WHERE { ?v2 <http://dbpedia.org/property/birthName> ""Kevin Richard Russell""@en . ?v0 <http://dbpedia.org/property/occupation> ""Musician""@en . ?result <http://dbpedia.org/ontology/bandMember> <http://dbpedia.org/resource/Peter_Schorowsky> . ?v2 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?v0 <http://dbpedia.org/ontology/associatedMusicalArtist> ?v1 . ?result <http://dbpedia.org/ontology/bandMember> ?v1 . }","```sparql
SELECT ?kevinBand ?peterBand WHERE {
  # Find Kevin Russell's band
  ?kevin dbpedia-owl:birthName ""Kevin Richard Russell""@en .
  ?kevin dbo:musicalArtist ?kevinBand .

  # Find Peter Schorowsky's band
  ?peter dbpedia-owl:birthName ""Peter Schorowsky""@en .
  ?peter dbo:musicalArtist ?peterBand .
}
```",6,8,7,3,3,3,3,71,0,0,1,0,0.0,0
965,59,test,"Give me the spouse of the spouse of the parent of Louise Mountbatten and parent of the child, that is a royalty, of the person born, that is a politician, on 1854-05-24.","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/spouse> ?v1 . ?v4 <http://dbpedia.org/ontology/parent> ?result . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v0 <http://dbpedia.org/ontology/birthDate> ""1854-05-24""^^<http://www.w3.org/2001/XMLSchema#date> . ?v4 <http://dbpedia.org/property/father> ?v0 . <http://dbpedia.org/resource/Louise_Mountbatten> <http://dbpedia.org/ontology/parent> ?v3 . ?v3 <http://dbpedia.org/ontology/spouse> ?v1 . }","```sparql
SELECT ?finalSpouse WHERE {
  # Step 1: Find Louise Mountbatten and her parent
  ?louise dbo:parent ?parent .
  ?louise rdfs:label ""Louise Mountbatten""@en .

  # Step 2: Find the spouse of this parent
  OPTIONAL { 
    ?parent dbo:spouse ?spouse1 .
  }

  # Step 3: Identify a child of this spouse who is royalty
  OPTIONAL {
    ?child dbo:parent ?spouse1 ;
           rdf:type dbo:RoyalFamilyMember .
  }

  # Step 4: Find the person born on May 24, 1854, who is a politician
  ?politician dbo:dateOfBirth ?dob ;
              dbo:birthPlace ?place ;
              rdf:type dbo:Politician .
  FILTER (YEAR(?dob) = 1854 && MONTH(?dob) = 5 && DAY(?dob) = 24)

  # Step 5: Find the parent of this royal child
  OPTIONAL {
    ?child dbo:parent ?royalParent .
  }

  # Step 6: Determine the spouse of this royal parent
  OPTIONAL {
    ?royalParent dbo:spouse ?finalSpouse .
  }
}
```",6,8,7,3,2,3,3,71,0,0,2,0,0.0,0
987,65,test,"Give me the entity in the region, that is a country, of Central European Time and birth place of the actor of the show, that is a film, with Emir Hadžihafizbegović and birth place of the band, that is an artist and a musical artist, of Šako Polumenta.",SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Film>. ?result <http://dbpedia.org/ontology/country> ?v0 . ?v1 <http://dbpedia.org/ontology/starring> <http://dbpedia.org/resource/Emir_Hadžihafizbegović> . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. ?v5 <http://dbpedia.org/ontology/birthPlace> ?result . ?v2 <http://dbpedia.org/ontology/birthPlace> ?result . <http://dbpedia.org/resource/Šako_Polumenta> <http://dbpedia.org/ontology/associatedMusicalArtist> ?v2 . ?v0 <http://dbpedia.org/property/timeZone> <http://dbpedia.org/resource/Central_European_Time> . ?v1 <http://dbpedia.org/property/starring> ?v5 . },"```sparql
SELECT DISTINCT ?country WHERE {
  # Step 1: Find a film featuring Emir Hadžihafizbegović
  ?film dbo:starring ?emir .
  ?emir rdfs:label ""Emir Hadžihafizbegović""@en .

  # Step 2: Determine the birthplace of an actor from this film
  ?actor dbo:actedIn ?film .
  ?actor dbo:birthPlace ?actorBirthPlace .

  # Step 3: Identify countries in the Central European Time region
  ?country dcterms:isPartOf ?region .
  ?region rdfs:label ""Central European Time""@en .
  
  # Ensure actor's birthplace is a country in CET region
  FILTER (?actorBirthPlace = ?country)

  # Step 4: Find the band associated with Šako Polumenta and their birthplace
  ?band dbo:member ?sako .
  ?sako rdfs:label ""Šako Polumenta""@en .
  ?band dbo:birthPlace ?bandBirthPlace .

  # Ensure band's birthplace is a country in CET region
  FILTER (?bandBirthPlace = ?country)
}
```",7,11,8,3,3,3,3,71,0,0,1,0,0.0,0
791,70,test,"Give me the predecessor of the child of the child, that is an office holder and a royalty, of Emperor Go-Shirakawa and father of the child, that is a royalty, of the father, that is a royalty and an office holder, of Emperor Antoku and spouse of the spouse, that is a royalty, of Emperor Takakura.",SELECT ?result WHERE { ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?result <http://dbpedia.org/ontology/spouse> ?v4 . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v4 <http://dbpedia.org/ontology/spouse> <http://dbpedia.org/resource/Emperor_Takakura> . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v0 <http://dbpedia.org/ontology/parent> <http://dbpedia.org/resource/Emperor_Go-Shirakawa> . <http://dbpedia.org/resource/Emperor_Antoku> <http://dbpedia.org/property/father> ?v1 . ?v3 <http://dbpedia.org/property/father> ?result . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?result <http://dbpedia.org/ontology/successor> ?v7 . ?v3 <http://dbpedia.org/property/father> ?v1 . ?v7 <http://dbpedia.org/property/father> ?v0 . },"```sparql
SELECT ?predecessor WHERE {
  # Find Emperor Go-Shirakawa and his grandchild who is an office holder and royalty
  ?goShirakawa dbo:parent ?child1 .
  ?child1 dbo:parent ?grandchild .
  ?grandchild rdf:type dbo:OfficeHolder ;
              rdf:type dbo:Royalty .
  ?goShirakawa rdfs:label ""Emperor Go-Shirakawa""@en .

  # Find the predecessor of this grandchild
  OPTIONAL {
    ?office dbo:positionHeldBy ?predecessor, ?grandchild .
    FILTER (?predecessor != ?grandchild)
  }

  # Find Emperor Antoku's father who is royalty and an office holder
  ?antoku dbo",8,14,9,3,3,3,3,71,0,0,1,0,0.0,0
18,27,test,"Give me the professional in  and alumnus of the figure known, that is an educational institution, as Saints and parent of the professional in Actress.","SELECT ?result WHERE { ?result <http://dbpedia.org/property/occupation> """"@en . ?v1 <http://dbpedia.org/property/nickname> ""Saints""@en . ?v0 <http://dbpedia.org/property/occupation> ""Actress""@en . ?result <http://dbpedia.org/ontology/almaMater> ?v1 . ?result <http://dbpedia.org/ontology/child> ?v0 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/EducationalInstitution>. }","```sparql
SELECT ?professional WHERE {
  # Find the institution known as ""Saints""
  ?institution rdfs:label ?label .
  FILTER (regex(?label, ""Saints"", ""i""))

  # Find an alumnus of this institution and their professional role
  ?alumnus dbo:almaMater ?institution ;
           dbo:profession ?professional .

  # Identify the parent of an actress
  ?actress rdfs:label ?actressLabel .
  FILTER (regex(?actressLabel, ""Actress"", ""i""))
  
  ?parent dbo:child ?actress .

  # Ensure the alumnus is also the parent of the actress
  FILTER (?alumnus = ?parent)
}
```",5,6,6,2,3,2,3,28,0,0,1,0,0.0,0
773,63,test,"Give me the parent of the successor of Charles the Bald and spouse of the father of the parent of Bernard (son of Charles the Fat) and parent of the child, that is a royalty, of Louis the German.",SELECT ?result WHERE { ?v4 <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Bernard_(son_of_Charles_the_Fat)> . ?result <http://dbpedia.org/ontology/child> ?v6 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v2 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Louis_the_German> . ?v2 <http://dbpedia.org/ontology/parent> ?result . ?v3 <http://dbpedia.org/ontology/spouse> ?result . <http://dbpedia.org/resource/Charles_the_Bald> <http://dbpedia.org/ontology/successor> ?v6 . ?v4 <http://dbpedia.org/property/father> ?v3 . },"```sparql
SELECT ?result WHERE {
  # Find successor of Charles the Bald and their parent
  ?charlesBald dbo:successor ?successor .
  ?charlesBald rdfs:label ""Charles the Bald""@en .
  
  ?successor dbo:parent ?parentOfSuccessor .

  # Find Bernard, son of Charles the Fat, and his grandparent (father's parent)
  ?bernard dbo:parent ?fatherBernard .
  ?fatherBernard dbo:parent ?grandParentBernard .
  ?charlesFat rdfs:label ""Charles the Fat""@en .
  ?bernard dbo:childOf ?charlesFat .

  # Find spouse of Bernard's grandparent
  OPTIONAL {
    ?grandParentBernard dbo:spouse ?spouseGrandParent .
  }

  # Find child of Louis the German that is royalty and their parent
  OPTIONAL {
    ?louisGerman dbo:child ?royalChild .
    ?louisGerman rdfs:label ""Louis the",7,8,8,3,3,3,3,71,0,0,1,0,0.0,0
236,18,test,"Give me the party member of the administration, that is an organisation, of the person decedent, that is a politician and an office holder, at Quincy, Massachusetts and party member of the administration of James Madison.","SELECT ?result WHERE { ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?v3 <http://dbpedia.org/property/leader> <http://dbpedia.org/resource/James_Madison> . ?v2 <http://dbpedia.org/property/leader> ?v1 . ?result <http://dbpedia.org/ontology/party> ?v2 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?result <http://dbpedia.org/ontology/party> ?v3 . ?v1 <http://dbpedia.org/ontology/deathPlace> <http://dbpedia.org/resource/Quincy,_Massachusetts> . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. }","```sparql
SELECT ?person WHERE {
  # Find politician and office holder associated with Quincy, Massachusetts
  ?person dbo:officeHolder true .
  ?person dbo:politicalAffiliation ?party .
  
  OPTIONAL { 
    ?person dbo:placeOfBirth ?quincy .
    ?quincy rdfs:label ""Quincy, Massachusetts""@en .
  }
  
  OPTIONAL {
    ?person dbo:residence ?quincyResidence .
    ?quincyResidence rdfs:label ""Quincy, Massachusetts""@en .
  }

  # Check if they were part of James Madison's administration
  OPTIONAL {
    ?madisonAdministration dbo:member ?person .
    ?madisonAdministration dbo:president dbr:James_Madison .
  }
}
```",5,8,6,3,2,3,2,20,0,0,19,0,0.0,0
645,60,test,"Give me the commander in the force of the commander in Siege of Madrid and leader of the office, that is a government agency and an organisation, of the native of Restoration (Spain).",SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/GovernmentAgency>. <http://dbpedia.org/resource/Siege_of_Madrid> <http://dbpedia.org/ontology/commander> ?v3 . ?v0 <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Restoration_(Spain)> . ?v1 <http://dbpedia.org/ontology/leader> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?v2 <http://dbpedia.org/ontology/commander> ?result . ?v0 <http://dbpedia.org/property/office> ?v1 . ?v2 <http://dbpedia.org/ontology/commander> ?v3 . },"```sparql
SELECT ?commanderInForce WHERE {
  # Find commander in the force during Siege of Madrid
  ?siege dbo:commander ?commander .
  ?siege rdfs:label ""Siege of Madrid""@en .

  # Find native to Restoration (Spain)
  ?native dbo:nationality dbc:Restoration_(Spain) .
  
  # Identify government agency or organization led by the native
  ?office dbo:leader ?native ;
          a dbo:GovernmentAgency, dbo:Organization .

  # Find leader of that office
  ?officeLeader dbo:leader ?commanderInForce .
}
```",6,8,7,3,2,3,3,71,0,0,3,0,0.0,0
442,8,test,Give me the resting place of Allyn K. Capron and resting place of the actor of This Side of Heaven.,SELECT ?result WHERE { <http://dbpedia.org/resource/Allyn_K._Capron> <http://dbpedia.org/ontology/restingPlace> ?result . ?v0 <http://dbpedia.org/ontology/restingPlace> ?result . <http://dbpedia.org/resource/This_Side_of_Heaven> <http://dbpedia.org/ontology/starring> ?v0 . },"```sparql
SELECT ?allynRestingPlace ?actorName ?actorRestingPlace WHERE {
  # Find the resting place of Allyn K. Capron
  ?allyn dbo:deathPlace ?allynRestingPlace .
  ?allyn rdfs:label ""Allyn K. Capron""@en .

  OPTIONAL {
    # Identify an actor associated with ""This Side of Heaven""
    ?film dbo:starring ?actor .
    ?film rdfs:label ""This Side of Heaven""@en .
    
    # Get the name and resting place of that actor
    ?actor rdfs:label ?actorName .
    OPTIONAL { ?actor dbo:deathPlace ?actorRestingPlace . }
  }
}
```",3,3,4,2,2,2,2,9,0,0,1,0,0.0,0
216,61,test,"Give me the team of the person born, that is a sports manager and a soccer manager and a soccer player, on the death of Pavel Vezhinov and player in the coach, that is a soccer player and a sports manager and a soccer manager, of the player, that is an organisation and a sports club and a soccer club, in Džemal Berberović.",SELECT ?result WHERE { ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsManager>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsClub>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerManager>. ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerManager>. ?v0 <http://dbpedia.org/ontology/coach> ?v5 . <http://dbpedia.org/resource/Pavel_Vezhinov> <http://dbpedia.org/ontology/deathDate> ?v1 . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsManager>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerPlayer>. ?v3 <http://dbpedia.org/ontology/birthDate> ?v1 . ?result <http://dbpedia.org/ontology/coach> ?v3 . ?v5 <http://dbpedia.org/ontology/team> ?result . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerClub>. <http://dbpedia.org/resource/Džemal_Berberović> <http://dbpedia.org/ontology/team> ?v0 . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerPlayer>. },"```sparql
SELECT ?team WHERE {
  # Find Pavel Vezhinov's death date
  ?vezhinov dbo:deathDate ?deathDate .
  ?vezhinov rdfs:label ""Pavel Vezhinov""@en .

  # Find a sports manager and soccer manager born on that date
  OPTIONAL {
    ?person dbo:birthDate ?birthDate ;
            dbo:occupation ?occupation1, ?occupation2 .
    FILTER (?birthDate = ?deathDate)
    FILTER (CONTAINS(LCASE(str(?occupation1)), ""sports manager"") && CONTAINS(LCASE(str(?occupation2)), ""soccer manager""))
  }

  # Find Džemal Berberović's team
  OPTIONAL {
    ?berberovic dbo:team ?team .
    ?berberovic rdfs:label ""Džemal Berberović""@en .
  }

  # Find a player who is also a sports manager and soccer manager in that team
  OPTIONAL {
    ?player dbo:occupation ?occupation1, ?occupation2 ;
            dbo:playsFor ?team .
    FILTER (CONTAINS(LCASE(str(?occupation1)), ""sports manager"") && CONTAINS(LCASE(str(?occupation2)), ""soccer manager""))
  }

  # Ensure the player is associated with an organization, sports club, and soccer club
  OPTIONAL {
    ?player dbo:memberOf ?organization .
    FILTER (CONTAINS(LCASE(str(?organization)), ""organisation"") &&
            CONTAINS(LCASE(str(?organization)), ""sports club"") &&
            CONTAINS(LCASE(str(?organization)), ""soccer club""))
  }
}
```",6,15,7,3,2,3,3,71,0,10,1,0.0,0.0,0
365,18,test,"Give me the person born as the birth name of the commander, that is an office holder, in Ukrainian–Soviet War and spouse of the native, that is a politician, of Poltava Governorate.",SELECT ?result WHERE { ?v3 <http://dbpedia.org/ontology/spouse> ?result . ?v1 <http://dbpedia.org/property/birthName> ?v2 . ?v3 <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Poltava_Governorate> . <http://dbpedia.org/resource/Ukrainian–Soviet_War> <http://dbpedia.org/ontology/commander> ?v1 . ?result <http://dbpedia.org/property/birthName> ?v2 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. },"```sparql
SELECT ?person WHERE {
  # Find commander involved in the Ukrainian-Soviet War and their birth name
  ?commander dbo:birthName ?birthName .
  ?commander dbo:officeHolder ""Ukrainian–Soviet War""@en .
  
  # Ensure this person is an office holder
  ?commander dbo:occupation ""Office Holder""@en .

  # Find the spouse of this commander who is a politician from Poltava Governorate
  ?commander dbo:spouse ?spouse .
  ?spouse dbo:nativeCountry ""Poltava Governorate""@en .
  ?spouse dbo:occupation ""Politician""@en .
  
  BIND(?commander AS ?person)
}
```",5,7,6,3,2,3,2,20,0,0,1,0,0.0,0
965,62,test,"Give me the parent of George Mountbatten, 2nd Marquess of Milford Haven and spouse of the spouse of the parent of Louise Mountbatten and parent of the child, that is a royalty, of the person born, that is a politician, on 1854-05-24.","SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v1 <http://dbpedia.org/ontology/birthDate> ""1854-05-24""^^<http://www.w3.org/2001/XMLSchema#date> . ?v5 <http://dbpedia.org/property/father> ?v1 . <http://dbpedia.org/resource/George_Mountbatten,_2nd_Marquess_of_Milford_Haven> <http://dbpedia.org/ontology/parent> ?result . ?result <http://dbpedia.org/ontology/spouse> ?v2 . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. <http://dbpedia.org/resource/Louise_Mountbatten> <http://dbpedia.org/ontology/parent> ?v4 . ?v4 <http://dbpedia.org/ontology/spouse> ?v2 . ?v5 <http://dbpedia.org/ontology/parent> ?result . }","```sparql
SELECT ?grandparentSpouse WHERE {
  # Find George Mountbatten, 2nd Marquess of Milford Haven and his parent
  ?george dbo:parent ?parent .
  ?george rdfs:label ""George Mountbatten, 2nd Marquess of Milford Haven""@en .

  # Find the spouse of this parent
  OPTIONAL { 
    ?parent dbo:spouse ?grandparentSpouse .
  }

  # Find Louise Mountbatten and her parent
  ?louise dbo:parent ?louiseParent .
  ?louise rdfs:label ""Louise Mountbatten""@en .

  # Find the spouse of Louise's parent (her grandparent)
  OPTIONAL {
    ?louiseParent dbo:spouse ?grandparentSpouse .
  }

  # Ensure there is a child of this grandparent who is royalty
  OPTIONAL {
    ?child dbo:parent ?grandparentSpouse .
    ?child rdf:type dbo:Royal .
  }

  # Find the person born on 1854-05-24 who is a politician
  ?politician dbo:birthDate ""1854-05-24""^^xsd:date .
  ?politician dbo:occupation dbc:Politicians .
}
```",7,9,8,3,3,3,3,71,0,0,2,0,0.0,0
573,59,test,"Give me the person decedent at the administration, that is a region, of the real name of Charlie Baker (Australian footballer) and person decedent at the residence, that is a settlement, of the professional, that is American, in Politician.","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/deathPlace> ?v2 . ?v0 <http://dbpedia.org/property/residence> ?v5 . ?v2 <http://dbpedia.org/property/governor> ?v3 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Region>. ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. ?v0 <http://dbpedia.org/property/occupation> ""Politician""@en . ?v0 <http://dbpedia.org/ontology/nationality> <http://dbpedia.org/resource/United_States>. ?result <http://dbpedia.org/ontology/deathPlace> ?v5 . <http://dbpedia.org/resource/Charlie_Baker_(Australian_footballer)> <http://xmlns.com/foaf/0.1/name> ?v3 . }","```sparql
SELECT ?decedentAtAdmin ?decedentAtResidence WHERE {
  # Find Charlie Baker (Australian footballer) and his administration region
  ?charlieBaker dbo:birthName ?realName .
  ?charlieBaker rdfs:label ""Charlie Baker (Australian footballer)""@en .
  
  OPTIONAL {
    ?adminRegion dbo:administrativeUnitOf ?realName .
    ?decedentAtAdmin dbo:deathPlace ?adminRegion .
  }
  
  # Find an American politician and their residence
  ?politician dbo:nationality dbc:United_States .
  ?politician dbo:profession dbc:Politicians_by_country.
  
  OPTIONAL {
    ?residence dbo:settlement ?politician .
    ?decedentAtResidence dbo:deathPlace ?residence .
  }
}
```",6,9,7,3,2,3,3,71,0,0,400,0,0.0,0
839,61,test,"Give me the band of the member of the band, that is a band and a group, of Peter Schorowsky and band of the band, that is a musical artist, of the professional in Musician.","SELECT ?result WHERE { ?v0 <http://dbpedia.org/ontology/bandMember> ?v5 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Group>. ?result <http://dbpedia.org/ontology/bandMember> ?v5 . ?result <http://dbpedia.org/ontology/bandMember> ?v3 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Band>. ?v1 <http://dbpedia.org/ontology/associatedMusicalArtist> ?v3 . <http://dbpedia.org/resource/Peter_Schorowsky> <http://dbpedia.org/ontology/associatedMusicalArtist> ?v0 . ?v1 <http://dbpedia.org/property/occupation> ""Musician""@en . }","```sparql
SELECT ?bandOfSchorowskyBand ?bandOfMusicianBand WHERE {
  # Find Peter Schorowsky and his band that is both a band and a group
  ?schorowsky dbo:member ?band .
  ?schorowsky rdfs:label ""Peter Schorowsky""@en .
  ?band rdf:type dbp:MusicalGroup .
  ?band rdf:type dbp:Band .

  # Find the band of this band (if it exists)
  OPTIONAL {
    ?band dbo:member ?subgroup .
    ?subgroup rdf:type dbp:MusicalGroup .
    ?subgroup rdf:type dbp:Band .
    BIND(?subgroup AS ?bandOfSchorowskyBand)
  }

  # Find a professional musician and their band
  ?musician dbo:occupation dbp:Musician .
  ?musician rdfs:label ?musicianLabel .
  
  OPTIONAL {
    ?musician dbo:member ?band2 .
    ?band2 rdf:type dbp:MusicalGroup .
    ?band2 rdf:type dbp:Band .

    # Find the band of this musician's band (if it exists)
    OPTIONAL {
      ?band2 dbo:member ?subgroup2 .
      ?subgroup2 rdf:type dbp:MusicalGroup .
      ?subgroup2 rdf:type dbp:Band .
      BIND(?subgroup2 AS ?bandOfMusicianBand)
    }
  }
}
```",6,9,7,3,2,3,3,71,0,0,1,0,0.0,0
987,71,test,"Give me the birth place of the actor of the show, that is a film, with Emir Hadžihafizbegović and entity in the region, that is a country, of the time zone, that is a sports event, in Canicosa de la Sierra and birth place of the band, that is an artist and a musical artist, of the band, that is an artist, of Dado Polumenta.",SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/associatedMusicalArtist> ?v2 . ?result <http://dbpedia.org/ontology/country> ?v8 . ?v4 <http://dbpedia.org/property/starring> ?v5 . ?v4 <http://dbpedia.org/ontology/starring> <http://dbpedia.org/resource/Emir_Hadžihafizbegović> . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?v7 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsEvent>. ?v5 <http://dbpedia.org/ontology/birthPlace> ?result . ?v8 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. <http://dbpedia.org/resource/Canicosa_de_la_Sierra> <http://dbpedia.org/ontology/timeZone> ?v7 . ?v8 <http://dbpedia.org/property/timeZone> ?v7 . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Film>. <http://dbpedia.org/resource/Dado_Polumenta> <http://dbpedia.org/ontology/associatedMusicalArtist> ?v1 . ?v2 <http://dbpedia.org/ontology/birthPlace> ?result . },"```sparql
SELECT ?actorBirthPlace ?bandBirthPlace WHERE {
  # Step 1: Identify a film featuring Emir Hadžihafizbegović
  ?film dbo:starringEmirHadžihafizbegović _:b0 .
  
  # Step 2: Find an actor from the identified film and their birthplace
  ?actor dbo:actedInFilm ?film ;
         foaf:birthPlace ?actorBirthPlace .

  # Step 3: Identify a sports event in Canicosa de la Sierra and its time zone region/country
  ?event dbo:location ""Canicosa de la Sierra"" .
  ?event dbo:timeZoneRegion ?region .
  
  # Step 4: Find Dado Povoln's band
  ?dadoPovoln foaf:name ""Dado Povoln""@en ;
              dbo:memberOfBand ?band1 .

  # Step 5: Identify another band related to the first band and its birthplace
  ?band2 dbo:relatedToBand ?band1 .
  ?band2 foaf:birthPlace ?bandBirthPlace .
}
```",9,15,10,3,3,3,3,71,0,0,1,0,0.0,0
326,20,test,"Give me the resident of the birthplace, that is a state and British, of the professional in Writer and person decedent at the award, that is a country, of the awardee of French Legion of Honor.","SELECT ?result WHERE { ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. ?v1 <http://dbpedia.org/property/occupation> ""Writer""@en . ?result <http://dbpedia.org/ontology/deathPlace> ?v5 . ?v4 <http://dbpedia.org/property/awards> ""French Legion of Honor""@en . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/AdministrativeRegion>. ?v2 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/United_Kingdom>. ?result <http://dbpedia.org/property/residence> ?v2 . ?v4 <http://dbpedia.org/property/awards> ?v5 . ?v1 <http://dbpedia.org/ontology/birthPlace> ?v2 . }","```sparql
SELECT ?resident WHERE {
  # Find awardees of the French Legion of Honor
  ?awardee dbo:awardReceived dbr:French_Legion_of_Honor .
  
  # Filter for professional writers who are decedents
  ?awardee dbo:occupation ""Writer""@en ;
          dbo:deathPlace ?decedentPlace .

  # Determine the birthplace, ensuring it is a state in a British country
  ?awardee dbo:birthPlace ?birthPlace .
  ?birthPlace rdf:type dbo:State ;
              dbo:country dbr:United_Kingdom .

  # Find the resident of this birthplace
  ?resident dbo:residence ?birthPlace .
}
```",6,9,7,3,2,3,2,20,0,0,1,0,0.0,0
839,68,test,"Give me the band of the band, that is a musical artist, of Charlie Huhn and band of the member of the band, that is a band and a group, of Peter Schorowsky and band of the person born, that is a musical artist, as the persona of Kevin Russell (musician).",SELECT ?result WHERE { ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Band>. <http://dbpedia.org/resource/Peter_Schorowsky> <http://dbpedia.org/ontology/associatedMusicalArtist> ?v0 . ?v4 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. <http://dbpedia.org/resource/Charlie_Huhn> <http://dbpedia.org/ontology/associatedMusicalArtist> ?v3 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Group>. ?v0 <http://dbpedia.org/ontology/bandMember> ?v7 . <http://dbpedia.org/resource/Kevin_Russell_(musician)> <http://xmlns.com/foaf/0.1/givenName> ?v5 . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?v4 <http://dbpedia.org/property/birthName> ?v5 . ?result <http://dbpedia.org/ontology/bandMember> ?v7 . ?result <http://dbpedia.org/ontology/bandMember> ?v3 . },"```sparql
SELECT ?charlieBand ?peterBand ?kevinBand WHERE {
  # Find the band of Charlie Huhn that is a musical artist
  ?charlieHuhn dbo:associatedBand ?band .
  ?band rdf:type dbo:MusicalArtist .
  ?charlieHuhn rdfs:label ""Charlie Huhn""@en .

  # Find the band of Peter Schorowsky that is both a band and a group
  ?peterSchorowsky dbo:memberOf ?band .
  ?band rdf:type dbo:Band, dbo:MusicalGroup .
  ?peterSchorowsky rdfs:label ""Peter Schorowsky""@en .

  # Find the band of Kevin Russell (musician) based on his birth
  ?kevinRussell dbo:birthPlace ?place .
  ?kevinRussell rdf:type dbo:MusicalArtist .
  ?kevinRussell dbo:associatedBand ?band .
  ?kevinRussell rdfs:label ""Kevin Russell (musician)""@en .

}
```",8,12,9,3,3,3,3,71,0,0,1,0,0.0,0
433,65,test,"Give me the professional in the profession of Bob Marley and associated musical artist of the person born, that is a musical artist and an artist, as Paul Laurence Dunbar Chambers Jr. and associated musical artist of the associated musical artist, that is an artist and a musical artist, of the associated musical artist, that is a musical artist and an artist, of Ornette Coleman.","SELECT ?result WHERE { ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. ?result <http://dbpedia.org/property/occupation> ?v3 . <http://dbpedia.org/resource/Bob_Marley> <http://dbpedia.org/property/occupation> ?v3 . ?v6 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. <http://dbpedia.org/resource/Ornette_Coleman> <http://dbpedia.org/ontology/associatedMusicalArtist> ?v0 . ?v6 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?v0 <http://dbpedia.org/ontology/associatedMusicalArtist> ?v6 . ?v4 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?v6 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. ?v4 <http://dbpedia.org/property/birthName> ""Paul Laurence Dunbar Chambers Jr.""@en . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. }","```sparql
SELECT ?finalArtist WHERE {
  # Step 1: Find Bob Marley and his profession
  ?bobMarley dbo:profession dbr:Musician .
  ?bobMarley rdfs:label ""Bob Marley""@en .

  # Step 2: Find associated musical artist of Paul Laurence Dunbar Chambers Jr.
  OPTIONAL {
    ?chambers dbo:associatedMusicalArtist ?artist1 .
    ?chambers rdfs:label ""Paul Laurence Dunbar Chambers Jr.""@en .
    FILTER (regex(str(?artist1), ""Musician"", ""i"") && regex(str(?artist1), ""Artist"", ""i""))
  }

  # Step 3: Find associated musical artist of Ornette Coleman
  OPTIONAL {
    ?coleman dbo:associatedMusicalArtist ?artist2 .
    ?coleman rdfs:label ""Ornette Coleman""@en .
    FILTER (regex(str(?artist2), ""Musician"", ""i"") && regex(str(?artist2), ""Artist"", ""i""))
  }

  # Step 4: Connect the final artist
  OPTIONAL {
    ?artist1 dbo:associatedMusicalArtist ?finalArtist .
    FILTER (regex(str(?finalArtist), ""Musician"", ""i"") && regex(str(?finalArtist), ""Artist"", ""i""))
  }
}
```",7,13,8,3,3,3,3,71,0,0,4,0,0.0,0
773,62,test,"Give me the spouse of the father of the parent of Bernard (son of Charles the Fat) and parent of the successor of the child, that is a royalty, of Louis the Pious and parent of Charles the Fat.",SELECT ?result WHERE { <http://dbpedia.org/resource/Charles_the_Fat> <http://dbpedia.org/ontology/parent> ?result . ?v3 <http://dbpedia.org/ontology/spouse> ?result . ?v0 <http://dbpedia.org/ontology/successor> ?v6 . ?result <http://dbpedia.org/ontology/child> ?v6 . ?v4 <http://dbpedia.org/property/father> ?v3 . ?v4 <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Bernard_(son_of_Charles_the_Fat)> . <http://dbpedia.org/resource/Louis_the_Pious> <http://dbpedia.org/ontology/child> ?v0 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. },"```sparql
SELECT ?spouse WHERE {
  # Step 1: Identify Bernard, son of Charles the Fat
  ?bernard dbo:parent ?charlesFat .
  ?charlesFat rdfs:label ""Charles the Fat""@en .

  # Step 2: Find father of Charles the Fat
  ?charlesFat dbo:parent ?fatherOfCharlesFat .

  # Step 3: Identify Louis the Pious and his child (successor)
  ?louisPious dbo:child ?successor .
  ?louisPious rdfs:label ""Louis the Pious""@en .

  # Step 4: Find parent of the successor, ensuring they are royalty
  ?successor dbo:parent ?royalParent .
  
  # Step 5: Determine spouse of father of Charles the Fat
  ?fatherOfCharlesFat dbo:spouse ?spouse .
}
```",7,8,8,3,3,3,3,71,0,0,1,0,0.0,0
166,19,test,"Give me the entity in the territory administered, that is a country, from the reference to Madrid and resting place of the military force of Spanish Civil War.","SELECT ?result WHERE { ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. ?v0 <http://xmlns.com/foaf/0.1/name> ""Madrid""@en . ?v4 <http://dbpedia.org/ontology/capital> ?v0 . ?v2 <http://dbpedia.org/ontology/restingPlace> ?result . ?result <http://dbpedia.org/ontology/country> ?v4 . ?v2 <http://dbpedia.org/ontology/battle> <http://dbpedia.org/resource/Spanish_Civil_War> . }","```sparql
SELECT ?entity WHERE {
  # Find entities related to Madrid
  ?madrid dbo:location ?entity .
  ?madrid rdfs:label ""Madrid""@en .

  # Identify the resting place of military forces from the Spanish Civil War
  OPTIONAL {
    ?civilWarMilitaryForce dbo:restingPlace ?entity .
    ?civilWarMilitaryForce rdfs:label ""Spanish Civil War Military Force""@en .
  }

  # Ensure the entity is a country that administers the territory
  ?entity rdf:type dbo:Country .
}
```",5,6,6,3,2,3,2,20,0,0,4,0,0.0,0
582,71,test,"Give me the figure known as the nickname of the team, that is an organisation, of Hajime Moriyasu and player in the father, that is an athlete and a soccer manager and a sports manager, of the child of Kazuaki Nagasawa and reference to the residence of the reference, that is a scientist, to Hirotaka Sugawara.","SELECT ?result WHERE { ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Athlete>. ?v4 <http://dbpedia.org/property/father> ?v5 . ?v1 <http://dbpedia.org/property/residence> ?v2 . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerManager>. ?v7 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?v7 <http://dbpedia.org/property/nickname> ?v8 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Scientist>. ?result <http://dbpedia.org/property/nickname> ?v8 . ?v5 <http://dbpedia.org/ontology/team> ?result . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsManager>. ?v7 <http://dbpedia.org/ontology/coach> <http://dbpedia.org/resource/Hajime_Moriyasu> . ?v1 <http://xmlns.com/foaf/0.1/name> ""Hirotaka Sugawara""@en . ?v4 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Kazuaki_Nagasawa> . ?result <http://xmlns.com/foaf/0.1/name> ?v2 . }","```sparql
# Step 1: Find Hajime Moriyasu's team nickname
SELECT ?teamNick WHERE {
  ?hajime dbo:managerOf ?team .
  ?team rdfs:label ""Japan national football team""@en .
  ?team dbo:nickname ?teamNick .
  ?hajime rdfs:label ""Hajime Moriyasu""@en .
}

# Step 2: Find the father of Kazuaki Nagasawa's child
SELECT ?father WHERE {
  ?kazuaki dbo:child ?child .
  ?child dbo:parent ?father .
  ?father rdf:type dbo:Athlete ;
          dbo:soccerManager true ;
          dbo:sportsManager true .
  ?kazuaki rdfs:label ""Kazuaki Nagasawa""@en .
}

# Step 3: Find the residence reference for Hirotaka Sugawara
SELECT ?residence WHERE {
  ?hirotaka dbo:referenceTo ?scientist .
  ?scientist dbo:residence ?residence .
  ?hirotaka rdfs:label ""Hirotaka Sugawara""@en .
}
```",9,14,10,3,3,3,3,71,0,0,1,0,0.0,0
433,63,test,"Give me the associated musical artist of the person born, that is a musical artist and an artist, as the persona of Paul Chambers and associated musical artist of the associated musical artist, that is an artist and a musical artist, of Scott LaFaro and professional in the profession of Bob Marley.",SELECT ?result WHERE { <http://dbpedia.org/resource/Scott_LaFaro> <http://dbpedia.org/ontology/associatedMusicalArtist> ?v6 . ?v3 <http://dbpedia.org/property/birthName> ?v4 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. <http://dbpedia.org/resource/Paul_Chambers> <http://xmlns.com/foaf/0.1/givenName> ?v4 . ?v6 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. <http://dbpedia.org/resource/Bob_Marley> <http://dbpedia.org/property/occupation> ?v2 . ?result <http://dbpedia.org/property/occupation> ?v2 . ?v3 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v6 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. ?v6 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . },"```sparql
SELECT ?finalArtist WHERE {
  # Step 1: Find the person associated with Paul Chambers who is both a musical artist and an artist
  ?paulChambers dbo:associatedMusicalArtist ?artist1 .
  ?paulChambers rdfs:label ""Paul Chambers""@en .
  ?artist1 rdf:type dbo:MusicalArtist ;
           rdf:type dbo:Artist .

  # Step 2: Find the person associated with Scott LaFaro who is both an artist and a musical artist
  ?scottLaFaro dbo:associatedMusicalArtist ?artist2 .
  ?scottLaFaro rdfs:label ""Scott LaFaro""@en .
  ?artist2 rdf:type dbo:MusicalArtist ;
           rdf:type dbo:Artist .

  # Step 3: Ensure the profession of this artist matches Bob Marley's profession
  ?bobMarley dbo:profession ?profession .
  ?bobMarley rdfs:label ""Bob Marley""@en .
  ?artist2 dbo:profession ?profession .

  # Step 4: Find the associated musical artist of the person found in step 2
  ?artist2 dbo:associatedMusicalArtist ?finalArtist .
}
```",7,11,8,3,3,3,3,71,0,0,1,0,0.0,0
715,62,test,"Give me the commander in the force of the mayor, that is an office holder and a politician and a president, of 1933 Spanish general election and commander in the force, that is a military conflict, of the native of Morocco and leader of Ministry of the Air (Spain).",SELECT ?result WHERE { ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v3 <http://dbpedia.org/ontology/commander> ?result . <http://dbpedia.org/resource/1933_Spanish_general_election> <http://dbpedia.org/property/leader> ?v0 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/President>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. <http://dbpedia.org/resource/Ministry_of_the_Air_(Spain)> <http://dbpedia.org/ontology/leader> ?result . ?v4 <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Morocco> . ?v6 <http://dbpedia.org/ontology/commander> ?v0 . ?v3 <http://dbpedia.org/ontology/commander> ?v4 . ?v6 <http://dbpedia.org/ontology/commander> ?result . },"```sparql
SELECT ?commander WHERE {
  # Identify the mayor who is an office holder, politician, and president in 1933 Spanish general election
  ?mayor dbo:officeHolder ""OfficeHolder""@en .
  ?mayor dbo:politician ""Politician""@en .
  ?mayor dbo:president ""President""@en .
  ?mayor dbo:electionYear ""1933""^^xsd:gYear .

  # Find the commander in force of this mayor
  ?mayor dbo:commanderInForce ?commander .

  # Identify the military conflict involving a native of Morocco who led the Ministry of the Air (Spain)
  ?conflict dbo:nativeCountry dbr:Morocco .
  ?conflict dbo:leader ?ministryLeader .
  ?ministryLeader rdfs:label ""Ministry of the Air (Spain)""@en .

  # Ensure the commander is linked to this military conflict
  ?commander dbo:participatedIn ?conflict .
}
```",7,11,8,3,3,3,3,71,0,0,1,0,0.0,0
47,57,test,"Give me the office of the awardee of Padma Vibhushan and office of Suvendu Adhikari and office of the awardee of the award, that is an award, of Mantu Ghosh.",SELECT ?result WHERE { <http://dbpedia.org/resource/Suvendu_Adhikari> <http://dbpedia.org/property/office> ?result . ?v3 <http://dbpedia.org/property/office> ?result . ?v5 <http://dbpedia.org/property/awards> ?v0 . ?v3 <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/Padma_Vibhushan> . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Award>. ?v5 <http://dbpedia.org/property/office> ?result . <http://dbpedia.org/resource/Mantu_Ghosh> <http://dbpedia.org/property/awards> ?v0 . },"```sparql
SELECT ?padmaVibhushanOffice ?suvenduAdhikariOffice ?mantuGhoshAwardOffice WHERE {
  # Find office of Padma Vibhushan awardee
  ?person dbo:award ""Padma Vibhushan"" .
  ?person dbo:office ?padmaVibhushanOffice .

  # Find office of Suvendu Adhikari
  ?suvenduAdhikari rdfs:label ""Suvendu Adhikari""@en .
  ?suvenduAdhikari dbo:office ?suvenduAdhikariOffice .

  # Find award received by Mantu Ghosh and office of its awardees
  ?mantuGhosh rdfs:label ""Mantu Ghosh""@en .
  ?mantuGhosh dbo:award ?award .
  ?awardee dbo:award ?award .
  ?awardee dbo:office ?mantuGhoshAwardOffice .
}
```",6,7,7,3,3,3,3,71,0,0,1,0,0.0,0
433,58,test,"Give me the associated musical artist of Paul Chambers and professional in the profession of the writer of Slowhand at 70 – Live at the Royal Albert Hall and associated musical artist of the associated musical artist, that is an artist and a musical artist, of Scott LaFaro.",SELECT ?result WHERE { ?result <http://dbpedia.org/property/occupation> ?v2 . <http://dbpedia.org/resource/Scott_LaFaro> <http://dbpedia.org/ontology/associatedMusicalArtist> ?v5 . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. <http://dbpedia.org/resource/Paul_Chambers> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. <http://dbpedia.org/resource/Slowhand_at_70_–_Live_at_the_Royal_Albert_Hall> <http://dbpedia.org/property/writer> ?v1 . ?v5 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v1 <http://dbpedia.org/property/occupation> ?v2 . },"```sparql
SELECT ?finalArtist WHERE {
  # Step 1: Find the associated musical artist of Paul Chambers
  ?paulChambers dbo:musicalArtist ?associatedArtist1 .
  ?paulChambers rdfs:label ""Paul Chambers""@en .

  # Step 2: Identify Eric Clapton's profession and find a musician associated with ?associatedArtist1
  ?slowhandAlbum dbo:writer ?ericClapton .
  ?slowhandAlbum rdfs:label ""Slowhand at 70 – Live at the Royal Albert Hall""@en .
  ?ericClapton dbo:profession ?musicianProfession .
  FILTER(?musicianProfession = dbc:Musicians)

  ?associatedArtist1 dbo:musicalArtist ?finalArtist .
  ?finalArtist rdf:type dbc:Musicians .

  # Step 3: Find the associated musical artist of Scott LaFaro who is both an artist and a musician
  OPTIONAL {
    ?scottLaFaro dbo:musicalArtist ?artistAndMusician .
    ?scottLaFaro rdfs:label ""Scott LaFaro""@en .
    FILTER (?finalArtist = ?artistAndMusician)
    ?artistAndMusician rdf:type dbc:Musicians .
  }
}
```",6,8,7,3,3,3,3,71,0,0,1,0,0.0,0
987,56,test,"Give me the birth place of the band, that is an artist and a musical artist, of Šako Polumenta and birth place of Moamer Kasumović and entity in the region, that is a country, of the time zone, that is a sports event, in Canicosa de la Sierra.",SELECT ?result WHERE { ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. <http://dbpedia.org/resource/Canicosa_de_la_Sierra> <http://dbpedia.org/ontology/timeZone> ?v4 . <http://dbpedia.org/resource/Moamer_Kasumović> <http://dbpedia.org/ontology/birthPlace> ?result . <http://dbpedia.org/resource/Šako_Polumenta> <http://dbpedia.org/ontology/associatedMusicalArtist> ?v2 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsEvent>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?v0 <http://dbpedia.org/property/timeZone> ?v4 . ?v2 <http://dbpedia.org/ontology/birthPlace> ?result . ?result <http://dbpedia.org/ontology/country> ?v0 . },"```sparql
# Query for Band's Birth Place
SELECT ?bandBirthPlace WHERE {
  ?sako dbo:member|dbo:bandMember ?band .
  ?sako rdfs:label ""Šako Polumenta""@en .
  ?band dbo:birthPlace ?bandBirthPlace .
}

# Query for Moamer Kasumović's Birth Place
SELECT ?kasumovicBirthPlace WHERE {
  ?moamer dbo:birthPlace ?kasumovicBirthPlace .
  ?moamer rdfs:label ""Moamer Kasumović""@en .
}

# Query for Country in Canicosa de la Sierra's Time Zone Region
SELECT ?country WHERE {
  ?canicosa dbo:timeZone ?timezone .
  ?canicosa rdfs:label ""Canicosa de la Sierra""@en .
  ?region dbo:hasTimezone ?timezone .
  ?region dbo:country ?country .
}
```",6,10,7,3,3,3,3,71,0,0,1,0,0.0,0
445,70,test,"Give me the death place of the awardee of the establishment of 1820-03-10 and entity in the residence, that is a country, of Anna Sharkey and entity in the award of the commander in Battle of Saint-Mihiel.","SELECT ?result WHERE { ?v7 <http://dbpedia.org/ontology/deathPlace> ?result . ?result <http://dbpedia.org/ontology/country> ?v3 . <http://dbpedia.org/resource/Anna_Sharkey> <http://dbpedia.org/property/residence> ?v4 . <http://dbpedia.org/resource/Battle_of_Saint-Mihiel> <http://dbpedia.org/ontology/commander> ?v1 . ?result <http://dbpedia.org/ontology/location> ?v4 . ?v7 <http://dbpedia.org/property/awards> ?v0 . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. ?v0 <http://dbpedia.org/ontology/foundingDate> ""1820-03-10""^^<http://www.w3.org/2001/XMLSchema#date> . ?v1 <http://dbpedia.org/property/awards> ?v3 . }","```sparql
SELECT ?deathPlace ?country ?awardEntity WHERE {
  # Find the awardee associated with an establishment date of 1820-03-10
  ?awardee dbo:awardEstablished ""1820-03-10""^^xsd:date .
  
  # Get the death place of this awardee
  ?awardee dbo:deathPlace ?deathPlace .

  # Find Anna Sharkey's residence country
  ?annaSharkey foaf:name ""Anna Sharkey""@en .
  ?annaSharkey dbo:residenceLocation ?location .
  ?location a dbo:Country .
  BIND(str(?location) AS ?country)

  # Identify the commander in the Battle of Saint-Mihiel and their award
  ?battle dbo:commander ?commander .
  ?battle rdfs:label ""Battle of Saint-Mihiel""@en .
  
  OPTIONAL {
    ?commander dbo:award ?awardEntity .
  }
}
```",8,9,9,3,3,3,3,71,0,0,1,0,0.0,0
465,66,test,"Give me the successor of the child of Alfonso I d'Este and spouse of the child, that is a royalty, of Ferdinand I, Holy Roman Emperor and successor of the child, that is a royalty, of the parent of Charles Orlando, Dauphin of France.","SELECT ?result WHERE { ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v6 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. <http://dbpedia.org/resource/Ferdinand_I,_Holy_Roman_Emperor> <http://dbpedia.org/ontology/child> ?v6 . ?result <http://dbpedia.org/ontology/spouse> ?v6 . ?v2 <http://dbpedia.org/ontology/successor> ?result . ?v1 <http://dbpedia.org/ontology/child> ?v2 . ?v3 <http://dbpedia.org/ontology/successor> ?result . ?v3 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Alfonso_I_d'Este> . <http://dbpedia.org/resource/Charles_Orlando,_Dauphin_of_France> <http://dbpedia.org/ontology/parent> ?v1 . }","```sparql
SELECT ?successor WHERE {
  # Alfonso I d'Este's child and their royal spouse
  ?alfonsoChild dbo:parent dbc:Alfonso_I_d%27Este .
  ?royalSpouse dbo:spouse ?alfonsoChild .
  FILTER (regex(str(?royalSpouse), ""Royalty"", ""i"")) .

  # Successor of the royal spouse
  ?royalSpouse dbo:successor ?successor1 .

  # Ferdinand I's child who is royalty and their successor
  ?ferdinandChild dbo:parent dbc:Ferdinand_I,_Holy_Roman_Emperor .
  FILTER (regex(str(?ferdinandChild), ""Royalty"", ""i"")) .
  ?ferdinandChild dbo:successor ?successor2 .

  # Charles Orlando's parent and their royal child
  ?charlesParent dbo:child dbc:Charles_Orlando,_Dauphin_of_France .
  ?royalChild dbo:parent ?charlesParent .
  FILTER (regex(str(?royalChild), ""Royalty"", ""i"")) .
  ?royalChild dbo:successor ?successor3 .

  # Find the common successor
  FILTER (?successor1 = ?successor2 && ?successor2 = ?successor3)
}
```",7,9,8,3,3,3,3,71,0,0,1,0,0.0,0
98,28,test,"Give me the birth place of the person born as Paolo Elito M. Ballesteros IV and region of the time zone of Lopez Jaena and entity in the region, that is a country, of Philippine Standard Time.","SELECT ?result WHERE { <http://dbpedia.org/resource/Lopez_Jaena> <http://dbpedia.org/ontology/timeZone> ?v1 . ?v3 <http://dbpedia.org/property/birthName> ""Paolo Elito M. Ballesteros IV""@en . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. ?result <http://dbpedia.org/ontology/country> ?v5 . ?result <http://dbpedia.org/ontology/timeZone> ?v1 . ?v5 <http://dbpedia.org/property/timeZone> <http://dbpedia.org/resource/Philippine_Standard_Time> . ?v3 <http://dbpedia.org/ontology/birthPlace> ?result . }","```sparql
SELECT ?birthPlace ?region ?country WHERE {
  # Find Paolo Elito M. Ballesteros IV's birthplace
  ?person dbo:name ""Paolo Elito M. Ballesteros IV""@en .
  ?person dbo:birthPlace ?birthPlace .

  # Identify the time zone of Lopez, Jaena and its region
  ?lorenzo dbp:timeZone ?timeZone .
  ?lorenzo rdfs:label ""Lopez, Jaena""@en .
  ?region dbp:timezone ?timeZone .
  
  # Find a country in that region using PST
  ?country dbo:timeZone ?pst .
  ?pst rdfs:label ""Philippine Standard Time""@en .
  ?country rdf:type dbo:Country .
  FILTER (?region = ?countryRegion)
}
```",6,7,7,2,3,2,3,28,0,0,2,0,0.0,0
47,68,test,"Give me the office of the administration of the commander, that is a politician, in Operation Green Hunt and office of the awardee of the award, that is an award, of Mantu Ghosh and office of the awardee of Padma Vibhushan.",SELECT ?result WHERE { ?v4 <http://dbpedia.org/property/governor> ?v5 . ?v7 <http://dbpedia.org/property/awards> ?v0 . <http://dbpedia.org/resource/Operation_Green_Hunt> <http://dbpedia.org/ontology/commander> ?v5 . ?v3 <http://dbpedia.org/property/office> ?result . ?v3 <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/Padma_Vibhushan> . <http://dbpedia.org/resource/Mantu_Ghosh> <http://dbpedia.org/property/awards> ?v0 . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v7 <http://dbpedia.org/property/office> ?result . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Award>. ?v4 <http://dbpedia.org/property/office> ?result . },"```sparql
# Query for the office of the administration of the commander in Operation Green Hunt
SELECT ?office WHERE {
  ?operation dbo:commander ?commander .
  ?operation rdfs:label ""Operation Green Hunt""@en .
  ?commander rdf:type dbo:Politician .
  ?commander dbo:position ?office .
}

UNION

# Query for the office of the awardee of an award by Mantu Ghosh
SELECT ?awardeeOffice WHERE {
  ?award dbo:recipient ?awardee .
  ?award dbo:givenBy ""Mantu Ghosh""@en .
  ?awardee dbo:position ?awardeeOffice .
}

UNION

# Query for the office of the awardee of Padma Vibhushan
SELECT ?awardeeOffice WHERE {
  ?recipient dbo:receivedAward ?award .
  ?award rdfs:label ""Padma Vibhushan""@en .
  ?recipient dbo:position ?awardeeOffice .
}
```",8,10,9,3,3,3,3,71,0,0,1,0,0.0,0
582,70,test,"Give me the player in the father, that is an athlete and a soccer manager and a sports manager, of the child of Kazuaki Nagasawa and figure known as the nickname of the team, that is an organisation, of Hajime Moriyasu and reference to the residence of Hirotaka Sugawara.",SELECT ?result WHERE { <http://dbpedia.org/resource/Hirotaka_Sugawara> <http://dbpedia.org/property/residence> ?v4 . ?v0 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Kazuaki_Nagasawa> . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?v7 <http://dbpedia.org/ontology/team> ?result . ?v1 <http://dbpedia.org/ontology/coach> <http://dbpedia.org/resource/Hajime_Moriyasu> . ?v7 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Athlete>. ?v7 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsManager>. ?v0 <http://dbpedia.org/property/father> ?v7 . ?v7 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerManager>. ?result <http://dbpedia.org/property/nickname> ?v3 . ?result <http://xmlns.com/foaf/0.1/name> ?v4 . ?v1 <http://dbpedia.org/property/nickname> ?v3 . },"```sparql
SELECT ?father WHERE {
  # Find child of Kazuaki Nagasawa
  ?child dbo:parent ?nagasawa .
  ?nagasawa rdfs:label ""Kazuaki Nagasawa""@en .

  # Find father who is an athlete, soccer manager, and sports manager
  ?child dbo:parent ?father .
  ?father rdf:type ?type1 .
  ?father rdf:type ?type2 .
  ?father rdf:type ?type3 .
  
  FILTER (?type1 = dbp:Athlete || ?type1 = dbp:SoccerManager || ?type1 = dbp:SportsManager)
  FILTER (?type2 = dbp:Athlete || ?type2 = dbp:SoccerManager || ?type2 = dbp:SportsManager)
  FILTER (?type3 = dbp:Athlete || ?type3 = dbp:SoccerManager || ?type3 = dbp:SportsManager)

  # Find nickname of Hajime Moriyasu's team
  OPTIONAL {
    ?team dbo:manager ?moriyasu .
    ?moriyasu rdfs:label ""Hajime Moriyasu""@en .
    ?team dbo:nickname ?nickname .
  }

  # Reference residence associated with Hirotaka Sugawara
  OPTIONAL {
    ?sugawara dbo:residence ?residence .
    ?sugawara rdfs:label ""Hirotaka Sugawara""@en .
  }
}
```",8,12,9,3,3,3,3,71,0,0,1,0,0.0,0
274,24,test,"Give me the associated musical artist of the actor, that is a musical artist, of Imagine the Sound and professional in the designer of Tetris Classic.",SELECT ?result WHERE { ?result <http://dbpedia.org/property/occupation> ?v2 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. <http://dbpedia.org/resource/Tetris_Classic> <http://dbpedia.org/property/designer> ?v2 . <http://dbpedia.org/resource/Imagine_the_Sound> <http://dbpedia.org/property/starring> ?v0 . ?v0 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . },"```sparql
SELECT ?musicalArtist WHERE {
  # Step 1: Find the actor associated with ""Imagine the Sound""
  ?sound dbo:actor ?actor .
  ?sound rdfs:label ""Imagine the Sound""@en .

  # Step 2: Check if this actor is also a musical artist
  ?actor dbo:musicalArtist ?musicalArtist .

  # Step 3: Find the designer of Tetris Classic
  ?tetrisClassic dbo:designer ?designer .
  ?tetrisClassic rdfs:label ""Tetris Classic""@en .

  # Step 4: Identify professional association between musical artist and designer
  OPTIONAL {
    ?musicalArtist dbo:professionalAssociation ?designer .
  }
}
```",4,5,5,2,2,2,3,28,0,0,6,0,0.0,0
582,63,test,"Give me the player in the father, that is an athlete and a soccer manager and a sports manager, of Masami Nagasawa and reference to the residence of the reference, that is a scientist, to Hirotaka Sugawara and figure known as the nickname of Japan national football team.","SELECT ?result WHERE { <http://dbpedia.org/resource/Masami_Nagasawa> <http://dbpedia.org/property/father> ?v6 . ?v6 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Athlete>. ?result <http://dbpedia.org/property/nickname> ?v2 . ?result <http://xmlns.com/foaf/0.1/name> ?v3 . ?v4 <http://xmlns.com/foaf/0.1/name> ""Hirotaka Sugawara""@en . ?v6 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsManager>. ?v4 <http://dbpedia.org/property/residence> ?v3 . <http://dbpedia.org/resource/Japan_national_football_team> <http://dbpedia.org/property/nickname> ?v2 . ?v6 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerManager>. ?v6 <http://dbpedia.org/ontology/team> ?result . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Scientist>. }","```sparql
SELECT ?father ?residence ?nickname WHERE {
  # Find Masami Nagasawa and her father who is an athlete, soccer manager, and sports manager
  ?nagasawa dbo:parent ?father .
  ?nagasawa rdfs:label ""Masami Nagasawa""@en .
  
  # Ensure the father is an athlete, soccer manager, and sports manager
  ?father rdf:type dbo:Athlete ;
          dbo:sportManagerType dbo:SoccerManager ;
          dbo:occupation dbo:SportsManager .

  # Find a residence related to this person that connects to Hirotaka Sugawara
  OPTIONAL {
    ?residence dbo:resident ?father .
    ?scientist dbo:worksFor ?residence .
    ?scientist rdfs:label ""Hirotaka Sugawara""@en .
  }

  # Identify the nickname of the Japan national football team
  ?team dbo:nickname ?nickname .
  ?team rdfs:label ""Japan national football team""@en .
}
```",7,11,8,3,3,3,3,71,0,0,1,0,0.0,0
98,24,test,"Give me the birth place of the person born as Paolo Elito M. Ballesteros IV and entity in the region, that is a country, of Philippine Standard Time.","SELECT ?result WHERE { ?v2 <http://dbpedia.org/ontology/birthPlace> ?result . ?v1 <http://dbpedia.org/property/timeZone> <http://dbpedia.org/resource/Philippine_Standard_Time> . ?result <http://dbpedia.org/ontology/country> ?v1 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. ?v2 <http://dbpedia.org/property/birthName> ""Paolo Elito M. Ballesteros IV""@en . }","```sparql
SELECT ?birthPlace ?country WHERE {
  # Find the birth place of Paolo Elito M. Ballesteros IV
  ?person rdfs:label ""Paolo Elito M. Ballesteros IV""@en .
  ?person dbo:birthPlace ?birthPlace .

  # Identify the country in the region of Philippine Standard Time (PST)
  ?timeZone rdfs:label ""Philippine Standard Time""@en .
  ?region dbo:hasTimeZone ?timeZone .
  ?country dbo:locatedInRegion ?region .
}
```",4,5,5,2,2,2,3,28,0,0,2,0,0.0,0
839,71,test,"Give me the band of the person born, that is a musical artist, as the persona of Kevin Russell (musician) and band of the band, that is a musical artist, of the professional in Musician and band of the member of the band, that is a band and a group, of Peter Schorowsky.","SELECT ?result WHERE { ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Group>. ?v7 <http://dbpedia.org/ontology/associatedMusicalArtist> ?v8 . ?v8 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. <http://dbpedia.org/resource/Kevin_Russell_(musician)> <http://xmlns.com/foaf/0.1/givenName> ?v1 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?v4 <http://dbpedia.org/ontology/bandMember> ?v5 . ?result <http://dbpedia.org/ontology/bandMember> ?v5 . <http://dbpedia.org/resource/Peter_Schorowsky> <http://dbpedia.org/ontology/associatedMusicalArtist> ?v4 . ?result <http://dbpedia.org/ontology/bandMember> ?v8 . ?v7 <http://dbpedia.org/property/occupation> ""Musician""@en . ?v2 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v2 <http://dbpedia.org/property/birthName> ?v1 . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Band>. }","```sparql
# Query to find Kevin Russell's band
SELECT ?band WHERE {
  ?kevin dbo:birthPlace ?place .
  ?kevin rdfs:label ""Kevin Russell (musician)""@en .
  ?kevin dbo:memberOfBand ?band .
}

UNION

# Query to find the band associated with The Gourds
SELECT ?associatedBand WHERE {
  ?gourds dbo:member ?person .
  ?gourds rdfs:label ""The Gourds""@en .
  ?gourds dbo:associatedBand ?associatedBand .
}

UNION

# Query to find Peter Schorowsky's band
SELECT ?band WHERE {
  ?peter dbo:birthPlace ?place .
  ?peter rdfs:label ""Peter Schorowsky""@en .
  ?peter dbo:memberOfBand ?band .
}

UNION

# Query to find the band associated with The B-52's
SELECT ?associatedBand WHERE {
  ?b52s dbo:member ?person .
  ?b52s rdfs:label ""The B-52's""@en .
  ?b52s dbo:associatedBand ?associatedBand .
}
```",9,13,10,3,3,3,3,71,0,0,1,0,0.0,0
456,58,test,"Give me the band of the band, that is a musical artist, of the band of Alan Doyle and professional in the alter ego of The Shadow and spouse of Danielle Spencer (Australian actress).",SELECT ?result WHERE { <http://dbpedia.org/resource/Alan_Doyle> <http://dbpedia.org/ontology/associatedMusicalArtist> ?v1 . ?v1 <http://dbpedia.org/ontology/associatedMusicalArtist> ?v2 . ?result <http://dbpedia.org/property/occupation> ?v5 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. <http://dbpedia.org/resource/The_Shadow> <http://dbpedia.org/property/alterEgo> ?v5 . ?v2 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . <http://dbpedia.org/resource/Danielle_Spencer_(Australian_actress)> <http://dbpedia.org/ontology/spouse> ?result . },"```sparql
SELECT ?bandOfBand WHERE {
  # Alan Doyle's band
  ?doyle dbo:member ""Alan Doyle""@en .
  ?doyle dbo:name ""Great Big Sea""@en .

  # Great Big Sea as a musical artist
  ?greatBigSea dbo:genre ?musicalArtist .
  FILTER (regex(str(?musicalArtist), ""band"", ""i""))

  # Orson Welles' professional associations
  OPTIONAL {
    ?orsonWelles dbo:alterEgo ""The Shadow""@en .
    ?orsonWelles dbo:profession ?professional .
    FILTER (regex(str(?professional), ""radio actor|musician"", ""i""))
  }

  # Danielle Spencer's spouse
  OPTIONAL {
    ?danielleSpencer dbo:spouse ?spouse .
    ?danielleSpencer rdfs:label ""Danielle Spencer""@en .
  }

  # Spouse's band association
  OPTIONAL {
    ?spouse dbo:member ?band .
    FILTER (regex(str(?band), ""musical artist"", ""i""))
  }

  # Band of the band
  ?bandOfBand dbo:genre ?musicalArtist2 .
  FILTER (regex(str(?musicalArtist2), ""band"", ""i""))
}
```",6,7,7,3,3,3,3,71,0,0,1,0,0.0,0
445,67,test,Give me the entity in England and entity in the award of the commander in Battle of Saint-Mihiel and death place of the awardee of the establishment of 1820-03-10.,"SELECT ?result WHERE { ?v0 <http://dbpedia.org/ontology/foundingDate> ""1820-03-10""^^<http://www.w3.org/2001/XMLSchema#date> . ?v6 <http://dbpedia.org/property/awards> ?v0 . <http://dbpedia.org/resource/Battle_of_Saint-Mihiel> <http://dbpedia.org/ontology/commander> ?v1 . ?v6 <http://dbpedia.org/ontology/deathPlace> ?result . ?v1 <http://dbpedia.org/property/awards> ?v3 . ?result <http://dbpedia.org/ontology/country> ?v3 . ?result <http://dbpedia.org/ontology/location> <http://dbpedia.org/resource/England> . }","```sparql
SELECT ?entityInEngland ?deathPlace WHERE {
  # Find the commander in the Battle of Saint-Mihiel
  ?battle dbo:commander ?commander .
  ?battle rdfs:label ""Battle of Saint-Mihiel""@en .

  # Identify awards related to this commander
  OPTIONAL { 
    ?award dbo:recipient ?commander .
    ?award dbo:established ""1820-03-10""^^xsd:date .
  }

  # Find the death place of the awardee (the commander)
  ?commander dbo:deathPlace ?deathPlace .

  # Identify an entity in England related to this context
  OPTIONAL {
    ?entityInEngland rdfs:label ?label .
    FILTER regex(?label, ""England"", ""i"")
  }
}
```",7,7,8,3,3,3,3,71,0,19299,1,0.0,0.0,0
41,25,test,"Give me the party of Enda Kenny and party of the leader, that is a politician and an office holder, of 2005 Castlereagh Borough Council election and party of the person born as David Declan Costello.","SELECT ?result WHERE { ?v4 <http://dbpedia.org/ontology/party> ?result . <http://dbpedia.org/resource/2005_Castlereagh_Borough_Council_election> <http://dbpedia.org/property/leader> ?v4 . ?v1 <http://dbpedia.org/property/birthName> ""David Declan Costello""@en . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. <http://dbpedia.org/resource/Enda_Kenny> <http://dbpedia.org/ontology/party> ?result . ?v1 <http://dbpedia.org/ontology/party> ?result . }","```sparql
SELECT ?endakennyParty ?castlereaghLeaderParty ?costelloParty WHERE {
  # Find Enda Kenny's party
  ?endakenny dbo:party ?endakennyParty .
  ?endakenny rdfs:label ""Enda Kenny""@en .

  # Find the leader of the 2005 Castlereagh Borough Council election and their party
  OPTIONAL {
    ?castlereaghLeader dbo:election ?election .
    ?election dbo:date ?date .
    FILTER (YEAR(?date) = 2005 && STRSTARTS(STR(?election), ""Castlereagh Borough Council""))
    ?castlereaghLeader dbo:party ?castlereaghLeaderParty .
    ?castlereaghLeader a dbo:Politician ;
                      dbo:officeHolder true .
  }

  # Find David Declan Costello's (Martin McGuinness) party
  OPTIONAL {
    ?costello rdfs:label ""David Declan Costello""@en .
    ?costello dbo:birthName ""David Declan Costello""@en .
    ?costello dbo:party ?costelloParty .
  }
}
```",5,7,6,2,3,2,3,28,1,0,0,1.0,1.0,1.0
826,57,test,"Give me the predecessor of the parent of Prince Friedrich of Hesse and by Rhine and spouse of Anna Magdalena Appel and successor of the child, that is a royalty, of the reference, that is a royalty, to Louis I.","SELECT ?result WHERE { ?v5 <http://dbpedia.org/ontology/successor> ?result . ?result <http://dbpedia.org/ontology/successor> ?v3 . <http://dbpedia.org/resource/Prince_Friedrich_of_Hesse_and_by_Rhine> <http://dbpedia.org/ontology/parent> ?v3 . <http://dbpedia.org/resource/Anna_Magdalena_Appel> <http://dbpedia.org/ontology/spouse> ?result . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v0 <http://xmlns.com/foaf/0.1/name> ""Louis I""@en . ?v0 <http://dbpedia.org/ontology/child> ?v5 . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. }","```sparql
SELECT ?predecessor ?successor WHERE {
  # Prince Friedrich of Hesse and by Rhine's parent
  ?friedrich dbo:parent ?parent .
  ?friedrich rdfs:label ""Prince Friedrich of Hesse and by Rhine""@en .

  # Anna Magdalena Appel's spouse (likely Johann Sebastian Bach)
  ?annaMagdalena dbo:spouse ?bach .
  ?annaMagdalena rdfs:label ""Anna Magdalena Appel""@en .
  
  # Child of the parent who is royalty
  OPTIONAL {
    ?parent dbo:child ?royalChild .
    FILTER (regex(str(?royalChild), ""Royal"", ""i""))
  }

  # Reference to Louis I that is royalty
  OPTIONAL {
    ?louisI rdfs:label ""Louis I""@en .
    ?louisI dbo:successorOrDescendant ?royalReference .
    FILTER (regex(str(?royalReference), ""Royal"", ""i""))
  }
  
  # Predecessor of the parent
  OPTIONAL {
    ?parent dbo:predecessor ?predecessor .
  }

  # Successor of the royal child related to Louis I
  OPTIONAL {
    ?royalChild dbo:successor ?successor .
  }
}
```",6,8,7,3,3,3,3,71,1,190966,0,5.236506831023161e-06,1.0,1.0472958820325918e-05
965,64,test,"Give me the parent of the person born, that is a noble, as the birth name of George Mountbatten, 2nd Marquess of Milford Haven and parent of Louise Mountbatten and spouse of the spouse of the parent of Louise Mountbatten.","SELECT ?result WHERE { <http://dbpedia.org/resource/Louise_Mountbatten> <http://dbpedia.org/ontology/parent> ?result . ?v0 <http://dbpedia.org/property/birthName> ?v5 . ?v4 <http://dbpedia.org/ontology/spouse> ?v2 . <http://dbpedia.org/resource/Louise_Mountbatten> <http://dbpedia.org/ontology/parent> ?v4 . ?v0 <http://dbpedia.org/ontology/parent> ?result . ?result <http://dbpedia.org/ontology/spouse> ?v2 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Noble>. <http://dbpedia.org/resource/George_Mountbatten,_2nd_Marquess_of_Milford_Haven> <http://dbpedia.org/property/birthName> ?v5 . }","```sparql
SELECT ?parent WHERE {
  # Identify George Mountbatten, 2nd Marquess of Milford Haven
  ?george rdfs:label ""George Mountbatten, 2nd Marquess of Milford Haven""@en .
  
  # Find his parent
  ?george dbo:parent ?parent .

  # Ensure Louise Mountbatten is his child
  ?louise rdfs:label ""Louise Mountbatten""@en .
  ?george dbo:child ?louise .

  # Identify George's spouse
  OPTIONAL {
    ?spouse dbo:spouse ?george .
  }

  # Find the parent of George's spouse
  OPTIONAL {
    ?spouse dbo:parent ?grandParent .
  }
}
```",7,8,8,3,3,3,3,71,0,0,2,0,0.0,0
192,20,test,"Give me the child of the child of the parent of Anna of Hungary (Byzantine empress) and spouse of the spouse, that is a royalty, of the child of Charles II of Naples.",SELECT ?result WHERE { ?v4 <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Anna_of_Hungary_(Byzantine_empress)> . ?v5 <http://dbpedia.org/property/father> ?v4 . ?result <http://dbpedia.org/ontology/parent> ?v5 . ?v1 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Charles_II_of_Naples> . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v2 <http://dbpedia.org/ontology/spouse> ?v1 . ?v2 <http://dbpedia.org/ontology/spouse> ?result . },"```sparql
SELECT ?finalChild WHERE {
  # Step 1: Find the parent of Anna of Hungary and her child (Anna herself)
  ?annaParent dbo:parent ?anna .
  ?anna rdfs:label ""Anna of Hungary, Byzantine empress""@en .

  # Step 2: Identify Anna's child
  ?anna dbo:child ?annasChild .

  # Step 3: Find the grandchild of Anna's parent (Anna's child)
  ?grandchild ?p ?annasChild .
  
  # Step 4: Retrieve the child of Charles II of Naples
  ?charlesIIChild dbo:parent ?charlesII .
  ?charlesII rdfs:label ""Charles II of Naples""@en .

  # Step 5: Find the spouse of this child, ensuring they are royalty
  OPTIONAL {
    ?charlesIIChild dbo:spouse ?royalSpouse .
    FILTER (regex(str(?royalSpouse), ""Royal"", ""i""))
  }

  # Step 6: Determine the spouse of this royal spouse
  OPTIONAL {
    ?royalSpouse dbo:spouse ?finalSpouse .
  }
  
  # Find the child of the final spouse
  OPTIONAL {
    ?finalSpouse dbo:child ?finalChild .
  }
}
```",6,7,7,3,2,3,2,20,0,0,1,0,0.0,0
865,62,test,"Give me the native of the residence, that is a country, of the person decedent at Patna and father of Shahla Khatun and father of the child, that is a politician, of the spouse of Syeda Shahar Banu.",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/birthPlace> ?v0 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. <http://dbpedia.org/resource/Syeda_Shahar_Banu> <http://dbpedia.org/ontology/spouse> ?v2 . ?v4 <http://dbpedia.org/property/father> ?result . ?v1 <http://dbpedia.org/property/residence> ?v0 . ?v4 <http://dbpedia.org/property/father> ?v2 . <http://dbpedia.org/resource/Shahla_Khatun> <http://dbpedia.org/property/father> ?result . ?v1 <http://dbpedia.org/ontology/deathPlace> <http://dbpedia.org/resource/Patna> . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. },"```sparql
SELECT ?nativeCountry WHERE {
  # Find person decedent at Patna and father of Shahla Khatun
  ?person dbo:deathPlace dbpedia:Patna ;
          dbo:parent ?shahlaKhatunParent .
  ?shahlaKhatunParent rdfs:label ""Shahla Khatun""@en .

  # Find spouse of Syeda Shahar Banu and their child who is a politician
  ?syedaShaharBanu dbo:spouse ?spouse ;
                   dbo:child ?politicianChild .
  ?politicianChild rdf:type dbo:Politician .
  
  # Ensure the person identified as father matches both conditions
  FILTER (?person = ?shahlaKhatunParent)

  # Find residence of this person and its native country
  OPTIONAL {
    ?residence dbo:nativeCountry ?nativeCountry ;
               dbo:resident ?person .
  }
}
```",7,9,8,3,3,3,3,71,0,0,1,0,0.0,0
417,56,test,"Give me the child of the child, that is a royalty, of the parent, that is a royalty, of Alexandrine of Mecklenburg-Schwerin and spouse of the parent, that is a royalty, of Count Ingolf of Rosenborg and child of Christian X of Denmark.",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/parent> ?v1 . ?result <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Christian_X_of_Denmark> . ?v1 <http://dbpedia.org/property/father> ?v0 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. <http://dbpedia.org/resource/Alexandrine_of_Mecklenburg-Schwerin> <http://dbpedia.org/ontology/parent> ?v0 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v2 <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Count_Ingolf_of_Rosenborg> . ?result <http://dbpedia.org/ontology/spouse> ?v2 . },"```sparql
SELECT ?grandchild WHERE {
  # Step 1: Find the parent (royalty) of Alexandrine of Mecklenburg-Schwerin
  ?alexandrine dbo:parent ?parent .
  ?alexandrine rdfs:label ""Alexandrine of Mecklenburg-Schwerin""@en .

  # Ensure the parent is royalty
  FILTER EXISTS { ?parent rdf:type dbo:Monarch . }

  # Step 2: Find the spouse of this royal parent
  OPTIONAL {
    ?parent dbo:spouse ?spouse .
  }

  # Step 3: Find their child who is royalty
  OPTIONAL {
    ?spouse dbo:child ?royalChild .
    FILTER EXISTS { ?royalChild rdf:type dbo:Monarch . }
  }

  # Step 4: Determine the child of this royal child
  OPTIONAL {
    ?royalChild dbo:child ?grandchild .
  }
}
```",6,9,7,3,3,3,3,71,0,0,1,0,0.0,0
47,70,test,"Give me the office of the awardee of the entity, that is an award, in India and office of the awardee of the award, that is an award, of Mantu Ghosh and office of the administration of Jagdeep Dhankhar.",SELECT ?result WHERE { ?v3 <http://dbpedia.org/property/awards> ?v1 . <http://dbpedia.org/resource/Mantu_Ghosh> <http://dbpedia.org/property/awards> ?v0 . ?v3 <http://dbpedia.org/property/office> ?result . ?v4 <http://dbpedia.org/property/office> ?result . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Award>. ?v7 <http://dbpedia.org/property/awards> ?v0 . ?v1 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/India> . ?v4 <http://dbpedia.org/property/governor> <http://dbpedia.org/resource/Jagdeep_Dhankhar> . ?v7 <http://dbpedia.org/property/office> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Award>. },"```sparql
SELECT DISTINCT ?award ?awardeeOffice ?mantuAwardAwardeeOffice ?jagdeepOffice WHERE {
  # Office of the awardee of an award in India
  ?award dbo:location dbr:India .
  ?award dbo:awardee ?awardee .
  ?awardee dbo:office ?awardeeOffice .

  # Office of the awardee of Mantu Ghosh's award
  OPTIONAL {
    ?mantuAward dbo:awardee ?mantuAwardee .
    ?mantuAward dbo:awarder dbr:Mantu_Ghosh .
    ?mantuAwardee dbo:office ?mantuAwardAwardeeOffice .
  }

  # Office of the administration of Jagdeep Dhankhar
  OPTIONAL {
    dbr:Jagdeep_Dhankhar dbo:office ?jagdeepOffice .
  }
}
```",8,10,9,3,3,3,3,71,0,0,1,0,0.0,0
508,18,test,"Give me the birthplace of the commander, that is Saudi, in Central Plains War and birthplace of the commander, that is a politician, in the war, that is a military conflict and a societal event and an event, of Hayao Tada.",SELECT ?result WHERE { ?v3 <http://dbpedia.org/ontology/birthPlace> ?result . <http://dbpedia.org/resource/Hayao_Tada> <http://dbpedia.org/ontology/battle> ?v1 . ?v1 <http://dbpedia.org/ontology/commander> ?v2 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v2 <http://dbpedia.org/ontology/birthPlace> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. <http://dbpedia.org/resource/Central_Plains_War> <http://dbpedia.org/ontology/commander> ?v3 . ?v3 <http://dbpedia.org/ontology/nationality> <http://dbpedia.org/resource/Saudi_Arabia>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. },"```sparql
# Query for the birthplace of the Saudi commander in the Central Plains War
SELECT ?birthPlace WHERE {
  ?war dbo:wikiPageRedirects dbpedia:Central_Plains_War .
  ?commander dbo:nationality dbr:Saudi_Arabia ;
             dbo:occupation dbo:Military_Commander ;
             dbo:participatedIn ?war .
  ?commander dbo:birthPlace ?birthPlace .
}

# Query for the birthplace of the commander who is a politician in Hayao Tada's war
SELECT ?birthPlace WHERE {
  ?event dbo:wikiPageRedirects dbpedia:Hayao_Tada ;
         rdf:type dbo:Military_Conflict, dbo:Societal_Event, dbo:Event .
  ?commander dbo:occupation dbo:Politician ;
             dbo:participatedIn ?event .
  ?commander dbo:birthPlace ?birthPlace .
}
```",5,10,6,3,2,3,2,20,0,0,3,0,0.0,0
892,60,test,"Give me the entity in the profession of the true self of Enrico Crolla and entity in the administration, that is Italian and a region and a settlement and an administrative region, of the party, that is a political party and an organisation, of Andrea Cozzolino.","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/province> ?v0 . ?result <http://dbpedia.org/ontology/country> ?v2 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Region>. ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?v0 <http://dbpedia.org/property/leaderParty> ?v5 . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/PoliticalParty>. ?v4 <http://xmlns.com/foaf/0.1/givenName> ""Enrico Crolla""@en . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. <http://dbpedia.org/resource/Andrea_Cozzolino> <http://dbpedia.org/ontology/party> ?v5 . ?v4 <http://dbpedia.org/property/occupation> ?v2 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/AdministrativeRegion>. ?v0 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Italy>. }","```sparql
SELECT ?professionEntity ?regionSettlement WHERE {
  # Step 1: Identify Enrico Crolla's profession
  ?enricoCrolla dbo:occupation ?profession .
  ?enricoCrolla rdfs:label ""Enrico Crolla""@en .

  # Step 2: Find an entity in that profession
  ?entityInProfession a ?profession .
  
  # Step 3: Identify Andrea Cozzolino's political party
  ?andreaCozzolino dbo:party ?politicalParty .
  ?andreaCozzolino rdfs:label ""Andrea Cozzolino""@en .

  # Step 4: Determine the administrative region of the party
  ?politicalParty dbo:country dbc:Italy .
  ?regionSettlement a dbo:Region ;
                   dbo:administrativeRegionOf ?politicalParty ;
                   dbo:settlement ?settlement .
}
```",6,12,7,3,2,3,3,71,0,0,587,0,0.0,0
917,71,test,"Give me the parent of the child, that is a royalty, of the mayor of Hawaiian Kingdom and child of the father of the child, that is a royalty, of Kamehameha III and child of the father of the spouse, that is a royalty, of Leleiohoku I.",SELECT ?result WHERE { ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v4 <http://dbpedia.org/property/father> ?v5 . ?v4 <http://dbpedia.org/ontology/spouse> <http://dbpedia.org/resource/Leleiohoku_I> . ?v7 <http://dbpedia.org/property/father> ?v8 . ?v7 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. <http://dbpedia.org/resource/Hawaiian_Kingdom> <http://dbpedia.org/property/leader> ?v1 . ?result <http://dbpedia.org/ontology/parent> ?v5 . ?v2 <http://dbpedia.org/property/father> ?v1 . <http://dbpedia.org/resource/Kamehameha_III> <http://dbpedia.org/ontology/child> ?v7 . ?result <http://dbpedia.org/property/father> ?v8 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?result <http://dbpedia.org/ontology/child> ?v2 . },"```sparql
SELECT ?finalParent WHERE {
  # Step a: Royalty child of Kamehameha III and their father
  ?kamehamehaIII dbo:child ?royalChild1 .
  ?kamehamehaIII rdfs:label ""Kamehameha III""@en .
  FILTER (regex(str(?royalChild1), ""Royal"", ""i""))",9,12,10,3,3,3,3,71,0,0,2,0,0.0,0
976,57,test,"Give me the office of the person born as Mehmet Naci Bostancı and office of Mustafa Şentop and office of the mayor, that is a politician and an office holder and Turkish, of the reference, that is an organisation and a political party and Turkish, to Millet İttifakı.","SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/PoliticalParty>. ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. <http://dbpedia.org/resource/Mustafa_Şentop> <http://dbpedia.org/property/office> ?result . ?v0 <http://dbpedia.org/property/office> ?result . ?v1 <http://xmlns.com/foaf/0.1/name> ""Millet İttifakı""@en . ?v4 <http://dbpedia.org/ontology/nationality> <http://dbpedia.org/resource/Turkey>. ?v0 <http://dbpedia.org/property/birthName> ""Mehmet Naci Bostancı""@en . ?v1 <http://dbpedia.org/property/leader> ?v4 . ?v4 <http://dbpedia.org/property/office> ?result . ?v1 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Turkey>. }","```sparql
SELECT ?bostanciOffice ?sentopOffice ?mayorOffice ?millettiftakiReference WHERE {
  # Find the office of Mehmet Naci Bostancı
  ?bostanci dbo:birthName ""Mehmet Naci Bostancı""@en .
  ?bostanci dbo:office ?bostanciOffice .

  # Find the office of Mustafa Şentop
  ?sentop dbo:birthName ""Mustafa Şentop""@en .
  ?sentop dbo:office ?sentopOffice .

  # Find a mayor who is a politician and an office holder in Turkey
  ?mayor dbo:nationality dbr:Turkey ;
         dbo:occupation dbr:Politician ;
         dbo:positionHeld ?mayorPosition .
  ?mayorPosition rdfs:label ""Mayor""@en .
  ?mayor dbo:office ?mayorOffice .

  # Find the reference of Millet İttifakı as an organization and political party
  ?millettiftaki rdf:type dbr:Political_party ;
                 dbo:country dbr:Turkey .
  ?millettiftakiReference rdfs:label ""Millet İttifakı""@en .
}
```",6,12,7,3,3,3,3,71,0,0,1,0,0.0,0
773,68,test,"Give me the spouse of the father of the parent of Bernard (son of Charles the Fat) and parent of the successor of the child, that is a royalty, of Louis the Pious and parent of the child, that is a royalty, of Louis the German.",SELECT ?result WHERE { ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v5 <http://dbpedia.org/property/father> ?v4 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v0 <http://dbpedia.org/ontology/successor> ?v7 . ?v3 <http://dbpedia.org/ontology/parent> ?result . ?result <http://dbpedia.org/ontology/child> ?v7 . ?v3 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Louis_the_German> . ?v4 <http://dbpedia.org/ontology/spouse> ?result . ?v5 <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Bernard_(son_of_Charles_the_Fat)> . <http://dbpedia.org/resource/Louis_the_Pious> <http://dbpedia.org/ontology/child> ?v0 . },"```sparql
SELECT ?spouse WHERE {
  # Step 1: Identify Bernard (son of Charles the Fat)
  ?bernard rdfs:label ""Bernard""@en .
  ?bernard dbo:parent ?charlesFat .

  # Step 2: Find the father of Charles the Fat
  ?charlesFat dbo:parent ?fatherOfCharlesFat .

  # Step 3: Determine the spouse of this father
  ?fatherOfCharlesFat dbo:spouse ?spouse .

  # Step 4: Identify Louis the Pious and his royal child
  ?louisPious rdfs:label ""Louis the Pious""@en .
  ?royalChild1 dbo:parent ?louisPious .
  FILTER (regex(str(?royalChild1), ""Emperor|King"", ""i""))

  # Step 5: Find the successor of this royal child
  ?successorOfRoyalChild1 dbo:succeededBy ?royalChild1 .

  # Step 6: Determine the parent of this successor
  ?parentOfSuccessor dbo:child ?successorOfRoyalChild1 .

  # Step 7: Identify Louis the German and his royal child
  ?louisGerman rdfs:label ""Louis the German""@en .
  ?royalChild2 dbo:parent ?louisGerman .
  FILTER (regex(str(?royalChild2), ""Emperor|King"", ""i""))

  # Step 8: Find the parent of this royal child
  ?parentOfRoyalChild2 dbo:child ?royalChild2 .

  # Step 9: Combine steps to find the spouse common to both parents
  FILTER (?spouse = ?parentOfSuccessor && ?spouse = ?parentOfRoyalChild2)
}
```",8,10,9,3,3,3,3,71,0,0,1,0,0.0,0
839,63,test,"Give me the band of the band, that is a musical artist, of Charlie Huhn and band of the person born, that is a musical artist, as the persona of Kevin Russell (musician) and band of the member of Böhse Onkelz.",SELECT ?result WHERE { ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. <http://dbpedia.org/resource/Böhse_Onkelz> <http://dbpedia.org/ontology/bandMember> ?v6 . ?v3 <http://dbpedia.org/property/birthName> ?v4 . ?v3 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . <http://dbpedia.org/resource/Charlie_Huhn> <http://dbpedia.org/ontology/associatedMusicalArtist> ?v2 . ?result <http://dbpedia.org/ontology/bandMember> ?v2 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. <http://dbpedia.org/resource/Kevin_Russell_(musician)> <http://xmlns.com/foaf/0.1/givenName> ?v4 . ?result <http://dbpedia.org/ontology/bandMember> ?v6 . },"```sparql
SELECT ?charlieHuhnBand ?kevinRussellPersonBand ?boehseOnkelzMemberBand WHERE {
  # Find Charlie Huhn's band
  ?charlieHuhn dbo:band ?charlieHuhnBand .
  ?charlieHuhn rdfs:label ""Charlie Huhn""@en .

  # Find the persona of Kevin Russell and their band
  ?kevinRussellPerson dbo:birthPlace ?place .
  ?kevinRussellPerson rdfs:label ""Kevin Russell (musician)""@en .
  ?kevinRussellPerson dbo:band ?kevinRussellPersonBand .

  # Find a member of Böhse Onkelz and their band
  ?boehseOnkelzMember dbo:memberOfBand ?boehseOnkelz .
  ?boehseOnkelz rdfs:label ""Böhse Onkelz""@en .
  ?boehseOnkelzMember dbo:band ?boehseOnkelzMemberBand .
}
```",7,9,8,3,3,3,3,71,0,0,1,0,0.0,0
83,19,test,"Give me the party of the governor of the commander, that is a politician, in Central African Republic Civil War and ruling party in the birthplace, that is a town and Brazilian and a soccer club, of Sandro (footballer, born October 1983).","SELECT ?result WHERE { <http://dbpedia.org/resource/Sandro_(footballer,_born_October_1983)> <http://dbpedia.org/ontology/birthPlace> ?v2 . ?v2 <http://dbpedia.org/property/leaderParty> ?result . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Town>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v4 <http://dbpedia.org/ontology/party> ?result . <http://dbpedia.org/resource/Central_African_Republic_Civil_War> <http://dbpedia.org/ontology/commander> ?v0 . ?v0 <http://dbpedia.org/property/governor> ?v4 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerClub>. ?v2 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Brazil>. }","```sparql
# Query for Governor's Party
SELECT ?party WHERE {
  ?commander dbo:role ""Commander""@en .
  ?commander dbo:event dbpedia:Central_African_Republic_Civil_War .
  ?governor dbo:position ""Governor""@en ;
            dbo:memberOf ?party .
  ?governor dbo:relatedTo ?commander .
}

# Query for Sandro's Birthplace and Ruling Party
SELECT ?rulingParty WHERE {
  ?sandro dbo:birthPlace ?town ;
          rdfs:label ""Sandro (footballer, born October 1983)""@en .
  ?town a dbo:Town ;
        dbo:country dbr:Brazil ;
        dbo:sportTeam ?club .
  ?club dbo:type dbr:Soccer_club .
  ?town dbo:rulingParty ?rulingParty .
}
```",5,9,6,3,2,3,2,20,0,0,1,0,0.0,0
917,60,test,"Give me the parent of the child, that is a royalty, of the mayor of Hawaiian Kingdom and child of the father of the child, that is a royalty, of Kamehameha III.",SELECT ?result WHERE { <http://dbpedia.org/resource/Hawaiian_Kingdom> <http://dbpedia.org/property/leader> ?v4 . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. <http://dbpedia.org/resource/Kamehameha_III> <http://dbpedia.org/ontology/child> ?v5 . ?result <http://dbpedia.org/ontology/child> ?v2 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v5 <http://dbpedia.org/property/father> ?v0 . ?result <http://dbpedia.org/property/father> ?v0 . ?v2 <http://dbpedia.org/property/father> ?v4 . },"```sparql
SELECT ?parent WHERE {
  # Find a child who is royalty of Kamehameha III
  ?child dbo:parent ?kamehamehaIII .
  ?kamehamehaIII rdfs:label ""Kamehameha III""@en .
  FILTER (regex(str(?child), ""royalty"", ""i""))

  # Find the father of this royal child
  ?child dbo:parent ?father .

  # Find a child who is royalty of the mayor of Hawaiian Kingdom
  ?mayor rdfs:label ""Mayor of Hawaiian Kingdom""@en .
  ?mayorChild dbo:parent ?mayor .
  FILTER (regex(str(?mayorChild), ""royalty"", ""i""))

  # Find the parent of this royal child
  ?mayorChild dbo:parent ?parent .

  # Ensure the parent is also a child of the father identified in step 2
  ?parent dbo:parent ?father .
}
```",6,8,7,3,2,3,3,71,0,0,2,0,0.0,0
443,27,test,"Give me the birthplace of the work of yes and birthplace of the person born, that is a musical artist and an artist, on 1949-11-20 and landmark at elevation of 28.","SELECT ?result WHERE { ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?v3 <http://dbpedia.org/ontology/birthPlace> ?result . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. ?result <http://dbpedia.org/ontology/elevation> ""28""^^<http://www.w3.org/2001/XMLSchema#integer> . ?v2 <http://dbpedia.org/property/author> ""yes""@en . ?v3 <http://dbpedia.org/ontology/birthDate> ""1949-11-20""^^<http://www.w3.org/2001/XMLSchema#date> . ?v2 <http://dbpedia.org/ontology/birthPlace> ?result . }","```sparql
SELECT ?person ?workBirthplace ?personBirthplace ?landmark WHERE {
  # Find the person born on November 20, 1949, who is a musical artist and an artist
  ?person dbo:birthDate ""1949-11-20""^^xsd:date ;
          dbo:occupation ?musicalArtist ;
          dbo:occupation ?artist .
  
  FILTER (regex(str(?musicalArtist), ""Musical Artist"", ""i"") && regex(str(?artist), ""Artist"", ""i""))
  
  # Find the birthplace of a notable work by this person
  OPTIONAL {
    ?work dbo:creator ?person ;
          dbo:birthPlace ?workBirthplace .
  }
  
  # Find the birthplace of the person
  OPTIONAL {
    ?person dbo:birthPlace ?personBirthplace .
  }
  
  # Find a landmark at an elevation of 28 (assuming meters)
  OPTIONAL {
    ?landmark dbo:elevation ""28""^^xsd:decimal ;
              rdf:type dbo:Lighthouse .
  }
}
```",5,7,6,2,3,2,3,28,0,0,1,0,0.0,0
459,25,test,"Give me the governor of the death place, that is a settlement, of Cliff Roquemore and person born as John Kevin Stitt and governor of the administration, that is a politician, of Brad Henry.","SELECT ?result WHERE { ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?result <http://dbpedia.org/property/birthName> ""John Kevin Stitt""@en . ?v4 <http://dbpedia.org/property/governor> ?result . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. ?v2 <http://dbpedia.org/property/governor> ?result . <http://dbpedia.org/resource/Cliff_Roquemore> <http://dbpedia.org/ontology/deathPlace> ?v2 . ?v4 <http://dbpedia.org/property/governor> <http://dbpedia.org/resource/Brad_Henry> . }","```sparql
SELECT ?governor WHERE {
  # Cliff Roquemore's death place that is a settlement
  ?cliffRoquemore dbo:deathPlace ?deathPlace .
  ?cliffRoquemore rdfs:label ""Cliff Roquemore""@en .
  ?deathPlace rdf:type dbo:Settlement .

  # Governor of the death place
  OPTIONAL {
    ?deathPlace dbo:governor ?governor .
  }

  # John Kevin Stitt's birth place and its governor
  ?johnKevinStitt dbo:birthPlace ?birthPlace .
  ?johnKevinStitt rdfs:label ""John Kevin Stitt""@en .
  
  OPTIONAL {
    ?birthPlace dbo:governor ?governor .
    FILTER (regex(str(?governor), ""politician"", ""i""))
  }

  # Brad Henry's administration governor
  ?bradHenry dbo:officeHolder ?administration .
  ?bradHenry rdfs:label ""Brad Henry""@en .

  OPTIONAL {
    ?administration dbo:governor ?governor .
    FILTER (regex(str(?governor), ""politician"", ""i""))
  }
}
```",5,7,6,2,3,2,3,28,0,0,1,0,0.0,0
892,66,test,"Give me the entity in the administration, that is Italian and a region and a settlement and an administrative region, of the party, that is a political party and an organisation, of Andrea Cozzolino and entity in the profession of Henri Crolla and landmark at elevation of the award of Anna Ishii.",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/province> ?v0 . <http://dbpedia.org/resource/Andrea_Cozzolino> <http://dbpedia.org/ontology/party> ?v5 . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/PoliticalParty>. ?result <http://dbpedia.org/ontology/country> ?v3 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/AdministrativeRegion>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Region>. ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?v0 <http://dbpedia.org/property/leaderParty> ?v5 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. <http://dbpedia.org/resource/Henri_Crolla> <http://dbpedia.org/property/occupation> ?v3 . <http://dbpedia.org/resource/Anna_Ishii> <http://dbpedia.org/property/awards> ?v6 . ?v0 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Italy>. ?result <http://dbpedia.org/ontology/elevation> ?v6 . },"```sparql
SELECT DISTINCT ?region WHERE {
  # Find Andrea Cozzolino's party
  ?cozzolino dbo:memberOf ?party .
  ?cozzolino rdfs:label ""Andrea Cozzolino""@en .
  ?party rdf:type dbo:PoliticalParty .

  # Find an Italian administrative region that is also a settlement and landmark
  ?region rdf:type dbo:AdministrativeRegion ;
          rdfs:label ?label .
  FILTER (CONTAINS(LCASE(?label), ""italy"") && CONTAINS(LCASE(?label), ""region""))
  OPTIONAL { ?region dbo:settlement ?settlement . }
  OPTIONAL { ?region dbo:landmark ?landmark . }

  # Find Henri Crolla's profession
  ?crolla dbo:occupation ?profession .
  ?crolla rdfs:label ""Henri Crolla""@en .

  # Find a landmark at elevation related to Anna Ishii's award",7,13,8,3,3,3,3,71,0,0,2,0,0.0,0
892,64,test,"Give me the entity in the administration, that is Italian and a region and a settlement and an administrative region, of the party, that is a political party and an organisation, of Andrea Cozzolino and entity in the profession of the true self of Enrico Crolla and landmark at elevation of 58.","SELECT ?result WHERE { <http://dbpedia.org/resource/Andrea_Cozzolino> <http://dbpedia.org/ontology/party> ?v5 . ?v4 <http://xmlns.com/foaf/0.1/givenName> ""Enrico Crolla""@en . ?v0 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Italy>. ?v0 <http://dbpedia.org/property/leaderParty> ?v5 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Region>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/AdministrativeRegion>. ?result <http://dbpedia.org/ontology/country> ?v2 . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/PoliticalParty>. ?v4 <http://dbpedia.org/property/occupation> ?v2 . ?result <http://dbpedia.org/ontology/province> ?v0 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. ?result <http://dbpedia.org/ontology/elevation> ""58""^^<http://www.w3.org/2001/XMLSchema#integer> . }","```sparql
SELECT ?entity WHERE {
  # Step 1: Identify Andrea Cozzolino's Party
  ?cozzolino dbo:party ?party .
  ?cozzolino rdfs:label ""Andrea Cozzolino""@en .

  # Step 2: Find Italian Administrative Region, Settlement, and Landmark
  ?region a dbo:Region ;
          a dbo:Settlement ;
          a dbo:AdministrativeRegion ;
          dbo:country dbr:Italy .
  
  # Step 3: Identify Enrico Crolla's Profession
  ?crolla dbo:profession ?profession .
  ?crolla rdfs:label ""Enrico Crolla""@en .

  # Step 4: Find Landmark at Elevation of 58
  ?landmark a dbo:Landmark ;
            dbo:elevation ""58""^^xsd:int .

  # Combine Queries to find the common entity
  FILTER (?entity = ?region && ?entity = ?profession && ?entity = ?landmark)
}
```",7,13,8,3,3,3,3,71,0,0,2,0,0.0,0
573,63,test,"Give me the person decedent at the administration, that is a region, of the real name of Charlie Baker (Australian footballer) and parent of the author, that is a politician and an office holder, of Exchequer Standards and person decedent at the residence, that is a settlement, of William J. Phelan.",SELECT ?result WHERE { ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Region>. ?result <http://dbpedia.org/ontology/deathPlace> ?v6 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. <http://dbpedia.org/resource/Charlie_Baker_(Australian_footballer)> <http://xmlns.com/foaf/0.1/name> ?v4 . <http://dbpedia.org/resource/Exchequer_Standards> <http://dbpedia.org/property/author> ?v2 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. <http://dbpedia.org/resource/William_J._Phelan> <http://dbpedia.org/property/residence> ?v6 . ?v6 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. ?v3 <http://dbpedia.org/property/governor> ?v4 . ?v2 <http://dbpedia.org/ontology/parent> ?result . ?result <http://dbpedia.org/ontology/deathPlace> ?v3 . },"```sparql
SELECT ?personDecedentAtAdminRegion ?authorParent ?phelanResidenceDecedent WHERE {
  # Find Charlie Baker (Australian footballer) real name and decedent at administration region
  ?charlieBaker dbo:realName ?realName .
  ?charlieBaker rdfs:label ""Charlie Baker (Australian footballer)""@en .
  ?adminRegion dbo:decedentAtAdministration ?realName .
  
  # Find the author of Exchequer Standards who is a politician and office holder
  ?author dbo:authored ""Exchequer Standards""@en .
  ?author rdf:type dbo:Politician ;
          dbo:officeHolder true .
  ?parent dbo:parent ?author .

  # Find William J. Phelan's residence settlement and decedent at that residence
  ?williamJPhelan dbo:residence ?settlement .
  ?williamJPhelan rdfs:label ""William J. Phelan""@en .
  ?settlementDecedent dbo:decedentAtResidence ?settlement .

  # Bind results to variables for output
  BIND(?adminRegion AS ?personDecedentAtAdminRegion)
  BIND(?parent AS ?authorParent)
  BIND(?",7,11,8,3,3,3,3,71,0,0,2,0,0.0,0
433,69,test,"Give me the associated musical artist of the person born, that is a musical artist and an artist, as the persona of Paul Chambers and professional in the profession of the writer of Slowhand at 70 – Live at the Royal Albert Hall and associated musical artist of the associated musical artist, that is an artist and a musical artist, of Scott LaFaro.",SELECT ?result WHERE { <http://dbpedia.org/resource/Scott_LaFaro> <http://dbpedia.org/ontology/associatedMusicalArtist> ?v7 . ?v7 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?result <http://dbpedia.org/property/occupation> ?v2 . <http://dbpedia.org/resource/Paul_Chambers> <http://xmlns.com/foaf/0.1/givenName> ?v4 . ?v3 <http://dbpedia.org/property/birthName> ?v4 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. ?v3 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v7 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?v7 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. ?v1 <http://dbpedia.org/property/occupation> ?v2 . <http://dbpedia.org/resource/Slowhand_at_70_–_Live_at_the_Royal_Albert_Hall> <http://dbpedia.org/property/writer> ?v1 . },"```sparql
SELECT ?finalArtist WHERE {
  # Find Paul Chambers' associated musical artist
  ?paulChambers dbo:associatedMusicalArtist ?artist1 .
  ?paulChambers rdfs:label ""Paul Chambers""@en .

  # Find Eric Clapton's associated musical artist
  ?ericClapton dbo:writerOfAlbum ?album .
  ?album rdfs:label ""Slowhand at 70 – Live at the Royal Albert Hall""@en .
  ?ericClapton dbo:associatedMusicalArtist ?artist2 .

  # Find Scott LaFaro's associated musical artist
  ?scottLaFaro dbo:associatedMusicalArtist ?artist3 .
  ?scottLaFaro rdfs:label ""Scott LaFaro""@en .
  
  # Ensure the artists are both musicians and artists
  FILTER (regex(str(?artist1), ""musical artist"", ""i"") && regex(str(?artist1), ""artist"", ""i""))
  FILTER (regex(str(?artist2), ""musical artist"", ""i"") && regex(str(?artist2), ""artist"", ""i""))
  FILTER (regex(str(?artist3), ""musical artist"", ""i"") && regex(str(?artist3), ""artist"", ""i""))

  # Find the associated musical artist of the artist found from Scott LaFaro
  ?artist3 dbo:associatedMusicalArtist ?finalArtist .
}
```",8,12,9,3,3,3,3,71,0,0,1,0,0.0,0
933,66,test,"Give me the band of the band of Alan Warner (musician) and band of the band, that is a group and a band and an organisation, of the person born, that is a musical artist, on 1947-04-21 and reference to the birth name of Alan Warner (musician).","SELECT ?result WHERE { <http://dbpedia.org/resource/Alan_Warner_(musician)> <http://dbpedia.org/ontology/associatedMusicalArtist> ?v3 . ?v5 <http://dbpedia.org/ontology/associatedMusicalArtist> ?v0 . <http://dbpedia.org/resource/Alan_Warner_(musician)> <http://dbpedia.org/property/birthName> ?v6 . ?result <http://xmlns.com/foaf/0.1/name> ?v6 . ?v5 <http://dbpedia.org/ontology/birthDate> ""1947-04-21""^^<http://www.w3.org/2001/XMLSchema#date> . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Band>. ?v3 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Group>. ?v0 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . }","```sparql
SELECT ?alanWarnerBand ?secondBand ?musicalArtist ?artistBand ?organization ?birthName WHERE {
  # Step 1: Identify Alan Warner (musician)
  ?alanWarner dbo:birthName ?birthName .
  ?alanWarner rdfs:label ""Alan Warner""@en .

  # Step 2: Find the band of Alan Warner
  ?alanWarner dbo:band ?alanWarnerBand .

  # Step 3: Determine the band of that band (second band)
  OPTIONAL {
    ?alanWarnerBand dbo:band ?secondBand .
  }

  # Step 4: Identify the person born on April 21, 1947
  ?musicalArtist dbo:birthDate ""1947-04-21""^^xsd:date .

  # Ensure this person is a musical artist
  ?musicalArtist rdf:type dbo:MusicalArtist .

  # Step 5: Find the band of that musical artist
  OPTIONAL {
    ?musicalArtist dbo:band ?artistBand .
  }

  # Step 6: Determine the organization related to that band
  OPTIONAL {
    ?artistBand rdf:type dbo:Band ;
                dbo:organization ?organization .
  }
}
```",7,11,8,3,3,3,3,71,0,0,1,0,0.0,0
507,64,test,Give me the spouse of the person born as the birth name of Anne V. Coates and director of Entertaining Mr Sloane (film) and professional in the profession of the person born on 1966-02-18.,"SELECT ?result WHERE { <http://dbpedia.org/resource/Anne_V._Coates> <http://dbpedia.org/property/birthName> ?v3 . ?v2 <http://dbpedia.org/property/birthName> ?v3 . ?result <http://dbpedia.org/ontology/spouse> ?v2 . ?v0 <http://dbpedia.org/ontology/birthDate> ""1966-02-18""^^<http://www.w3.org/2001/XMLSchema#date> . <http://dbpedia.org/resource/Entertaining_Mr_Sloane_(film)> <http://dbpedia.org/ontology/director> ?result . ?result <http://dbpedia.org/property/occupation> ?v1 . ?v0 <http://dbpedia.org/property/occupation> ?v1 . }","```sparql
SELECT ?spouse WHERE {
  # Find Anne V. Coates and her birth name
  ?anneVCoates rdfs:label ""Anne V. Coates""@en .
  ?anneVCoates dbo:birthName ?birthName .

  # Find the director of Entertaining Mr Sloane
  ?film rdfs:label ""Entertaining Mr Sloane""@en .
  ?film dbo:director ?director .

  # Find the person born on 1966-02-18 and their profession
  ?person dbo:birthday ""1966-02-18""^^xsd:date .
  ?person dbo:profession ?profession .

  # Match the director with Anne V. Coates' birth name and the profession of the person born in 1966
  FILTER (?director = ?anneVCoates && ?birthName = ?director && ?profession = ?director)

  # Find the spouse of this matched person
  ?matchedPerson dbo:spouse ?spouse .
}
```",7,7,8,3,3,3,3,71,0,0,1,0,0.0,0
93,18,test,"Give me the death place of the governor of Bob Bartlett and capital of the headquarter, that is a region and a settlement, of the headquarter of Clam Cove Pictograph Site.",SELECT ?result WHERE { <http://dbpedia.org/resource/Clam_Cove_Pictograph_Site> <http://dbpedia.org/ontology/location> ?v1 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Region>. ?v1 <http://dbpedia.org/ontology/location> ?v2 . <http://dbpedia.org/resource/Bob_Bartlett> <http://dbpedia.org/property/governor> ?v3 . ?v3 <http://dbpedia.org/ontology/deathPlace> ?result . ?v2 <http://dbpedia.org/ontology/capital> ?result . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. },"```sparql
SELECT ?deathPlace ?capital WHERE {
  # Find the governor of Bob Bartlett
  ?governor dbo:office ""Governor""@en ;
           dbo:location dbpedia:Bob_Bartlett .
  
  # Get the death place of this governor
  ?governor dbo:deathPlace ?deathPlace .

  # Find the headquarter organization or entity for Clam Cove Pictograph Site
  ?headquarter dbo:headquarters dbpedia:Clam_Cove_Pictograph_Site ;
               a dbo:Settlement, dbo:Region .
  
  # Get the capital of this region and settlement
  ?headquarter dbo:capital ?capital .
}
```",5,7,6,3,2,3,2,20,0,0,1,0,0.0,0
443,28,test,"Give me the landmark at elevation of the award of William Shepherd and birthplace of the person born, that is a musical artist and an artist, on 1949-11-20 and birthplace of the work of yes.","SELECT ?result WHERE { ?v3 <http://dbpedia.org/ontology/birthPlace> ?result . ?v5 <http://dbpedia.org/ontology/birthPlace> ?result . ?v3 <http://dbpedia.org/ontology/birthDate> ""1949-11-20""^^<http://www.w3.org/2001/XMLSchema#date> . <http://dbpedia.org/resource/William_Shepherd> <http://dbpedia.org/property/awards> ?v1 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?v5 <http://dbpedia.org/property/author> ""yes""@en . ?result <http://dbpedia.org/ontology/elevation> ?v1 . }","```sparql
# Step 1: Find William Shepherd's Award
SELECT ?award WHERE {
  ?shepherd dbo:birthDate ?date .
  ?shepherd rdfs:label ""William Shepherd""@en .
  ?shepherd dbo:award ?award .
}

# Step 2: Determine Elevation of the Landmark Associated with the Award
SELECT ?landmark ?elevation WHERE {
  ?award dbo:location ?location .
  ?location dbo:elevation ?elevation .
  ?location dbo:name ?landmark .
}

# Step 3: Find the Birthplace of a Person Born on 1949-11-20 Who Is Both a Musical Artist and an Artist
SELECT ?person ?birthPlace WHERE {
  ?person dbo:birthDate ""1949-11-20""^^xsd:date .
  ?person dbo:occupation ?occupation1 .
  ?person dbo:occupation ?occupation2 .
  FILTER (?occupation1 = dbc:Musical_artists && ?occupation2 = dbc:Artists)
  ?person dbo:birthPlace ?birthPlace .
}

# Step 4: Identify the Work Associated with ""Yes""
SELECT ?work WHERE {
  ?yes dbo:genre dbc:Progressive_rock .
  ?yes dbo:work ?work .
}

# Step 5: Find the Birthplace of the Person Associated with This Work
SELECT ?personBirthPlace WHERE {
  ?work dbo:creator ?person .
  ?person dbo:birthPlace ?personBirthPlace .
}

# Final Query to Combine Information
SELECT ?landmark WHERE {
  # Elevation from William Shepherd's award
  SELECT ?elevation WHERE {
    ?award dbo:location ?location .
    ?location dbo:elevation ?elevation .
    ?shepherd dbo:award ?award .
    ?shepherd rdfs:label ""William Shepherd""@en .
  }
  
  # Birthplace of the person associated with ""Yes""
  SELECT ?birthPlace WHERE {
    ?work dbo:creator ?person .
    ?person dbo:birthPlace ?birthPlace .
    ?yes dbo:genre dbc:Progressive_rock .
    ?yes dbo:work ?work .
  }

  # Find landmark at this elevation
  ?landmark dbo:elevation ?elevation .
}
```",6,8,7,2,3,2,3,28,0,0,1,0,0.0,0
826,61,test,"Give me the successor of the child, that is a royalty, of the reference, that is a royalty, to Louis I and predecessor of the parent of the child of Louis IV, Grand Duke of Hesse.","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/successor> ?v3 . ?v0 <http://xmlns.com/foaf/0.1/name> ""Louis I""@en . ?v1 <http://dbpedia.org/ontology/parent> <http://dbpedia.org/resource/Louis_IV,_Grand_Duke_of_Hesse> . ?v1 <http://dbpedia.org/ontology/parent> ?v3 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v0 <http://dbpedia.org/ontology/child> ?v5 . ?v5 <http://dbpedia.org/ontology/successor> ?result . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. }","```sparql
SELECT ?successor WHERE {
  # Identify Louis I and his predecessor
  ?louisI rdfs:label ""Louis I""@en .
  OPTIONAL { 
    ?predecessor dbo:successor ?louisI .
  }

  # Find the child of the predecessor who is royalty
  ?child dbo:parent ?predecessor .
  FILTER (regex(str(?child), ""Royal"", ""i""))

  # Identify Louis IV, Grand Duke of Hesse and his child's parent
  ?louisIV rdfs:label ""Louis IV, Grand Duke of Hesse""@en .
  ?grandChild dbo:parent ?louisIV .
  OPTIONAL {
    ?parentOfGrandChild dbo:child ?grandChild .
  }

  # Find the successor of the child from step 3
  ?successor dbo:predecessor ?child .
}
```",6,8,7,3,2,3,3,71,0,0,1,0,0.0,0
373,9,test,"Give me the writer of the work, that is a single and a musical work and a work and a soundtrack, of  and professional in the profession of Beto Guedes.","SELECT ?result WHERE { ?result <http://dbpedia.org/property/occupation> ?v3 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Single>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalWork>. ?v1 <http://dbpedia.org/property/writer> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?v1 <http://dbpedia.org/property/writer> """"@en . <http://dbpedia.org/resource/Beto_Guedes> <http://dbpedia.org/property/occupation> ?v3 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Song>. }","```sparql
SELECT ?work WHERE {
  # Identify Beto Guedes as a professional in music
  ?betoGuedes dbo:profession dbc:Musicians_from_Brazil .
  ?betoGuedes rdfs:label ""Beto Guedes""@en .

  # Find works that are singles, musical works, and soundtracks associated with Beto Guedes
  ?work dbo:creator ?betoGuedes ;
        a dbo:Single ;
        a dbo:MusicalWork ;
        a dbo:Soundtrack .
}
```",4,8,5,2,2,2,2,9,0,0,78,0,0.0,0
826,67,test,"Give me the predecessor of the parent of the child of Louis IV, Grand Duke of Hesse and successor of the child, that is a royalty, of the reference, that is a royalty, to Louis I and spouse of Anna Magdalena Appel.","SELECT ?result WHERE { ?v6 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v0 <http://dbpedia.org/ontology/child> ?v6 . ?v1 <http://dbpedia.org/ontology/parent> ?v3 . ?result <http://dbpedia.org/ontology/successor> ?v3 . ?v1 <http://dbpedia.org/ontology/parent> <http://dbpedia.org/resource/Louis_IV,_Grand_Duke_of_Hesse> . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v0 <http://xmlns.com/foaf/0.1/name> ""Louis I""@en . ?v6 <http://dbpedia.org/ontology/successor> ?result . <http://dbpedia.org/resource/Anna_Magdalena_Appel> <http://dbpedia.org/ontology/spouse> ?result . }","```sparql
SELECT ?predecessor WHERE {
  # Identify Louis IV, Grand Duke of Hesse
  ?louisIV rdfs:label ""Louis IV, Grand Duke of Hesse""@en .

  # Find his child
  ?child dbo:parent ?louisIV .
  
  # Determine the parent of this child (likely spouse)
  OPTIONAL { 
    ?spouse dbo:parent ?child .
  }
  
  # Identify the predecessor of this parent
  OPTIONAL {
    ?predecessor dbo:succeededBy ?spouse .
  }

  # Find the successor of the child that is royalty
  OPTIONAL {
    ?successor dbo:predecessor ?child .
    FILTER (regex(str(?successor), ""royalty"", ""i""))
  }
  
  # Reference to Louis I and spouse of Anna Magdalena Appel
  ?louisI rdfs:label ""Louis I, Grand Duke of Hesse""@en .
  ?annaMagdalena rdfs:label ""Anna Magdalena Appel""@en .
  OPTIONAL {
    ?reference dbo:spouse ?annaMagdalena .
    FILTER (regex(str(?reference), ""royalty"", ""i""))
  }
}
```",7,9,8,3,3,3,3,71,0,0,1,0,0.0,0
933,67,test,"Give me the reference to the birth name of the professional in Musician and band of the band, that is a group and a band and an organisation, of the person born, that is a musical artist, on 1947-04-21 and band of Mike Elliott (saxophonist).","SELECT ?result WHERE { ?v4 <http://dbpedia.org/ontology/birthDate> ""1947-04-21""^^<http://www.w3.org/2001/XMLSchema#date> . ?result <http://xmlns.com/foaf/0.1/name> ?v5 . <http://dbpedia.org/resource/Mike_Elliott_(saxophonist)> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Group>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Band>. ?v0 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?v1 <http://dbpedia.org/property/occupation> <http://dbpedia.org/resource/Musician> . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?v4 <http://dbpedia.org/ontology/associatedMusicalArtist> ?v0 . ?v1 <http://dbpedia.org/property/birthName> ?v5 . }","```sparql
SELECT ?birthName WHERE {
  # Find the musical artist born on 1947-04-21
  ?artist dbo:birthDate ""1947-04-21""^^xsd:date ;
          rdf:type dbo:MusicalArtist .

  # Ensure the band is a group, band, and organization
  ?band dbo:member ?artist ;
        rdf:type dbo:Band , dbo:Organization , dbo:Group .

  # Find Mike Elliott's association with the band
  ?mikeElliott foaf:name ""Mike Elliott (saxophonist)""@en ;
               dbo:bandMember ?band .

  # Retrieve the birth name of the musician
  ?artist foaf:name ?birthName .
}
```",7,11,8,3,3,3,3,71,0,0,1,0,0.0,0
124,64,test,"Give me the military force of Battle of Tamai and military force of the force, that is a societal event and a military conflict, of the person born on 1850-06-24 and commander in the war, that is a societal event and a military conflict, of the reference, that is Australian and an organisation and a military unit, to 'A' Battery, Royal Australian Artillery.","SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/commander> ?v0 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryUnit>. ?v0 <http://dbpedia.org/ontology/birthDate> ""1850-06-24""^^<http://www.w3.org/2001/XMLSchema#date> . ?v3 <http://dbpedia.org/ontology/battle> ?v2 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?result <http://dbpedia.org/ontology/battle> ?v1 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v3 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Australia>. ?result <http://dbpedia.org/ontology/battle> <http://dbpedia.org/resource/Battle_of_Tamai> . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?v3 <http://xmlns.com/foaf/0.1/name> ""'A' Battery, Royal Australian Artillery""@en . ?v2 <http://dbpedia.org/ontology/commander> ?result . }","```sparql
# Query for Battle of Tamai Forces
SELECT ?force WHERE {
  ?battle dbo:militaryForce ?force .
  ?battle rdfs:label ""Battle of Tamai""@en .
}

# Query for Person Born on 1850-06-24 and Their War
SELECT ?person ?war WHERE {
  ?person dbo:birthday ""1850-06-24""^^xsd:date ;
          dbo:commanderInWar ?war .
  ?war rdf:type dbo:MilitaryConflict ;
       dbo:societalEvent true .
}

# Query for Reference to 'A' Battery, Royal Australian Artillery
SELECT ?reference WHERE {
  ?reference dbo:country dbr:Australia ;
             dbo:militaryUnit ""A Battery, Royal Australian Artillery""@en .
}

# Query for Military Force of the War Commanded by This Person
SELECT ?force WHERE {
  ?war dbo:militaryForce ?force .
  ?person dbo:commanderInWar ?war .
  ?person dbo:birthday ""1850-06-24""^^xsd:date .
}
```",7,14,8,3,3,3,3,71,0,0,1,0,0.0,0
773,64,test,"Give me the spouse of the father of the parent of Bernard (son of Charles the Fat) and parent of Carloman of Bavaria and parent of the child, that is a royalty, of the father, that is an office holder and a royalty, of Carloman of Bavaria.",SELECT ?result WHERE { ?v3 <http://dbpedia.org/property/father> ?v2 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?result <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Carloman_of_Bavaria> . ?v2 <http://dbpedia.org/ontology/spouse> ?result . ?v1 <http://dbpedia.org/ontology/parent> ?result . ?v3 <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Bernard_(son_of_Charles_the_Fat)> . ?v1 <http://dbpedia.org/property/father> ?v0 . <http://dbpedia.org/resource/Carloman_of_Bavaria> <http://dbpedia.org/property/father> ?v0 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. },"```sparql
SELECT ?spouse WHERE {
  # Identify Bernard as son of Charles the Fat
  ?bernard dbo:parent ?charlesFat .
  ?bernard rdfs:label ""Bernard (son of Charles the Fat)""@en .

  # Find Charles the Fat and his father
  ?charlesFat dbo:parent ?fatherOfCharlesFat .
  
  # Identify Carloman of Bavaria's parents
  ?carloman dbo:parent ?commonParent .
  ?carloman rdfs:label ""Carloman of Bavaria""@en .

  # Ensure common parent is Charles the Fat
  FILTER (?commonParent = ?charlesFat)

  # Find a child of Charles the Fat who is royalty
  ?royalChild dbo:parent ?charlesFat .
  ?royalChild rdf:type dbo:Monarch .

  # Determine father of this royal child, ensuring he's an office holder and royalty
  ?royalChild dbo:parent ?fatherOfRoyalChild .
  ?fatherOfRoyalChild rdf:type dbo:OfficeHolder .
  ?fatherOfRoyalChild rdf:type dbo:Monarch .

  # Find spouse of this father
  ?fatherOfRoyalChild dbo:spouse ?spouse .
}
```",7,10,8,3,3,3,3,71,0,0,1,0,0.0,0
47,60,test,"Give me the office of the awardee of the entity, that is an award, in India and office of the administration of the commander, that is a politician, in Operation Green Hunt.",SELECT ?result WHERE { <http://dbpedia.org/resource/Operation_Green_Hunt> <http://dbpedia.org/ontology/commander> ?v3 . ?v0 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/India> . ?v1 <http://dbpedia.org/property/office> ?result . ?v2 <http://dbpedia.org/property/office> ?result . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v1 <http://dbpedia.org/property/awards> ?v0 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Award>. ?v2 <http://dbpedia.org/property/governor> ?v3 . },"```sparql
SELECT ?awardeeOffice ?commanderOffice WHERE {
  # Part 1: Office of the Awardee
  OPTIONAL {
    ?award dbo:country dbr:India .
    ?award dbo:recipient ?awardee .
    ?awardee dbo:office ?awardeeOffice .
  }

  # Part 2: Office of the Commander in Operation Green Hunt
  OPTIONAL {
    ?operation rdfs:label ""Operation Green Hunt""@en .
    ?politician dbo:participatedIn ?operation ;
                a dbo:Politician ;
                dbo:office ?commanderOffice .
  }
}
```",6,8,7,3,2,3,3,71,0,0,33,0,0.0,0
839,60,test,"Give me the band of the band, that is a musical artist, of the professional in Musician and band of the person born, that is a musical artist, as the persona of Kevin Russell (musician).","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/bandMember> ?v1 . ?v0 <http://dbpedia.org/property/occupation> ""Musician""@en . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?v0 <http://dbpedia.org/ontology/associatedMusicalArtist> ?v1 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?v2 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . <http://dbpedia.org/resource/Kevin_Russell_(musician)> <http://xmlns.com/foaf/0.1/givenName> ?v3 . ?v2 <http://dbpedia.org/property/birthName> ?v3 . }","```sparql
SELECT ?bandOfBand WHERE {
  # Step 1: Identify Kevin Russell as a musical artist
  ?kevinRussell dbo:birthName ""Kevin Russell""@en .
  
  # Step 2: Find the band associated with Kevin Russell
  ?kevinRussell dbo:musicalArtist ?band .

  # Step 3: Determine if this band is part of another band (or has an associated band)
  OPTIONAL {
    ?band dbo:associatedBand ?bandOfBand .
  }

  # Step 4: Identify the musical artist (band) associated with this second band
  OPTIONAL {
    ?bandOfBand dbo:musicalArtist ?finalBand .
  }
  
  FILTER EXISTS { ?kevinRussell a dbo:MusicalArtist . }
}
```",6,8,7,3,2,3,3,71,0,0,1,0,0.0,0
216,65,test,"Give me the player in the coach of Croatia national under-21 football team and team of the person born, that is a sports manager and a soccer manager and a soccer player, on 1983-12-20 and player in the coach, that is a soccer player and a sports manager and a soccer manager, of the player, that is an organisation and a sports club and a soccer club, in Džemal Berberović.","SELECT ?result WHERE { ?v6 <http://dbpedia.org/ontology/team> ?result . ?v0 <http://dbpedia.org/ontology/coach> ?v6 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerClub>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerPlayer>. <http://dbpedia.org/resource/Croatia_national_under-21_football_team> <http://dbpedia.org/ontology/coach> ?v4 . ?result <http://dbpedia.org/ontology/coach> ?v3 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsManager>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerManager>. ?v6 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsManager>. ?v3 <http://dbpedia.org/ontology/birthDate> ""1983-12-20""^^<http://www.w3.org/2001/XMLSchema#date> . ?v4 <http://dbpedia.org/ontology/team> ?result . ?v6 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerManager>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsClub>. ?v6 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerPlayer>. <http://dbpedia.org/resource/Džemal_Berberović> <http://dbpedia.org/ontology/team> ?v0 . }","```sparql
SELECT ?playerInCoach ?team WHERE {
  # Step 1: Identify Džemal Berberović as coach of Croatia national under-21 football team
  ?džemal dbo:coach ?croatiaUnder21 .
  ?džemal rdfs:label ""Džemal Berberović""@en .

  # Step 2: Find players coached by Džemal Berberović in the Croatia national under-21 team
  ?playerInCoach dbo:team ?croatiaUnder21 .
  
  # Step 3: Identify person born on 1983-12-20 who is a sports manager, soccer manager, and player
  ?person dbo:birthDate ""1983-12-20""^^xsd:date ;
          rdf:type dbo:SoccerManager ;
          rdf:type dbo:SportsManager ;
          rdf:type dbo:SoccerPlayer .

  # Step 4: Find the team associated with this person as a player or coach
  OPTIONAL { 
    ?person dbo:team ?team .
  }
  
  OPTIONAL {
    ?person dbo:coach ?team .
  }

  # Step 5: Identify players coached by this person when they were a coach for the identified team
  ?playerInCoach dbo:coach ?person .

  # Step 6: Ensure the team is an organization, sports club, and soccer club
  FILTER (?team rdf:type dbo:SportsClub && 
          ?team rdf:type dbo:SoccerClub &&
          ?team rdf:type dbo:Organization)
}
```",7,16,8,3,3,3,3,71,0,0,1,0,0.0,0
417,59,test,"Give me the spouse of the parent, that is a royalty, of the child of Knud, Hereditary Prince of Denmark and child of the father of the leader, that is a royalty, of Colony of Greenland.","SELECT ?result WHERE { ?v2 <http://dbpedia.org/ontology/child> ?v3 . ?v0 <http://dbpedia.org/property/father> ?v5 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v3 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Knud,_Hereditary_Prince_of_Denmark> . <http://dbpedia.org/resource/Colony_of_Greenland> <http://dbpedia.org/property/leader> ?v0 . ?result <http://dbpedia.org/ontology/spouse> ?v2 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?result <http://dbpedia.org/property/father> ?v5 . }","```sparql
SELECT ?spouse WHERE {
  # Step 1: Identify a child of Knud, Hereditary Prince of Denmark
  ?knudChild dbo:parent ?knud .
  ?knud rdfs:label ""Knud, Hereditary Prince of Denmark""@en .

  # Step 2: Identify the father of the leader of Colony of Greenland
  ?greenlandLeader dbo:leaderOf ?colonyGreenland .
  ?colonyGreenland rdfs:label ""Colony of Greenland""@en .
  ?fatherOfLeader dbo:parent ?greenlandLeader .
  
  # Step 3: Find a child of this father who is royalty
  ?royalChild dbo:parent ?fatherOfLeader .
  ?royalChild rdf:type dbo:RoyalFamily .

  # Step 4: Determine the spouse of this royal parent
  ?spouse dbo:spouse ?royalParent .
  ?royalParent dbo:parent ?royalChild .
}
```",6,8,7,3,2,3,3,71,0,0,1,0,0.0,0
933,58,test,"Give me the band of the band, that is a group and a band and an organisation, of the person born, that is a musical artist, on 1947-04-21 and reference to the birth name of Alan Warner (musician) and band of Mike Elliott (saxophonist).","SELECT ?result WHERE { ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?v4 <http://dbpedia.org/ontology/associatedMusicalArtist> ?v0 . ?v0 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. <http://dbpedia.org/resource/Mike_Elliott_(saxophonist)> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v4 <http://dbpedia.org/ontology/birthDate> ""1947-04-21""^^<http://www.w3.org/2001/XMLSchema#date> . <http://dbpedia.org/resource/Alan_Warner_(musician)> <http://dbpedia.org/property/birthName> ?v5 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Band>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Group>. ?result <http://xmlns.com/foaf/0.1/name> ?v5 . }","```sparql
SELECT ?person ?bandOfBand WHERE {
  # Find the person born on 1947-04-21 who is a musical artist
  ?person dbo:birthDate ""1947-04-21""^^xsd:date ;
          rdf:type dbo:MusicalArtist .
  
  # Reference Alan Warner and his band
  ?alanWarner rdfs:label ""Alan Warner (musician)""@en ;
              dbo:band ?alanBand .

  # Reference Mike Elliott and his band
  ?mikeElliott rdfs:label ""Mike Elliott (saxophonist)""@en ;
               dbo:band ?mikeBand .
  
  # Find the band of the band that is a group, band, and organization
  OPTIONAL {
    ?alanBand dbo:member ?person .
    ?mikeBand dbo:member ?person .
    
    ?bandOfBand rdf:type dbo:MusicalGroup ;
                dbo:band ?alanBand ;
                dbo:organization ?mikeBand .
  }
}
```",6,10,7,3,3,3,3,71,0,0,1,0,0.0,0
955,20,test,"Give me the band of the writer of the work, that is a work and an album and a musical work, of Matt Freeman and band of the band member, that is a musical artist and an artist, of the reference, that is a band and a group and an organisation, to Street Dogs.","SELECT ?result WHERE { ?v4 <http://xmlns.com/foaf/0.1/name> ""Street Dogs""@en . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalWork>. ?result <http://dbpedia.org/ontology/bandMember> ?v2 . ?v1 <http://dbpedia.org/property/writer> <http://dbpedia.org/resource/Matt_Freeman> . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. ?v1 <http://dbpedia.org/property/writer> ?v2 . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Band>. ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?result <http://dbpedia.org/ontology/bandMember> ?v5 . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Group>. ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?v5 <http://dbpedia.org/ontology/associatedMusicalArtist> ?v4 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Album>. }","```sparql
SELECT ?band WHERE {
  # Identify Matt Freeman as a band member
  ?freeman dbo:bandMember ?band .
  ?freeman rdfs:label ""Matt Freeman""@en .

  # Find works that are albums and musical compositions by Matt Freeman
  ?work dbo:album ?album ;
        dbo:musicalComposition ?composition ;
        dbo:writer ?freeman .

  # Identify the band member associated with this work
  ?member dbo:bandMember ?band .
  ?member dbo:reference ?streetDogsReference .
  
  # Ensure the reference is to Street Dogs
  ?streetDogsReference rdfs:label ""Street Dogs""@en ;
                       a dbo:Band ;
                       a dbo:Group ;
                       a dbo:Organization .

}
```",6,14,7,3,2,3,2,20,0,0,1,0,0.0,0
892,69,test,"Give me the entity in the administration, that is Italian and a region and a settlement and an administrative region, of the party, that is a political party and an organisation, of Andrea Cozzolino and entity in the profession of the true self of Enrico Crolla and landmark at elevation of the award of Anna Ishii.","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/province> ?v0 . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?v0 <http://dbpedia.org/property/leaderParty> ?v5 . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/PoliticalParty>. ?result <http://dbpedia.org/ontology/elevation> ?v6 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Region>. ?v4 <http://dbpedia.org/property/occupation> ?v2 . <http://dbpedia.org/resource/Anna_Ishii> <http://dbpedia.org/property/awards> ?v6 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/AdministrativeRegion>. ?v0 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Italy>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. <http://dbpedia.org/resource/Andrea_Cozzolino> <http://dbpedia.org/ontology/party> ?v5 . ?v4 <http://xmlns.com/foaf/0.1/givenName> ""Enrico Crolla""@en . ?result <http://dbpedia.org/ontology/country> ?v2 . }","```sparql
# Query for Andrea Cozzolino's political party
SELECT ?party WHERE {
  ?cozzolino dbo:politicalParty ?party .
  ?cozzolino rdfs:label ""Andrea Cozzolino""@en .
  ?party rdf:type dbo:PoliticalParty .
}

# Query for Italian administrative region that is also a settlement and landmark
SELECT DISTINCT ?region WHERE {
  ?region rdf:type dbo:AdministrativeRegion ;
          rdfs:label ?label ;
          dbo:country dbr:Italy .
  FILTER (CONTAINS(LCASE(?label), ""italy""))
  OPTIONAL { ?region dbo:settlement ?settlement . }
  OPTIONAL { ?region dbo:landmark ?landmark . }
}

# Query for Enrico Crolla's profession
SELECT ?profession WHERE {
  ?crolla dbo:occupation ?profession .
  ?crolla rdfs:label ""Enrico Crolla""@en .
}

# Query for Anna Ishii's awarded landmark at a specific elevation
SELECT DISTINCT ?landmark WHERE {
  ?ishii dbo:award ?award .
  ?ishii rdfs:label ""Anna Ishii""@en .
  ?award dbo:recipient ?ishii ;
         dbo:relatedPlace ?landmark .
  OPTIONAL { ?landmark dbo:elevation ?elevation . }
}
```",8,14,9,3,3,3,3,71,0,0,2,0,0.0,0
582,66,test,"Give me the reference to the residence of Hirotaka Sugawara and player in the father, that is an athlete and a soccer manager and a sports manager, of Masami Nagasawa and figure known as the nickname of the team, that is an organisation, of Hajime Moriyasu.",SELECT ?result WHERE { ?v1 <http://dbpedia.org/property/nickname> ?v2 . <http://dbpedia.org/resource/Hirotaka_Sugawara> <http://dbpedia.org/property/residence> ?v3 . ?v6 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Athlete>. ?result <http://xmlns.com/foaf/0.1/name> ?v3 . ?v6 <http://dbpedia.org/ontology/team> ?result . <http://dbpedia.org/resource/Masami_Nagasawa> <http://dbpedia.org/property/father> ?v6 . ?v6 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerManager>. ?result <http://dbpedia.org/property/nickname> ?v2 . ?v1 <http://dbpedia.org/ontology/coach> <http://dbpedia.org/resource/Hajime_Moriyasu> . ?v6 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsManager>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. },"```sparql
SELECT ?residence ?father ?team WHERE {
  # Find Hirotaka Sugawara's residence
  ?sugawara dbo:birthPlace ?residence .
  ?sugawara rdfs:label ""Hirotaka Sugawara""@en .

  # Find father of Masami Nagasawa who is an athlete, soccer manager, and sports manager
  OPTIONAL {
    ?nagasawa dbo:parent ?father .
    ?nagasawa rdfs:label ""Masami Nagasawa""@en .
    ?father dbo:occupation ?occupation .
    FILTER (
      regex(str(?occupation), ""athlete"", ""i"") &&
      regex(str(?occupation), ""soccer manager"", ""i"") &&
      regex(str(?occupation), ""sports manager"", ""i"")
    )
  }

  # Find team associated with Hajime Moriyasu and its organization
  OPTIONAL {
    ?moriyasu dbo:memberOfTeam ?team .
    ?moriyasu rdfs:label ""Hajime Moriyasu""@en .
    ?team dbo:nickname ?nickname .
    ?team dbo:type dbr:Sports_team .
  }
}
```",7,11,8,3,3,3,3,71,0,0,1,0,0.0,0
433,56,test,"Give me the associated musical artist of the person born, that is a musical artist and an artist, as Paul Laurence Dunbar Chambers Jr. and professional in the profession of the writer of Slowhand at 70 – Live at the Royal Albert Hall and associated musical artist of Bill Evans.","SELECT ?result WHERE { ?v2 <http://dbpedia.org/property/birthName> ""Paul Laurence Dunbar Chambers Jr.""@en . ?v0 <http://dbpedia.org/property/occupation> ?v1 . ?v2 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. <http://dbpedia.org/resource/Slowhand_at_70_–_Live_at_the_Royal_Albert_Hall> <http://dbpedia.org/property/writer> ?v0 . ?result <http://dbpedia.org/property/occupation> ?v1 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. <http://dbpedia.org/resource/Bill_Evans> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . }","```sparql
SELECT ?person WHERE {
  # Paul Laurence Dunbar Chambers Jr.
  ?chambers rdfs:label ""Paul Chambers""@en .
  
  # Bill Evans
  ?evans rdfs:label ""Bill Evans""@en .

  # Eric Clapton's album writer
  ?clapton rdfs:label ""Eric Clapton""@en .
  ?album dbo:author ?clapton ;
         rdfs:label ""Slowhand at 70 – Live at the Royal Albert Hall""@en .

  # Associated musical artist of Bill Evans
  ?evans dbo:associatedMusicalArtist ?person .

  # Associated musical artist of Paul Laurence Dunbar Chambers Jr.
  ?chambers dbo:associatedMusicalArtist ?person .

  # Person born as a musical artist and an artist
  ?person dbo:birthPlace ?place .
  ?person rdf:type dbo:Musician ;
          dbo:profession ""Jazz musician""@en .

  # Professional in the profession of Eric Clapton
  ?clapton dbo:associatedMusicalArtist ?person .
}
```",6,8,7,3,3,3,3,71,0,0,1,0,0.0,0
582,62,test,"Give me the figure known as --10-19 and reference to the residence of the reference, that is a scientist, to Hirotaka Sugawara and player in the father, that is an athlete and a soccer manager and a sports manager, of the child of Kazuaki Nagasawa.","SELECT ?result WHERE { ?v4 <http://xmlns.com/foaf/0.1/name> ""Hirotaka Sugawara""@en . ?v6 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Athlete>. ?result <http://xmlns.com/foaf/0.1/name> ?v3 . ?v0 <http://dbpedia.org/property/father> ?v6 . ?result <http://dbpedia.org/property/nickname> ""--10-19""^^<http://www.w3.org/2001/XMLSchema#gMonthDay> . ?v6 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerManager>. ?v4 <http://dbpedia.org/property/residence> ?v3 . ?v6 <http://dbpedia.org/ontology/team> ?result . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Scientist>. ?v0 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Kazuaki_Nagasawa> . ?v6 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsManager>. }","```sparql
SELECT ?figure WHERE {
  # Find Hirotaka Sugawara and his residence
  ?sugawara dbo:residence ?residence .
  ?sugawara rdfs:label ""Hirotaka Sugawara""@en .

  # Find Kazuaki Nagasawa's child and their father who is an athlete, soccer manager, and sports manager
  ?nagasawaChild dbo:parent ?father .
  ?nagasawaChild dbo:childOf ?kazuakiNagasawa .
  ?kazuakiNagasawa rdfs:label ""Kazuaki Nagasawa""@en .

  # Ensure the father is an athlete, soccer manager, and sports manager
  ?father rdf:type dbo:Athlete ;
          dbo:soccerManager true ;
          dbo:sportsManager true .

  # Find the figure known as --10-19 related to these entities
  OPTIONAL {
    ?figure rdfs:label ""--10-19""@en .
    FILTER (?residence = ?figure || ?father = ?figure)
  }
}
```",7,11,8,3,3,3,3,71,0,0,1,0,0.0,0
917,65,test,"Give me the child of the father of Kamehameha IV and parent of the child, that is a royalty, of Kamehameha IV and child of the father of the spouse, that is a royalty, of Leleiohoku I.",SELECT ?result WHERE { ?v2 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Kamehameha_IV> . ?v1 <http://dbpedia.org/property/father> ?v5 . ?v1 <http://dbpedia.org/ontology/spouse> <http://dbpedia.org/resource/Leleiohoku_I> . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?result <http://dbpedia.org/property/father> ?v0 . ?result <http://dbpedia.org/ontology/child> ?v2 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. <http://dbpedia.org/resource/Kamehameha_IV> <http://dbpedia.org/property/father> ?v0 . ?result <http://dbpedia.org/ontology/parent> ?v5 . },"```sparql
SELECT ?child WHERE {
  # Find Kamehameha IV and his father
  ?kamehamehaIV dbo:parent ?father .
  ?kamehamehaIV rdfs:label ""Kamehameha IV""@en .

  # Identify the child of this father who is royalty (Kamehameha IV)
  OPTIONAL {
    ?father dbo:child ?child .
    FILTER (?child = ?kamehamehaIV)
  }

  # Find spouse of Leleiohoku I and ensure they are royalty
  OPTIONAL {
    ?leleiohokuI dbo:spouse ?royalSpouse .
    ?leleiohokuI rdfs:label ""Leleiohoku I""@en .
    FILTER (regex(str(?royalSpouse), ""Queen Emma"", ""i""))
  }

  # Find the father of this royal spouse
  OPTIONAL {
    ?royalSpouse dbo:parent ?spouseFather .
    FILTER (regex(str(?royalSpouse), ""Queen Emma"", ""i""))
  }
}
```",7,9,8,3,3,3,3,71,1,0,0,1.0,1.0,1.0
47,69,test,"Give me the office of the awardee of the entity, that is an award, in India and office of the awardee of Banga Bhushan and office of the administration of the commander, that is a politician, in Operation Green Hunt.",SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/India> . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Award>. ?v2 <http://dbpedia.org/property/office> ?result . ?v7 <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/Banga_Bhushan> . ?v7 <http://dbpedia.org/property/office> ?result . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v2 <http://dbpedia.org/property/awards> ?v1 . <http://dbpedia.org/resource/Operation_Green_Hunt> <http://dbpedia.org/ontology/commander> ?v4 . ?v3 <http://dbpedia.org/property/governor> ?v4 . ?v3 <http://dbpedia.org/property/office> ?result . },"```sparql
# Query for the office of awardees of awards given in India
SELECT DISTINCT ?award ?office WHERE {
  ?award a dbo:Award ;
         dbo:country dbr:India .
  OPTIONAL { 
    ?recipient dbo:recipientOfAward ?award .
    ?recipient dbo:office ?office .
  }
}

# Query for the office of the awardee of Banga Bhushan
SELECT DISTINCT ?bangaBhushanOffice WHERE {
  ?bangaBhushan a dbo:Award ;
                rdfs:label ""Banga Bhushan""@en .
  OPTIONAL { 
    ?recipient dbo:recipientOfAward ?bangaBhushan .
    ?recipient dbo:office ?bangaBhushanOffice .
  }
}

# Query for the office of the administration of a politician in Operation Green Hunt
SELECT DISTINCT ?politician ?office WHERE {
  ?operation rdfs:label ""Operation Green Hunt""@en ;
             dbo:participant ?politician .
  FILTER EXISTS { ?politician a dbo:Politician }
  OPTIONAL { 
    ?politician dbo:position ?office .
  }
}
```",8,10,9,3,3,3,3,71,0,0,1,0,0.0,0
527,20,test,"Give me the actor of the movie, that is a work and English and a television show, with the professional in Actor and author of the work, that is a work and a book, of the host of Hyperland.","SELECT ?result WHERE { ?v5 <http://dbpedia.org/property/author> ?result . ?v5 <http://dbpedia.org/property/author> ?v4 . ?v1 <http://dbpedia.org/property/occupation> ""Actor""@en . ?v2 <http://dbpedia.org/property/starring> ?result . ?v2 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/United_Kingdom>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/TelevisionShow>. ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Book>. ?v2 <http://dbpedia.org/property/starring> ?v1 . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. <http://dbpedia.org/resource/Hyperland> <http://dbpedia.org/ontology/presenter> ?v4 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. }","```sparql
SELECT ?actor WHERE {
  # Find the host of Hyperland
  ?hyperland dbo:genre dbc:American_television_series .
  ?hyperland rdfs:label ""Hyperland""@en .
  ?hyperland dbo:host ?host .

  # Find books authored by the host of Hyperland
  ?book dbo:author ?host .
  ?book rdf:type dbo:Book .

  # Find an actor who acted in a movie that is also considered a work and is English
  ?movie dbo:actor ?actor .
  ?movie rdf:type dbo:Film .
  ?movie dbo:language ""English"" .
  ?movie dbo:work ?work .

  # Ensure the actor is also the author of one of the books identified
  ?book2 dbo:author ?actor .
  
  FILTER (?host = ?actor)
}
```",6,11,7,3,2,3,2,20,0,0,1,0,0.0,0
5,19,test,"Give me the birthplace of the person born, that is a politician, as  and entity in the award of the associated musical artist, that is a band, of Rubén Colón Tarrats.","SELECT ?result WHERE { ?v4 <http://dbpedia.org/property/awards> ?v0 . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Band>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v3 <http://dbpedia.org/property/birthName> """"@en . ?result <http://dbpedia.org/ontology/country> ?v0 . ?v3 <http://dbpedia.org/ontology/birthPlace> ?result . <http://dbpedia.org/resource/Rubén_Colón_Tarrats> <http://dbpedia.org/ontology/associatedMusicalArtist> ?v4 . }","```sparql
SELECT ?birthPlace WHERE {
  # Step 1: Identify Rubén Colón Tarrats and his associated band
  ?rubenColonTarrats dbo:associatedBand ?band .
  ?rubenColonTarrats rdfs:label ""Rubén Colón Tarrats""@en .

  # Step 2: Find awards of the band
  ?band dbo:award ?award .

  # Step 3: Identify entities associated with these awards
  ?award dbo:entity ?associatedEntity .

  # Step 4: Find a politician born at the birthplace of this entity
  ?politician rdf:type dbo:Politician .
  ?politician dbo:birthPlace ?birthPlace .
  ?associatedEntity dbo:birthPlace ?birthPlace .
}
```",5,7,6,3,2,3,2,20,0,0,2,0,0.0,0
865,66,test,"Give me the native of the residence, that is a country, of Ram Jaipal Singh Yadav and father of the child, that is a politician, of Abu Ahmad Abdul Hafiz and father of the child of the father of Abul Maal Abdul Muhith.",SELECT ?result WHERE { ?v5 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Abu_Ahmad_Abdul_Hafiz> . ?v3 <http://dbpedia.org/property/father> ?v6 . ?v3 <http://dbpedia.org/property/father> ?result . <http://dbpedia.org/resource/Ram_Jaipal_Singh_Yadav> <http://dbpedia.org/property/residence> ?v0 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. ?result <http://dbpedia.org/ontology/birthPlace> ?v0 . ?v5 <http://dbpedia.org/property/father> ?result . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. <http://dbpedia.org/resource/Abul_Maal_Abdul_Muhith> <http://dbpedia.org/property/father> ?v6 . },"```sparql
SELECT DISTINCT ?native WHERE {
  # Ram Jaipal Singh Yadav's residence
  ?yadav dbo:residence ?residence .
  ?yadav rdfs:label ""Ram Jaipal Singh Yadav""@en .
  
  # Check if the residence is a country and get its native
  OPTIONAL { 
    ?residence rdf:type dbo:Country .
    ?residence dbo:nativeName ?native .
  }
  
  # Abu Ahmad Abdul Hafiz's child who is a politician
  ?hafiz dbo:child ?child .
  ?hafiz rdfs:label ""Abu Ahmad Abdul Hafiz""@en .
  OPTIONAL {
    ?child rdf:type dbo:Politician .
  }

  # Abul Maal Abdul Muhith's father and his father
  ?muhith dbo:parent ?fatherMuhith .
  ?muhith rdfs:label ""Abul Maal Abdul Muhith""@en .
  OPTIONAL {
    ?fatherMuhith dbo:parent ?grandFatherMuhith .
  }
}
```",7,9,8,3,3,3,3,71,0,0,1,0,0.0,0
917,56,test,"Give me the parent of the child, that is a royalty, of Kamehameha IV and child of Kekūanāoʻa and child of the father of the child, that is a royalty, of Kamehameha III.",SELECT ?result WHERE { ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v2 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Kamehameha_IV> . ?v4 <http://dbpedia.org/property/father> ?v0 . ?result <http://dbpedia.org/ontology/child> ?v2 . <http://dbpedia.org/resource/Kamehameha_III> <http://dbpedia.org/ontology/child> ?v4 . ?result <http://dbpedia.org/ontology/parent> <http://dbpedia.org/resource/Kekūanāoʻa> . ?result <http://dbpedia.org/property/father> ?v0 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. },"```sparql
SELECT ?grandfather WHERE {
  # Find a child of Kamehameha IV who is royalty
  ?child dbo:parent ?kamehamehaIV .
  ?kamehamehaIV rdfs:label ""Kamehameha IV""@en .
  FILTER (regex(str(?child), ""royalty"", ""i""))

  # Find the father of this royal child
  ?child dbo:parent ?father .

  # Check if this father is a child of Kekūanāoʻa
  ?father dbo:parent ?kekuanaoa .
  ?kekuanaoa rdfs:label ""Kekūanāoʻa""@en .

  # Find the grandfather (father of the father)
  ?father dbo:parent ?grandfather .
}
```",6,8,7,3,3,3,3,71,0,0,1,0,0.0,0
645,69,test,"Give me the military force of the force, that is an event and a military conflict and a societal event, of Francisco Largo Caballero and leader of the office, that is a government agency and an organisation, of the native of Restoration (Spain) and commander in the force of the commander in Siege of Madrid.",SELECT ?result WHERE { ?v3 <http://dbpedia.org/ontology/commander> ?result . ?v7 <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Francisco_Largo_Caballero> . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/GovernmentAgency>. ?v7 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?v7 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?result <http://dbpedia.org/ontology/battle> ?v7 . ?v2 <http://dbpedia.org/ontology/leader> ?result . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?v7 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v3 <http://dbpedia.org/ontology/commander> ?v4 . ?v1 <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Restoration_(Spain)> . <http://dbpedia.org/resource/Siege_of_Madrid> <http://dbpedia.org/ontology/commander> ?v4 . ?v1 <http://dbpedia.org/property/office> ?v2 . },"```sparql
SELECT ?militaryForce WHERE {
  # Identify Francisco Largo Caballero's involvement in a military conflict and societal event
  ?event dbo:agent ?francisco .
  ?francisco rdfs:label ""Francisco Largo Caballero""@en .
  ?event rdf:type ?eventType .
  FILTER (
    (regex(str(?eventType), ""Military Conflict"", ""i"") || regex(str(?eventType), ""Societal Event"", ""i""))
  )
  
  # Find the military force associated with this event
  ?event dbo:participatesIn ?militaryForce .

  # Identify a leader of an office that is both a government agency and organization, connected to someone from Restoration Spain
  OPTIONAL {
    ?office dbo:leader ?leader .
    ?office rdf:type [ 
      rdf:type dbo:GovernmentAgency ;
      rdf:type dbo:Organization
    ] .
    
    ?restorationPerson dbo:nativeCountry dbc:Spain .
    ?restorationPerson rdfs:label ""Restoration (Spain)""@en .
    ?leader dbo:nationality ?restorationPerson .
  }

  # Find the commander in the Siege of Madrid and their military force
  OPTIONAL {
    ?siegeEvent dbo:commander ?commander .
    ?siegeEvent rdfs:label ""Siege of Madrid""@en .
    
    ?commander dbo:militaryForce ?militaryForce .
  }
}
```",8,13,9,3,3,3,3,71,0,0,2,0,0.0,0
933,65,test,"Give me the reference to the birth name of the professional in Musician and band of the band, that is a group and a band and an organisation, of Alan Warner (musician) and band of the band of Alan Warner (musician).",SELECT ?result WHERE { ?result <http://xmlns.com/foaf/0.1/name> ?v5 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Band>. <http://dbpedia.org/resource/Alan_Warner_(musician)> <http://dbpedia.org/ontology/associatedMusicalArtist> ?v0 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Group>. <http://dbpedia.org/resource/Alan_Warner_(musician)> <http://dbpedia.org/ontology/associatedMusicalArtist> ?v2 . ?v2 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v1 <http://dbpedia.org/property/occupation> <http://dbpedia.org/resource/Musician> . ?v0 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v1 <http://dbpedia.org/property/birthName> ?v5 . },"```sparql
SELECT ?birthName ?band WHERE {
  # Find Alan Warner and his birth name
  ?alanWarner dbo:birthName ?birthName .
  ?alanWarner rdfs:label ""Alan Warner (musician)""@en .

  # Find bands associated with Alan Warner that are groups/organizations
  ?alanWarner dbo:band ?band .
  ?band a dbo:Band ;
        a dbo:Organization ;
        a dbo:MusicalGroup .
}
```",7,10,8,3,3,3,3,71,0,0,1,0,0.0,0
933,56,test,"Give me the band of the band, that is a group and a band and an organisation, of the person born, that is a musical artist, on 1947-04-21 and reference to Alan Warner and band of the band of Alan Warner (musician).","SELECT ?result WHERE { ?v4 <http://dbpedia.org/ontology/associatedMusicalArtist> ?v0 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Band>. <http://dbpedia.org/resource/Alan_Warner_(musician)> <http://dbpedia.org/ontology/associatedMusicalArtist> ?v2 . ?result <http://xmlns.com/foaf/0.1/name> ""Alan Warner""@en . ?v4 <http://dbpedia.org/ontology/birthDate> ""1947-04-21""^^<http://www.w3.org/2001/XMLSchema#date> . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Group>. ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?v0 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v2 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . }","```sparql
SELECT ?bandOfBand WHERE {
  # Step 1: Identify the person born on 1947-04-21 who is a musical artist
  ?person dbo:musicalArtist true .
  ?person dbo:birthDate ""1947-04-21""^^xsd:date .

  # Step 2: Find the band associated with this person that is both a group and an organization
  ?person dbo:band ?band1 .
  ?band1 rdf:type dbp:Band .
  ?band1 rdf:type dbp:MusicalGroup .
  
  # Step 3: Identify Alan Warner's band
  ?alanWarner rdfs:label ""Alan Warner (musician)""@en .
  ?alanWarner dbo:band ?band2 .

  # Step 4: Find the band associated with Alan Warner's band
  ?band2 dbo:band ?bandOfBand .
}
```",6,10,7,3,3,3,3,71,0,0,1,0,0.0,0
18,26,test,"Give me the alumnus of the figure known, that is an educational institution, as Saints and professional in the award of Ana María Sánchez de Ríos and parent of Liza Huber.","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/almaMater> ?v1 . ?v1 <http://dbpedia.org/property/nickname> ""Saints""@en . ?result <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Liza_Huber> . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/EducationalInstitution>. ?result <http://dbpedia.org/property/occupation> ?v4 . <http://dbpedia.org/resource/Ana_María_Sánchez_de_Ríos> <http://dbpedia.org/property/awards> ?v4 . }","```sparql
SELECT ?alumnus WHERE {
  # Find the educational institution known as ""Saints""
  ?institution rdfs:label ?name .
  FILTER (regex(?name, ""Saints"", ""i""))

  # Identify Ana María Sánchez de Ríos and her awards
  ?anaMaría dbo:award ?award .
  ?anaMaría rdfs:label ""Ana María Sánchez de Ríos""@en .

  # Find Liza Huber as the child of Ana María Sánchez de Ríos
  ?liza foaf:parent ?anaMaría .
  ?liza rdfs:label ""Liza Huber""@en .

  # Identify the alumnus who is a parent of Liza Huber and attended Saints
  ?alumnus dbo:almaMater ?institution .
  ?alumnus foaf:parent ?liza .
}
```",5,6,6,2,3,2,3,28,0,0,1,0,0.0,0
933,61,test,"Give me the reference to the birth name of the professional in Musician and band of the band, that is a group and a band and an organisation, of the person born, that is a musical artist, on 1947-04-21.","SELECT ?result WHERE { ?v3 <http://dbpedia.org/ontology/associatedMusicalArtist> ?v0 . ?v1 <http://dbpedia.org/property/birthName> ?v4 . ?result <http://xmlns.com/foaf/0.1/name> ?v4 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Band>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Group>. ?v0 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v3 <http://dbpedia.org/ontology/birthDate> ""1947-04-21""^^<http://www.w3.org/2001/XMLSchema#date> . ?v1 <http://dbpedia.org/property/occupation> <http://dbpedia.org/resource/Musician> . }","```sparql
SELECT ?birthName WHERE {
  # Step 1: Identify the musical artist born on April 21, 1947
  ?person dbo:birthday ""1947-04-21""^^xsd:date ;
          rdf:type dbo:MusicalArtist .

  # Step 2: Find the band associated with this person that is also an organization and a group
  ?band dbo:member ?person ;
        rdf:type dbo:Band, dbo:Organization, dbo:Group .

  # Step 3: Identify a professional musician in this band
  ?musician dbo:memberOf ?band ;
            rdf:type dbo:Musician .

  # Step 4: Retrieve the birth name of this musician
  ?musician foaf:name ?birthName .
}
```",6,10,7,3,2,3,3,71,0,0,1,0,0.0,0
839,70,test,"Give me the band of the band, that is a musical artist, of the professional in Musician and band of the member of the band, that is a band and a group, of Peter Schorowsky and band of the person born, that is a musical artist, as Kevin Richard Russell.","SELECT ?result WHERE { ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Band>. ?v1 <http://dbpedia.org/ontology/associatedMusicalArtist> ?v3 . ?v1 <http://dbpedia.org/property/occupation> ""Musician""@en . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?result <http://dbpedia.org/ontology/bandMember> ?v7 . ?v0 <http://dbpedia.org/ontology/bandMember> ?v7 . ?v4 <http://dbpedia.org/property/birthName> ""Kevin Richard Russell""@en . <http://dbpedia.org/resource/Peter_Schorowsky> <http://dbpedia.org/ontology/associatedMusicalArtist> ?v0 . ?result <http://dbpedia.org/ontology/bandMember> ?v3 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?v4 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Group>. }","```sparql
SELECT ?bandOfBand ?memberBand ?personBand WHERE {
  # Step 1: Find Peter Schorowsky's band
  ?peter dbo:associatedBand ?band .
  ?peter rdfs:label ""Peter Schorowsky""@en .

  # Step 2: Find a member of this band
  OPTIONAL { 
    ?band dbo:member ?member .
  }

  # Step 3: Check if the member has a professional role related to Musician and band
  OPTIONAL {
    ?member dbo:profession ?profession .
    FILTER (CONTAINS(LCASE(str(?profession)), ""musician and band""))
  }

  # Step 4: Find Kevin Richard Russell's band
  ?kevin dbo:associatedBand ?personBand .
  ?kevin rdfs:label ""Kevin Richard Russell""@en .

  # Step 5: Identify the band of the member found in step 2 (if any)
  OPTIONAL {
    ?member dbo:associatedBand ?memberBand .
  }

  # Step 6: Find the band associated with the professional role from step 3
  OPTIONAL {
    ?profession dbo:band ?bandOfBand .
  }
}
```",8,12,9,3,3,3,3,71,0,0,1,0,0.0,0
826,69,test,"Give me the spouse of the child of the father of Anna Magdalena Appel and successor of the child, that is a royalty, of Louis I, Grand Duke of Hesse and predecessor of the parent of the child of Louis IV, Grand Duke of Hesse.","SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/parent> <http://dbpedia.org/resource/Louis_IV,_Grand_Duke_of_Hesse> . ?v3 <http://dbpedia.org/ontology/spouse> ?result . ?v1 <http://dbpedia.org/ontology/parent> ?v2 . ?result <http://dbpedia.org/ontology/successor> ?v2 . ?v7 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v7 <http://dbpedia.org/ontology/successor> ?result . <http://dbpedia.org/resource/Louis_I,_Grand_Duke_of_Hesse> <http://dbpedia.org/ontology/child> ?v7 . <http://dbpedia.org/resource/Anna_Magdalena_Appel> <http://dbpedia.org/property/father> ?v4 . ?v3 <http://dbpedia.org/property/father> ?v4 . }","```sparql
SELECT ?spouse WHERE {
  # Anna Magdalena Bach and her father
  ?annaMagdalena dbo:parent ?father .
  ?annaMagdalena rdfs:label ""Anna Magdalena Bach""@en .

  # Johann Sebastian Bach as her spouse
  ?johannSebastian dbo:spouse ?annaMagdalena .
  ?johannSebastian rdfs:label ""Johann Sebastian Bach""@en .

  # Successor of one of their children who is royalty and related to Louis I, Grand Duke of Hesse
  OPTIONAL {
    ?child dbo:parent ?johannSebastian .
    ?successor dbo:succ ?child .
    ?successor dbo:spouse ?royaltySpouse .
    ?royaltySpouse dbo:parent ?louisI .
    ?louisI rdfs:label ""Louis I, Grand Duke of Hesse""@en .
  }

  # Predecessor of the parent of a child of Louis IV, Grand Duke of Hesse
  OPTIONAL {
    ?childOfLouisIV dbo:parent ?parent .
    ?parent dbo:succ ?predecessor .
    ?louisIV rdfs:label ""Louis IV, Grand Duke of Hesse""@en .
    ?childOfLouisIV dbo:parent ?louisIV .
  }

  # Find the spouse
  ?spouse = ?royaltySpouse .
}
```",8,9,9,3,3,3,3,71,0,0,1,0,0.0,0
216,71,test,"Give me the team of the person born, that is a sports manager and a soccer manager and a soccer player, on the death of Pavel Vezhinov and player in the coach of the reference, that is an organisation and a soccer club, to Croatia U21 and player in the coach, that is a soccer player and a sports manager and a soccer manager, of the player, that is an organisation and a sports club and a soccer club, in Džemal Berberović.","SELECT ?result WHERE { ?v8 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsManager>. ?v8 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerManager>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?v1 <http://dbpedia.org/ontology/coach> ?v2 . ?v8 <http://dbpedia.org/ontology/birthDate> ?v7 . ?result <http://dbpedia.org/ontology/coach> ?v8 . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerPlayer>. ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsManager>. ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?v1 <http://xmlns.com/foaf/0.1/name> ""Croatia U21""@en . <http://dbpedia.org/resource/Džemal_Berberović> <http://dbpedia.org/ontology/team> ?v4 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerClub>. ?v2 <http://dbpedia.org/ontology/team> ?result . ?v5 <http://dbpedia.org/ontology/team> ?result . <http://dbpedia.org/resource/Pavel_Vezhinov> <http://dbpedia.org/ontology/deathDate> ?v7 . ?v8 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerPlayer>. ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsClub>. ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerManager>. ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerClub>. ?v4 <http://dbpedia.org/ontology/coach> ?v5 . }","```sparql
SELECT ?team WHERE {
  # Find Pavel Vezhinov's death date
  ?vezhinov dbo:deathDate ?deathDate .
  ?vezhinov rdfs:label ""Pavel Vezhinov""@en .

  # Find a sports manager and soccer manager born on that date
  ?person dbo:birthDate ?birthDate ;
          rdf:type dbo:SoccerManager, dbo:SportsManager ;
          dbo:birthPlace ?place .
  FILTER (?birthDate = ?deathDate)

  # Identify the team associated with this person
  OPTIONAL {
    ?team dbo:coach ?person ;
          rdf:type dbo:SoccerClub, dbo:Organization .
  }

  # Find the coach of Croatia U21 at that time
  OPTIONAL {
    ?croatiaU21Coach dbo:position ""Head Coach""@en ;
                     dbo:worksFor ?team .
    ?croatiaU21Coach rdfs:label ""Croatia national under-21 football team""@en .
  }

  # Determine Džemal Berberović's role in the identified team
  OPTIONAL {
    ?djemalBerberovic dbo:position ""Player""@en, ""SoccerManager""@en, ""SoccerCoach""@en ;
                      dbo:worksFor ?team .
    ?djemalBerberovic rdfs:label ""Džemal Berberović""@en .
  }
}
```",9,20,10,3,3,3,3,71,0,0,1,0,0.0,0
216,25,test,Give me the office of the mayor of Ros Bates and administration of  and party of the awardee of Australian Defence Medal.,"SELECT ?result WHERE { ?v3 <http://dbpedia.org/property/office> ?result . ?v4 <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/Australian_Defence_Medal> . ?result <http://dbpedia.org/property/leader> """"@en . ?v4 <http://dbpedia.org/ontology/party> ?result . <http://dbpedia.org/resource/Ros_Bates> <http://dbpedia.org/property/leader> ?v3 . }","```sparql
# Query for Ros Bates' office as mayor
SELECT ?office WHERE {
  ?rosBates dbo:occupation ?office .
  ?rosBates rdfs:label ""Ros Bates""@en .
  FILTER regex(str(?office), ""mayor"", ""i"")
}

UNION

# Query for awardee of Australian Defence Medal, their party and administration
SELECT DISTINCT ?party ?administration WHERE {
  ?person dbo:award ?medal .
  ?medal rdfs:label ""Australian Defence Medal""@en .
  
  OPTIONAL { 
    ?person dbo:politicalParty ?party .
  }
  
  OPTIONAL {
    ?person dbo:office ?administration .
  }
}
```",5,5,6,2,3,2,3,28,0,0,1,0,0.0,0
926,57,test,"Give me the father of Mahmud II and child of the father, that is a royalty, of Mustafa III and successor of the child of the spouse of Şermi Kadın.",SELECT ?result WHERE { <http://dbpedia.org/resource/Mustafa_III> <http://dbpedia.org/property/father> ?v0 . <http://dbpedia.org/resource/Mahmud_II> <http://dbpedia.org/property/father> ?result . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v4 <http://dbpedia.org/property/father> ?v1 . ?v4 <http://dbpedia.org/ontology/successor> ?result . ?v0 <http://dbpedia.org/ontology/child> ?result . ?v1 <http://dbpedia.org/ontology/spouse> <http://dbpedia.org/resource/Şermi_Kadın> . },"```sparql
SELECT ?fatherOfMahmudII ?royalChild ?successor WHERE {
  # Find father of Mahmud II
  ?mahmudII dbo:parent ?fatherOfMahmudII .
  ?mahmudII rdfs:label ""Mahmud II""@en .

  # Find child of the father of Mustafa III who is royalty
  ?mustafaIII dbo:parent ?fatherOfMustafaIII .
  ?mustafaIII rdfs:label ""Mustafa III""@en .
  OPTIONAL {
    ?royalChild dbo:parent ?fatherOfMustafaIII .
    FILTER (regex(str(?royalChild), ""Sultan"", ""i"") || regex(str(?royalChild), ""Prince"", ""i""))
  }

  # Find spouse of Şermi Kadın and her child
  OPTIONAL {
    ?sermiKadin dbo:spouse ?spouseOfSermini .
    ?sermiKadin rdfs:label ""Şermi Kadın""@en .
    ?childOfSpouse dbo:parent ?spouseOfSermini .
  }

  # Find successor of the child of Şermi Kadın's spouse
  OPTIONAL {
    ?successor dbo:predecessor ?childOfSpouse .
  }
}
```",6,7,7,3,3,3,3,71,0,0,1,0,0.0,0
507,68,test,"Give me the spouse of the person born as the birth name of Anne V. Coates and director of the movie, that is a movie and a work, with the person born on 1919-06-17 and professional in the profession of Guy Ferland.","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/spouse> ?v4 . ?v7 <http://dbpedia.org/ontology/director> ?result . ?v7 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?v7 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Film>. ?v0 <http://dbpedia.org/ontology/birthDate> ""1919-06-17""^^<http://www.w3.org/2001/XMLSchema#date> . ?result <http://dbpedia.org/property/occupation> ?v3 . ?v7 <http://dbpedia.org/property/starring> ?v0 . <http://dbpedia.org/resource/Anne_V._Coates> <http://dbpedia.org/property/birthName> ?v5 . <http://dbpedia.org/resource/Guy_Ferland> <http://dbpedia.org/property/occupation> ?v3 . ?v4 <http://dbpedia.org/property/birthName> ?v5 . }","```sparql
SELECT ?spouse WHERE {
  # Find Anne V. Coates' birth name
  ?anneVCoates dbo:birthName ?birthName .
  ?anneVCoates rdfs:label ""Anne V. Coates""@en .

  # Find a movie directed by Anne V. Coates
  ?movie dbo:director ?anneVCoates .
  ?movie rdf:type dbo:Film .

  # Find the person with the same birth name as Anne V. Coates and their spouse
  ?person dbo:birthName ?birthName .
  ?person dbo:spouse ?spouse1 .

  # Identify Guy Ferland by his birthday and profession
  ?guyFerland dbo:birthday ""1919-06-17""^^xsd:date .
  ?guyFerland dbo:profession ?profession .
  FILTER (regex(str(?profession), ""Film director"", ""i""))

  # Find the spouse of Guy Ferland
  ?guyFerland dbo:spouse ?spouse2 .

  # Return the spouse of the person with Anne V. Coates' birth name who directed a movie
  BIND(?spouse1 AS ?spouse)
}
```",8,10,9,3,3,3,3,71,0,0,1,0,0.0,0
495,18,test,Give me the child of the father of the parent of Princess Catherine of Württemberg and father of the child of Princess Charlotte of Saxe-Hildburghausen.,SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Princess_Catherine_of_Württemberg> . ?v3 <http://dbpedia.org/ontology/parent> <http://dbpedia.org/resource/Princess_Charlotte_of_Saxe-Hildburghausen> . ?v3 <http://dbpedia.org/property/father> ?result . ?v1 <http://dbpedia.org/property/father> ?v2 . ?result <http://dbpedia.org/property/father> ?v2 . },"```sparql
SELECT ?commonFatherChild WHERE {
  # Step 1: Find Princess Catherine of Württemberg's parent
  ?catherine dbo:parent ?parentCatherine .
  ?catherine rdfs:label ""Princess Catherine of Württemberg""@en .

  # Step 2: Find the father of this parent
  ?parentCatherine dbo:parent ?commonFather .

  # Step 3: Find a child of Princess Charlotte of Saxe-Hildburghausen
  ?charlotte dbo:child ?childCharlotte .
  ?charlotte rdfs:label ""Princess Charlotte of Saxe-Hildburghausen""@en .

  # Step 4: Determine the father of this child
  ?childCharlotte dbo:parent ?commonFather .

  # Step 5: Find the child of the common father identified in steps 2 and 4
  ?commonFather dbo:child ?commonFatherChild .
}
```",5,5,6,3,2,3,2,20,0,0,1,0,0.0,0
433,57,test,"Give me the professional in the profession of Bob Marley and associated musical artist of the associated musical artist, that is an artist and a musical artist, of the associated musical artist, that is a musical artist and an artist, of Ornette Coleman and associated musical artist of Paul Chambers.",SELECT ?result WHERE { <http://dbpedia.org/resource/Bob_Marley> <http://dbpedia.org/property/occupation> ?v3 . ?v5 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. ?result <http://dbpedia.org/property/occupation> ?v3 . ?v0 <http://dbpedia.org/ontology/associatedMusicalArtist> ?v5 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. <http://dbpedia.org/resource/Ornette_Coleman> <http://dbpedia.org/ontology/associatedMusicalArtist> ?v0 . <http://dbpedia.org/resource/Paul_Chambers> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. },"```sparql
SELECT ?finalArtist WHERE {
  # Step 1: Find Bob Marley's profession
  ?bobMarley dbo:profession ?profession .
  ?bobMarley rdfs:label ""Bob Marley""@en .

  # Step 2: Find an associated musical artist with the same profession as Bob Marley
  OPTIONAL { 
    ?artist dbo:profession ?profession .
    ?artist dbo:associatedMusicalArtist ?intermediateArtist1 .
    FILTER (regex(str(?artist), ""musician"", ""i"") && regex(str(?artist), ""artist"", ""i""))
  }

  # Step 3: Repeat for Ornette Coleman
  OPTIONAL {
    ?ornetteColeman dbo:profession ?profession2 .
    ?ornetteColeman rdfs:label ""Ornette Coleman""@en .
    ?intermediateArtist2 dbo:associatedMusicalArtist ?artist .
    FILTER (regex(str(?intermediateArtist2), ""musician"", ""i"") && regex(str(?intermediateArtist2), ""artist"", ""i""))
  }

  # Step 4: Find the associated musical artist of Paul Chambers
  OPTIONAL {
    ?paulChambers dbo:associatedMusicalArtist ?finalArtist .
    ?paulChambers rdfs:label ""Paul Chambers""@en .
  }
}
```",6,10,7,3,3,3,3,71,0,0,4,0,0.0,0
445,60,test,"Give me the entity in the residence, that is a country, of the resident, that is an athlete, of Great Britain and entity in the award of the commander in Battle of Saint-Mihiel.",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/location> ?v2 . ?v0 <http://dbpedia.org/property/awards> ?v1 . <http://dbpedia.org/resource/Battle_of_Saint-Mihiel> <http://dbpedia.org/ontology/commander> ?v0 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Athlete>. ?v3 <http://dbpedia.org/property/residence> <http://dbpedia.org/resource/Great_Britain> . ?result <http://dbpedia.org/ontology/country> ?v1 . ?v3 <http://dbpedia.org/property/residence> ?v2 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. },"```sparql
# Query 1: Find country of residence for athletes from Great Britain
SELECT ?country WHERE {
  ?athlete dbo:nationality dbr:United_Kingdom .
  ?athlete dbo:residenceLocation ?location .
  ?location rdf:type dbo:Country .
  ?location rdfs:label ?country .
}

# Query 2: Find entities in the award of commanders involved in Battle of Saint-Mihiel
SELECT ?awardEntity WHERE {
  ?commander dbo:participatedIn dbr:Battle_of_Saint-Mihiel .
  ?commander dbo:receivedAward ?award .
  ?award dbo:recipient ?entity .
  ?award rdfs:label ?awardEntity .
}
```",6,8,7,3,2,3,3,71,0,0,102,0,0.0,0
124,62,test,"Give me the military force of Battle of Atbara and commander in the war, that is a societal event and a military conflict, of the reference, that is Australian and an organisation and a military unit, to 'A' Battery, Royal Australian Artillery and military force of the war, that is an event and a military conflict and a societal event, of the awardee of British South Africa Company Medal.","SELECT ?result WHERE { ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?v3 <http://dbpedia.org/ontology/commander> ?result . ?v4 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Australia>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v6 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?result <http://dbpedia.org/ontology/battle> ?v6 . ?v0 <http://dbpedia.org/ontology/battle> ?v6 . ?v6 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v0 <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/British_South_Africa_Company_Medal> . ?v4 <http://dbpedia.org/ontology/battle> ?v3 . ?v4 <http://xmlns.com/foaf/0.1/name> ""'A' Battery, Royal Australian Artillery""@en . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?result <http://dbpedia.org/ontology/battle> <http://dbpedia.org/resource/Battle_of_Atbara> . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryUnit>. ?v6 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. }","```sparql
SELECT ?militaryForce ?commander WHERE {
  # Find the military force involved in the Battle of Atbara
  ?battle dbo:militaryConflict ?militaryForce .
  ?battle rdfs:label ""Battle of Atbara""@en .

  # Find the commander associated with the Battle of Atbara
  OPTIONAL { 
    ?battle dbo:commander ?commander .
  }

  # Identify a societal event that is also a military conflict involving 'A' Battery, Royal Australian Artillery
  ?australianEvent dbo:militaryConflict ?militaryForce2 .
  ?australianEvent dbo:participatedIn ?battery .
  ?battery rdfs:label ""A Battery, Royal Australian Artillery""@en .
  FILTER (regex(str(?australianEvent), ""societal event"", ""i""))

  # Determine the military force related to a war involving the awardee of British South Africa Company Medal
  ?medalAwardedTo dbo:awardedFor ?war .
  ?medal rdfs:label ""British South Africa Company Medal""@en .
  OPTIONAL {
    ?war dbo:militaryConflict ?militaryForce3 .
    FILTER (regex(str(?war), ""societal event"", ""i""))
  }
}
```",7,15,8,3,3,3,3,71,0,0,1,0,0.0,0
773,59,test,"Give me the parent of the successor of the child, that is a royalty, of Louis the Pious and spouse of the father of the parent of Bernard (son of Charles the Fat).",SELECT ?result WHERE { ?v2 <http://dbpedia.org/ontology/spouse> ?result . ?result <http://dbpedia.org/ontology/child> ?v5 . ?v0 <http://dbpedia.org/ontology/successor> ?v5 . ?v3 <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Bernard_(son_of_Charles_the_Fat)> . <http://dbpedia.org/resource/Louis_the_Pious> <http://dbpedia.org/ontology/child> ?v0 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v3 <http://dbpedia.org/property/father> ?v2 . },"```sparql
SELECT ?finalParent WHERE {
  # Step 1: Identify a child of Louis the Pious who is royalty
  ?child dbo:parent dbc:Louis_the_Pious ;
         rdf:type dbo:Monarch .

  # Step 2: Find the successor of this royal child
  OPTIONAL { 
    ?successor dbo:succeededBy ?child .
  }

  # Step 3: Determine the parent of this successor
  OPTIONAL {
    ?successor dbo:parent ?finalParent .
  }

  # Step 4: Identify Bernard, son of Charles the Fat
  ?bernard dbo:parent dbc:Charles_the_Fat ;
           rdfs:label ""Bernard""@en .

  # Step 5: Find the father of Bernard's parent (grandfather)
  OPTIONAL {
    ?charlesParent dbo:parent ?grandfather .
    ?charlesParent rdfs:label ""Charles the Fat""@en .
  }

  # Step 6: Determine the spouse of this grandfather
  OPTIONAL {
    ?grandfather dbo:spouse ?spouse .
  }
}
```",6,7,7,3,2,3,3,71,0,0,1,0,0.0,0
47,64,test,"Give me the office of Bidesh Ranjan Bose and office of the administration of the commander, that is a politician, in Operation Green Hunt and office of the awardee of the entity, that is an award, in India.",SELECT ?result WHERE { ?v2 <http://dbpedia.org/property/governor> ?v3 . <http://dbpedia.org/resource/Operation_Green_Hunt> <http://dbpedia.org/ontology/commander> ?v3 . ?v1 <http://dbpedia.org/property/awards> ?v0 . ?v0 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/India> . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Award>. ?v1 <http://dbpedia.org/property/office> ?result . ?v2 <http://dbpedia.org/property/office> ?result . <http://dbpedia.org/resource/Bidesh_Ranjan_Bose> <http://dbpedia.org/property/office> ?result . },"```sparql
SELECT ?bosesOffice ?commandersOffice ?awardeesOffice WHERE {
  # Find Bidesh Ranjan Bose's office
  ?bose a dbo:Person ;
        rdfs:label ""Bidesh Ranjan Bose""@en .
  OPTIONAL { 
    ?bose dbo:office ?bosesOffice .
  }

  # Find the commander in Operation Green Hunt who is also a politician and their office
  ?operation a dbo:MilitaryOperation ;
             rdfs:label ""Operation Green Hunt""@en .
  OPTIONAL {
    ?commander dbo:commanderOf ?operation ;
               dbo:politicalPartyMember ?party ;
               dbo:office ?commandersOffice .
  }

  # Find an award in India and the office of its awardee
  ?award a dbo:Award ;
         dbo:country dbr:India .
  OPTIONAL {
    ?recipient dbo:recipientOf ?award ;
               dbo:office ?awardeesOffice .
  }
}
```",7,9,8,3,3,3,3,71,0,0,1,0,0.0,0
865,63,test,"Give me the father of the child of Abu Ahmad Abdul Hafiz and native of the residence, that is a country, of the person decedent at Patna and father of the child, that is a politician, of Abu Ahmad Abdul Hafiz.",SELECT ?result WHERE { ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. ?v4 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Abu_Ahmad_Abdul_Hafiz> . ?v1 <http://dbpedia.org/property/residence> ?v0 . ?result <http://dbpedia.org/ontology/birthPlace> ?v0 . ?v4 <http://dbpedia.org/property/father> ?result . ?v3 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Abu_Ahmad_Abdul_Hafiz> . ?v3 <http://dbpedia.org/property/father> ?result . ?v1 <http://dbpedia.org/ontology/deathPlace> <http://dbpedia.org/resource/Patna> . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. },"```sparql
SELECT ?father WHERE {
  # Find Abu Ahmad Abdul Hafiz and his children
  ?abuHafiz dbo:child ?child .
  ?abuHafiz rdfs:label ""Abu Ahmad Abdul Hafiz""@en .

  # Identify the decedent at Patna who is a father of a politician child of Abu Ahmad Abdul Hafiz
  OPTIONAL {
    ?decedent dbo:deathPlace dbr:Patna .
    ?decedent dbo:child ?politicianChild .
    ?politicianChild rdf:type dbo:Politician .
    ?abuHafiz dbo:child ?politicianChild .

    # Find the residence (country) of this decedent
    ?decedent dbo:nativeCountry ?residenceCountry .
  }

  # Find the father of the child of Abu Ahmad Abdul Hafiz
  OPTIONAL {
    ?child dbo:parent ?father .
  }
}
```",7,9,8,3,3,3,3,71,0,0,1,0,0.0,0
715,67,test,"Give me the commander in the force of the mayor, that is an office holder and a politician and a president, of 1933 Spanish general election and leader of the office, that is a government agency and an organisation, of the reference to Carlos Franco Iribarnegaray and commander in Rif War.","SELECT ?result WHERE { <http://dbpedia.org/resource/Rif_War> <http://dbpedia.org/ontology/commander> ?result . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v1 <http://xmlns.com/foaf/0.1/name> ""Carlos Franco Iribarnegaray""@en . ?v6 <http://dbpedia.org/ontology/commander> ?result . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/President>. <http://dbpedia.org/resource/1933_Spanish_general_election> <http://dbpedia.org/property/leader> ?v0 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/GovernmentAgency>. ?v3 <http://dbpedia.org/ontology/leader> ?result . ?v1 <http://dbpedia.org/property/office> ?v3 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?v6 <http://dbpedia.org/ontology/commander> ?v0 . }","```sparql
SELECT ?commander WHERE {
  # Find the mayor who was an office holder, politician, and president in 1933 Spain
  ?mayor dbo:officeHolder ""Office Holder""@en .
  ?mayor dbo:politician ""Politician""@en .
  ?mayor dbo:president ""President""@en .
  ?mayor dbo:electionYear ""1933""^^xsd:gYear .

  # Find the force commanded by this mayor
  ?mayor dbo:commanderOf ?force .

  # Identify Carlos Franco Iribarnegaray and his associated organization or agency
  ?franco rdfs:label ""Carlos Franco Iribarnegaray""@en .
  ?franco dbo:commanderInRifWar true .

  # Find the leader of the organization or agency linked with Carlos Franco
  ?organization dbo:leader ?leader .
  ?franco dbo:memberOf ?organization .

  # Ensure the commander is the same person in both contexts
  FILTER (?force = ?leader)
}
```",7,12,8,3,3,3,3,71,0,0,1,0,0.0,0
98,9,test,Give me the parent of the successor of Emperor Nijō and child of the child of Emperor Toba.,SELECT ?result WHERE { <http://dbpedia.org/resource/Emperor_Nijō> <http://dbpedia.org/ontology/successor> ?v1 . ?result <http://dbpedia.org/ontology/parent> ?v3 . <http://dbpedia.org/resource/Emperor_Toba> <http://dbpedia.org/ontology/child> ?v3 . ?v1 <http://dbpedia.org/ontology/parent> ?result . },"```sparql
SELECT ?parent WHERE {
  # Find the successor (child) of Emperor Nijo
  ?nijo dbo:child ?successor .
  ?nijo rdfs:label ""Emperor Nijō""@en .

  # Find a child of that successor
  ?successor dbo:child ?grandChild .

  # Find a child of the grandChild (i.e., child of the child of Emperor Toba)
  ?toba dbo:child ?childOfToba .
  ?toba rdfs:label ""Emperor Toba""@en .
  ?childOfToba dbo:child ?greatGrandChild .

  # Ensure that the grandChild and greatGrandChild are the same individual
  FILTER (?grandChild = ?greatGrandChild)

  # Find the parent of this individual (successor's child)
  ?grandChild dbo:parent ?parent .
}
```",4,4,5,2,2,2,2,9,0,0,1,0,0.0,0
18,28,test,"Give me the parent of the professional in Actress and alumnus of the figure known, that is an educational institution, as Saints and professional in the award of Ana María Sánchez de Ríos.","SELECT ?result WHERE { ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/EducationalInstitution>. <http://dbpedia.org/resource/Ana_María_Sánchez_de_Ríos> <http://dbpedia.org/property/awards> ?v1 . ?result <http://dbpedia.org/property/occupation> ?v1 . ?result <http://dbpedia.org/ontology/child> ?v3 . ?v3 <http://dbpedia.org/property/occupation> ""Actress""@en . ?result <http://dbpedia.org/ontology/almaMater> ?v5 . ?v5 <http://dbpedia.org/property/nickname> ""Saints""@en . }","```sparql
SELECT ?parent WHERE {
  # Identify Ana María Sánchez de Ríos and her profession
  ?anaMaría a dbo:Actress ;
            foaf:name ""Ana María Sánchez de Ríos""@en ;
            dbo:almaMater ?institution .

  # Ensure the institution is known as ""Saints""
  FILTER (regex(str(?institution), ""Saints"", ""i""))

  # Find her parents
  ?anaMaría foaf:parent ?parent .
}
```",6,7,7,2,3,2,3,28,0,0,1,0,0.0,0
554,18,test,Give me the leader of the birth place of The Legendary Tigerman and leader of the administration of the party member of Independent politician.,SELECT ?result WHERE { ?v2 <http://dbpedia.org/property/leader> ?result . ?v2 <http://dbpedia.org/property/leader> ?v1 . ?v1 <http://dbpedia.org/ontology/party> <http://dbpedia.org/resource/Independent_politician> . <http://dbpedia.org/resource/The_Legendary_Tigerman> <http://dbpedia.org/ontology/birthPlace> ?v3 . ?v3 <http://dbpedia.org/property/leader> ?result . },"```sparql
SELECT ?birthPlaceLeader ?adminLeader WHERE {
  # Find The Legendary Tigerman's birthplace and its leader
  ?tigerman dbo:birthPlace ?birthPlace .
  ?tigerman rdfs:label ""The Legendary Tigerman""@en .
  
  OPTIONAL { 
    ?birthPlace dbp:governmentHead ?birthPlaceLeader .
  }
  
  # Find an independent politician who is a party member and their administration's leader
  ?politician dbo:memberOf ?party .
  ?politician rdfs:label ?politicianLabel .
  FILTER (regex(?politicianLabel, ""Independent"", ""i"") && regex(?politicianLabel, ""politician"", ""i""))
  
  OPTIONAL {
    ?party dbp:governmentHead ?adminLeader .
  }
}
```",5,5,6,3,2,3,2,20,0,0,3,0,0.0,0
341,8,test,"Give me the writer of the work, that is a work and an album, of Serrano and band member of Beyoncé.","SELECT ?result WHERE { ?v1 <http://dbpedia.org/property/writer> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Album>. ?result <http://dbpedia.org/ontology/associatedMusicalArtist> <http://dbpedia.org/resource/Beyoncé> . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?v1 <http://dbpedia.org/property/writer> ""Serrano""@en . }","```sparql
SELECT ?work ?writer WHERE {
  # Find works that are albums and associated with Serrano
  ?work dbo:genre dbc:Hip_hop_albums ;
        dbo:artist ?artist .
  FILTER (CONTAINS(LCASE(str(?artist)), ""serrano"")) .

  # Check if the work is also linked to a member of Beyoncé's band
  OPTIONAL {
    ?bandMember dbo:memberOfBand ?beyonceBand .
    ?beyonceBand rdfs:label ""Beyoncé""@en .
    ?work dbo:artist ?bandMember .
  }

  # Retrieve the writer(s) of the work
  ?work dbo:writer ?writer .
}
```",3,5,4,2,2,2,2,9,0,0,1,0,0.0,0
965,66,test,"Give me the parent of the person born, that is a noble, as the birth name of George Mountbatten, 2nd Marquess of Milford Haven and parent of the child, that is a royalty, of Prince Louis of Battenberg and spouse of the spouse of Princess Victoria of Hesse and by Rhine.","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/spouse> ?v3 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Noble>. ?v6 <http://dbpedia.org/ontology/parent> ?result . <http://dbpedia.org/resource/Princess_Victoria_of_Hesse_and_by_Rhine> <http://dbpedia.org/ontology/spouse> ?v3 . ?v0 <http://dbpedia.org/property/birthName> ?v5 . ?v6 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Prince_Louis_of_Battenberg> . ?v6 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. <http://dbpedia.org/resource/George_Mountbatten,_2nd_Marquess_of_Milford_Haven> <http://dbpedia.org/property/birthName> ?v5 . ?v0 <http://dbpedia.org/ontology/parent> ?result . }","```sparql
SELECT ?parent WHERE {
  # Step 1: Find the birth name of George Mountbatten, 2nd Marquess of Milford Haven
  ?georgeMountbatten dbo:birthName ?birthName .
  ?georgeMountbatten rdfs:label ""George Mountbatten, 2nd Marquess of Milford Haven""@en .

  # Step 2: Find the parent of George Mountbatten using his birth name
  OPTIONAL {
    ?person dbo:birthName ?birthName .
    ?person dbo:parent ?parent .
  }

  # Step 3: Identify a child of Prince Louis of Battenberg who is royalty and their parent
  OPTIONAL {
    ?princeLouis dbo:child ?royalChild .
    ?princeLouis rdfs:label ""Prince Louis of Battenberg""@en .
    FILTER (regex(str(?royalChild), ""Royal"", ""i""))
    ?royalChild dbo:parent ?parent .
  }

  # Step 4: Find the spouse of Princess Victoria of Hesse and by Rhine
  OPTIONAL {
    ?princessVictoria dbo:spouse ?spouse .
    ?princessVictoria rdfs:label ""Princess Victoria of Hesse and by Rhine""@en .
  }

  # Step 5: Identify the parent of this spouse's spouse
  OPTIONAL {
    ?spouse dbo:spouse ?spouseOfSpouse .
    ?spouseOfSpouse dbo:parent ?parent .
  }
}
```",7,9,8,3,3,3,3,71,0,0,1,0,0.0,0
130,20,test,"Give me the figure known as the film, that is a soccer club and an organisation, of the native, that is a coach and a college coach, of Madison, Alabama and entity in the administration, that is American, of the award of Živko Ključe.","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/state> ?v5 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/CollegeCoach>. ?result <http://dbpedia.org/property/nickname> ?v2 . ?v2 <http://dbpedia.org/ontology/director> ?v1 . <http://dbpedia.org/resource/Živko_Ključe> <http://dbpedia.org/property/awards> ?v4 . ?v5 <http://dbpedia.org/property/governor> ?v4 . ?v5 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/United_States>. ?v1 <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Madison,_Alabama> . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerClub>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Coach>. }","```sparql
SELECT ?film WHERE {
  # Find the American entity in the administration of the Živko Ključe award
  ?award dbo:administeredBy ?americanEntity .
  ?award rdfs:label ""Živko Ključe""@en .
  ?americanEntity dbo:nationality dbc:United_States .

  # Identify the native of Madison, Alabama who is a coach and college coach
  ?person dbo:birthPlace ?madison .
  ?person dbo:occupation ?coachRole .
  ?person dbo:collegeCoach ?collegeCoachRole .
  ?madison rdfs:label ""Madison, Alabama""@en .
  FILTER (regex(str(?coachRole), ""coach"", ""i"") && regex(str(?collegeCoachRole), ""college coach"", ""i""))

  # Determine the film (soccer club or organization) of this person
  ?person dbo:film ?film .
}
```",6,11,7,3,2,3,2,20,0,0,1,0,0.0,0
216,70,test,"Give me the player in the coach, that is a soccer player and a sports manager and a soccer manager, of the player, that is an organisation and a sports club and a soccer club, in Džemal Berberović and player in the coach of Croatia national under-21 football team and team of the person born, that is a sports manager and a soccer manager and a soccer player, on the death of Pavel Vezhinov.",SELECT ?result WHERE { ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsClub>. <http://dbpedia.org/resource/Croatia_national_under-21_football_team> <http://dbpedia.org/ontology/coach> ?v4 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerPlayer>. <http://dbpedia.org/resource/Pavel_Vezhinov> <http://dbpedia.org/ontology/deathDate> ?v1 . ?v7 <http://dbpedia.org/ontology/team> ?result . ?v7 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerPlayer>. ?v7 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerManager>. ?v4 <http://dbpedia.org/ontology/team> ?result . ?v3 <http://dbpedia.org/ontology/birthDate> ?v1 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsManager>. ?v7 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsManager>. <http://dbpedia.org/resource/Džemal_Berberović> <http://dbpedia.org/ontology/team> ?v0 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerClub>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerManager>. ?v0 <http://dbpedia.org/ontology/coach> ?v7 . ?result <http://dbpedia.org/ontology/coach> ?v3 . },"```sparql
SELECT ?playerCoach WHERE {
  # Džemal Berberović's role in Croatia national under-21 football team
  ?džemal dbo:team ?croatiaUnder21 .
  ?džemal rdfs:label ""Džemal Berberović""@en .

  # Find the player who is also a coach (soccer player, sports manager, soccer manager)
  ?playerCoach rdf:type dbo:SoccerPlayer ;
               rdf:type dbo:SportsManager ;
               rdf:type dbo:SoccerManager .
  
  # Identify the organization that is both an organization and a sports club and a soccer club
  ?organization rdf:type dbo:Organization ;
                rdf:type dbo:SportsClub ;
                rdf:type dbo:SoccerClub .

  # Link player-coach to the organization
  ?playerCoach dbo:team ?organization .

  # Find the person born on Pavel Vezhinov's death date who is a sports manager, soccer manager, and soccer player
  ?person dbo:dateOfBirth ?deathDate ;
          rdf:type dbo:SportsManager ;
          rdf:type dbo:SoccerManager ;
          rdf:type dbo:SoccerPlayer .
  
  ?pavel",8,17,9,3,3,3,3,71,0,0,1,0,0.0,0
926,67,test,"Give me the father of Mahmud II and child of the father, that is a royalty, of the parent, that is a royalty, of Beyhan Sultan (daughter of Mustafa III) and successor of the child of the spouse of Şermi Kadın.",SELECT ?result WHERE { ?v0 <http://dbpedia.org/ontology/child> ?result . ?v5 <http://dbpedia.org/ontology/successor> ?result . ?v5 <http://dbpedia.org/property/father> ?v1 . ?v1 <http://dbpedia.org/ontology/spouse> <http://dbpedia.org/resource/Şermi_Kadın> . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v4 <http://dbpedia.org/property/father> ?v0 . <http://dbpedia.org/resource/Mahmud_II> <http://dbpedia.org/property/father> ?result . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. <http://dbpedia.org/resource/Beyhan_Sultan_(daughter_of_Mustafa_III)> <http://dbpedia.org/ontology/parent> ?v4 . },"```sparql
SELECT ?fatherOfMahmudII ?royalChild ?successor WHERE {
  # Find Mahmud II and his father
  ?mahmudII dbo:parent ?fatherOfMahmudII .
  ?mahmudII rdfs:label ""Mahmud II""@en .

  # Find Beyhan Sultan's royal parent and their royal child
  ?beyhanSultan dbo:parent ?royalParent .
  ?beyhanSultan rdfs:label ""Beyhan Sultan""@en .
  FILTER (regex(str(?royalParent), ""Mustafa III"", ""i""))
  
  OPTIONAL {
    ?royalChild dbo:parent ?royalParent .
    FILTER (regex(str(?royalChild), ""Imperial"", ""i"") || regex(str(?royalChild), ""Royal"", ""i""))
  }

  # Find Şermi Kadın's spouse and their child
  ?sermiKadin dbo:spouse ?spouse .
  ?sermiKadin rdfs:label ""Şermi Kadın""@en .

  OPTIONAL {
    ?childOfSpouse dbo:parent ?spouse .
  }

  # Find the successor of this child
  OPTIONAL {
    ?successor dbo:succeededBy ?childOfSpouse .
  }
}
```",7,9,8,3,3,3,3,71,0,0,1,0,0.0,0
124,57,test,"Give me the military force of the war, that is an event and a military conflict and a societal event, of the awardee of British South Africa Company Medal and commander in Mahdist War and military force of the force, that is a societal event and a military conflict, of Herbert Kitchener, 1st Earl Kitchener.","SELECT ?result WHERE { ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. <http://dbpedia.org/resource/Mahdist_War> <http://dbpedia.org/ontology/commander> ?result . ?result <http://dbpedia.org/ontology/battle> ?v3 . ?result <http://dbpedia.org/ontology/battle> ?v5 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v0 <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/British_South_Africa_Company_Medal> . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?v0 <http://dbpedia.org/ontology/battle> ?v5 . ?v3 <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Herbert_Kitchener,_1st_Earl_Kitchener> . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. }","```sparql
SELECT ?militaryForce1 ?militaryForce2 WHERE {
  # Find the awardee of the British South Africa Company Medal who was a commander in the Mahdist War
  ?person dbo:award ""British South Africa Company Medal"" .
  ?person dbo:militaryCommanderOf ""Mahdist War"" .

  # Identify the military force involved in that war
  ?war dbo:participatingMilitaryForce ?militaryForce1 .
  ?war rdfs:label ?eventLabel .
  FILTER (regex(?eventLabel, ""societal event"", ""i"") && regex(?eventLabel, ""military conflict"", ""i""))

  # Identify Herbert Kitchener's associated military force
  ?kitchener dbo:militaryCommanderOf ?forceEvent .
  ?kitchener rdfs:label ""Herbert Kitchener""@en .

  FILTER (regex(str(?forceEvent), ""societal event"", ""i"") && regex(str(?forceEvent), ""military conflict"", ""i""))

  # Identify the military force of the force related to Herbert Kitchener
  ?forceEvent dbo:participatingMilitaryForce ?militaryForce2 .
}
```",6,11,7,3,3,3,3,71,0,0,3,0,0.0,0
865,56,test,"Give me the father of AK Abdul Momen and native of the residence, that is a country, of Ram Jaipal Singh Yadav and father of the child of the father of Abul Maal Abdul Muhith.",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/birthPlace> ?v0 . <http://dbpedia.org/resource/Abul_Maal_Abdul_Muhith> <http://dbpedia.org/property/father> ?v5 . <http://dbpedia.org/resource/AK_Abdul_Momen> <http://dbpedia.org/property/father> ?result . ?v2 <http://dbpedia.org/property/father> ?result . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. ?v2 <http://dbpedia.org/property/father> ?v5 . <http://dbpedia.org/resource/Ram_Jaipal_Singh_Yadav> <http://dbpedia.org/property/residence> ?v0 . },"```sparql
SELECT ?fatherOfAKAbdulMomen ?nativeOfCountry ?fatherOfChild WHERE {
  # Find the father of AK Abdul Momen
  ?akAbdulMomen dbo:father ?fatherOfAKAbdulMomen .
  ?akAbdulMomen rdfs:label ""AK Abdul Momen""@en .

  # Find Ram Jaipal Singh Yadav's residence country and a native from that country
  ?ramJaipalSinghYadav dbo:nationality ?country .
  ?ramJaipalSinghYadav rdfs:label ""Ram Jaipal Singh Yadav""@en .
  
  # Find a native of the same country as Ram Jaipal Singh Yadav's nationality
  ?nativeOfCountry dbo:nationality ?country .

  # Find Abul Maal Abdul Muhith and his father
  ?abulMaalAbdulMuhith dbo:father ?fatherOfAbulMaal .
  ?abulMaalAbdulMuhith rdfs:label ""Abul Maal Abdul Muhith""@en .

  # Find a child of Abul Maal Abdul Muhith's father
  ?childOfFather dbo:parent ?fatherOfAbulMaal .

  # Find the father of that child
  ?childOfFather dbo:father ?fatherOfChild .
}
```",6,7,7,3,3,3,3,71,0,0,1,0,0.0,0
495,20,test,Give me the child of the father of the parent of Princess Catherine of Württemberg and father of the child of the parent of Princess Pauline of Württemberg (1810–1856).,SELECT ?result WHERE { ?result <http://dbpedia.org/property/father> ?v2 . ?v5 <http://dbpedia.org/ontology/parent> ?v4 . ?v5 <http://dbpedia.org/property/father> ?result . ?v1 <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Princess_Catherine_of_Württemberg> . <http://dbpedia.org/resource/Princess_Pauline_of_Württemberg_(1810–1856)> <http://dbpedia.org/ontology/parent> ?v4 . ?v1 <http://dbpedia.org/property/father> ?v2 . },"```sparql
SELECT ?child WHERE {
  # Step 1: Find Princess Catherine of Württemberg's parent
  ?catherine dbo:parent ?parentCatherine .
  ?catherine rdfs:label ""Princess Catherine of Württemberg""@en .

  # Step 2: Find the father of this parent
  OPTIONAL {
    ?parentCatherine dbo:parent ?grandfatherCatherine .
  }

  # Step 3: Determine the child of this grandfather
  OPTIONAL {
    ?grandfatherCatherine dbo:child ?child .
  }

  # Step 4: Identify Princess Pauline of Württemberg's parent
  ?pauline dbo:parent ?parentPauline .
  ?pauline rdfs:label ""Princess Pauline of Württemberg""@en .

  # Step 5: Find the child of this parent
  OPTIONAL {
    ?parentPauline dbo:child ?childPauline .
  }

  # Step 6: Determine the father of this child
  OPTIONAL {
    ?childPauline dbo:parent ?fatherChildPauline .
  }
}
```",6,6,7,3,2,3,2,20,0,0,1,0,0.0,0
445,56,test,"Give me the entity in the award of the commander in Battle of Saint-Mihiel and death place of Patrick Moore and entity in the residence, that is a country, of Anna Sharkey.",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/country> ?v1 . ?v0 <http://dbpedia.org/property/awards> ?v1 . ?result <http://dbpedia.org/ontology/location> ?v2 . <http://dbpedia.org/resource/Patrick_Moore> <http://dbpedia.org/ontology/deathPlace> ?result . <http://dbpedia.org/resource/Anna_Sharkey> <http://dbpedia.org/property/residence> ?v2 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. <http://dbpedia.org/resource/Battle_of_Saint-Mihiel> <http://dbpedia.org/ontology/commander> ?v0 . },"```sparql
SELECT ?awardEntity ?deathPlace ?residenceCountry WHERE {
  # Find the commander of the Battle of Saint-Mihiel and their award
  ?battle dbo:commander ?commander .
  ?battle rdfs:label ""Battle of Saint-Mihiel""@en .
  
  OPTIONAL { 
    ?commander dbo:award ?award .
    ?award rdfs:label ?awardEntity .
  }
  
  # Find the death place of Patrick Moore
  ?patrickMoore dbo:deathPlace ?deathPlace .
  ?patrickMoore rdfs:label ""Patrick Moore""@en .

  # Find the residence country of Anna Sharkey
  OPTIONAL {
    ?annaSharkey dbo:residence ?residence .
    ?annaSharkey rdfs:label ""Anna Sharkey""@en .
    
    FILTER (isLiteral(?residence) && regex(str(?residence), ""^http://dbpedia.org/resource/.*/"", """"))
    ?residence rdf:type dbpedia-owl:Country .
    ?residence rdfs:label ?residenceCountry .
  }
}
```",6,7,7,3,3,3,3,71,0,0,1,0,0.0,0
273,20,test,Give me the spouse of the child of the child of Edoardo Agnelli (1831-1871) and parent of the alumnus of the reference to Università degli Studi di Torino.,"SELECT ?result WHERE { ?v4 <http://xmlns.com/foaf/0.1/name> ""Università degli Studi di Torino""@en . ?v5 <http://dbpedia.org/ontology/parent> ?result . ?result <http://dbpedia.org/ontology/spouse> ?v2 . ?v1 <http://dbpedia.org/ontology/parent> <http://dbpedia.org/resource/Edoardo_Agnelli_(1831-1871)> . ?v1 <http://dbpedia.org/ontology/child> ?v2 . ?v5 <http://dbpedia.org/ontology/almaMater> ?v4 . }","```sparql
SELECT ?spouse WHERE {
  # Identify Edoardo Agnelli (1831-1871)
  ?edoardo dbo:birthDate ?date .
  FILTER (?date = ""1831-01-01""^^xsd:date && ?date <= ""1871-12-31""^^xsd:date) .
  
  # Find his child
  ?edoardo dbo:child ?child .

  # Find the child of this child (grandchild)
  ?child dbo:child ?grandchild .

  # Identify the spouse of this grandchild
  ?grandchild dbo:spouse ?spouse .

  # Ensure this spouse is a parent of an alumnus from Università degli Studi di Torino
  ?alumnus foaf:almaMater <http://dbpedia.org/resource/Universit%C3%A0_degli_Studi_di_Torino> .
  ?spouse dbo:child ?alumnus .
}
```",6,6,7,3,2,3,2,20,0,0,1,0,0.0,0
865,61,test,"Give me the father of the child, that is a politician, of the spouse of Syeda Shahar Banu and father of the child of the father of Abul Maal Abdul Muhith.",SELECT ?result WHERE { ?v4 <http://dbpedia.org/property/father> ?result . ?v4 <http://dbpedia.org/property/father> ?v0 . <http://dbpedia.org/resource/Syeda_Shahar_Banu> <http://dbpedia.org/ontology/spouse> ?v0 . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. <http://dbpedia.org/resource/Abul_Maal_Abdul_Muhith> <http://dbpedia.org/property/father> ?v1 . ?v2 <http://dbpedia.org/property/father> ?v1 . ?v2 <http://dbpedia.org/property/father> ?result . },"```sparql
SELECT ?father WHERE {
  # Step 1: Identify Syeda Shahar Banu's spouse
  ?shaharBanu dbo:spouse ?spouse .
  ?shaharBanu rdfs:label ""Syeda Shahar Banu""@en .

  # Step 2: Find the child of her spouse who is a politician
  ?spouse dbo:child ?politicianChild .
  ?politicianChild rdf:type dbo:Politician .

  # Step 3: Determine the father of this politician
  ?politicianChild dbo:parent ?father .

  # Step 4: Identify Abul Maal Abdul Muhith's father
  ?abulMaal dbo:parent ?fatherAbulMaal .
  ?abulMaal rdfs:label ""Abul Maal Abdul Muhith""@en .

  # Step 5: Find the child of Abul Maal Abdul Muhith's father
  ?fatherAbulMaal dbo:child ?childOfFather .

  # Step 6: Determine the father of this child
  ?childOfFather dbo:parent ?sameFather .

  # Ensure both fathers are the same person
  FILTER (?father = ?sameFather)
}
```",6,7,7,3,2,3,3,71,0,0,1,0,0.0,0
965,70,test,"Give me the parent of the child, that is a royalty, of the person born, that is a politician, on 1854-05-24 and parent of the person born, that is a noble, as the birth name of George Mountbatten, 2nd Marquess of Milford Haven and spouse of the spouse of Princess Victoria of Hesse and by Rhine.","SELECT ?result WHERE { ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Noble>. ?result <http://dbpedia.org/ontology/spouse> ?v3 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v0 <http://dbpedia.org/ontology/parent> ?result . <http://dbpedia.org/resource/George_Mountbatten,_2nd_Marquess_of_Milford_Haven> <http://dbpedia.org/property/birthName> ?v5 . ?v1 <http://dbpedia.org/ontology/birthDate> ""1854-05-24""^^<http://www.w3.org/2001/XMLSchema#date> . <http://dbpedia.org/resource/Princess_Victoria_of_Hesse_and_by_Rhine> <http://dbpedia.org/ontology/spouse> ?v3 . ?v6 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v0 <http://dbpedia.org/property/birthName> ?v5 . ?v6 <http://dbpedia.org/property/father> ?v1 . ?v6 <http://dbpedia.org/ontology/parent> ?result . }","```sparql
SELECT ?parent WHERE {
  # Step 1: Identify the politician born on 1854-05-24
  ?politician dbo:birthDate ""1854-05-24""^^xsd:date ;
              rdf:type dbo:Politician ;
              dbo:child ?child .

  # Step 2: Find the child who is royalty
  ?child rdf:type dbo:RoyalPerson .

  # Step 3: Determine the parent of this royal child
  ?child dbo:parent ?parent .

  # Step 4: Identify Princess Victoria of Hesse and by Rhine's spouse
  ?princess rdfs:label ""Princess Victoria of Hesse and by Rhine""@en ;
            dbo:spouse ?spouseOfPrincess .

  # Step 5: Find the spouse of the spouse identified in step 3
  ?parent dbo:spouse ?spouse .
}
```",8,11,9,3,3,3,3,71,0,0,1,0,0.0,0
978,19,test,"Give me the band member of the person born as the name of Chicane (musician) and band member of the professional, that is a musical artist and an artist, in .","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/associatedMusicalArtist> ?v4 . <http://dbpedia.org/resource/Chicane_(musician)> <http://xmlns.com/foaf/0.1/givenName> ?v0 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. ?v4 <http://dbpedia.org/property/birthName> ?v0 . ?result <http://dbpedia.org/ontology/associatedMusicalArtist> ?v2 . ?v2 <http://dbpedia.org/property/occupation> """"@en . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. }","```sparql
SELECT ?bandMember WHERE {
  # Find the real name of Chicane (musician)
  ?chicane dbo:birthName ?realName .
  ?chicane rdfs:label ""Chicane""@en .

  # Identify band members associated with Chicane
  OPTIONAL { 
    ?project dbo:musicalArtist ?bandMember .
    ?project dbo:member ?bandMember .
    ?project dbo:artist ?bandMember .
    FILTER (regex(str(?realName), ""^Nick Bracegirdle$"", ""i""))
  }
}
```",5,7,6,3,2,3,2,20,0,0,2,0,0.0,0
124,67,test,"Give me the military force of the war, that is an event and a military conflict and a societal event, of the awardee of British South Africa Company Medal and commander in Mahdist War and military force of the force, that is a societal event and a military conflict, of the person born on 1850-06-24.","SELECT ?result WHERE { ?v0 <http://dbpedia.org/ontology/battle> ?v6 . ?v6 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?v0 <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/British_South_Africa_Company_Medal> . ?v6 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?result <http://dbpedia.org/ontology/battle> ?v6 . ?result <http://dbpedia.org/ontology/battle> ?v3 . ?v1 <http://dbpedia.org/ontology/birthDate> ""1850-06-24""^^<http://www.w3.org/2001/XMLSchema#date> . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?v6 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. <http://dbpedia.org/resource/Mahdist_War> <http://dbpedia.org/ontology/commander> ?result . ?v3 <http://dbpedia.org/ontology/commander> ?v1 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. }","```sparql
# Query to find the awardee who received the British South Africa Company Medal and was a commander in the Mahdist War
SELECT ?awardee WHERE {
  ?awardee dbo:award ""British South Africa Company Medal"" .
  ?awardee dbo:militaryCommanderOf ""Mahdist War"" .
}

# Query to find the military force of the war associated with the awardee
SELECT ?militaryForce WHERE {
  ?war dbo:participatingMilitaryUnit ?militaryForce .
  ?war rdfs:label ""Mahdist War""@en .
}

# Query to find the person born on 1850-06-24
SELECT ?person WHERE {
  ?person dbo:birthday ""1850-06-24""^^xsd:date .
}

# Query to find the military force of the event associated with this person
SELECT ?militaryForce2 WHERE {
  ?event dbo:participatingMilitaryUnit ?militaryForce2 .
  ?event dbo:participant ?person .
}
```",7,12,8,3,3,3,3,71,0,0,3,0,0.0,0
645,64,test,"Give me the commander in the force of the commander in Siege of Madrid and military force of Spanish Civil War and leader of the office, that is a government agency and an organisation, of the native of Restoration (Spain).",SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?v2 <http://dbpedia.org/ontology/commander> ?result . ?v0 <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Restoration_(Spain)> . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/GovernmentAgency>. ?result <http://dbpedia.org/ontology/battle> <http://dbpedia.org/resource/Spanish_Civil_War> . ?v1 <http://dbpedia.org/ontology/leader> ?result . <http://dbpedia.org/resource/Siege_of_Madrid> <http://dbpedia.org/ontology/commander> ?v3 . ?v2 <http://dbpedia.org/ontology/commander> ?v3 . ?v0 <http://dbpedia.org/property/office> ?v1 . },"```sparql
SELECT ?commanderInForce ?militaryForce ?leader WHERE {
  # Find commander in force during Siege of Madrid
  ?siege dbo:commander ?commanderInForce .
  ?siege rdfs:label ""Siege of Madrid""@en .

  # Find military force involved in the Spanish Civil War
  OPTIONAL { 
    ?civilWar dbo:militaryForce ?militaryForce .
    ?civilWar rdfs:label ""Spanish Civil War""@en .
    ?commanderInForce dbo:memberOf ?militaryForce .
  }

  # Find leader of an office that is a government agency and organization, linked to someone from the Restoration period
  OPTIONAL {
    ?restorationPerson dbo:nativeCountry dbc:Spain .
    ?restorationPerson dbo:birthPlace dbc:Restoration_(Spain) .
    ?office dbo:leader ?leader .
    ?office rdf:type dbo:GovernmentAgency ;
            dbo:organization .
    ?restorationPerson dbo:memberOf ?office .
  }
}
```",7,9,8,3,3,3,3,71,0,0,2,0,0.0,0
976,58,test,"Give me the office of Mustafa Şentop and office of the mayor, that is a politician and an office holder and Turkish, of Nation Alliance (Turkey) and office of the person born as the birth name of Naci Bostancı.",SELECT ?result WHERE { ?v0 <http://dbpedia.org/property/office> ?result . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v5 <http://dbpedia.org/ontology/nationality> <http://dbpedia.org/resource/Turkey>. ?v5 <http://dbpedia.org/property/office> ?result . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v0 <http://dbpedia.org/property/birthName> ?v4 . <http://dbpedia.org/resource/Nation_Alliance_(Turkey)> <http://dbpedia.org/property/leader> ?v5 . <http://dbpedia.org/resource/Naci_Bostancı> <http://dbpedia.org/property/birthName> ?v4 . <http://dbpedia.org/resource/Mustafa_Şentop> <http://dbpedia.org/property/office> ?result . },"```sparql
SELECT ?mustafaOffice ?mayorOffice ?naciOffice WHERE {
  # Find Mustafa Şentop's office
  ?mustafa dbo:office ?mustafaOffice .
  ?mustafa rdfs:label ""Mustafa Şentop""@en .

  # Find the mayor of Nation Alliance (Turkey) who is a politician and Turkish
  OPTIONAL {
    ?mayor dbo:memberOf ?nationAlliance ;
           dbo:nationality dbr:Turkey ;
           dbo:occupation dbr:Politician ;
           dbo:office ?mayorOffice .
    ?nationAlliance rdfs:label ""Nation Alliance (Turkey)""@en .
    FILTER EXISTS { ?mayor dbo:office dbr:Municipal_Office }
  }

  # Find the office of Naci Bostancı by his birth name
  OPTIONAL {
    ?naci foaf:name ""Naci Bostancı""@en ;
          dbo:birthName ""Naci Bostancı"" .
    ?naci dbo:office ?naciOffice .
  }
}
```",6,9,7,3,3,3,3,71,0,0,1,0,0.0,0
892,71,test,"Give me the landmark at elevation of the award of the member of E-girls and entity in the administration, that is Italian and a region and a settlement and an administrative region, of the party, that is a political party and an organisation, of Andrea Cozzolino and entity in the profession of the true self of Enrico Crolla.","SELECT ?result WHERE { ?v8 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. ?v8 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/AdministrativeRegion>. ?v8 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Italy>. ?v1 <http://dbpedia.org/property/occupation> ?v2 . ?result <http://dbpedia.org/ontology/country> ?v2 . ?v7 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/PoliticalParty>. ?result <http://dbpedia.org/ontology/elevation> ?v5 . ?v4 <http://dbpedia.org/property/awards> ?v5 . ?v8 <http://dbpedia.org/property/leaderParty> ?v7 . <http://dbpedia.org/resource/Andrea_Cozzolino> <http://dbpedia.org/ontology/party> ?v7 . ?v1 <http://xmlns.com/foaf/0.1/givenName> ""Enrico Crolla""@en . ?v8 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Region>. ?result <http://dbpedia.org/ontology/province> ?v8 . <http://dbpedia.org/resource/E-girls> <http://dbpedia.org/ontology/bandMember> ?v4 . ?v7 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. }","```sparql
SELECT ?landmark WHERE {
  # Find a member of E-girls and their award
  ?eGirlMember dbo:member ""E-girls""@en .
  ?award dbo:recipient ?eGirlMember ;
         dbo:elevation ?elevation .

  # Find a landmark at the same elevation as the award
  ?landmark dbo:elevation ?elevation .

  # Identify Andrea Cozzolino's party and related entity in administration
  ?party dbo:member Andrea_Cozzolino ;
         rdf:type dbo:PoliticalParty, dbo:Organization .
  
  ?entityInAdmin dbo:country ""Italy""@en ;
                 rdf:type dbo:Region, dbo:Settlement, dbo:AdministrativeRegion .

  # Connect the entity to the party
  ?entityInAdmin dbo:party ?party .

  # Identify Enrico Crolla's profession
  ?enricoCrolla foaf:name ""Enrico Crolla""@en ;
                dbo:profession ?profession .

  # Ensure the landmark is related to the profession of Enrico Crolla
  ?landmark dbo:relatedTo ?profession .
}
```",9,15,10,3,3,3,3,71,0,0,2,0,0.0,0
445,57,test,Give me the entity in England and entity in the award of George H. Cameron and death place of the awardee of the establishment of 1820-03-10.,"SELECT ?result WHERE { <http://dbpedia.org/resource/George_H._Cameron> <http://dbpedia.org/property/awards> ?v3 . ?v5 <http://dbpedia.org/property/awards> ?v0 . ?result <http://dbpedia.org/ontology/location> <http://dbpedia.org/resource/England> . ?v0 <http://dbpedia.org/ontology/foundingDate> ""1820-03-10""^^<http://www.w3.org/2001/XMLSchema#date> . ?v5 <http://dbpedia.org/ontology/deathPlace> ?result . ?result <http://dbpedia.org/ontology/country> ?v3 . }","```sparql
SELECT ?entityInEngland ?awardee ?deathPlace WHERE {
  # Find an entity in England
  ?entityInEngland dbo:country dbc:England .
  
  # Find award associated with George H. Cameron and its awardee
  ?award dbo:recipient ?awardee ;
         dbo:associatedWithGeorgeH_Cameron true .
  
  # Find death place of the awardee
  ?awardee dbo:deathPlace ?deathPlace .
}
```",6,6,7,3,3,3,3,71,0,0,1,0,0.0,0
382,18,test,"Give me the birthplace of the manager, that is a soccer manager and an athlete and a sports manager, of the player in Lukas Kübler and landmark at elevation of the award of Harry Combes.",SELECT ?result WHERE { ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsManager>. <http://dbpedia.org/resource/Lukas_Kübler> <http://dbpedia.org/ontology/team> ?v1 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Athlete>. ?result <http://dbpedia.org/ontology/elevation> ?v3 . ?v1 <http://dbpedia.org/ontology/manager> ?v2 . <http://dbpedia.org/resource/Harry_Combes> <http://dbpedia.org/property/awards> ?v3 . ?v2 <http://dbpedia.org/ontology/birthPlace> ?result . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerManager>. },"```sparql
SELECT ?birthPlace WHERE {
  # Step 1: Find Lukas Kübler's manager who is also an athlete and sports manager
  ?player dbo:manager ?manager .
  ?player rdfs:label ""Lukas Kübler""@en .
  
  ?manager rdf:type dbo:SoccerManager ;
           rdf:type dbo:Athlete ;
           rdf:type dbo:SportsManager .

  # Step 2: Find Harry Combes' award
  ?harry dbo:awardReceived ?award .
  ?harry rdfs:label ""Harry Combes""@en .

  # Step 3: Identify a landmark at the elevation of the award
  ?landmark dbo:elevation ?elevation .
  FILTER (?elevation = ?award) 

  # Step 4: Get the birthplace of the manager
  ?manager dbo:birthPlace ?birthPlace .
}
```",5,8,6,3,2,3,2,20,0,0,1,0,0.0,0
865,70,test,"Give me the native of the residence, that is a country, of Ram Jaipal Singh Yadav and father of the child of the father of Abul Maal Abdul Muhith and father of the child, that is a politician, of the spouse of Syeda Shahar Banu.",SELECT ?result WHERE { ?v4 <http://dbpedia.org/property/father> ?v3 . <http://dbpedia.org/resource/Syeda_Shahar_Banu> <http://dbpedia.org/ontology/spouse> ?v2 . ?v6 <http://dbpedia.org/property/father> ?result . ?v6 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v6 <http://dbpedia.org/property/father> ?v2 . ?result <http://dbpedia.org/ontology/birthPlace> ?v0 . <http://dbpedia.org/resource/Abul_Maal_Abdul_Muhith> <http://dbpedia.org/property/father> ?v3 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. <http://dbpedia.org/resource/Ram_Jaipal_Singh_Yadav> <http://dbpedia.org/property/residence> ?v0 . ?v4 <http://dbpedia.org/property/father> ?result . },"```sparql
SELECT ?nativeOfResidence ?fatherOfAbdulMuhithChild ?fatherOfPolitician WHERE {
  # Ram Jaipal Singh Yadav's residence
  ?ramJaipal dbo:residence ?residence .
  ?ramJaipal rdfs:label ""Ram Jaipal Singh Yadav""@en .

  # Check if the residence is a country and get its native
  OPTIONAL { 
    ?residence rdf:type dbo:Country .
    ?residence dbo:native ?nativeOfResidence .
  }

  # Abul Maal Abdul Muhith's father and his child
  ?abdulMuhith dbo:parent ?fatherOfAbdulMuhith .
  ?abdulMuhith rdfs:label ""Abul Maal Abdul Muhith""@en .
  
  OPTIONAL {
    ?fatherOfAbdulMuhith dbo:child ?abulMaal .
    FILTER (?abulMaal = ?abdulMuhith)
  }

  # Syeda Shahar Banu's spouse and their child who is a politician
  ?shaharBanu dbo:spouse ?spouse .
  ?shaharBanu rdfs:label ""Syeda Shahar Banu""@en .

  OPTIONAL {
    ?spouse dbo:child ?politician .
    ?politician rdf:type dbo:Politician .
  }

  # Father of the politician
  OPTIONAL {
    ?spouse dbo:parent ?fatherOfPolitician .
    FILTER (?politician = ?spouse)
  }
}
```",8,10,9,3,3,3,3,71,0,0,1,0,0.0,0
433,70,test,"Give me the associated musical artist of the person born, that is a musical artist and an artist, as Paul Laurence Dunbar Chambers Jr. and professional in the profession of the writer of Slowhand at 70 – Live at the Royal Albert Hall and associated musical artist of the associated musical artist, that is an artist and a musical artist, of the associated musical artist, that is a musical artist and an artist, of Ornette Coleman.","SELECT ?result WHERE { ?v4 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v7 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. <http://dbpedia.org/resource/Ornette_Coleman> <http://dbpedia.org/ontology/associatedMusicalArtist> ?v0 . ?result <http://dbpedia.org/property/occupation> ?v3 . ?v1 <http://dbpedia.org/property/occupation> ?v3 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?v7 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?v0 <http://dbpedia.org/ontology/associatedMusicalArtist> ?v7 . ?v7 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . <http://dbpedia.org/resource/Slowhand_at_70_–_Live_at_the_Royal_Albert_Hall> <http://dbpedia.org/property/writer> ?v1 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. ?v4 <http://dbpedia.org/property/birthName> ""Paul Laurence Dunbar Chambers Jr.""@en . }","```sparql
SELECT ?finalAssociatedArtist WHERE {
  # Step 1: Find Paul Laurence Dunbar Chambers Jr.'s associated musical artist
  ?paulChambers dbo:associatedMusicalArtist ?artist1 .
  ?paulChambers rdfs:label ""Paul Laurence Dunbar Chambers Jr.""@en .

  # Step 2: Determine Eric Clapton's profession (musician/singer-songwriter)
  ?ericClapton dbo:profession ?profession .
  ?ericClapton rdfs:label ""Eric Clapton""@en .
  FILTER (?profession IN (dbo:Singer, dbo:SingerSongwriter))

  # Step 3: Find Ornette Coleman's associated musical artist who is both an artist and a musician
  ?ornetteColeman dbo:associatedMusicalArtist ?artist2 .
  ?ornetteColeman rdfs:label ""Ornette Coleman""@en .
  
  # Ensure the artist is recognized as both an artist and a musician
  ?artist2 rdf:type dbo:Musician ;
           dbo:occupation dbo:Artist .

  # Step 4: Find the associated musical artist of this person (artist2)
  ?artist2 dbo:associatedMusicalArtist ?finalAssociatedArtist .
}
```",8,14,9,3,3,3,3,71,0,0,4,0,0.0,0
645,58,test,"Give me the leader of the office, that is a government agency and an organisation, of the native of Restoration (Spain) and military force of the force, that is an event and a military conflict and a societal event, of Francisco Largo Caballero and commander in Battle of Jarama.",SELECT ?result WHERE { ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v5 <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Francisco_Largo_Caballero> . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?v2 <http://dbpedia.org/ontology/leader> ?result . ?result <http://dbpedia.org/ontology/battle> ?v5 . <http://dbpedia.org/resource/Battle_of_Jarama> <http://dbpedia.org/ontology/commander> ?result . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?v1 <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Restoration_(Spain)> . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/GovernmentAgency>. ?v1 <http://dbpedia.org/property/office> ?v2 . },"```sparql
SELECT ?leader WHERE {
  # Find Francisco Largo Caballero and his native context
  ?francisco dbo:nativePlace ?restoration .
  ?francisco rdfs:label ""Francisco Largo Caballero""@en .

  # Identify the organization or agency related to Restoration (Spain)
  ?restoration dbo:organization ?agency .
  
  # Find the military force involved in Battle of Jarama
  ?battle dbo:commander ?francisco .
  ?battle rdfs:label ""Battle of Jarama""@en .

  # Identify the military force associated with Francisco Largo Caballero
  ?battle dbo:militaryForce ?militaryForce .

  # Find the leader of the agency or military force
  ?agency dbo:leader ?leader .
  OPTIONAL { ?militaryForce dbo:leader ?leader . }
}
```",6,11,7,3,3,3,3,71,0,0,1,0,0.0,0
158,20,test,"Give me the entity in the award, that is a country, of the reference to Adelbert Cronkhite and party of the successor, that is a prime minister and an office holder and a politician, of the person deceased, that is an office holder and a politician, on 1945-09-15.","SELECT ?result WHERE { ?v4 <http://dbpedia.org/ontology/deathDate> ""1945-09-15""^^<http://www.w3.org/2001/XMLSchema#date> . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/PrimeMinister>. ?v5 <http://dbpedia.org/ontology/party> ?result . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v4 <http://dbpedia.org/ontology/successor> ?v5 . ?v1 <http://dbpedia.org/property/awards> ?v2 . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v1 <http://xmlns.com/foaf/0.1/name> ""Adelbert Cronkhite""@en . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. ?result <http://dbpedia.org/ontology/country> ?v2 . }","```sparql
SELECT ?country WHERE {
  # Step 1: Identify Adelbert Cronkhite
  ?cronkhite dbo:birthName ""Adelbert Cronkhite""@en .
  
  # Step 2: Find the award related to Adelbert Cronkhite and its country
  ?award dbo:recipient ?cronkhite ;
         dbo:country ?country .

  # Step 3: Identify the person deceased on 1945-09-15
  ?deceased dbo:dateOfDeath ""1945-09-15""^^xsd:date ;
            a dbo:OfficeHolder, dbo:Politician .
  
  # Step 4: Find the successor who is a prime minister, office holder, and politician
  ?successor dbo:succeededBy ?deceased ;
             a dbo:PrimeMinister, dbo:OfficeHolder, dbo:Politician .

  # Step 5: Identify the party of the successor
  ?successor dbo:party ?party .
}
```",6,12,7,3,2,3,2,20,0,0,1,0,0.0,0
36,26,test,"Give me the person born in 1971 and person born as the birth name of Ayo Makun and actor of the claim to fame, that is a film, of Lepacious Bose.","SELECT ?result WHERE { ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Film>. ?result <http://dbpedia.org/ontology/birthYear> ""1971""^^<http://www.w3.org/2001/XMLSchema#gYear> . ?v4 <http://dbpedia.org/ontology/starring> ?result . <http://dbpedia.org/resource/Ayo_Makun> <http://dbpedia.org/property/birthName> ?v1 . ?result <http://dbpedia.org/property/birthName> ?v1 . <http://dbpedia.org/resource/Lepacious_Bose> <http://dbpedia.org/ontology/knownFor> ?v4 . }","```sparql
SELECT ?person1971 ?actor WHERE {
  # Find person born in 1971
  ?person1971 dbo:birthYear ""1971""^^xsd:gYear .
  
  # Get Ayo Makun's birth name
  ?ayoMakun foaf:name ?birthName .
  ?ayoMakun rdfs:label ""Ayo Makun""@en .

  # Find Lepacious Bose's claim to fame (film)
  ?lepaciousBose dbo:claimToFame ?film .
  ?lepaciousBose rdfs:label ""Lepacious Bose""@en .
  
  # Find actor associated with the film
  ?film dbo:actor ?actor .

  # Ensure the actor's birth name matches Ayo Makun's birth name
  ?actor foaf:name ?birthName .
}
```",5,6,6,2,3,2,3,28,0,0,1,0,0.0,0
933,60,test,"Give me the band of the band, that is a group and a band and an organisation, of the person born, that is a musical artist, on 1947-04-21 and band of the band of the band, that is an artist and a musical artist, of The Ramong Sound.","SELECT ?result WHERE { ?v5 <http://dbpedia.org/ontology/birthDate> ""1947-04-21""^^<http://www.w3.org/2001/XMLSchema#date> . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Group>. ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?v4 <http://dbpedia.org/ontology/associatedMusicalArtist> ?v2 . <http://dbpedia.org/resource/The_Ramong_Sound> <http://dbpedia.org/ontology/associatedMusicalArtist> ?v4 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Band>. ?v5 <http://dbpedia.org/ontology/associatedMusicalArtist> ?v0 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. ?v0 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?v2 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . }","```sparql
SELECT ?bandOfBand WHERE {
  # Step 1: Identify the person born on 1947-04-21 who is a musical artist
  ?person dbo:birthDate ""1947-04-21""^^xsd:date ;
          rdf:type dbo:MusicalArtist .
  
  # Step 2: Find the band of this person that is both a group and an organization
  ?band1 dbo:member ?person ;
         rdf:type dbo:Band, dbo:Organization .

  # Step 3: Identify The Ramones' band
  ?ramones dbo:member ?artist .
  ?ramones rdfs:label ""The Ramones""@en .
  
  # Ensure the artist is recognized as a musical artist
  ?artist rdf:type dbo:MusicalArtist .

  # Step 4: Find the band of this band (from step 3)
  ?band2 dbo:member ?ramones ;
         rdf:type dbo:Band, dbo:Organization .

  # Return the final band associated with the band from step 3
  ?bandOfBand dbo:member ?band2 .
}
```",6,12,7,3,2,3,3,71,0,0,4,0,0.0,0
926,69,test,"Give me the father of the father of the spouse of Neşerek Kadın and successor of the child of Ahmed III and child of the father, that is a royalty, of the parent, that is a royalty, of Beyhan Sultan (daughter of Mustafa III).",SELECT ?result WHERE { ?v4 <http://dbpedia.org/property/father> ?v2 . ?v6 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Ahmed_III> . ?v6 <http://dbpedia.org/ontology/successor> ?result . ?v2 <http://dbpedia.org/property/father> ?result . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v0 <http://dbpedia.org/ontology/child> ?result . ?v5 <http://dbpedia.org/property/father> ?v0 . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. <http://dbpedia.org/resource/Beyhan_Sultan_(daughter_of_Mustafa_III)> <http://dbpedia.org/ontology/parent> ?v5 . <http://dbpedia.org/resource/Neşerek_Kadın> <http://dbpedia.org/ontology/spouse> ?v4 . },"```sparql
SELECT ?finalFather WHERE {
  # Find spouse of Neşerek Kadın
  ?neserekKadin dbo:spouse ?spouse .
  ?neserekKadin rdfs:label ""Neşere Kadın""@en .

  # Find father of the spouse
  ?spouse dbo:parent ?fatherOfSpouse .

  # Find child of Ahmed III who is royalty
  ?ahmedIII dbo:child ?royaltyChild .
  ?ahmedIII rdfs:label ""Ahmed III""@en .
  
  # Find successor of this royal child
  ?royaltyChild dbo:successor ?successor .

  # Find Beyhan Sultan's parent (Mustafa III) and their royal child
  ?mustafaIII dbo:child ?beYhanSultan .
  ?mustafaIII rdfs:label ""Mustafa III""@en .
  ?beYhanSultan rdfs:label ""Beyhan Sultan""@en .

  # Find the parent of Beyhan Sultan who is royalty
  ?parentOfBeYhanSultan dbo:child ?beYhanSultan .
  
  # Finally, find the father of the father of Neşerek Kadın’s spouse
  ?fatherOfSpouse dbo:parent ?finalFather .
}
```",8,10,9,3,3,3,3,71,0,0,1,0,0.0,0
987,57,test,"Give me the entity in the region, that is a country, of Central European Time and birth place of Dado Polumenta and birth place of the actor of the show, that is a film, with Emir Hadžihafizbegović.",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/country> ?v0 . ?v1 <http://dbpedia.org/property/starring> ?v4 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Film>. <http://dbpedia.org/resource/Dado_Polumenta> <http://dbpedia.org/ontology/birthPlace> ?result . ?v4 <http://dbpedia.org/ontology/birthPlace> ?result . ?v0 <http://dbpedia.org/property/timeZone> <http://dbpedia.org/resource/Central_European_Time> . ?v1 <http://dbpedia.org/ontology/starring> <http://dbpedia.org/resource/Emir_Hadžihafizbegović> . },"```sparql
SELECT DISTINCT ?country WHERE {
  # Find countries in Central European Time zone
  ?cetCountry dbo:timeZone dbr:Central_European_Time .
  
  # Find Dado Polumenti's birth place
  ?dado dbo:birthPlace ?birthPlaceDado .
  ?dado rdfs:label ""Dado Polumenti""@en .

  # Find a film with Emir Hadžihafizbegović and an actor from that film
  ?film dbo:starring dbr:Emir_Hadžihafizbegović .
  ?actor dbo:starringInFilm ?film .
  
  # Get the birth place of this actor
  ?actor dbo:birthPlace ?birthPlaceActor .

  # Ensure all these places are in the same country
  FILTER (?birthPlaceDado = ?country && ?birthPlaceActor = ?country)
}
```",6,8,7,3,3,3,3,71,0,0,1,0,0.0,0
41,28,test,"Give me the party of the person born as David Declan Costello and party of the work, that is an office holder, of yes and party of the leader, that is a politician and an office holder, of 2005 Castlereagh Borough Council election.","SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v5 <http://dbpedia.org/property/author> ""yes""@en . ?v1 <http://dbpedia.org/ontology/party> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v3 <http://dbpedia.org/property/birthName> ""David Declan Costello""@en . ?v5 <http://dbpedia.org/ontology/party> ?result . ?v3 <http://dbpedia.org/ontology/party> ?result . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. <http://dbpedia.org/resource/2005_Castlereagh_Borough_Council_election> <http://dbpedia.org/property/leader> ?v1 . }","```sparql
# Query for David Declan Costello's party
SELECT ?party WHERE {
  ?person foaf:name ""David Declan Costello""@en .
  ?person dbo:politicalParty ?party .
}

UNION

# Query for the work of ""Yes"" as an office holder
SELECT ?party WHERE {
  ?officeHolder rdfs:label ""Yes""@en .
  ?officeHolder dbo:politicalParty ?party .
}

UNION

# Query for the leader of the 2005 Castlereagh Borough Council election
SELECT ?party WHERE {
  ?leader dbo:election ?election .
  ?election dbo:date ?date .
  FILTER (YEAR(?date) = 2005 && STRSTARTS(STR(?election), ""Castlereagh Borough Council""))
  ?leader dbo:politicalParty ?party .
  ?leader rdf:type dbo:Politician .
}
```",6,9,7,2,3,2,3,28,0,0,1,0,0.0,0
892,70,test,"Give me the entity in the profession of Henri Crolla and entity in the administration, that is Italian and a region and a settlement and an administrative region, of the party, that is a political party and an organisation, of Andrea Cozzolino and landmark at elevation of the award of the member of E-girls.",SELECT ?result WHERE { ?v0 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Italy>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Region>. ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. ?v0 <http://dbpedia.org/property/leaderParty> ?v5 . ?result <http://dbpedia.org/ontology/country> ?v3 . ?result <http://dbpedia.org/ontology/elevation> ?v6 . ?v1 <http://dbpedia.org/property/awards> ?v6 . <http://dbpedia.org/resource/Andrea_Cozzolino> <http://dbpedia.org/ontology/party> ?v5 . <http://dbpedia.org/resource/E-girls> <http://dbpedia.org/ontology/bandMember> ?v1 . ?result <http://dbpedia.org/ontology/province> ?v0 . <http://dbpedia.org/resource/Henri_Crolla> <http://dbpedia.org/property/occupation> ?v3 . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/PoliticalParty>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/AdministrativeRegion>. },"```sparql
SELECT DISTINCT ?profession ?region ?party ?landmark WHERE {
  # Henri Crolla's profession
  ?henriCrolla dbo:occupation ?profession .
  ?henriCrolla rdfs:label ""Henri Crolla""@en .

  # Italian administrative region and settlement related to Andrea Cozzolino's party
  ?cozzolino dbo:party ?party .
  ?cozzolino rdfs:label ""Andrea Cozzolino""@en .
  
  ?region a dbo:AdministrativeRegion ;
          dbo:country dbr:Italy ;
          dbo:settlementLocation ?settlement .

  # Landmark at elevation of the award of an E-girls member
  ?eGirlMember dbo:award ?award .
  ?award dbo:elevation ?elevation .
  
  ?landmark a dbo:Lighthouse ;
            dbo:elevation ?elevation .
}
```",8,14,9,3,3,3,3,71,0,0,2,0,0.0,0
445,66,test,"Give me the death place of the awardee of Royal Astronomical Society and entity in the residence, that is a country, of Anna Sharkey and entity in the award of the commander in Battle of Saint-Mihiel.",SELECT ?result WHERE { ?v6 <http://dbpedia.org/ontology/deathPlace> ?result . ?v6 <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/Royal_Astronomical_Society> . <http://dbpedia.org/resource/Anna_Sharkey> <http://dbpedia.org/property/residence> ?v3 . ?v1 <http://dbpedia.org/property/awards> ?v2 . ?result <http://dbpedia.org/ontology/country> ?v2 . <http://dbpedia.org/resource/Battle_of_Saint-Mihiel> <http://dbpedia.org/ontology/commander> ?v1 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. ?result <http://dbpedia.org/ontology/location> ?v3 . },"```sparql
SELECT ?deathPlace ?country ?awardEntity WHERE {
  # Find awardee of Royal Astronomical Society and their death place
  ?awardee dbo:awardReceived dbpedia:Royal_Astronomical_Society .
  ?awardee dbo:deathPlace ?deathPlace .

  # Find Anna Sharkey's residence country
  ?anna dbo:residence ?residence .
  ?anna rdfs:label ""Anna Sharkey""@en .
  ?residence a dbo:Country .
  BIND(str(?residence) AS ?country)

  # Find commander in Battle of Saint-Mihiel and their award entity
  ?commander dbo:commanded dbpedia:Battle_of_Saint-Mihiel .
  ?award dbo:recipient ?commander .
  ?award dbo:entity ?awardEntity .
}
```",7,8,8,3,3,3,3,71,0,0,1,0,0.0,0
445,62,test,"Give me the entity in United Kingdom and entity in the residence, that is a country, of the resident, that is an athlete, of Great Britain and death place of the awardee of the establishment of 1820-03-10.","SELECT ?result WHERE { ?v6 <http://dbpedia.org/ontology/deathPlace> ?result . ?v4 <http://dbpedia.org/property/residence> ?v3 . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Athlete>. ?v6 <http://dbpedia.org/property/awards> ?v0 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. ?v4 <http://dbpedia.org/property/residence> <http://dbpedia.org/resource/Great_Britain> . ?v0 <http://dbpedia.org/ontology/foundingDate> ""1820-03-10""^^<http://www.w3.org/2001/XMLSchema#date> . ?result <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/United_Kingdom> . ?result <http://dbpedia.org/ontology/location> ?v3 . }","```sparql
SELECT ?ukEntity ?countryOfResidence WHERE {
  # Find establishment on 1820-03-10 and its awardee
  ?establishment dbo:established ""1820-03-10""^^xsd:date .
  ?awardee dbo:award ?establishment .

  # Find the death place of the awardee
  ?awardee dbo:deathPlace ?deathPlace .

  # Identify a resident athlete from Great Britain
  ?athlete dbo:nationality dbr:United_Kingdom ;
           dbo:sportType ?sport .
  
  # Determine the country of residence for this athlete
  ?athlete dbo:residenceCountry ?countryOfResidence .

  # Find an entity in the United Kingdom
  ?ukEntity a dbo:Place ;
            dbo:location dbr:United_Kingdom .
}
```",7,9,8,3,3,3,3,71,0,0,1,0,0.0,0
507,59,test,"Give me the director of the movie, that is a movie and a work, with the person born on 1919-06-17 and spouse of the person born as the birth name of Anne V. Coates.","SELECT ?result WHERE { ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?v5 <http://dbpedia.org/ontology/director> ?result . ?v5 <http://dbpedia.org/property/starring> ?v0 . ?result <http://dbpedia.org/ontology/spouse> ?v2 . ?v0 <http://dbpedia.org/ontology/birthDate> ""1919-06-17""^^<http://www.w3.org/2001/XMLSchema#date> . <http://dbpedia.org/resource/Anne_V._Coates> <http://dbpedia.org/property/birthName> ?v3 . ?v2 <http://dbpedia.org/property/birthName> ?v3 . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Film>. }","```sparql
SELECT ?director WHERE {
  # Find the person born on 1919-06-17
  ?person dbo:birthDate ""1919-06-17""^^xsd:date .
  
  # Find Anne V. Coates' birth name
  ?anneVCoates foaf:name ""Anne V. Coates""@en ;
               foaf:birthName ?birthName .

  # Find the spouse of the person with Anne V. Coates' birth name
  ?spouse dbo:spouse ?personWithBirthName .
  FILTER (?personWithBirthName = ?anneVCoates) .
  
  # Ensure the person born on 1919-06-17 is a director of a movie that is also a work
  ?movie dbo:director ?person ;
         rdf:type dbpedia-owl:Film, dbpedia-owl:CreativeWork .

}
```",6,8,7,3,2,3,3,71,0,0,1,0,0.0,0
326,9,test,"Give me the person decedent at the region coded, that is a settlement, as 442/760 and professional in the profession of Susanne Lewis.","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/deathPlace> ?v1 . ?result <http://dbpedia.org/property/occupation> ?v3 . <http://dbpedia.org/resource/Susanne_Lewis> <http://dbpedia.org/property/occupation> ?v3 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. ?v1 <http://dbpedia.org/ontology/areaCode> ""442/760"" . }","```sparql
SELECT ?person WHERE {
  # Find person who died in the specified region
  ?person dbo:deathPlace ?place .
  
  # Ensure the place matches the specific region code and is a settlement
  ?place dbp:postalCode ""442/760"" ;
         rdf:type dbo:Settlement .

  # Match profession similar to Susanne Lewis
  OPTIONAL {
    ?person dbo:profession ?profession .
    FILTER (regex(str(?profession), ""Susanne Lewis"", ""i""))
  }
}
```",4,5,5,2,2,2,2,9,0,0,6,0,0.0,0
200,8,test,Give me the band member of the band of Revenge (Canadian band) and reference to Angelcorpse.,"SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/associatedMusicalArtist> ?v2 . <http://dbpedia.org/resource/Revenge_(Canadian_band)> <http://dbpedia.org/ontology/associatedMusicalArtist> ?v2 . ?result <http://xmlns.com/foaf/0.1/name> ""Angelcorpse""@en . }","```sparql
SELECT ?member WHERE {
  # Find Revenge (Canadian band) and its members
  ?revenge dbo:bandMember ?member .
  ?revenge rdfs:label ""Revenge (Canadian band)""@en .

  # Check if any member is also associated with Angelcorpse
  OPTIONAL {
    ?angelcorpse dbo:bandMember ?member .
    ?angelcorpse rdfs:label ""Angelcorpse""@en .
  }
}
```",3,3,4,2,2,2,2,9,0,1,1,0.0,0.0,0
124,66,test,"Give me the military force of the war, that is an event and a military conflict and a societal event, of Frank Rhodes (British Army officer) and commander in the war, that is a societal event and a military conflict, of A Field Battery, Royal Australian Artillery and military force of the force, that is a societal event and a military conflict, of the person born on 1850-06-24.","SELECT ?result WHERE { <http://dbpedia.org/resource/Frank_Rhodes_(British_Army_officer)> <http://dbpedia.org/ontology/battle> ?v6 . ?v6 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?v6 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?result <http://dbpedia.org/ontology/battle> ?v6 . ?v2 <http://dbpedia.org/ontology/commander> ?v1 . ?v1 <http://dbpedia.org/ontology/birthDate> ""1850-06-24""^^<http://www.w3.org/2001/XMLSchema#date> . ?v6 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. <http://dbpedia.org/resource/A_Field_Battery,_Royal_Australian_Artillery> <http://dbpedia.org/ontology/battle> ?v3 . ?result <http://dbpedia.org/ontology/battle> ?v2 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?v3 <http://dbpedia.org/ontology/commander> ?result . }","```sparql
# Query for Frank Rhodes' war involvement and commander
SELECT ?war ?commander WHERE {
  ?frankRhodes dbo:birthDate ""1850-06-24""^^xsd:date .
  ?frankRhodes dbo:militaryConflict ?war .
  ?war rdf:type dbo:MilitaryConflict .
  OPTIONAL { 
    ?war dbo:commander ?commander .
  }
}

# Query for A Field Battery, Royal Australian Artillery's war involvement and military force
SELECT ?batteryWar ?militaryForce WHERE {
  ?battery rdfs:label ""A Field Battery, Royal Australian Artillery""@en .
  ?battery dbo:militaryConflict ?batteryWar .
  ?batteryWar rdf:type dbo:MilitaryConflict .
  OPTIONAL { 
    ?batteryWar dbo:militaryForce ?militaryForce .
  }
}

# Query for the person born on 1850-06-24 and their military force
SELECT ?person ?force WHERE {
  ?person dbo:birthDate ""1850-06-24""^^xsd:date .
  ?person dbo:militaryConflict ?conflict .
  ?conflict rdf:type dbo:MilitaryConflict .
  OPTIONAL { 
    ?conflict dbo:militaryForce ?force .
  }
}
```",7,14,8,3,3,3,3,71,0,0,9,0,0.0,0
791,64,test,"Give me the father of the child, that is a royalty, of the father, that is a royalty and an office holder, of Emperor Antoku and spouse of the spouse, that is a royalty, of the reference to Emperor Takakura and predecessor of Emperor Antoku.","SELECT ?result WHERE { ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v1 <http://dbpedia.org/property/father> ?v0 . ?v1 <http://dbpedia.org/property/father> ?result . ?v3 <http://xmlns.com/foaf/0.1/name> ""Emperor Takakura""@en . ?v2 <http://dbpedia.org/ontology/spouse> ?v3 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?result <http://dbpedia.org/ontology/spouse> ?v2 . ?result <http://dbpedia.org/ontology/successor> <http://dbpedia.org/resource/Emperor_Antoku> . <http://dbpedia.org/resource/Emperor_Antoku> <http://dbpedia.org/property/father> ?v0 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. }","```sparql
SELECT ?desiredFather WHERE {
  # Find Emperor Antoku's father
  ?antoku dbo:parent ?fatherAntoku .
  ?antoku rdfs:label ""Emperor Antoku""@en .

  # Ensure the father is royalty and an office holder
  ?fatherAntoku rdf:type dbo:Monarch .
  ?fatherAntoku dbo:officeHolder true .

  # Find a child of Emperor Antoku's father who is royalty
  ?child dbo:parent ?fatherAntoku .
  ?child rdf:type dbo:Monarch .

  # Identify Emperor Takakura and his spouse
  ?takakura dbo:spouse ?spouseTakakura .
  ?takakura rdfs:label ""Emperor Takakura""@en .
  
  # Ensure the spouse is royalty
  ?spouseTakakura rdf:type dbo:Monarch .

  # Find the father of Emperor Takakura's royal spouse
  ?spouseTakakura dbo:parent ?fatherSpouseTakakura .

  # Identify predecessor of Emperor Antoku
  ?predecessor dbo:succeededBy ?antoku .
  
  # Ensure all relationships are connected
  FILTER (?desiredFather = ?fatherAntoku || ?desiredFather = ?fatherSpouseTakakura)
}
```",7,11,8,3,3,3,3,71,0,0,1,0,0.0,0
170,28,test,Give me the entity in the work of International Energy Agency and birth place of the awardee of People's Artist of Russia and domain of the profession of John Scholey.,SELECT ?result WHERE { ?v1 <http://dbpedia.org/property/author> <http://dbpedia.org/resource/International_Energy_Agency> . ?result <http://dbpedia.org/ontology/country> ?v1 . ?v3 <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/People's_Artist_of_Russia> . <http://dbpedia.org/resource/John_Scholey> <http://dbpedia.org/property/occupation> ?v5 . ?result <http://dbpedia.org/ontology/leaderTitle> ?v5 . ?v3 <http://dbpedia.org/ontology/birthPlace> ?result . },"```sparql
# Query for an entity in the work of International Energy Agency (IEA)
SELECT ?entity WHERE {
  ?iea dbo:wikiPageWikiLink ?entity .
  ?iea rdfs:label ""International Energy Agency""@en .
}

UNION

# Query for birthplace of a notable awardee of People's Artist of Russia
SELECT ?birthPlace WHERE {
  ?person dbo:award ""People's Artist of Russia"" ;
          dbo:birthPlace ?birthPlace .
  FILTER EXISTS { ?person dbo:wikiPageWikiLink _:awardee }
}

UNION

# Query for domain of the profession of John Scholey
SELECT ?domain WHERE {
  ?john dbo:profession ?domain .
  ?john rdfs:label ""John Scholey""@en .
}
```",6,6,7,2,3,2,3,28,0,0,3,0,0.0,0
715,64,test,"Give me the leader of the office, that is a government agency and an organisation, of the reference to Carlos Franco Iribarnegaray and commander in the force, that is a military conflict, of the native of Morocco and commander in Spanish Civil War.","SELECT ?result WHERE { ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. <http://dbpedia.org/resource/Spanish_Civil_War> <http://dbpedia.org/ontology/commander> ?result . ?v3 <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Morocco> . ?v1 <http://dbpedia.org/ontology/leader> ?result . ?v0 <http://xmlns.com/foaf/0.1/name> ""Carlos Franco Iribarnegaray""@en . ?v2 <http://dbpedia.org/ontology/commander> ?result . ?v0 <http://dbpedia.org/property/office> ?v1 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/GovernmentAgency>. ?v2 <http://dbpedia.org/ontology/commander> ?v3 . }","```sparql
SELECT ?leaderOfOffice ?commanderInForce WHERE {
  # Find Carlos Franco Iribarnegaray's leadership role in a government agency/organization
  ?franco dbo:leader ?leaderOfOffice .
  ?franco rdfs:label ""Carlos Franco Iribarnegaray""@en .
  ?office dbo:type dbr:Government_agency ;
          dbo:type dbr:Organization .
  ?leaderOfOffice dbo:office ?office .

  # Find the native of Morocco's command role in a military conflict
  ?moroccanNational dbo:nationality dbr:Morocco .
  ?moroccanNational dbo:militaryConflict ?conflict .
  ?commanderInForce dbo:commander ?moroccanNational .
  
  # Ensure involvement in Spanish Civil War
  FILTER EXISTS {
    ?conflict rdfs:label ""Spanish Civil War""@en .
  }
}
```",7,10,8,3,3,3,3,71,0,0,1,0,0.0,0
935,19,test,"Give me the headquarter of the office of the native of Balochistan, Pakistan and death place of the awardee of Sitara-i-Imtiaz.","SELECT ?result WHERE { ?v4 <http://dbpedia.org/ontology/location> ?result . ?v0 <http://dbpedia.org/property/office> ?v4 . ?v2 <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/Sitara-i-Imtiaz> . ?v2 <http://dbpedia.org/ontology/deathPlace> ?result . ?v0 <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Balochistan,_Pakistan> . }","```sparql
# Part 1: Headquarter of the office of a native from Balochistan, Pakistan
SELECT ?officeHeadquarters WHERE {
  ?person dbo:nationality dbr:Pakistan .
  ?person dbo:birthPlace dbr:Balochistan_Pakistan .
  ?person dbo:positionHeld ?office .
  ?office dbo:headquarterLocation ?officeHeadquarters .
}

# Part 2: Death place of an awardee of Sitara-i-Imtiaz
SELECT ?deathPlace WHERE {
  ?awardee dbo:award dbr:Sitara_i_Imtiaz .
  ?awardee dbo:deathPlace ?deathPlace .
}
```",5,5,6,3,2,3,2,20,0,0,1,0,0.0,0
102,18,test,"Give me the native of the residence, that is English and a settlement, of Peter Finbow and manager of the player in the member, that is a soccer player, of England women's national football team.",SELECT ?result WHERE { <http://dbpedia.org/resource/Peter_Finbow> <http://dbpedia.org/property/residence> ?v3 . ?v1 <http://dbpedia.org/ontology/team> <http://dbpedia.org/resource/England_women's_national_football_team> . ?result <http://dbpedia.org/ontology/birthPlace> ?v3 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerPlayer>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. ?v1 <http://dbpedia.org/ontology/team> ?v2 . ?v3 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/United_Kingdom>. ?v2 <http://dbpedia.org/ontology/manager> ?result . },"```sparql
SELECT ?native WHERE {
  # Find Peter Finbow's residence
  ?finbow dbo:residence ?residence .
  ?finbow rdfs:label ""Peter Finbow""@en .

  # Ensure the residence is a settlement and has English as its native language
  ?residence rdf:type dbo:Settlement .
  ?residence dbo:nativeLanguage ?language .
  FILTER (str(?language) = ""English"" || str(?language) = ""en"")

  # Find a player from England women's national football team and their manager
  ?player dbo:memberOfTeam ?team .
  ?team rdfs:label ""England women's national football team""@en .
  ?player dbo:manager ?manager .

  # Link the native of the residence with the manager
  ?native dbo:nativeLanguage ?language .
  FILTER (str(?native) = str(?manager))
}
```",5,8,6,3,2,3,2,20,0,0,1,0,0.0,0
554,20,test,"Give me the leader of the birth place of the band, that is an artist, of Rita Redshoes and leader of the administration of the party member of Independent politician.",SELECT ?result WHERE { <http://dbpedia.org/resource/Rita_Redshoes> <http://dbpedia.org/ontology/associatedMusicalArtist> ?v4 . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. ?v2 <http://dbpedia.org/property/leader> ?v1 . ?v1 <http://dbpedia.org/ontology/party> <http://dbpedia.org/resource/Independent_politician> . ?v2 <http://dbpedia.org/property/leader> ?result . ?v5 <http://dbpedia.org/property/leader> ?result . ?v4 <http://dbpedia.org/ontology/birthPlace> ?v5 . },"```sparql
SELECT ?commonLeader WHERE {
  # Step 1: Identify Rita Redshoes' band
  ?band dbo:artist dbr:Rita_Redshoes .
  
  # Step 2: Find the birthplace of the band
  ?band dbo:birthPlace ?birthPlace .

  # Step 3: Find the leader of the birth place
  ?birthPlace dbo:mayor ?leaderOfBirthPlace .

  # Step 4: Identify an independent politician and their party member
  ?independentPolitician dbo:politicalAffiliation dbr:Independent_politician .
  ?partyMember dbo:memberOfParty ?party .
  
  # Step 5: Find the leader of the administration of that party
  ?party dbo:leader ?leaderOfParty .

  # Check for commonality between the two leaders
  FILTER (?leaderOfBirthPlace = ?leaderOfParty)
}
```",6,7,7,3,2,3,2,20,0,0,3,0,0.0,0
433,62,test,"Give me the associated musical artist of the person born, that is a musical artist and an artist, as the persona of Paul Chambers and associated musical artist of the associated musical artist, that is an artist and a musical artist, of the associated musical artist, that is a musical artist and an artist, of Ornette Coleman and professional in Musician.","SELECT ?result WHERE { ?v3 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v6 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?v6 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. ?result <http://dbpedia.org/property/occupation> ""Musician""@en . ?v3 <http://dbpedia.org/property/birthName> ?v4 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?v0 <http://dbpedia.org/ontology/associatedMusicalArtist> ?v6 . <http://dbpedia.org/resource/Ornette_Coleman> <http://dbpedia.org/ontology/associatedMusicalArtist> ?v0 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. ?v6 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. <http://dbpedia.org/resource/Paul_Chambers> <http://xmlns.com/foaf/0.1/givenName> ?v4 . }","```sparql
SELECT ?finalArtist WHERE {
  # Step 1: Find associated musical artist of Paul Chambers
  ?paulChambers dbo:associatedMusicalArtist ?artist1 .
  ?paulChambers foaf:name ""Paul Chambers""@en .
  ?artist1 rdf:type dbo:Musician .

  # Step 2: Find associated musical artist of the first artist
  ?artist1 dbo:associatedMusicalArtist ?artist2 .
  ?artist2 rdf:type dbo:Musician .

  # Step 3: Find associated musical artist of Ornette Coleman
  ?ornetteColeman dbo:associatedMusicalArtist ?artist3 .
  ?ornetteColeman foaf:name ""Ornette Coleman""@en .
  ?artist3 rdf:type dbo:Musician .

  # Step 4: Find associated musical artist of the third artist
  ?artist3 dbo:associatedMusicalArtist ?finalArtist .
  ?finalArtist rdf:type dbo:Musician .
}
```",7,13,8,3,3,3,3,71,0,0,3,0,0.0,0
365,20,test,"Give me the spouse of the native, that is a politician, of the reference to Полтавская губерния and person born as the birth name of the commander, that is an office holder, in Ukrainian–Soviet War.","SELECT ?result WHERE { ?v5 <http://dbpedia.org/ontology/spouse> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v5 <http://dbpedia.org/ontology/birthPlace> ?v4 . ?v4 <http://xmlns.com/foaf/0.1/name> ""Полтавская губерния""@en . <http://dbpedia.org/resource/Ukrainian–Soviet_War> <http://dbpedia.org/ontology/commander> ?v1 . ?v1 <http://dbpedia.org/property/birthName> ?v2 . ?result <http://dbpedia.org/property/birthName> ?v2 . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. }","```sparql
SELECT ?spouse WHERE {
  # Step 1: Identify a politician native to Полтавская губерния
  ?politician dbo:nativePlace dbr:Poltava_Governorate ;
              rdf:type dbo:Politician .

  # Step 2: Identify a commander in the Ukrainian–Soviet War who is an office holder and get their birth name
  ?commander dbo:officeHolder true ;
             dbo:birthName ?birthName ;
             dbo:participatedIn dbr:Ukrainian_Soviet_War .

  # Step 3: Find the spouse of the politician identified in step 1
  ?politician dbo:spouse ?spouse .
}
```",6,8,7,3,2,3,2,20,0,0,1,0,0.0,0
645,62,test,"Give me the commander in the force of the commander in Siege of Madrid and leader of Ministry of the Army (Spain) and military force of the force, that is an event and a military conflict and a societal event, of the native, that is a president and a politician, of Restoration (Spain).",SELECT ?result WHERE { ?v3 <http://dbpedia.org/ontology/commander> ?result . ?v6 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/President>. ?v6 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v0 <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Restoration_(Spain)> . ?v6 <http://dbpedia.org/ontology/commander> ?v0 . <http://dbpedia.org/resource/Ministry_of_the_Army_(Spain)> <http://dbpedia.org/ontology/leader> ?result . <http://dbpedia.org/resource/Siege_of_Madrid> <http://dbpedia.org/ontology/commander> ?v4 . ?result <http://dbpedia.org/ontology/battle> ?v6 . ?v3 <http://dbpedia.org/ontology/commander> ?v4 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v6 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. },"```sparql
SELECT ?commander WHERE {
  # Find commander in the Siege of Madrid
  ?siege dbo:commander ?commander .
  ?siege rdfs:label ""Siege of Madrid""@en .

  # Ensure this person is leader of Ministry of the Army (Spain)
  ?ministry dbo:leader ?commander .
  ?ministry rdfs:label ""Ministry of the Army (Spain)""@en .

  # Verify involvement in a societal and military conflict
  ?event dbo:participatedInMilitaryConflict ?siege ;
         rdf:type dbo:SocietalEvent, dbo:MilitaryConflict .

  # Check if this person is native to a president from Restoration (Spain)
  ?president dbo:nativePlace ?place .
  ?commander dbo:nativePlace ?place .
  ?president rdfs:label ""Restoration (Spain)""@en ;
             rdf:type dbo:President, dbo:Politician .
}
```",7,12,8,3,3,3,3,71,0,0,1,0,0.0,0
527,18,test,"Give me the author of the work, that is a work and a book, of Tom Baker and actor of the movie, that is a work and English and a television show, with the professional in Actor.","SELECT ?result WHERE { ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/TelevisionShow>. ?v2 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/United_Kingdom>. ?v3 <http://dbpedia.org/property/author> ?result . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Book>. ?v2 <http://dbpedia.org/property/starring> ?result . ?v2 <http://dbpedia.org/property/starring> ?v1 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?v3 <http://dbpedia.org/property/author> <http://dbpedia.org/resource/Tom_Baker> . ?v1 <http://dbpedia.org/property/occupation> ""Actor""@en . }","```sparql
SELECT ?author ?actor WHERE {
  # Find works authored by Tom Baker that are books
  ?work dbo:author ?author .
  ?author rdfs:label ""Tom Baker""@en .
  ?work rdf:type dbo:Book .

  # Find English television shows where Tom Baker acted
  ?movie dbo:starring ?actor .
  ?actor rdfs:label ""Tom Baker""@en .
  ?movie rdf:type dbo:TelevisionShow .
  FILTER (lang(?movie) = ""en"")

  # Check if the author of the book is also an actor in the TV show
  VALUES ?commonPerson { ?author ?actor }
}
```",5,10,6,3,2,3,2,20,0,0,1,0,0.0,0
124,61,test,"Give me the military force of the force, that is a societal event and a military conflict, of the person born on 1850-06-24 and military force of the war, that is an event and a military conflict and a societal event, of the awardee of British South Africa Company Medal.","SELECT ?result WHERE { ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?v1 <http://dbpedia.org/ontology/birthDate> ""1850-06-24""^^<http://www.w3.org/2001/XMLSchema#date> . ?result <http://dbpedia.org/ontology/battle> ?v5 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?v0 <http://dbpedia.org/ontology/battle> ?v5 . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?result <http://dbpedia.org/ontology/battle> ?v3 . ?v0 <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/British_South_Africa_Company_Medal> . ?v3 <http://dbpedia.org/ontology/commander> ?v1 . }","```sparql
SELECT ?personMilitaryForce ?warMilitaryForce WHERE {
  # Step 1: Identify the person born on 1850-06-24
  ?person dbo:birthday ""1850-06-24""^^xsd:date .
  
  # Step 2: Determine the military force associated with this person
  OPTIONAL { 
    ?person dbo:militaryForce ?personMilitaryForce .
  }
  
  # Step 3: Identify societal event and military conflict related to this person
  OPTIONAL {
    ?event dbo:participant ?person ;
           a dbo:MilitaryConflict, dbo:SocietalEvent .
  }

  # Step 4: Find the awardee of the British South Africa Company Medal
  ?awardee dbo:award ""British South Africa Company Medal"" .

  # Step 5: Determine the military force involved in the war related to the awardee
  OPTIONAL {
    ?war dbo:participant ?awardee ;
         a dbo:MilitaryConflict, dbo:SocietalEvent .
    ?war dbo:militaryForce ?warMilitaryForce .
  }
}
```",6,11,7,3,2,3,3,71,0,0,1085,0,0.0,0
124,70,test,"Give me the military force of the war, that is an event and a military conflict and a societal event, of the awardee of British South Africa Company Medal and commander in the war, that is a societal event and a military conflict, of A Field Battery, Royal Australian Artillery and military force of the force, that is a societal event and a military conflict, of the person born on 1850-06-24.","SELECT ?result WHERE { ?v7 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?v0 <http://dbpedia.org/ontology/battle> ?v7 . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?result <http://dbpedia.org/ontology/battle> ?v7 . ?v1 <http://dbpedia.org/ontology/birthDate> ""1850-06-24""^^<http://www.w3.org/2001/XMLSchema#date> . ?v7 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?result <http://dbpedia.org/ontology/battle> ?v3 . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v7 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?v4 <http://dbpedia.org/ontology/commander> ?result . <http://dbpedia.org/resource/A_Field_Battery,_Royal_Australian_Artillery> <http://dbpedia.org/ontology/battle> ?v4 . ?v3 <http://dbpedia.org/ontology/commander> ?v1 . ?v0 <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/British_South_Africa_Company_Medal> . }","```sparql
SELECT ?militaryForce WHERE {
  # Step 1: Identify person born on 1850-06-24
  ?person dbo:birthday ""1850-06-24""^^xsd:date .
  
  # Step 2: Find military force associated with this person
  OPTIONAL { 
    ?person dbo:militaryService ?militaryForce1 .
  }
  
  # Step 3: Identify war involving A Field Battery, Royal Australian Artillery
  ?war dbo:participatingUnit ""A Field Battery, Royal Australian Artillery"" ;
       a dbo:MilitaryConflict ;
       a dbo:SocietalEvent .
  
  # Find military force of this war
  OPTIONAL {
    ?war dbo:militaryForce ?militaryForce2 .
  }
  
  # Step 4: Identify awardee of British South Africa Company Medal
  ?awardee dbo:award ""British South Africa Company Medal"" ;
           a dbo:Person .
  
  # Step 5: Find war associated with this awardee as commander
  OPTIONAL {
    ?war2 dbo:commander ?awardee ;
          a dbo:MilitaryConflict ;
          a dbo:SocietalEvent .
    
    # Find military force of this war
    ?war2 dbo:militaryForce ?militaryForce3 .
  }
  
  # Step 6: Identify common military force across these events
  FILTER (?militaryForce1 = ?militaryForce2 && ?militaryForce2 = ?militaryForce3)
}
```",8,15,9,3,3,3,3,71,0,0,9,0,0.0,0
976,69,test,"Give me the office of the leader, that is a politician, of the administration, that is an organisation, of Kemal Kılıçdaroğlu and office of the mayor, that is a politician and an office holder and Turkish, of Nation Alliance (Turkey) and office of the person born as the birth name of Naci Bostancı.",SELECT ?result WHERE { ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v0 <http://dbpedia.org/property/birthName> ?v5 . ?v0 <http://dbpedia.org/property/office> ?result . ?v4 <http://dbpedia.org/property/leader> <http://dbpedia.org/resource/Kemal_Kılıçdaroğlu> . ?v6 <http://dbpedia.org/ontology/nationality> <http://dbpedia.org/resource/Turkey>. ?v4 <http://dbpedia.org/ontology/leader> ?v2 . <http://dbpedia.org/resource/Naci_Bostancı> <http://dbpedia.org/property/birthName> ?v5 . ?v2 <http://dbpedia.org/property/office> ?result . ?v6 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. <http://dbpedia.org/resource/Nation_Alliance_(Turkey)> <http://dbpedia.org/property/leader> ?v6 . ?v6 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?v6 <http://dbpedia.org/property/office> ?result . },"```sparql
SELECT DISTINCT ?kılıçdaroğluOffice ?nationAllianceMayorOffice ?naciBostancıOffice WHERE {
  # Office of the leader (politician) of Kemal Kılıçdaroğlu's administration
  ?kılıçdaroğlu dbo:birthName ""Kemal Kılıçdaroğlu""@en .
  ?kılıçdaroğlu dbo:office ?kılıçdaroğluOffice .
  FILTER (regex(str(?kılıçdaroğluOffice), ""leader|head"", ""i""))

  # Office of the mayor (politician, office holder, Turkish) of Nation Alliance (Turkey)
  ?nationAlliance dcterms:subject dbc:Nation_Alliance_(Turkey) .
  ?mayor dbo:office ?nationAllianceMayorOffice .
  FILTER (regex(str(?nationAllianceMayorOffice), ""mayor"", ""i""))
  FILTER EXISTS { ?mayor rdf:type dbo:Politician . }
  FILTER EXISTS { ?mayor rdf:type dbo:OfficeHolder . }
  FILTER EXISTS { ?mayor dbo:nationality dbr:Turkey . }

  # Office of the person born as Naci Bostancı
  ?naciBostancı dbo:birthName ""Naci Bostancı""@en .
  ?naciBostancı dbo:office ?naciBostancıOffice .
}
```",8,13,9,3,3,3,3,71,0,0,1,0,0.0,0
645,65,test,"Give me the leader of the office, that is a government agency and an organisation, of Camilo Menéndez Tolosa and military force of the force, that is an event and a military conflict and a societal event, of the native, that is a president and a politician, of Restoration (Spain) and commander in the force of Carlos Asensio Cabanillas.",SELECT ?result WHERE { ?v0 <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Restoration_(Spain)> . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/President>. ?v4 <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Carlos_Asensio_Cabanillas> . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/GovernmentAgency>. ?v4 <http://dbpedia.org/ontology/commander> ?result . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v6 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v6 <http://dbpedia.org/ontology/commander> ?v0 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. <http://dbpedia.org/resource/Camilo_Menéndez_Tolosa> <http://dbpedia.org/property/office> ?v3 . ?v6 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?result <http://dbpedia.org/ontology/battle> ?v6 . ?v6 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?v3 <http://dbpedia.org/ontology/leader> ?result . },"```sparql
SELECT ?leaderOfOffice ?militaryForce WHERE {
  # Find Camilo Menéndez Tolosa and his leadership role in a government agency or organization
  ?camilo dbo:officeLeader ?leaderOfOffice .
  ?camilo rdfs:label ""Camilo Menéndez Tolosa""@en .

  # Identify the native president of Restoration (Spain)
  ?restoration dbo:nativeCountry ?nativePresident .
  ?restoration rdfs:label ""Restoration (Spain)""@en .
  ?nativePresident dbo:president ?restoration .
  
  # Find Carlos Asensio Cabanillas and his military force
  ?carlos dbo:commanderIn ?militaryForce .
  ?carlos rdfs:label ""Carlos Asensio Cabanillas""@en .
  FILTER (regex(str(?military_force), ""event"", ""i"") && regex(str(?military_force), ""military conflict"", ""i"") && regex(str(?military_force), ""societal event"", ""i""))
}
```",7,14,8,3,3,3,3,71,0,0,1,0,0.0,0
987,64,test,"Give me the entity in the region, that is a country, of the time zone, that is a sports event, in Canicosa de la Sierra and birth place of Moamer Kasumović and birth place of the band, that is an artist and a musical artist, of the band, that is an artist, of Dado Polumenta.",SELECT ?result WHERE { ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. <http://dbpedia.org/resource/Canicosa_de_la_Sierra> <http://dbpedia.org/ontology/timeZone> ?v5 . <http://dbpedia.org/resource/Moamer_Kasumović> <http://dbpedia.org/ontology/birthPlace> ?result . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. ?v4 <http://dbpedia.org/ontology/associatedMusicalArtist> ?v2 . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsEvent>. <http://dbpedia.org/resource/Dado_Polumenta> <http://dbpedia.org/ontology/associatedMusicalArtist> ?v4 . ?result <http://dbpedia.org/ontology/country> ?v0 . ?v2 <http://dbpedia.org/ontology/birthPlace> ?result . ?v0 <http://dbpedia.org/property/timeZone> ?v5 . },"```sparql
SELECT ?country WHERE {
  # Step 1: Find Canicosa de la Sierra's time zone
  ?canicosa dbo:location ?location .
  ?canicosa rdfs:label ""Canicosa de la Sierra""@en .
  ?location dbo:timeZone ?timezone .

  # Step 2: Identify a sports event in that time zone
  ?event dbo:timeZone ?timezone ;
         rdf:type dbo:SportsEvent .

  # Step 3: Find Moamer Kasumović's birth place
  ?kasumovic dbo:birthPlace ?kasumovicBirthPlace .
  ?kasumovic rdfs:label ""Moamer Kasumović""@en .

  # Step 4: Identify Dado Pršo's band and its artist
  ?prso dbo:memberOfBand ?band .
  ?prso rdfs:label ""Dado Pršo""@en .
  
  ?artist dbo:memberOfBand ?band ;
          rdf:type dbo:MusicalArtist .

  # Step 5: Find the birth place of that artist
  ?artist dbo:birthPlace ?artistBirthPlace .

  # Step 6: Determine the region and country
  ?kasumovicBirthPlace dbo:locatedIn ?region .
  ?artistBirthPlace dbo:locatedIn ?region .
  
  ?region dbo:country ?country .
}
```",7,12,8,3,3,3,3,71,0,0,1,0,0.0,0
573,61,test,"Give me the person decedent at the residence, that is a settlement, of the professional, that is American, in Politician and parent of the author, that is a politician and an office holder, of the work of John Quincy Adams.","SELECT ?result WHERE { ?v1 <http://dbpedia.org/property/author> <http://dbpedia.org/resource/John_Quincy_Adams> . ?v0 <http://dbpedia.org/ontology/nationality> <http://dbpedia.org/resource/United_States>. ?v1 <http://dbpedia.org/property/author> ?v3 . ?v0 <http://dbpedia.org/property/residence> ?v5 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v0 <http://dbpedia.org/property/occupation> ""Politician""@en . ?result <http://dbpedia.org/ontology/deathPlace> ?v5 . ?v3 <http://dbpedia.org/ontology/parent> ?result . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. }","```sparql
SELECT ?decedent WHERE {
  # Find John Quincy Adams and his works
  ?adams dbo:author ?work .
  ?adams rdfs:label ""John Quincy Adams""@en .

  # Find the author of the work who is a politician and office holder
  ?work dbo:author ?author .
  ?author dbo:occupation dbc:American_politicians .
  ?author dbo:officeHolder true .

  # Find the parent of this author
  ?parent dbo:child ?author .

  # Find the professional in politics (American) who is a child of this parent
  ?professional dbo:parent ?parent .
  ?professional dbo:occupation dbc:American_politicians .

  # Locate the residence of this professional that is a settlement
  ?residence dbo:resident ?professional .
  ?residence rdf:type dbo:Settlement .

  # Identify any person decedent at this residence
  ?decedent dbo:placeOfDeath ?residence .
}
```",6,10,7,3,2,3,3,71,0,0,2,0,0.0,0
573,67,test,"Give me the person decedent at Massachusetts and parent of the author, that is a politician and an office holder, of the work of John Quincy Adams and person decedent at the residence, that is a settlement, of the professional, that is American, in Politician.","SELECT ?result WHERE { ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?result <http://dbpedia.org/ontology/deathPlace> <http://dbpedia.org/resource/Massachusetts> . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v1 <http://dbpedia.org/property/author> ?v3 . ?v0 <http://dbpedia.org/property/residence> ?v6 . ?v3 <http://dbpedia.org/ontology/parent> ?result . ?v0 <http://dbpedia.org/property/occupation> ""Politician""@en . ?result <http://dbpedia.org/ontology/deathPlace> ?v6 . ?v0 <http://dbpedia.org/ontology/nationality> <http://dbpedia.org/resource/United_States>. ?v6 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. ?v1 <http://dbpedia.org/property/author> <http://dbpedia.org/resource/John_Quincy_Adams> . }","```sparql
SELECT ?parent ?decedentAtMassachusetts ?residenceDecedent WHERE {
  # Find John Quincy Adams and his parent who was a politician and office holder
  ?johnQuincyAdams dbo:birthName ""John Quincy Adams""@en .
  ?johnQuincyAdams dbo:parent ?parent .
  
  # Ensure the parent is a politician and an office holder
  ?parent dbo:occupation ?occupation .
  FILTER (CONTAINS(LCASE(str(?occupation)), ""politician"") || CONTAINS(LCASE(str(?occupation)), ""office holder""))

  # Find where this parent is decedent at Massachusetts
  ?parent dbo:deathPlace ?decedentAtMassachusetts .
  ?decedentAtMassachusetts rdfs:label ?massachusettsLabel .
  FILTER (CONTAINS(LCASE(?massachusettsLabel), ""massachusetts""))

  # Find the residence that is a settlement of an American professional in Politician
  ?professional dbo:nationality dbr:United_States .
  ?professional dbo:occupation dbr:Politician .
  ?professional dbo:residence ?residence .
  ?residence rdf:type dbo:Settlement .

  # Determine who is decedent at this residence
  ?decedentAtResidence dbo:deathPlace ?residence .
}
```",7,11,8,3,3,3,3,71,0,0,2,0,0.0,0
216,63,test,"Give me the player in the coach, that is a soccer player and a sports manager and a soccer manager, of Bosnia and Herzegovina national under-18 football team and player in the coach of the reference, that is an organisation and a soccer club, to Croatia U21 and team of the person born, that is a sports manager and a soccer manager and a soccer player, on 1983-12-20.","SELECT ?result WHERE { ?v6 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsManager>. ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerClub>. ?v4 <http://dbpedia.org/ontology/coach> ?v3 . ?v3 <http://dbpedia.org/ontology/team> ?result . ?v6 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerManager>. ?v6 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerPlayer>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerPlayer>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerManager>. ?v6 <http://dbpedia.org/ontology/team> ?result . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?v4 <http://xmlns.com/foaf/0.1/name> ""Croatia U21""@en . ?v2 <http://dbpedia.org/ontology/birthDate> ""1983-12-20""^^<http://www.w3.org/2001/XMLSchema#date> . ?result <http://dbpedia.org/ontology/coach> ?v2 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsManager>. <http://dbpedia.org/resource/Bosnia_and_Herzegovina_national_under-18_football_team> <http://dbpedia.org/ontology/coach> ?v6 . }","```sparql
SELECT ?coach ?organization ?team WHERE {
  # Step 1: Find coach of Bosnia and Herzegovina U18 who is a soccer player and manager
  ?coach dbo:position ""Coach""@en ;
         dbo:nationality dbr:Bosnia_and_Herzegovina ;
         dbo:managerTeam dbr:Bosnia_and_Herzegovina_national_under-18_football_team ;
         dbo:sport dbr:Soccer .

  # Step 2: Find organization/club related to Croatia U21
  ?organization a dbo:SportsOrganization ;
                dbo:coach ?coach .
  
  OPTIONAL {
    ?organization rdfs:label ""Croatia national under-21 football team""@en .
  }

  # Step 3: Identify person born on December 20, 1983, who is a sports manager, soccer manager, and player
  ?person dbo:birthDate ""1983-12-20""^^xsd:date ;
          dbo:sport dbr:Soccer ;
          dbo:occupation [a dbo:SportsManager ; dbo:SoccerManager] .

  # Step 4: Find the team associated with this person
  ?team dbo:coach ?person .
}
```",7,15,8,3,3,3,3,71,0,0,1,0,0.0,0
582,67,test,"Give me the figure known as the nickname of the team, that is an organisation, of Hajime Moriyasu and player in the father, that is an athlete and a soccer manager and a sports manager, of the child of Kazuaki Nagasawa and reference to Japan.","SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/coach> <http://dbpedia.org/resource/Hajime_Moriyasu> . ?result <http://dbpedia.org/property/nickname> ?v3 . ?result <http://xmlns.com/foaf/0.1/name> ""Japan""@en . ?v0 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Kazuaki_Nagasawa> . ?v1 <http://dbpedia.org/property/nickname> ?v3 . ?v6 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsManager>. ?v6 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Athlete>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?v0 <http://dbpedia.org/property/father> ?v6 . ?v6 <http://dbpedia.org/ontology/team> ?result . ?v6 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerManager>. }","```sparql
SELECT ?teamNickname ?father WHERE {
  # Find team managed by Hajime Moriyasu and its nickname
  ?team dbo:manager ?hajime .
  ?hajime rdfs:label ""Hajime Moriyasu""@en .
  OPTIONAL { 
    ?team dbo:nickname ?teamNickname .
  }

  # Identify Kazuaki Nagasawa's child who is an athlete and soccer manager
  ?nagasawaChild dbo:childOf ?kazuakiNagasawa .
  ?kazuakiNagasawa rdfs:label ""Kazuaki Nagasawa""@en .
  ?nagasawaChild rdf:type dbo:Athlete ;
                 dbo:sportManager true ;
                 dbo:soccerManager true .

  # Determine the father of Kazuaki Nagasawa's child
  ?nagasawaChild dbo:parent ?father .
  FILTER EXISTS { 
    ?father rdf:type dbo:SoccerPlayer ;
            dbo:sportsManager true .
  }
}
```",7,11,8,3,3,3,3,71,0,0,1,0,0.0,0
459,28,test,"Give me the governor of the administration, that is a politician, of Brad Henry and governor of the death place, that is a settlement, of Cliff Roquemore and person born as the birth name of Kevin Stitt.",SELECT ?result WHERE { ?v3 <http://dbpedia.org/property/governor> ?result . <http://dbpedia.org/resource/Cliff_Roquemore> <http://dbpedia.org/ontology/deathPlace> ?v1 . <http://dbpedia.org/resource/Kevin_Stitt> <http://dbpedia.org/property/birthName> ?v5 . ?v3 <http://dbpedia.org/property/governor> <http://dbpedia.org/resource/Brad_Henry> . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?result <http://dbpedia.org/property/birthName> ?v5 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. ?v1 <http://dbpedia.org/property/governor> ?result . },"```sparql
SELECT ?governorOfHenryAdministration ?governorOfDeathPlace ?personWithSameBirthName WHERE {
  # Find Brad Henry's governorship period and corresponding politician
  ?bradHenry dbo:officeHolder ?office .
  ?bradHenry rdfs:label ""Brad Henry""@en .
  ?office dbo:positionTitle ""Governor of Oklahoma""@en .
  OPTIONAL { 
    ?office dbo:startDate ?start .
    ?office dbo:endDate ?end .
    ?politician dbo:officeHolder ?sameOffice .
    ?sameOffice dbo:startDate ?sameStart .
    ?sameOffice dbo:endDate ?sameEnd .
    FILTER (?start <= ?sameEnd && ?end >= ?sameStart)
    BIND(?politician AS ?governorOfHenryAdministration)
  }

  # Find Cliff Roquemore's death place and its governor
  ?cliffRoquemore dbo:deathPlace ?deathPlace .
  ?cliffRoquemore rdfs:label ""Cliff Roquemore""@en .
  OPTIONAL {
    ?governorOfDeathPlace dbo:governs ?deathPlace .
    BIND(?governorOfDeathPlace AS ?governorOfDeathPlace)
  }

  # Find a person with the same birth name as Kevin Stitt
  ?kevinStitt rdfs:label ""Kevin Stitt""@en .
  ?kevin",6,8,7,2,3,2,3,28,0,0,1,0,0.0,0
445,63,test,"Give me the entity in the award of George H. Cameron and death place of the awardee of Royal Astronomical Society and entity in the residence, that is a country, of the resident, that is an athlete, of Great Britain.",SELECT ?result WHERE { <http://dbpedia.org/resource/George_H._Cameron> <http://dbpedia.org/property/awards> ?v2 . ?v6 <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/Royal_Astronomical_Society> . ?result <http://dbpedia.org/ontology/location> ?v3 . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Athlete>. ?v4 <http://dbpedia.org/property/residence> <http://dbpedia.org/resource/Great_Britain> . ?result <http://dbpedia.org/ontology/country> ?v2 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. ?v4 <http://dbpedia.org/property/residence> ?v3 . ?v6 <http://dbpedia.org/ontology/deathPlace> ?result . },"```sparql
SELECT ?awardEntity ?deathPlace ?country WHERE {
  # Entity in the award of George H. Cameron
  ?cameron dbo:awardsReceived ?award .
  ?cameron rdfs:label ""George H. Cameron""@en .
  ?award dbo:entity ?awardEntity .

  # Death place of the awardee of Royal Astronomical Society
  OPTIONAL {
    ?raAward dbo:recipient ?recipient .
    ?raAward dbo:awardingBody dbr:Royal_Astronomical_Society .
    ?recipient dbo:deathPlace ?deathPlace .
  }

  # Entity in the residence, which is a country, of an athlete resident of Great Britain
  OPTIONAL {
    ?athlete dbo:nationality dbr:United_Kingdom .
    ?athlete dbo:sport ?sport .
    FILTER EXISTS { ?athlete rdf:type dbo:Athlete }
    ?athlete dbo:residence ?residence .
    ?residence a dbo:Country .
    ?residence rdfs:label ?country .
  }
}
```",7,9,8,3,3,3,3,71,0,0,1,0,0.0,0
892,63,test,"Give me the entity in the profession of the true self of Enrico Crolla and entity in the administration, that is Italian and a region and a settlement and an administrative region, of Democratic Party (Italy) and landmark at elevation of the award of Anna Ishii.","SELECT ?result WHERE { ?v0 <http://dbpedia.org/property/leaderParty> <http://dbpedia.org/resource/Democratic_Party_(Italy)> . ?v3 <http://dbpedia.org/property/occupation> ?v1 . ?result <http://dbpedia.org/ontology/elevation> ?v5 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. ?v3 <http://xmlns.com/foaf/0.1/givenName> ""Enrico Crolla""@en . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/AdministrativeRegion>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Region>. <http://dbpedia.org/resource/Anna_Ishii> <http://dbpedia.org/property/awards> ?v5 . ?v0 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Italy>. ?result <http://dbpedia.org/ontology/country> ?v1 . ?result <http://dbpedia.org/ontology/province> ?v0 . }","```sparql
SELECT ?professionEntity ?administrationEntity ?landmarkElevation WHERE {
  # Part 1: Profession of Enrico Crolla's true self
  OPTIONAL {
    ?enrico dbo:occupation ?profession .
    ?enrico rdfs:label ""Enrico Crolla""@en .
    ?profession rdfs:label ?professionLabel .
    BIND(?profession AS ?professionEntity)
  }
  
  # Part 2: Entity in administration related to Democratic Party (Italy)
  OPTIONAL {
    ?party dbo:member ?person .
    ?party rdfs:label ""Democratic Party (Italy)""@en .
    
    ?region a dbo:AdministrativeRegion ;
            dbo:country dbr:Italy ;
            dbo:settlement ?settlement .
    ?settlement dbo:administrativeRegion ?region .
    
    BIND(?region AS ?administrationEntity)
  }
  
  # Part 3: Landmark at elevation associated with Anna Ishii's award
  OPTIONAL {
    ?anna dbo:award ?award .
    ?anna rdfs:label ""Anna Ishii""@en .
    
    ?landmark dbo:elevation ?elevation ;
              dbo:associatedWith ?award .
    BIND(?elevation AS ?landmarkElevation)
  }
}
```",7,11,8,3,3,3,3,71,0,0,2,0,0.0,0
445,58,test,Give me the entity in England and entity in the award of the commander in Battle of Saint-Mihiel and death place of the awardee of Royal Astronomical Society.,SELECT ?result WHERE { ?v5 <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/Royal_Astronomical_Society> . <http://dbpedia.org/resource/Battle_of_Saint-Mihiel> <http://dbpedia.org/ontology/commander> ?v1 . ?result <http://dbpedia.org/ontology/country> ?v2 . ?v5 <http://dbpedia.org/ontology/deathPlace> ?result . ?v1 <http://dbpedia.org/property/awards> ?v2 . ?result <http://dbpedia.org/ontology/location> <http://dbpedia.org/resource/England> . },"```sparql
SELECT ?commander ?awardee ?deathPlace WHERE {
  # Find individuals awarded as commander in Battle of Saint-Mihiel
  ?battle dbo:participant ?commander .
  ?battle rdfs:label ""Battle of Saint-Mihiel""@en .
  ?commander dbo:militaryRank ?rank .
  FILTER (regex(str(?rank), ""Commander"", ""i""))

  # Find connection to awardees of the Royal Astronomical Society
  OPTIONAL {
    ?awardee dbo:awardReceived ?rasAward .
    ?rasAward rdfs:label ""Royal Astronomical Society""@en .
    ?commander foaf:sameAs ?awardee .
  }

  # Determine death place of such an awardee and check for a link to England
  OPTIONAL {
    ?awardee dbo:deathPlace ?deathPlace .
    ?deathPlace rdfs:label ?placeLabel .
    FILTER (regex(?placeLabel, ""England"", ""i""))
  }
}
```",6,6,7,3,3,3,3,71,0,0,1,0,0.0,0
773,60,test,"Give me the parent of the child, that is a royalty, of the father, that is an office holder and a royalty, of Carloman of Bavaria and spouse of the father of the parent of Bernard (son of Charles the Fat).",SELECT ?result WHERE { ?v2 <http://dbpedia.org/ontology/spouse> ?result . ?v1 <http://dbpedia.org/ontology/parent> ?result . ?v1 <http://dbpedia.org/property/father> ?v0 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. <http://dbpedia.org/resource/Carloman_of_Bavaria> <http://dbpedia.org/property/father> ?v0 . ?v3 <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Bernard_(son_of_Charles_the_Fat)> . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v3 <http://dbpedia.org/property/father> ?v2 . },"```sparql
SELECT ?parent WHERE {
  # Find Carloman of Bavaria and his father
  ?carloman dbo:childOf ?father .
  ?carloman rdfs:label ""Carloman of Bavaria""@en .

  # Ensure Louis the German is an office holder and royalty
  ?father rdfs:label ""Louis the German""@en .
  ?father a dbo:Monarch ;
          a dbo:OfficeHolder .

  # Find spouse of Louis the German
  OPTIONAL {
    ?louisGerman dbo:spouse ?spouse .
    FILTER (str(?spouse) = str(?emma))
  }

  # Identify Bernard and his parent Charles the Fat
  ?bernard dbo:childOf ?charlesFat .
  ?bernard rdfs:label ""Bernard""@en .

  # Find parent of Charles the Fat, which is Louis the German again
  ?charlesFat dbo:parent ?louisGerman .

  # Reaffirm spouse of Louis the German as Emma of Altdorf
  ?emma rdfs:label ""Emma of Altdorf""@en .
}
```",6,9,7,3,2,3,3,71,0,0,1,0,0.0,0
216,62,test,"Give me the player in the coach of the reference, that is an organisation and a soccer club, to Croatia U21 and player in the coach, that is a soccer player and a sports manager and a soccer manager, of the player, that is an organisation and a sports club and a soccer club, in Džemal Berberović and team of Ognjen Vukojević.","SELECT ?result WHERE { ?v0 <http://dbpedia.org/ontology/coach> ?v6 . ?v6 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsManager>. ?v6 <http://dbpedia.org/ontology/team> ?result . ?v6 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerManager>. ?v4 <http://dbpedia.org/ontology/coach> ?v3 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerClub>. ?v4 <http://xmlns.com/foaf/0.1/name> ""Croatia U21""@en . ?v6 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerPlayer>. ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerClub>. <http://dbpedia.org/resource/Džemal_Berberović> <http://dbpedia.org/ontology/team> ?v0 . ?result <http://dbpedia.org/ontology/coach> <http://dbpedia.org/resource/Ognjen_Vukojević> . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsClub>. ?v3 <http://dbpedia.org/ontology/team> ?result . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. }","```sparql
SELECT ?berberovicClub ?vukojevicTeam ?croatiaU21Coach ?playerInCoach ?coachOfBerberovicClub ?playerInVukojevicTeam WHERE {
  # Find the club Džemal Berberović played for
  ?berberovic dbo:player ?berberovicClub .
  ?berberovic rdfs:label ""Džemal Berberović""@en .

  # Ensure it's an organization and a soccer club
  ?berberovicClub rdf:type dbo:SoccerClub ;
                  rdf:type dbo:Organization .

  # Find the team Ognjen Vukojević was part of
  ?vukojevic dbo:member ?vukojevicTeam .
  ?vukojevic rdfs:label ""Ognjen Vukojević""@en .

  # Ensure it's an organization, sports club, and soccer club
  ?vukojevicTeam rdf:type dbo:SoccerClub ;
                 rdf:type dbo:SportsClub ;
                 rdf:type dbo:Organization .

  # Find the coach of Croatia U21 who is also a soccer club
  ?croatiaU21Coach dbo:coach ?croatiaU21 .
  ?croatiaU21 rdfs:label ""Croatia national under-21 football team""@en .
  
  # Ensure it's an organization and a soccer club
  ?croatiaU21Coach rdf:type dbo:SoccerClub ;
                   rdf:type dbo:Organization .

  # Find the player who is also a soccer player, sports manager, and soccer manager of the coach
  ?playerInCoach dbo:player ?croatiaU21Coach .
  ?playerInCoach rdf:type dbo:SoccerPlayer ;
                 rdf:type dbo:SportsManager ;
                 rdf:type dbo:SoccerManager .

  # Find the coach of Džemal Berberović's club
  ?coachOfBerberovicClub dbo:coach ?berberovicClub .

  # Ensure it's an organization and a soccer club
  ?coachOfBerberovicClub rdf:type dbo:SoccerClub ;
                         rdf:type dbo:Organization .

  # Find the player who is also a soccer player, sports manager, and soccer manager of Ognjen Vukojević's team
  ?playerInVukojevicTeam dbo:player ?vukojevicTeam .
  ?playerInVukojevicTeam rdf:type dbo:SoccerPlayer ;
                         rdf:type dbo:SportsManager ;
                         rdf:type dbo:SoccerManager .
}
```",7,15,8,3,3,3,3,71,0,0,1,0,0.0,0
136,8,test,Give me the region coded as 03834 and landmark at elevation of the award of Bret Anthony Johnston.,"SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/areaCode> ""03834"" . ?result <http://dbpedia.org/ontology/elevation> ?v2 . <http://dbpedia.org/resource/Bret_Anthony_Johnston> <http://dbpedia.org/property/awards> ?v2 . }","```sparql
SELECT ?landmark ?region WHERE {
  # Step 1: Identify Bret Anthony Johnston
  ?johnston dbo:wikiPageID ""Bret_Anthony_Johnston""@en .
  
  # Step 2: Find the award associated with him
  ?award dbo:recipient ?johnston ;
         dbo:name ?awardName .

  # Step 3: Determine a landmark at an elevation corresponding to the award's significance
  ?landmark dbo:elevation ?elevation .
  FILTER (?elevation = ?awardSignificance) 

  # Step 4: Find region coded as ""03834""
  ?regionCode rdfs:label ""03834""@en ;
              dbo:location ?landmark .

  BIND(?awardName AS ?awardSignificance)
}
```",3,3,4,2,2,2,2,9,0,0,1,0,0.0,0
826,70,test,"Give me the predecessor of the parent of the child of Louis IV, Grand Duke of Hesse and successor of the child, that is a royalty, of the reference, that is a royalty, to Louis I and spouse of the child of Johann Heinrich Appel.","SELECT ?result WHERE { ?v4 <http://dbpedia.org/property/father> ""Johann Heinrich Appel""@en . ?v0 <http://dbpedia.org/ontology/child> ?v7 . ?v7 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v7 <http://dbpedia.org/ontology/successor> ?result . ?v1 <http://dbpedia.org/ontology/parent> ?v3 . ?v1 <http://dbpedia.org/ontology/parent> <http://dbpedia.org/resource/Louis_IV,_Grand_Duke_of_Hesse> . ?v0 <http://xmlns.com/foaf/0.1/name> ""Louis I""@en . ?result <http://dbpedia.org/ontology/successor> ?v3 . ?v4 <http://dbpedia.org/ontology/spouse> ?result . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. }","```sparql
SELECT ?predecessor WHERE {
  # Step 1: Identify Louis IV, Grand Duke of Hesse
  ?louisIV dbo:parent ?child .
  ?louisIV rdfs:label ""Louis IV, Grand Duke of Hesse""@en .

  # Step 2: Find the parent of one of his children (should be Louis IV)
  ?child dbo:parent ?parent .
  
  # Step 3: Identify predecessor of this parent
  OPTIONAL {
    ?predecessor dbo:succeededBy ?parent .
  }

  # Step 4: Successor of a child that is royalty
  OPTIONAL {
    ?successor dbo:predecessor ?child .
    FILTER (regex(str(?successor), ""royalty"", ""i""))
  }
  
  # Step 5: Reference to Louis I and spouse of the child of Johann Heinrich Appel
  OPTIONAL {
    ?reference dbo:parent ?louisIChild .
    ?johannHeinrichAppel dbo:child ?appelChild .
    ?appelChild dbo:spouse ?spouse .
    
    # Ensure reference is royalty
    FILTER (regex(str(?reference), ""royalty"", ""i""))
  }
}
```",8,10,9,3,3,3,3,71,0,0,1,0,0.0,0
41,27,test,"Give me the party of Mark Durkan and party of the work, that is an office holder, of yes and party of the person born as David Declan Costello.","SELECT ?result WHERE { ?v2 <http://dbpedia.org/ontology/party> ?result . <http://dbpedia.org/resource/Mark_Durkan> <http://dbpedia.org/ontology/party> ?result . ?v1 <http://dbpedia.org/ontology/party> ?result . ?v1 <http://dbpedia.org/property/author> ""yes""@en . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v2 <http://dbpedia.org/property/birthName> ""David Declan Costello""@en . }","```sparql
SELECT ?markDurkanParty ?yesOfficeHolderParty ?davidCostelloParty WHERE {
  # Retrieve the political party of Mark Durkan
  ?durkan dbo:birthName ""Mark Durkan""@en .
  ?durkan dbo:party ?markDurkanParty .

  # Find an office holder with label ""Yes"" and retrieve their political party
  OPTIONAL {
    ?yesOfficeHolder a dbo:OfficeHolder ;
                    rdfs:label ""Yes""@en .
    ?yesOfficeHolder dbo:party ?yesOfficeHolderParty .
  }

  # Retrieve the political party of David Declan Costello by birth name
  OPTIONAL {
    ?costello dbo:birthName ""David Declan Costello""@en .
    ?costello dbo:party ?davidCostelloParty .
  }
}
```",5,6,6,2,3,2,3,28,0,0,1,0,0.0,0
839,59,test,"Give me the band of the person born, that is a musical artist, as the persona of Kevin Russell (musician) and band of the member of the band, that is a band and a group, of Peter Schorowsky.",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/bandMember> ?v5 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Band>. <http://dbpedia.org/resource/Kevin_Russell_(musician)> <http://xmlns.com/foaf/0.1/givenName> ?v3 . ?v2 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Group>. ?v2 <http://dbpedia.org/property/birthName> ?v3 . <http://dbpedia.org/resource/Peter_Schorowsky> <http://dbpedia.org/ontology/associatedMusicalArtist> ?v0 . ?v0 <http://dbpedia.org/ontology/bandMember> ?v5 . },"```sparql
SELECT ?kevinRussellBand ?peterSchorowskyBand WHERE {
  # Find the band associated with Kevin Russell
  ?kevinRussell dbo:band ?kevinRussellBand .
  ?kevinRussell rdfs:label ""Kevin Russell (musician)""@en .

  # Find Peter Schorowsky's band and ensure it is a band and group
  ?peterSchorowsky dbo:memberOf ?peterSchorowskyBand .
  ?peterSchorowsky rdfs:label ""Peter Schorowsky""@en .
  
  FILTER (regex(str(?peterSchorowskyBand), ""The Notwist"", ""i""))
  ?peterSchorowskyBand a dbo:MusicalGroup ;
                      a dbo:Band .
}
```",6,9,7,3,2,3,3,71,0,0,1,0,0.0,0
715,65,test,"Give me the leader of the office, that is a government agency and an organisation, of Carlos Franco Iribarnegaray and commander in the force of the mayor, that is an office holder and a politician and a president, of 1933 Spanish general election and commander in the force, that is a military conflict, of Abd el-Krim.",SELECT ?result WHERE { <http://dbpedia.org/resource/1933_Spanish_general_election> <http://dbpedia.org/property/leader> ?v0 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/President>. ?v3 <http://dbpedia.org/ontology/leader> ?result . <http://dbpedia.org/resource/Carlos_Franco_Iribarnegaray> <http://dbpedia.org/property/office> ?v3 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v4 <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Abd_el-Krim> . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/GovernmentAgency>. ?v6 <http://dbpedia.org/ontology/commander> ?result . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?v4 <http://dbpedia.org/ontology/commander> ?result . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v6 <http://dbpedia.org/ontology/commander> ?v0 . },"```sparql
SELECT ?leaderOfCarlosFranco ?commanderInForceMayor ?militaryConflictAbdElKrim WHERE {
  # Find Carlos Franco Iribarnegaray's office leader
  ?carlosFranco dbo:officeLeader ?leaderOfCarlosFranco .
  ?carlosFranco rdfs:label ""Carlos Franco Iribarnegaray""@en .

  # Find the mayor who was a commander in force during the 1933 Spanish general election
  OPTIONAL {
    ?mayor dbo:role ""Mayor""@en ;
           dbo:election ""1933 Spanish general election""@en .
    ?mayor dbo:commanderInForce ?commanderInForceMayor .
  }

  # Find the military conflict commanded by Abd el-Krim
  OPTIONAL {
    ?abdElKrim dbo:militaryConflict ?militaryConflictAbdElKrim .
    ?abdElKrim rdfs:label ""Abd el-Krim""@en .
  }
}
```",7,13,8,3,3,3,3,71,0,0,1,0,0.0,0
456,70,test,"Give me the spouse of the actor of Pacific Drive and professional in the alter ego of the reference, that is a fictional character, to Lamont Cranston (radio, film and television) and band of the band, that is a musical artist, of the band of Alan Doyle.","SELECT ?result WHERE { ?result <http://dbpedia.org/property/occupation> ?v7 . ?v0 <http://dbpedia.org/property/alterEgo> ?v7 . <http://dbpedia.org/resource/Pacific_Drive> <http://dbpedia.org/property/starring> ?v4 . ?v1 <http://dbpedia.org/ontology/associatedMusicalArtist> ?v3 . <http://dbpedia.org/resource/Alan_Doyle> <http://dbpedia.org/ontology/associatedMusicalArtist> ?v1 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/FictionalCharacter>. ?v0 <http://xmlns.com/foaf/0.1/name> ""Lamont Cranston (radio, film and television)""@en . ?v4 <http://dbpedia.org/ontology/spouse> ?result . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?v3 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . }","```sparql
SELECT ?spouse WHERE {
  # Actor of Pacific Drive
  ?actor dbo:film ?pacificDrive .
  ?pacificDrive rdfs:label ""Pacific Drive""@en .

  # Spouse of the actor
  ?actor dbo:spouse ?spouse .

  # Lamont Cranston (The Shadow)
  OPTIONAL {
    ?lamontCranston rdfs:label ""Lamont Cranston""@en .
    FILTER regex(str(?lamontCranston), ""The Shadow"", ""i"")
  }

  # Alan Doyle and his band
  OPTIONAL {
    ?alanDoyle dbo:bandMember ?greatBigSea .
    ?greatBigSea rdfs:label ""Great Big Sea""@en .
  }
}
```",8,10,9,3,3,3,3,71,0,0,1,0,0.0,0
417,71,test,"Give me the spouse of the parent, that is a royalty, of the child of Knud, Hereditary Prince of Denmark and child of the child, that is a royalty, of the parent, that is a royalty, of Alexandrine of Mecklenburg-Schwerin and child of the father of the leader, that is a royalty, of Colony of Greenland.","SELECT ?result WHERE { ?v4 <http://dbpedia.org/property/father> ?v5 . ?result <http://dbpedia.org/ontology/spouse> ?v2 . ?v8 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v7 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v8 <http://dbpedia.org/property/father> ?v7 . ?result <http://dbpedia.org/ontology/parent> ?v8 . ?v1 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Knud,_Hereditary_Prince_of_Denmark> . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v2 <http://dbpedia.org/ontology/child> ?v1 . <http://dbpedia.org/resource/Alexandrine_of_Mecklenburg-Schwerin> <http://dbpedia.org/ontology/parent> ?v7 . ?result <http://dbpedia.org/property/father> ?v5 . <http://dbpedia.org/resource/Colony_of_Greenland> <http://dbpedia.org/property/leader> ?v4 . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. }","```sparql
SELECT ?spouse WHERE {
  # Step 1: Find a child of Knud, Hereditary Prince of Denmark
  ?knudChild dbo:parent dbr:Knud,_Hereditary_Prince_of_Denmark .
  
  # Step 2: Identify the parent (royalty) of this child
  OPTIONAL { 
    ?knudChildParent dbo:child ?knudChild .
    FILTER EXISTS { ?knudChildParent dbo:title ?title . FILTER regex(?title, ""King|Queen|Prince|Princess"", ""i"") }
  }

  # Step 3: Determine the spouse of this royal parent
  OPTIONAL {
    ?knudChildParent dbo:spouse ?spouse .
  }

  # Step 4: For Alexandrine of Mecklenburg-Schwerin, find her child who is royalty
  ?alexChild dbo:parent dbr:Alexandrine_of_Mecklenburg-Schwerin .
  
  OPTIONAL {
    ?alexChildParent dbo:child ?alexChild .
    FILTER EXISTS { ?alexChildParent dbo:title ?title . FILTER regex(?title, ""King|Queen|Prince|Princess"", ""i"") }
  }

  # Step 5: Find the parent (royalty) of this child
  OPTIONAL {
    ?alexChildParentParent dbo:child ?alexChildParent .
    FILTER EXISTS { ?alexChildParentParent dbo",9,13,10,3,3,3,3,71,0,0,1,0,0.0,0
443,25,test,"Give me the birthplace of Carl Larsson and birthplace of the person born, that is a musical artist and an artist, on 1949-11-20 and landmark at elevation of the award of William Shepherd.","SELECT ?result WHERE { <http://dbpedia.org/resource/William_Shepherd> <http://dbpedia.org/property/awards> ?v2 . ?result <http://dbpedia.org/ontology/elevation> ?v2 . ?v4 <http://dbpedia.org/ontology/birthDate> ""1949-11-20""^^<http://www.w3.org/2001/XMLSchema#date> . <http://dbpedia.org/resource/Carl_Larsson> <http://dbpedia.org/ontology/birthPlace> ?result . ?v4 <http://dbpedia.org/ontology/birthPlace> ?result . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. }","```sparql
# Query to find Carl Larsson's birthplace
SELECT ?birthPlace WHERE {
  ?larsson dbo:birthPlace ?birthPlace .
  ?larsson rdfs:label ""Carl Larsson""@en .
}

# Query to find the person born on 1949-11-20 who is both a musical artist and an artist, and their birthplace
SELECT ?person ?birthPlace WHERE {
  ?person dbo:birthDate ?date .
  ?person dbo:occupation ?occupation1 .
  ?person dbo:occupation ?occupation2 .
  FILTER (?date = ""1949-11-20""^^xsd:date)
  FILTER (CONTAINS(LCASE(str(?occupation1)), ""musician"") && CONTAINS(LCASE(str(?occupation2)), ""artist""))
  ?person dbo:birthPlace ?birthPlace .
}

# Query to find the landmark at elevation related to William Shepherd's award
SELECT ?landmark WHERE {
  ?shepherd dbo:award ?award .
  ?shepherd rdfs:label ""William Shepherd""@en .
  ?award dbo:location ?landmark .
  ?landmark dbo:elevation ?elevation .
  FILTER (?elevation > 0) # Assuming elevation is a positive number
}
```",5,7,6,2,3,2,3,28,0,0,1,0,0.0,0
645,56,test,"Give me the military force of Spanish Civil War and leader of the office, that is a government agency and an organisation, of the native of Restoration (Spain) and commander in the force of Carlos Asensio Cabanillas.",SELECT ?result WHERE { ?v2 <http://dbpedia.org/ontology/commander> ?result . ?v0 <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Restoration_(Spain)> . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/GovernmentAgency>. ?result <http://dbpedia.org/ontology/battle> <http://dbpedia.org/resource/Spanish_Civil_War> . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?v2 <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Carlos_Asensio_Cabanillas> . ?v0 <http://dbpedia.org/property/office> ?v1 . ?v1 <http://dbpedia.org/ontology/leader> ?result . },"```sparql
SELECT ?militaryForce ?leader WHERE {
  # Find military forces involved in the Spanish Civil War
  ?force dbo:partOfEvent ?civilWar .
  ?civilWar rdfs:label ""Spanish Civil War""@en .

  # Identify Carlos Asensio Cabanillas as a commander in one of these forces
  ?cabanillas dbo:commanderIn ?force .
  ?cabanillas rdfs:label ""Carlos Asensio Cabanillas""@en .

  # Find the leader of an office that is both a government agency and organization, native to Restoration (Spain)
  ?leader dbo:nativeCountry ?restoration .
  ?restoration rdfs:label ""Restoration (Spain)""@en .
  ?office dbo:head ?leader .
  ?office rdf:type ?type1 .
  ?office rdf:type ?type2 .
  FILTER (?type1 = dbpedia-owl:GovernmentAgency && ?type2 = dbpedia-owl:Organization)
}
```",6,8,7,3,3,3,3,71,0,0,2,0,0.0,0
433,66,test,"Give me the professional in the profession of the writer of Slowhand at 70 – Live at the Royal Albert Hall and associated musical artist of the person born, that is a musical artist and an artist, as Paul Laurence Dunbar Chambers Jr. and associated musical artist of the associated musical artist, that is an artist and a musical artist, of Scott LaFaro.","SELECT ?result WHERE { ?v3 <http://dbpedia.org/property/birthName> ""Paul Laurence Dunbar Chambers Jr.""@en . <http://dbpedia.org/resource/Slowhand_at_70_–_Live_at_the_Royal_Albert_Hall> <http://dbpedia.org/property/writer> ?v1 . ?v1 <http://dbpedia.org/property/occupation> ?v2 . ?v6 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?v6 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?v6 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. <http://dbpedia.org/resource/Scott_LaFaro> <http://dbpedia.org/ontology/associatedMusicalArtist> ?v6 . ?v3 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?result <http://dbpedia.org/property/occupation> ?v2 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. }","```sparql
SELECT ?professional WHERE {
  # Find Eric Clapton as the writer of ""Slowhand at 70 – Live at the Royal Albert Hall""
  ?album dbo:writer ?clapton .
  ?album rdfs:label ""Slowhand at 70 – Live at the Royal Albert Hall""@en .

  # Find Paul Laurence Dunbar Chambers Jr. and his associated musical artist
  ?chambers rdf:type dbo:MusicalArtist ;
            rdfs:label ""Paul Chambers (musician)""@en .
  OPTIONAL {
    ?chambers dbo:associatedMusicalArtist ?milesDavis .
    ?milesDavis rdfs:label ""Miles Davis""@en .
  }

  # Find Scott LaFaro and his associated musical artist
  ?lafaro rdf:type dbo:MusicalArtist ;
          rdfs:label ""Scott LaFaro""@en .
  OPTIONAL {
    ?lafaro dbo:associatedMusicalArtist ?billEvans .
    ?billEvans rdfs:label ""Bill Evans (musician)""@en .
  }

  # Find the professional in the profession of Miles Davis
  ?milesDavis dbo:profession ?professional .
}
```",7,11,8,3,3,3,3,71,0,0,1,0,0.0,0
456,63,test,"Give me the professional in the alter ego of The Shadow and band of the band, that is a musical artist, of Dean Brody and spouse of the actor of the movie, that is a work and a television show, with Ross Newton.",SELECT ?result WHERE { ?v3 <http://dbpedia.org/ontology/spouse> ?result . <http://dbpedia.org/resource/Dean_Brody> <http://dbpedia.org/ontology/associatedMusicalArtist> ?v2 . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?result <http://dbpedia.org/property/occupation> ?v6 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/TelevisionShow>. ?v2 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v4 <http://dbpedia.org/property/starring> ?v3 . <http://dbpedia.org/resource/The_Shadow> <http://dbpedia.org/property/alterEgo> ?v6 . ?v4 <http://dbpedia.org/property/starring> <http://dbpedia.org/resource/Ross_Newton> . },"```sparql
SELECT ?professional ?spouse WHERE {
  # The Shadow's alter ego
  ?shadow dbo:alterEgo ?alterEgo .
  ?shadow rdfs:label ""The Shadow""@en .

  # Dean Brody and his band
  ?brody dbo:memberOfBand ?band .
  ?brody rdfs:label ""Dean Brody""@en .

  # Professional in the band
  ?bandMember a dbo:MusicalArtist ;
              dbo:memberOfBand ?band .
  BIND(?bandMember AS ?professional)

  # Ross Newton's work and actor
  ?work dbo:actor ?actor .
  ?work rdfs:label ?title .
  ?actor rdfs:label ""Ross Newton""@en .

  # Actor's spouse
  ?actor dbo:spouse ?spouse .
}
```",7,10,8,3,3,3,3,71,0,0,1,0,0.0,0
200,9,test,Give me the band member of the band of Revenge (Canadian band) and reference to the name of Angelcorpse.,SELECT ?result WHERE { <http://dbpedia.org/resource/Revenge_(Canadian_band)> <http://dbpedia.org/ontology/associatedMusicalArtist> ?v3 . ?result <http://dbpedia.org/ontology/associatedMusicalArtist> ?v3 . ?result <http://xmlns.com/foaf/0.1/name> ?v1 . <http://dbpedia.org/resource/Angelcorpse> <http://xmlns.com/foaf/0.1/name> ?v1 . },"```sparql
# Query to get band members of Revenge (Canadian Band)
SELECT ?member WHERE {
  ?band rdf:type dbo:MusicalBand .
  ?band rdfs:label ""Revenge (Canadian band)""@en .
  ?band dbo:bandMember ?member .
}

UNION

# Query to get information about Angelcorpse
SELECT ?name WHERE {
  ?angelcorpse rdf:type dbo:MusicalBand .
  ?angelcorpse rdfs:label ""Angelcorpse""@en .
  ?angelcorpse rdfs:label ?name .
}
```",4,4,5,2,2,2,2,9,0,0,1,0,0.0,0
417,70,test,"Give me the child of the child, that is a royalty, of the parent, that is a royalty, of Alexandrine of Mecklenburg-Schwerin and child of the father of the leader, that is a royalty, of Colony of Greenland and spouse of the parent, that is a royalty, of Count Ingolf of Rosenborg.",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/parent> ?v3 . ?result <http://dbpedia.org/ontology/spouse> ?v4 . <http://dbpedia.org/resource/Colony_of_Greenland> <http://dbpedia.org/property/leader> ?v0 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v4 <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Count_Ingolf_of_Rosenborg> . ?v3 <http://dbpedia.org/property/father> ?v1 . ?v0 <http://dbpedia.org/property/father> ?v7 . <http://dbpedia.org/resource/Alexandrine_of_Mecklenburg-Schwerin> <http://dbpedia.org/ontology/parent> ?v1 . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?result <http://dbpedia.org/property/father> ?v7 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. },"```sparql
SELECT ?finalChild WHERE {
  # Alexandrine's royal parent and their royal child
  ?alexParent dbo:parent ?alex .
  ?alex rdfs:label ""Alexandrine of Mecklenburg-Schwerin""@en .
  FILTER (regex(str(?alexParent), ""royalty"", ""i""))
  
  OPTIONAL {
    ?alexChild dbo:childOf ?alexParent .
    FILTER (regex(str(?alexChild), ""royalty"", ""i""))
  }

  # Leader of Colony of Greenland and their father
  ?greenlandLeader rdfs:label ""King Christian X""@en . # Assuming King Christian X as a historical leader
  ?fatherOfGreenlandLeader dbo:parent ?greenlandLeader .
  
  # Parent of Count Ingolf of Rosenborg who is royalty and their spouse
  ?countParent dbo:child ?ingolf .
  ?ingolf rdfs:label ""Count Ingolf of Rosenborg""@en .
  FILTER (regex(str(?countParent), ""royalty"",",8,12,9,3,3,3,3,71,0,0,1,0,0.0,0
507,67,test,"Give me the spouse of Anne V. Coates and director of the movie, that is a movie and a work, with the person born on 1919-06-17 and professional in the profession of the person born on 1966-02-18.","SELECT ?result WHERE { ?v0 <http://dbpedia.org/ontology/birthDate> ""1919-06-17""^^<http://www.w3.org/2001/XMLSchema#date> . ?v6 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Film>. ?v1 <http://dbpedia.org/ontology/birthDate> ""1966-02-18""^^<http://www.w3.org/2001/XMLSchema#date> . ?result <http://dbpedia.org/ontology/spouse> <http://dbpedia.org/resource/Anne_V._Coates> . ?result <http://dbpedia.org/property/occupation> ?v3 . ?v6 <http://dbpedia.org/property/starring> ?v0 . ?v1 <http://dbpedia.org/property/occupation> ?v3 . ?v6 <http://dbpedia.org/ontology/director> ?result . ?v6 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. }","```sparql
SELECT ?spouse ?director WHERE {
  # Find Anne V. Coates' spouse
  ?anneVCoates dbo:spouse ?spouse .
  ?anneVCoates rdfs:label ""Anne V. Coates""@en .

  # Find the director of a movie that is both a Movie and a Work
  ?movie rdf:type dbo:Film ;
         dbo:director ?director .
  
  # Ensure the movie is also classified as a work
  ?movie rdf:type dbo:CreativeWork .

  # Identify person born on 1919-06-17
  ?person1 dbo:birthday ""1919-06-17""^^xsd:date .

  # Find profession of person born on 1966-02-18
  ?person2 dbo:birthday ""1966-02-18""^^xsd:date ;
           dbo:profession ?profession .

  # Match the director's profession with that of the person born in 1966
  ?director dbo:profession ?sameProfession .
  FILTER (?sameProfession = ?profession)
}
```",7,9,8,3,3,3,3,71,0,0,1,0,0.0,0
465,60,test,"Give me the successor of the child of the parent of Ercole II d'Este, Duke of Ferrara and successor of the child, that is a royalty, of the parent of Charles Orlando, Dauphin of France.","SELECT ?result WHERE { ?v2 <http://dbpedia.org/ontology/successor> ?result . ?v2 <http://dbpedia.org/property/father> ?v3 . ?v0 <http://dbpedia.org/ontology/child> ?v1 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v1 <http://dbpedia.org/ontology/successor> ?result . <http://dbpedia.org/resource/Ercole_II_d'Este,_Duke_of_Ferrara> <http://dbpedia.org/ontology/parent> ?v3 . <http://dbpedia.org/resource/Charles_Orlando,_Dauphin_of_France> <http://dbpedia.org/ontology/parent> ?v0 . }","```sparql
SELECT ?finalSuccessor WHERE {
  # Step 1: Find Ercole II d'Este's parent
  ?ercoleII dbo:parent ?parentErcole .
  ?ercoleII rdfs:label ""Ercole II d'Este, Duke of Ferrara""@en .

  # Step 2: Find the child of Ercole II's parent
  ?childOfParentErcole dbo:parent ?parentErcole .

  # Step 3: Determine the successor of this child (must be royalty)
  ?successorChild dbo:succ ?childOfParentErcole .
  FILTER EXISTS { ?successorChild rdf:type dbo:Monarch } 

  # Step 4: Find Charles Orlando's parent
  ?charlesOrlando dbo:parent ?parentCharles .
  ?charlesOrlando rdfs:label ""Charles Orlando, Dauphin of France""@en .

  # Step 5: Find the child of Charles Orlando's parent
  ?childOfParentCharles dbo:parent ?parentCharles .

  # Step 6: Determine the successor of this child (must be royalty)
  ?successorChild2 dbo:succ ?childOfParentCharles .
  FILTER EXISTS { ?successorChild2 rdf:type dbo:Monarch } 

  # Step 7: Find the common successor
  ?finalSuccessor dbo:succ ?successorChild .
  ?finalSuccessor dbo:succ ?successorChild2 .
}
```",6,7,7,3,2,3,3,71,0,0,1,0,0.0,0
495,19,test,Give me the child of the father of William I of Württemberg and father of the child of the parent of Princess Pauline of Württemberg (1810–1856).,SELECT ?result WHERE { ?v4 <http://dbpedia.org/property/father> ?result . ?v4 <http://dbpedia.org/ontology/parent> ?v0 . <http://dbpedia.org/resource/William_I_of_Württemberg> <http://dbpedia.org/property/father> ?v2 . ?result <http://dbpedia.org/property/father> ?v2 . <http://dbpedia.org/resource/Princess_Pauline_of_Württemberg_(1810–1856)> <http://dbpedia.org/ontology/parent> ?v0 . },"```sparql
SELECT ?childOfFather WHERE {
  # Find William I of Württemberg and his father
  ?williamI dbo:parent ?father .
  ?williamI rdfs:label ""William I, Duke of Württemberg""@en .

  # Find the child of William I's father (could be William I or a sibling)
  OPTIONAL {
    ?father dbo:child ?childOfFather .
  }

  # Find Princess Pauline of Württemberg and her parent
  ?pauline dbo:parent ?parentPauline .
  ?pauline rdfs:label ""Princess Pauline of Württemberg""@en .

  # Find the child of Princess Pauline's parent (could be Princess Pauline or a sibling)
  OPTIONAL {
    ?parentPauline dbo:child ?childOfParentPauline .
  }

  # Find the father of the child from step 4
  OPTIONAL {
    ?childOfParentPauline dbo:parent ?fatherOfChild .
  }
}
```",5,5,6,3,2,3,2,20,0,0,1,0,0.0,0
865,71,test,"Give me the native of the residence, that is a country, of the person decedent at Patna and father of the child, that is a politician, of the spouse of Syeda Shahar Banu and father of the child of the father of Abul Maal Abdul Muhith.",SELECT ?result WHERE { ?v5 <http://dbpedia.org/property/father> ?result . ?result <http://dbpedia.org/ontology/birthPlace> ?v2 . ?v5 <http://dbpedia.org/property/father> ?v4 . <http://dbpedia.org/resource/Syeda_Shahar_Banu> <http://dbpedia.org/ontology/spouse> ?v4 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. ?v8 <http://dbpedia.org/property/father> ?result . <http://dbpedia.org/resource/Abul_Maal_Abdul_Muhith> <http://dbpedia.org/property/father> ?v7 . ?v1 <http://dbpedia.org/ontology/deathPlace> <http://dbpedia.org/resource/Patna> . ?v1 <http://dbpedia.org/property/residence> ?v2 . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v8 <http://dbpedia.org/property/father> ?v7 . },"```sparql
SELECT ?nativeCountry WHERE {
  # Step 1: Identify Syeda Shahar Banu's spouse
  ?shaharBanu dbo:spouse ?spouse .
  ?shaharBanu rdfs:label ""Syeda Shahar Banu""@en .

  # Step 2: Find their child who is a politician
  ?spouse dbo:child ?politicianChild .
  ?politicianChild rdf:type dbo:Politician .

  # Step 3: Determine the father of this politician
  ?politicianChild dbo:parent ?fatherOfPolitician .

  # Step 4: Identify Abul Maal Abdul Muhith's father
  ?abulMaal dbo:parent ?fatherAbulMaal .
  ?abulMaal rdfs:label ""Abul Maal Abdul Muhith""@en .

  # Step 5: Find the father of that person (grandfather)
  ?fatherAbulMaal dbo:parent ?grandfather .

  # Step 6: Locate the residence and native country
  ?grandfather dbo:nativeCountry ?nativeCountry .
}
```",9,11,10,3,3,3,3,71,0,0,1,0,0.0,0
892,57,test,"Give me the entity in the administration, that is Italian and a region and a settlement and an administrative region, of Democratic Party (Italy) and entity in Italy and landmark at elevation of the award of the member of E-girls.",SELECT ?result WHERE { ?v0 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Italy>. <http://dbpedia.org/resource/E-girls> <http://dbpedia.org/ontology/bandMember> ?v1 . ?result <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Italy> . ?result <http://dbpedia.org/ontology/elevation> ?v4 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Region>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/AdministrativeRegion>. ?v1 <http://dbpedia.org/property/awards> ?v4 . ?result <http://dbpedia.org/ontology/province> ?v0 . ?v0 <http://dbpedia.org/property/leaderParty> <http://dbpedia.org/resource/Democratic_Party_(Italy)> . },"```sparql
SELECT ?region ?settlement ?landmark WHERE {
  # Find an Italian administrative region associated with the Democratic Party (Italy)
  ?region dbo:country dbr:Italy ;
          a dbo:AdministrativeRegion ;
          dbo:politicalParty dbr:Democratic_Party_(Italy) .

  # Find a settlement within this region
  ?settlement dbo:administrativeRegion ?region ;
              a dbo:Settlement .

  # Find a landmark at a specific elevation related to an award of a member of E-girls
  ?landmark dbo:elevation ?elevation ;
            dbo:location dbr:Italy ;
            dbo:award ?award .
  
  # Link the award to a member of E-girls
  ?member dbo:memberOf dbr:E-girls ;
          dbo:receivedAward ?award .

  FILTER (?elevation > 0) # Assuming elevation is positive and relevant
}
```",6,10,7,3,3,3,3,71,0,0,2,0,0.0,0
433,61,test,"Give me the professional in the profession of the writer of Slowhand at 70 – Live at the Royal Albert Hall and associated musical artist of the associated musical artist, that is an artist and a musical artist, of the associated musical artist, that is a musical artist and an artist, of Ornette Coleman.",SELECT ?result WHERE { ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?v5 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v0 <http://dbpedia.org/ontology/associatedMusicalArtist> ?v5 . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. ?v1 <http://dbpedia.org/property/occupation> ?v3 . <http://dbpedia.org/resource/Slowhand_at_70_–_Live_at_the_Royal_Albert_Hall> <http://dbpedia.org/property/writer> ?v1 . <http://dbpedia.org/resource/Ornette_Coleman> <http://dbpedia.org/ontology/associatedMusicalArtist> ?v0 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?result <http://dbpedia.org/property/occupation> ?v3 . },"```sparql
SELECT ?finalProfessional WHERE {
  # Step 1: Identify the writer of ""Slowhand at 70 – Live at the Royal Albert Hall""
  ?claptonAlbum dbo:title ""Slowhand at 70 – Live at the Royal Albert Hall"" .
  ?claptonAlbum dbo:artist ?ericClapton .
  
  # Step 2: Find associated musical artist of Eric Clapton
  ?ericClapton dbo:associatedMusicalArtist ?associatedArtist1 .

  # Step 3: Determine professional in the profession of this associated musical artist
  ?associatedArtist1 rdf:type ?profession1 .
  ?professional1 rdf:type ?profession1 .

  # Step 4: Identify associated musical artist of Ornette Coleman
  ?ornetteAlbum dbo:artist ""Ornette Coleman"" .
  ?ornetteAlbum dbo:associatedMusicalArtist ?associatedArtist2 .

  # Step 5: Find an artist and musical artist of the associated musical artist from step 4
  ?associatedArtist2 rdf:type ?type1 .
  FILTER (?type1 IN (dbo:Artist, dbo:MusicalArtist))
  ?artistAndMusician rdf:type ?type1 .

  # Step 6: Determine professional in the profession of this final associated musical artist
  ?artistAndMusician rdf:type ?profession2 .
  ?finalProfessional rdf:type ?profession2 .
}
```",6,10,7,3,2,3,3,71,0,0,46,0,0.0,0
281,24,test,"Give me the awardee of the award of Alfred Warden and awardee of the award, that is a military conflict, of Lawrence Moore Cosgrave.",SELECT ?result WHERE { ?result <http://dbpedia.org/property/awards> ?v0 . <http://dbpedia.org/resource/Lawrence_Moore_Cosgrave> <http://dbpedia.org/property/awards> ?v2 . <http://dbpedia.org/resource/Alfred_Warden> <http://dbpedia.org/property/awards> ?v0 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?result <http://dbpedia.org/property/awards> ?v2 . },"```sparql
SELECT ?awardeeOfAlfredWarden ?awardeeOfLawrenceMooreCosgrave WHERE {
  # Find the award received by Alfred Warden
  ?alwarden dbo:awardReceived ?award .
  ?alwarden rdfs:label ""Alfred Warden""@en .

  # Find awardees of that same award
  ?recipient dbo:awardReceived ?award .
  
  # Find the military conflict-related award received by Lawrence Moore Cosgrave
  ?cosgrave dbo:awardReceived ?militaryAward .
  ?cosgrave rdfs:label ""Lawrence Moore Cosgrave""@en .
  FILTER (regex(str(?militaryAward), ""Military"", ""i""))

  # Find awardees of that military conflict-related award
  ?recipient2 dbo:awardReceived ?militaryAward .

  BIND (?recipient AS ?awardeeOfAlfredWarden)
  BIND (?recipient2 AS ?awardeeOfLawrenceMooreCosgrave)
}
```",4,5,5,2,2,2,3,28,0,0,1,0,0.0,0
579,19,test,"Give me the native of the residence, that is English and a settlement, of Alan Clyne and person born as the birth name of the native, that is an office holder, of Edinburgh.",SELECT ?result WHERE { ?result <http://dbpedia.org/property/birthName> ?v4 . ?v2 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/United_Kingdom>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v0 <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Edinburgh> . ?v0 <http://dbpedia.org/property/birthName> ?v4 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. <http://dbpedia.org/resource/Alan_Clyne> <http://dbpedia.org/property/residence> ?v2 . ?result <http://dbpedia.org/ontology/birthPlace> ?v2 . },"```sparql
SELECT ?person WHERE {
  # Step 1: Identify Alan Clyne's residence
  ?alanClyne dbo:residence ?residence .
  ?alanClyne rdfs:label ""Alan Clyne""@en .

  # Ensure the residence is an English settlement
  ?residence dbo:country dbc:England ;
             a dbo:Settlement .

  # Step 2: Identify an office holder from this settlement
  ?officeHolder dbo:nativePlace ?residence ;
               dbo:occupation dbr:Office_holder .
  
  # Get the birth name of this office holder
  ?officeHolder foaf:name ?birthName .

  # Step 3: Find a person with that birth name
  ?person foaf:name ?birthName .
}
```",5,8,6,3,2,3,2,20,0,0,18,0,0.0,0
442,9,test,"Give me the resting place of the actor of This Side of Heaven and resting place of the work of Roosevelt, Theodore.","SELECT ?result WHERE { ?v3 <http://dbpedia.org/ontology/restingPlace> ?result . <http://dbpedia.org/resource/This_Side_of_Heaven> <http://dbpedia.org/ontology/starring> ?v3 . ?v1 <http://dbpedia.org/ontology/restingPlace> ?result . ?v1 <http://dbpedia.org/property/author> ""Roosevelt, Theodore""@en . }","```sparql
# Query to find the resting place of the actor/director of ""This Side of Heaven""
SELECT ?actor ?restingPlace WHERE {
  ?movie dbo:director ?actor .
  ?movie rdfs:label ""This Side of Heaven""@en .
  OPTIONAL { ?actor dbo:deathPlace ?restingPlace . }
}

# Query to find the resting place of a work by Theodore Roosevelt
SELECT ?work ?location WHERE {
  ?theodore dbo:author ?work .
  ?theodore rdfs:label ""Theodore Roosevelt""@en .
  OPTIONAL { ?work dbo:location ?location . }
}
```",4,4,5,2,2,2,2,9,0,0,1,0,0.0,0
41,24,test,"Give me the party of the person born as David Declan Costello and party of the work, that is an office holder, of yes.","SELECT ?result WHERE { ?v1 <http://dbpedia.org/property/author> ""yes""@en . ?v2 <http://dbpedia.org/ontology/party> ?result . ?v1 <http://dbpedia.org/ontology/party> ?result . ?v2 <http://dbpedia.org/property/birthName> ""David Declan Costello""@en . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. }","```sparql
SELECT ?costelloParty ?workParty WHERE {
  # Find the political party of David Declan Costello
  ?costello dbo:birthName ""David Declan Costello""@en .
  ?costello dbo:party ?costelloParty .

  # Find the political party of a work (person) known for being an office holder with association to ""yes""
  OPTIONAL {
    ?work rdfs:label ""David Cameron""@en .
    ?work dbo:officeHolder true .
    ?work dbo:party ?workParty .
  }
}
```",4,5,5,2,2,2,3,28,1,0,0,1.0,1.0,1.0
465,61,test,"Give me the successor of the child, that is a royalty, of the parent of Charles Orlando, Dauphin of France and spouse of the child, that is a royalty, of the parent of Elizabeth of Austria (1526–1545).","SELECT ?result WHERE { ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. <http://dbpedia.org/resource/Charles_Orlando,_Dauphin_of_France> <http://dbpedia.org/ontology/parent> ?v1 . ?v3 <http://dbpedia.org/ontology/successor> ?result . ?v1 <http://dbpedia.org/ontology/child> ?v3 . ?v0 <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Elizabeth_of_Austria_(1526–1545)> . ?v0 <http://dbpedia.org/ontology/child> ?v5 . ?result <http://dbpedia.org/ontology/spouse> ?v5 . }","```sparql
SELECT ?successor WHERE {
  # Find Charles Orlando's parent
  ?charlesOrlando dbo:parent ?parent1 .
  ?charlesOrlando rdfs:label ""Charles Orlando, Dauphin of France""@en .

  # Find a royal child of Charles Orlando's parent
  ?child1 dbo:parent ?parent1 .
  ?child1 rdf:type dbo:Monarch .
  
  # Find Elizabeth of Austria's parent
  ?elizabethOfAustria dbo:parent ?parent2 .
  ?elizabethOfAustria rdfs:label ""Elizabeth of Austria (1526–1545)""@en .

  # Find a royal child of Elizabeth of Austria's parent
  ?child2 dbo:parent ?parent2 .
  ?child2 rdf:type dbo:Monarch .

  # Find the spouse of the royal child from Elizabeth's parent
  ?spouse dbo:spouse ?child2 .

  # Find the successor of the royal child from Charles Orlando's parent
  ?successor dbo:succeededBy ?child1 .
}
```",6,8,7,3,2,3,3,71,0,0,1,0,0.0,0
166,18,test,"Give me the entity in the territory administered, that is a country, from Madrid and resting place of the military force of the force, that is an event and a societal event and a military conflict, of Manuel Hedilla.",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/country> ?v3 . ?v2 <http://dbpedia.org/ontology/battle> ?v1 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?v1 <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Manuel_Hedilla> . ?v2 <http://dbpedia.org/ontology/restingPlace> ?result . ?v3 <http://dbpedia.org/ontology/capital> <http://dbpedia.org/resource/Madrid> . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. },"```sparql
SELECT ?country WHERE {
  # Find territory administered by Madrid that is a country
  ?territory dbo:administrativeTerritoryOf dbr:Madrid .
  ?territory rdf:type dbo:Country .

  # Identify military force related to Manuel Hedilla
  ?hedilla dbo:militaryForce ?force .
  ?hedilla rdfs:label ""Manuel Hedilla""@en .
  
  # Ensure the force is an event, societal event, and military conflict
  ?force rdf:type dbo:Event ;
         rdf:type dbo:SocietalEvent ;
         rdf:type dbo:MilitaryConflict .

  # Find resting place of this military force
  ?force dbo:restingPlace ?country .
}
```",5,9,6,3,2,3,2,20,0,0,4,0,0.0,0
582,61,test,"Give me the figure known as the nickname of the team, that is an organisation, of Hajime Moriyasu and player in the father, that is an athlete and a soccer manager and a sports manager, of the child of Kazuaki Nagasawa.",SELECT ?result WHERE { ?v1 <http://dbpedia.org/property/nickname> ?v3 . ?v0 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Kazuaki_Nagasawa> . ?result <http://dbpedia.org/property/nickname> ?v3 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?v1 <http://dbpedia.org/ontology/coach> <http://dbpedia.org/resource/Hajime_Moriyasu> . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Athlete>. ?v5 <http://dbpedia.org/ontology/team> ?result . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsManager>. ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerManager>. ?v0 <http://dbpedia.org/property/father> ?v5 . },"```sparql
SELECT ?nickname ?father WHERE {
  # Find team managed by Hajime Moriyasu
  ?team dbo:manager ?hajimeMoriyasu .
  ?hajimeMoriyasu rdfs:label ""Hajime Moriyasu""@en .

  # Get the nickname of the team
  ?team dbo:nickname ?nickname .

  # Find Kazuaki Nagasawa's child who is an athlete and soccer manager
  ?kazuakiNagasawa dbo:child ?child .
  ?kazuakiNagasawa rdfs:label ""Kazuaki Nagasawa""@en .
  
  OPTIONAL {
    ?child rdf:type dbo:Athlete ;
           dbo:sportManager ?managerRole .
  }

  # Find the father of this child who is a player and sports manager
  ?child dbo:parent ?father .
  ?father rdf:type dbo:SoccerPlayer, dbo:SportsManager .
}
```",6,10,7,3,2,3,3,71,0,0,1,0,0.0,0
216,56,test,"Give me the team of the person born, that is a sports manager and a soccer manager and a soccer player, on the death of Pavel Vezhinov and player in the coach of Croatia national under-21 football team and player in Mario Ivanković.",SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerPlayer>. <http://dbpedia.org/resource/Mario_Ivanković> <http://dbpedia.org/ontology/team> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsManager>. ?v2 <http://dbpedia.org/ontology/team> ?result . ?v1 <http://dbpedia.org/ontology/birthDate> ?v0 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerManager>. <http://dbpedia.org/resource/Croatia_national_under-21_football_team> <http://dbpedia.org/ontology/coach> ?v2 . ?result <http://dbpedia.org/ontology/coach> ?v1 . <http://dbpedia.org/resource/Pavel_Vezhinov> <http://dbpedia.org/ontology/deathDate> ?v0 . },"```sparql
SELECT ?person ?team WHERE {
  # Find Pavel Vezhinov's death date
  ?vezhinov dbo:deathDate ?deathDate .
  ?vezhinov rdfs:label ""Pavel Vezhinov""@en .

  # Find a person born on the same date as Pavel Vezhinov's death
  ?person dbo:birthDate ?birthDate .
  FILTER (?birthDate = ?deathDate)

  # Ensure this person is a sports manager, soccer manager, and soccer player
  ?person dbo:occupation ?occupation1 .
  ?person dbo:occupation ?occupation2 .
  ?person dbo:occupation ?occupation3 .

  VALUES ?occupation1 { ""sports manager""@en }
  VALUES ?occupation2 { ""soccer manager""@en }
  VALUES ?occupation3 { ""soccer player""@en }

  # Find the team associated with this person when they were coach of Croatia national under-21 football team
  OPTIONAL {
    ?person dbo:coachOf ?croatiaTeam .
    ?croatiaTeam rdfs:label ""Croatia national under-21 football team""@en .
    ?croatiaTeam dbo:member ?team .
  }

  # Find association with Mario Ivanković
  OPTIONAL {
    ?person dbo:associatedWith ?marioIvankovic .
    ?marioIvankovic rdfs:label ""Mario Ivanković""@en .
  }
}
```",6,9,7,3,3,3,3,71,0,0,1,0,0.0,0
433,60,test,"Give me the professional in the profession of the writer of Slowhand at 70 – Live at the Royal Albert Hall and associated musical artist of the person born, that is a musical artist and an artist, as the persona of Paul Chambers.",SELECT ?result WHERE { ?v0 <http://dbpedia.org/property/occupation> ?v1 . ?v2 <http://dbpedia.org/property/birthName> ?v3 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?result <http://dbpedia.org/property/occupation> ?v1 . ?v2 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . <http://dbpedia.org/resource/Paul_Chambers> <http://xmlns.com/foaf/0.1/givenName> ?v3 . <http://dbpedia.org/resource/Slowhand_at_70_–_Live_at_the_Royal_Albert_Hall> <http://dbpedia.org/property/writer> ?v0 . },"```sparql
SELECT ?professional WHERE {
  # Identify Eric Clapton as the writer of ""Slowhand at 70 – Live at the Royal Albert Hall""
  ?album dbo:artist ?clapton .
  ?clapton rdfs:label ""Eric Clapton""@en .
  ?album rdfs:label ""Slowhand at 70 – Live at the Royal Albert Hall""@en .

  # Identify Jack Bruce as an associated musical artist and artist
  OPTIONAL {
    ?clapton dbo:associatedMusicalArtist ?jackBruce .
    ?jackBruce rdfs:label ""Jack Bruce""@en .
    FILTER EXISTS { ?jackBruce dbo:profession dbr:Musician }
    FILTER EXISTS { ?jackBruce dbo:profession dbr:Artist }
  }

  # Find the professional in the profession of Eric Clapton
  OPTIONAL {
    ?clapton dbo:profession ?professional .
    FILTER (regex(str(?professional), ""Writer"", ""i""))
  }
}
```",6,8,7,3,2,3,3,71,0,0,16,0,0.0,0
715,71,test,"Give me the commander in the force, that is a military conflict, of the native of Morocco and commander in the force of the mayor, that is an office holder and a politician and a president, of 1933 Spanish general election and leader of the office, that is a government agency and an organisation, of the reference to Carlos Franco Iribarnegaray.","SELECT ?result WHERE { ?v5 <http://dbpedia.org/ontology/commander> ?result . ?v2 <http://dbpedia.org/ontology/commander> ?v1 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v5 <http://dbpedia.org/ontology/commander> ?v4 . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/President>. ?v7 <http://xmlns.com/foaf/0.1/name> ""Carlos Franco Iribarnegaray""@en . ?v8 <http://dbpedia.org/ontology/leader> ?result . ?v8 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?v7 <http://dbpedia.org/property/office> ?v8 . ?v8 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/GovernmentAgency>. ?v1 <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Morocco> . <http://dbpedia.org/resource/1933_Spanish_general_election> <http://dbpedia.org/property/leader> ?v4 . ?v2 <http://dbpedia.org/ontology/commander> ?result . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. }","```sparql
SELECT ?commander WHERE {
  # Step 1: Identify a native of Morocco who is a military commander
  ?person dbo:nationality dbr:Morocco .
  ?person dbo:militaryCommanderOf ?conflict .

  # Step 2: Find the mayor from the 1933 Spanish general election
  ?mayor dbo:officeHolder ""Mayor""@en ;
         dbo:election ""Spanish general election, 1933""@en ;
         dbo:positionTitle ""President""@en .
  
  # Step 3: Ensure the commander is also a commander in the force involving this mayor
  ?person dbo:militaryCommanderOf ?mayor .

  # Step 4: Identify the leader of an office related to Carlos Franco Iribarnegaray
  ?office dbo:leader ?commander .
  ?office dbo:reference dbr:Claudio_Franco_Iribarnegaray .

  # Ensure all conditions are met for the same person
  FILTER (?person = ?commander)
}
```",9,15,10,3,3,3,3,71,0,0,1,0,0.0,0
433,71,test,"Give me the associated musical artist of the person born, that is a musical artist and an artist, as the persona of Paul Chambers and professional in the profession of the writer of Slowhand at 70 – Live at the Royal Albert Hall and associated musical artist of the associated musical artist, that is an artist and a musical artist, of the associated musical artist, that is a musical artist and an artist, of Ornette Coleman.",SELECT ?result WHERE { ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?v5 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v7 <http://dbpedia.org/property/occupation> ?v8 . ?v4 <http://dbpedia.org/ontology/associatedMusicalArtist> ?v5 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. <http://dbpedia.org/resource/Slowhand_at_70_–_Live_at_the_Royal_Albert_Hall> <http://dbpedia.org/property/writer> ?v7 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. ?v2 <http://dbpedia.org/property/birthName> ?v1 . <http://dbpedia.org/resource/Ornette_Coleman> <http://dbpedia.org/ontology/associatedMusicalArtist> ?v4 . ?v2 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?result <http://dbpedia.org/property/occupation> ?v8 . <http://dbpedia.org/resource/Paul_Chambers> <http://xmlns.com/foaf/0.1/givenName> ?v1 . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. },"```sparql
SELECT DISTINCT ?associatedArtist WHERE {
  # Step 1: Identify Paul Chambers' associated musical artists who are also visual artists
  ?paulChambers dbo:birthDate ?date .
  ?paulChambers rdfs:label ""Paul Chambers""@en .
  ?paulChambers dbo:associatedMusicalArtist ?artist1 .
  ?artist1 rdf:type dbo:Musician ;
           dbo:occupation ?occupation1 .
  FILTER (CONTAINS(LCASE(?occupation1), ""visual artist""))

  # Step 2: Identify Eric Clapton's associated musical artists
  ?ericClapton dbo:profession ?profession .
  ?ericClapton rdfs:label ""Eric Clapton""@en .
  ?ericClapton dbo:associatedMusicalArtist ?artist2 .

  # Step 3: Identify Ornette Coleman's associated musical artists
  ?ornetteColeman dbo:associatedMusicalArtist ?artist3 .
  ?ornetteColeman rdfs:label ""Ornette Coleman""@en .

  # Find the common associated artist among these entities
  OPTIONAL { ?artist2 dbo:associatedMusicalArtist ?commonArtist . }
  OPTIONAL { ?artist3 dbo:associatedMusicalArtist ?commonArtist . }

  FILTER (?artist1 = ?commonArtist || ?artist2 = ?commonArtist || ?artist3 = ?commonArtist)
}
```",9,15,10,3,3,3,3,71,0,0,4,0,0.0,0
987,58,test,"Give me the birth place of Dado Polumenta and birth place of the actor of All for Free and entity in the region, that is a country, of the time zone, that is a sports event, in Canicosa de la Sierra.",SELECT ?result WHERE { ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsEvent>. ?result <http://dbpedia.org/ontology/country> ?v0 . ?v5 <http://dbpedia.org/ontology/birthPlace> ?result . <http://dbpedia.org/resource/Dado_Polumenta> <http://dbpedia.org/ontology/birthPlace> ?result . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. <http://dbpedia.org/resource/All_for_Free> <http://dbpedia.org/property/starring> ?v5 . <http://dbpedia.org/resource/Canicosa_de_la_Sierra> <http://dbpedia.org/ontology/timeZone> ?v4 . ?v0 <http://dbpedia.org/property/timeZone> ?v4 . },"```sparql
# Query for Dado Polumenta's birthplace
SELECT ?birthPlace WHERE {
  ?person rdfs:label ""Dado Povlevitch""@en .
  ?person dbo:birthPlace ?birthPlace .
}

# Query for the actor of ""All for Free"" and their birthplace
SELECT ?actorBirthPlace WHERE {
  ?film rdfs:label ""All for Free""@en .
  ?film dbo:starring ?actor .
  ?actor dbo:birthPlace ?actorBirthPlace .
}

# Query for a country in the region of Canicosa de la Sierra's time zone
SELECT ?country WHERE {
  ?location rdfs:label ""Canicosa de la Sierra""@en .
  ?location dbo:timeZone ?timeZone .

  ?event dbo:timeZone ?timeZone ;
         a dbo:SportsEvent .

  ?region dbo:country ?country .
  ?region dbo:timeZone ?timeZone .
}
```",6,8,7,3,3,3,3,71,0,0,1,0,0.0,0
606,19,test,"Give me the figure known as the nickname of DeKalb, Illinois and birthplace of the alumnus of the figure known, that is a university and a sports league and an educational institution, as Penn Quakers.","SELECT ?result WHERE { ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/EducationalInstitution>. <http://dbpedia.org/resource/DeKalb,_Illinois> <http://dbpedia.org/property/nickname> ?v2 . ?v0 <http://dbpedia.org/property/nickname> <http://dbpedia.org/resource/Penn_Quakers> . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/University>. ?result <http://dbpedia.org/property/nickname> ?v2 . ?v4 <http://dbpedia.org/ontology/almaMater> ?v0 . ?v4 <http://dbpedia.org/ontology/birthPlace> ?result . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsLeague>. }","```sparql
SELECT ?birthPlace WHERE {
  # Find DeKalb, Illinois and its nickname
  ?dekalb dbo:officialName ""DeKalb, Illinois""@en .
  OPTIONAL { 
    ?dekalb dbo:nickname ?nickname .
  }
  
  # Identify the notable alumnus associated with this nickname
  OPTIONAL {
    ?alumnus dbo:almaMater <http://dbpedia.org/resource/University_of_Pennsylvania> ;
             dbo:birthPlace ?birthPlace .
    FILTER (regex(str(?dekalb), str(?nickname)))
  }
}
```",5,8,6,3,2,3,2,20,0,0,1,0,0.0,0
507,58,test,"Give me the director of the movie, that is a movie and a work, with Beryl Reid and spouse of Anne V. Coates and professional in the profession of the person born on 1966-02-18.","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/spouse> <http://dbpedia.org/resource/Anne_V._Coates> . ?v1 <http://dbpedia.org/property/occupation> ?v2 . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?v5 <http://dbpedia.org/ontology/director> ?result . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Film>. ?result <http://dbpedia.org/property/occupation> ?v2 . ?v5 <http://dbpedia.org/property/starring> <http://dbpedia.org/resource/Beryl_Reid> . ?v1 <http://dbpedia.org/ontology/birthDate> ""1966-02-18""^^<http://www.w3.org/2001/XMLSchema#date> . }","```sparql
SELECT ?director WHERE {
  # Step 1: Find movies featuring Beryl Reid
  ?movie dbo:starring ?actor .
  ?actor rdfs:label ""Beryl Reid""@en .

  # Step 2: Ensure the movie is classified as a work
  ?movie rdf:type dbp:Film .
  
  # Step 3: Identify Anne V. Coates' spouse
  ?anneVCoates dbo:spouse ?spouse .
  ?anneVCoates rdfs:label ""Anne V. Coates""@en .

  # Step 4: Determine the profession of the person born on 1966-02-18
  ?person dbo:birthday ""1966-02-18""^^xsd:date .
  ?person dbo:occupation ?profession .

  # Step 5: Find a director who is professional in this identified profession and directed the movie
  ?movie dbo:director ?director .
  ?director dbo:occupation ?sameProfession .
  
  FILTER (?spouse = ?director && ?sameProfession = ?profession)
}
```",6,8,7,3,3,3,3,71,0,0,1,0,0.0,0
417,58,test,"Give me the child of the child, that is a royalty, of the parent, that is a royalty, of Alexandrine of Mecklenburg-Schwerin and child of the father of Frederick IX of Denmark and spouse of Princess Caroline-Mathilde of Denmark.",SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. <http://dbpedia.org/resource/Frederick_IX_of_Denmark> <http://dbpedia.org/property/father> ?v5 . <http://dbpedia.org/resource/Alexandrine_of_Mecklenburg-Schwerin> <http://dbpedia.org/ontology/parent> ?v1 . ?v2 <http://dbpedia.org/property/father> ?v1 . ?result <http://dbpedia.org/ontology/parent> ?v2 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?result <http://dbpedia.org/property/father> ?v5 . ?result <http://dbpedia.org/ontology/spouse> <http://dbpedia.org/resource/Princess_Caroline-Mathilde_of_Denmark> . },"```sparql
SELECT ?finalChild WHERE {
  # Step 1: Find the parent of Alexandrine of Mecklenburg-Schwerin who is royalty
  ?alexandrine dbo:parent ?parent .
  ?alexandrine rdfs:label ""Alexandrine of Mecklenburg-Schwerin""@en .

  # Ensure the parent is royalty (e.g., by checking their title or type)
  OPTIONAL { 
    ?parent rdf:type dbo:Monarch .
  }

  # Step 2: Find the child of this royal parent
  ?parent dbo:child ?royalChild .
  
  # Step 3: Identify the father of Frederick IX of Denmark
  ?frederickIX dbo:father ?fatherFrederickIX .
  ?frederickIX rdfs:label ""Frederick IX of Denmark""@en .

  # Step 4: Find the spouse of Princess Caroline-Mathilde of Denmark
  ?carolineMathilde dbo:spouse ?spouseCarolineMathilde .
  ?carolineMathilde rdfs:label ""Princess Caroline-Mathilde of Denmark""@en .

  # Step 5: Find the child of the royal child identified in step 2
  ?royalChild dbo:child ?finalChild .
}
```",6,8,7,3,3,3,3,71,0,0,1,0,0.0,0
865,57,test,"Give me the native of British Raj and father of the child, that is a politician, of the spouse of Syeda Shahar Banu and father of the child of Abu Ahmad Abdul Hafiz.",SELECT ?result WHERE { ?v4 <http://dbpedia.org/property/father> ?v1 . ?v3 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Abu_Ahmad_Abdul_Hafiz> . ?v4 <http://dbpedia.org/property/father> ?result . ?v3 <http://dbpedia.org/property/father> ?result . ?result <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/British_Raj> . <http://dbpedia.org/resource/Syeda_Shahar_Banu> <http://dbpedia.org/ontology/spouse> ?v1 . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. },"```sparql
SELECT ?father WHERE {
  # Syeda Shahar Banu's spouse
  ?shaharBanu dbo:spouse ?spouse .
  ?shaharBanu rdfs:label ""Syeda Shahar Banu""@en .

  # Child of the spouse who is a politician
  OPTIONAL { 
    ?spouse dbo:child ?politicianChild .
    ?politicianChild dbo:occupation ""Politician"" .
  }

  # Father of the politician child
  OPTIONAL {
    ?politicianChild dbo:parent ?father1 .
  }
  
  # Abu Ahmad Abdul Hafiz and his child's father
  ?hafiz rdfs:label ""Abu Ahmad Abdul Hafiz""@en .
  OPTIONAL { 
    ?hafiz dbo:child ?childHafiz .
  }

  # Father of the child of Abu Ahmad Abdul Hafiz
  OPTIONAL {
    ?childHafiz dbo:parent ?father2 .
  }
  
  # Check if either father is native to British Raj
  FILTER (
    EXISTS { 
      ?father1 dbo:nativePlace ?nativePlace1 .
      ?nativePlace1 rdfs:label ""British Raj""@en .
    } ||
    EXISTS {
      ?father2 dbo:nativePlace ?nativePlace2 .
      ?nativePlace2 rdfs:label ""British Raj""@en .
    }
  )
}
```",6,7,7,3,3,3,3,71,0,0,1,0,0.0,0
933,71,test,"Give me the reference to the birth name of the professional in Musician and band of the band, that is a group and a band and an organisation, of the person born, that is a musical artist, on 1947-04-21 and band of the band of the band, that is an artist and a musical artist, of The Ramong Sound.","SELECT ?result WHERE { <http://dbpedia.org/resource/The_Ramong_Sound> <http://dbpedia.org/ontology/associatedMusicalArtist> ?v1 . ?v8 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v8 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?v4 <http://dbpedia.org/property/birthName> ?v5 . ?v7 <http://dbpedia.org/ontology/associatedMusicalArtist> ?v8 . ?v8 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Group>. ?v4 <http://dbpedia.org/property/occupation> <http://dbpedia.org/resource/Musician> . ?v1 <http://dbpedia.org/ontology/associatedMusicalArtist> ?v2 . ?v7 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?v8 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Band>. ?v2 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v7 <http://dbpedia.org/ontology/birthDate> ""1947-04-21""^^<http://www.w3.org/2001/XMLSchema#date> . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. ?result <http://xmlns.com/foaf/0.1/name> ?v5 . }","```sparql
SELECT ?birthName WHERE {
  # Find a person who is a musical artist and was born on April 21, 1947
  ?person dbo:birthDate ?date .
  ?person dbo:occupation dbp:musician .
  FILTER (YEAR(?date) = 1947 && MONTH(?date) = 4 && DAY(?date) = 21)

  # Find bands associated with this person that are both a group and an organization
  ?band dbo:member ?person .
  ?band rdf:type dbp:Band .
  ?band rdf:type dbp:MusicalGroup .

  # Ensure the band is ""The Ramones""
  ?band rdfs:label ""Ramones""@en .

  # Find the birth name of any musician in this band
  OPTIONAL {
    ?musician dbo:birthName ?birthName .
    ?musician dbo:member ?band .
  }
}
```",9,15,10,3,3,3,3,71,0,0,1,0,0.0,0
826,58,test,"Give me the predecessor of the parent of the child of Louis IV, Grand Duke of Hesse and spouse of Anna Magdalena Appel and successor of the child, that is a royalty, of Louis I, Grand Duke of Hesse.","SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/parent> <http://dbpedia.org/resource/Louis_IV,_Grand_Duke_of_Hesse> . ?result <http://dbpedia.org/ontology/successor> ?v2 . <http://dbpedia.org/resource/Louis_I,_Grand_Duke_of_Hesse> <http://dbpedia.org/ontology/child> ?v5 . ?v1 <http://dbpedia.org/ontology/parent> ?v2 . ?v5 <http://dbpedia.org/ontology/successor> ?result . <http://dbpedia.org/resource/Anna_Magdalena_Appel> <http://dbpedia.org/ontology/spouse> ?result . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. }","```sparql
SELECT ?result WHERE {
  # Find the child of Louis IV, Grand Duke of Hesse and Anna Magdalena Appel
  ?child dbo:parent ?parent .
  ?parent rdfs:label ""Louis IV, Grand Duke of Hesse""@en .
  
  # Find the predecessor of this parent
  ?predecessor dbo:successor ?parent .

  # Find the child of Louis I who is royalty
  ?royalChild dbo:childOf ?louisI .
  ?louisI rdfs:label ""Louis I, Grand Duke of Hesse""@en .
  
  # Ensure the royal child is a royalty
  FILTER (regex(str(?royalChild), ""Royal"", ""i""))

  # Find the successor of this royal child
  ?successor dbo:predecessor ?royalChild .

  # Return the result as the intersection of predecessor and successor
  BIND(CONCAT(""Predecessor: "", STR(?predecessor), ""; Successor: "", STR(?successor)) AS ?result)
}
```",6,7,7,3,3,3,3,71,0,0,1,0,0.0,0
976,67,test,"Give me the office of the person born as the birth name of Naci Bostancı and office of Mustafa Şentop and office of the mayor, that is a politician and an office holder and Turkish, of the reference, that is an organisation and a political party and Turkish, to Millet İttifakı.","SELECT ?result WHERE { <http://dbpedia.org/resource/Naci_Bostancı> <http://dbpedia.org/property/birthName> ?v4 . <http://dbpedia.org/resource/Mustafa_Şentop> <http://dbpedia.org/property/office> ?result . ?v0 <http://dbpedia.org/property/office> ?result . ?v1 <http://xmlns.com/foaf/0.1/name> ""Millet İttifakı""@en . ?v5 <http://dbpedia.org/property/office> ?result . ?v1 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Turkey>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/PoliticalParty>. ?v0 <http://dbpedia.org/property/birthName> ?v4 . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v1 <http://dbpedia.org/property/leader> ?v5 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v5 <http://dbpedia.org/ontology/nationality> <http://dbpedia.org/resource/Turkey>. }","```sparql
SELECT ?naciOffice ?mustafaOffice ?mayorOffice WHERE {
  # Find Naci Bostancı's birth name
  ?naci dbo:birthName ?birthName .
  ?naci rdfs:label ""Naci Bostancı""@en .

  # Find the office of the person with that birth name
  OPTIONAL { 
    ?person dbo:birthName ?birthName .
    ?person dbo:office ?naciOffice .
  }

  # Find Mustafa Şentop's office
  ?mustafa rdfs:label ""Mustafa Şentop""@en .
  ?mustafa dbo:office ?mustafaOffice .

  # Find Millet İttifakı and the mayor associated with it
  ?party rdfs:label ""Millet İttifakı""@tr .
  ?mayor dbo:memberOf ?party ;
         dbo:office ?mayorOffice ;
         dbo:nationality dbr:Turkey ;
         rdf:type dbo:Politician .

}
```",7,13,8,3,3,3,3,71,0,0,1,0,0.0,0
445,59,test,"Give me the death place of the awardee of the establishment of 1820-03-10 and entity in the residence, that is a country, of the resident, that is an athlete, of Great Britain.","SELECT ?result WHERE { ?v0 <http://dbpedia.org/ontology/foundingDate> ""1820-03-10""^^<http://www.w3.org/2001/XMLSchema#date> . ?v3 <http://dbpedia.org/property/residence> <http://dbpedia.org/resource/Great_Britain> . ?result <http://dbpedia.org/ontology/location> ?v2 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Athlete>. ?v3 <http://dbpedia.org/property/residence> ?v2 . ?v5 <http://dbpedia.org/ontology/deathPlace> ?result . ?v5 <http://dbpedia.org/property/awards> ?v0 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. }","```sparql
SELECT ?deathPlace ?country WHERE {
  # Step 1: Find the awardee established on 1820-03-10
  ?awardee dbo:dateEstablished ""1820-03-10""^^xsd:date .
  
  # Step 2: Get the death place of this awardee
  OPTIONAL { 
    ?awardee dbo:deathPlace ?deathPlace .
  }
  
  # Step 3: Find a resident athlete from Great Britain
  ?athlete dbo:nationality dbr:United_Kingdom ;
           dbo:sportType ?sportType .
  
  # Step 4: Get the country of residence for this athlete
  OPTIONAL {
    ?athlete dbo:residence ?residence .
    ?residence rdf:type dbo:Country .
    ?residence rdfs:label ?country .
  }
}
```",6,8,7,3,2,3,3,71,0,0,1,0,0.0,0
888,18,test,"Give me the awardee of the award of Oleksandr Syrskyi and commander in the force, that is a societal event and an event, of the military force of War in Donbas (2014–2022).",SELECT ?result WHERE { ?v2 <http://dbpedia.org/ontology/commander> ?v1 . ?v2 <http://dbpedia.org/ontology/commander> ?result . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?result <http://dbpedia.org/property/awards> ?v3 . <http://dbpedia.org/resource/Oleksandr_Syrskyi> <http://dbpedia.org/property/awards> ?v3 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?v1 <http://dbpedia.org/ontology/battle> <http://dbpedia.org/resource/War_in_Donbas_(2014–2022)> . },"```sparql
SELECT ?awardee ?commander WHERE {
  # Find Oleksandr Syrskyi and his award
  ?oleksandrSyd rdfs:label ""Oleksandr Syrskyi""@en .
  ?oleksandrSyd dbo:award ?awardee .

  # Identify the force related to War in Donbas (2014–2022)
  ?warInDonbas dbo:participatedIn ?force .
  ?warInDonbas rdfs:label ""War in Donbas (2014–2022)""@en .
  
  # Ensure the force is a societal event and an event
  ?force rdf:type dbpedia-owl:SocietalEvent ;
         rdf:type dbpedia-owl:Event .

  # Find Oleksandr Syrskyi's role as commander in this force
  ?oleksandrSyd dbo:commanderOf ?commander .
  FILTER (?commander = ?force)
}
```",5,7,6,3,2,3,2,20,0,0,2,0,0.0,0
443,24,test,"Give me the birthplace of the person born, that is a musical artist and an artist, on 1949-11-20 and birthplace of the work of yes.","SELECT ?result WHERE { ?v2 <http://dbpedia.org/ontology/birthPlace> ?result . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?v1 <http://dbpedia.org/ontology/birthPlace> ?result . ?v2 <http://dbpedia.org/ontology/birthDate> ""1949-11-20""^^<http://www.w3.org/2001/XMLSchema#date> . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. ?v1 <http://dbpedia.org/property/author> ""yes""@en . }","```sparql
# Query to find the birthplace of the person born on 1949-11-20 who is both a musical artist and an artist
SELECT ?birthPlace WHERE {
  ?person dbo:birthDate ""1949-11-20""^^xsd:date ;
          dbo:occupation ?occupation .
  FILTER (
    (CONTAINS(LCASE(str(?occupation)), ""musical artist"") || CONTAINS(LCASE(str(?occupation)), ""artist"")) &&
    EXISTS { ?person dbo:birthPlace ?birthPlace }
  )
}

# Query to find the birthplace of a notable work by Yes
SELECT ?workBirthPlace WHERE {
  ?album dbo:performer ?band .
  ?band rdfs:label ""Yes""@en .
  OPTIONAL { 
    ?album dbo:productionLocation ?workBirthPlace .
  }
}
```",4,6,5,2,2,2,3,28,0,0,2,0,0.0,0
341,9,test,"Give me the band member of the awardee of List of awards and nominations received by Beyoncé and writer of the work, that is a work and an album, of Serrano.","SELECT ?result WHERE { ?v3 <http://dbpedia.org/property/writer> ?result . ?result <http://dbpedia.org/ontology/associatedMusicalArtist> ?v1 . ?v1 <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/List_of_awards_and_nominations_received_by_Beyoncé> . ?v3 <http://dbpedia.org/property/writer> ""Serrano""@en . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Album>. }","```sparql
SELECT ?bandMember WHERE {
  # Find an award related to Beyoncé
  ?award dbo:recipient dbr:Beyoncé .
  
  # Find a work by José Antonio Serrano that is also an album
  ?work dbo:author dbr:José_Antonio_Serrano ;
        rdf:type dbo:Album .

  # Identify any band member associated with the awardee of the award and the work
  OPTIONAL {
    ?bandMember dbo:memberOf ?awardRecipientBand .
    ?awardRecipientBand dbo:recipient dbr:Beyoncé .
    ?work dbo:contributor ?bandMember .
  }
}
```",4,6,5,2,2,2,2,9,0,0,1,0,0.0,0
465,64,test,"Give me the spouse of Archduchess Barbara of Austria and successor of the child of the parent of Ercole II d'Este, Duke of Ferrara and successor of the child, that is a royalty, of the parent of Charles Orlando, Dauphin of France.","SELECT ?result WHERE { ?v2 <http://dbpedia.org/property/father> ?v3 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. <http://dbpedia.org/resource/Ercole_II_d'Este,_Duke_of_Ferrara> <http://dbpedia.org/ontology/parent> ?v3 . ?v0 <http://dbpedia.org/ontology/child> ?v1 . ?v2 <http://dbpedia.org/ontology/successor> ?result . <http://dbpedia.org/resource/Charles_Orlando,_Dauphin_of_France> <http://dbpedia.org/ontology/parent> ?v0 . ?v1 <http://dbpedia.org/ontology/successor> ?result . ?result <http://dbpedia.org/ontology/spouse> <http://dbpedia.org/resource/Archduchess_Barbara_of_Austria> . }","```sparql
SELECT ?spouseOfBarbara ?successorErcoleChild ?royalSuccessorCharlesChild WHERE {
  # Spouse of Archduchess Barbara of Austria
  ?barbara dbo:spouse ?spouseOfBarbara .
  ?barbara rdfs:label ""Archduchess Barbara of Austria""@en .

  # Ercole II d'Este's parent and successor of his child
  ?ercoleParent dbo:child ?ercoleII .
  ?ercoleII rdfs:label ""Ercole II d'Este, Duke of Ferrara""@en .
  ?ercoleChild dbo:parent ?ercoleII .
  ?successorErcoleChild dbo:predecessorOrSuccessorOf ?ercoleChild .

  # Charles Orlando's parent and royal successor of his child
  ?charlesParent dbo:child ?charlesOrlando .
  ?charlesOrlando rdfs:label ""Charles Orlando, Dauphin of France""@en .
  ?charlesChild dbo:parent ?charlesOrlando .
  ?royalSuccessorCharlesChild dbo:predecessorOrSuccessorOf ?charlesChild .
  FILTER (regex(str(?royalSuccessorCharlesChild), ""Royal"", ""i""))
}
```",7,8,8,3,3,3,3,71,0,0,1,0,0.0,0
926,62,test,Give me the father of the father of the spouse of Neşerek Kadın and child of Ahmed III and successor of the child of the spouse of Şermi Kadın.,SELECT ?result WHERE { ?v5 <http://dbpedia.org/property/father> ?v1 . ?v2 <http://dbpedia.org/property/father> ?result . <http://dbpedia.org/resource/Ahmed_III> <http://dbpedia.org/ontology/child> ?result . ?v5 <http://dbpedia.org/ontology/successor> ?result . <http://dbpedia.org/resource/Neşerek_Kadın> <http://dbpedia.org/ontology/spouse> ?v4 . ?v4 <http://dbpedia.org/property/father> ?v2 . ?v1 <http://dbpedia.org/ontology/spouse> <http://dbpedia.org/resource/Şermi_Kadın> . },"```sparql
SELECT ?father WHERE {
  # Step 1: Identify Neşerek Kadın's spouse
  ?neSerekKadin dbo:spouse ?spouse .
  ?neSerekKadin rdfs:label ""Neşere Kadın""@en .

  # Step 2: Find the father of Neşerek Kadın's spouse
  ?spouse dbo:parent ?fatherOfSpouse .

  # Step 3: Identify a child of Ahmed III who is also a successor
  ?ahmedIII dbo:child ?successor .
  ?ahmedIII rdfs:label ""Ahmed III""@en .
  
  # Step 4: Determine the spouse of Şermi Kadın and her child
  ?sermiKadin dbo:spouse ?spouseOfSerMi .
  ?sermiKadin rdfs:label ""Şermi Kadın""@en .
  ?spouseOfSerMi dbo:child ?childOfSpouse .

  # Step 5: Find the successor of Şermi Kadın's child
  ?childOfSpouse dbo:succeededBy ?successor .

  # Step 6: Identify the father of Ahmed III's child (the successor)
  ?successor dbo:parent ?father .
}
```",7,7,8,3,3,3,3,71,0,0,1,0,0.0,0
83,8,test,"Give me the player in Greg Boehme and player in the person born, that is an athlete, on 1991-11-19.","SELECT ?result WHERE { ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Athlete>. ?v2 <http://dbpedia.org/ontology/team> ?result . <http://dbpedia.org/resource/Greg_Boehme> <http://dbpedia.org/ontology/team> ?result . ?v2 <http://dbpedia.org/ontology/birthDate> ""1991-11-19""^^<http://www.w3.org/2001/XMLSchema#date> . }","```sparql
SELECT ?gregBoehmePlayerRole ?athletePlayerRole WHERE {
  # Find Greg Boehme's player role
  ?gregBoehme dbo:birthName ""Greg Boehme"" .
  ?gregBoehme dbo:role ?gregBoehmePlayerRole .

  # Find the athlete born on 1991-11-19 and their player role
  ?athlete dbo:birthday ""1991-11-19""^^xsd:date ;
           rdf:type dbo:Athlete .
  ?athlete dbo:role ?athletePlayerRole .
}
```",3,4,4,2,2,2,2,9,0,0,1,0,0.0,0
102,19,test,"Give me the native of the residence, that is English and a settlement, of the resident, that is an athlete, of Dewsbury and manager of the player in Ellie Roebuck.",SELECT ?result WHERE { <http://dbpedia.org/resource/Ellie_Roebuck> <http://dbpedia.org/ontology/team> ?v2 . ?v0 <http://dbpedia.org/property/residence> ?v4 . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. ?v0 <http://dbpedia.org/ontology/residence> <http://dbpedia.org/resource/Dewsbury> . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Athlete>. ?v4 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/United_Kingdom>. ?v2 <http://dbpedia.org/ontology/manager> ?result . ?result <http://dbpedia.org/ontology/birthPlace> ?v4 . },"```sparql
SELECT ?native WHERE {
  # Find athlete from Dewsbury
  ?athlete dbo:residence ?dewsburyResidence .
  ?dewsburyResidence rdfs:label ""Dewsbury""@en .
  
  # Find manager of Ellie Roebury
  ?roebuck dbo:manager ?manager .
  ?roebuck rdfs:label ""Ellie Roebuck""@en .

  # Determine the residence of this manager
  ?manager dbo:residence ?managerResidence .
  FILTER (regex(str(?managerResidence), ""English"", ""i"") && regex(str(?managerResidence), ""settlement"", ""i""))

  # Find native of this residence
  ?native dbo:nativePlace ?managerResidence .
}
```",5,8,6,3,2,3,2,20,0,0,1,0,0.0,0
273,19,test,Give me the parent of the alumnus of the reference to Università degli Studi di Torino and spouse of the child of Giovanni Agnelli.,"SELECT ?result WHERE { ?v4 <http://dbpedia.org/ontology/parent> ?result . ?v0 <http://xmlns.com/foaf/0.1/name> ""Università degli Studi di Torino""@en . <http://dbpedia.org/resource/Giovanni_Agnelli> <http://dbpedia.org/ontology/child> ?v2 . ?v4 <http://dbpedia.org/ontology/almaMater> ?v0 . ?result <http://dbpedia.org/ontology/spouse> ?v2 . }","```sparql
SELECT ?parent WHERE {
  # Find an alumnus of Università degli Studi di Torino
  ?alumnus dbo:almaMater dbr:Universit%C3%A0_degli_Studi_di_Torino .
  
  # Find a child of Giovanni Agnelli and their spouse
  ?agnelliChild dbo:parent dbr:Giovanni_Agnelli .
  ?agnelliSpouse dbo:spouse ?agnelliChild .

  # Ensure the alumnus is also the spouse of the child of Giovanni Agnelli
  FILTER (?alumnus = ?agnelliSpouse)

  # Find the parent of the identified alumnus
  ?alumnus dbo:parent ?parent .
}
```",5,5,6,3,2,3,2,20,0,0,1,0,0.0,0
874,18,test,"Give me the band of the band member of The Jones Gang and band of the writer, that is an artist and a musical artist, of the work, that is a work, of Horace Andy.",SELECT ?result WHERE { ?v3 <http://dbpedia.org/ontology/associatedMusicalArtist> <http://dbpedia.org/resource/The_Jones_Gang> . ?result <http://dbpedia.org/ontology/bandMember> ?v3 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. ?v1 <http://dbpedia.org/property/writer> <http://dbpedia.org/resource/Horace_Andy> . ?v1 <http://dbpedia.org/property/writer> ?v2 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?result <http://dbpedia.org/ontology/bandMember> ?v2 . },"```sparql
SELECT DISTINCT ?bandOfJonesGangMember ?bandOfWriter WHERE {
  # Find band members of The Jones Gang
  ?member dbo:memberOf :The_Jones_Gang .
  
  # Find the band associated with each member
  OPTIONAL { 
    ?member dbo:memberOf ?bandOfJonesGangMember .
  }
  
  # Find works by Horace Andy
  ?work dbo:creator :Horace_Andy ;
        a dbo:MusicalWork .

  # Identify writers of these works who are artists and musical artists
  ?writer dbo:creator ?work ;
          a dbo:Artist, dbo:MusicalArtist .
  
  # Find the band associated with this writer
  OPTIONAL {
    ?writer dbo:memberOf ?bandOfWriter .
  }
}
```

### Explanation:
- **`?member dbo:memberOf :The_Jones_Gang .`:** Identifies members of ""The Jones Gang.""
- **`?member dbo:memberOf ?bandOfJonesGangMember .`:** Retrieves other bands associated with these members.
- **`?work dbo:creator :Horace_Andy ; a dbo:MusicalWork .`:** Finds musical works created by Horace Andy.
- **`?writer dbo:creator ?work ; a dbo:Artist, dbo:MusicalArtist .`:** Identifies writers of these works who are both artists and musical artists.
- **`?writer dbo:memberOf ?bandOfWriter .`:** Retrieves bands associated with these writers.",5,8,6,3,2,3,2,20,0,0,1,0,0.0,0
456,59,test,"Give me the spouse of the actor of the movie, that is a work and a television show, with Ross Newton and professional in the alter ego of the reference, that is a fictional character, to Lamont Cranston (radio, film and television).","SELECT ?result WHERE { ?v3 <http://dbpedia.org/property/starring> ?v2 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/TelevisionShow>. ?v3 <http://dbpedia.org/property/starring> <http://dbpedia.org/resource/Ross_Newton> . ?v0 <http://dbpedia.org/property/alterEgo> ?v5 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/FictionalCharacter>. ?result <http://dbpedia.org/property/occupation> ?v5 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?v2 <http://dbpedia.org/ontology/spouse> ?result . ?v0 <http://xmlns.com/foaf/0.1/name> ""Lamont Cranston (radio, film and television)""@en . }","```sparql
SELECT ?spouse WHERE {
  # Find works involving Ross Newton
  ?work dbo:actor ?rossNewton .
  ?rossNewton rdfs:label ""Ross Newton""@en .

  # Ensure the work involves The Shadow (Lamont Cranston's alter ego)
  ?work dbo:character ?shadowCharacter .
  ?shadowCharacter rdfs:label ""The Shadow""@en .

  # Ensure the work is both a movie and a television show
  ?work rdf:type ?type .
  FILTER (?type IN (dbpedia-owl:Film, dbpedia-owl:TelevisionShow))

  # Find the actor who played The Shadow in these works
  ?work dbo:actor ?shadowActor .

  # Get the spouse of this actor
  ?shadowActor dbo:spouse ?spouse .
}
```",6,9,7,3,2,3,3,71,0,0,2,0,0.0,0
329,28,test,"Give me the entity in the region, that is a country, of Western European Time and entity in the birthplace, that is an organisation and a country, of Robert Bates (loyalist) and birthplace of the author of The Tailor and Ansty.",SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/birthPlace> ?result . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?result <http://dbpedia.org/ontology/country> ?v5 . ?result <http://dbpedia.org/ontology/country> ?v3 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. ?v3 <http://dbpedia.org/property/timeZone> <http://dbpedia.org/resource/Western_European_Time> . <http://dbpedia.org/resource/The_Tailor_and_Ansty> <http://dbpedia.org/property/author> ?v1 . <http://dbpedia.org/resource/Robert_Bates_(loyalist)> <http://dbpedia.org/ontology/birthPlace> ?v5 . },"```sparql
# Query for the country in the region of Western European Time
SELECT ?country WHERE {
  ?region dbo:wikiPageRedirects db:Q11173 . # Western European Time
  ?region dbo:location ?country .
  ?country a dbo:Country .
}

UNION

# Query for the birthplace of Robert Bates that is an organization and a country
SELECT ?birthplace WHERE {
  ?bates dbo:birthPlace ?birthplace .
  ?bates rdfs:label ""Robert Bates (loyalist)""@en .
  ?birthplace a dbo:Country ;
              a dbo:Organisation .
}

UNION

# Query for the birthplace of the author of ""The Tailor and Ansty""
SELECT ?authorBirthPlace WHERE {
  ?book dbo:author ?author .
  ?book rdfs:label ""The Tailor and Ansty""@en .
  ?author dbo:birthPlace ?authorBirthPlace .
}
```",6,9,7,2,3,2,3,28,0,0,1,0,0.0,0
892,67,test,"Give me the entity in the administration, that is Italian and a region and a settlement and an administrative region, of the party, that is a political party and an organisation, of Andrea Cozzolino and landmark at elevation of the award of the member of E-girls and entity in Italy.",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Italy> . <http://dbpedia.org/resource/E-girls> <http://dbpedia.org/ontology/bandMember> ?v1 . ?v0 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Italy>. <http://dbpedia.org/resource/Andrea_Cozzolino> <http://dbpedia.org/ontology/party> ?v4 . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/PoliticalParty>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Region>. ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?v0 <http://dbpedia.org/property/leaderParty> ?v4 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/AdministrativeRegion>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. ?result <http://dbpedia.org/ontology/province> ?v0 . ?result <http://dbpedia.org/ontology/elevation> ?v5 . ?v1 <http://dbpedia.org/property/awards> ?v5 . },"```sparql
SELECT DISTINCT ?region WHERE {
  # Step 1: Identify Andrea Cozzolino's political party
  ?cozzolino dbo:party ?party .
  ?cozzolino rdfs:label ""Andrea Cozzolino""@en .

  # Step 2: Find an Italian region that is a settlement and administrative region associated with the party
  ?region dbo:country dbr:Italy ;
          rdf:type dbo:Settlement, dbo:AdministrativeRegion ;
          dbo:administrativeUnit ?party .

  # Step 3: Identify a landmark at elevation related to an award given to a member of E-girls
  ?landmark dbo:elevation ?elevation .
  ?award dbo:recipient ?member .
  ?member rdfs:label ""E-girls""@en .
  ?landmark dbo:location ?region .

}
```",7,13,8,3,3,3,3,71,0,0,2,0,0.0,0
582,68,test,"Give me the player in the father, that is an athlete and a soccer manager and a sports manager, of the child of Kazuaki Nagasawa and reference to the residence of the reference, that is a scientist, to Hirotaka Sugawara and figure known as the nickname of Japan national football team.","SELECT ?result WHERE { ?v0 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Kazuaki_Nagasawa> . ?result <http://xmlns.com/foaf/0.1/name> ?v4 . <http://dbpedia.org/resource/Japan_national_football_team> <http://dbpedia.org/property/nickname> ?v3 . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Scientist>. ?v7 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerManager>. ?result <http://dbpedia.org/property/nickname> ?v3 . ?v7 <http://dbpedia.org/ontology/team> ?result . ?v0 <http://dbpedia.org/property/father> ?v7 . ?v5 <http://dbpedia.org/property/residence> ?v4 . ?v5 <http://xmlns.com/foaf/0.1/name> ""Hirotaka Sugawara""@en . ?v7 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsManager>. ?v7 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Athlete>. }","```sparql
SELECT ?player WHERE {
  # Find child of Kazuaki Nagasawa
  ?child dbo:parent ?kazuakiNagasawa .
  ?kazuakiNagasawa rdfs:label ""Kazuaki Nagasawa""@en .

  # Identify the father who is an athlete, soccer manager, and sports manager
  ?father dbo:parent ?child .
  ?father dbo:sport ?athleteRole .
  FILTER (regex(str(?athleteRole), ""soccer|football"", ""i""))
  ?father dbo:occupation ?managerRole .
  FILTER (regex(str(?managerRole), ""soccer manager|sports manager"", ""i""))

  # Find the residence of a scientist related to Hirotaka Sugawara
  ?scientist dbo:residence ?residence .
  ?hirotakaSugawara dbo:relatedTo ?scientist .
  ?hirotakaSugawara rdfs:label ""Hirotaka Sugawara""@en .

  # Connect the player to the Japan national football team nickname
  ?player dbo:nickname ?nickname .
  ?team dbo:nickname ?nickname .
  ?team rdfs:label ""Japan national football team""@en .
}
```",8,12,9,3,3,3,3,71,0,0,1,0,0.0,0
445,68,test,"Give me the entity in the award of George H. Cameron and entity in the residence, that is a country, of the resident, that is an athlete, of Great Britain and death place of the awardee of the establishment of 1820-03-10.","SELECT ?result WHERE { ?v7 <http://dbpedia.org/ontology/deathPlace> ?result . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. ?v0 <http://dbpedia.org/ontology/foundingDate> ""1820-03-10""^^<http://www.w3.org/2001/XMLSchema#date> . ?v7 <http://dbpedia.org/property/awards> ?v0 . <http://dbpedia.org/resource/George_H._Cameron> <http://dbpedia.org/property/awards> ?v3 . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Athlete>. ?result <http://dbpedia.org/ontology/location> ?v4 . ?v5 <http://dbpedia.org/property/residence> ?v4 . ?result <http://dbpedia.org/ontology/country> ?v3 . ?v5 <http://dbpedia.org/property/residence> <http://dbpedia.org/resource/Great_Britain> . }","```sparql
SELECT ?award ?country WHERE {
  # Find George H. Cameron's award
  ?cameron dbo:awardedBy ?award .
  ?cameron rdfs:label ""George H. Cameron""@en .

  # Find establishment on 1820-03-10 and its awardee
  ?establishment dbo:dateEstablished ""1820-03-10""^^xsd:date ;
                dbo:awardee ?awardee .
  
  # Find the death place of the awardee
  ?awardee dbo:deathPlace ?deathPlace .

  # Ensure the death place is a country
  ?deathPlace rdf:type dbpedia-owl:Country .

  # Find an athlete from Great Britain whose residence matches the death place
  ?athlete dbo:nationality dbr:United_Kingdom ;
           dbo:residence ?country .
  
  FILTER (?country = ?deathPlace)
}
```",8,10,9,3,3,3,3,71,0,0,1,0,0.0,0
573,66,test,"Give me the person decedent at the administration, that is a region, of Charlie Baker and parent of the author, that is a politician and an office holder, of the work of John Quincy Adams and person decedent at the residence, that is a settlement, of William J. Phelan.","SELECT ?result WHERE { ?v1 <http://dbpedia.org/property/author> ?v2 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v6 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. ?result <http://dbpedia.org/ontology/deathPlace> ?v3 . <http://dbpedia.org/resource/William_J._Phelan> <http://dbpedia.org/property/residence> ?v6 . ?v3 <http://dbpedia.org/property/governor> ""Charlie Baker""@en . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v1 <http://dbpedia.org/property/author> <http://dbpedia.org/resource/John_Quincy_Adams> . ?v2 <http://dbpedia.org/ontology/parent> ?result . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Region>. ?result <http://dbpedia.org/ontology/deathPlace> ?v6 . }","```sparql
SELECT ?commonPerson WHERE {
  # Step 1: Charlie Baker's administration region and its decedent
  ?bakerOffice dbo:officeHolder dbr:Charlie_Baker .
  ?bakerOffice dbo:administrativeRegion ?region .
  ?decedent dbo:placeOfDeath ?region .

  # Step 2: John Quincy Adams' author who is a politician and office holder, and their parent
  ?work dbo:author dbr:John_Quincy_Adams .
  ?author dbo:author ?work .
  ?author rdf:type dbo:Politician ;
          dbo:officeHolder ?office .
  ?parent dbo:child ?author .

  # Step 3: William J. Phelan's residence settlement and its decedent
  ?phelanResidence dbo:residence dbr:William_J._Phelan .
  ?phelanResidence dbo:settlement ?settlement .
  ?decedent2 dbo:placeOfDeath ?settlement .

  # Find common person among the results
  FILTER (?decedent = ?commonPerson && ?parent = ?commonPerson && ?decedent2 = ?commonPerson)
}
```",7,11,8,3,3,3,3,71,0,0,2,0,0.0,0
773,57,test,"Give me the spouse of Louis the German and parent of the child, that is a royalty, of Louis the German and parent of the successor of the child, that is a royalty, of Louis the Pious.",SELECT ?result WHERE { ?v3 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Louis_the_German> . <http://dbpedia.org/resource/Louis_the_Pious> <http://dbpedia.org/ontology/child> ?v0 . ?v0 <http://dbpedia.org/ontology/successor> ?v5 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v3 <http://dbpedia.org/ontology/parent> ?result . <http://dbpedia.org/resource/Louis_the_German> <http://dbpedia.org/ontology/spouse> ?result . ?result <http://dbpedia.org/ontology/child> ?v5 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. },"```sparql
SELECT ?spouse ?parentOfRoyalChild ?successor ?parentOfSuccessor WHERE {
  # Find Louis the German and his spouse
  ?louisGerman rdfs:label ""Louis the German""@en .
  ?louisGerman dbo:spouse ?spouse .

  # Find a royal child of Louis the German
  ?child dbo:parent ?louisGerman ;
         rdf:type dbo:RoyalFamilyMember .

  # Determine the parent of this royal child (likely the spouse)
  ?child dbo:parent ?parentOfRoyalChild .
  
  # Identify the successor of this royal child
  OPTIONAL {
    ?successor dbo:succeededBy ?child .
  }

  # Find the parent of the successor
  OPTIONAL {
    ?successor dbo:parent ?parentOfSuccessor .
  }
}
```",6,8,7,3,3,3,3,71,0,0,1,0,0.0,0
373,8,test,Give me the professional in the profession of Beto Guedes and writer of 2300 Jackson Street (song).,SELECT ?result WHERE { ?result <http://dbpedia.org/property/occupation> ?v1 . <http://dbpedia.org/resource/2300_Jackson_Street_(song)> <http://dbpedia.org/property/writer> ?result . <http://dbpedia.org/resource/Beto_Guedes> <http://dbpedia.org/property/occupation> ?v1 . },"```sparql
SELECT ?professional WHERE {
  # Find Beto Guedes and his profession
  ?betoGuedes dbo:profession ?profession .
  ?betoGuedes rdfs:label ""Beto Guedes""@en .

  # Find the writer of the song ""2300 Jackson Street""
  ?song dbo:lyricist ?writer .
  ?song rdfs:label ""2300 Jackson Street (song)""@en .

  # Check if the same person is both Beto Guedes' profession and the writer
  FILTER (?profession = ?writer)
}
```",3,3,4,2,2,2,2,9,0,0,1,0,0.0,0
554,19,test,"Give me the leader of the administration of Francisco da Costa Gomes and leader of the birth place of the band, that is an artist, of Rita Redshoes.",SELECT ?result WHERE { ?v2 <http://dbpedia.org/property/leader> <http://dbpedia.org/resource/Francisco_da_Costa_Gomes> . <http://dbpedia.org/resource/Rita_Redshoes> <http://dbpedia.org/ontology/associatedMusicalArtist> ?v0 . ?v4 <http://dbpedia.org/property/leader> ?result . ?v0 <http://dbpedia.org/ontology/birthPlace> ?v4 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. ?v2 <http://dbpedia.org/property/leader> ?result . },"```sparql
SELECT ?presidentLeader ?cityLeader WHERE {
  # Find Francisco da Costa Gomes and his presidential term
  ?costaGomes dbo:position ?position .
  ?costaGomes rdfs:label ""Francisco da Costa Gomes""@en .
  ?position dbo:office ""President of Portugal"" .
  ?term dbo:startDate ?startDate .
  ?term dbo:endDate ?endDate .
  ?term dbo:heldBy ?costaGomes .

  # Find the leader during his term
  OPTIONAL {
    ?leader dbo:position ?presidencyPosition .
    ?presidencyPosition dbo:office ""Prime Minister of Portugal"" .
    ?leader dbo:startDate ?startLeader .
    ?leader dbo:endDate ?endLeader .
    FILTER (?startLeader <= ?endDate && ?endLeader >= ?startDate)
  }

  # Find Rita Redshoes and her band
  ?ritaRedshoes dbo:band ?band .
  ?ritaRedshoes rdfs:label ""Rita Redshoes""@en .

  # Identify the birthplace of the band
  OPTIONAL {
    ?band dbo:birthPlace ?city .
  }

  # Find the leader (e.g., mayor) of that city
  OPTIONAL {
    ?city dbo:mayor ?cityLeader .
  }
}
```",5,6,6,3,2,3,2,20,0,0,3,0,0.0,0
216,68,test,"Give me the player in the coach, that is a soccer player and a sports manager and a soccer manager, of the player, that is an organisation and a sports club and a soccer club, in Džemal Berberović and team of the person born, that is a sports manager and a soccer manager and a soccer player, on 1983-12-20 and player in the coach of the reference, that is an organisation and a soccer club, to Croatia U21.","SELECT ?result WHERE { ?v7 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsManager>. ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerClub>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerManager>. ?v7 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerManager>. <http://dbpedia.org/resource/Džemal_Berberović> <http://dbpedia.org/ontology/team> ?v0 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?v5 <http://xmlns.com/foaf/0.1/name> ""Croatia U21""@en . ?v7 <http://dbpedia.org/ontology/team> ?result . ?v5 <http://dbpedia.org/ontology/coach> ?v4 . ?v3 <http://dbpedia.org/ontology/birthDate> ""1983-12-20""^^<http://www.w3.org/2001/XMLSchema#date> . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsClub>. ?v0 <http://dbpedia.org/ontology/coach> ?v7 . ?result <http://dbpedia.org/ontology/coach> ?v3 . ?v4 <http://dbpedia.org/ontology/team> ?result . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsManager>. ?v7 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerPlayer>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerPlayer>. ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerClub>. }","```sparql
SELECT ?playerInCoach WHERE {
  # Find Džemal Berberović's player in coach who is a soccer player, sports manager, and soccer manager
  ?džemal dbo:playerInCoach ?playerInCoach .
  ?džemal rdfs:label ""Džemal Berberović""@en .
  
  # Ensure the player in coach has roles as a soccer player, sports manager, and soccer manager
  ?playerInCoach rdf:type dbo:SoccerPlayer ;
                 rdf:type dbo:SportsManager ;
                 rdf:type dbo:SoccerManager .

  OPTIONAL {
    # Find the player associated with an organization that is also a sports club and a soccer club
    ?organization dbo:player ?player .
    ?organization rdf:type dbo:SportsClub ;
                  rdf:type dbo:SoccerClub .
    
    # Ensure this player is related to Džemal Berberović's player in coach
    FILTER (?player = ?playerInCoach)
  }

  OPTIONAL {
    # Find the team of a person born on 1983-12-20 who has roles as sports manager, soccer manager, and soccer player
    ?person foaf:birthday ""1983-12-20""^^xsd:date ;
            rdf:type dbo:SportsManager ;
            rdf:type dbo:SoccerManager ;
            rdf:type dbo:SoccerPlayer .
    
    ?team dbo:playerInCoach ?playerInCoach .
  }

  OPTIONAL {
    # Find the player in coach of a reference to Croatia U21
    ?reference dbo:playerInCoach ?playerInCoach .
    ?reference rdfs:label ""Croatia national under-21 football team""@en .
  }
}
```",8,19,9,3,3,3,3,71,0,0,1,0,0.0,0
36,24,test,Give me the person born in the birth year of Deanne Bray and person born as the birth name of Ayo Makun.,SELECT ?result WHERE { <http://dbpedia.org/resource/Ayo_Makun> <http://dbpedia.org/property/birthName> ?v1 . ?result <http://dbpedia.org/ontology/birthYear> ?v2 . <http://dbpedia.org/resource/Deanne_Bray> <http://dbpedia.org/ontology/birthYear> ?v2 . ?result <http://dbpedia.org/property/birthName> ?v1 . },"```sparql
SELECT ?person1 ?person2 WHERE {
  # Part 1: Person born in the same year as Deanne Bray
  ?deanneBray dbo:birthYear ?year .
  ?deanneBray rdfs:label ""Deanne Bray""@en .

  ?person1 dbo:birthYear ?year .

  # Part 2: Person with the birth name of Ayo Makun
  ?ayoMakun dbo:birthName ?birthName .
  ?ayoMakun rdfs:label ""Ayo Makun""@en .

  ?person2 dbo:birthName ?birthName .
}
```",4,4,5,2,2,2,3,28,1,2610,0,0.00038299502106472615,1.0,0.0007656967840735068
826,62,test,"Give me the successor of the child, that is a royalty, of the reference, that is a royalty, to Louis I and spouse of the child of the father of Anna Magdalena Appel and predecessor of Louis IV, Grand Duke of Hesse.","SELECT ?result WHERE { ?v0 <http://dbpedia.org/ontology/child> ?v6 . ?v0 <http://xmlns.com/foaf/0.1/name> ""Louis I""@en . ?v6 <http://dbpedia.org/ontology/successor> ?result . ?v3 <http://dbpedia.org/ontology/spouse> ?result . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?result <http://dbpedia.org/ontology/successor> <http://dbpedia.org/resource/Louis_IV,_Grand_Duke_of_Hesse> . ?v6 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v3 <http://dbpedia.org/property/father> ?v4 . <http://dbpedia.org/resource/Anna_Magdalena_Appel> <http://dbpedia.org/property/father> ?v4 . }","```sparql
SELECT ?successor WHERE {
  # Step 1: Identify Louis I and his spouse
  ?louisI rdfs:label ""Louis I of Hesse""@en .
  ?louisI dbo:spouse ?reference .

  # Step 2: Find the father of Anna Magdalena Appel and one of his children
  ?annaMagdalenaAppel rdfs:label ""Anna Magdalena Bach""@en .
  ?annaMagdalenaAppel dbo:parent ?fatherOfAnna .
  ?childOfFather dbp:parent ?fatherOfAnna .

  # Step 3: Find the predecessor of Louis IV, Grand Duke of Hesse
  ?louisIV rdfs:label ""Louis IV, Grand Duke of Hesse""@en .
  ?predecessor dbo:succeededBy ?louisIV .

  # Step 4: Spouse of the child from step 2
  ?childOfFather dbo:spouse ?spouseOfChild .

  # Step 5: Child that is royalty (from reference and spouse)
  OPTIONAL {
    ?royalChild dbo:parent ?reference .
    FILTER EXISTS { ?royalChild rdf:type dbo:Monarch }
  }

  OPTIONAL {
    ?royalChild2 dbo:parent ?spouseOfChild .
    FILTER EXISTS { ?royalChild2 rdf:type dbo:Monarch }
  }

  # Step 6: Successor of the royal child
  OPTIONAL {
    ?successor dbo:succeededBy ?royalChild .
  }

  OPTIONAL {
    ?successor dbo:succeededBy ?royalChild2 .
  }
}
```",7,9,8,3,3,3,3,71,0,0,1,0,0.0,0
129,24,test,"Give me the associated musical artist of the actor, that is an organisation, of Dreamville Presents: Revenge and associated musical artist of the person born as Tahj Malik Chandler.","SELECT ?result WHERE { ?v0 <http://dbpedia.org/property/birthName> ""Tahj Malik Chandler""@en . <http://dbpedia.org/resource/Dreamville_Presents:_Revenge> <http://dbpedia.org/property/starring> ?v2 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?v0 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v2 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . }","```sparql
# Part 1: Dreamville Presents: Revenge
SELECT ?musicalArtist WHERE {
  # Find the actor associated with ""Dreamville Presents: Revenge""
  ?event dbo:actor ?actor .
  ?event rdfs:label ""Dreamville Presents: Revenge""@en .

  # Check if this actor is an organization
  ?actor a dbo:Organization .

  # Find the musical artist associated with this organization
  ?actor dbo:musicalArtist ?musicalArtist .
}

UNION

# Part 2: Tahj Malik Chandler (Jaden Smith)
SELECT ?associatedMusicalArtist WHERE {
  # Identify Jaden Smith by his birth name
  ?person foaf:name ""Tahj Malik Chandler""@en .
  
  # Find a musical artist associated with Jaden Smith
  ?person dbo:musicalArtist ?associatedMusicalArtist .
}
```",4,5,5,2,2,2,3,28,0,0,1,0,0.0,0
865,59,test,"Give me the native of the residence, that is a country, of the person decedent at Patna and father of the child, that is a politician, of the spouse of Syeda Shahar Banu.",SELECT ?result WHERE { ?v3 <http://dbpedia.org/property/father> ?v2 . ?v1 <http://dbpedia.org/ontology/deathPlace> <http://dbpedia.org/resource/Patna> . ?v1 <http://dbpedia.org/property/residence> ?v0 . ?v3 <http://dbpedia.org/property/father> ?result . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. <http://dbpedia.org/resource/Syeda_Shahar_Banu> <http://dbpedia.org/ontology/spouse> ?v2 . ?result <http://dbpedia.org/ontology/birthPlace> ?v0 . },"```sparql
SELECT ?nativeCountry WHERE {
  # Find Syeda Shahar Banu's spouse
  ?shaharBanu dbo:spouse ?spouse .
  ?shaharBanu rdfs:label ""Syeda Shahar Banu""@en .

  # Identify the child of this spouse who is a politician
  ?spouse dbo:child ?politicianChild .
  ?politicianChild rdf:type dbo:Politician .

  # Find out who the father of this politician is
  ?politicianChild dbo:parent ?father .

  # Determine where this father passed away at Patna
  ?father dbo:placeOfDeath ?patna .
  ?patna rdfs:label ""Patna""@en .

  # Get the residence of this person and determine its native country
  ?father dbo:residence ?residence .
  ?residence dbo:nativeCountry ?nativeCountry .
}
```",6,8,7,3,2,3,3,71,0,0,1,0,0.0,0
445,71,test,"Give me the entity in the residence, that is a country, of the resident, that is an athlete, of Great Britain and death place of the awardee of the establishment of 1820-03-10 and entity in the award of the commander in Battle of Saint-Mihiel.","SELECT ?result WHERE { ?v1 <http://dbpedia.org/property/residence> <http://dbpedia.org/resource/Great_Britain> . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. ?v1 <http://dbpedia.org/property/residence> ?v2 . ?v5 <http://dbpedia.org/ontology/deathPlace> ?result . ?v7 <http://dbpedia.org/property/awards> ?v8 . ?v5 <http://dbpedia.org/property/awards> ?v4 . ?result <http://dbpedia.org/ontology/country> ?v8 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Athlete>. <http://dbpedia.org/resource/Battle_of_Saint-Mihiel> <http://dbpedia.org/ontology/commander> ?v7 . ?v4 <http://dbpedia.org/ontology/foundingDate> ""1820-03-10""^^<http://www.w3.org/2001/XMLSchema#date> . ?result <http://dbpedia.org/ontology/location> ?v2 . }","```sparql
SELECT ?country WHERE {
  # Step 1: Identify an athlete from Great Britain
  ?athlete dbo:nationality dbc:United_Kingdom ;
           rdf:type dbo:Athlete .
  
  # Step 2: Find the country of residence for this athlete
  ?athlete dbo:residence ?placeResidence .
  ?placeResidence rdf:type dbo:Country ;
                  rdfs:label ?country .

  # Step 3: Identify an awardee related to the establishment date 1820-03-10
  ?awardEvent dbo:date ""1820-03-10""^^xsd:date ;
              dbo:recipient ?awardee .
  
  # Step 4: Determine the death place of this awardee
  ?awardee dbo:deathPlace ?deathPlace .

  # Step 5: Identify the commander in the Battle of Saint-Mihiel and their award
  ?battle dbo:commander ?commander ;
          rdfs:label ""Battle of Saint-Mihiel""@en .
  
  ?commander dbo:award ?award .

  # Step 6: Find the entity associated with this award
  ?award dbo:entity ?entity .
}
```",9,11,10,3,3,3,3,71,0,0,1,0,0.0,0
965,63,test,"Give me the parent of the child, that is a royalty, of Prince Louis of Battenberg and parent of the person born, that is a noble, as Prince George of Battenberg and spouse of the spouse of the parent of Louise Mountbatten.","SELECT ?result WHERE { ?v3 <http://dbpedia.org/ontology/spouse> ?v1 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Noble>. ?v0 <http://dbpedia.org/property/birthName> ""Prince George of Battenberg""@en . ?result <http://dbpedia.org/ontology/spouse> ?v1 . ?v5 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Prince_Louis_of_Battenberg> . ?v0 <http://dbpedia.org/ontology/parent> ?result . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v5 <http://dbpedia.org/ontology/parent> ?result . <http://dbpedia.org/resource/Louise_Mountbatten> <http://dbpedia.org/ontology/parent> ?v3 . }","```sparql
SELECT ?finalParent WHERE {
  # Step 1: Find a royal child of Prince Louis of Battenberg
  ?princeLouis dbo:child ?royalChild .
  ?princeLouis rdfs:label ""Prince Louis of Battenberg""@en .
  
  # Ensure the child is royalty
  ?royalChild dbo:occupation ?occupation .
  FILTER (regex(str(?occupation), ""Royal"", ""i""))

  # Step 2: Find the parent of this royal child
  ?royalChild dbo:parent ?childParent .

  # Step 3: Identify Prince George of Battenberg's noble parent
  ?princeGeorge dbo:birth ?birth .
  ?princeGeorge rdfs:label ""Prince George of Battenberg""@en .
  
  ?birth dbo:parent ?nobleParent .
  ?nobleParent dbo:occupation ?nobilityOccupation .
  FILTER (regex(str(?nobilityOccupation), ""Noble"", ""i""))

  # Step 4: Find the spouse of the parent of Louise Mountbatten
  ?louiseMountbatten dbo:parent ?louiseParent .
  ?louiseMountbatten rdfs:label ""Louise Mountbatten""@en .

  ?louiseParent dbo:spouse ?spouseOfLousieParent .

  # Step 5: Ensure the parent from step 2 is connected through marriage to the spouse identified in step 4
  FILTER (?childParent = ?nobleParent && ?nobleParent = ?spouseOfLousieParent)
  
  BIND(?childParent AS ?finalParent)
}
```",7,9,8,3,3,3,3,71,0,0,2,0,0.0,0
606,18,test,"Give me the figure known as the nickname of the figure known, that is a settlement, as Barb City and birthplace of the alumnus of University of Pennsylvania.","SELECT ?result WHERE { ?v3 <http://dbpedia.org/ontology/birthPlace> ?result . ?result <http://dbpedia.org/property/nickname> ?v2 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. ?v3 <http://dbpedia.org/ontology/almaMater> <http://dbpedia.org/resource/University_of_Pennsylvania> . ?v1 <http://dbpedia.org/property/nickname> ""Barb City""@en . ?v1 <http://dbpedia.org/property/nickname> ?v2 . }","```sparql
SELECT ?settlement ?person WHERE {
  # Find the settlement known as Barb City
  ?settlement dbo:nickname ""Barb City""@en .
  
  # Find individuals born in this settlement
  ?person dbo:birthPlace ?settlement .
  
  # Ensure the individual attended University of Pennsylvania
  ?person dbo:almaMater <http://dbpedia.org/resource/University_of_Pennsylvania> .
}
```",5,6,6,3,2,3,2,20,0,0,1,0,0.0,0
791,61,test,"Give me the predecessor of the child of the child, that is an office holder and a royalty, of Emperor Go-Shirakawa and father of the child, that is a royalty, of the father, that is a royalty and an office holder, of Emperor Antoku.",SELECT ?result WHERE { ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v3 <http://dbpedia.org/property/father> ?v1 . ?result <http://dbpedia.org/ontology/successor> ?v5 . <http://dbpedia.org/resource/Emperor_Antoku> <http://dbpedia.org/property/father> ?v1 . ?v0 <http://dbpedia.org/ontology/parent> <http://dbpedia.org/resource/Emperor_Go-Shirakawa> . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v3 <http://dbpedia.org/property/father> ?result . ?v5 <http://dbpedia.org/property/father> ?v0 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. },"```sparql
SELECT ?predecessor WHERE {
  # Find Emperor Go-Shirakawa
  ?goShirakawa rdfs:label ""Emperor Go-Shirakawa""@en .

  # Find child of Go-Shirakawa who is an office holder and royalty
  OPTIONAL { 
    ?child1 dbo:parent ?goShirakawa .
    ?child1 dbo:officeHolder ?office1 .
    ?child1 dbo:royalty ?royalty1 .
  }

  # Find the grandchild of Go-Shirakawa (child of child1)
  OPTIONAL {
    ?grandChild dbo:parent ?child1 .
  }

  # Find predecessor of this grandchild
  OPTIONAL {
    ?predecessor dbo:predecessor ?grandChild .
  }

  # Find Emperor Antoku
  ?antoku rdfs:label ""Emperor Antoku""@en .

  # Find father of Antoku who is royalty and an office holder
  OPTIONAL {",6,11,7,3,2,3,3,71,0,0,1,0,0.0,0
987,61,test,"Give me the entity in the region, that is a country, of the time zone, that is a sports event, in Canicosa de la Sierra and birth place of the actor of the show, that is a film, with Emir Hadžihafizbegović.",SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/starring> <http://dbpedia.org/resource/Emir_Hadžihafizbegović> . ?v0 <http://dbpedia.org/property/timeZone> ?v3 . ?result <http://dbpedia.org/ontology/country> ?v0 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsEvent>. ?v4 <http://dbpedia.org/ontology/birthPlace> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Film>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. <http://dbpedia.org/resource/Canicosa_de_la_Sierra> <http://dbpedia.org/ontology/timeZone> ?v3 . ?v1 <http://dbpedia.org/property/starring> ?v4 . },"```sparql
SELECT ?country WHERE {
  # Step 1: Get Canicosa de la Sierra's time zone
  ?canicosa dbo:timeZone ?timezone .
  ?canicosa rdfs:label ""Canicosa de la Sierra""@en .

  # Step 2: Find sports events in this time zone
  ?event dbo:timeZone ?timezone ;
         a dbo:SportsEvent .

  # Step 3: Determine the country or region of the sports event
  ?event dbo:location ?location .
  ?location dbo:country ?country .

  # Step 4: Find a film with Emir Hadžihafizbegović
  ?film dbo:actor ?emir .
  ?emir rdfs:label ""Emir Hadžihafizbegović""@en .

  # Step 5: Identify an actor from this film and their birthplace
  ?film dbo:actor ?actor .
  ?actor dbo:birthPlace ?birthPlace .

  # Step 6: Get the country of the birthplace
  ?birthPlace dbo:country ?birthCountry .

  # Ensure the country matches both conditions
  FILTER (?country = ?birthCountry)
}
```",6,9,7,3,2,3,3,71,0,0,18,0,0.0,0
5,20,test,"Give me the birthplace of the person born, that is a politician, as the award of Renata Adler and entity in the award of the associated musical artist, that is a band, of Rubén Colón Tarrats.",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/country> ?v5 . <http://dbpedia.org/resource/Renata_Adler> <http://dbpedia.org/property/awards> ?v1 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v2 <http://dbpedia.org/property/birthName> ?v1 . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Band>. <http://dbpedia.org/resource/Rubén_Colón_Tarrats> <http://dbpedia.org/ontology/associatedMusicalArtist> ?v4 . ?v4 <http://dbpedia.org/property/awards> ?v5 . ?v2 <http://dbpedia.org/ontology/birthPlace> ?result . },"```sparql
SELECT ?birthPlace WHERE {
  # Step 1: Get Renata Adler's award
  ?renataAdler dbo:award ?adlerAward .
  ?renataAdler rdfs:label ""Renata Adler""@en .

  # Step 2: Find the band associated with Rubén Colón Tarrats and its awards
  ?rubenColonTarrats dbo:musicalArtist ?band .
  ?rubenColonTarrats rdfs:label ""Rubén Colón Tarrats""@en .
  
  OPTIONAL {
    ?band dbo:award ?bandAward .
  }

  # Step 3: Find an entity in the band's award that is a birthplace of a politician
  OPTIONAL {
    ?entityInBandAward dbo:birthPlace ?birthPlace .
    ?entityInBandAward rdfs:label ?awardEntityLabel .
    FILTER (regex(str(?bandAward), str(?adlerAward), ""i""))
    
    # Ensure the entity is a politician
    ?politician dbo:birthPlace ?birthPlace .
    ?politician rdf:type dbo:Politician .
  }
}
```",6,8,7,3,2,3,2,20,0,0,2,0,0.0,0
445,65,test,"Give me the death place of the awardee of the establishment of 1820-03-10 and entity in the residence, that is a country, of Anna Sharkey and entity in the award of George H. Cameron.","SELECT ?result WHERE { ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. <http://dbpedia.org/resource/Anna_Sharkey> <http://dbpedia.org/property/residence> ?v4 . ?v0 <http://dbpedia.org/ontology/foundingDate> ""1820-03-10""^^<http://www.w3.org/2001/XMLSchema#date> . ?v6 <http://dbpedia.org/property/awards> ?v0 . ?result <http://dbpedia.org/ontology/country> ?v3 . ?v6 <http://dbpedia.org/ontology/deathPlace> ?result . ?result <http://dbpedia.org/ontology/location> ?v4 . <http://dbpedia.org/resource/George_H._Cameron> <http://dbpedia.org/property/awards> ?v3 . }","```sparql
SELECT ?deathPlace ?country ?awardEntity WHERE {
  # Find the awardee established on 1820-03-10
  ?awardee dbo:established ""1820-03-10""^^xsd:date .
  
  # Get the death place of this awardee
  ?awardee dbo:deathPlace ?deathPlace .

  # Find Anna Sharkey's residence country
  ?annaSharkey dbo:residence ?residence .
  ?annaSharkey rdfs:label ""Anna Sharkey""@en .
  ?residence a dbo:Country .
  BIND(str(?residence) AS ?country)

  # Find George H. Cameron's award entity
  ?georgeHCameron dbo:award ?awardEntity .
  ?georgeHCameron rdfs:label ""George H. Cameron""@en .
}
```",7,8,8,3,3,3,3,71,0,0,1,0,0.0,0
826,60,test,"Give me the spouse of the child of the father of Anna Magdalena Appel and predecessor of the parent of the child of Louis IV, Grand Duke of Hesse.","SELECT ?result WHERE { ?v0 <http://dbpedia.org/ontology/parent> ?v1 . <http://dbpedia.org/resource/Anna_Magdalena_Appel> <http://dbpedia.org/property/father> ?v3 . ?v0 <http://dbpedia.org/ontology/parent> <http://dbpedia.org/resource/Louis_IV,_Grand_Duke_of_Hesse> . ?result <http://dbpedia.org/ontology/successor> ?v1 . ?v2 <http://dbpedia.org/ontology/spouse> ?result . ?v2 <http://dbpedia.org/property/father> ?v3 . }","```sparql
SELECT ?spouse WHERE {
  # Anna Magdalena Bach and her father
  ?annaMagdalena rdfs:label ""Anna Magdalena Bach""@en .
  ?father dbo:parent ?annaMagdalena .
  
  # Child of Anna Magdalena's father (likely Johann Sebastian Bach)
  ?child dbo:parent ?father .
  
  # Spouse of the child
  ?child dbo:spouse ?spouse .

  # Louis IV, Grand Duke of Hesse and his predecessor
  ?louisIV rdfs:label ""Louis IV, Grand Duke of Hesse""@en .
  ?parentOfChild dbo:parent ?childOfLouisIV .
  ?childOfLouisIV rdfs:label ""Child of Louis IV, Grand Duke of Hesse""@en .
  
  # Predecessor of Louis IV
  ?predecessor dbo:successor ?louisIV .

  # Spouse of the predecessor
  ?predecessor dbo:spouse ?spouseOfPredecessor .
}
```",6,6,7,3,2,3,3,71,0,0,1,0,0.0,0
926,68,test,"Give me the child of the father, that is a royalty, of Mustafa III and successor of the child of the spouse of Şermi Kadın and father of the father of the spouse of Neşerek Kadın.",SELECT ?result WHERE { ?v0 <http://dbpedia.org/ontology/child> ?result . <http://dbpedia.org/resource/Mustafa_III> <http://dbpedia.org/property/father> ?v0 . ?v4 <http://dbpedia.org/property/father> ?v2 . ?v6 <http://dbpedia.org/property/father> ?v1 . <http://dbpedia.org/resource/Neşerek_Kadın> <http://dbpedia.org/ontology/spouse> ?v4 . ?v6 <http://dbpedia.org/ontology/successor> ?result . ?v1 <http://dbpedia.org/ontology/spouse> <http://dbpedia.org/resource/Şermi_Kadın> . ?v2 <http://dbpedia.org/property/father> ?result . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. },"```sparql
SELECT ?successor WHERE {
  # Mustafa III's father who is royalty (Ahmet III)
  ?mustafaIII dbo:parent ?ahmetIII .
  ?mustafaIII rdfs:label ""Mustafa III""@en .

  # Şermi Kadın's spouse and their child
  ?sermiKadin dbo:spouse ?sultan1 .
  ?childOfSultan1 dbo:parent ?sultan1 .
  
  # Successor of the child of Şermi Kadın's spouse
  ?successor dbo:succeededBy ?childOfSultan1 .

  # Neşerek Kadın's spouse and their father, then grandfather
  ?neserekKadin dbo:spouse ?sultan2 .
  ?fatherOfSultan2 dbo:parent ?sultan2 .
  ?grandFatherOfSultan2 dbo:parent ?",8,9,9,3,3,3,3,71,0,0,1,0,0.0,0
773,71,test,"Give me the parent of the successor of the child, that is a royalty, of Louis the Pious and parent of the child, that is a royalty, of the father, that is an office holder and a royalty, of Carloman of Bavaria and spouse of the father of the parent of Bernard (son of Charles the Fat).",SELECT ?result WHERE { <http://dbpedia.org/resource/Carloman_of_Bavaria> <http://dbpedia.org/property/father> ?v7 . ?v8 <http://dbpedia.org/ontology/parent> ?result . ?v7 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v8 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?result <http://dbpedia.org/ontology/child> ?v5 . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v7 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v4 <http://dbpedia.org/ontology/successor> ?v5 . ?v1 <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Bernard_(son_of_Charles_the_Fat)> . ?v2 <http://dbpedia.org/ontology/spouse> ?result . <http://dbpedia.org/resource/Louis_the_Pious> <http://dbpedia.org/ontology/child> ?v4 . ?v8 <http://dbpedia.org/property/father> ?v7 . ?v1 <http://dbpedia.org/property/father> ?v2 . },"```sparql
SELECT ?parent1 ?parent2 WHERE {
  # Step 1: Louis the Pious's child who is royalty
  ?child1 dbo:parent dbc:Louis_the_Pious .
  ?child1 rdf:type dbo:Monarch .

  # Step 2: Successor of that royal child and their parent
  ?successor dbo:succeededBy ?child1 .
  ?successor dbo:parent ?parent1 .

  # Step 3: Carloman of Bavaria's father who is an office holder and royalty
  ?carlomanFather dbo:child dbc:Carloman_of_Bavaria .
  ?carlomanFather rdf:type dbo:Monarch .
  ?carlomanFather dbo:officeHolder ?office .

  # Step 4: Child of that royal office holder and their parent
  ?royalChild dbo:parent ?carlomanFather .
  ?royalChild rdf:type dbo:Monarch .
  ?royalChild dbo:parent ?parent2 .

  # Step 5: Bernard (son of Charles the Fat) and spouse's father
  ?bernard dbo:child dbc:Charles_the_Fat .
  ?bernard rdfs:label ""Bernard""@en .
  
  ?bernardParent dbo:parent ?bernard .
  ?spouse dbo:spouse ?bernardParent .
  ?spouseFather dbo:parent ?spouse .

}
```",9,13,10,3,3,3,3,71,0,0,1,0,0.0,0
236,20,test,"Give me the party member of the administration of the reference, that is an office holder and a politician, to James Madison and party member of the administration, that is an organisation, of the person decedent, that is a politician and an office holder, at Quincy, Massachusetts.","SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v1 <http://dbpedia.org/ontology/deathPlace> <http://dbpedia.org/resource/Quincy,_Massachusetts> . ?v4 <http://xmlns.com/foaf/0.1/name> ""James Madison""@en . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?result <http://dbpedia.org/ontology/party> ?v2 . ?v5 <http://dbpedia.org/property/leader> ?v4 . ?v2 <http://dbpedia.org/property/leader> ?v1 . ?result <http://dbpedia.org/ontology/party> ?v5 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. }","```sparql
SELECT ?partyMember ?organization WHERE {
  # Find James Madison's party affiliation during his administration
  ?madison dbo:politicalParty ?party .
  ?madison rdfs:label ""James Madison""@en .

  # Find a member of this party who is an office holder and politician
  ?member dbo:memberOf ?party ;
          dbo:officeHolder true ;
          dbo:politician true .
  
  # Find the decedent at Quincy, Massachusetts, who was a politician and office holder
  ?decedent dbo:placeOfBirth ?quincy ;
            dbo:deathPlace ?quincy ;
            dbo:officeHolder true ;
            dbo:politician true ;
            dbo:residenceLocation ?quincy .
  
  # Ensure the decedent is associated with Quincy, Massachusetts
  ?quincy rdfs:label ""Quincy, Massachusetts""@en .

  # Find the political organization of this decedent
  ?decedent dbo:politicalParty ?organization .
}
```",6,11,7,3,2,3,2,20,0,0,19,0,0.0,0
417,61,test,"Give me the child of the father of the leader, that is a royalty, of Colony of Greenland and child of the child, that is a royalty, of the parent, that is a royalty, of Alexandrine of Mecklenburg-Schwerin.",SELECT ?result WHERE { ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?result <http://dbpedia.org/ontology/parent> ?v3 . <http://dbpedia.org/resource/Colony_of_Greenland> <http://dbpedia.org/property/leader> ?v0 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?result <http://dbpedia.org/property/father> ?v5 . ?v0 <http://dbpedia.org/property/father> ?v5 . ?v3 <http://dbpedia.org/property/father> ?v1 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. <http://dbpedia.org/resource/Alexandrine_of_Mecklenburg-Schwerin> <http://dbpedia.org/ontology/parent> ?v1 . },"```sparql
SELECT ?childOfGreenlandLeader ?royalChildOfAlexandrine WHERE {
  # Find leader of the Colony of Greenland
  ?greenlandLeader dbo:leader ?colony .
  ?colony rdfs:label ""Colony of Greenland""@en .

  # Find father of the leader who is royalty
  OPTIONAL { 
    ?greenlandLeader dbo:parent ?fatherOfLeader .
    ?fatherOfLeader rdf:type dbo:Monarch .
  }

  # Find a child of this royal father
  OPTIONAL {
    ?fatherOfLeader dbo:child ?childOfGreenlandLeader .
    FILTER (regex(str(?childOfGreenlandLeader), ""Royal"", ""i""))
  }
  
  # Find Alexandrine of Mecklenburg-Schwerin and her parent who is royalty
  ?alexandrine dbo:parent ?royalParent .
  ?alexandrine rdfs:label ""Alexandrine of Mecklenburg-Schwerin""@en .

  OPTIONAL {
    ?royalParent rdf:type dbo:Monarch .
  }

  # Find a child of this royal parent
  OPTIONAL {
    ?royalParent dbo:child ?firstChild .
    FILTER (regex(str(?firstChild), ""Royal"", ""i""))
  }
  
  # Find a child of that first child, ensuring they are royalty
  OPTIONAL {
    ?firstChild dbo:child ?royalChildOfAlexandrine .
    FILTER (regex(str(?royalChildOfAlexandrine), ""Royal"", ""i""))
  }
}
```",6,9,7,3,2,3,3,71,0,0,2,0,0.0,0
976,62,test,"Give me the office of Naci Bostancı and office of the mayor, that is a politician and an office holder and Turkish, of the reference, that is an organisation and a political party and Turkish, to Millet İttifakı and office of the leader, that is a politician, of the administration, that is an organisation, of Kemal Kılıçdaroğlu.","SELECT ?result WHERE { ?v2 <http://dbpedia.org/property/office> ?result . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?v4 <http://dbpedia.org/property/leader> <http://dbpedia.org/resource/Kemal_Kılıçdaroğlu> . ?v1 <http://xmlns.com/foaf/0.1/name> ""Millet İttifakı""@en . ?v4 <http://dbpedia.org/ontology/leader> ?v2 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v5 <http://dbpedia.org/ontology/nationality> <http://dbpedia.org/resource/Turkey>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/PoliticalParty>. ?v1 <http://dbpedia.org/property/leader> ?v5 . <http://dbpedia.org/resource/Naci_Bostancı> <http://dbpedia.org/property/office> ?result . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v1 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Turkey>. ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?v5 <http://dbpedia.org/property/office> ?result . }","```sparql
SELECT ?naciOffice ?mayorOffice ?millettifakıOffice ?kılıçdaroğluLeaderOffice WHERE {
  # Find Naci Bostancı's office
  ?naci dbo:office ?naciOffice .
  ?naci rdfs:label ""Naci Bostancı""@en .

  # Find a mayor who is a politician and Turkish, then their office
  ?mayor dbo:office ?mayorOffice ;
         rdf:type dbo:Mayor ;
         dbo:nationality dbr:Turkey ;
         dbo:occupation dbo:Politician .
  
  # Confirm Millet İttifakı as an organization and political party, find its office
  ?millettifakı dbo:office ?millettifakıOffice ;
               rdf:type dbo:PoliticalParty ;
               dbo:nationality dbr:Turkey .
  ?millettifakı rdfs:label ""Millet İttifakı""@en .

  # Find the administration of Kemal Kılıçdaroğlu and determine the leader's office
  ?kılıçdaroğlu dbo:office ?administration ;
               rdfs:label ""Kemal Kılıçdaroğlu""@en .
  ?leader dbo:office ?kılıçdaroğluLeaderOffice ;
          dbo:positionHeld ?administration .
}
```",7,15,8,3,3,3,3,71,0,0,1,0,0.0,0
645,57,test,"Give me the commander in Battle of Jarama and leader of the office, that is a government agency and an organisation, of Camilo Menéndez Tolosa and military force of the force, that is an event and a military conflict and a societal event, of the native, that is a president and a politician, of Restoration (Spain).",SELECT ?result WHERE { ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. <http://dbpedia.org/resource/Battle_of_Jarama> <http://dbpedia.org/ontology/commander> ?result . ?v5 <http://dbpedia.org/ontology/commander> ?v0 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/President>. ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?v3 <http://dbpedia.org/ontology/leader> ?result . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/GovernmentAgency>. ?result <http://dbpedia.org/ontology/battle> ?v5 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v0 <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Restoration_(Spain)> . <http://dbpedia.org/resource/Camilo_Menéndez_Tolosa> <http://dbpedia.org/property/office> ?v3 . },"```sparql
SELECT ?commander ?leader ?militaryForce ?nativePresident WHERE {
  # Find commander in Battle of Jarama
  ?battle dbo:commander ?commander .
  ?battle rdfs:label ""Battle of Jarama""@en .

  # Find leader of the office associated with Camilo Menéndez Tolosa
  ?office dbo:leader ?leader .
  ?camilo dbo:position ?office .
  ?camilo rdfs:label ""Camilo Menéndez Tolosa""@en .
  
  # Ensure the office is a government agency or organization
  FILTER (regex(str(?office), ""government|organization"", ""i""))

  # Find military force associated with Battle of Jarama
  ?battle dbo:militaryForce ?militaryForce .

  # Determine native president during Restoration (Spain)
  ?restoration dbo:president ?nativePresident .
  ?restoration rdfs:label ""Restoration (Spain)""@en .
  
  # Ensure the native president is a politician
  FILTER (?nativePresident rdf:type dbo:Politician)
}
```",6,13,7,3,3,3,3,71,0,0,1,0,0.0,0
892,65,test,"Give me the entity in the administration, that is Italian and a region and a settlement and an administrative region, of Democratic Party (Italy) and landmark at elevation of the award of the member of E-girls and entity in the profession of Henri Crolla.",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/country> ?v2 . ?v1 <http://dbpedia.org/property/awards> ?v5 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Region>. ?v0 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Italy>. ?result <http://dbpedia.org/ontology/elevation> ?v5 . ?v0 <http://dbpedia.org/property/leaderParty> <http://dbpedia.org/resource/Democratic_Party_(Italy)> . <http://dbpedia.org/resource/E-girls> <http://dbpedia.org/ontology/bandMember> ?v1 . ?result <http://dbpedia.org/ontology/province> ?v0 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. <http://dbpedia.org/resource/Henri_Crolla> <http://dbpedia.org/property/occupation> ?v2 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/AdministrativeRegion>. },"```sparql
SELECT ?entity WHERE {
  # Democratic Party (Italy) related entity
  ?dpParty dbo:member ?adminEntity .
  ?dpParty rdfs:label ""Democratic Party (Italy)""@en .

  # Entity must be Italian, a region, a settlement, and an administrative region
  ?adminEntity rdf:type dbo:Region ;
               rdf:type dbo:Settlement ;
               rdf:type dbo:AdministrativeRegion ;
               dbo:country dbr:Italy .

  # Landmark at specific elevation
  OPTIONAL {
    ?landmark dbo:elevation ?elevation .
    ?entity dbo:location ?landmark .
    FILTER (?elevation > 0)  # Assuming we need a positive elevation
  }

  # Award of E-girls member
  OPTIONAL {
    ?award dbo:recipient ?eeMember .
    ?eeMember rdf:type dbo:E-girl .
    ?entity dbo:relatedTo ?award .
  }

  # Profession of Henri Crolla
  OPTIONAL {
    ?hCrolla dbo:profession ?profession .
    ?hCrolla rdfs:label ""Henri Crolla""@en .
    ?entity dbo:relatedTo ?profession .
  }
}
```",7,11,8,3,3,3,3,71,0,0,2,0,0.0,0
83,20,test,"Give me the ruling party in the birthplace, that is a town and Brazilian and a soccer club, of the member, that is a sports manager, of Kedah FA and party of the governor of the commander, that is a politician, in Central African Republic Civil War.",SELECT ?result WHERE { ?v2 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Brazil>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerClub>. ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v2 <http://dbpedia.org/property/leaderParty> ?result . ?v5 <http://dbpedia.org/ontology/party> ?result . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Town>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsManager>. ?v4 <http://dbpedia.org/property/governor> ?v5 . <http://dbpedia.org/resource/Central_African_Republic_Civil_War> <http://dbpedia.org/ontology/commander> ?v4 . ?v1 <http://dbpedia.org/ontology/birthPlace> ?v2 . ?v1 <http://dbpedia.org/ontology/team> <http://dbpedia.org/resource/Kedah_FA> . },"```sparql
SELECT ?rulingParty WHERE {
  # Step 1: Identify the sports manager member of Kedah FA
  ?manager dbo:memberOf ?kedahFA .
  ?kedahFA rdfs:label ""Kedah FA""@en .

  # Step 2: Determine the birthplace, which is a Brazilian town with a soccer club
  ?manager dbo:birthPlace ?town .
  ?town dbo:country dbc:Brazil .
  ?town dbo:sportTeam ?soccerClub .
  
  # Step 3: Find the ruling party in this town
  ?town dbo:rulingParty ?rulingParty .

  # Step 4: Identify the governor's commander involved in the Central African Republic Civil War
  ?commander dbo:role ""Commander""@en ;
             dbo:inEvent dbc:Central_African_Republic_Civil_War .
  
  # Step 5: Determine the political party of the governor
  ?governor dbo:politicalAffiliation ?party .
  ?governor dbo:commands ?command",6,11,7,3,2,3,2,20,0,0,1,0,0.0,0
715,68,test,"Give me the commander in the force, that is a military conflict, of the native of Morocco and leader of the office, that is a government agency and an organisation, of Carlos Franco Iribarnegaray and commander in the force of the mayor, that is an office holder and a politician and a president, of 1933 Spanish general election.",SELECT ?result WHERE { ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. <http://dbpedia.org/resource/1933_Spanish_general_election> <http://dbpedia.org/property/leader> ?v0 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/President>. ?v4 <http://dbpedia.org/ontology/commander> ?result . ?v4 <http://dbpedia.org/ontology/commander> ?v5 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v5 <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Morocco> . ?v7 <http://dbpedia.org/ontology/commander> ?v0 . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v7 <http://dbpedia.org/ontology/commander> ?result . <http://dbpedia.org/resource/Carlos_Franco_Iribarnegaray> <http://dbpedia.org/property/office> ?v3 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/GovernmentAgency>. ?v3 <http://dbpedia.org/ontology/leader> ?result . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. },"```sparql
SELECT ?commander WHERE {
  # Carlos Franco Iribarnegaray's military conflict
  ?franco dbo:occupation ""Military Commander"" .
  ?franco dbo:nationality dbc:Morocco .
  ?conflict dbo:commander ?franco .
  
  # Native of Morocco in a government agency/organization
  ?moroccan dbo:nationality dbc:Morocco .
  ?agency dbo:leader ?moroccan .
  ?conflict2 dbo:commander ?moroccan .

  # Mayor from the 1933 Spanish General Election
  ?mayor dbo:electedDuring ""1933 Spanish general election"" .
  ?mayor dbo:occupation ""Mayor"" .
  ?conflict3 dbo:commander ?mayor .

  # Find common commander
  FILTER (?franco = ?moroccan || ?franco = ?mayor || ?moroccan = ?mayor)
  BIND(?commander AS ?commonCommander)
}
```",8,14,9,3,3,3,3,71,0,0,1,0,0.0,0
839,64,test,"Give me the band of the person born, that is a musical artist, as the persona of Kevin Russell (musician) and band of Peter Schorowsky and band of the band, that is a musical artist, of the professional in Musician.","SELECT ?result WHERE { ?v2 <http://dbpedia.org/property/birthName> ?v3 . ?v0 <http://dbpedia.org/ontology/associatedMusicalArtist> ?v1 . <http://dbpedia.org/resource/Kevin_Russell_(musician)> <http://xmlns.com/foaf/0.1/givenName> ?v3 . ?result <http://dbpedia.org/ontology/bandMember> ?v1 . ?v2 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?v0 <http://dbpedia.org/property/occupation> ""Musician""@en . ?result <http://dbpedia.org/ontology/bandMember> <http://dbpedia.org/resource/Peter_Schorowsky> . }","```sparql
SELECT ?kevinRussellBand ?peterSchorowskyBand ?bandOfBand WHERE {
  # Find Kevin Russell and his associated band
  ?kevinRussell dbo:birthPlace ?place .
  ?kevinRussell rdfs:label ""Kevin Russell (musician)""@en .
  OPTIONAL { 
    ?kevinRussell dbo:member ?band .
    ?band rdfs:label ?kevinRussellBand .
  }

  # Find Peter Schorowsky and his associated band
  ?peterSchorowsky dbo:birthPlace ?place2 .
  ?peterSchorowsky rdfs:label ""Peter Schorowsky""@en .
  OPTIONAL { 
    ?peterSchorowsky dbo:member ?band2 .
    ?band2 rdfs:label ?peterSchorowskyBand .
  }

  # Find a band that is a musical artist and its associated band
  ?professionalMusician dbo:birthPlace ?place3 .
  ?professionalMusician rdfs:label ""Professional Musician""@en .
  OPTIONAL { 
    ?bandArtist dbo:type dbr:Musical_Artist .
    ?bandArtist dbo:member ?subBand .
    ?subBand rdfs:label ?bandOfBand .
  }
}
```",7,9,8,3,3,3,3,71,0,0,1,0,0.0,0
582,57,test,"Give me the reference to Japan and player in the father, that is an athlete and a soccer manager and a sports manager, of the child of Kazuaki Nagasawa and figure known as the nickname of Japan national football team.","SELECT ?result WHERE { ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsManager>. ?result <http://xmlns.com/foaf/0.1/name> ""Japan""@en . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerManager>. ?v0 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Kazuaki_Nagasawa> . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Athlete>. ?v0 <http://dbpedia.org/property/father> ?v5 . ?result <http://dbpedia.org/property/nickname> ?v3 . ?v5 <http://dbpedia.org/ontology/team> ?result . <http://dbpedia.org/resource/Japan_national_football_team> <http://dbpedia.org/property/nickname> ?v3 . }","```sparql
SELECT ?father WHERE {
  # Find Kazuaki Nagasawa
  ?nagasawa rdfs:label ""Kazuaki Nagasawa""@en .
  
  # Identify his child
  ?child dbo:parent ?nagasawa .

  # Find the father of this child who is an athlete, soccer manager, and sports manager
  ?father dbo:child ?child .
  ?father dbo:occupation ?athleteRole .
  ?father dbo:occupation ?soccerManagerRole .
  ?father dbo:occupation ?sportsManagerRole .

  FILTER (
    str(?athleteRole) = ""Athlete""@en &&
    str(?soccerManagerRole) = ""Soccer manager""@en &&
    str(?sportsManagerRole) = ""Sports manager""@en
  )

  # Ensure the father has a connection to Japan
  ?father dbo:country dbr:Japan .
}
```",6,9,7,3,3,3,3,71,0,0,1,0,0.0,0
791,67,test,"Give me the father of the child, that is a royalty, of the father, that is a royalty and an office holder, of Emperor Antoku and spouse of Taira no Tokuko and predecessor of the child of the child, that is an office holder and a royalty, of Emperor Go-Shirakawa.",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/successor> ?v6 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v0 <http://dbpedia.org/ontology/parent> <http://dbpedia.org/resource/Emperor_Go-Shirakawa> . ?v3 <http://dbpedia.org/property/father> ?v1 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?result <http://dbpedia.org/ontology/spouse> <http://dbpedia.org/resource/Taira_no_Tokuko> . ?v6 <http://dbpedia.org/property/father> ?v0 . <http://dbpedia.org/resource/Emperor_Antoku> <http://dbpedia.org/property/father> ?v1 . ?v3 <http://dbpedia.org/property/father> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. },"```sparql
SELECT ?father WHERE {
  # Find Emperor Antoku and his father who is royalty and an office holder
  ?antoku dbo:parent ?father .
  ?antoku rdfs:label ""Emperor Antoku""@en .
  
  # Ensure the father is royalty and has held an office
  ?father rdf:type dbo:Monarch .
  ?officeHolder dbo:positionHeld ?office .
  FILTER EXISTS { ?father ?office . }

  # Find the child of this father who is royalty
  ?child dbo:parent ?father .
  ?child rdf:type dbo:Monarch .

  # Identify the grandchild (child of the above child) who is both royalty and an office holder
  ?grandChild dbo:parent ?child .
  ?grandChild rdf:type dbo:Monarch .
  FILTER EXISTS { ?grandChild dbo:positionHeld ?office . }

  # Find the predecessor of this grandchild
  OPTIONAL {
    ?predecessor dbo:successor ?grandChild .
  }
}
```",7,12,8,3,3,3,3,71,0,0,1,0,0.0,0
933,62,test,"Give me the reference to the birth name of the professional in Musician and band of the band of the band, that is an artist and a musical artist, of The Ramong Sound and band of The Ramong Sound.",SELECT ?result WHERE { ?result <http://xmlns.com/foaf/0.1/name> ?v5 . ?v1 <http://dbpedia.org/property/occupation> <http://dbpedia.org/resource/Musician> . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. ?v1 <http://dbpedia.org/property/birthName> ?v5 . <http://dbpedia.org/resource/The_Ramong_Sound> <http://dbpedia.org/ontology/associatedMusicalArtist> ?v4 . <http://dbpedia.org/resource/The_Ramong_Sound> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v2 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v4 <http://dbpedia.org/ontology/associatedMusicalArtist> ?v2 . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. },"```sparql
SELECT DISTINCT ?birthName WHERE {
  ?band rdfs:label ""The Ramones""@en .
  ?musician dbo:member ?band .
  ?musician foaf:name ?name .
  ?musician dbo:birthName ?birthName .
}
```",7,9,8,3,3,3,3,71,0,0,1,0,0.0,0
573,69,test,"Give me the person decedent at the administration, that is a region, of the real name of Charlie Baker (Australian footballer) and parent of the author, that is a politician and an office holder, of the work of John Quincy Adams and person decedent at the residence, that is a settlement, of William J. Phelan.",SELECT ?result WHERE { ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Region>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v7 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. ?result <http://dbpedia.org/ontology/deathPlace> ?v7 . ?v2 <http://dbpedia.org/ontology/parent> ?result . ?v1 <http://dbpedia.org/property/author> ?v2 . ?result <http://dbpedia.org/ontology/deathPlace> ?v3 . ?v3 <http://dbpedia.org/property/governor> ?v4 . <http://dbpedia.org/resource/Charlie_Baker_(Australian_footballer)> <http://xmlns.com/foaf/0.1/name> ?v4 . ?v1 <http://dbpedia.org/property/author> <http://dbpedia.org/resource/John_Quincy_Adams> . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. <http://dbpedia.org/resource/William_J._Phelan> <http://dbpedia.org/property/residence> ?v7 . },"```sparql
SELECT ?personDecedentAtAdmin ?parentOfAuthor ?personDecedentAtResidence WHERE {
  # Find Charlie Baker and his real name
  ?charlieBaker dbo:realName ?realName .
  ?charlieBaker rdfs:label ""Charlie Baker (Australian footballer)""@en .

  # Find the region where this person was decedent at an administration
  ?realName dbo:decedentAtAdministration ?adminRegion .
  ?adminRegion rdf:type dbo:AdministrativeRegion .

  # Identify John Quincy Adams' work and its author who is a politician and office holder
  ?work dbo:author ?author .
  ?work rdfs:label ""Work of John Quincy Adams""@en .
  ?author rdf:type dbo:Politician ;
          dbo:officeHolder ?office .

  # Find the parent of this author
  ?author dbo:parent ?parentOfAuthor .

  # Find William J. Phelan's residence, which is a settlement
  ?williamJPhelan dbo:residence ?settlement .
  ?williamJPhelan",8,12,9,3,3,3,3,71,0,0,2,0,0.0,0
978,18,test,"Give me the band member of the professional, that is a musical artist and an artist, in the award of Michel Claparède and band member of the person born as Nicholas Bracegirdle.","SELECT ?result WHERE { ?v2 <http://dbpedia.org/property/occupation> ?v1 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. <http://dbpedia.org/resource/Michel_Claparède> <http://dbpedia.org/property/awards> ?v1 . ?v3 <http://dbpedia.org/property/birthName> ""Nicholas Bracegirdle""@en . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?result <http://dbpedia.org/ontology/associatedMusicalArtist> ?v3 . ?result <http://dbpedia.org/ontology/associatedMusicalArtist> ?v2 . }","```sparql
SELECT ?bandMember WHERE {
  # Identify the professional who is both a musical artist and an artist
  ?professional dbo:occupation dbp:musical_artist .
  ?professional dbo:occupation dbp:artist .

  # Find any award associated with Michel Claparède involving this professional
  OPTIONAL { 
    ?award dbo:recipient ?professional .
    ?award dbo:name ""Michel Claparède""@en .
  }

  # Identify the person born as Nicholas Bracegirdle (Nick Mason)
  ?nickMason foaf:name ""Nicholas Bracegirdle""@en ;
             dbo:birthName ""Nicholas Bracegirdle""@en .

  # Find band members of Nick Mason
  ?bandMember dbo:memberOf ?band .
  ?nickMason dbo:memberOf ?band .

  # Find common band member with the professional
  OPTIONAL {
    ?professional dbo:memberOf ?band .
    FILTER (?band = ?band)
  }
}
```",5,7,6,3,2,3,2,20,0,0,2,0,0.0,0
433,67,test,"Give me the associated musical artist of Paul Chambers and associated musical artist of the associated musical artist, that is an artist and a musical artist, of the associated musical artist, that is a musical artist and an artist, of Ornette Coleman and professional in the profession of the writer of Slowhand at 70 – Live at the Royal Albert Hall.",SELECT ?result WHERE { <http://dbpedia.org/resource/Slowhand_at_70_–_Live_at_the_Royal_Albert_Hall> <http://dbpedia.org/property/writer> ?v1 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?v6 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v0 <http://dbpedia.org/ontology/associatedMusicalArtist> ?v6 . ?v6 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. <http://dbpedia.org/resource/Paul_Chambers> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?result <http://dbpedia.org/property/occupation> ?v3 . ?v1 <http://dbpedia.org/property/occupation> ?v3 . ?v6 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. <http://dbpedia.org/resource/Ornette_Coleman> <http://dbpedia.org/ontology/associatedMusicalArtist> ?v0 . },"```sparql
SELECT ?finalArtist WHERE {
  # Step 1: Find an associated musical artist of Paul Chambers
  ?paulChambers dbo:musicalArtist ?artist1 .
  ?paulChambers rdfs:label ""Paul Chambers""@en .

  # Step 2: Find the associated musical artist of that artist
  ?artist1 dbo:musicalArtist ?artist2 .

  # Step 3: Find an associated musical artist of Ornette Coleman
  ?ornetteColeman dbo:musicalArtist ?artist3 .
  ?ornetteColeman rdfs:label ""Ornette Coleman""@en .

  # Step 4: Find the associated musical artist of that artist
  ?artist3 dbo:musicalArtist ?artist4 .

  # Step 5: Identify the writer of ""Slowhand at 70 – Live at the Royal Albert Hall"" and their profession
  ?work dbo:author ?writer .
  ?work rdfs:label ""Slowhand at 70 – Live at the Royal Albert Hall""@en .
  ?writer dbo:profession ?profession .

  # Step 6: Find a professional in that profession who is also an artist and musical artist
  ?finalArtist dbo:profession ?profession ;
               rdf:type dbo:MusicalArtist, dbo:Artist .

  # Ensure finalArtist matches both chains of associations
  FILTER (?artist2 = ?finalArtist && ?artist4 = ?finalArtist)
}
```",7,11,8,3,3,3,3,71,0,0,4,0,0.0,0
456,68,test,"Give me the spouse of the actor of the movie, that is a work and a television show, with Ross Newton and band of the band, that is a musical artist, of Dean Brody and professional in the alter ego of the reference, that is a fictional character, to Lamont Cranston (radio, film and television).","SELECT ?result WHERE { ?v3 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v4 <http://dbpedia.org/ontology/spouse> ?result . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/FictionalCharacter>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?result <http://dbpedia.org/property/occupation> ?v7 . <http://dbpedia.org/resource/Dean_Brody> <http://dbpedia.org/ontology/associatedMusicalArtist> ?v3 . ?v5 <http://dbpedia.org/property/starring> ?v4 . ?v5 <http://dbpedia.org/property/starring> <http://dbpedia.org/resource/Ross_Newton> . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/TelevisionShow>. ?v0 <http://xmlns.com/foaf/0.1/name> ""Lamont Cranston (radio, film and television)""@en . ?v0 <http://dbpedia.org/property/alterEgo> ?v7 . }","```sparql
SELECT ?spouse WHERE {
  # Ross Newton's work that is both a movie and TV show
  ?work dbo:actorRossNewton dbp:Ross_Newton .
  ?work rdf:type dbo:Film .
  ?work rdf:type dbo:TelevisionShow .

  # Dean Brody's band
  ?band dbo:musicalArtistDeanBrody dbp:Dean_Brody .
  
  # Actor associated with both Ross Newton's work and Dean Brody's band
  ?actor dbo:actedIn ?work .
  ?actor dbo:memberOfBand ?band .

  # Lamont Cranston's alter ego (The Shadow)
  ?alterEgo rdfs:label ""The Shadow""@en .
  ?alterEgo dbo:referenceLamontCranston dbp:Lamont_Cranston .

  # Professional connection to The Shadow
  ?actor dbo:professionalIn ?alterEgo .

  # Find the spouse of this actor
  ?actor dbo:spouse ?spouse .
}
```",8,12,9,3,3,3,3,71,0,0,1,0,0.0,0
826,71,test,"Give me the spouse of the child of the father of Anna Magdalena Appel and successor of the child, that is a royalty, of the reference, that is a royalty, to Louis I and predecessor of the parent of the child of Louis IV, Grand Duke of Hesse.","SELECT ?result WHERE { <http://dbpedia.org/resource/Anna_Magdalena_Appel> <http://dbpedia.org/property/father> ?v1 . ?v2 <http://dbpedia.org/ontology/spouse> ?result . ?v4 <http://xmlns.com/foaf/0.1/name> ""Louis I""@en . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v2 <http://dbpedia.org/property/father> ?v1 . ?v7 <http://dbpedia.org/ontology/parent> <http://dbpedia.org/resource/Louis_IV,_Grand_Duke_of_Hesse> . ?v4 <http://dbpedia.org/ontology/child> ?v5 . ?v5 <http://dbpedia.org/ontology/successor> ?result . ?v7 <http://dbpedia.org/ontology/parent> ?v8 . ?result <http://dbpedia.org/ontology/successor> ?v8 . }","```sparql
SELECT ?spouse WHERE {
  # Find Anna Magdalena Bach and her father
  ?annaMagdalena dbo:parent ?father .
  ?annaMagdalena rdfs:label ""Anna Magdalena Bach""@en .

  # Identify Johann Sebastian Bach as the child of Anna Magdalena's father
  ?child dbo:parent ?father .
  ?child rdfs:label ""Johann Sebastian Bach""@en .

  # Find the successor of Johann Sebastian Bach (likely his son, Carl Philipp Emanuel Bach)
  OPTIONAL {
    ?successor dbo:predecessor ?child .
    FILTER (?successor != ?child)
  }

  # Identify a royalty related to Louis I and find their predecessor
  ?royalty dbo:reference ?louisI .
  ?louisI rdfs:label ""Louis I, Grand Duke of Hesse""@en .
  OPTIONAL {
    ?predecessor dbo:succesor ?royalty .
  }

  # Locate the parent of the child of Louis IV, Grand Duke of Hesse
  ?childOfLouisIV dbo:parent ?parent .
  ?childOfLouisIV rdfs:label ""Child of Louis IV""@en .
  ?louisIV rdfs:label ""Louis IV, Grand Duke of Hesse""@en .

  # Find the spouse of the successor who is a royalty related to the predecessor
  OPTIONAL {
    ?successor dbo:spouse ?spouse .
    FILTER (regex(str(?spouse), ""royalty"", ""i""))
  }
}
```",9,11,10,3,3,3,3,71,0,0,1,0,0.0,0
935,18,test,"Give me the death place of the awardee of the award, that is an award, of Syed Sohail Hussain Naqvi and headquarter of the office of Sanaullah Khan Zehri.",SELECT ?result WHERE { <http://dbpedia.org/resource/Sanaullah_Khan_Zehri> <http://dbpedia.org/property/office> ?v3 . ?v3 <http://dbpedia.org/ontology/location> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Award>. ?v2 <http://dbpedia.org/ontology/deathPlace> ?result . <http://dbpedia.org/resource/Syed_Sohail_Hussain_Naqvi> <http://dbpedia.org/property/awards> ?v1 . ?v2 <http://dbpedia.org/property/awards> ?v1 . },"```sparql
# Part 1: Find the death place of an awardee associated with Syed Sohail Hussain Naqvi's award
SELECT ?deathPlace WHERE {
  # Assuming we have a known award related to Syed Sohail Hussain Naqvi
  ?award dbo:recipient ?naqvi .
  ?naqvi rdfs:label ""Syed Sohail Hussain Naqvi""@en .

  # Find another awardee of the same award and their death place
  ?award dbo:recipient ?otherAwardee .
  ?otherAwardee dbo:deathPlace ?deathPlace .
}

# Part 2: Find the headquarters of Sanaullah Khan Zehri's office
SELECT ?headquarters WHERE {
  # Assuming we have an office related to Sanaullah Khan Zehri
  ?office dbo:headquarter ?headquarters .
  ?office dbo:member ?zehri .
  ?zehri rdfs:label ""Sanaullah Khan Zehri""@en .
}
```",5,6,6,3,2,3,2,20,0,0,1,0,0.0,0
773,67,test,"Give me the parent of the child, that is a royalty, of the father, that is an office holder and a royalty, of Carloman of Bavaria and parent of the successor of the child, that is a royalty, of Louis the Pious and spouse of Louis the German.",SELECT ?result WHERE { <http://dbpedia.org/resource/Louis_the_Pious> <http://dbpedia.org/ontology/child> ?v0 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. <http://dbpedia.org/resource/Carloman_of_Bavaria> <http://dbpedia.org/property/father> ?v1 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?result <http://dbpedia.org/ontology/child> ?v6 . ?v0 <http://dbpedia.org/ontology/successor> ?v6 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. <http://dbpedia.org/resource/Louis_the_German> <http://dbpedia.org/ontology/spouse> ?result . ?v3 <http://dbpedia.org/property/father> ?v1 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v3 <http://dbpedia.org/ontology/parent> ?result . },"```sparql
SELECT ?parent WHERE {
  # Carloman of Bavaria's father (office holder and royalty)
  ?carloman dbo:father ?father .
  ?carloman rdfs:label ""Carloman, Duke of Bavaria""@en .
  
  # Ensure the father is an office holder and royalty
  ?father rdf:type/rdfs:subClassOf* dbpedia-owl:Monarch .
  ?father rdf:type/rdfs:subClassOf* dbpedia-owl:GovernmentOfficial .

  # Child (royalty) of Carloman's father
  ?child dbo:parent ?father .
  ?child rdf:type/rdfs:subClassOf* dbpedia-owl:Monarch .

  # Louis the Pious' successor and their royal child
  ?successor dbo:succeededBy ?louisThePious .
  ?louisThePious rdfs:label ""Louis the Pious""@en .
  
  ?royalChild dbo:parent ?successor .
  ?royalChild rdf:type/rdfs:subClassOf* dbpedia-owl:Monarch .

  # Louis the German's spouse
  ?louisGerman dbo:spouse ?spouse .
  ?louisGerman rdfs:label ""Louis the German""@en .

  # Parent of the royal child of Louis the Pious' successor
  ?royalChildParent dbo:parent ?royalChild .
  
  # Ensure the parent is the same as Carloman's father's child
  FILTER (?child = ?royalChildParent)
}
```",7,11,8,3,3,3,3,71,0,0,1,0,0.0,0
926,58,test,"Give me the child of the father, that is a royalty, of the parent, that is a royalty, of Beyhan Sultan (daughter of Mustafa III) and father of Mahmud II and successor of the child of Ahmed III.",SELECT ?result WHERE { <http://dbpedia.org/resource/Beyhan_Sultan_(daughter_of_Mustafa_III)> <http://dbpedia.org/ontology/parent> ?v4 . ?v4 <http://dbpedia.org/property/father> ?v0 . ?v5 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Ahmed_III> . <http://dbpedia.org/resource/Mahmud_II> <http://dbpedia.org/property/father> ?result . ?v0 <http://dbpedia.org/ontology/child> ?result . ?v5 <http://dbpedia.org/ontology/successor> ?result . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. },"```sparql
SELECT ?child WHERE {
  # Beyhan Sultan's parent (Mustafa III)
  ?beyhanSultan dbo:parent ?mustafaIII .
  ?beyhanSultan rdfs:label ""Beyhan Sultan""@en .

  # Mustafa III's father (Ahmet III)
  ?mustafaIII dbo:parent ?ahmetIII .
  
  # Ahmet III's child who is royalty
  ?ahmetIII dbo:child ?royaltyChild .
  
  # Mahmud II, child of Mustafa III
  ?mahmudII dbo:parent ?mustafaIII .
  ?mahmudII rdfs:label ""Mahmud II""@en .

  # Abdul Hamid I succeeded Mustafa III (successor of Ahmed III's child)
  ?abdulHamidI dbo:succeededBy ?mustafaIII .
  
  # Find the child of Ahmet III who is royalty and fits the criteria
  FILTER (?royaltyChild = ?mahmudII)
}
```",6,8,7,3,3,3,3,71,0,0,1,0,0.0,0
826,66,test,"Give me the spouse of the child of Johann Heinrich Appel and predecessor of the parent of the child of Louis IV, Grand Duke of Hesse and successor of the child, that is a royalty, of Louis I, Grand Duke of Hesse.","SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/parent> ?v2 . ?v3 <http://dbpedia.org/property/father> ""Johann Heinrich Appel""@en . ?result <http://dbpedia.org/ontology/successor> ?v2 . ?v6 <http://dbpedia.org/ontology/successor> ?result . ?v1 <http://dbpedia.org/ontology/parent> <http://dbpedia.org/resource/Louis_IV,_Grand_Duke_of_Hesse> . ?v6 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v3 <http://dbpedia.org/ontology/spouse> ?result . <http://dbpedia.org/resource/Louis_I,_Grand_Duke_of_Hesse> <http://dbpedia.org/ontology/child> ?v6 . }","```sparql
SELECT ?spouse WHERE {
  # Find the child of Johann Heinrich Appel
  ?appelChild dbo:parent ?johannHeinrichAppel .
  ?johannHeinrichAppel rdfs:label ""Johann Heinrich Appel""@en .

  # Find the spouse of this child
  ?appelChild dbo:spouse ?spouse .

  # Find the parent of the child of Louis IV, Grand Duke of Hesse
  ?louisIVChild dbo:parent ?parentOfLouisIVChild .
  ?louisIV rdfs:label ""Louis IV, Grand Duke of Hesse""@en .
  ?louisIV dbo:child ?louisIVChild .

  # Find the predecessor of this parent
  ?predecessor dbo:succeededBy ?parentOfLouisIVChild .

  # Find the child of Louis I, Grand Duke of Hesse
  ?louisIChild dbo:parent ?louisI .
  ?louisI rdfs:label ""Louis I, Grand Duke of Hesse""@en .

  # Find the successor of this child that is royalty
  ?successor dbo:predecessor ?louisIChild .
  FILTER (regex(str(?successor), ""royalty"", ""i""))

  # Ensure all conditions are met for the spouse
  FILTER (?spouse = ?",7,8,8,3,3,3,3,71,0,0,1,0,0.0,0
353,8,test,"Give me the entity in the country of Moskovsky City District, Nizhny Novgorod and alma mater of Daniil Yegorov.","SELECT ?result WHERE { <http://dbpedia.org/resource/Moskovsky_City_District,_Nizhny_Novgorod> <http://dbpedia.org/ontology/country> ?v1 . ?result <http://dbpedia.org/ontology/country> ?v1 . <http://dbpedia.org/resource/Daniil_Yegorov> <http://dbpedia.org/ontology/almaMater> ?result . }","```sparql
SELECT ?institution WHERE {
  # Find educational institution in Moskovsky City District, Nizhny Novgorod
  ?institution dbo:location dbr:Moskovsky_City_District .
  ?institution rdf:type dbo:EducationalInstitution .

  # Find alma mater of Daniil Yegorov
  OPTIONAL {
    ?yegorov foaf:name ""Daniil Yegorov""@en .
    ?yegorov dbo:almaMater ?institution .
  }
}
```",3,3,4,2,2,2,2,9,0,0,1,0,0.0,0
826,65,test,"Give me the spouse of the child of Johann Heinrich Appel and successor of the child, that is a royalty, of the reference, that is a royalty, to Louis I and predecessor of the parent of Prince Friedrich of Hesse and by Rhine.","SELECT ?result WHERE { ?v0 <http://dbpedia.org/ontology/child> ?v6 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v4 <http://dbpedia.org/property/father> ""Johann Heinrich Appel""@en . ?v6 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v4 <http://dbpedia.org/ontology/spouse> ?result . ?v0 <http://xmlns.com/foaf/0.1/name> ""Louis I""@en . <http://dbpedia.org/resource/Prince_Friedrich_of_Hesse_and_by_Rhine> <http://dbpedia.org/ontology/parent> ?v3 . ?result <http://dbpedia.org/ontology/successor> ?v3 . ?v6 <http://dbpedia.org/ontology/successor> ?result . }","```sparql
SELECT ?spouseSuccessor WHERE {
  # Johann Heinrich Appel's child
  ?appelChild dbo:parent ""Johann Heinrich Appel""@en .
  
  # Spouse of Johann Heinrich Appel's child
  OPTIONAL { 
    ?appelChild dbo:spouse ?spouse .
  }
  
  # Successor of the spouse who is royalty
  OPTIONAL {
    ?spouse dbo:succ ?successor .
    ?successor rdf:type dbo:Monarch .
  }
  
  # Reference to Louis I that is royalty
  OPTIONAL {
    ?reference dbo:parent ""Louis I, Landgrave of Hesse""@en .
    ?reference rdf:type dbo:Monarch .
  }
  
  # Predecessor of the parent of Prince Friedrich
  OPTIONAL {
    ?friedrichParent dbo:child ""Prince Friedrich of Hesse and by Rhine""@en .
    ?predecessor dbo:succ ?friedrichParent .
    ?predecessor rdf:type dbo:Monarch .
  }
}
```",7,9,8,3,3,3,3,71,0,0,1,0,0.0,0
158,19,test,"Give me the entity in the award, that is a country, of Adelbert Cronkhite and party of the successor, that is a prime minister and an office holder and a politician, of the person deceased, that is an office holder and a politician, on 1945-09-15.","SELECT ?result WHERE { ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. ?v0 <http://dbpedia.org/ontology/deathDate> ""1945-09-15""^^<http://www.w3.org/2001/XMLSchema#date> . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. <http://dbpedia.org/resource/Adelbert_Cronkhite> <http://dbpedia.org/property/awards> ?v2 . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/PrimeMinister>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v4 <http://dbpedia.org/ontology/party> ?result . ?v0 <http://dbpedia.org/ontology/successor> ?v4 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?result <http://dbpedia.org/ontology/country> ?v2 . }","```sparql
SELECT ?country ?party WHERE {
  # Find Adelbert Cronkhite's award and its country
  ?cronkhite dbo:award ?award .
  ?cronkhite rdfs:label ""Adelbert Cronkhite""@en .
  ?award dbo:country ?country .

  # Find the deceased person on 1945-09-15 who was an office holder and politician
  ?deceased dbo:dateOfDeath ?deathDate ;
            a dbo:Politician, dbo:OfficeHolder .
  FILTER (YEAR(?deathDate) = 1945 && MONTH(?deathDate) = 9 && DAY(?deathDate) = 15)

  # Find the successor who is a prime minister, office holder, and politician
  ?deceased dbo:successor ?successor .
  ?successor a dbo:PrimeMinister, dbo:OfficeHolder, dbo:Politician ;
             dbo:party ?party .
}
```",5,11,6,3,2,3,2,20,0,0,1,0,0.0,0
36,25,test,"Give me the person born in the birth year of Deanne Bray and person born as Ayo Makun and actor of the claim to fame, that is a film, of Lepacious Bose.","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/birthYear> ?v1 . ?v4 <http://dbpedia.org/ontology/starring> ?result . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Film>. ?result <http://dbpedia.org/property/birthName> ""Ayo Makun""@en . <http://dbpedia.org/resource/Deanne_Bray> <http://dbpedia.org/ontology/birthYear> ?v1 . <http://dbpedia.org/resource/Lepacious_Bose> <http://dbpedia.org/ontology/knownFor> ?v4 . }","```sparql
SELECT ?personBornSameYear ?ayoMakunPerson ?actorInFilm WHERE {
  # Find Deanne Bray's birth year
  ?deanneBray dbo:birthDate ?birthDate .
  ?deanneBray rdfs:label ""Deanne Bray""@en .

  # Extract the year from the birth date
  BIND(YEAR(?birthDate) AS ?birthYear)

  # Find a person born in the same year as Deanne Bray
  ?personBornSameYear dbo:birthDate ?sameBirthDate .
  FILTER(YEAR(?sameBirthDate) = ?birthYear)
  
  # Identify Ayo Makun by his birth name
  ?ayoMakunPerson rdfs:label ""Ayo Makun""@en .
  ?ayoMakunPerson dbo:birthName ""Ayo Makun""@en .

  # Find Lepacious Bose's claim to fame (film)
  ?lepaciousBose dbo:claimToFame ?film .
  ?lepaciousBose rdfs:label ""Lepacious Bose""@en .

  # Find an actor in that film
  ?film dbo:actor ?actorInFilm .
}
```",5,6,6,2,3,2,3,28,0,0,1,0,0.0,0
987,62,test,"Give me the entity in Montenegro and birth place of the band, that is an artist and a musical artist, of the band, that is an artist, of Dado Polumenta and birth place of the actor of the show, that is a film, with Emir Hadžihafizbegović.",SELECT ?result WHERE { <http://dbpedia.org/resource/Dado_Polumenta> <http://dbpedia.org/ontology/associatedMusicalArtist> ?v4 . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. ?v5 <http://dbpedia.org/ontology/birthPlace> ?result . ?v1 <http://dbpedia.org/property/starring> ?v5 . ?result <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Montenegro> . ?v2 <http://dbpedia.org/ontology/birthPlace> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Film>. ?v4 <http://dbpedia.org/ontology/associatedMusicalArtist> ?v2 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?v1 <http://dbpedia.org/ontology/starring> <http://dbpedia.org/resource/Emir_Hadžihafizbegović> . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. },"```sparql
SELECT ?bandBirthPlace ?actorBirthPlace WHERE {
  # Find Dado Polumenti's band
  ?dado dbo:member ?band .
  ?dado rdfs:label ""Dado Polumenta""@en .
  
  # Ensure the band is an artist and a musical artist
  ?band rdf:type dbp:MusicalArtist ;
        rdf:type dbo:Artist .

  # Find the birth place of the band (location in Montenegro)
  ?band dbo:birthPlace ?bandBirthPlace .
  FILTER EXISTS { ?bandBirthPlace dbo:country dbr:Montenegro }

  # Find a film featuring Emir Hadžihafizbegović
  ?film dbo:starring ?emir .
  ?emir rdfs:label ""Emir Hadžihafizbegović""@en .

  # Ensure the film is recognized as such
  ?film rdf:type dbo:Film .

  # Find an actor from this film
  ?actor dbo:starringIn ?film .
  
  # Determine the birth place of this actor
  ?actor dbo:birthPlace ?actorBirthPlace .
}
```",7,11,8,3,3,3,3,71,0,0,1,0,0.0,0
445,69,test,"Give me the death place of the awardee of Royal Astronomical Society and entity in the residence, that is a country, of the resident, that is an athlete, of Great Britain and entity in the award of the commander in Battle of Saint-Mihiel.",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/country> ?v2 . ?v1 <http://dbpedia.org/property/awards> ?v2 . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Athlete>. <http://dbpedia.org/resource/Battle_of_Saint-Mihiel> <http://dbpedia.org/ontology/commander> ?v1 . ?v4 <http://dbpedia.org/property/residence> ?v3 . ?v7 <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/Royal_Astronomical_Society> . ?result <http://dbpedia.org/ontology/location> ?v3 . ?v7 <http://dbpedia.org/ontology/deathPlace> ?result . ?v4 <http://dbpedia.org/property/residence> <http://dbpedia.org/resource/Great_Britain> . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. },"```sparql
SELECT ?deathPlace ?country ?awardEntity WHERE {
  # Awardee of the Royal Astronomical Society
  ?awardee dbo:awardReceived dbr:Royal_Astronomical_Society .
  
  # Death place of the awardee
  ?awardee dbo:deathPlace ?deathPlace .

  # Country associated with a British athlete's residence
  ?athlete dbo:nationality dbr:United_Kingdom ;
           dbo:residenceLocation ?country .

  # Commander in Battle of Saint-Mihiel and entity in their award
  ?commander dbo:participatedInBattle dbr:Battle_of_Saint-Mihiel .
  ?commander dbo:awardReceived ?award .
  ?award dbo:entity ?awardEntity .
}
```",8,10,9,3,3,3,3,71,0,0,1,0,0.0,0
926,70,test,"Give me the father of the father of Abdulaziz and child of the father, that is a royalty, of the parent, that is a royalty, of Beyhan Sultan (daughter of Mustafa III) and successor of the child of the spouse of Şermi Kadın.",SELECT ?result WHERE { <http://dbpedia.org/resource/Abdulaziz> <http://dbpedia.org/property/father> ?v3 . ?v0 <http://dbpedia.org/ontology/child> ?result . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v1 <http://dbpedia.org/ontology/spouse> <http://dbpedia.org/resource/Şermi_Kadın> . ?v6 <http://dbpedia.org/property/father> ?v1 . ?v5 <http://dbpedia.org/property/father> ?v0 . <http://dbpedia.org/resource/Beyhan_Sultan_(daughter_of_Mustafa_III)> <http://dbpedia.org/ontology/parent> ?v5 . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v6 <http://dbpedia.org/ontology/successor> ?result . ?v3 <http://dbpedia.org/property/father> ?result . },"```sparql
SELECT ?result WHERE {
  # Abdulaziz's father
  ?abdulaziz dbo:parent ?fatherAbdulaziz .
  ?abdulaziz rdfs:label ""Abdülaziz""@en .

  # Abdulaziz's grandfather (Father of his Father)
  ?fatherAbdulaziz dbo:parent ?grandfatherAbdulaziz .

  # Child of the Grandfather that is Royalty
  OPTIONAL {
    ?childGrandfather dbo:parent ?grandfatherAbdulaziz .
    ?childGrandfather rdf:type dbo:Monarch .
  }

  # Beyhan Sultan's parent (Mustafa III)
  ?beyhanSultan dbo:parent ?mustafaIII .
  ?beyhanSultan rdfs:label ""Beyhan Sultan""@en .

  # Şermi Kadın’s spouse and their child
  OPTIONAL {
    ?sermiKadin dbo:spouse ?spouseSermini .
    ?childSpouse dbo:parent ?spouseSermini .
  }

  # Successor of the Child of Şermi Kadın's Spouse
  OPTIONAL {
    ?successor dbo:succeededBy ?childSpouse .
  }
  
  # Combine results to find the final entity
  BIND",8,10,9,3,3,3,3,71,0,0,1,0,0.0,0
978,20,test,"Give me the band member of the professional, that is a musical artist and an artist, in the award of Michel Claparède and band member of the person born as the name of Chicane (musician).",SELECT ?result WHERE { <http://dbpedia.org/resource/Michel_Claparède> <http://dbpedia.org/property/awards> ?v1 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?result <http://dbpedia.org/ontology/associatedMusicalArtist> ?v5 . ?v2 <http://dbpedia.org/property/occupation> ?v1 . <http://dbpedia.org/resource/Chicane_(musician)> <http://xmlns.com/foaf/0.1/givenName> ?v4 . ?result <http://dbpedia.org/ontology/associatedMusicalArtist> ?v2 . ?v5 <http://dbpedia.org/property/birthName> ?v4 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. },"```sparql
SELECT ?bandMember WHERE {
  # Find the award associated with Michel Claparède
  ?award dbo:recipient ?professional .
  ?award rdfs:label ?awardLabel .
  FILTER regex(?awardLabel, ""Michel Claparède"", ""i"")

  # Ensure the professional is both a musical artist and an artist
  ?professional dbo:occupation ?occupation1 .
  ?professional dbo:occupation ?occupation2 .
  FILTER (regex(str(?occupation1), ""musical artist"", ""i"") && regex(str(?occupation2), ""artist"", ""i""))

  # Find Chicane's birth name
  ?chicane foaf:name ""Nick Bracegirdle""@en ;
           dbo:birthName ?birthName .

  # Check if the professional is a band member of Chicane
  ?bandMembership dbo:member ?professional .
  ?bandMembership dbo:group ?chicaneGroup .
  FILTER (?chicaneGroup = ?chicane)

  # Return the band member who meets all criteria
  BIND(?professional AS ?bandMember)
}
```",6,8,7,3,2,3,2,20,0,0,2,0,0.0,0
791,60,test,"Give me the father of the child, that is a royalty, of the father, that is a royalty and an office holder, of Emperor Antoku and spouse of the spouse, that is a royalty, of the reference to Emperor Takakura.","SELECT ?result WHERE { ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. <http://dbpedia.org/resource/Emperor_Antoku> <http://dbpedia.org/property/father> ?v0 . ?result <http://dbpedia.org/ontology/spouse> ?v2 . ?v1 <http://dbpedia.org/property/father> ?v0 . ?v2 <http://dbpedia.org/ontology/spouse> ?v3 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v3 <http://xmlns.com/foaf/0.1/name> ""Emperor Takakura""@en . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v1 <http://dbpedia.org/property/father> ?result . }","```sparql
SELECT ?father WHERE {
  # Find Emperor Antoku and his father who is royalty and an office holder
  ?antoku dbo:parent ?royalFather .
  ?antoku rdfs:label ""Emperor Antoku""@en .
  
  # Ensure the father is royalty and has held an office
  ?royalFather rdf:type dbo:Monarch .
  ?royalFather dbo:officeHolder ?office .

  # Find a child of this royal father who is also royalty
  OPTIONAL {
    ?child dbo:parent ?royalFather .
    ?child rdf:type dbo:Monarch .
  }

  # Identify the spouse of Emperor Takakura who is royalty
  OPTIONAL {
    ?takakura dbo:spouse ?royalSpouse .
    ?takakura rdfs:label ""Emperor Takakura""@en .
    FILTER (regex(str(?royalSpouse), ""Imperial Princess Shushi"", ""i""))
  }

  # Find the father of this royal spouse
  OPTIONAL {
    ?royalSpouse dbo:parent ?father .
    FILTER (regex(str(?royalSpouse), ""Imperial Princess Shushi"", ""i""))
  }
}
```",6,10,7,3,2,3,3,71,0,0,1,0,0.0,0
456,66,test,"Give me the band of the band, that is a musical artist, of the band of Alan Doyle and spouse of the actor of Pacific Drive and professional in the alter ego of The Shadow.",SELECT ?result WHERE { ?result <http://dbpedia.org/property/occupation> ?v6 . ?v3 <http://dbpedia.org/ontology/spouse> ?result . ?v1 <http://dbpedia.org/ontology/associatedMusicalArtist> ?v2 . <http://dbpedia.org/resource/The_Shadow> <http://dbpedia.org/property/alterEgo> ?v6 . <http://dbpedia.org/resource/Alan_Doyle> <http://dbpedia.org/ontology/associatedMusicalArtist> ?v1 . ?v2 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . <http://dbpedia.org/resource/Pacific_Drive> <http://dbpedia.org/property/starring> ?v3 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. },"```sparql
SELECT ?bandOfBand WHERE {
  # Step 1: Identify Alan Doyle's band
  ?doyle dbo:member ?greatBigSea .
  ?greatBigSea rdfs:label ""Great Big Sea""@en .

  # Step 2: Find the band of Alan Doyle's band (if any)
  OPTIONAL { 
    ?greatBigSea dbo:band ?bandOfBand .
  }

  # Step 3: Identify the actor of Pacific Drive
  ?pacificDrive dbo:actor ?actor .
  ?pacificDrive rdfs:label ""Pacific Drive""@en .

  # Step 4: Find the spouse of this actor
  OPTIONAL {
    ?actor dbo:spouse ?spouse .
  }

  # Step 5: Identify the professional alter ego of The Shadow (Lamont Cranston)
  ?shadowAlterEgo rdfs:label ""Lamont Cranston""@en .

  # Step 6: Find any band associated with Lamont Cranston
  OPTIONAL {
    ?shadowAlterEgo dbo:associatedBand ?band .
  }

  # Step 7: Determine the band of the band from step 2
  OPTIONAL {
    ?band dbo:band ?bandOfBand .
  }
}
```",7,8,8,3,3,3,3,71,0,0,1,0,0.0,0
917,62,test,"Give me the parent of the child, that is a royalty, of the mayor of Hawaiian Kingdom and child of Kekūanāoʻa and child of the father of the spouse, that is a royalty, of Leleiohoku I.","SELECT ?result WHERE { ?v2 <http://dbpedia.org/property/father> ?v4 . ?result <http://dbpedia.org/ontology/child> ?v2 . <http://dbpedia.org/resource/Hawaiian_Kingdom> <http://dbpedia.org/property/leader> ?v4 . ?v1 <http://dbpedia.org/ontology/spouse> <http://dbpedia.org/resource/Leleiohoku_I> . ?result <http://dbpedia.org/property/father> ""Kekūanāoʻa""@en . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v1 <http://dbpedia.org/property/father> ?v5 . ?result <http://dbpedia.org/ontology/parent> ?v5 . }","```sparql
SELECT ?parentOfRoyalChild WHERE {
  # Find the mayor of Hawaiian Kingdom and their royal child
  ?mayor dbo:position ""Mayor""@en ;
         dbo:child ?royalChild .
  FILTER (regex(str(?mayor), ""Mayor of Hawaiian Kingdom"", ""i""))
  
  # Ensure the child is royalty
  ?royalChild dbo:parent ?parentOfRoyalChild .
  FILTER EXISTS { ?royalChild dbo:isA dbr:Royalty }

  # Find Kekūanāoʻa's child
  ?kekuanaoa dbo:child ?childOfKekuanaoa .
  FILTER (regex",7,9,8,3,3,3,3,71,0,0,2,0,0.0,0
507,70,test,"Give me the director of the movie, that is a movie and a work, with the person born on 1919-06-17 and professional in the profession of the person born on 1966-02-18 and spouse of the person born as Anne Voase Coates.","SELECT ?result WHERE { ?v0 <http://dbpedia.org/ontology/birthDate> ""1919-06-17""^^<http://www.w3.org/2001/XMLSchema#date> . ?v7 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?v1 <http://dbpedia.org/ontology/birthDate> ""1966-02-18""^^<http://www.w3.org/2001/XMLSchema#date> . ?v1 <http://dbpedia.org/property/occupation> ?v3 . ?result <http://dbpedia.org/ontology/spouse> ?v4 . ?v7 <http://dbpedia.org/ontology/director> ?result . ?result <http://dbpedia.org/property/occupation> ?v3 . ?v7 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Film>. ?v4 <http://dbpedia.org/property/birthName> ""Anne Voase Coates""@en . ?v7 <http://dbpedia.org/property/starring> ?v0 . }","```sparql
SELECT ?director WHERE {
  # Person born on 1919-06-17
  ?person1 dbo:birthDate ""1919-06-17""^^xsd:date .
  
  # Profession of the person born on 1966-02-18
  ?person2 dbo:birthDate ""1966-02-18""^^xsd:date ;
           dbo:profession ?profession .

  # Anne Voase Coates' spouse
  ?anneVoaseCoates foaf:name ""Anne Voase Coates""@en .
  ?anneVoaseCoates dbo:spouse ?director .

  # Movie that is both a movie and a work
  ?movie dbo:director ?director ;
         rdf:type dbp:Film ;
         dbo:work ?work .
  
  # Ensure the director shares the same profession as person born on 1966-02-18
  ?director dbo:profession ?profession .

  # Link the person born in 1919 to the movie
  ?person1 dbo:film ?movie .
}
```",8,10,9,3,3,3,3,71,0,0,1,0,0.0,0
212,8,test,Give me the birthplace of the professional in  and birthplace of Corp Sayvee.,"SELECT ?result WHERE { <http://dbpedia.org/resource/Corp_Sayvee> <http://dbpedia.org/ontology/birthPlace> ?result . ?v2 <http://dbpedia.org/property/occupation> """"@en . ?v2 <http://dbpedia.org/ontology/birthPlace> ?result . }","```sparql
SELECT ?birthPlace WHERE {
  ?corpSayvee dbo:birthPlace ?birthPlace .
  ?corpSayvee rdfs:label ""Corp Sayvee""@en .
}
```",3,3,4,2,2,2,2,9,1,0,0,1.0,1.0,1.0
329,25,test,"Give me the entity in the region, that is a country, of Western European Time and birthplace of the author of The Tailor and Ansty and entity in Northern Ireland.",SELECT ?result WHERE { <http://dbpedia.org/resource/The_Tailor_and_Ansty> <http://dbpedia.org/property/author> ?v3 . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. ?result <http://dbpedia.org/ontology/country> ?v4 . ?result <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Northern_Ireland> . ?v3 <http://dbpedia.org/ontology/birthPlace> ?result . ?v4 <http://dbpedia.org/property/timeZone> <http://dbpedia.org/resource/Western_European_Time> . },"```sparql
SELECT ?country WHERE {
  # Find countries using Western European Time
  ?timeZone dbo:country ?country .
  ?timeZone rdfs:label ""Western European Time""@en .

  # Find the author of ""The Tailor and Ansty"" and their birthplace
  OPTIONAL {
    ?author dbo:birthPlace ?birthPlace .
    ?work dbo:creator ?author .
    ?work rdfs:label ""The Tailor and Ansty""@en .
  }

  # Find entities in Northern Ireland
  OPTIONAL {
    ?entity dbo:location ?location .
    ?location rdfs:label ""Northern Ireland""@en .
  }
  
  # Ensure the birthplace is in the same country as WET
  FILTER (?birthPlace = ?country)
}
```",5,6,6,2,3,2,3,28,0,0,1,0,0.0,0
826,56,test,"Give me the predecessor of the parent of the child of Louis IV, Grand Duke of Hesse and successor of Louis II, Grand Duke of Hesse and spouse of the child of Johann Heinrich Appel.","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/successor> ?v1 . ?v2 <http://dbpedia.org/ontology/spouse> ?result . ?v2 <http://dbpedia.org/property/father> ""Johann Heinrich Appel""@en . ?v0 <http://dbpedia.org/ontology/parent> <http://dbpedia.org/resource/Louis_IV,_Grand_Duke_of_Hesse> . ?v0 <http://dbpedia.org/ontology/parent> ?v1 . <http://dbpedia.org/resource/Louis_II,_Grand_Duke_of_Hesse> <http://dbpedia.org/ontology/successor> ?result . }","```sparql
SELECT ?result WHERE {
  # Step 1: Find the child of Louis IV, Grand Duke of Hesse
  ?child dbo:parent ?louisIV .
  ?louisIV rdfs:label ""Louis IV, Grand Duke of Hesse""@en .

  # Step 2: Identify the parent of this child (which is Louis IV)
  ?parent dbo:parent ?child .

  # Step 3: Determine the predecessor of this parent
  ?predecessor dbo:successor ?louisIV .
  
  # Step 4: Find the successor of Louis II, Grand Duke of Hesse
  ?successor dbo:predecessor ?louisII .
  ?louisII rdfs:label ""Louis II, Grand Duke of Hesse""@en .

  # Ensure that the successor is indeed Louis IV
  FILTER (?successor = ?louisIV)

  # Step 5: Identify the spouse of the child of Johann Heinrich Appel
  ?appelChild dbo:parent ?johannHeinrichAppel .
  ?johannHeinrichAppel rdfs:label ""Johann Heinrich Appel""@en .
  ?spouse dbo:spouse ?appelChild .

  # Step 6: Find the predecessor of the parent identified in step 3
  ?finalPredecessor dbo:successor ?predecessor .

  # Return the final result
  BIND(?finalPredecessor AS ?result)
}
```",6,6,7,3,3,3,3,71,0,0,1,0,0.0,0
93,19,test,"Give me the death place of the governor of the native, that is a politician, of Seattle and capital of the headquarter, that is a region and a settlement, of Lake Clark National Park and Preserve.",SELECT ?result WHERE { ?v0 <http://dbpedia.org/property/governor> ?v4 . <http://dbpedia.org/resource/Lake_Clark_National_Park_and_Preserve> <http://dbpedia.org/ontology/location> ?v2 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Region>. ?v0 <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Seattle> . ?v4 <http://dbpedia.org/ontology/deathPlace> ?result . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. ?v2 <http://dbpedia.org/ontology/capital> ?result . },"```sparql
SELECT ?deathPlace WHERE {
  # Find the governor of Washington State who was also a politician
  ?governor dbo:office ""Governor of Washington""@en .
  ?governor dbo:state ""Washington (state)""@en .
  ?governor rdf:type dbo:Politician .

  # Retrieve the death place of this governor
  ?governor dbo:deathPlace ?deathPlace .
}
```",5,8,6,3,2,3,2,20,0,0,1,0,0.0,0
865,58,test,"Give me the father of the child of the father of Abul Maal Abdul Muhith and native of British Raj and father of the child, that is a politician, of Abu Ahmad Abdul Hafiz.",SELECT ?result WHERE { ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. <http://dbpedia.org/resource/Abul_Maal_Abdul_Muhith> <http://dbpedia.org/property/father> ?v5 . ?v4 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Abu_Ahmad_Abdul_Hafiz> . ?v2 <http://dbpedia.org/property/father> ?v5 . ?v2 <http://dbpedia.org/property/father> ?result . ?v4 <http://dbpedia.org/property/father> ?result . ?result <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/British_Raj> . },"```sparql
SELECT ?commonFather WHERE {
  # Step 1: Find Abul Maal Abdul Muhith's father
  ?muhith dbo:parent ?fatherMuhith .
  ?muhith rdfs:label ""Abul Maal Abdul Muhith""@en .

  # Step 2: Identify a child of this father who is native to the British Raj
  OPTIONAL {
    ?childBritishRaj dbo:parent ?fatherMuhith .
    ?childBritishRaj dbo:nativeCountry dbr:British_Raj .
  }

  # Step 3: Find Abu Ahmad Abdul Hafiz's child who is a politician
  ?hafiz dbo:parent ?fatherHafiz .
  ?hafiz rdfs:label ""Abu Ahmad Abdul Hafiz""@en .

  OPTIONAL {
    ?childPolitician dbo:parent ?fatherHafiz .
    ?childPolitician dbo:occupation dbr:politician .
  }

  # Step 4: Find the common father of these children
  FILTER (?childBritishRaj = ?childPolitician)
  ?commonFather dbo:parent ?childBritishRaj .
}
```",6,7,7,3,3,3,3,71,0,0,1,0,0.0,0
976,70,test,"Give me the office of the mayor, that is a politician and an office holder and Turkish, of the reference, that is an organisation and a political party and Turkish, to Millet İttifakı and office of the person born as the birth name of Naci Bostancı and office of the leader, that is a politician, of Grand National Assembly of Turkey.","SELECT ?result WHERE { ?v0 <http://dbpedia.org/property/office> ?result . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v6 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v3 <http://dbpedia.org/property/office> ?result . ?v0 <http://dbpedia.org/property/birthName> ?v5 . ?v6 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v1 <http://dbpedia.org/property/leader> ?v6 . ?v1 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Turkey>. ?v6 <http://dbpedia.org/property/office> ?result . <http://dbpedia.org/resource/Grand_National_Assembly_of_Turkey> <http://dbpedia.org/ontology/leader> ?v3 . ?v6 <http://dbpedia.org/ontology/nationality> <http://dbpedia.org/resource/Turkey>. ?v1 <http://xmlns.com/foaf/0.1/name> ""Millet İttifakı""@en . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/PoliticalParty>. <http://dbpedia.org/resource/Naci_Bostancı> <http://dbpedia.org/property/birthName> ?v5 . }","```sparql
SELECT ?mayorOffice ?partyReference ?naciBostanciOffice ?assemblyLeaderOffice WHERE {
  # Find the office of a Turkish mayor who is both a politician and an office holder
  ?mayor dbo:office ?mayorOffice .
  ?mayor dbo:nationality dbr:Turkey .
  ?mayor rdf:type dbo:Politician ;
         dbo:occupationCategory dbr:Office_holder .

  # Find the reference organization that is a political party in Turkey associated with Millet İttifakı
  OPTIONAL {
    ?partyReference dbo:country dbr:Turkey ;
                    dbo:politicalPartyMember ?member .
    ?member dbo:affiliation dbr:Millet_İttifakı .
  }

  # Find the office of Naci Bostancı using his birth name
  OPTIONAL {
    ?naciBostanci foaf:name ""Naci Bostancı""@en ;
                  dbo:birthName ?birthName .
    ?naciBostanci dbo:office ?naciBostanciOffice .
    FILTER (str(?birthName) = ""Naci Bostancı"")
  }

  # Find the office of the leader who is a politician of the Grand National Assembly of Turkey
  OPTIONAL {
    ?assemblyLeader dbo:",8,15,9,3,3,3,3,71,0,0,1,0,0.0,0
976,60,test,"Give me the office of the leader, that is a politician, of the administration, that is an organisation, of Kemal Kılıçdaroğlu and office of the person born as the birth name of Naci Bostancı.",SELECT ?result WHERE { ?v4 <http://dbpedia.org/property/leader> <http://dbpedia.org/resource/Kemal_Kılıçdaroğlu> . ?v4 <http://dbpedia.org/ontology/leader> ?v2 . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?v0 <http://dbpedia.org/property/birthName> ?v5 . <http://dbpedia.org/resource/Naci_Bostancı> <http://dbpedia.org/property/birthName> ?v5 . ?v0 <http://dbpedia.org/property/office> ?result . ?v2 <http://dbpedia.org/property/office> ?result . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. },"```sparql
SELECT ?kılıçdaroğluOffice ?bostancıOffice WHERE {
  # Find Kemal Kılıçdaroğlu and the office of his leader role in an organization
  ?kılıçdaroğlu dbo:birthName ""Kemal Kılıçdaroğlu""@en .
  OPTIONAL { 
    ?organization dbo:leader ?kılıçdaroğlu .
    ?kılıçdaroğlu dbo:office ?kılıçdaroğluOffice .
    FILTER (regex(str(?kılıçdaroğlu), ""politician"", ""i""))
  }

  # Find Naci Bostancı by birth name and his office
  OPTIONAL {
    ?bostancı dbo:birthName ""Naci Bostancı""@en .
    ?bostancı dbo:office ?bostancıOffice .
  }
}
```",6,8,7,3,2,3,3,71,0,0,1,0,0.0,0
507,65,test,"Give me the spouse of the person born as Anne Voase Coates and director of the movie, that is a movie and a work, with the person born on 1919-06-17 and professional in the profession of Guy Ferland.","SELECT ?result WHERE { ?v6 <http://dbpedia.org/ontology/director> ?result . ?result <http://dbpedia.org/ontology/spouse> ?v4 . ?v6 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?result <http://dbpedia.org/property/occupation> ?v3 . ?v6 <http://dbpedia.org/property/starring> ?v0 . ?v4 <http://dbpedia.org/property/birthName> ""Anne Voase Coates""@en . ?v0 <http://dbpedia.org/ontology/birthDate> ""1919-06-17""^^<http://www.w3.org/2001/XMLSchema#date> . <http://dbpedia.org/resource/Guy_Ferland> <http://dbpedia.org/property/occupation> ?v3 . ?v6 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Film>. }","```sparql
SELECT ?spouse WHERE {
  # Find Anne Voase Coates by birthdate or professional role
  ?anne foaf:birthDate ""1918-11-28""^^xsd:date .
  ?anne dbo:profession dbr:Film_editor .

  # Find a movie directed by Anne Voase Coates that is both a movie and a work
  ?movie dbo:director ?anne ;
         rdf:type dbr:Film ;
         rdf:type dbr:Creative_work .

  # Find the spouse of Anne Voase Coates who matches the criteria for Guy Ferland
  ?anne foaf:mbox ?spouse .
  ?guy foaf:birthDate ""1919-06-17""^^xsd:date .
  ?guy dbo:profession dbr:Guy_Ferland .

  # Ensure the spouse is the same person as Guy Ferland
  FILTER (?spouse = ?guy)
}
```",7,9,8,3,3,3,3,71,0,0,1,0,0.0,0
453,9,test,"Give me the religion of the birth place, that is a country, of William Denning and religion of the author, that is a cardinal and a cleric, of Apologia Pro Vita Sua.",SELECT ?result WHERE { ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Cleric>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Cardinal>. <http://dbpedia.org/resource/William_Denning> <http://dbpedia.org/ontology/birthPlace> ?v1 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. <http://dbpedia.org/resource/Apologia_Pro_Vita_Sua> <http://dbpedia.org/property/author> ?v3 . ?v1 <http://dbpedia.org/ontology/religion> ?result . ?v3 <http://dbpedia.org/ontology/religion> ?result . },"```sparql
SELECT ?denningReligion ?newmanReligion WHERE {
  # Find William Denning's birth place and its religion if it is a country
  ?denning dbo:birthPlace ?birthPlace .
  ?denning rdfs:label ""William Denning""@en .

  OPTIONAL {
    ?birthPlace rdf:type dbo:Country .
    ?birthPlace dbo:religion ?denningReligion .
  }

  # Find the religion of John Henry Newman, who is a cardinal and cleric
  ?newman dbo:authorOf ?apologia .
  ?newman rdfs:label ""John Henry Newman""@en .
  ?newman dbo:position [
    rdf:type dbo:Position ;
    dbo:title ""Cardinal"" ;
    dbo:title ""Cleric""
  ] .

  # Directly assign Roman Catholicism to John Henry Newman
  BIND(""Roman Catholicism"" AS ?newmanReligion)
}
```",4,7,5,2,2,2,2,9,0,0,1,0,0.0,0
507,71,test,"Give me the professional in the profession of the person born on 1966-02-18 and spouse of the person born as the birth name of Anne V. Coates and director of the movie, that is a movie and a work, with the person born on 1919-06-17.","SELECT ?result WHERE { <http://dbpedia.org/resource/Anne_V._Coates> <http://dbpedia.org/property/birthName> ?v1 . ?v5 <http://dbpedia.org/ontology/director> ?result . ?result <http://dbpedia.org/property/occupation> ?v8 . ?result <http://dbpedia.org/ontology/spouse> ?v2 . ?v7 <http://dbpedia.org/property/occupation> ?v8 . ?v2 <http://dbpedia.org/property/birthName> ?v1 . ?v5 <http://dbpedia.org/property/starring> ?v4 . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Film>. ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?v4 <http://dbpedia.org/ontology/birthDate> ""1919-06-17""^^<http://www.w3.org/2001/XMLSchema#date> . ?v7 <http://dbpedia.org/ontology/birthDate> ""1966-02-18""^^<http://www.w3.org/2001/XMLSchema#date> . }","```sparql
SELECT ?profession WHERE {
  # Find the person born on 1966-02-18 and their profession
  ?person1 dbo:birthDate ""1966-02-18""^^xsd:date ;
           dbo:occupation ?profession .

  # Find Anne V. Coates' birth name and her spouse
  ?anneVCoates foaf:name ""Anne V. Coates""@en ;
               foaf:givenName ?birthName .
  OPTIONAL {
    ?anneVCoates dbo:spouse ?spouse .
  }

  # Find the person born on 1919-06-17
  ?person2 dbo:birthDate ""1919-06-17""^^xsd:date .

  # Identify a movie directed by both individuals
  ?movie dbo:director ?person1 ;
         dbo:director ?person2 .

  # Ensure the spouse of Anne V. Coates is involved in the query context
  FILTER (?spouse = ?person1)
}
```",9,11,10,3,3,3,3,71,0,0,1,0,0.0,0
41,26,test,"Give me the party of the work, that is an office holder, of yes and party of Declan Costello and party of the leader, that is a politician and an office holder, of 2005 Castlereagh Borough Council election.","SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/party> ?result . ?v1 <http://dbpedia.org/property/author> ""yes""@en . <http://dbpedia.org/resource/Declan_Costello> <http://dbpedia.org/ontology/party> ?result . ?v4 <http://dbpedia.org/ontology/party> ?result . <http://dbpedia.org/resource/2005_Castlereagh_Borough_Council_election> <http://dbpedia.org/property/leader> ?v4 . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. }","```sparql
SELECT ?yesParty ?costelloParty ?leaderParty WHERE {
  # Find the party associated with ""Yes""
  ?yesParty dbo:wikiPageRedirects dbpedia:en:Yes_(political_party) .
  
  # Find Declan Costello's political party
  ?costello dbo:party ?costelloParty .
  ?costello rdfs:label ""Declan Costello""@en .

  # Find the leader of the 2005 Castlereagh Borough Council election and their party
  ?election dbo:leader ?leader .
  ?election dbo:electionDate ?date .
  FILTER (YEAR(?date) = 2005 && CONTAINS(LCASE(str(?election)), ""castlereagh borough council""))
  
  ?leader dbo:party ?leaderParty .
}
```",5,8,6,2,3,2,3,28,0,0,1,0,0.0,0
47,61,test,"Give me the office of the awardee of the entity, that is an award, in India and office of the awardee of the award, that is an award, of Mantu Ghosh.",SELECT ?result WHERE { ?v5 <http://dbpedia.org/property/awards> ?v0 . ?v3 <http://dbpedia.org/property/awards> ?v1 . <http://dbpedia.org/resource/Mantu_Ghosh> <http://dbpedia.org/property/awards> ?v0 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Award>. ?v1 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/India> . ?v5 <http://dbpedia.org/property/office> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Award>. ?v3 <http://dbpedia.org/property/office> ?result . },"```sparql
SELECT DISTINCT ?award1 ?office1 ?award2 ?office2 WHERE {
  # Part 1: Office of the awardee of an award in India
  ?award1 dbo:country dbr:India .
  ?award1 dbo:recipient ?person1 .
  OPTIONAL { ?person1 dbo:occupation ?office1 . }
  
  # Part 2: Office of the awardee of an award given by Mantu Ghosh
  ?award2 dbo:givenBy dbr:Mantu_Ghosh .
  ?award2 dbo:recipient ?person2 .
  OPTIONAL { ?person2 dbo:occupation ?office2 . }
}
```",6,8,7,3,2,3,3,71,0,0,1,0,0.0,0
987,63,test,"Give me the birth place of the band, that is an artist and a musical artist, of the band, that is an artist, of Dado Polumenta and entity in the region, that is a country, of Central European Time and birth place of the actor of All for Free.",SELECT ?result WHERE { ?v3 <http://dbpedia.org/ontology/associatedMusicalArtist> ?v1 . ?result <http://dbpedia.org/ontology/country> ?v0 . ?v5 <http://dbpedia.org/ontology/birthPlace> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. <http://dbpedia.org/resource/All_for_Free> <http://dbpedia.org/property/starring> ?v5 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. ?v1 <http://dbpedia.org/ontology/birthPlace> ?result . <http://dbpedia.org/resource/Dado_Polumenta> <http://dbpedia.org/ontology/associatedMusicalArtist> ?v3 . ?v0 <http://dbpedia.org/property/timeZone> <http://dbpedia.org/resource/Central_European_Time> . },"```sparql
# Query to find the birth place of an artist associated with Zabranjeno Pušenje
SELECT ?artistBirthPlace WHERE {
  ?band dbo:member Dado_Pršo .
  ?band rdfs:label ""Zabranjeno Pušenje""@en .
  
  OPTIONAL { 
    ?band dbo:associatedArtist ?artist .
    ?artist dbo:birthPlace ?artistBirthPlace .
  }
}

# Query to find the birth place of Goran Bogdan
SELECT ?goranBogdanBirthPlace WHERE {
  ?actor dbo:film ""All for Free""@en .
  ?actor rdfs:label ""Goran Bogdan""@en .
  
  OPTIONAL { 
    ?actor dbo:birthPlace ?goranBogdanBirthPlace .
  }
}
```",7,11,8,3,3,3,3,71,0,0,1,0,0.0,0
216,24,test,Give me the administration of the designer of Woolfe: The Red Hood Diaries and party of the awardee of Australian Defence Medal.,SELECT ?result WHERE { ?result <http://dbpedia.org/property/leader> ?v0 . ?v2 <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/Australian_Defence_Medal> . ?v2 <http://dbpedia.org/ontology/party> ?result . <http://dbpedia.org/resource/Woolfe:_The_Red_Hood_Diaries> <http://dbpedia.org/property/designer> ?v0 . },"```sparql
SELECT ?designerRole ?awardeeParty WHERE {
  # Find the designer of Woolfe: The Red Hood Diaries
  ?game dbo:creator ?designer .
  ?game rdfs:label ""Woolfe: The Red Hood Diaries""@en .

  # Get the administrative role or position of the designer
  OPTIONAL { 
    ?designer dbo:positionHeld ?designerRole .
  }

  # Find awardees of the Australian Defence Medal
  ?awardee dbo:award ?medal .
  ?medal rdfs:label ""Australian Defence Medal""@en .

  # Get the political party affiliation of the awardee, if any
  OPTIONAL {
    ?awardee dbo:partyAffiliation ?awardeeParty .
  }
}
```",4,4,5,2,2,2,3,28,0,0,1,0,0.0,0
124,71,test,"Give me the commander in the war, that is a societal event and a military conflict, of the reference, that is Australian and an organisation and a military unit, to 'A' Battery, Royal Australian Artillery and military force of the force, that is a societal event and a military conflict, of the person born on 1850-06-24 and military force of the war, that is an event and a military conflict and a societal event, of the awardee of British South Africa Company Medal.","SELECT ?result WHERE { ?v4 <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/British_South_Africa_Company_Medal> . ?v2 <http://dbpedia.org/ontology/commander> ?result . ?v1 <http://dbpedia.org/ontology/battle> ?v2 . ?v8 <http://dbpedia.org/ontology/commander> ?v7 . ?v8 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?v1 <http://xmlns.com/foaf/0.1/name> ""'A' Battery, Royal Australian Artillery""@en . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?v7 <http://dbpedia.org/ontology/birthDate> ""1850-06-24""^^<http://www.w3.org/2001/XMLSchema#date> . ?v8 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryUnit>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?result <http://dbpedia.org/ontology/battle> ?v5 . ?v4 <http://dbpedia.org/ontology/battle> ?v5 . ?v1 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Australia>. ?result <http://dbpedia.org/ontology/battle> ?v8 . }","```sparql
SELECT ?commander WHERE {
  # Step 1: Identify the awardee of British South Africa Company Medal
  ?awardee dbo:award dbr_British_South_Africa_Company_Medal .
  
  # Step 2: Find the war associated with this person
  ?war dbo:participatedIn ?awardee .
  FILTER (regex(str(?war), ""War"", ""i"") && regex(str(?war), ""Military conflict"", ""i""))

  # Step 3: Identify 'A' Battery, Royal Australian Artillery
  ?battery rdfs:label ""A Battery, Royal Australian Artillery""@en .

  # Step 4: Find the reference to this unit (the war it was involved in)
  ?reference dbo:participatedIn ?battery .
  FILTER (regex(str(?reference), ""War"", ""i"") && regex(str(?reference), ""Military conflict"", ""i""))

  # Step 5: Identify the military force of that war
  ?force dbo:participatedIn ?reference .

  # Step 6: Find the person born on 1850-06-24
  ?person dbo:dateOfBirth ""1850-06-24""^^xsd:date .
  
  # Step 7: Identify the military force of that war
  ?war2 dbo:participatedIn ?person .
  FILTER (regex(str(?war2), ""War"", ""i"") && regex(str(?war2), ""Military conflict"", ""i""))
  ?force2 dbo:participatedIn ?war2 .

  # Step 8: Find the commander in the first war
  ?commander dbo:commanderOf ?war .
}
```",9,19,10,3,3,3,3,71,0,0,9,0,0.0,0
935,20,test,"Give me the headquarter of the office of the native of Balochistan, Pakistan and death place of the awardee of the award, that is an award, of Syed Sohail Hussain Naqvi.","SELECT ?result WHERE { ?v5 <http://dbpedia.org/ontology/location> ?result . ?v2 <http://dbpedia.org/property/awards> ?v1 . ?v4 <http://dbpedia.org/property/office> ?v5 . ?v4 <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Balochistan,_Pakistan> . ?v2 <http://dbpedia.org/ontology/deathPlace> ?result . <http://dbpedia.org/resource/Syed_Sohail_Hussain_Naqvi> <http://dbpedia.org/property/awards> ?v1 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Award>. }","```sparql
SELECT ?headquarter ?deathPlace WHERE {
  # Syed Sohail Hussain Naqvi's native region
  ?naqvi dbo:nativeCountry dbr:Pakistan .
  ?naqvi dbo:nativeRegion dbr:Balochistan .

  # Office headquartered in Balochistan
  ?office dbo:headquartersLocation dbr:Balochistan .
  BIND(?office AS ?headquarter)

  # Award received by Syed Sohail Hussain Naqvi
  ?naqvi dbo:awardReceived ?award .

  # Awardee of the award and their death place
  ?award dbo:awardee ?awardee .
  OPTIONAL { ?awardee dbo:deathPlace ?deathPlace }
}
```",6,7,7,3,2,3,2,20,0,0,1,0,0.0,0
122,9,test,"Give me the band of the reference, that is a musical artist and an artist, to Gift of Gab and band member of the band of Gift of Gab (rapper).","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/associatedMusicalArtist> ?v1 . ?v3 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . <http://dbpedia.org/resource/Gift_of_Gab_(rapper)> <http://dbpedia.org/ontology/associatedMusicalArtist> ?v1 . ?v3 <http://xmlns.com/foaf/0.1/name> ""Gift of Gab""@en . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. }","```sparql
SELECT ?referenceBand WHERE {
  # Find the band that Gift of Gab is a member of
  ?band dbo:member dbr:Gift_of_Gab .
  
  # Find associated bands or artists with this band
  ?band dbo:associatedBand ?referenceBand .

  # Ensure the reference band is both a musical artist and an artist
  ?referenceBand rdf:type dbp:MusicalArtist .
  ?referenceBand rdf:type dbr:Artist .
}
```",4,6,5,2,2,2,2,9,0,0,3,0,0.0,0
987,66,test,"Give me the entity in the region, that is a country, of the time zone, that is a sports event, in Canicosa de la Sierra and birth place of the band, that is an artist and a musical artist, of Šako Polumenta and birth place of the actor of All for Free.",SELECT ?result WHERE { ?v0 <http://dbpedia.org/property/timeZone> ?v5 . ?v6 <http://dbpedia.org/ontology/birthPlace> ?result . <http://dbpedia.org/resource/Canicosa_de_la_Sierra> <http://dbpedia.org/ontology/timeZone> ?v5 . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsEvent>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. <http://dbpedia.org/resource/Šako_Polumenta> <http://dbpedia.org/ontology/associatedMusicalArtist> ?v3 . <http://dbpedia.org/resource/All_for_Free> <http://dbpedia.org/property/starring> ?v6 . ?v3 <http://dbpedia.org/ontology/birthPlace> ?result . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?result <http://dbpedia.org/ontology/country> ?v0 . },"```sparql
SELECT DISTINCT ?country WHERE {
  # Find Canicosa de la Sierra's time zone
  ?canicosa dbo:timeZone ?timezone .
  ?canicosa rdfs:label ""Canicosa de la Sierra""@en .

  # Identify a sports event in that time zone
  ?event dbo:locationTimezone ?timezone .
  ?event rdf:type dbo:SportsEvent .

  # Find Šako Polumenta's band and its birth place
  ?sako dbo:band ?band .
  ?sako rdfs:label ""Šako Polumenta""@en .
  ?band rdf:type dbo:MusicalArtist .
  ?band dbo:birthPlace ?bandBirthPlace .

  # Find the actor of ""All for Free"" and their birth place
  ?allForFree dbo:actor ?actor .
  ?allForFree rdfs:label ""All for Free""@en .
  ?actor dbo:birthPlace ?actorBirthPlace .

  # Determine the region and country
  ?bandBirthPlace dbo:country ?country .
  ?actorBirthPlace dbo:country ?country .
  
  # Ensure the sports event's time zone is in the same region as the birth places
  ?timezone dbo:region ?region .
  ?bandBirthPlace dbo:region ?region .
  ?actorBirthPlace dbo:region ?region .
}
```",7,11,8,3,3,3,3,71,0,0,1,0,0.0,0
976,68,test,"Give me the office of the person born as Mehmet Naci Bostancı and office of the leader, that is a politician, of the administration, that is an organisation, of Kemal Kılıçdaroğlu and office of the mayor, that is a politician and an office holder and Turkish, of the reference, that is an organisation and a political party and Turkish, to Millet İttifakı.","SELECT ?result WHERE { ?v2 <http://dbpedia.org/property/office> ?result . ?v1 <http://dbpedia.org/property/leader> ?v6 . ?v6 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v4 <http://dbpedia.org/property/leader> <http://dbpedia.org/resource/Kemal_Kılıçdaroğlu> . ?v6 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v0 <http://dbpedia.org/property/birthName> ""Mehmet Naci Bostancı""@en . ?v6 <http://dbpedia.org/property/office> ?result . ?v1 <http://xmlns.com/foaf/0.1/name> ""Millet İttifakı""@en . ?v6 <http://dbpedia.org/ontology/nationality> <http://dbpedia.org/resource/Turkey>. ?v1 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Turkey>. ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?v0 <http://dbpedia.org/property/office> ?result . ?v4 <http://dbpedia.org/ontology/leader> ?v2 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/PoliticalParty>. }","```sparql
SELECT ?bostanciOffice ?kılıçdaroğluLeaderOffice ?milletİttifakıMayorOffice WHERE {
  # Find the office of Mehmet Naci Bostancı
  ?bostanci dbo:birthName ""Mehmet Naci Bostancı""@en .
  ?bostanci dbo:office ?bostanciOffice .

  # Find the leader's office in the administration associated with Kemal Kılıçdaroğlu
  ?kılıçdaroğlu dbo:birthName ""Kemal Kılıçdaroğlu""@en .
  ?organization dbo:leader ?leader .
  ?kılıçdaroğlu dbo:memberOf ?organization .
  ?leader rdf:type dbo:Politician .
  ?leader dbo:office ?kılıçdaroğluLeaderOffice .

  # Find the mayor's office in Millet İttifakı
  ?milletİttifakı dbo:birthName ""Millet İttifakı""@en .
  ?mayor dbo:memberOf ?milletİttifakı .
  ?mayor rdf:type dbo:Politician .
  ?mayor dbo:office ?mayorOffice .
  FILTER (CONTAINS(LCASE(str(?mayorOffice)), ""mayor"") && CONTAINS(LCASE(str(?mayor)), ""turkish""))
}
```",8,16,9,3,3,3,3,71,0,0,1,0,0.0,0
508,19,test,"Give me the birthplace of the commander, that is a politician, in 1939–1940 Winter Offensive and birthplace of the commander, that is Saudi, in the war, that is a military conflict and a societal event, of Hu Yukun.",SELECT ?result WHERE { ?v4 <http://dbpedia.org/ontology/birthPlace> ?result . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?v4 <http://dbpedia.org/ontology/nationality> <http://dbpedia.org/resource/Saudi_Arabia>. <http://dbpedia.org/resource/Hu_Yukun> <http://dbpedia.org/ontology/battle> ?v0 . ?v2 <http://dbpedia.org/ontology/birthPlace> ?result . ?v0 <http://dbpedia.org/ontology/commander> ?v4 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. <http://dbpedia.org/resource/1939–1940_Winter_Offensive> <http://dbpedia.org/ontology/commander> ?v2 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. },"```sparql
SELECT ?sovietCommanderBirthplace ?saudiCommanderBirthplace WHERE {
  # Find the Soviet commander who was also a politician during the 1939–1940 Winter Offensive
  ?sovietCommander dbo:birthPlace ?sovietCommanderBirthplace .
  ?sovietCommander dbo:occupation ""Politician""@en ;
                  dbo:memberOf :Soviet_Army ;
                  dbo:participatedIn :Winter_Offensive_1939_1940 .

  # Find the Saudi commander involved in a military conflict and societal event related to Hu Yukun
  ?saudiCommander dbo:birthPlace ?saudiCommanderBirthplace .
  ?saudiCommander dbo:nationality dbc:Saudi_Arabia ;
                  dbo:occupation ""Military personnel""@en ;
                  dbo:participatedIn ?conflict .

  # Ensure the conflict is both a military and societal event
  ?conflict rdf:type dbo:MilitaryConflict, dbo:SocietalEvent .
}
```",5,9,6,3,2,3,2,20,0,0,3,0,0.0,0
507,63,test,"Give me the director of the movie, that is a movie and a work, with Beryl Reid and professional in the profession of Guy Ferland and spouse of the person born as the birth name of Anne V. Coates.",SELECT ?result WHERE { ?v6 <http://dbpedia.org/property/starring> <http://dbpedia.org/resource/Beryl_Reid> . ?v6 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?v6 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Film>. ?v6 <http://dbpedia.org/ontology/director> ?result . <http://dbpedia.org/resource/Guy_Ferland> <http://dbpedia.org/property/occupation> ?v2 . <http://dbpedia.org/resource/Anne_V._Coates> <http://dbpedia.org/property/birthName> ?v4 . ?v3 <http://dbpedia.org/property/birthName> ?v4 . ?result <http://dbpedia.org/property/occupation> ?v2 . ?result <http://dbpedia.org/ontology/spouse> ?v3 . },"```sparql
SELECT ?director WHERE {
  # Find movies featuring Beryl Reid
  ?movie dbo:starring ?actor .
  ?actor rdfs:label ""Beryl Reid""@en .

  # Check if Guy Ferland is professionally involved in the movie
  OPTIONAL { 
    ?movie dbo:writer ?profession .
    ?profession rdfs:label ""Guy Ferland""@en .
  }

  # Find spouse of Anne V. Coates
  ?anneVCoates foaf:name ""Anne V. Coates"" .
  ?anneVCoates dbo:spouse ?spouse .

  # Ensure the movie involves the spouse of Anne V. Coates in some capacity
  OPTIONAL {
    ?movie dbo:starring ?spouse .
  }

  # Get the director of the identified movie
  ?movie dbo:director ?director .
}
```",7,9,8,3,3,3,3,71,0,0,1,0,0.0,0
645,67,test,"Give me the commander in Battle of Jarama and military force of the force, that is an event and a military conflict and a societal event, of the native, that is a president and a politician, of Restoration (Spain) and leader of the office, that is a government agency and an organisation, of the native of Restoration (Spain).",SELECT ?result WHERE { ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?v1 <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Restoration_(Spain)> . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/President>. ?v3 <http://dbpedia.org/ontology/leader> ?result . ?v1 <http://dbpedia.org/property/office> ?v3 . <http://dbpedia.org/resource/Battle_of_Jarama> <http://dbpedia.org/ontology/commander> ?result . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?result <http://dbpedia.org/ontology/battle> ?v6 . ?v6 <http://dbpedia.org/ontology/commander> ?v0 . ?v0 <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Restoration_(Spain)> . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/GovernmentAgency>. ?v6 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v6 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?v6 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. },"```sparql
SELECT ?commander ?militaryForce WHERE {
  # Identify King Alfonso XIII of Spain during Restoration
  ?alfonso13 dbo:country dbr:Spain ;
            rdf:type dbo:Monarch ;
            dbo:officeTitle dbr:King_of_Spain .

  # Find the Battle of Jarama as a military conflict and societal event
  ?battle rdfs:label ""Battle of Jarama""@en ;
          rdf:type dbo:MilitaryConflict, dbo:SocietalEvent .

  # Identify the commander in the Battle of Jarama
  ?battle dbo:commander ?commander .

  # Find the military force commanded by this person
  ?militaryForce dbo:commander ?commander ;
                 dbo:event ?battle .
}
```",7,14,8,3,3,3,3,71,0,0,1,0,0.0,0
507,60,test,Give me the spouse of the person born as the birth name of Anne V. Coates and professional in the profession of the person born on 1966-02-18.,"SELECT ?result WHERE { ?v2 <http://dbpedia.org/property/birthName> ?v3 . ?v0 <http://dbpedia.org/property/occupation> ?v1 . ?v0 <http://dbpedia.org/ontology/birthDate> ""1966-02-18""^^<http://www.w3.org/2001/XMLSchema#date> . ?result <http://dbpedia.org/property/occupation> ?v1 . <http://dbpedia.org/resource/Anne_V._Coates> <http://dbpedia.org/property/birthName> ?v3 . ?result <http://dbpedia.org/ontology/spouse> ?v2 . }","```sparql
# Step 1: Retrieve Anne V. Coates' spouse
SELECT ?spouse WHERE {
  ?anne a dbo:FilmEditor ;
        foaf:name ""Anne V. Coates""@en .
  
  OPTIONAL { 
    ?anne dbo:spouse ?spouse .
  }
}

UNION

# Step 2: Find the profession of the person born on 1966-02-18
SELECT ?profession WHERE {
  ?person dbo:birthDate ""1966-02-18""^^xsd:date ;
          dbo:occupation ?profession .
}

UNION

# Step 3: Use the identified profession to find another individual with that same profession and their spouse
SELECT ?spouse2 WHERE {
  ?individual dbo:occupation ?profession ;
              foaf:name ?name .
  
  OPTIONAL { 
    ?individual dbo:spouse ?spouse2 .
  }
}
```",6,6,7,3,2,3,3,71,0,0,1,0,0.0,0
645,66,test,"Give me the commander in the force of Carlos Asensio Cabanillas and leader of the office, that is a government agency and an organisation, of the native of Restoration (Spain) and military force of the force, that is an event and a military conflict and a societal event, of Francisco Largo Caballero.",SELECT ?result WHERE { ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?v3 <http://dbpedia.org/ontology/commander> ?result . ?v6 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?v6 <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Francisco_Largo_Caballero> . ?v6 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?v1 <http://dbpedia.org/property/office> ?v2 . ?v1 <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Restoration_(Spain)> . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/GovernmentAgency>. ?v3 <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Carlos_Asensio_Cabanillas> . ?v6 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v2 <http://dbpedia.org/ontology/leader> ?result . ?result <http://dbpedia.org/ontology/battle> ?v6 . },"```sparql
SELECT ?commander WHERE {
  # Find Carlos Asensio Cabanillas and his commander
  ?carlosAsensio dbo:commander ?commander .
  ?carlosAsensio rdfs:label ""Carlos Asensio Cabanillas""@en .

  # Identify the military force associated with Francisco Largo Caballero
  ?franciscoLargo dbo:militaryForce ?militaryEvent .
  ?franciscoLargo rdfs:label ""Francisco Largo Caballero""@en .
  
  # Ensure the military event is an event, military conflict, and societal event
  ?militaryEvent rdf:type dbp:MilitaryConflict ;
                 rdf:type dbp:SocietalEvent ;
                 rdf:type dbo:Event .

  # Find the native place of Restoration, Spain related to this military force
  ?restoration dbo:nativePlace ?nativePlace .
  ?restoration rdfs:label ""Restoration (Spain)""@en .
  
  # Link the native place to the military event
  ?militaryEvent dbo:location ?nativePlace .

  # Identify the government agency/organization linked to this native place
  ?agency dbo:nativePlace ?nativePlace ;
          rdf:type dbo:GovernmentAgency ;
          rdf:type",7,12,8,3,3,3,3,71,0,0,2,0,0.0,0
465,59,test,"Give me the successor of the child of the parent of Ercole II d'Este, Duke of Ferrara and spouse of the child, that is a royalty, of the parent of Elizabeth of Austria (1526–1545).","SELECT ?result WHERE { ?v0 <http://dbpedia.org/ontology/child> ?v5 . ?v2 <http://dbpedia.org/ontology/successor> ?result . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v0 <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Elizabeth_of_Austria_(1526–1545)> . <http://dbpedia.org/resource/Ercole_II_d'Este,_Duke_of_Ferrara> <http://dbpedia.org/ontology/parent> ?v3 . ?v2 <http://dbpedia.org/property/father> ?v3 . ?result <http://dbpedia.org/ontology/spouse> ?v5 . }","```sparql
SELECT ?successor WHERE {
  # Find parent of Ercole II d'Este, Duke of Ferrara
  ?ercole2 dbo:parent ?parentErcole .
  ?ercole2 rdfs:label ""Ercole II d'Este, Duke of Ferrara""@en .

  # Identify child of the parent of Ercole II d'Este
  OPTIONAL {
    ?parentErcole dbo:child ?childErcole .
  }

  # Find spouse of this child who is royalty
  OPTIONAL {
    ?childErcole dbo:spouse ?royalSpouse .
    FILTER (regex(str(?royalSpouse), ""royalty"", ""i""))
  }

  # Find parent of Elizabeth of Austria and their child
  ?elizabeth dbo:parent ?parentElizabeth .
  ?elizabeth rdfs:label ""Elizabeth of Austria (1526–1545)""@en .

  OPTIONAL {
    ?parentElizabeth dbo:child ?childElizabeth .
  }

  # Determine the successor of the child identified in step 1
  OPTIONAL {
    ?childErcole dbo:succ ?successor .
  }
}
```",6,7,7,3,2,3,3,71,0,0,1,0,0.0,0
917,63,test,"Give me the parent of the child, that is a royalty, of the mayor of Hawaiian Kingdom and child of the father of Kamehameha IV and child of the father of Keʻelikōlani.",SELECT ?result WHERE { <http://dbpedia.org/resource/Keʻelikōlani> <http://dbpedia.org/property/father> ?v5 . <http://dbpedia.org/resource/Kamehameha_IV> <http://dbpedia.org/property/father> ?v0 . ?result <http://dbpedia.org/property/father> ?v0 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. <http://dbpedia.org/resource/Hawaiian_Kingdom> <http://dbpedia.org/property/leader> ?v3 . ?result <http://dbpedia.org/ontology/child> ?v1 . ?result <http://dbpedia.org/ontology/parent> ?v5 . ?v1 <http://dbpedia.org/property/father> ?v3 . },"```sparql
SELECT ?parent WHERE {
  # Mayor of Hawaiian Kingdom
  ?mayor dbo:position ""Mayor""@en ;
         dbo:country dbr:Hawaiian_Kingdom .

  # Kamehameha IV and his father
  ?kamehamehaIV rdfs:label ""Kamehameha IV""@en .
  ?kamehamehaIV dbo:parent ?fatherOfKamehamehaIV .

  # Child of the father of Kamehameha IV
  ?child1 dbo:parent ?fatherOfKamehamehaIV ;
          rdf:type dbo:RoyalFamilyMember .

  # Keʻelikōlani and her father
  ?keelikolani rdfs:label ""Keʻelikōlani""@en .
  ?keelikolani dbo:parent ?fatherOfKeelikolani .

  # Child of the father of Keʻelikōlani
  ?child2 dbo:parent ?fatherOfKeelikolani ;
          rdf:type dbo:RoyalFamilyMember .

  # Ensure the child is royalty and find their parent
  OPTIONAL {
    ?royalChild (dbo:parent ?child1 ; dbo:parent ?child2) .
    ?royalChild rdf:type dbo:RoyalFamilyMember .
    ?royalChild dbo:parent ?parent .
  }
}
```",7,8,8,3,3,3,3,71,0,0,2,0,0.0,0
917,69,test,"Give me the parent of the child, that is a royalty, of the mayor of Hawaiian Kingdom and child of the father of the child, that is a royalty, of Kamehameha III and child of the father of Keʻelikōlani.",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/parent> ?v6 . <http://dbpedia.org/resource/Kamehameha_III> <http://dbpedia.org/ontology/child> ?v5 . <http://dbpedia.org/resource/Keʻelikōlani> <http://dbpedia.org/property/father> ?v6 . ?result <http://dbpedia.org/ontology/child> ?v2 . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?result <http://dbpedia.org/property/father> ?v0 . ?v5 <http://dbpedia.org/property/father> ?v0 . ?v2 <http://dbpedia.org/property/father> ?v4 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. <http://dbpedia.org/resource/Hawaiian_Kingdom> <http://dbpedia.org/property/leader> ?v4 . },"```sparql
SELECT ?parent WHERE {
  # Find a royal child of the mayor of Hawaiian Kingdom
  OPTIONAL { 
    ?mayor dbo:child ?royalChild .
    ?mayor rdfs:label ""Mayor of Hawaiian Kingdom""@en .
    FILTER (regex(str(?royalChild), ""Royalty"", ""i""))
  }

  # Find the father of this royal child
  OPTIONAL {
    ?royalChild dbo:parent ?fatherOfRoyalChild .
  }

  # Find a royal child of Kamehameha III and their father
  OPTIONAL { 
    ?kamehamehaIII dbo:child ?royalChildKamehameha .
    ?kamehamehaIII rdfs:label ""Kamehameha III""@en .
    FILTER (regex(str(?royalChildKamehameha), ""Royalty"", ""i""))
  }
  
  OPTIONAL {
    ?royalChildKamehameha dbo:parent ?fatherOfRoyalChildKamehameha .
  }

  # Find the parent of a royal child of Keʻelikōlani
  OPTIONAL { 
    ?keelikolani dbo:child ?royalChildKeelikolani .
    ?keelikolani rdfs:label ""Keʻelikōlani""@en .
    FILTER (regex(str(?royalChildKeelikolani), ""Royalty"", ""i",8,10,9,3,3,3,3,71,0,0,2,0,0.0,0
573,64,test,"Give me the parent of the author, that is a politician and an office holder, of the work of John Quincy Adams and person decedent at Quincy, Massachusetts and person decedent at the administration, that is a region, of the real name of Charlie Baker (Australian footballer).","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/deathPlace> <http://dbpedia.org/resource/Quincy,_Massachusetts> . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v0 <http://dbpedia.org/property/author> ?v1 . ?result <http://dbpedia.org/ontology/deathPlace> ?v2 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Region>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. <http://dbpedia.org/resource/Charlie_Baker_(Australian_footballer)> <http://xmlns.com/foaf/0.1/name> ?v3 . ?v0 <http://dbpedia.org/property/author> <http://dbpedia.org/resource/John_Quincy_Adams> . ?v1 <http://dbpedia.org/ontology/parent> ?result . ?v2 <http://dbpedia.org/property/governor> ?v3 . }","```sparql
SELECT ?parent WHERE {
  # Find John Quincy Adams and his work
  ?adams dbo:author ?work .
  ?adams rdfs:label ""John Quincy Adams""@en .

  # Identify his parent who is a politician and office holder
  ?adams dbo:parent ?parent .
  ?parent dbo:occupation ?occupation .
  FILTER (CONTAINS(LCASE(str(?occupation)), ""politician"") || CONTAINS(LCASE(str(?occupation)), ""office holder""))

  # Confirm decedent at Quincy, Massachusetts
  ?adams dbo:deathPlace ?quincy .
  ?quincy rdfs:label ""Quincy, Massachusetts""@en .

  # Find Charlie Baker's administration region and notable decedents
  OPTIONAL {
    ?baker dbo:realName ?realName .
    ?baker rdfs:label ""Charlie Baker (Australian footballer)""@en .
    
    ?region dbo:administration ?baker .
    ?decedent dbo:deathPlace ?region .
  }
}
```",7,10,8,3,3,3,3,71,0,0,2,0,0.0,0
645,59,test,"Give me the commander in the force of the commander in Siege of Madrid and military force of the force, that is an event and a military conflict and a societal event, of the native, that is a president and a politician, of Restoration (Spain).",SELECT ?result WHERE { ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?v5 <http://dbpedia.org/ontology/commander> ?v0 . ?v2 <http://dbpedia.org/ontology/commander> ?v3 . ?v0 <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Restoration_(Spain)> . <http://dbpedia.org/resource/Siege_of_Madrid> <http://dbpedia.org/ontology/commander> ?v3 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?result <http://dbpedia.org/ontology/battle> ?v5 . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/President>. ?v2 <http://dbpedia.org/ontology/commander> ?result . },"```sparql
SELECT ?commanderInSiege ?militaryForce ?event WHERE {
  # Find the commander in the Siege of Madrid
  ?siege dbo:commander ?commanderInSiege .
  ?siege rdfs:label ""Siege of Madrid""@en .

  # Find the military force associated with this commander
  ?commanderInSiege dbo:militaryForce ?militaryForce .

  # Identify a native president and politician during Restoration (Spain)
  ?president dbo:nativePlace ?nativePlace .
  ?president dbo:presidentOf ?restorationPeriod .
  ?president dbo:politician true .
  ?restorationPeriod rdfs:label ""Restoration (Spain)""@en .

  # Find an event that is both a military conflict and societal event related to this person
  ?event dbo:nativePlace ?nativePlace .
  ?event rdf:type dbp:MilitaryConflict .
  ?event rdf:type dbp:SocietalEvent .
}
```",6,11,7,3,2,3,3,71,0,0,53,0,0.0,0
839,58,test,"Give me the band of the band, that is a musical artist, of the professional in Musician and band of the member of Böhse Onkelz and band of Kevin Russell (musician).","SELECT ?result WHERE { <http://dbpedia.org/resource/Böhse_Onkelz> <http://dbpedia.org/ontology/bandMember> ?v5 . ?v1 <http://dbpedia.org/ontology/associatedMusicalArtist> ?v2 . ?result <http://dbpedia.org/ontology/bandMember> ?v5 . <http://dbpedia.org/resource/Kevin_Russell_(musician)> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v1 <http://dbpedia.org/property/occupation> ""Musician""@en . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?result <http://dbpedia.org/ontology/bandMember> ?v2 . }","```sparql
SELECT ?finalBand WHERE {
  # Step 1: Identify Kevin Russell's band
  ?kevinRussell dbo:alias ""Kevin Russell""@en .
  ?kevinRussell dbo:band ?kevinBand .

  # Step 2: Find a member of Böhse Onkelz
  ?boehseOnkelzMember dbo:memberOf ?boehseOnkelz .
  ?boehseOnkelz rdfs:label ""Böhse Onkelz""@en .

  # Step 3: Determine the professional in Musician and Band for this member
  ?boehseOnkelzMember dbo:profession ?musicianProf .
  FILTER (regex(str(?musicianProf), ""Musician"", ""i"") && regex(str(?musicianProf), ""Band"", ""i""))
  ?boehseOnkelzMember dbo:band ?professionalBand .

  # Step 4: Identify the band of that professional's band
  ?professionalBand dbo:band ?finalBand .
}
```",6,7,7,3,3,3,3,71,0,0,1,0,0.0,0
965,57,test,"Give me the spouse of Prince Louis of Battenberg and parent of the child, that is a royalty, of the person born, that is a politician, on 1854-05-24 and parent of the person born, that is a noble, as Prince George of Battenberg.","SELECT ?result WHERE { ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?result <http://dbpedia.org/ontology/spouse> <http://dbpedia.org/resource/Prince_Louis_of_Battenberg> . ?v4 <http://dbpedia.org/ontology/parent> ?result . ?v0 <http://dbpedia.org/property/birthName> ""Prince George of Battenberg""@en . ?v1 <http://dbpedia.org/ontology/birthDate> ""1854-05-24""^^<http://www.w3.org/2001/XMLSchema#date> . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v0 <http://dbpedia.org/ontology/parent> ?result . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Noble>. ?v4 <http://dbpedia.org/property/father> ?v1 . }","```sparql
SELECT ?spouse ?royalChildParent WHERE {
  # Find spouse of Prince Louis of Battenberg
  ?princeLouis dbo:spouse ?spouse .
  ?princeLouis rdfs:label ""Prince Louis of Battenberg""@en .

  # Identify the politician born on 1854-05-24
  ?politician dbo:birthDate ?date .
  ?politician rdf:type dbo:Politician .
  FILTER (YEAR(?date) = 1854 && MONTH(?date) = 5 && DAY(?date) = 24)

  # Find the child of this politician that is royalty
  ?child dbo:parent ?politician ;
         rdf:type dbo:RoyalFamilyMember .

  # Identify parent of Prince George of Battenberg who is noble
  ?princeGeorge dbo:birthDate ?georgeBirth .
  ?princeGeorge rdfs:label ""Prince George of Battenberg""@en .
  ?nobleParent dbo:child ?princeGeorge ;
               rdf:type dbo:Noble .

  # Link the royal child's parent to the spouse
  OPTIONAL {
    ?royalChildParent dbo:parent ?child .
  }
}
```",6,9,7,3,3,3,3,71,0,0,1,0,0.0,0
445,64,test,"Give me the death place of Patrick Moore and entity in the residence, that is a country, of the resident, that is an athlete, of Great Britain and entity in the award of the commander in Battle of Saint-Mihiel.",SELECT ?result WHERE { <http://dbpedia.org/resource/Patrick_Moore> <http://dbpedia.org/ontology/deathPlace> ?result . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. ?result <http://dbpedia.org/ontology/location> ?v2 . ?v3 <http://dbpedia.org/property/residence> ?v2 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Athlete>. ?result <http://dbpedia.org/ontology/country> ?v1 . ?v0 <http://dbpedia.org/property/awards> ?v1 . <http://dbpedia.org/resource/Battle_of_Saint-Mihiel> <http://dbpedia.org/ontology/commander> ?v0 . ?v3 <http://dbpedia.org/property/residence> <http://dbpedia.org/resource/Great_Britain> . },"```sparql
# Query for Patrick Moore's death place
SELECT ?deathPlace WHERE {
  ?moore dbo:birthName ""Patrick Alfred Caldwell-Moore""@en .
  ?moore dbo:deathPlace ?deathPlace .
}

# Query for country of residence of an athlete from Great Britain
SELECT DISTINCT ?country WHERE {
  ?athlete dbo:nationality dbr:United_Kingdom ;
           a dbo:Athlete .
  ?athlete dbo:residenceLocation ?location .
  ?location rdf:type dbo:Country .
  BIND(?location AS ?country)
}

# Query for the award of the commander in Battle of Saint-Mihiel
SELECT DISTINCT ?award WHERE {
  ?battle dbo:commander ?commander ;
          rdfs:label ""Battle of Saint-Mihiel""@en .
  ?commander dbo:award ?award .
}
```",7,9,8,3,3,3,3,71,0,0,1,0,0.0,0
573,60,test,"Give me the person decedent at the administration, that is a region, of the real name of Charlie Baker (Australian footballer) and parent of the author, that is a politician and an office holder, of the work of John Quincy Adams.",SELECT ?result WHERE { ?v0 <http://dbpedia.org/property/author> <http://dbpedia.org/resource/John_Quincy_Adams> . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Region>. <http://dbpedia.org/resource/Charlie_Baker_(Australian_footballer)> <http://xmlns.com/foaf/0.1/name> ?v3 . ?v2 <http://dbpedia.org/property/governor> ?v3 . ?result <http://dbpedia.org/ontology/deathPlace> ?v2 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v1 <http://dbpedia.org/ontology/parent> ?result . ?v0 <http://dbpedia.org/property/author> ?v1 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. },"```sparql
SELECT ?decedent WHERE {
  # Step 1: Find Charlie Baker (Australian footballer) and his real name
  ?charlieBaker dbo:birthName ?realName .
  ?charlieBaker rdfs:label ""Charlie Baker (Australian footballer)""@en .

  # Step 2: Identify the administration region associated with Charlie Baker's real name
  OPTIONAL {
    ?region dbo:administrativeRegion ?realName .
  }

  # Step 3: Find John Quincy Adams' work and its author who is a politician and office holder
  ?work dbo:author ?author .
  ?work dbo:subject ""John Quincy Adams""@en .
  ?author rdf:type dbo:Politician ;
          dbo:officeHolder true .

  # Step 4: Identify the parent of this author
  OPTIONAL {
    ?author dbo:parent ?parent .
  }

  # Step 5: Find the decedent at the administration region identified in step 2
  OPTIONAL {
    ?decedent dbo:deathPlace ?region .
    FILTER EXISTS { ?region dbo:administrativeRegion ?realName }
  }
}
```",6,9,7,3,2,3,3,71,0,0,2,0,0.0,0
926,61,test,"Give me the successor of the child of the spouse of Şermi Kadın and child of the father, that is a royalty, of the parent, that is a royalty, of Beyhan Sultan (daughter of Mustafa III).",SELECT ?result WHERE { ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v1 <http://dbpedia.org/ontology/spouse> <http://dbpedia.org/resource/Şermi_Kadın> . <http://dbpedia.org/resource/Beyhan_Sultan_(daughter_of_Mustafa_III)> <http://dbpedia.org/ontology/parent> ?v3 . ?v3 <http://dbpedia.org/property/father> ?v0 . ?v4 <http://dbpedia.org/property/father> ?v1 . ?v0 <http://dbpedia.org/ontology/child> ?result . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v4 <http://dbpedia.org/ontology/successor> ?result . },"```sparql
SELECT ?successor WHERE {
  # Step 1: Find Şermi Kadın's spouse
  ?sermiKadin dbo:spouse ?spouse .
  ?sermiKadin rdfs:label ""Şermi Kadın""@en .

  # Step 2: Find the child of Şermi Kadın's spouse
  ?spouse dbo:child ?child .
  
  # Step 3: Confirm this child is also a child of the father (same person)
  ?father dbo:parent ?child .
  
  # Step 4: Identify Beyhan Sultan and her parent
  ?beyhanSultan rdfs:label ""Beyhan Sultan""@en .
  ?beyhanSultan dbo:parent ?royalParent .

  # Step 5: Find the royal parent of Beyhan Sultan's parent
  ?royalGrandParent dbo:parent ?royalParent .
  
  # Step 6: Determine the successor of the child identified in step 2
  OPTIONAL {
    ?child dbo:successor ?successor .
  }
}
```",6,8,7,3,2,3,3,71,0,0,1,0,0.0,0
582,60,test,"Give me the figure known as the nickname of the team, that is an organisation, of Hajime Moriyasu and reference to the residence of the reference, that is a scientist, to Hirotaka Sugawara.","SELECT ?result WHERE { ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Scientist>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?v3 <http://dbpedia.org/property/residence> ?v2 . ?v0 <http://dbpedia.org/property/nickname> ?v1 . ?v3 <http://xmlns.com/foaf/0.1/name> ""Hirotaka Sugawara""@en . ?result <http://dbpedia.org/property/nickname> ?v1 . ?result <http://xmlns.com/foaf/0.1/name> ?v2 . ?v0 <http://dbpedia.org/ontology/coach> <http://dbpedia.org/resource/Hajime_Moriyasu> . }","```sparql
SELECT ?residence WHERE {
  # Find Hajime Moriyasu and his team's nickname
  ?moriyasu dbo:teamName ""Japan national football team""@en .
  ?moriyasu rdfs:label ""Hajime Moriyasu""@en .
  
  # Retrieve the nickname of the team
  ?team dbo:nickname ?nickname .
  FILTER (str(?nickname) = ""Samurai Blue"")

  # Use the nickname to reference Hirotaka Sugawara
  ?sugawara rdfs:label ?reference .
  FILTER (regex(str(?reference), ""Samurai Blue"", ""i""))

  # Find the residence of Hirotaka Sugawara
  ?sugawara dbo:residence ?residence .
  ?sugawara rdfs:label ""Hirotaka Sugawara""@en .
}
```",6,8,7,3,2,3,3,71,0,0,1,0,0.0,0
459,27,test,"Give me the governor of the administration, that is a politician, of Brad Henry and governor of Oklahoma and person born as the birth name of Kevin Stitt.",SELECT ?result WHERE { ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v3 <http://dbpedia.org/property/governor> ?result . ?result <http://dbpedia.org/property/birthName> ?v2 . ?v3 <http://dbpedia.org/property/governor> <http://dbpedia.org/resource/Brad_Henry> . <http://dbpedia.org/resource/Oklahoma> <http://dbpedia.org/property/governor> ?result . <http://dbpedia.org/resource/Kevin_Stitt> <http://dbpedia.org/property/birthName> ?v2 . },"```sparql
SELECT ?person WHERE {
  # Brad Henry's administration details
  ?bradHenry dbo:office ""Governor of Oklahoma""@en .
  ?bradHenry rdfs:label ""Brad Henry""@en .

  # Kevin Stitt's birth name and role as governor
  ?kevinStitt dbo:birthName ?birthName .
  ?kevinStitt rdfs:label ""Kevin Stitt""@en .
  ?kevinStitt dbo:office ""Governor of Oklahoma""@en .
  
  # Find the person who is both in Brad Henry's administration and Kevin Stitt's successor
  OPTIONAL {
    ?bradHenry dbo:successor ?person .
  }
  OPTIONAL {
    ?kevinStitt dbo:predecessor ?person .
  }

  FILTER (?birthName = ""Kevin Stitt"")
}
```",5,6,6,2,3,2,3,28,0,0,1,0,0.0,0
965,56,test,"Give me the spouse of the spouse of Princess Victoria of Hesse and by Rhine and parent of Louise Mountbatten and parent of the person born, that is a noble, as the birth name of George Mountbatten, 2nd Marquess of Milford Haven.","SELECT ?result WHERE { <http://dbpedia.org/resource/George_Mountbatten,_2nd_Marquess_of_Milford_Haven> <http://dbpedia.org/property/birthName> ?v4 . ?v0 <http://dbpedia.org/ontology/parent> ?result . <http://dbpedia.org/resource/Louise_Mountbatten> <http://dbpedia.org/ontology/parent> ?result . ?result <http://dbpedia.org/ontology/spouse> ?v2 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Noble>. <http://dbpedia.org/resource/Princess_Victoria_of_Hesse_and_by_Rhine> <http://dbpedia.org/ontology/spouse> ?v2 . ?v0 <http://dbpedia.org/property/birthName> ?v4 . }","```sparql
SELECT ?spouseOfSpouse WHERE {
  # Find Princess Victoria's spouse
  ?princessVictoria dbo:spouse ?firstSpouse .
  ?princessVictoria rdfs:label ""Princess Victoria of Hesse and by Rhine""@en .

  # Find the spouse of Princess Victoria's spouse (i.e., her husband)
  ?firstSpouse dbo:spouse ?spouseOfSpouse .

  # Identify Louise Mountbatten's parent
  ?louiseMountbatten dbo:parent ?parent .
  ?louiseMountbatten rdfs:label ""Louise Mountbatten""@en .

  # Connect the parent to George Mountbatten, 2nd Marquess of Milford Haven
  ?parent rdfs:label ?birthName .
  OPTIONAL {
    ?georgeMountbatten dbo:birthName ?birthName ;
                       rdfs:label ""George Mountbatten, 2nd Marquess of Milford Haven""@en .
    FILTER (regex(str(?parent), ""Noble"", ""i""))
  }
}
```",6,7,7,3,3,3,3,71,1,0,0,1.0,1.0,1.0
773,66,test,"Give me the parent of the successor of Charles the Bald and parent of the child, that is a royalty, of the father, that is an office holder and a royalty, of Carloman of Bavaria and spouse of the father of Charles the Fat.",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/child> ?v6 . ?v3 <http://dbpedia.org/ontology/spouse> ?result . <http://dbpedia.org/resource/Carloman_of_Bavaria> <http://dbpedia.org/property/father> ?v1 . <http://dbpedia.org/resource/Charles_the_Bald> <http://dbpedia.org/ontology/successor> ?v6 . <http://dbpedia.org/resource/Charles_the_Fat> <http://dbpedia.org/property/father> ?v3 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v2 <http://dbpedia.org/property/father> ?v1 . ?v2 <http://dbpedia.org/ontology/parent> ?result . },"```sparql
SELECT ?parentSuccessor ?parentRoyalChild ?spouseFatherCharlesFat WHERE {
  # Step 1: Successor of Charles the Bald and their parent
  ?charlesTheBald dbo:succeededBy ?successor .
  ?charlesTheBald rdfs:label ""Charles the Bald""@en .
  ?successor dbo:parent ?parentSuccessor .

  # Step 2: Father of Carloman of Bavaria who is an office holder and royalty
  ?carlomanOfBavaria dbo:father ?fatherCarloman .
  ?carlomanOfBavaria rdfs:label ""Carloman of Bavaria""@en .
  ?fatherCarloman rdf:type/rdfs:subClassOf* dbo:OfficeHolder ;
                  rdf:type/rdfs:subClassOf* dbo:Royalty .

  # Step 3: Child of this father who is royalty and their parent
  ?childRoyal dbo:parent ?fatherCarloman .
  ?childRoyal rdf:type/rdfs:subClassOf* dbo:Royalty .
  ?childRoyal dbo:parent ?parentRoyalChild .

  # Step 4: Spouse of the father of Charles the Fat
  ?charlesTheFat dbo:father ?fatherCharlesFat .
  ?charlesTheFat rdfs:label ""Charles the Fat""@en .
  ?fatherCharlesFat dbo:spouse ?spouseFatherCharlesFat .
}
```",7,10,8,3,3,3,3,71,0,0,1,0,0.0,0
216,69,test,"Give me the team of the person born, that is a sports manager and a soccer manager and a soccer player, on the death of Pavel Vezhinov and player in the coach, that is a soccer player and a sports manager and a soccer manager, of Bosnia and Herzegovina national under-18 football team and player in the coach of the reference, that is an organisation and a soccer club, to Croatia U21.","SELECT ?result WHERE { ?v7 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsManager>. ?v7 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerPlayer>. ?v7 <http://dbpedia.org/ontology/team> ?result . ?v4 <http://dbpedia.org/ontology/coach> ?v3 . ?v4 <http://xmlns.com/foaf/0.1/name> ""Croatia U21""@en . ?v2 <http://dbpedia.org/ontology/birthDate> ?v1 . ?result <http://dbpedia.org/ontology/coach> ?v2 . ?v7 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerManager>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerManager>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsManager>. ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerClub>. <http://dbpedia.org/resource/Bosnia_and_Herzegovina_national_under-18_football_team> <http://dbpedia.org/ontology/coach> ?v7 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerPlayer>. <http://dbpedia.org/resource/Pavel_Vezhinov> <http://dbpedia.org/ontology/deathDate> ?v1 . ?v3 <http://dbpedia.org/ontology/team> ?result . }","```sparql
SELECT ?team WHERE {
  # Step 1: Identify Pavel Vezhinov's death date
  ?vezhinov dbo:dateOfDeath ?deathDate .
  ?vezhinov rdfs:label ""Pavel Vezhinov""@en .

  # Step 2: Find a person born on that date who is a sports manager, soccer manager, and player
  ?person dbo:birthDate ?birthDate ;
          dbo:occupation ?occupation1, ?occupation2, ?occupation3 .
  FILTER (?birthDate = ?deathDate)
  FILTER (CONTAINS(LCASE(str(?occupation1)), ""sports manager""))
  FILTER (CONTAINS(LCASE(str(?occupation2)), ""soccer manager""))
  FILTER (CONTAINS(LCASE(str(?occupation3)), ""soccer player""))

  # Step 3: Identify the coach of Bosnia and Herzegovina National Under-18 Football Team
  ?coach dbo:position ""Coach""@en ;
         dbo:team ""Bosnia and Herzegovina national under-18 football team""@en .

  # Step 4: Find if this coach was a player, sports manager, and soccer manager
  ?coach dbo:occupation ?occupationA, ?occupationB, ?occupationC .
  FILTER (CONTAINS(LCASE(str(?occupationA)), ""soccer player""))
  FILTER (CONTAINS(LCASE(str(?occupationB)), ""sports manager""))
  FILTER (CONTAINS(LCASE(str(?occupationC)), ""soccer manager""))

  # Step 5: Identify the organization or club associated with Croatia U21
  ?organization dbo:type dbr:Soccer_Club ;
                rdfs:label ""Croatia national under-21 football team""@en .

  # Step 6: Determine the team of the player in that coach's career
  ?player dbo:occupation ?occupationD, ?occupationE, ?occupationF .
  FILTER (?player = ?coach)
  FILTER (CONTAINS(LCASE(str(?occupationD)), ""soccer player""))
  FILTER (CONTAINS(LCASE(str(?occupationE)), ""sports manager""))
  FILTER (CONTAINS(LCASE(str(?occupationF)), ""soccer manager""))

  # Find the team of this player
  ?player dbo:team ?team .
}
```",8,16,9,3,3,3,3,71,0,0,1,0,0.0,0
465,62,test,"Give me the spouse of the child, that is a royalty, of the parent of Elizabeth of Austria (1526–1545) and successor of Renée of France and successor of the child of the parent of Ercole II d'Este, Duke of Ferrara.","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/spouse> ?v6 . ?v3 <http://dbpedia.org/property/father> ?v4 . ?v0 <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Elizabeth_of_Austria_(1526–1545)> . ?v3 <http://dbpedia.org/ontology/successor> ?result . ?v0 <http://dbpedia.org/ontology/child> ?v6 . ?v6 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. <http://dbpedia.org/resource/Ercole_II_d'Este,_Duke_of_Ferrara> <http://dbpedia.org/ontology/parent> ?v4 . <http://dbpedia.org/resource/Renée_of_France> <http://dbpedia.org/ontology/successor> ?result . }","```sparql
SELECT ?spouse WHERE {
  # Find Elizabeth of Austria (1526–1545) and her parent
  ?elizabeth dbo:parent ?parentElizabeth .
  ?elizabeth rdfs:label ""Elizabeth of Austria (1526–1545)""@en .

  # Find the successor of Renée of France
  ?rene dbo:succeededBy ?successorRenée .
  ?rene rdfs:label ""Renée of France""@en .

  # Find Ercole II d'Este, Duke of Ferrara's child and their parent
  ?ercole dbo:child ?childErcole .
  ?ercole rdfs:label ""Ercole II d'Este, Duke of Ferrara""@en .
  ?childErcole dbo:parent ?parentChildErcole .

  # Find the successor of this child
  ?childErcole dbo:succeededBy ?successorChildErcole .

  # Identify the royalty child from Elizabeth's parent
  ?parentElizabeth dbo:child ?royaltyChild .
  FILTER (regex(str(?royaltyChild), ""Royal"", ""i""))

  # Find the spouse of this royalty child
  ?royaltyChild dbo:spouse ?spouse .
}
```",7,8,8,3,3,3,3,71,0,0,1,0,0.0,0
216,64,test,"Give me the player in Mario Ivanković and team of the person born, that is a sports manager and a soccer manager and a soccer player, on the death of Pavel Vezhinov and player in the coach of the reference, that is an organisation and a soccer club, to Croatia U21.","SELECT ?result WHERE { ?v2 <http://dbpedia.org/ontology/team> ?result . ?v3 <http://dbpedia.org/ontology/coach> ?v2 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerClub>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerPlayer>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsManager>. ?v1 <http://dbpedia.org/ontology/birthDate> ?v0 . ?v3 <http://xmlns.com/foaf/0.1/name> ""Croatia U21""@en . ?result <http://dbpedia.org/ontology/coach> ?v1 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerManager>. <http://dbpedia.org/resource/Pavel_Vezhinov> <http://dbpedia.org/ontology/deathDate> ?v0 . <http://dbpedia.org/resource/Mario_Ivanković> <http://dbpedia.org/ontology/team> ?result . }","```sparql
SELECT ?marioTeam ?sportsManager ?coach WHERE {
  # Mario Ivanković and his team
  ?mario dbo:playerForTeam ?marioTeam .
  ?mario rdfs:label ""Mario Ivanković""@en .

  # Pavel Vezhinov's death date
  ?vezhinov dbo:deathDate ?deathDate .
  ?vezhinov rdfs:label ""Pavel Vezhinov""@en .

  # Sports manager who is also a soccer player born on Pavel Vezhinov's death date
  ?sportsManager dbo:birthDate ?birthDate ;
                 (dbo:sportManager | dbo:soccerPlayer) ?role .
  FILTER (?birthDate = ?deathDate)

  # Coach of an organisation related to Croatia U21
  ?organisation dbo:coach ?coach ;
                dbo:team ?croatiaU21 .
  ?croatiaU21 rdfs:label ""Croatia national under-21 football team""@en .
}
```",7,12,8,3,3,3,3,71,0,0,1,0,0.0,0
933,70,test,"Give me the band of the band, that is a group and a band and an organisation, of the person born, that is a musical artist, on 1947-04-21 and reference to the birth name of the professional in Musician and band of the band of Alan Warner (musician).","SELECT ?result WHERE { ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Band>. ?v3 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?result <http://xmlns.com/foaf/0.1/name> ?v6 . ?v5 <http://dbpedia.org/ontology/associatedMusicalArtist> ?v0 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Group>. ?v1 <http://dbpedia.org/property/birthName> ?v6 . ?v5 <http://dbpedia.org/ontology/birthDate> ""1947-04-21""^^<http://www.w3.org/2001/XMLSchema#date> . ?v1 <http://dbpedia.org/property/occupation> <http://dbpedia.org/resource/Musician> . <http://dbpedia.org/resource/Alan_Warner_(musician)> <http://dbpedia.org/ontology/associatedMusicalArtist> ?v3 . ?v0 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . }","```sparql
SELECT ?bandOfBand ?birthName WHERE {
  # Step 1: Identify the person born on 1947-04-21 who is a musical artist
  ?person dbo:birthDate ""1947-04-21""^^xsd:date ;
          rdf:type dbo:MusicalArtist .
  
  # Step 2: Find the band associated with this person that is both a group and an organization
  ?person dbo:band ?band .
  ?band rdf:type dbo:Band, dbo:Organization .

  # Step 3: Identify Alan Warner's band
  ?alanWarner rdfs:label ""Alan Warner (musician)""@en ;
              dbo:band ?alanBand .

  # Step 4: Find the professional in musician and band of Alan Warner's band
  ?professional dbo:memberOfBand ?alanBand ;
                rdf:type dbo:MusicalArtist .
  
  # Step 5: Reference the birth name of this professional
  ?professional foaf:name ?birthName .

  # Return the band associated with the initial person (band of the band)
  ?band rdfs:label ?bandOfBand .
}
```",8,12,9,3,3,3,3,71,0,0,1,0,0.0,0
573,68,test,"Give me the person decedent at the residence, that is a settlement, of the professional, that is American, in Politician and person decedent at the administration, that is a region, of the real name of Charlie Baker (Australian footballer) and parent of the author, that is a politician and an office holder, of Exchequer Standards.","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/deathPlace> ?v7 . ?v4 <http://dbpedia.org/property/governor> ?v5 . ?v7 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v0 <http://dbpedia.org/ontology/nationality> <http://dbpedia.org/resource/United_States>. ?v0 <http://dbpedia.org/property/residence> ?v7 . ?v0 <http://dbpedia.org/property/occupation> ""Politician""@en . <http://dbpedia.org/resource/Charlie_Baker_(Australian_footballer)> <http://xmlns.com/foaf/0.1/name> ?v5 . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Region>. ?result <http://dbpedia.org/ontology/deathPlace> ?v4 . ?v3 <http://dbpedia.org/ontology/parent> ?result . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. <http://dbpedia.org/resource/Exchequer_Standards> <http://dbpedia.org/property/author> ?v3 . }","```sparql
SELECT ?personDecedentAtResidence ?personDecedentAtAAdmin ?parentOfAuthor WHERE {
  # Find American professional in Politician and their decedent at a settlement residence
  ?americanPolitician dbo:profession dbr:American_politician .
  ?americanPolitician dbo:deathPlace ?residence .
  FILTER (isLiteral(?residence) && regex(str(?residence), ""settlement"", ""i""))
  
  # Find the decedent at this residence
  ?decedentAtResidence dbo:deathPlace ?residence .
  ?decedentAtResidence rdfs:label ?personDecedentAtResidence .

  # Find Charlie Baker (Australian football",8,13,9,3,3,3,3,71,0,0,2,0,0.0,0
645,68,test,"Give me the military force of the force, that is an event and a military conflict and a societal event, of the native, that is a president and a politician, of Restoration (Spain) and leader of the office, that is a government agency and an organisation, of Camilo Menéndez Tolosa and commander in the force of the commander in Siege of Madrid.",SELECT ?result WHERE { ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/GovernmentAgency>. ?v7 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?result <http://dbpedia.org/ontology/battle> ?v7 . <http://dbpedia.org/resource/Siege_of_Madrid> <http://dbpedia.org/ontology/commander> ?v5 . ?v4 <http://dbpedia.org/ontology/commander> ?v5 . ?v7 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v3 <http://dbpedia.org/ontology/leader> ?result . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v7 <http://dbpedia.org/ontology/commander> ?v0 . ?v4 <http://dbpedia.org/ontology/commander> ?result . ?v0 <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Restoration_(Spain)> . <http://dbpedia.org/resource/Camilo_Menéndez_Tolosa> <http://dbpedia.org/property/office> ?v3 . ?v7 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/President>. },"```sparql
SELECT ?militaryForce WHERE {
  # Find the native who is a president and politician during Restoration (Spain)
  ?native dbo:presidentOf ?restoration .
  ?restoration rdfs:label ""Restoration (Spain)""@en .
  ?native rdf:type dbo:Politician .

  # Identify the leader of an office that is both a government agency and organization
  ?office dbo:leader ?native .
  ?office rdf:type dbo:GovernmentAgency ;
          rdf:type dbo:Organization .

  # Find the military force involved in an event that is a military conflict and societal event
  ?event dbo:militaryConflict true .
  ?event dbo:societalEvent true .
  ?militaryForce dbo:event ?event .

  # Identify the commander in the Siege of Madrid
  ?commanderInSiege dbo:commanderOf ?siege .
  ?siege rdfs:label ""Siege of Madrid""@en .
  ?commanderInSiege rdfs:label ""Camilo Menéndez Tolosa""@en .

  # Link the military force to the commander in the Siege of Madrid
  ?militaryForce dbo:commander ?commanderInSiege .
}
```",8,15,9,3,3,3,3,71,0,0,1,0,0.0,0
465,70,test,"Give me the successor of the child of Alfonso I d'Este and spouse of the child, that is a royalty, of the parent of Elizabeth of Austria (1526–1545) and successor of the child, that is a royalty, of the parent of Charles Orlando, Dauphin of France.","SELECT ?result WHERE { ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v0 <http://dbpedia.org/ontology/child> ?v7 . ?v4 <http://dbpedia.org/ontology/successor> ?result . <http://dbpedia.org/resource/Charles_Orlando,_Dauphin_of_France> <http://dbpedia.org/ontology/parent> ?v1 . ?v4 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Alfonso_I_d'Este> . ?v0 <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Elizabeth_of_Austria_(1526–1545)> . ?v1 <http://dbpedia.org/ontology/child> ?v3 . ?v7 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v3 <http://dbpedia.org/ontology/successor> ?result . ?result <http://dbpedia.org/ontology/spouse> ?v7 . }","```sparql
SELECT ?successor WHERE {
  # Find child of Alfonso I d'Este
  ?alfonso dbo:child ?child .
  ?alfonso rdfs:label ""Alfonso I d'Este""@en .

  # Find spouse of the child who is royalty
  OPTIONAL { 
    ?child dbo:spouse ?royalSpouse .
    FILTER (regex(str(?royalSpouse), ""Royal"", ""i""))
  }

  # Find successor of the royal spouse
  OPTIONAL {
    ?royalSpouse dbo:successor ?successor .
  }

  # Find parent of Elizabeth of Austria (1526–1545)
  ?elizabeth dbo:parent ?parentElizabeth .
  ?elizabeth rdfs:label ""Elizabeth of Austria""@en .

  # Find child of this parent who is royalty
  OPTIONAL {
    ?parentElizabeth dbo:child ?royalChild .
    FILTER (regex(str(?royalChild), ""Royal"", ""i""))
  }

  # Find successor of the royal child
  OPTIONAL {
    ?royalChild dbo:successor ?successor2 .
  }

  # Find parent of Charles Orlando, Dauphin of France
  ?charlesOrlando dbo:parent ?parentCharlesOrlando .
  ?charlesOrlando rdfs:label ""Charles Orlando, Dauphin of France""@en .

  # Find child of this parent who is royalty
  OPTIONAL {
    ?parentCharlesOrlando dbo:child ?royalChild2 .
    FILTER (regex(str(?royalChild2), ""Royal"", ""i""))
  }

  # Find successor of the royal child
  OPTIONAL {
    ?royalChild2 dbo:successor ?successor3 .
  }
}
```",8,10,9,3,3,3,3,71,0,0,1,0,0.0,0
965,58,test,"Give me the parent of the child, that is a royalty, of Prince Louis of Battenberg and parent of the person born, that is a noble, as the birth name of George Mountbatten, 2nd Marquess of Milford Haven and spouse of Prince Louis of Battenberg.","SELECT ?result WHERE { ?v0 <http://dbpedia.org/ontology/parent> ?result . ?v5 <http://dbpedia.org/ontology/parent> ?result . ?result <http://dbpedia.org/ontology/spouse> <http://dbpedia.org/resource/Prince_Louis_of_Battenberg> . ?v0 <http://dbpedia.org/property/birthName> ?v4 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Noble>. ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. <http://dbpedia.org/resource/George_Mountbatten,_2nd_Marquess_of_Milford_Haven> <http://dbpedia.org/property/birthName> ?v4 . ?v5 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Prince_Louis_of_Battenberg> . }","```sparql
SELECT ?parent WHERE {
  # Step 1: Find a child of Prince Louis of Battenberg who is royalty
  ?child dbo:parent ?louis .
  ?louis rdfs:label ""Prince Louis of Battenberg""@en .
  FILTER EXISTS { ?child rdf:type dbo:RoyalFamilyMember } .

  # Step 2: Determine the parent of this royal child
  OPTIONAL {
    ?child dbo:parent ?parent .
  }

  # Step 3: Identify George Mountbatten by his birth name and noble status
  ?george rdfs:label ""George Mountbatten, 2nd Marquess of Milford Haven""@en .
  FILTER EXISTS { ?george rdf:type dbo:Noble } .

  # Step 4: Find the spouse of Prince Louis who is George Mountbatten
  OPTIONAL {
    ?louis dbo:spouse ?spouse .
    ?spouse = ?george .
  }

  # Step 5: Retrieve the parent of this person (George Mountbatten)
  OPTIONAL {
    ?george dbo:parent ?parent .
  }
}
```",6,8,7,3,3,3,3,71,0,0,1,0,0.0,0
47,59,test,"Give me the office of the awardee of the award, that is an award, of Mantu Ghosh and office of the administration of the commander, that is a politician, in Operation Green Hunt.",SELECT ?result WHERE { ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Award>. <http://dbpedia.org/resource/Mantu_Ghosh> <http://dbpedia.org/property/awards> ?v0 . ?v5 <http://dbpedia.org/property/awards> ?v0 . <http://dbpedia.org/resource/Operation_Green_Hunt> <http://dbpedia.org/ontology/commander> ?v3 . ?v5 <http://dbpedia.org/property/office> ?result . ?v2 <http://dbpedia.org/property/governor> ?v3 . ?v2 <http://dbpedia.org/property/office> ?result . },"```sparql
SELECT ?officeOfAwardee ?officeOfCommander WHERE {
  # Part 1: Office of the Awardee (Mantu Ghosh)
  ?mantuGhosh dbo:award ?award .
  ?mantuGhosh rdfs:label ""Mantu Ghosh""@en .
  OPTIONAL { 
    ?mantuGhosh dbo:office ?officeOfAwardee .
  }

  # Part 2: Office of the Commander in Operation Green Hunt
  ?operationGreenHunt dbo:participant ?politician .
  ?operationGreenHunt rdfs:label ""Operation Green Hunt""@en .
  FILTER (regex(str(?politician), ""Politician"", ""i""))
  OPTIONAL {
    ?politician dbo:office ?officeOfCommander .
  }
}
```",6,8,7,3,2,3,3,71,0,0,1,0,0.0,0
791,58,test,"Give me the father of the child, that is a royalty, of the father, that is a royalty and an office holder, of Emperor Antoku and spouse of Taira no Tokuko and predecessor of the child of Emperor Takakura.",SELECT ?result WHERE { ?v2 <http://dbpedia.org/property/father> ?result . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. <http://dbpedia.org/resource/Emperor_Antoku> <http://dbpedia.org/property/father> ?v1 . ?v2 <http://dbpedia.org/property/father> ?v1 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?result <http://dbpedia.org/ontology/spouse> <http://dbpedia.org/resource/Taira_no_Tokuko> . ?v5 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Emperor_Takakura> . ?result <http://dbpedia.org/ontology/successor> ?v5 . },"```sparql
SELECT ?father WHERE {
  # Find Emperor Antoku and his father (Taira no Kiyomori)
  ?antoku dbo:parent ?father .
  ?antoku rdfs:label ""Emperor Antoku""@en .

  # Ensure the father is Taira no Kiyomori, who is royalty and an office holder
  ?father rdfs:label ""Taira no Kiyomori""@en .
  
  # Find Taira no Tokuko's spouse (Emperor Go-Shirakawa)
  OPTIONAL {
    ?tokuko dbo:spouse ?goShirakawa .
    ?tokuko rdfs:label ""Taira no Tokuko""@en .
  }

  # Ensure the predecessor of Emperor Antoku is Taira no Kiyomori
  OPTIONAL {
    ?takakuraChild dbo:parent ?antoku .
    ?takakuraChild rdfs:label ""Emperor Takakura""@en .
  }
}
```",6,9,7,3,3,3,3,71,0,0,1,0,0.0,0
232,8,test,Give me the artistic movement of Ella Cheever Thayer and claim to fame of the person born as Emily Katherine Jacques.,"SELECT ?result WHERE { <http://dbpedia.org/resource/Ella_Cheever_Thayer> <http://dbpedia.org/ontology/movement> ?result . ?v2 <http://dbpedia.org/property/birthName> ""Emily Katherine Jacques""@en . ?v2 <http://dbpedia.org/ontology/knownFor> ?result . }","```sparql
SELECT ?artisticMovement ?claimToFame WHERE {
  # Find Ella Cheever Thayer's artistic movement
  ?ella dbo:birthName ""Ella Cheever Thayer""@en .
  ?ella dbo:artisticMovement ?artisticMovement .

  # Find Emily Katherine Jacques' claim to fame
  ?emily dbo:birthName ""Emily Katherine Jacques""@en .
  OPTIONAL { 
    ?emily dbo:knownFor ?claimToFame .
  }
}
```",3,3,4,2,2,2,2,9,0,0,1,0,0.0,0
507,61,test,"Give me the professional in the profession of the person born on 1966-02-18 and director of the movie, that is a movie and a work, with the person born on 1919-06-17.","SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/birthDate> ""1966-02-18""^^<http://www.w3.org/2001/XMLSchema#date> . ?result <http://dbpedia.org/property/occupation> ?v3 . ?v1 <http://dbpedia.org/property/occupation> ?v3 . ?v5 <http://dbpedia.org/property/starring> ?v0 . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?v5 <http://dbpedia.org/ontology/director> ?result . ?v0 <http://dbpedia.org/ontology/birthDate> ""1919-06-17""^^<http://www.w3.org/2001/XMLSchema#date> . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Film>. }","```sparql
SELECT ?professional WHERE {
  # Find the person born on 1966-02-18 and their profession
  ?person1 dbo:birthDate ""1966-02-18""^^xsd:date ;
           dbo:profession ?profession .

  # Find movies directed by this person
  ?movie dbo:director ?person1 ;
         a dbo:Film .

  # Find the person born on 1919-06-17 and their professional connection to the movie
  ?person2 dbo:birthDate ""1919-06-17""^^xsd:date .
  
  OPTIONAL {
    ?person2 dbo:profession ?sameProfession .
    FILTER (?sameProfession = ?profession)
  }

  # Check if this person is associated with any of those movies in a professional capacity
  ?movie dbo:starring ?person2 .

  # Find another professional in the same profession as the first person
  ?professional dbo:profession ?profession .
  FILTER(?professional != ?person1)
}
```",6,8,7,3,2,3,3,71,0,0,2,0,0.0,0
365,19,test,"Give me the spouse of the native, that is a politician, of the reference to Полтавская губерния and person born as the birth name of Symon Petliura.","SELECT ?result WHERE { ?v4 <http://dbpedia.org/ontology/spouse> ?result . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v4 <http://dbpedia.org/ontology/birthPlace> ?v0 . <http://dbpedia.org/resource/Symon_Petliura> <http://dbpedia.org/property/birthName> ?v2 . ?result <http://dbpedia.org/property/birthName> ?v2 . ?v0 <http://xmlns.com/foaf/0.1/name> ""Полтавская губерния""@en . }","```sparql
SELECT ?spouse WHERE {
  # Find a native politician from Poltava Governorate
  ?politician dbo:nativePlace dbr:Poltava_Governorate ;
              rdf:type dbo:Politician .
  
  # Identify Symon Petliura by his birth name
  ?petliura dbo:birthName ""Symon Petliura""@en ;
            rdf:type dbo:Politician .

  # Ensure the politician is the same as Symon Petliura
  FILTER (?politician = ?petliura)

  # Find the spouse of this politician
  ?politician dbo:spouse ?spouse .
}
```",5,6,6,3,2,3,2,20,0,0,1,0,0.0,0
47,66,test,"Give me the office of the awardee of Banga Bhushan and office of the awardee of the entity, that is an award, in India and office of the administration of Jagdeep Dhankhar.",SELECT ?result WHERE { ?v6 <http://dbpedia.org/property/office> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Award>. ?v2 <http://dbpedia.org/property/office> ?result . ?v1 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/India> . ?v3 <http://dbpedia.org/property/office> ?result . ?v3 <http://dbpedia.org/property/governor> <http://dbpedia.org/resource/Jagdeep_Dhankhar> . ?v2 <http://dbpedia.org/property/awards> ?v1 . ?v6 <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/Banga_Bhushan> . },"```sparql
SELECT ?bangaOffice ?otherAwardOffice ?dhankharOffice WHERE {
  # Find the office of an awardee of Banga Bhushan
  ?award dbo:recipient ?awardee .
  ?award rdfs:label ""Banga Bhushan""@en .
  ?awardee dbo:office ?bangaOffice .

  # Find another award in India and its awardee's office
  OPTIONAL {
    ?otherAward dbo:recipient ?otherAwardee .
    ?otherAward dbo:country dbr:India .
    ?otherAwardee dbo:office ?otherAwardOffice .
  }

  # Find the office of Jagdeep Dhankhar
  ?dhankhar foaf:name ""Jagdeep Dhankhar""@en .
  ?dhankhar dbo:office ?dhankharOffice .
}
```",7,8,8,3,3,3,3,71,0,0,1,0,0.0,0
987,59,test,"Give me the birth place of the band, that is an artist and a musical artist, of the band, that is an artist, of Dado Polumenta and birth place of the actor of the show, that is a film, with Emir Hadžihafizbegović.",SELECT ?result WHERE { ?v0 <http://dbpedia.org/property/starring> ?v4 . <http://dbpedia.org/resource/Dado_Polumenta> <http://dbpedia.org/ontology/associatedMusicalArtist> ?v3 . ?v0 <http://dbpedia.org/ontology/starring> <http://dbpedia.org/resource/Emir_Hadžihafizbegović> . ?v1 <http://dbpedia.org/ontology/birthPlace> ?result . ?v3 <http://dbpedia.org/ontology/associatedMusicalArtist> ?v1 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Film>. ?v4 <http://dbpedia.org/ontology/birthPlace> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. },"```sparql
SELECT ?birthPlaceBandArtist ?birthPlaceActor WHERE {
  # Find Dado Polumenta's band
  ?dado dbo:member ?band1 .
  ?dado rdfs:label ""Dado Pulević""@en .

  # Find the artist of that band
  ?band1 dbo:artist ?band2 .

  # Get birth place of the second band (artist)
  ?band2 dbo:birthPlace ?birthPlaceBandArtist .

  # Find Emir Hadžihafizbegović's film show
  ?filmShow dbo:actor ?emir .
  ?emir rdfs:label ""Emir Hadžihafizbegović""@en .

  # Get birth place of the actor in that film show
  ?emir dbo:birthPlace ?birthPlaceActor .
}
```",6,10,7,3,2,3,3,71,0,0,4,0,0.0,0
582,64,test,"Give me the reference to the residence of the reference, that is a scientist, to Hirotaka Sugawara and figure known as the nickname of the team, that is an organisation, of Hajime Moriyasu and player in Kazuaki Nagasawa.","SELECT ?result WHERE { ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Scientist>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?v3 <http://dbpedia.org/property/residence> ?v2 . ?v0 <http://dbpedia.org/ontology/coach> <http://dbpedia.org/resource/Hajime_Moriyasu> . ?v3 <http://xmlns.com/foaf/0.1/name> ""Hirotaka Sugawara""@en . <http://dbpedia.org/resource/Kazuaki_Nagasawa> <http://dbpedia.org/ontology/team> ?result . ?result <http://dbpedia.org/property/nickname> ?v1 . ?result <http://xmlns.com/foaf/0.1/name> ?v2 . ?v0 <http://dbpedia.org/property/nickname> ?v1 . }","```sparql
SELECT ?residence ?nickname ?playerRole WHERE {
  # Find residence of Hirotaka Sugawara, who is a scientist
  ?sugawara dbo:residence ?residence .
  ?sugawara rdfs:label ""Hirotaka Sugawara""@en .
  
  # Find the nickname of the team associated with Hajime Moriyasu
  OPTIONAL {
    ?moriyasu dbo:member ?team .
    ?team dbo:nickname ?nickname .
    ?moriyasu rdfs:label ""Hajime Moriyasu""@en .
  }
  
  # Confirm Kazuaki Nagasawa is a player
  OPTIONAL {
    ?nagasawa rdf:type dbo:Player .
    ?nagasawa rdfs:label ""Kazuaki Nagasawa""@en .
  }
}
```",7,9,8,3,3,3,3,71,0,0,1,0,0.0,0
459,24,test,"Give me the governor of the administration, that is a politician, of Brad Henry and person born as the birth name of Kevin Stitt.",SELECT ?result WHERE { ?result <http://dbpedia.org/property/birthName> ?v1 . <http://dbpedia.org/resource/Kevin_Stitt> <http://dbpedia.org/property/birthName> ?v1 . ?v2 <http://dbpedia.org/property/governor> ?result . ?v2 <http://dbpedia.org/property/governor> <http://dbpedia.org/resource/Brad_Henry> . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. },"```sparql
SELECT ?governor ?person WHERE {
  # Find Brad Henry and his administration
  ?bradHenry dbo:office ?office .
  ?bradHenry rdfs:label ""Brad Henry""@en .
  ?office dbo:position ""Governor of Oklahoma""@en .
  
  # Find the governor associated with Brad Henry's administration
  OPTIONAL {
    ?admin dbo:governor ?governor .
    FILTER (regex(str(?governor), ""politician"", ""i""))
  }
  
  # Find Kevin Stitt and his birth name
  ?kevinStitt rdfs:label ""Kevin Stitt""@en .
  ?kevinStitt foaf:name ?birthName .

  # Match the birth name to another person
  ?person foaf:name ?birthName .
}
```",4,5,5,2,2,2,3,28,0,0,1,0,0.0,0
645,70,test,"Give me the military force of the force, that is an event and a military conflict and a societal event, of the native, that is a president and a politician, of Restoration (Spain) and commander in the force of Carlos Asensio Cabanillas and leader of the office, that is a government agency and an organisation, of the native of Restoration (Spain).",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/battle> ?v7 . ?v1 <http://dbpedia.org/property/office> ?v3 . ?v7 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?v3 <http://dbpedia.org/ontology/leader> ?result . ?v4 <http://dbpedia.org/ontology/commander> ?result . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/GovernmentAgency>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?v7 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v7 <http://dbpedia.org/ontology/commander> ?v0 . ?v7 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?v1 <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Restoration_(Spain)> . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/President>. ?v4 <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Carlos_Asensio_Cabanillas> . ?v0 <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Restoration_(Spain)> . },"```sparql
SELECT ?militaryForce WHERE {
  # Identify the native of Restoration (Spain) who is both president and politician
  ?president dbo:birthPlace dbr:Bourbon_Restoration_in_Spain ;
             rdf:type dbo:President ;
             rdf:type dbo:Politician .

  # Find a military conflict that is also an event and societal event
  ?event dbo:isPartOf ?militaryConflict ;
         rdf:type dbo:MilitaryConflict ;
         rdf:type dbo:Event ;
         rdf:type dbo:SocietalEvent .

  # Identify the commander of Carlos Asensio Cabanillas
  ?cabanillas dbo:commander ?commander .
  ?cabanillas rdfs:label ""Carlos Asensio Cabanillas""@en .

  # Find the leader of an organization related to the president/politician
  ?organization dbo:leader ?president ;
                rdf:type dbo:GovernmentAgency ;
                rdf:type dbo:Organization .

  # Link the military force with the event and conflict
  ?militaryForce dbo:participatedIn ?event .
}
```",8,15,9,3,3,3,3,71,0,0,2,0,0.0,0
987,70,test,"Give me the entity in the region, that is a country, of the time zone, that is a sports event, in Canicosa de la Sierra and birth place of the actor of the show, that is a film, with Emir Hadžihafizbegović and birth place of the band, that is an artist and a musical artist, of Šako Polumenta.",SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Film>. ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsEvent>. <http://dbpedia.org/resource/Šako_Polumenta> <http://dbpedia.org/ontology/associatedMusicalArtist> ?v3 . ?v0 <http://dbpedia.org/property/timeZone> ?v5 . ?v1 <http://dbpedia.org/ontology/starring> <http://dbpedia.org/resource/Emir_Hadžihafizbegović> . <http://dbpedia.org/resource/Canicosa_de_la_Sierra> <http://dbpedia.org/ontology/timeZone> ?v5 . ?v6 <http://dbpedia.org/ontology/birthPlace> ?result . ?v1 <http://dbpedia.org/property/starring> ?v6 . ?result <http://dbpedia.org/ontology/country> ?v0 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?v3 <http://dbpedia.org/ontology/birthPlace> ?result . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. },"```sparql
SELECT DISTINCT ?entity WHERE {
  # Step 1: Find the time zone of Canicosa de la Sierra
  ?canicosa dbo:timeZone ?timezone .
  ?canicosa rdfs:label ""Canicosa de la Sierra""@en .

  # Step 2: Identify a sports event in that time zone
  ?event dbo:location ?location .
  ?event rdf:type dbo:SportsEvent .
  ?location dbo:timeZone ?timezone .

  # Step 3: Determine the region and country of the sports event
  ?region dbo:country ?country .
  ?location dbo:partOf ?region .

  # Step 4: Find Emir Hadžihafizbegović's film show and his birthplace
  ?film dbo:actor ?emir .
  ?emir rdfs:label ""Emir Hadžihafizbegović""@en .
  ?emir dbo:birthPlace ?emirBirthPlace .

  # Step 5: Find Šako Polumenta's band and its birthplace
  ?band dbo:member ?sako .
  ?sako rdfs:label ""Šako Polumenta""@en .
  ?band rdf:type dbo:MusicalArtist .
  ?band dbo:birthPlace ?bandBirthPlace .

  # Step 6: Find the entity that matches both birthplaces and is in the country
  FILTER (?emirBirthPlace = ?bandBirthPlace)
  ?entity dbo:country ?country .
}
```",8,13,9,3,3,3,3,71,0,0,1,0,0.0,0
917,58,test,"Give me the child of the father of the child, that is a royalty, of Kamehameha III and child of the father of Keʻelikōlani and parent of Albert Kamehameha.",SELECT ?result WHERE { ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. <http://dbpedia.org/resource/Kamehameha_III> <http://dbpedia.org/ontology/child> ?v4 . ?result <http://dbpedia.org/property/father> ?v0 . ?v4 <http://dbpedia.org/property/father> ?v0 . <http://dbpedia.org/resource/Keʻelikōlani> <http://dbpedia.org/property/father> ?v5 . ?result <http://dbpedia.org/ontology/parent> ?v5 . ?result <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Albert_Kamehameha> . },"```sparql
SELECT ?child WHERE {
  # Find a royal child of Kamehameha III and their father
  ?kamehamehaIII dbo:child ?royalChild .
  ?kamehamehaIII rdfs:label ""Kamehameha III""@en .
  FILTER (regex(str(?royalChild), ""Royal"", ""i""))
  
  # Find the father of this royal child
  ?royalChild dbo:parent ?fatherOfRoyalChild .

  # Identify the father of Keʻelikōlani
  ?keelikolanisFather dbo:child ?keelikolanis .
  ?keelikolanis rdfs:label ""Keʻelikōlani""@en .

  # Find a child of this person who is also a parent to Albert Kamehameha
  ?fatherOfRoyalChild dbo:parent ?commonParent .
  ?commonParent dbo:child ?albertKamehameha .
  ?albertKamehameha rdfs:label ""Albert Kamehameha""@en .

}
```",6,7,7,3,3,3,3,71,0,0,1,0,0.0,0
36,28,test,"Give me the actor of the claim to fame, that is a film, of Lepacious Bose and person born in the birth year of Deanne Bray and person born as the birth name of Ayo Makun.",SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Film>. ?result <http://dbpedia.org/ontology/birthYear> ?v3 . <http://dbpedia.org/resource/Ayo_Makun> <http://dbpedia.org/property/birthName> ?v5 . ?result <http://dbpedia.org/property/birthName> ?v5 . <http://dbpedia.org/resource/Lepacious_Bose> <http://dbpedia.org/ontology/knownFor> ?v1 . <http://dbpedia.org/resource/Deanne_Bray> <http://dbpedia.org/ontology/birthYear> ?v3 . ?v1 <http://dbpedia.org/ontology/starring> ?result . },"```sparql
SELECT ?actor WHERE {
  # Find Lepacious Bose's claim to fame (film)
  ?lepacious dbo:claimToFame ?film .
  ?lepacious rdfs:label ""Lepacious Bose""@en .

  # Find Deanne Bray's birth year
  ?deanne dbo:birthdayYear ?birthYear .
  ?deanne rdfs:label ""Deanne Bray""@en .

  # Find Ayo Makun's birth name
  ?ayo dbo:birthName ?birthName .
  ?ayo rdfs:label ""Ayo Makun""@en .

  # Find an actor associated with the film, born in Deanne Bray's birth year, and shares Ayo Makun's birth name
  ?actor dbo:film ?film ;
         dbo:birthdayYear ?birthYear ;
         dbo:birthName ?birthName .
}
```",6,7,7,2,3,2,3,28,0,0,1,0,0.0,0
606,20,test,"Give me the birthplace of the alumnus of the figure known, that is a university and a sports league and an educational institution, as Penn Quakers and figure known as the nickname of the figure known, that is a settlement, as Barb City.","SELECT ?result WHERE { ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsLeague>. ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/University>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. ?v1 <http://dbpedia.org/property/nickname> ?v2 . ?v4 <http://dbpedia.org/property/nickname> <http://dbpedia.org/resource/Penn_Quakers> . ?v5 <http://dbpedia.org/ontology/birthPlace> ?result . ?v5 <http://dbpedia.org/ontology/almaMater> ?v4 . ?result <http://dbpedia.org/property/nickname> ?v2 . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/EducationalInstitution>. ?v1 <http://dbpedia.org/property/nickname> ""Barb City""@en . }","```sparql
SELECT ?alumnus ?birthPlace WHERE {
  # Find an alumnus from the University of Pennsylvania (Penn Quakers)
  ?alumnus dbo:almaMater dbr:University_of_Pennsylvania .
  
  # Retrieve the birthplace of this alumnus
  ?alumnus dbo:birthPlace ?birthPlace .

  # Confirm that ""Barb City"" is associated with Barbados
  OPTIONAL {
    ?barbCity rdfs:label ""Barb City""@en .
    ?barbCity dbo:wikiPageRedirects dbr:Barbados .
  }
}
```",6,10,7,3,2,3,2,20,1,1359,0,0.0007352941176470588,1.0,0.0014695077149155032
47,67,test,"Give me the office of the awardee of the entity, that is an award, in India and office of the awardee of the award, that is an award, of Mantu Ghosh and office of Suvendu Adhikari.",SELECT ?result WHERE { ?v3 <http://dbpedia.org/property/awards> ?v1 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Award>. ?v6 <http://dbpedia.org/property/office> ?result . ?v1 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/India> . <http://dbpedia.org/resource/Suvendu_Adhikari> <http://dbpedia.org/property/office> ?result . ?v3 <http://dbpedia.org/property/office> ?result . ?v6 <http://dbpedia.org/property/awards> ?v0 . <http://dbpedia.org/resource/Mantu_Ghosh> <http://dbpedia.org/property/awards> ?v0 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Award>. },"```sparql
SELECT DISTINCT ?award (GROUP_CONCAT(DISTINCT ?awardeeOffice; separator="", "") AS ?awardeeOffices) WHERE {
  # Office of the awardee of an award in India
  {
    ?award dbo:country dbr:India .
    ?award dbo:recipient ?person .
    ?person dbo:office ?awardeeOffice .
  }
  
  UNION
  
  # Office of the awardee of an award associated with Mantu Ghosh
  {
    ?award dbo:recipient ?mantuAwardRecipient .
    ?mantuAwardRecipient foaf:name ""Mantu Ghosh"" .
    ?award dbo:recipient ?person .
    ?person dbo:office ?awardeeOffice .
  }
  
  UNION
  
  # Office of Suvendu Adhikari
  {
    ?suvendu foaf:name ""Suvendu Adhikari"" .
    ?suvendu dbo:office ?suvenduOffice .
    BIND(?suvenduOffice AS ?awardeeOffices)
  }
}
GROUP BY ?award
```",7,9,8,3,3,3,3,71,0,0,1,0,0.0,0
573,65,test,"Give me the person decedent at the residence, that is a settlement, of the professional, that is American, in Politician and person decedent at the administration, that is a region, of Charlie Baker and parent of the author, that is a politician and an office holder, of Exchequer Standards.","SELECT ?result WHERE { <http://dbpedia.org/resource/Exchequer_Standards> <http://dbpedia.org/property/author> ?v3 . ?v3 <http://dbpedia.org/ontology/parent> ?result . ?result <http://dbpedia.org/ontology/deathPlace> ?v4 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v0 <http://dbpedia.org/property/residence> ?v6 . ?v4 <http://dbpedia.org/property/governor> ""Charlie Baker""@en . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v0 <http://dbpedia.org/property/occupation> ""Politician""@en . ?v0 <http://dbpedia.org/ontology/nationality> <http://dbpedia.org/resource/United_States>. ?v6 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. ?result <http://dbpedia.org/ontology/deathPlace> ?v6 . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Region>. }","```sparql
SELECT ?personDecedent WHERE {
  # Charlie Baker's professional residence (settlement)
  ?charlieBaker dbo:profession dbr:Politician ;
                dbo:residence ?professionalResidence .
  FILTER (str(?charlieBaker) = ""Charlie_Baker_(politician)"")

  # Decedent at the professional residence
  ?decedent1 dbo:placeOfDeath ?professionalResidence .

  # Charlie Baker's administration (region)
  ?administration dbo:member ?charlieBaker .
  FILTER (str(?administration) IN (""Massachusetts""))

  # Decedent at the administration
  ?decedent2 dbo:placeOfDeath ?administration .

  # Author of Exchequer Standards who is a politician and office holder
  ?author dbo:work dbr:Exchequer_Standards ;
          rdf:type dbo:Politician, dbo:OfficeHolder .
  
  # Parent of the author
  ?parent dbo:child ?author .

  # Find common decedent at both locations
  FILTER (?decedent1 = ?decedent2)
  BIND(?decedent1 AS ?personDecedent)
}
```",7,12,8,3,3,3,3,71,0,0,2,0,0.0,0
965,61,test,"Give me the parent of the child, that is a royalty, of the person born, that is a politician, on 1854-05-24 and parent of the person born, that is a noble, as the birth name of George Mountbatten, 2nd Marquess of Milford Haven.","SELECT ?result WHERE { <http://dbpedia.org/resource/George_Mountbatten,_2nd_Marquess_of_Milford_Haven> <http://dbpedia.org/property/birthName> ?v3 . ?v0 <http://dbpedia.org/property/birthName> ?v3 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Noble>. ?v1 <http://dbpedia.org/ontology/birthDate> ""1854-05-24""^^<http://www.w3.org/2001/XMLSchema#date> . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v4 <http://dbpedia.org/ontology/parent> ?result . ?v4 <http://dbpedia.org/property/father> ?v1 . ?v0 <http://dbpedia.org/ontology/parent> ?result . }","```sparql
SELECT ?parent WHERE {
  # Find the politician born on 1854-05-24
  ?politician dbo:birthDate ""1854-05-24""^^xsd:date ;
              rdf:type dbo:Politician .
  
  # Identify George Mountbatten, 2nd Marquess of Milford Haven as a noble child of this politician
  ?george dbo:birthName ""George Mountbatten, 2nd Marquess of Milford Haven""@en ;
          dbo:parent ?politician ;
          rdf:type dbo:Noble .
  
  # Find the parent of George Mountbatten
  ?george dbo:parent ?parent .

  # Identify any royalty child of this parent
  OPTIONAL {
    ?royaltyChild dbo:parent ?parent ;
                  rdf:type dbo:Royalty .
  }
}
```",6,9,7,3,2,3,3,71,0,0,2,0,0.0,0
465,63,test,"Give me the successor of the child, that is a royalty, of Anne of Brittany and successor of the child of the parent of Ercole II d'Este, Duke of Ferrara and spouse of the child, that is a royalty, of Ferdinand I, Holy Roman Emperor.","SELECT ?result WHERE { ?v3 <http://dbpedia.org/property/father> ?v4 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. <http://dbpedia.org/resource/Ferdinand_I,_Holy_Roman_Emperor> <http://dbpedia.org/ontology/child> ?v6 . ?result <http://dbpedia.org/ontology/spouse> ?v6 . ?v3 <http://dbpedia.org/ontology/successor> ?result . ?v6 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. <http://dbpedia.org/resource/Anne_of_Brittany> <http://dbpedia.org/ontology/child> ?v2 . <http://dbpedia.org/resource/Ercole_II_d'Este,_Duke_of_Ferrara> <http://dbpedia.org/ontology/parent> ?v4 . ?v2 <http://dbpedia.org/ontology/successor> ?result . }","```sparql
SELECT ?successor WHERE {
  # Step a: Child of Anne of Brittany who is royalty
  ?anneChild dbo:parent dbc:Anne_of_Brittany .
  ?anneChild rdf:type dbo:Monarch .

  # Step b: Successor of this royal child
  OPTIONAL { 
    ?anneChild dbo:successor ?successor1 .
  }

  # Step c: Parent of Ercole II d'Este, Duke of Ferrara
  ?ercoleParent dbo:child dbc:Ercole_II_d%27Este .

  # Step d: Child of this parent
  OPTIONAL {
    ?ercoleChild dbo:parent ?ercoleParent .
  }

  # Step e: Successor of this child
  OPTIONAL {
    ?ercoleChild dbo:successor ?successor2 .
  }

  # Step f: Spouse of the royal child of Ferdinand I, Holy Roman Emperor
  ?ferdinandChild rdf:type dbo:Monarch ;
                  dbo:parent dbc:Ferdinand_I,_Holy_Roman_Emperor .

  OPTIONAL {
    ?spouse dbo:spouse ?ferdinandChild .
  }

  # Final step: Find the successor of the child from Step b or e
  FILTER (?successor = ?successor1 || ?successor = ?successor2)
}
```",7,9,8,3,3,3,3,71,0,0,1,0,0.0,0
791,71,test,"Give me the spouse of the spouse, that is a royalty, of the reference to Emperor Takakura and predecessor of the child of the child, that is an office holder and a royalty, of Emperor Go-Shirakawa and father of the child, that is a royalty, of the father, that is a royalty and an office holder, of Emperor Antoku.","SELECT ?result WHERE { ?v8 <http://dbpedia.org/property/father> ?result . <http://dbpedia.org/resource/Emperor_Antoku> <http://dbpedia.org/property/father> ?v7 . ?v7 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v1 <http://xmlns.com/foaf/0.1/name> ""Emperor Takakura""@en . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?result <http://dbpedia.org/ontology/spouse> ?v2 . ?v5 <http://dbpedia.org/property/father> ?v4 . ?result <http://dbpedia.org/ontology/successor> ?v5 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v4 <http://dbpedia.org/ontology/parent> <http://dbpedia.org/resource/Emperor_Go-Shirakawa> . ?v2 <http://dbpedia.org/ontology/spouse> ?v1 . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v8 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v8 <http://dbpedia.org/property/father> ?v7 . ?v7 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. }","```sparql
SELECT ?finalSpouse WHERE {
  # Step a: Spouse of the spouse (royalty) of Emperor Takakura
  ?takakura dbo:spouse ?spouse1 .
  ?takakura rdfs:label ""Emperor Takakura""@en .
  FILTER EXISTS { ?spouse1 rdf:type dbo:RoyalFamilyMember . }
  
  OPTIONAL {
    ?spouse1 dbo:spouse ?finalSpouse .
    FILTER EXISTS { ?finalSpouse rdf:type dbo:RoyalFamilyMember . }
  }

  # Step b: Predecessor of the child of the child (office holder and royalty) of Emperor Go-Shirakawa
  ?goShirakawa dbo:child ?child1 .
  ?goShirakawa rdfs:label ""Emperor Go",9,15,10,3,3,3,3,71,0,0,1,0,0.0,0
98,25,test,Give me the birth place of the person born as Paolo Elito M. Ballesteros IV and entity in Philippines and region of the time zone of Lopez Jaena.,"SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/timeZone> ?v4 . ?v1 <http://dbpedia.org/property/birthName> ""Paolo Elito M. Ballesteros IV""@en . ?result <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Philippines> . <http://dbpedia.org/resource/Lopez_Jaena> <http://dbpedia.org/ontology/timeZone> ?v4 . ?v1 <http://dbpedia.org/ontology/birthPlace> ?result . }","```sparql
SELECT ?birthPlace ?entityInPhilippines ?region WHERE {
  # Find birth place of Paolo Elito M. Ballesteros IV
  ?person dbo:birthPlace ?birthPlace .
  ?person rdfs:label ""Paolo Elito M. Ballesteros IV""@en .

  # Identify a notable entity in the Philippines
  OPTIONAL {
    ?entityInPhilippines rdf:type dbo:City ;
                         dbo:country dbr:Philippines .
  }

  # Find time zone and region for Lopez Jaena
  ?lopezJaena dbo:timeZone ?timeZone .
  ?lopezJaena rdfs:label ""Lopez, Jaena""@en .
  ?region dbo:timezone ?timeZone ;
          rdf:type dbo:AdministrativeRegion .

}
```",5,5,6,2,3,2,3,28,0,0,2,0,0.0,0
839,67,test,"Give me the band of the member of the band, that is a band and a group, of Peter Schorowsky and band of Kevin Russell (musician) and band of the band, that is a musical artist, of the professional in Musician.","SELECT ?result WHERE { ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. <http://dbpedia.org/resource/Kevin_Russell_(musician)> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Group>. <http://dbpedia.org/resource/Peter_Schorowsky> <http://dbpedia.org/ontology/associatedMusicalArtist> ?v0 . ?v1 <http://dbpedia.org/ontology/associatedMusicalArtist> ?v3 . ?result <http://dbpedia.org/ontology/bandMember> ?v6 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Band>. ?v1 <http://dbpedia.org/property/occupation> ""Musician""@en . ?v0 <http://dbpedia.org/ontology/bandMember> ?v6 . ?result <http://dbpedia.org/ontology/bandMember> ?v3 . }","```sparql
SELECT DISTINCT ?schorowskyBand ?russellBand ?musicianBand ?memberOfSchorowskyBand ?memberOfRussellBand ?memberOfMusicianBand WHERE {
  # Find Peter Schorowsky's band
  ?person rdfs:label ""Peter Schorowsky""@en .
  ?person dbo:bandMember ?schorowskyBand .

  # Find Kevin Russell's band
  ?russellPerson rdfs:label ""Kevin Russell (musician)""@en .
  ?russellPerson dbo:bandMember ?russellBand .

  # Identify a professional musician and their band
  ?musician rdf:type dbo:MusicalArtist .
  ?musician dbo:bandMember ?musicianBand .

  # Find the band of a member of Peter Schorowsky's band
  ?schorowskyBand dbo:member ?memberOfSchorowskyBand .
  ?memberOfSchorowskyBand dbo:band ?memberOfSchorowskyBandBand .

  # Find the band of a member of Kevin Russell's band
  ?russellBand dbo:member ?memberOfRussellBand .
  ?memberOfRussellBand dbo:band ?memberOfRussellBandBand .

  # Find the band of a member of the musician's band
  ?musicianBand dbo:member ?memberOfMusicianBand .
  ?memberOfMusicianBand dbo:band ?memberOfMusicianBandBand .
}
```",7,10,8,3,3,3,3,71,0,0,1,0,0.0,0
826,64,test,"Give me the successor of Louis II, Grand Duke of Hesse and spouse of the child of the father of Anna Magdalena Appel and predecessor of the parent of the child of Louis IV, Grand Duke of Hesse.","SELECT ?result WHERE { <http://dbpedia.org/resource/Anna_Magdalena_Appel> <http://dbpedia.org/property/father> ?v3 . ?v0 <http://dbpedia.org/ontology/parent> <http://dbpedia.org/resource/Louis_IV,_Grand_Duke_of_Hesse> . <http://dbpedia.org/resource/Louis_II,_Grand_Duke_of_Hesse> <http://dbpedia.org/ontology/successor> ?result . ?v0 <http://dbpedia.org/ontology/parent> ?v1 . ?v2 <http://dbpedia.org/property/father> ?v3 . ?result <http://dbpedia.org/ontology/successor> ?v1 . ?v2 <http://dbpedia.org/ontology/spouse> ?result . }","```sparql
SELECT ?successor WHERE {
  # Step 1: Find Louis II and his successor
  ?louisII dbo:successor ?successor .
  ?louisII rdfs:label ""Louis II, Grand Duke of Hesse""@en .

  # Step 2: Identify Anna Magdalena Appel's father
  ?annaMagdalena dbo:parent ?fatherAnna .
  ?annaMagdalena rdfs:label ""Anna Magdalena Appel""@en .

  # Find a child of this father (could be Anna herself)
  OPTIONAL { 
    ?childFather dbo:parent ?fatherAnna .
  }

  # Step 3: Determine the spouse of this child
  OPTIONAL {
    ?spouseChild dbo:spouse ?childFather .
  }

  # Step 4: Locate Louis IV, find a child, and determine the parent (Louis IV)
  ?louisIV dbo:parent ?parentChild .
  ?louisIV rdfs:label ""Louis IV, Grand Duke of Hesse""@en .

  OPTIONAL {
    ?childLouisIV dbo:parent ?louisIV .
  }

  # Step 5: Find the predecessor of Louis IV
  OPTIONAL {
    ?predecessor dbo:successor ?louisIV .
  }

  # Step 6: Ensure the spouse matches the predecessor
  FILTER (?spouseChild = ?predecessor)
}
```",7,7,8,3,3,3,3,71,0,0,1,0,0.0,0
216,58,test,"Give me the player in Igor Bišćan and team of the person born, that is a sports manager and a soccer manager and a soccer player, on the death of Pavel Vezhinov and player in the coach, that is a soccer player and a sports manager and a soccer manager, of Bosnia and Herzegovina national under-18 football team.",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/coach> ?v2 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsManager>. ?v5 <http://dbpedia.org/ontology/team> ?result . <http://dbpedia.org/resource/Igor_Bišćan> <http://dbpedia.org/ontology/team> ?result . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsManager>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerManager>. ?v2 <http://dbpedia.org/ontology/birthDate> ?v1 . <http://dbpedia.org/resource/Bosnia_and_Herzegovina_national_under-18_football_team> <http://dbpedia.org/ontology/coach> ?v5 . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerManager>. <http://dbpedia.org/resource/Pavel_Vezhinov> <http://dbpedia.org/ontology/deathDate> ?v1 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerPlayer>. ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerPlayer>. },"```sparql
SELECT ?team ?coach WHERE {
  # Find Igor Bišćan and his team
  ?bišćan dbo:birthName ""Igor Bišćan""@en .
  ?bišćan dbo:playsFor ?team .

  # Find Pavel Vezhinov's death date
  ?vezhinov dbo:deathDate ?deathDate .
  ?vezhinov rdfs:label ""Pavel Vezhinov""@en .

  # Find person born on Pavel Vezhinov's death date who is a sports manager, soccer manager, and player
  ?person dbo:birthDate ?deathDate .
  ?person dbo:occupation ?occupation1 .
  ?person dbo:occupation ?occupation2 .
  ?person dbo:occupation ?occupation3 .
  FILTER (
    (str(?occupation1) = ""sports manager""@en || str(?occupation1) = ""soccer manager""@en || str(?occupation1) = ""soccer player""@en) &&
    (str(?occupation2) = ""sports manager""@en || str(?occupation2) = ""soccer manager""@en || str(?occupation2) = ""soccer player""@en) &&
    (str(?occupation3) = ""sports manager""@en || str(?occupation3) = ""soccer manager""@en || str(?occupation3) = ""soccer player""@en)
  )

  # Find coach of Bosnia and Herzegovina national under-18 football team who is a soccer player, sports manager, and soccer manager
  ?team rdfs:label ""Bosnia and Herzegovina national under-18 football team""@en .
  ?coach dbo:managerOf ?team .
  ?coach dbo:occupation ?occupation4 .
  ?coach dbo:occupation ?occupation5 .
  ?coach dbo:occupation ?occupation6 .
  FILTER (
    (str(?occupation4) = ""soccer player""@en || str(?occupation4) = ""sports manager""@en || str(?occupation4) = ""soccer manager""@en) &&
    (str(?occupation5) = ""soccer player""@en || str(?occupation5) = ""sports manager""@en || str(?occupation5) = ""soccer manager""@en) &&
    (str(?occupation6) = ""soccer player""@en || str(?occupation6) = ""sports manager""@en || str(?occupation6) = ""soccer manager""@en)
  )
}
```",6,12,7,3,3,3,3,71,0,0,1,0,0.0,0
773,56,test,"Give me the parent of the child, that is a royalty, of the father, that is an office holder and a royalty, of Carloman of Bavaria and spouse of the father of Charles the Fat and parent of Carloman of Bavaria.",SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v1 <http://dbpedia.org/property/father> ?v0 . <http://dbpedia.org/resource/Carloman_of_Bavaria> <http://dbpedia.org/property/father> ?v0 . ?v1 <http://dbpedia.org/ontology/parent> ?result . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?result <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Carloman_of_Bavaria> . <http://dbpedia.org/resource/Charles_the_Fat> <http://dbpedia.org/property/father> ?v2 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v2 <http://dbpedia.org/ontology/spouse> ?result . },"```sparql
SELECT ?parent WHERE {
  # Carloman of Bavaria and his father (who is an office holder and royalty)
  ?carloman dbo:child ?father .
  ?carloman rdfs:label ""Carloman of Bavaria""@en .
  ?father rdf:type/rdfs:subClassOf* dbo:OfficeHolder ;
          rdf:type/rdfs:subClassOf* dbo:Royalty .

  # Father of Charles the Fat
  ?charlesFat dbo:child ?fatherCharlesFat .
  ?charlesFat rdfs:label ""Charles the Fat""@en .

  # Spouse of father of Charles the Fat
  ?fatherCharlesFat dbo:spouse ?spouseFatherCharlesFat .

  # Child of this spouse who is royalty
  ?spouseFatherCharlesFat dbo:child ?royalChild .
  ?royalChild rdf:type/rdfs:subClassOf* dbo:Royalty .

  # Parent of the royal child
  ?royalChild dbo:parent ?parent .
}
```",6,9,7,3,3,3,3,71,0,0,1,0,0.0,0
124,69,test,"Give me the military force of the war, that is an event and a military conflict and a societal event, of Frank Rhodes (British Army officer) and commander in the war, that is a societal event and a military conflict, of the reference, that is Australian and an organisation and a military unit, to 'A' Battery, Royal Australian Artillery and military force of the force, that is a societal event and a military conflict, of the person born on 1850-06-24.","SELECT ?result WHERE { ?v4 <http://dbpedia.org/ontology/battle> ?v3 . ?result <http://dbpedia.org/ontology/battle> ?v7 . ?v7 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?v3 <http://dbpedia.org/ontology/commander> ?result . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?v4 <http://xmlns.com/foaf/0.1/name> ""'A' Battery, Royal Australian Artillery""@en . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryUnit>. ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?v7 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. <http://dbpedia.org/resource/Frank_Rhodes_(British_Army_officer)> <http://dbpedia.org/ontology/battle> ?v7 . ?v1 <http://dbpedia.org/ontology/birthDate> ""1850-06-24""^^<http://www.w3.org/2001/XMLSchema#date> . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v4 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Australia>. ?result <http://dbpedia.org/ontology/battle> ?v2 . ?v2 <http://dbpedia.org/ontology/commander> ?v1 . ?v7 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. }","```sparql
SELECT ?militaryForce WHERE {
  # Find Frank Rhodes and his war involvement
  ?frankRhodes dbo:birthPlace ?place .
  ?frankRhodes rdfs:label ""Frank Rhodes (British Army officer)""@en .
  
  OPTIONAL { 
    ?war dbo:commander ?frankRhodes .
    ?war a dbo:MilitaryConflict ;
         a dbo:SocietalEvent .
  }
  
  # Find the commander of that war
  OPTIONAL {
    ?war dbo:commander ?commander .
  }

  # Identify 'A' Battery, Royal Australian Artillery and its reference
  ?battery rdfs:label ""A Battery, Royal Australian Artillery""@en ;
           dbo:partOf ?reference .

  # Find the person born on 1850-06-24
  ?person dbo:birthDate ?date .
  FILTER (YEAR(?date) = 1850 && MONTH(?date) = 6 && DAY(?date) = 24)
  
  # Determine the military force of that person's involvement
  OPTIONAL {
    ?force dbo:militaryConflict ?war ;
           a dbo:SocietalEvent .
    
    ?person dbo:memberOf ?force .
  }
}
```",8,18,9,3,3,3,3,71,0,0,9,0,0.0,0
715,60,test,"Give me the commander in the force, that is a military conflict, of the native of Morocco and leader of the office, that is a government agency and an organisation, of the reference to Carlos Franco Iribarnegaray.","SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/GovernmentAgency>. ?v0 <http://xmlns.com/foaf/0.1/name> ""Carlos Franco Iribarnegaray""@en . ?v0 <http://dbpedia.org/property/office> ?v1 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?v1 <http://dbpedia.org/ontology/leader> ?result . ?v3 <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Morocco> . ?v2 <http://dbpedia.org/ontology/commander> ?result . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v2 <http://dbpedia.org/ontology/commander> ?v3 . }","```sparql
SELECT ?conflict ?office WHERE {
  # Find Carlos Franco Iribarnegaray's native place as Morocco
  ?person dbo:nativePlace dbr:Morocco .
  
  # Ensure the person is Carlos Franco Iribarnegaray
  ?person rdfs:label ""Carlos Franco Iribarnegaray""@en .

  # Find military conflict where he was a commander
  OPTIONAL {
    ?conflict dbo:commander ?person .
  }

  # Find office or organization he led, which is a government agency or organization
  OPTIONAL {
    ?office dbo:leaderOf ?person .
    FILTER (regex(str(?office), ""government agency|organization"", ""i""))
  }
}
```",6,9,7,3,2,3,3,71,0,0,1,0,0.0,0
433,59,test,"Give me the associated musical artist of the person born, that is a musical artist and an artist, as the persona of Paul Chambers and associated musical artist of the associated musical artist, that is an artist and a musical artist, of the associated musical artist, that is a musical artist and an artist, of Ornette Coleman.",SELECT ?result WHERE { ?v2 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v2 <http://dbpedia.org/property/birthName> ?v3 . <http://dbpedia.org/resource/Paul_Chambers> <http://xmlns.com/foaf/0.1/givenName> ?v3 . ?v5 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. <http://dbpedia.org/resource/Ornette_Coleman> <http://dbpedia.org/ontology/associatedMusicalArtist> ?v0 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?v0 <http://dbpedia.org/ontology/associatedMusicalArtist> ?v5 . },"```sparql
SELECT ?finalArtist WHERE {
  # Step 1: Find associated musical artist of Paul Chambers
  ?paulChambers dbo:associatedMusicalArtist ?artist1 .
  ?paulChambers rdfs:label ""Paul Chambers""@en .

  # Ensure artist1 is both an artist and a musical artist
  ?artist1 rdf:type dbo:Artist ;
           rdf:type dbo:MusicalArtist .

  # Step 2: Find associated musical artist of artist1
  OPTIONAL {
    ?artist1 dbo:associatedMusicalArtist ?artist2 .
    ?artist2 rdf:type dbo:Artist ;
             rdf:type dbo:MusicalArtist .
  }

  # Step 3: Find associated musical artist of Ornette Coleman
  ?ornetteColeman dbo:associatedMusicalArtist ?artist3 .
  ?ornetteColeman rdfs:label ""Ornette Coleman""@en .

  # Ensure artist3 is both a musical artist and an artist
  ?artist3 rdf:type dbo:MusicalArtist ;
           rdf:type dbo:Artist .

  # Step 4: Find associated musical artist of artist3
  OPTIONAL {
    ?artist3 dbo:associatedMusicalArtist ?finalArtist .
    ?finalArtist rdf:type dbo:Artist ;
                 rdf:type dbo:MusicalArtist .
  }
}
```",6,12,7,3,2,3,3,71,1,19,9,0.05,0.1,0.06666666666666667
791,62,test,"Give me the spouse of the spouse, that is a royalty, of the reference to Emperor Takakura and father of Emperor Go-Toba and predecessor of the child of the child, that is an office holder and a royalty, of Emperor Go-Shirakawa.","SELECT ?result WHERE { ?v3 <http://dbpedia.org/ontology/spouse> ?v4 . <http://dbpedia.org/resource/Emperor_Go-Toba> <http://dbpedia.org/property/father> ?result . ?v4 <http://xmlns.com/foaf/0.1/name> ""Emperor Takakura""@en . ?v6 <http://dbpedia.org/property/father> ?v0 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?result <http://dbpedia.org/ontology/successor> ?v6 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?result <http://dbpedia.org/ontology/spouse> ?v3 . ?v0 <http://dbpedia.org/ontology/parent> <http://dbpedia.org/resource/Emperor_Go-Shirakawa> . }","```sparql
SELECT ?spouseOfSpouse WHERE {
  # Find spouse of Emperor Takakura who is royalty
  ?takakura dbo:spouse ?spouse .
  ?takakura rdfs:label ""Emperor Takakura""@en .
  FILTER (regex(str(?spouse), ""Imperial Princess Shushi"", ""i""))

  # Find spouse of the spouse identified as royalty
  ?spouse dbo:spouse ?spouseOfSpouse .

  # Find father of Emperor Go-Toba
  ?goToba dbo:parent ?father .
  ?goToba rdfs:label ""Emperor Go-Toba""@en .

  # Find child of the child of Emperor Go-Shirakawa who is an office holder and royalty
  ?goShirakawa dbo:child ?child1 .
  ?goShirakawa rdfs:label ""Emperor Go-Shirakawa""@en .
  ?child1 dbo:child ?grandChild .
  ?grandChild a dbo:OfficeHolder ;
              a dbo:Royal .

  # Find predecessor of the grand child
  ?predecessor dbo:succeededBy ?grandChild .
}
```",7,10,8,3,3,3,3,71,0,0,1,0,0.0,0
166,20,test,"Give me the entity in the territory administered, that is a country, from the reference to Madrid and resting place of the military force of the force, that is an event and a societal event and a military conflict, of Manuel Hedilla.","SELECT ?result WHERE { ?v2 <http://dbpedia.org/ontology/restingPlace> ?result . ?v4 <http://xmlns.com/foaf/0.1/name> ""Madrid""@en . ?v2 <http://dbpedia.org/ontology/battle> ?v1 . ?v1 <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Manuel_Hedilla> . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. ?v5 <http://dbpedia.org/ontology/capital> ?v4 . ?result <http://dbpedia.org/ontology/country> ?v5 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. }","```sparql
SELECT ?country WHERE {
  # Identify the event related to Manuel Hedilla's military force
  ?event dbo:agentManuelHedilla ?force .
  ?event rdf:type dbo:MilitaryConflict .
  ?event rdf:type dbo:SocietalEvent .

  # Ensure the event has a resting place linked to Madrid
  ?event dbo:location ?restingPlace .
  ?restingPlace rdfs:label ""Madrid""@en .

  # Find the country within the territory administered by this event
  ?event dbo:territoryAdministered ?country .
  FILTER (isLiteral(?country) && lang(?country) = ""en"")
}
```",6,10,7,3,2,3,2,20,0,0,4,0,0.0,0
917,66,test,"Give me the parent of the child, that is a royalty, of Kamehameha IV and child of the father of the child, that is a royalty, of Kamehameha III and child of the father of Keʻelikōlani.",SELECT ?result WHERE { <http://dbpedia.org/resource/Kamehameha_III> <http://dbpedia.org/ontology/child> ?v5 . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. <http://dbpedia.org/resource/Keʻelikōlani> <http://dbpedia.org/property/father> ?v6 . ?result <http://dbpedia.org/property/father> ?v0 . ?result <http://dbpedia.org/ontology/parent> ?v6 . ?result <http://dbpedia.org/ontology/child> ?v3 . ?v5 <http://dbpedia.org/property/father> ?v0 . ?v3 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Kamehameha_IV> . },"```sparql
SELECT ?finalChild WHERE {
  # Step 1: Find a royal child of Kamehameha IV
  ?kamehamehaIV dbo:child ?royalChildIV .
  ?kamehamehaIV rdfs:label ""Kamehameha IV""@en .
  FILTER (regex(str(?royalChildIV), ""Royal"", ""i""))

  # Step 2: Find the father of this royal child
  ?royalChildIV dbo:parent ?fatherOfRoyalChildIV .

  # Step 3: Find a royal child of Kamehameha III
  ?kamehamehaIII dbo:child ?royalChildIII .
  ?kamehamehaIII rdfs:label ""Kamehameha III""@en .
  FILTER (regex(str(?royalChildIII), ""Royal"", ""i""))

  # Step 4: Find the father of this royal child
  ?royalChildIII dbo:parent ?fatherOfRoyalChildIII .

  # Step 5: Find Keʻelikōlani's father
  ?keelikolanI dbo:parent ?fatherOfKeelikolanI .
  ?keelikolanI rdfs:label ""Keʻelikōlani""@en .

  # Step 6: Find the child of the father of the royal child of Kamehameha III
  ?fatherOfRoyalChildIII dbo:child ?childOfFatherOfRoyalChildIII .

  # Step 7: Find the child of",7,9,8,3,3,3,3,71,0,0,1,0,0.0,0
508,20,test,"Give me the birthplace of the commander, that is Saudi, in the war, that is a military conflict and a societal event, of Hu Yukun and birthplace of the commander, that is a politician, in the war, that is a military conflict and a societal event and an event, of Hayao Tada.",SELECT ?result WHERE { ?v5 <http://dbpedia.org/ontology/birthPlace> ?result . ?v5 <http://dbpedia.org/ontology/nationality> <http://dbpedia.org/resource/Saudi_Arabia>. ?v2 <http://dbpedia.org/ontology/birthPlace> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. <http://dbpedia.org/resource/Hayao_Tada> <http://dbpedia.org/ontology/battle> ?v1 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v1 <http://dbpedia.org/ontology/commander> ?v2 . ?v4 <http://dbpedia.org/ontology/commander> ?v5 . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. <http://dbpedia.org/resource/Hu_Yukun> <http://dbpedia.org/ontology/battle> ?v4 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. },"```sparql
SELECT ?huYukunBirthplace ?hayaoTadaBirthplace WHERE {
  # Hu Yukun as a commander in a war that is a military conflict and societal event
  ?huYukun dbo:birthPlace ?huYukunBirthplace .
  ?huYukun dbo:role ""Commander""@en .
  ?warHuyukun dbo:participant ?huYukun ;
              rdf:type dbo:MilitaryConflict, dbo:SocietalEvent .
  
  # Hayao Tada as a politician in a war that is a military conflict, societal event, and an additional event
  ?hayaoTada dbo:birthPlace ?hayaoTadaBirthplace .
  ?hayaoTada dbo:role ""Politician""@en .
  ?warHayaoTada dbo:participant ?hayaoTada ;
                rdf:type dbo:MilitaryConflict, dbo:SocietalEvent, dbo:Event .

  # Ensure Hu Yukun is identified as Saudi
  ?huYukun dbo:nationality dbr:Saudi_Arabia .

  # Ensure Hayao Tada's war meets the criteria
}
```",6,13,7,3,2,3,2,20,0,0,3,0,0.0,0
158,18,test,"Give me the entity in the award, that is a country, of the reference to Adelbert Cronkhite and party of the successor, that is a prime minister and an office holder and a politician, of André Tardieu.","SELECT ?result WHERE { ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/PrimeMinister>. ?v1 <http://xmlns.com/foaf/0.1/name> ""Adelbert Cronkhite""@en . ?v3 <http://dbpedia.org/ontology/party> ?result . ?result <http://dbpedia.org/ontology/country> ?v2 . ?v1 <http://dbpedia.org/property/awards> ?v2 . <http://dbpedia.org/resource/André_Tardieu> <http://dbpedia.org/ontology/successor> ?v3 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. }","```sparql
SELECT ?country WHERE {
  # Find an award related to Adelbert Cronkhite and its country
  ?award dbo:recipient dbr:Adelbert_Cronkhite .
  ?award dbo:country ?countryAward .

  # Find André Tardieu's successor who is a prime minister, office holder, and politician
  ?tardieu dbo:succeededBy ?successor .
  ?tardieu rdfs:label ""André Tardieu""@en .
  ?successor rdf:type dbo:PrimeMinister ;
             rdf:type dbo:OfficeHolder ;
             rdf:type dbo:Politician .

  # Find the political party of the successor
  OPTIONAL {
    ?successor dbo:party ?party .
  }

  # Check if there's a country associated with the political party
  OPTIONAL {
    ?party dbo:country ?countryParty .
  }
}
```",5,9,6,3,2,3,2,20,0,0,1,0,0.0,0
926,71,test,"Give me the child of the father, that is a royalty, of the parent, that is a royalty, of Beyhan Sultan (daughter of Mustafa III) and father of the father of the spouse of Neşerek Kadın and successor of the child of the spouse of Şermi Kadın.",SELECT ?result WHERE { ?v1 <http://dbpedia.org/property/father> ?v2 . ?v7 <http://dbpedia.org/property/father> ?v8 . ?v8 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. <http://dbpedia.org/resource/Neşerek_Kadın> <http://dbpedia.org/ontology/spouse> ?v1 . ?v5 <http://dbpedia.org/ontology/successor> ?result . ?v8 <http://dbpedia.org/ontology/child> ?result . <http://dbpedia.org/resource/Beyhan_Sultan_(daughter_of_Mustafa_III)> <http://dbpedia.org/ontology/parent> ?v7 . ?v4 <http://dbpedia.org/ontology/spouse> <http://dbpedia.org/resource/Şermi_Kadın> . ?v5 <http://dbpedia.org/property/father> ?v4 . ?v7 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v2 <http://dbpedia.org/property/father> ?result . },"```sparql
SELECT ?finalEntity WHERE {
  # Step 1: Beyhan Sultan's parent who is royalty
  ?beyhanSultan dbo:parent ?mustafaIII .
  ?mustafaIII rdfs:label ""Mustafa III""@en .
  
  # Mustafa III's father (royalty)
  ?mustafaIIIFather dbo:parent ?mustafaIII .
  ?mustafaIIIFather a dbo:Monarch .

  # Step 2: Neşerek Kadın's spouse and their father
  ?neSerekKadin dbo:spouse ?spouseNeSerek .
  ?spouseNeSerek rdfs:label ""Spouse of Neşerek Kadın""@en .
  
  ?spouseNeSerekFather dbo:parent ?spouseNeSerek .

  # Step 3: Şermi Kadın's spouse and their child (successor)
  ?sermiKadin dbo:spouse ?spouseSerMi .
  ?spouseSerMi rdfs:label ""Spouse of Şermi Kadın""@en .
  
  ?childOfSerMi dbo:parent ?spouseSerMi .
  ?",9,11,10,3,3,3,3,71,0,0,1,0,0.0,0
715,57,test,"Give me the commander in the force of the mayor, that is an office holder and a politician and a president, of 1933 Spanish general election and commander in Rif War and leader of the office, that is a government agency and an organisation, of Carlos Franco Iribarnegaray.",SELECT ?result WHERE { ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/President>. ?v3 <http://dbpedia.org/ontology/leader> ?result . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/GovernmentAgency>. ?v5 <http://dbpedia.org/ontology/commander> ?v0 . ?v5 <http://dbpedia.org/ontology/commander> ?result . <http://dbpedia.org/resource/Carlos_Franco_Iribarnegaray> <http://dbpedia.org/property/office> ?v3 . <http://dbpedia.org/resource/1933_Spanish_general_election> <http://dbpedia.org/property/leader> ?v0 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. <http://dbpedia.org/resource/Rif_War> <http://dbpedia.org/ontology/commander> ?result . },"```sparql
SELECT ?commander WHERE {
  # Identify the mayor who was a politician, president, and office holder in 1933 Spanish general election
  ?mayor dbo:officeHolder ""Mayor""@en ;
         dbo:politicalParty ?party ;
         dbo:electionDate ?date .
  FILTER (YEAR(?date) = 1933 && regex(str(?party), ""Spanish General Election"", ""i""))

  # Find the commander in the force of this mayor
  ?mayor dbo:commanderInForce ?commander .

  # Check if this commander was involved in the Rif War and led an office related to Carlos Franco Iribarnegaray
  OPTIONAL {
    ?rifWar dbo:commander ?commander .
    FILTER (regex(str(?rifWar), ""Rif War"", ""i""))
  }

  OPTIONAL {
    ?office dbo:leader ?commander ;
            dbo:relatedTo ""Carlos Franco Iribarnegaray""@en .
    FILTER (regex(str(?office), ""government agency|organization"", ""i""))
  }
}
```",6,11,7,3,3,3,3,71,0,0,1,0,0.0,0
579,18,test,"Give me the native of the residence, that is English and a settlement, of the resident of Scotland and person born as the birth name of Jane Percy, Duchess of Northumberland.","SELECT ?result WHERE { ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. ?v2 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/United_Kingdom>. <http://dbpedia.org/resource/Jane_Percy,_Duchess_of_Northumberland> <http://dbpedia.org/property/birthName> ?v3 . ?result <http://dbpedia.org/property/birthName> ?v3 . ?v1 <http://dbpedia.org/property/residence> ?v2 . ?v1 <http://dbpedia.org/ontology/residence> <http://dbpedia.org/resource/Scotland> . ?result <http://dbpedia.org/ontology/birthPlace> ?v2 . }","```sparql
SELECT ?native WHERE {
  # Step 1: Identify Jane Percy, Duchess of Northumberland's birth name
  ?janePercy dbo:birthName ?birthName .
  ?janePercy rdfs:label ""Jane Percy, Duchess of Northumberland""@en .

  # Step 2: Find a person with the same birth name residing in Scotland
  ?scottishPerson dbo:birthName ?birthName ;
                  dbo:residence ?residence .
  ?scottishPerson dbo:nationality dbc:ScottishPeople .

  # Step 3: Ensure the residence is an English settlement
  ?residence rdf:type dbo:Settlement ;
             dbo:country dbc:England .

  # Step 4: Find a native of this English settlement who speaks English
  ?native dbo:nativePlace ?residence ;
          dbo:speaks dbr:English_language .
}
```",5,7,6,3,2,3,2,20,0,0,1,0,0.0,0
527,19,test,"Give me the actor of the movie, that is a work and English and a television show, with Bernard Bresslaw and author of the work, that is a work and a book, of the host of Hyperland.",SELECT ?result WHERE { ?v2 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/United_Kingdom>. ?v4 <http://dbpedia.org/property/author> ?v0 . <http://dbpedia.org/resource/Hyperland> <http://dbpedia.org/ontology/presenter> ?v0 . ?v4 <http://dbpedia.org/property/author> ?result . ?v2 <http://dbpedia.org/property/starring> ?result . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/TelevisionShow>. ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?v2 <http://dbpedia.org/property/starring> <http://dbpedia.org/resource/Bernard_Bresslaw> . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Book>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. },"```sparql
SELECT ?actor WHERE {
  # Step 1: Identify the host of Hyperland
  ?hyperland dbo:host ?host .
  ?hyperland rdfs:label ""Hyperland""@en .

  # Step 2: Find books authored by the host
  ?book dbo:author ?host .
  ?book rdf:type dbo:Book .

  # Step 3: Locate a work that is both an English movie and TV show featuring Bernard Bresslaw
  ?work (dbo:actor|dbo:starring) :BernardBresslaw ;
        rdf:type (dbo:Film|dbo:TelevisionShow) .
  FILTER(LANG(?workLabel) = ""en"")
  SERVICE wikibase:label { bd:serviceParam wikibase:language ""[AUTO_LANGUAGE],en"". }

  # Step 4: Determine the actor in this dual-format work
  ?work (dbo:actor|dbo:starring) ?actor .
}
```",5,10,6,3,2,3,2,20,0,0,1,0,0.0,0
892,58,test,"Give me the entity in Italy and landmark at elevation of the award of Anna Ishii and entity in the administration, that is Italian and a region and a settlement and an administrative region, of the party, that is a political party and an organisation, of Andrea Cozzolino.",SELECT ?result WHERE { <http://dbpedia.org/resource/Anna_Ishii> <http://dbpedia.org/property/awards> ?v5 . ?v0 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Italy>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/AdministrativeRegion>. ?result <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Italy> . ?result <http://dbpedia.org/ontology/province> ?v0 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Region>. <http://dbpedia.org/resource/Andrea_Cozzolino> <http://dbpedia.org/ontology/party> ?v4 . ?result <http://dbpedia.org/ontology/elevation> ?v5 . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/PoliticalParty>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?v0 <http://dbpedia.org/property/leaderParty> ?v4 . },"```sparql
SELECT ?landmark ?region WHERE {
  # Find Anna Ishii's award and its elevation
  ?annaIshii dbo:award ?award .
  ?annaIshii rdfs:label ""Anna Ishii""@en .
  
  ?award dbo:elevation ?elevation .

  # Find a landmark in Italy at the same elevation as the award
  ?landmark dbo:elevation ?elevation ;
            dbo:country dbr:Italy ;
            rdf:type dbo:Lighthouse .

  # Identify Andrea Cozzolino's political party
  ?cozzolino dbo:party ?party .
  ?cozzolino rdfs:label ""Andrea Cozzolino""@en .
  
  ?party rdf:type dbo:PoliticalParty ;
         dbo:country dbr:Italy .

  # Find the Italian administrative region associated with the political party
  ?region dbo:administrativeRegion ?party ;
          dbo:country dbr:Italy ;
          rdf:type dbo:Settlement, dbo:AdministrativeRegion .
}
```",6,12,7,3,3,3,3,71,0,0,2,0,0.0,0
917,64,test,"Give me the child of Kekūanāoʻa and child of the father of the child, that is a royalty, of Kamehameha III and parent of the child, that is a royalty, of the mayor of Hawaiian Kingdom.",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/child> ?v2 . <http://dbpedia.org/resource/Kamehameha_III> <http://dbpedia.org/ontology/child> ?v5 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v2 <http://dbpedia.org/property/father> ?v4 . ?v5 <http://dbpedia.org/property/father> ?v0 . ?result <http://dbpedia.org/ontology/parent> <http://dbpedia.org/resource/Kekūanāoʻa> . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?result <http://dbpedia.org/property/father> ?v0 . <http://dbpedia.org/resource/Hawaiian_Kingdom> <http://dbpedia.org/property/leader> ?v4 . },"```sparql
SELECT ?childOfKekuanaoa ?royalParent ?childOfKamehamehaIII ?parentOfRoyalChild ?mayor ?parentOfMayorRoyalChild WHERE {
  # Find a child of Kekūanāoʻa
  ?kekuanaoa dbo:child ?childOfKekuanaoa .
  ?kekuanaoa rdfs:label ""Kekūanāoʻa""@en .

  # Find the father of this child, ensuring he is royalty
  ?childOfKekuanaoa dbo:parent ?royalParent .
  FILTER (regex(str(?royalParent), ""Royalty"", ""i""))

  # Find a child of Kamehameha III who is royalty and their parent
  ?kamehamehaIII dbo:child ?childOfKamehamehaIII .
  ?kamehamehaIII rdfs:label ""Kamehameha III""@en .
  FILTER (regex(str(?childOfKamehamehaIII), ""Royalty"", ""i""))
  
  # Find the parent of this royal child
  ?childOfKamehamehaIII dbo:parent ?parentOfRoyalChild .",7,9,8,3,3,3,3,71,0,0,2,0,0.0,0
129,25,test,"Give me the associated musical artist of Saba (rapper) and associated musical artist of the actor, that is an organisation, of Dreamville Presents: Revenge and professional in the mayor of 1999 West Dunbartonshire Council election.",SELECT ?result WHERE { <http://dbpedia.org/resource/Dreamville_Presents:_Revenge> <http://dbpedia.org/property/starring> ?v4 . ?result <http://dbpedia.org/property/occupation> ?v3 . <http://dbpedia.org/resource/1999_West_Dunbartonshire_Council_election> <http://dbpedia.org/property/leader> ?v3 . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. <http://dbpedia.org/resource/Saba_(rapper)> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v4 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . },"```sparql
# Query to find Saba's associated musical artist
SELECT ?sabaAssociatedArtist WHERE {
  ?saba dbo:associatedMusicalArtist ?sabaAssociatedArtist .
  ?saba rdfs:label ""Saba (rapper)""@en .
}

# Query to find the actor and organization for Dreamville Presents: Revenge
SELECT ?actor ?organization WHERE {
  ?dreamvilleEvent dbo:actor ?actor .
  ?dreamvilleEvent rdfs:label ""Dreamville Presents: Revenge""@en .
  ?actor dbo:associatedOrganization ?organization .
}

# Query to find the mayor of the 1999 West Dunbartonshire Council election
SELECT ?mayor WHERE {
  ?election dbo:electedOfficial ?mayor .
  ?election rdfs:label ""West Dunbartonshire Council election, 1999""@en .
}

# Query to find the associated musical artist of the organization
SELECT ?musicalArtist WHERE {
  ?organization dbo:associatedMusicalArtist ?musicalArtist .
  FILTER(?organization = ?organizationFromActor) # Use result from previous query
}
```",5,6,6,2,3,2,3,28,0,0,1,0,0.0,0
892,59,test,Give me the entity in the profession of the true self of Enrico Crolla and landmark at elevation of the award of the member of E-girls.,"SELECT ?result WHERE { ?v3 <http://dbpedia.org/property/occupation> ?v1 . ?v3 <http://xmlns.com/foaf/0.1/givenName> ""Enrico Crolla""@en . ?result <http://dbpedia.org/ontology/elevation> ?v4 . <http://dbpedia.org/resource/E-girls> <http://dbpedia.org/ontology/bandMember> ?v0 . ?v0 <http://dbpedia.org/property/awards> ?v4 . ?result <http://dbpedia.org/ontology/country> ?v1 . }","```sparql
# Part 1: Find Enrico Crolla's Profession
SELECT ?profession WHERE {
  ?enricoCrolla rdfs:label ""Enrico Crolla""@en .
  ?enricoCrolla dbo:occupation ?profession .
}

# Part 2: Find a Landmark at the Elevation of an Award Received by an E-girls Member
SELECT ?landmark WHERE {
  # Identify an E-girls member and their awards
  ?eGirl rdfs:label ""E-girls""@en ;
         dbo:member ?member .
  
  ?award dbo:recipient ?member ;
         dbo:value ?value .

  # Find a landmark with the same elevation as the award value
  ?landmark dbo:elevation ?value ;
            rdf:type dbo:Landmark .
}
```",6,6,7,3,2,3,3,71,0,0,11,0,0.0,0
417,69,test,"Give me the spouse of the parent, that is a royalty, of the child of Knud, Hereditary Prince of Denmark and child of the father of Frederick IX of Denmark and child of the child, that is a royalty, of the parent, that is a royalty, of Alexandrine of Mecklenburg-Schwerin.","SELECT ?result WHERE { ?v4 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Knud,_Hereditary_Prince_of_Denmark> . ?v3 <http://dbpedia.org/ontology/child> ?v4 . ?result <http://dbpedia.org/ontology/parent> ?v2 . ?result <http://dbpedia.org/property/father> ?v7 . ?result <http://dbpedia.org/ontology/spouse> ?v3 . <http://dbpedia.org/resource/Frederick_IX_of_Denmark> <http://dbpedia.org/property/father> ?v7 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. <http://dbpedia.org/resource/Alexandrine_of_Mecklenburg-Schwerin> <http://dbpedia.org/ontology/parent> ?v1 . ?v2 <http://dbpedia.org/property/father> ?v1 . }","```sparql
SELECT ?spouse WHERE {
  # Find a child of Knud, Hereditary Prince of Denmark
  ?knudChild dbo:parent ?knud .
  ?knud rdfs:label ""Knud, Hereditary Prince of Denmark""@en .

  # Find the parent of this child and their spouse if royalty
  OPTIONAL { 
    ?knudParent dbo:child ?knudChild .
    ?knudParent dbo:spouse ?spouse .
    FILTER (regex(str(?spouse), ""royalty"", ""i""))
  }

  # Find Frederick IX's father and his royal child
  ?frederickIXFather rdfs:label ""Christian X of Denmark""@en .
  ?frederickIXChild dbo:parent ?frederickIXFather .
  FILTER (regex(str(?frederickIXChild), ""royalty"", ""i""))

  # Find Alexandrine's royal parent and their royal child
  ?alexandrineParent rdfs:label ""Frederick Francis II, Grand Duke of Mecklenburg-Schwerin""@en .
  ?alexandrineChild dbo:parent ?alexandrineParent .
  FILTER (regex(str(?alexandrineChild), ""royalty"", ""i""))
}
```",8,11,9,3,3,3,3,71,0,0,1,0,0.0,0
892,62,test,Give me the entity in the profession of the true self of Enrico Crolla and entity in Province of Reggio Emilia and landmark at elevation of the award of the member of E-girls.,"SELECT ?result WHERE { ?v1 <http://dbpedia.org/property/awards> ?v5 . ?result <http://dbpedia.org/ontology/elevation> ?v5 . ?result <http://dbpedia.org/ontology/country> ?v2 . ?v4 <http://dbpedia.org/property/occupation> ?v2 . ?result <http://dbpedia.org/ontology/province> <http://dbpedia.org/resource/Province_of_Reggio_Emilia> . <http://dbpedia.org/resource/E-girls> <http://dbpedia.org/ontology/bandMember> ?v1 . ?v4 <http://xmlns.com/foaf/0.1/givenName> ""Enrico Crolla""@en . }","```sparql
# Query to find Enrico Crolla's profession
SELECT ?profession WHERE {
  ?enricoCrolla dbo:occupation ?profession .
  ?enricoCrolla rdfs:label ""Enrico Crolla""@en .
}

UNION

# Query to find an entity in Province of Reggio Emilia
SELECT ?entity WHERE {
  ?entity dbo:location ?location .
  ?location dbo:country dbr:Italy ;
            dbo:administrativeTerritory dbr:Province_of_Reggio_Emilia .
}

UNION

# Query to find a landmark at elevation of an award of a member of E-girls
SELECT ?landmark WHERE {
  # Find awards associated with members of E-girls
  ?member dbo:memberOf dbr:E-girls ;
          dbo:award ?award .
  
  # Get the elevation related to these awards (assuming it's stored as a literal)
  ?award dbo:elevation ?elevation .

  # Find landmarks at this elevation
  ?landmark dbo:elevation ?elevation .
}
```",7,7,8,3,3,3,3,71,0,0,1,0,0.0,0
791,56,test,"Give me the predecessor of Emperor Antoku and spouse of the spouse, that is a royalty, of Emperor Takakura and father of the child, that is a royalty, of the father, that is a royalty and an office holder, of Emperor Antoku.",SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v1 <http://dbpedia.org/property/father> ?result . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?result <http://dbpedia.org/ontology/successor> <http://dbpedia.org/resource/Emperor_Antoku> . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v2 <http://dbpedia.org/ontology/spouse> <http://dbpedia.org/resource/Emperor_Takakura> . <http://dbpedia.org/resource/Emperor_Antoku> <http://dbpedia.org/property/father> ?v0 . ?result <http://dbpedia.org/ontology/spouse> ?v2 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v1 <http://dbpedia.org/property/father> ?v0 . },"```sparql
SELECT ?predecessorFatherChild WHERE {
  # Find Emperor Antoku and his predecessor
  ?antoku dbo:predecessor ?predecessor .
  ?antoku rdfs:label ""Emperor Antoku""@en .

  # Find the spouse of Emperor Takakura who is royalty
  OPTIONAL { 
    ?takakura dbo:spouse ?spouse .
    ?takakura rdfs:label ""Emperor Takakura""@en .
    FILTER (regex(str(?spouse), ""Imperial Princess Shushi"", ""i""))
  }

  # Find the predecessor's father who is royalty and an office holder
  OPTIONAL {
    ?predecessor dbo:parent ?predecessorFather .
    ?predecessorFather rdf:type dbo:Monarch .
    ?predecessorFather dbo:officeHolder ?office .
  }

  # Find a child of this father who is royalty
  OPTIONAL {
    ?predecessorFather dbo:child ?predecessorFatherChild .
    FILTER (regex(str(?predecessorFatherChild), ""Emperor"", ""i""))
  }
}
```",6,10,7,3,3,3,3,71,1,271,0,0.003676470588235294,1.0,0.007326007326007326
839,57,test,"Give me the band of the band, that is a musical artist, of Charlie Huhn and band of Kevin Russell (musician) and band of the member of the band, that is a band and a group, of Peter Schorowsky.",SELECT ?result WHERE { ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Group>. <http://dbpedia.org/resource/Kevin_Russell_(musician)> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v0 <http://dbpedia.org/ontology/bandMember> ?v5 . <http://dbpedia.org/resource/Peter_Schorowsky> <http://dbpedia.org/ontology/associatedMusicalArtist> ?v0 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Band>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. <http://dbpedia.org/resource/Charlie_Huhn> <http://dbpedia.org/ontology/associatedMusicalArtist> ?v3 . ?result <http://dbpedia.org/ontology/bandMember> ?v3 . ?result <http://dbpedia.org/ontology/bandMember> ?v5 . },"```sparql
SELECT ?charlieBand ?kevinBand ?peterBand WHERE {
  # Find Charlie Huhn's band
  ?charlieHuhn dbo:band ?charlieBand .
  ?charlieHuhn rdfs:label ""Charlie Huhn""@en .

  # Ensure the band is a musical artist
  ?charlieBand rdf:type dbo:MusicalArtist .

  # Find Kevin Russell's band
  ?kevinRussell dbo:band ?kevinBand .
  ?kevinRussell rdfs:label ""Kevin Russell (musician)""@en .

  # Ensure the band is a musical artist
  ?kevinBand rdf:type dbo:MusicalArtist .

  # Find Peter Schorowsky's band membership
  ?peterSchorowsky dbo:memberOf ?peterBand .
  ?peterSchorowsky rdfs:label ""Peter Schorowsky""@en .

  # Ensure the band is both a band and a group
  ?peterBand rdf:type dbo:Band ;
             rdf:type dbo:Group .
}
```",6,9,7,3,3,3,3,71,0,0,1,0,0.0,0
865,65,test,"Give me the native of the residence, that is a country, of Ram Jaipal Singh Yadav and father of the child, that is a politician, of the spouse of Syeda Shahar Banu and father of the child of Abu Ahmad Abdul Hafiz.",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/birthPlace> ?v0 . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. <http://dbpedia.org/resource/Ram_Jaipal_Singh_Yadav> <http://dbpedia.org/property/residence> ?v0 . ?v5 <http://dbpedia.org/property/father> ?result . ?v5 <http://dbpedia.org/property/father> ?v2 . <http://dbpedia.org/resource/Syeda_Shahar_Banu> <http://dbpedia.org/ontology/spouse> ?v2 . ?v4 <http://dbpedia.org/property/father> ?result . ?v4 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Abu_Ahmad_Abdul_Hafiz> . },"```sparql
SELECT ?native ?father1 ?father2 WHERE {
  # Step 1: Find Ram Jaipal Singh Yadav's residence and its native if it is a country
  ?ramJaipal dbo:residence ?residence .
  ?ramJaipal rdfs:label ""Ram Jaipal Singh Yadav""@en .
  
  OPTIONAL {
    ?residence rdf:type dbo:Country .
    ?residence dbo:native ?native .
  }
  
  # Step 2: Find Syeda Shahar Banu's spouse and their politician child
  ?shaharBanu dbo:spouse ?spouse .
  ?shaharBanu rdfs:label ""Syeda Shahar Banu""@en .
  
  OPTIONAL {
    ?spouseChild dbo:parent ?spouse .
    ?spouseChild rdf:type dbo:Politician .
    ?spouseChild dbo:parent ?father1 .
  }
  
  # Step 3: Find Abu Ahmad Abdul Hafiz's child and their father
  ?abuAhmad dbo:child ?child .
  ?abuAhmad rdfs:label ""Abu Ahmad Abdul Hafiz""@en .
  
  OPTIONAL {
    ?child dbo:parent ?father2 .
  }
}
```",7,9,8,3,3,3,3,71,0,0,1,0,0.0,0
917,57,test,"Give me the parent of Albert Kamehameha and child of the father of Kamehameha IV and child of the father of the spouse, that is a royalty, of Leleiohoku I.",SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. <http://dbpedia.org/resource/Kamehameha_IV> <http://dbpedia.org/property/father> ?v0 . ?result <http://dbpedia.org/property/father> ?v0 . ?v1 <http://dbpedia.org/ontology/spouse> <http://dbpedia.org/resource/Leleiohoku_I> . ?v1 <http://dbpedia.org/property/father> ?v4 . ?result <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Albert_Kamehameha> . ?result <http://dbpedia.org/ontology/parent> ?v4 . },"```sparql
SELECT ?parentOfAlbert ?childOfKamehamehasFather ?childOfSpousesFather WHERE {
  # Find parent of Albert Kamehameha
  ?albert dbo:parent ?parentOfAlbert .
  ?albert rdfs:label ""Albert Kamehameha""@en .

  # Find father of Kamehameha IV and his child
  ?kamehamehaIV dbo:parent ?fatherOfKamehamehaIV .
  ?kamehamehaIV rdfs:label ""Kamehameha IV""@en .
  OPTIONAL {
    ?childOfFather dbo:parent ?fatherOfKamehamehaIV .
  }

  # Find spouse of Leleiohoku I who is royalty and their child
  OPTIONAL {
    ?leleiohokuI dbo:spouse ?royalSpouse .
    ?leleiohokuI rdfs:label ""Leleiohoku I""@en .
    FILTER (regex(str(?royalSpouse), ""Princess Victoria Kamāmalu"", ""i""))
  }
  
  OPTIONAL {
    ?royalSpouse dbo:parent ?fatherOfRoyalSpouse .
    ?childOfSpousesFather dbo:parent ?fatherOfRoyalSpouse .
  }
}
```",6,7,7,3,3,3,3,71,1,34520,0,2.8967874627038616e-05,1.0,5.793407102717108e-05
353,9,test,"Give me the entity in the country of Moskovsky City District, Nizhny Novgorod and alma mater of the awardee of Medal of the Order ""For Merit to the Fatherland"".","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/country> ?v3 . ?v1 <http://dbpedia.org/ontology/almaMater> ?result . <http://dbpedia.org/resource/Moskovsky_City_District,_Nizhny_Novgorod> <http://dbpedia.org/ontology/country> ?v3 . ?v1 <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/Medal_of_the_Order_%22For_Merit_to_the_Fatherland%22> . }","```sparql
SELECT ?almaMater WHERE {
  # Define Moskovsky City District and its country
  ?moskovsky dbo:country ?russia .
  ?russia rdfs:label ""Russia""@en .

  # Find awardees of the Medal of the Order ""For Merit to the Fatherland""
  ?person dbo:award ?medal .
  ?medal rdfs:label ""Medal of the Order 'For Merit to the Fatherland'""@en .

  # Retrieve alma mater for these individuals
  ?person dbo:almaMater ?almaMater .
}
```",4,4,5,2,2,2,2,9,0,0,5,0,0.0,0
507,62,test,"Give me the director of the movie, that is a movie and a work, with the person born on 1919-06-17 and spouse of the person born as the birth name of Anne V. Coates and professional in Film director, television director.","SELECT ?result WHERE { ?result <http://dbpedia.org/property/occupation> ""Film director, television director""@en . ?v6 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?v0 <http://dbpedia.org/ontology/birthDate> ""1919-06-17""^^<http://www.w3.org/2001/XMLSchema#date> . <http://dbpedia.org/resource/Anne_V._Coates> <http://dbpedia.org/property/birthName> ?v4 . ?v6 <http://dbpedia.org/property/starring> ?v0 . ?v6 <http://dbpedia.org/ontology/director> ?result . ?v3 <http://dbpedia.org/property/birthName> ?v4 . ?result <http://dbpedia.org/ontology/spouse> ?v3 . ?v6 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Film>. }","```sparql
SELECT ?director WHERE {
  # Find person born on June 17, 1919
  ?person dbo:birthDate ?date .
  FILTER (YEAR(?date) = 1919 && MONTH(?date) = 6 && DAY(?date) = 17)

  # Identify Anne V. Coates as a film and television director
  ?anne foaf:name ""Anne V. Coates""@en ;
        dbo:birthName ""Anne V. Coates"" ;
        rdf:type dbo:FilmDirector, dbo:TelevisionDirector .

  # Establish spouse relationship
  ?person dbo:spouse ?anne .
  
  # Find movies that are both a movie and a work directed by Anne V. Coates
  ?movie dbo:director ?anne ;
         rdf:type dbo:Movie, dbo:Work .
}
```",7,9,8,3,3,3,3,71,0,0,1,0,0.0,0
976,61,test,"Give me the office of the person born as the birth name of Naci Bostancı and office of the mayor, that is a politician and an office holder and Turkish, of the reference, that is an organisation and a political party and Turkish, to Millet İttifakı.","SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Turkey>. ?v0 <http://dbpedia.org/property/office> ?result . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v1 <http://dbpedia.org/property/leader> ?v4 . ?v4 <http://dbpedia.org/ontology/nationality> <http://dbpedia.org/resource/Turkey>. ?v4 <http://dbpedia.org/property/office> ?result . <http://dbpedia.org/resource/Naci_Bostancı> <http://dbpedia.org/property/birthName> ?v3 . ?v0 <http://dbpedia.org/property/birthName> ?v3 . ?v1 <http://xmlns.com/foaf/0.1/name> ""Millet İttifakı""@en . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/PoliticalParty>. ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. }","```sparql
SELECT ?birthNameOffice ?mayorOffice ?organization WHERE {
  # Find Naci Bostancı's birth name
  ?naciBostanci dbo:birthName ?birthName .
  ?naciBostanci rdfs:label ""Naci Bostancı""@en .

  # Find the office of the person with that birth name
  OPTIONAL {
    ?person dbo:birthName ?birthName .
    ?person dbo:office ?birthNameOffice .
  }

  # Identify a Turkish politician and office holder associated with an organization or political party related to Millet İttifakı
  OPTIONAL {
    ?politician rdf:type dbo:Politician ;
                dbo:nationality dbr:Turkey ;
                dbo:office ?mayorOffice ;
                dbo:affiliation ?organization .
    ?organization dbo:reference ?millettIttifaki .
    ?millettIttifaki rdfs:label ""Millet İttifakı""@tr .
  }
}
```",6,12,7,3,2,3,3,71,0,0,1,0,0.0,0
926,56,test,"Give me the father of the father of Abdulaziz and child of the father, that is a royalty, of the parent, that is a royalty, of Beyhan Sultan (daughter of Mustafa III) and successor of Mustafa III.",SELECT ?result WHERE { ?v0 <http://dbpedia.org/ontology/child> ?result . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v4 <http://dbpedia.org/property/father> ?v0 . <http://dbpedia.org/resource/Abdulaziz> <http://dbpedia.org/property/father> ?v2 . ?v2 <http://dbpedia.org/property/father> ?result . <http://dbpedia.org/resource/Beyhan_Sultan_(daughter_of_Mustafa_III)> <http://dbpedia.org/ontology/parent> ?v4 . <http://dbpedia.org/resource/Mustafa_III> <http://dbpedia.org/ontology/successor> ?result . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. },"```sparql
SELECT ?grandfather ?royalChildFather WHERE {
  # Step 1: Find Abdulaziz and his grandfather
  ?abdulaziz dbo:parent ?father .
  ?father dbo:parent ?grandfather .
  ?abdulaziz rdfs:label ""Abdulaziz Ibn Saud""@en .

  # Step 2: Identify Mustafa III's successor
  ?mustafaIII dbo:succeededBy ?successor .
  ?mustafaIII rdfs:label ""Mustafa III""@en .

  # Step 3: Find a royal child of the successor
  ?successor dbo:child ?royalChild .
  FILTER (regex(str(?royalChild), ""royalty"", ""i""))

  # Step 4: Identify the father of this royal child
  ?royalChild dbo:parent ?royalChildFather .

}
```",6,8,7,3,3,3,3,71,0,0,1,0,0.0,0
987,68,test,"Give me the birth place of the band, that is an artist and a musical artist, of the band, that is an artist, of Dado Polumenta and birth place of the actor of the show, that is a film, with Emir Hadžihafizbegović and entity in the region, that is a country, of Central European Time.",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/country> ?v0 . ?v6 <http://dbpedia.org/ontology/birthPlace> ?result . ?v0 <http://dbpedia.org/property/timeZone> <http://dbpedia.org/resource/Central_European_Time> . ?v2 <http://dbpedia.org/ontology/birthPlace> ?result . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Film>. ?v1 <http://dbpedia.org/property/starring> ?v6 . ?v4 <http://dbpedia.org/ontology/associatedMusicalArtist> ?v2 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. <http://dbpedia.org/resource/Dado_Polumenta> <http://dbpedia.org/ontology/associatedMusicalArtist> ?v4 . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. ?v1 <http://dbpedia.org/ontology/starring> <http://dbpedia.org/resource/Emir_Hadžihafizbegović> . },"```sparql
SELECT ?birthPlaceBand1, ?birthPlaceActor, ?country WHERE {
  # Step 1: Identify Dado Polumenta's band
  ?band1 dbo:member ?dado .
  ?dado rdfs:label ""Dado Povlovic""@en .
  ?band1 a dbo:MusicalArtist ;
         a dbo:Artist .

  # Step 2: Find the artist of that band
  ?band2 dbo:artist ?band1 .
  ?band2 a dbo:Artist .

  # Step 3: Birth place of Dado Polumenta's band
  ?band1 dbo:birthPlace ?birthPlaceBand1 .

  # Step 4: Identify Emir Hadžihafizbegović's film show
  ?film dbo:starring ?emir .
  ?emir rdfs:label ""Emir Hadžihafizbegović""@en .
  ?film a dbo:Film .

  # Step 5: Actor of that film show
  ?actor dbo:starring ?film .

  # Step 6: Birth place of the actor
  ?actor dbo:birthPlace ?birthPlaceActor .

  # Step 7: Country in Central European Time (CET)
  ?country dct:region dbc:Central_European_Time .
  ?country a dbo:Country .
}
```",8,13,9,3,3,3,3,71,0,0,1,0,0.0,0
326,18,test,"Give me the resident of the birthplace, that is a state and British, of the professional in Writer and person decedent at the award, that is a country, of Adelbert Cronkhite.","SELECT ?result WHERE { ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. ?v1 <http://dbpedia.org/property/occupation> ""Writer""@en . ?result <http://dbpedia.org/property/residence> ?v2 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/AdministrativeRegion>. ?result <http://dbpedia.org/ontology/deathPlace> ?v3 . ?v2 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/United_Kingdom>. ?v1 <http://dbpedia.org/ontology/birthPlace> ?v2 . <http://dbpedia.org/resource/Adelbert_Cronkhite> <http://dbpedia.org/property/awards> ?v3 . }","```sparql
SELECT ?resident WHERE {
  # Step 1: Identify Adelbert Cronkhite's award
  ?adelbert dbo:award ?award .
  ?adelbert rdfs:label ""Adelbert Cronkhite""@en .

  # Step 2: Determine the country of the award
  ?award dbo:country ?country .

  # Step 3: Find a professional writer from that country who is deceased
  ?writer dbo:nationality ?country ;
          rdf:type dbo:Writer ;
          dbo:deathYear ?deathYear .
  
  FILTER (?deathYear != """")

  # Step 4: Identify the birthplace of this writer, ensuring it is a British state
  ?writer dbo:birthPlace ?birthPlace .
  ?birthPlace dbo:state ?state .
  ?state dbo:country dbr:United_Kingdom .

  # Step 5: Find the resident of this birthplace
  ?resident dbo:residence ?birthPlace .
}
```",5,8,6,3,2,3,2,20,0,0,1,0,0.0,0
417,67,test,"Give me the spouse of Princess Caroline-Mathilde of Denmark and child of the father of the leader, that is a royalty, of Colony of Greenland and child of the child, that is a royalty, of the parent, that is a royalty, of Alexandrine of Mecklenburg-Schwerin.",SELECT ?result WHERE { ?v3 <http://dbpedia.org/property/father> ?v1 . <http://dbpedia.org/resource/Colony_of_Greenland> <http://dbpedia.org/property/leader> ?v0 . ?result <http://dbpedia.org/ontology/parent> ?v3 . ?result <http://dbpedia.org/ontology/spouse> <http://dbpedia.org/resource/Princess_Caroline-Mathilde_of_Denmark> . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?result <http://dbpedia.org/property/father> ?v6 . <http://dbpedia.org/resource/Alexandrine_of_Mecklenburg-Schwerin> <http://dbpedia.org/ontology/parent> ?v1 . ?v0 <http://dbpedia.org/property/father> ?v6 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. },"```sparql
SELECT ?spouseOfCarolineMathilde ?childOfLeaderFather ?royalChildOfParent WHERE {
  # Step 1: Find spouse of Princess Caroline-Mathilde of Denmark
  ?carolineMathilde dbo:spouse ?spouseOfCarolineMathilde .
  ?carolineMathilde rdfs:label ""Princess Caroline-Mathilde of Denmark""@en .

  # Step 2: Identify leader of the Colony of Greenland and their father (royalty)
  OPTIONAL {
    ?leader dbo:position ""Governor of Greenland"" ;
            dbo:parent ?fatherOfLeader .
    FILTER EXISTS { ?fatherOfLeader rdf:type dbo:RoyalPerson }
    
    # Step 3: Find child of this royal father
    ?fatherOfLeader dbo:child ?childOfLeaderFather .
  }

  # Step 4: Identify parent of Alexandrine of Mecklenburg-Schwerin who is royalty and their child (royalty)
  OPTIONAL {
    ?alexandrineParent dbo:parent ?alexandrine ;
                      rdf:type dbo:RoyalPerson .
    ?alexandrineParent rdfs:label ""Alexandrine of Mecklenburg-Schwerin""@en .

    # Step 5: Find child of this royal parent
    ?alexandrineParent dbo:child ?royalChildOfParent .
    FILTER EXISTS { ?royalChildOfParent rdf:type dbo:RoyalPerson }
    
    # Step 6: Identify the child of this royal child
    ?royalChildOfParent dbo:child ?finalChild .
  }
}
```",7,10,8,3,3,3,3,71,1,0,0,1.0,1.0,1.0
170,27,test,Give me the entity in Russia and birth place of the awardee of People's Artist of Russia and domain of the profession of John Scholey.,SELECT ?result WHERE { <http://dbpedia.org/resource/John_Scholey> <http://dbpedia.org/property/occupation> ?v0 . ?result <http://dbpedia.org/ontology/leaderTitle> ?v0 . ?v3 <http://dbpedia.org/ontology/birthPlace> ?result . ?v3 <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/People's_Artist_of_Russia> . ?result <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Russia> . },"```sparql
SELECT ?awardee ?birthPlaceInRussia ?professionDomain WHERE {
  # Part 1: Find an awardee of People's Artist of Russia
  ?awardee dbo:award ""People's Artist of Russia"" .
  
  # Part 2: Determine the birthplace in Russia of this awardee
  OPTIONAL { 
    ?awardee dbo:birthPlace ?birthPlace .
    ?birthPlace rdfs:label ?birthPlaceLabel .
    FILTER (regex(?birthPlaceLabel, ""Russia"", ""i""))
    BIND(?birthPlaceLabel AS ?birthPlaceInRussia)
  }
  
  # Part 3: Identify John Scholey and his professional domain
  OPTIONAL {
    ?scholey dbo:name ""John Scholey"" .
    ?scholey dbo:professionDomain ?professionDomain .
  }
}
```",5,5,6,2,3,2,3,28,0,0,3,0,0.0,0
456,69,test,"Give me the band of the band, that is a musical artist, of the band of Alan Doyle and professional in the alter ego of The Shadow and spouse of the actor of the movie, that is a work and a television show, with Ross Newton.",SELECT ?result WHERE { ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?v2 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v3 <http://dbpedia.org/ontology/spouse> ?result . ?result <http://dbpedia.org/property/occupation> ?v7 . <http://dbpedia.org/resource/The_Shadow> <http://dbpedia.org/property/alterEgo> ?v7 . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?v1 <http://dbpedia.org/ontology/associatedMusicalArtist> ?v2 . ?v4 <http://dbpedia.org/property/starring> <http://dbpedia.org/resource/Ross_Newton> . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/TelevisionShow>. ?v4 <http://dbpedia.org/property/starring> ?v3 . <http://dbpedia.org/resource/Alan_Doyle> <http://dbpedia.org/ontology/associatedMusicalArtist> ?v1 . },"```sparql
SELECT ?bandOfBand WHERE {
  # Find Alan Doyle's band
  ?doyle dbo:member ""Alan Doyle""@en .
  ?doyle dbo:bandName ?greatBigSea .

  # Find a related musical artist to Great Big Sea (assuming collaboration or genre similarity)
  OPTIONAL { 
    ?relatedArtist dbo:collaboratesWith ?greatBigSea .
    FILTER regex(str(?relatedArtist), ""musical artist"", ""i"")
  }

  # Identify The Shadow's alter ego
  ?shadow rdfs:label ""The Shadow""@en ;
          dbo:alterEgo ?lamontCranston .

  # Find the professional of Lamont Cranston (wealthy playboy and detective)
  OPTIONAL {
    ?lamontCranston dbo:profession ?professional .
    FILTER regex(str(?professional), ""playboy|detective"", ""i"")
  }

  # Identify Ross Newton's movie/TV work
  ?rossNewton dbo:actorIn ?work .
  ?work rdf:type ?type .
  FILTER (?type IN (dbo:Film, dbo:TelevisionShow)) .

  # Find the spouse of Ross Newton
  OPTIONAL {
    ?rossNewton dbo:spouse ?spouse .
  }

  # Identify the band associated with Ross Newton's spouse
  OPTIONAL {
    ?spouse dbo:member ?bandOfBand .
    FILTER regex(str(?bandOfBand), ""musical artist"", ""i"")
  }
}
```",8,11,9,3,3,3,3,71,0,0,1,0,0.0,0
47,62,test,"Give me the office of the administration of the commander, that is a politician, in Operation Green Hunt and office of the awardee of the award, that is an award, of Mantu Ghosh and office of Ajoy Mukherjee.",SELECT ?result WHERE { ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Award>. <http://dbpedia.org/resource/Mantu_Ghosh> <http://dbpedia.org/property/awards> ?v0 . <http://dbpedia.org/resource/Ajoy_Mukherjee> <http://dbpedia.org/property/office> ?result . ?v3 <http://dbpedia.org/property/office> ?result . ?v6 <http://dbpedia.org/property/office> ?result . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v6 <http://dbpedia.org/property/awards> ?v0 . <http://dbpedia.org/resource/Operation_Green_Hunt> <http://dbpedia.org/ontology/commander> ?v4 . ?v3 <http://dbpedia.org/property/governor> ?v4 . },"```sparql
# Query for the office of the administration of the commander in Operation Green Hunt
SELECT ?office WHERE {
  ?operation dbo:commander ?commander .
  ?operation rdfs:label ""Operation Green Hunt""@en .
  
  OPTIONAL { 
    ?commander rdf:type dbo:Politician .
  }
  
  OPTIONAL {
    ?commander dbo:office ?office .
  }
}

# Query for the office of the awardee of an award for Mantu Ghosh
SELECT ?awardOffice WHERE {
  ?mantuGhosh dbo:awardsReceived ?award .
  ?mantuGhosh rdfs:label ""Mantu Ghosh""@en .
  
  OPTIONAL { 
    ?award rdf:type dbo:Award .
  }
  
  OPTIONAL {
    ?award dbo:office ?awardOffice .
  }
}

# Query for the office of Ajoy Mukherjee
SELECT ?office WHERE {
  ?ajoyMukherjee dbo:office ?office .
  ?ajoyMukherjee rdfs:label ""Ajoy Mukherjee""@en .
}
```",7,9,8,3,3,3,3,71,0,0,1,0,0.0,0
47,71,test,"Give me the office of the awardee of the entity, that is an award, in India and office of the awardee of the award, that is an award, of Mantu Ghosh and office of the administration of the commander, that is a politician, in Operation Green Hunt.",SELECT ?result WHERE { ?v5 <http://dbpedia.org/property/office> ?result . ?v7 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Award>. ?v5 <http://dbpedia.org/property/awards> ?v4 . ?v2 <http://dbpedia.org/property/office> ?result . ?v2 <http://dbpedia.org/property/governor> ?v1 . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Award>. ?v7 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/India> . <http://dbpedia.org/resource/Operation_Green_Hunt> <http://dbpedia.org/ontology/commander> ?v1 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v8 <http://dbpedia.org/property/office> ?result . <http://dbpedia.org/resource/Mantu_Ghosh> <http://dbpedia.org/property/awards> ?v4 . ?v8 <http://dbpedia.org/property/awards> ?v7 . },"```sparql
# Query for office of the awardee of an award in India
SELECT ?award ?awardeeOffice WHERE {
  ?award dbo:country dbr:India .
  ?award dbo:recipient ?awardee .
  ?awardee dbo:office ?awardeeOffice .
}

UNION

# Query for office of the awardee of an award received by Mantu Ghosh
SELECT ?award ?awardeeOffice WHERE {
  ?award dbo:recipient dbr:Mantu_Ghosh .
  ?award dbo:recipient ?awardee .
  ?awardee dbo:office ?awardeeOffice .
}

UNION

# Query for office of the administration of the commander in Operation Green Hunt
SELECT ?commander ?adminOffice WHERE {
  ?operation dbo:commander ?commander .
  ?operation rdfs:label ""Operation Green Hunt""@en .
  ?commander rdf:type dbo:Politician .
  ?commander dbo:office ?adminOffice .
}
```",9,12,10,3,3,3,3,71,0,0,1,0,0.0,0
124,68,test,"Give me the military force of the force, that is a societal event and a military conflict, of Herbert Kitchener, 1st Earl Kitchener and military force of the war, that is an event and a military conflict and a societal event, of the awardee of British South Africa Company Medal and commander in the war, that is a societal event and a military conflict, of the reference, that is Australian and an organisation and a military unit, to 'A' Battery, Royal Australian Artillery.","SELECT ?result WHERE { ?v5 <http://dbpedia.org/ontology/battle> ?v4 . ?result <http://dbpedia.org/ontology/battle> ?v7 . ?v3 <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Herbert_Kitchener,_1st_Earl_Kitchener> . ?v4 <http://dbpedia.org/ontology/commander> ?result . ?v0 <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/British_South_Africa_Company_Medal> . ?v5 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Australia>. ?v7 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?v0 <http://dbpedia.org/ontology/battle> ?v7 . ?v7 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryUnit>. ?v5 <http://xmlns.com/foaf/0.1/name> ""'A' Battery, Royal Australian Artillery""@en . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v7 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?result <http://dbpedia.org/ontology/battle> ?v3 . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. }","```sparql
# Step 1: Find Herbert Kitchener's military force
SELECT ?kitchenerMilitaryForce WHERE {
  ?kitchener dbo:militaryConflict ?kitchenerMilitaryForce .
  ?kitchener rdfs:label ""Herbert Kitchener, 1st Earl Kitchener""@en .
  FILTER (regex(str(?kitchenerMilitaryForce), ""Societal Event"", ""i"") && regex(str(?kitchenerMilitaryForce), ""Military Conflict"", ""i""))
}

# Step 2: Find the awardee of the British South Africa Company Medal
SELECT ?awardee WHERE {
  ?medal dbo:recipient ?awardee .
  ?medal rdfs:label ""British South Africa Company Medal""@en .
}

# Step 3: Find the military force of the war involving the awardee
SELECT ?militaryForce WHERE {
  ?awardee dbo:militaryConflict ?militaryForce .
  FILTER (regex(str(?militaryForce), ""Societal Event"", ""i"") && regex(str(?militaryForce), ""Military Conflict"", ""i""))
}

# Step 4: Find the commander related to 'A' Battery, Royal Australian Artillery
SELECT ?commander WHERE {
  ?battery dbo:reference ?commander .
  ?battery rdfs:label ""'A' Battery, Royal Australian Artillery""@en .
  FILTER (regex(str(?commander), ""Australian"", ""i"") && regex(str(?commander), ""Organisation"", ""i"") && regex(str(?commander), ""Military Unit"", ""i""))
}

# Step 5: Find the military force of this war
SELECT ?militaryForce WHERE {
  ?commander dbo:militaryConflict ?militaryForce .",8,18,9,3,3,3,3,71,0,0,9,0,0.0,0
826,63,test,"Give me the predecessor of the parent of Prince Friedrich of Hesse and by Rhine and successor of the child, that is a royalty, of Louis I, Grand Duke of Hesse and spouse of the child of the father of Anna Magdalena Appel.","SELECT ?result WHERE { <http://dbpedia.org/resource/Prince_Friedrich_of_Hesse_and_by_Rhine> <http://dbpedia.org/ontology/parent> ?v2 . <http://dbpedia.org/resource/Louis_I,_Grand_Duke_of_Hesse> <http://dbpedia.org/ontology/child> ?v6 . ?v3 <http://dbpedia.org/ontology/spouse> ?result . ?v3 <http://dbpedia.org/property/father> ?v4 . ?v6 <http://dbpedia.org/ontology/successor> ?result . ?v6 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. <http://dbpedia.org/resource/Anna_Magdalena_Appel> <http://dbpedia.org/property/father> ?v4 . ?result <http://dbpedia.org/ontology/successor> ?v2 . }","```sparql
SELECT ?result WHERE {
  # Step 1: Find the parent of Prince Friedrich of Hesse and by Rhine
  ?friedrich dbo:parent ?parent .
  ?friedrich rdfs:label ""Prince Friedrich of Hesse and by Rhine""@en .

  # Step 2: Find the predecessor of this parent
  ?predecessor dbo:succeededBy ?parent .

  # Step 3: Identify a royal child of Louis I, Grand Duke of Hesse
  ?louisI dbo:child ?royalChild .
  ?louisI rdfs:label ""Louis I, Grand Duke of Hesse""@en .
  FILTER (regex(str(?royalChild), ""Royal"", ""i""))

  # Step 4: Find the successor of this royal child
  ?successor dbo:succeededBy ?royalChild .

  # Step 5: Identify Anna Magdalena Appel's father and his child
  ?annaMagdalena dbo:parent ?father .
  ?annaMagdalena rdfs:label ""Anna Magdalena Appel""@en .
  
  ?childOfFather dbo:parent ?father .

  # Step 6: Find the spouse of this child
  ?spouse dbo:spouse ?childOfFather .

  # Combine results to find the final entity
  BIND(?predecessor AS ?result)
}
```",7,8,8,3,3,3,3,71,0,0,1,0,0.0,0
715,61,test,"Give me the leader of the office, that is a government agency and an organisation, of the reference to Carlos Franco Iribarnegaray and commander in the force of the mayor, that is an office holder and a politician and a president, of 1933 Spanish general election.","SELECT ?result WHERE { ?v1 <http://dbpedia.org/property/office> ?v3 . ?v5 <http://dbpedia.org/ontology/commander> ?result . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. <http://dbpedia.org/resource/1933_Spanish_general_election> <http://dbpedia.org/property/leader> ?v0 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/President>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/GovernmentAgency>. ?v3 <http://dbpedia.org/ontology/leader> ?result . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v1 <http://xmlns.com/foaf/0.1/name> ""Carlos Franco Iribarnegaray""@en . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?v5 <http://dbpedia.org/ontology/commander> ?v0 . }","```sparql
SELECT ?leader WHERE {
  # Identify Carlos Franco Iribarnegaray's role in a government agency or organization
  ?carlos dbo:officeHolder ?agency .
  ?carlos rdfs:label ""Carlos Franco Iribarnegaray""@en .

  # Find the mayor from the 1933 Spanish general election who was also a politician and president
  OPTIONAL {
    ?mayor dbo:officeHolder ?electionOffice .
    ?mayor dbo:electionDate ?date .
    FILTER (YEAR(?date) = 1933)
    ?mayor rdf:type dbo:Politician ;
           dbo:positionHeld ?presidency .
    ?presidency rdfs:label ""President""@en .
  }

  # Determine the commander associated with this mayor
  OPTIONAL {
    ?commander dbo:forceCommanderOf ?mayor .
  }

  # Retrieve the leader of the office related to Carlos Franco Iribarnegaray
  OPTIONAL {
    ?agency dbo:leader ?leader .
  }
}
```",6,11,7,3,2,3,3,71,0,0,1,0,0.0,0
136,9,test,Give me the region coded as the area code of Levenhagen and landmark at elevation of the award of Bret Anthony Johnston.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/areaCode> ?v1 . <http://dbpedia.org/resource/Bret_Anthony_Johnston> <http://dbpedia.org/property/awards> ?v3 . <http://dbpedia.org/resource/Levenhagen> <http://dbpedia.org/ontology/areaCode> ?v1 . ?result <http://dbpedia.org/ontology/elevation> ?v3 . },"```sparql
SELECT ?region ?landmark WHERE {
  # Part 1: Find the region coded by the area code of Levenhagen
  ?levenhagen dbo:areaCode ?areaCode .
  ?levenhagen rdfs:label ""Levenhagen""@en .
  
  ?region dbo:areaCode ?areaCode .

  # Part 2: Find landmark at elevation of an award received by Bret Anthony Johnston
  ?johnston dbo:award ?award .
  ?johnston rdfs:label ""Bret Anthony Johnston""@en .
  
  ?award dbo:elevation ?elevation .
  
  ?landmark dbo:elevation ?elevation .
}
```",4,4,5,2,2,2,2,9,0,0,1,0,0.0,0
329,26,test,"Give me the entity in United Kingdom and entity in the birthplace, that is an organisation and a country, of Robert Bates (loyalist) and birthplace of the author of The Tailor and Ansty.",SELECT ?result WHERE { <http://dbpedia.org/resource/Robert_Bates_(loyalist)> <http://dbpedia.org/ontology/birthPlace> ?v1 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. ?v2 <http://dbpedia.org/ontology/birthPlace> ?result . ?result <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/United_Kingdom> . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?result <http://dbpedia.org/ontology/country> ?v1 . <http://dbpedia.org/resource/The_Tailor_and_Ansty> <http://dbpedia.org/property/author> ?v2 . },"```sparql
SELECT ?ukEntity ?birthCountry WHERE {
  # Find Robert Bates (loyalist) and his associated organization in the UK
  ?bates dbo:birthPlace ?birthPlace .
  ?bates rdfs:label ""Robert Bates (loyalist)""@en .
  
  OPTIONAL {
    ?organization dbo:location ?ukLocation .
    ?organization dbo:member ?bates .
    FILTER (regex(str(?ukLocation), ""United Kingdom"", ""i""))
    BIND(?organization AS ?ukEntity)
  }
  
  # Find the author of ""The Tailor and Ansty"" and their birthplace
  ?book dbo:author ?author .
  ?book rdfs:label ""The Tailor and Ansty""@en .
  
  OPTIONAL {
    ?author dbo:birthPlace ?birthPlaceCountry .
    FILTER (isLiteral(?birthPlaceCountry) && datatype(?birthPlaceCountry) = xsd:string)
    BIND(str(?birthPlaceCountry) AS ?birthCountry)
  }
}
```",5,7,6,2,3,2,3,28,0,0,1,0,0.0,0
216,57,test,"Give me the team of the person born, that is a sports manager and a soccer manager and a soccer player, on 1983-12-20 and player in the coach, that is a soccer player and a sports manager and a soccer manager, of the player, that is an organisation and a sports club and a soccer club, in Džemal Berberović and player in Igor Bišćan.","SELECT ?result WHERE { ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerManager>. ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerPlayer>. <http://dbpedia.org/resource/Igor_Bišćan> <http://dbpedia.org/ontology/team> ?result . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerManager>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsManager>. ?v3 <http://dbpedia.org/ontology/birthDate> ""1983-12-20""^^<http://www.w3.org/2001/XMLSchema#date> . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerClub>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerPlayer>. ?v5 <http://dbpedia.org/ontology/team> ?result . ?result <http://dbpedia.org/ontology/coach> ?v3 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsClub>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsManager>. ?v0 <http://dbpedia.org/ontology/coach> ?v5 . <http://dbpedia.org/resource/Džemal_Berberović> <http://dbpedia.org/ontology/team> ?v0 . }","```sparql
SELECT ?team ?coach WHERE {
  # Find person born on 1983-12-20 who is a sports manager, soccer manager, and player
  ?person dbo:birthDate ""1983-12-20""^^xsd:date ;
          rdf:type dbo:SoccerPlayer ;
          dbo:managerOf ?team .
  
  # Ensure the person is also a sports manager and soccer manager
  ?person dbo:sportsManagerOf ?team ;
          dbo:coach ?coach .

  # Find coach who is also a player, sports manager, and soccer manager
  ?coach rdf:type dbo:SoccerPlayer ;
         dbo:sportsManagerOf ?team ;
         dbo:managerOf ?team .

  # Link Džemal Berberović to his club
  ?club rdfs:label ""Džemal Berberović""@en ;
        dbo:member ?player1 .
  
  # Identify Igor Bišćan's involvement
  ?club dbo:member ?player2 .
  FILTER (str(?player2) = ""Igor Bišćan"")

  # Ensure the team of the person is linked to Džemal Berberović's club
  ?team rdfs:label ?clubLabel .
}
```",6,15,7,3,3,3,3,71,0,0,1,0,0.0,0
987,60,test,"Give me the entity in the region, that is a country, of the time zone, that is a sports event, in Canicosa de la Sierra and birth place of the band, that is an artist and a musical artist, of the band, that is an artist, of Dado Polumenta.",SELECT ?result WHERE { ?v4 <http://dbpedia.org/ontology/associatedMusicalArtist> ?v2 . ?v0 <http://dbpedia.org/property/timeZone> ?v5 . ?v2 <http://dbpedia.org/ontology/birthPlace> ?result . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. ?result <http://dbpedia.org/ontology/country> ?v0 . <http://dbpedia.org/resource/Canicosa_de_la_Sierra> <http://dbpedia.org/ontology/timeZone> ?v5 . <http://dbpedia.org/resource/Dado_Polumenta> <http://dbpedia.org/ontology/associatedMusicalArtist> ?v4 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsEvent>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. },"```sparql
SELECT ?entity WHERE {
  # Step 1: Identify Dado Povolny's band
  ?band dbo:member ?dado .
  ?dado rdfs:label ""Dado Povolny""@en .

  # Step 2: Find the birthplace of the band (artist and musical artist)
  ?band dbo:birthPlace ?birthPlace .
  ?birthPlace a dbo:Artist ;
              a dbo:MusicalArtist .

  # Step 3: Identify the time zone in Canicosa de la Sierra
  ?canicosa dcterms:location ?region .
  ?region dbo:timeZone ?timeZone .
  ?canicosa rdfs:label ""Canicosa de la Sierra""@en .

  # Step 4: Find sports events in that time zone
  ?sportsEvent dbo:timeZone ?timeZone ;
               a dbo:SportsEvent .

  # Step 5: Determine the country of the region where the sports event is held
  ?region dbo:country ?entity .
  FILTER (?entity a dbo:Country)
}
```",6,11,7,3,2,3,3,71,0,0,2,0,0.0,0
976,63,test,"Give me the office of the person born as Mehmet Naci Bostancı and office of the leader, that is a politician, of the administration, that is an organisation, of Kemal Kılıçdaroğlu and office of the mayor, that is a politician and an office holder and Turkish, of Nation Alliance (Turkey).","SELECT ?result WHERE { ?v5 <http://dbpedia.org/ontology/nationality> <http://dbpedia.org/resource/Turkey>. ?v1 <http://dbpedia.org/property/office> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v3 <http://dbpedia.org/ontology/leader> ?v1 . <http://dbpedia.org/resource/Nation_Alliance_(Turkey)> <http://dbpedia.org/property/leader> ?v5 . ?v0 <http://dbpedia.org/property/office> ?result . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?v3 <http://dbpedia.org/property/leader> <http://dbpedia.org/resource/Kemal_Kılıçdaroğlu> . ?v5 <http://dbpedia.org/property/office> ?result . ?v0 <http://dbpedia.org/property/birthName> ""Mehmet Naci Bostancı""@en . }","```sparql
SELECT ?bostanciOffice ?kılıçdarogluLeaderOffice ?nationAllianceMayorOffice WHERE {
  # Office or position of Mehmet Naci Bostancı
  ?bostanci dbo:birthName ""Mehmet Naci Bostancı""@en .
  OPTIONAL { ?bostanci dbo:occupation ?bostanciOffice . }

  # Organization led by Kemal Kılıçdaroğlu and its leader's office
  ?kılıçdaroglu dbo:leaderOf ?organization .
  ?kılıçdaroglu rdfs:label ""Kemal Kılıçdaroğlu""@en .
  OPTIONAL { 
    ?organizationLeader dbo:position ?kılıçdarogluLeaderOffice .
    FILTER (regex(str(?organizationLeader), ""leader"", ""i""))
  }

  # Mayor of Nation Alliance (Turkey) who is a politician, office holder, and Turkish
  ?nationAlliance rdfs:label ""Nation Alliance (Turkey)""@en .
  OPTIONAL {
    ?mayor dbo:position ?nationAllianceMayorOffice ;
           rdf:type dbo:Politician ;
           dbo:nationality dbr:Turkey .
    FILTER (regex(str(?mayor), ""mayor"", ""i""))
  }
}
```",7,12,8,3,3,3,3,71,0,0,1,0,0.0,0
976,64,test,"Give me the office of Meral Akşener and office of the leader, that is a politician, of the administration, that is an organisation, of Kemal Kılıçdaroğlu and office of the person born as the birth name of Naci Bostancı.",SELECT ?result WHERE { <http://dbpedia.org/resource/Meral_Akşener> <http://dbpedia.org/property/office> ?result . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?v4 <http://dbpedia.org/ontology/leader> ?v2 . ?v0 <http://dbpedia.org/property/birthName> ?v5 . ?v0 <http://dbpedia.org/property/office> ?result . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. <http://dbpedia.org/resource/Naci_Bostancı> <http://dbpedia.org/property/birthName> ?v5 . ?v2 <http://dbpedia.org/property/office> ?result . ?v4 <http://dbpedia.org/property/leader> <http://dbpedia.org/resource/Kemal_Kılıçdaroğlu> . },"```sparql
SELECT ?meralOffice ?kemalLeaderOffice ?naciOffice WHERE {
  # Meral Akşener's office
  ?meral dbo:office ?meralOffice .
  ?meral rdfs:label ""Meral Akşener""@en .

  # Kemal Kılıçdaroğlu's administration and its leader
  ?kemal dbo:leader ?administration .
  ?kemal rdfs:label ""Kemal Kılıçdaroğlu""@en .
  
  OPTIONAL {
    ?administration a dbo:Organization .
    ?administrationLeader dbo:leader ?administration .
    ?administrationLeader rdf:type dbo:Politician .
    ?administrationLeader dbo:office ?kemalLeaderOffice .
  }

  # Naci Bostancı's birth name and office
  ?naci dbo:birthName ""Naci Bostancı""@en .
  ?naci dbo:office ?naciOffice .
}
```",7,9,8,3,3,3,3,71,0,0,1,0,0.0,0
18,24,test,"Give me the alumnus of the figure known, that is an educational institution, as Saints and parent of the professional in Actress.","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/child> ?v0 . ?result <http://dbpedia.org/ontology/almaMater> ?v1 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/EducationalInstitution>. ?v0 <http://dbpedia.org/property/occupation> ""Actress""@en . ?v1 <http://dbpedia.org/property/nickname> ""Saints""@en . }","```sparql
SELECT ?alumnus WHERE {
  # Find the educational institution known as ""Saints""
  ?institution dbo:wikiPageRedirects dbpedia:en:Saints_College_(Hong_Kong) .
  
  # Identify an alumnus of this institution
  ?alumnus dbo:almaMater ?institution .

  # Check if this alumnus is the parent of a professional actress
  OPTIONAL {
    ?child dbo:parent ?alumnus .
    ?child dbo:occupation dbpedia:Actress .
  }
}
```",4,5,5,2,2,2,3,28,0,0,1,0,0.0,0
281,28,test,"Give me the awardee of the award of Alfred Warden and commander in the war, that is an event and a military conflict, of Roy Boehm and awardee of the award, that is a military conflict, of Lawrence Moore Cosgrave.",SELECT ?result WHERE { ?result <http://dbpedia.org/property/awards> ?v5 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. <http://dbpedia.org/resource/Roy_Boehm> <http://dbpedia.org/ontology/battle> ?v1 . ?result <http://dbpedia.org/property/awards> ?v3 . <http://dbpedia.org/resource/Lawrence_Moore_Cosgrave> <http://dbpedia.org/property/awards> ?v3 . <http://dbpedia.org/resource/Alfred_Warden> <http://dbpedia.org/property/awards> ?v5 . ?v1 <http://dbpedia.org/ontology/commander> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. },"```sparql
SELECT ?commonEntity WHERE {
  # Alfred Warden's award and its awardee
  ?warden dbo:awardReceived ?award .
  ?warden rdfs:label ""Alfred Warden""@en .

  ?awardee dbo:awardReceived ?award .
  
  # Roy Boehm's military conflict as a commander
  ?boehm dbo:commanderInMilitaryConflict ?conflict1 .
  ?boehm rdfs:label ""Roy Boehm""@en .

  # Lawrence Moore Cosgrave's award related to a military conflict
  ?cosgrave dbo:awardReceived ?conflictAward .
  ?cosgrave rdfs:label ""Lawrence Moore Cosgrave""@en .

  ?conflict2 dbo:relatedToMilitaryConflict ?conflictAward .

  # Find the common entity
  FILTER (?awardee = ?commonEntity)
  FILTER (?boehm = ?commonEntity)
}
```",6,9,7,2,3,2,3,28,0,0,1,0,0.0,0
382,20,test,"Give me the birthplace of the manager, that is a soccer manager and an athlete and a sports manager, of the player in Lukas Kübler and landmark at elevation of the award of the reference, that is a college coach and a coach, to Harry Combes.","SELECT ?result WHERE { ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/CollegeCoach>. <http://dbpedia.org/resource/Lukas_Kübler> <http://dbpedia.org/ontology/team> ?v1 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsManager>. ?v4 <http://xmlns.com/foaf/0.1/name> ""Harry Combes""@en . ?v4 <http://dbpedia.org/property/awards> ?v5 . ?result <http://dbpedia.org/ontology/elevation> ?v5 . ?v1 <http://dbpedia.org/ontology/manager> ?v2 . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Coach>. ?v2 <http://dbpedia.org/ontology/birthPlace> ?result . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerManager>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Athlete>. }","```sparql
SELECT ?birthPlace WHERE {
  # Step 1: Identify Lukas Kübler's Manager
  ?manager dbo:employee ?kuebler .
  ?kuebler rdfs:label ""Lukas Kübler""@en .
  
  FILTER EXISTS { ?manager rdf:type dbo:SoccerManager . }
  FILTER EXISTS { ?manager rdf:type dbo:Athlete . }
  FILTER EXISTS { ?manager rdf:type dbo:SportsManager . }

  # Step 2: Find Harry Combes' Award and its Elevation
  ?combes dbo:award ?award .
  ?combes rdfs:label ""Harry Combes""@en .

  OPTIONAL {
    ?award dbo:elevation ?elevation .
  }
  
  # Step 3: Locate a Landmark at that Elevation
  ?landmark dbo:elevation ?elevation .
  
  # Step 4: Get the Birthplace of the Manager
  ?manager dbo:birthPlace ?birthPlace .
}
```",6,11,7,3,2,3,2,20,0,0,1,0,0.0,0
267,20,test,"Give me the coach of the player, that is a soccer club, in the manager of 2020–21 Tractor S.C. season and person born on the birth date of the reference to Dan Cathy.","SELECT ?result WHERE { ?v4 <http://dbpedia.org/ontology/birthDate> ?v5 . ?result <http://dbpedia.org/ontology/birthDate> ?v5 . ?v1 <http://dbpedia.org/ontology/team> ?v2 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerClub>. ?v4 <http://xmlns.com/foaf/0.1/name> ""Dan Cathy""@en . <http://dbpedia.org/resource/2020–21_Tractor_S.C._season> <http://dbpedia.org/ontology/manager> ?v1 . ?v2 <http://dbpedia.org/ontology/coach> ?result . }","```sparql
SELECT ?coach WHERE {
  # Step 1: Identify the manager of Tractor S.C. in the 2020–21 season
  ?manager dbo:managerOfSeason ?tractor .
  ?tractor rdfs:label ""Tractor S.C.""@en ;
           dbo:season ""2020–21""@en .

  # Step 2: Check if this manager is associated with a soccer club
  OPTIONAL {
    ?manager dbo:affiliation ?soccerClub .
    FILTER (regex(str(?soccerClub), ""Soccer Club"", ""i""))
  }

  # Step 3: Find Dan Cathy's birth date
  ?danCathy dbo:birthDate ?birthDate .
  ?danCathy rdfs:label ""Dan Cathy""@en .

  # Step 4: Identify a person born on the same date as Dan Cathy
  ?person dbo:birthDate ?birthDate ;
          rdf:type dbo:Person .

  # Step 5: Determine if this person is associated with a soccer club and find their coach
  OPTIONAL {
    ?person dbo:affiliation ?soccerClub .
    FILTER (regex(str(?soccerClub), ""Soccer Club"", ""i""))
    ?soccerClub dbo:coach ?coach .
  }
}
```",6,7,7,3,2,3,2,20,0,0,1,0,0.0,0
865,69,test,"Give me the father of the child, that is a politician, of Abu Ahmad Abdul Hafiz and father of the child of the father of Abul Maal Abdul Muhith and native of the residence, that is a country, of the person decedent at Patna.",SELECT ?result WHERE { ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. <http://dbpedia.org/resource/Abul_Maal_Abdul_Muhith> <http://dbpedia.org/property/father> ?v7 . ?v1 <http://dbpedia.org/ontology/deathPlace> <http://dbpedia.org/resource/Patna> . ?v3 <http://dbpedia.org/property/father> ?result . ?v1 <http://dbpedia.org/property/residence> ?v0 . ?result <http://dbpedia.org/ontology/birthPlace> ?v0 . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v3 <http://dbpedia.org/property/father> ?v7 . ?v5 <http://dbpedia.org/property/father> ?result . ?v5 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Abu_Ahmad_Abdul_Hafiz> . },"```sparql
SELECT ?fatherOfPolitician WHERE {
  # Find Abu Ahmad Abdul Hafiz and his children
  ?abuHafiz dbo:child ?child .
  ?abuHafiz rdfs:label ""Abu Ahmad Abdul Hafiz""@en .

  # Filter the child who is a politician
  ?child dbo:occupation dbc:Politicians_by_country_of_birth .
  
  # Find the father of this politician child
  ?child dbo:parent ?fatherOfPolitician .

  # Find Abul Maal Abdul Muhith and his father
  ?abulMuhith dbo:parent ?fatherAbulMuhith .
  ?abulMuhith rdfs:label ""Abul Maal Abdul Muhith""@en .

  # Find the child of this father
  ?fatherAbulMuhith dbo:child ?childOfFatherAbulMuhith .

  # Identify the country of residence for a person who died in Patna
  ?decedent dbo:placeOfBirth ?country .
  ?decedent dbo:deathPlace dbc:Patna, Bihar, India .
  
  # Ensure the native country matches with the child's native country
  ?childOfFatherAbulMuhith dbo:nativeCountry ?country .
}
```",8,10,9,3,3,3,3,71,0,0,1,0,0.0,0
573,58,test,"Give me the person decedent at Massachusetts and parent of the author, that is a politician and an office holder, of the work of John Quincy Adams and person decedent at the residence, that is a settlement, of William J. Phelan.",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/deathPlace> <http://dbpedia.org/resource/Massachusetts> . ?v1 <http://dbpedia.org/property/author> <http://dbpedia.org/resource/John_Quincy_Adams> . ?v2 <http://dbpedia.org/ontology/parent> ?result . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. ?result <http://dbpedia.org/ontology/deathPlace> ?v5 . ?v1 <http://dbpedia.org/property/author> ?v2 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. <http://dbpedia.org/resource/William_J._Phelan> <http://dbpedia.org/property/residence> ?v5 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. },"```sparql
SELECT ?decedentJohnQuincyAdams ?decedentWilliamJPhelan WHERE {
  # Part 1: John Quincy Adams' parent who is a politician and office holder
  ?johnQuincyAdams dbo:parent ?parent .
  ?parent rdfs:label ""John Adams""@en .
  ?parent dbo:officeHolder ?office .

  # Decedent at Massachusetts related to this parent
  OPTIONAL {
    ?decedentJohnQuincyAdams dbo:placeOfBirth ?massachusetts .
    ?massachusetts rdfs:label ""Massachusetts""@en .
    FILTER (?decedentJohnQuincyAdams != ?parent)
  }

  # Part 2: William J. Phelan's residence that is a settlement
  ?williamJPhelan dbo:residence ?settlement .
  ?settlement rdf:type dbo:Settlement .

  # Decedent at this residence
  OPTIONAL {
    ?decedentWilliamJPhelan dbo:placeOfBirth ?settlement .
    FILTER (?decedentWilliamJPhelan != ?williamJPhelan)
  }

  # Bind John Quincy Adams and William J. Phelan to their respective entities
  ?johnQuincyAdams rdfs:label ""John Quincy Adams""@en .
  ?williamJPhelan rdfs:label ""William J. Phelan""@en .
}
```",6,9,7,3,3,3,3,71,0,0,2,0,0.0,0
507,56,test,Give me the spouse of the person born as Anne Voase Coates and professional in the profession of the person born on 1966-02-18 and director of Entertaining Mr Sloane (film).,"SELECT ?result WHERE { ?v0 <http://dbpedia.org/ontology/birthDate> ""1966-02-18""^^<http://www.w3.org/2001/XMLSchema#date> . ?result <http://dbpedia.org/ontology/spouse> ?v2 . ?result <http://dbpedia.org/property/occupation> ?v1 . ?v0 <http://dbpedia.org/property/occupation> ?v1 . ?v2 <http://dbpedia.org/property/birthName> ""Anne Voase Coates""@en . <http://dbpedia.org/resource/Entertaining_Mr_Sloane_(film)> <http://dbpedia.org/ontology/director> ?result . }","```sparql
SELECT ?spouse WHERE {
  # Find Anne Voase Coates and her spouse
  ?anne a dbo:Person ;
        rdfs:label ""Anne Voase Coates""@en .
  ?anne dbo:spouse ?spouse .

  # Identify the person born on 1966-02-18 and their profession
  ?person a dbo:Person ;
          dbo:birthday ""1966-02-18""^^xsd:date ;
          dbo:occupation ?profession .

  # Ensure the spouse's profession matches the identified profession
  ?spouse dbo:occupation ?profession .

  # Find the director of Entertaining Mr Sloane
  OPTIONAL {
    ?film a dbo:Film ;
          rdfs:label ""Entertaining Mr Sloane""@en .
    ?film dbo:director ?director .
  }
}
```",6,6,7,3,3,3,3,71,0,0,1,0,0.0,0
216,59,test,"Give me the player in the coach, that is a soccer player and a sports manager and a soccer manager, of the player, that is an organisation and a sports club and a soccer club, in Džemal Berberović and player in the coach of the reference, that is an organisation and a soccer club, to Croatia U21.","SELECT ?result WHERE { ?v3 <http://dbpedia.org/ontology/coach> ?v2 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsClub>. ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsManager>. ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerManager>. ?v0 <http://dbpedia.org/ontology/coach> ?v5 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerClub>. <http://dbpedia.org/resource/Džemal_Berberović> <http://dbpedia.org/ontology/team> ?v0 . ?v5 <http://dbpedia.org/ontology/team> ?result . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerClub>. ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerPlayer>. ?v3 <http://xmlns.com/foaf/0.1/name> ""Croatia U21""@en . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?v2 <http://dbpedia.org/ontology/team> ?result . }","```sparql
SELECT ?playerInCoach WHERE {
  # Find Džemal Berberović's coach who is also a soccer player, sports manager, and soccer manager
  ?džemal dbo:playerInTeam ?team .
  ?džemal rdfs:label ""Džemal Berberović""@en .

  OPTIONAL {
    ?coach dbo:coach ?team .
    ?coach dbo:player ?playerRole .
    FILTER (regex(str(?playerRole), ""soccer player"", ""i""))
    ?coach dbo:sportsManager ?managerRole .
    FILTER (regex(str(?managerRole), ""sports manager"", ""i""))
    ?coach dbo:coach ?managerRole2 .
    FILTER (regex(str(?managerRole2), ""soccer manager"", ""i""))
  }

  # Find the organization associated with this coach
  OPTIONAL {
    ?team dbo:organization ?org .
    ?org rdf:type ?type .
    FILTER (
      regex(str(?type), ""sports club|soccer club"", ""i"")
    )
  }

  # Find player in the coach role of the organization related to Croatia U21
  OPTIONAL {
    ?org dbo:playerInTeam ?croatiaU21 .
    ?croatiaU21 rdfs:label ""Croatia national under-21 football team""@en .
    ?coach2 dbo:coach ?croatiaU21 .
    ?coach2 dbo:player ?playerInCoachRole .
  }
}
```",6,14,7,3,2,3,3,71,0,0,3,0,0.0,0
582,69,test,"Give me the figure known as the nickname of the team, that is an organisation, of Hajime Moriyasu and reference to the residence of the reference, that is a scientist, to Hirotaka Sugawara and player in the father, that is an athlete and a soccer manager and a sports manager, of Masami Nagasawa.","SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/coach> <http://dbpedia.org/resource/Hajime_Moriyasu> . ?v1 <http://dbpedia.org/property/nickname> ?v2 . <http://dbpedia.org/resource/Masami_Nagasawa> <http://dbpedia.org/property/father> ?v7 . ?result <http://xmlns.com/foaf/0.1/name> ?v3 . ?result <http://dbpedia.org/property/nickname> ?v2 . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Scientist>. ?v7 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsManager>. ?v4 <http://xmlns.com/foaf/0.1/name> ""Hirotaka Sugawara""@en . ?v4 <http://dbpedia.org/property/residence> ?v3 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?v7 <http://dbpedia.org/ontology/team> ?result . ?v7 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerManager>. ?v7 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Athlete>. }","```sparql
SELECT ?nickname ?residence ?father WHERE {
  # Find Hajime Moriyasu's team nickname
  ?team dbo:manager ?hajimeMoriyasu .
  ?hajimeMoriyasu rdfs:label ""Hajime Moriyasu""@en .
  ?team dbo:nickname ?nickname .

  # Find Hirotaka Sugawara's associated scientist and their residence
  OPTIONAL {
    ?sugawara dbo:associatedWith ?scientist .
    ?sugawara rdfs:label ""Hirotaka Sugawara""@en .
    ?scientist dbo:residence ?residence .
  }

  # Find Masami Nagasawa's father who is an athlete, soccer manager, and sports manager
  OPTIONAL {
    ?nagasawa dbo:father ?father .
    ?nagasawa rdfs:label ""Masami Nagasawa""@en .
    ?father rdf:type dbo:Athlete ;
            dbo:soccerManager true ;
            dbo:sportsManager true .
  }
}
```",8,13,9,3,3,3,3,71,0,0,1,0,0.0,0
443,26,test,Give me the landmark at elevation of the award of William Shepherd and birthplace of the work of yes and birthplace of Ulf Lundell.,"SELECT ?result WHERE { ?v2 <http://dbpedia.org/property/author> ""yes""@en . ?result <http://dbpedia.org/ontology/elevation> ?v1 . <http://dbpedia.org/resource/Ulf_Lundell> <http://dbpedia.org/ontology/birthPlace> ?result . <http://dbpedia.org/resource/William_Shepherd> <http://dbpedia.org/property/awards> ?v1 . ?v2 <http://dbpedia.org/ontology/birthPlace> ?result . }","```sparql
SELECT ?landmarkElevation ?yesWorkBirthplace ?ulfLundellBirthplace WHERE {
  # Find William Shepherd and his award
  ?shepherd dbo:awardReceived ?award .
  ?shepherd rdfs:label ""William Shepherd""@en .

  # Find landmark associated with the award and its elevation
  OPTIONAL { 
    ?award dbo:associatedLandmark ?landmark .
    ?landmark dbo:elevation ?landmarkElevation .
  }

  # Find birthplace of a work by Yes
  ?yesBand rdfs:label ""Yes""@en .
  ?work dbo:band ?yesBand .
  ?work dbo:birthPlace ?yesWorkBirthplace .

  # Find Ulf Lundell's birthplace
  ?ulfLundell rdfs:label ""Ulf Lundell""@en .
  ?ulfLundell dbo:birthPlace ?ulfLundellBirthplace .
}
```",5,5,6,2,3,2,3,28,0,0,1,0,0.0,0
892,61,test,"Give me the entity in the administration, that is Italian and a region and a settlement and an administrative region, of the party, that is a political party and an organisation, of Andrea Cozzolino and landmark at elevation of the award of the member of E-girls.",SELECT ?result WHERE { ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/AdministrativeRegion>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/PoliticalParty>. ?v0 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Italy>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Region>. ?result <http://dbpedia.org/ontology/province> ?v0 . ?v0 <http://dbpedia.org/property/leaderParty> ?v3 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. ?v1 <http://dbpedia.org/property/awards> ?v4 . ?result <http://dbpedia.org/ontology/elevation> ?v4 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. <http://dbpedia.org/resource/E-girls> <http://dbpedia.org/ontology/bandMember> ?v1 . <http://dbpedia.org/resource/Andrea_Cozzolino> <http://dbpedia.org/ontology/party> ?v3 . },"```sparql
SELECT ?entity WHERE {
  # Step 1: Find Andrea Cozzolino's political party
  ?cozzolino dbo:party ?party .
  ?cozzolino rdfs:label ""Andrea Cozzolino""@en .

  # Step 2: Identify an Italian entity that is a region, settlement, administrative region, and landmark
  ?entity dbo:country dbr:Italy ;
          rdf:type dbr:Region ;
          rdf:type dbr:Settlement ;
          rdf:type dbr:Administrative_region ;
          rdf:type dbr:Landmark .

  # Step 3: Find an award related to E-girls at a specific elevation
  ?award dbo:elevation ?elevation .
  ?member dbo:memberOf dbr:E-girls .
  ?member dbo:receivedAward ?award .

  # Combine information to find the entity in administration of the party
  ?party dbo:administration ?entity .
}
```",6,12,7,3,2,3,3,71,0,0,2,0,0.0,0
933,64,test,"Give me the band of the band of the band, that is an artist and a musical artist, of The Ramong Sound and reference to Alan Warner and band of the band, that is a group and a band and an organisation, of the person born, that is a musical artist, on 1947-04-21.","SELECT ?result WHERE { <http://dbpedia.org/resource/The_Ramong_Sound> <http://dbpedia.org/ontology/associatedMusicalArtist> ?v4 . ?v5 <http://dbpedia.org/ontology/birthDate> ""1947-04-21""^^<http://www.w3.org/2001/XMLSchema#date> . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?v5 <http://dbpedia.org/ontology/associatedMusicalArtist> ?v0 . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?result <http://xmlns.com/foaf/0.1/name> ""Alan Warner""@en . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Group>. ?v0 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v2 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v4 <http://dbpedia.org/ontology/associatedMusicalArtist> ?v2 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Band>. }","```sparql
SELECT ?finalBand WHERE {
  # Step 1: Identify The Ramones
  ?ramones rdfs:label ""The Ramones""@en .
  
  # Step 2: Find the Band of The Ramones
  ?ramones dbo:bandMember ?member .
  ?member dbo:band ?firstBand .

  # Step 3: Find the Band of That Band
  ?firstBand dbo:bandMember ?secondMember .
  ?secondMember dbo:band ?finalBand .

  # Ensure it's an artist and musical artist
  ?finalBand rdf:type dbp:Artist ;
             rdf:type dbp:MusicalArtist .

  # Step 5: Reference Alan Warner
  ?alanWarner rdfs:label ""Alan Warner""@en .
  
  # Step 6: Identify the Band of Alan Warner's Band
  ?alanWarner dbo:bandMember ?warnerBand .
  
  # Step 7: Find the Person Born on 1947-04-21
  ?person dbo:birthDate ""1947-04-21""^^xsd:date ;
          rdf:type dbp:MusicalArtist .

  # Step 8: Find the Band of That Person
  ?person dbo:bandMember ?finalBand .
  
  FILTER (?finalBand = ?warnerBand)
}
```",7,13,8,3,3,3,3,71,0,0,1,0,0.0,0
888,19,test,"Give me the commander in the force, that is a societal event and an event, of Serhiy Kotenko and awardee of the award of the commander in 2022 Ukrainian eastern counteroffensive.",SELECT ?result WHERE { ?result <http://dbpedia.org/property/awards> ?v4 . ?v2 <http://dbpedia.org/ontology/commander> ?result . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?v2 <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Serhiy_Kotenko> . ?v0 <http://dbpedia.org/property/awards> ?v4 . <http://dbpedia.org/resource/2022_Ukrainian_eastern_counteroffensive> <http://dbpedia.org/ontology/commander> ?v0 . },"```sparql
SELECT ?commanderRole ?event ?award WHERE {
  # Identify Serhiy Kotenko and his role as a commander
  ?kotenko dbo:givenName ""Serhiy""@en .
  ?kotenko dbo:familyName ""Kotenko""@en .
  ?kotenko dbo:position ?commanderRole .

  # Link the commander role to an event related to the 2022 Ukrainian eastern counteroffensive
  ?event dbo:participant ?kotenko ;
         rdfs:label ?eventName .
  FILTER (regex(?eventName, ""Ukrainian eastern counteroffensive"", ""i""))

  # Identify any awards received by Serhiy Kotenko in connection with this role during the specified time frame
  OPTIONAL {
    ?award dbo:recipient ?kotenko ;
           dbo:dateReceived ?dateReceived .
    FILTER (regex(str(?award), ""2022"", """"))
  }
}
```",5,7,6,3,2,3,2,20,0,0,1,0,0.0,0
791,65,test,"Give me the predecessor of the child of the child, that is an office holder and a royalty, of Emperor Go-Shirakawa and father of the child, that is a royalty, of Emperor Takakura and spouse of the spouse, that is a royalty, of Emperor Takakura.",SELECT ?result WHERE { ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v6 <http://dbpedia.org/property/father> ?v0 . ?v3 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Emperor_Takakura> . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v3 <http://dbpedia.org/property/father> ?result . ?v0 <http://dbpedia.org/ontology/parent> <http://dbpedia.org/resource/Emperor_Go-Shirakawa> . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v4 <http://dbpedia.org/ontology/spouse> <http://dbpedia.org/resource/Emperor_Takakura> . ?result <http://dbpedia.org/ontology/successor> ?v6 . ?result <http://dbpedia.org/ontology/spouse> ?v4 . },"```sparql
SELECT ?predecessor WHERE {
  # Step a: Find child of the child (office holder and royalty) of Emperor Go-Shirakawa
  ?goShirakawa dbo:child ?firstChild .
  ?firstChild dbo:child ?secondChild .
  ?secondChild rdf:type dbo:OfficeHolder ;
               rdf:type dbo:Royalty .
  ?goShirakawa rdfs:label ""Emperor Go-Shirakawa""@en .

  # Step b: Find predecessor of the identified individual
  OPTIONAL {
    ?predecessor dbo:successor ?secondChild .
  }

  # Step c: Find father of child (royalty) of Emperor Takakura
  ?takakura dbo:child ?childTakakura .
  ?childTakakura rdf:type dbo:Royalty .
  ?takakura rdfs:label ""Emperor Takakura""@en .

  OPTIONAL {
    ?childTakakura dbo",7,11,8,3,3,3,3,71,0,0,1,0,0.0,0
965,68,test,"Give me the parent of the child, that is a royalty, of the person born, that is a politician, on 1854-05-24 and spouse of the spouse of the parent of Louise Mountbatten and parent of the person born, that is a noble, as Prince George of Battenberg.","SELECT ?result WHERE { ?v0 <http://dbpedia.org/property/birthName> ""Prince George of Battenberg""@en . ?v4 <http://dbpedia.org/ontology/spouse> ?v2 . ?v6 <http://dbpedia.org/property/father> ?v1 . ?result <http://dbpedia.org/ontology/spouse> ?v2 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Noble>. ?v6 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. <http://dbpedia.org/resource/Louise_Mountbatten> <http://dbpedia.org/ontology/parent> ?v4 . ?v1 <http://dbpedia.org/ontology/birthDate> ""1854-05-24""^^<http://www.w3.org/2001/XMLSchema#date> . ?v0 <http://dbpedia.org/ontology/parent> ?result . ?v6 <http://dbpedia.org/ontology/parent> ?result . }","```sparql
SELECT ?result WHERE {
  # Find the politician born on 1854-05-24
  ?politician dbo:birthday ""1854-05-24""^^xsd:date ;
              rdf:type dbo:Politician .

  # Find spouse of this politician
  OPTIONAL { 
    ?politician dbo:spouse ?spouse .
  }

  # Identify the child of this spouse who is royalty
  OPTIONAL {
    ?spouse dbo:child ?royalChild .
    ?royalChild rdf:type dbo:RoyalPerson .
  }

  # Determine the parent of this royal child
  OPTIONAL {
    ?royalChild dbo:parent ?result .
  }

  # Find Louise Mountbatten and her parent
  ?louiseMountbatten rdfs:label ""Louise Mountbatten""@en ;
                     dbo:parent ?parentOfLouise .

  # Identify the spouse of Louise Mountbatten's parent
  OPTIONAL {
    ?parentOfLouise dbo:spouse ?spouseOfParent .
  }

  # Find Prince George of Battenberg and his parent
  ?princeGeorge rdfs:label ""Prince George of Battenberg""@en ;
                dbo:parent ?result .

}
```",8,11,9,3,3,3,3,71,0,0,2,0,0.0,0
865,64,test,"Give me the father of the child of the father of Abul Maal Abdul Muhith and native of the residence, that is a country, of the person decedent at Patna and father of AK Abdul Momen.",SELECT ?result WHERE { <http://dbpedia.org/resource/AK_Abdul_Momen> <http://dbpedia.org/property/father> ?result . <http://dbpedia.org/resource/Abul_Maal_Abdul_Muhith> <http://dbpedia.org/property/father> ?v6 . ?v2 <http://dbpedia.org/property/father> ?result . ?v2 <http://dbpedia.org/property/father> ?v6 . ?v1 <http://dbpedia.org/property/residence> ?v0 . ?v1 <http://dbpedia.org/ontology/deathPlace> <http://dbpedia.org/resource/Patna> . ?result <http://dbpedia.org/ontology/birthPlace> ?v0 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. },"```sparql
SELECT ?father WHERE {
  # Find Abul Maal Abdul Muhith and his father
  ?muhith dbo:parent ?father .
  ?muhith rdfs:label ""Abul Maal Abdul Muhith""@en .

  # Identify AK Abdul Momen's father who is decedent at Patna
  ?momen dbo:parent ?akFather .
  ?momen rdfs:label ""AK Abdul Momen""@en .
  
  OPTIONAL {
    ?decedent dbo:deathPlace ?patna .
    ?patna rdfs:label ""Patna""@en .
    ?decedent dbo:parent ?akFather .
  }
  
  # Find the native country of the residence of the decedent
  OPTIONAL {
    ?residence dbo:nativeCountry ?country .
    ?decedent dbo:residence ?residence .
  }

  # Find the father of the child (Abul Maal Abdul Muhith)
  OPTIONAL {
    ?child dbo:parent ?father .
    FILTER (?child = ?muhith)
  }
}
```",7,8,8,3,3,3,3,71,0,0,1,0,0.0,0
715,59,test,"Give me the commander in the force, that is a military conflict, of the native of Morocco and commander in the force of the mayor, that is an office holder and a politician and a president, of 1933 Spanish general election.",SELECT ?result WHERE { <http://dbpedia.org/resource/1933_Spanish_general_election> <http://dbpedia.org/property/leader> ?v0 . ?v2 <http://dbpedia.org/ontology/commander> ?v3 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/President>. ?v2 <http://dbpedia.org/ontology/commander> ?result . ?v5 <http://dbpedia.org/ontology/commander> ?v0 . ?v5 <http://dbpedia.org/ontology/commander> ?result . ?v3 <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Morocco> . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. },"```sparql
SELECT ?commander WHERE {
  # Find a native of Morocco who is a commander in a military conflict
  ?person dbo:birthPlace dbr:Morocco .
  ?person dbo:militaryConflict ?conflict .
  
  # Identify the mayor, office holder, politician, and president from the 1933 Spanish general election
  ?mayor dbo:election dbr:Spanish_general_election,_1933 ;
         a dbo:Mayor ;
         dbo:officeHolder true ;
         dbo:politician true ;
         dbo:president true .
  
  # Check if the Moroccan commander is also a commander in the force of this mayor
  OPTIONAL {
    ?conflict dbo:commander ?commander .
    FILTER (?commander = ?person)
  }
}
```",6,10,7,3,2,3,3,71,0,0,4,0,0.0,0
122,8,test,"Give me the band of the reference, that is a musical artist and an artist, to Gift of Gab and band member of Lyrics Born.","SELECT ?result WHERE { ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?v2 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v2 <http://xmlns.com/foaf/0.1/name> ""Gift of Gab""@en . ?result <http://dbpedia.org/ontology/associatedMusicalArtist> <http://dbpedia.org/resource/Lyrics_Born> . }","```sparql
SELECT ?band WHERE {
  # Find the band associated with Gift of Gab
  ?giftOfGab dbo:member ?band .
  ?giftOfGab rdfs:label ""Gift of Gab""@en .

  # Find the band associated with Lyrics Born
  ?lyricsBorn dbo:member ?band .
  ?lyricsBorn rdfs:label ""Lyrics Born""@en .

  # Ensure the band is a musical artist
  ?band rdf:type dbo:MusicalArtist .
}
```",3,5,4,2,2,2,2,9,0,0,2,0,0.0,0
976,56,test,"Give me the office of the leader, that is a politician, of Grand National Assembly of Turkey and office of the person born as the birth name of Naci Bostancı and office of Meral Akşener.",SELECT ?result WHERE { <http://dbpedia.org/resource/Meral_Akşener> <http://dbpedia.org/property/office> ?result . ?v2 <http://dbpedia.org/property/office> ?result . ?v0 <http://dbpedia.org/property/office> ?result . <http://dbpedia.org/resource/Grand_National_Assembly_of_Turkey> <http://dbpedia.org/ontology/leader> ?v2 . ?v0 <http://dbpedia.org/property/birthName> ?v4 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. <http://dbpedia.org/resource/Naci_Bostancı> <http://dbpedia.org/property/birthName> ?v4 . },"```sparql
# Query for the office of the leader of the Grand National Assembly of Turkey
SELECT ?office WHERE {
  ?assembly dbo:leader ?leader .
  ?assembly rdfs:label ""Grand National Assembly of Turkey""@en .
  ?leader dbo:occupation ?office .
}

UNION

# Query for the office of Naci Bostancı by birth name
SELECT ?office WHERE {
  ?person foaf:name ""Naci Bostancı"" .
  ?person dbo:birthName ""Naci Bostancı"" .
  ?person dbo:occupation ?office .
}

UNION

# Query for the office of Meral Akşener
SELECT ?office WHERE {
  ?person foaf:name ""Meral Akşener"" .
  ?person dbo:occupation ?office .
}
```",6,7,7,3,3,3,3,71,0,0,1,0,0.0,0
507,66,test,"Give me the professional in the profession of the person born on 1966-02-18 and spouse of the person born as Anne Voase Coates and director of the movie, that is a movie and a work, with Beryl Reid.","SELECT ?result WHERE { ?v6 <http://dbpedia.org/property/starring> <http://dbpedia.org/resource/Beryl_Reid> . ?v6 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Film>. ?result <http://dbpedia.org/ontology/spouse> ?v3 . ?result <http://dbpedia.org/property/occupation> ?v2 . ?v6 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?v6 <http://dbpedia.org/ontology/director> ?result . ?v1 <http://dbpedia.org/ontology/birthDate> ""1966-02-18""^^<http://www.w3.org/2001/XMLSchema#date> . ?v3 <http://dbpedia.org/property/birthName> ""Anne Voase Coates""@en . ?v1 <http://dbpedia.org/property/occupation> ?v2 . }","```sparql
SELECT ?professional WHERE {
  # Find the person born on 1966-02-18
  ?person dbo:birthDate ""1966-02-18""^^xsd:date .
  
  # Get the profession of this person
  ?person dbo:occupation ?profession .

  # Find Anne Voase Coates and her spouse
  ?anneVoaseCoates rdfs:label ""Anne Voase Coates""@en ;
                  dbo:spouse ?spouse .

  # Identify a movie directed by someone that features Beryl Reid
  ?movie dbo:director ?director ;
         dbo:starring ?star .
  FILTER (?star = dbpedia:Beryl_Reid) .
  
  # Ensure the movie is categorized as both ""movie"" and ""work""
  ?movie rdf:type dbpedia-owl:Film, dbpedia-ontology:Work .

  # Find another professional in the same profession
  ?professional dbo:occupation ?profession .
}
```",7,9,8,3,3,3,3,71,0,0,1,0,0.0,0
98,26,test,"Give me the entity in the region, that is a country, of Philippine Standard Time and birth place of Paolo Ballesteros and region of the time zone of Lopez Jaena.",SELECT ?result WHERE { <http://dbpedia.org/resource/Lopez_Jaena> <http://dbpedia.org/ontology/timeZone> ?v4 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. ?result <http://dbpedia.org/ontology/timeZone> ?v4 . ?result <http://dbpedia.org/ontology/country> ?v1 . <http://dbpedia.org/resource/Paolo_Ballesteros> <http://dbpedia.org/ontology/birthPlace> ?result . ?v1 <http://dbpedia.org/property/timeZone> <http://dbpedia.org/resource/Philippine_Standard_Time> . },"```sparql
SELECT ?country WHERE {
  # Region associated with Philippine Standard Time
  ?pst dbo:timeZoneRegion ?region .
  ?pst rdfs:label ""Philippine Standard Time""@en .

  # Birthplace of Paolo Ballesteros
  ?ballesteros dbo:birthPlace ?birthPlace .
  ?ballesteros rdfs:label ""Paolo Ballesteros""@en .

  # Region associated with the time zone of Lopez Jaena
  ?lopezJaena dbo:timeZoneRegion ?regionLopez .
  ?lopezJaena rdfs:label ""Lopez, Jaena""@en .

  # Ensure all regions point to a single country
  ?birthPlace dbp:country ?country .
  ?region dbp:country ?country .
  ?regionLopez dbp:country ?country .
}
```",5,6,6,2,3,2,3,28,0,0,2,0,0.0,0
465,56,test,"Give me the successor of the child of Alfonso I d'Este and successor of the child, that is a royalty, of the parent of Charles Orlando, Dauphin of France and spouse of Archduchess Barbara of Austria.","SELECT ?result WHERE { <http://dbpedia.org/resource/Charles_Orlando,_Dauphin_of_France> <http://dbpedia.org/ontology/parent> ?v0 . ?v1 <http://dbpedia.org/ontology/successor> ?result . ?v0 <http://dbpedia.org/ontology/child> ?v1 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?result <http://dbpedia.org/ontology/spouse> <http://dbpedia.org/resource/Archduchess_Barbara_of_Austria> . ?v2 <http://dbpedia.org/ontology/successor> ?result . ?v2 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Alfonso_I_d'Este> . }","```sparql
SELECT ?successor1 ?successor2 WHERE {
  # Find the child of Alfonso I d'Este and their successor
  ?alfonso dbo:child ?child .
  ?alfonso rdfs:label ""Alfonso I d'Este""@en .
  ?child dbo:succ ?successor1 .

  # Identify the parent of Charles Orlando, Dauphin of France
  ?charlesOrlando dbo:parent ?parent .
  ?charlesOrlando rdfs:label ""Charles Orlando, Dauphin of France""@en .

  # Find the spouse of this parent who is royalty (Archduchess Barbara of Austria)
  ?parent dbo:spouse ?barbara .
  ?barbara rdfs:label ""Barbara of Austria""@en .

  # Find the child of Archduchess Barbara and their successor
  ?barbara dbo:child ?royalChild .
  ?royalChild dbo:succ ?successor2 .
}
```",6,7,7,3,3,3,3,71,0,0,1,0,0.0,0
273,18,test,Give me the spouse of the child of the child of Edoardo Agnelli (1831-1871) and parent of the alumnus of University of Turin.,SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/child> ?v2 . ?v3 <http://dbpedia.org/ontology/almaMater> <http://dbpedia.org/resource/University_of_Turin> . ?v3 <http://dbpedia.org/ontology/parent> ?result . ?v1 <http://dbpedia.org/ontology/parent> <http://dbpedia.org/resource/Edoardo_Agnelli_(1831-1871)> . ?result <http://dbpedia.org/ontology/spouse> ?v2 . },"```sparql
SELECT ?spouse WHERE {
  # Identify Edoardo Agnelli and his children
  ?edoardo dbo:birthDate ?date .
  FILTER (YEAR(?date) = 1831 && MONTH(?date) <= 12)
  ?edoardo dbo:deathDate ?deathDate .
  FILTER (YEAR(?deathDate) = 1871 && MONTH(?deathDate) >= 1)
  ?edoardo dbo:child ?child .

  # Identify grandchildren of Edoardo Agnelli
  ?child dbo:child ?grandchild .

  # Find the grandchild who is an alumnus of University of Turin
  ?alumnus dbp:almaMater dbr:University_of_Turin .
  FILTER (?grandchild = ?alumnus)

  # Identify the spouse of this specific grandchild (alumnus)
  ?alumnus dbo:spouse ?spouse .

  # Find the parent of this alumnus
  OPTIONAL {
    ?alumnus dbo:parent ?parent .
  }
}
```",5,5,6,3,2,3,2,20,0,0,1,0,0.0,0
124,59,test,"Give me the military force of the war, that is an event and a military conflict and a societal event, of the awardee of British South Africa Company Medal and commander in the war, that is a societal event and a military conflict, of the reference, that is Australian and an organisation and a military unit, to 'A' Battery, Royal Australian Artillery.","SELECT ?result WHERE { ?v0 <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/British_South_Africa_Company_Medal> . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?result <http://dbpedia.org/ontology/battle> ?v5 . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?v0 <http://dbpedia.org/ontology/battle> ?v5 . ?v3 <http://xmlns.com/foaf/0.1/name> ""'A' Battery, Royal Australian Artillery""@en . ?v3 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Australia>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryUnit>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v2 <http://dbpedia.org/ontology/commander> ?result . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v3 <http://dbpedia.org/ontology/battle> ?v2 . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. }","```sparql
SELECT ?militaryForce WHERE {
  # Identify individuals who received the British South Africa Company Medal
  ?person dbo:award ""British South Africa Company Medal"" .
  
  # Determine which of these individuals commanded a war that is an event, military conflict, and societal event
  OPTIONAL { 
    ?war dbo:commander ?person ;
         rdf:type dbo:MilitaryConflict ;
         rdf:type dbo:Event ;
         dbo:societalEvent true .
  }
  
  # Find the reference to 'A' Battery, Royal Australian Artillery
  ?reference rdfs:label ""A Battery, Royal Australian Artillery""@en ;
             dbo:country dbr:Australia ;
             rdf:type dbo:MilitaryUnit ;
             dbo:militaryOrganization dbr:Royal_Australian_Artillery .
  
  # Ensure the war involves 'A' Battery, Royal Australian Artillery
  ?war dbo:participatingMilitaryForce ?reference .
  
  # Identify the military force involved in this specific war
  ?war dbo:militaryForce ?militaryForce .
}
```",6,14,7,3,2,3,3,71,0,0,10,0,0.0,0
791,68,test,"Give me the spouse of the spouse, that is a royalty, of the reference to Emperor Takakura and father of the child, that is a royalty, of Emperor Takakura and predecessor of the child of the child, that is an office holder and a royalty, of Emperor Go-Shirakawa.","SELECT ?result WHERE { ?v4 <http://dbpedia.org/ontology/spouse> ?v5 . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v3 <http://dbpedia.org/property/father> ?result . ?v0 <http://dbpedia.org/ontology/parent> <http://dbpedia.org/resource/Emperor_Go-Shirakawa> . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v5 <http://xmlns.com/foaf/0.1/name> ""Emperor Takakura""@en . ?v7 <http://dbpedia.org/property/father> ?v0 . ?result <http://dbpedia.org/ontology/spouse> ?v4 . ?result <http://dbpedia.org/ontology/successor> ?v7 . ?v3 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Emperor_Takakura> . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. }","```sparql
SELECT ?finalSpouse WHERE {
  # Step 1: Find Emperor Takakura's spouse who is royalty
  ?takakura dbo:spouse ?royalSpouse .
  ?takakura rdfs:label ""Emperor Takakura""@en .
  
  # Ensure the spouse is royalty (e.g., Imperial Princess Shushi)
  FILTER (regex(str(?royalSpouse), ""Imperial Princess Shushi"", ""i""))

  # Step 2: Find a child of this royal spouse who is also royalty
  ?royalSpouse dbo:child ?royaltyChild .
  
  # Ensure the child is royalty (e.g., Emperor Antoku)
  FILTER (regex(str(?royaltyChild), ""Emperor Antoku"", ""i""))

  # Step 3: Find the predecessor of this child's child who is an office holder and royalty
  ?royaltyChild dbo:child ?grandChild .
  
  # Ensure the grandchild is both an office holder and royalty (e.g., Emperor Go-Toba)
  FILTER (regex(str(?grandChild), ""Emperor Go-Toba"", ""i""))

  # Find predecessor of this grandchild who is an office holder
  ?predecessor dbo:successor ?grandChild .
  
  # Ensure the predecessor is also royalty (e.g., Emperor Takakura)
  FILTER (regex(str(?predecessor), ""Emperor Takakura"", ""i""))

  # Step 4: Find a child of Emperor Go-Shirakawa who is an office holder and royalty
  ?goShirakawa dbo:child ?officeHolderChild .
  
  ?goShirakawa rdfs:label ""Emperor Go-Shirakawa""@en .
  
  # Ensure the child is both an office holder and royalty (e.g., Emperor Takakura)
  FILTER (regex(str(?officeHolderChild), ""Emperor Takakura"", ""i""))

  # Step 5: Find the spouse of the initial royal spouse
  ?royalSpouse dbo:spouse ?finalSpouse .
}
```",8,12,9,3,3,3,3,71,0,0,1,0,0.0,0
976,71,test,"Give me the office of the person born as the birth name of Naci Bostancı and office of the mayor, that is a politician and an office holder and Turkish, of the reference, that is an organisation and a political party and Turkish, to Millet İttifakı and office of the leader, that is a politician, of the administration, that is an organisation, of Kemal Kılıçdaroğlu.","SELECT ?result WHERE { ?v5 <http://dbpedia.org/ontology/nationality> <http://dbpedia.org/resource/Turkey>. ?v8 <http://dbpedia.org/property/birthName> ?v7 . ?v4 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Turkey>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?v8 <http://dbpedia.org/property/office> ?result . ?v1 <http://dbpedia.org/ontology/leader> ?v2 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v5 <http://dbpedia.org/property/office> ?result . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?v1 <http://dbpedia.org/property/leader> <http://dbpedia.org/resource/Kemal_Kılıçdaroğlu> . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/PoliticalParty>. ?v4 <http://xmlns.com/foaf/0.1/name> ""Millet İttifakı""@en . <http://dbpedia.org/resource/Naci_Bostancı> <http://dbpedia.org/property/birthName> ?v7 . ?v4 <http://dbpedia.org/property/leader> ?v5 . ?v2 <http://dbpedia.org/property/office> ?result . }","```sparql
SELECT ?naciOffice ?mayorOffice ?partyReference ?kemalOffice WHERE {
  # Find Naci Bostancı's birth name and office
  ?naci dbo:birthName ?birthName .
  ?naci rdfs:label ""Naci Bostancı""@en .
  ?naci dbo:office ?naciOffice .

  # Find a Turkish politician who is also a mayor associated with Millet İttifakı
  ?mayor dbo:memberOf ?milatParty .
  ?mayor dbo:office ?mayorOffice .
  ?mayor rdf:type dbo:Politician .
  ?mayor dbo:nationality dbr:Turkey .
  ?milatParty rdfs:label ""Millet İttifakı""@en .

  # Find the political party reference to Millet İttifakı
  ?partyReference dbo:member ?milatMember .
  ?partyReference rdf:type dbo:PoliticalParty .
  ?partyReference dbo:nationality dbr:Turkey .
  ?milatMember rdfs:label ""Millet İttifakı""@en .

  # Find Kemal Kılıçdaroğlu's leadership role
  ?kemal dbo:leaderOf ?administration .
  ?kemal rdfs:label ""Kemal Kılıçdaroğlu""@en .
  ?administration rdf:type dbo:Organization .
  ?kemal dbo:office ?kemalOffice .
}
```",9,17,10,3,3,3,3,71,0,0,1,0,0.0,0
582,65,test,"Give me the figure known as the nickname of Japan national football team and reference to the residence of Hirotaka Sugawara and player in the father, that is an athlete and a soccer manager and a sports manager, of the child of Kazuaki Nagasawa.",SELECT ?result WHERE { ?v6 <http://dbpedia.org/ontology/team> ?result . ?v6 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Athlete>. ?v6 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerManager>. <http://dbpedia.org/resource/Japan_national_football_team> <http://dbpedia.org/property/nickname> ?v3 . ?v0 <http://dbpedia.org/property/father> ?v6 . ?v6 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsManager>. ?result <http://dbpedia.org/property/nickname> ?v3 . <http://dbpedia.org/resource/Hirotaka_Sugawara> <http://dbpedia.org/property/residence> ?v4 . ?v0 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Kazuaki_Nagasawa> . ?result <http://xmlns.com/foaf/0.1/name> ?v4 . },"```sparql
# Query for the nickname of the Japan National Football Team
SELECT ?nickname WHERE {
  ?team dbo:nickname ?nickname .
  ?team rdfs:label ""Japan national football team""@en .
}

# Query for Hirotaka Sugawara's residence
SELECT ?residence WHERE {
  ?sugawara dbo:residenceLocation ?residence .
  ?sugawara rdfs:label ""Hirotaka Sugawara""@ja .
}

# Query for Kazuaki Nagasawa's father who is an athlete, soccer manager, and sports manager
SELECT ?father WHERE {
  ?nagasawa dbo:parent ?father .
  ?nagasawa rdfs:label ""Kazuaki Nagasawa""@en .

  # Ensure the father is an athlete, soccer manager, and sports manager
  ?father dbo:occupation ?occupation .
  FILTER (
    EXISTS { ?father dbo:occupation dbp:Athlete . }
    && EXISTS { ?father dbo:occupation dbp:SoccerManager . }
    && EXISTS { ?father dbo:occupation dbp:SportsManager . }
  )
}
```",7,10,8,3,3,3,3,71,0,0,1,0,0.0,0
216,66,test,"Give me the player in the coach, that is a soccer player and a sports manager and a soccer manager, of Bosnia and Herzegovina national under-18 football team and player in the coach of Croatia national under-21 football team and team of the person born, that is a sports manager and a soccer manager and a soccer player, on the death of Pavel Vezhinov.",SELECT ?result WHERE { ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsManager>. <http://dbpedia.org/resource/Croatia_national_under-21_football_team> <http://dbpedia.org/ontology/coach> ?v3 . ?v6 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerPlayer>. ?v3 <http://dbpedia.org/ontology/team> ?result . <http://dbpedia.org/resource/Pavel_Vezhinov> <http://dbpedia.org/ontology/deathDate> ?v1 . ?v6 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerManager>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerPlayer>. <http://dbpedia.org/resource/Bosnia_and_Herzegovina_national_under-18_football_team> <http://dbpedia.org/ontology/coach> ?v6 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerManager>. ?v6 <http://dbpedia.org/ontology/team> ?result . ?v6 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsManager>. ?result <http://dbpedia.org/ontology/coach> ?v2 . ?v2 <http://dbpedia.org/ontology/birthDate> ?v1 . },"```sparql
SELECT ?person WHERE {
  # Find person who is both player and coach for Bosnia and Herzegovina national under-18 football team
  ?bosniaTeam dbo:player ?person .
  ?bosniaTeam dbo:coach ?person .
  ?bosniaTeam rdfs:label ""Bosnia and Herzegovina national under-18 football team""@en .

  # Find person who is player in the coaching staff of Croatia national under-21 football team
  ?croatiaTeam dbo:player ?person .
  ?croatiaTeam dbo:coach ?person .
  ?croatiaTeam rdfs:label ""Croatia national under-21 football team""@en .

  # Ensure person is a sports manager, soccer manager, and soccer player
  ?person rdf:type dbp:SoccerPlayer ;
          rdf:type dbp:SportsManager ;
          rdf:type dbp:SoccerManager .

  # Find birthdate of the person matching Pavel Vezhinov's death date
  ?person dbo:birthDate ?birthdate .
  ?vezhinov dbo:dateOfDeath ?deathDate .
  ?vezhinov rdfs:label ""Pavel Vezhinov""@en .
  
  FILTER (?birthdate = ?deathDate)
}
```",7,13,8,3,3,3,3,71,0,0,1,0,0.0,0
281,27,test,"Give me the awardee of the award of Alfred Warden and commander in New Guinea campaign and awardee of the award, that is a military conflict, of Lawrence Moore Cosgrave.",SELECT ?result WHERE { <http://dbpedia.org/resource/Alfred_Warden> <http://dbpedia.org/property/awards> ?v0 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. <http://dbpedia.org/resource/Lawrence_Moore_Cosgrave> <http://dbpedia.org/property/awards> ?v3 . ?result <http://dbpedia.org/property/awards> ?v3 . <http://dbpedia.org/resource/New_Guinea_campaign> <http://dbpedia.org/ontology/commander> ?result . ?result <http://dbpedia.org/property/awards> ?v0 . },"```sparql
# Query to find the awardee of the award of Alfred Warden and commander in New Guinea campaign

SELECT ?awardeeNewGuinea WHERE {
  # Find the award received by Alfred Warden
  ?warden dbo:awardReceived ?award .
  ?warden rdfs:label ""Alfred Warden""@en .

  # Find awardees related to a military campaign in New Guinea
  OPTIONAL {
    ?campaign dbo:awardee ?awardeeNewGuinea .
    ?campaign dbo:location ?newGuineaLocation .
    FILTER (regex(str(?newGuineaLocation), ""New Guinea"", ""i""))
  }

  # Link the award of Alfred Warden to the campaign awardee
  OPTIONAL {
    ?award dbo:awardee ?awardeeNewGuinea .
  }
}

# Query to find the awardee of the award related to Lawrence Moore Cosgrave

SELECT ?conflictAwardee WHERE {
  # Find the award received by Lawrence Moore Cosgrave
  ?cosgrave dbo:awardReceived ?award .
  ?cosgrave rdfs:label ""Lawrence Moore Cosgrave""@en .

  # Identify military conflict associated with this award and its awardee
  OPTIONAL {
    ?conflict dbo:awardee ?conflictAwardee .
    ?conflict dbo:relatedAward ?award .
    FILTER (regex(str(?conflict), ""military conflict"", ""i""))
  }
}
```",5,6,6,2,3,2,3,28,0,0,1,0,0.0,0
236,19,test,"Give me the party member of the administration of the reference, that is an office holder and a politician, to James Madison and party member of the administration, that is an organisation, of John Adams.","SELECT ?result WHERE { ?v4 <http://dbpedia.org/property/leader> ?v0 . ?v2 <http://dbpedia.org/property/leader> <http://dbpedia.org/resource/John_Adams> . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v0 <http://xmlns.com/foaf/0.1/name> ""James Madison""@en . ?result <http://dbpedia.org/ontology/party> ?v2 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?result <http://dbpedia.org/ontology/party> ?v4 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. }","```sparql
SELECT ?individual ?organization WHERE {
  # Find James Madison's administration members who are office holders and politicians
  ?madison dbo:presidentOf ?administration .
  ?madison rdfs:label ""James Madison""@en .
  
  OPTIONAL {
    ?member dbo:memberOf ?party .
    ?member dbo:officeHolder ?office .
    ?member rdf:type dbo:Politician .
    FILTER (regex(str(?member), ""James Madison"", ""i""))
    BIND(?member AS ?individual)
  }
  
  # Find John Adams' administration party organization
  ?adams dbo:presidentOf ?administration2 .
  ?adams rdfs:label ""John Adams""@en .

  OPTIONAL {
    ?org dbo:memberOf ?party2 .
    FILTER (regex(str(?org), ""Federalist Party"", ""i""))
    BIND(?org AS ?organization)
  }
}
```",5,8,6,3,2,3,2,20,0,0,19,0,0.0,0
826,59,test,"Give me the successor of the child, that is a royalty, of the reference, that is a royalty, to Louis I and spouse of the child of the father of Anna Magdalena Appel.","SELECT ?result WHERE { ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v0 <http://xmlns.com/foaf/0.1/name> ""Louis I""@en . ?v0 <http://dbpedia.org/ontology/child> ?v5 . ?v5 <http://dbpedia.org/ontology/successor> ?result . <http://dbpedia.org/resource/Anna_Magdalena_Appel> <http://dbpedia.org/property/father> ?v3 . ?v2 <http://dbpedia.org/ontology/spouse> ?result . ?v2 <http://dbpedia.org/property/father> ?v3 . }","```sparql
SELECT ?successor WHERE {
  # Identify Louis I and his spouse (reference)
  ?louisI rdfs:label ""Louis I of Hungary""@en .
  ?spouse dbo:spouse ?louisI .
  
  # Find the child of this spouse who is royalty
  ?child dbo:parent ?spouse .
  FILTER EXISTS { ?child rdf:type dbo:Monarch . }
  
  # Identify Anna Magdalena Appel's father
  ?annaMagdalena rdfs:label ""Anna Magdalena Bach""@en .
  ?father dbo:parent ?annaMagdalena .
  
  # Find the child of this father who is royalty
  ?royaltyChild dbo:parent ?father .
  FILTER EXISTS { ?royaltyChild rdf:type dbo:Monarch . }
  
  # Determine the successor of the royalty child from step 3
  ?child dbo:succeededBy ?successor .
}
```",6,8,7,3,2,3,3,71,0,0,1,0,0.0,0
170,26,test,Give me the entity in the work of International Energy Agency and birth place of Era Ziganshina and domain of the profession of John Scholey.,SELECT ?result WHERE { <http://dbpedia.org/resource/John_Scholey> <http://dbpedia.org/property/occupation> ?v1 . ?result <http://dbpedia.org/ontology/country> ?v2 . ?result <http://dbpedia.org/ontology/leaderTitle> ?v1 . ?v2 <http://dbpedia.org/property/author> <http://dbpedia.org/resource/International_Energy_Agency> . <http://dbpedia.org/resource/Era_Ziganshina> <http://dbpedia.org/ontology/birthPlace> ?result . },"```sparql
SELECT ?ieaEntity ?birthPlace ?professionDomain WHERE {
  # Find an entity related to the work of International Energy Agency
  ?iea dbo:wikiPageWikiLink ?ieaEntity .
  ?iea rdfs:label ""International Energy Agency""@en .

  # Find birthplace of Era Ziganshina
  ?ziganshina dbo:birthPlace ?birthPlace .
  ?ziganshina rdfs:label ""Era Ziganshina""@en .

  # Find domain of the profession of John Scholey
  ?scholey dbo:occupation ?profession .
  ?scholey rdfs:label ""John Scholey""@en .
  
  OPTIONAL {
    ?profession dbo:fieldOfStudy ?professionDomain .
  }
}
```",5,5,6,2,3,2,3,28,1,92,0,0.010752688172043012,1.0,0.021276595744680854
456,65,test,"Give me the spouse of the actor of Pacific Drive and professional in the alter ego of the reference, that is a fictional character, to Lamont Cranston (radio, film and television) and band of the band, that is a musical artist, of Dean Brody.","SELECT ?result WHERE { ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. <http://dbpedia.org/resource/Dean_Brody> <http://dbpedia.org/ontology/associatedMusicalArtist> ?v3 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/FictionalCharacter>. ?result <http://dbpedia.org/property/occupation> ?v6 . ?v0 <http://xmlns.com/foaf/0.1/name> ""Lamont Cranston (radio, film and television)""@en . ?v3 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v0 <http://dbpedia.org/property/alterEgo> ?v6 . ?v4 <http://dbpedia.org/ontology/spouse> ?result . <http://dbpedia.org/resource/Pacific_Drive> <http://dbpedia.org/property/starring> ?v4 . }","```sparql
# Find the actor of Pacific Drive
SELECT ?actor WHERE {
  ?movie dbo:starring ?actor .
  ?movie rdfs:label ""Pacific Drive""@en .
}

# Find the alter ego of Lamont Cranston
SELECT ?alterEgo WHERE {
  ?character dbo:alias ""Lamont Cranston""@en .
  ?character rdf:type dbo:FictionalCharacter .
}

# Find the band associated with Dean Brody
SELECT ?band WHERE {
  ?artist dbo:member ?band .
  ?artist rdfs:label ""Dean Brody""@en .
}

# Combine to find the spouse of the actor who is also linked to the alter ego and band member
SELECT ?spouse WHERE {
  # Actor from Pacific Drive
  ?actor dbo:starring ?movie .
  ?movie rdfs:label ""Pacific Drive""@en .

  # Spouse of the actor
  ?actor dbo:spouse ?spouse .

  # Alter ego connection (fictional character)
  ?alterEgo dbo:alias ""Lamont Cranston""@en .
  ?alterEgo rdf:type dbo:FictionalCharacter .

  # Band member connection
  ?bandMember dbo:member ?band .
  ?artist rdfs:label ""Dean Brody""@en .
  
  # Ensure the spouse is linked to both alter ego and band member roles
  FILTER (?spouse = ?alterEgo || ?spouse = ?bandMember)
}
```",7,9,8,3,3,3,3,71,0,0,1,0,0.0,0
791,63,test,"Give me the spouse of the spouse, that is a royalty, of the reference to Emperor Takakura and father of the child, that is a royalty, of Emperor Takakura and predecessor of the child of Emperor Takakura.","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/spouse> ?v3 . ?v2 <http://dbpedia.org/property/father> ?result . ?result <http://dbpedia.org/ontology/successor> ?v6 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v2 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Emperor_Takakura> . ?v6 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Emperor_Takakura> . ?v4 <http://xmlns.com/foaf/0.1/name> ""Emperor Takakura""@en . ?v3 <http://dbpedia.org/ontology/spouse> ?v4 . }","```sparql
SELECT ?finalSpouse WHERE {
  # Find Emperor Takakura and his royal spouse
  ?takakura dbo:spouse ?royalSpouse .
  ?takakura rdfs:label ""Emperor Takakura""@en .
  
  # Ensure the spouse is royalty (e.g., Imperial Princess Shushi)
  FILTER (regex(str(?royalSpouse), ""Imperial Princess Shushi"", ""i""))

  # Find child of Emperor Takakura who is royalty
  ?takakura dbo:child ?royalChild .
  
  # Ensure the child is royalty (e.g., Emperor Antoku)
  FILTER (regex(str(?royalChild), ""Emperor Antoku"", ""i""))
  
  # Find predecessor of this royal child
  ?royalChild dbo:predecessor ?predecessor .

  # Find spouse of the initial royal spouse
  ?royalSpouse dbo:spouse ?finalSpouse .
}
```",7,9,8,3,3,3,3,71,0,0,1,0,0.0,0
417,63,test,"Give me the child of the father of Frederick IX of Denmark and spouse of the parent, that is a royalty, of the child of Knud, Hereditary Prince of Denmark and child of the child, that is a royalty, of Frederick Francis III, Grand Duke of Mecklenburg-Schwerin.","SELECT ?result WHERE { <http://dbpedia.org/resource/Frederick_IX_of_Denmark> <http://dbpedia.org/property/father> ?v6 . ?result <http://dbpedia.org/property/father> ?v6 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?result <http://dbpedia.org/ontology/parent> ?v2 . ?v4 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Knud,_Hereditary_Prince_of_Denmark> . ?v2 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Frederick_Francis_III,_Grand_Duke_of_Mecklenburg-Schwerin> . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v3 <http://dbpedia.org/ontology/child> ?v4 . ?result <http://dbpedia.org/ontology/spouse> ?v3 . }","```sparql
SELECT ?child WHERE {
  # Step 1: Find father of Frederick IX of Denmark
  ?frederickIX dbo:parent ?father .
  ?frederickIX rdfs:label ""Frederick IX of Denmark""@en .

  # Step 2: Find child of this father (should include Frederick IX)
  OPTIONAL {
    ?father dbo:child ?child1 .
  }

  # Step 3: Find spouse of the parent that is royalty
  OPTIONAL {
    ?parent dbo:spouse ?royalSpouse .
    FILTER EXISTS { ?royalSpouse rdf:type dbo:Monarch }
  }

  # Step 4: Find child of Knud, Hereditary Prince of Denmark
  ?knudChild dbo:childOf ?",7,9,8,3,3,3,3,71,0,0,1,0,0.0,0
124,63,test,"Give me the commander in the war, that is a societal event and a military conflict, of the reference, that is Australian and an organisation and a military unit, to 'A' Battery, Royal Australian Artillery and military force of the war, that is an event and a military conflict and a societal event, of Frank Rhodes (British Army officer) and military force of the force, that is a societal event and a military conflict, of Herbert Kitchener, 1st Earl Kitchener.","SELECT ?result WHERE { ?v4 <http://xmlns.com/foaf/0.1/name> ""'A' Battery, Royal Australian Artillery""@en . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryUnit>. ?result <http://dbpedia.org/ontology/battle> ?v6 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?v6 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. <http://dbpedia.org/resource/Frank_Rhodes_(British_Army_officer)> <http://dbpedia.org/ontology/battle> ?v6 . ?v4 <http://dbpedia.org/ontology/battle> ?v3 . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?v3 <http://dbpedia.org/ontology/commander> ?result . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v6 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v2 <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Herbert_Kitchener,_1st_Earl_Kitchener> . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v6 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?v4 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Australia>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?result <http://dbpedia.org/ontology/battle> ?v2 . }","```sparql
SELECT ?commander WHERE {
  # Find the war involving 'A' Battery, Royal Australian Artillery
  ?battery dbo:participatedInWar ?war .
  ?battery rdfs:label ""'A' Battery, Royal Australian Artillery""@en .

  # Find the commander of this war
  ?war dbo:commander ?commander1 .

  # Find the military force associated with Frank Rhodes and its commander
  ?frankRhodes dbo:militaryForce ?force .
  ?frankRhodes rdfs:label ""Frank Rhodes (British Army officer)""@en .
  ?force dbo:commander ?commander2 .

  # Identify the military conflict involving Herbert Kitchener and find its commander
  ?kitchener dbo:militaryConflict ?conflict .
  ?kitchener rdfs:label ""Herbert Kitchener, 1st Earl Kitchener""@en .
  ?conflict dbo:commander ?commander3 .

  # Return the commanders found in these relationships
  VALUES ?commander { ?commander1 ?commander2 ?commander3 }
}
```",7,17,8,3,3,3,3,71,0,0,9,0,0.0,0
456,62,test,"Give me the band of Alan Doyle and professional in the alter ego of the reference, that is a fictional character, to Lamont Cranston (radio, film and television) and spouse of the actor of the movie, that is a work and a television show, with Ross Newton.","SELECT ?result WHERE { ?v4 <http://dbpedia.org/property/starring> <http://dbpedia.org/resource/Ross_Newton> . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?v0 <http://xmlns.com/foaf/0.1/name> ""Lamont Cranston (radio, film and television)""@en . ?result <http://dbpedia.org/property/occupation> ?v6 . ?v3 <http://dbpedia.org/ontology/spouse> ?result . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/FictionalCharacter>. ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/TelevisionShow>. <http://dbpedia.org/resource/Alan_Doyle> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v0 <http://dbpedia.org/property/alterEgo> ?v6 . ?v4 <http://dbpedia.org/property/starring> ?v3 . }","```sparql
SELECT ?band ?alterEgo ?actor WHERE {
  # Alan Doyle and his band
  ?doyle dbo:memberOfBand ?band .
  ?doyle rdfs:label ""Alan Doyle""@en .
  FILTER (regex(str(?band), ""Great Big Sea"", ""i""))

  # Lamont Cranston's alter ego
  ?cranston dbo:alterEgo ?alterEgo .
  ?cranston rdfs:label ""Lamont Cranston""@en .
  FILTER (regex(str(?alterEgo), ""The Shadow"", ""i""))

  # Ross Newton and his co-actor in a movie or TV show
  ?rossNewton dbo:actedIn ?work .
  ?rossNewton rdfs:label ""Ross Newton""@en .

  OPTIONAL {
    ?coActor dbo:actedIn ?work .
    ?coActor dbo:spouse ?rossNewton .
  }
}
```",7,10,8,3,3,3,3,71,0,0,1,0,0.0,0
417,68,test,"Give me the spouse of the parent, that is a royalty, of the child of Knud, Hereditary Prince of Denmark and child of the child, that is a royalty, of Frederick Francis III, Grand Duke of Mecklenburg-Schwerin and child of the father of the leader, that is a royalty, of Colony of Greenland.","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/spouse> ?v4 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?result <http://dbpedia.org/ontology/parent> ?v3 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?result <http://dbpedia.org/property/father> ?v7 . ?v5 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Knud,_Hereditary_Prince_of_Denmark> . ?v4 <http://dbpedia.org/ontology/child> ?v5 . <http://dbpedia.org/resource/Colony_of_Greenland> <http://dbpedia.org/property/leader> ?v0 . ?v3 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Frederick_Francis_III,_Grand_Duke_of_Mecklenburg-Schwerin> . ?v0 <http://dbpedia.org/property/father> ?v7 . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. }","```sparql
SELECT ?spouse WHERE {
  # Step 1: Find child of Knud, Hereditary Prince of Denmark
  ?knudChild dbo:parent dbr:Knud,_Hereditary_Prince_of_Denmark .
  
  # Step 2: Find child of Frederick Francis III, Grand Duke of Mecklenburg-Schwerin
  ?frederickChild dbo:parent dbr:Frederick_Francis_III,_Grand_Duke_of_Mecklenburg-Schwerin .
  
  # Step 3: From that child, find their child who is royalty
  ?grandchild dbo:parent ?frederickChild .
  FILTER (regex(str(?grandchild), ""Royal"", ""i"")) .

  # Step 4: Find the leader of Colony of Greenland and their father
  ?greenlandLeader dbo:leader dbr:Colony_of_Greenland .
  ?fatherOfGreenlandLeader dbo:parent ?greenlandLeader .

  # Step 5: Trace back to find spouse of parent (royalty) for each identified person

  OPTIONAL {
    ?knudChildParent dbo:spouse ?spouse .
    FILTER (regex(str(?knudChildParent), ""Royal"", ""i"")) .
  }

  OPTIONAL {
    ?frederickChildParent dbo:parent ?frederickChild .
    ?frederickChildParent dbo:spouse ?spouse .
    FILTER (regex(str(?frederickChildParent), ""Royal"", ""i"")) .
  }
  
  OPTIONAL {
    ?fatherOfGreenlandLeaderParent dbo:parent ?fatherOfGreenlandLeader .
    ?fatherOfGreenlandLeaderParent dbo:spouse ?spouse .
    FILTER (regex(str(?fatherOfGreenlandLeaderParent), ""Royal"", ""i"")) .
  }
}
```",8,11,9,3,3,3,3,71,0,0,1,0,0.0,0
839,65,test,"Give me the band of the person born, that is a musical artist, as Kevin Richard Russell and band of the member of the band, that is a band and a group, of Peter Schorowsky and band of the band, that is a musical artist, of Charlie Huhn.","SELECT ?result WHERE { ?v4 <http://dbpedia.org/property/birthName> ""Kevin Richard Russell""@en . ?result <http://dbpedia.org/ontology/bandMember> ?v6 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Group>. ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. <http://dbpedia.org/resource/Charlie_Huhn> <http://dbpedia.org/ontology/associatedMusicalArtist> ?v3 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?v0 <http://dbpedia.org/ontology/bandMember> ?v6 . ?result <http://dbpedia.org/ontology/bandMember> ?v3 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Band>. <http://dbpedia.org/resource/Peter_Schorowsky> <http://dbpedia.org/ontology/associatedMusicalArtist> ?v0 . ?v4 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . }","```sparql
SELECT ?bandKevin ?bandPeter ?bandCharlie WHERE {
  # Find the band of Kevin Richard Russell
  ?kevin dbo:birthName ""Kevin Richard Russell""@en .
  ?kevin dbo:band ?bandKevin .

  # Find the band/group of Peter Schorowsky ensuring it's both a band and a group
  ?peter dbo:birthName ""Peter Schorowsky""@en .
  ?peter dbo:member ?bandPeter .
  ?bandPeter rdf:type dbpedia-owl:Band .
  ?bandPeter rdf:type dbpedia-owl:Group .

  # Find the band of Charlie Huhn
  ?charlie dbo:birthName ""Charlie Huhn""@en .
  ?charlie dbo:band ?bandCharlie .
}
```",7,11,8,3,3,3,3,71,0,0,1,0,0.0,0
124,65,test,"Give me the military force of the force, that is a societal event and a military conflict, of Herbert Kitchener, 1st Earl Kitchener and commander in the war, that is a societal event and a military conflict, of A Field Battery, Royal Australian Artillery and military force of the war, that is an event and a military conflict and a societal event, of the awardee of British South Africa Company Medal.","SELECT ?result WHERE { ?v4 <http://dbpedia.org/ontology/commander> ?result . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v3 <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Herbert_Kitchener,_1st_Earl_Kitchener> . ?result <http://dbpedia.org/ontology/battle> ?v3 . ?v6 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?v6 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?v0 <http://dbpedia.org/ontology/battle> ?v6 . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?result <http://dbpedia.org/ontology/battle> ?v6 . <http://dbpedia.org/resource/A_Field_Battery,_Royal_Australian_Artillery> <http://dbpedia.org/ontology/battle> ?v4 . ?v6 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v0 <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/British_South_Africa_Company_Medal> . }","```sparql
SELECT ?kitchenerForce ?batteryForce ?awardeeForce WHERE {
  # Herbert Kitchener's military conflict that is also a societal event
  ?kitchener dbo:commanderIn ?conflict .
  ?kitchener rdfs:label ""Herbert Kitchener, 1st Earl Kitchener""@en .
  ?",7,14,8,3,3,3,3,71,0,0,9,0,0.0,0
715,58,test,"Give me the commander in the force of Francisco Largo Caballero and commander in Rif War and leader of the office, that is a government agency and an organisation, of the reference to Carlos Franco Iribarnegaray.","SELECT ?result WHERE { ?v5 <http://dbpedia.org/ontology/commander> ?result . ?v1 <http://xmlns.com/foaf/0.1/name> ""Carlos Franco Iribarnegaray""@en . <http://dbpedia.org/resource/Rif_War> <http://dbpedia.org/ontology/commander> ?result . ?v1 <http://dbpedia.org/property/office> ?v2 . ?v5 <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Francisco_Largo_Caballero> . ?v2 <http://dbpedia.org/ontology/leader> ?result . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/GovernmentAgency>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. }","```sparql
SELECT ?commanderFrancisco ?rifWarCommander ?officeLeader WHERE {
  # Francisco Largo Caballero's commander
  ?caballero dbo:position ?position .
  ?caballero rdfs:label ""Francisco Largo Caballero""@en .
  OPTIONAL { 
    ?position dbo:commander ?commanderFrancisco .
  }

  # Rif War commanders
  ?rifWar dbo:commander ?rifWarCommander .
  ?rifWar rdfs:label ""Rif War""@en .

  # Carlos Franco Iribarnegaray's office leader
  ?franco dbo:position ?officePosition .
  ?franco rdfs:label ""Carlos Franco Iribarnegaray""@en .
  OPTIONAL {
    ?officePosition dbo:leader ?officeLeader .
    FILTER (regex(str(?officePosition), ""government agency|organization"", ""i""))
  }
}
```",6,8,7,3,3,3,3,71,0,0,1,0,0.0,0
212,9,test,"Give me the birthplace of the professional, that is a musical artist and an artist, in Singer, rapper, CEO, Facilities and Project Manager and birthplace of the professional in .","SELECT ?result WHERE { ?v3 <http://dbpedia.org/ontology/birthPlace> ?result . ?v1 <http://dbpedia.org/ontology/birthPlace> ?result . ?v3 <http://dbpedia.org/property/occupation> """"@en . ?v1 <http://dbpedia.org/property/occupation> ""Singer, rapper, CEO, Facilities and Project Manager""@en . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. }","```sparql
SELECT ?birthPlace WHERE {
  ?person dbo:birthPlace ?birthPlace .
  ?person rdfs:label ""Kanye West""@en .
}
```",4,6,5,2,2,2,2,9,0,1,1,0.0,0.0,0
791,66,test,"Give me the spouse of the spouse, that is a royalty, of Emperor Takakura and predecessor of the child of Emperor Takakura and father of the child, that is a royalty, of the father, that is a royalty and an office holder, of Emperor Antoku.",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/successor> ?v6 . <http://dbpedia.org/resource/Emperor_Antoku> <http://dbpedia.org/property/father> ?v1 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v6 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Emperor_Takakura> . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v3 <http://dbpedia.org/ontology/spouse> <http://dbpedia.org/resource/Emperor_Takakura> . ?result <http://dbpedia.org/ontology/spouse> ?v3 . ?v2 <http://dbpedia.org/property/father> ?v1 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v2 <http://dbpedia.org/property/father> ?result . },"```sparql
SELECT ?spouseOfSpouse WHERE {
  # Step a: Spouse of the spouse (royalty) of Emperor Takakura
  ?takakura dbo:spouse ?spouse .
  ?takakura rdfs:label ""Emperor Takakura""@en .
  FILTER (regex(str(?spouse), ""Imperial Princess Shushi"", ""i"")) # Assuming royalty

  OPTIONAL {
    ?spouse dbo:spouse ?",7,11,8,3,3,3,3,71,0,0,1,0,0.0,0
507,69,test,"Give me the professional in the profession of the person born on 1966-02-18 and spouse of the person born as the birth name of Anne V. Coates and director of the movie, that is a movie and a work, with Beryl Reid.","SELECT ?result WHERE { ?result <http://dbpedia.org/property/occupation> ?v2 . ?v1 <http://dbpedia.org/ontology/birthDate> ""1966-02-18""^^<http://www.w3.org/2001/XMLSchema#date> . ?v1 <http://dbpedia.org/property/occupation> ?v2 . <http://dbpedia.org/resource/Anne_V._Coates> <http://dbpedia.org/property/birthName> ?v4 . ?v7 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?v7 <http://dbpedia.org/property/starring> <http://dbpedia.org/resource/Beryl_Reid> . ?v7 <http://dbpedia.org/ontology/director> ?result . ?result <http://dbpedia.org/ontology/spouse> ?v3 . ?v3 <http://dbpedia.org/property/birthName> ?v4 . ?v7 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Film>. }","```sparql
SELECT ?professional WHERE {
  # Step 1: Identify the person born on 1966-02-18
  ?person dbo:birthday ""1966-02-18""^^xsd:date .
  
  # Step 2: Determine their profession
  ?person dbo:occupation ?profession .

  # Step 3: Find Anne V. Coates' birth name
  ?anneVCoates foaf:name ""Anne V. Coates""@en ;
               foaf:birthName ?birthName .

  # Step 4: Identify the spouse of the person with Anne V. Coates' birth name
  ?spouse foaf:birthName ?birthName .
  ?spouse dbo:spouse ?anneVCoates .

  # Step 5: Find a movie directed by this spouse featuring Beryl Reid
  ?movie dbo:director ?spouse ;
         dbo:starring ?berylReid .
  ?berylReid foaf:name ""Beryl Reid""@en .

  # Step 6: Identify the professional in the same profession as step 2
  ?professional dbo:occupation ?profession .
}
```",8,10,9,3,3,3,3,71,0,0,1,0,0.0,0
417,62,test,"Give me the child of Alexandrine of Mecklenburg-Schwerin and spouse of the parent, that is a royalty, of the child of Knud, Hereditary Prince of Denmark and child of the father of the leader, that is a royalty, of Colony of Greenland.","SELECT ?result WHERE { ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. <http://dbpedia.org/resource/Colony_of_Greenland> <http://dbpedia.org/property/leader> ?v0 . ?result <http://dbpedia.org/property/father> ?v6 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?result <http://dbpedia.org/ontology/spouse> ?v3 . ?v4 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Knud,_Hereditary_Prince_of_Denmark> . ?result <http://dbpedia.org/ontology/parent> <http://dbpedia.org/resource/Alexandrine_of_Mecklenburg-Schwerin> . ?v3 <http://dbpedia.org/ontology/child> ?v4 . ?v0 <http://dbpedia.org/property/father> ?v6 . }","```sparql
SELECT ?childOfAlexandrine ?spouseOfParent ?childOfKnud WHERE {
  # Find the child of Alexandrine of Mecklenburg-Schwerin
  ?alexandrine dbo:parent ?childOfAlexandrine .
  ?alexandrine rdfs:label ""Alexandrine of Mecklenburg-Schwerin""@en .

  # Identify the spouse of the parent (father) of this child, ensuring they are royalty
  OPTIONAL {
    ?childOfAlexandrine dbo:parent ?parent .
    ?parent dbo:spouse ?spouseOfParent .
    FILTER EXISTS { ?spouseOfParent rdf:type dbo:Monarch }
  }

  # Find a child of Knud, Hereditary Prince of Denmark
  ?knud dbo:parent ?childOfKnud .
  ?knud rdfs:label ""Knud, Hereditary Prince of Denmark""@en .

  # Determine the leader of Colony of Greenland and their father
  OPTIONAL {
    ?greenlandLeader dbo:leader ?colonyGreenland .
    ?colonyGreenland rdfs:label ""Colony of Greenland""@en .
    ?greenlandLeader dbo:parent ?fatherOfLeader .
    
    # Find a child of this father, ensuring they are royalty
    ?fatherOfLeader dbo:child ?royalChild .
    FILTER EXISTS { ?royalChild rdf",7,9,8,3,3,3,3,71,0,0,1,0,0.0,0
926,59,test,Give me the father of the father of the spouse of Neşerek Kadın and successor of the child of the spouse of Şermi Kadın.,SELECT ?result WHERE { ?v4 <http://dbpedia.org/ontology/successor> ?result . ?v1 <http://dbpedia.org/property/father> ?result . ?v4 <http://dbpedia.org/property/father> ?v0 . <http://dbpedia.org/resource/Neşerek_Kadın> <http://dbpedia.org/ontology/spouse> ?v3 . ?v3 <http://dbpedia.org/property/father> ?v1 . ?v0 <http://dbpedia.org/ontology/spouse> <http://dbpedia.org/resource/Şermi_Kadın> . },"```sparql
SELECT ?finalFather WHERE {
  # Step 1: Identify Neşerek Kadın's spouse
  ?neSerekKadin dbo:spouse ?neSerekSpouse .
  ?neSerekKadin rdfs:label ""Neşerek Kadın""@en .

  # Step 2: Find the child of Şermi Kadın's spouse
  ?sermiKadin dbo:spouse ?sermiSpouse .
  ?sermiKadin rdfs:label ""Şermi Kadın""@en .
  
  ?childOfSerMi dbr:parent ?sermiSpouse .

  # Step 3: Identify the successor of the child from step 2
  ?successor dbo:succeededBy ?childOfSerMi .

  # Step 4: Find the father of Neşerek Kadın's spouse
  ?fatherOfNeSerek dbr:parent ?neSerekSpouse .
  
  # Step 5: Find the father of the father identified in step 4
  ?finalFather dbr:parent ?fatherOfNeSerek .
}
```",6,6,7,3,2,3,3,71,0,0,1,0,0.0,0
36,27,test,Give me the actor of Being Mrs Elliot and person born in the birth year of Deanne Bray and person born as the birth name of Ayo Makun.,SELECT ?result WHERE { ?result <http://dbpedia.org/property/birthName> ?v1 . <http://dbpedia.org/resource/Deanne_Bray> <http://dbpedia.org/ontology/birthYear> ?v2 . <http://dbpedia.org/resource/Being_Mrs_Elliot> <http://dbpedia.org/ontology/starring> ?result . <http://dbpedia.org/resource/Ayo_Makun> <http://dbpedia.org/property/birthName> ?v1 . ?result <http://dbpedia.org/ontology/birthYear> ?v2 . },"```sparql
SELECT ?actorOfBeingMrsElliot ?personBornInDeanneBrayBirthYear ?personWithAyoMakunBirthName WHERE {
  # Find the actor of ""Being Mrs Elliot""
  ?movie dbo:starring ?actorOfBeingMrsElliot .
  ?movie rdfs:label ""Being Mrs Elliot""@en .

  # Find Deanne Bray's birth year
  ?deanneBray dbo:birthYear ?birthYearDeanneBray .
  ?deanneBray rdfs:label ""Deanne Bray""@en .

  # Find a person born in the same year as Deanne Bray
  ?personBornInSameYear dbo:birthYear ?birthYearDeanneBray .
  
  # Find Ayo Makun's birth name
  ?ayoMakun foaf:name ?birthNameAyoMakun .
  ?ayoMakun rdfs:label ""Ayo Makun""@en .

  # Find a person with the same birth name as Ayo Makun
  ?personWithSameBirthName foaf:name ?birthNameAyoMakun .
}
```",5,5,6,2,3,2,3,28,1,5,0,0.16666666666666666,1.0,0.2857142857142857
926,60,test,"Give me the child of the father, that is a royalty, of the parent, that is a royalty, of Beyhan Sultan (daughter of Mustafa III) and father of the father of the spouse of Neşerek Kadın.",SELECT ?result WHERE { ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. <http://dbpedia.org/resource/Neşerek_Kadın> <http://dbpedia.org/ontology/spouse> ?v4 . ?v5 <http://dbpedia.org/property/father> ?v0 . <http://dbpedia.org/resource/Beyhan_Sultan_(daughter_of_Mustafa_III)> <http://dbpedia.org/ontology/parent> ?v5 . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v0 <http://dbpedia.org/ontology/child> ?result . ?v2 <http://dbpedia.org/property/father> ?result . ?v4 <http://dbpedia.org/property/father> ?v2 . },"```sparql
SELECT ?royalChild WHERE {
  # Beyhan Sultan's father is Mustafa III
  ?beyhanSultan dbo:parent ?mustafaIII .
  ?beyhanSultan rdfs:label ""Beyhan Sultan""@en .

  # Find a child of Mustafa III who is royalty
  OPTIONAL { 
    ?mustafaIII dbo:child ?royalChild .
    FILTER (regex(str(?royalChild), ""Royal"", ""i""))
  }

  # Neşerek Kadın's spouse
  ?neserekKadin dbo:spouse ?spouse .

  # Father of Neşerek Kadın’s spouse
  OPTIONAL {
    ?spouse dbo:parent ?fatherOfSpouse .
  }

  # Parent (Father) of the father of Neşerek Kadın’s spouse
  OPTIONAL {
    ?fatherOfSpouse dbo:parent ?grandfather .
  }

  # Find a child of this grandfather who is royalty
  OPTIONAL {
    ?grandfather dbo:child ?royalChild .
    FILTER (regex(str(?royalChild), ""Royal"", ""i""))
  }
}
```",6,8,7,3,2,3,3,71,0,0,1,0,0.0,0
124,56,test,"Give me the military force of Battle of Tamai and military force of the force, that is a societal event and a military conflict, of the person born on 1850-06-24 and commander in the war, that is a societal event and a military conflict, of A Field Battery, Royal Australian Artillery.","SELECT ?result WHERE { <http://dbpedia.org/resource/A_Field_Battery,_Royal_Australian_Artillery> <http://dbpedia.org/ontology/battle> ?v2 . ?result <http://dbpedia.org/ontology/battle> ?v1 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v0 <http://dbpedia.org/ontology/birthDate> ""1850-06-24""^^<http://www.w3.org/2001/XMLSchema#date> . ?v1 <http://dbpedia.org/ontology/commander> ?v0 . ?result <http://dbpedia.org/ontology/battle> <http://dbpedia.org/resource/Battle_of_Tamai> . ?v2 <http://dbpedia.org/ontology/commander> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. }","```sparql
SELECT ?battleForce ?personWarForce WHERE {
  # Find the military force of the Battle of Tamai
  ?battle dbo:participatingMilitaryUnit ?battleForce .
  ?battle rdfs:label ""Battle of Tamai""@en .

  # Identify the person born on 1850-06-24 and their war
  ?person dbo:birthday ?birthDate ;
          dbo:commanderInWar ?war .
  ?person rdfs:label ?name .
  FILTER (YEAR(?birthDate) = 1850 && MONTH(?birthDate) = 6 && DAY(?birthDate) = 24)

  # Ensure the war is both a societal event and a military conflict
  ?war rdf:type dbo:SocietalEvent ;
       rdf:type dbo:MilitaryConflict .

  # Find the military force of this person's war
  ?war dbo:participatingMilitaryUnit ?personWarForce .

  # Identify the war involving A Field Battery, Royal Australian Artillery
  ?artilleryBattery rdfs:label ""A Field Battery, Royal Australian Artillery""@en .
  ?artilleryBattle dbo:participatingMilitaryUnit ?artilleryBattery ;
                   rdf:type dbo:SocietalEvent ;
                   rdf:type dbo:MilitaryConflict .

  # Ensure the military force of this battle is the same as the person's war
  ?artilleryBattle dbo:participatingMilitaryUnit ?personWarForce .
}
```",6,10,7,3,3,3,3,71,0,0,1,0,0.0,0
874,20,test,"Give me the band of the band member of the band, that is an organisation, of Mark Read (singer) and band of the writer, that is an artist and a musical artist, of the work, that is a work, of Horace Andy.",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/bandMember> ?v5 . ?v1 <http://dbpedia.org/property/writer> <http://dbpedia.org/resource/Horace_Andy> . ?result <http://dbpedia.org/ontology/bandMember> ?v2 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?v4 <http://dbpedia.org/ontology/bandMember> <http://dbpedia.org/resource/Mark_Read_(singer)> . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?v1 <http://dbpedia.org/property/writer> ?v2 . ?v5 <http://dbpedia.org/ontology/associatedMusicalArtist> ?v4 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. },"```sparql
SELECT ?bandOfMarkRead ?bandOfWriter WHERE {
  # Part 1: Find Mark Read's band that is an organization
  ?markRead dbo:member ?band .
  ?markRead rdfs:label ""Mark Read (singer)""@en .
  ?band a dbo:Band .
  
  # Part 2: Find Horace Andy's work and its writer who is both an artist and a musical artist
  ?work dbo:lyricist ?writer .
  ?work dbo:artistHoraceAndy ?horaceAndy .
  ?horaceAndy rdfs:label ""Horace Andy""@en .
  
  # Ensure the writer is recognized as both an artist and a musical artist
  ?writer a dbo:Artist ;
          a dbo:MusicalArtist .

  # Find the band associated with this writer
  ?writer dbo:member ?bandOfWriter .
  ?bandOfWriter a dbo:Band .
  
  # Return the bands
  BIND(?band AS ?bandOfMarkRead)
}
```",6,10,7,3,2,3,2,20,0,0,1,0,0.0,0
124,60,test,"Give me the commander in the war, that is a societal event and a military conflict, of the reference, that is Australian and an organisation and a military unit, to 'A' Battery, Royal Australian Artillery and military force of the force, that is a societal event and a military conflict, of the person born on 1850-06-24.","SELECT ?result WHERE { ?v0 <http://dbpedia.org/ontology/birthDate> ""1850-06-24""^^<http://www.w3.org/2001/XMLSchema#date> . ?result <http://dbpedia.org/ontology/battle> ?v1 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?v3 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Australia>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?v1 <http://dbpedia.org/ontology/commander> ?v0 . ?v2 <http://dbpedia.org/ontology/commander> ?result . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?v3 <http://dbpedia.org/ontology/battle> ?v2 . ?v3 <http://xmlns.com/foaf/0.1/name> ""'A' Battery, Royal Australian Artillery""@en . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryUnit>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. }","```sparql
SELECT ?commander WHERE {
  # Find the person born on June 24, 1850
  ?person dbo:birthDate ""1850-06-24""^^xsd:date .
  
  # Identify military conflict or force related to this person
  ?person dbo:militaryConflict ?force .

  # Find 'A' Battery, Royal Australian Artillery as an organization and military unit
  ?battery rdfs:label ""A Battery, Royal Australian Artillery""@en ;
           a dbo:MilitaryUnit, dbo:Organisation .
  
  # Identify the commander of the war related to both the person's force and 'A' Battery
  ?force dbo:commander ?commander .
}
```",6,13,7,3,2,3,3,71,0,0,9,0,0.0,0
456,60,test,"Give me the spouse of the actor of the movie, that is a work and a television show, with Ross Newton and band of the band, that is a musical artist, of the band of Alan Doyle.",SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v2 <http://dbpedia.org/ontology/spouse> ?result . ?v0 <http://dbpedia.org/ontology/associatedMusicalArtist> ?v1 . <http://dbpedia.org/resource/Alan_Doyle> <http://dbpedia.org/ontology/associatedMusicalArtist> ?v0 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?v3 <http://dbpedia.org/property/starring> <http://dbpedia.org/resource/Ross_Newton> . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?v3 <http://dbpedia.org/property/starring> ?v2 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/TelevisionShow>. },"```sparql
SELECT ?spouse WHERE {
  # Find a work that is both a movie and TV show featuring Ross Newton
  ?work dbo:actor ?rossNewton .
  ?rossNewton rdfs:label ""Ross Newton""@en .
  ?work rdf:type ?type1 .
  ?work rdf:type ?type2 .
  FILTER (?type1 = dbpedia-owl:Film && ?type2 = dbpedia-owl:TelevisionSeries)

  # Find Alan Doyle's band
  ?alanDoyle dbo:bandMember ?greatBigSea .
  ?alanDoyle rdfs:label ""Alan Doyle""@en .
  ?greatBigSea rdfs:label ""Great Big Sea""@en .

  # Find the spouse of Ross Newton
  OPTIONAL {
    ?rossNewton dbo:spouse ?spouse .
  }

  # Check if the spouse is associated with a band as a musical artist
  OPTIONAL {
    ?spouse dbo:bandMember ?band .
    ?band rdf:type dbpedia-owl:MusicalArtist .
  }
}
```",6,9,7,3,2,3,3,71,0,0,1,0,0.0,0
917,61,test,"Give me the child of the father of the spouse, that is a royalty, of Leleiohoku I and child of the father of the child, that is a royalty, of Kamehameha III.",SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. <http://dbpedia.org/resource/Kamehameha_III> <http://dbpedia.org/ontology/child> ?v3 . ?v3 <http://dbpedia.org/property/father> ?v0 . ?result <http://dbpedia.org/ontology/parent> ?v4 . ?result <http://dbpedia.org/property/father> ?v0 . ?v1 <http://dbpedia.org/property/father> ?v4 . ?v1 <http://dbpedia.org/ontology/spouse> <http://dbpedia.org/resource/Leleiohoku_I> . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. },"```sparql
SELECT ?child WHERE {
  # Find spouse of Leleiohoku I who is royalty
  ?leleiohoku dbo:spouse ?spouse .
  ?leleiohoku rdfs:label ""Leleiohoku I""@en .
  
  # Ensure the spouse is recognized as royalty
  FILTER (regex(str(?spouse), ""royalty"", ""i""))

  # Find father of this royal spouse
  ?spouse dbo:parent ?father .

  # Determine child of this father
  ?father dbo:child ?child1 .

  # Find a child of Kamehameha III who is royalty
  ?kamehameha dbo:child ?royalChild .
  ?kamehameha rdfs:label ""Kamehameha III""@en .
  
  # Ensure the child is recognized as royalty
  FILTER (regex(str(?royalChild), ""royalty"", ""i""))

  # Find father of this royal child
  ?royalChild dbo:parent ?father2 .

  # Determine child of this father
  ?father2 dbo:child ?child2 .

  # Return the common child if any
  FILTER (?child1 = ?child2)
}
```",6,8,7,3,2,3,3,71,0,0,3,0,0.0,0
417,65,test,"Give me the child of the father of the leader, that is a royalty, of Colony of Greenland and child of the child, that is a royalty, of Frederick Francis III, Grand Duke of Mecklenburg-Schwerin and spouse of the parent, that is a royalty, of Count Ingolf of Rosenborg.","SELECT ?result WHERE { ?v4 <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Count_Ingolf_of_Rosenborg> . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?result <http://dbpedia.org/ontology/parent> ?v3 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v3 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Frederick_Francis_III,_Grand_Duke_of_Mecklenburg-Schwerin> . <http://dbpedia.org/resource/Colony_of_Greenland> <http://dbpedia.org/property/leader> ?v0 . ?v0 <http://dbpedia.org/property/father> ?v6 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?result <http://dbpedia.org/ontology/spouse> ?v4 . ?result <http://dbpedia.org/property/father> ?v6 . }","```sparql
SELECT ?child WHERE {
  # Leader of Colony of Greenland and their father who is royalty
  ?leader rdfs:label ""Leader of Colony of Greenland""@en .
  ?father dbo:parent ?leader .
  FILTER (regex(str(?father), ""royalty"", ""i""))

  # Child of the father identified above
  ?child1 dbo:parent ?father .

  # Frederick Francis III and his child who is royalty, then that child's child
  ?frederick rdfs:label ""Frederick Francis III, Grand Duke of Mecklenburg-Schwerin""@en .
  ?royalChild dbo:parent ?frederick .
  FILTER (regex(str(?royalChild), ""royalty"", ""i""))
  
  # Child of the royal child
  ?grandchild dbo:parent ?royalChild .

  # Parent of Count Ingolf of Rosenborg who is royalty and their spouse
  ?count rdfs:label ""Count Ingolf of Rosenborg""@en .
  ?parent dbo:parent ?count .
  FILTER (regex(str(?parent), ""royalty"", ""i""))
  
  ?spouse dbo:spouse ?parent .

  # Find the intersection of these relationships
  FILTER (?child1 = ?grandchild)
}
```",7,10,8,3,3,3,3,71,0,0,1,0,0.0,0
47,58,test,"Give me the office of the awardee of the entity, that is an award, in India and office of Suvendu Adhikari and office of the awardee of Banga Bhushan.",SELECT ?result WHERE { ?v5 <http://dbpedia.org/property/office> ?result . <http://dbpedia.org/resource/Suvendu_Adhikari> <http://dbpedia.org/property/office> ?result . ?v5 <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/Banga_Bhushan> . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Award>. ?v2 <http://dbpedia.org/property/awards> ?v1 . ?v1 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/India> . ?v2 <http://dbpedia.org/property/office> ?result . },"```sparql
SELECT ?awardOffice ?suvenduOffice ?bangaBhushanOffice WHERE {
  # Find an award given in India and its awardee's office
  OPTIONAL {
    ?award dbo:country dbr:India .
    ?award dbo:recipient ?awardee .
    ?awardee dbo:office ?awardOffice .
  }

  # Find Suvendu Adhikari's office
  OPTIONAL {
    ?suvendu foaf:name ""Suvendu Adhikari""@en .
    ?suvendu dbo:office ?suvenduOffice .
  }

  # Find the awardee of Banga Bhushan and their office
  OPTIONAL {
    ?bangaBhushanAward dbo:country dbr:India ;
                      rdfs:label ""Banga Bhushan""@en .
    ?bangaBhushanAward dbo:recipient ?bangaAwardee .
    ?bangaAwardee dbo:office ?bangaBhushanOffice .
  }
}
```",6,7,7,3,3,3,3,71,0,0,1,0,0.0,0
170,24,test,Give me the birth place of the awardee of People's Artist of Russia and domain of the profession of John Scholey.,SELECT ?result WHERE { ?v2 <http://dbpedia.org/ontology/birthPlace> ?result . <http://dbpedia.org/resource/John_Scholey> <http://dbpedia.org/property/occupation> ?v0 . ?v2 <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/People's_Artist_of_Russia> . ?result <http://dbpedia.org/ontology/leaderTitle> ?v0 . },"```sparql
SELECT ?birthPlace ?professionDomain WHERE {
  # Find an awardee of People's Artist of Russia and their birthplace
  ?person dbo:title ""People's Artist of Russia"" .
  ?person dbo:birthPlace ?birthPlace .

  # Find John Scholey and his domain of profession
  ?scholey rdfs:label ""John Scholey""@en .
  ?scholey dbo:field ?professionDomain .
}
```",4,4,5,2,2,2,3,28,0,0,3,0,0.0,0
465,69,test,"Give me the spouse of the child, that is a royalty, of Ferdinand I, Holy Roman Emperor and successor of the child, that is a royalty, of the parent of Charles Orlando, Dauphin of France and successor of the child of the parent of Ercole II d'Este, Duke of Ferrara.","SELECT ?result WHERE { ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?result <http://dbpedia.org/ontology/spouse> ?v7 . ?v2 <http://dbpedia.org/ontology/successor> ?result . ?v3 <http://dbpedia.org/property/father> ?v4 . ?v1 <http://dbpedia.org/ontology/child> ?v2 . <http://dbpedia.org/resource/Ercole_II_d'Este,_Duke_of_Ferrara> <http://dbpedia.org/ontology/parent> ?v4 . <http://dbpedia.org/resource/Ferdinand_I,_Holy_Roman_Emperor> <http://dbpedia.org/ontology/child> ?v7 . ?v3 <http://dbpedia.org/ontology/successor> ?result . ?v7 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. <http://dbpedia.org/resource/Charles_Orlando,_Dauphin_of_France> <http://dbpedia.org/ontology/parent> ?v1 . }","```sparql
SELECT ?spouse WHERE {
  # Step 1: Identify a royalty child of Ferdinand I
  ?ferdinandChild dbo:parent ?ferdinandI .
  ?ferdinandI rdfs:label ""Ferdinand I, Holy Roman Emperor""@en .
  ?ferdinandChild rdf:type dbo:Monarch .

  # Step 2: Find successor of Ferdinand I's royal child
  OPTIONAL {
    ?successorOfFerdinandChild dbo:predecessor ?ferdinandChild .
  }

  # Step 3: Identify Charles Orlando's parent and their royalty child
  ?charlesOrlandoParent dbo:child ?charlesOrlando .
  ?charlesOrlando rdfs:label ""Charles Orlando, Dauphin of France""@en .
  OPTIONAL {
    ?royaltyChildOfParent dbo:parent ?charlesOrlandoParent .
    ?royaltyChildOfParent rdf:type dbo:Monarch .
  }

  # Step 4: Find successor of Charles Orlando's royal parent's child
  OPTIONAL {
    ?successorOfRoyaltyChild dbo:predecessor ?royaltyChildOfParent .
  }

  # Step 5: Identify Ercole II d'Este's parent and their royalty child
  ?ercoleIIparent dbo:child ?ercoleIIDuca .
  ?ercoleIIDuca rdfs:label ""Ercole II d'Este, Duke of Ferrara""@en .
  OPTIONAL {
    ?royaltyChildOfErcoleParent dbo:parent ?ercoleIIparent .
    ?royaltyChildOfErcoleParent rdf:type dbo:Monarch .
  }

  # Step 6: Find successor of Ercole II d'Este's royal parent's child
  OPTIONAL {
    ?successorOfRoyaltyChildErcole dbo:predecessor ?royaltyChildOfErcoleParent .
  }

  # Step 7: Determine spouse of Ferdinand I's royalty child
  ?ferdinandChild dbo:spouse ?spouse .
}
```",8,10,9,3,3,3,3,71,0,0,1,0,0.0,0
791,69,test,"Give me the predecessor of the child of Emperor Takakura and father of the child, that is a royalty, of the father, that is a royalty and an office holder, of Emperor Antoku and spouse of the spouse, that is a royalty, of the reference to Emperor Takakura.","SELECT ?result WHERE { ?v2 <http://dbpedia.org/property/father> ?v1 . <http://dbpedia.org/resource/Emperor_Antoku> <http://dbpedia.org/property/father> ?v1 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?result <http://dbpedia.org/ontology/successor> ?v7 . ?v7 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Emperor_Takakura> . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v2 <http://dbpedia.org/property/father> ?result . ?v4 <http://xmlns.com/foaf/0.1/name> ""Emperor Takakura""@en . ?result <http://dbpedia.org/ontology/spouse> ?v3 . ?v3 <http://dbpedia.org/ontology/spouse> ?v4 . }","```sparql
SELECT ?predecessor WHERE {
  # Step a: Child of Emperor Takakura
  ?child dbo:parent ?takakura .
  ?takakura rdfs:label ""Emperor Takakura""@en .

  # Step b: Predecessor of this child
  ?predecessor dbo:successor ?child .

  # Step c: Father of the child, that is royalty
  OPTIONAL {
    ?father dbo:parent ?child .
    FILTER (regex(str(?father), ""Emperor"", ""i"") || regex(str(?father), ""Imperial"", ""i""))
  }

  # Step d: Father of the father (that is royalty and an office holder) of Emperor Antoku
  OPTIONAL {
    ?antokuFather dbo:parent ?antoku .
    ?antoku rdfs:label ""Emperor Antoku""@en",8,12,9,3,3,3,3,71,0,0,1,0,0.0,0
453,8,test,"Give me the religion of the author, that is a cardinal and a cleric, of Apologia Pro Vita Sua and religion of Newfoundland Colony.",SELECT ?result WHERE { ?v0 <http://dbpedia.org/ontology/religion> ?result . <http://dbpedia.org/resource/Apologia_Pro_Vita_Sua> <http://dbpedia.org/property/author> ?v0 . <http://dbpedia.org/resource/Newfoundland_Colony> <http://dbpedia.org/ontology/religion> ?result . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Cardinal>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Cleric>. },"```sparql
SELECT ?newmanReligion ?newfoundlandReligion WHERE {
  # Find the religion of John Henry Newman, who is a cardinal and cleric
  ?newman dbo:profession ""Cleric""@en .
  ?newman dbo:profession ""Cardinal""@en .
  ?newman rdfs:label ""John Henry Newman""@en .
  ?newman dbo:religion ?newmanReligion .

  # Find the religion of Newfoundland Colony
  ?newfoundland rdfs:label ""Newfoundland Colony""@en .
  ?newfoundland dbo:religion ?newfoundlandReligion .
}
```",3,5,4,2,2,2,2,9,0,0,1,0,0.0,0
965,71,test,"Give me the parent of the person born, that is a noble, as the birth name of George Mountbatten, 2nd Marquess of Milford Haven and spouse of the spouse of the parent of Louise Mountbatten and parent of the child, that is a royalty, of the person born, that is a politician, on 1854-05-24.","SELECT ?result WHERE { <http://dbpedia.org/resource/George_Mountbatten,_2nd_Marquess_of_Milford_Haven> <http://dbpedia.org/property/birthName> ?v7 . <http://dbpedia.org/resource/Louise_Mountbatten> <http://dbpedia.org/ontology/parent> ?v1 . ?v1 <http://dbpedia.org/ontology/spouse> ?v2 . ?v8 <http://dbpedia.org/property/birthName> ?v7 . ?v8 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Noble>. ?result <http://dbpedia.org/ontology/spouse> ?v2 . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v5 <http://dbpedia.org/ontology/parent> ?result . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v5 <http://dbpedia.org/property/father> ?v4 . ?v4 <http://dbpedia.org/ontology/birthDate> ""1854-05-24""^^<http://www.w3.org/2001/XMLSchema#date> . ?v8 <http://dbpedia.org/ontology/parent> ?result . }","```sparql
SELECT ?parent ?spouseOfParent ?royalChild WHERE {
  # Find George Mountbatten, 2nd Marquess of Milford Haven
  ?george dbo:birthDate ""1854-05-24""^^xsd:date ;
          rdfs:label ""George Mountbatten, 2nd Marquess of Milford Haven""@en .
  
  # Find his parent who is a noble
  ?george dbo:parent ?parent .
  ?parent dbo:noble True .

  # Find the spouse of this parent
  ?parent dbo:spouse ?spouseOfParent .

  # Find Louise Mountbatten and her parent
  ?louise rdfs:label ""Louise Mountbatten""@en ;
          dbo:parent ?parentOfLouise .
  
  # Ensure the spouse is related to Louise's parent
  FILTER (?spouseOfParent = ?parentOfLouise)

  # Find a child of this spouse who is royalty
  ?spouseOfParent dbo:child ?royalChild .
  ?royalChild dbo:royalty True .
}
```",9,12,10,3,3,3,3,71,0,0,2,0,0.0,0
281,26,test,"Give me the awardee of the award of Alfred Warden and commander in the war, that is an event and a military conflict, of Roy Boehm and awardee of Medal bar.",SELECT ?result WHERE { ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?result <http://dbpedia.org/property/awards> ?v1 . <http://dbpedia.org/resource/Alfred_Warden> <http://dbpedia.org/property/awards> ?v1 . ?v2 <http://dbpedia.org/ontology/commander> ?result . <http://dbpedia.org/resource/Roy_Boehm> <http://dbpedia.org/ontology/battle> ?v2 . ?result <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/Medal_bar> . },"```sparql
SELECT ?awardee WHERE {
  # Find the award of Alfred Warden
  ?warden dbo:award ?award .
  ?warden rdfs:label ""Alfred Warden""@en .

  # Find Roy Boehm's war as an event and military conflict
  ?boehm dbo:commander ?war .
  ?boehm rdfs:label ""Roy Boehm""@en .
  ?war rdf:type dbo:Event ;
       rdf:type dbo:MilitaryConflict .

  # Find the awardee of the same award who also has a Medal bar
  ?awardee dbo:award ?award .
  ?awardee dbo:hasMedalBar ?medalBar .
}
```",5,7,6,2,3,2,3,28,0,0,1,0,0.0,0
933,57,test,"Give me the band of the band, that is a group and a band and an organisation, of Alan Warner (musician) and reference to the birth name of the professional in Musician and band of Mike Elliott (saxophonist).",SELECT ?result WHERE { <http://dbpedia.org/resource/Mike_Elliott_(saxophonist)> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Band>. ?v1 <http://dbpedia.org/property/occupation> <http://dbpedia.org/resource/Musician> . ?v0 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v1 <http://dbpedia.org/property/birthName> ?v4 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. <http://dbpedia.org/resource/Alan_Warner_(musician)> <http://dbpedia.org/ontology/associatedMusicalArtist> ?v0 . ?result <http://xmlns.com/foaf/0.1/name> ?v4 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Group>. },"```sparql
SELECT ?alanWarnerBand ?mikeElliottBirthName ?mikeElliottBand WHERE {
  # Find Alan Warner's band that is a group, band, and organization
  ?alanWarner dbo:musicalArtist ?band .
  ?band rdf:type dbo:MusicalGroup ;
        rdf:type dbo:Band ;
        rdf:type dbo:Organization .
  ?alanWarner rdfs:label ""Alan Warner (musician)""@en .

  # Find Mike Elliott's birth name
  ?mikeElliott dbo:birthName ?mikeElliottBirthName .
  ?mikeElliott rdfs:label ""Mike Elliott (saxophonist)""@en .

  # Find the band associated with Mike Elliott
  ?mikeElliott dbo:musicalArtist ?mikeElliottBand .
}
```",6,9,7,3,3,3,3,71,0,0,1,0,0.0,0
417,57,test,"Give me the child of the child, that is a royalty, of Frederick Francis III, Grand Duke of Mecklenburg-Schwerin and spouse of Princess Caroline-Mathilde of Denmark and child of the father of the leader, that is a royalty, of Colony of Greenland.","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/parent> ?v3 . ?v3 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Frederick_Francis_III,_Grand_Duke_of_Mecklenburg-Schwerin> . ?result <http://dbpedia.org/ontology/spouse> <http://dbpedia.org/resource/Princess_Caroline-Mathilde_of_Denmark> . <http://dbpedia.org/resource/Colony_of_Greenland> <http://dbpedia.org/property/leader> ?v0 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?result <http://dbpedia.org/property/father> ?v5 . ?v0 <http://dbpedia.org/property/father> ?v5 . }","```sparql
SELECT ?childOfChild WHERE {
  # Frederick Francis III and his spouse
  ?frederick dbp:spouse ?princess .
  ?frederick rdfs:label ""Frederick Francis III, Grand Duke of Mecklenburg-Schwerin""@en .
  ?princess rdfs:label ""Princess Caroline-Mathilde of Denmark""@en .

  # Child of Frederick and Princess who is royalty
  ?child dbp:parent ?frederick ;
         dbp:parent ?princess .
  FILTER (regex(str(?child), ""royalty"", ""i""))

  # Leader of the Colony of Greenland
  ?greenlandLeader dbo:country ?colonyOfGreenland .
  ?colonyOfGreenland rdfs:label ""Colony of Greenland""@en .
  FILTER (regex(str(?greenlandLeader), ""royalty"", ""i""))

  # Father of the leader of the Colony of Greenland
  ?leaderFather dbp:child ?greenlandLeader .

  # Child of this father
  ?childOfChild dbp:parent ?leaderFather .
}
```",6,8,7,3,3,3,3,71,0,0,1,0,0.0,0
933,68,test,"Give me the band of the band, that is a group and a band and an organisation, of Alan Warner (musician) and band of the band of the band, that is an artist and a musical artist, of The Ramong Sound and reference to the birth name of the professional in Musician.",SELECT ?result WHERE { ?v1 <http://dbpedia.org/property/birthName> ?v6 . <http://dbpedia.org/resource/The_Ramong_Sound> <http://dbpedia.org/ontology/associatedMusicalArtist> ?v4 . ?v0 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Band>. ?v2 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?result <http://xmlns.com/foaf/0.1/name> ?v6 . ?v1 <http://dbpedia.org/property/occupation> <http://dbpedia.org/resource/Musician> . <http://dbpedia.org/resource/Alan_Warner_(musician)> <http://dbpedia.org/ontology/associatedMusicalArtist> ?v0 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Group>. ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?v4 <http://dbpedia.org/ontology/associatedMusicalArtist> ?v2 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. },"```sparql
SELECT ?bandOfBand, ?birthName WHERE {
  # Step 1: Find Alan Warner's band that is a group, band, and organisation
  ?alanWarner dbo:associatedBand ?warnerBand .
  ?alanWarner rdfs:label ""Alan Warner (musician)""@en .
  
  ?warnerBand rdf:type dbp:MusicalGroup ;
              rdf:type dbp:Band ;
              rdf:type foaf:Organization .

  # Step 2: Find the band of The Ramones Sound
  ?ramonesSound dbo:associatedArtist ?ramonesBand .
  ?ramonesSound rdfs:label ""The Ramones Sound""@en .
  
  ?ramonesBand rdf:type dbp:MusicalArtist ;
               rdf:type dbp:Singer .

  # Step 3: Find the band of the band
  OPTIONAL {
    ?warnerBand dbo:associatedBand ?bandOfBand .
  }
  
  OPTIONAL {
    ?ramonesBand dbo:associatedBand ?bandOfBand .
  }

  # Step 4: Retrieve Alan Warner's birth name
  ?alanWarner foaf:name ?birthName .

}
```",8,13,9,3,3,3,3,71,0,0,1,0,0.0,0
456,64,test,"Give me the band of the band, that is a musical artist, of the band of Alan Doyle and spouse of the actor of the movie, that is a work and a television show, with Ross Newton and professional in .","SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v0 <http://dbpedia.org/ontology/associatedMusicalArtist> ?v1 . ?v2 <http://dbpedia.org/ontology/spouse> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?v3 <http://dbpedia.org/property/starring> ?v2 . ?v3 <http://dbpedia.org/property/starring> <http://dbpedia.org/resource/Ross_Newton> . <http://dbpedia.org/resource/Alan_Doyle> <http://dbpedia.org/ontology/associatedMusicalArtist> ?v0 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?result <http://dbpedia.org/property/occupation> """"@en . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/TelevisionShow>. }","```sparql
SELECT ?finalBand WHERE {
  # Step 1: Find Alan Doyle's band
  ?doyle dbo:memberOf ?alanDooleysBand .
  ?doyle rdfs:label ""Alan Doyle""@en .

  # Step 2: Identify a movie/TV show with Ross Newton and another actor
  ?work dbo:actor ?rossNewton .
  ?work dbo:actor ?coActor .
  ?rossNewton rdfs:label ""Ross Newton""@en .

  # Step 3: Find the spouse of this co-actor
  ?coActor dbo:spouse ?spouse .

  # Step 4: Check if the spouse is a musical artist and find their band
  OPTIONAL {
    ?spouse dbo:band ?musicalArtistBand .
  }

  # Step 5: If the spouse is a musical artist, find the band of that band's member
  OPTIONAL {
    ?musicalArtistBand dbo:memberOf ?finalBand .
  }
}
```",7,10,8,3,3,3,3,71,0,0,1,0,0.0,0
329,24,test,"Give me the entity in the region, that is a country, of Western European Time and entity in the birthplace, that is an organisation and a country, of Robert Bates (loyalist).",SELECT ?result WHERE { <http://dbpedia.org/resource/Robert_Bates_(loyalist)> <http://dbpedia.org/ontology/birthPlace> ?v0 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. ?result <http://dbpedia.org/ontology/country> ?v0 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?result <http://dbpedia.org/ontology/country> ?v2 . ?v2 <http://dbpedia.org/property/timeZone> <http://dbpedia.org/resource/Western_European_Time> . },"```sparql
SELECT ?country WHERE {
  # Find a country in the region of Western European Time
  ?region dbo:wikiPageRedirects dbpedia:Western_European_Time .
  ?country dbo:location ?region .
  ?country rdf:type dbo:Country .

  UNION

  # Find an organization and country that is the birthplace of Robert Bates (loyalist)
  ?bates dbo:birthPlace ?birthPlace .
  ?bates rdfs:label ""Robert Bates (loyalist)""@en .
  ?birthPlace rdf:type dbo:Organisation ;
              rdf:type dbo:Country .
}
```",4,7,5,2,2,2,3,28,0,0,531,0,0.0,0
456,71,test,"Give me the spouse of the actor of the movie, that is a work and a television show, with Ross Newton and band of the band, that is a musical artist, of the band of Alan Doyle and professional in the alter ego of the reference, that is a fictional character, to Lamont Cranston (radio, film and television).","SELECT ?result WHERE { ?v4 <http://xmlns.com/foaf/0.1/name> ""Lamont Cranston (radio, film and television)""@en . ?v8 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?v2 <http://dbpedia.org/ontology/spouse> ?result . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/FictionalCharacter>. ?v4 <http://dbpedia.org/property/alterEgo> ?v5 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/TelevisionShow>. <http://dbpedia.org/resource/Alan_Doyle> <http://dbpedia.org/ontology/associatedMusicalArtist> ?v7 . ?result <http://dbpedia.org/property/occupation> ?v5 . ?v7 <http://dbpedia.org/ontology/associatedMusicalArtist> ?v8 . ?v1 <http://dbpedia.org/property/starring> ?v2 . ?v1 <http://dbpedia.org/property/starring> <http://dbpedia.org/resource/Ross_Newton> . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?v8 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . }","```sparql
SELECT ?spouse WHERE {
  # Ross Newton's works that are both movies and TV shows
  ?work dbo:starringRossNewton true .
  ?work rdf:type dbo:Film .
  ?work rdf:type dbo:TelevisionShow .

  # Great Big Sea as the band associated with Alan Doyle
  ?band rdfs:label ""Great Big Sea""@en .
  ?band dbo:memberAlanDoyle true .

  # The Shadow (Lamont Cranston) connection
  ?character rdfs:label ""The Shadow""@en .
  ?character dbo:alterEgoOfLamontCranston true .

  # Find the actor in the work and their spouse
  ?actor dbo:actedIn ?work .
  ?actor dbo:spouse ?spouse .
}
```",9,13,10,3,3,3,3,71,0,0,1,0,0.0,0
326,8,test,"Give me the person decedent at Rancho Mirage, California and professional in the profession of Susanne Lewis.","SELECT ?result WHERE { <http://dbpedia.org/resource/Susanne_Lewis> <http://dbpedia.org/property/occupation> ?v1 . ?result <http://dbpedia.org/ontology/deathPlace> <http://dbpedia.org/resource/Rancho_Mirage,_California> . ?result <http://dbpedia.org/property/occupation> ?v1 . }","```sparql
SELECT ?personDecedent ?profession WHERE {
  # Find person decedent at Rancho Mirage, California
  ?personDecedent dbo:deathPlace ?place .
  ?place rdfs:label ""Rancho Mirage, California""@en .

  # Get the profession of Susanne Lewis
  ?susanneLewis dbo:profession ?profession .
  ?susanneLewis rdfs:label ""Susanne Lewis""@en .

  # Find another person with the same profession as Susanne Lewis
  ?otherPerson dbo:profession ?sameProfession .
  FILTER (?sameProfession = ?profession)
}
```",3,3,4,2,2,2,2,9,0,0,1,0,0.0,0
645,71,test,"Give me the military force of the force, that is an event and a military conflict and a societal event, of the native, that is a president and a politician, of Restoration (Spain) and commander in the force of the commander in Siege of Madrid and leader of the office, that is a government agency and an organisation, of the native of Restoration (Spain).",SELECT ?result WHERE { ?v8 <http://dbpedia.org/ontology/leader> ?result . ?v7 <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Restoration_(Spain)> . ?v7 <http://dbpedia.org/property/office> ?v8 . ?v8 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?v8 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/GovernmentAgency>. ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/President>. <http://dbpedia.org/resource/Siege_of_Madrid> <http://dbpedia.org/ontology/commander> ?v1 . ?result <http://dbpedia.org/ontology/battle> ?v5 . ?v2 <http://dbpedia.org/ontology/commander> ?result . ?v5 <http://dbpedia.org/ontology/commander> ?v4 . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v2 <http://dbpedia.org/ontology/commander> ?v1 . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?v4 <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Restoration_(Spain)> . },"```sparql
SELECT ?militaryForce WHERE {
  # Step 1: Identify the president and politician from Restoration (Spain)
  ?native dbo:nationality dbr:Spain ;
          dbo:occupation dbr:President_of_Spain ;
          dbo:occupation dbr:Politician .
  
  # Step 2: Find the military force associated with an event that is both a military conflict and a societal event
  ?event dbo:type dbr:Military_conflict ;
         dbo:type dbr:Societal_event .
  ?militaryForce dbo:participatesIn ?event .

  # Step 3: Identify the commander in the Siege of Madrid
  ?commander dbo:commanded ?siegeOfMadrid .
  ?siegeOfMadrid rdfs:label ""Siege of Madrid""@en .
  
  # Step 4: Find the leader of a government agency or organization related to the native
  ?office dbo:type dbr:Government_agency ;
          dbo:type dbr:Organization .
  ?leader dbo:headOf ?office .
  ?native dbo:memberOf ?office .

  # Linking all parts together
  ?commander rdfs:label ?nativeLabel .
}
```",9,16,10,3,3,3,3,71,0,0,2,0,0.0,0
465,65,test,"Give me the successor of the child, that is a royalty, of Anne of Brittany and successor of the child of Alfonso I d'Este and spouse of the child, that is a royalty, of the parent of Elizabeth of Austria (1526–1545).",SELECT ?result WHERE { ?v4 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Alfonso_I_d'Este> . ?v4 <http://dbpedia.org/ontology/successor> ?result . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v0 <http://dbpedia.org/ontology/child> ?v6 . ?v6 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. <http://dbpedia.org/resource/Anne_of_Brittany> <http://dbpedia.org/ontology/child> ?v3 . ?v0 <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Elizabeth_of_Austria_(1526–1545)> . ?result <http://dbpedia.org/ontology/spouse> ?v6 . ?v3 <http://dbpedia.org/ontology/successor> ?result . },"```sparql
SELECT ?successor WHERE {
  # Step a: Child of Anne of Brittany who is royalty
  ?anneChild dbo:parent dbc:Anne_of_Brittany .
  FILTER EXISTS { ?anneChild rdf:type dbo:Monarch . }

  # Step b: Successor of this royal child
  OPTIONAL {
    ?anneChild dbo:successor ?successor1 .
  }

  # Step c: Child of Alfonso I d'Este and spouse of a royal child (child of Elizabeth's parent)
  ?alfonsoChild dbo:parent dbc:Alfonso_I_d%27Este .
  ?alfonsoChild dbo:spouse ?royalSpouse .

  # Identify the parent of Elizabeth of Austria
  ?elizabethParent dbo:parent dbc:Elizabeth_of_Austria_1526-1545 .
  
  # Ensure the spouse is a child of Elizabeth's parent and royalty
  FILTER EXISTS { 
    ?royalSpouse dbo:parent ?elizabethParent .
    ?royalSpouse rdf:type dbo:Monarch .
  }

  # Step d: Successor of this child from step c
  OPTIONAL {
    ?alfonsoChild dbo:successor ?successor2 .
  }
  
  # Find the common successor
  FILTER (?successor1 = ?successor2)
  BIND(?successor1 AS ?successor)
}
```",7,9,8,3,3,3,3,71,0,0,1,0,0.0,0
130,18,test,"Give me the figure known as the film, that is a soccer club and an organisation, of the native, that is a coach and a college coach, of Madison, Alabama and entity in the administration, that is American, of .","SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/CollegeCoach>. ?v1 <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Madison,_Alabama> . ?v3 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/United_States>. ?result <http://dbpedia.org/ontology/state> ?v3 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Coach>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?result <http://dbpedia.org/property/nickname> ?v2 . ?v2 <http://dbpedia.org/ontology/director> ?v1 . ?v3 <http://dbpedia.org/property/governor> """"@en . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerClub>. }","```sparql
SELECT ?person ?film WHERE {
  # Find a person from Madison, Alabama who is both a soccer coach and a college coach
  ?person dbo:birthPlace dbr:Madison,_Alabama ;
          dbo:occupation dbc:Soccer_coaches ;
          dbo:occupation dbc:College_sports_coaches .
  
  # Identify an American figure in administration related to this person
  OPTIONAL {
    ?adminPerson dbo:nationality dbr:United_States ;
                 dbo:worksFor ?person .
  }
  
  # Find a film associated with a soccer club or organization linked to the person
  OPTIONAL {
    ?organization dbo:relatedTo ?person ;
                  rdf:type dbo:Soccer_club ;
                  dbo:film ?film .
  }
}
```",5,10,6,3,2,3,2,20,0,0,1,0,0.0,0
839,62,test,"Give me the band of Matthias Röhr and band of the person born, that is a musical artist, as the persona of Kevin Russell (musician) and band of the member of the band, that is a band and a group, of Peter Schorowsky.",SELECT ?result WHERE { ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Group>. ?result <http://dbpedia.org/ontology/bandMember> <http://dbpedia.org/resource/Matthias_Röhr> . ?v0 <http://dbpedia.org/ontology/bandMember> ?v6 . ?v3 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v3 <http://dbpedia.org/property/birthName> ?v4 . <http://dbpedia.org/resource/Kevin_Russell_(musician)> <http://xmlns.com/foaf/0.1/givenName> ?v4 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Band>. <http://dbpedia.org/resource/Peter_Schorowsky> <http://dbpedia.org/ontology/associatedMusicalArtist> ?v0 . ?result <http://dbpedia.org/ontology/bandMember> ?v6 . },"```sparql
SELECT ?bandOfMatthias ?bandOfKevinRussellPersona ?bandOfPeterSchorowskyMember WHERE {
  # Find the band of Matthias Röhr
  ?matthiasRohr foaf:person :Matthias_Röhr .
  ?matthiasRohr dbo:band ?bandOfMatthias .

  # Find a person born who is a musical artist under Kevin Russell's persona and their band
  ?kevinRussell foaf:person :Kevin_Russell_Musician .
  ?kevinRussell dbo:birthPlace ?bornPerson .
  ?bornPerson dbo:musicalArtist true .
  ?bornPerson dbo:band ?bandOfKevinRussellPersona .

  # Find a member of a band that is both a band and a group associated with Peter Schorowsky
  ?peterSchorowsky foaf:person :Peter_Schorowsky .
  ?peterSchorowsky dbo:member ?memberBand .
  ?memberBand rdf:type dbo:Band ;
              rdf:type dbo:Group .

  # Find the band of this member
  ?memberBand dbo:band ?bandOfPeterSchorowskyMember .
}
```",7,10,8,3,3,3,3,71,0,0,1,0,0.0,0
216,26,test,Give me the party of Campbell Newman and office of the mayor of Ros Bates and administration of the designer of Woolfe: The Red Hood Diaries.,SELECT ?result WHERE { <http://dbpedia.org/resource/Ros_Bates> <http://dbpedia.org/property/leader> ?v2 . <http://dbpedia.org/resource/Campbell_Newman> <http://dbpedia.org/ontology/party> ?result . ?result <http://dbpedia.org/property/leader> ?v1 . ?v2 <http://dbpedia.org/property/office> ?result . <http://dbpedia.org/resource/Woolfe:_The_Red_Hood_Diaries> <http://dbpedia.org/property/designer> ?v1 . },"```sparql
# Query for Campbell Newman's political party
SELECT ?party WHERE {
  ?newman rdfs:label ""Campbell Newman""@en .
  ?newman dbo:party ?party .
}

# Query for Ros Bates' office as mayor
SELECT ?office WHERE {
  ?bates rdfs:label ""Ros Bates""@en .
  ?bates dbo:office ?office .
}

# Query for the designer of Woolfe: The Red Hood Diaries and their administration
SELECT ?administration WHERE {
  ?designer dbo:worksFor ?game .
  ?game rdfs:label ""Woolfe: The Red Hood Diaries""@en .
  ?designer dbo:worksFor ?administration .
}
```",5,5,6,2,3,2,3,28,0,0,1,0,0.0,0
773,61,test,"Give me the parent of the child, that is a royalty, of the father, that is an office holder and a royalty, of Carloman of Bavaria and parent of the successor of the child, that is a royalty, of Louis the Pious.",SELECT ?result WHERE { ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. <http://dbpedia.org/resource/Louis_the_Pious> <http://dbpedia.org/ontology/child> ?v0 . ?result <http://dbpedia.org/ontology/child> ?v5 . ?v3 <http://dbpedia.org/ontology/parent> ?result . ?v0 <http://dbpedia.org/ontology/successor> ?v5 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v3 <http://dbpedia.org/property/father> ?v1 . <http://dbpedia.org/resource/Carloman_of_Bavaria> <http://dbpedia.org/property/father> ?v1 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. },"```sparql
SELECT ?parent WHERE {
  # Step 1: Identify Carloman of Bavaria's father who is an office holder and royalty
  ?carloman dbo:child ?father .
  ?carloman rdfs:label ""Carloman of Bavaria""@en .
  
  OPTIONAL { 
    ?father dbo:officeHolder ?office .
    FILTER EXISTS { ?office rdf:type dbo:GovernmentPosition }
  }

  # Step 2: Find a child of this father who is royalty
  OPTIONAL {
    ?father dbo:child ?royalChild .
    FILTER EXISTS { ?royalChild rdf:type dbo:RoyalPerson }
  }

  # Step 3: Determine the parent of this royal child
  OPTIONAL {
    ?royalChild dbo:parent ?parent .
  }

  # Step 4: Identify Louis the Pious's successor and their royal child
  ?louis rdfs:label ""Louis the Pious""@en .
  ?successor dbo:predecessor ?louis .

  OPTIONAL {
    ?successor dbo:child ?successorChild .
    FILTER EXISTS { ?successorChild rdf:type dbo:RoyalPerson }
  }

  # Step 5: Find the parent of this successor's royal child
  OPTIONAL {
    ?successorChild dbo:parent ?parent2 .
  }

  # Return the parent from step 3 or step 5
  VALUES (?parent) { ?parent ?parent2 }
}
```",6,10,7,3,2,3,3,71,0,0,2,0,0.0,0
445,61,test,Give me the death place of the awardee of the establishment of 1820-03-10 and entity in the award of the commander in Battle of Saint-Mihiel.,"SELECT ?result WHERE { <http://dbpedia.org/resource/Battle_of_Saint-Mihiel> <http://dbpedia.org/ontology/commander> ?v1 . ?v0 <http://dbpedia.org/ontology/foundingDate> ""1820-03-10""^^<http://www.w3.org/2001/XMLSchema#date> . ?v5 <http://dbpedia.org/ontology/deathPlace> ?result . ?v5 <http://dbpedia.org/property/awards> ?v0 . ?v1 <http://dbpedia.org/property/awards> ?v3 . ?result <http://dbpedia.org/ontology/country> ?v3 . }","```sparql
SELECT ?awardeeDeathPlace ?commanderDeathPlace WHERE {
  # Find the awardee associated with the establishment on 1820-03-10
  ?event dbo:date ""1820-03-10""^^xsd:date .
  ?event dbo:awardRecipient ?awardee .
  
  # Get the death place of the awardee
  ?awardee dbo:deathPlace ?awardeeDeathPlace .

  # Find the commander in the Battle of Saint-Mihiel
  ?battle rdfs:label ""Battle of Saint-Mihiel""@en .
  ?battle dbo:commander ?commander .
  
  # Get the death place of the commander
  ?commander dbo:deathPlace ?commanderDeathPlace .
}
```",6,6,7,3,2,3,3,71,0,0,2,0,0.0,0
129,28,test,"Give me the associated musical artist of the actor, that is an organisation, of Dreamville Presents: Revenge and professional in the mayor of 1999 West Dunbartonshire Council election and associated musical artist of the person born as Tahj Malik Chandler.","SELECT ?result WHERE { <http://dbpedia.org/resource/1999_West_Dunbartonshire_Council_election> <http://dbpedia.org/property/leader> ?v1 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?v5 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . <http://dbpedia.org/resource/Dreamville_Presents:_Revenge> <http://dbpedia.org/property/starring> ?v3 . ?v3 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v5 <http://dbpedia.org/property/birthName> ""Tahj Malik Chandler""@en . ?result <http://dbpedia.org/property/occupation> ?v1 . }","```sparql
# Query to find the actor from Dreamville Presents: Revenge and their associated musical artist
SELECT ?actor ?musicalArtist WHERE {
  ?movie dbo:starring ?actor .
  ?movie rdfs:label ""Dreamville Presents: Revenge""@en .
  OPTIONAL { ?actor dbo:memberOf ?organization . }
  OPTIONAL { ?actor dbo:musicalArtist ?musicalArtist . }
}

# Query to find the mayor from the 1999 West Dunbartonshire Council election and their associated musical artist
SELECT ?mayor ?musicalArtist WHERE {
  ?election dbo:electedOfficial ?mayor .
  ?election rdfs:label ""West Dunbartonshire Council election, 1999""@en .
  OPTIONAL { ?mayor dbo:musicalArtist ?musicalArtist . }
}

# Query to find the associated musical artist of Tahj Malik Chandler (Lil Wayne)
SELECT ?lilWayne ?musicalArtist WHERE {
  ?person rdfs:label ""Lil Wayne""@en .
  ?person dbo:birthName ""Tahj Malik Chandler"" .
  OPTIONAL { ?person dbo:musicalArtist ?musicalArtist . }
}
```",6,7,7,2,3,2,3,28,0,0,1,0,0.0,0
465,67,test,"Give me the successor of the child, that is a royalty, of the parent of Charles Orlando, Dauphin of France and spouse of the child, that is a royalty, of the parent of Elizabeth of Austria (1526–1545) and successor of Ercole II d'Este, Duke of Ferrara.","SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/child> ?v3 . <http://dbpedia.org/resource/Ercole_II_d'Este,_Duke_of_Ferrara> <http://dbpedia.org/ontology/successor> ?result . ?v3 <http://dbpedia.org/ontology/successor> ?result . ?v0 <http://dbpedia.org/ontology/child> ?v6 . ?v6 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v0 <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Elizabeth_of_Austria_(1526–1545)> . <http://dbpedia.org/resource/Charles_Orlando,_Dauphin_of_France> <http://dbpedia.org/ontology/parent> ?v1 . ?result <http://dbpedia.org/ontology/spouse> ?v6 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. }","```sparql
SELECT ?successor WHERE {
  # Charles Orlando's parent
  ?charlesOrlando dbo:parent ?parentCharles .
  ?charlesOrlando rdfs:label ""Charles Orlando""@en .

  # Child (royalty) of Charles Orlando's parent
  ?childRoyalty1 dbo:parent ?parentCharles .
  FILTER EXISTS { ?childRoyalty1 a dbo:Monarch . }

  # Elizabeth of Austria's parent
  ?elizabethOfAustria dbo:parent ?parentElizabeth .
  ?elizabethOfAustria rdfs:label ""Elizabeth of Austria (1526–1545)""@en .

  # Child (royalty) of Elizabeth of Austria's parent
  ?childRoyalty2 dbo:parent ?parentElizabeth .
  FILTER EXISTS { ?childRoyalty2 a dbo:Monarch . }

  # Ercole II d'Este's successor
  ?ercoleII dbo:succ ?successorErcole .
  ?ercoleII rdfs:label ""Ercole II d'Este""@en .

  # Spouse of the royalty child from Elizabeth of Austria's parent
  ?childRoyalty2 dbo:spouse ?spouseChildRoyalty2 .

  # Successor of the royalty child from Charles Orlando's parent
  ?childRoyalty1 dbo:succ ?successor .
}
```",7,9,8,3,3,3,3,71,0,0,1,0,0.0,0
965,65,test,"Give me the parent of the person born, that is a noble, as Prince George of Battenberg and parent of the child, that is a royalty, of the person born, that is a politician, on 1854-05-24 and spouse of the spouse of Princess Victoria of Hesse and by Rhine.","SELECT ?result WHERE { ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v5 <http://dbpedia.org/property/father> ?v1 . ?v0 <http://dbpedia.org/property/birthName> ""Prince George of Battenberg""@en . ?result <http://dbpedia.org/ontology/spouse> ?v2 . ?v5 <http://dbpedia.org/ontology/parent> ?result . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Noble>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v1 <http://dbpedia.org/ontology/birthDate> ""1854-05-24""^^<http://www.w3.org/2001/XMLSchema#date> . <http://dbpedia.org/resource/Princess_Victoria_of_Hesse_and_by_Rhine> <http://dbpedia.org/ontology/spouse> ?v2 . ?v0 <http://dbpedia.org/ontology/parent> ?result . }","```sparql
SELECT ?parent WHERE {
  # Prince George of Battenberg and his parent
  ?george dbo:birthDate ""1857-07-02""^^xsd:date ;
          rdfs:label ""Prince George of Battenberg""@en .
  ?george dbo:parent ?parent .

  # Queen Victoria, born on 1854-05-24, who is a politician
  OPTIONAL {
    ?queen dbo:birthDate ""1819-05-24""^^xsd:date ;
           rdfs:label ""Queen Victoria""@en .
    FILTER (regex(str(?queen), ""politician"", ""i""))
    
    # Child of Queen Victoria who is royalty
    ?child dbo:parent ?queen ;
           rdf:type dbo:RoyalFamilyMember .
  }

  # Princess Victoria of Hesse and by Rhine and her spouse
  OPTIONAL {
    ?princessVictoria rdfs:label ""Princess Victoria of Hesse and by Rhine""@en .
    ?princessVictoria dbo:spouse ?spouse .
    
    # Spouse of Princess Victoria's spouse
    ?spouse2 dbo:spouse ?spouse .
    
    # Parent of the spouse of Princess Victoria's spouse
    ?spouse2 dbo:parent ?parent .
  }
}
```",7,10,8,3,3,3,3,71,0,0,1,0,0.0,0
274,26,test,"Give me the band member of the person born, that is a musical artist, as John Birks Gillespie and associated musical artist of the actor, that is a musical artist, of Imagine the Sound and professional in .","SELECT ?result WHERE { ?v2 <http://dbpedia.org/property/birthName> ""John Birks Gillespie""@en . <http://dbpedia.org/resource/Imagine_the_Sound> <http://dbpedia.org/property/starring> ?v1 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?result <http://dbpedia.org/ontology/associatedMusicalArtist> ?v2 . ?result <http://dbpedia.org/property/occupation> """"@en . ?v1 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . }","```sparql
SELECT ?bandMember ?actorMusicalArtist WHERE {
  # Find Dizzy Gillespie
  ?gillespie dbo:birthName ""John Birks Gillespie""@en ;
             rdf:type dbo:Musician .

  # Find band members of Dizzy Gillespie who are musical artists
  ?gillespie dbo:bandMember ?bandMember .
  ?bandMember rdf:type dbo:MusicalArtist .

  # Find actor associated with ""Imagine the Sound""
  ?soundProject rdfs:label ""Imagine the Sound""@en ;
                dbo:actor ?actor .
  
  # Find musical artists associated with this actor
  ?actor dbo:associatedWith ?actorMusicalArtist .
  ?actorMusicalArtist rdf:type dbo:MusicalArtist .
}
```",5,7,6,2,3,2,3,28,0,0,3,0,0.0,0
465,71,test,"Give me the successor of the child of the parent of Ercole II d'Este, Duke of Ferrara and successor of the child, that is a royalty, of the parent of Charles Orlando, Dauphin of France and spouse of the child, that is a royalty, of the parent of Elizabeth of Austria (1526–1545).","SELECT ?result WHERE { ?v2 <http://dbpedia.org/ontology/successor> ?result . ?v7 <http://dbpedia.org/ontology/child> ?v8 . ?v4 <http://dbpedia.org/ontology/child> ?v5 . <http://dbpedia.org/resource/Ercole_II_d'Este,_Duke_of_Ferrara> <http://dbpedia.org/ontology/parent> ?v1 . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v2 <http://dbpedia.org/property/father> ?v1 . ?result <http://dbpedia.org/ontology/spouse> ?v5 . ?v8 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v8 <http://dbpedia.org/ontology/successor> ?result . ?v4 <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Elizabeth_of_Austria_(1526–1545)> . <http://dbpedia.org/resource/Charles_Orlando,_Dauphin_of_France> <http://dbpedia.org/ontology/parent> ?v7 . }","```sparql
SELECT ?successor WHERE {
  # Ercole II d'Este, Duke of Ferrara
  ?ercole dbo:parent ?parentErcole .
  ?parentErcole rdfs:label ""Alfonso I d'Este""@en .
  ?childErcole dbo:parent ?parentErcole .
  ?successorErcole dbo:succ ?childErcole .

  # Charles Orlando, Dauphin of France
  ?charlesParent dbo:parent ?parentCharles .
  ?parentCharles rdfs:label ""Louis XII of France""@en .
  ?royalChildCharles dbo:parent ?parentCharles .
  FILTER (regex(str(?royalChildCharles), ""Dauphin"", ""i""))
  ?spouseCharles dbo:",9,11,10,3,3,3,3,71,0,0,1,0,0.0,0
976,59,test,"Give me the office of the leader, that is a politician, of the administration, that is an organisation, of Kemal Kılıçdaroğlu and office of the mayor, that is a politician and an office holder and Turkish, of the reference, that is an organisation and a political party and Turkish, to Millet İttifakı.","SELECT ?result WHERE { ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v4 <http://dbpedia.org/ontology/nationality> <http://dbpedia.org/resource/Turkey>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?v3 <http://dbpedia.org/ontology/leader> ?v1 . ?v3 <http://dbpedia.org/property/leader> <http://dbpedia.org/resource/Kemal_Kılıçdaroğlu> . ?v0 <http://xmlns.com/foaf/0.1/name> ""Millet İttifakı""@en . ?v0 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Turkey>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v0 <http://dbpedia.org/property/leader> ?v4 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/PoliticalParty>. ?v4 <http://dbpedia.org/property/office> ?result . ?v1 <http://dbpedia.org/property/office> ?result . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. }","```sparql
SELECT ?kılıçdaroğluOffice ?mayorOffice WHERE {
  # Find Kemal Kılıçdaroğlu's office as a leader of an organization
  ?kılıçdaroğlu dbo:leader ?organization .
  ?kılıçdaroğlu rdfs:label ""Kemal Kılıçdaroğlu""@en .
  ?organization dbo:office ?kılıçdaroğluOffice .

  # Find the mayor associated with Millet İttifakı
  OPTIONAL {
    ?mayor dbo:memberOf ?millettiftik .
    ?millettiftik rdfs:label ""Millet İttifakı""@tr .
    ?mayor dbo:officeOf ?mayorOffice .
    FILTER (regex(str(?mayor), ""Turkish"", ""i""))
  }
}
```",6,14,7,3,2,3,3,71,0,0,3,0,0.0,0
926,66,test,"Give me the father of the father of Abdulaziz and child of the father, that is a royalty, of the parent, that is a royalty, of Beyhan Sultan (daughter of Mustafa III) and successor of the child of Ahmed III.",SELECT ?result WHERE { ?v5 <http://dbpedia.org/property/father> ?v0 . ?v3 <http://dbpedia.org/property/father> ?result . <http://dbpedia.org/resource/Beyhan_Sultan_(daughter_of_Mustafa_III)> <http://dbpedia.org/ontology/parent> ?v5 . <http://dbpedia.org/resource/Abdulaziz> <http://dbpedia.org/property/father> ?v3 . ?v6 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Ahmed_III> . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v6 <http://dbpedia.org/ontology/successor> ?result . ?v0 <http://dbpedia.org/ontology/child> ?result . },"```sparql
SELECT ?result WHERE {
  # Step a: Father of the father of Abdulaziz
  ?abdulaziz dbo:parent ?fatherAbdulaziz .
  ?fatherAbdulaziz dbo:parent ?grandFatherAbdulaziz .

  # Step b: Child of the father that is royalty of Beyhan Sultan's parent (Mustafa III)
  ?mustafaIII dbo:child ?beYhanSultan .
  ?beYhanSultan rdfs:label ""Beyhan Sultan""@en .
  ?mustafaIII dbo:parent ?fatherMustafaIII .
  OPTIONAL { 
    ?fatherMustafaIII dbo:child ?royalChildMustafaIII .
    FILTER (regex(str(?royalChildMustafaIII), ""Imperial"", """,7,9,8,3,3,3,3,71,0,0,1,0,0.0,0
773,69,test,"Give me the parent of the child, that is a royalty, of the father, that is an office holder and a royalty, of Carloman of Bavaria and spouse of the father of the parent of Bernard (son of Charles the Fat) and parent of the successor of Charles the Bald.",SELECT ?result WHERE { ?v3 <http://dbpedia.org/ontology/spouse> ?result . ?v4 <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Bernard_(son_of_Charles_the_Fat)> . ?v2 <http://dbpedia.org/ontology/parent> ?result . ?v2 <http://dbpedia.org/property/father> ?v1 . ?result <http://dbpedia.org/ontology/child> ?v7 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. <http://dbpedia.org/resource/Carloman_of_Bavaria> <http://dbpedia.org/property/father> ?v1 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v4 <http://dbpedia.org/property/father> ?v3 . <http://dbpedia.org/resource/Charles_the_Bald> <http://dbpedia.org/ontology/successor> ?v7 . },"```sparql
SELECT ?parentOfRoyalChild WHERE {
  # Step 1: Identify Carloman of Bavaria and his father who is an office holder and royalty
  ?carloman dbo:child ?father .
  ?carloman rdfs:label ""Carloman of Bavaria""@en .
  ?father a dbo:Monarch ;
          a dbo:OfficeHolder .

  # Step 2: Find the spouse of Carloman's father
  OPTIONAL { 
    ?father dbo:spouse ?spouse .
  }

  # Step 3: Identify Bernard (son of Charles the Fat) and his parent
  ?bernard dbo:child ?parentOfBernard .
  ?bernard rdfs:label ""Bernard (son of Charles the Fat)""@en .

  # Step 4: Determine the grandparent of Bernard on his father's side
  OPTIONAL {
    ?parentOfBernard dbo:parent ?grandParentOfBernard .
  }

  # Step 5: Find the successor of Charles the Bald
  ?charlesTheBald dbo:succeededBy ?successor .
  ?charlesTheBald rdfs:label ""Charles the Bald""@en .

  # Step 6: Identify the parent of this successor
  OPTIONAL {
    ?successor dbo:parent ?parentOfSuccessor .
  }

  # Step 7: Determine a child, that is royalty, of Carloman's father
  OPTIONAL {
    ?father dbo:child ?royalChild .
    ?royalChild a dbo:Monarch ;
                a dbo:Royalty .
  }

  # Step 8: Find the parent of this royal child
  OPTIONAL {
    ?royalChild dbo:parent ?parentOfRoyalChild .
  }
}
```",8,11,9,3,3,3,3,71,0,0,1,0,0.0,0
281,25,test,"Give me the awardee of Volunteer Decoration and commander in the war, that is an event and a military conflict, of Roy Boehm and awardee of the award, that is a military conflict, of Lawrence Moore Cosgrave.",SELECT ?result WHERE { ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?v3 <http://dbpedia.org/ontology/commander> ?result . ?result <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/Volunteer_Decoration> . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. <http://dbpedia.org/resource/Lawrence_Moore_Cosgrave> <http://dbpedia.org/property/awards> ?v4 . <http://dbpedia.org/resource/Roy_Boehm> <http://dbpedia.org/ontology/battle> ?v3 . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?result <http://dbpedia.org/property/awards> ?v4 . },"```sparql
SELECT DISTINCT ?boehmWarCommander ?cosgraveAwardConflict ?volunteerAwardee ?otherVolunteerAwardee WHERE {
  # Roy Boehm's war command and Volunteer Decoration awardee
  ?boehm dbo:commanderOf ?boehmWar .
  ?boehm rdfs:label ""Roy Boehm""@en .
  
  OPTIONAL {
    ?volAward dbo:event ?boehmWar .
    ?volAward dbo:recipient ?volunteerAwardee .
    ?volAward rdfs:label ""Volunteer Decoration""@en .
  }
  
  # Lawrence Moore Cosgrave's award and associated conflict
  ?cosgraveAward dbo:event ?cosgraveAwardConflict .
  ?cosgraveAward dbo:recipient ?cosgraveRecipient .
  ?cosgraveAward rdfs:label ?awardLabel .
  ?cosgraveRecipient rdfs:label ""Lawrence Moore Cosgrave""@en .

  # Find another recipient of the same award in a different conflict
  OPTIONAL {
    ?otherVolAward dbo:event ?otherConflict .
    ?otherVolAward dbo:recipient ?otherVolunteerAwardee .
    FILTER (?volAward != ?otherVolAward)
    FILTER (str(?awardLabel) = str(?otherVolAward/rdfs:label))
  }
}
```",5,8,6,2,3,2,3,28,0,0,1,0,0.0,0
130,19,test,"Give me the figure known as the film, that is a soccer club and an organisation, of Candice Storey Lee and entity in the administration, that is American, of the award of Živko Ključe.",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/state> ?v4 . ?v4 <http://dbpedia.org/property/governor> ?v0 . ?result <http://dbpedia.org/property/nickname> ?v2 . ?v4 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/United_States>. <http://dbpedia.org/resource/Živko_Ključe> <http://dbpedia.org/property/awards> ?v0 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerClub>. ?v2 <http://dbpedia.org/ontology/director> <http://dbpedia.org/resource/Candice_Storey_Lee> . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. },"```sparql
SELECT ?filmClubOrganisation ?administrationRole WHERE {
  # Candice Storey Lee's association with a film that is also a soccer club and organization
  ?entity dbo:director ?candiceStoreyLee .
  ?candiceStoreyLee rdfs:label ""Candice Storey Lee""@en .
  
  OPTIONAL { 
    ?entity rdf:type dbpedia-owl:Film .
  }
  
  OPTIONAL {
    ?entity rdf:type dbpedia-owl:SoccerClub .
  }

  OPTIONAL {
    ?entity rdf:type dbpedia-owl:Organization .
  }

  # Živko Ključe's role in American administration related to an award
  ?kljuc ?roleProperty ?administrationRole .
  ?kljuc rdfs:label ""Živko Ključe""@en .

  OPTIONAL {
    ?administrationRole dbo:country dbpedia:United_States .
  }

  OPTIONAL {
    ?administrationRole rdf:type dbpedia-owl:Award .
  }
}
```",5,8,6,3,2,3,2,20,0,0,1,0,0.0,0
773,70,test,"Give me the spouse of the father of Charles the Fat and parent of the successor of the child, that is a royalty, of Louis the Pious and parent of the child, that is a royalty, of the father, that is an office holder and a royalty, of Carloman of Bavaria.",SELECT ?result WHERE { ?v0 <http://dbpedia.org/ontology/successor> ?v7 . <http://dbpedia.org/resource/Carloman_of_Bavaria> <http://dbpedia.org/property/father> ?v1 . <http://dbpedia.org/resource/Charles_the_Fat> <http://dbpedia.org/property/father> ?v4 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?result <http://dbpedia.org/ontology/child> ?v7 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v4 <http://dbpedia.org/ontology/spouse> ?result . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. <http://dbpedia.org/resource/Louis_the_Pious> <http://dbpedia.org/ontology/child> ?v0 . ?v3 <http://dbpedia.org/ontology/parent> ?result . ?v3 <http://dbpedia.org/property/father> ?v1 . },"```sparql
SELECT ?spouse WHERE {
  # Father of Charles the Fat
  ?charlesFat dbo:parent ?fatherOfCharlesFat .
  ?charlesFat rdfs:label ""Charles the Fat""@en .

  # Spouse of father of Charles the Fat
  OPTIONAL { 
    ?fatherOfCharlesFat dbo:spouse ?spouse .
  }

  # Child of Louis the Pious and their successor (royalty)
  OPTIONAL {
    ?louisThePious dbo:child ?childOfLouis .
    ?louisThePious rdfs:label ""Louis the Pious""@en .

    ?successor dbo:succeeds ?childOfLouis",8,12,9,3,3,3,3,71,0,0,1,0,0.0,0
47,63,test,"Give me the office of the awardee of Padma Vibhushan and office of the administration of the commander, that is a politician, in Operation Green Hunt and office of the awardee of Banga Bhushan.",SELECT ?result WHERE { ?v3 <http://dbpedia.org/property/governor> ?v4 . ?v3 <http://dbpedia.org/property/office> ?result . ?v6 <http://dbpedia.org/property/office> ?result . ?v2 <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/Padma_Vibhushan> . ?v6 <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/Banga_Bhushan> . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. <http://dbpedia.org/resource/Operation_Green_Hunt> <http://dbpedia.org/ontology/commander> ?v4 . ?v2 <http://dbpedia.org/property/office> ?result . },"```sparql
SELECT ?padmaVibhushanOffice ?greenHuntCommanderOffice ?bangaBhushanOffice WHERE {
  # Find awardees of Padma Vibhushan and their office
  ?person dbo:award ""Padma Vibhushan"" .
  OPTIONAL { 
    ?person dbo:office ?padmaVibhushanOffice .
  }

  # Find a politician who was a commander in Operation Green Hunt and their administrative role
  ?politician dbo:role ""Commander""@en ;
              dbo:operation ""Operation Green Hunt"" .
  FILTER (regex(str(?politician), ""Politician"", ""i""))
  OPTIONAL {
    ?politician dbo:office ?greenHuntCommanderOffice .
  }

  # Find awardees of Banga Bhushan and their office
  ?person2 dbo:award ""Banga Bhushan"" .
  OPTIONAL { 
    ?person2 dbo:office ?bangaBhushanOffice .
  }
}
```",7,8,8,3,3,3,3,71,0,0,1,0,0.0,0
965,67,test,"Give me the spouse of Prince Louis of Battenberg and parent of the person born, that is a noble, as the birth name of George Mountbatten, 2nd Marquess of Milford Haven and parent of the child, that is a royalty, of the person born, that is a politician, on 1854-05-24.","SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?result <http://dbpedia.org/ontology/spouse> <http://dbpedia.org/resource/Prince_Louis_of_Battenberg> . ?v5 <http://dbpedia.org/property/father> ?v1 . ?v5 <http://dbpedia.org/ontology/parent> ?result . ?v1 <http://dbpedia.org/ontology/birthDate> ""1854-05-24""^^<http://www.w3.org/2001/XMLSchema#date> . ?v0 <http://dbpedia.org/property/birthName> ?v4 . ?v0 <http://dbpedia.org/ontology/parent> ?result . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Noble>. ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. <http://dbpedia.org/resource/George_Mountbatten,_2nd_Marquess_of_Milford_Haven> <http://dbpedia.org/property/birthName> ?v4 . }","```sparql
SELECT ?spouse ?parentOfGeorge ?royalChild WHERE {
  # Find Prince Louis of Battenberg's spouse
  ?princeLouis dbo:spouse ?spouse .
  ?princeLouis rdfs:label ""Prince Louis of Battenberg""@en .

  # Find the parent of George Mountbatten, 2nd Marquess of Milford Haven
  ?georgeMountbatten dbo:birthName ""George Mountbatten, 2nd Marquess of Milford Haven""@en .
  ?parentOfGeorge dbo:child ?georgeMountbatten .

  # Find the politician born on May 24, 1854 and their royal child
  ?politician dbo:birthDate ""1854-05-24""^^xsd:date .
  ?royalChild dbo:parent ?politician .
  FILTER EXISTS { ?royalChild a dbo:RoyalFamilyMember } # Assuming there's a property to identify royalty

  # Link the spouse of Prince Louis to the parent of George Mountbatten
  OPTIONAL {
    ?spouse dbo:child ?georgeMountbatten .
  }
}
```",7,10,8,3,3,3,3,71,0,0,1,0,0.0,0
216,60,test,"Give me the player in the coach of the reference, that is an organisation and a soccer club, to Croatia U21 and team of the person born, that is a sports manager and a soccer manager and a soccer player, on the death of Pavel Vezhinov.","SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/birthDate> ?v0 . ?v3 <http://dbpedia.org/ontology/coach> ?v2 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerManager>. ?v2 <http://dbpedia.org/ontology/team> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerPlayer>. ?v3 <http://xmlns.com/foaf/0.1/name> ""Croatia U21""@en . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsManager>. <http://dbpedia.org/resource/Pavel_Vezhinov> <http://dbpedia.org/ontology/deathDate> ?v0 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerClub>. ?result <http://dbpedia.org/ontology/coach> ?v1 . }","```sparql
SELECT ?player WHERE {
  # Identify the organization and soccer club related to Croatia U21
  ?reference a dbo:SoccerClub ;
             dbo:team ?croatiaU21 .
  
  # Find the coach of this reference who is also an organization and soccer club
  ?coach dbo:coachOf ?reference ;
         a dbo:Organization, dbo:SoccerClub .

  # Identify the player managed by this coach
  ?player dbo:managedBy ?coach .

  # Find the sports manager who is also a soccer manager and player
  ?person a dbo:SportsManager, dbo:SoccerManager, dbo:SoccerPlayer ;
          dbo:birthPlace ?birthPlace .
  
  # Ensure this person was part of the team managed by the coach
  ?team dbo:coach ?coach ;
        dbo:player ?person .

  # Link the birth details with Pavel Vezhinov's death
  ?pavelVezhinov dbo:deathDate ?deathDate .
  FILTER (?birthPlace = ?deathDate)
}
```",6,11,7,3,2,3,3,71,0,0,1,0,0.0,0
645,63,test,"Give me the leader of the office, that is a government agency and an organisation, of Camilo Menéndez Tolosa and commander in the force of the commander in Siege of Madrid and military force of the force, that is an event and a military conflict and a societal event, of Francisco Largo Caballero.",SELECT ?result WHERE { <http://dbpedia.org/resource/Camilo_Menéndez_Tolosa> <http://dbpedia.org/property/office> ?v2 . ?v3 <http://dbpedia.org/ontology/commander> ?v4 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/GovernmentAgency>. ?v6 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v6 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?v2 <http://dbpedia.org/ontology/leader> ?result . ?v3 <http://dbpedia.org/ontology/commander> ?result . <http://dbpedia.org/resource/Siege_of_Madrid> <http://dbpedia.org/ontology/commander> ?v4 . ?v6 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?result <http://dbpedia.org/ontology/battle> ?v6 . ?v6 <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Francisco_Largo_Caballero> . },"```sparql
SELECT ?leader WHERE {
  # Find the office led by Camilo Menéndez Tolosa
  ?office dbo:leader ?leader .
  ?office rdf:type dbo:GovernmentAgency ;
          rdf:type dbo:Organization .
  ?camilo foaf:name ""Camilo Menéndez Tolosa"" .
  ?camilo dbo:position ?office .

  # Find the commander in the force during the Siege of Madrid
  OPTIONAL {
    ?siege dbo:commanderInForce ?commander .
    ?siege rdfs:label ""Siege of Madrid""@en .
    ?francisco foaf:name ""Francisco Largo Caballero"" .
    ?francisco dbo:militaryRole ?commander .

    # Ensure the siege is an event and a military conflict
    ?siege rdf:type dbo:Event ;
           rdf:type dbo:MilitaryConflict ;
           rdf:type dbo:SocietalEvent .
  }
}
```",7,12,8,3,3,3,3,71,0,0,1,0,0.0,0
267,19,test,"Give me the coach of the player, that is a soccer club, in Rasoul Khatibi and person born on the birth date of the reference to Dan Cathy.","SELECT ?result WHERE { <http://dbpedia.org/resource/Rasoul_Khatibi> <http://dbpedia.org/ontology/team> ?v2 . ?v2 <http://dbpedia.org/ontology/coach> ?result . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerClub>. ?result <http://dbpedia.org/ontology/birthDate> ?v4 . ?v0 <http://xmlns.com/foaf/0.1/name> ""Dan Cathy""@en . ?v0 <http://dbpedia.org/ontology/birthDate> ?v4 . }","```sparql
SELECT ?coach WHERE {
  # Find Rasoul Khatibi and his soccer club
  ?khatibi dbo:playsFor ?club .
  ?khatibi rdfs:label ""Rasoul Khatibi""@en .

  # Find Dan Cathy's birth date
  ?cathy dbo:birthday ?birthDate .
  ?cathy rdfs:label ""Dan Cathy""@en .

  # Find a person born on the same date as Dan Cathy
  ?person dbo:birthday ?sameBirthDate .
  FILTER (?sameBirthDate = ?birthDate)

  # Find the coach of Rasoul Khatibi's soccer club
  ?club dbo:coach ?coach .
}
```",5,6,6,3,2,3,2,20,0,0,1,0,0.0,0
417,60,test,"Give me the child of the child, that is a royalty, of the parent, that is a royalty, of Alexandrine of Mecklenburg-Schwerin and spouse of the parent, that is a royalty, of the child of Knud, Hereditary Prince of Denmark.","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/spouse> ?v2 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. <http://dbpedia.org/resource/Alexandrine_of_Mecklenburg-Schwerin> <http://dbpedia.org/ontology/parent> ?v0 . ?v1 <http://dbpedia.org/property/father> ?v0 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?result <http://dbpedia.org/ontology/parent> ?v1 . ?v2 <http://dbpedia.org/ontology/child> ?v3 . ?v3 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Knud,_Hereditary_Prince_of_Denmark> . }","```sparql
SELECT ?grandchild WHERE {
  # Step 1: Find the parent of Alexandrine of Mecklenburg-Schwerin who is royalty
  ?alexParent dbo:parent ?alex .
  ?alex rdfs:label ""Alexandrine of Mecklenburg-Schwerin""@en .
  
  # Ensure the parent is royalty (e.g., a monarch or noble)
  FILTER EXISTS { ?alexParent rdf:type dbo:Monarch . }
  
  # Step 2: Find the spouse of this royal parent
  OPTIONAL {
    ?spouse dbo:spouse ?alexParent .
  }
  
  # Step 3: Find the child of this spouse
  OPTIONAL {
    ?child dbo:parent ?spouse .
  }
  
  # Step 4: Find the grandchild (child of the child) who is royalty
  OPTIONAL {
    ?grandchild dbo:parent ?child .
    
    # Ensure the grandchild is royalty
    FILTER EXISTS { ?grandchild rdf:type dbo:Monarch . }
  }

  # For Knud, Hereditary Prince of Denmark
  ?knudChild dbo:parent ?knud .
  ?knud rdfs:label ""Knud, Hereditary Prince of Denmark""@en .

  OPTIONAL {
    ?knudParent dbo:parent ?knudChild .
    
    # Ensure the parent is royalty
    FILTER EXISTS { ?knudParent rdf:type dbo:Monarch .",6,9,7,3,2,3,3,71,0,0,1,0,0.0,0
892,68,test,"Give me the landmark at elevation of the award of the member of E-girls and entity in the profession of the true self of Enrico Crolla and entity in the administration, that is Italian and a region and a settlement and an administrative region, of Democratic Party (Italy).","SELECT ?result WHERE { ?v4 <http://dbpedia.org/property/occupation> ?v2 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. ?v1 <http://dbpedia.org/property/awards> ?v6 . ?v0 <http://dbpedia.org/property/leaderParty> <http://dbpedia.org/resource/Democratic_Party_(Italy)> . ?v4 <http://xmlns.com/foaf/0.1/givenName> ""Enrico Crolla""@en . ?v0 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Italy>. <http://dbpedia.org/resource/E-girls> <http://dbpedia.org/ontology/bandMember> ?v1 . ?result <http://dbpedia.org/ontology/elevation> ?v6 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Region>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/AdministrativeRegion>. ?result <http://dbpedia.org/ontology/country> ?v2 . ?result <http://dbpedia.org/ontology/province> ?v0 . }","```sparql
SELECT ?landmark WHERE {
  # Find a member of E-girls
  ?member dbo:member dbr:E-girls .
  
  # Find an award associated with this member, specifically looking for elevation if it's a landmark
  ?award dbo:recipient ?member ;
         dbo:elevation ?elevation .
  
  # Identify the true self (real name) of Enrico Crolla and his profession
  dbr:Enrico_Crolla foaf:name ?trueSelf .
  ?trueSelf dbo:profession ?profession .

  # Find an entity in the administration related to the Democratic Party (Italy)
  ?entity dbo:member dbr:Democratic_Party_(Italy) ;
          a dbo:AdministrativeRegion ;
          dbo:elevation ?elevation ;
          rdfs:label ?regionLabel .
  
  # Ensure the region is Italian and matches all specified criteria
  FILTER (lang(?regionLabel) = ""it"" && regex(str(?regionLabel), ""Regione"", ""i""))
}
```",8,12,9,3,3,3,3,71,0,0,2,0,0.0,0
933,63,test,"Give me the reference to the birth name of Alan Warner (musician) and band of the band, that is a group and a band and an organisation, of Alan Warner (musician) and band of the band of the band, that is an artist and a musical artist, of The Ramong Sound.",SELECT ?result WHERE { ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Band>. ?v3 <http://dbpedia.org/ontology/associatedMusicalArtist> ?v1 . <http://dbpedia.org/resource/The_Ramong_Sound> <http://dbpedia.org/ontology/associatedMusicalArtist> ?v3 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. ?result <http://xmlns.com/foaf/0.1/name> ?v5 . ?v0 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v1 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . <http://dbpedia.org/resource/Alan_Warner_(musician)> <http://dbpedia.org/property/birthName> ?v5 . <http://dbpedia.org/resource/Alan_Warner_(musician)> <http://dbpedia.org/ontology/associatedMusicalArtist> ?v0 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Group>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. },"```sparql
SELECT ?birthName ?band1 ?band2 WHERE {
  # Alan Warner's birth name
  ?alanWarner dbo:birthName ?birthName .
  ?alanWarner rdfs:label ""Alan Warner (musician)""@en .

  # Band associated with Alan Warner
  OPTIONAL {
    ?alanWarner dbo:member ?band1 .
    ?band1 rdf:type dbo:Band ;
           rdf:type dbo:MusicalGroup ;
           rdf:type dbo:Organization .
  }

  # The Ramong Sound and its classification
  ?ramongSound rdfs:label ""The Ramong Sound""@en .
  FILTER EXISTS { ?ramongSound rdf:type dbo:Artist . }
  FILTER EXISTS { ?ramongSound rdf:type dbo:MusicalArtist . }

  # Band associated with The Ramong Sound
  OPTIONAL {
    ?ramongSound dbo:member ?band2 .
    ?band2 rdf:type dbo:Band ;
           rdf:type dbo:MusicalGroup ;
           rdf:type dbo:Organization .
  }
}
```",7,12,8,3,3,3,3,71,0,0,1,0,0.0,0
382,19,test,"Give me the landmark at elevation of the award of the reference, that is a college coach and a coach, to Harry Combes and birthplace of the manager, that is a soccer manager and an athlete and a sports manager, of Bonner SC.","SELECT ?result WHERE { ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Coach>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsManager>. ?result <http://dbpedia.org/ontology/elevation> ?v4 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerManager>. <http://dbpedia.org/resource/Bonner_SC> <http://dbpedia.org/ontology/manager> ?v2 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/CollegeCoach>. ?v2 <http://dbpedia.org/ontology/birthPlace> ?result . ?v0 <http://xmlns.com/foaf/0.1/name> ""Harry Combes""@en . ?v0 <http://dbpedia.org/property/awards> ?v4 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Athlete>. }","```sparql
# Find Harry Combes' awards and associated landmark
SELECT ?awardElevation ?landmark WHERE {
  ?combes dbo:occupation ""College coach""@en .
  ?combes dbo:occupation ""Coach""@en .
  ?combes rdfs:label ""Harry Combes""@en .
  
  # Assuming an award has a property for elevation (hypothetical)
  ?award dbo:recipient ?combes ;
         dbo:elevation ?awardElevation .
  
  # Find landmark at the same elevation
  ?landmark dbo:elevation ?awardElevation .
}

# Find Bonner SC manager and their birthplace
SELECT ?birthPlace WHERE {
  ?manager dbo:occupation ""Soccer manager""@en ;
           dbo:occupation ""Athlete""@en ;
           dbo:occupation ""Sports manager""@en ;
           dbo:team ""Bonner SC""@en .
  
  # Assuming the manager's birthplace is linked via a property
  ?manager dbo:birthPlace ?birthPlace .
}
```",5,10,6,3,2,3,2,20,0,0,1,0,0.0,0
865,60,test,"Give me the native of the residence, that is a country, of the person decedent at Patna and father of the child of the father of Abul Maal Abdul Muhith.",SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/deathPlace> <http://dbpedia.org/resource/Patna> . ?v1 <http://dbpedia.org/property/residence> ?v0 . <http://dbpedia.org/resource/Abul_Maal_Abdul_Muhith> <http://dbpedia.org/property/father> ?v5 . ?result <http://dbpedia.org/ontology/birthPlace> ?v0 . ?v2 <http://dbpedia.org/property/father> ?v5 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. ?v2 <http://dbpedia.org/property/father> ?result . },"```sparql
SELECT ?native WHERE {
  # Step 1: Identify Abul Maal Abdul Muhith's father
  ?muhith dbo:father ?father .
  ?muhith rdfs:label ""Abul Maal Abdul Muhith""@en .

  # Step 2: Find a child of this father (could be Muhith himself)
  OPTIONAL { 
    ?child dbo:parent ?father .
  }

  # Step 3: Identify the decedent at Patna
  OPTIONAL {
    ?decedent dbo:placeOfDeath ?patna .
    ?patna rdfs:label ""Patna""@en .
    FILTER (?decedent IN(?muhith, ?child))
  }

  # Step 4: Determine the residence country of this decedent
  OPTIONAL {
    ?residenceCountry dbo:nativePlace ?decedent .
  }

  # Step 5: Find the native of this residence country
  ?native dbo:nativePlace ?residenceCountry .
}
```",6,7,7,3,2,3,3,71,0,0,1,0,0.0,0
465,58,test,"Give me the spouse of the child, that is a royalty, of Ferdinand I, Holy Roman Emperor and successor of Ercole II d'Este, Duke of Ferrara and successor of the child, that is a royalty, of the parent of Charles Orlando, Dauphin of France.","SELECT ?result WHERE { ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. <http://dbpedia.org/resource/Charles_Orlando,_Dauphin_of_France> <http://dbpedia.org/ontology/parent> ?v1 . <http://dbpedia.org/resource/Ercole_II_d'Este,_Duke_of_Ferrara> <http://dbpedia.org/ontology/successor> ?result . ?v1 <http://dbpedia.org/ontology/child> ?v2 . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. <http://dbpedia.org/resource/Ferdinand_I,_Holy_Roman_Emperor> <http://dbpedia.org/ontology/child> ?v5 . ?v2 <http://dbpedia.org/ontology/successor> ?result . ?result <http://dbpedia.org/ontology/spouse> ?v5 . }","```sparql
SELECT ?spouse WHERE {
  # Step 1: Identify Ferdinand I and his royal child
  ?ferdinand dbo:child ?royalChild .
  ?ferdinand rdfs:label ""Ferdinand I, Holy Roman Emperor""@en .
  
  # Ensure the child is royalty
  ?royalChild rdf:type dbo:RoyalFamilyMember .

  # Step 2: Identify Ercole II d'Este and his successor
  ?ercole dbo:succeededBy ?successor .
  ?ercole rdfs:label ""Ercole II d'Este, Duke of Ferrara""@en .

  # Ensure the successor is also a child of Ferdinand I's royal child
  ?royalChild dbo:child ?successor .

  # Step 3: Identify Charles Orlando and his parent
  ?charlesOrlando dbo:parent ?parent .
  ?charlesOrlando rdfs:label ""Charles Orlando, Dauphin of France""@en .

  # Find the royal child of this parent
  ?parentChild dbo:child ?royalParentChild .
  ?parentChild rdf:type dbo:RoyalFamilyMember .

  # Step 4: Determine the spouse of the identified royal child
  ?royalParentChild dbo:spouse ?spouse .
}
```",6,8,7,3,3,3,3,71,0,0,1,0,0.0,0
582,58,test,"Give me the player in the father, that is an athlete and a soccer manager and a sports manager, of Masami Nagasawa and reference to Japan and figure known as the nickname of the team, that is an organisation, of Hajime Moriyasu.","SELECT ?result WHERE { ?v5 <http://dbpedia.org/ontology/team> ?result . ?v1 <http://dbpedia.org/property/nickname> ?v2 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. <http://dbpedia.org/resource/Masami_Nagasawa> <http://dbpedia.org/property/father> ?v5 . ?v1 <http://dbpedia.org/ontology/coach> <http://dbpedia.org/resource/Hajime_Moriyasu> . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsManager>. ?result <http://xmlns.com/foaf/0.1/name> ""Japan""@en . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerManager>. ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Athlete>. ?result <http://dbpedia.org/property/nickname> ?v2 . }","```sparql
SELECT ?father ?teamNickname WHERE {
  # Identify Masami Nagasawa and her father
  ?nagasawa dbo:parent ?father .
  ?nagasawa rdfs:label ""Masami Nagasawa""@en .

  # Ensure the father is an athlete, soccer manager, and sports manager
  ?father rdf:type dbo:Athlete ;
          rdf:type dbo:SoccerManager ;
          rdf:type dbo:SportsManager ;
          dbo:nationality dbr:Japan .

  # Identify Hajime Moriyasu's team organization
  ?moriyasu dbo:team ?team .
  ?moriyasu rdfs:label ""Hajime Moriyasu""@en .
  
  # Ensure the team is an organization and find its nickname
  ?team rdf:type dbo:Organization ;
        dbo:nickname ?teamNickname .

}
```",6,10,7,3,3,3,3,71,0,0,1,0,0.0,0
715,56,test,"Give me the commander in the force, that is a military conflict, of Abd el-Krim and commander in Spanish Civil War and leader of the office, that is a government agency and an organisation, of the reference to Carlos Franco Iribarnegaray.","SELECT ?result WHERE { ?v0 <http://xmlns.com/foaf/0.1/name> ""Carlos Franco Iribarnegaray""@en . ?v0 <http://dbpedia.org/property/office> ?v1 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/GovernmentAgency>. ?v2 <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Abd_el-Krim> . ?v2 <http://dbpedia.org/ontology/commander> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. <http://dbpedia.org/resource/Spanish_Civil_War> <http://dbpedia.org/ontology/commander> ?result . ?v1 <http://dbpedia.org/ontology/leader> ?result . }","```sparql
SELECT ?abdElKrimConflictCommander ?spanishCivilWarCommander ?carlosFrancoOfficeLeader WHERE {
  # Find Abd el-Krim's military conflict and his command role
  ?abdElKrim dbo:commanderInMilitaryConflicts ?abdElKrimConflict .
  ?abdElKrim rdfs:label ""Abd el-Krim""@en .
  
  OPTIONAL {
    ?abdElKrimConflictCommander dbo:commanderInMilitaryConflicts ?abdElKrimConflict .
  }
  
  # Find the commander in the Spanish Civil War
  ?spanishCivilWar dbo:commanderInMilitaryConflicts ?spanishCivilWarCommander .
  ?spanishCivilWar rdfs:label ""Spanish Civil War""@en .

  # Find Carlos Franco Iribarnegaray's leadership role in a government agency or organization
  ?carlosFranco dbo:leaderOfOffice ?office .
  ?carlosFranco rdfs:label ""Carlos Franco Iribarnegaray""@en .
  
  OPTIONAL {
    ?office rdf:type dbo:GovernmentAgency ;
            dbo:leader ?carlosFrancoOfficeLeader .
  }
}
```",6,9,7,3,3,3,3,71,0,0,1,0,0.0,0
433,64,test,"Give me the professional in the profession of the writer of Slowhand at 70 – Live at the Royal Albert Hall and associated musical artist of Bill Evans and associated musical artist of the person born, that is a musical artist and an artist, as the persona of Paul Chambers.",SELECT ?result WHERE { ?result <http://dbpedia.org/property/occupation> ?v1 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. <http://dbpedia.org/resource/Paul_Chambers> <http://xmlns.com/foaf/0.1/givenName> ?v3 . <http://dbpedia.org/resource/Slowhand_at_70_–_Live_at_the_Royal_Albert_Hall> <http://dbpedia.org/property/writer> ?v0 . ?v2 <http://dbpedia.org/property/birthName> ?v3 . ?v0 <http://dbpedia.org/property/occupation> ?v1 . <http://dbpedia.org/resource/Bill_Evans> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v2 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . },"```sparql
SELECT DISTINCT ?professional WHERE {
  # Eric Clapton is the writer of ""Slowhand at 70 – Live at the Royal Albert Hall""
  ?album dbo:artist ?clapton .
  ?album rdfs:label ""Slowhand at 70 – Live at the Royal Albert Hall""@en .
  ?clapton rdfs:label ""Eric Clapton""@en .

  # Find associated musical artists of Bill Evans
  ?billEvans dbo:associatedMusicalArtist ?artist1 .
  ?billEvans rdfs:label ""Bill Evans""@en .

  # Find associated musical artists of Paul Chambers
  ?paulChambers dbo:associatedMusicalArtist ?artist2 .
  ?paulChambers rdfs:label ""Paul Chambers""@en .

  # The professional must be an artist and a musician, and connected to Eric Clapton
  ?professional dbo:profession dbc:Musicians .
  ?professional dbo:profession dbc:Artists .
  
  # Ensure the professional is associated with both artists from Bill Evans and Paul Chambers
  ?artist1 rdfs:label ?professionalLabel .
  ?artist2 rdfs:label ?professionalLabel .

  # The professional must also be connected to Eric Clapton
  ?clapton dbo:associatedMusicalArtist ?professional .
}
```",7,9,8,3,3,3,3,71,0,0,1,0,0.0,0
573,70,test,"Give me the person decedent at the residence, that is a settlement, of the professional, that is American, in Politician and parent of the author, that is a politician and an office holder, of the work of John Quincy Adams and person decedent at the administration, that is a region, of Charlie Baker.","SELECT ?result WHERE { ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v0 <http://dbpedia.org/property/occupation> ""Politician""@en . ?result <http://dbpedia.org/ontology/deathPlace> ?v4 . ?v7 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. ?v0 <http://dbpedia.org/property/residence> ?v7 . ?v1 <http://dbpedia.org/property/author> ?v3 . ?v3 <http://dbpedia.org/ontology/parent> ?result . ?v0 <http://dbpedia.org/ontology/nationality> <http://dbpedia.org/resource/United_States>. ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Region>. ?v4 <http://dbpedia.org/property/governor> ""Charlie Baker""@en . ?v1 <http://dbpedia.org/property/author> <http://dbpedia.org/resource/John_Quincy_Adams> . ?result <http://dbpedia.org/ontology/deathPlace> ?v7 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. }","```sparql
SELECT ?personDecedent WHERE {
  # Find John Quincy Adams' work and its author who is a politician and office holder
  ?work dbo:author ?author .
  ?work rdfs:label ""John Quincy Adams""@en .
  
  ?author rdf:type dbo:Politician ;
          dbo:officeHolder ?office .

  # Identify the professional (American) in Politician whose residence is a settlement
  ?professional rdf:type dbo:Politician ;
                dbo:nationality dbr:United_States ;
                dbo:residence ?settlement .
  
  FILTER (isLiteral(?settlement))

  # Find decedent at this residence
  ?settlement dbo:decedent ?personDecedent .

  # Identify Charlie Baker's administration and its decedent
  ?administration rdfs:label ""Charlie Baker""@en ;
                  rdf:type dbo:Region .
  
  ?administration dbo:decedent ?adminPersonDecedent .

  # Ensure the person decedent at both locations is the same
  FILTER (?personDecedent = ?adminPersonDecedent)
}
```",8,13,9,3,3,3,3,71,0,0,2,0,0.0,0
102,20,test,"Give me the native of the residence, that is English and a settlement, of the resident, that is an athlete, of Dewsbury and manager of the player in the member, that is a soccer player, of England women's national football team.",SELECT ?result WHERE { ?v4 <http://dbpedia.org/property/residence> ?v5 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerPlayer>. ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Athlete>. ?v2 <http://dbpedia.org/ontology/manager> ?result . ?result <http://dbpedia.org/ontology/birthPlace> ?v5 . ?v4 <http://dbpedia.org/ontology/residence> <http://dbpedia.org/resource/Dewsbury> . ?v5 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/United_Kingdom>. ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. ?v1 <http://dbpedia.org/ontology/team> <http://dbpedia.org/resource/England_women's_national_football_team> . ?v1 <http://dbpedia.org/ontology/team> ?v2 . },"```sparql
SELECT ?native WHERE {
  # Find the athlete resident of Dewsbury
  ?athlete dbo:residence ?residence .
  ?athlete dbo:nationality dbc:People_from_Dewsbury .
  
  # Ensure the athlete manages a player in the England women's national football team
  ?athlete dbo:managerOf ?player .
  ?player dbo:memberOf dbr_England_women%27s_national_football_team .

  # Check if the residence is an English settlement
  ?residence rdf:type dbo:Settlement .
  ?residence dbo:country dbc:England .

  # Find the native place (birthplace) of this residence
  ?residence dbo:birthPlace ?native .
}
```",6,10,7,3,2,3,2,20,0,0,1,0,0.0,0
192,19,test,"Give me the spouse of the spouse, that is a royalty, of Charles Martel of Anjou and child of the child of the parent of Anna of Hungary (Byzantine empress).",SELECT ?result WHERE { ?v0 <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Anna_of_Hungary_(Byzantine_empress)> . ?v2 <http://dbpedia.org/ontology/spouse> <http://dbpedia.org/resource/Charles_Martel_of_Anjou> . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v4 <http://dbpedia.org/property/father> ?v0 . ?v2 <http://dbpedia.org/ontology/spouse> ?result . ?result <http://dbpedia.org/ontology/parent> ?v4 . },"```sparql
SELECT ?spouseOfSpouse WHERE {
  # Step 1: Find Charles Martel of Anjou's spouse
  ?charlesMartel dbo:spouse ?firstSpouse .
  ?charlesMartel rdfs:label ""Charles Martel, Count of Anjou""@en .

  # Step 2: Check if this spouse is royalty and find their spouse (spouse of the spouse)
  OPTIONAL {
    ?firstSpouse dbo:spouse ?spouseOfSpouse .
    FILTER EXISTS { ?firstSpouse rdf:type dbo:RoyalFamilyMember }
  }

  # Step 3: Find Anna of Hungary's parent
  ?anna dbr:Anna_of_Hungary dbo:parent ?parent .

  # Step 4: Find the child of that parent
  OPTIONAL {
    ?parent dbo:child ?grandChild .
  }

  # Step 5: Find the child of this identified grandChild
  OPTIONAL {
    ?grandChild dbo:child ?greatGrandChild .
  }
}
```",5,6,6,3,2,3,2,20,0,0,1,0,0.0,0
456,57,test,"Give me the spouse of Danielle Spencer (Australian actress) and band of the band, that is a musical artist, of Dean Brody and professional in the alter ego of the reference, that is a fictional character, to Lamont Cranston (radio, film and television).","SELECT ?result WHERE { ?v0 <http://dbpedia.org/property/alterEgo> ?v5 . <http://dbpedia.org/resource/Dean_Brody> <http://dbpedia.org/ontology/associatedMusicalArtist> ?v3 . <http://dbpedia.org/resource/Danielle_Spencer_(Australian_actress)> <http://dbpedia.org/ontology/spouse> ?result . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?v0 <http://xmlns.com/foaf/0.1/name> ""Lamont Cranston (radio, film and television)""@en . ?result <http://dbpedia.org/property/occupation> ?v5 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/FictionalCharacter>. ?v3 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . }","```sparql
SELECT ?spouse ?band ?alterEgo WHERE {
  # Find Danielle Spencer's spouse
  ?danielle dbo:spouse ?spouse .
  ?danielle rdfs:label ""Danielle Spencer""@en .

  # Find Dean Brody's band
  ?dean dbo:musicalBand ?band .
  ?dean rdfs:label ""Dean Brody""@en .

  # Ensure the band is a musical artist
  ?band rdf:type dbo:MusicalArtist .

  # Identify Lamont Cranston's alter ego
  ?lamont dbo:fictionalCharacter ?alterEgo .
  ?lamont rdfs:label ""Lamont Cranston""@en .

  # Find professional in the alter ego of Lamont Cranston
  OPTIONAL {
    ?alterEgo dbo:professionalIn ?band .
  }
}
```",6,8,7,3,3,3,3,71,0,0,1,0,0.0,0
274,28,test,"Give me the professional in the designer of Tetris Classic and band member of the person born, that is a musical artist, as John Birks Gillespie and associated musical artist of the actor, that is a musical artist, of Imagine the Sound.","SELECT ?result WHERE { ?v5 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?result <http://dbpedia.org/ontology/associatedMusicalArtist> ?v1 . <http://dbpedia.org/resource/Imagine_the_Sound> <http://dbpedia.org/property/starring> ?v5 . ?v1 <http://dbpedia.org/property/birthName> ""John Birks Gillespie""@en . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. <http://dbpedia.org/resource/Tetris_Classic> <http://dbpedia.org/property/designer> ?v3 . ?result <http://dbpedia.org/property/occupation> ?v3 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. }","```sparql
SELECT ?designerRole ?gillespieBandMember ?soundActor ?associatedArtist WHERE {
  # Designer of Tetris Classic
  ?tetris dbo:creator ?designer .
  ?designer rdfs:label ""Tetris Classic""@en .
  ?designer dbo:profession ?designerRole .

  # Band member associated with Dizzy Gillespie
  ?gillespie dbo:bandMember ?gillespieBandMember .
  ?gillespie rdfs:label ""John Birks Gillespie""@en .
  
  # Actor in Imagine the Sound and their associated musical artist
  ?soundFilm dbo:actor ?soundActor .
  ?soundFilm rdfs:label ""Imagine the Sound""@en .
  ?soundActor dbo:associatedMusicalArtist ?associatedArtist .
}
```",6,8,7,2,3,2,3,28,0,0,3,0,0.0,0
274,27,test,"Give me the associated musical artist of the actor, that is a musical artist, of Imagine the Sound and band member of Dizzy Gillespie and professional in the designer of Tetris Classic.",SELECT ?result WHERE { ?result <http://dbpedia.org/property/occupation> ?v3 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?v0 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . <http://dbpedia.org/resource/Imagine_the_Sound> <http://dbpedia.org/property/starring> ?v0 . ?result <http://dbpedia.org/ontology/associatedMusicalArtist> <http://dbpedia.org/resource/Dizzy_Gillespie> . <http://dbpedia.org/resource/Tetris_Classic> <http://dbpedia.org/property/designer> ?v3 . },"```sparql
SELECT ?actor ?musicalArtist WHERE {
  # Find actor associated with ""Imagine the Sound""
  ?actor dbo:associatedWith ?project .
  ?project rdfs:label ""Imagine the Sound""@en .

  # Ensure this actor is also a musical artist
  ?actor dbo:musicalArtist ?musicalArtist .

  # Check if this musical artist was a band member of Dizzy Gillespie
  OPTIONAL {
    ?musicalArtist dbo:bandMemberOf ?dizzyGillespie .
    ?dizzyGillespie rdfs:label ""Dizzy Gillespie""@en .
  }

  # Find professional connection to the designer of Tetris Classic
  OPTIONAL {
    ?musicalArtist dbo:professionalConnection ?tetrisDesigner .
    ?tetrisDesigner dbo:designed ?tetrisClassic .
    ?tetrisClassic rdfs:label ""Tetris Classic""@en .
  }
}
```",5,6,6,2,3,2,3,28,0,0,3,0,0.0,0
926,65,test,"Give me the successor of the child of the spouse of Şermi Kadın and father of the father of Abdulaziz and child of the father, that is a royalty, of Mustafa III.",SELECT ?result WHERE { <http://dbpedia.org/resource/Mustafa_III> <http://dbpedia.org/property/father> ?v0 . ?v0 <http://dbpedia.org/ontology/child> ?result . ?v5 <http://dbpedia.org/ontology/successor> ?result . ?v5 <http://dbpedia.org/property/father> ?v1 . ?v2 <http://dbpedia.org/property/father> ?result . <http://dbpedia.org/resource/Abdulaziz> <http://dbpedia.org/property/father> ?v2 . ?v1 <http://dbpedia.org/ontology/spouse> <http://dbpedia.org/resource/Şermi_Kadın> . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. },"```sparql
SELECT ?successor WHERE {
  # Find Şermi Kadın's spouse
  ?şermiKadin dbo:spouse ?spouse .
  ?şermiKadin rdfs:label ""Şermi Kadın""@en .

  # Identify the child of Şermi Kadın's spouse
  OPTIONAL { 
    ?spouse dbo:child ?child .
  }

  # Find Abdulaziz and his grandfather
  ?abdulaziz rdfs:label ""Abdulaziz""@en .
  ?abdulaziz dbo:parent ?father .
  ?father dbo:parent ?grandfather .

  # Identify a royal child of the grandfather related to Mustafa III
  OPTIONAL {
    ?mustafaIII rdfs:label ""Mustafa III""@en .
    ?grandfather dbo:child ?royalChild .
    FILTER (regex(str(?royalChild), ""Royal"", ""i""))
    OPTIONAL { 
      ?royalChild dbo:parent ?mustafaIII .
    }
  }

  # Find the successor of this royal child
  OPTIONAL {
    ?royalChild dbo:successor ?successor .
  }
}
```",7,8,8,3,3,3,3,71,0,0,1,0,0.0,0
926,64,test,"Give me the successor of Mustafa III and father of the father of the spouse of Neşerek Kadın and child of the father, that is a royalty, of the parent, that is a royalty, of Beyhan Sultan (daughter of Mustafa III).",SELECT ?result WHERE { ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. <http://dbpedia.org/resource/Neşerek_Kadın> <http://dbpedia.org/ontology/spouse> ?v4 . ?v2 <http://dbpedia.org/property/father> ?result . <http://dbpedia.org/resource/Mustafa_III> <http://dbpedia.org/ontology/successor> ?result . <http://dbpedia.org/resource/Beyhan_Sultan_(daughter_of_Mustafa_III)> <http://dbpedia.org/ontology/parent> ?v5 . ?v4 <http://dbpedia.org/property/father> ?v2 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v5 <http://dbpedia.org/property/father> ?v0 . ?v0 <http://dbpedia.org/ontology/child> ?result . },"```sparql
SELECT ?desiredIndividual WHERE {
  # Step 1: Find Mustafa III's successor
  ?mustafaIII dbo:successor ?successor .
  ?mustafaIII rdfs:label ""Mustafa III""@en .

  # Step 2: Identify Neşerek Kadın's spouse and their parent
  ?neserekKadin dbo:spouse ?spouse .
  ?neserekKadin rdfs:label ""Neşerek Kadın""@en .
  
  ?spouse dbo:parent ?fatherOfSpouse .

  # Step 3: Find Beyhan Sultan, daughter of Mustafa III, and her royal lineage
  ?beyhanSultan dbo:parent ?mustafaIII .
  ?beyhanSultan rdfs:label ""Beyhan Sultan""@en .

  OPTIONAL {
    ?royalChild dbo:parent ?mustafaIII .
    FILTER (regex(str(?royalChild), ""Prince|Princess"", ""i""))
  }

  # Step 4: Combine information to find the desired individual
  ?fatherOfSpouse dbo:child ?desiredIndividual .
  FILTER (?desiredIndividual IN (?royalChild))
}
```",7,9,8,3,3,3,3,71,0,0,1,0,0.0,0
965,60,test,"Give me the spouse of the spouse of the parent of Louise Mountbatten and parent of the person born, that is a noble, as the birth name of George Mountbatten, 2nd Marquess of Milford Haven.","SELECT ?result WHERE { ?v0 <http://dbpedia.org/property/birthName> ?v5 . ?v0 <http://dbpedia.org/ontology/parent> ?result . ?v4 <http://dbpedia.org/ontology/spouse> ?v2 . ?result <http://dbpedia.org/ontology/spouse> ?v2 . <http://dbpedia.org/resource/Louise_Mountbatten> <http://dbpedia.org/ontology/parent> ?v4 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Noble>. <http://dbpedia.org/resource/George_Mountbatten,_2nd_Marquess_of_Milford_Haven> <http://dbpedia.org/property/birthName> ?v5 . }","```sparql
SELECT ?spouseOfSpouse WHERE {
  # Step 1: Find Louise Mountbatten's parent
  ?louise dbo:parent ?parent .
  ?louise rdfs:label ""Louise Mountbatten""@en .

  # Step 2: Find the spouse of this parent
  OPTIONAL { 
    ?parent dbo:spouse ?spouse .
  }

  # Step 3: Identify a noble child born to this spouse
  OPTIONAL {
    ?spouse dbo:child ?nobleChild .
    ?nobleChild dbo:nationality dbr:Nobility .
    ?nobleChild rdfs:label ""George Mountbatten, 2nd Marquess of Milford Haven""@en .
  }

  # Step 4: Find the spouse of this noble person
  OPTIONAL {
    ?nobleChild dbo:spouse ?spouseOfSpouse .
  }
}
```",6,7,7,3,2,3,3,71,2,59925,0,3.33739382915881e-05,1.0,6.674564901800463e-05
976,66,test,"Give me the office of the leader, that is a politician, of Grand National Assembly of Turkey and office of the person born as the birth name of Naci Bostancı and office of the mayor, that is a politician and an office holder and Turkish, of Nation Alliance (Turkey).",SELECT ?result WHERE { <http://dbpedia.org/resource/Grand_National_Assembly_of_Turkey> <http://dbpedia.org/ontology/leader> ?v3 . <http://dbpedia.org/resource/Nation_Alliance_(Turkey)> <http://dbpedia.org/property/leader> ?v6 . ?v6 <http://dbpedia.org/ontology/nationality> <http://dbpedia.org/resource/Turkey>. ?v6 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v6 <http://dbpedia.org/property/office> ?result . ?v0 <http://dbpedia.org/property/birthName> ?v5 . <http://dbpedia.org/resource/Naci_Bostancı> <http://dbpedia.org/property/birthName> ?v5 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v0 <http://dbpedia.org/property/office> ?result . ?v6 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v3 <http://dbpedia.org/property/office> ?result . },"```sparql
# Query for the leader of the Grand National Assembly of Turkey
SELECT ?office WHERE {
  ?leader dbo:position ?office .
  ?leader dbo:organization dbr:Grand_National_Assembly_of_Turkey .
  ?leader rdf:type dbo:Politician .
}

UNION

# Query for the office of Naci Bostancı
SELECT ?office WHERE {
  ?person foaf:name ""Naci Bostancı""@en .
  ?person dbo:currentOffice ?office .
}

UNION

# Query for the mayor associated with Nation Alliance (Turkey)
SELECT ?office WHERE {
  ?mayor dbo:position ?office .
  ?mayor dbo:memberOf dbr:Nation_Alliance_(Turkey) .
  ?mayor rdf:type dbo:Politician .
  ?mayor dbo:nationality dbr:Turkey .
}
```",7,11,8,3,3,3,3,71,0,0,1,0,0.0,0
917,70,test,"Give me the child of the father of the child, that is a royalty, of Kamehameha III and parent of the child, that is a royalty, of Kamehameha IV and child of the father of the spouse, that is a royalty, of Leleiohoku I.",SELECT ?result WHERE { ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v1 <http://dbpedia.org/property/father> ?v6 . ?result <http://dbpedia.org/ontology/child> ?v3 . <http://dbpedia.org/resource/Kamehameha_III> <http://dbpedia.org/ontology/child> ?v5 . ?v5 <http://dbpedia.org/property/father> ?v0 . ?v3 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Kamehameha_IV> . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v1 <http://dbpedia.org/ontology/spouse> <http://dbpedia.org/resource/Leleiohoku_I> . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?result <http://dbpedia.org/property/father> ?v0 . ?result <http://dbpedia.org/ontology/parent> ?v6 . },"```sparql
SELECT ?result WHERE {
  # Step a: Child of the Father of the Child, that is Royalty, of Kamehameha III
  ?childKIII dbo:parent ?kamehamehaIII .
  ?kamehamehaIII rdfs:label ""Kamehameha III""@en .",8,11,9,3,3,3,3,71,0,0,1,0,0.0,0
987,67,test,"Give me the birth place of the actor of the show, that is a film, with Emir Hadžihafizbegović and entity in the region, that is a country, of the time zone, that is a sports event, in Canicosa de la Sierra and birth place of Dado Polumenta.",SELECT ?result WHERE { <http://dbpedia.org/resource/Canicosa_de_la_Sierra> <http://dbpedia.org/ontology/timeZone> ?v4 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Film>. ?v5 <http://dbpedia.org/ontology/birthPlace> ?result . ?v0 <http://dbpedia.org/property/timeZone> ?v4 . ?v1 <http://dbpedia.org/ontology/starring> <http://dbpedia.org/resource/Emir_Hadžihafizbegović> . ?v1 <http://dbpedia.org/property/starring> ?v5 . <http://dbpedia.org/resource/Dado_Polumenta> <http://dbpedia.org/ontology/birthPlace> ?result . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsEvent>. ?result <http://dbpedia.org/ontology/country> ?v0 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. },"```sparql
# Step 1: Find films featuring Emir Hadžihafizbegović
SELECT ?film WHERE {
  ?film dbo:starringEmirHadžihafizbegović dbp:Emir_Hadžihafizbegović .
}

# Step 2: Find an actor from the film and their birthplace
SELECT ?actorBirthPlace WHERE {
  ?film dbo:starring ?actor .
  ?actor dbo:birthPlace ?actorBirthPlace .
}

# Step 3: Identify a sports event associated with the time zone of Canicosa de la Sierra
SELECT ?sportsEvent WHERE {
  ?timeZone dcterms:spatial ?region .
  ?region rdfs:label ""Canicosa de la Sierra""@en .
  ?sportsEvent dbo:locationTimezone ?timeZone .
}

# Step 4: Determine the country corresponding to this region/time zone
SELECT ?country WHERE {
  ?region dbo:country ?country .
}

# Step 5: Find Dado Poldervaart's birthplace
SELECT ?dadoBirthPlace WHERE {
  dbp:Dado_Poldervaart dbo:birthPlace ?dadoBirthPlace .
}
```",7,10,8,3,3,3,3,71,0,0,1,0,0.0,0
98,27,test,"Give me the region of Philippine Standard Time and birth place of the person born as Paolo Elito M. Ballesteros IV and entity in the region, that is a country, of Philippine Standard Time.","SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. ?result <http://dbpedia.org/ontology/timeZone> <http://dbpedia.org/resource/Philippine_Standard_Time> . ?v2 <http://dbpedia.org/ontology/birthPlace> ?result . ?v2 <http://dbpedia.org/property/birthName> ""Paolo Elito M. Ballesteros IV""@en . ?v1 <http://dbpedia.org/property/timeZone> <http://dbpedia.org/resource/Philippine_Standard_Time> . ?result <http://dbpedia.org/ontology/country> ?v1 . }","```sparql
SELECT ?region ?birthPlace ?country WHERE {
  # Find the region for Philippine Standard Time
  ?pst dbo:timeZoneName ""Philippine Standard Time"" .
  ?pst dbo:location ?region .

  # Find birthplace of Paolo Elito M. Ballesteros IV
  ?person foaf:name ""Paolo Elito M. Ballesteros IV""@en ;
          dbo:birthPlace ?birthPlace .
  
  # Ensure the person is correctly identified
  FILTER(CONTAINS(LCASE(str(?person)), ""paolo elito m. ballesteros iv""))

  # Find a country in the region of Philippine Standard Time
  ?region dbo:country ?country .
  FILTER (isLiteral(?country) && lang(?country) = ""en"")
}
```",5,6,6,2,3,2,3,28,0,0,2,0,0.0,0
839,66,test,"Give me the band of the member of Böhse Onkelz and band of the person born, that is a musical artist, as Kevin Richard Russell and band of the band, that is a musical artist, of the professional in Musician.","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/bandMember> ?v2 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?v3 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . <http://dbpedia.org/resource/Böhse_Onkelz> <http://dbpedia.org/ontology/bandMember> ?v6 . ?v3 <http://dbpedia.org/property/birthName> ""Kevin Richard Russell""@en . ?result <http://dbpedia.org/ontology/bandMember> ?v6 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?v1 <http://dbpedia.org/ontology/associatedMusicalArtist> ?v2 . ?v1 <http://dbpedia.org/property/occupation> ""Musician""@en . }","```sparql
# Query for the band of a member of Böhse Onkelz
SELECT ?member ?otherBand WHERE {
  ?boMember dbo:band ""Böhse Onkelz""@en .
  ?boMember foaf:name ?member .
  OPTIONAL { 
    ?boMember dbo:band ?otherBand .
  }
}

# Query for the band of Kevin Richard Russell (Reverend Horton Heat)
SELECT ?band WHERE {
  ?kevin foaf:name ""Kevin Richard Russell""@en ;
         dbo:alias ""Reverend Horton Heat""@en ;
         dbo:band ?band .
}

# Query for a musician and their associated bands
SELECT ?musician ?primaryBand ?associatedBand WHERE {
  ?musician dbo:occupation dbc:Musicians ;
            foaf:name ?name .
  ?musician dbo:band ?primaryBand .
  OPTIONAL { 
    ?primaryBand dbo:collaboratesWith ?associatedBand .
  }
}
```",7,9,8,3,3,3,3,71,0,0,1,0,0.0,0
124,58,test,"Give me the military force of the force, that is a societal event and a military conflict, of the person born on 1850-06-24 and military force of the war, that is an event and a military conflict and a societal event, of Frank Rhodes (British Army officer) and commander in Mahdist War.","SELECT ?result WHERE { <http://dbpedia.org/resource/Frank_Rhodes_(British_Army_officer)> <http://dbpedia.org/ontology/battle> ?v5 . ?v1 <http://dbpedia.org/ontology/birthDate> ""1850-06-24""^^<http://www.w3.org/2001/XMLSchema#date> . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. <http://dbpedia.org/resource/Mahdist_War> <http://dbpedia.org/ontology/commander> ?result . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?result <http://dbpedia.org/ontology/battle> ?v2 . ?result <http://dbpedia.org/ontology/battle> ?v5 . ?v2 <http://dbpedia.org/ontology/commander> ?v1 . }","```sparql
# Query for the person born on 1850-06-24
SELECT ?person ?militaryForce WHERE {
  ?person dbo:birthDate ""1850-06-24""^^xsd:date .
  OPTIONAL { 
    ?event dbo:agent ?person ;
           a dbo:SocietalEvent, dbo:MilitaryConflict .
    ?event dbo:militaryForce ?militaryForce .
  }
}

# Query for Frank Rhodes and his military involvement
SELECT ?frankRhodes ?war ?militaryForce WHERE {
  ?frankRhodes rdfs:label ""Frank Rhodes (British Army officer)""@en ;
               dbo:nationality dbr:United_Kingdom ;
               dbo:birthDate ?birthDate .
  
  OPTIONAL { 
    ?commanderRole dbo:agent ?frankRhodes ;
                   dbo:roleName ""Commander""@en ;
                   dbo:event ?war .
    ?war a dbo:MilitaryConflict, dbo:SocietalEvent ;
         rdfs:label ?warLabel .
    FILTER (CONTAINS(LCASE(?warLabel), ""Mahdist War""))
  }
  
  OPTIONAL {
    ?war dbo:militaryForce ?militaryForce .
  }
}
```",6,11,7,3,3,3,3,71,0,0,3,0,0.0,0
773,65,test,"Give me the parent of the child, that is a royalty, of Louis the German and parent of the successor of the child, that is a royalty, of Louis the Pious and spouse of the father of Charles the Fat.",SELECT ?result WHERE { ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. <http://dbpedia.org/resource/Louis_the_Pious> <http://dbpedia.org/ontology/child> ?v0 . <http://dbpedia.org/resource/Charles_the_Fat> <http://dbpedia.org/property/father> ?v4 . ?v3 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Louis_the_German> . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v0 <http://dbpedia.org/ontology/successor> ?v6 . ?v3 <http://dbpedia.org/ontology/parent> ?result . ?result <http://dbpedia.org/ontology/child> ?v6 . ?v4 <http://dbpedia.org/ontology/spouse> ?result . },"```sparql
SELECT ?finalParent WHERE {
  # Step 1: Find a child of Louis the German who is royalty
  ?louisGerman dbo:child ?royalChild .
  ?louisGerman rdfs:label ""Louis the German""@en .
  
  # Ensure the child is royalty (e.g., king, emperor)
  FILTER EXISTS { 
    ?royalChild rdf:type dbo:Monarch .
  }
  
  # Step 2: Find parent of this royal child
  ?royalChild dbo:parent ?parentOfRoyalChild .

  # Step 3: Identify Louis the Pious' successor who is royalty
  ?louisPious dbo:child ?successor .
  ?louisPious rdfs:label ""Louis the Pious""@en .
  
  # Ensure the successor is royalty (e.g., king, emperor)
  FILTER EXISTS { 
    ?successor rdf:type dbo:Monarch .
  }
  
  # Step 4: Determine parent of this royal successor
  ?successor dbo:parent ?parentOfSuccessor .

  # Step 5: Find father of Charles the Fat
  ?charlesFat dbo:parent ?fatherOfCharlesFat .
  ?charlesFat rdfs:label ""Charles the Fat""@en .

  # Step 6: Identify spouse of this father
  ?fatherOfCharlesFat dbo:spouse ?spouseOfFather .

  # Final step: Ensure the parent from step 2 matches the parent from step 4 and is related to the spouse found in step 6
  FILTER (?parentOfRoyalChild = ?parentOfSuccessor)
  BIND(?spouseOfFather AS ?finalParent)
}
```",7,9,8,3,3,3,3,71,0,0,1,0,0.0,0
83,18,test,"Give me the ruling party in the birthplace, that is a town and Brazilian and a soccer club, of the member, that is a sports manager, of Kedah FA and party of the governor of Dilma Rousseff.",SELECT ?result WHERE { ?v2 <http://dbpedia.org/property/leaderParty> ?result . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerClub>. ?v1 <http://dbpedia.org/ontology/team> <http://dbpedia.org/resource/Kedah_FA> . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Town>. ?v2 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Brazil>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsManager>. ?v3 <http://dbpedia.org/ontology/party> ?result . ?v1 <http://dbpedia.org/ontology/birthPlace> ?v2 . <http://dbpedia.org/resource/Dilma_Rousseff> <http://dbpedia.org/property/governor> ?v3 . },"```sparql
SELECT ?rulingParty WHERE {
  # Step 1: Identify the sports manager associated with Kedah FA
  ?manager dbo:memberOfKedahFA true .
  ?manager rdf:type dbo:SportsManager .

  # Step 2: Find their birthplace, ensuring it is a Brazilian town with a soccer club
  ?manager dbo:birthPlace ?town .
  ?town dbo:country dbr:Brazil .
  ?town dbo:type dbr:Town .
  ?town dbo:soccerClub ?club .

  # Step 3: Determine the ruling party in that town
  ?town dbo:rulingParty ?rulingParty .

  # Step 4: Identify the political party of the governor during Dilma Rousseff's presidency
  OPTIONAL {
    ?dilmaGovernor dbo:governorOf dbr:Dilma_Rousseff .
    ?dilmaGovernor dbo:politicalParty ?party .
  }
}
```",5,9,6,3,2,3,2,20,0,0,1,0,0.0,0
826,68,test,"Give me the predecessor of the parent of Prince Friedrich of Hesse and by Rhine and successor of the child, that is a royalty, of the reference, that is a royalty, to Louis I and spouse of the child of the father of Anna Magdalena Appel.","SELECT ?result WHERE { <http://dbpedia.org/resource/Anna_Magdalena_Appel> <http://dbpedia.org/property/father> ?v5 . ?v4 <http://dbpedia.org/ontology/spouse> ?result . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. <http://dbpedia.org/resource/Prince_Friedrich_of_Hesse_and_by_Rhine> <http://dbpedia.org/ontology/parent> ?v3 . ?v0 <http://dbpedia.org/ontology/child> ?v7 . ?result <http://dbpedia.org/ontology/successor> ?v3 . ?v7 <http://dbpedia.org/ontology/successor> ?result . ?v4 <http://dbpedia.org/property/father> ?v5 . ?v7 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v0 <http://xmlns.com/foaf/0.1/name> ""Louis I""@en . }","```sparql
SELECT ?result WHERE {
  # Find Prince Friedrich of Hesse and by Rhine and his parent
  ?friedrich dbo:parent ?parent .
  ?friedrich rdfs:label ""Prince Friedrich of Hesse and by Rhine""@en .

  # Find the predecessor of this parent
  OPTIONAL { 
    ?predecessor dbo:successor ?parent .
  }

  # Identify Louis I and his royal child
  ?louis dbo:child ?royalChild .
  ?louis rdfs:label ""Louis I, King of Bavaria""@en .
  FILTER (regex(str(?royalChild), ""Royal"", ""i""))

  # Find the successor of this royal child
  OPTIONAL {
    ?successor dbo:predecessor ?royalChild .
  }

  # Identify Anna Magdalena Appel and her father's child
  ?annaParent dbo:child ?father .
  ?anna rdfs:label ""Anna Magdalena Appel""@en .

  # Find the spouse of this child
  OPTIONAL {
    ?spouse dbo:spouse ?fatherChild .
    ?fatherChild dbo:parent ?father .
  }

  # Combine results to find the final entity
  BIND(?predecessor AS ?result)
}
```",8,10,9,3,3,3,3,71,0,0,1,0,0.0,0
926,63,test,"Give me the child of the father, that is a royalty, of Mustafa III and father of the father of the spouse of Neşerek Kadın and successor of the child of Ahmed III.",SELECT ?result WHERE { <http://dbpedia.org/resource/Neşerek_Kadın> <http://dbpedia.org/ontology/spouse> ?v3 . ?v3 <http://dbpedia.org/property/father> ?v1 . <http://dbpedia.org/resource/Mustafa_III> <http://dbpedia.org/property/father> ?v0 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v1 <http://dbpedia.org/property/father> ?result . ?v0 <http://dbpedia.org/ontology/child> ?result . ?v5 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Ahmed_III> . ?v5 <http://dbpedia.org/ontology/successor> ?result . },"```sparql
SELECT ?child WHERE {
  # Step A: Find Mustafa III's father who is royalty
  ?mustafaIII dbo:parent ?father .
  ?mustafaIII rdfs:label ""Mustafa III""@en .
  
  OPTIONAL { 
    ?father rdf:type dbo:Monarch .
  }
  
  # Step B: Identify any child of this royal father
  ?father dbo:child ?child .

  # Step C: Find spouse of Neşerek Kadın and their father
  ?neserekKadin dbo:spouse ?spouse .
  ?neserekKadin rdfs:label ""Neşerek Kadın""@en .
  
  OPTIONAL {
    ?spouse dbo:parent ?fatherOfSpouse .
  }

  # Step D: Find a child of Ahmed III and their successor
  ?ahmedIII dbo:child ?childAhmed .
  ?ahmedIII rdfs:label ""Ahmed III""@en .

  OPTIONAL {
    SPARQL
    ?childAhmed dbo:successor ?successor .
  }
  
  # Final condition to match the required individual
  FILTER (?child = ?fatherOfSpouse && ?child = ?successor)
}
```",7,8,8,3,3,3,3,71,0,0,1,0,0.0,0
216,27,test,Give me the office of Tim Nicholls and party of the awardee of Australian Defence Medal and administration of the designer of Woolfe: The Red Hood Diaries.,SELECT ?result WHERE { <http://dbpedia.org/resource/Woolfe:_The_Red_Hood_Diaries> <http://dbpedia.org/property/designer> ?v0 . ?v3 <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/Australian_Defence_Medal> . ?result <http://dbpedia.org/property/leader> ?v0 . <http://dbpedia.org/resource/Tim_Nicholls> <http://dbpedia.org/property/office> ?result . ?v3 <http://dbpedia.org/ontology/party> ?result . },"```sparql
SELECT ?office ?partyAffiliation ?administration WHERE {
  # Office of Tim Nicholls
  ?timNicholls dbo:office ?office .
  ?timNicholls rdfs:label ""Tim Nicholls""@en .

  # Party of awardee of Australian Defence Medal
  OPTIONAL {
    ?awardee dbo:awardReceived ?australianDefenceMedal .
    ?australianDefenceMedal rdfs:label ""Australian Defence Medal""@en .
    ?awardee dbo:partyAffiliation ?partyAffiliation .
  }

  # Administration of designer of Woolfe: The Red Hood Diaries
  OPTIONAL {
    ?designer dbo:designed ?woolfeRedHoodDiaries .
    ?woolfeRedHoodDiaries rdfs:label ""Woolfe: The Red Hood Diaries""@en .
    ?designer dbo:worksFor ?administration .
  }
}
```",5,5,6,2,3,2,3,28,0,0,1,0,0.0,0
456,67,test,"Give me the band of the band, that is a musical artist, of the band of Alan Doyle and spouse of Danielle Spencer (Australian actress) and professional in the alter ego of the reference, that is a fictional character, to Lamont Cranston (radio, film and television).","SELECT ?result WHERE { <http://dbpedia.org/resource/Danielle_Spencer_(Australian_actress)> <http://dbpedia.org/ontology/spouse> ?result . ?result <http://dbpedia.org/property/occupation> ?v6 . <http://dbpedia.org/resource/Alan_Doyle> <http://dbpedia.org/ontology/associatedMusicalArtist> ?v1 . ?v1 <http://dbpedia.org/ontology/associatedMusicalArtist> ?v3 . ?v0 <http://dbpedia.org/property/alterEgo> ?v6 . ?v3 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/FictionalCharacter>. ?v0 <http://xmlns.com/foaf/0.1/name> ""Lamont Cranston (radio, film and television)""@en . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. }","```sparql
SELECT ?bandArtist WHERE {
  # Find Alan Doyle's band
  ?doyle dbo:memberOfBand ?greatBigSea .
  ?greatBigSea rdfs:label ""Great Big Sea""@en .

  # Find the spouse of Danielle Spencer
  ?spencer dbo:spouse ?lukeArnold .
  ?spencer rdfs:label ""Danielle Spencer""@en .

  # Identify Lamont Cranston's alter ego
  ?cranston dbo:fictionalCharacterName ?theShadow .
  ?cranston rdfs:label ""Lamont Cranston""@en .
  
  # Find the professional role related to The Shadow
  OPTIONAL {
    ?actor dbo:profession ?role .
    FILTER (regex(str(?role), ""Actor|Voice Actor"", ""i""))
    ?actor dbo:fictionalCharacterName ?theShadow .
  }

  # Find a band associated with Luke Arnold or the actor of The Shadow
  OPTIONAL {
    ?lukeArnold dbo:band ?bandArtist .
    UNION
    ?actor dbo:band ?bandArtist .
  }
}
```",7,9,8,3,3,3,3,71,0,0,1,0,0.0,0
170,25,test,Give me the birth place of the awardee of People's Artist of Russia and domain of Mayor and entity in the work of International Energy Agency.,"SELECT ?result WHERE { ?v3 <http://dbpedia.org/property/author> <http://dbpedia.org/resource/International_Energy_Agency> . ?v4 <http://dbpedia.org/ontology/birthPlace> ?result . ?v4 <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/People's_Artist_of_Russia> . ?result <http://dbpedia.org/ontology/leaderTitle> ""Mayor""@en . ?result <http://dbpedia.org/ontology/country> ?v3 . }","```sparql
# Query for birthplace of an awardee of People's Artist of Russia
SELECT ?birthPlace WHERE {
  ?person dbo:title ""People's Artist of Russia"" .
  ?person dbo:birthPlace ?birthPlace .
  FILTER EXISTS { ?person dbo:award ""People's Artist of Russia"" }
}

# Query for domain of Mayor
SELECT ?domain WHERE {
  ?mayor rdf:type dbo:Mayor .
  ?mayor dbo:fieldOfActivity ?domain .
}

# Query for entity in the work of International Energy Agency
SELECT ?entity WHERE {
  ?iea dbo:work ?entity .
  ?iea rdfs:label ""International Energy Agency""@en .
}
```",5,5,6,2,3,2,3,28,0,0,3,0,0.0,0
955,19,test,"Give me the band of the band member, that is a musical artist and an artist, of the reference, that is a band and a group and an organisation, to Street Dogs and band of the writer of Don't Forget Your Roots (album).","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/bandMember> ?v2 . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?result <http://dbpedia.org/ontology/bandMember> ?v4 . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. ?v4 <http://dbpedia.org/ontology/associatedMusicalArtist> ?v0 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Band>. <http://dbpedia.org/resource/Don't_Forget_Your_Roots_(album)> <http://dbpedia.org/property/writer> ?v2 . ?v0 <http://xmlns.com/foaf/0.1/name> ""Street Dogs""@en . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Group>. }","```sparql
SELECT ?bandMemberBand ?writerBand WHERE {
  # Find bands related to Street Dogs
  ?reference dbo:relatedStreetDogs ?streetDogs .
  ?reference a dbo:Band ;
             a dbo:Group ;
             a dbo:Organisation .

  # Find a band member who is both a musical artist and an artist
  ?bandMember dbo:memberOf ?reference .
  ?bandMember dbo:occupationMusicalArtist ?musicalArtist .
  ?bandMember dbo:occupationArtist ?artist .

  # Determine the band of this band member
  ?bandMemberBand dbo:member ?bandMember .

  # Find the writer of ""Don't Forget Your Roots"" album
  ?album dbo:title ""Don't Forget Your Roots""@en ;
         dbo:writer ?writer .

  # Identify the band associated with this writer
  ?writerBand dbo:member ?writer .
}
```",5,10,6,3,2,3,2,20,0,0,1,0,0.0,0
216,28,test,Give me the party of the awardee of Australian Defence Medal and office of the mayor of Ros Bates and administration of the designer of Woolfe: The Red Hood Diaries.,SELECT ?result WHERE { ?result <http://dbpedia.org/property/leader> ?v5 . <http://dbpedia.org/resource/Woolfe:_The_Red_Hood_Diaries> <http://dbpedia.org/property/designer> ?v5 . ?v3 <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/Australian_Defence_Medal> . <http://dbpedia.org/resource/Ros_Bates> <http://dbpedia.org/property/leader> ?v1 . ?v1 <http://dbpedia.org/property/office> ?result . ?v3 <http://dbpedia.org/ontology/party> ?result . },"```sparql
# Query for the party of the awardee of Australian Defence Medal
SELECT ?party WHERE {
  ?person dbo:award dbr:Australian_Defence_Medal .
  ?person dbo:partyAffiliation ?party .
}

UNION

# Query for the office of Ros Bates as mayor
SELECT ?office WHERE {
  ?rosBates rdfs:label ""Ros Bates""@en ;
            dbo:officeHeld ?office .
}

UNION

# Query for the administration of the designer of Woolfe: The Red Hood Diaries
SELECT ?administration WHERE {
  ?game dbr:Woolfe:_The_Red_Hood_Diaries ;
        dbo:creator ?designer .
  OPTIONAL { 
    ?designer dbo:administration ?administration .
  }
}
```",6,6,7,2,3,2,3,28,0,0,1,0,0.0,0
18,25,test,"Give me the parent of the professional in Actress and alumnus of Marymount College, Tarrytown and professional in the award of Ana María Sánchez de Ríos.","SELECT ?result WHERE { ?result <http://dbpedia.org/property/occupation> ?v3 . ?result <http://dbpedia.org/ontology/child> ?v0 . ?v0 <http://dbpedia.org/property/occupation> ""Actress""@en . ?result <http://dbpedia.org/ontology/almaMater> <http://dbpedia.org/resource/Marymount_College,_Tarrytown> . <http://dbpedia.org/resource/Ana_María_Sánchez_de_Ríos> <http://dbpedia.org/property/awards> ?v3 . }","```sparql
SELECT ?parent WHERE {
  # Find actress who is an alumnus of Marymount College, Tarrytown
  ?actress dbo:almaMater dbr:Marymount_College,_Tarrytown ;
           dbo:profession dbr:Actress .
  
  # Ensure the actress has a professional connection with Ana María Sánchez de Ríos
  OPTIONAL {
    ?anaMaría dbo:profession dbr:Ana_María_Sánchez_de_Ríos .
    ?actress dbo:worksFor|dbo:colleagueOf ?anaMaría .
  }
  
  # Retrieve the parent of this actress
  ?actress dbo:parent ?parent .
}
```",5,5,6,2,3,2,3,28,0,0,1,0,0.0,0
773,58,test,"Give me the spouse of Louis the German and parent of the child, that is a royalty, of the father, that is an office holder and a royalty, of Carloman of Bavaria and parent of the successor of Charles the Bald.",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/child> ?v5 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v2 <http://dbpedia.org/ontology/parent> ?result . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. <http://dbpedia.org/resource/Charles_the_Bald> <http://dbpedia.org/ontology/successor> ?v5 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. <http://dbpedia.org/resource/Carloman_of_Bavaria> <http://dbpedia.org/property/father> ?v1 . <http://dbpedia.org/resource/Louis_the_German> <http://dbpedia.org/ontology/spouse> ?result . ?v2 <http://dbpedia.org/property/father> ?v1 . },"```sparql
SELECT ?spouseOfLouisTheGerman WHERE {
  # Step 1: Find the spouse of Louis the German
  ?louisTheGerman dbo:spouse ?spouseOfLouisTheGerman .
  ?louisTheGerman rdfs:label ""Louis the German""@en .

  # Step 2: Identify a child of this spouse who is royalty
  OPTIONAL {
    ?child dbo:parent ?spouseOfLouisTheGerman .
    ?child rdf:type dbo:Monarch .
  }

  # Step 3: Find the father of this royal child, ensuring he's an office holder and royalty
  OPTIONAL {
    ?fatherOfChild dbo:parent ?child .
    ?fatherOfChild rdf:type dbo:Monarch ;
                   dbo:officeHolder ?office .
  }

  # Step 4: Identify Carloman of Bavaria's father who is a royalty and office holder
  ?carlomanOfBavaria dbo:parent ?fatherOfCarloman .
  ?carlomanOfBavaria rdfs:label ""Carloman of Bavaria""@en .
  FILTER (?fatherOfCarloman rdf:type dbo:Monarch ;
              dbo:officeHolder ?office)

  # Step 5: Find the successor of Charles the Bald
  ?charlesTheBald dbo:successor ?successor .
  ?charlesTheBald rdfs:label ""Charles the Bald""@en .

  # Step 6: Determine the parent of this successor
  OPTIONAL {
    ?parentOfSuccessor dbo:child ?successor .
  }

  # Ensure that all conditions are met for the final answer
  FILTER (?spouseOfLouisTheGerman = ?fatherOfChild &&
          ?fatherOfCarloman = ?parentOfSuccessor)
}
```",6,9,7,3,3,3,3,71,0,0,1,0,0.0,0
129,27,test,"Give me the associated musical artist of the actor, that is an organisation, of Dreamville Presents: Revenge and professional in  and associated musical artist of the person born as Tahj Malik Chandler.","SELECT ?result WHERE { <http://dbpedia.org/resource/Dreamville_Presents:_Revenge> <http://dbpedia.org/property/starring> ?v3 . ?v0 <http://dbpedia.org/property/birthName> ""Tahj Malik Chandler""@en . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?v0 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v3 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?result <http://dbpedia.org/property/occupation> """"@en . }","```sparql
# Part 1: Associated Musical Artist of the Actor (Organization) in ""Dreamville Presents: Revenge""
SELECT ?musicalArtist WHERE {
  # Find the actor associated with ""Dreamville Presents: Revenge""
  ?movie dbo:actor ?actor .
  ?movie rdfs:label ""Dreamville Presents: Revenge""@en .

  # Ensure the actor is an organization
  ?actor a dbo:Organization .

  # Find the musical artist associated with this organization
  ?actor dbo:musicalArtist ?musicalArtist .
}

UNION

# Part 2: Associated Musical Artist of Tahj Malik Chandler (J. Cole)
SELECT ?associatedMusicalArtist WHERE {
  # Identify J. Cole by his birth name
  ?person foaf:name ""Tahj Malik Chandler""@en .
  
  # Find the musical artist associated with J. Cole
  ?person dbo:musicalArtist ?associatedMusicalArtist .
}
```",5,6,6,2,3,2,3,28,0,0,1,0,0.0,0
573,71,test,"Give me the parent of the author, that is a politician and an office holder, of the work of John Quincy Adams and person decedent at the residence, that is a settlement, of the professional, that is American, in Politician and person decedent at the administration, that is a region, of the real name of Charlie Baker (Australian footballer).","SELECT ?result WHERE { <http://dbpedia.org/resource/Charlie_Baker_(Australian_footballer)> <http://xmlns.com/foaf/0.1/name> ?v1 . ?result <http://dbpedia.org/ontology/deathPlace> ?v2 . ?v4 <http://dbpedia.org/property/occupation> ""Politician""@en . ?result <http://dbpedia.org/ontology/deathPlace> ?v5 . ?v8 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v8 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v2 <http://dbpedia.org/property/governor> ?v1 . ?v7 <http://dbpedia.org/property/author> ?v8 . ?v8 <http://dbpedia.org/ontology/parent> ?result . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Region>. ?v4 <http://dbpedia.org/ontology/nationality> <http://dbpedia.org/resource/United_States>. ?v4 <http://dbpedia.org/property/residence> ?v5 . ?v7 <http://dbpedia.org/property/author> <http://dbpedia.org/resource/John_Quincy_Adams> . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. }","```sparql
SELECT ?parent WHERE {
  # Step 1: Identify John Quincy Adams' work
  ?work dbo:author ?johnQuincyAdams .
  ?johnQuincyAdams rdfs:label ""John Quincy Adams""@en .

  # Step 2: Find the parent of John Quincy Adams who is a politician and office holder
  ?johnQuincyAdams dbo:parent ?parent .
  ?parent rdf:type dbo:Politician ;
          dbo:officeHolder true .

  # Step 3: Determine Charlie Baker (Australian footballer)'s real name
  ?charlieBaker rdfs:label ""Charlie Baker""@en ;
                foaf:surname ""Baker"" .
  ?realName dbo:realName ?charlieBaker .
  
  # Step 4: Identify administration associated with Charlie Baker's real name
  ?administration dbo:relatedTo ?realName .

  # Step 5: Find a professional American at this administration
  ?professional dbo:nationality dbr:United_States ;
                dbo:worksFor ?administration .

  # Step 6: Locate the residence of this professional
  ?residence dbo:resident ?professional .
  ?residence rdf:type dbo:Settlement .

  # Step 7: Identify person decedent at this residence
  ?decedent dbo:placeOfDeath ?residence .

  # Step 8: Find the parent of this person decedent
  ?decedent dbo:parent ?finalParent .
}
```",9,14,10,3,3,3,3,71,0,0,2,0,0.0,0
791,59,test,"Give me the spouse of the spouse, that is a royalty, of the reference to Emperor Takakura and predecessor of the child of the child, that is an office holder and a royalty, of Emperor Go-Shirakawa.","SELECT ?result WHERE { ?v2 <http://dbpedia.org/ontology/spouse> ?v3 . ?result <http://dbpedia.org/ontology/spouse> ?v2 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v5 <http://dbpedia.org/property/father> ?v0 . ?v3 <http://xmlns.com/foaf/0.1/name> ""Emperor Takakura""@en . ?v0 <http://dbpedia.org/ontology/parent> <http://dbpedia.org/resource/Emperor_Go-Shirakawa> . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?result <http://dbpedia.org/ontology/successor> ?v5 . }","```sparql
SELECT ?spouseOfSpouse WHERE {
  # Step a: Spouse of the spouse (royalty) of Emperor Takakura
  ?takakura dbo:spouse ?spouse .
  ?takakura rdfs:label ""Emperor Takakura""@en .
  
  FILTER (regex(str(?spouse), ""Imperial Princess Shushi"", ""i"")) # Assuming royalty

  ?spouse dbo:spouse ?spouseOfSpouse .

  # Step b: Predecessor of the child of the child (office holder and royalty) of Emperor Go-Shirakawa
  ?goShirakawa dbo:child ?child .
  ?goShirakawa rdfs:label ""Emperor Go-Shirakawa""@en .
  
  FILTER EXISTS { 
    ?child a dbo:OfficeHolder ;
           a dbo:RoyalPerson .
  }

  ?child dbo:child ?grandChild .

  ?grandChild dbo:predecessor ?predecessor .

  # Ensure the spouse of the spouse from step a is the same as the predecessor found in step b
  FILTER (?spouseOfSpouse = ?predecessor)
}
```",6,9,7,3,2,3,3,71,0,0,1,0,0.0,0
715,70,test,"Give me the commander in the force, that is a military conflict, of Abd el-Krim and leader of the office, that is a government agency and an organisation, of the reference to Carlos Franco Iribarnegaray and commander in the force of the mayor, that is an office holder and a politician and a president, of 1933 Spanish general election.","SELECT ?result WHERE { ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/GovernmentAgency>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/President>. ?v1 <http://dbpedia.org/property/office> ?v3 . <http://dbpedia.org/resource/1933_Spanish_general_election> <http://dbpedia.org/property/leader> ?v0 . ?v4 <http://dbpedia.org/ontology/commander> ?result . ?v4 <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Abd_el-Krim> . ?v7 <http://dbpedia.org/ontology/commander> ?v0 . ?v3 <http://dbpedia.org/ontology/leader> ?result . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v7 <http://dbpedia.org/ontology/commander> ?result . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?v1 <http://xmlns.com/foaf/0.1/name> ""Carlos Franco Iribarnegaray""@en . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. }","```sparql
SELECT ?commanderInConflict ?leaderOfOffice ?mayorCommander WHERE {
  # Find the military conflict where Abd el-Krim was a commander
  ?conflict dbo:commander ?abdElKrim .
  ?abdElKrim rdfs:label ""Abd el-Krim""@en .

  # Find the office or organization led by Carlos Franco Iribarnegaray
  ?office dbo:leader ?carlosFranco .
  ?carlosFranco rdfs:label ""Carlos Franco Iribarnegaray""@en .

  # Find the mayor involved in the 1933 Spanish general election who is also a commander
  ?election dbo:majorityPartyLeader ?mayor .
  ?election rdfs:label ""Spanish general election, 1933""@en .
  
  OPTIONAL {
    ?mayor dbo:commanderInForce ?mayorCommander .
  }
}
```",8,14,9,3,3,3,3,71,0,0,1,0,0.0,0
579,20,test,"Give me the native of the residence, that is English and a settlement, of the resident of Scotland and person born as the birth name of the native, that is an office holder, of Edinburgh.",SELECT ?result WHERE { ?result <http://dbpedia.org/property/birthName> ?v5 . ?v4 <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Edinburgh> . ?v1 <http://dbpedia.org/property/residence> ?v2 . ?result <http://dbpedia.org/ontology/birthPlace> ?v2 . ?v2 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/United_Kingdom>. ?v4 <http://dbpedia.org/property/birthName> ?v5 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. ?v1 <http://dbpedia.org/ontology/residence> <http://dbpedia.org/resource/Scotland> . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. },"```sparql
SELECT ?native WHERE {
  # Find an office holder from Edinburgh and get their birth name
  ?officeHolder dbo:birthName ?birthName .
  ?officeHolder dbo:residence ?edinburghResidence .
  ?officeHolder dbo:officeLocation dbc:Edinburgh .
  
  # Find a person whose native place matches the birth name of the office holder
  ?person dbo:nativePlace ?nativePlace .
  FILTER (str(?nativePlace) = str(?birthName))
  
  # Ensure this person resides in an English settlement, which is also their native place
  ?person dbo:residence ?englishSettlement .
  ?englishSettlement rdf:type dbc:EnglishSettlement .
  FILTER (?nativePlace = ?englishSettlement)
  
  # Confirm that the resident's native place is Scotland
  ?resident dbo:nativePlace ?scotlandNativePlace .
  ?resident dbo:residence ?nativePlace .
  ?scotlandNativePlace rdfs:label ""Scotland""@en .
}
```",6,9,7,3,2,3,2,20,0,0,18,0,0.0,0
47,65,test,"Give me the office of the administration of Jagdeep Dhankhar and office of the awardee of Padma Vibhushan and office of the awardee of the award, that is an award, of Mantu Ghosh.",SELECT ?result WHERE { <http://dbpedia.org/resource/Mantu_Ghosh> <http://dbpedia.org/property/awards> ?v0 . ?v3 <http://dbpedia.org/property/office> ?result . ?v4 <http://dbpedia.org/property/governor> <http://dbpedia.org/resource/Jagdeep_Dhankhar> . ?v6 <http://dbpedia.org/property/office> ?result . ?v6 <http://dbpedia.org/property/awards> ?v0 . ?v4 <http://dbpedia.org/property/office> ?result . ?v3 <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/Padma_Vibhushan> . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Award>. },"```sparql
SELECT ?jagdeepOffice ?padmaVibhushanAwardee ?awardeeOffice ?mantuAward ?awardRecipient ?recipientOffice WHERE {
  # Office of Jagdeep Dhankhar
  ?dhankhar dbo:office ?jagdeepOffice .
  ?dhankhar rdfs:label ""Jagdeep Dhankhar""@en .

  # Awardee of Padma Vibhushan and their office
  ?padmaVibhushanAward dbo:award ""Padma Vibhushan"" .
  ?padmaVibhushanAwardee dbo:recipient ?padmaVibhushanAward .
  OPTIONAL { ?padmaVibhushanAwardee dbo:office ?awardeeOffice . }

  # Mantu Ghosh's award and office of its awardee
  ?mantuGhosh dbo:award ?mantuAward .
  ?mantuAward a dbo:Award .
  ?awardRecipient dbo:recipient ?mantuAward .
  OPTIONAL { ?awardRecipient dbo:office ?recipientOffice . }
}
```",7,8,8,3,3,3,3,71,0,0,1,0,0.0,0
976,65,test,"Give me the office of the mayor, that is a politician and an office holder and Turkish, of the reference, that is an organisation and a political party and Turkish, to Millet İttifakı and office of the leader, that is a politician, of Grand National Assembly of Turkey and office of the person born as Mehmet Naci Bostancı.","SELECT ?result WHERE { ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v0 <http://dbpedia.org/property/birthName> ""Mehmet Naci Bostancı""@en . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v2 <http://dbpedia.org/property/office> ?result . ?v1 <http://dbpedia.org/property/leader> ?v5 . <http://dbpedia.org/resource/Grand_National_Assembly_of_Turkey> <http://dbpedia.org/ontology/leader> ?v2 . ?v0 <http://dbpedia.org/property/office> ?result . ?v5 <http://dbpedia.org/ontology/nationality> <http://dbpedia.org/resource/Turkey>. ?v5 <http://dbpedia.org/property/office> ?result . ?v1 <http://xmlns.com/foaf/0.1/name> ""Millet İttifakı""@en . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/PoliticalParty>. ?v1 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Turkey>. }","```sparql
SELECT ?mayorOffice ?partyReference ?assemblyLeaderOffice ?personOffice WHERE {
  # Find the mayor who is Turkish, a politician, and an office holder
  ?mayor dbo:nationality dbr:Turkey ;
         rdf:type dbo:Politician ;
         dbo:officeHolder ?mayorOffice .
  
  # Find the reference organization that is a political party, Turkish, and associated with Millet İttifakı
  ?partyReference dbo:politicalParty dbr:Millet_İttifakı ;
                  dbo:nationality dbr:Turkey ;
                  rdf:type dbo:Organization .

  # Find the leader of the Grand National Assembly of Turkey who is a politician
  ?assemblyLeader dbo:officeHolder ?assemblyLeaderOffice ;
                  rdf:type dbo:Politician .
  ?assemblyLeaderOffice rdfs:label ""Grand National Assembly of Turkey""@en .

  # Find the person born as Mehmet Naci Bostancı and their office
  ?person foaf:name ""Mehmet Naci Bostancı"" ;
          dbo:birthName ""Mehmet Naci Bostancı"" .
  OPTIONAL { ?person dbo:officeHolder ?personOffice }
}
```",7,14,8,3,3,3,3,71,0,0,1,0,0.0,0
933,59,test,"Give me the reference to the birth name of the professional in Musician and band of the band of the band, that is an artist and a musical artist, of The Ramong Sound.",SELECT ?result WHERE { ?result <http://xmlns.com/foaf/0.1/name> ?v4 . ?v3 <http://dbpedia.org/ontology/associatedMusicalArtist> ?v1 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. ?v1 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v0 <http://dbpedia.org/property/birthName> ?v4 . ?v0 <http://dbpedia.org/property/occupation> <http://dbpedia.org/resource/Musician> . <http://dbpedia.org/resource/The_Ramong_Sound> <http://dbpedia.org/ontology/associatedMusicalArtist> ?v3 . },"```sparql
SELECT ?musician ?birthName WHERE {
  # Find musicians in The Ramones band
  ?band dbo:member ?musician .
  ?band rdfs:label ""The Ramones""@en .

  # Check if musician has a birth name
  OPTIONAL { 
    ?musician foaf:name ?birthName .
  }

  # Ensure the musician is recognized as an artist and musical artist
  ?musician dbo:occupation dbp:musician .
  ?musician dbo:occupation dbp:musical_artist .
}
```",6,8,7,3,2,3,3,71,0,0,1,0,0.0,0
917,59,test,"Give me the parent of the child, that is a royalty, of the mayor of Hawaiian Kingdom and child of the father of the spouse, that is a royalty, of Leleiohoku I.",SELECT ?result WHERE { ?v0 <http://dbpedia.org/property/father> ?v4 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?result <http://dbpedia.org/ontology/parent> ?v4 . <http://dbpedia.org/resource/Hawaiian_Kingdom> <http://dbpedia.org/property/leader> ?v3 . ?v1 <http://dbpedia.org/property/father> ?v3 . ?result <http://dbpedia.org/ontology/child> ?v1 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v0 <http://dbpedia.org/ontology/spouse> <http://dbpedia.org/resource/Leleiohoku_I> . },"```sparql
SELECT ?parent WHERE {
  # Find Leleiohoku I and his royal spouse
  ?leleiohoku dbo:spouse ?royalSpouse .
  ?leleiohoku rdfs:label ""Leleiohoku I""@en .
  
  # Ensure the spouse is royalty
  FILTER (regex(str(?royalSpouse), ""Queen Kapiolani"", ""i""))

  # Find father of this royal spouse
  ?royalSpouse dbo:parent ?father .

  # Determine children of this father
  ?child dbo:parent ?father .
  
  # Identify which child is royalty and connected to the mayor
  OPTIONAL {
    ?mayor rdfs:label ""Mayor of Hawaiian Kingdom""@en .
    ?child dbo:spouse ?mayor .
    FILTER (regex(str(?child), ""Prince Jonah Kūhiō Kalaniana'ole"", ""i""))
  }

  # Find parent of this child
  ?parent dbo:parent ?child .
}
```",6,8,7,3,2,3,3,71,0,0,3,0,0.0,0
582,56,test,"Give me the figure known as the nickname of the team, that is an organisation, of Hajime Moriyasu and reference to the residence of Hirotaka Sugawara and player in Kazuaki Nagasawa.",SELECT ?result WHERE { ?v0 <http://dbpedia.org/property/nickname> ?v1 . ?v0 <http://dbpedia.org/ontology/coach> <http://dbpedia.org/resource/Hajime_Moriyasu> . ?result <http://xmlns.com/foaf/0.1/name> ?v2 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. <http://dbpedia.org/resource/Kazuaki_Nagasawa> <http://dbpedia.org/ontology/team> ?result . <http://dbpedia.org/resource/Hirotaka_Sugawara> <http://dbpedia.org/property/residence> ?v2 . ?result <http://dbpedia.org/property/nickname> ?v1 . },"```sparql
SELECT ?nickname ?residence ?team WHERE {
  # Find the organization associated with Hajime Moriyasu and its nickname
  ?organization dbo:coach ?hajimeMoriyasu .
  ?hajimeMoriyasu rdfs:label ""Hajime Moriyasu""@en .
  OPTIONAL { 
    ?organization dbo:nickname ?nickname .
  }
  
  # Find the residence of Hirotaka Sugawara
  ?hirotakaSugawara dbo:residence ?residence .
  ?hirotakaSugawara rdfs:label ""Hirotaka Sugawara""@en .

  # Confirm Kazuaki Nagasawa as a player in a team
  ?kazuakiNagasawa dbo:member ?team .
  ?kazuakiNagasawa rdfs:label ""Kazuaki Nagasawa""@en .
}
```",6,7,7,3,3,3,3,71,0,0,1,0,0.0,0
715,69,test,"Give me the leader of the office, that is a government agency and an organisation, of the reference to Carlos Franco Iribarnegaray and commander in the force of Francisco Largo Caballero and commander in the force, that is a military conflict, of the native of Morocco.","SELECT ?result WHERE { ?v4 <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Morocco> . ?v3 <http://dbpedia.org/ontology/commander> ?v4 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/GovernmentAgency>. ?v7 <http://dbpedia.org/ontology/commander> ?result . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v1 <http://xmlns.com/foaf/0.1/name> ""Carlos Franco Iribarnegaray""@en . ?v2 <http://dbpedia.org/ontology/leader> ?result . ?v7 <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Francisco_Largo_Caballero> . ?v3 <http://dbpedia.org/ontology/commander> ?result . ?v1 <http://dbpedia.org/property/office> ?v2 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. }","```sparql
SELECT ?leader WHERE {
  # Find office related to Carlos Franco Iribarnegaray
  ?office dbo:leader ?leader .
  ?office rdf:type dbo:GovernmentAgency ;
          dbo:organization ?org .
  ?carlos foaf:name ""Carlos Franco Iribarnegaray""@en .
  ?carlos dbo:memberOf ?office .

  # Find force related to Francisco Largo Caballero
  OPTIONAL {
    ?force dbo:commander ?caballero .
    ?caballero foaf:name ""Francisco Largo Caballero""@en .
  }

  # Find military conflict involving a native of Morocco
  OPTIONAL {
    ?conflict dbo:commander ?leader .
    ?moroccan dbo:nationality dbc:Morocco ;
              dbo:birthPlace ?place .
    ?conflict dbo:participant ?moroccan .
  }
}
```",8,11,9,3,3,3,3,71,0,0,1,0,0.0,0
326,19,test,"Give me the person decedent at the award, that is a country, of the awardee of French Legion of Honor and resident of the birthplace, that is a state and British, of David Jessel.","SELECT ?result WHERE { ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. ?result <http://dbpedia.org/property/residence> ?v2 . ?v0 <http://dbpedia.org/property/awards> ""French Legion of Honor""@en . ?v0 <http://dbpedia.org/property/awards> ?v4 . <http://dbpedia.org/resource/David_Jessel> <http://dbpedia.org/ontology/birthPlace> ?v2 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/AdministrativeRegion>. ?v2 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/United_Kingdom>. ?result <http://dbpedia.org/ontology/deathPlace> ?v4 . }","```sparql
SELECT ?personDecedent WHERE {
  # Find David Jessel's birthplace, which is a state in the UK
  ?davidJessel dbo:birthPlace ?birthPlace .
  ?davidJessel rdfs:label ""David Jessel""@en .
  ?birthPlace rdf:type dbo:State .
  ?birthPlace dbo:country dbc:United_Kingdom .

  # Find awardees of the French Legion of Honor who reside in David Jessel's birthplace
  ?awardee dbo:awardReceived ?legionOfHonor .
  ?legionOfHonor rdfs:label ""Legion of Honour""@en .
  ?awardee dbo:residence ?birthPlace .

  # Find a person decedent at an award ceremony associated with a country
  ?personDecedent dbo:event ?awardEvent .
  ?awardEvent dbo:country ?country .
  FILTER EXISTS { ?awardEvent dbo:type dbr:Award }
}
```",5,8,6,3,2,3,2,20,0,0,1,0,0.0,0
465,57,test,"Give me the spouse of the child, that is a royalty, of the parent of Elizabeth of Austria (1526–1545) and successor of Ercole II d'Este, Duke of Ferrara and successor of the child, that is a royalty, of Anne of Brittany.","SELECT ?result WHERE { ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. <http://dbpedia.org/resource/Ercole_II_d'Este,_Duke_of_Ferrara> <http://dbpedia.org/ontology/successor> ?result . ?v0 <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Elizabeth_of_Austria_(1526–1545)> . ?v3 <http://dbpedia.org/ontology/successor> ?result . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. <http://dbpedia.org/resource/Anne_of_Brittany> <http://dbpedia.org/ontology/child> ?v3 . ?v0 <http://dbpedia.org/ontology/child> ?v5 . ?result <http://dbpedia.org/ontology/spouse> ?v5 . }","```sparql
SELECT ?spouse WHERE {
  # Identify Elizabeth of Austria and her parent
  ?elizabeth dbo:parent ?parent .
  ?elizabeth rdfs:label ""Elizabeth of Austria (1526–1545)""@en .

  # Find Ercole II d'Este's successor
  ?ercole dbo:succeededBy ?successorErcole .
  ?ercole rdfs:label ""Ercole II d'Este, Duke of Ferrara""@en .

  # Identify Anne of Brittany and her royal child
  ?anne dbo:child ?royalChild .
  ?anne rdfs:label ""Anne of Brittany""@en .
  
  # Find the successor of Anne's royal child
  ?royalChild dbo:succeededBy ?successorRoyalChild .

  # The spouse of the child (who is royalty) of Elizabeth's parent
  OPTIONAL {
    ?parentChild dbo:child ?spouseCandidate .
    ?parentChild rdfs:label ?parentLabel .
    FILTER (?parent = ?parentLabel)
    
    # Ensure this candidate is a successor to Ercole II d'Este and Anne's royal child
    ?successorErcole rdfs:label ?candidateLabel1 .
    ?successorRoyalChild rdfs:label ?candidateLabel2 .
    FILTER (?spouseCandidate = ?candidateLabel1 && ?spouseCandidate = ?candidateLabel2)
    
    # Find the spouse of this candidate
    ?spouseCandidate dbo:spouse ?spouse .
  }
}
```",6,8,7,3,3,3,3,71,0,0,1,0,0.0,0
987,69,test,"Give me the entity in the region, that is a country, of the time zone, that is a sports event, in Canicosa de la Sierra and birth place of the band, that is an artist and a musical artist, of the band, that is an artist, of Dado Polumenta and birth place of the actor of All for Free.",SELECT ?result WHERE { ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsEvent>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?v0 <http://dbpedia.org/property/timeZone> ?v5 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. <http://dbpedia.org/resource/All_for_Free> <http://dbpedia.org/property/starring> ?v6 . ?result <http://dbpedia.org/ontology/country> ?v0 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. ?v4 <http://dbpedia.org/ontology/associatedMusicalArtist> ?v2 . ?v2 <http://dbpedia.org/ontology/birthPlace> ?result . <http://dbpedia.org/resource/Dado_Polumenta> <http://dbpedia.org/ontology/associatedMusicalArtist> ?v4 . <http://dbpedia.org/resource/Canicosa_de_la_Sierra> <http://dbpedia.org/ontology/timeZone> ?v5 . ?v6 <http://dbpedia.org/ontology/birthPlace> ?result . },"```sparql
SELECT DISTINCT ?country WHERE {
  # Step 1: Find Canicosa de la Sierra's time zone
  ?canicosa dbo:timeZone ?timezone .
  ?canicosa rdfs:label ""Canicosa de la Sierra""@en .

  # Step 2: Identify a sports event in that time zone
  OPTIONAL {
    ?event dbo:location ?timezone .
    ?event rdf:type dbo:SportsEvent .
  }

  # Step 3: Find Dado Pratelli's band and its birthplace
  ?pratelli dbo:band ?band .
  ?pratelli rdfs:label ""Dado Pratelli""@en .

  OPTIONAL {
    ?band dbo:birthPlace ?bandBirthPlace .
    ?band rdf:type dbo:MusicalArtist .
  }

  # Step 4: Find the actor of All for Free and their birthplace
  ?allForFree dbo:actor ?actor .
  ?allForFree rdfs:label ""All for Free""@en .

  OPTIONAL {
    ?actor dbo:birthPlace ?actorBirthPlace .
  }

  # Step 5: Identify the region and country where both birthplaces are located
  ?bandBirthPlace dbo:country ?country .
  ?actorBirthPlace dbo:country ?country .
}
```",8,13,9,3,3,3,3,71,0,0,1,0,0.0,0
955,18,test,"Give me the band of the band member, that is a musical artist and an artist, of Street Dogs and band of the writer of the work, that is a work and an album and a musical work, of Matt Freeman.",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/bandMember> ?v3 . ?result <http://dbpedia.org/ontology/bandMember> ?v2 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalWork>. ?v3 <http://dbpedia.org/ontology/associatedMusicalArtist> <http://dbpedia.org/resource/Street_Dogs> . ?v1 <http://dbpedia.org/property/writer> ?v2 . ?v1 <http://dbpedia.org/property/writer> <http://dbpedia.org/resource/Matt_Freeman> . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Album>. },"```sparql
# Part 1: Find the band of a Street Dogs member who is also a musical artist and an artist
SELECT DISTINCT ?band WHERE {
  # Identify a member of Street Dogs who is both a musical artist and an artist
  ?member dbo:musicalArtist dbr:Street_Dogs ;
          rdf:type dbo:MusicalArtist, dbo:Artist .
  
  # Find the band(s) this member belongs to
  ?member dbo:bandMember ?band .
}

UNION

# Part 2: Find the band of Matt Freeman's work that is an album or musical work
SELECT DISTINCT ?band WHERE {
  # Identify works by Matt Freeman that are albums or musical works
  ?work dbo:composer dbr:Matt_Freeman ;
        rdf:type dbo:Album, dbo:MusicalWork .
  
  # Find the band associated with these works
  ?work dbo:band ?band .
}
```",5,10,6,3,2,3,2,20,0,0,1,0,0.0,0
715,63,test,"Give me the commander in the force, that is a military conflict, of the native of Morocco and commander in the force of Francisco Largo Caballero and leader of the office, that is a government agency and an organisation, of Carlos Franco Iribarnegaray.",SELECT ?result WHERE { <http://dbpedia.org/resource/Carlos_Franco_Iribarnegaray> <http://dbpedia.org/property/office> ?v2 . ?v2 <http://dbpedia.org/ontology/leader> ?result . ?v4 <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Morocco> . ?v3 <http://dbpedia.org/ontology/commander> ?result . ?v6 <http://dbpedia.org/ontology/commander> ?result . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/GovernmentAgency>. ?v3 <http://dbpedia.org/ontology/commander> ?v4 . ?v6 <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Francisco_Largo_Caballero> . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. },"```sparql
SELECT ?commonIndividual WHERE {
  # Step 1: Identify the native of Morocco
  ?moroccan dbo:nationality dbc:Morocco .
  
  # Step 2: Find Francisco Largo Caballero's military conflict and his commander
  ?conflict dbo:participant ?franciscoLargoCaballero ;
            dbo:commander ?commanderInConflict .
  ?franciscoLargoCaballero rdfs:label ""Francisco Largo Caballero""@en .

  # Step 3: Find the organization led by Carlos Franco Iribarnegaray and its leader
  ?organization dbo:leader ?carlosFrancoIribarnegaray ;
                a dbo:GovernmentAgency .
  ?carlosFrancoIribarnegaray rdfs:label ""Carlos Franco Iribarnegaray""@en .

  # Step 4: Identify the common individual who is commander in conflict and leader of organization
  FILTER (?commanderInConflict = ?commonIndividual)
  FILTER (?organizationLeader = ?commonIndividual)

}
```",7,10,8,3,3,3,3,71,0,0,1,0,0.0,0
129,26,test,Give me the associated musical artist of EarthGang and professional in the mayor of 1999 West Dunbartonshire Council election and associated musical artist of the person born as Tahj Malik Chandler.,"SELECT ?result WHERE { <http://dbpedia.org/resource/1999_West_Dunbartonshire_Council_election> <http://dbpedia.org/property/leader> ?v2 . ?result <http://dbpedia.org/property/occupation> ?v2 . ?v1 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v1 <http://dbpedia.org/property/birthName> ""Tahj Malik Chandler""@en . <http://dbpedia.org/resource/EarthGang> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . }","```sparql
SELECT ?earthGangArtist ?electionProfessionalArtist ?childishGambinoArtist WHERE {
  # EarthGang's associated musical artist
  ?earthGang dbo:associatedMusicalArtist ?earthGangArtist .
  ?earthGang rdfs:label ""EarthGang""@en .

  # Professional in the 1999 West Dunbartonshire Council election and their associated musical artist
  OPTIONAL {
    ?electionEvent dbo:participant ?professional .
    ?electionEvent rdfs:label ""West Dunbartonshire Council election, 1999""@en .
    ?professional dbo:associatedMusicalArtist ?electionProfessionalArtist .
  }

  # Tahj Malik Chandler (Childish Gambino) and his associated musical artist
  ?childishGambino dbo:associatedMusicalArtist ?childishGambinoArtist .
  ?childishGambino rdfs:label ""Childish Gambino""@en .
}
```",5,5,6,2,3,2,3,28,0,0,1,0,0.0,0
917,68,test,"Give me the parent of the child, that is a royalty, of the mayor of Hawaiian Kingdom and child of the father of Kamehameha IV and child of the father of the spouse, that is a royalty, of Leleiohoku I.",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/child> ?v2 . ?v2 <http://dbpedia.org/property/father> ?v4 . <http://dbpedia.org/resource/Kamehameha_IV> <http://dbpedia.org/property/father> ?v0 . ?v1 <http://dbpedia.org/property/father> ?v6 . <http://dbpedia.org/resource/Hawaiian_Kingdom> <http://dbpedia.org/property/leader> ?v4 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?result <http://dbpedia.org/property/father> ?v0 . ?v1 <http://dbpedia.org/ontology/spouse> <http://dbpedia.org/resource/Leleiohoku_I> . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?result <http://dbpedia.org/ontology/parent> ?v6 . },"```sparql
SELECT ?parent WHERE {
  # Find the child (royalty) of the mayor of Hawaiian Kingdom
  ?mayor dbo:position ""Mayor""@en ;
         dbo:child ?child .
  FILTER regex(str(?mayor), ""Hawaiian Kingdom"", ""i"") .

  # Ensure the child is royalty
  OPTIONAL { 
    ?child rdfs:label ?label .
    FILTER (regex(?label, ""Royal"", ""i""))
  }

  # Find father of Kamehameha IV and his child
  ?kamehamehaIV dbo:parent ?fatherKamehamehaIV ;
               rdfs:label ""Kamehameha IV""@en .
  ?fatherKamehamehaIV dbo:child ?childFather .

  # Find spouse of Leleiohoku I who is royalty and their father
  ?leleiohokuI dbo:spouse ?royalSpouse ;
              rdfs:label ""Leleiohoku I""@en .
  OPTIONAL {
    ?royalSpouse rdfs:label ?spouseLabel .
    FILTER (regex(?spouseLabel, ""Royal"", ""i""))
  }
  ?royalSpouse dbo:",8,10,9,3,3,3,3,71,0,0,2,0,0.0,0
274,25,test,"Give me the band member of the person born, that is a musical artist, as John Birks Gillespie and associated musical artist of Cecil Taylor and professional in the designer of Tetris Classic.","SELECT ?result WHERE { <http://dbpedia.org/resource/Tetris_Classic> <http://dbpedia.org/property/designer> ?v4 . ?v3 <http://dbpedia.org/property/birthName> ""John Birks Gillespie""@en . ?result <http://dbpedia.org/ontology/associatedMusicalArtist> ?v3 . ?result <http://dbpedia.org/property/occupation> ?v4 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. <http://dbpedia.org/resource/Cecil_Taylor> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . }","```sparql
SELECT DISTINCT ?person WHERE {
  # Dizzy Gillespie's band members
  ?gillespie dbo:birthName ""John Birks Gillespie""@en .
  ?gillespie dbo:bandMember ?person .

  # Cecil Taylor's associated musical artists
  OPTIONAL { 
    ?cecilTaylor dbo:associatedMusicalArtist ?person .
    ?cecilTaylor rdfs:label ""Cecil Taylor""@en .
  }

  # Professional connection to Tetris designer
  OPTIONAL {
    ?tetrisDesigner dbo:profession ?profession .
    ?tetrisDesigner rdfs:label ""Alexey Pajitnov""@en .
    ?person dbo:professionalConnection ?tetrisDesigner .
  }
}
```",5,6,6,2,3,2,3,28,0,0,1,0,0.0,0
216,67,test,"Give me the player in the coach, that is a soccer player and a sports manager and a soccer manager, of the player, that is an organisation and a sports club and a soccer club, in Džemal Berberović and team of the person born, that is a sports manager and a soccer manager and a soccer player, on the death of Pavel Vezhinov and player in Igor Bišćan.",SELECT ?result WHERE { ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerPlayer>. ?v3 <http://dbpedia.org/ontology/birthDate> ?v1 . ?v6 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerPlayer>. <http://dbpedia.org/resource/Džemal_Berberović> <http://dbpedia.org/ontology/team> ?v0 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsManager>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerClub>. <http://dbpedia.org/resource/Pavel_Vezhinov> <http://dbpedia.org/ontology/deathDate> ?v1 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerManager>. ?v0 <http://dbpedia.org/ontology/coach> ?v6 . ?result <http://dbpedia.org/ontology/coach> ?v3 . <http://dbpedia.org/resource/Igor_Bišćan> <http://dbpedia.org/ontology/team> ?result . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsClub>. ?v6 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsManager>. ?v6 <http://dbpedia.org/ontology/team> ?result . ?v6 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerManager>. },"```sparql
SELECT ?playerInCoach WHERE {
  # Find Džemal Berberović and his coach who is also a player, manager, etc.
  ?džemal dbo:coach ?playerInCoach .
  ?džemal rdfs:label ""Džemal Berberović""@en .

  # Ensure the coach is a soccer player and sports manager
  ?playerInCoach rdf:type dbo:SoccerPlayer ;
                 rdf:type dbo:SportsManager ;
                 rdf:type dbo:SoccerManager .

  # Find the organization that is a sports club and soccer club
  ?organization rdf:type dbo:SportsClub ;
                rdf:type dbo:SoccerClub .
  ?playerInCoach dbo:member ?organization .

  # Ensure this person was born on Pavel Vezhinov's death date
  ?pavelVezhinov dbo:dateOfDeath ?deathDate .
  ?pavelVezhinov rdfs:label ""Pavel Vezhinov""@en .
  ?playerInCoach dbo:dateOfBirth ?birthDate .
  FILTER (?birthDate = ?deathDate)

  # Ensure this person is a player in Igor Bišćan
  ?igorBišć",7,16,8,3,3,3,3,71,0,0,1,0,0.0,0
645,61,test,"Give me the leader of the office, that is a government agency and an organisation, of the native of Restoration (Spain) and military force of the force, that is an event and a military conflict and a societal event, of the native, that is a president and a politician, of Restoration (Spain).",SELECT ?result WHERE { ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/GovernmentAgency>. ?v1 <http://dbpedia.org/property/office> ?v3 . ?v0 <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Restoration_(Spain)> . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/President>. ?result <http://dbpedia.org/ontology/battle> ?v5 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v5 <http://dbpedia.org/ontology/commander> ?v0 . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v1 <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Restoration_(Spain)> . ?v3 <http://dbpedia.org/ontology/leader> ?result . },"```sparql
SELECT ?leader WHERE {
  # Step 1: Identify the president and politician from Spain during Restoration
  ?person dbo:nationality dbr:Spain ;
          dbo:occupation dbr:President_of_Spain ;
          dbo:birthPlace ?place .
  
  # Step 2: Link to an event that is a military conflict and societal event
  ?event dbo:type dbr:Military_conflict ;
         dbo:type dbr:Societal_event ;
         dbo:participant ?person .

  # Step 3: Find the military force associated with this event
  ?force dbo:event ?event .
  
  # Step 4: Determine the leader of the office (government agency or organization)
  ?office dbo:leader ?leader ;
          dbo:type dbr:Government_agency ;
          dbo:type dbr:Organization ;
          dbo:native ?person .
}
```",6,13,7,3,2,3,3,71,0,0,2,0,0.0,0
98,8,test,Give me the child of the child of Emperor Toba and parent of Emperor Rokujō.,SELECT ?result WHERE { <http://dbpedia.org/resource/Emperor_Toba> <http://dbpedia.org/ontology/child> ?v2 . ?result <http://dbpedia.org/ontology/parent> ?v2 . <http://dbpedia.org/resource/Emperor_Rokujō> <http://dbpedia.org/ontology/parent> ?result . },"```sparql
SELECT ?commonEntity WHERE {
  # Find the child of Emperor Toba
  ?child1 dbo:parent dbr:Emperor_Toba .
  
  # Find the grandchild of Emperor Toba (child of the child)
  ?grandChild dbo:parent ?child1 .

  # Find the parent of Emperor Rokujō
  ?parent dbo:parent dbr:Emperor_Rokujō .

  # Check for common entity between grandchild and parent
  FILTER (?grandChild = ?parent)
  
  BIND(?grandChild AS ?commonEntity)
}
```",3,3,4,2,2,2,2,9,0,0,1,0,0.0,0
507,57,test,"Give me the spouse of Anne V. Coates and director of the movie, that is a movie and a work, with the person born on 1919-06-17 and professional in the profession of Guy Ferland.","SELECT ?result WHERE { ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?result <http://dbpedia.org/property/occupation> ?v3 . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Film>. ?v5 <http://dbpedia.org/property/starring> ?v0 . ?v5 <http://dbpedia.org/ontology/director> ?result . ?v0 <http://dbpedia.org/ontology/birthDate> ""1919-06-17""^^<http://www.w3.org/2001/XMLSchema#date> . <http://dbpedia.org/resource/Guy_Ferland> <http://dbpedia.org/property/occupation> ?v3 . ?result <http://dbpedia.org/ontology/spouse> <http://dbpedia.org/resource/Anne_V._Coates> . }","```sparql
SELECT ?spouse ?director WHERE {
  # Find Anne V. Coates and her spouse
  ?anneVCoates dbo:spouse ?spouse .
  ?anneVCoates rdfs:label ""Anne V. Coates""@en .

  # Find movies directed by the spouse that are both a movie and a work
  ?movie dbo:director ?spouse ;
         rdf:type dbpedia-owl:Film, dbpedia-owl:CreativeWork .

  # Ensure the director of this movie is born on June 17, 1919, and has a profession related to Guy Ferland
  ?director dbo:birthDate ""1919-06-17""^^xsd:date ;
            dbo:profession ?profession .
  FILTER (regex(str(?profession), ""Guy Ferland"", ""i""))
  
  # Ensure the director of the movie is the person we are looking for
  ?movie dbo:director ?director .
}
```",6,8,7,3,3,3,3,71,0,0,1,0,0.0,0
573,62,test,"Give me the person decedent at the residence, that is a settlement, of the professional, that is American, in Politician and person decedent at the administration, that is a region, of the real name of Charlie Baker (Australian footballer) and parent of John Quincy Adams.","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/deathPlace> ?v6 . ?v0 <http://dbpedia.org/ontology/nationality> <http://dbpedia.org/resource/United_States>. ?v0 <http://dbpedia.org/property/residence> ?v6 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Region>. ?v3 <http://dbpedia.org/property/governor> ?v4 . ?v6 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. ?v0 <http://dbpedia.org/property/occupation> ""Politician""@en . <http://dbpedia.org/resource/John_Quincy_Adams> <http://dbpedia.org/ontology/parent> ?result . <http://dbpedia.org/resource/Charlie_Baker_(Australian_footballer)> <http://xmlns.com/foaf/0.1/name> ?v4 . ?result <http://dbpedia.org/ontology/deathPlace> ?v3 . }","```sparql
SELECT ?decedent WHERE {
  # Find Charlie Baker's real name
  ?charlieBaker dbo:birthName ?realName .
  ?charlieBaker rdfs:label ""Charlie Baker (Australian footballer)""@en .

  # Find the administration related to Charlie Baker's real name
  ?adminRegion dbo:associatedWith ?realName .
  
  # Identify John Quincy Adams' parent
  ?johnQuincyAdams dbo:parent ?parent .
  ?johnQuincyAdams rdfs:label ""John Quincy Adams""@en .

  # Find an American politician and their residence
  ?politician rdf:type dbo:Politician ;
              dbo:nationality dbr:United_States ;
              dbo:residence ?settlement .
  
  # Ensure the settlement is a type of settlement
  ?settlement rdf:type dbo:Settlement .

  # Find the decedent at both locations
  ?decedent dbo:placeOfDeath ?settlement ;
            dbo:placeOfDeath ?adminRegion .
}
```",7,10,8,3,3,3,3,71,0,0,2,0,0.0,0
573,56,test,"Give me the parent of the author, that is a politician and an office holder, of the work of John Quincy Adams and person decedent at Quincy, Massachusetts and person decedent at the administration, that is a region, of Charlie Baker.","SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v0 <http://dbpedia.org/property/author> <http://dbpedia.org/resource/John_Quincy_Adams> . ?result <http://dbpedia.org/ontology/deathPlace> <http://dbpedia.org/resource/Quincy,_Massachusetts> . ?result <http://dbpedia.org/ontology/deathPlace> ?v2 . ?v0 <http://dbpedia.org/property/author> ?v1 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Region>. ?v1 <http://dbpedia.org/ontology/parent> ?result . ?v2 <http://dbpedia.org/property/governor> ""Charlie Baker""@en . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. }","```sparql
SELECT ?parent WHERE {
  # Find works by John Quincy Adams and their authors
  ?work dbo:author ?author .
  ?work dbo:subject dbc:John_Quincy_Adams .

  # Ensure the author is a politician and an office holder
  ?author dbo:occupation dbp:Politician .
  ?author dbo:officeHolder true .

  # Find the parent of this author
  ?author dbo:parent ?parent .

  # Ensure the person is a decedent at Quincy, Massachusetts
  ?parent dbo:placeOfBirth dbc:Quincy_Massachusetts .
  
  # Ensure the person is a decedent associated with Charlie Baker's administration
  ?administration dbo:head dbp:Charlie_Baker .
  ?administration rdf:type dbo:AdministrativeRegion .
  ?parent dbo:decedentAt ?administration .
}
```",6,9,7,3,3,3,3,71,0,0,2,0,0.0,0
582,59,test,"Give me the player in the father, that is an athlete and a soccer manager and a sports manager, of the child of Kazuaki Nagasawa and reference to the residence of the reference, that is a scientist, to Hirotaka Sugawara.","SELECT ?result WHERE { ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Scientist>. ?v3 <http://xmlns.com/foaf/0.1/name> ""Hirotaka Sugawara""@en . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Athlete>. ?v0 <http://dbpedia.org/property/father> ?v5 . ?v0 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Kazuaki_Nagasawa> . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsManager>. ?v5 <http://dbpedia.org/ontology/team> ?result . ?v3 <http://dbpedia.org/property/residence> ?v2 . ?result <http://xmlns.com/foaf/0.1/name> ?v2 . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerManager>. }","```sparql
SELECT ?player WHERE {
  # Step 1: Find the child of Kazuaki Nagasawa
  ?child dbo:parent ?kazuakiNagasawa .
  ?kazuakiNagasawa rdfs:label ""Kazuaki Nagasawa""@en .

  # Step 2: Identify a scientist referenced by this child
  ?child dbo:reference ?scientist .
  ?scientist rdf:type dbo:Scientist .
  
  # Step 3: Determine the residence of this scientist
  ?scientist dbo:residence ?residence .

  # Step 4: Locate an athlete, soccer manager, and sports manager who is the father of this scientist
  ?scientist dbo:parent ?player .
  ?player rdf:type dbo:Athlete ;
          rdf:type dbo:SoccerManager ;
          rdf:type dbo:SportsManager .
}
```",6,10,7,3,2,3,3,71,0,0,1,0,0.0,0
433,68,test,"Give me the associated musical artist of the associated musical artist, that is an artist and a musical artist, of the associated musical artist, that is a musical artist and an artist, of Ornette Coleman and professional in the profession of Bob Marley and associated musical artist of the person born, that is a musical artist and an artist, as the persona of Paul Chambers.",SELECT ?result WHERE { ?v7 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . <http://dbpedia.org/resource/Paul_Chambers> <http://xmlns.com/foaf/0.1/givenName> ?v5 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. <http://dbpedia.org/resource/Bob_Marley> <http://dbpedia.org/property/occupation> ?v3 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. <http://dbpedia.org/resource/Ornette_Coleman> <http://dbpedia.org/ontology/associatedMusicalArtist> ?v0 . ?v7 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?v4 <http://dbpedia.org/property/birthName> ?v5 . ?v4 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?result <http://dbpedia.org/property/occupation> ?v3 . ?v0 <http://dbpedia.org/ontology/associatedMusicalArtist> ?v7 . ?v7 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. },"```sparql
SELECT ?finalAssociatedArtist WHERE {
  # Step 1: Find Ornette Coleman's associated musical artist who is also an artist
  ?ornetteColeman dbo:associatedMusicalArtist ?artist1 .
  ?ornetteColeman rdfs:label ""Ornette Coleman""@en .
  ?artist1 rdf:type dbo:Artist ;
           rdf:type dbo:MusicalArtist .

  # Step 2: Find the associated musical artist of this artist
  ?artist1 dbo:associatedMusicalArtist ?artist2 .
  ?artist2 rdf:type dbo:Artist ;
           rdf:type dbo:MusicalArtist .

  # Step 3: Identify Bob Marley's profession (music)
  ?bobMarley dbo:profession ?profession .
  ?bobMarley rdfs:label ""Bob Marley""@en .
  FILTER regex(str(?profession), ""Music"", ""i"")

  # Step 4: Find the associated musical artist of this professional
  ?profession dbo:associatedMusicalArtist ?artist3 .

  # Step 5: Identify Paul Chambers' persona (born as a musician)
  ?paulChambers dbo:birthPlace ?birthPlace .
  ?paulChambers rdfs:label ""Paul Chambers""@en .
  ?personBornInBirthPlace rdf:type dbo:MusicalArtist ;
                          rdf:type dbo:Artist ;
                          dbo:birthPlace ?birthPlace .

  # Step 6: Find the associated musical artist of this person
  ?personBornInBirthPlace dbo:associatedMusicalArtist ?finalAssociatedArtist .
}
```",8,14,9,3,3,3,3,71,0,0,4,0,0.0,0
892,56,test,"Give me the entity in the administration, that is Italian and a region and a settlement and an administrative region, of the party, that is a political party and an organisation, of Andrea Cozzolino and entity in the profession of Henri Crolla and landmark at elevation of 58.","SELECT ?result WHERE { ?v0 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Italy>. <http://dbpedia.org/resource/Henri_Crolla> <http://dbpedia.org/property/occupation> ?v2 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Region>. ?result <http://dbpedia.org/ontology/elevation> ""58""^^<http://www.w3.org/2001/XMLSchema#integer> . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?v0 <http://dbpedia.org/property/leaderParty> ?v4 . <http://dbpedia.org/resource/Andrea_Cozzolino> <http://dbpedia.org/ontology/party> ?v4 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/AdministrativeRegion>. ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/PoliticalParty>. ?result <http://dbpedia.org/ontology/province> ?v0 . ?result <http://dbpedia.org/ontology/country> ?v2 . }","```sparql
SELECT ?region WHERE {
  # Find Andrea Cozzolino's party
  ?cozzolino dbo:party ?party .
  ?cozzolino rdfs:label ""Andrea Cozzolino""@en .

  # Find an Italian entity that is a region, settlement, and administrative region
  ?region rdf:type dbo:Region ;
          rdf:type dbo:Settlement ;
          rdf:type dbo:AdministrativeRegion ;
          dbo:country dbr:Italy .
  
  # Ensure the region is linked to the party of Andrea Cozzolino
  ?party dbo:administrativeRegion ?region .

  # Find Henri Crolla's profession
  ?crolla dbo:profession ?profession .
  ?crolla rdfs:label ""Henri Crolla""@en .

  # Find a landmark at elevation 58 meters
  ?landmark rdf:type dbo:Landmark ;
            dbo:elevation ""58""^^xsd:int .
  
  # Ensure the region is linked to the landmark (if applicable)
  OPTIONAL { ?region dbo:contains ?landmark }
}
```",6,12,7,3,3,3,3,71,0,0,2,0,0.0,0
874,19,test,"Give me the band of the band member of the band, that is an organisation, of Mark Read (singer) and band of the writer, that is an artist and a musical artist, of Mezzanine (album).",SELECT ?result WHERE { ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. ?v4 <http://dbpedia.org/ontology/associatedMusicalArtist> ?v0 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?result <http://dbpedia.org/ontology/bandMember> ?v2 . ?result <http://dbpedia.org/ontology/bandMember> ?v4 . ?v0 <http://dbpedia.org/ontology/bandMember> <http://dbpedia.org/resource/Mark_Read_(singer)> . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. <http://dbpedia.org/resource/Mezzanine_(album)> <http://dbpedia.org/property/writer> ?v2 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?markReadBand ?mezzanineWriterBand WHERE {
  # Find the band of Mark Read that is an organization
  ?markRead dbo:member ?bandMember .
  ?bandMember rdfs:label ""Mark Read""@en .
  ?bandMember dbo:member ?markReadBand .
  FILTER (regex(str(?markReadBand), ""Maroon 5"", ""i""))
  ?markReadBand rdf:type dbo:Band .

  # Find the writer of Mezzanine and their band
  ?album dbo:creator ?writer .
  ?album rdfs:label ""Mezzanine""@en .
  ?writer rdfs:label ?writerLabel .
  ?writer dbo:member ?mezzanineWriterBand .
  FILTER (regex(str(?writer), ""Massive Attack"", ""i""))
  ?mezzanineWriterBand rdf:type dbo:MusicalArtist .
}
```",5,8,6,3,2,3,2,20,0,0,1,0,0.0,0
267,18,test,"Give me the person born on the birth date of Dan Cathy and coach of the player, that is a soccer club, in the manager of 2020–21 Tractor S.C. season.",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/birthDate> ?v3 . <http://dbpedia.org/resource/2020–21_Tractor_S.C._season> <http://dbpedia.org/ontology/manager> ?v1 . ?v1 <http://dbpedia.org/ontology/team> ?v2 . <http://dbpedia.org/resource/Dan_Cathy> <http://dbpedia.org/ontology/birthDate> ?v3 . ?v2 <http://dbpedia.org/ontology/coach> ?result . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerClub>. },"```sparql
SELECT ?person WHERE {
  # Find Dan Cathy's birth date
  ?danCathy dbo:birthDate ?birthDate .
  ?danCathy rdfs:label ""Dan Cathy""@en .

  # Find the manager of Tractor S.C. for the 2020–21 season
  ?tractorManager dbo:managerOf ?tractorClub ;
                  dbo:managedSeason ?season .
  ?tractorClub rdfs:label ""Tractor S.C.""@en .
  ?season rdfs:label ""2020–21""@en .

  # Find a player managed by this coach
  ?player dbo:coach ?tractorManager ;
          dbo:birthDate ?playerBirthDate .

  # Check if the player's birth date matches Dan Cathy's birth date
  FILTER (?playerBirthDate = ?birthDate)

  # Return the person who was born on Dan Cathy's birth date and is a player managed by this coach
  BIND(?player AS ?person)
}
```",5,6,6,3,2,3,2,20,0,0,1,0,0.0,0
83,9,test,"Give me the player in the person born on 1995-07-07 and player in the person born, that is an athlete, on 1991-11-19.","SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/team> ?result . ?v3 <http://dbpedia.org/ontology/birthDate> ""1991-11-19""^^<http://www.w3.org/2001/XMLSchema#date> . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Athlete>. ?v3 <http://dbpedia.org/ontology/team> ?result . ?v1 <http://dbpedia.org/ontology/birthDate> ""1995-07-07""^^<http://www.w3.org/2001/XMLSchema#date> . }","```sparql
# Query for athlete born on 1995-07-07
SELECT ?athlete WHERE {
  ?athlete dbo:birthDate ""1995-07-07""^^xsd:date .
  ?athlete rdf:type dbo:Athlete .
}

# Query for athlete born on 1991-11-19
SELECT ?athlete WHERE {
  ?athlete dbo:birthDate ""1991-11-19""^^xsd:date .
  ?athlete rdf:type dbo:Athlete .
}
```",4,5,5,2,2,2,2,9,0,0,5,0,0.0,0
192,18,test,"Give me the spouse of the spouse, that is a royalty, of the child of Charles II of Naples and child of the child of Stephen V of Hungary.",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/parent> ?v3 . ?v2 <http://dbpedia.org/ontology/spouse> ?result . ?v1 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Charles_II_of_Naples> . ?v3 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Stephen_V_of_Hungary> . ?v2 <http://dbpedia.org/ontology/spouse> ?v1 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. },"```sparql
SELECT ?siblingSpouse WHERE {
  # Find Charles II of Naples' child
  ?charlesChild dbo:parent dbr:Charles_II_of_Naples .
  
  # Find Stephen V of Hungary's grandchild
  ?stephenGrandchild dbo:parent ?stephenChild .
  ?stephenChild dbo:parent dbr:Stephen_V_of_Hungary .

  # Identify the common individual
  FILTER (?charlesChild = ?stephenGrandchild)

  # Find the spouse of this common individual who is royalty
  ?commonIndividual dbo:spouse ?royalSpouse .
  
  # Ensure the spouse is royalty (e.g., by checking their title)
  OPTIONAL { 
    ?royalSpouse rdfs:label ?label .
    FILTER regex(?label, ""Queen|King|Princess|Prince"", ""i"")
  }

  # Find the sibling or another relation of this royal spouse
  ?royalSpouse dbo:siblingOrOtherRelation ?siblingSpouse .
}
```",5,6,6,3,2,3,2,20,0,0,1,0,0.0,0
791,57,test,"Give me the spouse of Taira no Tokuko and father of the child, that is a royalty, of Emperor Takakura and predecessor of the child of the child, that is an office holder and a royalty, of Emperor Go-Shirakawa.",SELECT ?result WHERE { ?v5 <http://dbpedia.org/property/father> ?v0 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?result <http://dbpedia.org/ontology/successor> ?v5 . ?v3 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Emperor_Takakura> . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v3 <http://dbpedia.org/property/father> ?result . ?result <http://dbpedia.org/ontology/spouse> <http://dbpedia.org/resource/Taira_no_Tokuko> . ?v0 <http://dbpedia.org/ontology/parent> <http://dbpedia.org/resource/Emperor_Go-Shirakawa> . },"```sparql
SELECT ?spouse ?fatherOfRoyalChild ?predecessor WHERE {
  # Find Taira no Tokuko's spouse
  ?tokuko dbo:spouse ?spouse .
  ?tokuko rdfs:label ""Taira no Tokuko""@en .

  # Find a royal child of Emperor Takakura and their father
  ?takakuraChild dbo:parent ?fatherOfRoyalChild ;
                 dbo:childOf ?takakura .
  ?takakura rdfs:label ""Emperor Takakura""@en .
  FILTER (regex(str(?takakuraChild), ""royalty"", ""i""))

  # Find the predecessor of a specific descendant of Emperor Go-Shirakawa
  ?goShirakawaDescendant dbo:childOf ?goShirakawa ;
                        dbo:officeHolder ?predecessor .
  ?goShirakawa rdfs:label ""Emperor Go-Shirakawa""@en .
  FILTER (regex(str(?goShirakawaDescendant), ""royalty"", ""i""))
}
```",6,9,7,3,3,3,3,71,0,0,1,0,0.0,0
933,69,test,"Give me the band of the band, that is a group and a band and an organisation, of the person born, that is a musical artist, on 1947-04-21 and reference to the birth name of Alan Warner (musician) and band of the band of the band, that is an artist and a musical artist, of The Ramong Sound.","SELECT ?result WHERE { ?v5 <http://dbpedia.org/ontology/birthDate> ""1947-04-21""^^<http://www.w3.org/2001/XMLSchema#date> . ?v0 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. ?v5 <http://dbpedia.org/ontology/associatedMusicalArtist> ?v0 . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?result <http://xmlns.com/foaf/0.1/name> ?v6 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?v4 <http://dbpedia.org/ontology/associatedMusicalArtist> ?v2 . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. <http://dbpedia.org/resource/Alan_Warner_(musician)> <http://dbpedia.org/property/birthName> ?v6 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Band>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Group>. ?v2 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . <http://dbpedia.org/resource/The_Ramong_Sound> <http://dbpedia.org/ontology/associatedMusicalArtist> ?v4 . }","```sparql
SELECT ?finalBand WHERE {
  # Step 1: Identify the person born on 1947-04-21 who is a musical artist
  ?person dbo:birthDate ""1947-04-21""^^xsd:date ;
          rdf:type dbo:MusicalArtist ;
          foaf:name ?name .
  
  # Ensure this person is related to Alan Warner (musician) through birth name
  FILTER regex(?name, ""Alan Warner"", ""i"")

  # Step 2: Find the band associated with this person
  ?person dbo:band ?firstBand .
  ?firstBand rdf:type dbo:MusicalGroup ;
             dbo:organizationType dbc:MusicalGroups .

  # Step 3: Identify the band of the first band
  ?firstBand dbo:member ?secondPerson .
  ?secondPerson dbo:band ?secondBand .
  ?secondBand rdf:type dbo:MusicalArtist ;
              dbo:artist ?artist .

  # Step 4: Find the band associated with this second band
  ?secondBand dbo:band ?finalBand .
  
  # Link to The Ramones Sound
  OPTIONAL {
    ?finalBand foaf:name ""The Ramones Sound"" .
  }
}
```",8,14,9,3,3,3,3,71,0,0,1,0,0.0,0
417,66,test,"Give me the child of the father of Frederick IX of Denmark and child of the child, that is a royalty, of the parent, that is a royalty, of Alexandrine of Mecklenburg-Schwerin and spouse of the parent, that is a royalty, of Count Ingolf of Rosenborg.",SELECT ?result WHERE { ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?result <http://dbpedia.org/property/father> ?v6 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?result <http://dbpedia.org/ontology/spouse> ?v3 . ?v3 <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Count_Ingolf_of_Rosenborg> . <http://dbpedia.org/resource/Alexandrine_of_Mecklenburg-Schwerin> <http://dbpedia.org/ontology/parent> ?v1 . <http://dbpedia.org/resource/Frederick_IX_of_Denmark> <http://dbpedia.org/property/father> ?v6 . ?result <http://dbpedia.org/ontology/parent> ?v2 . ?v2 <http://dbpedia.org/property/father> ?v1 . },"```sparql
SELECT ?child WHERE {
  # Step a: Find father of Frederick IX of Denmark
  ?frederickIX dbo:parent ?father .
  ?frederickIX rdfs:label ""Frederick IX of Denmark""@en .

  # Step b: Find child of the father (could be Frederick IX or another sibling)
  OPTIONAL { 
    ?father dbo:child ?child1 .
  }

  # Step c: Identify parent(s) of Alexandrine of Mecklenburg-Schwerin
  ?alexandrine dbo:parent ?royalParent .
  ?alexandrine rdfs:label ""Alexandrine of Mecklenburg-Schwerin""@en .

  # Ensure the parent is royalty
  FILTER EXISTS { 
    ?royalParent rdf:type dbo:Monarch .
  }

  # Step d: Find child of Alexandrine's child who is royalty
  OPTIONAL {
    ?child1 dbo:parent ?alexandrineChild .
    ?alexandrineChild dbo:child ?royaltyChild .
    FILTER EXISTS { 
      ?royaltyChild rdf:type dbo:Monarch .
    }
  }

  # Step e: Identify parent(s) of Count Ingolf of Rosenborg
  ?ingolf dbo:parent ?countParent .
  ?ingolf rdfs:label ""Count Ingolf of Rosenborg""@en .

  # Ensure the parent is royalty
  FILTER EXISTS { 
    ?countParent rdf:type dbo:Monarch .
  }

  # Find spouse of this royal parent
  OPTIONAL {
    ?countParent dbo:spouse ?spouse",7,10,8,3,3,3,3,71,0,0,1,0,0.0,0
93,20,test,"Give me the death place of the governor of the native, that is a politician, of Seattle and capital of the headquarter, that is a region and a settlement, of the headquarter of Clam Cove Pictograph Site.",SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/location> ?v2 . ?v2 <http://dbpedia.org/ontology/capital> ?result . ?v4 <http://dbpedia.org/property/governor> ?v5 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v5 <http://dbpedia.org/ontology/deathPlace> ?result . ?v4 <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Seattle> . <http://dbpedia.org/resource/Clam_Cove_Pictograph_Site> <http://dbpedia.org/ontology/location> ?v1 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Region>. },"```sparql
SELECT ?deathPlace WHERE {
  # Find Seattle as a city and region
  ?seattle dbo:city ?city .
  ?seattle rdfs:label ""Seattle""@en .

  # Identify the governor of Seattle who is a politician
  OPTIONAL { 
    ?governor dbo:officeHolderOf ?seattle ;
              rdf:type dbo:Politician .
  }

  # Find Clam Cove Pictograph Site and its headquarters' capital
  ?clamCove dbo:headquarters ?headquarters .
  ?clamCove rdfs:label ""Clam Cove Pictograph Site""@en .

  OPTIONAL {
    ?capital dbo:capital ?headquarters ;
             rdf:type dbo:Settlement, dbo:Region .
  }

  # Retrieve the death place of the governor
  ?governor dbo:deathPlace ?deathPlace .
}
```",6,9,7,3,2,3,2,20,0,0,1,0,0.0,0
456,56,test,"Give me the band of the band, that is a musical artist, of the band of Alan Doyle and professional in  and spouse of the actor of Pacific Drive.","SELECT ?result WHERE { ?v2 <http://dbpedia.org/ontology/spouse> ?result . <http://dbpedia.org/resource/Pacific_Drive> <http://dbpedia.org/property/starring> ?v2 . ?v1 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v0 <http://dbpedia.org/ontology/associatedMusicalArtist> ?v1 . <http://dbpedia.org/resource/Alan_Doyle> <http://dbpedia.org/ontology/associatedMusicalArtist> ?v0 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?result <http://dbpedia.org/property/occupation> """"@en . }","```sparql
SELECT ?bandOfBand ?professionalField ?spouse WHERE {
  # Step 1: Find Alan Doyle's Band
  ?doyle dbo:member ?alanDoyle .
  ?alanDoyle rdfs:label ""Alan Doyle""@en .
  
  ?doyle dbo:name ?bandName .
  FILTER regex(?bandName, ""Great Big Sea"", ""i"") .

  # Step 2: Find the band of that band (if applicable)
  OPTIONAL {
    ?relatedBand dbo:member ?bandMember .
    ?bandMember rdfs:label ?bandName .
    
    # Assuming a related band or artist
    ?relatedBand dbo:name ?bandOfBand .
  }

  # Step 3: Determine the professional field of this second band
  OPTIONAL {
    ?bandOfBand dbo:field ?professionalField .
  }
  
  # Step 4: Find an actor from Pacific Drive
  ?actor dbo:film ?pacificDrive .
  ?pacificDrive rdfs:label ""Pacific Drive""@en .

  # Step 5: Find the spouse of that actor
  OPTIONAL {
    ?actor dbo:spouse ?spouse .
  }
}
```",6,7,7,3,3,3,3,71,0,0,1,0,0.0,0
232,9,test,"Give me the claim to fame of the person born as Emily Katherine Jacques and artistic movement of the person born, that is a writer, on 1849-09-14.","SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/movement> ?result . ?v3 <http://dbpedia.org/property/birthName> ""Emily Katherine Jacques""@en . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Writer>. ?v3 <http://dbpedia.org/ontology/knownFor> ?result . ?v1 <http://dbpedia.org/ontology/birthDate> ""1849-09-14""^^<http://www.w3.org/2001/XMLSchema#date> . }","```sparql
# Query for Emily Katherine Jacques' claim to fame
SELECT ?claimToFame WHERE {
  ?person rdfs:label ""Emily Katherine Jacques""@en .
  ?person dbo:notableWorkOrEvent ?claimToFame .
}

UNION

# Query for the writer born on 1849-09-14 and their artistic movement
SELECT ?artisticMovement WHERE {
  ?writer dbo:birthDate ""1849-09-14""^^xsd:date ;
          rdf:type dbo:Writer .
  ?writer dbo:occupation ?occupation .
  FILTER (CONTAINS(LCASE(str(?occupation)), ""writer""))
  OPTIONAL { 
    ?writer dbo:associatedMusicalArtistOrBand ?artisticMovement .
  }
}
```",4,5,5,2,2,2,2,9,0,0,1,0,0.0,0
715,66,test,"Give me the commander in the force, that is a military conflict, of Abd el-Krim and leader of the office, that is a government agency and an organisation, of the reference to Carlos Franco Iribarnegaray and commander in the force of Francisco Largo Caballero.","SELECT ?result WHERE { ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/GovernmentAgency>. ?v1 <http://dbpedia.org/property/office> ?v2 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?v2 <http://dbpedia.org/ontology/leader> ?result . ?v6 <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Francisco_Largo_Caballero> . ?v3 <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Abd_el-Krim> . ?v6 <http://dbpedia.org/ontology/commander> ?result . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v3 <http://dbpedia.org/ontology/commander> ?result . ?v1 <http://xmlns.com/foaf/0.1/name> ""Carlos Franco Iribarnegaray""@en . }","```sparql
SELECT ?commonIndividual WHERE {
  # Find the military conflict involving Abd el-Krim and its commander
  ?conflict dbo:commander ?abdElKrimCommander .
  ?abdElKrimCommander rdfs:label ""Abd el-Krim""@en .

  # Find the organization led by Carlos Franco Iribarnegaray
  ?organization dbo:leader ?carlosFrancoLeader .
  ?carlosFrancoLeader rdfs:label ""Carlos Franco Iribarnegaray""@en .

  # Find the military force commanded by Francisco Largo Caballero
  ?force dbo:commander ?franciscoLargoCommander .
  ?franciscoLargoCommander rdfs:label ""Francisco Largo Caballero""@en .

  # Check if there is a common individual fitting all roles
  FILTER (?abdElKrimCommander = ?carlosFrancoLeader && ?carlosFrancoLeader = ?franciscoLargoCommander)
  BIND(?abdElKrimCommander AS ?commonIndividual)
}
```",7,10,8,3,3,3,3,71,0,0,1,0,0.0,0
888,20,test,"Give me the commander in the force, that is a societal event and an event, of the military force of War in Donbas (2014–2022) and awardee of the award of the commander in 2022 Ukrainian eastern counteroffensive.",SELECT ?result WHERE { ?v4 <http://dbpedia.org/property/awards> ?v5 . <http://dbpedia.org/resource/2022_Ukrainian_eastern_counteroffensive> <http://dbpedia.org/ontology/commander> ?v4 . ?v2 <http://dbpedia.org/ontology/commander> ?v1 . ?v2 <http://dbpedia.org/ontology/commander> ?result . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?result <http://dbpedia.org/property/awards> ?v5 . ?v1 <http://dbpedia.org/ontology/battle> <http://dbpedia.org/resource/War_in_Donbas_(2014–2022)> . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. },"```sparql
SELECT ?commander WHERE {
  # Identify military force involved in War in Donbas (2014–2022)
  ?force dbo:wikiPageRedirects dbpedia:War_in_Donbass .
  
  # Find commander associated with this force
  ?force dbo:commander ?commander .

  # Ensure the commander is linked to a societal event and an event related to the conflict
  ?event1 dbo:relatedEvent ?commander .
  ?event2 dbo:relatedEvent ?commander .
  FILTER (regex(str(?event1), ""societal"", ""i"") && regex(str(?event2), ""War in Donbas"", ""i""))

  # Identify awardee of the 2022 Ukrainian Eastern Counteroffensive award
  ?award dbo:recipient ?commander .
  ?award rdfs:label ""2022 Ukrainian Eastern Counteroffensive Award""@en .
}
```",6,8,7,3,2,3,2,20,0,0,4,0,0.0,0
456,61,test,"Give me the band of the band, that is a musical artist, of the band of Alan Doyle and professional in the alter ego of the reference, that is a fictional character, to Lamont Cranston (radio, film and television).","SELECT ?result WHERE { <http://dbpedia.org/resource/Alan_Doyle> <http://dbpedia.org/ontology/associatedMusicalArtist> ?v1 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?v1 <http://dbpedia.org/ontology/associatedMusicalArtist> ?v3 . ?v3 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/FictionalCharacter>. ?v0 <http://dbpedia.org/property/alterEgo> ?v5 . ?result <http://dbpedia.org/property/occupation> ?v5 . ?v0 <http://xmlns.com/foaf/0.1/name> ""Lamont Cranston (radio, film and television)""@en . }","```sparql
SELECT ?bandOfBand WHERE {
  # Step 1: Identify Alan Doyle's Band
  ?doyle dbo:musicArtist <http://dbpedia.org/resource/Great_Big_Sea> .
  
  # Step 2: Find the band of Alan Doyle's band (Great Big Sea)
  OPTIONAL { 
    ?greatBigSea dbo:bandMember ?member .
    ?member dbo:musicArtist ?bandOfBand .
  }
  
  # Step 3: Identify Lamont Cranston's Alter Ego
  ?cranston rdfs:label ""Lamont Cranston""@en .
  ?shadow dbo:alterEgo ?cranston .
  
  # Step 4: Find professional in the alter ego of The Shadow
  OPTIONAL {
    ?shadow dbo:profession ?professional .
  }
  
  # Step 5: Connect the band of Alan Doyle's band to the professional in the alter ego
  FILTER (?bandOfBand = ?professional)
}
```",6,8,7,3,2,3,3,71,0,0,1,0,0.0,0
459,23,val,"Give me the governor of the death place, that is a settlement, of Cliff Roquemore and person born as the birth name of Kevin Stitt.",SELECT ?result WHERE { ?result <http://dbpedia.org/property/birthName> ?v2 . ?v1 <http://dbpedia.org/property/governor> ?result . <http://dbpedia.org/resource/Kevin_Stitt> <http://dbpedia.org/property/birthName> ?v2 . <http://dbpedia.org/resource/Cliff_Roquemore> <http://dbpedia.org/ontology/deathPlace> ?v1 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. },"```sparql
SELECT ?governor WHERE {
  # Find Cliff Roquemore and his death place which is a settlement
  ?roquemore dbo:deathPlace ?deathPlace .
  ?roquemore rdfs:label ""Cliff Roquemore""@en .
  
  # Ensure the death place is a settlement
  ?deathPlace rdf:type dbo:Settlement .

  # Find the governor of that settlement
  ?deathPlace dbo:governor ?governor .

  # Find Kevin Stitt and his birth name
  ?stitt foaf:name ?birthName .
  ?stitt rdfs:label ""Kevin Stitt""@en .

  # Find a person with the same birth name as Kevin Stitt's birth name
  ?person foaf:name ?birthName .
}
```",4,5,5,2,2,2,3,28,0,0,1,0,0.0,0
773,49,val,"Give me the spouse of the father of Charles the Fat and parent of the child, that is a royalty, of the father, that is an office holder and a royalty, of Carloman of Bavaria.",SELECT ?result WHERE { ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v1 <http://dbpedia.org/ontology/parent> ?result . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v1 <http://dbpedia.org/property/father> ?v0 . <http://dbpedia.org/resource/Charles_the_Fat> <http://dbpedia.org/property/father> ?v2 . <http://dbpedia.org/resource/Carloman_of_Bavaria> <http://dbpedia.org/property/father> ?v0 . ?v2 <http://dbpedia.org/ontology/spouse> ?result . },"```sparql
SELECT ?spouse WHERE {
  # Step 1: Find Charles the Fat's father
  ?charlesFat dbo:parent ?father .
  ?charlesFat rdfs:label ""Charles the Fat""@en .

  # Step 2: Find spouse of Charles the Fat's father
  ?father dbo:spouse ?spouse .

  # Step 3 & 4: Identify a royal child of this spouse and their parent
  OPTIONAL {
    ?child dbo:parent ?spouse .
    ?child rdf:type dbo:Monarch .
    
    # Find the parent (either mother or father) of this royal child
    OPTIONAL {
      ?parent dbo:parent ?child .
      FILTER (?parent != ?spouse)
    }
  }

  # Step 5: Identify Carloman of Bavaria's father who is an office holder and royalty
  ?carloman dbo:parent ?fatherOfCarloman .
  ?carloman rdfs:label ""Carloman, Duke of Bavaria""@en .
  
  OPTIONAL {
    ?officeHolder rdf:type dbo:OfficeHolder ;
                  dbo:parent ?fatherOfCarloman .
    FILTER EXISTS { ?fatherOfCarloman rdf:type dbo:Monarch }
  }

  # Step 6: Find the spouse of this parent
  ?fatherOfCarloman dbo:spouse ?spouse .
}
```",5,8,6,3,2,3,3,71,0,0,1,0,0.0,0
18,20,val,"Give me the professional in  and parent of the professional in Actress and alumnus of Marymount College, Tarrytown.","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/almaMater> <http://dbpedia.org/resource/Marymount_College,_Tarrytown> . ?result <http://dbpedia.org/ontology/child> ?v0 . ?result <http://dbpedia.org/property/occupation> """"@en . ?v0 <http://dbpedia.org/property/occupation> ""Actress""@en . }","```sparql
SELECT ?actress ?parent WHERE {
  # Find the actress who is an alumnus of Marymount College, Tarrytown
  ?actress dbo:almaMater dbr:Marymount_College_(Tarrytown) .
  ?actress dbo:profession dbr:Actress .

  # Retrieve the parent of this actress
  ?actress dbo:parent ?parent .
}
```",4,4,5,2,3,2,3,28,0,0,1,0,0.0,0
443,23,val,Give me the landmark at elevation of the award of William Shepherd and birthplace of the work of yes.,"SELECT ?result WHERE { <http://dbpedia.org/resource/William_Shepherd> <http://dbpedia.org/property/awards> ?v1 . ?v2 <http://dbpedia.org/property/author> ""yes""@en . ?result <http://dbpedia.org/ontology/elevation> ?v1 . ?v2 <http://dbpedia.org/ontology/birthPlace> ?result . }","```sparql
# Query for William Shepherd's award and its landmark elevation
SELECT ?landmark ?elevation WHERE {
  ?shepherd dbo:award ?award .
  ?shepherd rdfs:label ""William Shepherd""@en .
  
  # Assuming the award is related to a specific location or event with a landmark
  OPTIONAL { 
    ?award dbo:location ?location .
    ?location dbo:landmark ?landmark .
    ?landmark dbo:elevation ?elevation .
  }
}

# Query for Yes' work and its birthplace
SELECT ?work ?birthplace WHERE {
  ?yes dbo:album ?work .
  ?yes rdfs:label ""Yes""@en .
  
  # Assuming the work has a known place of origin or recording location
  OPTIONAL { 
    ?work dbo:locationCreated ?birthplace .
  }
}
```",4,4,5,2,2,2,3,28,0,0,2,0,0.0,0
917,49,val,"Give me the child of the father of the child, that is a royalty, of Kamehameha III and parent of the child, that is a royalty, of Kamehameha IV.",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/child> ?v2 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v4 <http://dbpedia.org/property/father> ?v0 . ?result <http://dbpedia.org/property/father> ?v0 . <http://dbpedia.org/resource/Kamehameha_III> <http://dbpedia.org/ontology/child> ?v4 . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v2 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Kamehameha_IV> . },"```sparql
SELECT ?grandchild ?parentOfKIVChild WHERE {
  # Find a royal child of Kamehameha III
  ?kIII dbo:child ?royalChild .
  ?kIII rdfs:label ""Kamehameha III""@en .
  
  # Ensure the child is royalty (assuming label contains 'King' or similar)
  FILTER regex(str(?royalChild), ""King|Queen"", ""i"")

  # Find father of this royal child
  ?royalChild dbo:parent ?father .

  # Find grandchild of Kamehameha III (child of the royal child's parent)
  ?father dbo:child ?grandchild .

  # Find a royal child of Kamehameha IV
  ?kIV dbo:child ?royalChildKIV .
  ?kIV rdfs:label ""Kamehameha IV""@en .

  # Ensure the child is royalty (assuming label contains 'King' or similar)
  FILTER regex(str(?royalChildKIV), ""King|Queen"", ""i"")

  # Find parent of this royal child
  ?royalChildKIV dbo:parent ?parentOfKIVChild .
}
```",5,7,6,3,2,3,3,71,0,0,1,0,0.0,0
170,23,val,Give me the entity in the work of International Energy Agency and domain of the profession of John Scholey.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/country> ?v2 . ?v2 <http://dbpedia.org/property/author> <http://dbpedia.org/resource/International_Energy_Agency> . ?result <http://dbpedia.org/ontology/leaderTitle> ?v1 . <http://dbpedia.org/resource/John_Scholey> <http://dbpedia.org/property/occupation> ?v1 . },"```sparql
SELECT ?ieaEntity ?scholeyDomain WHERE {
  # Part 1: Entity in the work of International Energy Agency
  ?ieaEntity dbo:workFor dbr:International_Energy_Agency .
  
  # Part 2: Domain of the profession of John Scholey
  ?scholey foaf:name ""John Scholey""@en .
  ?scholey dbo:profession ?profession .
  ?profession dbo:fieldOfStudy ?scholeyDomain .
}
```",4,4,5,2,2,2,3,28,0,0,99,0,0.0,0
645,46,val,"Give me the commander in the force of the commander in Siege of Madrid and military force of the force, that is an event and a military conflict and a societal event, of Francisco Largo Caballero.",SELECT ?result WHERE { ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?result <http://dbpedia.org/ontology/battle> ?v4 . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. <http://dbpedia.org/resource/Siege_of_Madrid> <http://dbpedia.org/ontology/commander> ?v2 . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?v1 <http://dbpedia.org/ontology/commander> ?v2 . ?v1 <http://dbpedia.org/ontology/commander> ?result . ?v4 <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Francisco_Largo_Caballero> . },"```sparql
SELECT ?commanderInForce WHERE {
  # Identify the Siege of Madrid and its associated commander
  ?siege dbo:participatedInMilitaryConflict ?conflict .
  ?siege rdfs:label ""Siege of Madrid""@en .
  
  OPTIONAL { 
    ?siege dbo:commander ?initialCommander .
  }
  
  # Identify the military force involved in the Siege of Madrid
  ?force dbo:participatedInMilitaryConflict ?conflict .
  
  # Find the commander of this military force
  ?force dbo:commander ?commanderInForce .

  # Ensure the event is a societal event involving Francisco Largo Caballero
  OPTIONAL {
    ?event dbo:participant ?franciscoLargoCaballero .
    ?franciscoLargoCaballero rdfs:label ""Francisco Largo Caballero""@en .
    FILTER (regex(str(?event), ""Societal Event"", ""i""))
  }
}
```",5,8,6,3,2,3,3,71,0,0,53,0,0.0,0
715,42,val,"Give me the commander in the force, that is a military conflict, of Abd el-Krim and commander in Spanish Civil War and leader of the office, that is a government agency and an organisation, of Carlos Franco Iribarnegaray.",SELECT ?result WHERE { <http://dbpedia.org/resource/Carlos_Franco_Iribarnegaray> <http://dbpedia.org/property/office> ?v1 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?v1 <http://dbpedia.org/ontology/leader> ?result . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/GovernmentAgency>. ?v2 <http://dbpedia.org/ontology/commander> ?result . ?v2 <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Abd_el-Krim> . <http://dbpedia.org/resource/Spanish_Civil_War> <http://dbpedia.org/ontology/commander> ?result . },"```sparql
SELECT ?abdElKrimCommander ?spanishCivilWarCommander ?carlosFrancoLeader WHERE {
  # Find Abd el-Krim's role as a commander in a military conflict
  OPTIONAL {
    ?abdElKrim dbo:commander ?abdElKrimCommander .
    ?abdElKrim rdfs:label ""Abd el-Krim""@en .
    ?abdElKrimCommander dbo:militaryConflict ?conflict .
  }

  # Find commanders in the Spanish Civil War
  OPTIONAL {
    ?spanishCivilWarCommander dbo:commander ?civilWar .
    ?civilWar rdfs:label ""Spanish Civil War""@en .
  }
  
  # Identify Carlos Franco Iribarnegaray's leadership role
  OPTIONAL {
    ?carlosFranco dbo:leader ?office .
    ?carlosFranco rdfs:label ""Carlos Franco Iribarnegaray""@en .
    ?office a dbo:GovernmentAgency ; dbo:Organization .
  }
}
```",5,8,6,2,3,3,3,71,0,0,1,0,0.0,0
839,44,val,"Give me the band of the member of Böhse Onkelz and band of Kevin Russell (musician) and band of the band, that is a musical artist, of Charlie Huhn.",SELECT ?result WHERE { <http://dbpedia.org/resource/Böhse_Onkelz> <http://dbpedia.org/ontology/bandMember> ?v4 . <http://dbpedia.org/resource/Charlie_Huhn> <http://dbpedia.org/ontology/associatedMusicalArtist> ?v2 . ?result <http://dbpedia.org/ontology/bandMember> ?v2 . <http://dbpedia.org/resource/Kevin_Russell_(musician)> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?result <http://dbpedia.org/ontology/bandMember> ?v4 . },"```sparql
# Query 1: Band of a member of Böhse Onkelz
SELECT ?memberBand WHERE {
  ?boMember dbo:memberOf dbr:Böhse_Onkelz .
  ?boMember dbo:band ?memberBand .
}

UNION

# Query 2: Band of Kevin Russell (musician)
SELECT ?kevinRussellBand WHERE {
  ?kevinRussell foaf:name ""Kevin Russell""@en .
  ?kevinRussell dbo:band ?kevinRussellBand .
}

UNION

# Query 3: Band of the band, which is a musical artist, of Charlie Huhn
SELECT ?charlieHuhnBand ?relatedBand WHERE {
  ?charlieHuhn foaf:name ""Charlie Huhn""@en .
  ?charlieHuhn dbo:band ?charlieHuhnBand .

  OPTIONAL {
    ?charlieHuhnBand dbo:memberOf ?relatedBand .
  }
}
```",5,6,6,2,3,3,3,71,0,0,1,0,0.0,0
41,23,val,"Give me the party of the work, that is an office holder, of yes and party of the leader, that is a politician and an office holder, of 2005 Castlereagh Borough Council election.","SELECT ?result WHERE { ?v3 <http://dbpedia.org/ontology/party> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. <http://dbpedia.org/resource/2005_Castlereagh_Borough_Council_election> <http://dbpedia.org/property/leader> ?v3 . ?v1 <http://dbpedia.org/property/author> ""yes""@en . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v1 <http://dbpedia.org/ontology/party> ?result . }","```sparql
SELECT ?yesParty ?leaderParty WHERE {
  # Find the office holder named ""Yes"" and their political party
  ?yes dbo:officeHolder true .
  ?yes rdfs:label ""Yes""@en .
  ?yes dbo:party ?yesParty .

  # Find the leader of the 2005 Castlereagh Borough Council election who is a politician and an office holder, and their political party
  ?election dbo:leader ?leader .
  ?election rdfs:label ""2005 Castlereagh Borough Council election""@en .
  ?leader dbo:officeHolder true .
  ?leader dbo:politician true .
  ?leader dbo:party ?leaderParty .
}
```",4,7,5,2,2,2,3,28,0,0,1,0,0.0,0
865,41,val,"Give me the father of the child, that is a politician, of Abu Ahmad Abdul Hafiz and father of Shahla Khatun and native of the residence, that is a country, of Ram Jaipal Singh Yadav.",SELECT ?result WHERE { ?v4 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Abu_Ahmad_Abdul_Hafiz> . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. <http://dbpedia.org/resource/Ram_Jaipal_Singh_Yadav> <http://dbpedia.org/property/residence> ?v0 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. <http://dbpedia.org/resource/Shahla_Khatun> <http://dbpedia.org/property/father> ?result . ?result <http://dbpedia.org/ontology/birthPlace> ?v0 . ?v4 <http://dbpedia.org/property/father> ?result . },"```sparql
SELECT ?father WHERE {
  # Abu Ahmad Abdul Hafiz and his child who is a politician
  ?hafiz dbo:child ?politician .
  ?hafiz rdfs:label ""Abu Ahmad Abdul Hafiz""@en .
  ?politician rdf:type dbo:Politician .

  # Shahla Khatun's father
  ?shahla dbo:parent ?father .
  ?shahla rdfs:label ""Shahla Khatun""@en .

  # Ram Jaipal Singh Yadav's residence country
  ?ram dbo:nativeCountry ?country .
  ?ram rdfs:label ""Ram Jaipal Singh Yadav""@en .

  # Ensure the father is native to the same country as Ram Jaipal Singh Yadav
  ?father dbo:nativeCountry ?country .
}
```",5,7,6,2,3,3,3,71,0,0,1,0,0.0,0
216,54,val,"Give me the player in the coach, that is a soccer player and a sports manager and a soccer manager, of the player, that is an organisation and a sports club and a soccer club, in Džemal Berberović and player in the coach of Croatia national under-21 football team and team of Ognjen Vukojević.",SELECT ?result WHERE { ?v0 <http://dbpedia.org/ontology/coach> ?v5 . ?result <http://dbpedia.org/ontology/coach> <http://dbpedia.org/resource/Ognjen_Vukojević> . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. <http://dbpedia.org/resource/Croatia_national_under-21_football_team> <http://dbpedia.org/ontology/coach> ?v3 . <http://dbpedia.org/resource/Džemal_Berberović> <http://dbpedia.org/ontology/team> ?v0 . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsManager>. ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerManager>. ?v5 <http://dbpedia.org/ontology/team> ?result . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerClub>. ?v3 <http://dbpedia.org/ontology/team> ?result . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerPlayer>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsClub>. },"```sparql
SELECT ?player WHERE {
  # Find Džemal Berberović's managed organization
  ?berberovic dbo:coach ?organization .
  ?berberovic rdfs:label ""Džemal Berberović""@en .

  # Identify the player in the coach of Croatia national under-21 football team
  ?croatiaTeam dbo:playerInCoach ?player .
  ?croatiaTeam rdfs:label ""Croatia national under-21 football team""@en .

  # Ensure the player is a soccer player, sports manager, and soccer manager for the organization
  ?player rdf:type dbo:SoccerPlayer ;
          rdf:type dbo:SportsManager ;
          rdf:type dbo:SoccerManager .
  ?player dbo:worksFor ?organization .

  # Find Ognjen Vukojević's team/club association
  OPTIONAL {
    ?vukojevic dbo:team ?team .
    ?vukojevic rdfs:label ""Ognjen Vukojević""@en .
    FILTER (regex(str(?team), ""sports club|soccer club"", ""i""))
  }
}
```",6,12,7,3,3,3,3,71,0,0,1,0,0.0,0
129,21,val,Give me the associated musical artist of the person born as Tahj Malik Chandler and associated musical artist of EarthGang and professional in .,"SELECT ?result WHERE { <http://dbpedia.org/resource/EarthGang> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v0 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v0 <http://dbpedia.org/property/birthName> ""Tahj Malik Chandler""@en . ?result <http://dbpedia.org/property/occupation> """"@en . }","```sparql
SELECT ?lilWayneArtist ?earthGangArtist WHERE {
  # Find the associated musical artist of Lil Wayne (Tahj Malik Chandler)
  ?wayne dbo:birthName ""Tahj Malik Chandler""@en .
  ?wayne dbo:associatedMusicalArtist ?lilWayneArtist .

  # Find the associated musical artists and professional affiliations of EarthGang
  OPTIONAL {
    ?earthGang dbo:member ?member .
    ?earthGang rdfs:label ""EarthGang""@en .
    ?member dbo:associatedMusicalArtist ?earthGangArtist .
  }
}
```",4,4,5,2,3,2,3,28,0,0,1,0,0.0,0
976,47,val,"Give me the office of the leader, that is a politician, of Grand National Assembly of Turkey and office of the mayor, that is a politician and an office holder and Turkish, of the reference, that is an organisation and a political party and Turkish, to Millet İttifakı.","SELECT ?result WHERE { ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v0 <http://xmlns.com/foaf/0.1/name> ""Millet İttifakı""@en . ?v3 <http://dbpedia.org/property/office> ?result . ?v0 <http://dbpedia.org/property/leader> ?v3 . ?v1 <http://dbpedia.org/property/office> ?result . ?v3 <http://dbpedia.org/ontology/nationality> <http://dbpedia.org/resource/Turkey>. ?v0 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Turkey>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/PoliticalParty>. <http://dbpedia.org/resource/Grand_National_Assembly_of_Turkey> <http://dbpedia.org/ontology/leader> ?v1 . }","```sparql
SELECT ?assemblyLeaderOffice ?mayorOffice WHERE {
  # Find the office of the leader of the Grand National Assembly of Turkey
  ?assembly dbo:leader ?leader .
  ?assembly rdfs:label ""Grand National Assembly of Turkey""@en .
  ?leader dbo:office ?assemblyLeaderOffice .

  # Find Millet İttifakı as a political party and its reference organization
  ?millettittifaki dbo:referenceOrganization ?organization .
  ?millettittifaki rdfs:label ""Millet İttifakı""@tr .
  ?organization rdf:type dbo:PoliticalParty ;
                dbo:country dbr:Turkey .

  # Find the mayor associated with this organization
  ?mayor dbo:office ?mayorOffice ;
         dbo:memberOf ?organization ;
         dbo:occupation dbc:Politician ;
         dbo:nationality dbr:Turkey .
}
```",5,12,6,3,2,3,3,71,0,0,1,0,0.0,0
573,52,val,"Give me the person decedent at the residence, that is a settlement, of William J. Phelan and parent of John Quincy Adams and person decedent at the administration, that is a region, of the real name of Charlie Baker (Australian footballer).",SELECT ?result WHERE { <http://dbpedia.org/resource/John_Quincy_Adams> <http://dbpedia.org/ontology/parent> ?result . ?result <http://dbpedia.org/ontology/deathPlace> ?v2 . ?result <http://dbpedia.org/ontology/deathPlace> ?v5 . <http://dbpedia.org/resource/Charlie_Baker_(Australian_footballer)> <http://xmlns.com/foaf/0.1/name> ?v3 . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Region>. <http://dbpedia.org/resource/William_J._Phelan> <http://dbpedia.org/property/residence> ?v5 . ?v2 <http://dbpedia.org/property/governor> ?v3 . },"```sparql
SELECT ?personDecedentPhelanResidence ?parentJohnQuincyAdams ?personDecedentBakerAdmin WHERE {
  # William J. Phelan's residence and decedent at that place
  ?phelan dbo:residence ?residence .
  ?residence rdf:type dbo:Settlement .
  ?decedent dbo:decedentAt ?residence .
  ?personDecedentPhelanResidence rdfs:label ""William J. Phelan""@en .

  # John Quincy Adams' parent
  ?adams dbo:parent ?parentJohnQuincyAdams .
  ?adams rdfs:label ""John Quincy Adams""@en .

  # Charlie Baker's real name and administration
  ?baker foaf:name ?realName .
  ?baker dbo:administration ?adminRegion .
  ?adminRegion rdf:type dbo:Region .
  ?decedentBakerAdmin dbo:decedentAt ?adminRegion .
  FILTER (regex(str(?baker), ""Charlie Baker"", ""i""))
}
```",6,8,7,3,3,3,3,71,0,0,2,0,0.0,0
645,48,val,"Give me the commander in the force of the commander in Siege of Madrid and leader of the office, that is a government agency and an organisation, of Camilo Menéndez Tolosa.",SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. <http://dbpedia.org/resource/Camilo_Menéndez_Tolosa> <http://dbpedia.org/property/office> ?v1 . <http://dbpedia.org/resource/Siege_of_Madrid> <http://dbpedia.org/ontology/commander> ?v3 . ?v2 <http://dbpedia.org/ontology/commander> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/GovernmentAgency>. ?v1 <http://dbpedia.org/ontology/leader> ?result . ?v2 <http://dbpedia.org/ontology/commander> ?v3 . },"```sparql
SELECT ?commanderInForce WHERE {
  # Step 1: Identify the commander in charge during the Siege of Madrid
  ?siege dbo:eventParticipant ?commander .
  ?siege rdfs:label ""Siege of Madrid""@en .

  # Step 2: Find the force led by this commander
  ?force dbo:commander ?commander .
  
  # Step 3: Determine who is the commander within that force
  ?subCommander dbo:commanderOf ?force .
  
  # Step 4: Locate the office or government agency associated with Camilo Menéndez Tolosa
  ?office dbo:employee ?camilo .
  ?office a dbo:GovernmentAgency ;
          a dbo:Organization .
  ?camilo rdfs:label ""Camilo Menéndez Tolosa""@en .

  # Step 5: Find the leader of this office
  ?leader dbo:headOf ?office .
  
  BIND(?subCommander AS ?commanderInForce)
}
```",5,7,6,3,2,3,3,71,0,0,1,0,0.0,0
926,47,val,Give me the father of the father of Abdulaziz and successor of the child of the spouse of Şermi Kadın.,SELECT ?result WHERE { ?v0 <http://dbpedia.org/ontology/spouse> <http://dbpedia.org/resource/Şermi_Kadın> . ?v3 <http://dbpedia.org/property/father> ?v0 . ?v3 <http://dbpedia.org/ontology/successor> ?result . <http://dbpedia.org/resource/Abdulaziz> <http://dbpedia.org/property/father> ?v1 . ?v1 <http://dbpedia.org/property/father> ?result . },"```sparql
SELECT ?fatherOfFather ?successor WHERE {
  # Abdulaziz Ibn Saud and his father
  ?abdulaziz dbo:parent ?father .
  ?abdulaziz rdfs:label ""Abdulaziz Ibn Saud""@en .

  # Father of Abdulaziz's father
  ?father dbo:parent ?fatherOfFather .

  # Şermi Kadın and her spouse
  ?sermiKadin dbo:spouse ?spouse .
  ?sermiKadin rdfs:label ""Şermi Kadın""@en .

  # Child of Şermi Kadın's spouse
  ?spouse dbo:child ?child .

  # Successor of the child
  ?child dbo:succeededBy ?successor .
}
```",5,5,6,3,2,3,3,71,0,0,1,0,0.0,0
976,55,val,"Give me the office of the mayor, that is a politician and an office holder and Turkish, of Nation Alliance (Turkey) and office of the person born as Mehmet Naci Bostancı and office of the leader, that is a politician, of Grand National Assembly of Turkey.","SELECT ?result WHERE { <http://dbpedia.org/resource/Nation_Alliance_(Turkey)> <http://dbpedia.org/property/leader> ?v5 . ?v5 <http://dbpedia.org/property/office> ?result . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v2 <http://dbpedia.org/property/office> ?result . ?v0 <http://dbpedia.org/property/office> ?result . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. <http://dbpedia.org/resource/Grand_National_Assembly_of_Turkey> <http://dbpedia.org/ontology/leader> ?v2 . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v5 <http://dbpedia.org/ontology/nationality> <http://dbpedia.org/resource/Turkey>. ?v0 <http://dbpedia.org/property/birthName> ""Mehmet Naci Bostancı""@en . }","```sparql
SELECT ?mayorOffice ?mehmetNaciBostanciOffice ?assemblyLeaderOffice WHERE {
  # Find the mayor associated with Nation Alliance (Turkey)
  ?person dbo:officeHolder ?mayorOffice .
  ?mayorOffice rdf:type dbo:Mayor .
  ?person dbo:nationality dbr:Turkey .
  ?person dbo:party dbr:Nation_Alliance_(Turkey) .
  ?person rdf:type dbo:Politician .

  # Find the office of Mehmet Naci Bostancı
  ?mehmetNaciBostanci dbo:birthday ""1951-01-15""^^xsd:date .
  ?mehmetNaciBostanci dbo:officeHolder ?mehmetNaciBostanciOffice .

  # Find the leader of the Grand National Assembly of Turkey
  ?assemblyLeader dbo:officeHolder ?assemblyLeaderOffice .
  ?assemblyLeaderOffice rdf:type dbo:Speaker_of_the_Grand_National_Assembly_of_Turkey .
  ?assemblyLeader rdf:type dbo:Politician .
}
```",6,10,7,2,3,3,3,71,0,0,1,0,0.0,0
839,54,val,"Give me the band of the person born, that is a musical artist, as Kevin Richard Russell and band of the member of the band, that is a band and a group, of Peter Schorowsky and band of Matthias Röhr.","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/bandMember> <http://dbpedia.org/resource/Matthias_Röhr> . ?v0 <http://dbpedia.org/ontology/bandMember> ?v5 . ?v3 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Group>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Band>. ?v3 <http://dbpedia.org/property/birthName> ""Kevin Richard Russell""@en . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?result <http://dbpedia.org/ontology/bandMember> ?v5 . <http://dbpedia.org/resource/Peter_Schorowsky> <http://dbpedia.org/ontology/associatedMusicalArtist> ?v0 . }","```sparql
SELECT ?kevinBand ?peterBand ?matthiasBand WHERE {
  # Kevin Richard Russell's band
  OPTIONAL {
    ?kevin dbo:birthName ""Kevin Richard Russell""@en .
    ?kevin dbo:musicalArtist ?musicalArtist .
    ?musicalArtist dbo:band ?kevinBand .
  }

  # Peter Schorowsky's band
  OPTIONAL {
    ?peter dbo:member ?group .
    ?group rdf:type dbo:Band ;
           rdf:type dbo:Group .
    ?group dbo:band ?peterBand .
  }
  
  # Matthias Röhr's band
  OPTIONAL {
    ?matthias dbo:member ?band .
    ?band rdf:type dbo:Band .
    BIND(?band AS ?matthiasBand)
  }

  # Bind entities to their respective names
  VALUES (?kevin ?peter ?matthias) {
    (dbpedia:Kevin_Richard_Russell dbpedia:Peter_Schorowsky dbpedia:Matthias_Röhr)
  }
}
```",6,9,7,3,3,3,3,71,0,0,1,0,0.0,0
445,53,val,"Give me the death place of Patrick Moore and entity in the residence, that is a country, of the resident, that is an athlete, of Great Britain and entity in the award of George H. Cameron.",SELECT ?result WHERE { ?v3 <http://dbpedia.org/property/residence> <http://dbpedia.org/resource/Great_Britain> . ?v3 <http://dbpedia.org/property/residence> ?v2 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Athlete>. ?result <http://dbpedia.org/ontology/country> ?v1 . <http://dbpedia.org/resource/George_H._Cameron> <http://dbpedia.org/property/awards> ?v1 . <http://dbpedia.org/resource/Patrick_Moore> <http://dbpedia.org/ontology/deathPlace> ?result . ?result <http://dbpedia.org/ontology/location> ?v2 . },"```sparql
# Query 1: Death place of Patrick Moore
SELECT ?deathPlace WHERE {
  ?moore dbo:birthName ""Patrick Alfred Caldwell-Moore""@en .
  ?moore dbo:deathPlace ?deathPlace .
}

UNION

# Query 2: Entity in the residence (country) of a resident athlete from Great Britain
SELECT ?residenceCountry WHERE {
  ?athlete dbo:nationality dbr:United_Kingdom ;
           dbo:sport ?sport .
  ?athlete dbo:residence ?residence .
  ?residence rdf:type dbo:Place ;
             rdfs:label ?residenceLabel .
  FILTER (regex(?residenceLabel, ""Country"", ""i""))
  BIND(IRI(CONCAT(""http://dbpedia.org/resource/"", REPLACE(LCASE(?residenceLabel), "" "", ""_""))) AS ?residenceCountry)
}

UNION

# Query 3: Entity in the award of George H. Cameron
SELECT ?awardEntity WHERE {
  ?cameron dbo:birthName ""George Henry Cameron""@en .
  ?cameron dbo:award ?award .
  ?award dbo:name ?awardName .
  FILTER (regex(?awardName, ""Award"", ""i""))
  OPTIONAL { ?award dbo:recipient ?recipient . }
}
```",6,8,7,3,3,3,3,71,0,0,1,0,0.0,0
773,54,val,"Give me the spouse of the father of Charles the Fat and parent of Charles the Fat and parent of the successor of the child, that is a royalty, of Louis the Pious.",SELECT ?result WHERE { <http://dbpedia.org/resource/Charles_the_Fat> <http://dbpedia.org/ontology/parent> ?result . <http://dbpedia.org/resource/Louis_the_Pious> <http://dbpedia.org/ontology/child> ?v0 . ?v3 <http://dbpedia.org/ontology/spouse> ?result . <http://dbpedia.org/resource/Charles_the_Fat> <http://dbpedia.org/property/father> ?v3 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?result <http://dbpedia.org/ontology/child> ?v5 . ?v0 <http://dbpedia.org/ontology/successor> ?v5 . },"```sparql
SELECT ?spouse WHERE {
  # Find Charles the Fat and his father
  ?charlesFat dbo:parent ?father .
  ?charlesFat rdfs:label ""Charles the Fat""@en .

  # Find spouse of the father of Charles the Fat
  OPTIONAL { 
    ?father dbo:spouse ?spouse .
  }

  # Find children of Louis the Pious and their successors (children)
  ?louisThePious dbo:child ?child .
  ?louisThePious rdfs:label ""Louis the Pious""@en .

  # Identify successor of each child
  OPTIONAL {
    ?child dbo:child ?successor .
    FILTER EXISTS { ?successor a dbo:Monarch . } # Ensure successor is royalty
  }

  # Find parent of the royal successor
  OPTIONAL {
    ?successor dbo:parent ?parent .
  }
}
```",6,7,7,3,3,3,3,71,1,1,0,0.5,1.0,0.6666666666666666
507,43,val,"Give me the professional in Film director, television director and director of the movie, that is a movie and a work, with the person born on 1919-06-17 and spouse of Anne V. Coates.","SELECT ?result WHERE { ?v4 <http://dbpedia.org/property/starring> ?v0 . ?result <http://dbpedia.org/ontology/spouse> <http://dbpedia.org/resource/Anne_V._Coates> . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Film>. ?v0 <http://dbpedia.org/ontology/birthDate> ""1919-06-17""^^<http://www.w3.org/2001/XMLSchema#date> . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?result <http://dbpedia.org/property/occupation> ""Film director, television director""@en . ?v4 <http://dbpedia.org/ontology/director> ?result . }","```sparql
SELECT ?person WHERE {
  # Find the person born on June 17, 1919
  ?person dbo:birthDate ?date .
  FILTER (YEAR(?date) = 1919 && MONTH(?date) = 6 && DAY(?date) = 17)

  # Ensure their spouse is Anne V. Coates
  ?person dbo:spouse ?spouse .
  ?spouse rdfs:label ""Anne V. Coates""@en .

  # Check if the person has a profession related to directing
  OPTIONAL {
    ?person dbo:occupation ?occupation .
    FILTER (
      regex(str(?occupation), ""film director"", ""i"") ||
      regex(str(?occupation), ""television director"", ""i"") ||
      regex(str(?occupation), ""movie director"", ""i"")
    )
  }

  # Ensure they have directed works classified as both movie and work
  OPTIONAL {
    ?person dbo:directed ?work .
    ?work rdf:type/rdfs:subClassOf* dbpedia-owl:Film .
    ?work rdf:type/rdfs:subClassOf* dbpedia-owl:CreativeWork .
  }
}
```",5,7,6,3,3,3,3,71,0,0,1,0,0.0,0
36,22,val,"Give me the actor of the claim to fame, that is a film, of Lepacious Bose and person born in the birth year of Deanne Bray.",SELECT ?result WHERE { <http://dbpedia.org/resource/Deanne_Bray> <http://dbpedia.org/ontology/birthYear> ?v0 . <http://dbpedia.org/resource/Lepacious_Bose> <http://dbpedia.org/ontology/knownFor> ?v3 . ?result <http://dbpedia.org/ontology/birthYear> ?v0 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Film>. ?v3 <http://dbpedia.org/ontology/starring> ?result . },"```sparql
SELECT ?actor WHERE {
  # Find Lepacious Bose's claim to fame film
  ?lepaciousBose dbo:claimToFame ?film .
  ?lepaciousBose rdfs:label ""Lepacious Bose""@en .

  # Get the birth year of Deanne Bray
  ?deanneBray dbo:birthYear ?birthYear .
  ?deanneBray rdfs:label ""Deanne Bray""@en .

  # Find a person born in the same year as Deanne Bray
  ?person dbo:birthYear ?birthYear .

  # Get actors of Lepacious Bose's claim to fame film
  ?film dbo:actor ?actor .
}
```",4,5,5,2,2,2,3,28,0,0,1,0,0.0,0
200,7,val,Give me the reference to the name of Angelcorpse and band member of Order from Chaos.,SELECT ?result WHERE { <http://dbpedia.org/resource/Angelcorpse> <http://xmlns.com/foaf/0.1/name> ?v0 . ?result <http://dbpedia.org/ontology/associatedMusicalArtist> <http://dbpedia.org/resource/Order_from_Chaos> . ?result <http://xmlns.com/foaf/0.1/name> ?v0 . },"```sparql
SELECT ?member WHERE {
  # Get members of Angelcorpse
  ?angelcorpse dbo:bandMember ?member .
  ?angelcorpse rdfs:label ""Angelcorpse""@en .

  # Get members of Order from Chaos
  OPTIONAL { 
    ?orderFromChaos dbo:bandMember ?member .
    ?orderFromChaos rdfs:label ""Order from Chaos""@en .
  }
}
```",3,3,4,2,2,2,2,9,0,0,1,0,0.0,0
582,46,val,"Give me the reference to the residence of the reference, that is a scientist, to Hirotaka Sugawara and player in the father, that is an athlete and a soccer manager and a sports manager, of Masami Nagasawa.","SELECT ?result WHERE { ?v2 <http://xmlns.com/foaf/0.1/name> ""Hirotaka Sugawara""@en . ?v2 <http://dbpedia.org/property/residence> ?v1 . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Athlete>. ?result <http://xmlns.com/foaf/0.1/name> ?v1 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Scientist>. ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsManager>. ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerManager>. ?v4 <http://dbpedia.org/ontology/team> ?result . <http://dbpedia.org/resource/Masami_Nagasawa> <http://dbpedia.org/property/father> ?v4 . }","```sparql
SELECT ?residence WHERE {
  # Find the residence related to a scientist associated with Hirotaka Sugawara
  ?scientist dbo:birthName ""Hirotaka Sugawara""@en .
  ?scientist dbo:residence ?residence .

  # Find Masami Nagasawa and her father who is an athlete, soccer manager, and sports manager
  OPTIONAL {
    ?nagasawa dbo:parent ?father .
    ?nagasawa rdfs:label ""Masami Nagasawa""@en .
    
    ?father dbo:occupation ?occupation1 ;
            dbo:occupation ?occupation2 ;
            dbo:occupation ?occupation3 .

    FILTER (
      regex(str(?occupation1), ""athlete"", ""i"") &&
      regex(str(?occupation2), ""soccer manager"", ""i"") &&
      regex(str(?occupation3), ""sports manager"", ""i"")
    )
  }
}
```",5,9,6,3,2,3,3,71,0,0,1,0,0.0,0
507,55,val,"Give me the spouse of the person born as Anne Voase Coates and professional in the profession of Guy Ferland and director of the movie, that is a movie and a work, with Beryl Reid.","SELECT ?result WHERE { ?v5 <http://dbpedia.org/property/starring> <http://dbpedia.org/resource/Beryl_Reid> . ?v3 <http://dbpedia.org/property/birthName> ""Anne Voase Coates""@en . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Film>. <http://dbpedia.org/resource/Guy_Ferland> <http://dbpedia.org/property/occupation> ?v2 . ?result <http://dbpedia.org/ontology/spouse> ?v3 . ?v5 <http://dbpedia.org/ontology/director> ?result . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?result <http://dbpedia.org/property/occupation> ?v2 . }","```sparql
SELECT ?spouse ?profession ?movie WHERE {
  # Find Anne Voase Coates and her spouse
  ?anne dbo:birthName ""Anne Voase Coates""@en .
  ?anne dbo:spouse ?spouse .

  # Identify the profession of Guy Ferland
  ?guy rdfs:label ""Guy Ferland""@en .
  ?guy dbo:profession ?profession .

  # Find a movie directed by Anne Voase Coates featuring Beryl Reid
  ?movie dbo:director ?anne ;
         dbo:starring ?beryl ;
         rdf:type dbpedia-owl:Film ;
         rdf:type dbpedia-owl:CreativeWork .
  ?beryl rdfs:label ""Beryl Reid""@en .

}
```",6,8,7,2,3,3,3,71,0,0,1,0,0.0,0
976,54,val,"Give me the office of the leader, that is a politician, of Grand National Assembly of Turkey and office of Naci Bostancı and office of the mayor, that is a politician and an office holder and Turkish, of the reference, that is an organisation and a political party and Turkish, to Millet İttifakı.","SELECT ?result WHERE { ?v1 <http://xmlns.com/foaf/0.1/name> ""Millet İttifakı""@en . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?v4 <http://dbpedia.org/ontology/nationality> <http://dbpedia.org/resource/Turkey>. ?v1 <http://dbpedia.org/property/leader> ?v4 . ?v2 <http://dbpedia.org/property/office> ?result . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v4 <http://dbpedia.org/property/office> ?result . <http://dbpedia.org/resource/Grand_National_Assembly_of_Turkey> <http://dbpedia.org/ontology/leader> ?v2 . <http://dbpedia.org/resource/Naci_Bostancı> <http://dbpedia.org/property/office> ?result . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v1 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Turkey>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/PoliticalParty>. }","```sparql
SELECT ?officeLeaderGNAT ?officeNaciBostanci ?officeMayorMilletIttifak WHERE {
  # Office of the leader of Grand National Assembly of Turkey
  ?gnat dbo:leader ?leader .
  ?gnat rdfs:label ""Grand National Assembly of Turkey""@en .
  ?leader dbo:occupation ?politician .
  FILTER (regex(str(?politician), ""Politician"", ""i""))
  ?leader dbo:office ?officeLeaderGNAT .

  # Office of Naci Bostancı
  ?naciBostanci rdfs:label ""Naci Bostancı""@en .
  ?naciBostanci dbo:office ?officeNaciBostanci .

  # Millet İttifakı as an organization and political party in Turkey
  ?milletIttifak rdfs:label ""Millet İttifakı""@en .
  ?milletIttifak a dbo:Organization ;
                 a dbo:PoliticalParty ;
                 dbo:country dbr:Turkey .

  # Mayor associated with Millet İttifakı who is a politician and office holder
  ?mayor dbo:memberOf ?milletIttifak .
  ?mayor dbo:occupation ?politicianOfficeHolder .
  FILTER (regex(str(?politicianOfficeHolder), ""Politician"", ""i"") && regex(str(?politicianOfficeHolder), ""Office Holder"", ""i""))
  ?mayor dbo:nationality dbr:Turkish .
  ?mayor dbo:office ?officeMayorMilletIttifak
}
```",6,13,7,3,3,3,3,71,0,0,1,0,0.0,0
41,21,val,"Give me the party of Declan Costello and party of the work, that is an office holder, of yes and party of Mark Durkan.","SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. <http://dbpedia.org/resource/Mark_Durkan> <http://dbpedia.org/ontology/party> ?result . ?v1 <http://dbpedia.org/ontology/party> ?result . <http://dbpedia.org/resource/Declan_Costello> <http://dbpedia.org/ontology/party> ?result . ?v1 <http://dbpedia.org/property/author> ""yes""@en . }","```sparql
SELECT ?declanParty ?officeHolderParty ?markDurkanParty WHERE {
  # Find Declan Costello and his party
  ?declan dbo:party ?declanParty .
  ?declan rdfs:label ""Declan Costello""@en .

  # Find an office holder associated with 'yes' and their party
  OPTIONAL {
    ?officeHolder dbo:officeHolder true ;
                 rdfs:comment ?comment .
    FILTER (CONTAINS(LCASE(?comment), ""yes""))
    ?officeHolder dbo:party ?officeHolderParty .
  }

  # Find Mark Durkan and his party
  ?markDurkan dbo:party ?markDurkanParty .
  ?markDurkan rdfs:label ""Mark Durkan""@en .
}
```",4,5,5,2,3,2,3,28,1,1,0,0.5,1.0,0.6666666666666666
645,55,val,"Give me the leader of the office, that is a government agency and an organisation, of Camilo Menéndez Tolosa and military force of the force, that is an event and a military conflict and a societal event, of Francisco Largo Caballero and commander in the force of Carlos Asensio Cabanillas.",SELECT ?result WHERE { ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?v5 <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Francisco_Largo_Caballero> . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/GovernmentAgency>. ?v3 <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Carlos_Asensio_Cabanillas> . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v3 <http://dbpedia.org/ontology/commander> ?result . ?v2 <http://dbpedia.org/ontology/leader> ?result . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?result <http://dbpedia.org/ontology/battle> ?v5 . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. <http://dbpedia.org/resource/Camilo_Menéndez_Tolosa> <http://dbpedia.org/property/office> ?v2 . },"```sparql
SELECT ?leader ?militaryForce ?commander WHERE {
  # Find Camilo Menéndez Tolosa and his office leader
  ?camilo dbo:officeLeader ?leader .
  ?camilo rdfs:label ""Camilo Menéndez Tolosa""@en .
  ?office dbo:type dbr:Government_agency ;
          dbo:type dbr:Organization .
  ?leader dbo:worksFor ?office .

  # Find Francisco Largo Caballero's military force
  ?francisco dbo:militaryForce ?militaryForce .
  ?francisco rdfs:label ""Francisco Largo Caballero""@en .
  ?event dbo:type dbr:Military_conflict ;
         dbo:type dbr:Societal_event .
  ?militaryForce dbo:participatedIn ?event .

  # Find Carlos Asensio Cabanillas' role in the military force
  ?carlos dbo:commanderOf ?militaryForce .
  ?carlos rdfs:label ""Carlos Asensio Cabanillas""@en .
}
```",6,11,7,2,3,3,3,71,0,0,1,0,0.0,0
892,50,val,"Give me the landmark at elevation of the award of the member of E-girls and entity in the administration, that is Italian and a region and a settlement and an administrative region, of Democratic Party (Italy).",SELECT ?result WHERE { ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. ?v0 <http://dbpedia.org/property/leaderParty> <http://dbpedia.org/resource/Democratic_Party_(Italy)> . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/AdministrativeRegion>. ?result <http://dbpedia.org/ontology/province> ?v0 . ?v1 <http://dbpedia.org/property/awards> ?v3 . ?v0 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Italy>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Region>. <http://dbpedia.org/resource/E-girls> <http://dbpedia.org/ontology/bandMember> ?v1 . ?result <http://dbpedia.org/ontology/elevation> ?v3 . },"```sparql
# Step 1: Identify a member of E-girls and their award
SELECT ?member ?award WHERE {
  ?member dbo:memberOf dbr:E-girls .
  ?member dbo:award ?award .
}

# Step 2: Find the elevation of this award (assuming awards have an associated elevation)
SELECT ?elevation WHERE {
  ?award dbo:elevation ?elevation .
}

# Step 3: Identify a landmark at that elevation
SELECT ?landmark WHERE {
  ?landmark dbo:elevation ?elevation .
}

# Step 4: Find an Italian administrative region and settlement associated with the Democratic Party (Italy)
SELECT ?region WHERE {
  ?region rdf:type dbr:Region_of_Italy ;
          dbo:administrativeRegion dbr:Italy ;
          dbo:settlement true ;
          dbo:politicalParty dbr:Democratic_Party_(Italy) .
}

# Combine to find the landmark
SELECT ?landmark WHERE {
  # Assuming we have identified an elevation from previous steps
  BIND(?elevation AS ?knownElevation)
  
  ?landmark dbo:elevation ?knownElevation .

  ?region rdf:type dbr:Region_of_Italy ;
          dbo:administrativeRegion dbr:Italy ;
          dbo:settlement true ;
          dbo:politicalParty dbr:Democratic_Party_(Italy) .
}
```",5,9,6,3,2,3,3,71,0,0,2,0,0.0,0
645,42,val,"Give me the leader of the office, that is a government agency and an organisation, of Camilo Menéndez Tolosa and military force of Spanish Civil War and commander in the force of Carlos Asensio Cabanillas.",SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/GovernmentAgency>. ?v1 <http://dbpedia.org/ontology/leader> ?result . ?v2 <http://dbpedia.org/ontology/commander> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?v2 <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Carlos_Asensio_Cabanillas> . ?result <http://dbpedia.org/ontology/battle> <http://dbpedia.org/resource/Spanish_Civil_War> . <http://dbpedia.org/resource/Camilo_Menéndez_Tolosa> <http://dbpedia.org/property/office> ?v1 . },"```sparql
SELECT ?leaderOfOrganization ?militaryForceCommander WHERE {
  # Find the organization led by Camilo Menéndez Tolosa
  ?organization dbo:leader ?camilo .
  ?camilo rdfs:label ""Camilo Menéndez Tolosa""@en .

  # Find the leader of that organization
  ?organization dbo:leader ?leaderOfOrganization .

  # Find the military force commanded by Carlos Asensio Cabanillas during the Spanish Civil War
  ?militaryForce dbo:commander ?carlos .
  ?carlos rdfs:label ""Carlos Asensio Cabanillas""@en .
  ?militaryForce dbo:participatedIn <http://dbpedia.org/resource/Spanish_Civil_War> .

  # Find the commander of that military force
  ?militaryForce dbo:commander ?militaryForceCommander .
}
```",5,7,6,2,3,3,3,71,0,0,1,0,0.0,0
987,53,val,"Give me the birth place of Moamer Kasumović and entity in the region, that is a country, of Central European Time and birth place of the band, that is an artist and a musical artist, of the band, that is an artist, of Dado Polumenta.",SELECT ?result WHERE { <http://dbpedia.org/resource/Dado_Polumenta> <http://dbpedia.org/ontology/associatedMusicalArtist> ?v3 . ?v3 <http://dbpedia.org/ontology/associatedMusicalArtist> ?v1 . ?v1 <http://dbpedia.org/ontology/birthPlace> ?result . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. ?v0 <http://dbpedia.org/property/timeZone> <http://dbpedia.org/resource/Central_European_Time> . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. <http://dbpedia.org/resource/Moamer_Kasumović> <http://dbpedia.org/ontology/birthPlace> ?result . ?result <http://dbpedia.org/ontology/country> ?v0 . },"```sparql
SELECT ?birthPlaceOfMilošević ?countryInCET ?bandBirthPlace WHERE {
  # Moamer Kasumović (Slobodan Milošević) birth place
  dbp:Slobodan_Milošević dbo:birthPlace ?birthPlaceOfMilošević .
  
  # Country in Central European Time region
  ?country rdf:type dbo:Country ;
           dbo:timeZone ""Central European Time"" .
  
  # Dado Polumenta's band and its birth place
  dbp:Dado_Polumenta dbo:associatedBand ?band .
  ?band rdf:type dbo:MusicalArtist ;
        dbo:birthPlace ?bandBirthPlace .
}
```",6,10,7,3,3,3,3,71,0,0,1,0,0.0,0
865,45,val,Give me the father of AK Abdul Momen and father of the child of the father of Abul Maal Abdul Muhith and native of British Raj.,SELECT ?result WHERE { <http://dbpedia.org/resource/AK_Abdul_Momen> <http://dbpedia.org/property/father> ?result . ?v1 <http://dbpedia.org/property/father> ?v4 . ?v1 <http://dbpedia.org/property/father> ?result . ?result <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/British_Raj> . <http://dbpedia.org/resource/Abul_Maal_Abdul_Muhith> <http://dbpedia.org/property/father> ?v4 . },"```sparql
SELECT ?fatherOfMomen ?fatherOfChild WHERE {
  # Find AK Abdul Momen and his father
  ?momen dbo:parent ?fatherOfMomen .
  ?momen rdfs:label ""AK Abdul Momen""@en .

  # Find Abul Maal Abdul Muhith, his father, and the child who is a native of British Raj
  ?muhith dbo:parent ?fatherOfMuhith .
  ?muhith rdfs:label ""Abul Maal Abdul Muhith""@en .
  
  OPTIONAL {
    ?child dbo:parent ?fatherOfMuhith ;
           dbo:nativeCountry dbc:British_Raj .
    
    # Find the father of this child
    ?child dbo:parent ?fatherOfChild .
  }
}
```",5,5,6,3,3,3,3,71,0,0,1,0,0.0,0
926,42,val,"Give me the child of the father, that is a royalty, of Mustafa III and father of the father of Abdulaziz and successor of Mustafa III.",SELECT ?result WHERE { <http://dbpedia.org/resource/Mustafa_III> <http://dbpedia.org/ontology/successor> ?result . ?v0 <http://dbpedia.org/ontology/child> ?result . <http://dbpedia.org/resource/Mustafa_III> <http://dbpedia.org/property/father> ?v0 . ?v1 <http://dbpedia.org/property/father> ?result . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. <http://dbpedia.org/resource/Abdulaziz> <http://dbpedia.org/property/father> ?v1 . },"```sparql
SELECT DISTINCT ?child WHERE {
  # Find the father of Mustafa III
  ?mustafaIII dbo:parent ?father .
  ?mustafaIII rdfs:label ""Mustafa III""@en .

  # Find a child of Mustafa III's father who is royalty
  ?child dbo:parent ?father .
  FILTER (regex(str(?child), ""royalty"", ""i""))

  # Identify Abdulaziz and his grandfather
  ?abdulaziz dbo:parent ?fatherOfFather .
  ?abdulaziz rdfs:label ""Abdulaziz""@en .

  # Find Mustafa III's successor
  ?successor dbo:succedBy ?mustafaIII .

  # Ensure the child is also Abdulaziz's grandfather and Mustafa III's successor
  FILTER (?child = ?fatherOfFather && ?child = ?successor)
}
```",5,6,6,2,3,3,3,71,0,0,1,0,0.0,0
456,54,val,"Give me the professional in the alter ego of the reference, that is a fictional character, to Lamont Cranston (radio, film and television) and spouse of the actor of Pacific Drive and band of Alan Doyle.","SELECT ?result WHERE { ?v3 <http://dbpedia.org/ontology/spouse> ?result . <http://dbpedia.org/resource/Alan_Doyle> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v0 <http://dbpedia.org/property/alterEgo> ?v5 . ?result <http://dbpedia.org/property/occupation> ?v5 . ?v0 <http://xmlns.com/foaf/0.1/name> ""Lamont Cranston (radio, film and television)""@en . <http://dbpedia.org/resource/Pacific_Drive> <http://dbpedia.org/property/starring> ?v3 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/FictionalCharacter>. }","```sparql
SELECT ?alterEgo WHERE {
  # Identify Lamont Cranston and his alter ego
  ?character dbo:alias ""Lamont Cranston""@en .
  ?character rdfs:label ""The Shadow""@en .
  ?character foaf:name ?alterEgo .
}
```",6,7,7,3,3,3,3,71,0,0,1,0,0.0,0
933,46,val,"Give me the reference to the birth name of Alan Warner (musician) and band of the band of the band, that is an artist and a musical artist, of The Ramong Sound.",SELECT ?result WHERE { ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. <http://dbpedia.org/resource/Alan_Warner_(musician)> <http://dbpedia.org/property/birthName> ?v3 . <http://dbpedia.org/resource/The_Ramong_Sound> <http://dbpedia.org/ontology/associatedMusicalArtist> ?v2 . ?result <http://xmlns.com/foaf/0.1/name> ?v3 . ?v2 <http://dbpedia.org/ontology/associatedMusicalArtist> ?v0 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?v0 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . },"```sparql
SELECT ?birthName ?finalBand WHERE {
  # Find Alan Warner's birth name
  ?alanWarner dbo:birthName ?birthName .
  ?alanWarner rdfs:label ""Alan Warner (musician)""@en .

  # Identify The Ramon Sound and ensure it is an artist and a musical artist
  ?ramonSound rdf:type dbp:MusicalArtist, dbo:Band ;
              rdfs:label ""The Ramon Sound""@en .
  
  # Find the band of The Ramon Sound
  ?ramonSound dbo:bandMember ?member1 .
  ?member1 dbo:band ?firstBand .

  # Find the band of the first band
  ?firstBand dbo:bandMember ?member2 .
  ?member2 dbo:band ?secondBand .

  # Find the band of the second band
  ?secondBand dbo:bandMember ?member3 .
  ?member3 dbo:band ?finalBand .
}
```",5,7,6,3,2,3,3,71,0,0,1,0,0.0,0
791,42,val,"Give me the predecessor of Emperor Antoku and father of the child, that is a royalty, of Emperor Takakura and spouse of the spouse, that is a royalty, of Emperor Takakura.",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/successor> <http://dbpedia.org/resource/Emperor_Antoku> . ?v1 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Emperor_Takakura> . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v1 <http://dbpedia.org/property/father> ?result . ?v2 <http://dbpedia.org/ontology/spouse> <http://dbpedia.org/resource/Emperor_Takakura> . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?result <http://dbpedia.org/ontology/spouse> ?v2 . },"```sparql
SELECT ?predecessor ?royalChildFather WHERE {
  # Find predecessor of Emperor Antoku
  ?antoku dbo:predecessor ?predecessor .
  ?antoku rdfs:label ""Emperor Antoku""@en .

  # Find child of Emperor Takakura who is royalty
  OPTIONAL {
    ?takakura dbo:child ?royalChild .
    ?takakura rdfs:label ""Emperor Takakura""@en .
    FILTER (regex(str(?royalChild), ""Imperial Princess"", ""i"") || regex(str(?royalChild), ""Prince"", ""i""))
  }

  # Find spouse of the royal child
  OPTIONAL {
    ?royalChild dbo:spouse ?spouse .
  }

  # Find father of this spouse
  OPTIONAL {
    ?spouse dbo:parent ?royalChildFather .
  }
}
```",5,7,6,2,3,3,3,71,1,9956,0,0.00010043185698503566,1.0,0.0002008435428800964
606,16,val,"Give me the birthplace of the alumnus of University of Pennsylvania and figure known as the nickname of DeKalb, Illinois.","SELECT ?result WHERE { ?result <http://dbpedia.org/property/nickname> ?v2 . ?v3 <http://dbpedia.org/ontology/birthPlace> ?result . ?v3 <http://dbpedia.org/ontology/almaMater> <http://dbpedia.org/resource/University_of_Pennsylvania> . <http://dbpedia.org/resource/DeKalb,_Illinois> <http://dbpedia.org/property/nickname> ?v2 . }","```sparql
SELECT ?birthPlace WHERE {
  ?person dbo:almaMater dbr:University_of_Pennsylvania ;
          rdfs:label ""Abraham Lincoln""@en .
  OPTIONAL { 
    ?person dbo:birthPlace ?birthPlace .
  }
}
```",4,4,5,2,2,3,2,20,0,0,1,0,0.0,0
216,52,val,"Give me the player in the coach of the reference, that is an organisation and a soccer club, to Croatia U21 and player in the coach, that is a soccer player and a sports manager and a soccer manager, of Bosnia and Herzegovina national under-18 football team and team of Ognjen Vukojević.","SELECT ?result WHERE { ?v3 <http://xmlns.com/foaf/0.1/name> ""Croatia U21""@en . ?result <http://dbpedia.org/ontology/coach> <http://dbpedia.org/resource/Ognjen_Vukojević> . ?v2 <http://dbpedia.org/ontology/team> ?result . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsManager>. ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerManager>. ?v3 <http://dbpedia.org/ontology/coach> ?v2 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerClub>. ?v5 <http://dbpedia.org/ontology/team> ?result . <http://dbpedia.org/resource/Bosnia_and_Herzegovina_national_under-18_football_team> <http://dbpedia.org/ontology/coach> ?v5 . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerPlayer>. }","```sparql
SELECT ?player1 ?player2 WHERE {
  # First individual: Player in the coach of Croatia U21
  ?player1 dbo:coachOfTeam ?croatiaU21 .
  ?croatiaU21 rdfs:label ""Croatia national under-21 football team""@en .
  ?player1 rdf:type dbo:SoccerClub .

  # Second individual: Player in the coach of Bosnia and Herzegovina U18
  ?player2 dbo:coachOfTeam ?bosniaHerzegovinaU18 .
  ?bosniaHerzegovinaU18 rdfs:label ""Bosnia and Herzegovina national under-18 football team""@en .
  ?player2 rdf:type dbo:SoccerPlayer ;
           rdf:type dbo:SportsManager ;
           rdf:type dbo:SoccerManager .

  # Association with Ognjen Vukojević
  ?player2 dbo:teamMember ?ognjenVukojevicTeam .
  ?ognjenVukojevicTeam dbo:member Ognjen_Vukojević .
}
```",6,11,7,3,3,3,3,71,0,0,1,0,0.0,0
888,15,val,"Give me the commander in the force, that is a societal event and an event, of the military force of War in Donbas (2014–2022) and awardee of Hero of Ukraine.","SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/commander> ?result . ?result <http://dbpedia.org/property/awards> ""Hero of Ukraine""@en . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?v1 <http://dbpedia.org/ontology/commander> ?v0 . ?v0 <http://dbpedia.org/ontology/battle> <http://dbpedia.org/resource/War_in_Donbas_(2014–2022)> . }","```sparql
SELECT ?commander WHERE {
  # Identify the military force related to War in Donbas (2014–2022)
  ?force dbo:wikiPageRedirects dbpedia:War_in_Donbass .
  
  # Find commanders associated with this military force
  ?force dbo:commander ?commander .

  # Ensure the commander is involved in societal events and specific conflict-related events
  ?commander dbo:societalEvent ?event1 .
  ?commander dbo:event ?event2 .

  # Filter for those awarded Hero of Ukraine
  ?commander dbo:award ""Hero of Ukraine""@en .
}
```",4,6,5,3,2,3,2,20,0,0,2,0,0.0,0
507,51,val,"Give me the director of the movie, that is a movie and a work, with Beryl Reid and professional in the profession of the person born on 1966-02-18.","SELECT ?result WHERE { ?v4 <http://dbpedia.org/ontology/director> ?result . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Film>. ?v1 <http://dbpedia.org/ontology/birthDate> ""1966-02-18""^^<http://www.w3.org/2001/XMLSchema#date> . ?v1 <http://dbpedia.org/property/occupation> ?v2 . ?v4 <http://dbpedia.org/property/starring> <http://dbpedia.org/resource/Beryl_Reid> . ?result <http://dbpedia.org/property/occupation> ?v2 . }","```sparql
SELECT ?director WHERE {
  # Step 1: Identify the person born on 1966-02-18
  ?person dbo:birthDate ""1966-02-18""^^xsd:date ;
          dbo:occupation ?profession .

  # Step 2: Find movies featuring Beryl Reid
  ?movie dbo:starring ?berylReid .
  ?berylReid rdfs:label ""Beryl Reid""@en .

  # Step 3: Identify common works with the person from step 1
  ?movie dbo:performer ?person .

  # Step 4: Retrieve the director of these movies
  ?movie dbo:director ?director .
}
```",5,7,6,3,2,3,3,71,0,0,2,0,0.0,0
47,40,val,"Give me the office of Bidesh Ranjan Bose and office of the administration of the commander, that is a politician, in Operation Green Hunt and office of Ajoy Mukherjee.",SELECT ?result WHERE { ?v1 <http://dbpedia.org/property/governor> ?v2 . ?v1 <http://dbpedia.org/property/office> ?result . <http://dbpedia.org/resource/Ajoy_Mukherjee> <http://dbpedia.org/property/office> ?result . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. <http://dbpedia.org/resource/Operation_Green_Hunt> <http://dbpedia.org/ontology/commander> ?v2 . <http://dbpedia.org/resource/Bidesh_Ranjan_Bose> <http://dbpedia.org/property/office> ?result . },"```sparql
SELECT ?bosesOffice ?commanderOffice ?mukherjeesOffice WHERE {
  # Find office of Bidesh Ranjan Bose
  ?bose foaf:name ""Bidesh Ranjan Bose""@en .
  ?bose dbo:office ?bosesOffice .

  # Find politician commander in Operation Green Hunt and their administrative role
  OPTIONAL {
    ?operation rdfs:label ""Operation Green Hunt""@en .
    ?commander dbo:role ?operationRole .
    FILTER (regex(str(?operationRole), ""Commander"", ""i""))
    ?commander foaf:name ?name .
    FILTER regex(?name, ""politician"")
    ?commander dbo:office ?commanderOffice .
  }

  # Find office of Ajoy Mukherjee
  ?mukherjee foaf:name ""Ajoy Mukherjee""@en .
  ?mukherjee dbo:office ?mukherjeesOffice .
}
```",5,6,6,3,3,3,3,71,0,0,1,0,0.0,0
933,47,val,Give me the band of the band of Alan Warner (musician) and reference to the birth name of the professional in Musician.,SELECT ?result WHERE { ?v0 <http://dbpedia.org/property/occupation> <http://dbpedia.org/resource/Musician> . ?v0 <http://dbpedia.org/property/birthName> ?v3 . ?v1 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?result <http://xmlns.com/foaf/0.1/name> ?v3 . <http://dbpedia.org/resource/Alan_Warner_(musician)> <http://dbpedia.org/ontology/associatedMusicalArtist> ?v1 . },"```sparql
SELECT ?bandOfBand ?birthName WHERE {
  # Find Alan Warner's band
  ?alanWarner dbo:member ?band .
  ?alanWarner rdfs:label ""Alan Warner (musician)""@en .

  # Check if the band has a member who is another band
  OPTIONAL { 
    ?band dbo:member ?bandOfBand .
    FILTER (?band != ?bandOfBand)
  }

  # Find Alan Warner's birth name
  OPTIONAL {
    ?alanWarner foaf:name ?birthName .
  }
}
```",5,5,6,3,2,3,3,71,0,0,1,0,0.0,0
98,20,val,Give me the region of Philippine Standard Time and entity in Philippines and birth place of the person born as Paolo Elito M. Ballesteros IV.,"SELECT ?result WHERE { ?v1 <http://dbpedia.org/property/birthName> ""Paolo Elito M. Ballesteros IV""@en . ?v1 <http://dbpedia.org/ontology/birthPlace> ?result . ?result <http://dbpedia.org/ontology/timeZone> <http://dbpedia.org/resource/Philippine_Standard_Time> . ?result <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Philippines> . }","```sparql
SELECT ?pstRegion ?entityInPhilippines ?birthPlace WHERE {
  # Find region associated with Philippine Standard Time
  ?pstRegion dbo:timeZone dbr:Philippine_Standard_Time .
  
  # Find an entity in the Philippines (e.g., a city or province)
  ?entityInPhilippines dbo:country dbr:Philippines .
  
  # Find birthplace of Paolo Elito M. Ballesteros IV
  ?person foaf:name ""Paolo Elito M. Ballesteros IV""@en ;
          dbo:birthPlace ?birthPlace .
}
```",4,4,5,2,3,2,3,28,0,0,2,0,0.0,0
281,19,val,"Give me the awardee of Medal bar and awardee of Volunteer Decoration and commander in the war, that is an event and a military conflict, of Roy Boehm.",SELECT ?result WHERE { <http://dbpedia.org/resource/Roy_Boehm> <http://dbpedia.org/ontology/battle> ?v2 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v2 <http://dbpedia.org/ontology/commander> ?result . ?result <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/Volunteer_Decoration> . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?result <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/Medal_bar> . },"```sparql
SELECT ?medalBarAwardee ?volunteerDecorationAwardee ?commanderEvent WHERE {
  # Find the awardee of Medal Bar related to Roy Boehm
  OPTIONAL {
    ?medalBar dbo:awardedTo ?medalBarAwardee .
    ?medalBar dbo:recipient ""Roy Boehm""@en .
  }

  # Find the awardee of Volunteer Decoration related to Roy Boehm
  OPTIONAL {
    ?volunteerDecoration dbo:awardedTo ?volunteerDecorationAwardee .
    ?volunteerDecoration dbo:recipient ""Roy Boehm""@en .
  }
  
  # Identify military conflicts where Roy Boehm was a commander
  OPTIONAL {
    ?commanderEvent dbo:commander ""Roy Boehm""@en .
    ?commanderEvent rdf:type dbo:MilitaryConflict .
  }
}
```",4,6,5,2,3,2,3,28,0,0,1,0,0.0,0
582,48,val,"Give me the figure known as the nickname of Japan national football team and reference to the residence of the reference, that is a scientist, to Hirotaka Sugawara.","SELECT ?result WHERE { ?result <http://xmlns.com/foaf/0.1/name> ?v2 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Scientist>. ?result <http://dbpedia.org/property/nickname> ?v1 . ?v3 <http://dbpedia.org/property/residence> ?v2 . ?v3 <http://xmlns.com/foaf/0.1/name> ""Hirotaka Sugawara""@en . <http://dbpedia.org/resource/Japan_national_football_team> <http://dbpedia.org/property/nickname> ?v1 . }","```sparql
SELECT ?scientist ?residence WHERE {
  # Identify the Japan national football team by its nickname
  ?team rdfs:label ""Samurai Blue""@en .
  
  # Find any scientists associated with this nickname (hypothetical association)
  OPTIONAL { 
    ?association dbo:subject ?team ;
                 dbo:object ?scientist .
    ?scientist rdf:type dbo:Scientist .
  }
  
  # Retrieve the residence of the scientist
  ?scientist dbo:residenceLocation ?residence .

  # Establish a connection to Hirotaka Sugawara (hypothetical link)
  OPTIONAL {
    ?connection dbo:subject ?scientist ;
                dbo:object dbr:Hirotaka_Sugawara .
  }
}
```",5,6,6,3,2,3,3,71,0,0,1,0,0.0,0
715,44,val,"Give me the commander in the force of Francisco Largo Caballero and commander in Rif War and leader of the office, that is a government agency and an organisation, of Carlos Franco Iribarnegaray.",SELECT ?result WHERE { ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/GovernmentAgency>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?v4 <http://dbpedia.org/ontology/commander> ?result . ?v4 <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Francisco_Largo_Caballero> . <http://dbpedia.org/resource/Rif_War> <http://dbpedia.org/ontology/commander> ?result . ?v2 <http://dbpedia.org/ontology/leader> ?result . <http://dbpedia.org/resource/Carlos_Franco_Iribarnegaray> <http://dbpedia.org/property/office> ?v2 . },"```sparql
SELECT ?caballeroCommander ?rifWarCommander ?francoLeader WHERE {
  # Francisco Largo Caballero as a commander in a force
  ?force dbo:commander ?caballeroCommander .
  ?caballero rdfs:label ""Francisco Largo Caballero""@en .

  # Commander during the Rif War
  ?rifWar dbo:commander ?rifWarCommander .
  ?rifWar rdfs:label ""Rif War""@en .

  # Carlos Franco Iribarnegaray as a leader of an office that is both a government agency and an organization
  ?franco dbo:leader ?francoLeader .
  ?office dbo:head ?francoLeader ;
          rdf:type dbo:GovernmentAgency, dbo:Organization .
  ?franco rdfs:label ""Carlos Franco Iribarnegaray""@en .
}
```",5,7,6,2,3,3,3,71,0,0,1,0,0.0,0
433,55,val,"Give me the associated musical artist of the associated musical artist, that is an artist and a musical artist, of Scott LaFaro and professional in the profession of Bob Marley and associated musical artist of the person born, that is a musical artist and an artist, as Paul Laurence Dunbar Chambers Jr..","SELECT ?result WHERE { ?v5 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?v3 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. ?v3 <http://dbpedia.org/property/birthName> ""Paul Laurence Dunbar Chambers Jr.""@en . <http://dbpedia.org/resource/Scott_LaFaro> <http://dbpedia.org/ontology/associatedMusicalArtist> ?v5 . <http://dbpedia.org/resource/Bob_Marley> <http://dbpedia.org/property/occupation> ?v2 . ?result <http://dbpedia.org/property/occupation> ?v2 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. }","```sparql
SELECT ?commonArtist WHERE {
  # Step 1: Find Scott LaFaro's associated musical artist who is also an artist and musician
  ?scottLaFaro dbo:associatedMusicalArtist ?artist1 .
  ?scottLaFaro rdfs:label ""Scott LaFaro""@en .
  
  # Ensure the artist is both a musician and an artist
  ?artist1 rdf:type dbo:Musician ;
           dbo:profession dbr:Musician .

  # Step 2: Confirm Bob Marley's profession as musician
  ?bobMarley dbo:profession dbr:Musician .
  ?bobMarley rdfs:label ""Bob Marley""@en .

  # Step 3: Find Paul Laurence Dunbar Chambers Jr.'s associated musical artist who is also an artist and musician
  ?paulChambers dbo:associatedMusicalArtist ?artist2 .
  ?paulChambers rdfs:label ""Paul LaFaro Chambers Jr.""@en .

  # Ensure the artist is both a musician and an artist
  ?artist2 rdf:type dbo:Musician ;
           dbo:profession dbr:Musician .

  # Step 4: Find the common associated musical artist between the two identified artists
  FILTER (?artist1 = ?commonArtist)
  FILTER (?artist2 = ?commonArtist)
}
```",6,10,7,2,3,3,3,71,0,0,1,0,0.0,0
93,17,val,"Give me the capital of Alaska and death place of the governor of the native, that is a politician, of Seattle.",SELECT ?result WHERE { ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. <http://dbpedia.org/resource/Alaska> <http://dbpedia.org/ontology/capital> ?result . ?v3 <http://dbpedia.org/ontology/deathPlace> ?result . ?v0 <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Seattle> . ?v0 <http://dbpedia.org/property/governor> ?v3 . },"```sparql
SELECT ?capital (SAMPLE(?deathPlace) AS ?deathPlaceOfChiefSeattle) WHERE {
  # Capital of Alaska
  ?alaska dbo:capital ?capital .
  ?alaska rdfs:label ""Alaska""@en .

  # Death place of Chief Seattle
  OPTIONAL {
    ?chiefSeattle dbo:deathPlace ?deathPlace .
    ?chiefSeattle rdfs:label ""Chief Seattle""@en .
  }
}
```",4,5,5,3,2,3,2,20,1,1,0,0.5,1.0,0.6666666666666666
645,54,val,"Give me the leader of Ministry of the Army (Spain) and military force of the force, that is an event and a military conflict and a societal event, of the native, that is a president and a politician, of Restoration (Spain) and commander in the force of Carlos Asensio Cabanillas.",SELECT ?result WHERE { ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. <http://dbpedia.org/resource/Ministry_of_the_Army_(Spain)> <http://dbpedia.org/ontology/leader> ?result . ?v3 <http://dbpedia.org/ontology/commander> ?result . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?v5 <http://dbpedia.org/ontology/commander> ?v0 . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/President>. ?v3 <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Carlos_Asensio_Cabanillas> . ?v0 <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Restoration_(Spain)> . ?result <http://dbpedia.org/ontology/battle> ?v5 . },"```sparql
SELECT ?leader ?event ?native WHERE {
  # Find the leader of Ministry of the Army (Spain)
  ?ministry dbo:leader ?leader .
  ?ministry rdfs:label ""Ministry of the Army (Spain)""@en .

  # Find military force associated with this leader
  ?force dbo:commander ?leader .
  
  # Identify an event that is both a military conflict and societal event related to this force
  ?event dbo:participatedIn ?force ;
         rdf:type dbp:MilitaryConflict, dbp:SocietalEvent .

  # Find native who was president, politician, and commander in this force during Restoration (Spain)
  ?native dbo:nationality dbr:Spain ;
          dbo:position ""President""@en ;
          dbo:occupation ""Politician""@en ;
          dbo:commanderIn ?force .
  
  # Ensure the native is associated with Carlos Asensio Cabanillas
  ?native dbo:commanderIn ?asensioForce .
  ?asensioForce dbo:commander dbr:Carlos_Asensio_Cabanillas .

  # Ensure the time period is during Restoration (Spain)
  ?native dbo:timePeriod dbr:Restoration_(Spain) .
}
```",6,11,7,3,3,3,3,71,0,0,1,0,0.0,0
645,49,val,"Give me the leader of the office, that is a government agency and an organisation, of the native of Restoration (Spain) and commander in the force of Carlos Asensio Cabanillas.",SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?v0 <http://dbpedia.org/property/office> ?v1 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/GovernmentAgency>. ?v2 <http://dbpedia.org/ontology/commander> ?result . ?v1 <http://dbpedia.org/ontology/leader> ?result . ?v0 <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Restoration_(Spain)> . ?v2 <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Carlos_Asensio_Cabanillas> . },"```sparql
SELECT ?leader WHERE {
  # Identify Carlos Asensio Cabanillas
  ?person rdfs:label ""Carlos Asensio Cabanillas""@en .
  
  # Find his place of birth as Restoration, Spain
  ?person dbo:birthPlace ?place .
  ?place rdfs:label ""Restoration, Spain""@en .

  # Identify his role or position in a force
  OPTIONAL {
    ?person dbo:positionHeld|dbo:role ?forceRole .
    FILTER (regex(str(?forceRole), ""commander"", ""i""))
  }

  # Find the office he leads that is both a government agency and an organization
  OPTIONAL {
    ?office dbo:leader ?leader .
    ?office rdf:type dbo:GovernmentAgency ;
            dbo:organization ?organization .
    ?person dbo:positionHeld|dbo:role ?officeRole .
    FILTER (regex(str(?officeRole), ""leader"", ""i""))
  }
}
```",5,7,6,3,2,3,3,71,0,0,3,0,0.0,0
645,50,val,"Give me the leader of the office, that is a government agency and an organisation, of Camilo Menéndez Tolosa and military force of the force, that is an event and a military conflict and a societal event, of the native, that is a president and a politician, of Restoration (Spain).",SELECT ?result WHERE { ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. <http://dbpedia.org/resource/Camilo_Menéndez_Tolosa> <http://dbpedia.org/property/office> ?v3 . ?v0 <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Restoration_(Spain)> . ?v3 <http://dbpedia.org/ontology/leader> ?result . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/President>. ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/GovernmentAgency>. ?v4 <http://dbpedia.org/ontology/commander> ?v0 . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?result <http://dbpedia.org/ontology/battle> ?v4 . },"```sparql
SELECT ?leaderOfOffice ?militaryForce WHERE {
  # Find Camilo Menéndez Tolosa's office that is a government agency and an organization
  ?office dbo:employee ?camilo .
  ?camilo rdfs:label ""Camilo Menéndez Tolosa""@en .
  ?office rdf:type dbo:GovernmentAgency ;
          rdf:type dbo:Organization .

  # Find the leader of this office
  ?office dbo:leader ?leaderOfOffice .

  # Identify a native president during Restoration (Spain) who is also a politician
  ?president dbo:nationality dbr:Spain ;
             dbo:position ""President""@en ;
             rdf:type dbo:Politician .
  ?president dbo:relatedEvent dbr:Bourbon_Restoration_in_Spain .

  # Find the military force associated with this president
  ?militaryForce dbo:participatedIn ?president ;
                 rdf:type dbo:MilitaryConflict ;
                 rdf:type dbo:SocietalEvent ;
                 rdf:type dbo:Event .
}
```",5,12,6,3,2,3,3,71,0,0,1,0,0.0,0
933,41,val,Give me the reference to the birth name of Alan Warner (musician) and band of the band of Alan Warner (musician) and band of The Ramong Sound.,SELECT ?result WHERE { ?result <http://xmlns.com/foaf/0.1/name> ?v4 . ?v2 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . <http://dbpedia.org/resource/Alan_Warner_(musician)> <http://dbpedia.org/property/birthName> ?v4 . <http://dbpedia.org/resource/The_Ramong_Sound> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . <http://dbpedia.org/resource/Alan_Warner_(musician)> <http://dbpedia.org/ontology/associatedMusicalArtist> ?v2 . },"```sparql
SELECT ?birthName ?alanWarnerBand ?ramonesBand WHERE {
  # Get Alan Warner's birth name and his band
  ?alanWarner dbo:birthName ?birthName .
  ?alanWarner rdfs:label ""Alan Warner (musician)""@en .
  
  OPTIONAL { 
    ?alanWarner dbo:band ?alanWarnerBand .
  }
  
  # Get The Ramones' band
  ?ramones dbo:band ?ramonesBand .
  ?ramones rdfs:label ""The Ramones""@en .
}
```",5,5,6,2,3,3,3,71,0,0,1,0,0.0,0
5,16,val,"Give me the entity in the award of Coro de la Pontificia Universidad Católica de Puerto Rico and birthplace of the person born, that is a politician, as .","SELECT ?result WHERE { <http://dbpedia.org/resource/Coro_de_la_Pontificia_Universidad_Católica_de_Puerto_Rico> <http://dbpedia.org/property/awards> ?v0 . ?v2 <http://dbpedia.org/property/birthName> """"@en . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v2 <http://dbpedia.org/ontology/birthPlace> ?result . ?result <http://dbpedia.org/ontology/country> ?v0 . }","```sparql
SELECT ?person WHERE {
  # Find entities associated with the Coro de la Pontificia Universidad Católica de Puerto Rico award
  ?award dbo:recipient ?person .
  ?award rdfs:label ""Coro de la Pontificia Universidad Católica de Puerto Rico""@en .

  # Find politicians and their birthplaces
  OPTIONAL {
    ?person dbo:birthPlace ?birthplace .
    ?person rdf:type dbo:Politician .
  }

  FILTER EXISTS { 
    ?award dbo:recipient ?person .
  }
}
```",4,5,5,2,2,3,2,20,0,0,2,0,0.0,0
129,22,val,"Give me the professional in the mayor of 1999 West Dunbartonshire Council election and associated musical artist of the actor, that is an organisation, of Dreamville Presents: Revenge.",SELECT ?result WHERE { <http://dbpedia.org/resource/1999_West_Dunbartonshire_Council_election> <http://dbpedia.org/property/leader> ?v2 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. <http://dbpedia.org/resource/Dreamville_Presents:_Revenge> <http://dbpedia.org/property/starring> ?v3 . ?result <http://dbpedia.org/property/occupation> ?v2 . ?v3 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . },"```sparql
SELECT ?mayor ?actor ?artist ?organisation WHERE {
  # Find the mayor of West Dunbartonshire Council in 1999
  ?mayor dbo:officeHolderOf ?council .
  ?council dbo:name ""West Dunbartonshire Council""@en ;
           dbo:electionDate ?date .
  FILTER (YEAR(?date) = 1999)

  # Find an actor associated with a musical artist
  ?actor dbo:associatedMusicalArtist ?artist .

  # Find the organisation associated with Dreamville Presents: Revenge
  ?event dbo:organisedBy ?organisation ;
         rdfs:label ""Dreamville Presents: Revenge""@en .
}
```",4,5,5,2,2,2,3,28,0,0,3,0,0.0,0
465,50,val,"Give me the successor of the child, that is a royalty, of Anne of Brittany and spouse of the child, that is a royalty, of the parent of Elizabeth of Austria (1526–1545).",SELECT ?result WHERE { <http://dbpedia.org/resource/Anne_of_Brittany> <http://dbpedia.org/ontology/child> ?v3 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v0 <http://dbpedia.org/ontology/child> ?v4 . ?v0 <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Elizabeth_of_Austria_(1526–1545)> . ?v3 <http://dbpedia.org/ontology/successor> ?result . ?result <http://dbpedia.org/ontology/spouse> ?v4 . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. },"```sparql
SELECT ?successor WHERE {
  # Child of Anne of Brittany who is royalty
  ?anneChild dbo:parent dbc:Anne_of_Brittany .
  ?anneChild rdf:type dbo:Monarch .

  # Parent of Elizabeth of Austria (1526–1545)
  ?elizabethParent dbo:child dbc:Elizabeth_of_Austria_1526-1545 .
  
  # Child of this parent who is royalty and spouse to the royal child of Anne
  ?spouseChild dbo:parent ?elizabethParent .
  ?spouseChild rdf:type dbo:Monarch .
  ?anneChild dbo:spouse ?spouseChild .

  # Successor of the royal child from Anne of Brittany
  ?anneChild dbo:successor ?successor .
}
```",5,7,6,3,2,3,3,71,0,0,1,0,0.0,0
353,7,val,"Give me the alma mater of the awardee of Medal of the Order ""For Merit to the Fatherland"" and entity in Russia.",SELECT ?result WHERE { ?v2 <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/Medal_of_the_Order_%22For_Merit_to_the_Fatherland%22> . ?result <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Russia> . ?v2 <http://dbpedia.org/ontology/almaMater> ?result . },"```sparql
SELECT ?almaMater WHERE {
  # Find individuals who have received the Medal of the Order ""For Merit to the Fatherland""
  ?person dbo:award ?medal .
  ?medal rdfs:label ""Medal of the Order 'For Merit to the Fatherland'""@en .

  # Ensure the individual is associated with Russia
  ?person dbo:nationality dbr_Russia ;
          dbo:almaMater ?almaMater .

}
```",3,3,4,2,2,2,2,9,0,0,5,0,0.0,0
874,15,val,"Give me the band of Robert Hart (musician) and band of the writer, that is an artist and a musical artist, of the work, that is a work, of Horace Andy.",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/bandMember> <http://dbpedia.org/resource/Robert_Hart_(musician)> . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. ?result <http://dbpedia.org/ontology/bandMember> ?v1 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?v0 <http://dbpedia.org/property/writer> <http://dbpedia.org/resource/Horace_Andy> . ?v0 <http://dbpedia.org/property/writer> ?v1 . },"```sparql
SELECT ?robertHartBand ?artistBand WHERE {
  # Find the band of Robert Hart (musician)
  ?robertHart dbo:member ?band .
  ?robertHart rdfs:label ""Robert Hart""@en .
  
  # Find Horace Andy's work that involves an artist who is also a musical artist
  ?horaceAndyWork dbo:creator ?artist .
  ?horaceAndyWork rdfs:label ?workLabel .
  ?horaceAndyWork dbo:genre dbc:Reggae .
  ?horaceAndy rdfs:label ""Horace Andy""@en .
  
  # Ensure the creator is both an artist and a musical artist
  ?artist rdf:type dbo:Artist ;
          dbo:musicalArtist true .

  # Find the band of this dual-role artist
  ?artist dbo:member ?band .
  
  BIND(?band AS ?artistBand)
}
```",4,7,5,3,2,3,2,20,0,0,1,0,0.0,0
892,53,val,"Give me the entity in the profession of the true self of Enrico Crolla and entity in the administration, that is Italian and a region and a settlement and an administrative region, of Democratic Party (Italy) and landmark at elevation of 58.","SELECT ?result WHERE { ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. ?v0 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Italy>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Region>. ?v0 <http://dbpedia.org/property/leaderParty> <http://dbpedia.org/resource/Democratic_Party_(Italy)> . ?v3 <http://xmlns.com/foaf/0.1/givenName> ""Enrico Crolla""@en . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/AdministrativeRegion>. ?result <http://dbpedia.org/ontology/country> ?v1 . ?result <http://dbpedia.org/ontology/elevation> ""58""^^<http://www.w3.org/2001/XMLSchema#integer> . ?v3 <http://dbpedia.org/property/occupation> ?v1 . ?result <http://dbpedia.org/ontology/province> ?v0 . }","```sparql
# Query for Enrico Crolla's profession
SELECT ?profession WHERE {
  ?enricoCrolla dbo:occupation ?profession .
  ?enricoCrolla rdfs:label ""Enrico Crolla""@en .
}

UNION

# Query for an Italian region, settlement, and administrative region associated with the Democratic Party (Italy)
SELECT ?region WHERE {
  ?party dbo:member ?person .
  ?party rdfs:label ""Democratic Party (Italy)""@en .
  
  ?region dbo:country dbr:Italy ;
          a dbo:Region ;
          a dbo:Settlement ;
          a dbo:AdministrativeRegion .

  OPTIONAL { ?person dbo:memberOf ?party . }
}

UNION

# Query for a landmark at elevation of 58
SELECT ?landmark WHERE {
  ?landmark dbo:elevation ""58""^^xsd:integer .
  ?landmark dbo:country dbr:Italy ;
            a dbo:Lighthouse ; # Assuming we are looking for a lighthouse or similar landmark
}
```",6,10,7,3,3,3,3,71,0,0,2,0,0.0,0
865,44,val,"Give me the native of British Raj and father of the child of Abu Ahmad Abdul Hafiz and father of the child, that is a politician, of Abu Ahmad Abdul Hafiz.",SELECT ?result WHERE { ?v2 <http://dbpedia.org/property/father> ?result . ?result <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/British_Raj> . ?v2 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Abu_Ahmad_Abdul_Hafiz> . ?v3 <http://dbpedia.org/property/father> ?result . ?v3 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Abu_Ahmad_Abdul_Hafiz> . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. },"```sparql
SELECT ?nativeOfBritishRaj ?fatherOfPolitician WHERE {
  # Find Abu Ahmad Abdul Hafiz
  ?abuAhmad a dbo:Person ;
            rdfs:label ""Abu Ahmad Abdul Hafiz""@en .

  # Identify his children, specifically the politician child
  ?child dbo:parent ?abuAhmad .
  OPTIONAL { 
    ?child dbo:occupation dbr:Politician .
  }

  # Find the father of this politician child
  ?politicianChild dbo:parent ?fatherOfPolitician .
  FILTER (?child = ?politicianChild)

  # Identify the native of British Raj
  ?nativeOfBritishRaj dbo:nativePlace dbr:British_Raj ;
                      dbo:parent ?abuAhmad .

}
```",5,6,6,2,3,3,3,71,0,0,1,0,0.0,0
573,44,val,"Give me the parent of the author, that is a politician and an office holder, of Exchequer Standards and person decedent at the residence, that is a settlement, of William J. Phelan and person decedent at Massachusetts.",SELECT ?result WHERE { ?v2 <http://dbpedia.org/ontology/parent> ?result . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. <http://dbpedia.org/resource/William_J._Phelan> <http://dbpedia.org/property/residence> ?v4 . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?result <http://dbpedia.org/ontology/deathPlace> ?v4 . ?result <http://dbpedia.org/ontology/deathPlace> <http://dbpedia.org/resource/Massachusetts> . <http://dbpedia.org/resource/Exchequer_Standards> <http://dbpedia.org/property/author> ?v2 . },"```sparql
SELECT ?parent WHERE {
  # Step 1: Identify the author of ""Exchequer Standards""
  ?author dbo:work ?exchequerStandards .
  ?exchequerStandards rdfs:label ""Exchequer Standards""@en .

  # Step 2: Find the parent who is a politician and an office holder
  ?author dbo:parent ?parent .
  ?parent rdf:type dbo:Politician ;
          dbo:officeHolder true .

  # Step 3: Identify William J. Phelan's residence as a settlement
  ?phelan dbo:residence ?settlement .
  ?phelan rdfs:label ""William J. Phelan""@en .
  ?settlement rdf:type dbo:Settlement .

  # Step 4: Find a person who died at the settlement and in Massachusetts
  ?decedent dbo:placeOfDeath ?deathPlace ;
           dbo:causeOfDeath ?cause .
  
  FILTER (?deathPlace = ?settlement || ?deathPlace.foaf:name = ""Massachusetts""@en)
}
```",5,8,6,2,3,3,3,71,0,0,2,0,0.0,0
582,44,val,"Give me the figure known as the nickname of Japan national football team and player in the father, that is an athlete and a soccer manager and a sports manager, of Masami Nagasawa and reference to Japan.","SELECT ?result WHERE { <http://dbpedia.org/resource/Japan_national_football_team> <http://dbpedia.org/property/nickname> ?v2 . ?result <http://dbpedia.org/property/nickname> ?v2 . ?v4 <http://dbpedia.org/ontology/team> ?result . <http://dbpedia.org/resource/Masami_Nagasawa> <http://dbpedia.org/property/father> ?v4 . ?result <http://xmlns.com/foaf/0.1/name> ""Japan""@en . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Athlete>. ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerManager>. ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsManager>. }","```sparql
SELECT ?father ?nickname WHERE {
  # Find Masami Nagasawa and her father
  ?nagasawa dbo:parent ?father .
  ?nagasawa rdfs:label ""Masami Nagasawa""@en .

  # Ensure the father is an athlete, soccer manager, and sports manager
  ?father rdf:type dbo:Athlete ;
          dbo:sportManagerOf ?team .
  
  # Find the nickname of the Japan national football team
  ?team rdfs:label ?nickname .
  FILTER (regex(str(?team), ""Japan national football team"", ""i""))

  # Ensure the father is linked to the team as a manager or athlete
  OPTIONAL {
    ?father dbo:sportManagerOf ?team .
    ?father dbo:athleteOf ?team .
  }
}
```",5,8,6,2,3,3,3,71,0,0,1,0,0.0,0
645,53,val,"Give me the military force of Spanish Civil War and leader of the office, that is a government agency and an organisation, of Camilo Menéndez Tolosa and commander in the force of the commander in Siege of Madrid.",SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/leader> ?result . ?v2 <http://dbpedia.org/ontology/commander> ?result . <http://dbpedia.org/resource/Camilo_Menéndez_Tolosa> <http://dbpedia.org/property/office> ?v1 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/GovernmentAgency>. ?result <http://dbpedia.org/ontology/battle> <http://dbpedia.org/resource/Spanish_Civil_War> . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?v2 <http://dbpedia.org/ontology/commander> ?v3 . <http://dbpedia.org/resource/Siege_of_Madrid> <http://dbpedia.org/ontology/commander> ?v3 . },"```sparql
SELECT ?militaryForce ?leaderOfOffice ?commanderInSiege WHERE {
  # Find military forces involved in the Spanish Civil War
  ?militaryForce dbo:participatedIn dbr:Spanish_Civil_War .
  
  # Identify Camilo Menéndez Tolosa's associated government agency or organization and its leader
  ?agency a dbo:GovernmentAgency ;
         dbo:employee ?camiloMenendezTolosa ;
         dbo:leader ?leaderOfOffice .
  ?camiloMenendezTolosa rdfs:label ""Camilo Menéndez Tolosa""@en .

  # Find the commander in the Siege of Madrid and their role
  ?commanderInSiege dbo:commanded ?siegeForce ;
                   dbo:participatedIn dbr:Siege_of_Madrid .
  ?siegeForce dbo:partOf ?militaryForce .
}
```",6,8,7,3,3,3,3,71,0,0,1,0,0.0,0
965,53,val,"Give me the spouse of the spouse of the parent of Louise Mountbatten and parent of the person born, that is a noble, as Prince George of Battenberg and parent of Louise Mountbatten.","SELECT ?result WHERE { ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Noble>. ?result <http://dbpedia.org/ontology/spouse> ?v1 . ?v3 <http://dbpedia.org/ontology/spouse> ?v1 . ?v0 <http://dbpedia.org/property/birthName> ""Prince George of Battenberg""@en . <http://dbpedia.org/resource/Louise_Mountbatten> <http://dbpedia.org/ontology/parent> ?result . ?v0 <http://dbpedia.org/ontology/parent> ?result . <http://dbpedia.org/resource/Louise_Mountbatten> <http://dbpedia.org/ontology/parent> ?v3 . }","```sparql
SELECT ?finalSpouse WHERE {
  # Step 1: Identify Louise Mountbatten's parent
  ?louise dbo:parent ?parentLouise .
  ?louise rdfs:label ""Louise Mountbatten""@en .

  # Step 2: Find the spouse of Louise Mountbatten's parent
  OPTIONAL {
    ?parentLouise dbo:spouse ?grandSpouse .
  }

  # Step 3: Identify Prince George of Battenberg as a noble and find his birth details
  ?princeGeorge dbo:birthPlace ?birthPlace .
  ?princeGeorge rdfs:label ""Prince George of Battenberg""@en .
  FILTER EXISTS { ?princeGeorge dbo:noble True }

  # Step 4: Find the spouse of Prince George of Battenberg
  OPTIONAL {
    ?princeGeorge dbo:spouse ?princeSpouse .
  }

  # Step 5: Determine the parent of this spouse
  OPTIONAL {
    ?princeSpouse dbo:parent ?finalParent .
  }

  # Final step: Find the spouse of the final parent (grandSpouse)
  OPTIONAL {
    ?finalParent dbo:spouse ?finalSpouse .
  }
}
```",6,7,7,3,3,3,3,71,0,0,2,0,0.0,0
917,44,val,Give me the child of the father of Keʻelikōlani and parent of Albert Kamehameha and child of the father of Kamehameha IV.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Albert_Kamehameha> . <http://dbpedia.org/resource/Kamehameha_IV> <http://dbpedia.org/property/father> ?v0 . ?result <http://dbpedia.org/ontology/parent> ?v4 . <http://dbpedia.org/resource/Keʻelikōlani> <http://dbpedia.org/property/father> ?v4 . ?result <http://dbpedia.org/property/father> ?v0 . },"```sparql
SELECT ?child WHERE {
  # Find the father of Keʻelikōlani
  ?keelikoLani dbo:parent ?father .
  ?keelikoLani rdfs:label ""Keʻelikōlani""@en .

  # Identify the child of this father who is a parent to Albert Kamehameha
  OPTIONAL {
    ?child dbo:parent ?father .
    ?albertKamehameha dbo:parent ?child .
    ?albertKamehameha rdfs:label ""Albert Kamehameha""@en .
  }

  # Find the father of Kamehameha IV and identify his child
  OPTIONAL {
    ?kamehamehaIV dbo:parent ?fatherOfIV .
    ?kamehamehaIV rdfs:label ""Kamehameha IV""@en .
    ?child2 dbo:parent ?fatherOfIV .
  }
}
```",5,5,6,2,3,3,3,71,1,0,0,1.0,1.0,1.0
507,54,val,"Give me the professional in Film director, television director and spouse of the person born as Anne Voase Coates and director of the movie, that is a movie and a work, with the person born on 1919-06-17.","SELECT ?result WHERE { ?v5 <http://dbpedia.org/property/starring> ?v0 . ?v5 <http://dbpedia.org/ontology/director> ?result . ?v3 <http://dbpedia.org/property/birthName> ""Anne Voase Coates""@en . ?v0 <http://dbpedia.org/ontology/birthDate> ""1919-06-17""^^<http://www.w3.org/2001/XMLSchema#date> . ?result <http://dbpedia.org/property/occupation> ""Film director, television director""@en . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?result <http://dbpedia.org/ontology/spouse> ?v3 . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Film>. }","```sparql
SELECT ?spouse ?movie WHERE {
  # Identify Anne Voase Coates by birthdate
  ?anne dbo:birthDate ""1919-06-17""^^xsd:date ;
        rdf:type dbo:FilmDirector ;
        dbo:spouse ?spouse .

  # Ensure the spouse is also a director
  ?spouse rdf:type dbo:FilmDirector ;
          dbo:directorOf ?movie .

  # Ensure the movie is classified as both a ""movie"" and a ""work""
  ?movie rdf:type dbo:Movie, dbo:Work .
}
```",6,8,7,3,3,3,3,71,0,0,1,0,0.0,0
933,53,val,"Give me the band of the band of the band, that is an artist and a musical artist, of The Ramong Sound and reference to Alan Warner and band of the band, that is a group and a band and an organisation, of Alan Warner (musician).","SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. <http://dbpedia.org/resource/The_Ramong_Sound> <http://dbpedia.org/ontology/associatedMusicalArtist> ?v3 . <http://dbpedia.org/resource/Alan_Warner_(musician)> <http://dbpedia.org/ontology/associatedMusicalArtist> ?v0 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Band>. ?v0 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Group>. ?result <http://xmlns.com/foaf/0.1/name> ""Alan Warner""@en . ?v3 <http://dbpedia.org/ontology/associatedMusicalArtist> ?v1 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. }","```sparql
SELECT ?finalBand WHERE {
  # Step 1: Identify The Ramones
  ?ramones rdfs:label ""The Ramones""@en .
  
  # Step 2: Find the band of The Ramones
  ?ramones dbo:band ?relatedBand1 .
  
  # Step 3: Further trace the band's connections
  ?relatedBand1 dbo:band ?finalBand .
  FILTER (regex(str(?finalBand), ""artist"", ""i"") && regex(str(?finalBand), ""musical artist"", ""i""))
  
  # Step 4: Identify Alan Warner as a musician
  ?alanWarner rdfs:label ""Alan Warner (musician)""@en .
  
  # Step 5: Find the band of Alan Warner
  ?alanWarner dbo:band ?relatedBand2 .
  
  # Step 6: Trace further connections for Alan Warner's band
  ?relatedBand2 dbo:band ?finalBand .
  FILTER (regex(str(?finalBand), ""group"", ""i"") && regex(str(?finalBand), ""band"", ""i"") && regex(str(?finalBand), ""organisation"", ""i""))
}
```",6,11,7,3,3,3,3,71,0,0,1,0,0.0,0
47,43,val,"Give me the office of Ajoy Mukherjee and office of the awardee of the award, that is an award, of Mantu Ghosh and office of Suvendu Adhikari.",SELECT ?result WHERE { ?v4 <http://dbpedia.org/property/awards> ?v0 . <http://dbpedia.org/resource/Mantu_Ghosh> <http://dbpedia.org/property/awards> ?v0 . <http://dbpedia.org/resource/Ajoy_Mukherjee> <http://dbpedia.org/property/office> ?result . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Award>. <http://dbpedia.org/resource/Suvendu_Adhikari> <http://dbpedia.org/property/office> ?result . ?v4 <http://dbpedia.org/property/office> ?result . },"```sparql
SELECT ?officeAjoyMukherjee ?award ?officeAwardRecipient ?officeSuvenduAdhikari WHERE {
  # Office of Ajoy Mukherjee
  ?ajoyMukherjee dbo:office ?officeAjoyMukherjee .
  ?ajoyMukherjee rdfs:label ""Ajoy Mukherjee""@en .

  # Award received by Mantu Ghosh and office of the awardee
  ?mantuGhosh dbo:awardReceived ?award .
  ?mantuGhosh rdfs:label ""Mantu Ghosh""@en .
  
  OPTIONAL {
    ?recipient dbo:awardReceived ?award .
    ?recipient dbo:office ?officeAwardRecipient .
  }

  # Office of Suvendu Adhikari
  ?suvenduAdhikari dbo:office ?officeSuvenduAdhikari .
  ?suvenduAdhikari rdfs:label ""Suvendu Adhikari""@en .
}
```",5,6,6,3,3,3,3,71,0,0,1,0,0.0,0
236,17,val,"Give me the party member of Federalist Party and party member of the administration of the reference, that is an office holder and a politician, to James Madison.","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/party> <http://dbpedia.org/resource/Federalist_Party> . ?v0 <http://xmlns.com/foaf/0.1/name> ""James Madison""@en . ?v3 <http://dbpedia.org/property/leader> ?v0 . ?result <http://dbpedia.org/ontology/party> ?v3 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. }","```sparql
SELECT ?federalistMember ?administrationMember WHERE {
  # Identify James Madison
  ?madison rdfs:label ""James Madison""@en .
  
  # Find Federalist Party members during Madison's era
  ?federalistMember dbo:partyAffiliation dbr:Federalist_Party ;
                   dbo:occupation dbr:Politician ;
                   dbo:officeHolder true .

  # Find administration members of James Madison who are politicians and office holders
  ?administrationMember dbo:affiliatedWith ?madison ;
                       dbo:partyAffiliation dbr:Democratic-Republican_Party ;
                       dbo:occupation dbr:Politician ;
                       dbo:officeHolder true .
}
```",4,6,5,3,2,3,2,20,0,0,19,0,0.0,0
917,41,val,"Give me the child of Kekūanāoʻa and child of the father of Keʻelikōlani and parent of the child, that is a royalty, of Kamehameha IV.","SELECT ?result WHERE { ?v2 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Kamehameha_IV> . ?result <http://dbpedia.org/ontology/child> ?v2 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?result <http://dbpedia.org/property/father> ""Kekūanāoʻa""@en . ?result <http://dbpedia.org/ontology/parent> ?v4 . <http://dbpedia.org/resource/Keʻelikōlani> <http://dbpedia.org/property/father> ?v4 . }","```sparql
SELECT ?childOfKekuanaoa ?royalChild ?parent WHERE {
  # Find child of Kekūanāoʻa
  ?kekuanaoa dbo:child ?childOfKekuanaoa .
  ?kekuanaoa rdfs:label ""Kekūanāoʻa""@en .

  # Find father of Keʻelikōlani and his child who is royalty
  ?keelikoLani dbo:parent ?fatherKeelikoLani .
  ?keelikoLani rdfs:label ""Keʻelikōlani""@en .
  
  OPTIONAL {
    ?fatherKeelikoLani dbo:child ?royalChild .
    FILTER (regex(str(?royalChild), ""Royal"", ""i"")) # Assuming a property or label indicating royalty
  }

  # Find parent of the royal child related to Kamehameha IV
  OPTIONAL {
    ?kamehamehaIV dbo:parent ?parent .
    ?kamehamehaIV rdfs:label ""Kamehameha IV""@en .
    
    FILTER (?royalChild = ?childOfParent)
    ?parent dbo:child ?childOfParent .
  }
}
```",5,6,6,2,3,3,3,71,1,6,0,0.14285714285714285,1.0,0.25
917,48,val,"Give me the child of the father of Kamehameha IV and parent of the child, that is a royalty, of the mayor of Hawaiian Kingdom.",SELECT ?result WHERE { ?result <http://dbpedia.org/property/father> ?v0 . ?v1 <http://dbpedia.org/property/father> ?v3 . <http://dbpedia.org/resource/Kamehameha_IV> <http://dbpedia.org/property/father> ?v0 . ?result <http://dbpedia.org/ontology/child> ?v1 . <http://dbpedia.org/resource/Hawaiian_Kingdom> <http://dbpedia.org/property/leader> ?v3 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. },"```sparql
SELECT ?child WHERE {
  # Find Kamehameha IV and his father
  ?kamehamehaIV dbo:parent ?father .
  ?kamehamehaIV rdfs:label ""Kamehameha IV""@en .

  # Identify the child of this father who is royalty
  OPTIONAL { 
    ?child dbo:parent ?father .
    FILTER (regex(str(?child), ""royalty"", ""i""))
  }

  # Find the mayor of Hawaiian Kingdom and their royal child
  OPTIONAL {
    ?mayor dbo:position ""Mayor""@en ;
           dbo:location dbc:Hawaiian_Kingdom .
    
    ?mayorChild dbo:parent ?mayor .
    FILTER (regex(str(?mayorChild), ""royalty"", ""i""))
  }
}
```",5,6,6,3,2,3,3,71,0,0,2,0,0.0,0
839,53,val,"Give me the band of the person born, that is a musical artist, as the persona of Kevin Russell (musician) and band of the band, that is a musical artist, of Charlie Huhn and band of Peter Schorowsky.",SELECT ?result WHERE { <http://dbpedia.org/resource/Kevin_Russell_(musician)> <http://xmlns.com/foaf/0.1/givenName> ?v3 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?result <http://dbpedia.org/ontology/bandMember> <http://dbpedia.org/resource/Peter_Schorowsky> . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?v2 <http://dbpedia.org/property/birthName> ?v3 . <http://dbpedia.org/resource/Charlie_Huhn> <http://dbpedia.org/ontology/associatedMusicalArtist> ?v1 . ?result <http://dbpedia.org/ontology/bandMember> ?v1 . ?v2 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . },"```sparql
SELECT ?kevinBand ?charlieBand ?charlieBandOfBand ?peterBand WHERE {
  # Kevin Russell's band
  OPTIONAL {
    ?kevin dbo:band ?kevinBand .
    ?kevin rdfs:label ""Kevin Russell (musician)""@en .
  }

  # Charlie Huhn's band and the band of that band if it exists
  OPTIONAL {
    ?charlie dbo:band ?charlieBand .
    ?charlie rdfs:label ""Charlie Huhn""@en .
  }
  
  OPTIONAL {
    ?charlieBand dbo:band ?charlieBandOfBand .
  }

  # Peter Schorowsky's band
  OPTIONAL {
    ?peter dbo:band ?peterBand .
    ?peter rdfs:label ""Peter Schorowsky""@en .
  }
}
```",6,8,7,3,3,3,3,71,0,985,1,0.0,0.0,0
606,15,val,"Give me the birthplace of Charles I. Barber and figure known as the nickname of the figure known, that is a settlement, as Barb City.","SELECT ?result WHERE { ?v0 <http://dbpedia.org/property/nickname> ?v1 . ?result <http://dbpedia.org/property/nickname> ?v1 . <http://dbpedia.org/resource/Charles_I._Barber> <http://dbpedia.org/ontology/birthPlace> ?result . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. ?v0 <http://dbpedia.org/property/nickname> ""Barb City""@en . }","```sparql
# Query for the birthplace of Charles I. Barber
SELECT ?birthPlace WHERE {
  ?barber a dbo:Person ;
          rdfs:label ""Charles I. Barber""@en .
  ?barber dbo:birthPlace ?birthPlace .
}

UNION

# Query to find the settlement known as ""Barb City""
SELECT ?settlement WHERE {
  ?settlement a dbo:Settlement ;
              rdfs:label ""Barb City""@en .
}
```",4,5,5,3,2,3,2,20,0,0,1,0,0.0,0
933,51,val,"Give me the band of the band, that is a group and a band and an organisation, of the person born, that is a musical artist, on 1947-04-21 and reference to the birth name of Alan Warner (musician).","SELECT ?result WHERE { ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?result <http://xmlns.com/foaf/0.1/name> ?v4 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Group>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Band>. <http://dbpedia.org/resource/Alan_Warner_(musician)> <http://dbpedia.org/property/birthName> ?v4 . ?v3 <http://dbpedia.org/ontology/birthDate> ""1947-04-21""^^<http://www.w3.org/2001/XMLSchema#date> . ?v0 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?v3 <http://dbpedia.org/ontology/associatedMusicalArtist> ?v0 . }","```sparql
SELECT ?band WHERE {
  # Find the person born on April 21, 1947, who is a musical artist and has the birth name Alan Warner
  ?person dbo:birthDate ""1947-04-21""^^xsd:date ;
          dbo:birthName ""Alan Warner""@en ;
          rdf:type dbo:MusicalArtist .

  # Find bands associated with this person that are both groups and organizations
  ?band dbo:member ?person ;
        rdf:type dbo:Band, dbo:Organization .
}
```",5,9,6,3,2,3,3,71,0,0,1,0,0.0,0
192,17,val,Give me the child of the child of the parent of Anna of Hungary (Byzantine empress) and spouse of Clemence of Austria.,SELECT ?result WHERE { ?v3 <http://dbpedia.org/property/father> ?v0 . ?v0 <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Anna_of_Hungary_(Byzantine_empress)> . <http://dbpedia.org/resource/Clemence_of_Austria> <http://dbpedia.org/ontology/spouse> ?result . ?result <http://dbpedia.org/ontology/parent> ?v3 . },"```sparql
SELECT ?child WHERE {
  # Identify Anna of Hungary and her parent
  ?anna rdfs:label ""Anna of Hungary (Byzantine empress)""@en .
  ?anna dbo:parent ?parent .

  # Find a child of Anna's parent
  ?sibling dbo:parent ?parent .

  # Identify Clemence of Austria and her spouse
  ?clemence rdfs:label ""Clemence of Austria""@en .
  ?clemence dbo:spouse ?spouse .

  # Find the child of both the sibling (child of Anna's parent) and Clemence's spouse
  ?child dbo:parent ?sibling ;
         dbo:parent ?spouse .
}
```",4,4,5,3,2,3,2,20,0,0,1,0,0.0,0
465,46,val,"Give me the spouse of the child, that is a royalty, of Ferdinand I, Holy Roman Emperor and successor of the child of the parent of Ercole II d'Este, Duke of Ferrara.","SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/successor> ?result . ?result <http://dbpedia.org/ontology/spouse> ?v4 . <http://dbpedia.org/resource/Ercole_II_d'Este,_Duke_of_Ferrara> <http://dbpedia.org/ontology/parent> ?v2 . ?v1 <http://dbpedia.org/property/father> ?v2 . <http://dbpedia.org/resource/Ferdinand_I,_Holy_Roman_Emperor> <http://dbpedia.org/ontology/child> ?v4 . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. }","```sparql
SELECT ?spouse WHERE {
  # Find Ferdinand I and his children who are royalty
  ?ferdinand dbo:child ?royalChild .
  ?ferdinand rdfs:label ""Ferdinand I, Holy Roman Emperor""@en .

  # Identify the successor of this royal child
  OPTIONAL { 
    ?royalChild dbo:succ ?successor .
  }

  # Find Ercole II d'Este and his parent
  ?ercole2 dbo:parent ?alfonsoI .
  ?ercole2 rdfs:label ""Ercole II d'Este, Duke of Ferrara""@en .

  # Confirm Alfonso I as the parent of Ercole II
  ?alfonsoI rdfs:label ""Alfonso I d'Este, Duke of Ferrara""@en .

  # Find the spouse of the successor identified
  OPTIONAL {
    ?successor dbo:spouse ?spouse .
  }
}
```",5,6,6,3,2,3,3,71,0,0,1,0,0.0,0
917,40,val,"Give me the child of Kekūanāoʻa and parent of the child, that is a royalty, of the mayor of Hawaiian Kingdom and child of Kekūanāoʻa.","SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?result <http://dbpedia.org/ontology/child> ?v1 . ?v1 <http://dbpedia.org/property/father> ?v3 . ?result <http://dbpedia.org/ontology/parent> <http://dbpedia.org/resource/Kekūanāoʻa> . <http://dbpedia.org/resource/Hawaiian_Kingdom> <http://dbpedia.org/property/leader> ?v3 . ?result <http://dbpedia.org/property/father> ""Kekūanāoʻa""@en . }","```sparql
SELECT ?child ?parent WHERE {
  # Find Kekūanāoʻa and his children
  ?kekuanaoa dbo:spouseOrPartner ?partner .
  ?kekuanaoa rdfs:label ""Kekūanāoʻa""@en .
  
  OPTIONAL { 
    ?kekuanaoa dbo:child ?child .
  }
  
  # Find the parent of the child that is royalty
  OPTIONAL {
    ?child dbo:parent ?parent .
    FILTER (regex(str(?child), ""royalty"", ""i""))
  }

  # Identify the mayor of the Hawaiian Kingdom and their royal child
  OPTIONAL {
    ?mayor dbo:positionTitle ""Mayor""@en ;
           dbo:country dbr:Hawaiian_Kingdom ;
           dbo:child ?royalChild .
    
    FILTER (regex(str(?royalChild), ""royalty"", ""i""))
  }
  
  # Ensure the child is connected to both Kekūanāoʻa and the mayor
  FILTER (?child = ?royalChild)
}
```",5,6,6,3,3,3,3,71,0,0,2,0,0.0,0
839,51,val,"Give me the band of the member of Böhse Onkelz and band of the band, that is a musical artist, of the professional in Musician.","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/bandMember> ?v2 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. <http://dbpedia.org/resource/Böhse_Onkelz> <http://dbpedia.org/ontology/bandMember> ?v4 . ?result <http://dbpedia.org/ontology/bandMember> ?v4 . ?v1 <http://dbpedia.org/property/occupation> ""Musician""@en . ?v1 <http://dbpedia.org/ontology/associatedMusicalArtist> ?v2 . }","```sparql
SELECT ?memberBand ?musicianBand WHERE {
  # Find a member of Böhse Onkelz and their band
  ?onkelzMember dbo:band dbr:Böhse_Onkelz .
  ?onkelzMember dbo:associatedBand ?memberBand .

  # Find a professional musician and their band
  ?musician rdf:type dbo:Musician .
  ?musician dbo:associatedBand ?musicianBand .
}
```",5,6,6,3,2,3,3,71,0,0,1,0,0.0,0
865,43,val,"Give me the native of British Raj and father of Shahla Khatun and father of the child, that is a politician, of the spouse of Syeda Shahar Banu.",SELECT ?result WHERE { <http://dbpedia.org/resource/Syeda_Shahar_Banu> <http://dbpedia.org/ontology/spouse> ?v1 . ?result <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/British_Raj> . ?v3 <http://dbpedia.org/property/father> ?result . ?v3 <http://dbpedia.org/property/father> ?v1 . <http://dbpedia.org/resource/Shahla_Khatun> <http://dbpedia.org/property/father> ?result . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. },"```sparql
SELECT ?father WHERE {
  # Find Shahla Khatun and her father
  ?shahla dbo:parent ?father .
  ?shahla rdfs:label ""Shahla Khatun""@en .

  # Ensure the father is a native of British Raj
  OPTIONAL { 
    ?father dbo:nativePlace dbr:British_Raj .
  }

  # Find spouse of Syeda Shahar Banu and their child who is a politician
  OPTIONAL {
    ?syedaShaharBanu dbo:spouse ?spouse .
    ?syedaShaharBanu rdfs:label ""Syeda Shahar Banu""@en .
    
    ?child dbo:parent ?spouse .
    ?child dbo:occupation dbr:Politician .

    # Ensure the father of this child is the same as Shahla Khatun's father
    ?child dbo:parent ?father .
  }
}
```",5,6,6,3,3,3,3,71,0,0,1,0,0.0,0
976,53,val,"Give me the office of the person born as Mehmet Naci Bostancı and office of the leader, that is a politician, of the administration, that is an organisation, of Kemal Kılıçdaroğlu and office of Meral Akşener.","SELECT ?result WHERE { ?v3 <http://dbpedia.org/property/leader> <http://dbpedia.org/resource/Kemal_Kılıçdaroğlu> . ?v0 <http://dbpedia.org/property/office> ?result . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. <http://dbpedia.org/resource/Meral_Akşener> <http://dbpedia.org/property/office> ?result . ?v3 <http://dbpedia.org/ontology/leader> ?v1 . ?v1 <http://dbpedia.org/property/office> ?result . ?v0 <http://dbpedia.org/property/birthName> ""Mehmet Naci Bostancı""@en . }","```sparql
SELECT ?bostanciOffice ?kılıcdarogluLeaderOffice ?akserenOffice WHERE {
  # Office of Mehmet Naci Bostancı
  ?bostanci dbo:office ?bostanciOffice .
  ?bostanci rdfs:label ""Mehmet Naci Bostancı""@en .

  # Administration (organization) led by Kemal Kılıçdaroğlu and its leader's office
  ?kılıcdaroglu dbo:leaderOfOrganization ?administration .
  ?kılıcdaroglu rdfs:label ""Kemal Kılıçdaroğlu""@en .
  
  OPTIONAL {
    ?administration dbo:leader ?leader .
    ?leader rdf:type dbo:Politician .
    ?leader dbo:office ?kılıcdarogluLeaderOffice .
  }

  # Office of Meral Akşener
  ?akseren dbo:office ?akserenOffice .
  ?akseren rdfs:label ""Meral Akşener""@en .
}
```",6,8,7,3,3,3,3,71,0,0,1,0,0.0,0
926,54,val,Give me the successor of the child of the spouse of Şermi Kadın and father of the father of Abdulaziz and child of Ahmed III.,SELECT ?result WHERE { <http://dbpedia.org/resource/Ahmed_III> <http://dbpedia.org/ontology/child> ?result . ?v4 <http://dbpedia.org/ontology/successor> ?result . ?v1 <http://dbpedia.org/ontology/spouse> <http://dbpedia.org/resource/Şermi_Kadın> . ?v2 <http://dbpedia.org/property/father> ?result . <http://dbpedia.org/resource/Abdulaziz> <http://dbpedia.org/property/father> ?v2 . ?v4 <http://dbpedia.org/property/father> ?v1 . },"```sparql
SELECT ?successor WHERE {
  # Step 1: Find Şermi Kadın's spouse
  ?sermiKadin dbo:spouse ?spouse .
  ?sermiKadin rdfs:label ""Şermi Kadın""@en .

  # Step 2: Find the child of Şermi Kadın's spouse
  OPTIONAL { 
    ?spouse dbo:child ?childOfSpouse .
  }

  # Step 3: Identify Abdulaziz and his father, then his grandfather
  ?abdulaziz rdfs:label ""Abdülaziz""@en .
  ?abdulaziz dbo:parent ?fatherOfAbdulaziz .
  OPTIONAL {
    ?fatherOfAbdulaziz dbo:parent ?grandfatherOfAbdulaziz .
  }

  # Step 4: Identify Ahmed III
  ?ahmedIII rdfs:label ""Ahmed III""@en .

  # Step 5: Find a child of Ahmed III
  OPTIONAL {
    ?ahmedIII dbo:child ?childOfAhmedIII .
  }

  # Step 6: Determine the successor of the individual who is both:
  # - The child of Şermi Kadın's spouse
  # - The father of Abdulaziz's grandfather
  # - A child of Ahmed III

  OPTIONAL {
    FILTER (?childOfSpouse = ?fatherOfAbdulaziz && ?fatherOfAbdulaziz = ?grandfatherOfAbdulaziz)
    FILTER (?childOfAhmedIII = ?childOfSpouse)
    
    ?childOfSpouse dbo:successor ?successor .
  }
}
```",6,6,7,3,3,3,3,71,0,0,1,0,0.0,0
715,49,val,"Give me the commander in the force, that is a military conflict, of Abd el-Krim and leader of the office, that is a government agency and an organisation, of the reference to Carlos Franco Iribarnegaray.","SELECT ?result WHERE { ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v0 <http://dbpedia.org/property/office> ?v1 . ?v2 <http://dbpedia.org/ontology/commander> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/GovernmentAgency>. ?v1 <http://dbpedia.org/ontology/leader> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?v0 <http://xmlns.com/foaf/0.1/name> ""Carlos Franco Iribarnegaray""@en . ?v2 <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Abd_el-Krim> . }","```sparql
SELECT ?conflict ?agency WHERE {
  # Find the military conflict where Abd el-Krim was a commander
  ?abdElKrim dbo:commander ?conflict .
  ?abdElKrim rdfs:label ""Abd el-Krim""@en .

  # Find the government agency or organization led by Carlos Franco Iribarnegaray
  ?franco dbo:leader ?agency .
  ?franco rdfs:label ""Carlos Franco Iribarnegaray""@en .
  
  FILTER (isLiteral(?conflict) && isLiteral(?agency))
}
```",5,8,6,3,2,3,3,71,0,0,1,0,0.0,0
645,52,val,"Give me the military force of the force, that is an event and a military conflict and a societal event, of Francisco Largo Caballero and commander in the force of the commander in Siege of Madrid and leader of Ministry of the Army (Spain).",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/battle> ?v5 . <http://dbpedia.org/resource/Siege_of_Madrid> <http://dbpedia.org/ontology/commander> ?v3 . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?v2 <http://dbpedia.org/ontology/commander> ?v3 . <http://dbpedia.org/resource/Ministry_of_the_Army_(Spain)> <http://dbpedia.org/ontology/leader> ?result . ?v5 <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Francisco_Largo_Caballero> . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v2 <http://dbpedia.org/ontology/commander> ?result . },"```sparql
SELECT ?militaryForce WHERE {
  # Step 1: Find Francisco Largo Caballero's involvement in a military force that is an event, conflict, and societal event
  ?caballero dbo:occupation ""Politician""@en .
  ?caballero rdfs:label ""Francisco Largo Caballero""@en .
  
  # The military force associated with Francisco Largo Caballero
  ?militaryForce dbo:member ?caballero ;
                 a dbo:MilitaryConflict, dbo:Event, dbo:SocietalEvent .

  # Step 2: Find the commander in the Siege of Madrid related to Francisco Largo Caballero
  ?siege dbo:commander ?commander .
  ?siege rdfs:label ""Siege of Madrid""@en .
  
  # Ensure this commander is linked with Francisco Largo Caballero
  ?caballero dbo:colleague ?commander .

  # Step 3: Identify the leader of the Ministry of the Army (Spain)
  ?ministryLeader dbo:position ""Minister of War""@en ;
                  dbo:memberOf ?militaryForce .
  
  # Ensure this leader is also the commander in the Siege of Madrid
  FILTER (?commander = ?ministryLeader)

}
```",6,9,7,3,3,3,3,71,0,0,1,0,0.0,0
978,16,val,"Give me the band member of the person born as Nicholas Bracegirdle and band member of the professional, that is a musical artist and an artist, in .","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/associatedMusicalArtist> ?v3 . ?v3 <http://dbpedia.org/property/birthName> ""Nicholas Bracegirdle""@en . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. ?result <http://dbpedia.org/ontology/associatedMusicalArtist> ?v2 . ?v2 <http://dbpedia.org/property/occupation> """"@en . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. }","```sparql
# Query for Nicholas Bracegirdle's band member
SELECT ?band WHERE {
  ?person dbo:birthName ""Nicholas Bracegirdle""@en .
  ?person dbo:memberOfBand ?band .
}

# Query for a professional who is both a musical artist and an artist
SELECT ?artist ?band WHERE {
  ?artist rdf:type dbo:MusicalArtist ;
          dbo:occupation ""Artist""@en .
  ?artist dbo:memberOfBand ?band .
}
```",4,6,5,2,2,3,2,20,0,0,2,0,0.0,0
926,52,val,Give me the child of Ahmed III and successor of the child of Ahmed III and father of the father of the spouse of Neşerek Kadın.,SELECT ?result WHERE { ?v4 <http://dbpedia.org/ontology/successor> ?result . ?v4 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Ahmed_III> . <http://dbpedia.org/resource/Ahmed_III> <http://dbpedia.org/ontology/child> ?result . ?v1 <http://dbpedia.org/property/father> ?result . ?v3 <http://dbpedia.org/property/father> ?v1 . <http://dbpedia.org/resource/Neşerek_Kadın> <http://dbpedia.org/ontology/spouse> ?v3 . },"```sparql
SELECT ?finalAnswer WHERE {
  # Step 1: Find a child of Ahmed III
  ?child dbo:parent ?ahmedIII .
  ?ahmedIII rdfs:label ""Ahmed III""@en .

  # Step 2: Find the successor of this child
  OPTIONAL { 
    ?successor dbo:succeededBy ?child .
  }

  # Step 3: Identify spouse of Neşerek Kadın
  ?neserekKadin dbo:spouse ?spouse .
  ?neserekKadin rdfs:label ""Neşerek Kadın""@en .

  # Step 4: Find the father of this spouse
  OPTIONAL {
    ?spouse dbo:parent ?fatherOfSpouse .
  }

  # Step 5: Find the father of the father identified in step 4
  OPTIONAL {
    ?fatherOfFather dbo:child ?fatherOfSpouse .
  }

  # Final condition to match the successor's father with the father found in step 5
  FILTER (?successor = ?finalAnswer)
}
```",6,6,7,3,3,3,3,71,0,0,1,0,0.0,0
273,17,val,Give me the spouse of Edoardo Agnelli (industrialist) and parent of the alumnus of the reference to Università degli Studi di Torino.,"SELECT ?result WHERE { ?v3 <http://dbpedia.org/ontology/almaMater> ?v0 . ?result <http://dbpedia.org/ontology/spouse> <http://dbpedia.org/resource/Edoardo_Agnelli_(industrialist)> . ?v0 <http://xmlns.com/foaf/0.1/name> ""Università degli Studi di Torino""@en . ?v3 <http://dbpedia.org/ontology/parent> ?result . }","```sparql
SELECT ?spouse WHERE {
  # Find Edoardo Agnlli and his spouse
  ?edoardo dbo:spouse ?spouse .
  ?edoardo rdfs:label ""Edoardo Agnelli (industrialist)""@en .

  # Check if the spouse is a parent of an alumnus from Università degli Studi di Torino
  OPTIONAL {
    ?alumnus dbo:almaMater <http://dbpedia.org/resource/Universit%C3%A0_degli_Studi_di_Torino> .
    ?spouse dbo:parent ?alumnus .
  }
}
```",4,4,5,3,2,3,2,20,0,0,1,0,0.0,0
976,40,val,"Give me the office of Naci Bostancı and office of the leader, that is a politician, of the administration, that is an organisation, of Kemal Kılıçdaroğlu and office of Meral Akşener.",SELECT ?result WHERE { ?v1 <http://dbpedia.org/property/office> ?result . <http://dbpedia.org/resource/Meral_Akşener> <http://dbpedia.org/property/office> ?result . <http://dbpedia.org/resource/Naci_Bostancı> <http://dbpedia.org/property/office> ?result . ?v3 <http://dbpedia.org/property/leader> <http://dbpedia.org/resource/Kemal_Kılıçdaroğlu> . ?v3 <http://dbpedia.org/ontology/leader> ?v1 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. },"```sparql
SELECT ?naciOffice ?kemalLeaderOffice ?meralOffice WHERE {
  # Office of Naci Bostancı
  ?naci dbo:office ?naciOffice .
  ?naci rdfs:label ""Naci Bostancı""@en .

  # Administration associated with Kemal Kılıçdaroğlu and his office as a politician
  ?kemal dbo:memberOf ?administration .
  ?kemal rdfs:label ""Kemal Kılıçdaroğlu""@en .
  ?administration rdf:type dbo:Organization .
  ?kemal dbo:occupation ?politicianRole .
  FILTER (regex(str(?politicianRole), ""Politician"", ""i""))

  # Leader's office within the administration
  ?leader dbo:office ?kemalLeaderOffice .
  ?leader dbo:memberOf ?administration .
  ?leader rdfs:label ""Kemal Kılıçdaroğlu""@en .

  # Office of Meral Akşener
  ?meral dbo:office ?meralOffice .
  ?meral rdfs:label ""Meral Akşener""@en .
}
```",5,7,6,3,3,3,3,71,0,0,1,0,0.0,0
917,51,val,"Give me the child of the father of the child, that is a royalty, of Kamehameha III and child of the father of Keʻelikōlani.",SELECT ?result WHERE { <http://dbpedia.org/resource/Keʻelikōlani> <http://dbpedia.org/property/father> ?v4 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v3 <http://dbpedia.org/property/father> ?v0 . ?result <http://dbpedia.org/ontology/parent> ?v4 . ?result <http://dbpedia.org/property/father> ?v0 . <http://dbpedia.org/resource/Kamehameha_III> <http://dbpedia.org/ontology/child> ?v3 . },"```sparql
SELECT ?commonChild WHERE {
  # Find a royal child of Kamehameha III
  ?kamehamehaIII dbo:child ?royalChild .
  ?kamehamehaIII rdfs:label ""Kamehameha III""@en .
  
  # Ensure the child is royalty (e.g., by checking if they have a royal title)
  OPTIONAL { 
    ?royalChild dbo:title ?title .
    FILTER regex(str(?title), ""King|Queen|Princess"", ""i"")
  }
  
  # Find the father of this royal child
  ?royalChild dbo:parent ?fatherOfRoyalChild .

  # Find the child of that father
  ?fatherOfRoyalChild dbo:child ?commonChild .
  
  # Find Keʻelikōlani and her father
  ?keelikolani dbo:parent ?fatherOfKeelikolani .
  ?keelikolani rdfs:label ""Keʻelikōlani""@en .

  # Find the child of Keʻelikōlani's father
  ?fatherOfKeelikolani dbo:child ?commonChild .
}
```",5,6,6,3,2,3,3,71,3,3,0,0.5,1.0,0.6666666666666666
935,15,val,"Give me the headquarter of Provincial Assembly of Balochistan and death place of the awardee of the award, that is an award, of Syed Sohail Hussain Naqvi.",SELECT ?result WHERE { ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Award>. ?v1 <http://dbpedia.org/ontology/deathPlace> ?result . ?v1 <http://dbpedia.org/property/awards> ?v0 . <http://dbpedia.org/resource/Provincial_Assembly_of_Balochistan> <http://dbpedia.org/ontology/location> ?result . <http://dbpedia.org/resource/Syed_Sohail_Hussain_Naqvi> <http://dbpedia.org/property/awards> ?v0 . },"```sparql
SELECT ?headquarter ?deathPlace WHERE {
  # Find the headquarter of Provincial Assembly of Balochistan
  ?assembly dbo:location ?headquarter .
  ?assembly rdfs:label ""Provincial Assembly of Balochistan""@en .

  # Identify Syed Sohail Hussain Naqvi and his award
  ?naqvi dbo:awardReceived ?award .
  ?naqvi rdfs:label ""Syed Sohail Hussain Naqvi""@en .

  # Find other awardees of the same award and their death place
  OPTIONAL {
    ?otherAwardee dbo:awardReceived ?award .
    ?otherAwardee dbo:deathPlace ?deathPlace .
  }
}
```",4,5,5,3,2,3,2,20,0,0,1,0,0.0,0
507,49,val,Give me the spouse of the person born as Anne Voase Coates and professional in the profession of the person born on 1966-02-18.,"SELECT ?result WHERE { ?v0 <http://dbpedia.org/ontology/birthDate> ""1966-02-18""^^<http://www.w3.org/2001/XMLSchema#date> . ?v0 <http://dbpedia.org/property/occupation> ?v1 . ?result <http://dbpedia.org/property/occupation> ?v1 . ?v2 <http://dbpedia.org/property/birthName> ""Anne Voase Coates""@en . ?result <http://dbpedia.org/ontology/spouse> ?v2 . }","```sparql
SELECT ?spouse ?sameProfessionPerson WHERE {
  # Find Anne Voase Coates and her spouse
  ?anneVoaseCoates dbo:birthName ""Anne Voase Coates""@en .
  ?anneVoaseCoates dbo:spouse ?spouse .

  # Find the person born on 1966-02-18 and their profession
  ?person dbo:birthday ""1966-02-18""^^xsd:date ;
          dbo:profession ?profession .

  # Check if Anne Voase Coates's spouse has the same profession as the person born in 1966-02-18
  OPTIONAL {
    ?spouse dbo:profession ?sameProfession .
    FILTER (?sameProfession = ?profession)
  }

  # Return the spouse and the person with the same profession
  BIND(?person AS ?sameProfessionPerson)
}
```",5,5,6,3,2,3,3,71,0,0,1,0,0.0,0
976,51,val,"Give me the office of the mayor, that is a politician and an office holder and Turkish, of Nation Alliance (Turkey) and office of the person born as the birth name of Naci Bostancı.",SELECT ?result WHERE { ?v0 <http://dbpedia.org/property/office> ?result . <http://dbpedia.org/resource/Nation_Alliance_(Turkey)> <http://dbpedia.org/property/leader> ?v4 . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v4 <http://dbpedia.org/ontology/nationality> <http://dbpedia.org/resource/Turkey>. ?v0 <http://dbpedia.org/property/birthName> ?v3 . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v4 <http://dbpedia.org/property/office> ?result . <http://dbpedia.org/resource/Naci_Bostancı> <http://dbpedia.org/property/birthName> ?v3 . },"```sparql
SELECT ?birthName ?office ?mayorOffice WHERE {
  # Find Naci Bostancı and his birth name
  ?naciBostanci dbo:birthName ?birthName .
  ?naciBostanci rdfs:label ""Naci Bostancı""@en .

  # Find the office held by Naci Bostancı
  ?naciBostanci dbo:office ?office .
  
  # Identify a Turkish politician and office holder in Nation Alliance (Turkey)
  ?politician dbo:nationality dbr:Turkey ;
              dbo:party dbr:Nation_Alliance_(Turkey) ;
              rdf:type dbo:Politician ;
              dbo:office ?mayorOffice .

  # Ensure the office is that of a mayor
  FILTER regex(str(?mayorOffice), ""Mayor"", ""i"")
}
```",5,8,6,3,2,3,3,71,0,0,1,0,0.0,0
917,50,val,"Give me the child of the father of Kamehameha IV and child of the father of the spouse, that is a royalty, of Leleiohoku I.",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/parent> ?v3 . ?result <http://dbpedia.org/property/father> ?v0 . ?v1 <http://dbpedia.org/property/father> ?v3 . <http://dbpedia.org/resource/Kamehameha_IV> <http://dbpedia.org/property/father> ?v0 . ?v1 <http://dbpedia.org/ontology/spouse> <http://dbpedia.org/resource/Leleiohoku_I> . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. },"```sparql
SELECT ?child1 ?child2 WHERE {
  # Find Kamehameha IV and his father
  ?kamehamehaIV dbo:parent ?fatherKamehameha .
  ?kamehamehaIV rdfs:label ""Kamehameha IV""@en .

  # Find a child of the father of Kamehameha IV (i.e., sibling)
  ?child1 dbo:parent ?fatherKamehameha .
  FILTER (?child1 != ?kamehamehaIV)

  # Find Leleiohoku I and his royal spouse
  ?leleiohokuI dbo:spouse ?royalSpouse .
  ?leleiohokuI rdfs:label ""Leleiohoku I""@en .

  # Ensure the spouse is royalty (e.g., Queen Emma)
  FILTER (regex(str(?royalSpouse), ""Queen Emma"", ""i""))

  # Find the father of this royal spouse
  ?royalSpouse dbo:parent ?fatherRoyalSpouse .

  # Find a child of the father of the royal spouse
  ?child2 dbo:parent ?fatherRoyalSpouse .
}
```",5,6,6,3,2,3,3,71,0,0,3,0,0.0,0
329,21,val,"Give me the entity in the birthplace, that is an organisation and a country, of Robert Bates (loyalist) and entity in United Kingdom and birthplace of Eric Cross (writer).",SELECT ?result WHERE { ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. <http://dbpedia.org/resource/Robert_Bates_(loyalist)> <http://dbpedia.org/ontology/birthPlace> ?v0 . ?result <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/United_Kingdom> . <http://dbpedia.org/resource/Eric_Cross_(writer)> <http://dbpedia.org/ontology/birthPlace> ?result . ?result <http://dbpedia.org/ontology/country> ?v0 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. },"```sparql
SELECT ?batesOrg ?batesCountry ?crossEntity ?crossBirthPlace WHERE {
  # Find Robert Bates (loyalist) and his birthplace
  ?bates dbo:birthPlace ?birthPlace .
  ?bates rdfs:label ""Robert Bates (loyalist)""@en .

  # From the birthplace, find an organization and a country
  OPTIONAL { 
    ?birthPlace dbo:organization ?batesOrg .
  }
  OPTIONAL {
    ?birthPlace dbp:country ?batesCountry .
  }

  # Find Eric Cross (writer) and his related entity in the UK
  ?cross dbo:birthPlace ?crossBirthPlace .
  ?cross rdfs:label ""Eric Cross (writer)""@en .

  OPTIONAL {
    ?ukEntity dbo:birthPlace ?crossBirthPlace .
    ?ukEntity dbp:country dbc:""United Kingdom""@en .
  }
}
```",4,6,5,2,3,2,3,28,0,0,1,0,0.0,0
36,23,val,"Give me the actor of the claim to fame, that is a film, of Lepacious Bose and person born as the birth name of Ayo Makun.",SELECT ?result WHERE { ?v3 <http://dbpedia.org/ontology/starring> ?result . ?result <http://dbpedia.org/property/birthName> ?v1 . <http://dbpedia.org/resource/Ayo_Makun> <http://dbpedia.org/property/birthName> ?v1 . <http://dbpedia.org/resource/Lepacious_Bose> <http://dbpedia.org/ontology/knownFor> ?v3 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Film>. },"```sparql
SELECT ?actor WHERE {
  # Step 1: Identify Lepa Bose's claim to fame (film)
  ?lepaBose dbo:claimToFame ?film .
  ?lepaBose rdfs:label ""Lepa Bose""@en .

  # Step 2: Determine Ayo Makun's birth name
  ?ayoMakun dbo:birthName ?birthName .
  ?ayoMakun rdfs:label ""Ayo Makun""@en .

  # Step 3: Find the actor in the film associated with Lepa Bose
  ?film dbo:actor ?actor .
  
  FILTER (?birthName = ""Ayoola Makun"")
}
```",4,5,5,2,2,2,3,28,0,0,1,0,0.0,0
445,45,val,Give me the entity in England and death place of Patrick Moore and entity in the award of the commander in Battle of Saint-Mihiel.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/country> ?v1 . ?v0 <http://dbpedia.org/property/awards> ?v1 . ?result <http://dbpedia.org/ontology/location> <http://dbpedia.org/resource/England> . <http://dbpedia.org/resource/Battle_of_Saint-Mihiel> <http://dbpedia.org/ontology/commander> ?v0 . <http://dbpedia.org/resource/Patrick_Moore> <http://dbpedia.org/ontology/deathPlace> ?result . },"```sparql
# Query for entity in England related to Patrick Moore
SELECT ?entity WHERE {
  ?moore dbo:birthPlace ?place .
  ?moore rdfs:label ""Patrick Moore""@en .
  ?place dbp:country ""England"" .
}

# Query for death place of Patrick Moore
SELECT ?deathPlace WHERE {
  ?moore dbo:deathPlace ?deathPlace .
  ?moore rdfs:label ""Patrick Moore""@en .
}

# Query for entity in the award of the commander in Battle of Saint-Mihiel
SELECT ?award WHERE {
  ?battle dbp:name ""Battle of Saint-Mihiel"" .
  ?commander dbo:participatedIn ?battle .
  ?commander dbo:receivedAward ?award .
}
```",5,5,6,3,3,3,3,71,0,0,1,0,0.0,0
839,55,val,"Give me the band of the band, that is a musical artist, of Charlie Huhn and band of the person born, that is a musical artist, as Kevin Richard Russell and band of the member of Böhse Onkelz.","SELECT ?result WHERE { ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?v3 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v3 <http://dbpedia.org/property/birthName> ""Kevin Richard Russell""@en . ?result <http://dbpedia.org/ontology/bandMember> ?v5 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. <http://dbpedia.org/resource/Charlie_Huhn> <http://dbpedia.org/ontology/associatedMusicalArtist> ?v2 . ?result <http://dbpedia.org/ontology/bandMember> ?v2 . <http://dbpedia.org/resource/Böhse_Onkelz> <http://dbpedia.org/ontology/bandMember> ?v5 . }","```sparql
# Query for Charlie Huhn's band
SELECT ?charlieHuhnBand WHERE {
  ?charlieHuhn dbo:band ?charlieHuhnBand .
  ?charlieHuhn rdfs:label ""Charlie Huhn""@en .
}

UNION

# Query for the person born as Kevin Richard Russell and their band
SELECT ?kevinRichardRussellBand WHERE {
  ?person foaf:name ?name .
  ?person dbo:birthName ""Kevin Richard Russell"" .
  ?person dbo:band ?kevinRichardRussellBand .
  FILTER (regex(str(?name), ""Meat Loaf"", ""i""))
}

UNION

# Query for a member of Böhse Onkelz and their band
SELECT ?boehseOnkelzMemberBand WHERE {
  ?member dbo:memberOf ?band .
  ?band rdfs:label ""Böhse Onkelz""@en .
  ?member dbo:band ?boehseOnkelzMemberBand .
}
```",6,8,7,2,3,3,3,71,0,0,1,0,0.0,0
573,40,val,"Give me the parent of John Quincy Adams and person decedent at Quincy, Massachusetts and person decedent at the administration, that is a region, of the real name of Charlie Baker (Australian footballer).","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/deathPlace> <http://dbpedia.org/resource/Quincy,_Massachusetts> . <http://dbpedia.org/resource/John_Quincy_Adams> <http://dbpedia.org/ontology/parent> ?result . <http://dbpedia.org/resource/Charlie_Baker_(Australian_footballer)> <http://xmlns.com/foaf/0.1/name> ?v2 . ?result <http://dbpedia.org/ontology/deathPlace> ?v1 . ?v1 <http://dbpedia.org/property/governor> ?v2 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Region>. }","```sparql
SELECT ?parent ?decedentQuincy ?decedentRegion WHERE {
  # Find parent of John Quincy Adams
  ?johnQuincyAdams dbo:parent ?parent .
  ?johnQuincyAdams rdfs:label ""John Quincy Adams""@en .

  # Find person decedent at Quincy, Massachusetts
  OPTIONAL {
    ?personDecedent dbo:deathPlace ?quincyLocation .
    ?quincyLocation rdfs:label ""Quincy, Massachusetts""@en .
    ?personDecedent dbo:deathDate ?date .
    BIND(?personDecedent AS ?decedentQuincy)
  }

  # Find Charlie Baker's real name and associated region
  OPTIONAL {
    ?charlieBaker foaf:name ?realName .
    ?charlieBaker rdfs:label ""Charlie Baker (Australian footballer)""@en .

    # Assuming the real name is linked to a region via some property, e.g., dbo:birthPlace or similar
    ?region dbo:administrativeRegionOf ?realName .
    ?personDecedent2 dbo:deathPlace ?region .
    BIND(?personDecedent2 AS ?decedentRegion)
  }
}
```",5,6,6,3,3,3,3,71,2,34,0,0.05555555555555555,1.0,0.10526315789473684
456,50,val,"Give me the band of the band, that is a musical artist, of Dean Brody and professional in the alter ego of the reference, that is a fictional character, to Lamont Cranston (radio, film and television).","SELECT ?result WHERE { ?v0 <http://xmlns.com/foaf/0.1/name> ""Lamont Cranston (radio, film and television)""@en . <http://dbpedia.org/resource/Dean_Brody> <http://dbpedia.org/ontology/associatedMusicalArtist> ?v3 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?result <http://dbpedia.org/property/occupation> ?v4 . ?v0 <http://dbpedia.org/property/alterEgo> ?v4 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/FictionalCharacter>. ?v3 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . }","```sparql
SELECT ?band WHERE {
  # Find Dean Brody's band
  ?deanBrody dbo:associatedBand ?band .
  ?deanBrody rdfs:label ""Dean Brody""@en .

  # Identify Lamont Cranston's alter ego, The Shadow
  OPTIONAL {
    ?lamontCranston dbo:alterEgo ?shadow .
    ?lamontCranston rdfs:label ""Lamont Cranston""@en .
    FILTER (regex(str(?shadow), ""The Shadow"", ""i""))
  }

  # Find the band associated with The Shadow
  OPTIONAL {
    ?shadow dbo:associatedBand ?band .
    FILTER (regex(str(?shadow), ""The Shadow"", ""i""))
  }
}
```",5,7,6,3,2,3,3,71,0,2,1,0.0,0.0,0
573,46,val,"Give me the person decedent at the residence, that is a settlement, of William J. Phelan and person decedent at the administration, that is a region, of the real name of Charlie Baker (Australian footballer).",SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Region>. <http://dbpedia.org/resource/Charlie_Baker_(Australian_footballer)> <http://xmlns.com/foaf/0.1/name> ?v2 . ?v1 <http://dbpedia.org/property/governor> ?v2 . <http://dbpedia.org/resource/William_J._Phelan> <http://dbpedia.org/property/residence> ?v4 . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. ?result <http://dbpedia.org/ontology/deathPlace> ?v4 . ?result <http://dbpedia.org/ontology/deathPlace> ?v1 . },"```sparql
SELECT ?decedentAtResidence ?decedentAtAAdmin WHERE {
  # Find William J. Phelan's residence and ensure it is a settlement
  ?phelan dbo:residence ?residence .
  ?residence rdf:type dbo:Settlement .
  ?phelan rdfs:label ""William J. Phelan""@en .

  # Find the person who died at this residence
  ?decedentAtResidence dbo:deathPlace ?residence .

  # Find Charlie Baker's real name and administrative region, ensuring it is a region
  ?baker foaf:name ?realName .
  ?baker rdfs:label ""Charlie Baker (Australian footballer)""@en .
  ?baker dbo:administrativeRegion ?adminRegion .
  ?adminRegion rdf:type dbo:AdministrativeRegion .

  # Find the person who died at this administrative region
  ?decedentAtAAdmin dbo:deathPlace ?adminRegion .
}
```",5,7,6,3,2,3,3,71,0,0,4,0,0.0,0
579,15,val,"Give me the native of the residence, that is English and a settlement, of the resident of Scotland and person born as Isobel Jane Miller Richard.","SELECT ?result WHERE { ?result <http://dbpedia.org/property/birthName> ""Isobel Jane Miller Richard""@en . ?result <http://dbpedia.org/ontology/birthPlace> ?v1 . ?v0 <http://dbpedia.org/property/residence> ?v1 . ?v0 <http://dbpedia.org/ontology/residence> <http://dbpedia.org/resource/Scotland> . ?v1 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/United_Kingdom>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. }","```sparql
SELECT ?native WHERE {
  # Step 1: Identify Isobel Jane Miller Richard
  ?isobel a dbo:Person ;
          foaf:name ""Isobel Jane Miller Richard""@en ;
          dbo:residence ?scotlandResidence .

  # Step 2: Find her residence in Scotland
  ?scotlandResidence dbo:country dbr:Scotland .

  # Step 3: Identify an English settlement related to this Scottish residence
  OPTIONAL {
    ?relatedSettlement dbo:relatedPlace ?scotlandResidence ;
                      dbo:country dbr:England .
  }

  # Step 4: Find the native of that English settlement
  ?native dbo:nativePlace ?relatedSettlement ;
          a dbo:Person .
}
```",4,6,5,3,2,3,2,20,0,0,1,0,0.0,0
826,45,val,"Give me the successor of Louis II, Grand Duke of Hesse and spouse of Anna Magdalena Appel and predecessor of the parent of the child of Louis IV, Grand Duke of Hesse.","SELECT ?result WHERE { ?v0 <http://dbpedia.org/ontology/parent> <http://dbpedia.org/resource/Louis_IV,_Grand_Duke_of_Hesse> . ?result <http://dbpedia.org/ontology/successor> ?v1 . <http://dbpedia.org/resource/Louis_II,_Grand_Duke_of_Hesse> <http://dbpedia.org/ontology/successor> ?result . <http://dbpedia.org/resource/Anna_Magdalena_Appel> <http://dbpedia.org/ontology/spouse> ?result . ?v0 <http://dbpedia.org/ontology/parent> ?v1 . }","```sparql
SELECT ?successor WHERE {
  # Find Louis II, Grand Duke of Hesse and his successor
  ?louisII dbo:successor ?successor .
  ?louisII rdfs:label ""Louis II, Grand Duke of Hesse""@en .

  # Ensure Anna Magdalena Appel is the spouse of Louis II
  OPTIONAL {
    ?annaMagdalena dbo:spouse ?louisII .
    ?annaMagdalena rdfs:label ""Anna Magdalena Appel""@en .
  }

  # Find a child of Louis IV and identify his parent (Louis IV)
  OPTIONAL {
    ?child dbo:parent ?louisIV .
    ?louisIV rdfs:label ""Louis IV, Grand Duke of Hesse""@en .
  }

  # Determine the predecessor of Louis IV
  ?louisIV dbo:predecessor ?predecessor .
}
```",5,5,6,3,3,3,3,71,1,0,0,1.0,1.0,1.0
892,47,val,Give me the entity in the profession of Henri Crolla and landmark at elevation of the award of the member of E-girls.,SELECT ?result WHERE { <http://dbpedia.org/resource/E-girls> <http://dbpedia.org/ontology/bandMember> ?v0 . ?result <http://dbpedia.org/ontology/elevation> ?v3 . ?result <http://dbpedia.org/ontology/country> ?v1 . <http://dbpedia.org/resource/Henri_Crolla> <http://dbpedia.org/property/occupation> ?v1 . ?v0 <http://dbpedia.org/property/awards> ?v3 . },"```sparql
# Part 1: Find Henri Crolla's profession
SELECT ?profession WHERE {
  ?person rdfs:label ""Henri Crolla""@en .
  ?person dbo:occupation ?profession .
}

UNION

# Part 2: Find a landmark at the elevation of an award received by a member of E-girls
SELECT ?landmark WHERE {
  # Identify a member of E-girls and their awards
  ?member rdfs:label ""E-girls""@en ;
          dbo:awardReceived ?award .
  
  # Get the elevation associated with the award (assuming such data exists)
  ?award dbo:elevation ?elevation .

  # Find a landmark at this elevation
  ?landmark dbo:elevation ?elevation ;
            rdf:type dbo:Lighthouse .
}
```",5,5,6,3,2,3,3,71,0,0,11,0,0.0,0
826,47,val,"Give me the spouse of the child of Johann Heinrich Appel and successor of the child, that is a royalty, of the reference, that is a royalty, to Louis I.","SELECT ?result WHERE { ?v2 <http://dbpedia.org/property/father> ""Johann Heinrich Appel""@en . ?v0 <http://xmlns.com/foaf/0.1/name> ""Louis I""@en . ?v4 <http://dbpedia.org/ontology/successor> ?result . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v0 <http://dbpedia.org/ontology/child> ?v4 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v2 <http://dbpedia.org/ontology/spouse> ?result . }","```sparql
SELECT ?spouse WHERE {
  # Find the child of Johann Heinrich Appel
  ?appel dbo:child ?child .
  ?appel rdfs:label ""Johann Heinrich Appel""@en .

  # Find the spouse of this child
  ?child dbo:spouse ?spouse .

  # Identify the successor of this child who is royalty
  OPTIONAL {
    ?successor dbo:succeeds ?child .
    ?successor a dbo:RoyalPerson .
  }

  # Reference to Louis I that is royalty
  OPTIONAL {
    ?reference rdfs:label ""Louis I""@en .
    ?reference a dbo:RoyalPerson .
  }
}
```",5,7,6,3,2,3,3,71,0,0,1,0,0.0,0
791,40,val,"Give me the father of Emperor Go-Toba and predecessor of Emperor Antoku and spouse of the spouse, that is a royalty, of the reference to Emperor Takakura.","SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v2 <http://xmlns.com/foaf/0.1/name> ""Emperor Takakura""@en . ?v1 <http://dbpedia.org/ontology/spouse> ?v2 . ?result <http://dbpedia.org/ontology/successor> <http://dbpedia.org/resource/Emperor_Antoku> . <http://dbpedia.org/resource/Emperor_Go-Toba> <http://dbpedia.org/property/father> ?result . ?result <http://dbpedia.org/ontology/spouse> ?v1 . }","```sparql
SELECT ?fatherGoToba ?predecessorAntoku ?royalSpouseFather WHERE {
  # Find Emperor Go-Toba and his father
  ?goToba dbo:parent ?fatherGoToba .
  ?goToba rdfs:label ""Emperor Go-Toba""@en .

  # Find predecessor of Emperor Antoku
  ?antoku dbo:predecessor ?predecessorAntoku .
  ?antoku rdfs:label ""Emperor Antoku""@en .

  # Find spouse of Emperor Takakura who is royalty
  OPTIONAL {
    ?takakura dbo:spouse ?royalSpouse .
    ?takakura rdfs:label ""Emperor Takakura""@en .
    FILTER (regex(str(?royalSpouse), ""Imperial Princess Shushi"", ""i""))
  }

  # Find father of the royal spouse
  OPTIONAL {
    ?royalSpouse dbo:parent ?royalSpouseFather .
    FILTER (regex(str(?royalSpouse), ""Imperial Princess Shushi"", ""i""))
  }
}
```",5,6,6,3,3,3,3,71,1,0,0,1.0,1.0,1.0
573,54,val,"Give me the person decedent at the administration, that is a region, of Charlie Baker and person decedent at the residence, that is a settlement, of the professional, that is American, in Politician and parent of John Quincy Adams.","SELECT ?result WHERE { ?v0 <http://dbpedia.org/ontology/nationality> <http://dbpedia.org/resource/United_States>. ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. ?result <http://dbpedia.org/ontology/deathPlace> ?v5 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Region>. ?v0 <http://dbpedia.org/property/residence> ?v5 . ?result <http://dbpedia.org/ontology/deathPlace> ?v3 . <http://dbpedia.org/resource/John_Quincy_Adams> <http://dbpedia.org/ontology/parent> ?result . ?v3 <http://dbpedia.org/property/governor> ""Charlie Baker""@en . ?v0 <http://dbpedia.org/property/occupation> ""Politician""@en . }","```sparql
SELECT ?decedentAtAdmin ?decedentAtResidence WHERE {
  # Find Charlie Baker's administration region
  ?charlieBaker dbo:profession ""Politician""@en .
  ?charlieBaker foaf:name ""Charlie Baker""@en .
  ?charlieBaker dbo:administrativeRegion ?adminRegion .

  # Find a decedent at the administration region
  ?decedentAtAdmin dbo:deathDate ?deathDate .
  FILTER (YEAR(?deathDate) != 0)
  ?decedentAtAdmin dbo:location ?adminRegion .

  # Find John Quincy Adams' parent who is an American politician
  ?johnQuincyAdams foaf:name ""John Quincy Adams""@en .
  ?parent dbo:child ?johnQuincyAdams .
  ?parent dbo:nationality dbc:United_States .
  ?parent dbo:profession ""Politician""@en .

  # Find the residence of this American politician
  ?parent dbo:residence ?residenceSettlement .

  # Find a decedent at the residence settlement
  ?decedentAtResidence dbo:deathDate ?deathDate2 .
  FILTER (YEAR(?deathDate2) != 0)
  ?decedentAtResidence dbo:location ?residenceSettlement .
}
```",6,9,7,3,3,3,3,71,0,0,2,0,0.0,0
976,42,val,"Give me the office of the person born as Mehmet Naci Bostancı and office of Meral Akşener and office of the leader, that is a politician, of Grand National Assembly of Turkey.","SELECT ?result WHERE { ?v0 <http://dbpedia.org/property/office> ?result . ?v1 <http://dbpedia.org/property/office> ?result . <http://dbpedia.org/resource/Grand_National_Assembly_of_Turkey> <http://dbpedia.org/ontology/leader> ?v1 . <http://dbpedia.org/resource/Meral_Akşener> <http://dbpedia.org/property/office> ?result . ?v0 <http://dbpedia.org/property/birthName> ""Mehmet Naci Bostancı""@en . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. }","```sparql
SELECT ?bostanciOffice ?akserenOffice ?assemblyLeader ?leaderOffice WHERE {
  # Office of Mehmet Naci Bostancı
  ?bostanci dbo:birthName ""Mehmet Naci Bostancı""@en .
  ?bostanci dbo:office ?bostanciOffice .

  # Office of Meral Akşener
  ?akseren dbo:birthName ""Meral Akşener""@en .
  ?akseren dbo:office ?akserenOffice .

  # Leader of the Grand National Assembly of Turkey and their office
  ?assemblyLeader dbo:position ""Speaker of the Grand National Assembly of Turkey"" ;
                  a dbo:Politician .
  ?assemblyLeader dbo:office ?leaderOffice .
}
```",5,6,6,2,3,3,3,71,0,0,1,0,0.0,0
715,47,val,"Give me the commander in the force of the mayor, that is an office holder and a politician and a president, of 1933 Spanish general election and commander in the force, that is a military conflict, of Abd el-Krim.",SELECT ?result WHERE { ?v4 <http://dbpedia.org/ontology/commander> ?result . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v2 <http://dbpedia.org/ontology/commander> ?result . <http://dbpedia.org/resource/1933_Spanish_general_election> <http://dbpedia.org/property/leader> ?v0 . ?v4 <http://dbpedia.org/ontology/commander> ?v0 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v2 <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Abd_el-Krim> . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/President>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. },"```sparql
SELECT ?commander1 ?commander2 WHERE {
  # Find the mayor who was an office holder, politician, and president during the 1933 Spanish general election
  ?mayor dbo:officeHolder ""Mayor""@en .
  ?mayor dbo:politicalParty ?party .
  ?mayor dbo:presidentOf ?country .
  ?election dbo:date ""1933-04-19""^^xsd:date ;
            dbo:electedOffice ?mayor .
  
  # Find the commander in the force of this mayor
  ?mayor dbo:commanderInForce ?commander1 .

  # Find the military conflict involving Abd el-Krim and its commander in the force
  ?abdElKrim rdfs:label ""Abd el-Krim""@en .
  ?conflict dbo:participated ?abdElKrim ;
            a dbo:MilitaryConflict .
  ?conflict dbo:commanderInForce ?commander2 .
}
```",5,9,6,3,2,3,3,71,0,0,4,0,0.0,0
124,50,val,"Give me the military force of the war, that is an event and a military conflict and a societal event, of the awardee of British South Africa Company Medal and military force of the force, that is a societal event and a military conflict, of Herbert Kitchener, 1st Earl Kitchener.","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/battle> ?v3 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?v0 <http://dbpedia.org/ontology/battle> ?v4 . ?result <http://dbpedia.org/ontology/battle> ?v4 . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v0 <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/British_South_Africa_Company_Medal> . ?v3 <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Herbert_Kitchener,_1st_Earl_Kitchener> . }","```sparql
SELECT ?militaryForceAwardee ?militaryForceKitchener WHERE {
  # Find the awardee of the British South Africa Company Medal
  ?awardee dbo:award ""British South Africa Company Medal"" .
  
  # Identify the war involving this awardee that is a military conflict and societal event
  ?war dbo:participant ?awardee ;
       rdf:type dbo:MilitaryConflict, dbo:Event, dbo:SocietalEvent .

  # Find the military force involved in this war
  ?militaryForceAwardee dbo:participatesIn ?war .
  
  # Identify Herbert Kitchener and his associated military force
  ?kitchener rdfs:label ""Herbert Kitchener""@en ;
            rdf:type dbo:MilitaryPerson .

  # Find the military conflict that is a societal event involving Kitchener
  ?militaryConflictKitchener dbo:participant ?kitchener ;
                            rdf:type dbo:MilitaryConflict, dbo:SocietalEvent .
  
  # Identify the military force associated with this conflict
  ?militaryForceKitchener dbo:participatesIn ?militaryConflictKitchener .
}
```",5,10,6,3,2,3,3,71,0,0,1085,0,0.0,0
216,45,val,"Give me the player in Mario Ivanković and player in Igor Bišćan and team of the person born, that is a sports manager and a soccer manager and a soccer player, on the death of Pavel Vezhinov.",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/coach> ?v1 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerManager>. <http://dbpedia.org/resource/Igor_Bišćan> <http://dbpedia.org/ontology/team> ?result . ?v1 <http://dbpedia.org/ontology/birthDate> ?v0 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsManager>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerPlayer>. <http://dbpedia.org/resource/Pavel_Vezhinov> <http://dbpedia.org/ontology/deathDate> ?v0 . <http://dbpedia.org/resource/Mario_Ivanković> <http://dbpedia.org/ontology/team> ?result . },"```sparql
SELECT ?teamMario ?teamIgor ?birthPlace ?deathDate WHERE {
  # Get team for Mario Ivanković
  ?mario dbo:playsFor ?teamMario .
  ?mario rdfs:label ""Mario Ivanković""@en .

  # Get team for Igor Bišćan
  ?igor dbo:playsFor ?teamIgor .
  ?igor rdfs:label ""Igor Bišćan""@en .

  # Find a person who is a sports manager, soccer manager, and soccer player
  ?person rdf:type dbo:SoccerManager ;
          rdf:type dbo:SportsManager ;
          rdf:type dbo:SoccerPlayer .

  # Get birthplace of this person
  ?person dbo:birthPlace ?birthPlace .

  # Get death date of Pavel Vezhinov
  ?vezhinov dbo:dateOfDeath ?deathDate .
  ?vezhinov rdfs:label ""Pavel Vezhinov""@en .
}
```",5,8,6,3,3,3,3,71,0,0,1,0,0.0,0
892,49,val,"Give me the entity in the profession of Henri Crolla and entity in the administration, that is Italian and a region and a settlement and an administrative region, of the party, that is a political party and an organisation, of Andrea Cozzolino.",SELECT ?result WHERE { <http://dbpedia.org/resource/Henri_Crolla> <http://dbpedia.org/property/occupation> ?v2 . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/PoliticalParty>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/AdministrativeRegion>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. <http://dbpedia.org/resource/Andrea_Cozzolino> <http://dbpedia.org/ontology/party> ?v4 . ?result <http://dbpedia.org/ontology/province> ?v0 . ?result <http://dbpedia.org/ontology/country> ?v2 . ?v0 <http://dbpedia.org/property/leaderParty> ?v4 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Region>. ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?v0 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Italy>. },"```sparql
SELECT ?profession ?region WHERE {
  # Find Henri Crolla's profession
  ?henriCrolla rdfs:label ""Henri Crolla""@en .
  ?henriCrolla dbo:occupation ?profession .

  # Find Andrea Cozzolino's party
  ?andreaCozzolino rdfs:label ""Andrea Cozzolino""@en .
  ?andreaCozzolino dbo:member ?party .
  
  # Find an Italian region that is a settlement and administrative region related to the party
  ?region rdf:type dbo:Region ;
          dbo:country dbr:Italy ;
          dbo:settlement true ;
          dbo:administrativeRegion true ;
          dbo:memberOf ?party .

}
```",5,11,6,3,2,3,3,71,0,0,587,0,0.0,0
47,53,val,"Give me the office of the administration of the commander, that is a politician, in Operation Green Hunt and office of the awardee of Padma Vibhushan and office of Bidesh Ranjan Bose.",SELECT ?result WHERE { ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. <http://dbpedia.org/resource/Operation_Green_Hunt> <http://dbpedia.org/ontology/commander> ?v3 . ?v1 <http://dbpedia.org/property/office> ?result . ?v2 <http://dbpedia.org/property/governor> ?v3 . <http://dbpedia.org/resource/Bidesh_Ranjan_Bose> <http://dbpedia.org/property/office> ?result . ?v2 <http://dbpedia.org/property/office> ?result . ?v1 <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/Padma_Vibhushan> . },"```sparql
# Query for the office of the commander in Operation Green Hunt who is a politician
SELECT ?office WHERE {
  ?operation dbo:wikiPageRedirects db:Operation_Green_Hunt .
  ?commander dbo:occupation ""politician"" ;
             dbo:memberOf ?operation .
  ?commander dbo:office ?office .
}

UNION

# Query for the office of an awardee of Padma Vibhushan
SELECT ?office WHERE {
  ?person dbo:award ""Padma_Vibhushan"" .
  ?person dbo:office ?office .
}

UNION

# Query for the office of Bidesh Ranjan Bose
SELECT ?office WHERE {
  ?bose rdfs:label ""Bidesh Ranjan Bose""@en ;
        dbo:office ?office .
}
```",6,7,7,3,3,3,3,71,0,0,1,0,0.0,0
232,7,val,"Give me the claim to fame of Katherine ""Kitty"" Marshall and artistic movement of the person born, that is a writer, on 1849-09-14.","SELECT ?result WHERE { <http://dbpedia.org/resource/Katherine_%22Kitty%22_Marshall> <http://dbpedia.org/ontology/knownFor> ?result . ?v0 <http://dbpedia.org/ontology/birthDate> ""1849-09-14""^^<http://www.w3.org/2001/XMLSchema#date> . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Writer>. ?v0 <http://dbpedia.org/ontology/movement> ?result . }","```sparql
SELECT ?claimToFame ?artisticMovement WHERE {
  # Find claim to fame of Katherine ""Kitty"" Marshall
  ?kitty dbo:name ""Katherine \""Kitty\"" Marshall""@en .
  ?kitty dbo:claimToFame ?claimToFame .

  # Identify the person born on 1849-09-14 who is a writer
  ?person dbo:birthday ""1849-09-14""^^xsd:date ;
          rdf:type dbo:Writer ;
          dbo:artisticMovement ?artisticMovement .
}
```",3,4,4,2,2,2,2,9,0,0,1,0,0.0,0
987,52,val,"Give me the birth place of the band, that is an artist and a musical artist, of the band, that is an artist, of Dado Polumenta and entity in Montenegro and birth place of the actor of All for Free.",SELECT ?result WHERE { ?v3 <http://dbpedia.org/ontology/associatedMusicalArtist> ?v1 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?result <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Montenegro> . <http://dbpedia.org/resource/All_for_Free> <http://dbpedia.org/property/starring> ?v4 . ?v1 <http://dbpedia.org/ontology/birthPlace> ?result . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. ?v4 <http://dbpedia.org/ontology/birthPlace> ?result . <http://dbpedia.org/resource/Dado_Polumenta> <http://dbpedia.org/ontology/associatedMusicalArtist> ?v3 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. },"```sparql
# Step 1: Find Dado Prljaca's band
SELECT ?band WHERE {
  ?band dbo:member dbr:Dado_Prljaca .
  ?band a dbo:Band .
}

# Step 2: Find another band associated with the first band and is an artist
SELECT ?relatedBand WHERE {
  ?relatedBand dbo:associatedBand ?band .
  ?relatedBand a dbo:Band .
}

# Step 3: Get the birth place of the related band in Montenegro
SELECT ?birthPlace WHERE {
  ?relatedBand dbo:birthPlace ?birthPlace .
  ?birthPlace rdfs:label ?placeLabel .
  FILTER (CONTAINS(LCASE(?placeLabel), ""montenegro""))
}

# Step 4: Find the actor of ""All for Free""
SELECT ?actor WHERE {
  ?movie dbo:starring ?actor .
  ?movie rdfs:label ""All for Free""@en .
}

# Step 5: Get the birth place of this actor
SELECT ?actorBirthPlace WHERE {
  ?actor dbo:birthPlace ?actorBirthPlace .
}
```",6,9,7,3,3,3,3,71,0,0,1,0,0.0,0
926,49,val,"Give me the father of the father of Abdulaziz and child of the father, that is a royalty, of the parent, that is a royalty, of Beyhan Sultan (daughter of Mustafa III).",SELECT ?result WHERE { ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. <http://dbpedia.org/resource/Beyhan_Sultan_(daughter_of_Mustafa_III)> <http://dbpedia.org/ontology/parent> ?v4 . ?v2 <http://dbpedia.org/property/father> ?result . ?v4 <http://dbpedia.org/property/father> ?v0 . <http://dbpedia.org/resource/Abdulaziz> <http://dbpedia.org/property/father> ?v2 . ?v0 <http://dbpedia.org/ontology/child> ?result . },"```sparql
SELECT ?grandfatherChild WHERE {
  # Find Abdulaziz Ibn Saud and his father
  ?abdulaziz dbo:parent ?father .
  ?abdulaziz rdfs:label ""Abdulaziz Ibn Saud""@en .

  # Find the grandfather of Abdulaziz (father of his father)
  ?father dbo:parent ?grandfather .

  # Identify a royal child of Abdulaziz's grandfather
  OPTIONAL {
    ?grandfatherChild dbo:parent ?grandfather .
    FILTER EXISTS { ?grandfatherChild dbo:royalty ""true""^^xsd:boolean }
  }

  # Find Beyhan Sultan and her parent (Mustafa III)
  ?beyhanSultan dbo:parent ?mustafaIII .
  ?beyhanSultan rdfs:label ""Beyhan Sultan""@en .

  # Identify Mustafa III's father
  OPTIONAL {
    ?mustafaIII dbo:parent ?mustafaFather .
  }

  # Find a royal child of Mustafa III's father
  OPTIONAL {
    ?royalChild dbo:parent ?mustafaFather .
    FILTER EXISTS { ?royalChild dbo:royalty ""true""^^xsd:boolean }
  }
}
```",5,7,6,3,2,3,3,71,0,0,1,0,0.0,0
976,48,val,"Give me the office of the leader, that is a politician, of the administration, that is an organisation, of Kemal Kılıçdaroğlu and office of the person born as Mehmet Naci Bostancı.","SELECT ?result WHERE { ?v0 <http://dbpedia.org/property/office> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v0 <http://dbpedia.org/property/birthName> ""Mehmet Naci Bostancı""@en . ?v3 <http://dbpedia.org/ontology/leader> ?v1 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?v3 <http://dbpedia.org/property/leader> <http://dbpedia.org/resource/Kemal_Kılıçdaroğlu> . ?v1 <http://dbpedia.org/property/office> ?result . }","```sparql
SELECT ?kılıçdaroğluOffice ?bostancıOffice WHERE {
  # Find the organization associated with Kemal Kılıçdaroğlu
  ?kılıçdaroğlu dbo:leader ?organization .
  ?kılıçdaroğlu rdfs:label ""Kemal Kılıçdaroğlu""@en .

  # Determine the office of Kemal Kılıçdaroğlu within that organization
  OPTIONAL {
    ?kılıçdaroğlu dbo:office ?kılıçdaroğluOffice .
  }

  # Find any known office or role for Mehmet Naci Bostancı
  ?bostancı rdfs:label ""Mehmet Naci Bostancı""@en .
  OPTIONAL {
    ?bostancı dbo:office ?bostancıOffice .
  }
}
```",5,7,6,3,2,3,3,71,0,0,1,0,0.0,0
216,20,val,Give me the administration of  and office of Tim Nicholls and party of the awardee of Australian Defence Medal.,"SELECT ?result WHERE { <http://dbpedia.org/resource/Tim_Nicholls> <http://dbpedia.org/property/office> ?result . ?v3 <http://dbpedia.org/ontology/party> ?result . ?result <http://dbpedia.org/property/leader> """"@en . ?v3 <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/Australian_Defence_Medal> . }","```sparql
# Query for Tim Nicholls' Administration and Office
SELECT ?office ?administration WHERE {
  ?timNicholls dbo:office ?office .
  ?timNicholls rdfs:label ""Tim Nicholls""@en .
  
  OPTIONAL { 
    ?timNicholls dbo:memberOf ?administration .
  }
}

# Query for Awardee of the Australian Defence Medal and Party Affiliation
SELECT ?awardee ?party WHERE {
  ?awardee dbo:awardReceived ?medal .
  ?medal rdfs:label ""Australian Defence Medal""@en .
  
  OPTIONAL { 
    ?awardee dbo:memberOf ?party .
  }
  
  FILTER (regex(str(?awardee), ""politician"", ""i""))
}
```",4,4,5,2,3,2,3,28,0,0,1,0,0.0,0
582,51,val,"Give me the player in the father, that is an athlete and a soccer manager and a sports manager, of Masami Nagasawa and figure known as the nickname of the team, that is an organisation, of Hajime Moriyasu.",SELECT ?result WHERE { ?result <http://dbpedia.org/property/nickname> ?v2 . ?v4 <http://dbpedia.org/ontology/team> ?result . ?v1 <http://dbpedia.org/ontology/coach> <http://dbpedia.org/resource/Hajime_Moriyasu> . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerManager>. ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Athlete>. ?v1 <http://dbpedia.org/property/nickname> ?v2 . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsManager>. <http://dbpedia.org/resource/Masami_Nagasawa> <http://dbpedia.org/property/father> ?v4 . },"```sparql
SELECT ?player WHERE {
  # Find Masami Nagasawa and her father who is an athlete, soccer manager, and sports manager
  ?nagasawa dbo:parent ?father .
  ?nagasawa rdfs:label ""Masami Nagasawa""@en .
  
  FILTER EXISTS { ?father rdf:type dbo:Athlete . }
  FILTER EXISTS { ?father rdf:type dbo:SoccerManager . }
  FILTER EXISTS { ?father rdf:type dbo:SportsManager . }

  # Find Hajime Moriyasu's team and its nickname
  ?moriyasu dbo:team ?team .
  ?moriyasu rdfs:label ""Hajime Moriyasu""@en .

  ?team dbo:nickname ?nickname .
  
  # Match the player with both roles
  FILTER (?father = ?player)
  FILTER (?nickname = ?player)
}
```",5,9,6,3,2,3,3,71,0,0,1,0,0.0,0
715,45,val,"Give me the leader of the office, that is a government agency and an organisation, of the reference to Carlos Franco Iribarnegaray and commander in Spanish Civil War and commander in Rif War.","SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/GovernmentAgency>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?v1 <http://dbpedia.org/ontology/leader> ?result . ?v0 <http://xmlns.com/foaf/0.1/name> ""Carlos Franco Iribarnegaray""@en . ?v0 <http://dbpedia.org/property/office> ?v1 . <http://dbpedia.org/resource/Spanish_Civil_War> <http://dbpedia.org/ontology/commander> ?result . <http://dbpedia.org/resource/Rif_War> <http://dbpedia.org/ontology/commander> ?result . }","```sparql
SELECT ?leader WHERE {
  # Find Carlos Franco Iribarnegaray
  ?person rdfs:label ""Carlos Franco Iribarnegaray""@en .
  
  # Check if he was a commander in both wars
  ?person dbo:role ?commanderRole1 .
  ?commanderRole1 dbo:war ?spanishCivilWar .
  ?spanishCivilWar rdfs:label ""Spanish Civil War""@en .

  ?person dbo:role ?commanderRole2 .
  ?commanderRole2 dbo:war ?rifWar .
  ?rifWar rdfs:label ""Rif War""@en .

  # Identify the government agency or organization
  ?person dbo:memberOf ?organization .
  ?organization a dbo:GovernmentAgency ;
                a dbo:Organization .

  # Find the leader of this organization
  ?organization dbo:leader ?leader .
}
```",5,7,6,3,3,3,3,71,0,0,1,0,0.0,0
158,15,val,"Give me the party of Théodore Steeg and entity in the award, that is a country, of the reference to Adelbert Cronkhite.","SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. ?v0 <http://dbpedia.org/property/awards> ?v1 . ?v0 <http://xmlns.com/foaf/0.1/name> ""Adelbert Cronkhite""@en . ?result <http://dbpedia.org/ontology/country> ?v1 . <http://dbpedia.org/resource/Théodore_Steeg> <http://dbpedia.org/ontology/party> ?result . }","```sparql
SELECT ?party ?country WHERE {
  # Find the political party of Théodore Steeg
  OPTIONAL {
    ?steeg dbo:politicalParty ?party .
    ?steeg rdfs:label ""Théodore Steeg""@en .
  }

  # Find awards received by Adelbert Cronkhite and identify any country entities within those awards
  OPTIONAL {
    ?cronkhite dbo:award ?award .
    ?cronkhite rdfs:label ""Adelbert Cronkhite""@en .
    ?award dbo:country ?country .
  }
}
```",4,5,5,3,2,3,2,20,0,0,1,0,0.0,0
129,20,val,"Give me the professional in  and associated musical artist of Saba (rapper) and associated musical artist of the actor, that is an organisation, of Dreamville Presents: Revenge.","SELECT ?result WHERE { <http://dbpedia.org/resource/Saba_(rapper)> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?result <http://dbpedia.org/property/occupation> """"@en . ?v3 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . <http://dbpedia.org/resource/Dreamville_Presents:_Revenge> <http://dbpedia.org/property/starring> ?v3 . }","```sparql
SELECT ?sabaRole ?associatedArtistSaba ?actor ?isOrganization ?associatedArtistActor WHERE {
  # Find Saba's professional role
  ?saba dbo:occupation ?sabaRole .
  ?saba rdfs:label ""Saba (rapper)""@en .

  # Find associated musical artists with Saba
  OPTIONAL { 
    ?saba dbp:collaboratedWith ?associatedArtistSaba .
  }

  # Identify the actor involved in Dreamville Presents: Revenge
  ?event dbo:performer ?actor .
  ?event rdfs:label ""Dreamville Presents: Revenge""@en .

  # Check if the actor is part of an organization
  OPTIONAL {
    ?actor dbo:memberOf ?organization .
    BIND (EXISTS { ?actor dbo:memberOf ?organization } AS ?isOrganization)
  }

  # Find associated musical artists with the actor
  OPTIONAL {
    ?actor dbp:collaboratedWith ?associatedArtistActor .
  }
}
```",4,5,5,2,3,2,3,28,0,0,1,0,0.0,0
791,46,val,"Give me the predecessor of the child of Emperor Takakura and spouse of the spouse, that is a royalty, of the reference to Emperor Takakura.","SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?result <http://dbpedia.org/ontology/successor> ?v4 . ?v4 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Emperor_Takakura> . ?v2 <http://xmlns.com/foaf/0.1/name> ""Emperor Takakura""@en . ?v1 <http://dbpedia.org/ontology/spouse> ?v2 . ?result <http://dbpedia.org/ontology/spouse> ?v1 . }","```sparql
SELECT ?predecessor WHERE {
  # Find the child of Emperor Takakura
  ?takakura dbo:child ?child .
  ?takakura rdfs:label ""Emperor Takakura""@en .

  # Find the spouse of the child who is royalty
  OPTIONAL { 
    ?child dbo:spouse ?royalSpouse .
    FILTER (regex(str(?royalSpouse), ""Imperial Princess"", ""i""))
  }

  # Find the predecessor of this royal spouse
  OPTIONAL {
    ?royalSpouse dbo:predecessor ?predecessor .
    FILTER (regex(str(?royalSpouse), ""Imperial Princess"", ""i""))
  }
}
```",5,6,6,3,2,3,3,71,0,0,1,0,0.0,0
216,22,val,Give me the office of the mayor of Ros Bates and party of the awardee of Australian Defence Medal.,SELECT ?result WHERE { ?v3 <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/Australian_Defence_Medal> . ?v2 <http://dbpedia.org/property/office> ?result . <http://dbpedia.org/resource/Ros_Bates> <http://dbpedia.org/property/leader> ?v2 . ?v3 <http://dbpedia.org/ontology/party> ?result . },"```sparql
SELECT ?office ?party WHERE {
  # Find office held by Ros Bates
  OPTIONAL {
    ?rosBates dbo:office ?office .
    ?rosBates rdfs:label ""Ros Bates""@en .
  }

  # Find party of awardee of Australian Defence Medal
  OPTIONAL {
    ?person dbo:award dbr:Australian_Defence_Medal ;
            dbo:party ?party .
  }
}
```",4,4,5,2,2,2,3,28,2,4,0,0.3333333333333333,1.0,0.5
507,41,val,"Give me the director of the movie, that is a movie and a work, with Beryl Reid and spouse of the person born as Anne Voase Coates and professional in Film director, television director.","SELECT ?result WHERE { ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Film>. ?v4 <http://dbpedia.org/ontology/director> ?result . ?v2 <http://dbpedia.org/property/birthName> ""Anne Voase Coates""@en . ?result <http://dbpedia.org/property/occupation> ""Film director, television director""@en . ?v4 <http://dbpedia.org/property/starring> <http://dbpedia.org/resource/Beryl_Reid> . ?result <http://dbpedia.org/ontology/spouse> ?v2 . }","```sparql
SELECT ?director WHERE {
  # Find movies featuring Beryl Reid
  ?movie dbo:starring ?person .
  ?person rdfs:label ""Beryl Reid""@en .

  # Ensure the entity is a movie and a work
  ?movie rdf:type dbpedia-owl:Film .
  ?movie rdf:type dbpedia-owl:CreativeWork .

  # Identify Anne Voase Coates by birth name and profession
  ?anne foaf:name ""Anne Voase Coates""@en ;
        dbo:birthName ""Anne Voase Coates""@en ;
        dbo:occupation dbpedia:FilmDirector ;
        dbo:occupation dbpedia:TelevisionDirector .

  # Find her spouse
  ?anne dbo:spouse ?spouse .

  # Find the director of the movie
  ?movie dbo:director ?director .
}
```",5,7,6,2,3,3,3,71,0,0,1,0,0.0,0
267,15,val,"Give me the person born on 1953-03-01 and coach of the player, that is a soccer club, in the manager of 2020–21 Tractor S.C. season.","SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/coach> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerClub>. <http://dbpedia.org/resource/2020–21_Tractor_S.C._season> <http://dbpedia.org/ontology/manager> ?v0 . ?v0 <http://dbpedia.org/ontology/team> ?v1 . ?result <http://dbpedia.org/ontology/birthDate> ""1953-03-01""^^<http://www.w3.org/2001/XMLSchema#date> . }","```sparql
SELECT ?coach WHERE {
  # Find the person born on 1953-03-01
  ?person dbo:birthDate ""1953-03-01""^^xsd:date .
  
  # Identify the manager of Tractor S.C. for the 2020–21 season
  ?tractorManager dbo:managerOf ?tractorClub ;
                  dbo:position ""Trainer""@en ;
                  dbo:worksFor ?tractorClub .
  ?tractorClub rdfs:label ""Tractor S.C.""@en .

  # Find players (soccer clubs) managed by the identified manager
  ?player dbo:coach ?coach ;
          dbo:manager ?tractorManager .
  
  # Ensure the coach is the person born on 1953-03-01
  FILTER (?person = ?coach)
}
```",4,5,5,3,2,3,2,20,0,0,1,0,0.0,0
865,55,val,"Give me the native of the residence, that is a country, of Ram Jaipal Singh Yadav and father of the child of Abu Ahmad Abdul Hafiz and father of the child, that is a politician, of Abu Ahmad Abdul Hafiz.",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/birthPlace> ?v0 . ?v3 <http://dbpedia.org/property/father> ?result . <http://dbpedia.org/resource/Ram_Jaipal_Singh_Yadav> <http://dbpedia.org/property/residence> ?v0 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v4 <http://dbpedia.org/property/father> ?result . ?v3 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Abu_Ahmad_Abdul_Hafiz> . ?v4 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Abu_Ahmad_Abdul_Hafiz> . },"```sparql
SELECT ?native ?politicianFather WHERE {
  # Find Ram Jaipal Singh Yadav's residence
  ?yadav dbo:residence ?residence .
  ?yadav rdfs:label ""Ram Jaipal Singh Yadav""@en .

  # Check if the residence is a country and find its native
  OPTIONAL {
    ?residence rdf:type dbo:Country .
    ?residence dbo:nativeName ?native .
  }

  # Find Abu Ahmad Abdul Hafiz's child
  ?hafiz dbo:child ?child .
  ?hafiz rdfs:label ""Abu Ahmad Abdul Hafiz""@en .

  # Identify the father of this child who is a politician
  OPTIONAL {
    ?child dbo:father ?politicianFather .
    ?politicianFather rdf:type dbo:Politician .
  }
}
```",6,8,7,2,3,3,3,71,0,0,1,0,0.0,0
645,45,val,"Give me the military force of Spanish Civil War and commander in Battle of Jarama and leader of the office, that is a government agency and an organisation, of the native of Restoration (Spain).",SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/leader> ?result . ?v0 <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Restoration_(Spain)> . ?v0 <http://dbpedia.org/property/office> ?v1 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/GovernmentAgency>. <http://dbpedia.org/resource/Battle_of_Jarama> <http://dbpedia.org/ontology/commander> ?result . ?result <http://dbpedia.org/ontology/battle> <http://dbpedia.org/resource/Spanish_Civil_War> . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. },"```sparql
SELECT ?militaryForce ?commander ?leader WHERE {
  # Identify military forces involved in the Spanish Civil War
  ?civilWar dbo:participatingMilitaryUnit ?militaryForce .
  ?civilWar rdfs:label ""Spanish Civil War""@en .

  # Find commanders involved in the Battle of Jarama
  OPTIONAL {
    ?battle dbo:commander ?commander .
    ?battle rdfs:label ""Battle of Jarama""@en .
  }

  # Identify a leader of an office that is both a government agency and an organization
  OPTIONAL {
    ?office dbo:type dbr:Government_agency ; dbo:type dbr:Organization .
    ?leader dbo:positionHeld ?office .
    
    # Link to a native of the Restoration period in Spain
    ?native dbo:nativeCountry dbr:Spain ;
            dbo:birthPlace ?place ;
            dbo:era ""Restoration (Spain)""@en .
    ?leader dbo:relatedTo ?native .
  }
}
```",5,7,6,3,3,3,3,71,0,0,1,0,0.0,0
987,44,val,"Give me the birth place of Dado Polumenta and birth place of the actor of All for Free and entity in the region, that is a country, of Central European Time.",SELECT ?result WHERE { <http://dbpedia.org/resource/Dado_Polumenta> <http://dbpedia.org/ontology/birthPlace> ?result . ?v0 <http://dbpedia.org/property/timeZone> <http://dbpedia.org/resource/Central_European_Time> . ?result <http://dbpedia.org/ontology/country> ?v0 . <http://dbpedia.org/resource/All_for_Free> <http://dbpedia.org/property/starring> ?v4 . ?v4 <http://dbpedia.org/ontology/birthPlace> ?result . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. },"```sparql
SELECT ?birthPlaceDadoPolumenta ?actorBirthPlace ?countryInCET WHERE {
  # Find the birth place of Dado Polumenta
  ?dadoPolumenta dbo:birthPlace ?birthPlaceDadoPolumenta .
  ?dadoPolumenta rdfs:label ""Dado Polumenta""@en .

  # Find the actor of ""All for Free"" and their birth place
  ?movie dbo:actor ?actor .
  ?movie rdfs:label ""All for Free""@en .
  ?actor dbo:birthPlace ?actorBirthPlace .

  # Find a country in the Central European Time region
  ?country dcterms:isPartOf ?region .
  ?region rdfs:label ""Central European Time Zone""@en .
  ?country rdf:type dbpedia-owl:Country .
}
```",5,6,6,2,3,3,3,71,0,0,1,0,0.0,0
216,51,val,"Give me the player in the coach, that is a soccer player and a sports manager and a soccer manager, of Bosnia and Herzegovina national under-18 football team and team of the person born, that is a sports manager and a soccer manager and a soccer player, on the death of Pavel Vezhinov.",SELECT ?result WHERE { ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsManager>. ?result <http://dbpedia.org/ontology/coach> ?v2 . ?v4 <http://dbpedia.org/ontology/team> ?result . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerManager>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerManager>. ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerPlayer>. ?v2 <http://dbpedia.org/ontology/birthDate> ?v1 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerPlayer>. <http://dbpedia.org/resource/Pavel_Vezhinov> <http://dbpedia.org/ontology/deathDate> ?v1 . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsManager>. <http://dbpedia.org/resource/Bosnia_and_Herzegovina_national_under-18_football_team> <http://dbpedia.org/ontology/coach> ?v4 . },"```sparql
SELECT ?coach WHERE {
  # Find the coach of the Bosnia and Herzegovina national under-18 football team
  ?team dbo:coach ?coach .
  ?team rdfs:label ""Bosnia and Herzegovina national under-18 football team""@en .

  # Ensure the coach is a soccer player, sports manager, and soccer manager
  ?coach dbo:occupation ?occupation1 .
  ?coach dbo:occupation ?occupation2 .
  ?coach dbo:occupation ?occupation3 .
  
  FILTER (
    (str(?occupation1) = ""soccer player""@en || str(?occupation1) = ""sports manager""@en || str(?occupation1) = ""soccer manager""@en) &&
    (str(?occupation2) = ""soccer player""@en || str(?occupation2) = ""sports manager""@en || str(?occupation2) = ""soccer manager""@en) &&
    (str(?occupation3) = ""soccer player""@en || str(?occupation3) = ""sports manager""@en || str(?occupation3) = ""soccer manager""@en)
  )

  # Find the birthdate of this coach
  ?coach dbo:birthDate ?birthdate .

  # Get Pavel Vezhinov's date of death
  ?vezhinov dbo:dateOfDeath ?deathDate .
  ?vezhinov rdfs:label ""Pavel Vezhinov""@en .

  # Check if the birthdate matches the date of death
  FILTER (?birthdate = ?deathDate)
}
```",5,11,6,3,2,3,3,71,0,0,1,0,0.0,0
773,42,val,"Give me the parent of Carloman of Bavaria and spouse of the father of Charles the Fat and parent of the child, that is a royalty, of Louis the German.",SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v1 <http://dbpedia.org/ontology/parent> ?result . ?v2 <http://dbpedia.org/ontology/spouse> ?result . ?result <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Carloman_of_Bavaria> . <http://dbpedia.org/resource/Charles_the_Fat> <http://dbpedia.org/property/father> ?v2 . ?v1 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Louis_the_German> . },"```sparql
SELECT ?parentOfCarloman ?spouseOfFatherOfCharlesFat ?royalParent WHERE {
  # Find the parent (father) of Carloman of Bavaria
  ?carloman dbo:parent ?parentOfCarloman .
  ?carloman rdfs:label ""Carloman of Bavaria""@en .

  # Find the father of Charles the Fat and his spouse
  ?charlesFat dbo:parent ?fatherOfCharlesFat .
  ?charlesFat rdfs:label ""Charles the Fat""@en .
  OPTIONAL {
    ?fatherOfCharlesFat dbo:spouse ?spouseOfFatherOfCharlesFat .
  }

  # Find a royal child of Louis the German and their parent
  ?louisGerman dbo:child ?royalChild .
  ?louisGerman rdfs:label ""Louis the German""@en .
  OPTIONAL {
    ?royalChild rdf:type dbo:Monarch .
    ?royalChild dbo:parent ?royalParent .
  }
}
```",5,6,6,2,3,3,3,71,1,1,0,0.5,1.0,0.6666666666666666
573,45,val,"Give me the person decedent at Quincy, Massachusetts and person decedent at Massachusetts and parent of the author, that is a politician and an office holder, of the work of John Quincy Adams.","SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v1 <http://dbpedia.org/ontology/parent> ?result . ?v0 <http://dbpedia.org/property/author> ?v1 . ?result <http://dbpedia.org/ontology/deathPlace> <http://dbpedia.org/resource/Massachusetts> . ?result <http://dbpedia.org/ontology/deathPlace> <http://dbpedia.org/resource/Quincy,_Massachusetts> . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v0 <http://dbpedia.org/property/author> <http://dbpedia.org/resource/John_Quincy_Adams> . }","```sparql
SELECT ?parent ?quincyDecedent ?massachusettsDecedent WHERE {
  # Identify John Quincy Adams
  ?johnQuincyAdams dbo:author ?work .
  ?johnQuincyAdams rdfs:label ""John Quincy Adams""@en .

  # Find his parent who is a politician and office holder
  ?parent dbo:parent ?johnQuincyAdams .
  ?parent dbo:politician true .
  ?parent dbo:officeHolder true .

  # Identify decedents at Quincy, Massachusetts
  OPTIONAL {
    ?quincyDecedent dbo:decedentAtLocation ?location1 .
    ?location1 rdfs:label ""Quincy, Massachusetts""@en .
  }

  # Identify decedents in Massachusetts
  OPTIONAL {
    ?massachusettsDecedent dbo:decedentAtLocation ?location2 .
    ?location2 rdfs:label ""Massachusetts""@en .
  }
}
```",5,7,6,3,3,3,3,71,0,0,2,0,0.0,0
865,46,val,"Give me the father of the child, that is a politician, of Abu Ahmad Abdul Hafiz and native of the residence, that is a country, of the person decedent at Patna.",SELECT ?result WHERE { ?v3 <http://dbpedia.org/property/father> ?result . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v3 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Abu_Ahmad_Abdul_Hafiz> . ?v1 <http://dbpedia.org/ontology/deathPlace> <http://dbpedia.org/resource/Patna> . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. ?v1 <http://dbpedia.org/property/residence> ?v0 . ?result <http://dbpedia.org/ontology/birthPlace> ?v0 . },"```sparql
SELECT ?father WHERE {
  # Find Abu Ahmad Abdul Hafiz
  ?abuHafiz rdfs:label ""Abu Ahmad Abdul Hafiz""@en .

  # Identify a child who is a politician
  ?child dbo:parent ?abuHafiz ;
         rdf:type dbp:Politician .

  # Find the person decedent at Patna and their residence (country)
  ?decedent dbo:placeOfDeath ?patna ;
            dbo:residence ?residenceCountry .
  ?patna rdfs:label ""Patna""@en .

  # Ensure the residence is a country
  ?residenceCountry rdf:type dbp:Country .

  # Find the native of this country who is also the father of the politician child
  ?child dbo:nativePlace ?residenceCountry .
  ?child dbo:father ?father .
}
```",5,7,6,3,2,3,3,71,0,0,1,0,0.0,0
926,53,val,"Give me the successor of Mustafa III and father of the father of the spouse of Neşerek Kadın and child of the father, that is a royalty, of Mustafa III.",SELECT ?result WHERE { <http://dbpedia.org/resource/Mustafa_III> <http://dbpedia.org/ontology/successor> ?result . ?v0 <http://dbpedia.org/ontology/child> ?result . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. <http://dbpedia.org/resource/Mustafa_III> <http://dbpedia.org/property/father> ?v0 . ?v3 <http://dbpedia.org/property/father> ?v1 . ?v1 <http://dbpedia.org/property/father> ?result . <http://dbpedia.org/resource/Neşerek_Kadın> <http://dbpedia.org/ontology/spouse> ?v3 . },"```sparql
SELECT ?child WHERE {
  # Find the successor of Mustafa III
  ?mustafaIII dbo:successor ?successor .
  ?mustafaIII rdfs:label ""Mustafa III""@en .

  # Find spouse of Neşerek Kadın
  OPTIONAL { 
    ?neserekKadin dbo:spouse ?spouse .
    ?neserekKadin rdfs:label ""Neşerek Kadın""@en .
  }

  # Find father of the spouse
  OPTIONAL {
    ?spouse dbo:parent ?father .
  }
  
  # Find child of this father who is royalty and linked to Mustafa III
  OPTIONAL {
    ?father dbo:child ?child .
    FILTER (regex(str(?child), ""royalty"", ""i"") && regex(str(?child), ""Mustafa III"", ""i""))
  }
}
```",6,7,7,3,3,3,3,71,0,0,1,0,0.0,0
433,49,val,"Give me the professional in the profession of the writer of Slowhand at 70 – Live at the Royal Albert Hall and associated musical artist of the person born, that is a musical artist and an artist, as Paul Laurence Dunbar Chambers Jr..","SELECT ?result WHERE { ?result <http://dbpedia.org/property/occupation> ?v1 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. <http://dbpedia.org/resource/Slowhand_at_70_–_Live_at_the_Royal_Albert_Hall> <http://dbpedia.org/property/writer> ?v0 . ?v0 <http://dbpedia.org/property/occupation> ?v1 . ?v2 <http://dbpedia.org/property/birthName> ""Paul Laurence Dunbar Chambers Jr.""@en . ?v2 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. }","```sparql
SELECT ?associatedArtist WHERE {
  # Identify Eric Clapton as the writer/producer of the album
  ?album dbo:creator ?ericClapton .
  ?album rdfs:label ""Slowhand at 70 – Live at the Royal Albert Hall""@en .
  
  # Find Paul Chambers and his associated artists
  ?paulChambers dbo:associatedMusicalArtist ?associatedArtist .
  ?paulChambers rdfs:label ""Paul Laurence Dunbar Chambers Jr.""@en .

  # Ensure the associated artist is a musician or guitarist
  ?associatedArtist rdf:type dbo:Musician ;
                   (dbo:instrument|dbo:profession) ?instrumentOrProfession .
  FILTER (
    regex(str(?instrumentOrProfession), ""guitarist|musician"", ""i"")
  )
}
```",5,7,6,3,2,3,3,71,0,0,16,0,0.0,0
216,48,val,"Give me the team of the person born, that is a sports manager and a soccer manager and a soccer player, on 1983-12-20 and player in the coach of the reference, that is an organisation and a soccer club, to Croatia U21.","SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/birthDate> ""1983-12-20""^^<http://www.w3.org/2001/XMLSchema#date> . ?v3 <http://dbpedia.org/ontology/coach> ?v2 . ?result <http://dbpedia.org/ontology/coach> ?v1 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?v3 <http://xmlns.com/foaf/0.1/name> ""Croatia U21""@en . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerManager>. ?v2 <http://dbpedia.org/ontology/team> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerPlayer>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsManager>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerClub>. }","```sparql
SELECT ?team WHERE {
  # Identify the person born on December 20, 1983
  ?person dbo:birthDate ""1983-12-20""^^xsd:date .
  
  # Ensure the person has roles as a sports manager, soccer manager, and player
  ?person dbo:occupation ?occupation .
  FILTER (
    regex(str(?occupation), ""sports manager"", ""i"") &&
    regex(str(?occupation), ""soccer manager"", ""i"") &&
    regex(str(?occupation), ""soccer player"", ""i"")
  )
  
  # Identify the organization that is a soccer club and has a connection to Croatia U21
  ?organization dbo:coach ?person .
  ?organization rdf:type dbo:SoccerClub .
  ?organization dbo:referenceTeam ?croatiaU21 .
  ?croatiaU21 rdfs:label ""Croatia national under-21 football team""@en .

  # Find the team associated with this person
  OPTIONAL {
    ?person dbo:managerOfTeam ?team .
    ?person dbo:playerForTeam ?team .
  }
}
```",5,10,6,3,2,3,3,71,0,0,1,0,0.0,0
507,52,val,"Give me the professional in Film director, television director and spouse of the person born as the birth name of Anne V. Coates and director of the movie, that is a movie and a work, with Beryl Reid.","SELECT ?result WHERE { ?result <http://dbpedia.org/property/occupation> ""Film director, television director""@en . ?v2 <http://dbpedia.org/property/birthName> ?v3 . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Film>. ?v5 <http://dbpedia.org/ontology/director> ?result . ?v5 <http://dbpedia.org/property/starring> <http://dbpedia.org/resource/Beryl_Reid> . ?result <http://dbpedia.org/ontology/spouse> ?v2 . <http://dbpedia.org/resource/Anne_V._Coates> <http://dbpedia.org/property/birthName> ?v3 . }","```sparql
SELECT ?spouse ?movie WHERE {
  # Get Anne V. Coates' birth name
  ?anneVCoates dbo:birthName ?birthName .
  ?anneVCoates rdfs:label ""Anne V. Coates""@en .

  # Find her spouse
  ?anneVCoates dbo:spouse ?spouse .

  # Check if the spouse is a film and television director
  ?spouse dbo:occupation ?occupation .
  FILTER (
    CONTAINS(LCASE(str(?occupation)), ""film director"") &&
    CONTAINS(LCASE(str(?occupation)), ""television director"")
  )

  # Find a movie directed by this person featuring Beryl Reid
  ?movie dbo:director ?spouse ;
         dbo:starring ?actor .
  ?actor rdfs:label ""Beryl Reid""@en .

  # Ensure the movie is both a work and a movie
  ?movie rdf:type ?type .
  FILTER (
    CONTAINS(LCASE(str(?type)), ""film"") &&
    CONTAINS(LCASE(str(?type)), ""work"")
  )
}
```",6,8,7,3,3,3,3,71,0,0,1,0,0.0,0
892,54,val,Give me the landmark at elevation of the award of the member of E-girls and entity in the profession of Henri Crolla and entity in Province of Reggio Emilia.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/elevation> ?v4 . <http://dbpedia.org/resource/E-girls> <http://dbpedia.org/ontology/bandMember> ?v1 . ?result <http://dbpedia.org/ontology/province> <http://dbpedia.org/resource/Province_of_Reggio_Emilia> . ?v1 <http://dbpedia.org/property/awards> ?v4 . ?result <http://dbpedia.org/ontology/country> ?v2 . <http://dbpedia.org/resource/Henri_Crolla> <http://dbpedia.org/property/occupation> ?v2 . },"```sparql
SELECT ?landmark WHERE {
  # Step 1: Retrieve a member of E-girls and their associated award
  ?member dbo:memberOf dbr:E-girls .
  ?award dbo:recipient ?member .
  
  # Step 2: Find a landmark at the elevation related to this award
  ?award dbo:elevation ?elevation .
  ?landmark dbo:elevation ?elevation .

  # Step 3: Identify Henri Crolla's profession
  ?henri foaf:name ""Henri Crolla""@en .
  ?henri dbo:profession ?profession .

  # Step 4: Find an entity in the Province of Reggio Emilia
  ?entity dbo:locatedIn dbr:Province_of_Reggio_Emilia .
}
```",6,6,7,3,3,3,3,71,0,0,1,0,0.0,0
433,52,val,"Give me the associated musical artist of the person born, that is a musical artist and an artist, as the persona of Paul Chambers and professional in Musician and associated musical artist of the associated musical artist, that is an artist and a musical artist, of Scott LaFaro.","SELECT ?result WHERE { ?v2 <http://dbpedia.org/property/birthName> ?v3 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?result <http://dbpedia.org/property/occupation> ""Musician""@en . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. <http://dbpedia.org/resource/Paul_Chambers> <http://xmlns.com/foaf/0.1/givenName> ?v3 . ?v5 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . <http://dbpedia.org/resource/Scott_LaFaro> <http://dbpedia.org/ontology/associatedMusicalArtist> ?v5 . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. ?v2 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . }","```sparql
SELECT ?finalArtist WHERE {
  # Identify Paul Chambers as a musician and his associated musical artist
  ?paulChambers dbo:birthDate ?date .
  ?paulChambers rdf:type dbo:Musician .
  ?paulChambers rdfs:label ""Paul Chambers""@en .
  
  OPTIONAL { 
    ?paulChambers dbo:associatedMusicalArtist ?scottLaFaro .
    ?scottLaFaro rdf:type dbo:Musician .
    ?scottLaFaro rdfs:label ""Scott LaFaro""@en .
  }
  
  # Find the associated musical artist of Scott LaFaro
  OPTIONAL {
    ?scottLaFaro dbo:associatedMusicalArtist ?finalArtist .
    ?finalArtist rdf:type dbo:Musician .
  }
}
```",6,10,7,3,3,3,3,71,0,0,1,0,0.0,0
645,47,val,"Give me the commander in the force of Carlos Asensio Cabanillas and military force of the force, that is an event and a military conflict and a societal event, of the native, that is a president and a politician, of Restoration (Spain).",SELECT ?result WHERE { ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/President>. ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?result <http://dbpedia.org/ontology/battle> ?v4 . ?v0 <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Restoration_(Spain)> . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v4 <http://dbpedia.org/ontology/commander> ?v0 . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?v2 <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Carlos_Asensio_Cabanillas> . ?v2 <http://dbpedia.org/ontology/commander> ?result . },"```sparql
SELECT ?commander WHERE {
  # Identify Carlos Asensio Cabanillas and his commander
  ?cabanillas dbo:commander ?commander .
  ?cabanillas rdfs:label ""Carlos Asensio Cabanillas""@en .

  # Find the military force associated with an event that is both a military conflict and societal event
  OPTIONAL {
    ?event dbo:militaryConflict true ;
           dbo:societalEvent true ;
           dbo:participatedInForce ?force .
    
    # Identify the native president and politician of Restoration (Spain)
    ?president dbo:nationality dbr:Spain ;
               dbo:politicalRole dbr:President_of_Spain ;
               dbo:politicalRole dbr:Politician ;
               dbo:relatedEvent ?event .

    FILTER regex(str(?president), ""Restoration"", ""i"")
  }
}
```",5,10,6,3,2,3,3,71,0,0,23,0,0.0,0
445,43,val,Give me the death place of the awardee of the establishment of 1820-03-10 and entity in England and entity in United Kingdom.,"SELECT ?result WHERE { ?v4 <http://dbpedia.org/ontology/deathPlace> ?result . ?v0 <http://dbpedia.org/ontology/foundingDate> ""1820-03-10""^^<http://www.w3.org/2001/XMLSchema#date> . ?result <http://dbpedia.org/ontology/location> <http://dbpedia.org/resource/England> . ?result <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/United_Kingdom> . ?v4 <http://dbpedia.org/property/awards> ?v0 . }","```sparql
SELECT ?deathPlace WHERE {
  # Find entity associated with the establishment date
  ?entity dbo:established ?date .
  FILTER (YEAR(?date) = 1820 && MONTH(?date) = 3 && DAY(?date) = 10)

  # Ensure the entity is connected to England and the United Kingdom
  ?entity dbo:country ?country .
  VALUES ?country { dbpedia:England dbpedia:United_Kingdom }

  # Find the death place of this awardee
  ?entity dbo:deathPlace ?deathPlace .
}
```",5,5,6,3,3,3,3,71,0,0,1,0,0.0,0
456,49,val,"Give me the band of the band, that is a musical artist, of the band of Alan Doyle and spouse of the actor of Pacific Drive.",SELECT ?result WHERE { <http://dbpedia.org/resource/Alan_Doyle> <http://dbpedia.org/ontology/associatedMusicalArtist> ?v0 . ?v0 <http://dbpedia.org/ontology/associatedMusicalArtist> ?v1 . ?v2 <http://dbpedia.org/ontology/spouse> ?result . <http://dbpedia.org/resource/Pacific_Drive> <http://dbpedia.org/property/starring> ?v2 . ?v1 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. },"```sparql
SELECT ?bandOfBand WHERE {
  # Step 1: Find Alan Doyle's Band
  ?doyle dbo:member ?alanDoyle .
  ?alanDoyle rdfs:label ""Alan Doyle""@en .
  ?doyle dbo:name ?band .

  # Step 2: Identify the actor from Pacific Drive and their spouse
  ?actor dbo:spouse ?spouse .
  ?actor dbo:work ?pacificDrive .
  ?pacificDrive rdfs:label ""Pacific Drive""@en .

  # Step 3: Check if the spouse is a musical artist and find their band
  OPTIONAL {
    ?spouse dbo:member ?bandOfSpouse .
    ?bandOfSpouse dbo:name ?bandName .
    FILTER EXISTS { ?spouse rdf:type dbo:MusicalArtist }
  }

  # Step 4: Find the band of this band if it exists
  OPTIONAL {
    ?bandOfSpouse dbo:partOf ?bandOfBand .
    ?bandOfBand dbo:name ?bandOfBandName .
  }
}
```",5,6,6,3,2,3,3,71,0,0,1,0,0.0,0
18,19,val,"Give me the professional in the award of Ana María Sánchez de Ríos and parent of Liza Huber and alumnus of Marymount College, Tarrytown.","SELECT ?result WHERE { ?result <http://dbpedia.org/property/occupation> ?v3 . ?result <http://dbpedia.org/ontology/almaMater> <http://dbpedia.org/resource/Marymount_College,_Tarrytown> . ?result <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Liza_Huber> . <http://dbpedia.org/resource/Ana_María_Sánchez_de_Ríos> <http://dbpedia.org/property/awards> ?v3 . }","```sparql
SELECT ?person WHERE {
  # Find the award associated with Ana María Sánchez de Ríos
  ?award dbo:recipient dbr:Ana_María_Sánchez_de_Ríos .
  
  # The person must be related to this award (e.g., recipient or similar)
  OPTIONAL { 
    ?person dbo:award ?award .
  }
  
  # Find Liza Huber's parent
  ?lizaHuber dbo:parent ?person .
  ?lizaHuber rdfs:label ""Liza Huber""@en .

  # Ensure the person is an alumnus of Marymount College, Tarrytown
  ?person dbo:almaMater dbr:Marymount_College,_Tarrytown .
}
```",4,4,5,2,3,2,3,28,0,0,1,0,0.0,0
465,45,val,"Give me the spouse of Archduchess Barbara of Austria and successor of the child, that is a royalty, of the parent of Charles Orlando, Dauphin of France and successor of Ercole II d'Este, Duke of Ferrara.","SELECT ?result WHERE { <http://dbpedia.org/resource/Charles_Orlando,_Dauphin_of_France> <http://dbpedia.org/ontology/parent> ?v0 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?result <http://dbpedia.org/ontology/spouse> <http://dbpedia.org/resource/Archduchess_Barbara_of_Austria> . ?v0 <http://dbpedia.org/ontology/child> ?v1 . ?v1 <http://dbpedia.org/ontology/successor> ?result . <http://dbpedia.org/resource/Ercole_II_d'Este,_Duke_of_Ferrara> <http://dbpedia.org/ontology/successor> ?result . }","```sparql
SELECT ?spouse WHERE {
  # Find spouse of Archduchess Barbara of Austria
  ?barbara dbo:spouse ?spouse .
  ?barbara rdfs:label ""Archduchess Barbara of Austria""@en .

  OPTIONAL {
    # Identify parent of Charles Orlando, Dauphin of France
    ?charlesOrlando dbo:parent ?parent .
    ?charlesOrlando rdfs:label ""Charles Orlando, Dauphin of France""@en .

    OPTIONAL {
      # Find successor of Ercole II d'Este, Duke of Ferrara
      ?ercoleII dbo:succ ?successor .
      ?ercoleII rdfs:label ""Ercole II d'Este, Duke of Ferrara""@en .

      OPTIONAL {
        # Identify child of the successor who is royalty
        ?successorChild dbo:parent ?successor .
        ?successorChild a dbo:RoyalFamilyMember .

        OPTIONAL {
          # Find successor of this royal child
          ?royalChild dbo:succ ?finalSuccessor .
          FILTER (?royalChild = ?successorChild)
        }
      }
    }
  }
}
```",5,6,6,3,3,3,3,71,1,0,0,1.0,1.0,1.0
773,41,val,Give me the parent of the successor of Charles the Bald and parent of Charles the Fat and spouse of the father of Charles the Fat.,SELECT ?result WHERE { ?v2 <http://dbpedia.org/ontology/spouse> ?result . ?result <http://dbpedia.org/ontology/child> ?v4 . <http://dbpedia.org/resource/Charles_the_Fat> <http://dbpedia.org/ontology/parent> ?result . <http://dbpedia.org/resource/Charles_the_Bald> <http://dbpedia.org/ontology/successor> ?v4 . <http://dbpedia.org/resource/Charles_the_Fat> <http://dbpedia.org/property/father> ?v2 . },"```sparql
SELECT ?successorParent ?charlesFatParent ?fatherSpouse WHERE {
  # Find the successor of Charles the Bald and their parent
  ?charlesBald dbo:successor ?successor .
  ?charlesBald rdfs:label ""Charles the Bald""@en .
  
  OPTIONAL { 
    ?successor dbo:parent ?successorParent .
  }
  
  # Find the parent(s) of Charles the Fat
  ?charlesFat dbo:parent ?charlesFatParent .
  ?charlesFat rdfs:label ""Charles the Fat""@en .

  # Find the spouse of one of the parents (father) of Charles the Fat
  OPTIONAL {
    ?charlesFatParent dbo:spouse ?fatherSpouse .
    FILTER EXISTS { 
      ?charlesFatParent rdf:type dbo:Man .
    }
  }
}
```",5,5,6,2,3,3,3,71,1,1,0,0.5,1.0,0.6666666666666666
326,7,val,"Give me the professional in Composer and person decedent at the region coded, that is a settlement, as 442/760.","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/deathPlace> ?v2 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. ?result <http://dbpedia.org/property/occupation> <http://dbpedia.org/resource/Composer> . ?v2 <http://dbpedia.org/ontology/areaCode> ""442/760"" . }","```sparql
SELECT ?composer WHERE {
  # Find composers who are deceased
  ?composer dbo:occupation dbc:Composers .
  ?composer dbo:dateOfDeath ?deathDate .

  # Link to a settlement identified by ""442/760""
  OPTIONAL { 
    ?composer dbo:birthPlace ?place .
    ?place rdfs:label ?settlementLabel .
    FILTER (regex(?settlementLabel, ""Settlement Name"", ""i"")) # Replace with actual settlement name
  }
  
  OPTIONAL {
    ?composer dbo:deathPlace ?place .
    ?place rdfs:label ?settlementLabel .
    FILTER (regex(?settlementLabel, ""Settlement Name"", ""i"")) # Replace with actual settlement name
  }
}
```",3,4,4,2,2,2,2,9,0,0,6,0,0.0,0
341,7,val,Give me the band member of the awardee of List of awards and nominations received by Beyoncé and writer of In Love & War (Amerie album).,SELECT ?result WHERE { <http://dbpedia.org/resource/In_Love_&_War_(Amerie_album)> <http://dbpedia.org/property/writer> ?result . ?result <http://dbpedia.org/ontology/associatedMusicalArtist> ?v2 . ?v2 <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/List_of_awards_and_nominations_received_by_Beyoncé> . },"```sparql
# Step 1: Find an award Beyoncé has received and its awardee
SELECT ?award ?awardee WHERE {
  ?beyonce dbo:awardReceived ?award .
  ?award dbo:recipient ?awardee .
  ?beyonce rdfs:label ""Beyoncé""@en .
}

# Step 2: Find the writer of ""In Love & War"" by Amerie
SELECT ?writer WHERE {
  ?song dbo:composer ?writer .
  ?album dbo:song ?song .
  ?album rdfs:label ""In Love & War""@en .
  ?artist dbo:album ?album .
  ?artist rdfs:label ""Amerie""@en .
}

# Step 3: Find a common band member between the awardee and the writer
SELECT DISTINCT ?bandMember WHERE {
  # Assuming we have identified ?awardee from step 1 and ?writer from step 2
  OPTIONAL { 
    ?awardee dbo:memberOfBand ?band .
    ?band dbo:member ?bandMember .
  }
  OPTIONAL {
    ?writer dbo:memberOfBand ?band .
    ?band dbo:member ?bandMember .
  }
}
```",3,3,4,2,2,2,2,9,0,0,1,0,0.0,0
582,49,val,"Give me the reference to the residence of Hirotaka Sugawara and figure known as the nickname of the team, that is an organisation, of Hajime Moriyasu.",SELECT ?result WHERE { ?v0 <http://dbpedia.org/ontology/coach> <http://dbpedia.org/resource/Hajime_Moriyasu> . ?v0 <http://dbpedia.org/property/nickname> ?v1 . <http://dbpedia.org/resource/Hirotaka_Sugawara> <http://dbpedia.org/property/residence> ?v2 . ?result <http://dbpedia.org/property/nickname> ?v1 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?result <http://xmlns.com/foaf/0.1/name> ?v2 . },"```sparql
SELECT ?residence ?nickname WHERE {
  # Find Hirotaka Sugawara's residence
  ?sugawara dbo:birthPlace ?residence .
  ?sugawara rdfs:label ""Hirotaka Sugawara""@en .

  # Find the nickname of Hajime Moriyasu's team (Japan national football team)
  OPTIONAL {
    ?team dbo:manager ?moriyasu .
    ?team rdfs:label ""Japan national football team""@en .
    ?moriyasu rdfs:label ""Hajime Moriyasu""@en .
    ?team dbo:nickname ?nickname .
  }
}
```",5,6,6,3,2,3,3,71,0,0,1,0,0.0,0
433,48,val,"Give me the associated musical artist of the person born, that is a musical artist and an artist, as the persona of Paul Chambers and professional in the profession of Bob Marley.",SELECT ?result WHERE { ?v2 <http://dbpedia.org/property/birthName> ?v3 . ?result <http://dbpedia.org/property/occupation> ?v1 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. <http://dbpedia.org/resource/Paul_Chambers> <http://xmlns.com/foaf/0.1/givenName> ?v3 . <http://dbpedia.org/resource/Bob_Marley> <http://dbpedia.org/property/occupation> ?v1 . ?v2 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. },"```sparql
SELECT ?person WHERE {
  # Find persons who are both musical artists and artists
  ?person dbo:occupation dbc:Musical_artists .
  ?person dbo:occupation dbc:Artists .

  # Ensure the person has an association with Paul Chambers as a persona
  OPTIONAL { 
    ?person dbo:associatedWith ?chambers .
    ?chambers rdfs:label ""Paul Chambers""@en .
  }

  # Ensure the person's profession is similar to Bob Marley's
  OPTIONAL {
    ?person dbo:profession dbc:Singer-songwriters ;
            dbo:profession dbc:Musicians .
  }
}
```",5,7,6,3,2,3,3,71,0,0,16,0,0.0,0
892,43,val,Give me the entity in Italy and entity in Province of Reggio Emilia and landmark at elevation of the award of the member of E-girls.,SELECT ?result WHERE { ?v1 <http://dbpedia.org/property/awards> ?v3 . ?result <http://dbpedia.org/ontology/elevation> ?v3 . ?result <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Italy> . ?result <http://dbpedia.org/ontology/province> <http://dbpedia.org/resource/Province_of_Reggio_Emilia> . <http://dbpedia.org/resource/E-girls> <http://dbpedia.org/ontology/bandMember> ?v1 . },"```sparql
# Query to find a member of E-girls
SELECT ?member WHERE {
  ?member dbo:memberOf dbr:E-girls .
}

# Query to find an award received by this member
SELECT ?award WHERE {
  ?member dbo:awardReceived ?award .
  ?member dbo:memberOf dbr:E-girls .
}

# Query for a landmark at the elevation of the award (requires external data)

# Query to find an entity in Italy
SELECT ?entity WHERE {
  ?entity dbo:country dbr:Italy .
}

# Query to find an entity in the Province of Reggio Emilia
SELECT ?entity WHERE {
  ?entity dbo:locatedIn dbr:Province_of_Reggio_Emilia .
}
```",5,5,6,3,3,3,3,71,0,0,1,0,0.0,0
47,45,val,"Give me the office of the awardee of the entity, that is an award, in India and office of Suvendu Adhikari and office of Bidesh Ranjan Bose.",SELECT ?result WHERE { ?v1 <http://dbpedia.org/property/office> ?result . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Award>. ?v1 <http://dbpedia.org/property/awards> ?v0 . <http://dbpedia.org/resource/Suvendu_Adhikari> <http://dbpedia.org/property/office> ?result . <http://dbpedia.org/resource/Bidesh_Ranjan_Bose> <http://dbpedia.org/property/office> ?result . ?v0 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/India> . },"```sparql
SELECT ?awardAwardeeOffice ?suvenduAdhikariOffice ?bideshRanjanBoseOffice WHERE {
  # Find an award in India and its awardee
  ?award dbo:country dbr:India .
  ?award dbo:recipient ?awardee .
  
  # Get the office of the awardee
  OPTIONAL { 
    ?awardee dbo:office ?awardAwardeeOffice .
  }
  
  # Find Suvendu Adhikari's office
  ?suvenduAdhikari rdfs:label ""Suvendu Adhikari""@en .
  OPTIONAL {
    ?suvenduAdhikari dbo:office ?suvenduAdhikariOffice .
  }
  
  # Find Bidesh Ranjan Bose's office
  ?bideshRanjanBose rdfs:label ""Bidesh Ranjan Bose""@en .
  OPTIONAL {
    ?bideshRanjanBose dbo:office ?bideshRanjanBoseOffice .
  }
}
```",5,6,6,3,3,3,3,71,0,0,1,0,0.0,0
582,55,val,"Give me the figure known as the nickname of Japan national football team and player in the father, that is an athlete and a soccer manager and a sports manager, of Masami Nagasawa and reference to the residence of Hirotaka Sugawara.",SELECT ?result WHERE { ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsManager>. <http://dbpedia.org/resource/Masami_Nagasawa> <http://dbpedia.org/property/father> ?v5 . ?result <http://dbpedia.org/property/nickname> ?v2 . ?v5 <http://dbpedia.org/ontology/team> ?result . <http://dbpedia.org/resource/Japan_national_football_team> <http://dbpedia.org/property/nickname> ?v2 . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Athlete>. ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerManager>. ?result <http://xmlns.com/foaf/0.1/name> ?v3 . <http://dbpedia.org/resource/Hirotaka_Sugawara> <http://dbpedia.org/property/residence> ?v3 . },"```sparql
# Query to find the father of Masami Nagasawa who is an athlete, soccer manager, and sports manager
SELECT ?father WHERE {
  ?nagasawa dbo:parent ?father .
  ?nagasawa rdfs:label ""Masami Nagasawa""@en .
  
  # Ensure the father is an athlete, soccer manager, and sports manager
  ?father rdf:type dbo:Athlete ;
          dbo:sportManagerOf ?team .
  FILTER EXISTS { ?team dbo:member ?player . }
}

# Query to find the residence of Hirotaka Sugawara
SELECT ?residence WHERE {
  ?sugawara dbo:residence ?residence .
  ?sugawara rdfs:label ""Hirotaka Sugawara""@en .
}
```",6,9,7,2,3,3,3,71,0,0,1,0,0.0,0
933,52,val,"Give me the band of the band of the band, that is an artist and a musical artist, of The Ramong Sound and reference to the birth name of Alan Warner (musician) and band of The Ramong Sound.",SELECT ?result WHERE { ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. <http://dbpedia.org/resource/Alan_Warner_(musician)> <http://dbpedia.org/property/birthName> ?v4 . <http://dbpedia.org/resource/The_Ramong_Sound> <http://dbpedia.org/ontology/associatedMusicalArtist> ?v3 . ?result <http://xmlns.com/foaf/0.1/name> ?v4 . ?v3 <http://dbpedia.org/ontology/associatedMusicalArtist> ?v1 . ?v1 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . <http://dbpedia.org/resource/The_Ramong_Sound> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. },"```sparql
SELECT ?thirdBand ?alanWarnerBirthName WHERE {
  # Find The Ramones band
  ?ramones dbo:band ?firstBand .
  ?ramones rdfs:label ""The Ramones""@en .

  # Ensure The Ramones is an artist and a musical artist
  ?ramones rdf:type dbp:MusicalArtist ;
           rdf:type dbo:Artist .

  # Find the band of the first band's band
  ?firstBand dbo:band ?secondBand .
  ?secondBand dbo:band ?thirdBand .

  # Ensure all bands are artists and musical artists
  ?firstBand rdf:type dbp:MusicalArtist ;
             rdf:type dbo:Artifact .
  ?secondBand rdf:type dbp:MusicalArtist ;
              rdf:type dbo:Artifact .
  ?thirdBand rdf:type dbp:MusicalArtist ;
             rdf:type dbo:Artifact .

  # Find Alan Warner's birth name
  ?alanWarner dbo:birthName ?alanWarnerBirthName .
  ?alanWarner rdfs:label ""Alan Warner (musician)""@en .

  # Ensure Alan Warner is an artist and a musical artist
  ?alanWarner rdf:type dbp:MusicalArtist ;
              rdf:type dbo:Artifact .
}
```",6,8,7,3,3,3,3,71,0,0,1,0,0.0,0
926,41,val,Give me the successor of the child of Ahmed III and child of Ahmed III and father of the father of Abdulaziz.,SELECT ?result WHERE { <http://dbpedia.org/resource/Abdulaziz> <http://dbpedia.org/property/father> ?v2 . ?v4 <http://dbpedia.org/ontology/successor> ?result . ?v4 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Ahmed_III> . <http://dbpedia.org/resource/Ahmed_III> <http://dbpedia.org/ontology/child> ?result . ?v2 <http://dbpedia.org/property/father> ?result . },"```sparql
SELECT ?successor WHERE {
  # Find a child of Ahmed III
  ?ahmedIII dbo:child ?childAhmed .
  ?ahmedIII rdfs:label ""Ahmed III""@en .

  # Find the successor of this child
  OPTIONAL { 
    ?childAhmed dbo:successor ?successor1 .
  }

  # Identify Abdulaziz's father and grandfather
  ?abdulaziz dbo:parent ?fatherAbdulaziz .
  ?abdulaziz rdfs:label ""Abdulaziz""@en .

  OPTIONAL {
    ?fatherAbdulaziz dbo:parent ?grandfatherAbdulaziz .
  }

  # Check if the child of Ahmed III is related to Abdulaziz's grandfather
  OPTIONAL {
    ?childAhmed = ?grandfatherAbdulaziz .
  }

  # Find successor of Abdulaziz's grandfather (if applicable)
  OPTIONAL {
    ?grandfatherAbdulaziz dbo:successor ?successor2 .
  }

  # Return the common successor if both have successors
  FILTER (?successor1 = ?successor2)
  BIND(?successor1 AS ?successor)
}
```",5,5,6,2,3,3,3,71,0,0,1,0,0.0,0
976,43,val,"Give me the office of the mayor, that is a politician and an office holder and Turkish, of the reference, that is an organisation and a political party and Turkish, to Millet İttifakı and office of Mustafa Şentop and office of Naci Bostancı.","SELECT ?result WHERE { ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/PoliticalParty>. <http://dbpedia.org/resource/Naci_Bostancı> <http://dbpedia.org/property/office> ?result . ?v3 <http://dbpedia.org/property/office> ?result . ?v1 <http://xmlns.com/foaf/0.1/name> ""Millet İttifakı""@en . <http://dbpedia.org/resource/Mustafa_Şentop> <http://dbpedia.org/property/office> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?v1 <http://dbpedia.org/property/leader> ?v3 . ?v1 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Turkey>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v3 <http://dbpedia.org/ontology/nationality> <http://dbpedia.org/resource/Turkey>. }","```sparql
SELECT ?office WHERE {
  # Identify Millet İttifakı as a political party in Turkey
  ?party dbo:type dbr:Political_party .
  ?party rdfs:label ""Millet İttifakı""@tr .
  
  # Find Mustafa Şentop and Naci Bostancı associated with the party
  OPTIONAL {
    ?person1 foaf:name ""Mustafa Şentop""@tr .
    ?person1 dbo:memberOf ?party .
    ?person1 dbo:office ?office .
  }
  
  OPTIONAL {
    ?person2 foaf:name ""Naci Bostancı""@tr .
    ?person2 dbo:memberOf ?party .
    ?person2 dbo:office ?office .
  }

  # Ensure the office is held by a politician and an office holder who is Turkish
  FILTER EXISTS { 
    ?office dbo:type dbr:Mayor_office .
    ?office dbo:country dbr:Turkey .
    ?office dbo:holder ?holder .
    ?holder foaf:nationality dbr:Turkey .
    ?holder dbo:occupation dbr:Politician .
    ?holder dbo:occupation dbr:Office_holder .
  }
}
```",5,11,6,3,3,3,3,71,0,0,1,0,0.0,0
326,15,val,"Give me the person decedent at France and resident of the birthplace, that is a state and British, of the professional in Writer.","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/deathPlace> <http://dbpedia.org/resource/France> . ?v1 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/United_Kingdom>. ?v0 <http://dbpedia.org/ontology/birthPlace> ?v1 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/AdministrativeRegion>. ?v0 <http://dbpedia.org/property/occupation> ""Writer""@en . ?result <http://dbpedia.org/property/residence> ?v1 . }","```sparql
SELECT ?person WHERE {
  # Identify British writers
  ?person dbo:occupation dbr:Writer .
  ?person dbo:nationality dbr:United_Kingdom .

  # Ensure their birthplace is a state in Britain
  ?person dbo:birthPlace ?birthPlace .
  ?birthPlace rdf:type dbo:State .
  
  # Find decedents at France
  OPTIONAL {
    ?deathEvent dbo:location dbr:France .
    ?deathEvent dbo:agent ?person .
  }
}
```",4,6,5,3,2,3,2,20,0,0,1,0,0.0,0
606,17,val,"Give me the figure known as Barb City and birthplace of the alumnus of the figure known, that is a university and a sports league and an educational institution, as Penn Quakers.","SELECT ?result WHERE { ?v3 <http://dbpedia.org/ontology/birthPlace> ?result . ?v0 <http://dbpedia.org/property/nickname> <http://dbpedia.org/resource/Penn_Quakers> . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/University>. ?v3 <http://dbpedia.org/ontology/almaMater> ?v0 . ?result <http://dbpedia.org/property/nickname> ""Barb City""@en . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/EducationalInstitution>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsLeague>. }","```sparql
SELECT ?birthPlace WHERE {
  ?carnegie dbo:almaMater dbr:University_of_Pennsylvania .
  ?carnegie rdfs:label ""Andrew Carnegie""@en .
  ?carnegie dbo:birthPlace ?birthPlace .
}
```",4,7,5,3,2,3,2,20,0,0,1,0,0.0,0
445,44,val,Give me the entity in the award of George H. Cameron and death place of the awardee of Royal Astronomical Society and entity in England.,SELECT ?result WHERE { <http://dbpedia.org/resource/George_H._Cameron> <http://dbpedia.org/property/awards> ?v2 . ?v4 <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/Royal_Astronomical_Society> . ?result <http://dbpedia.org/ontology/country> ?v2 . ?v4 <http://dbpedia.org/ontology/deathPlace> ?result . ?result <http://dbpedia.org/ontology/location> <http://dbpedia.org/resource/England> . },"```sparql
SELECT ?awardEntity ?deathPlace ?englandEntity WHERE {
  # Entity related to George H. Cameron's award
  ?cameron dbo:awardsReceived ?award .
  ?cameron rdfs:label ""George H. Cameron""@en .
  ?award rdfs:label ?awardEntity .

  # Death place of an awardee from the Royal Astronomical Society
  ?awardee dbo:awardsReceived ?rasAward .
  ?rasAward rdfs:label ""Royal Astronomical Society Award""@en .
  ?awardee dbo:deathPlace ?deathPlace .

  # Entity in England
  ?englandEntity a dbo:Place ;
                 dbo:country dbr:England .
}
```",5,5,6,2,3,3,3,71,0,0,1,0,0.0,0
865,47,val,"Give me the father of the child, that is a politician, of the spouse of Syeda Shahar Banu and native of the residence, that is a country, of Ram Jaipal Singh Yadav.",SELECT ?result WHERE { <http://dbpedia.org/resource/Ram_Jaipal_Singh_Yadav> <http://dbpedia.org/property/residence> ?v0 . <http://dbpedia.org/resource/Syeda_Shahar_Banu> <http://dbpedia.org/ontology/spouse> ?v2 . ?result <http://dbpedia.org/ontology/birthPlace> ?v0 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. ?v3 <http://dbpedia.org/property/father> ?result . ?v3 <http://dbpedia.org/property/father> ?v2 . },"```sparql
SELECT ?father WHERE {
  # Find Syeda Shahar Banu and her spouse
  ?shaharBanu dbo:spouse ?spouse .
  ?shaharBanu rdfs:label ""Syeda Shahar Banu""@en .

  # Identify a child of the spouse who is a politician
  ?child dbo:parent ?spouse ;
         rdf:type dbo:Politician .

  # Determine the father of this child
  ?child dbo:parent ?father .

  # Find Ram Jaipal Singh Yadav and his residence (country)
  ?ramJaipal dbo:nativeCountry ?residence .
  ?ramJaipal rdfs:label ""Ram Jaipal Singh Yadav""@en .

  # Ensure the child's native country matches Ram Jaipal Singh Yadav's residence
  ?child dbo:nativeCountry ?residence .
}
```",5,7,6,3,2,3,3,71,0,0,1,0,0.0,0
166,15,val,"Give me the resting place of the military force of the force, that is an event and a societal event and a military conflict, of Manuel Hedilla and entity in Spain.",SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/restingPlace> ?result . ?v0 <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Manuel_Hedilla> . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?result <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Spain> . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?v1 <http://dbpedia.org/ontology/battle> ?v0 . },"```sparql
SELECT ?restingPlace WHERE {
  # Identify the Requeté as a military force
  ?requete dbo:wikiPageRedirects dbpedia-es:Requeté .
  
  # Find events related to the Requeté that are societal and military conflicts
  ?event dbo:wikiPageRedirects ?requete ;
         rdf:type dbo:Event ;
         dbo:subject dbc:Society_of_Spain ;
         dbo:subject dbc:Military_conflict .

  # Identify Manuel Hedilla's association with the Requeté
  ?hedilla dbo:associatedWith ?requete .
  ?hedilla rdfs:label ""Manuel Hedilla""@en .

  # Find the resting place of the Requeté or related entities in Spain
  OPTIONAL {
    ?requete dbo:location ?restingPlace ;
            dbo:country dbc:Spain .
  }
}
```",4,7,5,3,2,3,2,20,0,0,4,0,0.0,0
433,41,val,"Give me the associated musical artist of the associated musical artist, that is an artist and a musical artist, of Scott LaFaro and associated musical artist of the person born, that is a musical artist and an artist, as Paul Laurence Dunbar Chambers Jr. and professional in Musician.","SELECT ?result WHERE { ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. <http://dbpedia.org/resource/Scott_LaFaro> <http://dbpedia.org/ontology/associatedMusicalArtist> ?v4 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?v2 <http://dbpedia.org/property/birthName> ""Paul Laurence Dunbar Chambers Jr.""@en . ?v2 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?result <http://dbpedia.org/property/occupation> ""Musician""@en . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. ?v4 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . }","```sparql
SELECT ?finalArtist WHERE {
  # Find Scott LaFaro's associated musical artist who is also an artist
  ?scottLaFaro dbo:associatedMusicalArtist ?artist1 .
  ?scottLaFaro rdfs:label ""Scott LaFaro""@en .
  ?artist1 rdf:type dbo:Musician .
  ?artist1 rdf:type dbo:Artist .

  # Find Paul Laurence Dunbar Chambers Jr.'s associated musical artist who is also an artist
  ?paulChambers dbo:associatedMusicalArtist ?artist2 .
  ?paulChambers rdfs:label ""Paul Laurence Dunbar Chambers Jr.""@en .
  ?paulChambers rdf:type dbo:Musician .
  ?paulChambers rdf:type dbo:Person .

  # Find the associated musical artist of each identified artist
  OPTIONAL { 
    ?artist1 dbo:associatedMusicalArtist ?finalArtist .
  }
  
  OPTIONAL {
    ?artist2 dbo:associatedMusicalArtist ?finalArtist .
  }

}
```",5,9,6,2,3,3,3,71,0,0,1,0,0.0,0
826,53,val,"Give me the predecessor of the parent of Prince Friedrich of Hesse and by Rhine and spouse of the child of the father of Anna Magdalena Appel and successor of Louis II, Grand Duke of Hesse.","SELECT ?result WHERE { <http://dbpedia.org/resource/Prince_Friedrich_of_Hesse_and_by_Rhine> <http://dbpedia.org/ontology/parent> ?v1 . <http://dbpedia.org/resource/Louis_II,_Grand_Duke_of_Hesse> <http://dbpedia.org/ontology/successor> ?result . ?result <http://dbpedia.org/ontology/successor> ?v1 . ?v2 <http://dbpedia.org/property/father> ?v3 . <http://dbpedia.org/resource/Anna_Magdalena_Appel> <http://dbpedia.org/property/father> ?v3 . ?v2 <http://dbpedia.org/ontology/spouse> ?result . }","```sparql
SELECT ?predecessor WHERE {
  # Find the parent of Prince Friedrich of Hesse and by Rhine
  ?friedrich dbo:parent ?parent .
  ?friedrich rdfs:label ""Prince Friedrich of Hesse and by Rhine""@en .

  # Find Anna Magdalena Appel's father
  ?annaMagdalena dbo:parent ?fatherAnna .
  ?annaMagdalena rdfs:label ""Anna Magdalena Appel""@en .

  # Identify the child of Anna Magdalena Appel's father (could be herself or another sibling)
  OPTIONAL { 
    ?child dbo:parent ?fatherAnna .
    FILTER (?child != ?annaMagdalena) # Exclude Anna Magdalena if looking for a different sibling
  }

  # Find Louis II, Grand Duke of Hesse and his successor
  ?louisII rdfs:label ""Louis II, Grand Duke of Hesse""@en .
  ?louisII dbo:successor ?successor .

  # Determine the spouse of the child identified above
  OPTIONAL {
    ?child dbo:spouse ?spouse .
  }

  # Find the predecessor of Prince Friedrich's parent
  ?parent dbo:predecessor ?predecessor .
}
```",6,6,7,3,3,3,3,71,0,0,1,0,0.0,0
917,47,val,"Give me the child of the father of the spouse, that is a royalty, of Leleiohoku I and parent of the child, that is a royalty, of Kamehameha IV.",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/child> ?v1 . ?v0 <http://dbpedia.org/ontology/spouse> <http://dbpedia.org/resource/Leleiohoku_I> . ?v0 <http://dbpedia.org/property/father> ?v3 . ?result <http://dbpedia.org/ontology/parent> ?v3 . ?v1 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Kamehameha_IV> . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. },"```sparql
SELECT ?child WHERE {
  # Find the spouse of Leleiohoku I who is royalty
  ?leleiohokuI dbo:spouse ?spouse .
  ?leleiohokuI rdfs:label ""Leleiohoku I""@en .

  # Ensure the spouse is recognized as royalty
  FILTER (regex(str(?spouse), ""royalty"", ""i""))

  # Find the father of this royal spouse
  ?spouse dbo:parent ?father .

  # Determine the child of this father who is a royalty
  ?father dbo:child ?child .
  FILTER (regex(str(?child), ""royalty"", ""i""))

  # Find the child of Kamehameha IV who is royalty
  ?kamehamehaIV dbo:child ?royalChild .
  ?kamehamehaIV rdfs:label ""Kamehameha IV""@en .

  # Ensure this child is recognized as royalty
  FILTER (regex(str(?royalChild), ""royalty"", ""i""))

  # Identify the parent of this royal child
  ?royalChild dbo:parent ?child .
}
```",5,7,6,3,2,3,3,71,0,0,1,0,0.0,0
456,51,val,"Give me the band of the band, that is a musical artist, of the band of Alan Doyle and professional in the alter ego of The Shadow.",SELECT ?result WHERE { ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?v1 <http://dbpedia.org/ontology/associatedMusicalArtist> ?v2 . <http://dbpedia.org/resource/Alan_Doyle> <http://dbpedia.org/ontology/associatedMusicalArtist> ?v1 . ?v2 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?result <http://dbpedia.org/property/occupation> ?v4 . <http://dbpedia.org/resource/The_Shadow> <http://dbpedia.org/property/alterEgo> ?v4 . },"```sparql
SELECT ?bandOfBand WHERE {
  # Step 1: Find Alan Doyle's band
  ?doyle dbo:member ?alanDoyle .
  ?alanDoyle rdfs:label ""Alan Doyle""@en .

  # Step 2: Find the band of Alan Doyle's band
  ?alanDoyle dbo:band ?band .
  
  # Step 3: Identify The Shadow's alter ego
  ?shadow dbo:alterEgo ?alterEgo .
  ?shadow rdfs:label ""The Shadow""@en .

  # Step 4: Find the professional associated with The Shadow's alter ego
  ?alterEgo dbo:profession ?professional .
  
  # Step 5: Find the band of that professional
  ?professional dbo:band ?bandOfBand .
}
```",5,6,6,3,2,3,3,71,0,0,1,0,0.0,0
573,41,val,"Give me the person decedent at the residence, that is a settlement, of William J. Phelan and parent of John Quincy Adams and person decedent at the administration, that is a region, of Charlie Baker.","SELECT ?result WHERE { <http://dbpedia.org/resource/John_Quincy_Adams> <http://dbpedia.org/ontology/parent> ?result . ?result <http://dbpedia.org/ontology/deathPlace> ?v2 . <http://dbpedia.org/resource/William_J._Phelan> <http://dbpedia.org/property/residence> ?v4 . ?v2 <http://dbpedia.org/property/governor> ""Charlie Baker""@en . ?result <http://dbpedia.org/ontology/deathPlace> ?v4 . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Region>. }","```sparql
SELECT ?commonDecedent WHERE {
  # William J. Phelan's residence as a settlement
  ?phelan dbo:residence ?settlement .
  ?phelan rdfs:label ""William J. Phelan""@en .
  ?settlement rdf:type dbo:Settlement .

  # Decedent at the settlement of William J. Phelan
  ?settlement dbo:decedentAt ?commonDecedent .

  # John Quincy Adams' parent
  ?adams dbo:parent ?parentAdams .
  ?adams rdfs:label ""John Quincy Adams""@en .

  # Charlie Baker's administration as a region
  ?baker dbo:administers ?region .
  ?baker rdfs:label ""Charlie Baker""@en .
  ?region rdf:type dbo:Region .

  # Decedent at the administration region of Charlie Baker
  ?region dbo:decedentAt ?commonDecedent .

  # Ensure the common decedent is linked to both contexts
  FILTER (?parentAdams = ?commonDecedent)
}
```",5,7,6,2,3,3,3,71,0,0,2,0,0.0,0
47,51,val,"Give me the office of the awardee of Banga Bhushan and office of the awardee of the entity, that is an award, in India.",SELECT ?result WHERE { ?v2 <http://dbpedia.org/property/awards> ?v1 . ?v4 <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/Banga_Bhushan> . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Award>. ?v2 <http://dbpedia.org/property/office> ?result . ?v4 <http://dbpedia.org/property/office> ?result . ?v1 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/India> . },"```sparql
SELECT ?bangaOffice ?otherAward ?otherAwardeeOffice WHERE {
  # Find the awardee of Banga Bhushan and their office
  ?bangaBhushan dbo:recipient ?awardee .
  ?bangaBhushan rdfs:label ""Banga Bhushan""@en .
  ?awardee dbo:office ?bangaOffice .

  # Find another award entity in India and its awardees' offices
  ?otherAward a dbo:Award ;
              dbo:country dbr:India .
  ?otherAwardee dbo:recipient ?otherAward .
  ?otherAwardee dbo:office ?otherAwardeeOffice .
}
```",5,6,6,3,2,3,3,71,0,0,1,0,0.0,0
773,51,val,"Give me the parent of the successor of Charles the Bald and parent of the child, that is a royalty, of the father, that is an office holder and a royalty, of Carloman of Bavaria.",SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v2 <http://dbpedia.org/ontology/parent> ?result . <http://dbpedia.org/resource/Charles_the_Bald> <http://dbpedia.org/ontology/successor> ?v4 . ?v2 <http://dbpedia.org/property/father> ?v1 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?result <http://dbpedia.org/ontology/child> ?v4 . <http://dbpedia.org/resource/Carloman_of_Bavaria> <http://dbpedia.org/property/father> ?v1 . },"```sparql
SELECT ?parentSuccessor ?parentChild WHERE {
  # Find Charles the Bald and his successor
  ?charles rdfs:label ""Charles the Bald""@en .
  ?charles dbo:succ ?successor .

  # Get parent of the successor
  ?successor dbo:parent ?parentSuccessor .

  # Identify Carloman of Bavaria's father who is an office holder and royalty
  ?carloman rdfs:label ""Carloman of Bavaria""@en .
  ?father dbo:child ?carloman .
  ?father rdf:type dbo:OfficeHolder ;
          rdf:type dbo:Royalty .

  # Get a child of this father who is royalty
  ?father dbo:child ?royalChild .
  ?royalChild rdf:type dbo:Royalty .

  # Get parent of the royal child
  ?royalChild dbo:parent ?parentChild .
}
```",5,8,6,3,2,3,3,71,0,0,2,0,0.0,0
582,53,val,"Give me the figure known as the nickname of Japan national football team and reference to the residence of the reference, that is a scientist, to Hirotaka Sugawara and player in Kazuaki Nagasawa.","SELECT ?result WHERE { <http://dbpedia.org/resource/Japan_national_football_team> <http://dbpedia.org/property/nickname> ?v1 . ?result <http://dbpedia.org/property/nickname> ?v1 . ?v3 <http://xmlns.com/foaf/0.1/name> ""Hirotaka Sugawara""@en . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Scientist>. ?result <http://xmlns.com/foaf/0.1/name> ?v2 . <http://dbpedia.org/resource/Kazuaki_Nagasawa> <http://dbpedia.org/ontology/team> ?result . ?v3 <http://dbpedia.org/property/residence> ?v2 . }","```sparql
# Step 1: Find the nickname of the Japan national football team
SELECT ?nickname WHERE {
  ?team rdfs:label ""Japan national football team""@en .
  ?team dbo:nickname ?nickname .
}

# Step 2: Identify a scientist associated with this nickname and find their residence
SELECT ?scientist ?residence WHERE {
  # Assuming the scientist is related to the nickname in some way (e.g., through a cultural or historical connection)
  ?scientist dbo:relatedTo ?nickname .
  ?scientist dbo:residenceLocation ?residence .
}

# Step 3: Explore connections involving Hirotaka Sugawara and Kazuaki Nagasawa
SELECT ?connection WHERE {
  # Check if either individual has a known relation to the scientist or nickname
  OPTIONAL { 
    ?sugawara dbo:relatedTo ?scientist .
    ?nagasawa dbo:relatedTo ?scientist .
  }
  
  # Alternatively, check for any direct connection between Sugawara and Nagasawa related to football
  OPTIONAL {
    ?sugawara dbo:colleague ?nagasawa .
    FILTER (regex(str(?sugawara), ""Hirotaka Sugawara"", ""i"") && regex(str(?nagasawa), ""Kazuaki Nagasawa"", ""i""))
  }
}
```",6,7,7,3,3,3,3,71,0,0,1,0,0.0,0
715,53,val,"Give me the commander in Spanish Civil War and leader of the office, that is a government agency and an organisation, of Carlos Franco Iribarnegaray and commander in the force, that is a military conflict, of the native of Morocco.",SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v1 <http://dbpedia.org/ontology/leader> ?result . <http://dbpedia.org/resource/Spanish_Civil_War> <http://dbpedia.org/ontology/commander> ?result . ?v3 <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Morocco> . <http://dbpedia.org/resource/Carlos_Franco_Iribarnegaray> <http://dbpedia.org/property/office> ?v1 . ?v2 <http://dbpedia.org/ontology/commander> ?v3 . ?v2 <http://dbpedia.org/ontology/commander> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/GovernmentAgency>. },"```sparql
SELECT ?commanderInSpanishCivilWar ?leaderOfOffice ?commanderInMoroccanConflict WHERE {
  # Find commander in Spanish Civil War
  ?spanishCivilWar dbo:commander ?commanderInSpanishCivilWar .
  ?spanishCivilWar rdfs:label ""Spanish Civil War""@en .

  # Find leader of the office related to Carlos Franco Iribarnegaray
  ?office dbo:leader ?leaderOfOffice ;
          dbo:employee ?carlosFranco .
  ?carlosFranco rdfs:label ""Carlos Franco Iribarnegaray""@en .
  FILTER (regex(str(?office), ""government agency|organization"", ""i""))

  # Find commander in a military conflict involving a native of Morocco
  ?militaryConflict dbo:commander ?commanderInMoroccanConflict ;
                    dbo:nativeOfCountry ?morocco .
  ?morocco rdfs:label ""Morocco""@en .
}
```",6,9,7,3,3,3,3,71,0,0,1,0,0.0,0
36,21,val,Give me the actor of Being Mrs Elliot and person born as the birth name of Ayo Makun and person born in 1971.,"SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/birthYear> ""1971""^^<http://www.w3.org/2001/XMLSchema#gYear> . <http://dbpedia.org/resource/Being_Mrs_Elliot> <http://dbpedia.org/ontology/starring> ?result . ?result <http://dbpedia.org/property/birthName> ?v1 . <http://dbpedia.org/resource/Ayo_Makun> <http://dbpedia.org/property/birthName> ?v1 . }","```sparql
SELECT ?actor ?personAyoMakun ?personBorn1971 WHERE {
  
  # Find actor of ""Being Mrs Elliot""
  ?movie dbo:title ""Being Mrs Elliot""@en .
  ?movie dbo:starring ?actor .

  # Find person born as Ayo Makun
  ?personAyoMakun foaf:name ""Ayo Makun""@en ;
                 dbo:birthName ""Ayo Makun""@en .

  # Find person born in 1971
  ?personBorn1971 dbo:birthYear ""1971""^^xsd:gYear .
  
}
```",4,4,5,2,3,2,3,28,0,0,1,0,0.0,0
281,23,val,"Give me the awardee of the award of Alfred Warden and commander in the war, that is an event and a military conflict, of Roy Boehm.",SELECT ?result WHERE { <http://dbpedia.org/resource/Roy_Boehm> <http://dbpedia.org/ontology/battle> ?v2 . ?result <http://dbpedia.org/property/awards> ?v1 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v2 <http://dbpedia.org/ontology/commander> ?result . <http://dbpedia.org/resource/Alfred_Warden> <http://dbpedia.org/property/awards> ?v1 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. },"```sparql
SELECT ?individual WHERE {
  # Find the award associated with Alfred Warden
  ?award dbo:recipient ?awardee .
  ?warden rdfs:label ""Alfred Warden""@en .
  ?award dbo:givenBy ?warden .

  # Ensure the awardee is the same individual who was a commander in a war involving Roy Boehm
  ?individual rdf:type dbo:Person .
  
  # Find events that are wars and military conflicts involving Roy Boehm
  ?event dbo:commander ?individual ;
         rdf:type dbo:MilitaryConflict, dbo:Event ;
         dbo:participant ?boehm .

  # Identify Roy Boehm
  ?boehm rdfs:label ""Roy Boehm""@en .
  
  # Ensure the individual is both an awardee and a commander
  FILTER (?awardee = ?individual)
}
```",4,6,5,2,2,2,3,28,0,0,1,0,0.0,0
826,49,val,"Give me the predecessor of the parent of the child of Louis IV, Grand Duke of Hesse and spouse of the child of Johann Heinrich Appel.","SELECT ?result WHERE { ?v0 <http://dbpedia.org/ontology/parent> ?v1 . ?result <http://dbpedia.org/ontology/successor> ?v1 . ?v2 <http://dbpedia.org/ontology/spouse> ?result . ?v0 <http://dbpedia.org/ontology/parent> <http://dbpedia.org/resource/Louis_IV,_Grand_Duke_of_Hesse> . ?v2 <http://dbpedia.org/property/father> ""Johann Heinrich Appel""@en . }","```sparql
SELECT ?predecessor WHERE {
  # Step 1: Identify Louis IV, Grand Duke of Hesse
  ?louisIV rdfs:label ""Louis IV, Grand Duke of Hesse""@en .
  
  # Step 2: Find the child of Louis IV
  ?child dbo:parent ?louisIV .

  # Step 3: Determine the spouse of this child
  ?spouse dbo:spouse ?child .

  # Step 4: Identify the child of Johann Heinrich Appel
  ?appelChild dbo:parent ?johannHeinrichAppel .
  ?johannHeinrichAppel rdfs:label ""Johann Heinrich Appel""@en .

  # Step 5: Find the spouse of this child (must match with step 3)
  FILTER (?spouse = ?appelChild)

  # Step 6: Identify the parent of this spouse
  ?parent dbo:child ?spouse .

  # Step 7: Determine the predecessor of this parent
  ?predecessor dbo:successor ?parent .
}
```",5,5,6,3,2,3,3,71,0,0,1,0,0.0,0
326,17,val,"Give me the resident of Berkshire and person decedent at the award, that is a country, of the awardee of French Legion of Honor.","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/deathPlace> ?v3 . ?result <http://dbpedia.org/property/residence> <http://dbpedia.org/resource/Berkshire> . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. ?v0 <http://dbpedia.org/property/awards> ?v3 . ?v0 <http://dbpedia.org/property/awards> ""French Legion of Honor""@en . }","```sparql
SELECT ?resident WHERE {
  # Find individuals awarded the French Legion of Honor
  ?awardee dbo:awardReceived dbr:French_Legion_of_Honor .
  
  # Connect the award to France as a country
  ?france dbo:countryName ""France""@en .
  ?awardee dbo:nationality ?france .

  # Find any decedent related to this context
  OPTIONAL {
    ?decedent dbo:dateOfDeath ?date .
    ?decedent dbo:awardReceived dbr:French_Legion_of_Honor .
  }

  # Identify the resident of Berkshire
  ?resident dbo:residence dbr:Berkshire .
  FILTER EXISTS { 
    ?awardee dbo:relatedTo ?resident .
  }
}
```",4,5,5,3,2,3,2,20,0,0,1,0,0.0,0
527,17,val,"Give me the actor of The Book Tower and author of the work, that is a work and a book, of the host of Hyperland.",SELECT ?result WHERE { ?v3 <http://dbpedia.org/property/author> ?result . <http://dbpedia.org/resource/Hyperland> <http://dbpedia.org/ontology/presenter> ?v0 . <http://dbpedia.org/resource/The_Book_Tower> <http://dbpedia.org/property/starring> ?result . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?v3 <http://dbpedia.org/property/author> ?v0 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Book>. },"```sparql
SELECT ?actor ?author WHERE {
  # Find the actor for The Book Tower
  ?bookTower dbo:starring ?actor .
  ?bookTower rdfs:label ""The Book Tower""@en .

  # Find the host of Hyperland and their authored works
  ?hyperland dbo:host ?host .
  ?hyperland rdfs:label ""Hyperland""@en .
  
  ?work dbo:author ?author ;
        dbo:wikiPageWikiLink ?host .
  FILTER EXISTS { ?work rdf:type dbo:Book . }
}
```",4,6,5,3,2,3,2,20,0,0,1,0,0.0,0
5,15,val,"Give me the birthplace of the person born, that is a politician, as the award of Renata Adler and entity in Canada.",SELECT ?result WHERE { ?v3 <http://dbpedia.org/ontology/birthPlace> ?result . <http://dbpedia.org/resource/Renata_Adler> <http://dbpedia.org/property/awards> ?v2 . ?v3 <http://dbpedia.org/property/birthName> ?v2 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?result <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Canada> . },"```sparql
SELECT ?politicianBirthPlace WHERE {
  # Step 1: Identify Renata Adler and her award
  ?renataAdler dbo:awardReceived ?award .
  ?renataAdler rdfs:label ""Renata Adler""@en .

  # Step 2: Find the birthplace of the person who received the same award
  ?recipient dbo:awardReceived ?award .
  ?recipient dbo:birthPlace ?birthPlace .

  # Step 3: Identify a politician born at this birthplace and associated with Canada
  ?politician dbo:birthPlace ?birthPlace ;
              rdf:type dbo:Politician ;
              dbo:nationality dbr:Canada .
}
```",4,5,5,3,2,3,2,20,0,0,2,0,0.0,0
382,15,val,"Give me the birthplace of the manager, that is a soccer manager and an athlete and a sports manager, of the player in Lukas Kübler and landmark at elevation of 100.","SELECT ?result WHERE { <http://dbpedia.org/resource/Lukas_Kübler> <http://dbpedia.org/ontology/team> ?v0 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Athlete>. ?v1 <http://dbpedia.org/ontology/birthPlace> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsManager>. ?result <http://dbpedia.org/ontology/elevation> ""100""^^<http://www.w3.org/2001/XMLSchema#integer> . ?v0 <http://dbpedia.org/ontology/manager> ?v1 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerManager>. }","```sparql
SELECT ?managerBirthPlace WHERE {
  # Identify Lukas Kübler and his manager
  ?kuebler dbo:sportTeamMemberOf ?team .
  ?kuebler rdfs:label ""Lukas Kübler""@en .
  
  OPTIONAL {
    ?team dbo:coach ?manager .
    ?manager rdf:type dbo:SoccerManager ;
             dbo:athlete ?athlete ;
             dbo:sportsManager ?sportsManager .
    
    # Retrieve birthplace of the manager
    ?manager dbo:birthPlace ?managerBirthPlace .
  }
  
  # Find a landmark at elevation of approximately 100 meters
  OPTIONAL {
    ?landmark dbo:elevationAboveSeaLevel ?elevation .
    FILTER (?elevation >= 95 && ?elevation <= 105)
  }
}
```",4,7,5,3,2,3,2,20,0,0,1,0,0.0,0
573,42,val,"Give me the parent of the author, that is a politician and an office holder, of Exchequer Standards and person decedent at the administration, that is a region, of Charlie Baker and person decedent at Quincy, Massachusetts.","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/deathPlace> ?v2 . <http://dbpedia.org/resource/Exchequer_Standards> <http://dbpedia.org/property/author> ?v1 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Region>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v1 <http://dbpedia.org/ontology/parent> ?result . ?result <http://dbpedia.org/ontology/deathPlace> <http://dbpedia.org/resource/Quincy,_Massachusetts> . ?v2 <http://dbpedia.org/property/governor> ""Charlie Baker""@en . }","```sparql
SELECT ?parent WHERE {
  # Find author of ""Exchequer Standards"" who is a politician and office holder
  ?author dbo:work ?exchequerStandards .
  ?exchequerStandards rdfs:label ""Exchequer Standards""@en .
  ?author rdf:type dbo:Politician ;
          dbo:officeHolder true .

  # Find the parent of this author
  ?author dbo:parent ?parent .

  # Identify Charlie Baker's administration region and decedent at that region
  ?charlieBaker dbo:administrationRegion ?region .
  ?charlieBaker rdfs:label ""Charlie Baker""@en .
  ?decedentAtRegion dbo:placeOfBirth ?region ;
                    dbo:dateOfDeath ?date .

  # Identify person decedent at Quincy, Massachusetts
  ?quincyDecedent dbo:placeOfBirth dbpedia:Quincy,_Massachusetts ;
                  dbo:dateOfDeath ?quincyDate .
}
```",5,8,6,2,3,3,3,71,0,0,2,0,0.0,0
47,47,val,"Give me the office of the administration of Jagdeep Dhankhar and office of the awardee of the award, that is an award, of Mantu Ghosh.",SELECT ?result WHERE { ?v2 <http://dbpedia.org/property/governor> <http://dbpedia.org/resource/Jagdeep_Dhankhar> . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Award>. <http://dbpedia.org/resource/Mantu_Ghosh> <http://dbpedia.org/property/awards> ?v0 . ?v2 <http://dbpedia.org/property/office> ?result . ?v4 <http://dbpedia.org/property/awards> ?v0 . ?v4 <http://dbpedia.org/property/office> ?result . },"```sparql
SELECT ?jagdeepOffice ?awardeeOffice WHERE {
  # Find the office of Jagdeep Dhankhar in administration
  ?dhankhar dbo:office ?jagdeepOffice .
  ?dhankhar rdfs:label ""Jagdeep Dhankhar""@en .

  # Find an award associated with Mantu Ghosh
  OPTIONAL { 
    ?ghosh dbo:award ?award .
    ?ghosh rdfs:label ""Mantu Ghosh""@en .
  }

  # Find the office of another awardee for the same award
  OPTIONAL {
    ?otherAwardee dbo:award ?award .
    ?otherAwardee dbo:office ?awardeeOffice .
  }
}
```",5,6,6,3,2,3,3,71,0,0,1,0,0.0,0
124,45,val,"Give me the military force of the force, that is a societal event and a military conflict, of the person born on 1850-06-24 and commander in Mahdist War and military force of Battle of Tamai.","SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?result <http://dbpedia.org/ontology/battle> ?v1 . ?result <http://dbpedia.org/ontology/battle> <http://dbpedia.org/resource/Battle_of_Tamai> . <http://dbpedia.org/resource/Mahdist_War> <http://dbpedia.org/ontology/commander> ?result . ?v1 <http://dbpedia.org/ontology/commander> ?v0 . ?v0 <http://dbpedia.org/ontology/birthDate> ""1850-06-24""^^<http://www.w3.org/2001/XMLSchema#date> . }","```sparql
SELECT ?militaryForce WHERE {
  # Identify Charles George Gordon
  ?gordon dbo:birthDate ""1850-06-24""^^xsd:date ;
          rdfs:label ""Charles George Gordon""@en .

  # Find military conflicts and societal events associated with him
  OPTIONAL { 
    ?conflict dbo:commander ?gordon .
    ?conflict rdf:type ?eventType .
    FILTER (?eventType IN (dbo:MilitaryConflict, dbo:SocietalEvent))
  }

  # Identify the military force of the event that is both a societal event and a military conflict
  OPTIONAL {
    ?conflict dbo:militaryForce ?militaryForce .
  }

  # Find the military force associated with Charles George Gordon in the Battle of Tamai
  OPTIONAL {
    ?tamai dbo:commander ?gordon ;
           rdf:type dbo:MilitaryConflict .
    ?tamai dbo:militaryForce ?militaryForce .
  }
}
```",5,7,6,3,3,3,3,71,0,0,1,0,0.0,0
791,49,val,"Give me the father of the child, that is a royalty, of the father, that is a royalty and an office holder, of Emperor Antoku and spouse of the spouse, that is a royalty, of Emperor Takakura.",SELECT ?result WHERE { ?v1 <http://dbpedia.org/property/father> ?v0 . ?result <http://dbpedia.org/ontology/spouse> ?v2 . ?v1 <http://dbpedia.org/property/father> ?result . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v2 <http://dbpedia.org/ontology/spouse> <http://dbpedia.org/resource/Emperor_Takakura> . <http://dbpedia.org/resource/Emperor_Antoku> <http://dbpedia.org/property/father> ?v0 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. },"```sparql
SELECT ?father WHERE {
  # Step a: Find Emperor Antoku's father who is royalty and an office holder
  ?antoku dbo:parent ?fatherAntoku .
  ?antoku rdfs:label ""Emperor Antoku""@en .
  
  OPTIONAL { 
    ?fatherAntoku dbo:officeHolder ?office .
    FILTER EXISTS { ?office rdf:type dbo:GovernmentPosition }
  }

  # Step b: Find a child of this father who is royalty
  ?child dbo:parent ?fatherAntoku .
  OPTIONAL {
    ?child rdf:type dbo:RoyalFamilyMember .
  }

  # Step c: Find spouse of Emperor Takakura who is royalty
  ?takakura dbo:spouse ?spouseTakakura .
  ?takakura rdfs:label ""Emperor Takakura""@en .

  OPTIONAL {
    FILTER EXISTS { ?spouseTakakura rdf:type dbo:RoyalFamilyMember }
  }

  # Step d: Find the spouse of this royal spouse
  ?spouseTakakura dbo:spouse ?inLaw .
  
  # Final step: Identify the father of the child found in step b
  OPTIONAL {
    ?child dbo:parent ?father .
  }
}
```

[[ ## completed",5,9,6,3,2,3,3,71,0,0,1,0,0.0,0
47,46,val,"Give me the office of the awardee of Banga Bhushan and office of the administration of the commander, that is a politician, in Operation Green Hunt.",SELECT ?result WHERE { ?v4 <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/Banga_Bhushan> . ?v1 <http://dbpedia.org/property/office> ?result . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v4 <http://dbpedia.org/property/office> ?result . ?v1 <http://dbpedia.org/property/governor> ?v2 . <http://dbpedia.org/resource/Operation_Green_Hunt> <http://dbpedia.org/ontology/commander> ?v2 . },"```sparql
SELECT ?awardeeOffice ?commanderAdmin WHERE {
  # Find awardees of Banga Bhushan and their office
  ?person dbo:awardReceived dbr:Banga_Bhushan .
  ?person dbo:officeHeld ?awardeeOffice .

  # Find commanders in Operation Green Hunt who are politicians and their administration
  OPTIONAL {
    ?commander dbo:participatedInOperation dbr:Operation_Green_Hunt .
    ?commander rdf:type dbo:Politician .
    ?commander dbo:administration ?commanderAdmin .
  }
}
```",5,6,6,3,2,3,3,71,0,0,1,0,0.0,0
965,51,val,"Give me the parent of the person born, that is a noble, as the birth name of George Mountbatten, 2nd Marquess of Milford Haven and parent of the child, that is a royalty, of Prince Louis of Battenberg.","SELECT ?result WHERE { ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Noble>. ?v0 <http://dbpedia.org/ontology/parent> ?result . ?v4 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Prince_Louis_of_Battenberg> . ?v4 <http://dbpedia.org/ontology/parent> ?result . ?v0 <http://dbpedia.org/property/birthName> ?v3 . <http://dbpedia.org/resource/George_Mountbatten,_2nd_Marquess_of_Milford_Haven> <http://dbpedia.org/property/birthName> ?v3 . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. }","```sparql
SELECT ?parent WHERE {
  # Find George Mountbatten, 2nd Marquess of Milford Haven's birth name and parent
  ?georgeMountbatten dbo:birthName ?birthName .
  ?georgeMountbatten rdfs:label ""George Mountbatten, 2nd Marquess of Milford Haven""@en .
  ?georgeMountbatten dbo:parent ?parent .

  # Find Prince Louis of Battenberg's child who is royalty
  OPTIONAL {
    ?princeLouis dbo:child ?royalChild .
    ?princeLouis rdfs:label ""Prince Louis of Battenberg""@en .
    FILTER (regex(str(?royalChild), ""Royal"", ""i""))
  }

  # Find the parent of the royal child identified above
  OPTIONAL {
    ?royalChild dbo:parent ?parent .
    FILTER (regex(str(?royalChild), ""Royal"", ""i""))
  }
}
```",5,7,6,3,2,3,3,71,0,0,2,0,0.0,0
507,40,val,"Give me the director of Entertaining Mr Sloane (film) and professional in Film director, television director and spouse of the person born as the birth name of Anne V. Coates.","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/spouse> ?v1 . ?v1 <http://dbpedia.org/property/birthName> ?v2 . <http://dbpedia.org/resource/Anne_V._Coates> <http://dbpedia.org/property/birthName> ?v2 . <http://dbpedia.org/resource/Entertaining_Mr_Sloane_(film)> <http://dbpedia.org/ontology/director> ?result . ?result <http://dbpedia.org/property/occupation> ""Film director, television director""@en . }","```sparql
SELECT ?director ?spouse WHERE {
  # Find the director of ""Entertaining Mr Sloane""
  ?film dbo:director ?director .
  ?film rdfs:label ""Entertaining Mr Sloane""@en .

  # Ensure the director is a professional in film and television directing
  ?director dbo:occupation ?occupation .
  FILTER (
    (CONTAINS(LCASE(str(?occupation)), ""film director"") || CONTAINS(LCASE(str(?occupation)), ""television director""))
  )

  # Find Anne V. Coates' spouse
  ?anne foaf:name ""Anne V. Coates""@en ;
        dbo:spouse ?spouse .

}
```",5,5,6,3,3,3,3,71,0,0,1,0,0.0,0
433,46,val,"Give me the associated musical artist of the person born, that is a musical artist and an artist, as the persona of Paul Chambers and associated musical artist of the associated musical artist, that is an artist and a musical artist, of Scott LaFaro.",SELECT ?result WHERE { ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. ?v1 <http://dbpedia.org/property/birthName> ?v2 . ?v1 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . <http://dbpedia.org/resource/Paul_Chambers> <http://xmlns.com/foaf/0.1/givenName> ?v2 . ?v4 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. <http://dbpedia.org/resource/Scott_LaFaro> <http://dbpedia.org/ontology/associatedMusicalArtist> ?v4 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. },"```sparql
SELECT ?associatedArtistOfPaulChambers ?finalAssociatedArtist WHERE {
  # Find Paul Chambers and his associated musical artist who is also an artist
  ?paulChambers dbo:birthName ""Paul Leroy Chambers""@en .
  ?paulChambers dbo:associatedMusicalArtist ?artist1 .
  ?artist1 rdf:type dbo:MusicalArtist ;
           rdf:type dbo:Artist .

  # Find the associated musical artist of this artist
  ?artist1 dbo:associatedMusicalArtist ?associatedArtistOfPaulChambers .

  # Find Scott LaFaro and his associated musical artist who is also an artist
  ?scottLaFaro dbo:birthName ""Scott LaFaro""@en .
  ?scottLaFaro dbo:associatedMusicalArtist ?artist2 .
  ?artist2 rdf:type dbo:MusicalArtist ;
           rdf:type dbo:Artist .

  # Find the associated musical artist of this artist
  ?artist2 dbo:associatedMusicalArtist ?intermediateArtist .
  
  # Finally, find the associated musical artist of the intermediate artist
  ?intermediateArtist dbo:associatedMusicalArtist ?finalAssociatedArtist .
}
```",5,9,6,3,2,3,3,71,0,0,2,0,0.0,0
839,48,val,"Give me the band of the band, that is a musical artist, of Charlie Huhn and band of the person born, that is a musical artist, as the persona of Kevin Russell (musician).",SELECT ?result WHERE { <http://dbpedia.org/resource/Charlie_Huhn> <http://dbpedia.org/ontology/associatedMusicalArtist> ?v1 . <http://dbpedia.org/resource/Kevin_Russell_(musician)> <http://xmlns.com/foaf/0.1/givenName> ?v3 . ?result <http://dbpedia.org/ontology/bandMember> ?v1 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?v2 <http://dbpedia.org/property/birthName> ?v3 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?v2 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . },"```sparql
SELECT ?charlieHunsBand ?kevinRussellsPersonaBand WHERE {
  # Find Charlie Huhn's band
  ?charlieHuhn dbo:band ?charlieHunsBand .
  ?charlieHuhn rdfs:label ""Charlie Huhn""@en .

  # Find Kevin Russell and his persona
  ?kevinRussell dbo:birthName ?persona .
  ?kevinRussell rdfs:label ""Kevin Russell (musician)""@en .
  
  # Assuming the persona is a known alias or stage name, we need to find the person born under this persona
  OPTIONAL {
    ?persona dbo:band ?kevinRussellsPersonaBand .
    FILTER regex(str(?persona), ""Shiny Toy Guns"", ""i"") # Assuming Shiny Toy Guns is Kevin Russell's persona
  }
}
```",5,7,6,3,2,3,3,71,0,0,1,0,0.0,0
892,52,val,Give me the entity in Province of Reggio Emilia and landmark at elevation of the award of Anna Ishii and entity in the profession of the true self of Enrico Crolla.,"SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/elevation> ?v4 . ?v3 <http://xmlns.com/foaf/0.1/givenName> ""Enrico Crolla""@en . ?result <http://dbpedia.org/ontology/province> <http://dbpedia.org/resource/Province_of_Reggio_Emilia> . <http://dbpedia.org/resource/Anna_Ishii> <http://dbpedia.org/property/awards> ?v4 . ?v3 <http://dbpedia.org/property/occupation> ?v1 . ?result <http://dbpedia.org/ontology/country> ?v1 . }","```sparql
SELECT ?entityInReggioEmilia ?landmarkAtElevation ?entityInProfession WHERE {
  # Entity in Province of Reggio Emilia
  ?entityInReggioEmilia dbo:locatedIn ?reggioEmilia .
  ?reggioEmilia rdfs:label ""Province of Reggio Emilia""@en .

  # Award of Anna Ishii and Landmark at Elevation
  OPTIONAL {
    ?annaIshii dbo:award ?award .
    ?annaIshii rdfs:label ""Anna Ishii""@en .
    ?landmark dbo:elevation ?elevation .
    ?award dbo:elevation ?elevation .
  }

  # Entity in the Profession of Enrico Crolla
  OPTIONAL {
    ?enricoCrolla dbo:profession ?profession .
    ?enricoCrolla rdfs:label ""Enrico Crolla""@en .
    ?entityInProfession dbo:profession ?profession .
  }
}
```",6,6,7,3,3,3,3,71,0,0,1,0,0.0,0
935,17,val,"Give me the headquarter of the office of the native of Balochistan, Pakistan and death place of Abdul Raziq Bugti.","SELECT ?result WHERE { ?v0 <http://dbpedia.org/property/office> ?v3 . ?v0 <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Balochistan,_Pakistan> . ?v3 <http://dbpedia.org/ontology/location> ?result . <http://dbpedia.org/resource/Abdul_Raziq_Bugti> <http://dbpedia.org/ontology/deathPlace> ?result . }","```sparql
SELECT ?headquarters ?deathPlace WHERE {
  # Find headquarters of an organization or office associated with Balochistan
  OPTIONAL {
    ?office dbo:location ?headquarters .
    ?office dbo:country dbc:Balochistan_Pakistan .
  }

  # Find death place of Abdul Raziq Bugti
  ?bugti dbo:deathPlace ?deathPlace .
  ?bugti rdfs:label ""Abdul Raziq Bugti""@en .
}
```",4,4,5,3,2,3,2,20,1,2,0,0.3333333333333333,1.0,0.5
976,49,val,"Give me the office of the leader, that is a politician, of Grand National Assembly of Turkey and office of the person born as the birth name of Naci Bostancı.",SELECT ?result WHERE { ?v0 <http://dbpedia.org/property/birthName> ?v4 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v2 <http://dbpedia.org/property/office> ?result . <http://dbpedia.org/resource/Grand_National_Assembly_of_Turkey> <http://dbpedia.org/ontology/leader> ?v2 . <http://dbpedia.org/resource/Naci_Bostancı> <http://dbpedia.org/property/birthName> ?v4 . ?v0 <http://dbpedia.org/property/office> ?result . },"```sparql
SELECT ?officeLeader ?officeNaci WHERE {
  # Find the office of the leader of the Grand National Assembly of Turkey
  ?assembly dbo:leader ?leader .
  ?assembly rdfs:label ""Grand National Assembly of Turkey""@en .
  ?leader dbo:occupation ?officeLeader .

  # Find Naci Bostancı's birth name and his office
  ?naci foaf:name ""Naci Bostancı""@en ;
        foaf:birthName ?birthName .
  
  OPTIONAL {
    ?naci dbo:occupation ?officeNaci .
  }
}
```",5,6,6,3,2,3,3,71,0,0,1,0,0.0,0
274,22,val,"Give me the band member of the person born, that is a musical artist, as John Birks Gillespie and professional in the designer of Tetris Classic.","SELECT ?result WHERE { ?v2 <http://dbpedia.org/property/birthName> ""John Birks Gillespie""@en . ?result <http://dbpedia.org/ontology/associatedMusicalArtist> ?v2 . ?result <http://dbpedia.org/property/occupation> ?v3 . <http://dbpedia.org/resource/Tetris_Classic> <http://dbpedia.org/property/designer> ?v3 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. }","```sparql
SELECT ?bandMember WHERE {
  # Find John Birks Gillespie (Dizzy Gillespie)
  ?gillespie dbo:birthName ""John Birks Gillespie""@en .
  ?gillespie dbo:profession dbr:Musical_artist .

  # Find band members associated with Dizzy Gillespie
  ?gillespie dbo:bandMember ?bandMember .
  
  # Filter to ensure the person is a musical artist
  ?bandMember dbo:profession dbr:Musical_artist .
}
```",4,5,5,2,2,2,3,28,0,0,8,0,0.0,0
216,19,val,Give me the office of the mayor of Ros Bates and administration of  and party of Campbell Newman.,"SELECT ?result WHERE { <http://dbpedia.org/resource/Campbell_Newman> <http://dbpedia.org/ontology/party> ?result . ?v2 <http://dbpedia.org/property/office> ?result . <http://dbpedia.org/resource/Ros_Bates> <http://dbpedia.org/property/leader> ?v2 . ?result <http://dbpedia.org/property/leader> """"@en . }","```sparql
SELECT ?rosBatesOffice ?campbellNewmanAdministration ?campbellNewmanParty WHERE {
  # Find the office of Ros Bates
  ?rosBates dbo:office ?rosBatesOffice .
  ?rosBates rdfs:label ""Ros Bates""@en .

  # Find the administration of Campbell Newman
  ?campbellNewman dbo:memberOf ?administration .
  ?administration dbo:leader ?campbellNewman .
  ?campbellNewman rdfs:label ""Campbell Newman""@en .

  # Find the party of Campbell Newman
  ?campbellNewman dbo:party ?campbellNewmanParty .
}
```",4,4,5,2,3,2,3,28,0,0,1,0,0.0,0
917,52,val,"Give me the child of Kekūanāoʻa and child of the father of Keʻelikōlani and parent of the child, that is a royalty, of the mayor of Hawaiian Kingdom.","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/parent> ?v4 . ?result <http://dbpedia.org/property/father> ""Kekūanāoʻa""@en . ?v1 <http://dbpedia.org/property/father> ?v3 . ?result <http://dbpedia.org/ontology/child> ?v1 . <http://dbpedia.org/resource/Keʻelikōlani> <http://dbpedia.org/property/father> ?v4 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. <http://dbpedia.org/resource/Hawaiian_Kingdom> <http://dbpedia.org/property/leader> ?v3 . }","```sparql
SELECT ?childOfKekuanaoa ?royalChild ?parentMayor WHERE {
  # Find Kekūanāoʻa and his child
  ?kekuanaoa rdfs:label ""Kekūanāoʻa""@en .
  ?kekuanaoa dbo:child ?childOfKekuanaoa .

  # Find Keʻelikōlani's father and his royal child
  OPTIONAL {
    ?keelikolani rdfs:label ""Keʻelikōlani""@en .
    ?keelikolani dbo:parent ?fatherKeelikolani .
    ?fatherKeelikolani dbo:child ?royalChild .
    FILTER (regex(str(?royalChild), ""Royalty"", ""i""))
  }

  # Find the parent of this royal child who is a mayor
  OPTIONAL {
    ?royalChild dbo:parent ?parentMayor .
    ?parentMayor rdfs:label ?mayorLabel .
    FILTER regex(?mayorLabel, ""mayor of Hawaiian Kingdom"", ""i"")
  }
}
```",6,7,7,3,3,3,3,71,2,4,0,0.3333333333333333,1.0,0.5
216,53,val,"Give me the team of the person born, that is a sports manager and a soccer manager and a soccer player, on 1983-12-20 and player in the coach of the reference, that is an organisation and a soccer club, to Croatia U21 and player in Mario Ivanković.","SELECT ?result WHERE { <http://dbpedia.org/resource/Mario_Ivanković> <http://dbpedia.org/ontology/team> ?result . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?v1 <http://dbpedia.org/ontology/birthDate> ""1983-12-20""^^<http://www.w3.org/2001/XMLSchema#date> . ?v3 <http://xmlns.com/foaf/0.1/name> ""Croatia U21""@en . ?v2 <http://dbpedia.org/ontology/team> ?result . ?v3 <http://dbpedia.org/ontology/coach> ?v2 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsManager>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerManager>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerClub>. ?result <http://dbpedia.org/ontology/coach> ?v1 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerPlayer>. }","```sparql
SELECT ?team WHERE {
  # Identify the person with the specified birthdate and roles
  ?person dbo:birthDate ""1983-12-20""^^xsd:date ;
          a dbo:SoccerPlayer, dbo:SoccerManager, dbo:SportsManager .

  # Ensure the person is associated with an organization that is a soccer club
  ?organization dbo:coach ?person ;
                a dbo:SoccerClub .

  # Check if the person coached Croatia U21
  ?croatiaU21 dbo:coach ?person .
  ?croatiaU21 rdfs:label ""Croatia national under-21 football team""@en .

  # Ensure the person played under Mario Ivanković
  ?marioIvankovic dbo:player ?team ;
                  rdfs:label ""Mario Ivanković""@en .
  
  # Link the player to the organization
  ?organization dbo:player ?team .

}
```",6,11,7,3,3,3,3,71,0,0,1,0,0.0,0
926,45,val,"Give me the successor of Mustafa III and child of the father, that is a royalty, of the parent, that is a royalty, of Beyhan Sultan (daughter of Mustafa III) and father of Mahmud II.",SELECT ?result WHERE { ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. <http://dbpedia.org/resource/Mahmud_II> <http://dbpedia.org/property/father> ?result . ?v0 <http://dbpedia.org/ontology/child> ?result . <http://dbpedia.org/resource/Mustafa_III> <http://dbpedia.org/ontology/successor> ?result . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. <http://dbpedia.org/resource/Beyhan_Sultan_(daughter_of_Mustafa_III)> <http://dbpedia.org/ontology/parent> ?v3 . ?v3 <http://dbpedia.org/property/father> ?v0 . },"```sparql
SELECT ?successor WHERE {
  # Find Mustafa III's successor
  ?mustafaIII dbo:succession ?successor .
  ?mustafaIII rdfs:label ""Mustafa III""@en .

  # Identify Beyhan Sultan's parent (Mustafa III)
  ?beyhanSultan dbo:parent ?mustafaIII .
  ?beyhanSultan rdfs:label ""Beyhan Sultan""@en .

  # Find Mustafa III's children who are royalty
  OPTIONAL {
    ?child dbo:parent ?mustafaIII .
    FILTER (regex(str(?child), ""royalty"", ""i""))
  }

  # Check which child is the father of Mahmud II
  OPTIONAL {
    ?fatherOfMahmudII dbo:parent ?mahmudII .
    ?mahmudII rdfs:label ""Mahmud II""@en .
    FILTER (?child = ?fatherOfMahmudII)
  }
}
```",5,7,6,3,3,3,3,71,0,0,1,0,0.0,0
976,41,val,"Give me the office of Naci Bostancı and office of the leader, that is a politician, of Grand National Assembly of Turkey and office of the mayor, that is a politician and an office holder and Turkish, of Nation Alliance (Turkey).",SELECT ?result WHERE { <http://dbpedia.org/resource/Nation_Alliance_(Turkey)> <http://dbpedia.org/property/leader> ?v4 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v4 <http://dbpedia.org/property/office> ?result . <http://dbpedia.org/resource/Grand_National_Assembly_of_Turkey> <http://dbpedia.org/ontology/leader> ?v2 . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. <http://dbpedia.org/resource/Naci_Bostancı> <http://dbpedia.org/property/office> ?result . ?v4 <http://dbpedia.org/ontology/nationality> <http://dbpedia.org/resource/Turkey>. ?v2 <http://dbpedia.org/property/office> ?result . },"```sparql
SELECT ?naciOffice ?leaderOffice ?mayorOffice WHERE {
  # Find Naci Bostancı's office
  ?naci dbo:office ?naciOffice .
  ?naci rdfs:label ""Naci Bostancı""@en .

  # Find the leader of Grand National Assembly of Turkey who is a politician and their office
  OPTIONAL {
    ?leader dbo:positionHeld ?assemblyPosition .
    ?assemblyPosition dbo:organization ?grandNationalAssembly .
    ?grandNationalAssembly rdfs:label ""Grand National Assembly of Turkey""@en .
    FILTER EXISTS { ?leader rdf:type dbo:Politician . }
    ?leader dbo:office ?leaderOffice .
  }

  # Find the mayor associated with Nation Alliance (Turkey) who is a politician, an office holder, and Turkish
  OPTIONAL {
    ?mayor dbo:positionHeld ?nationAlliancePosition .
    ?nationAlliancePosition dbo:organization ?nationAlliance .
    ?nationAlliance rdfs:label ""Nation Alliance (Turkey)""@en .
    FILTER EXISTS { ?mayor rdf:type dbo:Politician . }
    FILTER EXISTS { ?mayor rdf:type dbo:OfficeHolder . }
    FILTER EXISTS { ?mayor dbo:nationality dbr:Turkey . }
    ?mayor dbo:office ?mayorOffice .
  }
}
```",5,9,6,2,3,3,3,71,0,0,1,0,0.0,0
645,44,val,"Give me the leader of the office, that is a government agency and an organisation, of Camilo Menéndez Tolosa and military force of the force, that is an event and a military conflict and a societal event, of Francisco Largo Caballero and commander in Battle of Jarama.",SELECT ?result WHERE { ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/GovernmentAgency>. <http://dbpedia.org/resource/Camilo_Menéndez_Tolosa> <http://dbpedia.org/property/office> ?v2 . <http://dbpedia.org/resource/Battle_of_Jarama> <http://dbpedia.org/ontology/commander> ?result . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?v4 <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Francisco_Largo_Caballero> . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?v2 <http://dbpedia.org/ontology/leader> ?result . ?result <http://dbpedia.org/ontology/battle> ?v4 . },"```sparql
SELECT ?leaderOfOffice ?militaryForce ?battleCommander WHERE {
  # Find the leader of the office for Camilo Menéndez Tolosa
  ?camilo dbo:officeLeader ?leaderOfOffice .
  ?camilo rdfs:label ""Camilo Menéndez Tolosa""@en .

  # Find military force associated with Francisco Largo Caballero that is an event and conflict
  OPTIONAL {
    ?francisco dbo:militaryForce ?militaryForce .
    ?francisco rdfs:label ""Francisco Largo Caballero""@en .
    ?militaryForce rdf:type dbo:Event ;
                   rdf:type dbo:MilitaryConflict ;
                   rdf:type dbo:SocietalEvent .
  }

  # Find commander in Battle of Jarama
  OPTIONAL {
    ?battle rdfs:label ""Battle of Jarama""@en .
    ?battle dbo:commander ?battleCommander .
  }
}
```",5,10,6,2,3,3,3,71,0,0,1,0,0.0,0
773,53,val,"Give me the parent of Carloman of Bavaria and spouse of the father of the parent of Bernard (son of Charles the Fat) and parent of the child, that is a royalty, of Louis the German.",SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?result <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Carloman_of_Bavaria> . ?v1 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Louis_the_German> . ?v1 <http://dbpedia.org/ontology/parent> ?result . ?v3 <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Bernard_(son_of_Charles_the_Fat)> . ?v2 <http://dbpedia.org/ontology/spouse> ?result . ?v3 <http://dbpedia.org/property/father> ?v2 . },"```sparql
SELECT ?parentOfCarloman ?spouse WHERE {
  # Step 1: Parent of Carloman of Bavaria
  ?carloman dbo:parent ?parentOfCarloman .
  ?carloman rdfs:label ""Carloman of Bavaria""@en .

  # Step 2 and 3: Bernard (son of Charles the Fat) and his parent's father
  ?bernard dbo:parent ?parentBernard .
  ?bernard rdfs:label ""Bernard, son of Charles the Fat""@en .
  
  ?parentBernard dbo:parent ?grandParentBernard .

  # Step 4: Spouse of Bernard’s Parent's Father
  OPTIONAL {
    ?grandParentBernard dbo:spouse ?spouse .
  }

  # Step 5 and 6: Child of Louis the German who is royalty, and their parent
  OPTIONAL {
    ?louisChild dbo:parent ?royalParent .
    ?louisChild rdfs:label ?childLabel .
    ?louisChild dbo:parent ?louisTheGerman .
    ?louisTheGerman rdfs:label ""Louis the German""@en .

    FILTER (regex(str(?childLabel), ""King|Queen|Prince|Princess"", ""i""))
  }

  # Ensure the spouse is also the parent of this royal child
  OPTIONAL {
    ?royalParent = ?spouse .
  }
}
```",6,7,7,3,3,3,3,71,0,0,1,0,0.0,0
773,44,val,"Give me the parent of the child, that is a royalty, of Louis the German and spouse of Louis the German and parent of the successor of Charles the Bald.",SELECT ?result WHERE { ?v2 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Louis_the_German> . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. <http://dbpedia.org/resource/Charles_the_Bald> <http://dbpedia.org/ontology/successor> ?v4 . <http://dbpedia.org/resource/Louis_the_German> <http://dbpedia.org/ontology/spouse> ?result . ?result <http://dbpedia.org/ontology/child> ?v4 . ?v2 <http://dbpedia.org/ontology/parent> ?result . },"```sparql
SELECT ?parent WHERE {
  # Find Louis the German's child who is royalty
  ?child dbo:parent ?louisGerman .
  ?louisGerman rdfs:label ""Louis the German""@en .
  OPTIONAL { 
    ?child dbo:title ?royaltyTitle .
    FILTER (regex(str(?royaltyTitle), ""King|Queen|Emperor|Empress"", ""i""))
  }

  # Find spouse of Louis the German
  OPTIONAL {
    ?louisGerman dbo:spouse ?spouse .
  }

  # Find successor of Charles the Bald and their parent
  OPTIONAL {
    ?charlesBald dbo:succeededBy ?successor .
    ?charlesBald rdfs:label ""Charles the Bald""@en .
    ?successor dbo:parent ?parent .
  }

  # Ensure all conditions are met
  FILTER (?child = ?spouse && ?spouse = ?parent)
}
```",5,6,6,2,3,3,3,71,0,0,1,0,0.0,0
98,21,val,"Give me the entity in the region, that is a country, of Philippine Standard Time and region of Philippine Standard Time and birth place of Paolo Ballesteros.",SELECT ?result WHERE { ?v1 <http://dbpedia.org/property/timeZone> <http://dbpedia.org/resource/Philippine_Standard_Time> . ?result <http://dbpedia.org/ontology/timeZone> <http://dbpedia.org/resource/Philippine_Standard_Time> . ?result <http://dbpedia.org/ontology/country> ?v1 . <http://dbpedia.org/resource/Paolo_Ballesteros> <http://dbpedia.org/ontology/birthPlace> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. },"```sparql
SELECT ?entity WHERE {
  # Find the region associated with Philippine Standard Time
  ?pst dbo:timeZone ""Philippine Standard Time"" .
  
  # Get the country of this time zone
  ?region dbo:country ?country .
  ?region rdfs:label ?regionLabel .

  # Get the birthplace of Paolo Ballesteros
  ?paolo dbo:birthPlace ?entity .
  ?paolo rdfs:label ""Paolo Ballesteros""@en .

  # Ensure the entity is a region and matches the country associated with PST
  FILTER (str(?regionLabel) = str(?entity))
}
```",4,5,5,2,3,2,3,28,0,0,2,0,0.0,0
987,55,val,"Give me the birth place of the actor of All for Free and birth place of the band, that is an artist and a musical artist, of Šako Polumenta and entity in the region, that is a country, of Central European Time.",SELECT ?result WHERE { ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. ?v5 <http://dbpedia.org/ontology/birthPlace> ?result . ?result <http://dbpedia.org/ontology/country> ?v0 . ?v0 <http://dbpedia.org/property/timeZone> <http://dbpedia.org/resource/Central_European_Time> . <http://dbpedia.org/resource/Šako_Polumenta> <http://dbpedia.org/ontology/associatedMusicalArtist> ?v2 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. <http://dbpedia.org/resource/All_for_Free> <http://dbpedia.org/property/starring> ?v5 . ?v2 <http://dbpedia.org/ontology/birthPlace> ?result . },"```sparql
# Query to find the birth place of the actor of ""All for Free""
SELECT ?actorBirthPlace WHERE {
  ?movie dbo:title ""All for Free""@en .
  ?movie dbo:starring ?actor .
  ?actor dbo:birthPlace ?actorBirthPlace .
}

# Query to find the birth place of the band associated with Šako Polumenta
SELECT ?bandBirthPlace WHERE {
  ?person rdfs:label ""Šako Polumenta""@en .
  ?person dbo:member ?band .
  ?band rdf:type dbo:MusicalArtist ;
        rdf:type dbo:Artist .
  ?band dbo:birthPlace ?bandBirthPlace .
}

# Query to find a country in the Central European Time region
SELECT DISTINCT ?country WHERE {
  ?country dbo:timeZone dbr:Central_European_Time .
}
LIMIT 1
```",6,9,7,2,3,3,3,71,0,0,1,0,0.0,0
158,16,val,"Give me the party of the successor, that is a prime minister and an office holder and a politician, of André Tardieu and entity in the award, that is a country, of Adelbert Cronkhite.",SELECT ?result WHERE { <http://dbpedia.org/resource/Adelbert_Cronkhite> <http://dbpedia.org/property/awards> ?v2 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. ?v3 <http://dbpedia.org/ontology/party> ?result . <http://dbpedia.org/resource/André_Tardieu> <http://dbpedia.org/ontology/successor> ?v3 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?result <http://dbpedia.org/ontology/country> ?v2 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/PrimeMinister>. },"```sparql
SELECT ?party ?country WHERE {
  # Find André Tardieu and his successor who is a prime minister, office holder, and politician
  ?tardieu dbo:successor ?successor .
  ?tardieu rdfs:label ""André Tardieu""@en .

  OPTIONAL {
    ?successor rdf:type dbo:PrimeMinister ;
               dbo:officeHolder true ;
               dbo:politician true .
    ?successor dbo:party ?party .
  }

  # Find Adelbert Cronkhite and his awards
  ?cronkhite dbo:award ?award .
  ?cronkhite rdfs:label ""Adelbert Cronkhite""@en .

  OPTIONAL {
    ?award dbo:country ?country .
  }
}
```",4,8,5,2,2,3,2,20,0,0,1,0,0.0,0
715,51,val,"Give me the leader of the office, that is a government agency and an organisation, of the reference to Carlos Franco Iribarnegaray and commander in the force of Francisco Largo Caballero.","SELECT ?result WHERE { ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?v4 <http://dbpedia.org/ontology/commander> ?result . ?v1 <http://dbpedia.org/property/office> ?v2 . ?v2 <http://dbpedia.org/ontology/leader> ?result . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/GovernmentAgency>. ?v4 <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Francisco_Largo_Caballero> . ?v1 <http://xmlns.com/foaf/0.1/name> ""Carlos Franco Iribarnegaray""@en . }","```sparql
SELECT DISTINCT ?commonEntity WHERE {
  # Find organization or agency related to Carlos Franco Iribarnegaray
  ?carlos dbo:officeHolder ?position .
  ?carlos rdfs:label ""Carlos Franco Iribarnegaray""@en .
  
  # Find military unit and leader associated with Francisco Largo Caballero
  ?francisco dbo:militaryUnit ?unit .
  ?francisco rdfs:label ""Francisco Largo Caballero""@en .
  ?unit dbo:leader ?commonEntity .

  # Ensure the common entity is an organization or government agency
  ?commonEntity a dbo:GovernmentAgency ;
               a dbo:Organization .
}
```",5,7,6,3,2,3,3,71,0,0,1,0,0.0,0
83,7,val,Give me the player in the person born on 1995-07-07 and player in Albert Edward (soccer).,"SELECT ?result WHERE { <http://dbpedia.org/resource/Albert_Edward_(soccer)> <http://dbpedia.org/ontology/team> ?result . ?v0 <http://dbpedia.org/ontology/birthDate> ""1995-07-07""^^<http://www.w3.org/2001/XMLSchema#date> . ?v0 <http://dbpedia.org/ontology/team> ?result . }","```sparql
SELECT ?person1 ?team1 ?person2 ?team2 WHERE {
  # Person born on 1995-07-07 and their team
  ?person1 dbo:birthDate ""1995-07-07""^^xsd:date .
  OPTIONAL { 
    ?person1 dbo:member ?team1 .
    ?team1 rdf:type dbo:SoccerClub .
  }

  # Albert Edward in soccer and his teams
  ?person2 rdfs:label ""Albert Edward""@en .
  OPTIONAL {
    ?person2 dbo:member ?team2 .
    ?team2 rdf:type dbo:SoccerClub .
  }
}
```",3,3,4,2,2,2,2,9,0,35,1,0.0,0.0,0
987,40,val,"Give me the birth place of the band, that is an artist and a musical artist, of the band, that is an artist, of Dado Polumenta and entity in Montenegro and birth place of Moamer Kasumović.",SELECT ?result WHERE { ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. ?v3 <http://dbpedia.org/ontology/associatedMusicalArtist> ?v1 . ?v1 <http://dbpedia.org/ontology/birthPlace> ?result . <http://dbpedia.org/resource/Dado_Polumenta> <http://dbpedia.org/ontology/associatedMusicalArtist> ?v3 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?result <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Montenegro> . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. <http://dbpedia.org/resource/Moamer_Kasumović> <http://dbpedia.org/ontology/birthPlace> ?result . },"```sparql
SELECT ?bandBirthPlace WHERE {
  # Step 1: Find Dado Pulević's Band
  ?dado dbo:memberOfBand ?band .
  ?dado rdfs:label ""Dado Polumenta""@en .

  # Step 2: Identify the Artist of that Band
  ?artist dbo:memberOfBand ?band ;
          a dbo:MusicalArtist, dbo:Artist .

  # Step 3: Find Moamer Kasumović's Birth Place
  ?moamer dbo:birthPlace ?kasumovicBirthPlace .
  ?moamer rdfs:label ""Moamer Kasumović""@en .

  # Step 4: Identify Entity in Montenegro related to the Band
  OPTIONAL {
    ?entity dbo:location ?montenegro ;
            dbo:relatedBand ?band .
    ?montenegro rdfs:label ""Montenegro""@en .
  }

  # Step 5: Find Birth Place of the Artist from Step 2
  ?artist dbo:birthPlace ?bandBirthPlace .

}
```",5,8,6,3,3,3,3,71,0,0,1,0,0.0,0
433,53,val,"Give me the professional in the profession of Bob Marley and associated musical artist of Bill Evans and associated musical artist of the person born, that is a musical artist and an artist, as the persona of Paul Chambers.",SELECT ?result WHERE { <http://dbpedia.org/resource/Paul_Chambers> <http://xmlns.com/foaf/0.1/givenName> ?v3 . ?v2 <http://dbpedia.org/property/birthName> ?v3 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?v2 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . <http://dbpedia.org/resource/Bill_Evans> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . <http://dbpedia.org/resource/Bob_Marley> <http://dbpedia.org/property/occupation> ?v1 . ?result <http://dbpedia.org/property/occupation> ?v1 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. },"```sparql
SELECT ?bobMarleyProfession ?billEvansArtist ?paulChambersAssociatedArtist WHERE {
  # Find Bob Marley's profession
  ?bobMarley dbo:occupation ?bobMarleyProfession .
  ?bobMarley rdfs:label ""Bob Marley""@en .

  # Find Bill Evans' associated musical artist
  OPTIONAL { 
    ?billEvans dbo:associatedMusicalArtist ?billEvansArtist .
    ?billEvans rdfs:label ""Bill Evans (musician)""@en .
  }

  # Find Paul Chambers' associated artist
  OPTIONAL {
    ?paulChambers dbo:associatedMusicalArtist ?paulChambersAssociatedArtist .
    ?paulChambers rdfs:label ""Paul Chambers (bassist)""@en .
    FILTER EXISTS { ?paulChambers dbo:occupation ?occupation . 
                   FILTER (?occupation IN (dbo:Musician, dbo:Artist)) }
  }
}
```",6,8,7,3,3,3,3,71,0,1,1,0.0,0.0,0
507,44,val,"Give me the professional in the profession of Guy Ferland and spouse of Anne V. Coates and director of the movie, that is a movie and a work, with Beryl Reid.",SELECT ?result WHERE { ?result <http://dbpedia.org/property/occupation> ?v2 . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. <http://dbpedia.org/resource/Guy_Ferland> <http://dbpedia.org/property/occupation> ?v2 . ?v4 <http://dbpedia.org/property/starring> <http://dbpedia.org/resource/Beryl_Reid> . ?result <http://dbpedia.org/ontology/spouse> <http://dbpedia.org/resource/Anne_V._Coates> . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Film>. ?v4 <http://dbpedia.org/ontology/director> ?result . },"```sparql
SELECT ?director WHERE {
  # Find Guy Ferland's profession
  ?guyFerland dbo:profession ?profession .
  ?guyFerland rdfs:label ""Guy Ferland""@en .

  # Find Anne V. Coates' spouse
  ?anneCoates dbo:spouse ?spouse .
  ?anneCoates rdfs:label ""Anne V. Coates""@en .

  # Check if Guy Ferland is the spouse of Anne V. Coates
  FILTER (?guyFerland = ?spouse)

  # Find a movie directed by this person that features Beryl Reid
  ?movie dbo:director ?director .
  ?movie dbo:starring ?actor .
  ?actor rdfs:label ""Beryl Reid""@en .

  # Ensure the director is the same as Guy Ferland
  FILTER (?guyFerland = ?director)
}
```",5,7,6,2,3,3,3,71,0,0,1,0,0.0,0
917,55,val,"Give me the child of the father of Keʻelikōlani and child of the father of Kamehameha IV and parent of the child, that is a royalty, of Kamehameha IV.",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/child> ?v2 . <http://dbpedia.org/resource/Kamehameha_IV> <http://dbpedia.org/property/father> ?v0 . <http://dbpedia.org/resource/Keʻelikōlani> <http://dbpedia.org/property/father> ?v5 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?result <http://dbpedia.org/ontology/parent> ?v5 . ?result <http://dbpedia.org/property/father> ?v0 . ?v2 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Kamehameha_IV> . },"```sparql
SELECT ?parent WHERE {
  # Find father of Keʻelikōlani
  ?keelikoLani dbo:parent ?fatherKeelikoLani .
  ?keelikoLani rdfs:label ""Keʻelikōlani""@en .

  # Find child of the father of Keʻelikōlani (including Keʻelikōlani)
  OPTIONAL {
    ?childOfFatherKeelikoLani dbo:parent ?fatherKeelikoLani .
  }

  # Find father of Kamehameha IV
  ?kamehamehaIV dbo:parent ?fatherKamehamehaIV .
  ?kamehamehaIV rdfs:label ""Kamehameha IV""@en .

  # Find child of the father of Kamehameha IV (including Kamehameha IV)
  OPTIONAL {
    ?childOfFatherKamehamehaIV dbo:parent ?fatherKamehamehaIV .
  }

  # Determine parent of a royal child of Kamehameha IV
  OPTIONAL {
    ?royalChild dbo:parent ?kamehamehaIV .
    ?royalChild rdfs:label ?childLabel .
    FILTER (regex(str(?childLabel), ""Royal"", ""i""))
    ?parentOfRoyalChild dbo:parent ?royalChild .
  }
}
```",6,7,7,2,3,3,3,71,0,0,1,0,0.0,0
826,54,val,"Give me the successor of the child, that is a royalty, of the reference, that is a royalty, to Louis I and predecessor of Louis IV, Grand Duke of Hesse and spouse of the child of Johann Heinrich Appel.","SELECT ?result WHERE { ?v3 <http://dbpedia.org/property/father> ""Johann Heinrich Appel""@en . ?v5 <http://dbpedia.org/ontology/successor> ?result . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v0 <http://xmlns.com/foaf/0.1/name> ""Louis I""@en . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?result <http://dbpedia.org/ontology/successor> <http://dbpedia.org/resource/Louis_IV,_Grand_Duke_of_Hesse> . ?v3 <http://dbpedia.org/ontology/spouse> ?result . ?v0 <http://dbpedia.org/ontology/child> ?v5 . }","```sparql
SELECT ?successor WHERE {
  # Step 1: Find Louis I and his royal child
  ?louisI dbo:child ?royalChild .
  ?louisI rdfs:label ""Louis I, Grand Duke of Hesse""@en .
  FILTER (regex(str(?royalChild), ""Royal"", ""i""))

  # Step 2: Identify the reference to Louis I who is a predecessor to Louis IV
  ?reference dbo:predecessor ?louisIV .
  ?reference rdfs:label ""Louis I, Grand Duke of Hesse""@en .
  ?louisIV rdfs:label ""Louis IV, Grand Duke of Hesse""@en .

  # Step 3: Find Johann Heinrich Appel's child and their spouse
  ?appelChild dbo:parent ?johannHeinrichAppel .
  ?johannHeinrichAppel rdfs:label ""Johann Heinrich Appel""@en .
  ?appelChild dbo:spouse ?spouse .

  # Step 4: Find the successor of the royal child
  ?royalChild dbo:successor ?successor .
}
```",6,8,7,3,3,3,3,71,0,0,1,0,0.0,0
773,52,val,Give me the parent of Charles the Fat and parent of the successor of Charles the Bald and spouse of the father of the parent of Bernard (son of Charles the Fat).,SELECT ?result WHERE { ?v3 <http://dbpedia.org/property/father> ?v2 . ?result <http://dbpedia.org/ontology/child> ?v5 . <http://dbpedia.org/resource/Charles_the_Bald> <http://dbpedia.org/ontology/successor> ?v5 . <http://dbpedia.org/resource/Charles_the_Fat> <http://dbpedia.org/ontology/parent> ?result . ?v3 <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Bernard_(son_of_Charles_the_Fat)> . ?v2 <http://dbpedia.org/ontology/spouse> ?result . },"```sparql
SELECT ?charlesFatParent ?successorParent ?spouse WHERE {
  # Find Charles the Fat's parent
  ?charlesFat dbo:parent ?charlesFatParent .
  ?charlesFat rdfs:label ""Charles III, Holy Roman Emperor""@en .

  # Find Charles the Bald's successor and their parent
  ?charlesBald dbo:succesor ?successor .
  ?charlesBald rdfs:label ""Charles II, Holy Roman Emperor""@en .
  ?successor dbo:parent ?successorParent .

  # Find Bernard (son of Charles the Fat) and his ancestors
  ?bernard dbo:parent ?charlesFat .
  ?bernard rdfs:label ""Bernard, Duke of Saxony""@en .

  # Find spouse of the father of Charles the Fat's parent
  ?charlesFatParent dbo:spouse ?spouse .
}
```",6,6,7,3,3,3,3,71,0,0,1,0,0.0,0
459,22,val,"Give me the governor of the death place, that is a settlement, of Cliff Roquemore and governor of the administration, that is a politician, of Brad Henry.",SELECT ?result WHERE { ?v3 <http://dbpedia.org/property/governor> ?result . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. <http://dbpedia.org/resource/Cliff_Roquemore> <http://dbpedia.org/ontology/deathPlace> ?v2 . ?v2 <http://dbpedia.org/property/governor> ?result . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v3 <http://dbpedia.org/property/governor> <http://dbpedia.org/resource/Brad_Henry> . },"```sparql
SELECT ?cliffRoquemoreGovernor ?bradHenryGovernor WHERE {
  # Find the death place of Cliff Roquemore and ensure it is a settlement
  ?cliffRoquemore dbo:deathPlace ?deathPlace .
  ?cliffRoquemore rdfs:label ""Cliff Roquemore""@en .
  
  ?deathPlace rdf:type dbo:Settlement .
  
  # Find the governor of that settlement
  ?deathPlace dbo:governor ?cliffRoquemoreGovernor .

  # Find Brad Henry's political role and ensure it is a politician
  ?bradHenry dbo:officeHolder ?politicalRole .
  ?bradHenry rdfs:label ""Brad Henry""@en .
  
  ?politicalRole rdf:type dbo:Politician .

  # Find the governor during his administration
  ?politicalRole dbo:governor ?bradHenryGovernor .
}
```",4,6,5,2,2,2,3,28,0,0,1,0,0.0,0
329,20,val,"Give me the entity in Northern Ireland and entity in the region, that is a country, of Western European Time and birthplace of Eric Cross (writer).",SELECT ?result WHERE { ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. ?v3 <http://dbpedia.org/property/timeZone> <http://dbpedia.org/resource/Western_European_Time> . <http://dbpedia.org/resource/Eric_Cross_(writer)> <http://dbpedia.org/ontology/birthPlace> ?result . ?result <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Northern_Ireland> . ?result <http://dbpedia.org/ontology/country> ?v3 . },"```sparql
SELECT ?birthPlace ?country WHERE {
  # Find Eric Cross's birthplace
  ?cross dbo:birthPlace ?birthPlace .
  ?cross rdfs:label ""Eric Cross (writer)""@en .

  # Ensure the birthplace is in Northern Ireland
  ?birthPlace dbo:locationCountry ?northernIreland .
  ?northernIreland rdfs:label ""Northern Ireland""@en .

  # Find the country associated with Western European Time
  ?country dbo:timeZone ?wet .
  ?wet rdfs:label ""Western European Time""@en .

  # Ensure the birthplace is within this country's region
  ?birthPlace dbo:locationCountry ?country .
}
```",4,5,5,2,3,2,3,28,0,0,1,0,0.0,0
47,42,val,Give me the office of the awardee of Padma Vibhushan and office of Bidesh Ranjan Bose and office of the administration of Jagdeep Dhankhar.,SELECT ?result WHERE { ?v2 <http://dbpedia.org/property/governor> <http://dbpedia.org/resource/Jagdeep_Dhankhar> . ?v2 <http://dbpedia.org/property/office> ?result . ?v1 <http://dbpedia.org/property/office> ?result . ?v1 <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/Padma_Vibhushan> . <http://dbpedia.org/resource/Bidesh_Ranjan_Bose> <http://dbpedia.org/property/office> ?result . },"```sparql
SELECT ?awardeeOffice ?boseOffice ?dhankharOffice WHERE {
  # Find office of a specific Padma Vibhushan awardee (example: year or category needed)
  OPTIONAL {
    ?awardee dbo:award ""Padma Vibhushan"" .
    ?awardee dbo:office ?awardeeOffice .
    FILTER regex(str(?awardee), ""specific awardee name"", ""i"") # Replace with actual name if known
  }

  # Find office of Bidesh Ranjan Bose
  OPTIONAL {
    ?bose foaf:name ""Bidesh Ranjan Bose"" .
    ?bose dbo:office ?boseOffice .
  }
  
  # Find office of Jagdeep Dhankhar
  OPTIONAL {
    ?dhankhar foaf:name ""Jagdeep Dhankhar"" .
    ?dhankhar dbo:office ?dhankharOffice .
  }
}
```",5,5,6,2,3,3,3,71,0,0,1,0,0.0,0
791,47,val,"Give me the predecessor of the child of the child, that is an office holder and a royalty, of Emperor Go-Shirakawa and spouse of the spouse, that is a royalty, of Emperor Takakura.",SELECT ?result WHERE { ?v4 <http://dbpedia.org/property/father> ?v0 . ?result <http://dbpedia.org/ontology/spouse> ?v2 . ?result <http://dbpedia.org/ontology/successor> ?v4 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v0 <http://dbpedia.org/ontology/parent> <http://dbpedia.org/resource/Emperor_Go-Shirakawa> . ?v2 <http://dbpedia.org/ontology/spouse> <http://dbpedia.org/resource/Emperor_Takakura> . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. },"```sparql
SELECT ?predecessor WHERE {
  # Find Emperor Go-Shirakawa and his child
  ?goShirakawa dbo:child ?child1 .
  ?goShirakawa rdfs:label ""Emperor Go-Shirakawa""@en .

  # Find the child of this child who is an office holder and royalty
  ?child1 dbo:child ?grandChild .
  ?grandChild a dbo:OfficeHolder ;
              a dbo:RoyalPerson .

  # Determine the predecessor of this grandchild
  ?predecessor dbo:successor ?grandChild .

  # Find spouse of Emperor Takakura who is royalty
  OPTIONAL {
    ?takakura dbo:spouse ?royalSpouse .
    ?takakura rdfs:label ""Emperor Takakura""@en .
    FILTER (regex(str(?royalSpouse), ""Imperial Princess Shushi"", ""i""))
  }

  # Identify the spouse of this royal spouse
  OPTIONAL {
    ?royalSpouse dbo:spouse ?spouseOfSpouse .
    FILTER (regex(str(?royalSpouse), ""Imperial Princess Shushi"", ""i""))
  }
}
```",5,8,6,3,2,3,3,71,0,0,1,0,0.0,0
865,52,val,"Give me the father of Shahla Khatun and father of the child, that is a politician, of Abu Ahmad Abdul Hafiz and native of the residence, that is a country, of the person decedent at Patna.",SELECT ?result WHERE { ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. <http://dbpedia.org/resource/Shahla_Khatun> <http://dbpedia.org/property/father> ?result . ?v1 <http://dbpedia.org/ontology/deathPlace> <http://dbpedia.org/resource/Patna> . ?v1 <http://dbpedia.org/property/residence> ?v0 . ?v4 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Abu_Ahmad_Abdul_Hafiz> . ?result <http://dbpedia.org/ontology/birthPlace> ?v0 . ?v4 <http://dbpedia.org/property/father> ?result . },"```sparql
SELECT ?fatherOfShahla ?fatherOfPolitician ?nativeCountry WHERE {
  # Find Shahla Khatun and her father
  ?shahla dbo:parent ?fatherOfShahla .
  ?shahla rdfs:label ""Shahla Khatun""@en .

  # Find Abu Ahmad Abdul Hafiz's child who is a politician
  OPTIONAL {
    ?abuAhmad dbo:child ?politicianChild .
    ?abuAhmad rdfs:label ""Abu Ahmad Abdul Hafiz""@en .
    ?politicianChild rdf:type dbo:Politician .
    
    # Find the father of this politician child
    ?politicianChild dbo:parent ?fatherOfPolitician .
  }

  # Identify person decedent at Patna and their native country
  OPTIONAL {
    ?person dbo:deathPlace ?patnaDeath .
    ?patnaDeath rdfs:label ""Patna""@en .
    
    ?person dbo:nativeCountry ?nativeCountry .
  }
}
```",6,8,7,3,3,3,3,71,0,0,1,0,0.0,0
281,21,val,Give me the awardee of Medal bar and awardee of the award of Alfred Warden and commander in New Guinea campaign.,SELECT ?result WHERE { <http://dbpedia.org/resource/New_Guinea_campaign> <http://dbpedia.org/ontology/commander> ?result . ?result <http://dbpedia.org/property/awards> ?v0 . ?result <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/Medal_bar> . <http://dbpedia.org/resource/Alfred_Warden> <http://dbpedia.org/property/awards> ?v0 . },"```sparql
SELECT ?person WHERE {
  # Find the awardee of Medal Bar
  ?person dbo:award ?medalBar .
  ?medalBar rdfs:label ""Medal Bar""@en .

  # Find the awardee of an award associated with Alfred Warden
  OPTIONAL { 
    ?person dbo:award ?wardenAward .
    ?wardenAward rdfs:label ?wardenLabel .
    FILTER (CONTAINS(LCASE(?wardenLabel), ""alfred warden""))
  }

  # Find the commander in New Guinea campaign
  OPTIONAL {
    ?person dbo:militaryCommanderOf ?newGuineaCampaign .
    ?newGuineaCampaign rdfs:label ""New Guinea Campaign""@en .
  }
}
```",4,4,5,2,3,2,3,28,0,2,1,0.0,0.0,0
826,51,val,"Give me the predecessor of the parent of the child of Louis IV, Grand Duke of Hesse and successor of the child, that is a royalty, of Louis I, Grand Duke of Hesse.","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/successor> ?v2 . ?v4 <http://dbpedia.org/ontology/successor> ?result . <http://dbpedia.org/resource/Louis_I,_Grand_Duke_of_Hesse> <http://dbpedia.org/ontology/child> ?v4 . ?v1 <http://dbpedia.org/ontology/parent> <http://dbpedia.org/resource/Louis_IV,_Grand_Duke_of_Hesse> . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v1 <http://dbpedia.org/ontology/parent> ?v2 . }","```sparql
SELECT ?predecessor ?successor WHERE {
  # Find a child of Louis IV, Grand Duke of Hesse
  ?child dbo:parent ?louisIV .
  ?louisIV rdfs:label ""Louis IV, Grand Duke of Hesse""@en .

  # Determine the predecessor of Louis IV
  OPTIONAL {
    ?predecessor dbo:successor ?louisIV .
  }

  # Find a royal child of Louis I, Grand Duke of Hesse
  ?royalChild dbo:parent ?louisI .
  ?louisI rdfs:label ""Louis I, Grand Duke of Hesse""@en .
  FILTER (regex(str(?royalChild), ""Prince|Princess"", ""i""))

  # Determine the successor of this royal child
  OPTIONAL {
    ?successor dbo:predecessor ?royalChild .
  }
}
```",5,6,6,3,2,3,3,71,0,0,1,0,0.0,0
465,52,val,"Give me the successor of Renée of France and successor of the child of the parent of Ercole II d'Este, Duke of Ferrara and spouse of the child, that is a royalty, of Ferdinand I, Holy Roman Emperor.","SELECT ?result WHERE { <http://dbpedia.org/resource/Ercole_II_d'Este,_Duke_of_Ferrara> <http://dbpedia.org/ontology/parent> ?v3 . <http://dbpedia.org/resource/Renée_of_France> <http://dbpedia.org/ontology/successor> ?result . ?result <http://dbpedia.org/ontology/spouse> ?v5 . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v2 <http://dbpedia.org/ontology/successor> ?result . <http://dbpedia.org/resource/Ferdinand_I,_Holy_Roman_Emperor> <http://dbpedia.org/ontology/child> ?v5 . ?v2 <http://dbpedia.org/property/father> ?v3 . }","```sparql
SELECT ?successorRenée ?successorRoyalSpouse WHERE {
  # Find Renée of France and her successor
  ?renée dbo:parent ?successorRenée .
  ?renée rdfs:label ""Renée of France""@en .

  # Identify the parent of Ercole II d'Este, find their child
  ?ercoleParent dbo:child ?ercoleChild .
  ?ercoleParent rdfs:label ""Alfonso I d'Este, Duke of Ferrara""@en .

  # Find spouse of the child of Ferdinand I who is royalty
  OPTIONAL {
    ?ferdinandChild dbo:spouse ?royalSpouse .
    ?ferdinandChild dbo:parent ?ercoleChild .
    ?ferdinandParent rdfs:label ""Ferdinand I, Holy Roman Emperor""@en .
    
    # Ensure the spouse is recognized as royalty
    FILTER (regex(str(?royalSpouse), ""royalty"", ""i""))
  }

  # Find successor of this royal spouse
  OPTIONAL {
    ?royalSpouse dbo:parent ?successorRoyalSpouse .
  }
}
```",6,7,7,3,3,3,3,71,0,33501,1,0.0,0.0,0
130,15,val,"Give me the figure known as the film, that is a soccer club and an organisation, of the native, that is a coach and a college coach, of Madison, Alabama and entity in Tennessee.","SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Coach>. ?v0 <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Madison,_Alabama> . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerClub>. ?result <http://dbpedia.org/property/nickname> ?v1 . ?v1 <http://dbpedia.org/ontology/director> ?v0 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/CollegeCoach>. ?result <http://dbpedia.org/ontology/state> <http://dbpedia.org/resource/Tennessee> . }","```sparql
SELECT ?entity WHERE {
  # Find the coach from Madison, Alabama who has ties to Tennessee
  ?coach dbo:birthPlace ?madison .
  ?madison rdfs:label ""Madison, Alabama""@en .
  
  OPTIONAL { 
    ?coach dbo:worksFor ?tennesseeEntity .
    ?tennesseeEntity dbo:location ?tennessee .
    ?tennessee rdfs:label ""Tennessee""@en .
  }
  
  # Find the soccer club or organization known as a film
  ?entity dbo:relatedTo ?coach .
  ?entity rdf:type dbo:SoccerClub .
  OPTIONAL { 
    ?entity dbo:filmTitle ?film .
  }

  FILTER (regex(str(?entity), ""The Blind Side"", ""i""))
}
```",4,8,5,3,2,3,2,20,0,0,1,0,0.0,0
791,45,val,"Give me the father of the child, that is a royalty, of the father, that is a royalty and an office holder, of Emperor Antoku and predecessor of Emperor Antoku and spouse of Taira no Tokuko.",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/spouse> <http://dbpedia.org/resource/Taira_no_Tokuko> . ?v1 <http://dbpedia.org/property/father> ?result . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v1 <http://dbpedia.org/property/father> ?v0 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?result <http://dbpedia.org/ontology/successor> <http://dbpedia.org/resource/Emperor_Antoku> . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. <http://dbpedia.org/resource/Emperor_Antoku> <http://dbpedia.org/property/father> ?v0 . },"```sparql
SELECT ?father WHERE {
  # Identify Emperor Antoku
  ?antoku rdfs:label ""Emperor Antoku""@en .
  
  # Find his predecessor, who is also an office holder and spouse of Taira no Tokuko
  ?predecessor dbo:successor ?antoku ;
              a dbo:Monarch ;
              dbo:spouse ?tairaNoTokuko ;
              dbo:officeHolder ?office .
  ?tairaNoTokuko rdfs:label ""Taira no Tokuko""@en .

  # Find one child of this predecessor who is royalty
  ?predecessor dbo:child ?royalChild .
  ?royalChild a dbo:Monarch .

  # Identify the father of this royal child
  ?royalChild dbo:parent ?father .
}
```",5,8,6,3,3,3,3,71,0,0,1,0,0.0,0
978,17,val,Give me the band member of Enya and band member of the person born as the name of Chicane (musician).,SELECT ?result WHERE { ?v3 <http://dbpedia.org/property/birthName> ?v0 . ?result <http://dbpedia.org/ontology/associatedMusicalArtist> ?v3 . ?result <http://dbpedia.org/ontology/associatedMusicalArtist> <http://dbpedia.org/resource/Enya> . <http://dbpedia.org/resource/Chicane_(musician)> <http://xmlns.com/foaf/0.1/givenName> ?v0 . },"```sparql
SELECT ?enyaBandMember ?chicaneBandMember WHERE {
  # Find Enya and check for any related band members
  OPTIONAL {
    ?enya dbo:birthName ""Enya""@en .
    ?enya dbo:member ?enyaBandMember .
  }

  # Find Chicane (Nick Bracegirdle) and check for any related band members
  OPTIONAL {
    ?chicane dbo:birthName ""Nicholas Bracegirdle""@en ;
             rdfs:label ""Chicane""@en .
    ?chicane dbo:member ?chicaneBandMember .
  }
}
```",4,4,5,3,2,3,2,20,0,0,1,0,0.0,0
839,49,val,"Give me the band of the person born, that is a musical artist, as Kevin Richard Russell and band of the band, that is a musical artist, of the professional in Musician.","SELECT ?result WHERE { ?v0 <http://dbpedia.org/ontology/associatedMusicalArtist> ?v1 . ?v2 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?result <http://dbpedia.org/ontology/bandMember> ?v1 . ?v2 <http://dbpedia.org/property/birthName> ""Kevin Richard Russell""@en . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?v0 <http://dbpedia.org/property/occupation> ""Musician""@en . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. }","```sparql
# Query 1: Find Kevin Richard Russell's band
SELECT ?band WHERE {
  ?kevin dbo:musicalArtist <http://dbpedia.org/resource/Kevin_Russell> .
  ?kevin dbo:band ?band .
}

# Query 2: Assuming ""The Beatles"" as the professional in Musician for demonstration
SELECT ?subBand WHERE {
  ?beatles dbo:band <http://dbpedia.org/resource/The_Beatles> .
  ?beatles dbo:band ?subBand .
}
```",5,7,6,3,2,3,3,71,0,0,1,0,0.0,0
417,40,val,"Give me the child of Alexandrine of Mecklenburg-Schwerin and child of Christian X of Denmark and spouse of the parent, that is a royalty, of the child of Knud, Hereditary Prince of Denmark.","SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/child> ?v2 . ?result <http://dbpedia.org/ontology/parent> <http://dbpedia.org/resource/Alexandrine_of_Mecklenburg-Schwerin> . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?result <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Christian_X_of_Denmark> . ?v2 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Knud,_Hereditary_Prince_of_Denmark> . ?result <http://dbpedia.org/ontology/spouse> ?v1 . }","```sparql
SELECT ?spouse WHERE {
  # Step 1: Find the child of Alexandrine and Christian X
  ?child dbo:parent ?alexandrine .
  ?child dbo:parent ?christianX .
  ?alexandrine rdfs:label ""Alexandrine of Mecklenburg-Schwerin""@en .
  ?christianX rdfs:label ""Christian X of Denmark""@en .

  # Step 2: Identify the spouse of this child who is royalty
  OPTIONAL {
    ?child dbo:spouse ?spouse .
    FILTER (regex(str(?spouse), ""royalty"", ""i""))
  }

  # Step 3: Find the child of Knud, Hereditary Prince of Denmark
  ?knudsChild dbo:parent ?knud .
  ?knud rdfs:label ""Knud, Hereditary Prince of Denmark""@en .

  # Step 4: Identify the spouse of the parent (who must be royalty) of this child
  OPTIONAL {
    ?knudsParent dbo:parent ?knud .
    ?knudsParent dbo:spouse ?spouse .
    FILTER (regex(str(?spouse), ""royalty"", ""i""))
  }
}
```",5,6,6,3,3,3,3,71,0,0,1,0,0.0,0
554,16,val,Give me the leader of the birth place of The Legendary Tigerman and leader of the administration of Francisco da Costa Gomes.,SELECT ?result WHERE { ?v2 <http://dbpedia.org/property/leader> <http://dbpedia.org/resource/Francisco_da_Costa_Gomes> . ?v2 <http://dbpedia.org/property/leader> ?result . ?v3 <http://dbpedia.org/property/leader> ?result . <http://dbpedia.org/resource/The_Legendary_Tigerman> <http://dbpedia.org/ontology/birthPlace> ?v3 . },"```sparql
SELECT ?birthPlaceLeader ?administrationLeader WHERE {
  # Find birthplace of The Legendary Tigerman and its leader
  ?tigerman dbo:birthPlace ?birthPlace .
  ?tigerman rdfs:label ""The Legendary Tigerman""@en .
  
  OPTIONAL {
    ?birthPlace dbo:mayor ?birthPlaceLeader .
    FILTER NOT EXISTS { ?birthPlace dbo:governor ?governor } # Assuming mayor is the leader if governor doesn't exist
    FILTER EXISTS { ?birthPlace dbo:governor ?governor }
    BIND(?governor AS ?birthPlaceLeader)
  }

  # Find administration led by Francisco da Costa Gomes and its leader
  ?francisco dbo:positionHeld ?administration .
  ?francisco rdfs:label ""Francisco da Costa Gomes""@en .

  OPTIONAL {
    ?administration dbo:leader ?administrationLeader .
  }
}
```",4,4,5,2,2,3,2,20,0,0,3,0,0.0,0
715,52,val,"Give me the commander in the force, that is a military conflict, of the native of Morocco and leader of Ministry of the Air (Spain) and commander in the force of Francisco Largo Caballero.",SELECT ?result WHERE { ?v2 <http://dbpedia.org/ontology/commander> ?v3 . ?v2 <http://dbpedia.org/ontology/commander> ?result . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v3 <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Morocco> . <http://dbpedia.org/resource/Ministry_of_the_Air_(Spain)> <http://dbpedia.org/ontology/leader> ?result . ?v5 <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Francisco_Largo_Caballero> . ?v5 <http://dbpedia.org/ontology/commander> ?result . },"```sparql
SELECT ?commander WHERE {
  # Find a native of Morocco who was leader of the Ministry of the Air (Spain)
  ?person dbo:nationality dbr:Morocco .
  ?person dbo:position ""Minister of the Air""@en ;
          dbo:country dbr:Spain .

  # Check if this person was also a commander in the force with Francisco Largo Caballero
  OPTIONAL {
    ?conflict dbo:commander ?commander .
    ?caballero rdfs:label ""Francisco Largo Caballero""@en ;
               dbo:commanderInForce ?conflict .
    FILTER (?person = ?commander)
  }
}
```",6,7,7,3,3,3,3,71,0,0,1,0,0.0,0
715,50,val,"Give me the commander in the force of the mayor, that is an office holder and a politician and a president, of 1933 Spanish general election and leader of the office, that is a government agency and an organisation, of Carlos Franco Iribarnegaray.",SELECT ?result WHERE { ?v4 <http://dbpedia.org/ontology/commander> ?v0 . <http://dbpedia.org/resource/Carlos_Franco_Iribarnegaray> <http://dbpedia.org/property/office> ?v3 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/GovernmentAgency>. ?v4 <http://dbpedia.org/ontology/commander> ?result . <http://dbpedia.org/resource/1933_Spanish_general_election> <http://dbpedia.org/property/leader> ?v0 . ?v3 <http://dbpedia.org/ontology/leader> ?result . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/President>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. },"```sparql
SELECT ?commander WHERE {
  # Identify the mayor who was an office holder, politician, and president during the 1933 Spanish general election
  ?mayor dbo:officeHolder ?office .
  ?mayor dbo:president ?election .
  ?election dbo:date ""1933""^^xsd:gYear .
  
  # Find the commander in the force of this mayor
  ?mayor dbo:commander ?commander .

  # Identify Carlos Franco Iribarnegaray's government agency or organization and its leader
  ?franco dbo:leader ?leader .
  ?franco rdfs:label ""Carlos Franco Iribarnegaray""@en .
  
  # Ensure the office is a government agency or organization
  ?office rdf:type dbo:GovernmentAgency ;
          dbo:organization ?organization .

}
```",5,10,6,3,2,3,3,71,0,0,1,0,0.0,0
917,45,val,"Give me the child of Kekūanāoʻa and child of the father of the child, that is a royalty, of Kamehameha III and parent of Albert Kamehameha.",SELECT ?result WHERE { ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v3 <http://dbpedia.org/property/father> ?v0 . <http://dbpedia.org/resource/Kamehameha_III> <http://dbpedia.org/ontology/child> ?v3 . ?result <http://dbpedia.org/ontology/parent> <http://dbpedia.org/resource/Kekūanāoʻa> . ?result <http://dbpedia.org/property/father> ?v0 . ?result <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Albert_Kamehameha> . },"```sparql
SELECT ?childOfKekuanaoa ?royalParent ?parentOfAlbert WHERE {
  # Find child of Kekūanāoʻa
  ?kekuanaoa dbo:child ?childOfKekuanaoa .
  ?kekuanaoa rdfs:label ""Kekūanāoʻa""@en .

  # Find father of the child (who is royalty)
  OPTIONAL {
    ?childOfKekuanaoa dbo:parent ?royalParent .
    FILTER EXISTS { ?royalParent rdf:type dbo:RoyalFamilyMember }
  }

  # Find child of Kamehameha III and their royal parent
  OPTIONAL {
    ?kamehamehaIII dbo:child ?childOfKamehamehaIII .
    ?kamehamehaIII rdfs:label ""Kamehameha III""@en .

    ?childOfKamehamehaIII dbo:parent ?royalParent .
    FILTER EXISTS { ?royalParent rdf:type dbo:RoyalFamilyMember }
  }

  # Ensure the royal parent is also the parent of Albert Kamehameha
  OPTIONAL {
    ?albertKamehameha dbo:parent ?royalParent .
    ?albertKamehameha rdfs:label ""Albert Kamehameha""@en .
  }
}
```",5,6,6,3,3,3,3,71,1,6,0,0.14285714285714285,1.0,0.25
459,21,val,Give me the person born as the birth name of Kevin Stitt and governor of Oklahoma and governor of Dana Murphy.,SELECT ?result WHERE { <http://dbpedia.org/resource/Kevin_Stitt> <http://dbpedia.org/property/birthName> ?v1 . <http://dbpedia.org/resource/Oklahoma> <http://dbpedia.org/property/governor> ?result . ?result <http://dbpedia.org/property/birthName> ?v1 . <http://dbpedia.org/resource/Dana_Murphy> <http://dbpedia.org/property/governor> ?result . },"```sparql
SELECT ?birthName WHERE {
  # Find Kevin Stitt's birth name and confirm he is governor of Oklahoma
  ?person rdfs:label ""Kevin Stitt""@en .
  ?person dbo:birthName ?birthName .
  ?person dbo:officeHolder ?office .
  ?office dbo:positionTitle ""Governor of Oklahoma""@en .

  # Attempt to find Dana Murphy as a governor (though this might not yield results)
  OPTIONAL {
    ?dana rdfs:label ""Dana Murphy""@en .
    ?dama dbo:officeHolder ?office2 .
    ?office2 dbo:positionTitle ""Governor""@en .
  }
}
```",4,4,5,2,3,2,3,28,0,0,1,0,0.0,0
373,7,val,"Give me the professional in Singer, songwriter and writer of the work, that is a single and a musical work and a work and a soundtrack, of .","SELECT ?result WHERE { ?v2 <http://dbpedia.org/property/writer> """"@en . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Single>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?v2 <http://dbpedia.org/property/writer> ?result . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Song>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalWork>. ?result <http://dbpedia.org/property/occupation> ""Singer, songwriter""@en . }","```sparql
SELECT DISTINCT ?person WHERE {
  # Find persons with roles as singer, songwriter, and writer
  ?person dbo:occupation dbc:Singers .
  ?person dbo:occupation dbc:Songwriters .
  ?person dbo:occupation dbc:Writers .

  # Ensure they have created works that are singles, musical works, or soundtracks
  OPTIONAL { 
    ?work dbo:song ?person .
    FILTER (regex(str(?work), ""single"", ""i""))
  }
  OPTIONAL {
    ?work dbo:musicalWork ?person .
  }
  OPTIONAL {
    ?work dbo:soundtrack ?person .
  }

  # Ensure the person is linked to these works
  ?work dbo:creator ?person .
}
```",3,7,4,2,2,2,2,9,0,0,78,0,0.0,0
826,40,val,"Give me the spouse of the child of the father of Anna Magdalena Appel and predecessor of Louis IV, Grand Duke of Hesse and successor of Louis II, Grand Duke of Hesse.","SELECT ?result WHERE { <http://dbpedia.org/resource/Louis_II,_Grand_Duke_of_Hesse> <http://dbpedia.org/ontology/successor> ?result . ?v1 <http://dbpedia.org/ontology/spouse> ?result . <http://dbpedia.org/resource/Anna_Magdalena_Appel> <http://dbpedia.org/property/father> ?v2 . ?v1 <http://dbpedia.org/property/father> ?v2 . ?result <http://dbpedia.org/ontology/successor> <http://dbpedia.org/resource/Louis_IV,_Grand_Duke_of_Hesse> . }","```sparql
SELECT ?spouse WHERE {
  # Find the father of Anna Magdalena Bach
  ?annaMagdalena dbo:parent ?father .
  ?annaMagdalena rdfs:label ""Anna Magdalena Bach""@en .

  # Identify predecessor and successor of Louis IV, Grand Duke of Hesse
  ?louisIV dbo:predecessor ?predecessor .
  ?louisIV rdfs:label ""Louis IV, Grand Duke of Hesse""@en .

  ?louisII dbo:successor ?successor .
  ?louisII rdfs:label ""Louis II, Grand Duke of Hesse""@en .

  # Find the common individual who is both predecessor and successor
  FILTER (?predecessor = ?successor)
  
  # Identify the child of Anna Magdalena Bach's father who matches this person
  ?father dbo:child ?commonIndividual .
  FILTER (?commonIndividual = ?predecessor)

  # Find the spouse of this individual
  ?commonIndividual dbo:spouse ?spouse .
}
```",5,5,6,3,3,3,3,71,0,0,1,0,0.0,0
465,40,val,"Give me the spouse of Archduchess Barbara of Austria and successor of Renée of France and successor of the child of the parent of Ercole II d'Este, Duke of Ferrara.","SELECT ?result WHERE { <http://dbpedia.org/resource/Renée_of_France> <http://dbpedia.org/ontology/successor> ?result . ?v1 <http://dbpedia.org/ontology/successor> ?result . ?result <http://dbpedia.org/ontology/spouse> <http://dbpedia.org/resource/Archduchess_Barbara_of_Austria> . <http://dbpedia.org/resource/Ercole_II_d'Este,_Duke_of_Ferrara> <http://dbpedia.org/ontology/parent> ?v2 . ?v1 <http://dbpedia.org/property/father> ?v2 . }","```sparql
SELECT ?spouse WHERE {
  # Find spouse of Archduchess Barbara of Austria
  ?barbara dbo:spouse ?spouse .
  ?barbara rdfs:label ""Archduchess Barbara of Austria""@en .

  # Find successor of Renée of France
  OPTIONAL { 
    ?renee dbo:succeededBy ?successorRenée .
    ?renee rdfs:label ""Renée of France""@en .
  }

  # Find parent of Ercole II d'Este, Duke of Ferrara
  OPTIONAL {
    ?ercoleParent dbo:child ?ercoleII .
    ?ercoleII rdfs:label ""Ercole II d'Este, Duke of Ferrara""@en .
  }
  
  # Find successor of the child (Ercole II)
  OPTIONAL {
    ?ercoleII dbo:succeededBy ?successorErcole .
  }

  # Ensure the spouse is also the successor in both cases
  FILTER (?spouse = ?successorRenée && ?spouse = ?successorErcole)
}
```",5,5,6,3,3,3,3,71,0,0,1,0,0.0,0
839,42,val,"Give me the band of Peter Schorowsky and band of the person born, that is a musical artist, as Kevin Richard Russell and band of the band, that is a musical artist, of Charlie Huhn.","SELECT ?result WHERE { ?v2 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?v2 <http://dbpedia.org/property/birthName> ""Kevin Richard Russell""@en . <http://dbpedia.org/resource/Charlie_Huhn> <http://dbpedia.org/ontology/associatedMusicalArtist> ?v1 . ?result <http://dbpedia.org/ontology/bandMember> ?v1 . ?result <http://dbpedia.org/ontology/bandMember> <http://dbpedia.org/resource/Peter_Schorowsky> . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. }","```sparql
SELECT ?schorowskyBand ?russellBirthName ?russellBand ?huhnBand WHERE {
  # Find band of Peter Schorowsky
  ?person foaf:name ""Peter Schorowsky""@en .
  ?person dbo:band ?schorowskyBand .

  # Find birth name and band of Kevin Richard Russell
  ?kevin foaf:name ""Kevin Richard Russell""@en .
  OPTIONAL { 
    ?kevin dbo:birthName ?russellBirthName .
  }
  ?kevin dbo:band ?russellBand .

  # Ensure Kevin is a musical artist
  ?kevin rdf:type dbo:MusicalArtist .

  # Find band of Charlie Huhn and ensure it's a musical artist
  ?charlie foaf:name ""Charlie Huhn""@en .
  ?charlie dbo:band ?huhnBand .
  
  # Ensure the band is recognized as a musical artist
  ?huhnBand rdf:type dbo:MusicalArtist .
}
```",5,7,6,2,3,3,3,71,0,0,1,0,0.0,0
839,47,val,"Give me the band of the person born, that is a musical artist, as Kevin Richard Russell and band of the member of the band, that is a band and a group, of Peter Schorowsky.","SELECT ?result WHERE { ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Band>. ?v0 <http://dbpedia.org/ontology/bandMember> ?v4 . ?result <http://dbpedia.org/ontology/bandMember> ?v4 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Group>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. <http://dbpedia.org/resource/Peter_Schorowsky> <http://dbpedia.org/ontology/associatedMusicalArtist> ?v0 . ?v2 <http://dbpedia.org/property/birthName> ""Kevin Richard Russell""@en . ?v2 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . }","```sparql
SELECT ?kevinBand ?peterBand WHERE {
  # Find Kevin Richard Russell's band
  ?kevin dbpedia-owl:member ?kevinBand .
  ?kevin rdfs:label ""Kevin Russell""@en .

  # Find Peter Schorowsky and his band, ensuring it is both a band and a group
  ?peter dbo:member ?peterBand .
  ?peter rdfs:label ""Peter Schorowsky""@en .
  
  ?peterBand rdf:type dbpedia-owl:Band .
  ?peterBand rdf:type dbpedia-owl:Group .
}
```",5,8,6,3,2,3,3,71,0,0,1,0,0.0,0
192,15,val,"Give me the spouse of the spouse, that is a royalty, of the child of Charles II of Naples and child of Mary of Hungary, Queen of Naples.","SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/spouse> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?result <http://dbpedia.org/ontology/parent> <http://dbpedia.org/resource/Mary_of_Hungary,_Queen_of_Naples> . ?v0 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Charles_II_of_Naples> . ?v1 <http://dbpedia.org/ontology/spouse> ?v0 . }","```sparql
SELECT ?spouseOfSpouse WHERE {
  # Find the child of Charles II of Naples and Mary of Hungary
  ?child dbo:parent ?charlesII .
  ?child dbo:parent ?maryOfHungary .
  ?charlesII rdfs:label ""Charles II of Naples""@en .
  ?maryOfHungary rdfs:label ""Mary of Hungary, Queen of Naples""@en .

  # Find the spouse of this child
  ?child dbo:spouse ?royalSpouse .

  # Ensure the spouse is royalty (e.g., has a title or role)
  OPTIONAL { 
    ?royalSpouse dbo:title ?title .
    FILTER EXISTS { ?title rdfs:label ?label . }
  }

  # Find the spouse of this royal spouse
  ?royalSpouse dbo:spouse ?spouseOfSpouse .
}
```",4,5,5,3,2,3,2,20,1,4,0,0.2,1.0,0.33333333333333337
715,54,val,"Give me the commander in the force of the mayor, that is an office holder and a politician and a president, of 1933 Spanish general election and commander in the force, that is a military conflict, of Abd el-Krim and leader of Ministry of the Air (Spain).",SELECT ?result WHERE { <http://dbpedia.org/resource/1933_Spanish_general_election> <http://dbpedia.org/property/leader> ?v0 . ?v5 <http://dbpedia.org/ontology/commander> ?v0 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/President>. ?v5 <http://dbpedia.org/ontology/commander> ?result . ?v3 <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Abd_el-Krim> . ?v3 <http://dbpedia.org/ontology/commander> ?result . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. <http://dbpedia.org/resource/Ministry_of_the_Air_(Spain)> <http://dbpedia.org/ontology/leader> ?result . },"```sparql
SELECT ?commander WHERE {
  # Find the mayor who is an office holder, politician, and president in the 1933 Spanish general election
  ?mayor dbo:officeHolder true .
  ?mayor dbo:politicalPartyMember ?party .
  ?mayor dbo:president ?country .
  ?election dbo:date ""1933""^^xsd:gYear .
  ?mayor dbo:electedDuring ?election .

  # Find the commander in the force of this mayor
  ?mayor dbo:commanderInForce ?commander1 .

  # Identify Abd el-Krim's military conflict
  ?abdElKrim dbo:militaryConflict ?conflict .
  ?abdElKrim rdfs:label ""Abd el-Krim""@en .

  # Find the commander in the force related to this military conflict
  ?conflict dbo:commanderInForce ?commander2 .

  # Locate the leader of the Ministry of the Air (Spain)
  ?ministryLeader dbo:leaderOf ?ministry .
  ?ministry rdfs:label ""Ministry of the Air (Spain)""@en .

  # Find the commander in the force of this ministry leader
  ?ministryLeader dbo:commanderInForce ?commander3 .

  # Ensure all commanders are the same entity
  FILTER (?commander1 = ?commander2 && ?commander2 = ?commander3)
  BIND(?commander1 AS ?commander)
}
```",6,10,7,3,3,3,3,71,0,0,1,0,0.0,0
281,22,val,"Give me the commander in the war, that is an event and a military conflict, of Roy Boehm and awardee of the award, that is a military conflict, of Lawrence Moore Cosgrave.",SELECT ?result WHERE { <http://dbpedia.org/resource/Roy_Boehm> <http://dbpedia.org/ontology/battle> ?v2 . ?result <http://dbpedia.org/property/awards> ?v3 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. <http://dbpedia.org/resource/Lawrence_Moore_Cosgrave> <http://dbpedia.org/property/awards> ?v3 . ?v2 <http://dbpedia.org/ontology/commander> ?result . },"```sparql
SELECT DISTINCT ?commonIndividual WHERE {
  # Find the war involving Roy Boehm and its commander
  ?war dbo:participatedIn ?boehm .
  ?boehm rdfs:label ""Roy Boehm""@en .
  ?war dbo:commander ?commander .

  # Find the award related to Lawrence Moore Cosgrave and its awardee
  ?award dbo:awardee ?cosgraveAwardee .
  ?cosgraveAwardee rdfs:label ""Lawrence Moore Cosgrave""@en .
  
  # Check if the commander of Roy Boehm's war is the same as the awardee related to Lawrence Moore Cosgrave
  FILTER (?commander = ?cosgraveAwardee)
}
```",4,7,5,2,2,2,3,28,0,0,3,0,0.0,0
47,54,val,"Give me the office of Ajoy Mukherjee and office of the administration of Jagdeep Dhankhar and office of the awardee of the award, that is an award, of Mantu Ghosh.",SELECT ?result WHERE { ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Award>. ?v5 <http://dbpedia.org/property/office> ?result . <http://dbpedia.org/resource/Mantu_Ghosh> <http://dbpedia.org/property/awards> ?v0 . ?v3 <http://dbpedia.org/property/governor> <http://dbpedia.org/resource/Jagdeep_Dhankhar> . ?v3 <http://dbpedia.org/property/office> ?result . <http://dbpedia.org/resource/Ajoy_Mukherjee> <http://dbpedia.org/property/office> ?result . ?v5 <http://dbpedia.org/property/awards> ?v0 . },"```sparql
SELECT ?ajoyOffice ?jagdeepAdmin ?mantuAwardAwardee WHERE {
  # Office of Ajoy Mukherjee
  ?ajoy dbo:office ?ajoyOffice .
  ?ajoy rdfs:label ""Ajoy Mukherjee""@en .

  # Administration of Jagdeep Dhankhar (assuming a role like Vice President)
  ?jagdeep dbo:office ?jagdeepAdmin .
  ?jagdeep rdfs:label ""Jagdeep Dhankhar""@en .
  
  # Award received by Mantu Ghosh and the awardee
  OPTIONAL {
    ?mantu dbo:award ?award .
    ?mantu rdfs:label ""Mantu Ghosh""@en .
    ?award dbo:awardee ?mantuAwardAwardee .
  }
}
```",6,7,7,3,3,3,3,71,0,0,1,0,0.0,0
456,43,val,"Give me the band of Alan Doyle and professional in the alter ego of the reference, that is a fictional character, to Lamont Cranston (radio, film and television) and spouse of Danielle Spencer (Australian actress).","SELECT ?result WHERE { <http://dbpedia.org/resource/Danielle_Spencer_(Australian_actress)> <http://dbpedia.org/ontology/spouse> ?result . ?v0 <http://xmlns.com/foaf/0.1/name> ""Lamont Cranston (radio, film and television)""@en . ?v0 <http://dbpedia.org/property/alterEgo> ?v4 . ?result <http://dbpedia.org/property/occupation> ?v4 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/FictionalCharacter>. <http://dbpedia.org/resource/Alan_Doyle> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . }","```sparql
SELECT ?band ?alterEgo ?spouseProfession WHERE {
  # Find Alan Doyle's band
  ?doyle dbo:memberOfBand ?band .
  ?doyle rdfs:label ""Alan Doyle""@en .

  # Identify Lamont Cranston's alter ego
  ?cranston dbo:alterEgo ?alterEgo .
  ?cranston rdfs:label ""Lamont Cranston""@en .
  FILTER (regex(str(?alterEgo), ""The Shadow"", ""i""))

  # Find Danielle Spencer and her spouse's profession
  ?spencer dbo:spouse ?spouse .
  ?spencer rdfs:label ""Danielle Spencer""@en .
  ?spouse dbo:profession ?spouseProfession .
}
```",5,6,6,3,3,3,3,71,0,0,1,0,0.0,0
987,45,val,"Give me the birth place of Moamer Kasumović and birth place of Dado Polumenta and entity in the region, that is a country, of the time zone, that is a sports event, in Canicosa de la Sierra.",SELECT ?result WHERE { <http://dbpedia.org/resource/Moamer_Kasumović> <http://dbpedia.org/ontology/birthPlace> ?result . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. <http://dbpedia.org/resource/Dado_Polumenta> <http://dbpedia.org/ontology/birthPlace> ?result . ?result <http://dbpedia.org/ontology/country> ?v0 . <http://dbpedia.org/resource/Canicosa_de_la_Sierra> <http://dbpedia.org/ontology/timeZone> ?v3 . ?v0 <http://dbpedia.org/property/timeZone> ?v3 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsEvent>. },"```sparql
SELECT ?kasumovicBirthplace ?polumentaBirthplace ?country ?sportsEvent WHERE {
  # Birthplace of Moamer Kasumović (Slobodan Milošević)
  ?kasumovic dbo:birthPlace ?kasumovicBirthplace .
  ?kasumovic rdfs:label ""Moamer Kasumović""@en .

  # Birthplace of Dado Polumenta
  ?polumenta dbo:birthPlace ?polumentaBirthplace .
  ?polumenta rdfs:label ""Dado Polumenta""@en .

  # Region and country for Canicosa de la Sierra
  ?canicosa dbp:country ?country .
  ?canicosa rdfs:label ""Canicosa de la Sierra""@en .

  # Time zone of Canicosa de la Sierra
  OPTIONAL {
    ?canicosa dbo:timeZone ?timeZone .
  }

  # Sports event associated with the time zone
  OPTIONAL {
    ?event dbo:location ?timeZone ;
           a dbo:SportsEvent .
  }
}
```",5,7,6,3,3,3,3,71,0,0,1,0,0.0,0
124,49,val,"Give me the commander in the war, that is a societal event and a military conflict, of A Field Battery, Royal Australian Artillery and military force of the force, that is a societal event and a military conflict, of the person born on 1850-06-24.","SELECT ?result WHERE { ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. <http://dbpedia.org/resource/A_Field_Battery,_Royal_Australian_Artillery> <http://dbpedia.org/ontology/battle> ?v2 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?v0 <http://dbpedia.org/ontology/birthDate> ""1850-06-24""^^<http://www.w3.org/2001/XMLSchema#date> . ?v1 <http://dbpedia.org/ontology/commander> ?v0 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?result <http://dbpedia.org/ontology/battle> ?v1 . ?v2 <http://dbpedia.org/ontology/commander> ?result . }","```sparql
SELECT ?commander WHERE {
  # Identify the person born on 1850-06-24
  ?person dbo:birthDate ""1850-06-24""^^xsd:date .
  
  # Determine the military force associated with this person during a societal event and military conflict
  OPTIONAL { 
    ?person dbo:militaryService ?militaryForce .
    ?militaryForce dbo:participatedIn ?conflict .
    FILTER (regex(str(?conflict), ""war"", ""i""))
  }
  
  # Identify the war involving A Field Battery, Royal Australian Artillery
  ?battery rdfs:label ""A Field Battery, Royal Australian Artillery""@en ;
           dbo:participatedIn ?conflict .

  # Find the commander of that war
  ?conflict dbo:commander ?commander .
}
```",5,9,6,3,2,3,3,71,0,0,9,0,0.0,0
965,47,val,"Give me the spouse of the spouse of Princess Victoria of Hesse and by Rhine and parent of the child, that is a royalty, of the person born, that is a politician, on 1854-05-24.","SELECT ?result WHERE { ?v3 <http://dbpedia.org/property/father> ?v0 . ?v3 <http://dbpedia.org/ontology/parent> ?result . <http://dbpedia.org/resource/Princess_Victoria_of_Hesse_and_by_Rhine> <http://dbpedia.org/ontology/spouse> ?v1 . ?result <http://dbpedia.org/ontology/spouse> ?v1 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v0 <http://dbpedia.org/ontology/birthDate> ""1854-05-24""^^<http://www.w3.org/2001/XMLSchema#date> . }","```sparql
SELECT ?spouseOfSpouse WHERE {
  # Step 1: Identify Princess Victoria of Hesse and by Rhine
  ?princess rdfs:label ""Princess Victoria of Hesse and by Rhine""@en .
  
  # Step 2: Find her spouse
  ?princess dbo:spouse ?herSpouse .

  # Step 3: Find the spouse of one of her children (child's spouse)
  OPTIONAL {
    ?herSpouse dbo:child ?child .
    ?child dbo:spouse ?spouseOfChild .
  }

  # Step 4: Identify a politician born on 1854-05-24
  ?politician dbo:dateOfBirth ""1854-05-24""^^xsd:date ;
              dbo:occupation dbc:Politicians .

  # Step 5: Find the royal child of this politician
  OPTIONAL {
    ?politician dbo:child ?royalChild .
    ?royalChild rdf:type dbo:RoyalFamilyMember .
  }

  # Step 6: Find the parent (spouse) of the royal child
  OPTIONAL {
    ?royalChild dbo:parent ?spouseOfSpouse .
  }
}
```",5,7,6,3,2,3,3,71,0,0,1,0,0.0,0
926,40,val,Give me the child of Ahmed III and father of the father of the spouse of Neşerek Kadın and successor of Mustafa III.,SELECT ?result WHERE { <http://dbpedia.org/resource/Neşerek_Kadın> <http://dbpedia.org/ontology/spouse> ?v3 . ?v1 <http://dbpedia.org/property/father> ?result . <http://dbpedia.org/resource/Ahmed_III> <http://dbpedia.org/ontology/child> ?result . ?v3 <http://dbpedia.org/property/father> ?v1 . <http://dbpedia.org/resource/Mustafa_III> <http://dbpedia.org/ontology/successor> ?result . },"```sparql
SELECT ?child WHERE {
  # Find the child of Ahmed III
  ?ahmedIII dbo:child ?child .
  ?ahmedIII rdfs:label ""Ahmed III""@en .

  # Find Neşerek Kadın's spouse and then the father of that spouse
  ?neserekKadin dbo:spouse ?spouse .
  ?neserekKadin rdfs:label ""Neşerek Kadın""@en .
  
  ?spouse dbo:parent ?fatherOfSpouse .

  # Find Mustafa III's successor
  OPTIONAL {
    ?mustafaIII dbo:successor ?successor .
    ?mustafaIII rdfs:label ""Mustafa III""@en .
    
    FILTER (?fatherOfSpouse = ?successor)
  }

  # Ensure the child of Ahmed III is also the father identified above
  FILTER (?child = ?fatherOfSpouse)
}
```",5,5,6,3,3,3,3,71,0,0,1,0,0.0,0
495,15,val,Give me the father of Princess Charlotte of Württemberg and child of the father of the parent of Princess Catherine of Württemberg.,SELECT ?result WHERE { ?v0 <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Princess_Catherine_of_Württemberg> . ?result <http://dbpedia.org/property/father> ?v1 . <http://dbpedia.org/resource/Princess_Charlotte_of_Württemberg> <http://dbpedia.org/property/father> ?result . ?v0 <http://dbpedia.org/property/father> ?v1 . },"```sparql
SELECT ?fatherCharlotte ?childOfGrandfather WHERE {
  # Find Princess Charlotte of Württemberg and her father
  ?charlotte dbo:parent ?fatherCharlotte .
  ?charlotte rdfs:label ""Princess Charlotte of Württemberg""@en .

  # Find Princess Catherine of Württemberg and her parent
  ?catherine dbo:parent ?parentCatherine .
  ?catherine rdfs:label ""Princess Catherine of Württemberg""@en .

  # Find the father of the parent of Princess Catherine
  ?parentCatherine dbo:parent ?grandfatherCatherine .
  
  # Find a child of this grandfather
  ?grandfatherCatherine dbo:child ?childOfGrandfather .
}
```",4,4,5,3,2,3,2,20,1,3,0,0.25,1.0,0.4
773,55,val,"Give me the parent of the child, that is a royalty, of Louis the German and spouse of the father of Charles the Fat and parent of the successor of Charles the Bald.",SELECT ?result WHERE { <http://dbpedia.org/resource/Charles_the_Fat> <http://dbpedia.org/property/father> ?v3 . ?v3 <http://dbpedia.org/ontology/spouse> ?result . ?v2 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Louis_the_German> . ?v2 <http://dbpedia.org/ontology/parent> ?result . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. <http://dbpedia.org/resource/Charles_the_Bald> <http://dbpedia.org/ontology/successor> ?v5 . ?result <http://dbpedia.org/ontology/child> ?v5 . },"```sparql
SELECT ?parent WHERE {
  # Step 1: Identify a royal child of Louis the German
  ?child dbo:parent ?louisTheGerman .
  ?louisTheGerman rdfs:label ""Louis the German""@en .
  FILTER (regex(str(?child), ""royalty"", ""i""))

  # Step 2: Find father of Charles the Fat and his spouse
  ?charlesTheFat dbo:parent ?fatherOfCharlesTheFat .
  ?charlesTheFat rdfs:label ""Charles the Fat""@en .
  ?fatherOfCharlesTheFat dbo:spouse ?spouse .

  # Step 3: Determine successor of Charles the Bald and their parent
  ?charlesTheBald dbo:successor ?successor .
  ?charlesTheBald rdfs:label ""Charles the Bald""@en .
  ?successor dbo:parent ?parentOfSuccessor .

  # Combine to find the common entity
  FILTER (?spouse = ?parent)
}
```",6,7,7,2,3,3,3,71,0,0,1,0,0.0,0
459,20,val,"Give me the governor of Oklahoma and governor of the administration, that is a politician, of Brad Henry and person born as John Kevin Stitt.","SELECT ?result WHERE { ?result <http://dbpedia.org/property/birthName> ""John Kevin Stitt""@en . ?v3 <http://dbpedia.org/property/governor> ?result . ?v3 <http://dbpedia.org/property/governor> <http://dbpedia.org/resource/Brad_Henry> . <http://dbpedia.org/resource/Oklahoma> <http://dbpedia.org/property/governor> ?result . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. }","```sparql
SELECT ?governorOklahoma ?bradHenryGovernor ?johnKevinStitt WHERE {
  # Find the current or past Governor of Oklahoma
  ?governorOklahoma dbo:office ""Governor of Oklahoma""@en .
  
  # Find Brad Henry and his governorship details
  ?bradHenry dbo:office ""Governor of Oklahoma""@en ;
             foaf:name ""Brad Henry""@en ;
             dbo:birthDate ?birthDateHenry .

  OPTIONAL {
    ?bradHenryGovernor dbo:office ""Governor of Oklahoma""@en .
    FILTER (?bradHenryGovernor != ?bradHenry) # Exclude Brad Henry himself
  }

  # Find John Kevin Stitt and his governorship details
  ?johnKevinStitt foaf:name ""John Kevin Stitt""@en ;
                  dbo:birthDate ?birthDateStitt ;
                  dbo:office ""Governor of Oklahoma""@en .
  
  FILTER (regex(str(?birthDateStitt), ""^\\d{4}-\\d{2}-\\d{2}$"")) # Ensure birth date format
}
```",4,5,5,2,3,2,3,28,0,0,1,0,0.0,0
791,41,val,"Give me the predecessor of the child of Emperor Takakura and spouse of the spouse, that is a royalty, of Emperor Takakura and father of Emperor Go-Toba.",SELECT ?result WHERE { <http://dbpedia.org/resource/Emperor_Go-Toba> <http://dbpedia.org/property/father> ?result . ?v2 <http://dbpedia.org/ontology/spouse> <http://dbpedia.org/resource/Emperor_Takakura> . ?result <http://dbpedia.org/ontology/spouse> ?v2 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?result <http://dbpedia.org/ontology/successor> ?v4 . ?v4 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Emperor_Takakura> . },"```sparql
SELECT ?predecessor WHERE {
  # Find child of Emperor Takakura
  ?child dbo:parent ?takakura .
  ?takakura rdfs:label ""Emperor Takakura""@en .

  # Find spouse of the child's spouse who is royalty
  OPTIONAL { 
    ?spouse1 dbo:spouse ?child .
    FILTER (regex(str(?spouse1), ""Imperial Princess Shushi"", ""i""))
  }

  # Find predecessor of this royal spouse
  OPTIONAL {
    ?predecessor dbo:predecessor ?spouse1 .
  }

  # Ensure the predecessor is also the father of Emperor Go-Toba
  ?goToba dbo:parent ?predecessor .
  ?goToba rdfs:label ""Emperor Go-Toba""@en .
}
```",5,6,6,2,3,3,3,71,1,0,0,1.0,1.0,1.0
976,46,val,"Give me the office of the leader, that is a politician, of the administration, that is an organisation, of Kemal Kılıçdaroğlu and office of the mayor, that is a politician and an office holder and Turkish, of Nation Alliance (Turkey).",SELECT ?result WHERE { ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v2 <http://dbpedia.org/ontology/leader> ?v0 . ?v3 <http://dbpedia.org/ontology/nationality> <http://dbpedia.org/resource/Turkey>. <http://dbpedia.org/resource/Nation_Alliance_(Turkey)> <http://dbpedia.org/property/leader> ?v3 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?v2 <http://dbpedia.org/property/leader> <http://dbpedia.org/resource/Kemal_Kılıçdaroğlu> . ?v0 <http://dbpedia.org/property/office> ?result . ?v3 <http://dbpedia.org/property/office> ?result . },"```sparql
SELECT ?kemalOffice ?mayorOffice WHERE {
  # Find Kemal Kılıçdaroğlu's office within his administration (CHP)
  ?kemal dbo:leader ?office .
  ?kemal rdfs:label ""Kemal Kılıçdaroğlu""@en .

  # Find the mayor associated with Nation Alliance
  OPTIONAL {
    ?mayor dbo:position ?mayorOffice ;
           dbo:memberOf ?nationAlliance .
    ?nationAlliance rdfs:label ""Nation Alliance (Turkey)""@en .
    FILTER EXISTS { ?mayor dbo:officeHolder true . }
    FILTER EXISTS { ?mayor dbo:politician true . }
  }
}
```",5,10,6,3,2,3,3,71,0,0,3,0,0.0,0
573,53,val,"Give me the person decedent at Quincy, Massachusetts and parent of the author, that is a politician and an office holder, of Exchequer Standards and person decedent at the administration, that is a region, of the real name of Charlie Baker (Australian footballer).","SELECT ?result WHERE { ?v2 <http://dbpedia.org/property/governor> ?v3 . ?v1 <http://dbpedia.org/ontology/parent> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?result <http://dbpedia.org/ontology/deathPlace> ?v2 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. <http://dbpedia.org/resource/Exchequer_Standards> <http://dbpedia.org/property/author> ?v1 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Region>. ?result <http://dbpedia.org/ontology/deathPlace> <http://dbpedia.org/resource/Quincy,_Massachusetts> . <http://dbpedia.org/resource/Charlie_Baker_(Australian_footballer)> <http://xmlns.com/foaf/0.1/name> ?v3 . }","```sparql
SELECT ?decedent WHERE {
  # Identify Charlie Baker (Australian footballer)
  ?charlieBaker rdfs:label ""Charlie Baker""@en .
  ?charlieBaker dbo:nationality dbr:Australia .

  # Find the real name of Charlie Baker
  OPTIONAL { 
    ?realName dbo:alias ?charlieBaker .
  }

  # Determine the administration region associated with Charlie Baker's real name
  OPTIONAL {
    ?adminRegion dbo:administrativeUnit ?realName .
  }

  # Identify a decedent at Quincy, Massachusetts
  ?decedent dbo:deathPlace dbr:Quincy,_Massachusetts .

  # Find the parent of an author who is both a politician and office holder
  OPTIONAL {
    ?author dbo:parent ?decedent .
    ?author dbo:occupation dbr:Author .
    ?politician dbo:parent ?author .
    ?politician dbo:occupation dbr:Politician ;
                dbo:officeHolder true .
  }

  # Link to Exchequer Standards
  OPTIONAL {
    ?exchequerStandards dbo:relatedTo ?decedent .
  }
}
```",6,9,7,3,3,3,3,71,0,0,2,0,0.0,0
987,46,val,"Give me the birth place of the actor of All for Free and birth place of the band, that is an artist and a musical artist, of the band, that is an artist, of Dado Polumenta.",SELECT ?result WHERE { ?v3 <http://dbpedia.org/ontology/birthPlace> ?result . ?v0 <http://dbpedia.org/ontology/birthPlace> ?result . <http://dbpedia.org/resource/Dado_Polumenta> <http://dbpedia.org/ontology/associatedMusicalArtist> ?v2 . <http://dbpedia.org/resource/All_for_Free> <http://dbpedia.org/property/starring> ?v3 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. ?v2 <http://dbpedia.org/ontology/associatedMusicalArtist> ?v0 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. },"```sparql
SELECT ?actorBirthPlace ?band1BirthPlace ?band2BirthPlace WHERE {
  # Find actor of ""All for Free""
  ?movie dbo:starring ?actor .
  ?movie rdfs:label ""All for Free""@en .
  
  # Get birth place of the actor
  OPTIONAL { 
    ?actor dbo:birthPlace ?actorBirthPlace .
  }
  
  # Identify Dado Povlovic's band that is an artist and a musical artist
  ?dado dbo:member ?band1 .
  ?dado rdfs:label ""Dado Povlovic""@en .
  ?band1 rdf:type dbpedia-owl:Band ;
         rdf:type dbpedia-owl:MusicalArtist .

  # Get birth place of the band
  OPTIONAL {
    ?band1 dbo:birthPlace ?band1BirthPlace .
  }
  
  # Identify another band associated with Dado Povlovic's band that is an artist
  ?band1 dbo:member ?band2 .
  ?band2 rdf:type dbpedia-owl:Band .

  # Get birth place of the second band
  OPTIONAL {
    ?band2 dbo:birthPlace ?band2BirthPlace .
  }
}
```",5,8,6,3,2,3,3,71,0,0,4,0,0.0,0
281,20,val,"Give me the awardee of the award, that is a military conflict, of Lawrence Moore Cosgrave and commander in New Guinea campaign and awardee of Volunteer Decoration.",SELECT ?result WHERE { ?result <http://dbpedia.org/property/awards> ?v3 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?result <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/Volunteer_Decoration> . <http://dbpedia.org/resource/Lawrence_Moore_Cosgrave> <http://dbpedia.org/property/awards> ?v3 . <http://dbpedia.org/resource/New_Guinea_campaign> <http://dbpedia.org/ontology/commander> ?result . },"```sparql
SELECT ?individual WHERE {
  # Find the award given by Lawrence Moore Cosgrave related to a military conflict
  ?cosgrave dbo:awardee ?individual .
  ?cosgrave rdfs:label ""Lawrence Moore Cosgrave""@en .
  ?conflict dbo:award ?cosgrave .
  
  # Ensure the award is for a military conflict
  ?conflict rdf:type dbo:MilitaryConflict .

  # Find individuals who were commanders in the New Guinea campaign
  ?newGuineaCampaign dbo:commander ?individual .
  ?newGuineaCampaign rdfs:label ""New Guinea campaign""@en .

  # Ensure the individual received the Volunteer Decoration
  ?volunteerDecoration dbo:recipient ?individual .
  ?volunteerDecoration rdfs:label ""Volunteer Decoration""@en .
}
```",4,5,5,2,3,2,3,28,0,0,1,0,0.0,0
465,43,val,"Give me the spouse of the child, that is a royalty, of the parent of Elizabeth of Austria (1526–1545) and successor of Renée of France and successor of Ercole II d'Este, Duke of Ferrara.","SELECT ?result WHERE { <http://dbpedia.org/resource/Ercole_II_d'Este,_Duke_of_Ferrara> <http://dbpedia.org/ontology/successor> ?result . ?v0 <http://dbpedia.org/ontology/child> ?v4 . ?v0 <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Elizabeth_of_Austria_(1526–1545)> . ?result <http://dbpedia.org/ontology/spouse> ?v4 . <http://dbpedia.org/resource/Renée_of_France> <http://dbpedia.org/ontology/successor> ?result . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. }","```sparql
SELECT ?spouse WHERE {
  # Find Elizabeth of Austria and her parent
  ?elizabeth dbo:parent ?parent .
  ?elizabeth rdfs:label ""Elizabeth of Austria (1526–1545)""@en .

  # Find successor of Renée of France
  ?renee dbo:succeededBy ?successorRenée .
  ?renee rdfs:label ""Renée of France""@en .

  # Find successor of Ercole II d'Este, Duke of Ferrara
  ?ercole dbo:succeededBy ?successorErcole .
  ?ercole rdfs:label ""Ercole II d'Este, Duke of Ferrara""@en .

  # Identify common entity who is both successors
  FILTER (?successorRenée = ?successorErcole)
  
  # Find a child that is royalty of this common successor
  ?commonEntity dbo:child ?royalChild .
  ?royalChild rdf:type dbo:RoyalFamilyMember .

  # Determine the spouse of this royal child
  ?royalChild dbo:spouse ?spouse .
}
```",5,6,6,3,3,3,3,71,0,0,1,0,0.0,0
83,16,val,"Give me the ruling party in the birthplace, that is a town and Brazilian and a soccer club, of Sandro (footballer, born October 1983) and party of the governor of Dilma Rousseff.","SELECT ?result WHERE { ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Town>. ?v2 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Brazil>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerClub>. ?v2 <http://dbpedia.org/property/leaderParty> ?result . <http://dbpedia.org/resource/Sandro_(footballer,_born_October_1983)> <http://dbpedia.org/ontology/birthPlace> ?v2 . ?v3 <http://dbpedia.org/ontology/party> ?result . <http://dbpedia.org/resource/Dilma_Rousseff> <http://dbpedia.org/property/governor> ?v3 . }","```sparql
# Query for Sandro's birthplace and ruling party
SELECT ?town ?rulingParty WHERE {
  # Find Sandro's birthplace
  ?sandro dbo:birthPlace ?town .
  ?sandro rdfs:label ""Sandro (footballer, born October 1983)""@en .

  # Ensure the town is in Brazil and has a soccer club
  ?town dbo:country dbr:Brazil ;
        dbo:sportTeam ?soccerClub .
  
  # Find the ruling party of the town
  OPTIONAL { 
    ?town dbo:governingParty ?rulingParty .
  }
}

# Query for Dilma Rousseff's governorship and the political party of the governor
SELECT ?state ?governorParty WHERE {
  # Find the state Dilma Rousseff governed
  ?dilma dbo:officeHolderOf ?state .
  ?dilma rdfs:label ""Dilma Rousseff""@en .

  # Identify the governor during her tenure and their party
  OPTIONAL { 
    ?governor dbo:governingParty ?governorParty ;
              dbo:officeHolderOf ?state .
  }
}
```",4,7,5,2,2,3,2,20,0,0,1,0,0.0,0
445,52,val,"Give me the death place of the awardee of Royal Astronomical Society and entity in United Kingdom and entity in the residence, that is a country, of the resident, that is an athlete, of Great Britain.",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/United_Kingdom> . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. ?v3 <http://dbpedia.org/property/residence> ?v2 . ?v3 <http://dbpedia.org/property/residence> <http://dbpedia.org/resource/Great_Britain> . ?result <http://dbpedia.org/ontology/location> ?v2 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Athlete>. ?v5 <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/Royal_Astronomical_Society> . ?v5 <http://dbpedia.org/ontology/deathPlace> ?result . },"```sparql
SELECT ?deathPlace WHERE {
  # Find awardees of the Royal Astronomical Society
  ?awardee dbo:awardReceived dbr:Royal_Astronomical_Society .
  
  # Ensure the awardee is associated with the United Kingdom
  ?awardee dbo:nationality dbr:United_Kingdom .

  # Find the residence of the awardee and ensure it's a country
  ?awardee dbo:residence ?residence .
  ?residence rdf:type dbo:Country .

  # Identify an athlete residing in Great Britain
  ?athlete dbo:nationality dbr:Great_Britain ;
           dbo:occupation dbr:Athlete .

  # Find the death place of the awardee
  ?awardee dbo:deathPlace ?deathPlace .
}
```",6,8,7,3,3,3,3,71,0,0,1,0,0.0,0
791,44,val,"Give me the predecessor of the child of Emperor Takakura and father of the child, that is a royalty, of Emperor Takakura and spouse of Taira no Tokuko.",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/spouse> <http://dbpedia.org/resource/Taira_no_Tokuko> . ?v4 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Emperor_Takakura> . ?v2 <http://dbpedia.org/property/father> ?result . ?v2 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Emperor_Takakura> . ?result <http://dbpedia.org/ontology/successor> ?v4 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. },"```sparql
SELECT ?predecessor WHERE {
  # Find Emperor Takakura and his child
  ?takakura dbo:child ?child .
  ?takakura rdfs:label ""Emperor Takakura""@en .

  # Identify the father of the child who is royalty
  OPTIONAL { 
    ?child dbo:parent ?father .
    FILTER (regex(str(?father), ""Imperial Prince Morihito"", ""i""))
  }

  # Ensure the father is also the spouse of Taira no Tokuko
  OPTIONAL {
    ?tairaNoTokuko rdfs:label ""Taira no Tokuko""@en .
    ?tairaNoTokuko dbo:spouse ?father .
  }

  # Find the predecessor emperor (the one who ruled before the child)
  ?child dbo:predecessor ?predecessor .
}
```",5,6,6,2,3,3,3,71,1,1,0,0.5,1.0,0.6666666666666666
892,40,val,Give me the entity in Province of Reggio Emilia and landmark at elevation of 58 and entity in the profession of the true self of Enrico Crolla.,"SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/elevation> ""58""^^<http://www.w3.org/2001/XMLSchema#integer> . ?result <http://dbpedia.org/ontology/country> ?v1 . ?v3 <http://dbpedia.org/property/occupation> ?v1 . ?v3 <http://xmlns.com/foaf/0.1/givenName> ""Enrico Crolla""@en . ?result <http://dbpedia.org/ontology/province> <http://dbpedia.org/resource/Province_of_Reggio_Emilia> . }","```sparql
# Query for entity in Province of Reggio Emilia
SELECT ?reggioEntity WHERE {
  ?reggioEntity dbo:location dbr:Province_of_Reggio_Emilia .
}

# Query for landmark at elevation 58
SELECT ?landmark WHERE {
  ?landmark a dbo:Lighthouse ;
            dbo:elevation ""58""^^xsd:integer .
}

# Query for entity in the profession of Enrico Crolla's true self (assuming footballer)
SELECT ?footballEntity WHERE {
  ?footballEntity dbo:occupation dbr:Football .
}
```",5,5,6,3,3,3,3,71,0,0,1,0,0.0,0
826,46,val,"Give me the successor of the child, that is a royalty, of Louis I, Grand Duke of Hesse and spouse of the child of the father of Anna Magdalena Appel.","SELECT ?result WHERE { <http://dbpedia.org/resource/Louis_I,_Grand_Duke_of_Hesse> <http://dbpedia.org/ontology/child> ?v4 . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v1 <http://dbpedia.org/ontology/spouse> ?result . ?v4 <http://dbpedia.org/ontology/successor> ?result . ?v1 <http://dbpedia.org/property/father> ?v2 . <http://dbpedia.org/resource/Anna_Magdalena_Appel> <http://dbpedia.org/property/father> ?v2 . }","```sparql
SELECT ?successor WHERE {
  # Identify Louis I, Grand Duke of Hesse
  ?louisI rdfs:label ""Louis I, Grand Duke of Hesse""@en .

  # Find his child that is royalty
  ?royalChild dbo:parent ?louisI ;
              rdf:type dbo:RoyalFamilyMember .

  # Determine the successor of this royal child
  ?successor dbo:predecessor ?royalChild .

  # Identify Anna Magdalena Appel and her father
  ?annaMagdalena rdfs:label ""Anna Magdalena Appel""@en .
  ?father dbo:child ?annaMagdalena .

  # Find the spouse of one of the father's children
  ?spouse dbo:spouse ?childOfFather .
  ?childOfFather dbo:parent ?father .
}
```",5,6,6,3,2,3,3,71,0,0,1,0,0.0,0
433,45,val,Give me the associated musical artist of Bill Evans and associated musical artist of Paul Chambers and professional in the profession of the writer of Slowhand at 70 – Live at the Royal Albert Hall.,SELECT ?result WHERE { <http://dbpedia.org/resource/Bill_Evans> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . <http://dbpedia.org/resource/Slowhand_at_70_–_Live_at_the_Royal_Albert_Hall> <http://dbpedia.org/property/writer> ?v0 . <http://dbpedia.org/resource/Paul_Chambers> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?result <http://dbpedia.org/property/occupation> ?v1 . ?v0 <http://dbpedia.org/property/occupation> ?v1 . },"```sparql
# Find associated musical artists of Bill Evans
SELECT DISTINCT ?artist WHERE {
  ?billEvans dbo:associatedMusicalArtist ?artist .
  ?billEvans rdfs:label ""Bill Evans""@en .
}

UNION

# Find associated musical artists of Paul Chambers
SELECT DISTINCT ?artist WHERE {
  ?paulChambers dbo:associatedMusicalArtist ?artist .
  ?paulChambers rdfs:label ""Paul Chambers""@en .
}

UNION

# Find the writer of ""Slowhand at 70 – Live at the Royal Albert Hall"" and their profession
SELECT DISTINCT ?profession WHERE {
  ?work dbo:author ?writer .
  ?work rdfs:label ""Slowhand at 70 – Live at the Royal Albert Hall""@en .
  
  ?writer dbo:occupation ?profession .
}
```",5,5,6,3,3,3,3,71,0,0,1,0,0.0,0
826,50,val,"Give me the successor of the child, that is a royalty, of the reference, that is a royalty, to Louis I and predecessor of the parent of Prince Friedrich of Hesse and by Rhine.","SELECT ?result WHERE { <http://dbpedia.org/resource/Prince_Friedrich_of_Hesse_and_by_Rhine> <http://dbpedia.org/ontology/parent> ?v3 . ?v4 <http://dbpedia.org/ontology/successor> ?result . ?v0 <http://dbpedia.org/ontology/child> ?v4 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v0 <http://xmlns.com/foaf/0.1/name> ""Louis I""@en . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?result <http://dbpedia.org/ontology/successor> ?v3 . }","```sparql
SELECT ?successor WHERE {
  # Find a child of Louis I who is royalty
  ?child dbo:parent dbc:Louis_I_of_France .
  ?child rdf:type dbo:Monarch .

  # Find the parent of Prince Friedrich of Hesse and by Rhine
  ?prince rdfs:label ""Prince Friedrich of Hesse and by Rhine""@en .
  ?prince dbo:parent ?parent .

  # Find predecessor of this parent
  ?parent dbo:predecessor ?predecessor .

  # Find the successor of the child identified as royalty
  ?child dbo:successor ?successor .
}
```",5,7,6,3,2,3,3,71,0,0,1,0,0.0,0
865,51,val,"Give me the father of the child of the father of Abul Maal Abdul Muhith and father of the child, that is a politician, of Abu Ahmad Abdul Hafiz.",SELECT ?result WHERE { ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v1 <http://dbpedia.org/property/father> ?v4 . ?v3 <http://dbpedia.org/property/father> ?result . ?v3 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Abu_Ahmad_Abdul_Hafiz> . <http://dbpedia.org/resource/Abul_Maal_Abdul_Muhith> <http://dbpedia.org/property/father> ?v4 . ?v1 <http://dbpedia.org/property/father> ?result . },"```sparql
SELECT ?commonFather WHERE {
  # Abul Maal Abdul Muhith's lineage
  ?muhith dbo:parent ?fatherMuhith .
  ?muhith rdfs:label ""Abul Maal Abdul Muhith""@en .
  
  OPTIONAL { 
    ?childMuhith dbo:parent ?fatherMuhith .
    ?childMuhith rdfs:label ""Abul Maal Abdul Muhith""@en .
  }
  
  # Abu Ahmad Abdul Hafiz's lineage
  ?hafiz dbo:parent ?fatherHafiz .
  ?hafiz rdfs:label ""Abu Ahmad Abdul Hafiz""@en .

  OPTIONAL {
    ?childHafiz dbo:parent ?fatherHafiz .
    ?childHafiz rdf:type dbo:Politician .
  }
  
  # Find common father
  FILTER (?fatherMuhith = ?commonFather)
  FILTER (?fatherHafiz = ?commonFather)
}
```",5,6,6,3,2,3,3,71,0,0,1,0,0.0,0
417,44,val,"Give me the child of the father of Frederick IX of Denmark and spouse of Princess Caroline-Mathilde of Denmark and child of the child, that is a royalty, of Frederick Francis III, Grand Duke of Mecklenburg-Schwerin.","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/spouse> <http://dbpedia.org/resource/Princess_Caroline-Mathilde_of_Denmark> . ?result <http://dbpedia.org/property/father> ?v4 . <http://dbpedia.org/resource/Frederick_IX_of_Denmark> <http://dbpedia.org/property/father> ?v4 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?result <http://dbpedia.org/ontology/parent> ?v2 . ?v2 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Frederick_Francis_III,_Grand_Duke_of_Mecklenburg-Schwerin> . }","```sparql
SELECT ?finalChild WHERE {
  # Step 1: Find Frederick IX of Denmark and his father
  ?frederickIX dbo:parent ?fatherFrederickIX .
  ?frederickIX rdfs:label ""Frederick IX of Denmark""@en .

  # Step 2: Identify the spouse of Princess Caroline-Mathilde of Denmark
  OPTIONAL {
    ?carolineMathilde dbo:spouse ?spouseCarolineMathilde .
    ?carolineMathilde rdfs:label ""Princess Caroline-Mathilde of Denmark""@en .
  }

  # Step 3: Find the child of this spouse (who is royalty)
  OPTIONAL {
    ?spouseCarolineMathilde dbo:child ?royalChild .
    FILTER EXISTS { ?royalChild a dbo:RoyalFamilyMember } 
  }

  # Step 4: Locate the child of Frederick Francis III, Grand Duke of Mecklenburg-Schwerin
  OPTIONAL {
    ?frederickFrancisIII dbo:child ?childFrederickFrancisIII .
    ?frederickFrancisIII rdfs:label ""Frederick Francis III, Grand Duke of Mecklenburg-Schwerin""@en .
  }

  # Step 5: Find the child of the royal individual identified in step 3
  OPTIONAL {
    ?royalChild dbo:child ?finalChild .
  }
}
```",5,6,6,2,3,3,3,71,1,44100,0,2.2675222784063853e-05,1.0,4.534941725998821e-05
365,15,val,"Give me the spouse of Olha Petliura and person born as the birth name of the commander, that is an office holder, in Ukrainian–Soviet War.",SELECT ?result WHERE { <http://dbpedia.org/resource/Ukrainian–Soviet_War> <http://dbpedia.org/ontology/commander> ?v0 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. <http://dbpedia.org/resource/Olha_Petliura> <http://dbpedia.org/ontology/spouse> ?result . ?result <http://dbpedia.org/property/birthName> ?v1 . ?v0 <http://dbpedia.org/property/birthName> ?v1 . },"```sparql
SELECT ?spouse ?officeHolder WHERE {
  # Find Olha Petliura's spouse
  ?olha dbo:spouse ?spouse .
  ?olha rdfs:label ""Olha Petliura""@en .

  # Identify Nestor Makhno and his birth name
  ?makhno foaf:name ""Nestor Makhno""@en ;
          dbo:birthName ?birthName .
  
  # Find an office holder with the same birth name as Nestor Makhno
  ?officeHolder dbo:birthName ?birthName ;
                dbo:occupation ?occupation .
  FILTER EXISTS { ?officeHolder dbo:isOfficeHolder true }
}
```",4,5,5,3,2,3,2,20,0,0,1,0,0.0,0
933,45,val,"Give me the band of the band, that is a group and a band and an organisation, of the person born, that is a musical artist, on 1947-04-21 and band of Mike Elliott (saxophonist) and reference to Alan Warner.","SELECT ?result WHERE { ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?v0 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v3 <http://dbpedia.org/ontology/associatedMusicalArtist> ?v0 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Band>. ?result <http://xmlns.com/foaf/0.1/name> ""Alan Warner""@en . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Group>. ?v3 <http://dbpedia.org/ontology/birthDate> ""1947-04-21""^^<http://www.w3.org/2001/XMLSchema#date> . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. <http://dbpedia.org/resource/Mike_Elliott_(saxophonist)> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . }","```sparql
SELECT ?personBand ?mikeElliottBand WHERE {
  # Find the person born on 1947-04-21 who is a musical artist
  ?person dbo:birthDate ""1947-04-21""^^xsd:date ;
          rdf:type dbo:MusicalArtist .
  
  # Find the band associated with this person
  ?person dbo:band ?personBand .

  # Find Mike Elliott (saxophonist) and his band
  ?mikeElliott rdfs:label ""Mike Elliott (saxophonist)""@en ;
               dbo:band ?mikeElliottBand .
  
  # Check for commonality between the bands
  FILTER (?personBand = ?mikeElliottBand)

  # Reference to Alan Warner
  OPTIONAL {
    ?alanWarner rdfs:label ""Alan Warner""@en .
  }
}
```",5,9,6,3,3,3,3,71,0,0,1,0,0.0,0
465,47,val,"Give me the successor of the child of Alfonso I d'Este and spouse of the child, that is a royalty, of the parent of Elizabeth of Austria (1526–1545).",SELECT ?result WHERE { ?v2 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Alfonso_I_d'Este> . ?v0 <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Elizabeth_of_Austria_(1526–1545)> . ?v0 <http://dbpedia.org/ontology/child> ?v4 . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?result <http://dbpedia.org/ontology/spouse> ?v4 . ?v2 <http://dbpedia.org/ontology/successor> ?result . },"```sparql
SELECT ?successor WHERE {
  # Find child of Alfonso I d'Este
  ?alfonsoChild dbo:parent dbc:Alfonso_I_d%27Este .
  
  # Find spouse of this child who is royalty
  OPTIONAL { 
    ?alfonsoChild dbo:spouse ?royalSpouse .
    FILTER (regex(str(?royalSpouse), ""Royal"", ""i""))
  }
  
  # Determine parent of Elizabeth of Austria (1526–1545)
  ?elizabethParent dbo:child dbc:Elizabeth_of_Austria_(1526%E2%80%931545) .

  # Find child of this parent who is royalty and spouse of the child of Alfonso I d'Este
  OPTIONAL {
    ?royalChild dbo:parent ?elizabethParent .
    ?alfonsoChild dbo:spouse ?royalChild .
    FILTER (regex(str(?royalChild), ""Royal"", ""i""))
  }
  
  # Find successor of this royal child
  ?royalChild dbo:successor ?successor .
}
```",5,6,6,3,2,3,3,71,0,0,1,0,0.0,0
965,40,val,"Give me the spouse of the spouse of the parent of Louise Mountbatten and parent of Louise Mountbatten and parent of George Mountbatten, 2nd Marquess of Milford Haven.","SELECT ?result WHERE { ?v3 <http://dbpedia.org/ontology/spouse> ?v1 . <http://dbpedia.org/resource/Louise_Mountbatten> <http://dbpedia.org/ontology/parent> ?result . <http://dbpedia.org/resource/Louise_Mountbatten> <http://dbpedia.org/ontology/parent> ?v3 . ?result <http://dbpedia.org/ontology/spouse> ?v1 . <http://dbpedia.org/resource/George_Mountbatten,_2nd_Marquess_of_Milford_Haven> <http://dbpedia.org/ontology/parent> ?result . }","```sparql
SELECT ?finalSpouse WHERE {
  # Step 1: Find the parent of Louise Mountbatten
  ?louise dbo:parent ?parentLouise .
  ?louise rdfs:label ""Louise Mountbatten""@en .

  # Step 2: Find the spouse of Louise Mountbatten's parent
  ?parentLouise dbo:spouse ?spouseParentLouise .

  # Step 3: Find the spouse of the spouse from step 2
  ?spouseParentLouise dbo:spouse ?finalSpouseCandidate .

  # Step 4: Identify the parent of George Mountbatten, 2nd Marquess of Milford Haven
  ?george dbo:parent ?parentGeorge .
  ?george rdfs:label ""George Mountbatten, 2nd Marquess of Milford Haven""@en .

  # Step 5: Find commonality and final spouse
  FILTER (?finalSpouseCandidate = ?parentGeorge)
  
  # Return the spouse of this common individual
  ?commonIndividual dbo:spouse ?finalSpouse .
  FILTER (?commonIndividual = ?finalSpouseCandidate || ?commonIndividual = ?parentGeorge)
}
```",5,5,6,3,3,3,3,71,2,0,0,1.0,1.0,1.0
216,44,val,"Give me the team of the person born, that is a sports manager and a soccer manager and a soccer player, on 1983-12-20 and player in the coach, that is a soccer player and a sports manager and a soccer manager, of Bosnia and Herzegovina national under-18 football team and player in Igor Bišćan.","SELECT ?result WHERE { <http://dbpedia.org/resource/Bosnia_and_Herzegovina_national_under-18_football_team> <http://dbpedia.org/ontology/coach> ?v4 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsManager>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerManager>. ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerManager>. ?v2 <http://dbpedia.org/ontology/birthDate> ""1983-12-20""^^<http://www.w3.org/2001/XMLSchema#date> . <http://dbpedia.org/resource/Igor_Bišćan> <http://dbpedia.org/ontology/team> ?result . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerPlayer>. ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsManager>. ?v4 <http://dbpedia.org/ontology/team> ?result . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerPlayer>. ?result <http://dbpedia.org/ontology/coach> ?v2 . }","```sparql
SELECT ?person ?team WHERE {
  # Find the person born on December 20, 1983
  ?person dbo:birthDate ""1983-12-20""^^xsd:date .
  
  # Ensure the person is a sports manager, soccer manager, and soccer player
  ?person dbo:occupation ?occupation .
  FILTER (
    (CONTAINS(LCASE(str(?occupation)), ""sports manager"") ||
     CONTAINS(LCASE(str(?occupation)), ""soccer manager"") ||
     CONTAINS(LCASE(str(?occupation)), ""soccer player""))
  )
  
  # Ensure the person is a coach of Bosnia and Herzegovina national under-18 football team
  ?person dbo:coachOfTeam <http://dbpedia.org/resource/Bosnia_and_Herzegovina_national_under-18_football_team> .
  
  # Find teams where this person played
  ?team dbo:player ?person .
  
  # Ensure the person played with Igor Bišćan
  ?bišćanTeam dbo:player <http://dbpedia.org/resource/Igor_Bišćan> .
  ?bišćanTeam dbo:player ?person .
}
```",5,11,6,2,3,3,3,71,0,0,1,0,0.0,0
965,46,val,"Give me the spouse of the spouse of the parent of Louise Mountbatten and parent of the child, that is a royalty, of Prince Louis of Battenberg.",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/spouse> ?v0 . ?v2 <http://dbpedia.org/ontology/spouse> ?v0 . ?v3 <http://dbpedia.org/ontology/parent> ?result . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. <http://dbpedia.org/resource/Louise_Mountbatten> <http://dbpedia.org/ontology/parent> ?v2 . ?v3 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Prince_Louis_of_Battenberg> . },"```sparql
SELECT ?finalSpouse WHERE {
  # Find Louise Mountbatten's parent
  ?louise dbo:parent ?parentLouise .
  ?louise rdfs:label ""Louise Mountbatten""@en .

  # Find the spouse of Louise Mountbatten's parent
  OPTIONAL { 
    ?parentLouise dbo:spouse ?spouseParentLouise .
  }

  # Find Prince Louis of Battenberg and his royal child
  ?princeLouis rdfs:label ""Prince Louis of Battenberg""@en .
  ?royalChild dbo:childOf ?princeLouis ;
              rdf:type dbo:Royal .

  # Find the parent of this royal child
  OPTIONAL {
    ?royalChild dbo:parent ?parentRoyalChild .
  }

  # Find the spouse of the parent of the royal child
  OPTIONAL {
    ?parentRoyalChild dbo:spouse ?finalSpouse .
  }
}
```",5,6,6,3,2,3,3,71,0,0,2,0,0.0,0
465,55,val,"Give me the successor of the child of Alfonso I d'Este and spouse of the child, that is a royalty, of Ferdinand I, Holy Roman Emperor and successor of the child, that is a royalty, of Anne of Brittany.","SELECT ?result WHERE { ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. <http://dbpedia.org/resource/Ferdinand_I,_Holy_Roman_Emperor> <http://dbpedia.org/ontology/child> ?v5 . ?v3 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Alfonso_I_d'Este> . ?v2 <http://dbpedia.org/ontology/successor> ?result . <http://dbpedia.org/resource/Anne_of_Brittany> <http://dbpedia.org/ontology/child> ?v2 . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?result <http://dbpedia.org/ontology/spouse> ?v5 . ?v3 <http://dbpedia.org/ontology/successor> ?result . }","```sparql
SELECT ?successor WHERE {
  # Find Alfonso I d'Este's child
  ?alfonsoChild dbo:parent dbc:""Alfonso_I_d%27Este"" .
  
  # Find Ferdinand I's royal child and their successor
  ?ferdinandChild dbo:parent dbc:""Ferdinand_I,_Holy_Roman_Emperor"" .
  FILTER (regex(str(?ferdinandChild), ""royalty"", ""i""))
  ?ferdinandSuccessor dbo:successorOf ?ferdinandChild .

  # Find Anne of Brittany's royal child and their successor
  ?anneChild dbo:parent dbc:""Anne_of_Brittany"" .
  FILTER (regex(str(?anneChild), ""royalty"", ""i""))
  ?anneSuccessor dbo:successorOf ?anneChild .

  # Identify the spouse of Alfonso I d'Este's child who is royalty
  OPTIONAL {
    ?alfonsoSpouse dbo:spouse ?alfonsoChild .
    FILTER (regex(str(?alfonsoSpouse), ""royalty"", ""i""))
  }

  # Identify the spouse of Ferdinand I's royal child who is royalty
  OPTIONAL {
    ?ferdinandSpouse dbo:spouse ?ferdinandSuccessor .
    FILTER (regex(str(?ferdinandSpouse), ""royalty"", ""i""))
  }
  
  # Determine the successor of these spouses
  ?successor dbo:successorOf ?alfonsoSpouse .
  ?successor dbo:successorOf ?ferdinandSpouse .
}
```",6,8,7,2,3,3,3,71,0,0,1,0,0.0,0
41,19,val,"Give me the party of Enda Kenny and party of the leader, that is a politician and an office holder, of 2005 Castlereagh Borough Council election and party of Declan Costello.",SELECT ?result WHERE { <http://dbpedia.org/resource/Enda_Kenny> <http://dbpedia.org/ontology/party> ?result . <http://dbpedia.org/resource/Declan_Costello> <http://dbpedia.org/ontology/party> ?result . ?v3 <http://dbpedia.org/ontology/party> ?result . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. <http://dbpedia.org/resource/2005_Castlereagh_Borough_Council_election> <http://dbpedia.org/property/leader> ?v3 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. },"```sparql
SELECT ?endakennyParty ?castlereaghLeaderParty ?declancostelloParty WHERE {
  # Find the political party of Enda Kenny
  ?endakenny dbo:party ?endakennyParty .
  ?endakenny rdfs:label ""Enda Kenny""@en .

  # Find the leader of the 2005 Castlereagh Borough Council election and their party
  OPTIONAL {
    ?castlereaghLeader dbo:electedAsLeaderOf ?election .
    ?election dbo:date ""2005-05-03""^^xsd:date .
    ?castlereaghLeader dbo:party ?castlereaghLeaderParty .
    FILTER (regex(str(?castlereaghLeader), ""politician"", ""i"") && regex(str(?castlereaghLeader), ""office holder"", ""i""))
  }

  # Find the political party of Declan Costello
  ?declancostello dbo:party ?declancostelloParty .
  ?declancostello rdfs:label ""Declan Costello""@en .
}
```",4,6,5,2,3,2,3,28,1,0,0,1.0,1.0,1.0
41,20,val,Give me the party of Mark Durkan and party of the person born as David Declan Costello and party of Enda Kenny.,"SELECT ?result WHERE { <http://dbpedia.org/resource/Mark_Durkan> <http://dbpedia.org/ontology/party> ?result . <http://dbpedia.org/resource/Enda_Kenny> <http://dbpedia.org/ontology/party> ?result . ?v1 <http://dbpedia.org/property/birthName> ""David Declan Costello""@en . ?v1 <http://dbpedia.org/ontology/party> ?result . }","```sparql
SELECT ?person ?partyLabel WHERE {
  # Find party affiliation for Mark Durkan
  OPTIONAL { 
    ?durkan dbo:birthName ""Mark Durkan""@en .
    ?durkan dbo:partyAffiliation ?partyDurkan .
    BIND(""Mark Durkan"" AS ?person)
  }
  
  # Find party affiliation for Martin McGuinness (born David Declan Costello)
  OPTIONAL {
    ?mcguinness dbo:birthName ""David Declan Costello""@en .
    ?mcguinness dbo:partyAffiliation ?partyMcGuinness .
    BIND(""Martin McGuinness"" AS ?person)
  }
  
  # Find party affiliation for Enda Kenny
  OPTIONAL {
    ?kenny rdfs:label ""Enda Kenny""@en .
    ?kenny dbo:partyAffiliation ?partyKenny .
    BIND(""Enda Kenny"" AS ?person)
  }

  # Bind the party label to a variable for output
  OPTIONAL { ?partyLabel rdfs:label ?partyLabelValue . FILTER(lang(?partyLabelValue) = ""en"") }
  
  # Link parties to their labels
  OPTIONAL { ?partyDurkan rdfs:label ?partyLabel . FILTER(lang(?partyLabel) = ""en"") }
  OPTIONAL { ?partyMcGuinness rdfs:label ?partyLabel . FILTER(lang(?partyLabel) = ""en"") }
  OPTIONAL { ?partyKenny rdfs:label ?partyLabel . FILTER(lang(?partyLabel) = ""en"") }

}
```",4,4,5,2,3,2,3,28,0,0,1,0,0.0,0
329,19,val,Give me the birthplace of the author of The Tailor and Ansty and entity in United Kingdom and entity in Northern Ireland.,SELECT ?result WHERE { <http://dbpedia.org/resource/The_Tailor_and_Ansty> <http://dbpedia.org/property/author> ?v2 . ?result <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/United_Kingdom> . ?v2 <http://dbpedia.org/ontology/birthPlace> ?result . ?result <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Northern_Ireland> . },"```sparql
SELECT ?birthPlace ?ukEntity ?niEntity WHERE {
  # Find the birthplace of George MacDonald
  ?author dbo:birthPlace ?birthPlace .
  ?author rdfs:label ""George MacDonald""@en .

  # Entity in United Kingdom (e.g., London)
  ?ukEntity rdf:type dbo:City ;
            dbo:country dbr:United_Kingdom ;
            rdfs:label ?ukLabel .
  FILTER regex(?ukLabel, ""London"", ""i"")

  # Entity in Northern Ireland (e.g., Belfast)
  ?niEntity rdf:type dbo:City ;
            dbo:country dbr:Northern_Ireland ;
            rdfs:label ?niLabel .
  FILTER regex(?niLabel, ""Belfast"", ""i"")
}
```",4,4,5,2,3,2,3,28,0,4,1,0.0,0.0,0
216,55,val,"Give me the player in the coach of Croatia national under-21 football team and team of the person born, that is a sports manager and a soccer manager and a soccer player, on 1983-12-20 and player in the coach, that is a soccer player and a sports manager and a soccer manager, of Bosnia and Herzegovina national under-18 football team.","SELECT ?result WHERE { ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerManager>. <http://dbpedia.org/resource/Bosnia_and_Herzegovina_national_under-18_football_team> <http://dbpedia.org/ontology/coach> ?v5 . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerManager>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerPlayer>. ?v5 <http://dbpedia.org/ontology/team> ?result . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerPlayer>. ?result <http://dbpedia.org/ontology/coach> ?v2 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsManager>. ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsManager>. ?v3 <http://dbpedia.org/ontology/team> ?result . <http://dbpedia.org/resource/Croatia_national_under-21_football_team> <http://dbpedia.org/ontology/coach> ?v3 . ?v2 <http://dbpedia.org/ontology/birthDate> ""1983-12-20""^^<http://www.w3.org/2001/XMLSchema#date> . }","```sparql
SELECT ?croatiaCoach ?bosniaCoach ?player WHERE {
  # Find the coach of Croatia National Under-21 Football Team
  ?team rdfs:label ""Croatia national under-21 football team""@en .
  ?team dbo:coach ?croatiaCoach .

  # Find a person born on December 20, 1983, who is a sports manager, soccer manager, and player
  ?person dbo:birthDate ""1983-12-20""^^xsd:date ;
          rdf:type dbo:SoccerPlayer ;
          rdf:type dbo:SportsManager ;
          rdf:type dbo:SoccerManager .

  # Find the team associated with this person's birth or early career
  OPTIONAL { 
    ?person dbo:sportTeam ?team .
  }

  # Find the coach of Bosnia and Herzegovina National Under-18 Football Team
  ?bosniaTeam rdfs:label ""Bosnia and Herzegovina national under-18 football team""@en .
  ?bosniaTeam dbo:coach ?bosniaCoach .

  # Identify a player associated with both coaches
  OPTIONAL {
    ?player dbo:playedFor ?croatiaCoach ;
            dbo:playedFor ?bosniaCoach .
  }
}
```",6,12,7,2,3,3,3,71,0,2,1,0.0,0.0,0
456,47,val,"Give me the spouse of the actor of Pacific Drive and professional in the alter ego of the reference, that is a fictional character, to Lamont Cranston (radio, film and television).","SELECT ?result WHERE { ?v0 <http://dbpedia.org/property/alterEgo> ?v4 . <http://dbpedia.org/resource/Pacific_Drive> <http://dbpedia.org/property/starring> ?v2 . ?v0 <http://xmlns.com/foaf/0.1/name> ""Lamont Cranston (radio, film and television)""@en . ?result <http://dbpedia.org/property/occupation> ?v4 . ?v2 <http://dbpedia.org/ontology/spouse> ?result . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/FictionalCharacter>. }","```sparql
SELECT ?spouse WHERE {
  # Find the actor associated with ""Pacific Drive""
  ?film dbo:actor ?actor .
  ?film rdfs:label ""Pacific Drive""@en .

  # Identify Lamont Cranston's alter ego, The Shadow
  ?lamontCranston dbo:alterEgo ?theShadow .
  ?lamontCranston rdfs:label ""Lamont Cranston""@en .

  # Find the spouse of the actor who is professionally involved with The Shadow
  OPTIONAL {
    ?actor dbo:spouse ?spouse .
    ?spouse dbo:profession ?profession .
    FILTER EXISTS { 
      ?theShadow dbo:profession ?profession .
    }
  }
}
```",5,6,6,3,2,3,3,71,0,0,2,0,0.0,0
773,47,val,"Give me the spouse of the father of Charles the Fat and parent of the successor of the child, that is a royalty, of Louis the Pious.",SELECT ?result WHERE { <http://dbpedia.org/resource/Louis_the_Pious> <http://dbpedia.org/ontology/child> ?v0 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v0 <http://dbpedia.org/ontology/successor> ?v4 . ?v2 <http://dbpedia.org/ontology/spouse> ?result . <http://dbpedia.org/resource/Charles_the_Fat> <http://dbpedia.org/property/father> ?v2 . ?result <http://dbpedia.org/ontology/child> ?v4 . },"```sparql
SELECT ?spouse WHERE {
  # Find Charles the Fat and his father
  ?charlesFat dbo:parent ?father .
  ?charlesFat rdfs:label ""Charles the Fat""@en .

  # Find Louis the Pious and his child (successor)
  ?louisPious dbo:child ?successor .
  ?louisPious rdfs:label ""Louis the Pious""@en .

  # Find parent of the successor who is royalty
  OPTIONAL {
    ?successor dbo:parent ?royalParent .
    FILTER (regex(str(?successor), ""Lothair I|Louis II|Charles the Bald"", ""i""))
  }

  # Find spouse of this royal parent
  OPTIONAL {
    ?royalParent dbo:spouse ?spouse .
  }
}
```",5,6,6,3,2,3,3,71,1,59926,0,1.668696914579405e-05,1.0,3.3373381391002534e-05
865,50,val,"Give me the father of the child, that is a politician, of the spouse of Syeda Shahar Banu and father of the child of Abu Ahmad Abdul Hafiz.",SELECT ?result WHERE { ?v2 <http://dbpedia.org/property/father> ?result . ?v3 <http://dbpedia.org/property/father> ?result . ?v2 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Abu_Ahmad_Abdul_Hafiz> . <http://dbpedia.org/resource/Syeda_Shahar_Banu> <http://dbpedia.org/ontology/spouse> ?v0 . ?v3 <http://dbpedia.org/property/father> ?v0 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. },"```sparql
SELECT ?commonFather WHERE {
  # Syeda Shahar Banu's spouse
  ?shaharBanu dbo:spouse ?spouse .
  ?shaharBanu rdfs:label ""Syeda Shahar Banu""@en .

  # Child of the spouse who is a politician
  ?spouse dbo:child ?politicianChild .
  ?politicianChild dbo:occupation ""Politician"" .
  
  # Father of the politician child
  ?politicianChild dbo:parent ?father1 .

  # Abu Ahmad Abdul Hafiz's child
  ?abuAhmad dbo:child ?child2 .
  ?abuAhmad rdfs:label ""Abu Ahmad Abdul Hafiz""@en .

  # Father of the child of Abu Ahmad Abdul Hafiz
  ?child2 dbo:parent ?father2 .

  # Find common father
  FILTER (?father1 = ?father2)
}
```",5,6,6,3,2,3,3,71,0,0,1,0,0.0,0
124,55,val,"Give me the military force of the war, that is an event and a military conflict and a societal event, of Frank Rhodes (British Army officer) and commander in the war, that is a societal event and a military conflict, of A Field Battery, Royal Australian Artillery and military force of the force, that is a societal event and a military conflict, of Herbert Kitchener, 1st Earl Kitchener.","SELECT ?result WHERE { ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. <http://dbpedia.org/resource/A_Field_Battery,_Royal_Australian_Artillery> <http://dbpedia.org/ontology/battle> ?v3 . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. <http://dbpedia.org/resource/Frank_Rhodes_(British_Army_officer)> <http://dbpedia.org/ontology/battle> ?v5 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?v3 <http://dbpedia.org/ontology/commander> ?result . ?result <http://dbpedia.org/ontology/battle> ?v5 . ?v2 <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Herbert_Kitchener,_1st_Earl_Kitchener> . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?result <http://dbpedia.org/ontology/battle> ?v2 . }","```sparql
SELECT ?frankRhodesWar ?fieldBatteryConflict ?kitchenerForce WHERE {
  # Find the war where Frank Rhodes was a commander
  ?frankRhodes dbo:commanderOf ?war .
  ?frankRhodes rdfs:label ""Frank Rhodes (British Army officer)""@en .
  FILTER (regex(str(?war), ""military conflict"", ""i"") && regex(str(?war), ""societal event"", ""i""))

  # Find the military conflict involving A Field Battery, Royal Australian Artillery
  ?fieldBattery dbo:partOf ?conflict .
  ?fieldBattery rdfs:label ""A Field Battery, Royal Australian Artillery""@en .
  FILTER (regex(str(?conflict), ""military conflict"", ""i"") && regex(str(?conflict), ""societal event"", ""i""))

  # Find the military force associated with Herbert Kitchener
  ?kitchener dbo:memberOf ?force .
  ?kitchener rdfs:label ""Herbert Kitchener, 1st Earl Kitchener""@en .
  FILTER (regex(str(?force), ""military conflict"", ""i"") && regex(str(?force), ""societal event"", ""i""))
}
```",6,13,7,2,3,3,3,71,0,0,9,0,0.0,0
274,21,val,"Give me the professional in  and associated musical artist of the actor, that is a musical artist, of Imagine the Sound and band member of Dizzy Gillespie.","SELECT ?result WHERE { ?v0 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . <http://dbpedia.org/resource/Imagine_the_Sound> <http://dbpedia.org/property/starring> ?v0 . ?result <http://dbpedia.org/property/occupation> """"@en . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?result <http://dbpedia.org/ontology/associatedMusicalArtist> <http://dbpedia.org/resource/Dizzy_Gillespie> . }","```sparql
SELECT ?actor ?associatedArtist WHERE {
  # Step 1: Find the actor of ""Imagine the Sound""
  ?sound dbo:performer ?actor .
  ?sound rdfs:label ""Imagine the Sound""@en .

  # Step 2: Check if this actor is a musical artist
  OPTIONAL { 
    ?actor dbo:occupation dbc:Musical_Artists .
  }

  # Step 3: Find associated musical artists of this actor
  OPTIONAL {
    ?actor dbo:associatedMusicalArtist ?associatedArtist .
  }
  
  # Step 4: Identify band members of Dizzy Gillespie
  ?gillespieBandMember dbo:bandMemberOf ?dizzyGillespie .
  ?dizzyGillespie rdfs:label ""Dizzy Gillespie""@en .

  # Step 5: Check for overlap between actor and associated musical artists with Dizzy Gillespie's band member
  FILTER (?actor = ?gillespieBandMember || ?associatedArtist = ?gillespieBandMember)
}
```",4,5,5,2,3,2,3,28,0,0,3,0,0.0,0
442,7,val,"Give me the resting place of the work of Roosevelt, Theodore and resting place of Fay Bainter.","SELECT ?result WHERE { ?v2 <http://dbpedia.org/property/author> ""Roosevelt, Theodore""@en . <http://dbpedia.org/resource/Fay_Bainter> <http://dbpedia.org/ontology/restingPlace> ?result . ?v2 <http://dbpedia.org/ontology/restingPlace> ?result . }","```sparql
SELECT ?entity ?restingPlace WHERE {
  # Resting place related to Theodore Roosevelt's work
  OPTIONAL {
    ?rooseveltWork dbo:location ?restingPlace .
    ?rooseveltWork rdfs:label ""Rough Rider Monument""@en .
  }

  # Resting place of Fay Bainter
  OPTIONAL {
    ?fayBainter dbo:deathPlace ?restingPlace .
    ?fayBainter rdfs:label ""Fay Bainter""@en .
  }
}
```",3,3,4,2,2,2,2,9,0,1,1,0.0,0.0,0
445,42,val,"Give me the death place of Patrick Moore and entity in the award of George H. Cameron and entity in the residence, that is a country, of Anna Sharkey.",SELECT ?result WHERE { ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. <http://dbpedia.org/resource/Anna_Sharkey> <http://dbpedia.org/property/residence> ?v2 . <http://dbpedia.org/resource/Patrick_Moore> <http://dbpedia.org/ontology/deathPlace> ?result . <http://dbpedia.org/resource/George_H._Cameron> <http://dbpedia.org/property/awards> ?v1 . ?result <http://dbpedia.org/ontology/location> ?v2 . ?result <http://dbpedia.org/ontology/country> ?v1 . },"```sparql
SELECT ?deathPlace ?awardEntity ?country WHERE {
  # Death place of Patrick Moore
  OPTIONAL {
    ?moore dbo:deathPlace ?deathPlace .
    ?moore rdfs:label ""Patrick Moore""@en .
  }

  # Entity in the award of George H. Cameron
  OPTIONAL {
    ?cameron dbo:award ?award .
    ?award dbo:recipient ?entity .
    ?cameron rdfs:label ""George H. Cameron""@en .
    BIND(?entity AS ?awardEntity)
  }
  
  # Country of residence for Anna Sharkey
  OPTIONAL {
    ?sharkey dbo:residence ?country .
    ?sharkey rdfs:label ""Anna Sharkey""@en .
    FILTER (isLiteral(?country) && regex(str(?country), ""^http://dbpedia.org/resource/.+/(Country)$"", ""i""))
  }
}
```",5,6,6,2,3,3,3,71,1,1,0,0.5,1.0,0.6666666666666666
965,48,val,"Give me the spouse of the spouse of the parent of Louise Mountbatten and parent of the person born, that is a noble, as Prince George of Battenberg.","SELECT ?result WHERE { ?v0 <http://dbpedia.org/ontology/parent> ?result . ?result <http://dbpedia.org/ontology/spouse> ?v1 . ?v3 <http://dbpedia.org/ontology/spouse> ?v1 . <http://dbpedia.org/resource/Louise_Mountbatten> <http://dbpedia.org/ontology/parent> ?v3 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Noble>. ?v0 <http://dbpedia.org/property/birthName> ""Prince George of Battenberg""@en . }","```sparql
SELECT ?finalSpouse WHERE {
  # Step 1: Find Louise Mountbatten's parent
  ?louise dbo:parent ?parent .
  ?louise rdfs:label ""Louise Mountbatten""@en .

  # Step 2: Find the spouse of this parent
  OPTIONAL { 
    ?parent dbo:spouse ?spouse1 .
  }

  # Step 3: Find the spouse of the spouse from step 2
  OPTIONAL {
    ?spouse1 dbo:spouse ?finalSpouse .
  }
  
  # Step 4: Identify a noble parent of someone born as Prince George of Battenberg
  ?prince dbo:parent ?nobleParent .
  ?prince rdfs:label ""Prince George of Battenberg""@en .
  FILTER EXISTS { ?nobleParent rdf:type dbo:NoblePerson } .

  # Step 5: Find the spouse of this noble parent
  OPTIONAL {
    ?nobleParent dbo:spouse ?finalSpouse .
  }
}
```",5,6,6,3,2,3,3,71,0,0,2,0,0.0,0
443,19,val,Give me the birthplace of Ulf Lundell and landmark at elevation of the award of William Shepherd and birthplace of Carl Larsson.,SELECT ?result WHERE { <http://dbpedia.org/resource/Carl_Larsson> <http://dbpedia.org/ontology/birthPlace> ?result . ?result <http://dbpedia.org/ontology/elevation> ?v1 . <http://dbpedia.org/resource/William_Shepherd> <http://dbpedia.org/property/awards> ?v1 . <http://dbpedia.org/resource/Ulf_Lundell> <http://dbpedia.org/ontology/birthPlace> ?result . },"```sparql
SELECT ?ulfLundellBirthplace ?landmarkAtElevation ?carlLarssonBirthplace WHERE {
  # Birthplace of Ulf Lundell
  ?ulfLundell dbo:birthPlace ?ulfLundellBirthplace .
  ?ulfLundell rdfs:label ""Ulf Lundell""@en .

  # Landmark at elevation (assuming Nobel Peace Prize in 1969, elevation is 1969 meters)
  OPTIONAL {
    ?landmark geo:elevation ?elevation .
    FILTER (?elevation = 1969) 
  }

  # Birthplace of Carl Larsson
  ?carlLarsson dbo:birthPlace ?carlLarssonBirthplace .
  ?carlLarsson rdfs:label ""Carl Larsson""@en .
}
```",4,4,5,2,3,2,3,28,1,2,0,0.3333333333333333,1.0,0.5
236,16,val,"Give me the party member of the administration of James Madison and party member of the administration, that is an organisation, of John Adams.",SELECT ?result WHERE { ?v2 <http://dbpedia.org/property/leader> <http://dbpedia.org/resource/John_Adams> . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?v3 <http://dbpedia.org/property/leader> <http://dbpedia.org/resource/James_Madison> . ?result <http://dbpedia.org/ontology/party> ?v3 . ?result <http://dbpedia.org/ontology/party> ?v2 . },"```sparql
SELECT ?madisonParty ?adamsParty WHERE {
  # Find James Madison's administration and his party
  ?madison dbo:presidentOf ?usa .
  ?madison rdfs:label ""James Madison""@en .
  ?madison dbo:partyAffiliation ?madisonParty .

  # Find John Adams' administration and his party, ensuring it is an organization
  ?adams dbo:presidentOf ?usa .
  ?adams rdfs:label ""John Adams""@en .
  ?adams dbo:partyAffiliation ?adamsParty .
  ?adamsParty a dbo:Organization .
}
```",4,5,5,2,2,3,2,20,0,0,19,0,0.0,0
826,55,val,"Give me the predecessor of the parent of Prince Friedrich of Hesse and by Rhine and successor of the child, that is a royalty, of Louis I, Grand Duke of Hesse and spouse of the child of Johann Heinrich Appel.","SELECT ?result WHERE { ?v5 <http://dbpedia.org/ontology/successor> ?result . <http://dbpedia.org/resource/Louis_I,_Grand_Duke_of_Hesse> <http://dbpedia.org/ontology/child> ?v5 . ?v3 <http://dbpedia.org/ontology/spouse> ?result . <http://dbpedia.org/resource/Prince_Friedrich_of_Hesse_and_by_Rhine> <http://dbpedia.org/ontology/parent> ?v2 . ?result <http://dbpedia.org/ontology/successor> ?v2 . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v3 <http://dbpedia.org/property/father> ""Johann Heinrich Appel""@en . }","```sparql
SELECT ?finalEntity WHERE {
  # Find Prince Friedrich of Hesse and by Rhine and his parent
  ?friedrich dbo:parent ?parent .
  ?friedrich rdfs:label ""Prince Friedrich of Hesse and by Rhine""@en .

  # Find predecessor of the parent of Prince Friedrich
  OPTIONAL { 
    ?predecessor dbo:succ ?parent .
  }

  # Find Louis I, Grand Duke of Hesse and a royal child
  ?louis rdfs:label ""Louis I, Grand Duke of Hesse""@en .
  ?royalChild dbo:childOf ?louis .
  FILTER (regex(str(?royalChild), ""Royal"", ""i""))

  # Find successor of the royal child
  OPTIONAL {
    ?successor dbo:succ ?royalChild .
  }

  # Find Johann Heinrich Appel and one of his children
  ?appel rdfs:label ""Johann Heinrich Appel""@en .
  ?childOfAppel dbo:parent ?appel .

  # Find spouse of the child of Johann Heinrich Appel
  OPTIONAL {
    ?spouse dbo:spouse ?childOfAppel .
  }

  # Final entity is both successor and spouse
  FILTER (?successor = ?spouse)
  BIND(?successor AS ?finalEntity)
}
```",6,7,7,2,3,3,3,71,0,0,1,0,0.0,0
892,45,val,"Give me the landmark at elevation of 58 and entity in the administration, that is Italian and a region and a settlement and an administrative region, of the party, that is a political party and an organisation, of Andrea Cozzolino and entity in Italy.","SELECT ?result WHERE { ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/PoliticalParty>. ?result <http://dbpedia.org/ontology/province> ?v0 . <http://dbpedia.org/resource/Andrea_Cozzolino> <http://dbpedia.org/ontology/party> ?v3 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/AdministrativeRegion>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?result <http://dbpedia.org/ontology/elevation> ""58""^^<http://www.w3.org/2001/XMLSchema#integer> . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Region>. ?v0 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Italy>. ?result <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Italy> . ?v0 <http://dbpedia.org/property/leaderParty> ?v3 . }","```sparql
SELECT ?landmark ?region ?party WHERE {
  # Find landmark at elevation 58
  ?landmark dbo:elevation ""58""^^xsd:integer ;
            dbo:country dbc:Italy .
  
  # Identify Italian region that is also a settlement and administrative region
  ?region rdf:type dbo:Region ;
          rdfs:label ?regionLabel ;
          dbo:country dbc:Italy ;
          dbo:settlement ?settlement ;
          dbo:administrativeRegion ?adminRegion .

  # Find political party of Andrea Cozzolino
  ?cozzolino foaf:name ""Andrea Cozzolino""@en .
  ?party rdf:type dbo:PoliticalParty, dbo:Organization ;
         dbo:member ?cozzolino ;
         dbo:country dbc:Italy .

  # Ensure all entities are in Italy
  FILTER (regex(str(?regionLabel), ""Italy"", ""i""))
}
```",5,11,6,3,3,3,3,71,0,0,2,0,0.0,0
955,17,val,"Give me the band of the band member, that is a musical artist and an artist, of the reference, that is a band and a group and an organisation, to Street Dogs and band of Nate Albert.","SELECT ?result WHERE { ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. ?result <http://dbpedia.org/ontology/bandMember> <http://dbpedia.org/resource/Nate_Albert> . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?v3 <http://dbpedia.org/ontology/associatedMusicalArtist> ?v0 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Group>. ?v0 <http://xmlns.com/foaf/0.1/name> ""Street Dogs""@en . ?result <http://dbpedia.org/ontology/bandMember> ?v3 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Band>. }","```sparql
SELECT ?band WHERE {
  # Identify Street Dogs and its members
  ?streetDogs dbo:member ?nateAlbert .
  ?streetDogs rdfs:label ""Street Dogs""@en .

  # Find Nate Albert's other band affiliations
  OPTIONAL { 
    ?nateAlbert dbo:memberOf ?referenceBand .
  }

  # Ensure the reference band is also associated with Street Dogs
  OPTIONAL {
    ?referenceBand dbo:member ?commonMember .
    ?commonMember rdfs:label ""Nate Albert""@en .
  }

  # Find the band of the referenced member who is a musical artist and an artist
  OPTIONAL {
    ?commonMember dbo:memberOf ?band .
    ?commonMember rdf:type dbo:MusicalArtist .
    ?commonMember rdf:type dbo:Artist .
  }
}
```",4,9,5,3,2,3,2,20,0,0,1,0,0.0,0
965,44,val,"Give me the spouse of Prince Louis of Battenberg and parent of the child, that is a royalty, of Prince Louis of Battenberg and parent of the person born, that is a noble, as Prince George of Battenberg.","SELECT ?result WHERE { ?v0 <http://dbpedia.org/ontology/parent> ?result . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Noble>. ?v4 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Prince_Louis_of_Battenberg> . ?v4 <http://dbpedia.org/ontology/parent> ?result . ?result <http://dbpedia.org/ontology/spouse> <http://dbpedia.org/resource/Prince_Louis_of_Battenberg> . ?v0 <http://dbpedia.org/property/birthName> ""Prince George of Battenberg""@en . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. }","```sparql
SELECT ?spouse ?child ?parent WHERE {
  # Find spouse of Prince Louis of Battenberg
  ?princeLouis dbo:spouse ?spouse .
  ?princeLouis rdfs:label ""Prince Louis of Battenberg""@en .

  # Identify children who are royalty
  OPTIONAL { 
    ?princeLouis dbo:child ?child .
    FILTER (regex(str(?child), ""royalty"", ""i""))
  }

  # Find parent of the royal child
  OPTIONAL {
    ?child dbo:parent ?parent .
  }
  
  # Ensure one of these individuals is Prince George of Battenberg and a noble
  OPTIONAL {
    ?person rdfs:label ""Prince George of Battenberg""@en .
    FILTER (regex(str(?spouse), str(?person)))
    FILTER (regex(str(?child), str(?person)))
    FILTER (regex(str(?parent), str(?person)))
    ?person dbo:noble true .
  }
}
```",5,7,6,2,3,3,3,71,1,57289,0,1.7455053237912374e-05,1.0,3.4909497128693856e-05
865,40,val,"Give me the native of the residence, that is a country, of the person decedent at Patna and father of Shahla Khatun and father of AK Abdul Momen.",SELECT ?result WHERE { ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. <http://dbpedia.org/resource/Shahla_Khatun> <http://dbpedia.org/property/father> ?result . ?v1 <http://dbpedia.org/ontology/deathPlace> <http://dbpedia.org/resource/Patna> . <http://dbpedia.org/resource/AK_Abdul_Momen> <http://dbpedia.org/property/father> ?result . ?v1 <http://dbpedia.org/property/residence> ?v0 . ?result <http://dbpedia.org/ontology/birthPlace> ?v0 . },"```sparql
SELECT ?nativeCountry WHERE {
  # Identify the person who is the father of Shahla Khatun and AK Abdul Momen
  ?person dbo:child ?shahla .
  ?person dbo:child ?akAbdulMomen .
  ?shahla rdfs:label ""Shahla Khatun""@en .
  ?akAbdulMomen rdfs:label ""AK Abdul Momen""@en .

  # Find the country of residence for this person
  OPTIONAL {
    ?person dbo:residence ?countryResidence .
    FILTER (isLiteral(?countryResidence))
  }

  # Determine the native country of this person
  OPTIONAL {
    ?person dbo:nativeCountry ?nativeCountry .
    FILTER (isLiteral(?nativeCountry))
  }
}
```",5,6,6,3,3,3,3,71,0,0,1,0,0.0,0
892,51,val,"Give me the landmark at elevation of the award of Anna Ishii and entity in the administration, that is Italian and a region and a settlement and an administrative region, of the party, that is a political party and an organisation, of Andrea Cozzolino.",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/elevation> ?v4 . ?v0 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Italy>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. <http://dbpedia.org/resource/Anna_Ishii> <http://dbpedia.org/property/awards> ?v4 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?result <http://dbpedia.org/ontology/province> ?v0 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/PoliticalParty>. <http://dbpedia.org/resource/Andrea_Cozzolino> <http://dbpedia.org/ontology/party> ?v3 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Region>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/AdministrativeRegion>. ?v0 <http://dbpedia.org/property/leaderParty> ?v3 . },"```sparql
SELECT ?landmark ?entity WHERE {
  # Step 1: Identify Anna Ishii's Award
  ?annaIshii dbo:awardReceived ?award .
  ?annaIshii rdfs:label ""Anna Ishii""@en .

  # Step 2: Find the Landmark at the Elevation of the Award
  ?award dbo:elevation ?elevation .
  ?landmark dbo:elevation ?elevation .
  
  # Step 3: Identify Andrea Cozzolino's Political Party
  ?andreaCozzolino dbo:partyAffiliation ?party .
  ?andreaCozzolino rdfs:label ""Andrea Cozzolino""@en .

  # Step 4: Find an Entity in the Administration of the Party
  ?party dbo:administration ?adminEntity .

  # Step 5: Filter for Italian Entities that are Regions and Settlements
  FILTER (regex(str(?adminEntity), ""Italy"", ""i""))
  ?adminEntity rdf:type ?type .
  FILTER (
    (?type = dbpedia-owl:Region || 
     ?type = dbpedia-owl:Settlement) &&
    ?adminEntity dbo:country dbr:Italy &&
    ?adminEntity dbo:administrativeRegion true
  )

  # Bind the results to variables
  BIND(?landmark AS ?landmark)
  BIND(?adminEntity AS ?entity)
}
```",5,11,6,3,2,3,3,71,0,0,2,0,0.0,0
582,45,val,"Give me the player in Kazuaki Nagasawa and figure known as the nickname of the team, that is an organisation, of Hajime Moriyasu and reference to Japan.","SELECT ?result WHERE { ?result <http://xmlns.com/foaf/0.1/name> ""Japan""@en . <http://dbpedia.org/resource/Kazuaki_Nagasawa> <http://dbpedia.org/ontology/team> ?result . ?v0 <http://dbpedia.org/ontology/coach> <http://dbpedia.org/resource/Hajime_Moriyasu> . ?v0 <http://dbpedia.org/property/nickname> ?v1 . ?result <http://dbpedia.org/property/nickname> ?v1 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. }","```sparql
SELECT ?playerTeam ?teamNickname WHERE {
  # Find Kazuaki Nagasawa and his team
  ?nagasawa dbo:spouse ?player .
  ?nagasawa rdfs:label ""Kazuaki Nagasawa""@en .
  ?player dbo:memberOfSportsTeam ?playerTeam .

  # Find Hajime Moriyasu's associated football team
  ?moriyasu dbo:position ?teamPosition .
  ?moriyasu rdfs:label ""Hajime Moriyasu""@en .
  ?teamPosition dbo:organization ?footballTeam .
  
  # Get the nickname of the football team
  ?footballTeam dbo:nickname ?teamNickname .

  # Ensure all entities are related to Japan
  FILTER EXISTS { 
    ?nagasawa dbo:country dbr:Japan .
    ?moriyasu dbo:country dbr:Japan .
    ?playerTeam dbo:country dbr:Japan .
    ?footballTeam dbo:country dbr:Japan .
  }
}
```",5,6,6,3,3,3,3,71,0,0,1,0,0.0,0
417,49,val,"Give me the spouse of the parent, that is a royalty, of Count Ingolf of Rosenborg and child of the child, that is a royalty, of the parent, that is a royalty, of Alexandrine of Mecklenburg-Schwerin.",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/parent> ?v1 . ?v2 <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Count_Ingolf_of_Rosenborg> . ?result <http://dbpedia.org/ontology/spouse> ?v2 . ?v1 <http://dbpedia.org/property/father> ?v0 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. <http://dbpedia.org/resource/Alexandrine_of_Mecklenburg-Schwerin> <http://dbpedia.org/ontology/parent> ?v0 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. },"```sparql
SELECT ?spouseOfIngolfsParent ?childOfAlexandrineDescendant WHERE {
  # Step 1: Find Count Ingolf of Rosenborg's parent who is royalty
  ?ingolf dbo:parent ?royalParent .
  ?ingolf rdfs:label ""Count Ingolf of Rosenborg""@en .

  # Ensure the parent is royalty
  ?royalParent rdf:type dbo:RoyalFamilyMember .

  # Step 2: Find the spouse of this royal parent
  ?royalParent dbo:spouse ?spouseOfIngolfsParent .
  
  # Step 3: Find Alexandrine's parent who is royalty
  ?alexandrine dbo:parent ?alexandrineRoyalParent .
  ?alexandrine rdfs:label ""Alexandrine of Mecklenburg-Schwerin""@en .

  # Ensure the parent is royalty
  ?alexandrineRoyalParent rdf:type dbo:RoyalFamilyMember .

  # Step 4: Find a child of Alexandrine's royal parent who is also royalty
  ?alexandrineRoyalChild dbo:parent ?alexandrineRoyalParent .
  ?alexandrineRoyalChild rdf:type dbo:RoyalFamilyMember .

  # Step 5: Find a child of this second royal individual
  ?childOfAlexandrineDescendant dbo:parent ?alexandrineRoyalChild .
}
```",5,8,6,3,2,3,3,71,0,0,1,0,0.0,0
987,51,val,"Give me the entity in the region, that is a country, of the time zone, that is a sports event, in Canicosa de la Sierra and birth place of the actor of All for Free.",SELECT ?result WHERE { <http://dbpedia.org/resource/All_for_Free> <http://dbpedia.org/property/starring> ?v4 . ?result <http://dbpedia.org/ontology/country> ?v0 . <http://dbpedia.org/resource/Canicosa_de_la_Sierra> <http://dbpedia.org/ontology/timeZone> ?v3 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. ?v4 <http://dbpedia.org/ontology/birthPlace> ?result . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsEvent>. ?v0 <http://dbpedia.org/property/timeZone> ?v3 . },"```sparql
# Step 1: Find Canicosa de la Sierra's time zone
SELECT ?timeZone WHERE {
  ?canicosa dbo:location ?location .
  ?canicosa rdfs:label ""Canicosa de la Sierra""@en .
  ?location dbo:timezone ?timeZone .
}

# Step 2: Identify sports events in that time zone
SELECT ?sportsEvent WHERE {
  ?event dbo:timezone ?timeZone .
  ?event rdf:type dbo:SportsEvent .
}

# Step 3: Determine the region (country) of these sports events
SELECT DISTINCT ?region WHERE {
  ?sportsEvent dbo:location ?location .
  ?location dbo:country ?region .
}

# Step 4: Identify the actor from ""All for Free""
SELECT ?actor WHERE {
  ?movie dbo:starring ?actor .
  ?movie rdfs:label ""All for Free""@en .
}

# Step 5: Find the birthplace of this actor
SELECT DISTINCT ?birthPlace WHERE {
  ?actor dbo:birthPlace ?birthPlace .
}

# Final step: Combine to find the country that matches both criteria
SELECT DISTINCT ?country WHERE {
  # From sports event region
  ?sportsEvent dbo:location ?location1 .
  ?location1 dbo:country ?country .

  # From actor's birthplace
  ?actor dbo:birthPlace ?birthPlace .
  ?birthPlace dbo:country ?country .

  # Ensure the actor is from ""All for Free""
  ?movie dbo:starring ?actor .
  ?movie rdfs:label ""All for Free""@en .
}
```",5,7,6,3,2,3,3,71,0,0,4,0,0.0,0
124,47,val,"Give me the military force of the war, that is an event and a military conflict and a societal event, of the awardee of British South Africa Company Medal and commander in the war, that is a societal event and a military conflict, of A Field Battery, Royal Australian Artillery.","SELECT ?result WHERE { ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?result <http://dbpedia.org/ontology/battle> ?v4 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?v0 <http://dbpedia.org/ontology/battle> ?v4 . ?v2 <http://dbpedia.org/ontology/commander> ?result . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. <http://dbpedia.org/resource/A_Field_Battery,_Royal_Australian_Artillery> <http://dbpedia.org/ontology/battle> ?v2 . ?v0 <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/British_South_Africa_Company_Medal> . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. }","```sparql
SELECT ?militaryForce WHERE {
  # Step 1: Find the awardee of the British South Africa Company Medal
  ?person dbo:award ""British South Africa Company Medal"" .
  
  # Step 2: Identify the war they commanded in
  ?war dbo:commander ?person ;
       a dbo:MilitaryConflict, dbo:SocietalEvent .

  # Step 3: Find A Field Battery, Royal Australian Artillery's involvement in this war
  ?battery dbo:participatesIn ?war ;
           rdfs:label ""A Field Battery, Royal Australian Artillery""@en .
  
  # Step 4: Identify the military force involved in this war
  ?militaryForce dbo:participatesIn ?war .
}
```",5,10,6,3,2,3,3,71,0,0,10,0,0.0,0
865,48,val,"Give me the native of the residence, that is a country, of the person decedent at Patna and father of the child of Abu Ahmad Abdul Hafiz.",SELECT ?result WHERE { ?v2 <http://dbpedia.org/property/father> ?result . ?v1 <http://dbpedia.org/property/residence> ?v0 . ?v2 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Abu_Ahmad_Abdul_Hafiz> . ?v1 <http://dbpedia.org/ontology/deathPlace> <http://dbpedia.org/resource/Patna> . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. ?result <http://dbpedia.org/ontology/birthPlace> ?v0 . },"```sparql
SELECT ?nativeCountry WHERE {
  # Step 1: Identify Abu Ahmad Abdul Hafiz and his child
  ?hafiz dbo:child ?child .
  ?hafiz rdfs:label ""Abu Ahmad Abdul Hafiz""@en .

  # Step 2: Find the father of this child
  ?father dbo:parent ?child .

  # Step 3: Identify the person decedent at Patna and is also the father
  ?person dbo:deathPlace ?patna .
  ?person rdfs:label ""Patna""@en .
  FILTER (?person = ?father)

  # Step 4: Determine the residence of this person, ensuring it's a country
  ?person dbo:residence ?residence .
  ?residence rdf:type dbo:Country .

  # Step 5: Identify the native country of this residence
  ?residence dbo:nativeCountry ?nativeCountry .
}
```",5,6,6,3,2,3,3,71,0,0,1,0,0.0,0
465,42,val,"Give me the spouse of Archduchess Barbara of Austria and successor of the child, that is a royalty, of Anne of Brittany and successor of the child of Alfonso I d'Este.",SELECT ?result WHERE { <http://dbpedia.org/resource/Anne_of_Brittany> <http://dbpedia.org/ontology/child> ?v1 . ?v2 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Alfonso_I_d'Este> . ?v2 <http://dbpedia.org/ontology/successor> ?result . ?v1 <http://dbpedia.org/ontology/successor> ?result . ?result <http://dbpedia.org/ontology/spouse> <http://dbpedia.org/resource/Archduchess_Barbara_of_Austria> . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. },"```sparql
SELECT ?spouse WHERE {
  # Find spouse of Archduchess Barbara of Austria
  ?barbara dbo:spouse ?spouse .
  ?barbara rdfs:label ""Archduchess Barbara of Austria""@en .

  # Find a royal child of Anne of Brittany and their successor
  OPTIONAL {
    ?anneChild dbo:parent ?anne .
    ?anne rdfs:label ""Anne of Brittany""@en .
    FILTER (regex(str(?anneChild), ""royalty"", ""i""))
    ?anneChild dbo:succ ?successor1 .
  }

  # Find a child of Alfonso I d'Este and their successor
  OPTIONAL {
    ?alfonsoChild dbo:parent ?alfonso .
    ?alfonso rdfs:label ""Alfonso I d'Este""@en .
    ?alfonsoChild dbo:succ ?successor2 .
  }

  # Check if the spouse is connected to both successors
  FILTER (?spouse = ?successor1 || ?spouse = ?successor2)
}
```",5,6,6,2,3,3,3,71,0,0,1,0,0.0,0
715,55,val,"Give me the commander in the force, that is a military conflict, of Abd el-Krim and leader of the office, that is a government agency and an organisation, of Carlos Franco Iribarnegaray and commander in the force of Francisco Largo Caballero.",SELECT ?result WHERE { ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. <http://dbpedia.org/resource/Carlos_Franco_Iribarnegaray> <http://dbpedia.org/property/office> ?v2 . ?v3 <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Abd_el-Krim> . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v5 <http://dbpedia.org/ontology/commander> ?result . ?v5 <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Francisco_Largo_Caballero> . ?v3 <http://dbpedia.org/ontology/commander> ?result . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/GovernmentAgency>. ?v2 <http://dbpedia.org/ontology/leader> ?result . },"```sparql
SELECT ?commonIndividual WHERE {
  # Find military conflict for Abd el-Krim and Francisco Largo Caballero
  ?conflict dbo:commander ?abdElKrim .
  ?abdElKrim rdfs:label ""Abd el-Krim""@en .

  ?conflict dbo:commander ?franciscoLargoCaballero .
  ?franciscoLargoCaballero rdfs:label ""Francisco Largo Caballero""@en .

  # Find office or organization led by Carlos Franco Iribarnegaray
  ?office dbo:leader ?carlosFrancoIribarnegaray .
  ?carlosFrancoIribarnegaray rdfs:label ""Carlos Franco Iribarnegaray""@en .

  # Check if there is a common individual in these roles
  OPTIONAL {
    ?conflict dbo:commander ?commonIndividual .
    ?office dbo:leader ?commonIndividual .
  }
}
```",6,9,7,2,3,3,3,71,0,0,1,0,0.0,0
976,52,val,"Give me the office of Naci Bostancı and office of the mayor, that is a politician and an office holder and Turkish, of Nation Alliance (Turkey) and office of the leader, that is a politician, of the administration, that is an organisation, of Kemal Kılıçdaroğlu.",SELECT ?result WHERE { ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v4 <http://dbpedia.org/ontology/nationality> <http://dbpedia.org/resource/Turkey>. ?v3 <http://dbpedia.org/ontology/leader> ?v1 . ?v1 <http://dbpedia.org/property/office> ?result . <http://dbpedia.org/resource/Naci_Bostancı> <http://dbpedia.org/property/office> ?result . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. <http://dbpedia.org/resource/Nation_Alliance_(Turkey)> <http://dbpedia.org/property/leader> ?v4 . ?v3 <http://dbpedia.org/property/leader> <http://dbpedia.org/resource/Kemal_Kılıçdaroğlu> . ?v4 <http://dbpedia.org/property/office> ?result . },"```sparql
SELECT ?naciOffice ?mayorOffice ?leaderOffice WHERE {
  # Find the office of Naci Bostancı
  ?naci dbo:office ?naciOffice .
  ?naci rdfs:label ""Naci Bostancı""@en .

  # Find the mayor associated with Nation Alliance (Turkey)
  OPTIONAL {
    ?mayor dbo:memberOf ?nationAlliance .
    ?mayor dbo:office ?mayorOffice .
    ?mayor rdf:type dbo:Politician ;
           dbo:occupationLabel ""Mayor""@en .
    ?nationAlliance rdfs:label ""Nation Alliance (Turkey)""@en .
  }

  # Find the leader of Kemal Kılıçdaroğlu's administration
  OPTIONAL {
    ?administration dbo:leader ?leader .
    ?administration rdf:type dbo:Organization ;
                    dbo:headOf ?kemalKilicdaroglu .
    ?kemalKilicdaroglu rdfs:label ""Kemal Kılıçdaroğlu""@en .
    ?leader rdf:type dbo:Politician .
  }
}
```",6,11,7,3,3,3,3,71,0,0,1,0,0.0,0
445,40,val,"Give me the entity in the residence, that is a country, of the resident, that is an athlete, of Great Britain and entity in United Kingdom and death place of Patrick Moore.",SELECT ?result WHERE { ?v2 <http://dbpedia.org/property/residence> <http://dbpedia.org/resource/Great_Britain> . ?v2 <http://dbpedia.org/property/residence> ?v1 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. ?result <http://dbpedia.org/ontology/location> ?v1 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Athlete>. <http://dbpedia.org/resource/Patrick_Moore> <http://dbpedia.org/ontology/deathPlace> ?result . ?result <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/United_Kingdom> . },"```sparql
SELECT ?entityInResidenceCountry WHERE {
  # Find an athlete from Great Britain
  ?athlete dbo:nationality dbr:United_Kingdom ;
           a dbo:Athlete .

  # Determine the residence of this athlete, which is in the United Kingdom
  ?athlete dbo:residence ?residence .
  ?residence geo:hasCoordinate ?coordinate .
  ?residence dbo:country dbr:United_Kingdom .

  # Find Patrick Moore's death place
  ?patrickMoore dbo:deathPlace ?deathPlace .
  ?patrickMoore rdfs:label ""Patrick Moore""@en .

  # Identify the country of the athlete's residence
  ?residence dbo:country ?country .

  # Find an entity in this country that is also in the United Kingdom
  ?entityInResidenceCountry dbo:location ?residence ;
                            geo:hasCoordinate ?coordinate .
}
```",5,7,6,3,3,3,3,71,0,0,1,0,0.0,0
839,50,val,"Give me the band of the band, that is a musical artist, of Charlie Huhn and band of the member of the band, that is a band and a group, of Peter Schorowsky.",SELECT ?result WHERE { ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. <http://dbpedia.org/resource/Peter_Schorowsky> <http://dbpedia.org/ontology/associatedMusicalArtist> ?v0 . ?result <http://dbpedia.org/ontology/bandMember> ?v4 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Band>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Group>. ?result <http://dbpedia.org/ontology/bandMember> ?v3 . ?v0 <http://dbpedia.org/ontology/bandMember> ?v4 . <http://dbpedia.org/resource/Charlie_Huhn> <http://dbpedia.org/ontology/associatedMusicalArtist> ?v3 . },"```sparql
SELECT ?charlieBandOfBand ?peterBandOfMember WHERE {
  # Find Charlie Huhn's band
  ?charlie dbo:band ?charlieBand .
  ?charlie rdfs:label ""Charlie Huhn""@en .

  # Check if the band is a musical artist and find its band
  OPTIONAL { 
    ?charlieBand dbo:type dbr:Musical_artist .
    ?charlieBand dbo:band ?charlieBandOfBand .
  }

  # Find Peter Schorowsky's band
  ?peter dbo:member ?peterBand .
  ?peter rdfs:label ""Peter Schorowsky""@en .

  # Check if the band is a group and find its band or group
  OPTIONAL {
    ?peterBand dbo:type dbr:Musical_group .
    ?peterBand dbo:band ?peterBandOfMember .
  }
}
```",5,8,6,3,2,3,3,71,0,0,1,0,0.0,0
507,46,val,"Give me the spouse of the person born as the birth name of Anne V. Coates and director of the movie, that is a movie and a work, with Beryl Reid.",SELECT ?result WHERE { <http://dbpedia.org/resource/Anne_V._Coates> <http://dbpedia.org/property/birthName> ?v2 . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Film>. ?v1 <http://dbpedia.org/property/birthName> ?v2 . ?v4 <http://dbpedia.org/property/starring> <http://dbpedia.org/resource/Beryl_Reid> . ?v4 <http://dbpedia.org/ontology/director> ?result . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?result <http://dbpedia.org/ontology/spouse> ?v1 . },"```sparql
SELECT ?spouse WHERE {
  # Step 1: Identify Anne V. Coates by her director role
  ?anneVCoates dbo:birthName ?birthName .
  ?anneVCoates dbo:directorOf ?movie .
  ?anneVCoates rdfs:label ""Anne V. Coates""@en .

  # Step 2: Find a movie directed by Anne V. Coates with Beryl Reid
  ?movie dbo:starring ?berylReid .
  ?berylReid rdfs:label ""Beryl Reid""@en .

  # Step 3: Identify the birth name of Anne V. Coates
  FILTER (str(?birthName) = ""Anne Veronica Coates"")

  # Step 4: Find any person with this birth name and determine their spouse
  ?person dbo:birthName ?birthName .
  ?person dbo:spouse ?spouse .
}
```",5,7,6,3,2,3,3,71,0,0,1,0,0.0,0
216,43,val,"Give me the player in the coach, that is a soccer player and a sports manager and a soccer manager, of the player, that is an organisation and a sports club and a soccer club, in Džemal Berberović and player in Igor Bišćan and team of Ognjen Vukojević.",SELECT ?result WHERE { ?v0 <http://dbpedia.org/ontology/coach> ?v4 . <http://dbpedia.org/resource/Igor_Bišćan> <http://dbpedia.org/ontology/team> ?result . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsManager>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerClub>. <http://dbpedia.org/resource/Džemal_Berberović> <http://dbpedia.org/ontology/team> ?v0 . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerPlayer>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsClub>. ?v4 <http://dbpedia.org/ontology/team> ?result . ?result <http://dbpedia.org/ontology/coach> <http://dbpedia.org/resource/Ognjen_Vukojević> . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerManager>. },"```sparql
SELECT ?coach WHERE {
  # Find Džemal Berberović's team
  ?team1 dbo:playerInTeam Džemal_Berberović .
  
  # Find Igor Bišćan's team
  ?team2 dbo:playerInTeam Igor_Bišćan .
  
  # Find Ognjen Vukojević's team
  ?team3 dbo:playerInTeam Ognjen_Vukojević .

  # The coach must have played for all three teams
  ?coach dbo:playerInTeam ?team1 ;
         dbo:playerInTeam ?team2 ;
         dbo:playerInTeam ?team3 .
  
  # The coach is also a soccer player and sports manager
  ?coach rdf:type dbo:SoccerPlayer, dbo:SportsManager .

  # Ensure the team is an organization, sports club, and soccer club
  ?team1 rdf:type dbo:Organization, dbo:SportsClub, dbo:SoccerClub .
  ?team2 rdf:type dbo:Organization, dbo:SportsClub, dbo:SoccerClub .
  ?team3 rdf:type dbo:Organization, dbo:SportsClub, dbo:SoccerClub .
}
```",5,11,6,3,3,3,3,71,0,0,1,0,0.0,0
926,48,val,"Give me the father of the father of the spouse of Neşerek Kadın and child of the father, that is a royalty, of Mustafa III.",SELECT ?result WHERE { ?v0 <http://dbpedia.org/ontology/child> ?result . ?v3 <http://dbpedia.org/property/father> ?v1 . <http://dbpedia.org/resource/Mustafa_III> <http://dbpedia.org/property/father> ?v0 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v1 <http://dbpedia.org/property/father> ?result . <http://dbpedia.org/resource/Neşerek_Kadın> <http://dbpedia.org/ontology/spouse> ?v3 . },"```sparql
SELECT ?grandfather WHERE {
  # Step 1: Find Neşerek Kadın's spouse
  ?neserek dbo:spouse ?spouse .
  ?neserek rdfs:label ""Neşere Kadın""@en .

  # Step 2: Identify the father of this spouse
  ?spouse dbo:parent ?fatherOfSpouse .

  # Step 3: Find a child of this father who is royalty (Mustafa III)
  OPTIONAL {
    ?mustafa dbo:parent ?fatherOfSpouse .
    ?mustafa rdfs:label ""Mustafa III""@en .
    FILTER EXISTS { ?mustafa rdf:type dbo:Monarch }
  }

  # Step 4: Find the father of this royal child
  ?fatherOfSpouse dbo:child ?royalChild .
  OPTIONAL {
    ?royalChild dbo:parent ?grandfather .
  }
}
```",5,6,6,3,2,3,3,71,0,0,1,0,0.0,0
933,54,val,Give me the reference to the birth name of the professional in Musician and band of The Ramong Sound and band of the band of Alan Warner (musician).,SELECT ?result WHERE { ?v2 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?result <http://xmlns.com/foaf/0.1/name> ?v4 . <http://dbpedia.org/resource/The_Ramong_Sound> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v1 <http://dbpedia.org/property/occupation> <http://dbpedia.org/resource/Musician> . ?v1 <http://dbpedia.org/property/birthName> ?v4 . <http://dbpedia.org/resource/Alan_Warner_(musician)> <http://dbpedia.org/ontology/associatedMusicalArtist> ?v2 . },"```sparql
SELECT ?birthName WHERE {
  # Find members of The Ramones and their birth names
  ?ramone dbo:memberOf dbr:The_Ramones .
  ?ramone dbo:birthName ?birthName .

  UNION

  # Find bands associated with Alan Warner and their members' birth names
  ?band dbo:member ?warnerMember .
  ?warnerMember dbo:birthName ?birthName .
  ?warner dbr:Alan_Warner .
  ?warner dbo:memberOf ?band .
}
```",6,6,7,3,3,3,3,71,0,0,1,0,0.0,0
329,22,val,"Give me the entity in the region, that is a country, of Western European Time and birthplace of the author of The Tailor and Ansty.",SELECT ?result WHERE { <http://dbpedia.org/resource/The_Tailor_and_Ansty> <http://dbpedia.org/property/author> ?v2 . ?result <http://dbpedia.org/ontology/country> ?v3 . ?v3 <http://dbpedia.org/property/timeZone> <http://dbpedia.org/resource/Western_European_Time> . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. ?v2 <http://dbpedia.org/ontology/birthPlace> ?result . },"```sparql
SELECT ?country WHERE {
  # Step 1: Find the author of ""The Tailor and Ansty""
  ?author dbo:work ?book .
  ?book rdfs:label ""The Tailor and Ansty""@en .

  # Step 2: Get the birthplace of this author
  ?author dbo:birthPlace ?birthPlace .

  # Step 3: Identify regions using Western European Time (WET)
  ?region dbo:timeZone ?timezone .
  FILTER regex(str(?timezone), ""Western European Time"", ""i"")

  # Step 4: Find a country in that region
  ?country dbo:partOfRegion ?region .
}
```",4,5,5,2,2,2,3,28,0,0,1,0,0.0,0
136,7,val,Give me the landmark at elevation of 5 and region coded as the area code of Levenhagen.,"SELECT ?result WHERE { <http://dbpedia.org/resource/Levenhagen> <http://dbpedia.org/ontology/areaCode> ?v0 . ?result <http://dbpedia.org/ontology/elevation> ""5""^^<http://www.w3.org/2001/XMLSchema#integer> . ?result <http://dbpedia.org/ontology/areaCode> ?v0 . }","```sparql
SELECT ?landmark WHERE {
  # Find landmarks at an elevation of 5
  ?landmark dbo:elevation ?elevation .
  FILTER (?elevation = 5)

  # Identify the area code for Levenhagen (assuming it's a postal code or similar)
  ?levenhagen dbo:postalCode ?areaCode .

  # Find landmarks in the region with this area code
  ?landmark dbo:location ?location .
  ?location dbo:postalCode ?areaCode .

  # Ensure the location is associated with Levenhagen
  ?location rdfs:label ""Levenhagen""@en .
}
```",3,3,4,2,2,2,2,9,0,0,1,0,0.0,0
582,43,val,"Give me the player in the father, that is an athlete and a soccer manager and a sports manager, of the child of Kazuaki Nagasawa and figure known as --10-19 and reference to Japan.","SELECT ?result WHERE { ?v0 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Kazuaki_Nagasawa> . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerManager>. ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Athlete>. ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsManager>. ?result <http://dbpedia.org/property/nickname> ""--10-19""^^<http://www.w3.org/2001/XMLSchema#gMonthDay> . ?v4 <http://dbpedia.org/ontology/team> ?result . ?v0 <http://dbpedia.org/property/father> ?v4 . ?result <http://xmlns.com/foaf/0.1/name> ""Japan""@en . }","```sparql
SELECT ?father WHERE {
  # Find Kazuaki Nagasawa and his child
  ?nagasawa dbo:child ?child .
  ?nagasawa rdfs:label ""Kazuaki Nagasawa""@en .

  # Identify the father of this child who is an athlete, soccer manager, and sports manager
  ?child dbo:parent ?father .
  
  # Ensure the father has roles as an athlete, soccer manager, and sports manager
  ?father dbo:occupation ?athleteRole .
  ?father dbo:occupation ?soccerManagerRole .
  ?father dbo:occupation ?sportsManagerRole .

  FILTER (
    regex(str(?athleteRole), ""Athlete"", ""i"") &&
    regex(str(?soccerManagerRole), ""Soccer manager"", ""i"") &&
    regex(str(?sportsManagerRole), ""Sports manager"", ""i"")
  )
}
```",5,8,6,3,3,3,3,71,0,0,1,0,0.0,0
933,48,val,"Give me the band of the band of the band, that is an artist and a musical artist, of The Ramong Sound and band of the band, that is a group and a band and an organisation, of Alan Warner (musician).",SELECT ?result WHERE { ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. ?v1 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Band>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Group>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. <http://dbpedia.org/resource/The_Ramong_Sound> <http://dbpedia.org/ontology/associatedMusicalArtist> ?v3 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. <http://dbpedia.org/resource/Alan_Warner_(musician)> <http://dbpedia.org/ontology/associatedMusicalArtist> ?v0 . ?v0 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v3 <http://dbpedia.org/ontology/associatedMusicalArtist> ?v1 . },"```sparql
SELECT ?finalBand WHERE {
  # Step 1: Identify The Ramones
  ?ramones rdfs:label ""The Ramones""@en .
  
  # Step 2: Find the band of The Ramones (genre or style)
  ?ramones dbo:genre ?bandOfRamones .
  FILTER EXISTS { ?bandOfRamones a dbo:MusicalArtist } .

  # Step 3: Identify Alan Warner
  ?alanWarner rdfs:label ""Alan Warner""@en .
  
  # Step 4: Find the band of Alan Warner (group and organization)
  ?alanWarner dbo:member ?bandOfAlanWarner .
  FILTER EXISTS { 
    ?bandOfAlanWarner a dbo:Band ;
                      a dbo:Organization ;
                      a dbo:MusicalGroup
  } .

  # Step 5: Find the band of the band from step 4
  ?bandOfAlanWarner dbo:genre ?finalBand .
}
```",5,10,6,3,2,3,3,71,0,0,4,0,0.0,0
495,16,val,Give me the father of the child of Princess Charlotte of Saxe-Hildburghausen and child of the father of William I of Württemberg.,SELECT ?result WHERE { ?v3 <http://dbpedia.org/ontology/parent> <http://dbpedia.org/resource/Princess_Charlotte_of_Saxe-Hildburghausen> . ?result <http://dbpedia.org/property/father> ?v2 . <http://dbpedia.org/resource/William_I_of_Württemberg> <http://dbpedia.org/property/father> ?v2 . ?v3 <http://dbpedia.org/property/father> ?result . },"```sparql
SELECT ?father WHERE {
  # Princess Charlotte of Saxe-Hildburghausen and her child
  ?charlotte dbo:child ?child .
  ?charlotte rdfs:label ""Princess Charlotte of Saxe-Hildburghausen""@en .

  # William I of Württemberg and his father
  ?williamI dbo:parent ?fatherOfWilliamI .
  ?williamI rdfs:label ""William I, Duke of Württemberg""@en .

  # The child of the father of William I is William I himself
  FILTER (?child = ?williamI)

  # Find the father of the child identified above
  ?child dbo:parent ?father .
}
```",4,4,5,2,2,3,2,20,0,0,1,0,0.0,0
273,15,val,Give me the spouse of the child of the child of Edoardo Agnelli (1831-1871) and parent of Gianni Agnelli.,SELECT ?result WHERE { <http://dbpedia.org/resource/Gianni_Agnelli> <http://dbpedia.org/ontology/parent> ?result . ?result <http://dbpedia.org/ontology/spouse> ?v1 . ?v0 <http://dbpedia.org/ontology/parent> <http://dbpedia.org/resource/Edoardo_Agnelli_(1831-1871)> . ?v0 <http://dbpedia.org/ontology/child> ?v1 . },"```sparql
SELECT ?spouse WHERE {
  # Identify Edoardo Agnelli (1831-1871)
  ?edoardo dbo:birthYear ""1831""^^xsd:gYear ;
           dbo:deathYear ""1871""^^xsd:gYear ;
           rdfs:label ""Edoardo Agnelli""@en .

  # Find a child of Edoardo
  ?child dbo:parent ?edoardo .
  
  # Find the child of this child (grandchild of Edoardo)
  ?grandchild dbo:parent ?child .
  
  # Identify Gianni Agnelli and his parent among these grandchildren
  ?gianni dbo:birthYear ""1921""^^xsd:gYear ;
          rdfs:label ""Gianni Agnelli""@en .
  ?parent dbo:child ?gianni .

  # Ensure the grandchild is also a parent of Gianni Agnelli
  FILTER (?grandchild = ?parent)

  # Find the spouse of this identified parent
  ?parent dbo:spouse ?spouse .
}
```",4,4,5,3,2,3,2,20,0,0,1,0,0.0,0
465,48,val,"Give me the successor of the child, that is a royalty, of Anne of Brittany and successor of the child of the parent of Ercole II d'Este, Duke of Ferrara.","SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/successor> ?result . <http://dbpedia.org/resource/Ercole_II_d'Este,_Duke_of_Ferrara> <http://dbpedia.org/ontology/parent> ?v3 . ?v2 <http://dbpedia.org/property/father> ?v3 . <http://dbpedia.org/resource/Anne_of_Brittany> <http://dbpedia.org/ontology/child> ?v1 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v2 <http://dbpedia.org/ontology/successor> ?result . }","```sparql
SELECT ?commonSuccessor WHERE {
  # Step 1: Find Anne of Brittany's child who is royalty
  ?anneChild dbo:parent dbc:Anne_of_Brittany .
  ?anneChild rdf:type dbo:Monarch .

  # Step 2: Find the successor of this royal child
  OPTIONAL { 
    ?anneSuccessor dbo:succeededBy ?anneChild .
  }

  # Step 3: Identify Ercole II d'Este's parent and their child
  ?ercoleParent dbo:parent dbc:Ercole_II_d%27Este .
  ?childOfParent dbo:parent ?ercoleParent .

  # Step 4: Find the successor of this child
  OPTIONAL {
    ?successorOfChild dbo:succeededBy ?childOfParent .
  }

  # Step 5: Determine the common successor
  FILTER (?anneSuccessor = ?successorOfChild)
  BIND(?anneSuccessor AS ?commonSuccessor)
}
```",5,6,6,3,2,3,3,71,0,0,1,0,0.0,0
365,16,val,"Give me the spouse of the native, that is a politician, of Poltava Governorate and person born as the birth name of Symon Petliura.",SELECT ?result WHERE { ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v3 <http://dbpedia.org/ontology/spouse> ?result . ?result <http://dbpedia.org/property/birthName> ?v2 . ?v3 <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Poltava_Governorate> . <http://dbpedia.org/resource/Symon_Petliura> <http://dbpedia.org/property/birthName> ?v2 . },"```sparql
SELECT ?spouse WHERE {
  # Find Symon Petliura's birth name
  ?petliura dbo:birthName ?birthName .
  ?petliura rdfs:label ""Symon Petliura""@en .

  # Find a politician native to Poltava Governorate with the same birth name
  ?politician dbo:nativePlace ?nativePlace ;
              dbo:birthName ?birthName ;
              rdf:type dbo:Politician .
  ?nativePlace rdfs:label ""Poltava Governorate""@en .

  # Retrieve the spouse of this politician
  ?politician dbo:spouse ?spouse .
}
```",4,5,5,2,2,3,2,20,0,0,1,0,0.0,0
917,54,val,"Give me the parent of the child, that is a royalty, of Kamehameha IV and child of the father of the spouse, that is a royalty, of Leleiohoku I and child of Kekūanāoʻa.","SELECT ?result WHERE { ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v1 <http://dbpedia.org/ontology/spouse> <http://dbpedia.org/resource/Leleiohoku_I> . ?v1 <http://dbpedia.org/property/father> ?v4 . ?result <http://dbpedia.org/ontology/child> ?v2 . ?result <http://dbpedia.org/property/father> ""Kekūanāoʻa""@en . ?v2 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Kamehameha_IV> . ?result <http://dbpedia.org/ontology/parent> ?v4 . }","```sparql
SELECT ?parentOfRoyalChild WHERE {
  # Step 1: Find Kamehameha IV and his royal child
  ?kamehamehaIV dbo:child ?royalChild .
  ?kamehamehaIV rdfs:label ""Kamehameha IV""@en .
  
  # Ensure the child is royalty
  OPTIONAL { 
    ?royalChild rdf:type dbo:Monarch .
  }
  
  # Step 2: Find the parent of this royal child
  ?royalChild dbo:parent ?parentOfRoyalChild .

  # Step 3: Find Leleiohoku I and his royal spouse
  ?leleiohokuI dbo:",6,8,7,3,3,3,3,71,0,0,1,0,0.0,0
645,43,val,"Give me the military force of the force, that is an event and a military conflict and a societal event, of the native, that is a president and a politician, of Restoration (Spain) and commander in Battle of Jarama and leader of Ministry of the Army (Spain).",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/battle> ?v4 . ?v0 <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Restoration_(Spain)> . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/President>. <http://dbpedia.org/resource/Ministry_of_the_Army_(Spain)> <http://dbpedia.org/ontology/leader> ?result . ?v4 <http://dbpedia.org/ontology/commander> ?v0 . <http://dbpedia.org/resource/Battle_of_Jarama> <http://dbpedia.org/ontology/commander> ?result . },"```sparql
SELECT ?militaryForce WHERE {
  # Identify the native who is a president, politician of Restoration (Spain), commander in Battle of Jarama, and leader of Ministry of Army (Spain)
  ?person dbo:presidentOf ?restoration .
  ?person dbo:politicianOf ?spainRestoration .
  ?person dbo:commanderInBattle ?jarama .
  ?person dbo:leaderOfMinistry ?armyMinistry .

  # Ensure the person is associated with Restoration (Spain)
  ?restoration rdfs:label ""Restoration (Spain)""@en .
  
  # Identify events related to this person that are both military conflicts and societal events
  ?event dbo:relatedTo ?person .
  ?event rdf:type ?eventType .

  # Filter for events that are both military conflicts and societal events
  FILTER (?eventType = dbp:MilitaryConflict && ?eventType = dbp:SocietalEvent)

  # Find the military force involved in such an event
  ?event dbo:militaryForce ?militaryForce .
}
```",5,10,6,3,3,3,3,71,0,0,1,0,0.0,0
382,16,val,"Give me the landmark at elevation of the award of Harry Combes and birthplace of the manager, that is a soccer manager and an athlete and a sports manager, of Bonner SC.",SELECT ?result WHERE { ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsManager>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Athlete>. ?v2 <http://dbpedia.org/ontology/birthPlace> ?result . <http://dbpedia.org/resource/Bonner_SC> <http://dbpedia.org/ontology/manager> ?v2 . <http://dbpedia.org/resource/Harry_Combes> <http://dbpedia.org/property/awards> ?v3 . ?result <http://dbpedia.org/ontology/elevation> ?v3 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerManager>. },"```sparql
SELECT ?landmark WHERE {
  # Step 1: Identify an award associated with Harry Combes
  ?award dbo:recipient dbr:Harry_Combes .
  
  # Step 2: Determine the elevation of this award
  ?award dbo:elevation ?elevation .

  # Step 3: Find the manager of Bonner SC who is a soccer manager, athlete, and sports manager
  ?manager dbo:position ""soccer manager""@en ;
           dbo:memberOf dbr:Bonner_SC ;
           dbo:occupation ""athlete""@en ;
           dbo:occupation ""sports manager""@en .

  # Step 4: Find the birthplace of this manager
  ?manager dbo:birthPlace ?birthPlace .

  # Step 5: Identify a landmark at the same elevation as the award
  ?landmark dbo:elevation ?elevation .
}
```",4,7,5,2,2,3,2,20,0,0,1,0,0.0,0
445,48,val,"Give me the entity in the award of George H. Cameron and entity in the residence, that is a country, of the resident, that is an athlete, of Great Britain.",SELECT ?result WHERE { <http://dbpedia.org/resource/George_H._Cameron> <http://dbpedia.org/property/awards> ?v1 . ?v3 <http://dbpedia.org/property/residence> ?v2 . ?result <http://dbpedia.org/ontology/location> ?v2 . ?result <http://dbpedia.org/ontology/country> ?v1 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. ?v3 <http://dbpedia.org/property/residence> <http://dbpedia.org/resource/Great_Britain> . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Athlete>. },"```sparql
SELECT ?award ?country WHERE {
  # Find the award of George H. Cameron
  ?georgeHcameron dbo:award ?award .
  ?georgeHcameron rdfs:label ""George H. Cameron""@en .

  # Find an athlete from Great Britain and their residence
  ?athlete dbo:nationality dbc:British_Athletes ;
           dbo:sport ?sport ;
           dbo:residence ?residence .
  
  # Ensure the residence is a country
  ?residence rdf:type owl:Thing ;
             rdfs:label ?countryLabel .

  FILTER (lang(?countryLabel) = ""en"")
}
```",5,7,6,3,2,3,3,71,0,0,102,0,0.0,0
865,42,val,"Give me the father of the child of Abu Ahmad Abdul Hafiz and father of AK Abdul Momen and native of the residence, that is a country, of Ram Jaipal Singh Yadav.",SELECT ?result WHERE { <http://dbpedia.org/resource/Ram_Jaipal_Singh_Yadav> <http://dbpedia.org/property/residence> ?v0 . ?v2 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Abu_Ahmad_Abdul_Hafiz> . <http://dbpedia.org/resource/AK_Abdul_Momen> <http://dbpedia.org/property/father> ?result . ?v2 <http://dbpedia.org/property/father> ?result . ?result <http://dbpedia.org/ontology/birthPlace> ?v0 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. },"```sparql
SELECT ?commonFather WHERE {
  # Abu Ahmad Abdul Hafiz's child and their father
  ?child dbo:parent ?father1 .
  ?abuAhmad dbo:child ?child .
  ?abuAhmad rdfs:label ""Abu Ahmad Abdul Hafiz""@en .

  # AK Abdul Momen's father
  ?momen dbo:parent ?father2 .
  ?momen rdfs:label ""AK Abdul Momen""@en .

  # Ram Jaipal Singh Yadav's residence country
  ?ramJaipal dbo:nativeCountry ?country .
  ?ramJaipal rdfs:label ""Ram Jaipal Singh Yadav""@en .

  # Find the common father and check if they are native to the same country as Ram Jaipal Singh Yadav
  FILTER (?father1 = ?father2)
  OPTIONAL {
    ?commonFather dbo:nativeCountry ?country .
    FILTER (?commonFather = ?father1)
  }
}
```",5,6,6,2,3,3,3,71,0,0,1,0,0.0,0
216,46,val,"Give me the player in the coach, that is a soccer player and a sports manager and a soccer manager, of Bosnia and Herzegovina national under-18 football team and player in the coach of the reference, that is an organisation and a soccer club, to Croatia U21.","SELECT ?result WHERE { ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerManager>. ?v2 <http://dbpedia.org/ontology/coach> ?v1 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. <http://dbpedia.org/resource/Bosnia_and_Herzegovina_national_under-18_football_team> <http://dbpedia.org/ontology/coach> ?v4 . ?v4 <http://dbpedia.org/ontology/team> ?result . ?v1 <http://dbpedia.org/ontology/team> ?result . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsManager>. ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerPlayer>. ?v2 <http://xmlns.com/foaf/0.1/name> ""Croatia U21""@en . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerClub>. }","```sparql
SELECT ?person WHERE {
  # Find the coach of Bosnia and Herzegovina national under-18 football team
  ?team dbo:coach ?person .
  ?team rdfs:label ""Bosnia and Herzegovina national under-18 football team""@en .

  # Ensure the person is a soccer player, sports manager, and soccer manager
  ?person rdf:type dbp:SoccerPlayer .
  ?person rdf:type dbp:SportsManager .
  ?person rdf:type dbp:SoccerManager .

  # Check if this person has any role with Croatia U21
  OPTIONAL {
    ?croatiaTeam dbo:player ?person .
    ?croatiaTeam rdfs:label ""Croatia national under-21 football team""@en .
  }
}
```",5,10,6,3,2,3,3,71,0,0,3,0,0.0,0
47,41,val,Give me the office of the awardee of Banga Bhushan and office of the administration of Jagdeep Dhankhar and office of Ajoy Mukherjee.,SELECT ?result WHERE { ?v4 <http://dbpedia.org/property/office> ?result . ?v2 <http://dbpedia.org/property/office> ?result . ?v2 <http://dbpedia.org/property/governor> <http://dbpedia.org/resource/Jagdeep_Dhankhar> . ?v4 <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/Banga_Bhushan> . <http://dbpedia.org/resource/Ajoy_Mukherjee> <http://dbpedia.org/property/office> ?result . },"```sparql
# Query for the office of the awardee of Banga Bhushan
SELECT ?awardeeOffice WHERE {
  ?award dbo:recipient ?awardee .
  ?award rdfs:label ""Banga Bhushan Award""@en .
  ?awardee dbo:office ?awardeeOffice .
}

UNION

# Query for the office of Jagdeep Dhankhar
SELECT ?dhankharOffice WHERE {
  wd:Q1234567 dbo:office ?dhankharOffice .
  # Assuming Q1234567 is the DBpedia entity ID for Jagdeep Dhankhar
}

UNION

# Query for the office of Ajoy Mukherjee
SELECT ?mukherjeeOffice WHERE {
  wd:Q6543210 dbo:office ?mukherjeeOffice .
  # Assuming Q6543210 is the DBpedia entity ID for Ajoy Mukherjee
}
```

### Explanation:
- **Banga Bhushan Award**: We look for the recipient of this award and their office.
- **Jagdeep Dhankhar**: We use his known DBpedia identifier to find his administrative role.
- **Ajoy Mukherjee**: Similarly, we use his DBpedia identifier to determine one of his offices.",5,5,6,2,3,3,3,71,0,0,1,0,0.0,0
417,47,val,"Give me the spouse of the parent, that is a royalty, of Count Ingolf of Rosenborg and child of the father of the leader, that is a royalty, of Colony of Greenland.",SELECT ?result WHERE { ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. <http://dbpedia.org/resource/Colony_of_Greenland> <http://dbpedia.org/property/leader> ?v0 . ?result <http://dbpedia.org/ontology/spouse> ?v2 . ?result <http://dbpedia.org/property/father> ?v4 . ?v0 <http://dbpedia.org/property/father> ?v4 . ?v2 <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Count_Ingolf_of_Rosenborg> . },"```sparql
SELECT ?spouse WHERE {
  # Find Count Ingolf of Rosenborg and his royal parent
  ?ingolf dbo:parent ?royalParent .
  ?ingolf rdfs:label ""Count Ingolf of Rosenborg""@en .

  # Ensure the parent is royalty (assuming a property or filter for royalty)
  FILTER EXISTS { ?royalParent dbo:occupation ""Royalty"" . }

  # Find spouse of this royal parent
  ?royalParent dbo:spouse ?spouse .

  # Find leader of Colony of Greenland and their father
  ?leader rdfs:label ""Leader of Colony of Greenland""@en .
  ?leader dbo:parent ?fatherOfLeader .

  # Ensure the father is royalty (assuming a property or filter for royalty)
  FILTER EXISTS { ?fatherOfLeader dbo:occupation ""Royalty"" . }

  # Find child of this royal father
  ?fatherOfLeader dbo:child ?child .

  # Match spouse with child
  FILTER (?spouse = ?child)
}
```",5,7,6,3,2,3,3,71,0,0,1,0,0.0,0
715,41,val,"Give me the commander in the force of Francisco Largo Caballero and commander in the force, that is a military conflict, of Abd el-Krim and leader of Ministry of the Air (Spain).",SELECT ?result WHERE { ?v2 <http://dbpedia.org/ontology/commander> ?result . <http://dbpedia.org/resource/Ministry_of_the_Air_(Spain)> <http://dbpedia.org/ontology/leader> ?result . ?v4 <http://dbpedia.org/ontology/commander> ?result . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v4 <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Francisco_Largo_Caballero> . ?v2 <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Abd_el-Krim> . },"```sparql
SELECT ?commanderOfCaballero ?commanderOfConflict ?ministryLeader WHERE {
  # Francisco Largo Caballero's commander in the force
  ?caballero dbo:commander ?commanderOfCaballero .
  ?caballero rdfs:label ""Francisco Largo Caballero""@en .

  # Abd el-Krim's military conflict and its commander
  ?krim dbo:militaryConflict ?conflict .
  ?krim rdfs:label ""Abd el-Krim""@en .
  
  OPTIONAL {
    ?conflict dbo:commander ?commanderOfConflict .
  }

  # Leader of Ministry of the Air (Spain)
  ?ministry dbo:leader ?ministryLeader .
  ?ministry rdfs:label ""Ministry of the Air (Spain)""@en .
}
```",5,6,6,2,3,3,3,71,0,0,1,0,0.0,0
582,42,val,Give me the reference to the residence of Hirotaka Sugawara and player in Kazuaki Nagasawa and figure known as the nickname of Japan national football team.,SELECT ?result WHERE { <http://dbpedia.org/resource/Kazuaki_Nagasawa> <http://dbpedia.org/ontology/team> ?result . ?result <http://dbpedia.org/property/nickname> ?v1 . <http://dbpedia.org/resource/Hirotaka_Sugawara> <http://dbpedia.org/property/residence> ?v2 . <http://dbpedia.org/resource/Japan_national_football_team> <http://dbpedia.org/property/nickname> ?v1 . ?result <http://xmlns.com/foaf/0.1/name> ?v2 . },"```sparql
SELECT ?hirotakaResidence ?kazuakiPlayerInfo WHERE {
  # Find Hirotaka Sugawara's residence
  ?hirotaka a dbo:Person ;
            rdfs:label ""Hirotaka Sugawara""@en .
  OPTIONAL { 
    ?hirotaka dbo:residenceLocation ?hirotakaResidence .
  }

  # Identify Kazuaki Nagasawa as a player
  ?kazuaki a dbo:FootballPlayer ;
           rdfs:label ""Kazuaki Nagasawa""@en .
  OPTIONAL {
    ?kazuaki dbo:playerForTeam ?team .
    ?team rdfs:label ""Samurai Blue""@en .
  }
}
```",5,5,6,2,3,3,3,71,0,0,1,0,0.0,0
47,55,val,Give me the office of the awardee of Banga Bhushan and office of the administration of Jagdeep Dhankhar and office of the awardee of Padma Vibhushan.,SELECT ?result WHERE { ?v2 <http://dbpedia.org/property/office> ?result . ?v2 <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/Padma_Vibhushan> . ?v5 <http://dbpedia.org/property/office> ?result . ?v3 <http://dbpedia.org/property/governor> <http://dbpedia.org/resource/Jagdeep_Dhankhar> . ?v5 <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/Banga_Bhushan> . ?v3 <http://dbpedia.org/property/office> ?result . },"```sparql
SELECT ?person (GROUP_CONCAT(DISTINCT ?office; separator="", "") AS ?offices) WHERE {
  # Banga Bhushan Awardee
  OPTIONAL {
    ?person dbo:award dbr:Banga_Bhushan .
    ?person dbo:office ?officeB .
  }
  
  # Jagdeep Dhankhar's Office
  OPTIONAL {
    ?dhankhar rdfs:label ""Jagdeep Dhankhar""@en .
    ?dhankhar dbo:office ?officeD .
  }

  # Padma Vibhushan Awardee
  OPTIONAL {
    ?person2 dbo:award dbr:Padma_Vibhushan .
    ?person2 dbo:office ?officeP .
  }
  
  # Combine offices for each person
  BIND(CONCAT(?officeB, "" "", ?officeD, "" "", ?officeP) AS ?offices)
}
GROUP BY ?person
```",6,6,7,2,3,3,3,71,0,1,1,0.0,0.0,0
47,44,val,Give me the office of the awardee of Padma Vibhushan and office of the awardee of Banga Bhushan and office of Suvendu Adhikari.,SELECT ?result WHERE { ?v2 <http://dbpedia.org/property/office> ?result . <http://dbpedia.org/resource/Suvendu_Adhikari> <http://dbpedia.org/property/office> ?result . ?v4 <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/Banga_Bhushan> . ?v4 <http://dbpedia.org/property/office> ?result . ?v2 <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/Padma_Vibhushan> . },"```sparql
SELECT DISTINCT ?awardeePadmaVibhushanOffice ?awardeeBangaBhushanOffice ?suvenduAdhikariOffice WHERE {
  # Find a notable awardee of Padma Vibhushan and their office
  OPTIONAL {
    ?person dbo:award dbr:Padma_Vibhushan .
    ?person dbo:officeHolder ?awardeePadmaVibhushanOffice .
    FILTER (regex(str(?person), ""A notable awardee"", ""i"")) # Replace with a specific name if known
  }

  # Find a notable awardee of Banga Bhushan and their office
  OPTIONAL {
    ?person dbo:award dbr:Banga_Bhushan .
    ?person dbo:officeHolder ?awardeeBangaBhushanOffice .
    FILTER (regex(str(?person), ""A notable awardee"", ""i"")) # Replace with a specific name if known
  }

  # Find the office of Suvendu Adhikari
  OPTIONAL {
    dbr:Suvendu_Adhikari dbo:officeHolder ?suvenduAdhikariOffice .
  }
}
```",5,5,6,2,3,3,3,71,0,0,1,0,0.0,0
417,50,val,"Give me the child of the child, that is a royalty, of Frederick Francis III, Grand Duke of Mecklenburg-Schwerin and child of the father of the leader, that is a royalty, of Colony of Greenland.","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/parent> ?v3 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. <http://dbpedia.org/resource/Colony_of_Greenland> <http://dbpedia.org/property/leader> ?v0 . ?result <http://dbpedia.org/property/father> ?v4 . ?v0 <http://dbpedia.org/property/father> ?v4 . ?v3 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Frederick_Francis_III,_Grand_Duke_of_Mecklenburg-Schwerin> . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. }","```sparql
SELECT ?grandchild ?leaderChild WHERE {
  # Frederick Francis III, Grand Duke of Mecklenburg-Schwerin
  ?frederick rdfs:label ""Frederick Francis III, Grand Duke of Mecklenburg-Schwerin""@en .
  
  # Find his child who is royalty
  ?child dbo:parent ?frederick .
  FILTER (regex(str(?child), ""royalty"", ""i"")) .

  # Find the grandchild of Frederick Francis III
  ?grandchild dbo:parent ?child .

  # Leader of the Colony of Greenland
  ?leader rdfs:label ""Leader of the Colony of Greenland""@en .

  # Find the father of this leader who is royalty
  ?father dbo:parent ?leader .
  FILTER (regex(str(?father), ""royalty"", ""i"")) .

  # Find the child of this royal father
  ?leaderChild dbo:parent ?father .
}
```",5,7,6,3,2,3,3,71,0,0,2,0,0.0,0
83,15,val,"Give me the ruling party in the birthplace, that is a town and Brazilian and a soccer club, of the member, that is a sports manager, of Kedah FA and party of Alceu Collares.",SELECT ?result WHERE { ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsManager>. ?v0 <http://dbpedia.org/ontology/birthPlace> ?v1 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerClub>. ?v0 <http://dbpedia.org/ontology/team> <http://dbpedia.org/resource/Kedah_FA> . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Town>. <http://dbpedia.org/resource/Alceu_Collares> <http://dbpedia.org/ontology/party> ?result . ?v1 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Brazil>. ?v1 <http://dbpedia.org/property/leaderParty> ?result . },"```sparql
SELECT ?rulingParty WHERE {
  # Identify Alceu Collares as a sports manager
  ?alceu foaf:name ""Alceu Collares""@en .
  ?alceu dbo:occupation dbp:Sports_Manager .

  # Find the soccer club associated with Kedah FA where he is involved
  ?club dbo:member ?alceu ;
        dbo:sportTeam dbp:Soccer ;
        dbo:location ?town .

  # Ensure the town is Brazilian and a town
  ?town dbo:country dbc:Brazil ;
        rdf:type dbo:Town .

  # Find the ruling party in that town
  ?town dbo:government ?government .
  ?government dbo:rulingParty ?rulingParty .
}
```",4,8,5,3,2,3,2,20,0,0,1,0,0.0,0
933,42,val,"Give me the reference to Alan Warner and band of the band, that is a group and a band and an organisation, of Alan Warner (musician) and band of the band of Alan Warner (musician).","SELECT ?result WHERE { ?v0 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v1 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . <http://dbpedia.org/resource/Alan_Warner_(musician)> <http://dbpedia.org/ontology/associatedMusicalArtist> ?v1 . <http://dbpedia.org/resource/Alan_Warner_(musician)> <http://dbpedia.org/ontology/associatedMusicalArtist> ?v0 . ?result <http://xmlns.com/foaf/0.1/name> ""Alan Warner""@en . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Group>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Band>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. }","```sparql
SELECT ?alanWarner ?band ?relatedGroup WHERE {
  # Find Alan Warner (musician)
  ?alanWarner rdfs:label ""Alan Warner""@en .
  
  # Identify his band
  ?alanWarner dbo:musicArtist ?band .
  
  # Find any related group or organization associated with the band
  OPTIONAL {
    ?band dbo:member ?relatedGroup .
    FILTER (regex(str(?relatedGroup), ""group|organization"", ""i""))
  }
}
```",5,8,6,2,3,3,3,71,0,0,1,0,0.0,0
791,43,val,"Give me the predecessor of the child of the child, that is an office holder and a royalty, of Emperor Go-Shirakawa and father of Emperor Go-Toba and spouse of Taira no Tokuko.",SELECT ?result WHERE { <http://dbpedia.org/resource/Emperor_Go-Toba> <http://dbpedia.org/property/father> ?result . ?v4 <http://dbpedia.org/property/father> ?v0 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?result <http://dbpedia.org/ontology/spouse> <http://dbpedia.org/resource/Taira_no_Tokuko> . ?v0 <http://dbpedia.org/ontology/parent> <http://dbpedia.org/resource/Emperor_Go-Shirakawa> . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?result <http://dbpedia.org/ontology/successor> ?v4 . },"```sparql
SELECT ?predecessor WHERE {
  # Find the child of Emperor Go-Shirakawa who is an office holder and royalty
  ?goShirakawa dbo:child ?child .
  ?goShirakawa rdfs:label ""Emperor Go-Shirakawa""@en .
  
  # Ensure the child is both an office holder and royalty
  ?child rdf:type dbo:OfficeHolder ;
         rdf:type dbo:Royalty .

  # Find the grandchild of Emperor Go-Shirakawa
  ?child dbo:child ?grandchild .

  # Identify the predecessor of this grandchild
  ?predecessor dbo:successor ?grandchild .
}
```",5,7,6,3,3,3,3,71,1,2,0,0.3333333333333333,1.0,0.5
865,54,val,"Give me the father of the child, that is a politician, of the spouse of Syeda Shahar Banu and father of Shahla Khatun and native of the residence, that is a country, of Ram Jaipal Singh Yadav.",SELECT ?result WHERE { ?v4 <http://dbpedia.org/property/father> ?result . <http://dbpedia.org/resource/Syeda_Shahar_Banu> <http://dbpedia.org/ontology/spouse> ?v2 . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. <http://dbpedia.org/resource/Shahla_Khatun> <http://dbpedia.org/property/father> ?result . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. ?v4 <http://dbpedia.org/property/father> ?v2 . <http://dbpedia.org/resource/Ram_Jaipal_Singh_Yadav> <http://dbpedia.org/property/residence> ?v0 . ?result <http://dbpedia.org/ontology/birthPlace> ?v0 . },"```sparql
SELECT ?father WHERE {
  # Find spouse of Syeda Shahar Banu
  ?spouse dbo:spouse ?syedaShaharBanu .
  ?syedaShaharBanu rdfs:label ""Syeda Shahar Banu""@en .

  # Find child who is a politician
  ?child dbo:parent ?father ;
         rdf:type dbo:Politician ;
         dbo:parent ?spouse .

  # Ensure the father of Shahla Khatun is the same person
  ?shahlaKhatun dbo:parent ?father .
  ?shahlaKhatun rdfs:label ""Shahla Khatun""@en .

  # Find residence of Ram Jaipal Singh Yadav and its country
  ?ramJaipalSinghYadav dbo:residence ?residence .
  ?ramJaipalSinghYadav rdfs:label ""Ram Jaipal Singh Yadav""@en .
  
  ?residence dbo:country ?country .

}
```",6,8,7,3,3,3,3,71,0,0,1,0,0.0,0
987,42,val,"Give me the birth place of the band, that is an artist and a musical artist, of Šako Polumenta and entity in the region, that is a country, of Central European Time and birth place of Moamer Kasumović.",SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. ?v0 <http://dbpedia.org/property/timeZone> <http://dbpedia.org/resource/Central_European_Time> . <http://dbpedia.org/resource/Šako_Polumenta> <http://dbpedia.org/ontology/associatedMusicalArtist> ?v1 . ?v1 <http://dbpedia.org/ontology/birthPlace> ?result . ?result <http://dbpedia.org/ontology/country> ?v0 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. <http://dbpedia.org/resource/Moamer_Kasumović> <http://dbpedia.org/ontology/birthPlace> ?result . },"```sparql
SELECT ?bandBirthPlace WHERE {
  # Find Šako Polumenta's band
  ?sako dbo:member ?band .
  ?sako rdfs:label ""Šako Polumenta""@en .

  # Ensure the band is a musical artist
  ?band rdf:type dbo:MusicalArtist .

  # Get the birth place of the band
  ?band dbo:birthPlace ?bandBirthPlace .

  # Find Moamer Kasumović's (Alija Izetbegović) birth place
  ?moamer dbo:birthPlace ?kasumovicBirthPlace .
  ?moamer rdfs:label ""Moamer Kasumović""@en .

  # Ensure both birth places are in countries within the CET region
  ?bandBirthPlace dbo:country ?cetCountry1 .
  ?kasumovicBirthPlace dbo:country ?cetCountry2 .
  
  # Filter for countries in the Central European Time zone
  VALUES ?cetRegion { ""Central European Time""@en }
  ?cetCountry1 dbo:timeZone ?cetRegion .
  ?cetCountry2 dbo:timeZone ?cetRegion .
}
```",5,8,6,2,3,3,3,71,0,0,1,0,0.0,0
573,47,val,"Give me the person decedent at the administration, that is a region, of Charlie Baker and person decedent at the residence, that is a settlement, of the professional, that is American, in Politician.","SELECT ?result WHERE { ?v0 <http://dbpedia.org/ontology/nationality> <http://dbpedia.org/resource/United_States>. ?v0 <http://dbpedia.org/property/occupation> ""Politician""@en . ?v0 <http://dbpedia.org/property/residence> ?v4 . ?v2 <http://dbpedia.org/property/governor> ""Charlie Baker""@en . ?result <http://dbpedia.org/ontology/deathPlace> ?v2 . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. ?result <http://dbpedia.org/ontology/deathPlace> ?v4 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Region>. }","```sparql
SELECT ?decedentAtAdmin ?decedentAtResidence WHERE {
  # Find Charlie Baker's administration and decedent at the administration
  ?charlieBaker dbo:profession dbr:Politician .
  ?charlieBaker rdfs:label ""Charlie Baker""@en .
  
  OPTIONAL {
    ?charlieBaker dbo:office ?administration .
    ?administration a dbo:AdministrativeRegion .
    
    # Find decedent at the administration
    ?administration dbo:succeededBy ?decedentAtAdmin .
  }
  
  # Find an American politician and their residence
  ?americanPolitician dbo:profession dbr:Politician ;
                     dbo:nationality dbr:United_States .
  
  OPTIONAL {
    ?americanPolitician dbo:residence ?settlement .
    ?settlement a dbo:Settlement .
    
    # Find decedent at the residence
    ?settlement dbo:succeededBy ?decedentAtResidence .
  }
}
```",5,8,6,3,2,3,3,71,0,0,400,0,0.0,0
554,17,val,"Give me the leader of Portuguese São Tomé and Príncipe and leader of the birth place of the band, that is an artist, of Rita Redshoes.",SELECT ?result WHERE { ?v0 <http://dbpedia.org/ontology/birthPlace> ?v3 . ?v3 <http://dbpedia.org/property/leader> ?result . <http://dbpedia.org/resource/Rita_Redshoes> <http://dbpedia.org/ontology/associatedMusicalArtist> ?v0 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. <http://dbpedia.org/resource/Portuguese_São_Tomé_and_Príncipe> <http://dbpedia.org/property/leader> ?result . },"```sparql
SELECT ?saoTomeLeader ?lisbonLeader WHERE {
  # Leader of São Tomé and Príncipe
  ?country dbr:São_Tomé_and_Príncipe dbo:president ?saoTomeLeader .
  
  # Rita Redshoes' birthplace is Lisbon, Portugal
  ?ritaRedshoes dbo:birthPlace dbr:Lisbon .
  ?ritaRedshoes rdfs:label ""Rita Redshoes""@en .

  # Leader of Lisbon or Portugal (since Lisbon's leader would be the Prime Minister of Portugal)
  OPTIONAL {
    ?portugal dbo:primeMinister ?lisbonLeader .
    ?portugal dbr:Portugal .
  }
}
```",4,5,5,3,2,3,2,20,0,0,1,0,0.0,0
955,15,val,"Give me the band of the writer of the work, that is a work and an album and a musical work, of Matt Freeman and band of Johnny Rioux.",SELECT ?result WHERE { ?v0 <http://dbpedia.org/property/writer> <http://dbpedia.org/resource/Matt_Freeman> . ?v0 <http://dbpedia.org/property/writer> ?v1 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalWork>. ?result <http://dbpedia.org/ontology/bandMember> ?v1 . ?result <http://dbpedia.org/ontology/bandMember> <http://dbpedia.org/resource/Johnny_Rioux> . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Album>. },"```sparql
SELECT ?bandOfWriter WHERE {
  # Find Matt Freeman's band
  ?mattFreeman dbo:member ?band1 .
  ?mattFreeman rdfs:label ""Matt Freeman""@en .

  # Find Johnny Rioux's band
  ?johnnyRioux dbo:member ?band2 .
  ?johnnyRioux rdfs:label ""Johnny Rioux""@en .

  # Identify a common work that is both an album and a musical work
  ?work dbo:album ?album .
  ?work dbo:musicalWork ?musicalWork .
  
  # Ensure the work involves both bands or their members
  ?band1 dbo:member ?artist1 .
  ?band2 dbo:member ?artist2 .
  ?work dbo:composer ?writer .

  # Find the band of the writer
  ?writer dbo:member ?bandOfWriter .
}
```",4,7,5,3,2,3,2,20,0,0,1,0,0.0,0
987,48,val,"Give me the birth place of the band, that is an artist and a musical artist, of the band, that is an artist, of Dado Polumenta and entity in the region, that is a country, of Central European Time.",SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/birthPlace> ?result . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. ?v0 <http://dbpedia.org/property/timeZone> <http://dbpedia.org/resource/Central_European_Time> . ?v3 <http://dbpedia.org/ontology/associatedMusicalArtist> ?v1 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. ?result <http://dbpedia.org/ontology/country> ?v0 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. <http://dbpedia.org/resource/Dado_Polumenta> <http://dbpedia.org/ontology/associatedMusicalArtist> ?v3 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. },"```sparql
SELECT ?birthPlace WHERE {
  # Identify Dado Pršo's band
  ?zabranjeno dbo:member ?dadoPrso .
  ?zabranjeno rdfs:label ""Zabranjeno Pušenje""@en .

  # Find an artist associated with Zabranjeno Pušenje
  OPTIONAL {
    ?artist dbo:associatedBand ?zabranjeno .
    ?artist a dbo:MusicalArtist ;
            a dbo:Artist .
  }

  # Identify another band related to this artist
  OPTIONAL {
    ?relatedBand dbo:member ?artist .
    ?relatedBand a dbo:Band ;
                 a dbo:Artist .
  }

  # Determine the region of Central European Time (CET)
  ?cetRegion dbo:timeZone ""Central European Time"" .

  # Find an entity in this region
  OPTIONAL {
    ?entity dbo:country ?cetCountry .
    ?cetCountry dbo:partOf ?cetRegion .
  }

  # Locate the birthplace of the band identified in Step 3
  ?relatedBand dbo:birthPlace ?birthPlace .
}
```",5,9,6,3,2,3,3,71,0,0,2,0,0.0,0
965,55,val,"Give me the parent of the child, that is a royalty, of Prince Louis of Battenberg and spouse of the spouse of Princess Victoria of Hesse and by Rhine and parent of the person born, that is a noble, as Prince George of Battenberg.","SELECT ?result WHERE { ?v0 <http://dbpedia.org/property/birthName> ""Prince George of Battenberg""@en . ?v5 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Prince_Louis_of_Battenberg> . ?result <http://dbpedia.org/ontology/spouse> ?v2 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Noble>. ?v0 <http://dbpedia.org/ontology/parent> ?result . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v5 <http://dbpedia.org/ontology/parent> ?result . <http://dbpedia.org/resource/Princess_Victoria_of_Hesse_and_by_Rhine> <http://dbpedia.org/ontology/spouse> ?v2 . }","```sparql
SELECT ?parent WHERE {
  # Find a child of Prince Louis of Battenberg who is royalty
  ?child dbo:parent ?louis .
  ?louis rdfs:label ""Prince Louis of Battenberg""@en .
  FILTER (regex(str(?child), ""royalty"", ""i""))

  # Find the spouse of Princess Victoria of Hesse and by Rhine
  ?victoria dbo:spouse ?spouse .
  ?victoria rdfs:label ""Princess Victoria of Hesse and by Rhine""@en .

  # Determine the parent of this spouse
  ?spouse dbo:parent ?parent .

  # Identify Prince George of Battenberg's noble birth
  OPTIONAL {
    ?george dbo:birthPlace ?place .
    ?george rdfs:label ""Prince George of Battenberg""@en .
    FILTER (regex(str(?place), ""noble"", ""i""))
  }
}
```",6,8,7,2,3,3,3,71,0,0,1,0,0.0,0
129,19,val,Give me the professional in the mayor of 1999 West Dunbartonshire Council election and associated musical artist of Saba (rapper) and associated musical artist of EarthGang.,SELECT ?result WHERE { <http://dbpedia.org/resource/Saba_(rapper)> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . <http://dbpedia.org/resource/EarthGang> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?result <http://dbpedia.org/property/occupation> ?v2 . <http://dbpedia.org/resource/1999_West_Dunbartonshire_Council_election> <http://dbpedia.org/property/leader> ?v2 . },"```sparql
# Query for professional in the 1999 West Dunbartonshire Council election
SELECT ?professional WHERE {
  ?election dbo:location dbr:West_Dunbartonshire .
  ?election dbo:date ""1999""^^xsd:gYear .
  ?candidate dbo:electedIn ?election .
  ?candidate rdfs:label ?professional .
}

# Query for associated musical artist of Saba (rapper)
SELECT DISTINCT ?associatedArtist WHERE {
  dbr:Saba_(rapper) dbo:collaborator ?artist .
  ?artist rdfs:label ?associatedArtist .
  UNION
  dbr:Saba_(rapper) dbo:memberOfGroup ?group .
  ?group dbo:member ?artist .
  ?artist rdfs:label ?associatedArtist .
}

# Query for associated musical artist of EarthGang
SELECT DISTINCT ?associatedArtist WHERE {
  dbr:EarthGang dbo:collaborator ?artist .
  ?artist rdfs:label ?associatedArtist .
  UNION
  dbr:EarthGang dbo:memberOfGroup ?group .
  ?group dbo:member ?artist .
  ?artist rdfs:label ?associatedArtist .
}
```",4,4,5,2,3,2,3,28,0,0,1,0,0.0,0
98,22,val,Give me the birth place of the person born as Paolo Elito M. Ballesteros IV and region of the time zone of Lopez Jaena.,"SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/timeZone> ?v3 . <http://dbpedia.org/resource/Lopez_Jaena> <http://dbpedia.org/ontology/timeZone> ?v3 . ?v0 <http://dbpedia.org/property/birthName> ""Paolo Elito M. Ballesteros IV""@en . ?v0 <http://dbpedia.org/ontology/birthPlace> ?result . }","```sparql
# Query for birthplace of Paolo Elito M. Ballesteros IV
SELECT ?birthPlace WHERE {
  ?person rdfs:label ""Paolo Elito M. Ballesteros IV""@en .
  ?person dbo:birthPlace ?birthPlace .
}

# Query for region of the time zone of Lopez, Jaena
SELECT DISTINCT ?region WHERE {
  ?location rdfs:label ""Lopez, Jaena""@en .
  ?location geo:timezone ?timeZone .
  ?timeZone dbp:countryRegion ?region .
}
```",4,4,5,2,2,2,3,28,0,0,2,0,0.0,0
926,51,val,"Give me the child of the father, that is a royalty, of the parent, that is a royalty, of Beyhan Sultan (daughter of Mustafa III) and successor of the child of Ahmed III.",SELECT ?result WHERE { ?v0 <http://dbpedia.org/ontology/child> ?result . ?v3 <http://dbpedia.org/property/father> ?v0 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v4 <http://dbpedia.org/ontology/successor> ?result . <http://dbpedia.org/resource/Beyhan_Sultan_(daughter_of_Mustafa_III)> <http://dbpedia.org/ontology/parent> ?v3 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v4 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Ahmed_III> . },"```sparql
SELECT ?child WHERE {
  # Beyhan Sultan and her parent (Mustafa III)
  ?beyhan rdfs:label ""Beyhan Sultan""@en .
  ?beyhan dbo:parent ?mustafaIII .
  ?mustafaIII rdfs:label ""Mustafa III""@en .

  # Ahmed III's child and successor
  ?ahmedIII rdfs:label ""Ahmed III""@en .
  ?childOfAhmedIII dbo:parent ?ahmedIII .
  ?successor dbo:succeededBy ?childOfAhmedIII .
  
  # Parent of the successor (must be royalty)
  ?successorParent dbo:parent ?successor .
  FILTER EXISTS { ?successorParent a dbo:Sultan } .

  # Child of this royal parent
  ?finalChild dbo:parent ?successorParent .
}
```",5,7,6,3,2,3,3,71,0,0,1,0,0.0,0
892,44,val,"Give me the landmark at elevation of the award of Anna Ishii and entity in the administration, that is Italian and a region and a settlement and an administrative region, of Democratic Party (Italy) and entity in Italy.",SELECT ?result WHERE { <http://dbpedia.org/resource/Anna_Ishii> <http://dbpedia.org/property/awards> ?v4 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Region>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/AdministrativeRegion>. ?result <http://dbpedia.org/ontology/province> ?v0 . ?v0 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Italy>. ?result <http://dbpedia.org/ontology/elevation> ?v4 . ?v0 <http://dbpedia.org/property/leaderParty> <http://dbpedia.org/resource/Democratic_Party_(Italy)> . ?result <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Italy> . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. },"```sparql
SELECT ?landmark ?region WHERE {
  # Find Anna Ishii's award
  ?annaIshii dbo:award ?award .
  ?annaIshii rdfs:label ""Anna Ishii""@en .

  # Get the elevation of the award (assuming it has an elevation property)
  ?award dbo:elevation ?elevation .

  # Find a landmark at this elevation
  ?landmark dbo:elevation ?elevation .
  
  # Identify Italian region and settlement that is also an administrative region of Democratic Party (Italy)
  ?region rdf:type dbo:Region ;
          dbo:settlement true ;
          dbo:administrativeRegionOf ?party ;
          dbo:country dbr:Italy .

  # Ensure the party is the Democratic Party (Italy)
  ?party rdfs:label ""Democratic Party (Italy)""@en .
}
```",5,9,6,2,3,3,3,71,0,0,2,0,0.0,0
865,53,val,"Give me the father of the child of Abu Ahmad Abdul Hafiz and father of AK Abdul Momen and native of the residence, that is a country, of the person decedent at Patna.",SELECT ?result WHERE { ?v1 <http://dbpedia.org/property/residence> ?v0 . ?result <http://dbpedia.org/ontology/birthPlace> ?v0 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. ?v2 <http://dbpedia.org/property/father> ?result . ?v1 <http://dbpedia.org/ontology/deathPlace> <http://dbpedia.org/resource/Patna> . ?v2 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Abu_Ahmad_Abdul_Hafiz> . <http://dbpedia.org/resource/AK_Abdul_Momen> <http://dbpedia.org/property/father> ?result . },"```sparql
SELECT ?father ?country WHERE {
  # Find child of Abu Ahmad Abdul Hafiz and AK Abdul Momen
  ?child dbo:parent ?father .
  
  # Ensure the father is also the parent of AK Abdul Momen
  ?akAbdulMomen dbo:parent ?father .
  ?akAbdulMomen rdfs:label ""AK Abdul Momen""@en .

  # Identify Abu Ahmad Abdul Hafiz as a parent
  ?abuAhmadAbdulHafiz dbo:child ?child .
  ?abuAhmadAbdulHafiz rdfs:label ""Abu Ahmad Abdul Hafiz""@en .

  # Find the decedent's residence country from Patna
  ?decedent dbo:placeOfDeath ?patna .
  ?patna rdfs:label ""Patna""@en .
  
  ?decedent dbo:nativeCountry ?country .
}
```",6,7,7,3,3,3,3,71,0,0,1,0,0.0,0
965,42,val,"Give me the parent of the person born, that is a noble, as Prince George of Battenberg and spouse of the spouse of Princess Victoria of Hesse and by Rhine and parent of Louise Mountbatten.","SELECT ?result WHERE { ?v0 <http://dbpedia.org/property/birthName> ""Prince George of Battenberg""@en . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Noble>. <http://dbpedia.org/resource/Louise_Mountbatten> <http://dbpedia.org/ontology/parent> ?result . ?result <http://dbpedia.org/ontology/spouse> ?v1 . ?v0 <http://dbpedia.org/ontology/parent> ?result . <http://dbpedia.org/resource/Princess_Victoria_of_Hesse_and_by_Rhine> <http://dbpedia.org/ontology/spouse> ?v1 . }","```sparql
SELECT ?finalParent WHERE {
  # Find Prince George of Battenberg's parent
  ?george dbo:birthName ""Prince George of Battenberg""@en .
  ?george dbo:parent ?parentGeorge .

  # Find Princess Victoria's spouse
  ?victoria dbo:spouse ?spouseVictoria .
  ?victoria rdfs:label ""Princess Victoria of Hesse and by Rhine""@en .

  # Find the spouse of Princess Victoria's spouse (who is a noble)
  OPTIONAL {
    ?spouseVictoria dbo:spouse ?nobleSpouse .
    FILTER EXISTS { ?nobleSpouse rdf:type dbo:Noble }
  }

  # Identify parent of Louise Mountbatten
  ?louise dbo:birthName ""Louise Mountbatten""@en .
  ?louise dbo:parent ?finalParent .

  # Ensure the noble spouse is connected to Louise Mountbatten's parent
  FILTER (?nobleSpouse = ?finalParent)
}
```",5,6,6,2,3,3,3,71,0,0,1,0,0.0,0
433,44,val,"Give me the associated musical artist of Paul Chambers and associated musical artist of the associated musical artist, that is an artist and a musical artist, of Scott LaFaro and professional in the profession of Bob Marley.",SELECT ?result WHERE { <http://dbpedia.org/resource/Bob_Marley> <http://dbpedia.org/property/occupation> ?v2 . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. <http://dbpedia.org/resource/Scott_LaFaro> <http://dbpedia.org/ontology/associatedMusicalArtist> ?v4 . ?v4 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . <http://dbpedia.org/resource/Paul_Chambers> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?result <http://dbpedia.org/property/occupation> ?v2 . },"```sparql
SELECT ?associatedArtist1 ?associatedArtist2 ?laFaroAssociatedArtist ?marleyProfession ?finalArtist WHERE {
  # Step 1: Find Paul Chambers' associated musical artist
  ?paulChambers dbo:musicalArtist ?associatedArtist1 .
  ?paulChambers rdfs:label ""Paul Chambers""@en .

  # Step 2: Find the associated musical artist of this artist
  ?associatedArtist1 dbo:musicalArtist ?associatedArtist2 .

  # Step 3: Find Scott LaFaro's associated musical artist
  ?scottLaFaro dbo:musicalArtist ?laFaroAssociatedArtist .
  ?scottLaFaro rdfs:label ""Scott LaFaro""@en .

  # Step 4: Identify a professional in Bob Marley's profession (musician)
  ?bobMarley dbo:profession ?marleyProfession .
  ?bobMarley rdfs:label ""Bob Marley""@en .
  ?professional dbo:profession ?marleyProfession .
  
  # Step 5: Find the associated musical artist of this professional
  ?professional dbo:musicalArtist ?finalArtist .

  # Ensure all identified artists are musicians
  FILTER (regex(str(?associatedArtist1), ""musician"", ""i"") && 
          regex(str(?associatedArtist2), ""musician"", ""i"") &&
          regex(str(?laFaroAssociatedArtist), ""musician"", ""i"") &&
          regex(str(?finalArtist), ""musician"", ""i""))
}
```",5,7,6,2,3,3,3,71,0,0,1,0,0.0,0
987,41,val,"Give me the birth place of the actor of All for Free and entity in Montenegro and birth place of the band, that is an artist and a musical artist, of Šako Polumenta.",SELECT ?result WHERE { ?v4 <http://dbpedia.org/ontology/birthPlace> ?result . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. <http://dbpedia.org/resource/Šako_Polumenta> <http://dbpedia.org/ontology/associatedMusicalArtist> ?v2 . ?v2 <http://dbpedia.org/ontology/birthPlace> ?result . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?result <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Montenegro> . <http://dbpedia.org/resource/All_for_Free> <http://dbpedia.org/property/starring> ?v4 . },"```sparql
# Query for the actor of ""All for Free"" and an entity in Montenegro
SELECT ?actorBirthPlace ?montenegroEntity WHERE {
  # Find the actor associated with ""All for Free""
  ?movie dbo:actor ?actor .
  ?movie rdfs:label ""All for Free""@en .

  # Get the birthplace of this actor
  ?actor dbo:birthPlace ?actorBirthPlace .

  # Find an entity in Montenegro related to this actor
  OPTIONAL {
    ?montenegroEntity dbo:location ?location .
    ?location rdfs:label ""Montenegro""@en .
    ?actor dbo:relatedTo ?montenegroEntity .
  }
}

# Query for the band of Šako Polumenta and its birthplace
SELECT ?bandBirthPlace WHERE {
  # Find the band associated with Šako Polumenta
  ?person dbo:member ?band .
  ?person rdfs:label ""Šako Polumenta""@en .

  # Ensure the band is both an artist and a musical artist
  ?band rdf:type dbo:Band ;
        dbo:artist ?artist .
  ?artist rdf:type dbo:MusicalArtist .

  # Get the birthplace of this band
  ?band dbo:birthPlace ?bandBirthPlace .
}
```",5,7,6,2,3,3,3,71,0,0,1,0,0.0,0
445,54,val,"Give me the entity in the residence, that is a country, of Anna Sharkey and entity in United Kingdom and death place of the awardee of the establishment of 1820-03-10.","SELECT ?result WHERE { ?v5 <http://dbpedia.org/property/awards> ?v0 . ?result <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/United_Kingdom> . ?result <http://dbpedia.org/ontology/location> ?v3 . ?v5 <http://dbpedia.org/ontology/deathPlace> ?result . <http://dbpedia.org/resource/Anna_Sharkey> <http://dbpedia.org/property/residence> ?v3 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. ?v0 <http://dbpedia.org/ontology/foundingDate> ""1820-03-10""^^<http://www.w3.org/2001/XMLSchema#date> . }","```sparql
SELECT ?country ?ukEntity ?deathPlace WHERE {
  # Anna Sharkey's residence country
  ?anna dbo:residence ?residence .
  ?anna rdfs:label ""Anna Sharkey""@en .
  ?residence dbo:country ?country .

  # Entity in the United Kingdom
  ?ukEntity dbo:locationCountry dbc:United_Kingdom .
  
  # Establishment on 1820-03-10 and its awardee's death place
  ?establishment dbo:dateEstablished ""1820-03-10""^^xsd:date ;
                dbo:awardee ?awardee .
  ?awardee dbo:deathPlace ?deathPlace .
}
```",6,7,7,3,3,3,3,71,0,0,1,0,0.0,0
892,55,val,"Give me the entity in the profession of Henri Crolla and entity in the administration, that is Italian and a region and a settlement and an administrative region, of Democratic Party (Italy) and landmark at elevation of the award of Anna Ishii.",SELECT ?result WHERE { <http://dbpedia.org/resource/Anna_Ishii> <http://dbpedia.org/property/awards> ?v5 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Region>. ?v0 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Italy>. ?result <http://dbpedia.org/ontology/country> ?v2 . ?result <http://dbpedia.org/ontology/province> ?v0 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. <http://dbpedia.org/resource/Henri_Crolla> <http://dbpedia.org/property/occupation> ?v2 . ?v0 <http://dbpedia.org/property/leaderParty> <http://dbpedia.org/resource/Democratic_Party_(Italy)> . ?result <http://dbpedia.org/ontology/elevation> ?v5 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/AdministrativeRegion>. },"```sparql
# Query for Henri Crolla's profession
SELECT ?profession WHERE {
  ?henriCrolla dbo:occupation ?profession .
  ?henriCrolla rdfs:label ""Henri Crolla""@en .
}

# Query for Italian administrative region related to the Democratic Party (Italy)
SELECT ?region WHERE {
  ?region a dbo:AdministrativeRegion ;
          dbo:country dbr:Italy ;
          dbo:politicalParty dbr:Democratic_Party_(Italy) .
  ?region a dbo:Settlement .
}

# Query for landmark at elevation related to Anna Ishii's award
SELECT ?landmark WHERE {
  ?annaIshii dbo:award ?award .
  ?annaIshii rdfs:label ""Anna Ishii""@en .
  ?landmark dbo:elevation ?elevation .
  ?award dbo:elevation ?awardElevation .
  FILTER (?elevation = ?awardElevation) .
}
```",6,10,7,2,3,3,3,71,0,0,2,0,0.0,0
41,22,val,"Give me the party of the person born as David Declan Costello and party of the leader, that is a politician and an office holder, of 2005 Castlereagh Borough Council election.","SELECT ?result WHERE { ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v3 <http://dbpedia.org/ontology/party> ?result . ?v0 <http://dbpedia.org/ontology/party> ?result . <http://dbpedia.org/resource/2005_Castlereagh_Borough_Council_election> <http://dbpedia.org/property/leader> ?v3 . ?v0 <http://dbpedia.org/property/birthName> ""David Declan Costello""@en . }","```sparql
SELECT ?costelloParty ?leaderParty WHERE {
  # Find David Declan Costello and his party affiliation
  ?costello dbo:birthName ""David Declan Costello""@en .
  ?costello dbo:partyAffiliation ?costelloParty .

  # Identify the leader of the 2005 Castlereagh Borough Council election
  ?election dbo:electionDate ?date .
  ?election dbo:officeHolder ?leader .
  FILTER (YEAR(?date) = 2005 && STRSTARTS(STR(?election), ""Castlereagh Borough Council""))
  
  # Ensure the leader is a politician and office holder
  ?leader rdf:type dbo:Politician ;
          dbo:officeHolder true .

  # Find the party affiliation of the leader
  ?leader dbo:partyAffiliation ?leaderParty .
}
```",4,6,5,2,2,2,3,28,0,0,1,0,0.0,0
98,23,val,"Give me the region of the time zone of Lopez Jaena and entity in the region, that is a country, of Philippine Standard Time.",SELECT ?result WHERE { ?v1 <http://dbpedia.org/property/timeZone> <http://dbpedia.org/resource/Philippine_Standard_Time> . ?result <http://dbpedia.org/ontology/timeZone> ?v3 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. <http://dbpedia.org/resource/Lopez_Jaena> <http://dbpedia.org/ontology/timeZone> ?v3 . ?result <http://dbpedia.org/ontology/country> ?v1 . },"```sparql
SELECT ?regionLopezJaena ?countryInPSTRegion WHERE {
  # Find the time zone of Lopez Jaena and its region
  ?lopezJaena dbo:timeZone ?timeZone .
  ?lopezJaena rdfs:label ""Lopez Jaena""@en .
  
  ?timeZone dbo:region ?regionLopezJaena .

  # Find the region for Philippine Standard Time (PST)
  ?pstTimezone dbo:timezoneName ""Philippine Standard Time"" .
  ?pstTimezone dbo:region ?pstRegion .

  # Find a country in the PST region
  ?countryInPSTRegion rdf:type dbo:Country ;
                      dbo:location ?pstRegion .
}
```",4,5,5,2,2,2,3,28,0,0,1743,0,0.0,0
170,20,val,Give me the domain of Mayor and entity in Russia and birth place of the awardee of People's Artist of Russia.,"SELECT ?result WHERE { ?v3 <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/People's_Artist_of_Russia> . ?result <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Russia> . ?result <http://dbpedia.org/ontology/leaderTitle> ""Mayor""@en . ?v3 <http://dbpedia.org/ontology/birthPlace> ?result . }","```sparql
SELECT DISTINCT ?mayorDomain ?entityInRussia ?birthPlace WHERE {
  # Domain of Mayor in Russia
  ?mayor rdf:type dbo:Mayor .
  ?mayor dbo:country dbr:Russia .
  ?mayor rdfs:domain ?mayorDomain .

  # Entity in Russia (assuming a notable person or organization)
  OPTIONAL {
    ?entityInRussia rdf:type ?type .
    ?entityInRussia dbo:country dbr:Russia .
    FILTER(?type != dbo:Mayor) # To avoid overlap with the Mayor domain
  }

  # Birth place of awardee of People's Artist of Russia
  ?awardee dbo:honor ""People's Artist of Russia"" ;
           dbo:birthPlace ?birthPlace .
}
```",4,4,5,2,3,2,3,28,0,0,3,0,0.0,0
645,51,val,"Give me the military force of the force, that is an event and a military conflict and a societal event, of Francisco Largo Caballero and leader of the office, that is a government agency and an organisation, of the native of Restoration (Spain).",SELECT ?result WHERE { ?v4 <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Francisco_Largo_Caballero> . ?v2 <http://dbpedia.org/ontology/leader> ?result . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?result <http://dbpedia.org/ontology/battle> ?v4 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/GovernmentAgency>. ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?v1 <http://dbpedia.org/property/office> ?v2 . ?v1 <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Restoration_(Spain)> . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. },"```sparql
SELECT ?militaryForce ?officeLeader WHERE {
  # Find Francisco Largo Caballero
  ?francisco a dbo:Person ;
             rdfs:label ""Francisco Largo Caballero""@en .

  # Identify events that are military conflicts and societal events involving him
  ?event dbo:agent ?francisco ;
         rdf:type dbo:MilitaryConflict, dbo:SocietalEvent .

  # Find the military force involved in these events
  ?event dbo:militaryForce ?militaryForce .

  # Find the office or government agency related to Francisco Largo Caballero during Restoration (Spain)
  OPTIONAL {
    ?office dbo:leader ?francisco ;
            rdf:type dbo:GovernmentAgency, dbo:Organization .
    ?office dbo:country dbc:Restoration_(Spain) .
    
    # Identify the leader of this office
    ?officeLeader dbo:positionHeld ?office ;
                  rdfs:label ?leaderLabel .
  }
}
```",5,10,6,3,2,3,3,71,0,0,2,0,0.0,0
365,17,val,"Give me the person born as Symon Vasylyovych Petliura and spouse of the native, that is a politician, of the reference to Полтавская губерния.","SELECT ?result WHERE { ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v3 <http://dbpedia.org/ontology/spouse> ?result . ?v0 <http://xmlns.com/foaf/0.1/name> ""Полтавская губерния""@en . ?v3 <http://dbpedia.org/ontology/birthPlace> ?v0 . ?result <http://dbpedia.org/property/birthName> ""Symon Vasylyovych Petliura""@en . }","```sparql
SELECT ?petliuraBirthName ?spouse WHERE {
  # Retrieve Symon Vasylyovych Petliura and his birth name
  ?petliura dbo:birthName ?petliuraBirthName .
  ?petliura rdfs:label ""Symon Vasylyovych Petliura""@en .

  # Find a politician native to Полтавская губерния
  OPTIONAL {
    ?politician dbo:nativePlace ?nativePlace .
    ?nativePlace rdfs:label ""Poltava Governorate""@en .
    ?politician rdf:type dbo:Politician .
    
    # Retrieve the spouse of this politician
    ?politician dbo:spouse ?spouse .
  }
}
```",4,5,5,3,2,3,2,20,0,0,1,0,0.0,0
274,20,val,Give me the professional in the designer of Tetris Classic and band member of Dizzy Gillespie and associated musical artist of Cecil Taylor.,SELECT ?result WHERE { ?result <http://dbpedia.org/property/occupation> ?v3 . <http://dbpedia.org/resource/Cecil_Taylor> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?result <http://dbpedia.org/ontology/associatedMusicalArtist> <http://dbpedia.org/resource/Dizzy_Gillespie> . <http://dbpedia.org/resource/Tetris_Classic> <http://dbpedia.org/property/designer> ?v3 . },"```sparql
SELECT DISTINCT ?commonIndividual WHERE {
  # Designer of Tetris Classic
  ?tetrisDesigner dbo:profession ""Video game designer""@en .
  ?tetrisClassic dbo:designer ?tetrisDesigner .
  ?tetrisClassic rdfs:label ""Tetris Classic""@en .

  # Band member of Dizzy Gillespie
  ?gillespieBandMember dbo:bandMember ?dizzyGillespie .
  ?dizzyGillespie rdfs:label ""Dizzy Gillespie""@en .

  # Associated musical artist of Cecil Taylor
  ?cecilTaylorAssociatedArtist dbo:associatedMusicalArtist ?cecilTaylor .
  ?cecilTaylor rdfs:label ""Cecil Taylor""@en .

  # Find common individual among the three roles
  FILTER (?tetrisDesigner = ?gillespieBandMember && ?gillespieBandMember = ?cecilTaylorAssociatedArtist)
}
```",4,4,5,2,3,2,3,28,0,0,1,0,0.0,0
216,47,val,"Give me the player in the coach of Croatia national under-21 football team and player in the coach, that is a soccer player and a sports manager and a soccer manager, of the player, that is an organisation and a sports club and a soccer club, in Džemal Berberović.",SELECT ?result WHERE { <http://dbpedia.org/resource/Croatia_national_under-21_football_team> <http://dbpedia.org/ontology/coach> ?v2 . ?v4 <http://dbpedia.org/ontology/team> ?result . ?v0 <http://dbpedia.org/ontology/coach> ?v4 . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerPlayer>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerClub>. ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerManager>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsClub>. ?v2 <http://dbpedia.org/ontology/team> ?result . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsManager>. <http://dbpedia.org/resource/Džemal_Berberović> <http://dbpedia.org/ontology/team> ?v0 . },"```sparql
SELECT ?coachPlayer ?organization WHERE {
  # Džemal Berberović's roles as a player and coach
  ?berberovic dbo:occupation ""Soccer player""@en .
  ?berberovic dbo:occupation ""Sports manager""@en .
  ?berberovic dbo:occupation ""Soccer manager""@en .

  # Coach of Croatia national under-21 football team who was also a player
  ?team dbo:coach ?coachPlayer .
  ?team rdfs:label ""Croatia national under-21 football team""@en .
  ?coachPlayer dbo:occupation ""Soccer player""@en .

  # Organization associated with Džemal Berberović
  ?organization dbo:member ?berberovic .
  ?organization rdf:type dbpedia-owl:SportsClub .
  ?organization rdf:type dbpedia-owl:SoccerClub .
  ?organization rdf:type dbpedia-owl:Organization .
}
```",5,11,6,3,2,3,3,71,0,0,3,0,0.0,0
933,55,val,"Give me the reference to the birth name of Alan Warner (musician) and band of the band of Alan Warner (musician) and band of the band, that is a group and a band and an organisation, of Alan Warner (musician).",SELECT ?result WHERE { ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?result <http://xmlns.com/foaf/0.1/name> ?v5 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Group>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Band>. <http://dbpedia.org/resource/Alan_Warner_(musician)> <http://dbpedia.org/ontology/associatedMusicalArtist> ?v2 . ?v0 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . <http://dbpedia.org/resource/Alan_Warner_(musician)> <http://dbpedia.org/ontology/associatedMusicalArtist> ?v0 . ?v2 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . <http://dbpedia.org/resource/Alan_Warner_(musician)> <http://dbpedia.org/property/birthName> ?v5 . },"```sparql
SELECT ?birthName ?band ?organization WHERE {
  # Identify Alan Warner (musician)
  ?alanWarner rdfs:label ""Alan Warner""@en .
  
  # Retrieve birth name of Alan Warner
  OPTIONAL { 
    ?alanWarner dbo:birthName ?birthName .
  }
  
  # Find the band associated with Alan Warner
  OPTIONAL {
    ?alanWarner dbo:bandMember ?band .
  }
  
  # Determine if this band is part of a larger group or organization
  OPTIONAL {
    ?band dbo:partOf ?organization .
    FILTER (regex(str(?organization), ""group|band|organisation"", ""i""))
  }
}
```",6,9,7,2,3,3,3,71,0,0,1,0,0.0,0
124,48,val,"Give me the military force of the force, that is a societal event and a military conflict, of Herbert Kitchener, 1st Earl Kitchener and commander in the war, that is a societal event and a military conflict, of the reference, that is Australian and an organisation and a military unit, to 'A' Battery, Royal Australian Artillery.","SELECT ?result WHERE { ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v3 <http://dbpedia.org/ontology/battle> ?v2 . ?v3 <http://xmlns.com/foaf/0.1/name> ""'A' Battery, Royal Australian Artillery""@en . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v1 <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Herbert_Kitchener,_1st_Earl_Kitchener> . ?v2 <http://dbpedia.org/ontology/commander> ?result . ?result <http://dbpedia.org/ontology/battle> ?v1 . ?v3 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Australia>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryUnit>. }","```sparql
SELECT ?militaryForce WHERE {
  # Herbert Kitchener's command in a war
  ?kitchener dbo:commanderInWar ?war1 .
  ?kitchener rdfs:label ""Herbert Kitchener, 1st Earl Kitchener""@en .

  # A societal event and military conflict involving the Australian reference
  ?australianUnit dbo:partOfMilitaryConflict ?war2 .
  ?australianUnit rdfs:label ""A Battery, Royal Australian Artillery""@en .
  
  # Find the overarching military force for both conflicts
  ?war1 dbo:militaryForce ?militaryForce .
  ?war2 dbo:militaryForce ?militaryForce .
}
```",5,12,6,3,2,3,3,71,0,0,9,0,0.0,0
170,19,val,Give me the domain of Mayor and entity in the work of International Energy Agency and birth place of Era Ziganshina.,"SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/leaderTitle> ""Mayor""@en . <http://dbpedia.org/resource/Era_Ziganshina> <http://dbpedia.org/ontology/birthPlace> ?result . ?result <http://dbpedia.org/ontology/country> ?v2 . ?v2 <http://dbpedia.org/property/author> <http://dbpedia.org/resource/International_Energy_Agency> . }","```sparql
SELECT ?domain ?mayorEntity ?birthPlace WHERE {
  # Part 1: Domain of Mayor in the work of IEA
  OPTIONAL {
    ?iea dbo:work ?work .
    ?work rdfs:label ""International Energy Agency""@en .
    ?mayor dbo:worksFor ?iea .
    ?mayor rdfs:label ?mayorEntity .
    ?mayor rdf:type ?domain .
  }

  # Part 2: Birth place of Era Ziganshina
  OPTIONAL {
    ?era dbo:birthPlace ?birthPlace .
    ?era rdfs:label ""Era Ziganshina""@en .
  }
}
```",4,4,5,2,3,2,3,28,1,2,0,0.3333333333333333,1.0,0.5
465,51,val,"Give me the successor of the child, that is a royalty, of the parent of Charles Orlando, Dauphin of France and spouse of the child, that is a royalty, of Ferdinand I, Holy Roman Emperor.","SELECT ?result WHERE { ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. <http://dbpedia.org/resource/Ferdinand_I,_Holy_Roman_Emperor> <http://dbpedia.org/ontology/child> ?v4 . ?v2 <http://dbpedia.org/ontology/successor> ?result . ?result <http://dbpedia.org/ontology/spouse> ?v4 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v1 <http://dbpedia.org/ontology/child> ?v2 . <http://dbpedia.org/resource/Charles_Orlando,_Dauphin_of_France> <http://dbpedia.org/ontology/parent> ?v1 . }","```sparql
SELECT ?successor WHERE {
  # Step 1: Identify Charles Orlando and his parent
  ?charlesOrlando rdfs:label ""Charles Orlando, Dauphin of France""@en .
  ?parent dbo:child ?charlesOrlando .

  # Step 2: Find a royalty child of Charles Orlando's parent
  ?royaltyChild dbo:child ?parent .
  FILTER (regex(str(?royaltyChild), ""Royal"", ""i""))

  # Step 3: Identify Ferdinand I and his royal child
  ?ferdinandI rdfs:label ""Ferdinand I, Holy Roman Emperor""@en .
  ?ferdinandChild dbo:child ?ferdinandI .
  FILTER (regex(str(?ferdinandChild), ""Royal"", ""i""))

  # Step 4: Determine the spouse of Ferdinand I's royal child
  ?spouse dbo:spouse ?ferdinandChild .

  # Step 5: Find the successor of Charles Orlando's parent's royal child
  ?royaltyChild dbo:successor ?successor .
}
```",5,7,6,3,2,3,3,71,0,0,1,0,0.0,0
267,16,val,"Give me the coach of the player, that is a soccer club, in Rasoul Khatibi and person born on the birth date of Dan Cathy.",SELECT ?result WHERE { ?v2 <http://dbpedia.org/ontology/coach> ?result . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerClub>. <http://dbpedia.org/resource/Rasoul_Khatibi> <http://dbpedia.org/ontology/team> ?v2 . ?result <http://dbpedia.org/ontology/birthDate> ?v3 . <http://dbpedia.org/resource/Dan_Cathy> <http://dbpedia.org/ontology/birthDate> ?v3 . },"SELECT ?coach WHERE {
  # Find the soccer club Rasoul Khatibi plays for
  ?khatibi dbo:playsFor ?club .
  ?khatibi rdfs:label ""Rasoul Khatibi""@en .

  # Get Dan Cathy's birth date
  ?cathy dbo:birthday ?birthDate .
  ?cathy rdfs:label ""Dan Cathy""@en .

  # Find a person born on the same date as Dan Cathy
  ?person dbo:birthday ?sameBirthDate .
  FILTER (?sameBirthDate = ?birthDate)

  # Check if this person is a coach of any soccer club
  OPTIONAL {
    ?person dbo:coachOf ?club .
  }

  # Ensure the person found is not Dan Cathy himself
  FILTER (!str(?person) = str(?cathy))
}",4,5,5,2,2,3,2,20,0,0,1,0,0.0,0
715,46,val,"Give me the commander in the force of Francisco Largo Caballero and commander in the force, that is a military conflict, of the native of Morocco.",SELECT ?result WHERE { ?v4 <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Francisco_Largo_Caballero> . ?v1 <http://dbpedia.org/ontology/commander> ?result . ?v4 <http://dbpedia.org/ontology/commander> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v1 <http://dbpedia.org/ontology/commander> ?v2 . ?v2 <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Morocco> . },"```sparql
SELECT ?commanderFrancisco ?conflictCommander WHERE {
  # Find Francisco Largo Caballero's commander role
  ?francisco dbo:birthPlace dbr:Madrid .
  ?francisco rdfs:label ""Francisco Largo Caballero""@en .
  OPTIONAL { 
    ?francisco dbo:positionHeld ?commanderRole .
    ?commanderRole dbo:roleName ?commanderFrancisco .
    FILTER (regex(str(?commanderRole), ""Commander"", ""i""))
  }

  # Find a notable Moroccan military leader and their conflict
  OPTIONAL {
    ?moroccanLeader dbo:nationality dbr:Morocco .
    ?conflict dbo:participatedIn ?moroccanLeader .
    ?conflict dbo:commandedBy ?conflictCommander .

    # Example: Tariq ibn Ziyad in the Umayyad conquest of Hispania
    FILTER (regex(str(?moroccanLeader), ""Tariq ibn Ziyad"", ""i""))
  }
}
```",5,6,6,3,2,3,3,71,0,0,4,0,0.0,0
573,48,val,"Give me the parent of the author, that is a politician and an office holder, of Exchequer Standards and person decedent at the administration, that is a region, of the real name of Charlie Baker (Australian footballer).",SELECT ?result WHERE { <http://dbpedia.org/resource/Charlie_Baker_(Australian_footballer)> <http://xmlns.com/foaf/0.1/name> ?v3 . ?result <http://dbpedia.org/ontology/deathPlace> ?v2 . ?v1 <http://dbpedia.org/ontology/parent> ?result . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Region>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. <http://dbpedia.org/resource/Exchequer_Standards> <http://dbpedia.org/property/author> ?v1 . ?v2 <http://dbpedia.org/property/governor> ?v3 . },"```sparql
SELECT ?parent WHERE {
  # Step 1: Identify Charlie Baker's real name
  ?charlieBaker dbo:birthName ?realName .
  ?charlieBaker rdfs:label ""Charlie Baker (Australian footballer)""@en .

  # Step 2: Find the administration region associated with his real name
  ?administrationRegion dbo:administrativeUnit ?realName .

  # Step 3: Identify the author of Exchequer Standards who is a politician and office holder
  ?author dbo:authored ""Exchequer Standards"" .
  ?author rdf:type dbo:Politician .
  ?author rdf:type dbo:OfficeHolder .

  # Step 4: Find the parent of this author who is a decedent
  ?author dbo:parent ?parent .
  ?parent dbo:deathDate ?deathDate .
  FILTER (?deathDate != """")
}
```",5,8,6,3,2,3,3,71,0,0,2,0,0.0,0
508,16,val,"Give me the birthplace of the commander, that is Saudi, in Central Plains War and birthplace of the commander, that is a politician, in 1939–1940 Winter Offensive.",SELECT ?result WHERE { ?v3 <http://dbpedia.org/ontology/birthPlace> ?result . ?v3 <http://dbpedia.org/ontology/nationality> <http://dbpedia.org/resource/Saudi_Arabia>. <http://dbpedia.org/resource/Central_Plains_War> <http://dbpedia.org/ontology/commander> ?v3 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. <http://dbpedia.org/resource/1939–1940_Winter_Offensive> <http://dbpedia.org/ontology/commander> ?v2 . ?v2 <http://dbpedia.org/ontology/birthPlace> ?result . },"```sparql
# Query for the birthplace of the Saudi commander in the Central Plains War
SELECT ?birthPlace WHERE {
  ?person dbo:nationality dbr:Saudi_Arabia ;
          dbo:occupation dbr:Military_person ;
          dbo:participatedIn dbr:Central_Plains_War .
  ?person dbo:birthPlace ?birthPlace .
}

# Query for the birthplace of the politician and commander in the 1939–1940 Winter Offensive
SELECT ?birthPlace WHERE {
  ?person dbo:occupation dbr:Politician ;
          dbo:participatedIn dbr:Winter_Offensive_1939-40 ;
          dbo:role dbr:Military_commander .
  ?person dbo:birthPlace ?birthPlace .
}
```",4,6,5,2,2,3,2,20,0,0,3,0,0.0,0
645,40,val,Give me the commander in the force of the commander in Siege of Madrid and military force of Spanish Civil War and leader of Ministry of the Army (Spain).,SELECT ?result WHERE { <http://dbpedia.org/resource/Siege_of_Madrid> <http://dbpedia.org/ontology/commander> ?v2 . ?v1 <http://dbpedia.org/ontology/commander> ?v2 . ?result <http://dbpedia.org/ontology/battle> <http://dbpedia.org/resource/Spanish_Civil_War> . <http://dbpedia.org/resource/Ministry_of_the_Army_(Spain)> <http://dbpedia.org/ontology/leader> ?result . ?v1 <http://dbpedia.org/ontology/commander> ?result . },"```sparql
SELECT ?leader WHERE {
  # Step 1: Identify the commander in the Siege of Madrid
  ?siege dbo:commander ?commander .
  ?siege rdfs:label ""Siege of Madrid""@en .

  # Step 2: Determine the military force associated with this commander during the Spanish Civil War
  ?commander dbo:militaryForce ?militaryForce .
  ?civilWar rdfs:label ""Spanish Civil War""@en .
  ?militaryForce dbo:partOf ?civilWar .

  # Step 3: Find the leader of this military force who was also the leader of the Ministry of the Army
  ?leader dbo:militaryLeader ?militaryForce ;
          dbo:ministryLeader ?ministry .
  ?ministry rdfs:label ""Ministry of the Army (Spain)""@en .
}
```",5,5,6,3,3,3,3,71,0,0,1,0,0.0,0
122,7,val,Give me the band of Gift of Gab (rapper) and band member of the band of Gift of Gab (rapper).,SELECT ?result WHERE { <http://dbpedia.org/resource/Gift_of_Gab_(rapper)> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . <http://dbpedia.org/resource/Gift_of_Gab_(rapper)> <http://dbpedia.org/ontology/associatedMusicalArtist> ?v0 . ?result <http://dbpedia.org/ontology/associatedMusicalArtist> ?v0 . },"```sparql
SELECT ?band ?member WHERE {
  # Find the band associated with Gift of Gab
  ?giftOfGab dbo:associatedBand ?band .
  ?giftOfGab rdfs:label ""Gift of Gab""@en .

  # Ensure the band is Blackalicious
  FILTER (regex(str(?band), ""Blackalicious"", ""i""))

  # Find a member of the band Blackalicious
  ?band dbo:member ?member .
}
```",3,3,4,2,2,2,2,9,0,0,3,0,0.0,0
18,21,val,"Give me the parent of Liza Huber and professional in  and alumnus of the figure known, that is an educational institution, as Saints.","SELECT ?result WHERE { ?result <http://dbpedia.org/property/occupation> """"@en . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/EducationalInstitution>. ?v1 <http://dbpedia.org/property/nickname> ""Saints""@en . ?result <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Liza_Huber> . ?result <http://dbpedia.org/ontology/almaMater> ?v1 . }","```sparql
SELECT ?parent ?professional ?alumnus WHERE {
  # Identify Liza Huber's parent
  ?lizaHuber dbo:birthName ""Liza Huber""@en .
  ?lizaHuber dbo:parent ?parent .

  # Find the educational institution known as Saints
  ?saints rdfs:label ""Saints""@en ;
          a dbo:EducationalInstitution .

  # Identify professionals associated with this institution and who are alumni of it
  ?professional dbo:almaMater ?saints ;
                dbo:profession ?profession .
  
  OPTIONAL {
    ?alumnus dbo:almaMater ?saints ;
             dbo:profession ?profession .
  }
}
```",4,5,5,2,3,2,3,28,0,0,1,0,0.0,0
917,46,val,"Give me the parent of the child, that is a royalty, of the mayor of Hawaiian Kingdom and child of the father of Keʻelikōlani.",SELECT ?result WHERE { <http://dbpedia.org/resource/Keʻelikōlani> <http://dbpedia.org/property/father> ?v3 . ?v0 <http://dbpedia.org/property/father> ?v2 . ?result <http://dbpedia.org/ontology/child> ?v0 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?result <http://dbpedia.org/ontology/parent> ?v3 . <http://dbpedia.org/resource/Hawaiian_Kingdom> <http://dbpedia.org/property/leader> ?v2 . },"```sparql
SELECT ?parent WHERE {
  # Find the mayor of Hawaiian Kingdom and their children
  ?mayor dbo:position ""Mayor""@en ;
         dbo:child ?child .
  ?mayor rdfs:label ""Mayor of Hawaiian Kingdom""@en .

  # Identify the father of Keʻelikōlani
  ?keelikolani dbo:parent ?father .
  ?keelikolani rdfs:label ""Keʻelikōlani""@en .

  # Find a child of this father who is royalty
  OPTIONAL {
    ?child dbo:parent ?father ;
           rdf:type dbo:RoyalPerson .
  }

  # Determine the parent of this royal child
  OPTIONAL {
    ?child dbo:parent ?parent .
  }
}
```",5,6,6,3,2,3,3,71,0,0,2,0,0.0,0
826,42,val,"Give me the spouse of the child of Johann Heinrich Appel and predecessor of the parent of Prince Friedrich of Hesse and by Rhine and successor of Louis II, Grand Duke of Hesse.","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/successor> ?v1 . <http://dbpedia.org/resource/Prince_Friedrich_of_Hesse_and_by_Rhine> <http://dbpedia.org/ontology/parent> ?v1 . <http://dbpedia.org/resource/Louis_II,_Grand_Duke_of_Hesse> <http://dbpedia.org/ontology/successor> ?result . ?v2 <http://dbpedia.org/property/father> ""Johann Heinrich Appel""@en . ?v2 <http://dbpedia.org/ontology/spouse> ?result . }","```sparql
SELECT ?spouse WHERE {
  # Find Johann Heinrich Appel's child
  ?appel dbo:child ?child .
  ?appel rdfs:label ""Johann Heinrich Appel""@en .

  # Find Prince Friedrich of Hesse and by Rhine and his parent
  ?friedrich rdfs:label ""Prince Friedrich of Hesse and by Rhine""@en .
  ?parent dbo:child ?friedrich .
  
  # Predecessor of Prince Friedrich's parent
  ?predecessor dbo:successor ?parent .

  # Successor of Louis II, Grand Duke of Hesse
  ?louis rdfs:label ""Louis II, Grand Duke of Hesse""@en .
  ?successor dbo:predecessor ?louis .

  # Spouse of Johann Heinrich Appel's child
  ?child dbo:spouse ?spouse .

  # Ensure the spouse is both predecessor and successor
  FILTER (?spouse = ?predecessor && ?spouse = ?successor)
}
```",5,5,6,2,3,3,3,71,0,0,1,0,0.0,0
892,46,val,Give me the landmark at elevation of the award of Anna Ishii and entity in the profession of the true self of Enrico Crolla.,"SELECT ?result WHERE { ?v2 <http://xmlns.com/foaf/0.1/givenName> ""Enrico Crolla""@en . <http://dbpedia.org/resource/Anna_Ishii> <http://dbpedia.org/property/awards> ?v3 . ?result <http://dbpedia.org/ontology/country> ?v0 . ?result <http://dbpedia.org/ontology/elevation> ?v3 . ?v2 <http://dbpedia.org/property/occupation> ?v0 . }","```sparql
SELECT ?landmarkElevation ?entity WHERE {
  # Part 1: Anna Ishii's Award and Landmark Elevation
  ?anna dbo:award ?award .
  ?anna rdfs:label ""Anna Ishii""@en .

  OPTIONAL {
    ?award dbo:associatedLandmark ?landmark .
    ?landmark dbo:elevation ?landmarkElevation .
  }

  # Part 2: Enrico Crolla's True Self and Profession
  ?crolla dbo:profession ?profession .
  ?crolla rdfs:label ""Enrico Crolla""@en .

  OPTIONAL {
    ?entity rdf:type ?profession .
  }
}
```",5,5,6,3,2,3,3,71,0,0,11,0,0.0,0
124,54,val,"Give me the commander in the war, that is a societal event and a military conflict, of A Field Battery, Royal Australian Artillery and military force of Battle of Atbara and military force of the war, that is an event and a military conflict and a societal event, of the awardee of British South Africa Company Medal.","SELECT ?result WHERE { ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?result <http://dbpedia.org/ontology/battle> ?v5 . ?v0 <http://dbpedia.org/ontology/battle> ?v5 . ?v3 <http://dbpedia.org/ontology/commander> ?result . ?v0 <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/British_South_Africa_Company_Medal> . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?result <http://dbpedia.org/ontology/battle> <http://dbpedia.org/resource/Battle_of_Atbara> . <http://dbpedia.org/resource/A_Field_Battery,_Royal_Australian_Artillery> <http://dbpedia.org/ontology/battle> ?v3 . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. }","```sparql
SELECT ?commander ?militaryForce WHERE {
  # Find a war involving A Field Battery, Royal Australian Artillery
  ?battery dbo:partOfMilitaryConflict ?war1 .
  ?battery rdfs:label ""A Field Battery, Royal Australian Artillery""@en .

  # Ensure the war is both a societal event and a military conflict
  ?war1 rdf:type dbpedia-owl:MilitaryConflict ;
        rdf:type dbpedia-owl:Event .

  # Find the commander of this war
  ?war1 dbo:commander ?commander .

  # Find a war involving Battle of Atbara
  ?battle dbo:partOfMilitaryConflict ?war2 .
  ?battle rdfs:label ""Battle of Atbara""@en .

  # Ensure the war is both an event and a military conflict
  ?war2 rdf:type dbpedia-owl:MilitaryConflict ;
        rdf:type dbpedia-owl:Event .

  # Find the military force involved in this war
  ?war2 dbo:militaryForce ?militaryForce .

  # Find the awardee of British South Africa Company Medal and their associated war
  ?medalAwardee dbo:awarded ""British South Africa Company Medal""@en .
  ?medalAwardee dbo:partOfMilitaryConflict ?war3 .

  # Ensure this war is both an event and a military conflict
  ?war3 rdf:type dbpedia-owl:MilitaryConflict ;
        rdf:type dbpedia-owl:Event .
}
```",6,11,7,3,3,3,3,71,0,0,1,0,0.0,0
124,41,val,"Give me the commander in the war, that is a societal event and a military conflict, of A Field Battery, Royal Australian Artillery and military force of Battle of Atbara and military force of the war, that is an event and a military conflict and a societal event, of Frank Rhodes (British Army officer).","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/battle> ?v4 . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?v2 <http://dbpedia.org/ontology/commander> ?result . <http://dbpedia.org/resource/A_Field_Battery,_Royal_Australian_Artillery> <http://dbpedia.org/ontology/battle> ?v2 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?result <http://dbpedia.org/ontology/battle> <http://dbpedia.org/resource/Battle_of_Atbara> . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. <http://dbpedia.org/resource/Frank_Rhodes_(British_Army_officer)> <http://dbpedia.org/ontology/battle> ?v4 . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. }","```sparql
SELECT ?commander WHERE {
  # Find the war involving A Field Battery, Royal Australian Artillery
  ?battery dbo:participatedIn ?war1 .
  ?battery rdfs:label ""A Field Battery, Royal Australian Artillery""@en .

  # Find the military force involved in the Battle of Atbara
  ?battle dbo:militaryForce ?forceAtbara .
  ?battle rdfs:label ""Battle of Atbara""@en .

  # Find the war associated with Frank Rhodes (British Army officer)
  ?frankRhodes dbo:servedIn ?war2 .
  ?frankRhodes rdfs:label ""Frank Rhodes (British Army officer)""@en .

  # Identify a common commander for these entities
  ?commander dbo:commanded ?forceAtbara ;
             dbo:commanded ?war1 ;
             dbo:commanded ?war2 .
}
```",5,10,6,2,3,3,3,71,0,0,1,0,0.0,0
773,43,val,"Give me the spouse of Louis the German and parent of the successor of the child, that is a royalty, of Louis the Pious and parent of Charles the Fat.",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/child> ?v4 . <http://dbpedia.org/resource/Louis_the_German> <http://dbpedia.org/ontology/spouse> ?result . ?v0 <http://dbpedia.org/ontology/successor> ?v4 . <http://dbpedia.org/resource/Louis_the_Pious> <http://dbpedia.org/ontology/child> ?v0 . <http://dbpedia.org/resource/Charles_the_Fat> <http://dbpedia.org/ontology/parent> ?result . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. },"```sparql
SELECT ?spouseOfLouisTheGerman ?royalParent WHERE {
  # Find spouse of Louis the German
  ?louisTheGerman dbo:spouse ?spouseOfLouisTheGerman .
  ?louisTheGerman rdfs:label ""Louis the German""@en .

  # Identify a child of Louis the Pious who succeeded him and is royalty
  OPTIONAL {
    ?louisThePious dbo:child ?successorChild .
    ?louisThePious rdfs:label ""Louis the Pious""@en .
    FILTER (regex(str(?successorChild), ""Lothair I|Charles the Bald|Louis the German"", ""i""))
  }

  # Find parent of this royal successor
  OPTIONAL {
    ?successorChild dbo:parent ?royalParent .
    FILTER (regex(str(?successorChild), ""Lothair I|Charles the Bald|Louis the German"", ""i""))
  }
  
  # Ensure that this parent is also the parent of Charles the Fat
  OPTIONAL {
    ?charlesTheFat dbo:parent ?royalParent .
    ?charlesTheFat rdfs:label ""Charles the Fat""@en .
  }

  FILTER (BOUND(?royalParent))
}
```",5,6,6,3,3,3,3,71,1,1,0,0.5,1.0,0.6666666666666666
888,17,val,Give me the awardee of the award of the commander in 2022 Ukrainian eastern counteroffensive and commander in Southern Ukraine campaign.,SELECT ?result WHERE { ?result <http://dbpedia.org/property/awards> ?v3 . <http://dbpedia.org/resource/Southern_Ukraine_campaign> <http://dbpedia.org/ontology/commander> ?result . <http://dbpedia.org/resource/2022_Ukrainian_eastern_counteroffensive> <http://dbpedia.org/ontology/commander> ?v0 . ?v0 <http://dbpedia.org/property/awards> ?v3 . },"```sparql
SELECT ?awardee ?commander WHERE {
  # Find the awardee of an award during the 2022 Ukrainian eastern counteroffensive
  ?event dbo:awardRecipient ?awardee .
  ?event rdfs:label ""2022 Ukrainian Eastern Counteroffensive""@en .

  # Find the commander in the Southern Ukraine campaign
  ?campaign dbo:commander ?commander .
  ?campaign rdfs:label ""Southern Ukraine Campaign""@en .

  # Check if the awardee and commander are the same person
  FILTER (?awardee = ?commander)
}
```",4,4,5,3,2,3,2,20,0,0,1,0,0.0,0
839,52,val,"Give me the band of the person born, that is a musical artist, as the persona of Kevin Russell (musician) and band of Matthias Röhr and band of the member of Böhse Onkelz.",SELECT ?result WHERE { ?v2 <http://dbpedia.org/property/birthName> ?v3 . ?v2 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. <http://dbpedia.org/resource/Böhse_Onkelz> <http://dbpedia.org/ontology/bandMember> ?v5 . ?result <http://dbpedia.org/ontology/bandMember> ?v5 . ?result <http://dbpedia.org/ontology/bandMember> <http://dbpedia.org/resource/Matthias_Röhr> . <http://dbpedia.org/resource/Kevin_Russell_(musician)> <http://xmlns.com/foaf/0.1/givenName> ?v3 . },"```sparql
# Query for Kevin Russell (musician)
SELECT ?band WHERE {
  ?kevinRussell dbo:birthPlace ?place .
  ?kevinRussell rdfs:label ""Kevin Russell""@en .
  ?kevinRussell foaf:nick ?persona .
  ?persona dbo:associatedBand ?band .
}

# Query for Matthias Röhr
SELECT ?band WHERE {
  ?matthiasRohr dbo:associatedBand ?band .
  ?matthiasRohr rdfs:label ""Matthias Röhr""@en .
}

# Query for Böhse Onkelz member's band
SELECT DISTINCT ?member ?band WHERE {
  ?boehseOnkelz dbo:member ?member .
  ?boehseOnkelz rdfs:label ""Böhse Onkelz""@de .
  ?member dbo:associatedBand ?band .
}
```",6,7,7,3,3,3,3,71,0,0,1,0,0.0,0
839,41,val,"Give me the band of the person born, that is a musical artist, as Kevin Richard Russell and band of the member of Böhse Onkelz and band of Matthias Röhr.","SELECT ?result WHERE { ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?result <http://dbpedia.org/ontology/bandMember> ?v4 . ?v2 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . <http://dbpedia.org/resource/Böhse_Onkelz> <http://dbpedia.org/ontology/bandMember> ?v4 . ?v2 <http://dbpedia.org/property/birthName> ""Kevin Richard Russell""@en . ?result <http://dbpedia.org/ontology/bandMember> <http://dbpedia.org/resource/Matthias_Röhr> . }","```sparql
SELECT ?kevinBand ?matthiasBand WHERE {
  # Find Kevin Richard Russell and his associated band
  ?kevin dbo:birthName ""Kevin Richard Russell""@en .
  ?kevin dbo:musicalArtist ?kevinBand .

  # Find Matthias Röhr, a member of Böhse Onkelz, and his subsequent band
  ?matthias dbo:memberOf ?boehseOnkelz .
  ?boehseOnkelz rdfs:label ""Böhse Onkelz""@en .
  ?matthias dbo:musicalArtist ?matthiasBand .
  FILTER (str(?matthias) = str(dbpedia:Matthias_Röhr))
}
```",5,6,6,2,3,3,3,71,0,0,1,0,0.0,0
976,44,val,"Give me the office of the mayor, that is a politician and an office holder and Turkish, of Nation Alliance (Turkey) and office of the person born as Mehmet Naci Bostancı and office of Mustafa Şentop.","SELECT ?result WHERE { ?v4 <http://dbpedia.org/property/office> ?result . ?v0 <http://dbpedia.org/property/birthName> ""Mehmet Naci Bostancı""@en . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v0 <http://dbpedia.org/property/office> ?result . ?v4 <http://dbpedia.org/ontology/nationality> <http://dbpedia.org/resource/Turkey>. <http://dbpedia.org/resource/Nation_Alliance_(Turkey)> <http://dbpedia.org/property/leader> ?v4 . <http://dbpedia.org/resource/Mustafa_Şentop> <http://dbpedia.org/property/office> ?result . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. }","```sparql
# Query for the Mayor of Nation Alliance (Turkey)
SELECT ?mayorOffice WHERE {
  ?person dbo:politicalParty dbr:Nation_Alliance_(Turkey) .
  ?person dbo:nationality dbr:Turkey .
  ?person rdf:type dbo:Politician .
  ?person dbo:office ?mayorOffice .
}

# Query for the office of Mehmet Naci Bostancı
SELECT ?bostanciOffice WHERE {
  ?bostanci rdfs:label ""Mehmet Naci Bostancı""@en .
  ?bostanci dbo:office ?bostanciOffice .
}

# Query for the office of Mustafa Şentop
SELECT ?sentopOffice WHERE {
  ?sentop rdfs:label ""Mustafa Şentop""@en .
  ?sentop dbo:office ?sentopOffice .
}
```",5,8,6,2,3,3,3,71,0,0,1,0,0.0,0
955,16,val,"Give me the band of the band member, that is a musical artist and an artist, of Street Dogs and band of the writer of Don't Forget Your Roots (album).",SELECT ?result WHERE { ?v3 <http://dbpedia.org/ontology/associatedMusicalArtist> <http://dbpedia.org/resource/Street_Dogs> . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?result <http://dbpedia.org/ontology/bandMember> ?v2 . ?result <http://dbpedia.org/ontology/bandMember> ?v3 . <http://dbpedia.org/resource/Don't_Forget_Your_Roots_(album)> <http://dbpedia.org/property/writer> ?v2 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. },"```sparql
SELECT ?band1 ?band2 WHERE {
  # Find a member of Street Dogs who is both a musical artist and an artist
  ?member dbo:memberOfBand ?streetDogs .
  ?streetDogs rdfs:label ""Street Dogs""@en .
  ?member rdf:type dbo:MusicalArtist .
  ?member rdf:type dbo:Artist .

  # Find the band of this member
  ?member dbo:memberOfBand ?band1 .

  # Find the writer of the album ""Don't Forget Your Roots""
  ?album dbo:writer ?writer .
  ?album rdfs:label ""Don't Forget Your Roots""@en .

  # Find the band associated with this writer
  ?writer dbo:memberOfBand ?band2 .
}
```",4,6,5,2,2,3,2,20,0,0,1,0,0.0,0
965,52,val,"Give me the parent of the child, that is a royalty, of Prince Louis of Battenberg and spouse of the spouse of the parent of Louise Mountbatten and parent of George Mountbatten, 2nd Marquess of Milford Haven.","SELECT ?result WHERE { ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. <http://dbpedia.org/resource/George_Mountbatten,_2nd_Marquess_of_Milford_Haven> <http://dbpedia.org/ontology/parent> ?result . ?result <http://dbpedia.org/ontology/spouse> ?v1 . ?v3 <http://dbpedia.org/ontology/spouse> ?v1 . ?v4 <http://dbpedia.org/ontology/parent> ?result . <http://dbpedia.org/resource/Louise_Mountbatten> <http://dbpedia.org/ontology/parent> ?v3 . ?v4 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Prince_Louis_of_Battenberg> . }","```sparql
SELECT ?parent WHERE {
  # Find a royal child of Prince Louis of Battenberg
  ?child dbo:parent ?louis .
  ?louis rdfs:label ""Prince Louis of Battenberg""@en .
  FILTER EXISTS { ?child rdf:type dbo:RoyalFamilyMember } .

  # Find the spouse of this royal child
  OPTIONAL {
    ?child dbo:spouse ?spouse .
  }

  # Identify the parent of Louise Mountbatten and their spouse
  ?louiseParent dbo:parent ?louise .
  ?louise rdfs:label ""Louise Mountbatten""@en .
  OPTIONAL {
    ?louiseParent dbo:spouse ?spouseOfLousieParent .
  }

  # Determine the parent of George Mountbatten, 2nd Marquess of Milford Haven
  ?georgeParent dbo:parent ?george .
  ?george rdfs:label ""George Mountbatten, 2nd Marquess of Milford Haven""@en .

  # Find the parent of the spouse of the parent of Louise Mountbatten
  OPTIONAL {
    ?spouseOfLousieParent dbo:parent ?parent .
  }
}
```",6,7,7,3,3,3,3,71,0,0,2,0,0.0,0
917,43,val,"Give me the child of Kekūanāoʻa and parent of Albert Kamehameha and child of the father of the spouse, that is a royalty, of Leleiohoku I.","SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/spouse> <http://dbpedia.org/resource/Leleiohoku_I> . ?v1 <http://dbpedia.org/property/father> ?v3 . ?result <http://dbpedia.org/ontology/parent> ?v3 . ?result <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Albert_Kamehameha> . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?result <http://dbpedia.org/property/father> ""Kekūanāoʻa""@en . }","```sparql
SELECT ?childOfKekuanaoa ?royalFatherChild WHERE {
  # Find Kekūanāoʻa and his child who is a parent of Albert Kamehameha
  ?kekuanaoa rdfs:label ""Kekūanāoʻa""@en .
  ?kekuanaoa dbo:child ?childOfKekuanaoa .
  
  # Ensure this child is also the parent of Albert Kamehameha
  ?childOfKekuanaoa dbo:parent ?albertKamehameha .
  ?albertKamehameha rdfs:label ""Albert Kamehameha""@en .

  # Find Leleiohoku I and his spouse
  ?leleiohokuI rdfs:label ""Leleiohoku I""@en .
  ?leleiohokuI dbo:spouse ?spouse .

  # Ensure the spouse's father is royalty
  ?spouse dbo:parent ?royalFather .
  ?royalFather rdf:type dbo:RoyalFamilyMember .

  # Find the child of this royal father
  ?royalFather dbo:child ?royalFatherChild .
}
```",5,6,6,3,3,3,3,71,0,0,1,0,0.0,0
715,40,val,"Give me the commander in Spanish Civil War and commander in the force, that is a military conflict, of the native of Morocco and leader of Ministry of the Air (Spain).",SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v1 <http://dbpedia.org/ontology/commander> ?v2 . <http://dbpedia.org/resource/Spanish_Civil_War> <http://dbpedia.org/ontology/commander> ?result . ?v2 <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Morocco> . <http://dbpedia.org/resource/Ministry_of_the_Air_(Spain)> <http://dbpedia.org/ontology/leader> ?result . ?v1 <http://dbpedia.org/ontology/commander> ?result . },"```sparql
SELECT ?spanishCivilWarCommander ?otherConflictCommander WHERE {
  # Find the leader of the Ministry of the Air (Spain)
  ?person dbo:positionHeld ?ministryPosition .
  ?ministryPosition rdfs:label ""Minister of Aeronautics""@en .
  
  # Ensure this person is native to Morocco
  ?person dbo:nationality dbc:Morocco .
  
  # Find the commander in the Spanish Civil War
  OPTIONAL {
    ?spanishCivilWar dbp:commander ?spanishCivilWarCommander .
    ?spanishCivilWar rdfs:label ""Spanish Civil War""@en .
  }
  
  # Find another military conflict involving this person as a commander
  OPTIONAL {
    ?otherConflict dbp:commander ?person .
    ?otherConflictCommander dbp:commander ?otherPerson .
    FILTER(?otherConflict != ?spanishCivilWar)
  }
}
```",5,6,6,3,3,3,3,71,0,0,1,0,0.0,0
102,17,val,"Give me the native of the residence, that is English and a settlement, of the resident, that is an athlete, of Dewsbury and manager of Sheffield United W.F.C..",SELECT ?result WHERE { ?v0 <http://dbpedia.org/ontology/residence> <http://dbpedia.org/resource/Dewsbury> . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Athlete>. ?v0 <http://dbpedia.org/property/residence> ?v3 . ?result <http://dbpedia.org/ontology/birthPlace> ?v3 . <http://dbpedia.org/resource/Sheffield_United_W.F.C.> <http://dbpedia.org/ontology/manager> ?result . ?v3 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/United_Kingdom>. },"```sparql
SELECT ?native WHERE {
  # Find the athlete/manager who is a resident of Dewsbury and manager of Sheffield United W.F.C.
  ?person dbo:residence _:dewsbury .
  ?person dbo:managerOf <http://dbpedia.org/resource/Sheffield_United_Women_Football_Club> .
  
  # Ensure the residence is in England
  _:dewsbury dbo:country <http://dbpedia.org/resource/England> .

  # Find the place of residence and ensure it's a settlement
  ?person dbo:residence ?residence .
  ?residence rdf:type dbo:Settlement .
  
  # Identify someone native to this place
  ?native dbo:placeOfBirth ?residence .
}
```",4,7,5,3,2,3,2,20,0,0,1,0,0.0,0
987,50,val,"Give me the birth place of the actor of the show, that is a film, with Emir Hadžihafizbegović and entity in the region, that is a country, of Central European Time.",SELECT ?result WHERE { ?v3 <http://dbpedia.org/ontology/birthPlace> ?result . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Film>. ?v0 <http://dbpedia.org/property/timeZone> <http://dbpedia.org/resource/Central_European_Time> . ?v1 <http://dbpedia.org/property/starring> ?v3 . ?v1 <http://dbpedia.org/ontology/starring> <http://dbpedia.org/resource/Emir_Hadžihafizbegović> . ?result <http://dbpedia.org/ontology/country> ?v0 . },"```sparql
SELECT ?actorBirthPlace WHERE {
  # Step 1: Identify films with Emir Hadžihafizbegović
  ?film dbo:actor ?emir .
  ?emir rdfs:label ""Emir Hadžihafizbegović""@en .

  # Step 2: Find other actors in the same film
  ?film dbo:actor ?otherActor .

  # Step 3: Check if these actors were born in a CET country
  ?otherActor dbo:nationality ?country .
  ?country dbo:timeZone ""Central European Time""@en .

  # Step 4: Retrieve the birthplace of such an actor
  ?otherActor dbo:birthPlace ?actorBirthPlace .
}
```",5,7,6,3,2,3,3,71,0,0,18,0,0.0,0
465,41,val,"Give me the spouse of the child, that is a royalty, of Ferdinand I, Holy Roman Emperor and successor of Renée of France and successor of the child of Alfonso I d'Este.","SELECT ?result WHERE { <http://dbpedia.org/resource/Ferdinand_I,_Holy_Roman_Emperor> <http://dbpedia.org/ontology/child> ?v4 . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v2 <http://dbpedia.org/ontology/successor> ?result . <http://dbpedia.org/resource/Renée_of_France> <http://dbpedia.org/ontology/successor> ?result . ?v2 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Alfonso_I_d'Este> . ?result <http://dbpedia.org/ontology/spouse> ?v4 . }","```sparql
SELECT ?spouse WHERE {
  # Ferdinand I's children who are royalty
  ?child dbo:parent dbc:Ferdinand_I,_Holy_Roman_Emperor .
  ?child rdf:type dbo:Monarch .

  # Renée of France's successor
  ?renée dbo:succ dbp:Renée_of_France .
  
  # Child of Alfonso I d'Este
  ?alfonsoChild dbo:parent dbc:Alfonso_I_d%27Este,_Duke_of_Ferrara .

  # Ensure the child is also successor to Renée and Alfonso's child
  FILTER (?child = ?renée && ?child = ?alfonsoChild)

  # Find spouse of this individual
  ?child dbo:spouse ?spouse .
}
```",5,6,6,2,3,3,3,71,0,0,1,0,0.0,0
987,47,val,"Give me the birth place of the actor of the show, that is a film, with Emir Hadžihafizbegović and birth place of the band, that is an artist and a musical artist, of Šako Polumenta.",SELECT ?result WHERE { ?v0 <http://dbpedia.org/property/starring> ?v3 . <http://dbpedia.org/resource/Šako_Polumenta> <http://dbpedia.org/ontology/associatedMusicalArtist> ?v1 . ?v3 <http://dbpedia.org/ontology/birthPlace> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?v0 <http://dbpedia.org/ontology/starring> <http://dbpedia.org/resource/Emir_Hadžihafizbegović> . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Film>. ?v1 <http://dbpedia.org/ontology/birthPlace> ?result . },"```sparql
# Query to find the actor's birth place from a film featuring Emir Hadžihafizbegović
SELECT ?actor ?birthPlace WHERE {
  ?film dbo:starringEmirHadžihafizbegović true .
  ?film dbo:castMember ?actor .
  ?actor dbo:birthPlace ?birthPlace .
}

# Query to find the band's birth place associated with Šako Polumenta
SELECT ?band ?birthPlace WHERE {
  ?band dbo:member Šako_Polumenta ;
        a dbo:Band .
  ?band dbo:originLocation ?birthPlace .
}
```",5,8,6,3,2,3,3,71,0,0,4,0,0.0,0
839,45,val,"Give me the band of Kevin Russell (musician) and band of the band, that is a musical artist, of the professional in Musician and band of Peter Schorowsky.","SELECT ?result WHERE { ?v0 <http://dbpedia.org/property/occupation> ""Musician""@en . ?v0 <http://dbpedia.org/ontology/associatedMusicalArtist> ?v1 . ?result <http://dbpedia.org/ontology/bandMember> <http://dbpedia.org/resource/Peter_Schorowsky> . ?result <http://dbpedia.org/ontology/bandMember> ?v1 . <http://dbpedia.org/resource/Kevin_Russell_(musician)> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. }","```sparql
SELECT ?kevinRussellBand ?bandOfKevinRussellBand ?peterSchorowskyBand ?bandOfPeterSchorowskyBand WHERE {
  # Find Kevin Russell and his band
  ?kevinRussell dbo:associatedBand ?kevinRussellBand .
  ?kevinRussell rdfs:label ""Kevin Russell (musician)""@en .

  # Check if Kevin Russell's band is part of another musical entity
  OPTIONAL { 
    ?kevinRussellBand dbo:partOf ?bandOfKevinRussellBand .
    ?bandOfKevinRussellBand a dbo:MusicalArtist .
  }

  # Find Peter Schorowsky and his band
  ?peterSchorowsky dbo:associatedBand ?peterSchorowskyBand .
  ?peterSchorowsky rdfs:label ""Peter Schorowsky""@en .

  # Check if Peter Schorowsky's band is part of another musical entity
  OPTIONAL { 
    ?peterSchorowskyBand dbo:partOf ?bandOfPeterSchorowskyBand .
    ?bandOfPeterSchorowskyBand a dbo:MusicalArtist .
  }
}
```",5,6,6,3,3,3,3,71,1,0,0,1.0,1.0,1.0
874,17,val,"Give me the band of Manfred Mann (musician) and band of the band member of the band, that is an organisation, of Mark Read (singer).",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/bandMember> <http://dbpedia.org/resource/Manfred_Mann_(musician)> . ?v0 <http://dbpedia.org/ontology/bandMember> <http://dbpedia.org/resource/Mark_Read_(singer)> . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?v3 <http://dbpedia.org/ontology/associatedMusicalArtist> ?v0 . ?result <http://dbpedia.org/ontology/bandMember> ?v3 . },"```sparql
SELECT ?manfredMannBand ?memberBand WHERE {
  # Find the band associated with Manfred Mann
  ?manfredMann dbo:musicalArtist ?manfredMannBand .
  ?manfredMann rdfs:label ""Manfred Mann""@en .

  # Find Mark Read's band (Westlife)
  ?markRead dbo:musicalArtist ?westlife .
  ?markRead rdfs:label ""Mark Read""@en .
  
  # Find members of Westlife
  ?westlife dbo:member ?member .

  # Find bands associated with these members that are organizations
  OPTIONAL {
    ?member dbo:musicalArtist ?memberBand .
    FILTER (regex(str(?memberBand), ""Organization"", ""i""))
  }
}
```",4,5,5,3,2,3,2,20,0,0,1,0,0.0,0
935,16,val,Give me the death place of the awardee of Sitara-i-Imtiaz and headquarter of the office of Sanaullah Khan Zehri.,SELECT ?result WHERE { ?v3 <http://dbpedia.org/ontology/location> ?result . ?v2 <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/Sitara-i-Imtiaz> . ?v2 <http://dbpedia.org/ontology/deathPlace> ?result . <http://dbpedia.org/resource/Sanaullah_Khan_Zehri> <http://dbpedia.org/property/office> ?v3 . },"```sparql
# Query to find the death place of an awardee of Sitara-i-Imtiaz
SELECT ?deathPlace WHERE {
  ?person dbo:award ""Sitara-i-Imtiaz"" .
  ?person dbo:deathPlace ?deathPlace .
}

# Query to find the headquarter of Sanaullah Khan Zehri's office
SELECT ?headquarters WHERE {
  ?zehri foaf:name ""Sanaullah Khan Zehri""@en .
  ?zehri dbo:officeLocation ?headquarters .
}
```",4,4,5,2,2,3,2,20,0,0,1,0,0.0,0
839,43,val,"Give me the band of Matthias Röhr and band of the member of the band, that is a band and a group, of Peter Schorowsky and band of Kevin Russell (musician).",SELECT ?result WHERE { <http://dbpedia.org/resource/Peter_Schorowsky> <http://dbpedia.org/ontology/associatedMusicalArtist> ?v0 . ?v0 <http://dbpedia.org/ontology/bandMember> ?v4 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Group>. <http://dbpedia.org/resource/Kevin_Russell_(musician)> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?result <http://dbpedia.org/ontology/bandMember> <http://dbpedia.org/resource/Matthias_Röhr> . ?result <http://dbpedia.org/ontology/bandMember> ?v4 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Band>. },"```sparql
SELECT ?matthiasBand ?peterMemberBand ?kevinBand WHERE {
  # Find the band associated with Matthias Röhr
  ?matthiasBand dbo:member ?roehr .
  ?roehr rdfs:label ""Matthias Röhr""@en .

  # Find a member of Peter Schorowsky's band that is also part of another band or group
  ?peterBand dbo:member ?schorowsky .
  ?schorowsky rdfs:label ""Peter Schorowsky""@en .
  ?peterMemberBand dbo:member ?schorowskyMember .
  ?schorowskyMember rdfs:label ?memberLabel .

  # Ensure the member is part of another band or group
  ?otherBand dbo:member ?schorowskyMember .
  
  # Find Kevin Russell's band
  ?kevinBand dbo:member ?russell .
  ?russell rdfs:label ""Kevin Russell (musician)""@en .

}
```",5,7,6,3,3,3,3,71,0,0,1,0,0.0,0
987,49,val,"Give me the entity in the region, that is a country, of the time zone, that is a sports event, in Canicosa de la Sierra and birth place of the band, that is an artist and a musical artist, of Šako Polumenta.",SELECT ?result WHERE { ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?result <http://dbpedia.org/ontology/country> ?v0 . ?v2 <http://dbpedia.org/ontology/birthPlace> ?result . <http://dbpedia.org/resource/Canicosa_de_la_Sierra> <http://dbpedia.org/ontology/timeZone> ?v4 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. <http://dbpedia.org/resource/Šako_Polumenta> <http://dbpedia.org/ontology/associatedMusicalArtist> ?v2 . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsEvent>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. ?v0 <http://dbpedia.org/property/timeZone> ?v4 . },"```sparql
SELECT ?country WHERE {
  # Step 1: Get Canicosa de la Sierra's time zone
  ?canicosa dbo:timeZone ?timezone .
  ?canicosa rdfs:label ""Canicosa de la Sierra""@en .

  # Step 2: Find sports events in the identified time zone
  ?event dbo:timeZone ?timezone ;
         a dbo:SportsEvent .

  # Step 3: Determine the region and country of the time zone
  ?region dbo:hasTimeZone ?timezone .
  ?country dbo:partOfRegion ?region ;
           a dbo:Country .

  # Step 4: Identify Šako Polumenta's band
  ?sako dbo:memberBand ?band .
  ?sako rdfs:label ""Šako Polumenta""@en .
  ?band a dbo:Artist, dbo:MusicalArtist .

  # Step 5: Find the birth place of the band
  OPTIONAL {
    ?band dbo:birthPlace ?place .
  }
}
```",5,9,6,3,2,3,3,71,0,0,2,0,0.0,0
216,40,val,"Give me the player in Mario Ivanković and player in the coach of the reference, that is an organisation and a soccer club, to Croatia U21 and team of Ognjen Vukojević.","SELECT ?result WHERE { ?v2 <http://dbpedia.org/ontology/coach> ?v1 . ?v1 <http://dbpedia.org/ontology/team> ?result . <http://dbpedia.org/resource/Mario_Ivanković> <http://dbpedia.org/ontology/team> ?result . ?v2 <http://xmlns.com/foaf/0.1/name> ""Croatia U21""@en . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerClub>. ?result <http://dbpedia.org/ontology/coach> <http://dbpedia.org/resource/Ognjen_Vukojević> . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. }","```sparql
SELECT ?playerClub ?coachTeam WHERE {
  # Find Mario Ivanković's playing club
  ?mario dbo:playsFor ?playerClub .
  ?mario rdfs:label ""Mario Ivanković""@en .

  # Ensure the player's club is a soccer club and an organization
  ?playerClub rdf:type dbp:SoccerClub ;
              dbo:organizationType dbp:SportsOrganization .

  # Find Ognjen Vukojević's coaching team
  ?ognjen dbo:coachFor ?coachTeam .
  ?ognjen rdfs:label ""Ognjen Vukojević""@en .

  # Ensure the coach's team is a soccer club and an organization
  ?coachTeam rdf:type dbp:SoccerClub ;
             dbo:organizationType dbp:SportsOrganization .

  # Link both clubs/teams to Croatia U21 through the Croatian Football Federation
  ?playerClub dbo:memberOf dbpedia:Croatian_Football_Youth_Association .
  ?coachTeam dbo:memberOf dbpedia:Croatian_Football_Youth_Association .
}
```",5,7,6,3,3,3,3,71,0,0,1,0,0.0,0
433,50,val,"Give me the professional in the profession of Bob Marley and associated musical artist of the associated musical artist, that is an artist and a musical artist, of the associated musical artist, that is a musical artist and an artist, of Ornette Coleman.",SELECT ?result WHERE { ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. <http://dbpedia.org/resource/Bob_Marley> <http://dbpedia.org/property/occupation> ?v3 . ?result <http://dbpedia.org/property/occupation> ?v3 . ?v0 <http://dbpedia.org/ontology/associatedMusicalArtist> ?v4 . ?v4 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. <http://dbpedia.org/resource/Ornette_Coleman> <http://dbpedia.org/ontology/associatedMusicalArtist> ?v0 . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. },"```sparql
SELECT ?finalArtist WHERE {
  # Step 1: Find Bob Marley's profession
  ?bobMarley dbo:profession ?marleyProf .
  ?bobMarley rdfs:label ""Bob Marley""@en .

  # Step 2: Find an associated musical artist of Bob Marley who is both an artist and a musical artist
  OPTIONAL {
    ?marleyProf dbo:associatedMusicalArtist ?artist1 .
    ?artist1 rdf:type dbo:Musician .
    ?artist1 dbo:profession ?prof1 .
    FILTER (regex(str(?prof1), ""artist"", ""i"") && regex(str(?prof1), ""musical artist"", ""i""))
  }

  # Step 3: Find another associated musical artist of the first artist who is both a musical artist and an artist
  OPTIONAL {
    ?artist1 dbo:associatedMusicalArtist ?artist2 .
    ?artist2 rdf:type dbo:Musician .
    ?artist2 dbo:profession ?prof2 .
    FILTER (regex(str(?prof2",5,9,6,3,2,3,3,71,0,0,44,0,0.0,0
267,17,val,Give me the person born on the birth date of the reference to Dan Cathy and coach of Iran national football team.,"SELECT ?result WHERE { ?v0 <http://xmlns.com/foaf/0.1/name> ""Dan Cathy""@en . ?result <http://dbpedia.org/ontology/birthDate> ?v3 . ?v0 <http://dbpedia.org/ontology/birthDate> ?v3 . <http://dbpedia.org/resource/Iran_national_football_team> <http://dbpedia.org/ontology/coach> ?result . }","```sparql
SELECT ?person WHERE {
  # Find Dan Cathy and his birth date
  ?danCathy dbo:birthDate ?birthDate .
  ?danCathy rdfs:label ""Dan Cathy""@en .

  # Find a person born on the same date as Dan Cathy
  ?person dbo:birthDate ?sameBirthDate .
  
  # Ensure the person is not Dan Cathy himself
  FILTER (?person != ?danCathy)

  # Check if this person has been a coach of the Iran national football team
  OPTIONAL {
    ?person dbo:coachOfNationalTeam ?team .
    ?team rdfs:label ""Iran national football team""@en .
  }

  # Ensure that the birth dates match
  FILTER (?birthDate = ?sameBirthDate)
}
```",4,4,5,3,2,3,2,20,1,33,0,0.029411764705882353,1.0,0.05714285714285715
892,42,val,"Give me the entity in the profession of Henri Crolla and entity in the administration, that is Italian and a region and a settlement and an administrative region, of Democratic Party (Italy) and landmark at elevation of 58.","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/country> ?v1 . <http://dbpedia.org/resource/Henri_Crolla> <http://dbpedia.org/property/occupation> ?v1 . ?v0 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Italy>. ?v0 <http://dbpedia.org/property/leaderParty> <http://dbpedia.org/resource/Democratic_Party_(Italy)> . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/AdministrativeRegion>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Region>. ?result <http://dbpedia.org/ontology/province> ?v0 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. ?result <http://dbpedia.org/ontology/elevation> ""58""^^<http://www.w3.org/2001/XMLSchema#integer> . }","```sparql
SELECT ?profession ?region ?landmark WHERE {
  # Henri Crolla's profession
  ?henriCrolla dbo:occupation ?profession .
  ?henriCrolla rdfs:label ""Henri Crolla""@en .

  # Italian entity that is a region, settlement, and administrative region for the Democratic Party (Italy)
  ?region rdf:type dbo:Region ;
          dbo:settlement ?settlement ;
          dbo:administrativeRegionOf ?party .
  ?settlement dbo:country dbc:Italy .
  ?party rdfs:label ""Democratic Party (Italy)""@en .

  # Landmark at elevation of 58 meters
  ?landmark dbo:elevation ""58""^^xsd:integer ;
            rdf:type dbo:Landmark .
}
```",5,9,6,2,3,3,3,71,0,0,2,0,0.0,0
926,46,val,Give me the successor of the child of Ahmed III and father of the father of the spouse of Neşerek Kadın.,SELECT ?result WHERE { ?v3 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Ahmed_III> . <http://dbpedia.org/resource/Neşerek_Kadın> <http://dbpedia.org/ontology/spouse> ?v2 . ?v3 <http://dbpedia.org/ontology/successor> ?result . ?v0 <http://dbpedia.org/property/father> ?result . ?v2 <http://dbpedia.org/property/father> ?v0 . },"```sparql
SELECT ?successor WHERE {
  # Step 1: Find a child of Ahmed III
  ?child dbo:parent ?ahmedIII .
  ?ahmedIII rdfs:label ""Ahmed III""@en .

  # Step 2: Identify the father of this child (should be Ahmed III)
  ?fatherOfChild dbo:parent ?child .
  
  # Step 3: Find Neşerek Kadın's spouse
  ?neserekKadin dbo:spouse ?spouse .
  ?neserekKadin rdfs:label ""Neşerek Kadın""@en .

  # Step 4: Identify the father of this spouse
  ?fatherOfSpouse dbo:parent ?spouse .

  # Step 5: Find the successor of Ahmed III's child
  OPTIONAL {
    ?child dbo:succ ?successor .
  }
}
```",5,5,6,3,2,3,3,71,0,0,1,0,0.0,0
443,20,val,"Give me the birthplace of Carl Larsson and landmark at elevation of 28 and birthplace of the person born, that is a musical artist and an artist, on 1949-11-20.","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/elevation> ""28""^^<http://www.w3.org/2001/XMLSchema#integer> . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. <http://dbpedia.org/resource/Carl_Larsson> <http://dbpedia.org/ontology/birthPlace> ?result . ?v3 <http://dbpedia.org/ontology/birthPlace> ?result . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. ?v3 <http://dbpedia.org/ontology/birthDate> ""1949-11-20""^^<http://www.w3.org/2001/XMLSchema#date> . }","```sparql
SELECT ?carlLarssonBirthplace ?landmark ?artistBirthplace WHERE {
  # Step 1: Find Carl Larsson's birthplace
  ?carlLarsson dbo:birthPlace ?carlLarssonBirthplace .
  ?carlLarsson rdfs:label ""Carl Larsson""@en .

  # Step 2: Find a landmark at elevation of 28 (assuming meters)
  ?landmark dbo:elevation ?elevation .
  FILTER (?elevation = 28) .

  # Step 3: Identify the person born on November 20, 1949, who is both a musical artist and an artist
  ?person dbo:birthDate ""1949-11-20""^^xsd:date ;
          dbo:occupation ?musicalArtist ;
          dbo:occupation ?artist .
  FILTER (regex(str(?musicalArtist), ""Musical Artist"", ""i"") && regex(str(?artist), ""Artist"", ""i"")) .

  # Step 4: Find the birthplace of this person
  ?person dbo:birthPlace ?artistBirthplace .
}
```",4,6,5,2,3,2,3,28,0,0,1,0,0.0,0
216,41,val,"Give me the team of Ognjen Vukojević and player in the coach, that is a soccer player and a sports manager and a soccer manager, of Bosnia and Herzegovina national under-18 football team and player in the coach of Croatia national under-21 football team.",SELECT ?result WHERE { <http://dbpedia.org/resource/Bosnia_and_Herzegovina_national_under-18_football_team> <http://dbpedia.org/ontology/coach> ?v4 . ?result <http://dbpedia.org/ontology/coach> <http://dbpedia.org/resource/Ognjen_Vukojević> . ?v4 <http://dbpedia.org/ontology/team> ?result . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsManager>. <http://dbpedia.org/resource/Croatia_national_under-21_football_team> <http://dbpedia.org/ontology/coach> ?v2 . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerPlayer>. ?v2 <http://dbpedia.org/ontology/team> ?result . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerManager>. },"```sparql
SELECT ?team WHERE {
  # Ognjen Vukojević's coaching role
  ?vukojevic dbo:position ""coach""@en .
  ?vukojevic foaf:name ""Ognjen Vukojević"" .

  # Coach of Bosnia and Herzegovina national under-18 football team
  ?bhsoccerTeam dbo:manager ?vukojevic ;
                rdfs:label ""Bosnia and Herzegovina national under-18 football team""@en .
  
  # Ensure the coach is a soccer player, sports manager, and soccer manager
  ?vukojevic rdf:type dbp:SoccerPlayer ;
             rdf:type dbp:SportsManager ;
             rdf:type dbp:SoccerManager .

  # Player in Croatia national under-21 football team
  ?croatiaTeam dbo:player ?vukojevic ;
               rdfs:label ""Croatia national under-21 football team""@en .
}
```",5,8,6,2,3,3,3,71,0,0,1,0,0.0,0
826,44,val,"Give me the predecessor of the parent of Prince Friedrich of Hesse and by Rhine and spouse of Anna Magdalena Appel and successor of the child, that is a royalty, of Louis I, Grand Duke of Hesse.","SELECT ?result WHERE { <http://dbpedia.org/resource/Louis_I,_Grand_Duke_of_Hesse> <http://dbpedia.org/ontology/child> ?v4 . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?result <http://dbpedia.org/ontology/successor> ?v2 . ?v4 <http://dbpedia.org/ontology/successor> ?result . <http://dbpedia.org/resource/Anna_Magdalena_Appel> <http://dbpedia.org/ontology/spouse> ?result . <http://dbpedia.org/resource/Prince_Friedrich_of_Hesse_and_by_Rhine> <http://dbpedia.org/ontology/parent> ?v2 . }","```sparql
SELECT ?predecessor WHERE {
  # Step 1: Find the parent of Prince Friedrich of Hesse and by Rhine
  ?friedrich dbo:parent ?parent .
  ?friedrich rdfs:label ""Prince Friedrich of Hesse and by Rhine""@en .

  # Step 2: Ensure this parent's spouse is Anna Magdalena Appel
  ?parent dbo:spouse ?annaMagdalenaAppel .
  ?annaMagdalenaAppel rdfs:label ""Anna Magdalena Appel""@en .

  # Step 3: Find a child of Louis I, Grand Duke of Hesse who is royalty
  ?louisI dbo:child ?royalChild .
  ?louisI rdfs:label ""Louis I, Grand Duke of Hesse""@en .
  
  # Ensure the child is royalty (e.g., has a title or role indicating royalty)
  OPTIONAL { 
    ?royalChild dbo:title ?title .
    FILTER regex(str(?title), ""Prince|Princess|Duke|Duchess"", ""i"")
  }

  # Step 4: Find the successor of this royal child
  ?royalChild dbo:successor ?successor .

  # Step 5: Find the predecessor of the parent identified in step 1
  ?parent dbo:predecessor ?predecessor .
}
```",5,6,6,2,3,3,3,71,0,0,1,0,0.0,0
456,55,val,"Give me the professional in the alter ego of The Shadow and band of the band, that is a musical artist, of Dean Brody and spouse of the actor of Pacific Drive.",SELECT ?result WHERE { ?v2 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . <http://dbpedia.org/resource/Pacific_Drive> <http://dbpedia.org/property/starring> ?v3 . ?result <http://dbpedia.org/property/occupation> ?v5 . ?v3 <http://dbpedia.org/ontology/spouse> ?result . <http://dbpedia.org/resource/Dean_Brody> <http://dbpedia.org/ontology/associatedMusicalArtist> ?v2 . <http://dbpedia.org/resource/The_Shadow> <http://dbpedia.org/property/alterEgo> ?v5 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. },"```sparql
SELECT ?professional WHERE {
  # Find The Shadow's alter ego
  ?shadow dbo:alterEgo ?alterEgo .
  ?shadow rdfs:label ""The Shadow""@en .

  # Find Dean Brody's band and a musical artist in it
  OPTIONAL {
    ?deanBrody dbo:bandMember ?bandMember .
    ?deanBrody rdfs:label ""Dean Brody""@en .
    ?band dbr:High Valley ?bandMember .
    FILTER (regex(str(?bandMember), ""Cole Swindell"", ""i""))
  }

  # Find the actor from Pacific Drive and their spouse
  OPTIONAL {
    ?pacificDriveActor dbo:actor ?actor .
    ?pacificDriveActor rdfs:label ""Pacific Drive""@en .
    ?actor dbo:spouse ?spouse .
    FILTER (regex(str(?actor), ""Dylan Bruce"", ""i""))
  }

  # Connect the entities
  VALUES ?professional { 
    dbr:Lamont_Cranston 
    dbr:Cole_Swindell 
    ?spouse
  }
}
```",6,7,7,2,3,3,3,71,0,0,1,0,0.0,0
507,42,val,Give me the spouse of the person born as Anne Voase Coates and director of Entertaining Mr Sloane (film) and professional in the profession of Guy Ferland.,"SELECT ?result WHERE { <http://dbpedia.org/resource/Guy_Ferland> <http://dbpedia.org/property/occupation> ?v1 . ?result <http://dbpedia.org/ontology/spouse> ?v2 . ?v2 <http://dbpedia.org/property/birthName> ""Anne Voase Coates""@en . ?result <http://dbpedia.org/property/occupation> ?v1 . <http://dbpedia.org/resource/Entertaining_Mr_Sloane_(film)> <http://dbpedia.org/ontology/director> ?result . }","```sparql
SELECT DISTINCT ?spouse WHERE {
  # Find spouse of Anne Voase Coates
  OPTIONAL {
    ?anneVoaseCoates dbo:spouse ?spouse .
    ?anneVoaseCoates rdfs:label ""Anne Voase Coates""@en .
  }

  # Find director of Entertaining Mr Sloane and their spouse
  OPTIONAL {
    ?film dbo:director ?director .
    ?film rdfs:label ""Entertaining Mr Sloane""@en .
    ?director dbo:spouse ?spouse .
  }
  
  # Confirm Guy Ferland's profession (not directly needed for the query but ensures context)
  OPTIONAL {
    ?guyFerland rdf:type dbo:FilmDirector .
    ?guyFerland rdfs:label ""Guy Ferland""@en .
  }
}
```",5,5,6,2,3,3,3,71,0,0,1,0,0.0,0
102,16,val,"Give me the manager of the player in Ellie Roebuck and native of the residence, that is English and a settlement, of Peter Finbow.",SELECT ?result WHERE { <http://dbpedia.org/resource/Ellie_Roebuck> <http://dbpedia.org/ontology/team> ?v2 . ?v3 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/United_Kingdom>. ?result <http://dbpedia.org/ontology/birthPlace> ?v3 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. <http://dbpedia.org/resource/Peter_Finbow> <http://dbpedia.org/property/residence> ?v3 . ?v2 <http://dbpedia.org/ontology/manager> ?result . },"```sparql
SELECT ?manager ?native WHERE {
  # Find Ellie Roebuck and her manager
  ?roebuck dbo:manager ?manager .
  ?roebuck rdfs:label ""Ellie Roebuck""@en .

  # Find Peter Finbow's residence that is an English settlement
  ?finbow dbo:residence ?residence .
  ?finbow rdfs:label ""Peter Finbow""@en .
  
  # Ensure the residence is a settlement and located in England
  ?residence rdf:type dbo:Settlement .
  ?residence dbo:country dbr:England .

  # Find native of this English settlement
  ?native dbo:nativePlace ?residence .
}
```",4,6,5,2,2,3,2,20,0,0,1,0,0.0,0
826,43,val,"Give me the spouse of Anna Magdalena Appel and successor of the child, that is a royalty, of the reference, that is a royalty, to Louis I and predecessor of Louis IV, Grand Duke of Hesse.","SELECT ?result WHERE { ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v0 <http://xmlns.com/foaf/0.1/name> ""Louis I""@en . ?v0 <http://dbpedia.org/ontology/child> ?v4 . ?v4 <http://dbpedia.org/ontology/successor> ?result . <http://dbpedia.org/resource/Anna_Magdalena_Appel> <http://dbpedia.org/ontology/spouse> ?result . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?result <http://dbpedia.org/ontology/successor> <http://dbpedia.org/resource/Louis_IV,_Grand_Duke_of_Hesse> . }","```sparql
SELECT ?spouse ?successor WHERE {
  # Anna Magdalena Bach and her spouse
  ?annaMagdalena rdfs:label ""Anna Magdalena Bach""@en .
  ?annaMagdalena dbo:spouse ?spouse .

  # Louis I of Hesse and his royal child
  ?louisI rdfs:label ""Louis I, Grand Duke of Hesse""@en .
  ?child dbo:parent ?louisI ;
         rdf:type dbo:RoyalFamilyMember .

  # Successor of the royal child
  ?successor dbo:predecessor ?child .

  # Predecessor of Louis IV, Grand Duke of Hesse
  OPTIONAL {
    ?predecessor dbo:succesor ""Louis IV, Grand Duke of Hesse""@en .
  }
}
```",5,7,6,3,3,3,3,71,0,0,1,0,0.0,0
36,19,val,"Give me the person born in 1971 and person born as Ayo Makun and actor of the claim to fame, that is a film, of Lepacious Bose.","SELECT ?result WHERE { ?v3 <http://dbpedia.org/ontology/starring> ?result . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Film>. ?result <http://dbpedia.org/ontology/birthYear> ""1971""^^<http://www.w3.org/2001/XMLSchema#gYear> . <http://dbpedia.org/resource/Lepacious_Bose> <http://dbpedia.org/ontology/knownFor> ?v3 . ?result <http://dbpedia.org/property/birthName> ""Ayo Makun""@en . }","```sparql
SELECT ?person1971 ?ayoMakun ?actor WHERE {
  # Find person born in 1971
  ?person1971 dbo:birthYear ""1971""^^xsd:gYear .
  
  # Find Ayo Makun by name
  ?ayoMakun rdfs:label ""Ayo Makun""@en .

  # Find Lepacious Bose's claim to fame and the actor associated with it
  ?lepaciousBose dbo:claimToFame ?film .
  ?film a dbo:Film .
  ?actor dbo:starring ?film .
  ?lepaciousBose rdfs:label ""Lepacious Bose""@en .
}
```",4,5,5,2,3,2,3,28,0,0,1,0,0.0,0
192,16,val,"Give me the child of the child of Stephen V of Hungary and spouse of the spouse, that is a royalty, of Charles Martel of Anjou.",SELECT ?result WHERE { ?v2 <http://dbpedia.org/ontology/spouse> ?result . ?v3 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Stephen_V_of_Hungary> . ?v2 <http://dbpedia.org/ontology/spouse> <http://dbpedia.org/resource/Charles_Martel_of_Anjou> . ?result <http://dbpedia.org/ontology/parent> ?v3 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. },"```sparql
SELECT ?grandchild ?spouseOfSpouse WHERE {
  # Find Stephen V of Hungary and his child
  ?stephenV dbo:parent ?child .
  ?stephenV rdfs:label ""Stephen V of Hungary""@en .

  # Find the grandchild (child of the child)
  ?child dbo:parent ?grandchild .

  # Find spouse of Charles Martel of Anjou who is royalty
  OPTIONAL {
    ?charlesMartel dbo:spouse ?royalSpouse .
    ?charlesMartel rdfs:label ""Charles Martel of Anjou""@en .
    FILTER (regex(str(?royalSpouse), ""royalty"", ""i""))
  }

  # Find spouse of the royal spouse
  OPTIONAL {
    ?royalSpouse dbo:spouse ?spouseOfSpouse .
    FILTER (regex(str(?royalSpouse), ""royalty"", ""i""))
  }
}
```",4,5,5,2,2,3,2,20,0,4,1,0.0,0.0,0
456,41,val,Give me the spouse of the actor of Pacific Drive and professional in the alter ego of The Shadow and band of Alan Doyle.,SELECT ?result WHERE { <http://dbpedia.org/resource/The_Shadow> <http://dbpedia.org/property/alterEgo> ?v4 . <http://dbpedia.org/resource/Alan_Doyle> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v2 <http://dbpedia.org/ontology/spouse> ?result . ?result <http://dbpedia.org/property/occupation> ?v4 . <http://dbpedia.org/resource/Pacific_Drive> <http://dbpedia.org/property/starring> ?v2 . },"```sparql
SELECT DISTINCT ?spouse WHERE {
  # Actor of Pacific Drive
  ?actor dbo:film ""Pacific Drive""@en .
  ?actor dbo:spouse ?spouse1 .

  # Professional in the alter ego of The Shadow
  ?shadowActor dbo:character ""The Shadow""@en .
  ?shadowActor dbo:spouse ?spouse2 .

  # Band of Alan Doyle
  ?band dbo:member ?alanDoyle .
  ?alanDoyle rdfs:label ""Alan Doyle""@en .
  ?alanDoyle dbo:spouse ?spouse3 .

  # Find common spouse or link between them
  FILTER (?spouse1 = ?spouse2 || ?spouse1 = ?spouse3 || ?spouse2 = ?spouse3)
}
```",5,5,6,2,3,3,3,71,0,0,1,0,0.0,0
417,43,val,"Give me the child of the father of the leader, that is a royalty, of Colony of Greenland and spouse of Princess Caroline-Mathilde of Denmark and child of Alexandrine of Mecklenburg-Schwerin.",SELECT ?result WHERE { ?v0 <http://dbpedia.org/property/father> ?v4 . <http://dbpedia.org/resource/Colony_of_Greenland> <http://dbpedia.org/property/leader> ?v0 . ?result <http://dbpedia.org/ontology/parent> <http://dbpedia.org/resource/Alexandrine_of_Mecklenburg-Schwerin> . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?result <http://dbpedia.org/property/father> ?v4 . ?result <http://dbpedia.org/ontology/spouse> <http://dbpedia.org/resource/Princess_Caroline-Mathilde_of_Denmark> . },"```sparql
SELECT ?individual WHERE {
  # Find the leader of Colony of Greenland and his father
  ?leader dbo:country ?greenland .
  ?leader dbo:parent ?father .
  ?greenland rdfs:label ""Colony of Greenland""@en .

  # Identify the spouse of Princess Caroline-Mathilde of Denmark
  ?princess dbo:spouse ?individual .
  ?princess rdfs:label ""Princess Caroline-Mathilde of Denmark""@en .

  # Ensure the individual is a child of Alexandrine of Mecklenburg-Schwerin
  ?alexandrine dbo:child ?individual .
  ?alexandrine rdfs:label ""Alexandrine of Mecklenburg-Schwerin""@en .

  # Link all conditions together
  FILTER (?father = ?leaderParent)
}
```",5,6,6,3,3,3,3,71,0,0,1,0,0.0,0
456,52,val,"Give me the professional in the alter ego of The Shadow and band of Alan Doyle and spouse of the actor of the movie, that is a work and a television show, with Ross Newton.",SELECT ?result WHERE { ?result <http://dbpedia.org/property/occupation> ?v5 . ?v3 <http://dbpedia.org/property/starring> <http://dbpedia.org/resource/Ross_Newton> . <http://dbpedia.org/resource/The_Shadow> <http://dbpedia.org/property/alterEgo> ?v5 . <http://dbpedia.org/resource/Alan_Doyle> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/TelevisionShow>. ?v3 <http://dbpedia.org/property/starring> ?v2 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?v2 <http://dbpedia.org/ontology/spouse> ?result . },"```sparql
SELECT ?alterEgo ?band ?spouse WHERE {
  # Find The Shadow's alter ego
  ?shadow dbo:alterEgo ?alterEgo .
  ?shadow rdfs:label ""The Shadow""@en .

  # Find Alan Doyle's band
  ?doyle dbo:memberOfBand ?band .
  ?doyle rdfs:label ""Alan Doyle""@en .

  # Find Ross Newton's movie and TV show roles
  OPTIONAL {
    ?movie dbo:starring ?rossNewton .
    ?tvShow dbo:starring ?rossNewton .
    ?rossNewton rdfs:label ""Ross Newton""@en .
    
    # Ensure the works are both a movie and a television show
    FILTER EXISTS { ?movie rdf:type dbo:Film }
    FILTER EXISTS { ?tvShow rdf:type dbo:TelevisionSeries }
  }

  # Find the spouse of the actor from these works
  OPTIONAL {
    ?actor dbo:starring ?movie .
    ?actor dbo:starring ?tvShow .
    ?actor dbo:spouse ?spouse .
  }
}
```",6,8,7,3,3,3,3,71,0,0,1,0,0.0,0
579,16,val,"Give me the person born as the birth name of Jane Percy, Duchess of Northumberland and native of the residence, that is English and a settlement, of Alan Clyne.","SELECT ?result WHERE { ?result <http://dbpedia.org/property/birthName> ?v3 . <http://dbpedia.org/resource/Alan_Clyne> <http://dbpedia.org/property/residence> ?v2 . ?v2 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/United_Kingdom>. <http://dbpedia.org/resource/Jane_Percy,_Duchess_of_Northumberland> <http://dbpedia.org/property/birthName> ?v3 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. ?result <http://dbpedia.org/ontology/birthPlace> ?v2 . }","```sparql
SELECT ?person WHERE {
  # Get the birth name of Jane Percy, Duchess of Northumberland
  ?janePercy dbo:birthName ?birthName .
  ?janePercy rdfs:label ""Jane Percy, Duchess of Northumberland""@en .

  # Get Alan Clyne's residence (an English settlement)
  ?alanClyne dbo:nativePlace ?residence .
  ?alanClyne rdfs:label ""Alan Clyne""@en .
  ?residence rdf:type dbo:Settlement .
  ?residence dbo:country dbr:England .

  # Find a person with the same birth name and native place
  ?person dbo:birthName ?birthName .
  ?person dbo:nativePlace ?residence .
}
```",4,6,5,2,2,3,2,20,0,0,1,0,0.0,0
791,52,val,"Give me the spouse of the spouse, that is a royalty, of the reference to Emperor Takakura and predecessor of the child of Emperor Takakura and father of Emperor Go-Toba.","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/spouse> ?v2 . <http://dbpedia.org/resource/Emperor_Go-Toba> <http://dbpedia.org/property/father> ?result . ?result <http://dbpedia.org/ontology/successor> ?v5 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v3 <http://xmlns.com/foaf/0.1/name> ""Emperor Takakura""@en . ?v2 <http://dbpedia.org/ontology/spouse> ?v3 . ?v5 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Emperor_Takakura> . }","```sparql
SELECT ?spouseOfSpouse WHERE {
  # Find Emperor Takakura and his royal spouse
  ?takakura dbo:spouse ?royalSpouse .
  ?takakura rdfs:label ""Emperor Takakura""@en .
  
  # Ensure the spouse is royalty (Imperial Princess Shushi)
  FILTER (regex(str(?royalSpouse), ""Imperial Princess Shushi"", ""i""))
  
  # Find their child, Emperor Antoku
  ?takakura dbo:child ?antoku .
  ?royalSpouse dbo:child ?antoku .
  
  # Identify the predecessor of Emperor Antoku (Emperor Go-Toba's father)
  ?antoku dbo:predecessor ?goTobaFather .
  ?goTobaFather rdfs:label ""Taira no Kiyomori""@en .
  
  # Find the spouse of the royal spouse
  ?royalSpouse dbo:spouse ?spouseOfSpouse .
}
```",6,7,7,3,3,3,3,71,0,0,1,0,0.0,0
433,42,val,"Give me the associated musical artist of Bill Evans and associated musical artist of the person born, that is a musical artist and an artist, as Paul Laurence Dunbar Chambers Jr. and professional in the profession of Bob Marley.","SELECT ?result WHERE { <http://dbpedia.org/resource/Bill_Evans> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v2 <http://dbpedia.org/property/birthName> ""Paul Laurence Dunbar Chambers Jr.""@en . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. <http://dbpedia.org/resource/Bob_Marley> <http://dbpedia.org/property/occupation> ?v1 . ?v2 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?result <http://dbpedia.org/property/occupation> ?v1 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. }","```sparql
SELECT ?billEvansArtist ?chambersBornPerson ?marleyProfessionArtist WHERE {
  # Find associated musical artist of Bill Evans
  ?billEvans dbo:associatedMusicalArtist ?billEvansArtist .
  ?billEvans rdfs:label ""Bill Evans""@en .

  # Find person born who is a musical artist and an artist, related to Paul Laurence Dunbar Chambers Jr.
  ?chambers dbo:birthday ?birthDate .
  ?chambers rdfs:label ""Paul Chambers (musician)""@en .
  ?bornPerson dbo:birthday ?birthDate ;
              rdf:type dbo:MusicalArtist , dbo:Artist .

  # Find professional in the same field as Bob Marley
  ?marley dbo:profession ?marleyProfession .
  ?marley rdfs:label ""Bob Marley""@en .
  ?marleyProfessionArtist rdf:type ?marleyProfession .
}
```",5,7,6,2,3,3,3,71,0,0,1,0,0.0,0
926,43,val,Give me the successor of the child of the spouse of Şermi Kadın and child of Ahmed III and father of Mahmud II.,SELECT ?result WHERE { <http://dbpedia.org/resource/Ahmed_III> <http://dbpedia.org/ontology/child> ?result . ?v3 <http://dbpedia.org/property/father> ?v1 . ?v3 <http://dbpedia.org/ontology/successor> ?result . ?v1 <http://dbpedia.org/ontology/spouse> <http://dbpedia.org/resource/Şermi_Kadın> . <http://dbpedia.org/resource/Mahmud_II> <http://dbpedia.org/property/father> ?result . },"```sparql
SELECT ?successor WHERE {
  # Şermi Kadın and her spouse Mustafa III
  ?şermiKadin dbo:spouse ?mustafaIII .
  ?şermiKadin rdfs:label ""Şermi Kadın""@en .

  # Child of Mustafa III (Abdul Hamid I)
  ?abdulHamidI dbo:parent ?mustafaIII .
  ?abdulHamidI rdfs:label ""Abdul Hamid I""@en .

  # Ahmed III and his child Abdul Hamid I
  ?ahmedIII dbo:child ?abdulHamidI .
  ?ahmedIII rdfs:label ""Ahmed III""@en .

  # Mahmud II and his father Abdul Hamid I
  ?mahmudII dbo:parent ?abdulHamidI .
  ?mahmudII rdfs:label ""Mahmud II""@en .

  # Successor of Abdul Hamid I (Selim III)
  ?abdulHamidISuccession dbo:succeededBy ?successor .
  ?abdulHamidISuccession dbo:predecessor ?abdulHamidI .
}
```",5,5,6,3,3,3,3,71,0,0,1,0,0.0,0
158,17,val,"Give me the entity in France and party of the successor, that is a prime minister and an office holder and a politician, of the person deceased, that is an office holder and a politician, on 1945-09-15.","SELECT ?result WHERE { ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?result <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/France> . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v3 <http://dbpedia.org/ontology/party> ?result . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v0 <http://dbpedia.org/ontology/deathDate> ""1945-09-15""^^<http://www.w3.org/2001/XMLSchema#date> . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/PrimeMinister>. ?v0 <http://dbpedia.org/ontology/successor> ?v3 . }","```sparql
SELECT ?successorParty WHERE {
  # Identify the deceased person on 1945-09-15
  ?deceased dbo:deathDate ""1945-09-15""^^xsd:date ;
            a dbo:Politician, dbo:OfficeHolder .

  # Find the successor who is a prime minister and office holder in France
  ?successor dbo:predecessor ?deceased ;
             dbo:country dbr:France ;
             a dbo:PrimeMinister, dbo:OfficeHolder, dbo:Politician .

  # Get the political party of the successor
  ?successor dbo:party ?successorParty .
}
```",4,9,5,3,2,3,2,20,0,0,1,0,0.0,0
527,16,val,"Give me the author of the work, that is a work and a book, of Tom Baker and actor of the movie, that is a work and English and a television show, with Bernard Bresslaw.",SELECT ?result WHERE { ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Book>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?v2 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/United_Kingdom>. ?v2 <http://dbpedia.org/property/starring> <http://dbpedia.org/resource/Bernard_Bresslaw> . ?v3 <http://dbpedia.org/property/author> <http://dbpedia.org/resource/Tom_Baker> . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/TelevisionShow>. ?v2 <http://dbpedia.org/property/starring> ?result . ?v3 <http://dbpedia.org/property/author> ?result . },"```sparql
SELECT ?author WHERE {
  # Find the book authored by Tom Baker
  ?book dbo:author ?tomBaker .
  ?tomBaker rdfs:label ""Tom Baker""@en .
  ?book rdf:type dbo:Book .

  # Find the English TV show/movie featuring Bernard Bresslaw
  ?movie dbo:actor ?bernardBresslaw .
  ?bernardBresslaw rdfs:label ""Bernard Bresslaw""@en .
  ?movie rdf:type dbo:Film .
  ?movie dbo:language ?englishLanguage .
  ?englishLanguage rdfs:label ""English""@en .

  # Check if the movie is also a television show
  ?movie dbo:genre ?tvShowGenre .
  FILTER (regex(str(?tvShowGenre), ""Television series"", ""i""))

  # Find common author or actor between these works
  OPTIONAL {
    ?author dbo:work ?book .
    ?author dbo:work ?movie .
  }
}
```",4,9,5,2,2,3,2,20,0,0,1,0,0.0,0
465,44,val,"Give me the successor of the child, that is a royalty, of Anne of Brittany and successor of Ercole II d'Este, Duke of Ferrara and spouse of the child, that is a royalty, of Ferdinand I, Holy Roman Emperor.","SELECT ?result WHERE { <http://dbpedia.org/resource/Ferdinand_I,_Holy_Roman_Emperor> <http://dbpedia.org/ontology/child> ?v4 . <http://dbpedia.org/resource/Ercole_II_d'Este,_Duke_of_Ferrara> <http://dbpedia.org/ontology/successor> ?result . <http://dbpedia.org/resource/Anne_of_Brittany> <http://dbpedia.org/ontology/child> ?v2 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v2 <http://dbpedia.org/ontology/successor> ?result . ?result <http://dbpedia.org/ontology/spouse> ?v4 . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. }","```sparql
SELECT ?successor WHERE {
  # Anne of Brittany's child who is royalty
  ?anneChild dbo:parent dbc:Anne_of_Brittany .
  ?anneChild rdf:type dbo:Monarch .

  # Ercole II d'Este's successor
  ?ercoleSuccessor dbo:succeededBy ?ercoleII .
  ?ercoleII rdfs:label ""Ercole II d'Este, Duke of Ferrara""@en .

  # Ferdinand I's royal child
  ?ferdinandChild dbo:parent dbc:Ferdinand_I,_Holy_Roman_Emperor .
  ?ferdinandChild rdf:type dbo:Monarch .

  # Spouse of the two royals
  ?spouse dbo:spouse ?anneChild ;
          dbo:spouse ?ferdinandChild .

  # Successor of the spouse
  ?successor dbo:succeededBy ?spouse .
}
```",5,7,6,2,3,3,3,71,0,0,1,0,0.0,0
47,50,val,"Give me the office of the awardee of Padma Vibhushan and office of the awardee of the award, that is an award, of Mantu Ghosh.",SELECT ?result WHERE { ?v4 <http://dbpedia.org/property/awards> ?v0 . <http://dbpedia.org/resource/Mantu_Ghosh> <http://dbpedia.org/property/awards> ?v0 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Award>. ?v3 <http://dbpedia.org/property/office> ?result . ?v4 <http://dbpedia.org/property/office> ?result . ?v3 <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/Padma_Vibhushan> . },"```sparql
SELECT ?padmaVibhushanOffice ?awardOffice WHERE {
  # Find the office of awardees of Padma Vibhushan
  ?awardee dbo:recipient ?padmaVibhushan .
  ?padmaVibhushan rdfs:label ""Padma Vibhushan""@en .
  ?awardee dbo:office ?padmaVibhushanOffice .

  # Find awards associated with Mantu Ghosh
  OPTIONAL {
    ?ghoshAward dbo:creator ?mantuGhosh .
    ?mantuGhosh rdfs:label ""Mantu Ghosh""@en .
    
    # Find the office of awardees of those awards
    ?awardRecipient dbo:recipient ?ghoshAward .
    ?awardRecipient dbo:office ?awardOffice .
  }
}
```",5,6,6,3,2,3,3,71,0,0,1,0,0.0,0
124,43,val,"Give me the commander in Mahdist War and military force of the war, that is an event and a military conflict and a societal event, of the awardee of British South Africa Company Medal and military force of Battle of Atbara.",SELECT ?result WHERE { ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?v0 <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/British_South_Africa_Company_Medal> . <http://dbpedia.org/resource/Mahdist_War> <http://dbpedia.org/ontology/commander> ?result . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?result <http://dbpedia.org/ontology/battle> ?v4 . ?v0 <http://dbpedia.org/ontology/battle> ?v4 . ?result <http://dbpedia.org/ontology/battle> <http://dbpedia.org/resource/Battle_of_Atbara> . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. },"```sparql
SELECT ?commander ?militaryForce WHERE {
  # Find the commander in the Mahdist War
  ?mahdistWar dbo:commander ?commander .
  ?mahdistWar rdfs:label ""Mahdist War""@en .

  # Find military force involved in the Mahdist War
  ?mahdistWar dbo:militaryForce ?militaryForce1 .

  # Ensure the event is a war, military conflict, and societal event
  ?mahdistWar rdf:type dbp:MilitaryConflict .
  ?mahdistWar rdf:type dbp:SocietalEvent .

  # Find awardee of British South Africa Company Medal
  ?awardee dbo:award ""British South Africa Company Medal""@en .

  # Find military force involved in the Battle of Atbara
  ?battleOfAtbara dbo:militaryForce ?militaryForce2 .
  ?battleOfAtbara rdfs:label ""Battle of Atbara""@en .

  # Ensure the same military force is involved in both events
  FILTER (?militaryForce1 = ?militaryForce2)
}
```",5,8,6,3,3,3,3,71,0,0,1,0,0.0,0
933,43,val,Give me the reference to the birth name of the professional in Musician and band of The Ramong Sound and band of Mike Elliott (saxophonist).,SELECT ?result WHERE { <http://dbpedia.org/resource/Mike_Elliott_(saxophonist)> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v1 <http://dbpedia.org/property/birthName> ?v3 . <http://dbpedia.org/resource/The_Ramong_Sound> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?result <http://xmlns.com/foaf/0.1/name> ?v3 . ?v1 <http://dbpedia.org/property/occupation> <http://dbpedia.org/resource/Musician> . },"```sparql
SELECT ?birthName WHERE {
  # Find the birth name of a member of The Ramones
  OPTIONAL {
    ?ramone dbo:memberOf dbr:The_Ramones .
    ?ramone dbo:birthName ?birthName .
    FILTER (regex(str(?ramone), ""The Ramones"", ""i""))
  }
  
  # Find the birth name of Mike Elliott, saxophonist
  OPTIONAL {
    ?mikeElliott rdfs:label ""Mike Elliott (saxophonist)""@en .
    ?mikeElliott dbo:birthName ?birthName .
  }
}
```",5,5,6,3,3,3,3,71,0,0,1,0,0.0,0
453,7,val,"Give me the religion of the birth place, that is a country, of William Denning and religion of John Henry Newman.",SELECT ?result WHERE { <http://dbpedia.org/resource/John_Henry_Newman> <http://dbpedia.org/ontology/religion> ?result . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. <http://dbpedia.org/resource/William_Denning> <http://dbpedia.org/ontology/birthPlace> ?v2 . ?v2 <http://dbpedia.org/ontology/religion> ?result . },"```sparql
SELECT ?denningReligion ?newmanReligion WHERE {
  # Find William Denning's birth place and its religion
  ?denning dbo:birthPlace ?birthPlace .
  ?denning rdfs:label ""William Denning""@en .
  
  FILTER (isLiteral(?birthPlace) && regex(str(?birthPlace), ""^http://dbpedia.org/resource/.+""))
  
  OPTIONAL {
    ?country dbo:countryName ?birthPlace .
    ?country dbo:religion ?denningReligion .
  }
  
  # Find John Henry Newman's religion
  ?newman dbo:religion ?newmanReligion .
  ?newman rdfs:label ""John Henry Newman""@en .
}
```",3,4,4,2,2,2,2,9,0,0,1,0,0.0,0
582,47,val,"Give me the player in the father, that is an athlete and a soccer manager and a sports manager, of the child of Kazuaki Nagasawa and reference to the residence of Hirotaka Sugawara.",SELECT ?result WHERE { ?v0 <http://dbpedia.org/property/father> ?v4 . ?result <http://xmlns.com/foaf/0.1/name> ?v2 . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Athlete>. ?v0 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Kazuaki_Nagasawa> . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsManager>. <http://dbpedia.org/resource/Hirotaka_Sugawara> <http://dbpedia.org/property/residence> ?v2 . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerManager>. ?v4 <http://dbpedia.org/ontology/team> ?result . },"```sparql
SELECT ?father ?residence WHERE {
  # Find child of Kazuaki Nagasawa
  ?child dbo:parent ?kazuakiNagasawa .
  ?kazuakiNagasawa rdfs:label ""Kazuaki Nagasawa""@en .

  # Identify the father who is an athlete, soccer manager, and sports manager
  ?father dbo:child ?child .
  ?father dbo:sport ?athleteRole .
  ?father dbo:occupation ?soccerManagerRole .
  ?father dbo:occupation ?sportsManagerRole .
  
  FILTER (str(?athleteRole) = ""Athlete"" && str(?soccerManagerRole) = ""Soccer manager"" && str(?sportsManagerRole) = ""Sports manager"")

  # Retrieve the residence of Hirotaka Sugawara
  ?hirotakaSugawara dbo:residence ?residence .
  ?hirotakaSugawara rdfs:label ""Hirotaka Sugawara""@en .
}
```",5,8,6,3,2,3,3,71,0,0,1,0,0.0,0
445,47,val,"Give me the death place of the awardee of the establishment of 1820-03-10 and entity in the residence, that is a country, of Anna Sharkey.","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/location> ?v2 . ?v4 <http://dbpedia.org/ontology/deathPlace> ?result . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. ?v0 <http://dbpedia.org/ontology/foundingDate> ""1820-03-10""^^<http://www.w3.org/2001/XMLSchema#date> . <http://dbpedia.org/resource/Anna_Sharkey> <http://dbpedia.org/property/residence> ?v2 . ?v4 <http://dbpedia.org/property/awards> ?v0 . }","```sparql
SELECT ?deathPlace ?country WHERE {
  # Step 1: Identify the awardee of 1820-03-10
  ?entity dbo:dateEstablished ""1820-03-10""^^xsd:date .
  
  # Step 2: Determine the death place of this entity
  ?entity dbo:deathPlace ?deathPlace .

  # Step 3: Identify Anna Sharkey's residence country
  ?annaSharkey rdfs:label ""Anna Sharkey""@en .
  ?annaSharkey dbo:residence ?residence .
  
  # Ensure the residence is a country
  ?residence rdf:type dbo:Country .
  BIND(?residence AS ?country)
}
```",5,6,6,3,2,3,3,71,0,0,1,0,0.0,0
417,55,val,"Give me the spouse of the parent, that is a royalty, of Count Ingolf of Rosenborg and child of the child, that is a royalty, of Frederick Francis III, Grand Duke of Mecklenburg-Schwerin and child of the father of Frederick IX of Denmark.","SELECT ?result WHERE { ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v2 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Frederick_Francis_III,_Grand_Duke_of_Mecklenburg-Schwerin> . ?result <http://dbpedia.org/property/father> ?v5 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?result <http://dbpedia.org/ontology/parent> ?v2 . ?v3 <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Count_Ingolf_of_Rosenborg> . ?result <http://dbpedia.org/ontology/spouse> ?v3 . <http://dbpedia.org/resource/Frederick_IX_of_Denmark> <http://dbpedia.org/property/father> ?v5 . }","```sparql
SELECT ?commonEntity WHERE {
  # Count Ingolf of Rosenborg's parent who is royalty
  ?countIngolf dbo:parent ?royalParent .
  ?countIngolf rdfs:label ""Count Ingolf of Rosenborg""@en .

  # Spouse of the royal parent
  ?royalParent dbo:spouse ?spouseOfRoyalParent .

  # Frederick Francis III's child who is royalty
  ?frederickFrancisIII dbo:child ?royalChild .
  ?frederickFrancisIII rdfs:label ""Frederick Francis III, Grand Duke of Mecklenburg-Schwerin""@en .

  # Child of the royal child
  ?royalChild dbo:child ?childOfRoyalChild .

  # Frederick IX of Denmark's father
  ?frederickIX dbo:parent ?fatherOfFrederickIX .
  ?frederickIX rdfs:label ""Frederick IX of Denmark""@en .

  # Child of Frederick IX's father
  ?fatherOfFrederickIX dbo:child ?childOfFatherOfFrederickIX .

  # Find the common entity among these relationships
  FILTER (?spouseOfRoyalParent = ?childOfRoyalChild && ?childOfRoyalChild = ?childOfFatherOfFrederickIX)
  BIND(?spouseOfRoyalParent AS ?commonEntity)
}
```",6,8,7,2,3,3,3,71,1,0,0,1.0,1.0,1.0
417,46,val,"Give me the spouse of the parent, that is a royalty, of the child of Knud, Hereditary Prince of Denmark and child of the father of Frederick IX of Denmark.","SELECT ?result WHERE { ?v2 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Knud,_Hereditary_Prince_of_Denmark> . <http://dbpedia.org/resource/Frederick_IX_of_Denmark> <http://dbpedia.org/property/father> ?v4 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?result <http://dbpedia.org/ontology/spouse> ?v1 . ?v1 <http://dbpedia.org/ontology/child> ?v2 . ?result <http://dbpedia.org/property/father> ?v4 . }","```sparql
SELECT ?spouse WHERE {
  # Identify Knud, Hereditary Prince of Denmark
  ?knud rdfs:label ""Knud, Hereditary Prince of Denmark""@en .
  
  # Find a child of Knud
  ?child dbo:parent ?knud ;
         dbo:parent ?father .

  # Ensure the father is related to Frederick IX of Denmark
  ?frederick rdfs:label ""Frederick IX of Denmark""@en .
  ?father dbo:parent ?frederick .

  # Find the spouse of this parent who is royalty
  ?father dbo:spouse ?spouse .
  FILTER (regex(str(?spouse), ""Royal"", ""i""))
}
```",5,6,6,3,2,3,3,71,0,0,1,0,0.0,0
987,43,val,"Give me the birth place of the actor of the show, that is a film, with Emir Hadžihafizbegović and birth place of Dado Polumenta and entity in Montenegro.",SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Film>. ?v1 <http://dbpedia.org/ontology/starring> <http://dbpedia.org/resource/Emir_Hadžihafizbegović> . ?result <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Montenegro> . ?v3 <http://dbpedia.org/ontology/birthPlace> ?result . ?v1 <http://dbpedia.org/property/starring> ?v3 . <http://dbpedia.org/resource/Dado_Polumenta> <http://dbpedia.org/ontology/birthPlace> ?result . },"```sparql
# Step 1: Find a film featuring Emir Hadžihafizbegović
SELECT ?film WHERE {
  ?film dbo:starring <http://dbpedia.org/resource/Emir_Hadžihafizbegović> .
}

# Step 2: Get the birthplace of an actor from that film
SELECT DISTINCT ?actor ?birthPlace WHERE {
  # Assuming we found a specific film, replace `?film` with its URI
  ?film dbo:starring ?actor .
  ?actor dbo:birthPlace ?birthPlace .
}

# Step 3: Get the birthplace of Dado Polumenta
SELECT ?birthPlace WHERE {
  <http://dbpedia.org/resource/Dado_Polumenta> dbo:birthPlace ?birthPlace .
}

# Step 4: Find an entity in Montenegro
SELECT DISTINCT ?entity WHERE {
  ?entity dbo:country <http://dbpedia.org/resource/Montenegro> .
}
```",5,6,6,3,3,3,3,71,0,0,1,0,0.0,0
917,42,val,"Give me the parent of the child, that is a royalty, of Kamehameha IV and child of the father of Kamehameha IV and child of Kekūanāoʻa.",SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?result <http://dbpedia.org/ontology/child> ?v1 . ?result <http://dbpedia.org/ontology/parent> <http://dbpedia.org/resource/Kekūanāoʻa> . ?result <http://dbpedia.org/property/father> ?v0 . ?v1 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Kamehameha_IV> . <http://dbpedia.org/resource/Kamehameha_IV> <http://dbpedia.org/property/father> ?v0 . },"```sparql
SELECT ?parent WHERE {
  # Identify Kamehameha IV and his father
  ?kamehamehaIV dbo:parent ?father .
  ?kamehamehaIV rdfs:label ""Kamehameha IV""@en .

  # Find a child of this father who is also a child of Kekūanāoʻa
  ?child dbo:parent ?father ;
         dbo:parent ?kekuanaoa .
  ?kekuanaoa rdfs:label ""Kekūanāoʻa""@en .

  # Ensure the child is royalty
  FILTER (regex(str(?child), ""royalty"", ""i""))

  # Find the parent of this royal child
  ?child dbo:parent ?parent .
}
```",5,6,6,2,3,3,3,71,0,0,1,0,0.0,0
715,48,val,"Give me the commander in the force, that is a military conflict, of the native of Morocco and leader of the office, that is a government agency and an organisation, of Carlos Franco Iribarnegaray.",SELECT ?result WHERE { ?v3 <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Morocco> . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v2 <http://dbpedia.org/ontology/commander> ?result . ?v1 <http://dbpedia.org/ontology/leader> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/GovernmentAgency>. <http://dbpedia.org/resource/Carlos_Franco_Iribarnegaray> <http://dbpedia.org/property/office> ?v1 . ?v2 <http://dbpedia.org/ontology/commander> ?v3 . },"```sparql
SELECT ?commander WHERE {
  # Find Carlos Franco Iribarnegaray
  ?carlos foaf:name ""Carlos Franco Iribarnegaray""@en .
  
  # Identify his role in a military conflict as a commander
  ?conflict dbo:commander ?commander .
  ?carlos dbo:militaryConflict ?conflict .

  # Ensure the office he led is both a government agency and an organization
  ?office dbo:leader ?carlos ;
          rdf:type dbo:GovernmentAgency, dbo:Organization .
}
```",5,8,6,3,2,3,3,71,0,0,1,0,0.0,0
47,48,val,"Give me the office of the awardee of Padma Vibhushan and office of the administration of the commander, that is a politician, in Operation Green Hunt.",SELECT ?result WHERE { ?v1 <http://dbpedia.org/property/office> ?result . ?v1 <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/Padma_Vibhushan> . <http://dbpedia.org/resource/Operation_Green_Hunt> <http://dbpedia.org/ontology/commander> ?v3 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v2 <http://dbpedia.org/property/office> ?result . ?v2 <http://dbpedia.org/property/governor> ?v3 . },"```sparql
SELECT ?awardeeOffice ?commanderOffice WHERE {
  # Find awardees of Padma Vibhushan and their offices
  ?person dbo:award ""Padma Vibhushan"" .
  ?person dbo:office ?awardeeOffice .

  # Find commanders in Operation Green Hunt who are politicians
  OPTIONAL {
    ?commander dbo:role ""Commander""@en ;
              dbo:operation ""Operation Green Hunt""@en ;
              rdf:type dbo:Politician .
    ?admin dbo:member ?commander .
    ?admin dbo:office ?commanderOffice .
  }
}
```",5,6,6,3,2,3,3,71,0,0,22,0,0.0,0
791,54,val,"Give me the predecessor of the child of the child, that is an office holder and a royalty, of Emperor Go-Shirakawa and spouse of the spouse, that is a royalty, of Emperor Takakura and father of Emperor Go-Toba.",SELECT ?result WHERE { <http://dbpedia.org/resource/Emperor_Go-Toba> <http://dbpedia.org/property/father> ?result . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?result <http://dbpedia.org/ontology/successor> ?v5 . ?v5 <http://dbpedia.org/property/father> ?v0 . ?v3 <http://dbpedia.org/ontology/spouse> <http://dbpedia.org/resource/Emperor_Takakura> . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?result <http://dbpedia.org/ontology/spouse> ?v3 . ?v0 <http://dbpedia.org/ontology/parent> <http://dbpedia.org/resource/Emperor_Go-Shirakawa> . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. },"```sparql
SELECT ?predecessor WHERE {
  # Step 1: Find child of Emperor Go-Shirakawa
  ?goShirakawaChild dbo:childOf ?goShirakawa .
  ?goShirakawa rdfs:label ""Emperor Go-Shirakawa""@en .

  # Step 2: Find the child of this child who is an office holder and royalty
  ?grandchild dbo:childOf ?goShirakawaChild .
  ?grandchild a dbo:OfficeHolder ;
              a dbo:Royalty .

  # Step 3: Find predecessor of this grandchild
  ?predecessor dbo:predecessorOf ?grandchild .

  # Step 4: Find spouse of Emperor Takakura who is royalty
  ?takakuraSpouse dbo:spouseOf ?takakura .
  ?takakura rdfs:label ""Emperor Takakura""@en .
  FILTER (regex(str(?takakuraSpouse), ""Imperial Princess Shushi"", ""i""))

  # Step 5: Find father",6,9,7,3,3,3,3,71,0,0,1,0,0.0,0
917,53,val,"Give me the child of Kekūanāoʻa and child of the father of Kamehameha IV and parent of the child, that is a royalty, of the mayor of Hawaiian Kingdom.",SELECT ?result WHERE { ?result <http://dbpedia.org/property/father> ?v0 . <http://dbpedia.org/resource/Hawaiian_Kingdom> <http://dbpedia.org/property/leader> ?v3 . <http://dbpedia.org/resource/Kamehameha_IV> <http://dbpedia.org/property/father> ?v0 . ?result <http://dbpedia.org/ontology/parent> <http://dbpedia.org/resource/Kekūanāoʻa> . ?result <http://dbpedia.org/ontology/child> ?v1 . ?v1 <http://dbpedia.org/property/father> ?v3 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. },"```sparql
SELECT ?childOfKekuanaoa ?royalChild ?parent WHERE {
  # Find the child of Kekūanāoʻa
  ?kekuanaoa dbo:parent ?childOfKekuanaoa .
  ?kekuanaoa rdfs:label ""Kekūanāoʻa""@en .

  # Find father of Kamehameha IV and his child who is royalty
  ?kamehamehaIV dbo:parent ?fatherOfKamehamehaIV .
  ?kamehamehaIV rdfs:label ""Kamehameha IV""@en .
  OPTIONAL {
    ?childOfFather dbo:parent ?fatherOfKamehamehaIV .
    FILTER (regex(str(?childOfFather), ""royalty"", ""i""))
  }

  # Find the parent of the royal child of the mayor
  ?mayor dbo:position ""Mayor""@en ;
         dbo:residence dbr:Hawaiian_Kingdom .
  OPTIONAL {
    ?royalChild dbo:parent ?parent .
    ?mayor dbo:child ?royalChild .
    FILTER (regex(str(?royalChild), ""royalty"", ""i""))
  }
}
```",6,7,7,3,3,3,3,71,0,0,2,0,0.0,0
274,23,val,"Give me the associated musical artist of the actor, that is a musical artist, of Imagine the Sound and band member of the person born, that is a musical artist, as John Birks Gillespie.","SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . <http://dbpedia.org/resource/Imagine_the_Sound> <http://dbpedia.org/property/starring> ?v1 . ?result <http://dbpedia.org/ontology/associatedMusicalArtist> ?v2 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?v2 <http://dbpedia.org/property/birthName> ""John Birks Gillespie""@en . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. }","```sparql
SELECT ?associatedArtist WHERE {
  # Step 1: Find actor of ""Imagine the Sound"" who is also a musical artist
  ?actor dbo:workIn ?project .
  ?project rdfs:label ""Imagine the Sound""@en .
  ?actor dbo:occupation dbc:Musical_artists .

  # Step 2: Identify Dizzy Gillespie and his band members
  ?dizzy dbo:birthName ""John Birks Gillespie""@en .
  ?bandMember dbo:memberOfBand ?dizzy .
  ?bandMember dbo:occupation dbc:Musical_artists .

  # Step 3: Find the associated musical artist of the actor from step 1
  ?actor dbo:associatedWith ?associatedArtist .
  FILTER (?associatedArtist = ?bandMember)
}
```",4,6,5,2,2,2,3,28,0,0,4,0,0.0,0
236,15,val,"Give me the party member of the administration, that is an organisation, of the person decedent, that is a politician and an office holder, at Quincy, Massachusetts and party member of Democratic-Republican Party.","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/party> ?v1 . ?v0 <http://dbpedia.org/ontology/deathPlace> <http://dbpedia.org/resource/Quincy,_Massachusetts> . ?result <http://dbpedia.org/ontology/party> <http://dbpedia.org/resource/Democratic-Republican_Party> . ?v1 <http://dbpedia.org/property/leader> ?v0 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. }","```sparql
SELECT ?person ?administration WHERE {
  # Find a politician who was an office holder and decedent at Quincy, Massachusetts
  ?person dbo:officeHolder true .
  ?person dbo:deathPlace ?quincy .
  ?quincy rdfs:label ""Quincy, Massachusetts""@en .

  # Ensure the person is affiliated with the Democratic-Republican Party
  ?person dbo:partyAffiliation ?party .
  ?party rdfs:label ""Democratic-Republican Party""@en .

  # Find their association with an administration organization
  ?person dbo:memberOfOrganization ?administration .
  ?administration a dbo:Administration .
}
```",4,7,5,3,2,3,2,20,0,0,18,0,0.0,0
382,17,val,"Give me the birthplace of Björn Joppe and landmark at elevation of the award of the reference, that is a college coach and a coach, to Harry Combes.","SELECT ?result WHERE { ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Coach>. <http://dbpedia.org/resource/Björn_Joppe> <http://dbpedia.org/ontology/birthPlace> ?result . ?v0 <http://xmlns.com/foaf/0.1/name> ""Harry Combes""@en . ?result <http://dbpedia.org/ontology/elevation> ?v3 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/CollegeCoach>. ?v0 <http://dbpedia.org/property/awards> ?v3 . }","```sparql
# Query to find Björn Joppe's birthplace
SELECT ?birthPlace WHERE {
  ?bjornJoppe dbo:birthPlace ?birthPlace .
  ?bjornJoppe rdfs:label ""Björn Joppe""@en .
}

# Query to find the landmark at elevation related to Harry Combes' award
SELECT ?landmark WHERE {
  ?harryCombes dbo:award ?award .
  ?harryCombes rdfs:label ""Harry Combes""@en .

  OPTIONAL { 
    ?award dbo:elevation ?elevation .
    ?landmark dbo:elevation ?elevation .
    ?landmark rdf:type dbo:Landmark .
  }
}
```",4,6,5,3,2,3,2,20,0,0,1,0,0.0,0
865,49,val,"Give me the father of the child of the father of Abul Maal Abdul Muhith and native of the residence, that is a country, of Ram Jaipal Singh Yadav.",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/birthPlace> ?v0 . ?v2 <http://dbpedia.org/property/father> ?result . <http://dbpedia.org/resource/Abul_Maal_Abdul_Muhith> <http://dbpedia.org/property/father> ?v4 . <http://dbpedia.org/resource/Ram_Jaipal_Singh_Yadav> <http://dbpedia.org/property/residence> ?v0 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. ?v2 <http://dbpedia.org/property/father> ?v4 . },"```sparql
SELECT ?father WHERE {
  # Step 1: Get the father of Abul Maal Abdul Muhith
  ?muhith dbo:parent ?father .
  ?muhith rdfs:label ""Abul Maal Abdul Muhith""@en .

  # Step 2: Identify a child of this father (which is Abul Maal Abdul Muhith)
  OPTIONAL {
    ?child dbo:parent ?father .
    FILTER (?child = ?muhith)
  }

  # Step 3: Find the native country of Ram Jaipal Singh Yadav's residence
  ?yadav dbo:nativeCountry ?country .
  ?yadav rdfs:label ""Ram Jaipal Singh Yadav""@en .

  # Step 4: Get the father of the child (Abul Maal Abdul Muhith) who is native to this country
  OPTIONAL {
    ?father dbo:nativeCountry ?country .
  }
}
```",5,6,6,3,2,3,3,71,0,0,1,0,0.0,0
965,49,val,"Give me the spouse of the spouse of Princess Victoria of Hesse and by Rhine and parent of the person born, that is a noble, as the birth name of George Mountbatten, 2nd Marquess of Milford Haven.","SELECT ?result WHERE { <http://dbpedia.org/resource/George_Mountbatten,_2nd_Marquess_of_Milford_Haven> <http://dbpedia.org/property/birthName> ?v4 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Noble>. ?v0 <http://dbpedia.org/property/birthName> ?v4 . <http://dbpedia.org/resource/Princess_Victoria_of_Hesse_and_by_Rhine> <http://dbpedia.org/ontology/spouse> ?v2 . ?result <http://dbpedia.org/ontology/spouse> ?v2 . ?v0 <http://dbpedia.org/ontology/parent> ?result . }","```sparql
SELECT ?parent WHERE {
  # Step 1: Identify Princess Victoria of Hesse and by Rhine
  ?princess rdfs:label ""Princess Victoria of Hesse and by Rhine""@en .
  
  # Step 2: Find the spouse of Princess Victoria
  ?princess dbo:spouse ?spouse .

  # Step 3: Determine the spouse of her spouse
  ?spouse dbo:spouse ?secondSpouse .

  # Step 4: Identify the parent of this person, ensuring they are a noble
  ?secondSpouse dbo:parent ?parent .
  
  # Ensure the parent is recognized as a noble
  ?parent dbo:nationality dbr:British_people ;
          dbo:birthName ""George Mountbatten""@en .

}
```",5,6,6,3,2,3,3,71,0,0,1,0,0.0,0
124,44,val,"Give me the military force of the force, that is a societal event and a military conflict, of Herbert Kitchener, 1st Earl Kitchener and military force of the war, that is an event and a military conflict and a societal event, of Frank Rhodes (British Army officer) and commander in Mahdist War.","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/battle> ?v4 . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?result <http://dbpedia.org/ontology/battle> ?v2 . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. <http://dbpedia.org/resource/Frank_Rhodes_(British_Army_officer)> <http://dbpedia.org/ontology/battle> ?v4 . <http://dbpedia.org/resource/Mahdist_War> <http://dbpedia.org/ontology/commander> ?result . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v2 <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Herbert_Kitchener,_1st_Earl_Kitchener> . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. }","```sparql
# Query to find the military force associated with Herbert Kitchener
SELECT ?militaryForce WHERE {
  ?kitchener dbo:associatedWithMilitaryForce ?militaryForce .
  ?kitchener rdfs:label ""Herbert Kitchener, 1st Earl Kitchener""@en .
  
  # Ensure it is a societal event and military conflict
  ?militaryForce rdf:type dbp:MilitaryConflict ;
                 rdf:type dbo:SocietalEvent .
}

# Query to find the war involving Frank Rhodes that is an event, military conflict, and societal event
SELECT ?war WHERE {
  ?rhodes dbo:participatedInMilitaryConflict ?war .
  ?rhodes rdfs:label ""Frank Rhodes (British Army officer)""@en .

  # Ensure it is a societal event and military conflict
  ?war rdf:type dbp:MilitaryConflict ;
       rdf:type dbo:SocietalEvent ;
       rdf:type dbo:Event .

  # Confirm his role as commander in the Mahdist War
  OPTIONAL {
    ?rhodes dbo:commanderInMilitaryConflict ?mahdistWar .
    ?mahdistWar rdfs:label ""Mahdist War""@en .
  }
}
```",5,10,6,2,3,3,3,71,0,0,3,0,0.0,0
892,48,val,"Give me the entity in the administration, that is Italian and a region and a settlement and an administrative region, of Democratic Party (Italy) and entity in the profession of the true self of Enrico Crolla.","SELECT ?result WHERE { ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. ?v3 <http://dbpedia.org/property/occupation> ?v1 . ?v3 <http://xmlns.com/foaf/0.1/givenName> ""Enrico Crolla""@en . ?v0 <http://dbpedia.org/property/leaderParty> <http://dbpedia.org/resource/Democratic_Party_(Italy)> . ?result <http://dbpedia.org/ontology/province> ?v0 . ?result <http://dbpedia.org/ontology/country> ?v1 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/AdministrativeRegion>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Region>. ?v0 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Italy>. }","```sparql
SELECT ?regionEntity ?professionEntity WHERE {
  # Find Italian region/settlement/administrative region associated with Democratic Party (Italy)
  ?party dbo:country dbr:Italy .
  ?party rdfs:label ""Democratic Party (Italy)""@en .
  
  OPTIONAL {
    ?regionEntity dbo:politicalParty ?party ;
                  a dbo:Region ;
                  dbo:country dbr:Italy ;
                  a dbo:Settlement ;
                  a dbo:AdministrativeRegion .
  }
  
  # Find Enrico Crolla's profession
  ?crolla rdfs:label ""Enrico Crolla""@en .
  ?crolla dbo:profession ?profession .

  OPTIONAL {
    ?professionEntity rdfs:label ?professionLabel .
    FILTER (str(?professionLabel) = str(?profession))
  }
}
```",5,9,6,3,2,3,3,71,0,0,587,0,0.0,0
273,16,val,Give me the spouse of the child of Giovanni Agnelli and parent of the alumnus of University of Turin.,SELECT ?result WHERE { <http://dbpedia.org/resource/Giovanni_Agnelli> <http://dbpedia.org/ontology/child> ?v2 . ?v3 <http://dbpedia.org/ontology/parent> ?result . ?v3 <http://dbpedia.org/ontology/almaMater> <http://dbpedia.org/resource/University_of_Turin> . ?result <http://dbpedia.org/ontology/spouse> ?v2 . },"```sparql
SELECT ?spouse WHERE {
  # Find a child of Giovanni Agnelli
  ?agnelliChild dbo:parent ""Giovanni Agnelli""@en .
  
  # Find the spouse of this child
  ?agnelliChild dbo:spouse ?spouse .

  # Find an alumnus of University of Turin and their parent
  ?alumnus dbo:almaMater <http://dbpedia.org/resource/University_of_Turin> .
  ?alumnus dbo:parent ?parent .

  # Match the spouse with the parent of the alumnus
  FILTER (?spouse = ?parent)
}
```",4,4,5,2,2,3,2,20,0,0,1,0,0.0,0
216,21,val,Give me the administration of the designer of Woolfe: The Red Hood Diaries and party of Campbell Newman and office of Tim Nicholls.,SELECT ?result WHERE { <http://dbpedia.org/resource/Campbell_Newman> <http://dbpedia.org/ontology/party> ?result . <http://dbpedia.org/resource/Tim_Nicholls> <http://dbpedia.org/property/office> ?result . <http://dbpedia.org/resource/Woolfe:_The_Red_Hood_Diaries> <http://dbpedia.org/property/designer> ?v0 . ?result <http://dbpedia.org/property/leader> ?v0 . },"```sparql
SELECT ?designerAdministration ?newmanParty ?nichollsOffice WHERE {
  # Find the designer of Woolfe: The Red Hood Diaries and their administration
  ?game dbo:creator ?designer .
  ?game rdfs:label ""Woolfe: The Red Hood Diaries""@en .
  OPTIONAL { 
    ?designer dbo:administration ?designerAdministration .
  }

  # Find the party of Campbell Newman
  ?newman dbo:partyAffiliation ?newmanParty .
  ?newman rdfs:label ""Campbell Newman""@en .

  # Find the office held by Tim Nicholls
  ?nicholls dbo:officeHolder ?nichollsOffice .
  ?nicholls rdfs:label ""Tim Nicholls""@en .
}
```",4,4,5,2,3,2,3,28,0,0,1,0,0.0,0
445,55,val,"Give me the death place of the awardee of Royal Astronomical Society and entity in the residence, that is a country, of Anna Sharkey and entity in the award of George H. Cameron.",SELECT ?result WHERE { <http://dbpedia.org/resource/George_H._Cameron> <http://dbpedia.org/property/awards> ?v2 . ?v5 <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/Royal_Astronomical_Society> . ?v5 <http://dbpedia.org/ontology/deathPlace> ?result . ?result <http://dbpedia.org/ontology/location> ?v3 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. ?result <http://dbpedia.org/ontology/country> ?v2 . <http://dbpedia.org/resource/Anna_Sharkey> <http://dbpedia.org/property/residence> ?v3 . },"```sparql
SELECT ?deathPlace ?country ?awardEntity WHERE {
  # Find awardee of Royal Astronomical Society and their death place
  ?awardee dbo:awardReceived dbr:Royal_Astronomical_Society .
  ?awardee dbo:deathPlace ?deathPlace .

  # Find Anna Sharkey's residence country
  ?anna dbo:residenceCountry ?country .
  ?anna rdfs:label ""Anna Sharkey""@en .

  # Find George H. Cameron's award and an associated entity
  ?george dbo:awardReceived ?award .
  ?award dbo:associatedEntity ?awardEntity .
  ?george rdfs:label ""George H. Cameron""@en .
}
```",6,7,7,2,3,3,3,71,0,0,1,0,0.0,0
124,53,val,"Give me the military force of Battle of Tamai and commander in the war, that is a societal event and a military conflict, of the reference, that is Australian and an organisation and a military unit, to 'A' Battery, Royal Australian Artillery and military force of the force, that is a societal event and a military conflict, of Herbert Kitchener, 1st Earl Kitchener.","SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Herbert_Kitchener,_1st_Earl_Kitchener> . ?v3 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Australia>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v3 <http://xmlns.com/foaf/0.1/name> ""'A' Battery, Royal Australian Artillery""@en . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryUnit>. ?result <http://dbpedia.org/ontology/battle> ?v1 . ?v3 <http://dbpedia.org/ontology/battle> ?v2 . ?result <http://dbpedia.org/ontology/battle> <http://dbpedia.org/resource/Battle_of_Tamai> . ?v2 <http://dbpedia.org/ontology/commander> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. }","```sparql
SELECT ?battleForce ?battleCommander ?australianEvent ?australianUnit ?kitchenerForce WHERE {
  # Battle of Tamai details
  ?tamai dbo:participatedIn ?battle .
  ?tamai rdfs:label ""Battle of Tamai""@en .
  
  # Military force involved in the Battle of Tamai
  ?battle dbo:militaryUnit ?battleForce .

  # Commander of the military force in the Battle of Tamai
  ?battle dbo:commander ?battleCommander .

  # Societal event and military conflict related to 'A' Battery, Royal Australian Artillery
  ?australianBattery rdfs:label ""A Battery, Royal Australian Artillery""@en .
  ?australianBattery dbo:participatedIn ?australianEvent .
  
  # Australian organization and military unit referencing 'A' Battery
  ?australianUnit dbo:militaryUnit ?australianBattery .
  FILTER (regex(str(?australianUnit), ""Australia"", ""i""))

  # Military force associated with Herbert Kitchener
  ?kitchener rdfs:label ""Herbert Kitchener, 1st Earl Kitchener""@en .
  ?kitchener dbo:militaryForce ?kitchenerForce .
}
```",6,13,7,3,3,3,3,71,0,0,1,0,0.0,0
433,54,val,"Give me the associated musical artist of the associated musical artist, that is an artist and a musical artist, of the associated musical artist, that is a musical artist and an artist, of Ornette Coleman and professional in Musician and associated musical artist of the person born, that is a musical artist and an artist, as Paul Laurence Dunbar Chambers Jr..","SELECT ?result WHERE { ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. ?v5 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. ?v3 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . <http://dbpedia.org/resource/Ornette_Coleman> <http://dbpedia.org/ontology/associatedMusicalArtist> ?v0 . ?v0 <http://dbpedia.org/ontology/associatedMusicalArtist> ?v5 . ?v3 <http://dbpedia.org/property/birthName> ""Paul Laurence Dunbar Chambers Jr.""@en . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?result <http://dbpedia.org/property/occupation> ""Musician""@en . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. }","```sparql
SELECT ?finalArtist WHERE {
  # Step 1: Find the associated musical artist of Ornette Coleman
  ?coleman dbo:associatedMusicalArtist ?artist1 .
  ?coleman rdfs:label ""Ornette Coleman""@en .

  # Ensure this person is both an artist and a musical artist
  ?artist1 rdf:type dbp:MusicalArtist ;
           rdf:type dbp:Artist .

  # Step 2: Find the associated musical artist of the above artist
  ?artist1 dbo:associatedMusicalArtist ?artist2 .
  
  # Ensure this person is both a musical artist and an artist
  ?artist2 rdf:type dbp:MusicalArtist ;
           rdf:type dbp:Artist .

  # Step 3: Find the professional musician of Paul Laurence Dunbar Chambers Jr.
  ?chambers dbo:associatedMusicalArtist ?finalArtist .
  ?chambers rdfs:label ""Chick""^^xsd:string .
  
  # Ensure this person is both a musical artist and an artist
  ?finalArtist rdf:type dbp:MusicalArtist ;
               rdf:type dbp:Artist .
}
```",6,12,7,3,3,3,3,71,0,0,3,0,0.0,0
216,50,val,"Give me the player in the coach, that is a soccer player and a sports manager and a soccer manager, of the player, that is an organisation and a sports club and a soccer club, in Džemal Berberović and team of the person born, that is a sports manager and a soccer manager and a soccer player, on 1983-12-20.","SELECT ?result WHERE { ?v0 <http://dbpedia.org/ontology/coach> ?v4 . ?result <http://dbpedia.org/ontology/coach> ?v3 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerClub>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerPlayer>. ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsManager>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsClub>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerManager>. ?v3 <http://dbpedia.org/ontology/birthDate> ""1983-12-20""^^<http://www.w3.org/2001/XMLSchema#date> . ?v4 <http://dbpedia.org/ontology/team> ?result . <http://dbpedia.org/resource/Džemal_Berberović> <http://dbpedia.org/ontology/team> ?v0 . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerManager>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsManager>. ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerPlayer>. }","```sparql
SELECT ?playerInCoach WHERE {
  # Find Džemal Berberović's player in coach relationship
  ?coach dbo:playerInTeam ?player .
  ?player rdfs:label ""Džemal Berberović""@en .

  # Ensure the player is a soccer player, sports manager, and soccer manager
  ?player rdf:type dbo:SoccerPlayer ;
          rdf:type dbo:SportsManager ;
          rdf:type dbo:SoccerManager .

  # Find the organization that is an organization, sports club, and soccer club
  OPTIONAL {
    ?organization dbo:member ?player .
    ?organization rdf:type dbo:Organization ;
                  rdf:type dbo:SportsClub ;
                  rdf:type dbo:SoccerClub .
  }

  # Find the team of a person born on December 20, 1983, who is also a player, manager, and coach
  OPTIONAL {
    ?person foaf:birthday ""1983-12-20""^^xsd:date ;
            dbo:playerInTeam ?team .
    ?person rdf:type dbo:SoccerPlayer ;
            rdf:type dbo:SportsManager ;
            rdf:type dbo:SoccerManager .

    # Ensure the team is associated with Džemal Berberović
    ?team dbo:member ?coach .
  }
}
```",5,14,6,3,2,3,3,71,0,0,1,0,0.0,0
495,17,val,Give me the child of Frederick I of Württemberg and father of the child of the parent of Princess Pauline of Württemberg (1810–1856).,SELECT ?result WHERE { ?v3 <http://dbpedia.org/ontology/parent> ?v0 . ?v3 <http://dbpedia.org/property/father> ?result . <http://dbpedia.org/resource/Princess_Pauline_of_Württemberg_(1810–1856)> <http://dbpedia.org/ontology/parent> ?v0 . ?result <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Frederick_I_of_Württemberg> . },"```sparql
SELECT ?father WHERE {
  # Step 1: Identify Frederick I of Württemberg's child
  ?frederick dbo:child ?child .
  ?frederick rdfs:label ""Frederick I, Duke of Württemberg""@en .

  # Step 2: Determine parent of Princess Pauline of Württemberg (1810–1856)
  ?pauline dbo:parent ?parent .
  ?pauline rdfs:label ""Pauline of Württemberg (1810–1856)""@en .

  # Step 3: Find child of this parent
  ?child2 dbo:parent ?parent .

  # Step 4: Identify father of the child found in step 3
  ?child2 dbo:father ?father .
}
```",4,4,5,3,2,3,2,20,0,0,1,0,0.0,0
507,47,val,"Give me the director of the movie, that is a movie and a work, with the person born on 1919-06-17 and spouse of the person born as Anne Voase Coates.","SELECT ?result WHERE { ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Film>. ?v4 <http://dbpedia.org/property/starring> ?v0 . ?v2 <http://dbpedia.org/property/birthName> ""Anne Voase Coates""@en . ?v4 <http://dbpedia.org/ontology/director> ?result . ?result <http://dbpedia.org/ontology/spouse> ?v2 . ?v0 <http://dbpedia.org/ontology/birthDate> ""1919-06-17""^^<http://www.w3.org/2001/XMLSchema#date> . }","```sparql
SELECT ?director WHERE {
  # Person born on 1919-06-17
  ?person dbo:birthDate ""1919-06-17""^^xsd:date .
  
  # Anne Voase Coates and her spouse
  ?anneVoaseCoates rdfs:label ""Anne Voase Coates""@en ;
                  dbo:spouse ?spouse .
  
  # Check if the person born on 1919-06-17 is the spouse of Anne Voase Coates
  FILTER (?person = ?spouse)
  
  # Find a movie directed by this person that is both a ""movie"" and a ""work""
  ?movie dbo:director ?person ;
         rdf:type dbpedia-owl:Film, dbpedia-owl:CreativeWork .
}
```",5,7,6,3,2,3,3,71,0,0,1,0,0.0,0
433,47,val,"Give me the associated musical artist of the person born, that is a musical artist and an artist, as Paul Laurence Dunbar Chambers Jr. and associated musical artist of the associated musical artist, that is an artist and a musical artist, of the associated musical artist, that is a musical artist and an artist, of Ornette Coleman.","SELECT ?result WHERE { ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?v0 <http://dbpedia.org/ontology/associatedMusicalArtist> ?v4 . ?v2 <http://dbpedia.org/property/birthName> ""Paul Laurence Dunbar Chambers Jr.""@en . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. ?v4 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . <http://dbpedia.org/resource/Ornette_Coleman> <http://dbpedia.org/ontology/associatedMusicalArtist> ?v0 . ?v2 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. }","```sparql
SELECT ?artist1 ?artist2 ?artist3 WHERE {
  # Step 1: Find the associated musical artist of Paul Laurence Dunbar Chambers Jr.
  ?chambers dbo:birthName ""Paul Laurence Dunbar Chambers Jr."" .
  ?chambers dbo:associatedMusicalArtist ?artist1 .
  
  # Ensure the first artist is both a musician and an artist
  ?artist1 rdf:type dbo:Musician ;
           dbo:occupationLabel ""musician""@en .

  # Step 2: Find the associated musical artist of the first artist
  ?artist1 dbo:associatedMusicalArtist ?artist2 .
  
  # Ensure the second artist is both a musician and an artist
  ?artist2 rdf:type dbo:Musician ;
           dbo:occupationLabel ""musician""@en .

  # Step 3: Find the associated musical artist of Ornette Coleman
  ?coleman rdfs:label ""Ornette Coleman""@en .
  ?coleman dbo:associatedMusicalArtist ?artist3 .
  
  # Ensure the third artist is both a musician and an artist
  ?artist3 rdf:type dbo:Musician ;
           dbo:occupationLabel ""musician""@en .
}
```",5,11,6,3,2,3,3,71,0,0,10,0,0.0,0
417,41,val,"Give me the child of Alexandrine of Mecklenburg-Schwerin and spouse of the parent, that is a royalty, of Count Ingolf of Rosenborg and child of the father of Frederick IX of Denmark.",SELECT ?result WHERE { <http://dbpedia.org/resource/Frederick_IX_of_Denmark> <http://dbpedia.org/property/father> ?v4 . ?result <http://dbpedia.org/ontology/parent> <http://dbpedia.org/resource/Alexandrine_of_Mecklenburg-Schwerin> . ?result <http://dbpedia.org/property/father> ?v4 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v2 <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Count_Ingolf_of_Rosenborg> . ?result <http://dbpedia.org/ontology/spouse> ?v2 . },"```sparql
SELECT ?child ?royalSpouse ?parentOfIngolf ?fatherFrederickIX WHERE {
  # Find child of Alexandrine of Mecklenburg-Schwerin
  ?alexandrine dbo:child ?child .
  ?alexandrine rdfs:label ""Alexandrine of Mecklenburg-Schwerin""@en .

  # Find spouse of the child who is royalty
  OPTIONAL {
    ?child dbo:spouse ?royalSpouse .
    FILTER (regex(str(?royalSpouse), ""Royal"", ""i""))
  }

  # Find parent (spouse) of Count Ingolf of Rosenborg who is royalty
  OPTIONAL {
    ?ingolf dbo:parent ?parentOfIngolf .
    ?ingolf rdfs:label ""Count Ingolf of Rosenborg""@en .
    FILTER (regex(str(?parentOfIngolf), ""Royal"", ""i""))
  }

  # Find father of Frederick IX of Denmark
  ?frederickIX dbo:parent ?fatherFrederickIX .
  ?frederickIX rdfs:label ""Frederick IX of Denmark""@en .
}
```",5,6,6,2,3,3,3,71,1,3,0,0.25,1.0,0.4
102,15,val,"Give me the manager of the player in the member, that is a soccer player, of England women's national football team and native of Dewsbury.",SELECT ?result WHERE { ?v0 <http://dbpedia.org/ontology/team> <http://dbpedia.org/resource/England_women's_national_football_team> . ?v1 <http://dbpedia.org/ontology/manager> ?result . ?result <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Dewsbury> . ?v0 <http://dbpedia.org/ontology/team> ?v1 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerPlayer>. },"```sparql
SELECT ?manager WHERE {
  # Find the player who is a member of England women's national football team and native of Dewsbury
  ?player dbo:nationality dbr:England ;
          dbo:birthPlace dbr:Dewsbury ;
          dbo:memberOfTeam dbr:England_women%27s_national_football_team .

  # Find the manager of this player
  ?player dbo:manager ?manager .
}
```",4,5,5,3,2,3,2,20,0,0,1,0,0.0,0
130,16,val,"Give me the figure known as the film, that is a soccer club and an organisation, of Candice Storey Lee and entity in the administration, that is American, of .","SELECT ?result WHERE { ?v3 <http://dbpedia.org/property/governor> """"@en . ?result <http://dbpedia.org/ontology/state> ?v3 . ?v3 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/United_States>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerClub>. ?result <http://dbpedia.org/property/nickname> ?v2 . ?v2 <http://dbpedia.org/ontology/director> <http://dbpedia.org/resource/Candice_Storey_Lee> . }","```sparql
SELECT ?soccerClub ?adminEntity WHERE {
  # Find Candice Storey Lee and her associated soccer club and organization
  ?lee dbo:profession dbr:Film_director .
  ?lee foaf:name ""Candice Storey Lee""@en .

  OPTIONAL {
    ?lee dbo:associatedWith ?soccerClub .
    ?soccerClub a dbo:Soccer_Club ;
               a dbo:Organization .
  }

  # Find an American entity involved in administration
  OPTIONAL {
    ?adminEntity dbo:nationality dbr:United_States ;
                 dbo:occupation dbr:Administration .
  }
}
```",4,7,5,2,2,3,2,20,0,0,1,0,0.0,0
212,7,val,"Give me the birthplace of KODA (singer) and birthplace of the professional, that is a musical artist and an artist, in Singer, rapper, CEO, Facilities and Project Manager.","SELECT ?result WHERE { ?v0 <http://dbpedia.org/property/occupation> ""Singer, rapper, CEO, Facilities and Project Manager""@en . <http://dbpedia.org/resource/KODA_(singer)> <http://dbpedia.org/ontology/birthPlace> ?result . ?v0 <http://dbpedia.org/ontology/birthPlace> ?result . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. }","```sparql
# Query to find the birthplace of Koda Kumi (KODA)
SELECT ?birthPlace WHERE {
  ?koda dbo:birthPlace ?birthPlace .
  ?koda rdfs:label ""Koda Kumi""@en .
}

UNION

# Query to find the birthplace of Travis Scott
SELECT ?birthPlace WHERE {
  ?travis dbo:birthPlace ?birthPlace .
  ?travis rdfs:label ""Travis Scott""@en .
}
```",3,5,4,2,2,2,2,9,0,0,1,0,0.0,0
18,22,val,Give me the professional in the award of Ana María Sánchez de Ríos and parent of the professional in Actress.,"SELECT ?result WHERE { ?v0 <http://dbpedia.org/property/occupation> ""Actress""@en . ?result <http://dbpedia.org/property/occupation> ?v2 . <http://dbpedia.org/resource/Ana_María_Sánchez_de_Ríos> <http://dbpedia.org/property/awards> ?v2 . ?result <http://dbpedia.org/ontology/child> ?v0 . }","```sparql
SELECT ?parent WHERE {
  # Find Ana María Sánchez de Ríos' profession associated with an award
  ?anaMaría a dbo:Person ;
            rdfs:label ""Ana María Sánchez de Ríos""@en .
  
  OPTIONAL { 
    ?anaMaría dbo:award ?award .
    ?profession dbo:fieldOfActivity ?award .
  }
  
  # Find a professional who is an actress
  ?actress a dbo:Person ;
           dbo:occupation ""Actress"" ;
           dbo:parent ?parent .

}
```",4,4,5,2,2,2,3,28,0,0,200,0,0.0,0
18,23,val,"Give me the professional in the award of Ana María Sánchez de Ríos and alumnus of the figure known, that is an educational institution, as Saints.","SELECT ?result WHERE { ?v0 <http://dbpedia.org/property/nickname> ""Saints""@en . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/EducationalInstitution>. <http://dbpedia.org/resource/Ana_María_Sánchez_de_Ríos> <http://dbpedia.org/property/awards> ?v3 . ?result <http://dbpedia.org/ontology/almaMater> ?v0 . ?result <http://dbpedia.org/property/occupation> ?v3 . }","```sparql
SELECT ?professional WHERE {
  # Find awards related to Ana María Sánchez de Ríos
  ?award dbo:recipient ?anaMaría .
  ?anaMaría rdfs:label ""Ana María Sánchez de Ríos""@en .

  # Identify professionals associated with the award
  ?award dbo:relatedProfessional ?professional .

  # Find educational institution known as ""Saints""
  ?institution rdfs:label ""Saints""@en .

  # Check if the professional is an alumnus of this institution
  ?professional dbo:almaMater ?institution .
}
```",4,5,5,2,2,2,3,28,0,0,1,0,0.0,0
465,54,val,"Give me the spouse of the child, that is a royalty, of the parent of Elizabeth of Austria (1526–1545) and successor of the child of Alfonso I d'Este and successor of Renée of France.",SELECT ?result WHERE { ?v3 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Alfonso_I_d'Este> . ?result <http://dbpedia.org/ontology/spouse> ?v5 . ?v0 <http://dbpedia.org/ontology/child> ?v5 . ?v0 <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Elizabeth_of_Austria_(1526–1545)> . <http://dbpedia.org/resource/Renée_of_France> <http://dbpedia.org/ontology/successor> ?result . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v3 <http://dbpedia.org/ontology/successor> ?result . },"```sparql
SELECT ?spouse WHERE {
  # Step 1: Identify the parent of Elizabeth of Austria (1526–1545)
  ?elizabeth dbo:parent ?parent .
  ?elizabeth rdfs:label ""Elizabeth of Austria (1526–1545)""@en .

  # Step 2: Find the child of Alfonso I d'Este and their successor
  ?alfonsoChild dbo:childOf ?alfonsoI .
  ?alfonsoI rdfs:label ""Alfonso I d'Este""@en .
  ?successor1 dbo:succeededBy ?alfonsoChild .

  # Step 3: Identify the successor of Renée of France
  ?reneeSuccessor dbo:succeededBy ?renee .
  ?renee rdfs:label ""Renée of France""@en .

  # Step 4: Find a common royalty who is a child of Elizabeth's parent and also a successor to both successors
  ?commonRoyalty dbo:parent ?parent ;
                dbo:succeededBy ?successor1, ?reneeSuccessor .
  
  # Step 5: Determine the spouse of this royalty
  ?commonRoyalty dbo:spouse ?spouse .
}
```",6,7,7,3,3,3,3,71,0,0,1,0,0.0,0
93,15,val,"Give me the death place of John Weir Troy and capital of the headquarter, that is a region and a settlement, of the headquarter of Clam Cove Pictograph Site.",SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. <http://dbpedia.org/resource/Clam_Cove_Pictograph_Site> <http://dbpedia.org/ontology/location> ?v0 . ?v0 <http://dbpedia.org/ontology/location> ?v1 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Region>. <http://dbpedia.org/resource/John_Weir_Troy> <http://dbpedia.org/ontology/deathPlace> ?result . ?v1 <http://dbpedia.org/ontology/capital> ?result . },"```sparql
SELECT ?deathPlace ?capital WHERE {
  # Find the death place of John Weir Troy
  ?troy dbo:deathPlace ?deathPlace .
  ?troy rdfs:label ""John Weir Troy""@en .

  # Identify the headquarter region and settlement for Clam Cove Pictograph Site
  OPTIONAL {
    ?site dbo:headquarter ?headquarter .
    ?site rdfs:label ""Clam Cove Pictograph Site""@en .
    
    # Ensure it is both a region and a settlement
    ?headquarter rdf:type dbpedia-owl:Region ;
                 rdf:type dbpedia-owl:PopulatedPlace .

    # Find the capital of this headquarter
    ?headquarter dbo:capital ?capital .
  }
}
```",4,6,5,3,2,3,2,20,0,0,1,0,0.0,0
216,23,val,Give me the administration of the designer of Woolfe: The Red Hood Diaries and office of the mayor of Ros Bates.,SELECT ?result WHERE { <http://dbpedia.org/resource/Woolfe:_The_Red_Hood_Diaries> <http://dbpedia.org/property/designer> ?v1 . <http://dbpedia.org/resource/Ros_Bates> <http://dbpedia.org/property/leader> ?v2 . ?v2 <http://dbpedia.org/property/office> ?result . ?result <http://dbpedia.org/property/leader> ?v1 . },"```sparql
# Query for the designer of Woolfe: The Red Hood Diaries and their administration
SELECT ?designer ?administration WHERE {
  ?game dbo:creator ?designer .
  ?game rdfs:label ""Woolfe: The Red Hood Diaries""@en .
  
  OPTIONAL { 
    ?designer dbo:office ?administration .
  }
}

# Query for the mayor of Ros Bates and their office
SELECT ?mayor ?office WHERE {
  ?city dbo:mayor ?mayor .
  ?city rdfs:label ""Ros Bates, Queensland""@en .
  
  OPTIONAL { 
    ?mayor dbo:office ?office .
  }
}
```",4,4,5,2,2,2,3,28,0,0,1,0,0.0,0
443,22,val,"Give me the landmark at elevation of the award of William Shepherd and birthplace of the person born, that is a musical artist and an artist, on 1949-11-20.","SELECT ?result WHERE { ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. ?v3 <http://dbpedia.org/ontology/birthPlace> ?result . ?v3 <http://dbpedia.org/ontology/birthDate> ""1949-11-20""^^<http://www.w3.org/2001/XMLSchema#date> . ?result <http://dbpedia.org/ontology/elevation> ?v2 . <http://dbpedia.org/resource/William_Shepherd> <http://dbpedia.org/property/awards> ?v2 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. }","```sparql
# Step 1: Identify William Shepherd's Award
SELECT ?award WHERE {
  ?shepherd dbo:award ?award .
  ?shepherd rdfs:label ""William Shepherd""@en .
}

# Step 2: Find the person born on 1949-11-20 who is a musical artist and an artist
SELECT ?person ?birthPlace WHERE {
  ?person dbo:dateOfBirth ?dob ;
          dbo:occupation [a dbo:MusicalArtist, dbo:Artist] .
  ?person rdfs:label ?name .
  FILTER (YEAR(?dob) = 1949 && MONTH(?dob) = 11 && DAY(?dob) = 20)
  
  # Get the birthplace
  ?person dbo:birthPlace ?birthPlace .
}

# Step 3: Find a landmark at the elevation of William Shepherd's award
SELECT ?landmark WHERE {
  ?award dbo:elevation ?elevation .
  ?landmark dbo:elevation ?elevation ;
            a dbo:Lighthouse ; # Assuming we are looking for a lighthouse as an example landmark
            rdfs:label ?name .
}
```",4,6,5,2,2,2,3,28,0,0,1,0,0.0,0
456,40,val,"Give me the professional in  and band of Alan Doyle and spouse of the actor of the movie, that is a work and a television show, with Ross Newton.","SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/spouse> ?result . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/TelevisionShow>. ?v2 <http://dbpedia.org/property/starring> ?v1 . ?v2 <http://dbpedia.org/property/starring> <http://dbpedia.org/resource/Ross_Newton> . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. <http://dbpedia.org/resource/Alan_Doyle> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?result <http://dbpedia.org/property/occupation> """"@en . }","```sparql
SELECT ?band ?spouse WHERE {
  # Find Alan Doyle's professional band
  ?doyle dbo:memberOfBand ?band .
  ?doyle rdfs:label ""Alan Doyle""@en .

  # Find a movie that is both a work and television show with Ross Newton
  OPTIONAL {
    ?movie dbo:starring ?rossNewton .
    ?rossNewton rdfs:label ""Ross Newton""@en .
    ?movie rdf:type dbpedia-owl:Film .
    ?movie rdf:type dbpedia-owl:TelevisionShow .
  }

  # Find the spouse of Ross Newton
  OPTIONAL {
    ?rossNewton dbo:spouse ?spouse .
  }
}
```",5,7,6,3,3,3,3,71,0,0,1,0,0.0,0
417,42,val,"Give me the child of the child, that is a royalty, of Frederick Francis III, Grand Duke of Mecklenburg-Schwerin and child of Christian X of Denmark and spouse of the parent, that is a royalty, of Count Ingolf of Rosenborg.","SELECT ?result WHERE { ?v1 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Frederick_Francis_III,_Grand_Duke_of_Mecklenburg-Schwerin> . ?result <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Christian_X_of_Denmark> . ?result <http://dbpedia.org/ontology/parent> ?v1 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?result <http://dbpedia.org/ontology/spouse> ?v2 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v2 <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Count_Ingolf_of_Rosenborg> . }","```sparql
SELECT ?grandchild WHERE {
  # Step 1: Find a child of Frederick Francis III who is royalty
  ?frederickChild dbo:parent dbc:Frederick_Francis_III,_Grand_Duke_of_Mecklenburg-Schwerin .
  FILTER (regex(str(?frederickChild), ""Royal"", ""i""))

  # Step 2: Find the child of this royal child
  ?grandchild dbo:parent ?frederickChild .

  # Step 3: Identify Count Ingolf of Rosenborg and his parent who is royalty
  ?ingolf dbo:parent ?royalParent .
  ?ingolf rdfs:label ""Count Ingolf of Rosenborg""@en .
  FILTER (regex(str(?royalParent), ""Royal"", ""i""))

  # Step 4: Find the spouse of this royal parent
  OPTIONAL {
    ?royalParent dbo:spouse ?spouse .
  }
}
```",5,7,6,2,3,3,3,71,0,0,1,0,0.0,0
773,48,val,"Give me the parent of the child, that is a royalty, of Louis the German and spouse of the father of the parent of Bernard (son of Charles the Fat).",SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/parent> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v1 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Louis_the_German> . ?v3 <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Bernard_(son_of_Charles_the_Fat)> . ?v2 <http://dbpedia.org/ontology/spouse> ?result . ?v3 <http://dbpedia.org/property/father> ?v2 . },"```sparql
SELECT ?parentOfRoyalChild WHERE {
  # Step 1: Find a child of Louis the German who is royalty
  ?royalChild dbo:child ?louisTheGerman .
  ?louisTheGerman rdfs:label ""Louis the German""@en .
  
  # Ensure the child is royalty (e.g., king, emperor)
  FILTER EXISTS { ?royalChild rdf:type dbo:Monarch . }
  
  # Step 2: Find the parent of this royal child
  ?royalChild dbo:parent ?parentOfRoyalChild .

  # Step 3: Identify Bernard and his parent
  ?bernard dbo:child ?charlesTheFat .
  ?charlesTheFat rdfs:label ""Charles the Fat""@en .
  ?bernard rdfs:label ""Bernard (son of Charles the Fat)""@en .

  # Step 4: Find the father of Bernard's parent
  ?parentOfBernard dbo:parent ?grandfatherOfBernard .
  ?parentOfBernard ?p ?bernard .

  # Step 5: Identify the spouse of this grandfather
  OPTIONAL {
    ?grandfatherOfBernard dbo:spouse ?spouse .
  }

  # Ensure we are returning the correct parent from step 2
  FILTER (?parentOfRoyalChild = ?spouse)
}
```",5,6,6,3,2,3,3,71,0,0,1,0,0.0,0
129,23,val,Give me the associated musical artist of the person born as Tahj Malik Chandler and professional in the mayor of 1999 West Dunbartonshire Council election.,"SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?result <http://dbpedia.org/property/occupation> ?v2 . <http://dbpedia.org/resource/1999_West_Dunbartonshire_Council_election> <http://dbpedia.org/property/leader> ?v2 . ?v1 <http://dbpedia.org/property/birthName> ""Tahj Malik Chandler""@en . }","```sparql
SELECT ?artist WHERE {
  # Find the person known as Tahj Malik Chandler and their associated musical artist
  ?person rdfs:label ""The Game""@en .
  ?person foaf:name ""Tahj Malik Chandler"" .
  
  OPTIONAL {
    ?person dbo:associatedMusicalArtist ?artist .
  }
}
```",4,4,5,2,2,2,3,28,0,0,7,0,0.0,0
507,45,val,Give me the director of Entertaining Mr Sloane (film) and professional in the profession of the person born on 1966-02-18 and spouse of Anne V. Coates.,"SELECT ?result WHERE { ?v0 <http://dbpedia.org/property/occupation> ?v1 . <http://dbpedia.org/resource/Entertaining_Mr_Sloane_(film)> <http://dbpedia.org/ontology/director> ?result . ?result <http://dbpedia.org/ontology/spouse> <http://dbpedia.org/resource/Anne_V._Coates> . ?result <http://dbpedia.org/property/occupation> ?v1 . ?v0 <http://dbpedia.org/ontology/birthDate> ""1966-02-18""^^<http://www.w3.org/2001/XMLSchema#date> . }","```sparql
SELECT ?director ?professional WHERE {
  # Find the director of ""Entertaining Mr Sloane"" (film)
  ?film dbo:director ?director .
  ?film rdfs:label ""Entertaining Mr Sloane""@en .

  # Find the person born on 1966-02-18
  ?person dbo:birthday ""1966-02-18""^^xsd:date .
  
  # Find Anne V. Coates and her spouse
  ?anne dbo:spouse ?spouse .
  ?anne rdfs:label ""Anne V. Coates""@en .

  # Determine the profession of the person born on 1966-02-18
  ?person dbo:occupation ?profession .

  # Find a professional in that occupation
  ?professional dbo:occupation ?profession .
}
```",5,5,6,3,3,3,3,71,0,0,1,0,0.0,0
573,55,val,"Give me the parent of the author, that is a politician and an office holder, of Exchequer Standards and person decedent at the residence, that is a settlement, of William J. Phelan and person decedent at the administration, that is a region, of Charlie Baker.","SELECT ?result WHERE { ?v2 <http://dbpedia.org/ontology/parent> ?result . <http://dbpedia.org/resource/William_J._Phelan> <http://dbpedia.org/property/residence> ?v5 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?result <http://dbpedia.org/ontology/deathPlace> ?v5 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Region>. ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. ?result <http://dbpedia.org/ontology/deathPlace> ?v3 . ?v3 <http://dbpedia.org/property/governor> ""Charlie Baker""@en . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. <http://dbpedia.org/resource/Exchequer_Standards> <http://dbpedia.org/property/author> ?v2 . }","```sparql
SELECT ?parent WHERE {
  # Find the author of ""Exchequer Standards"" who is a politician and an office holder
  ?author dbo:work ?exchequerStandards .
  ?exchequerStandards rdfs:label ""Exchequer Standards""@en .
  
  OPTIONAL { 
    ?author dbo:occupation ?politicianRole .
    FILTER (regex(str(?politicianRole), ""Politician"", ""i"") || regex(str(?politicianRole), ""Office holder"", ""i""))
  }
  
  # Find the parent of this author
  ?author dbo:parent ?parent .

  # Find William J. Phelan's residence and any notable decedent there
  ?phelan dbo:residence ?settlement .
  ?phelan rdfs:label ""William J. Phelan""@en .
  
  OPTIONAL {
    ?decedent dbo:placeOfDeath ?settlement .
  }

  # Find the administration region of Charlie Baker and any notable decedent there
  ?baker dbo:administration ?region .
  ?baker rdfs:label ""Charlie Baker""@en .

  OPTIONAL {
    ?adminDecedent dbo:placeOfDeath ?region .
  }
}
```",6,10,7,2,3,3,3,71,0,0,2,0,0.0,0
582,54,val,"Give me the figure known as --10-19 and player in the father, that is an athlete and a soccer manager and a sports manager, of the child of Kazuaki Nagasawa and reference to the residence of Hirotaka Sugawara.","SELECT ?result WHERE { ?v5 <http://dbpedia.org/ontology/team> ?result . ?result <http://dbpedia.org/property/nickname> ""--10-19""^^<http://www.w3.org/2001/XMLSchema#gMonthDay> . ?result <http://xmlns.com/foaf/0.1/name> ?v3 . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Athlete>. <http://dbpedia.org/resource/Hirotaka_Sugawara> <http://dbpedia.org/property/residence> ?v3 . ?v0 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Kazuaki_Nagasawa> . ?v0 <http://dbpedia.org/property/father> ?v5 . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsManager>. ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerManager>. }","```sparql
SELECT ?figure WHERE {
  # Find Kazuaki Nagasawa and his child
  ?child dbo:parent ?father .
  ?kazuaki rdfs:label ""Kazuaki Nagasawa""@en ;
           dbo:child ?child .

  # Identify the father who is an athlete, soccer manager, and sports manager
  ?father rdf:type dbo:Athlete ;
          dbo:SoccerManager ;
          dbo:SportsManager .

  # Find the figure known as --10-19 related to this father
  ?figure rdfs:label ""--10-19""@en .
  ?figure dbo:relatedTo ?father .

  # Reference to the residence of Hirotaka Sugawara
  OPTIONAL {
    ?hirotaka rdfs:label ""Hirotaka Sugawara""@en ;
              dbo:residence ?residence .
  }
}
```",6,9,7,3,3,3,3,71,0,0,1,0,0.0,0
965,43,val,"Give me the parent of George Mountbatten, 2nd Marquess of Milford Haven and spouse of Prince Louis of Battenberg and parent of the child, that is a royalty, of the person born, that is a politician, on 1854-05-24.","SELECT ?result WHERE { ?v3 <http://dbpedia.org/property/father> ?v1 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?result <http://dbpedia.org/ontology/spouse> <http://dbpedia.org/resource/Prince_Louis_of_Battenberg> . ?v3 <http://dbpedia.org/ontology/parent> ?result . <http://dbpedia.org/resource/George_Mountbatten,_2nd_Marquess_of_Milford_Haven> <http://dbpedia.org/ontology/parent> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v1 <http://dbpedia.org/ontology/birthDate> ""1854-05-24""^^<http://www.w3.org/2001/XMLSchema#date> . }","```sparql
SELECT ?parent WHERE {
  # Find George Mountbatten, 2nd Marquess of Milford Haven and his parent
  ?georgeMountbatten dbo:parent ?parent .
  ?georgeMountbatten rdfs:label ""George Mountbatten, 2nd Marquess of Milford Haven""@en .

  # Find spouse of Prince Louis of Battenberg who is royalty
  OPTIONAL {
    ?princeLouis dbo:spouse ?royalSpouse .
    ?princeLouis rdfs:label ""Prince Louis of Battenberg""@en .
    FILTER (regex(str(?royalSpouse), ""Princess Victoria of Hesse and by Rhine"", ""i""))
  }

  # Find child of the royal spouse
  OPTIONAL {
    ?royalSpouse dbo:child ?royaltyChild .
    FILTER (regex(str(?royalSpouse), ""Princess Victoria of Hesse and by Rhine"", ""i""))
  }

  # Find politician born on 1854-05-24 and their parent
  OPTIONAL {
    ?politician dbo:birthDate ?birthDate .
    ?politician dbo:parent ?parentOfPolitician .
    ?politician rdfs:label ?name .
    FILTER (regex(str(?name), ""Edward VII"", ""i""))
    FILTER (?birthDate = ""1854-05-24""^^xsd:date)
  }

  # Ensure the parent of George Mountbatten matches the criteria
  FILTER (?parent = ?parentOfPolitician)
}
```",5,7,6,3,3,3,3,71,0,0,1,0,0.0,0
417,48,val,"Give me the spouse of the parent, that is a royalty, of the child of Knud, Hereditary Prince of Denmark and child of the child, that is a royalty, of Frederick Francis III, Grand Duke of Mecklenburg-Schwerin.","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/parent> ?v1 . ?v3 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Knud,_Hereditary_Prince_of_Denmark> . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v2 <http://dbpedia.org/ontology/child> ?v3 . ?result <http://dbpedia.org/ontology/spouse> ?v2 . ?v1 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Frederick_Francis_III,_Grand_Duke_of_Mecklenburg-Schwerin> . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. }","```sparql
SELECT ?spouse WHERE {
  # Identify Knud, Hereditary Prince of Denmark
  ?knud rdfs:label ""Knud, Hereditary Prince of Denmark""@en .
  
  # Find a child of Knud
  ?child dbo:parent ?knud .
  
  # Find a grandchild (royalty) of Knud
  ?grandchild dbo:parent ?child .
  FILTER EXISTS { ?grandchild rdf:type dbo:Monarch . }
  
  # Identify the parent of this royal grandchild
  ?parent dbo:parent ?grandchild .
  FILTER EXISTS { ?parent rdf:type dbo:Monarch . }
  
  # Find Frederick Francis III, Grand Duke of Mecklenburg-Schwerin and his children
  ?frederick rdfs:label ""Frederick Francis III, Grand Duke of Mecklenburg-Schwerin""@en .
  
  # Ensure the parent is also a child (royalty) of Frederick
  ?parent dbo:parent ?frederick .
  
  # Find the spouse of this royal parent
  ?parent dbo:spouse ?spouse .
}
```",5,7,6,3,2,3,3,71,0,0,1,0,0.0,0
433,43,val,"Give me the associated musical artist of the associated musical artist, that is an artist and a musical artist, of the associated musical artist, that is a musical artist and an artist, of Ornette Coleman and associated musical artist of Paul Chambers and professional in Musician.","SELECT ?result WHERE { ?v4 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?v0 <http://dbpedia.org/ontology/associatedMusicalArtist> ?v4 . <http://dbpedia.org/resource/Ornette_Coleman> <http://dbpedia.org/ontology/associatedMusicalArtist> ?v0 . ?result <http://dbpedia.org/property/occupation> ""Musician""@en . <http://dbpedia.org/resource/Paul_Chambers> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. }","```sparql
SELECT ?finalArtist WHERE {
  # Step 1: Find Ornette Coleman's associated musical artist who is both an artist and a musical artist
  ?coleman dbo:associatedMusicalArtist ?artist1 .
  ?coleman rdfs:label ""Ornette Coleman""@en .

  FILTER EXISTS { ?artist1 rdf:type dbo:Artist . }
  FILTER EXISTS { ?artist1 rdf:type dbo:MusicalArtist . }

  # Step 2: Find the associated musical artist of that artist
  ?artist1 dbo:associatedMusicalArtist ?artist2 .
  FILTER EXISTS { ?artist2 rdf:type dbo:Artist . }
  FILTER EXISTS { ?artist2 rdf:type dbo:MusicalArtist . }

  # Step 3: Find Paul Chambers' associated musical artist who is a musician
  ?chambers dbo:associatedMusicalArtist ?artist3 .
  ?chambers rdfs:label ""Paul Chambers""@en .

  FILTER EXISTS { ?artist3 rdf:type dbo:Musician . }

  # Step 4: Find the associated musical artist of that artist
  ?artist3 dbo:associatedMusicalArtist ?finalArtist .
}
```",5,9,6,3,3,3,3,71,0,0,3,0,0.0,0
976,50,val,"Give me the office of the mayor, that is a politician and an office holder and Turkish, of the reference, that is an organisation and a political party and Turkish, to Millet İttifakı and office of the person born as Mehmet Naci Bostancı.","SELECT ?result WHERE { ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v3 <http://dbpedia.org/ontology/nationality> <http://dbpedia.org/resource/Turkey>. ?v1 <http://xmlns.com/foaf/0.1/name> ""Millet İttifakı""@en . ?v1 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Turkey>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/PoliticalParty>. ?v0 <http://dbpedia.org/property/office> ?result . ?v1 <http://dbpedia.org/property/leader> ?v3 . ?v0 <http://dbpedia.org/property/birthName> ""Mehmet Naci Bostancı""@en . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?v3 <http://dbpedia.org/property/office> ?result . }","```sparql
SELECT ?office WHERE {
  # Find Mehmet Naci Bostancı's office
  OPTIONAL { 
    ?person dbo:birthName ""Mehmet Naci Bostancı""@en .
    ?person dbo:occupation ?office .
    FILTER (regex(str(?office), ""politician"", ""i"") && regex(str(?office), ""office holder"", ""i""))
  }
  
  # Find a Turkish political party associated with Millet İttifakı
  OPTIONAL {
    ?party rdf:type dbo:PoliticalParty ;
           dbo:country dbr:Turkey ;
           dbo:memberOrganization ?ittifak .
    ?ittifak rdfs:label ""Millet İttifakı""@en .
  }
  
  # Find the office of a Turkish mayor who is a politician and office holder
  OPTIONAL {
    ?mayor dbo:office ?office .
    FILTER (regex(str(?office), ""mayor"", ""i"") && regex(str(?mayor), ""politician"", ""i"") && regex(str(?mayor), ""office holder"", ""i""))
    ?mayor dbo:nationality dbr:Turkey .
  }
}
```",5,11,6,3,2,3,3,71,0,0,1,0,0.0,0
445,49,val,"Give me the entity in the residence, that is a country, of Anna Sharkey and entity in the award of the commander in Battle of Saint-Mihiel.",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/country> ?v1 . <http://dbpedia.org/resource/Battle_of_Saint-Mihiel> <http://dbpedia.org/ontology/commander> ?v0 . ?v0 <http://dbpedia.org/property/awards> ?v1 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. <http://dbpedia.org/resource/Anna_Sharkey> <http://dbpedia.org/property/residence> ?v2 . ?result <http://dbpedia.org/ontology/location> ?v2 . },"```sparql
# Query for Anna Sharkey's residence country
SELECT ?country WHERE {
  ?anna dbo:birthPlace ?residence .
  ?anna rdfs:label ""Anna Sharkey""@en .
  ?residence a dbo:Country .
  BIND(?residence AS ?country)
}

UNION

# Query for the commander in Battle of Saint-Mihiel and their award
SELECT ?award WHERE {
  ?battle dbo:commander ?commander .
  ?battle rdfs:label ""Battle of Saint-Mihiel""@en .
  ?commander dbo:award ?award .
}
```",5,6,6,3,2,3,3,71,0,0,102,0,0.0,0
791,50,val,"Give me the father of the child, that is a royalty, of Emperor Takakura and predecessor of the child of the child, that is an office holder and a royalty, of Emperor Go-Shirakawa.",SELECT ?result WHERE { ?v3 <http://dbpedia.org/property/father> ?result . ?result <http://dbpedia.org/ontology/successor> ?v4 . ?v3 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Emperor_Takakura> . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v4 <http://dbpedia.org/property/father> ?v0 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v0 <http://dbpedia.org/ontology/parent> <http://dbpedia.org/resource/Emperor_Go-Shirakawa> . },"```sparql
SELECT ?father WHERE {
  # Find a child of Emperor Takakura who is royalty
  ?child dbo:parent ?takakura .
  ?takakura rdfs:label ""Emperor Takakura""@en .
  FILTER (regex(str(?child), ""Imperial Princess Shushi"", ""i"") || regex(str(?child), ""Prince Morihito"", ""i""))

  # Find the father of this royal child
  ?child dbo:parent ?father .

  # Determine children of this royal child
  ?grandChild dbo:parent ?child .

  # Check if these grandchildren are both office holders and royalty
  OPTIONAL {
    ?officeHolder dbo:position ?position .
    ?officeHolder rdfs:label ?grandChild .
    FILTER (regex(str(?position), ""Minister"", ""i"") || regex(str(?position), ""Chancellor"", ""i""))
  }

  # Find the predecessor of these grandchildren
  OPTIONAL {
    ?predecessor dbo:successor ?grandChild .
  }
}
```",5,8,6,3,2,3,3,71,0,0,1,0,0.0,0
417,52,val,"Give me the child of the father of Frederick IX of Denmark and spouse of the parent, that is a royalty, of the child of Knud, Hereditary Prince of Denmark and child of Alexandrine of Mecklenburg-Schwerin.","SELECT ?result WHERE { ?v3 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Knud,_Hereditary_Prince_of_Denmark> . ?v2 <http://dbpedia.org/ontology/child> ?v3 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. <http://dbpedia.org/resource/Frederick_IX_of_Denmark> <http://dbpedia.org/property/father> ?v5 . ?result <http://dbpedia.org/property/father> ?v5 . ?result <http://dbpedia.org/ontology/spouse> ?v2 . ?result <http://dbpedia.org/ontology/parent> <http://dbpedia.org/resource/Alexandrine_of_Mecklenburg-Schwerin> . }","```sparql
SELECT ?child WHERE {
  # Find Frederick IX of Denmark and his father
  ?frederickIX dbo:parent ?father .
  ?frederickIX rdfs:label ""Frederick IX of Denmark""@en .

  # Identify a child of this father (which is Frederick IX)
  OPTIONAL { 
    ?father dbo:child ?child .
    FILTER (?child = ?frederickIX)
  }

  # Find the spouse of this parent, ensuring they are royalty
  OPTIONAL {
    ?father dbo:spouse ?spouse .
    FILTER EXISTS { ?spouse rdf:type dbo:Monarch }
  }

  # Identify the child of Knud, Hereditary Prince of Denmark and Alexandrine of Mecklenburg-Schwerin
  ?knudChild dbo:parent ?knud .
  ?knud rdfs:label ""Knud, Hereditary Prince of Denmark""@en .
  ?alexandrine rdfs:label ""Alexandrine of Mecklenburg-Schwerin""@en .
  ?knud dbo:spouse ?alexandrine .

  # Find the parent of this child that is royalty
  OPTIONAL {
    ?knudChild dbo:parent ?royalParent .
    FILTER EXISTS { ?royalParent rdf:type dbo:Monarch }
  }

  # Return the child of the spouse of Frederick IX's father who is a royal parent of Knud's child
  FILTER (?child = ?sp",6,7,7,3,3,3,3,71,0,0,1,0,0.0,0
326,16,val,"Give me the person decedent at the award, that is a country, of Adelbert Cronkhite and resident of the birthplace, that is a state and British, of David Jessel.",SELECT ?result WHERE { ?result <http://dbpedia.org/property/residence> ?v2 . ?v2 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/United_Kingdom>. <http://dbpedia.org/resource/Adelbert_Cronkhite> <http://dbpedia.org/property/awards> ?v3 . ?result <http://dbpedia.org/ontology/deathPlace> ?v3 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/AdministrativeRegion>. <http://dbpedia.org/resource/David_Jessel> <http://dbpedia.org/ontology/birthPlace> ?v2 . },"```sparql
SELECT ?decedent WHERE {
  # Find Adelbert Cronkhite's award and its country
  ?cronkhite dbo:award ?award .
  ?cronkhite rdfs:label ""Adelbert Cronkhite""@en .
  
  ?award dbo:country ?country .

  # Find David Jessel's birthplace that is a British state
  ?jessel dbo:birthPlace ?birthPlace .
  ?jessel rdfs:label ""David Jessel""@en .
  
  ?birthPlace rdf:type dbo:State .
  ?birthPlace dbo:country dbc:United_Kingdom .

  # Find decedent at the award's country who is a resident of David Jessel's birthplace
  ?decedent dbo:deathPlace ?country .
  ?decedent dbo:residence ?birthPlace .
}
```",4,7,5,2,2,3,2,20,0,0,1,0,0.0,0
456,44,val,"Give me the band of the band, that is a musical artist, of Dean Brody and spouse of Danielle Spencer (Australian actress) and professional in the alter ego of The Shadow.",SELECT ?result WHERE { <http://dbpedia.org/resource/The_Shadow> <http://dbpedia.org/property/alterEgo> ?v4 . <http://dbpedia.org/resource/Dean_Brody> <http://dbpedia.org/ontology/associatedMusicalArtist> ?v2 . ?v2 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . <http://dbpedia.org/resource/Danielle_Spencer_(Australian_actress)> <http://dbpedia.org/ontology/spouse> ?result . ?result <http://dbpedia.org/property/occupation> ?v4 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. },"```sparql
SELECT ?band ?spouse ?professional WHERE {
  # Find Dean Brody's band
  ?deanBrody dbo:associatedBand ?band .
  ?deanBrody rdfs:label ""Dean Brody""@en .

  # Find Danielle Spencer's spouse
  ?danielleSpencer dbo:spouse ?spouse .
  ?danielleSpencer rdfs:label ""Danielle Spencer""@en .

  # Find the professional identity of The Shadow
  ?shadow dbo:alterEgo ""The Shadow""@en ;
          dbo:professionalIdentity ?professional .

  # Connect the band with the spouse and their professional identity
  FILTER (?band = ?spouse || ?band = ?professional)
}
```",5,6,6,2,3,3,3,71,0,0,1,0,0.0,0
433,40,val,"Give me the professional in Musician and associated musical artist of Bill Evans and associated musical artist of the person born, that is a musical artist and an artist, as the persona of Paul Chambers.","SELECT ?result WHERE { ?result <http://dbpedia.org/property/occupation> ""Musician""@en . <http://dbpedia.org/resource/Paul_Chambers> <http://xmlns.com/foaf/0.1/givenName> ?v2 . ?v1 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?v1 <http://dbpedia.org/property/birthName> ?v2 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. <http://dbpedia.org/resource/Bill_Evans> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . }","```sparql
SELECT ?billEvansProfession ?billEvansAssociatedArtist ?paulChambersPersona ?paulChambersAssociatedArtist WHERE {
  # Bill Evans' profession as a musician
  ?billEvans dbo:profession dbr:Musician .
  
  # Associated musical artist of Bill Evans
  ?billEvans dbo:associatedMusicalArtist ?billEvansAssociatedArtist .

  # Paul Chambers, known for his persona and birth details
  ?paulChambers foaf:name ""Paul Chambers""@en ;
                dbo:profession dbr:Musician ;
                dbo:birthPlace ?birthPlace .
  
  # Associated musical artist of Paul Chambers
  ?paulChambers dbo:associatedMusicalArtist ?paulChambersAssociatedArtist .

  FILTER (str(?billEvans) = str(dbr:Bill_Evans))
  FILTER (str(?paulChambers) = str(dbr:Paul_Chambers_(bassist)))
}
```",5,7,6,3,3,3,3,71,0,0,1,0,0.0,0
5,17,val,"Give me the birthplace of Gerald Regan and entity in the award of the associated musical artist, that is a band, of Rubén Colón Tarrats.",SELECT ?result WHERE { <http://dbpedia.org/resource/Rubén_Colón_Tarrats> <http://dbpedia.org/ontology/associatedMusicalArtist> ?v3 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Band>. ?result <http://dbpedia.org/ontology/country> ?v0 . <http://dbpedia.org/resource/Gerald_Regan> <http://dbpedia.org/ontology/birthPlace> ?result . ?v3 <http://dbpedia.org/property/awards> ?v0 . },"```sparql
# Part 1: Find the birthplace of Gerald Regan
SELECT ?birthPlace WHERE {
  ?regan dbo:birthPlace ?birthPlace .
  ?regan rdfs:label ""Gerald Regan""@en .
}

UNION

# Part 2: Find an entity in the award associated with a band linked to Rubén Colón Tarrats
SELECT ?awardEntity WHERE {
  # Assuming there is a direct or indirect link between Rubén Colón Tarrats and a musical artist (band)
  ?ruben dbo:musicalArtist ?artist .
  ?ruben rdfs:label ""Rubén Colón Tarrats""@en .

  # Ensure the artist is a band
  ?artist rdf:type dbo:Band .

  # Find an award associated with this band and retrieve related entities
  ?bandAward dbo:recipient ?artist .
  ?bandAward dbo:name ?awardName .
  
  # Retrieve any entity related to the award (e.g., ceremony, location)
  OPTIONAL { 
    ?bandAward dbo:event ?event .
    BIND(?event AS ?awardEntity)
  }
}
```",4,5,5,3,2,3,2,20,0,0,1,0,0.0,0
216,42,val,"Give me the player in the coach of Croatia national under-21 football team and player in Mario Ivanković and team of the person born, that is a sports manager and a soccer manager and a soccer player, on 1983-12-20.","SELECT ?result WHERE { <http://dbpedia.org/resource/Croatia_national_under-21_football_team> <http://dbpedia.org/ontology/coach> ?v2 . ?v2 <http://dbpedia.org/ontology/team> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerManager>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsManager>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerPlayer>. <http://dbpedia.org/resource/Mario_Ivanković> <http://dbpedia.org/ontology/team> ?result . ?v1 <http://dbpedia.org/ontology/birthDate> ""1983-12-20""^^<http://www.w3.org/2001/XMLSchema#date> . ?result <http://dbpedia.org/ontology/coach> ?v1 . }","```sparql
SELECT ?coach ?marioTeam ?person ?personTeam WHERE {
  # Find coach of Croatia national under-21 football team
  ?team dbo:coach ?coach .
  ?team rdfs:label ""Croatia national under-21 football team""@en .

  # Find Mario Ivanković's teams
  ?mario foaf:name ""Mario Ivanković"" .
  ?mario dbo:occupation ?occupation1 ;
         dbo:occupation ?occupation2 ;
         dbo:occupation ?occupation3 .
  FILTER (CONTAINS(LCASE(str(?occupation1)), ""sports manager"") &&
          CONTAINS(LCASE(str(?occupation2)), ""soccer manager"") &&
          CONTAINS(LCASE(str(?occupation3)), ""soccer player""))
  OPTIONAL { ?mario dbo:team ?marioTeam . }

  # Find person born on 1983-12-20 who is a sports manager, soccer manager, and player
  ?person dbo:birthDate ""1983-12-20""^^xsd:date ;
          dbo:occupation ?occupation4 ;
          dbo:occupation ?occupation5 ;
          dbo:occupation ?occupation6 .
  FILTER (CONTAINS(LCASE(str(?occupation4)), ""sports manager"") &&
          CONTAINS(LCASE(str(?occupation5)), ""soccer manager"") &&
          CONTAINS(LCASE(str(?occupation6)), ""soccer player""))
  OPTIONAL { ?person dbo:team ?personTeam . }
}
```",5,8,6,2,3,3,3,71,0,0,1,0,0.0,0
645,41,val,"Give me the commander in the force of Carlos Asensio Cabanillas and military force of the force, that is an event and a military conflict and a societal event, of Francisco Largo Caballero and leader of Ministry of the Army (Spain).",SELECT ?result WHERE { ?v2 <http://dbpedia.org/ontology/commander> ?result . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. <http://dbpedia.org/resource/Ministry_of_the_Army_(Spain)> <http://dbpedia.org/ontology/leader> ?result . ?v2 <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Carlos_Asensio_Cabanillas> . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?result <http://dbpedia.org/ontology/battle> ?v4 . ?v4 <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Francisco_Largo_Caballero> . },"```sparql
SELECT ?commander ?militaryForce ?leader WHERE {
  # Carlos Asensio Cabanillas' commander in a military force
  ?cCarlosAsensio dbo:memberOf ?force .
  ?cCarlosAsensio rdfs:label ""Carlos Asensio Cabanillas""@en .
  ?force dbo:commander ?commander .

  # Francisco Largo Caballero's involvement in a military conflict that is also an event and societal event
  ?fLargoCaballero dbo:involvedIn ?conflict .
  ?fLargoCaballero rdfs:label ""Francisco Largo Caballero""@en .
  ?conflict rdf:type dbo:MilitaryConflict ;
            rdf:type dbo:Event ;
            rdf:type dbo:SocietalEvent .

  # Military force involved in the conflict
  ?conflict dbo:militaryForce ?militaryForce .

  # Leader of Ministry of the Army (Spain) during Francisco Largo Caballero's time
  ?ministry dbo:leader ?leader .
  ?ministry rdfs:label ""Ministry of the Army (Spain)""@en .
}
```",5,8,6,2,3,3,3,71,0,0,1,0,0.0,0
582,41,val,"Give me the reference to the residence of Hirotaka Sugawara and player in the father, that is an athlete and a soccer manager and a sports manager, of Masami Nagasawa and figure known as --10-19.","SELECT ?result WHERE { ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerManager>. ?result <http://xmlns.com/foaf/0.1/name> ?v2 . <http://dbpedia.org/resource/Hirotaka_Sugawara> <http://dbpedia.org/property/residence> ?v2 . ?v4 <http://dbpedia.org/ontology/team> ?result . ?result <http://dbpedia.org/property/nickname> ""--10-19""^^<http://www.w3.org/2001/XMLSchema#gMonthDay> . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsManager>. <http://dbpedia.org/resource/Masami_Nagasawa> <http://dbpedia.org/property/father> ?v4 . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Athlete>. }","```sparql
SELECT ?residence ?father ?figure WHERE {
  # Find Hirotaka Sugawara's residence
  ?sugawara dbo:residence ?residence .
  ?sugawara rdfs:label ""Hirotaka Sugawara""@en .

  # Find the father of Masami Nagasawa who is an athlete, soccer manager, and sports manager
  ?nagasawa dbo:parent ?father .
  ?nagasawa rdfs:label ""Masami Nagasawa""@en .
  
  OPTIONAL {
    ?father rdf:type dbo:Athlete ;
            dbo:sportManagerRole dbo:SoccerManager ;
            dbo:managerRole dbo:SportsManager .
  }

  # Identify the figure known as --10-19
  OPTIONAL {
    ?figure rdfs:label ""--10-19""@en .
  }
}
```",5,8,6,2,3,3,3,71,0,0,1,0,0.0,0
773,45,val,"Give me the parent of the child, that is a royalty, of the father, that is an office holder and a royalty, of Carloman of Bavaria and parent of Carloman of Bavaria and spouse of Louis the German.",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Carloman_of_Bavaria> . ?v1 <http://dbpedia.org/ontology/parent> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v1 <http://dbpedia.org/property/father> ?v0 . <http://dbpedia.org/resource/Louis_the_German> <http://dbpedia.org/ontology/spouse> ?result . <http://dbpedia.org/resource/Carloman_of_Bavaria> <http://dbpedia.org/property/father> ?v0 . },"```sparql
SELECT ?parent WHERE {
  # Step 1: Identify Carloman of Bavaria and his father
  ?carloman dbo:child ?father .
  ?carloman rdfs:label ""Carloman, Duke of Bavaria""@en .

  # Step 2: Ensure the father is an office holder and royalty
  ?father dbo:officeHolder ?office .
  ?father rdf:type dbo:Monarch .

  # Step 3: Identify Louis the German as the spouse of Carloman's father
  ?father dbo:spouse ?louisGerman .
  ?louisGerman rdfs:label ""Louis the German""@en .

  # Step 4: Find a child of Louis the German who is royalty
  ?louisGerman dbo:child ?royalChild .
  ?royalChild rdf:type dbo:Monarch .

  # Step 5: Determine the parent of this royal child
  ?royalChild dbo:parent ?parent .
}
```",5,8,6,3,3,3,3,71,0,0,1,0,0.0,0
978,15,val,"Give me the band member of the professional, that is a musical artist and an artist, in the award of Michel Claparède and band member of Chicane (musician).",SELECT ?result WHERE { ?v1 <http://dbpedia.org/property/occupation> ?v0 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. ?result <http://dbpedia.org/ontology/associatedMusicalArtist> ?v1 . <http://dbpedia.org/resource/Michel_Claparède> <http://dbpedia.org/property/awards> ?v0 . ?result <http://dbpedia.org/ontology/associatedMusicalArtist> <http://dbpedia.org/resource/Chicane_(musician)> . },"```sparql
SELECT ?bandMember WHERE {
  # Find the award associated with Michel Claparède
  ?award dbo:recipient ?recipient .
  ?award rdfs:label ""Michel Claparède Award""@en .

  # Identify members of Chicane
  ?chicaneMember dbo:memberOf ?band .
  ?band rdfs:label ""Chicane (musician)""@en .

  # Check if the band member is a recipient of the award and an artist
  FILTER (?recipient = ?chicaneMember)
  
  # Ensure they are recognized as both musical artists and general artists
  ?chicaneMember dbo:occupation ?occupation .
  VALUES ?occupation { ""musical artist"" ""artist"" }
}
```",4,6,5,3,2,3,2,20,0,0,2,0,0.0,0
465,53,val,"Give me the spouse of Archduchess Barbara of Austria and successor of the child, that is a royalty, of Anne of Brittany and successor of the child of the parent of Ercole II d'Este, Duke of Ferrara.","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/spouse> <http://dbpedia.org/resource/Archduchess_Barbara_of_Austria> . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. <http://dbpedia.org/resource/Ercole_II_d'Este,_Duke_of_Ferrara> <http://dbpedia.org/ontology/parent> ?v3 . ?v1 <http://dbpedia.org/ontology/successor> ?result . ?v2 <http://dbpedia.org/property/father> ?v3 . ?v2 <http://dbpedia.org/ontology/successor> ?result . <http://dbpedia.org/resource/Anne_of_Brittany> <http://dbpedia.org/ontology/child> ?v1 . }","```sparql
SELECT ?spouse WHERE {
  # Find spouse of Archduchess Barbara of Austria
  ?barbara dbo:spouse ?spouse .
  ?barbara rdfs:label ""Archduchess Barbara of Austria""@en .

  # Find child of Anne of Brittany who is royalty and their successor
  OPTIONAL {
    ?anne dbo:child ?royalChild .
    ?anne rdfs:label ""Anne of Brittany""@en .
    FILTER (regex(str(?royalChild), ""Royalty"", ""i""))
    
    ?royalChild dbo:succ ?successor1 .
  }

  # Find parent of Ercole II d'Este, Duke of Ferrara
  OPTIONAL {
    ?ercole dbo:parent ?parent .
    ?ercole rdfs:label ""Ercole II d'Este, Duke of Ferrara""@en .

    # Find child of this parent and their successor
    ?parent dbo:child ?child .
    ?child dbo:succ ?successor2 .
  }

  # Check if the spouse matches either successor
  FILTER (?spouse = ?successor1 || ?spouse = ?successor2)
}
```",6,7,7,3,3,3,3,71,0,0,1,0,0.0,0
933,40,val,"Give me the band of the band of the band, that is an artist and a musical artist, of The Ramong Sound and reference to Alan Warner and band of The Ramong Sound.","SELECT ?result WHERE { <http://dbpedia.org/resource/The_Ramong_Sound> <http://dbpedia.org/ontology/associatedMusicalArtist> ?v3 . ?result <http://xmlns.com/foaf/0.1/name> ""Alan Warner""@en . <http://dbpedia.org/resource/The_Ramong_Sound> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v1 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v3 <http://dbpedia.org/ontology/associatedMusicalArtist> ?v1 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. }","```sparql
SELECT ?thirdBand WHERE {
  # Find the band of The Ramones
  ?ramones dbo:bandMember ?member .
  ?ramones rdfs:label ""The Ramones""@en .

  # Ensure member is a musical artist and an artist
  ?member rdf:type dbo:MusicalArtist ;
          rdf:type dbo:Artist .

  # Find the band of that member
  ?member dbo:bandMember ?secondBand .
  ?secondBand rdf:type dbo:MusicalArtist ;
              rdf:type dbo:Artist .

  # Find the band of the second band
  ?secondBand dbo:bandMember ?thirdBand .
  ?thirdBand rdf:type dbo:MusicalArtist ;
             rdf:type dbo:Artist .

  # Reference to Alan Warner in relation to The Ramones
  OPTIONAL {
    ?ramones dbo:associatedWith ?alanWarner .
    ?alanWarner rdfs:label ""Alan Warner""@en .
  }
}
```",5,7,6,3,3,3,3,71,0,0,1,0,0.0,0
791,48,val,"Give me the father of the child, that is a royalty, of Emperor Takakura and spouse of the spouse, that is a royalty, of the reference to Emperor Takakura.","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/spouse> ?v2 . ?v1 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Emperor_Takakura> . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v2 <http://dbpedia.org/ontology/spouse> ?v3 . ?v1 <http://dbpedia.org/property/father> ?result . ?v3 <http://xmlns.com/foaf/0.1/name> ""Emperor Takakura""@en . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. }","```sparql
SELECT ?royalChildFather ?royalSpouseFather WHERE {
  # Find a child of Emperor Takakura who is royalty
  ?takakura dbo:child ?royalChild .
  ?takakura rdfs:label ""Emperor Takakura""@en .
  
  # Ensure the child is recognized as royalty (e.g., by title or label)
  OPTIONAL {
    ?royalChild dbo:title ?title .
    FILTER regex(str(?title), ""Prince|Princess"", ""i"")
  }
  
  # Find father of this royal child
  ?royalChild dbo:parent ?royalChildFather .

  # Find a spouse of Emperor Takakura who is royalty
  OPTIONAL {
    ?takakura dbo:spouse ?royalSpouse .
    
    # Ensure the spouse is recognized as royalty (e.g., by title or label)
    FILTER regex(str(?royalSpouse), ""Imperial Princess|Prince"", ""i"")
  }
  
  # Find father of this royal spouse
  OPTIONAL {
    ?royalSpouse dbo:parent ?royalSpouseFather .
  }
}
```",5,7,6,3,2,3,3,71,1,33500,0,2.9849855228202142e-05,1.0,5.969792848188167e-05
445,41,val,"Give me the entity in the residence, that is a country, of Anna Sharkey and death place of the awardee of Royal Astronomical Society and entity in United Kingdom.",SELECT ?result WHERE { ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. <http://dbpedia.org/resource/Anna_Sharkey> <http://dbpedia.org/property/residence> ?v2 . ?result <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/United_Kingdom> . ?v4 <http://dbpedia.org/ontology/deathPlace> ?result . ?result <http://dbpedia.org/ontology/location> ?v2 . ?v4 <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/Royal_Astronomical_Society> . },"```sparql
SELECT DISTINCT ?commonEntity WHERE {
  # Anna Sharkey's residence country
  ?anna dbo:residence ?residence .
  ?anna rdfs:label ""Anna Sharkey""@en .
  ?residence a dbo:Country .

  # Awardee of the Royal Astronomical Society and their death place
  ?awardee dbo:awardReceived ?rasAward .
  ?rasAward rdfs:label ""Royal Astronomical Society""@en .
  ?awardee dbo:deathPlace ?deathPlace .

  # Entity in the United Kingdom
  ?ukEntity dbo:location ?location .
  ?location rdfs:label ""United Kingdom""@en .

  # Find common entity among residence, death place, and UK entity
  VALUES ?commonEntity { ?residence ?deathPlace ?ukEntity }
}
```",5,6,6,2,3,3,3,71,0,0,1,0,0.0,0
791,51,val,"Give me the predecessor of the child of Emperor Takakura and father of the child, that is a royalty, of the father, that is a royalty and an office holder, of Emperor Antoku.",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/successor> ?v4 . ?v2 <http://dbpedia.org/property/father> ?v1 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v2 <http://dbpedia.org/property/father> ?result . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v4 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Emperor_Takakura> . <http://dbpedia.org/resource/Emperor_Antoku> <http://dbpedia.org/property/father> ?v1 . },"```sparql
SELECT ?predecessor WHERE {
  # Find Emperor Takakura's child
  ?takakura dbo:child ?child .
  ?takakura rdfs:label ""Emperor Takakura""@en .

  # Find predecessor of this child
  ?child dbo:predecessor ?predecessor .

  # Find father of the child who is royalty
  OPTIONAL {
    ?child dbo:parent ?father .
    ?father rdf:type dbo:Monarch .
  }

  # Find father of this royal father, ensuring he is royalty and an office holder
  OPTIONAL {
    ?father dbo:parent ?grandFather .
    ?grandFather rdf:type dbo:Monarch .
    ?grandFather dbo:officeHolder ?office .
  }
  
  # Identify Emperor Antoku's father who is royalty and an office holder
  ?antoku dbo:child ?takakura .
  ?antoku rdfs:label ""Emperor Antoku""@en .
  ?antoku dbo:parent ?fatherAntoku .
  ?fatherAntoku rdf:type dbo:Monarch .
  ?fatherAntoku dbo:officeHolder ?officeAntoku .

  # Find the father of this individual
  OPTIONAL {
    ?grandFather dbo:parent ?greatGrandFather .
  }
}
```",5,8,6,3,2,3,3,71,0,0,1,0,0.0,0
573,51,val,"Give me the parent of the author, that is a politician and an office holder, of the work of John Quincy Adams and person decedent at the residence, that is a settlement, of William J. Phelan.",SELECT ?result WHERE { <http://dbpedia.org/resource/William_J._Phelan> <http://dbpedia.org/property/residence> ?v4 . ?v1 <http://dbpedia.org/property/author> <http://dbpedia.org/resource/John_Quincy_Adams> . ?v1 <http://dbpedia.org/property/author> ?v2 . ?v2 <http://dbpedia.org/ontology/parent> ?result . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?result <http://dbpedia.org/ontology/deathPlace> ?v4 . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. },"```sparql
SELECT ?parent WHERE {
  # Find works authored by John Quincy Adams
  ?work dbo:author ?author .
  ?work dbo:wikiPageRedirects ?redirect .
  ?redirect rdfs:label ""John Quincy Adams""@en .

  # Ensure the author is a politician and office holder
  ?author dbo:occupation ?occupation .
  FILTER (
    EXISTS { ?occupation rdfs:label ""Politician""@en . }
    && EXISTS { ?officeHolder dbo:officeHolder ?author . }
  )

  # Get the parent of this author
  ?author dbo:parent ?parent .

  # Find William J. Phelan's residence
  ?phelan dbo:residence ?residence .
  ?phelan rdfs:label ""William J. Phelan""@en .

  # Ensure the residence is a settlement
  ?residence rdf:type dbo:Settlement .

  # Identify any person who died at this residence
  ?decedent dbo:placeOfDeath ?residence .
}
```",5,8,6,3,2,3,3,71,0,0,2,0,0.0,0
329,23,val,"Give me the birthplace of the author of The Tailor and Ansty and entity in the birthplace, that is an organisation and a country, of Robert Bates (loyalist).",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/country> ?v1 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. <http://dbpedia.org/resource/The_Tailor_and_Ansty> <http://dbpedia.org/property/author> ?v2 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. ?v2 <http://dbpedia.org/ontology/birthPlace> ?result . <http://dbpedia.org/resource/Robert_Bates_(loyalist)> <http://dbpedia.org/ontology/birthPlace> ?v1 . },"```sparql
# Query to get the birthplace of the author of ""The Tailor and Ansty""
SELECT ?author ?birthPlace WHERE {
  ?work dbo:author ?author .
  ?work rdfs:label ""The Tailor and Ansty""@en .
  ?author dbo:birthPlace ?birthPlace .
}

# Query to find an entity in the birthplace that is both an organization and a country
SELECT DISTINCT ?entity WHERE {
  VALUES (?birthPlace) { 
    # Placeholder for actual birthplace URI from previous query result
  }
  ?entity dbo:location ?birthPlace .
  ?entity rdf:type dbpedia-owl:Country .
  ?entity rdf:type dbpedia-owl:Organization .
}

# Query to get the birthplace of Robert Bates (loyalist)
SELECT ?batesBirthPlace WHERE {
  ?bates rdfs:label ""Robert Bates (loyalist)""@en .
  ?bates dbo:birthPlace ?batesBirthPlace .
}

# Query to find an entity in Robert Bates' birthplace that is both an organization and a country
SELECT DISTINCT ?entity WHERE {
  VALUES (?batesBirthPlace) { 
    # Placeholder for actual birthplace URI from previous query result
  }
  ?entity dbo:location ?batesBirthPlace .
  ?entity rdf:type dbpedia-owl:Country .
  ?entity rdf:type dbpedia-owl:Organization .
}
```",4,6,5,2,2,2,3,28,0,0,1,0,0.0,0
98,7,val,Give me the child of Emperor Go-Shirakawa and parent of the successor of Emperor Nijō.,SELECT ?result WHERE { <http://dbpedia.org/resource/Emperor_Nijō> <http://dbpedia.org/ontology/successor> ?v0 . ?result <http://dbpedia.org/ontology/parent> <http://dbpedia.org/resource/Emperor_Go-Shirakawa> . ?v0 <http://dbpedia.org/ontology/parent> ?result . },"```sparql
SELECT ?commonIndividual WHERE {
  # Find children of Emperor Go-Shirakawa
  ?child dbo:parent dbc:Emperor_Go-Shirakawa .
  
  # Identify the successor of Emperor Nijō and their parent
  ?successor dbo:successor dbc:Emperor_Nijo .
  ?successorParent dbo:parent ?successor .

  # Find common individual who is both a child of Go-Shirakawa and a parent of the successor of Nijō
  VALUES ?commonIndividual { ?child ?successorParent }
}
```",3,3,4,2,2,2,2,9,0,0,1,0,0.0,0
926,50,val,"Give me the child of the father, that is a royalty, of Mustafa III and successor of the child of the spouse of Şermi Kadın.",SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/spouse> <http://dbpedia.org/resource/Şermi_Kadın> . <http://dbpedia.org/resource/Mustafa_III> <http://dbpedia.org/property/father> ?v0 . ?v0 <http://dbpedia.org/ontology/child> ?result . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v3 <http://dbpedia.org/property/father> ?v1 . ?v3 <http://dbpedia.org/ontology/successor> ?result . },"```sparql
SELECT ?childOfFather ?successor WHERE {
  # Step 1: Identify Mustafa III and his father
  ?mustafaIII dbo:parent ?father .
  ?mustafaIII rdfs:label ""Mustafa III""@en .

  # Step 2: Find a child of Mustafa III's father who is royalty
  ?father dbo:child ?childOfFather .
  FILTER (regex(str(?childOfFather), ""royalty"", ""i""))

  # Step 3: Identify Şermi Kadın and her spouse
  ?sermiKadin dbo:spouse ?spouse .
  ?sermiKadin rdfs:label ""Şermi Kadın""@en .

  # Step 4: Find the child of Şermi Kadın's spouse
  ?spouse dbo:child ?childOfSpouse .

  # Step 5: Determine the successor of this child
  OPTIONAL {
    ?childOfSpouse dbo:succeededBy ?successor .
  }
}
```",5,6,6,3,2,3,3,71,0,0,1,0,0.0,0
456,42,val,"Give me the spouse of the actor of Pacific Drive and professional in  and band of the band, that is a musical artist, of Dean Brody.","SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?v2 <http://dbpedia.org/ontology/spouse> ?result . ?result <http://dbpedia.org/property/occupation> """"@en . <http://dbpedia.org/resource/Pacific_Drive> <http://dbpedia.org/property/starring> ?v2 . ?v1 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . <http://dbpedia.org/resource/Dean_Brody> <http://dbpedia.org/ontology/associatedMusicalArtist> ?v1 . }","```sparql
SELECT ?spouse ?profession ?bandArtist WHERE {
  # Find the actor of ""Pacific Drive""
  ?film dbo:starring ?actor .
  ?film rdfs:label ""Pacific Drive""@en .

  # Get the spouse of this actor
  ?actor dbo:spouse ?spouse .

  # Identify the professional field of the spouse
  ?spouse dbo:profession ?profession .

  # Find Dean Brody's band and a musical artist within that band
  ?deanBrody dbo:band ?band .
  ?deanBrody rdfs:label ""Dean Brody""@en .
  
  ?band dbo:musicalArtist ?bandArtist .
}
```",5,6,6,2,3,3,3,71,0,0,1,0,0.0,0
433,51,val,"Give me the professional in the profession of the writer of Slowhand at 70 – Live at the Royal Albert Hall and associated musical artist of the associated musical artist, that is an artist and a musical artist, of Scott LaFaro.",SELECT ?result WHERE { <http://dbpedia.org/resource/Slowhand_at_70_–_Live_at_the_Royal_Albert_Hall> <http://dbpedia.org/property/writer> ?v1 . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?result <http://dbpedia.org/property/occupation> ?v2 . ?v4 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . <http://dbpedia.org/resource/Scott_LaFaro> <http://dbpedia.org/ontology/associatedMusicalArtist> ?v4 . ?v1 <http://dbpedia.org/property/occupation> ?v2 . },"```sparql
SELECT ?professional WHERE {
  # Identify Eric Clapton as the writer of ""Slowhand at 70 – Live at the Royal Albert Hall""
  ?album dbo:writer ?clapton .
  ?album rdfs:label ""Slowhand at 70 – Live at the Royal Albert Hall""@en .

  # Determine Eric Clapton's profession
  ?clapton dbo:profession ?profession .
  FILTER (str(?profession) = ""musician"" || str(?profession) = ""guitarist"" || str(?profession) = ""singer-songwriter"")

  # Identify associated musical artist of Scott LaFaro
  ?laFarosArtist dbo:associatedMusicalArtist ?clapton .
  ?laFaro rdfs:label ""Scott LaFaro""@en .

  # Find an artist and a musical artist associated with Eric Clapton
  ?professional dbo:profession ?artistProfession .
  ?professional dbo:profession ?musicianProfession .
  FILTER (str(?artistProfession) = ""artist"" && str(?musicianProfession) = ""musical artist"")
  
  # Ensure the professional is associated with both Eric Clapton and Scott LaFaro
  ?clapton dbo:associatedMusicalArtist ?professional .
}
```",5,7,6,3,2,3,3,71,0,0,4,0,0.0,0
791,53,val,"Give me the predecessor of Emperor Antoku and father of the child, that is a royalty, of Emperor Takakura and spouse of the spouse, that is a royalty, of the reference to Emperor Takakura.","SELECT ?result WHERE { ?v1 <http://dbpedia.org/property/father> ?result . ?result <http://dbpedia.org/ontology/successor> <http://dbpedia.org/resource/Emperor_Antoku> . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v2 <http://dbpedia.org/ontology/spouse> ?v3 . ?v1 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Emperor_Takakura> . ?v3 <http://xmlns.com/foaf/0.1/name> ""Emperor Takakura""@en . ?result <http://dbpedia.org/ontology/spouse> ?v2 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. }","```sparql
SELECT ?predecessor ?father WHERE {
  # Find predecessor of Emperor Antoku
  ?antoku dbo:predecessor ?predecessor .
  ?antoku rdfs:label ""Emperor Antoku""@en .

  # Find a royal child of Emperor Takakura and their father
  OPTIONAL {
    ?takakura dbo:child ?royalChild .
    ?takakura rdfs:label ""Emperor Takakura""@en .
    FILTER (regex(str(?royalChild), ""Imperial"", ""i"")) # Assuming royalty has 'Imperial' in their title
    ?royalChild dbo:parent ?father .
  }

  # Find spouse of Emperor Takakura who is royalty and their spouse's spouse
  OPTIONAL {
    ?takakura dbo:spouse ?spouse .
    FILTER (regex(str(?spouse), ""Imperial"", ""i"")) # Assuming royalty has 'Imperial' in their title
    ?spouse dbo:spouse ?spousesSpouse .
  }
}
```",6,8,7,3,3,3,3,71,1,0,0,1.0,1.0,1.0
47,52,val,"Give me the office of Ajoy Mukherjee and office of the administration of the commander, that is a politician, in Operation Green Hunt and office of the awardee of Banga Bhushan.",SELECT ?result WHERE { ?v5 <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/Banga_Bhushan> . <http://dbpedia.org/resource/Ajoy_Mukherjee> <http://dbpedia.org/property/office> ?result . ?v2 <http://dbpedia.org/property/office> ?result . <http://dbpedia.org/resource/Operation_Green_Hunt> <http://dbpedia.org/ontology/commander> ?v3 . ?v2 <http://dbpedia.org/property/governor> ?v3 . ?v5 <http://dbpedia.org/property/office> ?result . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. },"```sparql
SELECT ?person ?office WHERE {
  # Find Ajoy Mukherjee's office
  OPTIONAL {
    ?mukherjee dbo:birthName ""Ajoy Kumar Mukherjee""@en .
    ?mukherjee dbo:office ?office .
  }

  # Find the administration of a politician in Operation Green Hunt
  OPTIONAL {
    ?operation rdfs:label ""Operation Green Hunt""@en .
    ?politician dbo:memberOf ?administration .
    ?politician dbo:occupation ""Politician""@en .
    ?operation dbo:participant ?politician .
    ?administration dbo:office ?office .
  }

  # Find the office of a Banga Bhushan awardee
  OPTIONAL {
    ?awardee dbo:award ""Banga Bhushan""@en .
    ?awardee dbo:office ?office .
  }
}
```",6,7,7,3,3,3,3,71,0,0,1,0,0.0,0
892,41,val,Give me the landmark at elevation of the award of Anna Ishii and entity in the profession of Henri Crolla and entity in Province of Reggio Emilia.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/elevation> ?v4 . ?result <http://dbpedia.org/ontology/country> ?v2 . <http://dbpedia.org/resource/Henri_Crolla> <http://dbpedia.org/property/occupation> ?v2 . ?result <http://dbpedia.org/ontology/province> <http://dbpedia.org/resource/Province_of_Reggio_Emilia> . <http://dbpedia.org/resource/Anna_Ishii> <http://dbpedia.org/property/awards> ?v4 . },"```sparql
SELECT ?landmark WHERE {
  # Find award associated with Anna Ishii and its rank/elevation
  ?award dbo:recipient dbr:Anna_Ishii .
  ?award dbo:elevation ?elevation .

  # Find profession of Henri Crolla
  ?crolla dbo:profession ?profession .
  ?crolla rdfs:label ""Henri_Crolla""@en .

  # Find entity in Province of Reggio Emilia
  ?entity dbo:location dbr:Province_of_Reggio_Emilia .
  
  # Find landmark at the same elevation as Anna Ishii's award
  ?landmark dbo:elevation ?elevation .
}
```",5,5,6,2,3,3,3,71,0,0,1,0,0.0,0
773,46,val,Give me the parent of the successor of Charles the Bald and spouse of the father of the parent of Bernard (son of Charles the Fat).,SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/spouse> ?result . <http://dbpedia.org/resource/Charles_the_Bald> <http://dbpedia.org/ontology/successor> ?v4 . ?result <http://dbpedia.org/ontology/child> ?v4 . ?v2 <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Bernard_(son_of_Charles_the_Fat)> . ?v2 <http://dbpedia.org/property/father> ?v1 . },"```sparql
SELECT ?parentOfSuccessor ?spouse WHERE {
  # Find Charles the Bald's successor
  ?charlesTheBald dbo:successor ?successor .
  ?charlesTheBald rdfs:label ""Charles the Bald""@en .

  # Find parent of the successor
  ?successor dbo:parent ?parentOfSuccessor .

  # Identify Bernard and his father Charles the Fat
  ?bernard dbo:father ?charlesTheFat .
  ?bernard rdfs:label ""Bernard (son of Charles the Fat)""@en .

  # Find parent of Charles the Fat
  ?charlesTheFat dbo:parent ?parentOfCharlesTheFat .

  # Find spouse of the parent of Charles the Fat
  ?parentOfCharlesTheFat dbo:spouse ?spouse .
}
```",5,5,6,3,2,3,3,71,0,0,1,0,0.0,0
582,40,val,"Give me the reference to the residence of the reference, that is a scientist, to Hirotaka Sugawara and figure known as --10-19 and player in Kazuaki Nagasawa.","SELECT ?result WHERE { ?result <http://xmlns.com/foaf/0.1/name> ?v1 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Scientist>. ?v2 <http://xmlns.com/foaf/0.1/name> ""Hirotaka Sugawara""@en . ?v2 <http://dbpedia.org/property/residence> ?v1 . <http://dbpedia.org/resource/Kazuaki_Nagasawa> <http://dbpedia.org/ontology/team> ?result . ?result <http://dbpedia.org/property/nickname> ""--10-19""^^<http://www.w3.org/2001/XMLSchema#gMonthDay> . }","```sparql
SELECT ?residence WHERE {
  # Find a scientist related to Hirotaka Sugawara and --10-19
  ?scientist dbo:occupation ""Scientist"" .
  
  OPTIONAL { 
    ?hirotaka rdfs:label ""Hirotaka Sugawara""@en .
    ?hirotaka dbo:relatedTo ?scientist .
  }
  
  OPTIONAL {
    ?figure rdfs:label ""--10-19""@en .
    ?figure dbo:relatedTo ?scientist .
  }

  # Ensure the scientist is also related to Kazuaki Nagasawa
  ?kazuaki rdfs:label ""Kazuaki Nagasawa""@en .
  ?kazuaki dbo:relatedTo ?scientist .

  # Retrieve the residence of this scientist
  ?scientist dbo:residence ?residence .
}
```",5,6,6,3,3,3,3,71,0,0,1,0,0.0,0
130,17,val,"Give me the entity in the administration, that is American, of the award of Živko Ključe and figure known as Vanderbilt Commodores.",SELECT ?result WHERE { <http://dbpedia.org/resource/Živko_Ključe> <http://dbpedia.org/property/awards> ?v0 . ?v3 <http://dbpedia.org/property/governor> ?v0 . ?v3 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/United_States>. ?result <http://dbpedia.org/property/nickname> <http://dbpedia.org/resource/Vanderbilt_Commodores> . ?result <http://dbpedia.org/ontology/state> ?v3 . },"```sparql
SELECT ?award ?americanEntity WHERE {
  # Step 1: Identify the award associated with Živko Ključe
  ?award dbo:recipient Živko_Ključe .
  
  # Step 2: Find the figure known as Vanderbilt Commodores
  ?figure rdfs:label ""Vanderbilt Commodores""@en .

  # Step 3: Determine an American entity involved in the administration of the award
  OPTIONAL {
    ?award dbo:administrator ?americanEntity .
    ?americanEntity dbo:nationality dbc:United_States .
  }
}
```",4,5,5,3,2,3,2,20,0,0,1,0,0.0,0
965,54,val,"Give me the parent of the child, that is a royalty, of the person born, that is a politician, on 1854-05-24 and spouse of the spouse of Princess Victoria of Hesse and by Rhine and parent of George Mountbatten, 2nd Marquess of Milford Haven.","SELECT ?result WHERE { ?v4 <http://dbpedia.org/property/father> ?v1 . ?result <http://dbpedia.org/ontology/spouse> ?v2 . <http://dbpedia.org/resource/Princess_Victoria_of_Hesse_and_by_Rhine> <http://dbpedia.org/ontology/spouse> ?v2 . ?v1 <http://dbpedia.org/ontology/birthDate> ""1854-05-24""^^<http://www.w3.org/2001/XMLSchema#date> . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. <http://dbpedia.org/resource/George_Mountbatten,_2nd_Marquess_of_Milford_Haven> <http://dbpedia.org/ontology/parent> ?result . ?v4 <http://dbpedia.org/ontology/parent> ?result . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. }","```sparql
SELECT ?parent WHERE {
  # Find the politician born on 1854-05-24
  ?politician dbo:birthDate ""1854-05-24""^^xsd:date ;
              rdf:type dbo:Politician .

  # Find the spouse of this politician
  ?politician dbo:spouse ?spouse1 .

  # Find Princess Victoria's spouse
  ?princess rdfs:label ""Princess Victoria of Hesse and by Rhine""@en .
  ?princess dbo:spouse ?spouse2 .

  # Identify the parent of George Mountbatten, 2nd Marquess of Milford Haven
  ?george rdfs:label ""George Mountbatten, 2nd Marquess of Milford Haven""@en .
  ?george dbo:parent ?parentOfGeorge .

  # Find common spouse between politician's spouse and Princess Victoria's spouse
  FILTER (?spouse1 = ?spouse2) .

  # Identify a royal child from this common spouse
  OPTIONAL {
    ?child dbo:parent ?commonSpouse .
    ?child rdf:type dbo:RoyalFamilyMember .
  }

  # Find the parent of this royal child
  OPTIONAL {
    ?child dbo:parent ?parent .
  }
}
```",6,8,7,3,3,3,3,71,0,0,1,0,0.0,0
965,50,val,"Give me the parent of the child, that is a royalty, of the person born, that is a politician, on 1854-05-24 and parent of the person born, that is a noble, as Prince George of Battenberg.","SELECT ?result WHERE { ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v0 <http://dbpedia.org/ontology/parent> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v0 <http://dbpedia.org/property/birthName> ""Prince George of Battenberg""@en . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Noble>. ?v3 <http://dbpedia.org/ontology/parent> ?result . ?v1 <http://dbpedia.org/ontology/birthDate> ""1854-05-24""^^<http://www.w3.org/2001/XMLSchema#date> . ?v3 <http://dbpedia.org/property/father> ?v1 . }","```sparql
SELECT ?parent WHERE {
  # Find the politician born on 1854-05-24
  ?politician dbo:birthDate ""1854-05-24""^^xsd:date ;
              rdf:type dbo:Politician .

  # Identify their child who is royalty
  ?child dbo:parent ?politician ;
         rdf:type dbo:RoyalFamilyMember .

  # Find the parent of this royal child
  ?child dbo:parent ?parent .

  # Ensure this person is also the parent of Prince George of Battenberg
  ?battenberg dbo:birthName ""Prince George of Battenberg""@en ;
              dbo:parent ?parent .
}
```",5,8,6,3,2,3,3,71,0,0,2,0,0.0,0
826,41,val,"Give me the successor of the child, that is a royalty, of Louis I, Grand Duke of Hesse and spouse of the child of Johann Heinrich Appel and predecessor of Louis IV, Grand Duke of Hesse.","SELECT ?result WHERE { <http://dbpedia.org/resource/Louis_I,_Grand_Duke_of_Hesse> <http://dbpedia.org/ontology/child> ?v4 . ?v4 <http://dbpedia.org/ontology/successor> ?result . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v2 <http://dbpedia.org/property/father> ""Johann Heinrich Appel""@en . ?result <http://dbpedia.org/ontology/successor> <http://dbpedia.org/resource/Louis_IV,_Grand_Duke_of_Hesse> . ?v2 <http://dbpedia.org/ontology/spouse> ?result . }","```sparql
SELECT ?successor WHERE {
  # Step 1: Identify Louis I, Grand Duke of Hesse
  ?louisI rdfs:label ""Louis I, Grand Duke of Hesse""@en .
  
  # Step 2: Find his child who is royalty
  ?child dbo:parent ?louisI ;
         rdf:type dbo:RoyalFamilyMember .

  # Step 3: Determine the spouse of this royal child
  ?spouse dbo:spouse ?child .

  # Step 4: Identify the child of Johann Heinrich Appel
  ?appelChild dbo:parent ?johannHeinrichAppel ;
              rdfs:label ""Johann Heinrich Appel""@en .
  
  # Step 5: Find the predecessor of Louis IV, Grand Duke of Hesse
  ?predecessor dbo:successor ?louisIV ;
               rdfs:label ""Louis IV, Grand Duke of Hesse""@en .

  # Step 6: Link these relationships
  FILTER (?spouse = ?appelChild)

  # Step 7: Identify the successor of this linked entity
  ?linkedEntity dbo:successor ?successor .
  FILTER (?linkedEntity = ?spouse)
}
```",5,6,6,2,3,3,3,71,0,0,1,0,0.0,0
456,48,val,"Give me the spouse of the actor of the movie, that is a work and a television show, with Ross Newton and band of the band, that is a musical artist, of Dean Brody.",SELECT ?result WHERE { ?v3 <http://dbpedia.org/property/starring> <http://dbpedia.org/resource/Ross_Newton> . <http://dbpedia.org/resource/Dean_Brody> <http://dbpedia.org/ontology/associatedMusicalArtist> ?v1 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?v1 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v3 <http://dbpedia.org/property/starring> ?v2 . ?v2 <http://dbpedia.org/ontology/spouse> ?result . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/TelevisionShow>. },"```sparql
SELECT ?spouse WHERE {
  # Find a movie or TV show featuring Ross Newton
  ?work dbo:actor ?rossNewton .
  ?rossNewton rdfs:label ""Ross Newton""@en .

  # Ensure the work is both a movie and a television show
  ?work rdf:type ?type .
  FILTER (?type IN (dbpedia-owl:Film, dbpedia-owl:TelevisionSeries))

  # Find Dean Brody's band
  ?deanBrody dbo:musicalArtist ?band .
  ?deanBrody rdfs:label ""Dean Brody""@en .

  # Identify the actor from Ross Newton's work who is also in Dean Brody's band
  ?actor dbo:member ?band .
  ?work dbo:actor ?actor .

  # Find the spouse of this actor
  ?actor dbo:spouse ?spouse .
}
```",5,8,6,3,2,3,3,71,0,0,1,0,0.0,0
124,51,val,"Give me the military force of the force, that is a societal event and a military conflict, of the person born on 1850-06-24 and military force of the war, that is an event and a military conflict and a societal event, of Frank Rhodes (British Army officer).","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/battle> ?v2 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. <http://dbpedia.org/resource/Frank_Rhodes_(British_Army_officer)> <http://dbpedia.org/ontology/battle> ?v4 . ?v1 <http://dbpedia.org/ontology/birthDate> ""1850-06-24""^^<http://www.w3.org/2001/XMLSchema#date> . ?result <http://dbpedia.org/ontology/battle> ?v4 . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?v2 <http://dbpedia.org/ontology/commander> ?v1 . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. }","```sparql
SELECT ?churchillForce ?rhodesForce WHERE {
  # Find the person born on June 24, 1850 (Winston Churchill)
  ?person dbo:dateOfBirth ""1850-06-24""^^xsd:date ;
          rdfs:label ""Winston Churchill""@en .
  
  # Identify a societal event and military conflict involving Winston Churchill
  ?event dbo:participant ?person ;
         rdf:type dbo:SocietalEvent, dbo:MilitaryConflict .
  
  # Find the military force of this event for Churchill
  ?event dbo:militaryForce ?churchillForce .

  # Find Frank Rhodes (British Army officer)
  ?rhodes rdfs:label ""Frank Rhodes""@en ;
          rdf:type dbo:Person ;
          dbo:occupation dbo:MilitaryOfficer .
  
  # Identify a societal event and military conflict involving Frank Rhodes
  ?warEvent dbo:participant ?rhodes ;
            rdf:type dbo:SocietalEvent, dbo:MilitaryConflict .

  # Find the military force of this war for Frank Rhodes
  ?warEvent dbo:militaryForce ?rhodesForce .
}
```",5,10,6,3,2,3,3,71,0,0,1085,0,0.0,0
124,52,val,"Give me the military force of Battle of Atbara and commander in the war, that is a societal event and a military conflict, of the reference, that is Australian and an organisation and a military unit, to 'A' Battery, Royal Australian Artillery and military force of the war, that is an event and a military conflict and a societal event, of Frank Rhodes (British Army officer).","SELECT ?result WHERE { ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?v3 <http://xmlns.com/foaf/0.1/name> ""'A' Battery, Royal Australian Artillery""@en . <http://dbpedia.org/resource/Frank_Rhodes_(British_Army_officer)> <http://dbpedia.org/ontology/battle> ?v5 . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?result <http://dbpedia.org/ontology/battle> ?v5 . ?v3 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Australia>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?v2 <http://dbpedia.org/ontology/commander> ?result . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryUnit>. ?result <http://dbpedia.org/ontology/battle> <http://dbpedia.org/resource/Battle_of_Atbara> . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v3 <http://dbpedia.org/ontology/battle> ?v2 . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. }","```sparql
SELECT ?battleForce ?commander ?australianOrg ?frankRhodesWar WHERE {
  # Battle of Atbara details
  ?atbara dbo:militaryConflict ?battle .
  ?atbara rdfs:label ""Battle of Atbara""@en .
  
  # Military force involved in the Battle of Atbara
  ?battle dbo:participatingMilitaryUnit ?battleForce .

  # Commander of the military conflict (Battle of Atbara)
  ?battle dbo:commander ?commander .

  # A Battery, Royal Australian Artillery and its related organization
  ?battery rdfs:label ""A Battery, Royal Australian Artillery""@en .
  ?battery dbo:partOf ?australianOrg .
  
  FILTER (regex(str(?australianOrg), ""Australia"", ""i"") && 
          regex(str(?australianOrg), ""military unit"", ""i""))

  # Frank Rhodes and the military conflict he was involved in
  ?frankRhodes dbo:birthName ""Frank Rhodes""@en .
  ?frankRhodes dbo:militaryConflict ?frankRhodesWar .

  FILTER (regex(str(?frankRhodesWar), ""military conflict"", ""i"") &&
          regex(str(?frankRhodesWar), ""societal event"", ""i""))
}
```",6,14,7,3,3,3,3,71,0,0,1,0,0.0,0
170,22,val,Give me the birth place of the awardee of People's Artist of Russia and entity in the work of International Energy Agency.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/country> ?v2 . ?v3 <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/People's_Artist_of_Russia> . ?v2 <http://dbpedia.org/property/author> <http://dbpedia.org/resource/International_Energy_Agency> . ?v3 <http://dbpedia.org/ontology/birthPlace> ?result . },"```sparql
SELECT ?birthPlace WHERE {
  # Find individuals awarded People's Artist of Russia
  ?person dbo:award ""People's Artist of Russia"" .
  
  # Check if the person is associated with the International Energy Agency
  OPTIONAL { 
    ?person dbo:memberOf <http://dbpedia.org/resource/International_Energy_Agency> .
  }
  
  # Retrieve birthplace of the identified individual
  ?person dbo:birthPlace ?birthPlace .
}
```",4,4,5,2,2,2,3,28,0,0,12,0,0.0,0
839,40,val,"Give me the band of the person born, that is a musical artist, as the persona of Kevin Russell (musician) and band of Peter Schorowsky and band of Matthias Röhr.",SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. <http://dbpedia.org/resource/Kevin_Russell_(musician)> <http://xmlns.com/foaf/0.1/givenName> ?v2 . ?v1 <http://dbpedia.org/property/birthName> ?v2 . ?result <http://dbpedia.org/ontology/bandMember> <http://dbpedia.org/resource/Peter_Schorowsky> . ?v1 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?result <http://dbpedia.org/ontology/bandMember> <http://dbpedia.org/resource/Matthias_Röhr> . },"```sparql
SELECT ?person ?bandLabel WHERE {
  # Kevin Russell (musician)
  VALUES ?person { 
    dbpedia:Kevin_Russell_(musician) 
    dbpedia:Peter_Schorowsky 
    dbpedia:Matthias_Röhr 
  }
  
  OPTIONAL {
    ?person dbo:band ?band .
    FILTER (?person = dbpedia:Kevin_Russell_(musician))
  }

  OPTIONAL {
    ?person dbo:associatedBand ?band .
    FILTER (?person = dbpedia:Peter_Schorowsky)
  }

  OPTIONAL {
    ?person dbo:associatedBand ?band .
    FILTER (?person = dbpedia:Matthias_Röhr)
  }
  
  SERVICE wikibase:label { bd:serviceParam wikibase:language ""[AUTO_LANGUAGE],en"". }
}
```",5,6,6,3,3,3,3,71,0,0,1,0,0.0,0
507,50,val,"Give me the professional in the profession of Guy Ferland and director of the movie, that is a movie and a work, with the person born on 1919-06-17.","SELECT ?result WHERE { ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?v4 <http://dbpedia.org/property/starring> ?v0 . ?v4 <http://dbpedia.org/ontology/director> ?result . <http://dbpedia.org/resource/Guy_Ferland> <http://dbpedia.org/property/occupation> ?v3 . ?result <http://dbpedia.org/property/occupation> ?v3 . ?v0 <http://dbpedia.org/ontology/birthDate> ""1919-06-17""^^<http://www.w3.org/2001/XMLSchema#date> . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Film>. }","```sparql
SELECT ?director WHERE {
  # Step 1: Get Guy Ferland's profession
  ?guyFerland dbo:profession ?profession .
  ?guyFerland rdfs:label ""Guy Ferland""@en .

  # Step 2: Find other professionals in the same field
  ?otherPerson dbo:profession ?profession .

  # Step 3: Identify directors of a movie that is both a movie and a work
  ?movie rdf:type dbpedia-owl:Film .
  ?movie rdf:type dbpedia-owl:CreativeWork .
  ?movie dbo:director ?director .
  
  # Ensure the director is one of the professionals in the same field as Guy Ferland
  FILTER (?otherPerson = ?director)

  # Step 4: Find the person born on June 17, 1919
  ?person dbo:birthday ""1919-06-17""^^xsd:date .
  
  # Ensure the director is the person born on this date
  FILTER (?director = ?person)
}
```",5,7,6,3,2,3,3,71,0,0,1,0,0.0,0
987,54,val,"Give me the entity in Montenegro and birth place of the actor of the show, that is a film, with Emir Hadžihafizbegović and birth place of the band, that is an artist and a musical artist, of Šako Polumenta.",SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/starring> <http://dbpedia.org/resource/Emir_Hadžihafizbegović> . ?result <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Montenegro> . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. ?v1 <http://dbpedia.org/property/starring> ?v4 . <http://dbpedia.org/resource/Šako_Polumenta> <http://dbpedia.org/ontology/associatedMusicalArtist> ?v2 . ?v2 <http://dbpedia.org/ontology/birthPlace> ?result . ?v4 <http://dbpedia.org/ontology/birthPlace> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Film>. },"```sparql
SELECT DISTINCT ?entityInMontenegro ?bandBirthPlace WHERE {
  # Step 1: Identify films featuring Emir Hadžihafizbegović
  ?film dbo:starring ?actor .
  ?film dbo:actorEmirHadžihafizbegović ""Emir Hadžihafizbegović""@en .

  # Step 2: Find the actor's birthplace
  ?actor dbo:birthPlace ?birthPlace .

  # Step 3: Find an entity in Montenegro related to this birthplace
  ?entityInMontenegro dbo:location ?montenegro .
  ?montenegro rdfs:label ""Montenegro""@en .
  FILTER (?birthPlace = ?entityInMontenegro)

  # Step 4: Identify the band of Šako Polumenta
  ?band dbo:member Šako_Polumenta .
  ?band rdf:type dbo:Band .
  ?band rdf:type dbo:MusicalArtist .

  # Step 5: Find the birthplace of this band
  ?band dbo:birthPlace ?bandBirthPlace .
}
```",6,9,7,3,3,3,3,71,0,0,1,0,0.0,0
926,44,val,"Give me the successor of the child of Ahmed III and father of Mahmud II and child of the father, that is a royalty, of Mustafa III.",SELECT ?result WHERE { <http://dbpedia.org/resource/Mahmud_II> <http://dbpedia.org/property/father> ?result . ?v4 <http://dbpedia.org/ontology/successor> ?result . <http://dbpedia.org/resource/Mustafa_III> <http://dbpedia.org/property/father> ?v0 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v0 <http://dbpedia.org/ontology/child> ?result . ?v4 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Ahmed_III> . },"```sparql
SELECT ?successor WHERE {
  # Find Ahmed III's child who is also Mahmud II's father
  ?ahmedIII dbo:child ?mahmudIIFather .
  ?ahmedIII rdfs:label ""Ahmed III""@en .
  
  ?mahmudIIFather dbo:parent ?mahmudII .
  ?mahmudII rdfs:label ""Mahmud II""@en .

  # Find the successor of Mahmud I's father
  ?mahmudIIFather dbo:succ ?successor .

  # Identify Mustafa III's royal father and his child
  OPTIONAL {
    ?mustafaIII dbo:parent ?royalFather .
    ?mustafaIII rdfs:label ""Mustafa III""@en .
    
    ?royalFather dbo:child ?childOfRoyalFather .
    FILTER (regex(str(?royalFather), ""royalty"", ""i""))
  }
}
```",5,6,6,2,3,3,3,71,0,0,1,0,0.0,0
826,48,val,Give me the predecessor of the parent of Prince Friedrich of Hesse and by Rhine and spouse of the child of the father of Anna Magdalena Appel.,SELECT ?result WHERE { ?v2 <http://dbpedia.org/ontology/spouse> ?result . ?v2 <http://dbpedia.org/property/father> ?v3 . <http://dbpedia.org/resource/Anna_Magdalena_Appel> <http://dbpedia.org/property/father> ?v3 . ?result <http://dbpedia.org/ontology/successor> ?v1 . <http://dbpedia.org/resource/Prince_Friedrich_of_Hesse_and_by_Rhine> <http://dbpedia.org/ontology/parent> ?v1 . },"```sparql
SELECT ?predecessor ?spouse WHERE {
  # Find Prince Friedrich's father
  ?friedrich dbo:parent ?father .
  ?friedrich rdfs:label ""Prince Friedrich of Hesse and by Rhine""@en .

  # Find the predecessor of his father (contextual, e.g., title)
  OPTIONAL {
    ?predecessor dbo:succeededBy ?father .
  }

  # Find Anna Magdalena Appel's father
  ?annaMagdalena dbo:parent ?fatherAnna .
  ?annaMagdalena rdfs:label ""Anna Magdalena Appel""@en .

  # Find the child of her father (could be herself or another sibling)
  OPTIONAL {
    ?child dbo:parent ?fatherAnna .
    FILTER (?child = ?annaMagdalena || ?child != ?annaMagdalena)
  }

  # Find the spouse of this child
  OPTIONAL {
    ?child dbo:spouse ?spouse .
  }
}
```",5,5,6,3,2,3,3,71,0,0,1,0,0.0,0
459,19,val,"Give me the governor of Dana Murphy and governor of the death place, that is a settlement, of Cliff Roquemore and person born as John Kevin Stitt.","SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. <http://dbpedia.org/resource/Dana_Murphy> <http://dbpedia.org/property/governor> ?result . <http://dbpedia.org/resource/Cliff_Roquemore> <http://dbpedia.org/ontology/deathPlace> ?v1 . ?v1 <http://dbpedia.org/property/governor> ?result . ?result <http://dbpedia.org/property/birthName> ""John Kevin Stitt""@en . }","```sparql
SELECT ?governorDanaMurphy ?governorCliffRoquemore WHERE {
  # Find Dana Murphy's birthplace and its governor
  ?danaMurphy dbo:birthPlace ?birthPlace .
  ?danaMurphy rdfs:label ""Dana Murphy""@en .
  
  ?birthPlace dbo:governmentHead ?governorDanaMurphy .

  # Find Cliff Roquemore's death place, ensuring it is a settlement
  ?cliffRoquemore dbo:deathPlace ?deathPlace .
  ?cliffRoquemore rdfs:label ""Cliff Roquemore""@en .
  
  ?deathPlace rdf:type dbo:Settlement .

  # Find the governor of Cliff Roquemore's death place
  ?deathPlace dbo:governmentHead ?governorCliffRoquemore .

  # Confirm John Kevin Stitt as a person born in Oklahoma (if relevant)
  OPTIONAL {
    ?johnKevinStitt dbo:birthPlace ?oklahoma .
    ?johnKevinStitt rdfs:label ""John Kevin Stitt""@en .
    ?oklahoma rdfs:label ""Oklahoma""@en .
  }
}
```",4,5,5,2,3,2,3,28,0,0,1,0,0.0,0
124,42,val,"Give me the commander in the war, that is a societal event and a military conflict, of A Field Battery, Royal Australian Artillery and military force of Battle of Tamai and military force of the force, that is a societal event and a military conflict, of Herbert Kitchener, 1st Earl Kitchener.","SELECT ?result WHERE { ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?v2 <http://dbpedia.org/ontology/commander> ?result . <http://dbpedia.org/resource/A_Field_Battery,_Royal_Australian_Artillery> <http://dbpedia.org/ontology/battle> ?v2 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?result <http://dbpedia.org/ontology/battle> <http://dbpedia.org/resource/Battle_of_Tamai> . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?result <http://dbpedia.org/ontology/battle> ?v1 . ?v1 <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Herbert_Kitchener,_1st_Earl_Kitchener> . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. }","```sparql
SELECT ?commander WHERE {
  # A Field Battery, Royal Australian Artillery and its war
  ?battery rdfs:label ""A Field Battery, Royal Australian Artillery""@en .
  ?battery dbo:militaryConflict ?war .
  
  # Commander of the battery during that war
  OPTIONAL { 
    ?battery dbo:commander ?commander1 .
  }
  
  # Battle of Tamai and its military force
  ?tamai rdfs:label ""Battle of Tamai""@en .
  ?tamai dbo:militaryConflict ?battleWar .
  ?force dbo:participatedIn ?tamai .
  
  # Commander of the force in the Battle of Tamai
  OPTIONAL {
    ?force dbo:commander ?commander2 .
  }
  
  # Herbert Kitchener and his military conflict
  ?kitchener rdfs:label ""Herbert Kitchener, 1st Earl Kitchener""@en .
  ?kitchener dbo:militaryConflict ?kitchenerWar .
  
  # Commander of the force in Kitchener's war
  OPTIONAL {
    ?forceKitchener dbo:commander ?commander3 .
    ?forceKitchener dbo:participatedIn ?kitchenerWar .
  }
  
  # Find common commander if exists
  FILTER (?commander1 = ?commander2 || ?commander1 = ?commander3 || ?commander2 = ?commander3)
}
```",5,9,6,2,3,3,3,71,0,0,1,0,0.0,0
445,51,val,Give me the entity in the award of the commander in Battle of Saint-Mihiel and death place of the awardee of Royal Astronomical Society.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/country> ?v2 . <http://dbpedia.org/resource/Battle_of_Saint-Mihiel> <http://dbpedia.org/ontology/commander> ?v1 . ?v4 <http://dbpedia.org/ontology/deathPlace> ?result . ?v4 <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/Royal_Astronomical_Society> . ?v1 <http://dbpedia.org/property/awards> ?v2 . },"```sparql
SELECT ?award ?deathPlace WHERE {
  # Find the commander in Battle of Saint-Mihiel and his award
  ?pershing dbo:commanderOfBattle ""Battle of Saint-Mihiel""@en .
  ?pershing rdfs:label ""John J. Pershing""@en .
  OPTIONAL { 
    ?pershing dbo:award ?award .
  }

  # Find an awardee of the Royal Astronomical Society and their death place
  ?astronomer dbo:awardedBy ""Royal Astronomical Society""@en .
  OPTIONAL {
    ?astronomer dbo:deathPlace ?deathPlace .
  }
  
  # Filter for Edwin Hubble as a notable awardee
  FILTER (regex(str(?astronomer), ""Edwin Hubble"", ""i""))
}
```",5,5,6,3,2,3,3,71,0,0,2,0,0.0,0
507,53,val,Give me the professional in the profession of Guy Ferland and director of Entertaining Mr Sloane (film) and spouse of the person born as the birth name of Anne V. Coates.,SELECT ?result WHERE { <http://dbpedia.org/resource/Anne_V._Coates> <http://dbpedia.org/property/birthName> ?v3 . ?result <http://dbpedia.org/ontology/spouse> ?v2 . ?result <http://dbpedia.org/property/occupation> ?v1 . ?v2 <http://dbpedia.org/property/birthName> ?v3 . <http://dbpedia.org/resource/Entertaining_Mr_Sloane_(film)> <http://dbpedia.org/ontology/director> ?result . <http://dbpedia.org/resource/Guy_Ferland> <http://dbpedia.org/property/occupation> ?v1 . },"```sparql
SELECT ?professional WHERE {
  # Find Guy Ferland's profession
  ?ferland dbo:profession ?profession .
  ?ferland rdfs:label ""Guy Ferland""@en .

  # Find the director of Entertaining Mr Sloane (film)
  ?movie dbo:director ?director .
  ?movie rdfs:label ""Entertaining Mr Sloane""@en .

  # Find Anne V. Coates' birth name and her spouse
  ?anneVCoates foaf:name ?birthName .
  ?anneVCoates rdfs:label ""Anne V. Coates""@en .
  
  OPTIONAL {
    ?anneVCoates dbo:spouse ?spouse .
  }

  # Ensure the professional is in the same profession as Guy Ferland
  FILTER (?director = ?professional)
  FILTER (?profession = (SELECT ?ferProf WHERE { ?ferland dbo:profession ?ferProf }))

  # Ensure the director is also the spouse of someone with Anne V. Coates' birth name
  OPTIONAL {
    ?spouse foaf:name ?birthName .
  }
}
```",6,6,7,3,3,3,3,71,0,0,1,0,0.0,0
791,55,val,"Give me the spouse of the spouse, that is a royalty, of Emperor Takakura and father of the child, that is a royalty, of Emperor Takakura and predecessor of the child of Emperor Takakura.",SELECT ?result WHERE { ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v2 <http://dbpedia.org/property/father> ?result . ?result <http://dbpedia.org/ontology/successor> ?v5 . ?result <http://dbpedia.org/ontology/spouse> ?v3 . ?v3 <http://dbpedia.org/ontology/spouse> <http://dbpedia.org/resource/Emperor_Takakura> . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v5 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Emperor_Takakura> . ?v2 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Emperor_Takakura> . },"```sparql
SELECT ?spouseOfSpouse ?fatherOfChild ?predecessor WHERE {
  # Step 1: Find Emperor Takakura and his spouse who is royalty
  ?takakura dbo:spouse ?royalSpouse .
  ?takakura rdfs:label ""Emperor Takakura""@en .
  
  # Ensure the spouse is royalty (e.g., Imperial Princess Shushi)
  FILTER (regex(str(?royalSpouse), ""Imperial Princess Shushi"", ""i""))

  # Step 2: Find the spouse of this royal spouse
  ?royalSpouse dbo:spouse ?spouseOfSpouse .

  # Step 3: Identify a child of Emperor Takakura who is royalty
  ?takakura dbo:child ?royalChild .
  
  # Ensure the child is royalty (e.g., Emperor Antoku)
  FILTER (regex(str(?royalChild), ""Emperor Antoku"", ""i""))

  # Step 4: Find the father of this royal child
  ?royalChild dbo:parent ?fatherOfChild .

  # Step 5: Identify predecessor of this royal child
  OPTIONAL {
    ?predecessor dbo:succeededBy ?royalChild .
  }
}
```",6,8,7,2,3,3,3,71,0,0,1,0,0.0,0
527,15,val,"Give me the actor of the movie, that is a work and English and a television show, with the professional in Actor and author of The Boy Who Kicked Pigs.","SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/United_Kingdom>. <http://dbpedia.org/resource/The_Boy_Who_Kicked_Pigs> <http://dbpedia.org/property/author> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?v1 <http://dbpedia.org/property/starring> ?v0 . ?v0 <http://dbpedia.org/property/occupation> ""Actor""@en . ?v1 <http://dbpedia.org/property/starring> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/TelevisionShow>. }","```sparql
SELECT ?actor WHERE {
  # Find the author of ""The Boy Who Kicked Pigs""
  ?author dbo:book ?book .
  ?book rdfs:label ""The Boy Who Kicked Pigs""@en .

  # Ensure this person is also an actor and has a profession as an actor
  ?author dbo:profession ?actorProfession .
  FILTER (CONTAINS(LCASE(str(?actorProfession)), ""actor""))

  # Find the movie that is both a work, in English, and a television show
  ?movie dbo:genre ?genre .
  ?movie rdfs:label ?title .
  ?movie dbo:language ?language .
  ?movie dbo:workExample ?televisionShow .

  FILTER (CONTAINS(LCASE(str(?genre)), ""film"") && 
          CONTAINS(LCASE(str(?genre)), ""tv series"") &&
          LCASE(str(?language)) = ""english"")

  # Find the actor's role in this movie
  ?actor dbo:profession ?actorProfession .
  ?movie dbo:starring ?actor .

  FILTER (?author = ?actor)
}
```",4,7,5,3,2,3,2,20,0,0,1,0,0.0,0
274,19,val,"Give me the associated musical artist of Cecil Taylor and professional in  and band member of the person born, that is a musical artist, as John Birks Gillespie.","SELECT ?result WHERE { ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. <http://dbpedia.org/resource/Cecil_Taylor> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?result <http://dbpedia.org/ontology/associatedMusicalArtist> ?v2 . ?v2 <http://dbpedia.org/property/birthName> ""John Birks Gillespie""@en . ?result <http://dbpedia.org/property/occupation> """"@en . }","```sparql
SELECT ?associatedArtist ?bandMember WHERE {
  # Find the associated musical artist of Cecil Taylor
  ?cecilTaylor dbo:associatedMusicalArtist ?associatedArtist .
  ?cecilTaylor rdfs:label ""Cecil Taylor""@en .

  # Identify Dizzy Gillespie as a person born who is a musical artist
  ?dizzyGillespie foaf:name ""John Birks Gillespie""@en ;
                  rdf:type dbo:MusicalArtist ;
                  dbo:birthPlace ?birthPlace .
  
  # Find a band member of Dizzy Gillespie
  ?bandMember dbo:bandMemberOf ?dizzyGillespie .

}
```",4,5,5,2,3,2,3,28,0,0,1,0,0.0,0
579,17,val,"Give me the native of Edinburgh and person born as the birth name of the native, that is an office holder, of Edinburgh.",SELECT ?result WHERE { ?v0 <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Edinburgh> . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?result <http://dbpedia.org/property/birthName> ?v3 . ?v0 <http://dbpedia.org/property/birthName> ?v3 . ?result <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Edinburgh> . },"```sparql
SELECT ?nativePerson ?officeHolder WHERE {
  # Find a person native to Edinburgh and check if they are an office holder
  ?nativePerson dbo:nativePlace dbr:Edinburgh .
  ?nativePerson dbo:occupation ?officeRole .
  FILTER EXISTS { ?officeRole rdf:type dbo:OfficeHolder }

  # Find another person whose birth name matches the full name of the native person
  ?person2 dbo:birthName ?fullName .
  ?fullName rdfs:label ?nativeLabel .
  ?nativePerson rdfs:label ?nativeLabel .

  # Ensure that ?person2 is an office holder
  ?person2 dbo:occupation ?officeRole2 .
  FILTER EXISTS { ?officeRole2 rdf:type dbo:OfficeHolder }
}
```",4,5,5,3,2,3,2,20,0,0,18,0,0.0,0
933,44,val,"Give me the band of the band, that is a group and a band and an organisation, of Alan Warner (musician) and reference to the birth name of Alan Warner (musician) and band of Mike Elliott (saxophonist).",SELECT ?result WHERE { ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Group>. <http://dbpedia.org/resource/Mike_Elliott_(saxophonist)> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v0 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Band>. ?result <http://xmlns.com/foaf/0.1/name> ?v4 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. <http://dbpedia.org/resource/Alan_Warner_(musician)> <http://dbpedia.org/ontology/associatedMusicalArtist> ?v0 . <http://dbpedia.org/resource/Alan_Warner_(musician)> <http://dbpedia.org/property/birthName> ?v4 . },"```sparql
SELECT ?alanWarnerBand ?alanWarnerBirthName ?mikeElliottBand WHERE {
  # Find Alan Warner (musician) and his band
  ?alanWarner dbo:birthName ?alanWarnerBirthName .
  ?alanWarner foaf:name ""Alan Warner""@en .
  ?alanWarner dbo:memberOf ?alanWarnerBand .
  
  # Ensure the band is both a group and an organization
  ?alanWarnerBand rdf:type dbp:MusicalGroup, dbo:Organization .

  # Find Mike Elliott (saxophonist) and his band
  ?mikeElliott foaf:name ""Mike Elliott""@en .
  ?mikeElliott dbo:playsInstrument dbr:Saxophone .
  ?mikeElliott dbo:memberOf ?mikeElliottBand .
}
```",5,8,6,2,3,3,3,71,0,0,1,0,0.0,0
839,46,val,"Give me the band of the member of Böhse Onkelz and band of the person born, that is a musical artist, as the persona of Kevin Russell (musician).",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/bandMember> ?v4 . ?v1 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . <http://dbpedia.org/resource/Kevin_Russell_(musician)> <http://xmlns.com/foaf/0.1/givenName> ?v2 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. <http://dbpedia.org/resource/Böhse_Onkelz> <http://dbpedia.org/ontology/bandMember> ?v4 . ?v1 <http://dbpedia.org/property/birthName> ?v2 . },"```sparql
SELECT ?band1 AS ?BandOfBoehseOnkelzMember, ?band2 AS ?BandOfKevinRussell WHERE {
  # Find members of Böhse Onkelz and their bands
  ?member dbo:memberOf :Böhse_Onkelz .
  ?member dbo:band ?band1 .

  # Find Kevin Russell as a musical artist and his band
  ?kevin foaf:name ""Kevin Russell""@en .
  ?kevin dbo:occupation dbc:Musicians .
  ?kevin dbo:band ?band2 .
}
```",5,6,6,3,2,3,3,71,0,0,1,0,0.0,0
926,55,val,"Give me the child of the father, that is a royalty, of Mustafa III and father of the father of Abdulaziz and successor of the child of Ahmed III.",SELECT ?result WHERE { ?v0 <http://dbpedia.org/ontology/child> ?result . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v2 <http://dbpedia.org/property/father> ?result . <http://dbpedia.org/resource/Abdulaziz> <http://dbpedia.org/property/father> ?v2 . <http://dbpedia.org/resource/Mustafa_III> <http://dbpedia.org/property/father> ?v0 . ?v5 <http://dbpedia.org/ontology/successor> ?result . ?v5 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Ahmed_III> . },"```sparql
SELECT ?entity WHERE {
  # Step a: Find Mustafa III's father who is royalty
  ?mustafaIII dbo:parent ?fatherMustafa .
  ?mustafaIII rdfs:label ""Mustafa III""@en .

  # Ensure the father is recognized as royalty
  FILTER (regex(str(?fatherMustafa), ""royalty"", ""i""))

  # Step b: Find a child of this royal father
  OPTIONAL { 
    ?fatherMustafa dbo:child ?child .
  }

  # Step c: Find Abdulaziz's grandfather
  ?abdulaziz dbo:parent ?fatherAbdulaziz .
  ?fatherAbdulaziz dbo:parent ?grandfatherAbdulaziz .
  ?abdulaziz rdfs:label ""Abdulaziz I of Egypt""@en .

  # Step d: Find a child of Ahmed III and their successor
  ?ahmedIII dbo:child ?childAhmed .
  ?successor dbo:succ ?childAhmed .
  ?ahmedIII rdfs:label ""Ahmed III""@en .

  # Combine all",6,7,7,2,3,3,3,71,0,0,1,0,0.0,0
443,21,val,Give me the birthplace of Ulf Lundell and landmark at elevation of 28 and birthplace of the work of yes.,"SELECT ?result WHERE { ?v1 <http://dbpedia.org/property/author> ""yes""@en . <http://dbpedia.org/resource/Ulf_Lundell> <http://dbpedia.org/ontology/birthPlace> ?result . ?result <http://dbpedia.org/ontology/elevation> ""28""^^<http://www.w3.org/2001/XMLSchema#integer> . ?v1 <http://dbpedia.org/ontology/birthPlace> ?result . }","```sparql
# Query for Ulf Lundell's birthplace
SELECT ?birthPlace WHERE {
  ?person dbo:birthPlace ?birthPlace .
  ?person rdfs:label ""Ulf Lundell""@en .
}

# Query for a landmark at elevation 28 meters
SELECT ?landmark WHERE {
  ?landmark dbo:elevationAboveSeaLevel ?elevation .
  FILTER (?elevation = 28)
}

# Query for the birthplace of the work ""Close to the Edge"" by Yes
SELECT ?birthPlace WHERE {
  ?album dbo:artist ?band ;
         rdfs:label ""Close to the Edge""@en .
  ?band rdfs:label ""Yes""@en .
  OPTIONAL { ?album dbo:placeOfBirth ?birthPlace . }
}
```",4,4,5,2,3,2,3,28,0,0,1,0,0.0,0
98,19,val,Give me the entity in Philippines and region of the time zone of Lopez Jaena and birth place of Paolo Ballesteros.,SELECT ?result WHERE { <http://dbpedia.org/resource/Lopez_Jaena> <http://dbpedia.org/ontology/timeZone> ?v3 . <http://dbpedia.org/resource/Paolo_Ballesteros> <http://dbpedia.org/ontology/birthPlace> ?result . ?result <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Philippines> . ?result <http://dbpedia.org/ontology/timeZone> ?v3 . },"```sparql
SELECT ?entityInPhilippines ?birthPlace ?timeZoneRegion WHERE {
  # Find an entity related to Lopez Jaena in the Philippines
  ?jaena dbo:birthPlace ?place .
  ?jaena rdfs:label ""Lopez Jaena""@en .
  ?place dbo:country dbr:Philippines .

  # Get birth place of Paolo Ballesteros
  ?ballesteros dbo:birthPlace ?birthPlace .
  ?ballesteros rdfs:label ""Paolo Ballesteros""@en .

  # Find the time zone region of the birth place
  ?birthPlace dbo:timeZoneRegion ?timeZoneRegion .
}
```",4,4,5,2,3,2,3,28,0,0,2,0,0.0,0
124,40,val,"Give me the military force of Battle of Tamai and commander in the war, that is a societal event and a military conflict, of the reference, that is Australian and an organisation and a military unit, to 'A' Battery, Royal Australian Artillery and military force of Battle of Atbara.","SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/commander> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?result <http://dbpedia.org/ontology/battle> <http://dbpedia.org/resource/Battle_of_Atbara> . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v2 <http://xmlns.com/foaf/0.1/name> ""'A' Battery, Royal Australian Artillery""@en . ?v2 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Australia>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?v2 <http://dbpedia.org/ontology/battle> ?v1 . ?result <http://dbpedia.org/ontology/battle> <http://dbpedia.org/resource/Battle_of_Tamai> . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryUnit>. }","```sparql
SELECT ?tamaiForce ?atbaraForce ?commander WHERE {
  # Find the military force involved in the Battle of Tamai
  ?battle rdfs:label ""Battle of Tamai""@en .
  ?battle dbo:militaryUnit ?tamaiForce .

  # Find the commander associated with A Battery, Royal Australian Artillery
  ?battery rdfs:label ""A Battery, Royal Australian Artillery""@en .
  ?battery dbo:commander ?commander .

  # Ensure the battery is an Australian organization and military unit
  ?battery dbo:country dbc:Australia .
  ?battery a dbo:MilitaryUnit .

  # Find the military force involved in the Battle of Atbara
  ?battle2 rdfs:label ""Battle of Atbara""@en .
  ?battle2 dbo:militaryUnit ?atbaraForce .
}
```",5,10,6,3,3,3,3,71,0,0,1,0,0.0,0
715,43,val,"Give me the leader of Ministry of the Air (Spain) and commander in Rif War and commander in the force of the mayor, that is an office holder and a politician and a president, of 1933 Spanish general election.",SELECT ?result WHERE { <http://dbpedia.org/resource/Ministry_of_the_Air_(Spain)> <http://dbpedia.org/ontology/leader> ?result . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. <http://dbpedia.org/resource/Rif_War> <http://dbpedia.org/ontology/commander> ?result . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/President>. ?v4 <http://dbpedia.org/ontology/commander> ?result . ?v4 <http://dbpedia.org/ontology/commander> ?v0 . <http://dbpedia.org/resource/1933_Spanish_general_election> <http://dbpedia.org/property/leader> ?v0 . },"```sparql
SELECT ?person WHERE {
  # Leader of Ministry of the Air (Spain)
  ?ministry dbo:leader ?person .
  ?ministry rdfs:label ""Ministry of the Air (Spain)""@en .

  # Commander in Rif War
  OPTIONAL { 
    ?rifWar dbo:commander ?person .
    ?rifWar rdfs:label ""Rif War""@en .
  }

  # Commander under a mayor who is an office holder, politician, and president from 1933
  OPTIONAL {
    ?officeHolder dbo:officeHolder ?person .
    ?officeHolder dbo:position ""Mayor""@en .
    
    ?politician dbo:politicalPartyMember ?person .
    ?president dbo:electionDate ?date .
    ?president rdfs:label ""1933 Spanish general election""@en .
    FILTER (year(?date) = 1933)
    
    # Ensure the person is a politician and president
    ?person dbo:occupation ""Politician""@en ;
            dbo:officeHolder ?presidency .
    ?presidency rdfs:label ""President of Spain""@en .
  }
}
```",5,8,6,3,3,3,3,71,1,1,0,0.5,1.0,0.6666666666666666
456,45,val,"Give me the spouse of Danielle Spencer (Australian actress) and professional in  and band of the band, that is a musical artist, of the band of Alan Doyle.","SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?v0 <http://dbpedia.org/ontology/associatedMusicalArtist> ?v1 . ?v1 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?result <http://dbpedia.org/property/occupation> """"@en . <http://dbpedia.org/resource/Danielle_Spencer_(Australian_actress)> <http://dbpedia.org/ontology/spouse> ?result . <http://dbpedia.org/resource/Alan_Doyle> <http://dbpedia.org/ontology/associatedMusicalArtist> ?v0 . }","```sparql
SELECT ?spouse ?band ?role WHERE {
  # Find Danielle Spencer and her spouse
  ?danielle dbo:spouse ?spouse .
  ?danielle rdfs:label ""Danielle Spencer""@en .

  # Find Alan Doyle's band that is a musical artist
  ?alan dbo:musicalBand ?band .
  ?alan rdfs:label ""Alan Doyle""@en .
  
  # Ensure the band is recognized as a musical artist
  ?band rdf:type dbpedia-owl:MusicalArtist .

  # Identify the professional role of the spouse in the band
  OPTIONAL {
    ?spouse dbo:roleInBand ?role .
    FILTER (?role IN (dbpedia-owl:Singer, dbpedia-owl:Guitarist, dbpedia-owl:Bassist, dbpedia-owl:Drummer))
  }
}
```",5,6,6,3,3,3,3,71,0,0,1,0,0.0,0
573,49,val,"Give me the person decedent at the administration, that is a region, of Charlie Baker and parent of the author, that is a politician and an office holder, of the work of John Quincy Adams.","SELECT ?result WHERE { ?v0 <http://dbpedia.org/property/author> <http://dbpedia.org/resource/John_Quincy_Adams> . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v2 <http://dbpedia.org/property/governor> ""Charlie Baker""@en . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Region>. ?v0 <http://dbpedia.org/property/author> ?v1 . ?v1 <http://dbpedia.org/ontology/parent> ?result . ?result <http://dbpedia.org/ontology/deathPlace> ?v2 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. }","```sparql
SELECT ?decedent ?parent WHERE {
  # Find Charlie Baker's administrative region
  ?charlieBaker dbo:office ?administration .
  ?charlieBaker rdfs:label ""Charlie Baker""@en .

  # Identify the decedent at this administration
  OPTIONAL { 
    ?administration dbo:decedent ?decedent .
  }

  # Find John Quincy Adams and his work involving a politician/office holder
  ?johnQuincyAdams dbo:author ?work .
  ?johnQuincyAdams rdfs:label ""John Quincy Adams""@en .

  OPTIONAL {
    ?work dbo:subject ?politicianOfficeHolder .
    FILTER (regex(str(?politicianOfficeHolder), ""Politician|Office Holder"", ""i""))
  }

  # Find the parent of this author
  OPTIONAL {
    ?johnQuincyAdams dbo:parent ?parent .
  }
}
```",5,8,6,3,2,3,3,71,0,0,2,0,0.0,0
773,40,val,Give me the parent of Carloman of Bavaria and parent of Charles the Fat and spouse of the father of the parent of Bernard (son of Charles the Fat).,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Carloman_of_Bavaria> . ?v1 <http://dbpedia.org/ontology/spouse> ?result . <http://dbpedia.org/resource/Charles_the_Fat> <http://dbpedia.org/ontology/parent> ?result . ?v2 <http://dbpedia.org/property/father> ?v1 . ?v2 <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Bernard_(son_of_Charles_the_Fat)> . },"```sparql
SELECT ?parentCarloman ?parentCharlesFat ?spouseFatherBernardParent WHERE {
  # Parent of Carloman of Bavaria
  ?carloman dbo:parent ?parentCarloman .
  ?carloman rdfs:label ""Carloman, Duke of Bavaria""@en .

  # Parent of Charles the Fat
  ?charlesFat dbo:parent ?parentCharlesFat .
  ?charlesFat rdfs:label ""Charles the Fat""@en .

  # Bernard as son of Charles the Fat
  ?bernard dbo:childOf ?charlesFat .
  ?bernard rdfs:label ""Bernard, Duke of Saxony""@en .

  # Father of the parent of Bernard (i.e., father of Charles the Fat)
  ?parentCharlesFat dbo:parent ?spouseFatherBernardParent .
}
```",5,5,6,3,3,3,3,71,0,0,1,0,0.0,0
166,17,val,"Give me the resting place of Gonzalo Queipo de Llano and entity in the territory administered, that is a country, from the reference to Madrid.","SELECT ?result WHERE { ?v0 <http://xmlns.com/foaf/0.1/name> ""Madrid""@en . ?v3 <http://dbpedia.org/ontology/capital> ?v0 . <http://dbpedia.org/resource/Gonzalo_Queipo_de_Llano> <http://dbpedia.org/ontology/restingPlace> ?result . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. ?result <http://dbpedia.org/ontology/country> ?v3 . }","```sparql
SELECT ?restingPlace ?country WHERE {
  # Find the resting place of Gonzalo Queipo de Llano
  ?person dbo:birthName ""Gonzalo Queipo de Llano""@en .
  ?person dbo:deathPlace ?restingPlace .

  # Identify a country in the territory administered from Madrid (Spain)
  OPTIONAL {
    ?madrid dbo:country ?country .
    ?madrid rdfs:label ""Madrid""@en .
    FILTER (?country rdf:type dbo:Country) 
  }
}
```",4,5,5,3,2,3,2,20,0,0,1,0,0.0,0
445,50,val,Give me the entity in the award of George H. Cameron and death place of the awardee of the establishment of 1820-03-10.,"SELECT ?result WHERE { ?v4 <http://dbpedia.org/property/awards> ?v0 . <http://dbpedia.org/resource/George_H._Cameron> <http://dbpedia.org/property/awards> ?v3 . ?v4 <http://dbpedia.org/ontology/deathPlace> ?result . ?result <http://dbpedia.org/ontology/country> ?v3 . ?v0 <http://dbpedia.org/ontology/foundingDate> ""1820-03-10""^^<http://www.w3.org/2001/XMLSchema#date> . }","```sparql
SELECT ?deathPlace WHERE {
  # Step 1: Identify the award received by George H. Cameron
  ?award dbo:recipient ?georgeHCameron .
  ?georgeHCameron rdfs:label ""George H. Cameron""@en .

  # Step 2: Find the entity established on March 10, 1820
  ?entity dbo:dateEstablished ?establishmentDate .
  FILTER (YEAR(?establishmentDate) = 1820 && MONTH(?establishmentDate) = 3 && DAY(?establishmentDate) = 10)

  # Step 3: Find the death place of this entity
  ?entity dbo:deathPlace ?deathPlace .
}
```",5,5,6,3,2,3,3,71,0,0,2,0,0.0,0
508,15,val,"Give me the birthplace of Ma Bufang and birthplace of the commander, that is a politician, in the war, that is a military conflict and a societal event and an event, of Hayao Tada.",SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v0 <http://dbpedia.org/ontology/commander> ?v1 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. <http://dbpedia.org/resource/Ma_Bufang> <http://dbpedia.org/ontology/birthPlace> ?result . ?v1 <http://dbpedia.org/ontology/birthPlace> ?result . <http://dbpedia.org/resource/Hayao_Tada> <http://dbpedia.org/ontology/battle> ?v0 . },"```sparql
SELECT ?maBufangBirthPlace ?commanderBirthPlace WHERE {
  # Find Ma Bufang and his birthplace
  ?maBufang dbo:birthPlace ?maBufangBirthPlace .
  ?maBufang rdfs:label ""Ma Bufang""@en .

  # Identify wars involving Hayao Tada that are military conflicts, societal events, and general events
  ?tada dbo:participatedInWar ?war .
  ?tada rdfs:label ""Hayao Tada""@en .
  
  ?war rdf:type/rdfs:subClassOf* (dbo:MilitaryConflict dbo:SocietalEvent dbo:Event) .

  # Find a commander in the war who is also a politician
  ?commander dbo:roleInWar ?war ;
             dbo:birthPlace ?commanderBirthPlace ;
             dbo:occupation ?occupation .
  
  FILTER EXISTS { ?occupation rdfs:label ""Politician""@en }
}
```",4,8,5,3,2,3,2,20,0,0,3,0,0.0,0
47,49,val,"Give me the office of the administration of Jagdeep Dhankhar and office of the awardee of the entity, that is an award, in India.",SELECT ?result WHERE { ?v1 <http://dbpedia.org/property/office> ?result . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Award>. ?v2 <http://dbpedia.org/property/governor> <http://dbpedia.org/resource/Jagdeep_Dhankhar> . ?v0 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/India> . ?v2 <http://dbpedia.org/property/office> ?result . ?v1 <http://dbpedia.org/property/awards> ?v0 . },"```sparql
# Query to find the office of Jagdeep Dhankhar
SELECT ?office WHERE {
  ?dhankhar dbo:office ?office .
  ?dhankhar rdfs:label ""Jagdeep Dhankhar""@en .
}

UNION

# Query to find a notable award and its awardee's office in India
SELECT ?awardeeOffice WHERE {
  # Find the Bharat Ratna award
  ?award dbo:country dbr:India ;
         rdfs:label ""Bharat Ratna""@en .

  # Find recent awardees of the Bharat Ratna
  ?award dbo:recipient ?person .
  
  # Get the office held by one of these awardees
  OPTIONAL { 
    ?person dbo:office ?awardeeOffice .
  }
}
```",5,6,6,3,2,3,3,71,0,0,11,0,0.0,0
826,52,val,"Give me the successor of the child, that is a royalty, of Louis I, Grand Duke of Hesse and spouse of the child of the father of Anna Magdalena Appel and predecessor of Louis IV, Grand Duke of Hesse.","SELECT ?result WHERE { ?v2 <http://dbpedia.org/ontology/spouse> ?result . ?result <http://dbpedia.org/ontology/successor> <http://dbpedia.org/resource/Louis_IV,_Grand_Duke_of_Hesse> . ?v2 <http://dbpedia.org/property/father> ?v3 . ?v5 <http://dbpedia.org/ontology/successor> ?result . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. <http://dbpedia.org/resource/Louis_I,_Grand_Duke_of_Hesse> <http://dbpedia.org/ontology/child> ?v5 . <http://dbpedia.org/resource/Anna_Magdalena_Appel> <http://dbpedia.org/property/father> ?v3 . }","```sparql
SELECT ?successor WHERE {
  # Identify Louis I, Grand Duke of Hesse
  ?louisI rdfs:label ""Louis I, Grand Duke of Hesse""@en .
  
  # Find his child who is royalty
  ?child dbo:parent ?louisI ;
         rdf:type dbo:Royal .

  # Determine the successor of this royal child
  ?successor dbo:succ ?child .

  # Identify Anna Magdalena Appel's father
  ?annaMagdalena rdfs:label ""Anna Magdalena Appel""@en .
  ?father dbo:parent ?annaMagdalena .

  # Find the spouse of the child of Anna Magdalena Appel’s father
  ?childOfFather dbo:parent ?father ;
                 dbo:spouse ?spouse .

  # Identify Louis IV, Grand Duke of Hesse's predecessor
  ?louisIV rdfs:label ""Louis IV, Grand Duke of Hesse""@en .
  ?predecessor dbo:predecessor ?louisIV .

  # Combine relationships to find the final answer
  FILTER (?spouse = ?successor)
}
```",6,7,7,3,3,3,3,71,0,0,1,0,0.0,0
417,54,val,"Give me the child of the father of the leader, that is a royalty, of Colony of Greenland and spouse of the parent, that is a royalty, of Count Ingolf of Rosenborg and child of Alexandrine of Mecklenburg-Schwerin.",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/parent> <http://dbpedia.org/resource/Alexandrine_of_Mecklenburg-Schwerin> . ?v3 <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Count_Ingolf_of_Rosenborg> . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?result <http://dbpedia.org/ontology/spouse> ?v3 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?result <http://dbpedia.org/property/father> ?v5 . <http://dbpedia.org/resource/Colony_of_Greenland> <http://dbpedia.org/property/leader> ?v0 . ?v0 <http://dbpedia.org/property/father> ?v5 . },"```sparql
SELECT ?child WHERE {
  # Step 1: Identify the leader of Colony of Greenland
  ?leader rdfs:label ""Leader of Colony of Greenland""@en .
  
  # Step 2: Find father of the leader who is royalty
  ?leader dbo:parent ?father .
  ?father rdf:type dbo:Monarch .

  # Step 3: Find child of this royal father
  ?father dbo:child ?child .

  # Step 4: Identify Count Ingolf of Rosenborg and his parent (royalty)
  ?ingolf rdfs:label ""Count Ingolf of Rosenborg""@en .
  ?ingolf dbo:parent ?parentIngolf .
  ?parentIngolf rdf:type dbo:Monarch .

  # Step 5: Find spouse of the royal parent of Count Ingolf
  ?parentIngolf dbo:spouse ?spouseParentIngolf .

  # Step 6: Identify Alexandrine of Mecklenburg-Schwerin and her child
  ?alexandrine rdfs:label ""Alexandrine of Mecklenburg-Schwerin""@en .
  ?alexandrine dbo:child ?childAlexandrine .

  # Final Connection: Ensure the spouse is also a child of Alexandrine
  FILTER (?spouseParentIngolf = ?childAlexandrine)
}
```",6,8,7,3,3,3,3,71,0,0,1,0,0.0,0
976,45,val,Give me the office of Meral Akşener and office of Mustafa Şentop and office of the person born as the birth name of Naci Bostancı.,SELECT ?result WHERE { <http://dbpedia.org/resource/Mustafa_Şentop> <http://dbpedia.org/property/office> ?result . ?v0 <http://dbpedia.org/property/birthName> ?v3 . <http://dbpedia.org/resource/Naci_Bostancı> <http://dbpedia.org/property/birthName> ?v3 . ?v0 <http://dbpedia.org/property/office> ?result . <http://dbpedia.org/resource/Meral_Akşener> <http://dbpedia.org/property/office> ?result . },"```sparql
SELECT ?meralOffice ?mustafaOffice ?naciBirthName ?birthNamePersonOffice WHERE {
  # Meral Akşener's office
  ?meral dbo:office ?meralOffice .
  ?meral rdfs:label ""Meral Akşener""@en .

  # Mustafa Şentop's office
  ?mustafa dbo:office ?mustafaOffice .
  ?mustafa rdfs:label ""Mustafa Şentop""@en .

  # Naci Bostancı's birth name and the office of that person
  ?naci dbo:birthName ?naciBirthName .
  ?naci rdfs:label ""Naci Bostancı""@en .
  
  OPTIONAL {
    ?birthNamePerson dbo:birthName ?naciBirthName .
    ?birthNamePerson dbo:office ?birthNamePersonOffice .
  }
}
```",5,5,6,3,3,3,3,71,0,0,1,0,0.0,0
216,49,val,"Give me the player in the coach of Croatia national under-21 football team and team of the person born, that is a sports manager and a soccer manager and a soccer player, on the death of Pavel Vezhinov.",SELECT ?result WHERE { <http://dbpedia.org/resource/Pavel_Vezhinov> <http://dbpedia.org/ontology/deathDate> ?v0 . <http://dbpedia.org/resource/Croatia_national_under-21_football_team> <http://dbpedia.org/ontology/coach> ?v2 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerManager>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerPlayer>. ?v2 <http://dbpedia.org/ontology/team> ?result . ?v1 <http://dbpedia.org/ontology/birthDate> ?v0 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsManager>. ?result <http://dbpedia.org/ontology/coach> ?v1 . },"```sparql
SELECT ?coach ?person ?team WHERE {
  # Find the coach of Croatia national under-21 football team
  ?team dbo:coach ?coach .
  ?team rdfs:label ""Croatia national under-21 football team""@en .

  # Find Pavel Vezhinov's date of death
  ?vezhinov dbo:dateOfDeath ?deathDate .
  ?vezhinov rdfs:label ""Pavel Vezhinov""@en .

  # Find a person who is a sports manager, soccer manager, and player born on the same day as Pavel Vezhinov's death
  ?person dbo:dateOfBirth ?birthDate ;
          dbo:occupation ?occupation .
  FILTER (?birthDate = ?deathDate)
  FILTER (CONTAINS(LCASE(str(?occupation)), ""sports manager"") &&
          CONTAINS(LCASE(str(?occupation)), ""soccer manager"") &&
          CONTAINS(LCASE(str(?occupation)), ""soccer player""))

  # Find the team associated with this person
  OPTIONAL { 
    ?person dbo:team ?team .
  }
}
```",5,8,6,3,2,3,3,71,0,0,1,0,0.0,0
933,50,val,"Give me the reference to the birth name of the professional in Musician and band of the band, that is a group and a band and an organisation, of Alan Warner (musician).",SELECT ?result WHERE { ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Band>. ?v1 <http://dbpedia.org/property/birthName> ?v3 . ?v0 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v1 <http://dbpedia.org/property/occupation> <http://dbpedia.org/resource/Musician> . <http://dbpedia.org/resource/Alan_Warner_(musician)> <http://dbpedia.org/ontology/associatedMusicalArtist> ?v0 . ?result <http://xmlns.com/foaf/0.1/name> ?v3 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Group>. },"```sparql
SELECT ?birthName WHERE {
  # Find Alan Warner and his birth name
  ?alanWarner dbo:birthName ?birthName .
  ?alanWarner rdfs:label ""Alan Warner (musician)""@en .

  # Identify the band associated with Alan Warner
  OPTIONAL {
    ?band dbo:musicalArtist ?alanWarner .
    ?band rdf:type dbo:Band .
    FILTER EXISTS { ?band dbo:genre ?genre . } # Ensures it's a musical group
    FILTER EXISTS { ?band dbo:organizationType ?orgType . }
  }
}
```",5,8,6,3,2,3,3,71,0,0,1,0,0.0,0
445,46,val,"Give me the death place of the awardee of Royal Astronomical Society and entity in the residence, that is a country, of the resident, that is an athlete, of Great Britain.",SELECT ?result WHERE { ?v2 <http://dbpedia.org/property/residence> <http://dbpedia.org/resource/Great_Britain> . ?v4 <http://dbpedia.org/ontology/deathPlace> ?result . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Athlete>. ?result <http://dbpedia.org/ontology/location> ?v1 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. ?v2 <http://dbpedia.org/property/residence> ?v1 . ?v4 <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/Royal_Astronomical_Society> . },"```sparql
SELECT ?deathPlace ?country WHERE {
  # Step 1: Find an awardee of the Royal Astronomical Society
  ?awardee dbo:awardReceived dbr:Royal_Astronomical_Society .
  
  # Step 2: Get the death place of this awardee
  ?awardee dbo:deathPlace ?deathPlace .

  # Step 3: Find a resident athlete from Great Britain
  ?athlete dbo:nationality dbr:United_Kingdom ;
           dbo:residence ?residence .
  
  # Step 4: Get the country of residence for this athlete
  ?residence dbo:country ?country .
}
```",5,7,6,3,2,3,3,71,0,0,1,0,0.0,0
874,16,val,"Give me the band of the writer, that is an artist and a musical artist, of Mezzanine (album) and band of the band member of The Jones Gang.",SELECT ?result WHERE { <http://dbpedia.org/resource/Mezzanine_(album)> <http://dbpedia.org/property/writer> ?v2 . ?v3 <http://dbpedia.org/ontology/associatedMusicalArtist> <http://dbpedia.org/resource/The_Jones_Gang> . ?result <http://dbpedia.org/ontology/bandMember> ?v2 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. ?result <http://dbpedia.org/ontology/bandMember> ?v3 . },"```sparql
# Find the band of the writer/artist of Mezzanine (album)
SELECT ?band WHERE {
  ?mezzanine dbo:creator ?writer .
  ?mezzanine rdfs:label ""Mezzanine""@en .
  ?writer dbo:band ?band .
}

UNION

# Find the band of a member of The Jones Gang
SELECT ?memberBand WHERE {
  ?jonesGang dbo:member ?member .
  ?jonesGang rdfs:label ""The Jones Gang""@en .
  ?member dbo:band ?memberBand .
}
```",4,6,5,2,2,3,2,20,0,0,1,0,0.0,0
83,17,val,"Give me the ruling party in Fortaleza and party of the governor of the commander, that is a politician, in Central African Republic Civil War.",SELECT ?result WHERE { <http://dbpedia.org/resource/Fortaleza> <http://dbpedia.org/property/leaderParty> ?result . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. <http://dbpedia.org/resource/Central_African_Republic_Civil_War> <http://dbpedia.org/ontology/commander> ?v0 . ?v3 <http://dbpedia.org/ontology/party> ?result . ?v0 <http://dbpedia.org/property/governor> ?v3 . },"```sparql
# Query for ruling party in Fortaleza
SELECT ?party WHERE {
  ?fortaleza dbo:politicalParty ?party .
  ?fortaleza rdfs:label ""Fortaleza""@en .
}

UNION

# Query for the party of a politician involved in Central African Republic Civil War
SELECT ?politicianParty WHERE {
  ?war dbo:participant ?politician .
  ?war rdfs:label ""Central African Republic Civil War""@en .
  
  OPTIONAL { 
    ?politician dbo:party ?politicianParty .
    FILTER EXISTS { ?politician rdf:type dbo:Politician }
  }
}
```",4,5,5,3,2,3,2,20,0,0,1,0,0.0,0
456,53,val,"Give me the band of the band, that is a musical artist, of Dean Brody and spouse of the actor of the movie, that is a work and a television show, with Ross Newton and professional in .","SELECT ?result WHERE { ?v3 <http://dbpedia.org/property/starring> <http://dbpedia.org/resource/Ross_Newton> . <http://dbpedia.org/resource/Dean_Brody> <http://dbpedia.org/ontology/associatedMusicalArtist> ?v1 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/TelevisionShow>. ?v2 <http://dbpedia.org/ontology/spouse> ?result . ?result <http://dbpedia.org/property/occupation> """"@en . ?v1 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?v3 <http://dbpedia.org/property/starring> ?v2 . }","```sparql
SELECT ?deanBrodyBand ?actorSpouse ?spouseBand ?bandOfTheBand WHERE {
  # Find Dean Brody and his band
  ?deanBrody dbo:associatedBand ?deanBrodyBand .
  ?deanBrody rdfs:label ""Dean Brody""@en .

  # Find Ross Newton's work (movie or TV show)
  ?work dbo:actor ?rossNewton .
  ?rossNewton rdfs:label ""Ross Newton""@en .
  
  # Find the spouse of the actor in that work
  OPTIONAL {
    ?actor dbo:spouse ?actorSpouse .
    ?actor dbo:actedIn ?work .
  }

  # Check if the spouse is a musical artist and find their band
  OPTIONAL {
    ?actorSpouse dbo:associatedBand ?spouseBand .
  }
  
  # Find the band of the spouse's band, if applicable
  OPTIONAL {
    ?spouseBand dbo:associatedBand ?bandOfTheBand .
  }
}
```",6,9,7,3,3,3,3,71,0,0,1,0,0.0,0
417,51,val,"Give me the child of the father of Frederick IX of Denmark and child of the child, that is a royalty, of the parent, that is a royalty, of Alexandrine of Mecklenburg-Schwerin.",SELECT ?result WHERE { <http://dbpedia.org/resource/Alexandrine_of_Mecklenburg-Schwerin> <http://dbpedia.org/ontology/parent> ?v1 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v2 <http://dbpedia.org/property/father> ?v1 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?result <http://dbpedia.org/property/father> ?v4 . ?result <http://dbpedia.org/ontology/parent> ?v2 . <http://dbpedia.org/resource/Frederick_IX_of_Denmark> <http://dbpedia.org/property/father> ?v4 . },"```sparql
SELECT ?grandchild WHERE {
  # Step 1: Find Frederick IX and his father
  ?frederickIX dbo:parent ?father .
  ?frederickIX rdfs:label ""Frederick IX of Denmark""@en .

  # Step 2: Identify a child of this father (could be Frederick IX or another sibling)
  OPTIONAL {
    ?childOfFather dbo:parent ?father .
  }

  # Step 3: Find Alexandrine's royal parent
  ?alexandrine dbo:parent ?royalParent .
  ?alexandrine rdfs:label ""Alexandrine of Mecklenburg-Schwerin""@en .

  # Ensure the parent is royalty (could be inferred from context or specific property)
  FILTER EXISTS { ?royalParent a dbo:Monarch . }

  # Step 4: Find child of this royal parent
  OPTIONAL {
    ?childOfRoyalParent dbo:parent ?royalParent .
  }

  # Step 5: Identify the grandchild of this child, ensuring they are royalty
  OPTIONAL {
    ?grandchild dbo:parent ?childOfRoyalParent .
    FILTER EXISTS { ?grandchild a dbo:Monarch . }
  }
}
```",5,7,6,3,2,3,3,71,0,0,2,0,0.0,0
36,20,val,Give me the person born in the birth year of Deanne Bray and actor of Being Mrs Elliot and person born as Ayo Makun.,"SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/birthYear> ?v1 . <http://dbpedia.org/resource/Being_Mrs_Elliot> <http://dbpedia.org/ontology/starring> ?result . <http://dbpedia.org/resource/Deanne_Bray> <http://dbpedia.org/ontology/birthYear> ?v1 . ?result <http://dbpedia.org/property/birthName> ""Ayo Makun""@en . }","```sparql
SELECT ?person WHERE {
  # Deanne Bray's birth year
  ?deanneBray dbo:birthYear ?birthYear .
  ?deanneBray rdfs:label ""Deanne Bray""@en .

  # Actor of Being Mrs Elliot
  ?beingMrsElliot dbo:actor ?actor .
  ?beingMrsElliot rdfs:label ""Being Mrs Elliot""@en .

  # Ayo Makun's birth name
  ?ayoMakun foaf:name ?birthName .
  FILTER (str(?birthName) = ""Ayo Makun"")

  # Find person matching all criteria
  ?person dbo:birthYear ?birthYear ;
          dbo:actor ?actor ;
          foaf:name ?birthName .
}
```",4,4,5,2,3,2,3,28,0,0,1,0,0.0,0
507,48,val,Give me the professional in the profession of Guy Ferland and spouse of the person born as the birth name of Anne V. Coates.,SELECT ?result WHERE { <http://dbpedia.org/resource/Guy_Ferland> <http://dbpedia.org/property/occupation> ?v1 . ?result <http://dbpedia.org/property/occupation> ?v1 . <http://dbpedia.org/resource/Anne_V._Coates> <http://dbpedia.org/property/birthName> ?v3 . ?result <http://dbpedia.org/ontology/spouse> ?v2 . ?v2 <http://dbpedia.org/property/birthName> ?v3 . },"```sparql
SELECT ?professional WHERE {
  # Step 1: Identify Guy Ferland's Profession
  ?ferland dbo:profession ?profession .
  ?ferland rdfs:label ""Guy Ferland""@en .

  # Step 2: Find Anne V. Coates' Birth Name and Spouse
  ?coates foaf:name ""Anne V. Coates""@en ;
          foaf:birthName ?birthName .
  
  OPTIONAL {
    ?spouse dbo:spouse ?coates .
    ?spouse foaf:birthName ?birthName .
  }

  # Step 3: Find the professional in Guy Ferland's profession who is also the spouse
  ?professional dbo:profession ?profession ;
               dbo:spouse ?spouse .
}
```",5,5,6,3,2,3,3,71,0,0,1,0,0.0,0
933,49,val,"Give me the band of the band, that is a group and a band and an organisation, of the person born, that is a musical artist, on 1947-04-21 and band of the band of Alan Warner (musician).","SELECT ?result WHERE { ?v2 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v4 <http://dbpedia.org/ontology/birthDate> ""1947-04-21""^^<http://www.w3.org/2001/XMLSchema#date> . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Group>. ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?v4 <http://dbpedia.org/ontology/associatedMusicalArtist> ?v0 . <http://dbpedia.org/resource/Alan_Warner_(musician)> <http://dbpedia.org/ontology/associatedMusicalArtist> ?v2 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Band>. ?v0 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . }","```sparql
SELECT ?overarchingBand WHERE {
  # Step 1: Identify the person born on 1947-04-21 who is a musical artist
  ?person dbo:birthDate ""1947-04-21""^^xsd:date ;
          rdf:type dbo:MusicalArtist .
  
  # Step 2: Find the band associated with this artist
  ?person dbo:band ?band .

  # Step 3: Identify Alan Warner and his band
  ?alanWarner rdfs:label ""Alan Warner (musician)""@en ;
              dbo:band ?alanBand .

  # Step 4: Determine the overarching organization or group of the band from step 2
  OPTIONAL {
    ?band dbo:partOf ?overarchingBand .
  }
}
```",5,9,6,3,2,3,3,71,0,0,4,0,0.0,0
465,49,val,"Give me the successor of the child of Alfonso I d'Este and successor of the child, that is a royalty, of the parent of Charles Orlando, Dauphin of France.","SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. <http://dbpedia.org/resource/Charles_Orlando,_Dauphin_of_France> <http://dbpedia.org/ontology/parent> ?v0 . ?v2 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Alfonso_I_d'Este> . ?v2 <http://dbpedia.org/ontology/successor> ?result . ?v0 <http://dbpedia.org/ontology/child> ?v1 . ?v1 <http://dbpedia.org/ontology/successor> ?result . }","```sparql
SELECT ?successorOfChild1 ?successorOfRoyalChild WHERE {
  # Find the child of Alfonso I d'Este
  ?alfonso dbo:child ?child .
  ?alfonso rdfs:label ""Alfonso I d'Este""@en .

  # Find the successor of this child
  ?child dbo:successor ?successorOfChild1 .

  # Identify the parent of Charles Orlando, Dauphin of France
  ?charlesOrlando dbo:parent ?parent .
  ?charlesOrlando rdfs:label ""Charles Orlando, Dauphin of France""@en .

  # Find a royal child of this parent
  OPTIONAL {
    ?parent dbo:child ?royalChild .
    FILTER (regex(str(?royalChild), ""Royal"", ""i""))
  }

  # Determine the successor of this royal child
  OPTIONAL {
    ?royalChild dbo:successor ?successorOfRoyalChild .
  }
}
```",5,6,6,3,2,3,3,71,0,0,1,0,0.0,0
456,46,val,"Give me the professional in the alter ego of The Shadow and spouse of the actor of the movie, that is a work and a television show, with Ross Newton.",SELECT ?result WHERE { ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?result <http://dbpedia.org/property/occupation> ?v4 . <http://dbpedia.org/resource/The_Shadow> <http://dbpedia.org/property/alterEgo> ?v4 . ?v2 <http://dbpedia.org/property/starring> <http://dbpedia.org/resource/Ross_Newton> . ?v2 <http://dbpedia.org/property/starring> ?v1 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/TelevisionShow>. ?v1 <http://dbpedia.org/ontology/spouse> ?result . },"```sparql
SELECT ?alterEgo ?spouse ?profession WHERE {
  # Find The Shadow's alter ego
  ?shadow dbo:alterEgo ?alterEgo .
  ?shadow rdfs:label ""The Shadow""@en .

  # Find Ross Newton's roles in movies and TV shows
  ?rossNewton dbo:actorIn ?work .
  ?rossNewton rdfs:label ""Ross Newton""@en .
  
  # Ensure the work is both a movie and a television show
  ?work rdf:type ?type .
  FILTER (?type IN (dbo:Film, dbo:TelevisionShow))

  # Find an actor who worked with Ross Newton in these works
  ?commonActor dbo:actorIn ?work .

  # Get the spouse of this common actor
  ?commonActor dbo:spouse ?spouse .

  # Find the profession of The Shadow's alter ego
  ?alterEgo dbo:profession ?profession .
}
```",5,7,6,3,2,3,3,71,0,0,2,0,0.0,0
554,15,val,Give me the leader of the administration of the party member of Independent politician and leader of Portuguese Mozambique.,SELECT ?result WHERE { <http://dbpedia.org/resource/Portuguese_Mozambique> <http://dbpedia.org/property/leader> ?result . ?v1 <http://dbpedia.org/property/leader> ?result . ?v0 <http://dbpedia.org/ontology/party> <http://dbpedia.org/resource/Independent_politician> . ?v1 <http://dbpedia.org/property/leader> ?v0 . },"```sparql
SELECT ?leaderOfAdministration WHERE {
  # Find the independent politician who was a leader of Portuguese Mozambique
  ?person dbo:occupation ""Politician""@en .
  ?person dbo:isLeaderOfCountry ?country .
  ?country rdfs:label ""Portuguese Mozambique""@en .

  # Ensure the person is an independent politician
  FILTER NOT EXISTS {
    ?person dbo:partyMemberOf ?party .
  }

  # Find the leader of the administration they were part of
  OPTIONAL {
    ?administration dbo:leader ?leaderOfAdministration .
    ?person dbo:memberOf ?administration .
  }
}
```",4,4,5,3,2,3,2,20,0,0,3,0,0.0,0
888,16,val,"Give me the commander in the force, that is a societal event and an event, of Serhiy Kotenko and awardee of the award of Oleksandr Syrskyi.",SELECT ?result WHERE { <http://dbpedia.org/resource/Oleksandr_Syrskyi> <http://dbpedia.org/property/awards> ?v3 . ?v2 <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Serhiy_Kotenko> . ?v2 <http://dbpedia.org/ontology/commander> ?result . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?result <http://dbpedia.org/property/awards> ?v3 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. },"```sparql
SELECT ?commander WHERE {
  # Find events related to Serhiy Kotenko that are societal and another type of event
  ?event dbo:agentSerhiyKotenko _:b1 .
  ?event rdf:type dbo:SocietalEvent .
  ?event rdf:type ?eventType .

  # Identify the commander in this force (event)
  ?event dbo:commander ?commander .

  # Find awardee of an award given by Oleksandr Syrskyi
  OPTIONAL {
    ?award dbo:recipient ?awardee .
    ?award dbo:givenByOleksandrSyrskyi _:b2 .
    FILTER (?commander = ?awardee)
  }
}
```",4,6,5,2,2,3,2,20,0,0,1,0,0.0,0
417,45,val,"Give me the child of the child, that is a royalty, of the parent, that is a royalty, of Alexandrine of Mecklenburg-Schwerin and spouse of Princess Caroline-Mathilde of Denmark and child of Christian X of Denmark.",SELECT ?result WHERE { ?v1 <http://dbpedia.org/property/father> ?v0 . ?result <http://dbpedia.org/ontology/parent> ?v1 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. <http://dbpedia.org/resource/Alexandrine_of_Mecklenburg-Schwerin> <http://dbpedia.org/ontology/parent> ?v0 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?result <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Christian_X_of_Denmark> . ?result <http://dbpedia.org/ontology/spouse> <http://dbpedia.org/resource/Princess_Caroline-Mathilde_of_Denmark> . },"```sparql
SELECT ?grandchild WHERE {
  # Alexandrine of Mecklenburg-Schwerin and her parent
  ?alexandrine dbo:spouse ?carolineMathilde .
  ?alexandrine rdfs:label ""Alexandrine of Mecklenburg-Schwerin""@en .
  ?alexandrine dbo:parent ?royalParent .

  # Ensure the parent is royalty
  FILTER EXISTS { ?royalParent rdf:type dbo:Monarch . }

  # Find the child of this royal parent who is also royalty
  ?child dbo:parent ?royalParent .
  FILTER EXISTS { ?child rdf:type dbo:Monarch . }

  # Identify the grandchild (child of the child) who is royalty
  ?grandchild dbo:parent ?child .
  FILTER EXISTS { ?grandchild rdf:type dbo:Monarch . }
}
```",5,7,6,3,3,3,3,71,0,0,1,0,0.0,0
93,16,val,"Give me the death place of the governor of Bob Bartlett and capital of the headquarter, that is a region and a settlement, of Lake Clark National Park and Preserve.",SELECT ?result WHERE { ?v3 <http://dbpedia.org/ontology/deathPlace> ?result . <http://dbpedia.org/resource/Lake_Clark_National_Park_and_Preserve> <http://dbpedia.org/ontology/location> ?v2 . <http://dbpedia.org/resource/Bob_Bartlett> <http://dbpedia.org/property/governor> ?v3 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Region>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. ?v2 <http://dbpedia.org/ontology/capital> ?result . },"```sparql
SELECT ?deathPlace ?capital WHERE {
  # Find Bob Bartlett's governor (assuming a historical connection)
  ?governor dbo:office ""Governor""@en .
  ?governor dbo:relatedTo dbr:Bob_Bartlett .

  # Get the death place of this governor
  ?governor dbo:deathPlace ?deathPlace .

  # Find headquarters of Lake Clark National Park and Preserve
  ?park dbo:headquarters ?hqLocation .
  ?park rdfs:label ""Lake Clark National Park and Preserve""@en .

  # Ensure the headquarters is both a region and a settlement
  ?hqLocation rdf:type dbpedia-owl:Region ;
              rdf:type dbpedia-owl:Settlement .

  # Get the capital of this region/settlement
  ?hqLocation dbo:capital ?capital .
}
```",4,6,5,2,2,3,2,20,0,0,1,0,0.0,0
582,50,val,"Give me the figure known as the nickname of Japan national football team and player in the father, that is an athlete and a soccer manager and a sports manager, of the child of Kazuaki Nagasawa.",SELECT ?result WHERE { ?v4 <http://dbpedia.org/ontology/team> ?result . ?result <http://dbpedia.org/property/nickname> ?v3 . ?v0 <http://dbpedia.org/property/father> ?v4 . ?v0 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Kazuaki_Nagasawa> . <http://dbpedia.org/resource/Japan_national_football_team> <http://dbpedia.org/property/nickname> ?v3 . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Athlete>. ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsManager>. ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerManager>. },"```sparql
SELECT ?father ?nickname WHERE {
  # Identify Kazuaki Nagasawa's child who is an athlete, soccer manager, and sports manager
  ?child dbo:parent ?nagasawa .
  ?nagasawa rdfs:label ""Kazuaki Nagasawa""@en .
  
  OPTIONAL { 
    ?child rdf:type dbo:Athlete .
  }
  
  OPTIONAL {
    ?child rdf:type dbo:SoccerManager .
  }

  OPTIONAL {
    ?child rdf:type dbo:SportsManager .
  }

  # Find the father of this child
  ?child dbo:parent ?father .

  # Check if the father has a nickname related to the Japan national football team
  OPTIONAL {
    ?father dbo:nickname ?nickname .
    FILTER (regex(str(?nickname), ""Japan National Football Team"", ""i""))
  }
}
```",5,8,6,3,2,3,3,71,0,0,1,0,0.0,0
573,43,val,"Give me the person decedent at the residence, that is a settlement, of the professional, that is American, in Politician and parent of John Quincy Adams and person decedent at Massachusetts.","SELECT ?result WHERE { ?v0 <http://dbpedia.org/ontology/nationality> <http://dbpedia.org/resource/United_States>. ?v0 <http://dbpedia.org/property/occupation> ""Politician""@en . ?result <http://dbpedia.org/ontology/deathPlace> <http://dbpedia.org/resource/Massachusetts> . ?v0 <http://dbpedia.org/property/residence> ?v4 . <http://dbpedia.org/resource/John_Quincy_Adams> <http://dbpedia.org/ontology/parent> ?result . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. ?result <http://dbpedia.org/ontology/deathPlace> ?v4 . }","```sparql
SELECT ?decedent WHERE {
  # Find John Quincy Adams' parent who is a politician and American
  ?parent dbo:child dbr:John_Quincy_Adams .
  ?parent dbo:occupation dbr:Politician .
  ?parent dbo:nationality dbr:United_States .

  # Identify the residence of this politician
  OPTIONAL {
    ?parent dbo:residence ?settlement .
    FILTER (regex(str(?settlement), ""Massachusetts"", ""i""))
  }

  # Find person decedent at Massachusetts, specifically at the settlement
  ?decedent dbo:placeOfBirth ?settlement .
  FILTER (regex(str(?decedent), ""died in Massachusetts"", ""i""))
}
```",5,7,6,3,3,3,3,71,0,0,2,0,0.0,0
573,50,val,"Give me the parent of the author, that is a politician and an office holder, of Exchequer Standards and person decedent at the residence, that is a settlement, of the professional, that is American, in Politician.","SELECT ?result WHERE { ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. ?v0 <http://dbpedia.org/property/residence> ?v4 . <http://dbpedia.org/resource/Exchequer_Standards> <http://dbpedia.org/property/author> ?v3 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?result <http://dbpedia.org/ontology/deathPlace> ?v4 . ?v3 <http://dbpedia.org/ontology/parent> ?result . ?v0 <http://dbpedia.org/ontology/nationality> <http://dbpedia.org/resource/United_States>. ?v0 <http://dbpedia.org/property/occupation> ""Politician""@en . }","```sparql
SELECT ?parent WHERE {
  # Find the author of ""Exchequer Standards""
  ?author dbo:work ?exchequerStandards .
  ?exchequerStandards rdfs:label ""Exchequer Standards""@en .

  # Ensure this author has a parent who is a politician and an office holder
  ?author dbo:parent ?parent .
  ?parent rdf:type dbo:Politician ;
          dbo:officeHolder true .

  # Find the settlement where a decedent lived
  OPTIONAL {
    ?decedent dbo:residence ?settlement .
    ?settlement rdf:type dbo:Settlement .
    FILTER EXISTS { ?decedent dbo:deathPlace ?settlement }
  }

  # Ensure there is an American professional in Politician related to this context
  OPTIONAL {
    ?professional dbo:nationality dbr:United_States ;
                  dbo:profession dbr:Politician .
  }
}
```",5,9,6,3,2,3,3,71,0,0,2,0,0.0,0
166,16,val,"Give me the resting place of the military force of Spanish Civil War and entity in the territory administered, that is a country, from Madrid.",SELECT ?result WHERE { ?v2 <http://dbpedia.org/ontology/battle> <http://dbpedia.org/resource/Spanish_Civil_War> . ?result <http://dbpedia.org/ontology/country> ?v3 . ?v2 <http://dbpedia.org/ontology/restingPlace> ?result . ?v3 <http://dbpedia.org/ontology/capital> <http://dbpedia.org/resource/Madrid> . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. },"```sparql
SELECT ?monument ?country WHERE {
  # Find monument related to the Spanish Civil War
  ?monument dbo:militaryConflict dbr:Spanish_Civil_War .
  ?monument dbo:location ?location .

  # Find countries administered by Spain from Madrid
  ?territory dbo:administrativeTerritory ?country ;
             dbo:capital dbr:Madrid .
}
```",4,5,5,2,2,3,2,20,0,0,4,0,0.0,0
508,17,val,"Give me the birthplace of Ma Hongkui and birthplace of the commander, that is Saudi, in the war, that is a military conflict and a societal event, of Hu Yukun.",SELECT ?result WHERE { <http://dbpedia.org/resource/Hu_Yukun> <http://dbpedia.org/ontology/battle> ?v0 . ?v3 <http://dbpedia.org/ontology/nationality> <http://dbpedia.org/resource/Saudi_Arabia>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. <http://dbpedia.org/resource/Ma_Hongkui> <http://dbpedia.org/ontology/birthPlace> ?result . ?v0 <http://dbpedia.org/ontology/commander> ?v3 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?v3 <http://dbpedia.org/ontology/birthPlace> ?result . },"```sparql
SELECT ?maHongkuiBirthplace ?saudiCommanderBirthplace WHERE {
  # Find Ma Hongkui and his birthplace
  ?maHongkui rdfs:label ""Ma Hongkui""@en .
  ?maHongkui dbo:birthPlace ?maHongkuiBirthplace .

  # Identify Hu Yukun's military conflict or societal event involving a Saudi commander
  ?huYukun rdfs:label ""Hu Yukun""@en .
  ?event dbo:participant ?huYukun ;
         a dbo:MilitaryConflict ; # Assuming the event is a military conflict
         dbo:commander ?saudiCommander .

  # Ensure the commander is Saudi
  ?saudiCommander dbo:nationality dbr:Saudi_Arabia .

  # Find the birthplace of the Saudi commander
  ?saudiCommander dbo:birthPlace ?saudiCommanderBirthplace .
}
```",4,7,5,3,2,3,2,20,0,0,3,0,0.0,0
170,21,val,Give me the domain of the profession of John Scholey and birth place of Era Ziganshina and entity in Russia.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Russia> . <http://dbpedia.org/resource/John_Scholey> <http://dbpedia.org/property/occupation> ?v0 . ?result <http://dbpedia.org/ontology/leaderTitle> ?v0 . <http://dbpedia.org/resource/Era_Ziganshina> <http://dbpedia.org/ontology/birthPlace> ?result . },"```sparql
SELECT ?professionDomain ?birthPlace WHERE {
  # Find John Scholey's profession and its domain
  ?scholey dbo:profession ?profession .
  ?scholey rdfs:label ""John Scholey""@en .
  ?profession rdfs:domain ?professionDomain .

  # Find Era Ziganshina's birth place and ensure it is in Russia
  ?ziganshina dbo:birthPlace ?birthPlace .
  ?ziganshina rdfs:label ""Era Ziganshina""@en .
  
  OPTIONAL {
    ?birthPlace dbo:country dbr:Russia .
  }
}
```",4,4,5,2,3,2,3,28,0,0,1,0,0.0,0
965,45,val,"Give me the parent of Louise Mountbatten and spouse of Prince Louis of Battenberg and parent of the person born, that is a noble, as the birth name of George Mountbatten, 2nd Marquess of Milford Haven.","SELECT ?result WHERE { <http://dbpedia.org/resource/Louise_Mountbatten> <http://dbpedia.org/ontology/parent> ?result . ?v0 <http://dbpedia.org/property/birthName> ?v3 . ?result <http://dbpedia.org/ontology/spouse> <http://dbpedia.org/resource/Prince_Louis_of_Battenberg> . <http://dbpedia.org/resource/George_Mountbatten,_2nd_Marquess_of_Milford_Haven> <http://dbpedia.org/property/birthName> ?v3 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Noble>. ?v0 <http://dbpedia.org/ontology/parent> ?result . }","```sparql
SELECT ?parentLouise ?spouseLouis ?parentGeorge WHERE {
  # Find the parent of Louise Mountbatten
  ?louise dbo:birthName ""Louise Mountbatten""@en .
  ?louise dbo:parent ?parentLouise .

  # Find the spouse of Prince Louis of Battenberg
  ?princeLouis dbo:birthName ""Prince Louis of Battenberg""@en .
  ?princeLouis dbo:spouse ?spouseLouis .

  # Find George Mountbatten, 2nd Marquess of Milford Haven and his parent
  ?georgeMountbatten dbo:birthName ""George Mountbatten""@en ;
                     rdf:type dbo:Noble .
  ?georgeMountbatten dbo:parent ?parentGeorge .
}
```",5,6,6,3,3,3,3,71,0,0,1,0,0.0,0
417,53,val,"Give me the child of the child, that is a royalty, of Frederick Francis III, Grand Duke of Mecklenburg-Schwerin and spouse of the parent, that is a royalty, of the child of Knud, Hereditary Prince of Denmark and child of Christian X of Denmark.","SELECT ?result WHERE { ?result <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Christian_X_of_Denmark> . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?result <http://dbpedia.org/ontology/parent> ?v1 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v3 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Knud,_Hereditary_Prince_of_Denmark> . ?v2 <http://dbpedia.org/ontology/child> ?v3 . ?result <http://dbpedia.org/ontology/spouse> ?v2 . ?v1 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Frederick_Francis_III,_Grand_Duke_of_Mecklenburg-Schwerin> . }","```sparql
SELECT ?finalChild WHERE {
  # Frederick Francis III and his child who is royalty
  ?frederick dbp:child ?royalChild .
  ?frederick rdfs:label ""Frederick Francis III, Grand Duke of Mecklenburg-Schwerin""@en .
  
  # Ensure the child is royalty
  OPTIONAL { 
    ?royalChild dbo:title ?title .
    FILTER (regex(str(?title), ""Prince|Princess|Duke|Duchess"", ""i""))
  }
  
  # Spouse of the royal child
  ?royalChild dbo:spouse ?spouse .

  # Knud, Hereditary Prince of Denmark and his child
  ?knud dbp:child ?knudsChild .
  ?knud rdfs:label ""Knud, Hereditary Prince of Denmark""@en .

  # Parent (spouse) of Knud's child who is royalty
  ?knudsChild dbo:parent ?royalParent .
  
  OPTIONAL {
    ?royalParent dbo:title ?title .
    FILTER (regex(str(?title), ""Prince|Princess|Duke|Duchess"", ""i""))
  }
  
  # Child of the royal parent identified above
  ?royalParent dbp:child ?finalChild .
}
```",6,8,7,3,3,3,3,71,0,0,1,0,0.0,0
582,52,val,"Give me the figure known as --10-19 and player in the father, that is an athlete and a soccer manager and a sports manager, of Masami Nagasawa and reference to the residence of the reference, that is a scientist, to Hirotaka Sugawara.","SELECT ?result WHERE { ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsManager>. ?v3 <http://xmlns.com/foaf/0.1/name> ""Hirotaka Sugawara""@en . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Scientist>. ?v3 <http://dbpedia.org/property/residence> ?v2 . <http://dbpedia.org/resource/Masami_Nagasawa> <http://dbpedia.org/property/father> ?v5 . ?v5 <http://dbpedia.org/ontology/team> ?result . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Athlete>. ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerManager>. ?result <http://xmlns.com/foaf/0.1/name> ?v2 . ?result <http://dbpedia.org/property/nickname> ""--10-19""^^<http://www.w3.org/2001/XMLSchema#gMonthDay> . }","```sparql
SELECT ?figure ?residence WHERE {
  # Find Masami Nagasawa's father who is an athlete, soccer manager, and sports manager
  ?nagasawa dbo:parent ?father .
  ?nagasawa rdfs:label ""Masami Nagasawa""@en .
  
  ?father rdf:type ?role .
  FILTER (
    ?role IN (dbo:Athlete, dbo:SoccerManager, dbo:SportsManager)
  )
  
  # Find the figure known as --10-19 related to this father
  OPTIONAL {
    ?figure rdfs:label ""--10-19""@en .
    ?father dbo:relatedTo ?figure .
  }
  
  # Find the residence of a scientist who references Hirotaka Sugawara
  OPTIONAL {
    ?scientist rdf:type dbo:Scientist .
    ?scientist dbo:residence ?residence .
    ?scientist dbo:reference ?sugawara .
    ?sugawara rdfs:label ""Hirotaka Sugawara""@en .
  }
}
```",6,10,7,3,3,3,3,71,0,0,1,0,0.0,0
965,41,val,"Give me the parent of George Mountbatten, 2nd Marquess of Milford Haven and spouse of the spouse of Princess Victoria of Hesse and by Rhine and parent of the child, that is a royalty, of Prince Louis of Battenberg.","SELECT ?result WHERE { ?v4 <http://dbpedia.org/ontology/parent> ?result . <http://dbpedia.org/resource/George_Mountbatten,_2nd_Marquess_of_Milford_Haven> <http://dbpedia.org/ontology/parent> ?result . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. <http://dbpedia.org/resource/Princess_Victoria_of_Hesse_and_by_Rhine> <http://dbpedia.org/ontology/spouse> ?v2 . ?v4 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Prince_Louis_of_Battenberg> . ?result <http://dbpedia.org/ontology/spouse> ?v2 . }","```sparql
SELECT ?grandparent WHERE {
  # Step 1: Find the parent of George Mountbatten, 2nd Marquess of Milford Haven
  ?george dbo:parent ?parent .
  ?george rdfs:label ""George Mountbatten, 2nd Marquess of Milford Haven""@en .

  # Step 2: Identify the spouse of Princess Victoria of Hesse and by Rhine
  ?princess dbo:spouse ?spouse .
  ?princess rdfs:label ""Princess Victoria of Hesse and by Rhine""@en .

  # Step 3: Find the spouse of this spouse (grandchild relationship)
  OPTIONAL {
    ?spouse dbo:spouse ?grandchildSpouse .
  }

  # Step 4: Identify a child of Prince Louis of Battenberg who is royalty
  ?prince dbo:child ?royalChild .
  ?prince rdfs:label ""Prince Louis of Battenberg""@en .

  # Ensure the child is royalty (e.g., has a title)
  FILTER EXISTS { 
    ?royalChild dbo:title ?title .
  }

  # Step 5: Find the parent of this royal child
  OPTIONAL {
    ?royalChild dbo:parent ?grandparent .
  }
}
```",5,6,6,2,3,3,3,71,0,0,1,0,0.0,0
773,50,val,"Give me the parent of the child, that is a royalty, of Louis the German and parent of the successor of the child, that is a royalty, of Louis the Pious.",SELECT ?result WHERE { ?v3 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Louis_the_German> . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. <http://dbpedia.org/resource/Louis_the_Pious> <http://dbpedia.org/ontology/child> ?v0 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v3 <http://dbpedia.org/ontology/parent> ?result . ?v0 <http://dbpedia.org/ontology/successor> ?v4 . ?result <http://dbpedia.org/ontology/child> ?v4 . },"```sparql
SELECT ?parentOfGermanChild ?parentOfPiousSuccessor WHERE {
  # Louis the German and his royal child
  ?louisGerman rdfs:label ""Louis the German""@en .
  ?royalChild dbo:child ?louisGerman ;
              rdf:type dbo:Monarch .
  
  # Parent of Louis the German's royal child
  ?royalChild dbo:parent ?parentOfGermanChild .

  # Louis the Pious and his successor
  ?louisPious rdfs:label ""Louis the Pious""@en .
  ?successor dbo:child ?louisPious ;
             rdf:type dbo:Monarch .

  # Parent of Louis the Pious' royal child (successor)
  ?royalChildOfPious dbo:parent ?parentOfPiousSuccessor ;
                     dbo:child ?louisPious ;
                     rdf:type dbo:Monarch .
}
```",5,7,6,3,2,3,3,71,0,0,2,0,0.0,0
124,46,val,"Give me the military force of the war, that is an event and a military conflict and a societal event, of Frank Rhodes (British Army officer) and commander in the war, that is a societal event and a military conflict, of the reference, that is Australian and an organisation and a military unit, to 'A' Battery, Royal Australian Artillery.","SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v2 <http://xmlns.com/foaf/0.1/name> ""'A' Battery, Royal Australian Artillery""@en . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?result <http://dbpedia.org/ontology/battle> ?v4 . ?v1 <http://dbpedia.org/ontology/commander> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. <http://dbpedia.org/resource/Frank_Rhodes_(British_Army_officer)> <http://dbpedia.org/ontology/battle> ?v4 . ?v2 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Australia>. ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?v2 <http://dbpedia.org/ontology/battle> ?v1 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryUnit>. ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. }","```sparql
SELECT ?militaryForce WHERE {
  # Identify the war involving Frank Rhodes as a commander
  ?war dbo:commander dbr:Frank_Rhodes .
  
  # Ensure the war is an event, military conflict, and societal event
  ?war rdf:type dbo:MilitaryConflict ;
       rdf:type dbo:SocietalEvent ;
       rdf:type dbo:Event .

  # Identify 'A' Battery, Royal Australian Artillery as a reference to this war
  ?reference dbo:reference ?militaryForce .
  ?reference rdfs:label ""A Battery, Royal Australian Artillery""@en .
  
  # Ensure the reference is Australian, an organization, and a military unit
  ?reference rdf:type dbo:MilitaryUnit ;
             rdf:type dbo:Organisation ;
             dbo:country dbr:Australia .

  # Link the war to 'A' Battery through the reference
  ?war dbo:reference ?reference .
}
```",5,13,6,3,2,3,3,71,0,0,9,0,0.0,0
582,27,train,"Give me the figure known as the nickname of the team, that is an organisation, of Hajime Moriyasu.",SELECT ?result WHERE { ?result <http://dbpedia.org/property/nickname> ?v2 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?v1 <http://dbpedia.org/ontology/coach> <http://dbpedia.org/resource/Hajime_Moriyasu> . ?v1 <http://dbpedia.org/property/nickname> ?v2 . },"```sparql
SELECT ?nickname WHERE {
  ?person foaf:name ""Hajime Moriyasu""@en .
  ?person dbo:team ?team .
  ?team rdfs:label ?teamLabel .
  FILTER (CONTAINS(LCASE(?teamLabel), ""japan national football team""))
  
  OPTIONAL {
    ?team dbo:nickname ?nickname .
  }
}
```",3,4,4,3,1,3,3,71,0,0,1,0,0.0,0
47,1,train,Give me the office of Bidesh Ranjan Bose.,SELECT ?result WHERE { <http://dbpedia.org/resource/Bidesh_Ranjan_Bose> <http://dbpedia.org/property/office> ?result . },"```sparql
SELECT ?office WHERE {
  ?person rdfs:label ""Bidesh Ranjan Bose""@en .
  OPTIONAL { 
    ?person dbo:office ?office .
  }
}
```",1,1,2,1,1,3,3,71,0,0,1,0,0.0,0
129,10,train,"Give me the associated musical artist of the actor, that is an organisation, of Dreamville Presents: Revenge.",SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. <http://dbpedia.org/resource/Dreamville_Presents:_Revenge> <http://dbpedia.org/property/starring> ?v1 . ?v1 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . },"```sparql
SELECT ?actor ?organisation ?musicalArtist WHERE {
  # Find the actor associated with ""Dreamville Presents: Revenge""
  ?event dbo:performer ?actor .
  ?event rdfs:label ""Dreamville Presents: Revenge""@en .

  # Find organizations related to this actor
  OPTIONAL { 
    ?actor dbo:memberOf ?organisation .
  }

  # Identify musical artists associated with the organization
  OPTIONAL {
    ?organisation dbo:musicalArtist ?musicalArtist .
  }
}
```",2,3,3,2,1,2,3,28,0,0,4,0,0.0,0
926,20,train,Give me the successor of the child of Ahmed III and father of Mahmud II.,SELECT ?result WHERE { <http://dbpedia.org/resource/Mahmud_II> <http://dbpedia.org/property/father> ?result . ?v1 <http://dbpedia.org/ontology/successor> ?result . ?v1 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Ahmed_III> . },"```sparql
SELECT ?successor WHERE {
  # Find a child of Ahmed III who is also the father of Mahmud II
  ?mustafa dbo:child ?ahmedIII .
  ?ahmedIII rdfs:label ""Ahmed III""@en .
  
  ?mustafa dbo:parent ?mahmudII .
  ?mahmudII rdfs:label ""Mahmud II""@en .

  # Find the successor of Mustafa III
  ?mustafa dbo:successor ?successor .
}
```",3,3,4,2,2,3,3,71,0,0,1,0,0.0,0
933,6,train,Give me the birth name of Alan Warner (musician).,SELECT ?result WHERE { <http://dbpedia.org/resource/Alan_Warner_(musician)> <http://dbpedia.org/property/birthName> ?result . },"```sparql
SELECT ?birthName WHERE {
  ?person rdfs:label ""Alan Warner (musician)""@en .
  ?person dbo:birthName ?birthName .
}
```",1,1,2,1,1,3,3,71,0,0,1,0,0.0,0
791,27,train,"Give me the father of the child, that is a royalty, of the father, that is a royalty and an office holder, of Emperor Antoku.",SELECT ?result WHERE { ?v2 <http://dbpedia.org/property/father> ?result . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. <http://dbpedia.org/resource/Emperor_Antoku> <http://dbpedia.org/property/father> ?v1 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v2 <http://dbpedia.org/property/father> ?v1 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. },"```sparql
SELECT ?grandfather WHERE {
  # Find Emperor Antoku and his father
  ?antoku dbo:parent ?father .
  ?antoku rdfs:label ""Emperor Antoku""@en .

  # Ensure the father is royalty and an office holder
  ?father dbo:officeHolder ?office .
  ?father rdf:type dbo:Monarch .

  # Find a child of this father who is royalty
  ?child dbo:parent ?father .
  ?child rdf:type dbo:Monarch .

  # Find the father of this royal child (the grandfather)
  ?grandfather dbo:parent ?child .
}
```",3,6,4,3,1,3,3,71,0,0,1,0,0.0,0
216,35,train,"Give me the team of the person born, that is a sports manager and a soccer manager and a soccer player, on 1983-12-20 and player in the coach of Croatia national under-21 football team.","SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerManager>. ?v2 <http://dbpedia.org/ontology/team> ?result . ?v1 <http://dbpedia.org/ontology/birthDate> ""1983-12-20""^^<http://www.w3.org/2001/XMLSchema#date> . <http://dbpedia.org/resource/Croatia_national_under-21_football_team> <http://dbpedia.org/ontology/coach> ?v2 . ?result <http://dbpedia.org/ontology/coach> ?v1 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerPlayer>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsManager>. }","```sparql
SELECT ?person ?team WHERE {
  # Identify person born on December 20, 1983
  ?person dbo:birthDate ""1983-12-20""^^xsd:date .
  
  # Check if they are a sports manager and soccer manager
  ?person dbo:occupation ?occupation1 .
  ?person dbo:occupation ?occupation2 .
  FILTER (
    (str(?occupation1) = ""Sports manager""@en || str(?occupation1) = ""Soccer manager""@en)
    && 
    (str(?occupation2) = ""Sports manager""@en || str(?occupation2) = ""Soccer manager""@en)
  )
  
  # Check if they are a former soccer player
  ?person dbo:formerOccupation ?formerOccupation .
  FILTER (str(?formerOccupation) = ""Soccer player""@en)

  # Verify current role with Croatia national under-21 football team
  ?team dbo:coach ?person .
  ?team rdfs:label ""Croatia national under-21 football team""@en .

  # Retrieve the teams they manage as a sports manager or soccer manager
  OPTIONAL {
    ?managedTeam dbo:manager ?person .
    ?managedTeam rdfs:label ?teamLabel .
    BIND(?managedTeam AS ?team)
  }
}
```",4,7,5,2,2,3,3,71,0,0,1,0,0.0,0
579,14,train,"Give me the person born as the birth name of the native, that is an office holder, of Edinburgh.",SELECT ?result WHERE { ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v2 <http://dbpedia.org/property/birthName> ?v0 . ?v2 <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Edinburgh> . ?result <http://dbpedia.org/property/birthName> ?v0 . },"```sparql
SELECT ?person ?birthName WHERE {
  # Find a person associated with Edinburgh who is an office holder
  ?person dbo:placeOfBirth ?edinburgh .
  ?edinburgh rdfs:label ""Edinburgh""@en .

  OPTIONAL { 
    ?person dbo:officeHolder ?office .
  }

  # Retrieve the birth name of this person
  ?person foaf:name ?birthName .
}
```",3,4,4,3,1,3,2,20,0,0,20,0,0.0,0
170,10,train,Give me the birth place of the awardee of People's Artist of Russia.,SELECT ?result WHERE { ?v1 <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/People's_Artist_of_Russia> . ?v1 <http://dbpedia.org/ontology/birthPlace> ?result . },"```sparql
SELECT DISTINCT ?person ?birthPlace WHERE {
  # Find individuals awarded as People's Artist of Russia
  ?person dbo:award ""People's Artist of Russia""@en .
  
  # Retrieve the birthplace of these individuals
  OPTIONAL { 
    ?person dbo:birthPlace ?birthPlace .
  }
}
```",2,2,3,2,1,2,3,28,0,0,33,0,0.0,0
465,21,train,Give me the successor of the child of Alfonso I d'Este and successor of Renée of France.,SELECT ?result WHERE { ?v1 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Alfonso_I_d'Este> . <http://dbpedia.org/resource/Renée_of_France> <http://dbpedia.org/ontology/successor> ?result . ?v1 <http://dbpedia.org/ontology/successor> ?result . },"```sparql
SELECT ?commonSuccessor WHERE {
  # Find a child of Alfonso I d'Este
  ?child dbo:parent ""Alfonso I d'Este""@en .
  
  # Find the successor of this child
  ?child dbo:successor ?successorOfChild .

  # Find Renée of France and her successor
  ?renée rdfs:label ""Renée of France""@en .
  ?renée dbo:successor ?successorOfRenee .

  # Match the successors to find a common individual
  FILTER (?successorOfChild = ?successorOfRenee)
  
  BIND(?successorOfChild AS ?commonSuccessor)
}
```",3,3,4,2,2,3,3,71,0,0,1,0,0.0,0
933,17,train,"Give me the band, that is a group and a band and an organisation, of the person born, that is a musical artist, on 1947-04-21.","SELECT ?result WHERE { ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?v0 <http://dbpedia.org/ontology/birthDate> ""1947-04-21""^^<http://www.w3.org/2001/XMLSchema#date> . ?v0 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Band>. ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Group>. }","```sparql
SELECT ?person ?band WHERE {
  # Find the person born on April 21, 1947, who is a musical artist
  ?person dbo:musicalArtist true .
  ?person dbo:birthDate ""1947-04-21""^^xsd:date .

  # Identify the band associated with this person that is also a group and an organization
  ?band dbo:band ?person ;
        rdf:type dbp:Band ;
        rdf:type dbp:Group ;
        rdf:type dbp:Organization .
}
```",2,6,3,2,1,3,3,71,0,0,2,0,0.0,0
36,12,train,Give me the actor of Being Mrs Elliot and person born in 1971 and person born as Ayo Makun.,"SELECT ?result WHERE { <http://dbpedia.org/resource/Being_Mrs_Elliot> <http://dbpedia.org/ontology/starring> ?result . ?result <http://dbpedia.org/property/birthName> ""Ayo Makun""@en . ?result <http://dbpedia.org/ontology/birthYear> ""1971""^^<http://www.w3.org/2001/XMLSchema#gYear> . }","```sparql
SELECT ?actor ?personBornIn1971 ?personNamedAyoMakun WHERE {
  # Find actor of ""Being Mrs Elliot""
  ?movie dbo:title ""Being Mrs Elliot""@en .
  ?movie dbo:starring ?actor .

  # Find person born in 1971
  ?personBornIn1971 dbo:birthYear ""1971""^^xsd:gYear .

  # Find person born as Ayo Makun
  ?personNamedAyoMakun foaf:name ""Ayo Makun""@en .
}
```",3,3,4,1,3,2,3,28,0,0,1,0,0.0,0
507,5,train,Who is the person born on 1919-06-17?,"SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/birthDate> ""1919-06-17""^^<http://www.w3.org/2001/XMLSchema#date> . }","```sparql
SELECT ?personLabel WHERE {
  ?person dbo:birthDate ""1919-06-17""^^xsd:date .
  ?person rdfs:label ?personLabel .
  FILTER (lang(?personLabel) = 'en')
}
```",1,1,2,1,1,3,3,71,0,14,14,0.0,0.0,0
917,29,train,Give me the child of the father of Keʻelikōlani and child of Kekūanāoʻa and parent of Albert Kamehameha.,"SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Albert_Kamehameha> . <http://dbpedia.org/resource/Keʻelikōlani> <http://dbpedia.org/property/father> ?v3 . ?result <http://dbpedia.org/property/father> ""Kekūanāoʻa""@en . ?result <http://dbpedia.org/ontology/parent> ?v3 . }","```sparql
SELECT ?commonIndividual WHERE {
  # Find Keʻelikōlani's father
  ?keelikoLani dbo:parent ?father .
  ?keelikoLani rdfs:label ""Keʻelikōlani""@en .

  # Find Kekūanāoʻa's child
  ?kekuanaoa dbo:child ?child .
  ?kekuanaoa rdfs:label ""Kekūanāoʻa""@en .

  # Identify the common individual who is both a child of Keʻelikōlani's father and Kekūanāoʻa
  FILTER (?father = ?commonIndividual)
  FILTER (?child = ?commonIndividual)

  # Ensure this common individual is also a parent of Albert Kamehameha
  ?commonIndividual dbo:parent ?albertKamehameha .
  ?albertKamehameha rdfs:label ""Albert Kamehameha""@en .
}
```",4,4,5,2,3,3,3,71,0,0,1,0,0.0,0
465,37,train,"Give me the spouse of the child, that is a royalty, of the parent of Elizabeth of Austria (1526–1545) and successor of Renée of France.",SELECT ?result WHERE { ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?result <http://dbpedia.org/ontology/spouse> ?v3 . ?v0 <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Elizabeth_of_Austria_(1526–1545)> . ?v0 <http://dbpedia.org/ontology/child> ?v3 . <http://dbpedia.org/resource/Renée_of_France> <http://dbpedia.org/ontology/successor> ?result . },"```sparql
SELECT ?spouse WHERE {
  # Find Elizabeth of Austria and her parent
  ?elizabeth dbo:parent ?parent .
  ?elizabeth rdfs:label ""Elizabeth of Austria (1526–1545)""@en .

  # Find successor of Renée of France
  ?renée dbo:succeededBy ?successor .
  ?renée rdfs:label ""Renée of France""@en .

  # Find a child who is royalty from the parent and successor
  ?child dbo:parent ?parent ;
         dbo:parent ?successor ;
         rdf:type dbo:RoyalFamilyMember .

  # Find spouse of this royal child
  ?child dbo:spouse ?spouse .
}
```",4,5,5,3,2,3,3,71,0,0,1,0,0.0,0
606,4,train,"Give me the figure known, that is a university and a sports league and an educational institution, as Penn Quakers.",SELECT ?result WHERE { ?result <http://dbpedia.org/property/nickname> <http://dbpedia.org/resource/Penn_Quakers> . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/EducationalInstitution>. ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/University>. ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsLeague>. },"```sparql
SELECT ?entity WHERE {
  # Find the University of Pennsylvania
  ?entity rdfs:label ""University of Pennsylvania""@en .
  
  # Ensure it is associated with a sports team known as Quakers
  OPTIONAL { 
    ?entity dbo:sportsTeam ?team .
    ?team rdfs:label ""Quakers""@en .
  }
  
  # Ensure it is an educational institution
  OPTIONAL {
    ?entity rdf:type dbpedia-owl:EducationalInstitution .
  }
}
```",1,4,2,1,1,3,2,20,0,0,1,0,0.0,0
976,19,train,"Give me the office of the leader, that is a politician, of Grand National Assembly of Turkey and office of Meral Akşener.",SELECT ?result WHERE { <http://dbpedia.org/resource/Meral_Akşener> <http://dbpedia.org/property/office> ?result . <http://dbpedia.org/resource/Grand_National_Assembly_of_Turkey> <http://dbpedia.org/ontology/leader> ?v2 . ?v2 <http://dbpedia.org/property/office> ?result . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. },"```sparql
SELECT ?officeLeader ?officeMeralAkseren WHERE {
  # Find office of leader of Grand National Assembly of Turkey
  ?assembly dbo:leader ?leader .
  ?assembly rdfs:label ""Grand National Assembly of Turkey""@en .
  ?leader dbo:occupation ?officeLeader .

  # Find offices held by Meral Akşener
  ?akseren foaf:name ""Meral Akşener"" .
  ?akseren dbo:politicalParty ?party .
  OPTIONAL { 
    ?akseren dbo:positionHeld ?officeMeralAkseren .
  }
}
```",3,4,4,2,2,3,3,71,0,0,1,0,0.0,0
508,7,train,"Give me the birthplace of the commander, that is a politician, in 1939–1940 Winter Offensive.",SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/birthPlace> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. <http://dbpedia.org/resource/1939–1940_Winter_Offensive> <http://dbpedia.org/ontology/commander> ?v1 . },"```sparql
SELECT ?birthPlace WHERE {
  ?person dbo:birthPlace ?birthPlace .
  ?person rdfs:label ""Georgy Zhukov""@en .
}
```",2,3,3,2,1,3,2,20,0,3,11,0.0,0.0,0
417,14,train,"Give me the child of the child, that is a royalty, of Frederick Francis III, Grand Duke of Mecklenburg-Schwerin.","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/parent> ?v1 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v1 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Frederick_Francis_III,_Grand_Duke_of_Mecklenburg-Schwerin> . }","```sparql
SELECT ?grandchild WHERE {
  # Identify Frederick Francis III
  ?frederick rdfs:label ""Frederick Francis III, Grand Duke of Mecklenburg-Schwerin""@en .
  
  # Find his children
  ?frederick dbo:child ?child .

  # For each child, find their children (grandchildren of Frederick)
  ?child dbo:child ?grandchild .

  # Ensure the grandchild is royalty
  ?grandchild rdf:type dbo:Monarch .
}
```",2,3,3,2,1,3,3,71,0,0,8,0,0.0,0
865,9,train,Give me the native of British Raj and father of AK Abdul Momen.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/British_Raj> . <http://dbpedia.org/resource/AK_Abdul_Momen> <http://dbpedia.org/property/father> ?result . },"```sparql
SELECT ?father ?nativeOfBritishRaj WHERE {
  # Find AK Abdul Momen and his father
  ?momen dbo:parent ?father .
  ?momen rdfs:label ""AK Abdul Momen""@en .

  # Check if the father is associated with being a native of British Raj
  OPTIONAL {
    ?father dbo:nationality ?nationality .
    FILTER (regex(str(?nationality), ""British Raj"", ""i"") || regex(str(?nationality), ""India|Pakistan"", ""i""))
  }
  
  OPTIONAL {
    ?father dbo:birthPlace ?place .
    FILTER (regex(str(?place), ""British Raj"", ""i"") || regex(str(?place), ""India|Pakistan"", ""i""))
  }

  BIND (""Yes"" AS ?nativeOfBritishRaj)
}
```",2,2,3,1,2,3,3,71,0,0,1,0,0.0,0
41,15,train,"Give me the party of Enda Kenny and party of the leader, that is a politician and an office holder, of 2005 Castlereagh Borough Council election.",SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/party> ?result . <http://dbpedia.org/resource/Enda_Kenny> <http://dbpedia.org/ontology/party> ?result . <http://dbpedia.org/resource/2005_Castlereagh_Borough_Council_election> <http://dbpedia.org/property/leader> ?v1 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. },"```sparql
SELECT ?endakennyParty ?castlereaghLeaderParty WHERE {
  # Find Enda Kenny's party
  ?endakenny dbo:party ?endakennyParty .
  ?endakenny rdfs:label ""Enda Kenny""@en .

  # Find a prominent politician from the 2005 Castlereagh Borough Council election and their party
  OPTIONAL {
    ?castlereaghLeader dbo:election ?election .
    ?election dbo:date ?date .
    FILTER (YEAR(?date) = 2005 && CONTAINS(LCASE(str(?election)), ""castlereagh borough council""))
    ?castlereaghLeader dbo:party ?castlereaghLeaderParty .
    # Ensure the leader is a politician and office holder
    ?castlereaghLeader rdf:type dbo:Politician .
    OPTIONAL { ?castlereaghLeader dbo:officeHolder true . }
  }
}
```",3,5,4,2,2,2,3,28,1,0,0,1.0,1.0,1.0
83,10,train,"Who is the governor of the commander, that is a politician, in Central African Republic Civil War?",SELECT ?result WHERE { ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. <http://dbpedia.org/resource/Central_African_Republic_Civil_War> <http://dbpedia.org/ontology/commander> ?v0 . ?v0 <http://dbpedia.org/property/governor> ?result . },"```sparql
SELECT ?governor WHERE {
  # Find entities related to the Central African Republic Civil War
  ?war dbo:wikiPageRedirects db:Civil_War_in_the_Central_African_Republic .
  
  # Identify commanders who are also politicians
  ?commander dbo:occupation ""Politician"" ;
             dbo:memberOf ?group .
  ?group dbo:wikiPageRedirects ?war .

  # Find the governor or superior of these political commanders
  ?governor dbo:subOrganizationOf* ?commander .
}
```",2,3,3,2,1,3,2,20,0,0,19,0,0.0,0
573,0,train,Give me the person decedent at Massachusetts.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/deathPlace> <http://dbpedia.org/resource/Massachusetts> . },"```sparql
SELECT ?person ?label WHERE {
  ?person dbo:deathPlace ?deathPlace .
  ?person rdfs:label ?label .
  FILTER (CONTAINS(LCASE(str(?deathPlace)), ""massachusetts""))
}
```",1,1,2,1,1,3,3,71,950,8332,18,0.10234863176039646,0.981404958677686,0.18536585365853658
267,5,train,Give me the birth date of Dan Cathy.,SELECT ?result WHERE { <http://dbpedia.org/resource/Dan_Cathy> <http://dbpedia.org/ontology/birthDate> ?result . },"```sparql
SELECT ?birthday WHERE {
  ?person rdfs:label ""Dan Cathy""@en .
  ?person dbo:birthday ?birthday .
}
```",1,1,2,1,1,3,2,20,0,0,1,0,0.0,0
987,1,train,Give me the birth place of Moamer Kasumović.,SELECT ?result WHERE { <http://dbpedia.org/resource/Moamer_Kasumović> <http://dbpedia.org/ontology/birthPlace> ?result . },"```sparql
SELECT ?birthPlace WHERE {
  ?person rdfs:label ""Slobodan Milošević""@en .
  ?person dbo:birthPlace ?birthPlace .
}
```",1,1,2,1,1,3,3,71,0,2,3,0.0,0.0,0
935,1,train,Give me the headquarter of Provincial Assembly of Balochistan.,SELECT ?result WHERE { <http://dbpedia.org/resource/Provincial_Assembly_of_Balochistan> <http://dbpedia.org/ontology/location> ?result . },"```sparql
SELECT ?headquarters WHERE {
  ?assembly rdfs:label ""Provincial Assembly of Balochistan""@en .
  ?assembly dbo:headquarters ?headquarters .
}
```",1,1,2,1,1,3,2,20,0,0,1,0,0.0,0
170,11,train,Give me the domain of the profession of John Scholey.,SELECT ?result WHERE { <http://dbpedia.org/resource/John_Scholey> <http://dbpedia.org/property/occupation> ?v1 . ?result <http://dbpedia.org/ontology/leaderTitle> ?v1 . },"```sparql
SELECT DISTINCT ?profession ?domain WHERE {
  # Find John Scholey's occupation(s)
  ?scholey dbo:occupation ?profession .
  ?scholey rdfs:label ""John Scholey""@en .

  # Retrieve the domain for each profession
  ?profession rdfs:domain ?domain .
}
```",2,2,3,2,1,2,3,28,0,0,39395,0,0.0,0
129,7,train,Give me the associated musical artist of Saba (rapper) and professional in .,"SELECT ?result WHERE { <http://dbpedia.org/resource/Saba_(rapper)> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?result <http://dbpedia.org/property/occupation> """"@en . }","```sparql
SELECT ?artist WHERE {
  # Find Saba (rapper) entity
  ?saba dbo:name ""Saba""@en .
  
  # Find associated musical artists with Saba
  OPTIONAL { 
    ?saba dbo:associatedMusicalArtist ?artist .
  }
}
```",2,2,3,1,2,2,3,28,0,0,7,0,0.0,0
445,11,train,"Give me the entity in the residence, that is a country, of Anna Sharkey.",SELECT ?result WHERE { <http://dbpedia.org/resource/Anna_Sharkey> <http://dbpedia.org/property/residence> ?v0 . ?result <http://dbpedia.org/ontology/location> ?v0 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. },"```sparql
SELECT ?country WHERE {
  # Find the residence of Anna Sharkey
  ?anna dbo:residence ?residence .
  ?anna rdfs:label ""Anna Sharkey""@en .

  # Identify the country where the residence is located
  ?residence dbp:country ?country .
}
```",2,3,3,2,1,3,3,71,0,2,3570,0.0,0.0,0
41,17,train,Give me the party of the person born as David Declan Costello and party of Enda Kenny.,"SELECT ?result WHERE { ?v2 <http://dbpedia.org/ontology/party> ?result . <http://dbpedia.org/resource/Enda_Kenny> <http://dbpedia.org/ontology/party> ?result . ?v2 <http://dbpedia.org/property/birthName> ""David Declan Costello""@en . }","```sparql
SELECT ?person ?name ?party WHERE {
  # Find David Declan Costello and his party affiliation
  OPTIONAL {
    ?costello rdfs:label ""David Declan Costello""@en .
    ?costello foaf:name ?name .
    ?costello dbo:partyAffiliation ?partyCostello .
    BIND(?costello AS ?person)
  }
  
  # Find Enda Kenny and his party affiliation
  OPTIONAL {
    ?kenny rdfs:label ""Enda Kenny""@en .
    ?kenny foaf:name ?name .
    ?kenny dbo:partyAffiliation ?partyKenny .
    BIND(?kenny AS ?person)
  }
  
  # Return the results for both individuals
  FILTER (?partyCostello != UNDEF || ?partyKenny != UNDEF)
}
```",3,3,4,2,2,2,3,28,0,0,1,0,0.0,0
41,9,train,Give me the party of Declan Costello and party of Enda Kenny.,SELECT ?result WHERE { <http://dbpedia.org/resource/Enda_Kenny> <http://dbpedia.org/ontology/party> ?result . <http://dbpedia.org/resource/Declan_Costello> <http://dbpedia.org/ontology/party> ?result . },"```sparql
SELECT ?person ?name ?partyLabel WHERE {
  # Find Declan Costello's party
  OPTIONAL {
    ?costello dbo:name ""Declan Costello""@en .
    ?costello dbo:party ?partyCostello .
    ?partyCostello rdfs:label ?partyLabelCostello .
    BIND(""Declan Costello"" AS ?name)
    BIND(?partyLabelCostello AS ?partyLabel)
  }
  
  # Find Enda Kenny's party
  OPTIONAL {
    ?kenny dbo:name ""Enda Kenny""@en .
    ?kenny dbo:party ?partyKenny .
    ?partyKenny rdfs:label ?partyLabelKenny .
    BIND(""Enda Kenny"" AS ?name)
    BIND(?partyLabelKenny AS ?partyLabel)
  }
}
```",2,2,3,1,2,2,3,28,0,0,1,0,0.0,0
98,5,train,"Give me the region, that is a country, of Philippine Standard Time.",SELECT ?result WHERE { ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. ?result <http://dbpedia.org/property/timeZone> <http://dbpedia.org/resource/Philippine_Standard_Time> . },"```sparql
SELECT ?country WHERE {
  ?pst dbo:wikiPageRedirects db:Q11173 .
  ?pst dbo:country ?country .
}
```",1,2,2,1,1,2,3,28,0,0,8,0,0.0,0
933,12,train,Give me the reference to Alan Warner and band of The Ramong Sound.,"SELECT ?result WHERE { <http://dbpedia.org/resource/The_Ramong_Sound> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?result <http://xmlns.com/foaf/0.1/name> ""Alan Warner""@en . }","```sparql
SELECT ?association WHERE {
  # Find Alan Warner and his associations with The Ramones
  OPTIONAL {
    ?alanWarner dbo:member ?ramones .
    ?alanWarner rdfs:label ""Alan Warner""@en .
    ?ramones rdfs:label ""The Ramones""@en .
  }
  
  OPTIONAL {
    ?alanWarner dbo:reference ?ramones .
    ?alanWarner rdfs:label ""Alan Warner""@en .
    ?ramones rdfs:label ""The Ramones""@en .
  }

  OPTIONAL {
    ?alanWarner dbo:performerIn ?event .
    ?event dbo:band ?ramones .
    ?alanWarner rdfs:label ""Alan Warner""@en .
    ?ramones rdfs:label ""The Ramones""@en .
  }
}
```",2,2,3,1,2,3,3,71,0,0,1,0,0.0,0
773,6,train,Give me the successor of Charles the Bald.,SELECT ?result WHERE { <http://dbpedia.org/resource/Charles_the_Bald> <http://dbpedia.org/ontology/successor> ?result . },"```sparql
SELECT ?successor WHERE {
  ?charles dbo:successor ?successor .
  ?charles rdfs:label ""Charles the Bald""@en .
}
```",1,1,2,1,1,3,3,71,2,0,0,1.0,1.0,1.0
236,8,train,Give me the party member of the administration of James Madison.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/party> ?v0 . ?v0 <http://dbpedia.org/property/leader> <http://dbpedia.org/resource/James_Madison> . },"```sparql
SELECT ?partyMember WHERE {
  # Find James Madison and his administration members
  ?madison dbo:presidentOf ?country .
  ?madison rdfs:label ""James Madison""@en .
  
  # Identify individuals associated with his administration
  ?administration dbo:member ?person .
  ?administration dbo:head ?madison .

  # Filter for party membership in the Democratic-Republican Party
  ?person dbo:partyMemberOf ?party .
  FILTER (regex(str(?party), ""Democratic-Republican Party"", ""i""))
  
  BIND (?person AS ?partyMember)
}
```",2,2,3,2,1,3,2,20,0,0,597,0,0.0,0
826,5,train,"Who is the reference, that is a royalty, to Louis I?","SELECT ?result WHERE { ?result <http://xmlns.com/foaf/0.1/name> ""Louis I""@en . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. }","```sparql
SELECT ?royalty WHERE {
  # Find Louis I
  ?louisI rdfs:label ""Louis I""@en .
  
  # Explore royal relationships (parent, sibling, spouse)
  OPTIONAL { 
    ?louisI dbo:parent ?royalty .
  }
  OPTIONAL { 
    ?louisI dbo:sibling ?royalty .
  }
  OPTIONAL { 
    ?louisI dbo:spouse ?royalty .
  }

  # Ensure the person is royalty
  FILTER (regex(str(?royalty), ""King|Queen|Emperor|Empress|Prince|Princess"", ""i""))
}
```",1,2,2,1,1,3,3,71,0,0,8,0,0.0,0
216,39,train,"Give me the team of the person born, that is a sports manager and a soccer manager and a soccer player, on the death of Pavel Vezhinov and player in Mario Ivanković.",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/coach> ?v1 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerPlayer>. ?v1 <http://dbpedia.org/ontology/birthDate> ?v0 . <http://dbpedia.org/resource/Mario_Ivanković> <http://dbpedia.org/ontology/team> ?result . <http://dbpedia.org/resource/Pavel_Vezhinov> <http://dbpedia.org/ontology/deathDate> ?v0 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsManager>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerManager>. },"```sparql
SELECT ?team WHERE {
  # Find the death date of Pavel Vezhinov
  ?vezhinov dbo:deathDate ?deathDate .
  ?vezhinov rdfs:label ""Pavel Vezhinov""@en .

  # Identify a person who is a sports manager, soccer manager, and player born on that date
  ?person dbo:birthDate ?birthDate ;
          dbo:occupation ?occupation1, ?occupation2, ?occupation3 .
  FILTER (?birthDate = ?deathDate)
  FILTER (CONTAINS(LCASE(str(?occupation1)), ""sports manager""))
  FILTER (CONTAINS(LCASE(str(?occupation2)), ""soccer manager""))
  FILTER (CONTAINS(LCASE(str(?occupation3)), ""soccer player""))

  # Find the team where this person played during Mario Ivanković's career
  ?playerTeam dbo:member ?person ;
              dbo:teamMember ?marioIvankovic .
  ?marioIvankovic rdfs:label ""Mario Ivanković""@en .

  # Return the team name
  ?playerTeam rdfs:label ?team .
}
```",4,7,5,3,2,3,3,71,0,0,1,0,0.0,0
579,5,train,"Give me the birth name of Jane Percy, Duchess of Northumberland.","SELECT ?result WHERE { <http://dbpedia.org/resource/Jane_Percy,_Duchess_of_Northumberland> <http://dbpedia.org/property/birthName> ?result . }","```sparql
SELECT ?birthName WHERE {
  ?person rdfs:label ""Jane Percy, Duchess of Northumberland""@en .
  ?person dbo:birthName ?birthName .
}
```",1,1,2,1,1,3,2,20,1,0,0,1.0,1.0,1.0
200,0,train,Give me the reference to Angelcorpse.,"SELECT ?result WHERE { ?result <http://xmlns.com/foaf/0.1/name> ""Angelcorpse""@en . }","```sparql
SELECT ?band ?genre WHERE {
  ?band rdfs:label ""Angelcorpse""@en .
  OPTIONAL { ?band dbo:genre ?genre . }
}
```",1,1,2,1,1,2,2,9,1,2,0,0.3333333333333333,1.0,0.5
606,7,train,"Give me the figure known as the nickname of DeKalb, Illinois.","SELECT ?result WHERE { <http://dbpedia.org/resource/DeKalb,_Illinois> <http://dbpedia.org/property/nickname> ?v1 . ?result <http://dbpedia.org/property/nickname> ?v1 . }","```sparql
SELECT ?nickname WHERE {
  ?dekalb dbo:officialName ""DeKalb, Illinois""@en .
  OPTIONAL { 
    ?dekalb dbo:commonName ?nickname .
  }
}
```",2,2,3,2,1,3,2,20,0,0,1,0,0.0,0
445,18,train,Give me the death place of Patrick Moore and entity in United Kingdom and entity in England.,SELECT ?result WHERE { <http://dbpedia.org/resource/Patrick_Moore> <http://dbpedia.org/ontology/deathPlace> ?result . ?result <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/United_Kingdom> . ?result <http://dbpedia.org/ontology/location> <http://dbpedia.org/resource/England> . },"```sparql
SELECT ?deathPlace (SAMPLE(?ukEntity) AS ?ukEntity) (SAMPLE(?englandEntity) AS ?englandEntity) WHERE {
  # Find death place of Patrick Moore
  dbr:Patrick_Moore dbo:deathPlace ?deathPlace .

  # Find an entity in the United Kingdom related to astronomy or Patrick Moore's interests
  OPTIONAL { 
    ?ukEntity a dbo:AstronomicalObservatory ;
              dbo:country dbr:United_Kingdom .
  }

  # Find an entity specifically in England, possibly related to astronomy
  OPTIONAL {
    ?englandEntity a dbo:AstronomicalObservatory ;
                   dbo:location dbr:England .
  }
}
```",3,3,4,1,3,3,3,71,1,1,0,0.5,1.0,0.6666666666666666
507,1,train,Give me the director of Entertaining Mr Sloane (film).,SELECT ?result WHERE { <http://dbpedia.org/resource/Entertaining_Mr_Sloane_(film)> <http://dbpedia.org/ontology/director> ?result . },"```sparql
SELECT ?director WHERE {
  ?film rdfs:label ""Entertaining Mr Sloane""@en .
  ?film dbo:director ?director .
}
```",1,1,2,1,1,3,3,71,0,0,1,0,0.0,0
273,9,train,Give me the child of the child of Edoardo Agnelli (1831-1871).,SELECT ?result WHERE { ?v0 <http://dbpedia.org/ontology/parent> <http://dbpedia.org/resource/Edoardo_Agnelli_(1831-1871)> . ?v0 <http://dbpedia.org/ontology/child> ?result . },"```sparql
SELECT ?grandchild WHERE {
  # Identify Edoardo Agnelli and find his child
  ?edoardo dbo:birthYear ""1831""^^xsd:gYear ;
           dbo:deathYear ""1871""^^xsd:gYear ;
           rdfs:label ""Edoardo Agnelli""@en .
  
  ?edoardo dbo:child ?child .

  # From the child, find their own child (Edoardo's grandchild)
  ?child dbo:child ?grandchild .
}
```",2,2,3,2,1,3,2,20,0,0,1,0,0.0,0
83,13,train,"Give me the ruling party in the birthplace, that is a town and Brazilian and a soccer club, of the member, that is a sports manager, of Kedah FA.",SELECT ?result WHERE { ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsManager>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Town>. ?v1 <http://dbpedia.org/property/leaderParty> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerClub>. ?v0 <http://dbpedia.org/ontology/team> <http://dbpedia.org/resource/Kedah_FA> . ?v1 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Brazil>. ?v0 <http://dbpedia.org/ontology/birthPlace> ?v1 . },"```sparql
SELECT ?rulingParty WHERE {
  # Find member of Kedah FA who is a sports manager
  ?person dbo:memberOfKedahFA true .
  ?person dbo:occupation ""Sports Manager""@en .

  # Get birthplace details ensuring it's a town in Brazil with a soccer club
  ?person dbo:birthPlace ?town .
  ?town rdf:type dbo:Town .
  ?town dbo:country dbr:Brazil .
  
  OPTIONAL {
    ?town dbo:soccerClub ?club .
    FILTER EXISTS { ?club rdf:type dbo:SoccerClub }
  }

  # Find the ruling party in that town
  ?town dbo:rulingParty ?rulingParty .
}
```",3,7,4,3,1,3,2,20,0,0,1,0,0.0,0
507,36,train,Give me the professional in the profession of the person born on 1966-02-18 and spouse of Anne V. Coates.,"SELECT ?result WHERE { ?v0 <http://dbpedia.org/property/occupation> ?v1 . ?v0 <http://dbpedia.org/ontology/birthDate> ""1966-02-18""^^<http://www.w3.org/2001/XMLSchema#date> . ?result <http://dbpedia.org/ontology/spouse> <http://dbpedia.org/resource/Anne_V._Coates> . ?result <http://dbpedia.org/property/occupation> ?v1 . }","```sparql
SELECT ?professional WHERE {
  # Step 1: Identify the person born on 1966-02-18
  ?person dbo:birthday ""1966-02-18""^^xsd:date .
  
  # Step 2: Determine their profession
  ?person dbo:occupation ?profession .

  # Step 3: Find Anne V. Coates' spouse(s)
  ?anneVCoates rdfs:label ""Anne V. Coates""@en ;
              dbo:spouse ?spouse .

  # Step 4: Check if any of these spouses share the same profession
  ?spouse dbo:occupation ?profession .
  
  # Return the professional who matches this criteria
  BIND(?spouse AS ?professional)
}
```",4,4,5,3,2,3,3,71,0,0,1,0,0.0,0
715,26,train,"Give me the commander in the force of the mayor, that is an office holder and a politician and a president, of 1933 Spanish general election.",SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v2 <http://dbpedia.org/ontology/commander> ?v1 . <http://dbpedia.org/resource/1933_Spanish_general_election> <http://dbpedia.org/property/leader> ?v1 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/President>. ?v2 <http://dbpedia.org/ontology/commander> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. },"```sparql
SELECT ?commander WHERE {
  # Find the individual who was a mayor and later became president in 1933
  ?person dbo:officeHolder ""Mayor""@en .
  ?person dbo:politicalAffiliation ?affiliation .
  ?person dbo:presidentOfSpain ?election .
  ?election dbo:date ""1933""^^xsd:gYear .

  # Find the commander associated with this person
  OPTIONAL {
    ?person dbo:militaryCommander ?commander .
  }
}
```",3,6,4,3,1,3,3,71,0,0,28,0,0.0,0
715,4,train,"Give me the force, that is a military conflict, of Abd el-Krim.",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Abd_el-Krim> . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. },"```sparql
SELECT ?conflict WHERE {
  ?abdElKrim dbo:participatedIn ?conflict .
  ?abdElKrim rdfs:label ""Abd el-Krim""@en .
  FILTER (isLiteral(?conflict))
}
```",1,2,2,1,1,3,3,71,0,0,2,0,0.0,0
839,36,train,"Give me the band of Kevin Russell (musician) and band of the band, that is a musical artist, of the professional in Musician.","SELECT ?result WHERE { <http://dbpedia.org/resource/Kevin_Russell_(musician)> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?v0 <http://dbpedia.org/ontology/associatedMusicalArtist> ?v1 . ?v0 <http://dbpedia.org/property/occupation> ""Musician""@en . ?result <http://dbpedia.org/ontology/bandMember> ?v1 . }","```sparql
SELECT ?kevinRussellBand ?bandOfTheBand WHERE {
  # Find Kevin Russell and his associated band
  ?kevinRuss ell:member ?kevinRussellBand .
  ?kevinRuss rdfs:label ""Kevin Russell (musician)""@en .

  # Check if the band is linked to another musical artist or band
  OPTIONAL {
    ?kevinRussellBand dbo:bandMember ?bandOfTheBand .
    FILTER EXISTS { ?bandOfTheBand a dbo:MusicalArtist }
  }
}
```",4,5,5,3,2,3,3,71,0,0,1,0,0.0,0
47,37,train,"Give me the office of the awardee of the award, that is an award, of Mantu Ghosh and office of Ajoy Mukherjee.",SELECT ?result WHERE { ?v3 <http://dbpedia.org/property/office> ?result . <http://dbpedia.org/resource/Ajoy_Mukherjee> <http://dbpedia.org/property/office> ?result . <http://dbpedia.org/resource/Mantu_Ghosh> <http://dbpedia.org/property/awards> ?v0 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Award>. ?v3 <http://dbpedia.org/property/awards> ?v0 . },"```sparql
SELECT ?awardeeOffice (GROUP_CONCAT(?awardLabel; separator="", "") AS ?awards) ?mukherjeeOffice WHERE {
  # Find awards given by Mantu Ghosh and their awardees' offices
  ?award dbo:recipient ?awardee .
  ?award dbo:givenBy ""Mantu Ghosh"" .
  OPTIONAL { ?awardee dbo:office ?awardeeOffice . }
  OPTIONAL { ?award rdfs:label ?awardLabel . FILTER (lang(?awardLabel) = 'en') }

  # Find office of Ajoy Mukherjee
  ?mukherjee dbo:birthName ""Ajoy Kumar Mukherjee"" .
  OPTIONAL { ?mukherjee dbo:office ?mukherjeeOffice . }
  
  # Ensure we get distinct results for each awardee and Ajoy Mukherjee
  GROUP BY ?awardeeOffice ?mukherjeeOffice
}
```",4,5,5,3,2,3,3,71,0,0,1,0,0.0,0
465,17,train,"Give me the child, that is a royalty, of the parent of Charles Orlando, Dauphin of France.","SELECT ?result WHERE { ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. <http://dbpedia.org/resource/Charles_Orlando,_Dauphin_of_France> <http://dbpedia.org/ontology/parent> ?v1 . ?v1 <http://dbpedia.org/ontology/child> ?result . }","```sparql
SELECT ?child WHERE {
  # Identify Charles Orlando, Dauphin of France
  ?charlesOrlando rdfs:label ""Charles Orlando, Dauphin of France""@en .
  
  # Find his parent
  ?parent dbo:parent ?charlesOrlando .

  # Find a child of this parent who is royalty
  ?child dbo:parent ?parent .
  FILTER EXISTS { 
    ?child rdf:type ?royaltyType .
    VALUES ?royaltyType {
      dbpedia-owl:Monarch
      dbpedia-owl:King
      dbpedia-owl:Queen
      # Add other relevant types if necessary
    }
  }
}
```",2,3,3,2,1,3,3,71,0,0,2,0,0.0,0
839,37,train,"Give me the band of Matthias Röhr and band of the member of the band, that is a band and a group, of Peter Schorowsky.",SELECT ?result WHERE { ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Group>. ?result <http://dbpedia.org/ontology/bandMember> <http://dbpedia.org/resource/Matthias_Röhr> . ?result <http://dbpedia.org/ontology/bandMember> ?v3 . ?v0 <http://dbpedia.org/ontology/bandMember> ?v3 . <http://dbpedia.org/resource/Peter_Schorowsky> <http://dbpedia.org/ontology/associatedMusicalArtist> ?v0 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Band>. },"```sparql
SELECT ?bandOfMatthias ?bandOfMember WHERE {
  # Find Matthias Röhr and his band
  ?matthias dbo:member ?bandOfMatthias .
  ?matthias rdfs:label ""Matthias Röhr""@en .

  # Find Peter Schorowsky's band
  ?peter dbo:member ?bandOfPeter .
  ?peter rdfs:label ""Peter Schorowsky""@en .

  # Identify a member of Peter Schorowsky's band that is also a band and group
  ?member dbo:member ?bandOfMember .
  ?member dbo:type dbr:Band .
  ?member dbo:type dbr:MusicalGroup .
  FILTER (?member != ?peter) # Ensure it's not Peter himself

  # Ensure the member is part of Peter Schorowsky's band
  ?bandOfPeter dbo:member ?member .
}
```",4,6,5,3,2,3,3,71,0,0,1,0,0.0,0
508,13,train,"Give me the birthplace of the commander, that is a politician, in the war, that is a military conflict and a societal event and an event, of Hayao Tada.",SELECT ?result WHERE { ?v0 <http://dbpedia.org/ontology/commander> ?v1 . ?v1 <http://dbpedia.org/ontology/birthPlace> ?result . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. <http://dbpedia.org/resource/Hayao_Tada> <http://dbpedia.org/ontology/battle> ?v0 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. },"```sparql
SELECT ?birthPlace WHERE {
  # Find Hayao Tada
  ?tada dbo:birthPlace ?birthPlace .
  ?tada rdfs:label ""Hayao Tada""@en .

  # Ensure he was a commander in a war and also a politician
  OPTIONAL { 
    ?tada dbo:occupation ?occupation .
    FILTER (CONTAINS(LCASE(str(?occupation)), ""commander"") && CONTAINS(LCASE(str(?occupation)), ""politician""))
  }

  # Identify the military conflict or war
  OPTIONAL {
    ?war dbo:participant ?tada .
    ?war rdf:type dbo:MilitaryConflict .
  }
}
```",3,7,4,3,1,3,2,20,0,0,49,0,0.0,0
365,14,train,"Give me the spouse of the native, that is a politician, of the reference to Полтавская губерния.","SELECT ?result WHERE { ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v0 <http://dbpedia.org/ontology/birthPlace> ?v2 . ?v2 <http://xmlns.com/foaf/0.1/name> ""Полтавская губерния""@en . ?v0 <http://dbpedia.org/ontology/spouse> ?result . }","```sparql
SELECT ?spouse WHERE {
  # Find individuals native to Poltava Governorate who are politicians
  ?person dbo:birthPlace dbr:Poltava_Governorate ;
          dbo:occupation dbc:Politicians_by_country_of_birth_Ukraine .
  
  # Retrieve the spouse of this politician
  ?person dbo:spouse ?spouse .
}
```",3,4,4,3,1,3,2,20,0,0,3,0,0.0,0
917,25,train,Give me the child of Kekūanāoʻa and child of the father of Kamehameha IV.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/parent> <http://dbpedia.org/resource/Kekūanāoʻa> . ?result <http://dbpedia.org/property/father> ?v0 . <http://dbpedia.org/resource/Kamehameha_IV> <http://dbpedia.org/property/father> ?v0 . },"```sparql
SELECT ?childOfKekuanaoa ?childOfFather WHERE {
  # Find child of Kekūanāoʻa
  ?kekuanaoa dbo:child ?childOfKekuanaoa .
  ?kekuanaoa rdfs:label ""Kekūanāoʻa""@en .

  # Find father of Kamehameha IV and his child
  ?kamehamehaIV dbo:parent ?fatherOfKamehamehaIV .
  ?kamehamehaIV rdfs:label ""Kamehameha IV""@en .
  
  OPTIONAL {
    ?fatherOfKamehamehaIV dbo:child ?childOfFather .
  }
}
```",3,3,4,2,2,3,3,71,3,3,0,0.5,1.0,0.6666666666666666
98,16,train,"Give me the region of Philippine Standard Time and entity in the region, that is a country, of Philippine Standard Time.",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/country> ?v0 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. ?result <http://dbpedia.org/ontology/timeZone> <http://dbpedia.org/resource/Philippine_Standard_Time> . ?v0 <http://dbpedia.org/property/timeZone> <http://dbpedia.org/resource/Philippine_Standard_Time> . },"```sparql
SELECT ?region ?country WHERE {
  # Find the region associated with Philippine Standard Time
  ?pst dbo:timeZoneRegion ?region .
  ?pst rdfs:label ""Philippine Standard Time""@en .

  OPTIONAL {
    # Check if there is a country in this region
    ?country rdf:type dbo:Country ;
             dbo:location ?region .
  }
}
```",3,4,4,2,2,2,3,28,0,0,1743,0,0.0,0
216,29,train,"Give me the player in Igor Bišćan and player in the coach, that is a soccer player and a sports manager and a soccer manager, of Bosnia and Herzegovina national under-18 football team and team of Ognjen Vukojević.",SELECT ?result WHERE { ?v3 <http://dbpedia.org/ontology/team> ?result . ?result <http://dbpedia.org/ontology/coach> <http://dbpedia.org/resource/Ognjen_Vukojević> . <http://dbpedia.org/resource/Bosnia_and_Herzegovina_national_under-18_football_team> <http://dbpedia.org/ontology/coach> ?v3 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerPlayer>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsManager>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerManager>. <http://dbpedia.org/resource/Igor_Bišćan> <http://dbpedia.org/ontology/team> ?result . },"```sparql
SELECT DISTINCT ?player WHERE {
  # Find Igor Bišćan's teams where he was a player
  ?team dbo:member ?bišćan .
  ?bišćan rdfs:label ""Igor Bišćan""@en .

  # Identify players in the same team as Igor Bišćan
  ?team dbo:member ?player .

  # Check if this player is also a coach for Bosnia and Herzegovina national under-18 football team
  ?coachTeam dbo:coach ?player .
  ?coachTeam rdfs:label ""Bosnia and Herzegovina national under-18 football team""@en .

  # Ensure the player has been associated with Ognjen Vukojević as a coach or manager
  ?vukojevićTeam dbo:coach ?player .
  ?vukojevićTeam rdfs:label ""Ognjen Vukojević""@en .
}
```",4,7,5,2,3,3,3,71,0,0,1,0,0.0,0
839,33,train,"Give me the band of Kevin Russell (musician) and band of the member of the band, that is a band and a group, of Peter Schorowsky.",SELECT ?result WHERE { <http://dbpedia.org/resource/Peter_Schorowsky> <http://dbpedia.org/ontology/associatedMusicalArtist> ?v0 . ?v0 <http://dbpedia.org/ontology/bandMember> ?v3 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Group>. ?result <http://dbpedia.org/ontology/bandMember> ?v3 . <http://dbpedia.org/resource/Kevin_Russell_(musician)> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Band>. },"```sparql
SELECT ?kevinBand ?memberBand WHERE {
  # Find Kevin Russell and his band
  ?kevin dbo:band ?kevinBand .
  ?kevin rdfs:label ""Kevin Russell (musician)""@en .

  # Find Peter Schorowsky's band or group
  ?peter dbo:bandOrGroup ?schorowskyBand .
  ?peter rdfs:label ""Peter Schorowsky""@en .

  # For each member of the band/group, find another band they are part of
  ?member dbo:memberOf ?schorowskyBand .
  ?member dbo:band ?memberBand .
  
  FILTER (isBlank(?kevin) && isBlank(?peter))
}
```",4,6,5,3,2,3,3,71,0,0,1,0,0.0,0
987,10,train,Give me the entity in Montenegro and birth place of Dado Polumenta.,SELECT ?result WHERE { <http://dbpedia.org/resource/Dado_Polumenta> <http://dbpedia.org/ontology/birthPlace> ?result . ?result <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Montenegro> . },"```sparql
# Query for entity in Montenegro associated with Dado Polumenta
SELECT ?entity WHERE {
  ?dado dbo:location ?entity .
  ?dado rdfs:label ""Dado Polumenta""@en .
  ?entity dbo:country dbr:Montenegro .
}

# Query for birth place of Dado Polumenta
SELECT ?birthPlace WHERE {
  ?dado dbo:birthPlace ?birthPlace .
  ?dado rdfs:label ""Dado Polumenta""@en .
}
```",2,2,3,1,2,3,3,71,0,0,1,0,0.0,0
791,34,train,"Give me the father of Emperor Go-Toba and spouse of the spouse, that is a royalty, of the reference to Emperor Takakura.","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/spouse> ?v1 . ?v1 <http://dbpedia.org/ontology/spouse> ?v2 . <http://dbpedia.org/resource/Emperor_Go-Toba> <http://dbpedia.org/property/father> ?result . ?v2 <http://xmlns.com/foaf/0.1/name> ""Emperor Takakura""@en . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. }","```sparql
SELECT ?father WHERE {
  # Find Emperor Go-Toba and his father
  ?goToba dbo:parent ?father .
  ?goToba rdfs:label ""Emperor Go-Toba""@en .

  # Find spouse of Emperor Takakura who is royalty (Imperial Princess Shushi)
  OPTIONAL { 
    ?takakura dbo:spouse ?spouse .
    ?takakura rdfs:label ""Emperor Takakura""@en .
    FILTER (regex(str(?spouse), ""Imperial Princess Shushi"", ""i""))
  }

  # Find father of the spouse identified as royalty
  OPTIONAL {
    ?spouse dbo:parent ?father .
    FILTER (regex(str(?spouse), ""Imperial Princess Shushi"", ""i""))
  }
}
```",4,5,5,3,2,3,3,71,1,0,0,1.0,1.0,1.0
978,5,train,Give me the person born as Nicholas Bracegirdle.,"SELECT ?result WHERE { ?result <http://dbpedia.org/property/birthName> ""Nicholas Bracegirdle""@en . }","```sparql
SELECT ?person ?label WHERE {
  ?person dbo:birthName ""Nicholas Bracegirdle""@en .
  OPTIONAL { ?person rdfs:label ?label . FILTER (lang(?label) = 'en') }
}
```",1,1,2,1,1,3,2,20,0,0,1,0,0.0,0
926,5,train,Give me the spouse of Şermi Kadın.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/spouse> <http://dbpedia.org/resource/Şermi_Kadın> . },"```sparql
SELECT ?spouse WHERE {
  ?person rdfs:label ""Şermi Kadın""@en .
  ?person dbo:spouse ?spouse .
}
```",1,1,2,1,1,3,3,71,0,0,1,0,0.0,0
158,0,train,Give me the entity in France.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/France> . },"```sparql
SELECT ?entity WHERE {
  ?entity dbo:country dbc:France .
}
```",1,1,2,1,1,3,2,20,0,0,44301,0,0.0,0
715,34,train,"Give me the commander in the force, that is a military conflict, of the native of Morocco and leader of Ministry of the Air (Spain).",SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/commander> ?v2 . <http://dbpedia.org/resource/Ministry_of_the_Air_(Spain)> <http://dbpedia.org/ontology/leader> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v2 <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Morocco> . ?v1 <http://dbpedia.org/ontology/commander> ?result . },"```sparql
SELECT ?commander WHERE {
  # Find the person who is native of Morocco and leader of Ministry of the Air (Spain)
  ?person dbo:nationality dbr:Morocco .
  ?person dbo:position ""Minister of the Air""@en ;
          dbo:country dbr:Spain .

  # Identify military conflicts where this person was a commander
  ?conflict dbo:commander ?commander .
  FILTER (?commander = ?person)
}
```",4,5,5,3,2,3,3,71,0,0,1,0,0.0,0
888,4,train,Give me the commander in 2022 Ukrainian eastern counteroffensive.,SELECT ?result WHERE { <http://dbpedia.org/resource/2022_Ukrainian_eastern_counteroffensive> <http://dbpedia.org/ontology/commander> ?result . },"```sparql
SELECT ?commander WHERE {
  ?event dbo:wikiPageRedirects db:QXXXXX ; # Replace QXXXXX with the specific DBpedia resource ID for ""2022 Ukrainian eastern counteroffensive""
    dbo:agent ?commander .
  ?commander rdf:type dbo:MilitaryPerson ;
    rdfs:label ?name .
  FILTER (lang(?name) = 'en')
}
```",1,1,2,1,1,3,2,20,0,0,4,0,0.0,0
527,7,train,"Give me the actor of the movie, that is a work and English and a television show, with Bernard Bresslaw.",SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?v1 <http://dbpedia.org/property/starring> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/TelevisionShow>. ?v1 <http://dbpedia.org/property/starring> <http://dbpedia.org/resource/Bernard_Bresslaw> . ?v1 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/United_Kingdom>. },"```sparql
SELECT ?actor WHERE {
  # Find movies that are works, English, and associated with TV shows
  ?movie rdf:type dbo:Film .
  ?movie dbo:language dbr:English .
  ?movie dbo:starring ?person .
  ?person rdfs:label ""Bernard Bresslaw""@en .

  OPTIONAL {
    # Check if the movie is adapted into or related to a TV show
    ?tvShow dbo:adaptation ?movie .
    ?tvShow rdf:type dbo:TelevisionSeries .
  }
}
```",2,5,3,2,1,3,2,20,0,0,7,0,0.0,0
18,17,train,"Give me the parent of the professional in Actress and alumnus of Marymount College, Tarrytown.","SELECT ?result WHERE { ?v2 <http://dbpedia.org/property/occupation> ""Actress""@en . ?result <http://dbpedia.org/ontology/child> ?v2 . ?result <http://dbpedia.org/ontology/almaMater> <http://dbpedia.org/resource/Marymount_College,_Tarrytown> . }","```sparql
SELECT ?parent WHERE {
  ?person dbo:almaMater dbr:Marymount_College_(Tarrytown,_New_York) .
  ?person dbo:profession dbr/Actress .
  ?person dbo:parent ?parent .
}
```",3,3,4,2,2,2,3,28,0,0,1,0,0.0,0
773,35,train,"Give me the parent of the child, that is a royalty, of Louis the German and spouse of the father of Charles the Fat.",SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. <http://dbpedia.org/resource/Charles_the_Fat> <http://dbpedia.org/property/father> ?v2 . ?v1 <http://dbpedia.org/ontology/parent> ?result . ?v2 <http://dbpedia.org/ontology/spouse> ?result . ?v1 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Louis_the_German> . },"```sparql
SELECT ?parent WHERE {
  # Find a child of Louis the German who is royalty
  ?child dbo:parent ?louisGerman .
  ?louisGerman rdfs:label ""Louis the German""@en .
  FILTER (regex(str(?child), ""King|Queen|Emperor|Empress"", ""i""))

  # Identify the spouse of Louis the German
  OPTIONAL {
    ?spouse dbo:spouse ?louisGerman .
  }

  # Find the parent of this royal child
  ?child dbo:parent ?parent .
}
```",4,5,5,2,2,3,3,71,0,0,1,0,0.0,0
129,2,train,Give me the associated musical artist of Saba (rapper).,SELECT ?result WHERE { <http://dbpedia.org/resource/Saba_(rapper)> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . },"```sparql
SELECT ?artist WHERE {
  ?saba dbo:associatedMusicalArtist ?artist .
  ?saba rdfs:label ""Saba (rapper)""@en .
}
```",1,1,2,1,1,2,3,28,8,0,0,1.0,1.0,1.0
417,12,train,Give me the child of Alexandrine of Mecklenburg-Schwerin and child of Christian X of Denmark.,SELECT ?result WHERE { ?result <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Christian_X_of_Denmark> . ?result <http://dbpedia.org/ontology/parent> <http://dbpedia.org/resource/Alexandrine_of_Mecklenburg-Schwerin> . },"```sparql
SELECT ?child WHERE {
  # Find children of Alexandrine of Mecklenburg-Schwerin
  ?alexandrine dbo:spouse ?husband .
  ?alexandrine rdfs:label ""Alexandrine of Mecklenburg-Schwerin""@en .
  ?alexandrine dbo:child ?child .

  # Find children of Christian X of Denmark
  OPTIONAL {
    ?christianX dbo:parent ?child .
    ?christianX rdfs:label ""Christian X of Denmark""@en .
  }
}
```",2,2,3,1,2,3,3,71,2,0,0,1.0,1.0,1.0
36,1,train,Give me the person born in 1971.,"SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/birthYear> ""1971""^^<http://www.w3.org/2001/XMLSchema#gYear> . }","```sparql
SELECT ?person ?name WHERE {
  ?person rdf:type dbo:Person .
  ?person dbo:birthYear ""1971""^^xsd:gYear .
  OPTIONAL { ?person foaf:name ?name . }
}
```",1,1,2,1,1,2,3,28,2611,2483,0,0.5125638005496663,1.0,0.6777417261518496
281,16,train,Give me the commander in New Guinea campaign and awardee of the award of Alfred Warden.,SELECT ?result WHERE { ?result <http://dbpedia.org/property/awards> ?v2 . <http://dbpedia.org/resource/New_Guinea_campaign> <http://dbpedia.org/ontology/commander> ?result . <http://dbpedia.org/resource/Alfred_Warden> <http://dbpedia.org/property/awards> ?v2 . },"```sparql
SELECT ?commander WHERE {
  # Find a commander in the New Guinea campaign
  ?campaign dbo:participatedInMilitaryOperation ?newGuineaCampaign .
  ?newGuineaCampaign rdfs:label ""New Guinea Campaign""@en .
  
  ?commander dbo:commanded ?campaign .
  
  # Check if this commander received the Alfred Warden Medal
  OPTIONAL {
    ?commander dbo:recipientOfAward ?award .
    ?award rdfs:label ""Alfred Warden Medal""@en .
  }
}
```",3,3,4,2,2,2,3,28,0,0,1,0,0.0,0
965,34,train,"Give me the spouse of the spouse of the parent of Louise Mountbatten and parent of George Mountbatten, 2nd Marquess of Milford Haven.","SELECT ?result WHERE { <http://dbpedia.org/resource/George_Mountbatten,_2nd_Marquess_of_Milford_Haven> <http://dbpedia.org/ontology/parent> ?result . ?v3 <http://dbpedia.org/ontology/spouse> ?v1 . ?result <http://dbpedia.org/ontology/spouse> ?v1 . <http://dbpedia.org/resource/Louise_Mountbatten> <http://dbpedia.org/ontology/parent> ?v3 . }","```sparql
SELECT ?finalSpouse WHERE {
  # Find parent of Louise Mountbatten
  ?louise dbo:parent ?parentLouise .
  ?louise rdfs:label ""Louise Mountbatten""@en .

  # Find spouse of the parent of Louise Mountbatten
  ?parentLouise dbo:spouse ?spouseParentLouise .

  # Find parent of George Mountbatten, 2nd Marquess of Milford Haven
  ?george dbo:parent ?parentGeorge .
  ?george rdfs:label ""George Mountbatten, 2nd Marquess of Milford Haven""@en .

  # Ensure the spouse from step 2 is also a parent of George Mountbatten
  FILTER (?spouseParentLouise = ?parentGeorge)

  # Find the spouse of this common individual (who is both a spouse and a parent)
  ?parentGeorge dbo:spouse ?finalSpouse .
}
```",4,4,5,3,2,3,3,71,2,0,0,1.0,1.0,1.0
216,6,train,"Give me the coach, that is a soccer player and a sports manager and a soccer manager, of Bosnia and Herzegovina national under-18 football team.",SELECT ?result WHERE { ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerManager>. ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsManager>. <http://dbpedia.org/resource/Bosnia_and_Herzegovina_national_under-18_football_team> <http://dbpedia.org/ontology/coach> ?result . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerPlayer>. },"```sparql
SELECT ?coach WHERE {
  # Find the Bosnia and Herzegovina national under-18 football team
  ?team dbo:country dbr:Bosnia_and_Herzegovina ;
        dbo:sport dbr:Soccer ;
        dbo:ageGroup ""Under-18""@en .
  
  # Identify the coach of this team
  ?team dbo:coach ?coach .

  # Ensure the coach is a soccer player, sports manager, and soccer manager
  ?coach dbo:occupation ?occupation .
  FILTER (
    EXISTS { ?coach dbo:sport dbr:Soccer . }
    && EXISTS { ?coach dbo:occupation dbr:Soccer_player . }
    && EXISTS { ?coach dbo:occupation dbr:Sports_manager . }
    && EXISTS { ?coach dbo:occupation dbr:Soccer_manager . }
  )
}
```",1,4,2,1,1,3,3,71,0,0,1,0,0.0,0
417,39,train,"Give me the child of the child, that is a royalty, of the parent, that is a royalty, of Alexandrine of Mecklenburg-Schwerin and child of Christian X of Denmark.",SELECT ?result WHERE { <http://dbpedia.org/resource/Alexandrine_of_Mecklenburg-Schwerin> <http://dbpedia.org/ontology/parent> ?v0 . ?v1 <http://dbpedia.org/property/father> ?v0 . ?result <http://dbpedia.org/ontology/parent> ?v1 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?result <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Christian_X_of_Denmark> . },"```sparql
SELECT ?grandchild WHERE {
  # Step 1: Identify Alexandrine's parent (royalty)
  ?alexandrine dbo:parent ?parent .
  ?alexandrine rdfs:label ""Alexandrine of Mecklenburg-Schwerin""@en .

  # Step 2: Find her spouse who is royalty and married to Christian X
  ?spouse dbo:spouse ?christianX .
  ?christianX rdfs:label ""Christian X of Denmark""@en .
  FILTER (regex(str(?parent), ""Duke Frederick Francis II"", ""i""))

  # Step 3: Identify their children
  ?spouse dbo:child ?child .

  # Step 4: For each child, find their children and check if any are royalty
  ?child dbo:child ?grandchild .
  FILTER (regex(str(?grandchild), ""Prince|Princess"", ""i""))
}
```",4,6,5,3,2,3,3,71,0,0,2,0,0.0,0
495,11,train,Give me the child of the father of William I of Württemberg and father of Princess Charlotte of Württemberg.,SELECT ?result WHERE { ?result <http://dbpedia.org/property/father> ?v2 . <http://dbpedia.org/resource/Princess_Charlotte_of_Württemberg> <http://dbpedia.org/property/father> ?result . <http://dbpedia.org/resource/William_I_of_Württemberg> <http://dbpedia.org/property/father> ?v2 . },"```sparql
SELECT ?child WHERE {
  # Find William I of Württemberg and his father
  ?william dbo:parent ?father .
  ?william rdfs:label ""William I, Duke of Württemberg""@en .

  # Find Princess Charlotte of Württemberg and her father
  ?charlotte dbo:parent ?sameFather .
  ?charlotte rdfs:label ""Princess Charlotte of Württemberg""@en .

  # Match the fathers to ensure they are the same person
  FILTER (?father = ?sameFather)

  # Find children of this common father
  ?child dbo:parent ?father .
}
```",3,3,4,2,2,3,2,20,0,0,1,0,0.0,0
41,6,train,Give me the party of Declan Costello and party of Mark Durkan.,SELECT ?result WHERE { <http://dbpedia.org/resource/Mark_Durkan> <http://dbpedia.org/ontology/party> ?result . <http://dbpedia.org/resource/Declan_Costello> <http://dbpedia.org/ontology/party> ?result . },"```sparql
SELECT ?person ?name ?partyLabel WHERE {
  # Find Declan Costello and his party
  VALUES ?person { dbp:Declan_Costello dbp:Mark_Durkan }
  
  # Get the label for each person
  ?person rdfs:label ?name .
  
  # Get the political party for each person
  OPTIONAL {
    ?person dbo:party ?party .
    ?party rdfs:label ?partyLabel .
  }
}
```",2,2,3,1,2,2,3,28,0,0,1,0,0.0,0
158,5,train,"Who is the successor, that is a prime minister and an office holder and a politician, of André Tardieu?",SELECT ?result WHERE { ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. <http://dbpedia.org/resource/André_Tardieu> <http://dbpedia.org/ontology/successor> ?result . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/PrimeMinister>. },"```sparql
SELECT ?successor WHERE {
  # Identify André Tardieu and his role as Prime Minister
  ?tardieu dbo:officeHolderOf ?position .
  ?tardieu rdfs:label ""André Tardieu""@en .
  ?position rdf:type dbo:PrimeMinister .

  # Find the successor of André Tardieu in that position
  ?tardieu dbo:successor ?successor .

  # Ensure the successor is a Prime Minister, Office Holder, and Politician
  ?successor rdf:type dbo:PrimeMinister .
  ?successor rdf:type dbo:OfficeHolder .
  ?successor rdf:type dbo:Politician .
}
```",1,4,2,1,1,3,2,20,0,0,1,0,0.0,0
978,0,train,Give me the band member of Enya.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/associatedMusicalArtist> <http://dbpedia.org/resource/Enya> . },"```sparql
SELECT ?bandMember WHERE {
  # Find Enya and her collaborators
  ?enya dbo:wikiPageRedirects dbpedia-en:Enya .
  
  # Identify band members or collaborators
  OPTIONAL { 
    ?collaboration dbo:subject ?enya ;
                   dbo:object ?bandMember .
    FILTER (regex(str(?bandMember), ""Roma Ryan|Nicky Ryan"", ""i""))
  }
}
```",1,1,2,1,1,3,2,20,0,0,7,0,0.0,0
465,19,train,Give me the successor of the child of Alfonso I d'Este and spouse of Archduchess Barbara of Austria.,SELECT ?result WHERE { ?v0 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Alfonso_I_d'Este> . ?result <http://dbpedia.org/ontology/spouse> <http://dbpedia.org/resource/Archduchess_Barbara_of_Austria> . ?v0 <http://dbpedia.org/ontology/successor> ?result . },"```sparql
SELECT ?successor WHERE {
  # Find a child of Alfonso I d'Este
  ?child dbo:parent dbc:Alfonso_I_d%27Este .
  
  # Find spouse of Archduchess Barbara of Austria
  ?spouse dbo:spouse dbc:Barbara_of_Austria .

  # Ensure the child is also the spouse identified
  FILTER (?child = ?spouse)

  # Find the successor of this individual
  ?child dbo:successor ?successor .
}
```",3,3,4,2,2,3,3,71,0,0,1,0,0.0,0
573,5,train,"Who is the professional, that is American, in Politician?","SELECT ?result WHERE { ?result <http://dbpedia.org/property/occupation> ""Politician""@en . ?result <http://dbpedia.org/ontology/nationality> <http://dbpedia.org/resource/United_States>. }","```sparql
SELECT ?person WHERE {
  ?person dbo:profession dbr:Politician .
  ?person dbo:nationality dbr:United_States .
}
```",1,2,2,1,1,3,3,71,0,36,83,0.0,0.0,0
865,28,train,"Give me the native of the residence, that is a country, of Ram Jaipal Singh Yadav and father of AK Abdul Momen and father of Shahla Khatun.",SELECT ?result WHERE { <http://dbpedia.org/resource/Shahla_Khatun> <http://dbpedia.org/property/father> ?result . ?result <http://dbpedia.org/ontology/birthPlace> ?v0 . <http://dbpedia.org/resource/Ram_Jaipal_Singh_Yadav> <http://dbpedia.org/property/residence> ?v0 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. <http://dbpedia.org/resource/AK_Abdul_Momen> <http://dbpedia.org/property/father> ?result . },"```sparql
SELECT ?native WHERE {
  # Find the country associated with Ram Jaipal Singh Yadav's residence
  ?yadav dbo:residence ?country .
  ?yadav rdfs:label ""Ram Jaipal Singh Yadav""@en .

  # Identify the native of that country
  ?native dbo:nativeCountry ?country .

  # Find the father of AK Abdul Momen
  ?momen dbo:father ?father .
  ?momen rdfs:label ""AK Abdul Momen""@en .

  # Find the father of Shahla Khatun
  ?khatun dbo:father ?father .
  ?khatun rdfs:label ""Shahla Khatun""@en .

  # Ensure the native is also the common father
  FILTER (?native = ?father)
}
```",4,5,5,2,3,3,3,71,0,0,1,0,0.0,0
865,5,train,Who is the spouse of Syeda Shahar Banu?,SELECT ?result WHERE { <http://dbpedia.org/resource/Syeda_Shahar_Banu> <http://dbpedia.org/ontology/spouse> ?result . },"```sparql
SELECT ?spouse WHERE {
  ?person rdfs:label ""Syeda Shahar Banu""@en .
  ?person dbo:spouse ?spouse .
}
```",1,1,2,1,1,3,3,71,1,0,0,1.0,1.0,1.0
573,39,train,"Give me the person decedent at Quincy, Massachusetts and parent of the author, that is a politician and an office holder, of the work of John Quincy Adams.","SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v0 <http://dbpedia.org/property/author> <http://dbpedia.org/resource/John_Quincy_Adams> . ?result <http://dbpedia.org/ontology/deathPlace> <http://dbpedia.org/resource/Quincy,_Massachusetts> . ?v1 <http://dbpedia.org/ontology/parent> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v0 <http://dbpedia.org/property/author> ?v1 . }","```sparql
SELECT ?parent WHERE {
  # Find John Quincy Adams and his parent
  ?adams dbo:parent ?parent .
  ?adams rdfs:label ""John Quincy Adams""@en .

  # Ensure the parent is a politician or office holder
  ?parent rdf:type ?type .
  FILTER (
    ?type = dbpedia-owl:Politician ||
    ?type = dbpedia-owl:OfficeHolder
  )

  # Confirm the decedent is buried at Quincy, Massachusetts
  OPTIONAL {
    ?parent dbo:placeOfBurial ?burialPlace .
    ?burialPlace rdfs:label ""Quincy, Massachusetts""@en .
  }
}
```",4,6,5,3,2,3,3,71,0,0,2,0,0.0,0
892,3,train,Give me the true self of Enrico Crolla.,"SELECT ?result WHERE { ?result <http://xmlns.com/foaf/0.1/givenName> ""Enrico Crolla""@en . }","```sparql
SELECT ?property ?value WHERE {
  VALUES ?enrico { dbpedia:Enrico_Crolla }
  ?enrico ?property ?value .
  FILTER (
    ?property IN (dbo:occupation, dbo:award, dbo:birthPlace, dbo:deathPlace)
  )
}
```",1,1,2,1,1,3,3,71,0,0,1,0,0.0,0
102,13,train,"Give me the manager of the player in the member, that is a soccer player, of England women's national football team.",SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/manager> ?result . ?v0 <http://dbpedia.org/ontology/team> ?v1 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerPlayer>. ?v0 <http://dbpedia.org/ontology/team> <http://dbpedia.org/resource/England_women's_national_football_team> . },"```sparql
SELECT ?player ?manager WHERE {
  # Find members of England women's national football team
  ?team dbo:member ?player .
  ?team rdfs:label ""England women's national football team""@en .

  # Ensure the player is a soccer player (optional, if needed)
  OPTIONAL { 
    ?player rdf:type dbp:SoccerPlayer .
  }

  # Find manager of the player
  ?player dbo:manager ?manager .
}
```",3,4,4,3,1,3,2,20,0,0,43,0,0.0,0
527,11,train,"Give me the actor of the movie, that is a work and English and a television show, with Bernard Bresslaw and author of The Boy Who Kicked Pigs.",SELECT ?result WHERE { <http://dbpedia.org/resource/The_Boy_Who_Kicked_Pigs> <http://dbpedia.org/property/author> ?result . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?v2 <http://dbpedia.org/property/starring> <http://dbpedia.org/resource/Bernard_Bresslaw> . ?v2 <http://dbpedia.org/property/starring> ?result . ?v2 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/United_Kingdom>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/TelevisionShow>. },"```sparql
SELECT ?movie WHERE {
  # Find a movie that is a work and English
  ?movie dbo:genre dbc:English_films ;
         rdf:type dbo:Film .
  
  # Ensure the movie is also categorized as a television show
  ?movie dbo:genre dbc:Television_programmes .

  # Check if Bernard Bresslaw acted in this movie
  ?movie dbo:starring ?actor .
  ?actor rdfs:label ""Bernard Bresslaw""@en .

  # Verify the involvement of David Nobbs, author of The Boy Who Kicked Pigs
  OPTIONAL {
    ?nobbs dbo:authorOf ?work .
    ?work rdfs:label ""The Boy Who Kicked Pigs""@en .
    ?nobbs rdfs:label ""David Nobbs""@en .
    
    # Check if David Nobbs is associated with the movie
    ?movie dbo:writer ?nobbs .
  }
}
```",3,6,4,2,2,3,2,20,0,0,1,0,0.0,0
987,27,train,"Give me the entity in the region, that is a country, of the time zone, that is a sports event, in Canicosa de la Sierra.",SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsEvent>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. ?v0 <http://dbpedia.org/property/timeZone> ?v1 . ?result <http://dbpedia.org/ontology/country> ?v0 . <http://dbpedia.org/resource/Canicosa_de_la_Sierra> <http://dbpedia.org/ontology/timeZone> ?v1 . },"```sparql
SELECT ?country WHERE {
  # Find Canicosa de la Sierra and its time zone
  ?canicosa dbo:location ?place .
  ?place rdfs:label ""Canicosa de la Sierra""@en .
  
  OPTIONAL { 
    ?place dbo:timeZone ?timezone .
  }
  
  # Find sports events in the identified time zone
  OPTIONAL {
    ?event dbo:timeZone ?timezone .
    ?event rdf:type dbo:SportsEvent .
  }

  # Determine the region of the time zone
  OPTIONAL {
    ?timezone dbo:region ?region .
  }

  # Identify the country within that region
  OPTIONAL {
    ?region dbo:country ?country .
  }
}
```",3,5,4,3,1,3,3,71,0,0,173261,0,0.0,0
18,2,train,"Give me the alumnus of Marymount College, Tarrytown.","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/almaMater> <http://dbpedia.org/resource/Marymount_College,_Tarrytown> . }","```sparql
SELECT ?alumnus WHERE {
  ?college rdfs:label ""Marymount College, Tarrytown""@en .
  ?college dbo:alumni ?alumnus .
}
```",1,1,2,1,1,2,3,28,0,0,5,0,0.0,0
36,7,train,Give me the actor of Being Mrs Elliot and person born as Ayo Makun.,"SELECT ?result WHERE { <http://dbpedia.org/resource/Being_Mrs_Elliot> <http://dbpedia.org/ontology/starring> ?result . ?result <http://dbpedia.org/property/birthName> ""Ayo Makun""@en . }","```sparql
# Query to find the actor of ""Being Mrs Elliot""
SELECT ?actor WHERE {
  ?movie rdfs:label ""Being Mrs Elliot""@en .
  ?movie dbo:starring ?actor .
}

# Query to find the person born as Ayo Makun
SELECT ?person WHERE {
  ?person foaf:name ""Ayo Makun"" .
}
```",2,2,3,1,2,2,3,28,0,0,1,0,0.0,0
715,23,train,"Give me the commander in the force, that is a military conflict, of the native of Morocco.",SELECT ?result WHERE { ?v0 <http://dbpedia.org/ontology/commander> ?v2 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v2 <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Morocco> . ?v0 <http://dbpedia.org/ontology/commander> ?result . },"```sparql
SELECT ?commander WHERE {
  # Find individuals native to Morocco
  ?person dbo:nationality dbr:Morocco .
  
  # Check if they have been a commander in any military conflict
  OPTIONAL { 
    ?conflict dbo:commander ?commander .
    ?commander foaf:name ?name .
    FILTER (?person = ?commander)
  }
}
```",3,4,4,3,1,3,3,71,3,1,473,0.75,0.0063025210084033615,0.012500000000000002
507,15,train,Who is the person born as the birth name of Anne V. Coates?,SELECT ?result WHERE { <http://dbpedia.org/resource/Anne_V._Coates> <http://dbpedia.org/property/birthName> ?v1 . ?result <http://dbpedia.org/property/birthName> ?v1 . },"```sparql
SELECT ?person WHERE {
  ?person dbo:birthName ""Anne V. Coates""@en .
}
```",2,2,3,2,1,3,3,71,0,0,1,0,0.0,0
216,18,train,Give me the party of Campbell Newman and administration of the designer of Woolfe: The Red Hood Diaries.,SELECT ?result WHERE { <http://dbpedia.org/resource/Campbell_Newman> <http://dbpedia.org/ontology/party> ?result . <http://dbpedia.org/resource/Woolfe:_The_Red_Hood_Diaries> <http://dbpedia.org/property/designer> ?v2 . ?result <http://dbpedia.org/property/leader> ?v2 . },"```sparql
SELECT ?newmanParty ?designerAdministration WHERE {
  # Find Campbell Newman's political party
  ?newman dbo:party ?newmanParty .
  ?newman rdfs:label ""Campbell Newman""@en .

  # Find the designer of Woolfe: The Red Hood Diaries and their administration role
  OPTIONAL {
    ?game dbo:creator ?designer .
    ?game rdfs:label ""Woolfe: The Red Hood Diaries""@en .
    
    # Check if the designer has any administrative roles
    OPTIONAL {
      ?designer dbo:positionHeld ?administrationRole .
      FILTER EXISTS { ?administrationRole dbo:isPositionOfAKind dbr:Administrative_role }
    }
  }
}
```",3,3,4,2,2,2,3,28,1,1,0,0.5,1.0,0.6666666666666666
443,18,train,Give me the birthplace of Ulf Lundell and birthplace of the work of yes.,"SELECT ?result WHERE { <http://dbpedia.org/resource/Ulf_Lundell> <http://dbpedia.org/ontology/birthPlace> ?result . ?v0 <http://dbpedia.org/property/author> ""yes""@en . ?v0 <http://dbpedia.org/ontology/birthPlace> ?result . }","```sparql
# Query to find the birthplace of Ulf Lundell
SELECT ?birthPlace WHERE {
  ?ul Lundell dbo:birthPlace ?birthPlace .
  ?ul rdfs:label ""Ulf Lundell""@en .
}

UNION

# Query to find the origin place of the band Yes
SELECT ?originPlace WHERE {
  ?yes dbo:placeOfBirth ?originPlace .
  ?yes rdfs:label ""Yes (band)""@en .
}
```",3,3,4,2,2,2,3,28,0,0,2,0,0.0,0
965,23,train,Give me the spouse of the spouse of the parent of Louise Mountbatten.,SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/spouse> ?v2 . ?result <http://dbpedia.org/ontology/spouse> ?v2 . <http://dbpedia.org/resource/Louise_Mountbatten> <http://dbpedia.org/ontology/parent> ?v1 . },"```sparql
SELECT ?finalSpouse WHERE {
  # Step 1: Identify Louise Mountbatten
  ?louise dbo:parent ?parent .
  ?louise rdfs:label ""Louise Mountbatten""@en .

  # Step 2: Find the spouse of her parent
  OPTIONAL { 
    ?parent dbo:spouse ?spouseOfParent .
  }

  # Step 3: Identify the spouse's spouse (final result)
  OPTIONAL {
    ?spouseOfParent dbo:spouse ?finalSpouse .
  }
}
```",3,3,4,3,1,3,3,71,2,0,0,1.0,1.0,1.0
826,20,train,"Give me the spouse of Anna Magdalena Appel and successor of the child, that is a royalty, of Louis I, Grand Duke of Hesse.","SELECT ?result WHERE { ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. <http://dbpedia.org/resource/Anna_Magdalena_Appel> <http://dbpedia.org/ontology/spouse> ?result . ?v2 <http://dbpedia.org/ontology/successor> ?result . <http://dbpedia.org/resource/Louis_I,_Grand_Duke_of_Hesse> <http://dbpedia.org/ontology/child> ?v2 . }","```sparql
SELECT ?spouse ?successor WHERE {
  # Find spouse of Anna Magdalena Bach
  ?annaMagdalena dbo:spouse ?johannSebastianBach .
  ?annaMagdalena rdfs:label ""Anna Magdalena Bach""@en .

  # Identify children of Louis I, Grand Duke of Hesse who are royalty
  ?louisI dbo:child ?royalChild .
  ?louisI rdfs:label ""Louis I, Grand Duke of Hesse""@en .
  
  # Ensure the child is royalty
  ?royalChild rdf:type dbo:RoyalFamily .

  # Find successor of the royal child
  ?royalChild dbo:successor ?successor .
}
```",3,4,4,2,2,3,3,71,0,0,1,0,0.0,0
892,5,train,Give me the member of E-girls.,SELECT ?result WHERE { <http://dbpedia.org/resource/E-girls> <http://dbpedia.org/ontology/bandMember> ?result . },"```sparql
SELECT ?member WHERE {
  ?eGirls dbo:type dbr:Musical_group .
  ?eGirls rdfs:label ""E-girls""@en .
  
  ?eGirls dbo:member ?member .
}
```

This query selects individuals (`?member`) who are members of the E-girls group by checking for the `dbo:member` relationship with the entity representing E-girls.",1,1,2,1,1,3,3,71,0,0,8,0,0.0,0
47,2,train,Give me the office of Ajoy Mukherjee.,SELECT ?result WHERE { <http://dbpedia.org/resource/Ajoy_Mukherjee> <http://dbpedia.org/property/office> ?result . },"```sparql
SELECT ?office WHERE {
  ?person rdfs:label ""Ajoy Mukherjee""@en .
  ?person dbo:positionHeld ?office .
}
```",1,1,2,1,1,3,3,71,0,0,2,0,0.0,0
433,16,train,"Give me the associated musical artist, that is an artist and a musical artist, of the associated musical artist, that is a musical artist and an artist, of Ornette Coleman.",SELECT ?result WHERE { ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?v1 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. <http://dbpedia.org/resource/Ornette_Coleman> <http://dbpedia.org/ontology/associatedMusicalArtist> ?v1 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. },"```sparql
SELECT ?secondAssociatedArtist WHERE {
  # Step 1: Find an associated musical artist of Ornette Coleman
  ?firstAssociatedArtist dbo:musicalArtistOrchestraOrBandOrChoirOrOtherEnsembleOrSoloPerformerOrMusicalArtist ?ornetteColeman .
  ?ornetteColeman rdfs:label ""Ornette Coleman""@en .

  # Step 2: Find an associated musical artist of the first associated artist
  ?firstAssociatedArtist dbo:musicalArtistOrchestraOrBandOrChoirOrOtherEnsembleOrSoloPerformerOrMusicalArtist ?secondAssociatedArtist .
  
  # Ensure both entities are recognized as artists and specifically musical artists
  ?firstAssociatedArtist rdf:type dbo:Artist .
  ?secondAssociatedArtist rdf:type dbo:Artist .
}
```",2,6,3,2,1,3,3,71,0,0,20,0,0.0,0
158,13,train,"Give me the entity in the award, that is a country, of the reference to Adelbert Cronkhite.","SELECT ?result WHERE { ?v0 <http://dbpedia.org/property/awards> ?v1 . ?v0 <http://xmlns.com/foaf/0.1/name> ""Adelbert Cronkhite""@en . ?result <http://dbpedia.org/ontology/country> ?v1 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. }","```sparql
SELECT ?country WHERE {
  # Find Adelbert Cronkhite
  ?cronkhite dbo:wikiPageRedirects dbpedia:Adelbert_Cronkhite .
  
  # Identify awards associated with him
  ?award dbo:recipient ?cronkhite .

  # Determine the country linked to the award
  ?award dbo:country ?country .
}
```",3,4,4,3,1,3,2,20,0,0,44301,0,0.0,0
645,0,train,Give me the commander in Battle of Jarama.,SELECT ?result WHERE { <http://dbpedia.org/resource/Battle_of_Jarama> <http://dbpedia.org/ontology/commander> ?result . },"```sparql
SELECT ?commander WHERE {
  ?battle dbo:wikiPageID ""Battle_of_Jarama"" .
  ?battle rdfs:label ""Battle of Jarama""@en .
  ?battle dbo:commander ?commander .
}
```",1,1,2,1,1,3,3,71,0,0,10,0,0.0,0
965,37,train,"Give me the parent of George Mountbatten, 2nd Marquess of Milford Haven and parent of the child, that is a royalty, of the person born, that is a politician, on 1854-05-24.","SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v2 <http://dbpedia.org/property/father> ?v1 . <http://dbpedia.org/resource/George_Mountbatten,_2nd_Marquess_of_Milford_Haven> <http://dbpedia.org/ontology/parent> ?result . ?v1 <http://dbpedia.org/ontology/birthDate> ""1854-05-24""^^<http://www.w3.org/2001/XMLSchema#date> . ?v2 <http://dbpedia.org/ontology/parent> ?result . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. }","```sparql
SELECT ?parent1 ?parent2 WHERE {
  # Find George Mountbatten, 2nd Marquess of Milford Haven and his parent
  ?georgeMountbatten dbo:parent ?parent1 .
  ?georgeMountbatten rdfs:label ""George Mountbatten, 2nd Marquess of Milford Haven""@en .

  # Find Prince Edward VII (politician born on 1854-05-24)
  ?edwardVII dbo:birthDate ?birthDate ;
            dbo:spouse ?parent1 .
  ?edwardVII rdfs:label ""Edward VII, King of the United Kingdom""@en .
  FILTER (?birthDate = ""1854-05-24""^^xsd:date)

  # Find a royal child of Prince Edward VII
  OPTIONAL {
    ?child dbo:parent ?edwardVII ;
           dbo:parent ?parent2 .
    ?child rdf:type dbo:RoyalFamilyMember .
  }
}
```",4,6,5,3,2,3,3,71,0,0,2,0,0.0,0
865,34,train,"Give me the native of the residence, that is a country, of the person decedent at Patna and father of Shahla Khatun.",SELECT ?result WHERE { ?v1 <http://dbpedia.org/property/residence> ?v0 . ?v1 <http://dbpedia.org/ontology/deathPlace> <http://dbpedia.org/resource/Patna> . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. ?result <http://dbpedia.org/ontology/birthPlace> ?v0 . <http://dbpedia.org/resource/Shahla_Khatun> <http://dbpedia.org/property/father> ?result . },"```sparql
SELECT ?nativeCountry WHERE {
  # Find the person who died in Patna
  ?person dbo:deathPlace dbc:Patna .
  
  # Identify Shahla Khatun's father
  ?shahlaKhatun dbo:parent ?father .
  ?shahlaKhatun rdfs:label ""Shahla Khatun""@en .
  
  # Ensure the person found is Shahla Khatun's father
  FILTER (?person = ?father)
  
  # Find the residence of this person
  ?person dbo:residence ?residence .
  
  # Check if the residence is a country and get its native name
  OPTIONAL {
    ?residence wdt:P31/wdt:P279* wd:Q6256 . # Instance of Country
    ?residence wdt:P1549 ?nativeCountry .
  }
}
```",4,5,5,3,2,3,3,71,0,0,1,0,0.0,0
47,28,train,Give me the office of the administration of Jagdeep Dhankhar and office of Ajoy Mukherjee and office of Bidesh Ranjan Bose.,SELECT ?result WHERE { <http://dbpedia.org/resource/Ajoy_Mukherjee> <http://dbpedia.org/property/office> ?result . ?v1 <http://dbpedia.org/property/office> ?result . <http://dbpedia.org/resource/Bidesh_Ranjan_Bose> <http://dbpedia.org/property/office> ?result . ?v1 <http://dbpedia.org/property/governor> <http://dbpedia.org/resource/Jagdeep_Dhankhar> . },"```sparql
SELECT ?person ?officeLabel WHERE {
  VALUES ?person { 
    dbr:Jagdeep_Dhankhar 
    dbr:Ajoy_Mukherjee 
    dbr:Bidesh_Ranjan_Bose 
  }
  
  ?person dbo:office ?office .
  SERVICE wikibase:label { bd:serviceParam wikibase:language ""[AUTO_LANGUAGE],en"". }
}
```",4,4,5,2,3,3,3,71,0,0,1,0,0.0,0
917,2,train,Give me the child of Kekūanāoʻa.,"SELECT ?result WHERE { ?result <http://dbpedia.org/property/father> ""Kekūanāoʻa""@en . }","```sparql
SELECT ?child WHERE {
  ?kekuanaoa dbo:parent ?child .
  ?kekuanaoa rdfs:label ""Kekūanāoʻa""@en .
}
```",1,1,2,1,1,3,3,71,0,0,3,0,0.0,0
933,24,train,Give me the reference to the birth name of Alan Warner (musician) and band of The Ramong Sound.,SELECT ?result WHERE { <http://dbpedia.org/resource/The_Ramong_Sound> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?result <http://xmlns.com/foaf/0.1/name> ?v2 . <http://dbpedia.org/resource/Alan_Warner_(musician)> <http://dbpedia.org/property/birthName> ?v2 . },"```sparql
SELECT ?birthName ?band WHERE {
  # Find Alan Warner's birth name
  ?alanWarner rdfs:label ""Alan Warner (musician)""@en .
  ?alanWarner dbo:birthName ?birthName .

  # Find the band associated with The Ramong Sound
  ?ramongSound rdfs:label ""The Ramong Sound""@en .
  OPTIONAL { 
    ?ramongSound dbo:band ?band .
  }
}
```",3,3,4,2,2,3,3,71,0,0,1,0,0.0,0
933,16,train,Give me the birth name of the professional in Musician.,SELECT ?result WHERE { ?v0 <http://dbpedia.org/property/occupation> <http://dbpedia.org/resource/Musician> . ?v0 <http://dbpedia.org/property/birthName> ?result . },"```sparql
SELECT ?musician ?birthName WHERE {
  ?musician rdf:type dbo:Musician .
  ?musician dbo:birthName ?birthName .
}
```",2,2,3,2,1,3,3,71,0,0,856,0,0.0,0
18,3,train,Give me the award of Ana María Sánchez de Ríos.,SELECT ?result WHERE { <http://dbpedia.org/resource/Ana_María_Sánchez_de_Ríos> <http://dbpedia.org/property/awards> ?result . },"```sparql
SELECT ?award WHERE {
  ?person rdfs:label ""Ana María Sánchez de Ríos""@en .
  ?person dbo:award ?award .
}
```",1,1,2,1,1,2,3,28,0,2,3,0.0,0.0,0
773,11,train,Give me the spouse of the father of Charles the Fat.,SELECT ?result WHERE { ?v0 <http://dbpedia.org/ontology/spouse> ?result . <http://dbpedia.org/resource/Charles_the_Fat> <http://dbpedia.org/property/father> ?v0 . },"```sparql
SELECT ?spouse WHERE {
  # Find Charles the Fat and his father
  ?charles dbo:parent ?father .
  ?charles rdfs:label ""Charles the Fat""@en .

  # Find the spouse of the father
  ?father dbo:spouse ?spouse .
}
```",2,2,3,2,1,3,3,71,1,1,0,0.5,1.0,0.6666666666666666
124,16,train,"Give me the war, that is an event and a military conflict and a societal event, of the awardee of British South Africa Company Medal.",SELECT ?result WHERE { ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v1 <http://dbpedia.org/ontology/battle> ?result . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?v1 <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/British_South_Africa_Company_Medal> . },"```sparql
SELECT DISTINCT ?war WHERE {
  # Find individuals who received the British South Africa Company Medal
  ?person dbo:award ""British South Africa Company Medal"" .
  
  # Link these individuals to wars they participated in
  ?person dbo:militaryConflict ?war .

  # Ensure the war is classified as an event, a military conflict, and a societal event
  ?war rdf:type dbpedia-owl:Event ;
       rdf:type dbpedia-owl:MilitaryConflict ;
       rdf:type dbpedia-owl:SocietalEvent .
}
```",2,5,3,2,1,3,3,71,0,0,13,0,0.0,0
773,5,train,"Give me the child, that is a royalty, of Louis the Pious.",SELECT ?result WHERE { ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. <http://dbpedia.org/resource/Louis_the_Pious> <http://dbpedia.org/ontology/child> ?result . },"```sparql
SELECT ?child WHERE {
  # Find Louis the Pious and his children
  ?louis dbo:parent ?child .
  ?louis rdfs:label ""Louis the Pious""@en .

  # Ensure the child is royalty by checking their label for royal titles
  FILTER (
    regex(str(?child), ""(Emperor|King|Queen|Prince|Princess)"", ""i"")
  )
}
```",1,2,2,1,1,3,3,71,0,0,3,0,0.0,0
987,17,train,"Give me the region, that is a country, of the time zone, that is a sports event, in Canicosa de la Sierra.",SELECT ?result WHERE { ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. ?result <http://dbpedia.org/property/timeZone> ?v0 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsEvent>. <http://dbpedia.org/resource/Canicosa_de_la_Sierra> <http://dbpedia.org/ontology/timeZone> ?v0 . },"```sparql
SELECT ?region WHERE {
  # Identify Canicosa de la Sierra and its time zone
  ?canicosa dbo:location ?location .
  ?canicosa rdfs:label ""Canicosa de la Sierra""@en .
  
  ?location dbo:timeZone ?timezone .

  # Find a sports event associated with the time zone
  ?event dbo:timeZone ?timezone ;
         rdf:type dbo:SportsEvent .

  # Determine the region or country of the sports event
  ?event dbo:place ?region .
}
```",2,4,3,2,1,3,3,71,0,0,56,0,0.0,0
281,9,train,Give me the awardee of Medal bar and awardee of Volunteer Decoration.,SELECT ?result WHERE { ?result <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/Volunteer_Decoration> . ?result <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/Medal_bar> . },"```sparql
SELECT ?medalBarAwardee ?volunteerDecorationAwardee WHERE {
  # Find the awardee of Medal bar
  ?medalBarAward dbo:recipient ?medalBarAwardee .
  ?medalBarAward rdfs:label ""Medal bar""@en .

  # Find the awardee of Volunteer Decoration
  ?volunteerDecorationAward dbo:recipient ?volunteerDecorationAwardee .
  ?volunteerDecorationAward rdfs:label ""Volunteer Decoration""@en .
}
```",2,2,3,1,2,2,3,28,0,0,1,0,0.0,0
955,0,train,Give me the band of Nate Albert.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/bandMember> <http://dbpedia.org/resource/Nate_Albert> . },"```sparql
SELECT ?band WHERE {
  ?band dbo:member ?nateAlbert .
  ?nateAlbert rdfs:label ""Nate Albert""@en .
}
```",1,1,2,1,1,3,2,20,0,0,1,0,0.0,0
445,19,train,"Give me the death place of Patrick Moore and entity in the residence, that is a country, of Anna Sharkey.",SELECT ?result WHERE { ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. ?result <http://dbpedia.org/ontology/location> ?v0 . <http://dbpedia.org/resource/Patrick_Moore> <http://dbpedia.org/ontology/deathPlace> ?result . <http://dbpedia.org/resource/Anna_Sharkey> <http://dbpedia.org/property/residence> ?v0 . },"```sparql
SELECT ?deathPlace ?country WHERE {
  # Find death place of Patrick Moore
  ?moore dbo:deathPlace ?deathPlace .
  ?moore rdfs:label ""Patrick Moore""@en .

  # Find residence of Anna Sharkey and check if it is a country
  OPTIONAL {
    ?sharkey dbo:residence ?residence .
    ?sharkey rdfs:label ""Anna Sharkey""@en .
    
    # Check if the residence is linked to a country
    ?residence dbo:country ?country .
  }
}
```",3,4,4,2,2,3,3,71,1,2,0,0.3333333333333333,1.0,0.5
93,6,train,Give me the death place of John Weir Troy and capital of Alaska.,SELECT ?result WHERE { <http://dbpedia.org/resource/Alaska> <http://dbpedia.org/ontology/capital> ?result . <http://dbpedia.org/resource/John_Weir_Troy> <http://dbpedia.org/ontology/deathPlace> ?result . },"```sparql
SELECT ?deathPlace ?capital WHERE {
  # Find the death place of John Weir Troy
  ?troy dbo:deathPlace ?deathPlace .
  ?troy rdfs:label ""John Weir Troy""@en .

  # Find the capital of Alaska
  ?alaska dbp:capital ?capital .
  ?alaska rdfs:label ""Alaska""@en .
}
```",2,2,3,1,2,3,2,20,1,3,0,0.25,1.0,0.4
216,12,train,Give me the party of Campbell Newman and office of Tim Nicholls and administration of .,"SELECT ?result WHERE { <http://dbpedia.org/resource/Tim_Nicholls> <http://dbpedia.org/property/office> ?result . <http://dbpedia.org/resource/Campbell_Newman> <http://dbpedia.org/ontology/party> ?result . ?result <http://dbpedia.org/property/leader> """"@en . }","```sparql
SELECT ?newmanParty ?nichollsOffice WHERE {
  # Find Campbell Newman and his party affiliation
  ?newman dbo:party ?newmanParty .
  ?newman rdfs:label ""Campbell Newman""@en .

  # Find Tim Nicholls and his office
  ?nicholls dbo:office ?nichollsOffice .
  ?nicholls rdfs:label ""Tim Nicholls""@en .
}
```",3,3,4,1,3,2,3,28,0,0,1,0,0.0,0
281,7,train,Give me the awardee of Volunteer Decoration and commander in New Guinea campaign.,SELECT ?result WHERE { <http://dbpedia.org/resource/New_Guinea_campaign> <http://dbpedia.org/ontology/commander> ?result . ?result <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/Volunteer_Decoration> . },"```sparql
SELECT ?person WHERE {
  # Find awardees of Volunteer Decoration
  ?volunteerDecoration dbo:recipient ?person .
  ?volunteerDecoration rdfs:label ""Volunteer Decoration""@en .

  # Find commanders in the New Guinea campaign
  OPTIONAL {
    ?newGuineaCampaign dbo:commander ?person .
    ?newGuineaCampaign rdfs:label ""New Guinea campaign""@en .
  }
}
```",2,2,3,1,2,2,3,28,0,0,1,0,0.0,0
888,12,train,Give me the commander in Southern Ukraine campaign and awardee of the award of Oleksandr Syrskyi.,SELECT ?result WHERE { <http://dbpedia.org/resource/Oleksandr_Syrskyi> <http://dbpedia.org/property/awards> ?v0 . ?result <http://dbpedia.org/property/awards> ?v0 . <http://dbpedia.org/resource/Southern_Ukraine_campaign> <http://dbpedia.org/ontology/commander> ?result . },"```sparql
SELECT ?commander ?awardee WHERE {
  # Find Oleksandr Syrskyi in DBpedia
  ?oleksandrSyrsKy rdf:type dbo:Person ;
                   rdfs:label ""Oleksandr Syrskyi""@en .
  
  # Find awards associated with Oleksandr Syrskyi
  OPTIONAL { 
    ?award dbo:giver ?oleksandrSyrsKy ;
           dbo:recipient ?awardee .
  }
  
  # Find commander in Southern Ukraine campaign
  OPTIONAL {
    ?campaign dbo:commander ?commander ;
              rdfs:label ""Southern Ukraine Campaign""@en .
  }

  # Ensure the awardee and commander are distinct entities
  FILTER(?awardee != ?commander)
}
```",3,3,4,2,2,3,2,20,0,0,1,0,0.0,0
122,5,train,Give me the band member of the band of Gift of Gab (rapper).,SELECT ?result WHERE { <http://dbpedia.org/resource/Gift_of_Gab_(rapper)> <http://dbpedia.org/ontology/associatedMusicalArtist> ?v0 . ?result <http://dbpedia.org/ontology/associatedMusicalArtist> ?v0 . },"```sparql
SELECT ?member WHERE {
  # Find the band Blackalicious
  ?band rdfs:label ""Blackalicious""@en .
  
  # Identify members of the band
  ?band dbo:member ?member .
  
  # Exclude Gift of Gab from the results
  FILTER NOT EXISTS { 
    ?member rdfs:label ""Gift of Gab""@en .
  }
}
```",2,2,3,2,1,2,2,9,0,0,24,0,0.0,0
935,0,train,Give me the death place of Abdul Raziq Bugti.,SELECT ?result WHERE { <http://dbpedia.org/resource/Abdul_Raziq_Bugti> <http://dbpedia.org/ontology/deathPlace> ?result . },"```sparql
SELECT ?deathPlace WHERE {
  ?person rdfs:label ""Abdul Raziq Bugti""@en .
  ?person dbo:deathPlace ?deathPlace .
}
```",1,1,2,1,1,3,2,20,3,0,0,1.0,1.0,1.0
433,28,train,"Give me the associated musical artist of Bill Evans and professional in Musician and associated musical artist of the person born, that is a musical artist and an artist, as Paul Laurence Dunbar Chambers Jr..","SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. <http://dbpedia.org/resource/Bill_Evans> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v1 <http://dbpedia.org/property/birthName> ""Paul Laurence Dunbar Chambers Jr.""@en . ?result <http://dbpedia.org/property/occupation> ""Musician""@en . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?v1 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . }","```sparql
SELECT ?billEvansAssociated ?paulChambersAssociated WHERE {
  # Find associated musical artists of Bill Evans
  ?billEvans dbo:associatedMusicalArtist ?billEvansAssociated .
  ?billEvans rdfs:label ""Bill Evans""@en .

  # Confirm Paul Laurence Dunbar Chambers Jr. is a musician and an artist, then find his associated musical artists
  ?paulChambers rdf:type dbo:Musician ;
                dbo:associatedMusicalArtist ?paulChambersAssociated .
  ?paulChambers rdfs:label ""Paul Laurence Dunbar Chambers Jr.""@en .
}
```",4,6,5,2,3,3,3,71,0,0,1,0,0.0,0
926,13,train,Give me the successor of the child of Ahmed III.,SELECT ?result WHERE { ?v1 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Ahmed_III> . ?v1 <http://dbpedia.org/ontology/successor> ?result . },"```sparql
SELECT ?successor WHERE {
  # Find a child of Ahmed III
  ?ahmedIII dbo:child ?child .
  ?ahmedIII rdfs:label ""Ahmed III""@en .

  # Find the successor of this child
  ?child dbo:successor ?successor .
}
```",2,2,3,2,1,3,3,71,2,0,0,1.0,1.0,1.0
192,3,train,"Give me the spouse, that is a royalty, of Charles Martel of Anjou.",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/spouse> <http://dbpedia.org/resource/Charles_Martel_of_Anjou> . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. },"```sparql
SELECT ?spouse WHERE {
  # Find Charles Martel of Anjou
  ?charlesMartel rdfs:label ""Charles Martel, Count of Anjou""@en .
  
  # Find his spouse
  ?charlesMartel dbo:spouse ?spouse .

  # Ensure the spouse is royalty by checking their label or type
  FILTER (
    regex(str(?spouse), ""Queen|Princess|Duchess"", ""i"") ||
    ( ?spouse a ?type . 
      VALUES ?type { dbpedia-owl:Monarch dbpedia-owl:RoyalFamilyMember }
    )
  )
}
```",1,2,2,1,1,3,2,20,0,0,1,0,0.0,0
98,0,train,Give me the parent of Emperor Rokujō.,SELECT ?result WHERE { <http://dbpedia.org/resource/Emperor_Rokujō> <http://dbpedia.org/ontology/parent> ?result . },"```sparql
SELECT ?parent WHERE {
  ?rokujou dbo:parent ?parent .
  ?rokujou rdfs:label ""Emperor Rokujō""@en .
}
```",1,1,2,1,1,2,2,9,1,0,0,1.0,1.0,1.0
582,8,train,Give me the nickname of Japan national football team.,SELECT ?result WHERE { <http://dbpedia.org/resource/Japan_national_football_team> <http://dbpedia.org/property/nickname> ?result . },"```sparql
SELECT ?nickname WHERE {
  ?team rdfs:label ""Japan national football team""@en .
  ?team dbo:nickname ?nickname .
}
```",1,1,2,1,1,3,3,71,0,0,1,0,0.0,0
329,3,train,Give me the author of The Tailor and Ansty.,SELECT ?result WHERE { <http://dbpedia.org/resource/The_Tailor_and_Ansty> <http://dbpedia.org/property/author> ?result . },"```sparql
SELECT ?author WHERE {
  ?work rdfs:label ""The Tailor and Ansty""@en .
  ?work dbo:author ?author .
}
```",1,1,2,1,1,2,3,28,1,0,0,1.0,1.0,1.0
892,30,train,"Give me the landmark at elevation of 58 and entity in the administration, that is Italian and a region and a settlement and an administrative region, of Democratic Party (Italy) and entity in Italy.","SELECT ?result WHERE { ?v0 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Italy>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. ?result <http://dbpedia.org/ontology/elevation> ""58""^^<http://www.w3.org/2001/XMLSchema#integer> . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/AdministrativeRegion>. ?result <http://dbpedia.org/ontology/province> ?v0 . ?v0 <http://dbpedia.org/property/leaderParty> <http://dbpedia.org/resource/Democratic_Party_(Italy)> . ?result <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Italy> . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Region>. }","```sparql
SELECT ?landmark WHERE {
  # Find a landmark at elevation of 58
  ?landmark dbo:elevation ""58""^^xsd:integer .
  
  # Ensure it is Italian
  ?landmark dbo:country dbr:Italy .
  
  # It should be a region and settlement
  ?landmark rdf:type dbr:Settlement ;
            rdf:type dbr:Region .
  
  # It must be an administrative region
  ?landmark rdf:type dbr:AdministrativeRegion .
  
  # Check for connection to the Democratic Party (Italy)
  OPTIONAL {
    ?party dbo:country dbr:Italy ;
           rdfs:label ""Democratic Party (Italy)""@en .
    ?landmark dbo:politicalParty ?party .
  }
}
```",4,8,5,2,3,3,3,71,0,0,2,0,0.0,0
892,39,train,"Give me the landmark at elevation of 58 and entity in the administration, that is Italian and a region and a settlement and an administrative region, of the party, that is a political party and an organisation, of Andrea Cozzolino.","SELECT ?result WHERE { ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/AdministrativeRegion>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. <http://dbpedia.org/resource/Andrea_Cozzolino> <http://dbpedia.org/ontology/party> ?v2 . ?v0 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Italy>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Region>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. ?v0 <http://dbpedia.org/property/leaderParty> ?v2 . ?result <http://dbpedia.org/ontology/province> ?v0 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/PoliticalParty>. ?result <http://dbpedia.org/ontology/elevation> ""58""^^<http://www.w3.org/2001/XMLSchema#integer> . }","```sparql
SELECT ?landmark ?region WHERE {
  # Find Andrea Cozzolino's political party
  ?cozzolino dbo:party ?party .
  ?cozzolino rdfs:label ""Andrea Cozzolino""@en .

  # Ensure the party is a political party and an organization
  ?party rdf:type dbo:PoliticalParty ;
         rdf:type dbo:Organization .

  # Find the Italian region that is also a settlement and administrative region
  ?region dbo:country dbr:Italy ;
          rdf:type dbo:Settlement ;
          rdf:type dbo:AdministrativeRegion ;
          dbo:administrativeUnit ?party .

  # Find the landmark at elevation 58 within this region
  ?landmark dbo:elevation ""58""^^xsd:int ;
            dbo:location ?region .
}
```",4,10,5,3,2,3,3,71,0,0,2,0,0.0,0
507,14,train,Give me the professional in the profession of Guy Ferland.,SELECT ?result WHERE { ?result <http://dbpedia.org/property/occupation> ?v1 . <http://dbpedia.org/resource/Guy_Ferland> <http://dbpedia.org/property/occupation> ?v1 . },"```sparql
SELECT ?otherPerson WHERE {
  # Find the profession of Guy Ferland
  ?ferland dbo:occupation ?profession .
  ?ferland rdfs:label ""Guy Ferland""@en .

  # Find another person with the same occupation
  ?otherPerson dbo:occupation ?sameProfession .
  FILTER (?ferland != ?otherPerson) 
}
```",2,2,3,2,1,3,3,71,37,316171,1,0.00011701158730961898,0.9736842105263158,0.00023399505448290256
417,21,train,"Give me the child of Alexandrine of Mecklenburg-Schwerin and spouse of the parent, that is a royalty, of Count Ingolf of Rosenborg.",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/parent> <http://dbpedia.org/resource/Alexandrine_of_Mecklenburg-Schwerin> . ?result <http://dbpedia.org/ontology/spouse> ?v1 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v1 <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Count_Ingolf_of_Rosenborg> . },"```sparql
SELECT ?child ?royalSpouse WHERE {
  # Find Alexandrine of Mecklenburg-Schwerin and her child
  ?alexandrine dbo:parent ?parent .
  ?alexandrine rdfs:label ""Alexandrine of Mecklenburg-Schwerin""@en .
  
  OPTIONAL { 
    ?child dbo:parent ?alexandrine .
  }
  
  # Find the parent(s) of Alexandrine and their spouse(s)
  OPTIONAL {
    ?parent dbo:spouse ?royalSpouse .
    
    # Ensure the spouse is royalty
    FILTER EXISTS { ?royalSpouse rdf:type dbo:RoyalFamilyMember . }
  }
}
```",3,4,4,2,2,3,3,71,1,1,0,0.5,1.0,0.6666666666666666
417,34,train,"Give me the spouse of the parent, that is a royalty, of the child of Knud, Hereditary Prince of Denmark and child of Alexandrine of Mecklenburg-Schwerin.","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/spouse> ?v1 . ?result <http://dbpedia.org/ontology/parent> <http://dbpedia.org/resource/Alexandrine_of_Mecklenburg-Schwerin> . ?v1 <http://dbpedia.org/ontology/child> ?v2 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v2 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Knud,_Hereditary_Prince_of_Denmark> . }","```sparql
SELECT ?spouse WHERE {
  # Find the child of Knud, Hereditary Prince of Denmark and Alexandrine of Mecklenburg-Schwerin
  ?child dbo:parent ?knud .
  ?child dbo:parent ?alexandrine .
  ?knud rdfs:label ""Knud, Hereditary Prince of Denmark""@en .
  ?alexandrine rdfs:label ""Alexandrine of Mecklenburg-Schwerin""@en .

  # Find the spouse of one of these parents who is royalty
  OPTIONAL {
    ?parent dbo:spouse ?spouse .
    FILTER (?parent = ?knud || ?parent = ?alexandrine)
    ?spouse a dbo:RoyalFamilyMember .
  }
}
```",4,5,5,3,2,3,3,71,0,0,1,0,0.0,0
212,2,train,"Give me the professional, that is a musical artist and an artist, in Singer, rapper, CEO, Facilities and Project Manager.","SELECT ?result WHERE { ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. ?result <http://dbpedia.org/property/occupation> ""Singer, rapper, CEO, Facilities and Project Manager""@en . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. }","```sparql
SELECT DISTINCT ?person WHERE {
  # Find individuals who are singers and rappers
  ?person dbo:musicArtist ?music .
  ?person dbo:singer ?singing .
  ?person dbo:rapper ?rapping .

  # Check if the individual is also a CEO or Facilities and Project Manager
  OPTIONAL { 
    ?person dbo:occupation ""CEO""@en .
  }
  OPTIONAL {
    ?person dbo:occupation ""Facilities and Project Manager""@en .
  }

  # Ensure the person has both music roles
  FILTER EXISTS { ?music rdf:type dbo:SingingArtist . }
  FILTER EXISTS { ?rapping rdf:type dbo:Rapper . }
}
```",1,3,2,1,1,2,2,9,0,0,1,0,0.0,0
267,4,train,Who is the reference to Dan Cathy?,"SELECT ?result WHERE { ?result <http://xmlns.com/foaf/0.1/name> ""Dan Cathy""@en . }","```sparql
SELECT ?person ?title WHERE {
  ?person rdfs:label ""Dan Cathy""@en .
  OPTIONAL { ?person dbo:jobTitle ?title . }
}
```",1,1,2,1,1,3,2,20,1,0,0,1.0,1.0,1.0
192,4,train,Give me the parent of Anna of Hungary (Byzantine empress).,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Anna_of_Hungary_(Byzantine_empress)> . },"```sparql
SELECT ?parent WHERE {
  ?anna rdfs:label ""Anna of Hungary (Byzantine Empress)""@en .
  ?anna dbo:parent ?parent .
}
```",1,1,2,1,1,3,2,20,0,0,1,0,0.0,0
47,31,train,"Give me the office of the administration of the commander, that is a politician, in Operation Green Hunt and office of Bidesh Ranjan Bose.",SELECT ?result WHERE { <http://dbpedia.org/resource/Bidesh_Ranjan_Bose> <http://dbpedia.org/property/office> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v0 <http://dbpedia.org/property/governor> ?v1 . ?v0 <http://dbpedia.org/property/office> ?result . <http://dbpedia.org/resource/Operation_Green_Hunt> <http://dbpedia.org/ontology/commander> ?v1 . },"```sparql
SELECT ?commanderOffice ?bosesOffice WHERE {
  # Find the politician involved in Operation Green Hunt and their office
  ?operation dbo:participant ?politician .
  ?operation rdfs:label ""Operation Green Hunt""@en .
  ?politician rdf:type dbo:Politician .
  ?politician dbo:office ?commanderOffice .

  # Find Bidesh Ranjan Bose and his office
  ?boses a dbo:Person ;
         rdfs:label ""Bidesh Ranjan Bose""@en ;
         dbo:office ?bosesOffice .
}
```",4,5,5,3,2,3,3,71,0,0,1,0,0.0,0
136,2,train,Give me the area code of Levenhagen.,SELECT ?result WHERE { <http://dbpedia.org/resource/Levenhagen> <http://dbpedia.org/ontology/areaCode> ?result . },"```sparql
SELECT ?areaCode WHERE {
  ?location rdfs:label ""Levenhagen""@en .
  OPTIONAL { 
    ?location dbo:postalCode ?areaCode .
  }
}
```",1,1,2,1,1,2,2,9,0,1,1,0.0,0.0,0
495,9,train,Give me the father of the parent of Princess Catherine of Württemberg.,SELECT ?result WHERE { ?v0 <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Princess_Catherine_of_Württemberg> . ?v0 <http://dbpedia.org/property/father> ?result . },"```sparql
SELECT ?grandfather WHERE {
  # Identify Princess Catherine of Württemberg and her parent
  ?catherine dbo:parent ?parent .
  ?catherine rdfs:label ""Princess Catherine of Württemberg""@en .

  # Find the father of this parent
  ?parent dbo:parent ?grandfather .
}
```",2,2,3,2,1,3,2,20,2,2,0,0.5,1.0,0.6666666666666666
98,3,train,Who is the child of Emperor Toba?,SELECT ?result WHERE { <http://dbpedia.org/resource/Emperor_Toba> <http://dbpedia.org/ontology/child> ?result . },"```sparql
SELECT ?child WHERE {
  # Find Emperor Toba and his child
  ?toba dbo:parent ?child .
  ?toba rdfs:label ""Emperor Toba""@en .
}
```",1,1,2,1,1,2,2,9,0,1,5,0.0,0.0,0
582,1,train,Give me the player in Kazuaki Nagasawa.,SELECT ?result WHERE { <http://dbpedia.org/resource/Kazuaki_Nagasawa> <http://dbpedia.org/ontology/team> ?result . },"```sparql
SELECT ?player WHERE {
  ?nagasawa dbo:birthName ""Kazuaki Nagasawa""@en .
  ?nagasawa dbo:occupation ?player .
  FILTER (regex(str(?player), ""footballer"", ""i""))
}
```",1,1,2,1,1,3,3,71,0,0,4,0,0.0,0
158,8,train,"Give me the party of the successor, that is a prime minister and an office holder and a politician, of André Tardieu.",SELECT ?result WHERE { ?v0 <http://dbpedia.org/ontology/party> ?result . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. <http://dbpedia.org/resource/André_Tardieu> <http://dbpedia.org/ontology/successor> ?v0 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/PrimeMinister>. },"```sparql
SELECT ?successorParty WHERE {
  # Identify André Tardieu
  ?tardieu dbo:officeHolder ?position .
  ?tardieu rdfs:label ""André Tardieu""@en .

  # Find his successor who is a prime minister, office holder, and politician
  OPTIONAL { 
    ?successor dbo:succeededBy ?tardieu ;
               rdf:type dbo:PrimeMinister ;
               rdf:type dbo:OfficeHolder ;
               rdf:type dbo:Politician .
  }

  # Retrieve the political party of the successor
  ?successor dbo:party ?successorParty .
}
```",2,5,3,2,1,3,2,20,0,0,1,0,0.0,0
926,28,train,Give me the child of Ahmed III and father of the father of Abdulaziz and successor of Mustafa III.,SELECT ?result WHERE { <http://dbpedia.org/resource/Abdulaziz> <http://dbpedia.org/property/father> ?v1 . <http://dbpedia.org/resource/Ahmed_III> <http://dbpedia.org/ontology/child> ?result . ?v1 <http://dbpedia.org/property/father> ?result . <http://dbpedia.org/resource/Mustafa_III> <http://dbpedia.org/ontology/successor> ?result . },"```sparql
SELECT ?individual WHERE {
  # Ahmed III and his child
  ?ahmedIII rdfs:label ""Ahmed III""@en .
  ?child dbo:parent ?ahmedIII .

  # Abdulaziz's father and grandfather
  ?abdulaziz rdfs:label ""Abdulaziz, King of Saudi Arabia""@en .
  ?fatherOfAbdulaziz dbo:parent ?abdulaziz .
  ?grandfatherOfAbdulaziz dbo:parent ?fatherOfAbdulaziz .

  # Mustafa III and his successor
  ?mustafaIII rdfs:label ""Mustafa III""@en .
  ?successor dbo:predecessor ?mustafaIII .

  # Find the individual who is a child of Ahmed III, father of Abdulaziz's grandfather, and successor of Mustafa III
  FILTER (?child = ?grandfatherOfAbdulaziz && ?child = ?successor)
}
```",4,4,5,2,3,3,3,71,0,0,1,0,0.0,0
281,11,train,Give me the awardee of the award of Alfred Warden.,SELECT ?result WHERE { ?result <http://dbpedia.org/property/awards> ?v1 . <http://dbpedia.org/resource/Alfred_Warden> <http://dbpedia.org/property/awards> ?v1 . },"```sparql
SELECT ?awardee WHERE {
  # Find Alfred Warden's associated award
  ?warden foaf:name ""Alfred Warden""@en .
  ?warden dbo:award ?award .

  # Retrieve the awardee of that award
  ?award dbo:recipient ?awardee .
}
```",2,2,3,2,1,2,3,28,0,0,12,0,0.0,0
874,0,train,Give me the band of Manfred Mann (musician).,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/bandMember> <http://dbpedia.org/resource/Manfred_Mann_(musician)> . },"```sparql
SELECT ?band WHERE {
  ?manfredMann dbo:musicalBand ?band .
  ?manfredMann rdfs:label ""Manfred Mann""@en .
}
```",1,1,2,1,1,3,2,20,0,0,2,0,0.0,0
978,8,train,Give me the band member of the person born as Nicholas Bracegirdle.,"SELECT ?result WHERE { ?v0 <http://dbpedia.org/property/birthName> ""Nicholas Bracegirdle""@en . ?result <http://dbpedia.org/ontology/associatedMusicalArtist> ?v0 . }","```sparql
SELECT ?band WHERE {
  ?person rdfs:label ""Nicholas Bracegirdle""@en .
  ?person dbo:birthName ""Nicholas Bracegirdle"" .
  
  # Find any band he was a member of
  OPTIONAL { 
    ?person dbo:member ?band .
  }
}
```",2,2,3,2,1,3,2,20,0,0,2,0,0.0,0
373,2,train,"Give me the work, that is a single and a musical work and a work and a soundtrack, of .","SELECT ?result WHERE { ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalWork>. ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Single>. ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?result <http://dbpedia.org/property/writer> """"@en . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Song>. }","```sparql
SELECT ?work WHERE {
  ?work rdf:type dbo:Single .
  ?work rdf:type dbo:MusicalWork .
  ?work rdf:type dbo:Soundtrack .
}
```",1,5,2,1,1,2,2,9,0,0,8275,0,0.0,0
36,0,train,Give me the actor of Being Mrs Elliot.,SELECT ?result WHERE { <http://dbpedia.org/resource/Being_Mrs_Elliot> <http://dbpedia.org/ontology/starring> ?result . },"```sparql
SELECT ?actor WHERE {
  ?movie rdfs:label ""Being Mrs. Elliot""@en .
  ?movie dbo:starring ?actor .
}
```",1,1,2,1,1,2,3,28,0,0,6,0,0.0,0
232,2,train,"Give me the person born, that is a writer, on 1849-09-14.","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/birthDate> ""1849-09-14""^^<http://www.w3.org/2001/XMLSchema#date> . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Writer>. }","```sparql
SELECT ?person ?name WHERE {
  ?person dbo:birthDate ""1849-09-14""^^xsd:date .
  ?person dbo:occupation ?occupation .
  FILTER (CONTAINS(LCASE(str(?occupation)), ""writer""))
  OPTIONAL { ?person rdfs:label ?name . }
}
```",1,2,2,1,1,2,2,9,0,0,1,0,0.0,0
826,7,train,"Who is the child of Louis IV, Grand Duke of Hesse?","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/parent> <http://dbpedia.org/resource/Louis_IV,_Grand_Duke_of_Hesse> . }","```sparql
SELECT ?child WHERE {
  ?child dbo:parent dbr:Louis_IV,_Grand_Duke_of_Hesse .
}
```",1,1,2,1,1,3,3,71,0,0,4,0,0.0,0
382,11,train,"Give me the landmark at elevation of 100 and birthplace of the manager, that is a soccer manager and an athlete and a sports manager, of Bonner SC.","SELECT ?result WHERE { ?v2 <http://dbpedia.org/ontology/birthPlace> ?result . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerManager>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsManager>. ?result <http://dbpedia.org/ontology/elevation> ""100""^^<http://www.w3.org/2001/XMLSchema#integer> . <http://dbpedia.org/resource/Bonner_SC> <http://dbpedia.org/ontology/manager> ?v2 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Athlete>. }","```sparql
SELECT ?landmark WHERE {
  # Find the manager of Bonner SC who is a soccer manager, athlete, and sports manager
  ?person dbo:managerOfSportsTeam ?team .
  ?team rdfs:label ""Bonner SC""@en .
  ?person rdf:type dbo:SoccerManager ;
          dbo:athlete true ;
          dbo:sportsManager true .

  # Get the birthplace of this person
  ?person dbo:birthPlace ?birthPlace .

  # Find a landmark at elevation 100 in that birthplace
  ?landmark dbo:elevation ""100""^^xsd:int ;
            dbo:location ?birthPlace .
}
```",3,6,4,2,2,3,2,20,0,0,1,0,0.0,0
136,4,train,Give me the region coded as 03834 and landmark at elevation of 5.,"SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/areaCode> ""03834"" . ?result <http://dbpedia.org/ontology/elevation> ""5""^^<http://www.w3.org/2001/XMLSchema#integer> . }","```sparql
SELECT ?region ?landmark WHERE {
  # Find the region coded as 03834
  ?region dbo:postalCode ""03834"" .
  
  # Find landmarks with an elevation of 5
  OPTIONAL {
    ?landmark a dbo:Lighthouse ;
              dbo:elevation ""5""^^xsd:float .
    
    # Ensure the landmark is related to the region (if applicable)
    ?landmark dbo:location ?region .
  }
}
```",2,2,3,1,2,2,2,9,0,0,1,0,0.0,0
166,5,train,"Give me the territory administered, that is a country, from Madrid.",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/capital> <http://dbpedia.org/resource/Madrid> . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. },"```sparql
SELECT ?country WHERE {
  ?madrid dbo:administrativeCapital ?country .
  ?madrid rdfs:label ""Madrid""@en .
  FILTER (isLiteral(?country) && datatype(?country) = xsd:string)
}
```",1,2,2,1,1,3,2,20,0,0,15,0,0.0,0
124,18,train,Give me the military force of Battle of Atbara and military force of Battle of Tamai and commander in Mahdist War.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/battle> <http://dbpedia.org/resource/Battle_of_Atbara> . <http://dbpedia.org/resource/Mahdist_War> <http://dbpedia.org/ontology/commander> ?result . ?result <http://dbpedia.org/ontology/battle> <http://dbpedia.org/resource/Battle_of_Tamai> . },"```sparql
SELECT DISTINCT ?battle ?force ?commander WHERE {
  # Find military forces in the Battle of Atbara
  OPTIONAL {
    ?atbara dbo:militaryConflict dbpedia:Battle_of_Atbara .
    ?atbara dbo:participatedIn ?force .
    ?atbara rdfs:label ""Battle of Atbara""@en .
  }
  
  # Find military forces in the Battle of Tamai
  OPTIONAL {
    ?tamai dbo:militaryConflict dbpedia:Battle_of_Tamai .
    ?tamai dbo:participatedIn ?force .
    ?tamai rdfs:label ""Battle of Tamai""@en .
  }

  # Find commanders in the Mahdist War
  OPTIONAL {
    ?war dbo:commander ?commander .
    ?war rdfs:label ""Mahdist War""@en .
  }
}
```",3,3,4,1,3,3,3,71,0,0,1,0,0.0,0
773,37,train,"Give me the parent of Charles the Fat and parent of the successor of the child, that is a royalty, of Louis the Pious.",SELECT ?result WHERE { <http://dbpedia.org/resource/Louis_the_Pious> <http://dbpedia.org/ontology/child> ?v0 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v0 <http://dbpedia.org/ontology/successor> ?v3 . ?result <http://dbpedia.org/ontology/child> ?v3 . <http://dbpedia.org/resource/Charles_the_Fat> <http://dbpedia.org/ontology/parent> ?result . },"```sparql
SELECT ?charlesParent ?successorParent WHERE {
  # Find Charles the Fat and his parent
  ?charles dbo:parent ?charlesParent .
  ?charles rdfs:label ""Charles the Fat""@en .

  # Find children of Louis the Pious who are royalty
  OPTIONAL {
    ?louis dbo:child ?successor .
    ?louis rdfs:label ""Louis the Pious""@en .
    
    # Ensure the successor is a royal figure (e.g., Emperor or King)
    FILTER EXISTS { ?successor rdf:type dbo:Monarch . }
    
    # Find parent of this royal successor
    ?successor dbo:parent ?successorParent .
  }
}
```",4,5,5,3,2,3,3,71,2,0,0,1.0,1.0,1.0
554,11,train,Give me the leader of the administration of Francisco da Costa Gomes and leader of Portuguese Mozambique.,SELECT ?result WHERE { ?v2 <http://dbpedia.org/property/leader> ?result . ?v2 <http://dbpedia.org/property/leader> <http://dbpedia.org/resource/Francisco_da_Costa_Gomes> . <http://dbpedia.org/resource/Portuguese_Mozambique> <http://dbpedia.org/property/leader> ?result . },"```sparql
SELECT ?costaGomesLeader ?mozambiqueLeader WHERE {
  # Find Francisco da Costa Gomes and his role as leader of Portugal
  ?costaGomes dbo:office ?portugalOffice .
  ?costaGomes rdfs:label ""Francisco da Costa Gomes""@en .
  ?portugalOffice rdfs:label ""President of Portugal""@en .

  # Find the last Governor-General of Portuguese Mozambique
  ?mozambiqueGovernor dbo:country ?mozambiqueCountry .
  ?mozambiqueGovernor rdfs:label ?leaderLabel .
  ?mozambiqueCountry rdfs:label ""Portuguese Mozambique""@en .
  FILTER (regex(str(?leaderLabel), ""Adriano Moreira"", ""i""))
  
  BIND(""Francisco da Costa Gomes"" AS ?costaGomesLeader)
  BIND(?leaderLabel AS ?mozambiqueLeader)
}
```",3,3,4,2,2,3,2,20,0,0,3,0,0.0,0
582,11,train,Give me the reference to the residence of Hirotaka Sugawara.,SELECT ?result WHERE { <http://dbpedia.org/resource/Hirotaka_Sugawara> <http://dbpedia.org/property/residence> ?v0 . ?result <http://xmlns.com/foaf/0.1/name> ?v0 . },"```sparql
SELECT ?residence WHERE {
  ?sugawara a dbo:Person ;
            rdfs:label ""Hirotaka Sugawara""@en .
  
  OPTIONAL { 
    ?sugawara dbo:residence ?residence .
  }
}
```",2,2,3,2,1,3,3,71,0,0,41,0,0.0,0
965,19,train,Give me the spouse of the spouse of Princess Victoria of Hesse and by Rhine and parent of Louise Mountbatten.,SELECT ?result WHERE { <http://dbpedia.org/resource/Louise_Mountbatten> <http://dbpedia.org/ontology/parent> ?result . <http://dbpedia.org/resource/Princess_Victoria_of_Hesse_and_by_Rhine> <http://dbpedia.org/ontology/spouse> ?v2 . ?result <http://dbpedia.org/ontology/spouse> ?v2 . },"```sparql
SELECT ?parent WHERE {
  # Identify Princess Victoria of Hesse and by Rhine
  ?princessVictoria rdfs:label ""Princess Victoria of Hesse and by Rhine""@en .
  
  # Find Louise Mountbatten
  ?louiseMountbatten rdfs:label ""Louise Mountbatten, Duchess of Argyll""@en .

  # Retrieve one of the parents of Louise Mountbatten
  ?louiseMountbatten dbo:parent ?parent .
}
```",3,3,4,2,2,3,3,71,0,0,1,0,0.0,0
826,13,train,"Give me the successor of the child, that is a royalty, of Louis I, Grand Duke of Hesse.","SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v1 <http://dbpedia.org/ontology/successor> ?result . <http://dbpedia.org/resource/Louis_I,_Grand_Duke_of_Hesse> <http://dbpedia.org/ontology/child> ?v1 . }","```sparql
SELECT ?successor WHERE {
  # Identify Louis I, Grand Duke of Hesse
  ?louisI rdfs:label ""Louis I, Grand Duke of Hesse""@en .
  
  # Find a child who is royalty
  ?child dbo:parent ?louisI ;
         rdf:type dbo:RoyalFamilyMember .

  # Determine the successor of this royal child
  OPTIONAL {
    ?child dbo:succeededBy ?successor .
  }
}
```",2,3,3,2,1,3,3,71,0,0,1,0,0.0,0
274,7,train,Give me the band member of Dizzy Gillespie and associated musical artist of Cecil Taylor.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/associatedMusicalArtist> <http://dbpedia.org/resource/Dizzy_Gillespie> . <http://dbpedia.org/resource/Cecil_Taylor> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . },"```sparql
SELECT ?gillespieBandMember ?taylorAssociatedArtist WHERE {
  # Find a band member of Dizzy Gillespie
  ?dizzyGillespie dbo:bandMember ?gillespieBandMember .
  ?dizzyGillespie rdfs:label ""Dizzy Gillespie""@en .

  # Find an associated musical artist of Cecil Taylor
  OPTIONAL {
    ?cecilTaylor dbo:associatedBand ?taylorAssociatedArtist .
    ?cecilTaylor rdfs:label ""Cecil Taylor""@en .
  }
}
```",2,2,3,1,2,2,3,28,0,0,1,0,0.0,0
917,26,train,"Give me the child of the father of the spouse, that is a royalty, of Leleiohoku I.",SELECT ?result WHERE { ?v2 <http://dbpedia.org/ontology/spouse> <http://dbpedia.org/resource/Leleiohoku_I> . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v2 <http://dbpedia.org/property/father> ?v0 . ?result <http://dbpedia.org/ontology/parent> ?v0 . },"```sparql
SELECT ?child WHERE {
  # Find spouse of Leleiohoku I who is royalty
  ?leleiohoku dbo:spouse ?spouse .
  ?leleiohoku rdfs:label ""Leleiohoku I""@en .
  
  OPTIONAL { 
    FILTER (regex(str(?spouse), ""royalty"", ""i""))
  }
  
  # Find father of the spouse
  ?spouse dbo:parent ?father .
  
  # Find child of this father
  ?father dbo:child ?child .
}
```",3,4,4,3,1,3,3,71,0,0,11,0,0.0,0
465,35,train,"Give me the successor of the child of Alfonso I d'Este and successor of the child, that is a royalty, of Anne of Brittany.",SELECT ?result WHERE { <http://dbpedia.org/resource/Anne_of_Brittany> <http://dbpedia.org/ontology/child> ?v1 . ?v2 <http://dbpedia.org/ontology/successor> ?result . ?v2 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Alfonso_I_d'Este> . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v1 <http://dbpedia.org/ontology/successor> ?result . },"```sparql
SELECT ?successorAlfonso ?successorAnne WHERE {
  # Find Alfonso I d'Este and his child
  ?alfonso dbo:child ?child .
  ?alfonso rdfs:label ""Alfonso I d'Este""@en .

  # Find the successor of Alfonso's child
  OPTIONAL { 
    ?child dbo:successor ?successorAlfonso .
  }

  # Find Anne of Brittany and her royal child
  ?anne dbo:child ?royalChild .
  ?anne rdfs:label ""Anne of Brittany""@en .

  # Ensure the child is royalty
  FILTER (regex(str(?royalChild), ""royalty"", ""i""))

  # Find the successor of Anne's royal child
  OPTIONAL {
    ?royalChild dbo:successor ?successorAnne .
  }
}
```",4,5,5,2,2,3,3,71,0,0,1,0,0.0,0
573,29,train,"Give me the parent of John Quincy Adams and person decedent at the residence, that is a settlement, of William J. Phelan and person decedent at Massachusetts.",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/deathPlace> ?v3 . <http://dbpedia.org/resource/William_J._Phelan> <http://dbpedia.org/property/residence> ?v3 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. ?result <http://dbpedia.org/ontology/deathPlace> <http://dbpedia.org/resource/Massachusetts> . <http://dbpedia.org/resource/John_Quincy_Adams> <http://dbpedia.org/ontology/parent> ?result . },"```sparql
SELECT ?parentOfAdams ?decedentAtPhelansResidence ?decedentInMassachusetts WHERE {
  # Find parent of John Quincy Adams
  ?adams dbo:parent ?parentOfAdams .
  ?adams rdfs:label ""John Quincy Adams""@en .

  # Find residence of William J. Phelan that is a settlement and its decedents
  ?phelan dbo:residence ?residence .
  ?residence rdf:type dbo:Settlement .
  ?phelan rdfs:label ""William J. Phelan""@en .
  
  OPTIONAL {
    ?decedent dbo:decedentAt ?residence .
  }

  # Find decedents in Massachusetts
  ?massachusetts dbo:country dbr:United_States .
  ?massachusetts rdfs:label ""Massachusetts""@en .

  OPTIONAL {
    ?decedentInMassachusetts dbo:decedentAt ?massachusetts .
  }
}
```",4,5,5,2,3,3,3,71,2,0,0,1.0,1.0,1.0
267,12,train,Give me the person born on the birth date of Dan Cathy and coach of Iran national football team.,SELECT ?result WHERE { <http://dbpedia.org/resource/Dan_Cathy> <http://dbpedia.org/ontology/birthDate> ?v0 . <http://dbpedia.org/resource/Iran_national_football_team> <http://dbpedia.org/ontology/coach> ?result . ?result <http://dbpedia.org/ontology/birthDate> ?v0 . },"```sparql
SELECT ?person WHERE {
  # Get Dan Cathy's birth date
  ?danCathy dbo:birthDate ?birthDate .
  ?danCathy rdfs:label ""Dan Cathy""@en .

  # Find a person with the same birth date who is coach of Iran national football team
  ?person dbo:birthDate ?birthDate .
  ?person dbo:position dbr:Iran_national_football_team_coach .
}
```",3,3,4,2,2,3,2,20,0,0,1,0,0.0,0
773,12,train,Give me the parent of Carloman of Bavaria and parent of Charles the Fat.,SELECT ?result WHERE { <http://dbpedia.org/resource/Charles_the_Fat> <http://dbpedia.org/ontology/parent> ?result . ?result <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Carloman_of_Bavaria> . },"```sparql
SELECT ?individual (GROUP_CONCAT(?parentLabel; separator="", "") AS ?parents) WHERE {
  # Find Carloman of Bavaria and his parent(s)
  OPTIONAL { 
    ?carloman dbo:parent ?parent .
    ?carloman rdfs:label ""Carloman, Duke of Bavaria""@en .
    ?parent rdfs:label ?parentLabel .
  }
  
  # Find Charles the Fat and his parent(s)
  OPTIONAL {
    ?charles dbo:parent ?parent .
    ?charles rdfs:label ""Charles the Fat""@en .
    ?parent rdfs:label ?parentLabel .
  }

  # Ensure we get results for both individuals
  VALUES ?individual { 
    ?carloman 
    ?charles 
  }
}
GROUP BY ?individual
```",2,2,3,1,2,3,3,71,0,0,2,0,0.0,0
791,22,train,"Give me the spouse of Taira no Tokuko and father of the child, that is a royalty, of Emperor Takakura.",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/spouse> <http://dbpedia.org/resource/Taira_no_Tokuko> . ?v1 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Emperor_Takakura> . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v1 <http://dbpedia.org/property/father> ?result . },"```sparql
SELECT ?spouse ?child WHERE {
  # Find Taira no Tokuko and her spouse
  ?tokuko dbo:spouse ?spouse .
  ?tokuko rdfs:label ""Taira no Tokuko""@en .

  # Find a child of Emperor Takakura who is royalty
  OPTIONAL {
    ?takakura dbo:child ?child .
    ?takakura rdfs:label ""Emperor Takakura""@en .
    FILTER (regex(str(?child), ""Imperial Princess"", ""i"") || regex(str(?child), ""Prince"", ""i""))
  }

  # Ensure the child is royalty
  OPTIONAL {
    ?child dbo:parent ?takakura .
    FILTER (regex(str(?child), ""Emperor Go-Shirakawa"", ""i"")) # Example of a known royal child
  }
}
```",3,4,4,2,2,3,3,71,1,0,0,1.0,1.0,1.0
216,1,train,Give me the party of Campbell Newman.,SELECT ?result WHERE { <http://dbpedia.org/resource/Campbell_Newman> <http://dbpedia.org/ontology/party> ?result . },"```sparql
SELECT ?party WHERE {
  ?newman rdfs:label ""Campbell Newman""@en .
  ?newman dbo:party ?party .
}
```",1,1,2,1,1,2,3,28,2,0,0,1.0,1.0,1.0
166,9,train,"Who is the military force of the force, that is an event and a societal event and a military conflict, of Manuel Hedilla?",SELECT ?result WHERE { ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?v0 <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Manuel_Hedilla> . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?result <http://dbpedia.org/ontology/battle> ?v0 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. },"```sparql
SELECT ?militaryForceOfMilitaryForce WHERE {
  # Identify Manuel Hedilla
  ?hedilla rdfs:label ""Manuel Hedilla""@en .
  
  # Find events associated with him that are societal and military conflicts
  ?event dbo:agent ?hedilla ;
         a dbo:SocietalEvent, dbo:MilitaryConflict .

  # Find the military force of these events
  ?event dbo:militaryForce ?militaryForce .

  # Determine the military force of this military force
  ?militaryForce dbo:militaryForce ?militaryForceOfMilitaryForce .
}
```",2,5,3,2,1,3,2,20,0,0,514,0,0.0,0
573,30,train,"Give me the parent of the author, that is a politician and an office holder, of Exchequer Standards and person decedent at Massachusetts and person decedent at Quincy, Massachusetts.","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/deathPlace> <http://dbpedia.org/resource/Massachusetts> . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. <http://dbpedia.org/resource/Exchequer_Standards> <http://dbpedia.org/property/author> ?v1 . ?v1 <http://dbpedia.org/ontology/parent> ?result . ?result <http://dbpedia.org/ontology/deathPlace> <http://dbpedia.org/resource/Quincy,_Massachusetts> . }","```sparql
SELECT ?parent WHERE {
  # Find the author of Exchequer Standards who is also a politician and office holder
  ?author dbo:wikiPageWikiLink wd:Q123456 .  # Placeholder for actual QID of ""Exchequer Standards""
  ?author rdf:type dbo:Politician .
  ?author rdf:type dbo:OfficeHolder .

  # Ensure the author is decedent at Massachusetts and Quincy, Massachusetts
  ?author dbo:deathPlace ?massachusetts .
  ?massachusetts rdfs:label ""Massachusetts""@en .
  
  OPTIONAL {
    ?quincy dbo:partOf ?massachusetts .
    ?quincy rdfs:label ""Quincy, Massachusetts""@en .
  }

  # Find the parent of this author
  ?author dbo:parent ?parent .

}
```

### Explanation:
- **`?author dbo:wikiPageWikiLink wd:Q123456 .`:** This line is a placeholder for linking to the actual DBpedia resource ID (QID) for ""Exchequer Standards."" You would replace `wd:Q123456` with the correct QID.
- **`rdf:type dbo:Politician . rdf:type dbo:OfficeHolder .`:** Ensures that the author is both a politician and an office holder.
- **`dbo:deathPlace ?massachusetts .`:** Confirms the decedent location as Massachusetts.
- **`?quincy dbo:partOf ?massachusetts .`:** Further specifies Quincy, Massachusetts as part of the death place.
- **`dbo:parent ?parent .`:** Retrieves the parent of the identified author.",4,6,5,2,3,3,3,71,0,0,2,0,0.0,0
839,20,train,Give me the band of Kevin Russell (musician) and band of the member of Böhse Onkelz.,SELECT ?result WHERE { <http://dbpedia.org/resource/Böhse_Onkelz> <http://dbpedia.org/ontology/bandMember> ?v2 . ?result <http://dbpedia.org/ontology/bandMember> ?v2 . <http://dbpedia.org/resource/Kevin_Russell_(musician)> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . },"```sparql
# Query to get the band of Kevin Russell (musician)
SELECT ?band WHERE {
  ?kevinRussell dbo:associatedBand ?band .
  ?kevinRussell rdfs:label ""Kevin Russell""@en .
}

UNION

# Query to get the band of a member of Böhse Onkelz
SELECT ?memberBand WHERE {
  ?boehseOnkelzMember dbo:memberOf ?boehseOnkelz .
  ?boehseOnkelz rdfs:label ""Böhse Onkelz""@en .
  
  OPTIONAL { 
    ?boehseOnkelzMember dbo:associatedBand ?memberBand .
  }
}
```",3,3,4,2,2,3,3,71,0,0,1,0,0.0,0
573,20,train,"Give me the person decedent at Massachusetts and person decedent at the residence, that is a settlement, of William J. Phelan.",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/deathPlace> ?v2 . ?result <http://dbpedia.org/ontology/deathPlace> <http://dbpedia.org/resource/Massachusetts> . <http://dbpedia.org/resource/William_J._Phelan> <http://dbpedia.org/property/residence> ?v2 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. },"```sparql
SELECT ?decedentMassachusetts ?decedentPhelanResidence WHERE {
  # Find person decedent at Massachusetts
  ?decedentMassachusetts dbo:deathPlace ?massachusetts .
  ?massachusetts rdfs:label ""Massachusetts""@en .

  # Find residence of William J. Phelan and ensure it's a settlement
  ?phelan dbo:residence ?residence .
  ?phelan rdfs:label ""William J. Phelan""@en .
  
  # Ensure the residence is classified as a settlement
  ?residence rdf:type dbo:Settlement .

  # Find person decedent at this residence (settlement)
  ?decedentPhelanResidence dbo:deathPlace ?residence .
}
```",3,4,4,2,2,3,3,71,4,1000,0,0.00398406374501992,1.0,0.007936507936507936
582,13,train,"Give me the player in the father, that is an athlete and a soccer manager and a sports manager, of Masami Nagasawa.",SELECT ?result WHERE { <http://dbpedia.org/resource/Masami_Nagasawa> <http://dbpedia.org/property/father> ?v1 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerManager>. ?v1 <http://dbpedia.org/ontology/team> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsManager>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Athlete>. },"```sparql
SELECT ?player WHERE {
  # Identify Masami Nagasawa
  ?nagasawa dbo:birthName ""Masami Nagasawa""@en .
  
  # Retrieve her father's details
  ?nagasawa dbo:father ?father .

  # Check if the father is an athlete, soccer manager, and sports manager
  ?father rdf:type dbo:Athlete ;
          dbo:sportManagerOf ?team ;
          dbo:managerialRole ""Soccer Manager""@en .
  
  # Find any player associated with him in these capacities
  ?team dbo:player ?player .
}
```",2,5,3,2,1,3,3,71,0,0,4,0,0.0,0
236,7,train,"Give me the party member of the administration, that is an organisation, of John Adams.",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/party> ?v1 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?v1 <http://dbpedia.org/property/leader> <http://dbpedia.org/resource/John_Adams> . },"```sparql
SELECT ?organization WHERE {
  # Identify John Adams and his political party
  ?johnAdams dbo:politicalAffiliation ?party .
  ?johnAdams rdfs:label ""John Adams""@en .

  # Find organizations related to the political party
  ?party dbo:memberOrganization ?organization .
}
```",2,3,3,2,1,3,2,20,0,0,269,0,0.0,0
365,10,train,"Give me the native, that is a politician, of the reference to Полтавская губерния.","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/birthPlace> ?v0 . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v0 <http://xmlns.com/foaf/0.1/name> ""Полтавская губерния""@en . }","```sparql
SELECT ?person ?name WHERE {
  # Find people who are natives of Poltava Governorate
  ?person dbo:birthPlace dbr:Poltava_Governorate .
  
  # Ensure they have a politician role in their occupation
  ?person dbo:occupation ?occupation .
  FILTER CONTAINS(LCASE(str(?occupation)), ""politician"")
  
  # Get the name of the person
  ?person rdfs:label ?name .
  FILTER (LANG(?name) = 'en')
}
```",2,3,3,2,1,3,2,20,2,2,9,0.5,0.18181818181818182,0.26666666666666666
373,5,train,"Give me the writer of the work, that is a single and a musical work and a work and a soundtrack, of .","SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?v1 <http://dbpedia.org/property/writer> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Single>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Song>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalWork>. ?v1 <http://dbpedia.org/property/writer> """"@en . }","```sparql
SELECT ?work ?writer WHERE {
  # Find works that are classified as single, musical work, and soundtrack
  ?work rdf:type/rdfs:subClassOf* dbo:Single ;
        rdf:type/rdfs:subClassOf* dbo:MusicalWork ;
        rdf:type/rdfs:subClassOf* dbo:Soundtrack .

  # Retrieve the writer of the work (composer or lyricist)
  OPTIONAL { 
    ?work dbo:lyricist ?writer .
  }
  OPTIONAL {
    ?work dbo:composer ?writer .
  }

  FILTER (?writer != UNDEF) # Ensure that a writer is found
}
```",2,6,3,2,1,2,2,9,0,0,15041,0,0.0,0
98,4,train,Give me the person born as Paolo Elito M. Ballesteros IV.,"SELECT ?result WHERE { ?result <http://dbpedia.org/property/birthName> ""Paolo Elito M. Ballesteros IV""@en . }","```sparql
SELECT ?birthName ?label WHERE {
  ?person rdfs:label ""Paolo Elito M. Ballesteros IV""@en .
  OPTIONAL { ?person dbo:birthName ?birthName . }
  OPTIONAL { ?person rdfs:label ?label . FILTER (lang(?label) = 'en') }
}
```",1,1,2,1,1,2,3,28,0,1,1,0.0,0.0,0
216,7,train,Give me the death of Pavel Vezhinov.,SELECT ?result WHERE { <http://dbpedia.org/resource/Pavel_Vezhinov> <http://dbpedia.org/ontology/deathDate> ?result . },"```sparql
SELECT ?deathDate WHERE {
  ?person rdfs:label ""Pavel Vezhinov""@en .
  ?person dbo:deathDate ?deathDate .
}
```",1,1,2,1,1,3,3,71,1,0,0,1.0,1.0,1.0
917,19,train,"Give me the parent of the child, that is a royalty, of Kamehameha IV and child of Kekūanāoʻa.",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/child> ?v2 . ?v2 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Kamehameha_IV> . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?result <http://dbpedia.org/ontology/parent> <http://dbpedia.org/resource/Kekūanāoʻa> . },"```sparql
SELECT ?parent WHERE {
  # Find children of Kamehameha IV who are royalty
  ?child dbo:parent ?kamehamehaIV .
  ?kamehamehaIV rdfs:label ""Kamehameha IV""@en .
  
  # Ensure the child is also a child of Kekūanāoʻa
  ?child dbo:parent ?kekuanaoa .
  ?kekuanaoa rdfs:label ""Kekūanāoʻa""@en .

  # Identify the parent of this royal child
  ?child dbo:parent ?parent .
  
  # Ensure the child is royalty (optional filter if needed)
  OPTIONAL { 
    ?child rdf:type dbp:RoyalPerson .
  }
}
```",3,4,4,2,2,3,3,71,0,0,1,0,0.0,0
495,3,train,Give me the father of William I of Württemberg.,SELECT ?result WHERE { <http://dbpedia.org/resource/William_I_of_Württemberg> <http://dbpedia.org/property/father> ?result . },"```sparql
SELECT ?father WHERE {
  ?williamI dbo:parent ?father .
  ?williamI rdfs:label ""William I, Duke of Württemberg""@en .
}
```",1,1,2,1,1,3,2,20,0,0,1,0,0.0,0
18,5,train,"Give me the figure known, that is an educational institution, as Saints.","SELECT ?result WHERE { ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/EducationalInstitution>. ?result <http://dbpedia.org/property/nickname> ""Saints""@en . }","```sparql
SELECT ?institution WHERE {
  ?institution rdfs:label ""Saints""@en .
  ?institution a dbo:EducationalInstitution .
}
```

This query selects entities with the label ""Saints"" and ensures they are of type `dbo:EducationalInstitution`.",1,2,2,1,1,2,3,28,0,0,25,0,0.0,0
791,28,train,"Give me the predecessor of Emperor Antoku and spouse of the spouse, that is a royalty, of Emperor Takakura and father of Emperor Go-Toba.",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/spouse> ?v1 . ?v1 <http://dbpedia.org/ontology/spouse> <http://dbpedia.org/resource/Emperor_Takakura> . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?result <http://dbpedia.org/ontology/successor> <http://dbpedia.org/resource/Emperor_Antoku> . <http://dbpedia.org/resource/Emperor_Go-Toba> <http://dbpedia.org/property/father> ?result . },"```sparql
SELECT ?predecessor ?royalSpouseFather WHERE {
  # Find predecessor of Emperor Antoku
  ?antoku dbo:predecessor ?predecessor .
  ?antoku rdfs:label ""Emperor Antoku""@en .

  # Find spouse of Emperor Takakura who is royalty
  OPTIONAL { 
    ?takakura dbo:spouse ?royalSpouse .
    ?takakura rdfs:label ""Emperor Takakura""@en .
    FILTER (regex(str(?royalSpouse), ""Imperial Princess"", ""i""))
  }

  # Find father of the royal spouse
  OPTIONAL {
    ?royalSpouse dbo:parent ?royalSpouseFather .
    FILTER (regex(str(?royalSpouse), ""Imperial Princess"", ""i""))
  }
  
  # Find father of Emperor Go-Toba
  OPTIONAL {
    ?goToba dbo:parent ?fatherOfGoToba .
    ?goToba rdfs:label ""Emperor Go-Toba""@en .
  }

}
```",4,5,5,2,3,3,3,71,1,0,0,1.0,1.0,1.0
124,33,train,"Give me the military force of the war, that is an event and a military conflict and a societal event, of the awardee of British South Africa Company Medal and commander in Mahdist War.",SELECT ?result WHERE { ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v0 <http://dbpedia.org/ontology/battle> ?v3 . ?v0 <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/British_South_Africa_Company_Medal> . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?result <http://dbpedia.org/ontology/battle> ?v3 . <http://dbpedia.org/resource/Mahdist_War> <http://dbpedia.org/ontology/commander> ?result . },"```sparql
SELECT ?militaryForce WHERE {
  # Find individual who was commander in Mahdist War and received British South Africa Company Medal
  ?individual dbo:commanderInMilitaryConflict ?mahdistWar .
  ?mahdistWar rdfs:label ""Mahdist War""@en .
  
  ?individual dbo:awardReceived ?medal .
  ?medal rdfs:label ""British South Africa Company Medal""@en .

  # Identify the war that is an event, military conflict, and societal event
  ?war rdf:type dbpedia-owl:Event ;
       rdf:type dbpedia-owl:MilitaryConflict ;
       rdf:type dbpedia-owl:SocietalEvent .
  
  # Find the military force involved in this war
  ?war dbo:militaryForce ?militaryForce .
}
```",4,7,5,3,2,3,3,71,0,0,3,0,0.0,0
433,0,train,Give me the associated musical artist of Paul Chambers.,SELECT ?result WHERE { <http://dbpedia.org/resource/Paul_Chambers> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . },"```sparql
SELECT ?artist WHERE {
  ?chambers dbo:associatedMusicalArtist ?artist .
  ?chambers rdfs:label ""Paul Chambers""@en .
}
```",1,1,2,1,1,3,3,71,31,0,0,1.0,1.0,1.0
874,10,train,"Give me the band member of the band, that is an organisation, of Mark Read (singer).",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/associatedMusicalArtist> ?v0 . ?v0 <http://dbpedia.org/ontology/bandMember> <http://dbpedia.org/resource/Mark_Read_(singer)> . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. },"```sparql
SELECT ?bandMember WHERE {
  # Find Mark Read and his associated band
  ?markRead dbo:member ?band .
  ?markRead rdfs:label ""Mark Read (singer)""@en .

  # Ensure the band is an organization
  ?band a dbo:Band ;
        a dbo:Organization .

  # Retrieve other members of the band
  ?band dbo:member ?bandMember .
  
  FILTER (?bandMember != ?markRead)
}
```",2,3,3,2,1,3,2,20,0,0,7,0,0.0,0
892,24,train,Give me the entity in Province of Reggio Emilia and landmark at elevation of the award of Anna Ishii.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/province> <http://dbpedia.org/resource/Province_of_Reggio_Emilia> . <http://dbpedia.org/resource/Anna_Ishii> <http://dbpedia.org/property/awards> ?v2 . ?result <http://dbpedia.org/ontology/elevation> ?v2 . },"```sparql
SELECT ?entityInReggioEmilia WHERE {
  # Find the award of Anna Ishii and its elevation
  ?annaIshii dbo:award ?award .
  ?annaIshii rdfs:label ""Anna Ishii""@en .
  
  OPTIONAL { 
    ?award dbo:elevation ?elevation .
  }
  
  # Find a landmark at this elevation
  ?landmark dbo:elevation ?elevation .
  
  # Find an entity in the Province of Reggio Emilia related to this landmark
  ?entityInReggioEmilia dbo:location ?reggioEmilia .
  ?reggioEmilia rdfs:label ""Province of Reggio Emilia""@en .
  
  OPTIONAL {
    ?entityInReggioEmilia dbo:relatedTo ?landmark .
  }
}
```",3,3,4,2,2,3,3,71,0,0,1,0,0.0,0
582,25,train,Give me the figure known as the nickname of Japan national football team and player in Kazuaki Nagasawa.,SELECT ?result WHERE { ?result <http://dbpedia.org/property/nickname> ?v1 . <http://dbpedia.org/resource/Kazuaki_Nagasawa> <http://dbpedia.org/ontology/team> ?result . <http://dbpedia.org/resource/Japan_national_football_team> <http://dbpedia.org/property/nickname> ?v1 . },"```sparql
SELECT ?nickname WHERE {
  # Find the nickname of the Japan national football team
  ?team dbo:nickname ?nickname .
  ?team rdfs:label ""Japan national football team""@en .

  OPTIONAL {
    # Check if Kazuaki Nagasawa is a player for this team
    ?player dbo:memberOfTeam ?team ;
            foaf:name ""Kazuaki Nagasawa"" .
  }
}
```",3,3,4,2,2,3,3,71,0,0,1,0,0.0,0
453,3,train,"Who is the author, that is a cardinal and a cleric, of Apologia Pro Vita Sua?",SELECT ?result WHERE { <http://dbpedia.org/resource/Apologia_Pro_Vita_Sua> <http://dbpedia.org/property/author> ?result . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Cardinal>. ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Cleric>. },"```sparql
SELECT ?author WHERE {
  # Find the author of Apologia Pro Vita Sua
  ?book dbo:author ?author .
  ?book rdfs:label ""Apologia Pro Vita Sua""@en .

  # Ensure the author is a cardinal and a cleric
  ?author dbo:occupation ?occupation1 .
  ?author dbo:occupation ?occupation2 .
  FILTER (regex(str(?occupation1), ""Cardinal"", ""i"") && regex(str(?occupation2), ""Cleric|Priest"", ""i""))
}
```",1,3,2,1,1,2,2,9,0,0,1,0,0.0,0
465,18,train,"Give me the successor of Renée of France and successor of Ercole II d'Este, Duke of Ferrara and spouse of Archduchess Barbara of Austria.","SELECT ?result WHERE { <http://dbpedia.org/resource/Renée_of_France> <http://dbpedia.org/ontology/successor> ?result . <http://dbpedia.org/resource/Ercole_II_d'Este,_Duke_of_Ferrara> <http://dbpedia.org/ontology/successor> ?result . ?result <http://dbpedia.org/ontology/spouse> <http://dbpedia.org/resource/Archduchess_Barbara_of_Austria> . }","```sparql
SELECT ?successorRenée ?successorErcole WHERE {
  # Find the successor of Renée of France
  ?renée dbo:successor ?successorRenée .
  ?renée rdfs:label ""Renée of France""@en .

  # Find the successor of Ercole II d'Este and check if married to Archduchess Barbara of Austria
  ?ercole dbo:successor ?successorErcole .
  ?ercole rdfs:label ""Ercole II d'Este, Duke of Ferrara""@en .
  
  OPTIONAL {
    ?successorErcole dbo:spouse ?barbara .
    ?barbara rdfs:label ""Archduchess Barbara of Austria""@en .
  }
}
```",3,3,4,1,3,3,3,71,1,0,0,1.0,1.0,1.0
274,18,train,"Give me the associated musical artist of the actor, that is a musical artist, of Imagine the Sound and professional in .","SELECT ?result WHERE { ?v2 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?result <http://dbpedia.org/property/occupation> """"@en . <http://dbpedia.org/resource/Imagine_the_Sound> <http://dbpedia.org/property/starring> ?v2 . }","```sparql
SELECT ?actor ?associatedArtist WHERE {
  # Find the actor of ""Imagine the Sound""
  ?movie dbo:starring ?actor .
  ?movie rdfs:label ""Imagine the Sound""@en .

  # Check if the actor is also a musical artist
  OPTIONAL { 
    ?actor dbo:profession dbc:Musical_artists .
  }

  # Find associated musical artists of this actor
  OPTIONAL {
    ?actor dbo:associatedMusicalArtist ?associatedArtist .
  }
}
```",3,4,4,2,2,2,3,28,6,32,0,0.15789473684210525,1.0,0.2727272727272727
124,8,train,"Give me the force, that is a societal event and a military conflict, of Herbert Kitchener, 1st Earl Kitchener.","SELECT ?result WHERE { ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?result <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Herbert_Kitchener,_1st_Earl_Kitchener> . }","```sparql
SELECT ?societalEvent ?militaryConflict WHERE {
  # Identify Herbert Kitchener
  ?kitchener rdfs:label ""Herbert Kitchener""@en .
  
  # Find a societal event associated with him (e.g., Suez Canal)
  OPTIONAL { 
    ?kitchener dbo:associatedWith ?societalEvent .
    ?societalEvent rdfs:label ?eventLabel .
    FILTER regex(?eventLabel, ""Suez Canal"", ""i"")
  }
  
  # Find a military conflict associated with him (e.g., World War I)
  OPTIONAL {
    ?kitchener dbo:associatedWith ?militaryConflict .
    ?militaryConflict rdfs:label ?conflictLabel .
    FILTER regex(?conflictLabel, ""World War I"", ""i"")
  }
}
```",1,3,2,1,1,3,3,71,0,0,8,0,0.0,0
715,27,train,"Give me the leader of the office, that is a government agency and an organisation, of the reference to Carlos Franco Iribarnegaray.","SELECT ?result WHERE { ?v1 <http://xmlns.com/foaf/0.1/name> ""Carlos Franco Iribarnegaray""@en . ?v2 <http://dbpedia.org/ontology/leader> ?result . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?v1 <http://dbpedia.org/property/office> ?v2 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/GovernmentAgency>. }","```sparql
SELECT ?leader WHERE {
  # Identify Carlos Franco Iribarnegaray
  ?person rdfs:label ""Carlos Franco Iribarnegaray""@en .
  
  # Find an office that is both a government agency and an organization associated with him
  ?office dbo:employee ?person ;
          rdf:type dbo:GovernmentAgency, dbo:Organization .

  # Retrieve the leader of this office
  ?office dbo:leader ?leader .
}
```",3,5,4,3,1,3,3,71,0,0,2,0,0.0,0
459,5,train,Give me the birth name of Kevin Stitt.,SELECT ?result WHERE { <http://dbpedia.org/resource/Kevin_Stitt> <http://dbpedia.org/property/birthName> ?result . },"```sparql
SELECT ?birthName WHERE {
  ?person rdfs:label ""Kevin Stitt""@en .
  ?person dbo:birthName ?birthName .
}
```",1,1,2,1,1,2,3,28,1,0,0,1.0,1.0,1.0
507,34,train,"Give me the professional in Film director, television director and spouse of the person born as the birth name of Anne V. Coates.","SELECT ?result WHERE { <http://dbpedia.org/resource/Anne_V._Coates> <http://dbpedia.org/property/birthName> ?v2 . ?result <http://dbpedia.org/ontology/spouse> ?v1 . ?v1 <http://dbpedia.org/property/birthName> ?v2 . ?result <http://dbpedia.org/property/occupation> ""Film director, television director""@en . }","```sparql
SELECT ?spouse ?filmDirector ?tvDirector WHERE {
  # Find Anne V. Coates and her birth name
  ?anne a dbo:FilmEditor ;
        rdfs:label ""Anne V. Coates""@en .
  
  # Get the spouse of Anne V. Coates
  ?anne dbo:spouse ?spouse .

  # Check if the spouse has professions as film director or television director
  OPTIONAL { 
    ?spouse dbo:occupation ?filmDirector .
    FILTER (regex(str(?filmDirector), ""Film Director"", ""i""))
  }
  
  OPTIONAL {
    ?spouse dbo:occupation ?tvDirector .
    FILTER (regex(str(?tvDirector), ""Television Director"", ""i""))
  }
}
```",4,4,5,3,2,3,3,71,0,0,1,0,0.0,0
865,24,train,"Give me the father of the child, that is a politician, of Abu Ahmad Abdul Hafiz and father of Shahla Khatun.",SELECT ?result WHERE { ?v2 <http://dbpedia.org/property/father> ?result . ?v2 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Abu_Ahmad_Abdul_Hafiz> . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. <http://dbpedia.org/resource/Shahla_Khatun> <http://dbpedia.org/property/father> ?result . },"```sparql
SELECT ?father WHERE {
  # Find Abu Ahmad Abdul Hafiz and his children who are politicians
  ?abuAHmad dbo:child ?child .
  ?abuAHmad rdfs:label ""Abu Ahmad Abdul Hafiz""@en .
  
  OPTIONAL {
    ?child rdf:type dbo:Politician .
  }
  
  # The father of the child is Abu Ahmad Abdul Hafiz
  BIND(?abuAHmad AS ?father)
  
  # Find Shahla Khatun and her father
  OPTIONAL {
    ?shahlaKhatun dbo:parent ?shahlaFather .
    ?shahlaKhatun rdfs:label ""Shahla Khatun""@en .
  }
}
```",3,4,4,2,2,3,3,71,1,0,0,1.0,1.0,1.0
554,3,train,Give me the administration of Francisco da Costa Gomes.,SELECT ?result WHERE { ?result <http://dbpedia.org/property/leader> <http://dbpedia.org/resource/Francisco_da_Costa_Gomes> . },"```sparql
SELECT ?administration WHERE {
  ?person dbo:givenName ""Francisco"" .
  ?person dbo:familyName ""da Costa Gomes"" .
  ?person dbo:officeHolder ?position .
  ?position rdfs:label ""President of Portugal""@en .
  
  OPTIONAL { 
    ?position dbo:termStart ?start .
    ?position dbo:termEnd ?end .
    
    BIND(CONCAT(""Administration from "", STR(?start), "" to "", STR(?end)) AS ?administration)
  }
}
```",1,1,2,1,1,3,2,20,0,0,3,0,0.0,0
987,8,train,"Give me the region, that is a country, of Central European Time.",SELECT ?result WHERE { ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. ?result <http://dbpedia.org/property/timeZone> <http://dbpedia.org/resource/Central_European_Time> . },"```sparql
SELECT ?country WHERE {
  ?country rdf:type dbo:Country .
  ?country dbp:timeZone ""Central European Time"" .
}
```",1,2,2,1,1,3,3,71,0,0,56,0,0.0,0
645,34,train,Give me the commander in the force of the commander in Siege of Madrid and leader of Ministry of the Army (Spain).,SELECT ?result WHERE { <http://dbpedia.org/resource/Ministry_of_the_Army_(Spain)> <http://dbpedia.org/ontology/leader> ?result . ?v1 <http://dbpedia.org/ontology/commander> ?v2 . ?v1 <http://dbpedia.org/ontology/commander> ?result . <http://dbpedia.org/resource/Siege_of_Madrid> <http://dbpedia.org/ontology/commander> ?v2 . },"```sparql
SELECT ?commonCommander WHERE {
  # Step 1: Find the commander in the Siege of Madrid
  ?siegeEvent dbo:commander ?madridCommander .
  ?siegeEvent rdfs:label ""Siege of Madrid""@en .

  # Step 2: Find the leader of Ministry of the Army (Spain)
  ?ministryLeader dbo:leader ?armyMinister .
  ?ministryLeader rdfs:label ""Ministry of the Army (Spain)""@en .

  # Step 3: Identify a common commander
  OPTIONAL {
    ?madridCommander dbo:commander ?commonCommander .
  }
  
  OPTIONAL {
    ?armyMinister dbo:commander ?commonCommander .
  }

  FILTER (?commonCommander != ?madridCommander && ?commonCommander != ?armyMinister)
}
```",4,4,5,3,2,3,3,71,0,0,1,0,0.0,0
124,17,train,"Give me the force, that is a societal event and a military conflict, of the person born on 1850-06-24.","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/commander> ?v1 . ?v1 <http://dbpedia.org/ontology/birthDate> ""1850-06-24""^^<http://www.w3.org/2001/XMLSchema#date> . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. }","```sparql
SELECT ?person ?event WHERE {
  # Find person born on June 24, 1850
  ?person dbo:birthDate ""1850-06-24""^^xsd:date .
  
  # Find societal events or military conflicts associated with this person
  OPTIONAL { 
    ?person dbo:associatedEvent ?event .
    FILTER (regex(str(?event), ""societal event|military conflict"", ""i""))
  }
}
```",2,4,3,2,1,3,3,71,0,2,8,0.0,0.0,0
445,6,train,Who is the awardee of Royal Astronomical Society?,SELECT ?result WHERE { ?result <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/Royal_Astronomical_Society> . },"```sparql
SELECT ?awardee WHERE {
  ?society dbo:awardWinner ?awardee .
  ?society rdfs:label ""Royal Astronomical Society""@en .
}
```",1,1,2,1,1,3,3,71,0,0,2,0,0.0,0
456,27,train,"Give me the band of the band, that is a musical artist, of the band of Alan Doyle.",SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/associatedMusicalArtist> ?v2 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?v2 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . <http://dbpedia.org/resource/Alan_Doyle> <http://dbpedia.org/ontology/associatedMusicalArtist> ?v1 . },"```sparql
SELECT ?bandOfBand WHERE {
  # Step 1: Identify Alan Doyle's band
  ?doyle dbo:member ?alanDoyle .
  ?alanDoyle foaf:name ""Alan Doyle""@en .

  # Step 2: Find the band associated with Alan Doyle
  ?doyle dbo:band ?firstBand .

  # Step 3: Find a musical artist or band linked to this first band
  OPTIONAL {
    ?firstBand dbo:member ?secondArtist .
  }

  # Step 4: Identify the band of this second artist
  OPTIONAL {
    ?secondArtist dbo:band ?bandOfBand .
  }
}
```",3,4,4,3,1,3,3,71,0,0,3,0,0.0,0
917,23,train,"Give me the parent of the child, that is a royalty, of the mayor of Hawaiian Kingdom.",SELECT ?result WHERE { ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v2 <http://dbpedia.org/property/father> ?v1 . <http://dbpedia.org/resource/Hawaiian_Kingdom> <http://dbpedia.org/property/leader> ?v1 . ?result <http://dbpedia.org/ontology/child> ?v2 . },"```sparql
SELECT ?parent WHERE {
  # Find the mayor of the Hawaiian Kingdom
  ?mayor dbo:position ""Mayor""@en ;
         dbo:country dbr:Hawaiian_Kingdom .

  # Identify children of the mayor
  ?mayor dbo:child ?child .

  # Filter for a child who is royalty
  OPTIONAL {
    ?child dbo:royaltyStatus ""Royal""@en .
  }

  # Find parent(s) of this royal child
  ?child dbo:parent ?parent .
}
```",3,4,4,3,1,3,3,71,0,0,12,0,0.0,0
216,24,train,"Give me the team of Ognjen Vukojević and player in the coach, that is a soccer player and a sports manager and a soccer manager, of Bosnia and Herzegovina national under-18 football team.",SELECT ?result WHERE { ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerPlayer>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsManager>. ?result <http://dbpedia.org/ontology/coach> <http://dbpedia.org/resource/Ognjen_Vukojević> . ?v2 <http://dbpedia.org/ontology/team> ?result . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerManager>. <http://dbpedia.org/resource/Bosnia_and_Herzegovina_national_under-18_football_team> <http://dbpedia.org/ontology/coach> ?v2 . },"```sparql
SELECT ?player WHERE {
  # Identify Ognjen Vukojević's coaching role
  ?team dbo:coach dbr:Ognjen_Vukojević .
  
  # Ensure the team is Bosnia and Herzegovina national under-18 football team
  ?team rdfs:label ""Bosnia and Herzegovina national under-18 football team""@en .

  # Find players who are members of this team
  ?player dbo:member ?team .

  # Filter players who are soccer players, sports managers, and soccer managers
  ?player rdf:type ?type .
  
  FILTER (
    (?type = dbr:Soccer_player || 
     ?type = dbc:Sports_managers || 
     ?type = dbc:Soccer_managers)
  )
}
```",3,6,4,2,2,3,3,71,0,0,1,0,0.0,0
826,11,train,Give me the spouse of the child of Johann Heinrich Appel.,"SELECT ?result WHERE { ?v0 <http://dbpedia.org/property/father> ""Johann Heinrich Appel""@en . ?v0 <http://dbpedia.org/ontology/spouse> ?result . }","```sparql
SELECT ?spouse WHERE {
  # Find Johann Heinrich Appel
  ?appel rdfs:label ""Johann Heinrich Appel""@en .
  
  # Identify his child
  ?appel dbo:child ?child .

  # Determine the spouse of the identified child
  ?child dbo:spouse ?spouse .
}
```",2,2,3,2,1,3,3,71,0,0,1,0,0.0,0
124,1,train,Give me the military force of Battle of Tamai.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/battle> <http://dbpedia.org/resource/Battle_of_Tamai> . },"```sparql
SELECT ?militaryForce WHERE {
  ?battle dbo:wikiPageRedirects ?redirect .
  OPTIONAL { ?battle rdfs:label ""Battle of Tamai""@en . }
  OPTIONAL { ?battle foaf:name ""Battle of Tamai"" . }
  
  # Find military forces involved in the battle
  ?battle dbo:participatingMilitaryUnit ?militaryForce .
}
```",1,1,2,1,1,3,3,71,0,0,4,0,0.0,0
417,24,train,Give me the child of the father of Frederick IX of Denmark and child of Alexandrine of Mecklenburg-Schwerin.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/parent> <http://dbpedia.org/resource/Alexandrine_of_Mecklenburg-Schwerin> . <http://dbpedia.org/resource/Frederick_IX_of_Denmark> <http://dbpedia.org/property/father> ?v2 . ?result <http://dbpedia.org/property/father> ?v2 . },"```sparql
SELECT ?child WHERE {
  # Find the father of Frederick IX of Denmark
  ?frederickIX dbo:parent ?father .
  ?frederickIX rdfs:label ""Frederick IX of Denmark""@en .

  # Find children of Alexandrine of Mecklenburg-Schwerin
  ?alexandrine dbo:child ?child .
  ?alexandrine rdfs:label ""Alexandrine of Mecklenburg-Schwerin""@en .

  # Find common child between the father of Frederick IX and Alexandrine
  ?father dbo:child ?commonChild .
  FILTER (?commonChild = ?child)
}
```",3,3,4,2,2,3,3,71,2,0,0,1.0,1.0,1.0
273,7,train,Give me the spouse of the child of Giovanni Agnelli.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/spouse> ?v1 . <http://dbpedia.org/resource/Giovanni_Agnelli> <http://dbpedia.org/ontology/child> ?v1 . },"```sparql
SELECT ?spouse WHERE {
  # Identify Giovanni Agnelli
  ?agnelli rdfs:label ""Giovanni Agnelli""@en .
  
  # Find his child
  ?agnelli dbo:child ?child .

  # Determine the spouse of the child
  ?child dbo:spouse ?spouse .
}
```",2,2,3,2,1,3,2,20,0,0,1,0,0.0,0
965,22,train,"Give me the spouse of Prince Louis of Battenberg and parent of the person born, that is a noble, as Prince George of Battenberg.","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/spouse> <http://dbpedia.org/resource/Prince_Louis_of_Battenberg> . ?v0 <http://dbpedia.org/ontology/parent> ?result . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Noble>. ?v0 <http://dbpedia.org/property/birthName> ""Prince George of Battenberg""@en . }","```sparql
SELECT ?spouse ?parent WHERE {
  # Find the spouse of Prince Louis of Battenberg
  ?louis dbo:spouse ?spouse .
  ?louis rdfs:label ""Prince Louis of Battenberg""@en .

  # Find the parent of Prince George of Battenberg who is a noble
  OPTIONAL {
    ?george dbo:parent ?parent .
    ?george rdfs:label ""Prince George of Battenberg""@en .
    FILTER (regex(str(?parent), ""Noble"", ""i""))
  }
}
```",3,4,4,2,2,3,3,71,1,0,0,1.0,1.0,1.0
417,6,train,Who is the father of Frederick IX of Denmark?,SELECT ?result WHERE { <http://dbpedia.org/resource/Frederick_IX_of_Denmark> <http://dbpedia.org/property/father> ?result . },"```sparql
SELECT ?father WHERE {
  # Find Frederick IX of Denmark and his father
  ?frederick dbo:parent ?father .
  ?frederick rdfs:label ""Frederick IX""@en .

  # Optionally, filter to ensure we get a male parent if needed
  OPTIONAL { 
    ?father rdf:type dbo:Man .
  }
}
```",1,1,2,1,1,3,3,71,0,0,1,0,0.0,0
36,16,train,Give me the person born as the birth name of Ayo Makun and actor of Being Mrs Elliot.,SELECT ?result WHERE { ?result <http://dbpedia.org/property/birthName> ?v0 . <http://dbpedia.org/resource/Being_Mrs_Elliot> <http://dbpedia.org/ontology/starring> ?result . <http://dbpedia.org/resource/Ayo_Makun> <http://dbpedia.org/property/birthName> ?v0 . },"```sparql
SELECT ?birthName WHERE {
  # Find Ayo Makun and his birth name
  ?person rdfs:label ""Ayo Makun""@en .
  ?person dbo:birthName ?birthName .

  # Confirm that Ayo Makun acted in ""Being Mrs Elliot""
  OPTIONAL {
    ?film rdfs:label ""Being Mrs Elliot""@en .
    ?film dbo:starring ?person .
  }
}
```",3,3,4,2,2,2,3,28,0,1,1,0.0,0.0,0
124,31,train,"Give me the military force of Battle of Tamai and commander in the war, that is a societal event and a military conflict, of the reference, that is Australian and an organisation and a military unit, to 'A' Battery, Royal Australian Artillery.","SELECT ?result WHERE { ?v1 <http://xmlns.com/foaf/0.1/name> ""'A' Battery, Royal Australian Artillery""@en . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?v1 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Australia>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?v1 <http://dbpedia.org/ontology/battle> ?v0 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryUnit>. ?v0 <http://dbpedia.org/ontology/commander> ?result . ?result <http://dbpedia.org/ontology/battle> <http://dbpedia.org/resource/Battle_of_Tamai> . }","```sparql
SELECT ?militaryForce ?commander WHERE {
  # Find the Battle of Tamai
  ?battle dbo:wikiPageRedirects dbpedia-en:Battle_of_Tamai .
  
  # Retrieve military forces involved in the battle
  ?battle dbo:militaryConflicts ?conflict .
  ?conflict dbo:participatingMilitaryUnit ?militaryForce .

  # Find the commander of the military force
  OPTIONAL {
    ?commander dbo:commanded ?militaryForce .
    ?commander rdfs:label ?commanderLabel .
  }

  # Reference to 'A' Battery, Royal Australian Artillery for context
  FILTER EXISTS { 
    ?reference dbo:wikiPageRedirects dbpedia-en:A_Battery,_Royal_Australian_Artillery .
  }
}
```",4,9,5,3,2,3,3,71,0,0,1,0,0.0,0
98,4,train,Give me the parent of Emperor Rokujō and child of Emperor Go-Shirakawa.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/parent> <http://dbpedia.org/resource/Emperor_Go-Shirakawa> . <http://dbpedia.org/resource/Emperor_Rokujō> <http://dbpedia.org/ontology/parent> ?result . },"```sparql
SELECT ?commonIndividual WHERE {
  # Find the parent of Emperor Rokujō
  ?rokujou dbo:parent ?commonIndividual .
  ?rokujou rdfs:label ""Emperor Rokujō""@en .

  # Find the children of Emperor Go-Shirakawa
  ?goShirakawa dbo:child ?commonIndividual .
  ?goShirakawa rdfs:label ""Emperor Go-Shirakawa""@en .
}
```",2,2,3,1,2,2,2,9,1,0,0,1.0,1.0,1.0
976,32,train,"Give me the office of the mayor, that is a politician and an office holder and Turkish, of Nation Alliance (Turkey) and office of the leader, that is a politician, of Grand National Assembly of Turkey.",SELECT ?result WHERE { <http://dbpedia.org/resource/Grand_National_Assembly_of_Turkey> <http://dbpedia.org/ontology/leader> ?v1 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. <http://dbpedia.org/resource/Nation_Alliance_(Turkey)> <http://dbpedia.org/property/leader> ?v3 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v3 <http://dbpedia.org/ontology/nationality> <http://dbpedia.org/resource/Turkey>. ?v3 <http://dbpedia.org/property/office> ?result . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v1 <http://dbpedia.org/property/office> ?result . },"```sparql
SELECT ?mayorOffice ?leaderOffice WHERE {
  # Find the office of the mayor who is a politician, office holder, and Turkish for Nation Alliance (Turkey)
  ?person dbo:office ?mayorOffice ;
          rdf:type dbo:Politician ;
          dbo:nationality dbr:Turkey ;
          dbo:politicalParty dbr:Nation_Alliance_(Turkey) .
  
  # Ensure the mayor's office is related to being a mayor
  FILTER (regex(str(?mayorOffice), ""Mayor"", ""i""))

  # Find the leader of the Grand National Assembly of Turkey who is a politician
  ?leader dbo:office ?leaderOffice ;
          rdf:type dbo:Politician .
  
  # Ensure the leader's office is related to being a leader in the Grand National Assembly
  FILTER (regex(str(?leaderOffice), ""Grand_National_Assembly_of_Turkey"", ""i""))
}
```",4,8,5,2,2,3,3,71,0,0,1,0,0.0,0
47,11,train,Give me the office of the administration of Jagdeep Dhankhar.,SELECT ?result WHERE { ?v0 <http://dbpedia.org/property/office> ?result . ?v0 <http://dbpedia.org/property/governor> <http://dbpedia.org/resource/Jagdeep_Dhankhar> . },"```sparql
SELECT ?office WHERE {
  ?dhankhar rdfs:label ""Jagdeep Dhankhar""@en .
  ?dhankhar dbo:position ?office .
}
```",2,2,3,2,1,3,3,71,0,0,80,0,0.0,0
216,13,train,"Give me the player in the coach, that is a soccer player and a sports manager and a soccer manager, of Bosnia and Herzegovina national under-18 football team.",SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/team> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerManager>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerPlayer>. <http://dbpedia.org/resource/Bosnia_and_Herzegovina_national_under-18_football_team> <http://dbpedia.org/ontology/coach> ?v1 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsManager>. },"```sparql
SELECT ?coach WHERE {
  # Find coaches of Bosnia and Herzegovina national under-18 football team
  ?team dbo:coach ?coach .
  ?team rdfs:label ""Bosnia and Herzegovina national under-18 football team""@en .

  # Ensure the coach is also a soccer player
  ?coach dbo:occupation ""Soccer player""@en .

  # Ensure the coach has experience in sports management
  OPTIONAL {
    ?coach dbo:occupation ""Sports manager""@en .
  }
}
```",2,5,3,2,1,3,3,71,0,0,13,0,0.0,0
645,23,train,Give me the commander in the force of the commander in Siege of Madrid.,SELECT ?result WHERE { ?v0 <http://dbpedia.org/ontology/commander> ?result . <http://dbpedia.org/resource/Siege_of_Madrid> <http://dbpedia.org/ontology/commander> ?v2 . ?v0 <http://dbpedia.org/ontology/commander> ?v2 . },"```sparql
SELECT ?commanderInForce WHERE {
  # Find the Siege of Madrid event
  ?siege dbo:wikiPageRedirects db:Siege_of_Madrid .
  
  # Identify the commander in the Siege of Madrid
  ?siege dbo:militaryCommander ?initialCommander .

  # Determine which force this commander was leading
  ?initialCommander dbo:commanded ?force .

  # Find the commander of that force
  ?force dbo:commander ?commanderInForce .
}
```",3,3,4,3,1,3,3,71,0,0,274,0,0.0,0
892,34,train,Give me the entity in the profession of the true self of Enrico Crolla and entity in Province of Reggio Emilia.,"SELECT ?result WHERE { ?v3 <http://xmlns.com/foaf/0.1/givenName> ""Enrico Crolla""@en . ?result <http://dbpedia.org/ontology/province> <http://dbpedia.org/resource/Province_of_Reggio_Emilia> . ?result <http://dbpedia.org/ontology/country> ?v1 . ?v3 <http://dbpedia.org/property/occupation> ?v1 . }","```sparql
# Query to find Enrico Crolla's profession
SELECT ?profession WHERE {
  ?enricoCrolla rdfs:label ""Enrico Crolla""@en .
  ?enricoCrolla dbo:occupation ?profession .
}

# Query to find an entity in the Province of Reggio Emilia
SELECT ?entity WHERE {
  ?entity dbo:locatedIn ?location .
  ?location rdfs:label ""Province of Reggio Emilia""@it .
}
```",4,4,5,3,2,3,3,71,0,0,40,0,0.0,0
130,2,train,"Give me the native, that is a coach and a college coach, of Madison, Alabama.","SELECT ?result WHERE { ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Coach>. ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/CollegeCoach>. ?result <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Madison,_Alabama> . }","```sparql
SELECT ?person WHERE {
  ?person dbo:birthPlace dbr:Madison,_Alabama .
  ?person dbo:occupation ?occupation .
  FILTER (
    regex(str(?occupation), ""coach"", ""i"") &&
    regex(str(?occupation), ""college coach"", ""i"")
  )
}
```",1,3,2,1,1,3,2,20,0,0,3,0,0.0,0
353,5,train,"Give me the alma mater of the awardee of Medal of the Order ""For Merit to the Fatherland"".",SELECT ?result WHERE { ?v1 <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/Medal_of_the_Order_%22For_Merit_to_the_Fatherland%22> . ?v1 <http://dbpedia.org/ontology/almaMater> ?result . },"```sparql
SELECT ?recipient ?almaMater WHERE {
  # Find recipients of the Medal of the Order ""For Merit to the Fatherland""
  ?medal dbo:recipient ?recipient .
  ?medal rdfs:label ""Medal of the Order 'For Merit to the Fatherland'""@en .

  # Retrieve alma mater for these recipients
  OPTIONAL {
    ?recipient foaf:almaMater ?almaMater .
  }
}
```",2,2,3,2,1,2,2,9,0,0,8,0,0.0,0
326,11,train,"Give me the person decedent at France and resident of the birthplace, that is a state and British, of David Jessel.",SELECT ?result WHERE { ?v2 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/United_Kingdom>. ?result <http://dbpedia.org/property/residence> ?v2 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/AdministrativeRegion>. ?result <http://dbpedia.org/ontology/deathPlace> <http://dbpedia.org/resource/France> . <http://dbpedia.org/resource/David_Jessel> <http://dbpedia.org/ontology/birthPlace> ?v2 . },"```sparql
SELECT ?decedent WHERE {
  # Identify David Jessel's birthplace and confirm it is a British state
  ?jessel dbo:birthPlace ?birthPlace .
  ?jessel rdfs:label ""David Jessel""@en .
  
  # Ensure the birthplace is in Britain
  ?birthPlace dbo:country ?britain .
  ?britain rdfs:label ""United Kingdom"" .

  # Identify David Jessel's residence
  ?jessel dbo:residence ?residence .

  # Find descendants of David Jessel
  ?descendant dbo:childOf ?jessel .

  # Check if any descendant died in France
  ?decedent dbo:deathPlace ?deathPlace .
  ?decedent rdfs:label ?descendantLabel .
  FILTER (regex(str(?descendantLabel), ""David Jessel"", ""i""))
  ?deathPlace rdfs:label ""France""@en .

}
```",3,5,4,2,2,3,2,20,0,0,1,0,0.0,0
839,18,train,Give me the band of Peter Schorowsky and band of Kevin Russell (musician) and band of Matthias Röhr.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/bandMember> <http://dbpedia.org/resource/Matthias_Röhr> . <http://dbpedia.org/resource/Kevin_Russell_(musician)> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?result <http://dbpedia.org/ontology/bandMember> <http://dbpedia.org/resource/Peter_Schorowsky> . },"```sparql
SELECT ?musician ?bandLabel WHERE {
  # Peter Schorowsky's band
  OPTIONAL { 
    ?schorowsky dbo:band ?band .
    ?schorowsky rdfs:label ""Peter Schorowsky""@en .
    ?band rdfs:label ?bandLabel .
  }
  
  # Kevin Russell (musician)'s band
  OPTIONAL {
    ?russell dbo:band ?band .
    ?russell rdfs:label ""Kevin Russell (musician)""@en .
    ?band rdfs:label ?bandLabel .
  }

  # Matthias Röhr's band
  OPTIONAL {
    ?roehr dbo:band ?band .
    ?roehr rdfs:label ""Matthias Röhr""@en .
    ?band rdfs:label ?bandLabel .
  }
}
```",3,3,4,1,3,3,3,71,0,0,1,0,0.0,0
382,0,train,Give me the birthplace of Björn Joppe.,SELECT ?result WHERE { <http://dbpedia.org/resource/Björn_Joppe> <http://dbpedia.org/ontology/birthPlace> ?result . },"```sparql
SELECT ?birthPlace WHERE {
  ?person rdfs:label ""Björn Joppe""@en .
  ?person dbo:birthPlace ?birthPlace .
}
```",1,1,2,1,1,3,2,20,2,0,0,1.0,1.0,1.0
158,7,train,"Give me the entity in the award, that is a country, of Adelbert Cronkhite.",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/country> ?v1 . <http://dbpedia.org/resource/Adelbert_Cronkhite> <http://dbpedia.org/property/awards> ?v1 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. },"```sparql
SELECT ?country WHERE {
  # Identify Adelbert Cronkhite
  ?person rdfs:label ""Adelbert Cronkhite""@en .
  
  # Find awards associated with Adelbert Cronkhite
  ?award dbo:recipient ?person .
  
  # Check if any entity in the award is a country
  ?award dbo:entity ?country .
  ?country rdf:type dbo:Country .
}
```",2,3,3,2,1,3,2,20,0,0,44301,0,0.0,0
47,33,train,"Give me the office of the awardee of the award, that is an award, of Mantu Ghosh and office of Suvendu Adhikari.",SELECT ?result WHERE { ?v3 <http://dbpedia.org/property/office> ?result . ?v3 <http://dbpedia.org/property/awards> ?v0 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Award>. <http://dbpedia.org/resource/Mantu_Ghosh> <http://dbpedia.org/property/awards> ?v0 . <http://dbpedia.org/resource/Suvendu_Adhikari> <http://dbpedia.org/property/office> ?result . },"```sparql
SELECT ?awardeeOffice ?suvenduOffice WHERE {
  # Find awards given by Mantu Ghosh and their awardees' offices
  ?award dbo:givenBy ""Mantu Ghosh""@en .
  ?award dbo:recipient ?awardee .
  ?awardee dbo:office ?awardeeOffice .

  # Find the office of Suvendu Adhikari
  ?suvendu rdfs:label ""Suvendu Adhikari""@en .
  ?suvendu dbo:office ?suvenduOffice .
}
```",4,5,5,3,2,3,3,71,0,0,1,0,0.0,0
124,22,train,"Give me the commander in Mahdist War and military force of the force, that is a societal event and a military conflict, of Herbert Kitchener, 1st Earl Kitchener.","SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Herbert_Kitchener,_1st_Earl_Kitchener> . <http://dbpedia.org/resource/Mahdist_War> <http://dbpedia.org/ontology/commander> ?result . ?result <http://dbpedia.org/ontology/battle> ?v1 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. }","```sparql
SELECT ?commander ?militaryForce WHERE {
  # Identify Herbert Kitchener, 1st Earl Kitchener
  ?kitchener rdfs:label ""Herbert Kitchener, 1st Earl Kitchener""@en .
  
  # Identify the Mahdist War as a societal event and military conflict
  ?mahdistWar dbo:type dbr:Societal_event ;
             dbo:type dbr:Military_conflict ;
             dbo:participatedIn ?kitchener .

  # Find the commander in the Mahdist War
  ?commander dbo:commanded ?militaryForce .
  ?commander dbo:participatedIn ?mahdistWar .

  # Ensure the military force is associated with a societal event and military conflict
  ?militaryForce dbo:type dbr:Societal_event ;
                 dbo:type dbr:Military_conflict .
}
```",3,5,4,2,2,3,3,71,0,0,3,0,0.0,0
329,9,train,Give me the entity in United Kingdom and entity in Northern Ireland.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/United_Kingdom> . ?result <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Northern_Ireland> . },"```sparql
SELECT ?entity WHERE {
  # Entity in Northern Ireland
  ?entity dbo:country dbr:Northern_Ireland .
  
  # Ensure it is also part of the United Kingdom
  OPTIONAL { 
    ?entity dbo:country dbr:United_Kingdom .
  }
  
  # Filter to get a specific entity, e.g., Belfast
  FILTER (regex(str(?entity), ""Belfast"", ""i""))
}
```",2,2,3,1,2,2,3,28,3,28,528,0.0967741935483871,0.005649717514124294,0.010676156583629892
527,6,train,Give me the author of The Boy Who Kicked Pigs and actor of The Book Tower.,SELECT ?result WHERE { <http://dbpedia.org/resource/The_Book_Tower> <http://dbpedia.org/property/starring> ?result . <http://dbpedia.org/resource/The_Boy_Who_Kicked_Pigs> <http://dbpedia.org/property/author> ?result . },"```sparql
SELECT ?author ?actor WHERE {
  # Find author of ""The Boy Who Kicked Pigs""
  ?book dbo:abstract ?abstract .
  ?book rdfs:label ""The Boy Who Kicked Pigs""@en .
  ?book dbo:author ?author .

  # Find actor of ""The Book Tower""
  OPTIONAL {
    ?movie dbo:starring ?actor .
    ?movie rdfs:label ""The Book Tower""@en .
  }
}
```",2,2,3,1,2,3,2,20,1,6,0,0.14285714285714285,1.0,0.25
933,39,train,"Give me the reference to Alan Warner and band of the band, that is a group and a band and an organisation, of the person born, that is a musical artist, on 1947-04-21.","SELECT ?result WHERE { ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Group>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?v2 <http://dbpedia.org/ontology/associatedMusicalArtist> ?v0 . ?v2 <http://dbpedia.org/ontology/birthDate> ""1947-04-21""^^<http://www.w3.org/2001/XMLSchema#date> . ?v0 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Band>. ?result <http://xmlns.com/foaf/0.1/name> ""Alan Warner""@en . }","```sparql
SELECT ?band WHERE {
  # Find Alan Warner and confirm his birth date
  ?alanWarner a dbo:MusicalArtist ;
              rdfs:label ""Alan Warner""@en ;
              dbo:birthDate ?birthDate .
  
  FILTER (YEAR(?birthDate) = 1947 && MONTH(?birthDate) = 4 && DAY(?birthDate) = 21)

  # Find the band Alan Warner is a member of
  ?alanWarner dbo:member ?band .

  # Ensure the band is classified as a group, band, and organization
  ?band rdf:type ?type .
  FILTER (
    (str(?type) = ""http://dbpedia.org/ontology/Band"" || 
     str(?type) = ""http://dbpedia.org/ontology/MusicalGroup"" ||
     str(?type) = ""http://dbpedia.org/ontology/Organisation"")
  )
}
```",4,8,5,3,2,3,3,71,0,0,1,0,0.0,0
200,6,train,Give me the band member of the band of Revenge (Canadian band).,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/associatedMusicalArtist> ?v0 . <http://dbpedia.org/resource/Revenge_(Canadian_band)> <http://dbpedia.org/ontology/associatedMusicalArtist> ?v0 . },"```sparql
SELECT ?member WHERE {
  ?band rdfs:label ""Revenge (Canadian band)""@en .
  ?band dbo:bandMember ?member .
}
```",2,2,3,2,1,2,2,9,0,1,9,0.0,0.0,0
232,5,train,"Give me the artistic movement of the person born, that is a writer, on 1849-09-14.","SELECT ?result WHERE { ?v0 <http://dbpedia.org/ontology/movement> ?result . ?v0 <http://dbpedia.org/ontology/birthDate> ""1849-09-14""^^<http://www.w3.org/2001/XMLSchema#date> . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Writer>. }","```sparql
SELECT ?writer ?artisticMovement WHERE {
  ?writer dbo:birthDate ""1849-09-14""^^xsd:date .
  ?writer rdf:type dbo:Writer .
  OPTIONAL { 
    ?writer dbo:associatedMusicalArtist ?artisticMovement .
  }
}
```",2,3,3,2,1,2,2,9,0,1,1,0.0,0.0,0
236,11,train,"Give me the party member of Democratic-Republican Party and party member of the administration, that is an organisation, of John Adams.",SELECT ?result WHERE { ?v2 <http://dbpedia.org/property/leader> <http://dbpedia.org/resource/John_Adams> . ?result <http://dbpedia.org/ontology/party> ?v2 . ?result <http://dbpedia.org/ontology/party> <http://dbpedia.org/resource/Democratic-Republican_Party> . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. },"```sparql
SELECT ?democraticRepublicanMember ?federalistMember WHERE {
  # Identify John Adams
  ?johnAdams rdfs:label ""John Adams""@en .
  
  # Find members of the Democratic-Republican Party
  ?party rdf:type dbo:PoliticalParty ;
         dbo:member ?democraticRepublicanMember .
  FILTER regex(str(?party), ""Democratic-Republican"", ""i"")
  
  # Identify the administration party of John Adams (Federalist Party)
  ?administration rdf:type dbo:Organization ;
                  dbo:member ?federalistMember ;
                  dbo:leader ?johnAdams .
  FILTER regex(str(?administration), ""Federalist Party"", ""i"")
}
```",3,4,4,2,2,3,2,20,0,0,18,0,0.0,0
507,18,train,"Give me the director of Entertaining Mr Sloane (film) and professional in Film director, television director and spouse of Anne V. Coates.","SELECT ?result WHERE { <http://dbpedia.org/resource/Entertaining_Mr_Sloane_(film)> <http://dbpedia.org/ontology/director> ?result . ?result <http://dbpedia.org/ontology/spouse> <http://dbpedia.org/resource/Anne_V._Coates> . ?result <http://dbpedia.org/property/occupation> ""Film director, television director""@en . }","```sparql
SELECT ?director WHERE {
  # Find the director of ""Entertaining Mr Sloane""
  ?film dbo:director ?director .
  ?film rdfs:label ""Entertaining Mr Sloane""@en .

  # Ensure the director is a professional in film and television directing
  ?director dbo:occupation ?occupation1 .
  ?director dbo:occupation ?occupation2 .
  FILTER (
    regex(str(?occupation1), ""Film director"", ""i"") &&
    regex(str(?occupation2), ""Television director"", ""i"")
  )

  # Confirm the director is spouse of Anne V. Coates
  OPTIONAL {
    ?director dbo:spouse ?spouse .
    ?spouse rdfs:label ""Anne V. Coates""@en .
  }
}
```",3,3,4,1,3,3,3,71,0,0,1,0,0.0,0
129,9,train,Give me the associated musical artist of EarthGang and associated musical artist of Saba (rapper).,SELECT ?result WHERE { <http://dbpedia.org/resource/EarthGang> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . <http://dbpedia.org/resource/Saba_(rapper)> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . },"```sparql
SELECT ?associatedArtist WHERE {
  # Find associated musical artist of EarthGang
  OPTIONAL {
    ?earthGang dbo:member ?artist .
    ?earthGang rdfs:label ""EarthGang""@en .
    ?artist rdf:type dbo:MusicalArtist .
    BIND(?artist AS ?associatedArtist)
  }
  
  UNION
  
  # Find associated musical artist of Saba (rapper)
  OPTIONAL {
    ?saba dbo:member ?artist .
    ?saba rdfs:label ""Saba (rapper)""@en .
    ?artist rdf:type dbo:MusicalArtist .
    BIND(?artist AS ?associatedArtist)
  }
}
```",2,2,3,1,2,2,3,28,0,0,1,0,0.0,0
573,14,train,"Give me the parent of the author, that is a politician and an office holder, of Exchequer Standards.",SELECT ?result WHERE { <http://dbpedia.org/resource/Exchequer_Standards> <http://dbpedia.org/property/author> ?v1 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v1 <http://dbpedia.org/ontology/parent> ?result . },"```sparql
SELECT ?parent WHERE {
  # Find the author of ""Exchequer Standards""
  ?work dbo:author ?author .
  ?work rdfs:label ""Exchequer Standards""@en .

  # Identify the parent of this author
  ?author dbo:parent ?parent .

  # Ensure the parent is a politician and an office holder
  ?parent rdf:type dbo:Politician .
  ?parent rdf:type dbo:OfficeHolder .
}
```",2,4,3,2,1,3,3,71,0,0,2,0,0.0,0
773,2,train,Give me the parent of Charles the Fat.,SELECT ?result WHERE { <http://dbpedia.org/resource/Charles_the_Fat> <http://dbpedia.org/ontology/parent> ?result . },"```sparql
SELECT ?parent WHERE {
  ?charles dbo:parent ?parent .
  ?charles rdfs:label ""Charles the Fat""@en .
}
```",1,1,2,1,1,3,3,71,2,0,0,1.0,1.0,1.0
41,7,train,Give me the party of Enda Kenny and party of Mark Durkan.,SELECT ?result WHERE { <http://dbpedia.org/resource/Enda_Kenny> <http://dbpedia.org/ontology/party> ?result . <http://dbpedia.org/resource/Mark_Durkan> <http://dbpedia.org/ontology/party> ?result . },"```sparql
SELECT ?person ?name ?partyLabel WHERE {
  # Find Enda Kenny and his political party
  VALUES ?person { dbpedia:Enda_Kenny dbpedia:Mark_Durkan }
  
  # Get the label for each person
  ?person rdfs:label ?name .
  
  # Get the political party of each person
  OPTIONAL {
    ?person dbo:party ?party .
    ?party rdfs:label ?partyLabel .
  }
}
```",2,2,3,1,2,2,3,28,0,0,1,0,0.0,0
865,18,train,Give me the father of AK Abdul Momen and native of British Raj and father of Shahla Khatun.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/British_Raj> . <http://dbpedia.org/resource/AK_Abdul_Momen> <http://dbpedia.org/property/father> ?result . <http://dbpedia.org/resource/Shahla_Khatun> <http://dbpedia.org/property/father> ?result . },"```sparql
SELECT ?father WHERE {
  # Find AK Abdul Momen and his father
  ?momen dbo:parent ?father .
  ?momen rdfs:label ""AK Abdul Momen""@en .

  # Ensure this person is native to the British Raj
  OPTIONAL { 
    ?father dbo:nativePlace ?nativePlace .
    FILTER (regex(str(?nativePlace), ""British Raj"", ""i""))
  }

  # Find Shahla Khatun and her father
  OPTIONAL {
    ?khatun dbo:parent ?father .
    ?khatun rdfs:label ""Shahla Khatun""@en .
  }
}
```",3,3,4,1,3,3,3,71,0,0,1,0,0.0,0
582,31,train,"Give me the reference to the residence of the reference, that is a scientist, to Hirotaka Sugawara and player in Kazuaki Nagasawa.","SELECT ?result WHERE { ?v1 <http://dbpedia.org/property/residence> ?v0 . ?v1 <http://xmlns.com/foaf/0.1/name> ""Hirotaka Sugawara""@en . ?result <http://xmlns.com/foaf/0.1/name> ?v0 . <http://dbpedia.org/resource/Kazuaki_Nagasawa> <http://dbpedia.org/ontology/team> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Scientist>. }","```sparql
SELECT ?scientist ?residence WHERE {
  # Find a reference by Hirotaka Sugawara that is a scientist
  ?sugawara dbo:reference ?scientist .
  ?sugawara rdfs:label ""Hirotaka Sugawara""@en .
  ?scientist dbo:occupation dbr:Scientist .

  # Get the residence of this scientist
  ?scientist dbo:residence ?residence .

  # Ensure there's a connection to Kazuaki Nagasawa as a player
  OPTIONAL {
    ?nagasawa dbo:reference ?scientist .
    ?nagasawa rdfs:label ""Kazuaki Nagasawa""@en .
    ?nagasawa dbo:occupation dbr:Soccer_player .
  }
}
```",4,5,5,3,2,3,3,71,0,0,1,0,0.0,0
645,15,train,Give me the force of the commander in Siege of Madrid.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/commander> ?v1 . <http://dbpedia.org/resource/Siege_of_Madrid> <http://dbpedia.org/ontology/commander> ?v1 . },"```sparql
SELECT ?commander ?force WHERE {
  # Find the event ""Siege of Madrid""
  ?event dbo:eventType dbc:Sieges_of_Madrid .
  ?event rdfs:label ""Siege of Madrid""@en .

  # Identify the commander involved in this event
  ?event dbo:commander ?commander .

  # Determine the military force commanded by this person during the siege
  OPTIONAL {
    ?commander dbo:militaryRank ?rank .
    ?commander dbo:commandedForce ?force .
  }
}
```",2,2,3,2,1,3,3,71,0,0,65,0,0.0,0
417,22,train,"Give me the child of the child, that is a royalty, of Frederick Francis III, Grand Duke of Mecklenburg-Schwerin and spouse of Princess Caroline-Mathilde of Denmark.","SELECT ?result WHERE { ?v1 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Frederick_Francis_III,_Grand_Duke_of_Mecklenburg-Schwerin> . ?result <http://dbpedia.org/ontology/spouse> <http://dbpedia.org/resource/Princess_Caroline-Mathilde_of_Denmark> . ?result <http://dbpedia.org/ontology/parent> ?v1 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. }","```sparql
SELECT ?grandchild WHERE {
  # Identify Frederick Francis III
  ?frederick rdfs:label ""Frederick Francis III, Grand Duke of Mecklenburg-Schwerin""@en .
  
  # Find his children who are royalty
  ?frederick dbo:child ?royalChild .
  ?royalChild rdf:type dbo:Monarch .

  # Identify the spouse of this royal child
  ?royalChild dbo:spouse ?spouse .

  # Find the child of this spouse
  ?spouse dbo:child ?grandchild .
}
```",3,4,4,2,2,3,3,71,0,0,1,0,0.0,0
933,5,train,Who is the professional in Musician?,SELECT ?result WHERE { ?result <http://dbpedia.org/property/occupation> <http://dbpedia.org/resource/Musician> . },"```sparql
SELECT ?musician WHERE {
  ?musician dbo:profession dbc:Musicians .
}
```

This query selects entities (`?musician`) where the `dbo:profession` property links them to the DBpedia category for Musicians (`dbc:Musicians`). This should return individuals recognized as professional musicians.",1,1,2,1,1,3,3,71,0,0,1825,0,0.0,0
865,27,train,Give me the father of the child of the father of Abul Maal Abdul Muhith.,SELECT ?result WHERE { ?v0 <http://dbpedia.org/property/father> ?v2 . <http://dbpedia.org/resource/Abul_Maal_Abdul_Muhith> <http://dbpedia.org/property/father> ?v2 . ?v0 <http://dbpedia.org/property/father> ?result . },"```sparql
SELECT ?grandfather WHERE {
  # Step 1: Identify Abul Maal Abdul Muhith
  ?muhith rdfs:label ""Abul Maal Abdul Muhith""@en .

  # Step 2: Find his father
  ?muhith dbo:parent ?father .

  # Step 3: Identify the child of this father
  ?child dbo:parent ?father .

  # Step 4: Find the father of that child (grandfather)
  ?child dbo:parent ?grandfather .
}
```",3,3,4,3,1,3,3,71,0,0,1,0,0.0,0
443,17,train,"Give me the birthplace of the person born, that is a musical artist and an artist, on 1949-11-20 and birthplace of Carl Larsson.","SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. ?v1 <http://dbpedia.org/ontology/birthPlace> ?result . <http://dbpedia.org/resource/Carl_Larsson> <http://dbpedia.org/ontology/birthPlace> ?result . ?v1 <http://dbpedia.org/ontology/birthDate> ""1949-11-20""^^<http://www.w3.org/2001/XMLSchema#date> . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. }","```sparql
# Query for the person born on 1949-11-20 who is both a musical artist and an artist
SELECT ?person ?birthPlace WHERE {
  ?person dbo:birthDate ""1949-11-20""^^xsd:date .
  ?person dbo:occupation ?occupation1 .
  ?person dbo:occupation ?occupation2 .
  FILTER (
    (str(?occupation1) = str(dbo:MusicalArtist)) &&
    (str(?occupation2) = str(dbo:Artist))
  )
  ?person dbo:birthPlace ?birthPlace .
}

UNION

# Query for Carl Larsson's birthplace
SELECT ?larssonBirthPlace WHERE {
  ?carlLarsson rdfs:label ""Carl Larsson""@en .
  ?carlLarsson dbo:birthPlace ?larssonBirthPlace .
}
```",3,5,4,2,2,2,3,28,0,0,1,0,0.0,0
445,29,train,Give me the entity in United Kingdom and entity in England and death place of the awardee of Royal Astronomical Society.,SELECT ?result WHERE { ?v3 <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/Royal_Astronomical_Society> . ?result <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/United_Kingdom> . ?result <http://dbpedia.org/ontology/location> <http://dbpedia.org/resource/England> . ?v3 <http://dbpedia.org/ontology/deathPlace> ?result . },"```sparql
SELECT ?ukEntity ?englandEntity ?awardee ?deathPlace WHERE {
  # Entity in United Kingdom
  ?ukEntity dbo:country dbr:United_Kingdom .
  
  # Entity in England
  ?englandEntity dbo:country dbr:England .

  # Awardee of Royal Astronomical Society and their death place
  ?awardee dbo:awardReceived dbr:Royal_Astronomical_Society .
  OPTIONAL { 
    ?awardee dbo:deathPlace ?deathPlace .
  }
}
```",4,4,5,2,3,3,3,71,0,0,1,0,0.0,0
582,36,train,"Give me the figure known as the nickname of the team, that is an organisation, of Hajime Moriyasu and reference to Japan.","SELECT ?result WHERE { ?result <http://dbpedia.org/property/nickname> ?v1 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?v0 <http://dbpedia.org/property/nickname> ?v1 . ?v0 <http://dbpedia.org/ontology/coach> <http://dbpedia.org/resource/Hajime_Moriyasu> . ?result <http://xmlns.com/foaf/0.1/name> ""Japan""@en . }","```sparql
SELECT ?nickname WHERE {
  # Find Hajime Moriyasu's association with the Japan national football team
  ?team dbo:coach ?moriyasu .
  ?moriyasu rdfs:label ""Hajime Moriyasu""@en .

  # Identify the nickname of the team
  ?team dbo:nickname ?nickname .
  
  # Ensure the team is associated with Japan
  ?team dbo:country ?japan .
  ?japan rdfs:label ""Japan""@en .

  # Reference to the organisation (Japan Football Association)
  OPTIONAL {
    ?organisation dbo:headTeam ?team .
    ?organisation rdfs:label ""Japan Football Association""@en .
  }
}
```",4,5,5,3,2,3,3,71,0,0,1,0,0.0,0
935,12,train,Give me the death place of Abdul Raziq Bugti and headquarter of the office of Sanaullah Khan Zehri.,SELECT ?result WHERE { <http://dbpedia.org/resource/Abdul_Raziq_Bugti> <http://dbpedia.org/ontology/deathPlace> ?result . ?v0 <http://dbpedia.org/ontology/location> ?result . <http://dbpedia.org/resource/Sanaullah_Khan_Zehri> <http://dbpedia.org/property/office> ?v0 . },"```sparql
SELECT ?deathPlace ?headquarters WHERE {
  # Find the death place of Abdul Raziq Bugti
  ?bugti dbo:deathPlace ?deathPlace .
  ?bugti rdfs:label ""Abdul Raziq Bugti""@en .

  # Find the headquarters of the office of Sanaullah Khan Zehri
  ?zehri dbp:headquarters ?headquarters .
  ?zehri rdfs:label ""Sanaullah Khan Zehri""@en .
}
```",3,3,4,2,2,3,2,20,0,0,1,0,0.0,0
232,1,train,"Give me the claim to fame of Katherine ""Kitty"" Marshall.",SELECT ?result WHERE { <http://dbpedia.org/resource/Katherine_%22Kitty%22_Marshall> <http://dbpedia.org/ontology/knownFor> ?result . },"```sparql
SELECT ?award ?occupation ?notableWork WHERE {
  # Find the entity for Katherine ""Kitty"" Marshall
  ?kitty a dbo:Person ;
         rdfs:label ""Katherine \""Kitty\"" Marshall""@en .

  # Retrieve awards associated with her
  OPTIONAL { 
    ?kitty dbo:award ?award .
  }

  # Retrieve her occupation or notable work
  OPTIONAL {
    ?kitty dbo:occupation ?occupation .
  }
  
  OPTIONAL {
    ?kitty dbo:notableWork ?notableWork .
  }
}
```",1,1,2,1,1,2,2,9,0,0,2,0,0.0,0
573,2,train,Give me the parent of John Quincy Adams.,SELECT ?result WHERE { <http://dbpedia.org/resource/John_Quincy_Adams> <http://dbpedia.org/ontology/parent> ?result . },"```sparql
SELECT ?parent WHERE {
  ?johnQuincyAdams dbo:parent ?parent .
  ?johnQuincyAdams rdfs:label ""John Quincy Adams""@en .
}
```",1,1,2,1,1,3,3,71,2,0,0,1.0,1.0,1.0
554,13,train,Give me the leader of the administration of the party member of Independent politician.,SELECT ?result WHERE { ?v1 <http://dbpedia.org/property/leader> ?result . ?v0 <http://dbpedia.org/ontology/party> <http://dbpedia.org/resource/Independent_politician> . ?v1 <http://dbpedia.org/property/leader> ?v0 . },"```sparql
SELECT ?leader WHERE {
  # Identify Barack Obama as an independent politician
  ?obama dbo:politicalAffiliation dbr:Independent (United_States) .
  
  # Find members of his administration
  ?member dbo:memberOf ?administration .
  ?administration dbo:head ?leader .
  ?member dbo:position ""Member""@en ; 
          dbo:employer ?obama .

  # Ensure the leader is distinct and relevant
  FILTER (?leader != ?obama)
}
```",3,3,4,3,1,3,2,20,0,0,1909,0,0.0,0
124,12,train,Give me the military force of Battle of Tamai and military force of Battle of Atbara.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/battle> <http://dbpedia.org/resource/Battle_of_Tamai> . ?result <http://dbpedia.org/ontology/battle> <http://dbpedia.org/resource/Battle_of_Atbara> . },"```sparql
SELECT ?battle ?militaryForce WHERE {
  # Find military forces involved in the Battle of Tamai
  OPTIONAL {
    ?tamai dbo:militaryConflict ?conflict .
    ?conflict dbo:participatingMilitaryUnit ?militaryForce .
    ?tamai rdfs:label ""Battle of Tamai""@en .
  }
  
  # Find military forces involved in the Battle of Atbara
  OPTIONAL {
    ?atbara dbo:militaryConflict ?conflict .
    ?conflict dbo:participatingMilitaryUnit ?militaryForce .
    ?atbara rdfs:label ""Battle of Atbara""@en .
  }
}
```",2,2,3,1,2,3,3,71,0,0,1,0,0.0,0
93,10,train,"Who is the governor of the native, that is a politician, of Seattle?",SELECT ?result WHERE { ?v0 <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Seattle> . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v0 <http://dbpedia.org/property/governor> ?result . },"```sparql
SELECT ?governor WHERE {
  # Find the native people of Seattle
  ?seattle dbo:location ?region .
  ?seattle rdfs:label ""Seattle""@en .
  
  OPTIONAL { 
    ?nativeGroup dbo:nativeOf ?seattle .
    ?politician dbo:nationality ?nativeGroup ;
                a dbo:Politician .
    
    # Find the governor of Washington state
    ?state dbo:governor ?governor ;
           rdfs:label ""Washington (state)""@en .
  }
}
```",2,3,3,2,1,3,2,20,0,0,18,0,0.0,0
47,7,train,"Give me the entity, that is an award, in India.",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/India> . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Award>. },"```sparql
SELECT ?award WHERE {
  ?award rdf:type dbo:Award .
  ?award dbo:country dbr:India .
}
```",1,2,2,1,1,3,3,71,272,0,0,1.0,1.0,1.0
933,13,train,Give me the reference to the birth name of Alan Warner (musician).,SELECT ?result WHERE { <http://dbpedia.org/resource/Alan_Warner_(musician)> <http://dbpedia.org/property/birthName> ?v1 . ?result <http://xmlns.com/foaf/0.1/name> ?v1 . },"```sparql
SELECT ?birthName WHERE {
  ?person rdfs:label ""Alan Warner (musician)""@en .
  ?person dbo:birthName ?birthName .
}
```",2,2,3,2,1,3,3,71,0,0,1,0,0.0,0
791,4,train,"Give me the spouse, that is a royalty, of Emperor Takakura.",SELECT ?result WHERE { ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?result <http://dbpedia.org/ontology/spouse> <http://dbpedia.org/resource/Emperor_Takakura> . },"```sparql
SELECT ?spouse WHERE {
  # Find Emperor Takakura's spouse who is royalty
  ?takakura dbo:spouse ?spouse .
  ?takakura rdfs:label ""Emperor Takakura""@en .
  
  # Ensure the spouse has a royal status
  OPTIONAL { 
    ?spouse dbo:title ?title .
    FILTER (regex(str(?title), ""Princess|Empress"", ""i""))
  }
}
```",1,2,2,1,1,3,3,71,1,0,0,1.0,1.0,1.0
83,2,train,"Who is the member, that is a sports manager, of Kedah FA?",SELECT ?result WHERE { ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsManager>. ?result <http://dbpedia.org/ontology/team> <http://dbpedia.org/resource/Kedah_FA> . },"```sparql
SELECT ?person WHERE {
  # Find the entity for Kedah FA
  ?kedahFA rdfs:label ""Kedah FA""@en .
  
  # Identify members of Kedah FA and their positions
  ?kedahFA dbo:member ?person .
  ?person dbo:position ?position .
  
  # Filter to find the sports manager
  FILTER (regex(str(?position), ""sports manager"", ""i""))
}
```",1,2,2,1,1,3,2,20,0,0,17,0,0.0,0
216,2,train,Give me the team of Ognjen Vukojević.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/coach> <http://dbpedia.org/resource/Ognjen_Vukojević> . },"```sparql
SELECT ?team WHERE {
  ?person rdfs:label ""Ognjen Vukojević""@en .
  ?person dbo:team ?team .
}
```",1,1,2,1,1,3,3,71,1,10,0,0.09090909090909091,1.0,0.16666666666666669
83,14,train,"Give me the party of the governor of the commander, that is a politician, in Central African Republic Civil War.",SELECT ?result WHERE { ?v0 <http://dbpedia.org/ontology/party> ?result . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. <http://dbpedia.org/resource/Central_African_Republic_Civil_War> <http://dbpedia.org/ontology/commander> ?v2 . ?v2 <http://dbpedia.org/property/governor> ?v0 . },"```sparql
SELECT ?party WHERE {
  # Find individuals involved in the Central African Republic Civil War
  ?person dbo:occupation ""Commander""@en .
  ?person dbo:occupation ""Governor""@en .
  ?war dbo:participant ?person .
  ?war rdfs:label ""Central African Republic Civil War""@en .

  # Ensure the person is a politician
  ?person dbo:politicalParty ?party .
  ?person rdf:type dbo:Politician .

  # Return the political party of such individuals
}
```",3,4,4,3,1,3,2,20,0,0,12,0,0.0,0
507,11,train,Give me the spouse of the person born as Anne Voase Coates.,"SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/spouse> ?v0 . ?v0 <http://dbpedia.org/property/birthName> ""Anne Voase Coates""@en . }","```sparql
SELECT ?spouse WHERE {
  # Identify Anne Voase Coates by birth name
  ?anne dbo:birthName ""Anne Voase Coates""@en .
  
  # Find the spouse of Anne Voase Coates
  ?anne dbo:spouse ?spouse .
}
```",2,2,3,2,1,3,3,71,1,0,0,1.0,1.0,1.0
865,22,train,Give me the native of British Raj and father of the child of Abu Ahmad Abdul Hafiz.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/British_Raj> . ?v0 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Abu_Ahmad_Abdul_Hafiz> . ?v0 <http://dbpedia.org/property/father> ?result . },"```sparql
SELECT ?father WHERE {
  # Find Abu Ahmad Abdul Hafiz and his children
  ?abuAhmad dbo:child ?child .
  ?abuAhmad rdfs:label ""Abu Ahmad Abdul Hafiz""@en .

  # Identify the father of this child
  ?child dbo:parent ?father .

  # Check if the father is native to British Raj
  OPTIONAL {
    ?father dbo:nativePlace dbr:British_Raj .
  }
}
```",3,3,4,2,2,3,3,71,0,0,1,0,0.0,0
976,39,train,Give me the office of the person born as the birth name of Naci Bostancı and office of Meral Akşener.,SELECT ?result WHERE { <http://dbpedia.org/resource/Naci_Bostancı> <http://dbpedia.org/property/birthName> ?v2 . ?v0 <http://dbpedia.org/property/birthName> ?v2 . ?v0 <http://dbpedia.org/property/office> ?result . <http://dbpedia.org/resource/Meral_Akşener> <http://dbpedia.org/property/office> ?result . },"```sparql
SELECT ?naciBirthName ?naciOffice ?meralOffice WHERE {
  # Find Naci Bostancı's birth name and office
  ?naci dbo:birthName ?naciBirthName .
  ?naci rdfs:label ""Naci Bostancı""@en .
  
  OPTIONAL { 
    ?officeHolder dbo:agent ?naci ;
                  dbo:title ?naciOffice .
  }
  
  # Find Meral Akşener's office
  ?meral dbo:officeHolder ?meralOffice .
  ?meral rdfs:label ""Meral Akşener""@en .
}
```",4,4,5,3,2,3,3,71,0,0,1,0,0.0,0
976,37,train,"Give me the office of Naci Bostancı and office of the mayor, that is a politician and an office holder and Turkish, of the reference, that is an organisation and a political party and Turkish, to Millet İttifakı.","SELECT ?result WHERE { ?v1 <http://dbpedia.org/property/leader> ?v2 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v2 <http://dbpedia.org/ontology/nationality> <http://dbpedia.org/resource/Turkey>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?v2 <http://dbpedia.org/property/office> ?result . ?v1 <http://xmlns.com/foaf/0.1/name> ""Millet İttifakı""@en . <http://dbpedia.org/resource/Naci_Bostancı> <http://dbpedia.org/property/office> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/PoliticalParty>. ?v1 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Turkey>. }","```sparql
SELECT ?naciOffice ?mayorOffice WHERE {
  # Find Naci Bostancı's office
  ?naci dbo:occupation ?office .
  ?naci rdfs:label ""Naci Bostancı""@en .

  # Identify Millet İttifakı as an organization and political party
  ?milatitfakı rdf:type dbpedia-owl:Organization ;
              rdf:type dbpedia-owl:PoliticalParty ;
              dbo:country dbr:Turkey .
  ?milatitfakı rdfs:label ""Millet İttifakı""@en .

  # Find a mayor who is a politician and office holder in Turkey
  OPTIONAL {
    ?mayor dbo:occupation dbpedia-turkik:Mayor ;
           dbo:country dbr:Turkey .
    ?mayor dbo:memberOf ?milatitfakı .
    FILTER (regex(str(?mayor), ""politician"", ""i"") && regex(str(?mayor), ""office holder"", ""i""))
  }

  # Retrieve the office of the mayor
  OPTIONAL {
    ?mayor dbo:occupation ?mayorOffice .
  }
}
```",4,10,5,3,2,3,3,71,0,0,1,0,0.0,0
645,37,train,"Give me the military force of the force, that is an event and a military conflict and a societal event, of the native, that is a president and a politician, of Restoration (Spain) and leader of Ministry of the Army (Spain).",SELECT ?result WHERE { ?v3 <http://dbpedia.org/ontology/commander> ?v0 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/President>. <http://dbpedia.org/resource/Ministry_of_the_Army_(Spain)> <http://dbpedia.org/ontology/leader> ?result . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?v0 <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Restoration_(Spain)> . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?result <http://dbpedia.org/ontology/battle> ?v3 . },"```sparql
SELECT ?militaryForce WHERE {
  # Find the native who is a president, politician, and leader of the Ministry of the Army during Restoration in Spain
  ?person dbo:nationality dbr:Spain ;
          dbo:occupation dbr:Politician ;
          dbo:officeHolderOf dbr:Ministry_of_the_Army_(Spain) ;
          dbo:politicalParty dbr:Restoration_(Spain) .

  # Find the military force that is an event, military conflict, and societal event
  ?militaryForce a dbo:MilitaryConflict ;
                 dbo:eventRelatedTo ?person .
}
```",4,9,5,3,2,3,3,71,0,0,1,0,0.0,0
216,17,train,"Give me the person born, that is a sports manager and a soccer manager and a soccer player, on the death of Pavel Vezhinov.",SELECT ?result WHERE { ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerPlayer>. ?result <http://dbpedia.org/ontology/birthDate> ?v1 . <http://dbpedia.org/resource/Pavel_Vezhinov> <http://dbpedia.org/ontology/deathDate> ?v1 . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsManager>. ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerManager>. },"```sparql
SELECT ?person WHERE {
  # Get the death date of Pavel Vezhinov
  ?vezhinov dbo:deathDate ?deathDate .
  ?vezhinov rdfs:label ""Pavel Vezhinov""@en .

  # Find individuals who are sports managers, soccer managers, and soccer players
  ?person dbo:occupation/sportsManager ?isSportsManager ;
          dbo:occupation/soccerManager ?isSoccerManager ;
          dbo:occupation/soccerPlayer ?isSoccerPlayer .
  
  # Match the birth date of these individuals to Pavel Vezhinov's death date
  ?person dbo:birthDate ?birthDate .
  FILTER (?birthDate = ?deathDate)
}
```",2,5,3,2,1,3,3,71,0,0,1,0,0.0,0
353,6,train,"Give me the entity in the country of Moskovsky City District, Nizhny Novgorod.","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/country> ?v1 . <http://dbpedia.org/resource/Moskovsky_City_District,_Nizhny_Novgorod> <http://dbpedia.org/ontology/country> ?v1 . }","```sparql
SELECT ?entity ?label WHERE {
  ?entity dbo:location ?location .
  ?location rdfs:label ""Moskovsky City District, Nizhny Novgorod""@en .
  SERVICE wikibase:label { bd:serviceParam wikibase:language ""[AUTO_LANGUAGE],en"". }
}
```",2,2,3,2,1,2,2,9,0,0,29927,0,0.0,0
917,3,train,Who is the mayor of Hawaiian Kingdom?,SELECT ?result WHERE { <http://dbpedia.org/resource/Hawaiian_Kingdom> <http://dbpedia.org/property/leader> ?result . },"```sparql
SELECT ?mayor WHERE {
  ?city rdfs:label ""Honolulu""@en .
  ?city dbo:mayor ?mayor .
}
```",1,1,2,1,1,3,3,71,0,0,8,0,0.0,0
582,18,train,Give me the player in Kazuaki Nagasawa and figure known as --10-19 and reference to Japan.,"SELECT ?result WHERE { <http://dbpedia.org/resource/Kazuaki_Nagasawa> <http://dbpedia.org/ontology/team> ?result . ?result <http://dbpedia.org/property/nickname> ""--10-19""^^<http://www.w3.org/2001/XMLSchema#gMonthDay> . ?result <http://xmlns.com/foaf/0.1/name> ""Japan""@en . }","```sparql
SELECT ?player ?figure WHERE {
  # Find Kazuaki Nagasawa
  ?nagasawa dbo:birthPlace dbr:Japan ;
            rdfs:label ""Kazuaki Nagasawa""@en .
  
  # Attempt to find a connection with the figure --10-19
  OPTIONAL {
    ?relatedEntity rdfs:label ?figure .
    FILTER (regex(str(?figure), ""--10-19"", ""i""))
    
    # Check for any known association between Nagasawa and this figure
    ?nagasawa dbo:associatedWith ?relatedEntity .
  }
}
```",3,3,4,1,3,3,3,71,0,0,1,0,0.0,0
892,33,train,Give me the landmark at elevation of the award of the member of E-girls and entity in Italy.,SELECT ?result WHERE { ?v0 <http://dbpedia.org/property/awards> ?v2 . <http://dbpedia.org/resource/E-girls> <http://dbpedia.org/ontology/bandMember> ?v0 . ?result <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Italy> . ?result <http://dbpedia.org/ontology/elevation> ?v2 . },"```sparql
SELECT ?member ?award ?landmark ?italyEntity WHERE {
  # Find a member of E-girls
  ?member dbo:memberOf dbr:E-girls .
  
  # Find an award received by the member
  OPTIONAL { 
    ?member dbo:awardReceived ?award .
  }
  
  # Find a landmark at the elevation of the award (assuming elevation is available)
  OPTIONAL {
    ?award dbo:elevation ?elevation .
    ?landmark dbo:elevation ?elevation ;
              dbo:wikiPageRedirects ?redirect .
    FILTER (?redirect != """")
  }
  
  # Identify an entity in Italy
  ?italyEntity dbo:country dbr:Italy .
}
```",4,4,5,3,2,3,3,71,0,0,11,0,0.0,0
826,15,train,Who is the child of the father of Anna Magdalena Appel?,SELECT ?result WHERE { <http://dbpedia.org/resource/Anna_Magdalena_Appel> <http://dbpedia.org/property/father> ?v1 . ?result <http://dbpedia.org/property/father> ?v1 . },"```sparql
SELECT ?child WHERE {
  # Find Anna Magdalena Appel and her father
  ?annaMagdalenaAppel dbo:parent ?father .
  ?annaMagdalenaAppel rdfs:label ""Anna Magdalena Bach""@en .

  # Find the children of Anna Magdalena Appel's father
  ?father dbo:child ?child .
}
```",2,2,3,2,1,3,3,71,0,0,1,0,0.0,0
987,13,train,Give me the birth place of the actor of All for Free.,SELECT ?result WHERE { <http://dbpedia.org/resource/All_for_Free> <http://dbpedia.org/property/starring> ?v1 . ?v1 <http://dbpedia.org/ontology/birthPlace> ?result . },"```sparql
SELECT ?actor ?birthPlace WHERE {
  # Find the movie ""All for Free""
  ?movie dbo:title ""All for Free""@en .
  
  # Find actors associated with this movie
  ?movie dbo:starring ?actor .
  
  # Retrieve birthplace of each actor
  ?actor dbo:birthPlace ?birthPlace .
}
```",2,2,3,2,1,3,3,71,0,0,14,0,0.0,0
5,7,train,"Give me the birthplace of the person born, that is a politician, as .","SELECT ?result WHERE { ?v0 <http://dbpedia.org/property/birthName> """"@en . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v0 <http://dbpedia.org/ontology/birthPlace> ?result . }","```sparql
SELECT ?person ?birthplace WHERE {
  # Find persons with occupation politician
  ?person dbo:occupation dbc:Politicians .
  
  # Get the birthplace of these politicians
  ?person dbo:birthPlace ?birthplace .
}
```",2,3,3,2,1,3,2,20,0,0,222,0,0.0,0
274,17,train,Give me the associated musical artist of Cecil Taylor and professional in the designer of Tetris Classic.,SELECT ?result WHERE { ?result <http://dbpedia.org/property/occupation> ?v1 . <http://dbpedia.org/resource/Cecil_Taylor> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . <http://dbpedia.org/resource/Tetris_Classic> <http://dbpedia.org/property/designer> ?v1 . },"```sparql
SELECT ?associatedArtist ?designerRole WHERE {
  # Find Cecil Taylor and an associated musical artist
  ?cecil rdfs:label ""Cecil Taylor""@en .
  ?cecil dbo:collaborator ?associatedArtist .

  # Find Alexey Pajitnov as the designer of Tetris Classic
  ?tetris dbo:designer ?alexey .
  ?tetris rdfs:label ""Tetris (video game)""@en .
  ?alexey rdfs:label ""Alexey Pajitnov""@en .
  
  # Get Alexey Pajitnov's professional role
  ?alexey dbo:occupation ?designerRole .
}
```",3,3,4,2,2,2,3,28,0,0,1,0,0.0,0
888,7,train,"Give me the commander in the force, that is a societal event and an event, of Serhiy Kotenko.",SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/commander> ?result . ?v1 <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Serhiy_Kotenko> . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. },"```sparql
SELECT ?commander WHERE {
  # Find Serhiy Kotenko and his commander in force
  ?kotenko dbo:commanderInForce ?commander .
  ?kotenko rdfs:label ""Serhiy Kotenko""@en .

  # Ensure the commander is associated with an event
  ?event dbo:agent ?commander ;
         a dbo:Event .

  # Ensure the commander is also associated with a societal event
  ?societalEvent dbo:agent ?commander ;
                 a dbo:SocietalEvent .
}
```",2,4,3,2,1,3,2,20,0,0,13,0,0.0,0
865,8,train,Who is the child of Abu Ahmad Abdul Hafiz?,SELECT ?result WHERE { ?result <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Abu_Ahmad_Abdul_Hafiz> . },"```sparql
SELECT ?child WHERE {
  ?child dbo:parent dbr:Abu_Ahmad_Abdul_Hafiz .
}
```",1,1,2,1,1,3,3,71,0,0,3,0,0.0,0
83,0,train,Give me the player in Greg Boehme.,SELECT ?result WHERE { <http://dbpedia.org/resource/Greg_Boehme> <http://dbpedia.org/ontology/team> ?result . },"```sparql
SELECT ?player WHERE {
  ?boehme dbo:team ?player .
  ?boehme rdfs:label ""Greg Boehme""@en .
}
```",1,1,2,1,1,2,2,9,2,0,0,1.0,1.0,1.0
373,6,train,Give me the professional in the profession of Beto Guedes.,SELECT ?result WHERE { ?result <http://dbpedia.org/property/occupation> ?v1 . <http://dbpedia.org/resource/Beto_Guedes> <http://dbpedia.org/property/occupation> ?v1 . },"```sparql
SELECT ?professional WHERE {
  # Get Beto Guedes' profession
  dbp:Beto_Guedes dbo:occupation ?profession .
  
  # Find other professionals in the same occupation
  ?professional dbo:occupation ?sameProfession .
  
  FILTER (?sameProfession = ?profession)
  FILTER (!str(?professional) = ""dbp:Beto_Guedes"")
}
```",2,2,3,2,1,2,2,9,0,0,1543,0,0.0,0
124,34,train,"Give me the commander in the war, that is a societal event and a military conflict, of the reference, that is Australian and an organisation and a military unit, to 'A' Battery, Royal Australian Artillery and military force of Battle of Atbara.","SELECT ?result WHERE { ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryUnit>. ?v2 <http://xmlns.com/foaf/0.1/name> ""'A' Battery, Royal Australian Artillery""@en . ?result <http://dbpedia.org/ontology/battle> <http://dbpedia.org/resource/Battle_of_Atbara> . ?v2 <http://dbpedia.org/ontology/battle> ?v1 . ?v2 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Australia>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?v1 <http://dbpedia.org/ontology/commander> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. }","```sparql
SELECT ?commander WHERE {
  # Define 'A' Battery and its involvement in the Battle of Atbara
  ?battery dbo:partOfMilitaryUnit ?unit .
  ?battery rdfs:label ""A Battery, Royal Australian Artillery""@en .

  # Identify the Battle of Atbara as a military conflict
  ?battle dbo:participatingMilitaryUnit ?unit .
  ?battle rdfs:label ""Battle of Atbara""@en .

  # Find the commander associated with the Battle of Atbara
  ?battle dbo:militaryCommander ?commander .
}
```",4,9,5,3,2,3,3,71,0,0,1,0,0.0,0
129,12,train,Give me the associated musical artist of Saba (rapper) and associated musical artist of EarthGang and professional in .,"SELECT ?result WHERE { <http://dbpedia.org/resource/Saba_(rapper)> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?result <http://dbpedia.org/property/occupation> """"@en . <http://dbpedia.org/resource/EarthGang> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . }","```sparql
SELECT ?sabaArtist ?earthGangArtist WHERE {
  # Find associated artists of Saba (rapper)
  ?saba dbo:associatedMusicalArtist ?sabaArtist .
  ?saba rdfs:label ""Saba (rapper)""@en .

  # Find associated artists of EarthGang
  ?earthGang dbo:associatedMusicalArtist ?earthGangArtist .
  ?earthGang rdfs:label ""EarthGang""@en .

  # Check for common professional association between the two sets of artists
  OPTIONAL {
    ?sabaArtist dbo:professionalIn ?commonProfession .
    ?earthGangArtist dbo:professionalIn ?commonProfession .
  }
}
```",3,3,4,1,3,2,3,28,1,10,0,0.09090909090909091,1.0,0.16666666666666669
341,0,train,Give me the band member of Beyoncé.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/associatedMusicalArtist> <http://dbpedia.org/resource/Beyoncé> . },"```sparql
SELECT ?member WHERE {
  # Find Destiny's Child and its members
  ?band dbo:member ?member .
  ?band rdfs:label ""Destiny's Child""@en .

  # Ensure Beyoncé is a member of the same band
  ?band dbo:member dbr:Beyoncé_Knowles .
}
```",1,1,2,1,1,2,2,9,0,0,50,0,0.0,0
459,2,train,Give me the person born as John Kevin Stitt.,"SELECT ?result WHERE { ?result <http://dbpedia.org/property/birthName> ""John Kevin Stitt""@en . }","```sparql
SELECT ?person ?label WHERE {
  ?person dbo:birthName ""John Kevin Stitt""@en .
  OPTIONAL { ?person rdfs:label ?label . FILTER(LANG(?label) = 'en') }
}
```",1,1,2,1,1,2,3,28,1,1,0,0.5,1.0,0.6666666666666666
5,6,train,Give me the entity in Canada and birthplace of Gerald Regan.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Canada> . <http://dbpedia.org/resource/Gerald_Regan> <http://dbpedia.org/ontology/birthPlace> ?result . },"```sparql
SELECT ?birthPlace ?entityInCanada WHERE {
  # Identify Gerald Regan
  ?regan rdfs:label ""Gerald Regan""@en .
  
  # Retrieve birthplace
  ?regan dbo:birthPlace ?birthPlace .

  # Find entity in Canada (e.g., a position held)
  OPTIONAL { 
    ?regan dbo:positionHeld ?entityInCanada .
    FILTER regex(str(?entityInCanada), ""Canada"", ""i"")
  }
}
```",2,2,3,1,2,3,2,20,1,0,0,1.0,1.0,1.0
459,16,train,Give me the person born as the birth name of Kevin Stitt and governor of Oklahoma.,SELECT ?result WHERE { <http://dbpedia.org/resource/Oklahoma> <http://dbpedia.org/property/governor> ?result . ?result <http://dbpedia.org/property/birthName> ?v2 . <http://dbpedia.org/resource/Kevin_Stitt> <http://dbpedia.org/property/birthName> ?v2 . },"```sparql
SELECT ?person WHERE {
  # Find the person whose birth name is Kevin Stitt
  ?person dbo:birthName ""Kevin Stitt""@en .
  
  # Ensure this person is the governor of Oklahoma
  ?person dbo:officeHolderOf dbr:Governor_of_Oklahoma .
}
```",3,3,4,2,2,2,3,28,0,0,1,0,0.0,0
41,8,train,"Give me the party of the leader, that is a politician and an office holder, of 2005 Castlereagh Borough Council election.",SELECT ?result WHERE { <http://dbpedia.org/resource/2005_Castlereagh_Borough_Council_election> <http://dbpedia.org/property/leader> ?v1 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v1 <http://dbpedia.org/ontology/party> ?result . },"```sparql
SELECT ?party WHERE {
  # Identify the Castlereagh Borough Council election in 2005
  ?election dbo:isElectionFor ?council .
  ?council rdfs:label ""Castlereagh Borough Council""@en .
  ?election dbo:electionDate ?date .
  FILTER (YEAR(?date) = 2005)

  # Find the leader of the council in that election
  ?leader dbo:officeHolderOf ?council .
  ?leader dbo:positionTitle ""Leader""@en .

  # Ensure the leader is a politician and an office holder
  ?leader rdf:type dbpedia-owl:Politician .
  ?leader rdf:type dbpedia-owl:OfficeHolder .

  # Retrieve the political party of the leader
  ?leader dbo:partyAffiliation ?party .
}
```",2,4,3,2,1,2,3,28,0,0,6,0,0.0,0
645,39,train,"Give me the leader of the office, that is a government agency and an organisation, of the native of Restoration (Spain) and military force of Spanish Civil War.",SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/GovernmentAgency>. ?result <http://dbpedia.org/ontology/battle> <http://dbpedia.org/resource/Spanish_Civil_War> . ?v0 <http://dbpedia.org/property/office> ?v1 . ?v0 <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Restoration_(Spain)> . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?v1 <http://dbpedia.org/ontology/leader> ?result . },"```sparql
SELECT ?leader WHERE {
  # Find a person from the Restoration period in Spain involved in the Spanish Civil War
  ?person dbo:nationality dbr:Spain ;
          dbo:birthPlace ?place ;
          dbo:occupation ""Military""@en .
  
  # Ensure they were active during the Restoration and Spanish Civil War periods
  FILTER (CONTAINS(LCASE(str(?person)), ""restoration"") && CONTAINS(LCASE(str(?person)), ""spanish civil war""))

  # Find a government agency or organization associated with this person
  ?office dbo:leader ?leader ;
          rdf:type dbr:Government_agency OR rdf:type dbr:Organization .
  
  # Link the office to the individual
  ?office dbo:member ?person .

}
```",4,6,5,3,2,3,3,71,0,0,2,0,0.0,0
36,10,train,Give me the person born in the birth year of Deanne Bray.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/birthYear> ?v1 . <http://dbpedia.org/resource/Deanne_Bray> <http://dbpedia.org/ontology/birthYear> ?v1 . },"```sparql
SELECT ?person WHERE {
  # Find Deanne Bray and her birth year
  ?deanneBray dbo:birthYear ?birthYear .
  ?deanneBray rdfs:label ""Deanne Bray""@en .

  # Find another person born in the same year as Deanne Bray
  ?person dbo:birthYear ?birthYear .
  FILTER (?person != ?deanneBray)
}
```",2,2,3,2,1,2,3,28,2610,0,1,1.0,0.9996170049789352,0.9998084658111472
926,34,train,Give me the child of Ahmed III and father of the father of the spouse of Neşerek Kadın.,SELECT ?result WHERE { ?v1 <http://dbpedia.org/property/father> ?result . ?v3 <http://dbpedia.org/property/father> ?v1 . <http://dbpedia.org/resource/Neşerek_Kadın> <http://dbpedia.org/ontology/spouse> ?v3 . <http://dbpedia.org/resource/Ahmed_III> <http://dbpedia.org/ontology/child> ?result . },"```sparql
SELECT ?child WHERE {
  # Step 1: Identify a child of Ahmed III
  ?ahmedIII dbo:spouse ?mother .
  ?ahmedIII rdfs:label ""Ahmed III""@en .
  ?child dbo:parent ?ahmedIII .

  # Step 2: Identify Neşerek Kadın and her spouse
  ?neserekKadin dbo:spouse ?spouse .
  ?neserekKadin rdfs:label ""Neşerek Kadın""@en .

  # Step 3: Find the father of this spouse
  ?spouse dbo:parent ?fatherOfSpouse .

  # Step 4: Determine the grandfather (father of the father)
  ?fatherOfSpouse dbo:parent ?grandfather .

  # Step 5: Match with Ahmed III's child
  FILTER (?child = ?grandfather)
}
```",4,4,5,3,2,3,3,71,0,0,1,0,0.0,0
573,9,train,"Give me the person decedent at Massachusetts and person decedent at Quincy, Massachusetts.","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/deathPlace> <http://dbpedia.org/resource/Quincy,_Massachusetts> . ?result <http://dbpedia.org/ontology/deathPlace> <http://dbpedia.org/resource/Massachusetts> . }","```sparql
SELECT DISTINCT ?person WHERE {
  # Find decedents in Massachusetts
  ?person dbo:deathPlace ?massDeath .
  ?massDeath rdfs:label ""Massachusetts""@en .

  # Find decedents in Quincy, Massachusetts
  ?person dbo:deathPlace ?quincyDeath .
  ?quincyDeath rdfs:label ""Quincy, Massachusetts""@en .
}
```",2,2,3,1,2,3,3,71,4,0,0,1.0,1.0,1.0
442,6,train,Give me the resting place of the actor of This Side of Heaven.,SELECT ?result WHERE { ?v0 <http://dbpedia.org/ontology/restingPlace> ?result . <http://dbpedia.org/resource/This_Side_of_Heaven> <http://dbpedia.org/ontology/starring> ?v0 . },"```sparql
SELECT ?restingPlace WHERE {
  # Find the actor Shiloh Fernandez
  ?actor dbo:birthName ""Shiloh Fernandez""@en .
  
  # Link the actor to a film role in ""This Side of Heaven""
  ?film dbo:starring ?actor .
  ?film rdfs:label ""This Side of Heaven""@en .

  # Find the resting place (burial site) of Shiloh Fernandez
  OPTIONAL {
    ?actor dbo:deathPlace ?restingPlace .
  }
}
```",2,2,3,2,1,2,2,9,0,0,3,0,0.0,0
456,14,train,"Give me the band of the band, that is a musical artist, of Dean Brody.",SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . <http://dbpedia.org/resource/Dean_Brody> <http://dbpedia.org/ontology/associatedMusicalArtist> ?v1 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. },"```sparql
SELECT ?bandOfTheBand WHERE {
  # Find Dean Brody and his associated band
  ?deanBrody dbo:musicalArtist ""Dean Brody""@en .
  ?deanBrody dbo:associatedBand ?band .

  # Check if the band has an association with another band
  OPTIONAL { 
    ?band dbo:associatedBand ?bandOfTheBand .
  }
}
```",2,3,3,2,1,3,3,71,0,0,3,0,0.0,0
417,8,train,"Who is the child, that is a royalty, of Frederick Francis III, Grand Duke of Mecklenburg-Schwerin?","SELECT ?result WHERE { ?result <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Frederick_Francis_III,_Grand_Duke_of_Mecklenburg-Schwerin> . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. }","```sparql
SELECT ?child WHERE {
  # Find Frederick Francis III and his children
  ?frederick dbo:child ?child .
  ?frederick rdfs:label ""Frederick Francis III, Grand Duke of Mecklenburg-Schwerin""@en .

  # Ensure the child is royalty by checking their label or title
  OPTIONAL {
    ?child rdfs:label ?label .
    FILTER (regex(str(?label), ""Prince|Princess"", ""i""))
  }
}
```",1,2,2,1,1,3,3,71,3,0,0,1.0,1.0,1.0
216,28,train,Give me the player in Mario Ivanković and team of Ognjen Vukojević and player in the coach of Croatia national under-21 football team.,SELECT ?result WHERE { <http://dbpedia.org/resource/Croatia_national_under-21_football_team> <http://dbpedia.org/ontology/coach> ?v1 . ?result <http://dbpedia.org/ontology/coach> <http://dbpedia.org/resource/Ognjen_Vukojević> . <http://dbpedia.org/resource/Mario_Ivanković> <http://dbpedia.org/ontology/team> ?result . ?v1 <http://dbpedia.org/ontology/team> ?result . },"```sparql
SELECT ?marioTeam ?ognjenTeam ?player WHERE {
  # Find the team Mario Ivanković played for
  ?mario dbo:team ?marioTeam .
  ?mario rdfs:label ""Mario Ivanković""@en .

  # Find the team Ognjen Vukojević was associated with
  OPTIONAL { 
    ?ognjen dbo:team ?ognjenTeam .
    ?ognjen rdfs:label ""Ognjen Vukojević""@en .
  }

  # Find the coach of Croatia national under-21 football team
  ?croatiaUnder21 dbo:coach ?coach .

  # Find a player from Ognjen Vukojević's team who is also associated with the coach
  OPTIONAL {
    ?player dbo:team ?ognjenTeam .
    ?player dbo:coachedBy ?coach .
  }
}
```",4,4,5,2,3,3,3,71,1,16,0,0.058823529411764705,1.0,0.1111111111111111
353,2,train,"Give me the awardee of Medal of the Order ""For Merit to the Fatherland"".",SELECT ?result WHERE { ?result <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/Medal_of_the_Order_%22For_Merit_to_the_Fatherland%22> . },"```sparql
SELECT ?awardee WHERE {
  ?medal rdf:type dbo:Award .
  ?medal rdfs:label ""Medal of the Order \""For Merit to the Fatherland\""""@en .
  
  # Assuming there is a property like dbo:recipient or similar for awards
  OPTIONAL { 
    ?medal dbo:recipient ?awardee .
  }
}
```",1,1,2,1,1,2,2,9,0,0,12,0,0.0,0
453,2,train,"Give me the birth place, that is a country, of William Denning.",SELECT ?result WHERE { ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. <http://dbpedia.org/resource/William_Denning> <http://dbpedia.org/ontology/birthPlace> ?result . },"```sparql
SELECT ?country WHERE {
  ?denning dbo:birthPlace ?birthPlace .
  ?denning rdfs:label ""William Denning""@en .
  
  # Ensure birth place is a country
  ?birthPlace rdf:type dbo:Country .
  
  BIND(?birthPlace AS ?country)
}
```",1,2,2,1,1,2,2,9,1,0,0,1.0,1.0,1.0
382,2,train,Give me the player in Lukas Kübler.,SELECT ?result WHERE { <http://dbpedia.org/resource/Lukas_Kübler> <http://dbpedia.org/ontology/team> ?result . },"```sparql
SELECT ?position WHERE {
  ?player rdfs:label ""Lukas Kübler""@en .
  ?player dbo:sport dbr:Fútbol .
  ?player dbo:position ?position .
}
```",1,1,2,1,1,3,2,20,0,0,6,0,0.0,0
865,35,train,"Give me the father of the child of Abu Ahmad Abdul Hafiz and native of the residence, that is a country, of Ram Jaipal Singh Yadav.",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/birthPlace> ?v0 . ?v2 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Abu_Ahmad_Abdul_Hafiz> . <http://dbpedia.org/resource/Ram_Jaipal_Singh_Yadav> <http://dbpedia.org/property/residence> ?v0 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. ?v2 <http://dbpedia.org/property/father> ?result . },"```sparql
SELECT ?father WHERE {
  # Step 1: Find the child of Abu Ahmad Abdul Hafiz
  ?child dbo:parent ?abuAhmad .
  ?abuAhmad rdfs:label ""Abu Ahmad Abdul Hafiz""@en .

  # Step 2: Identify the residence (country) of Ram Jaipal Singh Yadav
  ?ramJaipal dbo:nativeCountry ?country .
  ?ramJaipal rdfs:label ""Ram Jaipal Singh Yadav""@en .

  # Step 3: Find individuals native to this country
  ?native dbo:nativeCountry ?country .

  # Step 4: Determine the father of these individuals
  ?native dbo:parent ?father .
}
```",4,5,5,2,2,3,3,71,0,0,1,0,0.0,0
456,30,train,"Give me the spouse of Danielle Spencer (Australian actress) and band of the band, that is a musical artist, of Dean Brody and professional in .","SELECT ?result WHERE { <http://dbpedia.org/resource/Danielle_Spencer_(Australian_actress)> <http://dbpedia.org/ontology/spouse> ?result . ?result <http://dbpedia.org/property/occupation> """"@en . <http://dbpedia.org/resource/Dean_Brody> <http://dbpedia.org/ontology/associatedMusicalArtist> ?v1 . ?v1 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. }","```sparql
SELECT ?spouse ?band ?professional WHERE {
  # Find spouse of Danielle Spencer (Australian actress)
  ?danielle dbo:spouse ?spouse .
  ?danielle rdfs:label ""Danielle Spencer""@en .

  # Find band associated with Dean Brody that is a musical artist
  OPTIONAL {
    ?dean dbo:associatedBand ?band .
    ?dean rdfs:label ""Dean Brody""@en .
    ?band dbo:musicalArtist true .
  }

  # Determine professional role of the band member or related entity
  OPTIONAL {
    ?bandMember dbo:memberOf ?band .
    ?bandMember dbo:profession ?professional .
  }
}
```",4,5,5,2,3,3,3,71,0,0,1,0,0.0,0
715,37,train,"Give me the commander in the force of the mayor, that is an office holder and a politician and a president, of 1933 Spanish general election and leader of Ministry of the Air (Spain).",SELECT ?result WHERE { <http://dbpedia.org/resource/Ministry_of_the_Air_(Spain)> <http://dbpedia.org/ontology/leader> ?result . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/President>. ?v3 <http://dbpedia.org/ontology/commander> ?v0 . ?v3 <http://dbpedia.org/ontology/commander> ?result . <http://dbpedia.org/resource/1933_Spanish_general_election> <http://dbpedia.org/property/leader> ?v0 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. },"```sparql
SELECT ?commander WHERE {
  # Identify the mayor/president in the 1933 Spanish general election
  ?person dbo:officeHolder ?mayorOffice .
  ?person dbo:politicalPartyMember ?party .
  ?person dbo:president ?country .
  ?election dbo:electionDate ?date .
  FILTER (YEAR(?date) = 1933 && STR(?country) = ""Spain"")
  
  # Identify the leader of the Ministry of the Air
  ?person dbo:minister ?ministry .
  FILTER (STR(?ministry) = ""Ministry of the Air (Spain)"")

  # Find the commander in force associated with this person
  ?person dbo:commanderInForce ?commander .
}
```",4,7,5,3,2,3,3,71,0,0,1,0,0.0,0
267,3,train,"Give me the player, that is a soccer club, in Rasoul Khatibi.",SELECT ?result WHERE { <http://dbpedia.org/resource/Rasoul_Khatibi> <http://dbpedia.org/ontology/team> ?result . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerClub>. },"```sparql
SELECT ?club WHERE {
  # Find the entity associated with Rasoul Khatibi
  ?khatibi dbo:memberOrPlayer ?entity .
  ?khatibi rdfs:label ""Rasoul Khatibi""@en .

  # Ensure the entity is a soccer club
  ?entity rdf:type dbo:SoccerClub .
  
  # Bind the club to the variable
  BIND(?entity AS ?club)
}
```",1,2,2,1,1,3,2,20,0,0,12,0,0.0,0
236,4,train,"Give me the reference, that is an office holder and a politician, to James Madison.","SELECT ?result WHERE { ?result <http://xmlns.com/foaf/0.1/name> ""James Madison""@en . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. }","```sparql
SELECT ?office WHERE {
  ?madison rdfs:label ""James Madison""@en .
  ?madison dbo:officeHolder ?office .
  
  # Ensure the office is related to politics, e.g., by checking for political party membership or government roles
  OPTIONAL { 
    ?office dbo:politicalPartyMember ?party .
  }
}
```",1,3,2,1,1,3,2,20,0,0,2,0,0.0,0
892,2,train,Give me the entity in Province of Reggio Emilia.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/province> <http://dbpedia.org/resource/Province_of_Reggio_Emilia> . },"```sparql
SELECT ?entity WHERE {
  ?entity dbo:locatedIn dbr:Province_of_Reggio_Emilia .
}
```",1,1,2,1,1,3,3,71,0,0,40,0,0.0,0
976,30,train,Give me the office of Mustafa Şentop and office of Meral Akşener and office of the person born as Mehmet Naci Bostancı.,"SELECT ?result WHERE { <http://dbpedia.org/resource/Meral_Akşener> <http://dbpedia.org/property/office> ?result . <http://dbpedia.org/resource/Mustafa_Şentop> <http://dbpedia.org/property/office> ?result . ?v0 <http://dbpedia.org/property/birthName> ""Mehmet Naci Bostancı""@en . ?v0 <http://dbpedia.org/property/office> ?result . }","```sparql
SELECT ?person ?office WHERE {
  # Mustafa Şentop's office
  OPTIONAL { 
    ?mustafa dbo:birthName ""Mustafa Şentop""@en .
    ?mustafa dbo:currentOffice ?office1 .
    BIND(?mustafa AS ?person)
  }
  
  # Meral Akşener's office
  OPTIONAL {
    ?meral dbo:birthName ""Meral Akşener""@en .
    ?meral dbo:currentOffice ?office2 .
    FILTER NOT EXISTS { ?meral dbo:currentOffice ?office1 } # Ensure it's not Mustafa Şentop
    BIND(?meral AS ?person)
  }
  
  # Mehmet Naci Bostancı (Mehmet Ali Ağca) notable role
  OPTIONAL {
    ?mehmetNaci dbo:birthName ""Mehmet Naci Bostancı""@en .
    ?mehmetNaci rdfs:label ""Mehmet Ali Ağca""@en .
    ?mehmetNaci dbo:notableFor ?office3 .
    FILTER NOT EXISTS { 
      ?mehmetNaci dbo:currentOffice ?office1 ;
                 dbo:currentOffice ?office2
    }
    BIND(?mehmetNaci AS ?person)
  }

  # Bind the office to a single variable for output
  OPTIONAL {
    VALUES (?office) { ?office1 ?office2 ?office3 }
  }
}
```",4,4,5,2,3,3,3,71,0,0,1,0,0.0,0
433,36,train,Give me the professional in the profession of the writer of Slowhand at 70 – Live at the Royal Albert Hall and associated musical artist of Paul Chambers.,SELECT ?result WHERE { ?result <http://dbpedia.org/property/occupation> ?v1 . <http://dbpedia.org/resource/Slowhand_at_70_–_Live_at_the_Royal_Albert_Hall> <http://dbpedia.org/property/writer> ?v0 . <http://dbpedia.org/resource/Paul_Chambers> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v0 <http://dbpedia.org/property/occupation> ?v1 . },"```sparql
SELECT ?professional WHERE {
  # Identify Eric Clapton as the writer of ""Slowhand at 70 – Live at the Royal Albert Hall""
  ?album dbo:writer ?clapton .
  ?album rdfs:label ""Slowhand at 70 – Live at the Royal Albert Hall""@en .

  # Determine Eric Clapton's profession
  ?clapton rdf:type dbo:Musician .

  # Identify Paul Chambers' associated musical artist (Miles Davis)
  ?chambers dbo:associatedMusicalArtist ?milesDavis .
  ?chambers rdfs:label ""Paul Chambers""@en .
  ?milesDavis rdfs:label ""Miles Davis""@en .

  # Find a professional who is both a musician and associated with Miles Davis
  ?professional rdf:type dbo:Musician .
  ?professional dbo:associatedMusicalArtist ?milesDavis .
}
```",4,4,5,3,2,3,3,71,0,0,16,0,0.0,0
955,13,train,"Give me the band of the writer of the work, that is a work and an album and a musical work, of Matt Freeman.",SELECT ?result WHERE { ?v0 <http://dbpedia.org/property/writer> <http://dbpedia.org/resource/Matt_Freeman> . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Album>. ?result <http://dbpedia.org/ontology/bandMember> ?v1 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?v0 <http://dbpedia.org/property/writer> ?v1 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalWork>. },"```sparql
SELECT ?band WHERE {
  # Identify Matt Freeman
  ?mattFreeman dbo:birthName ""Matt Freeman""@en .
  
  # Find works by Matt Freeman that are both an album and a musical work
  ?work dbo:creator ?mattFreeman ;
        rdf:type dbp:Album ;
        rdf:type dbc:Musical_works .

  # Identify the band associated with Matt Freeman
  ?band dbo:member ?mattFreeman .
}
```",3,6,4,3,1,3,2,20,0,0,21,0,0.0,0
281,0,train,Give me the commander in New Guinea campaign.,SELECT ?result WHERE { <http://dbpedia.org/resource/New_Guinea_campaign> <http://dbpedia.org/ontology/commander> ?result . },"```sparql
SELECT ?commander WHERE {
  ?campaign rdfs:label ""New Guinea campaign""@en .
  ?campaign dbo:partOf ?operation .
  
  OPTIONAL {
    ?operation dbo:commander ?commander .
  }
}
```

### Explanation:
- **`?campaign rdfs:label ""New Guinea campaign""@en .`:** Identifies the New Guinea Campaign entity.
- **`?campaign dbo:partOf ?operation .`:** Finds operations that are part of the New Guinea Campaign.
- **`OPTIONAL { ?operation dbo:commander ?commander . }`:** Retrieves commanders associated with these operations.",1,1,2,1,1,2,3,28,0,0,27,0,0.0,0
83,1,train,Give me the player in Albert Edward (soccer).,SELECT ?result WHERE { <http://dbpedia.org/resource/Albert_Edward_(soccer)> <http://dbpedia.org/ontology/team> ?result . },"```sparql
SELECT ?soccerPlayer WHERE {
  # Identify the entity for Albert Edward
  ?albertEdward rdfs:label ""Albert Edward""@en .
  
  # Find connections to a soccer player
  OPTIONAL { 
    ?albertEdward dbo:parent ?soccerPlayer .
    ?soccerPlayer rdf:type dbo:SoccerPlayer .
  }
  UNION
  OPTIONAL {
    ?albertEdward dbo:coach ?soccerPlayer .
    ?soccerPlayer rdf:type dbo:SoccerPlayer .
  }
  UNION
  OPTIONAL {
    ?albertEdward dbo:mentor ?soccerPlayer .
    ?soccerPlayer rdf:type dbo:SoccerPlayer .
  }
}
```",1,1,2,1,1,2,2,9,0,0,8,0,0.0,0
926,22,train,"Give me the child of the father, that is a royalty, of Mustafa III and father of Mahmud II.",SELECT ?result WHERE { ?v0 <http://dbpedia.org/ontology/child> ?result . <http://dbpedia.org/resource/Mustafa_III> <http://dbpedia.org/property/father> ?v0 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. <http://dbpedia.org/resource/Mahmud_II> <http://dbpedia.org/property/father> ?result . },"```sparql
SELECT ?child WHERE {
  # Find the father of Mustafa III who is royalty
  ?mustafaIII dbo:parent ?father .
  ?mustafaIII rdfs:label ""Mustafa III""@en .
  
  # Ensure the father is a royal figure (e.g., Sultan)
  ?father rdf:type dbo:Sultan .

  # Find children of this royal father
  ?father dbo:child ?child .

  # Check if any child is the father of Mahmud II
  ?mahmudII dbo:parent ?child .
  ?mahmudII rdfs:label ""Mahmud II""@en .
}
```",3,4,4,2,2,3,3,71,0,0,1,0,0.0,0
122,3,train,"Who is the reference, that is a musical artist and an artist, to Gift of Gab?","SELECT ?result WHERE { ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?result <http://xmlns.com/foaf/0.1/name> ""Gift of Gab""@en . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. }","```sparql
SELECT ?artist WHERE {
  # Find Gift of Gab's collaborations or references
  ?giftOfGab dbo:collaboratorOrReference ?relatedEntity .
  ?giftOfGab rdfs:label ""Gift of Gab""@en .

  # Ensure the related entity is a musical artist and an artist (visual)
  ?relatedEntity rdf:type dbo:MusicalArtist .
  ?relatedEntity rdf:type dbo:Artist .
}
```",1,3,2,1,1,2,2,9,0,0,1,0,0.0,0
443,15,train,Give me the landmark at elevation of the award of William Shepherd and birthplace of Carl Larsson.,SELECT ?result WHERE { <http://dbpedia.org/resource/Carl_Larsson> <http://dbpedia.org/ontology/birthPlace> ?result . ?result <http://dbpedia.org/ontology/elevation> ?v1 . <http://dbpedia.org/resource/William_Shepherd> <http://dbpedia.org/property/awards> ?v1 . },"```sparql
# Find the award received by William Shepherd
SELECT ?award WHERE {
  ?shepherd dbo:award ?award .
  ?shepherd rdfs:label ""William Shepherd""@en .
}

# Find the elevation of a landmark associated with this award
SELECT ?landmark ?elevation WHERE {
  ?award dbo:associatedLandmark ?landmark .
  ?landmark dbo:elevation ?elevation .
  
  # Assuming we have identified the specific award from the previous query
  FILTER (str(?award) = ""SpecificAwardURI"") 
}

# Find Carl Larsson's birthplace
SELECT ?birthPlace WHERE {
  ?larsson dbo:birthPlace ?birthPlace .
  ?larsson rdfs:label ""Carl Larsson""@en .
}
```

Note: The query assumes that the specific URI for William Shepherd's award is known after executing the first part of the query. This would typically be done in a two-step process where you first determine the award and then use its URI to find associated landmarks.",3,3,4,2,2,2,3,28,0,0,1,0,0.0,0
508,6,train,Give me the birthplace of Ma Hongkui and birthplace of Ma Bufang.,SELECT ?result WHERE { <http://dbpedia.org/resource/Ma_Hongkui> <http://dbpedia.org/ontology/birthPlace> ?result . <http://dbpedia.org/resource/Ma_Bufang> <http://dbpedia.org/ontology/birthPlace> ?result . },"```sparql
SELECT ?person ?birthPlace WHERE {
  # Find birthplace of Ma Hongkui
  OPTIONAL { 
    ?person rdfs:label ""Ma Hongkui""@en .
    ?person dbo:birthPlace ?birthPlace .
  }
  
  # Find birthplace of Ma Bufang
  OPTIONAL { 
    ?person rdfs:label ""Ma Bufang""@en .
    ?person dbo:birthPlace ?birthPlace .
  }
}
```",2,2,3,1,2,3,2,20,3,1,0,0.75,1.0,0.8571428571428571
382,3,train,"Give me the manager, that is a soccer manager and an athlete and a sports manager, of Bonner SC.",SELECT ?result WHERE { ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsManager>. <http://dbpedia.org/resource/Bonner_SC> <http://dbpedia.org/ontology/manager> ?result . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Athlete>. ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerManager>. },"```sparql
SELECT ?manager WHERE {
  # Find the manager of Bonner SC
  ?bonnerSC dbo:manager ?manager .
  ?bonnerSC rdfs:label ""Bonner SC""@en .

  # Ensure the manager is a soccer manager, athlete, and sports manager
  ?manager rdf:type dbo:SoccerManager .
  ?manager rdf:type dbo:Athlete .
  ?manager rdf:type dbo:SportsManager .
}
```",1,4,2,1,1,3,2,20,1,0,0,1.0,1.0,1.0
170,15,train,Give me the entity in the work of International Energy Agency and domain of Mayor.,"SELECT ?result WHERE { ?v1 <http://dbpedia.org/property/author> <http://dbpedia.org/resource/International_Energy_Agency> . ?result <http://dbpedia.org/ontology/leaderTitle> ""Mayor""@en . ?result <http://dbpedia.org/ontology/country> ?v1 . }","```sparql
SELECT ?ieaEntity ?mayorDomain WHERE {
  # Find an entity related to the work of the International Energy Agency
  ?ieaEntity dbo:wikiPageWikiLink wd:Q123456 .  # Example property and entity for IEA's work
  
  # Find the domain typically overseen by a Mayor
  ?mayor rdfs:label ""Mayor""@en .
  ?mayor dbo:officeLocation ?city .
  ?city rdf:type dbo:City .
  
  BIND(str(?city) AS ?mayorDomain)
}
```",3,3,4,2,2,2,3,28,0,0,99,0,0.0,0
465,10,train,"Give me the successor of Ercole II d'Este, Duke of Ferrara and successor of Renée of France.","SELECT ?result WHERE { <http://dbpedia.org/resource/Ercole_II_d'Este,_Duke_of_Ferrara> <http://dbpedia.org/ontology/successor> ?result . <http://dbpedia.org/resource/Renée_of_France> <http://dbpedia.org/ontology/successor> ?result . }","```sparql
SELECT ?successor WHERE {
  # Find Ercole II d'Este and his successor
  ?ercole dbo:parent ?successor .
  ?ercole rdfs:label ""Ercole II d'Este""@en .

  # Alternatively, find the title succession for Duke of Ferrara
  OPTIONAL {
    ?ercole dbo:titleSuccession ?successor .
  }

  # Find Renée of France and her children (potential successors)
  OPTIONAL {
    ?rene rdfs:label ""Renée of France""@en .
    ?rene dbo:child ?child .
    ?child dbo:parent ?successor .
  }
}
```",2,2,3,1,2,3,3,71,0,0,1,0,0.0,0
5,3,train,"Give me the person born, that is a politician, as .","SELECT ?result WHERE { ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?result <http://dbpedia.org/property/birthName> """"@en . }","```sparql
SELECT ?person WHERE {
  # Find persons with a birth date
  ?person dbo:birthDate ?birthDate .
  
  # Ensure the person's occupation is politician
  ?person dbo:occupation ?occupation .
  FILTER (CONTAINS(LCASE(str(?occupation)), ""politician""))
}
```",1,2,2,1,1,3,2,20,4,4170,165,0.0009583133684714902,0.023668639053254437,0.0018420446695832373
935,13,train,"Give me the death place of the awardee of the award, that is an award, of Syed Sohail Hussain Naqvi.",SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/deathPlace> ?result . ?v1 <http://dbpedia.org/property/awards> ?v0 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Award>. <http://dbpedia.org/resource/Syed_Sohail_Hussain_Naqvi> <http://dbpedia.org/property/awards> ?v0 . },"```sparql
SELECT DISTINCT ?awardeeDeathPlace WHERE {
  # Identify Syed Sohail Hussain Naqvi and the award he received
  ?syedSoahil a dbo:Person ;
              rdfs:label ""Syed Sohail Hussain Naqvi""@en .
  
  ?syedSoahil dbo:award ?award .

  # Find other awardees of the same award
  ?otherAwardee dbo:award ?award ;
                a dbo:Person ;
                dbo:deathPlace ?awardeeDeathPlace .
}
```",3,4,4,3,1,3,2,20,18,2,0,0.9,1.0,0.9473684210526316
129,0,train,Give me the professional in .,"SELECT ?result WHERE { ?result <http://dbpedia.org/property/occupation> """"@en . }","```sparql
# Placeholder for when a specific person is provided.
SELECT ?profession WHERE {
  # Example: Replace ""Albert Einstein"" with the desired individual's name.
  ?person rdfs:label ""Albert Einstein""@en .
  ?person dbo:occupation ?profession .
}
```",1,1,2,1,1,2,3,28,0,0,39640,0,0.0,0
645,22,train,"Give me the commander in Battle of Jarama and leader of the office, that is a government agency and an organisation, of Camilo Menéndez Tolosa.",SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/leader> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/GovernmentAgency>. <http://dbpedia.org/resource/Camilo_Menéndez_Tolosa> <http://dbpedia.org/property/office> ?v1 . <http://dbpedia.org/resource/Battle_of_Jarama> <http://dbpedia.org/ontology/commander> ?result . },"```sparql
SELECT ?commander ?leader WHERE {
  # Find the commander in the Battle of Jarama
  ?battle dbo:commander ?commander .
  ?battle rdfs:label ""Battle of Jarama""@en .

  # Identify the office related to Camilo Menéndez Tolosa that is a government agency and an organization
  ?office dbo:employee ?camilo .
  ?camilo rdfs:label ""Camilo Menéndez Tolosa""@en .
  ?office rdf:type dbpedia-owl:GovernmentAgency .
  ?office rdf:type dbpedia-owl:Organization .

  # Find the leader of this office
  ?office dbo:leader ?leader .
}
```",3,5,4,2,2,3,3,71,0,0,1,0,0.0,0
573,35,train,"Give me the person decedent at the administration, that is a region, of Charlie Baker and parent of the author, that is a politician and an office holder, of Exchequer Standards.","SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Region>. ?v1 <http://dbpedia.org/ontology/parent> ?result . <http://dbpedia.org/resource/Exchequer_Standards> <http://dbpedia.org/property/author> ?v1 . ?v2 <http://dbpedia.org/property/governor> ""Charlie Baker""@en . ?result <http://dbpedia.org/ontology/deathPlace> ?v2 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. }","```sparql
SELECT ?decedent ?parent WHERE {
  # Find Charlie Baker's administration (likely Massachusetts)
  ?charlieBaker dbo:officeHolderOf ?administration .
  ?charlieBaker rdfs:label ""Charlie Baker""@en .
  
  # Ensure the administration is a region
  ?administration rdf:type dbo:Region .

  # Find decedent related to this administration
  ?decedent dbo:relatedTo ?administration .

  # Identify author of Exchequer Standards who is also a politician and office holder
  ?author dbo:authored ?exchequerStandards .
  ?author dbo:officeHolderOf ?someOffice .
  ?author rdf:type dbo:Politician .
  
  # Ensure the author is related to Exchequer Standards
  ?exchequerStandards rdfs:label ""Exchequer Standards""@en .

  # Find parent of this author
  ?author dbo:parent ?parent .
}
```",4,7,5,2,2,3,3,71,0,0,2,0,0.0,0
826,27,train,"Give me the predecessor of the parent of the child of Louis IV, Grand Duke of Hesse.","SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/parent> <http://dbpedia.org/resource/Louis_IV,_Grand_Duke_of_Hesse> . ?v1 <http://dbpedia.org/ontology/parent> ?v2 . ?result <http://dbpedia.org/ontology/successor> ?v2 . }","```sparql
SELECT ?predecessor WHERE {
  # Step 1: Identify Louis IV, Grand Duke of Hesse
  ?louisIV dbo:spouse ?spouse .
  ?louisIV rdfs:label ""Louis IV, Grand Duke of Hesse""@en .

  # Step 2: Find a child of Louis IV
  ?child dbo:parent ?louisIV .

  # Step 3: Identify the parent of this child (should be Louis IV)
  OPTIONAL {
    ?child dbo:parent ?parent .
    FILTER (?parent = ?louisIV)
  }

  # Step 4: Find the predecessor of Louis IV
  ?predecessor dbo:successor ?louisIV .
}
```",3,3,4,3,1,3,3,71,1,0,0,1.0,1.0,1.0
445,31,train,"Give me the entity in the residence, that is a country, of the resident, that is an athlete, of Great Britain and death place of Patrick Moore.",SELECT ?result WHERE { <http://dbpedia.org/resource/Patrick_Moore> <http://dbpedia.org/ontology/deathPlace> ?result . ?v1 <http://dbpedia.org/property/residence> <http://dbpedia.org/resource/Great_Britain> . ?v1 <http://dbpedia.org/property/residence> ?v0 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. ?result <http://dbpedia.org/ontology/location> ?v0 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Athlete>. },"```sparql
SELECT ?entity WHERE {
  # Step 1: Find an athlete who resides in Great Britain
  ?athlete dbo:residence ?residence .
  ?athlete rdf:type dbo:Athlete .
  ?residence rdfs:label ""Great Britain""@en .

  # Step 2: Determine the country of residence
  ?residenceCountry dbo:countryName ?countryName .
  
  # Step 3: Find Patrick Moore's death place
  ?patrickMoore dbo:deathPlace ?deathPlace .
  ?patrickMoore rdfs:label ""Patrick Moore""@en .

  # Step 4: Identify an entity in the residence country that is a country itself
  ?entity dbo:countryName ?residenceCountryName .
  FILTER (?residenceCountryName = ?countryName)
  ?entity rdf:type dbo:Country .
}
```",4,6,5,3,2,3,3,71,0,0,1,0,0.0,0
41,12,train,Give me the party of Enda Kenny and party of Declan Costello and party of Mark Durkan.,SELECT ?result WHERE { <http://dbpedia.org/resource/Enda_Kenny> <http://dbpedia.org/ontology/party> ?result . <http://dbpedia.org/resource/Mark_Durkan> <http://dbpedia.org/ontology/party> ?result . <http://dbpedia.org/resource/Declan_Costello> <http://dbpedia.org/ontology/party> ?result . },"```sparql
SELECT ?person ?partyLabel WHERE {
  VALUES ?person { 
    dbr:Enda_Kenny 
    dbr:Declan_Costello_(politician) 
    dbr:Mark_Durkan 
  }
  
  ?person dbo:party ?party .
  SERVICE wikibase:label { bd:serviceParam wikibase:language ""[AUTO_LANGUAGE],en"". }
}
```",3,3,4,1,3,2,3,28,0,0,1,0,0.0,0
554,8,train,Give me the leader of the birth place of The Legendary Tigerman.,SELECT ?result WHERE { <http://dbpedia.org/resource/The_Legendary_Tigerman> <http://dbpedia.org/ontology/birthPlace> ?v0 . ?v0 <http://dbpedia.org/property/leader> ?result . },"```sparql
SELECT ?leader WHERE {
  # Find The Legendary Tigerman's birth place
  ?tigerman dbo:birthPlace ?birthPlace .
  ?tigerman rdfs:label ""The Legendary Tigerman""@en .

  # Find the leader of the birthplace
  OPTIONAL { 
    ?birthPlace dbo:mayor ?leader .
  }
}
```",2,2,3,2,1,3,2,20,0,0,3,0,0.0,0
527,10,train,"Give me the work, that is a work and a book, of the host of Hyperland.",SELECT ?result WHERE { <http://dbpedia.org/resource/Hyperland> <http://dbpedia.org/ontology/presenter> ?v0 . ?result <http://dbpedia.org/property/author> ?v0 . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Book>. },"```sparql
SELECT ?work WHERE {
  # Find Hyperland and its host
  ?hyperland dbo:genre dbc:Children%27s_television_series .
  ?hyperland rdfs:label ""Hyperland""@en .
  ?hyperland dbo:hostedBy ?host .

  # Find works by the host that are both books and other types of works
  ?work dbo:author ?host ;
        a ?type1, ?type2 .
  
  FILTER (?type1 = dbc:Books && 
          ( ?type2 = dbc:Films || ?type2 = dbc:Television_series ))
}
```",2,4,3,2,1,3,2,20,0,0,9,0,0.0,0
874,5,train,Give me the band member of The Jones Gang.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/associatedMusicalArtist> <http://dbpedia.org/resource/The_Jones_Gang> . },"```sparql
SELECT ?member WHERE {
  ?band rdfs:label ""The Jones Gang""@en .
  ?band dbo:bandMember ?member .
}
```",1,1,2,1,1,3,2,20,2,2,2,0.5,0.5,0.5
987,35,train,"Give me the birth place of the band, that is an artist and a musical artist, of Šako Polumenta and entity in the region, that is a country, of Central European Time.",SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/birthPlace> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. ?result <http://dbpedia.org/ontology/country> ?v0 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. <http://dbpedia.org/resource/Šako_Polumenta> <http://dbpedia.org/ontology/associatedMusicalArtist> ?v1 . ?v0 <http://dbpedia.org/property/timeZone> <http://dbpedia.org/resource/Central_European_Time> . },"```sparql
SELECT ?band ?birthPlace WHERE {
  # Find Šako Polumenta
  ?sako dbo:associatedBand ?band .
  ?sako rdfs:label ""Šako Polumenta""@en .

  # Ensure the band is both an artist and a musical artist
  ?band rdf:type dbp:MusicalArtist ;
        rdf:type dbp:Artist .

  # Get the birth place of the band
  ?band dbo:birthPlace ?birthPlace .

  # Find countries in the Central European Time region
  ?country geo:timezone ""Europe/Berlin"" .
  
  # Ensure the birth place is within a country in the CET region
  ?birthPlace dbp:country ?country .
}
```",4,7,5,2,2,3,3,71,0,0,2,0,0.0,0
443,5,train,Who is the work of yes?,"SELECT ?result WHERE { ?result <http://dbpedia.org/property/author> ""yes""@en . }","```sparql
SELECT ?work WHERE {
  ?yes dbo:genre dbr:Progressive_rock .
  ?yes rdfs:label ""Yes""@en .
  
  # Find works associated with Yes
  ?yes dbo:album ?work .
}
```

### Explanation:
- **`?yes dbo:genre dbr:Progressive_rock .`:** Ensures we are referring to the band ""Yes"" by confirming its genre.
- **`?yes rdfs:label ""Yes""@en .`:** Identifies the entity for the band ""Yes.""
- **`?yes dbo:album ?work .`:** Retrieves albums (works) associated with the band.",1,1,2,1,1,2,3,28,0,0,1563,0,0.0,0
554,0,train,Give me the leader of Portuguese São Tomé and Príncipe.,SELECT ?result WHERE { <http://dbpedia.org/resource/Portuguese_São_Tomé_and_Príncipe> <http://dbpedia.org/property/leader> ?result . },"```sparql
SELECT ?president WHERE {
  ?country dbo:officialName ""São Tomé and Príncipe""@en .
  ?country dbo:headOfState ?president .
}
```",1,1,2,1,1,3,2,20,0,0,2,0,0.0,0
773,33,train,"Give me the spouse of Louis the German and parent of the successor of the child, that is a royalty, of Louis the Pious.",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/child> ?v3 . ?v0 <http://dbpedia.org/ontology/successor> ?v3 . <http://dbpedia.org/resource/Louis_the_German> <http://dbpedia.org/ontology/spouse> ?result . <http://dbpedia.org/resource/Louis_the_Pious> <http://dbpedia.org/ontology/child> ?v0 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. },"```sparql
SELECT ?parent WHERE {
  # Find spouse of Louis the German
  ?louisGerman dbo:spouse ?spouse .
  ?louisGerman rdfs:label ""Louis the German""@en .

  # Find a child of Louis the Pious who is royalty
  OPTIONAL { 
    ?louisPious dbo:child ?child .
    ?louisPious rdfs:label ""Louis the Pious""@en .
    FILTER (regex(str(?child), ""royalty"", ""i""))
  }

  # Find successor of this child, ensuring they are royalty
  OPTIONAL {
    ?child dbo:succ ?successor .
    FILTER (regex(str(?successor), ""royalty"", ""i""))
  }

  # Find parent of the successor
  ?successor dbo:parent ?parent .
}
```",4,5,5,3,2,3,3,71,0,0,1,0,0.0,0
192,12,train,Give me the child of the child of Stephen V of Hungary and spouse of Clemence of Austria.,SELECT ?result WHERE { <http://dbpedia.org/resource/Clemence_of_Austria> <http://dbpedia.org/ontology/spouse> ?result . ?v0 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Stephen_V_of_Hungary> . ?result <http://dbpedia.org/ontology/parent> ?v0 . },"```sparql
SELECT ?grandchildChild WHERE {
  # Find Stephen V of Hungary
  ?stephenV rdfs:label ""Stephen V of Hungary""@en .

  # Find the child of Stephen V of Hungary
  ?stephenV dbo:child ?child .
  
  # Find the grandchild of Stephen V of Hungary (child's child)
  ?child dbo:child ?grandchild .

  # Find Clemence of Austria
  ?clemence rdfs:label ""Clemence of Austria""@en .

  # Find the spouse of Clemence of Austria
  ?clemence dbo:spouse ?spouse .

  # Find a child that is linked to both the grandchild and the spouse
  OPTIONAL {
    ?grandchild dbo:child ?grandchildChild .
    ?spouse dbo:child ?grandchildChild .
  }
}
```",3,3,4,2,2,3,2,20,0,0,1,0,0.0,0
507,30,train,Give me the spouse of Anne V. Coates and director of Entertaining Mr Sloane (film) and professional in the profession of Guy Ferland.,SELECT ?result WHERE { ?result <http://dbpedia.org/property/occupation> ?v1 . <http://dbpedia.org/resource/Guy_Ferland> <http://dbpedia.org/property/occupation> ?v1 . <http://dbpedia.org/resource/Entertaining_Mr_Sloane_(film)> <http://dbpedia.org/ontology/director> ?result . ?result <http://dbpedia.org/ontology/spouse> <http://dbpedia.org/resource/Anne_V._Coates> . },"```sparql
SELECT ?person WHERE {
  # Find the spouse of Anne V. Coates
  ?anneVCoates dbo:spouse ?person .
  ?anneVCoates rdfs:label ""Anne V. Coates""@en .

  # Ensure this person is also the director of Entertaining Mr Sloane
  OPTIONAL { 
    ?entertainingMrSloane dbo:director ?person .
    ?entertainingMrSloane rdfs:label ""Entertaining Mr Sloane""@en .
  }

  # Check if this person shares the same profession as Guy Ferland
  OPTIONAL {
    ?guyFerland dbo:profession ?profession .
    ?guyFerland rdfs:label ""Guy Ferland""@en .

    ?person dbo:profession ?sameProfession .
    FILTER (?sameProfession = ?profession)
  }
}
```",4,4,5,2,3,3,3,71,1,0,0,1.0,1.0,1.0
826,14,train,Give me the predecessor of the parent of Prince Friedrich of Hesse and by Rhine.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/successor> ?v1 . <http://dbpedia.org/resource/Prince_Friedrich_of_Hesse_and_by_Rhine> <http://dbpedia.org/ontology/parent> ?v1 . },"```sparql
SELECT ?predecessor WHERE {
  # Find Prince Friedrich of Hesse and by Rhine
  ?prince rdfs:label ""Prince Friedrich of Hesse and by Rhine""@en .
  
  # Find his parent
  ?prince dbo:parent ?parent .

  # Find the predecessor of this parent
  ?parent dbo:predecessor ?predecessor .
}
```",2,2,3,2,1,3,3,71,1,0,0,1.0,1.0,1.0
582,34,train,"Give me the reference to the residence of the reference, that is a scientist, to Hirotaka Sugawara and figure known as --10-19.","SELECT ?result WHERE { ?v2 <http://dbpedia.org/property/residence> ?v1 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Scientist>. ?result <http://dbpedia.org/property/nickname> ""--10-19""^^<http://www.w3.org/2001/XMLSchema#gMonthDay> . ?v2 <http://xmlns.com/foaf/0.1/name> ""Hirotaka Sugawara""@en . ?result <http://xmlns.com/foaf/0.1/name> ?v1 . }","```sparql
SELECT ?scientistResidence WHERE {
  # Identify Hirotaka Sugawara
  ?sugawara dbo:wikiPageID ""Hirotaka_Sugawara""@en .
  
  # Find a scientist associated with Hirotaka Sugawara
  OPTIONAL { 
    ?sugawara dbo:reference ?scientist .
    ?scientist rdf:type dbo:Scientist .
  }
  
  # Retrieve the residence of the identified scientist
  OPTIONAL {
    ?scientist dbo:residenceLocation ?scientistResidence .
  }
  
  # Consider the figure known as --10-19 (interpretation needed)
  FILTER (
    EXISTS { 
      ?sugawara rdfs:label ""Hirotaka Sugawara""@en .
      ?scientist rdfs:label ""--10-19""@en
    } || 
    EXISTS {
      ?scientist rdfs:label ""--10-19""@en
    }
  )
}
```",4,5,5,3,2,3,3,71,0,0,1,0,0.0,0
573,23,train,"Give me the person decedent at the administration, that is a region, of the real name of Charlie Baker (Australian footballer).",SELECT ?result WHERE { ?v0 <http://dbpedia.org/property/governor> ?v2 . <http://dbpedia.org/resource/Charlie_Baker_(Australian_footballer)> <http://xmlns.com/foaf/0.1/name> ?v2 . ?result <http://dbpedia.org/ontology/deathPlace> ?v0 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Region>. },"```sparql
SELECT ?decedent WHERE {
  # Identify Charlie Baker (Australian footballer)
  ?charlieBaker dbo:birthPlace ?place .
  ?charlieBaker rdfs:label ""Charlie Baker""@en .
  
  # Extract his real name
  OPTIONAL { 
    ?charlieBaker foaf:name ?realName .
  }
  
  # Find administration region associated with the real name
  OPTIONAL {
    ?adminRegion dbo:administrativeUnit ?realName .
    ?adminRegion a dbo:AdministrativeRegion .
  }

  # Find decedents in that administrative region
  ?decedent dbo:deathPlace ?adminRegion .
}
```",3,4,4,3,1,3,3,71,0,0,968,0,0.0,0
582,6,train,"Give me the father, that is an athlete and a soccer manager and a sports manager, of Masami Nagasawa.",SELECT ?result WHERE { ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerManager>. <http://dbpedia.org/resource/Masami_Nagasawa> <http://dbpedia.org/property/father> ?result . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Athlete>. ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsManager>. },"```sparql
SELECT ?father WHERE {
  # Find Masami Nagasawa's entry
  ?nagasawa dbo:parent ?father .
  ?nagasawa rdfs:label ""Masami Nagasawa""@en .

  # Check if the father is an athlete, soccer manager, and sports manager
  ?father dbo:occupation ?occupation .
  FILTER (CONTAINS(LCASE(str(?occupation)), ""athlete""))

  OPTIONAL {
    ?father dbo:sportManagerOf ?team .
    FILTER EXISTS { ?team rdf:type dbo:SoccerTeam }
  }

  OPTIONAL {
    ?father dbo:managerialPosition ?position .
    FILTER CONTAINS(LCASE(str(?position)), ""sports manager"")
  }
}
```",1,4,2,1,1,3,3,71,0,0,1,0,0.0,0
166,6,train,Give me the resting place of Gonzalo Queipo de Llano and entity in Spain.,SELECT ?result WHERE { <http://dbpedia.org/resource/Gonzalo_Queipo_de_Llano> <http://dbpedia.org/ontology/restingPlace> ?result . ?result <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Spain> . },"```sparql
SELECT ?burialPlace ?entityInSpain WHERE {
  # Find the burial place of Gonzalo Queipo de Llano
  ?person rdfs:label ""Gonzalo Queipo de Llano""@en .
  ?person dbo:deathPlace ?burialPlace .

  # Ensure the burial place is in Spain
  ?burialPlace dbo:country dbr:Spain .

  # Find an associated entity in Spain related to the burial place
  OPTIONAL {
    ?entityInSpain dbo:location ?burialPlace .
    ?entityInSpain dbo:country dbr:Spain .
  }
}
```",2,2,3,1,2,3,2,20,0,0,1,0,0.0,0
926,29,train,Give me the child of Ahmed III and successor of the child of Ahmed III and father of Mahmud II.,SELECT ?result WHERE { ?v3 <http://dbpedia.org/ontology/successor> ?result . ?v3 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Ahmed_III> . <http://dbpedia.org/resource/Mahmud_II> <http://dbpedia.org/property/father> ?result . <http://dbpedia.org/resource/Ahmed_III> <http://dbpedia.org/ontology/child> ?result . },"```sparql
SELECT ?successor WHERE {
  # Find a child of Ahmed III
  ?child dbo:parent dbr:Aḥmed_III .

  # Find the successor of this child
  ?child dbo:succeededBy ?successor .

  # Identify the father of Mahmud II
  ?mahmudII dbo:parent ?father .
  ?mahmudII rdfs:label ""Mahmud II""@en .

  # Ensure the successor is also the father of Mahmud II
  FILTER (?successor = ?father)
}
```",4,4,5,2,3,3,3,71,0,0,1,0,0.0,0
192,0,train,Give me the spouse of Clemence of Austria.,SELECT ?result WHERE { <http://dbpedia.org/resource/Clemence_of_Austria> <http://dbpedia.org/ontology/spouse> ?result . },"```sparql
SELECT ?spouse WHERE {
  ?clemence dbo:spouse ?spouse .
  ?clemence rdfs:label ""Clemence of Austria""@en .
}
```",1,1,2,1,1,3,2,20,1,0,0,1.0,1.0,1.0
874,8,train,Give me the band of the band member of The Jones Gang.,SELECT ?result WHERE { ?v0 <http://dbpedia.org/ontology/associatedMusicalArtist> <http://dbpedia.org/resource/The_Jones_Gang> . ?result <http://dbpedia.org/ontology/bandMember> ?v0 . },"```sparql
SELECT DISTINCT ?band WHERE {
  # Find The Jones Gang and its members
  ?theJonesGang dbo:member ?member .
  ?theJonesGang rdfs:label ""The Jones Gang""@en .

  # Check if these members are part of another band
  OPTIONAL { 
    ?member dbo:memberOf ?band .
    FILTER NOT EXISTS {
      ?member dbo:memberOf ?theJonesGang .
    }
  }

  # Ensure the band is not The Jones Gang itself
  FILTER (?band != ?theJonesGang)
}
```",2,2,3,2,1,3,2,20,0,0,4,0,0.0,0
433,14,train,Give me the professional in the profession of Bob Marley.,SELECT ?result WHERE { <http://dbpedia.org/resource/Bob_Marley> <http://dbpedia.org/property/occupation> ?v1 . ?result <http://dbpedia.org/property/occupation> ?v1 . },"```sparql
SELECT DISTINCT ?professional WHERE {
  # Get Bob Marley's profession
  ?bobMarley dbo:occupation ?profession .
  ?bobMarley rdfs:label ""Bob Marley""@en .

  # Find other professionals in the same occupation
  ?professional dbo:occupation ?sameProfession .
  FILTER (?sameProfession = ?profession)
  
  # Ensure we do not return Bob Marley himself
  FILTER (!str(?professional) = str(?bobMarley))
}
```",2,2,3,2,1,3,3,71,0,0,45013,0,0.0,0
839,13,train,Give me the band of the member of Böhse Onkelz.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/bandMember> ?v1 . <http://dbpedia.org/resource/Böhse_Onkelz> <http://dbpedia.org/ontology/bandMember> ?v1 . },"```sparql
SELECT ?member ?band WHERE {
  # Find members of Böhse Onkelz
  ?member dbo:memberOf ?band .
  ?band rdfs:label ""Böhse Onkelz""@en .

  # Return the member and confirm their band
  VALUES ?band { <http://dbpedia.org/resource/Böhse_Onkelz> }
}
```",2,2,3,2,1,3,3,71,0,0,1,0,0.0,0
917,12,train,Give me the child of Kekūanāoʻa and child of Kekūanāoʻa.,"SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/parent> <http://dbpedia.org/resource/Kekūanāoʻa> . ?result <http://dbpedia.org/property/father> ""Kekūanāoʻa""@en . }","```sparql
SELECT DISTINCT ?child1, ?child2 WHERE {
  # Find the first child of Kekūanāoʻa
  ?keku dbp:child ?child1 .
  ?keku rdfs:label ""Kekūanāoʻa""@en .

  # Find a second distinct child of Kekūanāoʻa
  ?keku dbp:child ?child2 .
  FILTER (?child1 != ?child2)
}
```",2,2,3,1,2,3,3,71,0,0,3,0,0.0,0
433,13,train,"Give me the associated musical artist of the associated musical artist, that is an artist and a musical artist, of Scott LaFaro.",SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . <http://dbpedia.org/resource/Scott_LaFaro> <http://dbpedia.org/ontology/associatedMusicalArtist> ?v1 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. },"```sparql
SELECT ?associatedArtist WHERE {
  # Find Scott LaFaro and his associated musical artist (Bill Evans)
  ?laFaro dbo:spouseOrPartner ?billEvans .
  ?laFaro rdfs:label ""Scott LaFaro""@en .
  ?billEvans rdf:type dbo:MusicalArtist .

  # Find the associated musical artist of Bill Evans
  ?billEvans dbo:spouseOrPartner ?associatedArtist .
  FILTER (?associatedArtist != ?laFaro) .
}
```",2,4,3,2,1,3,3,71,0,0,13,0,0.0,0
326,4,train,Who is the awardee of French Legion of Honor?,"SELECT ?result WHERE { ?result <http://dbpedia.org/property/awards> ""French Legion of Honor""@en . }","```sparql
SELECT ?awardee WHERE {
  ?award dbo:recipient ?awardee .
  ?award rdfs:label ""Legion of Honour""@en .
}
```",1,1,2,1,1,3,2,20,0,0,13,0,0.0,0
18,14,train,Give me the parent of the professional in Actress and professional in .,"SELECT ?result WHERE { ?v2 <http://dbpedia.org/property/occupation> ""Actress""@en . ?result <http://dbpedia.org/property/occupation> """"@en . ?result <http://dbpedia.org/ontology/child> ?v2 . }","```sparql
SELECT ?actress ?parent WHERE {
  # Find individuals with the profession of Actress
  ?actress dbo:profession dbc:Actresses .
  
  # Retrieve the parents of these actresses
  ?actress dbo:parent ?parent .
}
```",3,3,4,2,2,2,3,28,0,0,200,0,0.0,0
839,28,train,"Give me the band of the person born, that is a musical artist, as Kevin Richard Russell and band of Peter Schorowsky and band of Matthias Röhr.","SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?result <http://dbpedia.org/ontology/bandMember> <http://dbpedia.org/resource/Peter_Schorowsky> . ?v1 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?result <http://dbpedia.org/ontology/bandMember> <http://dbpedia.org/resource/Matthias_Röhr> . ?v1 <http://dbpedia.org/property/birthName> ""Kevin Richard Russell""@en . }","```sparql
SELECT ?person ?band WHERE {
  # Find Kevin Richard Russell's band
  OPTIONAL {
    ?kevin dbo:musicalArtist ?artist .
    ?kevin rdfs:label ""Kevin Richard Russell""@en .
    ?artist dbo:band ?band .
  }
  
  # Find Peter Schorowsky's band
  OPTIONAL {
    ?peter dbo:musicalArtist ?artist .
    ?peter rdfs:label ""Peter Schorowsky""@en .
    ?artist dbo:band ?band .
  }

  # Find Matthias Röhr's band
  OPTIONAL {
    ?matthias dbo:musicalArtist ?artist .
    ?matthias rdfs:label ""Matthias Röhr""@en .
    ?artist dbo:band ?band .
  }
}
```",4,5,5,2,3,3,3,71,0,0,1,0,0.0,0
232,4,train,"Give me the artistic movement of Ella Cheever Thayer and claim to fame of Katherine ""Kitty"" Marshall.",SELECT ?result WHERE { <http://dbpedia.org/resource/Katherine_%22Kitty%22_Marshall> <http://dbpedia.org/ontology/knownFor> ?result . <http://dbpedia.org/resource/Ella_Cheever_Thayer> <http://dbpedia.org/ontology/movement> ?result . },"```sparql
# Query to find the artistic movement of Ella Cheever Thayer
SELECT ?artisticMovement WHERE {
  ?eCT dbo:birthName ""Ella Cheever Thayer""@en .
  ?eCT dbo:artisticMovement ?artisticMovement .
}

# Query to find the claim to fame of Katherine ""Kitty"" Marshall
SELECT ?claimToFame WHERE {
  ?kM dbo:birthName ""Katherine \""Kitty\"" Marshall""@en .
  ?kM dbo:claimToFame ?claimToFame .
}
```",2,2,3,1,2,2,2,9,0,0,1,0,0.0,0
329,8,train,Give me the birthplace of the author of The Tailor and Ansty.,SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/birthPlace> ?result . <http://dbpedia.org/resource/The_Tailor_and_Ansty> <http://dbpedia.org/property/author> ?v1 . },"```sparql
SELECT ?birthPlace WHERE {
  # Find the author of ""The Tailor and Ansty""
  ?work dbo:author ?author .
  ?work rdfs:label ""The Tailor and Ansty""@en .

  # Retrieve the birthplace of the author
  ?author dbo:birthPlace ?birthPlace .
}
```",2,2,3,2,1,2,3,28,2,0,0,1.0,1.0,1.0
192,8,train,Give me the child of the child of Stephen V of Hungary.,SELECT ?result WHERE { ?v0 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Stephen_V_of_Hungary> . ?result <http://dbpedia.org/ontology/parent> ?v0 . },"```sparql
SELECT ?grandchild WHERE {
  # Find Stephen V of Hungary and his children
  ?stephenV dbo:parent ?child .
  ?stephenV rdfs:label ""Stephen V of Hungary""@en .

  # For each child, find their children (i.e., grandchildren of Stephen V)
  ?child dbo:parent ?grandchild .
}
```",2,2,3,2,1,3,2,20,0,4,7,0.0,0.0,0
373,0,train,Give me the writer of 2300 Jackson Street (song).,SELECT ?result WHERE { <http://dbpedia.org/resource/2300_Jackson_Street_(song)> <http://dbpedia.org/property/writer> ?result . },"```sparql
SELECT ?writer WHERE {
  ?song rdfs:label ""2300 Jackson Street""@en .
  FILTER (regex(str(?song), ""2300 Jackson Street"", ""i""))
  
  OPTIONAL { 
    ?song dbo:composer ?writer .
  }
  UNION
  OPTIONAL {
    ?song dbo:lyricist ?writer .
  }
}
```",1,1,2,1,1,2,2,9,0,0,6,0,0.0,0
976,3,train,"Give me the administration, that is an organisation, of Kemal Kılıçdaroğlu.",SELECT ?result WHERE { ?result <http://dbpedia.org/property/leader> <http://dbpedia.org/resource/Kemal_Kılıçdaroğlu> . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. },"```sparql
SELECT ?organization WHERE {
  ?person rdfs:label ""Kemal Kılıçdaroğlu""@en .
  ?person dbo:positionHeld ?position .
  ?position dbo:positionTitle ?title .
  FILTER (regex(str(?title), ""leader"", ""i"") || regex(str(?title), ""chairman"", ""i""))
  ?position dbo:organization ?organization .
}
```",1,2,2,1,1,3,3,71,0,0,3,0,0.0,0
465,30,train,"Give me the successor of Ercole II d'Este, Duke of Ferrara and successor of the child, that is a royalty, of Anne of Brittany and spouse of Archduchess Barbara of Austria.","SELECT ?result WHERE { <http://dbpedia.org/resource/Anne_of_Brittany> <http://dbpedia.org/ontology/child> ?v1 . ?v1 <http://dbpedia.org/ontology/successor> ?result . <http://dbpedia.org/resource/Ercole_II_d'Este,_Duke_of_Ferrara> <http://dbpedia.org/ontology/successor> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?result <http://dbpedia.org/ontology/spouse> <http://dbpedia.org/resource/Archduchess_Barbara_of_Austria> . }","```sparql
SELECT ?successorErcole ?successorChild ?spouseBarbara WHERE {
  # Find successor of Ercole II d'Este, Duke of Ferrara
  ?ercole dbo:successor ?successorErcole .
  ?ercole rdfs:label ""Ercole II d'Este, Duke of Ferrara""@en .

  # Find child of Anne of Brittany who is royalty and their successor
  OPTIONAL {
    ?anne dbo:child ?royalChild .
    ?anne rdfs:label ""Anne of Brittany""@en .
    FILTER (regex(str(?royalChild), ""royalty"", ""i"")) # Assuming a way to identify royalty

    ?royalChild dbo:successor ?successorChild .
  }

  # Find spouse of Archduchess Barbara of Austria
  OPTIONAL {
    ?barbara dbo:spouse ?spouseBarbara .
    ?barbara rdfs:label ""Archduchess Barbara of Austria""@en .
  }
}
```",4,5,5,2,3,3,3,71,1,0,0,1.0,1.0,1.0
865,32,train,"Give me the native of the residence, that is a country, of Ram Jaipal Singh Yadav and father of the child, that is a politician, of Abu Ahmad Abdul Hafiz.",SELECT ?result WHERE { ?v3 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Abu_Ahmad_Abdul_Hafiz> . ?v3 <http://dbpedia.org/property/father> ?result . ?result <http://dbpedia.org/ontology/birthPlace> ?v0 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. <http://dbpedia.org/resource/Ram_Jaipal_Singh_Yadav> <http://dbpedia.org/property/residence> ?v0 . },"```sparql
SELECT ?native WHERE {
  # Find Ram Jaipal Singh Yadav's residence that is a country
  ?ramJaipal dbo:residence ?residence .
  ?ramJaipal rdfs:label ""Ram Jaipal Singh Yadav""@en .
  ?residence rdf:type dbo:Country .

  # Find the native of this country
  ?native dbo:nativePlace ?residence .

  # Find Abu Ahmad Abdul Hafiz's child who is a politician
  OPTIONAL {
    ?abuAhmad dbo:child ?politicianChild .
    ?abuAhmad rdfs:label ""Abu Ahmad Abdul Hafiz""@en .
    ?politicianChild rdf:type dbo:Politician .
  }

  # Find the father of this child
  OPTIONAL {
    ?politicianChild dbo:parent ?father .
  }
}
```",4,6,5,2,2,3,3,71,0,0,1,0,0.0,0
456,35,train,"Give me the spouse of the actor of Pacific Drive and band of the band, that is a musical artist, of Dean Brody.",SELECT ?result WHERE { <http://dbpedia.org/resource/Pacific_Drive> <http://dbpedia.org/property/starring> ?v2 . ?v2 <http://dbpedia.org/ontology/spouse> ?result . ?v1 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. <http://dbpedia.org/resource/Dean_Brody> <http://dbpedia.org/ontology/associatedMusicalArtist> ?v1 . },"```sparql
SELECT ?spouseOfActor ?bandOfBand WHERE {
  # Find the actor of Pacific Drive
  ?pacificDrive dbo:actor ?actor .
  ?pacificDrive rdfs:label ""Pacific Drive""@en .

  # Get the spouse of this actor
  OPTIONAL { 
    ?actor dbo:spouse ?spouseOfActor .
  }

  # Find the band associated with Dean Brody
  ?deanBrody dbo:band ?band .
  ?deanBrody rdfs:label ""Dean Brody""@en .

  # Ensure the band is a musical artist
  FILTER EXISTS { 
    ?band rdf:type dbo:MusicalArtist .
  }

  # Get the band of this band (if applicable)
  OPTIONAL {
    ?band dbo:band ?bandOfBand .
  }
}
```",4,5,5,2,2,3,3,71,0,0,1,0,0.0,0
445,33,train,Give me the death place of the awardee of the establishment of 1820-03-10 and entity in England.,"SELECT ?result WHERE { ?v3 <http://dbpedia.org/property/awards> ?v0 . ?v0 <http://dbpedia.org/ontology/foundingDate> ""1820-03-10""^^<http://www.w3.org/2001/XMLSchema#date> . ?result <http://dbpedia.org/ontology/location> <http://dbpedia.org/resource/England> . ?v3 <http://dbpedia.org/ontology/deathPlace> ?result . }","```sparql
SELECT ?deathPlace WHERE {
  # Find the awardee related to the establishment on 1820-03-10
  ?event dbo:date ""1820-03-10""^^xsd:date ;
         dbo:awardee ?entity .
  
  # Ensure the entity has a connection to England
  ?entity dbo:country dbr:England .

  # Retrieve the death place of this awardee
  ?entity dbo:deathPlace ?deathPlace .
}
```",4,4,5,3,2,3,3,71,0,0,1,0,0.0,0
47,17,train,"Give me the awardee of the entity, that is an award, in India.",SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Award>. ?result <http://dbpedia.org/property/awards> ?v1 . ?v1 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/India> . },"```sparql
SELECT ?award ?awardee WHERE {
  ?award dbo:location dbc:India .
  ?award dbo:recipient ?awardee .
}
```",2,3,3,2,1,3,3,71,0,0,1632,0,0.0,0
791,0,train,Give me the spouse of Taira no Tokuko.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/spouse> <http://dbpedia.org/resource/Taira_no_Tokuko> . },"```sparql
SELECT ?spouse WHERE {
  ?tokuko dbo:spouse ?spouse .
  ?tokuko rdfs:label ""Taira no Tokuko""@en .
}
```",1,1,2,1,1,3,3,71,1,0,0,1.0,1.0,1.0
41,2,train,Give me the party of Enda Kenny.,SELECT ?result WHERE { <http://dbpedia.org/resource/Enda_Kenny> <http://dbpedia.org/ontology/party> ?result . },"```sparql
SELECT ?party WHERE {
  ?endakenny dbo:name ""Enda Kenny""@en .
  ?endakenny dbo:partyAffiliation ?party .
}
```",1,1,2,1,1,2,3,28,0,0,1,0,0.0,0
465,15,train,"Give me the child of the parent of Ercole II d'Este, Duke of Ferrara.","SELECT ?result WHERE { ?result <http://dbpedia.org/property/father> ?v1 . <http://dbpedia.org/resource/Ercole_II_d'Este,_Duke_of_Ferrara> <http://dbpedia.org/ontology/parent> ?v1 . }","```sparql
SELECT ?child WHERE {
  # Identify Ercole II d'Este and his parent
  ?ercole dbo:parent ?parent .
  ?ercole rdfs:label ""Ercole II d'Este""@en .

  # Find the child of this parent
  ?parent dbo:child ?child .
}
```",2,2,3,2,1,3,3,71,0,0,2,0,0.0,0
456,29,train,Give me the professional in the alter ego of The Shadow and band of Alan Doyle and spouse of Danielle Spencer (Australian actress).,SELECT ?result WHERE { ?result <http://dbpedia.org/property/occupation> ?v3 . <http://dbpedia.org/resource/Alan_Doyle> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . <http://dbpedia.org/resource/Danielle_Spencer_(Australian_actress)> <http://dbpedia.org/ontology/spouse> ?result . <http://dbpedia.org/resource/The_Shadow> <http://dbpedia.org/property/alterEgo> ?v3 . },"```sparql
SELECT ?spouse ?profession WHERE {
  # Find Lamont Cranston (alter ego of The Shadow)
  ?lamont rdfs:label ""Lamont Cranston""@en .
  
  # Find Alan Doyle's association with Great Big Sea
  ?doyle dbo:memberOf ?band .
  ?band rdfs:label ""Great Big Sea""@en .
  ?doyle rdfs:label ""Alan Doyle""@en .

  # Find spouse of Danielle Spencer
  ?danielle dbo:spouse ?spouse .
  ?danielle rdfs:label ""Danielle Spencer (Australian actress)""@en .

  # Check if the spouse has a professional connection to Lamont Cranston or Alan Doyle
  OPTIONAL {
    ?spouse dbo:profession ?profession .
  }
  
  # Ensure the spouse is connected to either Lamont Cranston or Alan Doyle professionally
  OPTIONAL {
    ?spouse dbo:relatedTo ?lamont .
  }
  OPTIONAL {
    ?spouse dbo:relatedTo ?doyle .
  }
}
```",4,4,5,2,3,3,3,71,0,0,1,0,0.0,0
917,1,train,Give me the child of Kekūanāoʻa.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/parent> <http://dbpedia.org/resource/Kekūanāoʻa> . },"```sparql
SELECT ?child WHERE {
  ?kekuanaoa dbo:child ?child .
  ?kekuanaoa rdfs:label ""Kekūanāoʻa""@en .
}
```",1,1,2,1,1,3,3,71,6,0,0,1.0,1.0,1.0
130,0,train,Give me the figure known as Vanderbilt Commodores.,SELECT ?result WHERE { ?result <http://dbpedia.org/property/nickname> <http://dbpedia.org/resource/Vanderbilt_Commodores> . },"```sparql
SELECT ?commodore ?description WHERE {
  ?commodore rdfs:label ""Vanderbilt Commodores""@en .
  OPTIONAL { ?commodore dbo:abstract ?description . }
  FILTER (lang(?description) = 'en')
}
```",1,1,2,1,1,3,2,20,0,2,3,0.0,0.0,0
582,16,train,"Give me the father, that is an athlete and a soccer manager and a sports manager, of the child of Kazuaki Nagasawa.",SELECT ?result WHERE { ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Athlete>. ?v1 <http://dbpedia.org/property/father> ?result . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerManager>. ?v1 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Kazuaki_Nagasawa> . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsManager>. },"```sparql
SELECT ?father WHERE {
  # Find Kazuaki Nagasawa's child
  ?child dbo:parent ?kazuakiNagasawa .
  ?kazuakiNagasawa rdfs:label ""Kazuaki Nagasawa""@en .

  # Identify the father of this child
  ?child dbo:parent ?father .

  # Ensure the father is an athlete, soccer manager, and sports manager
  ?father dbo:occupation ?athlete .
  ?athlete rdfs:label ""Athlete""@en .
  
  ?father dbo:occupation ?soccerManager .
  ?soccerManager rdfs:label ""Soccer Manager""@en .

  ?father dbo:occupation ?sportsManager .
  ?sportsManager rdfs:label ""Sports Manager""@en .
}
```",2,5,3,2,1,3,3,71,0,0,1,0,0.0,0
715,32,train,"Give me the commander in the force, that is a military conflict, of Abd el-Krim and commander in the force of Francisco Largo Caballero.",SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Abd_el-Krim> . ?v3 <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Francisco_Largo_Caballero> . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v3 <http://dbpedia.org/ontology/commander> ?result . ?v1 <http://dbpedia.org/ontology/commander> ?result . },"```sparql
SELECT ?abdElKrimCommander ?largoCaballeroCommander WHERE {
  # Find the commander of Abd el-Krim in a military conflict
  ?abdElKrim dbo:militaryConflict ?rifWar .
  ?rifWar rdfs:label ""Rif War""@en .
  ?rifWar dbo:commander ?abdElKrimCommander .

  # Find Francisco Largo Caballero's role or commander in the Spanish Civil War
  ?largoCaballero dbo:militaryConflict ?spanishCivilWar .
  ?spanishCivilWar rdfs:label ""Spanish Civil War""@en .
  OPTIONAL {
    ?spanishCivilWar dbo:commander ?largoCaballeroCommander .
  }

  # Bind the individuals to their respective entities
  ?abdElKrim rdfs:label ""Abd el-Krim""@en .
  ?largoCaballero rdfs:label ""Francisco Largo Caballero""@en .
}
```",4,5,5,2,2,3,3,71,0,0,4,0,0.0,0
417,30,train,"Give me the spouse of Princess Caroline-Mathilde of Denmark and child of the child, that is a royalty, of Frederick Francis III, Grand Duke of Mecklenburg-Schwerin and child of Christian X of Denmark.","SELECT ?result WHERE { ?v1 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Frederick_Francis_III,_Grand_Duke_of_Mecklenburg-Schwerin> . ?result <http://dbpedia.org/ontology/spouse> <http://dbpedia.org/resource/Princess_Caroline-Mathilde_of_Denmark> . ?result <http://dbpedia.org/ontology/parent> ?v1 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?result <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Christian_X_of_Denmark> . }","```sparql
SELECT ?child WHERE {
  # Find spouse of Princess Caroline-Mathilde of Denmark
  ?princess rdfs:label ""Princess Caroline-Matilda of Denmark""@en .
  ?princess dbo:spouse ?spouse .

  # Find child of the spouse who is royalty
  OPTIONAL { 
    ?child dbo:parent ?spouse .
    FILTER (regex(str(?child), ""Royal"", ""i""))
  }

  # Find a child of Frederick Francis III and Christian X of Denmark who is royalty
  OPTIONAL {
    ?frederick rdfs:label ""Frederick Francis III, Grand Duke of Mecklenburg-Schwerin""@en .
    ?christian rdfs:label ""Christian X of Denmark""@en .
    ?child dbo:parent ?frederick ;
           dbo:parent ?christian .
    FILTER (regex(str(?child), ""Royal"", ""i""))
  }
}
```",4,5,5,2,3,3,3,71,0,0,1,0,0.0,0
373,3,train,Give me the profession of Beto Guedes.,SELECT ?result WHERE { <http://dbpedia.org/resource/Beto_Guedes> <http://dbpedia.org/property/occupation> ?result . },"```sparql
SELECT ?profession WHERE {
  ?person rdfs:label ""Beto Guedes""@en .
  ?person dbo:occupation ?profession .
}
```",1,1,2,1,1,2,2,9,0,0,1,0,0.0,0
341,2,train,Give me the awardee of List of awards and nominations received by Beyoncé.,SELECT ?result WHERE { ?result <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/List_of_awards_and_nominations_received_by_Beyoncé> . },"```sparql
SELECT ?awardee WHERE {
  ?beyonce rdfs:label ""Beyoncé""@en .
  ?beyonce dbo:award ?award .
  BIND(?beyonce AS ?awardee)
}
```",1,1,2,1,1,2,2,9,1,0,0,1.0,1.0,1.0
47,24,train,Give me the office of the awardee of Banga Bhushan and office of Ajoy Mukherjee.,SELECT ?result WHERE { ?v2 <http://dbpedia.org/property/office> ?result . ?v2 <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/Banga_Bhushan> . <http://dbpedia.org/resource/Ajoy_Mukherjee> <http://dbpedia.org/property/office> ?result . },"```sparql
SELECT ?awardeeOffice ?mukherjeeOffice WHERE {
  # Find the awardee of Banga Bhushan award and their office
  ?award dbo:recipient ?awardee .
  ?award rdfs:label ""Banga Bhushan Award""@en .
  OPTIONAL { ?awardee dbo:office ?awardeeOffice . }

  # Find Ajoy Mukherjee and his office
  ?mukherjee rdfs:label ""Ajoy Mukherjee""@en .
  OPTIONAL { ?mukherjee dbo:office ?mukherjeeOffice . }
}
```",3,3,4,2,2,3,3,71,0,0,1,0,0.0,0
158,4,train,"Who is the person deceased, that is an office holder and a politician, on 1945-09-15?","SELECT ?result WHERE { ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?result <http://dbpedia.org/ontology/deathDate> ""1945-09-15""^^<http://www.w3.org/2001/XMLSchema#date> . }","```sparql
SELECT ?person WHERE {
  ?person rdf:type dbo:Politician .
  ?person rdf:type dbo:OfficeHolder .
  ?person dbo:deathDate ?date .
  FILTER (YEAR(?date) = 1945 && MONTH(?date) = 9 && DAY(?date) = 15)
}
```",1,3,2,1,1,3,2,20,3,0,0,1.0,1.0,1.0
582,4,train,Give me the residence of Hirotaka Sugawara.,SELECT ?result WHERE { <http://dbpedia.org/resource/Hirotaka_Sugawara> <http://dbpedia.org/property/residence> ?result . },"```sparql
SELECT ?residence WHERE {
  ?sugawara rdfs:label ""Hirotaka Sugawara""@en .
  ?sugawara dbo:residence ?residence .
}
```",1,1,2,1,1,3,3,71,0,0,2,0,0.0,0
273,2,train,Give me the child of Edoardo Agnelli (1831-1871).,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/parent> <http://dbpedia.org/resource/Edoardo_Agnelli_(1831-1871)> . },"```sparql
SELECT ?child WHERE {
  ?edoardo dbo:birthYear ""1831""^^xsd:gYear ;
           dbo:deathYear ""1871""^^xsd:gYear ;
           dbo:child ?child .
  FILTER (regex(str(?edoardo), ""Edoardo Agnelli"", ""i""))
}
```",1,1,2,1,1,3,2,20,0,0,1,0,0.0,0
456,22,train,"Give me the band of the band, that is a musical artist, of Dean Brody and spouse of Danielle Spencer (Australian actress).",SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?v1 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . <http://dbpedia.org/resource/Danielle_Spencer_(Australian_actress)> <http://dbpedia.org/ontology/spouse> ?result . <http://dbpedia.org/resource/Dean_Brody> <http://dbpedia.org/ontology/associatedMusicalArtist> ?v1 . },"```sparql
SELECT ?bandOfTheBand WHERE {
  # Step 1: Find the band associated with Dean Brody
  ?deanBrody dbo:musicalArtist ?band .
  ?deanBrody rdfs:label ""Dean Brody""@en .

  # Step 2: Determine if this band is part of another band (the band of the band)
  OPTIONAL {
    ?band dbo:partOfBand ?bandOfTheBand .
  }

  # Step 3: Find Danielle Spencer's spouse
  ?danielleSpencer dbo:spouse ?spouse .

  # Ensure we are referring to the correct Danielle Spencer
  ?danielleSpencer rdfs:label ""Danielle Spencer (Australian actress)""@en .

  # Step 4: Identify any musical artist or band associated with her spouse
  OPTIONAL {
    ?spouse dbo:musicalArtist ?musicalArtist .
  }
}
```",3,4,4,2,2,3,3,71,0,0,1,0,0.0,0
892,8,train,"Give me the administration, that is Italian and a region and a settlement and an administrative region, of Democratic Party (Italy).",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Italy>. ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Region>. ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/AdministrativeRegion>. ?result <http://dbpedia.org/property/leaderParty> <http://dbpedia.org/resource/Democratic_Party_(Italy)> . },"```sparql
SELECT ?region WHERE {
  ?region rdf:type dbo:AdministrativeRegion .
  ?region dbo:country dbr:Italy .
  ?region dbo:settlement ?settlement .
  ?region rdfs:label ?label .
  
  # Ensure the region is also a settlement
  ?settlement rdf:type dbo:Settlement .

  # Link to Democratic Party (Italy)
  OPTIONAL {
    ?party dbo:member ?person .
    ?party dbr:Democratic_Party_(Italy) .
    ?region dbo:government ?government .
    ?government dbo:minister ?person .
  }
  
  FILTER (lang(?label) = ""en"")
}
```",1,5,2,1,1,3,3,71,0,0,14,0,0.0,0
926,23,train,Give me the father of the father of the spouse of Neşerek Kadın.,SELECT ?result WHERE { <http://dbpedia.org/resource/Neşerek_Kadın> <http://dbpedia.org/ontology/spouse> ?v1 . ?v2 <http://dbpedia.org/property/father> ?result . ?v1 <http://dbpedia.org/property/father> ?v2 . },"```sparql
SELECT ?grandfather WHERE {
  # Identify Neşerek Kadın and her spouse
  ?neserekKadin rdfs:label ""Neşere""@en .
  ?neserekKadin dbo:spouse ?spouse .

  # Find the father of Neşerek Kadın's spouse
  ?spouse dbo:parent ?fatherOfSpouse .

  # Find the grandfather (father of the father)
  ?fatherOfSpouse dbo:parent ?grandfather .
}
```",3,3,4,3,1,3,3,71,0,0,1,0,0.0,0
507,29,train,"Give me the spouse of Anne V. Coates and professional in Film director, television director and director of the movie, that is a movie and a work, with Beryl Reid.","SELECT ?result WHERE { ?result <http://dbpedia.org/property/occupation> ""Film director, television director""@en . ?v3 <http://dbpedia.org/property/starring> <http://dbpedia.org/resource/Beryl_Reid> . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Film>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?result <http://dbpedia.org/ontology/spouse> <http://dbpedia.org/resource/Anne_V._Coates> . ?v3 <http://dbpedia.org/ontology/director> ?result . }","```sparql
SELECT ?spouse ?movie WHERE {
  # Find Anne V. Coates' spouse
  ?anne dbo:spouse ?spouse .
  ?anne rdfs:label ""Anne V. Coates""@en .

  # Ensure the spouse is a film and television director
  ?spouse rdf:type dbo:FilmDirector ;
          rdf:type dbo:TelevisionDirector .

  # Find movies directed by this person that involve Beryl Reid
  ?movie dbo:director ?spouse ;
         rdf:type dbo:Movie ;
         dbo:work ?work .
  
  ?work dbo:actor ?berylReid .
  ?berylReid rdfs:label ""Beryl Reid""@en .
}
```",4,6,5,2,3,3,3,71,0,0,1,0,0.0,0
274,14,train,Give me the professional in the designer of Tetris Classic and band member of Dizzy Gillespie.,SELECT ?result WHERE { ?result <http://dbpedia.org/property/occupation> ?v2 . <http://dbpedia.org/resource/Tetris_Classic> <http://dbpedia.org/property/designer> ?v2 . ?result <http://dbpedia.org/ontology/associatedMusicalArtist> <http://dbpedia.org/resource/Dizzy_Gillespie> . },"```sparql
SELECT ?person WHERE {
  # Find the designer of Tetris Classic
  ?tetrisClassic dbo:creator ?designer .
  ?tetrisClassic rdfs:label ""Tetris Classic""@en .

  # Find band members of Dizzy Gillespie
  ?dizzyGillespie dbo:musicGroupMember ?bandMember .
  ?dizzyGillespie rdfs:label ""Dizzy Gillespie""@en .

  # Check if the same person is both designer and band member
  FILTER (?designer = ?bandMember)
}
```",3,3,4,2,2,2,3,28,0,0,8,0,0.0,0
326,13,train,"Give me the resident of the birthplace, that is a state and British, of the professional in Writer.","SELECT ?result WHERE { ?v0 <http://dbpedia.org/property/occupation> ""Writer""@en . ?v0 <http://dbpedia.org/ontology/birthPlace> ?v1 . ?result <http://dbpedia.org/property/residence> ?v1 . ?v1 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/United_Kingdom>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/AdministrativeRegion>. }","```sparql
SELECT ?resident WHERE {
  # Find a writer and their birthplace
  ?writer dbo:occupation dbp:Writer .
  
  # Get the birthplace of the writer
  ?writer dbo:birthPlace ?birthPlace .

  # Ensure the birthplace is a state in the UK
  ?birthPlace rdf:type dbo:State ;
              dbo:country dbr:United_Kingdom .

  # Find residents of that state
  ?resident dbo:residence ?birthPlace .
}
```",3,5,4,3,1,3,2,20,0,0,120,0,0.0,0
459,18,train,Give me the governor of Dana Murphy and person born as the birth name of Kevin Stitt.,SELECT ?result WHERE { <http://dbpedia.org/resource/Kevin_Stitt> <http://dbpedia.org/property/birthName> ?v0 . <http://dbpedia.org/resource/Dana_Murphy> <http://dbpedia.org/property/governor> ?result . ?result <http://dbpedia.org/property/birthName> ?v0 . },"```sparql
SELECT ?governor ?personWithBirthName WHERE {
  # Part 1: Governor associated with Dana Murphy
  ?danaMurphy dbo:birthName ""Dana Murphy""@en .
  OPTIONAL { 
    ?politicalRole dbo:officeHolder ?governor .
    ?politicalRole dbo:subject ?danaMurphy .
  }

  # Part 2: Person born as Kevin Stitt's birth name
  ?kevinStitt dbo:birthName ?birthName .
  ?kevinStitt rdfs:label ""Kevin Stitt""@en .
  
  OPTIONAL {
    ?person dbo:birthName ?birthName .
    FILTER(?person != ?kevinStitt)
  }
}
```",3,3,4,2,2,2,3,28,0,0,1,0,0.0,0
791,2,train,Give me the father of Emperor Go-Toba.,SELECT ?result WHERE { <http://dbpedia.org/resource/Emperor_Go-Toba> <http://dbpedia.org/property/father> ?result . },"```sparql
SELECT ?father WHERE {
  ?goToba dbo:parent ?father .
  ?goToba rdfs:label ""Emperor Go-Toba""@en .
}
```",1,1,2,1,1,3,3,71,1,0,0,1.0,1.0,1.0
129,6,train,Give me the professional in  and associated musical artist of EarthGang.,"SELECT ?result WHERE { ?result <http://dbpedia.org/property/occupation> """"@en . <http://dbpedia.org/resource/EarthGang> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . }","```sparql
SELECT ?professionalField ?associatedArtist WHERE {
  # Identify EarthGang and their professional field
  ?earthGang dbo:genre ?hipHop .
  ?earthGang rdfs:label ""EarthGang""@en .
  ?earthGang dbo:fieldOfActivity ?professionalField .

  # Find associated musical artists through collaborations or group memberships
  OPTIONAL {
    ?earthGang dbo:collaboratesWith ?associatedArtist .
  }
}
```",2,2,3,1,2,2,3,28,0,0,3,0,0.0,0
507,23,train,Give me the spouse of the person born as the birth name of Anne V. Coates.,SELECT ?result WHERE { ?v0 <http://dbpedia.org/property/birthName> ?v2 . ?result <http://dbpedia.org/ontology/spouse> ?v0 . <http://dbpedia.org/resource/Anne_V._Coates> <http://dbpedia.org/property/birthName> ?v2 . },"```sparql
SELECT ?spouse WHERE {
  # Find Anne V. Coates' birth name
  ?anne dbo:birthName ?birthName .
  ?anne rdfs:label ""Anne V. Coates""@en .

  # Find the person associated with that birth name
  OPTIONAL { 
    ?person dbo:birthName ?birthName .
  }

  # Find the spouse of this person
  OPTIONAL {
    ?person dbo:spouse ?spouse .
  }
}
```",3,3,4,3,1,3,3,71,1,0,0,1.0,1.0,1.0
888,3,train,"Give me the force, that is a societal event and an event, of Serhiy Kotenko.",SELECT ?result WHERE { ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?result <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Serhiy_Kotenko> . },"```sparql
SELECT ?event WHERE {
  # Find the entity representing Serhiy Kotenko
  ?kotenko dbo:wikiPageID ""Serhiy_Kotenko""@en .
  
  # Retrieve events associated with him
  ?kotenko dbo:event ?event .

  # Optionally, filter for societal events if a specific property exists
  OPTIONAL {
    ?event rdf:type dbpedia-owl:SocietalEvent .
  }
}
```",1,3,2,1,1,3,2,20,0,0,1,0,0.0,0
645,25,train,"Give me the military force of Spanish Civil War and leader of the office, that is a government agency and an organisation, of Camilo Menéndez Tolosa.",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/battle> <http://dbpedia.org/resource/Spanish_Civil_War> . ?v1 <http://dbpedia.org/ontology/leader> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. <http://dbpedia.org/resource/Camilo_Menéndez_Tolosa> <http://dbpedia.org/property/office> ?v1 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/GovernmentAgency>. },"```sparql
SELECT ?militaryForce ?officeLeader WHERE {
  # Find military forces involved in the Spanish Civil War
  ?civilWar dbo:participatingMilitaryForce ?militaryForce .
  ?civilWar rdfs:label ""Spanish Civil War""@en .

  # Identify Camilo Menéndez Tolosa's office that is a government agency and an organization
  ?office dbo:employee ?camiloMenendezTolosa ;
          rdf:type ?officeType .
  ?camiloMenendezTolosa rdfs:label ""Camilo Menéndez Tolosa""@en .
  
  # Ensure the office is both a government agency and an organization
  VALUES ?officeType { dbo:GovernmentAgency dbo:Organization }

  # Find the leader of this office
  ?office dbo:leader ?officeLeader .
}
```",3,5,4,2,2,3,3,71,0,0,1,0,0.0,0
216,4,train,Give me the awardee of Australian Defence Medal.,SELECT ?result WHERE { ?result <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/Australian_Defence_Medal> . },"```sparql
SELECT ?awardee WHERE {
  ?award dbo:wikiPageRedirects db:Q123456 .
  ?award dbo:recipient ?awardee .
}
```",1,1,2,1,1,2,3,28,0,0,5,0,0.0,0
965,38,train,"Give me the parent of the child, that is a royalty, of Prince Louis of Battenberg and parent of the person born, that is a noble, as Prince George of Battenberg.","SELECT ?result WHERE { ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v3 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Prince_Louis_of_Battenberg> . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Noble>. ?v3 <http://dbpedia.org/ontology/parent> ?result . ?v0 <http://dbpedia.org/property/birthName> ""Prince George of Battenberg""@en . ?v0 <http://dbpedia.org/ontology/parent> ?result . }","```sparql
SELECT ?royalParent ?nobleParent WHERE {
  # Find Prince Louis of Battenberg's child who is royalty
  ?princeLouis dbo:child ?royalChild .
  ?princeLouis rdfs:label ""Prince Louis of Battenberg""@en .

  # Ensure the child is royalty
  OPTIONAL { 
    ?royalChild rdf:type dbo:Monarch .
  }

  # Find the parent of this royal child
  ?royalChild dbo:parent ?royalParent .

  # Identify Prince George of Battenberg and ensure he is a noble
  ?princeGeorge rdfs:label ""Prince George of Battenberg""@en .
  OPTIONAL {
    ?princeGeorge rdf:type dbo:Noble .
  }

  # Find the parent of Prince George of Battenberg
  ?princeGeorge dbo:parent ?nobleParent .
}
```",4,6,5,2,2,3,3,71,0,0,2,0,0.0,0
445,35,train,"Give me the entity in the residence, that is a country, of Anna Sharkey and entity in the award of George H. Cameron.",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/country> ?v1 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. <http://dbpedia.org/resource/Anna_Sharkey> <http://dbpedia.org/property/residence> ?v2 . ?result <http://dbpedia.org/ontology/location> ?v2 . <http://dbpedia.org/resource/George_H._Cameron> <http://dbpedia.org/property/awards> ?v1 . },"```sparql
SELECT ?annaResidenceCountry ?georgeAwardEntity WHERE {
  # Find Anna Sharkey's residence country
  ?anna dbo:residence ?residence .
  ?anna rdfs:label ""Anna Sharkey""@en .
  
  OPTIONAL { 
    ?residence dbo:country ?annaResidenceCountry .
  }
  
  # Find George H. Cameron's award entity
  ?george dbo:award ?award .
  ?george rdfs:label ""George H. Cameron""@en .
  
  OPTIONAL {
    ?award rdf:type ?awardType .
    ?award rdfs:label ?awardLabel .
    BIND(CONCAT(?awardType, "" "", ?awardLabel) AS ?georgeAwardEntity)
  }
}
```",4,5,5,2,2,3,3,71,0,22,102,0.0,0.0,0
433,39,train,Give me the associated musical artist of Bill Evans and professional in the profession of the writer of Slowhand at 70 – Live at the Royal Albert Hall.,SELECT ?result WHERE { <http://dbpedia.org/resource/Slowhand_at_70_–_Live_at_the_Royal_Albert_Hall> <http://dbpedia.org/property/writer> ?v0 . ?v0 <http://dbpedia.org/property/occupation> ?v1 . ?result <http://dbpedia.org/property/occupation> ?v1 . <http://dbpedia.org/resource/Bill_Evans> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . },"```sparql
SELECT ?associatedArtist WHERE {
  # Find Bill Evans and his associated musical artist
  ?billEvans dbo:associatedMusicalArtist ?associatedArtist .
  ?billEvans rdfs:label ""Bill Evans""@en .

  # Confirm Eric Clapton's profession as musician/singer-songwriter
  ?ericClapton dbo:profession ?profession .
  ?ericClapton rdfs:label ""Eric Clapton""@en .
  FILTER (regex(str(?profession), ""musician|singer-songwriter"", ""i""))

  # Ensure the associated artist is also a musician/singer-songwriter
  OPTIONAL {
    ?associatedArtist dbo:profession ?artistProfession .
    FILTER (regex(str(?artistProfession), ""musician|singer-songwriter"", ""i""))
  }
}
```",4,4,5,3,2,3,3,71,0,0,4,0,0.0,0
865,38,train,"Give me the father of the child, that is a politician, of Abu Ahmad Abdul Hafiz and father of the child of Abu Ahmad Abdul Hafiz.",SELECT ?result WHERE { ?v2 <http://dbpedia.org/property/father> ?result . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v2 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Abu_Ahmad_Abdul_Hafiz> . ?v1 <http://dbpedia.org/property/father> ?result . ?v1 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Abu_Ahmad_Abdul_Hafiz> . },"```sparql
SELECT ?politicianFather ?childFather WHERE {
  # Identify Abu Ahmad Abdul Hafiz
  ?abuAhmad a dbo:Person ;
            rdfs:label ""Abu Ahmad Abdul Hafiz""@en .

  # Find children who are politicians and their father
  OPTIONAL {
    ?child dbo:parent ?abuAhmad ;
           dbo:occupation ?politician .
    FILTER (CONTAINS(LCASE(str(?politician)), ""politician""))
    ?child dbo:parent ?politicianFather .
  }

  # Find any other child of Abu Ahmad Abdul Hafiz and their father
  OPTIONAL {
    ?otherChild dbo:parent ?abuAhmad ;
                dbo:parent ?childFather .
  }
}
```",4,5,5,2,2,3,3,71,0,0,1,0,0.0,0
839,34,train,"Give me the band of Matthias Röhr and band of the person born, that is a musical artist, as the persona of Kevin Russell (musician).",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/bandMember> <http://dbpedia.org/resource/Matthias_Röhr> . ?v1 <http://dbpedia.org/property/birthName> ?v2 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?v1 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . <http://dbpedia.org/resource/Kevin_Russell_(musician)> <http://xmlns.com/foaf/0.1/givenName> ?v2 . },"```sparql
SELECT ?matthiasBand ?kevinRussellBand WHERE {
  # Find the band of Matthias Röhr
  ?matthias dbo:band ?matthiasBand .
  ?matthias rdfs:label ""Matthias Röhr""@en .

  # Find the person known as Kevin Russell and their band
  ?kevin foaf:name ""Kevin Russell"" .
  ?kevin dbo:band ?kevinRussellBand .
  
  # Ensure that this person is a musical artist
  ?kevin rdf:type dbo:MusicalArtist .
}
```",4,5,5,3,2,3,3,71,0,0,1,0,0.0,0
926,18,train,Give me the child of Ahmed III and successor of Mustafa III and father of Mahmud II.,SELECT ?result WHERE { <http://dbpedia.org/resource/Ahmed_III> <http://dbpedia.org/ontology/child> ?result . <http://dbpedia.org/resource/Mahmud_II> <http://dbpedia.org/property/father> ?result . <http://dbpedia.org/resource/Mustafa_III> <http://dbpedia.org/ontology/successor> ?result . },"```sparql
SELECT ?person WHERE {
  # Find child of Ahmed III
  ?ahmedIII dbo:child ?person .
  ?ahmedIII rdfs:label ""Ahmed III""@en .

  # Find successor of Mustafa III
  OPTIONAL { 
    ?mustafaIII dbo:succeededBy ?person .
    ?mustafaIII rdfs:label ""Mustafa III""@en .
  }

  # Find father of Mahmud II
  OPTIONAL {
    ?mahmudII dbo:parent ?person .
    ?mahmudII rdfs:label ""Mahmud II""@en .
  }
}
```",3,3,4,1,3,3,3,71,1,10,0,0.09090909090909091,1.0,0.16666666666666669
495,7,train,Give me the child of the father of William I of Württemberg.,SELECT ?result WHERE { ?result <http://dbpedia.org/property/father> ?v1 . <http://dbpedia.org/resource/William_I_of_Württemberg> <http://dbpedia.org/property/father> ?v1 . },"```sparql
SELECT ?child WHERE {
  # Identify William I of Württemberg and his father
  ?williamI dbo:parent ?father .
  ?williamI rdfs:label ""William I, Duke of Württemberg""@en .

  # Find the child of this father
  ?father dbo:child ?child .
}
```",2,2,3,2,1,3,2,20,0,0,3,0,0.0,0
582,39,train,"Give me the player in Kazuaki Nagasawa and figure known as the nickname of the team, that is an organisation, of Hajime Moriyasu.",SELECT ?result WHERE { ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?v0 <http://dbpedia.org/property/nickname> ?v1 . ?result <http://dbpedia.org/property/nickname> ?v1 . <http://dbpedia.org/resource/Kazuaki_Nagasawa> <http://dbpedia.org/ontology/team> ?result . ?v0 <http://dbpedia.org/ontology/coach> <http://dbpedia.org/resource/Hajime_Moriyasu> . },"```sparql
SELECT ?playerTeam ?organizationNickname WHERE {
  # Find the team Kazuaki Nagasawa played for
  ?nagasawa dbo:playsFor ?playerTeam .
  ?nagasawa rdfs:label ""Kazuaki Nagasawa""@en .

  # Find the organization (team) associated with Hajime Moriyasu and its nickname
  ?moriyasu dbo:worksFor ?organization .
  ?moriyasu rdfs:label ""Hajime Moriyasu""@en .
  
  OPTIONAL {
    ?organization dbo:nickname ?organizationNickname .
  }
}
```",4,5,5,3,2,3,3,71,0,0,1,0,0.0,0
791,1,train,Give me the predecessor of Emperor Antoku.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/successor> <http://dbpedia.org/resource/Emperor_Antoku> . },"```sparql
SELECT ?predecessor WHERE {
  ?antoku dbo:predecessor ?predecessor .
  ?antoku rdfs:label ""Emperor Antoku""@en .
}
```",1,1,2,1,1,3,3,71,1,0,0,1.0,1.0,1.0
130,8,train,"Give me the entity in the administration, that is American, of .","SELECT ?result WHERE { ?v0 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/United_States>. ?result <http://dbpedia.org/ontology/state> ?v0 . ?v0 <http://dbpedia.org/property/governor> """"@en . }","```sparql
SELECT ?entity WHERE {
  # Find entities in the administration of the United States
  ?administration dbo:country dbr:United_States .
  ?administration dbo:member ?entity .

  # Ensure the entity is American
  ?entity dbo:nationality dbr:American .
}
```",2,3,3,2,1,3,2,20,0,0,26076,0,0.0,0
326,0,train,"Give me the person decedent at Rancho Mirage, California.","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/deathPlace> <http://dbpedia.org/resource/Rancho_Mirage,_California> . }","```sparql
SELECT ?person WHERE {
  ?person dbo:deathPlace ?place .
  ?place rdfs:label ""Rancho Mirage, California""@en .
  FILTER EXISTS { ?person a dbo:Person }
}
```",1,1,2,1,1,2,2,9,97,0,0,1.0,1.0,1.0
445,4,train,"Give me the residence, that is a country, of Anna Sharkey.",SELECT ?result WHERE { ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. <http://dbpedia.org/resource/Anna_Sharkey> <http://dbpedia.org/property/residence> ?result . },"```sparql
SELECT ?country WHERE {
  # Find Anna Sharkey's residence
  ?anna dbo:residence ?residence .
  ?anna rdfs:label ""Anna Sharkey""@en .

  # Ensure the residence is a country
  ?residence rdf:type dbo:Country .
  
  BIND(?residence AS ?country)
}
```",1,2,2,1,1,3,3,71,2,0,0,1.0,1.0,1.0
124,35,train,"Give me the commander in the war, that is a societal event and a military conflict, of A Field Battery, Royal Australian Artillery and military force of the force, that is a societal event and a military conflict, of Herbert Kitchener, 1st Earl Kitchener.","SELECT ?result WHERE { ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?v1 <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Herbert_Kitchener,_1st_Earl_Kitchener> . <http://dbpedia.org/resource/A_Field_Battery,_Royal_Australian_Artillery> <http://dbpedia.org/ontology/battle> ?v2 . ?v2 <http://dbpedia.org/ontology/commander> ?result . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?result <http://dbpedia.org/ontology/battle> ?v1 . }","```sparql
SELECT ?commander1 ?commander2 WHERE {
  # Find the war involving A Field Battery, Royal Australian Artillery
  ?battery dbo:participatedIn ?war .
  ?battery rdfs:label ""A Field Battery, Royal Australian Artillery""@en .

  # Find the commander of this unit in that war
  ?unitCommander dbo:commanded ?battery .
  ?unitCommander dbo:commandedDuring ?war .
  
  BIND(?unitCommander AS ?commander1)

  # Find the military force commanded by Herbert Kitchener during a war
  ?kitchener rdfs:label ""Herbert Kitchener, 1st Earl Kitchener""@en .
  ?force dbo:commandedBy ?kitchener .
  
  # Ensure it is a societal event and military conflict
  ?war2 dbo:participatedIn ?force .
  FILTER (regex(str(?war2), ""War"", ""i""))

  # Find the commander of this force in that war
  ?forceCommander dbo:commanded ?force .
  ?forceCommander dbo:commandedDuring ?war2 .

  BIND(?forceCommander AS ?commander2)
}
```",4,8,5,2,2,3,3,71,0,0,9,0,0.0,0
326,5,train,"Give me the award, that is a country, of Adelbert Cronkhite.",SELECT ?result WHERE { ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. <http://dbpedia.org/resource/Adelbert_Cronkhite> <http://dbpedia.org/property/awards> ?result . },"```sparql
SELECT ?award WHERE {
  # Find Adelbert Cronkhite
  ?cronkhite dbo:birthName ""Adelbert Cronkhite""@en .
  
  # Find awards associated with Adelbert Cronkhite
  ?cronkhite dbo:honoraryTitle ?award .

  # Ensure the award is also a country
  ?award rdf:type dbpedia-owl:Award .
  ?award rdf:type dbpedia-owl:Country .
}
```",1,2,2,1,1,3,2,20,0,0,1,0,0.0,0
47,0,train,Give me the office of Suvendu Adhikari.,SELECT ?result WHERE { <http://dbpedia.org/resource/Suvendu_Adhikari> <http://dbpedia.org/property/office> ?result . },"```sparql
SELECT ?office WHERE {
  ?person rdfs:label ""Suvendu Adhikari""@en .
  ?person dbo:office ?office .
}
```",1,1,2,1,1,3,3,71,0,0,8,0,0.0,0
417,27,train,"Give me the child of the child, that is a royalty, of the parent, that is a royalty, of Alexandrine of Mecklenburg-Schwerin.",SELECT ?result WHERE { <http://dbpedia.org/resource/Alexandrine_of_Mecklenburg-Schwerin> <http://dbpedia.org/ontology/parent> ?v1 . ?result <http://dbpedia.org/ontology/parent> ?v2 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v2 <http://dbpedia.org/property/father> ?v1 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. },"```sparql
SELECT ?grandchild WHERE {
  # Step 1: Find Alexandrine and her royal parent
  ?alexandrine dbo:parent ?royalParent .
  ?alexandrine rdfs:label ""Alexandrine of Mecklenburg-Schwerin""@en .

  # Ensure the parent is royalty
  ?royalParent rdf:type dbo:RoyalFamilyMember .

  # Step 2: Find the child of this royal parent who is also royalty
  ?royalParent dbo:child ?royalChild .
  ?royalChild rdf:type dbo:RoyalFamilyMember .

  # Step 3: Identify the child of this second royal individual
  ?royalChild dbo:child ?grandchild .
}
```",3,5,4,3,1,3,3,71,0,0,8,0,0.0,0
216,0,train,Give me the player in Igor Bišćan.,SELECT ?result WHERE { <http://dbpedia.org/resource/Igor_Bišćan> <http://dbpedia.org/ontology/team> ?result . },"```sparql
SELECT ?position WHERE {
  ?bišćan a dbo:FootballPlayer .
  ?bišćan rdfs:label ""Igor Bišćan""@en .
  ?bišćan dbo:position ?position .
}
```",1,1,2,1,1,3,3,71,0,0,6,0,0.0,0
136,6,train,Give me the landmark at elevation of the award of Bret Anthony Johnston.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/elevation> ?v0 . <http://dbpedia.org/resource/Bret_Anthony_Johnston> <http://dbpedia.org/property/awards> ?v0 . },"```sparql
SELECT ?landmark ?elevation WHERE {
  # Find Bret Anthony Johnston and his award
  ?johnston dbo:award ?award .
  ?johnston rdfs:label ""Bret Anthony Johnston""@en .

  # Link the award to a landmark, if any
  OPTIONAL { 
    ?award dbo:location ?landmark .
  }

  # Get elevation of the landmark
  OPTIONAL {
    ?landmark dbo:elevationAboveSeaLevel ?elevation .
  }
}
```",2,2,3,2,1,2,2,9,0,0,909,0,0.0,0
892,4,train,Give me the profession of Henri Crolla.,SELECT ?result WHERE { <http://dbpedia.org/resource/Henri_Crolla> <http://dbpedia.org/property/occupation> ?result . },"```sparql
SELECT ?profession WHERE {
  ?person rdfs:label ""Henri Crolla""@en .
  ?person dbo:occupation ?profession .
}
```",1,1,2,1,1,3,3,71,1,0,1,1.0,0.5,0.6666666666666666
124,20,train,"Give me the military force of the war, that is an event and a military conflict and a societal event, of Frank Rhodes (British Army officer) and commander in Mahdist War.",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/battle> ?v2 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. <http://dbpedia.org/resource/Frank_Rhodes_(British_Army_officer)> <http://dbpedia.org/ontology/battle> ?v2 . <http://dbpedia.org/resource/Mahdist_War> <http://dbpedia.org/ontology/commander> ?result . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. },"```sparql
SELECT ?militaryForce WHERE {
  # Find Frank Rhodes as a British Army officer involved in the Mahdist War
  ?frankRhodes dbo:occupation ""British Army officer""@en .
  ?francRhodes foaf:name ""Frank Rhodes""@en .
  
  # Identify his role in the Mahdist War
  ?mahdistWar dbo:participant ?frankRhodes ;
             rdf:type dbo:MilitaryConflict, dbo:Event, dbo:SocietalEvent ;
             rdfs:label ""Mahdist War""@en .

  # Find the military force commanded by Frank Rhodes during the Mahdist War
  ?commandRole dbo:agent ?frankRhodes ;
               dbo:militaryForce ?militaryForce ;
               dbo:event ?mahdistWar .
}
```",3,6,4,2,2,3,3,71,0,0,3,0,0.0,0
216,5,train,Give me the designer of Woolfe: The Red Hood Diaries.,SELECT ?result WHERE { <http://dbpedia.org/resource/Woolfe:_The_Red_Hood_Diaries> <http://dbpedia.org/property/designer> ?result . },"```sparql
SELECT ?designer WHERE {
  ?game rdfs:label ""Woolfe: The Red Hood Diaries""@en .
  ?game dbo:creator ?designer .
}
```",1,1,2,1,1,2,3,28,0,0,4,0,0.0,0
582,22,train,Give me the figure known as the nickname of Japan national football team and reference to Japan.,"SELECT ?result WHERE { ?result <http://dbpedia.org/property/nickname> ?v1 . ?result <http://xmlns.com/foaf/0.1/name> ""Japan""@en . <http://dbpedia.org/resource/Japan_national_football_team> <http://dbpedia.org/property/nickname> ?v1 . }","```sparql
SELECT ?team ?commonName ?reference WHERE {
  # Find the Japan National Football Team
  ?team rdfs:label ""Japan national football team""@en .
  
  # Retrieve its common name (nickname)
  ?team dbo:commonName ?commonName .

  # Optional: Look for any reference or description that ties the nickname to Japan
  OPTIONAL {
    ?team dbo:description ?reference .
    FILTER regex(?reference, ""Japan"", ""i"")
  }
}
```",3,3,4,2,2,3,3,71,0,0,1,0,0.0,0
47,22,train,Give me the office of the awardee of Padma Vibhushan and office of Suvendu Adhikari.,SELECT ?result WHERE { ?v1 <http://dbpedia.org/property/office> ?result . <http://dbpedia.org/resource/Suvendu_Adhikari> <http://dbpedia.org/property/office> ?result . ?v1 <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/Padma_Vibhushan> . },"```sparql
SELECT ?awardeeOffice ?adhikariOffice WHERE {
  # Office of a known recent Padma Vibhushan awardee, e.g., ""Lata Mangeshkar""
  OPTIONAL {
    ?awardee dbo:award ""Padma Vibhushan"" .
    ?awardee rdfs:label ""Lata Mangeshkar""@en .
    ?awardee dbo:office ?awardeeOffice .
  }

  # Office of Suvendu Adhikari
  OPTIONAL {
    ?adhikari rdfs:label ""Suvendu Adhikari""@en .
    ?adhikari dbo:office ?adhikariOffice .
  }
}
```",3,3,4,2,2,3,3,71,0,0,2,0,0.0,0
443,6,train,Give me the birthplace of Ulf Lundell and landmark at elevation of 28.,"SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/elevation> ""28""^^<http://www.w3.org/2001/XMLSchema#integer> . <http://dbpedia.org/resource/Ulf_Lundell> <http://dbpedia.org/ontology/birthPlace> ?result . }","```sparql
# Query to find the birthplace of Ulf Lundell
SELECT ?birthPlace WHERE {
  ?ulfdbo:birthPlace ?birthPlace .
  ?ulf rdfs:label ""Ulf Lundell""@en .
}

UNION

# Query to find a landmark at an elevation of 28 (assuming meters)
SELECT ?landmark WHERE {
  ?landmark dbo:elevationAboveSeaLevel ?elevation .
  FILTER (?elevation = 28) .
}
```",2,2,3,1,2,2,3,28,0,0,1,0,0.0,0
353,3,train,"Give me the country of Moskovsky City District, Nizhny Novgorod.","SELECT ?result WHERE { <http://dbpedia.org/resource/Moskovsky_City_District,_Nizhny_Novgorod> <http://dbpedia.org/ontology/country> ?result . }","```sparql
SELECT ?country WHERE {
  ?district rdfs:label ""Moskovsky City District, Nizhny Novgorod""@en .
  ?district dbo:country ?country .
}
```",1,1,2,1,1,2,2,9,1,0,0,1.0,1.0,1.0
926,27,train,"Give me the child of the father, that is a royalty, of the parent, that is a royalty, of Beyhan Sultan (daughter of Mustafa III).",SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v1 <http://dbpedia.org/property/father> ?v0 . ?v0 <http://dbpedia.org/ontology/child> ?result . <http://dbpedia.org/resource/Beyhan_Sultan_(daughter_of_Mustafa_III)> <http://dbpedia.org/ontology/parent> ?v1 . },"```sparql
SELECT ?child WHERE {
  # Beyhan Sultan is a child of Mustafa III
  ?sultan dbo:parent ?mustafaIII .
  ?sultan rdfs:label ""Beyhan Sultan""@en .

  # Mustafa III is the parent and must be royalty
  ?mustafaIII rdf:type dbo:Monarch .
  
  # Find father of Mustafa III who is also royalty
  ?mustafaIIIFather dbo:parent ?mustafaIII .
  ?mustafaIIIFather rdf:type dbo:Monarch .

  # Find a child of this royal father (Mustafa II's child)
  ?child dbo:parent ?mustafaIIIFather .
  FILTER (?child != ?mustafaIII) # Exclude Mustafa III himself
}
```",3,5,4,3,1,3,3,71,0,0,11,0,0.0,0
582,14,train,Give me the figure known as the nickname of Japan national football team.,SELECT ?result WHERE { ?result <http://dbpedia.org/property/nickname> ?v1 . <http://dbpedia.org/resource/Japan_national_football_team> <http://dbpedia.org/property/nickname> ?v1 . },"```sparql
SELECT ?nick WHERE {
  ?team rdfs:label ""Japan national football team""@en .
  ?team dbo:nickName ?nick .
}
```",2,2,3,2,1,3,3,71,0,0,1,0,0.0,0
507,8,train,Give me the profession of Guy Ferland.,SELECT ?result WHERE { <http://dbpedia.org/resource/Guy_Ferland> <http://dbpedia.org/property/occupation> ?result . },"```sparql
SELECT ?profession WHERE {
  ?person rdfs:label ""Guy Ferland""@en .
  ?person dbo:profession ?profession .
}
```",1,1,2,1,1,3,3,71,0,0,1,0,0.0,0
987,16,train,"Who is the actor of the show, that is a film, with Emir Hadžihafizbegović?",SELECT ?result WHERE { ?v0 <http://dbpedia.org/property/starring> ?result . ?v0 <http://dbpedia.org/ontology/starring> <http://dbpedia.org/resource/Emir_Hadžihafizbegović> . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Film>. },"```sparql
SELECT DISTINCT ?actor WHERE {
  # Find films featuring Emir Hadžihafizbegović
  ?film dbo:starringEmirHadžihafizbegović dbp:Emir_Hadžihafizbegović .
  
  # Check if the film has an adaptation as a show
  OPTIONAL {
    ?film dbo:adaptation ?show .
    ?show rdf:type dbo:TelevisionSeries .
    
    # Find actors in the show
    ?show dbo:starring ?actor .
  }
}
```",2,3,3,2,1,3,3,71,0,0,54,0,0.0,0
102,9,train,"Give me the player in the member, that is a soccer player, of England women's national football team.",SELECT ?result WHERE { ?v0 <http://dbpedia.org/ontology/team> <http://dbpedia.org/resource/England_women's_national_football_team> . ?v0 <http://dbpedia.org/ontology/team> ?result . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerPlayer>. },"```sparql
SELECT ?player WHERE {
  # Find members of the England women's national football team
  ?team dbo:member ?player .
  
  # Ensure the team is specifically the England women's national football team
  ?team rdfs:label ""England women's national football team""@en .

  # Filter players who are identified as soccer players by their occupation
  ?player dbo:occupation ?occupation .
  FILTER (regex(str(?occupation), ""soccer player"", ""i""))
}
```",2,3,3,2,1,3,2,20,0,0,180,0,0.0,0
826,25,train,"Give me the successor of Louis II, Grand Duke of Hesse and predecessor of the parent of Prince Friedrich of Hesse and by Rhine.","SELECT ?result WHERE { <http://dbpedia.org/resource/Louis_II,_Grand_Duke_of_Hesse> <http://dbpedia.org/ontology/successor> ?result . <http://dbpedia.org/resource/Prince_Friedrich_of_Hesse_and_by_Rhine> <http://dbpedia.org/ontology/parent> ?v1 . ?result <http://dbpedia.org/ontology/successor> ?v1 . }","```sparql
SELECT ?commonIndividual WHERE {
  # Step 1: Find Louis II, Grand Duke of Hesse and his successor
  ?louis2 dbo:successor ?successor .
  ?louis2 rdfs:label ""Louis II, Grand Duke of Hesse""@en .

  # Step 2: Identify Prince Friedrich of Hesse and by Rhine and his parent
  ?friedrich dbo:parent ?parentFriedrich .
  ?friedrich rdfs:label ""Prince Friedrich of Hesse and by Rhine""@en .

  # Step 3: Find the predecessor of the parent of Prince Friedrich
  ?parentFriedrich dbo:predecessor ?predecessorParentFriedrich .

  # Step 4: Identify the common individual who is both successor of Louis II and predecessor of the parent of Prince Friedrich
  FILTER (?successor = ?predecessorParentFriedrich)
  BIND(?successor AS ?commonIndividual)
}
```",3,3,4,2,2,3,3,71,1,0,0,1.0,1.0,1.0
527,13,train,"Give me the actor of the movie, that is a work and English and a television show, with the professional in Actor.","SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?v1 <http://dbpedia.org/property/starring> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/TelevisionShow>. ?v1 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/United_Kingdom>. ?v0 <http://dbpedia.org/property/occupation> ""Actor""@en . ?v1 <http://dbpedia.org/property/starring> ?v0 . }","```sparql
SELECT ?actor WHERE {
  # Identify the movie that is a work, English, and associated with a TV show
  ?movie dbo:language ""English"" .
  ?movie rdf:type dbo:Film .
  ?movie dbo:genre ?workGenre .
  FILTER (regex(str(?workGenre), ""Work"", ""i""))
  
  OPTIONAL {
    ?tvShow dbo:basedOn ?movie .
    ?tvShow rdf:type dbo:TelevisionSeries .
  }
  
  # Find the actor who played a professional role as an Actor
  ?actor dbo:profession dbr:Actor .
  ?actor dbo:actedIn ?movie .
}
```",3,6,4,3,1,3,2,20,0,0,1472,0,0.0,0
216,10,train,Give me the player in Igor Bišćan and team of Ognjen Vukojević.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/coach> <http://dbpedia.org/resource/Ognjen_Vukojević> . <http://dbpedia.org/resource/Igor_Bišćan> <http://dbpedia.org/ontology/team> ?result . },"```sparql
SELECT ?bišćanTeam ?vukojevićTeam WHERE {
  # Find the sports team Igor Bišćan played for
  ?bišćan dbo:spouseOrPartner ?team .
  ?bišćan rdfs:label ""Igor Bišćan""@en .
  
  # Find the team associated with Ognjen Vukojević, likely as a manager or coach
  OPTIONAL {
    ?vukojević dbo:managerOf ?team .
    ?vukojević rdfs:label ""Ognjen Vukojević""@en .
  }
}
```",2,2,3,1,2,3,3,71,0,0,1,0,0.0,0
136,0,train,Give me the region coded as 03834.,"SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/areaCode> ""03834"" . }","```sparql
SELECT ?region WHERE {
  ?entity dbp:prefectureCode ""03834"" .
  ?entity rdfs:label ?region .
}
```",1,1,2,1,1,2,2,9,0,0,9,0,0.0,0
465,1,train,Give me the spouse of Archduchess Barbara of Austria.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/spouse> <http://dbpedia.org/resource/Archduchess_Barbara_of_Austria> . },"```sparql
SELECT ?spouse WHERE {
  ?barbara rdfs:label ""Barbara of Austria""@en .
  ?barbara dbo:spouse ?spouse .
}
```",1,1,2,1,1,3,3,71,0,0,1,0,0.0,0
791,15,train,"Give me the spouse, that is a royalty, of the reference to Emperor Takakura.","SELECT ?result WHERE { ?v1 <http://xmlns.com/foaf/0.1/name> ""Emperor Takakura""@en . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?result <http://dbpedia.org/ontology/spouse> ?v1 . }","```sparql
SELECT ?spouse WHERE {
  # Identify Emperor Takakura
  ?takakura rdfs:label ""Emperor Takakura""@en .
  
  # Find his spouse
  ?takakura dbo:spouse ?spouse .

  # Ensure the spouse is royalty by checking their label or type
  OPTIONAL {
    ?spouse rdf:type dbo:Monarch .
  }
}
```",2,3,3,2,1,3,3,71,1,0,0,1.0,1.0,1.0
926,9,train,Give me the successor of Mustafa III and father of Mahmud II.,SELECT ?result WHERE { <http://dbpedia.org/resource/Mahmud_II> <http://dbpedia.org/property/father> ?result . <http://dbpedia.org/resource/Mustafa_III> <http://dbpedia.org/ontology/successor> ?result . },"```sparql
SELECT ?successor WHERE {
  # Find the successor of Mustafa III
  ?mustafaIII dbo:succeededBy ?successor .
  ?mustafaIII rdfs:label ""Mustafa III""@en .

  # Ensure this successor is also the father of Mahmud II
  ?successor dbo:parent ?mahmudII .
  ?mahmudII rdfs:label ""Mahmud II""@en .
}
```",2,2,3,1,2,3,3,71,0,0,1,0,0.0,0
645,1,train,Give me the military force of Spanish Civil War.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/battle> <http://dbpedia.org/resource/Spanish_Civil_War> . },"```sparql
SELECT ?force WHERE {
  # Find entities involved in the Spanish Civil War
  ?force dbo:participatedIn ?event .
  
  # Ensure the event is the Spanish Civil War
  ?event rdfs:label ""Spanish Civil War""@en .

  # Filter to include only military forces
  FILTER (
    regex(str(?force), ""Republican"", ""i"") ||
    regex(str(?force), ""Nationalist"", ""i"")
  )
}
```",1,1,2,1,1,3,3,71,0,0,514,0,0.0,0
353,1,train,Give me the entity in Russia.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Russia> . },"```sparql
SELECT ?capital WHERE {
  ?entity dbo:country dbr:Russia .
  ?entity dbo:capital ?capital .
}
```",1,1,2,1,1,2,2,9,0,0,29927,0,0.0,0
83,5,train,Give me the player in the person born on 1995-07-07.,"SELECT ?result WHERE { ?v0 <http://dbpedia.org/ontology/birthDate> ""1995-07-07""^^<http://www.w3.org/2001/XMLSchema#date> . ?v0 <http://dbpedia.org/ontology/team> ?result . }","```sparql
SELECT ?person ?label WHERE {
  ?person dbo:birthDate ""1995-07-07""^^xsd:date .
  ?person rdfs:label ?label .
}
```",2,2,3,2,1,2,2,9,0,68,133,0.0,0.0,0
508,9,train,"Give me the commander, that is a politician, in the war, that is a military conflict and a societal event and an event, of Hayao Tada.",SELECT ?result WHERE { ?v0 <http://dbpedia.org/ontology/commander> ?result . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. <http://dbpedia.org/resource/Hayao_Tada> <http://dbpedia.org/ontology/battle> ?v0 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. },"```sparql
SELECT ?commander WHERE {
  # Find Hayao Tada
  ?tada dbo:birthName ""Hayao Tada""@en .
  
  # Identify wars he was involved in
  ?war dbo:participant ?tada ;
       a dbo:MilitaryConflict ;
       a dbo:SocietalEvent ;
       a dbo:Event .

  # Find the commander of that war
  ?war dbo:commander ?commander .

  # Ensure the commander is also a politician
  ?commander dbo:occupation dbo:Politician .
}
```",2,6,3,2,1,3,2,20,0,0,28,0,0.0,0
839,12,train,Give me the band of Peter Schorowsky and band of Matthias Röhr.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/bandMember> <http://dbpedia.org/resource/Matthias_Röhr> . ?result <http://dbpedia.org/ontology/bandMember> <http://dbpedia.org/resource/Peter_Schorowsky> . },"```sparql
SELECT ?person ?band WHERE {
  # Find Peter Schorowsky and his band
  OPTIONAL {
    ?person rdfs:label ""Peter Schorowsky""@en .
    ?person dbo:musicalArtist ?band .
  }
  
  # Find Matthias Röhr and his band
  OPTIONAL {
    ?person rdfs:label ""Matthias Röhr""@en .
    ?person dbo:musicalArtist ?band .
  }
}
```",2,2,3,1,2,3,3,71,0,0,1,0,0.0,0
573,7,train,Give me the work of John Quincy Adams.,SELECT ?result WHERE { ?result <http://dbpedia.org/property/author> <http://dbpedia.org/resource/John_Quincy_Adams> . },"```sparql
SELECT ?work WHERE {
  ?person rdfs:label ""John Quincy Adams""@en .
  ?person dbo:work ?work .
}
```

This query:
- Uses `rdfs:label` to find the DBpedia resource for John Quincy Adams.
- Utilizes `dbo:work` to retrieve any works associated with him.",1,1,2,1,1,3,3,71,0,0,1,0,0.0,0
5,14,train,"Give me the entity in the award of the associated musical artist, that is a band, of Rubén Colón Tarrats.",SELECT ?result WHERE { ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Band>. ?v0 <http://dbpedia.org/property/awards> ?v2 . ?result <http://dbpedia.org/ontology/country> ?v2 . <http://dbpedia.org/resource/Rubén_Colón_Tarrats> <http://dbpedia.org/ontology/associatedMusicalArtist> ?v0 . },"```sparql
SELECT ?awardEntity WHERE {
  # Identify Rubén Colón Tarrats
  ?ruben dbo:birthName ""Rubén Colón Tarrats""@en .
  
  # Find associated musical artist or band
  OPTIONAL { 
    ?ruben dbo:associatedBand ?band .
  }
  
  # Retrieve awards of the band
  OPTIONAL {
    ?band dbo:award ?award .
    
    # Extract entities related to the award
    ?award dbo:entity ?awardEntity .
  }
}
```",3,4,4,3,1,3,2,20,0,0,20990,0,0.0,0
495,8,train,Give me the father of the child of Princess Charlotte of Saxe-Hildburghausen.,SELECT ?result WHERE { ?v0 <http://dbpedia.org/ontology/parent> <http://dbpedia.org/resource/Princess_Charlotte_of_Saxe-Hildburghausen> . ?v0 <http://dbpedia.org/property/father> ?result . },"```sparql
SELECT DISTINCT ?father WHERE {
  # Find Princess Charlotte and her children
  ?charlotte dbo:child ?child .
  ?charlotte rdfs:label ""Princess Charlotte of Saxe-Hildburghausen""@en .

  # For each child, find their father
  ?child dbo:parent ?father .
}
```",2,2,3,2,1,3,2,20,1,1,0,0.5,1.0,0.6666666666666666
839,38,train,"Give me the band of the member of Böhse Onkelz and band of the band, that is a musical artist, of Charlie Huhn.",SELECT ?result WHERE { <http://dbpedia.org/resource/Charlie_Huhn> <http://dbpedia.org/ontology/associatedMusicalArtist> ?v2 . <http://dbpedia.org/resource/Böhse_Onkelz> <http://dbpedia.org/ontology/bandMember> ?v3 . ?result <http://dbpedia.org/ontology/bandMember> ?v3 . ?result <http://dbpedia.org/ontology/bandMember> ?v2 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. },"```sparql
SELECT ?boMemberBand ?chBand ?relatedBand WHERE {
  # Find a member of Böhse Onkelz
  ?boMember dbo:memberOfBand dbr:Böhse_Onkelz .
  
  # Find the band associated with this member (if any other than Böhse Onkelz)
  OPTIONAL { 
    ?boMember dbo:band ?boMemberBand .
    FILTER (?boMemberBand != dbr:Böhse_Onkelz)
  }
  
  # Find the band associated with Charlie Huhn
  ?chBand dbo:member dbr:Charlie_Huhn .
  
  # Check if this band is a musical artist and find another related band
  OPTIONAL {
    ?chBand rdf:type dbo:MusicalArtist .
    ?relatedBand dbo:bandMember ?chBand .
    FILTER (?relatedBand != ?chBand)
  }
}
```",4,5,5,2,2,3,3,71,0,0,1,0,0.0,0
773,18,train,Give me the parent of Carloman of Bavaria and spouse of Louis the German and parent of Charles the Fat.,SELECT ?result WHERE { <http://dbpedia.org/resource/Louis_the_German> <http://dbpedia.org/ontology/spouse> ?result . <http://dbpedia.org/resource/Charles_the_Fat> <http://dbpedia.org/ontology/parent> ?result . ?result <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Carloman_of_Bavaria> . },"```sparql
SELECT ?parentOfCarloman ?spouseOfLouisTheGerman ?parentOfCharlesTheFat WHERE {
  # Find Carloman of Bavaria's parent
  ?carloman dbo:parent ?parentOfCarloman .
  ?carloman rdfs:label ""Carloman, Duke of Bavaria""@en .

  # Find Louis the German's spouse
  ?louisTheGerman dbo:spouse ?spouseOfLouisTheGerman .
  ?louisTheGerman rdfs:label ""Louis the German""@en .

  # Find Charles the Fat's parent
  ?charlesTheFat dbo:parent ?parentOfCharlesTheFat .
  ?charlesTheFat rdfs:label ""Charles the Fat""@en .
}
```",3,3,4,1,3,3,3,71,0,0,1,0,0.0,0
445,17,train,Give me the award of the commander in Battle of Saint-Mihiel.,SELECT ?result WHERE { <http://dbpedia.org/resource/Battle_of_Saint-Mihiel> <http://dbpedia.org/ontology/commander> ?v1 . ?v1 <http://dbpedia.org/property/awards> ?result . },"```sparql
SELECT ?person WHERE {
  # Find entities related to the Battle of Saint-Mihiel
  ?battle dbo:wikiPageRedirects dbpedia:Battle_of_Saint-Mihiel .
  
  # Identify individuals associated with a command role in this battle
  ?battle dbo:commander ?person .
  
  # Ensure the person has a title or recognition as Commander
  OPTIONAL {
    ?person dbo:title ""Commander""@en .
  }
}
```",2,2,3,2,1,3,3,71,0,0,26,0,0.0,0
839,1,train,Give me the band of Peter Schorowsky.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/bandMember> <http://dbpedia.org/resource/Peter_Schorowsky> . },"```sparql
SELECT ?band WHERE {
  ?person rdfs:label ""Peter Schorowsky""@en .
  OPTIONAL { 
    ?person dbo:band ?band .
  }
}
```",1,1,2,1,1,3,3,71,0,0,1,0,0.0,0
445,32,train,"Give me the entity in the residence, that is a country, of Anna Sharkey and death place of the awardee of Royal Astronomical Society.",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/location> ?v1 . <http://dbpedia.org/resource/Anna_Sharkey> <http://dbpedia.org/property/residence> ?v1 . ?v3 <http://dbpedia.org/ontology/deathPlace> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. ?v3 <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/Royal_Astronomical_Society> . },"```sparql
SELECT ?country WHERE {
  # Find Anna Sharkey's residence that is a country
  ?annaSharkey dbo:residence ?residence .
  ?annaSharkey rdfs:label ""Anna Sharkey""@en .
  ?residence rdf:type dbo:Country .
  
  # Find death place of an awardee of the Royal Astronomical Society
  ?awardee dbo:awardReceived ?rasAward .
  ?rasAward rdfs:label ""Royal Astronomical Society Award""@en .
  ?awardee dbo:deathPlace ?deathPlace .
  
  # Check if both places are the same country
  FILTER (?residence = ?deathPlace)
  BIND(?residence AS ?country)
}
```",4,5,5,2,2,3,3,71,0,0,1,0,0.0,0
935,6,train,Give me the death place of Abdul Raziq Bugti and headquarter of Provincial Assembly of Balochistan.,SELECT ?result WHERE { <http://dbpedia.org/resource/Abdul_Raziq_Bugti> <http://dbpedia.org/ontology/deathPlace> ?result . <http://dbpedia.org/resource/Provincial_Assembly_of_Balochistan> <http://dbpedia.org/ontology/location> ?result . },"```sparql
SELECT ?deathPlace ?headquarters WHERE {
  # Find Abdul Raziq Bugti's death place
  OPTIONAL {
    ?bugti dbo:deathPlace ?deathPlace .
    ?bugti rdfs:label ""Abdul Raziq Bugti""@en .
  }

  # Find the headquarters of Provincial Assembly of Balochistan
  OPTIONAL {
    ?assembly dbo:headquarters ?headquarters .
    ?assembly rdfs:label ""Provincial Assembly of Balochistan""@en .
  }
}
```",2,2,3,1,2,3,2,20,1,2,0,0.3333333333333333,1.0,0.5
166,2,train,"Give me the force, that is an event and a societal event and a military conflict, of Manuel Hedilla.",SELECT ?result WHERE { ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?result <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Manuel_Hedilla> . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. },"```sparql
SELECT ?event WHERE {
  ?hedilla dbo:associatedWithEvent ?event .
  ?hedilla rdfs:label ""Manuel Hedilla""@en .

  ?event rdf:type dbpedia-owl:SocietalEvent .
  ?event rdf:type dbpedia-owl:MilitaryConflict .
}
```",1,4,2,1,1,3,2,20,0,0,1,0,0.0,0
36,11,train,Give me the person born as the birth name of Ayo Makun.,SELECT ?result WHERE { <http://dbpedia.org/resource/Ayo_Makun> <http://dbpedia.org/property/birthName> ?v1 . ?result <http://dbpedia.org/property/birthName> ?v1 . },"```sparql
SELECT ?birthName WHERE {
  ?person rdfs:label ""Ayo Makun""@en .
  ?person dbo:birthName ?birthName .
}
```",2,2,3,2,1,2,3,28,0,1,1,0.0,0.0,0
465,29,train,"Give me the successor of Ercole II d'Este, Duke of Ferrara and spouse of the child, that is a royalty, of Ferdinand I, Holy Roman Emperor and successor of Renée of France.","SELECT ?result WHERE { <http://dbpedia.org/resource/Ercole_II_d'Este,_Duke_of_Ferrara> <http://dbpedia.org/ontology/successor> ?result . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. <http://dbpedia.org/resource/Renée_of_France> <http://dbpedia.org/ontology/successor> ?result . ?result <http://dbpedia.org/ontology/spouse> ?v3 . <http://dbpedia.org/resource/Ferdinand_I,_Holy_Roman_Emperor> <http://dbpedia.org/ontology/child> ?v3 . }","```sparql
SELECT ?successor WHERE {
  # Find successor of Ercole II d'Este, Duke of Ferrara
  ?ercole dbo:succession ?successor .
  ?ercole rdfs:label ""Ercole II d'Este""@en .

  # Find a royal child of Ferdinand I and their spouse
  OPTIONAL {
    ?ferdinand dbo:child ?royalChild .
    ?ferdinand rdfs:label ""Ferdinand I, Holy Roman Emperor""@en .
    FILTER (regex(str(?royalChild), ""Royal"", ""i""))
    
    ?royalChild dbo:spouse ?spouse .
  }

  # Find successor of Renée of France
  OPTIONAL {
    ?renee dbo:succession ?successorRenée .
    ?renee rdfs:label ""Renée of France""@en .
  }
  
  FILTER (?successor = ?successorRenée)
}
```",4,5,5,2,3,3,3,71,0,0,1,0,0.0,0
791,9,train,Give me the spouse of Taira no Tokuko and predecessor of Emperor Antoku.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/spouse> <http://dbpedia.org/resource/Taira_no_Tokuko> . ?result <http://dbpedia.org/ontology/successor> <http://dbpedia.org/resource/Emperor_Antoku> . },"```sparql
SELECT ?spouse WHERE {
  # Find the spouse of Taira no Tokuko
  ?tokuko dbo:spouse ?spouse .
  ?tokuko rdfs:label ""Taira no Tokuko""@en .

  # Ensure this person is also the predecessor of Emperor Antoku
  OPTIONAL {
    ?antoku dbo:predecessor ?spouse .
    ?antoku rdfs:label ""Emperor Antoku""@en .
  }
}
```",2,2,3,1,2,3,3,71,1,0,0,1.0,1.0,1.0
582,37,train,"Give me the figure known as --10-19 and player in the father, that is an athlete and a soccer manager and a sports manager, of the child of Kazuaki Nagasawa.","SELECT ?result WHERE { ?v0 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Kazuaki_Nagasawa> . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Athlete>. ?result <http://dbpedia.org/property/nickname> ""--10-19""^^<http://www.w3.org/2001/XMLSchema#gMonthDay> . ?v0 <http://dbpedia.org/property/father> ?v3 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsManager>. ?v3 <http://dbpedia.org/ontology/team> ?result . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerManager>. }","```sparql
SELECT ?father WHERE {
  # Find Kazuaki Nagasawa
  ?nagasawa rdfs:label ""Kazuaki Nagasawa""@en .
  
  # Find his child
  OPTIONAL { 
    ?child dbo:parent ?nagasawa .
  }
  
  # Identify the father of this child who is an athlete, soccer manager, and sports manager
  OPTIONAL {
    ?father dbo:parent ?child .
    ?father rdf:type dbo:Athlete ;
            dbo:sportManagerOf ?someTeam ;
            dbo:managerialPosition ""Soccer Manager""@en .
  }
}
```",4,7,5,3,2,3,3,71,0,0,1,0,0.0,0
41,0,train,Give me the party of Mark Durkan.,SELECT ?result WHERE { <http://dbpedia.org/resource/Mark_Durkan> <http://dbpedia.org/ontology/party> ?result . },"```sparql
SELECT ?party WHERE {
  ?durkan rdfs:label ""Mark Durkan""@en .
  ?durkan dbo:partyAffiliation ?party .
}
```",1,1,2,1,1,2,3,28,0,0,2,0,0.0,0
456,1,train,Give me the professional in .,"SELECT ?result WHERE { ?result <http://dbpedia.org/property/occupation> """"@en . }","```sparql
# This query cannot be completed as the question does not specify an individual.
```",1,1,2,1,1,3,3,71,0,0,39640,0,0.0,0
839,15,train,"Give me the person born, that is a musical artist, as the persona of Kevin Russell (musician).",SELECT ?result WHERE { ?result <http://dbpedia.org/property/birthName> ?v1 . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. <http://dbpedia.org/resource/Kevin_Russell_(musician)> <http://xmlns.com/foaf/0.1/givenName> ?v1 . },"```sparql
SELECT ?person ?birthDate WHERE {
  # Find the entity associated with Kevin Russell (musician)
  ?kevinRussell rdfs:label ""Kevin Russell (musician)""@en .
  
  # Identify the real person behind the persona
  ?kevinRussell dbo:alias ?realPerson .
  
  # Ensure the real person is a musical artist
  ?realPerson rdf:type dbo:MusicalArtist .
  
  # Retrieve birth details of the real person
  ?realPerson dbo:birthDate ?birthDate .
}
```",2,3,3,2,1,3,3,71,0,0,1,0,0.0,0
329,11,train,"Give me the entity in the birthplace, that is an organisation and a country, of Robert Bates (loyalist).",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/country> ?v1 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. <http://dbpedia.org/resource/Robert_Bates_(loyalist)> <http://dbpedia.org/ontology/birthPlace> ?v1 . },"```sparql
SELECT ?entity WHERE {
  # Identify Robert Bates (loyalist)
  ?bates rdfs:label ""Robert Bates (loyalist)""@en .
  
  # Find his birthplace
  ?bates dbo:birthPlace ?birthPlace .

  # Find an entity that is both an organisation and a country related to the birthplace
  ?entity rdf:type dbo:Organisation ;
          rdf:type dbo:Country ;
          dbo:location ?birthPlace .
}
```",2,4,3,2,1,2,3,28,0,1,846,0.0,0.0,0
987,30,train,"Give me the birth place of Moamer Kasumović and birth place of Dado Polumenta and entity in the region, that is a country, of Central European Time.",SELECT ?result WHERE { ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. <http://dbpedia.org/resource/Moamer_Kasumović> <http://dbpedia.org/ontology/birthPlace> ?result . ?result <http://dbpedia.org/ontology/country> ?v0 . <http://dbpedia.org/resource/Dado_Polumenta> <http://dbpedia.org/ontology/birthPlace> ?result . ?v0 <http://dbpedia.org/property/timeZone> <http://dbpedia.org/resource/Central_European_Time> . },"```sparql
SELECT ?miloševićBirthPlace ?polumentaBirthPlace ?country WHERE {
  # Birthplace of Moamer Kasumović (Slobodan Milošević)
  dbpedia:Slobodan_Milošević dbo:birthPlace ?miloševićBirthPlace .

  # Birthplace of Dado Polumenta
  dbpedia:Dado_Polumenta dbo:birthPlace ?polumentaBirthPlace .

  # Countries in the Central European Time zone
  ?country a dbo:Country ;
           geo:timezone ?timezone .
  FILTER (str(?timezone) = ""Central European Time"")
}
```",4,5,5,2,3,3,3,71,0,0,1,0,0.0,0
865,25,train,Give me the father of AK Abdul Momen and father of the child of Abu Ahmad Abdul Hafiz.,SELECT ?result WHERE { <http://dbpedia.org/resource/AK_Abdul_Momen> <http://dbpedia.org/property/father> ?result . ?v0 <http://dbpedia.org/property/father> ?result . ?v0 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Abu_Ahmad_Abdul_Hafiz> . },"```sparql
SELECT ?fatherOfAKAbdulMomen ?childOfAbuAhmadAbdulHafiz ?fatherOfChild WHERE {
  # Find AK Abdul Momen and his father
  ?akAbdulMomen dbo:parent ?fatherOfAKAbdulMomen .
  ?akAbdulMomen rdfs:label ""AK Abdul Momen""@en .

  # Find Abu Ahmad Abdul Hafiz, one of his children, and the child's father
  ?abuAhmadAbdulHafiz dbo:child ?childOfAbuAhmadAbdulHafiz .
  ?abuAhmadAbdulHafiz rdfs:label ""Abu Ahmad Abdul Hafiz""@en .

  OPTIONAL {
    ?childOfAbuAhmadAbdulHafiz dbo:parent ?fatherOfChild .
  }
}
```",3,3,4,2,2,3,3,71,0,0,1,0,0.0,0
582,21,train,Give me the figure known as --10-19 and reference to the residence of Hirotaka Sugawara.,"SELECT ?result WHERE { ?result <http://xmlns.com/foaf/0.1/name> ?v1 . ?result <http://dbpedia.org/property/nickname> ""--10-19""^^<http://www.w3.org/2001/XMLSchema#gMonthDay> . <http://dbpedia.org/resource/Hirotaka_Sugawara> <http://dbpedia.org/property/residence> ?v1 . }","```sparql
# Query to find the figure known as --10-19
SELECT ?figure WHERE {
  wd:Q1234567 rdfs:label ?figure .
}

# Query to find the residence of Hirotaka Sugawara
SELECT ?residence WHERE {
  ?sugawara dbo:name ""Hirotaka Sugawara""@en ;
            dbo:residence ?residence .
}
```",3,3,4,2,2,3,3,71,0,0,1,0,0.0,0
382,5,train,Give me the award of Harry Combes.,SELECT ?result WHERE { <http://dbpedia.org/resource/Harry_Combes> <http://dbpedia.org/property/awards> ?result . },"```sparql
SELECT ?award WHERE {
  ?person rdfs:label ""Harry Combes""@en .
  ?person dbo:award ?award .
}
```",1,1,2,1,1,3,2,20,0,0,1,0,0.0,0
645,31,train,Give me the commander in the force of the commander in Siege of Madrid and military force of Spanish Civil War.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/battle> <http://dbpedia.org/resource/Spanish_Civil_War> . ?v0 <http://dbpedia.org/ontology/commander> ?v1 . <http://dbpedia.org/resource/Siege_of_Madrid> <http://dbpedia.org/ontology/commander> ?v1 . ?v0 <http://dbpedia.org/ontology/commander> ?result . },"```sparql
SELECT ?commanderInCivilWar WHERE {
  # Find the commander during the Siege of Madrid
  ?siege dbo:commander ?commanderMadrid .
  ?siege rdfs:label ""Siege of Madrid""@en .

  # Identify the military force commanded by this person
  ?commanderMadrid dbo:militaryForce ?militaryForce .

  # Find another commander from the same military force during the Spanish Civil War
  ?civilWarCommander dbo:militaryForce ?militaryForce .
  ?civilWarCommander dbo:participatedIn ?civilWarEvent .
  ?civilWarEvent rdfs:label ""Spanish Civil War""@en .
}
```",4,4,5,3,2,3,3,71,0,0,53,0,0.0,0
465,2,train,Give me the successor of Renée of France.,SELECT ?result WHERE { <http://dbpedia.org/resource/Renée_of_France> <http://dbpedia.org/ontology/successor> ?result . },"```sparql
SELECT ?successor WHERE {
  # Identify Renée of France and her title/position
  ?renee dbo:spouse ?husband .
  ?renee rdfs:label ""Renée of France""@en .
  
  # Find the successor of the position or title she held
  OPTIONAL {
    ?title dbo:successor ?successor .
    ?renee dbo:title ?title .
  }
}
```",1,1,2,1,1,3,3,71,0,0,1,0,0.0,0
236,2,train,"Give me the person decedent, that is a politician and an office holder, at Quincy, Massachusetts.","SELECT ?result WHERE { ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?result <http://dbpedia.org/ontology/deathPlace> <http://dbpedia.org/resource/Quincy,_Massachusetts> . }","```sparql
SELECT ?person WHERE {
  # Find persons associated with Quincy, Massachusetts
  ?person dbo:birthPlace dbr:Quincy,_Massachusetts .
  
  # Check if they were politicians or office holders
  OPTIONAL { 
    ?person dbo:occupation dbr:Politician .
  }
  OPTIONAL {
    ?person dbo:officeHolderOf ?office .
  }

  # Ensure the person is a decedent
  ?person dbo:deathPlace ?place .
}
```",1,3,2,1,1,3,2,20,0,0,3,0,0.0,0
839,0,train,Give me the band of Kevin Russell (musician).,SELECT ?result WHERE { <http://dbpedia.org/resource/Kevin_Russell_(musician)> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . },"```sparql
SELECT ?band WHERE {
  ?kevinRussell rdfs:label ""Kevin Russell (musician)""@en .
  ?kevinRussell dbo:musicalArtist ?band .
}
```",1,1,2,1,1,3,3,71,0,0,1,0,0.0,0
365,3,train,Give me the birth name of Symon Petliura.,SELECT ?result WHERE { <http://dbpedia.org/resource/Symon_Petliura> <http://dbpedia.org/property/birthName> ?result . },"```sparql
SELECT ?birthName WHERE {
  ?person rdfs:label ""Symon Petliura""@en .
  ?person dbo:birthName ?birthName .
}
```",1,1,2,1,1,3,2,20,1,0,0,1.0,1.0,1.0
465,31,train,"Give me the spouse of Archduchess Barbara of Austria and successor of the child of the parent of Ercole II d'Este, Duke of Ferrara.","SELECT ?result WHERE { ?v0 <http://dbpedia.org/property/father> ?v1 . ?result <http://dbpedia.org/ontology/spouse> <http://dbpedia.org/resource/Archduchess_Barbara_of_Austria> . ?v0 <http://dbpedia.org/ontology/successor> ?result . <http://dbpedia.org/resource/Ercole_II_d'Este,_Duke_of_Ferrara> <http://dbpedia.org/ontology/parent> ?v1 . }","```sparql
SELECT ?spouse WHERE {
  # Step 1: Find the spouse of Archduchess Barbara of Austria
  ?barbara dbo:spouse ?spouse .
  ?barbara rdfs:label ""Archduchess Barbara of Austria""@en .

  # Step 2: Identify Ercole II d'Este's parent(s)
  ?ercole dbo:parent ?parent .
  ?ercole rdfs:label ""Ercole II d'Este, Duke of Ferrara""@en .

  # Step 3: Find a child of one of these parents
  OPTIONAL {
    ?child dbo:parent ?parent .
  }

  # Step 4: Determine the successor of this child
  OPTIONAL {
    ?successor dbo:succeededBy ?child .
  }
}
```",4,4,5,3,2,3,3,71,1,0,0,1.0,1.0,1.0
124,11,train,"Give me the commander in the war, that is a societal event and a military conflict, of A Field Battery, Royal Australian Artillery.","SELECT ?result WHERE { <http://dbpedia.org/resource/A_Field_Battery,_Royal_Australian_Artillery> <http://dbpedia.org/ontology/battle> ?v0 . ?v0 <http://dbpedia.org/ontology/commander> ?result . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. }","```sparql
SELECT ?war ?commander WHERE {
  # Find wars involving A Field Battery, Royal Australian Artillery
  ?battery dbo:participatedIn ?war .
  ?battery rdfs:label ""A Field Battery, Royal Australian Artillery""@en .

  # Ensure the war is both a societal event and military conflict
  ?war rdf:type dbpedia-owl:MilitaryConflict ;
       rdf:type dbpedia-owl:SocietalEvent .

  # Find the commander of the forces in that war
  ?war dbo:commander ?commander .
}
```",2,4,3,2,1,3,3,71,0,0,109,0,0.0,0
839,26,train,"Give me the band of the member of the band, that is a band and a group, of Peter Schorowsky.",SELECT ?result WHERE { <http://dbpedia.org/resource/Peter_Schorowsky> <http://dbpedia.org/ontology/associatedMusicalArtist> ?v1 . ?result <http://dbpedia.org/ontology/bandMember> ?v2 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Band>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Group>. ?v1 <http://dbpedia.org/ontology/bandMember> ?v2 . },"```sparql
SELECT ?otherBand WHERE {
  # Identify Peter Schorowsky and his band
  ?schorowsky dbo:memberOfBandOrMusicalGroup ?band .
  ?schorowsky rdfs:label ""Peter Schorowsky""@en .

  # Ensure the band is both a 'band' and a 'group'
  ?band rdf:type dbp:Band .
  ?band rdf:type dbp:MusicalGroup .

  # Find another member of this band
  ?member dbo:memberOf ?band .
  FILTER (?schorowsky != ?member)

  # Identify the band of that other member
  ?member dbo:memberOf ?otherBand .
}
```",3,5,4,3,1,3,3,71,0,0,1,0,0.0,0
102,14,train,"Give me the native of the residence, that is English and a settlement, of the resident, that is an athlete, of Dewsbury.",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/birthPlace> ?v0 . ?v0 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/United_Kingdom>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. ?v2 <http://dbpedia.org/property/residence> ?v0 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Athlete>. ?v2 <http://dbpedia.org/ontology/residence> <http://dbpedia.org/resource/Dewsbury> . },"```sparql
SELECT ?native WHERE {
  # Find an athlete who resides in Dewsbury
  ?athlete dbo:residence ?dewsburyResidence .
  ?dewsburyResidence rdfs:label ""Dewsbury""@en .
  
  # Ensure the residence is a settlement with English as native language
  ?settlement dbo:partOf ?dewsburyResidence ;
              rdf:type dbo:Settlement ;
              dbo:nativeLanguage ?language .
  FILTER (str(?language) = ""English"")

  # Find who is native to this settlement
  ?native dbo:nativePlace ?settlement .
}
```",3,6,4,3,1,3,2,20,0,0,100,0,0.0,0
976,33,train,"Give me the office of the mayor, that is a politician and an office holder and Turkish, of the reference, that is an organisation and a political party and Turkish, to Millet İttifakı and office of Mustafa Şentop.","SELECT ?result WHERE { ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/PoliticalParty>. ?v2 <http://dbpedia.org/property/office> ?result . ?v0 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Turkey>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v2 <http://dbpedia.org/ontology/nationality> <http://dbpedia.org/resource/Turkey>. ?v0 <http://dbpedia.org/property/leader> ?v2 . <http://dbpedia.org/resource/Mustafa_Şentop> <http://dbpedia.org/property/office> ?result . ?v0 <http://xmlns.com/foaf/0.1/name> ""Millet İttifakı""@en . }","```sparql
SELECT ?mayorOffice WHERE {
  # Find Mustafa Şentop's office
  ?mustafa dbo:office ?office .
  ?mustafa rdfs:label ""Mustafa Şentop""@en .

  # Find the National Alliance (Millet İttifakı) as a political party and organization in Turkey
  ?nationalAlliance dbo:politicalParty ?party .
  ?nationalAlliance dbo:country dbr:Turkey .
  ?nationalAlliance rdfs:label ""Millet İttifakı""@tr .

  # Find the reference to a Turkish politician who is an office holder and related to both Mustafa Şentop's office and National Alliance
  ?politician dbo:office ?relatedOffice .
  ?politician dbo:country dbr:Turkey .
  ?politician rdf:type dbo:Politician .
  ?politician dbo:politicalParty ?party .

  # Ensure the politician holds an office of a mayor
  ?mayorOffice dbo:officeType dbr:Mayor .
  ?relatedOffice rdfs:label ?mayorLabel .
  FILTER (regex(?mayorLabel, ""Mayor"", ""i""))

  # Link the offices and ensure they are related through the National Alliance and Mustafa Şentop's office
  ?office dbo:politicalParty ?party .
}
```",4,10,5,3,2,3,3,71,0,0,1,0,0.0,0
453,0,train,Give me the religion of Newfoundland Colony.,SELECT ?result WHERE { <http://dbpedia.org/resource/Newfoundland_Colony> <http://dbpedia.org/ontology/religion> ?result . },"```sparql
SELECT ?religion WHERE {
  ?colony rdfs:label ""Newfoundland Colony""@en .
  ?colony dbo:religion ?religion .
}
```",1,1,2,1,1,2,2,9,1,0,0,1.0,1.0,1.0
933,31,train,"Give me the reference to Alan Warner and band of the band of the band, that is an artist and a musical artist, of The Ramong Sound.","SELECT ?result WHERE { ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?v2 <http://dbpedia.org/ontology/associatedMusicalArtist> ?v0 . <http://dbpedia.org/resource/The_Ramong_Sound> <http://dbpedia.org/ontology/associatedMusicalArtist> ?v2 . ?result <http://xmlns.com/foaf/0.1/name> ""Alan Warner""@en . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. ?v0 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . }","```sparql
SELECT ?band ?reference WHERE {
  # Find The Ramones as an artist and musical artist
  ?ramones dbo:genre dbc:Ramones .
  ?ramones rdfs:label ""The Ramones""@en .
  
  # Identify bands associated with The Ramones
  ?ramones dbo:associatedBand ?band .
  
  # Ensure the band is also an artist and a musical artist
  ?band rdf:type dbo:MusicalArtist .
  ?band rdf:type dbo:Artist .

  # Find any reference to Alan Warner in relation to these bands
  OPTIONAL {
    ?band dbo:reference ?reference .
    FILTER (regex(str(?reference), ""Alan Warner"", ""i""))
  }
}
```",4,6,5,3,2,3,3,71,0,0,1,0,0.0,0
326,6,train,Give me the person decedent at France and resident of Berkshire.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/deathPlace> <http://dbpedia.org/resource/France> . ?result <http://dbpedia.org/property/residence> <http://dbpedia.org/resource/Berkshire> . },"```sparql
SELECT ?person WHERE {
  # Find individuals who died in France
  ?person dbo:deathPlace ?place .
  ?place rdfs:label ""France""@en .

  # Ensure these individuals resided in Berkshire
  ?person dbo:residence ?residence .
  ?residence rdfs:label ""Berkshire, England""@en .
}
```",2,2,3,1,2,3,2,20,0,0,1,0,0.0,0
200,3,train,Give me the band of Revenge (Canadian band).,SELECT ?result WHERE { <http://dbpedia.org/resource/Revenge_(Canadian_band)> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . },"```sparql
SELECT ?genre ?member WHERE {
  ?band rdfs:label ""Revenge (Canadian band)""@en .
  OPTIONAL { ?band dbo:genre ?genre . }
  OPTIONAL { ?band dbo:member ?member . }
}
```",1,1,2,1,1,2,2,9,0,3,5,0.0,0.0,0
274,3,train,"Who is the person born, that is a musical artist, as John Birks Gillespie?","SELECT ?result WHERE { ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?result <http://dbpedia.org/property/birthName> ""John Birks Gillespie""@en . }","```sparql
SELECT ?person WHERE {
  ?person dbo:birthName ""John Birks Gillespie""@en .
  ?person rdf:type dbo:MusicalArtist .
  OPTIONAL { 
    ?person rdfs:label ?label .
    FILTER (CONTAINS(LCASE(str(?label)), ""dizzy gillespie""))
  }
}
```",1,2,2,1,1,2,3,28,0,0,1,0,0.0,0
892,13,train,Give me the landmark at elevation of the award of Anna Ishii.,SELECT ?result WHERE { <http://dbpedia.org/resource/Anna_Ishii> <http://dbpedia.org/property/awards> ?v1 . ?result <http://dbpedia.org/ontology/elevation> ?v1 . },"```sparql
SELECT ?landmark ?elevation WHERE {
  # Step 1: Identify Anna Ishii
  ?annaIshii dbo:birthName ""Anna Ishii""@en .
  
  # Step 2: Determine the award received by Anna Ishii
  ?annaIshii dbo:awardReceived ?award .

  # Step 3: Find a landmark associated with the award
  OPTIONAL {
    ?award dbo:associatedLandmark ?landmark .
  }

  # Step 4: Get the elevation of the landmark
  OPTIONAL {
    ?landmark dbo:elevation ?elevation .
  }
}
```",2,2,3,2,1,3,3,71,0,0,258,0,0.0,0
166,3,train,Who is the military force of Spanish Civil War?,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/battle> <http://dbpedia.org/resource/Spanish_Civil_War> . },"```sparql
SELECT ?militaryForce WHERE {
  # Find entities related to the Spanish Civil War
  ?event dbo:wikiPageRedirects db:Q1056 .
  
  # Identify military forces of the Republicans and Nationalists
  OPTIONAL { 
    ?event dbo:militaryConflictParticipant ?participant .
    ?participant rdfs:label ?militaryForce .
    FILTER (regex(str(?militaryForce), ""Republican"", ""i"") || regex(str(?militaryForce), ""Nationalist"", ""i""))
  }
}
```",1,1,2,1,1,3,2,20,0,0,514,0,0.0,0
456,32,train,Give me the professional in the alter ego of The Shadow and spouse of the actor of Pacific Drive.,SELECT ?result WHERE { <http://dbpedia.org/resource/The_Shadow> <http://dbpedia.org/property/alterEgo> ?v3 . <http://dbpedia.org/resource/Pacific_Drive> <http://dbpedia.org/property/starring> ?v1 . ?v1 <http://dbpedia.org/ontology/spouse> ?result . ?result <http://dbpedia.org/property/occupation> ?v3 . },"```sparql
SELECT ?profession ?spouse WHERE {
  # Find Lamont Cranston's profession in The Shadow
  ?cranston dbo:alterEgo dbr:The_Shadow .
  ?cranston rdfs:label ""Lamont Cranston""@en .
  ?cranston dbo:occupation ?profession .

  # Find the actor of Pacific Drive and their spouse
  OPTIONAL {
    ?film dbo:title ""Pacific Drive""@en .
    ?film dbo:actor ?actor .
    ?actor dbo:spouse ?spouse .
  }
}
```",4,4,5,2,2,3,3,71,0,0,2,0,0.0,0
508,1,train,Give me the birthplace of Ma Bufang.,SELECT ?result WHERE { <http://dbpedia.org/resource/Ma_Bufang> <http://dbpedia.org/ontology/birthPlace> ?result . },"```sparql
SELECT ?birthPlace WHERE {
  ?maBufang dbo:birthPlace ?birthPlace .
  ?maBufang rdfs:label ""Ma Bufang""@en .
}
```",1,1,2,1,1,3,2,20,3,0,0,1.0,1.0,1.0
98,18,train,"Give me the entity in the region, that is a country, of Philippine Standard Time and birth place of Paolo Ballesteros.",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/country> ?v1 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. <http://dbpedia.org/resource/Paolo_Ballesteros> <http://dbpedia.org/ontology/birthPlace> ?result . ?v1 <http://dbpedia.org/property/timeZone> <http://dbpedia.org/resource/Philippine_Standard_Time> . },"```sparql
SELECT ?country WHERE {
  # Find the region associated with Philippine Standard Time
  ?pst dbo:timeZone ?region .
  ?pst rdfs:label ""Philippine Standard Time""@en .

  # Find the birthplace of Paolo Ballesteros
  ?ballesteros dbo:birthPlace ?birthPlace .
  ?ballesteros rdfs:label ""Paolo Ballesteros""@en .

  # Ensure both entities are countries and match
  FILTER (?region = ?birthPlace)
  ?country rdf:type dbo:Country .
  FILTER (?region = ?country || ?birthPlace = ?country)
}
```",3,4,4,2,2,2,3,28,0,0,2,0,0.0,0
573,22,train,"Give me the person decedent at Massachusetts and parent of the author, that is a politician and an office holder, of Exchequer Standards.",SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v1 <http://dbpedia.org/ontology/parent> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?result <http://dbpedia.org/ontology/deathPlace> <http://dbpedia.org/resource/Massachusetts> . <http://dbpedia.org/resource/Exchequer_Standards> <http://dbpedia.org/property/author> ?v1 . },"```sparql
SELECT ?decedent WHERE {
  # Find the author of ""Exchequer Standards""
  ?author dbo:work ?exchequerStandards .
  ?exchequerStandards rdfs:label ""Exchequer Standards""@en .

  # Identify the parent who is a politician and office holder
  ?author dbo:parent ?parent .
  ?parent rdf:type ?type .
  FILTER (
    (str(?type) = str(dbpedia-owl:Politician)) ||
    (str(?type) = str(dbpedia-owl:OfficeHolder))
  )

  # Check if this parent is a decedent in Massachusetts
  OPTIONAL {
    ?parent dbo:deathPlace ?deathPlace .
    FILTER regex(str(?deathPlace), ""Massachusetts"", ""i"")
  }

  BIND (?parent AS ?decedent)
}
```",3,5,4,2,2,3,3,71,0,0,2,0,0.0,0
976,24,train,"Give me the office of the mayor, that is a politician and an office holder and Turkish, of Nation Alliance (Turkey) and office of Naci Bostancı.",SELECT ?result WHERE { ?v2 <http://dbpedia.org/property/office> ?result . ?v2 <http://dbpedia.org/ontology/nationality> <http://dbpedia.org/resource/Turkey>. <http://dbpedia.org/resource/Naci_Bostancı> <http://dbpedia.org/property/office> ?result . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. <http://dbpedia.org/resource/Nation_Alliance_(Turkey)> <http://dbpedia.org/property/leader> ?v2 . },"```sparql
SELECT ?mayorOffice ?naciBostanciOffice WHERE {
  # Find the mayor who is Turkish and associated with Nation Alliance (Turkey)
  ?person dbo:office dbr:Municipal_Mayor ;
          dbo:nationality dbr:Turkey ;
          dbo:party dbr:Nation_Alliance_(Turkey) .
  
  # Get the office of this person
  ?person dbo:office ?mayorOffice .

  # Find Naci Bostancı's office within Nation Alliance (Turkey)
  ?naciBostanci foaf:name ""Naci Bostancı""@en ;
                dbo:party dbr:Nation_Alliance_(Turkey) .
  
  # Get the office of Naci Bostancı
  ?naciBostanci dbo:office ?naciBostanciOffice .
}
```",3,6,4,2,2,3,3,71,0,0,1,0,0.0,0
326,2,train,Who is the professional in Writer?,"SELECT ?result WHERE { ?result <http://dbpedia.org/property/occupation> ""Writer""@en . }","```sparql
SELECT ?writer WHERE {
  ?writer dbo:occupation dbc:Writers .
}
```",1,1,2,1,1,3,2,20,0,0,6466,0,0.0,0
274,13,train,"Give me the professional in  and band member of the person born, that is a musical artist, as John Birks Gillespie.","SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?result <http://dbpedia.org/property/occupation> """"@en . ?v1 <http://dbpedia.org/property/birthName> ""John Birks Gillespie""@en . ?result <http://dbpedia.org/ontology/associatedMusicalArtist> ?v1 . }","```sparql
SELECT ?profession ?band WHERE {
  # Identify John Birks Gillespie (Dizzy Gillespie)
  ?gillespie rdfs:label ""John Birks 'Dizzy' Gillespie""@en .
  
  # Find his profession as a musical artist
  ?gillespie dbo:profession ?profession .

  # Find band memberships associated with him
  ?gillespie dbo:member ?band .
}
```",3,4,4,2,2,2,3,28,0,0,8,0,0.0,0
826,33,train,"Give me the successor of the child, that is a royalty, of the reference, that is a royalty, to Louis I and spouse of Anna Magdalena Appel.","SELECT ?result WHERE { ?v3 <http://dbpedia.org/ontology/successor> ?result . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. <http://dbpedia.org/resource/Anna_Magdalena_Appel> <http://dbpedia.org/ontology/spouse> ?result . ?v0 <http://dbpedia.org/ontology/child> ?v3 . ?v0 <http://xmlns.com/foaf/0.1/name> ""Louis I""@en . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. }","```sparql
SELECT ?successor WHERE {
  # Find Louis I and his spouse Anna Magdalena Appel
  ?louisI rdfs:label ""Louis I, King of Bavaria""@en .
  ?annaMagdalenaAppel rdfs:label ""Anna Magdalena Bach""@en .

  # Identify their children who are royalty
  ?child dbo:parent ?louisI ;
         dbo:parent ?annaMagdalenaAppel ;
         rdf:type dbo:RoyalFamilyMember .

  # Find the successor of one such child
  OPTIONAL {
    ?child dbo:succ ?successor .
  }
}
```",4,6,5,3,2,3,3,71,0,0,1,0,0.0,0
933,8,train,"Give me the band, that is a group and a band and an organisation, of Alan Warner (musician).",SELECT ?result WHERE { ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Group>. <http://dbpedia.org/resource/Alan_Warner_(musician)> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Band>. ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. },"```sparql
SELECT ?band WHERE {
  # Identify Alan Warner who is a musician
  ?alanWarner dbo:occupation dbr:Musician .
  ?alanWarner rdfs:label ""Alan Warner (musician)""@en .

  # Find the band/group/organization he is part of
  ?alanWarner dbo:member ?band .
  
  # Ensure the entity is recognized as a band and an organization
  ?band rdf:type dbr:Band ;
        rdf:type dbr:Organization .
}
```",1,4,2,1,1,3,3,71,0,0,2,0,0.0,0
839,14,train,"Give me the band of the band, that is a musical artist, of Charlie Huhn.",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/bandMember> ?v1 . <http://dbpedia.org/resource/Charlie_Huhn> <http://dbpedia.org/ontology/associatedMusicalArtist> ?v1 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. },"```sparql
SELECT ?bandOfBand WHERE {
  # Find the band associated with Charlie Huhn
  ?charlieHuhn dbo:member ?band .
  ?charlieHuhn rdfs:label ""Charlie Huhn""@en .

  # Ensure the entity is a musical artist
  ?band rdf:type dbo:MusicalArtist .

  # Find if this band has an association with another band
  OPTIONAL {
    ?band dbo:member ?bandOfBand .
    FILTER (?band != ?bandOfBand)
  }
}
```",2,3,3,2,1,3,3,71,0,0,2,0,0.0,0
507,6,train,"Give me the movie, that is a movie and a work, with Beryl Reid.",SELECT ?result WHERE { ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Film>. ?result <http://dbpedia.org/property/starring> <http://dbpedia.org/resource/Beryl_Reid> . },"```sparql
SELECT ?movie WHERE {
  # Find movies featuring Beryl Reid
  ?movie dbo:starring ?person .
  
  # Ensure the person is Beryl Reid
  ?person rdfs:label ""Beryl Reid""@en .

  # Ensure the movie is of type Film and Work
  ?movie rdf:type dbo:Film .
  ?movie rdf:type dbo:Work .
}
```",1,3,2,1,1,3,3,71,9,2,0,0.8181818181818182,1.0,0.9
170,18,train,Give me the domain of the profession of John Scholey and birth place of Era Ziganshina.,SELECT ?result WHERE { <http://dbpedia.org/resource/Era_Ziganshina> <http://dbpedia.org/ontology/birthPlace> ?result . <http://dbpedia.org/resource/John_Scholey> <http://dbpedia.org/property/occupation> ?v2 . ?result <http://dbpedia.org/ontology/leaderTitle> ?v2 . },"```sparql
SELECT ?professionDomain ?birthPlace WHERE {
  # Find John Scholey's profession and its domain
  ?scholey dbo:occupation ?profession .
  ?scholey rdfs:label ""John Scholey""@en .
  
  ?profession rdf:type ?professionDomain .

  # Find Era Ziganshina's birth place
  ?ziganshina dbo:birthPlace ?birthPlace .
  ?ziganshina rdfs:label ""Era Ziganshina""@en .
}
```",3,3,4,2,2,2,3,28,1,4,0,0.2,1.0,0.33333333333333337
933,33,train,Give me the reference to the birth name of the professional in Musician and band of Mike Elliott (saxophonist).,SELECT ?result WHERE { ?v0 <http://dbpedia.org/property/occupation> <http://dbpedia.org/resource/Musician> . ?result <http://xmlns.com/foaf/0.1/name> ?v2 . ?v0 <http://dbpedia.org/property/birthName> ?v2 . <http://dbpedia.org/resource/Mike_Elliott_(saxophonist)> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . },"```sparql
SELECT ?birthName ?band WHERE {
  ?person rdfs:label ""Mike Elliott (saxophonist)""@en .
  
  # Retrieve the birth name of Mike Elliott
  OPTIONAL { 
    ?person dbo:birthName ?birthName .
  }
  
  # Retrieve bands associated with Mike Elliott
  OPTIONAL {
    ?person dbo:bandMember ?band .
  }
}
```",4,4,5,3,2,3,3,71,0,0,1,0,0.0,0
453,6,train,"Give me the religion of the author, that is a cardinal and a cleric, of Apologia Pro Vita Sua.",SELECT ?result WHERE { ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Cleric>. <http://dbpedia.org/resource/Apologia_Pro_Vita_Sua> <http://dbpedia.org/property/author> ?v0 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Cardinal>. ?v0 <http://dbpedia.org/ontology/religion> ?result . },"```sparql
SELECT ?religion WHERE {
  ?newman dbo:author ""Apologia Pro Vita Sua""@en .
  ?newman rdfs:label ""John Henry Newman""@en .
  ?newman dbo:position [
    a dbo:Position ;
    dbo:title ""Cardinal"" ;
    dbo:organization dbr:Catholic_Church
  ] .
  ?newman dbo:occupation ""Cleric""@en .
  ?newman dbo:religion ?religion .
}
```",2,4,3,2,1,2,2,9,0,0,2,0,0.0,0
417,16,train,"Who is the father of the leader, that is a royalty, of Colony of Greenland?",SELECT ?result WHERE { ?v1 <http://dbpedia.org/property/father> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. <http://dbpedia.org/resource/Colony_of_Greenland> <http://dbpedia.org/property/leader> ?v1 . },"```sparql
SELECT ?father WHERE {
  # Find the monarch who ruled over the Colony of Greenland (Denmark)
  ?monarch dbo:country ?greenland .
  ?greenland rdfs:label ""Colony of Greenland""@en .

  # Retrieve the father of this monarch
  ?monarch dbo:parent ?father .
}
```",2,3,3,2,1,3,3,71,0,0,1,0,0.0,0
433,15,train,"Give me the person born, that is a musical artist and an artist, as the persona of Paul Chambers.",SELECT ?result WHERE { ?result <http://dbpedia.org/property/birthName> ?v1 . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. <http://dbpedia.org/resource/Paul_Chambers> <http://xmlns.com/foaf/0.1/givenName> ?v1 . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. },"```sparql
SELECT ?person WHERE {
  # Find persons who are both a musical artist and an artist
  ?person dbo:musicalArtist true .
  ?person dbo:artist true .

  # Ensure the person has a birth date (indicating they were born)
  ?person dbo:birthDate ?birthDate .
}
```",2,4,3,2,1,3,3,71,0,0,1,0,0.0,0
41,10,train,Give me the party of the person born as David Declan Costello.,"SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/party> ?result . ?v1 <http://dbpedia.org/property/birthName> ""David Declan Costello""@en . }","```sparql
SELECT ?party WHERE {
  ?person dbo:birthName ""David Declan Costello""@en .
  ?person dbo:partyAffiliation ?party .
}
```",2,2,3,2,1,2,3,28,0,0,1,0,0.0,0
445,0,train,Give me the entity in England.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/location> <http://dbpedia.org/resource/England> . },"```sparql
SELECT ?entity WHERE {
  ?england dbo:countryName ""England""@en .
  ?england dbo:capital ?entity .
}
```",1,1,2,1,1,3,3,71,0,0,3546,0,0.0,0
129,11,train,Give me the associated musical artist of the person born as Tahj Malik Chandler.,"SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v1 <http://dbpedia.org/property/birthName> ""Tahj Malik Chandler""@en . }","```sparql
SELECT ?artist WHERE {
  ?person dbo:birthName ""Tahj Malik Chandler""@en .
  OPTIONAL { 
    ?person foaf:name ?artist .
  }
}
```",2,2,3,2,1,2,3,28,0,0,8,0,0.0,0
281,8,train,"Give me the commander in the war, that is an event and a military conflict, of Roy Boehm.",SELECT ?result WHERE { <http://dbpedia.org/resource/Roy_Boehm> <http://dbpedia.org/ontology/battle> ?v1 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v1 <http://dbpedia.org/ontology/commander> ?result . },"```sparql
SELECT ?war ?commander WHERE {
  # Find any war or military conflict involving Roy Boehm
  ?event dbo:participant ?boehm .
  ?boehm rdfs:label ""Roy Boehm""@en .

  # Ensure the event is a war or military conflict
  ?event rdf:type dbo:MilitaryConflict .

  # Identify the commander of that war or military conflict
  ?event dbo:commander ?commander .
}
```",2,4,3,2,1,2,3,28,0,0,171,0,0.0,0
508,4,train,"Give me the war, that is a military conflict and a societal event, of Hu Yukun.",SELECT ?result WHERE { ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. <http://dbpedia.org/resource/Hu_Yukun> <http://dbpedia.org/ontology/battle> ?result . },"```sparql
SELECT ?war WHERE {
  # Identify Hu Yukun
  ?huYukun dbo:wikiPageID ""Hu_Yukun""@en .
  
  # Find wars or conflicts related to Hu Yukun
  ?huYukun dbo:associatedWith ?war .
  
  # Ensure the event is a military conflict and societal event
  ?war rdf:type dbp:MilitaryConflict ;
       rdf:type dbp:SocietalEvent .
}
```",1,3,2,1,1,3,2,20,0,0,4,0,0.0,0
976,9,train,Give me the office of Mustafa Şentop and office of Meral Akşener.,SELECT ?result WHERE { <http://dbpedia.org/resource/Mustafa_Şentop> <http://dbpedia.org/property/office> ?result . <http://dbpedia.org/resource/Meral_Akşener> <http://dbpedia.org/property/office> ?result . },"```sparql
SELECT ?person ?office WHERE {
  # Find Mustafa Şentop and his office
  VALUES ?person { dbpedia-tr:Mustafa_Sentop }
  
  OPTIONAL {
    ?person dbo:office ?office .
  }

  UNION

  # Find Meral Akşener and her office
  VALUES ?person { dbpedia-tr:Meral_Aksener }
  
  OPTIONAL {
    ?person dbo:office ?office .
  }
}
```",2,2,3,1,2,3,3,71,0,0,1,0,0.0,0
826,38,train,"Give me the predecessor of the parent of Prince Friedrich of Hesse and by Rhine and successor of the child, that is a royalty, of Louis I, Grand Duke of Hesse.","SELECT ?result WHERE { <http://dbpedia.org/resource/Prince_Friedrich_of_Hesse_and_by_Rhine> <http://dbpedia.org/ontology/parent> ?v2 . <http://dbpedia.org/resource/Louis_I,_Grand_Duke_of_Hesse> <http://dbpedia.org/ontology/child> ?v3 . ?v3 <http://dbpedia.org/ontology/successor> ?result . ?result <http://dbpedia.org/ontology/successor> ?v2 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. }","```sparql
SELECT ?predecessor WHERE {
  # Find Prince Friedrich of Hesse and by Rhine and his parent
  ?friedrich dbo:parent ?parent .
  ?friedrich rdfs:label ""Prince Friedrich of Hesse and by Rhine""@en .

  # Find the predecessor of this parent
  ?parent dbo:predecessor ?predecessor .

  # Find Louis I, Grand Duke of Hesse and his royal child
  ?louis dbo:child ?royalChild .
  ?louis rdfs:label ""Louis I, Grand Duke of Hesse""@en .
  
  # Ensure the child is royalty
  FILTER (regex(str(?royalChild), ""Prince|Princess"", ""i""))

  # Find the successor of this royal child
  ?royalChild dbo:successor ?predecessor .
}
```",4,5,5,2,2,3,3,71,0,0,1,0,0.0,0
459,11,train,Give me the person born as the birth name of Kevin Stitt.,SELECT ?result WHERE { ?result <http://dbpedia.org/property/birthName> ?v1 . <http://dbpedia.org/resource/Kevin_Stitt> <http://dbpedia.org/property/birthName> ?v1 . },"```sparql
SELECT ?birthName WHERE {
  ?person rdfs:label ""Kevin Stitt""@en .
  ?person dbo:birthName ?birthName .
}
```",2,2,3,2,1,2,3,28,0,1,1,0.0,0.0,0
495,0,train,Give me the child of Frederick I of Württemberg.,SELECT ?result WHERE { ?result <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Frederick_I_of_Württemberg> . },"```sparql
SELECT ?child WHERE {
  # Find Frederick I of Württemberg
  ?frederick rdfs:label ""Frederick I, Duke of Württemberg""@en .
  
  # Identify his children using the dbo:parent property
  ?frederick dbo:parent ?child .
}
```",1,1,2,1,1,3,2,20,0,2,3,0.0,0.0,0
130,13,train,"Give me the figure known as the film, that is a soccer club and an organisation, of the native, that is a coach and a college coach, of Madison, Alabama.","SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerClub>. ?v0 <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Madison,_Alabama> . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/CollegeCoach>. ?result <http://dbpedia.org/property/nickname> ?v1 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Coach>. ?v1 <http://dbpedia.org/ontology/director> ?v0 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. }","```sparql
SELECT DISTINCT ?coach ?film ?soccerClub WHERE {
  # Find a person who is a coach and native of Madison, Alabama
  ?coach dbo:birthPlace dbr:Madison,_Alabama ;
         dbo:occupation dbr:Coolie .

  # Find films associated with this coach
  OPTIONAL { 
    ?coach dbo:film ?film .
  }

  # Find soccer clubs or organizations related to the coach
  OPTIONAL {
    ?coach dbo:sportTeam ?soccerClub .
    FILTER (regex(str(?soccerClub), ""soccer"", ""i""))
  }
}
```

### Explanation:
- **`?coach dbo:birthPlace dbr:Madison,_Alabama ;`:** Identifies individuals born in Madison, Alabama.
- **`dbo:occupation dbr:Coolie .`:** Filters for those with occupations related to coaching (using a broad term like ""Coolie"" as a placeholder for coach-related roles).
- **`?coach dbo:film ?film .`:** Finds films associated with the identified coach.
- **`?coach dbo:sportTeam ?soccerClub . FILTER (regex(str(?soccerClub), ""soccer"", ""i""))`:** Identifies soccer clubs or organizations linked to the coach.

This query is structured to find connections between a person from Madison, Alabama who is a coach and any films or soccer-related entities they might be associated with. Note that specific details may vary based on available data in DBpedia.",3,7,4,3,1,3,2,20,0,0,3,0,0.0,0
124,15,train,"Give me the war, that is a societal event and a military conflict, of the reference, that is Australian and an organisation and a military unit, to 'A' Battery, Royal Australian Artillery.","SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryUnit>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v1 <http://dbpedia.org/ontology/battle> ?result . ?v1 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Australia>. ?v1 <http://xmlns.com/foaf/0.1/name> ""'A' Battery, Royal Australian Artillery""@en . }","```sparql
SELECT ?war WHERE {
  # Identify 'A' Battery, Royal Australian Artillery
  ?battery rdfs:label ""A Battery, Royal Australian Artillery""@en .
  
  # Find wars that 'A' Battery participated in
  ?battery dbo:participatedIn ?war .

  # Ensure the war is both a societal event and military conflict
  ?war rdf:type dbo:SocietalEvent .
  ?war rdf:type dbo:MilitaryConflict .
}
```",2,7,3,2,1,3,3,71,0,0,6,0,0.0,0
166,8,train,"Give me the entity in the territory administered, that is a country, from Madrid.",SELECT ?result WHERE { ?v0 <http://dbpedia.org/ontology/capital> <http://dbpedia.org/resource/Madrid> . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. ?result <http://dbpedia.org/ontology/country> ?v0 . },"```sparql
SELECT ?entity WHERE {
  # Identify Spain as the administrative authority
  ?spain dbo:capital ""Madrid""@en .
  ?spain rdfs:label ""Spain""@en .

  # Find territories administered by Spain
  ?territory dbo:administrativeAuthority ?spain .
  
  # Ensure the entity is a country or recognized territory
  FILTER EXISTS { ?territory rdf:type dbo:Country . }
}
```",2,3,3,2,1,3,2,20,0,0,12023,0,0.0,0
826,35,train,Give me the spouse of the child of Johann Heinrich Appel and predecessor of the parent of Prince Friedrich of Hesse and by Rhine.,"SELECT ?result WHERE { ?v2 <http://dbpedia.org/ontology/spouse> ?result . ?v2 <http://dbpedia.org/property/father> ""Johann Heinrich Appel""@en . ?result <http://dbpedia.org/ontology/successor> ?v1 . <http://dbpedia.org/resource/Prince_Friedrich_of_Hesse_and_by_Rhine> <http://dbpedia.org/ontology/parent> ?v1 . }","```sparql
SELECT ?spouse WHERE {
  # Find Johann Heinrich Appel's child
  ?appelChild dbo:childOf ?johannHeinrichAppel .
  ?johannHeinrichAppel rdfs:label ""Johann Heinrich Appel""@en .

  # Identify Prince Friedrich of Hesse and by Rhine's parent
  ?friedrichParent dbo:parentOf ?princeFriedrich .
  ?princeFriedrich rdfs:label ""Prince Friedrich of Hesse and by Rhine""@en .

  # Find predecessor of the identified parent
  ?predecessor dbo:predecessorOf ?friedrichParent .

  # Determine spouse of Johann Heinrich Appel's child
  ?appelChild dbo:spouse ?spouse .
}
```",4,4,5,2,2,3,3,71,0,0,1,0,0.0,0
170,14,train,Give me the entity in Russia and birth place of the awardee of People's Artist of Russia.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Russia> . ?v2 <http://dbpedia.org/ontology/birthPlace> ?result . ?v2 <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/People's_Artist_of_Russia> . },"```sparql
SELECT ?awardee ?birthPlace WHERE {
  # Find individuals who are People's Artists of Russia
  ?awardee dbo:award dbr:People%27s_Artist_of_Russia .
  
  # Get the birthplace of these awardees
  ?awardee dbo:birthPlace ?birthPlace .

  # Ensure the birthplace is in Russia
  ?birthPlace dbo:country dbr:Russia .
}
```",3,3,4,2,2,2,3,28,0,0,12,0,0.0,0
216,10,train,Give me the party of the awardee of Australian Defence Medal.,SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/party> ?result . ?v1 <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/Australian_Defence_Medal> . },"```sparql
SELECT ?awardee ?party WHERE {
  # Find entities that have been awarded the Australian Defence Medal
  ?awardee dbo:award dbr:Australian_Defence_Medal .
  
  # Check if these awardees have a party affiliation
  OPTIONAL { 
    ?awardee dbo:partyAffiliation ?party .
  }
}
```",2,2,3,2,1,2,3,28,0,7,5,0.0,0.0,0
888,2,train,Give me the military force of War in Donbas (2014–2022).,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/battle> <http://dbpedia.org/resource/War_in_Donbas_(2014–2022)> . },"```sparql
SELECT ?militaryForce WHERE {
  # Find information about the War in Donbas
  ?conflict dbo:wikiPageRedirects dbpedia:War_in_Donbass .
  
  # Retrieve military forces involved in the conflict
  OPTIONAL { 
    ?conflict dbo:militaryConflictParticipant ?participant .
    ?participant dbo:country ?militaryForce .
    FILTER (regex(str(?militaryForce), ""Ukraine|Russia"", ""i""))
  }
}
```",1,1,2,1,1,3,2,20,0,0,135,0,0.0,0
715,39,train,"Give me the commander in Spanish Civil War and leader of the office, that is a government agency and an organisation, of the reference to Carlos Franco Iribarnegaray.","SELECT ?result WHERE { <http://dbpedia.org/resource/Spanish_Civil_War> <http://dbpedia.org/ontology/commander> ?result . ?v0 <http://dbpedia.org/property/office> ?v1 . ?v1 <http://dbpedia.org/ontology/leader> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/GovernmentAgency>. ?v0 <http://xmlns.com/foaf/0.1/name> ""Carlos Franco Iribarnegaray""@en . }","```sparql
SELECT ?commander ?leader WHERE {
  # Part 1: Find a commander in the Spanish Civil War
  ?commander dbo:occupation ""Military Commander""@en .
  ?commander dbo:participatedIn [
    rdf:type dbo:Event ;
    rdfs:label ""Spanish Civil War""@en
  ] .

  # Part 2: Identify Carlos Franco Iribarnegaray's associated office or organization and its leader
  ?office dbo:employee ?carlosFranco .
  ?carlosFranco rdfs:label ""Carlos Franco Iribarnegaray""@en .
  
  OPTIONAL {
    ?office rdf:type [
      dbo:GovernmentAgency ;
      dbo:Organization
    ] .
    ?office dbo:leader ?leader .
  }
}
```",4,6,5,3,2,3,3,71,0,0,1,0,0.0,0
456,11,train,Give me the spouse of the actor of Pacific Drive.,SELECT ?result WHERE { ?v0 <http://dbpedia.org/ontology/spouse> ?result . <http://dbpedia.org/resource/Pacific_Drive> <http://dbpedia.org/property/starring> ?v0 . },"```sparql
SELECT ?spouse WHERE {
  # Find the movie Pacific Drive and its actors
  ?movie dbo:starring ?actor .
  ?movie rdfs:label ""Pacific Drive""@en .

  # Find the spouse of the actor
  OPTIONAL { 
    ?actor dbo:spouse ?spouse .
  }
}
```",2,2,3,2,1,3,3,71,4,0,0,1.0,1.0,1.0
216,3,train,"Give me the reference, that is an organisation and a soccer club, to Croatia U21.","SELECT ?result WHERE { ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerClub>. ?result <http://xmlns.com/foaf/0.1/name> ""Croatia U21""@en . }","```sparql
SELECT ?organisation WHERE {
  # Find the organisation related to Croatia U21
  ?team dbo:organizer ?organisation .
  ?team rdfs:label ""Croatia national under-21 football team""@en .

  # Ensure the organization is a soccer club or federation
  ?organisation rdf:type dbp:SoccerClub ;
                dbp:country dbr:Croatia .
}
```",1,3,2,1,1,3,3,71,0,0,1,0,0.0,0
892,27,train,"Give me the entity in the administration, that is Italian and a region and a settlement and an administrative region, of the party, that is a political party and an organisation, of Andrea Cozzolino.",SELECT ?result WHERE { ?v0 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Italy>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. ?result <http://dbpedia.org/ontology/province> ?v0 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?v0 <http://dbpedia.org/property/leaderParty> ?v1 . <http://dbpedia.org/resource/Andrea_Cozzolino> <http://dbpedia.org/ontology/party> ?v1 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Region>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/PoliticalParty>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/AdministrativeRegion>. },"```sparql
SELECT ?entity WHERE {
  # Find the political party of Andrea Cozzolino
  ?cozzolino dbo:party ?party .
  ?cozzolino rdfs:label ""Andrea Cozzolino""@en .

  # Find Italian regions that are also settlements and administrative regions
  ?entity rdf:type dbo:Region ;
          dbo:country dbr:Italy ;
          rdf:type dbo:Settlement ;
          rdf:type dbo:AdministrativeRegion .
}
```",3,9,4,3,1,3,3,71,0,120,587,0.0,0.0,0
935,14,train,"Give me the headquarter of the office of the native of Balochistan, Pakistan.","SELECT ?result WHERE { ?v2 <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Balochistan,_Pakistan> . ?v0 <http://dbpedia.org/ontology/location> ?result . ?v2 <http://dbpedia.org/property/office> ?v0 . }","```sparql
SELECT ?officeHeadquarters WHERE {
  # Identify a notable person from Balochistan
  ?person dbo:birthPlace ?balochistan .
  ?balochistan rdfs:label ""Balochistan, Pakistan""@en .

  # Find the office or organization they head
  ?person dbo:headOf ?office .

  # Get the headquarters of that office
  ?office dbo:headquarters ?officeHeadquarters .
}
```",3,3,4,3,1,3,2,20,0,0,1,0,0.0,0
93,11,train,"Give me the capital of the headquarter, that is a region and a settlement, of Lake Clark National Park and Preserve and death place of John Weir Troy.",SELECT ?result WHERE { ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Region>. ?v2 <http://dbpedia.org/ontology/capital> ?result . <http://dbpedia.org/resource/Lake_Clark_National_Park_and_Preserve> <http://dbpedia.org/ontology/location> ?v2 . <http://dbpedia.org/resource/John_Weir_Troy> <http://dbpedia.org/ontology/deathPlace> ?result . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. },"```sparql
# Query for the capital of the headquarter region of Lake Clark National Park and Preserve
SELECT ?capital WHERE {
  # Find the region where Lake Clark National Park is located
  ?park dbo:location ?region .
  ?park rdfs:label ""Lake Clark National Park and Preserve""@en .

  # Ensure the region is also a settlement (city or town)
  ?region rdf:type dbo:Settlement .

  # Get the capital of this region
  ?region dbo:capital ?capital .
}

# Query for John Weir Troy's death place
SELECT ?deathPlace WHERE {
  ?troy dbo:placeOfBirth ?birthPlace .
  ?troy dbo:deathPlace ?deathPlace .
  ?troy rdfs:label ""John Weir Troy""@en .
}
```",3,5,4,2,2,3,2,20,0,0,1,0,0.0,0
456,2,train,Give me the band of Alan Doyle.,SELECT ?result WHERE { <http://dbpedia.org/resource/Alan_Doyle> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . },"```sparql
SELECT ?band WHERE {
  ?doyle dbo:member ?band .
  ?doyle rdfs:label ""Alan Doyle""@en .
}
```",1,1,2,1,1,3,3,71,0,0,3,0,0.0,0
130,4,train,Give me the award of Živko Ključe.,SELECT ?result WHERE { <http://dbpedia.org/resource/Živko_Ključe> <http://dbpedia.org/property/awards> ?result . },"```sparql
SELECT ?award WHERE {
  ?person rdfs:label ""Živko Ključe""@en .
  ?person dbo:award ?award .
}
```",1,1,2,1,1,3,2,20,0,1,2,0.0,0.0,0
839,31,train,"Give me the band of the person born, that is a musical artist, as the persona of Kevin Russell (musician) and band of Peter Schorowsky.",SELECT ?result WHERE { ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?result <http://dbpedia.org/ontology/bandMember> <http://dbpedia.org/resource/Peter_Schorowsky> . <http://dbpedia.org/resource/Kevin_Russell_(musician)> <http://xmlns.com/foaf/0.1/givenName> ?v1 . ?v0 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v0 <http://dbpedia.org/property/birthName> ?v1 . },"```sparql
SELECT ?kevinRussellBand ?peterSchorowskyBand WHERE {
  # Find the band of Kevin Russell (musician)
  ?kevinRussell dbo:band ?kevinRussellBand .
  ?kevinRussell rdfs:label ""Kevin Russell (musician)""@en .

  # Find the band of Peter Schorowsky
  ?peterSchorowsky dbo:band ?peterSchorowskyBand .
  ?peterSchorowsky rdfs:label ""Peter Schorowsky""@en .
}
```",4,5,5,3,2,3,3,71,0,0,1,0,0.0,0
216,5,train,"Give me the player, that is an organisation and a sports club and a soccer club, in Džemal Berberović.",SELECT ?result WHERE { <http://dbpedia.org/resource/Džemal_Berberović> <http://dbpedia.org/ontology/team> ?result . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerClub>. ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsClub>. ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. },"```sparql
SELECT ?player WHERE {
  ?player a dbo:Organization ;
          a dbo:SportsClub ;
          a dbo:SoccerClub .
  
  OPTIONAL { 
    ?association dbo:agent ?player ;
                 dbo:agentName ""Džemal Berberović""@en .
  }
}
```",1,4,2,1,1,3,3,71,0,0,10,0,0.0,0
976,29,train,"Give me the office of the mayor, that is a politician and an office holder and Turkish, of Nation Alliance (Turkey) and office of Naci Bostancı and office of Mustafa Şentop.",SELECT ?result WHERE { <http://dbpedia.org/resource/Mustafa_Şentop> <http://dbpedia.org/property/office> ?result . ?v3 <http://dbpedia.org/ontology/nationality> <http://dbpedia.org/resource/Turkey>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. <http://dbpedia.org/resource/Naci_Bostancı> <http://dbpedia.org/property/office> ?result . <http://dbpedia.org/resource/Nation_Alliance_(Turkey)> <http://dbpedia.org/property/leader> ?v3 . ?v3 <http://dbpedia.org/property/office> ?result . },"```sparql
SELECT ?mayorOffice ?naciBostanciOffice ?mustafaSentopOffice WHERE {
  # Find the office of a Turkish politician in Nation Alliance (Turkey)
  ?person dbo:office ?mayorOffice ;
          dbo:nationality dbr:Turkey ;
          dbo:politicalParty dbr:Nation_Alliance_(Turkey) .
  
  # Ensure the person is an office holder
  FILTER EXISTS { ?person dbo:isOfficeHolder true . }
  
  # Find Naci Bostancı's office
  ?naciBostanci dbo:office ?naciBostanciOffice ;
                rdfs:label ""Naci Bostancı""@en .
  
  # Find Mustafa Şentop's office
  ?mustafaSentop dbo:office ?mustafaSentopOffice ;
                 rdfs:label ""Mustafa Şentop""@en .
}
```",4,7,5,2,3,3,3,71,0,0,1,0,0.0,0
874,3,train,"Give me the writer, that is an artist and a musical artist, of Mezzanine (album).",SELECT ?result WHERE { ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. <http://dbpedia.org/resource/Mezzanine_(album)> <http://dbpedia.org/property/writer> ?result . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. },"```sparql
SELECT ?writer WHERE {
  # Find the album Mezzanine and its writer(s)
  ?album dbo:artist ?band .
  ?album rdfs:label ""Mezzanine""@en .

  # Identify the band Massive Attack as the artist of the album
  ?band rdfs:label ""Massive Attack""@en .

  # Find members of Massive Attack who are both artists and musical artists
  OPTIONAL {
    ?member dbo:memberOf ?band .
    ?member rdfs:label ?name .
    FILTER (regex(?name, ""Robert Del Naja"", ""i"") || regex(?name, ""3D"", ""i""))
    
    # Ensure the member is recognized as both an artist and a musical artist
    ?member dbo:occupation ?occupation1 .
    ?member dbo:occupation ?occupation2 .
    FILTER (regex(str(?occupation1), ""artist"", ""i"") && regex(str(?occupation2), ""musician|singer|composer"", ""i""))
    
    # Assign the member to writer variable if conditions are met
    BIND(?member AS ?writer)
  }
}
```",1,3,2,1,1,3,2,20,0,0,15,0,0.0,0
445,9,train,Give me the entity in England and death place of Patrick Moore.,SELECT ?result WHERE { <http://dbpedia.org/resource/Patrick_Moore> <http://dbpedia.org/ontology/deathPlace> ?result . ?result <http://dbpedia.org/ontology/location> <http://dbpedia.org/resource/England> . },"```sparql
SELECT ?entityInEngland ?deathPlace WHERE {
  # Find Patrick Moore and his associated entity in England
  ?moore dbo:birthPlace ?place .
  ?moore rdfs:label ""Patrick Moore""@en .
  OPTIONAL { 
    ?moore dbo:associatedWith ?entityInEngland .
    FILTER (regex(str(?entityInEngland), ""Royal Observatory, Greenwich"", ""i""))
  }
  
  # Find the place of death for Patrick Moore
  ?moore dbo:deathPlace ?deathPlace .
}
```",2,2,3,1,2,3,3,71,1,1,0,0.5,1.0,0.6666666666666666
47,27,train,"Give me the office of the awardee of the entity, that is an award, in India.",SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/India> . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Award>. ?v2 <http://dbpedia.org/property/awards> ?v1 . ?v2 <http://dbpedia.org/property/office> ?result . },"```sparql
SELECT ?award ?awardee ?office WHERE {
  # Identify awards in India
  ?award dbo:country dbr:India .
  
  # Find awardees of these awards
  ?award dbo:recipient ?awardee .
  
  # Retrieve the office held by each awardee
  OPTIONAL { 
    ?awardee dbo:office ?office .
  }
}
```",3,4,4,3,1,3,3,71,0,0,200,0,0.0,0
892,7,train,"Give me the party, that is a political party and an organisation, of Andrea Cozzolino.",SELECT ?result WHERE { ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/PoliticalParty>. <http://dbpedia.org/resource/Andrea_Cozzolino> <http://dbpedia.org/ontology/party> ?result . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. },"```sparql
SELECT ?party WHERE {
  ?cozzolino dbo:fullName ""Andrea Cozzolino""@en .
  ?cozzolino dbo:party ?party .
  
  # Ensure the party is both a political party and an organization
  ?party rdf:type dbp:PoliticalParty ;
         rdf:type dbo:Organization .
}
```",1,3,2,1,1,3,3,71,0,0,1,0,0.0,0
791,5,train,"Give me the child, that is an office holder and a royalty, of Emperor Go-Shirakawa.",SELECT ?result WHERE { ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?result <http://dbpedia.org/ontology/parent> <http://dbpedia.org/resource/Emperor_Go-Shirakawa> . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. },"```sparql
SELECT ?child WHERE {
  # Find Emperor Go-Shirakawa and his children
  ?goShirakawa dbo:child ?child .
  ?goShirakawa rdfs:label ""Emperor Go-Shirakawa""@en .

  # Ensure the child is royalty
  OPTIONAL { 
    ?child rdf:type dbo:Monarch .
  }

  # Check if the royal child held an office
  OPTIONAL {
    ?child dbo:officeHolder ?office .
  }
  
  FILTER EXISTS { ?child rdf:type dbo:Monarch } .
}
```",1,3,2,1,1,3,3,71,0,0,2,0,0.0,0
129,17,train,"Give me the associated musical artist of the actor, that is an organisation, of Dreamville Presents: Revenge and associated musical artist of Saba (rapper).",SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . <http://dbpedia.org/resource/Dreamville_Presents:_Revenge> <http://dbpedia.org/property/starring> ?v1 . <http://dbpedia.org/resource/Saba_(rapper)> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. },"```sparql
SELECT DISTINCT ?dreamvilleArtist ?sabaArtist WHERE {
  # Find the organization associated with Dreamville Presents: Revenge
  ?event rdfs:label ""Dreamville Presents: Revenge""@en .
  OPTIONAL { 
    ?event dbo:associatedMusicalArtist ?dreamvilleArtist .
  }
  
  # Ensure the entity is an organization
  FILTER EXISTS { ?event a dbo:Organization . }

  # Find musical artists associated with Saba (rapper)
  ?saba rdfs:label ""Saba (rapper)""@en .
  OPTIONAL {
    ?saba dbo:associatedMusicalArtist ?sabaArtist .
  }
}
```",3,4,4,2,2,2,3,28,0,0,1,0,0.0,0
495,6,train,Give me the father of Princess Charlotte of Württemberg and child of Frederick I of Württemberg.,SELECT ?result WHERE { <http://dbpedia.org/resource/Princess_Charlotte_of_Württemberg> <http://dbpedia.org/property/father> ?result . ?result <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Frederick_I_of_Württemberg> . },"```sparql
SELECT ?father WHERE {
  # Find Princess Charlotte and her father
  ?charlotte dbo:parent ?father .
  ?charlotte rdfs:label ""Princess Charlotte of Württemberg""@en .

  # Check if this father is a child of Frederick I of Württemberg
  ?frederick dbo:child ?father .
  ?frederick rdfs:label ""Frederick I, Duke of Württemberg""@en .
}
```",2,2,3,1,2,3,2,20,0,0,1,0,0.0,0
606,0,train,Give me the figure known as Barb City.,"SELECT ?result WHERE { ?result <http://dbpedia.org/property/nickname> ""Barb City""@en . }","```sparql
SELECT ?song WHERE {
  ?song rdfs:label ""Barb City""@en .
  OPTIONAL { 
    ?song dbo:artist ?artist .
    ?artist rdfs:label ""Alice In Chains""@en .
  }
}
```",1,1,2,1,1,3,2,20,0,1,1,0.0,0.0,0
93,7,train,"Give me the capital of the headquarter, that is a region and a settlement, of Lake Clark National Park and Preserve.",SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/capital> ?result . <http://dbpedia.org/resource/Lake_Clark_National_Park_and_Preserve> <http://dbpedia.org/ontology/location> ?v1 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Region>. },"```sparql
SELECT ?capital WHERE {
  # Find Lake Clark National Park and Preserve
  ?park dbo:headquarters ?settlement .
  ?park rdfs:label ""Lake Clark National Park and Preserve""@en .

  # Ensure the headquarters is both a region and a settlement
  ?region dbo:headquarters ?settlement ;
          rdf:type dbo:Region .
  
  # Find the capital of this region
  ?region dbo:capital ?capital .
}
```",2,4,3,2,1,3,2,20,0,0,2,0,0.0,0
917,10,train,Give me the child of Kekūanāoʻa and parent of Albert Kamehameha.,"SELECT ?result WHERE { ?result <http://dbpedia.org/property/father> ""Kekūanāoʻa""@en . ?result <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Albert_Kamehameha> . }","```sparql
SELECT ?individual WHERE {
  # Find child of Kekūanāoʻa
  ?kekuanaoa dbo:child ?individual .
  ?kekuanaoa rdfs:label ""Kekūanāoʻa""@en .

  # Ensure this individual is the parent of Albert Kamehameha
  ?individual dbo:parent ?albertKamehameha .
  ?albertKamehameha rdfs:label ""Albert Kamehameha""@en .
}
```",2,2,3,1,2,3,3,71,0,0,1,0,0.0,0
326,7,train,"Give me the resident of the birthplace, that is a state and British, of David Jessel.",SELECT ?result WHERE { ?result <http://dbpedia.org/property/residence> ?v1 . ?v1 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/United_Kingdom>. <http://dbpedia.org/resource/David_Jessel> <http://dbpedia.org/ontology/birthPlace> ?v1 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/AdministrativeRegion>. },"```sparql
SELECT ?resident WHERE {
  # Find the birthplace of David Jessel
  ?jessel dbo:birthPlace ?birthPlace .
  ?jessel rdfs:label ""David Jessel""@en .

  # Ensure the birthplace is a state within the UK
  ?birthPlace rdf:type dbo:State .
  ?birthPlace dbo:country dbr:United_Kingdom .

  # Find the current resident of that state
  OPTIONAL {
    ?birthPlace dbo:governor ?resident .
  }
}
```",2,4,3,2,1,3,2,20,0,0,5,0,0.0,0
965,1,train,Give me the parent of Louise Mountbatten.,SELECT ?result WHERE { <http://dbpedia.org/resource/Louise_Mountbatten> <http://dbpedia.org/ontology/parent> ?result . },"```sparql
SELECT ?parent WHERE {
  ?louise dbo:parent ?parent .
  ?louise rdfs:label ""Louise Mountbatten""@en .
}
```",1,1,2,1,1,3,3,71,2,0,0,1.0,1.0,1.0
582,23,train,"Give me the reference to the residence of the reference, that is a scientist, to Hirotaka Sugawara.","SELECT ?result WHERE { ?v2 <http://xmlns.com/foaf/0.1/name> ""Hirotaka Sugawara""@en . ?result <http://xmlns.com/foaf/0.1/name> ?v0 . ?v2 <http://dbpedia.org/property/residence> ?v0 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Scientist>. }","```sparql
SELECT ?residence WHERE {
  # Identify Hirotaka Sugawara
  ?sugawara rdfs:label ""Hirotaka Sugawara""@en .
  
  # Find a connection to a scientist
  OPTIONAL { 
    ?connection dbo:wikiPageRedirects ?scientist .
    ?connection dbo:wikiPageDisambiguates ?sugawara .
    ?scientist rdf:type dbo:Scientist .
  }
  
  # Retrieve the residence of that scientist
  ?scientist dbo:residenceLocation ?residence .
}
```",3,4,4,3,1,3,3,71,0,0,41,0,0.0,0
236,5,train,Give me the administration of James Madison.,SELECT ?result WHERE { ?result <http://dbpedia.org/property/leader> <http://dbpedia.org/resource/James_Madison> . },"```sparql
SELECT ?presidencyTermStart ?presidencyTermEnd WHERE {
  ?madison dbo:president dbr:United_States .
  ?madison rdfs:label ""James Madison""@en .
  
  OPTIONAL { 
    ?madison dbo:termStart ?presidencyTermStart .
  }
  
  OPTIONAL {
    ?madison dbo:termEnd ?presidencyTermEnd .
  }
}
```",1,1,2,1,1,3,2,20,0,0,4,0,0.0,0
987,20,train,Give me the birth place of Dado Polumenta and birth place of the actor of All for Free.,SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/birthPlace> ?result . <http://dbpedia.org/resource/All_for_Free> <http://dbpedia.org/property/starring> ?v1 . <http://dbpedia.org/resource/Dado_Polumenta> <http://dbpedia.org/ontology/birthPlace> ?result . },"```sparql
SELECT ?dadoBirthPlace ?actorName ?actorBirthPlace WHERE {
  # Find Dado Polumenta's birth place
  ?dado dbo:birthPlace ?dadoBirthPlace .
  ?dado rdfs:label ""Dado Polumenta""@en .

  # Find the actor of ""All for Free""
  ?movie dbo:title ""All for Free""@en ;
         dbo:actor ?actor .
  
  # Get the birth place of the identified actor
  ?actor dbo:birthPlace ?actorBirthPlace .
  OPTIONAL { ?actor rdfs:label ?actorName . }
}
```",3,3,4,2,2,3,3,71,0,0,3,0,0.0,0
926,17,train,"Give me the father, that is a royalty, of the parent, that is a royalty, of Beyhan Sultan (daughter of Mustafa III).",SELECT ?result WHERE { ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. <http://dbpedia.org/resource/Beyhan_Sultan_(daughter_of_Mustafa_III)> <http://dbpedia.org/ontology/parent> ?v0 . ?v0 <http://dbpedia.org/property/father> ?result . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. },"```sparql
SELECT ?royalFather WHERE {
  # Identify Beyhan Sultan as a daughter of Mustafa III
  ?beyhanSultan dbo:childOf ?mustafaIII .
  ?beyhanSultan rdfs:label ""Beyhan Sultan""@en .

  # Find the parent (mother) of Beyhan Sultan who is royalty
  OPTIONAL {
    ?beyhanSultan dbo:parent ?royalMother .
    FILTER (regex(str(?royalMother), ""royalty"", ""i""))
  }

  # Determine the father of this royal mother
  OPTIONAL {
    ?royalMother dbo:parent ?royalFather .
    FILTER (regex(str(?royalMother), ""royalty"", ""i""))
  }
}
```",2,4,3,2,1,3,3,71,0,0,1,0,0.0,0
273,13,train,Give me the spouse of the child of the child of Edoardo Agnelli (1831-1871).,SELECT ?result WHERE { ?v0 <http://dbpedia.org/ontology/parent> <http://dbpedia.org/resource/Edoardo_Agnelli_(1831-1871)> . ?v0 <http://dbpedia.org/ontology/child> ?v1 . ?result <http://dbpedia.org/ontology/spouse> ?v1 . },"```sparql
SELECT ?spouse WHERE {
  # Identify Edoardo Agnelli (1831-1871)
  ?edoardo dbo:birthDate ?birth .
  ?edoardo rdfs:label ""Edoardo Agnelli""@en .
  FILTER(year(?birth) = 1831 && year(?death) = 1871)

  # Find his child
  ?edoardo dbo:child ?child .

  # Find the grandchild (child of the child)
  ?child dbo:child ?grandchild .

  # Identify the spouse of the grandchild
  ?grandchild dbo:spouse ?spouse .
}
```",3,3,4,3,1,3,2,20,0,0,1,0,0.0,0
926,7,train,"Give me the parent, that is a royalty, of Beyhan Sultan (daughter of Mustafa III).",SELECT ?result WHERE { ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. <http://dbpedia.org/resource/Beyhan_Sultan_(daughter_of_Mustafa_III)> <http://dbpedia.org/ontology/parent> ?result . },"```sparql
SELECT ?parent WHERE {
  # Find Beyhan Sultan and her parents
  ?beyhanSultan dbo:parent ?parent .
  ?beyhanSultan rdfs:label ""Beyhan Sultan""@en .

  # Filter for the parent who is royalty
  OPTIONAL { 
    ?parent dbo:royalty ?isRoyalty .
    FILTER (?isRoyalty != """")
  }
}
```",1,2,2,1,1,3,3,71,0,0,2,0,0.0,0
715,17,train,"Give me the office, that is a government agency and an organisation, of the reference to Carlos Franco Iribarnegaray.","SELECT ?result WHERE { ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/GovernmentAgency>. ?v1 <http://xmlns.com/foaf/0.1/name> ""Carlos Franco Iribarnegaray""@en . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?v1 <http://dbpedia.org/property/office> ?result . }","```sparql
SELECT ?office WHERE {
  ?person rdfs:label ""Carlos Franco Iribarnegaray""@en .
  ?person dbo:positionHeld ?office .

  # Ensure the office is both a Government Agency and an Organization
  ?office rdf:type dbo:GovernmentAgency ;
          rdf:type dbo:Organization .
}
```",2,4,3,2,1,3,3,71,0,0,1,0,0.0,0
987,26,train,"Give me the birth place of the actor of the show, that is a film, with Emir Hadžihafizbegović.",SELECT ?result WHERE { ?v2 <http://dbpedia.org/property/starring> ?v0 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Film>. ?v0 <http://dbpedia.org/ontology/birthPlace> ?result . ?v2 <http://dbpedia.org/ontology/starring> <http://dbpedia.org/resource/Emir_Hadžihafizbegović> . },"```sparql
SELECT ?actorBirthPlace WHERE {
  # Find films with Emir Hadžihafizbegović
  ?film dbo:starring dbp:Emir_Hadžihafizbegović .
  
  # Find actors in the film
  ?film dbo:castMember ?actor .
  
  # Get birthplace of one actor from the film
  ?actor dbo:birthPlace ?actorBirthPlace .
}
```",3,4,4,3,1,3,3,71,0,0,40,0,0.0,0
417,10,train,Give me the child of Alexandrine of Mecklenburg-Schwerin and spouse of Princess Caroline-Mathilde of Denmark.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/spouse> <http://dbpedia.org/resource/Princess_Caroline-Mathilde_of_Denmark> . ?result <http://dbpedia.org/ontology/parent> <http://dbpedia.org/resource/Alexandrine_of_Mecklenburg-Schwerin> . },"```sparql
SELECT ?commonEntity WHERE {
  # Find children of Alexandrine of Mecklenburg-Schwerin
  ?child dbo:parent dbr:Aleksandrina_of_Mecklenburg-Schwerin .
  
  # Find spouse of Princess Caroline-Mathilde of Denmark
  ?spouse dbo:spouse dbr:Princess_Caroline-Mathilde_of_Denmark .

  # Check for common entity between the child and spouse sets
  FILTER (?child = ?spouse)
  BIND(?child AS ?commonEntity)
}
```",2,2,3,1,2,3,3,71,0,0,1,0,0.0,0
965,14,train,"Give me the parent of the person born, that is a noble, as Prince George of Battenberg.","SELECT ?result WHERE { ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Noble>. ?v0 <http://dbpedia.org/ontology/parent> ?result . ?v0 <http://dbpedia.org/property/birthName> ""Prince George of Battenberg""@en . }","```sparql
SELECT ?parent WHERE {
  # Find Prince George of Battenberg and his parents
  ?george dbo:birthPlace ?place .
  ?george rdfs:label ""Prince George of Battenberg""@en .

  # Retrieve the parents of Prince George
  ?george dbo:parent ?parent .

  # Ensure at least one parent is a noble
  OPTIONAL {
    ?parent dbo:occupation ?occupation .
    FILTER (regex(str(?occupation), ""noble"", ""i""))
  }
}
```",2,3,3,2,1,3,3,71,0,0,2,0,0.0,0
892,29,train,Give me the entity in Province of Reggio Emilia and landmark at elevation of the award of Anna Ishii and entity in Italy.,SELECT ?result WHERE { <http://dbpedia.org/resource/Anna_Ishii> <http://dbpedia.org/property/awards> ?v3 . ?result <http://dbpedia.org/ontology/province> <http://dbpedia.org/resource/Province_of_Reggio_Emilia> . ?result <http://dbpedia.org/ontology/elevation> ?v3 . ?result <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Italy> . },"```sparql
SELECT ?awardElevation ?landmark ?reggioEntity WHERE {
  # Step 1: Find Anna Ishii's Award and its Elevation
  ?annaIshii dbo:award ?award .
  ?award dbo:elevation ?awardElevation .
  ?annaIshii rdfs:label ""Anna Ishii""@en .

  # Step 2: Find a Landmark in Italy at the same elevation as the award
  ?landmark dbo:elevation ?awardElevation ;
            dbo:country dbr:Italy .

  # Step 3: Identify an entity in Province of Reggio Emilia
  ?reggioEntity dbo:location dbr:Province_of_Reggio_Emilia .
}
```",4,4,5,2,3,3,3,71,0,0,1,0,0.0,0
445,20,train,Give me the entity in England and death place of the awardee of Royal Astronomical Society.,SELECT ?result WHERE { ?v2 <http://dbpedia.org/ontology/deathPlace> ?result . ?result <http://dbpedia.org/ontology/location> <http://dbpedia.org/resource/England> . ?v2 <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/Royal_Astronomical_Society> . },"```sparql
SELECT ?awardee ?deathPlace WHERE {
  # Find awardees of the Royal Astronomical Society
  ?awardee dbo:awardReceived dbr:Royal_Astronomical_Society .
  
  # Get their place of death
  OPTIONAL { 
    ?awardee dbo:placeOfDeath ?deathPlace .
    
    # Ensure the place of death is in England
    FILTER (regex(str(?deathPlace), ""England"", ""i""))
  }
}
```",3,3,4,2,2,3,3,71,0,0,1,0,0.0,0
965,4,train,Give me the spouse of Princess Victoria of Hesse and by Rhine.,SELECT ?result WHERE { <http://dbpedia.org/resource/Princess_Victoria_of_Hesse_and_by_Rhine> <http://dbpedia.org/ontology/spouse> ?result . },"```sparql
SELECT ?spouse WHERE {
  ?princess rdfs:label ""Princess Victoria of Hesse and by Rhine""@en .
  ?princess dbo:spouse ?spouse .
}
```",1,1,2,1,1,3,3,71,1,0,0,1.0,1.0,1.0
445,12,train,Give me the entity in United Kingdom and death place of Patrick Moore.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/United_Kingdom> . <http://dbpedia.org/resource/Patrick_Moore> <http://dbpedia.org/ontology/deathPlace> ?result . },"```sparql
SELECT ?ukEntity ?deathPlace WHERE {
  # Identify Patrick Moore
  ?moore rdfs:label ""Patrick Moore""@en .
  
  # Find an entity in the UK related to Patrick Moore
  OPTIONAL { 
    ?moore dbo:birthPlace ?ukEntity ;
           FILTER (regex(str(?ukEntity), ""United Kingdom"", ""i""))
  }
  OPTIONAL {
    ?moore dbo:residence ?ukEntity ;
           FILTER (regex(str(?ukEntity), ""United Kingdom"", ""i""))
  }

  # Find the death place of Patrick Moore
  ?moore dbo:deathPlace ?deathPlace .
}
```",2,2,3,1,2,3,3,71,0,0,2,0,0.0,0
573,8,train,"Who is the author, that is a politician and an office holder, of Exchequer Standards?",SELECT ?result WHERE { ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. <http://dbpedia.org/resource/Exchequer_Standards> <http://dbpedia.org/property/author> ?result . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. },"```sparql
SELECT ?author WHERE {
  # Find the work titled ""Exchequer Standards""
  ?work dbo:title ""Exchequer Standards""@en .
  
  # Identify its author
  ?work dbo:creator ?author .

  # Ensure the author is a politician and an office holder
  ?author dbo:occupation dbc:Politicians .
  ?author dbo:officeHolder true .
}
```",1,3,2,1,1,3,3,71,0,0,1,0,0.0,0
47,29,train,Give me the office of Ajoy Mukherjee and office of Suvendu Adhikari and office of the awardee of Banga Bhushan.,SELECT ?result WHERE { <http://dbpedia.org/resource/Suvendu_Adhikari> <http://dbpedia.org/property/office> ?result . ?v3 <http://dbpedia.org/property/office> ?result . ?v3 <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/Banga_Bhushan> . <http://dbpedia.org/resource/Ajoy_Mukherjee> <http://dbpedia.org/property/office> ?result . },"```sparql
SELECT ?person ?office WHERE {
  # Find Ajoy Mukherjee's office
  OPTIONAL {
    ?mukherjee dbo:wikiPageRedirects dbpedia-en:Ajoy_Mukherjee .
    ?mukherjee dbo:office ?officeMukherjee .
    BIND(?mukherjee AS ?person)
  }
  
  # Find Suvendu Adhikari's office
  OPTIONAL {
    ?adhikari dbo:wikiPageRedirects dbpedia-en:Suvendu_Adhikari .
    ?adhikari dbo:office ?officeAdhikari .
    BIND(?adhikari AS ?person)
  }
  
  # Find the current awardee of Banga Bhushan and their office
  OPTIONAL {
    ?bangaBhushanAwardee dbo:wikiPageRedirects dbpedia-en:Banga_Bhushan_Award .
    ?bangaBhushanAwardee dbo:recipient ?currentRecipient .
    ?currentRecipient dbo:office ?officeRecipient .
    BIND(?currentRecipient AS ?person)
  }
}
```",4,4,5,2,3,3,3,71,0,0,1,0,0.0,0
917,0,train,Give me the parent of Albert Kamehameha.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Albert_Kamehameha> . },"```sparql
SELECT ?parent WHERE {
  ?albert dbo:parent ?parent .
  ?albert rdfs:label ""Albert Kamehameha""@en .
}
```",1,1,2,1,1,3,3,71,2,0,0,1.0,1.0,1.0
216,23,train,"Give me the player in the coach of the reference, that is an organisation and a soccer club, to Croatia U21.","SELECT ?result WHERE { ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerClub>. ?v2 <http://xmlns.com/foaf/0.1/name> ""Croatia U21""@en . ?v0 <http://dbpedia.org/ontology/team> ?result . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?v2 <http://dbpedia.org/ontology/coach> ?v0 . }","```sparql
SELECT ?playerCoach WHERE {
  # Find the coach of Croatia U21
  ?croatiaU21 dbo:coach ?coach .
  ?croatiaU21 rdfs:label ""Croatia national under-21 football team""@en .

  # Check if this coach has a player history
  OPTIONAL { 
    ?coach dbo:occupation dbo:Soccer_player .
  }

  # Find soccer clubs where the coach is associated as an organization
  OPTIONAL {
    ?club dbo:coach ?playerCoach .
    FILTER (?playerCoach = ?coach)
    ?club rdf:type dbo:Soccer_club .
    ?club rdf:type dbo:Organization .
  }
}
```",3,5,4,3,1,3,3,71,0,0,6,0,0.0,0
865,36,train,Give me the native of British Raj and father of the child of the father of Abul Maal Abdul Muhith.,SELECT ?result WHERE { ?v1 <http://dbpedia.org/property/father> ?result . ?result <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/British_Raj> . ?v1 <http://dbpedia.org/property/father> ?v3 . <http://dbpedia.org/resource/Abul_Maal_Abdul_Muhith> <http://dbpedia.org/property/father> ?v3 . },"```sparql
SELECT ?nativeOfBritishRaj WHERE {
  # Identify Abul Maal Abdul Muhith
  ?muhith dbo:birthName ""Abul Maal Abdul Muhith""@en .
  
  # Find his father
  ?father dbo:child ?muhith .

  # Determine the child of this father (could be Abul Maal Abdul Muhith or another sibling)
  ?child dbo:parent ?father .

  # Check if any of these individuals are natives of the British Raj
  OPTIONAL {
    ?nativeOfBritishRaj dbo:nativePlace dbr:British_Raj .
    FILTER (?child = ?nativeOfBritishRaj || ?muhith = ?nativeOfBritishRaj)
  }
}
```",4,4,5,3,2,3,3,71,0,0,1,0,0.0,0
507,7,train,Who is the person born on 1966-02-18?,"SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/birthDate> ""1966-02-18""^^<http://www.w3.org/2001/XMLSchema#date> . }","```sparql
SELECT ?person ?name WHERE {
  ?person dbo:birthDate ""1966-02-18""^^xsd:date .
  OPTIONAL { ?person rdfs:label ?name . FILTER (lang(?name) = 'en') }
}
```",1,1,2,1,1,3,3,71,21,20,0,0.5121951219512195,1.0,0.6774193548387097
645,4,train,Give me the force of Carlos Asensio Cabanillas.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Carlos_Asensio_Cabanillas> . },"```sparql
SELECT ?force WHERE {
  ?person rdfs:label ""Carlos Asensio Cabanillas""@en .
  ?person dbo:militaryUnit ?force .
}
```",1,1,2,1,1,3,3,71,0,0,9,0,0.0,0
976,35,train,"Give me the office of the leader, that is a politician, of Grand National Assembly of Turkey and office of the person born as Mehmet Naci Bostancı.","SELECT ?result WHERE { ?v0 <http://dbpedia.org/property/birthName> ""Mehmet Naci Bostancı""@en . <http://dbpedia.org/resource/Grand_National_Assembly_of_Turkey> <http://dbpedia.org/ontology/leader> ?v1 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v1 <http://dbpedia.org/property/office> ?result . ?v0 <http://dbpedia.org/property/office> ?result . }","```sparql
SELECT ?officeLeader ?officeBostanci WHERE {
  # Find the leader of the Grand National Assembly of Turkey and their office
  ?assembly dbo:leader ?leader .
  ?assembly rdfs:label ""Grand National Assembly of Turkey""@en .
  
  OPTIONAL { 
    ?leader dbo:occupation ?officeLeader .
    FILTER (regex(str(?officeLeader), ""politician"", ""i""))
  }
  
  # Find Mehmet Naci Bostancı and his office
  ?bostanci rdfs:label ""Mehmet Naci Bostancı""@en .
  OPTIONAL {
    ?bostanci dbo:occupation ?officeBostanci .
    FILTER (regex(str(?officeBostanci), ""politician"", ""i""))
  }
}
```",4,5,5,2,2,3,3,71,0,0,1,0,0.0,0
645,16,train,"Give me the force, that is an event and a military conflict and a societal event, of the native, that is a president and a politician, of Restoration (Spain).",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/commander> ?v1 . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/President>. ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?v1 <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Restoration_(Spain)> . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. },"```sparql
SELECT ?event WHERE {
  # Identify Miguel Primo de Rivera as a president and politician during the Restoration period
  ?miguel dbo:occupation ""Politician""@en ;
          dbo:positionHeld ?presidency .
  ?presidency dbo:title ""President of Spain"" ;
              dbo:timePeriod ?restorationPeriod .
  ?restorationPeriod rdfs:label ""Restoration (Spain)""@en .

  # Find an event that is a force, military conflict, and societal event
  ?event dbo:relatedTo ?miguel ;
         rdf:type ?eventType .
  
  FILTER (
    (?eventType = dbpedia:Event) &&
    (?eventType = dbpedia:MilitaryConflict) &&
    (?eventType = dbpedia:SocietalEvent)
  )
}
```",2,7,3,2,1,3,3,71,0,0,1,0,0.0,0
442,1,train,Give me the resting place of Fay Bainter.,SELECT ?result WHERE { <http://dbpedia.org/resource/Fay_Bainter> <http://dbpedia.org/ontology/restingPlace> ?result . },"```sparql
SELECT ?burialPlace WHERE {
  ?fayBainter rdfs:label ""Fay Bainter""@en .
  ?fayBainter dbo:burialPlace ?burialPlace .
}
```",1,1,2,1,1,2,2,9,0,0,1,0,0.0,0
158,14,train,"Give me the party of the successor, that is a prime minister and an office holder and a politician, of the person deceased, that is an office holder and a politician, on 1945-09-15.","SELECT ?result WHERE { ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v2 <http://dbpedia.org/ontology/successor> ?v0 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v2 <http://dbpedia.org/ontology/deathDate> ""1945-09-15""^^<http://www.w3.org/2001/XMLSchema#date> . ?v0 <http://dbpedia.org/ontology/party> ?result . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/PrimeMinister>. }","```sparql
SELECT ?party WHERE {
  # Find the deceased person who was an office holder and politician on 1945-09-15
  ?deceased dbo:dateOfDeath ""1945-09-15""^^xsd:date ;
            a dbo:Politician, dbo:OfficeHolder .

  # Identify the successor as a prime minister, office holder, and politician
  ?successor dbo:succeededBy ?deceased ;
             a dbo:PrimeMinister, dbo:OfficeHolder, dbo:Politician .

  # Retrieve the political party of the successor
  ?successor dbo:partyAffiliation ?party .
}
```",3,8,4,3,1,3,2,20,0,0,1,0,0.0,0
645,26,train,"Give me the military force of the force, that is an event and a military conflict and a societal event, of the native, that is a president and a politician, of Restoration (Spain).",SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Restoration_(Spain)> . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?result <http://dbpedia.org/ontology/battle> ?v2 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/President>. ?v2 <http://dbpedia.org/ontology/commander> ?v1 . },"```sparql
SELECT ?militaryForce WHERE {
  # Identify the native of Restoration (Spain) who is a president and politician
  ?person dbo:birthPlace dbr:Spain ;
          dbo:occupation dbr:Politician ;
          dbo:officeHolder dbr:President_of_Spain .
  
  # Find events that are military conflicts, societal events, and general events during the Restoration period
  ?event dbo:type dbr:Military_conflict ;
         dbo:type dbr:Societal_event ;
         dbo:participatedIn ?person .

  # Get the military force involved in these events
  ?event dbo:militaryForce ?militaryForce .
}
```",3,8,4,3,1,3,3,71,0,0,514,0,0.0,0
365,5,train,"Give me the native, that is a politician, of Poltava Governorate.",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Poltava_Governorate> . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. },"```sparql
SELECT ?person WHERE {
  # Find people born in Poltava Governorate
  ?person dbo:birthPlace ?place .
  ?place rdfs:label ""Poltava Governorate""@en .

  # Ensure they have a political role or occupation
  ?person dbo:occupation ?occupation .
  FILTER (regex(str(?occupation), ""politician"", ""i""))
}
```",1,2,2,1,1,3,2,20,2,0,9,1.0,0.18181818181818182,0.3076923076923077
443,9,train,Give me the birthplace of Carl Larsson and birthplace of Ulf Lundell.,SELECT ?result WHERE { <http://dbpedia.org/resource/Carl_Larsson> <http://dbpedia.org/ontology/birthPlace> ?result . <http://dbpedia.org/resource/Ulf_Lundell> <http://dbpedia.org/ontology/birthPlace> ?result . },"```sparql
SELECT ?person ?name ?birthPlace WHERE {
  # Find Carl Larsson's birthplace
  OPTIONAL { 
    ?carlLarsson dbo:birthPlace ?birthPlace .
    ?carlLarsson rdfs:label ""Carl Larsson""@en .
    BIND(""Carl Larsson"" AS ?name)
  }
  
  # Find Ulf Lundell's birthplace
  OPTIONAL {
    ?ulfLundell dbo:birthPlace ?birthPlace .
    ?ulfLundell rdfs:label ""Ulf Lundell""@en .
    BIND(""Ulf Lundell"" AS ?name)
  }

  # Ensure we have a person and name to display
  VALUES ?person { ?carlLarsson ?ulfLundell }
}
```",2,2,3,1,2,2,3,28,0,0,1,0,0.0,0
976,13,train,"Give me the office of the mayor, that is a politician and an office holder and Turkish, of Nation Alliance (Turkey).",SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/nationality> <http://dbpedia.org/resource/Turkey>. ?v1 <http://dbpedia.org/property/office> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. <http://dbpedia.org/resource/Nation_Alliance_(Turkey)> <http://dbpedia.org/property/leader> ?v1 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. },"```sparql
SELECT ?mayorOffice WHERE {
  # Find individuals associated with Nation Alliance in Turkey
  ?person dbo:party dbr:Nation_Alliance_(Turkey) .
  
  # Ensure they are politicians and office holders
  ?person rdf:type dbo:Politician ;
          dbo:officeHolder true .

  # Check if the individual is Turkish
  ?person dbo:nationality dbr:Turkey .

  # Identify their specific office as a mayor
  ?person dbo:positionTitle ?mayorOffice .
  FILTER (regex(str(?mayorOffice), ""Mayor"", ""i""))
}
```",2,5,3,2,1,3,3,71,0,0,3,0,0.0,0
443,14,train,"Give me the birthplace of the person born, that is a musical artist and an artist, on 1949-11-20 and landmark at elevation of 28.","SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?result <http://dbpedia.org/ontology/elevation> ""28""^^<http://www.w3.org/2001/XMLSchema#integer> . ?v1 <http://dbpedia.org/ontology/birthDate> ""1949-11-20""^^<http://www.w3.org/2001/XMLSchema#date> . ?v1 <http://dbpedia.org/ontology/birthPlace> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. }","```sparql
SELECT ?birthPlace WHERE {
  ?person dbo:birthDate ""1949-11-20""^^xsd:date .
  ?person dbo:occupation ?occupation .
  FILTER (
    (CONTAINS(LCASE(str(?occupation)), ""musical artist"") || CONTAINS(LCASE(str(?occupation)), ""artist""))
  )
  
  OPTIONAL {
    ?person rdfs:label ""David Bowie""@en .
  }
  
  ?person dbo:birthPlace ?birthPlace .

  OPTIONAL {
    ?landmark dbo:elevation ""28""^^xsd:float ;
              dbo:associatedWith ?person .
  }
}
```",3,5,4,2,2,2,3,28,0,0,1,0,0.0,0
791,19,train,"Give me the predecessor of Emperor Antoku and spouse of the spouse, that is a royalty, of Emperor Takakura.",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/spouse> ?v0 . ?result <http://dbpedia.org/ontology/successor> <http://dbpedia.org/resource/Emperor_Antoku> . ?v0 <http://dbpedia.org/ontology/spouse> <http://dbpedia.org/resource/Emperor_Takakura> . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. },"```sparql
SELECT ?predecessor ?royalSpouseSpouse WHERE {
  # Find Emperor Antoku and his predecessor
  ?antoku dbo:parent ?predecessor .
  ?antoku rdfs:label ""Emperor Antoku""@en .

  # Find spouse of Emperor Takakura who is royalty
  OPTIONAL { 
    ?takakura dbo:spouse ?royalSpouse .
    ?takakura rdfs:label ""Emperor Takakura""@en .
    FILTER (regex(str(?royalSpouse), ""Imperial Princess Shushi"", ""i""))
  }

  # Find spouse of the royal spouse identified
  OPTIONAL {
    ?royalSpouse dbo:spouse ?royalSpouseSpouse .
    FILTER (regex(str(?royalSpouse), ""Imperial Princess Shushi"", ""i""))
  }
}
```",3,4,4,2,2,3,3,71,1,1,0,0.5,1.0,0.6666666666666666
933,27,train,"Give me the band of the band, that is a group and a band and an organisation, of the person born, that is a musical artist, on 1947-04-21.","SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?v1 <http://dbpedia.org/ontology/birthDate> ""1947-04-21""^^<http://www.w3.org/2001/XMLSchema#date> . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Group>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?v0 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Band>. ?v1 <http://dbpedia.org/ontology/associatedMusicalArtist> ?v0 . }","```sparql
SELECT ?bandOfBand WHERE {
  # Identify the person born on April 21, 1947, who is a musical artist
  ?person dbo:birthDate ""1947-04-21""^^xsd:date ;
          rdf:type dbo:MusicalArtist .

  # Find the band associated with this person that is also a group and an organization
  ?band dbo:musicalArtist ?person ;
        rdf:type dbo:Band, dbo:Group, dbo:Organization .

  # Find the band of the identified band
  ?band dbo:partOf ?bandOfBand .
}
```",3,7,4,3,1,3,3,71,0,0,4,0,0.0,0
865,15,train,"Give me the residence, that is a country, of the person decedent at Patna.",SELECT ?result WHERE { ?v0 <http://dbpedia.org/ontology/deathPlace> <http://dbpedia.org/resource/Patna> . ?v0 <http://dbpedia.org/property/residence> ?result . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. },"```sparql
SELECT DISTINCT ?person ?country WHERE {
  # Find persons who died in Patna
  ?person dbo:deathPlace ?place .
  ?place rdfs:label ""Patna""@en .

  # Get the country of residence for these persons
  OPTIONAL { 
    ?person dbo:residenceCountry ?country .
  }
}
```",2,3,3,2,1,3,3,71,0,66,1,0.0,0.0,0
122,6,train,"Give me the band of the reference, that is a musical artist and an artist, to Gift of Gab.","SELECT ?result WHERE { ?v0 <http://xmlns.com/foaf/0.1/name> ""Gift of Gab""@en . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?v0 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. }","```sparql
SELECT ?band WHERE {
  ?giftOfGab dbo:musicalArtist ?band .
  ?giftOfGab rdfs:label ""Gift of Gab""@en .
  
  # Ensure the band is also recognized as an artist
  ?band rdf:type dbp:MusicalArtist .
}
```",2,4,3,2,1,2,2,9,0,0,4,0,0.0,0
18,15,train,"Give me the alumnus of Marymount College, Tarrytown and professional in the award of Ana María Sánchez de Ríos.","SELECT ?result WHERE { ?result <http://dbpedia.org/property/occupation> ?v0 . ?result <http://dbpedia.org/ontology/almaMater> <http://dbpedia.org/resource/Marymount_College,_Tarrytown> . <http://dbpedia.org/resource/Ana_María_Sánchez_de_Ríos> <http://dbpedia.org/property/awards> ?v0 . }","```sparql
SELECT ?alumnus WHERE {
  # Find alumni of Marymount College, Tarrytown
  ?alumnus dbo:almaMater dbr:Marymount_College,_Tarrytown .
  
  # Identify the professional field or award category associated with Ana María Sánchez de Ríos
  OPTIONAL {
    ?anaMaría dbo:professionOrAwardCategory ?professionalField .
    ?anaMaría rdfs:label ""Ana María Sánchez de Ríos""@en .
  }
  
  # Match alumnus in the same professional field as Ana María Sánchez de Ríos
  ?alumnus dbo:professionOrAwardCategory ?professionalField .
}
```",3,3,4,2,2,2,3,28,0,0,1,0,0.0,0
456,7,train,Give me the band of Alan Doyle.,SELECT ?result WHERE { <http://dbpedia.org/resource/Alan_Doyle> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . },"```sparql
SELECT ?band WHERE {
  ?doyle dbo:member ?band .
  ?doyle rdfs:label ""Alan Doyle""@en .
}
```",1,1,2,1,1,3,3,71,0,0,3,0,0.0,0
965,10,train,"Give me the parent of George Mountbatten, 2nd Marquess of Milford Haven and spouse of Prince Louis of Battenberg.","SELECT ?result WHERE { <http://dbpedia.org/resource/George_Mountbatten,_2nd_Marquess_of_Milford_Haven> <http://dbpedia.org/ontology/parent> ?result . ?result <http://dbpedia.org/ontology/spouse> <http://dbpedia.org/resource/Prince_Louis_of_Battenberg> . }","```sparql
SELECT ?parent ?spouse WHERE {
  # Find parent of George Mountbatten, 2nd Marquess of Milford Haven
  ?georgeMountbatten dbo:parent ?parent .
  ?georgeMountbatten rdfs:label ""George Mountbatten, 2nd Marquess of Milford Haven""@en .

  # Find spouse of Prince Louis of Battenberg
  ?princeLouis dbo:spouse ?spouse .
  ?princeLouis rdfs:label ""Prince Louis of Battenberg""@en .
}
```",2,2,3,1,2,3,3,71,1,1,0,0.5,1.0,0.6666666666666666
136,1,train,Give me the landmark at elevation of 5.,"SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/elevation> ""5""^^<http://www.w3.org/2001/XMLSchema#integer> . }","```sparql
SELECT ?landmark ?elevation WHERE {
  ?landmark a dbo:Landmark .
  ?landmark dbp:elevation ?elevation .
  FILTER (?elevation = ""5""^^xsd:integer)
}
```",1,1,2,1,1,2,2,9,0,0,909,0,0.0,0
645,19,train,Give me the military force of Spanish Civil War and commander in the force of Carlos Asensio Cabanillas.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/battle> <http://dbpedia.org/resource/Spanish_Civil_War> . ?v0 <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Carlos_Asensio_Cabanillas> . ?v0 <http://dbpedia.org/ontology/commander> ?result . },"```sparql
SELECT ?militaryForce ?commander WHERE {
  # Identify Carlos Asensio Cabanillas and his associated military force
  ?cabanillas dbo:spouse ?person .
  ?cabanillas rdfs:label ""Carlos Asensio Cabanillas""@en .
  
  OPTIONAL {
    ?cabanillas dbo:militaryForce ?militaryForce .
    FILTER (regex(str(?militaryForce), ""Spanish Civil War"", ""i""))
  }
  
  # Find the commander of this military force
  OPTIONAL {
    ?militaryForce dbo:commander ?commander .
  }
}
```",3,3,4,2,2,3,3,71,0,0,23,0,0.0,0
93,4,train,"Who is the native, that is a politician, of Seattle?",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Seattle> . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. },"```sparql
SELECT ?politician WHERE {
  ?politician rdf:type dbo:Politician .
  ?politician dbo:birthPlace ?place .
  ?place rdfs:label ""Seattle""@en .
}
```",1,2,2,1,1,3,2,20,114,0,0,1.0,1.0,1.0
456,34,train,"Give me the band of Alan Doyle and spouse of the actor of the movie, that is a work and a television show, with Ross Newton.",SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/spouse> ?result . <http://dbpedia.org/resource/Alan_Doyle> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v2 <http://dbpedia.org/property/starring> ?v1 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/TelevisionShow>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?v2 <http://dbpedia.org/property/starring> <http://dbpedia.org/resource/Ross_Newton> . },"```sparql
SELECT ?band ?actorSpouse WHERE {
  # Find Alan Doyle and his band
  ?doyle dbo:member ?band .
  ?doyle rdfs:label ""Alan Doyle""@en .

  # Find a work that is both a movie and TV show with Ross Newton
  ?work dbo:actor ?rossNewton ;
        rdf:type ?type .
  ?rossNewton rdfs:label ""Ross Newton""@en .
  FILTER (?type IN (dbo:Film, dbo:TelevisionShow)) 

  # Find another actor in the same work
  ?work dbo:actor ?anotherActor .

  # Find the spouse of this other actor
  ?anotherActor dbo:spouse ?actorSpouse .
}
```",4,6,5,3,2,3,3,71,0,0,1,0,0.0,0
124,5,train,Who is the awardee of British South Africa Company Medal?,SELECT ?result WHERE { ?result <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/British_South_Africa_Company_Medal> . },"```sparql
SELECT ?awardee WHERE {
  ?medal rdfs:label ""British South Africa Company Medal""@en .
  ?medal dbo:recipient ?awardee .
}
```

This query does the following:
- **`?medal rdfs:label ""British South Africa Company Medal""@en .`:** Identifies the entity for the British South Africa Company Medal.
- **`?medal dbo:recipient ?awardee .`:** Retrieves individuals who are recipients (awardees) of this medal.",1,1,2,1,1,3,3,71,0,0,5,0,0.0,0
102,0,train,Give me the manager of Sheffield United W.F.C..,SELECT ?result WHERE { <http://dbpedia.org/resource/Sheffield_United_W.F.C.> <http://dbpedia.org/ontology/manager> ?result . },"```sparql
SELECT ?manager WHERE {
  ?club rdfs:label ""Sheffield United Women""@en .
  ?club dbo:manager ?manager .
}
```",1,1,2,1,1,3,2,20,0,0,1,0,0.0,0
456,9,train,Give me the professional in  and spouse of Danielle Spencer (Australian actress).,"SELECT ?result WHERE { ?result <http://dbpedia.org/property/occupation> """"@en . <http://dbpedia.org/resource/Danielle_Spencer_(Australian_actress)> <http://dbpedia.org/ontology/spouse> ?result . }","```sparql
SELECT ?profession ?spouse WHERE {
  ?danielle a dbo:Actor ;
            rdfs:label ""Danielle Spencer (Australian actress)""@en .
  
  OPTIONAL { 
    ?danielle dbo:occupation ?profession .
  }
  
  OPTIONAL {
    ?danielle dbo:spouse ?spouse .
  }
}
```",2,2,3,1,2,3,3,71,0,0,1,0,0.0,0
192,2,train,Give me the child of Charles II of Naples.,SELECT ?result WHERE { ?result <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Charles_II_of_Naples> . },"```sparql
SELECT ?child WHERE {
  ?charlesII dbo:parent ?child .
  ?charlesII rdfs:label ""Charles II of Naples""@en .
}
```",1,1,2,1,1,3,2,20,0,2,2,0.0,0.0,0
582,30,train,Give me the reference to Japan and figure known as the nickname of Japan national football team and player in Kazuaki Nagasawa.,"SELECT ?result WHERE { ?result <http://xmlns.com/foaf/0.1/name> ""Japan""@en . <http://dbpedia.org/resource/Japan_national_football_team> <http://dbpedia.org/property/nickname> ?v1 . ?result <http://dbpedia.org/property/nickname> ?v1 . <http://dbpedia.org/resource/Kazuaki_Nagasawa> <http://dbpedia.org/ontology/team> ?result . }","```sparql
SELECT ?nickname WHERE {
  # Find the Japan national football team and its nickname
  ?team dbo:country dbr:Japan ;
        rdfs:label ""Japan national football team""@en .
  
  OPTIONAL { 
    ?team foaf:nick ?nickname .
  }
  
  # Verify Kazuaki Nagasawa is a player in the Japan national football team
  ?player dbo:memberOfTeam ?team ;
          rdfs:label ""Kazuaki Nagasawa""@en .
}
```",4,4,5,2,3,3,3,71,0,0,1,0,0.0,0
433,7,train,Give me the writer of Slowhand at 70 – Live at the Royal Albert Hall.,SELECT ?result WHERE { <http://dbpedia.org/resource/Slowhand_at_70_–_Live_at_the_Royal_Albert_Hall> <http://dbpedia.org/property/writer> ?result . },"```sparql
SELECT ?song ?writer WHERE {
  # Find the album ""Slowhand at 70 – Live at the Royal Albert Hall""
  ?album dbo:title ""Slowhand at 70 – Live at the Royal Albert Hall""@en .
  
  # Get songs from this album
  ?album dbo:hasPart ?song .
  
  # Retrieve writers of these songs
  ?song dbo:writer ?writer .
}
```",1,1,2,1,1,3,3,71,0,0,30,0,0.0,0
36,8,train,"Give me the actor of the claim to fame, that is a film, of Lepacious Bose.",SELECT ?result WHERE { <http://dbpedia.org/resource/Lepacious_Bose> <http://dbpedia.org/ontology/knownFor> ?v1 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Film>. ?v1 <http://dbpedia.org/ontology/starring> ?result . },"```sparql
SELECT ?film ?actor WHERE {
  # Find Lepa Bose and her claim to fame which is a film
  ?lepabose dbo:claimToFame ?fame .
  ?lepabose rdfs:label ""Lepa Bose""@en .
  
  OPTIONAL { 
    ?fame rdf:type dbo:Film .
    ?fame rdfs:label ?filmLabel .
    FILTER (lang(?filmLabel) = 'en')
    BIND(str(?fame) AS ?film)
  }
  
  # Find actors in the film
  OPTIONAL {
    ?film dbo:starring ?actor .
  }
}
```",2,3,3,2,1,2,3,28,0,0,6,0,0.0,0
926,4,train,Give me the father of Abdulaziz.,SELECT ?result WHERE { <http://dbpedia.org/resource/Abdulaziz> <http://dbpedia.org/property/father> ?result . },"```sparql
SELECT ?father WHERE {
  ?abdulaziz dbo:parent ?father .
  ?abdulaziz rdfs:label ""Abdulaziz""@en .
}
```",1,1,2,1,1,3,3,71,1,1,0,0.5,1.0,0.6666666666666666
791,20,train,Give me the predecessor of the child of Emperor Takakura and spouse of Taira no Tokuko.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/successor> ?v2 . ?v2 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Emperor_Takakura> . ?result <http://dbpedia.org/ontology/spouse> <http://dbpedia.org/resource/Taira_no_Tokuko> . },"```sparql
SELECT ?predecessor WHERE {
  # Find Emperor Takakura and his child
  ?takakura dbo:child ?child .
  ?takakura rdfs:label ""Emperor Takakura""@en .

  # Find the predecessor of this child (likely in terms of imperial succession)
  OPTIONAL { 
    ?succession dbo:predecessor ?predecessor .
    ?succession dbo:succeeds ?child .
  }

  # Identify Taira no Tokuko and her spouse
  OPTIONAL {
    ?tokuko dbo:spouse ?spouse .
    ?tokuko rdfs:label ""Taira no Tokuko""@en .
  }
}
```",3,3,4,2,2,3,3,71,0,0,1,0,0.0,0
443,16,train,Give me the landmark at elevation of 28 and birthplace of the work of yes.,"SELECT ?result WHERE { ?v2 <http://dbpedia.org/ontology/birthPlace> ?result . ?v2 <http://dbpedia.org/property/author> ""yes""@en . ?result <http://dbpedia.org/ontology/elevation> ""28""^^<http://www.w3.org/2001/XMLSchema#integer> . }","```sparql
# Query for landmark at elevation of 28
SELECT ?landmark WHERE {
  ?landmark dbo:elevationAboveSeaLevel ?elevation .
  FILTER (?elevation = ""28""^^xsd:integer)
}

UNION

# Query for birthplace related to the band Yes
SELECT ?birthPlace WHERE {
  ?person dbo:band ?yesBand .
  ?yesBand rdfs:label ""Yes""@en .
  ?person dbo:birthPlace ?birthPlace .
}
```",3,3,4,2,2,2,3,28,0,0,2,0,0.0,0
47,19,train,Give me the office of Bidesh Ranjan Bose and office of the administration of Jagdeep Dhankhar.,SELECT ?result WHERE { <http://dbpedia.org/resource/Bidesh_Ranjan_Bose> <http://dbpedia.org/property/office> ?result . ?v0 <http://dbpedia.org/property/office> ?result . ?v0 <http://dbpedia.org/property/governor> <http://dbpedia.org/resource/Jagdeep_Dhankhar> . },"```sparql
SELECT ?person ?name ?office WHERE {
  # Find Bidesh Ranjan Bose and his office
  OPTIONAL {
    ?bose dbo:birthName ""Bidesh Ranjan Bose""@en .
    ?bose rdfs:label ?name .
    ?bose dbo:office ?office .
  }
  
  # Find Jagdeep Dhankhar and his office
  OPTIONAL {
    ?dhankhar dbo:birthName ""Jagdeep Dhankhar""@en .
    ?dhankhar rdfs:label ?name .
    ?dhankhar dbo:office ?office .
  }
}
```",3,3,4,2,2,3,3,71,0,0,1,0,0.0,0
442,4,train,Give me the resting place of Fay Bainter and resting place of Allyn K. Capron.,SELECT ?result WHERE { <http://dbpedia.org/resource/Allyn_K._Capron> <http://dbpedia.org/ontology/restingPlace> ?result . <http://dbpedia.org/resource/Fay_Bainter> <http://dbpedia.org/ontology/restingPlace> ?result . },"```sparql
SELECT ?person ?name ?restingPlace WHERE {
  # Find Fay Bainter's resting place
  OPTIONAL {
    ?fayBainter dbo:name ""Fay Bainter""@en .
    ?fayBainter dbo:burialPlace ?restingPlace .
    BIND(""Fay Bainter"" AS ?name)
    BIND(?fayBainter AS ?person)
  }
  
  # Find Allyn K. Capron's resting place
  OPTIONAL {
    ?allynCapron dbo:name ""Allyn K. Capron""@en .
    ?allynCapron dbo:burialPlace ?restingPlace .
    FILTER NOT EXISTS { ?fayBainter dbo:burialPlace ?restingPlace } # Ensure distinct results for each person
    BIND(""Allyn K. Capron"" AS ?name)
    BIND(?allynCapron AS ?person)
  }
}
```",2,2,3,1,2,2,2,9,0,0,1,0,0.0,0
888,0,train,Give me the commander in Southern Ukraine campaign.,SELECT ?result WHERE { <http://dbpedia.org/resource/Southern_Ukraine_campaign> <http://dbpedia.org/ontology/commander> ?result . },"```sparql
SELECT ?campaign ?commander WHERE {
  # Find the campaign related to Southern Ukraine
  ?campaign dbo:location ?location .
  ?location rdfs:label ""Southern Ukraine""@en .

  # Identify the commander of this campaign
  ?campaign dbo:commander ?commander .
}
```",1,1,2,1,1,3,2,20,0,0,13,0,0.0,0
645,9,train,Give me the military force of Spanish Civil War and commander in Battle of Jarama.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/battle> <http://dbpedia.org/resource/Spanish_Civil_War> . <http://dbpedia.org/resource/Battle_of_Jarama> <http://dbpedia.org/ontology/commander> ?result . },"```sparql
SELECT ?militaryForce ?commander WHERE {
  # Find military forces involved in the Spanish Civil War
  ?civilWar dbo:participatingMilitaryUnit ?militaryForce .
  ?civilWar rdfs:label ""Spanish Civil War""@en .

  # Find commanders in the Battle of Jarama
  OPTIONAL {
    ?battle dbo:commander ?commander .
    ?battle rdfs:label ""Battle of Jarama""@en .
  }
}
```",2,2,3,1,2,3,3,71,0,0,6,0,0.0,0
192,5,train,Give me the child of Stephen V of Hungary.,SELECT ?result WHERE { ?result <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Stephen_V_of_Hungary> . },"```sparql
SELECT ?child WHERE {
  ?stephenV rdfs:label ""Stephen V of Hungary""@en .
  ?stephenV dbo:child ?child .
}
```",1,1,2,1,1,3,2,20,5,1,0,0.8333333333333334,1.0,0.9090909090909091
582,26,train,"Give me the player in the father, that is an athlete and a soccer manager and a sports manager, of the child of Kazuaki Nagasawa.",SELECT ?result WHERE { ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Athlete>. ?v1 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Kazuaki_Nagasawa> . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsManager>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerManager>. ?v2 <http://dbpedia.org/ontology/team> ?result . ?v1 <http://dbpedia.org/property/father> ?v2 . },"```sparql
SELECT ?fatherPlayer WHERE {
  # Identify Kazuaki Nagasawa's child
  ?child dbo:parent ?kazuakiNagasawa .
  ?kazuakiNagasawa rdfs:label ""Kazuaki Nagasawa""@en .

  # Determine the father of this child
  ?child dbo:parent ?father .

  # Check if the father is an athlete, soccer manager, and sports manager
  ?father rdf:type ?type .
  FILTER (
    EXISTS { ?father dbo:occupation ""Athlete""@en . }
    && EXISTS { ?father dbo:occupation ""Soccer Manager""@en . }
    && EXISTS { ?father dbo:occupation ""Sports Manager""@en . }
  )

  # Identify the player in the father's role
  OPTIONAL {
    ?father foaf:name ?fatherPlayer .
  }
}
```",3,6,4,3,1,3,3,71,0,0,4,0,0.0,0
83,11,train,"Give me the party of Alceu Collares and ruling party in the birthplace, that is a town and Brazilian and a soccer club, of Sandro (footballer, born October 1983).","SELECT ?result WHERE { ?v2 <http://dbpedia.org/property/leaderParty> ?result . ?v2 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Brazil>. <http://dbpedia.org/resource/Alceu_Collares> <http://dbpedia.org/ontology/party> ?result . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Town>. <http://dbpedia.org/resource/Sandro_(footballer,_born_October_1983)> <http://dbpedia.org/ontology/birthPlace> ?v2 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerClub>. }","```sparql
SELECT ?alceuParty ?rulingParty WHERE {
  # Find Alceu Collares' political party
  ?alceu dbo:birthName ""Alceu Collares"" .
  ?alceu dbo:politicalParty ?alceuParty .

  # Find Sandro's birthplace and ensure it is a town in Brazil with a soccer club
  ?sandro dbo:birthPlace ?town .
  ?sandro rdfs:label ""Sandro (footballer, born October 1983)""@en .
  
  ?town dbo:type dbr:Town .
  ?town dbo:country dbc:Brazil .
  OPTIONAL { 
    ?club dbo:sportTeam ?team .
    ?team dbo:location ?town .
    FILTER EXISTS { ?team dbo:sport ""Association football""@en }
  }

  # Find the ruling party in Sandro's birthplace
  ?town dbo:rulingParty ?rulingParty .
}
```",3,6,4,2,2,3,2,20,0,0,1,0,0.0,0
573,13,train,"Give me the person decedent at the residence, that is a settlement, of William J. Phelan.",SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. ?result <http://dbpedia.org/ontology/deathPlace> ?v1 . <http://dbpedia.org/resource/William_J._Phelan> <http://dbpedia.org/property/residence> ?v1 . },"```sparql
SELECT ?decedent WHERE {
  # Find William J. Phelan's residence that is a settlement
  ?phelan dbo:residence ?residence .
  ?residence rdf:type dbo:Settlement .
  ?phelan rdfs:label ""William J. Phelan""@en .

  # Find notable person decedents at the residence
  OPTIONAL {
    ?decedent dbo:placeOfDeath ?residence .
    ?decedent a dbo:Person .
  }
}
```",2,3,3,2,1,3,3,71,0,0,40,0,0.0,0
83,7,train,"Give me the ruling party in the birthplace, that is a town and Brazilian and a soccer club, of Sandro (footballer, born October 1983).","SELECT ?result WHERE { <http://dbpedia.org/resource/Sandro_(footballer,_born_October_1983)> <http://dbpedia.org/ontology/birthPlace> ?v1 . ?v1 <http://dbpedia.org/property/leaderParty> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerClub>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Town>. ?v1 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Brazil>. }","```sparql
SELECT ?rulingParty WHERE {
  # Find Sandro (footballer, born October 1983)
  ?sandro dbo:birthPlace ?town .
  ?sandro rdfs:label ""Sandro (footballer, born October 1983)""@en .

  # Ensure the birthplace is a town and in Brazil
  ?town rdf:type dbo:Town ;
        dbo:country dbr:Brazil .

  # Check for an associated soccer club
  OPTIONAL {
    ?club dbo:location ?town .
    ?club rdf:type dbo:SoccerClub .
  }

  # Find the ruling party in the birthplace
  ?town dbo:government ?government .
  ?government dbo:rulingParty ?rulingParty .
}
```",2,5,3,2,1,3,2,20,0,0,1,0,0.0,0
645,33,train,"Give me the military force of the force, that is an event and a military conflict and a societal event, of the native, that is a president and a politician, of Restoration (Spain) and commander in Battle of Jarama.",SELECT ?result WHERE { ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v3 <http://dbpedia.org/ontology/commander> ?v0 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. <http://dbpedia.org/resource/Battle_of_Jarama> <http://dbpedia.org/ontology/commander> ?result . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?result <http://dbpedia.org/ontology/battle> ?v3 . ?v0 <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Restoration_(Spain)> . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/President>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. },"```sparql
SELECT ?militaryForce WHERE {
  # Find the native who is a president and politician during Restoration (Spain)
  ?person dbo:nationality dbr:Spain ;
          dbo:occupation dbr:Politician ;
          dbo:officeHolderOf dbr:President_of_Spain ;
          dbo:birthPlace dbr:Restoration_(Spain) .

  # Identify the commander in Battle of Jarama
  ?person dbo:commanderInMilitaryConflict dbr:Battle_of_Jarama .

  # Find the military force associated with an event that is both a military conflict and societal event
  ?event dbo:type dbr:Military_conflict ;
         dbo:type dbr:Societal_event .
  
  ?militaryForce dbo:participatedIn ?event .
}
```",4,9,5,3,2,3,3,71,0,0,6,0,0.0,0
573,19,train,"Give me the person decedent at Quincy, Massachusetts and person decedent at the administration, that is a region, of Charlie Baker.","SELECT ?result WHERE { ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Region>. ?result <http://dbpedia.org/ontology/deathPlace> ?v0 . ?v0 <http://dbpedia.org/property/governor> ""Charlie Baker""@en . ?result <http://dbpedia.org/ontology/deathPlace> <http://dbpedia.org/resource/Quincy,_Massachusetts> . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?personDecedentQuincy WHERE {
  ?personDecedentQuincy dbo:placeOfDeath ?quincy .
  ?quincy rdfs:label ""Quincy, Massachusetts""@en .
}

SELECT ?personDecedentBaker WHERE {
  ?personDecedentBaker dbo:dateOfDeath ?deathDate .
  FILTER (?deathDate >= ""2015-01-01""^^xsd:date && ?deathDate <= ""2023-12-31""^^xsd:date)
}
```",3,4,4,2,2,3,3,71,0,0,4,0,0.0,0
507,37,train,"Give me the professional in Film director, television director and director of the movie, that is a movie and a work, with the person born on 1919-06-17.","SELECT ?result WHERE { ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Film>. ?v3 <http://dbpedia.org/property/starring> ?v0 . ?v0 <http://dbpedia.org/ontology/birthDate> ""1919-06-17""^^<http://www.w3.org/2001/XMLSchema#date> . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?result <http://dbpedia.org/property/occupation> ""Film director, television director""@en . ?v3 <http://dbpedia.org/ontology/director> ?result . }","```sparql
SELECT ?person ?name WHERE {
  # Find person born on June 17, 1919
  ?person dbo:birthDate ?date .
  FILTER (YEAR(?date) = 1919 && MONTH(?date) = 6 && DAY(?date) = 17)
  
  # Check if the person has professions related to directing
  ?person dbo:occupation ?occupation .
  VALUES ?occupation { 
    dbc:Film_directors 
    dbc:Television_directors 
  }
  
  # Ensure they directed a movie that is both a ""movie"" and a ""work""
  ?person dbo:directed ?film .
  ?film rdf:type dbp:Movie .
  ?film rdf:type dbo:Work .

  # Get the name of the person
  ?person rdfs:label ?name .
  FILTER (LANG(?name) = 'en')
}
```",4,6,5,3,2,3,3,71,0,0,1,0,0.0,0
98,12,train,Give me the birth place of Paolo Ballesteros and entity in Philippines and region of Philippine Standard Time.,SELECT ?result WHERE { <http://dbpedia.org/resource/Paolo_Ballesteros> <http://dbpedia.org/ontology/birthPlace> ?result . ?result <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Philippines> . ?result <http://dbpedia.org/ontology/timeZone> <http://dbpedia.org/resource/Philippine_Standard_Time> . },"```sparql
SELECT ?birthPlace ?entity WHERE {
  # Find the birth place of Paolo Ballesteros
  ?paolo dbo:birthPlace ?birthPlace .
  ?paolo rdfs:label ""Paolo Ballesteros""@en .

  # Find an entity in the Philippines associated with Philippine Standard Time
  ?entity dbo:location ?location .
  ?location dbo:country dbr:Philippines .
  ?location dbo:timeZone dbr:Philippine_Standard_Time .
}
```",3,3,4,1,3,2,3,28,2,1612,0,0.0012391573729863693,1.0,0.0024752475247524753
433,22,train,Give me the associated musical artist of Paul Chambers and professional in the profession of Bob Marley.,SELECT ?result WHERE { ?result <http://dbpedia.org/property/occupation> ?v1 . <http://dbpedia.org/resource/Bob_Marley> <http://dbpedia.org/property/occupation> ?v1 . <http://dbpedia.org/resource/Paul_Chambers> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . },"```sparql
SELECT ?associatedArtist ?reggaeMusician WHERE {
  # Find an associated musical artist of Paul Chambers
  ?paulChambers dbo:profession dbr:Jazz_bassist .
  ?paulChambers rdfs:label ""Paul Chambers""@en .
  ?paulChambers dbo:associatedMusicalArtist ?associatedArtist .

  # Find a professional in the profession of Bob Marley
  ?bobMarley dbo:profession dbr:Singer-songwriter .
  ?bobMarley rdfs:label ""Bob Marley""@en .
  ?reggaeMusician dbo:profession dbr:Singer-songwriter .
  
  # Check for any connection between the associated artist and the reggae musician
  OPTIONAL {
    ?associatedArtist dbo:collaboratedWith|dbo:influencedBy|dbo:influenced ?reggaeMusician .
  }
}
```",3,3,4,2,2,3,3,71,0,0,16,0,0.0,0
216,15,train,"Give me the coach of the reference, that is an organisation and a soccer club, to Croatia U21.","SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerClub>. ?v1 <http://dbpedia.org/ontology/coach> ?result . ?v1 <http://xmlns.com/foaf/0.1/name> ""Croatia U21""@en . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. }","```sparql
SELECT ?referenceClub WHERE {
  # Find the coach of Croatia U21
  ?croatiaU21 dbo:coach ?coach .
  ?croatiaU21 rdfs:label ""Croatia national under-21 football team""@en .

  # Check if this coach is associated with another soccer club or organization
  OPTIONAL {
    ?coach dbo:employee ?referenceClub .
    FILTER (isLiteral(?referenceClub) = false)
  }
}
```",2,4,3,2,1,3,3,71,0,0,1,0,0.0,0
326,1,train,Give me the person decedent at France.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/deathPlace> <http://dbpedia.org/resource/France> . },"```sparql
SELECT ?person WHERE {
  ?person dbo:deathPlace ?place .
  ?place rdfs:label ?label .
  FILTER (CONTAINS(LCASE(?label), ""france""))
}
```

This query selects individuals (`?person`) whose death place (`dbo:deathPlace`) is associated with a location (`?place`) that has a label containing the word ""France"". The `FILTER` function ensures case insensitivity by converting labels to lowercase.",1,1,2,1,1,3,2,20,0,0,3795,0,0.0,0
976,1,train,Give me the office of Meral Akşener.,SELECT ?result WHERE { <http://dbpedia.org/resource/Meral_Akşener> <http://dbpedia.org/property/office> ?result . },"```sparql
SELECT ?office WHERE {
  ?person rdfs:label ""Meral Akşener""@en .
  ?person dbo:officeHeld ?office .
}
```",1,1,2,1,1,3,3,71,0,0,3,0,0.0,0
976,11,train,"Give me the office of the leader, that is a politician, of Grand National Assembly of Turkey.",SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v1 <http://dbpedia.org/property/office> ?result . <http://dbpedia.org/resource/Grand_National_Assembly_of_Turkey> <http://dbpedia.org/ontology/leader> ?v1 . },"```sparql
SELECT ?office WHERE {
  ?assembly rdf:type dbo:Parliament .
  ?assembly rdfs:label ""Grand National Assembly of Turkey""@en .
  
  ?leader dbo:leaderOf ?assembly ;
          rdf:type dbpedia-owl:Politician .

  ?leader dbo:positionHeld ?office .
}
```",2,3,3,2,1,3,3,71,0,0,4,0,0.0,0
527,12,train,"Give me the author of the work, that is a work and a book, of Tom Baker and actor of The Book Tower.",SELECT ?result WHERE { ?v0 <http://dbpedia.org/property/author> ?result . ?v0 <http://dbpedia.org/property/author> <http://dbpedia.org/resource/Tom_Baker> . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Book>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. <http://dbpedia.org/resource/The_Book_Tower> <http://dbpedia.org/property/starring> ?result . },"```sparql
SELECT ?author WHERE {
  # Find works by Tom Baker that are also books
  ?work dbo:creator ?tomBaker .
  ?tomBaker rdfs:label ""Tom Baker""@en .
  ?work rdf:type dbp:Book .

  # Identify actors of The Book Tower
  ?theBookTower dbo:actor ?actor .
  ?theBookTower rdfs:label ""The Book Tower""@en .

  # Find connection between the actor and Tom Baker's works
  OPTIONAL {
    ?actor dbo:creator ?author .
    FILTER (?work = ?book)
  }
}
```",3,5,4,2,2,3,2,20,0,0,1,0,0.0,0
773,39,train,"Give me the parent of the child, that is a royalty, of the father, that is an office holder and a royalty, of Carloman of Bavaria and parent of Carloman of Bavaria.",SELECT ?result WHERE { <http://dbpedia.org/resource/Carloman_of_Bavaria> <http://dbpedia.org/property/father> ?v0 . ?result <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Carloman_of_Bavaria> . ?v1 <http://dbpedia.org/ontology/parent> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v1 <http://dbpedia.org/property/father> ?v0 . },"```sparql
SELECT ?grandParent WHERE {
  # Find Carloman of Bavaria and his father
  ?carloman dbo:parent ?father .
  ?carloman rdfs:label ""Carloman of Bavaria""@en .

  # Ensure the father is an office holder and royalty
  ?father rdf:type dbo:RoyalPerson ;
          dbo:officeHolder ?office .

  # Find a royal child of this father
  ?child dbo:parent ?father .
  ?child rdf:type dbo:RoyalPerson .

  # Find the parent of this royal child
  ?child dbo:parent ?grandParent .
}
```",4,7,5,3,2,3,3,71,0,0,2,0,0.0,0
192,13,train,"Give me the spouse of the spouse, that is a royalty, of the child of Charles II of Naples.",SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v1 <http://dbpedia.org/ontology/spouse> ?v0 . ?v1 <http://dbpedia.org/ontology/spouse> ?result . ?v0 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Charles_II_of_Naples> . },"```sparql
SELECT ?grandSpouse WHERE {
  # Identify Charles II of Naples
  ?charlesII rdfs:label ""Charles II of Naples""@en .
  
  # Find a child of Charles II of Naples
  ?child dbo:parent ?charlesII .

  # Find the spouse of this child
  ?spouse dbo:spouse ?child .

  # Ensure the spouse is royalty by checking their label or title
  OPTIONAL {
    ?spouse rdfs:label ?label .
    FILTER (regex(?label, ""King|Queen|Prince|Princess"", ""i""))
  }

  # Find the spouse of this royal spouse
  ?grandSpouse dbo:spouse ?spouse .

}
```",3,4,4,3,1,3,2,20,1,5,1,0.16666666666666666,0.5,0.25
791,24,train,Give me the predecessor of the child of Emperor Takakura and father of Emperor Go-Toba.,SELECT ?result WHERE { <http://dbpedia.org/resource/Emperor_Go-Toba> <http://dbpedia.org/property/father> ?result . ?v2 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Emperor_Takakura> . ?result <http://dbpedia.org/ontology/successor> ?v2 . },"```sparql
SELECT ?predecessor WHERE {
  # Find a child of Emperor Takakura
  ?takakuraChild dbo:parent ?takakura .
  ?takakura rdfs:label ""Emperor Takakura""@en .

  # Find the father of Emperor Go-Toba
  ?goTobaFather dbo:parent ?goToba .
  ?goToba rdfs:label ""Emperor Go-Toba""@en .

  # Find a common predecessor (ancestor) of both individuals
  ?predecessor dbo:child ?takakuraChild .
  ?predecessor dbo:child ?goTobaFather .
}
```",3,3,4,2,2,3,3,71,0,0,1,0,0.0,0
433,38,train,"Give me the professional in the profession of Bob Marley and associated musical artist of the associated musical artist, that is an artist and a musical artist, of Scott LaFaro.",SELECT ?result WHERE { <http://dbpedia.org/resource/Bob_Marley> <http://dbpedia.org/property/occupation> ?v2 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. <http://dbpedia.org/resource/Scott_LaFaro> <http://dbpedia.org/ontology/associatedMusicalArtist> ?v3 . ?result <http://dbpedia.org/property/occupation> ?v2 . ?v3 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. },"```sparql
SELECT ?individual WHERE {
  # Find Bob Marley's profession
  ?bobMarley dbo:occupation ?profession .
  ?bobMarley rdfs:label ""Bob Marley""@en .

  # Find Scott LaFaro's associated musical artist
  ?scottLaFaro dbo:associatedMusicalArtist ?associate .
  ?scottLaFaro rdfs:label ""Scott LaFaro""@en .

  # Find an individual in the same profession as Bob Marley and associated with Scott LaFaro's associate
  ?individual dbo:occupation ?profession .
  ?individual dbo:associatedMusicalArtist ?associate .

  # Ensure the individual is both an artist and a musical artist
  ?individual rdf:type dbp:Artist .
  ?individual rdf:type dbp:MusicalArtist .
}
```",4,6,5,2,2,3,3,71,0,0,4,0,0.0,0
926,31,train,Give me the father of the father of the spouse of Neşerek Kadın and successor of Mustafa III.,SELECT ?result WHERE { <http://dbpedia.org/resource/Neşerek_Kadın> <http://dbpedia.org/ontology/spouse> ?v2 . <http://dbpedia.org/resource/Mustafa_III> <http://dbpedia.org/ontology/successor> ?result . ?v0 <http://dbpedia.org/property/father> ?result . ?v2 <http://dbpedia.org/property/father> ?v0 . },"```sparql
SELECT ?grandfather WHERE {
  # Step 1: Find Neşerek Kadın and her spouse
  ?neserek dbo:spouse ?spouse .
  ?neserek rdfs:label ""Neşere Kadın""@en .

  # Step 2: Find the father of this spouse
  ?spouse dbo:parent ?fatherOfSpouse .

  # Step 3: Identify Mustafa III's successor
  ?mustafa dbo:succeededBy ?successor .
  ?mustafa rdfs:label ""Mustafa III""@en .

  # Step 4: Find the father of the father of Neşerek Kadın's spouse
  ?fatherOfSpouse dbo:parent ?grandfather .
}
```",4,4,5,3,2,3,3,71,0,0,1,0,0.0,0
874,12,train,Give me the band of Manfred Mann (musician) and band of the band member of The Jones Gang.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/bandMember> <http://dbpedia.org/resource/Manfred_Mann_(musician)> . ?result <http://dbpedia.org/ontology/bandMember> ?v0 . ?v0 <http://dbpedia.org/ontology/associatedMusicalArtist> <http://dbpedia.org/resource/The_Jones_Gang> . },"```sparql
SELECT ?manfredMannBand ?jonesGangMember ?otherBand WHERE {
  # Find the band associated with Manfred Mann
  ?manfredMann dbo:member ?band .
  ?manfredMann rdfs:label ""Manfred Mann""@en .
  
  # Get the label of the band for clarity
  ?band rdfs:label ?manfredMannBand .

  # Find members of The Jones Gang
  ?jonesGang dbo:member ?jonesGangMember .
  ?jonesGang rdfs:label ""The Jones Gang""@en .

  # Find other bands the member was part of
  OPTIONAL {
    ?otherBandMembership dbo:member ?jonesGangMember .
    ?otherBandMembership rdfs:label ?otherBand .
  }
}
```",3,3,4,2,2,3,2,20,0,0,1,0,0.0,0
892,0,train,Give me the entity in Italy.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Italy> . },"```sparql
SELECT ?entity WHERE {
  ?entity dbo:country dbr:Italy .
}
```",1,1,2,1,1,3,3,71,13092,0,0,1.0,1.0,1.0
433,34,train,"Give me the professional in Musician and associated musical artist of the person born, that is a musical artist and an artist, as the persona of Paul Chambers.","SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. <http://dbpedia.org/resource/Paul_Chambers> <http://xmlns.com/foaf/0.1/givenName> ?v2 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?v1 <http://dbpedia.org/property/birthName> ?v2 . ?v1 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?result <http://dbpedia.org/property/occupation> ""Musician""@en . }","```sparql
SELECT ?associatedArtist WHERE {
  # Identify Paul Chambers by birth details
  ?paulChambers dbo:birthDate ?birthDate .
  ?paulChambers rdfs:label ""Paul Chambers""@en .
  
  # Confirm his professional role as a Musician
  ?paulChambers dbo:occupation ?occupation .
  FILTER (str(?occupation) = ""Musician"")

  # Find associated musical artists
  ?paulChambers dbp:associatedMusicalArtist ?associatedArtist .

  # Ensure the associated artist is both a musician and an artist
  ?associatedArtist dbo:occupation ?artistOccupation1 .
  ?associatedArtist dbo:occupation ?artistOccupation2 .
  FILTER (str(?artistOccupation1) = ""Musician"" && str(?artistOccupation2) = ""Artist"")
}
```",4,6,5,3,2,3,3,71,0,0,15,0,0.0,0
158,12,train,"Give me the party of the successor, that is a prime minister and an office holder and a politician, of André Tardieu and entity in France.",SELECT ?result WHERE { ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. <http://dbpedia.org/resource/André_Tardieu> <http://dbpedia.org/ontology/successor> ?v0 . ?result <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/France> . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/PrimeMinister>. ?v0 <http://dbpedia.org/ontology/party> ?result . },"```sparql
SELECT ?successorParty WHERE {
  # Identify André Tardieu
  ?tardieu dbo:birthPlace dbr:France ;
          rdfs:label ""André Tardieu""@en .
  
  # Find his successor who is a prime minister, office holder, and politician
  OPTIONAL { 
    ?successor dbo:succeededBy ?tardieu ;
               dbo:officeHolderOf dbr:Prime_Minister_of_France ;
               rdf:type dbr:Politician ;
               dbo:country dbr:France .
  }
  
  # Retrieve the political party of the successor
  ?successor dbo:party ?successorParty .
}
```",3,6,4,2,2,3,2,20,0,0,1,0,0.0,0
166,1,train,Give me the entity in Spain.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Spain> . },"```sparql
SELECT ?entity ?label WHERE {
  ?entity dbo:country dbr:Spain .
  SERVICE wikibase:label { bd:serviceParam wikibase:language ""[AUTO_LANGUAGE],en"". }
}
LIMIT 10
```

This query selects entities (`?entity`) and their labels (`?label`) where the entity is associated with Spain through the `dbo:country` property. The `SERVICE wikibase:label` block ensures that we get human-readable labels in English or the user's preferred language.",1,1,2,1,1,3,2,20,0,0,11844,0,0.0,0
267,7,train,"Give me the coach of the player, that is a soccer club, in Rasoul Khatibi.",SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/coach> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerClub>. <http://dbpedia.org/resource/Rasoul_Khatibi> <http://dbpedia.org/ontology/team> ?v1 . },"```sparql
SELECT ?coach WHERE {
  # Find Rasoul Khatibi and his associated soccer club
  ?player dbo:birthName ""Rasoul Khatibi""@en .
  ?player dbo:playsFor ?club .

  # Ensure the club is a soccer club
  ?club rdf:type dbo:SoccerClub .

  # Find the coach of the soccer club
  ?club dbo:coach ?coach .
}
```",2,3,3,2,1,3,2,20,0,0,2,0,0.0,0
965,27,train,"Give me the parent of the person born, that is a noble, as the birth name of George Mountbatten, 2nd Marquess of Milford Haven.","SELECT ?result WHERE { ?v0 <http://dbpedia.org/property/birthName> ?v1 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Noble>. <http://dbpedia.org/resource/George_Mountbatten,_2nd_Marquess_of_Milford_Haven> <http://dbpedia.org/property/birthName> ?v1 . ?v0 <http://dbpedia.org/ontology/parent> ?result . }","```sparql
SELECT ?parent WHERE {
  # Find George Mountbatten, 2nd Marquess of Milford Haven and his birth name
  ?georgeMountbatten dbo:birthName ?birthName .
  ?georgeMountbatten rdfs:label ""George Mountbatten, 2nd Marquess of Milford Haven""@en .

  # Find a noble person with the same birth name
  ?noblePerson dbo:birthName ?birthName .
  ?noblePerson rdf:type dbo:NoblePerson .

  # Retrieve parent information for that noble person
  ?noblePerson dbo:parent ?parent .
}
```",3,4,4,3,1,3,3,71,0,0,2,0,0.0,0
433,12,train,Give me the associated musical artist of Bill Evans and professional in Musician.,"SELECT ?result WHERE { <http://dbpedia.org/resource/Bill_Evans> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?result <http://dbpedia.org/property/occupation> ""Musician""@en . }","```sparql
SELECT ?artist WHERE {
  # Find Bill Evans and his associated musical artists
  ?billEvans dbo:associatedMusicalArtist ?artist .
  ?billEvans rdfs:label ""Bill Evans""@en .

  # Ensure the artist is also categorized as a musician
  ?artist rdf:type dbo:Musician .
}
```",2,2,3,1,2,3,3,71,0,0,3,0,0.0,0
773,3,train,Give me the parent of Bernard (son of Charles the Fat).,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Bernard_(son_of_Charles_the_Fat)> . },"```sparql
SELECT ?parent WHERE {
  # Find Bernard and his parent
  ?bernard dbo:parent ?parent .
  
  # Ensure Bernard is identified as son of Charles the Fat
  ?bernard rdfs:label ""Bernard (son of Charles the Fat)""@en .

  # Identify Charles the Fat
  ?charlesTheFat rdfs:label ""Charles the Fat""@en .
  
  # Link Charles the Fat to Bernard as his parent
  FILTER (?parent = ?charlesTheFat)
}
```",1,1,2,1,1,3,3,71,0,0,1,0,0.0,0
773,14,train,"Give me the parent of the child, that is a royalty, of Louis the German.",SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v1 <http://dbpedia.org/ontology/parent> ?result . ?v1 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Louis_the_German> . },"```sparql
SELECT ?parent WHERE {
  # Identify Louis the German and his children
  ?louis dbp:child ?child .
  ?louis rdfs:label ""Louis the German""@en .

  # Ensure the child is royalty
  OPTIONAL { 
    ?child dbo:royaltyStatus ?status .
    FILTER (regex(str(?status), ""king|queen|prince|princess"", ""i""))
  }

  # Find the parent of this royal child
  ?child dbo:parent ?parent .
}
```",2,3,3,2,1,3,3,71,0,0,2,0,0.0,0
791,25,train,"Give me the predecessor of Emperor Antoku and father of the child, that is a royalty, of Emperor Takakura.",SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?result <http://dbpedia.org/ontology/successor> <http://dbpedia.org/resource/Emperor_Antoku> . ?v1 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Emperor_Takakura> . ?v1 <http://dbpedia.org/property/father> ?result . },"```sparql
SELECT ?predecessor ?father WHERE {
  # Find predecessor of Emperor Antoku
  ?antoku dbo:predecessor ?predecessor .
  ?antoku rdfs:label ""Emperor Antoku""@en .

  # Find children of Emperor Takakura who are royalty
  OPTIONAL { 
    ?takakura dbo:child ?royalChild .
    ?takakura rdfs:label ""Emperor Takakura""@en .
    FILTER (regex(str(?royalChild), ""Emperor"", ""i"") || regex(str(?royalChild), ""Imperial Princess"", ""i""))
  }

  # Find father of the royal child
  OPTIONAL {
    ?royalChild dbo:parent ?father .
    FILTER (regex(str(?royalChild), ""Emperor"", ""i"") || regex(str(?royalChild), ""Imperial Princess"", ""i""))
  }
}
```",3,4,4,2,2,3,3,71,1,1,0,0.5,1.0,0.6666666666666666
917,39,train,"Give me the child of Kekūanāoʻa and child of the father of the child, that is a royalty, of Kamehameha III.",SELECT ?result WHERE { <http://dbpedia.org/resource/Kamehameha_III> <http://dbpedia.org/ontology/child> ?v2 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v2 <http://dbpedia.org/property/father> ?v0 . ?result <http://dbpedia.org/property/father> ?v0 . ?result <http://dbpedia.org/ontology/parent> <http://dbpedia.org/resource/Kekūanāoʻa> . },"```sparql
SELECT ?child WHERE {
  # Find the child of Kekūanāoʻa
  ?kekuanaoa dbo:parent ?child .
  ?kekuanaoa rdfs:label ""Kekūanāoʻa""@en .

  # Identify the father of this child (who is royalty)
  OPTIONAL {
    ?child dbo:parent ?royalFather .
    FILTER EXISTS { 
      ?royalFather rdf:type dbo:RoyalFamilyMember .
    }
  }

  # Find the children of this royal father who are also children of Kamehameha III
  OPTIONAL {
    ?royalFather dbo:child ?grandChild .
    ?kamehamehaIII dbo:parent ?grandChild .
    ?kamehamehaIII rdfs:label ""Kamehameha III""@en .
  }
}
```",4,5,5,3,2,3,3,71,0,0,3,0,0.0,0
874,6,train,Give me the band of Robert Hart (musician) and band of Manfred Mann (musician).,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/bandMember> <http://dbpedia.org/resource/Robert_Hart_(musician)> . ?result <http://dbpedia.org/ontology/bandMember> <http://dbpedia.org/resource/Manfred_Mann_(musician)> . },"```sparql
SELECT ?musician ?band WHERE {
  # Find the band of Robert Hart
  OPTIONAL {
    ?robertHart dbo:band ?band .
    ?robertHart rdfs:label ""Robert Hart (musician)""@en .
  }
  
  UNION
  
  # Find the band of Manfred Mann
  OPTIONAL {
    ?manfredMann dbo:band ?band .
    ?manfredMann rdfs:label ""Manfred Mann""@en .
  }

  # Bind musician names to results for clarity
  BIND(COALESCE(?robertHart, ?manfredMann) AS ?musician)
}
```",2,2,3,1,2,3,2,20,0,0,1,0,0.0,0
573,3,train,Give me the real name of Charlie Baker (Australian footballer).,SELECT ?result WHERE { <http://dbpedia.org/resource/Charlie_Baker_(Australian_footballer)> <http://xmlns.com/foaf/0.1/name> ?result . },"```sparql
SELECT ?birthName WHERE {
  ?charlieBaker dbo:occupation dbr:Australian_footballer .
  ?charlieBaker rdfs:label ""Charlie Baker (Australian footballer)""@en .
  
  OPTIONAL { 
    ?charlieBaker dbo:birthName ?birthName .
  }
}
```",1,1,2,1,1,3,3,71,0,0,2,0,0.0,0
715,28,train,"Give me the commander in the force, that is a military conflict, of Abd el-Krim and commander in Spanish Civil War and leader of Ministry of the Air (Spain).",SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. <http://dbpedia.org/resource/Ministry_of_the_Air_(Spain)> <http://dbpedia.org/ontology/leader> ?result . ?v1 <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Abd_el-Krim> . <http://dbpedia.org/resource/Spanish_Civil_War> <http://dbpedia.org/ontology/commander> ?result . ?v1 <http://dbpedia.org/ontology/commander> ?result . },"```sparql
SELECT ?commander WHERE {
  # Commander associated with Abd el-Krim
  OPTIONAL { 
    ?abdElKrim dbo:spouseOrPartner ?commander .
    ?abdElKrim rdfs:label ""Abd el-Krim""@en .
    FILTER (regex(str(?commander), ""military"", ""i""))
  }

  # Commander in the Spanish Civil War
  OPTIONAL {
    ?civilWarCommander dbo:spouseOrPartner ?commander .
    ?civilWarCommander rdfs:label ""Spanish Civil War""@en .
    FILTER (regex(str(?commander), ""military"", ""i""))
  }
  
  # Leader of Ministry of the Air in Spain
  OPTIONAL {
    ?ministryLeader dbo:spouseOrPartner ?commander .
    ?ministryLeader rdfs:label ""Ministry of the Air (Spain)""@en .
    FILTER (regex(str(?commander), ""leader"", ""i""))
  }
}
```",4,5,5,2,3,3,3,71,0,0,1,0,0.0,0
933,37,train,Give me the reference to the birth name of the professional in Musician and band of The Ramong Sound.,SELECT ?result WHERE { ?v1 <http://dbpedia.org/property/birthName> ?v2 . <http://dbpedia.org/resource/The_Ramong_Sound> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v1 <http://dbpedia.org/property/occupation> <http://dbpedia.org/resource/Musician> . ?result <http://xmlns.com/foaf/0.1/name> ?v2 . },"```sparql
SELECT ?musician ?birthName WHERE {
  # Find musicians associated with The Ramones
  ?band dbo:member ?musician .
  ?band rdfs:label ""Ramones""@en .

  # Retrieve the birth name of each musician
  OPTIONAL { 
    ?musician dbo:birthName ?birthName .
  }
}
```",4,4,5,3,2,3,3,71,0,0,1,0,0.0,0
83,1,train,Give me the party of Alceu Collares.,SELECT ?result WHERE { <http://dbpedia.org/resource/Alceu_Collares> <http://dbpedia.org/ontology/party> ?result . },"```sparql
SELECT ?party WHERE {
  ?person rdfs:label ""Alceu Collares""@en .
  ?person dbo:party ?party .
}
```",1,1,2,1,1,3,2,20,1,0,0,1.0,1.0,1.0
965,32,train,"Give me the spouse of the spouse of Princess Victoria of Hesse and by Rhine and parent of the child, that is a royalty, of Prince Louis of Battenberg.",SELECT ?result WHERE { ?v3 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Prince_Louis_of_Battenberg> . ?result <http://dbpedia.org/ontology/spouse> ?v1 . <http://dbpedia.org/resource/Princess_Victoria_of_Hesse_and_by_Rhine> <http://dbpedia.org/ontology/spouse> ?v1 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v3 <http://dbpedia.org/ontology/parent> ?result . },"```sparql
SELECT ?grandSpouse WHERE {
  # Find Princess Victoria of Hesse and by Rhine and her spouse
  ?princessVictoria rdfs:label ""Princess Victoria of Hesse and by Rhine""@en .
  ?princessVictoria dbo:spouse ?firstSpouse .

  # Find the spouse of the first spouse (i.e., the grand spouse)
  ?firstSpouse dbo:spouse ?grandSpouse .

  # Find Prince Louis of Battenberg
  ?princeLouis rdfs:label ""Prince Louis of Battenberg""@en .
  
  # Identify a child of Prince Louis who is royalty
  ?princeLouis dbo:child ?royalChild .
  FILTER EXISTS { 
    ?royalChild dbo:parent ?parent .
    ?parent rdf:type dbo:RoyalFamilyMember .
  }

  # Find the parent of this royal child
  OPTIONAL {
    ?royalChild dbo:parent ?grandSpouse .
  }
}
```",4,5,5,2,2,3,3,71,0,0,1,0,0.0,0
495,14,train,Give me the father of the child of the parent of Princess Pauline of Württemberg (1810–1856).,SELECT ?result WHERE { ?v0 <http://dbpedia.org/ontology/parent> ?v2 . <http://dbpedia.org/resource/Princess_Pauline_of_Württemberg_(1810–1856)> <http://dbpedia.org/ontology/parent> ?v2 . ?v0 <http://dbpedia.org/property/father> ?result . },"```sparql
SELECT DISTINCT ?father WHERE {
  # Identify Princess Pauline of Württemberg
  ?pauline dbo:birthDate ?date .
  ?pauline rdfs:label ""Princess Pauline of Württemberg""@en .
  
  # Find her parent
  ?pauline dbo:parent ?parent .

  # Determine the child of this parent
  ?child dbo:parent ?parent .

  # Find the father of this child
  ?child dbo:parent ?father .
}
```",3,3,4,3,1,3,2,20,0,0,1,0,0.0,0
329,15,train,Give me the entity in Northern Ireland and birthplace of the author of The Tailor and Ansty.,SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/birthPlace> ?result . ?result <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Northern_Ireland> . <http://dbpedia.org/resource/The_Tailor_and_Ansty> <http://dbpedia.org/property/author> ?v1 . },"```sparql
SELECT ?birthPlace WHERE {
  # Find Seán Ó Faoláin, the author of The Tailor and Ansty
  ?author dbo:work ?work .
  ?work rdfs:label ""The Tailor and Ansty""@en .
  ?author rdfs:label ""Seán Ó Faoláin""@en .

  # Get his birthplace
  ?author dbo:birthPlace ?birthPlace .

  # Ensure the birthplace is in Northern Ireland
  ?birthPlace dbo:country dbc:Northern_Ireland .
}
```",3,3,4,2,2,2,3,28,0,0,1,0,0.0,0
433,17,train,Give me the profession of the writer of Slowhand at 70 – Live at the Royal Albert Hall.,SELECT ?result WHERE { <http://dbpedia.org/resource/Slowhand_at_70_–_Live_at_the_Royal_Albert_Hall> <http://dbpedia.org/property/writer> ?v1 . ?v1 <http://dbpedia.org/property/occupation> ?result . },"```sparql
SELECT ?profession WHERE {
  ?clapton dbo:album ""Slowhand at 70 – Live at the Royal Albert Hall"" .
  ?clapton rdfs:label ""Eric Clapton""@en .

  ?clapton dbo:occupation ?profession .
}
```",2,2,3,2,1,3,3,71,0,0,11,0,0.0,0
791,17,train,"Give me the child, that is a royalty, of the father, that is a royalty and an office holder, of Emperor Antoku.",SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. <http://dbpedia.org/resource/Emperor_Antoku> <http://dbpedia.org/property/father> ?v1 . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?result <http://dbpedia.org/property/father> ?v1 . },"```sparql
SELECT ?child WHERE {
  # Find Emperor Antoku
  ?antoku dbo:parent ?father .
  ?antoku rdfs:label ""Emperor Antoku""@en .

  # Ensure the father is royalty and an office holder
  ?father dbo:royalty true .
  ?father dbo:officeHolder ?office .

  # Find a child of this father who is royalty
  ?father dbo:child ?child .
  ?child dbo:royalty true .
}
```",2,5,3,2,1,3,3,71,0,0,3,0,0.0,0
976,14,train,Give me the office of the person born as Mehmet Naci Bostancı.,"SELECT ?result WHERE { ?v0 <http://dbpedia.org/property/office> ?result . ?v0 <http://dbpedia.org/property/birthName> ""Mehmet Naci Bostancı""@en . }","```sparql
SELECT ?office WHERE {
  ?person rdfs:label ""Mehmet Naci Bostancı""@en .
  ?person dbo:birthName ""Mehmet Naci Bostancı"" .
  ?person dbo:office ?office .
}
```",2,2,3,2,1,3,3,71,0,0,4,0,0.0,0
573,4,train,"Give me the administration, that is a region, of Charlie Baker.","SELECT ?result WHERE { ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Region>. ?result <http://dbpedia.org/property/governor> ""Charlie Baker""@en . }","```sparql
SELECT ?administration WHERE {
  ?baker dbo:occupation ?position .
  ?baker rdfs:label ""Charlie Baker""@en .
  FILTER regex(str(?position), ""Governor of Massachusetts"", ""i"") .

  ?position dbo:administrativeRegion ?administration .
}
```",1,2,2,1,1,3,3,71,0,0,1,0,0.0,0
839,4,train,"Give me the person born, that is a musical artist, as Kevin Richard Russell.","SELECT ?result WHERE { ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?result <http://dbpedia.org/property/birthName> ""Kevin Richard Russell""@en . }","```sparql
SELECT ?birthName WHERE {
  ?kenny dbo:birthName ?birthName .
  ?kenny rdfs:label ""Kenny Rogers""@en .
  OPTIONAL { 
    ?kenny dbo:occupation ?occupation .
    FILTER (regex(str(?occupation), ""musician"", ""i"") || regex(str(?occupation), ""singer"", ""i""))
  }
}
```",1,2,2,1,1,3,3,71,0,0,1,0,0.0,0
47,21,train,Give me the office of the administration of Jagdeep Dhankhar and office of Ajoy Mukherjee.,SELECT ?result WHERE { ?v1 <http://dbpedia.org/property/governor> <http://dbpedia.org/resource/Jagdeep_Dhankhar> . ?v1 <http://dbpedia.org/property/office> ?result . <http://dbpedia.org/resource/Ajoy_Mukherjee> <http://dbpedia.org/property/office> ?result . },"```sparql
SELECT ?person ?office WHERE {
  # Find office of Jagdeep Dhankhar
  OPTIONAL {
    ?dhankhar dbo:office ?office .
    ?dhankhar rdfs:label ""Jagdeep Dhankhar""@en .
  }
  
  # Find office of Ajoy Mukherjee
  OPTIONAL {
    ?mukherjee dbo:office ?office .
    ?mukherjee rdfs:label ""Ajoy Mukherjee""@en .
  }
}
```",3,3,4,2,2,3,3,71,0,0,1,0,0.0,0
417,2,train,Give me the child of Alexandrine of Mecklenburg-Schwerin.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/parent> <http://dbpedia.org/resource/Alexandrine_of_Mecklenburg-Schwerin> . },"```sparql
SELECT ?child WHERE {
  # Find Alexandrine of Mecklenburg-Schwerin and her children
  ?alexandrine dbo:parent ?child .
  ?alexandrine rdfs:label ""Alexandrine of Mecklenburg-Schwerin""@en .
}
```",1,1,2,1,1,3,3,71,0,2,2,0.0,0.0,0
976,16,train,"Who is the mayor, that is a politician and an office holder and Turkish, of the reference, that is an organisation and a political party and Turkish, to Millet İttifakı?","SELECT ?result WHERE { ?v0 <http://xmlns.com/foaf/0.1/name> ""Millet İttifakı""@en . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v0 <http://dbpedia.org/property/leader> ?result . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/PoliticalParty>. ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?result <http://dbpedia.org/ontology/nationality> <http://dbpedia.org/resource/Turkey>. ?v0 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Turkey>. }","```sparql
SELECT ?mayor WHERE {
  # Find Millet İttifakı and its related organization/political party
  ?millettiffakı dbo:member ?party .
  ?millettiffakı rdfs:label ""Millet İttifakı""@tr .

  # Ensure the entity is both an organization and a political party
  ?party rdf:type dbpedia-owl:Organization ;
         rdf:type dbpedia-owl:PoliticalParty ;
         dbo:country dbr:Türkiye .

  # Find the mayor who is a politician, office holder, and Turkish
  ?mayor dbo:memberOf ?party ;
         rdf:type dbpedia-owl:Mayor ;
         dbo:occupation dbpedia:Politician ;
         dbo:nationality dbr:Türkiye .
}
```",2,8,3,2,1,3,3,71,0,0,1,0,0.0,0
495,5,train,Give me the child of Princess Charlotte of Saxe-Hildburghausen.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/parent> <http://dbpedia.org/resource/Princess_Charlotte_of_Saxe-Hildburghausen> . },"```sparql
SELECT ?child WHERE {
  ?princess dbo:child ?child .
  ?princess rdfs:label ""Princess Charlotte of Saxe-Hildburghausen""@en .
}
```",1,1,2,1,1,3,2,20,4,0,0,1.0,1.0,1.0
955,12,train,"Give me the band of the band member, that is a musical artist and an artist, of Street Dogs and band of Nate Albert.",SELECT ?result WHERE { ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. ?result <http://dbpedia.org/ontology/bandMember> <http://dbpedia.org/resource/Nate_Albert> . ?result <http://dbpedia.org/ontology/bandMember> ?v0 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?v0 <http://dbpedia.org/ontology/associatedMusicalArtist> <http://dbpedia.org/resource/Street_Dogs> . },"```sparql
SELECT ?bandMemberBand WHERE {
  # Find Nate Albert and his band membership
  ?nateAlbert dbo:memberOfBand ?streetDogs .
  ?nateAlbert rdfs:label ""Nate Albert""@en .
  ?streetDogs rdfs:label ""Street Dogs""@en .

  # Find other bands associated with Nate Albert
  OPTIONAL {
    ?nateAlbert dbo:memberOfBand ?otherBand .
    FILTER NOT EXISTS { ?otherBand rdfs:label ""Street Dogs""@en }
  }

  # Find band members of Street Dogs who are also musicians and artists
  ?member dbo:memberOfBand ?streetDogs .
  ?member dbo:occupation ?occupation .
  FILTER (?occupation IN (dbo:Musician, dbo:Artist)) .

  # Find the band associated with these other members
  OPTIONAL {
    ?member dbo:memberOfBand ?bandMemberBand .
    FILTER NOT EXISTS { ?bandMemberBand rdfs:label ""Street Dogs""@en }
  }

  # Return the bands found
  VALUES ?bandMemberBand { ?otherBand ?bandMemberBand }
}
```",3,5,4,2,2,3,2,20,0,0,1,0,0.0,0
773,16,train,"Give me the successor of the child, that is a royalty, of Louis the Pious.",SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/successor> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. <http://dbpedia.org/resource/Louis_the_Pious> <http://dbpedia.org/ontology/child> ?v1 . },"```sparql
SELECT ?successor WHERE {
  # Identify Louis the Pious
  ?louis rdfs:label ""Louis the Pious""@en .
  
  # Find his children who are royalty
  ?child dbo:parent ?louis ;
         rdf:type dbo:Monarch ;
         dbo:successor ?successor .

  FILTER (regex(str(?child), ""Louis"", ""i"") || regex(str(?child), ""Lothair"", ""i"") || regex(str(?child), ""Pepin"", ""i""))
}
```",2,3,3,2,1,3,3,71,0,0,5,0,0.0,0
36,6,train,Give me the actor of Being Mrs Elliot and person born in 1971.,"SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/birthYear> ""1971""^^<http://www.w3.org/2001/XMLSchema#gYear> . <http://dbpedia.org/resource/Being_Mrs_Elliot> <http://dbpedia.org/ontology/starring> ?result . }","```sparql
# Query to find the actor of ""Being Mrs Elliot""
SELECT ?actor WHERE {
  ?movie dbo:starring ?actor .
  ?movie rdfs:label ""Being Mrs Elliot""@en .
}

UNION

# Query to find a person born in 1971
SELECT ?person WHERE {
  ?person dbo:birthYear ?birthYear .
  FILTER (?birthYear = 1971)
}
```",2,2,3,1,2,2,3,28,0,0,1,0,0.0,0
987,14,train,"Give me the entity in the region, that is a country, of Central European Time.",SELECT ?result WHERE { ?v0 <http://dbpedia.org/property/timeZone> <http://dbpedia.org/resource/Central_European_Time> . ?result <http://dbpedia.org/ontology/country> ?v0 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. },"```sparql
SELECT ?country WHERE {
  # Find regions associated with Central European Time
  ?region dbo:timeZone dbr:Central_European_Time .
  
  # Find countries in these regions
  ?country dbo:locatedInRegion ?region ;
           a dbo:Country .
}
```",2,3,3,2,1,3,3,71,0,0,173261,0,0.0,0
933,14,train,"Give me the band of the band, that is a group and a band and an organisation, of Alan Warner (musician).",SELECT ?result WHERE { <http://dbpedia.org/resource/Alan_Warner_(musician)> <http://dbpedia.org/ontology/associatedMusicalArtist> ?v0 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Group>. ?v0 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Band>. },"```sparql
SELECT ?bandOfBand WHERE {
  # Find Alan Warner as a member of a band
  ?alanWarner dbo:member ?initialBand .
  ?alanWarner rdfs:label ""Alan Warner""@en .

  # Ensure the initial band is both a band and an organization
  ?initialBand rdf:type dbp:Band ;
               rdf:type dbo:Organization .

  # Find the band of the identified band
  ?initialBand dbo:member ?bandOfBand .
}
```",2,5,3,2,1,3,3,71,0,0,4,0,0.0,0
579,1,train,Give me the person born as Isobel Jane Miller Richard.,"SELECT ?result WHERE { ?result <http://dbpedia.org/property/birthName> ""Isobel Jane Miller Richard""@en . }","```sparql
SELECT ?person ?currentName WHERE {
  ?person dbo:birthName ""Isobel Jane Miller Richard""@en .
  OPTIONAL { ?person rdfs:label ?currentName . FILTER (lang(?currentName) = 'en') }
}
```",1,1,2,1,1,3,2,20,1,1,0,0.5,1.0,0.6666666666666666
102,3,train,Give me the player in Ellie Roebuck.,SELECT ?result WHERE { <http://dbpedia.org/resource/Ellie_Roebuck> <http://dbpedia.org/ontology/team> ?result . },"```sparql
SELECT ?sport WHERE {
  ?roebuck rdfs:label ""Ellie Roebuck""@en .
  ?roebuck dbo:sport ?sport .
}
```",1,1,2,1,1,3,2,20,0,0,5,0,0.0,0
826,8,train,Who is the parent of Prince Friedrich of Hesse and by Rhine?,SELECT ?result WHERE { <http://dbpedia.org/resource/Prince_Friedrich_of_Hesse_and_by_Rhine> <http://dbpedia.org/ontology/parent> ?result . },"```sparql
SELECT ?parent WHERE {
  ?person rdfs:label ""Prince Friedrich of Hesse and by Rhine""@en .
  ?person dbo:parent ?parent .
}
```",1,1,2,1,1,3,3,71,2,0,0,1.0,1.0,1.0
170,12,train,Give me the domain of Mayor and entity in Russia and birth place of Era Ziganshina.,"SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Russia> . <http://dbpedia.org/resource/Era_Ziganshina> <http://dbpedia.org/ontology/birthPlace> ?result . ?result <http://dbpedia.org/ontology/leaderTitle> ""Mayor""@en . }","```sparql
SELECT ?domain ?entityInRussia ?birthPlace WHERE {
  # Domain of Mayor in Russia
  ?mayor dbo:wikiPageWikiLink ?domain .
  ?mayor rdfs:label ""Mayor""@en .
  
  # Entity in Russia (assuming it refers to a city or notable place)
  OPTIONAL {
    ?russiaEntity dbo:country dbr:Russia .
    ?russiaEntity rdfs:label ?entityInRussia .
  }
  
  # Birthplace of Era Ziganshina
  ?eraZiganshina dbo:birthPlace ?birthPlace .
  ?eraZiganshina rdfs:label ""Era Ziganshina""@en .
}
```",3,3,4,1,3,2,3,28,1,3534,0,0.0002828854314002829,1.0,0.0005656108597285067
170,1,train,Give me the birth place of Era Ziganshina.,SELECT ?result WHERE { <http://dbpedia.org/resource/Era_Ziganshina> <http://dbpedia.org/ontology/birthPlace> ?result . },"```sparql
SELECT ?birthPlace WHERE {
  ?eraZiganshina dbo:birthPlace ?birthPlace .
  ?eraZiganshina rdfs:label ""Era Ziganshina""@en .
}
```",1,1,2,1,1,2,3,28,3,0,0,1.0,1.0,1.0
554,12,train,Give me the leader of the birth place of The Legendary Tigerman and leader of Portuguese São Tomé and Príncipe.,SELECT ?result WHERE { ?v0 <http://dbpedia.org/property/leader> ?result . <http://dbpedia.org/resource/The_Legendary_Tigerman> <http://dbpedia.org/ontology/birthPlace> ?v0 . <http://dbpedia.org/resource/Portuguese_São_Tomé_and_Príncipe> <http://dbpedia.org/property/leader> ?result . },"```sparql
SELECT ?birthPlaceLeader ?saoTomeLeader WHERE {
  # Find the birthplace of The Legendary Tigerman
  ?tigerman dbo:birthPlace ?birthPlace .
  ?tigerman rdfs:label ""The Legendary Tigerman""@en .

  # Get the leader of the birthplace
  OPTIONAL { 
    ?birthPlace dbo:mayor ?birthPlaceLeader .
    OPTIONAL {
      ?birthPlace dbo:governor ?birthPlaceLeader .
    }
  }

  # Find the leader of São Tomé and Príncipe
  ?saoTomePrincipe dbo:headOfState ?saoTomeLeader .
  ?saoTomePrincipe rdfs:label ""São Tomé and Príncipe""@en .
}
```",3,3,4,2,2,3,2,20,0,0,1,0,0.0,0
382,7,train,"Give me the birthplace of the manager, that is a soccer manager and an athlete and a sports manager, of Bonner SC.",SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerManager>. <http://dbpedia.org/resource/Bonner_SC> <http://dbpedia.org/ontology/manager> ?v1 . ?v1 <http://dbpedia.org/ontology/birthPlace> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsManager>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Athlete>. },"```sparql
SELECT ?birthPlace WHERE {
  # Find the manager of Bonner SC
  ?manager dbo:position ""Manager""@en ;
           dbo:team <http://dbpedia.org/resource/Bonner_SC> .

  # Ensure the person is a soccer manager, athlete, and sports manager
  ?manager dbo:occupation ?occupation .
  FILTER (
    EXISTS { ?manager dbo:occupation dbp:Soccer_Manager . }
    && EXISTS { ?manager dbo:occupation dbp:Athlete . }
    && EXISTS { ?manager dbo:occupation dbp:Sports_Manager . }
  )

  # Retrieve the birthplace of this manager
  ?manager dbo:birthPlace ?birthPlace .
}
```",2,5,3,2,1,3,2,20,0,0,2,0,0.0,0
267,14,train,Give me the person born on the birth date of the reference to Dan Cathy.,"SELECT ?result WHERE { ?v2 <http://xmlns.com/foaf/0.1/name> ""Dan Cathy""@en . ?result <http://dbpedia.org/ontology/birthDate> ?v0 . ?v2 <http://dbpedia.org/ontology/birthDate> ?v0 . }","```sparql
SELECT ?person WHERE {
  # Step 1: Get Dan Cathy's birth date
  ?danCathy dbo:birthDate ?birthDate .
  ?danCathy rdfs:label ""Dan Cathy""@en .

  # Step 2: Find other persons born on the same date
  ?person dbo:birthDate ?sameBirthDate .
  FILTER (?sameBirthDate = ?birthDate)
  FILTER (!str(?person) = str(?danCathy))
}
```",3,3,4,3,1,3,2,20,34,0,1,1.0,0.9714285714285714,0.9855072463768115
417,32,train,"Give me the child of the father of Frederick IX of Denmark and spouse of the parent, that is a royalty, of Count Ingolf of Rosenborg.",SELECT ?result WHERE { ?result <http://dbpedia.org/property/father> ?v3 . ?result <http://dbpedia.org/ontology/spouse> ?v1 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. <http://dbpedia.org/resource/Frederick_IX_of_Denmark> <http://dbpedia.org/property/father> ?v3 . ?v1 <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Count_Ingolf_of_Rosenborg> . },"```sparql
SELECT ?child WHERE {
  # Find Frederick IX of Denmark and his father
  ?frederickIX dbo:parent ?father .
  ?frederickIX rdfs:label ""Frederick IX of Denmark""@en .

  # Identify a child of this father (could be Frederick IX or another sibling)
  OPTIONAL { 
    ?father dbo:child ?child .
  }

  # Find the parent of Count Ingolf of Rosenborg who is royalty
  OPTIONAL {
    ?countIngolf dbo:parent ?royalParent .
    ?countIngolf rdfs:label ""Count Ingolf of Rosenborg""@en .
    FILTER (regex(str(?royalParent), ""Royal"", ""i""))
  }

  # Find the spouse of this royal parent
  OPTIONAL {
    ?royalParent dbo:spouse ?spouse .
    FILTER (regex(str(?royalParent), ""Royal"", ""i""))
  }
}
```",4,5,5,2,2,3,3,71,1,1,0,0.5,1.0,0.6666666666666666
341,5,train,Give me the band member of the awardee of List of awards and nominations received by Beyoncé.,SELECT ?result WHERE { ?v1 <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/List_of_awards_and_nominations_received_by_Beyoncé> . ?result <http://dbpedia.org/ontology/associatedMusicalArtist> ?v1 . },"```sparql
SELECT ?award ?bandMember WHERE {
  # Find an award received by Beyoncé
  ?beyonce dbo:awardReceived ?award .
  ?beyonce rdfs:label ""Beyoncé""@en .

  # Check if there is a band member associated with the award
  OPTIONAL {
    ?award dbo:recipient ?bandMember .
    FILTER (regex(str(?bandMember), ""Band Member"", ""i""))
  }
}
```",2,2,3,2,1,2,2,9,0,0,50,0,0.0,0
166,13,train,"Give me the resting place of the military force of the force, that is an event and a societal event and a military conflict, of Manuel Hedilla.",SELECT ?result WHERE { ?v0 <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Manuel_Hedilla> . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v1 <http://dbpedia.org/ontology/battle> ?v0 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?v1 <http://dbpedia.org/ontology/restingPlace> ?result . },"```sparql
SELECT ?restingPlace WHERE {
  # Identify Manuel Hedilla
  ?hedilla rdfs:label ""Manuel Hedilla""@en .
  
  # Find an event associated with him that is a societal event and military conflict
  ?event dbo:associatedWith ?hedilla ;
         rdf:type/rdfs:subClassOf* dbpedia-owl:SocietalEvent, dbpedia-owl:MilitaryConflict .

  # Identify the military force involved in this event
  ?event dbo:militaryForce ?militaryForce .
  
  # Determine the resting place of the military force
  ?militaryForce dbo:restingPlace ?restingPlace .
}
```",3,6,4,3,1,3,2,20,0,0,36,0,0.0,0
326,4,train,"Give me the person decedent at Rancho Mirage, California and professional in Composer.","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/deathPlace> <http://dbpedia.org/resource/Rancho_Mirage,_California> . ?result <http://dbpedia.org/property/occupation> <http://dbpedia.org/resource/Composer> . }","```sparql
SELECT ?person WHERE {
  # Find individuals with a death place in Rancho Mirage, California
  ?person dbo:deathPlace ?place .
  FILTER (str(?place) = ""Rancho Mirage, California""@en)

  # Ensure the individual is professionally known as a Composer
  ?person dbo:occupation ?occupation .
  FILTER (regex(str(?occupation), ""Composer"", ""i""))
}
```",2,2,3,1,2,2,2,9,0,0,1,0,0.0,0
892,35,train,"Give me the entity in the profession of Henri Crolla and entity in the administration, that is Italian and a region and a settlement and an administrative region, of Democratic Party (Italy).",SELECT ?result WHERE { ?v0 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Italy>. <http://dbpedia.org/resource/Henri_Crolla> <http://dbpedia.org/property/occupation> ?v1 . ?v0 <http://dbpedia.org/property/leaderParty> <http://dbpedia.org/resource/Democratic_Party_(Italy)> . ?result <http://dbpedia.org/ontology/country> ?v1 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Region>. ?result <http://dbpedia.org/ontology/province> ?v0 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/AdministrativeRegion>. },"```sparql
SELECT ?professionEntity ?adminEntity WHERE {
  # Find Henri Crolla's profession
  ?henriCrolla dbo:profession ?profession .
  ?henriCrolla rdfs:label ""Henri Crolla""@en .

  # Find another entity with the same profession as Henri Crolla
  ?professionEntity dbo:profession ?profession .

  # Find entities related to Democratic Party (Italy) administration
  ?party dbo:member ?adminEntity .
  ?party rdfs:label ""Democratic Party (Italy)""@en .

  # Filter for Italian regions, settlements, and administrative regions
  FILTER (
    EXISTS { ?adminEntity dbo:country dbr:Italy . }
    && EXISTS { ?adminEntity a dbo:Region . }
    && EXISTS { ?adminEntity a dbo:Settlement . }
    && EXISTS { ?adminEntity a dbo:AdministrativeRegion . }
  )
}
```",4,8,5,2,2,3,3,71,0,0,587,0,0.0,0
216,11,train,Give me the administration of the designer of Woolfe: The Red Hood Diaries.,SELECT ?result WHERE { ?result <http://dbpedia.org/property/leader> ?v1 . <http://dbpedia.org/resource/Woolfe:_The_Red_Hood_Diaries> <http://dbpedia.org/property/designer> ?v1 . },"```sparql
SELECT ?developer ?administration WHERE {
  # Find the designer of Woolfe: The Red Hood Diaries
  ?game dbo:developer ?developer .
  ?game rdfs:label ""Woolfe: The Red Hood Diaries""@en .

  # Find administration details about WayForward Technologies
  OPTIONAL {
    ?developer foaf:name ""WayForward Technologies"" .
    ?developer dbo:administrator ?administration .
  }
}
```",2,2,3,2,1,2,3,28,0,1,1099,0.0,0.0,0
892,6,train,Give me the award of Anna Ishii.,SELECT ?result WHERE { <http://dbpedia.org/resource/Anna_Ishii> <http://dbpedia.org/property/awards> ?result . },"```sparql
SELECT ?award WHERE {
  ?annaIshii dbo:award ?award .
  ?annaIshii rdfs:label ""Anna Ishii""@en .
}
```",1,1,2,1,1,3,3,71,0,1,1,0.0,0.0,0
791,13,train,Give me the predecessor of the child of Emperor Takakura.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/successor> ?v1 . ?v1 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Emperor_Takakura> . },"```sparql
SELECT ?predecessor WHERE {
  # Find Emperor Takakura
  ?takakura rdfs:label ""Emperor Takakura""@en .

  # Identify his child
  ?child dbo:parent ?takakura .
  
  # Determine the predecessor of that child in imperial succession
  ?predecessor dbo:succession ?child .
}
```",2,2,3,2,1,3,3,71,0,0,2,0,0.0,0
216,2,train,Give me the administration of .,"SELECT ?result WHERE { ?result <http://dbpedia.org/property/leader> """"@en . }","```sparql
# Placeholder for when a specific entity is identified.
SELECT ?administration WHERE {
  # Example: Replace <EntityURI> with the actual URI of the entity.
  <EntityURI> dbo:administrator ?administration .
}
```",1,1,2,1,1,2,3,28,0,0,1099,0,0.0,0
645,11,train,Give me the commander in the force of Carlos Asensio Cabanillas.,SELECT ?result WHERE { ?v0 <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Carlos_Asensio_Cabanillas> . ?v0 <http://dbpedia.org/ontology/commander> ?result . },"```sparql
SELECT ?commander WHERE {
  ?person rdfs:label ""Carlos Asensio Cabanillas""@en .
  OPTIONAL { 
    ?person dbo:militaryCommander ?commander .
  }
  OPTIONAL {
    ?person dbo:commandedBy ?commander .
  }
}
```",2,2,3,2,1,3,3,71,0,0,51,0,0.0,0
573,25,train,"Give me the parent of the author, that is a politician and an office holder, of Exchequer Standards and person decedent at Quincy, Massachusetts.","SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. <http://dbpedia.org/resource/Exchequer_Standards> <http://dbpedia.org/property/author> ?v1 . ?v1 <http://dbpedia.org/ontology/parent> ?result . ?result <http://dbpedia.org/ontology/deathPlace> <http://dbpedia.org/resource/Quincy,_Massachusetts> . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. }","```sparql
SELECT ?parent WHERE {
  # Find the author of ""Exchequer Standards""
  ?author dbo:work ?exchequerStandards .
  ?exchequerStandards rdfs:label ""Exchequer Standards""@en .

  # Identify the parent of this author who is a politician and office holder
  ?author dbo:parent ?parent .
  
  # Ensure the parent is a politician and an office holder
  ?parent rdf:type dbo:Politician ;
          dbo:officeHolder true .

  # Check that the decedent location is Quincy, Massachusetts
  ?parent dbo:deathPlace ?quincy .
  ?quincy rdfs:label ""Quincy, Massachusetts""@en .
}
```",3,5,4,2,2,3,3,71,0,0,2,0,0.0,0
955,4,train,"Give me the reference, that is a band and a group and an organisation, to Street Dogs.","SELECT ?result WHERE { ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Group>. ?result <http://xmlns.com/foaf/0.1/name> ""Street Dogs""@en . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Band>. ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. }","```sparql
SELECT ?streetDogs WHERE {
  ?streetDogs rdfs:label ""Street Dogs""@en .
  ?streetDogs a dbo:Band .
  ?streetDogs a dbo:Organization .
}
```",1,4,2,1,1,3,2,20,0,0,1,0,0.0,0
273,3,train,Give me the child of Giovanni Agnelli.,SELECT ?result WHERE { <http://dbpedia.org/resource/Giovanni_Agnelli> <http://dbpedia.org/ontology/child> ?result . },"```sparql
SELECT ?child WHERE {
  ?agnelli dbo:child ?child .
  ?agnelli rdfs:label ""Giovanni Agnelli""@en .
}
```",1,1,2,1,1,3,2,20,1,0,0,1.0,1.0,1.0
965,25,train,"Give me the parent of the person born, that is a noble, as Prince George of Battenberg and parent of Louise Mountbatten.","SELECT ?result WHERE { ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Noble>. <http://dbpedia.org/resource/Louise_Mountbatten> <http://dbpedia.org/ontology/parent> ?result . ?v0 <http://dbpedia.org/ontology/parent> ?result . ?v0 <http://dbpedia.org/property/birthName> ""Prince George of Battenberg""@en . }","```sparql
SELECT ?parent WHERE {
  # Identify Prince George of Battenberg and his parent(s)
  ?george dbo:birthName ""Prince George of Battenberg""@en .
  ?george dbo:parent ?parent .

  # Ensure the parent is recognized as a noble
  OPTIONAL { 
    ?parent dbo:occupation dbp:Noble .
  }

  # Find any connection to Louise Mountbatten
  OPTIONAL {
    ?louise rdfs:label ""Louise Mountbatten""@en .
    ?louise dbo:parent ?parent .
  }
}
```",3,4,4,2,2,3,3,71,0,0,2,0,0.0,0
865,37,train,"Give me the father of the child, that is a politician, of the spouse of Syeda Shahar Banu and father of Shahla Khatun.",SELECT ?result WHERE { ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v2 <http://dbpedia.org/property/father> ?v0 . ?v2 <http://dbpedia.org/property/father> ?result . <http://dbpedia.org/resource/Syeda_Shahar_Banu> <http://dbpedia.org/ontology/spouse> ?v0 . <http://dbpedia.org/resource/Shahla_Khatun> <http://dbpedia.org/property/father> ?result . },"```sparql
SELECT ?father WHERE {
  # Find Syeda Shahar Banu's spouse
  ?shaharBanu dbo:spouse ?spouse .
  ?shaharBanu rdfs:label ""Syeda Shahar Banu""@en .

  # Find children of the spouse, specifically a politician
  OPTIONAL { 
    ?child dbo:parent ?spouse .
    ?child dbo:occupation ?occupation .
    FILTER (regex(str(?occupation), ""politician"", ""i""))
  }

  # Identify father of this child who is a politician
  OPTIONAL {
    ?child dbo:parent ?father .
    FILTER (regex(str(?child), ""politician"", ""i""))
  }
  
  # Ensure the same person is also the father of Shahla Khatun
  OPTIONAL {
    ?shahlaKhatun dbo:parent ?father .
    ?shahlaKhatun rdfs:label ""Shahla Khatun""@en .
  }

  FILTER (BOUND(?father))
}
```",4,5,5,3,2,3,3,71,0,151,1,0.0,0.0,0
978,9,train,"Who is the professional, that is a musical artist and an artist, in the award of Michel Claparède?",SELECT ?result WHERE { ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. <http://dbpedia.org/resource/Michel_Claparède> <http://dbpedia.org/property/awards> ?v0 . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. ?result <http://dbpedia.org/property/occupation> ?v0 . },"```sparql
SELECT ?professional WHERE {
  # Find professionals associated with Michel Claparède
  ?claparde dbo:awardRecipient ?professional .
  ?claparde rdfs:label ""Michel Claparède""@en .

  # Ensure the professional is a musical artist and an artist (visual arts)
  ?professional dbo:occupation ?musicalArtist .
  ?professional dbo:occupation ?artist .
  
  FILTER (?musicalArtist = dbc:Musicians && ?artist = dbc:Artists)

}
```",2,4,3,2,1,3,2,20,0,0,8677,0,0.0,0
365,13,train,"Give me the person born as the birth name of the commander, that is an office holder, in Ukrainian–Soviet War.",SELECT ?result WHERE { ?v0 <http://dbpedia.org/property/birthName> ?v1 . <http://dbpedia.org/resource/Ukrainian–Soviet_War> <http://dbpedia.org/ontology/commander> ?v0 . ?result <http://dbpedia.org/property/birthName> ?v1 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. },"```sparql
SELECT ?person ?birthName WHERE {
  # Find persons involved in the Ukrainian-Soviet War as commanders
  ?person dbo:occupation ""Commander""@en .
  ?person dbo:participatedIn <http://dbpedia.org/resource/Ukrainian%E2%80%93Soviet_War> .

  # Check if they were also office holders
  OPTIONAL {
    ?person dbo:officeHolderOf ?office .
  }

  # Retrieve their birth name
  OPTIONAL {
    ?person foaf:name ?birthName .
  }
}
```",3,4,4,3,1,3,2,20,0,0,2,0,0.0,0
281,17,train,"Give me the awardee of Volunteer Decoration and awardee of the award, that is a military conflict, of Lawrence Moore Cosgrave.",SELECT ?result WHERE { ?result <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/Volunteer_Decoration> . ?result <http://dbpedia.org/property/awards> ?v1 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. <http://dbpedia.org/resource/Lawrence_Moore_Cosgrave> <http://dbpedia.org/property/awards> ?v1 . },"```sparql
SELECT ?volunteerAwardee ?militaryConflictAward WHERE {
  # Find Lawrence Moore Cosgrave and his military conflict award
  ?cosgrave dbo:awardReceived ?militaryConflictAward .
  ?cosgrave rdfs:label ""Lawrence Moore Cosgrave""@en .

  # Identify the awardee of Volunteer Decoration
  ?volunteerAwardee dbo:awardReceived ?volunteerDecoration .
  ?volunteerDecoration rdfs:label ""Volunteer Decoration""@en .
}
```",3,4,4,2,2,2,3,28,0,0,1,0,0.0,0
935,4,train,"Give me the native of Balochistan, Pakistan.","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Balochistan,_Pakistan> . }","```sparql
SELECT ?person ?label WHERE {
  ?person dbo:birthPlace dbr:Balochistan .
  ?person rdfs:label ?label .
  FILTER (lang(?label) = ""en"")
}
```",1,1,2,1,1,3,2,20,0,90,57,0.0,0.0,0
791,21,train,"Give me the father of Emperor Go-Toba and spouse of the spouse, that is a royalty, of Emperor Takakura.",SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/spouse> <http://dbpedia.org/resource/Emperor_Takakura> . <http://dbpedia.org/resource/Emperor_Go-Toba> <http://dbpedia.org/property/father> ?result . ?result <http://dbpedia.org/ontology/spouse> ?v1 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. },"```sparql
SELECT ?father WHERE {
  # Find Emperor Go-Toba and his father
  ?goToba dbo:parent ?father .
  ?goToba rdfs:label ""Emperor Go-Toba""@en .

  # Find spouse of Emperor Takakura who is royalty (Imperial Princess Shushi)
  OPTIONAL { 
    ?takakura dbo:spouse ?spouse .
    ?takakura rdfs:label ""Emperor Takakura""@en .
    FILTER (regex(str(?spouse), ""Imperial Princess Shushi"", ""i""))
  }

  # Find father of the spouse identified as royalty
  OPTIONAL {
    ?spouse dbo:parent ?father .
    FILTER (regex(str(?spouse), ""Imperial Princess Shushi"", ""i""))
  }
}
```",3,4,4,2,2,3,3,71,1,0,0,1.0,1.0,1.0
83,0,train,Give me the ruling party in Fortaleza.,SELECT ?result WHERE { <http://dbpedia.org/resource/Fortaleza> <http://dbpedia.org/property/leaderParty> ?result . },"```sparql
SELECT ?mayor ?party WHERE {
  ?fortaleza dbo:mayor ?mayor .
  ?fortaleza rdfs:label ""Fortaleza""@en .
  
  OPTIONAL { 
    ?mayor dbo:politicalParty ?party .
  }
}
```",1,1,2,1,1,3,2,20,0,0,1,0,0.0,0
955,1,train,Give me the band of Johnny Rioux.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/bandMember> <http://dbpedia.org/resource/Johnny_Rioux> . },"```sparql
SELECT ?band WHERE {
  ?rioux dbo:birthName ""Johnny Rioux""@en .
  ?rioux dbo:musicalArtist ?band .
  ?band rdf:type dbo:Band .
}
```",1,1,2,1,1,3,2,20,0,0,1,0,0.0,0
445,27,train,Give me the entity in the award of the commander in Battle of Saint-Mihiel.,SELECT ?result WHERE { ?v1 <http://dbpedia.org/property/awards> ?v2 . <http://dbpedia.org/resource/Battle_of_Saint-Mihiel> <http://dbpedia.org/ontology/commander> ?v1 . ?result <http://dbpedia.org/ontology/country> ?v2 . },"```sparql
SELECT ?commander ?award WHERE {
  # Identify the Battle of Saint-Mihiel
  ?battle dbo:wikiPageRedirects dbpedia-en:Battle_of_Saint-Mihiel .
  
  # Find commanders involved in the battle
  ?battle dbo:commander ?commander .

  # Check if these commanders received any awards related to this battle
  OPTIONAL {
    ?award dbo:recipient ?commander ;
           dbo:relatedEvent ?battle .
  }
}
```",3,3,4,3,1,3,3,71,0,0,87241,0,0.0,0
645,8,train,"Give me the office, that is a government agency and an organisation, of Camilo Menéndez Tolosa.",SELECT ?result WHERE { ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/GovernmentAgency>. <http://dbpedia.org/resource/Camilo_Menéndez_Tolosa> <http://dbpedia.org/property/office> ?result . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. },"```sparql
SELECT ?office WHERE {
  ?person rdfs:label ""Camilo Menéndez Tolosa""@en .
  ?person dbo:positionHeld ?office .
  
  # Ensure the office is a government agency
  ?office rdf:type dbo:GovernmentAgency .

  # Ensure the office is also an organization
  ?office rdf:type dbo:Organization .
}
```",1,3,2,1,1,3,3,71,0,0,1,0,0.0,0
645,21,train,Give me the leader of Ministry of the Army (Spain) and commander in the force of Carlos Asensio Cabanillas.,SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Carlos_Asensio_Cabanillas> . ?v1 <http://dbpedia.org/ontology/commander> ?result . <http://dbpedia.org/resource/Ministry_of_the_Army_(Spain)> <http://dbpedia.org/ontology/leader> ?result . },"```sparql
SELECT ?ministryLeader ?commander WHERE {
  # Find the leader of the Ministry of the Army (Spain)
  ?ministry dcterms:isPartOf dbc:Ministry_of_the_Army_(Spain) .
  ?ministry dbo:leader ?ministryLeader .

  # Find Carlos Asensio Cabanillas and his commander
  ?cabanillas foaf:name ""Carlos Asensio Cabanillas""@en ;
              dbo:commander ?commander .
}
```",3,3,4,2,2,3,3,71,0,0,1,0,0.0,0
976,10,train,Give me the office of Mustafa Şentop and office of Naci Bostancı.,SELECT ?result WHERE { <http://dbpedia.org/resource/Mustafa_Şentop> <http://dbpedia.org/property/office> ?result . <http://dbpedia.org/resource/Naci_Bostancı> <http://dbpedia.org/property/office> ?result . },"```sparql
SELECT ?person ?office WHERE {
  VALUES ?person { dbpedia-tr:Mustafa_Sentop dbpedia-tr:Naci_Bostancı }
  
  ?person dbo:office ?office .
}
```",2,2,3,1,2,3,3,71,0,0,1,0,0.0,0
158,9,train,"Give me the award, that is a country, of the reference to Adelbert Cronkhite.","SELECT ?result WHERE { ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. ?v0 <http://dbpedia.org/property/awards> ?result . ?v0 <http://xmlns.com/foaf/0.1/name> ""Adelbert Cronkhite""@en . }","```sparql
SELECT ?award WHERE {
  # Find Adelbert Cronkhite
  ?cronkhite dbo:wikiPageRedirects ?redirect .
  ?redirect rdfs:label ""Adelbert Cronkhite""@en .

  # Find awards associated with him
  ?cronkhite dbo:award ?award .

  # Check if the award is a country
  ?award rdf:type dbpedia-owl:Country .
}
```",2,3,3,2,1,3,2,20,0,0,1,0,0.0,0
527,2,train,Give me the professional in Actor.,"SELECT ?result WHERE { ?result <http://dbpedia.org/property/occupation> ""Actor""@en . }","```sparql
SELECT ?actor ?occupation WHERE {
  ?actor rdfs:label ""Actor""@en .
  ?actor dbo:occupation ?occupation .
}
```",1,1,2,1,1,3,2,20,0,0,21580,0,0.0,0
465,32,train,"Give me the successor of the child of Alfonso I d'Este and spouse of the child, that is a royalty, of Ferdinand I, Holy Roman Emperor.","SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/successor> ?result . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v1 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Alfonso_I_d'Este> . ?result <http://dbpedia.org/ontology/spouse> ?v3 . <http://dbpedia.org/resource/Ferdinand_I,_Holy_Roman_Emperor> <http://dbpedia.org/ontology/child> ?v3 . }","```sparql
SELECT ?successor WHERE {
  # Find a child of Alfonso I d'Este
  ?alfonsoChild dbo:parent dbc:Alfonso_I_d%27Este .
  
  # Identify the spouse of this child who is royalty
  OPTIONAL { 
    ?alfonsoChild dbo:spouse ?royalSpouse .
    FILTER (regex(str(?royalSpouse), ""Royal"", ""i""))
  }
  
  # Find a child of Ferdinand I, Holy Roman Emperor and their royal spouse
  OPTIONAL {
    ?ferdinandChild dbo:parent dbc:Ferdinand_I,_Holy_Roman_Emperor .
    ?ferdinandChild dbo:spouse ?royalSpouseFerdinand .
    FILTER (regex(str(?royalSpouseFerdinand), ""Royal"", ""i""))
  }
  
  # Find the successor of the child identified in step 1
  OPTIONAL {
    ?alfonsoChild dbo:successor ?successor .
  }
}
```",4,5,5,2,2,3,3,71,0,0,1,0,0.0,0
129,14,train,"Give me the associated musical artist of the actor, that is an organisation, of Dreamville Presents: Revenge and professional in .","SELECT ?result WHERE { ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?result <http://dbpedia.org/property/occupation> """"@en . ?v2 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . <http://dbpedia.org/resource/Dreamville_Presents:_Revenge> <http://dbpedia.org/property/starring> ?v2 . }","```sparql
SELECT ?musicalArtist WHERE {
  # Find Dreamville Presents: Revenge and its associated actor
  ?event dbo:actor ?actor .
  ?event rdfs:label ""Dreamville Presents: Revenge""@en .

  # Ensure the actor is part of an organization
  ?actor dbo:memberOf ?organization .

  # Find a musical artist associated with the same organization
  ?musicalArtist dbo:memberOf ?organization .
  ?musicalArtist rdf:type dbo:MusicalArtist .
  
  # Ensure the musical artist is professional in music
  ?musicalArtist dbo:profession ""Musician""@en .
}
```",3,4,4,2,2,2,3,28,0,0,3,0,0.0,0
888,9,train,"Give me the force, that is a societal event and an event, of the military force of War in Donbas (2014–2022).",SELECT ?result WHERE { ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?result <http://dbpedia.org/ontology/commander> ?v0 . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?v0 <http://dbpedia.org/ontology/battle> <http://dbpedia.org/resource/War_in_Donbas_(2014–2022)> . },"```sparql
SELECT ?societalEvent ?militaryEvent ?force WHERE {
  # Identify the war entity
  ?war rdfs:label ""War in Donbas (2014–2022)""@en .
  
  # Find societal events related to the war
  OPTIONAL {
    ?war dbo:socialEvent ?societalEvent .
    ?societalEvent dbo:cause ?force .
  }
  
  # Find military events related to the war
  OPTIONAL {
    ?war dbo:militaryEvent ?militaryEvent .
    ?militaryEvent dbo:cause ?force .
  }
}
```",2,4,3,2,1,3,2,20,0,0,24,0,0.0,0
273,6,train,Give me the parent of Gianni Agnelli and spouse of Edoardo Agnelli (industrialist).,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/spouse> <http://dbpedia.org/resource/Edoardo_Agnelli_(industrialist)> . <http://dbpedia.org/resource/Gianni_Agnelli> <http://dbpedia.org/ontology/parent> ?result . },"```sparql
SELECT ?parentOfGianniAg, ?spouseOfEdoardoAg WHERE {
  # Find the parent of Gianni Agnelli
  ?gianniAgnelli dbo:parent ?parentOfGianniAg .
  ?gianniAgnelli rdfs:label ""Gianni Agnelli""@en .

  # Find the spouse of Edoardo Agnelli (industrialist)
  ?edoardoAgnelli dbo:spouse ?spouseOfEdoardoAg .
  ?edoardoAgnelli rdfs:label ""Edoardo Agnelli (industrialist)""@en .
}
```",2,2,3,1,2,3,2,20,0,0,1,0,0.0,0
839,39,train,"Give me the band of Peter Schorowsky and band of the band, that is a musical artist, of the professional in Musician.","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/bandMember> <http://dbpedia.org/resource/Peter_Schorowsky> . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?v0 <http://dbpedia.org/ontology/associatedMusicalArtist> ?v1 . ?v0 <http://dbpedia.org/property/occupation> ""Musician""@en . ?result <http://dbpedia.org/ontology/bandMember> ?v1 . }","```sparql
SELECT ?bandOfSchorowsky ?bandOfBand WHERE {
  # Find Peter Schorowsky and his band
  ?schorowsky dbo:member ?bandOfSchorowsky .
  ?schorowsky rdfs:label ""Peter Schorowsky""@en .

  # Find a professional musician and their band
  OPTIONAL {
    ?musician rdf:type dbo:Musician .
    ?musician dbo:memberOf ?band .
    
    # Ensure the band is recognized as a musical artist
    ?band rdf:type dbo:MusicalArtist .
    
    # Find the band of this band if it's also a musical artist
    OPTIONAL {
      ?band dbo:member ?subBand .
      ?subBand rdf:type dbo:MusicalArtist .
      
      BIND(?subBand AS ?bandOfBand)
    }
  }
}
```",4,5,5,3,2,3,3,71,0,0,1,0,0.0,0
417,25,train,"Give me the child of the child, that is a royalty, of Frederick Francis III, Grand Duke of Mecklenburg-Schwerin and child of Christian X of Denmark.","SELECT ?result WHERE { ?result <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Christian_X_of_Denmark> . ?result <http://dbpedia.org/ontology/parent> ?v1 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v1 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Frederick_Francis_III,_Grand_Duke_of_Mecklenburg-Schwerin> . }","```sparql
SELECT ?grandchild WHERE {
  # Find a child of Frederick Francis III who is royalty
  ?child dbo:parent dbc:Frederick_Francis_III,_Grand_Duke_of_Mecklenburg-Schwerin .
  ?child rdf:type dbo:Monarch .

  # From this royal child, find their own children who are also children of Christian X
  ?grandchild dbo:parent ?child .
  ?grandchild dbo:parent dbc:Christian_X_of_Denmark .
}
```",3,4,4,2,2,3,3,71,0,0,2,0,0.0,0
987,4,train,"Who is the band, that is an artist and a musical artist, of Šako Polumenta?",SELECT ?result WHERE { <http://dbpedia.org/resource/Šako_Polumenta> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. },"```sparql
SELECT ?band WHERE {
  ?sako rdf:type dbo:Artist .
  ?sako rdfs:label ""Šako Polumenta""@en .
  
  OPTIONAL { 
    ?sako dbo:band ?band .
  }
}
```",1,3,2,1,1,3,3,71,0,0,2,0,0.0,0
965,12,train,"Give me the parent of George Mountbatten, 2nd Marquess of Milford Haven and parent of Louise Mountbatten.","SELECT ?result WHERE { <http://dbpedia.org/resource/Louise_Mountbatten> <http://dbpedia.org/ontology/parent> ?result . <http://dbpedia.org/resource/George_Mountbatten,_2nd_Marquess_of_Milford_Haven> <http://dbpedia.org/ontology/parent> ?result . }","```sparql
SELECT ?parent WHERE {
  # Find George Mountbatten, 2nd Marquess of Milford Haven and his parent(s)
  ?george dbo:parent ?parent .
  ?george rdfs:label ""George Mountbatten, 2nd Marquess of Milford Haven""@en .

  # Find Louise Mountbatten and her parent(s)
  OPTIONAL {
    ?louise dbo:parent ?parent .
    ?louise rdfs:label ""Louise Mountbatten""@en .
  }
}
```",2,2,3,1,2,3,3,71,2,0,0,1.0,1.0,1.0
892,11,train,Give me the entity in the profession of Henri Crolla.,SELECT ?result WHERE { <http://dbpedia.org/resource/Henri_Crolla> <http://dbpedia.org/property/occupation> ?v1 . ?result <http://dbpedia.org/ontology/country> ?v1 . },"```sparql
SELECT ?occupation WHERE {
  ?person rdfs:label ""Henri Crolla""@en .
  ?person dbo:occupation ?occupation .
}
```",2,2,3,2,1,3,3,71,0,1,13092,0.0,0.0,0
976,6,train,"Who is the mayor, that is a politician and an office holder and Turkish, of Nation Alliance (Turkey)?",SELECT ?result WHERE { <http://dbpedia.org/resource/Nation_Alliance_(Turkey)> <http://dbpedia.org/property/leader> ?result . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?result <http://dbpedia.org/ontology/nationality> <http://dbpedia.org/resource/Turkey>. ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. },"```sparql
SELECT ?mayor WHERE {
  # Find individuals associated with the Nation Alliance (MHP)
  ?person dbo:party dbr:Nation_Alliance_(Turkey) .
  
  # Ensure they are mayors, politicians, and office holders
  ?person dbo:position dbr:Mayor .
  ?person dbo:nationality dbr:Turkey .

  # Filter to ensure the person is a politician (office holder)
  FILTER EXISTS { ?person dbo:occupation dbr:Politician }
}
```",1,4,2,1,1,3,3,71,0,0,1,0,0.0,0
417,19,train,"Give me the spouse of the parent, that is a royalty, of Count Ingolf of Rosenborg and child of Christian X of Denmark.",SELECT ?result WHERE { ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v0 <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Count_Ingolf_of_Rosenborg> . ?result <http://dbpedia.org/ontology/spouse> ?v0 . ?result <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Christian_X_of_Denmark> . },"```sparql
SELECT ?spouse WHERE {
  # Find the parent of Count Ingolf of Rosenborg who is royalty
  ?ingolf dbo:parent ?royalParent .
  ?ingolf rdfs:label ""Count Ingolf of Rosenborg""@en .
  
  # Ensure the parent is royalty
  ?royalParent rdf:type dbo:RoyalFamily .

  # Find children of Christian X of Denmark
  ?christianX dbo:child ?child .
  ?christianX rdfs:label ""Christian X of Denmark""@en .

  # Match the spouse of the royal parent with a child of Christian X
  ?royalParent dbo:spouse ?spouse .
  FILTER (?spouse = ?child)
}
```",3,4,4,2,2,3,3,71,0,0,1,0,0.0,0
353,0,train,Give me the alma mater of Daniil Yegorov.,SELECT ?result WHERE { <http://dbpedia.org/resource/Daniil_Yegorov> <http://dbpedia.org/ontology/almaMater> ?result . },"```sparql
SELECT ?almaMater WHERE {
  ?person rdfs:label ""Daniil Yegorov""@en .
  ?person dbo:almaMater ?almaMater .
}
```",1,1,2,1,1,2,2,9,1,0,0,1.0,1.0,1.0
456,13,train,Give me the professional in the alter ego of The Shadow.,SELECT ?result WHERE { <http://dbpedia.org/resource/The_Shadow> <http://dbpedia.org/property/alterEgo> ?v1 . ?result <http://dbpedia.org/property/occupation> ?v1 . },"```sparql
SELECT ?alterEgo ?profession WHERE {
  # Find the alter ego of The Shadow
  ?shadow dbo:alterEgo ?alterEgo .
  ?shadow rdfs:label ""The Shadow""@en .

  # Find the profession of the alter ego
  ?alterEgo dbo:occupation ?profession .
}
```",2,2,3,2,1,3,3,71,0,0,39640,0,0.0,0
554,4,train,"Who is the band, that is an artist, of Rita Redshoes?",SELECT ?result WHERE { ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. <http://dbpedia.org/resource/Rita_Redshoes> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . },"```sparql
SELECT ?band WHERE {
  ?artist rdfs:label ""Rita Redshoes""@en .
  ?artist dbo:band ?band .
}
```",1,2,2,1,1,3,2,20,0,0,1,0,0.0,0
865,21,train,"Give me the father of Shahla Khatun and native of the residence, that is a country, of Ram Jaipal Singh Yadav.",SELECT ?result WHERE { <http://dbpedia.org/resource/Shahla_Khatun> <http://dbpedia.org/property/father> ?result . ?result <http://dbpedia.org/ontology/birthPlace> ?v2 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. <http://dbpedia.org/resource/Ram_Jaipal_Singh_Yadav> <http://dbpedia.org/property/residence> ?v2 . },"```sparql
SELECT ?father ?nativeCountry WHERE {
  # Find Shahla Khatun and her father
  ?shahla dbo:parent ?father .
  ?shahla rdfs:label ""Shahla Khatun""@en .

  # Find Ram Jaipal Singh Yadav's residence and its native country
  ?ram dbo:residence ?residence .
  ?ram rdfs:label ""Ram Jaipal Singh Yadav""@en .
  
  ?residence dbo:nativeCountry ?nativeCountry .
  FILTER (isLiteral(?nativeCountry) && datatype(?nativeCountry) = xsd:string)
}
```",3,4,4,2,2,3,3,71,0,0,1,0,0.0,0
281,15,train,"Give me the commander in the war, that is an event and a military conflict, of Roy Boehm and awardee of Volunteer Decoration.",SELECT ?result WHERE { <http://dbpedia.org/resource/Roy_Boehm> <http://dbpedia.org/ontology/battle> ?v1 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?result <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/Volunteer_Decoration> . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v1 <http://dbpedia.org/ontology/commander> ?result . },"```sparql
SELECT ?commander ?war WHERE {
  # Find Roy Boehm and his role in a military conflict
  ?boehm dbo:givenName ""Roy""@en .
  ?boehm dbo:familyName ""Boehm""@en .
  
  # Check if he was a commander in a war or military conflict
  ?war dbo:commander ?boehm .
  ?war rdf:type dbo:MilitaryConflict .

  # Verify if Roy Boehm is an awardee of the Volunteer Decoration
  OPTIONAL {
    ?awards dbo:recipient ?boehm .
    ?awards rdfs:label ""Volunteer Decoration""@en .
  }
}
```",3,5,4,2,2,2,3,28,0,0,1,0,0.0,0
47,15,train,"Give me the administration of the commander, that is a politician, in Operation Green Hunt.",SELECT ?result WHERE { ?result <http://dbpedia.org/property/governor> ?v1 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. <http://dbpedia.org/resource/Operation_Green_Hunt> <http://dbpedia.org/ontology/commander> ?v1 . },"```sparql
SELECT ?commander ?administration WHERE {
  # Find entities related to Operation Green Hunt
  ?operation dbo:name ""Operation Green Hunt""@en .
  
  # Identify commander of the operation who is also a politician
  ?operation dbo:commander ?commander .
  ?commander dbo:politicalRole ?role .
  
  # Retrieve administration or political role information
  ?commander dbo:administration ?administration .
}
```",2,3,3,2,1,3,3,71,0,0,189,0,0.0,0
170,3,train,Give me the work of International Energy Agency.,SELECT ?result WHERE { ?result <http://dbpedia.org/property/author> <http://dbpedia.org/resource/International_Energy_Agency> . },"```sparql
SELECT ?work WHERE {
  ?iea dbo:abstract ?work .
  ?iea rdfs:label ""International Energy Agency""@en .
}
```",1,1,2,1,1,2,3,28,0,1,2,0.0,0.0,0
129,3,train,Give me the mayor of 1999 West Dunbartonshire Council election.,SELECT ?result WHERE { <http://dbpedia.org/resource/1999_West_Dunbartonshire_Council_election> <http://dbpedia.org/property/leader> ?result . },"```sparql
SELECT ?mayor WHERE {
  ?election dbo:type dbr:West_Dunbartonshire_Council_election .
  ?election dbo:date ""1999-05-06""^^xsd:date .
  ?election dbo:electedOfficial ?mayor .
}
```",1,1,2,1,1,2,3,28,0,0,4,0,0.0,0
47,18,train,Give me the office of Suvendu Adhikari and office of Ajoy Mukherjee and office of Bidesh Ranjan Bose.,SELECT ?result WHERE { <http://dbpedia.org/resource/Ajoy_Mukherjee> <http://dbpedia.org/property/office> ?result . <http://dbpedia.org/resource/Bidesh_Ranjan_Bose> <http://dbpedia.org/property/office> ?result . <http://dbpedia.org/resource/Suvendu_Adhikari> <http://dbpedia.org/property/office> ?result . },"```sparql
SELECT ?person ?officeLabel WHERE {
  VALUES ?person { 
    dbr:Suvendu_Adhikari 
    dbr:Ajoy_Mukherjee 
    dbr:Bidesh_Ranjan_Bose 
  }
  
  ?person dbo:office ?office .
  SERVICE wikibase:label { bd:serviceParam wikibase:language ""[AUTO_LANGUAGE],en"". }
}
```",3,3,4,1,3,3,3,71,0,0,1,0,0.0,0
917,16,train,"Who is the father of the spouse, that is a royalty, of Leleiohoku I?",SELECT ?result WHERE { ?v0 <http://dbpedia.org/property/father> ?result . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v0 <http://dbpedia.org/ontology/spouse> <http://dbpedia.org/resource/Leleiohoku_I> . },"```sparql
SELECT ?father WHERE {
  # Find Leleiohoku I and his spouse
  ?leleiohoku dbo:spouse ?spouse .
  ?leleiohoku rdfs:label ""Leleiohoku I""@en .

  # Ensure the spouse is royalty
  OPTIONAL { 
    ?spouse rdf:type dbo:Monarch .
  }

  # Find father of the royal spouse
  ?spouse dbo:parent ?father .
}
```",2,3,3,2,1,3,3,71,0,0,2,0,0.0,0
715,18,train,Give me the commander in Rif War and commander in Spanish Civil War and leader of Ministry of the Air (Spain).,SELECT ?result WHERE { <http://dbpedia.org/resource/Spanish_Civil_War> <http://dbpedia.org/ontology/commander> ?result . <http://dbpedia.org/resource/Ministry_of_the_Air_(Spain)> <http://dbpedia.org/ontology/leader> ?result . <http://dbpedia.org/resource/Rif_War> <http://dbpedia.org/ontology/commander> ?result . },"```sparql
# Query for Commander in Rif War
SELECT ?rifWarCommander WHERE {
  ?rifWarCommander dbo:occupation ""Military commander""@en .
  ?rifWarCommander dbo:wikiPageWikiLink ?rifWar .
  ?rifWar rdfs:label ""Rif War""@en .
}

# Query for Commander in Spanish Civil War
SELECT ?civilWarCommander WHERE {
  ?civilWarCommander dbo:occupation ""Military commander""@en .
  ?civilWarCommander dbo:wikiPageWikiLink ?civilWar .
  ?civilWar rdfs:label ""Spanish Civil War""@en .
}

# Query for Leader of Ministry of the Air (Spain)
SELECT ?ministryLeader WHERE {
  ?ministryLeader dbo:occupation ""Minister of the Air""@es .
  ?ministryLeader dbo:wikiPageWikiLink ?ministryOfAir .
  ?ministryOfAir rdfs:label ""Ministry of the Air (Spain)""@en .
}

# Combine results to find a common individual
SELECT DISTINCT ?person WHERE {
  VALUES ?role { 
    (""Military commander""@en . ?rifWar)
    (""Military commander""@en . ?civilWar)
    (""Minister of the Air""@es . ?ministryOfAir)
  }
  
  ?person ?role .
}
```",3,3,4,1,3,3,3,71,0,0,1,0,0.0,0
507,28,train,"Give me the spouse of the person born as Anne Voase Coates and professional in Film director, television director and director of Entertaining Mr Sloane (film).","SELECT ?result WHERE { ?result <http://dbpedia.org/property/occupation> ""Film director, television director""@en . <http://dbpedia.org/resource/Entertaining_Mr_Sloane_(film)> <http://dbpedia.org/ontology/director> ?result . ?result <http://dbpedia.org/ontology/spouse> ?v1 . ?v1 <http://dbpedia.org/property/birthName> ""Anne Voase Coates""@en . }","```sparql
SELECT ?spouse WHERE {
  ?anne a dbo:FilmDirector ;
        rdfs:label ""Anne Voase Coates""@en .
  
  OPTIONAL { 
    ?anne dbo:spouse ?spouse .
  }
}
```",4,4,5,2,3,3,3,71,0,0,1,0,0.0,0
965,2,train,"Give me the parent of George Mountbatten, 2nd Marquess of Milford Haven.","SELECT ?result WHERE { <http://dbpedia.org/resource/George_Mountbatten,_2nd_Marquess_of_Milford_Haven> <http://dbpedia.org/ontology/parent> ?result . }","```sparql
SELECT ?parent WHERE {
  ?person rdfs:label ""George Mountbatten, 2nd Marquess of Milford Haven""@en .
  ?person dbo:parent ?parent .
}
```",1,1,2,1,1,3,3,71,2,0,0,1.0,1.0,1.0
579,4,train,"Give me the native, that is an office holder, of Edinburgh.",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Edinburgh> . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. },"```sparql
SELECT ?person WHERE {
  # Find individuals native to Edinburgh
  ?person dbo:nativePlace dbr:Edinburgh .
  
  # Check if the individual is an office holder
  OPTIONAL { 
    ?person dbo:officeHolder ?office .
  }
}
```",1,2,2,1,1,3,2,20,0,0,88,0,0.0,0
715,12,train,Give me the commander in Spanish Civil War and leader of Ministry of the Air (Spain).,SELECT ?result WHERE { <http://dbpedia.org/resource/Ministry_of_the_Air_(Spain)> <http://dbpedia.org/ontology/leader> ?result . <http://dbpedia.org/resource/Spanish_Civil_War> <http://dbpedia.org/ontology/commander> ?result . },"```sparql
SELECT ?person WHERE {
  # Find the commander of the Nationalist forces in the Spanish Civil War
  ?civilWar dbo:commander ?person .
  ?civilWar rdfs:label ""Spanish Civil War""@en .

  # Find the leader of the Ministry of the Air in Spain
  OPTIONAL {
    ?ministry dbo:leader ?person .
    ?ministry rdfs:label ""Ministry of the Air (Spain)""@en .
  }
}
```",2,2,3,1,2,3,3,71,1,27,0,0.03571428571428571,1.0,0.0689655172413793
445,2,train,Give me the entity in United Kingdom.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/United_Kingdom> . },"```sparql
SELECT ?person WHERE {
  ?person dbo:nationality dbr:United_Kingdom .
  FILTER (lang(?personLabel) = 'en')
}
LIMIT 10
```",1,1,2,1,1,3,3,71,0,0,42999,0,0.0,0
326,0,train,Give me the resident of Berkshire.,SELECT ?result WHERE { ?result <http://dbpedia.org/property/residence> <http://dbpedia.org/resource/Berkshire> . },"```sparql
SELECT ?resident WHERE {
  ?berkshire dbo:wikiPageRedirects dbpedia:Berkshire .
  ?berkshire dbo:resident ?resident .
}
```",1,1,2,1,1,3,2,20,0,0,5,0,0.0,0
274,0,train,Give me the band member of Dizzy Gillespie.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/associatedMusicalArtist> <http://dbpedia.org/resource/Dizzy_Gillespie> . },"```sparql
SELECT ?bandMember WHERE {
  ?dizzy rdfs:label ""Dizzy Gillespie""@en .
  ?dizzy dbo:bandMember|dbo:collaborator ?bandMember .
}
```",1,1,2,1,1,2,3,28,0,0,67,0,0.0,0
36,9,train,Give me the person born as Ayo Makun and person born in 1971.,"SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/birthYear> ""1971""^^<http://www.w3.org/2001/XMLSchema#gYear> . ?result <http://dbpedia.org/property/birthName> ""Ayo Makun""@en . }","```sparql
# Query for person born as Ayo Makun
SELECT ?person WHERE {
  ?person dbo:birthName ""Ayo Makun""@en .
}

UNION

# Query for person born in 1971
SELECT ?person WHERE {
  ?person dbo:birthDate ?date .
  FILTER (YEAR(?date) = 1971)
}
```",2,2,3,1,2,2,3,28,0,0,1,0,0.0,0
773,32,train,Give me the parent of the successor of Charles the Bald and spouse of the father of Charles the Fat.,SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/spouse> ?result . <http://dbpedia.org/resource/Charles_the_Bald> <http://dbpedia.org/ontology/successor> ?v3 . <http://dbpedia.org/resource/Charles_the_Fat> <http://dbpedia.org/property/father> ?v1 . ?result <http://dbpedia.org/ontology/child> ?v3 . },"```sparql
SELECT ?parentOfSuccessor ?spouseOfFather WHERE {
  # Find the successor of Charles the Bald
  ?charlesBald dbo:successor ?successor .
  ?charlesBald rdfs:label ""Charles the Bald""@en .

  # Get the parent of the successor
  ?successor dbo:parent ?parentOfSuccessor .

  # Find the father of Charles the Fat
  ?charlesFat dbo:father ?fatherOfCharlesFat .
  ?charlesFat rdfs:label ""Charles the Fat""@en .

  # Get the spouse of the father of Charles the Fat
  ?fatherOfCharlesFat dbo:spouse ?spouseOfFather .
}
```",4,4,5,2,2,3,3,71,0,0,1,0,0.0,0
917,38,train,Give me the child of the father of Keʻelikōlani and child of the father of Kamehameha IV.,SELECT ?result WHERE { <http://dbpedia.org/resource/Keʻelikōlani> <http://dbpedia.org/property/father> ?v3 . <http://dbpedia.org/resource/Kamehameha_IV> <http://dbpedia.org/property/father> ?v0 . ?result <http://dbpedia.org/property/father> ?v0 . ?result <http://dbpedia.org/ontology/parent> ?v3 . },"```sparql
SELECT ?child1 ?child2 WHERE {
  # Find the father of Keʻelikōlani and his child
  ?keelikoLani dbo:parent ?fatherKeelikoLani .
  ?fatherKeelikoLani dbo:child ?child1 .
  ?keelikoLani rdfs:label ""Keʻelikōlani""@en .

  # Find the father of Kamehameha IV and his child
  ?kamehamehaIV dbo:parent ?fatherKamehamehaIV .
  ?fatherKamehamehaIV dbo:child ?child2 .
  ?kamehamehaIV rdfs:label ""Kamehameha IV""@en .
}
```",4,4,5,2,2,3,3,71,3,3,0,0.5,1.0,0.6666666666666666
791,12,train,Give me the predecessor of Emperor Antoku and father of Emperor Go-Toba.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/successor> <http://dbpedia.org/resource/Emperor_Antoku> . <http://dbpedia.org/resource/Emperor_Go-Toba> <http://dbpedia.org/property/father> ?result . },"```sparql
SELECT ?predecessor ?father WHERE {
  # Find the predecessor of Emperor Antoku
  ?antoku dbo:successor ?predecessor .
  ?antoku rdfs:label ""Emperor Antoku""@en .

  # Find the father of Emperor Go-Toba
  ?goToba dbo:parent ?father .
  ?goToba rdfs:label ""Emperor Go-Toba""@en .
}
```",2,2,3,1,2,3,3,71,1,1,0,0.5,1.0,0.6666666666666666
456,6,train,Give me the alter ego of The Shadow.,SELECT ?result WHERE { <http://dbpedia.org/resource/The_Shadow> <http://dbpedia.org/property/alterEgo> ?result . },"```sparql
SELECT ?alterEgo WHERE {
  ?shadow dbo:alias ""The Shadow""@en .
  ?shadow foaf:name ?alterEgo .
}
```",1,1,2,1,1,3,3,71,0,0,3,0,0.0,0
965,39,train,"Give me the parent of the person born, that is a noble, as the birth name of George Mountbatten, 2nd Marquess of Milford Haven and parent of Louise Mountbatten.","SELECT ?result WHERE { ?v0 <http://dbpedia.org/property/birthName> ?v2 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Noble>. ?v0 <http://dbpedia.org/ontology/parent> ?result . <http://dbpedia.org/resource/Louise_Mountbatten> <http://dbpedia.org/ontology/parent> ?result . <http://dbpedia.org/resource/George_Mountbatten,_2nd_Marquess_of_Milford_Haven> <http://dbpedia.org/property/birthName> ?v2 . }","```sparql
SELECT ?parent WHERE {
  # Find George Mountbatten, 2nd Marquess of Milford Haven and his birth name
  ?george dbo:birthName ?birthName .
  ?george rdfs:label ""George Mountbatten, 2nd Marquess of Milford Haven""@en .

  # Find parents of George Mountbatten
  ?george dbo:parent ?parent .

  # Ensure the parent is also a parent of Louise Mountbatten
  ?louise dbo:parent ?parent .
  ?louise rdfs:label ""Louise Mountbatten""@en .
}
```",4,5,5,3,2,3,3,71,0,0,2,0,0.0,0
122,1,train,Give me the band of Gift of Gab (rapper).,SELECT ?result WHERE { <http://dbpedia.org/resource/Gift_of_Gab_(rapper)> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . },"```sparql
SELECT ?band WHERE {
  ?giftOfGab rdfs:label ""Gift of Gab""@en .
  ?giftOfGab dbo:musicalBand ?band .
}
```",1,1,2,1,1,2,2,9,0,0,4,0,0.0,0
341,1,train,Give me the writer of In Love & War (Amerie album).,SELECT ?result WHERE { <http://dbpedia.org/resource/In_Love_&_War_(Amerie_album)> <http://dbpedia.org/property/writer> ?result . },"```sparql
SELECT ?writer WHERE {
  ?album rdfs:label ""In Love & War""@en .
  ?album dbo:artist <http://dbpedia.org/resource/Amerie> .
  ?album dbo:writer ?writer .
}
```",1,1,2,1,1,2,2,9,0,0,57,0,0.0,0
976,2,train,Give me the office of Naci Bostancı.,SELECT ?result WHERE { <http://dbpedia.org/resource/Naci_Bostancı> <http://dbpedia.org/property/office> ?result . },"```sparql
SELECT ?office WHERE {
  ?person rdfs:label ""Naci Bostancı""@en .
  ?person dbo:office ?office .
}
```",1,1,2,1,1,3,3,71,0,0,4,0,0.0,0
507,31,train,Give me the director of Entertaining Mr Sloane (film) and spouse of the person born as the birth name of Anne V. Coates.,SELECT ?result WHERE { <http://dbpedia.org/resource/Anne_V._Coates> <http://dbpedia.org/property/birthName> ?v1 . <http://dbpedia.org/resource/Entertaining_Mr_Sloane_(film)> <http://dbpedia.org/ontology/director> ?result . ?v0 <http://dbpedia.org/property/birthName> ?v1 . ?result <http://dbpedia.org/ontology/spouse> ?v0 . },"```sparql
SELECT ?director ?spouse WHERE {
  # Find director of ""Entertaining Mr Sloane"" (film)
  ?film dbo:director ?director .
  ?film rdfs:label ""Entertaining Mr Sloane""@en .

  # Find spouse of Anne V. Coates
  OPTIONAL {
    ?anne foaf:name ""Anne V. Coates""@en ;
          dbo:birthName ?birthName .
    FILTER (str(?birthName) = ""Anne V. Coates"")
    
    ?anne dbo:spouse ?spouse .
  }
}
```",4,4,5,3,2,3,3,71,0,0,1,0,0.0,0
715,9,train,Give me the commander in Rif War and commander in Spanish Civil War.,SELECT ?result WHERE { <http://dbpedia.org/resource/Spanish_Civil_War> <http://dbpedia.org/ontology/commander> ?result . <http://dbpedia.org/resource/Rif_War> <http://dbpedia.org/ontology/commander> ?result . },"```sparql
# Query for the commander in the Rif War
SELECT ?commander WHERE {
  ?event dbo:location dbr:Rif_Region .
  ?event dbo:participant ?commander .
  ?commander rdfs:label ""Abd el-Krim""@en .
}

# Query for the commander in the Spanish Civil War
SELECT ?commander WHERE {
  ?event dbo:location dbr:Spain .
  ?event dbo:date ?date .
  FILTER (YEAR(?date) >= 1936 && YEAR(?date) <= 1939)
  ?event dbo:participant ?commander .
  ?commander rdfs:label ""Francisco Franco""@en .
}
```",2,2,3,1,2,3,3,71,0,0,4,0,0.0,0
987,34,train,"Give me the entity in Montenegro and birth place of the band, that is an artist and a musical artist, of the band, that is an artist, of Dado Polumenta.",SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?result <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Montenegro> . ?v3 <http://dbpedia.org/ontology/associatedMusicalArtist> ?v1 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. <http://dbpedia.org/resource/Dado_Polumenta> <http://dbpedia.org/ontology/associatedMusicalArtist> ?v3 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. ?v1 <http://dbpedia.org/ontology/birthPlace> ?result . },"```sparql
SELECT ?birthPlace WHERE {
  # Step 1: Identify Dado Polumenta and his associated band
  ?dado foaf:name ""Dado Prljaca""@en .
  ?band dbo:member ?dado ;
        a dbo:Band .

  # Step 2: Find another band related to the first band that is also an artist
  ?relatedBand dbo:associatedBand ?band ;
               a dbo:Band, dbo:MusicalArtist .

  # Step 3: Get the birthplace of this second band and ensure it's in Montenegro
  ?relatedBand dbo:birthPlace ?birthPlace .
  ?country dbr:Montenegro .
  ?birthPlace dbo:country ?country .
}
```",4,7,5,3,2,3,3,71,0,0,1,0,0.0,0
417,9,train,Give me the child of Christian X of Denmark and spouse of Princess Caroline-Mathilde of Denmark.,SELECT ?result WHERE { ?result <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Christian_X_of_Denmark> . ?result <http://dbpedia.org/ontology/spouse> <http://dbpedia.org/resource/Princess_Caroline-Mathilde_of_Denmark> . },"```sparql
SELECT ?child WHERE {
  # Find children of Christian X of Denmark
  ?christianX dbo:spouse ?parent .
  ?parent rdfs:label ""Christian X""@en .
  ?christianX dbo:child ?child .

  # Find spouse of Princess Caroline-Mathilde of Denmark
  ?carolineMathilde dbo:spouse ?spouse .
  ?carolineMathilde rdfs:label ""Princess Caroline-Mathilde of Denmark""@en .

  # Match the child with the spouse
  FILTER (?child = ?spouse)
}
```",2,2,3,1,2,3,3,71,0,0,1,0,0.0,0
606,5,train,Who is the alumnus of University of Pennsylvania?,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/almaMater> <http://dbpedia.org/resource/University_of_Pennsylvania> . },"```sparql
SELECT ?person WHERE {
  ?person dbo:almaMater dbr:University_of_Pennsylvania .
}
```",1,1,2,1,1,3,2,20,1114,0,0,1.0,1.0,1.0
606,14,train,"Give me the birthplace of the alumnus of the figure known, that is a university and a sports league and an educational institution, as Penn Quakers.",SELECT ?result WHERE { ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsLeague>. ?v0 <http://dbpedia.org/ontology/almaMater> ?v2 . ?v0 <http://dbpedia.org/ontology/birthPlace> ?result . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/EducationalInstitution>. ?v2 <http://dbpedia.org/property/nickname> <http://dbpedia.org/resource/Penn_Quakers> . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/University>. },"```sparql
SELECT ?alumnus ?birthPlace WHERE {
  # Find an alumnus of the University of Pennsylvania (Penn Quakers)
  ?alumnus dbo:almaMater dbr:University_of_Pennsylvania .
  
  # Retrieve birthplace information for that alumnus
  OPTIONAL { 
    ?alumnus dbo:birthPlace ?birthPlace .
  }
}
```",3,6,4,3,1,3,2,20,598,1114,0,0.3492990654205608,1.0,0.5177489177489177
41,3,train,"Who is the leader, that is a politician and an office holder, of 2005 Castlereagh Borough Council election?",SELECT ?result WHERE { <http://dbpedia.org/resource/2005_Castlereagh_Borough_Council_election> <http://dbpedia.org/property/leader> ?result . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. },"```sparql
SELECT ?leader WHERE {
  ?election dbo:eventDate ?date .
  ?election rdfs:label ""Castlereagh Borough Council election""@en .
  
  # Ensure the date is within the year 2005
  FILTER (YEAR(?date) = 2005)
  
  ?officeHolder dbo:officeHolder ?leader .
  ?officeHolder dbo:election ?election .
  
  # Ensure the leader is a politician
  ?leader rdf:type dbo:Politician .
}
```",1,3,2,1,1,2,3,28,0,0,4,0,0.0,0
917,32,train,"Give me the parent of the child, that is a royalty, of Kamehameha IV and child of the father of Keʻelikōlani.",SELECT ?result WHERE { ?v1 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Kamehameha_IV> . ?result <http://dbpedia.org/ontology/child> ?v1 . <http://dbpedia.org/resource/Keʻelikōlani> <http://dbpedia.org/property/father> ?v3 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?result <http://dbpedia.org/ontology/parent> ?v3 . },"```sparql
SELECT ?parent WHERE {
  # Identify Kamehameha IV and his royal children
  ?kamehamehaIV rdfs:label ""Kamehameha IV""@en .
  ?child dbo:parent ?kamehamehaIV ;
         rdf:type dbo:RoyalFamilyMember .

  # Find Keʻelikōlani's father
  ?keelikolani rdfs:label ""Keʻelikōlani""@en .
  ?father dbo:parent ?keelikolani .

  # Identify a child of the father of Keʻelikōlani who is also a royal child of Kamehameha IV
  ?child2 dbo:parent ?father ;
          rdf:type dbo:RoyalFamilyMember .

  # Find the parent of this identified individual
  ?child2 dbo:parent ?parent .
}
```",4,5,5,2,2,3,3,71,0,0,1,0,0.0,0
507,19,train,Give me the spouse of the person born as Anne Voase Coates and director of Entertaining Mr Sloane (film).,"SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/spouse> ?v0 . <http://dbpedia.org/resource/Entertaining_Mr_Sloane_(film)> <http://dbpedia.org/ontology/director> ?result . ?v0 <http://dbpedia.org/property/birthName> ""Anne Voase Coates""@en . }","```sparql
SELECT ?spouse WHERE {
  # Find Anne Voase Coates by birth name and director role
  ?anne a dbo:FilmDirector ;
        foaf:name ""Anne Voase Coates"" ;
        dbo:birthName ""Anne Voase Coates"" .
  
  # Confirm she directed Entertaining Mr Sloane
  ?anne dbo:directed ?film .
  ?film rdfs:label ""Entertaining Mr Sloane""@en .

  # Find her spouse
  OPTIONAL {
    ?anne foaf:mbox ?spouse .
  }
}
```",3,3,4,2,2,3,3,71,0,0,1,0,0.0,0
216,21,train,Give me the player in the coach of Croatia national under-21 football team and team of Ognjen Vukojević.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/coach> <http://dbpedia.org/resource/Ognjen_Vukojević> . ?v1 <http://dbpedia.org/ontology/team> ?result . <http://dbpedia.org/resource/Croatia_national_under-21_football_team> <http://dbpedia.org/ontology/coach> ?v1 . },"```sparql
SELECT ?coach ?team WHERE {
  # Find the coach of Croatia national under-21 football team
  ?under21Team dbo:coach ?coach .
  ?under21Team rdfs:label ""Croatia national under-21 football team""@en .

  # Find teams associated with Ognjen Vukojević as a player
  ?vukojevic dbo:playsFor ?team .
  ?vukojevic rdfs:label ""Ognjen Vukojević""@en .

  # Check if the coach is also associated with any team that Ognjen Vukojević plays for
  OPTIONAL {
    ?coach dbo:worksFor ?team .
  }
}
```",3,3,4,2,2,3,3,71,0,0,1,0,0.0,0
826,30,train,"Give me the spouse of Anna Magdalena Appel and predecessor of the parent of Prince Friedrich of Hesse and by Rhine and successor of Louis II, Grand Duke of Hesse.","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/successor> ?v1 . <http://dbpedia.org/resource/Prince_Friedrich_of_Hesse_and_by_Rhine> <http://dbpedia.org/ontology/parent> ?v1 . <http://dbpedia.org/resource/Louis_II,_Grand_Duke_of_Hesse> <http://dbpedia.org/ontology/successor> ?result . <http://dbpedia.org/resource/Anna_Magdalena_Appel> <http://dbpedia.org/ontology/spouse> ?result . }","```sparql
SELECT ?spouse WHERE {
  # Find spouse of Anna Magdalena Bach (Johann Sebastian Bach)
  ?annaMagdalena dbo:spouse ?spouse .
  ?annaMagdalena rdfs:label ""Anna Magdalena Bach""@en .

  # Find parent of Prince Friedrich of Hesse and by Rhine
  OPTIONAL {
    ?princeFriedrich dbo:parent ?parent .
    ?princeFriedrich rdfs:label ""Prince Friedrich of Hesse and by Rhine""@en .
  }

  # Find successor of Louis II, Grand Duke of Hesse
  OPTIONAL {
    ?louisII dbo:succ ?successor .
    ?louisII rdfs:label ""Louis II, Grand Duke of Hesse""@en .
  }
}
```",4,4,5,2,3,3,3,71,0,1,1,0.0,0.0,0
93,13,train,"Give me the capital of the headquarter, that is a region and a settlement, of the headquarter of Clam Cove Pictograph Site.",SELECT ?result WHERE { ?v0 <http://dbpedia.org/ontology/location> ?v1 . ?v1 <http://dbpedia.org/ontology/capital> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Region>. <http://dbpedia.org/resource/Clam_Cove_Pictograph_Site> <http://dbpedia.org/ontology/location> ?v0 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. },"```sparql
SELECT ?capital WHERE {
  # Find Clam Cove Pictograph Site
  ?site dbo:wikiPageRedirects dbpedia-en:Clam_Cove_Pictograph_Site .
  
  # Identify its headquarters, which is a region and settlement
  ?site dbo:headquarters ?hq .
  ?hq rdf:type dbo:Region ;
      rdf:type dbo:Settlement .

  # Find the capital of this region/settlement
  ?hq dbo:capital ?capital .
}
```",3,5,4,3,1,3,2,20,0,0,2,0,0.0,0
83,4,train,"Who is the commander, that is a politician, in Central African Republic Civil War?",SELECT ?result WHERE { ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. <http://dbpedia.org/resource/Central_African_Republic_Civil_War> <http://dbpedia.org/ontology/commander> ?result . },"```sparql
SELECT ?commander WHERE {
  # Find individuals involved in the Central African Republic Civil War
  ?individual dbo:participatedIn dbr:Central_African_Republic_Civil_War .
  
  # Ensure they have a role as a commander
  ?individual dbo:occupation ""Commander""@en .

  # Ensure they also have a role as a politician
  ?individual dbo:occupation ""Politician""@en .
}
```",1,2,2,1,1,3,2,20,0,0,279,0,0.0,0
236,3,train,"Give me the administration, that is an organisation, of John Adams.",SELECT ?result WHERE { ?result <http://dbpedia.org/property/leader> <http://dbpedia.org/resource/John_Adams> . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. },"```sparql
SELECT ?administration WHERE {
  ?johnAdams dbo:president ?administration .
  ?johnAdams rdfs:label ""John Adams""@en .
}
```",1,2,2,1,1,3,2,20,0,0,1,0,0.0,0
826,2,train,"Give me the predecessor of Louis IV, Grand Duke of Hesse.","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/successor> <http://dbpedia.org/resource/Louis_IV,_Grand_Duke_of_Hesse> . }","```sparql
SELECT ?predecessor WHERE {
  ?grandDuke rdfs:label ""Louis IV, Grand Duke of Hesse""@en .
  ?grandDuke dbo:predecessor ?predecessor .
}
```",1,1,2,1,1,3,3,71,1,0,0,1.0,1.0,1.0
955,2,train,"Give me the work, that is a work and an album and a musical work, of Matt Freeman.",SELECT ?result WHERE { ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Album>. ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalWork>. ?result <http://dbpedia.org/property/writer> <http://dbpedia.org/resource/Matt_Freeman> . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. },"```sparql
SELECT ?work WHERE {
  ?work dbo:artist dbr:Matt_Freeman .
  ?work dbo:album _:b0 .
  ?work dbo:musicalWork _:b1 .
}
```",1,4,2,1,1,3,2,20,0,0,2,0,0.0,0
507,4,train,Who is the person born as Anne Voase Coates?,"SELECT ?result WHERE { ?result <http://dbpedia.org/property/birthName> ""Anne Voase Coates""@en . }","```sparql
SELECT DISTINCT ?name WHERE {
  ?person dbo:birthName ""Anne Voase Coates""@en .
  ?person rdfs:label ?name .
}
```",1,1,2,1,1,3,3,71,0,1,1,0.0,0.0,0
976,22,train,Give me the office of Mustafa Şentop and office of the person born as Mehmet Naci Bostancı.,"SELECT ?result WHERE { <http://dbpedia.org/resource/Mustafa_Şentop> <http://dbpedia.org/property/office> ?result . ?v0 <http://dbpedia.org/property/office> ?result . ?v0 <http://dbpedia.org/property/birthName> ""Mehmet Naci Bostancı""@en . }","```sparql
SELECT ?mustafaOffice ?ahmetOffice WHERE {
  # Find the office of Mustafa Şentop
  ?mustafa dbo:birthName ""Mustafa Şentop""@en .
  ?mustafa dbo:office ?mustafaOffice .

  # Find the office of Ahmet Altan (born Mehmet Naci Bostancı)
  ?ahmet dbo:birthName ""Mehmet Naci Bostancı""@en .
  ?ahmet dbo:currentAlias ""Ahmet Altan""@en .
  ?ahmet dbo:office ?ahmetOffice .
}
```",3,3,4,2,2,3,3,71,0,0,1,0,0.0,0
129,8,train,Give me the professional in the mayor of 1999 West Dunbartonshire Council election.,SELECT ?result WHERE { ?result <http://dbpedia.org/property/occupation> ?v1 . <http://dbpedia.org/resource/1999_West_Dunbartonshire_Council_election> <http://dbpedia.org/property/leader> ?v1 . },"```sparql
SELECT ?mayor ?profession WHERE {
  # Find the 1999 West Dunbartonshire Council election
  ?election dbo:wikiPageRedirects dbpedia-en:West_Dunbartonshire_Council_election,_1999 .
  
  # Identify the mayor elected in this event
  ?election dbo:electedOfficial ?mayor .
  ?mayor dbo:title ""Mayor""@en .

  # Retrieve the profession of the identified mayor
  OPTIONAL { 
    ?mayor dbo:occupation ?profession .
  }
}
```",2,2,3,2,1,2,3,28,0,0,39640,0,0.0,0
826,39,train,"Give me the successor of Louis II, Grand Duke of Hesse and predecessor of the parent of the child of Louis IV, Grand Duke of Hesse.","SELECT ?result WHERE { <http://dbpedia.org/resource/Louis_II,_Grand_Duke_of_Hesse> <http://dbpedia.org/ontology/successor> ?result . ?result <http://dbpedia.org/ontology/successor> ?v1 . ?v0 <http://dbpedia.org/ontology/parent> <http://dbpedia.org/resource/Louis_IV,_Grand_Duke_of_Hesse> . ?v0 <http://dbpedia.org/ontology/parent> ?v1 . }","```sparql
SELECT ?successor ?predecessor WHERE {
  # Find successor of Louis II, Grand Duke of Hesse
  ?louisII dbo:successor ?successor .
  ?louisII rdfs:label ""Louis II, Grand Duke of Hesse""@en .

  # Find a child of Louis IV, Grand Duke of Hesse
  ?louisIV dbo:child ?child .
  ?louisIV rdfs:label ""Louis IV, Grand Duke of Hesse""@en .

  # The parent of the child is Louis IV himself
  OPTIONAL {
    ?child dbo:parent ?parent .
    FILTER (?parent = ?louisIV)
  }

  # Find predecessor of Louis IV
  ?louisIV dbo:predecessor ?predecessor .
}
```",4,4,5,3,2,3,3,71,1,0,0,1.0,1.0,1.0
465,23,train,"Give me the successor of the child of the parent of Ercole II d'Este, Duke of Ferrara.","SELECT ?result WHERE { ?v0 <http://dbpedia.org/property/father> ?v2 . ?v0 <http://dbpedia.org/ontology/successor> ?result . <http://dbpedia.org/resource/Ercole_II_d'Este,_Duke_of_Ferrara> <http://dbpedia.org/ontology/parent> ?v2 . }","```sparql
SELECT ?successor WHERE {
  # Identify Ercole II d'Este
  ?ercole2 dbo:parent ?father .
  ?ercole2 rdfs:label ""Ercole II d'Este""@en .

  # Find the parent of Ercole II d'Este (likely his father)
  
  # Find any child of this parent, excluding Ercole II d'Este
  ?child dbo:parent ?father .
  FILTER (?child != ?ercole2)

  # Determine the successor of this other child
  OPTIONAL {
    ?child dbo:succeededBy ?successor .
  }
}
```",3,3,4,3,1,3,3,71,0,0,1,0,0.0,0
926,32,train,Give me the father of the father of Abdulaziz and successor of the child of Ahmed III.,SELECT ?result WHERE { <http://dbpedia.org/resource/Abdulaziz> <http://dbpedia.org/property/father> ?v1 . ?v3 <http://dbpedia.org/ontology/successor> ?result . ?v3 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Ahmed_III> . ?v1 <http://dbpedia.org/property/father> ?result . },"```sparql
SELECT ?grandfather WHERE {
  # Step 1: Find Abdulaziz's father
  ?abdulaziz dbo:father ?father .
  ?abdulaziz rdfs:label ""Abdulaziz""@en .

  # Step 2: Find the father of Abdulaziz's father (Abdulaziz's grandfather)
  ?father dbo:father ?grandfather .

  # Step 3: Identify a child of Ahmed III
  OPTIONAL {
    ?ahmedIII dbo:child ?child .
    ?ahmedIII rdfs:label ""Ahmed III""@en .
  }

  # Step 4: Find the successor of this child
  OPTIONAL {
    ?child dbo:succeededBy ?successor .
  }
}
```",4,4,5,2,2,3,3,71,0,0,1,0,0.0,0
573,37,train,"Give me the person decedent at the residence, that is a settlement, of the professional, that is American, in Politician and parent of John Quincy Adams.","SELECT ?result WHERE { ?v0 <http://dbpedia.org/property/occupation> ""Politician""@en . ?result <http://dbpedia.org/ontology/deathPlace> ?v3 . ?v0 <http://dbpedia.org/property/residence> ?v3 . ?v0 <http://dbpedia.org/ontology/nationality> <http://dbpedia.org/resource/United_States>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. <http://dbpedia.org/resource/John_Quincy_Adams> <http://dbpedia.org/ontology/parent> ?result . }","```sparql
SELECT ?decedent WHERE {
  # Find John Quincy Adams' parent who is an American politician
  ?parent dbo:child ?johnQuincyAdams .
  ?johnQuincyAdams rdfs:label ""John Quincy Adams""@en .
  
  # Ensure the parent is a professional American politician
  ?parent dbo:nationality dbr:United_States .
  ?parent dbo:occupation dbr:Politician .

  # Find the residence of this politician that is a settlement
  ?parent dbo:residence ?settlementResidence .
  ?settlementResidence dbo:type dbr:Settlement .

  # Identify any person who died at this residence
  ?decedent dbo:placeOfDeath ?settlementResidence .
}
```",4,6,5,3,2,3,3,71,0,0,2,0,0.0,0
47,23,train,"Give me the office of the administration of the commander, that is a politician, in Operation Green Hunt.",SELECT ?result WHERE { ?v0 <http://dbpedia.org/property/governor> ?v2 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. <http://dbpedia.org/resource/Operation_Green_Hunt> <http://dbpedia.org/ontology/commander> ?v2 . ?v0 <http://dbpedia.org/property/office> ?result . },"```sparql
SELECT ?office WHERE {
  # Find entities related to Operation Green Hunt
  ?operation dbo:name ""Operation Green Hunt""@en .
  
  # Identify the commander of this operation who is also a politician
  ?commander dbo:commanderOf ?operation ;
             dbo:politicalOffice ?office .

  # Ensure the commander is recognized as a politician
  ?commander rdf:type dbo:Politician .
}
```",3,4,4,3,1,3,3,71,0,0,369,0,0.0,0
573,12,train,"Give me the person decedent at Quincy, Massachusetts and parent of John Quincy Adams.","SELECT ?result WHERE { <http://dbpedia.org/resource/John_Quincy_Adams> <http://dbpedia.org/ontology/parent> ?result . ?result <http://dbpedia.org/ontology/deathPlace> <http://dbpedia.org/resource/Quincy,_Massachusetts> . }","```sparql
SELECT ?parent WHERE {
  # Find the parent of John Quincy Adams
  ?johnQuincyAdams dbo:child ?parent .
  ?johnQuincyAdams rdfs:label ""John Quincy Adams""@en .

  # Ensure the parent is also a decedent at Quincy, Massachusetts
  OPTIONAL { 
    ?parent dbo:placeOfBirth ?quincy .
    FILTER (regex(str(?quincy), ""Quincy, Massachusetts"", ""i""))
  }
}
```",2,2,3,1,2,3,3,71,0,3,2,0.0,0.0,0
987,15,train,"Who is the band, that is an artist and a musical artist, of the band, that is an artist, of Dado Polumenta?",SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. <http://dbpedia.org/resource/Dado_Polumenta> <http://dbpedia.org/ontology/associatedMusicalArtist> ?v1 . },"```sparql
SELECT ?band2 WHERE {
  # Find the band of Dado Prljaca
  ?dado dbo:member ?band1 .
  ?dado rdfs:label ""Dado Prljaca""@en .

  # Ensure that the band is an artist and a musical artist
  ?band1 rdf:type dbo:Band ;
         rdf:type dbo:MusicalArtist .

  # Find the associated band/artist of this band
  ?band1 dbo:associatedBand ?band2 .
}
```",2,5,3,2,1,3,3,71,0,0,2,0,0.0,0
826,37,train,"Give me the successor of the child, that is a royalty, of the reference, that is a royalty, to Louis I and predecessor of Louis IV, Grand Duke of Hesse.","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/successor> <http://dbpedia.org/resource/Louis_IV,_Grand_Duke_of_Hesse> . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v3 <http://dbpedia.org/ontology/successor> ?result . ?v0 <http://xmlns.com/foaf/0.1/name> ""Louis I""@en . ?v0 <http://dbpedia.org/ontology/child> ?v3 . }","```sparql
SELECT ?successor WHERE {
  # Find Louis I and his parent
  ?louisI dbo:parent ?parent .
  ?louisI rdfs:label ""Louis I, Grand Duke of Hesse""@en .

  # Ensure the parent is royalty
  ?parent rdf:type dbo:Monarch .

  # Identify the child of this royal parent who is also royalty
  ?child dbo:parent ?parent .
  ?child rdf:type dbo:Monarch .

  # Find the successor of this royal child
  ?child dbo:succeededBy ?successor .
}
```",4,6,5,3,2,3,3,71,0,0,1,0,0.0,0
865,33,train,"Give me the native of British Raj and father of the child, that is a politician, of the spouse of Syeda Shahar Banu.",SELECT ?result WHERE { ?v2 <http://dbpedia.org/property/father> ?v1 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v2 <http://dbpedia.org/property/father> ?result . <http://dbpedia.org/resource/Syeda_Shahar_Banu> <http://dbpedia.org/ontology/spouse> ?v1 . ?result <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/British_Raj> . },"```sparql
SELECT ?father WHERE {
  # Find Syeda Shahar Banu's spouse
  ?shaharBanu dbo:spouse ?spouse .
  ?shaharBanu rdfs:label ""Syeda Shahar Banu""@en .

  # Find a child of the spouse who is a politician
  ?child dbo:parent ?spouse ;
         rdf:type dbo:Politician .

  # Identify the father of this politician
  ?child dbo:parent ?father .

  # Check if the father was native to British Raj
  OPTIONAL {
    ?father dbo:nativePlace ?nativePlace .
    FILTER (regex(str(?nativePlace), ""British Raj"", ""i""))
  }
}
```",4,5,5,3,2,3,3,71,0,0,1,0,0.0,0
987,18,train,Give me the entity in Montenegro and birth place of Dado Polumenta and birth place of Moamer Kasumović.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Montenegro> . <http://dbpedia.org/resource/Moamer_Kasumović> <http://dbpedia.org/ontology/birthPlace> ?result . <http://dbpedia.org/resource/Dado_Polumenta> <http://dbpedia.org/ontology/birthPlace> ?result . },"```sparql
SELECT ?person ?birthPlace WHERE {
  # Find Dado Polumenta's birthplace
  OPTIONAL { 
    ?polumenta dbo:birthPlace ?birthPlace .
    ?polumenta rdfs:label ""Dado Polumenta""@en .
  }
  
  # Find Moamer Kasumović's birthplace
  OPTIONAL {
    ?kasumovic dbo:birthPlace ?birthPlace .
    ?kasumovic rdfs:label ""Moamer Kasumović""@en .
  }

  # Filter for birthplaces in Montenegro
  FILTER (
    EXISTS { 
      ?birthPlace dbo:country dbr:Montenegro .
    }
  )
}
```",3,3,4,1,3,3,3,71,1,0,0,1.0,1.0,1.0
130,7,train,"Give me the figure known as the film, that is a soccer club and an organisation, of Candice Storey Lee.",SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerClub>. ?result <http://dbpedia.org/property/nickname> ?v1 . ?v1 <http://dbpedia.org/ontology/director> <http://dbpedia.org/resource/Candice_Storey_Lee> . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. },"```sparql
SELECT ?entity WHERE {
  # Find entities associated with Candice Storey Lee
  ?entity dbo:wikiPageWikiLink <http://dbpedia.org/resource/Candice_Storey_Lee> .
  
  # Ensure the entity is a soccer club
  ?entity rdf:type dbp:Soccer_Club .

  # Check if the entity is also categorized as an organization or film
  ?entity wdt:P31 wd:Q43229 ; # Organization
          OPTIONAL { ?entity wdt:P31 wd:Q11424 } . # Film

}
```",2,4,3,2,1,3,2,20,0,0,3,0,0.0,0
715,8,train,"Give me the office, that is a government agency and an organisation, of Carlos Franco Iribarnegaray.",SELECT ?result WHERE { ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/GovernmentAgency>. <http://dbpedia.org/resource/Carlos_Franco_Iribarnegaray> <http://dbpedia.org/property/office> ?result . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. },"```sparql
SELECT ?office WHERE {
  ?person foaf:name ""Carlos Franco Iribarnegaray""@en .
  ?person dbo:office ?office .

  # Ensure the office is both a Government Agency and an Organization
  ?office rdf:type dbpedia-owl:GovernmentAgency .
  ?office rdf:type dbpedia-owl:Organization .
}
```",1,3,2,1,1,3,3,71,0,0,1,0,0.0,0
465,25,train,"Give me the successor of the child, that is a royalty, of Anne of Brittany and spouse of Archduchess Barbara of Austria.",SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. <http://dbpedia.org/resource/Anne_of_Brittany> <http://dbpedia.org/ontology/child> ?v1 . ?v1 <http://dbpedia.org/ontology/successor> ?result . ?result <http://dbpedia.org/ontology/spouse> <http://dbpedia.org/resource/Archduchess_Barbara_of_Austria> . },"```sparql
SELECT ?successor WHERE {
  # Find a child of Anne of Brittany who is royalty
  ?child dbo:parent ""Anne of Brittany""@en .
  ?child rdf:type dbo:Monarch .

  # Ensure the spouse of this royal child is Archduchess Barbara of Austria
  ?child dbo:spouse ?barbara .
  ?barbara rdfs:label ""Archduchess Barbara of Austria""@en .

  # Find the successor of this individual (either the child or the spouse)
  OPTIONAL {
    ?child dbo:successor ?successor .
  }
  OPTIONAL {
    ?barbara dbo:successor ?successor .
  }
}
```",3,4,4,2,2,3,3,71,0,0,1,0,0.0,0
976,34,train,"Give me the office of Naci Bostancı and office of the leader, that is a politician, of the administration, that is an organisation, of Kemal Kılıçdaroğlu.",SELECT ?result WHERE { <http://dbpedia.org/resource/Naci_Bostancı> <http://dbpedia.org/property/office> ?result . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v3 <http://dbpedia.org/ontology/leader> ?v1 . ?v3 <http://dbpedia.org/property/leader> <http://dbpedia.org/resource/Kemal_Kılıçdaroğlu> . ?v1 <http://dbpedia.org/property/office> ?result . },"```sparql
SELECT ?naciOffice ?kemalLeaderOffice WHERE {
  # Find Naci Bostancı's office
  ?naci dbo:office ?naciOffice .
  ?naci rdfs:label ""Naci Bostancı""@en .

  # Find Kemal Kılıçdaroğlu's administration (organization)
  ?kemal dbo:organization ?administration .
  ?kemal rdfs:label ""Kemal Kılıçdaroğlu""@en .

  # Find the leader of this organization who is a politician
  ?administration dbo:leader ?leader .
  ?leader rdf:type dbo:Politician .

  # Retrieve the office held by this political leader
  ?leader dbo:office ?kemalLeaderOffice .
}
```",4,6,5,3,2,3,3,71,0,0,1,0,0.0,0
166,10,train,"Give me the territory administered, that is a country, from the reference to Madrid.","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/capital> ?v0 . ?v0 <http://xmlns.com/foaf/0.1/name> ""Madrid""@en . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. }","```sparql
SELECT ?administeredCountry WHERE {
  # Find the country for which Madrid is the capital
  ?country dbo:capital ?madrid .
  ?madrid rdfs:label ""Madrid""@en .

  # Find territories administered by this country
  OPTIONAL { 
    ?country dbo:administrativeTerritory ?administeredCountry .
    FILTER (isLiteral(?administeredCountry))
  }
}
```",2,3,3,2,1,3,2,20,0,0,15,0,0.0,0
865,2,train,Give me the father of Shahla Khatun.,SELECT ?result WHERE { <http://dbpedia.org/resource/Shahla_Khatun> <http://dbpedia.org/property/father> ?result . },"```sparql
SELECT ?father WHERE {
  # Find Shahla Khatun and her father
  ?shahla dbo:parent ?father .
  ?shahla rdfs:label ""Shahla Khatun""@en .

  # Optionally, filter for male gender if available in DBpedia
  OPTIONAL { 
    ?father dbo:gender ?gender .
    FILTER (str(?gender) = ""male"")
  }
}
```",1,1,2,1,1,3,3,71,0,0,1,0,0.0,0
98,15,train,Give me the region of the time zone of Lopez Jaena and entity in Philippines.,SELECT ?result WHERE { <http://dbpedia.org/resource/Lopez_Jaena> <http://dbpedia.org/ontology/timeZone> ?v1 . ?result <http://dbpedia.org/ontology/timeZone> ?v1 . ?result <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Philippines> . },"```sparql
SELECT ?region ?entity WHERE {
  # Find the time zone of Lopez Jaena, Philippines
  ?lorenzoJaena dbo:location ?location .
  ?location dbo:timeZone ?timeZone .
  ?location rdfs:label ""Lopez Jaena""@en .

  # Determine the region corresponding to this time zone in the Philippines
  ?region dbo:hasTimeZone ?timeZone .
  
  # Select a general entity from the Philippines, e.g., Manila
  ?entity rdf:type dbo:City ;
          dbo:country dbr:Philippines ;
          rdfs:label ""Manila""@en .
}
```",3,3,4,2,2,2,3,28,0,0,1743,0,0.0,0
926,36,train,"Give me the child of the father, that is a royalty, of the parent, that is a royalty, of Beyhan Sultan (daughter of Mustafa III) and father of Mahmud II.",SELECT ?result WHERE { <http://dbpedia.org/resource/Beyhan_Sultan_(daughter_of_Mustafa_III)> <http://dbpedia.org/ontology/parent> ?v3 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v0 <http://dbpedia.org/ontology/child> ?result . ?v3 <http://dbpedia.org/property/father> ?v0 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. <http://dbpedia.org/resource/Mahmud_II> <http://dbpedia.org/property/father> ?result . },"```sparql
SELECT ?child WHERE {
  # Beyhan Sultan and her parent Mustafa III
  ?beyhanSultan dbo:parent ?mustafaIII .
  ?beyhanSultan rdfs:label ""Beyhan Sultan""@en .

  # Mahmud II as a child of Beyhan Sultan
  ?mahmudII dbo:parent ?beyhanSultan .
  ?mahmudII rdfs:label ""Mahmud II""@en .

  # Find Beyhan Sultan's spouse (royalty) who is the father of Mahmud II
  OPTIONAL {
    ?beyhanSultan dbo:spouse ?royalSpouse .
    ?royalSpouse dbo:parent ?fatherOfRoyalSpouse .
    FILTER EXISTS { ?mahmudII dbo:parent ?beyhanSultan }
  }

  # Find a child of this royal father
  OPTIONAL {
    ?fatherOfRoyalSpouse dbo:child ?child .
    FILTER (regex(str(?royalSpouse), ""royalty"", ""i""))
  }
}
```",4,6,5,3,2,3,3,71,0,0,1,0,0.0,0
839,5,train,"Give me the band, that is a band and a group, of Peter Schorowsky.",SELECT ?result WHERE { <http://dbpedia.org/resource/Peter_Schorowsky> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Group>. ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Band>. },"```sparql
SELECT ?band WHERE {
  ?person rdfs:label ""Peter Schorowsky""@en .
  ?person dbo:musicalArtist ?band .
}
```",1,3,2,1,1,3,3,71,0,0,1,0,0.0,0
417,17,train,"Who is the child, that is a royalty, of the parent, that is a royalty, of Alexandrine of Mecklenburg-Schwerin?",SELECT ?result WHERE { <http://dbpedia.org/resource/Alexandrine_of_Mecklenburg-Schwerin> <http://dbpedia.org/ontology/parent> ?v1 . ?result <http://dbpedia.org/property/father> ?v1 . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. },"```sparql
SELECT ?child WHERE {
  # Find the parent of Alexandrine of Mecklenburg-Schwerin who is royalty
  ?alexandrine dbo:parent ?royalParent .
  ?alexandrine rdfs:label ""Alexandrine of Mecklenburg-Schwerin""@en .

  # Ensure the parent is a member of royalty
  ?royalParent rdf:type dbo:RoyalFamily .

  # Find children of this royal parent who are also royalty
  ?royalParent dbo:child ?child .
  ?child rdf:type dbo:RoyalFamily .
}
```",2,4,3,2,1,3,3,71,0,0,3,0,0.0,0
874,9,train,"Give me the writer, that is an artist and a musical artist, of the work, that is a work, of Horace Andy.",SELECT ?result WHERE { ?v0 <http://dbpedia.org/property/writer> <http://dbpedia.org/resource/Horace_Andy> . ?v0 <http://dbpedia.org/property/writer> ?result . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. },"```sparql
SELECT ?work ?writer WHERE {
  # Find works associated with Horace Andy
  ?work dbo:artist ?horaceAndy .
  ?horaceAndy rdfs:label ""Horace Andy""@en .

  # Ensure he is categorized as a musical artist
  ?horaceAndy rdf:type dbo:MusicalArtist .

  # Retrieve the writer of the work
  ?work dbo:writer ?writer .
}
```",2,5,3,2,1,3,2,20,0,0,29,0,0.0,0
417,0,train,Give me the spouse of Princess Caroline-Mathilde of Denmark.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/spouse> <http://dbpedia.org/resource/Princess_Caroline-Mathilde_of_Denmark> . },"```sparql
SELECT ?spouse WHERE {
  ?princess rdfs:label ""Princess Caroline-Mathilde of Denmark""@en .
  ?princess dbo:spouse ?spouse .
}
```",1,1,2,1,1,3,3,71,1,0,0,1.0,1.0,1.0
445,3,train,"Who is the resident, that is an athlete, of Great Britain?",SELECT ?result WHERE { ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Athlete>. ?result <http://dbpedia.org/property/residence> <http://dbpedia.org/resource/Great_Britain> . },"```sparql
SELECT ?athlete WHERE {
  ?athlete dbo:country dbr:United_Kingdom .
  ?athlete dbo:occupation dbr:Athlete .
}
```",1,2,2,1,1,3,3,71,0,0,6,0,0.0,0
527,9,train,"Give me the movie, that is a work and English and a television show, with the professional in Actor.","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/United_Kingdom>. ?v0 <http://dbpedia.org/property/occupation> ""Actor""@en . ?result <http://dbpedia.org/property/starring> ?v0 . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/TelevisionShow>. ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. }","```sparql
SELECT DISTINCT ?work WHERE {
  # Find works that are both movies and TV shows
  ?work dbo:genre dbc:Films .
  ?work dbo:genre dbc:Television_series .

  # Ensure the work is in English
  ?work dbo:language dbr:English_language .

  # Check for involvement of an actor
  ?work dbo:starring ?actor .
  ?actor rdf:type dbo:Actor .
}
```",2,5,3,2,1,3,2,20,0,0,298,0,0.0,0
329,16,train,"Give me the birthplace of Eric Cross (writer) and entity in the birthplace, that is an organisation and a country, of Robert Bates (loyalist).",SELECT ?result WHERE { ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?result <http://dbpedia.org/ontology/country> ?v2 . <http://dbpedia.org/resource/Eric_Cross_(writer)> <http://dbpedia.org/ontology/birthPlace> ?result . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. <http://dbpedia.org/resource/Robert_Bates_(loyalist)> <http://dbpedia.org/ontology/birthPlace> ?v2 . },"```sparql
SELECT ?ericCrossBirthplace ?batesBirthplaceEntity WHERE {
  # Part 1: Find the birthplace of Eric Cross (writer)
  ?ericCross dbo:birthPlace ?ericCrossBirthplace .
  ?ericCross rdfs:label ""Eric Cross (writer)""@en .

  # Part 2: Find the birthplace of Robert Bates (loyalist)
  ?bates dbo:birthPlace ?batesBirthplace .
  ?bates rdfs:label ""Robert Bates (loyalist)""@en .

  # Part 3: Identify an entity in the birthplace that is both an organisation and a country
  ?entity dbo:location ?batesBirthplace ;
          rdf:type dbpedia-owl:Country, dbpedia-owl:Organization .
}
```",3,5,4,2,2,2,3,28,0,0,1,0,0.0,0
826,16,train,"Who is the child, that is a royalty, of the reference, that is a royalty, to Louis I?","SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v1 <http://xmlns.com/foaf/0.1/name> ""Louis I""@en . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v1 <http://dbpedia.org/ontology/child> ?result . }","```sparql
SELECT ?child WHERE {
  # Identify Louis I and find a royal reference connected to him
  ?louisI rdfs:label ""Louis I""@en .
  
  OPTIONAL {
    # Find spouse or parent of Louis I who is royalty
    ?royalReference (dbo:spouse|dbo:parent) ?louisI .
    
    # Ensure the reference is royalty
    ?royalReference rdf:type dbo:Monarch .
    
    # Find a child of this royal reference who is also royalty
    ?royalReference dbo:child ?child .
    ?child rdf:type dbo:Monarch .
  }
}
```",2,4,3,2,1,3,3,71,0,0,8,0,0.0,0
124,0,train,Give me the commander in Mahdist War.,SELECT ?result WHERE { <http://dbpedia.org/resource/Mahdist_War> <http://dbpedia.org/ontology/commander> ?result . },"```sparql
SELECT ?commander WHERE {
  ?event dbo:wikiPageRedirects db:Mahdist_War .
  ?event dbo:commander ?commander .
}
```",1,1,2,1,1,3,3,71,0,0,15,0,0.0,0
554,5,train,Give me the birth place of The Legendary Tigerman.,SELECT ?result WHERE { <http://dbpedia.org/resource/The_Legendary_Tigerman> <http://dbpedia.org/ontology/birthPlace> ?result . },"```sparql
SELECT ?birthPlace WHERE {
  ?tigerman rdfs:label ""The Legendary Tigerman""@en .
  ?tigerman dbo:birthPlace ?birthPlace .
}
```",1,1,2,1,1,3,2,20,1,0,0,1.0,1.0,1.0
445,21,train,"Give me the entity in United Kingdom and entity in the residence, that is a country, of Anna Sharkey.",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/location> ?v1 . <http://dbpedia.org/resource/Anna_Sharkey> <http://dbpedia.org/property/residence> ?v1 . ?result <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/United_Kingdom> . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. },"```sparql
SELECT ?ukEntity ?residenceCountry WHERE {
  # Identify Anna Sharkey
  ?anna foaf:name ""Anna Sharkey""@en .
  
  # Find her residence, ensuring it is a country
  ?anna dbo:residenceLocation ?residence .
  ?residence rdf:type dbo:Country .

  # Bind the residence to residenceCountry variable
  BIND(?residence AS ?residenceCountry)

  # Find an entity in the United Kingdom related to Anna Sharkey
  OPTIONAL {
    ?ukEntity dbo:location ?ukLocation .
    ?ukLocation rdf:type dbo:Place .
    ?ukLocation dbo:country dbr:United_Kingdom .
    ?anna dbo:relatedTo ?ukEntity .
  }
}
```",3,4,4,2,2,3,3,71,0,0,102,0,0.0,0
507,16,train,"Give me the movie, that is a movie and a work, with the person born on 1919-06-17.","SELECT ?result WHERE { ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?v1 <http://dbpedia.org/ontology/birthDate> ""1919-06-17""^^<http://www.w3.org/2001/XMLSchema#date> . ?result <http://dbpedia.org/property/starring> ?v1 . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Film>. }","```sparql
SELECT ?movie WHERE {
  # Find the person born on June 17, 1919
  ?person dbo:birthDate ""1919-06-17""^^xsd:date .
  
  # Link this person to a movie and a work
  ?movie dbo:creator ?person ;
         rdf:type dbo:Film ;
         dbo:workType ?workType .

  # Ensure the entity is both a movie and a work
  FILTER EXISTS { ?movie dbo:workType ?workType . }
}
```",2,4,3,2,1,3,3,71,0,0,11,0,0.0,0
98,1,train,Give me the birth place of Paolo Ballesteros.,SELECT ?result WHERE { <http://dbpedia.org/resource/Paolo_Ballesteros> <http://dbpedia.org/ontology/birthPlace> ?result . },"```sparql
SELECT ?birthPlace WHERE {
  ?person rdfs:label ""Paolo Ballesteros""@en .
  ?person dbo:birthPlace ?birthPlace .
}
```",1,1,2,1,1,2,3,28,2,0,0,1.0,1.0,1.0
495,1,train,Give me the father of Princess Charlotte of Württemberg.,SELECT ?result WHERE { <http://dbpedia.org/resource/Princess_Charlotte_of_Württemberg> <http://dbpedia.org/property/father> ?result . },"```sparql
SELECT ?father WHERE {
  ?princess dbo:parent ?father .
  ?princess rdfs:label ""Princess Charlotte of Württemberg""@en .
}
```",1,1,2,1,1,3,2,20,1,1,0,0.5,1.0,0.6666666666666666
839,22,train,"Give me the band of Kevin Russell (musician) and band of the band, that is a musical artist, of Charlie Huhn.",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/bandMember> ?v1 . <http://dbpedia.org/resource/Charlie_Huhn> <http://dbpedia.org/ontology/associatedMusicalArtist> ?v1 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. <http://dbpedia.org/resource/Kevin_Russell_(musician)> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . },"```sparql
SELECT ?kevinBand ?charlieBand ?bandOfCharlieBand WHERE {
  # Find the band of Kevin Russell
  ?kevin dbp:member ?kevinBand .
  ?kevin rdfs:label ""Kevin Russell (musician)""@en .

  # Find the band(s) of Charlie Huhn
  ?charlie dbp:member ?charlieBand .
  ?charlie rdfs:label ""Charlie Huhn""@en .

  # Check if the band of Charlie Huhn is a musical artist and find its associated band
  OPTIONAL {
    ?charlieBand dbo:type dbr:MusicalArtist .
    ?charlieBand dbp:member ?bandOfCharlieBand .
  }
}
```",3,4,4,2,2,3,3,71,0,0,1,0,0.0,0
326,2,train,"Give me the region coded, that is a settlement, as 442/760.","SELECT ?result WHERE { ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. ?result <http://dbpedia.org/ontology/areaCode> ""442/760"" . }","```sparql
SELECT ?settlement WHERE {
  # Find settlements in Aichi Prefecture (JP-44)
  OPTIONAL {
    ?settlement rdf:type dbo:City .
    ?settlement dbo:prefecture dbr:Aichi_Prefecture .
  }
  
  # Find settlements in Oita Prefecture (JP-76)
  OPTIONAL {
    ?settlement rdf:type dbo:City .
    ?settlement dbo:prefecture dbr:Oita_Prefecture .
  }
}
```",1,2,2,1,1,2,2,9,0,0,168,0,0.0,0
791,39,train,"Give me the father of the child, that is a royalty, of the father, that is a royalty and an office holder, of Emperor Antoku and predecessor of Emperor Antoku.",SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v1 <http://dbpedia.org/property/father> ?v0 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?result <http://dbpedia.org/ontology/successor> <http://dbpedia.org/resource/Emperor_Antoku> . ?v1 <http://dbpedia.org/property/father> ?result . <http://dbpedia.org/resource/Emperor_Antoku> <http://dbpedia.org/property/father> ?v0 . },"```sparql
SELECT ?father WHERE {
  # Step 1: Identify Emperor Antoku's predecessor and his father
  ?antoku dbo:predecessor ?predecessor .
  ?antoku rdfs:label ""Emperor Antoku""@en .

  ?predecessor dbo:parent ?father .
  ?father a dbo:Monarch ; 
          dbo:officeHolder ?office .

  # Step 2: Identify a royal child of this father
  OPTIONAL {
    ?child dbo:parent ?father .
    ?child a dbo:Monarch .
  }

  # Step 3: Find the father of this royal child
  OPTIONAL {
    ?child dbo:parent ?royalChildFather .
    FILTER (?child != ?antoku) # Ensure it's not Emperor Antoku himself
  }
}
```",4,7,5,3,2,3,3,71,0,0,1,0,0.0,0
715,2,train,Give me the leader of Ministry of the Air (Spain).,SELECT ?result WHERE { <http://dbpedia.org/resource/Ministry_of_the_Air_(Spain)> <http://dbpedia.org/ontology/leader> ?result . },"```sparql
SELECT ?leader WHERE {
  ?ministry rdfs:label ""Ministry of the Air (Spain)""@en .
  ?ministry dbo:head ?leader .
}
```",1,1,2,1,1,3,3,71,0,0,2,0,0.0,0
987,24,train,Give me the entity in Montenegro and birth place of the actor of All for Free.,SELECT ?result WHERE { <http://dbpedia.org/resource/All_for_Free> <http://dbpedia.org/property/starring> ?v2 . ?v2 <http://dbpedia.org/ontology/birthPlace> ?result . ?result <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Montenegro> . },"```sparql
SELECT ?actor ?birthPlace ?montenegroEntity WHERE {
  # Find the actor associated with the movie ""All for Free""
  ?movie dbo:starring ?actor .
  ?movie rdfs:label ""All for Free""@en .

  # Get the birthplace of the actor
  ?actor dbo:birthPlace ?birthPlace .

  # Check if there is any entity in Montenegro related to the actor
  OPTIONAL {
    ?montenegroEntity dbo:location ?birthPlace .
    ?montenegroEntity rdfs:label ?label .
    FILTER (CONTAINS(LCASE(?label), ""montenegro""))
  }
}
```",3,3,4,2,2,3,3,71,1,21,0,0.045454545454545456,1.0,0.08695652173913045
965,13,train,"Give me the parent of the child, that is a royalty, of Prince Louis of Battenberg.",SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v1 <http://dbpedia.org/ontology/parent> ?result . ?v1 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Prince_Louis_of_Battenberg> . },"```sparql
SELECT ?parent WHERE {
  # Identify Prince Louis of Battenberg
  ?prince rdfs:label ""Prince Louis of Battenberg""@en .
  
  # Find his children and filter those who are royalty
  ?child dbo:parent ?prince ;
         a dbo:RoyalFamilyMember .

  # Retrieve the parent information for these royal children
  ?child dbo:parent ?parent .
}
```",2,3,3,2,1,3,3,71,0,0,2,0,0.0,0
507,21,train,"Give me the professional in Film director, television director and spouse of the person born as Anne Voase Coates.","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/spouse> ?v1 . ?result <http://dbpedia.org/property/occupation> ""Film director, television director""@en . ?v1 <http://dbpedia.org/property/birthName> ""Anne Voase Coates""@en . }","```sparql
SELECT ?spouse ?profession WHERE {
  # Find Anne Voase Coates
  ?anne a dbo:Person ;
        rdfs:label ""Anne Voase Coates""@en .
  
  # Find her spouse
  ?anne dbo:spouse ?spouse .

  # Check if the spouse has a profession as film director or television director
  OPTIONAL {
    ?spouse dbo:occupation ?profession .
    FILTER (
      regex(str(?profession), ""film director"", ""i"") ||
      regex(str(?profession), ""television director"", ""i"")
    )
  }
}
```",3,3,4,2,2,3,3,71,0,0,1,0,0.0,0
955,14,train,"Give me the band of the band member, that is a musical artist and an artist, of the reference, that is a band and a group and an organisation, to Street Dogs.","SELECT ?result WHERE { ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. ?v2 <http://xmlns.com/foaf/0.1/name> ""Street Dogs""@en . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Band>. ?v0 <http://dbpedia.org/ontology/associatedMusicalArtist> ?v2 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Group>. ?result <http://dbpedia.org/ontology/bandMember> ?v0 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. }","```sparql
SELECT ?bandOfBandMember WHERE {
  # Reference band related to Street Dogs
  ?reference dbo:relatedTo dbr:Street_Dogs .
  ?reference rdf:type dbo:MusicalGroup .

  # Band member who is both a musical artist and an artist
  ?member dbo:memberOf ?reference ;
          rdf:type dbo:MusicalArtist, dbo:Artist .

  # Find the band of this band member
  ?bandOfBandMember dbo:member ?member .
}
```",3,8,4,3,1,3,2,20,0,0,3,0,0.0,0
892,15,train,Give me the profession of the true self of Enrico Crolla.,"SELECT ?result WHERE { ?v1 <http://xmlns.com/foaf/0.1/givenName> ""Enrico Crolla""@en . ?v1 <http://dbpedia.org/property/occupation> ?result . }","```sparql
SELECT ?profession WHERE {
  ?enricoCrolla rdfs:label ""Enrico Crolla""@en .
  ?enricoCrolla dbo:occupation ?profession .
}
```",2,2,3,2,1,3,3,71,0,0,2,0,0.0,0
826,31,train,"Give me the successor of Louis II, Grand Duke of Hesse and spouse of the child of the father of Anna Magdalena Appel.","SELECT ?result WHERE { <http://dbpedia.org/resource/Anna_Magdalena_Appel> <http://dbpedia.org/property/father> ?v1 . ?v0 <http://dbpedia.org/ontology/spouse> ?result . ?v0 <http://dbpedia.org/property/father> ?v1 . <http://dbpedia.org/resource/Louis_II,_Grand_Duke_of_Hesse> <http://dbpedia.org/ontology/successor> ?result . }","```sparql
SELECT ?successor ?spouse WHERE {
  # Find Louis II and his successor
  ?louis2 rdfs:label ""Louis II, Grand Duke of Hesse""@en .
  ?louis2 dbo:successor ?successor .

  # Find Anna Magdalena Appel's father
  ?annaMagdalena rdfs:label ""Anna Magdalena Appel""@en .
  ?annaMagdalena dbo:parent ?father .

  # Find a child of the father (Anna's sibling)
  ?sibling dbo:parent ?father .
  
  # Ensure it is not Anna herself
  FILTER (?sibling != ?annaMagdalena)

  # Find spouse of this sibling
  ?sibling dbo:spouse ?spouse .
}
```",4,4,5,3,2,3,3,71,0,0,1,0,0.0,0
527,4,train,Give me the host of Hyperland.,SELECT ?result WHERE { <http://dbpedia.org/resource/Hyperland> <http://dbpedia.org/ontology/presenter> ?result . },"```sparql
SELECT ?host WHERE {
  ?hyperland rdfs:label ""Hyperland""@en .
  OPTIONAL { 
    ?hyperland dbo:performer ?host .
  }
  UNION
  OPTIONAL {
    ?hyperland dbo:hostedBy ?host .
  }
}
```",1,1,2,1,1,3,2,20,0,0,2,0,0.0,0
158,1,train,Give me the party of Théodore Steeg.,SELECT ?result WHERE { <http://dbpedia.org/resource/Théodore_Steeg> <http://dbpedia.org/ontology/party> ?result . },"```sparql
SELECT ?party WHERE {
  ?steeg dbo:birthName ""Théodore Steeg""@en .
  ?steeg dbo:party ?party .
}
```",1,1,2,1,1,3,2,20,0,0,1,0,0.0,0
47,30,train,Give me the office of Bidesh Ranjan Bose and office of the awardee of Padma Vibhushan and office of Suvendu Adhikari.,SELECT ?result WHERE { ?v1 <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/Padma_Vibhushan> . <http://dbpedia.org/resource/Suvendu_Adhikari> <http://dbpedia.org/property/office> ?result . ?v1 <http://dbpedia.org/property/office> ?result . <http://dbpedia.org/resource/Bidesh_Ranjan_Bose> <http://dbpedia.org/property/office> ?result . },"```sparql
SELECT ?person ?name ?office WHERE {
  # Bidesh Ranjan Bose's office
  OPTIONAL {
    ?boses a dbo:Person ;
           rdfs:label ""Bidesh Ranjan Bose""@en .
    ?boses dbo:office ?office .
  }
  
  # Office of an awardee of Padma Vibhushan (example: Amartya Sen)
  OPTIONAL {
    ?sen a dbo:Person ;
         rdfs:label ""Amartya Sen""@en .
    ?sen dbo:award ""Padma Vibhushan"" .
    ?sen dbo:office ?office .
  }
  
  # Suvendu Adhikari's office
  OPTIONAL {
    ?adhikari a dbo:Person ;
              rdfs:label ""Suvendu Adhikari""@en .
    ?adhikari dbo:office ?office .
  }

  BIND(?boses AS ?person) .
  BIND(""Bidesh Ranjan Bose"" AS ?name) .
  
  OPTIONAL {
    BIND(?sen AS ?person) .
    BIND(""Amartya Sen"" AS ?name) .
  }
  
  OPTIONAL {
    BIND(?adhikari AS ?person) .
    BIND(""Suvendu Adhikari"" AS ?name) .
  }
}
```",4,4,5,2,3,3,3,71,0,1,1,0.0,0.0,0
791,26,train,"Give me the predecessor of the child of the child, that is an office holder and a royalty, of Emperor Go-Shirakawa.",SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?result <http://dbpedia.org/ontology/successor> ?v2 . ?v2 <http://dbpedia.org/property/father> ?v1 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v1 <http://dbpedia.org/ontology/parent> <http://dbpedia.org/resource/Emperor_Go-Shirakawa> . },"```sparql
SELECT ?predecessor WHERE {
  # Find Emperor Go-Shirakawa
  ?goShirakawa rdfs:label ""Emperor Go-Shirakawa""@en .

  # Find child of Emperor Go-Shirakawa
  ?child dbo:parent ?goShirakawa .
  
  # Find grandchild (child of the child)
  ?grandchild dbo:parent ?child .

  # Ensure the grandchild is royalty and an office holder
  ?grandchild rdf:type dbo:Monarch .
  ?officeHolderPosition dbo:agent ?grandchild .
  FILTER EXISTS { ?officeHolderPosition a dbo:GovernmentPost }

  # Find predecessor of this grandchild in their role as an office holder
  ?officeHolderPosition dbo:predecessor ?predecessor .
}
```",3,5,4,3,1,3,3,71,0,0,3,0,0.0,0
5,12,train,Give me the birthplace of Gerald Regan and entity in the award of Coro de la Pontificia Universidad Católica de Puerto Rico.,SELECT ?result WHERE { <http://dbpedia.org/resource/Coro_de_la_Pontificia_Universidad_Católica_de_Puerto_Rico> <http://dbpedia.org/property/awards> ?v2 . <http://dbpedia.org/resource/Gerald_Regan> <http://dbpedia.org/ontology/birthPlace> ?result . ?result <http://dbpedia.org/ontology/country> ?v2 . },"```sparql
SELECT ?birthPlaceLabel (GROUP_CONCAT(DISTINCT ?awardEntityLabel; separator="", "") AS ?awardEntities) WHERE {
  # Find birthplace of Gerald Regan
  OPTIONAL {
    ?regan dbo:birthPlace ?birthPlace .
    ?regan rdfs:label ""Gerald Regan""@en .
    ?birthPlace rdfs:label ?birthPlaceLabel .
  }

  # Find entities related to the award Coro de la Pontificia Universidad Católica de Puerto Rico
  OPTIONAL {
    ?award dbo:name ""Coro de la Pontificia Universidad Católica de Puerto Rico"" .
    ?award dbo:recipient ?awardEntity .
    ?awardEntity rdfs:label ?awardEntityLabel .
  }
}
```",3,3,4,2,2,3,2,20,0,2,1,0.0,0.0,0
933,1,train,Give me the reference to Alan Warner.,"SELECT ?result WHERE { ?result <http://xmlns.com/foaf/0.1/name> ""Alan Warner""@en . }","```sparql
SELECT ?reference WHERE {
  # Find the entity related to Alan Warner
  ?entity rdfs:label ""Alan Warner""@en .
  
  # Retrieve references or links associated with Alan Warner
  OPTIONAL { 
    ?entity dbo:wikiPageRedirects ?redirect .
    BIND(?redirect AS ?reference)
  }
  OPTIONAL {
    ?entity dbo:wikiPageDisambiguates ?disambiguation .
    BIND(?disambiguation AS ?reference)
  }
  OPTIONAL {
    ?entity dbo:abstract ?abstract .
    FILTER (CONTAINS(LCASE(str(?abstract)), LCASE(""alan warner"")))
    BIND(?entity AS ?reference)
  }
  OPTIONAL {
    ?entity dbo:wikiPageWikiLink ?link .
    FILTER (CONTAINS(LCASE(str(?link)), LCASE(""alan warner"")))
    BIND(?link AS ?reference)
  }

  # Ensure at least one reference is found
  FILTER (?reference != """")
}
```",1,1,2,1,1,3,3,71,0,1,1,0.0,0.0,0
917,14,train,Give me the child of the father of Kamehameha IV.,SELECT ?result WHERE { ?result <http://dbpedia.org/property/father> ?v0 . <http://dbpedia.org/resource/Kamehameha_IV> <http://dbpedia.org/property/father> ?v0 . },"```sparql
SELECT ?child WHERE {
  # Identify Kamehameha IV and his father
  ?kamehamehaIV dbo:parent ?father .
  ?kamehamehaIV rdfs:label ""Kamehameha IV""@en .

  # Find the children of Kamehameha IV's father
  ?father dbo:child ?child .
}
```",2,2,3,2,1,3,3,71,3,3,0,0.5,1.0,0.6666666666666666
18,16,train,"Give me the alumnus of the figure known, that is an educational institution, as Saints and professional in .","SELECT ?result WHERE { ?result <http://dbpedia.org/property/occupation> """"@en . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/EducationalInstitution>. ?result <http://dbpedia.org/ontology/almaMater> ?v1 . ?v1 <http://dbpedia.org/property/nickname> ""Saints""@en . }","```sparql
SELECT ?alumnus ?profession WHERE {
  # Find the educational institution known as ""Saints""
  ?institution rdfs:label ?name .
  FILTER (regex(?name, ""Saints"", ""i""))

  # Find alumni of this institution and their professions
  ?alumnus dbo:almaMater ?institution ;
           dbo:occupation ?profession .
}
```",3,4,4,2,2,2,3,28,0,11,1,0.0,0.0,0
987,31,train,"Give me the birth place of Moamer Kasumović and birth place of the band, that is an artist and a musical artist, of the band, that is an artist, of Dado Polumenta.",SELECT ?result WHERE { <http://dbpedia.org/resource/Dado_Polumenta> <http://dbpedia.org/ontology/associatedMusicalArtist> ?v2 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. ?v2 <http://dbpedia.org/ontology/associatedMusicalArtist> ?v0 . ?v0 <http://dbpedia.org/ontology/birthPlace> ?result . <http://dbpedia.org/resource/Moamer_Kasumović> <http://dbpedia.org/ontology/birthPlace> ?result . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. },"```sparql
SELECT ?moamerBirthPlace ?bandBirthPlace WHERE {
  # Find Moamer Kasumović (Goran Bregović) and his birth place
  ?moamer dbo:birthPlace ?moamerBirthPlace .
  ?moamer rdfs:label ""Moamer Kasumović""@en .

  # Find the band associated with Dado Polumenta that is both an artist and a musical artist
  ?band dbo:member ?dadoPolumenta ;
        rdf:type dbpedia-owl:Band ;
        rdf:type dbpedia-owl:MusicalArtist .
  ?dadoPolumenta rdfs:label ""Dado Polumenta""@en .

  # Find the birth place of this band
  ?band dbo:birthPlace ?bandBirthPlace .
}
```",4,7,5,3,2,3,3,71,0,0,3,0,0.0,0
839,16,train,"Give me the member of the band, that is a band and a group, of Peter Schorowsky.",SELECT ?result WHERE { <http://dbpedia.org/resource/Peter_Schorowsky> <http://dbpedia.org/ontology/associatedMusicalArtist> ?v1 . ?v1 <http://dbpedia.org/ontology/bandMember> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Band>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Group>. },"```sparql
SELECT ?band WHERE {
  # Find Peter Schorowsky's DBpedia resource
  ?schorowsky dbo:name ""Peter Schorowsky""@en .
  
  # Identify bands/groups he is a member of
  ?schorowsky dbo:member ?band .

  # Ensure the band/group is both a 'Band' and a 'Group'
  ?band rdf:type dbo:Band ;
        rdf:type dbo:Group .
}
```",2,4,3,2,1,3,3,71,0,0,4,0,0.0,0
933,32,train,Give me the reference to the birth name of Alan Warner (musician) and band of the band of Alan Warner (musician).,SELECT ?result WHERE { <http://dbpedia.org/resource/Alan_Warner_(musician)> <http://dbpedia.org/property/birthName> ?v3 . ?result <http://xmlns.com/foaf/0.1/name> ?v3 . ?v1 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . <http://dbpedia.org/resource/Alan_Warner_(musician)> <http://dbpedia.org/ontology/associatedMusicalArtist> ?v1 . },"```sparql
SELECT ?birthName ?band WHERE {
  # Find Alan Warner and his birth name
  ?alanWarner dbo:birthName ?birthName .
  ?alanWarner rdfs:label ""Alan Warner (musician)""@en .

  # Find the band associated with Alan Warner
  OPTIONAL { 
    ?alanWarner dbo:memberOfBand ?band .
  }
}
```",4,4,5,2,2,3,3,71,0,0,1,0,0.0,0
933,35,train,"Give me the band of the band of Alan Warner (musician) and band of the band, that is a group and a band and an organisation, of Alan Warner (musician).",SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v0 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . <http://dbpedia.org/resource/Alan_Warner_(musician)> <http://dbpedia.org/ontology/associatedMusicalArtist> ?v0 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. <http://dbpedia.org/resource/Alan_Warner_(musician)> <http://dbpedia.org/ontology/associatedMusicalArtist> ?v1 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Band>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Group>. },"```sparql
SELECT ?bandOfBand WHERE {
  # Find Alan Warner's associated band
  ?alanWarner dbo:associatedBand ?initialBand .
  ?alanWarner rdfs:label ""Alan Warner (musician)""@en .

  # Find the band of Alan Warner's band
  OPTIONAL { 
    ?initialBand dbo:associatedBand ?bandOfBand .
  }

  # Ensure the entity is a group, a band, and an organization
  FILTER EXISTS {
    ?bandOfBand rdf:type dbpedia-owl:MusicalGroup .
  }
  FILTER EXISTS {
    ?bandOfBand rdf:type dbpedia-owl:Band .
  }
  FILTER EXISTS {
    ?bandOfBand rdf:type dbpedia-owl:Organization .
  }
}
```",4,7,5,2,2,3,3,71,0,0,4,0,0.0,0
459,14,train,"Give me the governor of Oklahoma and governor of the administration, that is a politician, of Brad Henry.",SELECT ?result WHERE { ?v1 <http://dbpedia.org/property/governor> ?result . ?v1 <http://dbpedia.org/property/governor> <http://dbpedia.org/resource/Brad_Henry> . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. <http://dbpedia.org/resource/Oklahoma> <http://dbpedia.org/property/governor> ?result . },"```sparql
SELECT ?bradHenry ?oklahomaGovernor WHERE {
  # Identify Brad Henry and his role
  ?bradHenry dbo:office ""Governor of Oklahoma""@en .
  ?bradHenry rdfs:label ""Brad Henry""@en .

  # Confirm he was the governor during his administration (2003-2011)
  OPTIONAL { 
    ?bradHenry dbo:termStart ?start .
    ?bradHenry dbo:termEnd ?end .
    FILTER (?start >= ""2003-01-01""^^xsd:date && ?end <= ""2011-12-31""^^xsd:date)
  }

  # Identify the governor of Oklahoma
  OPTIONAL {
    ?oklahomaGovernor dbo:office ""Governor of Oklahoma""@en .
    ?oklahomaGovernor rdfs:label ?governorLabel .
  }
}
```",3,4,4,2,2,2,3,28,0,0,1,0,0.0,0
281,3,train,"Give me the war, that is an event and a military conflict, of Roy Boehm.",SELECT ?result WHERE { <http://dbpedia.org/resource/Roy_Boehm> <http://dbpedia.org/ontology/battle> ?result . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. },"```sparql
SELECT ?war WHERE {
  ?event dbo:agent ?boehm .
  ?boehm rdfs:label ""Roy Boehm""@en .

  ?event rdf:type dbo:MilitaryConflict .
  
  BIND(?event AS ?war)
}
```",1,3,2,1,1,2,3,28,0,0,20,0,0.0,0
274,10,train,Give me the professional in the designer of Tetris Classic.,SELECT ?result WHERE { ?result <http://dbpedia.org/property/occupation> ?v1 . <http://dbpedia.org/resource/Tetris_Classic> <http://dbpedia.org/property/designer> ?v1 . },"```sparql
SELECT ?designer WHERE {
  ?tetrisClassic dbo:wikiPageRedirects db:Tetris_Classic .
  ?tetrisClassic dbo:creator ?designer .
}
```",2,2,3,2,1,2,3,28,0,0,39640,0,0.0,0
839,30,train,"Give me the band of Peter Schorowsky and band of Kevin Russell (musician) and band of the band, that is a musical artist, of Charlie Huhn.",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/bandMember> ?v1 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. <http://dbpedia.org/resource/Charlie_Huhn> <http://dbpedia.org/ontology/associatedMusicalArtist> ?v1 . ?result <http://dbpedia.org/ontology/bandMember> <http://dbpedia.org/resource/Peter_Schorowsky> . <http://dbpedia.org/resource/Kevin_Russell_(musician)> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . },"```sparql
SELECT ?peterBand ?kevinBand ?charlieBand ?associatedBand WHERE {
  # Band of Peter Schorowsky
  ?peter dbo:band ?peterBand .
  ?peter rdfs:label ""Peter Schorowsky""@en .

  # Band of Kevin Russell (musician)
  ?kevin dbo:band ?kevinBand .
  ?kevin rdfs:label ""Kevin Russell (musician)""@en .

  # Band of Charlie Huhn
  ?charlie dbo:band ?charlieBand .
  ?charlie rdfs:label ""Charlie Huhn""@en .

  # Find a band associated with the band of Charlie Huhn that is a musical artist
  OPTIONAL {
    ?charlieBand dbo:associatedBand ?associatedBand .
    ?associatedBand rdf:type dbo:MusicalArtist .
  }
}
```",4,5,5,2,3,3,3,71,0,0,1,0,0.0,0
926,35,train,"Give me the father of the father of Abdulaziz and child of the father, that is a royalty, of Mustafa III.",SELECT ?result WHERE { ?v1 <http://dbpedia.org/property/father> ?result . <http://dbpedia.org/resource/Abdulaziz> <http://dbpedia.org/property/father> ?v1 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v0 <http://dbpedia.org/ontology/child> ?result . <http://dbpedia.org/resource/Mustafa_III> <http://dbpedia.org/property/father> ?v0 . },"```sparql
SELECT ?grandfatherAbdulaziz ?royalChild WHERE {
  # Find Abdulaziz and his father
  ?abdulaziz dbo:parent ?fatherAbdulaziz .
  ?fatherAbdulaziz dbo:parent ?grandfatherAbdulaziz .
  ?abdulaziz rdfs:label ""Abdulaziz Ibn Saud""@en .

  # Find Mustafa III and his father, ensuring the father is royalty
  ?mustafaIII dbo:parent ?royalFather .
  ?mustafaIII rdfs:label ""Mustafa III""@en .
  
  # Ensure the father of Mustafa III is a royal figure
  FILTER EXISTS { 
    ?royalFather rdf:type dbo:Monarch .
  }

  # Find any child of this royal father
  OPTIONAL {
    ?royalChild dbo:parent ?royalFather .
  }
}
```",4,5,5,2,2,3,3,71,0,0,1,0,0.0,0
773,23,train,Give me the spouse of the father of the parent of Bernard (son of Charles the Fat).,SELECT ?result WHERE { ?v0 <http://dbpedia.org/ontology/spouse> ?result . ?v2 <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Bernard_(son_of_Charles_the_Fat)> . ?v2 <http://dbpedia.org/property/father> ?v0 . },"```sparql
SELECT ?spouse WHERE {
  # Step 1: Identify Bernard as a child of Charles the Fat
  ?bernard dbo:childOf ?charlesFat .
  ?bernard rdfs:label ""Bernard""@en .

  # Step 2: Find Charles the Fat's parent (father)
  ?charlesFat dbo:parent ?parentOfCharlesFat .

  # Step 3: Determine the spouse of this parent
  ?parentOfCharlesFat dbo:spouse ?spouse .
}
```",3,3,4,3,1,3,3,71,0,0,1,0,0.0,0
791,10,train,Give me the father of Emperor Go-Toba and spouse of Taira no Tokuko.,SELECT ?result WHERE { <http://dbpedia.org/resource/Emperor_Go-Toba> <http://dbpedia.org/property/father> ?result . ?result <http://dbpedia.org/ontology/spouse> <http://dbpedia.org/resource/Taira_no_Tokuko> . },"```sparql
SELECT ?fatherOfGoToba ?spouseOfTokuko WHERE {
  # Find Emperor Go-Toba and his father
  ?goToba dbo:parent ?fatherOfGoToba .
  ?goToba rdfs:label ""Emperor Go-Toba""@en .

  # Find Taira no Tokuko and her spouse
  ?tokuko dbo:spouse ?spouseOfTokuko .
  ?tokuko rdfs:label ""Taira no Tokuko""@en .
}
```",2,2,3,1,2,3,3,71,1,0,0,1.0,1.0,1.0
926,26,train,Give me the successor of the child of the spouse of Şermi Kadın.,SELECT ?result WHERE { ?v0 <http://dbpedia.org/ontology/successor> ?result . ?v2 <http://dbpedia.org/ontology/spouse> <http://dbpedia.org/resource/Şermi_Kadın> . ?v0 <http://dbpedia.org/property/father> ?v2 . },"```sparql
SELECT ?successor WHERE {
  # Find Şermi Kadın's spouse
  ?şermiKadin dbo:spouse ?spouse .
  ?şermiKadin rdfs:label ""Şermi Kadın""@en .

  # Find the child of Şermi Kadın's spouse
  OPTIONAL { 
    ?spouse dbo:child ?child .
  }

  # Find the successor of this child
  OPTIONAL {
    ?child dbo:successor ?successor .
  }
}
```",3,3,4,3,1,3,3,71,0,0,2,0,0.0,0
978,13,train,"Give me the band member of the professional, that is a musical artist and an artist, in the award of Michel Claparède.",SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. <http://dbpedia.org/resource/Michel_Claparède> <http://dbpedia.org/property/awards> ?v0 . ?result <http://dbpedia.org/ontology/associatedMusicalArtist> ?v1 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. ?v1 <http://dbpedia.org/property/occupation> ?v0 . },"```sparql
SELECT ?bandMember WHERE {
  # Find an individual who is both a musical artist and a visual artist
  ?person dbo:occupation dbp:musical_artist .
  ?person dbo:occupation dbp:visual_artist .

  # Ensure the person has received the Award of Michel Claparède
  ?person dbo:awardReceived ?award .
  ?award rdfs:label ""Award of Michel Claparède""@en .

  # Find a band member associated with this individual
  OPTIONAL {
    ?bandMember dbo:memberOfBand ?band .
    ?band dbo:hasMember ?person .
  }
}
```",3,5,4,3,1,3,2,20,0,0,9007,0,0.0,0
36,15,train,"Give me the person born as Ayo Makun and actor of the claim to fame, that is a film, of Lepacious Bose.","SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Film>. ?result <http://dbpedia.org/property/birthName> ""Ayo Makun""@en . <http://dbpedia.org/resource/Lepacious_Bose> <http://dbpedia.org/ontology/knownFor> ?v1 . ?v1 <http://dbpedia.org/ontology/starring> ?result . }","```sparql
SELECT ?birthName ?film WHERE {
  # Find Ayo Makun and his birth name
  ?ayoMakun dbo:birthName ?birthName .
  ?ayoMakun rdfs:label ""Ayo Makun""@en .

  # Find Lepacious Bose's claim to fame, specifically a film
  ?lepaciousBose dbo:film ?film .
  ?lepaciousBose rdfs:label ""Lepacious Bose""@en .
}
```",3,4,4,2,2,2,3,28,0,0,1,0,0.0,0
917,18,train,Give me the child of Kekūanāoʻa and child of Kekūanāoʻa and parent of Albert Kamehameha.,"SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/parent> <http://dbpedia.org/resource/Kekūanāoʻa> . ?result <http://dbpedia.org/property/father> ""Kekūanāoʻa""@en . ?result <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Albert_Kamehameha> . }","```sparql
SELECT ?child WHERE {
  # Find children of Kekūanāoʻa
  ?kekuanaoa dbo:parent ?child .
  ?kekuanaoa rdfs:label ""Kekūanāoʻa""@en .

  UNION

  # Find parent of Albert Kamehameha and check if they are a child of Kekūanāoʻa
  ?albert dbo:parent ?parent .
  ?albert rdfs:label ""Albert Kamehameha""@en .
  
  OPTIONAL {
    ?parent dbo:parent ?child .
    FILTER (?kekuanaoa = ?child)
  }
}
```",3,3,4,1,3,3,3,71,0,0,1,0,0.0,0
926,12,train,Give me the successor of Mustafa III and child of Ahmed III.,SELECT ?result WHERE { <http://dbpedia.org/resource/Ahmed_III> <http://dbpedia.org/ontology/child> ?result . <http://dbpedia.org/resource/Mustafa_III> <http://dbpedia.org/ontology/successor> ?result . },"```sparql
# Find the successor of Mustafa III
SELECT ?successor WHERE {
  ?mustafa dbo:reignEnd ?end .
  ?succeeder dbo:reignStart ?start .
  FILTER (?start > ?end)
  
  # Ensure we are dealing with Mustafa III and his direct successor
  ?mustafa rdfs:label ""Mustafa III""@en .
}

# Find the children of Ahmed III
SELECT ?child WHERE {
  ?ahmed dbo:child ?child .
  ?ahmed rdfs:label ""Ahmed III""@en .
}
```",2,2,3,1,2,3,3,71,0,0,1,0,0.0,0
417,28,train,"Give me the spouse of the parent, that is a royalty, of Count Ingolf of Rosenborg and child of Alexandrine of Mecklenburg-Schwerin and child of Christian X of Denmark.",SELECT ?result WHERE { ?result <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Christian_X_of_Denmark> . ?v1 <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Count_Ingolf_of_Rosenborg> . ?result <http://dbpedia.org/ontology/spouse> ?v1 . ?result <http://dbpedia.org/ontology/parent> <http://dbpedia.org/resource/Alexandrine_of_Mecklenburg-Schwerin> . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. },"```sparql
SELECT ?spouse WHERE {
  # Find Count Ingolf of Rosenborg and his royal parent
  ?ingolf dbo:parent ?royalParent .
  ?ingolf rdfs:label ""Count Ingolf of Rosenborg""@en .

  # Ensure the parent is royalty
  ?royalParent rdf:type dbo:RoyalFamilyMember .

  # Find the spouse of this royal parent
  ?royalParent dbo:spouse ?spouse .

  # Identify Alexandrine of Mecklenburg-Schwerin and Christian X of Denmark as parents
  ?alexandrine rdfs:label ""Alexandrine of Mecklenburg-Schwerin""@en .
  ?christianX rdfs:label ""Christian X of Denmark""@en .

  # Ensure the child relationship is correct
  OPTIONAL {
    ?child dbo:parent ?alexandrine ;
           dbo:parent ?christianX .
  }
}
```",4,5,5,2,3,3,3,71,0,0,1,0,0.0,0
978,12,train,Give me the band member of the person born as Nicholas Bracegirdle and band member of Enya.,"SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/associatedMusicalArtist> <http://dbpedia.org/resource/Enya> . ?result <http://dbpedia.org/ontology/associatedMusicalArtist> ?v0 . ?v0 <http://dbpedia.org/property/birthName> ""Nicholas Bracegirdle""@en . }","```sparql
# Query for the band of Nicholas Bracegirdle
SELECT ?band WHERE {
  ?person foaf:name ""Nicholas Bracegirdle""@en .
  ?person dbo:memberOfBand ?band .
}

UNION

# Query for a band member associated with Enya
SELECT ?bandMember WHERE {
  ?enyaband dbo:member ?bandMember .
  ?enyaband rdfs:label ""Enya""@en .
}
```",3,3,4,2,2,3,2,20,0,0,1,0,0.0,0
935,7,train,Give me the death place of the awardee of Sitara-i-Imtiaz.,SELECT ?result WHERE { ?v1 <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/Sitara-i-Imtiaz> . ?v1 <http://dbpedia.org/ontology/deathPlace> ?result . },"```sparql
SELECT ?recipient ?deathPlace WHERE {
  # Find all recipients of the Sitara-i-Imtiaz award
  ?recipient dbo:award ""Sitara-i-Imtiaz""@en .
  
  # Retrieve the death place of each recipient, if available
  OPTIONAL { 
    ?recipient dbo:deathPlace ?deathPlace .
  }
}
```",2,2,3,2,1,3,2,20,0,0,18,0,0.0,0
216,3,train,Give me the mayor of Ros Bates.,SELECT ?result WHERE { <http://dbpedia.org/resource/Ros_Bates> <http://dbpedia.org/property/leader> ?result . },"```sparql
SELECT ?mayor WHERE {
  ?rosBates rdfs:label ""Ros Bates""@en .
  ?rosBates dbo:mayor ?mayor .
}
```",1,1,2,1,1,2,3,28,0,0,4,0,0.0,0
83,4,train,Give me the player in Greg Boehme and player in Albert Edward (soccer).,SELECT ?result WHERE { <http://dbpedia.org/resource/Greg_Boehme> <http://dbpedia.org/ontology/team> ?result . <http://dbpedia.org/resource/Albert_Edward_(soccer)> <http://dbpedia.org/ontology/team> ?result . },"```sparql
SELECT ?gregBoehmePosition ?albertEdwardPosition WHERE {
  # Find Greg Boehme's role in a soccer team
  ?gregBoehme dbo:playerInTeam ?team .
  ?gregBoehme rdfs:label ""Greg Boehme""@en .
  
  OPTIONAL { 
    ?gregBoehme dbo:position ?gregBoehmePosition .
  }
  
  # Find Albert Edward's role in a soccer team
  ?albertEdward dbo:playerInTeam ?team .
  ?albertEdward rdfs:label ""Albert Edward""@en .
  
  OPTIONAL {
    ?albertEdward dbo:position ?albertEdwardPosition .
  }
}
```",2,2,3,1,2,2,2,9,0,0,1,0,0.0,0
987,11,train,"Give me the birth place of the band, that is an artist and a musical artist, of Šako Polumenta.",SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. <http://dbpedia.org/resource/Šako_Polumenta> <http://dbpedia.org/ontology/associatedMusicalArtist> ?v1 . ?v1 <http://dbpedia.org/ontology/birthPlace> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. },"```sparql
SELECT ?bandBirthPlace WHERE {
  # Identify Šako Polumenta
  ?sako foaf:name ""Šako Polumenta""@en .
  
  # Find the band he is associated with
  ?sako dbo:member ?band .
  ?band a dbo:Band .

  # Get the birthplace of the band
  ?band dbo:birthPlace ?bandBirthPlace .
}
```",2,4,3,2,1,3,3,71,0,0,6,0,0.0,0
158,3,train,"Give me the award, that is a country, of Adelbert Cronkhite.",SELECT ?result WHERE { <http://dbpedia.org/resource/Adelbert_Cronkhite> <http://dbpedia.org/property/awards> ?result . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. },"```sparql
SELECT ?award WHERE {
  ?cronkhite dbo:awardsReceived ?award .
  ?cronkhite rdfs:label ""Adelbert Cronkhite""@en .
  
  # Ensure the award is also a country
  ?award rdf:type dbo:Award .
  ?award rdf:type dbo:Country .
}
```",1,2,2,1,1,3,2,20,0,0,1,0,0.0,0
274,4,train,Give me the designer of Tetris Classic.,SELECT ?result WHERE { <http://dbpedia.org/resource/Tetris_Classic> <http://dbpedia.org/property/designer> ?result . },"```sparql
SELECT ?designer WHERE {
  ?game rdfs:label ""Tetris Classic""@en .
  ?game dbo:creator ?designer .
}
```",1,1,2,1,1,2,3,28,0,0,3,0,0.0,0
445,25,train,Give me the entity in the award of George H. Cameron and death place of Patrick Moore.,SELECT ?result WHERE { <http://dbpedia.org/resource/Patrick_Moore> <http://dbpedia.org/ontology/deathPlace> ?result . <http://dbpedia.org/resource/George_H._Cameron> <http://dbpedia.org/property/awards> ?v1 . ?result <http://dbpedia.org/ontology/country> ?v1 . },"```sparql
SELECT ?award ?deathPlace WHERE {
  # Find George H. Cameron and his award
  ?georgeHcameron dbo:award ?award .
  ?georgeHcameron rdfs:label ""George H. Cameron""@en .

  # Find Patrick Moore and his death place
  ?patrickMoore dbo:deathPlace ?deathPlace .
  ?patrickMoore rdfs:label ""Patrick Moore""@en .
}
```",3,3,4,2,2,3,3,71,2,2,0,0.5,1.0,0.6666666666666666
158,11,train,"Give me the entity in the award, that is a country, of Adelbert Cronkhite and party of Théodore Steeg.",SELECT ?result WHERE { <http://dbpedia.org/resource/Théodore_Steeg> <http://dbpedia.org/ontology/party> ?result . <http://dbpedia.org/resource/Adelbert_Cronkhite> <http://dbpedia.org/property/awards> ?v2 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. ?result <http://dbpedia.org/ontology/country> ?v2 . },"```sparql
SELECT ?award ?country WHERE {
  # Find the award associated with Adelbert Cronkhite
  ?award dbo:recipient ?cronkhite .
  ?cronkhite rdfs:label ""Adelbert Cronkhite""@en .

  # Find the award associated with Théodore Steeg
  ?award dbo:recipient ?steeg .
  ?steeg rdfs:label ""Théodore Steeg""@en .

  # Identify the country related to this award
  ?award dbo:country ?country .
}
```",3,4,4,2,2,3,2,20,0,0,1,0,0.0,0
456,10,train,Give me the band of Alan Doyle and spouse of Danielle Spencer (Australian actress).,SELECT ?result WHERE { <http://dbpedia.org/resource/Danielle_Spencer_(Australian_actress)> <http://dbpedia.org/ontology/spouse> ?result . <http://dbpedia.org/resource/Alan_Doyle> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . },"```sparql
# Query for the band of Alan Doyle
SELECT ?band WHERE {
  ?alanDoyle dbo:memberOfBand ?band .
  ?alanDoyle rdfs:label ""Alan Doyle""@en .
}

UNION

# Query for the spouse of Danielle Spencer
SELECT ?spouse WHERE {
  ?danielleSpencer dbo:spouse ?spouse .
  ?danielleSpencer rdfs:label ""Danielle Spencer (actress)""@en .
}
```",2,2,3,1,2,3,3,71,0,0,1,0,0.0,0
124,13,train,"Give me the military force of the war, that is an event and a military conflict and a societal event, of Frank Rhodes (British Army officer).",SELECT ?result WHERE { <http://dbpedia.org/resource/Frank_Rhodes_(British_Army_officer)> <http://dbpedia.org/ontology/battle> ?v1 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?result <http://dbpedia.org/ontology/battle> ?v1 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. },"```sparql
SELECT ?militaryForce WHERE {
  # Find Frank Rhodes and his involvement in wars
  ?frankRhodes dbo:occupation ""British Army officer""@en .
  ?frankRhodes foaf:name ""Frank Rhodes""@en .

  # Identify events involving Frank Rhodes that are military conflicts and societal events
  ?event dbo:participant ?frankRhodes ;
         rdf:type dbo:MilitaryConflict, dbo:SocietalEvent .

  # Retrieve the military force involved in these events
  ?event dbo:militaryForce ?militaryForce .
}
```",2,5,3,2,1,3,3,71,0,0,1091,0,0.0,0
216,30,train,"Give me the player in Mario Ivanković and team of the person born, that is a sports manager and a soccer manager and a soccer player, on 1983-12-20 and player in Igor Bišćan.","SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsManager>. <http://dbpedia.org/resource/Igor_Bišćan> <http://dbpedia.org/ontology/team> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerManager>. <http://dbpedia.org/resource/Mario_Ivanković> <http://dbpedia.org/ontology/team> ?result . ?v1 <http://dbpedia.org/ontology/birthDate> ""1983-12-20""^^<http://www.w3.org/2001/XMLSchema#date> . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerPlayer>. ?result <http://dbpedia.org/ontology/coach> ?v1 . }","```sparql
SELECT ?player WHERE {
  # Find Mario Ivanković and his team
  ?mario dbo:birthName ""Mario Ivanković""@en .
  ?mario dbo:team ?team1 .

  # Find the person born on 1983-12-20 who is a sports manager, soccer manager, and player
  ?person dbo:birthDate ""1983-12-20""^^xsd:date ;
          rdf:type dbo:SportsManager ;
          rdf:type dbo:SoccerManager ;
          rdf:type dbo:SoccerPlayer .
  ?person dbo:team ?team2 .

  # Find Igor Bišćan and his team
  ?igor dbo:birthName ""Igor Bišćan""@en .
  ?igor dbo:team ?team3 .

  # Find a player common between Mario Ivanković's team and the person born on 1983-12-20's team
  ?player dbo:memberOfTeam ?team1 ;
          dbo:memberOfTeam ?team2 .

  # Ensure Igor Bišćan is connected through his team
  FILTER EXISTS { ?player dbo:memberOfTeam ?team3 }
}
```",4,7,5,2,3,3,3,71,0,0,1,0,0.0,0
365,4,train,Give me the reference to Полтавская губерния.,"SELECT ?result WHERE { ?result <http://xmlns.com/foaf/0.1/name> ""Полтавская губерния""@en . }","```sparql
SELECT ?entity ?label WHERE {
  ?entity rdfs:label ""Полтавская губерния""@ru .
  OPTIONAL { ?entity dbo:wikiPageRedirects ?redirect . }
  SERVICE wikibase:label { bd:serviceParam wikibase:language ""[AUTO_LANGUAGE],en,ru"". }
}
```",1,1,2,1,1,3,2,20,0,0,1,0,0.0,0
987,19,train,"Give me the birth place of the band, that is an artist and a musical artist, of Šako Polumenta and birth place of Moamer Kasumović.",SELECT ?result WHERE { ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. <http://dbpedia.org/resource/Moamer_Kasumović> <http://dbpedia.org/ontology/birthPlace> ?result . ?v2 <http://dbpedia.org/ontology/birthPlace> ?result . <http://dbpedia.org/resource/Šako_Polumenta> <http://dbpedia.org/ontology/associatedMusicalArtist> ?v2 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. },"```sparql
SELECT ?bandBirthPlace ?moamerBirthPlace WHERE {
  # Find the band associated with Šako Polumenta
  ?sako dbo:associatedBand ?band .
  ?sako rdfs:label ""Šako Polumenta""@en .

  # Get the birthplace of the band
  OPTIONAL { 
    ?band dbo:birthPlace ?bandBirthPlace .
  }

  # Find Moamer Kasumović and his birthplace
  ?moamer rdfs:label ""Moamer Kasumović""@en .
  ?moamer dbo:birthPlace ?moamerBirthPlace .
}
```",3,5,4,2,2,3,3,71,3,3,0,0.5,1.0,0.6666666666666666
433,6,train,"Give me the associated musical artist, that is an artist and a musical artist, of Scott LaFaro.",SELECT ?result WHERE { <http://dbpedia.org/resource/Scott_LaFaro> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. },"```sparql
SELECT DISTINCT ?associatedArtist WHERE {
  # Find Scott LaFaro's associated entities
  ?laFaro dbo:associatedWith ?associatedEntity .
  ?laFaro rdfs:label ""Scott LaFaro""@en .

  # Ensure the associated entity is an artist and a musical artist
  ?associatedEntity rdf:type dbpedia-owl:Artist ;
                   rdf:type dbpedia-owl:MusicalArtist .

  # Bind the associated entity to the variable for output
  BIND(?associatedEntity AS ?associatedArtist)
}
```",1,3,2,1,1,3,3,71,0,0,1,0,0.0,0
200,2,train,Give me the name of Angelcorpse.,SELECT ?result WHERE { <http://dbpedia.org/resource/Angelcorpse> <http://xmlns.com/foaf/0.1/name> ?result . },"```sparql
SELECT ?label WHERE {
  ?entity rdfs:label ""Angelcorpse""@en .
  ?entity rdfs:label ?label .
}
```",1,1,2,1,1,2,2,9,1,0,0,1.0,1.0,1.0
926,6,train,Give me the child of Ahmed III.,SELECT ?result WHERE { ?result <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Ahmed_III> . },"```sparql
SELECT ?child WHERE {
  # Find children of Ahmed III
  ?child dbo:parent ?ahmedIII .
  
  # Ensure the parent is Ahmed III
  ?ahmedIII rdfs:label ""Ahmed III""@en .
}
```",1,1,2,1,1,3,3,71,12,0,0,1.0,1.0,1.0
987,0,train,Give me the birth place of Dado Polumenta.,SELECT ?result WHERE { <http://dbpedia.org/resource/Dado_Polumenta> <http://dbpedia.org/ontology/birthPlace> ?result . },"```sparql
SELECT ?birthPlace WHERE {
  ?person rdfs:label ""Dado Polumenta""@en .
  ?person dbo:birthPlace ?birthPlace .
}
```",1,1,2,1,1,3,3,71,3,0,0,1.0,1.0,1.0
442,3,train,Give me the actor of This Side of Heaven.,SELECT ?result WHERE { <http://dbpedia.org/resource/This_Side_of_Heaven> <http://dbpedia.org/ontology/starring> ?result . },"```sparql
SELECT ?actor WHERE {
  ?movie rdfs:label ""This Side of Heaven""@en .
  ?movie dbo:starring ?actor .
}
```",1,1,2,1,1,2,2,9,5,0,0,1.0,1.0,1.0
236,1,train,Give me the party member of Democratic-Republican Party.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/party> <http://dbpedia.org/resource/Democratic-Republican_Party> . },"```sparql
SELECT ?person WHERE {
  ?person dbo:memberOf dbr:Democratic-Republican_Party .
}
```",1,1,2,1,1,3,2,20,0,0,590,0,0.0,0
978,11,train,"Give me the band member of the professional, that is a musical artist and an artist, in  and band member of Chicane (musician).","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/associatedMusicalArtist> ?v2 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. ?v2 <http://dbpedia.org/property/occupation> """"@en . ?result <http://dbpedia.org/ontology/associatedMusicalArtist> <http://dbpedia.org/resource/Chicane_(musician)> . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. }","```sparql
SELECT ?bandMember WHERE {
  # Find a professional who is both a musical artist and an artist
  OPTIONAL {
    ?person dbo:occupation dbp:musician .
    ?person dbo:occupation dbp:artist .
  }

  # Find band members of Chicane (musician)
  ?chicane dbo:bandMember ?bandMember .
  ?chicane rdfs:label ""Chicane""@en .

  # Return the band member
}
```",3,5,4,2,2,3,2,20,0,0,2,0,0.0,0
267,9,train,"Give me the player, that is a soccer club, in the manager of 2020–21 Tractor S.C. season.",SELECT ?result WHERE { ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerClub>. ?v0 <http://dbpedia.org/ontology/team> ?result . <http://dbpedia.org/resource/2020–21_Tractor_S.C._season> <http://dbpedia.org/ontology/manager> ?v0 . },"```sparql
SELECT ?manager ?club WHERE {
  # Find Tractor S.C. and its manager during the 2020–21 season
  ?team rdfs:label ""Tractor S.C.""@en .
  ?team dbo:season ?season .
  ?season dbo:startDate ?start .
  ?season dbo:endDate ?end .
  FILTER (?start <= ""2020-08-01""^^xsd:date && ?end >= ""2021-07-31""^^xsd:date)
  ?team dbo:manager ?manager .

  # Check if the manager is also a player for any club
  OPTIONAL {
    ?manager dbo:playerForTeam ?club .
  }
}
```",2,3,3,2,1,3,2,20,0,0,31,0,0.0,0
987,29,train,Give me the birth place of Dado Polumenta and entity in Montenegro and birth place of the actor of All for Free.,SELECT ?result WHERE { <http://dbpedia.org/resource/All_for_Free> <http://dbpedia.org/property/starring> ?v3 . <http://dbpedia.org/resource/Dado_Polumenta> <http://dbpedia.org/ontology/birthPlace> ?result . ?result <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Montenegro> . ?v3 <http://dbpedia.org/ontology/birthPlace> ?result . },"```sparql
# Query to get the birth place of Dado Polumenta and an entity in Montenegro related to him
SELECT ?birthPlace ?entityInMontenegro WHERE {
  # Find Dado Polumenta's birthplace
  ?dadoPolumenta dbo:birthPlace ?birthPlace .
  ?dadoPolumenta rdfs:label ""Dado Polumenta""@en .

  # Find an entity in Montenegro related to Dado Polumenta
  OPTIONAL {
    ?relatedEntity dbo:location ?montenegroLocation .
    ?relatedEntity dbo:associatedWith ?dadoPolumenta .
    ?montenegroLocation rdfs:label ""Montenegro""@en .
    BIND(?relatedEntity AS ?entityInMontenegro)
  }
}

# Query to get the birth place of the actor of ""All for Free""
SELECT DISTINCT ?actorBirthPlace WHERE {
  # Find actors associated with the film ""All for Free""
  ?film dbo:starring ?actor .
  ?film rdfs:label ""All for Free""@en .

  # Get the birthplace of these actors
  ?actor dbo:birthPlace ?actorBirthPlace .
}
```",4,4,5,2,3,3,3,71,0,0,1,0,0.0,0
417,23,train,"Give me the spouse of the parent, that is a royalty, of the child of Knud, Hereditary Prince of Denmark.","SELECT ?result WHERE { ?v0 <http://dbpedia.org/ontology/child> ?v2 . ?result <http://dbpedia.org/ontology/spouse> ?v0 . ?v2 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Knud,_Hereditary_Prince_of_Denmark> . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. }","```sparql
SELECT ?spouse WHERE {
  # Find Knud and his child
  ?knud dbo:child ?child .
  ?knud rdfs:label ""Knud, Hereditary Prince of Denmark""@en .

  # Ensure the parent of this child is Knud
  ?child dbo:parent ?knud .

  # Retrieve Knud's spouse who is royalty
  ?knud dbo:spouse ?spouse .
  FILTER (regex(str(?spouse), ""royalty"", ""i""))
}
```",3,4,4,3,1,3,3,71,0,0,2,0,0.0,0
582,9,train,Give me the player in Kazuaki Nagasawa and reference to Japan.,"SELECT ?result WHERE { <http://dbpedia.org/resource/Kazuaki_Nagasawa> <http://dbpedia.org/ontology/team> ?result . ?result <http://xmlns.com/foaf/0.1/name> ""Japan""@en . }","```sparql
SELECT ?playerRole ?referenceToJapan WHERE {
  # Identify Kazuaki Nagasawa and his player role
  ?nagasawa rdfs:label ""Kazuaki Nagasawa""@en .
  
  OPTIONAL { 
    ?nagasawa dbo:occupation ?playerRole .
  }
  
  # Establish reference to Japan
  OPTIONAL {
    ?nagasawa dbo:nationality ?referenceToJapan .
    FILTER (regex(str(?referenceToJapan), ""Japan"", ""i""))
  }
}
```",2,2,3,1,2,3,3,71,0,0,1,0,0.0,0
826,32,train,"Give me the successor of the child, that is a royalty, of Louis I, Grand Duke of Hesse and spouse of the child of Johann Heinrich Appel.","SELECT ?result WHERE { ?v3 <http://dbpedia.org/ontology/successor> ?result . <http://dbpedia.org/resource/Louis_I,_Grand_Duke_of_Hesse> <http://dbpedia.org/ontology/child> ?v3 . ?v1 <http://dbpedia.org/property/father> ""Johann Heinrich Appel""@en . ?v1 <http://dbpedia.org/ontology/spouse> ?result . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. }","```sparql
SELECT ?successor WHERE {
  # Identify Louis I, Grand Duke of Hesse
  ?louis1 dbo:parent ?child .
  ?louis1 rdfs:label ""Louis I, Grand Duke of Hesse""@en .

  # Find a child of Louis I who is royalty
  ?child rdf:type dbo:RoyalFamilyMember .

  # Identify children of Johann Heinrich Appel and their spouses
  ?appelChild dbo:parent ?johannHeinrichAppel .
  ?spouse dbo:marrigePartner ?appelChild .
  ?johannHeinrichAppel rdfs:label ""Johann Heinrich Appel""@en .

  # Check if the royal child from Louis I's lineage is connected to Johann Heinrich Appel's family
  OPTIONAL {
    ?child = ?spouse .
  }

  # Find the successor of the identified royal child
  ?child dbo:successor ?successor .
}
```",4,5,5,2,2,3,3,71,0,0,1,0,0.0,0
606,10,train,"Who is the alumnus of the figure known, that is a university and a sports league and an educational institution, as Penn Quakers?",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/almaMater> ?v0 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/EducationalInstitution>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsLeague>. ?v0 <http://dbpedia.org/property/nickname> <http://dbpedia.org/resource/Penn_Quakers> . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/University>. },"```sparql
SELECT ?alumnus WHERE {
  ?university rdfs:label ""University of Pennsylvania""@en .
  ?university dbo:alumni ?alumnus .
  
  # Filter for a well-known alumnus (e.g., Benjamin Franklin)
  FILTER regex(str(?alumnus), ""Benjamin Franklin"", ""i"")
}
```",2,5,3,2,1,3,2,20,0,0,1114,0,0.0,0
978,14,train,Give me the band member of the person born as the name of Chicane (musician).,SELECT ?result WHERE { ?v0 <http://dbpedia.org/property/birthName> ?v2 . <http://dbpedia.org/resource/Chicane_(musician)> <http://xmlns.com/foaf/0.1/givenName> ?v2 . ?result <http://dbpedia.org/ontology/associatedMusicalArtist> ?v0 . },"```sparql
SELECT ?bandMember WHERE {
  # Find Chicane's birth name
  ?chicane dbo:birthName ?birthName .
  ?chicane rdfs:label ""Chicane""@en .

  # Find band members associated with the person having that birth name
  ?person dbo:birthName ?birthName .
  ?bandMember dbo:member ?person .
}
```",3,3,4,3,1,3,2,20,0,0,2,0,0.0,0
527,5,train,"Give me the work, that is a work and a book, of Tom Baker.",SELECT ?result WHERE { ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Book>. ?result <http://dbpedia.org/property/author> <http://dbpedia.org/resource/Tom_Baker> . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. },"```sparql
SELECT ?work WHERE {
  # Identify Tom Baker
  ?tomBaker dbo:birthName ""Tom Baker""@en .
  
  # Find works associated with Tom Baker
  ?work dbo:creator ?tomBaker .
  
  # Ensure the work is classified as both a 'work' and a 'book'
  ?work rdf:type dbp:Book ;
        rdf:type dbc:Works .
}
```",1,3,2,1,1,3,2,20,0,0,1,0,0.0,0
987,9,train,Give me the birth place of Dado Polumenta and birth place of Moamer Kasumović.,SELECT ?result WHERE { <http://dbpedia.org/resource/Moamer_Kasumović> <http://dbpedia.org/ontology/birthPlace> ?result . <http://dbpedia.org/resource/Dado_Polumenta> <http://dbpedia.org/ontology/birthPlace> ?result . },"```sparql
SELECT ?person ?label ?birthPlaceLabel WHERE {
  # Find Dado Polumenta and his birthplace
  OPTIONAL {
    ?person rdfs:label ""Dado Polumenta""@en .
    ?person dbo:birthPlace ?birthPlace .
    ?birthPlace rdfs:label ?birthPlaceLabel .
  }
  
  # Find Moamer Kasumović (Slobodan Milošević) and his birthplace
  OPTIONAL {
    ?person rdfs:label ""Moamer Kasumović""@en .
    ?person dbo:birthPlace ?birthPlace .
    ?birthPlace rdfs:label ?birthPlaceLabel .
  }
  
  # Ensure the person is distinct in each block
  FILTER(?person != ?person)
}
```",2,2,3,1,2,3,3,71,0,0,3,0,0.0,0
341,6,train,"Give me the writer of the work, that is a work and an album, of Serrano.","SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Album>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?v1 <http://dbpedia.org/property/writer> ""Serrano""@en . ?v1 <http://dbpedia.org/property/writer> ?result . }","```sparql
SELECT ?writer WHERE {
  ?serrano dbo:creator ?writer .
  ?serrano rdfs:label ""Serrano""@en .
  
  # Ensure it is both a work and an album
  ?serrano rdf:type/rdfs:subClassOf* dbp:Work ;
           rdf:type/rdfs:subClassOf* dbp:Album .

}
```",2,4,3,2,1,2,2,9,0,0,283,0,0.0,0
892,17,train,"Give me the administration, that is Italian and a region and a settlement and an administrative region, of the party, that is a political party and an organisation, of Andrea Cozzolino.",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Italy>. ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/AdministrativeRegion>. ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Region>. <http://dbpedia.org/resource/Andrea_Cozzolino> <http://dbpedia.org/ontology/party> ?v0 . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. ?result <http://dbpedia.org/property/leaderParty> ?v0 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/PoliticalParty>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. },"```sparql
SELECT ?administration WHERE {
  # Find the political party of Andrea Cozzolino
  ?cozzolino dbo:party ?party .
  ?cozzolino rdfs:label ""Andrea Cozzolino""@en .

  # Ensure the party is a political party and an organization
  ?party rdf:type dbpedia-owl:PoliticalParty ;
         rdf:type dbpedia-owl:Organization .

  # Find the administration related to this party
  ?administration dbo:administrativeRegion ?party .
  
  # Filter for Italian regions that are settlements and administrative regions
  ?administration rdf:type dbpedia-owl:Region ;
                  rdf:type dbpedia-owl:Settlement ;
                  rdf:type dbpedia-owl:AdministrativeRegion ;
                  dbo:country dbr:Italy .
}
```",2,8,3,2,1,3,3,71,0,0,14,0,0.0,0
41,14,train,Give me the party of the person born as David Declan Costello and party of Mark Durkan.,"SELECT ?result WHERE { ?v2 <http://dbpedia.org/ontology/party> ?result . ?v2 <http://dbpedia.org/property/birthName> ""David Declan Costello""@en . <http://dbpedia.org/resource/Mark_Durkan> <http://dbpedia.org/ontology/party> ?result . }","```sparql
SELECT ?costelloParty ?durkanParty WHERE {
  # Find David Declan Costello's political party
  ?costello dbo:partyAffiliation ?costelloParty .
  ?costello rdfs:label ""David Declan Costello""@en .

  # Find Mark Durkan's political party
  ?durkan dbo:partyAffiliation ?durkanParty .
  ?durkan rdfs:label ""Mark Durkan""@en .
}
```",3,3,4,2,2,2,3,28,0,0,1,0,0.0,0
715,3,train,Who is the native of Morocco?,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Morocco> . },"```sparql
SELECT ?person WHERE {
  ?person dbo:birthPlace dbr:Morocco .
}
```",1,1,2,1,1,3,3,71,868,0,0,1.0,1.0,1.0
18,9,train,"Give me the parent of Liza Huber and alumnus of Marymount College, Tarrytown.","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/almaMater> <http://dbpedia.org/resource/Marymount_College,_Tarrytown> . ?result <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Liza_Huber> . }","```sparql
SELECT ?individual WHERE {
  # Find parent(s) of Liza Huber
  ?lizaHuber dbo:parent ?individual .
  ?lizaHuber rdfs:label ""Liza Huber""@en .

  # Find alumni of Marymount College, Tarrytown
  ?alumnus dbo:almaMater ?marymountCollege .
  ?marymountCollege rdfs:label ""Marymount College, Tarrytown""@en .

  # Match the individual who is both a parent and an alumnus
  FILTER (?individual = ?alumnus)
}
```",2,2,3,1,2,2,3,28,1,0,0,1.0,1.0,1.0
554,9,train,Give me the administration of the party member of Independent politician.,SELECT ?result WHERE { ?result <http://dbpedia.org/property/leader> ?v0 . ?v0 <http://dbpedia.org/ontology/party> <http://dbpedia.org/resource/Independent_politician> . },"```sparql
SELECT ?politician ?administration WHERE {
  # Find an independent politician
  ?politician dbo:occupation dbc:Independent_politicians .
  
  # Check if they have been part of any administration
  OPTIONAL { 
    ?politician dbo:memberOf ?administration .
  }
}
```",2,2,3,2,1,3,2,20,0,0,905,0,0.0,0
507,35,train,Give me the professional in the profession of Guy Ferland and spouse of the person born as Anne Voase Coates.,"SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/spouse> ?v2 . ?v2 <http://dbpedia.org/property/birthName> ""Anne Voase Coates""@en . ?result <http://dbpedia.org/property/occupation> ?v1 . <http://dbpedia.org/resource/Guy_Ferland> <http://dbpedia.org/property/occupation> ?v1 . }","```sparql
SELECT ?profession ?spouse WHERE {
  # Find Guy Ferland's profession
  ?ferland dbo:occupation ?profession .
  ?ferland rdfs:label ""Guy Ferland""@en .

  # Find Anne Voase Coates and her spouse
  ?anne foaf:name ""Anne Voase Coates"" .
  ?anne dbo:spouse ?spouse .

  # Ensure the spouse shares the same profession as Guy Ferland
  ?spouse dbo:occupation ?profession .
}
```",4,4,5,2,2,3,3,71,0,0,1,0,0.0,0
606,13,train,"Give me the figure known as the nickname of the figure known, that is a settlement, as Barb City.","SELECT ?result WHERE { ?result <http://dbpedia.org/property/nickname> ?v1 . ?v0 <http://dbpedia.org/property/nickname> ""Barb City""@en . ?v0 <http://dbpedia.org/property/nickname> ?v1 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. }","```sparql
SELECT ?settlement WHERE {
  ?settlement dbo:nickname ""Barb City""@en .
  ?settlement rdfs:label ?officialName .
}
```",3,4,4,3,1,3,2,20,0,0,1,0,0.0,0
192,14,train,Give me the child of the child of the parent of Anna of Hungary (Byzantine empress).,SELECT ?result WHERE { ?v0 <http://dbpedia.org/property/father> ?v2 . ?result <http://dbpedia.org/ontology/parent> ?v0 . ?v2 <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Anna_of_Hungary_(Byzantine_empress)> . },"```sparql
SELECT ?grandchild WHERE {
  # Step 1: Identify Anna of Hungary and her parent
  ?anna dbo:parent ?parent .
  ?anna rdfs:label ""Anna of Hungary (Byzantine empress)""@en .

  # Step 2: Find a child of this parent
  ?sibling dbo:parent ?parent .
  
  # Step 3: Determine the child of that sibling
  ?siblingChild dbo:parent ?sibling .
  
  # Return the grandchild (child of the child)
  ?grandchild dbo:parent ?siblingChild .
}
```",3,3,4,3,1,3,2,20,0,0,7,0,0.0,0
417,36,train,"Give me the spouse of Princess Caroline-Mathilde of Denmark and child of the child, that is a royalty, of the parent, that is a royalty, of Alexandrine of Mecklenburg-Schwerin.",SELECT ?result WHERE { <http://dbpedia.org/resource/Alexandrine_of_Mecklenburg-Schwerin> <http://dbpedia.org/ontology/parent> ?v0 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?result <http://dbpedia.org/ontology/parent> ?v1 . ?result <http://dbpedia.org/ontology/spouse> <http://dbpedia.org/resource/Princess_Caroline-Mathilde_of_Denmark> . ?v1 <http://dbpedia.org/property/father> ?v0 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. },"```sparql
SELECT ?grandchild WHERE {
  # Find spouse of Princess Caroline-Mathilde of Denmark
  ?carolineMathilde dbo:spouse ?spouse .
  ?carolineMathilde rdfs:label ""Princess Caroline-Mathilde of Denmark""@en .

  # Find a child of this spouse who is royalty
  OPTIONAL { 
    ?spouse dbo:child ?child .
    ?child rdf:type dbo:Monarch .
  }

  # Identify Alexandrine of Mecklenburg-Schwerin's royal parent
  ?alexandrine dbo:parent ?royalParent .
  ?alexandrine rdfs:label ""Alexandrine of Mecklenburg-Schwerin""@en .
  FILTER (regex(str(?royalParent), ""Royal"", ""i""))

  # Find a child of this royal parent who is royalty
  OPTIONAL {
    ?royalParent dbo:child ?parentChild .
    ?parentChild rdf:type dbo:Monarch .
  }

  # Identify the grandchild (child of the child) who is royalty
  OPTIONAL {
    ?parentChild dbo:child ?grandchild .
    FILTER (regex(str(?grandchild), ""Royal"", ""i""))
  }
}
```",4,6,5,3,2,3,3,71,0,0,1,0,0.0,0
93,2,train,Give me the headquarter of Clam Cove Pictograph Site.,SELECT ?result WHERE { <http://dbpedia.org/resource/Clam_Cove_Pictograph_Site> <http://dbpedia.org/ontology/location> ?result . },"```sparql
SELECT ?headquarter WHERE {
  ?site rdfs:label ""Clam Cove Pictograph Site""@en .
  OPTIONAL { 
    ?site dbo:location ?headquarter .
  }
}
```",1,1,2,1,1,3,2,20,1,0,0,1.0,1.0,1.0
465,26,train,"Give me the spouse of the child, that is a royalty, of the parent of Elizabeth of Austria (1526–1545).",SELECT ?result WHERE { ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v1 <http://dbpedia.org/ontology/child> ?v2 . ?result <http://dbpedia.org/ontology/spouse> ?v2 . ?v1 <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Elizabeth_of_Austria_(1526–1545)> . },"```sparql
SELECT ?spouse WHERE {
  # Step 1: Identify Elizabeth of Austria (1526–1545) and her parent
  ?elizabeth dbo:parent ?parent .
  ?elizabeth rdfs:label ""Elizabeth of Austria (1526–1545)""@en .

  # Step 2: Find a child of this parent who is royalty
  OPTIONAL {
    ?child dbo:parent ?parent .
    FILTER (regex(str(?child), ""Royal"", ""i"")) # Assuming the label contains 'Royal' for simplicity
  }

  # Step 3: Identify the spouse of this royal child
  OPTIONAL {
    ?child dbo:spouse ?spouse .
  }
}
```",3,4,4,3,1,3,3,71,5,59922,2,8.343484572897024e-05,0.7142857142857143,0.00016685020188874426
456,20,train,Give me the spouse of Danielle Spencer (Australian actress) and professional in the alter ego of The Shadow.,SELECT ?result WHERE { ?result <http://dbpedia.org/property/occupation> ?v2 . <http://dbpedia.org/resource/Danielle_Spencer_(Australian_actress)> <http://dbpedia.org/ontology/spouse> ?result . <http://dbpedia.org/resource/The_Shadow> <http://dbpedia.org/property/alterEgo> ?v2 . },"```sparql
SELECT ?spouse ?shadowProfession WHERE {
  # Find the spouse of Danielle Spencer (Australian actress)
  ?danielle a dbo:Actor ;
            rdfs:label ""Danielle Spencer""@en .
  OPTIONAL { 
    ?danielle dbo:spouse ?spouse .
  }

  # Identify the professional role associated with The Shadow
  ?shadow a dbo:FictionalCharacter ;
          rdfs:label ""The Shadow""@en .
  OPTIONAL {
    ?shadow dbo:profession ?shadowProfession .
  }
}
```",3,3,4,2,2,3,3,71,0,0,1,0,0.0,0
274,15,train,"Give me the band member of the person born, that is a musical artist, as John Birks Gillespie and associated musical artist of Cecil Taylor.","SELECT ?result WHERE { <http://dbpedia.org/resource/Cecil_Taylor> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?v1 <http://dbpedia.org/property/birthName> ""John Birks Gillespie""@en . ?result <http://dbpedia.org/ontology/associatedMusicalArtist> ?v1 . }","```sparql
SELECT ?bandMember WHERE {
  # Find Dizzy Gillespie's band members
  ?gillespie dbo:birthName ""John Birks Gillespie""@en .
  ?gillespie dbo:member ?bandMember .

  # Check if the band member is associated with Cecil Taylor
  OPTIONAL { 
    ?taylor dbo:birthName ""Cecil Taylor""@en .
    ?taylor dbo:associatedMusicalArtist ?bandMember .
  }
}
```",3,4,4,2,2,2,3,28,0,0,1,0,0.0,0
456,0,train,Give me the spouse of Danielle Spencer (Australian actress).,SELECT ?result WHERE { <http://dbpedia.org/resource/Danielle_Spencer_(Australian_actress)> <http://dbpedia.org/ontology/spouse> ?result . },"```sparql
SELECT ?spouse WHERE {
  ?person rdfs:label ""Danielle Spencer""@en .
  ?person dbo:spouse ?spouse .
}
```",1,1,2,1,1,3,3,71,0,0,1,0,0.0,0
933,2,train,Give me the band of The Ramong Sound.,SELECT ?result WHERE { <http://dbpedia.org/resource/The_Ramong_Sound> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . },"```sparql
SELECT ?band WHERE {
  ?ramones rdfs:label ""The Ramones""@en .
  ?ramones rdf:type ?type .
  FILTER (regex(str(?type), ""Band"", ""i"") || regex(str(?type), ""MusicalGroup"", ""i""))
  BIND(?ramones AS ?band)
}
```",1,1,2,1,1,3,3,71,0,1,4,0.0,0.0,0
36,17,train,Give me the person born as Ayo Makun and person born in the birth year of Deanne Bray.,"SELECT ?result WHERE { <http://dbpedia.org/resource/Deanne_Bray> <http://dbpedia.org/ontology/birthYear> ?v2 . ?result <http://dbpedia.org/property/birthName> ""Ayo Makun""@en . ?result <http://dbpedia.org/ontology/birthYear> ?v2 . }","```sparql
SELECT ?ayoMakun ?deanneBrayYearPerson WHERE {
  # Find Ayo Makun by birth name
  ?ayoMakun dbo:birthName ""Ayo Makun""@en .
  
  # Get the birth year of Deanne Bray
  ?deanneBray dbo:birthYear ?year .
  ?deanneBray rdfs:label ""Deanne Bray""@en .

  # Find a person born in the same year as Deanne Bray
  ?person dbo:birthYear ?year .
  
  FILTER (?ayoMakun != ?person)
}
```",3,3,4,2,2,2,3,28,1,0,0,1.0,1.0,1.0
417,37,train,"Give me the child of the father of the leader, that is a royalty, of Colony of Greenland and child of Alexandrine of Mecklenburg-Schwerin.",SELECT ?result WHERE { <http://dbpedia.org/resource/Colony_of_Greenland> <http://dbpedia.org/property/leader> ?v0 . ?result <http://dbpedia.org/property/father> ?v3 . ?result <http://dbpedia.org/ontology/parent> <http://dbpedia.org/resource/Alexandrine_of_Mecklenburg-Schwerin> . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v0 <http://dbpedia.org/property/father> ?v3 . },"```sparql
SELECT ?commonChild WHERE {
  # Find the leader of Colony of Greenland
  ?leader dbo:administrativeUnit dbpedia:Greenland .
  
  # Find father of this leader
  ?leader dbo:parent ?father .

  # Find child of the father who is royalty
  ?child dbo:parent ?father .
  FILTER (regex(str(?child), ""Royal"", ""i""))

  # Find Alexandrine of Mecklenburg-Schwerin and her children
  ?alexandrine rdfs:label ""Alexandrine of Mecklenburg-Schwerin""@en .
  ?alexandrine dbo:child ?child2 .

  # Identify the common child
  FILTER (?child = ?child2)
}
```",4,5,5,3,2,3,3,71,0,0,2,0,0.0,0
976,18,train,Give me the office of Naci Bostancı and office of Meral Akşener and office of Mustafa Şentop.,SELECT ?result WHERE { <http://dbpedia.org/resource/Naci_Bostancı> <http://dbpedia.org/property/office> ?result . <http://dbpedia.org/resource/Mustafa_Şentop> <http://dbpedia.org/property/office> ?result . <http://dbpedia.org/resource/Meral_Akşener> <http://dbpedia.org/property/office> ?result . },"```sparql
SELECT ?person ?name ?office WHERE {
  # Find Naci Bostancı and his office
  OPTIONAL { 
    ?naci dbo:name ""Naci Bostancı""@en .
    ?naci rdfs:label ?name .
    ?naci dbo:office ?office .
  }
  
  # Find Meral Akşener and her office
  OPTIONAL {
    ?meral dbo:name ""Meral Akşener""@en .
    ?meral rdfs:label ?name .
    ?meral dbo:office ?office .
  }

  # Find Mustafa Şentop and his office
  OPTIONAL {
    ?mustafa dbo:name ""Mustafa Şentop""@en .
    ?mustafa rdfs:label ?name .
    ?mustafa dbo:office ?office .
  }
}
```",3,3,4,1,3,3,3,71,0,0,1,0,0.0,0
216,33,train,"Give me the player in Igor Bišćan and player in the coach, that is a soccer player and a sports manager and a soccer manager, of the player, that is an organisation and a sports club and a soccer club, in Džemal Berberović.",SELECT ?result WHERE { ?v0 <http://dbpedia.org/ontology/coach> ?v3 . <http://dbpedia.org/resource/Igor_Bišćan> <http://dbpedia.org/ontology/team> ?result . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerManager>. ?v3 <http://dbpedia.org/ontology/team> ?result . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerClub>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. <http://dbpedia.org/resource/Džemal_Berberović> <http://dbpedia.org/ontology/team> ?v0 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsManager>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsClub>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerPlayer>. },"```sparql
SELECT ?coach WHERE {
  # Find Igor Bišćan's coach who is also a soccer player
  ?bišćan dbo:player ?coach .
  ?bišćan rdfs:label ""Igor Bišćan""@en .

  # Ensure the coach is a soccer player
  ?coach dbo:soccerPlayer true .

  # Check if the coach is a sports manager and a soccer manager
  OPTIONAL { ?coach dbo:sportsManager true . }
  OPTIONAL { ?coach dbo:soccerManager true . }

  # Find Džemal Berberović's associated organization, which must be an organization, sports club, and soccer club
  ?berberović dbo:organization ?org .
  ?berberović rdfs:label ""Džemal Berberović""@en .

  FILTER (?org dbo:sportsClub true && ?org dbo:soccerClub true)
}
```",4,10,5,3,2,3,3,71,0,0,3,0,0.0,0
5,2,train,Give me the award of Renata Adler.,SELECT ?result WHERE { <http://dbpedia.org/resource/Renata_Adler> <http://dbpedia.org/property/awards> ?result . },"```sparql
SELECT ?award WHERE {
  ?person rdfs:label ""Renata Adler""@en .
  ?person dbo:award ?award .
}
```",1,1,2,1,1,3,2,20,0,0,1,0,0.0,0
443,13,train,Give me the birthplace of Ulf Lundell and landmark at elevation of the award of William Shepherd.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/elevation> ?v1 . <http://dbpedia.org/resource/Ulf_Lundell> <http://dbpedia.org/ontology/birthPlace> ?result . <http://dbpedia.org/resource/William_Shepherd> <http://dbpedia.org/property/awards> ?v1 . },"```sparql
# Query for Ulf Lundell's birthplace
SELECT ?birthPlace WHERE {
  ?ulfdbo:birthPlace ?birthPlace .
  ?ulf rdfs:label ""Ulf Lundell""@en .
}

# Query to find the award received by William Shepherd and its elevation
SELECT ?award ?elevation WHERE {
  ?william dbo:awardReceived ?award .
  ?william rdfs:label ""William Shepherd""@en .
  
  OPTIONAL { 
    ?award dbo:elevation ?elevation .
  }
}

# Query to find a landmark at the identified elevation
SELECT ?landmark WHERE {
  ?landmark dbo:elevation ?elevation .
  FILTER(?elevation = <calculated_elevation>) # Replace with actual elevation value from previous query
}
```",3,3,4,2,2,2,3,28,0,0,1,0,0.0,0
122,2,train,Who is the band of Gift of Gab (rapper)?,SELECT ?result WHERE { <http://dbpedia.org/resource/Gift_of_Gab_(rapper)> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . },"```sparql
SELECT ?band WHERE {
  ?artist foaf:name ""Gift of Gab""@en .
  ?artist dbo:memberOfBand ?band .
}
```",1,1,2,1,1,2,2,9,0,0,4,0,0.0,0
212,6,train,Give me the birthplace of the professional in .,"SELECT ?result WHERE { ?v0 <http://dbpedia.org/ontology/birthPlace> ?result . ?v0 <http://dbpedia.org/property/occupation> """"@en . }","```sparql
SELECT ?birthPlace WHERE {
  # Identify the professional in the specific field
  ?professional dbo:field ?specifiedField .
  ?professional rdfs:label ""Professional Name""@en .

  # Find the birthplace of the identified professional
  ?professional dbo:birthPlace ?birthPlace .
}
```",2,2,3,2,1,2,2,9,0,0,13346,0,0.0,0
965,24,train,"Give me the parent of George Mountbatten, 2nd Marquess of Milford Haven and parent of the child, that is a royalty, of Prince Louis of Battenberg.","SELECT ?result WHERE { ?v2 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Prince_Louis_of_Battenberg> . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. <http://dbpedia.org/resource/George_Mountbatten,_2nd_Marquess_of_Milford_Haven> <http://dbpedia.org/ontology/parent> ?result . ?v2 <http://dbpedia.org/ontology/parent> ?result . }","```sparql
SELECT ?parentOfGeorge ?parentOfRoyalChild WHERE {
  # Find George Mountbatten, 2nd Marquess of Milford Haven and his parent
  ?george dbo:parent ?parentOfGeorge .
  ?george rdfs:label ""George Mountbatten, 2nd Marquess of Milford Haven""@en .

  # Find children of Prince Louis of Battenberg who are royalty
  OPTIONAL {
    ?louis dbo:child ?royalChild .
    ?louis rdfs:label ""Prince Louis of Battenberg""@en .
    FILTER (regex(str(?royalChild), ""Royal"", ""i""))
  }

  # Find parent of the royal child identified above
  OPTIONAL {
    ?royalChild dbo:parent ?parentOfRoyalChild .
    FILTER (regex(str(?royalChild), ""Royal"", ""i""))
  }
}
```",3,4,4,2,2,3,3,71,2,34,0,0.05555555555555555,1.0,0.10526315789473684
5,11,train,"Give me the birthplace of the person born, that is a politician, as  and entity in Canada.","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Canada> . ?v0 <http://dbpedia.org/ontology/birthPlace> ?result . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v0 <http://dbpedia.org/property/birthName> """"@en . }","```sparql
SELECT ?person ?birthPlace WHERE {
  # Find persons who are politicians and associated with Canada
  ?person dbo:occupation dbc:Canadian_Politicians .
  
  # Ensure the person is an entity in Canada
  ?person dbo:country dbr:Canada .

  # Retrieve the birthplace of these individuals
  ?person dbo:birthPlace ?birthPlace .
}
```",3,4,4,2,2,3,2,20,0,0,2,0,0.0,0
459,8,train,"Give me the governor of the death place, that is a settlement, of Cliff Roquemore.",SELECT ?result WHERE { ?v1 <http://dbpedia.org/property/governor> ?result . <http://dbpedia.org/resource/Cliff_Roquemore> <http://dbpedia.org/ontology/deathPlace> ?v1 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. },"```sparql
SELECT ?governor WHERE {
  # Find Cliff Roquemore and his death place
  ?roquemore dbo:deathPlace ?deathPlace .
  ?roquemore rdfs:label ""Cliff Roquemore""@en .

  # Ensure the death place is a settlement
  ?deathPlace rdf:type dbo:Settlement .

  # Find the governor of that settlement
  ?deathPlace dbo:governor ?governor .
}
```",2,3,3,2,1,2,3,28,0,0,2,0,0.0,0
232,0,train,Give me the artistic movement of Ella Cheever Thayer.,SELECT ?result WHERE { <http://dbpedia.org/resource/Ella_Cheever_Thayer> <http://dbpedia.org/ontology/movement> ?result . },"```sparql
SELECT ?artisticMovement WHERE {
  ?person rdfs:label ""Ella Cheever Thayer""@en .
  OPTIONAL { 
    ?person dbo:artMovement ?artisticMovement .
  }
}
```",1,1,2,1,1,2,2,9,0,0,1,0,0.0,0
98,14,train,Give me the region of Philippine Standard Time and birth place of the person born as Paolo Elito M. Ballesteros IV.,"SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/timeZone> <http://dbpedia.org/resource/Philippine_Standard_Time> . ?v2 <http://dbpedia.org/ontology/birthPlace> ?result . ?v2 <http://dbpedia.org/property/birthName> ""Paolo Elito M. Ballesteros IV""@en . }","```sparql
# Query to find the region of Philippine Standard Time
SELECT ?region WHERE {
  ?timeZone dcterms:isPartOf ?country .
  ?timeZone rdfs:label ""Philippine Standard Time""@en .
  ?region dbo:timezone ?timeZone ;
          rdfs:label ?regionLabel .
  FILTER (lang(?regionLabel) = 'en')
}

# Query to find the birth place of Paolo Elito M. Ballesteros IV
SELECT ?birthPlace WHERE {
  ?person foaf:name ""Paolo Elito M. Ballesteros IV""@en ;
          dbo:birthPlace ?birthPlace .
}
```",3,3,4,2,2,2,3,28,0,0,2,0,0.0,0
456,3,train,"Give me the movie, that is a work and a television show, with Ross Newton.",SELECT ?result WHERE { ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/TelevisionShow>. ?result <http://dbpedia.org/property/starring> <http://dbpedia.org/resource/Ross_Newton> . },"```sparql
SELECT ?work WHERE {
  # Find Ross Newton
  ?rossNewton dbo:birthName ""Ross Newton""@en .
  
  # Find works involving Ross Newton
  ?rossNewton dbo:performerIn ?work .
  
  # Ensure the work is both a movie and a television show
  ?work rdf:type/rdfs:subClassOf* dbpedia-owl:Film .
  ?work rdf:type/rdfs:subClassOf* dbpedia-owl:TelevisionShow .
}
```",1,3,2,1,1,3,3,71,0,0,2,0,0.0,0
274,9,train,Give me the associated musical artist of Cecil Taylor and professional in .,"SELECT ?result WHERE { ?result <http://dbpedia.org/property/occupation> """"@en . <http://dbpedia.org/resource/Cecil_Taylor> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . }","```sparql
SELECT ?artist ?profession WHERE {
  # Find Cecil Taylor in DBpedia
  ?cecilTaylor rdfs:label ""Cecil Taylor""@en .
  
  # Identify associated musical artists with Cecil Taylor
  ?cecilTaylor dbo:associatedMusicalArtist ?artist .

  # Get the profession of these associated artists
  ?artist dbo:profession ?profession .
}
```",2,2,3,1,2,2,3,28,0,0,1,0,0.0,0
645,32,train,"Give me the military force of the force, that is an event and a military conflict and a societal event, of Francisco Largo Caballero and commander in the force of Carlos Asensio Cabanillas.",SELECT ?result WHERE { ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?result <http://dbpedia.org/ontology/battle> ?v3 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?v1 <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Carlos_Asensio_Cabanillas> . ?v3 <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Francisco_Largo_Caballero> . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?v1 <http://dbpedia.org/ontology/commander> ?result . },"```sparql
SELECT ?event WHERE {
  # Find an event associated with Francisco Largo Caballero that is a military conflict, societal event, and involves a military force
  ?event dbo:commander <http://dbpedia.org/resource/Francisco_Largo_Caballero> .
  ?event rdf:type dbo:MilitaryConflict .
  ?event rdf:type dbo:SocietalEvent .

  # Ensure the event is also associated with a military force
  ?event dbo:participatedIn ?militaryForce .

  # Find Carlos Asensio Cabanillas' command in a military force
  ?anotherEvent dbo:commander <http://dbpedia.org/resource/Carlos_Asensio_Cabanillas> .
  ?anotherEvent dbo:participatedIn ?sameMilitaryForce .
  
  # Ensure the same military force is involved in both events
  FILTER (?militaryForce = ?sameMilitaryForce)
}
```",4,7,5,2,2,3,3,71,0,0,23,0,0.0,0
18,13,train,Give me the professional in the award of Ana María Sánchez de Ríos and parent of Liza Huber.,SELECT ?result WHERE { ?result <http://dbpedia.org/property/occupation> ?v0 . ?result <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Liza_Huber> . <http://dbpedia.org/resource/Ana_María_Sánchez_de_Ríos> <http://dbpedia.org/property/awards> ?v0 . },"```sparql
SELECT ?professional WHERE {
  # Find the award associated with Ana María Sánchez de Ríos
  ?award dbo:recipient ?anaMaría .
  ?anaMaría rdfs:label ""Ana María Sánchez de Ríos""@en .

  # Find a professional who received this award
  ?professional dbo:award ?award .

  # Find Liza Huber and her parent
  ?liza dbo:parent ?professional .
  ?liza rdfs:label ""Liza Huber""@en .
}
```",3,3,4,2,2,2,3,28,0,0,1,0,0.0,0
93,0,train,Give me the capital of Alaska.,SELECT ?result WHERE { <http://dbpedia.org/resource/Alaska> <http://dbpedia.org/ontology/capital> ?result . },"```sparql
SELECT ?capital WHERE {
  ?alaska rdfs:label ""Alaska""@en .
  ?alaska dbo:capital ?capital .
}
```",1,1,2,1,1,3,2,20,2,0,0,1.0,1.0,1.0
442,2,train,"Give me the work of Roosevelt, Theodore.","SELECT ?result WHERE { ?result <http://dbpedia.org/property/author> ""Roosevelt, Theodore""@en . }","```sparql
SELECT ?work WHERE {
  ?person rdfs:label ""Theodore Roosevelt""@en .
  ?person dbo:work ?work .
}
```",1,1,2,1,1,2,2,9,0,0,1,0,0.0,0
579,3,train,"Give me the residence, that is English and a settlement, of Alan Clyne.",SELECT ?result WHERE { <http://dbpedia.org/resource/Alan_Clyne> <http://dbpedia.org/property/residence> ?result . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. ?result <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/United_Kingdom>. },"```sparql
SELECT ?residence WHERE {
  # Find Alan Clyne and his residence
  ?person rdfs:label ""Alan Clyne""@en .
  ?person dbo:residenceLocation ?residence .

  # Ensure the residence is a settlement in England
  ?residence rdf:type dbo:Settlement .
  ?residence dbo:country dbr:England .
}
```",1,3,2,1,1,3,2,20,0,0,1,0,0.0,0
839,35,train,"Give me the band of the person born, that is a musical artist, as Kevin Richard Russell and band of the band, that is a musical artist, of Charlie Huhn.","SELECT ?result WHERE { ?v2 <http://dbpedia.org/property/birthName> ""Kevin Richard Russell""@en . ?v2 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . <http://dbpedia.org/resource/Charlie_Huhn> <http://dbpedia.org/ontology/associatedMusicalArtist> ?v1 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?result <http://dbpedia.org/ontology/bandMember> ?v1 . }","```sparql
SELECT ?kevinBand ?charlieBand WHERE {
  # Find Kevin Richard Russell and his band
  ?kevin dbo:musicalArtist ?kevinPerson .
  ?kevinPerson rdfs:label ""Kevin Richard Russell""@en .
  ?kevinPerson dbo:band ?kevinBand .

  # Find Charlie Huhn's band
  ?charlie dbo:musicalArtist ?charliePerson .
  ?charliePerson rdfs:label ""Charlie Huhn""@en .
  ?charliePerson dbo:band ?charlieBand .
}
```",4,6,5,2,2,3,3,71,0,0,1,0,0.0,0
124,39,train,"Give me the military force of the force, that is a societal event and a military conflict, of the person born on 1850-06-24 and military force of Battle of Tamai.","SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/commander> ?v0 . ?result <http://dbpedia.org/ontology/battle> ?v1 . ?v0 <http://dbpedia.org/ontology/birthDate> ""1850-06-24""^^<http://www.w3.org/2001/XMLSchema#date> . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?result <http://dbpedia.org/ontology/battle> <http://dbpedia.org/resource/Battle_of_Tamai> . }","```sparql
SELECT ?personMilitaryForce ?battleMilitaryForce WHERE {
  # Find person born on 1850-06-24
  ?person dbo:birthDate ""1850-06-24""^^xsd:date .
  
  # Get military force associated with this person
  ?person dbo:militaryService ?militaryEntity .
  ?militaryEntity rdfs:label ?personMilitaryForce .

  # Find Battle of Tamai and its military force
  ?battle dbo:name ""Battle of Tamai""@en .
  ?battle dbo:participatingOrganisation ?battleMilitaryEntity .
  ?battleMilitaryEntity rdfs:label ?battleMilitaryForce .

  # Identify societal event or military conflict connecting both forces
  OPTIONAL {
    ?event dbo:relatedEvent ?person .
    ?event dbo:relatedEvent ?battle .
  }
}
```",4,6,5,3,2,3,3,71,0,0,4,0,0.0,0
216,16,train,Give me the administration of the designer of Woolfe: The Red Hood Diaries and office of Tim Nicholls.,SELECT ?result WHERE { ?result <http://dbpedia.org/property/leader> ?v2 . <http://dbpedia.org/resource/Tim_Nicholls> <http://dbpedia.org/property/office> ?result . <http://dbpedia.org/resource/Woolfe:_The_Red_Hood_Diaries> <http://dbpedia.org/property/designer> ?v2 . },"```sparql
SELECT ?designerAdministration ?timNichollsOffice WHERE {
  # Find the designer of Woolfe: The Red Hood Diaries
  ?game dbo:creator ?designer .
  ?game rdfs:label ""Woolfe: The Red Hood Diaries""@en .

  # Get the administration or office related to the designer
  OPTIONAL { 
    ?designer dbo:office ?designerAdministration .
  }

  # Find Tim Nicholls and his administrative role
  ?timNicholls foaf:name ""Tim Nicholls"" .
  OPTIONAL {
    ?timNicholls dbo:office ?timNichollsOffice .
  }
}
```",3,3,4,2,2,2,3,28,0,0,1,0,0.0,0
579,0,train,Give me the native of Edinburgh.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Edinburgh> . },"```sparql
SELECT ?person WHERE {
  ?person dbo:birthPlace dbr:Edinburgh .
}
```",1,1,2,1,1,3,2,20,1711,0,0,1.0,1.0,1.0
465,28,train,Give me the successor of the child of Alfonso I d'Este and spouse of Archduchess Barbara of Austria and successor of Renée of France.,SELECT ?result WHERE { ?v1 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Alfonso_I_d'Este> . ?result <http://dbpedia.org/ontology/spouse> <http://dbpedia.org/resource/Archduchess_Barbara_of_Austria> . <http://dbpedia.org/resource/Renée_of_France> <http://dbpedia.org/ontology/successor> ?result . ?v1 <http://dbpedia.org/ontology/successor> ?result . },"```sparql
SELECT ?successor WHERE {
  # Find a child of Alfonso I d'Este
  ?child dbo:parent ""Alfonso I d'Este""@en .
  
  # Find the spouse of Archduchess Barbara of Austria
  ?spouse dbo:spouse ""Archduchess Barbara of Austria""@en .

  # Find the successor of Renée of France
  ?renéeSuccessor dbo:successor ""Renée of France""@en .

  # Combine conditions to find the required person
  ?successor dbo:child ?child .
  ?successor = ?spouse .
  ?successor = ?renéeSuccessor .
}
```",4,4,5,2,3,3,3,71,0,0,1,0,0.0,0
791,14,train,"Give me the father of the child, that is a royalty, of Emperor Takakura.",SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v1 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Emperor_Takakura> . ?v1 <http://dbpedia.org/property/father> ?result . },"```sparql
SELECT ?child ?father WHERE {
  # Find children of Emperor Takakura who are royalty
  ?takakura dbo:child ?child .
  ?takakura rdfs:label ""Emperor Takakura""@en .
  
  # Ensure the child is recognized as royalty (e.g., an emperor or princess)
  OPTIONAL { 
    ?child rdf:type dbo:Monarch .
  }
  
  # Find father of the royal child
  ?child dbo:parent ?father .
}
```",2,3,3,2,1,3,3,71,1,3,0,0.25,1.0,0.4
826,26,train,"Give me the successor of the child, that is a royalty, of the reference, that is a royalty, to Louis I.","SELECT ?result WHERE { ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v2 <http://dbpedia.org/ontology/successor> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v1 <http://xmlns.com/foaf/0.1/name> ""Louis I""@en . ?v1 <http://dbpedia.org/ontology/child> ?v2 . }","```sparql
SELECT ?successor WHERE {
  # Identify Louis I and his child who is royalty
  ?louisI dbo:parent ?child .
  ?louisI rdfs:label ""Louis I""@en .
  
  # Ensure the child is recognized as royalty
  ?child rdf:type dbo:Monarch .

  # Find the successor of this royal child
  OPTIONAL {
    ?child dbo:succeededBy ?successor .
  }
}
```",3,5,4,3,1,3,3,71,0,0,4,0,0.0,0
267,13,train,"Give me the coach of the player, that is a soccer club, in the manager of 2020–21 Tractor S.C. season.",SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerClub>. <http://dbpedia.org/resource/2020–21_Tractor_S.C._season> <http://dbpedia.org/ontology/manager> ?v0 . ?v1 <http://dbpedia.org/ontology/coach> ?result . ?v0 <http://dbpedia.org/ontology/team> ?v1 . },"```sparql
SELECT ?coach WHERE {
  # Find the manager of Tractor S.C. during the 2020–21 season
  ?manager dbo:managerOf ?tractorSC .
  ?tractorSC rdfs:label ""Tractor S.C.""@en ;
             dbo:season ?season .
  FILTER (?season = ""2020–21""^^xsd:string)

  # Find players coached by this manager who are associated with a soccer club
  OPTIONAL {
    ?player dbo:coach ?manager .
    ?player dbo:memberOf ?soccerClub .
    ?soccerClub rdf:type dbo:SoccerClub .
  }

  BIND(?manager AS ?coach)
}
```",3,4,4,3,1,3,2,20,0,0,2,0,0.0,0
445,15,train,"Give me the residence, that is a country, of the resident, that is an athlete, of Great Britain.",SELECT ?result WHERE { ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. ?v1 <http://dbpedia.org/property/residence> ?result . ?v1 <http://dbpedia.org/property/residence> <http://dbpedia.org/resource/Great_Britain> . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Athlete>. },"```sparql
SELECT DISTINCT ?country WHERE {
  # Find athletes from Great Britain
  ?athlete dbo:nationality dbr:United_Kingdom .
  
  # Find the residence of these athletes
  ?athlete dbo:residence ?location .
  
  # Ensure the location is a country
  ?location rdf:type dbo:Country .
  
  # Bind the country to the variable
  BIND(?location AS ?country)
}
```",2,4,3,2,1,3,3,71,1,34,1,0.02857142857142857,0.5,0.05405405405405405
865,17,train,Who is the child of the father of Abul Maal Abdul Muhith?,SELECT ?result WHERE { ?result <http://dbpedia.org/property/father> ?v1 . <http://dbpedia.org/resource/Abul_Maal_Abdul_Muhith> <http://dbpedia.org/property/father> ?v1 . },"```sparql
SELECT ?child WHERE {
  # Identify Abul Maal Abdul Muhith and his father
  ?muhith dbo:parent ?father .
  ?muhith rdfs:label ""Abul Maal Abdul Muhith""@en .

  # Find all children of the identified father
  ?father dbo:child ?child .
}
```",2,2,3,2,1,3,3,71,0,0,3,0,0.0,0
573,11,train,"Give me the person decedent at the administration, that is a region, of Charlie Baker.","SELECT ?result WHERE { ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Region>. ?result <http://dbpedia.org/ontology/deathPlace> ?v0 . ?v0 <http://dbpedia.org/property/governor> ""Charlie Baker""@en . }","```sparql
SELECT ?decedent WHERE {
  # Find Charlie Baker and his position as Governor of Massachusetts
  ?charlieBaker dbo:positionHeld ?governorPosition .
  ?charlieBaker rdfs:label ""Charlie Baker""@en .
  ?governorPosition dbo:regionServed dbr:Massachusetts .

  # Identify any decedent associated with his administration
  OPTIONAL {
    ?administration dbo:member ?decedent .
    ?administration dbo:positionHeld ?governorPosition .
    ?decedent dbo:deathDate ?deathDate .
    FILTER (!isBlank(?deathDate))
  }
}
```",2,3,3,2,1,3,3,71,0,0,968,0,0.0,0
965,18,train,"Give me the parent of Louise Mountbatten and parent of George Mountbatten, 2nd Marquess of Milford Haven and spouse of Prince Louis of Battenberg.","SELECT ?result WHERE { <http://dbpedia.org/resource/George_Mountbatten,_2nd_Marquess_of_Milford_Haven> <http://dbpedia.org/ontology/parent> ?result . <http://dbpedia.org/resource/Louise_Mountbatten> <http://dbpedia.org/ontology/parent> ?result . ?result <http://dbpedia.org/ontology/spouse> <http://dbpedia.org/resource/Prince_Louis_of_Battenberg> . }","```sparql
SELECT ?louiseParent ?georgeParent WHERE {
  # Find Louise Mountbatten and her parent
  ?louise dbo:parent ?louiseParent .
  ?louise rdfs:label ""Louise Mountbatten""@en .

  # Find George Mountbatten, 2nd Marquess of Milford Haven and his parent
  ?george dbo:parent ?georgeParent .
  ?george rdfs:label ""George Mountbatten, 2nd Marquess of Milford Haven""@en .

  # Ensure Louise is the spouse of Prince Louis of Battenberg
  OPTIONAL {
    ?louise dbo:spouse ?princeLouis .
    ?princeLouis rdfs:label ""Prince Louis of Battenberg""@en .
  }
}
```",3,3,4,1,3,3,3,71,1,1,0,0.5,1.0,0.6666666666666666
773,22,train,"Give me the parent of the child, that is a royalty, of Louis the German and spouse of Louis the German.",SELECT ?result WHERE { <http://dbpedia.org/resource/Louis_the_German> <http://dbpedia.org/ontology/spouse> ?result . ?v1 <http://dbpedia.org/ontology/parent> ?result . ?v1 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Louis_the_German> . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. },"```sparql
SELECT ?parent WHERE {
  # Find a child of Louis the German who is royalty
  ?child dbo:parent ?louisGerman .
  ?louisGerman rdfs:label ""Louis the German""@en .

  # Ensure the child is royalty
  ?child rdf:type dbo:Monarch .

  # Identify the spouse of this royal child
  OPTIONAL {
    ?child dbo:spouse ?spouse .
  }

  # Retrieve the parent of this royal child (who is also a spouse)
  ?child dbo:parent ?parent .
}
```",3,4,4,2,2,3,3,71,0,0,1,0,0.0,0
976,8,train,Who is the person born as Mehmet Naci Bostancı?,"SELECT ?result WHERE { ?result <http://dbpedia.org/property/birthName> ""Mehmet Naci Bostancı""@en . }","```sparql
SELECT ?label WHERE {
  ?person dbo:birthName ""Mehmet Naci Bostancı""@en .
  ?person rdfs:label ?label .
}
```",1,1,2,1,1,3,3,71,0,1,1,0.0,0.0,0
124,21,train,"Give me the commander in the war, that is a societal event and a military conflict, of A Field Battery, Royal Australian Artillery and military force of Battle of Atbara.","SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/commander> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. <http://dbpedia.org/resource/A_Field_Battery,_Royal_Australian_Artillery> <http://dbpedia.org/ontology/battle> ?v1 . ?result <http://dbpedia.org/ontology/battle> <http://dbpedia.org/resource/Battle_of_Atbara> . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. }","```sparql
SELECT ?commander WHERE {
  # Find the war associated with A Field Battery, Royal Australian Artillery
  ?battery dbo:partOfMilitaryConflict ?war .
  ?battery rdfs:label ""A Field Battery, Royal Australian Artillery""@en .

  # Identify the commander of this unit during that war
  ?battery dbo:commander ?commander .

  # Find the military force involved in the Battle of Atbara
  ?battle dbo:militaryForce ?force .
  ?battle rdfs:label ""Battle of Atbara""@en .

  # Check if the same commander was involved with this force
  ?force dbo:commander ?commander .
}
```",3,5,4,2,2,3,3,71,0,0,1,0,0.0,0
888,14,train,Give me the awardee of the award of the commander in 2022 Ukrainian eastern counteroffensive.,SELECT ?result WHERE { <http://dbpedia.org/resource/2022_Ukrainian_eastern_counteroffensive> <http://dbpedia.org/ontology/commander> ?v2 . ?result <http://dbpedia.org/property/awards> ?v0 . ?v2 <http://dbpedia.org/property/awards> ?v0 . },"```sparql
SELECT ?awardee WHERE {
  # Find an award related to the 2022 Ukrainian eastern counteroffensive
  ?award dbo:relatedEvent ?event .
  
  # Ensure the event is the 2022 Ukrainian eastern counteroffensive
  ?event rdfs:label ""2022 Ukrainian eastern counteroffensive""@en .

  # Identify the award associated with the title ""Commander""
  ?award rdfs:label ?awardLabel .
  FILTER (regex(?awardLabel, ""Commander"", ""i""))

  # Find the awardee of this specific award
  ?award dbo:recipient ?awardee .
}
```",3,3,4,3,1,3,2,20,0,0,44,0,0.0,0
47,5,train,"Give me the award, that is an award, of Mantu Ghosh.",SELECT ?result WHERE { ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Award>. <http://dbpedia.org/resource/Mantu_Ghosh> <http://dbpedia.org/property/awards> ?result . },"```sparql
SELECT ?award WHERE {
  ?person rdfs:label ""Mantu Ghosh""@en .
  ?person dbo:award ?award .
}
```",1,2,2,1,1,3,3,71,2,0,0,1.0,1.0,1.0
917,6,train,Who is the father of Keʻelikōlani?,SELECT ?result WHERE { <http://dbpedia.org/resource/Keʻelikōlani> <http://dbpedia.org/property/father> ?result . },"```sparql
SELECT ?father WHERE {
  ?keelikolani dbo:parent ?father .
  ?keelikolani rdfs:label ""Keʻelikōlani""@en .
}
```",1,1,2,1,1,3,3,71,1,1,0,0.5,1.0,0.6666666666666666
98,2,train,Who is the successor of Emperor Nijō?,SELECT ?result WHERE { <http://dbpedia.org/resource/Emperor_Nijō> <http://dbpedia.org/ontology/successor> ?result . },"```sparql
SELECT ?successor WHERE {
  ?emperor rdfs:label ""Emperor Nijō""@en .
  ?emperor dbo:successor ?successor .
}
```",1,1,2,1,1,2,2,9,1,0,0,1.0,1.0,1.0
839,8,train,"Give me the band, that is a musical artist, of Charlie Huhn.",SELECT ?result WHERE { ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. <http://dbpedia.org/resource/Charlie_Huhn> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . },"```sparql
SELECT ?band WHERE {
  ?charlieHuhn dbo:band ?band .
  ?charlieHuhn rdfs:label ""Charlie Huhn""@en .
  FILTER (regex(str(?band), ""Uriah Heep"", ""i""))
}
```",1,2,2,1,1,3,3,71,0,0,4,0,0.0,0
365,2,train,"Give me the commander, that is an office holder, in Ukrainian–Soviet War.",SELECT ?result WHERE { <http://dbpedia.org/resource/Ukrainian–Soviet_War> <http://dbpedia.org/ontology/commander> ?result . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. },"```sparql
SELECT DISTINCT ?commander WHERE {
  # Find events related to the Ukrainian-Soviet War
  ?event dbo:wikiPageRedirects dbpedia-en:Ukrainian_Soviet_War .
  
  # Identify commanders involved in these events
  ?event dbo:agent ?commander .
  ?commander rdf:type dbo:MilitaryPerson .

  # Check if the commander held an office or position
  OPTIONAL {
    ?commander dbo:officeHolderOf ?office .
    FILTER EXISTS { ?office a dbo:GovernmentOffice }
  }

  # Ensure the person is distinct and relevant to the war period
  FILTER (regex(str(?event), ""1917|1921"", ""i""))
}
```",1,2,2,1,1,3,2,20,0,0,5,0,0.0,0
93,8,train,Give me the death place of the governor of Bob Bartlett.,SELECT ?result WHERE { <http://dbpedia.org/resource/Bob_Bartlett> <http://dbpedia.org/property/governor> ?v0 . ?v0 <http://dbpedia.org/ontology/deathPlace> ?result . },"```sparql
SELECT ?deathPlace WHERE {
  ?b obituary:personName ""Bob Bartlett""@en .
  ?b dbo:deathPlace ?deathPlace .
}
```",2,2,3,2,1,3,2,20,0,0,4,0,0.0,0
976,17,train,Who is the person born as the birth name of Naci Bostancı?,SELECT ?result WHERE { ?result <http://dbpedia.org/property/birthName> ?v0 . <http://dbpedia.org/resource/Naci_Bostancı> <http://dbpedia.org/property/birthName> ?v0 . },"```sparql
SELECT ?person WHERE {
  # Check for birthName property
  OPTIONAL { 
    ?person dbo:birthName ""Naci Bostancı""@en .
  }
  # Check for nick property as an alias
  OPTIONAL {
    ?person foaf:nick ""Naci Bostancı""@en .
  }
}
```",2,2,3,2,1,3,3,71,0,0,1,0,0.0,0
935,5,train,Give me the office of Sanaullah Khan Zehri.,SELECT ?result WHERE { <http://dbpedia.org/resource/Sanaullah_Khan_Zehri> <http://dbpedia.org/property/office> ?result . },"```sparql
SELECT ?office WHERE {
  ?person rdfs:label ""Sanaullah Khan Zehri""@en .
  ?person dbo:office ?office .
}
```",1,1,2,1,1,3,2,20,0,0,5,0,0.0,0
445,7,train,Who is the commander in Battle of Saint-Mihiel?,SELECT ?result WHERE { <http://dbpedia.org/resource/Battle_of_Saint-Mihiel> <http://dbpedia.org/ontology/commander> ?result . },"```sparql
SELECT ?commander WHERE {
  ?battle dbo:wikiPageRedirects db:Battle_of_Saint-Mihiel .
  ?battle dbo:commander ?commander .
}
```",1,1,2,1,1,3,3,71,0,0,13,0,0.0,0
417,35,train,"Give me the spouse of the parent, that is a royalty, of Count Ingolf of Rosenborg and child of the child, that is a royalty, of Frederick Francis III, Grand Duke of Mecklenburg-Schwerin.","SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v1 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Frederick_Francis_III,_Grand_Duke_of_Mecklenburg-Schwerin> . ?v2 <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Count_Ingolf_of_Rosenborg> . ?result <http://dbpedia.org/ontology/parent> ?v1 . ?result <http://dbpedia.org/ontology/spouse> ?v2 . }","```sparql
SELECT ?spouse WHERE {
  # Find Count Ingolf of Rosenborg and his royal parent
  ?ingolf dbo:parent ?royalParent .
  ?ingolf rdfs:label ""Count Ingolf of Rosenborg""@en .

  # Ensure the parent is royalty
  OPTIONAL { 
    ?royalParent rdf:type dbo:RoyalFamilyMember .
  }

  # Find spouse of this royal parent
  ?royalParent dbo:spouse ?spouse .

  # Find Frederick Francis III and his royal child
  ?frederick rdfs:label ""Frederick Francis III, Grand Duke of Mecklenburg-Schwerin""@en .
  ?frederick dbo:child ?royalChild .

  # Ensure the child is royalty
  OPTIONAL { 
    ?royalChild rdf:type dbo:RoyalFamilyMember .
  }

  # Find child of this royal child
  ?royalChild dbo:child ?grandchild .

  # Ensure the grandchild is royalty
  OPTIONAL {
    ?grandchild rdf:type dbo:RoyalFamilyMember .
  }
}
```",4,6,5,2,2,3,3,71,1,1,0,0.5,1.0,0.6666666666666666
892,9,train,Give me the entity in Italy and landmark at elevation of 58.,"SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/elevation> ""58""^^<http://www.w3.org/2001/XMLSchema#integer> . ?result <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Italy> . }","```sparql
SELECT ?entity WHERE {
  ?entity dbo:country dbr:Italy .
  ?landmark dbo:location ?entity ;
            dbp:elevation ""58""^^xsd:integer .
}
```",2,2,3,1,2,3,3,71,0,0,11,0,0.0,0
865,10,train,Give me the native of British Raj and father of Shahla Khatun.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/British_Raj> . <http://dbpedia.org/resource/Shahla_Khatun> <http://dbpedia.org/property/father> ?result . },"```sparql
SELECT ?father WHERE {
  # Identify Shahla Khatun and find her father
  ?shahla dbo:parent ?father .
  ?shahla rdfs:label ""Shahla Khatun""@en .

  # Check if the father is a native of British Raj
  OPTIONAL { 
    ?father dbo:nationality dbr:British_Raj .
  }
}
```",2,2,3,1,2,3,3,71,0,0,1,0,0.0,0
955,6,train,Give me the band of Nate Albert and band of Johnny Rioux.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/bandMember> <http://dbpedia.org/resource/Nate_Albert> . ?result <http://dbpedia.org/ontology/bandMember> <http://dbpedia.org/resource/Johnny_Rioux> . },"```sparql
SELECT ?nateBand ?johnnyBand WHERE {
  # Find Nate Albert's band
  ?nate dbo:member ?format .
  ?format rdfs:label ""The Format""@en .
  ?nate rdfs:label ""Nate Albert""@en .

  # Find Johnny Rioux's band
  ?johnny dbo:member ?barrBrothers .
  ?barrBrothers rdfs:label ""The Barr Brothers""@en .
  ?johnny rdfs:label ""Johnny Rioux""@en .

  BIND(?format AS ?nateBand)
  BIND(?barrBrothers AS ?johnnyBand)
}
```",2,2,3,1,2,3,2,20,0,0,1,0,0.0,0
987,2,train,Give me the entity in Montenegro.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Montenegro> . },"```sparql
SELECT ?entity ?label ?type WHERE {
  ?entity dbo:country dbr:Montenegro .
  ?entity rdfs:label ?label .
  OPTIONAL { ?entity a ?type . }
}
```",1,1,2,1,1,3,3,71,900,1056,9,0.4601226993865031,0.9900990099009901,0.6282722513089005
465,38,train,"Give me the successor of the child, that is a royalty, of Anne of Brittany and spouse of the child, that is a royalty, of Ferdinand I, Holy Roman Emperor.","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/spouse> ?v3 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v2 <http://dbpedia.org/ontology/successor> ?result . <http://dbpedia.org/resource/Ferdinand_I,_Holy_Roman_Emperor> <http://dbpedia.org/ontology/child> ?v3 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. <http://dbpedia.org/resource/Anne_of_Brittany> <http://dbpedia.org/ontology/child> ?v2 . }","```sparql
SELECT ?successor WHERE {
  # Find a royal child of Anne of Brittany
  ?anneChild dbo:childOf ?anne .
  ?anne rdfs:label ""Anne of Brittany""@en .
  
  # Ensure the child is royalty
  FILTER EXISTS { ?anneChild dbo:title ?title . FILTER regex(str(?title), ""King|Queen"", ""i"") }
  
  # Find spouse of this royal child
  OPTIONAL {
    ?anneChild dbo:spouse ?spouse1 .
  }

  # Find a royal child of Ferdinand I, Holy Roman Emperor
  ?ferdinandChild dbo:childOf ?ferdinand .
  ?ferdinand rdfs:label ""Ferdinand I, Holy Roman Emperor""@en .

  # Ensure the child is royalty
  FILTER EXISTS { ?ferdinandChild dbo:title ?title . FILTER regex(str(?title), ""King|Queen"", ""i"") }
  
  # Find spouse of this royal child
  OPTIONAL {
    ?ferdinandChild dbo:spouse ?spouse2 .
  }

  # Determine the successor of the first identified royal child
  ?anneChild dbo:successor ?successor .
}
```",4,6,5,2,2,3,3,71,0,0,1,0,0.0,0
715,10,train,Give me the leader of Ministry of the Air (Spain) and commander in Rif War.,SELECT ?result WHERE { <http://dbpedia.org/resource/Rif_War> <http://dbpedia.org/ontology/commander> ?result . <http://dbpedia.org/resource/Ministry_of_the_Air_(Spain)> <http://dbpedia.org/ontology/leader> ?result . },"```sparql
SELECT ?person WHERE {
  # Find Manuel Azaña and his roles
  ?person rdfs:label ""Manuel Azaña""@en .
  
  # Check if he was leader of Ministry of the Air (Spain)
  OPTIONAL { 
    ?ministry dbo:leader ?person ;
              rdfs:label ""Ministry of the Air (Spain)""@en .
  }
  
  # Check if he was a commander in Rif War
  OPTIONAL {
    ?rifWar dbo:commander ?person ;
            rdfs:label ""Rif War""@en .
  }
}
```",2,2,3,1,2,3,3,71,0,1,1,0.0,0.0,0
987,6,train,Who is the actor of All for Free?,SELECT ?result WHERE { <http://dbpedia.org/resource/All_for_Free> <http://dbpedia.org/property/starring> ?result . },"```sparql
SELECT ?actor WHERE {
  # Identify the movie ""All for Free""
  ?movie rdfs:label ""All for Free""@en .
  
  # Retrieve actors who starred in the movie
  ?movie dbo:starring ?actor .
}
```",1,1,2,1,1,3,3,71,8,0,0,1.0,1.0,1.0
645,28,train,Give me the military force of Spanish Civil War and leader of Ministry of the Army (Spain) and commander in the force of Carlos Asensio Cabanillas.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/battle> <http://dbpedia.org/resource/Spanish_Civil_War> . ?v1 <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Carlos_Asensio_Cabanillas> . ?v1 <http://dbpedia.org/ontology/commander> ?result . <http://dbpedia.org/resource/Ministry_of_the_Army_(Spain)> <http://dbpedia.org/ontology/leader> ?result . },"```sparql
SELECT ?militaryForce ?leaderOfArmy ?commanderForce WHERE {
  # Find military forces involved in the Spanish Civil War
  ?militaryForce dbo:participatedIn dbr:Spanish_Civil_War .
  
  # Identify leader of Ministry of the Army (Spain)
  ?ministry rdfs:label ""Ministry of the Army (Spain)""@en ;
            dbo:leader ?leaderOfArmy .

  # Find Carlos Asensio Cabanillas and his command
  ?commander rdfs:label ""Carlos Asensio Cabanillas""@en .
  ?commander dbo:commanded ?commanderForce .
  
  FILTER EXISTS { 
    ?ministry dbo:country dbr:Spain ;
              dbo:startDate ?startDate .
    # Assuming the Ministry's relevant period is around the Spanish Civil War
    FILTER (?startDate <= ""1939-04-01""^^xsd:date && ?startDate >= ""1936-07-17""^^xsd:date)
  }
}
```",4,4,5,2,3,3,3,71,0,0,1,0,0.0,0
917,24,train,Give me the child of Kekūanāoʻa and child of the father of Keʻelikōlani.,"SELECT ?result WHERE { ?result <http://dbpedia.org/property/father> ""Kekūanāoʻa""@en . ?result <http://dbpedia.org/ontology/parent> ?v2 . <http://dbpedia.org/resource/Keʻelikōlani> <http://dbpedia.org/property/father> ?v2 . }","```sparql
SELECT ?childOfKekuanaoa ?childOfFatherOfKeelikolani WHERE {
  # Find the child of Kekūanāoʻa
  ?kekuanaoa dbo:label ""Kekūanāoʻa""@en .
  ?kekuanaoa dbo:child ?childOfKekuanaoa .

  # Find Keʻelikōlani and her father
  ?keelikolani dbo:label ""Keʻelikōlani""@en .
  ?keelikolani dbo:parent ?fatherOfKeelikolani .

  # Find the child of the father of Keʻelikōlani
  ?fatherOfKeelikolani dbo:child ?childOfFatherOfKeelikolani .
}
```",3,3,4,2,2,3,3,71,0,0,3,0,0.0,0
192,1,train,"Give me the child of Mary of Hungary, Queen of Naples.","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/parent> <http://dbpedia.org/resource/Mary_of_Hungary,_Queen_of_Naples> . }","```sparql
SELECT ?child WHERE {
  # Find children of Mary of Hungary, Queen of Naples
  ?child dbo:parent ?mary .
  ?mary rdfs:label ""Mary of Hungary, Queen of Naples""@en .
}
```",1,1,2,1,1,3,2,20,3,0,0,1.0,1.0,1.0
582,3,train,"Give me the reference, that is a scientist, to Hirotaka Sugawara.","SELECT ?result WHERE { ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Scientist>. ?result <http://xmlns.com/foaf/0.1/name> ""Hirotaka Sugawara""@en . }","```sparql
SELECT ?scientist WHERE {
  # Identify Hirotaka Sugawara
  ?sugawara rdfs:label ""Hirotaka Sugawara""@en .
  
  # Find collaborators or coauthors who are scientists
  OPTIONAL { 
    ?sugawara dbo:collaborator|dbo:coauthor ?scientist .
    ?scientist a dbo:Scientist .
  }
}
```",1,2,2,1,1,3,3,71,0,0,1,0,0.0,0
98,10,train,Give me the birth place of the person born as Paolo Elito M. Ballesteros IV.,"SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/birthPlace> ?result . ?v1 <http://dbpedia.org/property/birthName> ""Paolo Elito M. Ballesteros IV""@en . }","```sparql
SELECT ?birthPlace WHERE {
  ?person rdfs:label ""Paolo Elito M. Ballesteros IV""@en .
  ?person dbo:birthPlace ?birthPlace .
}
```",2,2,3,2,1,2,3,28,0,0,2,0,0.0,0
935,10,train,"Give me the office of the native of Balochistan, Pakistan.","SELECT ?result WHERE { ?v0 <http://dbpedia.org/property/office> ?result . ?v0 <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Balochistan,_Pakistan> . }","```sparql
SELECT DISTINCT ?person ?office WHERE {
  ?person dbo:nativePlace dbr:Balochistan_(province) .
  ?person dbo:office ?office .
}
```",2,2,3,2,1,3,2,20,0,0,35,0,0.0,0
18,4,train,Who is the professional in Actress?,"SELECT ?result WHERE { ?result <http://dbpedia.org/property/occupation> ""Actress""@en . }","```sparql
SELECT ?actor (SAMPLE(?occupation) AS ?profession) WHERE {
  ?actor rdf:type dbo:Actress .
  ?actor dbo:occupation ?occupation .
}
GROUP BY ?actor
```

This query selects entities of type `dbo:Actress` and retrieves their associated occupations. The use of `SAMPLE()` ensures that if there are multiple occupations listed, we get one representative occupation for each actress.",1,1,2,1,1,2,3,28,0,0,19241,0,0.0,0
236,9,train,"Give me the administration, that is an organisation, of the person decedent, that is a politician and an office holder, at Quincy, Massachusetts.","SELECT ?result WHERE { ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?v0 <http://dbpedia.org/ontology/deathPlace> <http://dbpedia.org/resource/Quincy,_Massachusetts> . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?result <http://dbpedia.org/property/leader> ?v0 . }","```sparql
SELECT ?administration WHERE {
  # Find a politician and office holder who was decedent at Quincy, Massachusetts
  ?person dbo:officeHolder ?office .
  ?person dbo:deathPlace ?place .
  ?place rdfs:label ""Quincy, Massachusetts""@en .

  # Ensure the person is an office holder (politician)
  FILTER EXISTS { ?person rdf:type dbo:OfficeHolder }

  # Find the administration (organization) they were part of
  ?person dbo:member ?administration .
}
```",2,5,3,2,1,3,2,20,0,0,1,0,0.0,0
433,31,train,"Give me the associated musical artist of the person born, that is a musical artist and an artist, as the persona of Paul Chambers and associated musical artist of Bill Evans.",SELECT ?result WHERE { ?v0 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . <http://dbpedia.org/resource/Bill_Evans> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . <http://dbpedia.org/resource/Paul_Chambers> <http://xmlns.com/foaf/0.1/givenName> ?v1 . ?v0 <http://dbpedia.org/property/birthName> ?v1 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. },"```sparql
SELECT ?associatedArtist WHERE {
  # Find Paul Chambers' associated musical artist
  ?paulChambers dbo:birthPlace ?place .
  ?paulChambers rdfs:label ""Paul Chambers""@en .
  ?paulChambers dbo:associatedMusicalArtist ?associatedArtist1 .

  # Ensure the associated artist is both a musical and general artist
  ?associatedArtist1 rdf:type dbo:Musician ;
                     dbo:occupationLabel ""artist""@en .

  # Find Bill Evans' associated musical artist
  ?billEvans dbo:birthPlace ?place .
  ?billEvans rdfs:label ""Bill Evans""@en .
  ?billEvans dbo:associatedMusicalArtist ?associatedArtist2 .

  # Ensure the associated artist is both a musical and general artist
  ?associatedArtist2 rdf:type dbo:Musician ;
                     dbo:occupationLabel ""artist""@en .

  # Check if the associated artists are the same
  FILTER (?associatedArtist1 = ?associatedArtist2)
  
  BIND(?associatedArtist1 AS ?associatedArtist)
}
```",4,6,5,3,2,3,3,71,0,0,2,0,0.0,0
579,6,train,Give me the native of Edinburgh and person born as Isobel Jane Miller Richard.,"SELECT ?result WHERE { ?result <http://dbpedia.org/property/birthName> ""Isobel Jane Miller Richard""@en . ?result <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Edinburgh> . }","```sparql
SELECT ?person WHERE {
  # Find person native of Edinburgh
  OPTIONAL {
    ?person dbo:birthPlace dbr:Edinburgh .
  }
  
  # Find person born as Isobel Jane Miller Richard
  OPTIONAL {
    ?person foaf:name ""Isobel Jane Miller Richard""@en .
  }
}
```",2,2,3,1,2,3,2,20,1,1710,0,0.0005844535359438924,1.0,0.0011682242990654205
865,29,train,"Give me the father of Shahla Khatun and native of British Raj and father of the child, that is a politician, of Abu Ahmad Abdul Hafiz.",SELECT ?result WHERE { ?v3 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Abu_Ahmad_Abdul_Hafiz> . <http://dbpedia.org/resource/Shahla_Khatun> <http://dbpedia.org/property/father> ?result . ?result <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/British_Raj> . ?v3 <http://dbpedia.org/property/father> ?result . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. },"```sparql
SELECT ?father WHERE {
  # Find Shahla Khatun and her father
  ?shahla dbo:parent ?father .
  ?shahla rdfs:label ""Shahla Khatun""@en .

  # Ensure the person is a native of British Raj
  OPTIONAL { 
    ?person dbo:nativePlace dbr:British_Raj .
    FILTER (?person = ?father)
  }

  # Find Abu Ahmad Abdul Hafiz and his child who is a politician
  ?abuAhmad dbo:child ?politicianChild .
  ?abuAhmad rdfs:label ""Abu Ahmad Abdul Hafiz""@en .
  
  # Ensure the child is a politician
  OPTIONAL {
    ?politicianChild rdf:type dbr:Politician .
    FILTER (?politicianChild != ?shahla)
  }

  # Find the father of this politician
  ?politicianChild dbo:parent ?father .
}
```",4,5,5,2,3,3,3,71,0,0,1,0,0.0,0
645,24,train,"Give me the leader of Ministry of the Army (Spain) and military force of the force, that is an event and a military conflict and a societal event, of Francisco Largo Caballero.",SELECT ?result WHERE { <http://dbpedia.org/resource/Ministry_of_the_Army_(Spain)> <http://dbpedia.org/ontology/leader> ?result . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?v2 <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Francisco_Largo_Caballero> . ?result <http://dbpedia.org/ontology/battle> ?v2 . },"```sparql
SELECT ?leader ?militaryForce WHERE {
  # Find Francisco Largo Caballero and his role in the Ministry of the Army
  ?caballero dbo:position ?ministryPosition .
  ?caballero rdfs:label ""Francisco Largo Caballero""@en .
  
  # Identify the leader of the Ministry of the Army during his time
  ?ministryPosition dbo:leader ?leader .
  ?ministryPosition rdf:type dbo:MinistryOfTheArmy .

  # Find military force or event associated with Francisco Largo Caballero
  OPTIONAL {
    ?caballero dbo:militaryForce ?militaryForce .
    ?militaryForce rdf:type dbo:MilitaryConflict .
    ?militaryForce rdf:type dbo:SocietalEvent .
  }
}
```",3,6,4,2,2,3,3,71,0,0,1,0,0.0,0
130,3,train,"Give me the film, that is a soccer club and an organisation, of Candice Storey Lee.",SELECT ?result WHERE { ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerClub>. ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?result <http://dbpedia.org/ontology/director> <http://dbpedia.org/resource/Candice_Storey_Lee> . },"```sparql
SELECT ?film WHERE {
  # Identify Candice Storey Lee
  ?candice dbo:birthName ""Candice Storey-Lee""@en .
  
  # Find films associated with her
  ?candice dbo:film ?film .

  # Check if the film is also a soccer club and an organization
  ?film rdf:type dbpedia-owl:SoccerClub .
  ?film rdf:type dbpedia-ontology:Organization .
}
```",1,3,2,1,1,3,2,20,0,0,1,0,0.0,0
465,4,train,Give me the child of Alfonso I d'Este.,SELECT ?result WHERE { ?result <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Alfonso_I_d'Este> . },"```sparql
SELECT ?child WHERE {
  ?alFonso dbo:parent ?child .
  ?alFonso rdfs:label ""Alfonso I d'Este""@en .
}
```",1,1,2,1,1,3,3,71,0,0,2,0,0.0,0
715,24,train,Give me the leader of Ministry of the Air (Spain) and commander in the force of Francisco Largo Caballero.,SELECT ?result WHERE { <http://dbpedia.org/resource/Ministry_of_the_Air_(Spain)> <http://dbpedia.org/ontology/leader> ?result . ?v2 <http://dbpedia.org/ontology/commander> ?result . ?v2 <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Francisco_Largo_Caballero> . },"```sparql
SELECT ?ministryLeader ?commander WHERE {
  # Find the leader of Ministry of the Air in Spain
  ?ministry dbo:country dbr:Spain ;
            dbo:head ?ministryLeader .
  ?ministry rdfs:label ""Ministry of the Air (Spain)""@en .

  # Find commander in the force of Francisco Largo Caballero
  ?caballero dbo:commander ?commander .
  ?caballero rdfs:label ""Francisco Largo Caballero""@en .
}
```",3,3,4,2,2,3,3,71,0,0,1,0,0.0,0
41,11,train,"Give me the party of the work, that is an office holder, of yes.","SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v1 <http://dbpedia.org/property/author> ""yes""@en . ?v1 <http://dbpedia.org/ontology/party> ?result . }","```sparql
SELECT ?party WHERE {
  # Identify Yes and any work related to holding an office
  ?yes dbo:birthName ""Yes""@en .
  
  OPTIONAL {
    ?work dbo:employee ?yes .
    ?work dbo:title ?title .
    
    # Check if the title indicates an office holder
    FILTER regex(?title, ""office|position"", ""i"")
    
    # Retrieve the political party of the work or position
    ?work dbo:politicalParty ?party .
  }
}
```",2,3,3,2,1,2,3,28,0,0,35,0,0.0,0
965,35,train,"Give me the parent of the person born, that is a noble, as Prince George of Battenberg and spouse of the spouse of Princess Victoria of Hesse and by Rhine.","SELECT ?result WHERE { ?v0 <http://dbpedia.org/property/birthName> ""Prince George of Battenberg""@en . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Noble>. ?v0 <http://dbpedia.org/ontology/parent> ?result . ?result <http://dbpedia.org/ontology/spouse> ?v1 . <http://dbpedia.org/resource/Princess_Victoria_of_Hesse_and_by_Rhine> <http://dbpedia.org/ontology/spouse> ?v1 . }","```sparql
SELECT ?parent WHERE {
  # Find Prince George of Battenberg and his parent
  ?george dbo:birthName ""Prince George of Battenberg""@en ;
          dbo:parent ?parent .
  
  # Find Princess Victoria of Hesse and by Rhine and her spouse
  ?victoria rdfs:label ""Princess Victoria of Hesse and by Rhine""@en ;
            dbo:spouse ?spouse .

  # Find the spouse of Princess Victoria's spouse (i.e., sibling or related person)
  OPTIONAL {
    ?spouse dbo:spouse ?relatedSpouse .
  }
}
```",4,5,5,2,2,3,3,71,0,0,1,0,0.0,0
456,8,train,"Give me the band, that is a musical artist, of Dean Brody.",SELECT ?result WHERE { ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. <http://dbpedia.org/resource/Dean_Brody> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . },"```sparql
SELECT ?band WHERE {
  ?deanBrody dbo:musicalArtist ""Dean Brody""@en .
  OPTIONAL { 
    ?deanBrody dbo:band ?band .
  }
}
```",1,2,2,1,1,3,3,71,0,0,2,0,0.0,0
917,9,train,Give me the parent of Albert Kamehameha and child of Kekūanāoʻa.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/parent> <http://dbpedia.org/resource/Kekūanāoʻa> . ?result <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Albert_Kamehameha> . },"```sparql
SELECT ?individual WHERE {
  # Find the parent of Albert Kamehameha
  ?albert dbo:parent ?individual .
  ?albert rdfs:label ""Albert Kamehameha""@en .

  # Find the child of Kekūanāoʻa
  ?kekuanaoa dbo:child ?individual .
  ?kekuanaoa rdfs:label ""Kekūanāoʻa""@en .
}
```",2,2,3,1,2,3,3,71,1,0,0,1.0,1.0,1.0
965,21,train,"Give me the parent of George Mountbatten, 2nd Marquess of Milford Haven and spouse of the spouse of Princess Victoria of Hesse and by Rhine.","SELECT ?result WHERE { <http://dbpedia.org/resource/Princess_Victoria_of_Hesse_and_by_Rhine> <http://dbpedia.org/ontology/spouse> ?v2 . ?result <http://dbpedia.org/ontology/spouse> ?v2 . <http://dbpedia.org/resource/George_Mountbatten,_2nd_Marquess_of_Milford_Haven> <http://dbpedia.org/ontology/parent> ?result . }","```sparql
SELECT ?parent1 ?spouse2 ?parent2 WHERE {
  # Step 1: Find the parent of George Mountbatten, 2nd Marquess of Milford Haven
  ?georgeMountbatten dbo:parent ?parent1 .
  ?georgeMountbatten rdfs:label ""George Mountbatten, 2nd Marquess of Milford Haven""@en .

  # Step 2: Find the spouse of Princess Victoria of Hesse and by Rhine
  ?princessVictoria dbo:spouse ?spouse1 .
  ?princessVictoria rdfs:label ""Princess Victoria of Hesse and by Rhine""@en .

  # Step 3: Find the spouse of that spouse (ensuring it's relevant)
  OPTIONAL {
    ?spouse1 dbo:spouse ?spouse2 .
    FILTER (?spouse2 != ?princessVictoria) # Ensure it's not the same person
  }

  # Step 4: Find the parent of this second spouse
  OPTIONAL {
    ?spouse2 dbo:parent ?parent2 .
  }
}
```",3,3,4,2,2,3,3,71,1,3,0,0.25,1.0,0.4
507,22,train,Give me the spouse of Anne V. Coates and professional in the profession of Guy Ferland.,SELECT ?result WHERE { ?result <http://dbpedia.org/property/occupation> ?v1 . ?result <http://dbpedia.org/ontology/spouse> <http://dbpedia.org/resource/Anne_V._Coates> . <http://dbpedia.org/resource/Guy_Ferland> <http://dbpedia.org/property/occupation> ?v1 . },"```sparql
SELECT ?spouse ?profession WHERE {
  # Find the spouse of Anne V. Coates
  ?anne dbo:spouse ?spouse .
  ?anne rdfs:label ""Anne V. Coates""@en .

  # Find the profession of Guy Ferland
  ?guy dbo:occupation ?profession .
  ?guy rdfs:label ""Guy Ferland""@en .

  # Ensure the spouse shares the same profession as Guy Ferland
  ?spouse dbo:occupation ?sameProfession .
  FILTER (?sameProfession = ?profession)
}
```",3,3,4,2,2,3,3,71,0,0,1,0,0.0,0
274,1,train,Give me the professional in .,"SELECT ?result WHERE { ?result <http://dbpedia.org/property/occupation> """"@en . }","```sparql
# This is a placeholder as the specific entity was not provided.
SELECT ?profession WHERE {
  # Replace `?person` with the actual DBpedia resource for the person of interest
  ?person dbo:occupation ?profession .
}
```",1,1,2,1,1,2,3,28,55,267736,39585,0.0002053840495012902,0.0013874873864783048,0.0003578038649322938
329,0,train,Give me the birthplace of Eric Cross (writer).,SELECT ?result WHERE { <http://dbpedia.org/resource/Eric_Cross_(writer)> <http://dbpedia.org/ontology/birthPlace> ?result . },"```sparql
SELECT ?birthPlace WHERE {
  ?person rdfs:label ""Eric Cross (writer)""@en .
  ?person dbo:birthPlace ?birthPlace .
}
```",1,1,2,1,1,2,3,28,2,0,0,1.0,1.0,1.0
47,38,train,Give me the office of the awardee of Banga Bhushan and office of the awardee of Padma Vibhushan.,SELECT ?result WHERE { ?v3 <http://dbpedia.org/property/office> ?result . ?v2 <http://dbpedia.org/property/office> ?result . ?v2 <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/Padma_Vibhushan> . ?v3 <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/Banga_Bhushan> . },"```sparql
SELECT ?award (GROUP_CONCAT(DISTINCT ?office; separator="", "") AS ?offices) WHERE {
  # Find awardees of Banga Bhushan and their offices
  ?bangaBhushanAward dbo:recipient ?awardee .
  ?bangaBhushanAward rdfs:label ""Banga Bhushan Award""@en .
  OPTIONAL { ?awardee dbo:office ?office . }

  # Find awardees of Padma Vibhushan and their offices
  ?padmaVibhushanAward dbo:recipient ?awardee .
  ?padmaVibhushanAward rdfs:label ""Padma Vibhushan""@en .
  OPTIONAL { ?awardee dbo:office ?office . }

  # Ensure we get distinct awards and offices
  FILTER(?bangaBhushanAward != ?padmaVibhushanAward)
}
GROUP BY ?award
```",4,4,5,2,2,3,3,71,0,0,1,0,0.0,0
917,11,train,"Give me the parent of the child, that is a royalty, of Kamehameha IV.",SELECT ?result WHERE { ?v1 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Kamehameha_IV> . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?result <http://dbpedia.org/ontology/child> ?v1 . },"```sparql
SELECT ?parent WHERE {
  # Find Kamehameha IV and his children
  ?kamehamehaIV dbo:child ?child .
  ?kamehamehaIV rdfs:label ""Kamehameha IV""@en .

  # Filter to find the child who is royalty (Prince or Princess)
  OPTIONAL {
    ?child rdfs:label ?childLabel .
    FILTER (
      regex(str(?childLabel), ""(?i)prince|princess"")
    )
  }

  # Find the parent of this royal child
  ?child dbo:parent ?parent .
}
```",2,3,3,2,1,3,3,71,2,0,0,1.0,1.0,1.0
433,32,train,"Give me the associated musical artist of the associated musical artist, that is an artist and a musical artist, of Scott LaFaro and associated musical artist of the person born, that is a musical artist and an artist, as Paul Laurence Dunbar Chambers Jr..","SELECT ?result WHERE { ?v3 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. <http://dbpedia.org/resource/Scott_LaFaro> <http://dbpedia.org/ontology/associatedMusicalArtist> ?v3 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?v1 <http://dbpedia.org/property/birthName> ""Paul Laurence Dunbar Chambers Jr.""@en . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?v1 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . }","```sparql
SELECT ?finalArtist WHERE {
  # Step 1: Find Scott LaFaro's associated musical artist
  ?scottLaFaro dbo:associatedMusicalArtist ?artist1 .
  ?scottLaFaro rdfs:label ""Scott LaFaro""@en .

  # Ensure the first result is a recognized musical artist and an artist
  ?artist1 rdf:type dbo:MusicalArtist .
  ?artist1 rdf:type dbo:Artist .

  # Step 2: Find Paul Laurence Dunbar Chambers Jr.'s associated musical artist
  ?chambers dbo:associatedMusicalArtist ?artist2 .
  ?chambers rdfs:label ""Paul Laurence Dunbar Chambers Jr.""@en .

  # Ensure the second result is a recognized musical artist and an artist
  ?artist2 rdf:type dbo:MusicalArtist .
  ?artist2 rdf:type dbo:Artist .

  # Step 3: Find the associated musical artist of the first result
  ?artist1 dbo:associatedMusicalArtist ?finalArtist .
}
```",4,8,5,2,2,3,3,71,0,0,2,0,0.0,0
326,9,train,"Give me the birthplace, that is a state and British, of the professional in Writer.","SELECT ?result WHERE { ?v0 <http://dbpedia.org/ontology/birthPlace> ?result . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/AdministrativeRegion>. ?result <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/United_Kingdom>. ?v0 <http://dbpedia.org/property/occupation> ""Writer""@en . }","```sparql
SELECT ?writer ?birthPlace WHERE {
  ?writer rdf:type dbo:Writer .
  ?writer dbo:birthPlace ?birthPlace .
  
  # Ensure the birthplace is a state in Britain
  ?birthPlace rdf:type dbo:StateOrProvince ;
              dbo:country dbr:United_Kingdom .
}
```",2,4,3,2,1,3,2,20,0,0,38,0,0.0,0
917,34,train,"Give me the child of Kekūanāoʻa and parent of the child, that is a royalty, of the mayor of Hawaiian Kingdom.","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/child> ?v1 . ?result <http://dbpedia.org/property/father> ""Kekūanāoʻa""@en . ?v1 <http://dbpedia.org/property/father> ?v3 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. <http://dbpedia.org/resource/Hawaiian_Kingdom> <http://dbpedia.org/property/leader> ?v3 . }","```sparql
SELECT ?child ?royalParent WHERE {
  # Find the child of Kekūanāoʻa
  ?kekuanaoa dbo:parent ?child .
  ?kekuanaoa rdfs:label ""Kekūanāoʻa""@en .

  # Find the parent of this child who is royalty
  OPTIONAL {
    ?child dbo:parent ?royalParent .
    FILTER (regex(str(?royalParent), ""Royalty"", ""i""))
  }

  # Optionally, link to the mayor of the Hawaiian Kingdom if needed for context
  OPTIONAL {
    ?mayor rdfs:label ""Mayor of the Hawaiian Kingdom""@en .
  }
}
```",4,5,5,3,2,3,3,71,0,0,2,0,0.0,0
47,6,train,Give me the awardee of Banga Bhushan.,SELECT ?result WHERE { ?result <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/Banga_Bhushan> . },"```sparql
SELECT ?awardee WHERE {
  ?award rdfs:label ""Banga Bhushan""@en .
  OPTIONAL { 
    ?award dbo:recipient ?awardee .
  }
}
```",1,1,2,1,1,3,3,71,0,0,2,0,0.0,0
976,28,train,"Give me the office of Meral Akşener and office of the leader, that is a politician, of Grand National Assembly of Turkey and office of Naci Bostancı.",SELECT ?result WHERE { <http://dbpedia.org/resource/Meral_Akşener> <http://dbpedia.org/property/office> ?result . <http://dbpedia.org/resource/Grand_National_Assembly_of_Turkey> <http://dbpedia.org/ontology/leader> ?v1 . <http://dbpedia.org/resource/Naci_Bostancı> <http://dbpedia.org/property/office> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v1 <http://dbpedia.org/property/office> ?result . },"```sparql
SELECT ?person ?name ?office WHERE {
  # Meral Akşener's office
  OPTIONAL { 
    ?mAkseren dbo:wikiPageRedirects dbpedia-tr:Meral_Akşener .
    ?mAkseren rdfs:label ""Meral Akşener""@en .
    ?mAkseren dbo:office ?office .
  }
  
  # Leader of the Grand National Assembly of Turkey (Speaker)
  OPTIONAL {
    ?leader dbo:wikiPageRedirects dbpedia-tr:Speaker_of_the_Grand_National_Assembly_of_Turkey .
    ?leader rdfs:label ""Speaker of the Grand National Assembly of Turkey""@en .
    ?leader dbo:office ?office .
  }
  
  # Naci Bostancı's office
  OPTIONAL {
    ?nBostanci dbo:wikiPageRedirects dbpedia-tr:Naci_Bostancı .
    ?nBostanci rdfs:label ""Naci Bostancı""@en .
    ?nBostanci dbo:office ?office .
  }
  
  # Bind names for clarity
  BIND(?mAkseren AS ?person) . 
  BIND(""Meral Akşener"" AS ?name) .
  OPTIONAL { FILTER(?person = ?mAkseren) }

  BIND(?leader AS ?person) . 
  BIND(""Speaker of the Grand National Assembly of Turkey"" AS ?name) .
  OPTIONAL { FILTER(?person = ?leader) }
  
  BIND(?nBostanci AS ?person) . 
  BIND(""Naci Bostancı"" AS ?name) .
  OPTIONAL { FILTER(?person = ?nBostanci) }
}
```",4,5,5,2,3,3,3,71,0,0,1,0,0.0,0
433,5,train,"Give me the associated musical artist, that is a musical artist and an artist, of Ornette Coleman.",SELECT ?result WHERE { <http://dbpedia.org/resource/Ornette_Coleman> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. },"```sparql
SELECT ?associatedArtist WHERE {
  # Find entities associated with Ornette Coleman
  ?coleman dbo:associatedMusicalArtist ?associatedArtist .
  ?coleman rdfs:label ""Ornette Coleman""@en .

  # Ensure the associated entity is a musical artist
  ?associatedArtist rdf:type dbo:MusicalArtist .

  # Ensure the associated entity is also an artist
  ?associatedArtist rdf:type dbo:Artist .
}
```",1,3,2,1,1,3,3,71,10,0,0,1.0,1.0,1.0
965,6,train,"Give me the child, that is a royalty, of Prince Louis of Battenberg.",SELECT ?result WHERE { ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?result <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Prince_Louis_of_Battenberg> . },"```sparql
SELECT ?child WHERE {
  # Find children of Prince Louis of Battenberg
  ?battenberg dbo:child ?child .
  ?battenberg rdfs:label ""Louis Mountbatten, 1st Marquess of Milford Haven""@en .

  # Ensure the child is royalty by checking their label for titles like 'Prince' or 'Princess'
  FILTER (
    regex(str(?child), ""(?i)prince|princess"")
  )
}
```",1,2,2,1,1,3,3,71,0,0,2,0,0.0,0
130,5,train,"Give me the administration, that is American, of .","SELECT ?result WHERE { ?result <http://dbpedia.org/property/governor> """"@en . ?result <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/United_States>. }","```sparql
SELECT ?administration WHERE {
  ?administration rdf:type dbo:Government .
  ?administration dbo:country dbr:United_States .
}
```",1,2,2,1,1,3,2,20,0,0,43,0,0.0,0
773,15,train,Give me the father of the parent of Bernard (son of Charles the Fat).,SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Bernard_(son_of_Charles_the_Fat)> . ?v1 <http://dbpedia.org/property/father> ?result . },"```sparql
SELECT ?grandfather WHERE {
  # Identify Bernard and his parent (Charles the Fat)
  ?bernard dbo:parent ?charlesFat .
  ?bernard rdfs:label ""Bernard (son of Charles the Fat)""@en .

  # Find the father of Charles the Fat
  ?charlesFat dbo:parent ?grandfather .
}
```",2,2,3,2,1,3,3,71,0,0,1,0,0.0,0
456,33,train,"Give me the professional in the alter ego of the reference, that is a fictional character, to Lamont Cranston (radio, film and television) and spouse of Danielle Spencer (Australian actress).","SELECT ?result WHERE { ?result <http://dbpedia.org/property/occupation> ?v3 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/FictionalCharacter>. ?v0 <http://xmlns.com/foaf/0.1/name> ""Lamont Cranston (radio, film and television)""@en . ?v0 <http://dbpedia.org/property/alterEgo> ?v3 . <http://dbpedia.org/resource/Danielle_Spencer_(Australian_actress)> <http://dbpedia.org/ontology/spouse> ?result . }","```sparql
SELECT ?alterEgo WHERE {
  # Find the fictional character associated with Lamont Cranston
  ?character dbo:alias ""Lamont Cranston""@en .
  ?character rdfs:label ?alterEgo .

  # Filter to ensure it's a fictional character
  FILTER (regex(str(?character), ""The Shadow"", ""i""))
}
```",4,5,5,3,2,3,3,71,0,0,1,0,0.0,0
892,31,train,Give me the entity in the profession of the true self of Enrico Crolla and landmark at elevation of 58.,"SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/country> ?v0 . ?result <http://dbpedia.org/ontology/elevation> ""58""^^<http://www.w3.org/2001/XMLSchema#integer> . ?v2 <http://dbpedia.org/property/occupation> ?v0 . ?v2 <http://xmlns.com/foaf/0.1/givenName> ""Enrico Crolla""@en . }","```sparql
SELECT ?alias ?profession ?landmark WHERE {
  # Find the alias or true self of Enrico Crolla
  ?enricoCrolla rdfs:label ""Enrico Crolla""@en .
  OPTIONAL { 
    ?enricoCrolla owl:sameAs ?alias .
  }
  
  # Get the profession associated with Enrico Crolla's alias
  OPTIONAL {
    ?alias dbo:occupation ?profession .
  }

  # Find a landmark at an elevation of 58 meters
  ?landmark dbo:elevation ""58""^^xsd:float ;
            rdf:type dbo:Lighthouse .
}
```",4,4,5,3,2,3,3,71,0,0,11,0,0.0,0
573,27,train,"Give me the parent of the author, that is a politician and an office holder, of the work of John Quincy Adams.",SELECT ?result WHERE { ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v2 <http://dbpedia.org/ontology/parent> ?result . ?v1 <http://dbpedia.org/property/author> ?v2 . ?v1 <http://dbpedia.org/property/author> <http://dbpedia.org/resource/John_Quincy_Adams> . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. },"```sparql
SELECT ?parent WHERE {
  # Find works authored by John Quincy Adams
  ?work dbo:author ?johnQuincyAdams .
  ?johnQuincyAdams rdfs:label ""John Quincy Adams""@en .

  # Ensure he was an office holder (politician)
  OPTIONAL { 
    ?johnQuincyAdams dbo:officeHolderOf ?office .
  }

  # Retrieve the parent of John Quincy Adams
  ?johnQuincyAdams dbo:parent ?parent .
}
```",3,5,4,3,1,3,3,71,0,0,2,0,0.0,0
715,30,train,"Give me the commander in Spanish Civil War and commander in Rif War and leader of the office, that is a government agency and an organisation, of Carlos Franco Iribarnegaray.",SELECT ?result WHERE { <http://dbpedia.org/resource/Rif_War> <http://dbpedia.org/ontology/commander> ?result . <http://dbpedia.org/resource/Spanish_Civil_War> <http://dbpedia.org/ontology/commander> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. <http://dbpedia.org/resource/Carlos_Franco_Iribarnegaray> <http://dbpedia.org/property/office> ?v1 . ?v1 <http://dbpedia.org/ontology/leader> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/GovernmentAgency>. },"```sparql
SELECT ?commander ?officeLeader WHERE {
  # Find a person who was a commander in the Spanish Civil War
  ?person dbo:role ""Commander""@en .
  ?person dbo:participatedIn dbr:Spanish_Civil_War .

  # Find the same person as a commander in the Rif War
  ?person dbo:participatedIn dbr:Rif_War .

  # Identify Carlos Franco Iribarnegaray's office that is both a government agency and an organization
  ?office dbo:leader dbr:Carlos_Franco_Iribarnegaray .
  ?office rdf:type dbo:Government_Agency ;
          rdf:type dbo:Organization .

  # Retrieve the leader of this office
  ?office dbo:leader ?officeLeader .
}
```",4,6,5,2,3,3,3,71,0,0,1,0,0.0,0
917,36,train,"Give me the parent of Albert Kamehameha and child of the father of the child, that is a royalty, of Kamehameha III.",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Albert_Kamehameha> . ?result <http://dbpedia.org/property/father> ?v0 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v3 <http://dbpedia.org/property/father> ?v0 . <http://dbpedia.org/resource/Kamehameha_III> <http://dbpedia.org/ontology/child> ?v3 . },"```sparql
SELECT ?parentOfAlbert ?childOfFather WHERE {
  # Find Albert Kamehameha and his parent
  ?albert dbo:parent ?parentOfAlbert .
  ?albert rdfs:label ""Albert Kamehameha""@en .

  # Find a child of Kamehameha III who is royalty
  OPTIONAL { 
    ?kamehamehaIII dbo:child ?royalChild .
    ?kamehamehaIII rdfs:label ""Kamehameha III""@en .
    FILTER (regex(str(?royalChild), ""Prince"", ""i"") || regex(str(?royalChild), ""Princess"", ""i""))
  }

  # Find the father of this royal child
  OPTIONAL {
    ?royalChild dbo:parent ?fatherOfRoyalChild .
    FILTER (regex(str(?royalChild), ""Prince"", ""i"") || regex(str(?royalChild), ""Princess"", ""i""))
  }
  
  # Find a child of this identified father
  OPTIONAL {
    ?fatherOfRoyalChild dbo:child ?childOfFather .
  }
}
```",4,5,5,3,2,3,3,71,1,3054,0,0.0003273322422258593,1.0,0.0006544502617801048
124,26,train,"Give me the military force of the war, that is an event and a military conflict and a societal event, of the awardee of British South Africa Company Medal.",SELECT ?result WHERE { ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v1 <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/British_South_Africa_Company_Medal> . ?v1 <http://dbpedia.org/ontology/battle> ?v2 . ?result <http://dbpedia.org/ontology/battle> ?v2 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. },"```sparql
SELECT DISTINCT ?militaryForce WHERE {
  # Find awardees of the British South Africa Company Medal
  ?person dbo:award ""British South Africa Company Medal"" .
  
  # Identify wars they participated in that are events and societal events
  ?war dbo:participant ?person ;
       rdf:type dbo:MilitaryConflict, dbo:Event, dbo:SocietalEvent .

  # Retrieve the military force involved in these wars
  ?war dbo:militaryForce ?militaryForce .
}
```",3,6,4,3,1,3,3,71,0,0,1434,0,0.0,0
5,4,train,"Give me the associated musical artist, that is a band, of Rubén Colón Tarrats.",SELECT ?result WHERE { <http://dbpedia.org/resource/Rubén_Colón_Tarrats> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Band>. },"```sparql
SELECT ?band WHERE {
  # Find entity associated with Rubén Colón Tarrats
  ?ruben dbo:associatedBand ?band .
  ?ruben rdfs:label ""Rubén Colón Tarrats""@en .

  # Ensure the result is a band
  ?band rdf:type dbo:MusicalArtist .
  FILTER EXISTS { ?band dbo:musicalGenre ?genre . }
}
```",1,2,2,1,1,3,2,20,0,0,2,0,0.0,0
976,31,train,"Give me the office of the leader, that is a politician, of the administration, that is an organisation, of Kemal Kılıçdaroğlu and office of Meral Akşener.",SELECT ?result WHERE { ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?v2 <http://dbpedia.org/ontology/leader> ?v0 . <http://dbpedia.org/resource/Meral_Akşener> <http://dbpedia.org/property/office> ?result . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v0 <http://dbpedia.org/property/office> ?result . ?v2 <http://dbpedia.org/property/leader> <http://dbpedia.org/resource/Kemal_Kılıçdaroğlu> . },"```sparql
SELECT ?kemalOffice ?meralOffice WHERE {
  # Find Kemal Kılıçdaroğlu's leadership role in his party
  ?kemal dbo:leader ?office .
  ?kemal rdfs:label ""Kemal Kılıçdaroğlu""@en .
  
  # Find the organization (CHP) led by Kemal Kılıçdaroğlu
  OPTIONAL {
    ?office dbo:party ?organization .
    ?organization rdfs:label ""Republican People's Party (Turkey)""@en .
  }
  
  # Find Meral Akşener's leadership role in her party
  ?meral dbo:leader ?mOffice .
  ?meral rdfs:label ""Meral Akşener""@en .

  # Find the organization (İYİ Parti) led by Meral Akşener
  OPTIONAL {
    ?mOffice dbo:party ?organization2 .
    ?organization2 rdfs:label ""Good Party (Turkey)""@en .
  }
  
  BIND(?office AS ?kemalOffice)
  BIND(?mOffice AS ?meralOffice)
}
```",4,6,5,3,2,3,3,71,0,0,3,0,0.0,0
417,20,train,Give me the child of the father of Frederick IX of Denmark and spouse of Princess Caroline-Mathilde of Denmark.,SELECT ?result WHERE { ?result <http://dbpedia.org/property/father> ?v2 . <http://dbpedia.org/resource/Frederick_IX_of_Denmark> <http://dbpedia.org/property/father> ?v2 . ?result <http://dbpedia.org/ontology/spouse> <http://dbpedia.org/resource/Princess_Caroline-Mathilde_of_Denmark> . },"```sparql
SELECT ?child WHERE {
  # Identify Frederick IX and his father
  ?frederickIX dbo:parent ?father .
  ?frederickIX rdfs:label ""Frederick IX of Denmark""@en .

  # Find children of Frederick IX's father
  ?father dbo:child ?child .

  # Identify Princess Caroline-Mathilde and her spouse
  ?carolineMathilde dbo:spouse ?spouse .
  ?carolineMathilde rdfs:label ""Caroline-Mathilde of Denmark""@en .

  # Find the common entity that is both a child of Frederick IX's father and spouse of Princess Caroline-Mathilde
  FILTER (?child = ?spouse)
}
```",3,3,4,2,2,3,3,71,0,0,1,0,0.0,0
130,1,train,Give me the entity in Tennessee.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/state> <http://dbpedia.org/resource/Tennessee> . },"```sparql
SELECT ?entity WHERE {
  ?entity dbo:location ?place .
  ?place rdfs:label ""Tennessee""@en .
}
```

This query selects entities (`?entity`) that have a `dbo:location` property pointing to a place labeled as ""Tennessee"" in English.",1,1,2,1,1,3,2,20,0,0,688,0,0.0,0
442,5,train,"Give me the resting place of the work of Roosevelt, Theodore.","SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/restingPlace> ?result . ?v1 <http://dbpedia.org/property/author> ""Roosevelt, Theodore""@en . }","```sparql
SELECT ?restingPlace WHERE {
  ?work dbo:author dbr:Theodore_Roosevelt ;
        rdfs:label ""The Rough Riders""@en .
  
  OPTIONAL { 
    ?work dbo:location ?restingPlace .
  }
}
```",2,2,3,2,1,2,2,9,0,0,1,0,0.0,0
236,14,train,"Give me the party member of the administration of the reference, that is an office holder and a politician, to James Madison.","SELECT ?result WHERE { ?v0 <http://dbpedia.org/property/leader> ?v2 . ?result <http://dbpedia.org/ontology/party> ?v0 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v2 <http://xmlns.com/foaf/0.1/name> ""James Madison""@en . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. }","```sparql
SELECT ?person WHERE {
  # Find individuals associated with James Madison's administration
  ?administration dbo:president dbr:James_Madison ;
                  dbo:partyMember ?person .
  
  # Ensure the person was a politician and held office
  ?person dbo:officeHolder true ;
          dbo:politicalParty dbr:Democratic-Republican_Party .

  # Filter for notable figures like James Monroe
  FILTER (regex(str(?person), ""James_Monroe"", ""i""))
}
```",3,5,4,3,1,3,2,20,0,0,597,0,0.0,0
965,30,train,"Give me the parent of the person born, that is a noble, as Prince George of Battenberg and spouse of Prince Louis of Battenberg and parent of Louise Mountbatten.","SELECT ?result WHERE { ?v0 <http://dbpedia.org/property/birthName> ""Prince George of Battenberg""@en . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Noble>. ?result <http://dbpedia.org/ontology/spouse> <http://dbpedia.org/resource/Prince_Louis_of_Battenberg> . <http://dbpedia.org/resource/Louise_Mountbatten> <http://dbpedia.org/ontology/parent> ?result . ?v0 <http://dbpedia.org/ontology/parent> ?result . }","```sparql
SELECT ?parent WHERE {
  # Find Prince George of Battenberg as spouse of Prince Louis of Battenberg
  ?george dbo:spouse ?louis .
  ?louis rdfs:label ""Prince Louis of Battenberg""@en .

  # Ensure the same person is parent of Louise Mountbatten
  ?george dbo:child ?louise .
  ?louise rdfs:label ""Louise Mountbatten""@en .

  # Find the parent(s) of Prince George of Battenberg
  ?george dbo:parent ?parent .
}
```",4,5,5,2,3,3,3,71,0,2,1,0.0,0.0,0
508,0,train,Give me the birthplace of Ma Hongkui.,SELECT ?result WHERE { <http://dbpedia.org/resource/Ma_Hongkui> <http://dbpedia.org/ontology/birthPlace> ?result . },"```sparql
SELECT ?birthPlace WHERE {
  ?maHongkui dbo:birthPlace ?birthPlace .
  ?maHongkui rdfs:label ""Ma Hongkui""@en .
}
```",1,1,2,1,1,3,2,20,3,0,0,1.0,1.0,1.0
507,32,train,"Give me the director of the movie, that is a movie and a work, with Beryl Reid and spouse of the person born as Anne Voase Coates.","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/spouse> ?v1 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?v3 <http://dbpedia.org/ontology/director> ?result . ?v3 <http://dbpedia.org/property/starring> <http://dbpedia.org/resource/Beryl_Reid> . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Film>. ?v1 <http://dbpedia.org/property/birthName> ""Anne Voase Coates""@en . }","```sparql
SELECT DISTINCT ?director WHERE {
  # Find movies featuring Beryl Reid
  ?movie dbo:starring ?actor .
  ?actor rdfs:label ""Beryl Reid""@en .

  # Ensure the movie is classified as both a Movie and a Work
  ?movie rdf:type dbpedia-owl:Film .
  ?movie rdf:type dbpedia-owl:CreativeWork .

  # Find Anne Voase Coates' spouse
  ?anne dbo:spouse ?spouse .
  ?anne rdfs:label ""Anne Voase Coates""@en .

  # Ensure the movie is associated with Anne Voase Coates' spouse
  ?movie dbo:director ?director .
  FILTER (?director = ?spouse)
}
```",4,6,5,2,2,3,3,71,0,0,1,0,0.0,0
124,10,train,Give me the military force of Battle of Atbara and commander in Mahdist War.,SELECT ?result WHERE { <http://dbpedia.org/resource/Mahdist_War> <http://dbpedia.org/ontology/commander> ?result . ?result <http://dbpedia.org/ontology/battle> <http://dbpedia.org/resource/Battle_of_Atbara> . },"```sparql
SELECT ?battle ?militaryForce ?commander WHERE {
  # Retrieve details about the Battle of Atbara
  ?battle rdfs:label ""Battle of Atbara""@en .
  
  # Find military forces involved in the battle
  ?battle dbo:militaryConflict ?conflict .
  ?conflict dbo:participatingMilitaryUnit ?militaryForce .

  # Find commander associated with the Battle of Atbara
  OPTIONAL {
    ?battle dbo:commander ?commander .
  }

  # Optionally, retrieve related information from the Mahdist War
  OPTIONAL {
    ?mahdistWar rdfs:label ""Mahdist War""@en .
    ?mahdistWar dbo:militaryConflict ?conflict .
  }
}
```",2,2,3,1,2,3,3,71,0,0,1,0,0.0,0
582,10,train,Give me the figure known as --10-19 and reference to Japan.,"SELECT ?result WHERE { ?result <http://dbpedia.org/property/nickname> ""--10-19""^^<http://www.w3.org/2001/XMLSchema#gMonthDay> . ?result <http://xmlns.com/foaf/0.1/name> ""Japan""@en . }","```sparql
SELECT ?person WHERE {
  ?person dbo:birthDate ?birthdate .
  FILTER (YEAR(?birthdate) = 1180 && MONTH(?birthdate) = 10 && DAY(?birthdate) = 19)
  OPTIONAL { 
    ?person rdfs:label ?label .
    FILTER regex(str(?label), ""Emperor Go-Toba"", ""i"")
  }
}
```",2,2,3,1,2,3,3,71,0,0,1,0,0.0,0
965,3,train,Give me the parent of Louise Mountbatten.,SELECT ?result WHERE { <http://dbpedia.org/resource/Louise_Mountbatten> <http://dbpedia.org/ontology/parent> ?result . },"```sparql
SELECT ?parent WHERE {
  ?louise dbo:parent ?parent .
  ?louise rdfs:label ""Louise Mountbatten""@en .
}
```",1,1,2,1,1,3,3,71,2,0,0,1.0,1.0,1.0
445,28,train,"Give me the death place of Patrick Moore and entity in the residence, that is a country, of Anna Sharkey and entity in United Kingdom.",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/United_Kingdom> . ?result <http://dbpedia.org/ontology/location> ?v1 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. <http://dbpedia.org/resource/Anna_Sharkey> <http://dbpedia.org/property/residence> ?v1 . <http://dbpedia.org/resource/Patrick_Moore> <http://dbpedia.org/ontology/deathPlace> ?result . },"```sparql
SELECT ?deathPlace ?residence ?ukEntity WHERE {
  # Find death place of Patrick Moore
  ?pm dbo:deathPlace ?deathPlace .
  ?pm rdfs:label ""Patrick Moore""@en .

  # Find residence of Anna Sharkey and check if it's a country
  OPTIONAL {
    ?as dbo:residence ?residence .
    ?as rdfs:label ""Anna Sharkey""@en .
    ?residence rdf:type dbo:Country .
  }

  # Identify an entity related to the United Kingdom
  OPTIONAL {
    ?ukEntity dbo:country dbr:United_Kingdom .
  }
}
```",4,5,5,2,3,3,3,71,1,42999,0,2.325581395348837e-05,1.0,4.6510546266365896e-05
554,10,train,"Give me the birth place of the band, that is an artist, of Rita Redshoes.",SELECT ?result WHERE { ?v0 <http://dbpedia.org/ontology/birthPlace> ?result . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. <http://dbpedia.org/resource/Rita_Redshoes> <http://dbpedia.org/ontology/associatedMusicalArtist> ?v0 . },"```sparql
SELECT ?band ?birthPlace WHERE {
  # Identify Rita Redshoes
  ?rita dbo:artist RITA_REDSHOES .
  
  # Find associated bands where she is an artist
  ?rita dbo:associatedBand ?band .

  # Get the birthplace or place of origin of the band
  ?band dbo:birthPlace ?birthPlace .
}
```",2,3,3,2,1,3,2,20,0,0,1,0,0.0,0
433,2,train,Give me the professional in Musician.,"SELECT ?result WHERE { ?result <http://dbpedia.org/property/occupation> ""Musician""@en . }","```sparql
SELECT ?musician WHERE {
  OPTIONAL { 
    ?musician dbo:occupation dbc:Musicians .
  }
  
  OPTIONAL {
    ?musician rdf:type dbo:Musician .
  }
}
```",1,1,2,1,1,3,3,71,0,0,7563,0,0.0,0
365,12,train,"Give me the person born as Symon Vasylyovych Petliura and spouse of the native, that is a politician, of Poltava Governorate.","SELECT ?result WHERE { ?v0 <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Poltava_Governorate> . ?result <http://dbpedia.org/property/birthName> ""Symon Vasylyovych Petliura""@en . ?v0 <http://dbpedia.org/ontology/spouse> ?result . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. }","```sparql
SELECT ?petliura ?spouse WHERE {
  # Find Symon Vasylyovych Petliura by his birth name
  ?petliura dbo:birthName ""Symon Vasylyovych Petliura"" .
  
  # Find politicians native to Poltava Governorate
  ?politician dbo:nativePlace ?poltava .
  ?poltava rdfs:label ""Poltava Governorate""@en .
  ?politician rdf:type dbo:Politician .

  # Find the spouse of the politician from Poltava Governorate
  OPTIONAL {
    ?politician dbo:spouse ?spouse .
  }
}
```",3,4,4,2,2,3,2,20,0,0,1,0,0.0,0
433,29,train,"Give me the associated musical artist of the associated musical artist, that is an artist and a musical artist, of Scott LaFaro and professional in Musician and associated musical artist of Paul Chambers.","SELECT ?result WHERE { ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. ?v3 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . <http://dbpedia.org/resource/Scott_LaFaro> <http://dbpedia.org/ontology/associatedMusicalArtist> ?v3 . ?result <http://dbpedia.org/property/occupation> ""Musician""@en . <http://dbpedia.org/resource/Paul_Chambers> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . }","```sparql
SELECT ?finalArtist WHERE {
  # Find associated musical artist of Scott LaFaro who is an artist and a musician
  ?laFaro dbo:associatedMusicalArtist ?artist1 .
  ?laFaro rdfs:label ""Scott LaFaro""@en .
  ?artist1 rdf:type dbo:Musician .
  
  # Find the associated musical artist of this person
  ?artist1 dbo:associatedMusicalArtist ?artist2 .

  # Find the associated musical artist of Paul Chambers
  ?chambers dbo:associatedMusicalArtist ?finalArtist .
  ?chambers rdfs:label ""Paul Chambers""@en .
}
```",4,6,5,2,3,3,3,71,0,0,1,0,0.0,0
273,0,train,Give me the spouse of Edoardo Agnelli (industrialist).,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/spouse> <http://dbpedia.org/resource/Edoardo_Agnelli_(industrialist)> . },"```sparql
SELECT ?spouse WHERE {
  ?edoardo dbo:spouse ?spouse .
  ?edoardo rdfs:label ""Edoardo Agnelli (industrialist)""@en .
}
```",1,1,2,1,1,3,2,20,0,0,1,0,0.0,0
645,29,train,"Give me the military force of the force, that is an event and a military conflict and a societal event, of Francisco Largo Caballero and leader of Ministry of the Army (Spain) and commander in Battle of Jarama.",SELECT ?result WHERE { ?v3 <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Francisco_Largo_Caballero> . ?result <http://dbpedia.org/ontology/battle> ?v3 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. <http://dbpedia.org/resource/Battle_of_Jarama> <http://dbpedia.org/ontology/commander> ?result . <http://dbpedia.org/resource/Ministry_of_the_Army_(Spain)> <http://dbpedia.org/ontology/leader> ?result . },"```sparql
SELECT ?militaryForce WHERE {
  # Identify Francisco Largo Caballero
  ?caballero rdfs:label ""Francisco Largo Caballero""@en .
  
  # Find his role as leader of Ministry of the Army (Spain)
  ?ministry dbo:leader ?caballero ;
            rdfs:label ""Ministry of the Army (Spain)""@en .

  # Find his command in Battle of Jarama
  ?battle dbo:commander ?caballero ;
          rdfs:label ""Battle of Jarama""@en .
  
  # Identify military force associated with him
  ?militaryForce dbo:member ?caballero ;
                 a dbo:MilitaryUnit .

  # Ensure the military force is involved in an event, a military conflict, and a societal event
  OPTIONAL { ?militaryForce dbo:event ?event . }
  OPTIONAL { ?militaryForce dbo:militaryConflict ?conflict . }
  OPTIONAL { ?militaryForce dbo:societalEvent ?societalEvent . }

  # Ensure all conditions are met
  FILTER EXISTS { ?militaryForce dbo:event ?event }
  FILTER EXISTS { ?militaryForce dbo:militaryConflict ?conflict }
  FILTER EXISTS { ?militaryForce dbo:societalEvent ?societalEvent }
}
```",4,7,5,2,3,3,3,71,0,0,1,0,0.0,0
129,18,train,Give me the associated musical artist of the person born as Tahj Malik Chandler and associated musical artist of EarthGang.,"SELECT ?result WHERE { <http://dbpedia.org/resource/EarthGang> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v2 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v2 <http://dbpedia.org/property/birthName> ""Tahj Malik Chandler""@en . }","```sparql
# Query to find the associated musical artist of Tahj Malik Chandler (Lil Wayne)
SELECT ?artist WHERE {
  ?person dbo:birthName ""Tahj Malik Chandler""@en .
  ?person foaf:name ?artist .
}

UNION

# Query to find the associated musical artists of EarthGang
SELECT ?member WHERE {
  ?earthGang dbo:member ?member .
  ?earthGang rdfs:label ""EarthGang""@en .
}
```",3,3,4,2,2,2,3,28,0,0,1,0,0.0,0
773,38,train,"Give me the parent of the child, that is a royalty, of Louis the German and parent of the successor of Charles the Bald.",SELECT ?result WHERE { ?v2 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Louis_the_German> . <http://dbpedia.org/resource/Charles_the_Bald> <http://dbpedia.org/ontology/successor> ?v3 . ?v2 <http://dbpedia.org/ontology/parent> ?result . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?result <http://dbpedia.org/ontology/child> ?v3 . },"```sparql
SELECT ?parent WHERE {
  # Find a royal child of Louis the German
  ?child dbo:childOf ?louisGerman .
  ?louisGerman rdfs:label ""Louis the German""@en .
  FILTER (regex(str(?child), ""King|Queen"", ""i"")) .

  # Find Charles the Bald's successor and their parent
  ?successor dbo:successorOf ?charlesBald .
  ?charlesBald rdfs:label ""Charles the Bald""@en .
  ?parentSuccessor dbo:parent ?successor .

  # Return the parent of the royal child of Louis the German
  ?parentChild dbo:parent ?child .
  
  # Ensure we return the correct parent by matching both conditions
  FILTER (?parentChild = ?parentSuccessor)
}
```",4,5,5,2,2,3,3,71,0,0,2,0,0.0,0
353,4,train,Give me the entity in Russia and alma mater of Daniil Yegorov.,SELECT ?result WHERE { <http://dbpedia.org/resource/Daniil_Yegorov> <http://dbpedia.org/ontology/almaMater> ?result . ?result <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Russia> . },"```sparql
SELECT ?entityInRussia ?almaMater WHERE {
  # Identify Daniil Yegorov
  ?yegorov rdfs:label ""Daniil Yegorov""@en .
  
  # Find entity associated with him that is located in Russia
  OPTIONAL { 
    ?yegorov dbo:associatedWith ?entityInRussia .
    ?entityInRussia dbp:country ""Russia"" .
  }
  
  # Find alma mater of Daniil Yegorov
  OPTIONAL {
    ?yegorov dbo:almaMater ?almaMater .
  }
}
```",2,2,3,1,2,2,2,9,1,0,0,1.0,1.0,1.0
582,19,train,Give me the player in Kazuaki Nagasawa and reference to the residence of Hirotaka Sugawara.,SELECT ?result WHERE { ?result <http://xmlns.com/foaf/0.1/name> ?v0 . <http://dbpedia.org/resource/Hirotaka_Sugawara> <http://dbpedia.org/property/residence> ?v0 . <http://dbpedia.org/resource/Kazuaki_Nagasawa> <http://dbpedia.org/ontology/team> ?result . },"```sparql
# Query to find the player role of Kazuaki Nagasawa
SELECT ?role WHERE {
  ?nagasawa dbo:birthName ""Kazuaki Nagasawa""@en .
  ?nagasawa dbo:role ?role .
}

# Query to find the residence of Hirotaka Sugawara
SELECT ?residence WHERE {
  ?sugawara dbo:birthName ""Hirotaka Sugawara""@en .
  ?sugawara dbo:residence ?residence .
}
```",3,3,4,2,2,3,3,71,0,0,1,0,0.0,0
122,4,train,Give me the band of Gift of Gab (rapper) and band member of Lyrics Born.,SELECT ?result WHERE { <http://dbpedia.org/resource/Gift_of_Gab_(rapper)> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?result <http://dbpedia.org/ontology/associatedMusicalArtist> <http://dbpedia.org/resource/Lyrics_Born> . },"```sparql
SELECT ?giftOfGabBand ?lyricsBornMember WHERE {
  # Find the band associated with Gift of Gab
  ?giftOfGab dbo:member ?band .
  ?giftOfGab rdfs:label ""Gift of Gab""@en .

  # Bind the band to a variable for clarity
  BIND(?band AS ?giftOfGabBand)

  # Find a member of Lyrics Born's group Latyrx
  ?lyricsBorn dbo:member ?groupMember .
  ?lyricsBorn rdfs:label ""Lyrics Born""@en .
  
  # Ensure the group is Latyrx
  ?groupMember dbo:participatedIn ?latyrx .
  ?latyrx rdfs:label ""Latyrx""@en .

  # Bind the member to a variable for clarity
  BIND(?groupMember AS ?lyricsBornMember)
}
```",2,2,3,1,2,2,2,9,0,0,2,0,0.0,0
326,1,train,Give me the professional in Composer.,SELECT ?result WHERE { ?result <http://dbpedia.org/property/occupation> <http://dbpedia.org/resource/Composer> . },"```sparql
SELECT ?composer ?profession WHERE {
  ?composer rdfs:label ""Composer""@en .
  ?composer dbo:occupation ?profession .
}
```",1,1,2,1,1,2,2,9,0,0,1916,0,0.0,0
892,25,train,"Give me the landmark at elevation of 58 and entity in the administration, that is Italian and a region and a settlement and an administrative region, of Democratic Party (Italy).","SELECT ?result WHERE { ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Region>. ?v0 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Italy>. ?result <http://dbpedia.org/ontology/elevation> ""58""^^<http://www.w3.org/2001/XMLSchema#integer> . ?result <http://dbpedia.org/ontology/province> ?v0 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/AdministrativeRegion>. ?v0 <http://dbpedia.org/property/leaderParty> <http://dbpedia.org/resource/Democratic_Party_(Italy)> . }","```sparql
SELECT ?landmark ?region WHERE {
  # Find landmark at elevation of 58
  ?landmark dbo:elevation ""58""^^xsd:integer .
  
  # Ensure it is a region, settlement, and administrative region in Italy
  ?landmark rdf:type dbpedia-owl:Region ;
            rdf:type dbpedia-owl:Settlement ;
            rdf:type dbpedia-owl:AdministrativeRegion ;
            dbo:country dbr:Italy .

  # Find the entity in administration related to Democratic Party (Italy)
  ?region dbo:party dbr:Democratic_Party_(Italy) .
  
  # Ensure this region is also a settlement and administrative region
  ?region rdf:type dbpedia-owl:Settlement ;
          rdf:type dbpedia-owl:AdministrativeRegion .

  # Link the landmark to the region
  ?landmark dbo:partOf ?region .
}
```",3,7,4,2,2,3,3,71,0,0,2,0,0.0,0
645,35,train,"Give me the leader of the office, that is a government agency and an organisation, of Camilo Menéndez Tolosa and commander in the force of Carlos Asensio Cabanillas.",SELECT ?result WHERE { <http://dbpedia.org/resource/Camilo_Menéndez_Tolosa> <http://dbpedia.org/property/office> ?v1 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?v2 <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Carlos_Asensio_Cabanillas> . ?v2 <http://dbpedia.org/ontology/commander> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/GovernmentAgency>. ?v1 <http://dbpedia.org/ontology/leader> ?result . },"```sparql
SELECT ?officeLeader ?forceCommander WHERE {
  # Find Camilo Menéndez Tolosa and his associated office
  ?camilo dbo:associatedWith ?office .
  ?camilo rdfs:label ""Camilo Menéndez Tolosa""@en .

  # Ensure the office is a government agency and an organization
  ?office rdf:type dbo:GovernmentAgency ;
          rdf:type dbo:Organization .

  # Find the leader of this office
  ?office dbo:leader ?officeLeader .

  # Find Carlos Asensio Cabanillas and his associated military force
  ?carlos dbo:militaryUnit ?force .
  ?carlos rdfs:label ""Carlos Asensio Cabanillas""@en .

  # Identify the commander of this force
  ?force dbo:commander ?forceCommander .
}
```",4,6,5,2,2,3,3,71,0,0,1,0,0.0,0
926,2,train,Give me the child of Ahmed III.,SELECT ?result WHERE { <http://dbpedia.org/resource/Ahmed_III> <http://dbpedia.org/ontology/child> ?result . },"```sparql
SELECT ?child WHERE {
  ?ahmed dbo:child ?child .
  ?ahmed rdfs:label ""Ahmed III""@en .
}
```",1,1,2,1,1,3,3,71,11,0,0,1.0,1.0,1.0
573,1,train,"Give me the person decedent at Quincy, Massachusetts.","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/deathPlace> <http://dbpedia.org/resource/Quincy,_Massachusetts> . }","```sparql
SELECT ?person WHERE {
  ?person dbo:placeOfDeath ?deathPlace .
  ?deathPlace rdfs:label ""Quincy, Massachusetts""@en .
}
```",1,1,2,1,1,3,3,71,0,0,40,0,0.0,0
839,19,train,"Give me the band of the person born, that is a musical artist, as Kevin Richard Russell and band of Peter Schorowsky.","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/bandMember> <http://dbpedia.org/resource/Peter_Schorowsky> . ?v0 <http://dbpedia.org/property/birthName> ""Kevin Richard Russell""@en . ?v0 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. }","```sparql
SELECT ?person ?band WHERE {
  # Find K.R. Kelly and his band
  OPTIONAL {
    ?kelly dbo:birthName ""Kevin Richard Russell""@en .
    ?kelly dbo:memberOfBand ?band .
    FILTER (regex(str(?kelly), ""K.R. Kelly"", ""i""))
  }
  
  # Find Peter Schorowsky and his band
  OPTIONAL {
    ?schorowsky dbo:birthName ""Peter Schorowsky""@en .
    ?schorowsky dbo:memberOfBand ?band .
    FILTER (regex(str(?schorowsky), ""The Notwist"", ""i""))
  }
}
```",3,4,4,2,2,3,3,71,0,0,1,0,0.0,0
573,15,train,"Give me the administration, that is a region, of the real name of Charlie Baker (Australian footballer).",SELECT ?result WHERE { ?result <http://dbpedia.org/property/governor> ?v1 . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Region>. <http://dbpedia.org/resource/Charlie_Baker_(Australian_footballer)> <http://xmlns.com/foaf/0.1/name> ?v1 . },"```sparql
SELECT ?realName ?administration WHERE {
  # Step 1: Identify Charlie Baker (Australian footballer)
  ?charlieBaker dbo:birthPlace ?place .
  ?charlieBaker rdfs:label ""Charlie Baker""@en .
  
  # Step 2: Determine Real Name
  OPTIONAL { 
    ?charlieBaker foaf:name ?realName .
  }
  
  # Step 3: Find Administration of Region
  OPTIONAL {
    ?place dbo:administrativeRegion ?region .
    ?region dbo:country ?country .
    ?region dbo:administrativeUnit ?administration .
  }
}
```",2,3,3,2,1,3,3,71,0,1,1,0.0,0.0,0
933,3,train,"Who is the band, that is an artist and a musical artist, of The Ramong Sound?",SELECT ?result WHERE { <http://dbpedia.org/resource/The_Ramong_Sound> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. },"```sparql
SELECT ?band WHERE {
  ?entity rdfs:label ""The Ramong Sound""@en .
  FILTER NOT EXISTS { ?entity a dbo:MusicalArtist . }
  FILTER NOT EXISTS { ?entity a dbo:Artist . }

  OPTIONAL {
    ?entity dbo:associatedBand ?band .
  }
}
```",1,3,2,1,1,3,3,71,3,1,0,0.75,1.0,0.8571428571428571
527,1,train,Give me the author of The Boy Who Kicked Pigs.,SELECT ?result WHERE { <http://dbpedia.org/resource/The_Boy_Who_Kicked_Pigs> <http://dbpedia.org/property/author> ?result . },"```sparql
SELECT ?author WHERE {
  ?book rdfs:label ""The Boy Who Kicked Pigs""@en .
  ?book dbo:author ?author .
}
```",1,1,2,1,1,3,2,20,1,0,0,1.0,1.0,1.0
166,4,train,Give me the reference to Madrid.,"SELECT ?result WHERE { ?result <http://xmlns.com/foaf/0.1/name> ""Madrid""@en . }","```sparql
SELECT ?abstract WHERE {
  ?madrid rdfs:label ""Madrid""@en .
  OPTIONAL { 
    ?madrid dbo:wikiPageRedirects ?redirect .
  }
  ?madrid dbo:abstract ?abstract .
}
```",1,1,2,1,1,3,2,20,0,1,6,0.0,0.0,0
465,20,train,"Give me the successor of Ercole II d'Este, Duke of Ferrara and spouse of the child, that is a royalty, of Ferdinand I, Holy Roman Emperor.","SELECT ?result WHERE { ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?result <http://dbpedia.org/ontology/spouse> ?v2 . <http://dbpedia.org/resource/Ferdinand_I,_Holy_Roman_Emperor> <http://dbpedia.org/ontology/child> ?v2 . <http://dbpedia.org/resource/Ercole_II_d'Este,_Duke_of_Ferrara> <http://dbpedia.org/ontology/successor> ?result . }","```sparql
SELECT ?successor WHERE {
  # Find Ercole II d'Este and his successor
  ?ercole dbo:parent ?father .
  ?ercole rdfs:label ""Ercole II d'Este, Duke of Ferrara""@en .
  
  OPTIONAL { 
    ?child dbo:parent ?ercole .
    ?successor dbo:parent ?child .
  }
  
  # Find a child of Ferdinand I who is royalty
  OPTIONAL {
    ?ferdinand dbo:child ?royalChild .
    ?ferdinand rdfs:label ""Ferdinand I, Holy Roman Emperor""@en .
    
    # Ensure the child is royalty
    FILTER (regex(str(?royalChild), ""Archduke"", ""i"") || regex(str(?royalChild), ""Princess"", ""i""))
  }
  
  # Find spouse of this royal child
  OPTIONAL {
    ?royalChild dbo:spouse ?successor .
  }
}
```",3,4,4,2,2,3,3,71,0,3,1,0.0,0.0,0
102,12,train,"Give me the manager of Sheffield United W.F.C. and native of the residence, that is English and a settlement, of Peter Finbow.",SELECT ?result WHERE { ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. ?v0 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/United_Kingdom>. <http://dbpedia.org/resource/Peter_Finbow> <http://dbpedia.org/property/residence> ?v0 . <http://dbpedia.org/resource/Sheffield_United_W.F.C.> <http://dbpedia.org/ontology/manager> ?result . ?result <http://dbpedia.org/ontology/birthPlace> ?v0 . },"```sparql
SELECT ?manager ?native WHERE {
  # Find the manager of Sheffield United W.F.C.
  ?team dbo:manager ?manager .
  ?team rdfs:label ""Sheffield United Women's Football Club""@en .

  # Find Peter Finbow's residence and ensure it is an English settlement
  ?person dbo:residence ?settlement .
  ?person foaf:name ""Peter Finbow"" .
  
  FILTER (regex(str(?settlement), ""England"", ""i""))
  FILTER EXISTS { ?settlement a dbo:Settlement . }

  # Find someone native to this settlement
  ?native dbo:nativePlace ?settlement .
}
```",3,5,4,2,2,3,2,20,0,0,1,0,0.0,0
326,5,train,"Give me the person decedent at the region coded, that is a settlement, as 442/760.","SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. ?result <http://dbpedia.org/ontology/deathPlace> ?v1 . ?v1 <http://dbpedia.org/ontology/areaCode> ""442/760"" . }","```sparql
SELECT ?person WHERE {
  # Assuming ""Region_442/760"" is the correct identifier for the settlement coded as 442/760
  ?person dbo:deathPlace dbpedia:Region_442/760 .
}
```",2,3,3,2,1,2,2,9,0,0,699,0,0.0,0
456,31,train,"Give me the spouse of the actor of the movie, that is a work and a television show, with Ross Newton and professional in .","SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/TelevisionShow>. ?v0 <http://dbpedia.org/ontology/spouse> ?result . ?v1 <http://dbpedia.org/property/starring> <http://dbpedia.org/resource/Ross_Newton> . ?result <http://dbpedia.org/property/occupation> """"@en . ?v1 <http://dbpedia.org/property/starring> ?v0 . }","```sparql
SELECT ?spouse WHERE {
  # Find works that are both movies and television shows featuring Ross Newton
  ?work dbo:genre dbc:Films_by_country .
  ?work dbo:genre dbc:Television_series .
  ?work dbo:starring ?rossNewton .
  ?rossNewton rdfs:label ""Ross Newton""@en .

  # Identify the role or profession of Ross Newton in this work
  OPTIONAL {
    ?rossNewton dbo:profession ?role .
  }

  # Find the spouse of the actor who played the identified role (if not Ross Newton)
  OPTIONAL {
    ?actor dbo:starring ?work .
    ?actor dbo:spouse ?spouse .
    FILTER (?actor != ?rossNewton) # Ensure it's a different actor if applicable
  }
}
```",4,6,5,3,2,3,3,71,0,0,2,0,0.0,0
465,33,train,"Give me the spouse of the child, that is a royalty, of the parent of Elizabeth of Austria (1526–1545) and successor of Ercole II d'Este, Duke of Ferrara.","SELECT ?result WHERE { ?v0 <http://dbpedia.org/ontology/child> ?v3 . ?result <http://dbpedia.org/ontology/spouse> ?v3 . <http://dbpedia.org/resource/Ercole_II_d'Este,_Duke_of_Ferrara> <http://dbpedia.org/ontology/successor> ?result . ?v0 <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Elizabeth_of_Austria_(1526–1545)> . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. }","```sparql
SELECT ?spouse WHERE {
  # Step 1: Find Elizabeth of Austria and her parent
  ?elizabeth dbo:parent ?parent .
  ?elizabeth rdfs:label ""Elizabeth of Austria (1526–1545)""@en .

  # Step 2: Identify Ercole II d'Este's successor
  ?ercole dbo:succeededBy ?successor .
  ?ercole rdfs:label ""Ercole II d'Este, Duke of Ferrara""@en .

  # Step 3: Find a common child who is royalty
  OPTIONAL {
    ?parent dbo:child ?commonChild .
    ?successor dbo:child ?commonChild .
    FILTER (regex(str(?commonChild), ""royalty"", ""i""))
  }

  # Step 4: Identify the spouse of this royal child
  OPTIONAL {
    ?commonChild dbo:spouse ?spouse .
  }
}
```",4,5,5,3,2,3,3,71,0,0,1,0,0.0,0
93,3,train,"Give me the headquarter, that is a region and a settlement, of Lake Clark National Park and Preserve.",SELECT ?result WHERE { ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Region>. <http://dbpedia.org/resource/Lake_Clark_National_Park_and_Preserve> <http://dbpedia.org/ontology/location> ?result . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. },"```sparql
SELECT ?headquarters WHERE {
  ?park rdfs:label ""Lake Clark National Park and Preserve""@en .
  ?park dbo:headquarters ?headquarters .

  # Ensure the headquarters is both a settlement and a region
  ?headquarters rdf:type dbo:Settlement ;
                rdf:type dbo:Region .
}
```",1,3,2,1,1,3,2,20,0,0,5,0,0.0,0
102,5,train,"Give me the residence, that is English and a settlement, of Peter Finbow.",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/United_Kingdom>. ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. <http://dbpedia.org/resource/Peter_Finbow> <http://dbpedia.org/property/residence> ?result . },"```sparql
SELECT ?residence WHERE {
  # Find Peter Finbow's residence
  ?person dbo:residence ?residence .
  ?person rdfs:label ""Peter Finbow""@en .

  # Ensure the residence is a settlement
  ?residence rdf:type dbo:Settlement .

  # Confirm the location of the settlement is in England
  ?residence dbo:country dbr:England .
}
```",1,3,2,1,1,3,2,20,0,0,1,0,0.0,0
527,8,train,"Give me the author of the work, that is a work and a book, of Tom Baker.",SELECT ?result WHERE { ?v0 <http://dbpedia.org/property/author> ?result . ?v0 <http://dbpedia.org/property/author> <http://dbpedia.org/resource/Tom_Baker> . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Book>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. },"```sparql
SELECT ?author WHERE {
  ?book rdf:type dbo:Book .
  ?book rdf:type dbo:Work .
  ?book dbo:author ?author .
  ?author rdfs:label ""Tom Baker""@en .
}
```",2,4,3,2,1,3,2,20,1,0,0,1.0,1.0,1.0
433,10,train,Give me the associated musical artist of Paul Chambers and professional in Musician.,"SELECT ?result WHERE { ?result <http://dbpedia.org/property/occupation> ""Musician""@en . <http://dbpedia.org/resource/Paul_Chambers> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . }","```sparql
SELECT ?associatedArtist WHERE {
  # Find Paul Chambers entity in DBpedia
  ?paulChambers dbo:birthName ""Paul Laurence Chambers"" .
  
  # Find associations with other musicians
  ?association dbo:subject ?paulChambers ;
               dbo:object ?associatedArtist .
  
  # Ensure the associated artist is a musician
  ?associatedArtist rdf:type dbo:Musician .
}
```",2,2,3,1,2,3,3,71,0,0,15,0,0.0,0
273,12,train,Give me the parent of the alumnus of University of Turin and spouse of Edoardo Agnelli (industrialist).,SELECT ?result WHERE { ?v0 <http://dbpedia.org/ontology/almaMater> <http://dbpedia.org/resource/University_of_Turin> . ?v0 <http://dbpedia.org/ontology/parent> ?result . ?result <http://dbpedia.org/ontology/spouse> <http://dbpedia.org/resource/Edoardo_Agnelli_(industrialist)> . },"```sparql
SELECT ?parent WHERE {
  # Identify alumnus of University of Turin
  ?alumnus dbo:almaMater dbr:University_of_Turin .
  
  # Check if this alumnus is a spouse of Edoardo Agnelli (industrialist)
  ?edoardoAg rdfs:label ""Edoardo Agnelli""@en ;
             dbo:spouse ?alumnus .
  
  # Find the parent of this alumnus
  ?alumnus dbo:parent ?parent .
}
```",3,3,4,2,2,3,2,20,0,0,1,0,0.0,0
715,6,train,Give me the force of Francisco Largo Caballero.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Francisco_Largo_Caballero> . },"```sparql
SELECT ?position WHERE {
  ?caballero rdfs:label ""Francisco Largo Caballero""@en .
  
  # Retrieve roles or positions held by Francisco Largo Caballero
  OPTIONAL { 
    ?caballero dbo:officeHeld ?position .
  }
}
```",1,1,2,1,1,3,3,71,0,0,1,0,0.0,0
926,37,train,Give me the successor of the child of the spouse of Şermi Kadın and child of Ahmed III.,SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/spouse> <http://dbpedia.org/resource/Şermi_Kadın> . <http://dbpedia.org/resource/Ahmed_III> <http://dbpedia.org/ontology/child> ?result . ?v2 <http://dbpedia.org/property/father> ?v1 . ?v2 <http://dbpedia.org/ontology/successor> ?result . },"```sparql
SELECT ?successor WHERE {
  # Find Şermi Kadın and her child with Ahmed III
  ?sermiKadin rdfs:label ""Şermi Kadın""@en .
  ?ahmedIII rdfs:label ""Ahmed III""@en .
  ?child dbo:parent ?sermiKadin ;
         dbo:parent ?ahmedIII .

  # Find the spouse of Şermi Kadın's child
  ?spouse dbo:spouse ?child .

  # Find the child of this spouse and Şermi Kadın's child
  ?grandChild dbo:parent ?spouse ;
              dbo:parent ?child .

  # Find the successor of this grandchild
  ?successor dbo:successor ?grandChild .
}
```",4,4,5,3,2,3,3,71,0,1,1,0.0,0.0,0
826,3,train,Give me the father of Anna Magdalena Appel.,SELECT ?result WHERE { <http://dbpedia.org/resource/Anna_Magdalena_Appel> <http://dbpedia.org/property/father> ?result . },"```sparql
SELECT ?father WHERE {
  ?annaMagdalenaAppel dbo:parent ?father .
  ?annaMagdalenaAppel rdfs:label ""Anna Magdalena Appel""@en .
}
```",1,1,2,1,1,3,3,71,0,0,1,0,0.0,0
606,3,train,"Give me the nickname of DeKalb, Illinois.","SELECT ?result WHERE { <http://dbpedia.org/resource/DeKalb,_Illinois> <http://dbpedia.org/property/nickname> ?result . }","```sparql
SELECT ?nickname WHERE {
  ?dekalb dbo:officialName ""DeKalb""@en .
  ?dekalb dbo:nickname ?nickname .
}
```",1,1,2,1,1,3,2,20,0,0,1,0,0.0,0
47,4,train,Give me the administration of Jagdeep Dhankhar.,SELECT ?result WHERE { ?result <http://dbpedia.org/property/governor> <http://dbpedia.org/resource/Jagdeep_Dhankhar> . },"```sparql
SELECT ?governorshipRole ?stateName ?primeMinister WHERE {
  # Find Jagdeep Dhankhar's governorship roles
  ?dhankhar dbo:officeHolderOf ?governorshipRole .
  ?dhankhar rdfs:label ""Jagdeep Dhankhar""@en .

  # Get the state names for which he was a governor
  ?governorshipRole dbo:stateOrTerritory ?stateName .

  # Find the Prime Minister during his tenure as Governor
  ?primeMinister dbo:officeHolderOf ?pmOffice .
  ?pmOffice dbo:position ""Prime Minister of India"" .
  ?pmOffice dbo:startDate ?startDate .
  ?pmOffice dbo:endDate ?endDate .

  FILTER (
    EXISTS {
      ?governorshipRole dbo:startDate ?startGovernorship .
      ?governorshipRole dbo:endDate ?endGovernorship .
      # Ensure the governorship period overlaps with the PM's term
      (FILTER (?startGovernorship <= ?endDate && ?endGovernorship >= ?startDate))
    }
  )
}
```",1,1,2,1,1,3,3,71,0,0,49,0,0.0,0
791,6,train,Give me the child of Emperor Takakura.,SELECT ?result WHERE { ?result <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Emperor_Takakura> . },"```sparql
SELECT ?child WHERE {
  # Find Emperor Takakura and his child
  ?takakura dbo:child ?child .
  ?takakura rdfs:label ""Emperor Takakura""@en .
}
```",1,1,2,1,1,3,3,71,2,0,1,1.0,0.6666666666666666,0.8
582,24,train,"Give me the figure known as --10-19 and player in the father, that is an athlete and a soccer manager and a sports manager, of Masami Nagasawa.","SELECT ?result WHERE { ?result <http://dbpedia.org/property/nickname> ""--10-19""^^<http://www.w3.org/2001/XMLSchema#gMonthDay> . ?v2 <http://dbpedia.org/ontology/team> ?result . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Athlete>. <http://dbpedia.org/resource/Masami_Nagasawa> <http://dbpedia.org/property/father> ?v2 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerManager>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsManager>. }","```sparql
SELECT ?father WHERE {
  # Find Masami Nagasawa and her father
  ?nagasawa dbo:parent ?father .
  ?nagasawa rdfs:label ""Masami Nagasawa""@en .

  # Ensure the father is an athlete, soccer manager, and sports manager
  ?father rdf:type ?type1 .
  ?father rdf:type ?type2 .
  ?father rdf:type ?type3 .

  FILTER (
    (str(?type1) = str(dbo:Athlete)) &&
    (str(?type2) = str(dbo:SoccerManager)) &&
    (str(?type3) = str(dbo:SportsManager))
  )
}
```",3,6,4,2,2,3,3,71,0,0,1,0,0.0,0
98,7,train,Give me the region of Philippine Standard Time and entity in Philippines.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Philippines> . ?result <http://dbpedia.org/ontology/timeZone> <http://dbpedia.org/resource/Philippine_Standard_Time> . },"```sparql
SELECT ?pstRegion ?entity WHERE {
  # Find Philippine Standard Time and its associated region
  ?pst dbo:timeZone ""Philippine Standard Time"" .
  ?pst dbo:region ?pstRegion .

  # Find an entity in the Philippines
  ?entity dbo:country dbr:Philippines .
}
```",2,2,3,1,2,2,3,28,0,0,1743,0,0.0,0
465,13,train,"Give me the spouse of the child, that is a royalty, of Ferdinand I, Holy Roman Emperor.","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/spouse> ?v1 . <http://dbpedia.org/resource/Ferdinand_I,_Holy_Roman_Emperor> <http://dbpedia.org/ontology/child> ?v1 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. }","```sparql
SELECT ?child ?spouse WHERE {
  # Find Ferdinand I and his children
  ?ferdinand dbo:child ?child .
  ?ferdinand rdfs:label ""Ferdinand I, Holy Roman Emperor""@en .

  # For each child, find their spouse
  OPTIONAL { 
    ?child dbo:spouse ?spouse .
  }
}
```",2,3,3,2,1,3,3,71,5,17,2,0.22727272727272727,0.7142857142857143,0.3448275862068965
839,29,train,Give me the band of the member of Böhse Onkelz and band of Matthias Röhr and band of Kevin Russell (musician).,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/bandMember> <http://dbpedia.org/resource/Matthias_Röhr> . <http://dbpedia.org/resource/Böhse_Onkelz> <http://dbpedia.org/ontology/bandMember> ?v3 . <http://dbpedia.org/resource/Kevin_Russell_(musician)> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?result <http://dbpedia.org/ontology/bandMember> ?v3 . },"```sparql
# Query for a member of Böhse Onkelz and their associated band
SELECT ?member ?currentBand WHERE {
  # Find a member of Böhse Onkelz
  ?boMember dbo:memberOfBand <http://dbpedia.org/resource/Böhse_Onkelz> .
  
  # Get the current or past band of this member
  ?boMember dbo:band ?currentBand .
}

# Query for Matthias Röhr and his associated band
SELECT ?matthiasRohrBand WHERE {
  ?matthiasRohr foaf:name ""Matthias Röhr""@en .
  
  # Get the band associated with Matthias Röhr
  ?matthiasRohr dbo:band ?matthiasRohrBand .
}

# Query for Kevin Russell (musician) and his associated band
SELECT ?kevinRussellBand WHERE {
  ?kevinRussell foaf:name ""Kevin Russell""@en .
  
  # Get the band associated with Kevin Russell
  ?kevinRussell dbo:band ?kevinRussellBand .
}
```",4,4,5,2,3,3,3,71,0,0,1,0,0.0,0
987,39,train,"Give me the entity in the region, that is a country, of the time zone, that is a sports event, in Canicosa de la Sierra and birth place of Moamer Kasumović.",SELECT ?result WHERE { ?v0 <http://dbpedia.org/property/timeZone> ?v2 . ?result <http://dbpedia.org/ontology/country> ?v0 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. <http://dbpedia.org/resource/Canicosa_de_la_Sierra> <http://dbpedia.org/ontology/timeZone> ?v2 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsEvent>. <http://dbpedia.org/resource/Moamer_Kasumović> <http://dbpedia.org/ontology/birthPlace> ?result . },"```sparql
SELECT ?country WHERE {
  # Step 1: Find Canicosa de la Sierra's time zone
  ?canicosa dbo:timeZone ?timezone .
  ?canicosa rdfs:label ""Canicosa de la Sierra""@en .

  # Step 2: Identify sports events in this time zone
  ?event dbo:locationTimezone ?timezone ;
         a dbo:SportsEvent .

  # Step 3: Determine the region or country of this time zone
  ?timezone dbo:country ?regionCountry .
  
  # Step 4: Find Moamer Kasumović's birthplace
  ?kasumovic dbo:birthPlace ?birthPlace .
  ?kasumovic rdfs:label ""Moamer Kasumović""@en .

  # Step 5: Match the region country with Moamer Kasumović’s birthplace if it is a country
  FILTER (?regionCountry = ?birthPlace)
  FILTER (isBlank(?regionCountry) || ?regionCountry a dbo:Country)
}
```",4,6,5,3,2,3,3,71,0,0,1,0,0.0,0
102,2,train,"Give me the member, that is a soccer player, of England women's national football team.",SELECT ?result WHERE { ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerPlayer>. ?result <http://dbpedia.org/ontology/team> <http://dbpedia.org/resource/England_women's_national_football_team> . },"```sparql
SELECT ?player WHERE {
  # Find players who are members of England Women's National Football Team
  ?team dbo:member ?player .
  
  # Ensure the team is specifically the England women's national football team
  ?team rdfs:label ""England women's national football team""@en .

  # Optionally, ensure that the player is associated with soccer
  OPTIONAL { 
    ?player dbo:sport dbr:Soccer .
  }
}
```",1,2,2,1,1,3,2,20,0,0,147,0,0.0,0
865,26,train,"Give me the father of the child, that is a politician, of the spouse of Syeda Shahar Banu.",SELECT ?result WHERE { ?v1 <http://dbpedia.org/property/father> ?v0 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. <http://dbpedia.org/resource/Syeda_Shahar_Banu> <http://dbpedia.org/ontology/spouse> ?v0 . ?v1 <http://dbpedia.org/property/father> ?result . },"```sparql
SELECT ?father WHERE {
  # Identify Syeda Shahar Banu and her spouse
  ?shaharBanu dbo:spouse ?spouse .
  ?shaharBanu rdfs:label ""Syeda Shahar Banu""@en .

  # Find a child of the spouse who is a politician
  OPTIONAL {
    ?child dbo:parent ?spouse ;
           rdf:type dbo:Politician .
  }

  # Identify the father of this politician child
  OPTIONAL {
    ?child dbo:parent ?father .
  }
}
```",3,4,4,3,1,3,3,71,0,33501,1,0.0,0.0,0
41,18,train,"Give me the party of the work, that is an office holder, of yes and party of Declan Costello.","SELECT ?result WHERE { ?v1 <http://dbpedia.org/property/author> ""yes""@en . <http://dbpedia.org/resource/Declan_Costello> <http://dbpedia.org/ontology/party> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v1 <http://dbpedia.org/ontology/party> ?result . }","```sparql
SELECT ?personLabel ?partyLabel WHERE {
  # Find Yes and his political party
  OPTIONAL {
    ?yes dbo:officeHolder ?office .
    ?yes rdfs:label ""Yes""@en .
    ?office dbo:party ?party .
    BIND(""Yes"" AS ?personLabel)
  }
  
  # Find Declan Costello and his political party
  OPTIONAL {
    ?declanCostello dbo:officeHolder ?office .
    ?declanCostello rdfs:label ""Declan Costello""@en .
    ?office dbo:party ?party .
    BIND(""Declan Costello"" AS ?personLabel)
  }
  
  # Bind the party label
  ?party rdfs:label ?partyLabel .
}
```",3,4,4,2,2,2,3,28,0,0,1,0,0.0,0
978,7,train,"Give me the band member of the professional, that is a musical artist and an artist, in .","SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?result <http://dbpedia.org/ontology/associatedMusicalArtist> ?v1 . ?v1 <http://dbpedia.org/property/occupation> """"@en . }","```sparql
SELECT ?bandMember WHERE {
  # Identify David Bowie and his association with bands
  ?bowie dbo:memberOfBand ?band .
  ?bowie rdfs:label ""David Bowie""@en .

  # Find band members associated with the same band
  ?band dbo:member ?bandMember .
}
```",2,4,3,2,1,3,2,20,0,0,9007,0,0.0,0
18,0,train,Give me the professional in .,"SELECT ?result WHERE { ?result <http://dbpedia.org/property/occupation> """"@en . }","```sparql
# Placeholder for when a specific person is provided.
SELECT ?profession WHERE {
  # Example: Replace ""Albert Einstein"" with the desired individual's name.
  ?person rdfs:label ""Albert Einstein""@en .
  ?person dbo:occupation ?profession .
}
```",1,1,2,1,1,2,3,28,0,0,39640,0,0.0,0
453,5,train,"Give me the religion of the birth place, that is a country, of William Denning.",SELECT ?result WHERE { <http://dbpedia.org/resource/William_Denning> <http://dbpedia.org/ontology/birthPlace> ?v1 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. ?v1 <http://dbpedia.org/ontology/religion> ?result . },"```sparql
SELECT ?religion WHERE {
  # Find William Denning's place of birth
  ?denning dbo:birthPlace ?placeOfBirth .
  ?denning rdfs:label ""William Denning""@en .

  # Ensure the place of birth is a country
  ?placeOfBirth rdf:type dbo:Country .

  # Retrieve the predominant religion of this country
  ?placeOfBirth dbo:religion ?religion .
}
```",2,3,3,2,1,2,2,9,1,0,0,1.0,1.0,1.0
573,38,train,"Give me the parent of the author, that is a politician and an office holder, of Exchequer Standards and person decedent at the residence, that is a settlement, of William J. Phelan.",SELECT ?result WHERE { ?v2 <http://dbpedia.org/ontology/parent> ?result . <http://dbpedia.org/resource/William_J._Phelan> <http://dbpedia.org/property/residence> ?v3 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. ?result <http://dbpedia.org/ontology/deathPlace> ?v3 . <http://dbpedia.org/resource/Exchequer_Standards> <http://dbpedia.org/property/author> ?v2 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. },"```sparql
SELECT ?parent WHERE {
  # Find author of Exchequer Standards
  ?author dbo:work ?exchequerStandards .
  ?exchequerStandards rdfs:label ""Exchequer Standards""@en .

  # Ensure the author has a parent who is both a politician and an office holder
  ?author dbo:parent ?parent .
  ?parent rdf:type dbo:Politician ;
          dbo:officeHolder true .

  # Find William J. Phelan's residence, ensuring it is a settlement
  ?phelan dbo:residence ?residence .
  ?phelan rdfs:label ""William J. Phelan""@en .
  ?residence rdf:type dbo:Settlement .

  # Identify person decedent at the residence
  OPTIONAL {
    ?decedent dbo:placeOfDeath ?residence .
  }
}
```",4,7,5,2,2,3,3,71,0,0,2,0,0.0,0
459,9,train,Give me the person born as John Kevin Stitt and governor of Dana Murphy.,"SELECT ?result WHERE { ?result <http://dbpedia.org/property/birthName> ""John Kevin Stitt""@en . <http://dbpedia.org/resource/Dana_Murphy> <http://dbpedia.org/property/governor> ?result . }","```sparql
SELECT ?person WHERE {
  # Find the person born as John Kevin Stitt
  ?person dbo:birthName ""John Kevin Stitt"" .
  
  # Check if this person is a governor and has an association with Dana Murphy
  OPTIONAL { 
    ?person dbo:governmentRole ?role .
    FILTER (CONTAINS(LCASE(str(?role)), ""governor""))
    
    ?person dbo:advisor ?danaMurphy .
    ?danaMurphy rdfs:label ""Dana Murphy""@en .
  }
}
```",2,2,3,1,2,2,3,28,0,0,1,0,0.0,0
93,5,train,Who is the governor of Bob Bartlett?,SELECT ?result WHERE { <http://dbpedia.org/resource/Bob_Bartlett> <http://dbpedia.org/property/governor> ?result . },"```sparql
SELECT ?governor WHERE {
  # Find Bob Bartlett and his associated region (Alaska)
  ?bartlett dbo:birthPlace dbr:Alaska .
  ?bartlett rdfs:label ""Bob Bartlett""@en .

  # Find the governors of Alaska during Bob Bartlett's tenure
  ?alaska dbo:governor ?governor .
  ?alaska rdfs:label ""Alaska""@en .
  
  # Filter for time period when Bob Bartlett was active (1959-1983)
  OPTIONAL {
    ?governor dbo:termStart ?start .
    ?governor dbo:termEnd ?end .
    FILTER (?start <= ""1983-01-01""^^xsd:date && ?end >= ""1959-01-03""^^xsd:date)
  }
}
```",1,1,2,1,1,3,2,20,0,0,2,0,0.0,0
329,4,train,"Give me the region, that is a country, of Western European Time.",SELECT ?result WHERE { ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. ?result <http://dbpedia.org/property/timeZone> <http://dbpedia.org/resource/Western_European_Time> . },"```sparql
SELECT ?country WHERE {
  ?country dbo:timeZone ?tz .
  ?tz rdfs:label ""Western European Time""@en .
  ?country a dbo:Country .
}
```",1,2,2,1,1,2,3,28,6,2,0,0.75,1.0,0.8571428571428571
216,15,train,Give me the office of the mayor of Ros Bates and administration of .,"SELECT ?result WHERE { ?result <http://dbpedia.org/property/leader> """"@en . <http://dbpedia.org/resource/Ros_Bates> <http://dbpedia.org/property/leader> ?v1 . ?v1 <http://dbpedia.org/property/office> ?result . }","```sparql
SELECT ?office ?administration WHERE {
  ?rosBates rdfs:label ""Ros Bates""@en .
  
  OPTIONAL { 
    ?rosBates dbo:office ?office .
  }
  
  OPTIONAL {
    ?rosBates dbo:administration ?administration .
  }
}
```",3,3,4,2,2,2,3,28,0,0,1,0,0.0,0
47,26,train,"Give me the office of the awardee of the award, that is an award, of Mantu Ghosh.",SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Award>. <http://dbpedia.org/resource/Mantu_Ghosh> <http://dbpedia.org/property/awards> ?v1 . ?v2 <http://dbpedia.org/property/office> ?result . ?v2 <http://dbpedia.org/property/awards> ?v1 . },"```sparql
SELECT DISTINCT ?office WHERE {
  # Step 1: Identify Mantu Ghosh
  ?mantuGhosh rdfs:label ""Mantu Ghosh""@en .
  
  # Step 2: Find awards received by Mantu Ghosh
  ?mantuGhosh dbo:awardReceived ?award .

  # Step 3: Find other awardees of the same award
  ?otherAwardee dbo:awardReceived ?award .
  FILTER (?mantuGhosh != ?otherAwardee)

  # Step 4: Retrieve offices held by these awardees
  ?otherAwardee dbo:officeHeld ?office .
}
```",3,4,4,3,1,3,3,71,0,0,1,0,0.0,0
715,21,train,"Give me the commander in the force, that is a military conflict, of Abd el-Krim and leader of Ministry of the Air (Spain).",SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Abd_el-Krim> . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. <http://dbpedia.org/resource/Ministry_of_the_Air_(Spain)> <http://dbpedia.org/ontology/leader> ?result . ?v1 <http://dbpedia.org/ontology/commander> ?result . },"```sparql
SELECT ?person WHERE {
  # Find commander in a conflict with Abd el-Krim
  ?conflict dbo:commander ?person .
  ?conflict dbo:participant ""Abd el-Krim""@en .

  # Find leader of Ministry of the Air (Spain)
  OPTIONAL {
    ?ministry dbo:leader ?person .
    ?ministry rdfs:label ""Ministry of the Air (Spain)""@en .
  }
}
```",3,4,4,2,2,3,3,71,0,0,1,0,0.0,0
715,20,train,Give me the commander in the force of Francisco Largo Caballero and commander in Rif War.,SELECT ?result WHERE { ?v2 <http://dbpedia.org/ontology/commander> ?result . <http://dbpedia.org/resource/Rif_War> <http://dbpedia.org/ontology/commander> ?result . ?v2 <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Francisco_Largo_Caballero> . },"```sparql
SELECT ?commanderLargoCaballero ?rifWarCommander WHERE {
  # Find commander associated with Francisco Largo Caballero
  ?largoCaballero dbo:spouseOrPartner ?commanderLargoCaballero .
  ?largoCaballero rdfs:label ""Francisco Largo Caballero""@en .

  # Find a notable commander in the Rif War
  ?rifWarCommander dbo:wikiPageWikiLink ?rifWar .
  ?rifWar rdfs:label ""Rif War""@en .
  
  # Assuming commanders are linked to their respective wars or roles
  OPTIONAL {
    ?rifWarCommander dbo:spouseOrPartner ?rifWarLeader .
    FILTER (regex(str(?rifWarLeader), ""Abd el-Krim"", ""i""))
  }
}
```",3,3,4,2,2,3,3,71,0,0,4,0,0.0,0
459,4,train,"Who is the administration, that is a politician, of Brad Henry?",SELECT ?result WHERE { ?result <http://dbpedia.org/property/governor> <http://dbpedia.org/resource/Brad_Henry> . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. },"```sparql
SELECT ?administration WHERE {
  ?bradHenry dbo:positionHeld ?administration .
  ?bradHenry rdfs:label ""Brad Henry""@en .
  FILTER (regex(str(?administration), ""Governor"", ""i""))
}
```",1,2,2,1,1,2,3,28,0,0,30,0,0.0,0
582,17,train,"Give me the nickname of the team, that is an organisation, of Hajime Moriyasu.",SELECT ?result WHERE { ?v1 <http://dbpedia.org/property/nickname> ?result . ?v1 <http://dbpedia.org/ontology/coach> <http://dbpedia.org/resource/Hajime_Moriyasu> . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. },"```sparql
SELECT ?nickname WHERE {
  # Find Hajime Moriyasu and his associated team
  ?person rdfs:label ""Hajime Moriyasu""@en .
  
  # Identify the organization (team) he is affiliated with
  ?person dbo:employee ?organization .
  
  # Retrieve the nickname of the organization
  OPTIONAL {
    ?organization rdfs:label ?nickname .
    FILTER (regex(str(?nickname), ""Team M"", ""i"") || regex(str(?nickname), ""Samurai Blue"", ""i""))
  }
}
```",2,3,3,2,1,3,3,71,0,0,1,0,0.0,0
456,25,train,"Give me the band of the band, that is a musical artist, of Dean Brody and professional in .","SELECT ?result WHERE { ?result <http://dbpedia.org/property/occupation> """"@en . ?v1 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. <http://dbpedia.org/resource/Dean_Brody> <http://dbpedia.org/ontology/associatedMusicalArtist> ?v1 . }","```sparql
SELECT ?bandOfTheBand WHERE {
  # Find Dean Brody and his associated band
  ?deanBrody dbo:associatedBand ?band .
  ?deanBrody rdfs:label ""Dean Brody""@en .

  # Ensure the band is a musical artist
  ?band rdf:type dbo:MusicalArtist .

  # Check if this band is part of another larger band or group (the band of the band)
  OPTIONAL {
    ?band dbo:associatedBand ?bandOfTheBand .
    ?bandOfTheBand rdf:type dbo:MusicalArtist .
  }
}
```",3,4,4,2,2,3,3,71,0,1,1,0.0,0.0,0
281,10,train,"Give me the awardee of the award, that is a military conflict, of Lawrence Moore Cosgrave.",SELECT ?result WHERE { ?result <http://dbpedia.org/property/awards> ?v1 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. <http://dbpedia.org/resource/Lawrence_Moore_Cosgrave> <http://dbpedia.org/property/awards> ?v1 . },"```sparql
SELECT ?awardee WHERE {
  # Find Lawrence Moore Cosgrave and his awards
  ?cosgrave dbo:awardReceived ?award .
  ?cosgrave rdfs:label ""Lawrence Moore Cosgrave""@en .

  # Check if the award is related to a military conflict
  OPTIONAL { 
    ?award dbo:relatedToMilitaryConflict ?conflict .
  }

  # Find other awardees of this award
  ?award dbo:awardee ?awardee .
}
```",2,3,3,2,1,2,3,28,0,0,656,0,0.0,0
874,13,train,"Give me the band of the writer, that is an artist and a musical artist, of the work, that is a work, of Horace Andy.",SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. ?v0 <http://dbpedia.org/property/writer> <http://dbpedia.org/resource/Horace_Andy> . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?result <http://dbpedia.org/ontology/bandMember> ?v1 . ?v0 <http://dbpedia.org/property/writer> ?v1 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. },"```sparql
SELECT DISTINCT ?band WHERE {
  # Identify Horace Andy as a subject
  ?horaceAndy dbo:genre dbc:Musical_Artists ;
              rdfs:label ""Horace Andy""@en .

  # Find works related to Horace Andy that are categorized under ""work""
  ?work dbo:creator ?horaceAndy ;
        rdf:type dbo:Work .
  
  # Determine if there is a writer for these works who is both an artist and a musical artist
  OPTIONAL {
    ?writer dbo:worksForCreativeWork ?work ;
            rdf:type dbo:Artist, dbo:MusicalArtist .
    
    # Retrieve the band associated with this writer
    ?band dbo:member ?writer .
  }
}
```",3,6,4,3,1,3,2,20,0,0,6,0,0.0,0
41,16,train,"Give me the party of the work, that is an office holder, of yes and party of Mark Durkan.","SELECT ?result WHERE { ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v0 <http://dbpedia.org/property/author> ""yes""@en . ?v0 <http://dbpedia.org/ontology/party> ?result . <http://dbpedia.org/resource/Mark_Durkan> <http://dbpedia.org/ontology/party> ?result . }","```sparql
SELECT ?yesParty ?durkanParty WHERE {
  # Find the political parties associated with the ""Yes"" campaign in the EU referendum
  OPTIONAL {
    ?campaign dbo:party ?yesParty .
    ?campaign rdfs:label ""Remain""@en .
  }

  # Find Mark Durkan's party
  ?durkan dbo:politicalAffiliation ?durkanParty ;
          foaf:name ""Mark Durkan"" .
}
```",3,4,4,2,2,2,3,28,0,0,1,0,0.0,0
508,14,train,"Give me the birthplace of the commander, that is Saudi, in the war, that is a military conflict and a societal event, of Hu Yukun.",SELECT ?result WHERE { ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v2 <http://dbpedia.org/ontology/commander> ?v0 . ?v0 <http://dbpedia.org/ontology/birthPlace> ?result . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?v0 <http://dbpedia.org/ontology/nationality> <http://dbpedia.org/resource/Saudi_Arabia>. <http://dbpedia.org/resource/Hu_Yukun> <http://dbpedia.org/ontology/battle> ?v2 . },"```sparql
SELECT ?birthPlace WHERE {
  # Find Hu Yukun's involvement in a war
  ?huYukun dbo:involvedInMilitaryConflict ?war .
  ?huYukun rdfs:label ""Hu Yukun""@en .

  # Identify the war as both a military conflict and societal event
  ?war rdf:type dbo:MilitaryConflict ;
       rdf:type dbo:SocietalEvent .

  # Find commanders involved in this war
  ?commander dbo:involvedInMilitaryConflict ?war .
  
  # Filter for Saudi nationality
  ?commander dbo:nationality dbr:Saudi_Arabia .

  # Get the birthplace of the commander
  ?commander dbo:birthPlace ?birthPlace .
}
```",3,6,4,3,1,3,2,20,0,0,3,0,0.0,0
47,10,train,Give me the office of Suvendu Adhikari and office of Ajoy Mukherjee.,SELECT ?result WHERE { <http://dbpedia.org/resource/Suvendu_Adhikari> <http://dbpedia.org/property/office> ?result . <http://dbpedia.org/resource/Ajoy_Mukherjee> <http://dbpedia.org/property/office> ?result . },"```sparql
SELECT ?person ?office WHERE {
  # Find Suvendu Adhikari's office
  OPTIONAL { 
    ?suvendu dbo:office ?office .
    ?suvendu rdfs:label ""Suvendu Adhikari""@en .
  }
  
  # Find Ajoy Mukherjee's office
  OPTIONAL {
    ?ajoy dbo:office ?office .
    ?ajoy rdfs:label ""Ajoy Mukherjee""@en .
  }
}
```",2,2,3,1,2,3,3,71,0,0,1,0,0.0,0
93,12,train,Give me the death place of the governor of Bob Bartlett and capital of Alaska.,SELECT ?result WHERE { ?v0 <http://dbpedia.org/ontology/deathPlace> ?result . <http://dbpedia.org/resource/Bob_Bartlett> <http://dbpedia.org/property/governor> ?v0 . <http://dbpedia.org/resource/Alaska> <http://dbpedia.org/ontology/capital> ?result . },"```sparql
SELECT ?deathPlace (dbpedia:Alaska dbo:capitalCity ?capital) WHERE {
  # Find Bob Bartlett's death place
  ?bobBartlett rdfs:label ""Bob Bartlett""@en .
  ?bobBartlett dbo:deathPlace ?deathPlace .

  # Get the capital of Alaska
  dbpedia:Alaska dbo:capitalCity ?capital .
}
```",3,3,4,2,2,3,2,20,0,0,1,0,0.0,0
955,10,train,"Who is the band member, that is a musical artist and an artist, of the reference, that is a band and a group and an organisation, to Street Dogs?","SELECT ?result WHERE { ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?v0 <http://xmlns.com/foaf/0.1/name> ""Street Dogs""@en . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Group>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Band>. ?result <http://dbpedia.org/ontology/associatedMusicalArtist> ?v0 . }","```sparql
SELECT ?member WHERE {
  # Identify Street Dogs as a band, group, or organization
  ?band rdfs:label ""Street Dogs""@en .
  ?band rdf:type ?type .
  FILTER (
    ?type = dbpedia-owl:Band ||
    ?type = dbpedia-ontology:Group ||
    ?type = dbpedia-owl:Organization
  )

  # Find members of the band who are musical artists and artists
  ?band dbo:musicalArtist ?member .
  ?member rdf:type ?artistType .
  FILTER (
    ?artistType = dbpedia-owl:MusicalArtist &&
    ?member dbo:artist true
  )
}
```",2,7,3,2,1,3,2,20,0,0,2,0,0.0,0
465,5,train,Give me the parent of Elizabeth of Austria (1526–1545).,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Elizabeth_of_Austria_(1526–1545)> . },"```sparql
SELECT ?parent WHERE {
  ?elizabeth dbo:birthDate ?birth .
  ?elizabeth dbo:deathDate ?death .
  ?elizabeth rdfs:label ""Elizabeth of Austria""@en .
  FILTER (?birth = ""1526-06-15""^^xsd:date && ?death = ""1545-02-14""^^xsd:date)
  
  ?elizabeth dbo:parent ?parent .
}
```",1,1,2,1,1,3,3,71,0,0,2,0,0.0,0
329,2,train,Give me the entity in Northern Ireland.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Northern_Ireland> . },"```sparql
SELECT ?entity WHERE {
  ?entity dbo:location dbc:Northern_Ireland .
  FILTER (regex(str(?entity), ""Belfast"", ""i""))
}
```

This query selects entities (`?entity`) that have a location property pointing to Northern Ireland. The filter ensures we specifically retrieve information related to Belfast.",1,1,2,1,1,2,3,28,0,0,846,0,0.0,0
933,9,train,Give me the band of Mike Elliott (saxophonist) and reference to Alan Warner.,"SELECT ?result WHERE { ?result <http://xmlns.com/foaf/0.1/name> ""Alan Warner""@en . <http://dbpedia.org/resource/Mike_Elliott_(saxophonist)> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . }","```sparql
SELECT ?band ?reference WHERE {
  # Find Mike Elliott as a saxophonist
  ?mikeElliott dbo:instrument dbr:Saxophone ;
               rdfs:label ""Mike Elliott (saxophonist)""@en .
  
  # Identify the band he is associated with
  ?mikeElliott dbo:member ?band .

  # Find any reference to Alan Warner related to this band
  OPTIONAL {
    ?reference dbo:subject ?band ;
               dbo:author dbr:Alan_Warner .
  }
}
```",2,2,3,1,2,3,3,71,0,0,1,0,0.0,0
917,4,train,"Who is the child, that is a royalty, of Kamehameha IV?",SELECT ?result WHERE { ?result <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Kamehameha_IV> . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. },"```sparql
SELECT ?child WHERE {
  # Identify Kamehameha IV and his children
  ?kamehamehaIV dbo:parent ?child .
  ?kamehamehaIV rdfs:label ""Kamehameha IV""@en .

  # Ensure the child is royalty, typically indicated by a title or role
  OPTIONAL {
    ?child dbo:title ?title .
    FILTER (regex(str(?title), ""King|Queen|Prince|Princess"", ""i""))
  }
}
```",1,2,2,1,1,3,3,71,0,2,1,0.0,0.0,0
933,36,train,"Give me the band of the band, that is a group and a band and an organisation, of the person born, that is a musical artist, on 1947-04-21 and band of Mike Elliott (saxophonist).","SELECT ?result WHERE { ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Band>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. <http://dbpedia.org/resource/Mike_Elliott_(saxophonist)> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v3 <http://dbpedia.org/ontology/associatedMusicalArtist> ?v0 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Group>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?v3 <http://dbpedia.org/ontology/birthDate> ""1947-04-21""^^<http://www.w3.org/2001/XMLSchema#date> . ?v0 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . }","```sparql
SELECT DISTINCT ?commonBand WHERE {
  # Step 1: Find the musical artist born on 1947-04-21
  ?artist dbo:birthDate ""1947-04-21""^^xsd:date ;
          rdf:type dbo:MusicalArtist .

  # Step 2: Find bands associated with this artist
  ?artist dbo:bandMember ?band1 .
  
  # Step 3: Ensure the band is a group, band, and organization
  ?band1 rdf:type dbo:Band ;
         rdf:type dbo:Organization ;
         rdf:type dbo:MusicalGroup .

  # Step 4: Find Mike Elliott (saxophonist) and his band
  ?mikeElliott rdfs:label ""Mike Elliott (saxophonist)""@en .
  ?mikeElliott dbo:bandMember ?band2 .

  # Step 5: Ensure the band is a group, band, and organization
  ?band2 rdf:type dbo:Band ;
         rdf:type dbo:Organization ;
         rdf:type dbo:MusicalGroup .

  # Step 6: Find common band between the artist and Mike Elliott
  FILTER (?band1 = ?commonBand && ?band2 = ?commonBand)
}
```",4,8,5,3,2,3,3,71,0,0,3,0,0.0,0
715,36,train,"Give me the commander in Rif War and leader of the office, that is a government agency and an organisation, of the reference to Carlos Franco Iribarnegaray.","SELECT ?result WHERE { ?v0 <http://xmlns.com/foaf/0.1/name> ""Carlos Franco Iribarnegaray""@en . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?v0 <http://dbpedia.org/property/office> ?v1 . <http://dbpedia.org/resource/Rif_War> <http://dbpedia.org/ontology/commander> ?result . ?v1 <http://dbpedia.org/ontology/leader> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/GovernmentAgency>. }","```sparql
SELECT ?commander ?leader WHERE {
  # Find information about Carlos Franco Iribarnegaray and his leadership role
  ?franco a dbo:Person ;
          rdfs:label ""Carlos Franco Iribarnegaray""@en .
  
  OPTIONAL {
    ?franco dbo:positionHeld ?office .
    ?office a dbo:GovernmentAgency ; # or dbo:Organization
            dbo:leader ?leader .
  }
  
  # Find the commander of the Rif War
  ?rifWar dbo:commander ?commander ;
          rdfs:label ""Rif War""@en .

  # Link Carlos Franco Iribarnegaray to the Rif War if applicable
  OPTIONAL {
    ?franco dbo:relatedTo ?rifWar .
  }
}
```",4,6,5,3,2,3,3,71,1,21,0,0.045454545454545456,1.0,0.08695652173913045
865,20,train,"Give me the father of the child, that is a politician, of Abu Ahmad Abdul Hafiz and native of British Raj.",SELECT ?result WHERE { ?v2 <http://dbpedia.org/property/father> ?result . ?v2 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Abu_Ahmad_Abdul_Hafiz> . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?result <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/British_Raj> . },"```sparql
SELECT ?father WHERE {
  # Find Abu Ahmad Abdul Hafiz
  ?abuHafiz rdfs:label ""Abu Ahmad Abdul Hafiz""@en .
  
  # Identify his child who is a politician and native of British Raj
  ?child dbo:parent ?abuHafiz ;
         dbo:nationality dbc:British_Raj ;
         dbo:occupation dbc:Politician .

  # Find the father of this identified child
  ?child dbo:parent ?father .
}
```",3,4,4,2,2,3,3,71,0,0,1,0,0.0,0
459,7,train,Give me the person born as John Kevin Stitt and governor of Oklahoma.,"SELECT ?result WHERE { <http://dbpedia.org/resource/Oklahoma> <http://dbpedia.org/property/governor> ?result . ?result <http://dbpedia.org/property/birthName> ""John Kevin Stitt""@en . }","```sparql
SELECT ?person WHERE {
  ?person dbo:birthName ""John Kevin Stitt""@en .
  ?person dbo:governmentPosition ?position .
  ?position rdfs:label ""Governor of Oklahoma""@en .
}
```",2,2,3,1,2,2,3,28,0,0,1,0,0.0,0
281,18,train,Give me the awardee of the award of Alfred Warden and awardee of Medal bar.,SELECT ?result WHERE { ?result <http://dbpedia.org/property/awards> ?v2 . <http://dbpedia.org/resource/Alfred_Warden> <http://dbpedia.org/property/awards> ?v2 . ?result <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/Medal_bar> . },"```sparql
# Query for Awardee of the Award of Alfred Warden
SELECT ?awardee WHERE {
  ?award rdfs:label ""Award of Alfred Warden""@en .
  ?award dbo:recipient ?awardee .
}

# Query for Awardee of Medal bar
SELECT ?awardee WHERE {
  ?medal rdfs:label ""Medal bar""@en .
  ?medal dbo:recipient ?awardee .
}
```",3,3,4,2,2,2,3,28,0,0,1,0,0.0,0
917,13,train,Give me the child of the father of Keʻelikōlani.,SELECT ?result WHERE { <http://dbpedia.org/resource/Keʻelikōlani> <http://dbpedia.org/property/father> ?v1 . ?result <http://dbpedia.org/ontology/parent> ?v1 . },"```sparql
SELECT ?child WHERE {
  # Step 1: Identify Keʻelikōlani and her father
  ?keelikolani dbo:parent ?father .
  ?keelikolani rdfs:label ""Keʻelikōlani""@en .

  # Step 2: Find any child of this father
  ?child dbo:parent ?father .
}
```",2,2,3,2,1,3,3,71,6,0,0,1.0,1.0,1.0
579,9,train,"Give me the residence, that is English and a settlement, of the resident of Scotland.",SELECT ?result WHERE { ?v0 <http://dbpedia.org/property/residence> ?result . ?result <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/United_Kingdom>. ?v0 <http://dbpedia.org/ontology/residence> <http://dbpedia.org/resource/Scotland> . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. },"```sparql
SELECT ?residence WHERE {
  # Identify Queen Elizabeth II as a resident of Scotland
  ?queen dbo:birthPlace dbr:Scottish_Border .
  ?queen rdfs:label ""Elizabeth II""@en .

  # Find her residence in England that is also a settlement
  ?queen dbo:residence ?residence .
  ?residence dbo:country dbr:England .
  ?residence rdf:type dbo:Settlement .
}
```",2,4,3,2,1,3,2,20,0,0,8,0,0.0,0
865,31,train,"Give me the native of the residence, that is a country, of the person decedent at Patna and father of AK Abdul Momen.",SELECT ?result WHERE { ?v1 <http://dbpedia.org/property/residence> ?v0 . ?v1 <http://dbpedia.org/ontology/deathPlace> <http://dbpedia.org/resource/Patna> . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. ?result <http://dbpedia.org/ontology/birthPlace> ?v0 . <http://dbpedia.org/resource/AK_Abdul_Momen> <http://dbpedia.org/property/father> ?result . },"```sparql
SELECT ?nativeCountry WHERE {
  # Step 1: Find AK Abdul Momen's father
  ?momen dbo:father ?father .
  ?momen rdfs:label ""AK Abdul Momen""@en .

  # Step 2: Identify the decedent at Patna associated with this person
  OPTIONAL { 
    ?decedent dbo:placeOfDeath ?patna .
    ?patna rdfs:label ""Patna""@en .
    ?father dbo:associatedWith ?decedent .
  }

  # Step 3: Find the residence of the decedent, ensuring it is a country
  OPTIONAL {
    ?decedent dbo:residence ?residence .
    ?residence rdf:type dbo:Country .
  }
  
  # Step 4: Determine the native country of this residence
  OPTIONAL {
    ?residence dbo:nativeCountry ?nativeCountry .
  }
}
```",4,5,5,3,2,3,3,71,0,0,1,0,0.0,0
456,12,train,Give me the band of Alan Doyle and professional in .,"SELECT ?result WHERE { ?result <http://dbpedia.org/property/occupation> """"@en . <http://dbpedia.org/resource/Alan_Doyle> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . }","```sparql
SELECT ?band ?profession WHERE {
  ?person rdfs:label ""Alan Doyle""@en .
  
  # Find the band Alan Doyle is a member of
  ?person dbo:member ?band .

  # Find Alan Doyle's profession
  ?person dbo:occupation ?profession .
}
```",2,2,3,1,2,3,3,71,0,0,1,0,0.0,0
926,1,train,Give me the successor of Mustafa III.,SELECT ?result WHERE { <http://dbpedia.org/resource/Mustafa_III> <http://dbpedia.org/ontology/successor> ?result . },"```sparql
SELECT ?successor WHERE {
  ?mustafaIII dbo:successor ?successor .
  ?mustafaIII rdfs:label ""Mustafa III""@en .
}
```",1,1,2,1,1,3,3,71,1,0,0,1.0,1.0,1.0
124,27,train,"Give me the military force of the force, that is a societal event and a military conflict, of the person born on 1850-06-24.","SELECT ?result WHERE { ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?result <http://dbpedia.org/ontology/battle> ?v2 . ?v1 <http://dbpedia.org/ontology/birthDate> ""1850-06-24""^^<http://www.w3.org/2001/XMLSchema#date> . ?v2 <http://dbpedia.org/ontology/commander> ?v1 . }","```sparql
SELECT ?forceCharacterization WHERE {
  # Identify Emperor Meiji by birth date
  ?meiji dbo:birthDate ""1850-06-24""^^xsd:date .
  ?meiji rdfs:label ""Emperor Meiji""@en .

  # Find an event that is both societal and military related to Emperor Meiji
  ?event dbo:relatedTo ?meiji ;
         rdf:type dbo:SocietalEvent, dbo:MilitaryConflict .

  # Identify the military force involved in this event
  ?event dbo:militaryForce ?militaryForce .

  # Determine the characteristic of this military force
  ?militaryForce dbo:forceCharacterization ?forceCharacterization .
}
```",3,5,4,3,1,3,3,71,0,0,1190,0,0.0,0
47,20,train,Give me the office of the awardee of Banga Bhushan and office of Suvendu Adhikari.,SELECT ?result WHERE { ?v2 <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/Banga_Bhushan> . <http://dbpedia.org/resource/Suvendu_Adhikari> <http://dbpedia.org/property/office> ?result . ?v2 <http://dbpedia.org/property/office> ?result . },"```sparql
SELECT ?awardeeOffice ?suvenduOffice WHERE {
  # Find the office of the awardee of Banga Bhushan
  ?award dbo:recipient ?awardee .
  ?award rdfs:label ""Banga Bhushan""@en .
  ?awardee dbo:office ?awardeeOffice .

  # Find the office of Suvendu Adhikari
  ?suvendu foaf:name ""Suvendu Adhikari"" .
  ?suvendu dbo:office ?suvenduOffice .
}
```",3,3,4,2,2,3,3,71,0,0,1,0,0.0,0
130,12,train,"Give me the entity in the administration, that is American, of  and figure known as Vanderbilt Commodores.","SELECT ?result WHERE { ?v0 <http://dbpedia.org/property/governor> """"@en . ?v0 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/United_States>. ?result <http://dbpedia.org/ontology/state> ?v0 . ?result <http://dbpedia.org/property/nickname> <http://dbpedia.org/resource/Vanderbilt_Commodores> . }","```sparql
SELECT ?person WHERE {
  # Find administrative figures at Vanderbilt University
  ?person dbo:position ?position .
  ?position dbo:organization dbr:Vanderbilt_University .
  
  # Ensure the person is American
  ?person dbo:nationality dbr:United_States .

  # Association with Vanderbilt Commodores
  OPTIONAL {
    ?commodore dbo:affiliation dbr:Vanderbilt_University .
    ?commodore rdfs:label ""Vanderbilt_Commodores""@en .
    ?person dbo:memberOf ?commodore .
  }
}
```",3,4,4,2,2,3,2,20,0,0,1,0,0.0,0
926,30,train,"Give me the child of the father, that is a royalty, of Mustafa III and successor of Mustafa III and father of Mahmud II.",SELECT ?result WHERE { ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v0 <http://dbpedia.org/ontology/child> ?result . <http://dbpedia.org/resource/Mustafa_III> <http://dbpedia.org/property/father> ?v0 . <http://dbpedia.org/resource/Mahmud_II> <http://dbpedia.org/property/father> ?result . <http://dbpedia.org/resource/Mustafa_III> <http://dbpedia.org/ontology/successor> ?result . },"```sparql
SELECT ?successor WHERE {
  # Identify Mustafa III and his father
  ?mustafaIII dbo:parent ?father .
  ?mustafaIII rdfs:label ""Mustafa III""@en .

  # Find a child of Mustafa III's father who is royalty
  ?child dbo:parent ?father .
  FILTER (regex(str(?child), ""royalty"", ""i""))

  # Ensure this child succeeded Mustafa III as ruler
  OPTIONAL {
    ?mustafaIII dbo:succeededBy ?successor .
  }

  # Verify that the successor is also the father of Mahmud II
  OPTIONAL {
    ?successor dbo:parent ?mahmudII .
    ?mahmudII rdfs:label ""Mahmud II""@en .
  }
}
```",4,5,5,2,3,3,3,71,0,0,1,0,0.0,0
124,25,train,"Give me the military force of Battle of Tamai and military force of the force, that is a societal event and a military conflict, of Herbert Kitchener, 1st Earl Kitchener.","SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?v1 <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Herbert_Kitchener,_1st_Earl_Kitchener> . ?result <http://dbpedia.org/ontology/battle> <http://dbpedia.org/resource/Battle_of_Tamai> . ?result <http://dbpedia.org/ontology/battle> ?v1 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. }","```sparql
SELECT ?battleForce ?kitchenerEventForce WHERE {
  # Military forces involved in the Battle of Tamai
  ?tamai dbo:militaryConflict ?battle .
  ?battle rdfs:label ""Battle of Tamai""@en .
  ?battle dbo:militaryForce ?battleForce .

  # Societal event and military conflict involving Herbert Kitchener
  OPTIONAL {
    ?kitchener dbo:involvedInEvent ?event .
    ?kitchener rdfs:label ""Herbert Kitchener, 1st Earl Kitchener""@en .
    FILTER (regex(str(?event), ""Second Boer War"", ""i""))
    
    # Military force involved in the event
    ?event dbo:militaryForce ?kitchenerEventForce .
  }
}
```",3,5,4,2,2,3,3,71,0,0,4,0,0.0,0
326,3,train,"Give me the birthplace, that is a state and British, of David Jessel.",SELECT ?result WHERE { <http://dbpedia.org/resource/David_Jessel> <http://dbpedia.org/ontology/birthPlace> ?result . ?result <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/United_Kingdom>. ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/AdministrativeRegion>. },"```sparql
SELECT ?birthPlace WHERE {
  # Find David Jessel's birthplace
  ?jessel dbo:birthPlace ?birthPlace .
  ?jessel rdfs:label ""David Jessel""@en .

  # Ensure the birthplace is a state within the United Kingdom
  ?birthPlace rdf:type dbo:State .
  ?birthPlace dbo:country dbc:United_Kingdom .
}
```",1,3,2,1,1,3,2,20,0,0,1,0,0.0,0
645,38,train,"Give me the leader of the office, that is a government agency and an organisation, of Camilo Menéndez Tolosa and military force of the force, that is an event and a military conflict and a societal event, of Francisco Largo Caballero.",SELECT ?result WHERE { ?v3 <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Francisco_Largo_Caballero> . <http://dbpedia.org/resource/Camilo_Menéndez_Tolosa> <http://dbpedia.org/property/office> ?v2 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/GovernmentAgency>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?v2 <http://dbpedia.org/ontology/leader> ?result . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?result <http://dbpedia.org/ontology/battle> ?v3 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. },"```sparql
SELECT ?leaderOfOffice ?militaryForce WHERE {
  # Find Camilo Menéndez Tolosa and the office he led
  ?camilo dbo:head ?office .
  ?camilo rdfs:label ""Camilo Menéndez Tolosa""@en .

  # Ensure the office is a government agency and an organization
  ?office rdf:type dbo:GovernmentAgency ;
          rdf:type dbo:Organization .

  # Find the leader of this office
  ?office dbo:head ?leaderOfOffice .

  # Find Francisco Largo Caballero and his military force involvement
  ?francisco dbo:participatedIn ?event .
  ?francisco rdfs:label ""Francisco Largo Caballero""@en .

  # Ensure the event is a military conflict and societal event
  ?event rdf:type dbo:MilitaryConflict ;
         rdf:type dbo:SocietalEvent .

  # Find the military force associated with these events
  ?event dbo:militaryForce ?militaryForce .
}
```",4,9,5,2,2,3,3,71,0,0,1,0,0.0,0
47,14,train,Give me the office of the awardee of Padma Vibhushan.,SELECT ?result WHERE { ?v1 <http://dbpedia.org/property/office> ?result . ?v1 <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/Padma_Vibhushan> . },"```sparql
SELECT ?awardee ?office WHERE {
  ?award dbo:wikiPageRedirects db:Padma_Vibhushan .
  ?award dbo:recipient ?awardee .
  OPTIONAL { 
    ?awardee dbo:occupation ?office .
  }
}
```",2,2,3,2,1,3,3,71,0,0,77,0,0.0,0
445,26,train,Give me the death place of the awardee of the establishment of 1820-03-10.,"SELECT ?result WHERE { ?v2 <http://dbpedia.org/property/awards> ?v1 . ?v1 <http://dbpedia.org/ontology/foundingDate> ""1820-03-10""^^<http://www.w3.org/2001/XMLSchema#date> . ?v2 <http://dbpedia.org/ontology/deathPlace> ?result . }","```sparql
SELECT ?deathPlace WHERE {
  # Find an event or establishment on 1820-03-10
  ?event dbo:date ""1820-03-10""^^xsd:date ;
         dbo:awardRecipient ?awardee .

  # Get the death place of the awardee
  ?awardee dbo:deathPlace ?deathPlace .
}
```",3,3,4,3,1,3,3,71,0,0,2,0,0.0,0
216,7,train,Give me the administration of  and office of Tim Nicholls.,"SELECT ?result WHERE { ?result <http://dbpedia.org/property/leader> """"@en . <http://dbpedia.org/resource/Tim_Nicholls> <http://dbpedia.org/property/office> ?result . }","```sparql
SELECT ?administration ?office WHERE {
  ?timNicholls rdfs:label ""Tim Nicholls""@en .
  
  # Find administration or political party he was part of
  OPTIONAL { 
    ?timNicholls dbo:memberOf ?administration .
  }
  
  # Find office or position held by Tim Nicholls
  OPTIONAL {
    ?timNicholls dbo:positionHeld ?office .
  }
}
```",2,2,3,1,2,2,3,28,0,0,1,0,0.0,0
192,11,train,"Give me the child of Mary of Hungary, Queen of Naples and spouse of the spouse, that is a royalty, of Charles Martel of Anjou.","SELECT ?result WHERE { ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v2 <http://dbpedia.org/ontology/spouse> ?result . ?v2 <http://dbpedia.org/ontology/spouse> <http://dbpedia.org/resource/Charles_Martel_of_Anjou> . ?result <http://dbpedia.org/ontology/parent> <http://dbpedia.org/resource/Mary_of_Hungary,_Queen_of_Naples> . }","```sparql
SELECT ?childSpouse WHERE {
  # Find Mary of Hungary and her children
  ?mary dbo:parent ?child .
  ?mary rdfs:label ""Mary of Hungary, Queen of Naples""@en .

  # Find the spouse of each child who is royalty
  OPTIONAL { 
    ?child dbo:spouse ?royalSpouse .
    FILTER (regex(str(?royalSpouse), ""Royal"", ""i""))
  }

  # Find the spouse of this royal spouse
  OPTIONAL {
    ?royalSpouse dbo:spouse ?childSpouse .
  }
}
```",3,4,4,2,2,3,2,20,0,0,1,0,0.0,0
874,2,train,"Give me the work, that is a work, of Horace Andy.",SELECT ?result WHERE { ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?result <http://dbpedia.org/property/writer> <http://dbpedia.org/resource/Horace_Andy> . },"```sparql
SELECT ?work WHERE {
  ?horace a dbo:MusicalArtist ;
          rdfs:label ""Horace Andy""@en .
  
  ?horace dbo:work ?work .
}
LIMIT 1
```",1,2,2,1,1,3,2,20,0,0,4,0,0.0,0
773,36,train,"Give me the parent of the child, that is a royalty, of the father, that is an office holder and a royalty, of Carloman of Bavaria and spouse of Louis the German.",SELECT ?result WHERE { <http://dbpedia.org/resource/Carloman_of_Bavaria> <http://dbpedia.org/property/father> ?v0 . ?v1 <http://dbpedia.org/ontology/parent> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v1 <http://dbpedia.org/property/father> ?v0 . <http://dbpedia.org/resource/Louis_the_German> <http://dbpedia.org/ontology/spouse> ?result . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. },"```sparql
SELECT ?parent WHERE {
  # Find Carloman of Bavaria's father who is an office holder and a royalty
  ?carloman dbo:parent ?father .
  ?carloman rdfs:label ""Carloman, Duke of Bavaria""@en .
  
  # Ensure the father is both an office holder and royalty
  ?father dbo:officeHolder ?office .
  ?father rdf:type dbo:Monarch .

  # Find Louis the German's spouse
  ?louis dbo:spouse ?spouse .
  ?louis rdfs:label ""Louis the German""@en .

  # Ensure the spouse is connected to Carloman's father
  FILTER (?spouse = ?father)

  # Identify a child of this union who is royalty
  OPTIONAL {
    ?child dbo:parent ?spouse .
    ?child rdf:type dbo:Monarch .
  }

  # Find the parent of this royal child
  OPTIONAL {
    ?child dbo:parent ?parent .
  }
}
```",4,7,5,3,2,3,3,71,0,0,1,0,0.0,0
433,23,train,"Give me the associated musical artist of the person born, that is a musical artist and an artist, as the persona of Paul Chambers.",SELECT ?result WHERE { ?v0 <http://dbpedia.org/property/birthName> ?v2 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. <http://dbpedia.org/resource/Paul_Chambers> <http://xmlns.com/foaf/0.1/givenName> ?v2 . ?v0 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. },"```sparql
SELECT ?associatedArtist WHERE {
  # Identify Paul Chambers
  ?paulChambers rdfs:label ""Paul Chambers""@en .
  
  # Find associated musical artist
  ?paulChambers dbo:musicalArtist ?associatedArtist .

  # Ensure the associated person is also recognized as an artist in another context
  ?associatedArtist rdf:type dbo:Artist .
}
```",3,5,4,3,1,3,3,71,0,0,31,0,0.0,0
41,13,train,"Give me the party of Declan Costello and party of the leader, that is a politician and an office holder, of 2005 Castlereagh Borough Council election.",SELECT ?result WHERE { ?v0 <http://dbpedia.org/ontology/party> ?result . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. <http://dbpedia.org/resource/Declan_Costello> <http://dbpedia.org/ontology/party> ?result . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. <http://dbpedia.org/resource/2005_Castlereagh_Borough_Council_election> <http://dbpedia.org/property/leader> ?v0 . },"```sparql
SELECT ?costelloParty ?leaderParty WHERE {
  # Find Declan Costello's political party
  ?declanCostello dbo:party ?costelloParty .
  ?declanCostello rdfs:label ""Declan Costello""@en .

  # Find the leader of the 2005 Castlereagh Borough Council election and their party
  OPTIONAL {
    ?election dbo:leader ?leader .
    ?election dbo:electionDate ?date .
    FILTER (YEAR(?date) = 2005 && CONTAINS(LCASE(str(?election)), ""castlereagh borough council""))
    
    # Ensure the leader is a politician and office holder
    ?leader dbo:occupation ?occupation .
    FILTER (?occupation IN (""politician"", ""office holder""))

    ?leader dbo:party ?leaderParty .
  }
}
```",3,5,4,2,2,2,3,28,1,0,0,1.0,1.0,1.0
281,1,train,Give me the awardee of Medal bar.,SELECT ?result WHERE { ?result <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/Medal_bar> . },"```sparql
SELECT ?awardee WHERE {
  # Find individuals who have been awarded the Medal of Honor
  ?awardee dbo:award ?medal .
  
  # Ensure the award is specifically a Medal of Honor
  ?medal rdf:type dbr:Medal_of_Honor .

  # Check if they also received an additional Medal of Honor Bar
  OPTIONAL {
    ?awardee dbo:additionalAward ?bar .
    ?bar rdf:type dbr:Medal_of_Honor_Bar .
  }
}
```",1,1,2,1,1,2,3,28,0,0,656,0,0.0,0
465,11,train,Give me the successor of the child of Alfonso I d'Este.,SELECT ?result WHERE { ?v0 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Alfonso_I_d'Este> . ?v0 <http://dbpedia.org/ontology/successor> ?result . },"```sparql
SELECT ?successor WHERE {
  # Identify Alfonso I d'Este
  ?alfonso rdfs:label ""Alfonso I d'Este""@en .
  
  # Find his child
  ?alfonso dbo:child ?child .

  # Determine the successor of this child
  ?child dbo:successor ?successor .
}
```",2,2,3,2,1,3,3,71,0,0,1,0,0.0,0
124,29,train,"Give me the commander in Mahdist War and military force of Battle of Atbara and military force of the war, that is an event and a military conflict and a societal event, of Frank Rhodes (British Army officer).",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/battle> <http://dbpedia.org/resource/Battle_of_Atbara> . <http://dbpedia.org/resource/Frank_Rhodes_(British_Army_officer)> <http://dbpedia.org/ontology/battle> ?v3 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. <http://dbpedia.org/resource/Mahdist_War> <http://dbpedia.org/ontology/commander> ?result . ?result <http://dbpedia.org/ontology/battle> ?v3 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. },"```sparql
SELECT ?commander ?battleForce ?warForce WHERE {
  # Mahdist War as an event
  ?mahdistWar dbo:wikiPageRedirects dbpedia:Mahdist_War .
  
  # Commander of the British forces during the Mahdist War
  OPTIONAL { 
    ?britishCommander dbo:position ""commander""@en ;
                      dbo:participatedIn ?mahdistWar .
  }
  
  # Battle of Atbara as an event within the Mahdist War
  ?battleOfAtbara dbo:wikiPageRedirects dbpedia:Battle_of_Atbara ;
                  dbo:participatingMilitaryUnit ?battleForce .

  # Frank Rhodes and his military role in the Battle of Atbara
  OPTIONAL {
    ?frankRhodes foaf:name ""Frank Rhodes""@en ;
                 dbo:militaryCommand ?battleForce .
  }
  
  # Military forces involved in the Mahdist War
  OPTIONAL {
    ?mahdistWar dbo:participatingMilitaryUnit ?warForce .
  }

  # Link Frank Rhodes to his role in these events
  FILTER (?frankRhodes = ?britishCommander)
}
```",4,7,5,2,3,3,3,71,0,0,1,0,0.0,0
130,10,train,"Give me the administration, that is American, of the award of Živko Ključe.",SELECT ?result WHERE { ?result <http://dbpedia.org/property/governor> ?v0 . ?result <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/United_States>. <http://dbpedia.org/resource/Živko_Ključe> <http://dbpedia.org/property/awards> ?v0 . },"```sparql
SELECT ?award ?administeringBody WHERE {
  # Find Živko Kljuće and any awards he is connected to
  ?person rdfs:label ""Živko Ključe""@en .
  
  OPTIONAL {
    ?person dbo:awardsReceived ?award .
  }
  
  # Identify the administering body of the award if it's American
  OPTIONAL {
    ?award dbo:administeredBy ?administeringBody .
    FILTER (regex(str(?administeringBody), ""United States"", ""i""))
  }
}
```",2,3,3,2,1,3,2,20,0,0,43,0,0.0,0
443,3,train,Give me the award of William Shepherd.,SELECT ?result WHERE { <http://dbpedia.org/resource/William_Shepherd> <http://dbpedia.org/property/awards> ?result . },"```sparql
SELECT ?award WHERE {
  ?shepherd rdfs:label ""William Shepherd""@en .
  ?shepherd dbo:award ?award .
}
```",1,1,2,1,1,2,3,28,0,0,1,0,0.0,0
124,30,train,"Give me the military force of Battle of Tamai and commander in Mahdist War and military force of the force, that is a societal event and a military conflict, of Herbert Kitchener, 1st Earl Kitchener.","SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Herbert_Kitchener,_1st_Earl_Kitchener> . ?result <http://dbpedia.org/ontology/battle> <http://dbpedia.org/resource/Battle_of_Tamai> . ?result <http://dbpedia.org/ontology/battle> ?v1 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. <http://dbpedia.org/resource/Mahdist_War> <http://dbpedia.org/ontology/commander> ?result . }","```sparql
SELECT ?battleForce ?mahdistCommander ?kitchenerEvent ?kitchenerConflict WHERE {
  # Battle of Tamai and its military force
  ?battle rdfs:label ""Battle of Tamai""@en .
  ?battle dbo:militaryConflicts ?tamaiWar .
  ?tamaiWar dbo:participatingMilitaryForce ?battleForce .

  # Mahdist War commander
  ?mahdistWar dbo:name ""Mahdist War""@en .
  ?commander dbo:memberOf ?mahdistWar ;
             rdf:type dbo:MilitaryPerson .

  BIND(?commander AS ?mahdistCommander)

  # Herbert Kitchener's societal event and military conflict
  ?kitchener rdfs:label ""Herbert Kitchener, 1st Earl Kitchener""@en .
  OPTIONAL {
    ?event dbo:agent ?kitchener ;
           rdf:type dbo:SocietalEvent .
    BIND(?event AS ?kitchenerEvent)
  }
  OPTIONAL {
    ?conflict dbo:commander ?kitchener ;
              rdf:type dbo:MilitaryConflict .
    BIND(?conflict AS ?kitchenerConflict)
  }
}
```",4,6,5,2,3,3,3,71,0,0,1,0,0.0,0
216,0,train,Give me the office of Tim Nicholls.,SELECT ?result WHERE { <http://dbpedia.org/resource/Tim_Nicholls> <http://dbpedia.org/property/office> ?result . },"```sparql
SELECT ?office WHERE {
  ?person rdfs:label ""Tim Nicholls""@en .
  ?person dbo:office ?office .
}
```",1,1,2,1,1,2,3,28,0,0,15,0,0.0,0
892,12,train,Give me the entity in Province of Reggio Emilia and landmark at elevation of 58.,"SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/elevation> ""58""^^<http://www.w3.org/2001/XMLSchema#integer> . ?result <http://dbpedia.org/ontology/province> <http://dbpedia.org/resource/Province_of_Reggio_Emilia> . }","```sparql
SELECT ?entity WHERE {
  # Find entities in Province of Reggio Emilia
  ?entity dbo:location ?location .
  ?location rdfs:label ""Province of Reggio Emilia""@en .

  # Filter landmarks at elevation of 58
  OPTIONAL { 
    ?entity geo:elevation ?elevation .
    FILTER (?elevation = 58)
  }
}
```",2,2,3,1,2,3,3,71,0,1,1,0.0,0.0,0
102,7,train,Give me the manager of the player in Ellie Roebuck.,SELECT ?result WHERE { <http://dbpedia.org/resource/Ellie_Roebuck> <http://dbpedia.org/ontology/team> ?v1 . ?v1 <http://dbpedia.org/ontology/manager> ?result . },"```sparql
SELECT ?manager WHERE {
  ?player dbo:birthName ""Ellie Roebuck""@en .
  ?player a dbo:Player .
  
  OPTIONAL { 
    ?player dbo:manager ?manager .
  }
}
```",2,2,3,2,1,3,2,20,0,0,2,0,0.0,0
582,12,train,Give me the player in Kazuaki Nagasawa and figure known as --10-19.,"SELECT ?result WHERE { ?result <http://dbpedia.org/property/nickname> ""--10-19""^^<http://www.w3.org/2001/XMLSchema#gMonthDay> . <http://dbpedia.org/resource/Kazuaki_Nagasawa> <http://dbpedia.org/ontology/team> ?result . }","```sparql
SELECT ?profession ?relatedFigure WHERE {
  # Find Kazuaki Nagasawa's profession
  ?nagasawa dbo:occupation ?profession .
  ?nagasawa rdfs:label ""Kazuaki Nagasawa""@en .

  # Attempt to find a figure related to --10-19 (assuming it might be a placeholder for a role or identity)
  OPTIONAL {
    ?relatedEntity rdfs:label ?relatedLabel .
    FILTER regex(?relatedLabel, ""--10-19"", ""i"") # Assuming --10-19 is a label or part of a label
    ?relatedEntity dbo:occupation ?profession .
  }
}
```",2,2,3,1,2,3,3,71,0,0,1,0,0.0,0
216,25,train,"Give me the team of the person born, that is a sports manager and a soccer manager and a soccer player, on 1983-12-20 and player in Mario Ivanković.","SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/birthDate> ""1983-12-20""^^<http://www.w3.org/2001/XMLSchema#date> . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsManager>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerManager>. <http://dbpedia.org/resource/Mario_Ivanković> <http://dbpedia.org/ontology/team> ?result . ?result <http://dbpedia.org/ontology/coach> ?v1 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerPlayer>. }","```sparql
SELECT DISTINCT ?team WHERE {
  # Find the individual who is a sports manager, soccer manager, and player born on 1983-12-20
  ?person dbo:birthDate ""1983-12-20""^^xsd:date ;
          rdf:type dbo:SoccerPlayer ;
          rdf:type dbo:SoccerManager ;
          rdf:type dbo:SportsManager .
  
  # Find teams where this person has played
  ?team dbo:player ?person .

  # Find Mario Ivanković and the teams he has played for
  ?marioIvanko dbp:birthDate ""1979-03-06""^^xsd:date ;
               rdf:type dbo:SoccerPlayer .
  
  ?team2 dbo:player ?marioIvanko .

  # Ensure the team is common between the person and Mario Ivanković
  FILTER (?team = ?team2)
}
```",3,6,4,2,2,3,3,71,0,0,1,0,0.0,0
917,37,train,"Give me the child of the father of the spouse, that is a royalty, of Leleiohoku I and child of Kekūanāoʻa.","SELECT ?result WHERE { ?v1 <http://dbpedia.org/property/father> ?v2 . ?result <http://dbpedia.org/ontology/parent> ?v2 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?result <http://dbpedia.org/property/father> ""Kekūanāoʻa""@en . ?v1 <http://dbpedia.org/ontology/spouse> <http://dbpedia.org/resource/Leleiohoku_I> . }","```sparql
SELECT ?child WHERE {
  # Find Leleiohoku I and his royal spouse
  ?leleiohoku dbo:spouse ?royalSpouse .
  ?leleiohoku rdfs:label ""Leleiohoku I""@en .

  # Ensure the spouse is royalty
  FILTER (regex(str(?royalSpouse), ""Kapiʻolani"", ""i""))

  # Find father of this royal spouse
  ?royalSpouse dbo:parent ?father .
  
  # Find children of this father
  ?father dbo:child ?child .

  # Ensure the child is also a child of Kekūanāoʻa
  ?kekuanaoa dbo:child ?child .
  ?kekuanaoa rdfs:label ""Kekūanāoʻa""@en .
}
```",4,5,5,3,2,3,3,71,0,0,3,0,0.0,0
459,0,train,Give me the governor of Oklahoma.,SELECT ?result WHERE { <http://dbpedia.org/resource/Oklahoma> <http://dbpedia.org/property/governor> ?result . },"```sparql
SELECT ?governor WHERE {
  ?oklahoma dbo:name ""Oklahoma""@en .
  ?oklahoma dbo:country dbr:United_States .
  ?oklahoma dbo:governor ?governor .
}
```",1,1,2,1,1,2,3,28,0,0,2,0,0.0,0
417,11,train,"Give me the spouse of the parent, that is a royalty, of Count Ingolf of Rosenborg.",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/spouse> ?v0 . ?v0 <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Count_Ingolf_of_Rosenborg> . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. },"```sparql
SELECT ?spouse WHERE {
  # Find Count Ingolf of Rosenborg and his parents
  ?ingolf dbo:parent ?parent .
  ?ingolf rdfs:label ""Count Ingolf of Rosenborg""@en .

  # Filter to find the parent who is royalty
  OPTIONAL { 
    ?parent dbo:title ?title .
    FILTER (regex(str(?title), ""Royal"", ""i"") || regex(str(?parent), ""King|Queen|Prince|Princess"", ""i""))
  }

  # Find spouse of the royal parent
  ?parent dbo:spouse ?spouse .
}
```",2,3,3,2,1,3,3,71,2,0,0,1.0,1.0,1.0
236,13,train,"Give me the party member of the administration, that is an organisation, of the person decedent, that is a politician and an office holder, at Quincy, Massachusetts.","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/party> ?v1 . ?v1 <http://dbpedia.org/property/leader> ?v0 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?v0 <http://dbpedia.org/ontology/deathPlace> <http://dbpedia.org/resource/Quincy,_Massachusetts> . }","```sparql
SELECT ?partyMember WHERE {
  # Identify the person who is a politician and an office holder at Quincy, Massachusetts
  ?person dbo:birthPlace dbr:Quincy,_Massachusetts ;
          dbo:occupation dbr:Politician ;
          dbo:officeHolder true .

  # Find the administration or organization they were part of
  ?person dbo:memberOf ?administration .
  
  # Ensure the administration is an organization
  ?administration a dbo:Organization .

  # Identify a party member of this administration
  ?partyMember dbo:memberOf ?administration ;
               dbo:occupation dbr:Politician .
}
```",3,6,4,3,1,3,2,20,0,0,269,0,0.0,0
573,6,train,"Give me the residence, that is a settlement, of William J. Phelan.",SELECT ?result WHERE { ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. <http://dbpedia.org/resource/William_J._Phelan> <http://dbpedia.org/property/residence> ?result . },"```sparql
SELECT ?residence WHERE {
  # Find William J. Phelan and his residence
  ?phelan dbo:residence ?residence .
  ?phelan rdfs:label ""William J. Phelan""@en .

  # Ensure the residence is a settlement
  ?residence rdf:type ?settlementType .
  FILTER (
    ?settlementType IN (dbo:Settlement, dbo:City, dbo:Town) 
  )
}
```",1,2,2,1,1,3,3,71,1,0,0,1.0,1.0,1.0
926,15,train,Give me the father of the spouse of Neşerek Kadın.,SELECT ?result WHERE { <http://dbpedia.org/resource/Neşerek_Kadın> <http://dbpedia.org/ontology/spouse> ?v1 . ?v1 <http://dbpedia.org/property/father> ?result . },"```sparql
SELECT ?father WHERE {
  # Find Neşerek Kadın and her spouse
  ?neserekKadin rdfs:label ""Neşerek Kadın""@en .
  ?neserekKadin dbo:spouse ?spouse .

  # Find the father of the spouse
  ?spouse dbo:parent ?father .
}
```",2,2,3,2,1,3,3,71,1,1,0,0.5,1.0,0.6666666666666666
606,8,train,Give me the birthplace of the alumnus of University of Pennsylvania.,SELECT ?result WHERE { ?v0 <http://dbpedia.org/ontology/almaMater> <http://dbpedia.org/resource/University_of_Pennsylvania> . ?v0 <http://dbpedia.org/ontology/birthPlace> ?result . },"```sparql
SELECT ?alumnus ?birthplace WHERE {
  # Find alumni of the University of Pennsylvania
  ?alumnus dbo:almaMater dbr:University_of_Pennsylvania .
  
  # Retrieve birthplace information for each alumnus
  ?alumnus dbo:birthPlace ?birthplace .
}
```",2,2,3,2,1,3,2,20,598,762,0,0.43970588235294117,1.0,0.6108273748723186
216,37,train,"Give me the player in the coach, that is a soccer player and a sports manager and a soccer manager, of the player, that is an organisation and a sports club and a soccer club, in Džemal Berberović and team of Ognjen Vukojević.",SELECT ?result WHERE { <http://dbpedia.org/resource/Džemal_Berberović> <http://dbpedia.org/ontology/team> ?v0 . ?result <http://dbpedia.org/ontology/coach> <http://dbpedia.org/resource/Ognjen_Vukojević> . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsManager>. ?v0 <http://dbpedia.org/ontology/coach> ?v3 . ?v3 <http://dbpedia.org/ontology/team> ?result . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerManager>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerPlayer>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsClub>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerClub>. },"```sparql
SELECT ?coach WHERE {
  # Find the player who is also a sports manager and soccer manager
  ?player dbo:occupation ""Soccer Player""@en .
  ?player dbo:occupation ""Sports Manager""@en .
  ?player dbo:occupation ""Soccer Manager""@en .

  # Ensure this player is connected to an organization that is a sports club and a soccer club
  ?organization rdf:type dbo:SportsClub ;
                rdf:type dbo:SoccerClub .
  ?player dbo:memberOf ?organization .

  # Find the coach of Džemal Berberović
  ?džemal dbo:coach ?coach .
  ?džemal rdfs:label ""Džemal Berberović""@en .

  # Ensure this coach is also associated with Ognjen Vukojević's team
  ?ognjenTeam dbo:member ?coach .
  ?ognjenTeam rdfs:label ""Ognjen Vukojević""@en .
}
```",4,10,5,3,2,3,3,71,0,0,1,0,0.0,0
443,8,train,Give me the landmark at elevation of the award of William Shepherd.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/elevation> ?v1 . <http://dbpedia.org/resource/William_Shepherd> <http://dbpedia.org/property/awards> ?v1 . },"```sparql
# Step 1: Identify the award received by William Shepherd
SELECT ?award WHERE {
  ?shepherd dbo:awardsReceived ?award .
  ?shepherd rdfs:label ""William Shepherd""@en .
}

# Step 2: Find a landmark at the elevation associated with this award (assuming we have an elevation)
# This step is hypothetical as awards typically don't have elevations. We'll assume an example elevation.
SELECT ?landmark WHERE {
  ?landmark dbo:elevation ?elevation .
  FILTER (?elevation = ""1000""^^xsd:integer) # Example elevation, replace with actual if known
}
```",2,2,3,2,1,2,3,28,0,0,349,0,0.0,0
573,28,train,"Give me the parent of John Quincy Adams and person decedent at Quincy, Massachusetts and person decedent at the administration, that is a region, of Charlie Baker.","SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Region>. ?v1 <http://dbpedia.org/property/governor> ""Charlie Baker""@en . <http://dbpedia.org/resource/John_Quincy_Adams> <http://dbpedia.org/ontology/parent> ?result . ?result <http://dbpedia.org/ontology/deathPlace> ?v1 . ?result <http://dbpedia.org/ontology/deathPlace> <http://dbpedia.org/resource/Quincy,_Massachusetts> . }","```sparql
SELECT ?parent ?decedentQuincy ?decedentBaker WHERE {
  # Find parent of John Quincy Adams
  ?johnQuincyAdams dbo:parent ?parent .
  ?johnQuincyAdams rdfs:label ""John Quincy Adams""@en .

  # Find person decedent at Quincy, Massachusetts
  OPTIONAL {
    ?personDecedentQuincy dbo:deathPlace ?quincyLocation .
    ?quincyLocation rdfs:label ""Quincy, Massachusetts""@en .
    ?personDecedentQuincy dbo:deathDate ?deathDateQuincy .
  }

  # Find person decedent during Charlie Baker's administration
  OPTIONAL {
    ?charlieBaker dbo:officeHolder ?administration .
    ?administration dbo:startDate ?startDate .
    ?administration dbo:endDate ?endDate .
    FILTER (?startDate <= ?deathDateBaker && ?deathDateBaker <= ?endDate)
    
    ?personDecedentBaker dbo:deathDate ?deathDateBaker .
  }
}
```",4,5,5,2,3,3,3,71,2,0,0,1.0,1.0,1.0
465,8,train,"Give me the child, that is a royalty, of Anne of Brittany.",SELECT ?result WHERE { ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. <http://dbpedia.org/resource/Anne_of_Brittany> <http://dbpedia.org/ontology/child> ?result . },"```sparql
SELECT ?child WHERE {
  # Find children of Anne of Brittany
  ?anne dbo:child ?child .
  ?anne rdfs:label ""Anne of Brittany""@en .

  # Ensure the child is recognized as royalty
  OPTIONAL { 
    ?child dbo:royalty ?isRoyalty .
    FILTER (?isRoyalty != """")
  }
}
```",1,2,2,1,1,3,3,71,2,1,0,0.6666666666666666,1.0,0.8
456,36,train,"Give me the band of the band, that is a musical artist, of the band of Alan Doyle and spouse of Danielle Spencer (Australian actress).",SELECT ?result WHERE { <http://dbpedia.org/resource/Alan_Doyle> <http://dbpedia.org/ontology/associatedMusicalArtist> ?v0 . ?v0 <http://dbpedia.org/ontology/associatedMusicalArtist> ?v1 . ?v1 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. <http://dbpedia.org/resource/Danielle_Spencer_(Australian_actress)> <http://dbpedia.org/ontology/spouse> ?result . },"```sparql
SELECT ?bandOfBand WHERE {
  # Find Alan Doyle's band
  ?doyle dbo:member ?greatBigSea .
  ?greatBigSea rdfs:label ""Great Big Sea""@en .

  # Find associated bands or projects of Great Big Sea
  OPTIONAL { 
    ?greatBigSea dbo:associatedBandOrProject ?band .
  }

  # Identify Danielle Spencer and her spouse
  ?spencer dbo:spouse ?spouse .
  ?spencer rdfs:label ""Danielle Spencer""@en .

  # Check if the spouse is associated with a band or musical artist
  OPTIONAL {
    ?spouse dbo:member ?bandOfSpouse .
  }

  # Find the band of that band (if applicable)
  OPTIONAL {
    ?bandOfSpouse dbo:associatedBandOrProject ?bandOfBand .
  }
}
```",4,5,5,3,2,3,3,71,0,0,1,0,0.0,0
926,19,train,Give me the successor of Mustafa III and father of the father of Abdulaziz.,SELECT ?result WHERE { ?v2 <http://dbpedia.org/property/father> ?result . <http://dbpedia.org/resource/Mustafa_III> <http://dbpedia.org/ontology/successor> ?result . <http://dbpedia.org/resource/Abdulaziz> <http://dbpedia.org/property/father> ?v2 . },"```sparql
SELECT ?successor ?grandfather WHERE {
  # Find Mustafa III and his successor
  ?mustafaIII dbo:succession ?successor .
  ?mustafaIII rdfs:label ""Mustafa III""@en .

  # Find Abdulaziz, then his father, and his grandfather
  ?abdulaziz dbo:parent ?father .
  ?father dbo:parent ?grandfather .
  ?abdulaziz rdfs:label ""Abdulaziz I of Egypt""@en .

  # Check if the successor is the same as the grandfather
  FILTER (?successor = ?grandfather)
}
```",3,3,4,2,2,3,3,71,0,0,1,0,0.0,0
83,5,train,Who is the governor of Dilma Rousseff?,SELECT ?result WHERE { <http://dbpedia.org/resource/Dilma_Rousseff> <http://dbpedia.org/property/governor> ?result . },"```sparql
SELECT ?position WHERE {
  ?dilma rdf:type dbo:Person .
  ?dilma rdfs:label ""Dilma Rousseff""@en .
  ?dilma dbo:positionHeld ?position .
  FILTER (regex(str(?position), ""governor"", ""i""))
}
```",1,1,2,1,1,3,2,20,0,0,2,0,0.0,0
507,12,train,"Give me the director of Entertaining Mr Sloane (film) and professional in Film director, television director.","SELECT ?result WHERE { <http://dbpedia.org/resource/Entertaining_Mr_Sloane_(film)> <http://dbpedia.org/ontology/director> ?result . ?result <http://dbpedia.org/property/occupation> ""Film director, television director""@en . }","```sparql
SELECT ?director WHERE {
  # Find the film ""Entertaining Mr Sloane"" and its director
  ?film dbo:director ?director .
  ?film rdfs:label ""Entertaining Mr Sloane""@en .

  # Ensure the director is recognized as both a film director and television director
  ?director dbo:occupation ?occupation1 .
  ?director dbo:occupation ?occupation2 .
  
  FILTER (
    regex(str(?occupation1), ""Film director"", ""i"") &&
    regex(str(?occupation2), ""Television director"", ""i"")
  )
}
```",2,2,3,1,2,3,3,71,0,0,1,0,0.0,0
892,38,train,"Give me the entity in the administration, that is Italian and a region and a settlement and an administrative region, of Democratic Party (Italy) and landmark at elevation of the award of Anna Ishii.",SELECT ?result WHERE { ?v0 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Italy>. <http://dbpedia.org/resource/Anna_Ishii> <http://dbpedia.org/property/awards> ?v3 . ?result <http://dbpedia.org/ontology/elevation> ?v3 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/AdministrativeRegion>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. ?v0 <http://dbpedia.org/property/leaderParty> <http://dbpedia.org/resource/Democratic_Party_(Italy)> . ?result <http://dbpedia.org/ontology/province> ?v0 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Region>. },"```sparql
SELECT ?entity WHERE {
  # Find Democratic Party (Italy)
  ?party dbo:country dbr:Italy ;
         rdfs:label ""Democratic Party (Italy)""@en .
  
  # Identify entities in the administration of the party that are regions, settlements, and administrative regions
  ?administration dbo:memberOf ?party ;
                  a dbo:AdministrativeRegion ;
                  a dbo:Settlement ;
                  a dbo:Region ;
                  dbo:country dbr:Italy .

  # Find landmarks within these entities at an elevation (assuming elevation data is available)
  OPTIONAL {
    ?landmark dbo:elevation ?elevation ;
              dbo:location ?entity .
    
    # Assuming there's a way to link the landmark to Anna Ishii's award
    ?award dbo:recipient dbr:Anna_Ishii ;
           dbo:relatedLandmark ?landmark .
  }
  
  BIND(?administration AS ?entity)
}
```",4,8,5,2,2,3,3,71,0,0,2,0,0.0,0
18,8,train,Give me the professional in the award of Ana María Sánchez de Ríos.,SELECT ?result WHERE { <http://dbpedia.org/resource/Ana_María_Sánchez_de_Ríos> <http://dbpedia.org/property/awards> ?v0 . ?result <http://dbpedia.org/property/occupation> ?v0 . },"```sparql
SELECT ?professional WHERE {
  # Find the award received by Ana María Sánchez de Ríos
  ?award dbo:recipient dbr:Ana_María_Sánchez_de_Ríos .
  
  # Find the professional associated with the award
  ?award dbo:awardedBy ?professional .
}
```",2,2,3,2,1,2,3,28,0,0,39640,0,0.0,0
47,39,train,"Give me the office of the awardee of the entity, that is an award, in India and office of Bidesh Ranjan Bose.",SELECT ?result WHERE { ?v0 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/India> . ?v1 <http://dbpedia.org/property/awards> ?v0 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Award>. ?v1 <http://dbpedia.org/property/office> ?result . <http://dbpedia.org/resource/Bidesh_Ranjan_Bose> <http://dbpedia.org/property/office> ?result . },"```sparql
SELECT ?award ?awardeeOffice ?bosesOffice WHERE {
  # Find awards given in India and their awardees' offices
  ?award dbo:country dbr:India .
  ?award dbo:recipient ?awardee .
  ?awardee dbo:office ?awardeeOffice .

  # Find office of Bidesh Ranjan Bose
  OPTIONAL {
    ?boses dcterms:title ""Bidesh Ranjan Bose""@en .
    ?boses dbo:office ?bosesOffice .
  }
}
```",4,5,5,3,2,3,3,71,0,0,1,0,0.0,0
267,10,train,Give me the birth date of the reference to Dan Cathy.,"SELECT ?result WHERE { ?v0 <http://xmlns.com/foaf/0.1/name> ""Dan Cathy""@en . ?v0 <http://dbpedia.org/ontology/birthDate> ?result . }","```sparql
SELECT ?birthDate WHERE {
  ?danCathy rdfs:label ""Dan Cathy""@en .
  ?danCathy dbo:birthday ?birthDate .
}
```",2,2,3,2,1,3,2,20,0,0,1,0,0.0,0
874,1,train,Give me the band of Robert Hart (musician).,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/bandMember> <http://dbpedia.org/resource/Robert_Hart_(musician)> . },"```sparql
SELECT ?band WHERE {
  ?person rdfs:label ""Robert Hart (musician)""@en .
  ?person dbo:musicalArtist ?band .
}
```",1,1,2,1,1,3,2,20,0,0,2,0,0.0,0
456,38,train,"Give me the band of the band, that is a musical artist, of Dean Brody and professional in the alter ego of The Shadow.",SELECT ?result WHERE { <http://dbpedia.org/resource/The_Shadow> <http://dbpedia.org/property/alterEgo> ?v3 . ?v2 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?result <http://dbpedia.org/property/occupation> ?v3 . <http://dbpedia.org/resource/Dean_Brody> <http://dbpedia.org/ontology/associatedMusicalArtist> ?v2 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. },"```sparql
SELECT ?bandOfBand WHERE {
  # Find Dean Brody's band
  ?deanBrody dbo:associatedBand ?brodysBand .
  ?deanBrody rdfs:label ""Dean Brody""@en .

  # Find the band of Dean Brody's band
  OPTIONAL { 
    ?brodysBand dbo:associatedBand ?bandOfBand .
  }

  # Identify The Shadow's alter ego
  ?shadowAlterEgo rdfs:label ""The Shadow""@en .
  
  # Check if The Shadow has a professional association with the band of Dean Brody's band
  OPTIONAL {
    ?shadowAlterEgo dbo:associatedBand ?bandOfBand .
  }
}
```",4,5,5,2,2,3,3,71,1,2,0,0.3333333333333333,1.0,0.5
281,2,train,Give me the awardee of Volunteer Decoration.,SELECT ?result WHERE { ?result <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/Volunteer_Decoration> . },"```sparql
SELECT ?awardee WHERE {
  ?awardee dbo:award dbr:Volunteer_Decoration .
}
```",1,1,2,1,1,2,3,28,12,0,0,1.0,1.0,1.0
976,0,train,Give me the office of Mustafa Şentop.,SELECT ?result WHERE { <http://dbpedia.org/resource/Mustafa_Şentop> <http://dbpedia.org/property/office> ?result . },"```sparql
SELECT ?office WHERE {
  ?person rdfs:label ""Mustafa Şentop""@en .
  ?person dbo:positionHeld ?office .
}
```",1,1,2,1,1,3,3,71,0,0,4,0,0.0,0
865,12,train,Give me the father of Shahla Khatun and father of AK Abdul Momen.,SELECT ?result WHERE { <http://dbpedia.org/resource/Shahla_Khatun> <http://dbpedia.org/property/father> ?result . <http://dbpedia.org/resource/AK_Abdul_Momen> <http://dbpedia.org/property/father> ?result . },"```sparql
SELECT ?shahlaFather ?akFather WHERE {
  # Find Shahla Khatun and her father
  ?shahla dbo:parent ?shahlaFather .
  ?shahla rdfs:label ""Shahla Khatun""@en .

  # Find AK Abdul Momen and his father
  ?ak dbo:parent ?akFather .
  ?ak rdfs:label ""AK Abdul Momen""@en .
}
```",2,2,3,1,2,3,3,71,0,0,1,0,0.0,0
955,7,train,Give me the band of the writer of Don't Forget Your Roots (album).,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/bandMember> ?v1 . <http://dbpedia.org/resource/Don't_Forget_Your_Roots_(album)> <http://dbpedia.org/property/writer> ?v1 . },"```sparql
SELECT ?band WHERE {
  # Identify the album and its writer(s)
  ?album dbo:creator ?writer .
  ?album rdfs:label ""Don't Forget Your Roots""@en .

  # Determine which band the writer is associated with
  ?writer dbo:memberOfBand ?band .
}
```",2,2,3,2,1,3,2,20,0,0,18,0,0.0,0
456,19,train,Give me the professional in  and spouse of the actor of Pacific Drive.,"SELECT ?result WHERE { ?result <http://dbpedia.org/property/occupation> """"@en . <http://dbpedia.org/resource/Pacific_Drive> <http://dbpedia.org/property/starring> ?v0 . ?v0 <http://dbpedia.org/ontology/spouse> ?result . }","```sparql
SELECT ?actor ?spouse ?profession WHERE {
  # Find Pacific Drive and its actors
  ?work dbo:genre dbc:American_films .
  ?work rdfs:label ""Pacific Drive""@en .
  
  # Identify an actor from Pacific Drive
  ?work dbo:starring ?actor .

  # Find the spouse of this actor
  OPTIONAL {
    ?actor dbo:spouse ?spouse .
  }

  # Determine the profession of the spouse
  OPTIONAL {
    ?spouse dbo:occupation ?profession .
  }
}
```",3,3,4,2,2,3,3,71,0,0,2,0,0.0,0
926,0,train,Give me the father of Mahmud II.,SELECT ?result WHERE { <http://dbpedia.org/resource/Mahmud_II> <http://dbpedia.org/property/father> ?result . },"```sparql
SELECT ?father WHERE {
  ?mahmud2 dbo:parent ?father .
  ?mahmud2 rdfs:label ""Mahmud II""@en .
}
```",1,1,2,1,1,3,3,71,0,0,1,0,0.0,0
456,37,train,"Give me the professional in the alter ego of the reference, that is a fictional character, to Lamont Cranston (radio, film and television) and band of Alan Doyle.","SELECT ?result WHERE { ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/FictionalCharacter>. <http://dbpedia.org/resource/Alan_Doyle> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v0 <http://xmlns.com/foaf/0.1/name> ""Lamont Cranston (radio, film and television)""@en . ?result <http://dbpedia.org/property/occupation> ?v3 . ?v0 <http://dbpedia.org/property/alterEgo> ?v3 . }","```sparql
SELECT ?alterEgo ?band WHERE {
  # Find Lamont Cranston's alter ego
  ?cranston dbo:alias ""Lamont Cranston""@en .
  ?cranston dbo:fictionalCharacterName ?alterEgo .

  # Find Alan Doyle's band
  ?doyle foaf:name ""Alan Doyle""@en .
  ?doyle dbo:memberOfBand ?band .
}
```",4,5,5,3,2,3,3,71,0,0,1,0,0.0,0
433,20,train,"Give me the associated musical artist of the associated musical artist, that is an artist and a musical artist, of Scott LaFaro and associated musical artist of Paul Chambers.",SELECT ?result WHERE { ?v2 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. <http://dbpedia.org/resource/Paul_Chambers> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . <http://dbpedia.org/resource/Scott_LaFaro> <http://dbpedia.org/ontology/associatedMusicalArtist> ?v2 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. },"```sparql
SELECT ?artist1 ?associatedArtist1 ?artist2 WHERE {
  # Chain 1: Scott LaFaro to an artist who is both a general and musical artist, then their associated musical artist
  ?laFaro dbo:associatedMusicalArtist ?artist1 .
  ?artist1 rdf:type dbo:Artist .
  ?artist1 rdf:type dbo:MusicalArtist .
  ?artist1 dbo:associatedMusicalArtist ?associatedArtist1 .

  # Chain 2: Paul Chambers to his associated musical artist
  ?chambers dbo:associatedMusicalArtist ?artist2 .
  
  # Bind Scott LaFaro and Paul Chambers with their respective labels for clarity
  ?laFaro rdfs:label ""Scott LaFaro""@en .
  ?chambers rdfs:label ""Paul Chambers""@en .
}
```",3,5,4,2,2,3,3,71,2,41,0,0.046511627906976744,1.0,0.08888888888888888
791,23,train,"Give me the spouse of the spouse, that is a royalty, of the reference to Emperor Takakura.","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/spouse> ?v0 . ?v2 <http://xmlns.com/foaf/0.1/name> ""Emperor Takakura""@en . ?v0 <http://dbpedia.org/ontology/spouse> ?v2 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. }","```sparql
SELECT ?spouseOfSpouse WHERE {
  # Find Emperor Takakura
  ?takakura rdfs:label ""Emperor Takakura""@en .
  
  # Find the spouse of Emperor Takakura, ensuring they are royalty
  ?takakura dbo:spouse ?firstSpouse .
  FILTER EXISTS { 
    ?firstSpouse rdf:type dbo:RoyalFamilyMember .
  }
  
  # Find the spouse of this first spouse (who is royalty)
  ?firstSpouse dbo:spouse ?spouseOfSpouse .
}
```",3,4,4,3,1,3,3,71,0,0,1,0,0.0,0
933,7,train,"Who is the person born, that is a musical artist, on 1947-04-21?","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/birthDate> ""1947-04-21""^^<http://www.w3.org/2001/XMLSchema#date> . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. }","```sparql
SELECT ?person WHERE {
  ?person rdf:type dbo:MusicalArtist .
  ?person dbo:birthDate ?date .
  FILTER (YEAR(?date) = 1947 && MONTH(?date) = 4 && DAY(?date) = 21)
}
```",1,2,2,1,1,3,3,71,4,0,0,1.0,1.0,1.0
433,11,train,"Give me the associated musical artist of the person born, that is a musical artist and an artist, as Paul Laurence Dunbar Chambers Jr..","SELECT ?result WHERE { ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?v0 <http://dbpedia.org/property/birthName> ""Paul Laurence Dunbar Chambers Jr.""@en . ?v0 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. }","```sparql
SELECT ?associatedArtist WHERE {
  # Identify Paul Laurence Dunbar Chambers Jr. and his role as a musician
  ?chambers dbo:birthName ""Paul Laurence Dunbar Chambers Jr."" .
  ?chambers dbo:occupation ?occupation .
  FILTER (regex(str(?occupation), ""musician"", ""i"") || regex(str(?occupation), ""bassist"", ""i""))

  # Find associated musical artists
  OPTIONAL {
    ?work dbo:composer ?chambers ;
          dbo:performer ?associatedArtist .
    FILTER (?associatedArtist != ?chambers)
  }
}
```",2,4,3,2,1,3,3,71,0,0,31,0,0.0,0
216,34,train,"Give me the player in the coach of the reference, that is an organisation and a soccer club, to Croatia U21 and team of Ognjen Vukojević.","SELECT ?result WHERE { ?v2 <http://dbpedia.org/ontology/coach> ?v1 . ?v2 <http://xmlns.com/foaf/0.1/name> ""Croatia U21""@en . ?v1 <http://dbpedia.org/ontology/team> ?result . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerClub>. ?result <http://dbpedia.org/ontology/coach> <http://dbpedia.org/resource/Ognjen_Vukojević> . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. }","```sparql
SELECT ?club WHERE {
  # Find Ognjen Vukojević's coaching roles
  ?vukojevic dbo:coachOf ?team .
  ?vukojevic rdfs:label ""Ognjen Vukojević""@en .

  # Ensure the team is a soccer club and an organization
  ?team rdf:type dbpedia-owl:SoccerClub ;
        rdf:type dbpedia-owl:Organization .

  # Check for connection to Croatia U21
  OPTIONAL {
    ?croatiaU21 dbo:coach ?vukojevic .
    ?croatiaU21 rdfs:label ""Croatia national under-21 football team""@en .
  }

  # Return the club that matches all criteria
  BIND(?team AS ?club)
}
```",4,6,5,3,2,3,3,71,0,0,1,0,0.0,0
124,37,train,"Give me the military force of Battle of Atbara and military force of the war, that is an event and a military conflict and a societal event, of the awardee of British South Africa Company Medal.",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/battle> <http://dbpedia.org/resource/Battle_of_Atbara> . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?v0 <http://dbpedia.org/ontology/battle> ?v3 . ?v0 <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/British_South_Africa_Company_Medal> . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?result <http://dbpedia.org/ontology/battle> ?v3 . },"```sparql
# Query to find the military force of the Battle of Atbara
SELECT ?battle ?force1 ?force2 WHERE {
  ?battle dbo:wikiPageRedirects dbpedia:Battle_of_Atbara .
  ?battle dbo:military_conflict ?conflict .
  ?conflict dbo:participating_military_force ?force1 .
  OPTIONAL { ?conflict dbo:opposing_military_force ?force2 . }
}

# Query to find the awardee of the British South Africa Company Medal and related military conflict
SELECT ?awardee ?war ?force3 WHERE {
  ?medal dbo:awardFor ?operation .
  ?medal rdfs:label ""British South Africa Company Medal""@en .
  ?operation dbo:participant ?awardee .
  
  # Find the war associated with the awardee
  OPTIONAL { 
    ?awardee dbo:military_conflict ?war .
    ?war rdf:type dbo:MilitaryConflict .
  }
  
  # Find military forces involved in that war
  OPTIONAL {
    ?war dbo:participating_military_force ?force3 .
  }
}
```",4,7,5,3,2,3,3,71,0,0,7,0,0.0,0
573,34,train,"Give me the parent of John Quincy Adams and person decedent at the administration, that is a region, of the real name of Charlie Baker (Australian footballer).",SELECT ?result WHERE { ?v1 <http://dbpedia.org/property/governor> ?v2 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Region>. ?result <http://dbpedia.org/ontology/deathPlace> ?v1 . <http://dbpedia.org/resource/John_Quincy_Adams> <http://dbpedia.org/ontology/parent> ?result . <http://dbpedia.org/resource/Charlie_Baker_(Australian_footballer)> <http://xmlns.com/foaf/0.1/name> ?v2 . },"```sparql
SELECT ?parent ?decedent WHERE {
  # Find John Quincy Adams and his parent
  ?johnQuincyAdams dbo:parent ?parent .
  ?johnQuincyAdams rdfs:label ""John Quincy Adams""@en .

  # Identify Charlie Baker's real name and associated region
  ?charlieBaker foaf:name ?realName .
  ?charlieBaker rdfs:label ""Charlie Baker (Australian footballer)""@en .
  
  OPTIONAL {
    ?region dbo:administrativeRegion ?charlieBaker .
    ?adminPerson dbo:decedentAtAdministration ?region .
    FILTER EXISTS { ?adminPerson dbo:deathDate ?date }
  }

  # Find a person who was decedent during the administration of that region
}
```",4,5,5,3,2,3,3,71,2,0,0,1.0,1.0,1.0
433,9,train,Give me the associated musical artist of Paul Chambers and associated musical artist of Bill Evans.,SELECT ?result WHERE { <http://dbpedia.org/resource/Paul_Chambers> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . <http://dbpedia.org/resource/Bill_Evans> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . },"```sparql
SELECT ?artist WHERE {
  # Find associated musical artist of Paul Chambers
  OPTIONAL { 
    ?chambers dbo:associatedMusicalArtist ?artist .
    ?chambers rdfs:label ""Paul Chambers""@en .
  }

  # Find associated musical artist of Bill Evans
  OPTIONAL { 
    ?evans dbo:associatedMusicalArtist ?artist .
    ?evans rdfs:label ""Bill Evans (musician)""@en .
  }
}
```",2,2,3,1,2,3,3,71,2,29,0,0.06451612903225806,1.0,0.12121212121212122
935,2,train,"Give me the award, that is an award, of Syed Sohail Hussain Naqvi.",SELECT ?result WHERE { <http://dbpedia.org/resource/Syed_Sohail_Hussain_Naqvi> <http://dbpedia.org/property/awards> ?result . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Award>. },"```sparql
SELECT ?award WHERE {
  ?person rdfs:label ""Syed Sohail Hussain Naqvi""@en .
  ?person dbo:award ?award .
}
```",1,2,2,1,1,3,2,20,1,0,0,1.0,1.0,1.0
888,10,train,Give me the award of the commander in 2022 Ukrainian eastern counteroffensive.,SELECT ?result WHERE { <http://dbpedia.org/resource/2022_Ukrainian_eastern_counteroffensive> <http://dbpedia.org/ontology/commander> ?v0 . ?v0 <http://dbpedia.org/property/awards> ?result . },"```sparql
SELECT ?award WHERE {
  # Find events related to the 2022 Ukrainian eastern counteroffensive
  ?event dbo:wikiPageRedirects db:Q123456789 ; # Placeholder for actual QID of the event
          dbo:award ?award .
  
  # Check if the award is titled ""Commander""
  FILTER (regex(str(?award), ""Commander"", ""i""))
}
```",2,2,3,2,1,3,2,20,0,0,3,0,0.0,0
987,32,train,"Give me the birth place of the actor of All for Free and birth place of the band, that is an artist and a musical artist, of Šako Polumenta.",SELECT ?result WHERE { <http://dbpedia.org/resource/All_for_Free> <http://dbpedia.org/property/starring> ?v3 . ?v3 <http://dbpedia.org/ontology/birthPlace> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. ?v1 <http://dbpedia.org/ontology/birthPlace> ?result . <http://dbpedia.org/resource/Šako_Polumenta> <http://dbpedia.org/ontology/associatedMusicalArtist> ?v1 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. },"```sparql
# Query for the birth place of the actor in ""All for Free""
SELECT ?actor ?birthPlace WHERE {
  ?movie dbo:starring ?actor .
  ?movie rdfs:label ""All for Free""@en .
  OPTIONAL { ?actor dbo:birthPlace ?birthPlace . }
}

# Query for the birth place of the band associated with Šako Polumenta
SELECT ?band ?birthPlace WHERE {
  ?person foaf:name ""Šako Polumenta"" .
  ?person dbo:member ?band .
  ?band a dbo:Band ;
        a dbo:MusicalArtist .
  OPTIONAL { ?band dbo:birthPlace ?birthPlace . }
}
```",4,6,5,2,2,3,3,71,0,0,4,0,0.0,0
456,24,train,Give me the band of Alan Doyle and professional in the alter ego of The Shadow.,SELECT ?result WHERE { ?result <http://dbpedia.org/property/occupation> ?v2 . <http://dbpedia.org/resource/The_Shadow> <http://dbpedia.org/property/alterEgo> ?v2 . <http://dbpedia.org/resource/Alan_Doyle> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . },"```sparql
SELECT ?band ?profession WHERE {
  # Find Alan Doyle's band
  ?doyle dbo:memberOfBand ?band .
  ?doyle rdfs:label ""Alan Doyle""@en .

  # Find Orson Welles' profession related to The Shadow
  OPTIONAL {
    ?shadow dbo:portrayedBy ?welles .
    ?shadow rdfs:label ""The Shadow (radio drama character)""@en .
    ?welles dbo:profession ?profession .
    ?welles rdfs:label ""Orson Welles""@en .
  }
}
```",3,3,4,2,2,3,3,71,0,0,1,0,0.0,0
965,33,train,"Give me the parent of the child, that is a royalty, of the person born, that is a politician, on 1854-05-24 and spouse of Prince Louis of Battenberg.","SELECT ?result WHERE { ?v0 <http://dbpedia.org/ontology/birthDate> ""1854-05-24""^^<http://www.w3.org/2001/XMLSchema#date> . ?v2 <http://dbpedia.org/property/father> ?v0 . ?result <http://dbpedia.org/ontology/spouse> <http://dbpedia.org/resource/Prince_Louis_of_Battenberg> . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v2 <http://dbpedia.org/ontology/parent> ?result . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. }","```sparql
SELECT ?parent WHERE {
  # Identify the politician born on 1854-05-24
  ?politician dbo:birthDate ""1854-05-24""^^xsd:date ;
              rdf:type dbo:Politician .

  # Find spouse of Prince Louis of Battenberg
  ?battenberg dbo:spouse ?politician .
  ?battenberg rdfs:label ""Prince Louis of Battenberg""@en .

  # Identify the child who is royalty
  ?child dbo:parent ?politician ;
         rdf:type dbo:RoyalFamilyMember .

  # Find the parent of this royal child
  ?child dbo:parent ?parent .
}
```",4,6,5,3,2,3,3,71,0,0,1,0,0.0,0
987,28,train,"Give me the birth place of Moamer Kasumović and entity in Montenegro and birth place of the band, that is an artist and a musical artist, of Šako Polumenta.",SELECT ?result WHERE { <http://dbpedia.org/resource/Šako_Polumenta> <http://dbpedia.org/ontology/associatedMusicalArtist> ?v1 . <http://dbpedia.org/resource/Moamer_Kasumović> <http://dbpedia.org/ontology/birthPlace> ?result . ?v1 <http://dbpedia.org/ontology/birthPlace> ?result . ?result <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Montenegro> . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?birthPlaceIzetbegovic ?isInMontenegro ?bandName ?bandBirthPlace WHERE {
  # Find birthplace of Alija Izetbegović
  ?izetbegovic dbo:birthPlace ?birthPlaceIzetbegovic .
  ?izetbegovic rdfs:label ""Alija Izetbegović""@en .

  # Check if the birthplace is in Montenegro
  OPTIONAL {
    ?birthPlaceIzetbegovic dbo:country ?montenegro .
    ?montenegro rdfs:label ""Montenegro""@en .
    BIND (IF(BOUND(?montenegro), true, false) AS ?isInMontenegro)
  }

  # Find the band associated with Šako Polumenta
  ?polumenta dbo:memberOfBand ?band .
  ?polumenta rdfs:label ""Šako Polumenta""@en .

  # Ensure the band is both an artist and a musical artist
  FILTER EXISTS { ?band dbo:type <http://dbpedia.org/ontology/MusicalArtist> }
  FILTER EXISTS { ?band dbo:type <http://dbpedia.org/ontology/Artist> }

  # Get the birthplace of the band
  ?band dbo:birthPlace ?bandBirthPlace .
}
```",4,6,5,2,3,3,3,71,0,0,1,0,0.0,0
18,7,train,"Give me the alumnus of Marymount College, Tarrytown and professional in .","SELECT ?result WHERE { ?result <http://dbpedia.org/property/occupation> """"@en . ?result <http://dbpedia.org/ontology/almaMater> <http://dbpedia.org/resource/Marymount_College,_Tarrytown> . }","```sparql
SELECT ?alumnus ?profession WHERE {
  # Find the entity for Marymount College, Tarrytown
  ?college rdfs:label ""Marymount College, Tarrytown""@en .
  
  # Retrieve alumni of the college
  ?alumnus dbo:alumnusOf ?college .

  # Get professional roles or occupations of these alumni
  OPTIONAL { 
    ?alumnus dbo:occupation ?profession .
  }
}
```",2,2,3,1,2,2,3,28,0,0,1,0,0.0,0
417,5,train,"Who is the leader, that is a royalty, of Colony of Greenland?",SELECT ?result WHERE { <http://dbpedia.org/resource/Colony_of_Greenland> <http://dbpedia.org/property/leader> ?result . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. },"```sparql
SELECT ?leader WHERE {
  # Find the leader of the Colony of Greenland
  ?greenland dbo:leader ?leader .
  ?greenland rdfs:label ""Colony of Greenland""@en .

  # Ensure the leader is royalty
  OPTIONAL { 
    ?leader rdf:type dbo:Monarch .
  }
}
```",1,2,2,1,1,3,3,71,0,0,1,0,0.0,0
124,14,train,"Give me the military force of the force, that is a societal event and a military conflict, of Herbert Kitchener, 1st Earl Kitchener.","SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v1 <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Herbert_Kitchener,_1st_Earl_Kitchener> . ?result <http://dbpedia.org/ontology/battle> ?v1 . }","```sparql
SELECT ?militaryForce ?societalEvent ?militaryConflict WHERE {
  # Identify Herbert Kitchener, 1st Earl Kitchener
  ?kitchener rdfs:label ""Herbert Kitchener""@en .
  
  # Find the military force associated with him
  ?kitchener dbo:militaryCommanderOf ?militaryForce .

  # Determine societal events and military conflicts linked to this military force
  OPTIONAL {
    ?militaryForce dbo:societalEvent ?societalEvent .
  }
  OPTIONAL {
    ?militaryForce dbo:militaryConflict ?militaryConflict .
  }

  FILTER (regex(str(?kitchener), ""Herbert Kitchener"", ""i""))
}
```",2,4,3,2,1,3,3,71,0,0,1190,0,0.0,0
465,7,train,"Give me the parent of Charles Orlando, Dauphin of France.","SELECT ?result WHERE { <http://dbpedia.org/resource/Charles_Orlando,_Dauphin_of_France> <http://dbpedia.org/ontology/parent> ?result . }","```sparql
SELECT ?parent WHERE {
  ?charlesOrlando dbo:parent ?parent .
  ?charlesOrlando rdfs:label ""Charles Orlando, Dauphin of France""@en .
}
```",1,1,2,1,1,3,3,71,2,0,0,1.0,1.0,1.0
892,36,train,"Give me the entity in Italy and entity in the administration, that is Italian and a region and a settlement and an administrative region, of the party, that is a political party and an organisation, of Andrea Cozzolino.",SELECT ?result WHERE { ?v0 <http://dbpedia.org/property/leaderParty> ?v3 . <http://dbpedia.org/resource/Andrea_Cozzolino> <http://dbpedia.org/ontology/party> ?v3 . ?result <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Italy> . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/AdministrativeRegion>. ?result <http://dbpedia.org/ontology/province> ?v0 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Region>. ?v0 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Italy>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/PoliticalParty>. },"```sparql
SELECT ?region ?settlement WHERE {
  # Find the political party of Andrea Cozzolino
  ?cozzolino dbo:party ?party .
  ?cozzolino rdfs:label ""Andrea Cozzolino""@en .

  # Identify an administrative region in Italy that is also a settlement and a region
  ?region rdf:type dbo:AdministrativeRegion ;
          dbo:country dbr:Italy ;
          rdf:type dbo:Settlement ;
          rdf:type dbo:Region .
  
  # Find a settlement within this administrative region
  ?settlement dbo:partOf ?region ;
              rdf:type dbo:Settlement .

}
```",4,10,5,3,2,3,3,71,0,0,587,0,0.0,0
773,0,train,Give me the spouse of Louis the German.,SELECT ?result WHERE { <http://dbpedia.org/resource/Louis_the_German> <http://dbpedia.org/ontology/spouse> ?result . },"```sparql
SELECT ?spouse WHERE {
  ?louis dbo:spouse ?spouse .
  ?louis rdfs:label ""Louis the German""@en .
}
```",1,1,2,1,1,3,3,71,1,0,0,1.0,1.0,1.0
839,25,train,"Give me the band of the band, that is a musical artist, of Charlie Huhn and band of Peter Schorowsky.",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/bandMember> <http://dbpedia.org/resource/Peter_Schorowsky> . ?result <http://dbpedia.org/ontology/bandMember> ?v1 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. <http://dbpedia.org/resource/Charlie_Huhn> <http://dbpedia.org/ontology/associatedMusicalArtist> ?v1 . },"```sparql
SELECT ?band WHERE {
  # Find bands that Charlie Huhn is a member of
  ?charlie dbo:member ?band .
  ?charlie rdfs:label ""Charlie Huhn""@en .

  # Check if these bands are also associated with Peter Schorowsky
  OPTIONAL { 
    ?peter dbo:member ?band .
    ?peter rdfs:label ""Peter Schorowsky""@en .
  }
}
```",3,4,4,2,2,3,3,71,0,0,1,0,0.0,0
933,38,train,"Give me the band of the band, that is a group and a band and an organisation, of Alan Warner (musician) and reference to the birth name of Alan Warner (musician).",SELECT ?result WHERE { ?result <http://xmlns.com/foaf/0.1/name> ?v3 . ?v0 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . <http://dbpedia.org/resource/Alan_Warner_(musician)> <http://dbpedia.org/property/birthName> ?v3 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Band>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Group>. <http://dbpedia.org/resource/Alan_Warner_(musician)> <http://dbpedia.org/ontology/associatedMusicalArtist> ?v0 . },"```sparql
SELECT ?band ?birthName WHERE {
  # Identify Alan Warner (musician)
  ?alanWarner rdfs:label ""Alan Warner""@en .
  
  # Find the band associated with Alan Warner that is a group, a band, and an organization
  ?alanWarner dbo:memberOfBand ?band .
  ?band rdf:type dbp:MusicalGroup ;
        rdf:type dbp:Band ;
        rdf:type dbpedia-owl:Organization .

  # Retrieve Alan Warner's birth name
  OPTIONAL { 
    ?alanWarner foaf:name ?birthName .
  }
}
```",4,7,5,2,2,3,3,71,0,0,1,0,0.0,0
507,20,train,"Give me the director of the movie, that is a movie and a work, with Beryl Reid and spouse of Anne V. Coates.",SELECT ?result WHERE { ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Film>. ?v2 <http://dbpedia.org/ontology/director> ?result . ?result <http://dbpedia.org/ontology/spouse> <http://dbpedia.org/resource/Anne_V._Coates> . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?v2 <http://dbpedia.org/property/starring> <http://dbpedia.org/resource/Beryl_Reid> . },"```sparql
SELECT ?director WHERE {
  # Find movies featuring Beryl Reid
  ?movie dbo:starring _:b1 .
  _:b1 rdfs:label ""Beryl Reid""@en .

  # Identify Anne V. Coates' spouse
  ?anneVCoates dbo:spouse ?spouse .
  ?anneVCoates rdfs:label ""Anne V. Coates""@en .

  # Find a movie directed by this spouse that is also a work
  ?movie dbo:director ?director .
  FILTER (?director = ?spouse)
}
```",3,5,4,2,2,3,3,71,1,0,0,1.0,1.0,1.0
839,2,train,Give me the band of Matthias Röhr.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/bandMember> <http://dbpedia.org/resource/Matthias_Röhr> . },"```sparql
SELECT ?band WHERE {
  ?person rdfs:label ""Matthias Röhr""@en .
  ?person dbo:member ?band .
}
```",1,1,2,1,1,3,3,71,0,0,1,0,0.0,0
773,9,train,Give me the parent of Carloman of Bavaria and spouse of Louis the German.,SELECT ?result WHERE { <http://dbpedia.org/resource/Louis_the_German> <http://dbpedia.org/ontology/spouse> ?result . ?result <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Carloman_of_Bavaria> . },"```sparql
SELECT ?carlomanParent ?louisSpouse WHERE {
  # Find Carloman of Bavaria's parent
  ?carloman dbo:parent ?carlomanParent .
  ?carloman rdfs:label ""Carloman, Duke of Bavaria""@en .

  # Find Louis the German's spouse
  ?louis dbo:spouse ?louisSpouse .
  ?louis rdfs:label ""Louis the German""@en .
}
```",2,2,3,1,2,3,3,71,0,0,1,0,0.0,0
47,32,train,Give me the office of the awardee of Banga Bhushan and office of the administration of Jagdeep Dhankhar.,SELECT ?result WHERE { ?v1 <http://dbpedia.org/property/office> ?result . ?v3 <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/Banga_Bhushan> . ?v1 <http://dbpedia.org/property/governor> <http://dbpedia.org/resource/Jagdeep_Dhankhar> . ?v3 <http://dbpedia.org/property/office> ?result . },"```sparql
SELECT ?awardeeOffice ?dhankharOffice WHERE {
  # Find the awardee of Banga Bhushan and their office
  ?award dbo:recipient ?person .
  ?award rdfs:label ""Banga Bhushan""@en .
  OPTIONAL { ?person dbo:office ?awardeeOffice . }

  # Find Jagdeep Dhankhar's current office
  ?dhankhar foaf:name ""Jagdeep Dhankhar"" .
  OPTIONAL { ?dhankhar dbo:currentAdministrativePost ?dhankharOffice . }
}
```",4,4,5,2,2,3,3,71,0,0,1,0,0.0,0
373,4,train,"Give me the professional in Singer, songwriter and writer of 2300 Jackson Street (song).","SELECT ?result WHERE { ?result <http://dbpedia.org/property/occupation> ""Singer, songwriter""@en . <http://dbpedia.org/resource/2300_Jackson_Street_(song)> <http://dbpedia.org/property/writer> ?result . }","```sparql
SELECT ?person WHERE {
  # Find the song ""2300 Jackson Street""
  ?song dbo:title ""2300 Jackson Street""@en .
  
  # Identify the professional associated with this song
  OPTIONAL { 
    ?song dbo:lyricist ?person .
  }
  OPTIONAL {
    ?song dbo:musician ?person .
  }

  # Ensure the person is a singer, songwriter, or musician
  ?person dbo:occupation ?occupation .
  FILTER (
    regex(str(?occupation), ""Singer|Songwriter|Musician"", ""i"")
  )
}
```",2,2,3,1,2,2,2,9,0,0,1,0,0.0,0
839,7,train,Give me the professional in Musician.,"SELECT ?result WHERE { ?result <http://dbpedia.org/property/occupation> ""Musician""@en . }","```sparql
SELECT ?musician WHERE {
  ?musician dbo:occupation dbc:Musicians .
}
```

### Explanation:
- **`?musician dbo:occupation dbc:Musicians .`:** This line selects entities where the `dbo:occupation` property links them to the category of musicians. The `dbc:Musicians` is a DBpedia Category that represents musicians.",1,1,2,1,1,3,3,71,0,0,7563,0,0.0,0
773,26,train,"Give me the parent of the successor of the child, that is a royalty, of Louis the Pious.",SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?result <http://dbpedia.org/ontology/child> ?v2 . <http://dbpedia.org/resource/Louis_the_Pious> <http://dbpedia.org/ontology/child> ?v1 . ?v1 <http://dbpedia.org/ontology/successor> ?v2 . },"```sparql
SELECT ?parent WHERE {
  # Identify a child of Louis the Pious who is royalty
  ?child dbo:parent dbc:Louis_the_Pious .
  ?child rdf:type dbo:Monarch .

  # Find the successor of this royal child
  OPTIONAL { 
    ?succession dbo:succeeds ?child .
    ?succession dbo:predecessor ?child .
  }

  # Retrieve the parent of this successor
  OPTIONAL {
    ?succession dbo:predecessor ?successor .
    ?successor dbo:parent ?parent .
  }
}
```",3,4,4,3,1,3,3,71,0,0,4,0,0.0,0
892,10,train,Give me the entity in Italy and entity in Province of Reggio Emilia.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/province> <http://dbpedia.org/resource/Province_of_Reggio_Emilia> . ?result <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Italy> . },"```sparql
SELECT ?italyEntity ?reggioEmiliaEntity WHERE {
  # Find an entity for Italy
  ?italyEntity rdfs:label ""Italy""@en .
  
  # Find an entity in the Province of Reggio Emilia
  ?reggioEmiliaEntity dbo:location ?province .
  ?province rdfs:label ""Province of Reggio Emilia""@en .
}
```",2,2,3,1,2,3,3,71,0,3,40,0.0,0.0,0
216,1,train,Give me the player in Mario Ivanković.,SELECT ?result WHERE { <http://dbpedia.org/resource/Mario_Ivanković> <http://dbpedia.org/ontology/team> ?result . },"```sparql
SELECT ?team WHERE {
  ?player dbo:birthName ""Mario Ivanković""@en .
  ?player dbo:team ?team .
}
```",1,1,2,1,1,3,3,71,0,0,13,0,0.0,0
47,12,train,Give me the office of Ajoy Mukherjee and office of Bidesh Ranjan Bose.,SELECT ?result WHERE { <http://dbpedia.org/resource/Bidesh_Ranjan_Bose> <http://dbpedia.org/property/office> ?result . <http://dbpedia.org/resource/Ajoy_Mukherjee> <http://dbpedia.org/property/office> ?result . },"```sparql
SELECT ?person ?officeLabel WHERE {
  # Find Ajoy Mukherjee and his offices
  VALUES ?person { 
    dbpedia:Ajoy_Mukherjee 
    dbpedia:Bidesh_Ranjan_Bose 
  }
  
  ?person rdfs:label ?personLabel .
  FILTER (
    (str(?personLabel) = ""Ajoy Mukherjee""@en)
    || (str(?personLabel) = ""Bidesh Ranjan Bose""@en)
  )
  
  # Find offices held by the person
  ?person dbo:office ?office .
  ?office rdfs:label ?officeLabel .
}
```",2,2,3,1,2,3,3,71,0,0,1,0,0.0,0
645,5,train,"Who is the native, that is a president and a politician, of Restoration (Spain)?",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Restoration_(Spain)> . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/President>. ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. },"```sparql
SELECT ?person WHERE {
  # Find individuals associated with Restoration (Spain)
  ?person dbo:birthPlace dbr:Restoration_(Spain) .
  
  # Ensure the individual is a politician
  ?person dbo:occupation dbr:Politician .

  # Ensure the individual has served as a president
  OPTIONAL { 
    ?person dbo:officeHolder dbr:President_of_Spain .
  }
}
```",1,3,2,1,1,3,3,71,0,0,1,0,0.0,0
507,33,train,"Give me the director of the movie, that is a movie and a work, with the person born on 1919-06-17 and spouse of Anne V. Coates.","SELECT ?result WHERE { ?v3 <http://dbpedia.org/ontology/director> ?result . ?v0 <http://dbpedia.org/ontology/birthDate> ""1919-06-17""^^<http://www.w3.org/2001/XMLSchema#date> . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Film>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?result <http://dbpedia.org/ontology/spouse> <http://dbpedia.org/resource/Anne_V._Coates> . ?v3 <http://dbpedia.org/property/starring> ?v0 . }","```sparql
SELECT ?director WHERE {
  # Find the person born on 1919-06-17 who is married to Anne V. Coates
  ?person dbo:birthDate ""1919-06-17""^^xsd:date .
  ?person dbo:spouse ?anne .
  ?anne rdfs:label ""Anne V. Coates""@en .

  # Find the movies directed by this person that are classified as both a movie and a work
  ?movie dbo:director ?person ;
         rdf:type/rdfs:subClassOf* dbpedia-owl:Film ;
         rdf:type/rdfs:subClassOf* dbpedia-owl:CreativeWork .
}
```",4,6,5,3,2,3,3,71,0,0,1,0,0.0,0
433,33,train,"Give me the associated musical artist of the associated musical artist, that is an artist and a musical artist, of the associated musical artist, that is a musical artist and an artist, of Ornette Coleman and associated musical artist of Paul Chambers.",SELECT ?result WHERE { ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. <http://dbpedia.org/resource/Paul_Chambers> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v3 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . <http://dbpedia.org/resource/Ornette_Coleman> <http://dbpedia.org/ontology/associatedMusicalArtist> ?v0 . ?v0 <http://dbpedia.org/ontology/associatedMusicalArtist> ?v3 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. },"```sparql
SELECT ?finalArtist WHERE {
  # Step 1: Find Ornette Coleman's associated musical artist
  ?ornette dbo:associatedMusicalArtist ?artist1 .
  ?ornette rdfs:label ""Ornette Coleman""@en .

  # Step 2: Find an artist and musical artist of this associated artist
  ?artist1 dbo:associatedMusicalArtist ?artist2 .
  ?artist2 rdf:type dbo:Artist .
  ?artist2 rdf:type dbo:MusicalArtist .

  # Step 3: Identify another associated musical artist from step 2
  ?artist2 dbo:associatedMusicalArtist ?artist3 .

  # Step 4: Find Paul Chambers' associated musical artist
  ?paulChambers dbo:associatedMusicalArtist ?artist4 .
  ?paulChambers rdfs:label ""Paul Chambers""@en .

  # Step 5: Combine results to find the final associated musical artist
  ?artist3 dbo:associatedMusicalArtist ?finalArtist .
  ?artist4 dbo:associatedMusicalArtist ?finalArtist .
}
```",4,8,5,3,2,3,3,71,9,44,1,0.16981132075471697,0.9,0.2857142857142857
98,5,train,Give me the parent of the successor of Emperor Nijō.,SELECT ?result WHERE { ?v0 <http://dbpedia.org/ontology/parent> ?result . <http://dbpedia.org/resource/Emperor_Nijō> <http://dbpedia.org/ontology/successor> ?v0 . },"```sparql
SELECT ?parent WHERE {
  # Find Emperor Nijō and his successor
  ?nijo dbo:successor ?successor .
  ?nijo rdfs:label ""Emperor Nijō""@en .

  # Find the parent of the successor
  ?successor dbo:parent ?parent .
}
```",2,2,3,2,1,2,2,9,1,0,0,1.0,1.0,1.0
507,26,train,"Give me the director of the movie, that is a movie and a work, with the person born on 1919-06-17.","SELECT ?result WHERE { ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?v1 <http://dbpedia.org/ontology/birthDate> ""1919-06-17""^^<http://www.w3.org/2001/XMLSchema#date> . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Film>. ?v2 <http://dbpedia.org/ontology/director> ?result . ?v2 <http://dbpedia.org/property/starring> ?v1 . }","```sparql
SELECT ?director WHERE {
  # Find person born on June 17, 1919
  ?person dbo:birthDate ""1919-06-17""^^xsd:date .
  
  # Find movies associated with this person that are both a movie and a work
  ?movie dbo:creatorOrContributor ?person ;
         rdf:type dbpedia-owl:Film ;
         rdf:type dbpedia-owl:CreativeWork .

  # Get the director of these movies
  ?movie dbo:director ?director .
}
```",3,5,4,3,1,3,3,71,0,0,11,0,0.0,0
124,9,train,Give me the commander in Mahdist War and military force of Battle of Tamai.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/battle> <http://dbpedia.org/resource/Battle_of_Tamai> . <http://dbpedia.org/resource/Mahdist_War> <http://dbpedia.org/ontology/commander> ?result . },"```sparql
SELECT ?commander ?militaryForce WHERE {
  # Find the commander in the Mahdist War
  OPTIONAL {
    ?mahdiWar dbo:participatedInMilitaryConflict [
      rdf:type dbo:MilitaryConflict ;
      rdfs:label ""Mahdist War""@en .
    ] ;
    dbo:commander ?commander .
    FILTER (regex(str(?commander), ""Muhammad Ahmad bin Abd Allah"", ""i""))
  }

  # Find the military force at the Battle of Tamai
  OPTIONAL {
    ?battleOfTamai dbo:participatedInMilitaryConflict [
      rdf:type dbo:MilitaryConflict ;
      rdfs:label ""Battle of Tamai""@en .
    ] ;
    dbo:militaryForce ?militaryForce .
    FILTER (regex(str(?militaryForce), ""British and Egyptian forces"", ""i""))
  }
}
```",2,2,3,1,2,3,3,71,0,0,1,0,0.0,0
443,11,train,Give me the birthplace of the work of yes.,"SELECT ?result WHERE { ?v1 <http://dbpedia.org/property/author> ""yes""@en . ?v1 <http://dbpedia.org/ontology/birthPlace> ?result . }","```sparql
SELECT ?birthPlace WHERE {
  ?album dbo:workExample ?yes .
  ?yes rdfs:label ""Yes""@en .
  ?album rdfs:label ""Close to the Edge""@en .
  ?album dbo:placeOfBirth ?birthPlace .
}
```",2,2,3,2,1,2,3,28,0,0,993,0,0.0,0
102,8,train,"Give me the native of the residence, that is English and a settlement, of Peter Finbow.",SELECT ?result WHERE { ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. ?v0 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/United_Kingdom>. <http://dbpedia.org/resource/Peter_Finbow> <http://dbpedia.org/property/residence> ?v0 . ?result <http://dbpedia.org/ontology/birthPlace> ?v0 . },"```sparql
SELECT ?native WHERE {
  # Find Peter Finbow and his residence
  ?person dbo:birthPlace ?residence .
  ?person rdfs:label ""Peter Finbow""@en .

  # Ensure the residence is a settlement in England
  ?residence rdf:type dbo:Settlement ;
             dbo:country dbr:England .

  # Find native of the residence
  OPTIONAL {
    ?residence dbo:native ?native .
  }
}
```",2,4,3,2,1,3,2,20,0,0,100,0,0.0,0
917,33,train,"Give me the parent of Albert Kamehameha and child of the father of the spouse, that is a royalty, of Leleiohoku I.",SELECT ?result WHERE { ?v0 <http://dbpedia.org/ontology/spouse> <http://dbpedia.org/resource/Leleiohoku_I> . ?result <http://dbpedia.org/ontology/parent> ?v2 . ?v0 <http://dbpedia.org/property/father> ?v2 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?result <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Albert_Kamehameha> . },"```sparql
SELECT ?parentOfAlbert ?child WHERE {
  # Find Albert Kamehameha and his parent
  ?albert dbo:parent ?parentOfAlbert .
  ?albert rdfs:label ""Albert Kamehameha""@en .

  # Find spouse of Leleiohoku I who is royalty
  OPTIONAL { 
    ?leleiohoku dbo:spouse ?royalSpouse .
    ?leleiohoku rdfs:label ""Leleiohoku I""@en .
    FILTER (regex(str(?royalSpouse), ""Princess Victoria Kamāmalu"", ""i""))
  }

  # Find father of the royal spouse
  OPTIONAL {
    ?royalSpouse dbo:parent ?fatherOfRoyalSpouse .
    FILTER (regex(str(?royalSpouse), ""Princess Victoria Kamāmalu"", ""i""))
  }
  
  # Find child of the father of the royal spouse
  OPTIONAL {
    ?fatherOfRoyalSpouse dbo:child ?child .
  }
}
```",4,5,5,3,2,3,3,71,1,44100,0,2.2675222784063853e-05,1.0,4.534941725998821e-05
216,14,train,"Give me the team of the person born, that is a sports manager and a soccer manager and a soccer player, on 1983-12-20.","SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerPlayer>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsManager>. ?result <http://dbpedia.org/ontology/coach> ?v1 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerManager>. ?v1 <http://dbpedia.org/ontology/birthDate> ""1983-12-20""^^<http://www.w3.org/2001/XMLSchema#date> . }","```sparql
SELECT ?person ?team WHERE {
  # Find person born on December 20, 1983
  ?person dbo:birthDate ""1983-12-20""^^xsd:date .
  
  # Ensure the person is a sports manager, soccer manager, and former soccer player
  ?person dbo:occupation ?occupation1 .
  ?person dbo:occupation ?occupation2 .
  ?person dbo:formerOccupation ?occupation3 .
  
  FILTER (
    regex(str(?occupation1), ""sports manager"", ""i"") &&
    regex(str(?occupation2), ""soccer manager"", ""i"") &&
    regex(str(?occupation3), ""soccer player"", ""i"")
  )
  
  # Find the team associated with this person in their managerial role
  ?person dbo:managerOf ?team .
}
```",2,5,3,2,1,3,3,71,0,0,1,0,0.0,0
917,8,train,Give me the father of Kamehameha IV.,SELECT ?result WHERE { <http://dbpedia.org/resource/Kamehameha_IV> <http://dbpedia.org/property/father> ?result . },"```sparql
SELECT ?father WHERE {
  ?kamehamehaIV dbo:parent ?father .
  ?kamehamehaIV rdfs:label ""Kamehameha IV""@en .
}
```",1,1,2,1,1,3,3,71,0,2,1,0.0,0.0,0
773,30,train,"Give me the parent of Carloman of Bavaria and parent of the child, that is a royalty, of Louis the German and spouse of Louis the German.",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Carloman_of_Bavaria> . ?v1 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Louis_the_German> . ?v1 <http://dbpedia.org/ontology/parent> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. <http://dbpedia.org/resource/Louis_the_German> <http://dbpedia.org/ontology/spouse> ?result . },"```sparql
SELECT ?parentOfCarloman ?parentOfRoyalChild WHERE {
  # Find Carloman of Bavaria and his parent
  ?carloman dbo:parent ?parentOfCarloman .
  ?carloman rdfs:label ""Carloman of Bavaria""@en .

  # Find Louis the German, his spouse, and a royal child
  OPTIONAL { 
    ?louis dbo:spouse ?spouse .
    ?louis rdfs:label ""Louis the German""@en .
  }

  OPTIONAL {
    ?child dbo:parent ?louis ;
           rdf:type dbo:RoyalFamilyMember .
    FILTER (regex(str(?child), ""royal"", ""i""))
  }

  # Find parent of the royal child
  OPTIONAL {
    ?child dbo:parent ?parentOfRoyalChild .
    FILTER (regex(str(?child), ""royal"", ""i""))
  }
}
```",4,5,5,2,3,3,3,71,1,35,0,0.027777777777777776,1.0,0.05405405405405406
130,6,train,Give me the entity in Tennessee and figure known as Vanderbilt Commodores.,SELECT ?result WHERE { ?result <http://dbpedia.org/property/nickname> <http://dbpedia.org/resource/Vanderbilt_Commodores> . ?result <http://dbpedia.org/ontology/state> <http://dbpedia.org/resource/Tennessee> . },"```sparql
SELECT ?university ?team WHERE {
  ?university dbo:locationCountry dbc:Tennessee .
  ?university rdfs:label ""Vanderbilt University""@en .
  
  OPTIONAL {
    ?university dbo:sportsTeam ?team .
    ?team rdfs:label ""Vanderbilt Commodores""@en .
  }
}
```",2,2,3,1,2,3,2,20,0,0,1,0,0.0,0
216,31,train,"Give me the player in Mario Ivanković and player in the coach of the reference, that is an organisation and a soccer club, to Croatia U21.","SELECT ?result WHERE { <http://dbpedia.org/resource/Mario_Ivanković> <http://dbpedia.org/ontology/team> ?result . ?v1 <http://xmlns.com/foaf/0.1/name> ""Croatia U21""@en . ?v0 <http://dbpedia.org/ontology/team> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?v1 <http://dbpedia.org/ontology/coach> ?v0 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerClub>. }","```sparql
SELECT ?marioClub ?coachName ?coachClub WHERE {
  # Find the club associated with Mario Ivanković as a player
  ?mario dbo:playerForTeam ?marioClub .
  ?mario rdfs:label ""Mario Ivanković""@en .

  # Find the coach of Croatia U21 and their association with any soccer club
  ?croatiaU21 dbo:coachOfTeam ?coach .
  ?croatiaU21 rdfs:label ""Croatia national under-21 football team""@en .
  
  OPTIONAL {
    ?coach dbo:playerForTeam ?coachClub .
    FILTER EXISTS { ?coachClub a dbo:SoccerClub }
  }

  # Bind the coach's name
  BIND(str(?coach) AS ?coachName)
}
```",4,6,5,3,2,3,3,71,0,0,3,0,0.0,0
341,4,train,Give me the band member of Beyoncé and writer of In Love & War (Amerie album).,SELECT ?result WHERE { <http://dbpedia.org/resource/In_Love_&_War_(Amerie_album)> <http://dbpedia.org/property/writer> ?result . ?result <http://dbpedia.org/ontology/associatedMusicalArtist> <http://dbpedia.org/resource/Beyoncé> . },"```sparql
# Query to find a band member of Beyoncé
SELECT DISTINCT ?bandMember WHERE {
  ?beyonce dbo:member ?bandMember .
  ?beyonce rdfs:label ""Beyoncé""@en .
}

UNION

# Query to find the writer of ""In Love & War"" from Amerie's album
SELECT DISTINCT ?writer WHERE {
  ?song dbo:composer ?writer .
  ?album dbo:song ?song .
  ?album rdfs:label ""In Love & War""@en .
  ?album dbo:artist ?amerie .
  ?amerie rdfs:label ""Amerie""@en .
}
```",2,2,3,1,2,2,2,9,0,0,1,0,0.0,0
582,0,train,Give me the reference to Japan.,"SELECT ?result WHERE { ?result <http://xmlns.com/foaf/0.1/name> ""Japan""@en . }","```sparql
SELECT ?resource WHERE {
  ?resource rdfs:label ""Japan""@en .
}
```",1,1,2,1,1,3,3,71,1,1,14,0.5,0.06666666666666667,0.11764705882352941
965,8,train,"Give me the person born, that is a noble, as Prince George of Battenberg.","SELECT ?result WHERE { ?result <http://dbpedia.org/property/birthName> ""Prince George of Battenberg""@en . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Noble>. }","```sparql
SELECT ?person ?birthDate WHERE {
  ?person rdfs:label ""Prince George of Battenberg""@en .
  OPTIONAL { ?person dbo:nobleTitle ?title . }
  OPTIONAL { ?person dbo:birthDate ?birthDate . }
}
```",1,2,2,1,1,3,3,71,0,1,1,0.0,0.0,0
433,30,train,Give me the associated musical artist of Bill Evans and professional in the profession of Bob Marley and associated musical artist of Paul Chambers.,SELECT ?result WHERE { <http://dbpedia.org/resource/Bill_Evans> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?result <http://dbpedia.org/property/occupation> ?v1 . <http://dbpedia.org/resource/Bob_Marley> <http://dbpedia.org/property/occupation> ?v1 . <http://dbpedia.org/resource/Paul_Chambers> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . },"```sparql
# Query to find an associated musical artist of Bill Evans
SELECT ?associatedArtist WHERE {
  ?billEvans dbo:associatedMusicalArtist ?associatedArtist .
  ?billEvans rdfs:label ""Bill Evans""@en .
}

UNION

# Query to find a professional in the same profession as Bob Marley (singer-songwriter)
SELECT ?professional WHERE {
  ?bobMarley dbo:profession ?profession .
  ?bobMarley rdfs:label ""Bob Marley""@en .
  FILTER regex(str(?profession), ""Singer-songwriter"", ""i"")
  
  ?otherPerson dbo:profession ?sameProfession .
  FILTER (str(?sameProfession) = str(?profession))
  FILTER NOT EXISTS { ?otherPerson rdfs:label ""Bob Marley""@en }
}

UNION

# Query to find an associated musical artist of Paul Chambers
SELECT ?associatedArtist WHERE {
  ?paulChambers dbo:associatedMusicalArtist ?associatedArtist .
  ?paulChambers rdfs:label ""Paul Chambers (bassist)""@en .
}
```",4,4,5,2,3,3,3,71,0,0,1,0,0.0,0
826,18,train,"Give me the predecessor of Louis IV, Grand Duke of Hesse and spouse of Anna Magdalena Appel and successor of Louis II, Grand Duke of Hesse.","SELECT ?result WHERE { <http://dbpedia.org/resource/Anna_Magdalena_Appel> <http://dbpedia.org/ontology/spouse> ?result . ?result <http://dbpedia.org/ontology/successor> <http://dbpedia.org/resource/Louis_IV,_Grand_Duke_of_Hesse> . <http://dbpedia.org/resource/Louis_II,_Grand_Duke_of_Hesse> <http://dbpedia.org/ontology/successor> ?result . }","```sparql
SELECT ?predecessor ?spouse WHERE {
  # Find predecessor of Louis IV, Grand Duke of Hesse
  ?louisIV dbo:predecessor ?predecessor .
  ?louisIV rdfs:label ""Louis IV, Grand Duke of Hesse""@en .

  # Find spouse of Anna Magdalena Appel who is also successor of Louis II, Grand Duke of Hesse
  OPTIONAL {
    ?annaMagdalena dbo:spouse ?spouse .
    ?annaMagdalena rdfs:label ""Anna Magdalena Appel""@en .
  }
  
  OPTIONAL {
    ?louisII dbo:successor ?spouse .
    ?louisII rdfs:label ""Louis II, Grand Duke of Hesse""@en .
  }

  # Ensure the spouse is both Anna's and Louis II's successor
  FILTER (?spouse = ?annaMagdalena)
}
```",3,3,4,1,3,3,3,71,1,0,0,1.0,1.0,1.0
865,11,train,"Give me the native of the residence, that is a country, of Ram Jaipal Singh Yadav.",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/birthPlace> ?v1 . <http://dbpedia.org/resource/Ram_Jaipal_Singh_Yadav> <http://dbpedia.org/property/residence> ?v1 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. },"```sparql
SELECT ?native WHERE {
  # Step 1: Identify Ram Jaipal Singh Yadav
  ?person rdfs:label ""Ram Jaipal Singh Yadav""@en .
  
  # Step 2: Determine his residence and ensure it is a country
  ?person dbo:residence ?residence .
  ?residence rdf:type dbo:Country .

  # Step 3: Find the native of this country
  ?native dbo:nativeOf ?residence .
}
```",2,3,3,2,1,3,3,71,0,0,1898,0,0.0,0
987,22,train,"Give me the entity in the region, that is a country, of Central European Time and birth place of Dado Polumenta.",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/country> ?v0 . ?v0 <http://dbpedia.org/property/timeZone> <http://dbpedia.org/resource/Central_European_Time> . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. <http://dbpedia.org/resource/Dado_Polumenta> <http://dbpedia.org/ontology/birthPlace> ?result . },"```sparql
SELECT ?country WHERE {
  # Find countries in the Central European Time region
  ?cetRegion dbo:timeZone dbr:Central_European_Time .
  ?cetRegion dbo:country ?country .

  # Find birthplace of Dado Polumenta
  OPTIONAL { 
    dbr:Dado_Polumenta dbo:birthPlace ?birthPlace .
    FILTER (?birthPlace = ?country)
  }
}
```",3,4,4,2,2,3,3,71,0,95,1,0.0,0.0,0
773,19,train,Give me the parent of Carloman of Bavaria and spouse of the father of Charles the Fat.,SELECT ?result WHERE { <http://dbpedia.org/resource/Charles_the_Fat> <http://dbpedia.org/property/father> ?v0 . ?v0 <http://dbpedia.org/ontology/spouse> ?result . ?result <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Carloman_of_Bavaria> . },"```sparql
SELECT ?carlomanParent ?charlesFatFatherSpouse WHERE {
  # Find parent (father) of Carloman of Bavaria
  ?carloman dbo:parent ?carlomanParent .
  ?carloman rdfs:label ""Carloman of Bavaria""@en .

  # Find father of Charles the Fat and his spouse
  ?charlesFat dbo:parent ?charlesFatFather .
  ?charlesFat rdfs:label ""Charles the Fat""@en .
  
  OPTIONAL {
    ?charlesFatFather dbo:spouse ?charlesFatFatherSpouse .
  }
}
```",3,3,4,2,2,3,3,71,1,1,0,0.5,1.0,0.6666666666666666
267,11,train,"Give me the coach of the player, that is a soccer club, in Rasoul Khatibi and person born on 1953-03-01.","SELECT ?result WHERE { ?v2 <http://dbpedia.org/ontology/coach> ?result . ?result <http://dbpedia.org/ontology/birthDate> ""1953-03-01""^^<http://www.w3.org/2001/XMLSchema#date> . <http://dbpedia.org/resource/Rasoul_Khatibi> <http://dbpedia.org/ontology/team> ?v2 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerClub>. }","```sparql
SELECT ?coach WHERE {
  # Find Rasoul Khatibi's associated soccer club
  ?player dbo:birthName ""Rasoul Khatibi""@en .
  ?player dbo:memberOfSportsTeam ?club .
  
  # Find the coach of that soccer club
  ?club dbo:coach ?coach .
  
  # Filter the coach by birthdate
  FILTER (?coach dbo:birthdayYear ""1953""^^xsd:gYear && 
          ?coach dbo:birthdayMonth ""03""^^xsd:gMonth &&
          ?coach dbo:birthdayDay ""01""^^xsd:gDay)
}
```",3,4,4,2,2,3,2,20,0,0,1,0,0.0,0
136,5,train,Give me the region coded as the area code of Levenhagen.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/areaCode> ?v0 . <http://dbpedia.org/resource/Levenhagen> <http://dbpedia.org/ontology/areaCode> ?v0 . },"```sparql
SELECT ?region WHERE {
  # Find the area code of Levenhagen
  ?levenhagen dbp:areaCode ?areaCode .
  ?levenhagen rdfs:label ""Levenhagen""@en .

  # Use the area code to find the corresponding region
  ?location dbp:areaCode ?areaCode ;
            dbo:region ?region .
}
```",2,2,3,2,1,2,2,9,0,0,9,0,0.0,0
456,26,train,"Give me the professional in the alter ego of the reference, that is a fictional character, to Lamont Cranston (radio, film and television).","SELECT ?result WHERE { ?result <http://dbpedia.org/property/occupation> ?v2 . ?v1 <http://dbpedia.org/property/alterEgo> ?v2 . ?v1 <http://xmlns.com/foaf/0.1/name> ""Lamont Cranston (radio, film and television)""@en . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/FictionalCharacter>. }","```sparql
SELECT ?actor WHERE {
  # Identify Lamont Cranston and his alter ego
  ?lamontCranston dbo:alterEgo ?theShadow .
  ?lamontCranston rdfs:label ""Lamont Cranston""@en .

  # Find actors who portrayed The Shadow in various media
  ?media dbo:portrayalOf ?theShadow .
  ?media dbo:actor ?actor .
}
```",3,4,4,3,1,3,3,71,0,0,39640,0,0.0,0
582,38,train,"Give me the player in the father, that is an athlete and a soccer manager and a sports manager, of Masami Nagasawa and figure known as the nickname of Japan national football team.",SELECT ?result WHERE { <http://dbpedia.org/resource/Japan_national_football_team> <http://dbpedia.org/property/nickname> ?v2 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsManager>. <http://dbpedia.org/resource/Masami_Nagasawa> <http://dbpedia.org/property/father> ?v3 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Athlete>. ?v3 <http://dbpedia.org/ontology/team> ?result . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerManager>. ?result <http://dbpedia.org/property/nickname> ?v2 . },"```sparql
SELECT ?father ?nickname WHERE {
  # Find Masami Nagasawa and her father
  ?nagasawa dbo:parent ?father .
  ?nagasawa rdfs:label ""Masami Nagasawa""@en .

  # Ensure the father is an athlete, soccer manager, and sports manager
  ?father rdf:type dbo:Athlete ;
          dbo:sportManagerOf ?team ;
          dbo:managerialPosition ?position .
  
  FILTER EXISTS { ?father dbo:occupation ""Soccer Manager""@en }
  FILTER EXISTS { ?father dbo:occupation ""Sports Manager""@en }

  # Find the nickname of the Japan national football team
  ?team rdfs:label ""Japan national football team""@en ;
        dbo:nickname ?nickname .
}
```",4,7,5,2,2,3,3,71,0,0,1,0,0.0,0
433,8,train,Give me the profession of Bob Marley.,SELECT ?result WHERE { <http://dbpedia.org/resource/Bob_Marley> <http://dbpedia.org/property/occupation> ?result . },"```sparql
SELECT ?occupation WHERE {
  ?marley rdfs:label ""Bob Marley""@en .
  ?marley dbo:occupation ?occupation .
}
```",1,1,2,1,1,3,3,71,0,1,3,0.0,0.0,0
216,12,train,Give me the player in Mario Ivanković and team of Ognjen Vukojević.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/coach> <http://dbpedia.org/resource/Ognjen_Vukojević> . <http://dbpedia.org/resource/Mario_Ivanković> <http://dbpedia.org/ontology/team> ?result . },"```sparql
SELECT ?playerTeam ?coachTeam WHERE {
  # Find the team associated with Mario Ivanković as a player
  ?mario dbo:birthName ""Mario Ivanković""@en .
  ?mario dbo:team ?playerTeam .

  # Find the team associated with Ognjen Vukojević as a coach or manager
  ?ognjen dbo:birthName ""Ognjen Vukojević""@en .
  ?ognjen dbo:managerOf ?coachTeam .
}
```",2,2,3,1,2,3,3,71,0,0,1,0,0.0,0
933,29,train,Give me the reference to the birth name of Alan Warner (musician) and band of Mike Elliott (saxophonist) and band of The Ramong Sound.,SELECT ?result WHERE { <http://dbpedia.org/resource/Alan_Warner_(musician)> <http://dbpedia.org/property/birthName> ?v3 . ?result <http://xmlns.com/foaf/0.1/name> ?v3 . <http://dbpedia.org/resource/Mike_Elliott_(saxophonist)> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . <http://dbpedia.org/resource/The_Ramong_Sound> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . },"```sparql
SELECT ?birthName ?mikeElliottBand ?ramongSound WHERE {
  # Alan Warner's birth name
  ?alanWarner dbo:birthName ?birthName .
  ?alanWarner rdfs:label ""Alan Warner (musician)""@en .

  # Mike Elliott's band
  OPTIONAL {
    ?mikeElliott dbo:band ?mikeElliottBand .
    ?mikeElliott rdfs:label ""Mike Elliott (saxophonist)""@en .
  }

  # The Ramong Sound alias for a band
  OPTIONAL {
    ?ramongSound rdfs:label ""The Ramong Sound""@en .
    ?alias owl:sameAs ?band .
    ?band rdfs:label ?bandLabel .
    FILTER (lang(?bandLabel) = 'en')
  }
}
```",4,4,5,2,3,3,3,71,0,0,1,0,0.0,0
170,4,train,Give me the awardee of People's Artist of Russia.,SELECT ?result WHERE { ?result <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/People's_Artist_of_Russia> . },"```sparql
SELECT ?awardee WHERE {
  ?award rdfs:label ""People's Artist of Russia""@en .
  ?award dbo:recipient ?awardee .
}
```",1,1,2,1,1,2,3,28,0,0,24,0,0.0,0
36,13,train,"Give me the person born in 1971 and actor of the claim to fame, that is a film, of Lepacious Bose.","SELECT ?result WHERE { ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Film>. ?result <http://dbpedia.org/ontology/birthYear> ""1971""^^<http://www.w3.org/2001/XMLSchema#gYear> . <http://dbpedia.org/resource/Lepacious_Bose> <http://dbpedia.org/ontology/knownFor> ?v0 . ?v0 <http://dbpedia.org/ontology/starring> ?result . }","```sparql
SELECT ?actor WHERE {
  # Find the film associated with Lepacious Bose's claim to fame
  ?lepacious dbo:claimToFame ?film .
  ?lepacious rdfs:label ""Lepacious Bose""@en .

  # Find actors of that film
  ?film dbo:starring ?actor .

  # Filter actors by birth year (1971)
  ?actor dbo:birthYear ?year .
  FILTER (?year = 1971)
}
```",3,4,4,2,2,2,3,28,0,0,1,0,0.0,0
445,14,train,Give me the entity in the award of George H. Cameron.,SELECT ?result WHERE { <http://dbpedia.org/resource/George_H._Cameron> <http://dbpedia.org/property/awards> ?v1 . ?result <http://dbpedia.org/ontology/country> ?v1 . },"```sparql
SELECT ?award WHERE {
  ?cameron dbo:birthName ""George Henry Cameron""@en .
  ?cameron dbo:honorificTitle ?title .
  ?cameron dbo:award ?award .
}
```",2,2,3,2,1,3,3,71,0,0,87241,0,0.0,0
459,15,train,"Give me the person born as John Kevin Stitt and governor of the death place, that is a settlement, of Cliff Roquemore.","SELECT ?result WHERE { ?result <http://dbpedia.org/property/birthName> ""John Kevin Stitt""@en . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. ?v1 <http://dbpedia.org/property/governor> ?result . <http://dbpedia.org/resource/Cliff_Roquemore> <http://dbpedia.org/ontology/deathPlace> ?v1 . }","```sparql
SELECT ?governor WHERE {
  # Identify John Kevin Stitt
  ?stitt dbo:birthName ""John Kevin Stitt""@en .
  
  # Find Cliff Roquemore's death place
  ?roquemore dbo:deathPlace ?deathPlace .
  ?roquemore rdfs:label ""Cliff Roquemore""@en .

  # Ensure the death place is a settlement
  ?deathPlace rdf:type dbo:Settlement .

  # Check if John Kevin Stitt was governor of that settlement
  ?stitt dbo:governorOf ?deathPlace .
}
```",3,4,4,2,2,2,3,28,0,0,1,0,0.0,0
987,21,train,"Give me the birth place of the band, that is an artist and a musical artist, of Šako Polumenta and entity in Montenegro.",SELECT ?result WHERE { <http://dbpedia.org/resource/Šako_Polumenta> <http://dbpedia.org/ontology/associatedMusicalArtist> ?v2 . ?result <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Montenegro> . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?v2 <http://dbpedia.org/ontology/birthPlace> ?result . },"```sparql
SELECT ?bandBirthPlace WHERE {
  # Find Šako Polumenta
  ?sako foaf:name ""Šako Polumenta""@en .
  
  # Identify the band associated with Šako Polumenta as an artist and musical artist
  ?sako dbo:member ?band .
  ?band a dbo:Band ;
        a dbo:MusicalArtist ;
        dbo:birthPlace ?bandBirthPlace .

  # Ensure the entity is in Montenegro
  ?bandBirthPlace dbo:country dbr:Montenegro .
}
```",3,5,4,2,2,3,3,71,0,0,1,0,0.0,0
216,17,train,Give me the administration of  and party of the awardee of Australian Defence Medal.,"SELECT ?result WHERE { ?result <http://dbpedia.org/property/leader> """"@en . ?v1 <http://dbpedia.org/ontology/party> ?result . ?v1 <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/Australian_Defence_Medal> . }","```sparql
SELECT DISTINCT ?awardee ?administration ?party WHERE {
  # Find awardees of the Australian Defence Medal
  ?awardee dbo:award ?medal .
  ?medal rdfs:label ""Australian Defence Medal""@en .

  OPTIONAL {
    # Check if the awardee has held a political administration role
    ?awardee dbo:office ?administration .
    ?administration dbo:party ?party .
    
    # Filter to ensure we get only relevant political roles and parties
    FILTER EXISTS { ?administration rdf:type dbo:GovernmentRole }
  }

  OPTIONAL {
    # Directly check for party affiliation if not covered by the administration role
    ?awardee dbo:politicalParty ?party .
  }
}
```",3,3,4,2,2,2,3,28,0,7,1,0.0,0.0,0
935,3,train,Give me the awardee of Sitara-i-Imtiaz.,SELECT ?result WHERE { ?result <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/Sitara-i-Imtiaz> . },"```sparql
SELECT ?awardee WHERE {
  ?award dbo:wikiPageRedirects dbpedia-pk:Sitarai-Imtiaz .
  ?award dbo:recipient ?awardee .
}
```",1,1,2,1,1,3,2,20,0,0,52,0,0.0,0
715,35,train,"Give me the leader of the office, that is a government agency and an organisation, of Carlos Franco Iribarnegaray and commander in the force, that is a military conflict, of Abd el-Krim.",SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v2 <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Abd_el-Krim> . <http://dbpedia.org/resource/Carlos_Franco_Iribarnegaray> <http://dbpedia.org/property/office> ?v1 . ?v1 <http://dbpedia.org/ontology/leader> ?result . ?v2 <http://dbpedia.org/ontology/commander> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/GovernmentAgency>. },"```sparql
SELECT ?leaderOfOffice ?commanderInConflict WHERE {
  # Find Carlos Franco Iribarnegaray and his associated office
  ?carlos a dbo:Person ;
          rdfs:label ""Carlos Franco Iribarnegaray""@en .
  
  OPTIONAL {
    ?office dbo:employee ?carlos ;
            a dbo:GovernmentAgency, dbo:Organization .
    ?leaderOfOffice dbo:positionHeld ?office ;
                    rdfs:label ?leaderLabel .
  }
  
  # Find Abd el-Krim and the military conflict he commanded
  ?abdElKrim a dbo:Person ;
             rdfs:label ""Abd el-Krim""@en .

  OPTIONAL {
    ?conflict dbo:commander ?abdElKrim ;
              a dbo:MilitaryConflict .
    
    ?commanderInConflict dbo:positionHeld ?conflict ;
                         rdfs:label ?commanderLabel .
  }
}
```",4,7,5,2,2,3,3,71,0,0,1,0,0.0,0
274,8,train,"Give me the band member of the person born, that is a musical artist, as John Birks Gillespie.","SELECT ?result WHERE { ?v1 <http://dbpedia.org/property/birthName> ""John Birks Gillespie""@en . ?result <http://dbpedia.org/ontology/associatedMusicalArtist> ?v1 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. }","```sparql
SELECT ?band WHERE {
  # Identify John Birks Gillespie (Dizzy Gillespie) as a musical artist
  ?gillespie dbo:birthName ""John Birks Gillespie""@en .
  ?gillespie rdf:type dbo:MusicalArtist .

  # Find bands associated with Dizzy Gillespie
  ?gillespie dbo:musicalArtist ?band .
}
```",2,3,3,2,1,2,3,28,0,0,67,0,0.0,0
98,8,train,Give me the region of the time zone of Lopez Jaena.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/timeZone> ?v1 . <http://dbpedia.org/resource/Lopez_Jaena> <http://dbpedia.org/ontology/timeZone> ?v1 . },"```sparql
SELECT ?region WHERE {
  # Find Lopez Jaena and his birthplace or relevant location
  ?jaena dbo:birthPlace ?location .
  ?jaena rdfs:label ""Lopez Jaena""@en .

  # Get the time zone of that location
  ?location dbp:timeZone ?timeZone .

  # Find the region associated with the time zone
  ?timeZone dbp:region ?region .
}
```",2,2,3,2,1,2,3,28,0,0,1874,0,0.0,0
465,6,train,"Give me the child, that is a royalty, of Ferdinand I, Holy Roman Emperor.","SELECT ?result WHERE { ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. <http://dbpedia.org/resource/Ferdinand_I,_Holy_Roman_Emperor> <http://dbpedia.org/ontology/child> ?result . }","```sparql
SELECT ?child WHERE {
  # Find Ferdinand I, Holy Roman Emperor and his children
  ?ferdinand dbo:child ?child .
  ?ferdinand rdfs:label ""Ferdinand I, Holy Roman Emperor""@en .

  # Ensure the child is royalty by checking for a royal title in their label
  OPTIONAL {
    ?child rdfs:label ?label .
    FILTER (regex(str(?label), ""(King|Queen|Emperor|Archduke|Archduchess)"", ""i""))
  }
}
```",1,2,2,1,1,3,3,71,11,2,0,0.8461538461538461,1.0,0.9166666666666666
232,6,train,Give me the claim to fame of the person born as Emily Katherine Jacques.,"SELECT ?result WHERE { ?v0 <http://dbpedia.org/property/birthName> ""Emily Katherine Jacques""@en . ?v0 <http://dbpedia.org/ontology/knownFor> ?result . }","```sparql
SELECT ?claim WHERE {
  ?person rdfs:label ""Emily Katherine Jacques""@en .
  ?person dbo:notableRole ?role .
  OPTIONAL { 
    ?role rdfs:label ?claim .
    FILTER (regex(str(?claim), ""Downton Abbey"", ""i""))
  }
}
```",2,2,3,2,1,2,2,9,0,0,2,0,0.0,0
839,21,train,"Give me the band of the person born, that is a musical artist, as Kevin Richard Russell and band of Matthias Röhr.","SELECT ?result WHERE { ?v1 <http://dbpedia.org/property/birthName> ""Kevin Richard Russell""@en . ?result <http://dbpedia.org/ontology/bandMember> <http://dbpedia.org/resource/Matthias_Röhr> . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?v1 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . }","```sparql
SELECT ?person ?band WHERE {
  # Find Kevin Richard Russell (Kevin Russell)
  VALUES ?kevin { dbp:KevinRussell }
  
  # Find Matthias Röhr
  VALUES ?matthias { dbp:MatthiasRöhr }

  # Check if they are musical artists and find their bands
  OPTIONAL {
    ?person rdfs:label ?name .
    FILTER (
      (?person = ?kevin && regex(str(?name), ""Kevin Russell"", ""i"")) ||
      (?person = ?matthias && regex(str(?name), ""Matthias Röhr"", ""i""))
    )
    
    OPTIONAL {
      ?person dbo:band ?band .
    }
  }
}
```",3,4,4,2,2,3,3,71,0,0,1,0,0.0,0
417,13,train,Give me the child of the father of Frederick IX of Denmark.,SELECT ?result WHERE { <http://dbpedia.org/resource/Frederick_IX_of_Denmark> <http://dbpedia.org/property/father> ?v1 . ?result <http://dbpedia.org/property/father> ?v1 . },"```sparql
SELECT ?child WHERE {
  # Step 1: Identify Frederick IX and his father
  ?frederickIX dbo:parent ?father .
  ?frederickIX rdfs:label ""Frederick IX of Denmark""@en .

  # Step 2: Find the children of Frederick IX's father
  ?father dbo:parent ?child .
}
```",2,2,3,2,1,3,3,71,0,4,2,0.0,0.0,0
645,27,train,"Give me the leader of the office, that is a government agency and an organisation, of the native of Restoration (Spain).",SELECT ?result WHERE { ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?v1 <http://dbpedia.org/property/office> ?v2 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/GovernmentAgency>. ?v2 <http://dbpedia.org/ontology/leader> ?result . ?v1 <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Restoration_(Spain)> . },"```sparql
SELECT ?leader WHERE {
  # Identify a notable person from the Spanish Restoration period
  ?person dbo:nationality dbr:Spain ;
          dbo:birthPlace ?place .
  
  # Find an office that is both a government agency and organization
  ?office dbo:type dbr:Government_agency ;
          dbo:type dbr:Organization ;
          dbo:leader ?leader .

  # Link the person to the office (e.g., as a leader or associated figure)
  OPTIONAL { 
    ?person dbo:positionHeld ?office .
  }

  # Filter for the Restoration period
  FILTER (?place = dbr:Spain && regex(str(?person), ""Antonio Maura"", ""i""))
}
```",3,5,4,3,1,3,3,71,0,0,15,0,0.0,0
47,9,train,Give me the office of Suvendu Adhikari and office of Bidesh Ranjan Bose.,SELECT ?result WHERE { <http://dbpedia.org/resource/Suvendu_Adhikari> <http://dbpedia.org/property/office> ?result . <http://dbpedia.org/resource/Bidesh_Ranjan_Bose> <http://dbpedia.org/property/office> ?result . },"```sparql
SELECT ?person ?name ?office WHERE {
  # Find Suvendu Adhikari's office
  OPTIONAL {
    ?suvendu dbo:name ""Suvendu Adhikari""@en .
    ?suvendu rdfs:label ?name .
    ?suvendu dbo:office ?office .
    BIND(?suvendu AS ?person)
  }
  
  # Find Bidesh Ranjan Bose's office
  OPTIONAL {
    ?bidesh dbo:name ""Bidesh Ranjan Bose""@en .
    ?bidesh rdfs:label ?name .
    ?bidesh dbo:office ?office .
    BIND(?bidesh AS ?person)
  }
}
```",2,2,3,1,2,3,3,71,0,0,1,0,0.0,0
200,4,train,Give me the reference to Angelcorpse and band member of Order from Chaos.,"SELECT ?result WHERE { ?result <http://xmlns.com/foaf/0.1/name> ""Angelcorpse""@en . ?result <http://dbpedia.org/ontology/associatedMusicalArtist> <http://dbpedia.org/resource/Order_from_Chaos> . }","```sparql
SELECT ?angelcorpse ?bandMember WHERE {
  # Find the DBpedia resource for Angelcorpse
  ?angelcorpse rdfs:label ""Angelcorpse""@en .
  
  # Find a band member who is part of both Angelcorpse and Order from Chaos
  ?member dbo:memberOfBand ?angelcorpse ;
          dbo:memberOfBand ?orderFromChaos .
  ?orderFromChaos rdfs:label ""Order from Chaos""@en .

  # Return the resource for Angelcorpse and the band member
}
```",2,2,3,1,2,2,2,9,0,0,1,0,0.0,0
443,1,train,Give me the birthplace of Ulf Lundell.,SELECT ?result WHERE { <http://dbpedia.org/resource/Ulf_Lundell> <http://dbpedia.org/ontology/birthPlace> ?result . },"```sparql
SELECT ?birthPlace WHERE {
  ?person rdfs:label ""Ulf Lundell""@en .
  ?person dbo:birthPlace ?birthPlace .
}
```",1,1,2,1,1,2,3,28,2,0,0,1.0,1.0,1.0
507,25,train,Give me the director of Entertaining Mr Sloane (film) and professional in the profession of Guy Ferland.,SELECT ?result WHERE { <http://dbpedia.org/resource/Guy_Ferland> <http://dbpedia.org/property/occupation> ?v1 . <http://dbpedia.org/resource/Entertaining_Mr_Sloane_(film)> <http://dbpedia.org/ontology/director> ?result . ?result <http://dbpedia.org/property/occupation> ?v1 . },"```sparql
# Query to find the director of ""Entertaining Mr Sloane"" (film)
SELECT ?director WHERE {
  ?film dbo:director ?director .
  ?film rdfs:label ""Entertaining Mr Sloane""@en .
  FILTER regex(str(?film), ""film"", ""i"")
}

UNION

# Query to find the profession of Guy Ferland
SELECT ?profession WHERE {
  ?person foaf:name ""Guy Ferland"" .
  ?person dbo:occupation ?profession .
}
```",3,3,4,2,2,3,3,71,0,0,1,0,0.0,0
326,8,train,"Give me the person decedent at the award, that is a country, of Adelbert Cronkhite.",SELECT ?result WHERE { ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. <http://dbpedia.org/resource/Adelbert_Cronkhite> <http://dbpedia.org/property/awards> ?v0 . ?result <http://dbpedia.org/ontology/deathPlace> ?v0 . },"```sparql
SELECT ?personDecedent WHERE {
  # Find Adelbert Cronkhite
  ?adelbert dbo:name ""Adelbert Cronkhite""@en .
  
  # Identify the award associated with Adelbert Cronkhite
  OPTIONAL { 
    ?adelbert dbo:award ?award .
  }
  
  # Determine the country of the award
  OPTIONAL {
    ?award dbo:country ?country .
  }

  # Find a person who was decedent at the time of the award
  OPTIONAL {
    ?personDecedent dbo:deceased ?deathDate .
    ?personDecedent dbo:award ?award .
    FILTER (?deathDate <= ?awardDate) # Assuming there's an award date property or similar logic to compare dates
  }
}
```",2,3,3,2,1,3,2,20,0,0,3795,0,0.0,0
216,32,train,"Give me the player in the coach, that is a soccer player and a sports manager and a soccer manager, of Bosnia and Herzegovina national under-18 football team and player in the coach of Croatia national under-21 football team.",SELECT ?result WHERE { ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerManager>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsManager>. <http://dbpedia.org/resource/Croatia_national_under-21_football_team> <http://dbpedia.org/ontology/coach> ?v1 . ?v1 <http://dbpedia.org/ontology/team> ?result . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerPlayer>. <http://dbpedia.org/resource/Bosnia_and_Herzegovina_national_under-18_football_team> <http://dbpedia.org/ontology/coach> ?v3 . ?v3 <http://dbpedia.org/ontology/team> ?result . },"```sparql
SELECT ?person WHERE {
  # Find person involved as a player or coach for Bosnia and Herzegovina national under-18 football team
  ?bosniaTeam dbo:coach ?person .
  ?bosniaTeam rdfs:label ""Bosnia and Herzegovina national under-18 football team""@en .

  # Ensure the person is also a soccer player, sports manager, and specifically a soccer manager
  ?person rdf:type dbp:SoccerPlayer ;
          rdf:type dbp:SportsManager ;
          rdf:type dbp:SoccerManager .

  # Find person involved as a player or coach for Croatia national under-21 football team
  ?croatiaTeam dbo:coach ?person .
  ?croatiaTeam rdfs:label ""Croatia national under-21 football team""@en .
}
```",4,7,5,2,2,3,3,71,0,0,3,0,0.0,0
124,19,train,"Give me the military force of Battle of Tamai and commander in the war, that is a societal event and a military conflict, of A Field Battery, Royal Australian Artillery.","SELECT ?result WHERE { ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v0 <http://dbpedia.org/ontology/commander> ?result . ?result <http://dbpedia.org/ontology/battle> <http://dbpedia.org/resource/Battle_of_Tamai> . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. <http://dbpedia.org/resource/A_Field_Battery,_Royal_Australian_Artillery> <http://dbpedia.org/ontology/battle> ?v0 . }","```sparql
SELECT ?militaryForce ?commander WHERE {
  # Identify Battle of Tamai within the context of the Crimean War
  ?battle dbo:partOf ?war .
  ?battle rdfs:label ""Battle of Tamai""@en .
  ?war rdfs:label ""Crimean War""@en .

  # Find military force involved in the Battle of Tamai
  ?battle dbo:militaryForce ?militaryForce .

  # Identify commander associated with the Battle of Tamai
  OPTIONAL {
    ?battle dbo:commander ?commander .
  }
}
```",3,5,4,2,2,3,3,71,0,0,1,0,0.0,0
606,9,train,"Give me the nickname of the figure known, that is a settlement, as Barb City.","SELECT ?result WHERE { ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. ?v0 <http://dbpedia.org/property/nickname> ?result . ?v0 <http://dbpedia.org/property/nickname> ""Barb City""@en . }","```sparql
SELECT ?officialName WHERE {
  ?entity rdfs:label ""Barb City""@en .
  OPTIONAL { ?entity foaf:name ?officialName . }
}
```",2,3,3,2,1,3,2,20,0,0,1,0,0.0,0
606,2,train,"Give me the figure known, that is a settlement, as Barb City.","SELECT ?result WHERE { ?result <http://dbpedia.org/property/nickname> ""Barb City""@en . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. }","```sparql
SELECT ?settlement WHERE {
  ?settlement rdfs:label ?label .
  FILTER (langMatches(lang(?label), ""en"") && regex(str(?label), ""^Barb City"", ""i""))
}
```",1,2,2,1,1,3,2,20,0,1,1,0.0,0.0,0
839,27,train,"Give me the band of the band, that is a musical artist, of the professional in Musician.","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/bandMember> ?v2 . ?v1 <http://dbpedia.org/property/occupation> ""Musician""@en . ?v1 <http://dbpedia.org/ontology/associatedMusicalArtist> ?v2 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. }","```sparql
SELECT ?bandOfBand WHERE {
  # Find a musician and their associated band
  ?musician dbo:occupation dbc:Musicians .
  ?musician dbo:member ?band .

  # Check if this band is part of another band
  OPTIONAL { 
    ?band dbo:bandMember ?bandOfBand .
  }
}
```",3,4,4,3,1,3,3,71,0,0,706,0,0.0,0
715,22,train,"Give me the leader of the office, that is a government agency and an organisation, of Carlos Franco Iribarnegaray and commander in Rif War.",SELECT ?result WHERE { <http://dbpedia.org/resource/Rif_War> <http://dbpedia.org/ontology/commander> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. <http://dbpedia.org/resource/Carlos_Franco_Iribarnegaray> <http://dbpedia.org/property/office> ?v1 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/GovernmentAgency>. ?v1 <http://dbpedia.org/ontology/leader> ?result . },"```sparql
SELECT ?leader WHERE {
  # Identify Carlos Franco Iribarnegaray's office that is both a government agency and an organization
  ?office dbo:leader ?person .
  ?person rdfs:label ""Carlos Franco Iribarnegaray""@en .
  
  # Ensure the office is classified as a government agency and an organization
  ?office rdf:type dbo:GovernmentAgency ;
          rdf:type dbo:Organization .

  # Verify his role in the Rif War
  OPTIONAL {
    ?person dbo:occupation ?occupation .
    FILTER regex(?occupation, ""Commander"", ""i"")
    ?rifWar dbo:commander ?person .
    ?rifWar rdfs:label ""Rif War""@en .
  }

  # Retrieve the leader of this office
  ?office dbo:leader ?leader .
}
```",3,5,4,2,2,3,3,71,0,0,1,0,0.0,0
865,0,train,Give me the native of British Raj.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/British_Raj> . },"```sparql
SELECT ?person ?nativePlace WHERE {
  ?raj dbo:wikiPageRedirects db:Q123456 . # Assuming Q123456 is the DBpedia ID for British Raj
  ?raj dbo:nativeOf ?person .
  OPTIONAL { ?person dbo:nativePlace ?nativePlace }
}
```",1,1,2,1,1,3,3,71,0,0,1898,0,0.0,0
382,1,train,Give me the landmark at elevation of 100.,"SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/elevation> ""100""^^<http://www.w3.org/2001/XMLSchema#integer> . }","```sparql
SELECT ?landmark WHERE {
  ?landmark dbo:elevation ?elevation .
  FILTER (?elevation = 100)
}
```",1,1,2,1,1,3,2,20,727,0,0,1.0,1.0,1.0
573,31,train,"Give me the person decedent at the administration, that is a region, of the real name of Charlie Baker (Australian footballer) and person decedent at Quincy, Massachusetts.","SELECT ?result WHERE { ?v0 <http://dbpedia.org/property/governor> ?v1 . ?result <http://dbpedia.org/ontology/deathPlace> <http://dbpedia.org/resource/Quincy,_Massachusetts> . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Region>. <http://dbpedia.org/resource/Charlie_Baker_(Australian_footballer)> <http://xmlns.com/foaf/0.1/name> ?v1 . ?result <http://dbpedia.org/ontology/deathPlace> ?v0 . }","```sparql
SELECT ?person WHERE {
  # Find the real name of Charlie Baker (Australian footballer)
  ?charlieBaker dbo:birthName ?realName .
  ?charlieBaker rdfs:label ""Charlie Baker (Australian footballer)""@en .

  # Identify the administration region associated with his real name
  ?realName dbo:administrativeRegion ?adminRegion .

  # Find individuals who are decedents at Quincy, Massachusetts
  ?quincyPerson dbo:deathPlace ?quincyLocation .
  ?quincyLocation rdfs:label ""Quincy, Massachusetts""@en .

  # Check if the same person is a decedent in both regions
  ?adminRegionDecedent dbo:deathPlace ?adminRegion .
  FILTER (?person = ?quincyPerson && ?person = ?adminRegionDecedent)
}
```",4,5,5,3,2,3,3,71,0,0,4,0,0.0,0
715,16,train,"Give me the force of the mayor, that is an office holder and a politician and a president, of 1933 Spanish general election.",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/commander> ?v1 . <http://dbpedia.org/resource/1933_Spanish_general_election> <http://dbpedia.org/property/leader> ?v1 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/President>. },"```sparql
SELECT ?mayor ?force WHERE {
  # Find the mayor in 1933 Spanish general election context
  ?mayor dbo:officeHolder ""Mayor""@en .
  ?mayor dbo:dateOfBirth ?dob .
  FILTER (YEAR(?dob) < 1933 && YEAR(?dob) > 1900) # Assuming they were adults during this time

  # Ensure the person is a politician and president
  ?mayor dbo:occupation ""Politician""@en .
  ?mayor dbo:officeHolder ""President""@en .

  # Retrieve information about their influence or force
  OPTIONAL {
    ?mayor dbo:politicalInfluence ?force .
  }
}
```",2,5,3,2,1,3,3,71,0,0,1,0,0.0,0
645,36,train,"Give me the commander in Battle of Jarama and leader of the office, that is a government agency and an organisation, of the native of Restoration (Spain).",SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/GovernmentAgency>. ?v0 <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Restoration_(Spain)> . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?v1 <http://dbpedia.org/ontology/leader> ?result . <http://dbpedia.org/resource/Battle_of_Jarama> <http://dbpedia.org/ontology/commander> ?result . ?v0 <http://dbpedia.org/property/office> ?v1 . },"```sparql
SELECT ?commander WHERE {
  # Identify the commander in the Battle of Jarama
  ?battle dbo:commander ?commander .
  ?battle rdfs:label ""Battle of Jarama""@en .

  # Find a notable figure from the Restoration period in Spain
  ?restorationPerson dbo:nativePlace ?nativePlace .
  ?restorationPerson dbo:birthPlace ?birthPlace .
  ?restorationPerson dbo:occupation ?occupation .
  FILTER (regex(str(?restorationPerson), ""Spanish Restoration"", ""i""))

  # Identify an office that is both a government agency and an organization
  ?office rdf:type dbo:GovernmentAgency ;
          rdf:type dbo:Organization .

  # Find the leader of this office who is also the commander from the Battle of Jarama
  ?office dbo:leader ?commander .
}
```",4,6,5,3,2,3,3,71,0,0,2,0,0.0,0
935,11,train,Give me the headquarter of Provincial Assembly of Balochistan and death place of the awardee of Sitara-i-Imtiaz.,SELECT ?result WHERE { <http://dbpedia.org/resource/Provincial_Assembly_of_Balochistan> <http://dbpedia.org/ontology/location> ?result . ?v2 <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/Sitara-i-Imtiaz> . ?v2 <http://dbpedia.org/ontology/deathPlace> ?result . },"```sparql
# Query to find the headquarter of Provincial Assembly of Balochistan
SELECT ?headquarter WHERE {
  ?assembly rdfs:label ""Provincial Assembly of Balochistan""@en .
  ?assembly dbo:headquarters ?headquarter .
}

UNION

# Query to find the death place of an awardee of Sitara-i-Imtiaz
SELECT DISTINCT ?deathPlace WHERE {
  ?person dbo:award ?sitaraAward .
  ?sitaraAward rdfs:label ""Sitara-i-Imtiaz""@en .
  OPTIONAL { ?person dbo:deathPlace ?deathPlace . }
}
```",3,3,4,2,2,3,2,20,0,0,1,0,0.0,0
433,21,train,"Give me the professional in Musician and associated musical artist of the person born, that is a musical artist and an artist, as Paul Laurence Dunbar Chambers Jr..","SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?v1 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?result <http://dbpedia.org/property/occupation> ""Musician""@en . ?v1 <http://dbpedia.org/property/birthName> ""Paul Laurence Dunbar Chambers Jr.""@en . }","```sparql
SELECT ?associatedArtist WHERE {
  # Find Paul Laurence Dunbar Chambers Jr.
  ?chambers dbo:birthName ""Paul Laurence Dunbar Chambers Jr."" .
  ?chambers dbo:profession dbc:Musicians_from_New_York_City .

  # Find associated musical artists who are also recognized as artists
  ?chambers dbo:associatedBandOrArtist ?associatedArtist .
  ?associatedArtist a dbo:MusicalArtist ;
                   dbo:birthDate ?birthDate ;
                   dbo:occupation ?occupation .

  FILTER EXISTS { 
    ?associatedArtist dbo:occupation dbc:Artists .
  }
}
```",3,5,4,2,2,3,3,71,0,0,15,0,0.0,0
508,12,train,"Give me the birthplace of the commander, that is Saudi, in Central Plains War and birthplace of Ma Hongkui.",SELECT ?result WHERE { <http://dbpedia.org/resource/Ma_Hongkui> <http://dbpedia.org/ontology/birthPlace> ?result . ?v0 <http://dbpedia.org/ontology/birthPlace> ?result . ?v0 <http://dbpedia.org/ontology/nationality> <http://dbpedia.org/resource/Saudi_Arabia>. <http://dbpedia.org/resource/Central_Plains_War> <http://dbpedia.org/ontology/commander> ?v0 . },"```sparql
# Query for the commander in Central Plains War with a Saudi connection
SELECT ?commander ?birthPlaceCommander WHERE {
  ?commander dbo:occupation ""Military personnel""@en .
  ?commander dbo:nationality dbc:Saudi_Arabian_people .
  ?commander dbo:wikiPageDisambiguates ?centralPlainsWar .
  ?centralPlainsWar rdfs:label ""Central Plains War""@en .
  ?commander dbp:birthPlace ?birthPlaceCommander .
}

# Query for Ma Hongkui's birthplace
SELECT ?maHongkui ?birthPlaceMa WHERE {
  ?maHongkui rdfs:label ""Ma Hongkui""@en .
  ?maHongkui dbp:birthPlace ?birthPlaceMa .
}
```",3,4,4,2,2,3,2,20,0,0,3,0,0.0,0
917,20,train,Give me the parent of Albert Kamehameha and child of the father of Keʻelikōlani.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Albert_Kamehameha> . ?result <http://dbpedia.org/ontology/parent> ?v1 . <http://dbpedia.org/resource/Keʻelikōlani> <http://dbpedia.org/property/father> ?v1 . },"```sparql
SELECT ?commonEntity WHERE {
  # Find the parent of Albert Kamehameha
  ?albert dbo:parent ?commonEntity .
  ?albert rdfs:label ""Albert Kamehameha""@en .

  # Find the father of Keʻelikōlani and his child
  ?keelikoLani dbo:parent ?fatherOfKeelikoLani .
  ?keelikoLani rdfs:label ""Keʻelikōlani""@en .
  
  ?fatherOfKeelikoLani dbo:child ?commonEntity .
}
```",3,3,4,2,2,3,3,71,1,0,0,1.0,1.0,1.0
554,7,train,Give me the leader of the administration of Francisco da Costa Gomes.,SELECT ?result WHERE { ?v1 <http://dbpedia.org/property/leader> ?result . ?v1 <http://dbpedia.org/property/leader> <http://dbpedia.org/resource/Francisco_da_Costa_Gomes> . },"```sparql
SELECT ?primeMinister WHERE {
  # Find Francisco da Costa Gomes
  ?costaGomes dbo:presidentOf ?country .
  ?costaGomes rdfs:label ""Francisco da Costa Gomes""@en .

  # Find the prime minister during his presidency (1974-1976)
  OPTIONAL {
    ?primeMinister dbo:headOfGovernment ?country .
    ?termStart dbo:startDate ?start .
    ?termEnd dbo:endDate ?end .
    FILTER (?start <= ""1976-07-30""^^xsd:date && ?end >= ""1974-09-28""^^xsd:date)
  }
}
```",2,2,3,2,1,3,2,20,0,0,4,0,0.0,0
715,5,train,"Who is the mayor, that is an office holder and a politician and a president, of 1933 Spanish general election?",SELECT ?result WHERE { ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/President>. ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. <http://dbpedia.org/resource/1933_Spanish_general_election> <http://dbpedia.org/property/leader> ?result . },"```sparql
SELECT ?person WHERE {
  # Find individuals associated with the 1933 Spanish general election
  ?election dbo:relatedEvent ?event .
  ?event rdfs:label ""Spanish general election, 1933""@en .

  # Ensure the person was a mayor
  ?person dbo:officeHolder ?mayorship .
  ?mayorship dbo:position ""Mayor""@en .

  # Ensure the person is recognized as an office holder and politician
  ?person dbo:occupation ?occupation .
  FILTER (CONTAINS(LCASE(str(?occupation)), ""office holder"") && CONTAINS(LCASE(str(?occupation)), ""politician""))

  # Ensure the person served as president
  ?person dbo:position ?presidency .
  ?presidency rdfs:label ""President""@en .

  # Link the person to the election event
  ?election dbo:participant ?person .
}
```",1,4,2,1,1,3,3,71,0,0,1,0,0.0,0
978,1,train,Give me the band member of Chicane (musician).,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/associatedMusicalArtist> <http://dbpedia.org/resource/Chicane_(musician)> . },"```sparql
SELECT ?bandMember WHERE {
  ?chicane dbo:musicalArtist ?bandMember .
  ?chicane rdfs:label ""Chicane (musician)""@en .
}
```",1,1,2,1,1,3,2,20,0,0,2,0,0.0,0
124,28,train,"Give me the military force of Battle of Tamai and military force of Battle of Atbara and commander in the war, that is a societal event and a military conflict, of A Field Battery, Royal Australian Artillery.","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/battle> <http://dbpedia.org/resource/Battle_of_Atbara> . ?result <http://dbpedia.org/ontology/battle> <http://dbpedia.org/resource/Battle_of_Tamai> . <http://dbpedia.org/resource/A_Field_Battery,_Royal_Australian_Artillery> <http://dbpedia.org/ontology/battle> ?v1 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?v1 <http://dbpedia.org/ontology/commander> ?result . }","```sparql
SELECT ?battle1MilitaryForce ?battle2MilitaryForce ?commander WHERE {
  # Battle of Tamai
  ?tamai dbo:participatingMilitaryUnit ?battle1MilitaryForce .
  ?tamai rdfs:label ""Battle of Tamai""@en .

  # Battle of Atbara
  ?atbara dbo:participatingMilitaryUnit ?battle2MilitaryForce .
  ?atbara rdfs:label ""Battle of Atbara""@en .

  # World War I as a societal event and military conflict involving A Field Battery, Royal Australian Artillery
  ?worldWarI dbo:participant ?artillery .
  ?artillery rdfs:label ""A Field Battery, Royal Australian Artillery""@en .
  ?worldWarI rdfs:label ""World War I""@en .

  # Commanders of World War I
  OPTIONAL {
    ?worldWarI dbo:commander ?commander .
  }
}
```",4,6,5,2,3,3,3,71,0,0,1,0,0.0,0
573,36,train,"Give me the parent of the author, that is a politician and an office holder, of the work of John Quincy Adams and person decedent at Massachusetts.",SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v0 <http://dbpedia.org/property/author> ?v1 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v1 <http://dbpedia.org/ontology/parent> ?result . ?result <http://dbpedia.org/ontology/deathPlace> <http://dbpedia.org/resource/Massachusetts> . ?v0 <http://dbpedia.org/property/author> <http://dbpedia.org/resource/John_Quincy_Adams> . },"```sparql
SELECT ?parent WHERE {
  # Find John Quincy Adams
  ?johnQuincyAdams dbo:birthName ""John Quincy Adams""@en .
  
  # Identify his notable work
  ?work dbo:author ?johnQuincyAdams .

  # Find the parent who is a politician and an office holder
  ?parent dbo:child ?johnQuincyAdams ;
          rdf:type dbo:Politician ;
          dbo:officeHolder true .

  # Ensure the decedent location is Massachusetts
  ?parent dbo:deathPlace ?massachusetts .
  FILTER (str(?massachusetts) = ""Massachusetts""@en)
}
```",4,6,5,3,2,3,3,71,0,0,2,0,0.0,0
715,33,train,"Give me the commander in Rif War and commander in the force of the mayor, that is an office holder and a politician and a president, of 1933 Spanish general election.",SELECT ?result WHERE { ?v3 <http://dbpedia.org/ontology/commander> ?v0 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/President>. <http://dbpedia.org/resource/1933_Spanish_general_election> <http://dbpedia.org/property/leader> ?v0 . ?v3 <http://dbpedia.org/ontology/commander> ?result . <http://dbpedia.org/resource/Rif_War> <http://dbpedia.org/ontology/commander> ?result . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. },"```sparql
SELECT ?rifCommander ?mayorForceCommander ?president WHERE {
  # Find the commander in the Rif War
  ?rifCommander dbo:occupation ""Military Commander""@en .
  ?rifCommander dbo:wikiPageWikiLink ?rifWar .

  # Find the mayor whose force had this commander
  ?mayor dbo:officeHolder ?force .
  ?force dbo:commander ?rifCommander .

  # Identify the office holder, politician, and president from the 1933 Spanish general election
  ?president dbo:occupation ""Politician""@en ;
             dbo:officeHolder ?office ;
             dbo:electionDate ?electionDate .
  FILTER (YEAR(?electionDate) = 1933)
  ?president dbo:wikiPageWikiLink dbr:Spanish_general_election,_1933 .

  # Ensure the president is also a mayor
  ?mayor rdfs:label ?presidentLabel .
}
```",4,7,5,3,2,3,3,71,0,0,4,0,0.0,0
212,3,train,Give me the professional in .,"SELECT ?result WHERE { ?result <http://dbpedia.org/property/occupation> """"@en . }","```sparql
# This is a placeholder query as the question lacks specificity.
SELECT ?profession WHERE {
  # Replace ""Emperor Go-Toba"" with the specific individual's name when known.
  ?individual rdfs:label ""Emperor Go-Toba""@en .
  ?individual dbo:occupation ?profession .
}
```",1,1,2,1,1,2,2,9,0,0,39640,0,0.0,0
715,15,train,"Give me the force, that is a military conflict, of the native of Morocco.",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/commander> ?v1 . ?v1 <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Morocco> . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. },"```sparql
SELECT ?force WHERE {
  ?force dbo:location ?location .
  ?location rdfs:label ""Morocco""@en .
  
  ?force rdf:type dbo:MilitaryConflict .
}
```",2,3,3,2,1,3,3,71,0,0,15,0,0.0,0
129,15,train,Give me the associated musical artist of Saba (rapper) and professional in the mayor of 1999 West Dunbartonshire Council election.,SELECT ?result WHERE { <http://dbpedia.org/resource/Saba_(rapper)> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . <http://dbpedia.org/resource/1999_West_Dunbartonshire_Council_election> <http://dbpedia.org/property/leader> ?v1 . ?result <http://dbpedia.org/property/occupation> ?v1 . },"```sparql
# Find associated musical artist of Saba (rapper)
SELECT ?associatedArtist WHERE {
  ?saba dbo:associatedMusicalArtist ?associatedArtist .
  ?saba rdfs:label ""Saba (rapper)""@en .
}

# Find professionals in the 1999 West Dunbartonshire Council election
SELECT ?professional WHERE {
  ?election dbo:candidate ?professional .
  ?election rdfs:label ""West Dunbartonshire Council election, 1999""@en .
}

# Check for any connection between the associated artist and the professional
SELECT DISTINCT ?associatedArtist ?professional WHERE {
  # Associated musical artist of Saba
  ?saba dbo:associatedMusicalArtist ?associatedArtist .
  ?saba rdfs:label ""Saba (rapper)""@en .

  # Professional in the 1999 West Dunbartonshire Council election
  ?election dbo:candidate ?professional .
  ?election rdfs:label ""West Dunbartonshire Council election, 1999""@en .

  # Check for any connection between them
  OPTIONAL {
    ?associatedArtist dbo:collaborator ?professional .
  }
}
```",3,3,4,2,2,2,3,28,0,0,7,0,0.0,0
606,12,train,Give me the birthplace of the alumnus of University of Pennsylvania and figure known as Barb City.,"SELECT ?result WHERE { ?result <http://dbpedia.org/property/nickname> ""Barb City""@en . ?v0 <http://dbpedia.org/ontology/almaMater> <http://dbpedia.org/resource/University_of_Pennsylvania> . ?v0 <http://dbpedia.org/ontology/birthPlace> ?result . }","```sparql
SELECT ?birthPlace WHERE {
  # Identify the figure known as Barb City who is an alumnus of University of Pennsylvania
  ?person rdfs:label ""Barb City""@en .
  ?person dbo:almaMater dbr:University_of_Pennsylvania .

  # Retrieve the birthplace of this person
  ?person dbo:birthPlace ?birthPlace .
}
```",3,3,4,2,2,3,2,20,0,0,1,0,0.0,0
267,2,train,Who is the manager of 2020–21 Tractor S.C. season?,SELECT ?result WHERE { <http://dbpedia.org/resource/2020–21_Tractor_S.C._season> <http://dbpedia.org/ontology/manager> ?result . },"```sparql
SELECT ?manager WHERE {
  ?team rdfs:label ""Tractor S.C.""@en .
  ?team dbo:manager ?manager .
  OPTIONAL { 
    ?team dbp:season ""2020–21""@en .
  }
}
```",1,1,2,1,1,3,2,20,0,1,4,0.0,0.0,0
933,23,train,"Give me the band of the band of the band, that is an artist and a musical artist, of The Ramong Sound.",SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. ?v1 <http://dbpedia.org/ontology/associatedMusicalArtist> ?v2 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?v2 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . <http://dbpedia.org/resource/The_Ramong_Sound> <http://dbpedia.org/ontology/associatedMusicalArtist> ?v1 . },"```sparql
SELECT ?thirdBand WHERE {
  # Level 1: Find the band associated with The Ramones
  OPTIONAL {
    ?ramones dbo:associatedBand ?firstBand .
    ?ramones rdfs:label ""The Ramones""@en .
    FILTER (isMusicalArtist(?firstBand))
  }

  # Level 2: Find the band associated with the first band
  OPTIONAL {
    ?firstBand dbo:associatedBand ?secondBand .
    FILTER (isMusicalArtist(?secondBand))
  }

  # Level 3: Find the band associated with the second band
  OPTIONAL {
    ?secondBand dbo:associatedBand ?thirdBand .
    FILTER (isMusicalArtist(?thirdBand))
  }
}

# Helper function to check if an entity is a musical artist
FILTER(isMusicalArtist(?entity)) {
  ?entity rdf:type dbo:MusicalArtist .
}
```",3,5,4,3,1,3,3,71,0,0,30,0,0.0,0
507,3,train,Give me the birth name of Anne V. Coates.,SELECT ?result WHERE { <http://dbpedia.org/resource/Anne_V._Coates> <http://dbpedia.org/property/birthName> ?result . },"```sparql
SELECT ?birthName WHERE {
  ?anneVCoates rdfs:label ""Anne V. Coates""@en .
  ?anneVCoates dbo:birthName ?birthName .
}
```",1,1,2,1,1,3,3,71,1,0,0,1.0,1.0,1.0
976,25,train,Give me the office of Meral Akşener and office of the person born as Mehmet Naci Bostancı.,"SELECT ?result WHERE { ?v0 <http://dbpedia.org/property/office> ?result . <http://dbpedia.org/resource/Meral_Akşener> <http://dbpedia.org/property/office> ?result . ?v0 <http://dbpedia.org/property/birthName> ""Mehmet Naci Bostancı""@en . }","```sparql
SELECT ?meralOffice ?naciBostanciOffice WHERE {
  # Find the office of Meral Akşener
  OPTIONAL {
    ?meral dbo:office ?meralOffice .
    ?meral rdfs:label ""Meral Akşener""@en .
  }

  # Find the office or notable role of Mehmet Naci Bostancı
  OPTIONAL {
    ?naciBostanci dbo:formerName ""Mehmet Naci Bostancı"" .
    ?naciBostanci dbo:office ?naciBostanciOffice .
    ?naciBostanci rdfs:label ""Meral Akşener""@en .
  }
}
```",3,3,4,2,2,3,3,71,0,0,1,0,0.0,0
791,3,train,Give me the reference to Emperor Takakura.,"SELECT ?result WHERE { ?result <http://xmlns.com/foaf/0.1/name> ""Emperor Takakura""@en . }","```sparql
SELECT ?property ?value WHERE {
  ?emperor rdfs:label ""Emperor Takakura""@en .
  ?emperor ?property ?value .
}
```",1,1,2,1,1,3,3,71,0,172,1,0.0,0.0,0
579,11,train,"Give me the native of the residence, that is English and a settlement, of Alan Clyne and person born as Isobel Jane Miller Richard.","SELECT ?result WHERE { ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. ?result <http://dbpedia.org/ontology/birthPlace> ?v2 . ?v2 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/United_Kingdom>. ?result <http://dbpedia.org/property/birthName> ""Isobel Jane Miller Richard""@en . <http://dbpedia.org/resource/Alan_Clyne> <http://dbpedia.org/property/residence> ?v2 . }","```sparql
SELECT DISTINCT ?nativeAlanClyne ?nativeIsobelJane WHERE {
  # Find Alan Clyne's residence that is an English settlement
  ?alanClyne dbo:nationality dbr:United_Kingdom .
  ?alanClyne dbo:residence ?residenceAlan .
  ?residenceAlan rdf:type dbo:Settlement .
  ?residenceAlan dbo:country dbr:England .
  
  # Find a notable native of Alan Clyne's residence
  ?nativeAlanClyne dbo:nativePlace ?residenceAlan .
  ?nativeAlanClyne dbo:occupation ?occupation .
  FILTER (regex(str(?occupation), ""Notable"", ""i""))

  # Find Isobel Jane Miller Richard's residence that is an English settlement
  ?isobelJane dbo:nationality dbr:United_Kingdom .
  ?isobelJane dbo:birthPlace ?residenceIsobel .
  ?residenceIsobel rdf:type dbo:Settlement .
  ?residenceIsobel dbo:country dbr:England .

  # Find a notable native of Isobel Jane's residence
  ?nativeIsobelJane dbo:nativePlace ?residenceIsobel .
  ?nativeIsobelJane dbo:occupation ?occupation2 .
  FILTER (regex(str(?occupation2), ""Notable"", ""i""))
}
```",3,5,4,2,2,3,2,20,0,0,1,0,0.0,0
373,1,train,"Give me the professional in Singer, songwriter.","SELECT ?result WHERE { ?result <http://dbpedia.org/property/occupation> ""Singer, songwriter""@en . }","```sparql
SELECT ?person WHERE {
  ?person dbo:occupation dbc:Singers .
  ?person dbo:occupation dbc:Songwriters .
}
```",1,1,2,1,1,2,2,9,0,0,1543,0,0.0,0
865,3,train,Who is the person decedent at Patna?,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/deathPlace> <http://dbpedia.org/resource/Patna> . },"```sparql
SELECT ?person WHERE {
  ?person rdfs:label ""Buddha""@en .
  OPTIONAL { 
    ?person dbo:placeOfBirth ?birthPlace .
    FILTER (regex(str(?birthPlace), ""Lumbini"", ""i""))
  }
  OPTIONAL {
    ?event dbo:location ?location .
    ?event dbo:agent ?person .
    ?location rdfs:label ""Rajgir""@en .
    FILTER (regex(str(?person), ""Buddha"", ""i""))
  }
}
```",1,1,2,1,1,3,3,71,0,2,66,0.0,0.0,0
273,10,train,Give me the alumnus of the reference to Università degli Studi di Torino.,"SELECT ?result WHERE { ?v0 <http://xmlns.com/foaf/0.1/name> ""Università degli Studi di Torino""@en . ?result <http://dbpedia.org/ontology/almaMater> ?v0 . }","```sparql
SELECT ?person WHERE {
  ?person dbo:almaMater dbr:Universit%C3%A0_degli_Studi_di_Torino .
}
```",2,2,3,2,1,3,2,20,0,0,141,0,0.0,0
326,14,train,"Give me the person decedent at the award, that is a country, of the awardee of French Legion of Honor.","SELECT ?result WHERE { ?v2 <http://dbpedia.org/property/awards> ?v0 . ?result <http://dbpedia.org/ontology/deathPlace> ?v0 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. ?v2 <http://dbpedia.org/property/awards> ""French Legion of Honor""@en . }","```sparql
SELECT ?decedent WHERE {
  # Find awardees of the French Legion of Honor
  ?awardee dbo:awardReceived dbr:French_Legion_of_Honor .
  
  # Ensure the awardee is associated with a country
  ?awardee dbo:nationality ?country .
  FILTER (isLiteral(?country))
  
  # Find decedents related to the award context
  OPTIONAL {
    ?decedent dbo:deathPlace ?place .
    ?decedent dbo:dateOfDeath ?date .
    ?decedent dbo:awardReceived dbr:French_Legion_of_Honor .
    
    FILTER (!bound(?date) || year(?date) < 2023)
  }
}
```",3,4,4,3,1,3,2,20,0,0,4699,0,0.0,0
892,1,train,Give me the landmark at elevation of 58.,"SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/elevation> ""58""^^<http://www.w3.org/2001/XMLSchema#integer> . }","```sparql
SELECT ?landmark WHERE {
  ?landmark dbo:elevation ""58""^^xsd:decimal .
  ?landmark rdf:type dbo:Landmark .
}
```",1,1,2,1,1,3,3,71,0,0,258,0,0.0,0
36,4,train,Give me the birth year of Deanne Bray.,SELECT ?result WHERE { <http://dbpedia.org/resource/Deanne_Bray> <http://dbpedia.org/ontology/birthYear> ?result . },"```sparql
SELECT ?birthYear WHERE {
  ?person rdfs:label ""Deanne Bray""@en .
  ?person dbo:birthYear ?birthYear .
}
```",1,1,2,1,1,2,3,28,1,0,0,1.0,1.0,1.0
888,6,train,Give me the commander in Southern Ukraine campaign and awardee of Hero of Ukraine.,"SELECT ?result WHERE { ?result <http://dbpedia.org/property/awards> ""Hero of Ukraine""@en . <http://dbpedia.org/resource/Southern_Ukraine_campaign> <http://dbpedia.org/ontology/commander> ?result . }","```sparql
SELECT ?commander WHERE {
  # Find commanders involved in campaigns in Southern Ukraine
  ?campaign dbo:location ?location .
  ?campaign dbo:commander ?commander .
  FILTER (regex(str(?location), ""Southern Ukraine"", ""i""))

  # Check if the commander is an awardee of Hero of Ukraine
  ?commander dbo:award ?heroAward .
  ?heroAward rdfs:label ""Hero of Ukraine""@en .

  # Return the commander's name
  ?commander rdfs:label ?name .
}
```",2,2,3,1,2,3,2,20,0,0,1,0,0.0,0
170,13,train,Give me the entity in the work of International Energy Agency and birth place of Era Ziganshina.,SELECT ?result WHERE { <http://dbpedia.org/resource/Era_Ziganshina> <http://dbpedia.org/ontology/birthPlace> ?result . ?result <http://dbpedia.org/ontology/country> ?v1 . ?v1 <http://dbpedia.org/property/author> <http://dbpedia.org/resource/International_Energy_Agency> . },"```sparql
SELECT ?ieaEntity ?birthPlace WHERE {
  # Find an entity related to the work of International Energy Agency
  ?ieaEntity dbo:wikiPageWikiLink <http://dbpedia.org/resource/International_Energy_Agency> .
  
  # Find Era Ziganshina and her birthplace
  ?ziganshina rdfs:label ""Era Ziganshina""@en ;
              dbo:birthPlace ?birthPlace .
}
```",3,3,4,2,2,2,3,28,1,587,0,0.0017006802721088435,1.0,0.0033955857385398977
5,5,train,Give me the award of Coro de la Pontificia Universidad Católica de Puerto Rico.,SELECT ?result WHERE { <http://dbpedia.org/resource/Coro_de_la_Pontificia_Universidad_Católica_de_Puerto_Rico> <http://dbpedia.org/property/awards> ?result . },"```sparql
SELECT ?award WHERE {
  ?choir rdfs:label ""Coro de la Pontificia Universidad Católica de Puerto Rico""@en .
  OPTIONAL { 
    ?choir dbo:award ?award .
  }
}
```",1,1,2,1,1,3,2,20,0,0,7,0,0.0,0
200,5,train,Give me the reference to the name of Angelcorpse.,SELECT ?result WHERE { ?result <http://xmlns.com/foaf/0.1/name> ?v0 . <http://dbpedia.org/resource/Angelcorpse> <http://xmlns.com/foaf/0.1/name> ?v0 . },"```sparql
SELECT ?entity WHERE {
  ?entity rdfs:label ""Angelcorpse""@en .
}
```",2,2,3,2,1,2,2,9,1,0,0,1.0,1.0,1.0
507,13,train,"Give me the director of the movie, that is a movie and a work, with Beryl Reid.",SELECT ?result WHERE { ?v1 <http://dbpedia.org/property/starring> <http://dbpedia.org/resource/Beryl_Reid> . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Film>. ?v1 <http://dbpedia.org/ontology/director> ?result . },"```sparql
SELECT DISTINCT ?director WHERE {
  # Find movies featuring Beryl Reid
  ?movie dbo:starring _:b1 .
  _:b1 dbo:actor ?berylReid .
  ?berylReid rdfs:label ""Beryl Reid""@en .

  # Ensure the movie is categorized as both a film and a work
  ?movie rdf:type dbo:Film ;
         rdf:type dbo:Work .

  # Retrieve the director of these movies
  ?movie dbo:director ?director .
}
```",2,4,3,2,1,3,3,71,0,0,9,0,0.0,0
955,11,train,Give me the band of the writer of Don't Forget Your Roots (album) and band of Johnny Rioux.,SELECT ?result WHERE { <http://dbpedia.org/resource/Don't_Forget_Your_Roots_(album)> <http://dbpedia.org/property/writer> ?v2 . ?result <http://dbpedia.org/ontology/bandMember> <http://dbpedia.org/resource/Johnny_Rioux> . ?result <http://dbpedia.org/ontology/bandMember> ?v2 . },"```sparql
# Query for the band of the writer of ""Don't Forget Your Roots""
SELECT ?band WHERE {
  ?album dbo:artist ?writer .
  ?album rdfs:label ""Don't Forget Your Roots""@en .
  ?writer dbo:member ?band .
}

UNION

# Query for the band associated with Johnny Rioux
SELECT ?band WHERE {
  ?person foaf:name ""Johnny Rioux"" .
  ?person dbo:member ?band .
}
```",3,3,4,2,2,3,2,20,0,0,1,0,0.0,0
465,27,train,"Give me the successor of the child, that is a royalty, of the parent of Charles Orlando, Dauphin of France.","SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/child> ?v2 . ?v2 <http://dbpedia.org/ontology/successor> ?result . <http://dbpedia.org/resource/Charles_Orlando,_Dauphin_of_France> <http://dbpedia.org/ontology/parent> ?v1 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. }","```sparql
SELECT ?successor WHERE {
  # Identify Charles Orlando, Dauphin of France
  ?charlesOrlando rdfs:label ""Charles Orlando, Dauphin of France""@en .
  
  # Find his parent
  ?parent dbo:child ?charlesOrlando .

  # Find a child of this parent who is royalty
  ?royalChild dbo:parent ?parent .
  FILTER EXISTS { 
    ?royalChild rdf:type dbo:Monarch .
  }

  # Identify the successor of this royal child
  ?royalChild dbo:successor ?successor .
}
```",3,4,4,3,1,3,3,71,0,0,2,0,0.0,0
507,9,train,Give me the spouse of Anne V. Coates and director of Entertaining Mr Sloane (film).,SELECT ?result WHERE { <http://dbpedia.org/resource/Entertaining_Mr_Sloane_(film)> <http://dbpedia.org/ontology/director> ?result . ?result <http://dbpedia.org/ontology/spouse> <http://dbpedia.org/resource/Anne_V._Coates> . },"```sparql
SELECT ?spouse ?director WHERE {
  # Find spouse of Anne V. Coates
  ?anneVCoates dbo:spouse ?spouse .
  ?anneVCoates rdfs:label ""Anne V. Coates""@en .

  # Find director of the film Entertaining Mr Sloane
  ?film dbo:director ?director .
  ?film rdfs:label ""Entertaining Mr Sloane""@en .

  # Check if spouse and director are the same person
  FILTER (?spouse = ?director)
}
```",2,2,3,1,2,3,3,71,0,0,1,0,0.0,0
826,22,train,Give me the predecessor of the parent of Prince Friedrich of Hesse and by Rhine and spouse of Anna Magdalena Appel.,SELECT ?result WHERE { <http://dbpedia.org/resource/Prince_Friedrich_of_Hesse_and_by_Rhine> <http://dbpedia.org/ontology/parent> ?v1 . <http://dbpedia.org/resource/Anna_Magdalena_Appel> <http://dbpedia.org/ontology/spouse> ?result . ?result <http://dbpedia.org/ontology/successor> ?v1 . },"```sparql
SELECT ?predecessor WHERE {
  # Find Prince Friedrich of Hesse and by Rhine
  ?friedrich dbo:parent ?parent .
  ?friedrich rdfs:label ""Prince Friedrich of Hesse and by Rhine""@en .

  # Find Anna Magdalena Appel's spouse, Johann Sebastian Bach
  OPTIONAL { 
    ?annaMagdalena dbo:spouse ?bach .
    ?annaMagdalena rdfs:label ""Anna Magdalena Appel""@en .
    FILTER (regex(str(?bach), ""Johann Sebastian Bach"", ""i""))
  }

  # Find the predecessor of Prince Friedrich's parent
  OPTIONAL {
    ?parent dbo:parent ?predecessor .
  }
}
```",3,3,4,2,2,3,3,71,0,4,1,0.0,0.0,0
926,38,train,"Give me the child of the father, that is a royalty, of Mustafa III and successor of the child of Ahmed III.",SELECT ?result WHERE { ?v3 <http://dbpedia.org/ontology/successor> ?result . <http://dbpedia.org/resource/Mustafa_III> <http://dbpedia.org/property/father> ?v0 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v3 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Ahmed_III> . ?v0 <http://dbpedia.org/ontology/child> ?result . },"```sparql
SELECT ?child WHERE {
  # Find Mustafa III and his royal father
  ?mustafa dbo:parent ?royalFather .
  ?mustafa rdfs:label ""Mustafa III""@en .
  
  # Ensure the father is royalty (e.g., Sultan)
  ?royalFather rdf:type dbo:Sultan .

  # Identify children of this royal father
  ?child dbo:parent ?royalFather .

  # Find Ahmed III and one of his children
  ?ahmed dbo:parent ?ahmedChild .
  ?ahmed rdfs:label ""Ahmed III""@en .

  # Determine the successor of that child
  OPTIONAL {
    ?ahmedChild dbo:succeededBy ?successor .
  }

  # Match the child from Mustafa's father with the successor of Ahmed's child
  FILTER (?child = ?successor)
}
```",4,5,5,2,2,3,3,71,0,0,1,0,0.0,0
365,6,train,Give me the person born as Symon Vasylyovych Petliura and spouse of Olha Petliura.,"SELECT ?result WHERE { ?result <http://dbpedia.org/property/birthName> ""Symon Vasylyovych Petliura""@en . <http://dbpedia.org/resource/Olha_Petliura> <http://dbpedia.org/ontology/spouse> ?result . }","```sparql
SELECT ?person WHERE {
  # Find Symon Vasylyovych Petliura by his birth name
  ?person dbo:birthName ""Symon Vasylyovych Petliura""@en .
  
  # Find spouse of this person and ensure it is Olha Petliura
  OPTIONAL { 
    ?person dbo:spouse ?olhaPetliura .
    ?olhaPetliura rdfs:label ""Olha Petliura""@en .
  }
}
```",2,2,3,1,2,3,2,20,1,0,0,1.0,1.0,1.0
273,8,train,Give me the parent of the alumnus of University of Turin.,SELECT ?result WHERE { ?v0 <http://dbpedia.org/ontology/parent> ?result . ?v0 <http://dbpedia.org/ontology/almaMater> <http://dbpedia.org/resource/University_of_Turin> . },"```sparql
SELECT ?alumnus ?parent WHERE {
  # Find individuals who are alumni of the University of Turin
  ?alumnus dbo:almaMater dbr:University_of_Turin .
  
  # Retrieve the parent(s) of these alumni
  ?alumnus dbo:parent ?parent .
}
```",2,2,3,2,1,3,2,20,2,1,0,0.6666666666666666,1.0,0.8
281,6,train,Give me the commander in New Guinea campaign and awardee of Medal bar.,SELECT ?result WHERE { <http://dbpedia.org/resource/New_Guinea_campaign> <http://dbpedia.org/ontology/commander> ?result . ?result <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/Medal_bar> . },"```sparql
SELECT ?commander ?medal WHERE {
  # Find a commander involved in the New Guinea Campaign
  ?commander dbo:occupation ""Military Commander""@en .
  ?commander dbo:wikiPageWikiLink ?newGuineaCampaign .
  ?newGuineaCampaign rdfs:label ""New Guinea campaign (1942–43)""@en .

  # Check if this commander received a Medal Bar
  OPTIONAL {
    ?commander dbo:award ?medal .
    FILTER regex(str(?medal), ""Medal Bar"", ""i"")
  }
}
```",2,2,3,1,2,2,3,28,0,0,1,0,0.0,0
41,1,train,Give me the party of Declan Costello.,SELECT ?result WHERE { <http://dbpedia.org/resource/Declan_Costello> <http://dbpedia.org/ontology/party> ?result . },"```sparql
SELECT ?party WHERE {
  ?costello rdfs:label ""Declan Costello""@en .
  ?costello dbo:party ?party .
}
```",1,1,2,1,1,2,3,28,1,0,0,1.0,1.0,1.0
554,2,train,Who is the party member of Independent politician?,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/party> <http://dbpedia.org/resource/Independent_politician> . },"```sparql
SELECT ?person WHERE {
  # Find individuals who are currently listed as Independent politicians
  ?person dbo:politicalAffiliation dbr:Independent_politician .
  
  # Check if they have been a member of any political party
  OPTIONAL { 
    ?person dbo:partyMember ?party .
  }
}
```",1,1,2,1,1,3,2,20,0,0,2968,0,0.0,0
926,16,train,Give me the child of the spouse of Şermi Kadın.,SELECT ?result WHERE { ?v0 <http://dbpedia.org/ontology/spouse> <http://dbpedia.org/resource/Şermi_Kadın> . ?result <http://dbpedia.org/property/father> ?v0 . },"```sparql
SELECT ?child WHERE {
  # Identify Şermi Kadın and her spouse
  ?şermiKadin rdfs:label ""Şermi Kadın""@en .
  ?şermiKadin dbo:spouse ?spouse .

  # Find the child of the spouse
  ?spouse dbo:child ?child .
}
```",2,2,3,2,1,3,3,71,0,0,12,0,0.0,0
124,38,train,"Give me the military force of the force, that is a societal event and a military conflict, of Herbert Kitchener, 1st Earl Kitchener and military force of the war, that is an event and a military conflict and a societal event, of Frank Rhodes (British Army officer).","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/battle> ?v2 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. <http://dbpedia.org/resource/Frank_Rhodes_(British_Army_officer)> <http://dbpedia.org/ontology/battle> ?v3 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?result <http://dbpedia.org/ontology/battle> ?v3 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?v2 <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Herbert_Kitchener,_1st_Earl_Kitchener> . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. }","```sparql
SELECT ?kitchenerForce ?rhodesForce WHERE {
  # Herbert Kitchener, 1st Earl Kitchener's associated military force
  ?kitchener dbo:associatedWith ?event .
  ?kitchener rdfs:label ""Herbert Kitchener, 1st Earl Kitchener""@en .

  # Filter events that are both societal and military conflicts for Kitchener
  ?event rdf:type dbp:SocietalEvent ;
         rdf:type dbp:MilitaryConflict .

  # Find the military force associated with these events
  ?event dbo:associatedWith ?kitchenerForce .

  # Frank Rhodes (British Army officer) and his associated military force in wars
  ?rhodes dbo:associatedWith ?war .
  ?rhodes rdfs:label ""Frank Rhodes (British Army officer)""@en .

  # Filter wars that are events, military conflicts, and societal events for Rhodes
  ?war rdf:type dbp:Event ;
       rdf:type dbp:MilitaryConflict ;
       rdf:type dbp:SocietalEvent .

  # Find the military force associated with these wars
  ?war dbo:associatedWith ?rhodesForce .
}
```",4,9,5,2,2,3,3,71,0,0,1085,0,0.0,0
508,10,train,"Give me the commander, that is Saudi, in the war, that is a military conflict and a societal event, of Hu Yukun.",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/nationality> <http://dbpedia.org/resource/Saudi_Arabia>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. <http://dbpedia.org/resource/Hu_Yukun> <http://dbpedia.org/ontology/battle> ?v0 . ?v0 <http://dbpedia.org/ontology/commander> ?result . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. },"```sparql
SELECT ?commander WHERE {
  # Find Hu Yukun and the war he is involved in
  ?huYukun dbo:birthName ""Hu Yukun""@en .
  
  # Identify military conflict associated with Hu Yukun
  ?war dbo:participant ?huYukun ;
       a dbo:MilitaryConflict .

  # Find commanders of this war
  ?war dbo:commander ?commander .

  # Ensure the commander is Saudi
  ?commander dbo:nationality dbr:Saudi_Arabia .
}
```",2,5,3,2,1,3,2,20,0,0,1,0,0.0,0
573,18,train,"Give me the person decedent at Massachusetts and person decedent at Quincy, Massachusetts and parent of John Quincy Adams.","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/deathPlace> <http://dbpedia.org/resource/Quincy,_Massachusetts> . <http://dbpedia.org/resource/John_Quincy_Adams> <http://dbpedia.org/ontology/parent> ?result . ?result <http://dbpedia.org/ontology/deathPlace> <http://dbpedia.org/resource/Massachusetts> . }","```sparql
SELECT ?personDecedentMassachusetts ?personDecedentQuincy ?parentJohnQuincyAdams WHERE {
  # Person decedent at Massachusetts
  ?personDecedentMassachusetts dbo:deathPlace ?massachusetts .
  ?massachusetts rdfs:label ""Massachusetts""@en .

  # Person decedent at Quincy, Massachusetts
  OPTIONAL {
    ?personDecedentQuincy dbo:deathPlace ?quincy .
    ?quincy rdfs:label ""Quincy, Massachusetts""@en .
  }

  # Parent of John Quincy Adams
  ?johnQuincyAdams dbo:parent ?parentJohnQuincyAdams .
  ?johnQuincyAdams rdfs:label ""John Quincy Adams""@en .
}
```",3,3,4,1,3,3,3,71,2,1002,0,0.00199203187250996,1.0,0.003976143141153081
18,6,train,Give me the parent of Liza Huber and professional in .,"SELECT ?result WHERE { ?result <http://dbpedia.org/property/occupation> """"@en . ?result <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Liza_Huber> . }","```sparql
SELECT ?parent ?profession WHERE {
  # Identify Liza Huber and find her parent
  ?lizaHuber dbo:parent ?parent .
  ?lizaHuber rdfs:label ""Liza Huber""@en .

  # Find the professional field of Liza Huber
  OPTIONAL { 
    ?lizaHuber dbo:occupation ?profession .
  }
}
```",2,2,3,1,2,2,3,28,1,1,0,0.5,1.0,0.6666666666666666
465,39,train,"Give me the successor of the child, that is a royalty, of the parent of Charles Orlando, Dauphin of France and spouse of Archduchess Barbara of Austria.","SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/successor> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v0 <http://dbpedia.org/ontology/child> ?v1 . <http://dbpedia.org/resource/Charles_Orlando,_Dauphin_of_France> <http://dbpedia.org/ontology/parent> ?v0 . ?result <http://dbpedia.org/ontology/spouse> <http://dbpedia.org/resource/Archduchess_Barbara_of_Austria> . }","```sparql
SELECT ?successor WHERE {
  # Step 1: Identify Charles Orlando as Dauphin of France
  ?charlesOrlando rdfs:label ""Charles Orlando, Dauphin of France""@en .
  
  # Step 2: Find the parent of Charles Orlando
  ?parent dbo:child ?charlesOrlando .

  # Step 3: Determine the spouse of this parent who is Archduchess Barbara of Austria
  ?spouse rdfs:label ""Archduchess Barbara of Austria""@en .
  ?parent dbo:spouse ?spouse .

  # Step 4: Identify any royalty child from this union
  ?royalChild dbo:parent ?spouse .
  FILTER (regex(str(?royalChild), ""Royal"", ""i""))

  # Step 5: Retrieve the successor of this royal child
  ?successor dbo:predecessor ?royalChild .
}
```",4,5,5,3,2,3,3,71,0,0,1,0,0.0,0
839,11,train,"Give me the band of the person born, that is a musical artist, as Kevin Richard Russell.","SELECT ?result WHERE { ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?v0 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v0 <http://dbpedia.org/property/birthName> ""Kevin Richard Russell""@en . }","```sparql
SELECT ?band WHERE {
  ?person rdfs:label ""Kevin Richard Russell""@en .
  ?person dbo:occupation dbr:Musician .
  
  # Find the band Kevin Richard Russell is associated with
  OPTIONAL { 
    ?person dbo:bandMemberOf ?band .
  }
}
```",2,3,3,2,1,3,3,71,0,0,1,0,0.0,0
129,4,train,"Give me the actor, that is an organisation, of Dreamville Presents: Revenge.",SELECT ?result WHERE { ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. <http://dbpedia.org/resource/Dreamville_Presents:_Revenge> <http://dbpedia.org/property/starring> ?result . },"```sparql
SELECT ?organization WHERE {
  ?work rdfs:label ""Dreamville Presents: Revenge""@en .
  ?work dbo:producer ?organization .
  FILTER (isLiteral(?organization) = false)
}
```",1,2,2,1,1,2,3,28,0,1,1,0.0,0.0,0
18,18,train,"Give me the alumnus of the figure known, that is an educational institution, as Saints and parent of Liza Huber.","SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/EducationalInstitution>. ?v1 <http://dbpedia.org/property/nickname> ""Saints""@en . ?result <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Liza_Huber> . ?result <http://dbpedia.org/ontology/almaMater> ?v1 . }","```sparql
SELECT ?alumnus WHERE {
  # Find the educational institution known as Saints
  ?institution dbo:wikiPageRedirects db:Saints .
  
  # Find alumni of this institution
  ?institution dbo:alumni ?alumnus .

  # Identify Liza Huber and her parent
  ?liza foaf:name ""Liza Huber""@en .
  ?parent foaf:parent ?liza .
  
  # Match the alumnus with the parent of Liza Huber
  FILTER (?alumnus = ?parent)
}
```",3,4,4,2,2,2,3,28,0,0,1,0,0.0,0
124,32,train,"Give me the military force of the war, that is an event and a military conflict and a societal event, of Frank Rhodes (British Army officer) and commander in the war, that is a societal event and a military conflict, of A Field Battery, Royal Australian Artillery.","SELECT ?result WHERE { <http://dbpedia.org/resource/Frank_Rhodes_(British_Army_officer)> <http://dbpedia.org/ontology/battle> ?v3 . ?v1 <http://dbpedia.org/ontology/commander> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?result <http://dbpedia.org/ontology/battle> ?v3 . <http://dbpedia.org/resource/A_Field_Battery,_Royal_Australian_Artillery> <http://dbpedia.org/ontology/battle> ?v1 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. }","```sparql
SELECT ?militaryForce ?commander WHERE {
  # Find the war involving Frank Rhodes that is an event, military conflict, and societal event
  ?war dbo:wikiPageRedirects dbpedia-frank_rhodes .
  ?war rdf:type dbo:Event ;
       dbo:category dbc:Military_conflicts ;
       dbo:category dbc:Societal_events .

  # Get the military force associated with this war
  ?war dbo:militaryForce ?militaryForce .

  # Find the war involving A Field Battery, Royal Australian Artillery that is a societal event and military conflict
  ?batteryWar dbo:wikiPageRedirects dbpedia-a_field_battery_royal_australian_artillery .
  ?batteryWar rdf:type dbo:Event ;
              dbo:category dbc:Military_conflicts ;
              dbo:category dbc:Societal_events .

  # Get the commander of this war
  ?batteryWar dbo:commander ?commander .
}
```",4,9,5,2,2,3,3,71,0,0,9,0,0.0,0
573,16,train,"Give me the residence, that is a settlement, of the professional, that is American, in Politician.","SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/nationality> <http://dbpedia.org/resource/United_States>. ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. ?v1 <http://dbpedia.org/property/residence> ?result . ?v1 <http://dbpedia.org/property/occupation> ""Politician""@en . }","```sparql
SELECT ?professional ?residence WHERE {
  # Find professionals in politics who are American
  ?professional dbo:profession dbc:American_politicians .
  ?professional dbo:nationality dbr:United_States .

  # Get their residence, ensuring it is a settlement
  ?professional dbo:residence ?residence .
  ?residence rdf:type dbo:Settlement .
}
```",2,4,3,2,1,3,3,71,0,0,41,0,0.0,0
582,35,train,Give me the figure known as the nickname of Japan national football team and reference to the residence of Hirotaka Sugawara.,SELECT ?result WHERE { <http://dbpedia.org/resource/Hirotaka_Sugawara> <http://dbpedia.org/property/residence> ?v2 . ?result <http://dbpedia.org/property/nickname> ?v1 . ?result <http://xmlns.com/foaf/0.1/name> ?v2 . <http://dbpedia.org/resource/Japan_national_football_team> <http://dbpedia.org/property/nickname> ?v1 . },"```sparql
SELECT ?nickname WHERE {
  ?team dbo:nickname ?nickname .
  ?team rdfs:label ""Japan national football team""@en .
}

UNION

SELECT ?residence WHERE {
  ?person dbo:residence ?residence .
  ?person rdfs:label ""Hirotaka Sugawara""@en .
}
```",4,4,5,2,2,3,3,71,0,0,1,0,0.0,0
926,8,train,"Give me the father, that is a royalty, of Mustafa III.",SELECT ?result WHERE { <http://dbpedia.org/resource/Mustafa_III> <http://dbpedia.org/property/father> ?result . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. },"```sparql
SELECT ?father WHERE {
  # Find Mustafa III and his parents
  ?mustafa dbo:parent ?father .
  ?mustafa rdfs:label ""Mustafa III""@en .

  # Ensure the father is royalty by checking for a royal title or similar property
  OPTIONAL { 
    ?father dbo:title ?title .
    FILTER (regex(str(?title), ""Emperor|Sultan"", ""i""))
  }
}
```",1,2,2,1,1,3,3,71,1,1,0,0.5,1.0,0.6666666666666666
965,16,train,"Give me the child, that is a royalty, of the person born, that is a politician, on 1854-05-24.","SELECT ?result WHERE { ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v0 <http://dbpedia.org/ontology/birthDate> ""1854-05-24""^^<http://www.w3.org/2001/XMLSchema#date> . ?result <http://dbpedia.org/property/father> ?v0 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. }","```sparql
SELECT ?royalChild WHERE {
  # Identify the person born on May 24, 1854, and is a politician
  ?person dbo:birthDate ""1854-05-24""^^xsd:date ;
          rdf:type dbo:Politician .
  
  # Find children of this person
  ?person dbo:child ?child .

  # Filter for the child who is royalty
  ?child rdf:type dbo:RoyalFamilyMember .
}
```",2,4,3,2,1,3,3,71,0,0,2,0,0.0,0
129,1,train,Give me the associated musical artist of EarthGang.,SELECT ?result WHERE { <http://dbpedia.org/resource/EarthGang> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . },"```sparql
SELECT ?associatedArtist WHERE {
  # Find EarthGang's associated artist through collaboration or production
  ?earthGang dbo:collaborationWith ?associatedArtist .
  ?earthGang rdfs:label ""EarthGang""@en .

  UNION

  ?earthGang dbo:producedBy ?associatedArtist .
  
  FILTER (lang(?associatedArtist) = 'en')
}
```",1,1,2,1,1,2,3,28,0,0,4,0,0.0,0
715,25,train,"Give me the leader of the office, that is a government agency and an organisation, of Carlos Franco Iribarnegaray and commander in Spanish Civil War.",SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?v1 <http://dbpedia.org/ontology/leader> ?result . <http://dbpedia.org/resource/Carlos_Franco_Iribarnegaray> <http://dbpedia.org/property/office> ?v1 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/GovernmentAgency>. <http://dbpedia.org/resource/Spanish_Civil_War> <http://dbpedia.org/ontology/commander> ?result . },"```sparql
SELECT ?leader WHERE {
  # Find Carlos Franco Iribarnegaray and his roles
  ?carlos a dbo:Person ;
          rdfs:label ""Carlos Franco Iribarnegaray""@en .
  
  OPTIONAL {
    # Identify the organization or agency he led
    ?carlos dbo:positionHeld ?position .
    ?position dbo:office ?office .
    ?office a dbo:GovernmentAgency ; # Ensure it's a government agency/organization
            dbo:leader ?leader .
  }
  
  OPTIONAL {
    # Find his role as a commander in the Spanish Civil War
    ?carlos dbo:militaryCommanderOf ?command .
    ?command rdfs:label ""Spanish Civil War""@en .
  }
}
```",3,5,4,2,2,3,3,71,0,0,1,0,0.0,0
465,36,train,"Give me the successor of Ercole II d'Este, Duke of Ferrara and successor of the child, that is a royalty, of the parent of Charles Orlando, Dauphin of France.","SELECT ?result WHERE { <http://dbpedia.org/resource/Ercole_II_d'Este,_Duke_of_Ferrara> <http://dbpedia.org/ontology/successor> ?result . ?v0 <http://dbpedia.org/ontology/child> ?v1 . ?v1 <http://dbpedia.org/ontology/successor> ?result . <http://dbpedia.org/resource/Charles_Orlando,_Dauphin_of_France> <http://dbpedia.org/ontology/parent> ?v0 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. }","```sparql
SELECT ?successor WHERE {
  # Find Ercole II d'Este and his successor
  ?ercole dbo:successor ?successor1 .
  ?ercole rdfs:label ""Ercole II d'Este""@en .

  # Identify Charles Orlando, Dauphin of France, and his parent
  ?charlesOrlando dbo:parent ?parent .
  ?charlesOrlando rdfs:label ""Charles Orlando, Dauphin of France""@en .

  # Find a royal child of this parent
  ?royalChild dbo:parent ?parent ;
              rdf:type dbo:RoyalFamilyMember .

  # Determine the successor of this royal child
  ?royalChild dbo:successor ?successor .
}
```",4,5,5,3,2,3,3,71,0,0,1,0,0.0,0
216,22,train,"Give me the player in Igor Bišćan and team of the person born, that is a sports manager and a soccer manager and a soccer player, on 1983-12-20.","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/coach> ?v1 . ?v1 <http://dbpedia.org/ontology/birthDate> ""1983-12-20""^^<http://www.w3.org/2001/XMLSchema#date> . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerPlayer>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsManager>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerManager>. <http://dbpedia.org/resource/Igor_Bišćan> <http://dbpedia.org/ontology/team> ?result . }","```sparql
SELECT ?team WHERE {
  # Step 1: Identify Igor Bišćan's teams
  ?bišćan dbo:birthDate ""1980-03-29""^^xsd:date ;
          dbo:sport ""association football""@en ;
          dbo:playsFor ?team .
  
  # Step 2: Find the person born on 1983-12-20 who is a sports manager, soccer manager, and player
  ?person dbo:birthDate ""1983-12-20""^^xsd:date ;
          rdf:type dbo:SoccerPlayer ;
          rdf:type dbo:SoccerManager ;
          rdf:type dbo:SportsManager .
  
  # Step 3: Determine the team associated with this person
  OPTIONAL {
    ?person dbo:playsFor ?team .
  }
}
```",3,6,4,2,2,3,3,71,0,0,1,0,0.0,0
791,8,train,"Give me the child, that is a royalty, of Emperor Takakura.",SELECT ?result WHERE { ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?result <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Emperor_Takakura> . },"```sparql
SELECT ?child WHERE {
  # Find children of Emperor Takakura
  ?takakura dbo:child ?child .
  ?takakura rdfs:label ""Emperor Takakura""@en .

  # Ensure the child is royalty by checking their label
  FILTER (
    regex(str(?child), ""(Empress|Emperor|Prince|Princess)"", ""i"")
  )
}
```",1,2,2,1,1,3,3,71,2,0,1,1.0,0.6666666666666666,0.8
965,15,train,Give me the spouse of the parent of Louise Mountbatten.,SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/spouse> ?result . <http://dbpedia.org/resource/Louise_Mountbatten> <http://dbpedia.org/ontology/parent> ?v1 . },"```sparql
SELECT ?spouse WHERE {
  # Identify Louise Mountbatten and her parent
  ?louise dbo:parent ?parent .
  ?louise rdfs:label ""Louise Mountbatten""@en .

  # Find the spouse of the identified parent
  ?parent dbo:spouse ?spouse .
}
```",2,2,3,2,1,3,3,71,2,0,0,1.0,1.0,1.0
47,3,train,"Give me the commander, that is a politician, in Operation Green Hunt.",SELECT ?result WHERE { ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. <http://dbpedia.org/resource/Operation_Green_Hunt> <http://dbpedia.org/ontology/commander> ?result . },"```sparql
SELECT ?commander WHERE {
  # Find Operation Green Hunt
  ?operation dbo:wikiPageRedirects dbpedia-en:Operation_Green_Hunt .
  
  # Identify commanders of the operation
  ?operation dbo:commander ?commander .
  
  # Check if the commander is also a politician
  ?commander dbo:occupation dbc:Politicians_by_country .
}
```",1,2,2,1,1,3,3,71,0,0,104,0,0.0,0
926,39,train,"Give me the child of the father, that is a royalty, of the parent, that is a royalty, of Beyhan Sultan (daughter of Mustafa III) and successor of Mustafa III.",SELECT ?result WHERE { <http://dbpedia.org/resource/Mustafa_III> <http://dbpedia.org/ontology/successor> ?result . ?v0 <http://dbpedia.org/ontology/child> ?result . ?v2 <http://dbpedia.org/property/father> ?v0 . <http://dbpedia.org/resource/Beyhan_Sultan_(daughter_of_Mustafa_III)> <http://dbpedia.org/ontology/parent> ?v2 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. },"```sparql
SELECT ?child WHERE {
  # Beyhan Sultan and her parent
  ?beyhanSultan dbo:parent ?mustafaIII .
  ?beyhanSultan rdfs:label ""Beyhan Sultan""@en .

  # Mustafa III's successor
  ?successor dbo:predecessor ?mustafaIII .
  ?successor rdfs:label ""Selim III""@en .

  # Abdul Hamid I, father of Mustafa III
  ?abdulHamidI dbo:parent ?mustafaIII .
  
  # A child of Abdul Hamid I who is royalty
  ?royalChild dbo:parent ?abdulHamidI .
  FILTER (regex(str(?royalChild), ""Mustafa"", ""i"") || regex(str(?royalChild), ""Selim"", ""i""))

  # The child of this royal child
  ?child dbo:parent ?royalChild .
}
```",4,6,5,3,2,3,3,71,0,0,1,0,0.0,0
456,23,train,"Give me the spouse of the actor of the movie, that is a work and a television show, with Ross Newton.",SELECT ?result WHERE { ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/TelevisionShow>. ?v0 <http://dbpedia.org/ontology/spouse> ?result . ?v2 <http://dbpedia.org/property/starring> <http://dbpedia.org/resource/Ross_Newton> . ?v2 <http://dbpedia.org/property/starring> ?v0 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. },"```sparql
SELECT ?spouse WHERE {
  # Find a movie that is both a work and a television show with Ross Newton
  ?movie dbo:type dbr:Film .
  ?movie dbo:type dbr:Television_series .
  ?movie dbo:starring ?rossNewton .
  ?rossNewton rdfs:label ""Ross Newton""@en .

  # Find co-actors in the movie
  ?movie dbo:starring ?coActor .

  # Get spouse of a co-actor
  ?coActor dbo:spouse ?spouse .
}
```",3,5,4,3,1,3,3,71,0,0,5,0,0.0,0
826,21,train,"Give me the spouse of the child of Johann Heinrich Appel and predecessor of Louis IV, Grand Duke of Hesse.","SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/spouse> ?result . ?result <http://dbpedia.org/ontology/successor> <http://dbpedia.org/resource/Louis_IV,_Grand_Duke_of_Hesse> . ?v1 <http://dbpedia.org/property/father> ""Johann Heinrich Appel""@en . }","```sparql
SELECT ?spouse WHERE {
  # Find a child of Johann Heinrich Appel
  ?appel dbo:child ?child .
  ?appel rdfs:label ""Johann Heinrich Appel""@en .

  # Find predecessor of Louis IV, Grand Duke of Hesse
  ?louisIV dbo:predecessor ?predecessor .
  ?louisIV rdfs:label ""Louis IV, Grand Duke of Hesse""@en .

  # Find the spouse of Johann Heinrich Appel's child
  ?child dbo:spouse ?spouse .
}
```",3,3,4,2,2,3,3,71,0,0,1,0,0.0,0
329,17,train,"Give me the entity in Northern Ireland and entity in the region, that is a country, of Western European Time.",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Northern_Ireland> . ?v1 <http://dbpedia.org/property/timeZone> <http://dbpedia.org/resource/Western_European_Time> . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. ?result <http://dbpedia.org/ontology/country> ?v1 . },"```sparql
SELECT ?countryInRegion ?entityInNorthernIreland WHERE {
  # Find the region for Western European Time
  ?timeZone dbo:wikiPageRedirects dbpedia:Western_European_Time .
  ?timeZone dbo:region ?region .

  # Find a country in that region
  ?countryInRegion dbo:partOf ?region ;
                  rdf:type dbo:Country .

  # Find an entity in Northern Ireland
  ?entityInNorthernIreland dbo:location ?northernIreland .
  ?northernIreland rdfs:label ""Northern Ireland""@en .
}
```",3,4,4,2,2,2,3,28,0,0,531,0,0.0,0
170,0,train,Give me the entity in Russia.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Russia> . },"```sparql
SELECT ?city WHERE {
  ?city dbo:country dbr:Russia .
  ?city dbo:capital true .
}
```",1,1,2,1,1,2,3,28,0,0,29927,0,0.0,0
773,28,train,Give me the spouse of the father of Charles the Fat and parent of Charles the Fat and parent of Carloman of Bavaria.,SELECT ?result WHERE { <http://dbpedia.org/resource/Charles_the_Fat> <http://dbpedia.org/ontology/parent> ?result . <http://dbpedia.org/resource/Charles_the_Fat> <http://dbpedia.org/property/father> ?v1 . ?result <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Carloman_of_Bavaria> . ?v1 <http://dbpedia.org/ontology/spouse> ?result . },"```sparql
SELECT ?spouse WHERE {
  # Find Charles the Fat and his father
  ?charlesFat dbo:parent ?father .
  ?charlesFat rdfs:label ""Charles the Fat""@en .

  # Find spouse of the father of Charles the Fat
  ?father dbo:spouse ?spouse .

  # Ensure this spouse is also a parent of Carloman of Bavaria
  OPTIONAL {
    ?carloman dbr:Carloman_of_Bavaria dbo:parent ?spouse .
  }
}
```",4,4,5,2,3,3,3,71,0,0,1,0,0.0,0
433,3,train,Give me the persona of Paul Chambers.,SELECT ?result WHERE { <http://dbpedia.org/resource/Paul_Chambers> <http://xmlns.com/foaf/0.1/givenName> ?result . },"```sparql
SELECT ?property ?hasValue WHERE {
  # Identify the resource for Paul Chambers
  ?paulChambers rdfs:label ""Paul Chambers""@en .
  
  # Retrieve biographical information
  OPTIONAL { 
    ?paulChambers ?property ?hasValue .
    FILTER (regex(str(?property), ""birth|death|placeOfBirth"", ""i""))
  }
  
  # Retrieve career highlights and notable works
  OPTIONAL {
    ?paulChambers dbo:profession ?profession .
    ?paulChambers dbo:notableWork ?notableWork .
    FILTER (regex(str(?profession), ""bassist|jazz musician"", ""i""))
  }

  # Retrieve influence and legacy information
  OPTIONAL {
    ?paulChambers dbo:influenced ?influence .
    FILTER (regex(str(?property), ""influencedBy|genre"", ""i""))
  }
}
```",1,1,2,1,1,3,3,71,1,17,0,0.05555555555555555,1.0,0.10526315789473684
465,0,train,"Give me the successor of Ercole II d'Este, Duke of Ferrara.","SELECT ?result WHERE { <http://dbpedia.org/resource/Ercole_II_d'Este,_Duke_of_Ferrara> <http://dbpedia.org/ontology/successor> ?result . }","```sparql
SELECT ?successor WHERE {
  ?este dbo:successor ?successor .
  ?este rdfs:label ""Ercole II d'Este""@en .
}
```",1,1,2,1,1,3,3,71,0,0,1,0,0.0,0
582,7,train,"Give me the team, that is an organisation, of Hajime Moriyasu.",SELECT ?result WHERE { ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?result <http://dbpedia.org/ontology/coach> <http://dbpedia.org/resource/Hajime_Moriyasu> . },"```sparql
SELECT ?team WHERE {
  ?hajimeMorrisyu dbo:manager ?team .
  ?hajimeMorrisyu rdfs:label ""Hajime Moriyasu""@en .
  ?team rdf:type dbo:Organization .
}
```",1,2,2,1,1,3,3,71,0,0,1,0,0.0,0
926,10,train,Give me the child of Ahmed III and father of Mahmud II.,SELECT ?result WHERE { <http://dbpedia.org/resource/Ahmed_III> <http://dbpedia.org/ontology/child> ?result . <http://dbpedia.org/resource/Mahmud_II> <http://dbpedia.org/property/father> ?result . },"```sparql
SELECT ?middlePerson WHERE {
  # Find child of Ahmed III
  ?ahmedIII dbo:child ?middlePerson .
  ?ahmedIII rdfs:label ""Ahmed III""@en .

  # Ensure the middle person is a parent of Mahmud II
  ?middlePerson dbo:parent ?mahmudII .
  ?mahmudII rdfs:label ""Mahmud II""@en .
}
```",2,2,3,1,2,3,3,71,0,0,1,0,0.0,0
433,4,train,"Give me the person born, that is a musical artist and an artist, as Paul Laurence Dunbar Chambers Jr..","SELECT ?result WHERE { ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?result <http://dbpedia.org/property/birthName> ""Paul Laurence Dunbar Chambers Jr.""@en . }","```sparql
SELECT ?birthDate WHERE {
  ?person rdfs:label ""Paul Laurence Dunbar Chambers Jr.""@en .
  ?person dbo:birthDate ?birthDate .
  
  # Ensure the person has the occupation of musical artist
  ?person dbo:occupation ?musicalArtist .
  FILTER (regex(str(?musicalArtist), ""musician"", ""i"") || regex(str(?musicalArtist), ""bassist"", ""i""))

  # Ensure the person has the occupation of artist
  ?person dbo:occupation ?artist .
  FILTER (regex(str(?artist), ""artist"", ""i""))
}
```",1,3,2,1,1,3,3,71,0,0,1,0,0.0,0
582,2,train,Give me the figure known as --10-19.,"SELECT ?result WHERE { ?result <http://dbpedia.org/property/nickname> ""--10-19""^^<http://www.w3.org/2001/XMLSchema#gMonthDay> . }","```sparql
SELECT ?descendant WHERE {
  # Start with Emperor Go-Toba
  ?goToba rdfs:label ""Emperor Go-Toba""@en .
  
  # Traverse generations to find the 19th generation descendant
  ?goToba dbo:child ?firstChild .
  ?firstChild dbo:child ?secondChild .
  ?secondChild dbo:child ?thirdChild .
  ?thirdChild dbo:child ?fourthChild .
  ?fourthChild dbo:child ?fifthChild .
  ?fifthChild dbo:child ?sixthChild .
  ?sixthChild dbo:child ?seventhChild .
  ?seventhChild dbo:child ?eighthChild .
  ?eighthChild dbo:child ?ninthChild .
  ?ninthChild dbo:child ?tenthChild .
  ?tenthChild dbo:child ?eleventhChild .
  ?eleventhChild dbo:child ?twelfthChild .
  ?twelfthChild dbo:child ?thirteenthChild .
  ?thirteenthChild dbo:child ?fourteenthChild .
  ?fourteenthChild dbo:child ?fifteenthChild .
  ?fifteenthChild dbo:child ?sixteenthChild .
  ?sixteenthChild dbo:child ?seventeenthChild .
  ?seventeenthChild dbo:child ?eighteenthChild .
  ?eighteenthChild dbo:child ?nineteenthChild .

  # From the 19th generation, find the 10th child
  ?nineteenthChild dbo:child ?descendant .
  BIND (COUNT(?descendant) AS ?childCount)
  FILTER (?childCount = 10)
}
```",1,1,2,1,1,3,3,71,0,0,1,0,0.0,0
645,12,train,Give me the military force of Spanish Civil War and leader of Ministry of the Army (Spain).,SELECT ?result WHERE { <http://dbpedia.org/resource/Ministry_of_the_Army_(Spain)> <http://dbpedia.org/ontology/leader> ?result . ?result <http://dbpedia.org/ontology/battle> <http://dbpedia.org/resource/Spanish_Civil_War> . },"```sparql
SELECT ?militaryForce ?leader WHERE {
  # Find military forces involved in the Spanish Civil War
  ?civilWar dbo:wikiPageRedirects ?redirect .
  ?redirect rdfs:label ""Spanish Civil War""@en .
  
  OPTIONAL {
    ?civilWar dbo:militaryForce ?militaryForce .
  }
  
  # Find leader of the Ministry of the Army (Spain)
  OPTIONAL {
    ?ministry dbr:Ministry_of_the_Army_(Spain) ;
              dbo:head ?leader .
    
    FILTER EXISTS { 
      ?leader dbo:nationality dbr:Spain .
    }
  }
}
```",2,2,3,1,2,3,3,71,0,0,1,0,0.0,0
83,8,train,Give me the party of the governor of Dilma Rousseff.,SELECT ?result WHERE { ?v0 <http://dbpedia.org/ontology/party> ?result . <http://dbpedia.org/resource/Dilma_Rousseff> <http://dbpedia.org/property/governor> ?v0 . },"```sparql
SELECT ?party WHERE {
  # Find Dilma Rousseff and her role as governor
  ?dilma dbo:positionHeld ?governorship .
  ?dilma rdfs:label ""Dilma Rousseff""@en .

  # Identify the state she governed
  ?governorship dbo:state ?state .
  ?state rdfs:label ?stateLabel .

  # Find the political party associated with her governorship
  ?governorship dbo:politicalParty ?party .
}
```",2,2,3,2,1,3,2,20,0,0,2,0,0.0,0
987,36,train,"Give me the birth place of Dado Polumenta and entity in the region, that is a country, of the time zone, that is a sports event, in Canicosa de la Sierra.",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/country> ?v0 . <http://dbpedia.org/resource/Dado_Polumenta> <http://dbpedia.org/ontology/birthPlace> ?result . ?v0 <http://dbpedia.org/property/timeZone> ?v3 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsEvent>. <http://dbpedia.org/resource/Canicosa_de_la_Sierra> <http://dbpedia.org/ontology/timeZone> ?v3 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. },"```sparql
SELECT ?birthPlace ?country WHERE {
  # Get the birth place of Dado Polumenta
  ?dado dbo:birthPlace ?birthPlace .
  ?dado rdfs:label ""Dado Polumenta""@en .

  # Find the time zone for Canicosa de la Sierra
  ?canicosa dbo:timeZone ?timeZone .
  ?canicosa rdfs:label ""Canicosa de la Sierra""@en .

  # Identify sports events in this time zone
  ?event dbo:locationTimezone ?timeZone ;
         a dbo:SportsEvent .

  # Find the country of the region where these sports events occur
  ?region dbo:country ?country .
  ?event dbo:location ?region .
}
```",4,6,5,3,2,3,3,71,0,0,1,0,0.0,0
83,6,train,Give me the ruling party in Fortaleza and party of Alceu Collares.,SELECT ?result WHERE { <http://dbpedia.org/resource/Alceu_Collares> <http://dbpedia.org/ontology/party> ?result . <http://dbpedia.org/resource/Fortaleza> <http://dbpedia.org/property/leaderParty> ?result . },"```sparql
# Query to find the ruling party in Fortaleza
SELECT ?party WHERE {
  ?fortaleza dbo:city ?location .
  ?fortaleza rdfs:label ""Fortaleza""@en .
  
  # Assuming there is a property that links city governance or political influence
  OPTIONAL { 
    ?fortaleza dbo:governingParty ?party .
  }
}

# Query to find the party of Alceu Collares
SELECT ?party WHERE {
  ?alceuCollares dbo:politicalAffiliation ?party .
  ?alceuCollares rdfs:label ""Alceu Collares""@en .
}
```",2,2,3,1,2,3,2,20,0,0,1,0,0.0,0
495,10,train,Give me the child of the parent of Princess Pauline of Württemberg (1810–1856).,SELECT ?result WHERE { <http://dbpedia.org/resource/Princess_Pauline_of_Württemberg_(1810–1856)> <http://dbpedia.org/ontology/parent> ?v0 . ?result <http://dbpedia.org/ontology/parent> ?v0 . },"```sparql
SELECT DISTINCT ?child WHERE {
  # Identify Princess Pauline of Württemberg
  ?princess rdfs:label ""Princess Pauline of Württemberg""@en .
  FILTER (YEAR(?princess dbo:birth) = 1810 && YEAR(?princess dbo:death) = 1856)

  # Find her parent
  ?princess dbo:parent ?parent .

  # Find the child of this parent
  ?parent dbo:child ?child .
}
```",2,2,3,2,1,3,2,20,0,0,4,0,0.0,0
976,4,train,"Who is the leader, that is a politician, of Grand National Assembly of Turkey?",SELECT ?result WHERE { ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. <http://dbpedia.org/resource/Grand_National_Assembly_of_Turkey> <http://dbpedia.org/ontology/leader> ?result . },"```sparql
SELECT ?leader WHERE {
  # Find the Grand National Assembly of Turkey
  ?assembly dbo:officialName ""Grand National Assembly of Turkey""@en .
  
  # Retrieve the current or most recent leader (Speaker) of the assembly
  ?assembly dbo:speaker ?leader .
  
  # Ensure the leader is recognized as a politician
  OPTIONAL {
    ?leader rdf:type dbo:Politician .
  }
}
```",1,2,2,1,1,3,3,71,0,0,1,0,0.0,0
826,10,train,"Give me the predecessor of Louis IV, Grand Duke of Hesse and spouse of Anna Magdalena Appel.","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/successor> <http://dbpedia.org/resource/Louis_IV,_Grand_Duke_of_Hesse> . <http://dbpedia.org/resource/Anna_Magdalena_Appel> <http://dbpedia.org/ontology/spouse> ?result . }","```sparql
SELECT ?predecessor ?spouse WHERE {
  # Find the predecessor of Louis IV, Grand Duke of Hesse
  ?louisIV dbo:predecessor ?predecessor .
  ?louisIV rdfs:label ""Louis IV, Grand Duke of Hesse""@en .

  # Find the spouse of Anna Magdalena Appel
  OPTIONAL {
    ?annaMagdalena dbo:spouse ?spouse .
    ?annaMagdalena rdfs:label ""Anna Magdalena Appel""@en .
  }
}
```",2,2,3,1,2,3,3,71,1,0,0,1.0,1.0,1.0
508,3,train,"Give me the commander, that is a politician, in 1939–1940 Winter Offensive.",SELECT ?result WHERE { ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. <http://dbpedia.org/resource/1939–1940_Winter_Offensive> <http://dbpedia.org/ontology/commander> ?result . },"```sparql
SELECT ?commander WHERE {
  # Find the Winter Offensive event
  ?offensive dbo:startDate ?start .
  ?offensive dbo:endDate ?end .
  ?offensive rdfs:label ""Winter War""@en .

  # Ensure the offensive is within the specified time frame
  FILTER (?start >= ""1939-01-01""^^xsd:date && ?end <= ""1940-12-31""^^xsd:date)

  # Find the commander of this event
  ?offensive dbo:commander ?commander .

  # Ensure the commander was a politician
  OPTIONAL {
    ?commander dbo:occupation ?occupation .
    FILTER (regex(str(?occupation), ""politician"", ""i""))
  }
}
```",1,2,2,1,1,3,2,20,0,0,6,0,0.0,0
791,30,train,"Give me the spouse of Taira no Tokuko and father of the child, that is a royalty, of Emperor Takakura and predecessor of Emperor Antoku.",SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?result <http://dbpedia.org/ontology/successor> <http://dbpedia.org/resource/Emperor_Antoku> . ?result <http://dbpedia.org/ontology/spouse> <http://dbpedia.org/resource/Taira_no_Tokuko> . ?v1 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Emperor_Takakura> . ?v1 <http://dbpedia.org/property/father> ?result . },"```sparql
SELECT ?spouse ?father WHERE {
  # Find the spouse of Taira no Tokuko
  ?tokuko dbo:spouse ?spouse .
  ?tokuko rdfs:label ""Taira no Tokuko""@en .

  # Find Emperor Takakura's child who is royalty and their father
  OPTIONAL {
    ?takakura dbo:child ?royalChild .
    ?takakura rdfs:label ""Emperor Takakura""@en .
    ?royalChild dbo:parent ?father .
    FILTER (regex(str(?royalChild), ""Emperor Antoku"", ""i""))
  }

  # Ensure the father is also the predecessor of Emperor Antoku
  OPTIONAL {
    ?antoku dbo:predecessor ?spouse .
    ?antoku rdfs:label ""Emperor Antoku""@en .
  }
}
```",4,5,5,2,3,3,3,71,1,0,0,1.0,1.0,1.0
976,12,train,Give me the office of Meral Akşener and office of Naci Bostancı.,SELECT ?result WHERE { <http://dbpedia.org/resource/Meral_Akşener> <http://dbpedia.org/property/office> ?result . <http://dbpedia.org/resource/Naci_Bostancı> <http://dbpedia.org/property/office> ?result . },"```sparql
SELECT ?person ?office WHERE {
  # Find Meral Akşener's office
  OPTIONAL { 
    wd:Q123456 dbo:office ?office .
    BIND(wd:Q123456 AS ?person)
  }
  
  # Find Naci Bostancı's office
  OPTIONAL { 
    wd:Q654321 dbo:office ?office .
    BIND(wd:Q654321 AS ?person)
  }
}
```",2,2,3,1,2,3,3,71,0,0,1,0,0.0,0
83,12,train,Give me the party of the governor of Dilma Rousseff and ruling party in Fortaleza.,SELECT ?result WHERE { <http://dbpedia.org/resource/Fortaleza> <http://dbpedia.org/property/leaderParty> ?result . <http://dbpedia.org/resource/Dilma_Rousseff> <http://dbpedia.org/property/governor> ?v0 . ?v0 <http://dbpedia.org/ontology/party> ?result . },"```sparql
SELECT ?dilmaParty ?fortalezaRulingParty WHERE {
  # Find Dilma Rousseff's political party
  ?dilma dbo:politicalParty ?dilmaParty .
  ?dilma rdfs:label ""Dilma Rousseff""@en .

  # Find the mayor of Fortaleza during Dilma Rousseff's presidency (2011-2016)
  OPTIONAL {
    ?fortaleza dbo:mayor ?mayor .
    ?fortaleza rdfs:label ""Fortaleza, Ceará""@en .
    
    # Assuming we have a way to filter by time period or specific individuals
    ?mayor dbo:politicalParty ?fortalezaRulingParty .
  }
}
```",3,3,4,2,2,3,2,20,0,0,1,0,0.0,0
976,26,train,"Give me the office of the mayor, that is a politician and an office holder and Turkish, of the reference, that is an organisation and a political party and Turkish, to Millet İttifakı.","SELECT ?result WHERE { ?v0 <http://dbpedia.org/ontology/nationality> <http://dbpedia.org/resource/Turkey>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v2 <http://dbpedia.org/property/leader> ?v0 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/PoliticalParty>. ?v0 <http://dbpedia.org/property/office> ?result . ?v2 <http://xmlns.com/foaf/0.1/name> ""Millet İttifakı""@en . ?v2 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Turkey>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. }","```sparql
SELECT ?mayorOffice WHERE {
  # Find the reference organization that is a political party in Turkey connected to Millet İttifakı
  ?org dbo:type dbr:Political_party .
  ?org dbo:country dbr:Turkey .
  ?org dbo:relatedTo dbr:Millet_İttifakı .

  # Find a politician who is Turkish and holds the office of mayor, associated with the organization
  ?politician dbo:nationality dbr:Turkey ;
              dbo:officeHolder ?mayorOffice ;
              dbo:memberOf ?org .
  
  # Ensure the office is that of a mayor
  ?mayorOffice rdfs:label ?officeLabel .
  FILTER (regex(?officeLabel, ""Mayor"", ""i""))
}
```",3,9,4,3,1,3,3,71,0,0,3,0,0.0,0
715,31,train,"Give me the commander in the force, that is a military conflict, of the native of Morocco and commander in Spanish Civil War.",SELECT ?result WHERE { ?v0 <http://dbpedia.org/ontology/commander> ?result . ?v0 <http://dbpedia.org/ontology/commander> ?v1 . <http://dbpedia.org/resource/Spanish_Civil_War> <http://dbpedia.org/ontology/commander> ?result . ?v1 <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Morocco> . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. },"```sparql
SELECT ?commanderInConflict WHERE {
  # Find commanders in the Spanish Civil War
  ?person dbo:role ""Commander""@en ;
          dbo:nationality dbr:Morocco ;
          dbo:participatedInMilitaryConflict dbr:Spanish_Civil_War .

  # Check if this person was a commander in any other military conflict
  OPTIONAL {
    ?person dbo:commanded ?conflict .
    FILTER (?conflict != dbr:Spanish_Civil_War)
  }

  BIND(?person AS ?commanderInConflict)
}
```",4,5,5,3,2,3,3,71,0,0,4,0,0.0,0
445,5,train,Give me the establishment of 1820-03-10.,"SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/foundingDate> ""1820-03-10""^^<http://www.w3.org/2001/XMLSchema#date> . }","```sparql
SELECT ?entity ?label WHERE {
  ?entity dbo:established ""1820-03-10""^^xsd:date .
  OPTIONAL { ?entity rdfs:label ?label . FILTER (lang(?label) = 'en') }
}
```

This query selects entities (`?entity`) and their labels (`?label`), filtering for those with an establishment date of March 10, 1820. The `OPTIONAL` clause ensures that if a label is available in English, it will be included in the results.",1,1,2,1,1,3,3,71,0,0,1,0,0.0,0
917,21,train,"Give me the child of Kekūanāoʻa and parent of the child, that is a royalty, of Kamehameha IV.","SELECT ?result WHERE { ?v2 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Kamehameha_IV> . ?result <http://dbpedia.org/ontology/child> ?v2 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?result <http://dbpedia.org/property/father> ""Kekūanāoʻa""@en . }","```sparql
SELECT ?child ?parent WHERE {
  # Find the child of Kekūanāoʻa
  ?kekuanaoa dbo:child ?child .
  ?kekuanaoa rdfs:label ""Kekūanāoʻa""@en .

  # Find the parent of this child who is royalty and related to Kamehameha IV
  OPTIONAL {
    ?child dbo:parent ?parent .
    ?kamehamehaIV dbo:child ?child .
    ?kamehamehaIV rdfs:label ""Kamehameha IV""@en .
  }
}
```",3,4,4,2,2,3,3,71,1,5,0,0.16666666666666666,1.0,0.2857142857142857
507,0,train,Give me the spouse of Anne V. Coates.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/spouse> <http://dbpedia.org/resource/Anne_V._Coates> . },"```sparql
SELECT ?spouse WHERE {
  ?anne a dbo:Person ;
        rdfs:label ""Anne V. Coates""@en .
  
  OPTIONAL { 
    ?anne dbo:spouse ?spouse .
  }
}
```",1,1,2,1,1,3,3,71,1,0,0,1.0,1.0,1.0
987,23,train,"Give me the birth place of the band, that is an artist and a musical artist, of the band, that is an artist, of Dado Polumenta.",SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. ?v2 <http://dbpedia.org/ontology/birthPlace> ?result . ?v1 <http://dbpedia.org/ontology/associatedMusicalArtist> ?v2 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. <http://dbpedia.org/resource/Dado_Polumenta> <http://dbpedia.org/ontology/associatedMusicalArtist> ?v1 . },"```sparql
SELECT ?birthPlace WHERE {
  # Step 1: Find Dado Prljaca's association with Riblja Čorba
  ?dado dbo:memberOf ?ribljaCorba .
  ?dado rdfs:label ""Dado Prljaca""@en .

  # Step 2: Confirm Riblja Čorba is an artist and musical artist
  ?ribljaCorba a dbo:MusicalArtist ;
              a dbo:Artist .

  # Step 3: Find another band associated with Riblja Čorba
  ?ribljaCorba dbo:associatedBand ?secondBand .
  ?secondBand a dbo:Artist .

  # Step 4: Confirm the second band is also a musical artist
  ?secondBand a dbo:MusicalArtist .

  # Retrieve the birth place of the second band
  ?secondBand dbo:birthPlace ?birthPlace .
}
```",3,6,4,3,1,3,3,71,0,0,6,0,0.0,0
382,10,train,"Give me the award of the reference, that is a college coach and a coach, to Harry Combes.","SELECT ?result WHERE { ?v0 <http://dbpedia.org/property/awards> ?result . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/CollegeCoach>. ?v0 <http://xmlns.com/foaf/0.1/name> ""Harry Combes""@en . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Coach>. }","```sparql
SELECT ?award WHERE {
  # Find entities related to Harry Combes in the context of coaching
  ?combes dbo:wikiPageID wd:Q123456 .  # Assuming Q123456 is the Wikidata ID for Harry Combes

  # Find awards associated with Harry Combes as a coach or college coach
  OPTIONAL {
    ?award dbo:recipient ?combes .
    ?award dbo:occupation ""coach""@en .
  }
  
  OPTIONAL {
    ?award dbo:recipient ?combes .
    ?award dbo:occupation ""college coach""@en .
  }

  # Ensure the awards are relevant to his coaching roles
  FILTER (regex(str(?award), ""award"", ""i""))
}
```",2,4,3,2,1,3,2,20,0,0,1,0,0.0,0
273,11,train,Give me the parent of Gianni Agnelli and spouse of the child of Giovanni Agnelli.,SELECT ?result WHERE { <http://dbpedia.org/resource/Gianni_Agnelli> <http://dbpedia.org/ontology/parent> ?result . ?result <http://dbpedia.org/ontology/spouse> ?v2 . <http://dbpedia.org/resource/Giovanni_Agnelli> <http://dbpedia.org/ontology/child> ?v2 . },"```sparql
SELECT ?parentOfGianni ?spouseOfChild WHERE {
  # Find Gianni Agnelli and his parent
  ?gianni dbo:parent ?parentOfGianni .
  ?gianni rdfs:label ""Gianni Agnelli""@en .

  # Find children of Giovanni Agnelli
  OPTIONAL { 
    ?giovanni dbo:child ?child .
    ?giovanni rdfs:label ""Giovanni Agnelli""@en .
  }

  # Find spouse of one of Giovanni's children
  OPTIONAL {
    ?child dbo:spouse ?spouseOfChild .
  }
}
```",3,3,4,2,2,3,2,20,1,1,0,0.5,1.0,0.6666666666666666
365,1,train,Give me the spouse of Olha Petliura.,SELECT ?result WHERE { <http://dbpedia.org/resource/Olha_Petliura> <http://dbpedia.org/ontology/spouse> ?result . },"```sparql
SELECT ?spouse WHERE {
  ?olha rdfs:label ""Olha Petliura""@en .
  ?olha dbo:spouse ?spouse .
}
```",1,1,2,1,1,3,2,20,1,0,0,1.0,1.0,1.0
926,33,train,Give me the successor of the child of the spouse of Şermi Kadın and father of Mahmud II.,SELECT ?result WHERE { <http://dbpedia.org/resource/Mahmud_II> <http://dbpedia.org/property/father> ?result . ?v2 <http://dbpedia.org/ontology/successor> ?result . ?v0 <http://dbpedia.org/ontology/spouse> <http://dbpedia.org/resource/Şermi_Kadın> . ?v2 <http://dbpedia.org/property/father> ?v0 . },"```sparql
SELECT ?successor WHERE {
  # Identify Şermi Kadın's spouse who is also father of Mahmud II
  ?şermiKadin dbo:spouse ?abdulHamidI .
  ?abdulHamidI rdfs:label ""Abdülhamid I""@en .
  
  # Find the child of Abdul Hamid I (Mustafa IV)
  ?abdulHamidI dbo:child ?mustafaIV .
  ?mustafaIV rdfs:label ""Mustafa IV""@en .

  # Find the successor of Mustafa IV
  ?mustafaIV dbo:successor ?successor .
}
```",4,4,5,3,2,3,3,71,0,0,1,0,0.0,0
102,11,train,Give me the manager of the player in Ellie Roebuck and native of Dewsbury.,SELECT ?result WHERE { ?v2 <http://dbpedia.org/ontology/manager> ?result . ?result <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Dewsbury> . <http://dbpedia.org/resource/Ellie_Roebuck> <http://dbpedia.org/ontology/team> ?v2 . },"```sparql
SELECT ?manager WHERE {
  # Find the player associated with Ellie Roebuck
  ?player dbo:spouse ?roebuck .
  ?roebuck rdfs:label ""Ellie Roebuck""@en .

  # Ensure the player is native to Dewsbury
  ?player dbo:nativePlace ?dewsbury .
  ?dewsbury rdfs:label ""Dewsbury""@en .

  # Find the manager of this player
  ?player dbo:manager ?manager .
}
```",3,3,4,2,2,3,2,20,0,0,1,0,0.0,0
987,25,train,"Give me the entity in the region, that is a country, of Central European Time and birth place of Moamer Kasumović.",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/country> ?v0 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. <http://dbpedia.org/resource/Moamer_Kasumović> <http://dbpedia.org/ontology/birthPlace> ?result . ?v0 <http://dbpedia.org/property/timeZone> <http://dbpedia.org/resource/Central_European_Time> . },"```sparql
SELECT ?country WHERE {
  # Find countries in the Central European Time zone
  ?cetRegion dbo:timeZone dbr:Central_European_Time .
  ?cetRegion dbo:country ?country .

  # Find birthplace of Moamer Kasumović (Slobodan Milošević)
  ?milošević dbo:birthPlace ?birthPlace .
  ?milošević rdfs:label ""Moamer Kasumović""@en .
  
  # Ensure the birthplace is a country in the CET region
  FILTER (?birthPlace = ?country)
}
```",3,4,4,2,2,3,3,71,0,0,1,0,0.0,0
170,5,train,Give me the profession of John Scholey.,SELECT ?result WHERE { <http://dbpedia.org/resource/John_Scholey> <http://dbpedia.org/property/occupation> ?result . },"```sparql
SELECT ?profession WHERE {
  ?scholey rdfs:label ""John Scholey""@en .
  ?scholey dbo:occupation ?profession .
}
```",1,1,2,1,1,2,3,28,0,2,1,0.0,0.0,0
216,6,train,Give me the party of Campbell Newman and office of Tim Nicholls.,SELECT ?result WHERE { <http://dbpedia.org/resource/Tim_Nicholls> <http://dbpedia.org/property/office> ?result . <http://dbpedia.org/resource/Campbell_Newman> <http://dbpedia.org/ontology/party> ?result . },"```sparql
SELECT ?newmanParty ?nichollsOffice WHERE {
  # Find the party of Campbell Newman
  ?newman dbo:party ?newmanParty .
  ?newman rdfs:label ""Campbell Newman""@en .

  # Find the office held by Tim Nicholls
  ?nicholls dbo:officeHeld ?nichollsOffice .
  ?nicholls rdfs:label ""Tim Nicholls""@en .
}
```",2,2,3,1,2,2,3,28,0,0,1,0,0.0,0
274,5,train,"Who is the actor, that is a musical artist, of Imagine the Sound?",SELECT ?result WHERE { ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. <http://dbpedia.org/resource/Imagine_the_Sound> <http://dbpedia.org/property/starring> ?result . },"```sparql
SELECT ?actor WHERE {
  # Find entities related to Imagine the Sound
  ?sound dbo:performer ?artist .
  ?sound rdfs:label ""Imagine the Sound""@en .

  # Ensure the artist is a musical artist and an actor
  ?artist dbo:occupation ?musicalArtistOccupation .
  ?artist dbo:occupation ?actorOccupation .
  
  FILTER (?musicalArtistOccupation = dbc:Musicians OR 
          ?musicalArtistOccupation = dbc:Singers)
  FILTER (?actorOccupation = dbc:Actors)

}
```",1,2,2,1,1,2,3,28,0,0,4,0,0.0,0
495,12,train,Give me the father of the child of Princess Charlotte of Saxe-Hildburghausen and child of Frederick I of Württemberg.,SELECT ?result WHERE { ?result <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Frederick_I_of_Württemberg> . ?v0 <http://dbpedia.org/property/father> ?result . ?v0 <http://dbpedia.org/ontology/parent> <http://dbpedia.org/resource/Princess_Charlotte_of_Saxe-Hildburghausen> . },"```sparql
SELECT ?father WHERE {
  # Identify Princess Charlotte and her children
  ?charlotte dbo:spouse ?husband .
  ?charlotte rdfs:label ""Princess Charlotte of Saxe-Hildburghausen""@en .
  ?child dbo:parent ?charlotte .

  # Identify Frederick I and his children
  ?frederick dbo:spouse ?wife .
  ?frederick rdfs:label ""Frederick I, Duke of Württemberg""@en .
  ?child2 dbo:parent ?frederick .

  # Find a common child between Princess Charlotte and Frederick I
  FILTER (?child = ?child2)

  # Determine the father of this child
  ?child dbo:parent ?father .
}
```",3,3,4,2,2,3,2,20,0,0,1,0,0.0,0
433,35,train,"Give me the professional in the profession of Bob Marley and associated musical artist of the person born, that is a musical artist and an artist, as Paul Laurence Dunbar Chambers Jr..","SELECT ?result WHERE { ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. ?v2 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v2 <http://dbpedia.org/property/birthName> ""Paul Laurence Dunbar Chambers Jr.""@en . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?result <http://dbpedia.org/property/occupation> ?v1 . <http://dbpedia.org/resource/Bob_Marley> <http://dbpedia.org/property/occupation> ?v1 . }","```sparql
SELECT ?professional ?associatedArtist WHERE {
  # Identify Bob Marley's profession
  ?bobMarley dbo:occupation ?profession .
  ?bobMarley rdfs:label ""Bob Marley""@en .

  # Ensure the profession is musician
  FILTER (str(?profession) = ""musician"" || str(?profession) = ""singer"")

  # Identify Paul Laurence Dunbar Chambers Jr.'s associated person
  ?paulChambers dbo:birthPlace ?birthPlace .
  ?paulChambers rdfs:label ""Paul Laurence Dunbar Chambers Jr.""@en .

  # Ensure the associated person is a musician and artist
  OPTIONAL {
    ?associatedPerson dbo:birthPlace ?birthPlace .
    ?associatedPerson dbo:occupation ?occupation .
    FILTER (str(?occupation) = ""musician"" || str(?occupation) = ""artist"")
  }

  # Find professional in the same profession as Bob Marley
  ?professional dbo:occupation ?profession .
  FILTER (str(?profession) = ""musician"")

  # Identify associated musical artist linked to Paul Laurence Dunbar Chambers Jr.
  OPTIONAL {
    ?associatedArtist dbo:birthPlace ?birthPlace .
    ?associatedArtist dbo:occupation ?occupation .
    FILTER (str(?occupation) = ""musician"" || str(?occupation) = ""artist"")
  }
}
```",4,6,5,2,2,3,3,71,0,0,16,0,0.0,0
382,8,train,Give me the landmark at elevation of the award of Harry Combes.,SELECT ?result WHERE { <http://dbpedia.org/resource/Harry_Combes> <http://dbpedia.org/property/awards> ?v0 . ?result <http://dbpedia.org/ontology/elevation> ?v0 . },"```sparql
SELECT ?landmark WHERE {
  # Step 1: Identify Harry Combes and his award
  ?combes dbo:award ?award .
  ?combes rdfs:label ""Harry Combes""@en .

  # Step 2: Find the elevation of the award (assuming it's a geographical feature)
  OPTIONAL { 
    ?award dbo:elevation ?elevation .
  }

  # Step 3: Identify landmarks at this elevation
  ?landmark dbo:elevation ?elevation .
}
```",2,2,3,2,1,3,2,20,0,0,727,0,0.0,0
507,24,train,"Give me the director of the movie, that is a movie and a work, with Beryl Reid and professional in Film director, television director.","SELECT ?result WHERE { ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Film>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?v2 <http://dbpedia.org/ontology/director> ?result . ?result <http://dbpedia.org/property/occupation> ""Film director, television director""@en . ?v2 <http://dbpedia.org/property/starring> <http://dbpedia.org/resource/Beryl_Reid> . }","```sparql
SELECT DISTINCT ?director WHERE {
  # Find works featuring Beryl Reid
  ?work dbo:starring ?person .
  ?person rdfs:label ""Beryl Reid""@en .

  # Ensure the work is a movie
  ?work rdf:type dbp:Film .
  
  # Find directors of these movies who are professionals in film or television direction
  ?work dbo:director ?director .
  ?director dbo:occupation ?occupation .
  FILTER (
    regex(str(?occupation), ""film director"", ""i"") ||
    regex(str(?occupation), ""television director"", ""i"")
  )
}
```",3,5,4,2,2,3,3,71,0,0,1,0,0.0,0
216,14,train,Give me the office of Tim Nicholls and party of the awardee of Australian Defence Medal.,SELECT ?result WHERE { <http://dbpedia.org/resource/Tim_Nicholls> <http://dbpedia.org/property/office> ?result . ?v2 <http://dbpedia.org/ontology/party> ?result . ?v2 <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/Australian_Defence_Medal> . },"```sparql
SELECT ?office ?party WHERE {
  # Find the office held by Tim Nicholls
  ?timNicholls dbo:office ?office .
  ?timNicholls rdfs:label ""Tim Nicholls""@en .

  # Find individuals who have received the Australian Defence Medal and their party affiliation
  OPTIONAL {
    ?person dbo:award dbr:Australian_Defence_Medal .
    ?person dbo:party ?party .
  }
}
```",3,3,4,2,2,2,3,28,0,0,1,0,0.0,0
892,16,train,Give me the award of the member of E-girls.,SELECT ?result WHERE { ?v0 <http://dbpedia.org/property/awards> ?result . <http://dbpedia.org/resource/E-girls> <http://dbpedia.org/ontology/bandMember> ?v0 . },"```sparql
SELECT ?member ?award WHERE {
  # Find E-girls and its members
  ?eGirls dbo:member ?member .
  ?eGirls rdfs:label ""E-girls""@en .

  # Find awards associated with each member
  OPTIONAL { 
    ?member dbo:award ?award .
  }
}
```",2,2,3,2,1,3,3,71,0,0,2,0,0.0,0
917,27,train,"Give me the child of the father of the child, that is a royalty, of Kamehameha III.",SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v1 <http://dbpedia.org/property/father> ?v0 . <http://dbpedia.org/resource/Kamehameha_III> <http://dbpedia.org/ontology/child> ?v1 . ?result <http://dbpedia.org/property/father> ?v0 . },"```sparql
SELECT ?grandchild WHERE {
  # Step 1: Find a child of Kamehameha III who is royalty
  ?kamehamehaIII dbo:child ?royalChild .
  ?kamehamehaIII rdfs:label ""Kamehameha III""@en .

  # Ensure the child is recognized as royalty (e.g., a king or queen)
  FILTER (regex(str(?royalChild), ""King|Queen"", ""i""))

  # Step 2: Find the father of this royal child
  ?royalChild dbo:parent ?father .

  # Step 3: Identify the child of this father
  ?father dbo:child ?grandchild .
}
```",3,4,4,3,1,3,3,71,0,0,5,0,0.0,0
465,3,train,"Give me the parent of Ercole II d'Este, Duke of Ferrara.","SELECT ?result WHERE { <http://dbpedia.org/resource/Ercole_II_d'Este,_Duke_of_Ferrara> <http://dbpedia.org/ontology/parent> ?result . }","```sparql
SELECT ?parent WHERE {
  ?ercole dbo:parent ?parent .
  ?ercole rdfs:label ""Ercole II d'Este, Duke of Ferrara""@en .
}
```",1,1,2,1,1,3,3,71,2,0,0,1.0,1.0,1.0
865,7,train,Who is the father of Abul Maal Abdul Muhith?,SELECT ?result WHERE { <http://dbpedia.org/resource/Abul_Maal_Abdul_Muhith> <http://dbpedia.org/property/father> ?result . },"```sparql
SELECT ?father WHERE {
  # Find Abul Maal Abdul Muhith and his parent(s)
  ?muhith dbo:parent ?parent .
  ?muhith rdfs:label ""Abul Maal Abdul Muhith""@en .

  # Filter to find the father (male parent)
  ?parent rdf:type dbo:Male .
}
```",1,1,2,1,1,3,3,71,0,0,1,0,0.0,0
445,10,train,Give me the entity in United Kingdom and entity in England.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/United_Kingdom> . ?result <http://dbpedia.org/ontology/location> <http://dbpedia.org/resource/England> . },"```sparql
SELECT ?ukEntity ?englandEntity WHERE {
  ?ukEntity rdfs:label ""United Kingdom""@en .
  ?englandEntity rdfs:label ""England""@en .
}
```",2,2,3,1,2,3,3,71,0,4,102,0.0,0.0,0
839,6,train,Give me the member of Böhse Onkelz.,SELECT ?result WHERE { <http://dbpedia.org/resource/Böhse_Onkelz> <http://dbpedia.org/ontology/bandMember> ?result . },"```sparql
SELECT ?member WHERE {
  ?band rdfs:label ""Böhse Onkelz""@en .
  ?band dbo:member ?member .
}
```

This query selects the `?member` entities associated with the band Böhse Onkelz using the `dbo:member` property, which is commonly used to denote membership in a group or organization.",1,1,2,1,1,3,3,71,0,0,4,0,0.0,0
978,10,train,Give me the person born as the name of Chicane (musician).,SELECT ?result WHERE { ?result <http://dbpedia.org/property/birthName> ?v0 . <http://dbpedia.org/resource/Chicane_(musician)> <http://xmlns.com/foaf/0.1/givenName> ?v0 . },"```sparql
SELECT ?birthName WHERE {
  ?chicane rdfs:label ""Chicane""@en .
  ?chicane dbo:birthName ?birthName .
}
```",2,2,3,2,1,3,2,20,0,0,1,0,0.0,0
329,7,train,Give me the birthplace of Eric Cross (writer) and entity in Northern Ireland.,SELECT ?result WHERE { <http://dbpedia.org/resource/Eric_Cross_(writer)> <http://dbpedia.org/ontology/birthPlace> ?result . ?result <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Northern_Ireland> . },"```sparql
# Query to find the birthplace of Eric Cross (writer)
SELECT ?birthPlace WHERE {
  ?ericCross dbo:birthPlace ?birthPlace .
  ?ericCross rdfs:label ""Eric Cross (writer)""@en .
}

# Query to find an entity in Northern Ireland
SELECT ?entity WHERE {
  ?entity dbo:location ?location .
  ?location rdfs:label ""Northern Ireland""@en .
}
```",2,2,3,1,2,2,3,28,0,0,1,0,0.0,0
445,24,train,Give me the death place of the awardee of Royal Astronomical Society and entity in United Kingdom.,SELECT ?result WHERE { ?v2 <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/Royal_Astronomical_Society> . ?v2 <http://dbpedia.org/ontology/deathPlace> ?result . ?result <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/United_Kingdom> . },"```sparql
SELECT ?deathPlace WHERE {
  # Find individuals who have received an award from the RAS and are associated with the UK
  ?person dbo:awardReceived dbr:Royal_Astronomical_Society .
  ?person dbo:nationality dbr:United_Kingdom .

  # Retrieve the place of death for these individuals
  OPTIONAL { 
    ?person dbo:deathPlace ?deathPlace .
  }
}
```",3,3,4,2,2,3,3,71,0,0,2,0,0.0,0
170,8,train,Give me the entity in the work of International Energy Agency.,SELECT ?result WHERE { ?v1 <http://dbpedia.org/property/author> <http://dbpedia.org/resource/International_Energy_Agency> . ?result <http://dbpedia.org/ontology/country> ?v1 . },"```sparql
SELECT ?work WHERE {
  ?iea dbo:wikiPageID ""International_Energy_Agency""@en .
  ?iea dbo:work ?work .
}
```",2,2,3,2,1,2,3,28,0,0,29927,0,0.0,0
36,14,train,Give me the person born in the birth year of Deanne Bray and actor of Being Mrs Elliot.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/birthYear> ?v2 . <http://dbpedia.org/resource/Being_Mrs_Elliot> <http://dbpedia.org/ontology/starring> ?result . <http://dbpedia.org/resource/Deanne_Bray> <http://dbpedia.org/ontology/birthYear> ?v2 . },"```sparql
SELECT ?person WHERE {
  # Find Deanne Bray's birth year
  ?deanneBray dbo:birthYear ?birthYear .
  ?deanneBray rdfs:label ""Deanne Bray""@en .

  # Find the actor of Being Mrs Elliot
  ?beingMrsElliot dbo:actor ?actor .
  ?beingMrsElliot rdfs:label ""Being Mrs Elliot""@en .

  # Find a person who matches both conditions
  ?person dbo:birthYear ?birthYear ;
          dbo:actedIn ?beingMrsElliot .
}
```",3,3,4,2,2,2,3,28,0,0,1,0,0.0,0
212,0,train,Give me the birthplace of Corp Sayvee.,SELECT ?result WHERE { <http://dbpedia.org/resource/Corp_Sayvee> <http://dbpedia.org/ontology/birthPlace> ?result . },"```sparql
SELECT ?birthPlace WHERE {
  ?corpSayvee dbo:birthPlace ?birthPlace .
  ?corpSayvee rdfs:label ""Corp Sayvee""@en .
}
```",1,1,2,1,1,2,2,9,1,0,0,1.0,1.0,1.0
892,20,train,Give me the landmark at elevation of the award of Anna Ishii and entity in Italy.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/elevation> ?v1 . ?result <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Italy> . <http://dbpedia.org/resource/Anna_Ishii> <http://dbpedia.org/property/awards> ?v1 . },"```sparql
SELECT ?landmark ?italyEntity WHERE {
  # Step 1: Find Anna Ishii's Award
  ?annaIshii dbo:awardReceived ?award .
  ?annaIshii rdfs:label ""Anna Ishii""@en .

  # Step 2: Get the elevation of the award (assuming awards have an associated elevation)
  OPTIONAL { 
    ?award dbo:elevation ?elevation .
  }

  # Step 3: Find a landmark at that elevation
  ?landmark dbo:elevation ?elevation .
  
  # Step 4: Identify any entity in Italy
  ?italyEntity dbo:country dbr:Italy .
}
```",3,3,4,2,2,3,3,71,0,0,11,0,0.0,0
791,16,train,"Give me the child of the child, that is an office holder and a royalty, of Emperor Go-Shirakawa.",SELECT ?result WHERE { ?result <http://dbpedia.org/property/father> ?v1 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v1 <http://dbpedia.org/ontology/parent> <http://dbpedia.org/resource/Emperor_Go-Shirakawa> . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. },"```sparql
SELECT ?grandchild WHERE {
  # Find Emperor Go-Shirakawa's child
  ?child dbo:parent ?goShirakawa .
  ?goShirakawa rdfs:label ""Emperor Go-Shirakawa""@en .

  # From that child, find their own child (the grandchild of Emperor Go-Shirakawa)
  ?grandchild dbo:parent ?child .

  # Ensure the grandchild is an office holder
  ?grandchild dbo:officeHolder ?office .
  
  # Ensure the grandchild is royalty
  ?grandchild rdf:type dbo:RoyalFamilyMember .
}
```",2,4,3,2,1,3,3,71,0,0,4,0,0.0,0
465,22,train,"Give me the successor of the child, that is a royalty, of Anne of Brittany and successor of Ercole II d'Este, Duke of Ferrara.","SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. <http://dbpedia.org/resource/Ercole_II_d'Este,_Duke_of_Ferrara> <http://dbpedia.org/ontology/successor> ?result . ?v1 <http://dbpedia.org/ontology/successor> ?result . <http://dbpedia.org/resource/Anne_of_Brittany> <http://dbpedia.org/ontology/child> ?v1 . }","```sparql
SELECT ?successor WHERE {
  # Find a child of Anne of Brittany who is royalty
  ?anneChild dbo:parent dbc:Anne_of_Brittany .
  ?anneChild rdf:type dbo:Monarch .

  # Identify Ercole II d'Este's successor
  ?ercoleSuccessor dbo:predecessor dbc:Ercole_II_d%27Este,_Duke_of_Ferrara .
  
  # Find the successor of the royal child
  ?successor dbo:predecessor ?anneChild .

  FILTER (?anneChild != ?ercoleSuccessor) # Ensure we are not conflating roles
}
```",3,4,4,2,2,3,3,71,0,0,1,0,0.0,0
791,31,train,"Give me the spouse of the spouse, that is a royalty, of the reference to Emperor Takakura and predecessor of Emperor Antoku.","SELECT ?result WHERE { ?v0 <http://dbpedia.org/ontology/spouse> ?v1 . ?result <http://dbpedia.org/ontology/spouse> ?v0 . ?v1 <http://xmlns.com/foaf/0.1/name> ""Emperor Takakura""@en . ?result <http://dbpedia.org/ontology/successor> <http://dbpedia.org/resource/Emperor_Antoku> . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. }","```sparql
SELECT ?spouseOfSpouse WHERE {
  # Find Emperor Takakura and his royal spouse
  ?takakura dbo:spouse ?royalSpouse .
  ?takakura rdfs:label ""Emperor Takakura""@en .
  
  # Ensure the spouse is royalty (e.g., Imperial Princess Shushi)
  FILTER (regex(str(?royalSpouse), ""Imperial Princess Shushi"", ""i""))

  # Find Emperor Antoku and his predecessor
  ?antoku dbo:predecessor ?predecessor .
  ?antoku rdfs:label ""Emperor Antoku""@en .

  # Ensure the royal spouse is related to the predecessor of Emperor Antoku
  OPTIONAL {
    ?royalSpouse dbo:parent ?predecessor .
  }

  # Find the spouse of the royal spouse (i.e., their child or descendant)
  ?royalSpouse dbo:spouse ?spouseOfSpouse .
}
```",4,5,5,3,2,3,3,71,0,0,1,0,0.0,0
236,12,train,Give me the party member of Federalist Party and party member of the administration of James Madison.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/party> <http://dbpedia.org/resource/Federalist_Party> . ?v0 <http://dbpedia.org/property/leader> <http://dbpedia.org/resource/James_Madison> . ?result <http://dbpedia.org/ontology/party> ?v0 . },"```sparql
SELECT ?federalistMember ?madisonAdmin WHERE {
  # Find members of the Federalist Party
  ?federalistMember dbo:party ?federalistParty .
  ?federalistParty rdfs:label ""Federalist Party""@en .

  # Find members of James Madison's administration (Democratic-Republican Party)
  OPTIONAL {
    ?madisonAdmin dbo:officeHolderOf ?administration .
    ?administration dbo:headOfState ?jamesMadison .
    ?jamesMadison rdfs:label ""James Madison""@en .
    ?madisonParty dbo:party ?democraticRepublicanParty .
    ?democraticRepublicanParty rdfs:label ""Democratic-Republican Party""@en .
  }
}
```",3,3,4,2,2,3,2,20,19,250,0,0.07063197026022305,1.0,0.13194444444444448
839,17,train,"Give me the band, that is a musical artist, of the professional in Musician.","SELECT ?result WHERE { ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?v1 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v1 <http://dbpedia.org/property/occupation> ""Musician""@en . }","```sparql
SELECT DISTINCT ?band WHERE {
  # Find individuals whose profession includes Musician
  ?musician dbo:occupation dbc:Musicians .
  
  # Identify bands associated with these musicians
  ?musician dbo:member ?band .
  
  # Ensure the band is recognized as a musical artist
  ?band rdf:type dbo:Band .
}
```",2,3,3,2,1,3,3,71,0,0,3643,0,0.0,0
892,37,train,Give me the landmark at elevation of the award of the member of E-girls and entity in Province of Reggio Emilia.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/elevation> ?v2 . ?v1 <http://dbpedia.org/property/awards> ?v2 . <http://dbpedia.org/resource/E-girls> <http://dbpedia.org/ontology/bandMember> ?v1 . ?result <http://dbpedia.org/ontology/province> <http://dbpedia.org/resource/Province_of_Reggio_Emilia> . },"```sparql
SELECT ?landmark WHERE {
  # Find an award received by a member of E-girls
  ?member dbo:memberOf dbr:E-girls .
  ?member dbo:awardReceived ?award .

  # Get the landmark associated with this award and its elevation
  ?award dbo:associatedLandmark ?landmark .
  ?landmark dbo:elevation ?elevation .

  # Find landmarks in Province of Reggio Emilia at that elevation
  ?reggioEmiliaLandmark dbo:elevation ?elevation ;
                       dbo:locatedIn dbr:Province_of_Reggio_Emilia .
  
  FILTER (?landmark = ?reggioEmiliaLandmark)
}
```",4,4,5,3,2,3,3,71,0,0,1,0,0.0,0
329,12,train,Give me the entity in United Kingdom and birthplace of Eric Cross (writer) and entity in Northern Ireland.,SELECT ?result WHERE { <http://dbpedia.org/resource/Eric_Cross_(writer)> <http://dbpedia.org/ontology/birthPlace> ?result . ?result <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Northern_Ireland> . ?result <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/United_Kingdom> . },"```sparql
SELECT ?birthPlaceUK ?entityNI WHERE {
  # Find Eric Cross and his birthplace
  ?ericCross dbo:birthPlace ?birthPlace .
  ?ericCross rdfs:label ""Eric Cross (writer)""@en .

  # Identify an entity in the United Kingdom related to the birthplace
  OPTIONAL {
    ?birthPlace dbp:country dbc:United_Kingdom .
    ?birthPlace dbp:name ?birthPlaceUK .
  }

  # Find any entity located in Northern Ireland
  OPTIONAL {
    ?entityNI dbo:locationCountry dbc:Northern_Ireland .
    ?entityNI rdfs:label ?nameNI .
  }
}
```",3,3,4,1,3,2,3,28,0,0,1,0,0.0,0
170,7,train,Give me the entity in Russia and domain of Mayor.,"SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Russia> . ?result <http://dbpedia.org/ontology/leaderTitle> ""Mayor""@en . }","```sparql
SELECT ?mayorEntity ?domain WHERE {
  ?mayor rdf:type dbo:Mayor .
  ?mayor dbo:country dbr:Russia .
  ?mayor rdfs:label ?mayorLabel .
  
  OPTIONAL { 
    ?mayor rdf:type ?domain .
  }
  
  # Retrieve the entity (city) associated with each mayor
  ?mayor dbo:officeHolder ?person .
  ?person dbo:positionTitle ?title .
  FILTER regex(?title, ""Mayor"", ""i"")
  
  # Return the city/entity and domain/type of the mayor
  ?mayor rdfs:label ?mayorEntity .
}
```",2,2,3,1,2,2,3,28,0,0,99,0,0.0,0
826,19,train,"Give me the successor of Louis II, Grand Duke of Hesse and spouse of the child of Johann Heinrich Appel.","SELECT ?result WHERE { ?v0 <http://dbpedia.org/ontology/spouse> ?result . <http://dbpedia.org/resource/Louis_II,_Grand_Duke_of_Hesse> <http://dbpedia.org/ontology/successor> ?result . ?v0 <http://dbpedia.org/property/father> ""Johann Heinrich Appel""@en . }","```sparql
SELECT ?successor ?spouse WHERE {
  # Find Louis II, Grand Duke of Hesse and his successor
  ?louis2 dbo:successor ?successor .
  ?louis2 rdfs:label ""Louis II, Grand Duke of Hesse""@en .

  # Find a child of Johann Heinrich Appel
  OPTIONAL {
    ?appel dbo:child ?child .
    ?appel rdfs:label ""Johann Heinrich Appel""@en .
  }

  # Find the spouse of the identified child
  OPTIONAL {
    ?child dbo:spouse ?spouse .
  }
}
```",3,3,4,2,2,3,3,71,1,59926,0,1.668696914579405e-05,1.0,3.3373381391002534e-05
826,36,train,"Give me the spouse of Anna Magdalena Appel and predecessor of the parent of the child of Louis IV, Grand Duke of Hesse.","SELECT ?result WHERE { ?v0 <http://dbpedia.org/ontology/parent> ?v1 . ?v0 <http://dbpedia.org/ontology/parent> <http://dbpedia.org/resource/Louis_IV,_Grand_Duke_of_Hesse> . ?result <http://dbpedia.org/ontology/successor> ?v1 . <http://dbpedia.org/resource/Anna_Magdalena_Appel> <http://dbpedia.org/ontology/spouse> ?result . }","```sparql
SELECT ?spouse ?predecessor WHERE {
  # Find spouse of Anna Magdalena Bach
  ?annaMagdalena dbo:spouse ?spouse .
  ?annaMagdalena rdfs:label ""Anna Magdalena Bach""@en .

  # Identify a child of Louis IV, Grand Duke of Hesse and their parent
  ?louisIV dbo:child ?child .
  ?louisIV rdfs:label ""Louis IV, Grand Duke of Hesse""@en .
  
  OPTIONAL {
    ?parent dbo:parent ?child .
    FILTER (?parent != ?louisIV) # Ensure it's not Louis IV himself
  }

  # Find predecessor of the parent identified above
  OPTIONAL {
    ?predecessor dbo:succeededBy ?parent .
  }
}
```",4,4,5,3,2,3,3,71,0,1,1,0.0,0.0,0
329,1,train,Give me the entity in United Kingdom.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/United_Kingdom> . },"```sparql
SELECT ?person ?label WHERE {
  ?person dbo:nationality dbr:United_Kingdom .
  ?person rdfs:label ?label .
  FILTER (lang(?label) = ""en"")
}
LIMIT 10
```",1,1,2,1,1,2,3,28,1,19,42998,0.05,2.3256354798948812e-05,4.649108533438713e-05
917,35,train,"Give me the child of the father of Kamehameha IV and parent of the child, that is a royalty, of Kamehameha IV.",SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v1 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Kamehameha_IV> . ?result <http://dbpedia.org/property/father> ?v0 . ?result <http://dbpedia.org/ontology/child> ?v1 . <http://dbpedia.org/resource/Kamehameha_IV> <http://dbpedia.org/property/father> ?v0 . },"```sparql
SELECT ?parent WHERE {
  # Find the father of Kamehameha IV
  ?kamehamehaIV dbo:parent ?father .
  ?kamehamehaIV rdfs:label ""Kamehameha IV""@en .

  # Identify Kamehameha IV as a child of his father
  ?father dbo:child ?kamehamehaIV .

  # Find the parent of Kamehameha IV who is royalty
  OPTIONAL {
    ?kamehamehaIV dbo:parent ?parent .
    FILTER (regex(str(?parent), ""royalty"", ""i""))
  }
}
```",4,5,5,2,2,3,3,71,0,0,1,0,0.0,0
826,12,train,"Give me the predecessor of Louis IV, Grand Duke of Hesse and successor of Louis II, Grand Duke of Hesse.","SELECT ?result WHERE { <http://dbpedia.org/resource/Louis_II,_Grand_Duke_of_Hesse> <http://dbpedia.org/ontology/successor> ?result . ?result <http://dbpedia.org/ontology/successor> <http://dbpedia.org/resource/Louis_IV,_Grand_Duke_of_Hesse> . }","```sparql
SELECT ?predecessor WHERE {
  # Find the predecessor of Louis IV, Grand Duke of Hesse
  ?louisIV dbo:successor ?predecessor .
  ?louisIV rdfs:label ""Louis IV, Grand Duke of Hesse""@en .

  # Find the successor of Louis II, Grand Duke of Hesse
  OPTIONAL {
    ?louisII dbo:predecessor ?predecessor .
    ?louisII rdfs:label ""Louis II, Grand Duke of Hesse""@en .
  }
}
```",2,2,3,1,2,3,3,71,0,1,1,0.0,0.0,0
715,13,train,Give me the commander in the force of Francisco Largo Caballero.,SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/commander> ?result . ?v1 <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Francisco_Largo_Caballero> . },"```sparql
SELECT ?commander WHERE {
  ?person rdfs:label ""Francisco Largo Caballero""@en .
  OPTIONAL { 
    ?person dbo:commander ?commander .
  }
}
```",2,2,3,2,1,3,3,71,0,0,28,0,0.0,0
382,14,train,"Give me the landmark at elevation of the award of the reference, that is a college coach and a coach, to Harry Combes.","SELECT ?result WHERE { ?v2 <http://dbpedia.org/property/awards> ?v0 . ?result <http://dbpedia.org/ontology/elevation> ?v0 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Coach>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/CollegeCoach>. ?v2 <http://xmlns.com/foaf/0.1/name> ""Harry Combes""@en . }","```sparql
SELECT ?landmark WHERE {
  # Find Harry Combes and his roles
  ?combes dbo:occupation ""Coach""@en .
  ?combes dbo:almaMater ?college .
  
  # Ensure he was a college coach
  ?combes dbo:positionHeld ?position .
  FILTER regex(str(?position), ""College Coach"", ""i"")

  # Find awards and references associated with him
  OPTIONAL {
    ?award dbo:recipient ?combes .
    ?reference dbo:reference ?award .
    ?elevation dbo:elevation ?value .

    # Find landmark at the elevation of the award's reference
    ?landmark dbo:elevation ?value .
  }
}
```",3,5,4,3,1,3,2,20,0,0,727,0,0.0,0
865,16,train,"Who is the child, that is a politician, of the spouse of Syeda Shahar Banu?",SELECT ?result WHERE { <http://dbpedia.org/resource/Syeda_Shahar_Banu> <http://dbpedia.org/ontology/spouse> ?v0 . ?result <http://dbpedia.org/property/father> ?v0 . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. },"```sparql
SELECT ?politicianChild WHERE {
  # Identify Syeda Shahar Banu and her spouse
  ?shaharBanu rdfs:label ""Syeda Shahar Banu""@en .
  ?shaharBanu dbo:spouse ?spouse .

  # Find the children of the spouse who are politicians
  ?spouse dbo:child ?politicianChild .
  ?politicianChild dbo:occupation ?occupation .
  FILTER (regex(str(?occupation), ""Politician"", ""i""))
}
```",2,3,3,2,1,3,3,71,0,0,3,0,0.0,0
170,9,train,Give me the domain of Mayor and birth place of Era Ziganshina.,"SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/leaderTitle> ""Mayor""@en . <http://dbpedia.org/resource/Era_Ziganshina> <http://dbpedia.org/ontology/birthPlace> ?result . }","```sparql
SELECT ?occupation ?birthPlace WHERE {
  ?era rdfs:label ""Era Ziganshina""@en .
  OPTIONAL { ?era dbo:occupation ?occupation . }
  OPTIONAL { ?era dbo:birthPlace ?birthPlace . }
}
```",2,2,3,1,2,2,3,28,1,3,0,0.25,1.0,0.4
606,11,train,"Give me the birthplace of Charles I. Barber and figure known as the nickname of DeKalb, Illinois.","SELECT ?result WHERE { <http://dbpedia.org/resource/Charles_I._Barber> <http://dbpedia.org/ontology/birthPlace> ?result . ?result <http://dbpedia.org/property/nickname> ?v2 . <http://dbpedia.org/resource/DeKalb,_Illinois> <http://dbpedia.org/property/nickname> ?v2 . }","```sparql
SELECT ?birthplace ?nickname WHERE {
  # Find birthplace of Charles I. Barber
  ?barber dbo:birthPlace ?birthplace .
  ?barber rdfs:label ""Charles I. Barber""@en .

  # Find nickname of DeKalb, Illinois
  ?dekalb dbo:nickname ?nickname .
  ?dekalb rdfs:label ""DeKalb, Illinois""@en .
}
```",3,3,4,2,2,3,2,20,0,0,1,0,0.0,0
715,19,train,"Give me the commander in the force, that is a military conflict, of Abd el-Krim and commander in Spanish Civil War.",SELECT ?result WHERE { ?v0 <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Abd_el-Krim> . ?v0 <http://dbpedia.org/ontology/commander> ?result . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. <http://dbpedia.org/resource/Spanish_Civil_War> <http://dbpedia.org/ontology/commander> ?result . },"```sparql
SELECT ?abdElKrimCommander ?spanishCivilWarCommander WHERE {
  # Find Abd el-Krim's role in the Rif War
  ?abdElKrim dbo:commanderOfMilitaryConflict ?rifWar .
  ?abdElKrim rdfs:label ""Abd el-Krim""@en .
  
  # Identify the military force commanded by Abd el-Krim
  ?rifWar dbo:militaryForce ?abdElKrimCommander .

  # Find a commander in the Spanish Civil War
  ?civilWar dbo:commanderOfMilitaryConflict ?spanishCivilWarCommander .
  ?civilWar rdfs:label ""Spanish Civil War""@en .
}
```",3,4,4,2,2,3,3,71,0,0,4,0,0.0,0
102,6,train,Give me the native of Dewsbury and manager of Sheffield United W.F.C..,SELECT ?result WHERE { <http://dbpedia.org/resource/Sheffield_United_W.F.C.> <http://dbpedia.org/ontology/manager> ?result . ?result <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Dewsbury> . },"```sparql
SELECT ?person WHERE {
  # Find a person who is native of Dewsbury
  ?person dbo:birthPlace db:Dewsbury .
  
  # Check if the same person has been or is manager of Sheffield United W.F.C.
  OPTIONAL { 
    ?sheffieldUnitedWFC dbo:manager ?person .
    ?sheffieldUnitedWFC rdfs:label ""Sheffield United Women's Football Club""@en .
  }
}
```",2,2,3,1,2,3,2,20,0,0,1,0,0.0,0
935,8,train,Give me the headquarter of the office of Sanaullah Khan Zehri.,SELECT ?result WHERE { ?v0 <http://dbpedia.org/ontology/location> ?result . <http://dbpedia.org/resource/Sanaullah_Khan_Zehri> <http://dbpedia.org/property/office> ?v0 . },"```sparql
SELECT ?officeLocation WHERE {
  ?person foaf:name ""Sanaullah Khan Zehri""@en .
  ?person dbo:positionTitle ?title .
  FILTER (regex(str(?title), ""Chief Minister of Balochistan"", ""i""))
  
  ?office dbo:head ?person ;
          dbo:location ?officeLocation .
}
```",2,2,3,2,1,3,2,20,0,0,1,0,0.0,0
281,13,train,"Give me the awardee of Medal bar and commander in the war, that is an event and a military conflict, of Roy Boehm.",SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?result <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/Medal_bar> . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. <http://dbpedia.org/resource/Roy_Boehm> <http://dbpedia.org/ontology/battle> ?v1 . ?v1 <http://dbpedia.org/ontology/commander> ?result . },"```sparql
SELECT ?awardee ?war WHERE {
  # Identify Roy Boehm
  ?boehm dbo:givenName ""Roy""@en .
  ?boehm dbo:familyName ""Boehm""@en .

  # Find the Medal Bar award and its awardee
  OPTIONAL {
    ?medalBar dbo:recipient ?boehm ;
              dbo:awardedBy ?awardee .
  }

  # Identify the war where Roy Boehm was a commander
  OPTIONAL {
    ?war dbo:commander ?boehm ;
         rdf:type dbo:MilitaryConflict ;
         dbo:wikiPageRedirects ?event .
    FILTER (regex(str(?event), ""Event"", ""i""))
  }
}
```",3,5,4,2,2,2,3,28,0,0,3,0,0.0,0
839,23,train,"Give me the band of the person born, that is a musical artist, as the persona of Kevin Russell (musician).",SELECT ?result WHERE { ?v0 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v0 <http://dbpedia.org/property/birthName> ?v2 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. <http://dbpedia.org/resource/Kevin_Russell_(musician)> <http://xmlns.com/foaf/0.1/givenName> ?v2 . },"```sparql
SELECT ?band WHERE {
  ?person rdfs:label ""Kevin Russell (musician)""@en .
  ?person dbo:birthPlace ?place .
  OPTIONAL { 
    ?person dbo:bandMemberOf ?band .
  }
}
```",3,4,4,3,1,3,3,71,0,0,1,0,0.0,0
976,36,train,Give me the office of the person born as the birth name of Naci Bostancı and office of Mustafa Şentop.,SELECT ?result WHERE { <http://dbpedia.org/resource/Naci_Bostancı> <http://dbpedia.org/property/birthName> ?v3 . <http://dbpedia.org/resource/Mustafa_Şentop> <http://dbpedia.org/property/office> ?result . ?v0 <http://dbpedia.org/property/office> ?result . ?v0 <http://dbpedia.org/property/birthName> ?v3 . },"```sparql
SELECT ?naciBirthName ?naciOffice ?mustafaOffice WHERE {
  # Find Naci Bostancı's birth name and current office
  ?naci dbo:birthName ?naciBirthName .
  ?naci rdfs:label ""Naci Bostancı""@en .
  
  OPTIONAL { 
    ?naci dbo:office ?naciOffice .
  }
  
  # Find Mustafa Şentop's current office
  ?mustafa dbo:office ?mustafaOffice .
  ?mustafa rdfs:label ""Mustafa Şentop""@en .
}
```",4,4,5,3,2,3,3,71,0,0,1,0,0.0,0
773,20,train,Give me the spouse of Louis the German and parent of the successor of Charles the Bald.,SELECT ?result WHERE { <http://dbpedia.org/resource/Louis_the_German> <http://dbpedia.org/ontology/spouse> ?result . <http://dbpedia.org/resource/Charles_the_Bald> <http://dbpedia.org/ontology/successor> ?v2 . ?result <http://dbpedia.org/ontology/child> ?v2 . },"```sparql
SELECT ?spouseOfLouisTheGerman ?parentOfSuccessor WHERE {
  # Find Louis the German and his spouse
  ?louisTheGerman dbo:spouse ?spouseOfLouisTheGerman .
  ?louisTheGerman rdfs:label ""Louis the German""@en .

  # Find Charles the Bald's children (potential successors)
  ?charlesTheBald dbo:child ?successor .
  ?charlesTheBald rdfs:label ""Charles the Bald""@en .

  # Assuming direct succession, find the parent of the successor
  ?successor dbo:parent ?parentOfSuccessor .
}
```",3,3,4,2,2,3,3,71,1,2,0,0.3333333333333333,1.0,0.5
874,14,train,"Give me the band of the band member of the band, that is an organisation, of Mark Read (singer).",SELECT ?result WHERE { ?v0 <http://dbpedia.org/ontology/associatedMusicalArtist> ?v2 . ?v2 <http://dbpedia.org/ontology/bandMember> <http://dbpedia.org/resource/Mark_Read_(singer)> . ?result <http://dbpedia.org/ontology/bandMember> ?v0 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. },"```sparql
SELECT ?bandOfMember WHERE {
  # Identify Mark Read and his association with a band
  ?markRead foaf:name ""Mark Read""@en .
  
  # Find the band that Mark Read is a member of, ensuring it's an organization
  ?markRead dbo:member ?band .
  ?band rdf:type dbo:Band .

  # Find another member of this band
  ?band dbo:member ?otherMember .

  # Check if this other member belongs to any other band
  OPTIONAL {
    ?otherMember dbo:member ?bandOfMember .
    ?bandOfMember rdf:type dbo:Band .
  }
}
```",3,4,4,3,1,3,2,20,0,0,5,0,0.0,0
465,34,train,"Give me the successor of Renée of France and successor of the child of the parent of Ercole II d'Este, Duke of Ferrara.","SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/successor> ?result . <http://dbpedia.org/resource/Ercole_II_d'Este,_Duke_of_Ferrara> <http://dbpedia.org/ontology/parent> ?v2 . ?v1 <http://dbpedia.org/property/father> ?v2 . <http://dbpedia.org/resource/Renée_of_France> <http://dbpedia.org/ontology/successor> ?result . }","```sparql
SELECT DISTINCT ?successorRenée ?successorChild WHERE {
  # Find the successor of Renée of France
  ?renée dbo:successor ?successorRenée .
  ?renée rdfs:label ""Renée of France""@en .

  # Identify Ercole II d'Este and his parent
  ?ercole2 dbo:parent ?parentErcole2 .
  ?ercole2 rdfs:label ""Ercole II d'Este, Duke of Ferrara""@en .

  # Find the children of this parent
  ?child dbo:parent ?parentErcole2 .

  # Determine a successor for one of these children
  OPTIONAL {
    ?child dbo:successor ?successorChild .
  }
}
```",4,4,5,3,2,3,3,71,1,0,0,1.0,1.0,1.0
917,31,train,"Give me the child of Kekūanāoʻa and parent of the child, that is a royalty, of the mayor of Hawaiian Kingdom.",SELECT ?result WHERE { ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?result <http://dbpedia.org/ontology/parent> <http://dbpedia.org/resource/Kekūanāoʻa> . ?result <http://dbpedia.org/ontology/child> ?v0 . <http://dbpedia.org/resource/Hawaiian_Kingdom> <http://dbpedia.org/property/leader> ?v2 . ?v0 <http://dbpedia.org/property/father> ?v2 . },"```sparql
SELECT ?child ?royalParent WHERE {
  # Find the child of Kekūanāoʻa
  ?kekuanaoa dbo:parent ?child .
  ?kekuanaoa rdfs:label ""Kekūanāoʻa""@en .

  # Find the parent of this child who is royalty
  OPTIONAL {
    ?child dbo:parent ?royalParent .
    FILTER (regex(str(?royalParent), ""Royalty"", ""i""))
  }

  # Optionally, link to the mayor of the Hawaiian Kingdom if needed
  OPTIONAL {
    ?mayor rdfs:label ""Mayor of the Hawaiian Kingdom""@en .
    ?mayor dbo:child ?child .
  }
}
```",4,5,5,3,2,3,3,71,0,0,2,0,0.0,0
978,4,train,Give me the name of Chicane (musician).,SELECT ?result WHERE { <http://dbpedia.org/resource/Chicane_(musician)> <http://xmlns.com/foaf/0.1/givenName> ?result . },"```sparql
SELECT ?name WHERE {
  ?chicane rdfs:label ""Chicane""@en .
  OPTIONAL { ?chicane foaf:name ?name . }
  OPTIONAL { ?chicane dbo:birthName ?name . }
}
```",1,1,2,1,1,3,2,20,0,0,1,0,0.0,0
212,1,train,Give me the birthplace of KODA (singer).,SELECT ?result WHERE { <http://dbpedia.org/resource/KODA_(singer)> <http://dbpedia.org/ontology/birthPlace> ?result . },"```sparql
SELECT ?birthPlace WHERE {
  ?kodaKumi rdfs:label ""Koda Kumi""@en .
  ?kodaKumi dbo:birthPlace ?birthPlace .
}
```",1,1,2,1,1,2,2,9,0,1,2,0.0,0.0,0
791,36,train,"Give me the spouse of Taira no Tokuko and father of the child, that is a royalty, of the father, that is a royalty and an office holder, of Emperor Antoku.",SELECT ?result WHERE { ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v1 <http://dbpedia.org/property/father> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v1 <http://dbpedia.org/property/father> ?v0 . <http://dbpedia.org/resource/Emperor_Antoku> <http://dbpedia.org/property/father> ?v0 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?result <http://dbpedia.org/ontology/spouse> <http://dbpedia.org/resource/Taira_no_Tokuko> . },"```sparql
SELECT ?spouse WHERE {
  # Step 1: Find Taira no Tokuko's spouse
  ?tokuko dbo:spouse ?spouse .
  ?tokuko rdfs:label ""Taira no Tokuko""@en .

  # Step 2: Identify Emperor Antoku and his father who is royalty and an office holder
  ?antoku dbo:parent ?father .
  ?antoku rdfs:label ""Emperor Antoku""@en .
  
  OPTIONAL {
    ?father rdf:type dbo:Monarch .
    ?father dbo:officeHolder ?office .
  }

  # Step 3: Find a child of this father who is royalty
  ?child dbo:parent ?father .
  ?child rdf:type dbo:Monarch .

  # Check if the spouse of Taira no Tokuko is connected to this child
  OPTIONAL {
    ?spouse dbo:parent ?child .
  }
}
```",4,7,5,3,2,3,3,71,0,0,1,0,0.0,0
579,10,train,"Give me the birth name of the native, that is an office holder, of Edinburgh.",SELECT ?result WHERE { ?v0 <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Edinburgh> . ?v0 <http://dbpedia.org/property/birthName> ?result . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. },"```sparql
SELECT ?birthName WHERE {
  # Find individuals native to Edinburgh
  ?person dbo:birthPlace dbr:Edinburgh .
  
  # Ensure they are office holders (using a broad property for demonstration)
  ?person dbo:officeHolderOf ?office .

  # Retrieve their birth name
  ?person foaf:name ?birthName .
}
```",2,3,3,2,1,3,2,20,0,0,18,0,0.0,0
933,30,train,"Give me the band of the band, that is a group and a band and an organisation, of Alan Warner (musician) and band of Mike Elliott (saxophonist) and reference to Alan Warner.","SELECT ?result WHERE { ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Band>. <http://dbpedia.org/resource/Mike_Elliott_(saxophonist)> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. <http://dbpedia.org/resource/Alan_Warner_(musician)> <http://dbpedia.org/ontology/associatedMusicalArtist> ?v0 . ?v0 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?result <http://xmlns.com/foaf/0.1/name> ""Alan Warner""@en . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Group>. }","```sparql
SELECT ?bandAlanWarner ?bandMikeElliott WHERE {
  # Find band of Alan Warner that is a group and an organization
  ?alanWarner dbo:member ?bandAlanWarner .
  ?bandAlanWarner rdf:type dbp:MusicalGroup ;
                  dbo:organizationType dbp:Band .
  ?alanWarner rdfs:label ""Alan Warner (musician)""@en .

  # Find band of Mike Elliott
  ?mikeElliott dbo:member ?bandMikeElliott .
  ?bandMikeElliott rdf:type dbp:MusicalGroup ;
                   dbo:organizationType dbp:Band .
  ?mikeElliott rdfs:label ""Mike Elliott (saxophonist)""@en .

  # Optional: Find common band or reference to Alan Warner
  OPTIONAL {
    ?bandAlanWarner rdfs:seeAlso ?referenceToAlanWarner .
    FILTER regex(str(?referenceToAlanWarner), ""Alan Warner"", ""i"")
  }
}
```",4,7,5,2,3,3,3,71,0,0,1,0,0.0,0
826,4,train,Who is the child of Johann Heinrich Appel?,"SELECT ?result WHERE { ?result <http://dbpedia.org/property/father> ""Johann Heinrich Appel""@en . }","```sparql
SELECT ?child WHERE {
  ?appel dbo:parent ?child .
  ?appel rdfs:label ""Johann Heinrich Appel""@en .
}
```",1,1,2,1,1,3,3,71,0,0,1,0,0.0,0
158,2,train,Who is the reference to Adelbert Cronkhite?,"SELECT ?result WHERE { ?result <http://xmlns.com/foaf/0.1/name> ""Adelbert Cronkhite""@en . }","```sparql
SELECT ?person ?abstract ?birthDate ?deathDate WHERE {
  ?person rdfs:label ""Adelbert Cronkhite""@en .
  OPTIONAL { ?person dbo:abstract ?abstract . }
  OPTIONAL { ?person dbo:birthDate ?birthDate . }
  OPTIONAL { ?person dbo:deathDate ?deathDate . }
}
```",1,1,2,1,1,3,2,20,1,1,0,0.5,1.0,0.6666666666666666
93,1,train,Give me the death place of John Weir Troy.,SELECT ?result WHERE { <http://dbpedia.org/resource/John_Weir_Troy> <http://dbpedia.org/ontology/deathPlace> ?result . },"```sparql
SELECT ?deathPlace WHERE {
  ?person rdfs:label ""John Weir Troy""@en .
  ?person dbo:deathPlace ?deathPlace .
}
```",1,1,2,1,1,3,2,20,3,0,0,1.0,1.0,1.0
216,18,train,Give me the player in Mario Ivanković and team of Ognjen Vukojević and player in Igor Bišćan.,SELECT ?result WHERE { <http://dbpedia.org/resource/Mario_Ivanković> <http://dbpedia.org/ontology/team> ?result . ?result <http://dbpedia.org/ontology/coach> <http://dbpedia.org/resource/Ognjen_Vukojević> . <http://dbpedia.org/resource/Igor_Bišćan> <http://dbpedia.org/ontology/team> ?result . },"```sparql
SELECT ?marioTeam ?ognjenTeam ?igorPlayer WHERE {
  # Find team of Mario Ivanković
  ?mario dbo:team ?marioTeam .
  ?mario rdfs:label ""Mario Ivanković""@en .

  # Find team of Ognjen Vukojević
  ?ognjen dbo:team ?ognjenTeam .
  ?ognjen rdfs:label ""Ognjen Vukojević""@en .

  # Find player in the same team as Igor Bišćan
  ?igor dbo:team ?igorTeam .
  ?igor rdfs:label ""Igor Bišćan""@en .
  
  ?player dbo:team ?igorTeam .
  FILTER (?player != ?igor)
}
```",3,3,4,1,3,3,3,71,1,19,0,0.05,1.0,0.09523809523809523
865,19,train,"Give me the father of AK Abdul Momen and native of the residence, that is a country, of Ram Jaipal Singh Yadav.",SELECT ?result WHERE { <http://dbpedia.org/resource/Ram_Jaipal_Singh_Yadav> <http://dbpedia.org/property/residence> ?v1 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. <http://dbpedia.org/resource/AK_Abdul_Momen> <http://dbpedia.org/property/father> ?result . ?result <http://dbpedia.org/ontology/birthPlace> ?v1 . },"```sparql
SELECT ?father ?nativeCountry WHERE {
  # Find AK Abdul Momen and his father
  ?momen dbo:parent ?father .
  ?momen rdfs:label ""AK Abdul Momen""@en .

  # Find Ram Jaipal Singh Yadav's residence and its native country
  OPTIONAL {
    ?yadav dbo:residence ?residence .
    ?yadav rdfs:label ""Ram Jaipal Singh Yadav""@en .
    
    # Ensure the residence is a country
    ?residence rdf:type dbo:Country .

    # Find the native place of the residence (country)
    ?residence dbo:nativePlace ?nativeCountry .
  }
}
```",3,4,4,2,2,3,3,71,0,0,1,0,0.0,0
933,28,train,Give me the band of the band of Alan Warner (musician) and band of The Ramong Sound and reference to Alan Warner.,"SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . <http://dbpedia.org/resource/The_Ramong_Sound> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . <http://dbpedia.org/resource/Alan_Warner_(musician)> <http://dbpedia.org/ontology/associatedMusicalArtist> ?v1 . ?result <http://xmlns.com/foaf/0.1/name> ""Alan Warner""@en . }","```sparql
SELECT ?alanWarnerBand ?ramonesBand ?connection ?referenceToAlan WHERE {
  # Find the band associated with Alan Warner
  ?alanWarner dbo:band ?alanWarnerBand .
  ?alanWarner rdfs:label ""Alan Warner (musician)""@en .

  # Find the band associated with The Ramones
  ?ramones dbo:band ?ramonesBand .
  ?ramones rdfs:label ""The Ramones""@en .

  # Check for any connection between the two bands
  OPTIONAL {
    ?alanWarnerBand dbo:relatedBand ?connection .
    ?connection dbo:relatedBand ?ramonesBand .
  }

  # Reference to Alan Warner
  BIND(?alanWarner AS ?referenceToAlan)
}
```",4,4,5,2,3,3,3,71,0,0,1,0,0.0,0
166,12,train,"Give me the resting place of Gonzalo Queipo de Llano and entity in the territory administered, that is a country, from Madrid.",SELECT ?result WHERE { ?v0 <http://dbpedia.org/ontology/capital> <http://dbpedia.org/resource/Madrid> . ?result <http://dbpedia.org/ontology/country> ?v0 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. <http://dbpedia.org/resource/Gonzalo_Queipo_de_Llano> <http://dbpedia.org/ontology/restingPlace> ?result . },"```sparql
SELECT ?restingPlace ?country WHERE {
  # Find the resting place of Gonzalo Queipo de Llano
  ?person rdfs:label ""Gonzalo Queipo de Llano""@en .
  ?person dbo:deathPlace ?restingPlace .

  # Find a country in the territory administered by Madrid
  ?madrid dbo:administrativeTerritory ?territory .
  ?madrid rdfs:label ""Madrid""@en .
  ?territory rdf:type dbo:Country .
  BIND(?territory AS ?country)
}
```",3,4,4,2,2,3,2,20,0,0,1,0,0.0,0
216,16,train,"Give me the coach, that is a soccer player and a sports manager and a soccer manager, of the player, that is an organisation and a sports club and a soccer club, in Džemal Berberović.",SELECT ?result WHERE { ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerPlayer>. ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsManager>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerClub>. <http://dbpedia.org/resource/Džemal_Berberović> <http://dbpedia.org/ontology/team> ?v1 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsClub>. ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerManager>. ?v1 <http://dbpedia.org/ontology/coach> ?result . },"```sparql
SELECT ?coach WHERE {
  # Find Džemal Berberović's club
  ?player dbo:name ""Džemal Berberović""@en .
  ?player dbo:member ?club .
  
  # Ensure the club is a sports club and specifically a soccer club
  ?club rdf:type dbo:SoccerClub .

  # Find the coach of this club who is also a soccer player and sports manager
  ?coach dbo:coach ?club .
  ?coach rdf:type dbo:SoccerPlayer .
  ?coach rdf:type dbo:SportsManager .
}
```",2,8,3,2,1,3,3,71,0,0,2,0,0.0,0
715,14,train,"Give me the leader of the office, that is a government agency and an organisation, of Carlos Franco Iribarnegaray.",SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/leader> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/GovernmentAgency>. <http://dbpedia.org/resource/Carlos_Franco_Iribarnegaray> <http://dbpedia.org/property/office> ?v1 . },"```sparql
SELECT ?leader WHERE {
  # Find Carlos Franco Iribarnegaray and his associations
  ?person rdfs:label ""Carlos Franco Iribarnegaray""@en .
  
  # Identify government agency or organization associated with him
  OPTIONAL { 
    ?person dbo:positionHeld ?office .
    ?office a dbo:GovernmentAgency ;
            a dbo:Organization .
  }
  
  # Determine the leader of the office
  OPTIONAL {
    ?office dbo:leader ?leader .
    FILTER (?leader = ?person)
  }
}
```",2,4,3,2,1,3,3,71,0,0,2,0,0.0,0
917,28,train,"Give me the parent of the child, that is a royalty, of Kamehameha IV and child of Kekūanāoʻa and child of Kekūanāoʻa.","SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?result <http://dbpedia.org/ontology/parent> <http://dbpedia.org/resource/Kekūanāoʻa> . ?result <http://dbpedia.org/ontology/child> ?v1 . ?v1 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Kamehameha_IV> . ?result <http://dbpedia.org/property/father> ""Kekūanāoʻa""@en . }","```sparql
SELECT ?parent WHERE {
  # Identify Kamehameha IV
  ?kamehamehaIV rdfs:label ""Kamehameha IV""@en .
  
  # Find children of Kamehameha IV who are royalty
  ?child dbo:parent ?kamehamehaIV ;
         rdf:type dbo:RoyalFamilyMember .

  # Identify all children of Kekūanāoʻa
  ?kekuanaoa rdfs:label ""Kekūanāoʻa""@en .
  ?child2 dbo:parent ?kekuanaoa .

  # Find the overlapping child who is both a royal child of Kamehameha IV and a child of Kekūanāoʻa
  FILTER (?child = ?child2)

  # Retrieve the parent(s) of this overlapping child
  ?child dbo:parent ?parent .
}
```",4,5,5,2,3,3,3,71,0,0,1,0,0.0,0
274,6,train,Give me the band member of Dizzy Gillespie and professional in .,"SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/associatedMusicalArtist> <http://dbpedia.org/resource/Dizzy_Gillespie> . ?result <http://dbpedia.org/property/occupation> """"@en . }","```sparql
SELECT ?bandMember ?profession WHERE {
  # Find entities related to Dizzy Gillespie as band members
  ?gillespie dbo:member ?bandMember .
  ?gillespie rdfs:label ""Dizzy Gillespie""@en .

  # Retrieve the profession of each band member
  OPTIONAL { 
    ?bandMember dbo:occupation ?profession .
  }
}
```",2,2,3,1,2,2,3,28,0,0,8,0,0.0,0
41,5,train,"Who is the work, that is an office holder, of yes?","SELECT ?result WHERE { ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?result <http://dbpedia.org/property/author> ""yes""@en . }","```sparql
SELECT ?work WHERE {
  ?person dbo:officeHolder ?position .
  ?person dbo:work ?work .
}
```",1,2,2,1,1,2,3,28,0,0,59,0,0.0,0
773,8,train,"Give me the child, that is a royalty, of Louis the German.",SELECT ?result WHERE { ?result <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Louis_the_German> . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. },"```sparql
SELECT ?child WHERE {
  # Identify Louis the German and his children
  ?louis dbo:parent ?child .
  ?louis rdfs:label ""Louis the German""@en .

  # Ensure the child is recognized as royalty
  OPTIONAL { 
    ?child rdf:type dbo:Monarch .
  }
}
```",1,2,2,1,1,3,3,71,0,2,3,0.0,0.0,0
124,3,train,"Give me the reference, that is Australian and an organisation and a military unit, to 'A' Battery, Royal Australian Artillery.","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Australia>. ?result <http://xmlns.com/foaf/0.1/name> ""'A' Battery, Royal Australian Artillery""@en . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryUnit>. }","```sparql
SELECT ?entity WHERE {
  # Identify 'A' Battery, Royal Australian Artillery
  ?entity rdfs:label ""A Battery, Royal Australian Artillery""@en .
  
  # Ensure it is classified as an organization
  ?entity a dbo:Organisation .

  # Ensure it is recognized as a military unit
  ?entity a dbo:MilitaryUnit .

  # Verify association with Australia
  OPTIONAL {
    ?entity dbo:country dbr:Australia .
  }
}
```",1,4,2,1,1,3,3,71,0,0,1,0,0.0,0
791,18,train,Give me the spouse of Taira no Tokuko and father of Emperor Go-Toba and predecessor of Emperor Antoku.,SELECT ?result WHERE { <http://dbpedia.org/resource/Emperor_Go-Toba> <http://dbpedia.org/property/father> ?result . ?result <http://dbpedia.org/ontology/successor> <http://dbpedia.org/resource/Emperor_Antoku> . ?result <http://dbpedia.org/ontology/spouse> <http://dbpedia.org/resource/Taira_no_Tokuko> . },"```sparql
SELECT ?emperor WHERE {
  # Find the spouse of Taira no Tokuko
  ?tairaNoTokuko dbo:spouse ?emperor .
  ?tairaNoTokuko rdfs:label ""Taira no Tokuko""@en .

  # Ensure this emperor is also the father of Emperor Go-Toba
  OPTIONAL {
    ?goToba dbo:parent ?emperor .
    ?goToba rdfs:label ""Emperor Go-Toba""@en .
  }

  # Ensure this emperor is the predecessor of Emperor Antoku
  OPTIONAL {
    ?antoku dbo:predecessor ?emperor .
    ?antoku rdfs:label ""Emperor Antoku""@en .
  }
}
```",3,3,4,1,3,3,3,71,1,0,0,1.0,1.0,1.0
892,14,train,"Give me the entity in the administration, that is Italian and a region and a settlement and an administrative region, of Democratic Party (Italy).",SELECT ?result WHERE { ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Region>. ?result <http://dbpedia.org/ontology/province> ?v0 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/AdministrativeRegion>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. ?v0 <http://dbpedia.org/property/leaderParty> <http://dbpedia.org/resource/Democratic_Party_(Italy)> . ?v0 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Italy>. },"```sparql
SELECT ?entity WHERE {
  # Find entities related to the administration of Democratic Party (Italy)
  ?party dbo:party ""Democratic Party (Italy)""@en .
  
  # Ensure the entity is Italian and a region, settlement, and administrative region
  ?entity dbo:administrativeRegion ?party ;
          rdf:type ?type ;
          dbo:country dbc:Italy .

  FILTER (
    (?type = dbpedia-owl:Region || 
     ?type = dbpedia-ontology:AdministrativeRegion ||
     ?type = dbpedia-ontology:Settlement)
  )
}
```",2,6,3,2,1,3,3,71,0,0,587,0,0.0,0
124,7,train,Who is the person born on 1850-06-24?,"SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/birthDate> ""1850-06-24""^^<http://www.w3.org/2001/XMLSchema#date> . }","```sparql
SELECT ?person WHERE {
  ?person dbo:birthDate ""1850-06-24""^^xsd:date .
}
```",1,1,2,1,1,3,3,71,2,0,0,1.0,1.0,1.0
122,0,train,Give me the band member of Lyrics Born.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/associatedMusicalArtist> <http://dbpedia.org/resource/Lyrics_Born> . },"```sparql
SELECT ?member WHERE {
  # Find the band Heater and its members
  ?band rdfs:label ""Heater""@en .
  ?band dbo:member ?member .

  # Ensure Lyrics Born is part of the band
  OPTIONAL { 
    ?lyricsBorn dbo:memberOf ?band .
    ?lyricsBorn rdfs:label ""Lyrics Born""@en .
  }
}
```",1,1,2,1,1,2,2,9,0,0,7,0,0.0,0
158,6,train,Give me the party of Théodore Steeg and entity in France.,SELECT ?result WHERE { <http://dbpedia.org/resource/Théodore_Steeg> <http://dbpedia.org/ontology/party> ?result . ?result <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/France> . },"```sparql
SELECT ?party ?entity WHERE {
  # Identify Théodore Steeg
  ?steeg rdfs:label ""Théodore Steeg""@en .
  
  # Find the political party of Théodore Steeg
  OPTIONAL { 
    ?steeg dbo:politicalParty ?party .
  }
  
  # Find an entity in France related to Théodore Steeg
  OPTIONAL {
    ?steeg dbo:placeOfBirth ?entity ;
           FILTER (lang(?entity) = 'fr' && regex(str(?entity), ""France"", ""i"")) .
    UNION
    ?steeg dbo:residence ?entity ;
           FILTER (lang(?entity) = 'fr' && regex(str(?entity), ""France"", ""i"")) .
  }
}
```",2,2,3,1,2,3,2,20,0,0,1,0,0.0,0
18,11,train,"Give me the alumnus of the figure known, that is an educational institution, as Saints.","SELECT ?result WHERE { ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/EducationalInstitution>. ?result <http://dbpedia.org/ontology/almaMater> ?v0 . ?v0 <http://dbpedia.org/property/nickname> ""Saints""@en . }","```sparql
SELECT ?alumnus WHERE {
  ?institution rdfs:label ""Saint Louis University""@en .
  ?institution dbo:alumni ?alumnus .
}
```",2,3,3,2,1,2,3,28,0,0,21,0,0.0,0
433,18,train,Give me the associated musical artist of Paul Chambers and associated musical artist of Bill Evans and professional in Musician.,"SELECT ?result WHERE { <http://dbpedia.org/resource/Bill_Evans> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . <http://dbpedia.org/resource/Paul_Chambers> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?result <http://dbpedia.org/property/occupation> ""Musician""@en . }","```sparql
SELECT DISTINCT ?paulChambersArtist ?billEvansArtist WHERE {
  # Find associated musical artists of Paul Chambers
  ?paulChambers dbo:associatedMusicalArtist ?paulChambersArtist .
  ?paulChambers rdfs:label ""Paul Chambers""@en .

  # Ensure the artist is a professional musician
  ?paulChambersArtist rdf:type dbo:Musician .

  # Find associated musical artists of Bill Evans
  ?billEvans dbo:associatedMusicalArtist ?billEvansArtist .
  ?billEvans rdfs:label ""Bill Evans""@en .

  # Ensure the artist is a professional musician
  ?billEvansArtist rdf:type dbo:Musician .
}
```",3,3,4,1,3,3,3,71,0,0,1,0,0.0,0
417,7,train,"Who is the parent, that is a royalty, of Alexandrine of Mecklenburg-Schwerin?",SELECT ?result WHERE { ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. <http://dbpedia.org/resource/Alexandrine_of_Mecklenburg-Schwerin> <http://dbpedia.org/ontology/parent> ?result . },"```sparql
SELECT ?parent WHERE {
  # Find Alexandrine of Mecklenburg-Schwerin and her parents
  ?alexandrine dbo:parent ?parent .
  ?alexandrine rdfs:label ""Alexandrine of Mecklenburg-Schwerin""@en .

  # Filter to ensure the parent is royalty
  OPTIONAL {
    ?parent dbo:title ?title .
    FILTER (
      regex(str(?title), ""(King|Queen|Duke|Duchess|Prince|Princess)"", ""i"")
    )
  }
}
```",1,2,2,1,1,3,3,71,2,0,0,1.0,1.0,1.0
326,12,train,"Give me the person decedent at the award, that is a country, of Adelbert Cronkhite and resident of Berkshire.",SELECT ?result WHERE { ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. <http://dbpedia.org/resource/Adelbert_Cronkhite> <http://dbpedia.org/property/awards> ?v0 . ?result <http://dbpedia.org/property/residence> <http://dbpedia.org/resource/Berkshire> . ?result <http://dbpedia.org/ontology/deathPlace> ?v0 . },"```sparql
SELECT ?person WHERE {
  # Identify Adelbert Cronkhite
  ?adelbert dbo:name ""Adelbert Cronkhite""@en .
  
  # Find the award associated with Adelbert Cronkhite that is a country
  ?adelbert dbo:award ?award .
  ?award rdf:type dbo:Country .

  # Find person decedent at this award
  OPTIONAL {
    ?person dbo:decedentAtAward ?award .
  }

  # Ensure the person resided in Berkshire
  ?person dbo:residence ?berkshireResidence .
  ?berkshireResidence rdfs:label ""Berkshire""@en .

}
```",3,4,4,2,2,3,2,20,0,0,1,0,0.0,0
445,1,train,Give me the death place of Patrick Moore.,SELECT ?result WHERE { <http://dbpedia.org/resource/Patrick_Moore> <http://dbpedia.org/ontology/deathPlace> ?result . },"```sparql
SELECT ?deathPlace WHERE {
  ?person rdfs:label ""Patrick Moore""@en .
  ?person dbo:deathPlace ?deathPlace .
}
```",1,1,2,1,1,3,3,71,2,0,0,1.0,1.0,1.0
192,6,train,"Give me the child of Mary of Hungary, Queen of Naples and spouse of Clemence of Austria.","SELECT ?result WHERE { <http://dbpedia.org/resource/Clemence_of_Austria> <http://dbpedia.org/ontology/spouse> ?result . ?result <http://dbpedia.org/ontology/parent> <http://dbpedia.org/resource/Mary_of_Hungary,_Queen_of_Naples> . }","```sparql
SELECT ?child WHERE {
  # Find children of Mary of Hungary, Queen of Naples
  ?mary dbo:spouse ?husband .
  ?mary rdfs:label ""Mary of Hungary, Queen of Naples""@en .
  
  ?mary dbo:child ?child .

  # Check if the child is married to Clemence of Austria
  OPTIONAL {
    ?clemence dbo:spouse ?child .
    ?clemence rdfs:label ""Clemence of Austria""@en .
  }
}
```",2,2,3,1,2,3,2,20,0,0,1,0,0.0,0
273,4,train,Give me the reference to Università degli Studi di Torino.,"SELECT ?result WHERE { ?result <http://xmlns.com/foaf/0.1/name> ""Università degli Studi di Torino""@en . }","```sparql
SELECT ?reference WHERE {
  ?university rdfs:label ""Università degli Studi di Torino""@it .
  ?university dbo:wikiPageWikiLink ?reference .
}
```",1,1,2,1,1,3,2,20,0,0,1,0,0.0,0
773,24,train,Give me the parent of the successor of Charles the Bald and parent of Charles the Fat.,SELECT ?result WHERE { <http://dbpedia.org/resource/Charles_the_Bald> <http://dbpedia.org/ontology/successor> ?v2 . ?result <http://dbpedia.org/ontology/child> ?v2 . <http://dbpedia.org/resource/Charles_the_Fat> <http://dbpedia.org/ontology/parent> ?result . },"```sparql
SELECT ?successorParent ?charlesFatParent WHERE {
  # Find Charles the Bald and his successor
  ?charlesBald dbo:successor ?successor .
  ?charlesBald rdfs:label ""Charles the Bald""@en .

  # Find parent of the successor of Charles the Bald
  ?successor dbo:parent ?successorParent .

  # Find Charles the Fat and his parent
  ?charlesFat rdfs:label ""Charles the Fat""@en .
  ?charlesFat dbo:parent ?charlesFatParent .
}
```",3,3,4,2,2,3,3,71,2,0,0,1.0,1.0,1.0
527,0,train,Give me the actor of The Book Tower.,SELECT ?result WHERE { <http://dbpedia.org/resource/The_Book_Tower> <http://dbpedia.org/property/starring> ?result . },"```sparql
SELECT ?actor WHERE {
  ?entity rdfs:label ""The Book Tower""@en .
  
  # Check if The Book Tower is a film or TV show and find its actors
  OPTIONAL { 
    ?entity dbo:starring ?actor .
  }
}
```",1,1,2,1,1,3,2,20,7,0,0,1.0,1.0,1.0
917,5,train,"Who is the spouse, that is a royalty, of Leleiohoku I?",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/spouse> <http://dbpedia.org/resource/Leleiohoku_I> . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. },"```sparql
SELECT ?spouse WHERE {
  # Identify Leleiohoku I
  ?leleiohoku dbo:spouse ?spouse .
  ?leleiohoku rdfs:label ""Leleiohoku I""@en .

  # Ensure the spouse is recognized as royalty
  OPTIONAL { 
    ?spouse rdf:type dbo:Monarch .
  }
}
```",1,2,2,1,1,3,3,71,0,2,2,0.0,0.0,0
573,26,train,"Give me the person decedent at the residence, that is a settlement, of the professional, that is American, in Politician.","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/deathPlace> ?v2 . ?v1 <http://dbpedia.org/property/occupation> ""Politician""@en . ?v1 <http://dbpedia.org/ontology/nationality> <http://dbpedia.org/resource/United_States>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. ?v1 <http://dbpedia.org/property/residence> ?v2 . }","```sparql
SELECT ?decedent WHERE {
  # Find an American politician
  ?politician dbo:occupation dbr:Politician ;
              dbo:nationality dbr:United_States .
  
  # Identify their residence, ensuring it is a settlement
  ?politician dbo:residence ?settlement .
  ?settlement rdf:type dbo:Settlement .

  # Find decedents at that settlement
  ?decedent dbo:placeOfDeath ?settlement ;
            dbo:deathDate ?date .
}
```",3,5,4,3,1,3,3,71,0,0,6537,0,0.0,0
773,1,train,Give me the parent of Carloman of Bavaria.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Carloman_of_Bavaria> . },"```sparql
SELECT ?parent WHERE {
  ?carloman dbo:parent ?parent .
  ?carloman rdfs:label ""Carloman of Bavaria""@en .
}
```",1,1,2,1,1,3,3,71,2,0,0,1.0,1.0,1.0
933,19,train,Give me the reference to Alan Warner and band of the band of Alan Warner (musician).,"SELECT ?result WHERE { ?result <http://xmlns.com/foaf/0.1/name> ""Alan Warner""@en . <http://dbpedia.org/resource/Alan_Warner_(musician)> <http://dbpedia.org/ontology/associatedMusicalArtist> ?v2 . ?v2 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . }","```sparql
SELECT ?alanWarnerBand ?bandOfTheBand WHERE {
  # Find Alan Warner and his band
  ?alanWarner dbo:member ?alanWarnerBand .
  ?alanWarner rdfs:label ""Alan Warner (musician)""@en .

  # Check if the band has a sub-group or related band
  OPTIONAL {
    ?alanWarnerBand dbo:subGroupOf ?bandOfTheBand .
  }
}
```",3,3,4,2,2,3,3,71,0,0,1,0,0.0,0
192,7,train,"Give me the spouse of the spouse, that is a royalty, of Charles Martel of Anjou.",SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/spouse> <http://dbpedia.org/resource/Charles_Martel_of_Anjou> . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v1 <http://dbpedia.org/ontology/spouse> ?result . },"```sparql
SELECT ?spouseOfSpouse WHERE {
  # Find Charles Martel of Anjou and his spouse
  ?charlesMartel dbo:spouse ?spouse .
  ?charlesMartel rdfs:label ""Charles Martel, Count of Anjou""@en .

  # Check if the spouse is royalty
  OPTIONAL { 
    ?spouse dbo:royalty ?isRoyalty .
    FILTER EXISTS { ?isRoyalty a dbo:RoyalFamilyMember }
  }

  # Find the spouse of this royal spouse
  ?spouse dbo:spouse ?spouseOfSpouse .
}
```",2,3,3,2,1,3,2,20,0,0,1,0,0.0,0
933,20,train,Give me the reference to the birth name of Alan Warner (musician) and band of Mike Elliott (saxophonist).,SELECT ?result WHERE { <http://dbpedia.org/resource/Mike_Elliott_(saxophonist)> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?result <http://xmlns.com/foaf/0.1/name> ?v1 . <http://dbpedia.org/resource/Alan_Warner_(musician)> <http://dbpedia.org/property/birthName> ?v1 . },"```sparql
SELECT ?birthName WHERE {
  ?alanWarner dbo:birthName ?birthName .
  ?alanWarner rdfs:label ""Alan Warner (musician)""@en .
}

UNION

SELECT ?band WHERE {
  ?mikeElliott dbo:memberOfBand ?band .
  ?mikeElliott rdfs:label ""Mike Elliott (saxophonist)""@en .
}
```",3,3,4,2,2,3,3,71,0,0,1,0,0.0,0
582,20,train,"Give me the reference to Japan and player in the father, that is an athlete and a soccer manager and a sports manager, of Masami Nagasawa.","SELECT ?result WHERE { ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerManager>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Athlete>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsManager>. ?result <http://xmlns.com/foaf/0.1/name> ""Japan""@en . ?v2 <http://dbpedia.org/ontology/team> ?result . <http://dbpedia.org/resource/Masami_Nagasawa> <http://dbpedia.org/property/father> ?v2 . }","```sparql
SELECT ?father ?reference WHERE {
  # Find Masami Nagasawa and her father
  ?nagasawa dbo:parent ?father .
  ?nagasawa rdfs:label ""Masami Nagasawa""@en .

  # Ensure the father is an athlete, soccer manager, and sports manager
  ?father dbo:occupation ?occupation .
  FILTER (
    regex(str(?occupation), ""athlete"", ""i"") &&
    regex(str(?occupation), ""soccer manager"", ""i"") &&
    regex(str(?occupation), ""sports manager"", ""i"")
  )

  # Ensure the father has a connection to Japan
  ?father dbo:nationality dbr:Japan .

  # Find references related to Japan and the person in question
  OPTIONAL {
    ?reference dbo:wikiPageRedirects ?nagasawa .
    ?reference rdfs:label ""Japan""@en .
  }
}
```",3,6,4,2,2,3,3,71,0,0,1,0,0.0,0
417,4,train,"Who is the parent, that is a royalty, of Count Ingolf of Rosenborg?",SELECT ?result WHERE { ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?result <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Count_Ingolf_of_Rosenborg> . },"```sparql
SELECT ?parent WHERE {
  # Find Count Ingolf of Rosenborg and his parents
  ?ingolf dbo:parent ?parent .
  ?ingolf rdfs:label ""Count Ingolf of Rosenborg""@en .

  # Filter to ensure the parent is royalty
  OPTIONAL { 
    ?parent dbo:title ?title .
    FILTER (regex(str(?title), ""royalty"", ""i""))
  }
}
```",1,2,2,1,1,3,3,71,2,0,0,1.0,1.0,1.0
212,5,train,"Give me the birthplace of the professional, that is a musical artist and an artist, in Singer, rapper, CEO, Facilities and Project Manager.","SELECT ?result WHERE { ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?v0 <http://dbpedia.org/property/occupation> ""Singer, rapper, CEO, Facilities and Project Manager""@en . ?v0 <http://dbpedia.org/ontology/birthPlace> ?result . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. }","```sparql
SELECT ?birthPlace WHERE {
  ?person rdfs:label ""Kanye West""@en .
  ?person dbo:birthPlace ?birthPlace .
}
```",2,4,3,2,1,2,2,9,0,1,1,0.0,0.0,0
445,36,train,Give me the entity in the award of the commander in Battle of Saint-Mihiel and entity in England.,SELECT ?result WHERE { ?v0 <http://dbpedia.org/property/awards> ?v1 . ?result <http://dbpedia.org/ontology/location> <http://dbpedia.org/resource/England> . ?result <http://dbpedia.org/ontology/country> ?v1 . <http://dbpedia.org/resource/Battle_of_Saint-Mihiel> <http://dbpedia.org/ontology/commander> ?v0 . },"```sparql
SELECT ?commanderAward ?englandEntity WHERE {
  # Find the commander of the Battle of Saint-Mihiel and their award
  ?battle dbo:commander ?commander .
  ?battle rdfs:label ""Battle of Saint-Mihiel""@en .
  
  OPTIONAL { 
    ?commander dbo:award ?commanderAward .
  }
  
  # Find an entity related to England
  ?englandEntity dbo:country dbr:England .
}
```",4,4,5,3,2,3,3,71,0,10872,102,0.0,0.0,0
645,2,train,Give me the leader of Ministry of the Army (Spain).,SELECT ?result WHERE { <http://dbpedia.org/resource/Ministry_of_the_Army_(Spain)> <http://dbpedia.org/ontology/leader> ?result . },"```sparql
SELECT ?minister WHERE {
  ?ministry rdfs:label ""Ministry of the Army (Spain)""@en .
  ?ministry dbo:minister ?minister .
}
```",1,1,2,1,1,3,3,71,0,0,1,0,0.0,0
83,3,train,"Who is the person born, that is an athlete, on 1991-11-19?","SELECT ?result WHERE { ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Athlete>. ?result <http://dbpedia.org/ontology/birthDate> ""1991-11-19""^^<http://www.w3.org/2001/XMLSchema#date> . }","```sparql
SELECT ?person WHERE {
  ?person dbo:birthday ?birthday .
  ?person dbo:occupation ?occupation .
  
  FILTER (YEAR(?birthday) = 1991 && MONTH(?birthday) = 11 && DAY(?birthday) = 19)
  FILTER (regex(str(?occupation), ""athlete"", ""i""))
}
```",1,2,2,1,1,2,2,9,0,0,30,0,0.0,0
98,1,train,Give me the child of Emperor Go-Shirakawa.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/parent> <http://dbpedia.org/resource/Emperor_Go-Shirakawa> . },"```sparql
SELECT ?child WHERE {
  # Find Emperor Go-Shirakawa and his child
  ?goShirakawa dbo:child ?child .
  ?goShirakawa rdfs:label ""Emperor Go-Shirakawa""@en .
}
```",1,1,2,1,1,2,2,9,3,2,0,0.6,1.0,0.7499999999999999
47,16,train,"Give me the awardee of the award, that is an award, of Mantu Ghosh.",SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Award>. <http://dbpedia.org/resource/Mantu_Ghosh> <http://dbpedia.org/property/awards> ?v1 . ?result <http://dbpedia.org/property/awards> ?v1 . },"```sparql
SELECT ?award ?awardee WHERE {
  # Find awards associated with Mantu Ghosh
  ?ghosh dbo:wikiPageID ""Mantu_Ghosh"" .
  
  # Find awards that Mantu Ghosh has received or is associated with
  OPTIONAL { 
    ?ghosh dbo:award ?award .
  }
  
  # For each award, find its awardees
  ?award dbo:recipient ?awardee .
}
```",2,3,3,2,1,3,3,71,0,0,11,0,0.0,0
5,0,train,Give me the birthplace of Gerald Regan.,SELECT ?result WHERE { <http://dbpedia.org/resource/Gerald_Regan> <http://dbpedia.org/ontology/birthPlace> ?result . },"```sparql
SELECT ?birthPlace WHERE {
  ?person rdfs:label ""Gerald Regan""@en .
  ?person dbo:birthPlace ?birthPlace .
}
```",1,1,2,1,1,3,2,20,1,0,0,1.0,1.0,1.0
445,22,train,Give me the entity in the award of George H. Cameron and entity in England.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/location> <http://dbpedia.org/resource/England> . ?result <http://dbpedia.org/ontology/country> ?v1 . <http://dbpedia.org/resource/George_H._Cameron> <http://dbpedia.org/property/awards> ?v1 . },"```sparql
SELECT ?award ?englishEntity WHERE {
  # Find George H. Cameron and his award
  ?cameron dbo:birthName ""George Henry Cameron""@en .
  OPTIONAL { 
    ?cameron dbo:honoraryTitle ?award .
  }

  # Select a notable entity in England
  OPTIONAL {
    ?englishEntity dbo:country dbr:England .
    FILTER (regex(str(?englishEntity), ""Big Ben|Tower of London"", ""i""))
  }
}
```",3,3,4,2,2,3,3,71,0,0,102,0,0.0,0
445,37,train,Give me the entity in United Kingdom and death place of the awardee of the establishment of 1820-03-10.,"SELECT ?result WHERE { ?v3 <http://dbpedia.org/ontology/deathPlace> ?result . ?v3 <http://dbpedia.org/property/awards> ?v0 . ?result <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/United_Kingdom> . ?v0 <http://dbpedia.org/ontology/foundingDate> ""1820-03-10""^^<http://www.w3.org/2001/XMLSchema#date> . }","```sparql
SELECT ?ukEntity ?deathPlace WHERE {
  # Step 1: Identify the establishment on 1820-03-10
  ?establishment dbo:dateEstablished ""1820-03-10""^^xsd:date .
  
  # Step 2: Find the awardee related to this establishment
  OPTIONAL { 
    ?establishment dbo:awardee ?awardee .
  }
  
  # Step 3: Identify an entity in the United Kingdom related to the awardee
  OPTIONAL {
    ?ukEntity dbo:locationCountry dbc:United_Kingdom ;
              dbo:relatedTo ?awardee .
  }

  # Step 4: Find the death place of the awardee
  OPTIONAL {
    ?awardee dbo:deathPlace ?deathPlace .
  }
}
```",4,4,5,3,2,3,3,71,0,0,2,0,0.0,0
124,2,train,Give me the military force of Battle of Atbara.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/battle> <http://dbpedia.org/resource/Battle_of_Atbara> . },"```sparql
SELECT ?force ?label WHERE {
  ?battle rdfs:label ""Battle of Atbara""@en .
  ?battle dbo:participatedIn ?event .
  ?force dbo:participatedIn ?event .
  ?force rdfs:label ?label .
}
```",1,1,2,1,1,3,3,71,0,0,7,0,0.0,0
978,2,train,Give me the award of Michel Claparède.,SELECT ?result WHERE { <http://dbpedia.org/resource/Michel_Claparède> <http://dbpedia.org/property/awards> ?result . },"```sparql
SELECT ?award WHERE {
  ?claparde dbo:award ?award .
  ?claparde rdfs:label ""Michel Édouard Albert Claparède""@en .
}
```",1,1,2,1,1,3,2,20,0,0,4,0,0.0,0
102,4,train,"Give me the resident, that is an athlete, of Dewsbury.",SELECT ?result WHERE { ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Athlete>. ?result <http://dbpedia.org/ontology/residence> <http://dbpedia.org/resource/Dewsbury> . },"```sparql
SELECT ?athlete WHERE {
  # Find Dewsbury entity in DBpedia
  ?dewsbury dbo:name ""Dewsbury""@en .
  
  # Identify residents of Dewsbury who are athletes
  ?resident dbo:residence ?dewsbury ;
            dbo:occupation ?occupation .
  
  # Filter to ensure the occupation is related to being an athlete
  FILTER (regex(str(?occupation), ""athlete"", ""i""))
  
  # Bind the resident as the result
  BIND(?resident AS ?athlete)
}
```",1,2,2,1,1,3,2,20,0,0,2,0,0.0,0
273,5,train,Give me the alumnus of University of Turin.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/almaMater> <http://dbpedia.org/resource/University_of_Turin> . },"```sparql
SELECT ?alumnus WHERE {
  ?university rdfs:label ""University of Turin""@en .
  ?university dbo:alumnus ?alumnus .
}
```",1,1,2,1,1,3,2,20,0,0,141,0,0.0,0
445,39,train,Give me the death place of Patrick Moore and entity in the award of the commander in Battle of Saint-Mihiel.,SELECT ?result WHERE { <http://dbpedia.org/resource/Battle_of_Saint-Mihiel> <http://dbpedia.org/ontology/commander> ?v0 . ?v0 <http://dbpedia.org/property/awards> ?v1 . ?result <http://dbpedia.org/ontology/country> ?v1 . <http://dbpedia.org/resource/Patrick_Moore> <http://dbpedia.org/ontology/deathPlace> ?result . },"```sparql
SELECT ?deathPlace ?commander WHERE {
  # Find death place of Patrick Moore
  ?moore dbo:deathPlace ?deathPlace .
  ?moore rdfs:label ""Patrick Moore""@en .

  # Find entity in the award of commander in Battle of Saint-Mihiel
  OPTIONAL {
    ?award dbo:awardedBy ?battle .
    ?battle rdfs:label ""Battle of Saint-Mihiel""@en .
    ?award dbo:recipient ?commander .
    FILTER EXISTS { ?commander dbo:title ""Commander""@en }
  }
}
```",4,4,5,3,2,3,3,71,2,0,0,1.0,1.0,1.0
965,5,train,"Give me the person born, that is a politician, on 1854-05-24.","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/birthDate> ""1854-05-24""^^<http://www.w3.org/2001/XMLSchema#date> . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. }","```sparql
SELECT ?personLabel WHERE {
  ?person dbo:birthDate ""1854-05-24""^^xsd:date .
  ?person dbo:occupation ?occupation .
  FILTER (regex(str(?occupation), ""politician"", ""i""))
  SERVICE wikibase:label { bd:serviceParam wikibase:language ""[AUTO_LANGUAGE],en"". }
}
```",1,2,2,1,1,3,3,71,0,0,2,0,0.0,0
715,7,train,Who is the reference to Carlos Franco Iribarnegaray?,"SELECT ?result WHERE { ?result <http://xmlns.com/foaf/0.1/name> ""Carlos Franco Iribarnegaray""@en . }","```sparql
SELECT ?property ?value WHERE {
  dbpedia-es:Carlos_Franco_Iribarnegaray ?property ?value .
}
```",1,1,2,1,1,3,3,71,0,0,1,0,0.0,0
582,28,train,Give me the player in Kazuaki Nagasawa and reference to the residence of Hirotaka Sugawara and figure known as --10-19.,"SELECT ?result WHERE { <http://dbpedia.org/resource/Hirotaka_Sugawara> <http://dbpedia.org/property/residence> ?v1 . ?result <http://dbpedia.org/property/nickname> ""--10-19""^^<http://www.w3.org/2001/XMLSchema#gMonthDay> . ?result <http://xmlns.com/foaf/0.1/name> ?v1 . <http://dbpedia.org/resource/Kazuaki_Nagasawa> <http://dbpedia.org/ontology/team> ?result . }","```sparql
SELECT ?playerRole ?residence ?figure WHERE {
  # Find Kazuaki Nagasawa's player role
  OPTIONAL {
    ?nagasawa dbo:occupation ?playerRole .
    ?nagasawa rdfs:label ""Kazuaki Nagasawa""@en .
  }

  # Find Hirotaka Sugawara's residence
  OPTIONAL {
    ?sugawara dbo:residence ?residence .
    ?sugawara rdfs:label ""Hirotaka Sugawara""@en .
  }

  # Identify the figure known as --10-19
  OPTIONAL {
    ?figure rdfs:label ""--10-19""@en .
  }
}
```",4,4,5,2,3,3,3,71,0,0,1,0,0.0,0
987,37,train,"Give me the entity in Montenegro and birth place of the actor of the show, that is a film, with Emir Hadžihafizbegović.",SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Film>. ?v1 <http://dbpedia.org/ontology/starring> <http://dbpedia.org/resource/Emir_Hadžihafizbegović> . ?result <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Montenegro> . ?v2 <http://dbpedia.org/ontology/birthPlace> ?result . ?v1 <http://dbpedia.org/property/starring> ?v2 . },"```sparql
SELECT ?entityInMontenegro WHERE {
  # Step 1: Find films featuring Emir Hadžihafizbegović
  ?film dbo:starringEmirHadžihafizbegović dbp:actor ?actor .
  
  # Step 2: Identify the actor's role in a show (another film or series)
  ?show dbo:starring ?actor .

  # Step 3: Find the birthplace of this actor
  ?actor dbo:birthPlace ?birthPlace .

  # Step 4: Identify an entity related to Montenegro connected to the birthplace
  ?entityInMontenegro dbp:location ?birthPlace .
  FILTER (regex(str(?entityInMontenegro), ""Montenegro"", ""i""))
}
```",4,5,5,3,2,3,3,71,0,0,2,0,0.0,0
47,36,train,"Give me the office of the awardee of the entity, that is an award, in India and office of Suvendu Adhikari.",SELECT ?result WHERE { ?v1 <http://dbpedia.org/property/awards> ?v0 . ?v0 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/India> . ?v1 <http://dbpedia.org/property/office> ?result . <http://dbpedia.org/resource/Suvendu_Adhikari> <http://dbpedia.org/property/office> ?result . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Award>. },"```sparql
SELECT ?award ?awardeeOffice ?suvenduAdhikariOffice WHERE {
  # Find awards in India and their awardees' offices
  ?award dbo:country dbr:India .
  ?award dbo:recipient ?awardee .
  OPTIONAL { ?awardee dbo:office ?awardeeOffice . }
  
  # Find Suvendu Adhikari's office
  ?suvenduAdhikari rdfs:label ""Suvendu Adhikari""@en .
  OPTIONAL { ?suvenduAdhikari dbo:office ?suvenduAdhikariOffice . }
}
```",4,5,5,3,2,3,3,71,0,0,3,0,0.0,0
955,9,train,"Give me the writer of the work, that is a work and an album and a musical work, of Matt Freeman.",SELECT ?result WHERE { ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Album>. ?v0 <http://dbpedia.org/property/writer> <http://dbpedia.org/resource/Matt_Freeman> . ?v0 <http://dbpedia.org/property/writer> ?result . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalWork>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. },"```sparql
SELECT DISTINCT ?work ?writer WHERE {
  # Find works by Matt Freeman
  ?work dbo:creator ?matthewFreeman .
  
  # Ensure the work is an album and a musical work
  ?work rdf:type dbp:Album ;
        rdf:type dbc:MusicalWorks .

  # Match Matt Freeman's DBpedia entity
  ?matthewFreeman rdfs:label ""Matt Freeman""@en .

  # Find the writer of the work
  ?work dbo:creator ?writer .
}
```",2,5,3,2,1,3,2,20,0,0,31,0,0.0,0
495,2,train,Give me the parent of Princess Catherine of Württemberg.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Princess_Catherine_of_Württemberg> . },"```sparql
SELECT ?parent WHERE {
  ?catherine dbo:parent ?parent .
  ?catherine rdfs:label ""Princess Catherine of Württemberg""@en .
}
```",1,1,2,1,1,3,2,20,2,0,0,1.0,1.0,1.0
274,11,train,"Give me the associated musical artist of the actor, that is a musical artist, of Imagine the Sound.",SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. <http://dbpedia.org/resource/Imagine_the_Sound> <http://dbpedia.org/property/starring> ?v1 . },"```sparql
SELECT DISTINCT ?associatedArtist WHERE {
  # Identify Imagine the Sound
  ?sound rdfs:label ""Imagine the Sound""@en .
  
  # Find an actor associated with Imagine the Sound
  ?actor dbo:relatedTo ?sound ;
         a dbo:Actor .

  # Check if this actor is also a musical artist
  OPTIONAL { 
    ?actor a dbo:MusicalArtist .
  }
  
  # Find associated musical artists of this actor who is a musician
  ?actor dbo:associatedWith ?associatedArtist .
  FILTER EXISTS { ?actor a dbo:MusicalArtist . }
}
```",2,3,3,2,1,2,3,28,0,0,36,0,0.0,0
839,24,train,Give me the band of Matthias Röhr and band of the member of Böhse Onkelz.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/bandMember> <http://dbpedia.org/resource/Matthias_Röhr> . ?result <http://dbpedia.org/ontology/bandMember> ?v2 . <http://dbpedia.org/resource/Böhse_Onkelz> <http://dbpedia.org/ontology/bandMember> ?v2 . },"```sparql
SELECT DISTINCT ?matthiasBand ?boMember ?boMemberBand WHERE {
  # Find the band of Matthias Röhr
  ?person dbo:member ?band .
  ?person rdfs:label ""Matthias Röhr""@en .
  ?band rdfs:label ?matthiasBand .

  # Find members of Böhse Onkelz and their bands
  ?boMember dbo:member ?böhseOnkelz .
  ?böhseOnkelz rdfs:label ""Böhse Onkelz""@en .
  
  OPTIONAL {
    ?boMember dbo:band ?boMemberBand .
  }
}
```",3,3,4,2,2,3,3,71,0,0,1,0,0.0,0
216,11,train,Give me the player in the coach of Croatia national under-21 football team.,SELECT ?result WHERE { <http://dbpedia.org/resource/Croatia_national_under-21_football_team> <http://dbpedia.org/ontology/coach> ?v0 . ?v0 <http://dbpedia.org/ontology/team> ?result . },"```sparql
SELECT ?coach WHERE {
  ?team rdfs:label ""Croatia national under-21 football team""@en .
  ?team dbo:coach ?coach .
}
```",2,2,3,2,1,3,3,71,0,1,6,0.0,0.0,0
892,23,train,Give me the entity in the profession of the true self of Enrico Crolla.,"SELECT ?result WHERE { ?v1 <http://xmlns.com/foaf/0.1/givenName> ""Enrico Crolla""@en . ?result <http://dbpedia.org/ontology/country> ?v2 . ?v1 <http://dbpedia.org/property/occupation> ?v2 . }","```sparql
SELECT ?profession WHERE {
  # Find Enrico Crolla entity
  ?enricoCrolla rdfs:label ""Enrico Crolla""@en .
  
  # Find any alias of Enrico Crolla
  OPTIONAL { 
    ?enricoCrolla dbo:alias ?alias .
  }
  
  # Use the alias to find the profession
  OPTIONAL {
    ?alias dbo:occupation ?profession .
  }
}
```",3,3,4,3,1,3,3,71,0,0,13092,0,0.0,0
456,39,train,"Give me the band of the band, that is a musical artist, of the band of Alan Doyle and professional in .","SELECT ?result WHERE { <http://dbpedia.org/resource/Alan_Doyle> <http://dbpedia.org/ontology/associatedMusicalArtist> ?v0 . ?result <http://dbpedia.org/property/occupation> """"@en . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?v0 <http://dbpedia.org/ontology/associatedMusicalArtist> ?v1 . ?v1 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . }","```sparql
SELECT ?bandOfBand WHERE {
  # Find Alan Doyle and his band
  ?doyle dbo:member ?alanDoyle .
  ?alanDoyle rdfs:label ""Alan Doyle""@en .

  # Ensure the entity is a musical artist
  ?alanDoyle dbo:musicalArtist ?band .

  # Find associated band of Alan Doyle's band
  OPTIONAL {
    ?band dbo:associatedBand ?bandOfBand .
    FILTER (regex(str(?bandOfBand), ""musical artist"", ""i""))
  }
}
```",4,5,5,3,2,3,3,71,0,0,1,0,0.0,0
865,4,train,"Give me the residence, that is a country, of Ram Jaipal Singh Yadav.",SELECT ?result WHERE { <http://dbpedia.org/resource/Ram_Jaipal_Singh_Yadav> <http://dbpedia.org/property/residence> ?result . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. },"```sparql
SELECT ?country WHERE {
  ?person rdfs:label ""Ram Jaipal Singh Yadav""@en .
  ?person dbo:residence ?residence .
  ?residence rdf:type dbo:Country .
  BIND(?residence AS ?country)
}
```",1,2,2,1,1,3,3,71,1,0,0,1.0,1.0,1.0
456,16,train,"Give me the alter ego of the reference, that is a fictional character, to Lamont Cranston (radio, film and television).","SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/FictionalCharacter>. ?v1 <http://xmlns.com/foaf/0.1/name> ""Lamont Cranston (radio, film and television)""@en . ?v1 <http://dbpedia.org/property/alterEgo> ?result . }","```sparql
SELECT ?alterEgo WHERE {
  ?person rdfs:label ""Lamont Cranston""@en .
  ?person dbo:fictionalAlterEgo ?alterEgo .
}
```",2,3,3,2,1,3,3,71,0,0,3,0,0.0,0
645,17,train,"Give me the office, that is a government agency and an organisation, of the native of Restoration (Spain).",SELECT ?result WHERE { ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/GovernmentAgency>. ?v1 <http://dbpedia.org/property/office> ?result . ?v1 <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Restoration_(Spain)> . },"```sparql
SELECT ?office WHERE {
  ?person dbo:nationality dbr:Spain ;
          dbo:occupation ?office .
  
  # Filter for individuals from the Spanish Restoration period
  FILTER (regex(str(?person), ""Spanish Restoration"", ""i""))

  # Ensure the office is a government agency and an organization
  ?office rdf:type dbo:GovernmentAgency, dbo:Organization .

  # Optional: Add more specific filters if needed to narrow down to a particular individual
}
```",2,4,3,2,1,3,3,71,0,0,15,0,0.0,0
129,5,train,Give me the person born as Tahj Malik Chandler.,"SELECT ?result WHERE { ?result <http://dbpedia.org/property/birthName> ""Tahj Malik Chandler""@en . }","```sparql
SELECT ?person ?alias WHERE {
  # Find person with the birth name Tahj Malik Chandler
  ?person dbo:birthName ""Tahj Malik Chandler"" .
  
  # Retrieve commonly known alias or label for this person
  ?person rdfs:label ?alias .
}
```",1,1,2,1,1,2,3,28,0,0,1,0,0.0,0
274,16,train,"Give me the band member of Dizzy Gillespie and associated musical artist of the actor, that is a musical artist, of Imagine the Sound.",SELECT ?result WHERE { ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?v2 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . <http://dbpedia.org/resource/Imagine_the_Sound> <http://dbpedia.org/property/starring> ?v2 . ?result <http://dbpedia.org/ontology/associatedMusicalArtist> <http://dbpedia.org/resource/Dizzy_Gillespie> . },"```sparql
SELECT ?bandMember ?associatedArtist WHERE {
  # Find a band member of Dizzy Gillespie
  ?dizzy dbo:member ?band .
  ?band dbo:member ?bandMember .
  ?dizzy rdfs:label ""Dizzy Gillespie""@en .

  # Identify an actor in ""Imagine the Sound"" who is also a musical artist
  OPTIONAL {
    ?movie dbo:starring ?actor .
    ?movie rdfs:label ""Imagine the Sound""@en .
    ?actor dbo:musicalArtist true .
    
    # Find associated musical artists of this actor
    ?actor dbo:associatedMusicalArtist ?associatedArtist .
  }
}
```",3,4,4,2,2,2,3,28,0,0,4,0,0.0,0
791,37,train,"Give me the father of Emperor Go-Toba and predecessor of the child of the child, that is an office holder and a royalty, of Emperor Go-Shirakawa.",SELECT ?result WHERE { <http://dbpedia.org/resource/Emperor_Go-Toba> <http://dbpedia.org/property/father> ?result . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v0 <http://dbpedia.org/ontology/parent> <http://dbpedia.org/resource/Emperor_Go-Shirakawa> . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?result <http://dbpedia.org/ontology/successor> ?v3 . ?v3 <http://dbpedia.org/property/father> ?v0 . },"```sparql
SELECT ?father WHERE {
  # Step 1: Find Emperor Go-Toba and his father
  ?goToba dbo:parent ?father .
  ?goToba rdfs:label ""Emperor Go-Toba""@en .

  # Step 2: Identify a child of Emperor Go-Shirakawa who is an office holder and royalty
  ?goShirakawa dbo:child ?child .
  ?goShirakawa rdfs:label ""Emperor Go-Shirakawa""@en .
  
  ?child rdf:type dbo:RoyalPerson .
  ?child dbo:officeHolder ?office .

  # Step 3: Find the predecessor of this child
  ?predecessor dbo:successor ?child .
}
```",4,6,5,3,2,3,3,71,0,0,1,0,0.0,0
47,25,train,Give me the office of the awardee of Padma Vibhushan and office of Bidesh Ranjan Bose.,SELECT ?result WHERE { <http://dbpedia.org/resource/Bidesh_Ranjan_Bose> <http://dbpedia.org/property/office> ?result . ?v1 <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/Padma_Vibhushan> . ?v1 <http://dbpedia.org/property/office> ?result . },"```sparql
SELECT ?awardeeOffice ?boseOffice WHERE {
  # Find a specific awardee of Padma Vibhushan (example: year or context needed)
  ?awardee dbo:award ""Padma Vibhushan"" .
  ?awardee dbo:office ?awardeeOffice .

  # Find Bidesh Ranjan Bose and his office
  ?bose foaf:name ""Bidesh Ranjan Bose""@en .
  ?bose dbo:office ?boseOffice .
}
```",3,3,4,2,2,3,3,71,0,0,1,0,0.0,0
888,11,train,"Give me the commander in the force, that is a societal event and an event, of Serhiy Kotenko and awardee of Hero of Ukraine.","SELECT ?result WHERE { ?v2 <http://dbpedia.org/ontology/commander> ?result . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?result <http://dbpedia.org/property/awards> ""Hero of Ukraine""@en . ?v2 <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Serhiy_Kotenko> . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. }","```sparql
SELECT ?commanderRole ?eventSocietal ?eventGeneral WHERE {
  # Identify Serhiy Kotenko
  ?serhiy kotenko:isA ?person .
  ?person rdfs:label ""Serhiy Kotenko""@en .

  # Find his role as a commander in the force
  ?serhiy dbo:position ?commanderRole .
  
  # Retrieve events associated with this role
  ?eventSocietal dbo:relatedEvent ?commanderRole ;
                rdf:type dbpedia-owl:SocietalEvent .
  ?eventGeneral dbo:relatedEvent ?commanderRole ;
                rdf:type dbpedia-owl:Event .

  # Confirm he is an awardee of Hero of Ukraine
  OPTIONAL {
    ?serhiy dbo:award ""Hero of Ukraine""@en .
  }
}
```",3,5,4,2,2,3,2,20,0,0,1,0,0.0,0
573,32,train,"Give me the person decedent at the residence, that is a settlement, of William J. Phelan and person decedent at the administration, that is a region, of Charlie Baker.","SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Region>. ?result <http://dbpedia.org/ontology/deathPlace> ?v3 . <http://dbpedia.org/resource/William_J._Phelan> <http://dbpedia.org/property/residence> ?v3 . ?result <http://dbpedia.org/ontology/deathPlace> ?v1 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. ?v1 <http://dbpedia.org/property/governor> ""Charlie Baker""@en . }","```sparql
SELECT ?phelanDecedent ?bakerDecedent WHERE {
  # Find William J. Phelan's residence which is a settlement
  ?phelan dbo:residence ?residence .
  ?phelan rdfs:label ""William J. Phelan""@en .
  
  # Ensure the residence is a settlement
  ?residence rdf:type dbo:Settlement .

  # Find person decedent at this residence
  OPTIONAL {
    ?deceased dbo:placeOfBirth ?residence .
    ?deceased dbo:dateOfDeath ?deathDate .
    FILTER EXISTS { ?deceased rdfs:label ?phelanDecedent }
  }

  # Find Charlie Baker's administration which is a region
  ?baker dbo:officeHolder ?administration .
  ?baker rdfs:label ""Charlie Baker""@en .

  # Ensure the administration is a region (e.g., state)
  ?administration rdf:type dbo:AdministrativeRegion .

  # Find person decedent at this administrative region
  OPTIONAL {
    ?deceased2 dbo:placeOfBirth ?adminPlace .
    ?deceased2 dbo:dateOfDeath ?deathDate2 .
    FILTER EXISTS { ?deceased2 rdfs:label ?bakerDecedent }
    FILTER (?adminPlace = ?administration)
  }
}
```",4,6,5,2,2,3,3,71,0,0,4,0,0.0,0
645,20,train,"Give me the commander in Battle of Jarama and military force of the force, that is an event and a military conflict and a societal event, of Francisco Largo Caballero.",SELECT ?result WHERE { <http://dbpedia.org/resource/Battle_of_Jarama> <http://dbpedia.org/ontology/commander> ?result . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?v2 <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Francisco_Largo_Caballero> . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?result <http://dbpedia.org/ontology/battle> ?v2 . },"```sparql
SELECT ?commander ?militaryForce WHERE {
  # Identify Francisco Largo Caballero
  ?caballero rdfs:label ""Francisco Largo Caballero""@en .
  
  # Find the Battle of Jarama and its characteristics
  ?battle rdfs:label ""Battle of Jarama""@en ;
          a dbo:MilitaryConflict, dbo:Event, dbo:SocietalEvent .

  # Identify the commander in the Battle of Jarama
  ?battle dbo:commander ?commander .
  
  # Determine the military force commanded by this individual
  ?commander dbo:militaryForce ?militaryForce .
}
```",3,6,4,2,2,3,3,71,0,0,6,0,0.0,0
773,4,train,Give me the father of Charles the Fat.,SELECT ?result WHERE { <http://dbpedia.org/resource/Charles_the_Fat> <http://dbpedia.org/property/father> ?result . },"```sparql
SELECT ?father WHERE {
  ?charles dbo:parent ?father .
  ?charles rdfs:label ""Charles the Fat""@en .
}
```",1,1,2,1,1,3,3,71,1,1,0,0.5,1.0,0.6666666666666666
98,0,train,Give me the region of Philippine Standard Time.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/timeZone> <http://dbpedia.org/resource/Philippine_Standard_Time> . },"```sparql
SELECT ?region WHERE {
  ?philippines dbo:timeZone ?pst .
  ?pst rdfs:label ""Philippine Standard Time""@en .
  ?philippines rdfs:label ""Philippines""@en .
  ?philippines a dbo:Country .
}
```",1,1,2,1,1,2,3,28,0,0,1874,0,0.0,0
865,30,train,Give me the father of AK Abdul Momen and native of British Raj and father of the child of Abu Ahmad Abdul Hafiz.,SELECT ?result WHERE { ?v1 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Abu_Ahmad_Abdul_Hafiz> . <http://dbpedia.org/resource/AK_Abdul_Momen> <http://dbpedia.org/property/father> ?result . ?v1 <http://dbpedia.org/property/father> ?result . ?result <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/British_Raj> . },"```sparql
SELECT ?fatherOfMomen ?childFather WHERE {
  # Find AK Abdul Momen and his father who is a native of British Raj
  ?momen dbo:parent ?fatherOfMomen .
  ?momen rdfs:label ""AK Abdul Momen""@en .
  
  OPTIONAL {
    ?fatherOfMomen dbo:nativePlace ?nativePlace .
    FILTER (regex(str(?nativePlace), ""British Raj"", ""i""))
  }
  
  # Find Abu Ahmad Abdul Hafiz and his child
  ?hafiz dbo:child ?child .
  ?hafiz rdfs:label ""Abu Ahmad Abdul Hafiz""@en .

  # Find the father of this child
  OPTIONAL {
    ?child dbo:parent ?childFather .
  }
}
```",4,4,5,2,3,3,3,71,0,0,1,0,0.0,0
102,1,train,Give me the native of Dewsbury.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Dewsbury> . },"```sparql
SELECT ?person WHERE {
  ?person dbo:birthPlace dbr:Dewsbury .
}
```

This query selects individuals (`?person`) whose birthplace is linked to Dewsbury in DBpedia. The `dbr:Dewsbury` refers to the DBpedia resource for Dewsbury.",1,1,2,1,1,3,2,20,0,0,100,0,0.0,0
874,4,train,"Give me the band, that is an organisation, of Mark Read (singer).",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/bandMember> <http://dbpedia.org/resource/Mark_Read_(singer)> . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. },"```sparql
SELECT ?band WHERE {
  # Find Mark Read who is a singer
  ?markRead dbo:occupation dbp:Singer .
  ?markRead rdfs:label ""Mark Read""@en .

  # Identify the band he is associated with and ensure it's an organization
  ?markRead dbo:musicalBand ?band .
  ?band rdf:type dbo:MusicalGroup .
  ?band dbo:isPartOf dbp:Organization .
}
```",1,2,2,1,1,3,2,20,0,0,2,0,0.0,0
445,23,train,"Give me the entity in the residence, that is a country, of the resident, that is an athlete, of Great Britain.",SELECT ?result WHERE { ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Athlete>. ?v2 <http://dbpedia.org/property/residence> <http://dbpedia.org/resource/Great_Britain> . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. ?result <http://dbpedia.org/ontology/location> ?v0 . ?v2 <http://dbpedia.org/property/residence> ?v0 . },"```sparql
SELECT ?country WHERE {
  # Find athletes from Great Britain
  ?athlete rdf:type dbo:Athlete .
  ?athlete dbo:nationality dbr:United_Kingdom .
  
  # Determine their residence
  ?athlete dbo:residence ?residence .

  # Ensure the residence is a country
  ?residence rdf:type dbo:Country .
  ?residence rdfs:label ?countryLabel .
  
  # Return the label of the country as the result
  BIND (STR(?residence) AS ?country)
}
```",3,5,4,3,1,3,3,71,4,5,3566,0.4444444444444444,0.0011204481792717086,0.0022352612461581443
826,0,train,Give me the spouse of Anna Magdalena Appel.,SELECT ?result WHERE { <http://dbpedia.org/resource/Anna_Magdalena_Appel> <http://dbpedia.org/ontology/spouse> ?result . },"```sparql
SELECT ?spouse WHERE {
  ?person rdfs:label ""Anna Magdalena Bach""@en .
  ?person dbo:spouse ?spouse .
}
```",1,1,2,1,1,3,3,71,0,1,1,0.0,0.0,0
382,6,train,Give me the landmark at elevation of 100 and birthplace of Björn Joppe.,"SELECT ?result WHERE { <http://dbpedia.org/resource/Björn_Joppe> <http://dbpedia.org/ontology/birthPlace> ?result . ?result <http://dbpedia.org/ontology/elevation> ""100""^^<http://www.w3.org/2001/XMLSchema#integer> . }","```sparql
SELECT ?landmark ?elevation ?birthplace WHERE {
  # Find landmark at elevation 100
  ?landmark dbo:elevation ?elevation .
  FILTER (?elevation = ""100""^^xsd:integer) .

  # Find birthplace of Björn Joppe
  ?bjornJoppe dbo:birthPlace ?birthplace .
  ?bjornJoppe rdfs:label ""Björn Joppe""@en .
}
```",2,2,3,1,2,3,2,20,1,728,0,0.0013717421124828531,1.0,0.0027397260273972603
507,27,train,Give me the professional in the profession of the person born on 1966-02-18.,"SELECT ?result WHERE { ?result <http://dbpedia.org/property/occupation> ?v2 . ?v1 <http://dbpedia.org/ontology/birthDate> ""1966-02-18""^^<http://www.w3.org/2001/XMLSchema#date> . ?v1 <http://dbpedia.org/property/occupation> ?v2 . }","```sparql
SELECT ?professional WHERE {
  # Find the person born on 1966-02-18
  ?person dbo:birthDate ""1966-02-18""^^xsd:date .
  
  # Determine their profession
  ?person dbo:occupation ?profession .

  # Find another professional in that same occupation
  ?professional dbo:occupation ?profession .
  FILTER (?person != ?professional)
}
```",3,3,4,3,1,3,3,71,15064,9323,20539,0.6177061549186041,0.4231104120439289,0.5022170361726954
933,34,train,"Give me the band of the band of the band, that is an artist and a musical artist, of The Ramong Sound and band of The Ramong Sound.",SELECT ?result WHERE { ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. <http://dbpedia.org/resource/The_Ramong_Sound> <http://dbpedia.org/ontology/associatedMusicalArtist> ?v3 . ?v1 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v3 <http://dbpedia.org/ontology/associatedMusicalArtist> ?v1 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. <http://dbpedia.org/resource/The_Ramong_Sound> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . },"```sparql
SELECT ?finalBand WHERE {
  # Step 1: Find The Ramones
  ?ramones dbo:type dbr:Musical_band .
  ?ramones rdfs:label ""The Ramones""@en .

  # Step 2: Find the band of The Ramones
  ?ramones dbo:band ?firstBand .
  ?firstBand a dbo:MusicalArtist ;
             dbo:type dbr:Musical_band .

  # Step 3: Find the band of the first band
  ?firstBand dbo:band ?secondBand .
  ?secondBand a dbo:MusicalArtist ;
              dbo:type dbr:Musical_band .

  # Step 4: Find the band of the second band
  ?secondBand dbo:band ?finalBand .
  ?finalBand a dbo:MusicalArtist ;
             dbo:type dbr:Musical_band .
}
```",4,6,5,3,2,3,3,71,0,0,4,0,0.0,0
773,31,train,Give me the parent of Carloman of Bavaria and spouse of the father of the parent of Bernard (son of Charles the Fat).,SELECT ?result WHERE { ?v0 <http://dbpedia.org/ontology/spouse> ?result . ?v1 <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Bernard_(son_of_Charles_the_Fat)> . ?v1 <http://dbpedia.org/property/father> ?v0 . ?result <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Carloman_of_Bavaria> . },"```sparql
SELECT ?parentOfCarloman ?spouse WHERE {
  # Find Carloman of Bavaria and his parent
  ?carloman dbo:child ?parentOfCarloman .
  ?carloman rdfs:label ""Carloman of Bavaria""@en .

  # Find Bernard (son of Charles the Fat) and his parent
  ?bernard dbo:child ?parentOfBernard .
  ?bernard rdfs:label ""Bernard (son of Charles the Fat)""@en .
  
  # Identify Charles the Fat as Bernard's parent
  ?charlesTheFat dbo:child ?bernard .
  ?charlesTheFat rdfs:label ""Charles the Fat""@en .

  # Find spouse of Bernard’s parent
  ?parentOfBernard dbo:spouse ?spouse .
}
```",4,4,5,3,2,3,3,71,0,0,1,0,0.0,0
216,27,train,"Give me the team of the person born, that is a sports manager and a soccer manager and a soccer player, on the death of Pavel Vezhinov.",SELECT ?result WHERE { ?v2 <http://dbpedia.org/ontology/birthDate> ?v1 . <http://dbpedia.org/resource/Pavel_Vezhinov> <http://dbpedia.org/ontology/deathDate> ?v1 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerManager>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerPlayer>. ?result <http://dbpedia.org/ontology/coach> ?v2 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsManager>. },"```sparql
SELECT ?person ?team WHERE {
  # Find the date of death of Pavel Vezhinov
  ?vezhinov dbo:deathDate ?deathDate .
  ?vezhinov rdfs:label ""Pavel Vezhinov""@en .

  # Find a person born on that date who is a sports manager, soccer manager, and player
  ?person dbo:birthDate ?birthDate ;
          dbo:occupation ?occupation1, ?occupation2, ?occupation3 .
  
  FILTER (?birthDate = ?deathDate)
  FILTER (CONTAINS(LCASE(str(?occupation1)), ""sports manager""))
  FILTER (CONTAINS(LCASE(str(?occupation2)), ""soccer manager""))
  FILTER (CONTAINS(LCASE(str(?occupation3)), ""soccer player""))

  # Find the team associated with this person
  OPTIONAL {
    ?person dbo:team ?team .
  }
}
```",3,6,4,3,1,3,3,71,0,0,1,0,0.0,0
888,13,train,"Give me the commander in the force, that is a societal event and an event, of the military force of War in Donbas (2014–2022).",SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/commander> ?v0 . ?v1 <http://dbpedia.org/ontology/commander> ?result . ?v0 <http://dbpedia.org/ontology/battle> <http://dbpedia.org/resource/War_in_Donbas_(2014–2022)> . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. },"```sparql
SELECT ?commander ?event WHERE {
  # Identify military forces involved in the War in Donbas
  ?force dbo:wikiPageRedirects dbpedia:War_in_Donbass .
  
  # Find commanders of these forces
  ?force dbo:commander ?commander .

  # Check for societal or general events linked to the commander
  OPTIONAL {
    ?event dbo:agent ?commander .
    FILTER (regex(str(?event), ""societal event|event"", ""i""))
  }
}
```",3,5,4,3,1,3,2,20,0,0,110,0,0.0,0
582,15,train,"Give me the residence of the reference, that is a scientist, to Hirotaka Sugawara.","SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Scientist>. ?v1 <http://xmlns.com/foaf/0.1/name> ""Hirotaka Sugawara""@en . ?v1 <http://dbpedia.org/property/residence> ?result . }","```sparql
SELECT ?residence WHERE {
  ?sugawara rdfs:label ""Hirotaka Sugawara""@en .
  ?sugawara a dbo:Scientist .
  ?sugawara dbo:residence ?residence .
}
```",2,3,3,2,1,3,3,71,0,0,2,0,0.0,0
170,16,train,Give me the domain of the profession of John Scholey and entity in Russia.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/leaderTitle> ?v2 . <http://dbpedia.org/resource/John_Scholey> <http://dbpedia.org/property/occupation> ?v2 . ?result <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Russia> . },"```sparql
# Query to find John Scholey's profession and its domain
SELECT ?profession (SAMPLE(?domain) AS ?domainOfProfession) WHERE {
  ?scholey dbo:occupation ?profession .
  ?scholey rdfs:label ""John Scholey""@en .
  
  OPTIONAL { 
    ?profession dbo:fieldOfStudy ?domain .
  }
}

# Query to find an entity in Russia associated with a similar profession
SELECT DISTINCT ?entity WHERE {
  ?entity dbo:country dbr:Russia ;
          dbo:occupation ?similarProfession .
  
  # Assuming we have the domain from the first query, filter by it
  FILTER EXISTS { 
    ?similarProfession dbo:fieldOfStudy ?domainOfProfession .
  }
}
```",3,3,4,2,2,2,3,28,0,0,99,0,0.0,0
987,7,train,"Give me the time zone, that is a sports event, in Canicosa de la Sierra.",SELECT ?result WHERE { <http://dbpedia.org/resource/Canicosa_de_la_Sierra> <http://dbpedia.org/ontology/timeZone> ?result . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsEvent>. },"```sparql
SELECT ?event ?timeZone WHERE {
  # Find sports events in Canicosa de la Sierra
  ?event dbo:location ?place .
  ?place rdfs:label ""Canicosa de la Sierra""@en .
  ?event a dbo:SportsEvent .

  # Get the time zone for Canicosa de la Sierra
  OPTIONAL {
    ?place dbo:timeZone ?timeZone .
  }
}
```",1,2,2,1,1,3,3,71,0,0,2,0,0.0,0
507,38,train,"Give me the professional in the profession of Guy Ferland and director of the movie, that is a movie and a work, with Beryl Reid.",SELECT ?result WHERE { ?v3 <http://dbpedia.org/ontology/director> ?result . ?v3 <http://dbpedia.org/property/starring> <http://dbpedia.org/resource/Beryl_Reid> . <http://dbpedia.org/resource/Guy_Ferland> <http://dbpedia.org/property/occupation> ?v2 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Film>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?result <http://dbpedia.org/property/occupation> ?v2 . },"```sparql
SELECT ?movie WHERE {
  # Identify Guy Ferland's profession
  ?ferland dbo:profession ?profession .
  ?ferland rdfs:label ""Guy Ferland""@en .

  # Check if his profession is director
  FILTER (regex(str(?profession), ""director"", ""i""))

  # Find movies directed by him
  ?ferland dbo:film ?movie .
  
  # Ensure the movie features Beryl Reid
  ?movie dbo:starring ?actor .
  ?actor rdfs:label ""Beryl Reid""@en .
}
```",4,6,5,2,2,3,3,71,0,0,1,0,0.0,0
129,16,train,Give me the associated musical artist of the person born as Tahj Malik Chandler and professional in .,"SELECT ?result WHERE { ?v2 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v2 <http://dbpedia.org/property/birthName> ""Tahj Malik Chandler""@en . ?result <http://dbpedia.org/property/occupation> """"@en . }","```sparql
SELECT ?associatedArtist WHERE {
  ?person foaf:name ""Tahj Malik Chandler""@en .
  ?person dbo:birthName ""Tahj Malik Chandler"" .
  ?person dbo:profession dbr:Rapper .
  ?person dbo:associatedMusicalArtist ?associatedArtist .

  # Filter to ensure the associated artist is Dr. Dre
  FILTER (str(?associatedArtist) = str(dbr:Dr._Dre))
}
```",3,3,4,2,2,2,3,28,0,0,7,0,0.0,0
888,1,train,Give me the awardee of Hero of Ukraine.,"SELECT ?result WHERE { ?result <http://dbpedia.org/property/awards> ""Hero of Ukraine""@en . }","```sparql
SELECT ?awardee WHERE {
  ?awardee dbo:award ""Hero of Ukraine""@en .
}
```",1,1,2,1,1,3,2,20,0,0,14,0,0.0,0
582,32,train,"Give me the player in the father, that is an athlete and a soccer manager and a sports manager, of Masami Nagasawa and reference to the residence of Hirotaka Sugawara.",SELECT ?result WHERE { ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Athlete>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerManager>. ?v3 <http://dbpedia.org/ontology/team> ?result . <http://dbpedia.org/resource/Hirotaka_Sugawara> <http://dbpedia.org/property/residence> ?v1 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsManager>. ?result <http://xmlns.com/foaf/0.1/name> ?v1 . <http://dbpedia.org/resource/Masami_Nagasawa> <http://dbpedia.org/property/father> ?v3 . },"```sparql
# Query to find the player in the father of Masami Nagasawa who is an athlete and a soccer manager and sports manager.
SELECT ?father WHERE {
  ?masami dbo:parent ?father .
  ?masami rdfs:label ""Masami Nagasawa""@en .
  
  # Check if the father is an athlete, soccer manager, and sports manager
  ?father dbo:occupation ?athleteRole .
  ?father dbo:occupation ?soccerManagerRole .
  ?father dbo:occupation ?sportsManagerRole .

  FILTER (
    regex(str(?athleteRole), ""Athlete"", ""i"") &&
    regex(str(?soccerManagerRole), ""Soccer Manager"", ""i"") &&
    regex(str(?sportsManagerRole), ""Sports Manager"", ""i"")
  )
}

# Query to find the residence of Hirotaka Sugawara
SELECT ?residence WHERE {
  ?hirotaka dbo:residence ?residence .
  ?hirotaka rdfs:label ""Hirotaka Sugawara""@en .
}
```",4,7,5,2,2,3,3,71,0,0,1,0,0.0,0
773,29,train,Give me the parent of the successor of Charles the Bald and parent of Charles the Fat and spouse of Louis the German.,SELECT ?result WHERE { <http://dbpedia.org/resource/Charles_the_Bald> <http://dbpedia.org/ontology/successor> ?v3 . <http://dbpedia.org/resource/Charles_the_Fat> <http://dbpedia.org/ontology/parent> ?result . <http://dbpedia.org/resource/Louis_the_German> <http://dbpedia.org/ontology/spouse> ?result . ?result <http://dbpedia.org/ontology/child> ?v3 . },"```sparql
SELECT ?commonParent WHERE {
  # Find the successor of Charles the Bald
  ?charlesBald dbo:succeededBy ?successor .
  ?charlesBald rdfs:label ""Charles the Bald""@en .

  # Find the parent of Charles the Fat
  ?charlesFat dbo:parent ?parentFat .
  ?charlesFat rdfs:label ""Charles the Fat""@en .

  # Find the spouse of Louis the German
  ?louisGerman dbo:spouse ?spouse .
  ?louisGerman rdfs:label ""Louis the German""@en .

  # Find the parent of the spouse of Louis the German
  ?spouse dbo:parent ?parentSpouse .

  # Check for common parent
  VALUES ?commonParent { ?parentFat ?parentSpouse }
}
```",4,4,5,2,3,3,3,71,0,0,1,0,0.0,0
826,23,train,Give me the spouse of the child of the father of Anna Magdalena Appel.,SELECT ?result WHERE { ?v0 <http://dbpedia.org/property/father> ?v2 . ?v0 <http://dbpedia.org/ontology/spouse> ?result . <http://dbpedia.org/resource/Anna_Magdalena_Appel> <http://dbpedia.org/property/father> ?v2 . },"```sparql
SELECT ?spouse WHERE {
  # Identify Anna Magdalena Bach and her father
  ?annaMagdalena rdfs:label ""Anna Magdalena Bach""@en .
  ?annaMagdalena dbo:parent ?father .

  # Find a child of the identified father (Johann Christoph Bach)
  ?child dbo:parent ?father .

  # Identify the spouse of this child
  ?child dbo:spouse ?spouse .
}
```",3,3,4,3,1,3,3,71,0,0,1,0,0.0,0
465,14,train,"Give me the successor of the child, that is a royalty, of Anne of Brittany.",SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v1 <http://dbpedia.org/ontology/successor> ?result . <http://dbpedia.org/resource/Anne_of_Brittany> <http://dbpedia.org/ontology/child> ?v1 . },"```sparql
SELECT ?successor WHERE {
  # Find a child of Anne of Brittany who is royalty
  ?child dbo:parent ""Anne_of_Brittany""@en .
  FILTER EXISTS { ?child rdf:type dbo:Monarch . }
  
  # Find the successor of that royal child
  ?child dbo:successor ?successor .
}
```",2,3,3,2,1,3,3,71,0,0,2,0,0.0,0
573,24,train,"Give me the person decedent at the residence, that is a settlement, of William J. Phelan and parent of John Quincy Adams.",SELECT ?result WHERE { ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. <http://dbpedia.org/resource/John_Quincy_Adams> <http://dbpedia.org/ontology/parent> ?result . ?result <http://dbpedia.org/ontology/deathPlace> ?v2 . <http://dbpedia.org/resource/William_J._Phelan> <http://dbpedia.org/property/residence> ?v2 . },"```sparql
SELECT ?person WHERE {
  # Find William J. Phelan and his residence which is a settlement
  ?phelan rdfs:label ""William J. Phelan""@en .
  ?phelan dbo:residence ?settlement .
  ?settlement rdf:type dbo:Settlement .

  # Find decedents at the settlement
  ?decedent dbo:deceasedAtResidence ?settlement .

  # Find John Quincy Adams and his parent
  ?adams rdfs:label ""John Quincy Adams""@en .
  ?adams dbo:parent ?person .

  # Ensure the person is a decedent at Phelan's residence
  FILTER (?decedent = ?person)
}
```",3,4,4,2,2,3,3,71,0,0,2,0,0.0,0
933,4,train,Who is the band of Alan Warner (musician)?,SELECT ?result WHERE { <http://dbpedia.org/resource/Alan_Warner_(musician)> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . },"```sparql
SELECT ?band WHERE {
  ?alanWarner rdfs:label ""Alan Warner (musician)""@en .
  ?alanWarner dbo:musicalArtist ?band .
}
```",1,1,2,1,1,3,3,71,0,0,10,0,0.0,0
826,1,train,"Give me the successor of Louis II, Grand Duke of Hesse.","SELECT ?result WHERE { <http://dbpedia.org/resource/Louis_II,_Grand_Duke_of_Hesse> <http://dbpedia.org/ontology/successor> ?result . }","```sparql
SELECT ?successor WHERE {
  # Find Louis II, Grand Duke of Hesse
  ?louis2 dbo:spouse ?spouse .
  ?louis2 rdfs:label ""Louis II, Grand Duke of Hesse""@en .

  # Find the successor to Louis II in terms of title
  OPTIONAL {
    ?louis2 dbo:succeededBy ?successor .
  }
}
```",1,1,2,1,1,3,3,71,0,0,1,0,0.0,0
166,7,train,Give me the resting place of the military force of Spanish Civil War.,SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/battle> <http://dbpedia.org/resource/Spanish_Civil_War> . ?v1 <http://dbpedia.org/ontology/restingPlace> ?result . },"```sparql
SELECT ?restingPlace WHERE {
  ?franco dbo:deathPlace ?deathPlace .
  ?franco rdfs:label ""Francisco Franco""@en .
  
  OPTIONAL { 
    ?franco dbo:burialPlace ?restingPlace .
  }
}
```",2,2,3,2,1,3,2,20,0,0,36,0,0.0,0
874,7,train,"Give me the band of the writer, that is an artist and a musical artist, of Mezzanine (album).",SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. <http://dbpedia.org/resource/Mezzanine_(album)> <http://dbpedia.org/property/writer> ?v1 . ?result <http://dbpedia.org/ontology/bandMember> ?v1 . },"```sparql
SELECT ?band WHERE {
  # Identify the album Mezzanine
  ?album dbo:workExample ?song .
  ?album rdfs:label ""Mezzanine""@en .

  # Find the creator of the album who is both an artist and a musical artist
  ?creator dbo:creatorOf ?album ;
           rdf:type dbo:MusicalArtist, dbo:Writer .

  # Determine the band associated with this creator
  ?band dbo:member ?creator .
}
```",2,4,3,2,1,3,2,20,0,0,4,0,0.0,0
83,3,train,"Give me the birthplace, that is a town and Brazilian and a soccer club, of Sandro (footballer, born October 1983).","SELECT ?result WHERE { ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerClub>. <http://dbpedia.org/resource/Sandro_(footballer,_born_October_1983)> <http://dbpedia.org/ontology/birthPlace> ?result . ?result <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Brazil>. ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Town>. }","```sparql
SELECT ?birthPlace ?soccerClub WHERE {
  # Identify the footballer Sandro born in October 1983
  ?sandro dbo:birthDate ?date .
  ?sandro rdfs:label ""Sandro (footballer, born October 1983)""@en .
  
  # Get his birthplace
  ?sandro dbp:birthPlace ?birthPlace .

  # Ensure the birthplace is a town in Brazil
  ?birthPlace dbo:country dbr:Brazil ;
             rdf:type dbo:Settlement .

  # Find if there's a soccer club associated with this place
  OPTIONAL {
    ?soccerClub dbo:location ?birthPlace .
    ?soccerClub rdf:type dbo:SoccerClub .
  }
}
```",1,4,2,1,1,3,2,20,0,0,1,0,0.0,0
445,30,train,Give me the entity in England and death place of Patrick Moore and entity in the award of George H. Cameron.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/country> ?v1 . ?result <http://dbpedia.org/ontology/location> <http://dbpedia.org/resource/England> . <http://dbpedia.org/resource/George_H._Cameron> <http://dbpedia.org/property/awards> ?v1 . <http://dbpedia.org/resource/Patrick_Moore> <http://dbpedia.org/ontology/deathPlace> ?result . },"```sparql
# Query to find an entity in England related to Patrick Moore
SELECT ?entity WHERE {
  ?moore dbo:birthPlace ?place .
  ?moore rdfs:label ""Patrick Moore""@en .
  ?place dbo:country dbr:England .
}

UNION

# Query to find the death place of Patrick Moore
SELECT ?deathPlace WHERE {
  ?moore dbo:deathPlace ?deathPlace .
  ?moore rdfs:label ""Patrick Moore""@en .
}

UNION

# Query to find an entity in the award of George H. Cameron
SELECT ?awardEntity WHERE {
  ?cameron dbo:award ?award .
  ?award dbo:recipient ?cameron .
  ?cameron rdfs:label ""George H. Cameron""@en .
  ?award dbo:entity ?awardEntity .
}
```",4,4,5,2,3,3,3,71,0,0,1,0,0.0,0
216,36,train,"Give me the team of the person born, that is a sports manager and a soccer manager and a soccer player, on the death of Pavel Vezhinov and player in Igor Bišćan.",SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/birthDate> ?v0 . ?result <http://dbpedia.org/ontology/coach> ?v1 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsManager>. <http://dbpedia.org/resource/Igor_Bišćan> <http://dbpedia.org/ontology/team> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerManager>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerPlayer>. <http://dbpedia.org/resource/Pavel_Vezhinov> <http://dbpedia.org/ontology/deathDate> ?v0 . },"```sparql
SELECT ?team WHERE {
  # Find Pavel Vezhinov's death date
  ?vezhinov dbo:deathDate ?deathDate .
  ?vezhinov rdfs:label ""Pavel Vezhinov""@en .

  # Find a person born on the same date as Pavel Vezhinov's death
  ?person dbo:birthDate ?birthDate .
  FILTER (?birthDate = ?deathDate)

  # Ensure this person is a sports manager, soccer manager, and player
  ?person dbo:occupation ?occupation .
  VALUES ?occupation { ""sports manager"" ""soccer manager"" ""soccer player"" }

  # Check if the person was part of Igor Bišćan's team
  ?bišćan dbo:team ?team .
  ?bišćan rdfs:label ""Igor Bišćan""@en .

  # Ensure the person played in the same team as Igor Bišćan
  ?playerTeam dbo:member ?person .
  FILTER (?playerTeam = ?team)
}
```",4,7,5,3,2,3,3,71,0,0,1,0,0.0,0
433,1,train,Give me the associated musical artist of Bill Evans.,SELECT ?result WHERE { <http://dbpedia.org/resource/Bill_Evans> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . },"```sparql
SELECT ?associatedArtist WHERE {
  ?billEvans dbo:associatedMusicalArtist ?associatedArtist .
  ?billEvans rdfs:label ""Bill Evans""@en .
}
```",1,1,2,1,1,3,3,71,13,0,0,1.0,1.0,1.0
433,27,train,Give me the professional in the profession of the writer of Slowhand at 70 – Live at the Royal Albert Hall.,SELECT ?result WHERE { ?result <http://dbpedia.org/property/occupation> ?v2 . ?v1 <http://dbpedia.org/property/occupation> ?v2 . <http://dbpedia.org/resource/Slowhand_at_70_–_Live_at_the_Royal_Albert_Hall> <http://dbpedia.org/property/writer> ?v1 . },"```sparql
SELECT ?otherProfessional WHERE {
  # Identify the album ""Slowhand at 70 – Live at the Royal Albert Hall""
  ?album dbo:artist ?clapton .
  ?album rdfs:label ""Slowhand at 70 – Live at the Royal Albert Hall""@en .

  # Find Eric Clapton's profession
  ?clapton rdf:type dbo:Musician ;
           foaf:name ""Eric Clapton"" .

  # Identify another professional in the same field (musician)
  ?otherProfessional rdf:type dbo:Musician .
  
  FILTER (?otherProfessional != ?clapton) # Ensure it's a different individual
}
```",3,3,4,3,1,3,3,71,0,0,51837,0,0.0,0
976,5,train,"Give me the reference, that is an organisation and a political party and Turkish, to Millet İttifakı.","SELECT ?result WHERE { ?result <http://xmlns.com/foaf/0.1/name> ""Millet İttifakı""@en . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?result <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Turkey>. ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/PoliticalParty>. }","```sparql
SELECT ?entity WHERE {
  # Find entities related to Millet İttifakı
  ?entity rdfs:label ""Millet İttifakı""@tr .
  
  # Ensure it is both an organization and a political party
  ?entity rdf:type dbo:Organization ;
          rdf:type dbo:PoliticalParty .

  # Optional: Check for Turkish description or context
  OPTIONAL { 
    ?entity skos:altLabel ?label .
    FILTER (lang(?label) = ""tr"")
  }
}
```",1,4,2,1,1,3,3,71,0,0,1,0,0.0,0
507,2,train,"Give me the professional in Film director, television director.","SELECT ?result WHERE { ?result <http://dbpedia.org/property/occupation> ""Film director, television director""@en . }","```sparql
SELECT DISTINCT ?person WHERE {
  ?person dbo:filmDirector ?film .
  ?person dbo:televisionDirector ?tv .
}
```",1,1,2,1,1,3,3,71,0,0,38,0,0.0,0
955,3,train,Give me the writer of Don't Forget Your Roots (album).,SELECT ?result WHERE { <http://dbpedia.org/resource/Don't_Forget_Your_Roots_(album)> <http://dbpedia.org/property/writer> ?result . },"```sparql
SELECT ?writer WHERE {
  ?album rdfs:label ""Don't Forget Your Roots""@en .
  ?album dbo:composer ?writer .
}
```",1,1,2,1,1,3,2,20,0,0,19,0,0.0,0
329,5,train,"Give me the birthplace, that is an organisation and a country, of Robert Bates (loyalist).",SELECT ?result WHERE { ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. <http://dbpedia.org/resource/Robert_Bates_(loyalist)> <http://dbpedia.org/ontology/birthPlace> ?result . },"```sparql
SELECT ?birthPlace WHERE {
  ?bates dbo:birthPlace ?birthPlace .
  ?bates rdfs:label ""Robert Bates (loyalist)""@en .
  
  # Ensure the birthplace is both an organization and a country
  ?birthPlace rdf:type dbo:Country .
  ?birthPlace rdf:type dbo:Organization .
}
```",1,3,2,1,1,2,3,28,0,0,1,0,0.0,0
417,33,train,"Give me the child of the father of the leader, that is a royalty, of Colony of Greenland and spouse of Princess Caroline-Mathilde of Denmark.",SELECT ?result WHERE { ?result <http://dbpedia.org/property/father> ?v3 . ?result <http://dbpedia.org/ontology/spouse> <http://dbpedia.org/resource/Princess_Caroline-Mathilde_of_Denmark> . ?v0 <http://dbpedia.org/property/father> ?v3 . <http://dbpedia.org/resource/Colony_of_Greenland> <http://dbpedia.org/property/leader> ?v0 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. },"```sparql
SELECT ?child WHERE {
  # Identify the leader of Colony of Greenland and his father
  ?leader dbo:position ""Governor""@en ;
          dbo:parent ?father .
  ?leader dbo:country dbr:Greenland .

  # Find children of this father
  ?father dbo:child ?child .

  # Identify spouse of Princess Caroline-Mathilde of Denmark
  ?princess rdfs:label ""Princess Caroline-Mathilde of Denmark""@en ;
            dbo:spouse ?spouse .
  
  # Match the child with the spouse
  FILTER (?child = ?spouse)
}
```",4,5,5,3,2,3,3,71,0,0,1,0,0.0,0
582,29,train,"Give me the reference to Japan and figure known as --10-19 and player in the father, that is an athlete and a soccer manager and a sports manager, of Masami Nagasawa.","SELECT ?result WHERE { ?v3 <http://dbpedia.org/ontology/team> ?result . ?result <http://dbpedia.org/property/nickname> ""--10-19""^^<http://www.w3.org/2001/XMLSchema#gMonthDay> . <http://dbpedia.org/resource/Masami_Nagasawa> <http://dbpedia.org/property/father> ?v3 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerManager>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsManager>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Athlete>. ?result <http://xmlns.com/foaf/0.1/name> ""Japan""@en . }","```sparql
SELECT ?father WHERE {
  # Find Masami Nagasawa and her father
  ?nagasawa dbo:parent ?father .
  ?nagasawa rdfs:label ""Masami Nagasawa""@en .

  # Ensure the father is an athlete, soccer manager, and sports manager
  ?father rdf:type dbo:Athlete ;
          dbo:sportManagerRole dbo:SoccerManager ;
          dbo:sportManagerRole dbo:SportsManager .

  # Ensure connection to Japan
  ?father dbo:nationality dbr:Japan .

  # Look for the reference or label matching ""--10-19""
  OPTIONAL {
    ?father rdfs:label ?label .
    FILTER (regex(str(?label), ""--10-19"", ""i""))
  }
}
```",4,7,5,2,3,3,3,71,0,0,1,0,0.0,0
573,33,train,"Give me the person decedent at the residence, that is a settlement, of the professional, that is American, in Politician and person decedent at Massachusetts.","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/deathPlace> ?v3 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. ?v0 <http://dbpedia.org/property/occupation> ""Politician""@en . ?v0 <http://dbpedia.org/ontology/nationality> <http://dbpedia.org/resource/United_States>. ?v0 <http://dbpedia.org/property/residence> ?v3 . ?result <http://dbpedia.org/ontology/deathPlace> <http://dbpedia.org/resource/Massachusetts> . }","```sparql
SELECT DISTINCT ?decedent WHERE {
  # Identify American politicians and their residence that is a settlement
  ?politician dbo:country dbr:United_States ;
              dbo:profession dbr:Politician .
  
  ?politician dbo:residence ?settlementResidence .
  ?settlementResidence rdf:type dbo:Settlement .

  # Find decedent at the politician's residence
  ?decedentAtResidence dbo:placeOfDeath ?settlementResidence ;
                      rdf:type dbo:Person .

  
  # Identify person decedent at Massachusetts
  ?massachusetts dbr:Massachusetts .
  ?decedentInMassachusetts dbo:placeOfDeath ?massachusetts ;
                          rdf:type dbo:Person .

  # Find common decedents or relevant connection
  FILTER (?decedentAtResidence = ?decedentInMassachusetts)
}
```",4,6,5,3,2,3,3,71,0,0,400,0,0.0,0
888,5,train,Give me the award of Oleksandr Syrskyi.,SELECT ?result WHERE { <http://dbpedia.org/resource/Oleksandr_Syrskyi> <http://dbpedia.org/property/awards> ?result . },"```sparql
SELECT ?award WHERE {
  ?person rdfs:label ""Oleksandr Syrskyi""@en .
  ?person dbo:award ?award .
}
```",1,1,2,1,1,3,2,20,0,1,1,0.0,0.0,0
773,17,train,"Give me the child, that is a royalty, of the father, that is an office holder and a royalty, of Carloman of Bavaria.",SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?result <http://dbpedia.org/property/father> ?v1 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. <http://dbpedia.org/resource/Carloman_of_Bavaria> <http://dbpedia.org/property/father> ?v1 . },"```sparql
SELECT ?child WHERE {
  # Identify Carloman of Bavaria
  ?carloman rdfs:label ""Carloman, Duke of Bavaria""@en .
  
  # Find his father who is both a royalty and an office holder
  ?carloman dbo:parent ?father .
  ?father rdf:type dbo:Monarch .
  ?father dbo:officeHolder ?office .

  # Identify the child of this father who is also royalty
  ?father dbo:child ?child .
  ?child rdf:type dbo:Monarch .
}
```",2,5,3,2,1,3,3,71,0,0,3,0,0.0,0
47,8,train,Give me the awardee of Padma Vibhushan.,SELECT ?result WHERE { ?result <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/Padma_Vibhushan> . },"```sparql
SELECT ?awardee WHERE {
  ?award dbo:recipient ?awardee .
  ?award rdfs:label ""Padma Vibhushan""@en .
}
```",1,1,2,1,1,3,3,71,0,0,86,0,0.0,0
527,14,train,"Give me the author of the work, that is a work and a book, of the host of Hyperland.",SELECT ?result WHERE { ?v0 <http://dbpedia.org/property/author> ?result . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?v0 <http://dbpedia.org/property/author> ?v2 . <http://dbpedia.org/resource/Hyperland> <http://dbpedia.org/ontology/presenter> ?v2 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Book>. },"```sparql
SELECT ?author WHERE {
  # Identify Hyperland and its host
  ?hyperland dbo:wikiPageRedirects dbpedia-en:Hyperland .
  ?hyperland dbo:host ?host .

  # Find works by the host that are both a work and a book
  ?work dbo:creator ?host ;
        rdf:type dbo:Book ;
        rdf:type dbo:CreativeWork .

  # Extract author information for these works
  ?work dbo:author ?author .
}
```",3,5,4,3,1,3,2,20,0,0,2,0,0.0,0
527,3,train,"Give me the movie, that is a work and English and a television show, with Bernard Bresslaw.",SELECT ?result WHERE { ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/TelevisionShow>. ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?result <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/United_Kingdom>. ?result <http://dbpedia.org/property/starring> <http://dbpedia.org/resource/Bernard_Bresslaw> . },"```sparql
SELECT ?movie WHERE {
  # Find movies where Bernard Bresslaw is an actor
  ?movie dbo:starringBernardBresslaw _:b .
  
  # Ensure the movie is a film (work)
  ?movie rdf:type dbo:Film .

  # Check if it's also recognized as a television show
  OPTIONAL { 
    ?movie rdf:type dbo:TelevisionShow .
  }

  # Filter for English language works
  FILTER EXISTS {
    ?movie dbo:language dbr:English .
  }
}
```",1,4,2,1,1,3,2,20,0,0,1,0,0.0,0
917,30,train,Give me the child of the father of Kamehameha IV and parent of Albert Kamehameha and child of Kekūanāoʻa.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/parent> <http://dbpedia.org/resource/Kekūanāoʻa> . <http://dbpedia.org/resource/Kamehameha_IV> <http://dbpedia.org/property/father> ?v0 . ?result <http://dbpedia.org/property/father> ?v0 . ?result <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Albert_Kamehameha> . },"```sparql
SELECT ?individual WHERE {
  # Find the father of Kamehameha IV
  ?kamehamehaIV dbo:parent ?father .
  ?kamehamehaIV rdfs:label ""Kamehameha IV""@en .

  # Find a child of this father
  ?child dbo:parent ?father .

  # Identify the parent of Albert Kamehameha
  ?albertParent dbo:child ?individual .
  ?albertParent rdfs:label ""Albert Kamehameha""@en .

  # Find a child of Kekūanāoʻa
  ?kekuanaoaChild dbo:parent wd:Q1234567 .  # Assuming Q1234567 is the DBpedia ID for Kekūanāoʻa
  ?kekuanaoaChild rdfs:label ?individual .

  # Ensure all conditions are met by the same individual
  FILTER (?child = ?individual && ?albertParent = ?individual)
}
```",4,4,5,2,3,3,3,71,0,0,1,0,0.0,0
443,2,train,Give me the birthplace of Carl Larsson.,SELECT ?result WHERE { <http://dbpedia.org/resource/Carl_Larsson> <http://dbpedia.org/ontology/birthPlace> ?result . },"```sparql
SELECT ?birthPlace WHERE {
  ?person rdfs:label ""Carl Larsson""@en .
  ?person dbo:birthPlace ?birthPlace .
}
```",1,1,2,1,1,2,3,28,2,0,0,1.0,1.0,1.0
791,38,train,"Give me the father of the child, that is a royalty, of Emperor Takakura and predecessor of the child of Emperor Takakura.",SELECT ?result WHERE { ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v2 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Emperor_Takakura> . ?result <http://dbpedia.org/ontology/successor> ?v3 . ?v3 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Emperor_Takakura> . ?v2 <http://dbpedia.org/property/father> ?result . },"```sparql
SELECT ?father WHERE {
  # Find a child of Emperor Takakura who is royalty
  ?child dbo:parent ?takakura .
  ?takakura rdfs:label ""Emperor Takakura""@en .
  
  # Ensure the child is royalty (e.g., an emperor or princess)
  FILTER (regex(str(?child), ""Emperor|Princess"", ""i""))

  # Find the predecessor of this royal child
  OPTIONAL {
    ?predecessor dbo:successor ?child .
  }

  # Identify the father of the royal child
  ?child dbo:parent ?father .
}
```",4,5,5,2,2,3,3,71,1,1,0,0.5,1.0,0.6666666666666666
47,34,train,"Give me the office of Ajoy Mukherjee and office of the administration of the commander, that is a politician, in Operation Green Hunt.",SELECT ?result WHERE { ?v1 <http://dbpedia.org/property/governor> ?v2 . <http://dbpedia.org/resource/Ajoy_Mukherjee> <http://dbpedia.org/property/office> ?result . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v1 <http://dbpedia.org/property/office> ?result . <http://dbpedia.org/resource/Operation_Green_Hunt> <http://dbpedia.org/ontology/commander> ?v2 . },"```sparql
SELECT ?mukherjeeOffice ?politician ?operationOffice WHERE {
  # Find Ajoy Mukherjee's office
  ?mukherjee dbo:office ?mukherjeeOffice .
  ?mukherjee rdfs:label ""Ajoy Mukherjee""@en .

  # Find politicians involved in Operation Green Hunt and their offices
  OPTIONAL {
    ?politician dbo:occupation dbc:Politician ;
                dbo:memberOf ?government .
    ?operation dcterms:subject ?politician ;
               rdfs:label ""Operation Green Hunt""@en .
    ?government dbo:office ?operationOffice .
  }
}
```",4,5,5,3,2,3,3,71,0,0,2,0,0.0,0
130,9,train,"Give me the film, that is a soccer club and an organisation, of the native, that is a coach and a college coach, of Madison, Alabama.","SELECT ?result WHERE { ?v0 <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Madison,_Alabama> . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/CollegeCoach>. ?result <http://dbpedia.org/ontology/director> ?v0 . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerClub>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Coach>. ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. }","```sparql
SELECT ?film WHERE {
  # Find person native to Madison, Alabama who is a coach and a college coach
  ?person dbo:nativePlace dbr:Madison,_Alabama ;
          dbo:occupation dbc:Soccer_coaches ;
          dbo:occupation dbc:College_sports_coaches .
  
  # Check if this person is associated with any film that is also a soccer club or organization
  ?film dbo:starring ?person ;
        (dbo:genre dbr:Soccer_clubs OR dbo:genre dbr:Organizations) .

}
```",2,6,3,2,1,3,2,20,0,0,1,0,0.0,0
839,10,train,Give me the band of Matthias Röhr and band of Kevin Russell (musician).,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/bandMember> <http://dbpedia.org/resource/Matthias_Röhr> . <http://dbpedia.org/resource/Kevin_Russell_(musician)> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . },"```sparql
SELECT ?bandMatthias ?bandKevin WHERE {
  # Find the band of Matthias Röhr
  ?matthias foaf:name ""Matthias Röhr""@en .
  ?matthias dbo:member ?bandMatthias .

  # Find the band of Kevin Russell (musician)
  ?kevin foaf:name ""Kevin Russell (musician)""@en .
  ?kevin dbo:member ?bandKevin .
}
```",2,2,3,1,2,3,3,71,0,0,1,0,0.0,0
773,7,train,"Give me the father, that is an office holder and a royalty, of Carloman of Bavaria.",SELECT ?result WHERE { ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. <http://dbpedia.org/resource/Carloman_of_Bavaria> <http://dbpedia.org/property/father> ?result . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. },"```sparql
SELECT ?father WHERE {
  # Find Carloman of Bavaria and his father
  ?carloman dbo:parent ?father .
  ?carloman rdfs:label ""Carloman of Bavaria""@en .

  # Ensure the father is royalty and an office holder
  ?father rdf:type dbo:Monarch .
  ?father rdf:type dbo:OfficeHolder .
}
```",1,3,2,1,1,3,3,71,0,0,1,0,0.0,0
232,3,train,Give me the person born as Emily Katherine Jacques.,"SELECT ?result WHERE { ?result <http://dbpedia.org/property/birthName> ""Emily Katherine Jacques""@en . }","```sparql
SELECT ?person WHERE {
  ?person dbo:birthName ""Emily Katherine Jacques""@en .
}
```",1,1,2,1,1,2,2,9,1,0,0,1.0,1.0,1.0
267,8,train,Give me the person born on the birth date of Dan Cathy.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/birthDate> ?v0 . <http://dbpedia.org/resource/Dan_Cathy> <http://dbpedia.org/ontology/birthDate> ?v0 . },"```sparql
SELECT ?person WHERE {
  # Get Dan Cathy's birth date
  ?danCathy dbo:birthDate ?birthDate .
  ?danCathy rdfs:label ""Dan Cathy""@en .

  # Find other people with the same birth date
  ?person dbo:birthDate ?birthDate .
  FILTER (?person != ?danCathy) # Exclude Dan Cathy himself
}
```",2,2,3,2,1,3,2,20,34,0,1,1.0,0.9714285714285714,0.9855072463768115
124,36,train,"Give me the commander in Mahdist War and military force of the force, that is a societal event and a military conflict, of the person born on 1850-06-24.","SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?v0 <http://dbpedia.org/ontology/birthDate> ""1850-06-24""^^<http://www.w3.org/2001/XMLSchema#date> . ?v1 <http://dbpedia.org/ontology/commander> ?v0 . <http://dbpedia.org/resource/Mahdist_War> <http://dbpedia.org/ontology/commander> ?result . ?result <http://dbpedia.org/ontology/battle> ?v1 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. }","```sparql
SELECT ?commander ?militaryForce WHERE {
  # Step 1: Identify the person born on June 24, 1850
  ?person dbo:birthday ""1850-06-24""^^xsd:date .
  
  # Step 2: Find societal events and military conflicts associated with this person
  OPTIONAL { 
    ?event dbo:agent ?person .
    ?event rdf:type ?eventType .
    FILTER (
      (str(?eventType) = ""societal event"") ||
      (str(?eventType) = ""military conflict"")
    )
  }
  
  # Step 3: Identify the commander in the Mahdist War
  ?mahdistWar dbo:commander ?commander .
  ?mahdistWar rdfs:label ""Mahdist War""@en .

  # Step 4: Find the military force of this commander
  OPTIONAL {
    ?commander dbo:militaryForce ?militaryForce .
  }
}
```",4,6,5,3,2,3,3,71,0,0,3,0,0.0,0
926,24,train,Give me the successor of the child of Ahmed III and child of Ahmed III.,SELECT ?result WHERE { <http://dbpedia.org/resource/Ahmed_III> <http://dbpedia.org/ontology/child> ?result . ?v2 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Ahmed_III> . ?v2 <http://dbpedia.org/ontology/successor> ?result . },"```sparql
SELECT ?successor WHERE {
  # Find a child of Ahmed III
  ?child dbo:parent dbr:Aḥmed_III .
  
  # Find the successor of this child
  ?child dbo:succ ?successor .
}
```",3,3,4,2,2,3,3,71,0,0,1,0,0.0,0
933,18,train,Give me the reference to Alan Warner and band of The Ramong Sound and band of Mike Elliott (saxophonist).,"SELECT ?result WHERE { <http://dbpedia.org/resource/The_Ramong_Sound> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?result <http://xmlns.com/foaf/0.1/name> ""Alan Warner""@en . <http://dbpedia.org/resource/Mike_Elliott_(saxophonist)> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . }","```sparql
SELECT ?alanWarnerBand ?mikeElliottBand WHERE {
  # Find Alan Warner's association with The Ramones Sound
  ?alanWarner dbo:member ?alanWarnerBand .
  ?alanWarner foaf:name ""Alan Warner""@en .
  ?alanWarnerBand rdfs:label ""The Ramones Sound""@en .

  # Find Mike Elliott's band associations as a saxophonist
  ?mikeElliott dbo:member ?mikeElliottBand .
  ?mikeElliott foaf:name ""Mike Elliott (saxophonist)""@en .
}
```",3,3,4,1,3,3,3,71,0,0,1,0,0.0,0
965,28,train,"Give me the spouse of the spouse of Princess Victoria of Hesse and by Rhine and parent of Louise Mountbatten and parent of George Mountbatten, 2nd Marquess of Milford Haven.","SELECT ?result WHERE { <http://dbpedia.org/resource/Louise_Mountbatten> <http://dbpedia.org/ontology/parent> ?result . <http://dbpedia.org/resource/Princess_Victoria_of_Hesse_and_by_Rhine> <http://dbpedia.org/ontology/spouse> ?v1 . ?result <http://dbpedia.org/ontology/spouse> ?v1 . <http://dbpedia.org/resource/George_Mountbatten,_2nd_Marquess_of_Milford_Haven> <http://dbpedia.org/ontology/parent> ?result . }","```sparql
SELECT ?spouse WHERE {
  # Find Princess Victoria's spouse (Prince Louis)
  ?princessVictoria rdfs:label ""Princess Victoria of Hesse and by Rhine""@en .
  ?princessVictoria dbo:spouse ?princeLouis .
  
  # Find Louise Mountbatten and George Mountbatten
  ?louiseMountbatten dbo:parent ?princeLouis ;
                     dbo:parent ?princessVictoria .
  ?georgeMountbatten dbo:parent ?princeLouis ;
                     dbo:parent ?princessVictoria .

  # Find spouse of Edwina Ashley (George Mountbatten)
  ?edwinaAshley rdfs:label ""Edwina Ashley""@en .
  ?edwinaAshley dbo:spouse ?georgeMountbatten .
}
```",4,4,5,2,3,3,3,71,0,0,1,0,0.0,0
933,0,train,Give me the band of Mike Elliott (saxophonist).,SELECT ?result WHERE { <http://dbpedia.org/resource/Mike_Elliott_(saxophonist)> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . },"```sparql
SELECT ?band WHERE {
  ?mikeElliott dbo:saxophonist ""Mike Elliott""@en .
  OPTIONAL { 
    ?mikeElliott dbo:member ?band .
  }
  OPTIONAL {
    ?mikeElliott dbo:band ?band .
  }
}
```",1,1,2,1,1,3,3,71,0,0,8,0,0.0,0
554,6,train,Give me the leader of Portuguese Mozambique and leader of Portuguese São Tomé and Príncipe.,SELECT ?result WHERE { <http://dbpedia.org/resource/Portuguese_São_Tomé_and_Príncipe> <http://dbpedia.org/property/leader> ?result . <http://dbpedia.org/resource/Portuguese_Mozambique> <http://dbpedia.org/property/leader> ?result . },"```sparql
SELECT ?mozambiqueLeader ?saoTomeLeader WHERE {
  # Find the leader of Portuguese Mozambique
  ?mozambique dbo:countryName ""Mozambique""@en .
  ?mozambique dbo:governmentHead ?mozambiqueLeader .

  # Find the leader of Portuguese São Tomé and Príncipe
  ?saoTome dbo:countryName ""São Tomé and Príncipe""@en .
  ?saoTome dbo:governmentHead ?saoTomeLeader .
}
```",2,2,3,1,2,3,2,20,0,0,1,0,0.0,0
933,25,train,"Give me the band of the band, that is a group and a band and an organisation, of Alan Warner (musician) and reference to Alan Warner.","SELECT ?result WHERE { <http://dbpedia.org/resource/Alan_Warner_(musician)> <http://dbpedia.org/ontology/associatedMusicalArtist> ?v0 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Group>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Band>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?result <http://xmlns.com/foaf/0.1/name> ""Alan Warner""@en . ?v0 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . }","```sparql
SELECT ?bandOfTheBand WHERE {
  # Find Alan Warner's associated band
  ?alanWarner dbo:member ?band .
  ?alanWarner rdfs:label ""Alan Warner (musician)""@en .

  # Ensure the band is a group and an organization
  ?band rdf:type dbp:MusicalGroup ;
        rdf:type dbo:Organization .

  # Find if this band is part of another larger band or group that is also an organization
  OPTIONAL {
    ?band dbo:partOf ?bandOfTheBand .
    ?bandOfTheBand rdf:type dbp:MusicalGroup ;
                   rdf:type dbo:Organization .
  }
}
```",3,6,4,2,2,3,3,71,0,0,1,0,0.0,0
865,14,train,Give me the father of the child of Abu Ahmad Abdul Hafiz.,SELECT ?result WHERE { ?v0 <http://dbpedia.org/property/father> ?result . ?v0 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Abu_Ahmad_Abdul_Hafiz> . },"```sparql
SELECT ?father WHERE {
  # Identify Abu Ahmad Abdul Hafiz
  ?abuAhmad dbo:label ""Abu Ahmad Abdul Hafiz""@en .
  
  # Find his child
  ?child dbo:parent ?abuAhmad .
  
  # Find the father of this child
  ?child dbo:parent ?father .
}
```",2,2,3,2,1,3,3,71,0,0,1,0,0.0,0
459,6,train,Give me the governor of Oklahoma and governor of Dana Murphy.,SELECT ?result WHERE { <http://dbpedia.org/resource/Oklahoma> <http://dbpedia.org/property/governor> ?result . <http://dbpedia.org/resource/Dana_Murphy> <http://dbpedia.org/property/governor> ?result . },"```sparql
SELECT ?governor WHERE {
  # Find the current or historical governor of Oklahoma
  ?oklahoma dbo:stateGovernor ?governor .
  ?oklahoma rdfs:label ""Oklahoma""@en .

  OPTIONAL {
    # Attempt to find any information related to Dana Murphy as a governor, if applicable
    ?danaMurphy dbo:governmentRole ?role .
    ?danaMurphy rdfs:label ""Dana Murphy""@en .
    FILTER (regex(str(?role), ""governor"", ""i""))
  }
}
```",2,2,3,1,2,2,3,28,0,0,1,0,0.0,0
5,9,train,"Give me the person born, that is a politician, as the award of Renata Adler.",SELECT ?result WHERE { ?result <http://dbpedia.org/property/birthName> ?v0 . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. <http://dbpedia.org/resource/Renata_Adler> <http://dbpedia.org/property/awards> ?v0 . },"```sparql
SELECT ?person WHERE {
  # Ensure the person has a birth date
  ?person dbo:birthDate ?birthDate .
  
  # Check if the person is a politician
  ?person rdf:type dbo:Politician .

  # Find awards given by Renata Adler to this person
  ?award dbo:recipient ?person ;
         dbo:givenBy ?renataAdler .
  ?renataAdler rdfs:label ""Renata Adler""@en .
}
```",2,3,3,2,1,3,2,20,0,0,169,0,0.0,0
965,31,train,Give me the parent of Louise Mountbatten and spouse of the spouse of the parent of Louise Mountbatten.,SELECT ?result WHERE { <http://dbpedia.org/resource/Louise_Mountbatten> <http://dbpedia.org/ontology/parent> ?result . ?v2 <http://dbpedia.org/ontology/spouse> ?v0 . ?result <http://dbpedia.org/ontology/spouse> ?v0 . <http://dbpedia.org/resource/Louise_Mountbatten> <http://dbpedia.org/ontology/parent> ?v2 . },"```sparql
SELECT ?grandparentSpouse WHERE {
  # Find the parent of Louise Mountbatten
  ?louise dbo:parent ?parent .
  ?louise rdfs:label ""Louise Mountbatten""@en .

  # Find the spouse of this parent
  OPTIONAL { 
    ?parent dbo:spouse ?grandparentSpouse .
  }
}
```",4,4,5,3,2,3,3,71,2,0,0,1.0,1.0,1.0
382,13,train,"Give me the birthplace of the manager, that is a soccer manager and an athlete and a sports manager, of the player in Lukas Kübler.",SELECT ?result WHERE { <http://dbpedia.org/resource/Lukas_Kübler> <http://dbpedia.org/ontology/team> ?v0 . ?v0 <http://dbpedia.org/ontology/manager> ?v1 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsManager>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerManager>. ?v1 <http://dbpedia.org/ontology/birthPlace> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Athlete>. },"```sparql
SELECT ?birthPlace WHERE {
  # Identify Lukas Kübler
  ?player dbo:agent ?lukasKuebler .
  ?lukasKuebler rdfs:label ""Lukas Kübler""@en .

  # Find the manager who is a soccer manager, athlete, and sports manager for Lukas Kübler
  ?manager dbo:employee ?lukasKuebler ;
           rdf:type dbo:SoccerManager ;
           rdf:type dbo:Athlete ;
           rdf:type dbo:SportsManager .
  
  # Retrieve the birthplace of this manager
  ?manager dbo:birthPlace ?birthPlace .
}
```",3,6,4,3,1,3,2,20,0,0,5,0,0.0,0
5,8,train,Give me the entity in the award of Coro de la Pontificia Universidad Católica de Puerto Rico.,SELECT ?result WHERE { <http://dbpedia.org/resource/Coro_de_la_Pontificia_Universidad_Católica_de_Puerto_Rico> <http://dbpedia.org/property/awards> ?v1 . ?result <http://dbpedia.org/ontology/country> ?v1 . },"```sparql
SELECT ?entity WHERE {
  ?award rdfs:label ""Coro de la Pontificia Universidad Católica de Puerto Rico""@en .
  
  # Find recipients of the award
  OPTIONAL { 
    ?award dbo:recipient ?entity .
  }
  
  # Find organizations or people founded by or associated with the award
  OPTIONAL {
    ?award dbo:foundedBy ?entity .
  }

  # Additional properties can be added to find more related entities if needed
}
```",2,2,3,2,1,3,2,20,0,0,20990,0,0.0,0
926,3,train,Give me the spouse of Neşerek Kadın.,SELECT ?result WHERE { <http://dbpedia.org/resource/Neşerek_Kadın> <http://dbpedia.org/ontology/spouse> ?result . },"```sparql
SELECT ?spouse WHERE {
  ?neferkare dbo:spouse ?spouse .
  ?neferkare rdfs:label ""Neşerek Kadın""@en .
}
```",1,1,2,1,1,3,3,71,1,0,0,1.0,1.0,1.0
465,12,train,Give me the successor of Renée of France and spouse of Archduchess Barbara of Austria.,SELECT ?result WHERE { <http://dbpedia.org/resource/Renée_of_France> <http://dbpedia.org/ontology/successor> ?result . ?result <http://dbpedia.org/ontology/spouse> <http://dbpedia.org/resource/Archduchess_Barbara_of_Austria> . },"```sparql
SELECT ?successor ?spouse WHERE {
  # Find the successor of Renée of France
  OPTIONAL {
    ?renee dbo:successor ?successor .
    ?renee rdfs:label ""Renée of France""@en .
  }

  # Find the spouse of Archduchess Barbara of Austria
  OPTIONAL {
    ?barbara dbo:spouse ?spouse .
    ?barbara rdfs:label ""Barbara of Austria, Duchess of Brunswick-Lüneburg""@en .
  }
}
```",2,2,3,1,2,3,3,71,1,0,0,1.0,1.0,1.0
933,11,train,Give me the band of the band of Alan Warner (musician).,SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . <http://dbpedia.org/resource/Alan_Warner_(musician)> <http://dbpedia.org/ontology/associatedMusicalArtist> ?v1 . },"```sparql
SELECT ?mainBand ?subGroup WHERE {
  # Find Alan Warner's main band
  ?alanWarner dbo:musicArtist ?mainBand .
  ?alanWarner rdfs:label ""Alan Warner (musician)""@en .

  # Find sub-groups or associated bands within the main band
  OPTIONAL { 
    ?mainBand dbo:bandMember ?subGroup .
  }
}
```",2,2,3,2,1,3,3,71,0,0,26,0,0.0,0
965,20,train,"Give me the parent of the child, that is a royalty, of Prince Louis of Battenberg and spouse of Prince Louis of Battenberg.",SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v1 <http://dbpedia.org/ontology/parent> ?result . ?result <http://dbpedia.org/ontology/spouse> <http://dbpedia.org/resource/Prince_Louis_of_Battenberg> . ?v1 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Prince_Louis_of_Battenberg> . },"```sparql
SELECT ?royalChildParent ?spouse WHERE {
  # Identify Prince Louis of Battenberg
  ?prince rdfs:label ""Prince Louis of Battenberg""@en .
  
  # Find a child who is royalty
  ?child dbo:parent ?prince ;
         rdf:type ?type .
  FILTER (regex(str(?type), ""Royal"", ""i"")) # Assuming 'Royal' indicates royalty
  
  # Identify the parent of this royal child
  ?child dbo:parent ?royalChildParent .

  # Find the spouse of Prince Louis of Battenberg
  ?prince dbo:spouse ?spouse .
}
```",3,4,4,2,2,3,3,71,1,1,0,0.5,1.0,0.6666666666666666
773,27,train,"Give me the parent of the child, that is a royalty, of the father, that is an office holder and a royalty, of Carloman of Bavaria.",SELECT ?result WHERE { ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v2 <http://dbpedia.org/property/father> ?v1 . <http://dbpedia.org/resource/Carloman_of_Bavaria> <http://dbpedia.org/property/father> ?v1 . ?v2 <http://dbpedia.org/ontology/parent> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. },"```sparql
SELECT ?parent WHERE {
  # Step 1: Identify Carloman of Bavaria
  ?carloman dbo:parent ?father .
  ?carloman rdfs:label ""Carloman of Bavaria""@en .

  # Step 2: Find his father who is both a royalty and an office holder
  ?father rdf:type dbo:Royal ;
          rdf:type dbo:OfficeHolder .

  # Step 3: Identify any child of this father who is royalty
  ?child dbo:parent ?father .
  ?child rdf:type dbo:Royal .

  # Step 4: Find the parent of this royal child
  ?child dbo:parent ?parent .
}
```",3,6,4,3,1,3,3,71,0,0,2,0,0.0,0
917,7,train,"Who is the child, that is a royalty, of Kamehameha III?",SELECT ?result WHERE { <http://dbpedia.org/resource/Kamehameha_III> <http://dbpedia.org/ontology/child> ?result . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. },"```sparql
SELECT ?child WHERE {
  # Identify Kamehameha III and his children
  ?kamehamehaIII dbo:parent ?child .
  ?kamehamehaIII rdfs:label ""Kamehameha III""@en .

  # Ensure the child is royalty, typically indicated by a title or role
  OPTIONAL {
    ?child dbo:title ?title .
    FILTER (regex(str(?title), ""King|Queen|Prince|Princess"", ""i""))
  }
}
```",1,2,2,1,1,3,3,71,0,2,3,0.0,0.0,0
216,4,train,Give me the coach of Croatia national under-21 football team.,SELECT ?result WHERE { <http://dbpedia.org/resource/Croatia_national_under-21_football_team> <http://dbpedia.org/ontology/coach> ?result . },"```sparql
SELECT ?coach WHERE {
  ?team rdfs:label ""Croatia national under-21 football team""@en .
  ?team dbo:coach ?coach .
}
```",1,1,2,1,1,3,3,71,1,0,0,1.0,1.0,1.0
341,3,train,"Give me the work, that is a work and an album, of Serrano.","SELECT ?result WHERE { ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Album>. ?result <http://dbpedia.org/property/writer> ""Serrano""@en . }","```sparql
SELECT ?album WHERE {
  # Find works created by Serrano
  ?work dbo:creator ?serrano .
  ?serrano rdfs:label ""Serrano""@en .

  # Ensure the work is also an album
  ?work rdf:type dbo:Album .

  # Bind the result to ?album for clarity
  BIND(?work AS ?album)
}
```",1,3,2,1,1,2,2,9,0,0,7,0,0.0,0
507,17,train,Give me the profession of the person born on 1966-02-18.,"SELECT ?result WHERE { ?v1 <http://dbpedia.org/property/occupation> ?result . ?v1 <http://dbpedia.org/ontology/birthDate> ""1966-02-18""^^<http://www.w3.org/2001/XMLSchema#date> . }","```sparql
SELECT ?person ?profession WHERE {
  ?person dbo:birthDate ""1966-02-18""^^xsd:date .
  ?person dbo:occupation ?profession .
}
```",2,2,3,2,1,3,3,71,5,12,9,0.29411764705882354,0.35714285714285715,0.3225806451612903
456,4,train,Give me the actor of Pacific Drive.,SELECT ?result WHERE { <http://dbpedia.org/resource/Pacific_Drive> <http://dbpedia.org/property/starring> ?result . },"```sparql
SELECT ?actor WHERE {
  ?movie rdfs:label ""Pacific Drive""@en .
  ?movie dbo:starring ?actor .
}
```",1,1,2,1,1,3,3,71,16,0,6,1.0,0.7272727272727273,0.8421052631578948
459,10,train,"Give me the governor of the administration, that is a politician, of Brad Henry.",SELECT ?result WHERE { ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v0 <http://dbpedia.org/property/governor> ?result . ?v0 <http://dbpedia.org/property/governor> <http://dbpedia.org/resource/Brad_Henry> . },"```sparql
SELECT ?governor WHERE {
  # Identify Brad Henry and find his administration
  ?bradHenry dbo:politicalAffiliation ?administration .
  ?bradHenry rdfs:label ""Brad Henry""@en .

  # Find the governor of that administration
  ?administration dbo:governor ?governor .

  # Ensure the governor is a politician
  ?governor rdf:type dbo:Politician .
}
```",2,3,3,2,1,2,3,28,0,0,10,0,0.0,0
130,14,train,"Give me the entity in the administration, that is American, of the award of Živko Ključe.",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/state> ?v0 . ?v0 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/United_States>. <http://dbpedia.org/resource/Živko_Ključe> <http://dbpedia.org/property/awards> ?v2 . ?v0 <http://dbpedia.org/property/governor> ?v2 . },"```sparql
SELECT ?administration WHERE {
  # Find the award associated with Živko Ključe
  ?award dbo:recipient Živko_Ključe .
  
  # Identify the administration of this award
  ?award dbo:administeredBy ?administration .
  
  # Ensure the administrative entity is American
  ?administration dbo:nationality dbc:United_States_of_America .
}
```",3,4,4,3,1,3,2,20,0,0,26076,0,0.0,0
18,10,train,Give me the parent of the professional in Actress.,"SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/child> ?v1 . ?v1 <http://dbpedia.org/property/occupation> ""Actress""@en . }","```sparql
SELECT ?actress ?parent WHERE {
  # Identify a professional actress, e.g., Meryl Streep
  ?actress rdfs:label ""Meryl Streep""@en .
  
  # Find the parent of the identified actress
  ?actress dbo:parent ?parent .
}
```",2,2,3,2,1,2,3,28,0,0,1063,0,0.0,0
715,38,train,"Give me the leader of the office, that is a government agency and an organisation, of Carlos Franco Iribarnegaray and commander in the force of Francisco Largo Caballero.",SELECT ?result WHERE { ?v3 <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Francisco_Largo_Caballero> . <http://dbpedia.org/resource/Carlos_Franco_Iribarnegaray> <http://dbpedia.org/property/office> ?v2 . ?v2 <http://dbpedia.org/ontology/leader> ?result . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/GovernmentAgency>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?v3 <http://dbpedia.org/ontology/commander> ?result . },"```sparql
SELECT ?leader WHERE {
  # Find the government agency or organization led by Carlos Franco Iribarnegaray
  ?office dbo:leader ?carlosFranco .
  ?carlosFranco rdfs:label ""Carlos Franco Iribarnegaray""@en .

  # Find the military force commanded by Francisco Largo Caballero
  ?force dbo:commander ?franciscoLargo .
  ?franciscoLargo rdfs:label ""Francisco Largo Caballero""@en .

  # Identify a common leader for both roles
  OPTIONAL {
    ?office dbo:leader ?leader .
  }
  
  OPTIONAL {
    ?force dbo:commander ?leader .
  }

  FILTER (?carlosFranco = ?franciscoLargo)
}
```",4,6,5,2,2,3,3,71,0,0,1,0,0.0,0
935,9,train,"Give me the awardee of the award, that is an award, of Syed Sohail Hussain Naqvi.",SELECT ?result WHERE { <http://dbpedia.org/resource/Syed_Sohail_Hussain_Naqvi> <http://dbpedia.org/property/awards> ?v0 . ?result <http://dbpedia.org/property/awards> ?v0 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Award>. },"```sparql
SELECT ?award ?awardee WHERE {
  # Find Syed Sohail Hussain Naqvi and his related awards
  ?naqvi dbo:wikiPageID ""Syed_Sohail_Hussain_Naqvi""@en .
  
  # Identify awards associated with him
  OPTIONAL { 
    ?naqvi dbo:award ?award .
  }
  
  # Find the awardees of these awards
  OPTIONAL {
    ?award dbo:recipient ?awardee .
  }
}
```",2,3,3,2,1,3,2,20,0,0,52,0,0.0,0
791,11,train,"Give me the spouse of the spouse, that is a royalty, of Emperor Takakura.",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/spouse> ?v0 . ?v0 <http://dbpedia.org/ontology/spouse> <http://dbpedia.org/resource/Emperor_Takakura> . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. },"```sparql
SELECT ?grandSpouse WHERE {
  # Find Emperor Takakura and his spouse who is royalty
  ?takakura dbo:spouse ?royalSpouse .
  ?takakura rdfs:label ""Emperor Takakura""@en .
  
  # Ensure the spouse is recognized as royalty (e.g., Imperial Princess)
  FILTER (regex(str(?royalSpouse), ""Imperial Princess"", ""i""))
  
  # Find the spouse of this royal individual
  ?royalSpouse dbo:spouse ?grandSpouse .
}
```",2,3,3,2,1,3,3,71,0,0,1,0,0.0,0
978,6,train,Give me the band member of Chicane (musician) and band member of Enya.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/associatedMusicalArtist> <http://dbpedia.org/resource/Enya> . ?result <http://dbpedia.org/ontology/associatedMusicalArtist> <http://dbpedia.org/resource/Chicane_(musician)> . },"```sparql
# Query for band members of Chicane (musician)
SELECT ?member WHERE {
  ?chicane dbo:bandMember ?member .
  ?chicane rdfs:label ""Chicane""@en .
}

UNION

# Query for band members of Enya
SELECT ?member WHERE {
  ?enya dbo:bandMember ?member .
  ?enya rdfs:label ""Enya""@en .
}
```",2,2,3,1,2,3,2,20,0,0,1,0,0.0,0
216,13,train,Give me the office of the mayor of Ros Bates and party of Campbell Newman.,SELECT ?result WHERE { <http://dbpedia.org/resource/Campbell_Newman> <http://dbpedia.org/ontology/party> ?result . ?v1 <http://dbpedia.org/property/office> ?result . <http://dbpedia.org/resource/Ros_Bates> <http://dbpedia.org/property/leader> ?v1 . },"```sparql
SELECT ?rosBatesOffice ?rosBatesParty ?campbellNewmanParty WHERE {
  # Find Ros Bates' office and party affiliation
  ?rosBates dbo:office ?rosBatesOffice .
  ?rosBates rdfs:label ""Ros Bates""@en .
  
  OPTIONAL { 
    ?rosBates dbo:partyAffiliation ?rosBatesParty .
  }
  
  # Find Campbell Newman's party affiliation
  ?campbellNewman dbo:partyAffiliation ?campbellNewmanParty .
  ?campbellNewman rdfs:label ""Campbell Newman""@en .
}
```",3,3,4,2,2,2,3,28,0,0,1,0,0.0,0
791,33,train,"Give me the predecessor of the child of the child, that is an office holder and a royalty, of Emperor Go-Shirakawa and spouse of Taira no Tokuko.",SELECT ?result WHERE { ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?result <http://dbpedia.org/ontology/successor> ?v3 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v0 <http://dbpedia.org/ontology/parent> <http://dbpedia.org/resource/Emperor_Go-Shirakawa> . ?v3 <http://dbpedia.org/property/father> ?v0 . ?result <http://dbpedia.org/ontology/spouse> <http://dbpedia.org/resource/Taira_no_Tokuko> . },"```sparql
SELECT ?predecessor WHERE {
  # Find Emperor Go-Shirakawa and his spouse Taira no Tokuko
  ?goShirakawa dbo:spouse ?tokuko .
  ?goShirakawa rdfs:label ""Emperor Go-Shirakawa""@en .
  ?tokuko rdfs:label ""Taira no Tokuko""@en .

  # Find their child
  OPTIONAL { 
    ?child dbo:parent ?goShirakawa ;
           dbo:parent ?tokuko .
  }

  # Find the grandchild (child of the first child)
  OPTIONAL {
    ?grandChild dbo:parent ?child .
  }

  # Ensure the grandchild is an office holder and royalty
  FILTER EXISTS { 
    ?grandChild dbo:officeHolder true .
    ?grandChild dbo:royalty true .
  }

  # Find the predecessor of this grandchild
  OPTIONAL {
    ?predecessor dbo:predecessor ?grandChild .
  }
}
```",4,6,5,3,2,3,3,71,0,0,1,0,0.0,0
433,26,train,"Give me the associated musical artist of the associated musical artist, that is an artist and a musical artist, of the associated musical artist, that is a musical artist and an artist, of Ornette Coleman.",SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. ?v2 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v1 <http://dbpedia.org/ontology/associatedMusicalArtist> ?v2 . <http://dbpedia.org/resource/Ornette_Coleman> <http://dbpedia.org/ontology/associatedMusicalArtist> ?v1 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. },"```sparql
SELECT ?finalAssociatedArtist WHERE {
  # Step 1: Find an associated musical artist of Ornette Coleman who is also a musical artist
  ?firstArtist dbo:associatedMusicalArtistOrnetteColeman dbp:musicalArtist true .
  
  # Step 2: From the first artist, find another associated musical artist who is both an artist and a musical artist
  ?secondArtist dbo:associatedMusicalArtist ?firstArtist .
  ?secondArtist rdf:type dbo:Artist ;
                dbo:musicalArtist true .

  # Step 3: Find the associated musical artist of this second artist
  ?finalAssociatedArtist dbo:associatedMusicalArtist ?secondArtist .
}
```",3,7,4,3,1,3,3,71,0,0,117,0,0.0,0
606,1,train,Give me the birthplace of Charles I. Barber.,SELECT ?result WHERE { <http://dbpedia.org/resource/Charles_I._Barber> <http://dbpedia.org/ontology/birthPlace> ?result . },"```sparql
SELECT ?birthPlace WHERE {
  ?barber rdfs:label ""Charles I. Barber""@en .
  ?barber dbo:birthPlace ?birthPlace .
}
```",1,1,2,1,1,3,2,20,1,0,0,1.0,1.0,1.0
326,3,train,Give me the profession of Susanne Lewis.,SELECT ?result WHERE { <http://dbpedia.org/resource/Susanne_Lewis> <http://dbpedia.org/property/occupation> ?result . },"```sparql
SELECT ?profession WHERE {
  ?person rdfs:label ""Susanne Lewis""@en .
  ?person dbo:occupation ?profession .
}
```",1,1,2,1,1,2,2,9,2,0,0,1.0,1.0,1.0
329,10,train,"Give me the entity in the region, that is a country, of Western European Time.",SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. ?result <http://dbpedia.org/ontology/country> ?v1 . ?v1 <http://dbpedia.org/property/timeZone> <http://dbpedia.org/resource/Western_European_Time> . },"```sparql
SELECT ?country WHERE {
  # Find the region associated with Western European Time
  ?region dbo:timeZone dbr:Western_European_Time .
  
  # Find countries in this region
  ?country dbo:locatedInRegion ?region ;
           a dbo:Country .
}
```",2,3,3,2,1,2,3,28,0,0,46363,0,0.0,0
645,18,train,Give me the commander in Battle of Jarama and military force of Spanish Civil War and leader of Ministry of the Army (Spain).,SELECT ?result WHERE { <http://dbpedia.org/resource/Battle_of_Jarama> <http://dbpedia.org/ontology/commander> ?result . ?result <http://dbpedia.org/ontology/battle> <http://dbpedia.org/resource/Spanish_Civil_War> . <http://dbpedia.org/resource/Ministry_of_the_Army_(Spain)> <http://dbpedia.org/ontology/leader> ?result . },"```sparql
# Query to find the commander in Battle of Jarama
SELECT ?commander WHERE {
  ?battle dbo:participatedInMilitaryConflict dbr:Spanish_Civil_War .
  ?battle rdfs:label ""Battle of Jarama""@en .
  ?battle dbo:militaryCommander ?commander .
}

# Query to find a military force in the Spanish Civil War
SELECT ?militaryForce WHERE {
  ?force dbo:participatedInMilitaryConflict dbr:Spanish_Civil_War .
  ?force rdfs:label ?label .
  FILTER (lang(?label) = ""en"")
}

# Query to find the leader of Ministry of the Army in Spain
SELECT ?leader WHERE {
  ?ministry a dbo:GovernmentMinistry ;
            dbo:country dbr:Spain ;
            dbo:minister ?leader .
  ?ministry rdfs:label ""Ministry of the Army (Spain)""@en .
}
```",3,3,4,1,3,3,3,71,0,0,1,0,0.0,0
382,4,train,"Give me the reference, that is a college coach and a coach, to Harry Combes.","SELECT ?result WHERE { ?result <http://xmlns.com/foaf/0.1/name> ""Harry Combes""@en . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Coach>. ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/CollegeCoach>. }","```sparql
SELECT ?relatedEntity WHERE {
  # Find entities related to Harry Combes
  ?combes dbo:wikiPageRedirects dbpedia:Harry_Combes .
  
  # Identify individuals associated with him in coaching roles
  ?relatedEntity dbo:occupation ?occupation .
  ?relatedEntity dbo:associatedWith ?combes .

  # Filter for those who are both a college coach and a general coach
  VALUES ?occupation {
    ""college coach"" 
    ""coach""
  }
  
  # Ensure the entity is associated with both roles
  FILTER (count(DISTINCT ?occupation) = 2)
}
```",1,3,2,1,1,3,2,20,0,0,1,0,0.0,0
47,13,train,Give me the office of the awardee of Banga Bhushan.,SELECT ?result WHERE { ?v1 <http://dbpedia.org/property/office> ?result . ?v1 <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/Banga_Bhushan> . },"```sparql
SELECT ?awardee ?office WHERE {
  ?award dbo:recipient ?awardee .
  ?award rdfs:label ""Banga Bhushan Award""@en .
  
  OPTIONAL { 
    ?awardee dbo:office ?office .
  }
}
```",2,2,3,2,1,3,3,71,0,0,1,0,0.0,0
955,5,train,"Who is the band member, that is a musical artist and an artist, of Street Dogs?",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/associatedMusicalArtist> <http://dbpedia.org/resource/Street_Dogs> . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. },"```sparql
SELECT ?member WHERE {
  # Find Street Dogs band
  ?band dbo:genre dbc:Street_Dogs .
  
  # Retrieve members of the band
  ?band dbo:member ?member .

  # Check if member is both a musical artist and an artist
  ?member dbo:occupation dbc:Musical_Artist ;
          dbo:occupation dbc:Artist .
}
```",1,3,2,1,1,3,2,20,0,0,2,0,0.0,0
917,22,train,Give me the parent of Albert Kamehameha and child of the father of Kamehameha IV.,SELECT ?result WHERE { <http://dbpedia.org/resource/Kamehameha_IV> <http://dbpedia.org/property/father> ?v0 . ?result <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Albert_Kamehameha> . ?result <http://dbpedia.org/property/father> ?v0 . },"```sparql
SELECT ?parent ?child WHERE {
  # Find Albert Kamehameha's parent
  ?albert dbo:parent ?parent .
  ?albert rdfs:label ""Albert Kamehameha""@en .

  # Find Kamehameha IV and his father
  OPTIONAL {
    ?kamehamehaIV dbo:parent ?father .
    ?kamehamehaIV rdfs:label ""Kamehameha IV""@en .

    # Find the child of Kamehameha IV's father
    OPTIONAL {
      ?child dbo:parent ?father .
    }
  }
}
```",3,3,4,2,2,3,3,71,1,6,0,0.14285714285714285,1.0,0.25
917,17,train,"Give me the father of the child, that is a royalty, of Kamehameha III.",SELECT ?result WHERE { ?v0 <http://dbpedia.org/property/father> ?result . <http://dbpedia.org/resource/Kamehameha_III> <http://dbpedia.org/ontology/child> ?v0 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. },"```sparql
SELECT ?father WHERE {
  # Find Kamehameha III and his children
  ?kamehamehaIII dbo:child ?child .
  ?kamehamehaIII rdfs:label ""Kamehameha III""@en .

  # Ensure the child is recognized as royalty (e.g., by title or role)
  OPTIONAL {
    ?child dbo:title ?title .
    FILTER regex(str(?title), ""King|Queen|Prince|Princess"", ""i"")
  }

  # Find father of the royal child
  ?child dbo:parent ?father .
}
```",2,3,3,2,1,3,3,71,1,3,1,0.25,0.5,0.3333333333333333
83,6,train,"Give me the player in the person born, that is an athlete, on 1991-11-19.","SELECT ?result WHERE { ?v0 <http://dbpedia.org/ontology/team> ?result . ?v0 <http://dbpedia.org/ontology/birthDate> ""1991-11-19""^^<http://www.w3.org/2001/XMLSchema#date> . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Athlete>. }","```sparql
SELECT ?person WHERE {
  ?person dbo:birthDate ""1991-11-19""^^xsd:date .
  ?person rdf:type ?type .
  FILTER (
    EXISTS { 
      ?type rdfs:label ?label .
      FILTER (CONTAINS(LCASE(?label), ""athlete""))
    }
  )
}
```",2,3,3,2,1,2,2,9,0,30,91,0.0,0.0,0
933,21,train,Give me the band of The Ramong Sound and band of the band of Alan Warner (musician).,SELECT ?result WHERE { <http://dbpedia.org/resource/The_Ramong_Sound> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v2 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . <http://dbpedia.org/resource/Alan_Warner_(musician)> <http://dbpedia.org/ontology/associatedMusicalArtist> ?v2 . },"```sparql
SELECT ?ramonesBand ?alanWarnerBand ?bandOfAlanWarnerBand WHERE {
  # Get the band of The Ramones
  ?ramones dbo:bandName ?ramonesBand .
  ?ramones rdfs:label ""The Ramones""@en .

  # Get the band(s) associated with Alan Warner (musician)
  ?alanWarner dbo:memberOfBand ?alanWarnerBand .
  ?alanWarner rdfs:label ""Alan Warner (musician)""@en .

  # Get the band of the band associated with Alan Warner
  OPTIONAL {
    ?alanWarnerBand dbo:bandName ?bandOfAlanWarnerBand .
  }
}
```",3,3,4,2,2,3,3,71,0,0,4,0,0.0,0
47,35,train,Give me the office of the administration of Jagdeep Dhankhar and office of the awardee of Padma Vibhushan.,SELECT ?result WHERE { ?v2 <http://dbpedia.org/property/governor> <http://dbpedia.org/resource/Jagdeep_Dhankhar> . ?v1 <http://dbpedia.org/property/office> ?result . ?v1 <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/Padma_Vibhushan> . ?v2 <http://dbpedia.org/property/office> ?result . },"```sparql
SELECT ?jagdeepOffice ?awardeeName ?awardeeOffice WHERE {
  # Find the office of Jagdeep Dhankhar
  ?dhankhar dbo:office ?jagdeepOffice .
  ?dhankhar rdfs:label ""Jagdeep Dhankhar""@en .

  # Find an individual who has received the Padma Vibhushan award and their office
  ?awardee dbo:awardReceived ?padmaVibhushan .
  ?awardee rdfs:label ?awardeeName .
  ?awardee dbo:office ?awardeeOffice .

  # Define the Padma Vibhushan award
  ?padmaVibhushan rdfs:label ""Padma Vibhushan""@en .
}
```",4,4,5,2,2,3,3,71,0,0,6,0,0.0,0
417,15,train,"Who is the parent, that is a royalty, of the child of Knud, Hereditary Prince of Denmark?","SELECT ?result WHERE { ?v1 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Knud,_Hereditary_Prince_of_Denmark> . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?result <http://dbpedia.org/ontology/child> ?v1 . }","```sparql
SELECT ?parent WHERE {
  # Identify Knud, Hereditary Prince of Denmark
  ?knud rdfs:label ""Knud, Hereditary Prince of Denmark""@en .
  
  # Find the child of Knud
  ?knud dbo:child ?child .

  # Determine the parent of this child
  ?child dbo:parent ?parent .

  # Ensure the parent is royalty
  OPTIONAL { 
    ?parent dbo:royalTitle ?title .
  }
}
```",2,3,3,2,1,3,3,71,2,0,0,1.0,1.0,1.0
129,13,train,Give me the associated musical artist of EarthGang and professional in the mayor of 1999 West Dunbartonshire Council election.,SELECT ?result WHERE { <http://dbpedia.org/resource/1999_West_Dunbartonshire_Council_election> <http://dbpedia.org/property/leader> ?v1 . ?result <http://dbpedia.org/property/occupation> ?v1 . <http://dbpedia.org/resource/EarthGang> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . },"```sparql
# Query to find the associated musical artist of EarthGang
SELECT ?associatedArtist WHERE {
  ?earthGang dbo:associatedMusicalArtist ?associatedArtist .
  ?earthGang rdfs:label ""EarthGang""@en .
}

# Query to find professionals in the 1999 West Dunbartonshire Council election
SELECT ?professional WHERE {
  ?election dbo:participant ?professional .
  ?election rdfs:label ""West Dunbartonshire Council election, 1999""@en .
}

# Check for any commonality between the associated artist and the professional
SELECT DISTINCT ?commonEntity WHERE {
  VALUES ?entity { ?associatedArtist ?professional }
  
  # Check if the entity is both an associated artist of EarthGang and a professional in the election
  OPTIONAL { ?earthGang dbo:associatedMusicalArtist ?entity . ?earthGang rdfs:label ""EarthGang""@en . }
  OPTIONAL { ?election dbo:participant ?entity . ?election rdfs:label ""West Dunbartonshire Council election, 1999""@en . }
}
```",3,3,4,2,2,2,3,28,0,0,3,0,0.0,0
36,2,train,Give me the person born as Ayo Makun.,"SELECT ?result WHERE { ?result <http://dbpedia.org/property/birthName> ""Ayo Makun""@en . }","```sparql
SELECT ?person ?fullName WHERE {
  ?person dbo:birthName ""Ayo Makun""@en .
  OPTIONAL { ?person rdfs:label ?fullName . FILTER(LANG(?fullName) = 'en') }
}
```",1,1,2,1,1,2,3,28,1,1,0,0.5,1.0,0.6666666666666666
773,13,train,Give me the parent of the successor of Charles the Bald.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/child> ?v1 . <http://dbpedia.org/resource/Charles_the_Bald> <http://dbpedia.org/ontology/successor> ?v1 . },"```sparql
SELECT ?parent WHERE {
  # Find Charles the Bald and his successor
  ?charles dbo:successor ?successor .
  ?charles rdfs:label ""Charles the Bald""@en .

  # Find the parent of the successor
  ?successor dbo:parent ?parent .
}
```",2,2,3,2,1,3,3,71,2,0,0,1.0,1.0,1.0
445,38,train,Give me the entity in the award of George H. Cameron and death place of the awardee of Royal Astronomical Society.,SELECT ?result WHERE { ?v3 <http://dbpedia.org/ontology/deathPlace> ?result . ?v3 <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/Royal_Astronomical_Society> . <http://dbpedia.org/resource/George_H._Cameron> <http://dbpedia.org/property/awards> ?v2 . ?result <http://dbpedia.org/ontology/country> ?v2 . },"```sparql
SELECT ?award ?deathPlace WHERE {
  # Find the award associated with George H. Cameron
  ?cameron dbo:award ?award .
  ?cameron rdfs:label ""George H. Cameron""@en .

  # Find an awardee of the Royal Astronomical Society
  OPTIONAL {
    ?awardee dbo:award ?award .
    ?awardee dbo:awardReceivedBy ?rasAward .
    ?rasAward dbo:recipient ?awardee .
    ?rasAward rdfs:label ""Royal Astronomical Society""@en .
  }

  # Find the death place of the awardee
  OPTIONAL {
    ?awardee dbo:deathPlace ?deathPlace .
  }
}
```",4,4,5,2,2,3,3,71,2,54439,0,3.673701805624438e-05,1.0,7.347133699465496e-05
773,10,train,Give me the parent of Charles the Fat and spouse of Louis the German.,SELECT ?result WHERE { <http://dbpedia.org/resource/Charles_the_Fat> <http://dbpedia.org/ontology/parent> ?result . <http://dbpedia.org/resource/Louis_the_German> <http://dbpedia.org/ontology/spouse> ?result . },"```sparql
SELECT ?parentOfCharlesFat ?spouseOfLouisGerman WHERE {
  # Find the parent of Charles the Fat
  ?charlesFat dbo:parent ?parentOfCharlesFat .
  ?charlesFat rdfs:label ""Charles the Fat""@en .

  # Find the spouse of Louis the German
  ?louisGerman dbo:spouse ?spouseOfLouisGerman .
  ?louisGerman rdfs:label ""Louis the German""@en .
}
```",2,2,3,1,2,3,3,71,1,1,0,0.5,1.0,0.6666666666666666
715,29,train,Give me the commander in the force of Francisco Largo Caballero and leader of Ministry of the Air (Spain) and commander in Rif War.,SELECT ?result WHERE { <http://dbpedia.org/resource/Rif_War> <http://dbpedia.org/ontology/commander> ?result . ?v3 <http://dbpedia.org/ontology/commander> ?result . ?v3 <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Francisco_Largo_Caballero> . <http://dbpedia.org/resource/Ministry_of_the_Air_(Spain)> <http://dbpedia.org/ontology/leader> ?result . },"```sparql
SELECT ?person WHERE {
  # Find commander under Francisco Largo Caballero
  ?caballero dbo:commander ?person .
  ?caballero rdfs:label ""Francisco Largo Caballero""@en .

  # Find leader of Ministry of the Air (Spain)
  OPTIONAL { 
    ?ministry dbo:leader ?person .
    ?ministry rdfs:label ""Ministry of the Air (Spain)""@en .
  }

  # Find commander in Rif War
  OPTIONAL {
    ?rifWar dbo:commander ?person .
    ?rifWar rdfs:label ""Rif War""@en .
  }
}
```",4,4,5,2,3,3,3,71,0,0,1,0,0.0,0
976,23,train,"Give me the office of the leader, that is a politician, of the administration, that is an organisation, of Kemal Kılıçdaroğlu.",SELECT ?result WHERE { ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v1 <http://dbpedia.org/property/leader> <http://dbpedia.org/resource/Kemal_Kılıçdaroğlu> . ?v1 <http://dbpedia.org/ontology/leader> ?v2 . ?v2 <http://dbpedia.org/property/office> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. },"```sparql
SELECT ?office WHERE {
  # Find Kemal Kılıçdaroğlu in DBpedia
  ?kemal a dbo:Person ;
         rdfs:label ""Kemal Kılıçdaroğlu""@en .
  
  # Identify the organization he leads as a politician
  OPTIONAL { 
    ?kemal dbo:positionHeld ?office .
    ?office dbo:organization ?administration .
    FILTER (regex(str(?administration), ""Republican People's Party"", ""i""))
  }
}
```",3,5,4,3,1,3,3,71,0,0,13,0,0.0,0
826,29,train,"Give me the predecessor of Louis IV, Grand Duke of Hesse and successor of the child, that is a royalty, of Louis I, Grand Duke of Hesse and spouse of Anna Magdalena Appel.","SELECT ?result WHERE { ?v3 <http://dbpedia.org/ontology/successor> ?result . ?result <http://dbpedia.org/ontology/successor> <http://dbpedia.org/resource/Louis_IV,_Grand_Duke_of_Hesse> . <http://dbpedia.org/resource/Anna_Magdalena_Appel> <http://dbpedia.org/ontology/spouse> ?result . <http://dbpedia.org/resource/Louis_I,_Grand_Duke_of_Hesse> <http://dbpedia.org/ontology/child> ?v3 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. }","```sparql
SELECT ?predecessor ?successor WHERE {
  # Find Louis IV and his predecessor
  ?louisIV dbo:predecessor ?predecessor .
  ?louisIV rdfs:label ""Louis IV, Grand Duke of Hesse""@en .

  # Identify a royal child of Louis I who is married to Anna Magdalena Appel
  OPTIONAL {
    ?louisI dbo:child ?royalChild .
    ?louisI rdfs:label ""Louis I, Grand Duke of Hesse""@en .
    ?royalChild dbo:spouse ?annaMagdalenaAppel .
    ?annaMagdalenaAppel rdfs:label ""Anna Magdalena Appel""@en .
  }

  # Find the successor of this royal child
  OPTIONAL {
    ?royalChild dbo:successor ?successor .
  }
}
```",4,5,5,2,3,3,3,71,1,190966,0,5.236506831023161e-06,1.0,1.0472958820325918e-05
865,39,train,Give me the father of the child of the father of Abul Maal Abdul Muhith and father of AK Abdul Momen.,SELECT ?result WHERE { ?v0 <http://dbpedia.org/property/father> ?result . ?v0 <http://dbpedia.org/property/father> ?v3 . <http://dbpedia.org/resource/AK_Abdul_Momen> <http://dbpedia.org/property/father> ?result . <http://dbpedia.org/resource/Abul_Maal_Abdul_Muhith> <http://dbpedia.org/property/father> ?v3 . },"```sparql
SELECT ?commonFather WHERE {
  # Father of Abul Maal Abdul Muhith
  ?muhith dbo:parent ?fatherMuhith .
  ?muhith rdfs:label ""Abul Maal Abdul Muhith""@en .

  # Father of AK Abdul Momen
  ?momen dbo:parent ?fatherMomen .
  ?momen rdfs:label ""AK Abdul Momen""@en .

  # Common father of both fathers
  ?fatherMuhith dbo:parent ?commonFather .
  ?fatherMomen dbo:parent ?commonFather .
}
```",4,4,5,3,2,3,3,71,0,0,1,0,0.0,0
442,0,train,Give me the resting place of Allyn K. Capron.,SELECT ?result WHERE { <http://dbpedia.org/resource/Allyn_K._Capron> <http://dbpedia.org/ontology/restingPlace> ?result . },"```sparql
SELECT ?restingPlace WHERE {
  ?person rdfs:label ""Allyn K. Capron""@en .
  OPTIONAL { 
    ?person dbo:burialPlace ?restingPlace .
  }
}
```",1,1,2,1,1,2,2,9,0,0,1,0,0.0,0
124,23,train,"Give me the commander in the war, that is a societal event and a military conflict, of the reference, that is Australian and an organisation and a military unit, to 'A' Battery, Royal Australian Artillery.","SELECT ?result WHERE { ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?v2 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Australia>. ?v0 <http://dbpedia.org/ontology/commander> ?result . ?v2 <http://dbpedia.org/ontology/battle> ?v0 . ?v2 <http://xmlns.com/foaf/0.1/name> ""'A' Battery, Royal Australian Artillery""@en . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryUnit>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. }","```sparql
SELECT DISTINCT ?war ?commander WHERE {
  # Identify 'A' Battery, Royal Australian Artillery
  ?battery rdfs:label ""A Battery, Royal Australian Artillery""@en .
  
  # Find wars that 'A' Battery participated in
  ?battery dbo:militaryConflict ?war .
  ?war a dbo:MilitaryConflict ;
       a dbo:SocietalEvent .

  # Retrieve the commander of these wars
  ?war dbo:commander ?commander .
}
```",3,8,4,3,1,3,3,71,0,0,109,0,0.0,0
236,0,train,Give me the party member of Federalist Party.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/party> <http://dbpedia.org/resource/Federalist_Party> . },"```sparql
SELECT ?person WHERE {
  ?person dbo:memberOf dbr:Federalist_Party .
  FILTER (lang(?personLabel) = 'en')
}
```",1,1,2,1,1,3,2,20,0,0,269,0,0.0,0
865,1,train,Give me the father of AK Abdul Momen.,SELECT ?result WHERE { <http://dbpedia.org/resource/AK_Abdul_Momen> <http://dbpedia.org/property/father> ?result . },"```sparql
SELECT ?father WHERE {
  ?person rdfs:label ""AK Abdul Momen""@en .
  ?person dbo:parent ?father .
}
```",1,1,2,1,1,3,3,71,0,0,1,0,0.0,0
83,2,train,Who is the person born on 1995-07-07?,"SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/birthDate> ""1995-07-07""^^<http://www.w3.org/2001/XMLSchema#date> . }","```sparql
SELECT ?person ?label WHERE {
  ?person rdf:type dbo:Person .
  ?person rdfs:label ?label .
  ?person dbo:birthDate ""1995-07-07""^^xsd:date .
}
```",1,1,2,1,1,2,2,9,34,34,0,0.5,1.0,0.6666666666666666
579,13,train,"Give me the native of the residence, that is English and a settlement, of the resident of Scotland.",SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/United_Kingdom>. ?v0 <http://dbpedia.org/property/residence> ?v1 . ?result <http://dbpedia.org/ontology/birthPlace> ?v1 . ?v0 <http://dbpedia.org/ontology/residence> <http://dbpedia.org/resource/Scotland> . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. },"```sparql
SELECT ?native WHERE {
  # Find a notable resident of Scotland
  ?resident dbo:birthPlace ?scotland .
  ?scotland rdfs:label ""Scotland""@en .

  # Identify their residence in England
  ?resident dbo:residence ?englishSettlement .
  ?englishSettlement rdf:type dbo:Settlement .
  ?englishSettlement dbo:country dbc:England .

  # Find the native of this English settlement
  ?native dbo:nativePlace ?englishSettlement .
}
```",3,5,4,3,1,3,2,20,0,0,5279,0,0.0,0
645,10,train,Give me the commander in Battle of Jarama and leader of Ministry of the Army (Spain).,SELECT ?result WHERE { <http://dbpedia.org/resource/Ministry_of_the_Army_(Spain)> <http://dbpedia.org/ontology/leader> ?result . <http://dbpedia.org/resource/Battle_of_Jarama> <http://dbpedia.org/ontology/commander> ?result . },"```sparql
SELECT ?person WHERE {
  # Find commander in Battle of Jarama
  ?battle dbo:commander ?person .
  ?battle rdfs:label ""Battle of Jarama""@en .

  # Find leader of Ministry of the Army (Spain)
  OPTIONAL {
    ?ministry dbo:headOfState ?person .
    ?ministry rdfs:label ""Ministry of the Army (Spain)""@en .
  }
}
```",2,2,3,1,2,3,3,71,1,9,0,0.1,1.0,0.18181818181818182
456,5,train,"Give me the reference, that is a fictional character, to Lamont Cranston (radio, film and television).","SELECT ?result WHERE { ?result <http://xmlns.com/foaf/0.1/name> ""Lamont Cranston (radio, film and television)""@en . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/FictionalCharacter>. }","```sparql
SELECT ?character WHERE {
  # Find the entity for Lamont Cranston
  ?cranston dbo:alias ""Lamont Cranston""@en .
  
  # Identify the fictional character associated with Lamont Cranston
  ?cranston dbo:fictionalCharacter ?character .
}
```",1,2,2,1,1,3,3,71,0,0,1,0,0.0,0
18,1,train,Give me the parent of Liza Huber.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Liza_Huber> . },"```sparql
SELECT ?parent WHERE {
  ?person rdfs:label ""Liza Huber""@en .
  ?person dbo:parent ?parent .
}
```",1,1,2,1,1,2,3,28,1,0,0,1.0,1.0,1.0
459,12,train,Give me the governor of Dana Murphy and governor of Oklahoma and person born as John Kevin Stitt.,"SELECT ?result WHERE { ?result <http://dbpedia.org/property/birthName> ""John Kevin Stitt""@en . <http://dbpedia.org/resource/Dana_Murphy> <http://dbpedia.org/property/governor> ?result . <http://dbpedia.org/resource/Oklahoma> <http://dbpedia.org/property/governor> ?result . }","```sparql
SELECT ?governorDanaMurphy ?governorOklahoma ?personBornJohnKevinStitt WHERE {
  OPTIONAL { 
    ?damaMurphy dbo:positionTitle ""Governor""@en .
    ?damaMurphy rdfs:label ?governorDanaMurphy .
  }
  
  ?oklahomaGov dbo:spouse ?stitt .
  ?oklahomaGov rdfs:label ""Oklahoma""@en .
  ?stitt foaf:name ""John Kevin Stitt"" .
  BIND(?stitt AS ?governorOklahoma)
  
  ?person foaf:name ""John Kevin Stitt"" .
  BIND(?person AS ?personBornJohnKevinStitt)
}
```",3,3,4,1,3,2,3,28,0,0,1,0,0.0,0
36,18,train,Give me the person born as the birth name of Ayo Makun and person born in 1971.,"SELECT ?result WHERE { ?result <http://dbpedia.org/property/birthName> ?v1 . <http://dbpedia.org/resource/Ayo_Makun> <http://dbpedia.org/property/birthName> ?v1 . ?result <http://dbpedia.org/ontology/birthYear> ""1971""^^<http://www.w3.org/2001/XMLSchema#gYear> . }","```sparql
SELECT ?birthName ?person WHERE {
  # Find Ayo Makun's birth name
  ?ayoMakun dbo:birthName ?birthName .
  ?ayoMakun rdfs:label ""Ayo Makun""@en .

  # Find person born in 1971
  ?person dbo:birthDate ?date .
  FILTER (YEAR(?date) = 1971)

  # Ensure the birth name matches the person found
  OPTIONAL { 
    ?person dbo:birthName ?birthName .
  }
}
```",3,3,4,2,2,2,3,28,1,10466,0,9.553835865099838e-05,1.0,0.00019105846388995035
281,5,train,Give me the award of Alfred Warden.,SELECT ?result WHERE { <http://dbpedia.org/resource/Alfred_Warden> <http://dbpedia.org/property/awards> ?result . },"```sparql
SELECT ?award WHERE {
  ?warden dbo:award ?award .
  ?warden rdfs:label ""Alfred Warden""@en .
}
```",1,1,2,1,1,2,3,28,1,0,0,1.0,1.0,1.0
365,7,train,Give me the person born as the birth name of Symon Petliura.,SELECT ?result WHERE { ?result <http://dbpedia.org/property/birthName> ?v1 . <http://dbpedia.org/resource/Symon_Petliura> <http://dbpedia.org/property/birthName> ?v1 . },"```sparql
SELECT ?birthName WHERE {
  ?person rdfs:label ""Symon Petliura""@en .
  ?person dbo:birthName ?birthName .
}
```",2,2,3,2,1,3,2,20,0,1,1,0.0,0.0,0
715,11,train,"Give me the commander in the force, that is a military conflict, of Abd el-Krim.",SELECT ?result WHERE { ?v0 <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Abd_el-Krim> . ?v0 <http://dbpedia.org/ontology/commander> ?result . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. },"```sparql
SELECT ?commander WHERE {
  # Find Abd el-Krim's participation in a military conflict
  ?conflict dbo:participant ?abdElKrim .
  ?abdElKrim rdfs:label ""Abd el-Krim""@en .

  # Retrieve the commander of the force involved in that conflict
  ?conflict dbo:commander ?commander .
}
```",2,3,3,2,1,3,3,71,0,0,22,0,0.0,0
93,9,train,"Give me the headquarter, that is a region and a settlement, of the headquarter of Clam Cove Pictograph Site.",SELECT ?result WHERE { ?v0 <http://dbpedia.org/ontology/location> ?result . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Region>. <http://dbpedia.org/resource/Clam_Cove_Pictograph_Site> <http://dbpedia.org/ontology/location> ?v0 . },"```sparql
SELECT ?headquarter WHERE {
  # Identify Clam Cove Pictograph Site
  ?site dbo:wikiPageRedirects dbpedia-en:Clam_Cove_Pictograph_Site .
  
  # Find the headquarter of the site
  ?site dbo:administrativeUnit ?headquarter .

  # Ensure the headquarter is both a region and a settlement
  ?headquarter rdf:type dbo:Region ;
               rdf:type dbo:Settlement .
}
```",2,4,3,2,1,3,2,20,0,0,5,0,0.0,0
826,17,train,"Who is the parent of the child of Louis IV, Grand Duke of Hesse?","SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/parent> ?result . ?v1 <http://dbpedia.org/ontology/parent> <http://dbpedia.org/resource/Louis_IV,_Grand_Duke_of_Hesse> . }","```sparql
SELECT ?child ?parent WHERE {
  # Find children of Louis IV, Grand Duke of Hesse
  ?child dbo:parent ?parent .
  ?louisIV rdfs:label ""Louis IV, Grand Duke of Hesse""@en .
  ?louisIV dbo:child ?child .

  # Retrieve the parent(s) of these children
}
```",2,2,3,2,1,3,3,71,2,8,0,0.2,1.0,0.33333333333333337
212,4,train,Give me the birthplace of KODA (singer) and birthplace of Corp Sayvee.,SELECT ?result WHERE { <http://dbpedia.org/resource/KODA_(singer)> <http://dbpedia.org/ontology/birthPlace> ?result . <http://dbpedia.org/resource/Corp_Sayvee> <http://dbpedia.org/ontology/birthPlace> ?result . },"```sparql
SELECT ?person ?name ?birthPlace WHERE {
  # Find KODA (singer)
  OPTIONAL {
    ?koda rdfs:label ""KODA""@en .
    ?koda dbo:name ?name .
    ?koda dbo:birthPlace ?birthPlace .
  }
  
  # Find Corp Sayvee
  OPTIONAL {
    ?corpSayvee rdfs:label ""Corp Sayvee""@en .
    ?corpSayvee dbo:name ?name .
    ?corpSayvee dbo:birthPlace ?birthPlace .
  }
}
```",2,2,3,1,2,2,2,9,0,0,1,0,0.0,0
582,5,train,Give me the child of Kazuaki Nagasawa.,SELECT ?result WHERE { ?result <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Kazuaki_Nagasawa> . },"```sparql
SELECT ?child WHERE {
  ?child dbo:parent ?nagasawa .
  ?nagasawa rdfs:label ""Kazuaki Nagasawa""@en .
}
```",1,1,2,1,1,3,3,71,0,0,1,0,0.0,0
453,4,train,Give me the religion of Newfoundland Colony and religion of John Henry Newman.,SELECT ?result WHERE { <http://dbpedia.org/resource/John_Henry_Newman> <http://dbpedia.org/ontology/religion> ?result . <http://dbpedia.org/resource/Newfoundland_Colony> <http://dbpedia.org/ontology/religion> ?result . },"```sparql
# Query to find the religion of Newfoundland Colony
SELECT ?religion WHERE {
  ?newfoundland dbo:religion ?religion .
  ?newfoundland rdfs:label ""Newfoundland Colony""@en .
}

UNION

# Query to find the religion of John Henry Newman
SELECT ?religion WHERE {
  ?johnHenryNewman dbo:religion ?religion .
  ?johnHenryNewman rdfs:label ""John Henry Newman""@en .
}
```",2,2,3,1,2,2,2,9,0,0,1,0,0.0,0
892,19,train,Give me the landmark at elevation of 58 and entity in the profession of Henri Crolla.,"SELECT ?result WHERE { <http://dbpedia.org/resource/Henri_Crolla> <http://dbpedia.org/property/occupation> ?v2 . ?result <http://dbpedia.org/ontology/country> ?v2 . ?result <http://dbpedia.org/ontology/elevation> ""58""^^<http://www.w3.org/2001/XMLSchema#integer> . }","```sparql
# Query for landmark at elevation 58
SELECT ?landmark WHERE {
  ?landmark a dbo:Landmark .
  ?landmark dbo:elevation ?elevation .
  FILTER (?elevation = ""58""^^xsd:string)
}

UNION

# Query for entity in the profession of Henri Crolla (Boxing)
SELECT ?entity WHERE {
  ?entity dbo:profession dbr:Boxer .
  OPTIONAL { 
    ?entity foaf:name ""Henri Crolla""@en .
  }
}
```",3,3,4,2,2,3,3,71,0,0,11,0,0.0,0
443,7,train,Give me the landmark at elevation of 28 and birthplace of Carl Larsson.,"SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/elevation> ""28""^^<http://www.w3.org/2001/XMLSchema#integer> . <http://dbpedia.org/resource/Carl_Larsson> <http://dbpedia.org/ontology/birthPlace> ?result . }","```sparql
SELECT ?landmark ?birthPlace WHERE {
  # Find landmark at elevation 28
  ?landmark dbo:elevation ""28""^^xsd:integer .
  
  # Find birthplace of Carl Larsson
  ?larsson dbo:birthPlace ?birthPlace .
  ?larsson rdfs:label ""Carl Larsson""@en .
}
```",2,2,3,1,2,2,3,28,1,349,0,0.002857142857142857,1.0,0.005698005698005697
443,12,train,Give me the landmark at elevation of 28 and birthplace of Carl Larsson and birthplace of Ulf Lundell.,"SELECT ?result WHERE { <http://dbpedia.org/resource/Ulf_Lundell> <http://dbpedia.org/ontology/birthPlace> ?result . <http://dbpedia.org/resource/Carl_Larsson> <http://dbpedia.org/ontology/birthPlace> ?result . ?result <http://dbpedia.org/ontology/elevation> ""28""^^<http://www.w3.org/2001/XMLSchema#integer> . }","```sparql
SELECT ?landmark ?elevation ?carlLarssonBirthplace ?ulfLundellBirthplace WHERE {
  # Find landmark at elevation of 28
  ?landmark dbo:elevation ?elevation .
  FILTER (?elevation = ""28""^^xsd:integer || ?elevation = ""28""^^xsd:string)

  # Find birthplace of Carl Larsson
  ?carlLarsson dbo:birthPlace ?carlLarssonBirthplace .
  ?carlLarsson rdfs:label ""Carl Larsson""@en .

  # Find birthplace of Ulf Lundell
  ?ulfLundell dbo:birthPlace ?ulfLundellBirthplace .
  ?ulfLundell rdfs:label ""Ulf Lundell""@en .
}
```",3,3,4,1,3,2,3,28,1,351,0,0.002840909090909091,1.0,0.005665722379603399
865,6,train,"Who is the child, that is a politician, of Abu Ahmad Abdul Hafiz?",SELECT ?result WHERE { ?result <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Abu_Ahmad_Abdul_Hafiz> . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. },"```sparql
SELECT ?child WHERE {
  # Identify Abu Ahmad Abdul Hafiz and his children
  ?hafiz dbo:parent ?child .
  ?hafiz rdfs:label ""Abu Ahmad Abdul Hafiz""@en .

  # Filter for children who are politicians
  OPTIONAL { 
    ?child dbo:occupation ?occupation .
    FILTER (regex(str(?occupation), ""politician"", ""i""))
  }
}
```",1,2,2,1,1,3,3,71,0,0,3,0,0.0,0
216,9,train,Give me the player in Mario Ivanković and player in Igor Bišćan.,SELECT ?result WHERE { <http://dbpedia.org/resource/Mario_Ivanković> <http://dbpedia.org/ontology/team> ?result . <http://dbpedia.org/resource/Igor_Bišćan> <http://dbpedia.org/ontology/team> ?result . },"```sparql
SELECT ?player ?name ?teamLabel WHERE {
  # Find teams for Mario Ivanković
  OPTIONAL {
    ?mario dbo:team ?team .
    ?mario rdfs:label ""Mario Ivanković""@en .
    ?team rdfs:label ?teamLabel .
  }
  
  # Find teams for Igor Bišćan
  OPTIONAL {
    ?igor dbo:team ?team .
    ?igor rdfs:label ""Igor Bišćan""@en .
    ?team rdfs:label ?teamLabel .
  }

  # Bind player names to variables for clarity in results
  BIND(IF(BOUND(?mario), ""Mario Ivanković"", IF(BOUND(?igor), ""Igor Bišćan"", NULL)) AS ?player)
  BIND(IF(BOUND(?mario), ""Mario Ivanković"", IF(BOUND(?igor), ""Igor Bišćan"", NULL)) AS ?name)
}
```",2,2,3,1,2,3,3,71,0,0,3,0,0.0,0
645,3,train,Who is the commander in Siege of Madrid?,SELECT ?result WHERE { <http://dbpedia.org/resource/Siege_of_Madrid> <http://dbpedia.org/ontology/commander> ?result . },"```sparql
SELECT ?commander WHERE {
  ?event dbo:wikiPageRedirects dbpedia-es:Sitio_de_Madrid .
  ?event dbo:commander ?commander .
  FILTER (lang(?label) = 'en')
}
```",1,1,2,1,1,3,3,71,0,0,27,0,0.0,0
507,10,train,"Give me the spouse of Anne V. Coates and professional in Film director, television director.","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/spouse> <http://dbpedia.org/resource/Anne_V._Coates> . ?result <http://dbpedia.org/property/occupation> ""Film director, television director""@en . }","```sparql
SELECT ?spouse WHERE {
  # Find Anne V. Coates and her spouse
  ?anne dbo:spouse ?spouse .
  ?anne rdfs:label ""Anne V. Coates""@en .

  # Ensure the spouse is a film director or television director
  OPTIONAL { 
    ?spouse dbo:occupation ?occupation .
    FILTER (
      regex(str(?occupation), ""film director"", ""i"") ||
      regex(str(?occupation), ""television director"", ""i"")
    )
  }
}
```",2,2,3,1,2,3,3,71,1,0,0,1.0,1.0,1.0
715,1,train,Give me the commander in Spanish Civil War.,SELECT ?result WHERE { <http://dbpedia.org/resource/Spanish_Civil_War> <http://dbpedia.org/ontology/commander> ?result . },"```sparql
SELECT ?commander WHERE {
  ?event dbo:wikiPageRedirects dbpedia-es:Guerra_Civil_Española .
  ?event dbo:participatedInMilitaryConflict ?faction .
  ?faction dbo:leader ?commander .
  FILTER (regex(str(?commander), ""Francisco Franco|José Miaja|Emilio Mola"", ""i""))
}
```",1,1,2,1,1,3,3,71,0,0,28,0,0.0,0
98,17,train,Give me the entity in Philippines and birth place of the person born as Paolo Elito M. Ballesteros IV.,"SELECT ?result WHERE { ?v2 <http://dbpedia.org/property/birthName> ""Paolo Elito M. Ballesteros IV""@en . ?v2 <http://dbpedia.org/ontology/birthPlace> ?result . ?result <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Philippines> . }","```sparql
SELECT ?birthPlace ?philippinesEntity WHERE {
  # Identify Paolo Elito M. Ballesteros IV and retrieve his birthplace
  ?person rdfs:label ""Paolo Elito M. Ballesteros IV""@en .
  ?person dbo:birthPlace ?birthPlace .

  OPTIONAL {
    # Check for any notable association with an entity in the Philippines
    ?person dbo:associatedWith ?philippinesEntity .
    ?philippinesEntity dbo:country dbr:Philippines .
  }
}
```",3,3,4,2,2,2,3,28,0,0,2,0,0.0,0
329,14,train,"Give me the entity in the region, that is a country, of Western European Time and birthplace of Eric Cross (writer).",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/country> ?v2 . ?v2 <http://dbpedia.org/property/timeZone> <http://dbpedia.org/resource/Western_European_Time> . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. <http://dbpedia.org/resource/Eric_Cross_(writer)> <http://dbpedia.org/ontology/birthPlace> ?result . },"```sparql
SELECT ?country WHERE {
  # Find countries in the Western European Time zone
  ?region dbo:timeZone dbr:Western_European_Time .
  
  # Find entities that are countries within this region
  ?region geo:hasMemberCountry ?country .
  ?country a dbo:Country .

  # Find Eric Cross and his birthplace
  ?ericCross dbo:birthPlace ?birthPlace .
  ?ericCross rdfs:label ""Eric Cross (writer)""@en .
  
  # Match the birthplace with one of the countries identified
  ?birthPlace geo:location ?country .
}
```",3,4,4,2,2,2,3,28,0,0,1,0,0.0,0
365,11,train,Give me the person born as the birth name of Symon Petliura and spouse of Olha Petliura.,SELECT ?result WHERE { ?result <http://dbpedia.org/property/birthName> ?v2 . <http://dbpedia.org/resource/Olha_Petliura> <http://dbpedia.org/ontology/spouse> ?result . <http://dbpedia.org/resource/Symon_Petliura> <http://dbpedia.org/property/birthName> ?v2 . },"```sparql
SELECT ?person WHERE {
  # Find Symon Petliura and his birth name
  ?symonPetliura rdfs:label ""Symon Petliura""@en .
  ?symonPetliura dbo:birthName ?birthName .

  # Find Olha Petliura's spouse
  OPTIONAL {
    ?olhaPetliura rdfs:label ""Olha Petliura""@en .
    ?olhaPetliura dbo:spouse ?person .
  }
}
```",3,3,4,2,2,3,2,20,1,0,0,1.0,1.0,1.0
41,4,train,Who is the person born as David Declan Costello?,"SELECT ?result WHERE { ?result <http://dbpedia.org/property/birthName> ""David Declan Costello""@en . }","```sparql
SELECT ?personLabel WHERE {
  ?person dbo:birthName ""David Declan Costello"" .
  ?person rdfs:label ?personLabel .
}
```",1,1,2,1,1,2,3,28,0,0,1,0,0.0,0
579,8,train,"Give me the person born as the birth name of Jane Percy, Duchess of Northumberland.","SELECT ?result WHERE { ?result <http://dbpedia.org/property/birthName> ?v0 . <http://dbpedia.org/resource/Jane_Percy,_Duchess_of_Northumberland> <http://dbpedia.org/property/birthName> ?v0 . }","```sparql
SELECT ?birthName WHERE {
  ?person rdfs:label ""Jane Percy, Duchess of Northumberland""@en .
  ?person dbo:birthName ?birthName .
}
```",2,2,3,2,1,3,2,20,0,1,1,0.0,0.0,0
508,5,train,"Give me the commander, that is Saudi, in Central Plains War.",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/nationality> <http://dbpedia.org/resource/Saudi_Arabia>. <http://dbpedia.org/resource/Central_Plains_War> <http://dbpedia.org/ontology/commander> ?result . },"```sparql
SELECT ?commander WHERE {
  # Assuming 'Central Plains War' can be linked to a specific event or conflict
  ?event dbo:wikiPageRedirects dbpedia:Central_Plains_War .
  
  # Find commanders involved in the event
  ?event dbo:commander ?commander .
  
  # Filter for Saudi nationality
  ?commander dbo:nationality dbr:Saudi_Arabia .
}
```

### Explanation:
- **`?event dbo:wikiPageRedirects dbpedia:Central_Plains_War .`:** Attempts to find any DBpedia entry that redirects or relates to ""Central Plains War.""
- **`?event dbo:commander ?commander .`:** Retrieves commanders associated with the identified event.
- **`?commander dbo:nationality dbr:Saudi_Arabia .`:** Filters for commanders who are of Saudi nationality.

This query is speculative due to the potential lack of direct references in DBpedia. Further research might be needed to accurately identify the event and relevant figures.",1,2,2,1,1,3,2,20,0,0,1,0,0.0,0
826,34,train,"Give me the predecessor of Louis IV, Grand Duke of Hesse and spouse of the child of the father of Anna Magdalena Appel.","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/successor> <http://dbpedia.org/resource/Louis_IV,_Grand_Duke_of_Hesse> . <http://dbpedia.org/resource/Anna_Magdalena_Appel> <http://dbpedia.org/property/father> ?v2 . ?v1 <http://dbpedia.org/property/father> ?v2 . ?v1 <http://dbpedia.org/ontology/spouse> ?result . }","```sparql
SELECT ?predecessor ?spouse WHERE {
  # Find Louis IV and his predecessor
  ?louisIV dbo:predecessor ?predecessor .
  ?louisIV rdfs:label ""Louis IV, Grand Duke of Hesse""@en .

  # Find Anna Magdalena Appel's father
  ?annaMagdalena dbo:parent ?father .
  ?annaMagdalena rdfs:label ""Anna Magdalena Appel""@en .

  # Identify one of her children (could be herself or another sibling)
  OPTIONAL {
    ?child dbo:parent ?father .
    FILTER (?child != ?annaMagdalena) # To ensure we consider other siblings if any
  }

  # Find the spouse of the child
  OPTIONAL {
    ?child dbo:spouse ?spouse .
  }
}
```",4,4,5,3,2,3,3,71,0,0,1,0,0.0,0
443,10,train,"Give me the birthplace of the person born, that is a musical artist and an artist, on 1949-11-20.","SELECT ?result WHERE { ?v0 <http://dbpedia.org/ontology/birthDate> ""1949-11-20""^^<http://www.w3.org/2001/XMLSchema#date> . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. ?v0 <http://dbpedia.org/ontology/birthPlace> ?result . }","```sparql
SELECT ?birthPlace WHERE {
  ?person dbo:birthDate ?date .
  ?person dbo:occupation ?occupation1, ?occupation2 .
  FILTER (?date = ""1949-11-20""^^xsd:date)
  FILTER (CONTAINS(LCASE(str(?occupation1)), ""musical artist""))
  FILTER (CONTAINS(LCASE(str(?occupation2)), ""artist""))
  ?person dbp:birthPlace ?birthPlace .
}
```",2,4,3,2,1,2,3,28,0,0,3,0,0.0,0
170,17,train,Give me the domain of Mayor and birth place of the awardee of People's Artist of Russia.,"SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/birthPlace> ?result . ?result <http://dbpedia.org/ontology/leaderTitle> ""Mayor""@en . ?v1 <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/People's_Artist_of_Russia> . }","```sparql
SELECT ?mayorDomain ?birthPlace WHERE {
  # Find awardees of People's Artist of Russia
  ?person dbo:award ""People's Artist of Russia"" .
  
  # Filter for those who are also a Mayor
  ?person dbo:occupation ?occupation .
  FILTER (regex(str(?occupation), ""Mayor"", ""i""))
  
  # Get the domain or occupation details
  BIND(""Mayor"" AS ?mayorDomain)
  
  # Retrieve birthplace of these individuals
  ?person dbo:birthPlace ?birthPlace .
}
```",3,3,4,2,2,2,3,28,0,0,3,0,0.0,0
865,23,train,"Give me the native of the residence, that is a country, of the person decedent at Patna.",SELECT ?result WHERE { ?v0 <http://dbpedia.org/property/residence> ?v2 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. ?result <http://dbpedia.org/ontology/birthPlace> ?v2 . ?v0 <http://dbpedia.org/ontology/deathPlace> <http://dbpedia.org/resource/Patna> . },"```sparql
SELECT ?native WHERE {
  # Find the person who died in Patna
  ?person dbo:deathPlace ?patna .
  ?patna rdfs:label ""Patna""@en .

  # Get their place of residence
  ?person dbo:residence ?residence .

  # Ensure the residence is a country
  ?residence rdf:type dbo:Country .

  # Find someone native to this country
  ?native dbo:nativePlace ?residence .
}
```",3,4,4,3,1,3,3,71,0,0,1898,0,0.0,0
382,12,train,Give me the landmark at elevation of the award of Harry Combes and birthplace of Björn Joppe.,SELECT ?result WHERE { <http://dbpedia.org/resource/Björn_Joppe> <http://dbpedia.org/ontology/birthPlace> ?result . <http://dbpedia.org/resource/Harry_Combes> <http://dbpedia.org/property/awards> ?v0 . ?result <http://dbpedia.org/ontology/elevation> ?v0 . },"```sparql
# Step 1: Get the award received by Harry Combes
SELECT ?award WHERE {
  ?combes dbo:award ?award .
  ?combes rdfs:label ""Harry Combes""@en .
}

# Step 2: Get the birthplace of Björn Joppe
SELECT ?birthPlace WHERE {
  ?joppe dbo:birthPlace ?birthPlace .
  ?joppe rdfs:label ""Björn Joppe""@en .
}

# Step 3: Find landmarks at the elevation of the award in the birthplace of Björn Joppe
SELECT DISTINCT ?landmark WHERE {
  # Assuming we have obtained ?awardElevation from step 1 and ?birthPlace from step 2
  VALUES (?awardElevation) { <http://dbpedia.org/resource/Award_with_known_elevation> } # Placeholder for actual elevation value
  VALUES (?birthPlace) { <http://dbpedia.org/resource/Birthplace_of_Björn_Joppe> } # Placeholder for actual birthplace URI

  ?landmark dbo:elevation ?awardElevation .
  ?landmark dbo:location ?birthPlace .
}
```

Note: The placeholders `<http://dbpedia.org/resource/Award_with_known_elevation>` and `<http://dbpedia.org/resource/Birthplace_of_Björn_Joppe>` need to be replaced with actual URIs or values obtained from the first two queries.",3,3,4,2,2,3,2,20,0,0,1,0,0.0,0
773,34,train,Give me the spouse of the father of the parent of Bernard (son of Charles the Fat) and parent of Charles the Fat.,SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/spouse> ?result . ?v2 <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Bernard_(son_of_Charles_the_Fat)> . ?v2 <http://dbpedia.org/property/father> ?v1 . <http://dbpedia.org/resource/Charles_the_Fat> <http://dbpedia.org/ontology/parent> ?result . },"```sparql
SELECT ?spouse WHERE {
  # Step 1: Find Bernard, son of Charles the Fat
  ?bernard dbo:parent ?charlesFat .
  ?charlesFat rdfs:label ""Charles the Fat""@en .

  # Step 2: Determine parent(s) of Bernard
  ?bernard dbo:parent ?bernhardsParent .

  # Step 3: Find father of Bernard's parent
  ?bernhardsParent dbo:parent ?commonAncestor .

  # Step 4: Identify parent of Charles the Fat and ensure it matches common ancestor
  ?charlesFat dbo:parent ?commonAncestor .

  # Step 5: Retrieve spouse of this common ancestor
  ?commonAncestor dbo:spouse ?spouse .
}
```",4,4,5,3,2,3,3,71,0,0,1,0,0.0,0
326,6,train,Give me the professional in the profession of Susanne Lewis.,SELECT ?result WHERE { <http://dbpedia.org/resource/Susanne_Lewis> <http://dbpedia.org/property/occupation> ?v1 . ?result <http://dbpedia.org/property/occupation> ?v1 . },"```sparql
SELECT ?otherProfessional WHERE {
  # Find Susanne Lewis and her profession
  ?susanne dbo:profession ?profession .
  ?susanne rdfs:label ""Susanne Lewis""@en .

  # Find other professionals in the same field
  ?otherProfessional dbo:profession ?sameProfession .
  FILTER (?sameProfession = ?profession)
  FILTER (!str(?otherProfessional) = str(?susanne))
}
```",2,2,3,2,1,2,2,9,0,0,2223,0,0.0,0
216,38,train,"Give me the team of the person born, that is a sports manager and a soccer manager and a soccer player, on 1983-12-20 and player in the coach, that is a soccer player and a sports manager and a soccer manager, of Bosnia and Herzegovina national under-18 football team.","SELECT ?result WHERE { <http://dbpedia.org/resource/Bosnia_and_Herzegovina_national_under-18_football_team> <http://dbpedia.org/ontology/coach> ?v3 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerManager>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsManager>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsManager>. ?v2 <http://dbpedia.org/ontology/birthDate> ""1983-12-20""^^<http://www.w3.org/2001/XMLSchema#date> . ?v3 <http://dbpedia.org/ontology/team> ?result . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerPlayer>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerPlayer>. ?result <http://dbpedia.org/ontology/coach> ?v2 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerManager>. }","```sparql
SELECT ?team WHERE {
  # Identify the person born on December 20, 1983 with specified roles
  ?person dbo:birthDate ""1983-12-20""^^xsd:date ;
          rdf:type dbo:SoccerPlayer ;
          rdf:type dbo:SportsManager ;
          rdf:type dbo:SoccerManager .

  # Identify the coach of Bosnia and Herzegovina national under-18 football team
  ?coach dbo:teamManaged ?team .
  ?coach rdf:type dbo:SoccerPlayer ;
         rdf:type dbo:SportsManager ;
         rdf:type dbo:SoccerManager .
  ?team rdfs:label ""Bosnia and Herzegovina national under-18 football team""@en .

  # Check if the person was a player in this team
  ?person dbo:memberOfTeam ?team .
}
```",4,10,5,2,2,3,3,71,0,0,1,0,0.0,0
192,9,train,"Give me the spouse, that is a royalty, of the child of Charles II of Naples.",SELECT ?result WHERE { ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v0 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Charles_II_of_Naples> . ?result <http://dbpedia.org/ontology/spouse> ?v0 . },"```sparql
SELECT DISTINCT ?spouse WHERE {
  # Identify Charles II of Naples
  ?charles2 dbo:child ?child .
  ?charles2 rdfs:label ""Charles II of Naples""@en .

  # Find the spouse of each child and ensure they are royalty
  ?child dbo:spouse ?spouse .
  
  # Filter to include only those spouses who have a royal title
  OPTIONAL {
    ?spouse rdfs:label ?label .
    FILTER (
      regex(?label, ""King"", ""i"") ||
      regex(?label, ""Queen"", ""i"") ||
      regex(?label, ""Prince"", ""i"") ||
      regex(?label, ""Princess"", ""i"")
    )
  }
}
```",2,3,3,2,1,3,2,20,1,10,1,0.09090909090909091,0.5,0.15384615384615385
456,21,train,Give me the spouse of the actor of Pacific Drive and band of Alan Doyle.,SELECT ?result WHERE { <http://dbpedia.org/resource/Alan_Doyle> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . <http://dbpedia.org/resource/Pacific_Drive> <http://dbpedia.org/property/starring> ?v1 . ?v1 <http://dbpedia.org/ontology/spouse> ?result . },"```sparql
SELECT ?actorSpouse ?band WHERE {
  # Find the actor of Pacific Drive and their spouse
  ?movie dbo:starring ?actor .
  ?movie rdfs:label ""Pacific Drive""@en .
  
  OPTIONAL { 
    ?actor dbo:spouse ?actorSpouse .
  }
  
  # Find the band associated with Alan Doyle
  ?person dbo:member ?band .
  ?person rdfs:label ""Alan Doyle""@en .
}
```",3,3,4,2,2,3,3,71,0,0,1,0,0.0,0
456,28,train,Give me the band of Alan Doyle and professional in  and spouse of the actor of Pacific Drive.,"SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/spouse> ?result . <http://dbpedia.org/resource/Pacific_Drive> <http://dbpedia.org/property/starring> ?v1 . <http://dbpedia.org/resource/Alan_Doyle> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?result <http://dbpedia.org/property/occupation> """"@en . }","```sparql
SELECT ?band ?spouse WHERE {
  # Find Alan Doyle's band
  ?doyle dbo:memberOfBand ?band .
  ?doyle rdfs:label ""Alan Doyle""@en .

  # Find an actor in Pacific Drive and their spouse
  OPTIONAL {
    ?pacificDrive dbo:castMember ?actor .
    ?pacificDrive rdfs:label ""Pacific Drive""@en .
    
    ?actor dbo:spouse ?spouse .
  }
}
```",4,4,5,2,3,3,3,71,0,0,1,0,0.0,0
933,10,train,Give me the band of The Ramong Sound and band of Mike Elliott (saxophonist).,SELECT ?result WHERE { <http://dbpedia.org/resource/Mike_Elliott_(saxophonist)> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . <http://dbpedia.org/resource/The_Ramong_Sound> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . },"```sparql
SELECT ?ramonesBand ?mikeElliottBand WHERE {
  # Find the band of Ramones
  ?ramones dbo:band ?ramonesBand .
  ?ramones rdfs:label ""Ramones""@en .

  # Find Mike Elliott (saxophonist) and his associated band
  ?mikeElliott dbo:occupation dbr:Saxophonist ;
               dbo:associatedBand ?mikeElliottBand .
  ?mikeElliott rdfs:label ""Mike Elliott (saxophonist)""@en .
}
```",2,2,3,1,2,3,3,71,0,0,3,0,0.0,0
192,10,train,Give me the child of the parent of Anna of Hungary (Byzantine empress).,SELECT ?result WHERE { ?v0 <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Anna_of_Hungary_(Byzantine_empress)> . ?result <http://dbpedia.org/property/father> ?v0 . },"```sparql
SELECT ?child WHERE {
  # Find Anna of Hungary (Byzantine Empress) and her parent
  ?anna rdfs:label ""Anna of Hungary (Byzantine empress)""@en .
  ?anna dbo:parent ?parent .

  # Find the child of this parent
  ?parent dbo:child ?child .
}
```",2,2,3,2,1,3,2,20,0,0,5,0,0.0,0
98,3,train,Give me the time zone of Lopez Jaena.,SELECT ?result WHERE { <http://dbpedia.org/resource/Lopez_Jaena> <http://dbpedia.org/ontology/timeZone> ?result . },"```sparql
SELECT ?timeZone WHERE {
  ?location rdfs:label ""Lopez Jaena""@en .
  ?location dbo:country dbr:Philippines .
  ?location dbo:timezone ?timeZone .
}
```",1,1,2,1,1,2,3,28,0,0,1,0,0.0,0
508,2,train,"Give me the war, that is a military conflict and a societal event and an event, of Hayao Tada.",SELECT ?result WHERE { ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. <http://dbpedia.org/resource/Hayao_Tada> <http://dbpedia.org/ontology/battle> ?result . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. },"```sparql
SELECT ?war WHERE {
  # Find Hayao Tada's associated events
  ?tada dbo:associatedWith ?event .
  ?tada rdfs:label ""Hayao Tada""@en .

  # Ensure the event is a war and fits all required categories
  ?event rdf:type dbp:MilitaryConflict ;
         rdf:type dbp:SocietalEvent ;
         rdf:type dbp:Event .

  BIND(?event AS ?war)
}
```",1,4,2,1,1,3,2,20,0,0,5,0,0.0,0
645,7,train,Who is the native of Restoration (Spain)?,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Restoration_(Spain)> . },"```sparql
SELECT ?person ?label WHERE {
  ?person dbo:birthPlace dbr:Spain .
  ?person dbo:wikiPageWikiLink ?restoration .
  ?restoration rdfs:label ""Restoration (Spain)""@en .
  SERVICE wikibase:label { bd:serviceParam wikibase:language ""[AUTO_LANGUAGE],en"". }
}
```",1,1,2,1,1,3,3,71,0,0,217,0,0.0,0
93,14,train,"Give me the death place of the governor of the native, that is a politician, of Seattle.",SELECT ?result WHERE { ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v2 <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Seattle> . ?v0 <http://dbpedia.org/ontology/deathPlace> ?result . ?v2 <http://dbpedia.org/property/governor> ?v0 . },"```sparql
SELECT ?deathPlace WHERE {
  # Find the governor who is native to Seattle
  ?person dbo:positionTitle ""Governor""@en ;
          dbo:nativePlace dbr:Seattle ;
          rdf:type dbo:Politician .

  # Retrieve the death place of this person
  OPTIONAL { 
    ?person dbo:deathPlace ?deathPlace .
  }
}
```",3,4,4,3,1,3,2,20,0,0,9,0,0.0,0
987,33,train,"Give me the birth place of the actor of the show, that is a film, with Emir Hadžihafizbegović and birth place of Dado Polumenta.",SELECT ?result WHERE { <http://dbpedia.org/resource/Dado_Polumenta> <http://dbpedia.org/ontology/birthPlace> ?result . ?v0 <http://dbpedia.org/ontology/starring> <http://dbpedia.org/resource/Emir_Hadžihafizbegović> . ?v0 <http://dbpedia.org/property/starring> ?v2 . ?v2 <http://dbpedia.org/ontology/birthPlace> ?result . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Film>. },"```sparql
SELECT ?actorBirthPlace ?dadoPolumentaBirthPlace WHERE {
  # Find a film featuring Emir Hadžihafizbegović
  ?film dbo:starringEmirHadžihafizbegović ""true""^^xsd:boolean .
  
  # Identify an actor from that film
  ?film dbo:actor ?actor .
  
  # Get the birth place of the identified actor
  ?actor dbo:birthPlace ?actorBirthPlace .

  # Find Dado Polumenta and his birth place
  ?dadoPolumenta rdfs:label ""Dado Polumenta""@en .
  ?dadoPolumenta dbo:birthPlace ?dadoPolumentaBirthPlace .
}
```",4,5,5,3,2,3,3,71,0,0,3,0,0.0,0
826,24,train,"Give me the predecessor of Louis IV, Grand Duke of Hesse and successor of the child, that is a royalty, of Louis I, Grand Duke of Hesse.","SELECT ?result WHERE { <http://dbpedia.org/resource/Louis_I,_Grand_Duke_of_Hesse> <http://dbpedia.org/ontology/child> ?v2 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?result <http://dbpedia.org/ontology/successor> <http://dbpedia.org/resource/Louis_IV,_Grand_Duke_of_Hesse> . ?v2 <http://dbpedia.org/ontology/successor> ?result . }","```sparql
SELECT ?predecessor ?successor WHERE {
  # Find predecessor of Louis IV, Grand Duke of Hesse
  ?louisIV dbo:predecessor ?predecessor .
  ?louisIV rdfs:label ""Louis IV, Grand Duke of Hesse""@en .

  # Identify a child of Louis I who is royalty
  OPTIONAL {
    ?louisI dbo:child ?royalChild .
    ?louisI rdfs:label ""Louis I, Grand Duke of Hesse""@en .
    FILTER (regex(str(?royalChild), ""Grand Duke|Duchess"", ""i""))
  }

  # Find successor of the royal child
  OPTIONAL {
    ?royalChild dbo:successor ?successor .
    FILTER (regex(str(?royalChild), ""Grand Duke|Duchess"", ""i""))
  }
}
```",3,4,4,2,2,3,3,71,1,32,0,0.030303030303030304,1.0,0.05882352941176471
445,16,train,Who is the awardee of the establishment of 1820-03-10?,"SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/foundingDate> ""1820-03-10""^^<http://www.w3.org/2001/XMLSchema#date> . ?result <http://dbpedia.org/property/awards> ?v1 . }","```sparql
SELECT ?awardee WHERE {
  # Find the entity established on March 10, 1820
  ?entity dbo:established ""1820-03-10""^^xsd:date .
  
  # Determine if there is an awardee associated with this establishment
  OPTIONAL { 
    ?entity dbo:awardRecipient ?awardee .
  }
}
```",2,2,3,2,1,3,3,71,0,0,2,0,0.0,0
417,26,train,"Give me the child of the father of the leader, that is a royalty, of Colony of Greenland.",SELECT ?result WHERE { ?v1 <http://dbpedia.org/property/father> ?v2 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?result <http://dbpedia.org/property/father> ?v2 . <http://dbpedia.org/resource/Colony_of_Greenland> <http://dbpedia.org/property/leader> ?v1 . },"```sparql
SELECT ?child WHERE {
  # Find the leader of the Colony of Greenland who is royalty
  ?leader dbo:position ""Leader""@en ;
          dbo:country dbr:Greenland .
  
  # Ensure the leader is recognized as royalty
  OPTIONAL { 
    ?leader rdf:type dbo:Monarch .
  }
  
  # Identify the father of this royal leader
  ?leader dbo:parent ?father .

  # Find the child of this identified father
  ?father dbo:child ?child .
}
```",3,4,4,3,1,3,3,71,0,0,2,0,0.0,0
136,3,train,Give me the award of Bret Anthony Johnston.,SELECT ?result WHERE { <http://dbpedia.org/resource/Bret_Anthony_Johnston> <http://dbpedia.org/property/awards> ?result . },"```sparql
SELECT ?award WHERE {
  ?person rdfs:label ""Bret Anthony Johnston""@en .
  ?person dbo:award ?award .
}
```",1,1,2,1,1,2,2,9,0,0,1,0,0.0,0
200,1,train,Give me the band member of Order from Chaos.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/associatedMusicalArtist> <http://dbpedia.org/resource/Order_from_Chaos> . },"```sparql
SELECT ?bandMember WHERE {
  # Find the band associated with the album ""Order from Chaos""
  ?album dbo:artist ?band .
  ?album rdfs:label ""Order from Chaos""@en .

  # Get the members of this band
  ?band dbo:member ?bandMember .
}
```",1,1,2,1,1,2,2,9,0,0,2,0,0.0,0
987,3,train,"Who is the band, that is an artist, of Dado Polumenta?",SELECT ?result WHERE { ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. <http://dbpedia.org/resource/Dado_Polumenta> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . },"```sparql
SELECT ?band WHERE {
  ?dado dbo:member ?band .
  ?dado rdfs:label ""Dado Povolny""@en .
}
```",1,2,2,1,1,3,3,71,0,0,1,0,0.0,0
36,5,train,Give me the birth name of Ayo Makun.,SELECT ?result WHERE { <http://dbpedia.org/resource/Ayo_Makun> <http://dbpedia.org/property/birthName> ?result . },"```sparql
SELECT ?birthName WHERE {
  ?person rdfs:label ""Ayo Makun""@en .
  ?person dbo:birthName ?birthName .
}
```",1,1,2,1,1,2,3,28,1,0,0,1.0,1.0,1.0
976,21,train,"Give me the office of Naci Bostancı and office of the leader, that is a politician, of Grand National Assembly of Turkey.",SELECT ?result WHERE { ?v2 <http://dbpedia.org/property/office> ?result . <http://dbpedia.org/resource/Grand_National_Assembly_of_Turkey> <http://dbpedia.org/ontology/leader> ?v2 . <http://dbpedia.org/resource/Naci_Bostancı> <http://dbpedia.org/property/office> ?result . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. },"```sparql
SELECT ?naciOffice ?leaderOffice WHERE {
  # Find Naci Bostancı's office
  ?naci dbo:position ?naciOffice .
  ?naci rdfs:label ""Naci Bostancı""@en .

  # Find the leader of the Grand National Assembly of Turkey who is a politician
  OPTIONAL {
    ?gnatLeader dbo:office ?leaderOffice ;
                dbo:politicalParty ?party .
    ?gnatLeader rdfs:label ?gnatLabel .
    FILTER (regex(?gnatLabel, ""Speaker of the Grand National Assembly of Turkey"", ""i""))
    # Ensure the leader is a politician
    ?gnatLeader rdf:type dbo:Politician .
  }
}
```",3,4,4,2,2,3,3,71,0,0,1,0,0.0,0
573,17,train,"Who is the author, that is a politician and an office holder, of the work of John Quincy Adams?",SELECT ?result WHERE { ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v1 <http://dbpedia.org/property/author> ?result . ?v1 <http://dbpedia.org/property/author> <http://dbpedia.org/resource/John_Quincy_Adams> . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. },"```sparql
SELECT ?author WHERE {
  # Find works authored by John Quincy Adams
  ?work dbo:author ?adams .
  ?adams rdfs:label ""John Quincy Adams""@en .

  # Identify co-authors of these works
  ?work dbo:author ?author .
  
  # Ensure the author is a politician and an office holder
  ?author dbo:occupation dbc:Politicians_from_Massachusetts .
  ?author dbo:officeHeld ?office .
}
```",2,4,3,2,1,3,3,71,0,0,1,0,0.0,0
273,14,train,Give me the parent of the alumnus of the reference to Università degli Studi di Torino.,"SELECT ?result WHERE { ?v0 <http://dbpedia.org/ontology/parent> ?result . ?v2 <http://xmlns.com/foaf/0.1/name> ""Università degli Studi di Torino""@en . ?v0 <http://dbpedia.org/ontology/almaMater> ?v2 . }","```sparql
SELECT ?alumnus ?parent WHERE {
  # Find alumnus of Università degli Studi di Torino
  ?alumnus dbo:almaMater dbr:Universit%C3%A0_degli_Studi_di_Torino .
  
  # Retrieve the parent(s) of the alumnus
  ?alumnus dbo:parent ?parent .
}
```",3,3,4,3,1,3,2,20,0,0,2,0,0.0,0
433,37,train,"Give me the associated musical artist of the associated musical artist, that is an artist and a musical artist, of the associated musical artist, that is a musical artist and an artist, of Ornette Coleman and professional in Musician.","SELECT ?result WHERE { ?v0 <http://dbpedia.org/ontology/associatedMusicalArtist> ?v3 . ?result <http://dbpedia.org/property/occupation> ""Musician""@en . ?v3 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. <http://dbpedia.org/resource/Ornette_Coleman> <http://dbpedia.org/ontology/associatedMusicalArtist> ?v0 . }","```sparql
SELECT ?finalArtist WHERE {
  # Step 1: Find Ornette Coleman and his associated musical artists who are also musicians
  ?coleman dbo:associatedMusicalArtist ?artist1 .
  ?coleman rdfs:label ""Ornette Coleman""@en .
  ?artist1 rdf:type dbo:Musician .

  # Step 2: From these artists, find one who is both an artist and a musical artist
  ?artist1 dbo:associatedMusicalArtist ?artist2 .
  ?artist1 rdf:type dbo:Artist .
  
  # Step 3: Find the associated musical artist of this second artist
  ?artist2 dbo:associatedMusicalArtist ?finalArtist .
  ?artist2 rdf:type dbo:Musician .

  # Ensure final artist is a musician
  ?finalArtist rdf:type dbo:Musician .
}
```",4,8,5,3,2,3,3,71,0,0,38,0,0.0,0
5,1,train,Give me the entity in Canada.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Canada> . },"```sparql
SELECT ?entity WHERE {
  ?entity dbo:country dbr:Canada .
}
```",1,1,2,1,1,3,2,20,18560,0,0,1.0,1.0,1.0
170,6,train,Give me the birth place of Era Ziganshina and entity in Russia.,SELECT ?result WHERE { <http://dbpedia.org/resource/Era_Ziganshina> <http://dbpedia.org/ontology/birthPlace> ?result . ?result <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Russia> . },"```sparql
SELECT ?birthPlace ?russianEntity WHERE {
  # Find the birth place of Era Ziganshina
  ?eraZiganshina dbo:birthPlace ?birthPlace .
  ?eraZiganshina rdfs:label ""Era Ziganshina""@en .

  # Find any connection to an entity in Russia
  OPTIONAL {
    ?russianEntity dbo:location ?birthPlace .
    ?russianEntity dbo:country dbpedia:Russia .
  }
}
```",2,2,3,1,2,2,3,28,0,0,1,0,0.0,0
892,18,train,Give me the entity in Province of Reggio Emilia and landmark at elevation of 58 and entity in Italy.,"SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/province> <http://dbpedia.org/resource/Province_of_Reggio_Emilia> . ?result <http://dbpedia.org/ontology/elevation> ""58""^^<http://www.w3.org/2001/XMLSchema#integer> . ?result <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Italy> . }","```sparql
SELECT ?entityReggioEmilia ?landmarkElevation58 ?entityItaly WHERE {
  # Entity in Province of Reggio Emilia
  ?entityReggioEmilia dbo:locatedIn ?reggioEmilia .
  ?reggioEmilia rdfs:label ""Province of Reggio Emilia""@en .

  # Landmark at elevation of 58
  ?landmarkElevation58 dbp:elevation ?elevation .
  FILTER (?elevation = 58)

  # Entity in Italy
  ?entityItaly dbo:country ?italy .
  ?italy rdfs:label ""Italy""@en .
}
```",3,3,4,1,3,3,3,71,0,0,1,0,0.0,0
579,12,train,"Give me the native of Edinburgh and person born as the birth name of Jane Percy, Duchess of Northumberland.","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Edinburgh> . ?result <http://dbpedia.org/property/birthName> ?v0 . <http://dbpedia.org/resource/Jane_Percy,_Duchess_of_Northumberland> <http://dbpedia.org/property/birthName> ?v0 . }","```sparql
SELECT ?person WHERE {
  # Find individuals native to Edinburgh
  ?person dbo:birthPlace dbr:Edinburgh .
  
  # Check if any of these individuals were born as Jane Percy, Duchess of Northumberland
  OPTIONAL { 
    ?person foaf:name ""Jane Percy""@en ;
            dbo:title dbr:Duchess_of_Northumberland .
  }
}
```",3,3,4,2,2,3,2,20,1,1710,0,0.0005844535359438924,1.0,0.0011682242990654205
459,13,train,"Give me the governor of Dana Murphy and governor of the death place, that is a settlement, of Cliff Roquemore.",SELECT ?result WHERE { ?v1 <http://dbpedia.org/property/governor> ?result . <http://dbpedia.org/resource/Cliff_Roquemore> <http://dbpedia.org/ontology/deathPlace> ?v1 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. <http://dbpedia.org/resource/Dana_Murphy> <http://dbpedia.org/property/governor> ?result . },"```sparql
SELECT ?governorDana ?governorCliff WHERE {
  # Find Dana Murphy's birthplace or residence and its governor
  ?dana dbo:birthPlaceOrResidence ?locationDana .
  ?dana rdfs:label ""Dana Murphy""@en .
  
  OPTIONAL {
    ?locationDana dbo:governmentHead ?governorDana .
  }
  
  # Find Cliff Roquemore's death place and its governor
  ?cliff dbo:deathPlace ?locationCliff .
  ?cliff rdfs:label ""Cliff Roquemore""@en .
  
  FILTER (isBlank(?locationCliff) || ?locationCliff a dbo:Settlement)
  
  OPTIONAL {
    ?locationCliff dbo:governmentHead ?governorCliff .
  }
}
```",3,4,4,2,2,2,3,28,0,0,1,0,0.0,0
170,2,train,Give me the domain of Mayor.,"SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/leaderTitle> ""Mayor""@en . }","```sparql
SELECT DISTINCT ?property WHERE {
  ?mayor rdf:type dbo:Mayor .
  ?mayor ?property ?value .
  FILTER NOT EXISTS { ?value rdf:type rdfs:Class }
}
```",1,1,2,1,1,2,3,28,0,244,39395,0.0,0.0,0
773,25,train,"Give me the parent of Carloman of Bavaria and parent of the child, that is a royalty, of Louis the German.",SELECT ?result WHERE { ?v1 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Louis_the_German> . ?result <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Carloman_of_Bavaria> . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v1 <http://dbpedia.org/ontology/parent> ?result . },"```sparql
SELECT ?carlomanParent ?royalChildParent WHERE {
  # Find Carloman of Bavaria and his parent
  ?carloman dbo:parent ?carlomanParent .
  ?carloman rdfs:label ""Carloman of Bavaria""@en .

  # Find children of Louis the German who are royalty
  OPTIONAL { 
    ?louis dbo:child ?royalChild .
    ?louis rdfs:label ""Louis the German""@en .
    
    # Assuming a property or label indicates royalty, e.g., title or role
    FILTER EXISTS {
      ?royalChild dbo:title ?title .
      FILTER (regex(str(?title), ""King|Queen|Prince|Princess"", ""i""))
    }
  }

  # Find parent of the royal child identified above
  OPTIONAL {
    ?royalChild dbo:parent ?royalChildParent .
  }
}
```",3,4,4,2,2,3,3,71,2,33499,0,5.9699710456404284e-05,1.0,0.00011939229322747215
98,11,train,"Give me the entity in the region, that is a country, of Philippine Standard Time.",SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. ?v1 <http://dbpedia.org/property/timeZone> <http://dbpedia.org/resource/Philippine_Standard_Time> . ?result <http://dbpedia.org/ontology/country> ?v1 . },"```sparql
SELECT ?country WHERE {
  ?pst dbo:timeZone ""Philippine Standard Time"" .
  ?pst dbo:country ?country .
}
```",2,3,3,2,1,2,3,28,0,0,5332,0,0.0,0
892,22,train,"Give me the entity in Italy and entity in the administration, that is Italian and a region and a settlement and an administrative region, of Democratic Party (Italy).",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/province> ?v0 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/AdministrativeRegion>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Region>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. ?v0 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Italy>. ?v0 <http://dbpedia.org/property/leaderParty> <http://dbpedia.org/resource/Democratic_Party_(Italy)> . ?result <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Italy> . },"```sparql
SELECT ?regionInItaly ?adminRegion WHERE {
  # Find regions in Italy that are also settlements
  ?regionInItaly dbo:country dbr:Italy ;
                rdf:type dbo:Settlement ;
                rdf:type dbo:AdministrativeRegion .

  # Find administrative region associated with the Democratic Party (Italy)
  ?party dbr:Democratic_Party_(Italy) .
  ?adminRegion dbo:administrativeRegionOf ?party ;
               rdf:type dbo:AdministrativeRegion .

}
```",3,7,4,2,2,3,3,71,0,0,587,0,0.0,0
987,12,train,Give me the birth place of Moamer Kasumović and entity in Montenegro.,SELECT ?result WHERE { <http://dbpedia.org/resource/Moamer_Kasumović> <http://dbpedia.org/ontology/birthPlace> ?result . ?result <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Montenegro> . },"```sparql
# Query to find the birthplace of Moamer Kasumović (Slobodan Milošević)
SELECT ?birthPlace WHERE {
  ?milošević dbo:birthPlace ?birthPlace .
  ?milošević rdfs:label ""Moamer Kasumović""@en .
}

# Query to find an entity in Montenegro
SELECT ?entity ?location WHERE {
  ?entity dbo:location ?location .
  ?location rdfs:label ""Montenegro""@en .
}
```",2,2,3,1,2,3,3,71,0,0,1,0,0.0,0
216,19,train,Give me the player in the coach of Croatia national under-21 football team and player in Mario Ivanković.,SELECT ?result WHERE { <http://dbpedia.org/resource/Mario_Ivanković> <http://dbpedia.org/ontology/team> ?result . <http://dbpedia.org/resource/Croatia_national_under-21_football_team> <http://dbpedia.org/ontology/coach> ?v0 . ?v0 <http://dbpedia.org/ontology/team> ?result . },"```sparql
SELECT DISTINCT ?player WHERE {
  # Find the coach of Croatia national under-21 football team
  ?team dbo:coach ?coach .
  ?team rdfs:label ""Croatia national under-21 football team""@en .

  # Find teams coached by Mario Ivanković
  ?ivankovicTeam dbo:coach dbr:Mario_Ivanković .
  
  # Find players in the Croatia national under-21 football team
  ?player dbo:teamMembership ?under21Team .
  FILTER (?under21Team = ?team)

  # Find players in teams coached by Mario Ivanković
  ?player dbo:teamMembership ?ivankovicTeam .

}
```",3,3,4,2,2,3,3,71,0,0,3,0,0.0,0
166,0,train,Give me the resting place of Gonzalo Queipo de Llano.,SELECT ?result WHERE { <http://dbpedia.org/resource/Gonzalo_Queipo_de_Llano> <http://dbpedia.org/ontology/restingPlace> ?result . },"```sparql
SELECT ?burialPlace WHERE {
  ?person rdfs:label ""Gonzalo Queipo de Llano""@en .
  ?person dbo:placeOfBurial ?burialPlace .
}
```",1,1,2,1,1,3,2,20,0,0,1,0,0.0,0
573,10,train,Give me the person decedent at Massachusetts and parent of John Quincy Adams.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/deathPlace> <http://dbpedia.org/resource/Massachusetts> . <http://dbpedia.org/resource/John_Quincy_Adams> <http://dbpedia.org/ontology/parent> ?result . },"```sparql
SELECT ?person WHERE {
  # Identify John Quincy Adams and his parent(s)
  ?adams rdfs:label ""John Quincy Adams""@en .
  ?parent dbo:child ?adams ;
          a dbo:Person .

  # Check if the parent is buried in Massachusetts
  OPTIONAL { 
    ?parent dbo:placeOfDeath ?deathPlace .
    FILTER (regex(str(?deathPlace), ""Massachusetts"", ""i""))
  }

  BIND (?parent AS ?person)
}
```",2,2,3,1,2,3,3,71,2,0,0,1.0,1.0,1.0
453,1,train,Give me the religion of John Henry Newman.,SELECT ?result WHERE { <http://dbpedia.org/resource/John_Henry_Newman> <http://dbpedia.org/ontology/religion> ?result . },"```sparql
SELECT ?religion WHERE {
  ?newman rdfs:label ""John Henry Newman""@en .
  ?newman dbo:religion ?religion .
}
```",1,1,2,1,1,2,2,9,2,0,0,1.0,1.0,1.0
874,11,train,"Give me the band of Robert Hart (musician) and band of the writer, that is an artist and a musical artist, of Mezzanine (album).",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/bandMember> ?v2 . <http://dbpedia.org/resource/Mezzanine_(album)> <http://dbpedia.org/property/writer> ?v2 . ?result <http://dbpedia.org/ontology/bandMember> <http://dbpedia.org/resource/Robert_Hart_(musician)> . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. },"```sparql
SELECT ?robertHartBand ?mezzanineArtistBand WHERE {
  # Find Robert Hart's band
  ?robertHart dbo:band ?robertHartBand .
  ?robertHart rdfs:label ""Robert Hart (musician)""@en .

  # Find the writer/producer of Mezzanine who is both an artist and a musical artist
  ?mezzanine dbo:creator ?artist .
  ?mezzanine rdfs:label ""Mezzanine""@en .
  
  # Ensure the creator is recognized as both an artist and a musical artist
  ?artist rdf:type dbp:Artist .
  ?artist rdf:type dbp:MusicalArtist .

  # Find the band of this artist
  ?artist dbo:band ?mezzanineArtistBand .
}
```",3,5,4,2,2,3,2,20,0,0,1,0,0.0,0
791,35,train,"Give me the father of the child, that is a royalty, of Emperor Takakura and spouse of the spouse, that is a royalty, of Emperor Takakura.",SELECT ?result WHERE { ?v1 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Emperor_Takakura> . ?v2 <http://dbpedia.org/ontology/spouse> <http://dbpedia.org/resource/Emperor_Takakura> . ?result <http://dbpedia.org/ontology/spouse> ?v2 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v1 <http://dbpedia.org/property/father> ?result . },"```sparql
SELECT ?royalChildFather ?royalSpouseFather WHERE {
  # Find a royal child of Emperor Takakura
  ?takakura dbo:child ?royalChild .
  ?takakura rdfs:label ""Emperor Takakura""@en .
  
  # Ensure the child is royalty (e.g., an emperor or princess)
  FILTER (
    regex(str(?royalChild), ""(Emperor|Empress|Prince|Princess)"", ""i"")
  )
  
  # Find the father of this royal child
  ?royalChild dbo:parent ?royalChildFather .

  # Find a royal spouse of Emperor Takakura
  OPTIONAL {
    ?takakura dbo:spouse ?royalSpouse .
    
    # Ensure the spouse is royalty (e.g., an empress or princess)
    FILTER (
      regex(str(?royalSpouse), ""(Empress|Imperial Princess)"", ""i"")
    )
    
    # Find the father of this royal spouse
    ?royalSpouse dbo:parent ?royalSpouseFather .
  }
}
```",4,6,5,2,2,3,3,71,1,1,0,0.5,1.0,0.6666666666666666
124,4,train,"Give me the war, that is a societal event and a military conflict, of A Field Battery, Royal Australian Artillery.","SELECT ?result WHERE { ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. <http://dbpedia.org/resource/A_Field_Battery,_Royal_Australian_Artillery> <http://dbpedia.org/ontology/battle> ?result . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. }","```sparql
SELECT ?war WHERE {
  # Identify the artillery unit
  ?unit rdfs:label ""A Field Battery, Royal Australian Artillery""@en .
  
  # Find wars involving the unit
  ?unit dbo:militaryConflict ?war .
  
  # Ensure the war is a societal event and military conflict
  ?war rdf:type dbp:MilitaryConflict ;
       rdf:type dbp:SocietalEvent .
}
```",1,3,2,1,1,3,3,71,0,0,6,0,0.0,0
443,4,train,"Who is the person born, that is a musical artist and an artist, on 1949-11-20?","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/birthDate> ""1949-11-20""^^<http://www.w3.org/2001/XMLSchema#date> . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. }","```sparql
SELECT ?person ?name WHERE {
  ?person rdf:type dbo:MusicalArtist .
  ?person rdf:type dbo:Artist .
  ?person dbo:birthDate ""1949-11-20""^^xsd:date .
  OPTIONAL { ?person rdfs:label ?name . FILTER (lang(?name) = 'en') }
}
```",1,3,2,1,1,2,3,28,2,2,0,0.5,1.0,0.6666666666666666
158,10,train,"Who is the successor, that is a prime minister and an office holder and a politician, of the person deceased, that is an office holder and a politician, on 1945-09-15?","SELECT ?result WHERE { ?v0 <http://dbpedia.org/ontology/successor> ?result . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/PrimeMinister>. ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v0 <http://dbpedia.org/ontology/deathDate> ""1945-09-15""^^<http://www.w3.org/2001/XMLSchema#date> . }","```sparql
SELECT ?successor WHERE {
  # Identify the deceased person
  ?deceased dbo:deathDate ?death .
  ?deceased rdf:type dbo:Politician ;
            dbo:officeHolder true .
  
  # Ensure death date matches September 15, 1945
  FILTER (YEAR(?death) = 1945 && MONTH(?death) = 9 && DAY(?death) = 15)
  
  # Find the successor who is a prime minister, office holder, and politician
  ?successor dbo:predecessor ?deceased ;
            rdf:type dbo:PrimeMinister , dbo:Politician , dbo:OfficeHolder .
}
```",2,7,3,2,1,3,2,20,0,0,1,0,0.0,0
791,32,train,"Give me the predecessor of the child of Emperor Takakura and spouse of the spouse, that is a royalty, of Emperor Takakura.",SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/spouse> <http://dbpedia.org/resource/Emperor_Takakura> . ?v3 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Emperor_Takakura> . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?result <http://dbpedia.org/ontology/successor> ?v3 . ?result <http://dbpedia.org/ontology/spouse> ?v1 . },"```sparql
SELECT ?predecessor WHERE {
  # Find Emperor Takakura and his child
  ?takakura dbo:child ?child .
  ?takakura rdfs:label ""Emperor Takakura""@en .

  # Find spouse of the child who is royalty
  OPTIONAL { 
    ?child dbo:spouse ?royalSpouse .
    FILTER (regex(str(?royalSpouse), ""Imperial Princess"", ""i"") || regex(str(?royalSpouse), ""Emperor"", ""i""))
  }

  # Find predecessor of the royal spouse
  OPTIONAL {
    ?royalSpouse dbo:predecessor ?predecessor .
  }
}
```",4,5,5,2,2,3,3,71,1,192620,0,5.191541939871561e-06,1.0,1.038302997580754e-05
933,15,train,"Who is the band of the band, that is an artist and a musical artist, of The Ramong Sound?",SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. <http://dbpedia.org/resource/The_Ramong_Sound> <http://dbpedia.org/ontology/associatedMusicalArtist> ?v1 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?v1 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . },"```sparql
SELECT ?bandOfBand WHERE {
  # Identify The Ramones as an artist and a musical artist
  ?ramones dbo:genre dbc:Ramones .
  ?ramones rdf:type dbo:MusicalArtist ;
           dbo:genre dbc:Rock_music .

  # Find the band associated with The Ramones
  OPTIONAL { 
    ?band1 dbo:influencedBy ?ramones .
    FILTER (regex(str(?band1), ""The Ramones"", ""i""))
  }

  # Ensure this band is also an artist and a musical artist
  ?band1 rdf:type dbo:MusicalArtist ;
         dbo:genre dbc:Rock_music .

  # Find the band associated with this band
  OPTIONAL {
    ?band2 dbo:influencedBy ?band1 .
  }

  # Ensure this second band is also an artist and a musical artist
  ?band2 rdf:type dbo:MusicalArtist ;
         dbo:genre dbc:Rock_music .

  BIND(?band2 AS ?bandOfBand)
}
```",2,4,3,2,1,3,3,71,0,0,16,0,0.0,0
892,28,train,Give me the entity in the profession of Henri Crolla and landmark at elevation of 58 and entity in Province of Reggio Emilia.,"SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/province> <http://dbpedia.org/resource/Province_of_Reggio_Emilia> . ?result <http://dbpedia.org/ontology/elevation> ""58""^^<http://www.w3.org/2001/XMLSchema#integer> . ?result <http://dbpedia.org/ontology/country> ?v1 . <http://dbpedia.org/resource/Henri_Crolla> <http://dbpedia.org/property/occupation> ?v1 . }","```sparql
SELECT ?professionEntity ?landmark ?reggioEmiliaEntity WHERE {
  # Find Henri Crolla's profession and another entity in that profession
  ?henriCrolla dbo:occupation ?profession .
  ?henriCrolla rdfs:label ""Henri Crolla""@en .
  
  OPTIONAL { 
    ?otherPerson dbo:occupation ?profession .
    FILTER(?otherPerson != ?henriCrolla)
  }
  
  # Find a landmark at an elevation of 58 meters
  ?landmark dbo:elevationAboveSeaLevel ?elevation .
  FILTER (?elevation = ""58""^^xsd:integer)

  # Find an entity in the Province of Reggio Emilia
  ?reggioEmiliaEntity dbo:location ?location .
  ?location rdfs:label ""Province of Reggio Emilia""@en .
}
```",4,4,5,2,3,3,3,71,0,0,1,0,0.0,0
573,21,train,"Give me the parent of John Quincy Adams and person decedent at the administration, that is a region, of Charlie Baker.","SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Region>. ?result <http://dbpedia.org/ontology/deathPlace> ?v1 . ?v1 <http://dbpedia.org/property/governor> ""Charlie Baker""@en . <http://dbpedia.org/resource/John_Quincy_Adams> <http://dbpedia.org/ontology/parent> ?result . }","```sparql
SELECT ?parent ?decedent WHERE {
  # Find John Quincy Adams and his parent
  ?johnQuincyAdams dbo:parent ?parent .
  ?johnQuincyAdams rdfs:label ""John Quincy Adams""@en .

  # Find Charlie Baker's administrative region
  ?charlieBaker dbo:administrativeRegion ?region .
  ?charlieBaker rdfs:label ""Charlie Baker""@en .

  # Find a decedent of the region
  ?decedent dbo:decedent ?region .
}
```",3,4,4,2,2,3,3,71,0,0,2,0,0.0,0
124,6,train,"Give me the war, that is an event and a military conflict and a societal event, of Frank Rhodes (British Army officer).",SELECT ?result WHERE { ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. <http://dbpedia.org/resource/Frank_Rhodes_(British_Army_officer)> <http://dbpedia.org/ontology/battle> ?result . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. },"```sparql
SELECT ?war WHERE {
  # Find events associated with Frank Rhodes
  ?event dbo:agent ?frankRhodes .
  
  # Ensure the agent is Frank Rhodes (British Army officer)
  ?frankRhodes rdfs:label ""Frank Rhodes""@en .

  # Filter for events that are classified as wars
  ?war rdf:type dbp:War .
  ?event rdf:type dbp:War .
  FILTER (?event = ?war)
}
```",1,4,2,1,1,3,3,71,0,0,7,0,0.0,0
98,2,train,Give me the entity in Philippines.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Philippines> . },"```sparql
SELECT ?entity ?label WHERE {
  ?entity dbo:country dbr:Philippines .
  SERVICE wikibase:label { bd:serviceParam wikibase:language ""[AUTO_LANGUAGE],en"". }
}
```

This query selects entities (`?entity`) and their labels (`?label`) where the entity is associated with the Philippines as its country. The `SERVICE wikibase:label` block ensures that we get human-readable labels for these entities in English.",1,1,2,1,1,2,3,28,0,0,5314,0,0.0,0
965,29,train,"Give me the parent of George Mountbatten, 2nd Marquess of Milford Haven and parent of the child, that is a royalty, of Prince Louis of Battenberg and spouse of Prince Louis of Battenberg.","SELECT ?result WHERE { <http://dbpedia.org/resource/George_Mountbatten,_2nd_Marquess_of_Milford_Haven> <http://dbpedia.org/ontology/parent> ?result . ?result <http://dbpedia.org/ontology/spouse> <http://dbpedia.org/resource/Prince_Louis_of_Battenberg> . ?v3 <http://dbpedia.org/ontology/parent> ?result . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v3 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Prince_Louis_of_Battenberg> . }","```sparql
SELECT ?parentOfGeorge ?royalChildParent WHERE {
  # Find George Mountbatten, 2nd Marquess of Milford Haven and his parent
  ?george dbo:parent ?parentOfGeorge .
  ?george rdfs:label ""George Mountbatten, 2nd Marquess of Milford Haven""@en .

  # Find a royal child of Prince Louis of Battenberg and their parent
  ?princeLouis dbo:child ?royalChild .
  ?princeLouis rdfs:label ""Prince Louis of Battenberg""@en .
  
  OPTIONAL {
    ?royalChild rdf:type dbo:RoyalFamilyMember .
  }
  
  ?royalChild dbo:parent ?royalChildParent .

  # Find the spouse of Prince Louis of Battenberg
  OPTIONAL {
    ?princeLouis dbo:spouse ?spouse .
  }
}
```",4,5,5,2,3,3,3,71,0,0,1,0,0.0,0
445,34,train,"Give me the entity in the residence, that is a country, of the resident, that is an athlete, of Great Britain and entity in United Kingdom.",SELECT ?result WHERE { ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Athlete>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. ?v2 <http://dbpedia.org/property/residence> <http://dbpedia.org/resource/Great_Britain> . ?result <http://dbpedia.org/ontology/location> ?v1 . ?v2 <http://dbpedia.org/property/residence> ?v1 . ?result <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/United_Kingdom> . },"```sparql
SELECT ?athlete ?countryEntity ?ukEntity WHERE {
  # Identify an athlete from Great Britain
  ?athlete dbo:birthPlace dbr:United_Kingdom ;
           dbo:nationality dbr:British_people ;
           rdf:type dbo:Athlete .

  # Determine the country of residence for this athlete
  ?athlete dbo:residence ?country .
  
  # Find an entity in that country
  ?countryEntity dbo:location ?country ;
                 rdfs:label ?entityLabel .

  # Find an entity specifically in the United Kingdom
  ?ukEntity dbo:location dbr:United_Kingdom ;
            rdfs:label ?ukEntityLabel .
}
```",4,6,5,3,2,3,3,71,0,0,102,0,0.0,0
274,12,train,Give me the professional in  and band member of Dizzy Gillespie and associated musical artist of Cecil Taylor.,"SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/associatedMusicalArtist> <http://dbpedia.org/resource/Dizzy_Gillespie> . ?result <http://dbpedia.org/property/occupation> """"@en . <http://dbpedia.org/resource/Cecil_Taylor> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . }","```sparql
SELECT ?gillespieBandMember ?cecilTaylorArtist WHERE {
  # Find a band member of Dizzy Gillespie who is also a professional musician
  ?person dbo:bandMemberOf dbr:Dizzy_Gillespie .
  ?person rdf:type dbo:Musician .

  # Find an associated musical artist of Cecil Taylor
  ?artist dbo:associatedWith dbr:Cecil_Taylor .
}
```",3,3,4,1,3,2,3,28,0,0,1,0,0.0,0
124,24,train,"Give me the military force of the war, that is an event and a military conflict and a societal event, of Frank Rhodes (British Army officer) and military force of Battle of Atbara.",SELECT ?result WHERE { ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?result <http://dbpedia.org/ontology/battle> <http://dbpedia.org/resource/Battle_of_Atbara> . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?result <http://dbpedia.org/ontology/battle> ?v2 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. <http://dbpedia.org/resource/Frank_Rhodes_(British_Army_officer)> <http://dbpedia.org/ontology/battle> ?v2 . },"```sparql
SELECT ?frankRhodesForce ?battleOfAtbaraForce WHERE {
  # Find the military force involved in a war or conflict with Frank Rhodes
  ?frankRhodes dbo:occupation ""British Army officer""@en .
  ?frankRhodes dbo:participatedIn ?event .
  ?event rdf:type dbo:MilitaryConflict ;
         dbo:militaryForce ?frankRhodesForce .

  # Find the military force involved in the Battle of Atbara
  ?battleOfAtbara dbo:name ""Battle of Atbara""@en ;
                  dbo:militaryForce ?battleOfAtbaraForce .
}
```",3,6,4,2,2,3,3,71,0,0,7,0,0.0,0
508,11,train,"Give me the birthplace of the commander, that is a politician, in 1939–1940 Winter Offensive and birthplace of Ma Bufang.",SELECT ?result WHERE { <http://dbpedia.org/resource/1939–1940_Winter_Offensive> <http://dbpedia.org/ontology/commander> ?v2 . ?v2 <http://dbpedia.org/ontology/birthPlace> ?result . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. <http://dbpedia.org/resource/Ma_Bufang> <http://dbpedia.org/ontology/birthPlace> ?result . },"```sparql
SELECT ?birthPlaceChiang ?birthPlaceMa WHERE {
  # Find birthplace of Chiang Kai-shek
  dbp:Chiang_Kai-shek dbo:birthPlace ?birthPlaceChiang .
  
  # Find birthplace of Ma Bufang
  dbp:Ma_Bufang dbo:birthPlace ?birthPlaceMa .
}
```",3,4,4,2,2,3,2,20,0,0,3,0,0.0,0
965,9,train,Give me the parent of Louise Mountbatten and spouse of Prince Louis of Battenberg.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/spouse> <http://dbpedia.org/resource/Prince_Louis_of_Battenberg> . <http://dbpedia.org/resource/Louise_Mountbatten> <http://dbpedia.org/ontology/parent> ?result . },"```sparql
SELECT ?parent ?spouse WHERE {
  # Find parent(s) of Louise Mountbatten
  ?louise dbo:parent ?parent .
  ?louise rdfs:label ""Louise Mountbatten""@en .

  # Find spouse of Prince Louis of Battenberg
  ?prince dbo:spouse ?spouse .
  ?prince rdfs:label ""Prince Louis of Battenberg""@en .
}
```",2,2,3,1,2,3,3,71,1,1,0,0.5,1.0,0.6666666666666666
495,4,train,Give me the parent of Princess Pauline of Württemberg (1810–1856).,SELECT ?result WHERE { <http://dbpedia.org/resource/Princess_Pauline_of_Württemberg_(1810–1856)> <http://dbpedia.org/ontology/parent> ?result . },"```sparql
SELECT ?parent WHERE {
  ?princess a dbo:Person ;
            rdfs:label ""Princess Pauline of Württemberg""@en ;
            dbo:birthYear ?birthYear ;
            dbo:deathYear ?deathYear .
  
  FILTER (?birthYear = 1810 && ?deathYear = 1856)

  ?princess dbo:parent ?parent .
}
```",1,1,2,1,1,3,2,20,0,0,2,0,0.0,0
978,3,train,"Who is the professional, that is a musical artist and an artist, in ?","SELECT ?result WHERE { ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?result <http://dbpedia.org/property/occupation> """"@en . }","```sparql
SELECT DISTINCT ?person WHERE {
  # Find individuals who are musical artists
  ?person dbo:genre ?musicGenre .
  
  # Ensure they also have properties indicating they are visual artists
  OPTIONAL { 
    ?person dbo:artwork ?artwork .
  }
}
```",1,3,2,1,1,3,2,20,7627,223794,1050,0.03295725107055972,0.8789904344819638,0.06353239094036603
365,9,train,"Give me the birth name of the commander, that is an office holder, in Ukrainian–Soviet War.",SELECT ?result WHERE { <http://dbpedia.org/resource/Ukrainian–Soviet_War> <http://dbpedia.org/ontology/commander> ?v0 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v0 <http://dbpedia.org/property/birthName> ?result . },"```sparql
SELECT ?birthName WHERE {
  # Find entities related to the Ukrainian–Soviet War
  ?war dbo:wikiPageRedirects db:Q123456 . # Replace Q123456 with the actual identifier for the war

  # Identify commanders who were office holders
  ?commander dbo:occupation ""Commander""@en .
  ?commander dbo:officeHolder ?office .
  
  # Ensure they are related to the Ukrainian–Soviet War
  ?war dbo:participant ?commander .

  # Retrieve their birth names
  ?commander foaf:name ?birthName .
}
```",2,3,3,2,1,3,2,20,0,0,2,0,0.0,0
892,32,train,Give me the entity in the profession of Henri Crolla and landmark at elevation of the award of Anna Ishii.,SELECT ?result WHERE { <http://dbpedia.org/resource/Anna_Ishii> <http://dbpedia.org/property/awards> ?v3 . <http://dbpedia.org/resource/Henri_Crolla> <http://dbpedia.org/property/occupation> ?v1 . ?result <http://dbpedia.org/ontology/elevation> ?v3 . ?result <http://dbpedia.org/ontology/country> ?v1 . },"```sparql
SELECT ?profession (GROUP_CONCAT(?landmark; separator="", "") AS ?landmarks) WHERE {
  # Part 1: Get Henri Crolla's profession
  ?henriCrolla dbo:occupation ?profession .
  ?henriCrolla rdfs:label ""Henri Crolla""@en .

  # Part 2: Find the elevation of an award associated with Anna Ishii
  OPTIONAL {
    ?annaIshii dbo:award ?award .
    ?annaIshii rdfs:label ""Anna Ishii""@en .
    ?award dbo:elevation ?elevation .
    
    # Find landmarks at this elevation
    ?landmark dbo:elevation ?elevation .
    ?landmark a dbo:Landmark .
  }
}
```",4,4,5,2,2,3,3,71,0,2,11,0.0,0.0,0
456,17,train,"Give me the band, that is a musical artist, of the band of Alan Doyle.",SELECT ?result WHERE { ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?v1 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . <http://dbpedia.org/resource/Alan_Doyle> <http://dbpedia.org/ontology/associatedMusicalArtist> ?v1 . },"```sparql
SELECT ?band WHERE {
  ?doyle dbo:birthName ""Alan Doyle""@en .
  ?doyle dbo:musicalArtist ?band .
}
```",2,3,3,2,1,3,3,71,0,0,2,0,0.0,0
216,26,train,"Give me the player in the coach, that is a soccer player and a sports manager and a soccer manager, of the player, that is an organisation and a sports club and a soccer club, in Džemal Berberović.",SELECT ?result WHERE { <http://dbpedia.org/resource/Džemal_Berberović> <http://dbpedia.org/ontology/team> ?v1 . ?v1 <http://dbpedia.org/ontology/coach> ?v2 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerClub>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerManager>. ?v2 <http://dbpedia.org/ontology/team> ?result . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsManager>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsClub>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerPlayer>. },"```sparql
SELECT ?coach WHERE {
  # Find the player Džemal Berberović and his coach
  ?player dbo:playerInTeam ?team .
  ?player rdfs:label ""Džemal Berberović""@en .
  
  ?team dbo:coach ?coach .

  # Ensure the coach is a soccer player, sports manager, and soccer manager
  ?coach rdf:type dbo:SoccerPlayer ;
         rdf:type dbo:SportsManager ;
         rdf:type dbo:SoccerManager .

  # Find the team that is both a sports club and a soccer club
  ?team rdf:type dbo:SportsClub ;
        rdf:type dbo:SoccerClub .
}
```",3,9,4,3,1,3,3,71,0,0,24,0,0.0,0
645,14,train,"Give me the leader of the office, that is a government agency and an organisation, of Camilo Menéndez Tolosa.",SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/leader> ?result . <http://dbpedia.org/resource/Camilo_Menéndez_Tolosa> <http://dbpedia.org/property/office> ?v1 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/GovernmentAgency>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. },"```sparql
SELECT ?leader WHERE {
  # Find entities associated with Camilo Menéndez Tolosa
  ?entity dbo:employee ?camilo .
  ?camilo rdfs:label ""Camilo Menéndez Tolosa""@en .

  # Ensure the entity is a government agency and an organization
  ?entity rdf:type dbo:GovernmentAgency ;
          dbo:organizationType dbo:Organization .

  # Find the leader of this office or organization
  ?entity dbo:leader ?leader .
}
```",2,4,3,2,1,3,3,71,0,0,1,0,0.0,0
98,13,train,Give me the birth place of Paolo Ballesteros and region of the time zone of Lopez Jaena.,SELECT ?result WHERE { <http://dbpedia.org/resource/Paolo_Ballesteros> <http://dbpedia.org/ontology/birthPlace> ?result . ?result <http://dbpedia.org/ontology/timeZone> ?v0 . <http://dbpedia.org/resource/Lopez_Jaena> <http://dbpedia.org/ontology/timeZone> ?v0 . },"```sparql
SELECT ?birthPlace ?region WHERE {
  # Part 1: Retrieve birth place of Paolo Ballesteros
  ?ballesteros dbo:birthPlace ?birthPlace .
  ?ballesteros rdfs:label ""Paolo Ballesteros""@en .

  # Part 2: Retrieve region of the time zone for Lopez Jaena
  OPTIONAL {
    ?jaena dbo:location ?city .
    ?jaena rdfs:label ""Lopez Jaena""@en .
    
    ?city dbo:timeZone ?timeZone .
    ?timeZone dbo:region ?region .
  }
}
```",3,3,4,2,2,2,3,28,2,0,0,1.0,1.0,1.0
216,8,train,Give me the office of the mayor of Ros Bates.,SELECT ?result WHERE { <http://dbpedia.org/resource/Ros_Bates> <http://dbpedia.org/property/leader> ?v1 . ?v1 <http://dbpedia.org/property/office> ?result . },"```sparql
SELECT ?office WHERE {
  ?person rdfs:label ""Ros Bates""@en .
  ?person dbo:office ?office .
  FILTER (regex(str(?office), ""Mayor of Rockhampton"", ""i""))
}
```",2,2,3,2,1,2,3,28,0,0,30,0,0.0,0
579,2,train,Give me the resident of Scotland.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/residence> <http://dbpedia.org/resource/Scotland> . },"```sparql
SELECT ?monarch WHERE {
  ?monarch dbo:position ""Monarch of the United Kingdom""@en .
  ?monarch rdfs:label ?name .
  FILTER (regex(str(?name), ""King Charles III"", ""i"") || regex(str(?name), ""Queen Elizabeth II"", ""i""))
}
```",1,1,2,1,1,3,2,20,0,0,35,0,0.0,0
645,30,train,"Give me the military force of Spanish Civil War and commander in Battle of Jarama and leader of the office, that is a government agency and an organisation, of Camilo Menéndez Tolosa.",SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. <http://dbpedia.org/resource/Battle_of_Jarama> <http://dbpedia.org/ontology/commander> ?result . <http://dbpedia.org/resource/Camilo_Menéndez_Tolosa> <http://dbpedia.org/property/office> ?v1 . ?result <http://dbpedia.org/ontology/battle> <http://dbpedia.org/resource/Spanish_Civil_War> . ?v1 <http://dbpedia.org/ontology/leader> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/GovernmentAgency>. },"```sparql
SELECT ?militaryForce ?battleCommander ?officeLeader WHERE {
  # Identify military forces in the Spanish Civil War
  ?militaryForce dbo:participatedInWar ?civilWar .
  ?civilWar rdfs:label ""Spanish Civil War""@en .

  # Find commander in Battle of Jarama
  OPTIONAL {
    ?battleCommander dbo:commanded ?unit .
    ?unit dbo:participatedInBattle ?jaramaBattle .
    ?jaramaBattle rdfs:label ""Battle of Jarama""@en .
  }

  # Identify the office related to Camilo Menéndez Tolosa
  OPTIONAL {
    ?office dbo:leader ?officeLeader .
    ?camilo dbo:positionHeld ?office .
    ?camilo rdfs:label ""Camilo Menéndez Tolosa""@en .
    FILTER (regex(str(?office), ""government agency"", ""i"") && regex(str(?office), ""organization"", ""i""))
  }
}
```",4,6,5,2,3,3,3,71,0,0,1,0,0.0,0
554,14,train,"Give me the leader of the birth place of the band, that is an artist, of Rita Redshoes.",SELECT ?result WHERE { ?v0 <http://dbpedia.org/property/leader> ?result . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. ?v2 <http://dbpedia.org/ontology/birthPlace> ?v0 . <http://dbpedia.org/resource/Rita_Redshoes> <http://dbpedia.org/ontology/associatedMusicalArtist> ?v2 . },"```sparql
SELECT ?leader WHERE {
  # Step 1: Identify Rita Redshoes as an artist and her association with a band
  ?rita dbo:birthName ""Rita Redshoes""@en .
  ?rita dbo:associatedBand ?band .

  # Step 2: Find the birthplace of the band (assuming it's relevant)
  OPTIONAL {
    ?band dbo:birthPlace ?birthPlace .
  }

  # If no specific band birthplace, use Rita's birthplace
  OPTIONAL {
    ?rita dbo:birthPlace ?birthPlace .
  }

  # Step 3: Find the leader of the birth place
  ?birthPlace dbo:mayor ?leader .
}
```",3,4,4,3,1,3,2,20,0,0,3,0,0.0,0
606,6,train,Give me the figure known as Barb City and birthplace of Charles I. Barber.,"SELECT ?result WHERE { ?result <http://dbpedia.org/property/nickname> ""Barb City""@en . <http://dbpedia.org/resource/Charles_I._Barber> <http://dbpedia.org/ontology/birthPlace> ?result . }","```sparql
SELECT ?birthPlace WHERE {
  # Find the birthplace of Charles I. Barber
  ?barber dbo:birthPlace ?birthPlace .
  ?barber rdfs:label ""Charles I. Barber""@en .

  # Check if Barb City is a known location and matches the birthplace
  OPTIONAL {
    ?city rdfs:label ""Barb City""@en .
    FILTER (?birthPlace = ?city)
  }
}
```",2,2,3,1,2,3,2,20,1,0,0,1.0,1.0,1.0
933,26,train,Give me the reference to the birth name of the professional in Musician.,SELECT ?result WHERE { ?v2 <http://dbpedia.org/property/birthName> ?v0 . ?v2 <http://dbpedia.org/property/occupation> <http://dbpedia.org/resource/Musician> . ?result <http://xmlns.com/foaf/0.1/name> ?v0 . },"```sparql
SELECT ?musician ?birthName WHERE {
  ?musician rdf:type dbo:Musician .
  ?musician dbo:birthName ?birthName .
}
```",3,3,4,3,1,3,3,71,0,0,364,0,0.0,0
166,11,train,Give me the entity in Spain and resting place of the military force of Spanish Civil War.,SELECT ?result WHERE { ?v2 <http://dbpedia.org/ontology/restingPlace> ?result . ?v2 <http://dbpedia.org/ontology/battle> <http://dbpedia.org/resource/Spanish_Civil_War> . ?result <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Spain> . },"```sparql
SELECT ?entity ?restingPlace WHERE {
  # Find entity related to the Spanish Civil War in Spain
  ?entity dbo:location ?location .
  ?entity rdfs:label ?name .
  FILTER (CONTAINS(LCASE(?name), ""valle de los caídos"") && CONTAINS(LCASE(?location), ""spain""))

  # Identify the resting place of military forces from the Spanish Civil War
  OPTIONAL {
    ?entity dbo:restingPlace ?restingPlace .
    FILTER (CONTAINS(LCASE(?restingPlace), ""valle de los caídos""))
  }
}
```",3,3,4,2,2,3,2,20,0,0,4,0,0.0,0
508,8,train,"Give me the birthplace of the commander, that is Saudi, in Central Plains War.",SELECT ?result WHERE { ?v0 <http://dbpedia.org/ontology/birthPlace> ?result . ?v0 <http://dbpedia.org/ontology/nationality> <http://dbpedia.org/resource/Saudi_Arabia>. <http://dbpedia.org/resource/Central_Plains_War> <http://dbpedia.org/ontology/commander> ?v0 . },"```sparql
SELECT ?birthPlace WHERE {
  # Find the Central Plains War event
  ?event dbo:wikiPageRedirects dbpedia-en:Central_Plains_War .
  
  # Identify a commander involved in the war who is Saudi
  ?commander dbo:nationality dbr:Saudi_Arabia ;
            dbo:occupation ""Commander""@en ;
            dbo:participatedIn ?event .

  # Retrieve the birthplace of this commander
  ?commander dbo:birthPlace ?birthPlace .
}
```",2,3,3,2,1,3,2,20,0,0,3,0,0.0,0
267,1,train,Give me the person born on 1953-03-01.,"SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/birthDate> ""1953-03-01""^^<http://www.w3.org/2001/XMLSchema#date> . }","```sparql
SELECT ?person ?name WHERE {
  ?person dbo:birthDate ""1953-03-01""^^xsd:date .
  OPTIONAL { ?person foaf:name ?name . }
}
```",1,1,2,1,1,3,2,20,35,34,0,0.5072463768115942,1.0,0.6730769230769231
892,26,train,Give me the landmark at elevation of the award of the member of E-girls.,SELECT ?result WHERE { ?v2 <http://dbpedia.org/property/awards> ?v0 . <http://dbpedia.org/resource/E-girls> <http://dbpedia.org/ontology/bandMember> ?v2 . ?result <http://dbpedia.org/ontology/elevation> ?v0 . },"```sparql
SELECT ?landmark WHERE {
  # Step 1: Identify a member of E-girls
  ?member dbo:memberOf dbpedia:en:E-girls .
  
  # Step 2: Determine awards received by this member
  OPTIONAL { 
    ?member dbo:awardReceived ?award .
  }
  
  # Step 3: Find landmarks at the elevation corresponding to the award value
  ?landmark dbo:elevation ?elevation .
  FILTER (?elevation = ?award)
}
```",3,3,4,3,1,3,3,71,0,0,258,0,0.0,0
130,11,train,"Give me the entity in Tennessee and figure known as the film, that is a soccer club and an organisation, of Candice Storey Lee.",SELECT ?result WHERE { ?result <http://dbpedia.org/property/nickname> ?v2 . ?v2 <http://dbpedia.org/ontology/director> <http://dbpedia.org/resource/Candice_Storey_Lee> . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerClub>. ?result <http://dbpedia.org/ontology/state> <http://dbpedia.org/resource/Tennessee> . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. },"```sparql
SELECT ?entity ?film ?soccerClub WHERE {
  # Find an entity in Tennessee
  ?entity dbo:location dbc:Tennessee .
  
  # Check if the entity is associated with a film
  OPTIONAL { 
    ?entity dbo:wikiPageRedirects ?film .
    ?film rdf:type dbo:Film .
  }
  
  # Check if the entity is related to a soccer club
  OPTIONAL {
    ?entity dbo:member ?soccerClub .
    ?soccerClub rdf:type dbo:SoccerClub .
  }

  # Find any connection to Candice Storey Lee
  OPTIONAL {
    ?entity dbo:wikiPageDisambiguates ?candiceStoreyLee .
    ?candiceStoreyLee rdfs:label ""Candice Storey Lee""@en .
  }
}
```",3,5,4,2,2,3,2,20,0,0,1,0,0.0,0
791,29,train,Give me the father of Emperor Go-Toba and predecessor of the child of Emperor Takakura and spouse of Taira no Tokuko.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/spouse> <http://dbpedia.org/resource/Taira_no_Tokuko> . ?v3 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Emperor_Takakura> . ?result <http://dbpedia.org/ontology/successor> ?v3 . <http://dbpedia.org/resource/Emperor_Go-Toba> <http://dbpedia.org/property/father> ?result . },"```sparql
SELECT ?fatherOfGoToba ?predecessor WHERE {
  # Find Emperor Go-Toba and his father
  ?goToba dbo:parent ?fatherOfGoToba .
  ?goToba rdfs:label ""Emperor Go-Toba""@en .

  # Identify the child of Emperor Takakura and Taira no Tokuko
  ?takakura dbo:spouse ?tokuko .
  ?takakura rdfs:label ""Emperor Takakura""@en .
  ?tokuko rdfs:label ""Taira no Tokuko""@en .

  # Find the child of Emperor Takakura and Taira no Tokuko
  ?child dbo:parent ?takakura ;
         dbo:parent ?tokuko .

  # Identify the spouse of this child
  OPTIONAL { 
    ?child dbo:spouse ?spouse .
  }

  # Determine the predecessor of this child
  OPTIONAL {
    ?predecessor dbo:succeededBy ?child .
  }
}
```",4,4,5,2,3,3,3,71,1,0,0,1.0,1.0,1.0
976,7,train,Give me the birth name of Naci Bostancı.,SELECT ?result WHERE { <http://dbpedia.org/resource/Naci_Bostancı> <http://dbpedia.org/property/birthName> ?result . },"```sparql
SELECT ?birthName WHERE {
  ?person rdfs:label ""Naci Bostancı""@en .
  ?person dbo:birthName ?birthName .
}
```",1,1,2,1,1,3,3,71,1,0,0,1.0,1.0,1.0
976,38,train,"Give me the office of the person born as Mehmet Naci Bostancı and office of the mayor, that is a politician and an office holder and Turkish, of Nation Alliance (Turkey).","SELECT ?result WHERE { ?v3 <http://dbpedia.org/ontology/nationality> <http://dbpedia.org/resource/Turkey>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v0 <http://dbpedia.org/property/office> ?result . <http://dbpedia.org/resource/Nation_Alliance_(Turkey)> <http://dbpedia.org/property/leader> ?v3 . ?v3 <http://dbpedia.org/property/office> ?result . ?v0 <http://dbpedia.org/property/birthName> ""Mehmet Naci Bostancı""@en . }","```sparql
SELECT ?office1 ?office2 WHERE {
  # Find the office held by Mehmet Naci Bostancı
  ?person rdfs:label ""Mehmet Naci Bostancı""@en .
  OPTIONAL { ?person dbo:birthName ""Mehmet Naci Bostancı"" . }
  OPTIONAL { ?person dbo:office ?office1 . }

  # Find the office of a mayor who is a politician, office holder, Turkish, and associated with Nation Alliance (Turkey)
  ?mayor rdfs:label ?label .
  ?mayor dbo:nationality dbr:Turkey .
  ?mayor dbo:politicalParty dbr:Nation_Alliance_(Turkey) .
  OPTIONAL { ?mayor dbo:office ?office2 . }
  FILTER CONTAINS(LCASE(?label), ""mayor"")
}
```",4,7,5,2,2,3,3,71,0,0,1,0,0.0,0
645,13,train,"Give me the military force of the force, that is an event and a military conflict and a societal event, of Francisco Largo Caballero.",SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v1 <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Francisco_Largo_Caballero> . ?result <http://dbpedia.org/ontology/battle> ?v1 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. },"```sparql
SELECT ?militaryForce WHERE {
  # Identify the Spanish Civil War as an event, military conflict, and societal event
  ?event dbo:type dbr:Military_conflict ;
         dbo:participant ?participant .
  
  # Ensure it is associated with Francisco Largo Caballero
  ?participant rdfs:label ""Francisco Largo Caballero""@en .

  # Find the military force involved in this event
  OPTIONAL {
    ?event dbo:militaryForce ?militaryForce .
    FILTER (regex(str(?event), ""Spanish Civil War"", ""i""))
  }
}
```",2,5,3,2,1,3,3,71,0,0,514,0,0.0,0
976,27,train,Give me the office of the person born as the birth name of Naci Bostancı.,SELECT ?result WHERE { ?v0 <http://dbpedia.org/property/birthName> ?v1 . ?v0 <http://dbpedia.org/property/office> ?result . <http://dbpedia.org/resource/Naci_Bostancı> <http://dbpedia.org/property/birthName> ?v1 . },"```sparql
SELECT ?office WHERE {
  # Find Naci Bostancı and his birth name
  ?naciBostanci dbo:birthName ?birthName .
  ?naciBostanci rdfs:label ""Naci Bostancı""@en .

  # Find any person with the same birth name as Naci Bostancı
  ?person dbo:birthName ?birthName .

  # Get the office of that person
  ?person dbo:office ?office .
}
```",3,3,4,3,1,3,3,71,0,0,4,0,0.0,0
365,0,train,Give me the person born as Symon Vasylyovych Petliura.,"SELECT ?result WHERE { ?result <http://dbpedia.org/property/birthName> ""Symon Vasylyovych Petliura""@en . }","```sparql
SELECT ?person ?fullName WHERE {
  ?person dbo:birthName ""Symon Vasylyovych Petliura"" .
  OPTIONAL { ?person rdfs:label ?fullName . FILTER (lang(?fullName) = 'en') }
}
```",1,1,2,1,1,3,2,20,0,0,1,0,0.0,0
216,8,train,"Give me the person born, that is a sports manager and a soccer manager and a soccer player, on 1983-12-20.","SELECT ?result WHERE { ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerManager>. ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsManager>. ?result <http://dbpedia.org/ontology/birthDate> ""1983-12-20""^^<http://www.w3.org/2001/XMLSchema#date> . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerPlayer>. }","```sparql
SELECT ?person WHERE {
  ?person dbo:birthDate ""1983-12-20""^^xsd:date .
  ?person rdf:type dbo:SportsManager .
  ?person rdf:type dbo:SoccerManager .
  ?person rdf:type dbo:SoccerPlayer .
}
```",1,4,2,1,1,3,3,71,1,0,0,1.0,1.0,1.0
329,18,train,"Give me the entity in United Kingdom and entity in the birthplace, that is an organisation and a country, of Robert Bates (loyalist).",SELECT ?result WHERE { ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?result <http://dbpedia.org/ontology/country> ?v2 . <http://dbpedia.org/resource/Robert_Bates_(loyalist)> <http://dbpedia.org/ontology/birthPlace> ?v2 . ?result <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/United_Kingdom> . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. },"```sparql
SELECT ?ukOrganization ?birthPlaceEntity WHERE {
  # Find Robert Bates (loyalist) entity
  ?bates dbo:wikiPageRedirects db:Robert_Bates_(loyalist) .
  
  # Find organization in the United Kingdom related to Robert Bates
  OPTIONAL {
    ?bates dbo:associatedWith ?ukOrganization .
    ?ukOrganization dbo:country dbr:United_Kingdom .
    FILTER (isLiteral(?ukOrganization))
  }
  
  # Find birthplace of Robert Bates and determine if it's a country or organization
  OPTIONAL {
    ?bates dbo:birthPlace ?birthPlaceEntity .
    { 
      ?birthPlaceEntity rdf:type dbpedia-owl:Country .
    } UNION {
      ?birthPlaceEntity rdf:type dbpedia-owl:Organization .
    }
  }
}
```",3,5,4,2,2,2,3,28,0,0,531,0,0.0,0
329,6,train,Give me the entity in United Kingdom and birthplace of Eric Cross (writer).,SELECT ?result WHERE { <http://dbpedia.org/resource/Eric_Cross_(writer)> <http://dbpedia.org/ontology/birthPlace> ?result . ?result <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/United_Kingdom> . },"```sparql
SELECT ?birthPlace WHERE {
  ?ericCross dbo:birthPlace ?birthPlace .
  ?ericCross rdfs:label ""Eric Cross (writer)""@en .

  OPTIONAL {
    ?birthPlace dbo:country dbr:United_Kingdom .
  }
}
```",2,2,3,1,2,2,3,28,1,1,0,0.5,1.0,0.6666666666666666
826,6,train,"Who is the child, that is a royalty, of Louis I, Grand Duke of Hesse?","SELECT ?result WHERE { ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. <http://dbpedia.org/resource/Louis_I,_Grand_Duke_of_Hesse> <http://dbpedia.org/ontology/child> ?result . }","```sparql
SELECT ?child WHERE {
  # Find Louis I, Grand Duke of Hesse and his children
  ?louis dbo:child ?child .
  ?louis rdfs:label ""Louis I, Grand Duke of Hesse""@en .

  # Ensure the child is royalty by checking their label for royal titles
  FILTER (regex(str(?child), ""(Prince|Princess)"", ""i""))
}
```",1,2,2,1,1,3,3,71,0,1,1,0.0,0.0,0
459,17,train,"Give me the governor of the administration, that is a politician, of Brad Henry and person born as John Kevin Stitt.","SELECT ?result WHERE { ?v1 <http://dbpedia.org/property/governor> <http://dbpedia.org/resource/Brad_Henry> . ?result <http://dbpedia.org/property/birthName> ""John Kevin Stitt""@en . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v1 <http://dbpedia.org/property/governor> ?result . }","```sparql
SELECT ?governor WHERE {
  # Identify Brad Henry's administration period
  ?bradHenry dbo:office ""Governor of Oklahoma""@en .
  ?bradHenry dbo:termStart ?start .
  ?bradHenry dbo:termEnd ?end .

  # Find the governor during Brad Henry's term who is a politician
  ?governor dbo:governorOf ?state .
  ?governor dbo:office ""Governor of Oklahoma""@en .
  FILTER (?governor != <http://dbpedia.org/resource/Brad_Henry>).
  FILTER (xsd:date(?start) <= xsd:date(2007-01-10) && xsd:date(?end) >= xsd:date(2011-01-10)).

  # Confirm John Kevin Stitt's identity
  ?johnStitt dbo:birthDate ""1975-05-06""^^xsd:date .
  ?johnStitt rdfs:label ""John Kevin Stitt""@en .

  # Check if the governor is a politician
  OPTIONAL { 
    ?governor rdf:type dbo:Politician .
  }
}
```",3,4,4,2,2,2,3,28,0,0,1,0,0.0,0
417,3,train,"Who is the child of Knud, Hereditary Prince of Denmark?","SELECT ?result WHERE { ?result <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Knud,_Hereditary_Prince_of_Denmark> . }","```sparql
SELECT ?child WHERE {
  ?knud rdfs:label ""Knud, Hereditary Prince of Denmark""@en .
  ?child dbo:parent ?knud .
}
```",1,1,2,1,1,3,3,71,3,0,0,1.0,1.0,1.0
839,32,train,"Give me the band of the person born, that is a musical artist, as Kevin Richard Russell and band of the member of Böhse Onkelz.","SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. <http://dbpedia.org/resource/Böhse_Onkelz> <http://dbpedia.org/ontology/bandMember> ?v3 . ?result <http://dbpedia.org/ontology/bandMember> ?v3 . ?v1 <http://dbpedia.org/property/birthName> ""Kevin Richard Russell""@en . ?v1 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . }","```sparql
# Query for Kevin Richard Russell's band
SELECT ?band WHERE {
  ?kevin a dbo:MusicalArtist ;
         foaf:name ""Kevin Richard Russell""@en .
  OPTIONAL { 
    ?kevin dbo:associatedBand ?band .
  }
}

UNION

# Query for a member of Böhse Onkelz and their associated band
SELECT ?memberBand WHERE {
  ?boMember dbo:memberOf dbr:Böhse_Onkelz ;
            a dbo:MusicalArtist .
  OPTIONAL { 
    ?boMember dbo:associatedBand ?memberBand .
  }
}
```",4,5,5,2,2,3,3,71,0,0,1,0,0.0,0
36,3,train,"Give me the claim to fame, that is a film, of Lepacious Bose.",SELECT ?result WHERE { <http://dbpedia.org/resource/Lepacious_Bose> <http://dbpedia.org/ontology/knownFor> ?result . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Film>. },"```sparql
SELECT ?film WHERE {
  ?lepaBose dbo:birthName ""Lepa Bose""@en .
  OPTIONAL { 
    ?lepaBose dbo:film ?film .
  }
}
```",1,2,2,1,1,2,3,28,0,0,1,0,0.0,0
965,26,train,"Give me the parent of the child, that is a royalty, of the person born, that is a politician, on 1854-05-24.","SELECT ?result WHERE { ?v0 <http://dbpedia.org/ontology/parent> ?result . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v0 <http://dbpedia.org/property/father> ?v2 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v2 <http://dbpedia.org/ontology/birthDate> ""1854-05-24""^^<http://www.w3.org/2001/XMLSchema#date> . }","```sparql
SELECT ?parent WHERE {
  # Find the politician born on 1854-05-24
  ?politician dbo:birthDate ""1854-05-24""^^xsd:date ;
              rdf:type dbo:Politician .
  
  # Identify their child who is royalty
  ?child dbo:childOf ?politician ;
         rdf:type dbo:RoyalFamilyMember .

  # Find the parent of this royal child
  ?child dbo:parent ?parent .
}
```",3,5,4,3,1,3,3,71,0,0,2,0,0.0,0
955,8,train,"Give me the band of the band member, that is a musical artist and an artist, of Street Dogs.",SELECT ?result WHERE { ?v0 <http://dbpedia.org/ontology/associatedMusicalArtist> <http://dbpedia.org/resource/Street_Dogs> . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. ?result <http://dbpedia.org/ontology/bandMember> ?v0 . },"```sparql
SELECT ?band WHERE {
  # Find a member of Street Dogs
  ?member dbo:memberOfBand ?streetDogs .
  ?streetDogs rdfs:label ""Street Dogs""@en .

  # Ensure the member is both a musical artist and an artist
  ?member dbo:occupation dbc:Musical_Artists .
  ?member dbo:occupation dbc:Artists .

  # Find other bands associated with this member
  ?member dbo:memberOfBand ?band .
}
```",2,4,3,2,1,3,2,20,0,0,3,0,0.0,0
445,13,train,Give me the death place of the awardee of Royal Astronomical Society.,SELECT ?result WHERE { ?v1 <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/Royal_Astronomical_Society> . ?v1 <http://dbpedia.org/ontology/deathPlace> ?result . },"```sparql
SELECT ?awardee ?deathPlace WHERE {
  # Find awardees of the Royal Astronomical Society
  ?awardee dbo:award ?rasAward .
  ?rasAward dbo:recipient ?awardee ;
            dbo:givenBy dbpedia:Royal_Astronomical_Society .

  # Get death place of the awardee
  OPTIONAL { 
    ?awardee dbo:deathPlace ?deathPlace .
  }
}
```",2,2,3,2,1,3,3,71,0,0,2,0,0.0,0
933,22,train,"Give me the band of Mike Elliott (saxophonist) and band of the band, that is a group and a band and an organisation, of Alan Warner (musician).",SELECT ?result WHERE { ?v0 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. <http://dbpedia.org/resource/Alan_Warner_(musician)> <http://dbpedia.org/ontology/associatedMusicalArtist> ?v0 . <http://dbpedia.org/resource/Mike_Elliott_(saxophonist)> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Group>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Band>. },"```sparql
SELECT ?mikeBand ?alanBand WHERE {
  # Find Mike Elliott's band
  ?mikeElliott dbo:birthName ""Mike Elliott""@en .
  ?mikeElliott dbo:member ?mikeBand .

  # Find Alan Warner's band and ensure it is a group and an organization
  ?alanWarner dbo:birthName ""Alan Warner""@en .
  ?alanWarner dbo:member ?alanBand .
  
  # Ensure the band of Alan Warner is both a group and an organization
  ?alanBand rdf:type dbp:MusicalGroup ;
            rdf:type dbp:Organization .
}
```",3,6,4,2,2,3,3,71,0,0,3,0,0.0,0
267,6,train,Give me the person born on 1953-03-01 and coach of Iran national football team.,"SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/birthDate> ""1953-03-01""^^<http://www.w3.org/2001/XMLSchema#date> . <http://dbpedia.org/resource/Iran_national_football_team> <http://dbpedia.org/ontology/coach> ?result . }","```sparql
SELECT ?person WHERE {
  ?person dbo:birthDate ""1953-03-01""^^xsd:date .
  ?person dbo:coachOfTeam ?team .
  ?team rdfs:label ""Iran national football team""@en .
}
```",2,2,3,1,2,3,2,20,0,0,1,0,0.0,0
582,33,train,"Give me the player in the father, that is an athlete and a soccer manager and a sports manager, of the child of Kazuaki Nagasawa and reference to Japan.","SELECT ?result WHERE { ?v0 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Kazuaki_Nagasawa> . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerManager>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsManager>. ?v3 <http://dbpedia.org/ontology/team> ?result . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Athlete>. ?v0 <http://dbpedia.org/property/father> ?v3 . ?result <http://xmlns.com/foaf/0.1/name> ""Japan""@en . }","```sparql
SELECT ?father WHERE {
  # Find the child of Kazuaki Nagasawa
  ?nagasawaChild dbo:childOf ?kazuakiNagasawa .
  ?kazuakiNagasawa rdfs:label ""Kazuaki Nagasawa""@en .

  # Determine the father of this child
  ?nagasawaChild dbo:parent ?father .

  # Check if the father is an athlete, soccer manager, and sports manager
  ?father dbo:athlete true .
  ?father dbo:soccerManager true .
  ?father dbo:sportsManager true .

  # Ensure reference to Japan
  OPTIONAL { 
    ?father dbo:nationality dbr:Japan .
  }
}
```",4,7,5,3,2,3,3,71,0,0,1,0,0.0,0
273,1,train,Give me the parent of Gianni Agnelli.,SELECT ?result WHERE { <http://dbpedia.org/resource/Gianni_Agnelli> <http://dbpedia.org/ontology/parent> ?result . },"```sparql
SELECT ?parent WHERE {
  ?agnelli rdfs:label ""Gianni Agnelli""@en .
  ?agnelli dbo:parent ?parent .
}
```",1,1,2,1,1,3,2,20,2,0,0,1.0,1.0,1.0
976,20,train,"Give me the office of the mayor, that is a politician and an office holder and Turkish, of Nation Alliance (Turkey) and office of Mustafa Şentop.",SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v1 <http://dbpedia.org/property/office> ?result . <http://dbpedia.org/resource/Nation_Alliance_(Turkey)> <http://dbpedia.org/property/leader> ?v1 . <http://dbpedia.org/resource/Mustafa_Şentop> <http://dbpedia.org/property/office> ?result . ?v1 <http://dbpedia.org/ontology/nationality> <http://dbpedia.org/resource/Turkey>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. },"```sparql
SELECT ?mayorOffice ?mustafaOffice WHERE {
  # Find the mayor who is a politician, office holder, Turkish, and from Nation Alliance (Turkey)
  ?person dbo:office ?mayorOffice ;
          dbo:country dbr:Turkey ;
          dbo:politicalParty dbr:Nation_Alliance_(Turkey) .
  FILTER EXISTS { ?person rdf:type dbo:Politician . }
  FILTER EXISTS { ?person rdf:type dbo:OfficeHolder . }
  FILTER (langMatches(lang(?person), ""tr""))

  # Find the office of Mustafa Şentop
  ?mustafa dbo:office ?mustafaOffice ;
           rdfs:label ""Mustafa Şentop""@en .
}
```",3,6,4,2,2,3,3,71,0,0,1,0,0.0,0
326,10,train,"Give me the award, that is a country, of the awardee of French Legion of Honor.","SELECT ?result WHERE { ?v0 <http://dbpedia.org/property/awards> ""French Legion of Honor""@en . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. ?v0 <http://dbpedia.org/property/awards> ?result . }","```sparql
SELECT DISTINCT ?country WHERE {
  # Find awardees of the French Legion of Honor
  ?person dbo:awardReceived dbr:French_Legion_of_Honor .
  
  # Find other awards received by these awardees
  ?person dbo:awardReceived ?otherAward .

  # Filter to find awards that are countries
  ?otherAward rdf:type dbo:Country .
  BIND(?otherAward AS ?country)
}
```",2,3,3,2,1,3,2,20,0,0,3,0,0.0,0
554,1,train,Give me the leader of Portuguese Mozambique.,SELECT ?result WHERE { <http://dbpedia.org/resource/Portuguese_Mozambique> <http://dbpedia.org/property/leader> ?result . },"```sparql
SELECT ?president WHERE {
  ?country dbr:Mozambique .
  ?country dbo:headOfState ?president .
}
```",1,1,2,1,1,3,2,20,0,0,3,0,0.0,0
715,0,train,Give me the commander in Rif War.,SELECT ?result WHERE { <http://dbpedia.org/resource/Rif_War> <http://dbpedia.org/ontology/commander> ?result . },"```sparql
SELECT ?commander WHERE {
  ?event dbo:wikiPageRedirects db:Q1234567 ; # Assuming Q1234567 is the DBpedia ID for Rif War
          dbo:militaryCommander ?commander .
}
```",1,1,2,1,1,3,3,71,0,0,22,0,0.0,0
382,9,train,"Give me the manager, that is a soccer manager and an athlete and a sports manager, of the player in Lukas Kübler.",SELECT ?result WHERE { ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsManager>. ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerManager>. ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Athlete>. ?v0 <http://dbpedia.org/ontology/manager> ?result . <http://dbpedia.org/resource/Lukas_Kübler> <http://dbpedia.org/ontology/team> ?v0 . },"```sparql
SELECT ?manager WHERE {
  # Find Lukas Kübler's manager
  ?player dbo:manager ?manager .
  ?player rdfs:label ""Lukas Kübler""@en .

  # Ensure the manager is a soccer manager, athlete, and sports manager
  ?manager rdf:type dbo:SoccerManager ;
           rdf:type dbo:Athlete ;
           rdf:type dbo:SportsManager .
}
```",2,5,3,2,1,3,2,20,0,0,3,0,0.0,0
417,1,train,Give me the child of Christian X of Denmark.,SELECT ?result WHERE { ?result <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Christian_X_of_Denmark> . },"```sparql
SELECT ?child WHERE {
  ?christianX rdfs:label ""Christian X of Denmark""@en .
  ?christianX dbo:child ?child .
}
```",1,1,2,1,1,3,3,71,2,0,0,1.0,1.0,1.0
456,15,train,"Give me the actor of the movie, that is a work and a television show, with Ross Newton.",SELECT ?result WHERE { ?v1 <http://dbpedia.org/property/starring> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/TelevisionShow>. ?v1 <http://dbpedia.org/property/starring> <http://dbpedia.org/resource/Ross_Newton> . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. },"```sparql
SELECT ?movie WHERE {
  # Find the DBpedia resource for Ross Newton
  ?rossNewton rdfs:label ""Ross Newton""@en .
  
  # Identify movies where Ross Newton is an actor
  ?movie dbo:actor ?rossNewton ;
         rdf:type dbo:Film .

  # Check if these movies are also classified as television shows
  ?movie rdf:type dbo:TelevisionShow .
}
```",2,4,3,2,1,3,3,71,0,0,29,0,0.0,0
917,15,train,"Who is the child, that is a royalty, of the mayor of Hawaiian Kingdom?",SELECT ?result WHERE { <http://dbpedia.org/resource/Hawaiian_Kingdom> <http://dbpedia.org/property/leader> ?v1 . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?result <http://dbpedia.org/property/father> ?v1 . },"```sparql
SELECT ?child WHERE {
  # Find the mayor of the Hawaiian Kingdom
  ?mayor dbo:position dbr:Mayor_of_the_Hawaiian_Kingdom .
  
  # Find children of the mayor
  ?mayor dbo:child ?child .

  # Filter to find which child is royalty
  OPTIONAL { 
    ?child dbo:royaltyStatus dbr:Royal .
  }
}
```",2,3,3,2,1,3,3,71,0,0,8,0,0.0,0
579,7,train,"Give me the native of the residence, that is English and a settlement, of Alan Clyne.",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/birthPlace> ?v1 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. <http://dbpedia.org/resource/Alan_Clyne> <http://dbpedia.org/property/residence> ?v1 . ?v1 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/United_Kingdom>. },"```sparql
SELECT ?native WHERE {
  # Find Alan Clyne
  ?clyne dbo:birthPlace ?residence .
  ?clyne rdfs:label ""Alan Clyne""@en .

  # Ensure the residence is a settlement in England
  ?residence rdf:type dbo:Settlement ;
             dbo:country dbr:England .

  # Find natives of this residence
  ?native dbo:nativePlace ?residence .
}
```",2,4,3,2,1,3,2,20,0,0,1711,0,0.0,0
216,20,train,"Give me the player in Igor Bišćan and player in the coach, that is a soccer player and a sports manager and a soccer manager, of Bosnia and Herzegovina national under-18 football team.",SELECT ?result WHERE { ?v2 <http://dbpedia.org/ontology/team> ?result . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerPlayer>. <http://dbpedia.org/resource/Bosnia_and_Herzegovina_national_under-18_football_team> <http://dbpedia.org/ontology/coach> ?v2 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerManager>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsManager>. <http://dbpedia.org/resource/Igor_Bišćan> <http://dbpedia.org/ontology/team> ?result . },"```sparql
SELECT DISTINCT ?player WHERE {
  # Find Igor Bišćan's teams and teammates
  ?team dbo:member ?bišćan .
  ?bišćan rdfs:label ""Igor Bišćan""@en .
  
  ?team dbo:member ?player .
  FILTER (?bišćan != ?player)

  # Find coaches of the Bosnia and Herzegovina national under-18 football team
  ?coachTeam dbo:coach ?coach .
  ?coachTeam rdfs:label ""Bosnia and Herzegovina national under-18 football team""@en .

  # Ensure the player is also a coach for this team
  FILTER (?player = ?coach)

  # Check if the individual has roles as a soccer player, sports manager, or soccer manager
  OPTIONAL { 
    ?player dbo:occupation ""soccer player""@en .
  }
  OPTIONAL {
    ?player dbo:occupation ""sports manager""@en .
  }
  OPTIONAL {
    ?player dbo:occupation ""soccer manager""@en .
  }

  # Ensure the individual has all required roles
  FILTER (
    EXISTS { ?player dbo:occupation ""soccer player""@en . } &&
    (EXISTS { ?player dbo:occupation ""sports manager""@en . } ||
     EXISTS { ?player dbo:occupation ""soccer manager""@en . })
  )
}
```",3,6,4,2,2,3,3,71,0,0,3,0,0.0,0
216,9,train,Give me the administration of  and party of Campbell Newman.,"SELECT ?result WHERE { <http://dbpedia.org/resource/Campbell_Newman> <http://dbpedia.org/ontology/party> ?result . ?result <http://dbpedia.org/property/leader> """"@en . }","```sparql
SELECT ?administration ?party WHERE {
  # Identify Campbell Newman and retrieve his administration
  ?newman dbo:office ?administration .
  ?newman rdfs:label ""Campbell Newman""@en .

  # Retrieve the political party of Campbell Newman
  ?newman dbo:party ?party .
}
```",2,2,3,1,2,2,3,28,0,0,1,0,0.0,0
445,8,train,Give me the award of George H. Cameron.,SELECT ?result WHERE { <http://dbpedia.org/resource/George_H._Cameron> <http://dbpedia.org/property/awards> ?result . },"```sparql
SELECT ?award WHERE {
  ?person rdfs:label ""George H. Cameron""@en .
  ?person dbo:award ?award .
}
```",1,1,2,1,1,3,3,71,2,0,3,1.0,0.4,0.5714285714285715
892,21,train,Give me the entity in the profession of Henri Crolla and entity in Province of Reggio Emilia.,SELECT ?result WHERE { <http://dbpedia.org/resource/Henri_Crolla> <http://dbpedia.org/property/occupation> ?v2 . ?result <http://dbpedia.org/ontology/province> <http://dbpedia.org/resource/Province_of_Reggio_Emilia> . ?result <http://dbpedia.org/ontology/country> ?v2 . },"```sparql
# Query for Henri Crolla's profession
SELECT ?profession WHERE {
  ?crolla dbo:occupation ?profession .
  ?crolla rdfs:label ""Henri Crolla""@en .
}

# Query for an entity in the Province of Reggio Emilia
SELECT DISTINCT ?entity WHERE {
  ?entity dbo:location ?reggioEmilia .
  ?reggioEmilia rdfs:label ""Province of Reggio Emilia""@en .
}
```",3,3,4,2,2,3,3,71,0,0,40,0,0.0,0
236,10,train,"Give me the administration of the reference, that is an office holder and a politician, to James Madison.","SELECT ?result WHERE { ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?result <http://dbpedia.org/property/leader> ?v0 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v0 <http://xmlns.com/foaf/0.1/name> ""James Madison""@en . }","```sparql
SELECT DISTINCT ?administration WHERE {
  # Identify James Madison
  ?madison rdfs:label ""James Madison""@en .
  
  # Find office holders who are politicians during his time
  ?officeHolder dbo:officeHolder ?position ;
               dbo:politicalAffiliation ?affiliation ;
               dbo:presidency ?administration .

  # Ensure the administration is related to James Madison's political career
  FILTER EXISTS { 
    ?madison dbo:presidency ?administration .
  }
}
```",2,4,3,2,1,3,2,20,0,0,4,0,0.0,0
465,24,train,"Give me the spouse of the child, that is a royalty, of Ferdinand I, Holy Roman Emperor and successor of Renée of France.","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/spouse> ?v2 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. <http://dbpedia.org/resource/Renée_of_France> <http://dbpedia.org/ontology/successor> ?result . <http://dbpedia.org/resource/Ferdinand_I,_Holy_Roman_Emperor> <http://dbpedia.org/ontology/child> ?v2 . }","```sparql
SELECT ?spouse WHERE {
  # Find Ferdinand I and his children
  ?ferdinand dbo:child ?child .
  ?ferdinand rdfs:label ""Ferdinand I, Holy Roman Emperor""@en .

  # Ensure the child is royalty (e.g., by checking for a title)
  OPTIONAL { 
    ?child dbo:title ?title .
    FILTER regex(str(?title), ""King|Queen|Prince|Princess"", ""i"")
  }

  # Find the spouse of this royal child
  ?child dbo:spouse ?spouse .
}
```",3,4,4,2,2,3,3,71,1,8,0,0.1111111111111111,1.0,0.19999999999999998
976,15,train,"Who is the leader, that is a politician, of the administration, that is an organisation, of Kemal Kılıçdaroğlu?",SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/leader> ?result . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?v1 <http://dbpedia.org/property/leader> <http://dbpedia.org/resource/Kemal_Kılıçdaroğlu> . },"```sparql
SELECT ?leader WHERE {
  # Find the administration/organization led by Kemal Kılıçdaroğlu
  ?kiliçdaroğlu dbo:position ?position .
  ?kiliçdaroğlu rdfs:label ""Kemal Kılıçdaroğlu""@en .
  
  OPTIONAL {
    ?position dbo:leader ?leader .
  }
  
  # Ensure the leader is a politician
  FILTER EXISTS { 
    ?leader rdf:type dbo:Politician .
  }
}
```",2,4,3,2,1,3,3,71,0,0,5,0,0.0,0
417,38,train,"Give me the child of the child, that is a royalty, of Frederick Francis III, Grand Duke of Mecklenburg-Schwerin and child of the father of Frederick IX of Denmark.","SELECT ?result WHERE { ?v2 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Frederick_Francis_III,_Grand_Duke_of_Mecklenburg-Schwerin> . ?result <http://dbpedia.org/ontology/parent> ?v2 . <http://dbpedia.org/resource/Frederick_IX_of_Denmark> <http://dbpedia.org/property/father> ?v3 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?result <http://dbpedia.org/property/father> ?v3 . }","```sparql
SELECT ?grandchild WHERE {
  # Find a child of Frederick Francis III, Grand Duke of Mecklenburg-Schwerin
  ?frederickFrancisIII dbo:spouseOrChild ?child .
  ?frederickFrancisIII rdfs:label ""Frederick Francis III, Grand Duke of Mecklenburg-Schwerin""@en .
  
  # Ensure the child is royalty
  ?child rdf:type dbo:Monarch .

  # Find the father of Frederick IX of Denmark
  ?frederickIX dbo:parent ?father .
  ?frederickIX rdfs:label ""Frederick IX of Denmark""@en .

  # The grandchild must be a child of both entities found above
  ?child dbo:spouseOrChild ?grandchild .
  ?father dbo:spouseOrChild ?grandchild .
}
```",4,5,5,2,2,3,3,71,0,0,2,0,0.0,0
456,18,train,Give me the spouse of Danielle Spencer (Australian actress) and professional in  and band of Alan Doyle.,"SELECT ?result WHERE { <http://dbpedia.org/resource/Danielle_Spencer_(Australian_actress)> <http://dbpedia.org/ontology/spouse> ?result . <http://dbpedia.org/resource/Alan_Doyle> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?result <http://dbpedia.org/property/occupation> """"@en . }","```sparql
# Query to find the spouse of Danielle Spencer (Australian actress)
SELECT ?spouse WHERE {
  ?danielle a dbo:Actor ;
           rdfs:label ""Danielle Spencer""@en .
  OPTIONAL { 
    ?danielle dbo:spouse ?spouse .
  }
}

UNION

# Query to find the band associated with Alan Doyle
SELECT ?band WHERE {
  ?alan a dbo:Musician ;
        rdfs:label ""Alan Doyle""@en .
  OPTIONAL { 
    ?alan dbo:memberOfBand ?band .
  }
}
```",3,3,4,1,3,3,3,71,0,0,1,0,0.0,0
417,29,train,Give me the spouse of Princess Caroline-Mathilde of Denmark and child of the father of Frederick IX of Denmark and child of Alexandrine of Mecklenburg-Schwerin.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/parent> <http://dbpedia.org/resource/Alexandrine_of_Mecklenburg-Schwerin> . <http://dbpedia.org/resource/Frederick_IX_of_Denmark> <http://dbpedia.org/property/father> ?v3 . ?result <http://dbpedia.org/ontology/spouse> <http://dbpedia.org/resource/Princess_Caroline-Mathilde_of_Denmark> . ?result <http://dbpedia.org/property/father> ?v3 . },"```sparql
SELECT ?spouse ?child WHERE {
  # Find Princess Caroline-Mathilde and her spouse
  ?carolineMathilde rdfs:label ""Princess Caroline-Mathilde of Denmark""@en .
  ?carolineMathilde dbo:spouse ?spouse .

  # Identify Frederick IX's father, Christian X
  ?frederickIX rdfs:label ""Frederick IX of Denmark""@en .
  ?christianX dbo:child ?frederickIX .
  ?christianX rdfs:label ""Christian X of Denmark""@en .

  # Find children of Christian X and filter those who are also children of Alexandrine
  ?alexandrine rdfs:label ""Alexandrine of Mecklenburg-Schwerin""@en .
  ?child dbo:parent ?christianX ;
         dbo:parent ?alexandrine .
}
```",4,4,5,2,3,3,3,71,1,1,0,0.5,1.0,0.6666666666666666
98,9,train,Give me the birth place of Paolo Ballesteros and entity in Philippines.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Philippines> . <http://dbpedia.org/resource/Paolo_Ballesteros> <http://dbpedia.org/ontology/birthPlace> ?result . },"```sparql
# Query to find the birth place of Paolo Ballesteros
SELECT ?birthPlace WHERE {
  ?paolo dbo:birthPlace ?birthPlace .
  ?paolo rdfs:label ""Paolo Ballesteros""@en .
}

# Query to find an entity in the Philippines
SELECT ?entity WHERE {
  ?entity dbo:country dbr:Philippines .
}
LIMIT 1
```",2,2,3,1,2,2,3,28,0,0,2,0,0.0,0
465,9,train,"Give me the successor of Ercole II d'Este, Duke of Ferrara and spouse of Archduchess Barbara of Austria.","SELECT ?result WHERE { <http://dbpedia.org/resource/Ercole_II_d'Este,_Duke_of_Ferrara> <http://dbpedia.org/ontology/successor> ?result . ?result <http://dbpedia.org/ontology/spouse> <http://dbpedia.org/resource/Archduchess_Barbara_of_Austria> . }","```sparql
SELECT ?successor WHERE {
  ?ercole dbo:successor ?successor .
  ?ercole rdfs:label ""Ercole II d'Este, Duke of Ferrara""@en .
}
```",2,2,3,1,2,3,3,71,1,0,0,1.0,1.0,1.0
274,2,train,Give me the associated musical artist of Cecil Taylor.,SELECT ?result WHERE { <http://dbpedia.org/resource/Cecil_Taylor> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . },"```sparql
SELECT ?artist WHERE {
  ?cecilTaylor dbo:associatedMusicalArtist ?artist .
  ?cecilTaylor rdfs:label ""Cecil Taylor""@en .
}
```",1,1,2,1,1,2,3,28,14,0,0,1.0,1.0,1.0
965,0,train,Give me the spouse of Prince Louis of Battenberg.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/spouse> <http://dbpedia.org/resource/Prince_Louis_of_Battenberg> . },"```sparql
SELECT ?spouse WHERE {
  ?person rdfs:label ""Prince Louis of Battenberg""@en .
  ?person dbo:spouse ?spouse .
}
```",1,1,2,1,1,3,3,71,1,0,0,1.0,1.0,1.0
987,38,train,"Give me the birth place of the actor of All for Free and entity in the region, that is a country, of Central European Time.",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/country> ?v0 . ?v3 <http://dbpedia.org/ontology/birthPlace> ?result . ?v0 <http://dbpedia.org/property/timeZone> <http://dbpedia.org/resource/Central_European_Time> . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. <http://dbpedia.org/resource/All_for_Free> <http://dbpedia.org/property/starring> ?v3 . },"```sparql
# Step 1: Get the actor associated with ""All for Free""
SELECT ?actor WHERE {
  ?movie dbo:title ""All for Free""@en .
  ?movie dbo:starring ?actor .
}

# Step 2: Find the birthplace of this actor
SELECT ?birthPlace WHERE {
  ?actor dbo:birthPlace ?birthPlace .
  # Assuming we have identified the actor from step 1, replace <ActorURI> with actual URI
  VALUES (?actor) {<ActorURI>}
}

# Step 3: Identify a country in the Central European Time zone
SELECT DISTINCT ?country WHERE {
  ?timezone dbo:timeZoneName ""Central European Time"" .
  ?timezone dbo:country ?country .
}

# Step 4: Find an entity within that country (e.g., a city or landmark)
SELECT ?entity WHERE {
  # Assuming we have identified the country from step 3, replace <CountryURI> with actual URI
  VALUES (?country) {<CountryURI>}
  ?entity dbo:country ?country .
}
```",4,5,5,2,2,3,3,71,0,0,4,0,0.0,0
459,3,train,"Give me the death place, that is a settlement, of Cliff Roquemore.",SELECT ?result WHERE { <http://dbpedia.org/resource/Cliff_Roquemore> <http://dbpedia.org/ontology/deathPlace> ?result . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. },"```sparql
SELECT ?deathPlace WHERE {
  # Find Cliff Roquemore and his death place
  ?person dbo:deathPlace ?deathPlace .
  ?person rdfs:label ""Cliff Roquemore""@en .

  # Ensure the death place is a settlement
  ?deathPlace rdf:type dbpedia-owl:PopulatedPlace .
}
```",1,2,2,1,1,2,3,28,0,0,2,0,0.0,0
465,16,train,"Give me the child, that is a royalty, of the parent of Elizabeth of Austria (1526–1545).",SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Elizabeth_of_Austria_(1526–1545)> . ?v1 <http://dbpedia.org/ontology/child> ?result . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. },"```sparql
SELECT ?child WHERE {
  # Identify Elizabeth of Austria (1526–1545)
  ?elizabeth dbo:birthDate ?birth .
  ?elizabeth dbo:deathDate ?death .
  FILTER (?birth >= ""1526-01-01""^^xsd:date && ?death <= ""1545-12-31""^^xsd:date)
  ?elizabeth rdfs:label ""Elizabeth of Austria""@en .

  # Find her parent
  ?elizabeth dbo:parent ?parent .

  # Identify children of this parent who are royalty
  ?parent dbo:child ?child .
  OPTIONAL { ?child dbo:royalTitle ?title . }
  FILTER EXISTS { ?child dbo:royalTitle ?title } 
}
```",2,3,3,2,1,3,3,71,0,0,11,0,0.0,0
433,25,train,Give me the associated musical artist of Bill Evans and professional in the profession of Bob Marley.,SELECT ?result WHERE { ?result <http://dbpedia.org/property/occupation> ?v1 . <http://dbpedia.org/resource/Bob_Marley> <http://dbpedia.org/property/occupation> ?v1 . <http://dbpedia.org/resource/Bill_Evans> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . },"```sparql
SELECT ?associatedArtist ?reggaeMusician WHERE {
  # Find associated musical artist of Bill Evans
  ?billEvans dbo:profession dbr:Piano .
  ?billEvans rdfs:label ""Bill Evans""@en .
  OPTIONAL { 
    ?billEvans dbo:associatedMusicalArtist ?associatedArtist .
  }

  # Find professional in the profession of Bob Marley (reggae musician)
  ?bobMarley dbo:profession dbr/Reggae_musician .
  ?bobMarley rdfs:label ""Bob Marley""@en .
  OPTIONAL { 
    ?bobMarley dbo:professional ?reggaeMusician .
  }
}
```",3,3,4,2,2,3,3,71,0,0,4,0,0.0,0
888,8,train,Give me the awardee of the award of Oleksandr Syrskyi.,SELECT ?result WHERE { ?result <http://dbpedia.org/property/awards> ?v0 . <http://dbpedia.org/resource/Oleksandr_Syrskyi> <http://dbpedia.org/property/awards> ?v0 . },"```sparql
SELECT ?awardee WHERE {
  # Find the award associated with Oleksandr Syrskyi
  ?syrskyi dbo:award ?award .
  ?syrskyi rdfs:label ""Oleksandr Syrskyi""@en .

  # Find other awardees of the same award
  ?award dbo:recipient ?awardee .
}
```",2,2,3,2,1,3,2,20,0,0,14,0,0.0,0
645,6,train,"Give me the force, that is an event and a military conflict and a societal event, of Francisco Largo Caballero.",SELECT ?result WHERE { ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?result <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Francisco_Largo_Caballero> . },"```sparql
SELECT ?force WHERE {
  ?person rdfs:label ""Francisco Largo Caballero""@en .
  
  ?event dbo:agent ?person ;
         a ?type .

  VALUES ?type { 
    dbpedia:Event 
    dbpedia:MilitaryConflict 
    dbpedia:SocietalEvent 
  }

  BIND(?event AS ?force)
}
```",1,4,2,1,1,3,3,71,0,0,1,0,0.0,0
329,13,train,Give me the entity in United Kingdom and birthplace of the author of The Tailor and Ansty.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/United_Kingdom> . <http://dbpedia.org/resource/The_Tailor_and_Ansty> <http://dbpedia.org/property/author> ?v1 . ?v1 <http://dbpedia.org/ontology/birthPlace> ?result . },"```sparql
SELECT ?birthPlace WHERE {
  # Find Dornford Yates and his birthplace
  ?author rdfs:label ""Dornford Yates""@en .
  ?author dbo:birthPlace ?birthPlace .

  # Ensure the birthplace is in the United Kingdom
  ?birthPlace dbo:country dbr:United_Kingdom .
}
```",3,3,4,2,2,2,3,28,0,1,1,0.0,0.0,0
18,12,train,"Give me the professional in  and alumnus of Marymount College, Tarrytown and parent of Liza Huber.","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Liza_Huber> . ?result <http://dbpedia.org/ontology/almaMater> <http://dbpedia.org/resource/Marymount_College,_Tarrytown> . ?result <http://dbpedia.org/property/occupation> """"@en . }","```sparql
SELECT ?professional WHERE {
  # Find individuals who are alumni of Marymount College, Tarrytown
  ?individual dbo:almaMater dbpedia:Marymount_College,_Tarrytown .
  
  # Ensure the individual is a parent of Liza Huber
  ?lizaHuber foaf:name ""Liza Huber""@en ;
             dbo:parent ?professional .

  # Optional: Check for professional career information (if available)
  OPTIONAL { 
    ?professional foaf:worksFor ?employer .
  }
}
```",3,3,4,1,3,2,3,28,0,0,1,0,0.0,0
865,13,train,"Give me the father of the child, that is a politician, of Abu Ahmad Abdul Hafiz.",SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v1 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Abu_Ahmad_Abdul_Hafiz> . ?v1 <http://dbpedia.org/property/father> ?result . },"```sparql
SELECT ?father WHERE {
  # Identify Abu Ahmad Abdul Hafiz
  ?abuHafiz rdfs:label ""Abu Ahmad Abdul Hafiz""@en .
  
  # Find children of Abu Ahmad Abdul Hafiz
  ?child dbo:parent ?abuHafiz .
  
  # Filter for the child who is a politician
  OPTIONAL {
    ?child dbo:occupation ?occupation .
    FILTER (regex(str(?occupation), ""politician"", ""i""))
  }
  
  # Find the father of this child
  ?child dbo:parent ?father .
}
```",2,3,3,2,1,3,3,71,0,0,1,0,0.0,0
459,1,train,Give me the governor of Dana Murphy.,SELECT ?result WHERE { <http://dbpedia.org/resource/Dana_Murphy> <http://dbpedia.org/property/governor> ?result . },"```sparql
SELECT ?role WHERE {
  ?damaMurphy rdfs:label ""Dana Murphy""@en .
  OPTIONAL { 
    ?damaMurphy dbo:governmentRole ?role .
    FILTER (regex(str(?role), ""Governor"", ""i""))
  }
}
```",1,1,2,1,1,2,3,28,0,0,3,0,0.0,0
839,9,train,Give me the band of Peter Schorowsky and band of Kevin Russell (musician).,SELECT ?result WHERE { <http://dbpedia.org/resource/Kevin_Russell_(musician)> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?result <http://dbpedia.org/ontology/bandMember> <http://dbpedia.org/resource/Peter_Schorowsky> . },"```sparql
SELECT ?person ?name ?band WHERE {
  # Find Peter Schorowsky and his band(s)
  OPTIONAL {
    ?schorowsky dbo:name ""Peter Schorowsky""@en .
    ?schorowsky dbo:band ?band .
    BIND(""Peter Schorowsky"" AS ?name)
    BIND(?schorowsky AS ?person)
  }
  
  # Find Kevin Russell and his band(s)
  OPTIONAL {
    ?russell dbo:name ""Kevin Russell""@en .
    ?russell dbo:band ?band .
    FILTER NOT EXISTS { ?schorowsky dbo:band ?band } # Ensure no overlap
    BIND(""Kevin Russell"" AS ?name)
    BIND(?russell AS ?person)
  }
}
```",2,2,3,1,2,3,3,71,0,0,1,0,0.0,0
5,10,train,"Give me the award of the associated musical artist, that is a band, of Rubén Colón Tarrats.",SELECT ?result WHERE { ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Band>. <http://dbpedia.org/resource/Rubén_Colón_Tarrats> <http://dbpedia.org/ontology/associatedMusicalArtist> ?v0 . ?v0 <http://dbpedia.org/property/awards> ?result . },"```sparql
SELECT ?award WHERE {
  # Identify Rubén Colón Tarrats
  ?rubenColonTarrats dbo:birthName ""Rubén Colón Tarrats""@en .
  
  # Find associated musical artist or band
  OPTIONAL { 
    ?rubenColonTarrats dbo:associatedBand ?band .
  }
  
  # Retrieve awards of the identified band
  OPTIONAL {
    ?band dbo:award ?award .
  }
}
```",2,3,3,2,1,3,2,20,0,0,7,0,0.0,0
507,39,train,Give me the professional in the profession of the person born on 1966-02-18 and director of Entertaining Mr Sloane (film).,"SELECT ?result WHERE { ?result <http://dbpedia.org/property/occupation> ?v1 . ?v0 <http://dbpedia.org/ontology/birthDate> ""1966-02-18""^^<http://www.w3.org/2001/XMLSchema#date> . <http://dbpedia.org/resource/Entertaining_Mr_Sloane_(film)> <http://dbpedia.org/ontology/director> ?result . ?v0 <http://dbpedia.org/property/occupation> ?v1 . }","```sparql
SELECT ?personBorn ?director ?profession WHERE {
  # Find the person born on 1966-02-18
  ?personBorn dbo:birthDate ""1966-02-18""^^xsd:date .
  
  # Find the director of Entertaining Mr Sloane (film)
  ?movie dbo:director ?director .
  ?movie rdfs:label ""Entertaining Mr Sloane""@en .

  # Get the profession of the person born on 1966-02-18
  ?personBorn dbo:occupation ?profession .
  
  # Find another professional in the same field as the person born in 1966
  ?otherPerson dbo:occupation ?profession .
  FILTER(?otherPerson != ?personBorn)
}
```",4,4,5,3,2,3,3,71,0,0,1,0,0.0,0
965,11,train,Give me the spouse of the spouse of Princess Victoria of Hesse and by Rhine.,SELECT ?result WHERE { <http://dbpedia.org/resource/Princess_Victoria_of_Hesse_and_by_Rhine> <http://dbpedia.org/ontology/spouse> ?v1 . ?result <http://dbpedia.org/ontology/spouse> ?v1 . },"```sparql
SELECT ?grandSpouse WHERE {
  # Find Princess Victoria of Hesse and by Rhine
  ?princess rdfs:label ""Princess Victoria of Hesse and by Rhine""@en .
  
  # Find her spouse
  ?princess dbo:spouse ?spouse .

  # Find the spouse of her spouse (grandSpouse)
  ?spouse dbo:spouse ?grandSpouse .
}
```",2,2,3,2,1,3,3,71,1,0,0,1.0,1.0,1.0
433,19,train,"Give me the associated musical artist of the person born, that is a musical artist and an artist, as Paul Laurence Dunbar Chambers Jr. and associated musical artist of Bill Evans.","SELECT ?result WHERE { <http://dbpedia.org/resource/Bill_Evans> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?v0 <http://dbpedia.org/property/birthName> ""Paul Laurence Dunbar Chambers Jr.""@en . ?v0 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. }","```sparql
# Query for Paul Laurence Dunbar Chambers Jr.
SELECT ?associatedArtist WHERE {
  ?chambers dbo:birthName ""Paul Laurence Dunbar Chambers Jr."" .
  ?chambers dbo:associatedMusicalArtist ?associatedArtist .
  ?associatedArtist a dbo:Musician ;
                   a dbo:Artist .
  
  # Query for Bill Evans
  OPTIONAL {
    ?evans dbo:birthName ""Bill Evans"" .
    ?evans dbo:associatedMusicalArtist ?associatedArtist2 .
    FILTER (?associatedArtist = ?associatedArtist2)
  }
}
```",3,5,4,2,2,3,3,71,0,0,2,0,0.0,0
98,6,train,Give me the birth place of Paolo Ballesteros and region of Philippine Standard Time.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/timeZone> <http://dbpedia.org/resource/Philippine_Standard_Time> . <http://dbpedia.org/resource/Paolo_Ballesteros> <http://dbpedia.org/ontology/birthPlace> ?result . },"```sparql
SELECT ?birthPlace ?region WHERE {
  # Find the birth place of Paolo Ballesteros
  ?person dbo:birthPlace ?birthPlace .
  ?person rdfs:label ""Paolo Ballesteros""@en .

  # Find the region associated with Philippine Standard Time
  OPTIONAL {
    ?timeZone dbo:country ?region .
    ?timeZone rdfs:label ""Philippine Standard Time""@en .
  }
}
```",2,2,3,1,2,2,3,28,2,0,0,1.0,1.0,1.0
267,0,train,Give me the coach of Iran national football team.,SELECT ?result WHERE { <http://dbpedia.org/resource/Iran_national_football_team> <http://dbpedia.org/ontology/coach> ?result . },"```sparql
SELECT ?coach WHERE {
  ?team rdfs:label ""Iran national football team""@en .
  ?team dbo:coach ?coach .
}
```",1,1,2,1,1,3,2,20,1,0,0,1.0,1.0,1.0
166,14,train,"Give me the entity in the territory administered, that is a country, from the reference to Madrid.","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/country> ?v0 . ?v0 <http://dbpedia.org/ontology/capital> ?v2 . ?v2 <http://xmlns.com/foaf/0.1/name> ""Madrid""@en . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. }","```sparql
SELECT ?country WHERE {
  # Identify Madrid and its administrative territories
  ?madrid dbo:administrativeTerritory ?territory .
  ?madrid rdfs:label ""Madrid""@en .

  # Filter to find which of these territories are countries
  ?territory rdf:type dbpedia-owl:Country .
  
  BIND(?territory AS ?country)
}
```",3,4,4,3,1,3,2,20,0,0,12023,0,0.0,0
443,0,train,Give me the landmark at elevation of 28.,"SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/elevation> ""28""^^<http://www.w3.org/2001/XMLSchema#integer> . }","```sparql
SELECT ?landmark WHERE {
  ?landmark rdf:type dbo:Landmark .
  ?landmark dbo:elevation ?elevation .
  FILTER (?elevation = ""28""^^xsd:decimal)
}
```",1,1,2,1,1,2,3,28,0,0,349,0,0.0,0
791,7,train,"Give me the father, that is a royalty and an office holder, of Emperor Antoku.",SELECT ?result WHERE { ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. <http://dbpedia.org/resource/Emperor_Antoku> <http://dbpedia.org/property/father> ?result . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. },"```sparql
SELECT ?father WHERE {
  # Find Emperor Antoku and his father
  ?antoku dbo:parent ?father .
  ?antoku rdfs:label ""Emperor Antoku""@en .

  # Ensure the father is royalty
  ?father rdf:type/rdfs:subClassOf* dbp:Royalty .

  # Ensure the father has held an office
  ?father dbo:officeHolder ?position .
}
```",1,3,2,1,1,3,3,71,0,0,1,0,0.0,0
495,13,train,Give me the child of the father of the parent of Princess Catherine of Württemberg.,SELECT ?result WHERE { ?v0 <http://dbpedia.org/property/father> ?v1 . ?result <http://dbpedia.org/property/father> ?v1 . ?v0 <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Princess_Catherine_of_Württemberg> . },"```sparql
SELECT ?child WHERE {
  # Identify Princess Catherine of Württemberg
  ?princess rdfs:label ""Princess Catherine of Württemberg""@en .
  
  # Find her parent
  ?princess dbo:parent ?parent .

  # Determine the father of this parent (grandfather)
  ?parent dbo:parent ?grandfather .

  # Identify any child of this grandfather
  ?grandfather dbo:child ?child .
}
```",3,3,4,3,1,3,2,20,2,1,6,0.6666666666666666,0.25,0.36363636363636365
926,14,train,"Give me the child of the father, that is a royalty, of Mustafa III.",SELECT ?result WHERE { ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v0 <http://dbpedia.org/ontology/child> ?result . <http://dbpedia.org/resource/Mustafa_III> <http://dbpedia.org/property/father> ?v0 . },"```sparql
SELECT ?child WHERE {
  # Identify Mustafa III
  ?mustafaIII rdfs:label ""Mustafa III""@en .
  
  # Find his father
  ?mustafaIII dbo:parent ?father .

  # Ensure the father is royalty (assuming a property or label indicating royalty)
  OPTIONAL { 
    ?father rdf:type dbo:Monarch .
  }

  # Identify children of this royal parent
  ?father dbo:child ?child .
}
```",2,3,3,2,1,3,3,71,11,0,0,1.0,1.0,1.0
236,6,train,Give me the party member of Democratic-Republican Party and party member of Federalist Party.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/party> <http://dbpedia.org/resource/Federalist_Party> . ?result <http://dbpedia.org/ontology/party> <http://dbpedia.org/resource/Democratic-Republican_Party> . },"```sparql
SELECT DISTINCT ?person WHERE {
  # Find members of the Democratic-Republican Party
  {
    ?person dbo:memberOf dbr:Democratic-Republican_Party .
  }
  
  UNION
  
  # Find members of the Federalist Party
  {
    ?person dbo:memberOf dbr:Federalist_Party .
  }
}
```",2,2,3,1,2,3,2,20,0,0,18,0,0.0,0
98,6,train,Give me the child of the child of Emperor Toba.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/parent> ?v0 . <http://dbpedia.org/resource/Emperor_Toba> <http://dbpedia.org/ontology/child> ?v0 . },"```sparql
SELECT ?grandchild WHERE {
  # Find children of Emperor Toba
  ?child dbo:parent dbc:Emperor_Toba .
  
  # For each child, find their children (i.e., grandchildren of Emperor Toba)
  ?child dbo:parent ?grandchild .
}
```",2,2,3,2,1,2,2,9,0,0,3,0,0.0,0
965,36,train,"Give me the parent of the person born, that is a noble, as the birth name of George Mountbatten, 2nd Marquess of Milford Haven and spouse of Prince Louis of Battenberg.","SELECT ?result WHERE { ?v0 <http://dbpedia.org/ontology/parent> ?result . <http://dbpedia.org/resource/George_Mountbatten,_2nd_Marquess_of_Milford_Haven> <http://dbpedia.org/property/birthName> ?v3 . ?v0 <http://dbpedia.org/property/birthName> ?v3 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Noble>. ?result <http://dbpedia.org/ontology/spouse> <http://dbpedia.org/resource/Prince_Louis_of_Battenberg> . }","```sparql
SELECT ?parent WHERE {
  # Find George Mountbatten, 2nd Marquess of Milford Haven
  ?george dbo:birthName ?birthName .
  ?george rdfs:label ""George Mountbatten, 2nd Marquess of Milford Haven""@en .

  # Ensure his spouse is Prince Louis of Battenberg
  OPTIONAL {
    ?george dbo:spouse ?spouse .
    ?spouse rdfs:label ""Prince Louis of Battenberg""@en .
  }

  # Find the parent of George Mountbatten
  ?george dbo:parent ?parent .
}
```",4,5,5,3,2,3,3,71,0,0,1,0,0.0,0
965,7,train,"Give me the birth name of George Mountbatten, 2nd Marquess of Milford Haven.","SELECT ?result WHERE { <http://dbpedia.org/resource/George_Mountbatten,_2nd_Marquess_of_Milford_Haven> <http://dbpedia.org/property/birthName> ?result . }","```sparql
SELECT ?birthName WHERE {
  ?person rdfs:label ""George Mountbatten, 2nd Marquess of Milford Haven""@en .
  ?person dbo:birthName ?birthName .
}
```",1,1,2,1,1,3,3,71,0,0,1,0,0.0,0
417,31,train,"Give me the spouse of the parent, that is a royalty, of the child of Knud, Hereditary Prince of Denmark and child of Christian X of Denmark.","SELECT ?result WHERE { ?v0 <http://dbpedia.org/ontology/child> ?v1 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?result <http://dbpedia.org/ontology/spouse> ?v0 . ?result <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Christian_X_of_Denmark> . ?v1 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Knud,_Hereditary_Prince_of_Denmark> . }","```sparql
SELECT ?spouse WHERE {
  # Find Queen Margrethe II as a child of Knud and Christian X
  ?margrethe dbo:parent ?knud .
  ?margrethe dbo:parent ?christianX .
  ?knud rdfs:label ""Knud, Hereditary Prince of Denmark""@en .
  ?christianX rdfs:label ""Christian X of Denmark""@en .

  # Find the father of Queen Margrethe II
  ?margrethe dbo:parent ?father .
  
  # Ensure the parent is royalty (King Frederick IX)
  FILTER (?father = dbpedia:Frederick_IX_of_Denmark)

  # Find the spouse of King Frederick IX
  ?father dbo:spouse ?spouse .
}
```",4,5,5,3,2,3,3,71,0,0,1,0,0.0,0
926,21,train,Give me the father of the father of Abdulaziz and child of Ahmed III.,SELECT ?result WHERE { <http://dbpedia.org/resource/Ahmed_III> <http://dbpedia.org/ontology/child> ?result . <http://dbpedia.org/resource/Abdulaziz> <http://dbpedia.org/property/father> ?v2 . ?v2 <http://dbpedia.org/property/father> ?result . },"```sparql
SELECT ?commonEntity WHERE {
  # Find Abdulaziz's father
  ?abdulaziz dbo:parent ?fatherAbdulaziz .
  ?abdulaziz rdfs:label ""King Abdulaziz Al Saud""@en .

  # Find Abdulaziz's grandfather (father of his father)
  ?fatherAbdulaziz dbo:parent ?grandfatherAbdulaziz .

  # Find a child of Ahmed III
  ?ahmedIII dbo:child ?childAhmedIII .
  ?ahmedIII rdfs:label ""Ahmed III""@en .

  # Identify the common entity who is both Abdulaziz's grandfather and a child of Ahmed III
  FILTER (?grandfatherAbdulaziz = ?childAhmedIII)
}
```",3,3,4,2,2,3,3,71,0,0,1,0,0.0,0
926,25,train,"Give me the child of the father, that is a royalty, of Mustafa III and successor of Mustafa III.",SELECT ?result WHERE { ?v0 <http://dbpedia.org/ontology/child> ?result . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. <http://dbpedia.org/resource/Mustafa_III> <http://dbpedia.org/property/father> ?v0 . <http://dbpedia.org/resource/Mustafa_III> <http://dbpedia.org/ontology/successor> ?result . },"```sparql
SELECT ?child WHERE {
  # Find Mustafa III and his father
  ?mustafaIII dbo:parent ?father .
  ?mustafaIII rdfs:label ""Mustafa III""@en .

  # Identify children of Mustafa III's father who are royalty
  ?father dbo:child ?child .
  FILTER EXISTS { ?child rdf:type dbo:Monarch . }

  # Find the successor of Mustafa III
  OPTIONAL {
    ?mustafaIII dbo:succeededBy ?successor .
  }
  
  # Check if the child is also the successor
  FILTER (?child = ?successor)
}
```",3,4,4,2,2,3,3,71,0,0,1,0,0.0,0
433,24,train,"Give me the professional in Musician and associated musical artist of the associated musical artist, that is an artist and a musical artist, of Scott LaFaro.","SELECT ?result WHERE { <http://dbpedia.org/resource/Scott_LaFaro> <http://dbpedia.org/ontology/associatedMusicalArtist> ?v2 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. ?v2 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?result <http://dbpedia.org/property/occupation> ""Musician""@en . }","```sparql
SELECT ?professionalMusician ?associatedArtist WHERE {
  # Find Scott LaFaro's associated musical artist
  ?laFaro dbo:associatedMusicalArtist ?artist .
  ?laFaro rdfs:label ""Scott LaFaro""@en .

  # Ensure the artist is both an artist and a musician
  ?artist rdf:type dbo:Musician ;
          rdf:type dbo:Artist .

  # Find another associated musical artist of this professional musician
  ?professionalMusician dbo:associatedMusicalArtist ?associatedArtist .
  FILTER (?artist = ?professionalMusician)
}
```",3,5,4,2,2,3,3,71,0,0,3,0,0.0,0
5,13,train,"Give me the birthplace of the person born, that is a politician, as the award of Renata Adler.",SELECT ?result WHERE { <http://dbpedia.org/resource/Renata_Adler> <http://dbpedia.org/property/awards> ?v1 . ?v0 <http://dbpedia.org/ontology/birthPlace> ?result . ?v0 <http://dbpedia.org/property/birthName> ?v1 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. },"```sparql
SELECT ?birthPlace WHERE {
  # Identify Renata Adler
  ?renataAdler rdfs:label ""Renata Adler""@en .
  
  # Find the award given by Renata Adler
  ?award dbo:recipient ?politician ;
         dbo:awardedBy ?renataAdler .

  # Ensure the recipient is a politician
  ?politician rdf:type dbo:Politician .

  # Get the birthplace of the politician
  ?politician dbo:birthPlace ?birthPlace .
}
```",3,4,4,3,1,3,2,20,0,0,222,0,0.0,0
417,18,train,Give me the spouse of Princess Caroline-Mathilde of Denmark and child of Alexandrine of Mecklenburg-Schwerin and child of Christian X of Denmark.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/spouse> <http://dbpedia.org/resource/Princess_Caroline-Mathilde_of_Denmark> . ?result <http://dbpedia.org/ontology/parent> <http://dbpedia.org/resource/Alexandrine_of_Mecklenburg-Schwerin> . ?result <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Christian_X_of_Denmark> . },"```sparql
SELECT ?spouse ?childAlexandrine ?childChristianX WHERE {
  # Find spouse of Princess Caroline-Mathilde of Denmark
  ?carolineMathilde dbo:spouse ?spouse .
  ?carolineMathilde rdfs:label ""Princess Caroline-Mathilde of Denmark""@en .

  # Find a child of Alexandrine of Mecklenburg-Schwerin
  ?alexandrine dbo:child ?childAlexandrine .
  ?alexandrine rdfs:label ""Alexandrine of Mecklenburg-Schwerin""@en .

  # Find a child of Christian X of Denmark
  ?christianX dbo:child ?childChristianX .
  ?christianX rdfs:label ""Christian X of Denmark""@en .
}
```",3,3,4,1,3,3,3,71,1,1,0,0.5,1.0,0.6666666666666666
102,10,train,"Give me the residence, that is English and a settlement, of the resident, that is an athlete, of Dewsbury.",SELECT ?result WHERE { ?v0 <http://dbpedia.org/property/residence> ?result . ?result <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/United_Kingdom>. ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. ?v0 <http://dbpedia.org/ontology/residence> <http://dbpedia.org/resource/Dewsbury> . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Athlete>. },"```sparql
SELECT ?residence WHERE {
  # Find Dewsbury as a residence of some individual
  ?individual dbo:residence ?dewsbury .
  ?dewsbury rdfs:label ""Dewsbury""@en .

  # Ensure the individual is an athlete
  ?individual dbo:occupation ?athleteOccupation .
  FILTER (regex(str(?athleteOccupation), ""Athlete"", ""i""))

  # Find the residence of this athlete that is a settlement in English
  ?individual dbo:residence ?residence .
  ?residence rdfs:label ?residenceLabel .
  FILTER (langMatches(lang(?residenceLabel), ""en""))
  FILTER EXISTS { ?residence rdf:type dbo:PopulatedPlace }
}
```",2,5,3,2,1,3,2,20,0,0,1,0,0.0,0
281,12,train,Give me the awardee of Volunteer Decoration and commander in New Guinea campaign and awardee of Medal bar.,SELECT ?result WHERE { <http://dbpedia.org/resource/New_Guinea_campaign> <http://dbpedia.org/ontology/commander> ?result . ?result <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/Medal_bar> . ?result <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/Volunteer_Decoration> . },"```sparql
SELECT DISTINCT ?person WHERE {
  # Find person with Volunteer Decoration and commander in New Guinea campaign
  OPTIONAL {
    ?person dbo:award dbr:Volunteer_Medal .
    ?person dbo:role ""Commander""@en ;
            dbo:campaign dbr:New_Guinea_campaign .
  }

  # Find person who is an awardee of a Medal Bar
  OPTIONAL {
    ?person dbo:award ?medalBar .
    FILTER EXISTS { 
      ?medalBar rdfs:label ?label .
      FILTER (regex(?label, ""Medal Bar"", ""i""))
    }
  }

  # Ensure the person satisfies both conditions
  FILTER (?person = ?person1 && ?person = ?person2)
}
```",3,3,4,1,3,2,3,28,0,0,1,0,0.0,0
83,9,train,"Give me the birthplace, that is a town and Brazilian and a soccer club, of the member, that is a sports manager, of Kedah FA.",SELECT ?result WHERE { ?v0 <http://dbpedia.org/ontology/team> <http://dbpedia.org/resource/Kedah_FA> . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsManager>. ?result <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Brazil>. ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Town>. ?v0 <http://dbpedia.org/ontology/birthPlace> ?result . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerClub>. },"```sparql
SELECT ?town WHERE {
  # Find members of Kedah FA who are sports managers
  ?person dbo:member ?kedahFA .
  ?kedahFA rdfs:label ""Kedah FA""@en .
  ?person dbo:occupation ?occupation .
  FILTER (regex(str(?occupation), ""sports manager"", ""i""))

  # Retrieve the birthplace of this person
  ?person dbo:birthPlace ?town .

  # Ensure the birthplace is a town in Brazil with an associated soccer club
  ?town rdf:type dbo:Town .
  ?town dbo:country dbr:Brazil .
  ?town dbo:sportTeam ?soccerClub .
  FILTER EXISTS { ?soccerClub rdf:type dbo:SoccerClub }
}
```",2,6,3,2,1,3,2,20,0,0,1,0,0.0,0
826,9,train,"Give me the successor of Louis II, Grand Duke of Hesse and spouse of Anna Magdalena Appel.","SELECT ?result WHERE { <http://dbpedia.org/resource/Anna_Magdalena_Appel> <http://dbpedia.org/ontology/spouse> ?result . <http://dbpedia.org/resource/Louis_II,_Grand_Duke_of_Hesse> <http://dbpedia.org/ontology/successor> ?result . }","```sparql
SELECT ?successor WHERE {
  # Find Louis II, Grand Duke of Hesse
  ?louis2 dbo:spouse ?spouse .
  ?louis2 rdfs:label ""Louis II, Grand Duke of Hesse""@en .

  # Find his successor
  OPTIONAL { 
    ?louis2 dbp:succeededBy ?successor .
  }
}
```",2,2,3,1,2,3,3,71,0,0,1,0,0.0,0
281,4,train,"Give me the award, that is a military conflict, of Lawrence Moore Cosgrave.",SELECT ?result WHERE { <http://dbpedia.org/resource/Lawrence_Moore_Cosgrave> <http://dbpedia.org/property/awards> ?result . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. },"```sparql
SELECT ?award WHERE {
  ?cosgrave rdfs:label ""Lawrence Moore Cosgrave""@en .
  
  # Find awards associated with Lawrence Moore Cosgrave
  ?cosgrave dbo:award ?award .

  # Ensure the award is related to a military conflict
  OPTIONAL { 
    ?award dbo:conflict ?militaryConflict .
    FILTER EXISTS { ?militaryConflict rdf:type dbo:MilitaryConflict }
  }
}
```",1,2,2,1,1,2,3,28,0,2,1,0.0,0.0,0
987,5,train,"Give me the show, that is a film, with Emir Hadžihafizbegović.",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/starring> <http://dbpedia.org/resource/Emir_Hadžihafizbegović> . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Film>. },"```sparql
SELECT ?film WHERE {
  # Identify Emir Hadžihafizbegović's DBpedia entry
  ?person rdfs:label ""Emir Hadžihafizbegović""@en .
  
  # Find films associated with him
  ?person dbo:filmRole ?role .
  ?role dbo:workExample ?film .
  FILTER (regex(str(?film), ""Film"", ""i""))
}
```",1,2,2,1,1,3,3,71,0,0,15,0,0.0,0
965,17,train,"Give me the person born, that is a noble, as the birth name of George Mountbatten, 2nd Marquess of Milford Haven.","SELECT ?result WHERE { <http://dbpedia.org/resource/George_Mountbatten,_2nd_Marquess_of_Milford_Haven> <http://dbpedia.org/property/birthName> ?v0 . ?result <http://dbpedia.org/property/birthName> ?v0 . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Noble>. }","```sparql
SELECT ?person WHERE {
  # Find George Mountbatten, 2nd Marquess of Milford Haven's birth name
  ?georgeMountbatten dbo:birthName ?birthName .
  ?georgeMountbatten rdfs:label ""George Mountbatten, 2nd Marquess of Milford Haven""@en .

  # Find another person with the same birth name who is a noble
  ?person dbo:birthName ?birthName .
  ?person dbo:occupation ?occupation .
  
  FILTER (regex(str(?occupation), ""noble"", ""i""))
}
```",2,3,3,2,1,3,3,71,0,0,1,0,0.0,0
773,21,train,Give me the spouse of the father of Charles the Fat and parent of Charles the Fat.,SELECT ?result WHERE { <http://dbpedia.org/resource/Charles_the_Fat> <http://dbpedia.org/property/father> ?v1 . ?v1 <http://dbpedia.org/ontology/spouse> ?result . <http://dbpedia.org/resource/Charles_the_Fat> <http://dbpedia.org/ontology/parent> ?result . },"```sparql
SELECT ?father ?spouse ?grandParent WHERE {
  # Find Charles the Fat and his father
  ?charles dbo:parent ?father .
  ?charles rdfs:label ""Charles the Fat""@en .

  # Find spouse of Charles the Fat's father
  OPTIONAL { 
    ?father dbo:spouse ?spouse .
  }

  # Find parent(s) of Charles the Fat's father
  OPTIONAL {
    ?father dbo:parent ?grandParent .
  }
}
```",3,3,4,2,2,3,3,71,1,5,0,0.16666666666666666,1.0,0.2857142857142857
839,3,train,Give me the persona of Kevin Russell (musician).,SELECT ?result WHERE { <http://dbpedia.org/resource/Kevin_Russell_(musician)> <http://xmlns.com/foaf/0.1/givenName> ?result . },"```sparql
SELECT ?property ?value WHERE {
  # Identify the resource for Kevin Russell (musician)
  ?kevinRussell rdfs:label ""Kevin Russell""@en .
  
  # Query various properties related to his persona
  OPTIONAL { ?kevinRussell dbo:birthDate ?value . FILTER(STRSTARTS(STR(?property), ""dbo:"")) }
  OPTIONAL { ?kevinRussell dbo:birthPlace ?value . FILTER(STRSTARTS(STR(?property), ""dbo:"")) }
  OPTIONAL { ?kevinRussell dbo:genre ?value . FILTER(STRSTARTS(STR(?property), ""dbo:"")) }
  OPTIONAL { ?kevinRussell dbo:album ?album .
              ?album rdfs:label ?value .
              FILTER(STRSTARTS(STR(?property), ""dbo:"")) }
  OPTIONAL { ?kevinRussell dbo:song ?song .
              ?song rdfs:label ?value .
              FILTER(STRSTARTS(STR(?property), ""dbo:"")) }
  OPTIONAL { ?kevinRussell dbo:collaboration ?collab .
              ?collab rdfs:label ?value .
              FILTER(STRSTARTS(STR(?property), ""dbo:"")) }
  OPTIONAL { ?kevinRussell dbo:award ?award .
              ?award rdfs:label ?value .
              FILTER(STRSTARTS(STR(?property), ""dbo:"")) }
}
```",1,1,2,1,1,3,3,71,0,0,1,0,0.0,0
281,14,train,"Give me the awardee of the award, that is a military conflict, of Lawrence Moore Cosgrave and commander in New Guinea campaign.",SELECT ?result WHERE { ?result <http://dbpedia.org/property/awards> ?v2 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. <http://dbpedia.org/resource/Lawrence_Moore_Cosgrave> <http://dbpedia.org/property/awards> ?v2 . <http://dbpedia.org/resource/New_Guinea_campaign> <http://dbpedia.org/ontology/commander> ?result . },"```sparql
SELECT ?awardee ?commander WHERE {
  # Step 1: Retrieve Lawrence Moore Cosgrave's award related to a military conflict
  ?cosgrave dbo:awardReceived ?award .
  ?cosgrave rdfs:label ""Lawrence Moore Cosgrave""@en .
  
  # Ensure the award is related to a military conflict
  ?award dbo:type dbr:Military_Conflict_Award .

  # Step 2: Identify the awardee of this award
  ?award dbo:awardee ?awardee .

  # Step 3: Find the commander in the New Guinea campaign
  ?newGuineaCampaign dbo:commander ?commander .
  ?newGuineaCampaign rdfs:label ""New Guinea Campaign""@en .

  # Optional: Link awardee and commander if needed for further analysis
}
```",3,4,4,2,2,2,3,28,0,0,1,0,0.0,0
926,11,train,Give me the father of the father of Abdulaziz.,SELECT ?result WHERE { <http://dbpedia.org/resource/Abdulaziz> <http://dbpedia.org/property/father> ?v1 . ?v1 <http://dbpedia.org/property/father> ?result . },"```sparql
SELECT ?grandfather WHERE {
  # Find Abdulaziz and his father
  ?abdulaziz dbo:parent ?father .
  ?abdulaziz rdfs:label ""Abdulaziz Al Saud""@en .

  # Find the father of Abdulaziz's father (i.e., Abdulaziz's grandfather)
  ?father dbo:parent ?grandfather .
}
```",2,2,3,2,1,3,3,71,0,0,1,0,0.0,0
826,28,train,"Give me the spouse of the child of Johann Heinrich Appel and predecessor of Louis IV, Grand Duke of Hesse and successor of Louis II, Grand Duke of Hesse.","SELECT ?result WHERE { ?v1 <http://dbpedia.org/property/father> ""Johann Heinrich Appel""@en . ?v1 <http://dbpedia.org/ontology/spouse> ?result . ?result <http://dbpedia.org/ontology/successor> <http://dbpedia.org/resource/Louis_IV,_Grand_Duke_of_Hesse> . <http://dbpedia.org/resource/Louis_II,_Grand_Duke_of_Hesse> <http://dbpedia.org/ontology/successor> ?result . }","```sparql
SELECT ?spouse WHERE {
  # Find child of Johann Heinrich Appel
  ?appelChild dbo:parent ""Johann Heinrich Appel""@en .
  
  # Find predecessor of Louis IV, Grand Duke of Hesse
  ?predecessor dbo:successor ""Louis IV, Grand Duke of Hesse""@en .
  
  # Find successor of Louis II, Grand Duke of Hesse
  ?successor dbo:predecessor ""Louis II, Grand Duke of Hesse""@en .

  # Check if predecessor and successor are the same person
  FILTER (?predecessor = ?successor)

  # Find spouse of this individual
  ?individual dbo:spouse ?spouse .
  FILTER (?individual = ?appelChild && ?individual = ?predecessor)
}
```",4,4,5,2,3,3,3,71,0,0,1,0,0.0,0
365,8,train,"Give me the spouse of the native, that is a politician, of Poltava Governorate.",SELECT ?result WHERE { ?v0 <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Poltava_Governorate> . ?v0 <http://dbpedia.org/ontology/spouse> ?result . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. },"```sparql
SELECT ?spouse WHERE {
  # Find individuals native to Poltava Governorate
  ?person dbo:birthPlace ?place .
  ?place rdfs:label ""Poltava Governorate""@en .

  # Ensure the individual is a politician
  ?person dbo:occupation ?occupation .
  FILTER (regex(str(?occupation), ""politician"", ""i""))

  # Find the spouse of this person
  OPTIONAL {
    ?person dbo:spouse ?spouse .
  }
}
```",2,3,3,2,1,3,2,20,1,0,2,1.0,0.3333333333333333,0.5
