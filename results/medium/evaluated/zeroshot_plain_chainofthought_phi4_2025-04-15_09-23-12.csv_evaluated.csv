id,subid,split,question,sparql,generated_sparql,num_edges,num_edges_full,num_nodes,depth,breadth,base_depth,base_breadth,subgraphs,TP,FP,FN,Precision,Recall,F1
465,68,test,"Give me the successor of the child, that is a royalty, of Anne of Brittany and successor of the child of the parent of Ercole II d'Este, Duke of Ferrara and spouse of the child, that is a royalty, of the parent of Elizabeth of Austria (1526–1545).","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/spouse> ?v7 . <http://dbpedia.org/resource/Anne_of_Brittany> <http://dbpedia.org/ontology/child> ?v3 . <http://dbpedia.org/resource/Ercole_II_d'Este,_Duke_of_Ferrara> <http://dbpedia.org/ontology/parent> ?v5 . ?v0 <http://dbpedia.org/ontology/child> ?v7 . ?v3 <http://dbpedia.org/ontology/successor> ?result . ?v4 <http://dbpedia.org/property/father> ?v5 . ?v0 <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Elizabeth_of_Austria_(1526–1545)> . ?v7 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v4 <http://dbpedia.org/ontology/successor> ?result . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. }","```sparql
SELECT ?successor WHERE {
  ?anne dcterms:child ?claude .
  ?claude dbo:spouse ?francisI .
  ?francisI dbo:child ?henryII .
  ?ercole2 dbo:parent ?alfonso1 .
  ?alfonso1 dbo:child ?ercole2 .
  ?ercole2 dbo:succ ?alfonso2 .
  ?ferdinand1 dbo:child ?maximilian2 .
  ?maximilian2 dbo:spouse ?mariaOfSpain .
  ?mariaOfSpain dbo:child ?philipIII .
  ?henryII dbo:succ ?francisII .
  ?francisII dbo:succ ?charlesIX .
}
```",8,10,9,3,3,3,3,71,0,0,1,0,0.0,0
417,64,test,"Give me the child of Christian X of Denmark and spouse of the parent, that is a royalty, of the child of Knud, Hereditary Prince of Denmark and child of the child, that is a royalty, of the parent, that is a royalty, of Alexandrine of Mecklenburg-Schwerin.","SELECT ?result WHERE { ?v1 <http://dbpedia.org/property/father> ?v0 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. <http://dbpedia.org/resource/Alexandrine_of_Mecklenburg-Schwerin> <http://dbpedia.org/ontology/parent> ?v0 . ?result <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Christian_X_of_Denmark> . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?result <http://dbpedia.org/ontology/spouse> ?v2 . ?result <http://dbpedia.org/ontology/parent> ?v1 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v2 <http://dbpedia.org/ontology/child> ?v3 . ?v3 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Knud,_Hereditary_Prince_of_Denmark> . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?child WHERE {
  # Christian X's child who is royalty
  VALUES (?christianX) { dbr:Christian_X_of_Denmark }
  ?christianX dbo:spouse ?parent.
  
  # Spouse of Christian IX (Christian X's parent)
  ?parent dbo:spouse ?louiseOfSweden.
  FILTER(?louiseOfSweden = dbr:Louise_of_Sweden)

  # Knud, Hereditary Prince of Denmark's child who is royalty
  VALUES (?knud) { dbr:Knud,_Hereditary_Prince_of_Denmark }
  ?knud dbo:child ?joachim.
  
  # Joachim's child who is royalty
  ?joachim dbo:child ?frederikCrownPrince.

  # Frederik, Crown Prince of Denmark's parent who is royalty
  ?frederikCrownPrince dbo:parent ?margretheII.
  FILTER(?margretheII = dbr:Margrethe_II_of_Denmark)

  # Alexandrine of Mecklenburg-Schwerin's royal parent
  VALUES (?alexandrine) { dbr:Alexandrine_of_Mecklenburg-Schwerin }
  ?alexandrine dbo:parent ?frederickFrancisII.
  
  # Child of Frederick Francis II
  ?frederickFrancisII dbo:child ?christianIX.
  FILTER(?christianIX = dbr:Christian_IX_of_Denmark)

  # The child of Christian X and spouse of the parent (Christian IX)
  ?christianX dbo:child ?finalChild.
  FILTER(?finalChild = ?frederikCrownPrince)
}
```",7,10,8,3,3,3,3,71,0,0,1,0,0.0,0
917,67,test,"Give me the child of the father of the child, that is a royalty, of Kamehameha III and parent of Albert Kamehameha and child of the father of the spouse, that is a royalty, of Leleiohoku I.",SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/spouse> <http://dbpedia.org/resource/Leleiohoku_I> . ?v1 <http://dbpedia.org/property/father> ?v5 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?result <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Albert_Kamehameha> . ?result <http://dbpedia.org/property/father> ?v0 . <http://dbpedia.org/resource/Kamehameha_III> <http://dbpedia.org/ontology/child> ?v4 . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v4 <http://dbpedia.org/property/father> ?v0 . ?result <http://dbpedia.org/ontology/parent> ?v5 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?child WHERE {
  # Kamehameha III's children who are royalty
  ?kamehamehaIII dbr:Kamehameha_III .
  ?child dbo:parent dbr:Kamehameha_III ;
         a dbo:Monarch .

  # Child of Kamehameha III who is parent of Albert Kamehameha
  ?albertParent dbo:parent ?child .
  ?albertParent dbr:Albert_Kamehameha .

  # Leleiohoku I's spouse and their father
  ?leleiohokuI dbr:Leleiohoku_I .
  ?spouse dbo:spouse ?leleiohokuI ;
          a dbo:Monarch .
  ?father dbo:child ?spouse .

  # Child of the spouse's father
  ?resultChild dbo:parent ?father .
}
```",7,9,8,3,3,3,3,71,0,0,1,0,0.0,0
5,18,test,"Give me the entity in the award of Coro de la Pontificia Universidad Católica de Puerto Rico and birthplace of the person born, that is a politician, as the award of Renata Adler.",SELECT ?result WHERE { ?v3 <http://dbpedia.org/property/birthName> ?v2 . ?result <http://dbpedia.org/ontology/country> ?v0 . <http://dbpedia.org/resource/Coro_de_la_Pontificia_Universidad_Católica_de_Puerto_Rico> <http://dbpedia.org/property/awards> ?v0 . <http://dbpedia.org/resource/Renata_Adler> <http://dbpedia.org/property/awards> ?v2 . ?v3 <http://dbpedia.org/ontology/birthPlace> ?result . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. },"```sparql
SELECT ?person ?birthPlace WHERE {
  # Find the entity associated with ""Coro de la Pontificia Universidad Católica de Puerto Rico""
  ?award dcterms:isPartOf <http://dbpedia.org/resource/Pontifical_Catholic_University_of_Puerto_Rico> .
  ?award rdfs:label ""Coro""@en .

  # Find persons born in the same place as the award entity
  ?person dbo:nationality ?nationality ;
          dbo:birthPlace ?birthPlace .
  FILTER EXISTS { ?award dbo:location ?birthPlace }

  # Ensure the person is a politician
  ?person dbo:occupation dbc:Politicians .

  # Check if this person has received an award named after Renata Adler
  OPTIONAL {
    ?person dbo:honoraryTitle ?honoraryTitle .
    FILTER regex(?honoraryTitle, ""Renata Adler"", ""i"")
  }

  # Filter to ensure the person has indeed received such an award
  FILTER EXISTS { ?person dbo:honoraryTitle ?honoraryTitle . FILTER regex(?honoraryTitle, ""Renata Adler"", ""i"") }
}
```",5,6,6,3,2,3,2,20,0,0,2,0,0.0,0
459,26,test,"Give me the governor of the death place, that is a settlement, of Cliff Roquemore and governor of Dana Murphy and person born as the birth name of Kevin Stitt.",SELECT ?result WHERE { ?v1 <http://dbpedia.org/property/governor> ?result . <http://dbpedia.org/resource/Dana_Murphy> <http://dbpedia.org/property/governor> ?result . ?result <http://dbpedia.org/property/birthName> ?v2 . <http://dbpedia.org/resource/Kevin_Stitt> <http://dbpedia.org/property/birthName> ?v2 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. <http://dbpedia.org/resource/Cliff_Roquemore> <http://dbpedia.org/ontology/deathPlace> ?v1 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT DISTINCT ?governor WHERE {
  # Cliff Roquemore's death place
  ?cliffRoquemore dbo:deathPlace ?deathPlace .
  FILTER(STRSTARTS(STR(?deathPlace), ""http://dbpedia.org/resource/"") && 
         EXISTS { ?deathPlace a dbo:Settlement }).

  # Governor of the settlement where Cliff Roquemore died
  ?deathPlace dbp:governor ?governor .

  # Dana Murphy's governor
  ?danaMurphy dbo:residence ?residence .
  ?residence dbp:governor ?danaGovernor .

  # Kevin Stitt's birth name
  ?kevinStitt dbp:birthday ?birthday .
  ?kevinStitt rdfs:label ""Kevin Stitt""@en .
  ?kevinStitt dbo:birthName ?birthName .

  # Ensure the governor is the same for both cases
  FILTER(?governor = ?danaGovernor)
}
```",5,6,6,2,3,2,3,28,0,0,1,0,0.0,0
329,27,test,"Give me the entity in the birthplace, that is an organisation and a country, of Robert Bates (loyalist) and entity in the region, that is a country, of Western European Time and birthplace of Eric Cross (writer).",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/country> ?v0 . <http://dbpedia.org/resource/Robert_Bates_(loyalist)> <http://dbpedia.org/ontology/birthPlace> ?v0 . <http://dbpedia.org/resource/Eric_Cross_(writer)> <http://dbpedia.org/ontology/birthPlace> ?result . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. ?result <http://dbpedia.org/ontology/country> ?v3 . ?v3 <http://dbpedia.org/property/timeZone> <http://dbpedia.org/resource/Western_European_Time> . },"```sparql
# Query for Robert Bates (loyalist)
SELECT ?entity WHERE {
  ?bates dbo:birthPlace ?birthPlace .
  FILTER(STRSTARTS(LCASE(?bates), ""robert bates (loyalist)""))
  ?birthPlace rdf:type ?type1 .
  ?birthPlace rdf:type ?type2 .
  VALUES (?type1 ?type2) { (dbo:Country dbo:Organization) }
  BIND(?birthPlace AS ?entity)
}

UNION

# Query for Western European Time
SELECT ?region WHERE {
  ?time geo:region ?region .
  FILTER(STRSTARTS(LCASE(?time), ""western european time""))
  ?region rdf:type dbo:Country .
  BIND(?region AS ?entity)
}

UNION

# Query for Eric Cross (writer)
SELECT ?birthPlace WHERE {
  ?cross dbo:birthPlace ?birthPlace .
  FILTER(STRSTARTS(LCASE(?cross), ""eric cross (writer)""))
  BIND(?birthPlace AS ?entity)
}
```",5,8,6,2,3,2,3,28,0,0,1,0,0.0,0
47,56,test,"Give me the office of the administration of Jagdeep Dhankhar and office of Bidesh Ranjan Bose and office of the awardee of the entity, that is an award, in India.",SELECT ?result WHERE { ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Award>. ?v2 <http://dbpedia.org/property/governor> <http://dbpedia.org/resource/Jagdeep_Dhankhar> . <http://dbpedia.org/resource/Bidesh_Ranjan_Bose> <http://dbpedia.org/property/office> ?result . ?v2 <http://dbpedia.org/property/office> ?result . ?v0 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/India> . ?v1 <http://dbpedia.org/property/office> ?result . ?v1 <http://dbpedia.org/property/awards> ?v0 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?officeJagdeepDhankhar ?officeBideshRanjanBose ?award ?awardee WHERE {
  # Office of Jagdeep Dhankhar
  OPTIONAL { 
    dbr:Jagdeep_Dhankhar dbo:positionHeld ?officeJagdeepDhankhar .
  }
  
  # Office of Bidesh Ranjan Bose
  OPTIONAL { 
    dbr:B._R._Bose dbo:positionHeld ?officeBideshRanjanBose .
  }

  # Awardees of awards in India (example query, can be refined)
  OPTIONAL {
    ?award dbo:country dbr:India ;
           dbo:recipient ?awardee .
  }
}
```",6,7,7,3,3,3,3,71,0,0,1,0,0.0,0
865,68,test,"Give me the native of the residence, that is a country, of the person decedent at Patna and father of the child, that is a politician, of the spouse of Syeda Shahar Banu and father of the child of Abu Ahmad Abdul Hafiz.",SELECT ?result WHERE { ?v5 <http://dbpedia.org/property/father> ?v2 . ?v4 <http://dbpedia.org/property/father> ?result . ?v5 <http://dbpedia.org/property/father> ?result . ?v4 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Abu_Ahmad_Abdul_Hafiz> . <http://dbpedia.org/resource/Syeda_Shahar_Banu> <http://dbpedia.org/ontology/spouse> ?v2 . ?result <http://dbpedia.org/ontology/birthPlace> ?v0 . ?v1 <http://dbpedia.org/ontology/deathPlace> <http://dbpedia.org/resource/Patna> . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v1 <http://dbpedia.org/property/residence> ?v0 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?nativeCountry WHERE {
  # Syeda Shahar Banu's spouse
  dbr:Syeda_Shahar_Banu dbo:spouse ?husband .
  
  # Abu Ahmad Abdul Hafiz is the husband
  ?husband rdfs:label ""Abu Ahmad Abdul Hafiz""@en .

  # Child of Syeda Shahar Banu and Abu Ahmad Abdul Hafiz who is a politician
  ?child dbo:parent ?husband ;
         dbo:parent dbr:Syeda_Shahar_Banu ;
         dbo:occupation dbr:Politician .
  
  # Father of the child (politician) who died in Patna
  ?father dbo:child ?child ;
          dbo:deathPlace dbr:Patna .

  # Native country of residence of this father
  ?residence dbo:nativeCountry ?nativeCountry .
  ?father dbo:residence ?residence .
}
```",8,10,9,3,3,3,3,71,0,0,1,0,0.0,0
865,67,test,"Give me the father of the child of the father of Abul Maal Abdul Muhith and native of British Raj and father of the child, that is a politician, of the spouse of Syeda Shahar Banu.",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/British_Raj> . ?v3 <http://dbpedia.org/property/father> ?v2 . ?v3 <http://dbpedia.org/property/father> ?result . <http://dbpedia.org/resource/Syeda_Shahar_Banu> <http://dbpedia.org/ontology/spouse> ?v1 . ?v5 <http://dbpedia.org/property/father> ?result . ?v5 <http://dbpedia.org/property/father> ?v1 . <http://dbpedia.org/resource/Abul_Maal_Abdul_Muhith> <http://dbpedia.org/property/father> ?v2 . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT DISTINCT ?fatherOfPolitician WHERE {
  # Step 1: Identify Abul Maal Abdul Muhith's father
  ?abulMaal dbo:father ?fatherAbulMaal .
  VALUES ?abulMaal { <http://dbpedia.org/resource/Abul_Maal_Abdul_Muhith> } .

  # Step 2: Find the child of Abul Maal Abdul Muhith's father
  ?childOfFather dbo:parent ?fatherAbulMaal .
  
  # Step 3: Identify the native of British Raj among these children
  ?nativeBritishRaj dbp:nationality <http://dbpedia.org/resource/British_Raj> ;
                    dbo:parent ?fatherAbulMaal .

  # Step 4: Find the spouse of Syeda Shahar Banu
  ?syedaShaharBanu dbo:spouse ?spouseSyeda .
  VALUES ?syedaShaharBanu { <http://dbpedia.org/resource/Syeda_Shaheen_Banu> } .

  # Step 5: Identify the child of this spouse that is a politician
  ?childOfSpouse dbo:parent ?spouseSyeda ;
                rdf:type dbo:Politician .
  
  # Step 6: Determine the father of this politician
  ?fatherOfPolitician dbo:parent ?childOfSpouse .

}
```",7,8,8,3,3,3,3,71,0,0,1,0,0.0,0
965,69,test,"Give me the spouse of the spouse of the parent of Louise Mountbatten and parent of the person born, that is a noble, as the birth name of George Mountbatten, 2nd Marquess of Milford Haven and parent of the child, that is a royalty, of Prince Louis of Battenberg.","SELECT ?result WHERE { ?v6 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. <http://dbpedia.org/resource/George_Mountbatten,_2nd_Marquess_of_Milford_Haven> <http://dbpedia.org/property/birthName> ?v5 . ?v4 <http://dbpedia.org/ontology/spouse> ?v2 . ?result <http://dbpedia.org/ontology/spouse> ?v2 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Noble>. ?v6 <http://dbpedia.org/ontology/parent> ?result . ?v6 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Prince_Louis_of_Battenberg> . ?v0 <http://dbpedia.org/ontology/parent> ?result . ?v0 <http://dbpedia.org/property/birthName> ?v5 . <http://dbpedia.org/resource/Louise_Mountbatten> <http://dbpedia.org/ontology/parent> ?v4 . }","```sparql
SELECT ?spouse WHERE {
  # Louise Mountbatten's parent
  wd:Q123456 wdt:P22 ?parentOfLouiseMountbatten.
  
  # Spouse of Louise Mountbatten's parent (Prince Louis of Battenberg)
  ?parentOfLouiseMountbatten wdt:P26 ?spouseOfParent.

  # Child of Prince Louis of Battenberg who is royalty and noble
  ?child wdt:P25 ?spouseOfParent.
  ?child wdt:P31 wd:Q5. # Instance of human
  ?child wdt:P106 wd:Q215627. # Occupation: Noble

  # Birth name of George Mountbatten, 2nd Marquess of Milford Haven
  wd:Q789012 wdt:P1476 ?birthNameGeorgeMountbatten.

  # Spouse of the noble child (Queen Elizabeth The Queen Mother)
  ?child wdt:P26 ?spouseOfNobleChild.

  # Parent of King George VI
  wd:Q345678 wdt:P22 ?parentOfKingGeorgeVI.
  
  # Spouse of Queen Mary (King George V)
  wd:Q987654 wdt:P26 ?spouseOfQueenMary.
}
```",8,10,9,3,3,3,3,71,0,0,2,0,0.0,0
839,69,test,"Give me the band of the member of Böhse Onkelz and band of the person born, that is a musical artist, as the persona of Kevin Russell (musician) and band of the band, that is a musical artist, of the professional in Musician.","SELECT ?result WHERE { <http://dbpedia.org/resource/Böhse_Onkelz> <http://dbpedia.org/ontology/bandMember> ?v7 . ?v1 <http://dbpedia.org/ontology/associatedMusicalArtist> ?v2 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?result <http://dbpedia.org/ontology/bandMember> ?v7 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?v3 <http://dbpedia.org/property/birthName> ?v4 . ?v1 <http://dbpedia.org/property/occupation> ""Musician""@en . <http://dbpedia.org/resource/Kevin_Russell_(musician)> <http://xmlns.com/foaf/0.1/givenName> ?v4 . ?v3 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?result <http://dbpedia.org/ontology/bandMember> ?v2 . }","```sparql
# Query 1: Band of a member of Böhse Onkelz
SELECT ?member ?band WHERE {
  ?onkelz dbo:member ?member .
  FILTER(STRSTARTS(LCASE(?onkelz), ""böhse onkelz""))
  OPTIONAL { ?member dbo:associatedBand ?band . }
}

# Query 2: Band of the person born as a musical artist, persona of Kevin Russell
SELECT ?person ?band WHERE {
  ?kevinRussell foaf:name ""Kevin Russell"" .
  ?kevinRussisterms:birthDate ?date .
  ?kevinRussistyp:type dbo:MusicalArtist .
  OPTIONAL { ?kevinRussis dbo:associatedBand ?band . }
}

# Query 3: Band of the band that is a musical artist of a professional in Musician
SELECT ?professional ?band WHERE {
  ?professional dbo:occupation dbo:Musician .
  ?professional dbo:associatedBand ?band .
  FILTER EXISTS { ?band typ:type dbo:MusicalArtist . }
}
```",8,10,9,3,3,3,3,71,0,0,1,0,0.0,0
573,57,test,"Give me the parent of the author, that is a politician and an office holder, of Exchequer Standards and person decedent at the residence, that is a settlement, of the professional, that is American, in Politician and person decedent at Massachusetts.","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/deathPlace> ?v5 . ?v0 <http://dbpedia.org/property/residence> ?v5 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v0 <http://dbpedia.org/ontology/nationality> <http://dbpedia.org/resource/United_States>. ?v0 <http://dbpedia.org/property/occupation> ""Politician""@en . <http://dbpedia.org/resource/Exchequer_Standards> <http://dbpedia.org/property/author> ?v3 . ?v3 <http://dbpedia.org/ontology/parent> ?result . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?result <http://dbpedia.org/ontology/deathPlace> <http://dbpedia.org/resource/Massachusetts> . }","```sparql
# Step 1: Get the author of ""Exchequer Standards""
SELECT ?author WHERE {
    ?work dcterms:title ""Exchequer Standards""@en .
    ?work dbo:author ?author .
}

# Step 2: Check if this author is a politician and an office holder
SELECT DISTINCT ?author WHERE {
    ?author dbo:occupation dbp:Politician ;
            dbo:officeHolder true .
}

# Step 3: Find the place where this person died, ensuring it's classified as a settlement
SELECT DISTINCT ?deathPlace WHERE {
    ?author dbo:placeOfBirth ?birthPlace ;
            dbo:deathPlace ?deathPlace .
    ?deathPlace rdf:type dbp:Settlement .
}

# Step 4: Query for American politicians who died in Massachusetts
SELECT DISTINCT ?politician WHERE {
    ?politician dbo:occupation dbp:Politician ;
                dbo:nationality dbr:United_States ;
                dbo:deathPlace ?massachusettsDeathPlace .
    ?massachusettsDeathPlace rdf:type dbp:Massachusetts .
}

# Step 5: Identify any parent of the author who was both a politician and an office holder
SELECT DISTINCT ?parent WHERE {
    ?author dbo:parent ?parent .
    ?parent dbo:occupation dbp:Politician ;
            dbo:officeHolder true .
}
```",6,10,7,3,3,3,3,71,0,0,2,0,0.0,0
839,56,test,"Give me the band of the band, that is a musical artist, of the professional in Musician and band of the person born, that is a musical artist, as Kevin Richard Russell and band of Peter Schorowsky.","SELECT ?result WHERE { ?v2 <http://dbpedia.org/property/birthName> ""Kevin Richard Russell""@en . ?v0 <http://dbpedia.org/property/occupation> ""Musician""@en . ?result <http://dbpedia.org/ontology/bandMember> <http://dbpedia.org/resource/Peter_Schorowsky> . ?v2 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?v0 <http://dbpedia.org/ontology/associatedMusicalArtist> ?v1 . ?result <http://dbpedia.org/ontology/bandMember> ?v1 . }","```sparql
# Query to get Kevin Richard Russell's band
SELECT ?bandKevin WHERE {
  ?person dbo:birthName ""Kevin Richard Russell""@en .
  ?person a dbo:MusicalArtist .
  ?person dbo:associatedBand ?bandKevin .
}

UNION

# Query to get Peter Schorowsky's band
SELECT ?bandPeter WHERE {
  ?person dbo:name ""Peter Schorowsky""@en .
  ?person a dbo:Musician .
  ?person dbo:associatedBand ?bandPeter .
}
```",6,8,7,3,3,3,3,71,0,0,1,0,0.0,0
965,59,test,"Give me the spouse of the spouse of the parent of Louise Mountbatten and parent of the child, that is a royalty, of the person born, that is a politician, on 1854-05-24.","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/spouse> ?v1 . ?v4 <http://dbpedia.org/ontology/parent> ?result . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v0 <http://dbpedia.org/ontology/birthDate> ""1854-05-24""^^<http://www.w3.org/2001/XMLSchema#date> . ?v4 <http://dbpedia.org/property/father> ?v0 . <http://dbpedia.org/resource/Louise_Mountbatten> <http://dbpedia.org/ontology/parent> ?v3 . ?v3 <http://dbpedia.org/ontology/spouse> ?v1 . }","```sparql
SELECT ?spouseOfSpouse WHERE {
  # Step 1: Identify Louise Mountbatten
  ?louise dbo:birthName ""Louise Mountbatten""@en .
  
  # Step 2: Find her parent
  ?parent dbo:child ?louise .

  # Step 3: Spouse of the parent
  ?spouseOfParent dbo:spouse ?parent .

  # Step 4: Child that is royalty
  ?royalChild dbo:spouseOrPartner ?spouseOfParent ;
              a dbo:Monarch .

  # Step 5: Person born on 1854-05-24 who is a politician
  ?politician dbo:birthday ""1854-05-24""^^xsd:date ;
              a dbo:Politician .

  # Step 6: Parent of the royal child
  ?parentOfRoyalChild dbo:child ?royalChild .

  # Step 7: Spouse of this parent
  ?spouseOfSpouse dbo:spouseOrPartner ?parentOfRoyalChild .
}
```",6,8,7,3,2,3,3,71,0,0,2,0,0.0,0
987,65,test,"Give me the entity in the region, that is a country, of Central European Time and birth place of the actor of the show, that is a film, with Emir Hadžihafizbegović and birth place of the band, that is an artist and a musical artist, of Šako Polumenta.",SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Film>. ?result <http://dbpedia.org/ontology/country> ?v0 . ?v1 <http://dbpedia.org/ontology/starring> <http://dbpedia.org/resource/Emir_Hadžihafizbegović> . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. ?v5 <http://dbpedia.org/ontology/birthPlace> ?result . ?v2 <http://dbpedia.org/ontology/birthPlace> ?result . <http://dbpedia.org/resource/Šako_Polumenta> <http://dbpedia.org/ontology/associatedMusicalArtist> ?v2 . ?v0 <http://dbpedia.org/property/timeZone> <http://dbpedia.org/resource/Central_European_Time> . ?v1 <http://dbpedia.org/property/starring> ?v5 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT DISTINCT ?country WHERE {
  # Step 1: Find a film with Emir Hadžihafizbegović
  ?film dbo:starring dbr:Emir_Hadžihafizbegović .
  
  # Step 2: Identify other actors in the film and their birthplaces
  ?film dbo:starring ?actor .
  ?actor dbp:birthPlace ?actorBirthPlace .

  # Step 3: Find bands associated with Šako Polumenta
  ?band a dbo:Band ;
        dbo:member dbr:Šako_Polumenta .

  # Step 4: Determine the birthplace of the band (origin)
  ?band dbp:birthPlace ?bandBirthPlace .

  # Step 5: Filter for countries in Central European Time
  ?country dbo:timeZone dbr:Central_European_Time ;
           rdfs:label ?countryLabel .
  
  # Step 6: Match birthplaces with the country
  FILTER (?actorBirthPlace = ?country || ?bandBirthPlace = ?country)
}
```",7,11,8,3,3,3,3,71,0,0,1,0,0.0,0
791,70,test,"Give me the predecessor of the child of the child, that is an office holder and a royalty, of Emperor Go-Shirakawa and father of the child, that is a royalty, of the father, that is a royalty and an office holder, of Emperor Antoku and spouse of the spouse, that is a royalty, of Emperor Takakura.",SELECT ?result WHERE { ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?result <http://dbpedia.org/ontology/spouse> ?v4 . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v4 <http://dbpedia.org/ontology/spouse> <http://dbpedia.org/resource/Emperor_Takakura> . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v0 <http://dbpedia.org/ontology/parent> <http://dbpedia.org/resource/Emperor_Go-Shirakawa> . <http://dbpedia.org/resource/Emperor_Antoku> <http://dbpedia.org/property/father> ?v1 . ?v3 <http://dbpedia.org/property/father> ?result . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?result <http://dbpedia.org/ontology/successor> ?v7 . ?v3 <http://dbpedia.org/property/father> ?v1 . ?v7 <http://dbpedia.org/property/father> ?v0 . },"```sparql
# Step 1: Find Emperor Go-Shirakawa's grandchildren who are office holders and royalty
SELECT ?grandchild WHERE {
  ?goShirakawa dbo:spouse ?parent .
  ?goShirakawa rdf:type dbo:Emperor .
  FILTER(STR(?goShirakawa) = ""Emperor_Go-Shirakawa"") .

  ?parent dbo:child ?child .
  ?child dbo:child ?grandchild .
  
  ?grandchild rdf:type dbo:Royalty ;
              dbo:officeHolder ?office .
}

# Step 2: Find the predecessor of each grandchild
SELECT ?predecessor WHERE {
  ?grandchild dbo:successionPredecessor ?predecessor .
  # Use results from step 1 to filter ?grandchild
}

# Step 3: Identify the father of any child who is royalty
SELECT ?father WHERE {
  ?parent dbo:child ?royaltyChild .
  ?royaltyChild rdf:type dbo:Royalty .
  # Use results from step 1 to filter ?parent

  ?parent dbo:spouseOrParent ?father .
}

# Step 4: Find Emperor Antoku's father who is royalty and an office holder
SELECT ?antokuFather WHERE {
  ?antoku dbo:child ?antokuChild .
  FILTER(STR(?antoku) = ""Emperor_Antoku"") .

  ?antokuChild dbo:spouseOrParent ?father .
  ?father rdf:type dbo:Royalty ;
          dbo:officeHolder ?office .
}

# Step 5: Find the spouse of Emperor Antoku's father
SELECT ?spouse WHERE {
  ?antokuFather dbo:spouse ?spouse .
  # Use results from step 4 to filter ?antokuFather
}

# Step 6: Find Emperor Takakura's spouse who is royalty
SELECT ?takakuraSpouse WHERE {
  ?takakura dbo:spouse ?takakuraSpouse .
  FILTER(STR(?takakura) = ""Emperor_Takakura"") .

  ?takakuraSpouse rdf:type dbo:Royalty .
}

# Step 7: Ensure the spouse from step 5 matches the spouse from step 6
SELECT DISTINCT ?predecessor WHERE {
  # Combine results to ensure matching spouses and find the predecessor
  ?spouse1 = ?spouse2 .
  ?predecessor dbo:successionPredecessor ?grandchild .
}
```",8,14,9,3,3,3,3,71,0,0,1,0,0.0,0
18,27,test,"Give me the professional in  and alumnus of the figure known, that is an educational institution, as Saints and parent of the professional in Actress.","SELECT ?result WHERE { ?result <http://dbpedia.org/property/occupation> """"@en . ?v1 <http://dbpedia.org/property/nickname> ""Saints""@en . ?v0 <http://dbpedia.org/property/occupation> ""Actress""@en . ?result <http://dbpedia.org/ontology/almaMater> ?v1 . ?result <http://dbpedia.org/ontology/child> ?v0 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/EducationalInstitution>. }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?professional ?parent WHERE {
  # Step 1: Identify the educational institution known as ""Saints""
  ?institution rdfs:label ""Saint Mary's College""@en .
  
  # Step 2: Find alumni of this institution who are professionals
  ?alumnus dbo:almaMater ?institution ;
           dbo:profession ?professional .

  # Step 3: Identify the parent of these professionals who is an actress
  ?parent dbo:child ?alumnus .
  ?parent dbo:occupation dbr:Actress .
}
```",5,6,6,2,3,2,3,28,0,0,1,0,0.0,0
773,63,test,"Give me the parent of the successor of Charles the Bald and spouse of the father of the parent of Bernard (son of Charles the Fat) and parent of the child, that is a royalty, of Louis the German.",SELECT ?result WHERE { ?v4 <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Bernard_(son_of_Charles_the_Fat)> . ?result <http://dbpedia.org/ontology/child> ?v6 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v2 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Louis_the_German> . ?v2 <http://dbpedia.org/ontology/parent> ?result . ?v3 <http://dbpedia.org/ontology/spouse> ?result . <http://dbpedia.org/resource/Charles_the_Bald> <http://dbpedia.org/ontology/successor> ?v6 . ?v4 <http://dbpedia.org/property/father> ?v3 . },"```sparql
# Step 1: Find successor of Charles the Bald
SELECT ?successor WHERE {
  wd:Q1247 dbo:successor ?successor .
}

# Step 2: Find parent of Louis II of Italy (successor)
SELECT ?parent WHERE {
  ?successor rdfs:label ""Louis II of Italy""@en .
  ?successor dbo:parent ?parent .
}

# Step 3: Find spouse of Charles the Bald
SELECT ?spouse WHERE {
  wd:Q1247 dbo:spouse ?spouse .
}

# Step 4: Identify Bernard (son of Charles the Fat)
SELECT ?bernard WHERE {
  ?charlesFat rdfs:label ""Charles the Fat""@en .
  ?charlesFat dbo:child ?bernard .
  ?bernard rdfs:label ""Bernard, Duke of Saxony""@en .
}

# Step 5: Find parent (mother) of Bernard
SELECT ?parent WHERE {
  ?bernard dbo:parent ?parent .
}

# Step 6: Identify father of Richardis of Swabia
SELECT ?father WHERE {
  ?richardis rdfs:label ""Richardis of Swabia""@en .
  ?richardis dbo:father ?father .
}

# Step 7: Find spouse of Burchard II, Duke of Swabia (father of Richardis)
SELECT ?spouse WHERE {
  ?father rdfs:label ""Burchard II, Duke of Swabia""@en .
  ?father dbo:spouse ?spouse .
}

# Step 8: Identify child of Louis the German who is royalty
SELECT ?child WHERE {
  wd:Q1246 dbo:child ?child .
  ?child dbo:title ?title .
  FILTER(CONTAINS(LCASE(?title), ""king"") || CONTAINS(LCASE(?title), ""duke""))
}

# Final step: Confirm Ermentrude of Orléans
SELECT ?ermentrude WHERE {
  wd:Q1247 dbo:spouse ?ermentrude .
}
```",7,8,8,3,3,3,3,71,0,0,1,0,0.0,0
236,18,test,"Give me the party member of the administration, that is an organisation, of the person decedent, that is a politician and an office holder, at Quincy, Massachusetts and party member of the administration of James Madison.","SELECT ?result WHERE { ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?v3 <http://dbpedia.org/property/leader> <http://dbpedia.org/resource/James_Madison> . ?v2 <http://dbpedia.org/property/leader> ?v1 . ?result <http://dbpedia.org/ontology/party> ?v2 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?result <http://dbpedia.org/ontology/party> ?v3 . ?v1 <http://dbpedia.org/ontology/deathPlace> <http://dbpedia.org/resource/Quincy,_Massachusetts> . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT DISTINCT ?person ?party ?administration WHERE {
  ?person a dbo:OfficeHolder ;
          dbo:politicalParty ?party ;
          dbo:residenceLocation dbr:Quincy,_Massachusetts .
  
  ?administration dbo:member ?person ;
                  dbo:startDate ?start ;
                  dbo:endDate ?end .

  FILTER (?start <= ""1817-03-04""^^xsd:date && 
          ?end >= ""1809-03-04""^^xsd:date)

  OPTIONAL { ?party dbo:member dbr:James_Madison }
}
```",5,8,6,3,2,3,2,20,0,0,19,0,0.0,0
645,60,test,"Give me the commander in the force of the commander in Siege of Madrid and leader of the office, that is a government agency and an organisation, of the native of Restoration (Spain).",SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/GovernmentAgency>. <http://dbpedia.org/resource/Siege_of_Madrid> <http://dbpedia.org/ontology/commander> ?v3 . ?v0 <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Restoration_(Spain)> . ?v1 <http://dbpedia.org/ontology/leader> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?v2 <http://dbpedia.org/ontology/commander> ?result . ?v0 <http://dbpedia.org/property/office> ?v1 . ?v2 <http://dbpedia.org/ontology/commander> ?v3 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?commander ?officeRole WHERE {
  # Find the military force involved in the Siege of Madrid
  ?siege dbo:participatedInMilitaryConflict dbr:Siege_of_Madrid .
  
  # Identify the commander of that force
  ?siege dbo:commandedBy ?commander .

  # Ensure the commander is Francisco Franco
  FILTER(?commander = dbr:Franco)

  # Find roles as a leader of an office, which is both a government agency and an organization
  ?office dbo:head ?commander .
  ?office rdf:type dbo:GovernmentAgency ;
          rdf:type dbo:Organization .

  # Bind the role to the variable
  ?office dbo:name ?officeRole .
}
```",6,8,7,3,2,3,3,71,0,0,3,0,0.0,0
442,8,test,Give me the resting place of Allyn K. Capron and resting place of the actor of This Side of Heaven.,SELECT ?result WHERE { <http://dbpedia.org/resource/Allyn_K._Capron> <http://dbpedia.org/ontology/restingPlace> ?result . ?v0 <http://dbpedia.org/ontology/restingPlace> ?result . <http://dbpedia.org/resource/This_Side_of_Heaven> <http://dbpedia.org/ontology/starring> ?v0 . },"```sparql
# Query for Allyn K. Capron's resting place
SELECT ?restingPlace WHERE {
  ?person foaf:name ""Allyn K. Capron""@en .
  OPTIONAL { ?person dbo:placeOfBurial ?restingPlace . }
  OPTIONAL { ?person dbo:memorialSite ?restingPlace . }
}

# Query for the actor of ""This Side of Heaven"" and their resting place
SELECT DISTINCT ?actor ?restingPlace WHERE {
  # Find the main actor from ""This Side of Heaven""
  ?film dbp:title ""This Side of Heaven""@en .
  ?film dbo:starring ?actor .

  OPTIONAL { 
    ?actor dbo:placeOfBurial ?restingPlace . 
    UNION
    ?actor dbo:memorialSite ?restingPlace .
  }
}
```",3,3,4,2,2,2,2,9,0,0,1,0,0.0,0
216,61,test,"Give me the team of the person born, that is a sports manager and a soccer manager and a soccer player, on the death of Pavel Vezhinov and player in the coach, that is a soccer player and a sports manager and a soccer manager, of the player, that is an organisation and a sports club and a soccer club, in Džemal Berberović.",SELECT ?result WHERE { ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsManager>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsClub>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerManager>. ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerManager>. ?v0 <http://dbpedia.org/ontology/coach> ?v5 . <http://dbpedia.org/resource/Pavel_Vezhinov> <http://dbpedia.org/ontology/deathDate> ?v1 . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsManager>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerPlayer>. ?v3 <http://dbpedia.org/ontology/birthDate> ?v1 . ?result <http://dbpedia.org/ontology/coach> ?v3 . ?v5 <http://dbpedia.org/ontology/team> ?result . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerClub>. <http://dbpedia.org/resource/Džemal_Berberović> <http://dbpedia.org/ontology/team> ?v0 . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerPlayer>. },"```sparql
# Step 1: Find Pavel Vezhinov's death date
SELECT ?deathDate WHERE {
    dbpedia:Pavel_Vezhinov dbo:deathDate ?deathDate .
}

# Step 2: Find person born on that date who is a sports manager, soccer manager, and player
SELECT DISTINCT ?person WHERE {
    ?person dbo:birthDate ?birthDate ;
            rdf:type dbo:SportsManager ;
            rdf:type dbo:SoccerPlayer ;
            rdf:type dbo:SoccerManager .
    FILTER (?birthDate = <deathDate>) # Replace <deathDate> with the actual date from Step 1
}

# Step 3: Find teams coached by Džemal Berberović where he was also a player
SELECT DISTINCT ?team WHERE {
    dbpedia:Džemal_Berberović dbo:coach ?team ;
                               dbo:sportTeamMember ?team .
}

# Step 4: Identify the club associated with those roles
SELECT DISTINCT ?club WHERE {
    ?team rdf:type dbo:SoccerClub ;
          dbo:organization ?club .
}
```",6,15,7,3,2,3,3,71,0,0,1,0,0.0,0
365,18,test,"Give me the person born as the birth name of the commander, that is an office holder, in Ukrainian–Soviet War and spouse of the native, that is a politician, of Poltava Governorate.",SELECT ?result WHERE { ?v3 <http://dbpedia.org/ontology/spouse> ?result . ?v1 <http://dbpedia.org/property/birthName> ?v2 . ?v3 <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Poltava_Governorate> . <http://dbpedia.org/resource/Ukrainian–Soviet_War> <http://dbpedia.org/ontology/commander> ?v1 . ?result <http://dbpedia.org/property/birthName> ?v2 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?person ?birthName ?spouse WHERE {
  ?person dbo:occupation dbr:Commander.
  ?person dbo:nationality dbr:Ukraine.
  ?person dbo:birthName ?birthName.
  ?person dbo:officeHolder true.
  
  ?warEvent dbo:participant ?person.
  ?warEvent rdfs:label ""Ukrainian–Soviet War""@en.

  ?spouse dbo:spouse ?person.
  ?spouse dbo:nationality dbr:Poltava_Governorate.
  ?spouse dbo:occupation dbr:Politician.
}
```",5,7,6,3,2,3,2,20,0,0,1,0,0.0,0
965,62,test,"Give me the parent of George Mountbatten, 2nd Marquess of Milford Haven and spouse of the spouse of the parent of Louise Mountbatten and parent of the child, that is a royalty, of the person born, that is a politician, on 1854-05-24.","SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v1 <http://dbpedia.org/ontology/birthDate> ""1854-05-24""^^<http://www.w3.org/2001/XMLSchema#date> . ?v5 <http://dbpedia.org/property/father> ?v1 . <http://dbpedia.org/resource/George_Mountbatten,_2nd_Marquess_of_Milford_Haven> <http://dbpedia.org/ontology/parent> ?result . ?result <http://dbpedia.org/ontology/spouse> ?v2 . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. <http://dbpedia.org/resource/Louise_Mountbatten> <http://dbpedia.org/ontology/parent> ?v4 . ?v4 <http://dbpedia.org/ontology/spouse> ?v2 . ?v5 <http://dbpedia.org/ontology/parent> ?result . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?parentOfGeorge ?spouseOfSpouse ?royalChildParent WHERE {
  # Step 1: Identify Louise Mountbatten's parent
  ?louise a dbo:Person ;
          foaf:name ""Louise Mountbatten""@en .
  ?louise dbo:child dbr:Louise_Mountbatten .

  # Step 2: Find the spouse of Louise Mountbatten's parent
  ?parentOfLouise dbo:spouse ?spouseOfParent .

  # Step 3: George Mountbatten, 2nd Marquess of Milford Haven's parent
  dbr:George_Mountbatten_2nd_Marquess_of_Milford_Haven dbo:child ?parentOfGeorge .

  # Step 4: Spouse of the spouse of Louise Mountbatten's parent
  ?spouseOfParent dbo:spouse ?spouseOfSpouse .

  # Step 5: Person born on 1854-05-24 who is a politician
  ?politician a dbo:Politician ;
              dbo:birthday ""1854-05-24""^^xsd:date .

  # Step 6: Child that is royalty of the politician born on 1854-05-24
  ?royalChild dbo:childOf ?politician ;
              a dbo:RoyalFamilyMember .

  # Step 7: Parent of the royal child
  ?royalChildParent dbo:parent ?royalChild .
}
```",7,9,8,3,3,3,3,71,0,0,2,0,0.0,0
573,59,test,"Give me the person decedent at the administration, that is a region, of the real name of Charlie Baker (Australian footballer) and person decedent at the residence, that is a settlement, of the professional, that is American, in Politician.","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/deathPlace> ?v2 . ?v0 <http://dbpedia.org/property/residence> ?v5 . ?v2 <http://dbpedia.org/property/governor> ?v3 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Region>. ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. ?v0 <http://dbpedia.org/property/occupation> ""Politician""@en . ?v0 <http://dbpedia.org/ontology/nationality> <http://dbpedia.org/resource/United_States>. ?result <http://dbpedia.org/ontology/deathPlace> ?v5 . <http://dbpedia.org/resource/Charlie_Baker_(Australian_footballer)> <http://xmlns.com/foaf/0.1/name> ?v3 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT DISTINCT ?charlieRealNameDecedent ?politicianResidenceDecedent WHERE {
  # Find Charlie Baker's real name
  ?charlie a dbo:AustralianFootballer ;
           foaf:name ""Charlie Baker"" .
  
  ?charlie dbp:realName ?realName .

  # Find the administrative region of Charlie's real name
  ?region dbo:administrativeRegion ?realName .
  
  # Find decedent at this administration
  ?decedent1 dbo:placeOfDeath ?region ;
             foaf:name ?charlieRealNameDecedent .

  # Find an American politician
  ?politician a dbo:Politician ;
              dbp:nationality dbr:United_States ;
              foaf:name ?politicianName .
  
  # Find the settlement of this politician's residence
  ?settlement dbo:settlement ?politicianResidence .
  
  # Find decedent at this residence
  ?decedent2 dbo:placeOfDeath ?settlement ;
             foaf:name ?politicianResidenceDecedent .
}
```",6,9,7,3,2,3,3,71,0,0,400,0,0.0,0
839,61,test,"Give me the band of the member of the band, that is a band and a group, of Peter Schorowsky and band of the band, that is a musical artist, of the professional in Musician.","SELECT ?result WHERE { ?v0 <http://dbpedia.org/ontology/bandMember> ?v5 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Group>. ?result <http://dbpedia.org/ontology/bandMember> ?v5 . ?result <http://dbpedia.org/ontology/bandMember> ?v3 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Band>. ?v1 <http://dbpedia.org/ontology/associatedMusicalArtist> ?v3 . <http://dbpedia.org/resource/Peter_Schorowsky> <http://dbpedia.org/ontology/associatedMusicalArtist> ?v0 . ?v1 <http://dbpedia.org/property/occupation> ""Musician""@en . }","```sparql
# Step 1: Find Peter Schorowsky's band that is both a ""band"" and a ""group""
SELECT ?band WHERE {
    ?person dbo:birthName ""Peter Schorowsky""@en .
    ?person dbo:memberOfBand ?band .
    ?band rdf:type dbpedia-owl:MusicalGroup .
    FILTER(CONTAINS(LCASE(?band), ""band"") && CONTAINS(LCASE(?band), ""group""))
}

# Step 2: Find a band that is both a musical artist and associated with a professional musician
SELECT DISTINCT ?band WHERE {
    ?musician dbo:occupation dbpedia:Musicians .
    ?musician dbo:memberOfBand ?band .
    ?band rdf:type dbpedia-owl:MusicalArtist .
}

# Step 3: Find the band of the member from Peter Schorowsky's band who is part of the band found in step 2
SELECT DISTINCT ?resultingBand WHERE {
    # Assuming we have results from previous queries as variables ?schorowskyBand and ?musicianBand
    ?member dbo:memberOf ?schorowskyBand .
    ?member dbo:memberOf ?musicianBand .
    ?member dbo:band ?resultingBand .
}
```

Note: The above SPARQL query is structured to be executed in parts, with intermediate results used as variables for subsequent queries. In practice, you would need to execute these steps sequentially and use the results from each step to inform the next.",6,9,7,3,2,3,3,71,0,0,1,0,0.0,0
987,71,test,"Give me the birth place of the actor of the show, that is a film, with Emir Hadžihafizbegović and entity in the region, that is a country, of the time zone, that is a sports event, in Canicosa de la Sierra and birth place of the band, that is an artist and a musical artist, of the band, that is an artist, of Dado Polumenta.",SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/associatedMusicalArtist> ?v2 . ?result <http://dbpedia.org/ontology/country> ?v8 . ?v4 <http://dbpedia.org/property/starring> ?v5 . ?v4 <http://dbpedia.org/ontology/starring> <http://dbpedia.org/resource/Emir_Hadžihafizbegović> . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?v7 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsEvent>. ?v5 <http://dbpedia.org/ontology/birthPlace> ?result . ?v8 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. <http://dbpedia.org/resource/Canicosa_de_la_Sierra> <http://dbpedia.org/ontology/timeZone> ?v7 . ?v8 <http://dbpedia.org/property/timeZone> ?v7 . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Film>. <http://dbpedia.org/resource/Dado_Polumenta> <http://dbpedia.org/ontology/associatedMusicalArtist> ?v1 . ?v2 <http://dbpedia.org/ontology/birthPlace> ?result . },"```sparql
# Step 1: Find a film featuring Emir Hadžihafizbegović
SELECT ?film WHERE {
  ?film dbo:starring dbp:Emir_Hadžihafizbegović .
}

# Step 2: Determine the country associated with this film
SELECT DISTINCT ?country WHERE {
  ?film dbo:setInCountry ?country .
}

# Step 3: Find a sports event in Canicosa de la Sierra and its time zone
SELECT DISTINCT ?event ?timezone WHERE {
  ?event dbo:location dbpedia-es:Canicosa_de_la_Sierra ;
         dbo:timeZone ?timezone .
}

# Step 4: Identify the band associated with this country/timezone
SELECT DISTINCT ?band WHERE {
  ?band dbo:country ?country ;
        a dbo:MusicalArtist .
}

# Step 5: Find the birthplace of Dado Pršo
SELECT ?birthPlace WHERE {
  dbp:Dado_Pršo dbo:birthPlace ?birthPlace .
}

# Step 6: Confirm Dado Pršo is part of Zabranjeno Pušenje
ASK {
  dbp:Dado_Pršo dbo:memberOf dbp:Zabranjeno_Pušenje .
}

# Step 7: Find the birthplace of the band from step 4
SELECT ?bandBirthPlace WHERE {
  ?band dbo:birthPlace ?bandBirthPlace .
}
```",9,15,10,3,3,3,3,71,0,0,1,0,0.0,0
326,20,test,"Give me the resident of the birthplace, that is a state and British, of the professional in Writer and person decedent at the award, that is a country, of the awardee of French Legion of Honor.","SELECT ?result WHERE { ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. ?v1 <http://dbpedia.org/property/occupation> ""Writer""@en . ?result <http://dbpedia.org/ontology/deathPlace> ?v5 . ?v4 <http://dbpedia.org/property/awards> ""French Legion of Honor""@en . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/AdministrativeRegion>. ?v2 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/United_Kingdom>. ?result <http://dbpedia.org/property/residence> ?v2 . ?v4 <http://dbpedia.org/property/awards> ?v5 . ?v1 <http://dbpedia.org/ontology/birthPlace> ?v2 . }","```sparql
SELECT DISTINCT ?resident WHERE {
  ?person dbo:award dbpedia-fr:Légion_d'honneur .
  ?person dbo:occupation dbpedia:Writer .
  ?person dbo:deathPlace ?deathPlace .
  ?person dbo:birthPlace ?birthPlace .
  
  # Assuming the award is associated with a country (interpretation)
  OPTIONAL { ?person dbo:honorAwardedInCountry ?country . FILTER(geof:isLocatedIn(?country, dbpedia:France)) }

  # Ensure birthplace is a British state
  ?birthPlace rdfs:label ?stateLabel .
  FILTER(CONTAINS(LCASE(?stateLabel), ""england"") || CONTAINS(LCASE(?stateLabel), ""scotland"") || 
         CONTAINS(LCASE(?stateLabel), ""wales"") || CONTAINS(LCASE(?stateLabel), ""northern ireland""))

  # Find residents of the birthplace
  ?resident dbo:residence ?birthPlace .
}
```",6,9,7,3,2,3,2,20,0,0,1,0,0.0,0
839,68,test,"Give me the band of the band, that is a musical artist, of Charlie Huhn and band of the member of the band, that is a band and a group, of Peter Schorowsky and band of the person born, that is a musical artist, as the persona of Kevin Russell (musician).",SELECT ?result WHERE { ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Band>. <http://dbpedia.org/resource/Peter_Schorowsky> <http://dbpedia.org/ontology/associatedMusicalArtist> ?v0 . ?v4 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. <http://dbpedia.org/resource/Charlie_Huhn> <http://dbpedia.org/ontology/associatedMusicalArtist> ?v3 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Group>. ?v0 <http://dbpedia.org/ontology/bandMember> ?v7 . <http://dbpedia.org/resource/Kevin_Russell_(musician)> <http://xmlns.com/foaf/0.1/givenName> ?v5 . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?v4 <http://dbpedia.org/property/birthName> ?v5 . ?result <http://dbpedia.org/ontology/bandMember> ?v7 . ?result <http://dbpedia.org/ontology/bandMember> ?v3 . },"```sparql
# Query for Charlie Huhn's band
SELECT ?band WHERE {
  ?person rdfs:label ""Charlie Huhn""@en .
  ?person dbo:associatedBand ?band .
  ?band a dbo:MusicalArtist .
} LIMIT 1

UNION

# Query for Peter Schorowsky's band
SELECT ?band WHERE {
  ?person rdfs:label ""Peter Schorowsky""@en .
  ?person dbo:member ?band .
  ?band a dbo:Band ;
        a dbo:MusicalGroup .
} LIMIT 1

UNION

# Query for the band of Kevin Russell (musician)
SELECT ?band WHERE {
  ?person rdfs:label ""Kevin Russell (musician)""@en .
  ?person foaf:nick ?persona .
  ?persona rdfs:label ?birthName .
  ?person dbo:associatedBand ?band .
  ?band a dbo:MusicalArtist .
} LIMIT 1
```",8,12,9,3,3,3,3,71,0,0,1,0,0.0,0
433,65,test,"Give me the professional in the profession of Bob Marley and associated musical artist of the person born, that is a musical artist and an artist, as Paul Laurence Dunbar Chambers Jr. and associated musical artist of the associated musical artist, that is an artist and a musical artist, of the associated musical artist, that is a musical artist and an artist, of Ornette Coleman.","SELECT ?result WHERE { ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. ?result <http://dbpedia.org/property/occupation> ?v3 . <http://dbpedia.org/resource/Bob_Marley> <http://dbpedia.org/property/occupation> ?v3 . ?v6 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. <http://dbpedia.org/resource/Ornette_Coleman> <http://dbpedia.org/ontology/associatedMusicalArtist> ?v0 . ?v6 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?v0 <http://dbpedia.org/ontology/associatedMusicalArtist> ?v6 . ?v4 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?v6 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. ?v4 <http://dbpedia.org/property/birthName> ""Paul Laurence Dunbar Chambers Jr.""@en . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?artist WHERE {
  # Step 1: Find Bob Marley's profession
  dbr:Bob_Marley dbo:profession dbr:Musical_artist .

  # Step 2: Find Paul Chambers' associated musical artist (Miles Davis)
  dbr:Paul_Laurence_Dunbar_Chambers_Jr. dbo:associatedMusicalArtist dbr:Miles_Davis .
  
  # Step 3: Find Miles Davis' associated musical artist (John Coltrane)
  dbr:Miles_Davis dbo:associatedMusicalArtist dbr:John_Coltrane .

  # Step 4: Find Ornette Coleman's associated musical artist (Don Cherry)
  dbr:Ornette_Coleman dbo:associatedMusicalArtist dbr:Don_Cherry .
  
  # Ensure Don Cherry is both an artist and a musical artist
  dbr:Don_Cherry rdf:type dbo:Artist ;
                 rdf:type dbo:Musical_artist .
}
```",7,13,8,3,3,3,3,71,0,0,4,0,0.0,0
773,62,test,"Give me the spouse of the father of the parent of Bernard (son of Charles the Fat) and parent of the successor of the child, that is a royalty, of Louis the Pious and parent of Charles the Fat.",SELECT ?result WHERE { <http://dbpedia.org/resource/Charles_the_Fat> <http://dbpedia.org/ontology/parent> ?result . ?v3 <http://dbpedia.org/ontology/spouse> ?result . ?v0 <http://dbpedia.org/ontology/successor> ?v6 . ?result <http://dbpedia.org/ontology/child> ?v6 . ?v4 <http://dbpedia.org/property/father> ?v3 . ?v4 <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Bernard_(son_of_Charles_the_Fat)> . <http://dbpedia.org/resource/Louis_the_Pious> <http://dbpedia.org/ontology/child> ?v0 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. },"```sparql
SELECT ?spouse WHERE {
  # Identify Charles the Fat
  ?charlesFat dbo:child ?bernard .
  ?charlesFat foaf:name ""Charles the Fat""@en .

  # Find Louis the German, father of Charles the Fat
  ?louisGerman dbo:child ?charlesFat .
  ?louisGerman foaf:name ""Louis the German""@en .

  # Get spouse of Louis the German
  ?louisGerman dbo:spouse ?spouse .

  # Identify a child of Louis the Pious with a royal successor
  ?louisPious dbo:child ?successorParent .
  ?louisPious foaf:name ""Louis the Pious""@en .
  
  ?successorParent dbo:child ?royalSuccessor .
  ?royalSuccessor rdf:type dbo:Monarch .

  # Ensure all individuals are royalty
  ?spouse rdf:type dbo:Monarch .
}
```",7,8,8,3,3,3,3,71,0,0,1,0,0.0,0
166,19,test,"Give me the entity in the territory administered, that is a country, from the reference to Madrid and resting place of the military force of Spanish Civil War.","SELECT ?result WHERE { ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. ?v0 <http://xmlns.com/foaf/0.1/name> ""Madrid""@en . ?v4 <http://dbpedia.org/ontology/capital> ?v0 . ?v2 <http://dbpedia.org/ontology/restingPlace> ?result . ?result <http://dbpedia.org/ontology/country> ?v4 . ?v2 <http://dbpedia.org/ontology/battle> <http://dbpedia.org/resource/Spanish_Civil_War> . }","```sparql
SELECT ?country WHERE {
  ?place rdf:type dbo:Place .
  ?place rdfs:label ""Madrid""@en .
  ?place dbo:locationCountry ?country .
  
  OPTIONAL { 
    ?militaryForce dbo:restingPlace ?place .
    ?militaryForce dbo:militaryConflict dbr:Spanish_Civil_War .
  }
  
  FILTER (lang(?country) = 'en')
}
```",5,6,6,3,2,3,2,20,0,0,4,0,0.0,0
582,71,test,"Give me the figure known as the nickname of the team, that is an organisation, of Hajime Moriyasu and player in the father, that is an athlete and a soccer manager and a sports manager, of the child of Kazuaki Nagasawa and reference to the residence of the reference, that is a scientist, to Hirotaka Sugawara.","SELECT ?result WHERE { ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Athlete>. ?v4 <http://dbpedia.org/property/father> ?v5 . ?v1 <http://dbpedia.org/property/residence> ?v2 . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerManager>. ?v7 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?v7 <http://dbpedia.org/property/nickname> ?v8 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Scientist>. ?result <http://dbpedia.org/property/nickname> ?v8 . ?v5 <http://dbpedia.org/ontology/team> ?result . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsManager>. ?v7 <http://dbpedia.org/ontology/coach> <http://dbpedia.org/resource/Hajime_Moriyasu> . ?v1 <http://xmlns.com/foaf/0.1/name> ""Hirotaka Sugawara""@en . ?v4 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Kazuaki_Nagasawa> . ?result <http://xmlns.com/foaf/0.1/name> ?v2 . }","```sparql
# Step 1: Get Hajime Moriyasu's team nickname
SELECT ?team ?nickname WHERE {
  ?person dbo:occupation dbp:Soccer_manager .
  ?person foaf:name ""Hajime Moriyasu""@en .
  ?person dbo:managerOf ?team .
  OPTIONAL { ?team rdfs:label ?nickname . FILTER (lang(?nickname) = 'en') }
}

# Step 2: Get Kazuaki Nagasawa's father
SELECT ?father WHERE {
  ?child foaf:name ""Kazuaki Nagasawa""@en .
  ?child dbo:parent ?father .
  ?father dbo:occupation dbp:Athlete ;
          dbo:occupation dbp:Soccer_manager ;
          dbo:occupation dbp:Sports_manager .
}

# Step 3: Get the scientist related to Hirotaka Sugawara and their residence
SELECT ?scientist ?residence WHERE {
  ?person foaf:name ""Hirotaka Sugawara""@en .
  ?person dbo:relatedTo ?scientist .
  ?scientist a dbo:Scientist ;
             dbo:location ?residence .
}

# Step 4: Combine results to get the final figure
SELECT ?teamNickname WHERE {
  # Assuming we have variables from previous queries: ?team, ?father, ?scientist, ?residence
  VALUES (?team) { <Team_URI> } # Replace with actual URI obtained from step 1
  VALUES (?father) { <Father_URI> } # Replace with actual URI obtained from step 2
  VALUES (?scientist) { <Scientist_URI> } # Replace with actual URI obtained from step 3

  ?team rdfs:label ?teamNickname .
}
```",9,14,10,3,3,3,3,71,0,0,1,0,0.0,0
433,63,test,"Give me the associated musical artist of the person born, that is a musical artist and an artist, as the persona of Paul Chambers and associated musical artist of the associated musical artist, that is an artist and a musical artist, of Scott LaFaro and professional in the profession of Bob Marley.",SELECT ?result WHERE { <http://dbpedia.org/resource/Scott_LaFaro> <http://dbpedia.org/ontology/associatedMusicalArtist> ?v6 . ?v3 <http://dbpedia.org/property/birthName> ?v4 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. <http://dbpedia.org/resource/Paul_Chambers> <http://xmlns.com/foaf/0.1/givenName> ?v4 . ?v6 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. <http://dbpedia.org/resource/Bob_Marley> <http://dbpedia.org/property/occupation> ?v2 . ?result <http://dbpedia.org/property/occupation> ?v2 . ?v3 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v6 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. ?v6 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . },"```sparql
# Step 1: Find Paul Chambers' associated musical artist who is both an artist and a musician.
SELECT ?artist WHERE {
    wd:Q12345 wdt:P106 wd:Q33999 . # Paul Chambers (wd:Q12345) has occupation of jazz bassist (wdt:P106 wd:Q33999)
    ?artist wdt:P106 wd:Q33999 ; # The artist is a musician
            wdt:P463 wd:Q12345 .  # Associated with Paul Chambers
}

# Step 2: Find the associated musical artist of the person identified in step 1, who is also an artist and a musician.
SELECT ?associatedArtist WHERE {
    ?artist wdt:P106 wd:Q33999 ; # The artist from step 1 is a musician
            wdt:P463 ?person .   # Associated with some person
    ?associatedArtist wdt:P106 wd:Q33999 ; # The associated artist is a musician
                      wdt:P463 ?person . # Associated with the person identified in step 1
}

# Step 3: Find Bob Marley's profession.
SELECT ?profession WHERE {
    wd:Q7777 wdt:P106 ?profession . # Bob Marley (wd:Q7777) has occupation of ?
}
```",7,11,8,3,3,3,3,71,0,0,1,0,0.0,0
715,62,test,"Give me the commander in the force of the mayor, that is an office holder and a politician and a president, of 1933 Spanish general election and commander in the force, that is a military conflict, of the native of Morocco and leader of Ministry of the Air (Spain).",SELECT ?result WHERE { ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v3 <http://dbpedia.org/ontology/commander> ?result . <http://dbpedia.org/resource/1933_Spanish_general_election> <http://dbpedia.org/property/leader> ?v0 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/President>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. <http://dbpedia.org/resource/Ministry_of_the_Air_(Spain)> <http://dbpedia.org/ontology/leader> ?result . ?v4 <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Morocco> . ?v6 <http://dbpedia.org/ontology/commander> ?v0 . ?v3 <http://dbpedia.org/ontology/commander> ?v4 . ?v6 <http://dbpedia.org/ontology/commander> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?person WHERE {
  ?person a dbo:Person .
  ?person foaf:name ""Juan Negrín""@en .

  # Check for involvement in the 1933 Spanish general election
  OPTIONAL { 
    ?officeHolder dbo:officeHolder ?person ;
                  dbo:position ""President of the Government of Spain"" ;
                  dbo:startDate ?start ;
                  dbo:endDate ?end .
    FILTER (?start <= ""1933-12-04T00:00:00Z""^^xsd:dateTime && ?end >= ""1933-12-04T00:00:00Z""^^xsd:dateTime)
  }

  # Check for role in the Spanish Civil War (involving Morocco)
  OPTIONAL {
    ?militaryConflict dbo:commander ?person ;
                      dbo:name ""Spanish Civil War""@en .
    ?conflictLocation dbo:location ?militaryConflict ;
                      dbo:name ""Morocco""@en .
  }

  # Check for leadership in the Ministry of the Air (Spain)
  OPTIONAL {
    ?ministryRole dbo:positionHeldBy ?person ;
                  dbo:office ""Minister of National Defense (Spain)"" ;
                  dbo:startDate ?startAir ;
                  dbo:endDate ?endAir .
  }
}
```",7,11,8,3,3,3,3,71,0,1,1,0.0,0.0,0
47,57,test,"Give me the office of the awardee of Padma Vibhushan and office of Suvendu Adhikari and office of the awardee of the award, that is an award, of Mantu Ghosh.",SELECT ?result WHERE { <http://dbpedia.org/resource/Suvendu_Adhikari> <http://dbpedia.org/property/office> ?result . ?v3 <http://dbpedia.org/property/office> ?result . ?v5 <http://dbpedia.org/property/awards> ?v0 . ?v3 <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/Padma_Vibhushan> . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Award>. ?v5 <http://dbpedia.org/property/office> ?result . <http://dbpedia.org/resource/Mantu_Ghosh> <http://dbpedia.org/property/awards> ?v0 . },"```sparql
# Query to find a notable Padma Vibhushan awardee and their office
SELECT ?person ?office WHERE {
  ?person dbo:award dbpedia:Padma_Vibhushan .
  OPTIONAL { ?person dbo:position ?office . }
  FILTER (LANG(?office) = 'en')
} LIMIT 1

UNION

# Query to find Suvendu Adhikari's office
SELECT ?person ?office WHERE {
  ?person rdfs:label ""Suvendu Adhikari""@en .
  OPTIONAL { ?person dbo:position ?office . }
  FILTER (LANG(?office) = 'en')
}

UNION

# Query to find an award received by Mantu Ghosh and the office of its awardee
SELECT ?awardAwardee ?office WHERE {
  ?ghosh rdfs:label ""Mantu Ghosh""@en .
  ?ghosh dbo:award ?award .
  ?award dbp:recipient ?awardAwardee .
  OPTIONAL { ?awardAwardee dbo:position ?office . }
  FILTER (LANG(?office) = 'en')
}
```",6,7,7,3,3,3,3,71,0,0,1,0,0.0,0
433,58,test,"Give me the associated musical artist of Paul Chambers and professional in the profession of the writer of Slowhand at 70 – Live at the Royal Albert Hall and associated musical artist of the associated musical artist, that is an artist and a musical artist, of Scott LaFaro.",SELECT ?result WHERE { ?result <http://dbpedia.org/property/occupation> ?v2 . <http://dbpedia.org/resource/Scott_LaFaro> <http://dbpedia.org/ontology/associatedMusicalArtist> ?v5 . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. <http://dbpedia.org/resource/Paul_Chambers> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. <http://dbpedia.org/resource/Slowhand_at_70_–_Live_at_the_Royal_Albert_Hall> <http://dbpedia.org/property/writer> ?v1 . ?v5 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v1 <http://dbpedia.org/property/occupation> ?v2 . },"```sparql
# Step 1: Find Paul Chambers' associated musical artist
SELECT ?artist WHERE {
  wd:Q12345 wdt:P106 wd:Q33999 . # Paul Chambers (wd:Q12345) has profession of jazz bassist (wdt:P106 wd:Q33999)
  ?artist wdt:P112 wd:Q12345 .    # ?artist associated with Paul Chambers
}

# Step 2: Find the writer of ""Slowhand at 70 – Live at the Royal Albert Hall""
SELECT ?writer WHERE {
  wd:Q123456 wdt:P50 ?writer .   # Album (wd:Q123456) has writer ?writer
}

# Step 3: Find Eric Clapton's associated musical artist
SELECT ?associatedArtist WHERE {
  wd:Q7777 wdt:P112 ?artist .    # Eric Clapton (wd:Q7777) associated with ?artist
}

# Step 4: Find Scott LaFaro's associated musical artist
SELECT ?artist WHERE {
  wd:Q67890 wdt:P106 wd:Q33999 . # Scott LaFaro (wd:Q67890) has profession of jazz bassist (wdt:P106 wd:Q33999)
  ?artist wdt:P112 wd:Q67890 .    # ?artist associated with Scott LaFaro
}

# Step 5: Find the associated musical artist of Bill Evans
SELECT ?associatedArtist WHERE {
  wd:Q98765 wdt:P112 ?artist .    # Bill Evans (wd:Q98765) associated with ?artist
}
```

Note: The actual Wikidata IDs for Paul Chambers, Eric Clapton, Scott LaFaro, and Bill Evans need to be replaced with their correct identifiers in the query.",6,8,7,3,3,3,3,71,0,0,1,0,0.0,0
987,56,test,"Give me the birth place of the band, that is an artist and a musical artist, of Šako Polumenta and birth place of Moamer Kasumović and entity in the region, that is a country, of the time zone, that is a sports event, in Canicosa de la Sierra.",SELECT ?result WHERE { ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. <http://dbpedia.org/resource/Canicosa_de_la_Sierra> <http://dbpedia.org/ontology/timeZone> ?v4 . <http://dbpedia.org/resource/Moamer_Kasumović> <http://dbpedia.org/ontology/birthPlace> ?result . <http://dbpedia.org/resource/Šako_Polumenta> <http://dbpedia.org/ontology/associatedMusicalArtist> ?v2 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsEvent>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?v0 <http://dbpedia.org/property/timeZone> ?v4 . ?v2 <http://dbpedia.org/ontology/birthPlace> ?result . ?result <http://dbpedia.org/ontology/country> ?v0 . },"```sparql
# Query to find the band associated with Šako Polumenta and its birthplace
SELECT ?band ?birthPlace WHERE {
  ?band dbo:member dbr:Šako_Polumenta .
  ?band dbo:genre dbc:Musical_artists .
  ?band dbo:birthPlace ?birthPlace .
}

# Query to find Moamer Kasumović's birthplace
SELECT ?birthPlace WHERE {
  dbr:Moamer_Kasumović dbo:birthPlace ?birthPlace .
}

# Query to find the country of Canicosa de la Sierra based on its time zone
SELECT ?country WHERE {
  ?location rdfs:label ""Canicosa de la Sierra""@en .
  ?location geo:timezone ?tz .
  ?tz geo:area ?country .
  FILTER (lang(?location) = 'en')
}

# Query to find a sports event in the same time zone as Canicosa de la Sierra
SELECT ?event WHERE {
  ?location rdfs:label ""Canicosa de la Sierra""@en .
  ?location geo:timezone ?tz .
  ?event dbo:timeZone ?tz ;
         rdf:type dbo:SportsEvent .
}
```",6,10,7,3,3,3,3,71,0,0,1,0,0.0,0
445,70,test,"Give me the death place of the awardee of the establishment of 1820-03-10 and entity in the residence, that is a country, of Anna Sharkey and entity in the award of the commander in Battle of Saint-Mihiel.","SELECT ?result WHERE { ?v7 <http://dbpedia.org/ontology/deathPlace> ?result . ?result <http://dbpedia.org/ontology/country> ?v3 . <http://dbpedia.org/resource/Anna_Sharkey> <http://dbpedia.org/property/residence> ?v4 . <http://dbpedia.org/resource/Battle_of_Saint-Mihiel> <http://dbpedia.org/ontology/commander> ?v1 . ?result <http://dbpedia.org/ontology/location> ?v4 . ?v7 <http://dbpedia.org/property/awards> ?v0 . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. ?v0 <http://dbpedia.org/ontology/foundingDate> ""1820-03-10""^^<http://www.w3.org/2001/XMLSchema#date> . ?v1 <http://dbpedia.org/property/awards> ?v3 . }","```sparql
# Step 1: Find the award established on 1820-03-10
SELECT ?award WHERE {
    ?award dbo:foundingDate ""1820-03-10""^^xsd:date .
}

# Step 2: Find Anna Sharkey's residence country
SELECT ?country WHERE {
    dbpedia:Anna_Sharkey dbo:residenceCountry ?country .
}

# Step 3: Identify the commander in the Battle of Saint-Mihiel and their awards
SELECT ?commander ?award WHERE {
    ?battle dbo:commander ?commander ;
            rdf:type dbo:MilitaryEngagement ;
            rdfs:label ""Battle of Saint-Mihiel""@en .
    OPTIONAL { ?commander dbo:receivedAward ?award . }
}

# Step 4: Link the awardee from step 1 to an award received by the commander
SELECT DISTINCT ?awardee WHERE {
    ?award dbo:recipient ?awardee .
    ?commander dbo:receivedAward ?award .
    ?battle dbo:commander ?commander ;
            rdf:type dbo:MilitaryEngagement ;
            rdfs:label ""Battle of Saint-Mihiel""@en .
}

# Step 5: Find the death place of the awardee
SELECT DISTINCT ?deathPlace WHERE {
    ?awardee dbo:deathPlace ?deathPlace .
}
```",8,9,9,3,3,3,3,71,0,0,1,0,0.0,0
465,66,test,"Give me the successor of the child of Alfonso I d'Este and spouse of the child, that is a royalty, of Ferdinand I, Holy Roman Emperor and successor of the child, that is a royalty, of the parent of Charles Orlando, Dauphin of France.","SELECT ?result WHERE { ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v6 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. <http://dbpedia.org/resource/Ferdinand_I,_Holy_Roman_Emperor> <http://dbpedia.org/ontology/child> ?v6 . ?result <http://dbpedia.org/ontology/spouse> ?v6 . ?v2 <http://dbpedia.org/ontology/successor> ?result . ?v1 <http://dbpedia.org/ontology/child> ?v2 . ?v3 <http://dbpedia.org/ontology/successor> ?result . ?v3 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Alfonso_I_d'Este> . <http://dbpedia.org/resource/Charles_Orlando,_Dauphin_of_France> <http://dbpedia.org/ontology/parent> ?v1 . }","```sparql
# Find Alfonso I d'Este's child
SELECT ?child WHERE {
  wd:Q123456 wdt:P40 ?child .
}

# Find Ferdinand I's royal child and spouse
SELECT ?royalChild ?spouse WHERE {
  wd:Q789012 wdt:P40 ?royalChild .
  ?royalChild wdt:P26 ?spouse .
  FILTER EXISTS { ?spouse wdt:P31 wd:Q5 } # Ensure the spouse is a person (royalty)
}

# Find Charles Orlando's parent
SELECT ?parent WHERE {
  wd:Q345678 wdt:P22 ?parent .
}

# Successors
SELECT ?successorAlfonso, ?successorFerdinand, ?successorLouis WHERE {
  ?child wdt:P57 ?successorAlfonso . # Alfonso II d'Este's successor
  FILTER (?child = wd:Q987654) # Assuming Q987654 is Alfonso II d'Este

  ?spouse wdt:P136 ?royalty . # Ensure the spouse is royalty
  ?spouse wdt:P57 ?successorFerdinand . # Stephen Báthory's successor
  FILTER (?spouse = wd:Q876543) # Assuming Q876543 is Stephen Báthory

  ?parent wdt:P57 ?successorLouis . # Louis XIV's successor
  FILTER (?parent = wd:Q234567) # Assuming Q234567 is Louis XIV
}

# Final query to find the required successor and spouse
SELECT ?finalSuccessor WHERE {
  ?successorAlfonso wdt:P26 ?spouse .
  ?spouse wdt:P57 ?finalSuccessor .
  FILTER EXISTS { ?finalSuccessor wdt:P31 wd:Q5 } # Ensure the final successor is a person (royalty)
}
```",7,9,8,3,3,3,3,71,0,0,1,0,0.0,0
98,28,test,"Give me the birth place of the person born as Paolo Elito M. Ballesteros IV and region of the time zone of Lopez Jaena and entity in the region, that is a country, of Philippine Standard Time.","SELECT ?result WHERE { <http://dbpedia.org/resource/Lopez_Jaena> <http://dbpedia.org/ontology/timeZone> ?v1 . ?v3 <http://dbpedia.org/property/birthName> ""Paolo Elito M. Ballesteros IV""@en . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. ?result <http://dbpedia.org/ontology/country> ?v5 . ?result <http://dbpedia.org/ontology/timeZone> ?v1 . ?v5 <http://dbpedia.org/property/timeZone> <http://dbpedia.org/resource/Philippine_Standard_Time> . ?v3 <http://dbpedia.org/ontology/birthPlace> ?result . }","```sparql
# Query to find the birth place of Paolo Elito M. Ballesteros IV
SELECT ?birthPlace WHERE {
  ?person dbo:birthName ""Paolo Elito M. Ballesteros IV""@en .
  ?person dbo:birthPlace ?birthPlace .
}

UNION

# Query to determine the region of Lopez Jaena and identify the country (Philippines)
SELECT DISTINCT ?region ?country WHERE {
  dbpedia:Lopez_Jaena dbo:administrativeRegion ?region .
  ?region dbo:country ?country .
}
```",6,7,7,2,3,2,3,28,0,0,2,0,0.0,0
47,68,test,"Give me the office of the administration of the commander, that is a politician, in Operation Green Hunt and office of the awardee of the award, that is an award, of Mantu Ghosh and office of the awardee of Padma Vibhushan.",SELECT ?result WHERE { ?v4 <http://dbpedia.org/property/governor> ?v5 . ?v7 <http://dbpedia.org/property/awards> ?v0 . <http://dbpedia.org/resource/Operation_Green_Hunt> <http://dbpedia.org/ontology/commander> ?v5 . ?v3 <http://dbpedia.org/property/office> ?result . ?v3 <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/Padma_Vibhushan> . <http://dbpedia.org/resource/Mantu_Ghosh> <http://dbpedia.org/property/awards> ?v0 . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v7 <http://dbpedia.org/property/office> ?result . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Award>. ?v4 <http://dbpedia.org/property/office> ?result . },"```sparql
# Query 1: Office of the administration of the commander in Operation Green Hunt
SELECT ?office WHERE {
  ?person dbo:occupation dbp:Politician .
  ?operation dbo:commander ?person .
  FILTER(CONTAINS(LCASE(?operation), ""operation green hunt"")) .
  ?person dbo:office ?office .
}

# Query 2: Office of the awardee of Mantu Ghosh's award
SELECT ?award ?office WHERE {
  ?awardee dbo:award ?award .
  ?award dbo:recipient ?awardee .
  ?awardee foaf:name ""Mantu Ghosh"" .
  ?awardee dbo:office ?office .
}

# Query 3: Office of the awardee of Padma Vibhushan
SELECT DISTINCT ?person ?office WHERE {
  ?person dbo:award dbpedia:Padma_Vibhushan .
  OPTIONAL { ?person dbo:office ?office }
}
```",8,10,9,3,3,3,3,71,0,0,1,0,0.0,0
582,70,test,"Give me the player in the father, that is an athlete and a soccer manager and a sports manager, of the child of Kazuaki Nagasawa and figure known as the nickname of the team, that is an organisation, of Hajime Moriyasu and reference to the residence of Hirotaka Sugawara.",SELECT ?result WHERE { <http://dbpedia.org/resource/Hirotaka_Sugawara> <http://dbpedia.org/property/residence> ?v4 . ?v0 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Kazuaki_Nagasawa> . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?v7 <http://dbpedia.org/ontology/team> ?result . ?v1 <http://dbpedia.org/ontology/coach> <http://dbpedia.org/resource/Hajime_Moriyasu> . ?v7 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Athlete>. ?v7 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsManager>. ?v0 <http://dbpedia.org/property/father> ?v7 . ?v7 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerManager>. ?result <http://dbpedia.org/property/nickname> ?v3 . ?result <http://xmlns.com/foaf/0.1/name> ?v4 . ?v1 <http://dbpedia.org/property/nickname> ?v3 . },"```sparql
# Step 1: Find Kazuaki Nagasawa's child
SELECT ?child WHERE {
    ?person dbo:spouse dbp:Kazuaki_Nagasawa .
    ?person dbo:child ?child .
}

# Step 2: Find the father of that child
SELECT ?father WHERE {
    ?child dbo:parent ?father .
}

# Step 3: Check if this father is an athlete, soccer manager, and sports manager
SELECT ?father WHERE {
    ?father rdf:type dbp:Athlete ;
            rdf:type dbp:Soccer_Manager ;
            rdf:type dbp:Sports_Manager .
}

# Step 4: Find Hajime Moriyasu's team nickname
SELECT ?nickname WHERE {
    ?team dbo:manager dbp:Hajime_Moriyasu .
    ?team rdfs:label ?nickname .
}

# Step 5: Find the organization related to that nickname
SELECT ?organization WHERE {
    ?organization rdfs:label ?nickname .
}

# Step 6: Determine Hirotaka Sugawara's residence reference
SELECT ?residence WHERE {
    dbp:Hirotaka_Sugawara dbo:location ?residence .
}

# Combine all these elements to find the player
SELECT DISTINCT ?player WHERE {
    # Assuming we have variables from previous queries: ?father, ?nickname, ?residence
    ?player rdf:type dbp:Athlete ;
            dbo:parent ?father ;
            dbo:memberOf ?organization ;
            dbo:location ?residence .
}
```",8,12,9,3,3,3,3,71,0,0,1,0,0.0,0
274,24,test,"Give me the associated musical artist of the actor, that is a musical artist, of Imagine the Sound and professional in the designer of Tetris Classic.",SELECT ?result WHERE { ?result <http://dbpedia.org/property/occupation> ?v2 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. <http://dbpedia.org/resource/Tetris_Classic> <http://dbpedia.org/property/designer> ?v2 . <http://dbpedia.org/resource/Imagine_the_Sound> <http://dbpedia.org/property/starring> ?v0 . ?v0 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . },"```sparql
# Step 1: Find actor associated with ""Imagine the Sound"" who is also a musical artist
SELECT ?actor WHERE {
  ?soundWork dcterms:title ""Imagine the Sound""@en .
  ?soundWork dbo:performer ?actor .
  ?actor rdf:type dbo:Actor ;
         dbo:musicArtist true .
}

# Step 2: Find designer of Tetris Classic
SELECT ?designer WHERE {
  ?tetrisClassic dbo:creator ?designer .
  ?tetrisClassic rdfs:label ""Tetris Classic""@en .
}

# Step 3: Check for overlap between the two sets
SELECT DISTINCT ?actor WHERE {
  # Actor associated with ""Imagine the Sound"" and is a musical artist
  ?soundWork dcterms:title ""Imagine the Sound""@en .
  ?soundWork dbo:performer ?actor .
  ?actor rdf:type dbo:Actor ;
         dbo:musicArtist true .

  # Designer of Tetris Classic
  ?tetrisClassic dbo:creator ?actor .
  ?tetrisClassic rdfs:label ""Tetris Classic""@en .
}
```",4,5,5,2,2,2,3,28,0,0,6,0,0.0,0
582,63,test,"Give me the player in the father, that is an athlete and a soccer manager and a sports manager, of Masami Nagasawa and reference to the residence of the reference, that is a scientist, to Hirotaka Sugawara and figure known as the nickname of Japan national football team.","SELECT ?result WHERE { <http://dbpedia.org/resource/Masami_Nagasawa> <http://dbpedia.org/property/father> ?v6 . ?v6 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Athlete>. ?result <http://dbpedia.org/property/nickname> ?v2 . ?result <http://xmlns.com/foaf/0.1/name> ?v3 . ?v4 <http://xmlns.com/foaf/0.1/name> ""Hirotaka Sugawara""@en . ?v6 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsManager>. ?v4 <http://dbpedia.org/property/residence> ?v3 . <http://dbpedia.org/resource/Japan_national_football_team> <http://dbpedia.org/property/nickname> ?v2 . ?v6 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerManager>. ?v6 <http://dbpedia.org/ontology/team> ?result . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Scientist>. }","```sparql
# Step 1: Find Masami Nagasawa's father who is an athlete, soccer manager, and sports manager
SELECT ?father WHERE {
    ?nagasawa dbo:mother ?mother .
    ?mother dbo:spouse ?father .
    ?nagasawa rdfs:label ""Masami Nagasawa""@en .

    # Check if the father is an athlete, soccer manager, and sports manager
    OPTIONAL { ?father dbo:occupation dbp:Athlete . }
    OPTIONAL { ?father dbo:occupation dbp:Soccer_Manager . }
    OPTIONAL { ?father dbo:occupation dbp:Sports_Manager . }

    FILTER (COUNT(?father) = 1)
}

# Step 2: Find the scientist related to Hirotaka Sugawara and their residence
SELECT ?scientist ?residence WHERE {
    ?sugawara dbo:spouseOrPartner ?scientist .
    ?sugawara rdfs:label ""Hirotaka Sugawara""@en .

    # Get the residence of the scientist
    ?scientist dbo:residenceLocation ?residence .
}

# Step 3: Find the nickname of the Japan national football team
SELECT ?nickname WHERE {
    ?team dbo:nickname ?nickname .
    ?team rdfs:label ""Japan national football team""@en .
}
```",7,11,8,3,3,3,3,71,0,0,1,0,0.0,0
98,24,test,"Give me the birth place of the person born as Paolo Elito M. Ballesteros IV and entity in the region, that is a country, of Philippine Standard Time.","SELECT ?result WHERE { ?v2 <http://dbpedia.org/ontology/birthPlace> ?result . ?v1 <http://dbpedia.org/property/timeZone> <http://dbpedia.org/resource/Philippine_Standard_Time> . ?result <http://dbpedia.org/ontology/country> ?v1 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. ?v2 <http://dbpedia.org/property/birthName> ""Paolo Elito M. Ballesteros IV""@en . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?birthPlaceLabel ?countryLabel
WHERE {
  # Find the birthplace of Paolo Elito M. Ballesteros IV
  ?person a dbo:Person ;
          foaf:name ""Paolo Elito M. Ballesteros IV""@en ;
          dbo:birthPlace ?birthPlace .
  
  # Get the label for the birth place
  ?birthPlace rdfs:label ?birthPlaceLabel .

  # Find countries in the region of Philippine Standard Time (PST)
  ?country dbp:timeZone ""Philippine Standard Time""@en ;
           rdfs:label ?countryLabel .
}
```",4,5,5,2,2,2,3,28,0,0,2,0,0.0,0
839,71,test,"Give me the band of the person born, that is a musical artist, as the persona of Kevin Russell (musician) and band of the band, that is a musical artist, of the professional in Musician and band of the member of the band, that is a band and a group, of Peter Schorowsky.","SELECT ?result WHERE { ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Group>. ?v7 <http://dbpedia.org/ontology/associatedMusicalArtist> ?v8 . ?v8 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. <http://dbpedia.org/resource/Kevin_Russell_(musician)> <http://xmlns.com/foaf/0.1/givenName> ?v1 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?v4 <http://dbpedia.org/ontology/bandMember> ?v5 . ?result <http://dbpedia.org/ontology/bandMember> ?v5 . <http://dbpedia.org/resource/Peter_Schorowsky> <http://dbpedia.org/ontology/associatedMusicalArtist> ?v4 . ?result <http://dbpedia.org/ontology/bandMember> ?v8 . ?v7 <http://dbpedia.org/property/occupation> ""Musician""@en . ?v2 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v2 <http://dbpedia.org/property/birthName> ?v1 . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Band>. }","```sparql
# Query for Kevin Russell's band
SELECT ?band WHERE {
  ?person foaf:name ""Kevin Russell"" .
  ?person dbo:birthDate ?birthdate .
  ?person dbo:occupation dbp:musician .
  ?person dbo:associatedBand ?band .
}

UNION

# Query for bands of the bands associated with Kevin Russell
SELECT ?subBand WHERE {
  ?band dbo:associatedBand ?subBand .
  ?subBand a dbo:MusicalArtist .
}

UNION

# Query for Peter Schorowsky's band
SELECT ?band WHERE {
  ?person foaf:name ""Peter Schorowsky"" .
  ?person dbo:memberOf ?band .
  ?band a dbo:Band ;
        a dbo:Group .
}
```",9,13,10,3,3,3,3,71,0,0,1,0,0.0,0
456,58,test,"Give me the band of the band, that is a musical artist, of the band of Alan Doyle and professional in the alter ego of The Shadow and spouse of Danielle Spencer (Australian actress).",SELECT ?result WHERE { <http://dbpedia.org/resource/Alan_Doyle> <http://dbpedia.org/ontology/associatedMusicalArtist> ?v1 . ?v1 <http://dbpedia.org/ontology/associatedMusicalArtist> ?v2 . ?result <http://dbpedia.org/property/occupation> ?v5 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. <http://dbpedia.org/resource/The_Shadow> <http://dbpedia.org/property/alterEgo> ?v5 . ?v2 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . <http://dbpedia.org/resource/Danielle_Spencer_(Australian_actress)> <http://dbpedia.org/ontology/spouse> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?bandName WHERE {
  # Step 1: Find Alan Doyle's Band
  dbr:Alan_Doyle dbo:musicalArtist dbr:Great_Big_Sea .
  
  # Step 2: Identify Michael Falzon (The Shadow) and his spouse Danielle Spencer
  dbr:Michael_Falzon dbo:spouse dbr:Danielle_Spencer ;
                     rdfs:label ""The Shadow""@en .

  # Step 3: Find any musical artist connection for Michael Falzon
  OPTIONAL {
    ?artist dbo:associatedBand ?band .
    ?artist rdfs:label ?artistLabel .
    FILTER(CONTAINS(LCASE(?artistLabel), ""michael falzon""))
  }

  # Step 4: Find the band of that musical artist
  ?band dbo:name ?bandName .
}
```",6,7,7,3,3,3,3,71,0,0,1,0,0.0,0
445,67,test,Give me the entity in England and entity in the award of the commander in Battle of Saint-Mihiel and death place of the awardee of the establishment of 1820-03-10.,"SELECT ?result WHERE { ?v0 <http://dbpedia.org/ontology/foundingDate> ""1820-03-10""^^<http://www.w3.org/2001/XMLSchema#date> . ?v6 <http://dbpedia.org/property/awards> ?v0 . <http://dbpedia.org/resource/Battle_of_Saint-Mihiel> <http://dbpedia.org/ontology/commander> ?v1 . ?v6 <http://dbpedia.org/ontology/deathPlace> ?result . ?v1 <http://dbpedia.org/property/awards> ?v3 . ?result <http://dbpedia.org/ontology/country> ?v3 . ?result <http://dbpedia.org/ontology/location> <http://dbpedia.org/resource/England> . }","```sparql
# Step 1: Find the commander awarded for the Battle of Saint-Mihiel
SELECT ?commander WHERE {
  ?battle dbo:type dbr:Battle_of_Saint-Mihiel .
  ?battle dbo:commander ?commander .
  ?award dbo:recipient ?commander ;
         dbo:forEvent ?battle .
}

# Step 2: Determine the death place of that commander
SELECT ?deathPlace WHERE {
  ?commander dbo:deathPlace ?deathPlace .
}

# Step 3: Identify an entity established on March 10, 1820, in England
SELECT ?entity WHERE {
  ?entity dbo:foundingDate ""1820-03-10""^^xsd:date ;
          dbo:country dbr:England .
}
```",7,7,8,3,3,3,3,71,0,0,1,0,0.0,0
41,25,test,"Give me the party of Enda Kenny and party of the leader, that is a politician and an office holder, of 2005 Castlereagh Borough Council election and party of the person born as David Declan Costello.","SELECT ?result WHERE { ?v4 <http://dbpedia.org/ontology/party> ?result . <http://dbpedia.org/resource/2005_Castlereagh_Borough_Council_election> <http://dbpedia.org/property/leader> ?v4 . ?v1 <http://dbpedia.org/property/birthName> ""David Declan Costello""@en . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. <http://dbpedia.org/resource/Enda_Kenny> <http://dbpedia.org/ontology/party> ?result . ?v1 <http://dbpedia.org/ontology/party> ?result . }","```sparql
# Query for Enda Kenny's Party
SELECT ?party WHERE {
  dbpedia:Enda_Kenny dbo:politicalParty ?party .
}

UNION

# Query for the leader of the 2005 Castlereagh Borough Council election party
SELECT DISTINCT ?party WHERE {
  ?election a dbo:Election ;
           dbo:electedOffice dbr:Castlereagh_Borough_Council ;
           dbo:date ""2005-05-05""^^xsd:date .
  ?result dbo:election ?election ;
          dbo:winnerParty ?party .
}

UNION

# Query for David Declan Costello's Party
SELECT ?party WHERE {
  dbpedia:David_Declan_Costello dbo:politicalParty ?party .
}
```",5,7,6,2,3,2,3,28,0,0,1,0,0.0,0
826,57,test,"Give me the predecessor of the parent of Prince Friedrich of Hesse and by Rhine and spouse of Anna Magdalena Appel and successor of the child, that is a royalty, of the reference, that is a royalty, to Louis I.","SELECT ?result WHERE { ?v5 <http://dbpedia.org/ontology/successor> ?result . ?result <http://dbpedia.org/ontology/successor> ?v3 . <http://dbpedia.org/resource/Prince_Friedrich_of_Hesse_and_by_Rhine> <http://dbpedia.org/ontology/parent> ?v3 . <http://dbpedia.org/resource/Anna_Magdalena_Appel> <http://dbpedia.org/ontology/spouse> ?result . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v0 <http://xmlns.com/foaf/0.1/name> ""Louis I""@en . ?v0 <http://dbpedia.org/ontology/child> ?v5 . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. }","```sparql
SELECT ?predecessor WHERE {
  ?alice a dbo:Person ;
         foaf:name ""Princess Alice of the United Kingdom""@en .
  ?alice dbo:parent ?father .

  ?louisI a dbo:Person ;
          foaf:name ""Ludwig I, King of Bavaria""@en .
  ?louisI dbo:child ?ottoI .
  
  ?ottoI a dbo:Person ;
         foaf:name ""Otto I, King of Greece""@en .
  ?ottoI dbo:succeededBy ?georgeI .

  ?georgeI a dbo:Person ;
           foaf:name ""George I of Greece""@en .
  ?georgeI dbo:predecessor ?successor .

  ?father foaf:name ?name .
  FILTER(?name = ""Albert Edward, Prince of Wales""@en)
}
```",6,8,7,3,3,3,3,71,0,0,1,0,0.0,0
965,64,test,"Give me the parent of the person born, that is a noble, as the birth name of George Mountbatten, 2nd Marquess of Milford Haven and parent of Louise Mountbatten and spouse of the spouse of the parent of Louise Mountbatten.","SELECT ?result WHERE { <http://dbpedia.org/resource/Louise_Mountbatten> <http://dbpedia.org/ontology/parent> ?result . ?v0 <http://dbpedia.org/property/birthName> ?v5 . ?v4 <http://dbpedia.org/ontology/spouse> ?v2 . <http://dbpedia.org/resource/Louise_Mountbatten> <http://dbpedia.org/ontology/parent> ?v4 . ?v0 <http://dbpedia.org/ontology/parent> ?result . ?result <http://dbpedia.org/ontology/spouse> ?v2 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Noble>. <http://dbpedia.org/resource/George_Mountbatten,_2nd_Marquess_of_Milford_Haven> <http://dbpedia.org/property/birthName> ?v5 . }","```sparql
SELECT ?grandParent WHERE {
  # George Mountbatten, 2nd Marquess of Milford Haven
  ?george dbo:birthName ""George Mountbatten"" .
  ?george dbo:nobleTitle dbr:Marquess_of_Milford_Haven .

  # Parent of George Mountbatten (who is a noble)
  ?parent dbo:child ?george .
  ?parent dbo:nobleTitle ?title .

  # Louise Mountbatten
  ?louise foaf:name ""Louise Mountbatten"" .

  # Parent of Louise Mountbatten
  ?parent2 dbo:child ?louise .

  # Spouse of the parent of Louise Mountbatten
  ?spouse1 dbo:spouse ?parent2 .
  
  # Parent of this spouse (the final answer)
  ?grandParent dbo:child ?spouse1 .
}
```",7,8,8,3,3,3,3,71,0,0,2,0,0.0,0
192,20,test,"Give me the child of the child of the parent of Anna of Hungary (Byzantine empress) and spouse of the spouse, that is a royalty, of the child of Charles II of Naples.",SELECT ?result WHERE { ?v4 <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Anna_of_Hungary_(Byzantine_empress)> . ?v5 <http://dbpedia.org/property/father> ?v4 . ?result <http://dbpedia.org/ontology/parent> ?v5 . ?v1 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Charles_II_of_Naples> . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v2 <http://dbpedia.org/ontology/spouse> ?v1 . ?v2 <http://dbpedia.org/ontology/spouse> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?childOfChild ?spouseOfSpouse WHERE {
  # Step 1: Find Anna of Hungary's parent
  ?anna a dbo:ByzantineEmpress ;
        foaf:name ""Anna of Hungary"" .
  
  ?anna dbo:parent ?parent .

  # Step 2: Find the child of that parent (sibling or cousin)
  ?childOfParent dbo:parent ?parent ;
                 a dbo:Person .

  # Step 3: Determine the spouse of this child
  ?spouseOfChild dbo:spouse ?childOfParent .

  # Step 4: Find the child of Charles II of Naples
  dbr:Charles_II_of_Naples dbo:child ?childOfNaples .

  # Step 5: Identify the spouse of this child
  ?spouseOfNaples dbo:spouse ?childOfNaples .

  # Step 6: Find a royalty among these connections
  ?spouseOfSpouse dbo:spouse ?spouseOfChild ;
                  a dbo:Royalty .
  
  FILTER(?spouseOfSpouse != dbr:Anna_of_Hungary)
}
```",6,7,7,3,2,3,2,20,0,0,1,0,0.0,0
865,62,test,"Give me the native of the residence, that is a country, of the person decedent at Patna and father of Shahla Khatun and father of the child, that is a politician, of the spouse of Syeda Shahar Banu.",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/birthPlace> ?v0 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. <http://dbpedia.org/resource/Syeda_Shahar_Banu> <http://dbpedia.org/ontology/spouse> ?v2 . ?v4 <http://dbpedia.org/property/father> ?result . ?v1 <http://dbpedia.org/property/residence> ?v0 . ?v4 <http://dbpedia.org/property/father> ?v2 . <http://dbpedia.org/resource/Shahla_Khatun> <http://dbpedia.org/property/father> ?result . ?v1 <http://dbpedia.org/ontology/deathPlace> <http://dbpedia.org/resource/Patna> . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. },"```sparql
SELECT ?nativePlace WHERE {
  ?person dbo:deathPlace dbr:Patna .
  ?person dbo:spouse ?spouse .
  ?spouse dbo:child ?politicianChild .
  ?politicianChild rdf:type dbo:Politician .
  ?person dbo:child ?shahlaKhatun .
  ?shahlaKhatun rdfs:label ""Shahla Khatun""@en .
  
  ?person dbo:residenceCountry ?residenceCountry .
  FILTER (isLiteral(?residenceCountry) && langMatches(lang(?residenceCountry), ""EN""))
  
  ?person foaf:nativePlace ?nativePlace .
}
```",7,9,8,3,3,3,3,71,0,0,1,0,0.0,0
417,56,test,"Give me the child of the child, that is a royalty, of the parent, that is a royalty, of Alexandrine of Mecklenburg-Schwerin and spouse of the parent, that is a royalty, of Count Ingolf of Rosenborg and child of Christian X of Denmark.",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/parent> ?v1 . ?result <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Christian_X_of_Denmark> . ?v1 <http://dbpedia.org/property/father> ?v0 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. <http://dbpedia.org/resource/Alexandrine_of_Mecklenburg-Schwerin> <http://dbpedia.org/ontology/parent> ?v0 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v2 <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Count_Ingolf_of_Rosenborg> . ?result <http://dbpedia.org/ontology/spouse> ?v2 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?childOfChild WHERE {
  # Step 1: Find Alexandrine of Mecklenburg-Schwerin's royal parent
  ?alexParent a dbo:Monarch ;
              dbo:spouse ?alexSpouse .

  # Step 2: Identify the spouse of that parent who is royalty
  ?alexSpouse a dbo:Monarch .

  # Step 3: Find child of Christian X of Denmark
  dbr:Christian_X_of_Denmark dbo:child ?christianChild .
  
  # Ensure this child matches with Alexandrine's parent or spouse
  FILTER (?alexParent = ?christianChild || ?alexSpouse = ?christianChild)

  # Step 4: Find Count Ingolf of Rosenborg's royal parent and their spouse
  ?ingolfParent a dbo:Monarch ;
                dbo:spouse ?ingolfSpouse .

  # Step 5: Identify the child of that spouse who is royalty
  ?ingolfSpouse dbo:child ?royalChild .
  
  # Ensure this child matches with Alexandrine's parent or spouse
  FILTER (?alexParent = ?ingolfParent || ?alexSpouse = ?ingolfSpouse)

  # Step 6: Find the child of the royal child who is royalty
  ?royalChild dbo:child ?childOfChild .
  
  # Ensure this child is a monarch
  ?childOfChild a dbo:Monarch .
}
```",6,9,7,3,3,3,3,71,0,0,1,0,0.0,0
47,70,test,"Give me the office of the awardee of the entity, that is an award, in India and office of the awardee of the award, that is an award, of Mantu Ghosh and office of the administration of Jagdeep Dhankhar.",SELECT ?result WHERE { ?v3 <http://dbpedia.org/property/awards> ?v1 . <http://dbpedia.org/resource/Mantu_Ghosh> <http://dbpedia.org/property/awards> ?v0 . ?v3 <http://dbpedia.org/property/office> ?result . ?v4 <http://dbpedia.org/property/office> ?result . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Award>. ?v7 <http://dbpedia.org/property/awards> ?v0 . ?v1 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/India> . ?v4 <http://dbpedia.org/property/governor> <http://dbpedia.org/resource/Jagdeep_Dhankhar> . ?v7 <http://dbpedia.org/property/office> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Award>. },"```sparql
# Query for office of awardees of awards in India
SELECT DISTINCT ?award ?office WHERE {
  ?award dbo:country dbr:India .
  ?award dbo:recipient ?person .
  ?person dbo:occupation ?office .
} LIMIT 10

UNION

# Query for office of awardees of Mantu Ghosh's awards
SELECT DISTINCT ?award ?office WHERE {
  ?award dbo:recipient dbr:Mantu_Ghosh .
  ?award dbo:recipient ?person .
  ?person dbo:occupation ?office .
} LIMIT 10

UNION

# Query for office of the administration of Jagdeep Dhankhar
SELECT DISTINCT ?office WHERE {
  dbr:Jagdeep_Dhankhar dbo:position ?office .
}
```",8,10,9,3,3,3,3,71,0,0,1,0,0.0,0
508,18,test,"Give me the birthplace of the commander, that is Saudi, in Central Plains War and birthplace of the commander, that is a politician, in the war, that is a military conflict and a societal event and an event, of Hayao Tada.",SELECT ?result WHERE { ?v3 <http://dbpedia.org/ontology/birthPlace> ?result . <http://dbpedia.org/resource/Hayao_Tada> <http://dbpedia.org/ontology/battle> ?v1 . ?v1 <http://dbpedia.org/ontology/commander> ?v2 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v2 <http://dbpedia.org/ontology/birthPlace> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. <http://dbpedia.org/resource/Central_Plains_War> <http://dbpedia.org/ontology/commander> ?v3 . ?v3 <http://dbpedia.org/ontology/nationality> <http://dbpedia.org/resource/Saudi_Arabia>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. },"```sparql
# Query for the birthplace of the commander from Saudi Arabia in the Central Plains War
SELECT ?birthPlace WHERE {
  ?person dbo:nationality dbr:Saudi_Arabia .
  ?person dbo:occupation dbr:Commander .
  ?person dbo:participatedInEvent dbr:Central_Plains_War .
  ?person dbo:birthPlace ?birthPlace .
}

# Query for the birthplace of the politician involved in a military conflict related to Hayao Tada
SELECT ?birthPlace WHERE {
  ?politician dbo:occupation dbr:Politician .
  ?conflict dbo:type dbr:Military_conflict ;
            dbo:societalEvent true ;
            dbo:eventInvolving dbr:Hayao_Tada .
  ?politician dbo:participatedInEvent ?conflict .
  ?politician dbo:birthPlace ?birthPlace .
}
```",5,10,6,3,2,3,2,20,0,0,3,0,0.0,0
892,60,test,"Give me the entity in the profession of the true self of Enrico Crolla and entity in the administration, that is Italian and a region and a settlement and an administrative region, of the party, that is a political party and an organisation, of Andrea Cozzolino.","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/province> ?v0 . ?result <http://dbpedia.org/ontology/country> ?v2 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Region>. ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?v0 <http://dbpedia.org/property/leaderParty> ?v5 . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/PoliticalParty>. ?v4 <http://xmlns.com/foaf/0.1/givenName> ""Enrico Crolla""@en . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. <http://dbpedia.org/resource/Andrea_Cozzolino> <http://dbpedia.org/ontology/party> ?v5 . ?v4 <http://dbpedia.org/property/occupation> ?v2 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/AdministrativeRegion>. ?v0 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Italy>. }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?profession ?region WHERE {
  # Enrico Crolla's true self and profession
  OPTIONAL {
    ?enricoCrolla a dbo:Person ;
                 foaf:name ""Enrico Crolla"" .
    ?enricoCrolla dbo:occupation ?profession .
  }

  # Andrea Cozzolino's party and related region
  ?andreaCozzolino a dbo:Person ;
                   foaf:name ""Andrea Cozzolino"" .
  ?andreaCozzolino dbo:memberOfParty ?party .
  ?party a dbo:PoliticalParty .

  OPTIONAL {
    ?region a dbo:Region ;
            dbo:country dbr:Italy ;
            dbo:settlementLocation ?settlement ;
            rdfs:label ?regionLabel .
    FILTER (CONTAINS(LCASE(?regionLabel), ""italy""))
    ?party dbo:administrativeRegion ?region .
  }
}
```",6,12,7,3,2,3,3,71,0,0,587,0,0.0,0
917,71,test,"Give me the parent of the child, that is a royalty, of the mayor of Hawaiian Kingdom and child of the father of the child, that is a royalty, of Kamehameha III and child of the father of the spouse, that is a royalty, of Leleiohoku I.",SELECT ?result WHERE { ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v4 <http://dbpedia.org/property/father> ?v5 . ?v4 <http://dbpedia.org/ontology/spouse> <http://dbpedia.org/resource/Leleiohoku_I> . ?v7 <http://dbpedia.org/property/father> ?v8 . ?v7 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. <http://dbpedia.org/resource/Hawaiian_Kingdom> <http://dbpedia.org/property/leader> ?v1 . ?result <http://dbpedia.org/ontology/parent> ?v5 . ?v2 <http://dbpedia.org/property/father> ?v1 . <http://dbpedia.org/resource/Kamehameha_III> <http://dbpedia.org/ontology/child> ?v7 . ?result <http://dbpedia.org/property/father> ?v8 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?result <http://dbpedia.org/ontology/child> ?v2 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?parent WHERE {
  # Step 1: Find Kamehameha III's royal children
  ?child dbo:spouse ?leleiohokuI .
  ?leleiohokuI dbo:spouse ?kapiolani .
  ?kapiolani dbo:father ?keopuolani .
  
  # Step 2: Find Kamehameha III's children
  ?child dbo:parent dbr:Kamehameha_III .

  # Step 3: Identify the parent of this child
  ?child dbo:parent ?parent .
}
```",9,12,10,3,3,3,3,71,0,0,2,0,0.0,0
976,57,test,"Give me the office of the person born as Mehmet Naci Bostancı and office of Mustafa Şentop and office of the mayor, that is a politician and an office holder and Turkish, of the reference, that is an organisation and a political party and Turkish, to Millet İttifakı.","SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/PoliticalParty>. ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. <http://dbpedia.org/resource/Mustafa_Şentop> <http://dbpedia.org/property/office> ?result . ?v0 <http://dbpedia.org/property/office> ?result . ?v1 <http://xmlns.com/foaf/0.1/name> ""Millet İttifakı""@en . ?v4 <http://dbpedia.org/ontology/nationality> <http://dbpedia.org/resource/Turkey>. ?v0 <http://dbpedia.org/property/birthName> ""Mehmet Naci Bostancı""@en . ?v1 <http://dbpedia.org/property/leader> ?v4 . ?v4 <http://dbpedia.org/property/office> ?result . ?v1 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Turkey>. }","```sparql
# Query for Mehmet Naci Bostancı's office
SELECT ?office WHERE {
  ?person foaf:name ""Mehmet Naci Bostancı""@en .
  ?person dbo:office ?office .
}

UNION

# Query for Mustafa Şentop's office
SELECT ?office WHERE {
  ?person foaf:name ""Mustafa Şentop""@en .
  ?person dbo:office ?office .
}

UNION

# Query for the mayor who is a politician and office holder in Turkey
SELECT ?mayorOffice WHERE {
  ?mayor dbo:positionTitle ""Mayor""@en ;
         dbo:nationality dbr:Turkey ;
         dbo:occupation dbr:Politician ;
         dbo:office ?mayorOffice .
}

UNION

# Query for Millet İttifakı's office
SELECT ?office WHERE {
  ?organization foaf:name ""Millet İttifakı""@tr ;
                rdf:type dbo:PoliticalParty, dbo:Organization ;
                dbo:nationality dbr:Turkey ;
                dbo:office ?office .
}
```",6,12,7,3,3,3,3,71,0,0,1,0,0.0,0
773,68,test,"Give me the spouse of the father of the parent of Bernard (son of Charles the Fat) and parent of the successor of the child, that is a royalty, of Louis the Pious and parent of the child, that is a royalty, of Louis the German.",SELECT ?result WHERE { ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v5 <http://dbpedia.org/property/father> ?v4 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v0 <http://dbpedia.org/ontology/successor> ?v7 . ?v3 <http://dbpedia.org/ontology/parent> ?result . ?result <http://dbpedia.org/ontology/child> ?v7 . ?v3 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Louis_the_German> . ?v4 <http://dbpedia.org/ontology/spouse> ?result . ?v5 <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Bernard_(son_of_Charles_the_Fat)> . <http://dbpedia.org/resource/Louis_the_Pious> <http://dbpedia.org/ontology/child> ?v0 . },"```sparql
SELECT ?spouse WHERE {
  # Charles the Fat and his spouse
  wd:Q12345 wdt:P26 ?spouse . 

  # Bernard (son of Charles the Fat)
  ?bernard wdt:P31/wdt:P279* wd:Q12345 .
  
  # Louis the Pious and his successor
  ?successor wdt:P22 wd:Q67890 ; 
             wdt:P39 wd:Q11111 . 

  # Parent of the successor (likely a spouse or parent)
  ?parent wdt:P40 ?successor .

  # Louis the German and his child who is royalty
  ?child wdt:P31/wdt:P279* wd:Q22222 ;
         wdt:P22 wd:Q33333 . 

  # Parent of this child (likely a spouse or parent)
  ?parent2 wdt:P40 ?child .

  # Find the common individual fitting both roles
  FILTER (?parent = ?parent2)

}
```

Note: The placeholders `wd:Q12345`, `wd:Q67890`, `wd:Q11111`, `wd:Q22222`, and `wd:Q33333` should be replaced with the actual DBpedia identifiers for Charles the Fat, Louis the Pious, his successor, Louis the German, and his royal child respectively. These identifiers can be found by querying DBpedia or a similar resource.",8,10,9,3,3,3,3,71,0,0,1,0,0.0,0
839,63,test,"Give me the band of the band, that is a musical artist, of Charlie Huhn and band of the person born, that is a musical artist, as the persona of Kevin Russell (musician) and band of the member of Böhse Onkelz.",SELECT ?result WHERE { ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. <http://dbpedia.org/resource/Böhse_Onkelz> <http://dbpedia.org/ontology/bandMember> ?v6 . ?v3 <http://dbpedia.org/property/birthName> ?v4 . ?v3 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . <http://dbpedia.org/resource/Charlie_Huhn> <http://dbpedia.org/ontology/associatedMusicalArtist> ?v2 . ?result <http://dbpedia.org/ontology/bandMember> ?v2 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. <http://dbpedia.org/resource/Kevin_Russell_(musician)> <http://xmlns.com/foaf/0.1/givenName> ?v4 . ?result <http://dbpedia.org/ontology/bandMember> ?v6 . },"```sparql
# Query for Charlie Huhn's band
SELECT ?band WHERE {
  ?person dbo:birthName ""Charlie Huhn""@en .
  ?person dbo:associatedBand ?band .
}

UNION

# Query for Kevin Russell's band using his birth name
SELECT ?band WHERE {
  ?person dbo:birthName ?birthName .
  ?person foaf:name ""Kevin Russell (musician)""@en .
  ?person dbo:associatedBand ?band .
}

UNION

# Query for a member of Böhse Onkelz and their band
SELECT ?memberBand WHERE {
  ?onkelzMember dbo:memberOf <http://dbpedia.org/resource/Böhse_Onkelz> .
  ?onkelzMember dbo:associatedBand ?memberBand .
}
```",7,9,8,3,3,3,3,71,0,0,1,0,0.0,0
83,19,test,"Give me the party of the governor of the commander, that is a politician, in Central African Republic Civil War and ruling party in the birthplace, that is a town and Brazilian and a soccer club, of Sandro (footballer, born October 1983).","SELECT ?result WHERE { <http://dbpedia.org/resource/Sandro_(footballer,_born_October_1983)> <http://dbpedia.org/ontology/birthPlace> ?v2 . ?v2 <http://dbpedia.org/property/leaderParty> ?result . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Town>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v4 <http://dbpedia.org/ontology/party> ?result . <http://dbpedia.org/resource/Central_African_Republic_Civil_War> <http://dbpedia.org/ontology/commander> ?v0 . ?v0 <http://dbpedia.org/property/governor> ?v4 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerClub>. ?v2 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Brazil>. }","```sparql
# Step 1: Identify Sandro (footballer, born October 1983)
SELECT ?sandro ?birthPlace WHERE {
  ?sandro dbo:nationality dbr:Brazil ;
          foaf:name ""Sandro"" ;
          dbo:birthDate ?birthDate .
  FILTER(YEAR(?birthDate) = 1983 && MONTH(?birthDate) = 10)
  OPTIONAL { ?sandro dbo:birthPlace ?birthPlace }
}

# Step 2: Find the ruling party in Sandro's birthplace
SELECT ?rulingParty WHERE {
  # Assuming we have identified the birth place URI as <http://dbpedia.org/resource/BirthPlace>
  ?town dbo:government ?government .
  ?government dbo:rulingParty ?rulingParty .
  FILTER(?town = <http://dbpedia.org/resource/BirthPlace>)
}

# Step 3: Identify the governor of the Central African Republic during the Civil War
SELECT ?leader WHERE {
  ?leader dbo:nationality dbr:Central_African_Republic ;
          dbo:office ""President"" ;
          dbo:termStart ?start .
  FILTER(YEAR(?start) >= 2012 && YEAR(?start) <= 2014)
}

# Step 4: Determine the political party of that leader
SELECT ?party WHERE {
  # Assuming we have identified the leader URI as <http://dbpedia.org/resource/Leader>
  ?leader dbo:politicalParty ?party .
  FILTER(?leader = <http://dbpedia.org/resource/Leader>)
}
```",5,9,6,3,2,3,2,20,0,0,1,0,0.0,0
917,60,test,"Give me the parent of the child, that is a royalty, of the mayor of Hawaiian Kingdom and child of the father of the child, that is a royalty, of Kamehameha III.",SELECT ?result WHERE { <http://dbpedia.org/resource/Hawaiian_Kingdom> <http://dbpedia.org/property/leader> ?v4 . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. <http://dbpedia.org/resource/Kamehameha_III> <http://dbpedia.org/ontology/child> ?v5 . ?result <http://dbpedia.org/ontology/child> ?v2 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v5 <http://dbpedia.org/property/father> ?v0 . ?result <http://dbpedia.org/property/father> ?v0 . ?v2 <http://dbpedia.org/property/father> ?v4 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?parentOfMayorRoyalChild WHERE {
  # Step 1: Identify Kamehameha III's royal child
  ?childKamehamehaIII a dbo:Person ;
                     dbo:father dbr:Kamehameha_III ;
                     dbo:title ?royaltyTitle .
  
  FILTER (CONTAINS(LCASE(?royaltyTitle), ""prince"") || CONTAINS(LCASE(?royaltyTitle), ""princess""))

  # Step 2: Mayor of the Hawaiian Kingdom during Kamehameha III's reign
  ?mayor a dbo:Person ;
         dbo:office dbr:Hawaiian_Kingdom_Mayor ;
         dbo:child ?mayorRoyalChild .

  # Step 3: Identify the mayor's royal child
  ?mayorRoyalChild a dbo:Person ;
                   dbo:title ?royaltyTitleMayor .
  
  FILTER (CONTAINS(LCASE(?royaltyTitleMayor), ""prince"") || CONTAINS(LCASE(?royaltyTitleMayor), ""princess""))

  # Step 4: Find the parent of the mayor's royal child
  ?mayorRoyalChild dbo:parent ?parentOfMayorRoyalChild .
}
```",6,8,7,3,2,3,3,71,0,0,2,0,0.0,0
443,27,test,"Give me the birthplace of the work of yes and birthplace of the person born, that is a musical artist and an artist, on 1949-11-20 and landmark at elevation of 28.","SELECT ?result WHERE { ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?v3 <http://dbpedia.org/ontology/birthPlace> ?result . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. ?result <http://dbpedia.org/ontology/elevation> ""28""^^<http://www.w3.org/2001/XMLSchema#integer> . ?v2 <http://dbpedia.org/property/author> ""yes""@en . ?v3 <http://dbpedia.org/ontology/birthDate> ""1949-11-20""^^<http://www.w3.org/2001/XMLSchema#date> . ?v2 <http://dbpedia.org/ontology/birthPlace> ?result . }","```sparql
# Step 1: Identify the musical artist born on 1949-11-20
SELECT ?artist ?birthPlace WHERE {
  ?artist dbo:birthDate ""1949-11-20""^^xsd:date .
  ?artist dbo:occupation dbr_Musician .
  ?artist dbo:occupation dbr_Artist .
  ?artist dbo:birthPlace ?birthPlace .
}

# Step 2: Identify a landmark at an elevation of 28 meters
SELECT ?landmark WHERE {
  ?landmark a dbo:Lighthouse ;
            dbo:elevation ""28""^^xsd:decimal .
}
```",5,7,6,2,3,2,3,28,0,0,1,0,0.0,0
459,25,test,"Give me the governor of the death place, that is a settlement, of Cliff Roquemore and person born as John Kevin Stitt and governor of the administration, that is a politician, of Brad Henry.","SELECT ?result WHERE { ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?result <http://dbpedia.org/property/birthName> ""John Kevin Stitt""@en . ?v4 <http://dbpedia.org/property/governor> ?result . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. ?v2 <http://dbpedia.org/property/governor> ?result . <http://dbpedia.org/resource/Cliff_Roquemore> <http://dbpedia.org/ontology/deathPlace> ?v2 . ?v4 <http://dbpedia.org/property/governor> <http://dbpedia.org/resource/Brad_Henry> . }","```sparql
# Query to find the death place of Cliff Roquemore which is a settlement
SELECT ?deathPlace WHERE {
  dbpedia:Cliff_Roquemore dbo:deathPlace ?deathPlace .
  ?deathPlace rdf:type dbo:Settlement .
}

# Assuming we have identified the death place, query for its governor
# Replace <DeathPlace> with the actual URI of the death place found above
SELECT ?governor WHERE {
  <DeathPlace> dbo:governmentHead ?governor .
  ?governor rdf:type dbo:Politician .
}

# Confirm John Kevin Stitt's birth name (this is straightforward)
SELECT ?birthName WHERE {
  dbpedia:John_Kevin_Stitt dbo:birthName ?birthName .
}

# Identify Brad Henry's administration and his role
SELECT ?administration WHERE {
  dbpedia:Brad_Henry dbo:officeHolder ?administration .
  ?administration rdf:type dbo:PoliticalAdministration .
}

# Assuming we have identified the administration, query for its governor
# Replace <Administration> with the actual URI of the administration found above
SELECT ?governor WHERE {
  <Administration> dbo:governmentHead ?governor .
  ?governor rdf:type dbo:Politician .
}
```",5,7,6,2,3,2,3,28,0,0,1,0,0.0,0
892,66,test,"Give me the entity in the administration, that is Italian and a region and a settlement and an administrative region, of the party, that is a political party and an organisation, of Andrea Cozzolino and entity in the profession of Henri Crolla and landmark at elevation of the award of Anna Ishii.",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/province> ?v0 . <http://dbpedia.org/resource/Andrea_Cozzolino> <http://dbpedia.org/ontology/party> ?v5 . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/PoliticalParty>. ?result <http://dbpedia.org/ontology/country> ?v3 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/AdministrativeRegion>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Region>. ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?v0 <http://dbpedia.org/property/leaderParty> ?v5 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. <http://dbpedia.org/resource/Henri_Crolla> <http://dbpedia.org/property/occupation> ?v3 . <http://dbpedia.org/resource/Anna_Ishii> <http://dbpedia.org/property/awards> ?v6 . ?v0 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Italy>. ?result <http://dbpedia.org/ontology/elevation> ?v6 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?region WHERE {
  # Step 1: Find Andrea Cozzolino's political party
  ?party a dbo:PoliticalParty ;
         dbo:member dbr:Andrea_Cozzolino .

  # Step 2: Find an Italian region that is both a settlement and an administrative region
  ?region a dbo:Region, dbo:Settlement ;
          dbo:country dbr:Italy ;
          dbo:administrativeRegion ?adminRegion .

  # Step 3: Determine Henri Crolla's profession
  ?profession a dbo:Profession ;
              dbo:person dbr:Henri_Crolla .

  # Step 4: Identify Anna Ishii's award and find a landmark at the same elevation
  ?award a dbo:Award ;
         dbo:recipient dbr:Anna_Ishii .
  
  ?landmark a dbo:LandscapeFeature, dbo:Landmark ;
            dbo:elevation ?elevation .

  FILTER (?elevation = ?awardElevation)

  # Combine information to find the region that fits all criteria
  BIND(?region AS ?entityInAdministration)
}
```",7,13,8,3,3,3,3,71,0,0,2,0,0.0,0
892,64,test,"Give me the entity in the administration, that is Italian and a region and a settlement and an administrative region, of the party, that is a political party and an organisation, of Andrea Cozzolino and entity in the profession of the true self of Enrico Crolla and landmark at elevation of 58.","SELECT ?result WHERE { <http://dbpedia.org/resource/Andrea_Cozzolino> <http://dbpedia.org/ontology/party> ?v5 . ?v4 <http://xmlns.com/foaf/0.1/givenName> ""Enrico Crolla""@en . ?v0 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Italy>. ?v0 <http://dbpedia.org/property/leaderParty> ?v5 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Region>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/AdministrativeRegion>. ?result <http://dbpedia.org/ontology/country> ?v2 . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/PoliticalParty>. ?v4 <http://dbpedia.org/property/occupation> ?v2 . ?result <http://dbpedia.org/ontology/province> ?v0 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. ?result <http://dbpedia.org/ontology/elevation> ""58""^^<http://www.w3.org/2001/XMLSchema#integer> . }","```sparql
# Step 1: Find Andrea Cozzolino's Party
SELECT ?party WHERE {
  ?person foaf:name ""Andrea Cozzolino"" .
  ?person dbo:memberOf ?membership .
  ?membership dbo:organization ?party .
  FILTER (rdf:type(?party) = dbpedia-owl:PoliticalParty)
}

# Step 2: Find Italian Regions that are Settlements and Administrative Regions
SELECT DISTINCT ?region WHERE {
  ?region rdf:type dbo:Region ;
          rdfs:label ?label ;
          dbo:country dbr:Italy .
  FILTER (CONTAINS(LCASE(?label), ""italy"") && CONTAINS(LCASE(?label), ""region""))
  
  # Ensure it is a settlement and administrative region
  ?region dbo:settlementType ?settlementType .
  ?region dbo:administrativeRegion ?adminRegion .
  FILTER (?settlementType = dbpedia-owl:Settlement && ?adminRegion = dbpedia-owl:AdministrativeRegion)
  
  # Link to the party found in Step 1
  ?party dbo:administration ?administration .
  ?administration dbo:member ?region .
}

# Step 3: Find Enrico Crolla's Profession
SELECT DISTINCT ?profession WHERE {
  ?person foaf:name ""Enrico Crolla"" .
  ?person dbo:occupation ?profession .
}

# Step 4: Find Landmark at Elevation 58
SELECT DISTINCT ?landmark WHERE {
  ?landmark rdf:type dbo:Lighthouse ;
            dbo:elevationAboveSeaLevel ?elevation .
  FILTER (?elevation = ""58"")
}
```",7,13,8,3,3,3,3,71,0,0,2,0,0.0,0
573,63,test,"Give me the person decedent at the administration, that is a region, of the real name of Charlie Baker (Australian footballer) and parent of the author, that is a politician and an office holder, of Exchequer Standards and person decedent at the residence, that is a settlement, of William J. Phelan.",SELECT ?result WHERE { ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Region>. ?result <http://dbpedia.org/ontology/deathPlace> ?v6 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. <http://dbpedia.org/resource/Charlie_Baker_(Australian_footballer)> <http://xmlns.com/foaf/0.1/name> ?v4 . <http://dbpedia.org/resource/Exchequer_Standards> <http://dbpedia.org/property/author> ?v2 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. <http://dbpedia.org/resource/William_J._Phelan> <http://dbpedia.org/property/residence> ?v6 . ?v6 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. ?v3 <http://dbpedia.org/property/governor> ?v4 . ?v2 <http://dbpedia.org/ontology/parent> ?result . ?result <http://dbpedia.org/ontology/deathPlace> ?v3 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?personDecedent WHERE {
  # Step 1: Find Charlie Baker's real name
  ?charlieBaker a dbo:AustralianFootballer ;
                foaf:name ""Charlie Baker"" .
  
  # Step 2: Identify the region where he is a decedent at the administration
  ?region dbo:administrativeRegionOf ?charlieBaker .

  # Step 3: Find the author who is both a politician and an office holder of Exchequer Standards
  ?author a dbo:Politician, dbo:OfficeHolder ;
          dbo:officeHeld dbr:Exchequer_Standards .
  
  # Step 4: Determine the parent of this author
  ?parent dbo:child ?author .

  # Step 5: Find William J. Phelan's residence settlement
  ?phelan a dbo:Person ;
          foaf:name ""William J. Phelan"" .
  ?settlement dbo:settlementOf ?phelan .

  # Step 6: Identify the decedent at that residence
  ?decedentAtSettlement dbo:residence ?settlement .

  # Final condition: The person who is a decedent in both regions
  FILTER (?personDecedent = ?region && ?personDecedent = ?decedentAtSettlement)
}
```",7,11,8,3,3,3,3,71,0,0,2,0,0.0,0
433,69,test,"Give me the associated musical artist of the person born, that is a musical artist and an artist, as the persona of Paul Chambers and professional in the profession of the writer of Slowhand at 70 – Live at the Royal Albert Hall and associated musical artist of the associated musical artist, that is an artist and a musical artist, of Scott LaFaro.",SELECT ?result WHERE { <http://dbpedia.org/resource/Scott_LaFaro> <http://dbpedia.org/ontology/associatedMusicalArtist> ?v7 . ?v7 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?result <http://dbpedia.org/property/occupation> ?v2 . <http://dbpedia.org/resource/Paul_Chambers> <http://xmlns.com/foaf/0.1/givenName> ?v4 . ?v3 <http://dbpedia.org/property/birthName> ?v4 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. ?v3 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v7 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?v7 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. ?v1 <http://dbpedia.org/property/occupation> ?v2 . <http://dbpedia.org/resource/Slowhand_at_70_–_Live_at_the_Royal_Albert_Hall> <http://dbpedia.org/property/writer> ?v1 . },"```sparql
SELECT ?artist WHERE {
  # Paul Chambers as a musician
  wd:Q12345 wdt:P106 wd:Q33999 . # Paul Chambers is a musician

  # Bill Evans as a musician and associated with Scott LaFaro
  wd:Q67890 wdt:P106 wd:Q33999 . # Bill Evans is a musician
  wd:Q67890 wdt:P463 wd:Q12345 .   # Bill Evans was associated with Paul Chambers
  wd:Q67890 wdt:P463 wd:Q98765 .   # Bill Evans was associated with Scott LaFaro

  # Eric Clapton as the writer of ""Slowhand at 70 – Live at the Royal Albert Hall""
  wd:Q13579 wdt:P50 wd:Q24680 .    # Eric Clapton wrote ""Slowhand at 70 – Live at the Royal Albert Hall""

  # Bill Evans is associated with Eric Clapton
  wd:Q67890 wdt:P463 wd:Q13579 .

  ?artist wdt:P106 wd:Q33999 .     # The artist is a musician
  ?artist wdt:P463 wd:Q67890 .     # The artist is associated with Bill Evans

  FILTER(?artist != wd:Q67890)      # Exclude Bill Evans himself from the result
}
```",8,12,9,3,3,3,3,71,0,0,1,0,0.0,0
933,66,test,"Give me the band of the band of Alan Warner (musician) and band of the band, that is a group and a band and an organisation, of the person born, that is a musical artist, on 1947-04-21 and reference to the birth name of Alan Warner (musician).","SELECT ?result WHERE { <http://dbpedia.org/resource/Alan_Warner_(musician)> <http://dbpedia.org/ontology/associatedMusicalArtist> ?v3 . ?v5 <http://dbpedia.org/ontology/associatedMusicalArtist> ?v0 . <http://dbpedia.org/resource/Alan_Warner_(musician)> <http://dbpedia.org/property/birthName> ?v6 . ?result <http://xmlns.com/foaf/0.1/name> ?v6 . ?v5 <http://dbpedia.org/ontology/birthDate> ""1947-04-21""^^<http://www.w3.org/2001/XMLSchema#date> . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Band>. ?v3 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Group>. ?v0 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT DISTINCT ?alanWarnerBand ?subGroup ?musicalArtist ?groupOrBand ?alanWarnerBirthName
WHERE {
  # Find Alan Warner (musician) and his band
  dbr:Alan_Warner_(musician) dbo:musicalArtistOf ?alanWarnerBand .
  
  # Find the sub-group or related band within Alan Warner's main band
  OPTIONAL { ?alanWarnerBand dbo:bandMember ?subGroup . }
  
  # Identify the musician born on 1947-04-21
  ?musicalArtist a dbo:MusicalArtist ;
                dbo:birthDate ""1947-04-21""^^xsd:date .
  
  # Find the group, band, or organization this musician was part of
  OPTIONAL { ?musicalArtist dbo:musicalArtistOf ?groupOrBand . }
  
  # Retrieve Alan Warner's birth name
  dbr:Alan_Warner_(musician) foaf:name ?alanWarnerBirthName .
}
```",7,11,8,3,3,3,3,71,0,0,1,0,0.0,0
507,64,test,Give me the spouse of the person born as the birth name of Anne V. Coates and director of Entertaining Mr Sloane (film) and professional in the profession of the person born on 1966-02-18.,"SELECT ?result WHERE { <http://dbpedia.org/resource/Anne_V._Coates> <http://dbpedia.org/property/birthName> ?v3 . ?v2 <http://dbpedia.org/property/birthName> ?v3 . ?result <http://dbpedia.org/ontology/spouse> ?v2 . ?v0 <http://dbpedia.org/ontology/birthDate> ""1966-02-18""^^<http://www.w3.org/2001/XMLSchema#date> . <http://dbpedia.org/resource/Entertaining_Mr_Sloane_(film)> <http://dbpedia.org/ontology/director> ?result . ?result <http://dbpedia.org/property/occupation> ?v1 . ?v0 <http://dbpedia.org/property/occupation> ?v1 . }","```sparql
# Step 1: Find Anne V. Coates' birth name and confirm she directed ""Entertaining Mr Sloane""
SELECT ?birthName WHERE {
  ?anne a dbo:FilmEditor ;
        foaf:name ""Anne V. Coates""@en .
  OPTIONAL { ?anne foaf:birthday ""1925-01-28""^^xsd:date . }
  OPTIONAL { ?anne foaf:givenname ?firstName ; foaf:surname ?lastName . }
  FILTER EXISTS {
    ?film a dbo:Film ;
          dbo:director ?anne ;
          rdfs:label ""Entertaining Mr Sloane""@en .
  }
  BIND(CONCAT(?firstName, "" "", ?lastName) AS ?birthName)
}

# Step 2: Find the profession of the person born on 1966-02-18
SELECT ?profession WHERE {
  ?person a dbo:Person ;
          foaf:birthday ""1966-02-18""^^xsd:date .
  OPTIONAL { ?person dbo:occupation ?profession . }
}

# Step 3: Find Anne V. Coates' spouse
SELECT ?spouseName WHERE {
  ?anne a dbo:FilmEditor ;
        foaf:name ""Anne V. Coates""@en .
  OPTIONAL { ?anne dbo:spouse ?spouse . }
  ?spouse foaf:name ?spouseName .
}
```",7,7,8,3,3,3,3,71,0,0,1,0,0.0,0
93,18,test,"Give me the death place of the governor of Bob Bartlett and capital of the headquarter, that is a region and a settlement, of the headquarter of Clam Cove Pictograph Site.",SELECT ?result WHERE { <http://dbpedia.org/resource/Clam_Cove_Pictograph_Site> <http://dbpedia.org/ontology/location> ?v1 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Region>. ?v1 <http://dbpedia.org/ontology/location> ?v2 . <http://dbpedia.org/resource/Bob_Bartlett> <http://dbpedia.org/property/governor> ?v3 . ?v3 <http://dbpedia.org/ontology/deathPlace> ?result . ?v2 <http://dbpedia.org/ontology/capital> ?result . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. },"```sparql
# Query to find the death place of Bob Bartlett
SELECT ?deathPlace WHERE {
  ?b obituary ""Bob Bartlett""@en .
  ?b dbo:placeOfBirth ?birthPlace .
  ?b dbo:deathPlace ?deathPlace .
}

# Query to find the region and capital of Clam Cove Pictograph Site's headquarter
SELECT ?region ?capital WHERE {
  ?site rdfs:label ""Clam Cove Pictograph Site""@en .
  ?site dbo:location ?location .
  ?location dbo:country ?country .
  ?region dbo:country ?country ;
           rdfs:label ?regionLabel .
  ?region dbo:capital ?capital .
}
```",5,7,6,3,2,3,2,20,0,0,1,0,0.0,0
443,28,test,"Give me the landmark at elevation of the award of William Shepherd and birthplace of the person born, that is a musical artist and an artist, on 1949-11-20 and birthplace of the work of yes.","SELECT ?result WHERE { ?v3 <http://dbpedia.org/ontology/birthPlace> ?result . ?v5 <http://dbpedia.org/ontology/birthPlace> ?result . ?v3 <http://dbpedia.org/ontology/birthDate> ""1949-11-20""^^<http://www.w3.org/2001/XMLSchema#date> . <http://dbpedia.org/resource/William_Shepherd> <http://dbpedia.org/property/awards> ?v1 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?v5 <http://dbpedia.org/property/author> ""yes""@en . ?result <http://dbpedia.org/ontology/elevation> ?v1 . }","```sparql
# Step 1: Identify William Shepherd's Award
SELECT ?award WHERE {
  ?person foaf:name ""William Shepherd""@en .
  ?person dbo:awardsReceived ?award .
}

# Step 2: Find the Elevation of the Landmark Associated with the Award
SELECT DISTINCT ?landmark ?elevation WHERE {
  ?award dbo:location ?location .
  ?location a dbo:Landmark ;
            dbo:elevationAboveSeaLevel ?elevation .
}

# Step 3: Determine Birthplace of the Person Born on 1949-11-20
SELECT ?birthPlace WHERE {
  ?person dbo:birthDate ""1949-11-20""^^xsd:date ;
          dbo:occupation [ a dbo:MusicalArtist ] ;
          dbo:occupation [ a dbo:Artist ] .
  ?person dbo:birthPlace ?birthPlace .
}

# Step 4: Identify the Work Associated with ""Yes""
SELECT ?work WHERE {
  ?band foaf:name ""Yes""@en ;
        dbo:work ?work .
}

# Step 5: Find the Birthplace of the Person Related to the Work of Yes
SELECT ?personBirthPlace WHERE {
  ?work dbo:creator ?person .
  ?person dbo:birthPlace ?personBirthPlace .
}

# Step 6: Combine Information
SELECT DISTINCT ?landmark WHERE {
  VALUES (?elevation) { <ELEVATION_FROM_STEP_2> } # Replace with actual elevation value from step 2
  VALUES (?birthPlace) { <BIRTH_PLACE_FROM_STEP_5> } # Replace with actual birthplace value from step 5
  ?landmark a dbo:Landmark ;
            dbo:elevationAboveSeaLevel ?elevation ;
            dbo:location ?birthPlace .
}
```",6,8,7,2,3,2,3,28,0,0,1,0,0.0,0
826,61,test,"Give me the successor of the child, that is a royalty, of the reference, that is a royalty, to Louis I and predecessor of the parent of the child of Louis IV, Grand Duke of Hesse.","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/successor> ?v3 . ?v0 <http://xmlns.com/foaf/0.1/name> ""Louis I""@en . ?v1 <http://dbpedia.org/ontology/parent> <http://dbpedia.org/resource/Louis_IV,_Grand_Duke_of_Hesse> . ?v1 <http://dbpedia.org/ontology/parent> ?v3 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v0 <http://dbpedia.org/ontology/child> ?v5 . ?v5 <http://dbpedia.org/ontology/successor> ?result . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?successor WHERE {
  # Step 1: Reference that is a royalty to Louis I of Hesse and by Rhine
  ?reference dbo:spouse|dbo:child dbr:Louis_I,_Grand_Duke_of_Hesse .
  
  # Step 2: Child of this reference that is a royalty
  ?child dbo:parent ?reference .
  ?child rdf:type dbo:Monarch .

  # Step 3: Successor of this child
  ?succession dbo:predecessor ?child ;
              dbo:successor ?successor .

  # Step 4: Parent of the child of Louis IV, Grand Duke of Hesse
  ?louisIVChild dbo:parent dbr:Louis_IV,_Grand_Duke_of_Hesse .
  ?parent dbo:child ?louisIVChild .

  # Step 5: Predecessor of this parent
  ?predecession dbo:successor ?parent ;
                dbo:predecessor ?predecessor .

  FILTER(?successor = ?predecessor)
}
```",6,8,7,3,2,3,3,71,0,0,1,0,0.0,0
373,9,test,"Give me the writer of the work, that is a single and a musical work and a work and a soundtrack, of  and professional in the profession of Beto Guedes.","SELECT ?result WHERE { ?result <http://dbpedia.org/property/occupation> ?v3 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Single>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalWork>. ?v1 <http://dbpedia.org/property/writer> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?v1 <http://dbpedia.org/property/writer> """"@en . <http://dbpedia.org/resource/Beto_Guedes> <http://dbpedia.org/property/occupation> ?v3 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Song>. }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?work WHERE {
  ?work a dbo:Single .
  ?work dbo:soundtrackOf ?soundtrack .
  ?soundtrack a dbo:SoundtrackAlbum .
  ?work dbo:artist dbr:Beto_Guedes .
}
```",4,8,5,2,2,2,2,9,0,0,78,0,0.0,0
826,67,test,"Give me the predecessor of the parent of the child of Louis IV, Grand Duke of Hesse and successor of the child, that is a royalty, of the reference, that is a royalty, to Louis I and spouse of Anna Magdalena Appel.","SELECT ?result WHERE { ?v6 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v0 <http://dbpedia.org/ontology/child> ?v6 . ?v1 <http://dbpedia.org/ontology/parent> ?v3 . ?result <http://dbpedia.org/ontology/successor> ?v3 . ?v1 <http://dbpedia.org/ontology/parent> <http://dbpedia.org/resource/Louis_IV,_Grand_Duke_of_Hesse> . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v0 <http://xmlns.com/foaf/0.1/name> ""Louis I""@en . ?v6 <http://dbpedia.org/ontology/successor> ?result . <http://dbpedia.org/resource/Anna_Magdalena_Appel> <http://dbpedia.org/ontology/spouse> ?result . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?predecessor WHERE {
  # Louis IV, Grand Duke of Hesse and his child
  dbr:Louis_IV,_Grand_Duke_of_Hesse dbo:child ?child .
  
  # Parent of the child (Louis IV)
  ?parent dbo:child ?child .
  
  # Predecessor of the parent (Louis III)
  ?predecessor dbo:child ?parent .
  FILTER(?predecessor = dbr:Louis_III,_Grand_Duke_of_Hesse)

  # Successor of the child
  ?successor dbo:childOf ?child .

  # Reference to Louis I and spouse Anna Magdalena Appel (Princess Louise)
  dbr:Louis_I,_Grand_Duke_of_Hesse dbo:spouse dbr:Princess_Louise_of_Prussia .
  
  # Find a royalty related to both
  ?related_royalty dbo:childOf ?successor ;
                  dbo:parent dbr:Louis_I,_Grand_Duke_of_Hesse .

  # Ensure the predecessor is a royalty
  ?predecessor a dbo:Monarch .
}
```",7,9,8,3,3,3,3,71,0,0,1,0,0.0,0
933,67,test,"Give me the reference to the birth name of the professional in Musician and band of the band, that is a group and a band and an organisation, of the person born, that is a musical artist, on 1947-04-21 and band of Mike Elliott (saxophonist).","SELECT ?result WHERE { ?v4 <http://dbpedia.org/ontology/birthDate> ""1947-04-21""^^<http://www.w3.org/2001/XMLSchema#date> . ?result <http://xmlns.com/foaf/0.1/name> ?v5 . <http://dbpedia.org/resource/Mike_Elliott_(saxophonist)> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Group>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Band>. ?v0 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?v1 <http://dbpedia.org/property/occupation> <http://dbpedia.org/resource/Musician> . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?v4 <http://dbpedia.org/ontology/associatedMusicalArtist> ?v0 . ?v1 <http://dbpedia.org/property/birthName> ?v5 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT ?birthName WHERE {
  ?person dbo:birthday ""1947-04-21""^^xsd:date ;
          dbo:musicalArtist true ;
          dbo:bandMember dbr:The_Rumour .
  OPTIONAL { ?person foaf:name ?name . }
  FILTER(CONTAINS(LCASE(?name), ""mike elliot"")) .
  ?person foaf:name ?birthName .
}
```",7,11,8,3,3,3,3,71,0,0,1,0,0.0,0
124,64,test,"Give me the military force of Battle of Tamai and military force of the force, that is a societal event and a military conflict, of the person born on 1850-06-24 and commander in the war, that is a societal event and a military conflict, of the reference, that is Australian and an organisation and a military unit, to 'A' Battery, Royal Australian Artillery.","SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/commander> ?v0 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryUnit>. ?v0 <http://dbpedia.org/ontology/birthDate> ""1850-06-24""^^<http://www.w3.org/2001/XMLSchema#date> . ?v3 <http://dbpedia.org/ontology/battle> ?v2 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?result <http://dbpedia.org/ontology/battle> ?v1 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v3 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Australia>. ?result <http://dbpedia.org/ontology/battle> <http://dbpedia.org/resource/Battle_of_Tamai> . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?v3 <http://xmlns.com/foaf/0.1/name> ""'A' Battery, Royal Australian Artillery""@en . ?v2 <http://dbpedia.org/ontology/commander> ?result . }","```sparql
# Query 1: Military forces in the Battle of Tamai
SELECT ?force WHERE {
  ?battle dbpedia-owl:wikiPageRedirects dbpedia:Battle_of_Tamai .
  ?battle dbpedia-owl:participatingMilitaryUnit ?unit .
  ?unit rdfs:label ?force .
  FILTER (lang(?force) = 'en')
}

# Query 2: Societal event and military conflict commanded by Horatio Herbert Kitchener
SELECT DISTINCT ?event WHERE {
  ?person dbo:birthDate ""1850-06-24""^^xsd:date ;
          rdfs:label ""Horatio Herbert Kitchener""@en .
  ?person dbo:commanded ?conflict .
  ?conflict rdf:type dbo:MilitaryConflict ;
            rdfs:label ?event .
  FILTER (lang(?event) = 'en')
}

# Query 3: War involving 'A' Battery, Royal Australian Artillery
SELECT DISTINCT ?war WHERE {
  ?battery rdfs:label ""A Battery, Royal Australian Artillery""@en ;
           dbo:participatedIn ?conflict .
  ?conflict rdf:type dbo:MilitaryConflict ;
            rdfs:label ?war .
  FILTER (lang(?war) = 'en')
}
```",7,14,8,3,3,3,3,71,0,0,1,0,0.0,0
773,64,test,"Give me the spouse of the father of the parent of Bernard (son of Charles the Fat) and parent of Carloman of Bavaria and parent of the child, that is a royalty, of the father, that is an office holder and a royalty, of Carloman of Bavaria.",SELECT ?result WHERE { ?v3 <http://dbpedia.org/property/father> ?v2 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?result <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Carloman_of_Bavaria> . ?v2 <http://dbpedia.org/ontology/spouse> ?result . ?v1 <http://dbpedia.org/ontology/parent> ?result . ?v3 <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Bernard_(son_of_Charles_the_Fat)> . ?v1 <http://dbpedia.org/property/father> ?v0 . <http://dbpedia.org/resource/Carloman_of_Bavaria> <http://dbpedia.org/property/father> ?v0 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. },"```sparql
SELECT ?spouse WHERE {
  ?charles rdf:type dbo:Monarch ;
           foaf:name ""Charles the Fat""@en .
  
  ?bernard dbo:father ?charles ;
           foaf:name ""Bernard (son of Charles the Fat)""@en .

  ?carloman dbo:father ?charles ;
            foaf:name ""Carloman of Bavaria""@en .

  ?charles dbo:spouse ?spouse .
}
```",7,10,8,3,3,3,3,71,0,0,1,0,0.0,0
47,60,test,"Give me the office of the awardee of the entity, that is an award, in India and office of the administration of the commander, that is a politician, in Operation Green Hunt.",SELECT ?result WHERE { <http://dbpedia.org/resource/Operation_Green_Hunt> <http://dbpedia.org/ontology/commander> ?v3 . ?v0 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/India> . ?v1 <http://dbpedia.org/property/office> ?result . ?v2 <http://dbpedia.org/property/office> ?result . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v1 <http://dbpedia.org/property/awards> ?v0 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Award>. ?v2 <http://dbpedia.org/property/governor> ?v3 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?award ?awardeeOffice ?politician ?commanderOffice
WHERE {
  # Part 1: Find an award in India and the office of its awardee
  ?award dbo:country dbr:India .
  ?award dbo:recipient ?person .
  OPTIONAL { ?person dbo:office ?awardeeOffice . }

  # Part 2: Find a politician involved in Operation Green Hunt and their office
  ?politician dbo:wikiPageWikiLink dbr:Operation_Green_Hunt ;
              rdf:type dbo:Politician .
  OPTIONAL { ?politician dbo:office ?commanderOffice . }
}
```",6,8,7,3,2,3,3,71,0,0,33,0,0.0,0
839,60,test,"Give me the band of the band, that is a musical artist, of the professional in Musician and band of the person born, that is a musical artist, as the persona of Kevin Russell (musician).","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/bandMember> ?v1 . ?v0 <http://dbpedia.org/property/occupation> ""Musician""@en . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?v0 <http://dbpedia.org/ontology/associatedMusicalArtist> ?v1 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?v2 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . <http://dbpedia.org/resource/Kevin_Russell_(musician)> <http://xmlns.com/foaf/0.1/givenName> ?v3 . ?v2 <http://dbpedia.org/property/birthName> ?v3 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?bandOfTheBand WHERE {
  # Find Kevin Russell's DBpedia entry
  ?kevinRussell a dbo:MusicalArtist ;
                foaf:name ""Kevin Russell"" .

  # Identify his professional band, The Gourds
  ?theGours a dbo:Band ;
            dbo:musicalArtist ?kevinRussell .

  # Find the band associated with The Gourds
  ?bandOfTheBand dbo:associatedBand ?theGours .
}
```",6,8,7,3,2,3,3,71,0,0,1,0,0.0,0
216,65,test,"Give me the player in the coach of Croatia national under-21 football team and team of the person born, that is a sports manager and a soccer manager and a soccer player, on 1983-12-20 and player in the coach, that is a soccer player and a sports manager and a soccer manager, of the player, that is an organisation and a sports club and a soccer club, in Džemal Berberović.","SELECT ?result WHERE { ?v6 <http://dbpedia.org/ontology/team> ?result . ?v0 <http://dbpedia.org/ontology/coach> ?v6 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerClub>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerPlayer>. <http://dbpedia.org/resource/Croatia_national_under-21_football_team> <http://dbpedia.org/ontology/coach> ?v4 . ?result <http://dbpedia.org/ontology/coach> ?v3 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsManager>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerManager>. ?v6 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsManager>. ?v3 <http://dbpedia.org/ontology/birthDate> ""1983-12-20""^^<http://www.w3.org/2001/XMLSchema#date> . ?v4 <http://dbpedia.org/ontology/team> ?result . ?v6 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerManager>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsClub>. ?v6 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerPlayer>. <http://dbpedia.org/resource/Džemal_Berberović> <http://dbpedia.org/ontology/team> ?v0 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?coach ?playerInCoach ?club WHERE {
  # Find Džemal Berberović's birthdate and club
  dbr:Džemal_Berberović dbo:birthDate ?birthDate .
  FILTER (YEAR(?birthDate) = 1983 && MONTH(?birthDate) = 12 && DAY(?birthDate) = 20)
  
  # Find Džemal Berberović's club
  dbr:Džemal_Berberović dbo:member ?club .
  ?club a dbo:SoccerClub .

  # Find the coach of Croatia national under-21 football team
  dbr:Croatia_national_under-21_football_team dbo:coach ?coach .

  # Find a person born on 1983-12-20 who is a sports manager, soccer manager, and player
  ?person dbo:birthDate ?birthDate .
  FILTER (YEAR(?birthDate) = 1983 && MONTH(?birthDate) = 12 && DAY(?birthDate) = 20)
  
  ?person dbo:occupation ?occupation1 .
  ?person dbo:occupation ?occupation2 .
  ?person dbo:occupation ?occupation3 .
  VALUES (?occupation1 ?occupation2 ?occupation3) {
    (dbo:SportsManager dbo:SoccerManager dbo:SoccerPlayer)
  }

  # Find the player coached by this person
  ?coach dbo:playerInCoach ?playerInCoach .

  # Ensure the player is associated with Džemal Berberović's club
  ?playerInCoach dbo:member ?club .
}
```",7,16,8,3,3,3,3,71,0,0,1,0,0.0,0
417,59,test,"Give me the spouse of the parent, that is a royalty, of the child of Knud, Hereditary Prince of Denmark and child of the father of the leader, that is a royalty, of Colony of Greenland.","SELECT ?result WHERE { ?v2 <http://dbpedia.org/ontology/child> ?v3 . ?v0 <http://dbpedia.org/property/father> ?v5 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v3 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Knud,_Hereditary_Prince_of_Denmark> . <http://dbpedia.org/resource/Colony_of_Greenland> <http://dbpedia.org/property/leader> ?v0 . ?result <http://dbpedia.org/ontology/spouse> ?v2 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?result <http://dbpedia.org/property/father> ?v5 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX schema: <http://schema.org/>

SELECT DISTINCT ?spouse1 ?spouse2 WHERE {
  # Step 1: Identify Knud, Hereditary Prince of Denmark and his children
  ?knud a dbo:Person ;
        foaf:name ""Knud, Hereditary Prince of Denmark""@en .
  
  ?child dbo:parent ?knud ;
         a dbo:Person .

  # Step 2: Select one child of Knud
  ?selectedChild rdf:type dbo:Person ;
                dbo:parent ?knud .

  # Step 3 & 4: Determine the parent (Knud) and check royalty status
  OPTIONAL { ?knud dbo:spouse ?spouseOfKnud . }
  
  # Step 5: Find the spouse of Knud if he is royalty
  ?spouse1 ?p ?o .
  FILTER(?p = dbo:spouse && ?o != ?knud)

  # Step 6: Identify the leader of Colony of Greenland
  ?leader a dbo:Person ;
          schema:birthPlace ?greenland .

  # Step 7 & 8: Determine the father of this leader and find one child
  ?fatherOfLeader dbo:child ?leader .
  
  ?childOfLeader dbo:parent ?leader .

  # Step 9 & 10: Check if the parent (leader) is royalty
  OPTIONAL { ?leader dbo:spouse ?spouseOfLeader . }
  
  # Step 11: Find the spouse of this royal leader
  ?spouse2 ?p ?o .
  FILTER(?p = dbo:spouse && ?o != ?leader)

}
```",6,8,7,3,2,3,3,71,0,0,1,0,0.0,0
933,58,test,"Give me the band of the band, that is a group and a band and an organisation, of the person born, that is a musical artist, on 1947-04-21 and reference to the birth name of Alan Warner (musician) and band of Mike Elliott (saxophonist).","SELECT ?result WHERE { ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?v4 <http://dbpedia.org/ontology/associatedMusicalArtist> ?v0 . ?v0 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. <http://dbpedia.org/resource/Mike_Elliott_(saxophonist)> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v4 <http://dbpedia.org/ontology/birthDate> ""1947-04-21""^^<http://www.w3.org/2001/XMLSchema#date> . <http://dbpedia.org/resource/Alan_Warner_(musician)> <http://dbpedia.org/property/birthName> ?v5 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Band>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Group>. ?result <http://xmlns.com/foaf/0.1/name> ?v5 . }","```sparql
# Query 1: Find the musical artist born on April 21, 1947
SELECT ?artist WHERE {
  ?artist dbo:birthday ""1947-04-21""^^xsd:date .
  ?artist rdf:type dbo:MusicalArtist .
}

# Query 2: Retrieve Alan Warner's birth name
SELECT ?birthName WHERE {
  ?person foaf:name ""Alan Warner (musician)"" .
  ?person dbo:birthName ?birthName .
}

# Query 3: Identify the band associated with Mike Elliott (saxophonist)
SELECT ?band WHERE {
  ?person foaf:name ""Mike Elliott (saxophonist)"" .
  ?person dbo:memberOfBand ?band .
}

# Query 4: Find a band that is both a group, a band, and an organization
SELECT DISTINCT ?band WHERE {
  ?band rdf:type dbo:MusicalGroup ;
        rdf:type dbo:Band ;
        rdf:type dbo:Organization .

  # Join with results from previous queries
  OPTIONAL { ?artist dbo:memberOfBand ?band . }
  OPTIONAL { ?person dbo:memberOfBand ?band . }

  FILTER EXISTS {
    ?artist dbo:birthday ""1947-04-21""^^xsd:date .
    ?artist rdf:type dbo:MusicalArtist .
  }
}
```",6,10,7,3,3,3,3,71,0,0,1,0,0.0,0
955,20,test,"Give me the band of the writer of the work, that is a work and an album and a musical work, of Matt Freeman and band of the band member, that is a musical artist and an artist, of the reference, that is a band and a group and an organisation, to Street Dogs.","SELECT ?result WHERE { ?v4 <http://xmlns.com/foaf/0.1/name> ""Street Dogs""@en . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalWork>. ?result <http://dbpedia.org/ontology/bandMember> ?v2 . ?v1 <http://dbpedia.org/property/writer> <http://dbpedia.org/resource/Matt_Freeman> . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. ?v1 <http://dbpedia.org/property/writer> ?v2 . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Band>. ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?result <http://dbpedia.org/ontology/bandMember> ?v5 . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Group>. ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?v5 <http://dbpedia.org/ontology/associatedMusicalArtist> ?v4 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Album>. }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?bandMemberArtist WHERE {
  # Step 1: Identify Matt Freeman's band (Rancid)
  dbr:Matt_Freeman dbo:memberOf dbr:Rancid .

  # Step 2: Find works by Matt Freeman that are both albums and musical works
  ?work dbo:composer dbr:Matt_Freeman .
  ?work a dbo:Album ;
        a dbo:MusicalWork .

  # Step 3: Confirm Rancid as the band associated with these works
  ?work dbo:byArtist dbr:Rancid .

  # Step 4: Find any reference or connection between Rancid and Street Dogs
  OPTIONAL { 
    ?reference dbo:band dbr:Street_Dogs .
    ?reference dbo:reference dbr:Rancid .
  }

  # Step 5: Identify a member of Rancid who is also an artist
  ?bandMemberArtist dbo:memberOf dbr:Rancid ;
                   a dbo:MusicalArtist, dbo:Artist .

}
```",6,14,7,3,2,3,2,20,0,0,1,0,0.0,0
892,69,test,"Give me the entity in the administration, that is Italian and a region and a settlement and an administrative region, of the party, that is a political party and an organisation, of Andrea Cozzolino and entity in the profession of the true self of Enrico Crolla and landmark at elevation of the award of Anna Ishii.","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/province> ?v0 . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?v0 <http://dbpedia.org/property/leaderParty> ?v5 . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/PoliticalParty>. ?result <http://dbpedia.org/ontology/elevation> ?v6 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Region>. ?v4 <http://dbpedia.org/property/occupation> ?v2 . <http://dbpedia.org/resource/Anna_Ishii> <http://dbpedia.org/property/awards> ?v6 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/AdministrativeRegion>. ?v0 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Italy>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. <http://dbpedia.org/resource/Andrea_Cozzolino> <http://dbpedia.org/ontology/party> ?v5 . ?v4 <http://xmlns.com/foaf/0.1/givenName> ""Enrico Crolla""@en . ?result <http://dbpedia.org/ontology/country> ?v2 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?entity WHERE {
  # Step 1: Find Andrea Cozzolino's political party
  ?cozzolino dbo:party ?party .
  FILTER (str(?cozzolino) = ""Andrea_Cozzolino"") .

  # Step 2: Identify an Italian region that is also a settlement and administrative region
  ?region a dbo:Region ;
          dbo:country dbr:Italy ;
          a dbo:Settlement, dbo:AdministrativeRegion .

  # Step 3: Determine Enrico Crolla's profession
  ?crolla dbo:profession ?profession .
  FILTER (str(?crolla) = ""Enrico_Crolla"") .

  # Step 4: Locate Anna Ishii's award landmark at a specific elevation
  ?award dbo:recipient dbr:Anna_Ishii ;
         dbo:location ?landmark .
  ?landmark dbo:elevation ?elevation .

  # Step 5: Combine information to find the final entity
  ?entity dbo:administration ?region ;
          dbo:party ?party ;
          dbo:profession ?profession ;
          dbo:awardLandmark ?landmark .
}
```",8,14,9,3,3,3,3,71,0,0,2,0,0.0,0
582,66,test,"Give me the reference to the residence of Hirotaka Sugawara and player in the father, that is an athlete and a soccer manager and a sports manager, of Masami Nagasawa and figure known as the nickname of the team, that is an organisation, of Hajime Moriyasu.",SELECT ?result WHERE { ?v1 <http://dbpedia.org/property/nickname> ?v2 . <http://dbpedia.org/resource/Hirotaka_Sugawara> <http://dbpedia.org/property/residence> ?v3 . ?v6 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Athlete>. ?result <http://xmlns.com/foaf/0.1/name> ?v3 . ?v6 <http://dbpedia.org/ontology/team> ?result . <http://dbpedia.org/resource/Masami_Nagasawa> <http://dbpedia.org/property/father> ?v6 . ?v6 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerManager>. ?result <http://dbpedia.org/property/nickname> ?v2 . ?v1 <http://dbpedia.org/ontology/coach> <http://dbpedia.org/resource/Hajime_Moriyasu> . ?v6 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsManager>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. },"```sparql
# Query for Hirotaka Sugawara's residence
SELECT ?residence WHERE {
  dbpedia:Hirotaka_Sugawara dbo:birthPlace ?residence .
}

# Query for Masami Nagasawa's father and his professions
SELECT ?father ?profession WHERE {
  dbpedia:Masami_Nagasawa dbo:father ?father .
  ?father rdf:type ?type .
  FILTER (?type IN (dbpedia:Athlete, dbpedia:Soccer_Manager, dbpedia:Sports_Manager))
}

# Query for Hajime Moriyasu's team nickname
SELECT ?team ?nickname WHERE {
  dbpedia:Hajime_Moriyasu dbo:currentTeam ?team .
  ?team rdfs:label ?nickname .
}
```",7,11,8,3,3,3,3,71,0,0,1,0,0.0,0
433,56,test,"Give me the associated musical artist of the person born, that is a musical artist and an artist, as Paul Laurence Dunbar Chambers Jr. and professional in the profession of the writer of Slowhand at 70 – Live at the Royal Albert Hall and associated musical artist of Bill Evans.","SELECT ?result WHERE { ?v2 <http://dbpedia.org/property/birthName> ""Paul Laurence Dunbar Chambers Jr.""@en . ?v0 <http://dbpedia.org/property/occupation> ?v1 . ?v2 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. <http://dbpedia.org/resource/Slowhand_at_70_–_Live_at_the_Royal_Albert_Hall> <http://dbpedia.org/property/writer> ?v0 . ?result <http://dbpedia.org/property/occupation> ?v1 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. <http://dbpedia.org/resource/Bill_Evans> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?artist WHERE {
  # Find the artist associated with Paul Chambers
  ?paulChambers a dbo:MusicalArtist ;
                dbo:associatedBandMember ?band1 .
  
  # Find the artist associated with Bill Evans
  ?billEvans a dbo:MusicalArtist ;
             dbo:associatedBandMember ?band2 .

  # Find Eric Clapton as the writer of ""Slowhand at 70 – Live at the Royal Albert Hall""
  dbr:Eric_Clapton dbo:profession dbo:SingerSongwriter ;
                   dbo:album dbr:Slowhand_at_70_%E2%80%93_Live_at_the_Royal_Albert_Hall .

  # Find an artist who is associated with both Paul Chambers and Bill Evans
  ?artist a dbo:MusicalArtist ;
          dbo:associatedBandMember ?band1, ?band2 .

  # Ensure the artist has professional ties to Eric Clapton
  ?artist dbo:profession ?profession .
  
  FILTER(?artist != dbr:Paul_Chambers_Jr. && ?artist != dbr:Bill_Evans)
}
```",6,8,7,3,3,3,3,71,0,0,1,0,0.0,0
582,62,test,"Give me the figure known as --10-19 and reference to the residence of the reference, that is a scientist, to Hirotaka Sugawara and player in the father, that is an athlete and a soccer manager and a sports manager, of the child of Kazuaki Nagasawa.","SELECT ?result WHERE { ?v4 <http://xmlns.com/foaf/0.1/name> ""Hirotaka Sugawara""@en . ?v6 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Athlete>. ?result <http://xmlns.com/foaf/0.1/name> ?v3 . ?v0 <http://dbpedia.org/property/father> ?v6 . ?result <http://dbpedia.org/property/nickname> ""--10-19""^^<http://www.w3.org/2001/XMLSchema#gMonthDay> . ?v6 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerManager>. ?v4 <http://dbpedia.org/property/residence> ?v3 . ?v6 <http://dbpedia.org/ontology/team> ?result . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Scientist>. ?v0 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Kazuaki_Nagasawa> . ?v6 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsManager>. }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT ?father ?residence WHERE {
  ?hirotaka foaf:name ""Hirotaka Sugawara"" .
  ?hirotaka dbo:parent ?father .
  
  ?father dbo:occupation ?occupation .
  FILTER (CONTAINS(LCASE(?occupation), ""athlete"") || CONTAINS(LCASE(?occupation), ""soccer manager"") || CONTAINS(LCASE(?occupation), ""sports manager""))
  
  ?kazuaki foaf:name ""Kazuaki Nagasawa"" .
  ?father dbo:child ?kazuaki .

  OPTIONAL {
    ?father dbo:residence ?residence .
    FILTER (CONTAINS(STR(?residence), ""--10-19""))
  }
}
```",7,11,8,3,3,3,3,71,0,0,1,0,0.0,0
917,65,test,"Give me the child of the father of Kamehameha IV and parent of the child, that is a royalty, of Kamehameha IV and child of the father of the spouse, that is a royalty, of Leleiohoku I.",SELECT ?result WHERE { ?v2 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Kamehameha_IV> . ?v1 <http://dbpedia.org/property/father> ?v5 . ?v1 <http://dbpedia.org/ontology/spouse> <http://dbpedia.org/resource/Leleiohoku_I> . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?result <http://dbpedia.org/property/father> ?v0 . ?result <http://dbpedia.org/ontology/child> ?v2 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. <http://dbpedia.org/resource/Kamehameha_IV> <http://dbpedia.org/property/father> ?v0 . ?result <http://dbpedia.org/ontology/parent> ?v5 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?person WHERE {
  # Kamehameha IV's father
  dbr:Kamehameha_IV dbo:father dbr:Alexander_Liholiho .

  # Children of Kamehameha IV's father (royalty)
  dbr:Alexander_Liholiho dbo:child ?child1 .
  ?child1 a dbo:Monarch .

  # Leleiohoku I's spouse
  dbr:Liliʻuokalani dbo:spouse dbr:John_W._Kapiolani .

  # Father of Leleiohoku I's spouse
  dbr:John_W._Kapiolani dbo:father ?father2 .

  # Children of Leleiohoku I's spouse's father (royalty)
  ?father2 dbo:child ?child2 .
  ?child2 a dbo:Monarch .

  # Find the common person who is both ?child1 and ?child2
  FILTER (?child1 = ?child2)
}
```",7,9,8,3,3,3,3,71,0,0,1,0,0.0,0
47,69,test,"Give me the office of the awardee of the entity, that is an award, in India and office of the awardee of Banga Bhushan and office of the administration of the commander, that is a politician, in Operation Green Hunt.",SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/India> . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Award>. ?v2 <http://dbpedia.org/property/office> ?result . ?v7 <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/Banga_Bhushan> . ?v7 <http://dbpedia.org/property/office> ?result . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v2 <http://dbpedia.org/property/awards> ?v1 . <http://dbpedia.org/resource/Operation_Green_Hunt> <http://dbpedia.org/ontology/commander> ?v4 . ?v3 <http://dbpedia.org/property/governor> ?v4 . ?v3 <http://dbpedia.org/property/office> ?result . },"```sparql
# Query for office of the awardee of an award in India
SELECT ?award ?awardee ?office WHERE {
  ?award a dbo:Award ;
        dbo:country dbr:India .
  ?recipient dbo:recipientOf ?award ;
             foaf:name ?awardee .
  OPTIONAL { ?recipient dbo:occupation ?office . }
}

UNION

# Query for office of the awardee of Banga Bhushan
SELECT ?awardee ?office WHERE {
  ?bangaBhushan a dbo:Award ;
                rdfs:label ""Banga Bhushan""@en .
  ?recipient dbo:recipientOf ?bangaBhushan ;
             foaf:name ?awardee .
  OPTIONAL { ?recipient dbo:occupation ?office . }
}

UNION

# Query for office of the administration of the commander in Operation Green Hunt
SELECT ?politician ?office WHERE {
  ?operation a dbo:MilitaryOperation ;
             rdfs:label ""Operation Green Hunt""@en .
  ?person dbo:roleInMilitaryOperation ?operation ;
          foaf:name ?politician ;
          rdf:type dbo:Politician .
  OPTIONAL { ?person dbo:occupation ?office . }
}
```",8,10,9,3,3,3,3,71,0,0,1,0,0.0,0
527,20,test,"Give me the actor of the movie, that is a work and English and a television show, with the professional in Actor and author of the work, that is a work and a book, of the host of Hyperland.","SELECT ?result WHERE { ?v5 <http://dbpedia.org/property/author> ?result . ?v5 <http://dbpedia.org/property/author> ?v4 . ?v1 <http://dbpedia.org/property/occupation> ""Actor""@en . ?v2 <http://dbpedia.org/property/starring> ?result . ?v2 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/United_Kingdom>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/TelevisionShow>. ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Book>. ?v2 <http://dbpedia.org/property/starring> ?v1 . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. <http://dbpedia.org/resource/Hyperland> <http://dbpedia.org/ontology/presenter> ?v4 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. }","```sparql
# Step 1: Find the host of ""Hyperland""
SELECT ?host WHERE {
  ?hyperland dcterms:title ""Hyperland""@en .
  ?hyperland dbo:host ?host .
}

# Step 2: Find books authored by this host
SELECT DISTINCT ?book WHERE {
  VALUES ?author { <HOST_URI> } # Replace <HOST_URI> with the actual URI found in step 1
  ?book dbo:author ?author ;
        rdf:type dbo:Book .
  
  # Step 3: Check if these books are also television shows and movies
  OPTIONAL { 
    ?work rdfs:label ?title . FILTER (CONTAINS(LCASE(?title), ""hyperland"")) .
    ?work rdf:type dbo:TelevisionShow, dbo:Film .
  }
}

# Step 4: Find the actor of this work
SELECT DISTINCT ?actor WHERE {
  VALUES ?work { <WORK_URI> } # Replace <WORK_URI> with the actual URI found in step 3
  ?work dbo:starring ?actor .
}
```",6,11,7,3,2,3,2,20,0,0,1,0,0.0,0
5,19,test,"Give me the birthplace of the person born, that is a politician, as  and entity in the award of the associated musical artist, that is a band, of Rubén Colón Tarrats.","SELECT ?result WHERE { ?v4 <http://dbpedia.org/property/awards> ?v0 . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Band>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v3 <http://dbpedia.org/property/birthName> """"@en . ?result <http://dbpedia.org/ontology/country> ?v0 . ?v3 <http://dbpedia.org/ontology/birthPlace> ?result . <http://dbpedia.org/resource/Rubén_Colón_Tarrats> <http://dbpedia.org/ontology/associatedMusicalArtist> ?v4 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?birthPlace WHERE {
  ?person a dbo:Person ;
          foaf:name ""Rubén Colón Tarrats""@en ;
          dbo:occupation dbo:Politician .
  
  OPTIONAL { 
    ?award dbo:recipient ?person ;
           dbo:givenBy ?band .
    
    ?band a dbo:Band .
  }
  
  ?person dbp:birthPlace ?birthPlace .
}
```",5,7,6,3,2,3,2,20,0,0,2,0,0.0,0
865,66,test,"Give me the native of the residence, that is a country, of Ram Jaipal Singh Yadav and father of the child, that is a politician, of Abu Ahmad Abdul Hafiz and father of the child of the father of Abul Maal Abdul Muhith.",SELECT ?result WHERE { ?v5 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Abu_Ahmad_Abdul_Hafiz> . ?v3 <http://dbpedia.org/property/father> ?v6 . ?v3 <http://dbpedia.org/property/father> ?result . <http://dbpedia.org/resource/Ram_Jaipal_Singh_Yadav> <http://dbpedia.org/property/residence> ?v0 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. ?result <http://dbpedia.org/ontology/birthPlace> ?v0 . ?v5 <http://dbpedia.org/property/father> ?result . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. <http://dbpedia.org/resource/Abul_Maal_Abdul_Muhith> <http://dbpedia.org/property/father> ?v6 . },"```sparql
# Step 1: Find Ram Jaipal Singh Yadav's residence country and its native language
SELECT ?country ?nativeLanguage WHERE {
  ?person dbo:name ""Ram Jaipal Singh Yadav""@en.
  ?person dbo:residenceCountry ?country.
  ?country dbo:officialLanguage ?language.
  ?language rdfs:label ?nativeLanguage.
  FILTER(LANG(?nativeLanguage) = 'en')
}

UNION

# Step 2: Find the politician who is the child of Abu Ahmad Abdul Hafiz and father of Abul Maal Abdul Muhith's grandfather
SELECT DISTINCT ?politician WHERE {
  # Identify Abul Maal Abdul Muhith's father
  ?muhith dbo:name ""Abul Maal Abdul Muhith""@en.
  ?muhith dbo:father ?grandfather.

  # Identify Abu Ahmad Abdul Hafiz's child who is a politician
  ?hafiz dbo:name ""Abu Ahmad Abdul Hafiz""@en.
  ?child dbo:parent ?hafiz;
         rdf:type dbo:Politician.
  
  # The politician must be the father of Abul Maal Abdul Muhith's grandfather
  ?grandfather dbo:father ?politician.

  BIND(?child AS ?politician)
}
```",7,9,8,3,3,3,3,71,0,0,1,0,0.0,0
917,56,test,"Give me the parent of the child, that is a royalty, of Kamehameha IV and child of Kekūanāoʻa and child of the father of the child, that is a royalty, of Kamehameha III.",SELECT ?result WHERE { ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v2 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Kamehameha_IV> . ?v4 <http://dbpedia.org/property/father> ?v0 . ?result <http://dbpedia.org/ontology/child> ?v2 . <http://dbpedia.org/resource/Kamehameha_III> <http://dbpedia.org/ontology/child> ?v4 . ?result <http://dbpedia.org/ontology/parent> <http://dbpedia.org/resource/Kekūanāoʻa> . ?result <http://dbpedia.org/property/father> ?v0 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?parent WHERE {
  # Kamehameha IV's royal child
  ?child dbo:spouse ?kamehamehaIV .
  ?child a dbo:Monarch ;
         dbo:country ?country .

  FILTER(?country = dbr/Hawaii)

  # Parent of the royal child (Kalama)
  ?parent dbo:child ?child .

  # Kekūanāoʻa's child
  ?kekuanaoaChild dbo:child ?parent .
  ?kekuanaoaChild dbr:Kekuanao`a .

  # Father of Kamehameha III's royal child (Kamehameha II)
  ?kamehamehaII dbo:spouse ?mother .
  ?royalChild dbo:father ?kamehamehaII ;
              dbo:country ?country2 .

  FILTER(?country2 = dbr/Hawaii)

  # Ensure the parent is a child of both Kekūanāoʻa and Kamehameha II
  ?parent dbo:child ?royalChild .
}
```",6,8,7,3,3,3,3,71,0,0,1,0,0.0,0
645,69,test,"Give me the military force of the force, that is an event and a military conflict and a societal event, of Francisco Largo Caballero and leader of the office, that is a government agency and an organisation, of the native of Restoration (Spain) and commander in the force of the commander in Siege of Madrid.",SELECT ?result WHERE { ?v3 <http://dbpedia.org/ontology/commander> ?result . ?v7 <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Francisco_Largo_Caballero> . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/GovernmentAgency>. ?v7 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?v7 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?result <http://dbpedia.org/ontology/battle> ?v7 . ?v2 <http://dbpedia.org/ontology/leader> ?result . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?v7 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v3 <http://dbpedia.org/ontology/commander> ?v4 . ?v1 <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Restoration_(Spain)> . <http://dbpedia.org/resource/Siege_of_Madrid> <http://dbpedia.org/ontology/commander> ?v4 . ?v1 <http://dbpedia.org/property/office> ?v2 . },"```sparql
SELECT ?militaryForce WHERE {
  ?event rdf:type dbo:MilitaryConflict .
  ?event dbo:participatedIn dbr:Francisco_Largo_Caballero .
  ?event dbo:location dbr:Spain .
  ?event dbo:commander dbr:José_Miaja .
  ?event rdfs:label ?militaryForce .
  FILTER (lang(?militaryForce) = ""en"")
}
```",8,13,9,3,3,3,3,71,0,0,2,0,0.0,0
933,65,test,"Give me the reference to the birth name of the professional in Musician and band of the band, that is a group and a band and an organisation, of Alan Warner (musician) and band of the band of Alan Warner (musician).",SELECT ?result WHERE { ?result <http://xmlns.com/foaf/0.1/name> ?v5 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Band>. <http://dbpedia.org/resource/Alan_Warner_(musician)> <http://dbpedia.org/ontology/associatedMusicalArtist> ?v0 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Group>. <http://dbpedia.org/resource/Alan_Warner_(musician)> <http://dbpedia.org/ontology/associatedMusicalArtist> ?v2 . ?v2 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v1 <http://dbpedia.org/property/occupation> <http://dbpedia.org/resource/Musician> . ?v0 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v1 <http://dbpedia.org/property/birthName> ?v5 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?band ?birthName WHERE {
  ?person a dbo:Musician ;
          foaf:name ""Alan Warner"" ;
          dbo:associatedBand ?band .
  
  OPTIONAL { 
    ?person foaf:givenName ?birthName .
  }
  
  FILTER (strstarts(str(?band), str(dbr:Teenage_Fanclub)))
}
```",7,10,8,3,3,3,3,71,0,0,1,0,0.0,0
933,56,test,"Give me the band of the band, that is a group and a band and an organisation, of the person born, that is a musical artist, on 1947-04-21 and reference to Alan Warner and band of the band of Alan Warner (musician).","SELECT ?result WHERE { ?v4 <http://dbpedia.org/ontology/associatedMusicalArtist> ?v0 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Band>. <http://dbpedia.org/resource/Alan_Warner_(musician)> <http://dbpedia.org/ontology/associatedMusicalArtist> ?v2 . ?result <http://xmlns.com/foaf/0.1/name> ""Alan Warner""@en . ?v4 <http://dbpedia.org/ontology/birthDate> ""1947-04-21""^^<http://www.w3.org/2001/XMLSchema#date> . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Group>. ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?v0 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v2 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT DISTINCT ?bandOfBand WHERE {
  # Step 1: Find the person born on 1947-04-21 who is a musical artist
  ?person dbo:birthDate ""1947-04-21""^^xsd:date ;
          rdf:type dbo:MusicalArtist .

  # Step 2: Find the band associated with this person
  ?band dbo:member ?person ;
        rdf:type dbo:Band, dbo:Organization .

  # Step 3: Check if Alan Warner is linked to this band and retrieve his band's information
  OPTIONAL {
    dbr:Alan_Warner (dbo:member|dbp:associatedBand) ?alanWarnerBand .
    ?alanWarnerBand rdf:type dbo:Band, dbo:Organization .
  }

  # Step 4: Identify any larger organization or band that encompasses Alan Warner's band
  OPTIONAL {
    ?bandOfBand dbo:member ?alanWarnerBand ;
                rdf:type dbo:Band, dbo:Organization .
  }
}
```",6,10,7,3,3,3,3,71,0,0,1,0,0.0,0
18,26,test,"Give me the alumnus of the figure known, that is an educational institution, as Saints and professional in the award of Ana María Sánchez de Ríos and parent of Liza Huber.","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/almaMater> ?v1 . ?v1 <http://dbpedia.org/property/nickname> ""Saints""@en . ?result <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Liza_Huber> . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/EducationalInstitution>. ?result <http://dbpedia.org/property/occupation> ?v4 . <http://dbpedia.org/resource/Ana_María_Sánchez_de_Ríos> <http://dbpedia.org/property/awards> ?v4 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?alumnus WHERE {
  ?alumnus dbo:almaMater dbr:Saint_Mary%27s_College_(California) .
  ?alumnus dbo:parent dbr:Liza_Huber .
  ?alumnus foaf:name ""Ana María Sánchez de Ríos""@en .
}
```",5,6,6,2,3,2,3,28,0,0,1,0,0.0,0
933,61,test,"Give me the reference to the birth name of the professional in Musician and band of the band, that is a group and a band and an organisation, of the person born, that is a musical artist, on 1947-04-21.","SELECT ?result WHERE { ?v3 <http://dbpedia.org/ontology/associatedMusicalArtist> ?v0 . ?v1 <http://dbpedia.org/property/birthName> ?v4 . ?result <http://xmlns.com/foaf/0.1/name> ?v4 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Band>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Group>. ?v0 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v3 <http://dbpedia.org/ontology/birthDate> ""1947-04-21""^^<http://www.w3.org/2001/XMLSchema#date> . ?v1 <http://dbpedia.org/property/occupation> <http://dbpedia.org/resource/Musician> . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT ?musician ?birthName WHERE {
  ?musician a dbo:MusicalArtist ;
            dbo:birthDate ?date .
  OPTIONAL { ?musician foaf:name ?birthName . }
  FILTER (YEAR(?date) = 1947 && MONTH(?date) = 4 && DAY(?date) = 21)
  
  # Ensure the musician is part of a band that is both a group and an organization
  ?band dbo:member ?musician ;
        a dbo:Band .
  ?band rdf:type ?type1, ?type2 .
  FILTER (?type1 = dbo:Group && ?type2 = dbo:Organization)
}
```",6,10,7,3,2,3,3,71,0,0,1,0,0.0,0
839,70,test,"Give me the band of the band, that is a musical artist, of the professional in Musician and band of the member of the band, that is a band and a group, of Peter Schorowsky and band of the person born, that is a musical artist, as Kevin Richard Russell.","SELECT ?result WHERE { ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Band>. ?v1 <http://dbpedia.org/ontology/associatedMusicalArtist> ?v3 . ?v1 <http://dbpedia.org/property/occupation> ""Musician""@en . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?result <http://dbpedia.org/ontology/bandMember> ?v7 . ?v0 <http://dbpedia.org/ontology/bandMember> ?v7 . ?v4 <http://dbpedia.org/property/birthName> ""Kevin Richard Russell""@en . <http://dbpedia.org/resource/Peter_Schorowsky> <http://dbpedia.org/ontology/associatedMusicalArtist> ?v0 . ?result <http://dbpedia.org/ontology/bandMember> ?v3 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?v4 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Group>. }","```sparql
# Step 1: Find Peter Schorowsky's Band
SELECT ?band WHERE {
  ?person rdfs:label ""Peter Schorowsky""@en .
  ?person dbo:memberOfBand ?band .
}

# Step 2: Find the Professional in Musician and Band for that Band
SELECT DISTINCT ?professional WHERE {
  ?band dbo:associatedMusiciansOrBands ?professional .
  ?professional rdf:type dbo:Musician ;
                dbo:memberOfBand ?band .
}

# Step 3: Identify Kevin Richard Russell's Band
SELECT ?band WHERE {
  ?person rdfs:label ""Kevin Richard Russell""@en .
  ?person dbo:memberOfBand ?band .
}

# Step 4: Confirm Kevin Richard Russell as a Person Born and Musical Artist
SELECT ?person WHERE {
  ?person rdfs:label ""Kevin Richard Russell""@en .
  ?person rdf:type dbo:MusicalArtist ;
          dbo:birthPlace ?place .
}
```",8,12,9,3,3,3,3,71,0,0,1,0,0.0,0
826,69,test,"Give me the spouse of the child of the father of Anna Magdalena Appel and successor of the child, that is a royalty, of Louis I, Grand Duke of Hesse and predecessor of the parent of the child of Louis IV, Grand Duke of Hesse.","SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/parent> <http://dbpedia.org/resource/Louis_IV,_Grand_Duke_of_Hesse> . ?v3 <http://dbpedia.org/ontology/spouse> ?result . ?v1 <http://dbpedia.org/ontology/parent> ?v2 . ?result <http://dbpedia.org/ontology/successor> ?v2 . ?v7 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v7 <http://dbpedia.org/ontology/successor> ?result . <http://dbpedia.org/resource/Louis_I,_Grand_Duke_of_Hesse> <http://dbpedia.org/ontology/child> ?v7 . <http://dbpedia.org/resource/Anna_Magdalena_Appel> <http://dbpedia.org/property/father> ?v4 . ?v3 <http://dbpedia.org/property/father> ?v4 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?spouse WHERE {
  # Anna Magdalena Appel's father
  dbr:Anna_Magdalena_Bach dbo:father dbr:Johann_Michael_Jagemann .
  
  # Spouse of one of his children (Anna Magdalena Bach)
  dbr:Anna_Magdalena_Bach dbo:spouse dbr:Johann_Sebastian_Bach .

  # Louis I's child who succeeded him and is royalty
  dbr:Louis_I,_Grand_Duke_of_Hesse dbo:succeededBy dbr:Louis_II,_Grand_Duke_of_Hesse .
  
  # Predecessor of the parent of Louis IV's child
  dbr:Louis_IV,_Grand_Duke_of_Hesse dbo:parent dbr:Ludwig_III,_Grand_Duke_of_Hesse .
  dbr:Ludwig_III,_Grand_Duke_of_Hesse dbo:succeededBy ?predecessor .

  # Logical connection (hypothetical, as no direct link exists)
  FILTER(?spouse = dbr:Johann_Sebastian_Bach) 
}
```",8,9,9,3,3,3,3,71,0,0,1,0,0.0,0
216,71,test,"Give me the team of the person born, that is a sports manager and a soccer manager and a soccer player, on the death of Pavel Vezhinov and player in the coach of the reference, that is an organisation and a soccer club, to Croatia U21 and player in the coach, that is a soccer player and a sports manager and a soccer manager, of the player, that is an organisation and a sports club and a soccer club, in Džemal Berberović.","SELECT ?result WHERE { ?v8 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsManager>. ?v8 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerManager>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?v1 <http://dbpedia.org/ontology/coach> ?v2 . ?v8 <http://dbpedia.org/ontology/birthDate> ?v7 . ?result <http://dbpedia.org/ontology/coach> ?v8 . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerPlayer>. ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsManager>. ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?v1 <http://xmlns.com/foaf/0.1/name> ""Croatia U21""@en . <http://dbpedia.org/resource/Džemal_Berberović> <http://dbpedia.org/ontology/team> ?v4 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerClub>. ?v2 <http://dbpedia.org/ontology/team> ?result . ?v5 <http://dbpedia.org/ontology/team> ?result . <http://dbpedia.org/resource/Pavel_Vezhinov> <http://dbpedia.org/ontology/deathDate> ?v7 . ?v8 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerPlayer>. ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsClub>. ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerManager>. ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerClub>. ?v4 <http://dbpedia.org/ontology/coach> ?v5 . }","```sparql
SELECT ?team WHERE {
  # Step 1: Find Pavel Vezhinov's date of death
  ?vezhinov dbo:dateOfDeath ?deathDate .
  FILTER (str(?vezhinov) = ""Pavel_Vezhinov"") .

  # Step 2: Find a sports manager, soccer manager, and player born on that date
  ?person dbo:birthDate ?birthDate ;
          rdf:type dbo:SportsManager ;
          rdf:type dbo:SoccerManager ;
          rdf:type dbo:SoccerPlayer .
  FILTER (str(?deathDate) = str(?birthDate)) .

  # Step 3: Find Džemal Berberović's team when coaching Croatia U21
  ?berberovic dbo:coachOf ?croatiaU21 .
  ?team dbo:coach ?berberovic ;
        rdfs:label ?teamLabel .
  FILTER (CONTAINS(LCASE(?teamLabel), ""croatia u21"")) .

  # Step 4: Identify the organization or club
  ?organization rdf:type dbo:SoccerClub, dbo:SportsClub ;
                rdfs:label ?orgLabel .
  FILTER (str(?team) = str(?organization)) .
}
```",9,20,10,3,3,3,3,71,0,0,1,0,0.0,0
216,25,test,Give me the office of the mayor of Ros Bates and administration of  and party of the awardee of Australian Defence Medal.,"SELECT ?result WHERE { ?v3 <http://dbpedia.org/property/office> ?result . ?v4 <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/Australian_Defence_Medal> . ?result <http://dbpedia.org/property/leader> """"@en . ?v4 <http://dbpedia.org/ontology/party> ?result . <http://dbpedia.org/resource/Ros_Bates> <http://dbpedia.org/property/leader> ?v3 . }","```sparql
# Query for Ros Bates
SELECT ?office ?administration WHERE {
  ?person foaf:name ""Ros Bates"" .
  ?person dbo:office ?office .
  OPTIONAL { ?office dbo:partOf ?administration . }
}

UNION

# Query for an awardee of the Australian Defence Medal and their party
SELECT ?person ?party WHERE {
  ?person dbo:honoraryTitle ?award .
  FILTER(CONTAINS(LCASE(?award), ""australian defence medal"")) .
  OPTIONAL { ?person dbo:politicalParty ?party . }
}
```",5,5,6,2,3,2,3,28,0,0,1,0,0.0,0
926,57,test,"Give me the father of Mahmud II and child of the father, that is a royalty, of Mustafa III and successor of the child of the spouse of Şermi Kadın.",SELECT ?result WHERE { <http://dbpedia.org/resource/Mustafa_III> <http://dbpedia.org/property/father> ?v0 . <http://dbpedia.org/resource/Mahmud_II> <http://dbpedia.org/property/father> ?result . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v4 <http://dbpedia.org/property/father> ?v1 . ?v4 <http://dbpedia.org/ontology/successor> ?result . ?v0 <http://dbpedia.org/ontology/child> ?result . ?v1 <http://dbpedia.org/ontology/spouse> <http://dbpedia.org/resource/Şermi_Kadın> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?fatherOfMahmudII ?childOfAhmadIII ?successorOfMahmudII WHERE {
  # Father of Mahmud II
  dbr:Mahmud_II dbo:father dbr:Abdul_Hamid_I .
  BIND(dbr:Abdul_Hamid_I AS ?fatherOfMahmudII)

  # Child of Ahmad III who is royalty (Mustafa III)
  dbr:Ahmad_III dbo:child dbr:Mustafa_III .
  FILTER EXISTS { dbr:Mustafa_III a dbo:Monarch }
  BIND(dbr:Mustafa_III AS ?childOfAhmadIII)

  # Successor of Mahmud II
  dbr:Mahmud_II dbo:successor dbr:Abdulmejid_I .
  BIND(dbr:Abdulmejid_I AS ?successorOfMahmudII)
}
```",6,7,7,3,3,3,3,71,0,0,1,0,0.0,0
507,68,test,"Give me the spouse of the person born as the birth name of Anne V. Coates and director of the movie, that is a movie and a work, with the person born on 1919-06-17 and professional in the profession of Guy Ferland.","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/spouse> ?v4 . ?v7 <http://dbpedia.org/ontology/director> ?result . ?v7 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?v7 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Film>. ?v0 <http://dbpedia.org/ontology/birthDate> ""1919-06-17""^^<http://www.w3.org/2001/XMLSchema#date> . ?result <http://dbpedia.org/property/occupation> ?v3 . ?v7 <http://dbpedia.org/property/starring> ?v0 . <http://dbpedia.org/resource/Anne_V._Coates> <http://dbpedia.org/property/birthName> ?v5 . <http://dbpedia.org/resource/Guy_Ferland> <http://dbpedia.org/property/occupation> ?v3 . ?v4 <http://dbpedia.org/property/birthName> ?v5 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?spouse WHERE {
  # Find Anne V. Coates' birth name and her spouse
  dbr:Anne_V._Coates dbo:birthName ?birthName .
  
  # Find a movie directed by Anne V. Coates that is also a work
  ?movie dbo:director dbr:Anne_V._Coates ;
         rdf:type dbo:Film .

  # Find Guy Ferland's birth date and profession
  dbr:Guy_Ferland dbo:birthday ""1919-06-17""^^xsd:date ;
                  dbo:profession dbr:Film_editor .

  # Get the spouse of Anne Veronica Coates
  ?birthName dbo:spouse ?spouse .
}
```",8,10,9,3,3,3,3,71,0,0,1,0,0.0,0
495,18,test,Give me the child of the father of the parent of Princess Catherine of Württemberg and father of the child of Princess Charlotte of Saxe-Hildburghausen.,SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Princess_Catherine_of_Württemberg> . ?v3 <http://dbpedia.org/ontology/parent> <http://dbpedia.org/resource/Princess_Charlotte_of_Saxe-Hildburghausen> . ?v3 <http://dbpedia.org/property/father> ?result . ?v1 <http://dbpedia.org/property/father> ?v2 . ?result <http://dbpedia.org/property/father> ?v2 . },"```sparql
SELECT DISTINCT ?result WHERE {
  # Step 1: Find Princess Catherine of Württemberg's father
  ?catherine dbo:parent ?fatherCatherine .
  ?catherine foaf:name ""Princess Catherine of Württemberg""@en .

  # Step 2: Identify a child of this father (could be Catherine or another sibling)
  ?childFatherCatherine dbo:parent ?fatherCatherine .

  # Step 3: Find Princess Charlotte of Saxe-Hildburghausen's child
  ?charlotteChild dbo:parent ?motherCharlotte .
  ?motherCharlotte foaf:name ""Princess Charlotte of Saxe-Hildburghausen""@en .

  # Step 4: Determine the father of this child
  ?fatherCharlotteChild dbo:child ?charlotteChild .

  # Final step: Find the child of both identified fathers
  ?result dbo:parent ?fatherCatherine .
  ?result dbo:parent ?fatherCharlotteChild .
}
```",5,5,6,3,2,3,2,20,0,0,1,0,0.0,0
433,57,test,"Give me the professional in the profession of Bob Marley and associated musical artist of the associated musical artist, that is an artist and a musical artist, of the associated musical artist, that is a musical artist and an artist, of Ornette Coleman and associated musical artist of Paul Chambers.",SELECT ?result WHERE { <http://dbpedia.org/resource/Bob_Marley> <http://dbpedia.org/property/occupation> ?v3 . ?v5 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. ?result <http://dbpedia.org/property/occupation> ?v3 . ?v0 <http://dbpedia.org/ontology/associatedMusicalArtist> ?v5 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. <http://dbpedia.org/resource/Ornette_Coleman> <http://dbpedia.org/ontology/associatedMusicalArtist> ?v0 . <http://dbpedia.org/resource/Paul_Chambers> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT DISTINCT ?commonArtist WHERE {
  # Bob Marley's associated musicians who are also artists
  ?marleyMusician dbo:musicalArtistOf dbr:Bob_Marley .
  ?marleyMusician a dbo:MusicalArtist ;
                 dbp:occupation ?occupation1 .
  FILTER(CONTAINS(LCASE(?occupation1), ""artist"") || CONTAINS(LCASE(?occupation1), ""musician""))

  # Ornette Coleman's associated musicians
  ?colemanMusician dbo:musicalArtistOf dbr:Ornette_Coleman .

  # Paul Chambers' associated musicians
  ?chambersMusician dbo:musicalArtistOf dbr:Paul_Chambers .

  # Find common artists among the associations
  VALUES ?commonArtist {
    ?marleyMusician
    ?colemanMusician
    ?chambersMusician
  }

  # Ensure they are both artists and musicians
  ?commonArtist a dbo:MusicalArtist ;
               dbp:occupation ?occupation2 .
  FILTER(CONTAINS(LCASE(?occupation2), ""artist"") || CONTAINS(LCASE(?occupation2), ""musician""))
}
```",6,10,7,3,3,3,3,71,0,0,4,0,0.0,0
445,60,test,"Give me the entity in the residence, that is a country, of the resident, that is an athlete, of Great Britain and entity in the award of the commander in Battle of Saint-Mihiel.",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/location> ?v2 . ?v0 <http://dbpedia.org/property/awards> ?v1 . <http://dbpedia.org/resource/Battle_of_Saint-Mihiel> <http://dbpedia.org/ontology/commander> ?v0 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Athlete>. ?v3 <http://dbpedia.org/property/residence> <http://dbpedia.org/resource/Great_Britain> . ?result <http://dbpedia.org/ontology/country> ?v1 . ?v3 <http://dbpedia.org/property/residence> ?v2 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. },"```sparql
SELECT DISTINCT ?entity WHERE {
  # Step 1: Find athletes from Great Britain
  ?athlete dbo:nationality dbr:United_Kingdom ;
           rdf:type dbo:Athlete .
  
  # Step 2: Get the country of residence (Great Britain)
  ?country rdfs:label ""United Kingdom""@en .

  # Step 3: Find commanders in the Battle of Saint-Mihiel
  ?commander dbo:commanded dbr:Battle_of_Saint-Mihiel ;
             rdf:type dbo:Military_person .
  
  # Step 4: Get awards associated with these commanders
  ?award dbo:recipient ?commander .

  # Step 5: Find common entities between the country and the award
  FILTER(?country = ?entity || ?award = ?entity)
}
```",6,8,7,3,2,3,3,71,0,0,102,0,0.0,0
124,62,test,"Give me the military force of Battle of Atbara and commander in the war, that is a societal event and a military conflict, of the reference, that is Australian and an organisation and a military unit, to 'A' Battery, Royal Australian Artillery and military force of the war, that is an event and a military conflict and a societal event, of the awardee of British South Africa Company Medal.","SELECT ?result WHERE { ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?v3 <http://dbpedia.org/ontology/commander> ?result . ?v4 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Australia>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v6 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?result <http://dbpedia.org/ontology/battle> ?v6 . ?v0 <http://dbpedia.org/ontology/battle> ?v6 . ?v6 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v0 <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/British_South_Africa_Company_Medal> . ?v4 <http://dbpedia.org/ontology/battle> ?v3 . ?v4 <http://xmlns.com/foaf/0.1/name> ""'A' Battery, Royal Australian Artillery""@en . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?result <http://dbpedia.org/ontology/battle> <http://dbpedia.org/resource/Battle_of_Atbara> . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryUnit>. ?v6 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?battle ?commander ?militaryForce WHERE {
  # Battle of Atbara and its commander
  dbr:Battle_of_Atbara dbo:commandedBy ?commander .
  
  # Military force involved in the Battle of Atbara
  ?battle dbo:militaryConflictOf ?militaryForce .

  # 'A' Battery, Royal Australian Artillery involvement
  dbr:A_Battery,_Royal_Australian_Artillery dbo:participatedIn ?conflict .

  # Conflict involving awardees of British South Africa Company Medal (Second Boer War)
  ?conflict rdfs:label ?label .
  FILTER(CONTAINS(LCASE(?label), ""second boer war""))

  # Linking the military force
  ?militaryForce dbo:militaryConflictOf ?conflict .

  # Ensure the commander is Herbert Kitchener
  ?commander rdfs:label ""Herbert Kitchener""@en .
}
```",7,15,8,3,3,3,3,71,0,0,1,0,0.0,0
773,59,test,"Give me the parent of the successor of the child, that is a royalty, of Louis the Pious and spouse of the father of the parent of Bernard (son of Charles the Fat).",SELECT ?result WHERE { ?v2 <http://dbpedia.org/ontology/spouse> ?result . ?result <http://dbpedia.org/ontology/child> ?v5 . ?v0 <http://dbpedia.org/ontology/successor> ?v5 . ?v3 <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Bernard_(son_of_Charles_the_Fat)> . <http://dbpedia.org/resource/Louis_the_Pious> <http://dbpedia.org/ontology/child> ?v0 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v3 <http://dbpedia.org/property/father> ?v2 . },"```sparql
SELECT DISTINCT ?parentOfSuccessorSpouse WHERE {
  # Step 1: Louis the Pious' children
  ?louis dbo:child ?child .
  VALUES ?louis { dbr:Louis_the_Pious } .

  # Step 2: Child that is a royalty
  ?child rdf:type dbo:Monarch .

  # Step 3: Successor of this child
  ?successor dbo:predecessorOrSuccessorOf ?child .
  FILTER(?successor != ?child) .

  # Step 4: Parent of the successor
  ?parentOfSuccessor dbo:child ?successor .

  # Step 5: Spouse of the father of the parent (same as step 4)
  ?spouse dbo:spouse ?fatherOfParent .
  ?fatherOfParent dbo:child ?parentOfSuccessor .

  # Step 6: Bernard's lineage
  ?charlesFat dbo:son dbr:Bernard_I_of_France .
  VALUES ?charlesFat { dbr:Charles_the_Fat } .
  
  ?bernardParent dbo:child dbr:Bernard_I_of_France .
  ?grandparentOfBernard dbo:child ?bernardParent .

  # Step 7: Parent of Bernard's parent (same as step 5)
  FILTER(?spouse = ?grandparentOfBernard)

}
```",6,7,7,3,2,3,3,71,0,0,1,0,0.0,0
47,64,test,"Give me the office of Bidesh Ranjan Bose and office of the administration of the commander, that is a politician, in Operation Green Hunt and office of the awardee of the entity, that is an award, in India.",SELECT ?result WHERE { ?v2 <http://dbpedia.org/property/governor> ?v3 . <http://dbpedia.org/resource/Operation_Green_Hunt> <http://dbpedia.org/ontology/commander> ?v3 . ?v1 <http://dbpedia.org/property/awards> ?v0 . ?v0 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/India> . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Award>. ?v1 <http://dbpedia.org/property/office> ?result . ?v2 <http://dbpedia.org/property/office> ?result . <http://dbpedia.org/resource/Bidesh_Ranjan_Bose> <http://dbpedia.org/property/office> ?result . },"```sparql
# Query to find the office of Bidesh Ranjan Bose
SELECT ?office WHERE {
  wd:Q1234567 dbo:occupation ?office .
}

# Query to find the office of the commander in Operation Green Hunt
SELECT ?commanderOffice WHERE {
  ?operation dbo:commander ?commander .
  ?commander dbo:occupation ?commanderOffice .
  FILTER(CONTAINS(LCASE(?operation), ""operation green hunt""))
}

# Query to find the office of an awardee of a notable award in India
SELECT ?award, ?office WHERE {
  ?person dbo:recipientOfAward ?award .
  ?award dbo:country wd:Q28 . # Q28 is the DBpedia entity for India
  ?person dbo:occupation ?office .
}
```

Note: Replace `wd:Q1234567` with the actual DBpedia identifier for Bidesh Ranjan Bose. The queries assume that DBpedia has structured data on these entities and their relationships.",7,9,8,3,3,3,3,71,0,0,1,0,0.0,0
865,63,test,"Give me the father of the child of Abu Ahmad Abdul Hafiz and native of the residence, that is a country, of the person decedent at Patna and father of the child, that is a politician, of Abu Ahmad Abdul Hafiz.",SELECT ?result WHERE { ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. ?v4 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Abu_Ahmad_Abdul_Hafiz> . ?v1 <http://dbpedia.org/property/residence> ?v0 . ?result <http://dbpedia.org/ontology/birthPlace> ?v0 . ?v4 <http://dbpedia.org/property/father> ?result . ?v3 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Abu_Ahmad_Abdul_Hafiz> . ?v3 <http://dbpedia.org/property/father> ?result . ?v1 <http://dbpedia.org/ontology/deathPlace> <http://dbpedia.org/resource/Patna> . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?father WHERE {
  # Ziaur Rahman's details
  dbr:Ziaur_Rahman dbo:child dbr:Some_Child .
  
  # Sheikh Mujibur Rahman's details
  dbr:Sheikh_Mujibur_Rahman dbo:child dbr:Ziaur_Rahman ;
                            dbo:deathPlace dbr:Dhaka ;
                            dbo:nationality dbr:Bangladesh .

  # Check for residence in Bangladesh and death in Patna
  ?person dbo:residence dbr:Bangladesh .
  ?person dbo:deathPlace dbr:Patna .
  
  # Linking the person to Sheikh Mujibur Rahman
  ?person dbo:child dbr:Ziaur_Rahman .

  # Result
  BIND(dbr:Sheikh_Mujibur_Rahman AS ?father)
}
```",7,9,8,3,3,3,3,71,0,0,1,0,0.0,0
715,67,test,"Give me the commander in the force of the mayor, that is an office holder and a politician and a president, of 1933 Spanish general election and leader of the office, that is a government agency and an organisation, of the reference to Carlos Franco Iribarnegaray and commander in Rif War.","SELECT ?result WHERE { <http://dbpedia.org/resource/Rif_War> <http://dbpedia.org/ontology/commander> ?result . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v1 <http://xmlns.com/foaf/0.1/name> ""Carlos Franco Iribarnegaray""@en . ?v6 <http://dbpedia.org/ontology/commander> ?result . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/President>. <http://dbpedia.org/resource/1933_Spanish_general_election> <http://dbpedia.org/property/leader> ?v0 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/GovernmentAgency>. ?v3 <http://dbpedia.org/ontology/leader> ?result . ?v1 <http://dbpedia.org/property/office> ?v3 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?v6 <http://dbpedia.org/ontology/commander> ?v0 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?person WHERE {
  ?person dbo:occupation dbr:Military_person .
  ?person dbo:officeHolderOf dbr:1933_Spanish_general_election .
  ?person dbo:politicalPartyMember dbr:Spanish_Conservative_Party .
  ?person dbo:leaderOf dbr:Government_agency .
  ?person dbo:commanderInRifWar true .
  ?person dbo:relatedTo dbr:Carlos_Franco_Iribarnegaray .
  FILTER(CONTAINS(LCASE(?personLabel), ""miguel primo de rivera""))
}
```",7,12,8,3,3,3,3,71,0,0,1,0,0.0,0
98,9,test,Give me the parent of the successor of Emperor Nijō and child of the child of Emperor Toba.,SELECT ?result WHERE { <http://dbpedia.org/resource/Emperor_Nijō> <http://dbpedia.org/ontology/successor> ?v1 . ?result <http://dbpedia.org/ontology/parent> ?v3 . <http://dbpedia.org/resource/Emperor_Toba> <http://dbpedia.org/ontology/child> ?v3 . ?v1 <http://dbpedia.org/ontology/parent> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?person WHERE {
  # Find Emperor Nijō's successor
  ?successor dbo:predecessor dbr:Emperor_Nijō .
  
  # Find the parent of Emperor Go-Shirakawa (successor of Emperor Nijō)
  ?parent dbo:child ?successor .
  
  # Find Emperor Toba's child
  ?tobaChild dbo:parent dbr:Emperor_Toba .
  
  # Find the child of Emperor Sutoku (child of Emperor Toba)
  ?grandchild dbo:parent ?tobaChild .
  
  # Check if the parent of Go-Shirakawa is also the grandparent of Takakura
  FILTER(?parent = ?grandparent)
}
```",4,4,5,2,2,2,2,9,0,0,1,0,0.0,0
18,28,test,"Give me the parent of the professional in Actress and alumnus of the figure known, that is an educational institution, as Saints and professional in the award of Ana María Sánchez de Ríos.","SELECT ?result WHERE { ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/EducationalInstitution>. <http://dbpedia.org/resource/Ana_María_Sánchez_de_Ríos> <http://dbpedia.org/property/awards> ?v1 . ?result <http://dbpedia.org/property/occupation> ?v1 . ?result <http://dbpedia.org/ontology/child> ?v3 . ?v3 <http://dbpedia.org/property/occupation> ""Actress""@en . ?result <http://dbpedia.org/ontology/almaMater> ?v5 . ?v5 <http://dbpedia.org/property/nickname> ""Saints""@en . }","```sparql
SELECT ?institution ?parent WHERE {
  ?person foaf:name ""Ana María Sánchez de Ríos""@en .
  ?person dbo:profession dbr:Actress .
  ?person dbo:almaMater ?institution .
  ?institution rdfs:label ?label .
  FILTER(CONTAINS(LCASE(?label), ""saints"")) .
  
  OPTIONAL {
    ?institution dbo:foundingOrganization|dbo:parentOrganization ?parent .
  }
}
```",6,7,7,2,3,2,3,28,0,0,1,0,0.0,0
554,18,test,Give me the leader of the birth place of The Legendary Tigerman and leader of the administration of the party member of Independent politician.,SELECT ?result WHERE { ?v2 <http://dbpedia.org/property/leader> ?result . ?v2 <http://dbpedia.org/property/leader> ?v1 . ?v1 <http://dbpedia.org/ontology/party> <http://dbpedia.org/resource/Independent_politician> . <http://dbpedia.org/resource/The_Legendary_Tigerman> <http://dbpedia.org/ontology/birthPlace> ?v3 . ?v3 <http://dbpedia.org/property/leader> ?result . },"```sparql
# Query for The Legendary Tigerman's birthplace and its current leader
SELECT ?birthPlaceLabel ?leaderLabel WHERE {
  ?tigerman dbo:birthPlace ?birthPlace .
  ?birthPlace rdfs:label ?birthPlaceLabel .
  FILTER(CONTAINS(LCASE(?birthPlaceLabel), ""the legendary tigerman"")) .
  
  OPTIONAL {
    ?birthPlace dbo:mayor ?leader .
    ?leader rdfs:label ?leaderLabel .
  }
  
  SERVICE wikibase:label { bd:serviceParam wikibase:language ""[AUTO_LANGUAGE],en"". }
}
LIMIT 1

UNION

# Query for an independent politician, their associated party, and the leader of that party's administration
SELECT ?politicianLabel ?partyLabel ?adminLeaderLabel WHERE {
  ?politician dbo:politicalParty ?party .
  ?politician rdfs:label ?politicianLabel .
  FILTER(CONTAINS(LCASE(?politicianLabel), ""independent politician"")) .

  OPTIONAL {
    ?party dbo:leader ?adminLeader .
    ?adminLeader rdfs:label ?adminLeaderLabel .
  }
  
  SERVICE wikibase:label { bd:serviceParam wikibase:language ""[AUTO_LANGUAGE],en"". }
}
LIMIT 1
```",5,5,6,3,2,3,2,20,0,0,3,0,0.0,0
341,8,test,"Give me the writer of the work, that is a work and an album, of Serrano and band member of Beyoncé.","SELECT ?result WHERE { ?v1 <http://dbpedia.org/property/writer> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Album>. ?result <http://dbpedia.org/ontology/associatedMusicalArtist> <http://dbpedia.org/resource/Beyoncé> . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?v1 <http://dbpedia.org/property/writer> ""Serrano""@en . }","```sparql
SELECT ?writer WHERE {
  ?work dcterms:creator ?person .
  ?work rdf:type dbo:Musical .
  ?album dbo:hasTrack ?track .
  ?track dbo:lyricsBy ?person .
  ?album dbo:artist ?bandMember .
  ?bandMember foaf:name ""Beyoncé Knowles"" .
  ?person foaf:name ""Lin-Manuel Miranda"" .
}
```",3,5,4,2,2,2,2,9,0,0,1,0,0.0,0
965,66,test,"Give me the parent of the person born, that is a noble, as the birth name of George Mountbatten, 2nd Marquess of Milford Haven and parent of the child, that is a royalty, of Prince Louis of Battenberg and spouse of the spouse of Princess Victoria of Hesse and by Rhine.","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/spouse> ?v3 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Noble>. ?v6 <http://dbpedia.org/ontology/parent> ?result . <http://dbpedia.org/resource/Princess_Victoria_of_Hesse_and_by_Rhine> <http://dbpedia.org/ontology/spouse> ?v3 . ?v0 <http://dbpedia.org/property/birthName> ?v5 . ?v6 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Prince_Louis_of_Battenberg> . ?v6 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. <http://dbpedia.org/resource/George_Mountbatten,_2nd_Marquess_of_Milford_Haven> <http://dbpedia.org/property/birthName> ?v5 . ?v0 <http://dbpedia.org/ontology/parent> ?result . }","```sparql
SELECT ?parent WHERE {
  wd:Q2108 wdt:P31/wdt:P279* wd:Q215627 .
  wd:Q2108 wdt:P22 ?parent .
  ?parent wdt:P31 wd:Q11850 . # Princess
}
```",7,9,8,3,3,3,3,71,0,0,1,0,0.0,0
130,20,test,"Give me the figure known as the film, that is a soccer club and an organisation, of the native, that is a coach and a college coach, of Madison, Alabama and entity in the administration, that is American, of the award of Živko Ključe.","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/state> ?v5 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/CollegeCoach>. ?result <http://dbpedia.org/property/nickname> ?v2 . ?v2 <http://dbpedia.org/ontology/director> ?v1 . <http://dbpedia.org/resource/Živko_Ključe> <http://dbpedia.org/property/awards> ?v4 . ?v5 <http://dbpedia.org/property/governor> ?v4 . ?v5 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/United_States>. ?v1 <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Madison,_Alabama> . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerClub>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Coach>. }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?person ?soccerClub ?organization ?award WHERE {
  # Find a person from Madison, Alabama who is a coach and college coach
  ?person dbo:nationality dbr:United_States ;
          dbo:birthPlace dbr:Madison,_Alabama ;
          dbo:occupation dbr:Coolie ;
          dbo:almaMater ?college .
  
  # Find the soccer club or organization associated with this person as a film figure
  ?filmFigure dbo:subject ?person ;
              dbo:genre dbr:Soccer_film .
  ?soccerClub dbo:coach ?person .
  ?organization dbo:president ?person .

  # Identify an American award related to Živko Ključe
  ?award dbo:name ?awardName ;
         dbo:administrator ?person .
  
  FILTER regex(?awardName, ""Živko Ključe"", ""i"")
}
```",6,11,7,3,2,3,2,20,0,0,1,0,0.0,0
216,70,test,"Give me the player in the coach, that is a soccer player and a sports manager and a soccer manager, of the player, that is an organisation and a sports club and a soccer club, in Džemal Berberović and player in the coach of Croatia national under-21 football team and team of the person born, that is a sports manager and a soccer manager and a soccer player, on the death of Pavel Vezhinov.",SELECT ?result WHERE { ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsClub>. <http://dbpedia.org/resource/Croatia_national_under-21_football_team> <http://dbpedia.org/ontology/coach> ?v4 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerPlayer>. <http://dbpedia.org/resource/Pavel_Vezhinov> <http://dbpedia.org/ontology/deathDate> ?v1 . ?v7 <http://dbpedia.org/ontology/team> ?result . ?v7 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerPlayer>. ?v7 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerManager>. ?v4 <http://dbpedia.org/ontology/team> ?result . ?v3 <http://dbpedia.org/ontology/birthDate> ?v1 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsManager>. ?v7 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsManager>. <http://dbpedia.org/resource/Džemal_Berberović> <http://dbpedia.org/ontology/team> ?v0 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerClub>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerManager>. ?v0 <http://dbpedia.org/ontology/coach> ?v7 . ?result <http://dbpedia.org/ontology/coach> ?v3 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?player WHERE {
  # Džemal Berberović's role as a coach
  dbr:Džemal_Berberović dbo:coachOf dbr:Croatia_national_under-21_football_team .

  # Find players coached by Džemal Berberović
  ?player dbo:team dbr:Croatia_national_under-21_football_team ;
          a dbo:SoccerPlayer .

  # Ensure the player is part of an organisation that is a sports club and soccer club
  ?organisation dbo:member ?player ;
                a dbo:SportsClub, dbo:SoccerClub .

  # Find the person born who fits multiple roles and connects to Pavel Vezhinov's death
  ?person dbp:birthDate ?birthDate ;
          dbp:deathDate ?deathDate ;
          a dbo:SportsManager, dbo:SoccerManager, dbo:SoccerPlayer .
  
  # Ensure the birth date of this person matches the death date of Pavel Vezhinov
  dbr:Pavel_Vezhinov dbp:deathDate ?deathDate .

  FILTER (?birthDate = ?deathDate)
}
```",8,17,9,3,3,3,3,71,0,0,1,0,0.0,0
926,67,test,"Give me the father of Mahmud II and child of the father, that is a royalty, of the parent, that is a royalty, of Beyhan Sultan (daughter of Mustafa III) and successor of the child of the spouse of Şermi Kadın.",SELECT ?result WHERE { ?v0 <http://dbpedia.org/ontology/child> ?result . ?v5 <http://dbpedia.org/ontology/successor> ?result . ?v5 <http://dbpedia.org/property/father> ?v1 . ?v1 <http://dbpedia.org/ontology/spouse> <http://dbpedia.org/resource/Şermi_Kadın> . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v4 <http://dbpedia.org/property/father> ?v0 . <http://dbpedia.org/resource/Mahmud_II> <http://dbpedia.org/property/father> ?result . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. <http://dbpedia.org/resource/Beyhan_Sultan_(daughter_of_Mustafa_III)> <http://dbpedia.org/ontology/parent> ?v4 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?person WHERE {
  # Beyhan Sultan's parent is Mustafa III
  dbr:Beyhan_Sultan dbo:parent dbr:Mustafa_III .

  # Şermi Kadın's spouse and their child
  ?şermiKadin a dbo:Spouse ;
              dbo:spouse ?spouse .
  ?child dbo:parent ?spouse ;
         dbo:parent ?şermiKadin .
  
  # Successor of the child of Şermi Kadın's spouse
  ?successor dbo:predecessor ?child .

  # Mahmud II's father is Abdul Hamid I
  dbr:Mahmud_II dbo:father dbr:Abdul_Hamid_I .

  # Royalty children of Abdul Hamid I
  ?royaltyChild dbo:parent dbr:Abdul_Hamid_I ;
                a dbo:RoyalFamilyMember .

  # Find the person who is both the successor and a royalty child
  ?person = ?successor .
  ?person = ?royaltyChild .
}
```",7,9,8,3,3,3,3,71,0,0,1,0,0.0,0
124,57,test,"Give me the military force of the war, that is an event and a military conflict and a societal event, of the awardee of British South Africa Company Medal and commander in Mahdist War and military force of the force, that is a societal event and a military conflict, of Herbert Kitchener, 1st Earl Kitchener.","SELECT ?result WHERE { ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. <http://dbpedia.org/resource/Mahdist_War> <http://dbpedia.org/ontology/commander> ?result . ?result <http://dbpedia.org/ontology/battle> ?v3 . ?result <http://dbpedia.org/ontology/battle> ?v5 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v0 <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/British_South_Africa_Company_Medal> . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?v0 <http://dbpedia.org/ontology/battle> ?v5 . ?v3 <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Herbert_Kitchener,_1st_Earl_Kitchener> . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. }","```sparql
SELECT ?militaryForce WHERE {
  ?person dbo:awardReceived dbr:British_South_Africa_Company_Medal .
  ?person dbo:militaryCommanderOf dbr:Mahdist_War .
  ?war dbo:type dbr:Military_conflict ;
       dbo:type dbr:Societal_event .
  ?kitchener dbo:name ""Herbert Kitchener, 1st Earl Kitchener""@en .
  ?force dbo:type dbr:Military_conflict ;
         dbo:type dbr:Societal_event .
  ?kitchener dbo:militaryForce ?force .
  FILTER(?war = dbr:Mahdist_War && ?force = dbr:Sudan_Campaign)
  ?person dbo:militaryForce ?militaryForce .
}
```",6,11,7,3,3,3,3,71,0,0,3,0,0.0,0
865,56,test,"Give me the father of AK Abdul Momen and native of the residence, that is a country, of Ram Jaipal Singh Yadav and father of the child of the father of Abul Maal Abdul Muhith.",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/birthPlace> ?v0 . <http://dbpedia.org/resource/Abul_Maal_Abdul_Muhith> <http://dbpedia.org/property/father> ?v5 . <http://dbpedia.org/resource/AK_Abdul_Momen> <http://dbpedia.org/property/father> ?result . ?v2 <http://dbpedia.org/property/father> ?result . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. ?v2 <http://dbpedia.org/property/father> ?v5 . <http://dbpedia.org/resource/Ram_Jaipal_Singh_Yadav> <http://dbpedia.org/property/residence> ?v0 . },"```sparql
# Step 1: Find the father of AK Abdul Momen
SELECT ?father WHERE {
    ?person dbo:name ""AK Abdul Momen""@en .
    ?person dbo:father ?father .
}

# Step 2: Find the native country of Ram Jaipal Singh Yadav
SELECT ?country WHERE {
    ?person dbo:name ""Ram Jaipal Singh Yadav""@en .
    ?person dbo:nationality ?nationality .
    ?nationality rdfs:label ?country .
    FILTER (lang(?country) = 'en')
}

# Step 3: Find the grandfather of Abul Maal Abdul Muhith
SELECT ?grandfather WHERE {
    ?person dbo:name ""Abul Maal Abdul Muhith""@en .
    ?person dbo:father ?father .
    ?father dbo:father ?grandfather .
}

# Combine results to find the common person
SELECT DISTINCT ?commonPerson WHERE {
    # Father of AK Abdul Momen
    ?person1 dbo:name ""AK Abdul Momen""@en .
    ?person1 dbo:father ?commonPerson .

    # Native country of Ram Jaipal Singh Yadav
    ?person2 dbo:name ""Ram Jaipal Singh Yadav""@en .
    ?person2 dbo:nationality ?nationality .
    ?nationality rdfs:label ?country .
    FILTER (lang(?country) = 'en')

    # Grandfather of Abul Maal Abdul Muhith
    ?person3 dbo:name ""Abul Maal Abdul Muhith""@en .
    ?person3 dbo:father ?father .
    ?father dbo:father ?commonPerson .

    # Ensure the country matches
    OPTIONAL {
        ?commonPerson dbo:nationality ?nationality2 .
        ?nationality2 rdfs:label ?country2 .
        FILTER (lang(?country2) = 'en' && ?country = ?country2)
    }
}
```",6,7,7,3,3,3,3,71,0,0,1,0,0.0,0
495,20,test,Give me the child of the father of the parent of Princess Catherine of Württemberg and father of the child of the parent of Princess Pauline of Württemberg (1810–1856).,SELECT ?result WHERE { ?result <http://dbpedia.org/property/father> ?v2 . ?v5 <http://dbpedia.org/ontology/parent> ?v4 . ?v5 <http://dbpedia.org/property/father> ?result . ?v1 <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Princess_Catherine_of_Württemberg> . <http://dbpedia.org/resource/Princess_Pauline_of_Württemberg_(1810–1856)> <http://dbpedia.org/ontology/parent> ?v4 . ?v1 <http://dbpedia.org/property/father> ?v2 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?child WHERE {
  # Find the father of Princess Catherine of Württemberg
  dbr:Catherine_of_W%C3%BCrttemberg dbo:father dbr:Louis_of_W%C3%BCrttemberg .

  # Find the children of Duke Louis of Württemberg
  ?child dbo:parent dbr:Louis_of_W%C3%BCrttemberg .
  
  FILTER(?child != dbr:Catherine_of_W%C3%BCrttemberg && ?child != dbr:Pauline_of_W%C3%BCrttemberg)
}
```",6,6,7,3,2,3,2,20,0,0,1,0,0.0,0
445,56,test,"Give me the entity in the award of the commander in Battle of Saint-Mihiel and death place of Patrick Moore and entity in the residence, that is a country, of Anna Sharkey.",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/country> ?v1 . ?v0 <http://dbpedia.org/property/awards> ?v1 . ?result <http://dbpedia.org/ontology/location> ?v2 . <http://dbpedia.org/resource/Patrick_Moore> <http://dbpedia.org/ontology/deathPlace> ?result . <http://dbpedia.org/resource/Anna_Sharkey> <http://dbpedia.org/property/residence> ?v2 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. <http://dbpedia.org/resource/Battle_of_Saint-Mihiel> <http://dbpedia.org/ontology/commander> ?v0 . },"```sparql
# Query 1: Entity in the award of the commander in Battle of Saint-Mihiel
SELECT ?commander ?award WHERE {
  ?battle dbpedia-owl:wikiPageRedirects dbc:battle_of_saint-mihiel .
  ?battle dbo:commander ?commander .
  OPTIONAL { ?commander dbo:honoursAndAwards ?award . }
}

# Query 2: Death place of Patrick Moore
SELECT ?deathPlace WHERE {
  dbpedia:Patrick_Moore dbo:placeOfBirth ?birthPlace ;
                         dbo:deathPlace ?deathPlace .
}

# Query 3: Entity in the residence, that is a country, of Anna Sharkey
SELECT ?residence WHERE {
  dbpedia:Anna_Sharkey dbo:residence ?residence .
  FILTER (STRSTARTS(STR(?residence), ""http://dbpedia.org/resource/Category:""))
  OPTIONAL { ?residence rdf:type dbo:Country . }
}
```",6,7,7,3,3,3,3,71,0,0,1,0,0.0,0
273,20,test,Give me the spouse of the child of the child of Edoardo Agnelli (1831-1871) and parent of the alumnus of the reference to Università degli Studi di Torino.,"SELECT ?result WHERE { ?v4 <http://xmlns.com/foaf/0.1/name> ""Università degli Studi di Torino""@en . ?v5 <http://dbpedia.org/ontology/parent> ?result . ?result <http://dbpedia.org/ontology/spouse> ?v2 . ?v1 <http://dbpedia.org/ontology/parent> <http://dbpedia.org/resource/Edoardo_Agnelli_(1831-1871)> . ?v1 <http://dbpedia.org/ontology/child> ?v2 . ?v5 <http://dbpedia.org/ontology/almaMater> ?v4 . }","```sparql
SELECT ?spouse WHERE {
  # Step 1: Identify Edoardo Agnelli (1831-1871)
  ?edoardo dbo:birthDate ?birthDate .
  FILTER(?birthDate = ""1831-01-01""^^xsd:date && ?birthDate <= ""1871-12-31""^^xsd:date) .
  ?edoardo rdfs:label ""Edoardo Agnelli""@en .

  # Step 2: Find a child of Edoardo Agnelli
  ?child dbo:parent ?edoardo .
  
  # Step 3: Identify the grandchild (child of the child)
  ?grandchild dbo:parent ?child .

  # Step 4: Determine the spouse of this grandchild
  ?spouse dbo:spouse ?grandchild .

  # Step 5: Check if any alumnus from Università degli Studi di Torino is a parent to this spouse
  OPTIONAL {
    ?alumnus foaf:alumniOf ?university .
    ?university rdfs:label ""Università degli Studi di Torino""@it .
    ?spouse dbo:parent ?alumnus .
  }
}
```",6,6,7,3,2,3,2,20,0,0,1,0,0.0,0
865,61,test,"Give me the father of the child, that is a politician, of the spouse of Syeda Shahar Banu and father of the child of the father of Abul Maal Abdul Muhith.",SELECT ?result WHERE { ?v4 <http://dbpedia.org/property/father> ?result . ?v4 <http://dbpedia.org/property/father> ?v0 . <http://dbpedia.org/resource/Syeda_Shahar_Banu> <http://dbpedia.org/ontology/spouse> ?v0 . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. <http://dbpedia.org/resource/Abul_Maal_Abdul_Muhith> <http://dbpedia.org/property/father> ?v1 . ?v2 <http://dbpedia.org/property/father> ?v1 . ?v2 <http://dbpedia.org/property/father> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT DISTINCT ?father WHERE {
  # Part 1: Syeda Shahar Banu's spouse and their child who is a politician
  ?spouse dbo:spouse dbp:SyedaShaharBanu .
  ?child dbo:parent ?spouse ;
         dbo:occupation dbp:Politician .
  
  # Find the father of this child
  ?father1 dbo:child ?child .

  # Part 2: Abul Maal Abdul Muhith's father and their child
  ?abulMaalParent dbo:child <http://dbpedia.org/resource/Abul_Maal_Abdul_Muhith> .
  
  # Find the child of this parent
  ?child2 dbo:parent ?abulMaalParent .

  # Find the father of this second child
  ?father2 dbo:child ?child2 .

  # The query asks for the common ""father"" in both contexts
  FILTER (?father1 = ?father2)
}
```",6,7,7,3,2,3,3,71,0,0,1,0,0.0,0
965,70,test,"Give me the parent of the child, that is a royalty, of the person born, that is a politician, on 1854-05-24 and parent of the person born, that is a noble, as the birth name of George Mountbatten, 2nd Marquess of Milford Haven and spouse of the spouse of Princess Victoria of Hesse and by Rhine.","SELECT ?result WHERE { ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Noble>. ?result <http://dbpedia.org/ontology/spouse> ?v3 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v0 <http://dbpedia.org/ontology/parent> ?result . <http://dbpedia.org/resource/George_Mountbatten,_2nd_Marquess_of_Milford_Haven> <http://dbpedia.org/property/birthName> ?v5 . ?v1 <http://dbpedia.org/ontology/birthDate> ""1854-05-24""^^<http://www.w3.org/2001/XMLSchema#date> . <http://dbpedia.org/resource/Princess_Victoria_of_Hesse_and_by_Rhine> <http://dbpedia.org/ontology/spouse> ?v3 . ?v6 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v0 <http://dbpedia.org/property/birthName> ?v5 . ?v6 <http://dbpedia.org/property/father> ?v1 . ?v6 <http://dbpedia.org/ontology/parent> ?result . }","```sparql
SELECT ?parent WHERE {
  # Step 1: Identify the politician born on 1854-05-24
  ?politician dbo:birthDate ""1854-05-24""^^xsd:date ;
              rdf:type dbo:Politician .

  # Step 2: Find their child who is royalty
  ?child dbo:parent ?politician ;
         rdf:type dbo:RoyalFamilyMember .

  # Step 3: Identify the noble parent of George Mountbatten, 2nd Marquess of Milford Haven
  ?georgeMountbatten dbo:birthName ""George Mountbatten, 2nd Marquess of Milford Haven"" ;
                     dbo:parent ?nobleParent .

  # Step 4: Find the spouse of Princess Victoria of Hesse and by Rhine
  ?princessVictoria dbo:spouse ?spouse .

  # Step 5: Determine the parent of this spouse
  ?spouse dbo:parent ?parent .
}
```",8,11,9,3,3,3,3,71,0,0,1,0,0.0,0
978,19,test,"Give me the band member of the person born as the name of Chicane (musician) and band member of the professional, that is a musical artist and an artist, in .","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/associatedMusicalArtist> ?v4 . <http://dbpedia.org/resource/Chicane_(musician)> <http://xmlns.com/foaf/0.1/givenName> ?v0 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. ?v4 <http://dbpedia.org/property/birthName> ?v0 . ?result <http://dbpedia.org/ontology/associatedMusicalArtist> ?v2 . ?v2 <http://dbpedia.org/property/occupation> """"@en . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. }","```sparql
SELECT ?bandMember WHERE {
  wd:Q123456 wdt:P31/wdt:P279* wd:Q215380. # Chicane is a musician
  wd:Q123456 wdt:P735 ?bandMember.         # Band member of Chicane
  ?person wdt:P31 wd:Q5;                  # Person who is an artist and musical artist
          wdt:P569 ?birthDate;
          rdfs:label ""Sarah Brightman""@en.
  FILTER(?birthDate = ?bandMemberBirthDate)
}
```

Note: Replace `wd:Q123456` with the actual DBpedia identifier for Chicane, and adjust the query to ensure it captures the correct relationships. The query assumes a direct band member relationship and checks for Sarah Brightman as an artist and musical artist.",5,7,6,3,2,3,2,20,0,0,2,0,0.0,0
124,67,test,"Give me the military force of the war, that is an event and a military conflict and a societal event, of the awardee of British South Africa Company Medal and commander in Mahdist War and military force of the force, that is a societal event and a military conflict, of the person born on 1850-06-24.","SELECT ?result WHERE { ?v0 <http://dbpedia.org/ontology/battle> ?v6 . ?v6 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?v0 <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/British_South_Africa_Company_Medal> . ?v6 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?result <http://dbpedia.org/ontology/battle> ?v6 . ?result <http://dbpedia.org/ontology/battle> ?v3 . ?v1 <http://dbpedia.org/ontology/birthDate> ""1850-06-24""^^<http://www.w3.org/2001/XMLSchema#date> . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?v6 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. <http://dbpedia.org/resource/Mahdist_War> <http://dbpedia.org/ontology/commander> ?result . ?v3 <http://dbpedia.org/ontology/commander> ?v1 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. }","```sparql
# Step 1: Find the person born on 1850-06-24
SELECT ?person WHERE {
  ?person dbo:birthDate ""1850-06-24""^^xsd:date .
}

# Step 2: Identify the military force associated with this person
SELECT DISTINCT ?militaryForce WHERE {
  ?person dbo:commanderOf ?campaign .
  ?campaign rdf:type dbo:MilitaryConflict ;
            dbo:militaryForce ?militaryForce .
}

# Step 3: Find the awardee of the British South Africa Company Medal and commander in the Mahdist War
SELECT DISTINCT ?awardee WHERE {
  ?awardee dbo:award ""British_South_Africa_Company_Medal"" ;
           dbo:commanderOf ?mahdistCampaign .
  ?mahdistCampaign rdf:type dbo:MilitaryConflict ;
                   rdfs:label ""Mahdist_War""@en .
}

# Step 4: Identify the military force associated with this awardee
SELECT DISTINCT ?militaryForce WHERE {
  ?awardee dbo:commanderOf ?campaign .
  ?campaign rdf:type dbo:MilitaryConflict ;
            dbo:militaryForce ?militaryForce .
}

# Step 5: Find the common military force between these two individuals
SELECT DISTINCT ?commonMilitaryForce WHERE {
  { ?person1 dbo:commanderOf ?campaign1 .
    ?campaign1 rdf:type dbo:MilitaryConflict ;
               dbo:militaryForce ?commonMilitaryForce . }
  
  UNION
  
  { ?awardee dbo:commanderOf ?campaign2 .
    ?campaign2 rdf:type dbo:MilitaryConflict ;
               dbo:militaryForce ?commonMilitaryForce . }
}
```",7,12,8,3,3,3,3,71,0,0,3,0,0.0,0
645,64,test,"Give me the commander in the force of the commander in Siege of Madrid and military force of Spanish Civil War and leader of the office, that is a government agency and an organisation, of the native of Restoration (Spain).",SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?v2 <http://dbpedia.org/ontology/commander> ?result . ?v0 <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Restoration_(Spain)> . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/GovernmentAgency>. ?result <http://dbpedia.org/ontology/battle> <http://dbpedia.org/resource/Spanish_Civil_War> . ?v1 <http://dbpedia.org/ontology/leader> ?result . <http://dbpedia.org/resource/Siege_of_Madrid> <http://dbpedia.org/ontology/commander> ?v3 . ?v2 <http://dbpedia.org/ontology/commander> ?v3 . ?v0 <http://dbpedia.org/property/office> ?v1 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?person WHERE {
  ?person dbo:nationality dbr:Spain .
  ?person dbo:birthPlace dbr:Ferrol .
  ?person dbo:occupation dbr:Military_officer ;
          dbo:officeHolder [
            a dbo:Commander ;
            dbo:commandedBy ?siegeOfMadrid
          ] .
  ?siegeOfMadrid rdfs:label ""Siege of Madrid""@en .
  ?person dbo:leaderOf [
    a dbo:Government_agency ;
    dbo:head dbr:Francoist_Spain
  ] .
}
```",7,9,8,3,3,3,3,71,0,0,2,0,0.0,0
976,58,test,"Give me the office of Mustafa Şentop and office of the mayor, that is a politician and an office holder and Turkish, of Nation Alliance (Turkey) and office of the person born as the birth name of Naci Bostancı.",SELECT ?result WHERE { ?v0 <http://dbpedia.org/property/office> ?result . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v5 <http://dbpedia.org/ontology/nationality> <http://dbpedia.org/resource/Turkey>. ?v5 <http://dbpedia.org/property/office> ?result . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v0 <http://dbpedia.org/property/birthName> ?v4 . <http://dbpedia.org/resource/Nation_Alliance_(Turkey)> <http://dbpedia.org/property/leader> ?v5 . <http://dbpedia.org/resource/Naci_Bostancı> <http://dbpedia.org/property/birthName> ?v4 . <http://dbpedia.org/resource/Mustafa_Şentop> <http://dbpedia.org/property/office> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?mustafaOffice ?mayorName ?mayorOffice ?naciBostanciOffice WHERE {
  # Mustafa Şentop's office
  OPTIONAL { 
    dbr:Mustafa_Şentop dbo:office ?mustafaOffice .
  }

  # Mayor from Nation Alliance (Turkey)
  OPTIONAL {
    ?person a dbo:Politician ;
            dbo:nationality dbr:Turkish_people ;
            dbo:partyMember dbr:Nation_Alliance_(Turkey) ;
            dbo:office ?mayorOffice .
    FILTER EXISTS { ?person dbo:position ""Mayor""@en }
    BIND (STR(?person) AS ?mayorName)
  }

  # Office of Naci Bostancı
  OPTIONAL {
    ?naciBostanci a dbo:Person ;
                  rdfs:label ""Naci Bostancı""@en ;
                  dbo:birthName ""Naci Bostancı"" .
    ?naciBostanci dbo:office ?naciBostanciOffice .
  }
}
```",6,9,7,3,3,3,3,71,0,0,1,0,0.0,0
892,71,test,"Give me the landmark at elevation of the award of the member of E-girls and entity in the administration, that is Italian and a region and a settlement and an administrative region, of the party, that is a political party and an organisation, of Andrea Cozzolino and entity in the profession of the true self of Enrico Crolla.","SELECT ?result WHERE { ?v8 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. ?v8 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/AdministrativeRegion>. ?v8 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Italy>. ?v1 <http://dbpedia.org/property/occupation> ?v2 . ?result <http://dbpedia.org/ontology/country> ?v2 . ?v7 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/PoliticalParty>. ?result <http://dbpedia.org/ontology/elevation> ?v5 . ?v4 <http://dbpedia.org/property/awards> ?v5 . ?v8 <http://dbpedia.org/property/leaderParty> ?v7 . <http://dbpedia.org/resource/Andrea_Cozzolino> <http://dbpedia.org/ontology/party> ?v7 . ?v1 <http://xmlns.com/foaf/0.1/givenName> ""Enrico Crolla""@en . ?v8 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Region>. ?result <http://dbpedia.org/ontology/province> ?v8 . <http://dbpedia.org/resource/E-girls> <http://dbpedia.org/ontology/bandMember> ?v4 . ?v7 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. }","```sparql
# Step 1: Find a member of E-girls who has won an award and get the elevation
SELECT ?member ?award ?elevation WHERE {
  ?member dbo:memberOf dbr:E-girls .
  ?member dbo:award ?award .
  ?award dbo:elevation ?elevation .
}

# Step 2: Find an Italian region and settlement at that elevation involved in administration
SELECT DISTINCT ?landmark WHERE {
  ?region a dbo:Region ;
          dbp:country ""Italy""^^xsd:string ;
          dbo:settlement ?settlement ;
          dbo:elevation ?elevation .
  FILTER(?elevation = <ELEVATION_FROM_STEP_1>)
}

# Step 3: Find the political party of Andrea Cozzolino
SELECT DISTINCT ?party WHERE {
  dbr:Andrea_Cozzolino dbo:politicalParty ?party .
  ?party a dbo:PoliticalParty ;
         dbo:organisation ""true""^^xsd:boolean .
}

# Step 4: Find the profession related to Enrico Crolla's true self
SELECT DISTINCT ?profession WHERE {
  ?enrico dbr:Enrico_Crolla ;
          dbo:trueSelf ?self .
  ?self dbo:profession ?profession .
}
```

Note: Replace `<ELEVATION_FROM_STEP_1>` with the actual elevation value obtained from Step 1.",9,15,10,3,3,3,3,71,0,0,2,0,0.0,0
445,57,test,Give me the entity in England and entity in the award of George H. Cameron and death place of the awardee of the establishment of 1820-03-10.,"SELECT ?result WHERE { <http://dbpedia.org/resource/George_H._Cameron> <http://dbpedia.org/property/awards> ?v3 . ?v5 <http://dbpedia.org/property/awards> ?v0 . ?result <http://dbpedia.org/ontology/location> <http://dbpedia.org/resource/England> . ?v0 <http://dbpedia.org/ontology/foundingDate> ""1820-03-10""^^<http://www.w3.org/2001/XMLSchema#date> . ?v5 <http://dbpedia.org/ontology/deathPlace> ?result . ?result <http://dbpedia.org/ontology/country> ?v3 . }","```sparql
# Step 1: Find the award associated with George H. Cameron
SELECT ?award WHERE {
    ?person foaf:name ""George H. Cameron""@en .
    ?person dbo:awardedBy ?award .
}

# Step 2: Find the awardee of that award and their place of death
SELECT ?awardee ?deathPlace WHERE {
    ?award dbo:recipient ?awardee .
    ?awardee dbo:placeOfBirth ?birthPlace .
    OPTIONAL { ?awardee dbo:deathPlace ?deathPlace . }
}

# Step 3: Identify an entity located in England
SELECT ?entity WHERE {
    ?entity dbo:location ?location .
    ?location rdfs:label ""England""@en .
}

# Step 4: Check for any connection to the establishment date (March 10, 1820)
SELECT ?establishedEntity WHERE {
    ?establishedEntity dbo:dateEstablished ?date .
    FILTER (?date = ""1820-03-10""^^xsd:date) .
}
```",6,6,7,3,3,3,3,71,0,0,1,0,0.0,0
382,18,test,"Give me the birthplace of the manager, that is a soccer manager and an athlete and a sports manager, of the player in Lukas Kübler and landmark at elevation of the award of Harry Combes.",SELECT ?result WHERE { ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsManager>. <http://dbpedia.org/resource/Lukas_Kübler> <http://dbpedia.org/ontology/team> ?v1 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Athlete>. ?result <http://dbpedia.org/ontology/elevation> ?v3 . ?v1 <http://dbpedia.org/ontology/manager> ?v2 . <http://dbpedia.org/resource/Harry_Combes> <http://dbpedia.org/property/awards> ?v3 . ?v2 <http://dbpedia.org/ontology/birthPlace> ?result . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerManager>. },"```sparql
# Step 1: Identify Lukas Kübler's Manager
SELECT ?manager WHERE {
  ?player dbo:birthName ""Lukas Kübler""@en .
  ?player dbo:position dbr:Soccer_Midfielder .
  ?team dbo:currentSquad ?player .
  ?team dbo:coach ?manager .
}

# Step 2: Verify Manager's Roles
SELECT DISTINCT ?manager WHERE {
  VALUES (?role1 ?role2) { (dbr:Soccer_Manager dbr:Athlete) (dbr:Sports_Manager dbr:Athlete) }
  ?manager rdf:type ?role1 .
  ?manager rdf:type ?role2 .
}

# Step 3: Find Harry Combes' Award
SELECT ?award WHERE {
  ?person dbo:birthName ""Harry Combes""@en .
  ?person dbo:honoraryTitle ?award .
}

# Step 4: Determine Elevation of the Award (assuming it's a geographical location)
SELECT ?elevation WHERE {
  ?award geo:elevation ?elevation .
}

# Step 5: Find Landmark at that Elevation
SELECT DISTINCT ?landmark WHERE {
  ?landmark geo:elevation ?elevation .
}

# Step 6: Get Birthplace of the Manager
SELECT ?birthPlace WHERE {
  ?manager dbo:birthPlace ?birthPlace .
}
```",5,8,6,3,2,3,2,20,0,0,1,0,0.0,0
865,70,test,"Give me the native of the residence, that is a country, of Ram Jaipal Singh Yadav and father of the child of the father of Abul Maal Abdul Muhith and father of the child, that is a politician, of the spouse of Syeda Shahar Banu.",SELECT ?result WHERE { ?v4 <http://dbpedia.org/property/father> ?v3 . <http://dbpedia.org/resource/Syeda_Shahar_Banu> <http://dbpedia.org/ontology/spouse> ?v2 . ?v6 <http://dbpedia.org/property/father> ?result . ?v6 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v6 <http://dbpedia.org/property/father> ?v2 . ?result <http://dbpedia.org/ontology/birthPlace> ?v0 . <http://dbpedia.org/resource/Abul_Maal_Abdul_Muhith> <http://dbpedia.org/property/father> ?v3 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. <http://dbpedia.org/resource/Ram_Jaipal_Singh_Yadav> <http://dbpedia.org/property/residence> ?v0 . ?v4 <http://dbpedia.org/property/father> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?native WHERE {
  # Step 1: Find Ram Jaipal Singh Yadav's residence country
  ?ram a dbo:Person;
      foaf:name ""Ram Jaipal Singh Yadav""@en.
  OPTIONAL { ?ram dbo:residence ?residence. }
  FILTER EXISTS { ?residence a dbo:Country. }
  
  # Step 2: Identify Abul Maal Abdul Muhith and his father
  ?abulMaal a dbo:Person;
            foaf:name ""Abul Maal Abdul Muhith""@en.
  OPTIONAL { ?abulMaal dbo:father ?fatherOfAbul. }
  
  # Step 3: Find Syeda Shahar Banu's spouse and their child who is a politician
  ?syedaShaharBanu a dbo:Person;
                   foaf:name ""Syeda Shahar Banu""@en.
  OPTIONAL { ?syedaShaharBanu dbo:spouse ?spouse. }
  OPTIONAL { ?spouse dbo:child ?politicianChild. }
  FILTER EXISTS { ?politicianChild a dbo:Politician. }

  # Step 4: Determine the native of the country where Ram Jaipal Singh Yadav resides
  ?residence dbo:nativeLanguage ?native.
}
```",8,10,9,3,3,3,3,71,0,0,1,0,0.0,0
433,70,test,"Give me the associated musical artist of the person born, that is a musical artist and an artist, as Paul Laurence Dunbar Chambers Jr. and professional in the profession of the writer of Slowhand at 70 – Live at the Royal Albert Hall and associated musical artist of the associated musical artist, that is an artist and a musical artist, of the associated musical artist, that is a musical artist and an artist, of Ornette Coleman.","SELECT ?result WHERE { ?v4 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v7 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. <http://dbpedia.org/resource/Ornette_Coleman> <http://dbpedia.org/ontology/associatedMusicalArtist> ?v0 . ?result <http://dbpedia.org/property/occupation> ?v3 . ?v1 <http://dbpedia.org/property/occupation> ?v3 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?v7 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?v0 <http://dbpedia.org/ontology/associatedMusicalArtist> ?v7 . ?v7 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . <http://dbpedia.org/resource/Slowhand_at_70_–_Live_at_the_Royal_Albert_Hall> <http://dbpedia.org/property/writer> ?v1 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. ?v4 <http://dbpedia.org/property/birthName> ""Paul Laurence Dunbar Chambers Jr.""@en . }","```sparql
SELECT ?finalArtist WHERE {
  # Paul Chambers' profession and associated artist
  ?paulChambers dbo:profession dbr:Jazz_bassist .
  ?paulChambers dbo:associatedMusicalArtist dbr:Miles_Davis .

  # Eric Clapton's album writer and associated artist
  ?slowhandAlbum dbo:writer dbr:Eric_Clapton .
  ?slowhandAlbum rdfs:label ""Slowhand at 70 – Live at the Royal Albert Hall""@en .
  ?ericClapton dbo:associatedMusicalArtist dbr:John_Mayall .

  # Ornette Coleman's associated artist
  ?ornetteColeman dbo:associatedMusicalArtist dbr:Don_Cherry .

  # Don Cherry's associated artist
  ?donCherry dbo:associatedMusicalArtist ?finalArtist .
  
  FILTER(?finalArtist = dbr:Charlie_Haden)
}
```",8,14,9,3,3,3,3,71,0,0,4,0,0.0,0
645,58,test,"Give me the leader of the office, that is a government agency and an organisation, of the native of Restoration (Spain) and military force of the force, that is an event and a military conflict and a societal event, of Francisco Largo Caballero and commander in Battle of Jarama.",SELECT ?result WHERE { ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v5 <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Francisco_Largo_Caballero> . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?v2 <http://dbpedia.org/ontology/leader> ?result . ?result <http://dbpedia.org/ontology/battle> ?v5 . <http://dbpedia.org/resource/Battle_of_Jarama> <http://dbpedia.org/ontology/commander> ?result . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?v1 <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Restoration_(Spain)> . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/GovernmentAgency>. ?v1 <http://dbpedia.org/property/office> ?v2 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?leader WHERE {
  ?event dbo:type dbr:Military_conflict .
  ?event dbo:partOf dbr:Spanish_Civil_War .
  
  ?person dbo:nationality dbr:Spain ;
          dbo:birthPlace dbr:Restoration_(Spain) ;
          dbo:commanderInBattle dbr:Battle_of_Jarama .

  ?office dbo:type dbo:Government_agency ;
          dbo:leader ?leader ;
          dbo:member ?person .
  
  FILTER (?person = dbr:Fran%C3%A7ois_Largo_Caballero)
}
```",6,11,7,3,3,3,3,71,0,0,1,0,0.0,0
158,20,test,"Give me the entity in the award, that is a country, of the reference to Adelbert Cronkhite and party of the successor, that is a prime minister and an office holder and a politician, of the person deceased, that is an office holder and a politician, on 1945-09-15.","SELECT ?result WHERE { ?v4 <http://dbpedia.org/ontology/deathDate> ""1945-09-15""^^<http://www.w3.org/2001/XMLSchema#date> . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/PrimeMinister>. ?v5 <http://dbpedia.org/ontology/party> ?result . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v4 <http://dbpedia.org/ontology/successor> ?v5 . ?v1 <http://dbpedia.org/property/awards> ?v2 . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v1 <http://xmlns.com/foaf/0.1/name> ""Adelbert Cronkhite""@en . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. ?result <http://dbpedia.org/ontology/country> ?v2 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT DISTINCT ?country WHERE {
  # Step 1: Find Adelbert Cronkhite and any associated award
  ?cronkhite dbo:name ""Adelbert Cronkhite""@en .
  
  OPTIONAL {
    ?award dbo:recipient ?cronkhite ;
           dbo:country ?country .
  }
  
  # Step 2: Identify the successor's party
  ?successor dbo:predecessor ?cronkhite ;
             dbo:party ?party ;
             a dbo:PrimeMinister ;
             a dbo:OfficeHolder ;
             a dbo:Politician .

  # Step 3: Find the deceased person and their successor
  ?deceased dbo:dateOfDeath ""1945-09-15""^^xsd:date ;
            a dbo:OfficeHolder, dbo:Politician .
  
  ?successor2 dbo:predecessor ?deceased ;
              a dbo:PrimeMinister ;
              a dbo:OfficeHolder ;
              a dbo:Politician .

  # Step 4: Ensure the successor's party matches
  FILTER(?party = ?successor2)
}
```",6,12,7,3,2,3,2,20,0,0,1,0,0.0,0
36,26,test,"Give me the person born in 1971 and person born as the birth name of Ayo Makun and actor of the claim to fame, that is a film, of Lepacious Bose.","SELECT ?result WHERE { ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Film>. ?result <http://dbpedia.org/ontology/birthYear> ""1971""^^<http://www.w3.org/2001/XMLSchema#gYear> . ?v4 <http://dbpedia.org/ontology/starring> ?result . <http://dbpedia.org/resource/Ayo_Makun> <http://dbpedia.org/property/birthName> ?v1 . ?result <http://dbpedia.org/property/birthName> ?v1 . <http://dbpedia.org/resource/Lepacious_Bose> <http://dbpedia.org/ontology/knownFor> ?v4 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?person WHERE {
  # Person born in 1971
  ?person dbo:birthYear ""1971""^^xsd:gYear .

  # Birth name of Ayo Makun
  ?ayoMakun dbo:birthName ?birthName .
  FILTER (?ayoMakun = dbr:Ayo_Makun) 
  ?person dbp:birthName ?birthName .

  # Actor with claim to fame being a film by Lepacious Bose
  ?actor dbo:claimToFame ?film .
  ?film dbo:director ?lepaBose .
  FILTER (?lepaBose = dbr:Lepa_Bose) 
  ?person dbo:profession dbr:Actor .

  # Ensure the person is the same in all conditions
  FILTER(?person = ?actor)
}
```",5,6,6,2,3,2,3,28,0,0,1,0,0.0,0
933,60,test,"Give me the band of the band, that is a group and a band and an organisation, of the person born, that is a musical artist, on 1947-04-21 and band of the band of the band, that is an artist and a musical artist, of The Ramong Sound.","SELECT ?result WHERE { ?v5 <http://dbpedia.org/ontology/birthDate> ""1947-04-21""^^<http://www.w3.org/2001/XMLSchema#date> . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Group>. ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?v4 <http://dbpedia.org/ontology/associatedMusicalArtist> ?v2 . <http://dbpedia.org/resource/The_Ramong_Sound> <http://dbpedia.org/ontology/associatedMusicalArtist> ?v4 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Band>. ?v5 <http://dbpedia.org/ontology/associatedMusicalArtist> ?v0 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. ?v0 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?v2 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . }","```sparql
SELECT ?band WHERE {
  # Step 1: Find the person born on 1947-04-21 who is a musical artist
  ?person dbo:birthday ""1947-04-21""^^xsd:date ;
          rdf:type dbo:MusicalArtist .
  
  # Step 2: Find the band associated with this person that is both a group and an organization
  ?band dbo:member ?person ;
        rdf:type dbo:Band, dbo:Organization .

  # Step 3: Find which band The Ramong Sound belongs to
  ?ramongSound dbo:band ?finalBand .
  FILTER EXISTS { ?ramongSound rdf:type dbo:Artist, dbo:MusicalArtist . }
  FILTER (?finalBand = ?band)
}
```",6,12,7,3,2,3,3,71,0,0,4,0,0.0,0
926,69,test,"Give me the father of the father of the spouse of Neşerek Kadın and successor of the child of Ahmed III and child of the father, that is a royalty, of the parent, that is a royalty, of Beyhan Sultan (daughter of Mustafa III).",SELECT ?result WHERE { ?v4 <http://dbpedia.org/property/father> ?v2 . ?v6 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Ahmed_III> . ?v6 <http://dbpedia.org/ontology/successor> ?result . ?v2 <http://dbpedia.org/property/father> ?result . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v0 <http://dbpedia.org/ontology/child> ?result . ?v5 <http://dbpedia.org/property/father> ?v0 . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. <http://dbpedia.org/resource/Beyhan_Sultan_(daughter_of_Mustafa_III)> <http://dbpedia.org/ontology/parent> ?v5 . <http://dbpedia.org/resource/Neşerek_Kadın> <http://dbpedia.org/ontology/spouse> ?v4 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?fatherOfSuccessor WHERE {
    # Neşerek Kadın's spouse
    ?neşerekSpouse dbo:spouse dbr:Neşerek_Kadın .
    
    # Father of Neşerek Kadın's spouse
    ?fatherOfSpouse dbo:child ?neşerekSpouse .
    
    # Successor of the father of Neşerek Kadın's spouse
    ?successor dbo:succeededBy ?fatherOfSpouse .
    
    # Ensure successor is a royalty and child of Ahmed III
    ?successor dbo:royalty ""true""^^xsd:boolean ;
               dbo:child dbr:Ahmed_III .
    
    # Beyhan Sultan's parent (Mustafa III)
    ?beyhanParent dbo:parent dbr:Beyhan_Sultan .
    
    # Mustafa III's parent
    ?mustafaParent dbo:child ?beyhanParent ;
                   rdf:type dbo:Monarch .
    
    # Ahmed III's child who is a royalty
    ?ahmedChild dbo:child dbr:Ahmed_III ;
                rdf:type dbo:Monarch .
    
    # Ensure the successor is also the child of Mustafa III's parent
    ?successor dbo:child ?mustafaParent .
    
    # Find the father of the successor
    ?fatherOfSuccessor dbo:parent ?successor .
}
```",8,10,9,3,3,3,3,71,0,0,1,0,0.0,0
987,57,test,"Give me the entity in the region, that is a country, of Central European Time and birth place of Dado Polumenta and birth place of the actor of the show, that is a film, with Emir Hadžihafizbegović.",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/country> ?v0 . ?v1 <http://dbpedia.org/property/starring> ?v4 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Film>. <http://dbpedia.org/resource/Dado_Polumenta> <http://dbpedia.org/ontology/birthPlace> ?result . ?v4 <http://dbpedia.org/ontology/birthPlace> ?result . ?v0 <http://dbpedia.org/property/timeZone> <http://dbpedia.org/resource/Central_European_Time> . ?v1 <http://dbpedia.org/ontology/starring> <http://dbpedia.org/resource/Emir_Hadžihafizbegović> . },"```sparql
# Step 1: Get Dado Polumenta's birthplace
SELECT ?birthPlace WHERE {
  wd:Q123456 wdt:P19 ?birthPlace .
}

# Step 2: Get films featuring Emir Hadžihafizbegović and actors' birthplaces
SELECT DISTINCT ?film ?actorBirthPlace WHERE {
  wd:Q654321 wdt:P161 ?film . # Emir Hadžihafizbegović's film roles
  ?film wdt:P162 ?actor .
  ?actor wdt:P19 ?actorBirthPlace .
}

# Step 3: Get countries in the Central European Time region
SELECT DISTINCT ?country WHERE {
  wd:Q123456 wdt:P131* ?place . # Dado Polumenta's country of residence or birth
  ?place wdt:P421 wd:Q11111 . # Q11111 is a placeholder for CET timezone entity
}

# Step 4: Find common country satisfying all conditions
SELECT DISTINCT ?commonCountry WHERE {
  { SELECT ?birthPlace WHERE {
    wd:Q123456 wdt:P19 ?birthPlace .
  }}
  
  UNION
  
  { SELECT ?actorBirthPlace WHERE {
    wd:Q654321 wdt:P161 ?film .
    ?film wdt:P162 ?actor .
    ?actor wdt:P19 ?actorBirthPlace .
  }}

  UNION

  { SELECT ?country WHERE {
    wd:Q123456 wdt:P131* ?place .
    ?place wdt:P421 wd:Q11111 .
  }}
  
  FILTER (?birthPlace = ?actorBirthPlace && ?birthPlace = ?country)
}
```

Note: Replace `wd:Q123456` with the actual DBpedia entity ID for Dado Polumenta and `wd:Q654321` with the entity ID for Emir Hadžihafizbegović. Also, replace `wd:Q11111` with the correct DBpedia entity for the Central European Time zone.",6,8,7,3,3,3,3,71,0,0,1,0,0.0,0
41,28,test,"Give me the party of the person born as David Declan Costello and party of the work, that is an office holder, of yes and party of the leader, that is a politician and an office holder, of 2005 Castlereagh Borough Council election.","SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v5 <http://dbpedia.org/property/author> ""yes""@en . ?v1 <http://dbpedia.org/ontology/party> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v3 <http://dbpedia.org/property/birthName> ""David Declan Costello""@en . ?v5 <http://dbpedia.org/ontology/party> ?result . ?v3 <http://dbpedia.org/ontology/party> ?result . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. <http://dbpedia.org/resource/2005_Castlereagh_Borough_Council_election> <http://dbpedia.org/property/leader> ?v1 . }","```sparql
# Query for David Declan Costello's Party
SELECT ?party WHERE {
  ?person foaf:name ""David Declan Costello""@en .
  ?person dbo:politicalParty ?party .
}

UNION

# Assuming ""yes"" refers to a specific office or role, this part is ambiguous without further context.
# Placeholder query for an office holder associated with ""yes""
SELECT ?officeHolderParty WHERE {
  ?officeHolder foaf:name ""Yes""@en .
  ?officeHolder dbo:politicalParty ?officeHolderParty .
}

UNION

# Query for the leader of the 2005 Castlereagh Borough Council Election
SELECT ?leaderParty WHERE {
  ?election dbo:electionDate ?date .
  FILTER(YEAR(?date) = 2005 && STRSTARTS(STR(?election), ""Castlereagh Borough Council""))
  ?candidate dbo:officeHolderOf ?position .
  ?candidate dbo:politicalParty ?leaderParty .
  ?position rdfs:label ""Leader""@en .
}
```",6,9,7,2,3,2,3,28,0,0,1,0,0.0,0
892,70,test,"Give me the entity in the profession of Henri Crolla and entity in the administration, that is Italian and a region and a settlement and an administrative region, of the party, that is a political party and an organisation, of Andrea Cozzolino and landmark at elevation of the award of the member of E-girls.",SELECT ?result WHERE { ?v0 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Italy>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Region>. ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. ?v0 <http://dbpedia.org/property/leaderParty> ?v5 . ?result <http://dbpedia.org/ontology/country> ?v3 . ?result <http://dbpedia.org/ontology/elevation> ?v6 . ?v1 <http://dbpedia.org/property/awards> ?v6 . <http://dbpedia.org/resource/Andrea_Cozzolino> <http://dbpedia.org/ontology/party> ?v5 . <http://dbpedia.org/resource/E-girls> <http://dbpedia.org/ontology/bandMember> ?v1 . ?result <http://dbpedia.org/ontology/province> ?v0 . <http://dbpedia.org/resource/Henri_Crolla> <http://dbpedia.org/property/occupation> ?v3 . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/PoliticalParty>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/AdministrativeRegion>. },"```sparql
# Query 1: Henri Crolla's Profession
SELECT ?profession WHERE {
  wd:Q123456 wdt:P106 ?occupation .
  ?occupation rdfs:label ?profession .
  FILTER (lang(?profession) = 'en')
}

# Query 2: Andrea Cozzolino's Party
SELECT ?party WHERE {
  wd:Q654321 wdt:P102 ?party .
  ?party rdf:type/wdt:P31* wd:Q11424 .
  FILTER NOT EXISTS { ?party rdf:type/wdt:P31* wd:Q43229 } # Exclude organizations that are not political parties
}

# Query 3: Italian Region, Settlement, and Administrative Region of the Party
SELECT DISTINCT ?region ?settlement WHERE {
  ?party wdt:P131 ?location .
  ?location wdt:P17 wd:IT .
  OPTIONAL { ?location rdfs:label ?region . FILTER (lang(?region) = 'en') }
  OPTIONAL { ?location wdt:P31/wdt:P279* wd:Q515 . ?location rdfs:label ?settlement . FILTER (lang(?settlement) = 'en') }
}

# Query 4: E-girls Member Award and Landmark at Elevation
SELECT DISTINCT ?award ?landmark WHERE {
  ?member wdt:P106 wd:Q11424 ; # Assuming Q11424 is the category for performers
          wdt:P166 ?award .
  ?award wdt:P2044 ?elevation .
  ?landmark wdt:P2044 ?elevation ;
            wdt:P31/wdt:P279* wd:Q486972 .
}
```",8,14,9,3,3,3,3,71,0,0,2,0,0.0,0
445,66,test,"Give me the death place of the awardee of Royal Astronomical Society and entity in the residence, that is a country, of Anna Sharkey and entity in the award of the commander in Battle of Saint-Mihiel.",SELECT ?result WHERE { ?v6 <http://dbpedia.org/ontology/deathPlace> ?result . ?v6 <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/Royal_Astronomical_Society> . <http://dbpedia.org/resource/Anna_Sharkey> <http://dbpedia.org/property/residence> ?v3 . ?v1 <http://dbpedia.org/property/awards> ?v2 . ?result <http://dbpedia.org/ontology/country> ?v2 . <http://dbpedia.org/resource/Battle_of_Saint-Mihiel> <http://dbpedia.org/ontology/commander> ?v1 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. ?result <http://dbpedia.org/ontology/location> ?v3 . },"```sparql
# Query 1: Find an awardee of the Royal Astronomical Society
SELECT ?awardee WHERE {
  ?awardee dbo:award dbpedia:Royal_Astronomical_Society.
}

# Query 2: Get the death place of that awardee
SELECT ?deathPlace WHERE {
  ?person dbo:award dbpedia:Royal_Astronomical_Society.
  ?person dbo:placeOfBirth ?birthPlace.
  ?person dbo:deathPlace ?deathPlace.
}

# Query 3: Identify Anna Sharkey's residence country
SELECT ?country WHERE {
  dbpedia:Anna_Sharkey dbo:residenceCountry ?country.
}

# Query 4: Determine the commander in the Battle of Saint-Mihiel and their award
SELECT ?commander ?award WHERE {
  ?battle dbo:commander ?commander.
  ?commander dbo:receivedAward ?award.
  FILTER(STRSTARTS(LCASE(?battle), ""dbpedia:battle_of_saint-mihiel""))
}
```",7,8,8,3,3,3,3,71,0,0,1,0,0.0,0
445,62,test,"Give me the entity in United Kingdom and entity in the residence, that is a country, of the resident, that is an athlete, of Great Britain and death place of the awardee of the establishment of 1820-03-10.","SELECT ?result WHERE { ?v6 <http://dbpedia.org/ontology/deathPlace> ?result . ?v4 <http://dbpedia.org/property/residence> ?v3 . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Athlete>. ?v6 <http://dbpedia.org/property/awards> ?v0 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. ?v4 <http://dbpedia.org/property/residence> <http://dbpedia.org/resource/Great_Britain> . ?v0 <http://dbpedia.org/ontology/foundingDate> ""1820-03-10""^^<http://www.w3.org/2001/XMLSchema#date> . ?result <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/United_Kingdom> . ?result <http://dbpedia.org/ontology/location> ?v3 . }","```sparql
# Step 1: Find an establishment related to 1820-03-10
SELECT ?establishment WHERE {
  ?establishment dbo:foundingDate ""1820-03-10""^^xsd:date .
}

# Step 2: Identify the awardee of this establishment
SELECT ?awardee WHERE {
  ?award dbo:recipient ?person .
  ?award dbo:awardingBody ?establishment .
  FILTER(?establishment IN (SELECT ?establishment WHERE {
    ?establishment dbo:foundingDate ""1820-03-10""^^xsd:date .
  }))
}

# Step 3: Determine the death place of this awardee
SELECT ?deathPlace WHERE {
  ?awardee dbo:deathPlace ?deathPlace .
  FILTER(?awardee IN (SELECT ?awardee WHERE {
    ?award dbo:recipient ?awardee .
    ?award dbo:awardingBody ?establishment .
    FILTER(?establishment IN (SELECT ?establishment WHERE {
      ?establishment dbo:foundingDate ""1820-03-10""^^xsd:date .
    }))
  }))
}

# Step 4: Find a notable athlete from Great Britain
SELECT ?athlete WHERE {
  ?athlete dbo:nationality dbr:United_Kingdom ;
           rdf:type dbo:Athlete .
}

# Step 5: Identify the residence country of this athlete
SELECT ?residenceCountry WHERE {
  ?athlete dbo:residenceLocation ?location .
  ?location dbo:countryName ?residenceCountry .
  FILTER(?athlete IN (SELECT ?athlete WHERE {
    ?athlete dbo:nationality dbr:United_Kingdom ;
             rdf:type dbo:Athlete .
  }))
}

# Step 6: Combine the results
SELECT DISTINCT ?ukEntity ?residenceCountryEntity WHERE {
  # Entity in United Kingdom related to death place of awardee
  ?deathPlace dbo:countryName dbr:United_Kingdom .
  
  # Entity in residence country (which is a country) of athlete
  ?athlete dbo:nationality dbr:United_Kingdom ;
           rdf:type dbo:Athlete .
  ?athlete dbo:residenceLocation ?location .
  ?location dbo:countryName ?residenceCountry .
  FILTER(?residenceCountry != ""United Kingdom"")
  
  # Bind the entities
  BIND(?deathPlace AS ?ukEntity)
  BIND(?residenceCountry AS ?residenceCountryEntity)
}
```",7,9,8,3,3,3,3,71,0,0,1,0,0.0,0
507,59,test,"Give me the director of the movie, that is a movie and a work, with the person born on 1919-06-17 and spouse of the person born as the birth name of Anne V. Coates.","SELECT ?result WHERE { ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?v5 <http://dbpedia.org/ontology/director> ?result . ?v5 <http://dbpedia.org/property/starring> ?v0 . ?result <http://dbpedia.org/ontology/spouse> ?v2 . ?v0 <http://dbpedia.org/ontology/birthDate> ""1919-06-17""^^<http://www.w3.org/2001/XMLSchema#date> . <http://dbpedia.org/resource/Anne_V._Coates> <http://dbpedia.org/property/birthName> ?v3 . ?v2 <http://dbpedia.org/property/birthName> ?v3 . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Film>. }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT ?director WHERE {
  # Step 1: Find the person born on 1919-06-17
  ?person dbo:birthday ""1919-06-17""^^xsd:date .
  
  # Step 2: Check if this person is married to someone with birth name Anne V. Coates
  ?person dbo:spouse ?spouse .
  ?spouse foaf:name ""Anne V. Coates""@en .

  # Step 3: Find movies directed by this person
  ?movie dbo:director ?person ;
         a dbo:Film ;
         a dbo:CreativeWork .

  # Return the director of such a movie
  BIND(?person AS ?director)
}
```",6,8,7,3,2,3,3,71,0,0,1,0,0.0,0
326,9,test,"Give me the person decedent at the region coded, that is a settlement, as 442/760 and professional in the profession of Susanne Lewis.","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/deathPlace> ?v1 . ?result <http://dbpedia.org/property/occupation> ?v3 . <http://dbpedia.org/resource/Susanne_Lewis> <http://dbpedia.org/property/occupation> ?v3 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. ?v1 <http://dbpedia.org/ontology/areaCode> ""442/760"" . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT ?person ?name WHERE {
  ?settlement dbo:postalCode ""442/760"" .
  
  ?person dbo:residence ?settlement ;
          foaf:name ?name ;
          dbo:dateOfDeath ?deathDate .

  OPTIONAL { 
    ?susanne foaf:name ""Susanne Lewis""@en .
    ?profession dbo:employee ?susanne .
    ?person dbo:occupation ?profession .
  }

  FILTER EXISTS {
    ?susanne foaf:name ""Susanne Lewis""@en .
    ?profession dbo:employee ?susanne .
    ?person dbo:occupation ?profession .
  }
}
```",4,5,5,2,2,2,2,9,0,0,6,0,0.0,0
200,8,test,Give me the band member of the band of Revenge (Canadian band) and reference to Angelcorpse.,"SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/associatedMusicalArtist> ?v2 . <http://dbpedia.org/resource/Revenge_(Canadian_band)> <http://dbpedia.org/ontology/associatedMusicalArtist> ?v2 . ?result <http://xmlns.com/foaf/0.1/name> ""Angelcorpse""@en . }","```sparql
# Query to find band members of Revenge
SELECT ?member WHERE {
  ?band rdf:type dbo:MusicalBand ;
        foaf:name ""Revenge""@en .
  ?band dbo:bandMember ?member .
}

UNION

# Query to find any reference or connection between Revenge and Angelcorpse
SELECT DISTINCT ?reference WHERE {
  { 
    ?band rdf:type dbo:MusicalBand ;
          foaf:name ""Revenge""@en .
    ?statement ?p ?o .
    FILTER(CONTAINS(LCASE(STR(?o)), LCASE(""angelcorpse"")))
  }
  
  UNION
  
  {
    ?band rdf:type dbo:MusicalBand ;
          foaf:name ""Angelcorpse""@en .
    ?statement ?p ?o .
    FILTER(CONTAINS(LCASE(STR(?o)), LCASE(""revenge"")))
  }
}
```",3,3,4,2,2,2,2,9,0,0,1,0,0.0,0
124,66,test,"Give me the military force of the war, that is an event and a military conflict and a societal event, of Frank Rhodes (British Army officer) and commander in the war, that is a societal event and a military conflict, of A Field Battery, Royal Australian Artillery and military force of the force, that is a societal event and a military conflict, of the person born on 1850-06-24.","SELECT ?result WHERE { <http://dbpedia.org/resource/Frank_Rhodes_(British_Army_officer)> <http://dbpedia.org/ontology/battle> ?v6 . ?v6 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?v6 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?result <http://dbpedia.org/ontology/battle> ?v6 . ?v2 <http://dbpedia.org/ontology/commander> ?v1 . ?v1 <http://dbpedia.org/ontology/birthDate> ""1850-06-24""^^<http://www.w3.org/2001/XMLSchema#date> . ?v6 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. <http://dbpedia.org/resource/A_Field_Battery,_Royal_Australian_Artillery> <http://dbpedia.org/ontology/battle> ?v3 . ?result <http://dbpedia.org/ontology/battle> ?v2 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?v3 <http://dbpedia.org/ontology/commander> ?result . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?militaryForce WHERE {
  # Frank Rhodes and his military conflict
  OPTIONAL { 
    dbr:Frank_Rhodes dbo:militaryConflict ?conflict1 .
    ?conflict1 a dbo:MilitaryConflict ;
               dbo:participatingMilitaryUnit ?unit1 .
  }

  # A Field Battery, Royal Australian Artillery and its military conflict
  OPTIONAL {
    dbr:A_Field_Battery,_Royal_Australian_Artillery dbo:militaryConflict ?conflict2 .
    ?conflict2 a dbo:MilitaryConflict ;
               dbo:participatingMilitaryUnit ?unit2 .
  }

  # Person born on 1850-06-24 and their military force
  OPTIONAL {
    ?person dbo:birthday ""1850-06-24""^^xsd:date ;
            dbo:militaryConflict ?conflict3 .
    ?conflict3 a dbo:MilitaryConflict ;
               dbo:participatingMilitaryUnit ?unit3 .
  }

  # Find the common military conflict
  FILTER (?conflict1 = ?conflict2 && ?conflict1 = ?conflict3)
  
  # Return the name of the military force (conflict)
  BIND(?conflict1 AS ?militaryForce)
}
```",7,14,8,3,3,3,3,71,0,0,9,0,0.0,0
791,64,test,"Give me the father of the child, that is a royalty, of the father, that is a royalty and an office holder, of Emperor Antoku and spouse of the spouse, that is a royalty, of the reference to Emperor Takakura and predecessor of Emperor Antoku.","SELECT ?result WHERE { ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v1 <http://dbpedia.org/property/father> ?v0 . ?v1 <http://dbpedia.org/property/father> ?result . ?v3 <http://xmlns.com/foaf/0.1/name> ""Emperor Takakura""@en . ?v2 <http://dbpedia.org/ontology/spouse> ?v3 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?result <http://dbpedia.org/ontology/spouse> ?v2 . ?result <http://dbpedia.org/ontology/successor> <http://dbpedia.org/resource/Emperor_Antoku> . <http://dbpedia.org/resource/Emperor_Antoku> <http://dbpedia.org/property/father> ?v0 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. }","```sparql
SELECT ?father WHERE {
  wd:Q123456 wdt:P22 ?mother . # Emperor Antoku's mother
  ?mother wdt:P25 wd:Q789012 . # Taira no Kiyomori (Emperor Antoku's father)
  
  ?kiyomori wdt:P31 wd:Q5 ; # Taira no Kiyomori is a human and royalty
            wdt:P39 wd:Q12345 . # Office holder (Shogun)

  ?princess wdt:P25 ?kiyomori ; # Princess Tokuko's father
            wdt:P26 wd:Q987654 . # Married to Emperor Takakura

  ?emperorAntoku wdt:P22 ?mother ;
                  wdt:P1365 wd:Q678901 . # Predecessor of Emperor Antoku is Emperor Go-Shirakawa

}
```",7,11,8,3,3,3,3,71,0,0,1,0,0.0,0
170,28,test,Give me the entity in the work of International Energy Agency and birth place of the awardee of People's Artist of Russia and domain of the profession of John Scholey.,SELECT ?result WHERE { ?v1 <http://dbpedia.org/property/author> <http://dbpedia.org/resource/International_Energy_Agency> . ?result <http://dbpedia.org/ontology/country> ?v1 . ?v3 <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/People's_Artist_of_Russia> . <http://dbpedia.org/resource/John_Scholey> <http://dbpedia.org/property/occupation> ?v5 . ?result <http://dbpedia.org/ontology/leaderTitle> ?v5 . ?v3 <http://dbpedia.org/ontology/birthPlace> ?result . },"```sparql
# Query 1: Entity in the work of International Energy Agency
SELECT ?entity WHERE {
  ?entity wdt:P31 wd:Q4835010 ; # Instance of Organization
          wdt:P463 wd:Q111930 . # Part of IEA
}

UNION

SELECT ?person WHERE {
  ?person wdt:P106 wd:Q82955 ; # Occupation is Politician or similar
          wdt:P39 wd:Q111930 . # Position held at IEA
}

# Query 2: Birthplace of the awardee of People's Artist of Russia
SELECT ?birthPlace WHERE {
  ?person wdt:P166 wd:Q12345678 ; # Award received is People's Artist of Russia (replace with actual QID)
          wdt:P19 ?birthPlace .
}

# Query 3: Domain of the profession of John Scholey
SELECT ?domain WHERE {
  ?scholey foaf:name ""John Scholey""@en ;
           dbo:occupation ?profession .
  ?profession rdfs:label ?domain FILTER (lang(?domain) = 'en') .
}
```

Note: Replace `wd:Q12345678` with the actual QID for the People's Artist of Russia award.",6,6,7,2,3,2,3,28,0,0,3,0,0.0,0
715,64,test,"Give me the leader of the office, that is a government agency and an organisation, of the reference to Carlos Franco Iribarnegaray and commander in the force, that is a military conflict, of the native of Morocco and commander in Spanish Civil War.","SELECT ?result WHERE { ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. <http://dbpedia.org/resource/Spanish_Civil_War> <http://dbpedia.org/ontology/commander> ?result . ?v3 <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Morocco> . ?v1 <http://dbpedia.org/ontology/leader> ?result . ?v0 <http://xmlns.com/foaf/0.1/name> ""Carlos Franco Iribarnegaray""@en . ?v2 <http://dbpedia.org/ontology/commander> ?result . ?v0 <http://dbpedia.org/property/office> ?v1 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/GovernmentAgency>. ?v2 <http://dbpedia.org/ontology/commander> ?v3 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?leader WHERE {
  # Step 1: Identify Carlos Franco Iribarnegaray and the office he led
  ?carlos a dbo:Person ;
          foaf:name ""Carlos Franco Iribarnegaray""@en .
  
  ?office dbo:head ?carlos ;
          a dbo:GovernmentAgency .

  # Step 2: Find the leader of that office
  ?office dbo:head ?leader .

  # Step 3: Identify the military conflict where he was a commander
  ?conflict dbo:commander ?carlos ;
            a dbo:MilitaryConflict .

  # Step 4: Determine the native of Morocco involved in both contexts
  ?moroccanNative a dbo:Person ;
                  dbo:nationality dbr:Morocco ;
                  dbo:commanderIn ?conflict .

  # Ensure the conflict is related to the Spanish Civil War
  FILTER(CONTAINS(LCASE(STR(?conflict)), ""spanish civil war""))
}
```",7,10,8,3,3,3,3,71,0,0,1,0,0.0,0
935,19,test,"Give me the headquarter of the office of the native of Balochistan, Pakistan and death place of the awardee of Sitara-i-Imtiaz.","SELECT ?result WHERE { ?v4 <http://dbpedia.org/ontology/location> ?result . ?v0 <http://dbpedia.org/property/office> ?v4 . ?v2 <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/Sitara-i-Imtiaz> . ?v2 <http://dbpedia.org/ontology/deathPlace> ?result . ?v0 <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Balochistan,_Pakistan> . }","```sparql
# Query for headquarter of an office associated with a native of Balochistan, Pakistan
SELECT ?office ?headquarter WHERE {
  ?office dbo:location dbr:Balochistan.
  ?office dbo:headquarters ?headquarter.
}

UNION

# Query for death place of awardees of Sitara-i-Imtiaz
SELECT ?person ?deathPlace WHERE {
  ?person dbo:honoraryTitle dbr:Sitara_i-Imtiaz.
  OPTIONAL { ?person dbo:deathPlace ?deathPlace. }
}
```",5,5,6,3,2,3,2,20,0,0,1,0,0.0,0
102,18,test,"Give me the native of the residence, that is English and a settlement, of Peter Finbow and manager of the player in the member, that is a soccer player, of England women's national football team.",SELECT ?result WHERE { <http://dbpedia.org/resource/Peter_Finbow> <http://dbpedia.org/property/residence> ?v3 . ?v1 <http://dbpedia.org/ontology/team> <http://dbpedia.org/resource/England_women's_national_football_team> . ?result <http://dbpedia.org/ontology/birthPlace> ?v3 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerPlayer>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. ?v1 <http://dbpedia.org/ontology/team> ?v2 . ?v3 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/United_Kingdom>. ?v2 <http://dbpedia.org/ontology/manager> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?nativePlace WHERE {
  # Step 1: Find Peter Finbow and his residence
  ?person a dbo:Person ;
          foaf:name ""Peter Finbow"" ;
          dbo:residence ?residence .

  # Step 2: Ensure the residence is an English settlement
  ?residence dbo:country dbr:England ;
             a dbo:Settlement .

  # Step 3: Find manager of a player in England women's national football team
  ?player a dbo:SoccerPlayer ;
          dbo:nationalTeam dbr:England_women%27s_national_football_team ;
          dbo:manager ?manager .

  # Step 4: Get the birthplace (native place) of this manager
  ?manager dbo:birthPlace ?nativePlace .
}
```",5,8,6,3,2,3,2,20,0,0,1,0,0.0,0
554,20,test,"Give me the leader of the birth place of the band, that is an artist, of Rita Redshoes and leader of the administration of the party member of Independent politician.",SELECT ?result WHERE { <http://dbpedia.org/resource/Rita_Redshoes> <http://dbpedia.org/ontology/associatedMusicalArtist> ?v4 . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. ?v2 <http://dbpedia.org/property/leader> ?v1 . ?v1 <http://dbpedia.org/ontology/party> <http://dbpedia.org/resource/Independent_politician> . ?v2 <http://dbpedia.org/property/leader> ?result . ?v5 <http://dbpedia.org/property/leader> ?result . ?v4 <http://dbpedia.org/ontology/birthPlace> ?v5 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?bandLeader ?birthPlaceLeader ?independentPolitician ?partyLeader WHERE {
  # Step 1: Identify Rita Redshoes' band and its leader
  ?band dbo:musicalArtist dbr:Rita_Redshoes .
  ?band dbo:leader ?bandLeader .

  # Step 2: Find the birthplace of the band's leader
  ?bandLeader dbp:birthPlace ?birthPlace .
  
  # Step 3: Identify the current leader of the birth place
  ?birthPlaceLeader dbo:headOfGovernment ?birthPlace .
  
  # Step 4: Identify an independent politician and their party
  ?independentPolitician dbo:politicalParty ?party .
  FILTER NOT EXISTS { ?independentPolitician dbo:memberOfPoliticalParty ?otherParty . }
  
  # Step 5: Find the leader of the administration of the party
  ?partyLeader dbo:headOfGovernment ?party .
}
```",6,7,7,3,2,3,2,20,0,0,3,0,0.0,0
433,62,test,"Give me the associated musical artist of the person born, that is a musical artist and an artist, as the persona of Paul Chambers and associated musical artist of the associated musical artist, that is an artist and a musical artist, of the associated musical artist, that is a musical artist and an artist, of Ornette Coleman and professional in Musician.","SELECT ?result WHERE { ?v3 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v6 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?v6 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. ?result <http://dbpedia.org/property/occupation> ""Musician""@en . ?v3 <http://dbpedia.org/property/birthName> ?v4 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?v0 <http://dbpedia.org/ontology/associatedMusicalArtist> ?v6 . <http://dbpedia.org/resource/Ornette_Coleman> <http://dbpedia.org/ontology/associatedMusicalArtist> ?v0 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. ?v6 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. <http://dbpedia.org/resource/Paul_Chambers> <http://xmlns.com/foaf/0.1/givenName> ?v4 . }","```sparql
# Step 1: Find Paul Chambers' associated musical artist who is also an artist
SELECT ?artist WHERE {
  wd:Q12345 wdt:P106 wd:Q33999 . # Paul Chambers (wd:Q12345) is a musician (wdt:P106 wd:Q33999)
  wd:Q12345 wdt:P527 ?bandMember . # Paul Chambers' band members or collaborators
  ?bandMember wdt:P106 wd:Q33999 . # The band member is a musician
  ?bandMember wdt:P101 wd:Q43229 . # The band member is also an artist (wdt:P101)
}

# Step 2: Find the associated musical artist of the person found in step 1
SELECT ?secondArtist WHERE {
  ?artist wdt:P527 ?secondArtist . # Associated with the first artist
  ?secondArtist wdt:P106 wd:Q33999 . # The second artist is a musician
  ?secondArtist wdt:P101 wd:Q43229 . # The second artist is also an artist
}

# Step 3: Find Ornette Coleman's associated musical artist who is also an artist
SELECT ?artist WHERE {
  wd:Q12346 wdt:P106 wd:Q33999 . # Ornette Coleman (wd:Q12346) is a musician
  wd:Q12346 wdt:P527 ?bandMember . # Ornette Coleman's band members or collaborators
  ?bandMember wdt:P106 wd:Q33999 . # The band member is a musician
  ?bandMember wdt:P101 wd:Q43229 . # The band member is also an artist
}

# Step 4: Find the professional musician associated with this person
SELECT ?musician WHERE {
  ?artist wdt:P527 ?musician . # Associated with the artist from step 3
  ?musician wdt:P106 wd:Q33999 . # The musician is a professional musician
}
```

Note: Replace `wd:Q12345` and `wd:Q12346` with the actual DBpedia IDs for Paul Chambers and Ornette Coleman, respectively. Also, ensure that the property codes (e.g., `P106`, `P527`, `P101`) are correct as per DBpedia's schema.",7,13,8,3,3,3,3,71,0,0,3,0,0.0,0
365,20,test,"Give me the spouse of the native, that is a politician, of the reference to Полтавская губерния and person born as the birth name of the commander, that is an office holder, in Ukrainian–Soviet War.","SELECT ?result WHERE { ?v5 <http://dbpedia.org/ontology/spouse> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v5 <http://dbpedia.org/ontology/birthPlace> ?v4 . ?v4 <http://xmlns.com/foaf/0.1/name> ""Полтавская губерния""@en . <http://dbpedia.org/resource/Ukrainian–Soviet_War> <http://dbpedia.org/ontology/commander> ?v1 . ?v1 <http://dbpedia.org/property/birthName> ?v2 . ?result <http://dbpedia.org/property/birthName> ?v2 . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. }","```sparql
# Step 1: Identify a notable person associated with Полтавская губерния
SELECT ?person WHERE {
  ?person dbo:nativePlace dbr:Полтавская_губерния .
  ?person rdf:type dbo:Politician .
}

# Step 2: Find the spouse of this person
SELECT ?spouse WHERE {
  ?person dbo:spouse ?spouse .
  FILTER(?person IN (<result_from_step_1>))
}

# Step 3: Identify a commander in the Ukrainian–Soviet War who was an office holder
SELECT ?commander WHERE {
  ?commander dbo:officeHolderOf dbr:Ukrainian-Soviet_War .
  ?commander rdf:type dbo:MilitaryPerson .
}

# Step 4: Determine the birth name of this commander
SELECT ?birthName WHERE {
  ?commander foaf:name ?birthName .
  FILTER(?commander IN (<result_from_step_3>))
}

# Step 5: Find a person born with that birth name
SELECT ?personWithBirthName WHERE {
  ?personWithBirthName foaf:name ?birthName .
  FILTER(?birthName IN (<result_from_step_4>))
}
```

Note: The placeholders `<result_from_step_1>`, `<result_from_step_3>`, and `<result_from_step_4>` need to be replaced with actual URIs or literals obtained from the results of each respective query step.",6,8,7,3,2,3,2,20,0,0,1,0,0.0,0
645,62,test,"Give me the commander in the force of the commander in Siege of Madrid and leader of Ministry of the Army (Spain) and military force of the force, that is an event and a military conflict and a societal event, of the native, that is a president and a politician, of Restoration (Spain).",SELECT ?result WHERE { ?v3 <http://dbpedia.org/ontology/commander> ?result . ?v6 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/President>. ?v6 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v0 <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Restoration_(Spain)> . ?v6 <http://dbpedia.org/ontology/commander> ?v0 . <http://dbpedia.org/resource/Ministry_of_the_Army_(Spain)> <http://dbpedia.org/ontology/leader> ?result . <http://dbpedia.org/resource/Siege_of_Madrid> <http://dbpedia.org/ontology/commander> ?v4 . ?result <http://dbpedia.org/ontology/battle> ?v6 . ?v3 <http://dbpedia.org/ontology/commander> ?v4 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v6 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?person WHERE {
  ?siege dbo:type dbr:Military_conflict .
  ?siege dbo:name ""Siege of Madrid""@en .
  ?siege dbo:commander ?commander .

  ?ministry dbo:leader ?leader .
  ?ministry dbo:name ""Ministry of the Army (Spain)""@en .

  ?person dbo:positionHeld ?position .
  ?position dbo:officeName ?office .
  FILTER(?office IN (""Commander"", ""Minister of War""))

  ?conflict dbo:type dbr:Military_conflict .
  ?conflict dbo:name ""Spanish Civil War""@en .

  ?societalEvent dbo:type dbr:Societal_event .
  ?societalEvent dbo:name ""Spanish Civil War""@en .

  ?nativeCountry dbo:president ?president .
  ?president dbo:birthPlace ?placeOfBirth .
  FILTER(?placeOfBirth = <http://dbpedia.org/resource/Spain>)

  ?restorationLeader dbo:type dbr:Politician .
  ?restorationLeader dbo:name ""Antonio Maura""@en .

  ?person dbo:nationality dbr:Spanish_people .
  ?person dbo:birthPlace ?placeOfBirth .
  FILTER(?placeOfBirth = <http://dbpedia.org/resource/Spain>)

  OPTIONAL { ?person dbo:spouse ?spouse . }
}
```",7,12,8,3,3,3,3,71,0,0,1,0,0.0,0
527,18,test,"Give me the author of the work, that is a work and a book, of Tom Baker and actor of the movie, that is a work and English and a television show, with the professional in Actor.","SELECT ?result WHERE { ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/TelevisionShow>. ?v2 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/United_Kingdom>. ?v3 <http://dbpedia.org/property/author> ?result . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Book>. ?v2 <http://dbpedia.org/property/starring> ?result . ?v2 <http://dbpedia.org/property/starring> ?v1 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?v3 <http://dbpedia.org/property/author> <http://dbpedia.org/resource/Tom_Baker> . ?v1 <http://dbpedia.org/property/occupation> ""Actor""@en . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?author WHERE {
  # Find a book authored by Tom Baker related to Doctor Who
  ?book dbo:author dbr:Tom_Baker .
  ?book dbo:title ?title .
  
  FILTER regex(?title, ""Doctor Who"", ""i"")

  # Find the television show Doctor Who where Tom Baker acted
  ?tvShow dbo:actor dbr:Tom_Baker ;
          a dbo:TelevisionSeries ;
          dbo:language dbr:English .

  # Ensure that the author of the book is also an actor in the TV show
  BIND(dbr:Tom_Baker AS ?author)
}
```",5,10,6,3,2,3,2,20,0,0,1,0,0.0,0
124,61,test,"Give me the military force of the force, that is a societal event and a military conflict, of the person born on 1850-06-24 and military force of the war, that is an event and a military conflict and a societal event, of the awardee of British South Africa Company Medal.","SELECT ?result WHERE { ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?v1 <http://dbpedia.org/ontology/birthDate> ""1850-06-24""^^<http://www.w3.org/2001/XMLSchema#date> . ?result <http://dbpedia.org/ontology/battle> ?v5 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?v0 <http://dbpedia.org/ontology/battle> ?v5 . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?result <http://dbpedia.org/ontology/battle> ?v3 . ?v0 <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/British_South_Africa_Company_Medal> . ?v3 <http://dbpedia.org/ontology/commander> ?v1 . }","```sparql
# Step 1: Find Cecil Rhodes
SELECT ?person WHERE {
  ?person dbo:birthDate ""1850-06-24""^^xsd:date .
  ?person rdfs:label ?name .
  FILTER(CONTAINS(LCASE(?name), ""cecil rhodes""))
}

# Step 2: Identify the military force in the Second Boer War involving Cecil Rhodes
SELECT DISTINCT ?militaryForce WHERE {
  ?event dbo:type dbr:Military_conflict ;
         dbo:participatingMilitaryUnit ?unit .
  ?unit dbo:member ?person .
  ?person rdfs:label ""Cecil Rhodes"" .
  ?event rdfs:label ?eventName .
  FILTER(CONTAINS(LCASE(?eventName), ""second boer war""))
}

# Step 3: Find an awardee of the British South Africa Company Medal
SELECT DISTINCT ?awardee WHERE {
  ?medal dbo:type dbr:British_South_Africa_Company_Medal ;
         dbo:recipient ?awardee .
}

# Step 4: Identify the war related to the awardee
SELECT DISTINCT ?warEvent WHERE {
  ?event dbo:type dbr:Military_conflict ;
         dbo:participatingMilitaryUnit ?unit .
  ?unit dbo:member ?awardee .
  ?medal dbo:type dbr:British_South_Africa_Company_Medal ;
         dbo:recipient ?awardee .
  ?event rdfs:label ?eventName .
  FILTER(CONTAINS(LCASE(?eventName), ""first matabele war""))
}

# Step 5: Identify the military force in both wars
SELECT DISTINCT ?militaryForce WHERE {
  { 
    ?event1 dbo:type dbr:Military_conflict ;
           dbo:participatingMilitaryUnit ?unit .
    ?unit rdfs:label ?forceLabel .
    FILTER(CONTAINS(LCASE(?forceLabel), ""british army""))
    ?event1 rdfs:label ?eventName1 .
    FILTER(CONTAINS(LCASE(?eventName1), ""second boer war""))
  }
  UNION
  {
    ?event2 dbo:type dbr:Military_conflict ;
           dbo:participatingMilitaryUnit ?unit .
    ?unit rdfs:label ?forceLabel .
    FILTER(CONTAINS(LCASE(?forceLabel), ""british army""))
    ?event2 rdfs:label ?eventName2 .
    FILTER(CONTAINS(LCASE(?eventName2), ""first matabele war""))
  }
}
```",6,11,7,3,2,3,3,71,0,0,1085,0,0.0,0
124,70,test,"Give me the military force of the war, that is an event and a military conflict and a societal event, of the awardee of British South Africa Company Medal and commander in the war, that is a societal event and a military conflict, of A Field Battery, Royal Australian Artillery and military force of the force, that is a societal event and a military conflict, of the person born on 1850-06-24.","SELECT ?result WHERE { ?v7 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?v0 <http://dbpedia.org/ontology/battle> ?v7 . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?result <http://dbpedia.org/ontology/battle> ?v7 . ?v1 <http://dbpedia.org/ontology/birthDate> ""1850-06-24""^^<http://www.w3.org/2001/XMLSchema#date> . ?v7 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?result <http://dbpedia.org/ontology/battle> ?v3 . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v7 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?v4 <http://dbpedia.org/ontology/commander> ?result . <http://dbpedia.org/resource/A_Field_Battery,_Royal_Australian_Artillery> <http://dbpedia.org/ontology/battle> ?v4 . ?v3 <http://dbpedia.org/ontology/commander> ?v1 . ?v0 <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/British_South_Africa_Company_Medal> . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?militaryForce WHERE {
  # Find the person born on 1850-06-24 who received the British South Africa Company Medal
  ?person dbo:birthday ""1850-06-24""^^xsd:date ;
          dbo:awardReceived dbr:British_South_Africa_Company_Medal .

  # Identify a war where this person was a commander and is both a societal event and a military conflict
  ?war dbo:type dbr:Military_conflict, dbr:Societal_event ;
       dbo:commander ?person .

  # Determine the military force involved in that war
  ?militaryForce dbo:participatedIn ?war .

  # Ensure A Field Battery, Royal Australian Artillery is part of this military force
  ?unit dbo:partOf ?militaryForce .
  FILTER (str(?unit) = ""A Field Battery, Royal Australian Artillery"")
}
```",8,15,9,3,3,3,3,71,0,0,9,0,0.0,0
976,69,test,"Give me the office of the leader, that is a politician, of the administration, that is an organisation, of Kemal Kılıçdaroğlu and office of the mayor, that is a politician and an office holder and Turkish, of Nation Alliance (Turkey) and office of the person born as the birth name of Naci Bostancı.",SELECT ?result WHERE { ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v0 <http://dbpedia.org/property/birthName> ?v5 . ?v0 <http://dbpedia.org/property/office> ?result . ?v4 <http://dbpedia.org/property/leader> <http://dbpedia.org/resource/Kemal_Kılıçdaroğlu> . ?v6 <http://dbpedia.org/ontology/nationality> <http://dbpedia.org/resource/Turkey>. ?v4 <http://dbpedia.org/ontology/leader> ?v2 . <http://dbpedia.org/resource/Naci_Bostancı> <http://dbpedia.org/property/birthName> ?v5 . ?v2 <http://dbpedia.org/property/office> ?result . ?v6 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. <http://dbpedia.org/resource/Nation_Alliance_(Turkey)> <http://dbpedia.org/property/leader> ?v6 . ?v6 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?v6 <http://dbpedia.org/property/office> ?result . },"```sparql
# Query for Kemal Kılıçdaroğlu's office
SELECT ?office WHERE {
  wd:Q123456 wdt:P39 ?office .
}

UNION

# Query for the mayor of Nation Alliance (Turkey)
SELECT DISTINCT ?mayorOffice WHERE {
  ?person wdt:P31/wdt:P279* wd:Q82955 ; # Person and Politician
          wdt:P19 wd:Q159 .           # Turkish nationality
  ?person wdt:P39 ?office .
  ?party wdt:P1020 ?person ;
         rdfs:label ""Nation Alliance (Turkey)""@en .
  FILTER(CONTAINS(LCASE(STR(?office)), ""mayor""))
}

UNION

# Query for the office of Naci Bostancı
SELECT ?office WHERE {
  wd:Q789012 wdt:P31/wdt:P279* wd:Q5 ; # Person
             rdfs:label ""Naci Bostancı""@en .
  ?person wdt:P39 ?office .
}
```

Note: Replace `wd:Q123456` with the actual DBpedia identifier for Kemal Kılıçdaroğlu and `wd:Q789012` with the identifier for Naci Bostancı. These identifiers need to be looked up in DBpedia.",8,13,9,3,3,3,3,71,0,0,1,0,0.0,0
645,65,test,"Give me the leader of the office, that is a government agency and an organisation, of Camilo Menéndez Tolosa and military force of the force, that is an event and a military conflict and a societal event, of the native, that is a president and a politician, of Restoration (Spain) and commander in the force of Carlos Asensio Cabanillas.",SELECT ?result WHERE { ?v0 <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Restoration_(Spain)> . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/President>. ?v4 <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Carlos_Asensio_Cabanillas> . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/GovernmentAgency>. ?v4 <http://dbpedia.org/ontology/commander> ?result . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v6 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v6 <http://dbpedia.org/ontology/commander> ?v0 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. <http://dbpedia.org/resource/Camilo_Menéndez_Tolosa> <http://dbpedia.org/property/office> ?v3 . ?v6 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?result <http://dbpedia.org/ontology/battle> ?v6 . ?v6 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?v3 <http://dbpedia.org/ontology/leader> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?officeLeader ?militaryForce ?nativeLeader ?commander 
WHERE {
  # Find the office led by Camilo Menéndez Tolosa
  ?office dbo:leader dbr:Camilo_Menéndez_Tolosa ;
          a dbo:GovernmentAgency, dbo:Organization .
  
  # Identify the military force associated with him
  ?militaryForce dbo:hasLeader dbr:Camilo_Menéndez_Tolosa ;
                 a dbo:MilitaryConflict, dbo:SocietalEvent, dbo:Event .

  # Determine the native leader during Spain's Restoration period
  ?nativeLeader dbo:presidentOf dbr:Restoration_(Spain) ;
                a dbo:Politician, dbo:President .
  
  # Link Carlos Asensio Cabanillas to this force
  ?commander dbo:commanderIn ?militaryForce ;
             dbr:Carlos_Asensio_Cabanillas .

}
```",7,14,8,3,3,3,3,71,0,0,1,0,0.0,0
987,64,test,"Give me the entity in the region, that is a country, of the time zone, that is a sports event, in Canicosa de la Sierra and birth place of Moamer Kasumović and birth place of the band, that is an artist and a musical artist, of the band, that is an artist, of Dado Polumenta.",SELECT ?result WHERE { ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. <http://dbpedia.org/resource/Canicosa_de_la_Sierra> <http://dbpedia.org/ontology/timeZone> ?v5 . <http://dbpedia.org/resource/Moamer_Kasumović> <http://dbpedia.org/ontology/birthPlace> ?result . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. ?v4 <http://dbpedia.org/ontology/associatedMusicalArtist> ?v2 . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsEvent>. <http://dbpedia.org/resource/Dado_Polumenta> <http://dbpedia.org/ontology/associatedMusicalArtist> ?v4 . ?result <http://dbpedia.org/ontology/country> ?v0 . ?v2 <http://dbpedia.org/ontology/birthPlace> ?result . ?v0 <http://dbpedia.org/property/timeZone> ?v5 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?country WHERE {
  # Step 1: Find Canicosa de la Sierra's time zone
  ?canicosa dbo:timeZone ?timezone .

  # Step 2: Identify sports events in that time zone
  ?event dbo:timeZone ?timezone ;
         a dbo:SportsEvent .

  # Step 3: Determine Moamer Kasumović's birthplace
  dbr:Radovan_Karadžić dbo:birthPlace ?karadzicBirthPlace .

  # Step 4: Identify the band of Dado Pršo and its artist
  dbr:Dado_Pršo dbo:memberOfBand ?band .
  ?band a dbo:MusicalArtist ;
        dbo:artist ?bandArtist .

  # Step 5: Find birthplace of the band (artist)
  ?bandArtist dbo:birthPlace ?bandBirthPlace .

  # Step 6: Determine the country in the region
  ?karadzicBirthPlace dbo:country ?country .
  ?bandBirthPlace dbo:country ?country .
}
```",7,12,8,3,3,3,3,71,0,0,1,0,0.0,0
573,61,test,"Give me the person decedent at the residence, that is a settlement, of the professional, that is American, in Politician and parent of the author, that is a politician and an office holder, of the work of John Quincy Adams.","SELECT ?result WHERE { ?v1 <http://dbpedia.org/property/author> <http://dbpedia.org/resource/John_Quincy_Adams> . ?v0 <http://dbpedia.org/ontology/nationality> <http://dbpedia.org/resource/United_States>. ?v1 <http://dbpedia.org/property/author> ?v3 . ?v0 <http://dbpedia.org/property/residence> ?v5 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v0 <http://dbpedia.org/property/occupation> ""Politician""@en . ?result <http://dbpedia.org/ontology/deathPlace> ?v5 . ?v3 <http://dbpedia.org/ontology/parent> ?result . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. }","```sparql
SELECT ?decedent WHERE {
  # Step 1: Identify John Quincy Adams' work
  ?work dcterms:title ""The Defense of the Constitutions of Government of the United States of America""@en .
  
  # Step 2: Find an author who is a politician and office holder
  ?author dbo:wikiPageWikiLink ?work ;
          rdf:type dbo:Politician, dbo:OfficeHolder ;
          dbo:birthPlace ?parentBirthPlace .

  # Step 3: Determine the parent of this author who was a professional in politics (American)
  ?parent dbo:child ?author ;
          rdf:type dbo:Politician ;
          dbo:nationality dbc:United_States .
  
  # Step 4: Identify the residence (settlement) and decedent at that location
  ?residence dbo:resident ?parent ;
             a dbo:Settlement .

  ?decedent dbo:deathPlace ?residence .
}
```",6,10,7,3,2,3,3,71,0,0,2,0,0.0,0
573,67,test,"Give me the person decedent at Massachusetts and parent of the author, that is a politician and an office holder, of the work of John Quincy Adams and person decedent at the residence, that is a settlement, of the professional, that is American, in Politician.","SELECT ?result WHERE { ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?result <http://dbpedia.org/ontology/deathPlace> <http://dbpedia.org/resource/Massachusetts> . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v1 <http://dbpedia.org/property/author> ?v3 . ?v0 <http://dbpedia.org/property/residence> ?v6 . ?v3 <http://dbpedia.org/ontology/parent> ?result . ?v0 <http://dbpedia.org/property/occupation> ""Politician""@en . ?result <http://dbpedia.org/ontology/deathPlace> ?v6 . ?v0 <http://dbpedia.org/ontology/nationality> <http://dbpedia.org/resource/United_States>. ?v6 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. ?v1 <http://dbpedia.org/property/author> <http://dbpedia.org/resource/John_Quincy_Adams> . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?person WHERE {
  ?person dbo:spouse ?spouse .
  ?spouse foaf:name ""Abigail Adams"" .
  ?person dbo:child dbr:John_Quincy_Adams .
  ?person dbo:deathPlace dbr:Massachusetts .
  ?person a dbo:Politician ;
          dbo:officeHolder true .
  ?person dbo:deathPlace dbr:Peacefield .
}
```",7,11,8,3,3,3,3,71,0,0,2,0,0.0,0
216,63,test,"Give me the player in the coach, that is a soccer player and a sports manager and a soccer manager, of Bosnia and Herzegovina national under-18 football team and player in the coach of the reference, that is an organisation and a soccer club, to Croatia U21 and team of the person born, that is a sports manager and a soccer manager and a soccer player, on 1983-12-20.","SELECT ?result WHERE { ?v6 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsManager>. ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerClub>. ?v4 <http://dbpedia.org/ontology/coach> ?v3 . ?v3 <http://dbpedia.org/ontology/team> ?result . ?v6 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerManager>. ?v6 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerPlayer>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerPlayer>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerManager>. ?v6 <http://dbpedia.org/ontology/team> ?result . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?v4 <http://xmlns.com/foaf/0.1/name> ""Croatia U21""@en . ?v2 <http://dbpedia.org/ontology/birthDate> ""1983-12-20""^^<http://www.w3.org/2001/XMLSchema#date> . ?result <http://dbpedia.org/ontology/coach> ?v2 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsManager>. <http://dbpedia.org/resource/Bosnia_and_Herzegovina_national_under-18_football_team> <http://dbpedia.org/ontology/coach> ?v6 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?person WHERE {
  ?person a dbo:SoccerPlayer .
  ?person dbo:birthDate ""1983-12-20""^^xsd:date .
  ?person dbo:sportsManagerOf dbr:Croatia_U21 .
  ?person dbo:coachOf dbr:Bosnia_and_Herzegovina_national_under-18_football_team .
  ?person dbo:playerInTeam dbr:Bosnia_and_Herzegovina_national_under-18_football_team .
  OPTIONAL { ?person dbo:soccerManagerOf dbr:Croatia_U21 . }
}
```",7,15,8,3,3,3,3,71,0,0,1,0,0.0,0
582,67,test,"Give me the figure known as the nickname of the team, that is an organisation, of Hajime Moriyasu and player in the father, that is an athlete and a soccer manager and a sports manager, of the child of Kazuaki Nagasawa and reference to Japan.","SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/coach> <http://dbpedia.org/resource/Hajime_Moriyasu> . ?result <http://dbpedia.org/property/nickname> ?v3 . ?result <http://xmlns.com/foaf/0.1/name> ""Japan""@en . ?v0 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Kazuaki_Nagasawa> . ?v1 <http://dbpedia.org/property/nickname> ?v3 . ?v6 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsManager>. ?v6 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Athlete>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?v0 <http://dbpedia.org/property/father> ?v6 . ?v6 <http://dbpedia.org/ontology/team> ?result . ?v6 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerManager>. }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?nickname WHERE {
  ?team dbo:nationality dbr:Japan ;
        dbo:manager dbr:Hajime_Moriyasu .
  ?team dbo:commonName ?nickname .
}
```",7,11,8,3,3,3,3,71,0,0,1,0,0.0,0
459,28,test,"Give me the governor of the administration, that is a politician, of Brad Henry and governor of the death place, that is a settlement, of Cliff Roquemore and person born as the birth name of Kevin Stitt.",SELECT ?result WHERE { ?v3 <http://dbpedia.org/property/governor> ?result . <http://dbpedia.org/resource/Cliff_Roquemore> <http://dbpedia.org/ontology/deathPlace> ?v1 . <http://dbpedia.org/resource/Kevin_Stitt> <http://dbpedia.org/property/birthName> ?v5 . ?v3 <http://dbpedia.org/property/governor> <http://dbpedia.org/resource/Brad_Henry> . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?result <http://dbpedia.org/property/birthName> ?v5 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. ?v1 <http://dbpedia.org/property/governor> ?result . },"```sparql
# Query for Brad Henry's predecessor as governor of Oklahoma
SELECT ?governor WHERE {
  ?person dbo:officeHolder dbr:Governor_of_Oklahoma.
  ?person foaf:name ""Brad Henry""@en.
  ?person dbo:termStart ?start.
  ?person dbo:termEnd ?end.
  OPTIONAL { 
    ?predecessor dbo:officeHolder dbr:Governor_of_Oklahoma;
                 dbo:termEnd ?predecessorEnd.
    FILTER(?predecessorEnd < ?start)
    ?governor foaf:name ?name.
    ?governor dbo:officeHolder dbr:Governor_of_Oklahoma;
             dbo:termStart ?governorStart;
             dbo:termEnd ?governorEnd.
    FILTER(?governorStart <= ?predecessorEnd && ?governorEnd >= ?start)
  }
}

# Query for Cliff Roquemore's death place and governor at that time
SELECT ?deathPlace ?governor WHERE {
  ?person dbo:birthName ""Clifford Lee Roquemore""@en;
          dbo:deathPlace ?deathPlace.
  ?deathPlace a dbo:Settlement.
  OPTIONAL {
    ?state dbo:administrativeUnitOf ?deathPlace.
    ?governor dbo:officeHolder dbr:Governor_of_?state;
              dbo:termStart ?start;
              dbo:termEnd ?end.
    ?deathTime dbo:deathDate ?date.
    FILTER(?start <= ?date && ?end >= ?date)
  }
}

# Query for Kevin Stitt's birth name and any person with that same birth name
SELECT DISTINCT ?person WHERE {
  ?kevinStitt dbo:birthName ?birthName;
              foaf:name ""Kevin Stitt""@en.
  OPTIONAL {
    ?otherPerson dbo:birthName ?birthName;
                 foaf:name ?name.
    FILTER(?name != ""Kevin Stitt"")
  }
}
```",6,8,7,2,3,2,3,28,0,0,1,0,0.0,0
445,63,test,"Give me the entity in the award of George H. Cameron and death place of the awardee of Royal Astronomical Society and entity in the residence, that is a country, of the resident, that is an athlete, of Great Britain.",SELECT ?result WHERE { <http://dbpedia.org/resource/George_H._Cameron> <http://dbpedia.org/property/awards> ?v2 . ?v6 <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/Royal_Astronomical_Society> . ?result <http://dbpedia.org/ontology/location> ?v3 . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Athlete>. ?v4 <http://dbpedia.org/property/residence> <http://dbpedia.org/resource/Great_Britain> . ?result <http://dbpedia.org/ontology/country> ?v2 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. ?v4 <http://dbpedia.org/property/residence> ?v3 . ?v6 <http://dbpedia.org/ontology/deathPlace> ?result . },"```sparql
# Query 1: Find the award received by George H. Cameron
SELECT ?award WHERE {
  wd:Q1234567 dbo:awardReceived ?award .
}

# Query 2: Find the death place of another awardee who won the same award as George H. Cameron
SELECT DISTINCT ?deathPlace WHERE {
  ?person dbo:awardReceived ?award .
  ?person foaf:deathPlace ?deathPlace .
  FILTER(?award = wd:Q1234567) # Replace with actual award URI from Query 1 result
}

# Query 3: Find the country of residence for a British athlete
SELECT DISTINCT ?country WHERE {
  ?athlete dbo:nationality dbr:United_Kingdom ;
           dbo:sport ?sport .
  ?athlete dbo:residenceLocation ?location .
  ?location rdf:type dbo:Country .
  BIND(STR(?location) AS ?country)
}
```

Note: Replace `wd:Q1234567` with the actual URI of the award received by George H. Cameron obtained from Query 1.",7,9,8,3,3,3,3,71,0,0,1,0,0.0,0
892,63,test,"Give me the entity in the profession of the true self of Enrico Crolla and entity in the administration, that is Italian and a region and a settlement and an administrative region, of Democratic Party (Italy) and landmark at elevation of the award of Anna Ishii.","SELECT ?result WHERE { ?v0 <http://dbpedia.org/property/leaderParty> <http://dbpedia.org/resource/Democratic_Party_(Italy)> . ?v3 <http://dbpedia.org/property/occupation> ?v1 . ?result <http://dbpedia.org/ontology/elevation> ?v5 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. ?v3 <http://xmlns.com/foaf/0.1/givenName> ""Enrico Crolla""@en . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/AdministrativeRegion>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Region>. <http://dbpedia.org/resource/Anna_Ishii> <http://dbpedia.org/property/awards> ?v5 . ?v0 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Italy>. ?result <http://dbpedia.org/ontology/country> ?v1 . ?result <http://dbpedia.org/ontology/province> ?v0 . }","```sparql
# Query 1: Enrico Crolla's Profession
SELECT ?profession WHERE {
  wd:Q123456 rdfs:label ""Enrico Crolla""@en .
  ?person dbo:birthName wd:Q123456 ;
          dbo:occupation ?profession .
}

# Query 2: Italian Region and Settlement in Administration of Democratic Party (Italy)
SELECT DISTINCT ?region WHERE {
  ?party dbo:country dbr:Italy ;
         rdfs:label ""Democratic Party (Italy)""@en .
  ?region dbo:administrativeRegionOf ?party ;
          a dbo:Settlement, dbo:AdministrativeRegion ;
          dbo:country dbr:Italy .
}

# Query 3: Landmark at Elevation of Anna Ishii's Award
SELECT DISTINCT ?landmark WHERE {
  wd:Q789012 rdfs:label ""Anna Ishii""@en .
  ?award dbo:recipient wd:Q789012 ;
         dbo:elevation ?elevation .
  ?landmark dbo:elevation ?elevation .
}
```",7,11,8,3,3,3,3,71,0,0,2,0,0.0,0
445,58,test,Give me the entity in England and entity in the award of the commander in Battle of Saint-Mihiel and death place of the awardee of Royal Astronomical Society.,SELECT ?result WHERE { ?v5 <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/Royal_Astronomical_Society> . <http://dbpedia.org/resource/Battle_of_Saint-Mihiel> <http://dbpedia.org/ontology/commander> ?v1 . ?result <http://dbpedia.org/ontology/country> ?v2 . ?v5 <http://dbpedia.org/ontology/deathPlace> ?result . ?v1 <http://dbpedia.org/property/awards> ?v2 . ?result <http://dbpedia.org/ontology/location> <http://dbpedia.org/resource/England> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT DISTINCT ?englandEntity ?commanderInBattle ?deathPlace
WHERE {
  # Entity in England
  ?englandEntity a dbo:Place ;
                 dbo:country dbr:England .

  # Commander in Battle of Saint-Mihiel
  ?battle dbr:Battle_of_Saint-Mihiel .
  ?person dbo:rank ""Commander"" ;
          dbo:participatedInBattle ?battle .

  # Death place of awardee of Royal Astronomical Society
  ?awardee dbo:awardReceived dbr:Royal_Astronomical_Society ;
           dbo:deathPlace ?deathPlace .
  
  # Linking the commander to the awardee if they are the same person
  FILTER (?person = ?awardee)
}
```",6,6,7,3,3,3,3,71,0,0,1,0,0.0,0
773,60,test,"Give me the parent of the child, that is a royalty, of the father, that is an office holder and a royalty, of Carloman of Bavaria and spouse of the father of the parent of Bernard (son of Charles the Fat).",SELECT ?result WHERE { ?v2 <http://dbpedia.org/ontology/spouse> ?result . ?v1 <http://dbpedia.org/ontology/parent> ?result . ?v1 <http://dbpedia.org/property/father> ?v0 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. <http://dbpedia.org/resource/Carloman_of_Bavaria> <http://dbpedia.org/property/father> ?v0 . ?v3 <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Bernard_(son_of_Charles_the_Fat)> . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v3 <http://dbpedia.org/property/father> ?v2 . },"```sparql
SELECT ?parent WHERE {
  # Louis the German's details
  wd:Q123456 a dbo:Monarch; 
             foaf:surname ""Louis the German""@en;
             dbo:spouse ?hemma.
  
  # Hemma of Waiblingen
  ?hemma rdfs:label ""Hemma of Waiblingen""@en.

  # Bernard (son of Charles the Fat)
  wd:Q654321 a dbo:Person; 
             foaf:surname ""Bernard of Italy""@en;
             dbo:father ?charlesFat.
  
  # Charles the Fat
  ?charlesFat rdfs:label ""Charles the Fat""@en.

  # Richardis of Wormsgau
  wd:Q789012 a dbo:Person; 
             foaf:surname ""Richardis of Wormsgau""@en;
             dbo:father ?conradElder.
  
  # Conrad the Elder
  ?conradElder rdfs:label ""Conrad the Elder""@en.

  # Carloman of Bavaria
  wd:Q345678 a dbo:Monarch; 
             foaf:surname ""Carloman of Bavaria""@en;
             dbo:father ?louisGerman.
  
  # Cunigunde of Luxembourg
  ?cunigunde rdfs:label ""Cunigunde of Luxembourg""@en;
             dbo:spouse ?conradElder.

  # Linking the relationships
  ?parent rdfs:label ?cunigunde.
}
```",6,9,7,3,2,3,3,71,0,0,1,0,0.0,0
216,62,test,"Give me the player in the coach of the reference, that is an organisation and a soccer club, to Croatia U21 and player in the coach, that is a soccer player and a sports manager and a soccer manager, of the player, that is an organisation and a sports club and a soccer club, in Džemal Berberović and team of Ognjen Vukojević.","SELECT ?result WHERE { ?v0 <http://dbpedia.org/ontology/coach> ?v6 . ?v6 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsManager>. ?v6 <http://dbpedia.org/ontology/team> ?result . ?v6 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerManager>. ?v4 <http://dbpedia.org/ontology/coach> ?v3 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerClub>. ?v4 <http://xmlns.com/foaf/0.1/name> ""Croatia U21""@en . ?v6 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerPlayer>. ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerClub>. <http://dbpedia.org/resource/Džemal_Berberović> <http://dbpedia.org/ontology/team> ?v0 . ?result <http://dbpedia.org/ontology/coach> <http://dbpedia.org/resource/Ognjen_Vukojević> . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsClub>. ?v3 <http://dbpedia.org/ontology/team> ?result . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. }","```sparql
# Step 1: Find the organization related to Croatia U21
SELECT ?croatiaU21Club WHERE {
  ?croatiaU21Club rdf:type dbo:SoccerClub .
  ?croatiaU21Club dbo:team ?croatiaU21Team .
  ?croatiaU21Team rdfs:label ""Croatia national under-21 football team""@en .
}

# Step 2: Find the coach of this organization who is an organization
SELECT ?coach WHERE {
  ?croatiaU21Club dbo:coach ?coach .
  ?coach rdf:type dbo:Organization .
}

# Step 3: Identify Džemal Berberović's team
SELECT ?dzebalTeam WHERE {
  ?dzebalTeam dbo:player ?dzebal .
  ?dzebal rdfs:label ""Džemal Berberović""@en .
  ?dzebalTeam rdf:type (dbo:SoccerClub|dbo:SportsClub) .
}

# Step 4: Find the player in the coach of this team who is a soccer player, sports manager, and soccer manager
SELECT ?player WHERE {
  ?dzebalTeam dbo:coach ?coach .
  ?coach dbo:player ?player .
  ?player rdf:type (dbo:SoccerPlayer|dbo:SportsManager|dbo:SoccerManager) .
}

# Step 5: Identify Ognjen Vukojević's team
SELECT ?ognjenTeam WHERE {
  ?ognjenTeam dbo:player ?ognjen .
  ?ognjen rdfs:label ""Ognjen Vukojević""@en .
  ?ognjenTeam rdf:type (dbo:SoccerClub|dbo:SportsClub) .
}

# Step 6: Find the coach of this team who is an organization
SELECT ?coach WHERE {
  ?ognjenTeam dbo:coach ?coach .
  ?coach rdf:type dbo:Organization .
}
```",7,15,8,3,3,3,3,71,0,0,1,0,0.0,0
136,8,test,Give me the region coded as 03834 and landmark at elevation of the award of Bret Anthony Johnston.,"SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/areaCode> ""03834"" . ?result <http://dbpedia.org/ontology/elevation> ?v2 . <http://dbpedia.org/resource/Bret_Anthony_Johnston> <http://dbpedia.org/property/awards> ?v2 . }","```sparql
# Step 1: Identify Bret Anthony Johnston and find his awards
SELECT ?award WHERE {
  ?person dbo:name ""Bret Anthony Johnston""@en .
  ?person dbo:award ?award .
}

# Step 2: Find the landmark associated with the award and its elevation
SELECT DISTINCT ?landmark ?elevation WHERE {
  VALUES ?award { <http://dbpedia.org/resource/Specific_Award_URI> } # Replace with actual URI from step 1
  ?award dbo:location ?landmark .
  OPTIONAL { ?landmark dbo:elevationAboveSeaLevel ?elevation . }
}

# Step 3: Find the region with code ""03834""
SELECT ?region WHERE {
  ?region dbp:postalCode ""03834"" .
}
```

Note: The URI for the specific award needs to be replaced with the actual URI obtained from step 1.",3,3,4,2,2,2,2,9,0,0,1,0,0.0,0
826,70,test,"Give me the predecessor of the parent of the child of Louis IV, Grand Duke of Hesse and successor of the child, that is a royalty, of the reference, that is a royalty, to Louis I and spouse of the child of Johann Heinrich Appel.","SELECT ?result WHERE { ?v4 <http://dbpedia.org/property/father> ""Johann Heinrich Appel""@en . ?v0 <http://dbpedia.org/ontology/child> ?v7 . ?v7 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v7 <http://dbpedia.org/ontology/successor> ?result . ?v1 <http://dbpedia.org/ontology/parent> ?v3 . ?v1 <http://dbpedia.org/ontology/parent> <http://dbpedia.org/resource/Louis_IV,_Grand_Duke_of_Hesse> . ?v0 <http://xmlns.com/foaf/0.1/name> ""Louis I""@en . ?result <http://dbpedia.org/ontology/successor> ?v3 . ?v4 <http://dbpedia.org/ontology/spouse> ?result . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?predecessor ?successor ?referenceRoyalty ?spouse WHERE {
  # Louis IV, Grand Duke of Hesse and his child
  VALUES (?louisIV) { dbr:Ludwig_IV,_Grand_Duke_of_Hesse }
  ?child dbo:parent ?louisIV .
  
  # Parent of Louis IV's child (likely Louis IV himself)
  ?parent dbo:child ?child .
  
  # Predecessor of Louis IV
  ?predecessor dbo:successor ?louisIV .

  # Successor of Louis IV's child
  ?successor dbo:predecessor ?child .

  # Reference to Louis I (assuming a relevant royalty)
  VALUES (?reference) { dbr:Louis_I_of_Hesse }
  ?referenceRoyalty dbo:successor ?reference .
  
  # Johann Heinrich Appel's child and spouse
  ?appelChild dbo:parent dbr:Johann_Heinrich_Appel .
  ?spouse dbo:sibling ?appelChild .
}
```",8,10,9,3,3,3,3,71,0,0,1,0,0.0,0
41,27,test,"Give me the party of Mark Durkan and party of the work, that is an office holder, of yes and party of the person born as David Declan Costello.","SELECT ?result WHERE { ?v2 <http://dbpedia.org/ontology/party> ?result . <http://dbpedia.org/resource/Mark_Durkan> <http://dbpedia.org/ontology/party> ?result . ?v1 <http://dbpedia.org/ontology/party> ?result . ?v1 <http://dbpedia.org/property/author> ""yes""@en . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v2 <http://dbpedia.org/property/birthName> ""David Declan Costello""@en . }","```sparql
# Query for Mark Durkan's party affiliation
SELECT ?party WHERE {
  ?person foaf:name ""Mark Durkan""@en .
  ?person dbo:politicalParty ?party .
}

UNION

# Query for David Declan Costello's party affiliation
SELECT ?party WHERE {
  ?person foaf:name ""David Declan Costello""@en .
  ?person dbo:politicalParty ?party .
}

UNION

# Assuming the office holder associated with ""the work"" is a notable figure like Barack Obama
SELECT ?party WHERE {
  ?person foaf:name ""Barack Obama""@en .
  ?person dbo:politicalParty ?party .
}
```",5,6,6,2,3,2,3,28,0,0,1,0,0.0,0
839,59,test,"Give me the band of the person born, that is a musical artist, as the persona of Kevin Russell (musician) and band of the member of the band, that is a band and a group, of Peter Schorowsky.",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/bandMember> ?v5 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Band>. <http://dbpedia.org/resource/Kevin_Russell_(musician)> <http://xmlns.com/foaf/0.1/givenName> ?v3 . ?v2 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Group>. ?v2 <http://dbpedia.org/property/birthName> ?v3 . <http://dbpedia.org/resource/Peter_Schorowsky> <http://dbpedia.org/ontology/associatedMusicalArtist> ?v0 . ?v0 <http://dbpedia.org/ontology/bandMember> ?v5 . },"```sparql
# Query for Kevin Russell's associated band
SELECT ?band WHERE {
  ?person foaf:name ""Kevin Russell""@en .
  ?person dbo:birthPlace ?place .
  ?person dbo:associatedBand ?band .
  FILTER EXISTS { ?band a dbo:MusicalArtist }
}

UNION

# Query for Peter Schorowsky's band
SELECT ?band WHERE {
  ?member foaf:name ""Peter Schorowsky""@en .
  ?member dbo:memberOf ?band .
  ?band a dbo:Band ;
        a dbo:Group .
}
```",6,9,7,3,2,3,3,71,0,0,1,0,0.0,0
715,65,test,"Give me the leader of the office, that is a government agency and an organisation, of Carlos Franco Iribarnegaray and commander in the force of the mayor, that is an office holder and a politician and a president, of 1933 Spanish general election and commander in the force, that is a military conflict, of Abd el-Krim.",SELECT ?result WHERE { <http://dbpedia.org/resource/1933_Spanish_general_election> <http://dbpedia.org/property/leader> ?v0 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/President>. ?v3 <http://dbpedia.org/ontology/leader> ?result . <http://dbpedia.org/resource/Carlos_Franco_Iribarnegaray> <http://dbpedia.org/property/office> ?v3 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v4 <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Abd_el-Krim> . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/GovernmentAgency>. ?v6 <http://dbpedia.org/ontology/commander> ?result . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?v4 <http://dbpedia.org/ontology/commander> ?result . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v6 <http://dbpedia.org/ontology/commander> ?v0 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?leader WHERE {
  # Find Carlos Franco Iribarnegaray's role
  OPTIONAL { 
    dbr:Carlos_Franco_Iribarnegaray dbo:office ?office .
    ?office a dbo:GovernmentAgency ;
            a dbo:Organization .
    ?office dbo:head ?leader .
  }

  # Identify the president from the 1933 Spanish General Election who was also a mayor and politician
  OPTIONAL {
    ?president dbo:election ?election .
    ?election dbr:Spanish_general_election,_1933 ;
              dbo:result ?result .
    ?president dbo:office ?mayorOffice .
    ?mayorOffice dbo:head ?leader .
    ?president a dbo:Politician ;
               dbo:positionHeld ?politicianPosition .
  }

  # Find the military conflict involving Abd el-Krim
  OPTIONAL {
    dbr:Abd_el-Krim dbo:militaryConflict ?conflict .
    ?conflict a dbo:MilitaryConflict .
  }
}
```",7,13,8,3,3,3,3,71,0,0,1,0,0.0,0
456,70,test,"Give me the spouse of the actor of Pacific Drive and professional in the alter ego of the reference, that is a fictional character, to Lamont Cranston (radio, film and television) and band of the band, that is a musical artist, of the band of Alan Doyle.","SELECT ?result WHERE { ?result <http://dbpedia.org/property/occupation> ?v7 . ?v0 <http://dbpedia.org/property/alterEgo> ?v7 . <http://dbpedia.org/resource/Pacific_Drive> <http://dbpedia.org/property/starring> ?v4 . ?v1 <http://dbpedia.org/ontology/associatedMusicalArtist> ?v3 . <http://dbpedia.org/resource/Alan_Doyle> <http://dbpedia.org/ontology/associatedMusicalArtist> ?v1 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/FictionalCharacter>. ?v0 <http://xmlns.com/foaf/0.1/name> ""Lamont Cranston (radio, film and television)""@en . ?v4 <http://dbpedia.org/ontology/spouse> ?result . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?v3 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?spouse WHERE {
  # Find the actor of ""Pacific Drive""
  ?actor dbo:title ""Pacific Drive""@en.
  
  # Ensure this actor is also associated with The Shadow (Lamont Cranston)
  ?actor dbo:character dbr:The_Shadow .
  
  # Check if this actor is a member of Great Big Sea
  ?actor dbo:musicalArtist dbr:Great_Big_Sea .
  
  # Find the spouse of this actor
  ?actor dbo:spouse ?spouse .
}
```",8,10,9,3,3,3,3,71,0,0,1,0,0.0,0
417,71,test,"Give me the spouse of the parent, that is a royalty, of the child of Knud, Hereditary Prince of Denmark and child of the child, that is a royalty, of the parent, that is a royalty, of Alexandrine of Mecklenburg-Schwerin and child of the father of the leader, that is a royalty, of Colony of Greenland.","SELECT ?result WHERE { ?v4 <http://dbpedia.org/property/father> ?v5 . ?result <http://dbpedia.org/ontology/spouse> ?v2 . ?v8 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v7 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v8 <http://dbpedia.org/property/father> ?v7 . ?result <http://dbpedia.org/ontology/parent> ?v8 . ?v1 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Knud,_Hereditary_Prince_of_Denmark> . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v2 <http://dbpedia.org/ontology/child> ?v1 . <http://dbpedia.org/resource/Alexandrine_of_Mecklenburg-Schwerin> <http://dbpedia.org/ontology/parent> ?v7 . ?result <http://dbpedia.org/property/father> ?v5 . <http://dbpedia.org/resource/Colony_of_Greenland> <http://dbpedia.org/property/leader> ?v4 . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. }","```sparql
# Step 1: Identify a child of Knud, Hereditary Prince of Denmark
SELECT ?child WHERE {
    ?knud dbo:spouse ?parent .
    ?knud foaf:name ""Knud, Hereditary Prince of Denmark""@en .
    ?child dbo:parent ?parent .
}

# Step 2: Find the parent that is royalty for this child
SELECT ?royalParent WHERE {
    ?child dbo:parent ?royalParent .
    ?royalParent dbo:title ?title .
    FILTER(CONTAINS(LCASE(?title), ""prince"") || CONTAINS(LCASE(?title), ""queen"") || CONTAINS(LCASE(?title), ""king""))
}

# Step 3: Determine the spouse of this royal parent
SELECT ?spouse WHERE {
    ?royalParent dbo:spouse ?spouse .
}

# Step 4: Identify a child of Alexandrine of Mecklenburg-Schwerin who is royalty
SELECT ?childAlex WHERE {
    ?alex dbp:spouse ?parentAlex .
    ?alex foaf:name ""Alexandrine of Mecklenburg-Schwerin""@en .
    ?childAlex dbo:parent ?parentAlex .
    ?childAlex dbo:title ?titleAlex .
    FILTER(CONTAINS(LCASE(?titleAlex), ""prince"") || CONTAINS(LCASE(?titleAlex), ""queen"") || CONTAINS(LCASE(?titleAlex), ""king""))
}

# Step 5: Find the parent that is royalty for this child
SELECT ?royalParentAlex WHERE {
    ?childAlex dbo:parent ?royalParentAlex .
    ?royalParentAlex dbo:title ?titleRoyalParentAlex .
    FILTER(CONTAINS(LCASE(?titleRoyalParentAlex), ""prince"") || CONTAINS(LCASE(?titleRoyalParentAlex), ""queen"") || CONTAINS(LCASE(?titleRoyalParentAlex), ""king""))
}

# Step 6: Identify the father of the leader of Colony of Greenland
SELECT ?fatherGreenland WHERE {
    ?leader foaf:name ?nameLeader .
    ?leader dbo:position ""Governor of Greenland""@en .
    ?leader dbo:parent ?fatherGreenland .
}

# Step 7: Find a child that is royalty for this father
SELECT ?royalChildGreenland WHERE {
    ?fatherGreenland dbo:child ?royalChildGreenland .
    ?royalChildGreenland dbo:title ?titleRoyalChildGreenland .
    FILTER(CONTAINS(LCASE(?titleRoyalChildGreenland), ""prince"") || CONTAINS(LCASE(?titleRoyalChildGreenland), ""queen"") || CONTAINS(LCASE(?titleRoyalChildGreenland), ""king""))
}

# Final Step: Combine to find the spouse from step 3
SELECT ?spouse WHERE {
    # Assuming we have identified specific individuals in previous steps, replace with actual URIs or names
    ?royalParent foaf:name ?nameRoyalParent .
    ?royalParent dbo:spouse ?spouse .
}
```",9,13,10,3,3,3,3,71,0,0,1,0,0.0,0
443,25,test,"Give me the birthplace of Carl Larsson and birthplace of the person born, that is a musical artist and an artist, on 1949-11-20 and landmark at elevation of the award of William Shepherd.","SELECT ?result WHERE { <http://dbpedia.org/resource/William_Shepherd> <http://dbpedia.org/property/awards> ?v2 . ?result <http://dbpedia.org/ontology/elevation> ?v2 . ?v4 <http://dbpedia.org/ontology/birthDate> ""1949-11-20""^^<http://www.w3.org/2001/XMLSchema#date> . <http://dbpedia.org/resource/Carl_Larsson> <http://dbpedia.org/ontology/birthPlace> ?result . ?v4 <http://dbpedia.org/ontology/birthPlace> ?result . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. }","```sparql
# Query for Carl Larsson's birthplace
SELECT ?birthPlace WHERE {
  dbpedia:Carl_Larsson dbo:birthPlace ?birthPlace .
}

UNION

# Query for the person born on 1949-11-20 who is both a musical artist and an artist
SELECT ?birthPlace WHERE {
  ?person dbo:birthDate ""1949-11-20""^^xsd:date ;
          dbo:occupation dbpedia:Musical_artist ;
          dbo:occupation dbpedia:Artist .
  ?person dbo:birthPlace ?birthPlace .
}

UNION

# Query for the landmark at elevation of William Shepherd's award
SELECT ?landmark WHERE {
  ?award dbo:recipient dbpedia:William_Shepherd ;
         dbo:elevation ?elevation .
  ?landmark dbo:elevation ?elevation .
}
```",5,7,6,2,3,2,3,28,0,0,1,0,0.0,0
645,56,test,"Give me the military force of Spanish Civil War and leader of the office, that is a government agency and an organisation, of the native of Restoration (Spain) and commander in the force of Carlos Asensio Cabanillas.",SELECT ?result WHERE { ?v2 <http://dbpedia.org/ontology/commander> ?result . ?v0 <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Restoration_(Spain)> . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/GovernmentAgency>. ?result <http://dbpedia.org/ontology/battle> <http://dbpedia.org/resource/Spanish_Civil_War> . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?v2 <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Carlos_Asensio_Cabanillas> . ?v0 <http://dbpedia.org/property/office> ?v1 . ?v1 <http://dbpedia.org/ontology/leader> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?militaryForce ?leaderOfOffice WHERE {
  # Carlos Asensio Cabanillas and his military force during the Spanish Civil War
  dbr:Caballero_de_la_Orden_Militar_de_Santiago#Carlos_Asensio_Cabanillas dbo:commanderInMilitaryForce ?militaryForce .
  
  # Leader of a government agency/organization associated with someone from Restoration (Spain)
  ?person dbo:nationality dbr:Spain ;
          dbo:era dbr:Restoration_(Spain) .
  ?office dbo:leader ?leaderOfOffice ;
          a dbo:GovernmentAgency ; 
          a dbo:Organization .

  # Link the leader of the office to the person from Restoration
  ?leaderOfOffice dbo:nativeCountry ?person .
}
```",6,8,7,3,3,3,3,71,0,0,2,0,0.0,0
433,66,test,"Give me the professional in the profession of the writer of Slowhand at 70 – Live at the Royal Albert Hall and associated musical artist of the person born, that is a musical artist and an artist, as Paul Laurence Dunbar Chambers Jr. and associated musical artist of the associated musical artist, that is an artist and a musical artist, of Scott LaFaro.","SELECT ?result WHERE { ?v3 <http://dbpedia.org/property/birthName> ""Paul Laurence Dunbar Chambers Jr.""@en . <http://dbpedia.org/resource/Slowhand_at_70_–_Live_at_the_Royal_Albert_Hall> <http://dbpedia.org/property/writer> ?v1 . ?v1 <http://dbpedia.org/property/occupation> ?v2 . ?v6 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?v6 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?v6 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. <http://dbpedia.org/resource/Scott_LaFaro> <http://dbpedia.org/ontology/associatedMusicalArtist> ?v6 . ?v3 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?result <http://dbpedia.org/property/occupation> ?v2 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. }","```sparql
SELECT ?professional WHERE {
  # Eric Clapton's profession
  wd:Q34696 wdt:P106 wd:Q33999 . # Eric Clapton is a musician

  # Paul Chambers' associations
  wd:Q11998 wdt:P106 wd:Q13442814 . # Paul Chambers was a jazz bassist
  ?association1 p:P1700/ps:P1700 wd:Q11998 . # Musicians associated with Paul Chambers
  ?association1 pq:P1700 ?associatedMusician .

  # Scott LaFaro's associations
  wd:Q13442814 wdt:P106 wd:Q13442814 . # Scott LaFaro was a jazz bassist
  ?association2 p:P1700/ps:P1700 wd:Q13442814 . # Musicians associated with Scott LaFaro
  ?association2 pq:P1700 ?associatedMusician .

  # Find the professional who is both an artist and musician, like Paul Chambers and Scott LaFaro
  ?professional wdt:P106 wd:Q13442814 . # The professional is a jazz bassist
  ?professional p:P106/ps:P106 wd:Q33999 . # The professional is also a musician

  FILTER(?associatedMusician IN (?association1, ?association2))
}
```",7,11,8,3,3,3,3,71,0,0,1,0,0.0,0
456,63,test,"Give me the professional in the alter ego of The Shadow and band of the band, that is a musical artist, of Dean Brody and spouse of the actor of the movie, that is a work and a television show, with Ross Newton.",SELECT ?result WHERE { ?v3 <http://dbpedia.org/ontology/spouse> ?result . <http://dbpedia.org/resource/Dean_Brody> <http://dbpedia.org/ontology/associatedMusicalArtist> ?v2 . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?result <http://dbpedia.org/property/occupation> ?v6 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/TelevisionShow>. ?v2 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v4 <http://dbpedia.org/property/starring> ?v3 . <http://dbpedia.org/resource/The_Shadow> <http://dbpedia.org/property/alterEgo> ?v6 . ?v4 <http://dbpedia.org/property/starring> <http://dbpedia.org/resource/Ross_Newton> . },"```sparql
SELECT ?spouse ?spouseName WHERE {
  # Lamont Cranston as The Shadow's alter ego
  wd:Q1234567 wdt:P31/wdt:P279* wd:Q7890123 . # Assuming Q1234567 is Lamont Cranston

  # Ross Newton played The Shadow
  wd:Q9876543 wdt:P162 wdt:P136 wd:Q1234567 . # Assuming Q9876543 is Ross Newton

  # Find works involving Ross Newton
  ?work wdt:P161 wd:Q9876543 .

  # Find spouse of an actor in those works
  ?actor wdt:P161 ?work .
  ?actor wdt:P26 ?spouse .

  # Check if the spouse is a musical artist associated with Dean Brody
  ?spouse wdt:P106 wd:Q1028181 . # Musical Artist
  ?spouse wdt:P463 wd:Q4567890 . # Assuming Q4567890 is Dean Brody and His Band

  SERVICE wikibase:label { bd:serviceParam wikibase:language ""[AUTO_LANGUAGE],en"". }
}
```",7,10,8,3,3,3,3,71,0,0,1,0,0.0,0
200,9,test,Give me the band member of the band of Revenge (Canadian band) and reference to the name of Angelcorpse.,SELECT ?result WHERE { <http://dbpedia.org/resource/Revenge_(Canadian_band)> <http://dbpedia.org/ontology/associatedMusicalArtist> ?v3 . ?result <http://dbpedia.org/ontology/associatedMusicalArtist> ?v3 . ?result <http://xmlns.com/foaf/0.1/name> ?v1 . <http://dbpedia.org/resource/Angelcorpse> <http://xmlns.com/foaf/0.1/name> ?v1 . },"```sparql
# Query to find band members of Revenge (Canadian band)
SELECT ?member WHERE {
  ?band rdf:type dbo:MusicalBand .
  ?band rdfs:label ""Revenge""@en .
  ?band dbo:nationality dbr:Canada .
  ?band dbo:bandMember ?member .
  FILTER(LANG(?band) = 'en')
}

# Query to find the name of Angelcorpse
SELECT ?name WHERE {
  ?entity rdfs:label ""Angelcorpse""@en .
  ?entity rdfs:label ?name .
  FILTER(LANG(?name) = 'en')
}
```",4,4,5,2,2,2,2,9,0,0,1,0,0.0,0
417,70,test,"Give me the child of the child, that is a royalty, of the parent, that is a royalty, of Alexandrine of Mecklenburg-Schwerin and child of the father of the leader, that is a royalty, of Colony of Greenland and spouse of the parent, that is a royalty, of Count Ingolf of Rosenborg.",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/parent> ?v3 . ?result <http://dbpedia.org/ontology/spouse> ?v4 . <http://dbpedia.org/resource/Colony_of_Greenland> <http://dbpedia.org/property/leader> ?v0 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v4 <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Count_Ingolf_of_Rosenborg> . ?v3 <http://dbpedia.org/property/father> ?v1 . ?v0 <http://dbpedia.org/property/father> ?v7 . <http://dbpedia.org/resource/Alexandrine_of_Mecklenburg-Schwerin> <http://dbpedia.org/ontology/parent> ?v1 . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?result <http://dbpedia.org/property/father> ?v7 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?finalPerson WHERE {
  # Step 1: Alexandrine of Mecklenburg-Schwerin's royal parent
  ?alexParent a dbo:Monarch ;
              dbo:child dbr:Alexandrine_of_Mecklenburg-Schwerin .

  # Step 2: Child of that royal parent (sibling or another child)
  ?siblingOrChild dbo:parent ?alexParent ;
                  a dbo:Monarch .

  # Step 3: Leader of the Colony of Greenland and their father
  ?greenlandLeader a dbo:Monarch ;
                   dbo:country dbr:Greenland .
  ?greenlandLeaderFather dbo:child ?greenlandLeader .

  # Step 4: Spouse of this leader's parent (who is royalty)
  ?spouseOfLeaderParent dbo:spouse ?greenlandLeaderFather ;
                        a dbo:Monarch .

  # Step 5: Child of the child from step 2 who is also royalty
  ?childOfSiblingOrChild dbo:parent ?siblingOrChild ;
                         a dbo:Monarch .
  
  # Step 6: Final person connected through multiple royal lineages
  ?finalPerson dbo:parent ?childOfSiblingOrChild ;
               dbo:spouse ?spouseOfLeaderParent .
}
```",8,12,9,3,3,3,3,71,0,0,1,0,0.0,0
507,67,test,"Give me the spouse of Anne V. Coates and director of the movie, that is a movie and a work, with the person born on 1919-06-17 and professional in the profession of the person born on 1966-02-18.","SELECT ?result WHERE { ?v0 <http://dbpedia.org/ontology/birthDate> ""1919-06-17""^^<http://www.w3.org/2001/XMLSchema#date> . ?v6 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Film>. ?v1 <http://dbpedia.org/ontology/birthDate> ""1966-02-18""^^<http://www.w3.org/2001/XMLSchema#date> . ?result <http://dbpedia.org/ontology/spouse> <http://dbpedia.org/resource/Anne_V._Coates> . ?result <http://dbpedia.org/property/occupation> ?v3 . ?v6 <http://dbpedia.org/property/starring> ?v0 . ?v1 <http://dbpedia.org/property/occupation> ?v3 . ?v6 <http://dbpedia.org/ontology/director> ?result . ?v6 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?spouse ?director ?film ?born1919Person ?profession1966
WHERE {
    # Find Anne V. Coates' spouse
    dbr:Anne_V._Coates dbo:spouse ?spouse .

    # Find films directed by the spouse
    ?spouse dbo:directed ?film .
    
    # Ensure the film is categorized as both a movie and a work
    ?film rdf:type dbr:Film ;
          dbo:genre dbr:Movie ;
          dbo:workType dbr:LiteraryWork .

    # Find the person born on 1919-06-17
    ?born1919Person dbo:birthday ""1919-06-17""^^xsd:date .
    
    # Find the profession of the person born on 1966-02-18
    ?profession1966Person dbo:birthday ""1966-02-18""^^xsd:date ;
                          dbo:occupation ?profession1966 .

    # Ensure the director's profession matches or is related to the profession identified
    ?spouse dbo:occupation ?relatedProfession .
    
    FILTER(?relatedProfession = ?profession1966)
}
```",7,9,8,3,3,3,3,71,0,0,1,0,0.0,0
465,60,test,"Give me the successor of the child of the parent of Ercole II d'Este, Duke of Ferrara and successor of the child, that is a royalty, of the parent of Charles Orlando, Dauphin of France.","SELECT ?result WHERE { ?v2 <http://dbpedia.org/ontology/successor> ?result . ?v2 <http://dbpedia.org/property/father> ?v3 . ?v0 <http://dbpedia.org/ontology/child> ?v1 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v1 <http://dbpedia.org/ontology/successor> ?result . <http://dbpedia.org/resource/Ercole_II_d'Este,_Duke_of_Ferrara> <http://dbpedia.org/ontology/parent> ?v3 . <http://dbpedia.org/resource/Charles_Orlando,_Dauphin_of_France> <http://dbpedia.org/ontology/parent> ?v0 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT DISTINCT ?finalSuccessor WHERE {
  # Step 1: Identify Ercole II d'Este's parent
  ?ercole2 dbo:parent ?parentErcole2 .
  FILTER(STR(?ercole2) = ""Ercole_II_d%27Este"")

  # Step 2: Find the child of Ercole II d'Este's parent
  ?parentErcole2 dbo:child ?childParentErcole2 .

  # Step 3: Determine the successor of this child
  ?childParentErcole2 dbo:successor ?successorChildParentErcole2 .

  # Step 4: Identify Charles Orlando's parent
  ?charlesOrlando dbo:parent ?parentCharlesOrlando .
  FILTER(STR(?charlesOrlando) = ""Charles_Orland"")

  # Step 5: Find the child of Charles Orlando's parent
  ?parentCharlesOrlando dbo:child ?childParentCharlesOrlando .

  # Step 6: Determine the successor of this child that is a royalty
  ?childParentCharlesOrlando dbo:successor ?royaltySuccessor .
  FILTER(STR(?royaltySuccessor) = STR(?successorChildParentErcole2))

  # Step 7: Combine results to find the final successor
  ?successorChildParentErcole2 dbo:successor ?finalSuccessor .
}
```",6,7,7,3,2,3,3,71,0,0,1,0,0.0,0
495,19,test,Give me the child of the father of William I of Württemberg and father of the child of the parent of Princess Pauline of Württemberg (1810–1856).,SELECT ?result WHERE { ?v4 <http://dbpedia.org/property/father> ?result . ?v4 <http://dbpedia.org/ontology/parent> ?v0 . <http://dbpedia.org/resource/William_I_of_Württemberg> <http://dbpedia.org/property/father> ?v2 . ?result <http://dbpedia.org/property/father> ?v2 . <http://dbpedia.org/resource/Princess_Pauline_of_Württemberg_(1810–1856)> <http://dbpedia.org/ontology/parent> ?v0 . },"```sparql
SELECT ?childOfFather WHERE {
  # Step 1: Identify William I's father
  ?williamI dbr:William_I_of_Württemberg .
  ?williamI dbo:father ?fatherOfWilliamI .

  # Step 2: Find the child of William I's father (could be William I or another sibling)
  ?childOfFather dbo:parent ?fatherOfWilliamI .

  # Step 3: Identify Princess Pauline's parent
  ?pauline dbr:Pauline_of_Württemberg .
  ?pauline dbo:parent ?parentOfPauline .

  # Step 4: Find the child of Princess Pauline's parent (could be Pauline or another sibling)
  ?childOfParent dbp:parent ?parentOfPauline .

  # Step 5: Determine the father of the child from step 4
  ?fatherOfChild dbo:parent ?childOfParent .
  
  FILTER(?childOfFather = ?williamI || ?childOfFather = ?childOfParent)
}
```",5,5,6,3,2,3,2,20,0,0,1,0,0.0,0
865,71,test,"Give me the native of the residence, that is a country, of the person decedent at Patna and father of the child, that is a politician, of the spouse of Syeda Shahar Banu and father of the child of the father of Abul Maal Abdul Muhith.",SELECT ?result WHERE { ?v5 <http://dbpedia.org/property/father> ?result . ?result <http://dbpedia.org/ontology/birthPlace> ?v2 . ?v5 <http://dbpedia.org/property/father> ?v4 . <http://dbpedia.org/resource/Syeda_Shahar_Banu> <http://dbpedia.org/ontology/spouse> ?v4 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. ?v8 <http://dbpedia.org/property/father> ?result . <http://dbpedia.org/resource/Abul_Maal_Abdul_Muhith> <http://dbpedia.org/property/father> ?v7 . ?v1 <http://dbpedia.org/ontology/deathPlace> <http://dbpedia.org/resource/Patna> . ?v1 <http://dbpedia.org/property/residence> ?v2 . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v8 <http://dbpedia.org/property/father> ?v7 . },"```sparql
# Step 1: Identify Abul Maal Abdul Muhith's father
SELECT ?father WHERE {
    wd:Q123456 wdt:P22 ?father. # Assuming Q123456 is the DBpedia ID for Abul Maal Abdul Muhith
}

# Step 2: Find the spouse of Syeda Shahar Banu and their child who is a politician
SELECT ?spouse ?child WHERE {
    wd:Q654321 wdt:P26 ?spouse. # Assuming Q654321 is the DBpedia ID for Syeda Shahar Banu
    ?spouse wdt:P40 ?child.
    ?child wdt:P106 wd:Q82955. # wd:Q82955 represents politician in DBpedia
}

# Step 3: Match the father who died in Patna with the politician child from step 2
SELECT ?politician WHERE {
    ?politician wdt:P19 wd:Q12345. # Assuming Q12345 is the DBpedia ID for Patna
    ?politician wdt:P570 ?deathDate.
    FILTER EXISTS { ?deathDate ?any . } # Ensures the person has a death date (deceased)
    
    OPTIONAL {
        ?politician wdt:P40 ?child. # Check if this politician is also a child of someone else
        ?child wdt:P106 wd:Q82955. # Ensure the child is a politician
    }
}

# Step 4: Find the residence country of the identified politician
SELECT DISTINCT ?country WHERE {
    ?politician wdt:P551 ?residence.
    ?residence wdt:P17 ?country.
}
```",9,11,10,3,3,3,3,71,0,0,1,0,0.0,0
892,57,test,"Give me the entity in the administration, that is Italian and a region and a settlement and an administrative region, of Democratic Party (Italy) and entity in Italy and landmark at elevation of the award of the member of E-girls.",SELECT ?result WHERE { ?v0 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Italy>. <http://dbpedia.org/resource/E-girls> <http://dbpedia.org/ontology/bandMember> ?v1 . ?result <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Italy> . ?result <http://dbpedia.org/ontology/elevation> ?v4 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Region>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/AdministrativeRegion>. ?v1 <http://dbpedia.org/property/awards> ?v4 . ?result <http://dbpedia.org/ontology/province> ?v0 . ?v0 <http://dbpedia.org/property/leaderParty> <http://dbpedia.org/resource/Democratic_Party_(Italy)> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT DISTINCT ?region ?landmark WHERE {
  # Part 1: Find the region associated with Democratic Party (Italy)
  ?region a dbo:Region ;
          dbo:country dbr:Italy ;
          dbo:settlement true ;
          dbo:administrativeRegion true ;
          dbp:governingParty dbr:Democratic_Party_(Italy) .

  # Part 2: Find the landmark in Italy at a specific elevation related to an award of E-girls
  ?landmark a dbo:Landmark ;
            dbo:elevation ?elevation ;
            dbo:location dbr:Italy ;
            dbp:relatedAward ?award .
  
  # Assuming we have some way to link awards to E-girls, e.g., through DBpedia properties or external knowledge
  ?award dbo:recipient ?member .
  ?member rdfs:label ""E-girls""@en .

}
```",6,10,7,3,3,3,3,71,0,0,2,0,0.0,0
433,61,test,"Give me the professional in the profession of the writer of Slowhand at 70 – Live at the Royal Albert Hall and associated musical artist of the associated musical artist, that is an artist and a musical artist, of the associated musical artist, that is a musical artist and an artist, of Ornette Coleman.",SELECT ?result WHERE { ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?v5 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v0 <http://dbpedia.org/ontology/associatedMusicalArtist> ?v5 . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. ?v1 <http://dbpedia.org/property/occupation> ?v3 . <http://dbpedia.org/resource/Slowhand_at_70_–_Live_at_the_Royal_Albert_Hall> <http://dbpedia.org/property/writer> ?v1 . <http://dbpedia.org/resource/Ornette_Coleman> <http://dbpedia.org/ontology/associatedMusicalArtist> ?v0 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?result <http://dbpedia.org/property/occupation> ?v3 . },"```sparql
# Step 1: Find Eric Clapton as the writer of ""Slowhand at 70 – Live at the Royal Albert Hall""
SELECT ?clapton WHERE {
    ?album dcterms:title ""Slowhand at 70 – Live at the Royal Albert Hall"" .
    ?album dbo:performer ?clapton .
    ?clapton rdf:type dbo:MusicArtist .
}

# Step 2: Find an associated musical artist with Eric Clapton
SELECT ?associatedArtist WHERE {
    ?clapton dbo:collaboratedWith ?associatedArtist .
    ?associatedArtist rdf:type dbo:MusicArtist .
}

# Step 3: Identify a professional in the profession of writer for B.B. King who is also an artist and a musical artist
SELECT ?writerArtist WHERE {
    ?bbking dbo:hasCollaborator ?writerArtist .
    ?writerArtist rdf:type dbo:SongWriter ;
                  dbo:performer ?musicRole .
    ?musicRole rdf:type dbo:MusicArtist .
}

# Step 4: Find the associated musical artist of this professional that is also a musical artist and an artist
SELECT ?associatedWithPrince WHERE {
    ?writerArtist dbo:collaboratedWith ?associatedWithPrince .
    ?associatedWithPrince rdf:type dbo:MusicArtist ;
                          dbo:hasArtisticInfluence ?artRole .
}

# Step 5: Identify the associated musical artist of David Bowie that is a musical artist and an artist of Ornette Coleman
SELECT ?finalArtist WHERE {
    ?associatedWithPrince dbo:collaboratedWith ?finalArtist .
    ?finalArtist rdf:type dbo:MusicArtist ;
                 dbo:hasArtisticInfluence ?jazzRole .
    ?jazzRole dbo:influencedByOrCollaboratedWith <http://dbpedia.org/resource/Ornette_Coleman> .
}
```",6,10,7,3,2,3,3,71,0,0,46,0,0.0,0
281,24,test,"Give me the awardee of the award of Alfred Warden and awardee of the award, that is a military conflict, of Lawrence Moore Cosgrave.",SELECT ?result WHERE { ?result <http://dbpedia.org/property/awards> ?v0 . <http://dbpedia.org/resource/Lawrence_Moore_Cosgrave> <http://dbpedia.org/property/awards> ?v2 . <http://dbpedia.org/resource/Alfred_Warden> <http://dbpedia.org/property/awards> ?v0 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?result <http://dbpedia.org/property/awards> ?v2 . },"```sparql
# Query to find the awardee of the award associated with Alfred Warden
SELECT ?awardee WHERE {
  ?award dbo:wikiPageRedirects db:Q123456 ; # Replace Q123456 with the actual DBpedia ID for the Alfred Warden Award
         dbo:recipient ?person .
  ?person rdfs:label ?awardee .
  FILTER (lang(?awardee) = ""en"")
}

UNION

# Query to find the awardee of the award associated with Lawrence Moore Cosgrave
SELECT ?awardee WHERE {
  ?award dbo:wikiPageRedirects db:Q789012 ; # Replace Q789012 with the actual DBpedia ID for the Lawrence Moore Cosgrave Award
         dbo:recipient ?person .
  ?person rdfs:label ?awardee .
  FILTER (lang(?awardee) = ""en"")
}
```

Note: The placeholders `db:Q123456` and `db:Q789012` should be replaced with the actual DBpedia resource identifiers for the Alfred Warden Award and Lawrence Moore Cosgrave Award, respectively. These can be found by searching DBpedia or related resources.",4,5,5,2,2,2,3,28,0,0,1,0,0.0,0
579,19,test,"Give me the native of the residence, that is English and a settlement, of Alan Clyne and person born as the birth name of the native, that is an office holder, of Edinburgh.",SELECT ?result WHERE { ?result <http://dbpedia.org/property/birthName> ?v4 . ?v2 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/United_Kingdom>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v0 <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Edinburgh> . ?v0 <http://dbpedia.org/property/birthName> ?v4 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. <http://dbpedia.org/resource/Alan_Clyne> <http://dbpedia.org/property/residence> ?v2 . ?result <http://dbpedia.org/ontology/birthPlace> ?v2 . },"```sparql
# Step 1: Find Alan Clyne's residence
SELECT ?residence WHERE {
    ?person dbo:nationality dbr:United_Kingdom .
    ?person foaf:name ""Alan Clyne"" .
    ?person dbo:residence ?residence .
}

# Step 2: Check if the language of the residence is English
SELECT DISTINCT ?residence WHERE {
    ?residence dbo:language dbr:English_language .
    # Assuming we have found Alan Clyne's residence from step 1, replace `?residence` with that value.
}

# Step 3: Find an office holder born in Edinburgh and get their birth name
SELECT DISTINCT ?officeHolder ?birthName WHERE {
    ?officeHolder dbo:birthPlace dbr:Edinburgh .
    ?officeHolder dbo:occupation dbr:Office_holder .
    ?officeHolder foaf:name ?name .
    ?officeHolder foaf:birthday ?birthday .
    ?officeHolder foaf:givenName ?givenName .
    ?officeHolder foaf:familyName ?familyName .
    BIND(CONCAT(?givenName, "" "", ?familyName) AS ?birthName)
}

# Step 4: Match the native of the settlement to the birth name
SELECT DISTINCT ?residence ?birthName WHERE {
    # Assuming we have found the residence and birth name from previous steps
    ?residence dbo:language dbr:English_language .
    ?officeHolder foaf:name ?name .
    BIND(CONCAT(?givenName, "" "", ?familyName) AS ?birthName)
}
```",5,8,6,3,2,3,2,20,0,0,18,0,0.0,0
442,9,test,"Give me the resting place of the actor of This Side of Heaven and resting place of the work of Roosevelt, Theodore.","SELECT ?result WHERE { ?v3 <http://dbpedia.org/ontology/restingPlace> ?result . <http://dbpedia.org/resource/This_Side_of_Heaven> <http://dbpedia.org/ontology/starring> ?v3 . ?v1 <http://dbpedia.org/ontology/restingPlace> ?result . ?v1 <http://dbpedia.org/property/author> ""Roosevelt, Theodore""@en . }","```sparql
# Query for the resting place of the actor from ""This Side of Heaven""
SELECT ?actor ?actorName ?restingPlace WHERE {
  ?film dcterms:title ""This Side of Heaven""@en .
  ?film dbo:starring ?actor .
  ?actor foaf:name ?actorName .
  OPTIONAL { ?actor dbo:deathPlace ?restingPlace . }
} LIMIT 1

UNION

# Query for the resting place associated with Theodore Roosevelt
SELECT ?person ?personName ?restingPlace WHERE {
  ?person foaf:name ""Theodore Roosevelt""@en .
  OPTIONAL { ?person dbo:deathPlace ?restingPlace . }
}
```",4,4,5,2,2,2,2,9,0,0,1,0,0.0,0
41,24,test,"Give me the party of the person born as David Declan Costello and party of the work, that is an office holder, of yes.","SELECT ?result WHERE { ?v1 <http://dbpedia.org/property/author> ""yes""@en . ?v2 <http://dbpedia.org/ontology/party> ?result . ?v1 <http://dbpedia.org/ontology/party> ?result . ?v2 <http://dbpedia.org/property/birthName> ""David Declan Costello""@en . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. }","```sparql
# Query for the political party of David Declan Costello
SELECT ?party WHERE {
  ?person foaf:name ""David Declan Costello""@en .
  OPTIONAL { ?person dbo:politicalParty ?party . }
}
```

```sparql
# Query to find an office holder and their associated political party
SELECT DISTINCT ?officeHolder ?work ?party WHERE {
  ?officeHolder dbo:position ?work ;
               dbo:politicalAffiliation ?party .
  FILTER EXISTS { ?work rdf:type dbo:Office } # Assuming 'work' is an office or position
}
LIMIT 1
```",4,5,5,2,2,2,3,28,0,0,1,0,0.0,0
465,61,test,"Give me the successor of the child, that is a royalty, of the parent of Charles Orlando, Dauphin of France and spouse of the child, that is a royalty, of the parent of Elizabeth of Austria (1526–1545).","SELECT ?result WHERE { ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. <http://dbpedia.org/resource/Charles_Orlando,_Dauphin_of_France> <http://dbpedia.org/ontology/parent> ?v1 . ?v3 <http://dbpedia.org/ontology/successor> ?result . ?v1 <http://dbpedia.org/ontology/child> ?v3 . ?v0 <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Elizabeth_of_Austria_(1526–1545)> . ?v0 <http://dbpedia.org/ontology/child> ?v5 . ?result <http://dbpedia.org/ontology/spouse> ?v5 . }","```sparql
# Step 1: Find Charles IX's parent
SELECT ?parent WHERE {
  wd:Q1116 wdt:P22 ?parent .
}

# Step 2: Find Francis II (child of Henry II) and his spouse
SELECT ?spouse WHERE {
  ?child wdt:P31/wdt:P279* wd:Q11840 ; # Person and Royalty
         wdt:P25 wd:Q1116 . # Parent is Charles IX
  ?child wdt:P26 ?spouse .
}

# Step 3: Find Elizabeth of Austria's parent
SELECT ?parent WHERE {
  wd:Q1198 wdt:P22 ?parent .
}

# Step 4: Find Maximilian II (child of Ferdinand I)
SELECT ?child WHERE {
  ?child wdt:P31/wdt:P279* wd:Q11840 ; # Person and Royalty
         wdt:P25 wd:Q1198 . # Parent is Elizabeth's father
}

# Step 5: Find the successor of Mary, Queen of Scots
SELECT ?successor WHERE {
  wd:Q1242 wdt:P35 ?successor .
}
```",6,8,7,3,2,3,3,71,0,0,1,0,0.0,0
166,18,test,"Give me the entity in the territory administered, that is a country, from Madrid and resting place of the military force of the force, that is an event and a societal event and a military conflict, of Manuel Hedilla.",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/country> ?v3 . ?v2 <http://dbpedia.org/ontology/battle> ?v1 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?v1 <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Manuel_Hedilla> . ?v2 <http://dbpedia.org/ontology/restingPlace> ?result . ?v3 <http://dbpedia.org/ontology/capital> <http://dbpedia.org/resource/Madrid> . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?country WHERE {
  ?event dbo:type dbr:Military_conflict .
  ?event dbo:place dbr:Madrid .
  ?event dbo:participant dbr:Manuel_Hedilla .
  ?event dbo:endLocation ?location .
  ?location dbo:country ?country .
  FILTER EXISTS { ?country dbo:administrativeCapital dbr:Madrid }
}
```",5,9,6,3,2,3,2,20,0,0,4,0,0.0,0
582,61,test,"Give me the figure known as the nickname of the team, that is an organisation, of Hajime Moriyasu and player in the father, that is an athlete and a soccer manager and a sports manager, of the child of Kazuaki Nagasawa.",SELECT ?result WHERE { ?v1 <http://dbpedia.org/property/nickname> ?v3 . ?v0 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Kazuaki_Nagasawa> . ?result <http://dbpedia.org/property/nickname> ?v3 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?v1 <http://dbpedia.org/ontology/coach> <http://dbpedia.org/resource/Hajime_Moriyasu> . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Athlete>. ?v5 <http://dbpedia.org/ontology/team> ?result . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsManager>. ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerManager>. ?v0 <http://dbpedia.org/property/father> ?v5 . },"```sparql
# Step 1: Find Hajime Moriyasu's current or past teams
SELECT ?team WHERE {
  ?person dbo:occupation dbp:Soccer_manager .
  ?person foaf:name ""Hajime Moriyasu""@en .
  ?person dbo:currentTeam ?team .
}

UNION

SELECT ?team WHERE {
  ?person dbo:occupation dbp:Soccer_manager .
  ?person foaf:name ""Hajime Moriyasu""@en .
  ?person dbo:pastTeam ?team .
}

# Step 2: Find the nickname of that team
SELECT ?nickname WHERE {
  ?team rdfs:label ?teamLabel .
  FILTER(CONTAINS(LCASE(?teamLabel), LCASE(""hajime moriyasu"")))
  OPTIONAL { ?team dbp:nickname ?nickname . }
}

# Step 3: Identify Kazuaki Nagasawa's father
SELECT ?father WHERE {
  ?child dbo:parent ?father .
  ?child foaf:name ""Kazuaki Nagasawa""@en .
  ?father dbo:occupation ?occupation .
  FILTER(CONTAINS(LCASE(?occupation), LCASE(""athlete"")) || CONTAINS(LCASE(?occupation), LCASE(""soccer manager"")) || CONTAINS(LCASE(?occupation), LCASE(""sports manager"")))
}

# Step 4: Determine if there is a player connection
SELECT ?player WHERE {
  ?team dbp:nickname ?nickname .
  ?player dbo:currentTeam ?team .
  ?father foaf:name ?fatherName .
  FILTER(CONTAINS(LCASE(?fatherName), LCASE(""kazuaki nagasawa's father"")))
}
```",6,10,7,3,2,3,3,71,0,0,1,0,0.0,0
216,56,test,"Give me the team of the person born, that is a sports manager and a soccer manager and a soccer player, on the death of Pavel Vezhinov and player in the coach of Croatia national under-21 football team and player in Mario Ivanković.",SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerPlayer>. <http://dbpedia.org/resource/Mario_Ivanković> <http://dbpedia.org/ontology/team> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsManager>. ?v2 <http://dbpedia.org/ontology/team> ?result . ?v1 <http://dbpedia.org/ontology/birthDate> ?v0 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerManager>. <http://dbpedia.org/resource/Croatia_national_under-21_football_team> <http://dbpedia.org/ontology/coach> ?v2 . ?result <http://dbpedia.org/ontology/coach> ?v1 . <http://dbpedia.org/resource/Pavel_Vezhinov> <http://dbpedia.org/ontology/deathDate> ?v0 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?team WHERE {
  ?person a dbo:SoccerPlayer ;
          foaf:name ""Zlatko Kranjčar""@en .
  
  OPTIONAL { ?person dbo:birthDate ?birthDate . }
  FILTER (YEAR(?birthDate) = 1960 && MONTH(?birthDate) = 3 && DAY(?birthDate) = 13)
  
  ?person dbo:team ?team .
}
```",6,9,7,3,3,3,3,71,0,0,1,0,0.0,0
433,60,test,"Give me the professional in the profession of the writer of Slowhand at 70 – Live at the Royal Albert Hall and associated musical artist of the person born, that is a musical artist and an artist, as the persona of Paul Chambers.",SELECT ?result WHERE { ?v0 <http://dbpedia.org/property/occupation> ?v1 . ?v2 <http://dbpedia.org/property/birthName> ?v3 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?result <http://dbpedia.org/property/occupation> ?v1 . ?v2 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . <http://dbpedia.org/resource/Paul_Chambers> <http://xmlns.com/foaf/0.1/givenName> ?v3 . <http://dbpedia.org/resource/Slowhand_at_70_–_Live_at_the_Royal_Albert_Hall> <http://dbpedia.org/property/writer> ?v0 . },"```sparql
SELECT ?person WHERE {
  # Identify Eric Clapton as the writer of ""Slowhand at 70 – Live at the Royal Albert Hall""
  ?album dcterms:title ""Slowhand at 70 – Live at the Royal Albert Hall"" ;
         dbo:composer ?clapton .
  
  # Ensure that ?clapton is a musician
  ?clapton rdf:type dbo:Musician .

  # Identify Paul Chambers and his associated musical artist, Miles Davis
  ?chambers rdf:type dbo:Musician ;
            foaf:name ""Paul Chambers"" .
  ?miles rdf:type dbo:Musician ;
         foaf:name ""Miles Davis"" .
  ?collaboration dbo:musicalArtist ?miles ;
                 dbo:associatedMusicalArtist ?chambers .

  # Find a musician associated with both Eric Clapton and Miles Davis
  ?association1 dbo:musicalArtist ?clapton .
  ?association2 dbo:musicalArtist ?miles .
  
  # The person we are looking for is John McLaughlin
  ?person rdf:type dbo:Musician ;
          foaf:name ""John McLaughlin"" .
  FILTER (?association1 = ?association2)
}
```",6,8,7,3,2,3,3,71,0,0,16,0,0.0,0
715,71,test,"Give me the commander in the force, that is a military conflict, of the native of Morocco and commander in the force of the mayor, that is an office holder and a politician and a president, of 1933 Spanish general election and leader of the office, that is a government agency and an organisation, of the reference to Carlos Franco Iribarnegaray.","SELECT ?result WHERE { ?v5 <http://dbpedia.org/ontology/commander> ?result . ?v2 <http://dbpedia.org/ontology/commander> ?v1 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v5 <http://dbpedia.org/ontology/commander> ?v4 . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/President>. ?v7 <http://xmlns.com/foaf/0.1/name> ""Carlos Franco Iribarnegaray""@en . ?v8 <http://dbpedia.org/ontology/leader> ?result . ?v8 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?v7 <http://dbpedia.org/property/office> ?v8 . ?v8 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/GovernmentAgency>. ?v1 <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Morocco> . <http://dbpedia.org/resource/1933_Spanish_general_election> <http://dbpedia.org/property/leader> ?v4 . ?v2 <http://dbpedia.org/ontology/commander> ?result . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. }","```sparql
SELECT ?person WHERE {
  # Abd el-Krim as commander in the Rif War (Morocco)
  ?rifWar dbo:location dbr:Morocco .
  ?rifWar dbo:commander ?abdelKrim .
  
  # Francisco Franco's involvement in the Rif War
  ?franco dbo:occupation dbr:Military_officer ;
          dbo:almaMater dbr:Academia_General_Bascongada ;
          dbo:placeOfBirth dbr:Larache,Spain ;
          dbo:spouse ?anaBelausteguigoitia .
  
  # Francisco Franco's political role in Spain
  ?franco dbo:officeHolder dbr:Military_governor_of_Spain ;
          dbo:politicalAffiliation dbr:Falange_Espanola_Organiacion_1934-39 ;
          dbo:electedAsPresident ?election .

  # Carlos Franco Iribarnegaray's connection
  ?carlosFranco rdfs:label ""Carlos Franco Iribarnegaray""@en .
  ?franco dbo:sibling ?carlosFranco .

  FILTER(?person = ?franco)
}
```",9,15,10,3,3,3,3,71,0,0,1,0,0.0,0
433,71,test,"Give me the associated musical artist of the person born, that is a musical artist and an artist, as the persona of Paul Chambers and professional in the profession of the writer of Slowhand at 70 – Live at the Royal Albert Hall and associated musical artist of the associated musical artist, that is an artist and a musical artist, of the associated musical artist, that is a musical artist and an artist, of Ornette Coleman.",SELECT ?result WHERE { ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?v5 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v7 <http://dbpedia.org/property/occupation> ?v8 . ?v4 <http://dbpedia.org/ontology/associatedMusicalArtist> ?v5 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. <http://dbpedia.org/resource/Slowhand_at_70_–_Live_at_the_Royal_Albert_Hall> <http://dbpedia.org/property/writer> ?v7 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. ?v2 <http://dbpedia.org/property/birthName> ?v1 . <http://dbpedia.org/resource/Ornette_Coleman> <http://dbpedia.org/ontology/associatedMusicalArtist> ?v4 . ?v2 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?result <http://dbpedia.org/property/occupation> ?v8 . <http://dbpedia.org/resource/Paul_Chambers> <http://xmlns.com/foaf/0.1/givenName> ?v1 . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. },"```sparql
SELECT ?artist WHERE {
  # Paul Chambers association with Ornette Coleman
  ?paulChambers dbo:associatedMusicalArtist dbr:Ornette_Coleman .
  
  # Ornette Coleman association with John Coltrane
  ?ornetteColeman dbo:associatedMusicalArtist dbr:John_Coltrane .

  # John Coltrane association with Miles Davis
  ?johnColtrane dbo:associatedMusicalArtist dbr:Miles_Davis .

  # Eric Clapton, writer of ""Slowhand at 70 – Live at the Royal Albert Hall""
  ?slowhandAlbum dbo:writer dbr:Eric_Clapton .
  
  # Eric Clapton association with J.J. Cale
  ?ericClapton dbo:associatedMusicalArtist dbr:J._J._Cale .

  # Ensure all entities are artists and musical artists
  ?paulChambers rdf:type dbo:Artist ;
                rdf:type dbo:MusicalArtist .
  ?ornetteColeman rdf:type dbo:Artist ;
                   rdf:type dbo:MusicalArtist .
  ?johnColtrane rdf:type dbo:Artist ;
                rdf:type dbo:MusicalArtist .
  ?milesDavis rdf:type dbo:Artist ;
              rdf:type dbo:MusicalArtist .
  ?ericClapton rdf:type dbo:Artist ;
               rdf:type dbo",9,15,10,3,3,3,3,71,0,0,4,0,0.0,0
987,58,test,"Give me the birth place of Dado Polumenta and birth place of the actor of All for Free and entity in the region, that is a country, of the time zone, that is a sports event, in Canicosa de la Sierra.",SELECT ?result WHERE { ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsEvent>. ?result <http://dbpedia.org/ontology/country> ?v0 . ?v5 <http://dbpedia.org/ontology/birthPlace> ?result . <http://dbpedia.org/resource/Dado_Polumenta> <http://dbpedia.org/ontology/birthPlace> ?result . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. <http://dbpedia.org/resource/All_for_Free> <http://dbpedia.org/property/starring> ?v5 . <http://dbpedia.org/resource/Canicosa_de_la_Sierra> <http://dbpedia.org/ontology/timeZone> ?v4 . ?v0 <http://dbpedia.org/property/timeZone> ?v4 . },"```sparql
# Query for Dado Polumenta's birthplace
SELECT ?birthPlace WHERE {
  dbpedia:en:Dado_Povlevitch dbo:birthPlace ?birthPlace .
}

# Query for the actor in ""All for Free"" and their birthplace
SELECT DISTINCT ?actor ?actorBirthPlace WHERE {
  ?movie dbo:title ""All for Free""@en.
  ?movie dbo:starring ?actor.
  ?actor dbo:birthPlace ?actorBirthPlace.
}

# Query for a sports event in Canicosa de la Sierra, its time zone, and a country in that time zone
SELECT DISTINCT ?country WHERE {
  dbpedia:es:Canicosa_de_la_Sierra dbo:sportEvent ?event .
  ?event dbo:timeZone ?timeZone.
  ?location dbo:timeZone ?timeZone;
            rdf:type dbo:Country.
  BIND(?location AS ?country)
}
```",6,8,7,3,3,3,3,71,0,0,1,0,0.0,0
606,19,test,"Give me the figure known as the nickname of DeKalb, Illinois and birthplace of the alumnus of the figure known, that is a university and a sports league and an educational institution, as Penn Quakers.","SELECT ?result WHERE { ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/EducationalInstitution>. <http://dbpedia.org/resource/DeKalb,_Illinois> <http://dbpedia.org/property/nickname> ?v2 . ?v0 <http://dbpedia.org/property/nickname> <http://dbpedia.org/resource/Penn_Quakers> . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/University>. ?result <http://dbpedia.org/property/nickname> ?v2 . ?v4 <http://dbpedia.org/ontology/almaMater> ?v0 . ?v4 <http://dbpedia.org/ontology/birthPlace> ?result . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsLeague>. }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?nickname ?person WHERE {
  # Find the nickname of DeKalb, Illinois
  VALUES ?dekalb { dbr:DeKalb,_Illinois }
  ?dekalb dbo:nickname ?nickname .

  # Identify notable people from DeKalb with ties to Penn Quakers (University of Pennsylvania)
  ?person dbo:birthPlace ?dekalb .
  ?person dbo:almaMater dbr:University_of_Pennsylvania .
  
  OPTIONAL {
    ?person dbo:sportsTeamAffiliation dbr:Ivy_League .
  }
}
```",5,8,6,3,2,3,2,20,0,0,1,0,0.0,0
507,58,test,"Give me the director of the movie, that is a movie and a work, with Beryl Reid and spouse of Anne V. Coates and professional in the profession of the person born on 1966-02-18.","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/spouse> <http://dbpedia.org/resource/Anne_V._Coates> . ?v1 <http://dbpedia.org/property/occupation> ?v2 . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?v5 <http://dbpedia.org/ontology/director> ?result . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Film>. ?result <http://dbpedia.org/property/occupation> ?v2 . ?v5 <http://dbpedia.org/property/starring> <http://dbpedia.org/resource/Beryl_Reid> . ?v1 <http://dbpedia.org/ontology/birthDate> ""1966-02-18""^^<http://www.w3.org/2001/XMLSchema#date> . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?director WHERE {
  # Step 1: Identify the person born on 1966-02-18
  ?person a dbo:Person ;
          dbo:birthDate ""1966-02-18""^^xsd:date .

  # Step 2: Determine their profession
  ?person dbo:profession ?profession .

  # Step 3: Find Anne V. Coates' spouse
  dbr:Anne_V._Coates dbo:spouse ?coatesSpouse .

  # Step 4: Identify movies featuring Beryl Reid and the spouse of Anne V. Coates
  ?movie a dbo:Film ;
         dbo:starring dbr:Beryl_Reid, ?coatesSpouse .

  # Step 5: Ensure the movie is both a ""movie"" and a ""work""
  ?movie a dbo:Film, dbo:Work .

  # Step 6: Identify the director of this movie
  ?movie dbo:director ?director .
}
```",6,8,7,3,3,3,3,71,0,0,1,0,0.0,0
417,58,test,"Give me the child of the child, that is a royalty, of the parent, that is a royalty, of Alexandrine of Mecklenburg-Schwerin and child of the father of Frederick IX of Denmark and spouse of Princess Caroline-Mathilde of Denmark.",SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. <http://dbpedia.org/resource/Frederick_IX_of_Denmark> <http://dbpedia.org/property/father> ?v5 . <http://dbpedia.org/resource/Alexandrine_of_Mecklenburg-Schwerin> <http://dbpedia.org/ontology/parent> ?v1 . ?v2 <http://dbpedia.org/property/father> ?v1 . ?result <http://dbpedia.org/ontology/parent> ?v2 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?result <http://dbpedia.org/property/father> ?v5 . ?result <http://dbpedia.org/ontology/spouse> <http://dbpedia.org/resource/Princess_Caroline-Mathilde_of_Denmark> . },"```sparql
SELECT ?childOfChild WHERE {
  # Alexandrine of Mecklenburg-Schwerin's parent who is royalty
  dbpedia:Alexandrine_of_Mecklenburg-Schwerin dbo:parent ?royalParent .
  
  # Child of that royal parent
  ?royalParent dbo:child ?childOfRoyalParent .

  # Father of Frederick IX of Denmark
  dbpedia:Frederick_IX_of_Denmark dbo:father ?kingChristianX .
  
  # Spouse of Princess Caroline-Mathilde of Denmark
  dbpedia:Princess_Caroline_Matilda_of_Denmark dbo:spouse ?princeJoachim .

  # Child of Prince Joachim
  ?princeJoachim dbo:child ?childOfPrinceJoachim .

  # Ensure the child is a royalty
  ?childOfChild dbo:parent ?childOfPrinceJoachim .
  ?childOfChild rdf:type dbpedia:RoyalFamilyMember .
}
```",6,8,7,3,3,3,3,71,0,0,1,0,0.0,0
865,57,test,"Give me the native of British Raj and father of the child, that is a politician, of the spouse of Syeda Shahar Banu and father of the child of Abu Ahmad Abdul Hafiz.",SELECT ?result WHERE { ?v4 <http://dbpedia.org/property/father> ?v1 . ?v3 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Abu_Ahmad_Abdul_Hafiz> . ?v4 <http://dbpedia.org/property/father> ?result . ?v3 <http://dbpedia.org/property/father> ?result . ?result <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/British_Raj> . <http://dbpedia.org/resource/Syeda_Shahar_Banu> <http://dbpedia.org/ontology/spouse> ?v1 . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT ?nativeOfBritishRaj WHERE {
  ?syedaShaharBanuSpouse a dbo:Person ;
                        foaf:name ?spouseName .
  
  ?abuAhmadAbdulHafiz a dbo:Person ;
                     foaf:name ""Abu Ahmad Abdul Hafiz"" .

  ?childOfAbuAhmadAbdulHafiz dbo:parent ?abuAhmadAbdulHafiz ;
                             dbo:parent ?fatherOfChild .
  
  ?politicianChild dbo:parent ?syedaShaharBanuSpouse ;
                  a dbo:Politician .

  ?nativeOfBritishRaj dbo:child ?politicianChild ;
                      foaf:name ?nativeName ;
                      dbo:nationality ""British Raj"" .
}
```",6,7,7,3,3,3,3,71,0,0,1,0,0.0,0
933,71,test,"Give me the reference to the birth name of the professional in Musician and band of the band, that is a group and a band and an organisation, of the person born, that is a musical artist, on 1947-04-21 and band of the band of the band, that is an artist and a musical artist, of The Ramong Sound.","SELECT ?result WHERE { <http://dbpedia.org/resource/The_Ramong_Sound> <http://dbpedia.org/ontology/associatedMusicalArtist> ?v1 . ?v8 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v8 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?v4 <http://dbpedia.org/property/birthName> ?v5 . ?v7 <http://dbpedia.org/ontology/associatedMusicalArtist> ?v8 . ?v8 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Group>. ?v4 <http://dbpedia.org/property/occupation> <http://dbpedia.org/resource/Musician> . ?v1 <http://dbpedia.org/ontology/associatedMusicalArtist> ?v2 . ?v7 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?v8 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Band>. ?v2 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v7 <http://dbpedia.org/ontology/birthDate> ""1947-04-21""^^<http://www.w3.org/2001/XMLSchema#date> . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. ?result <http://xmlns.com/foaf/0.1/name> ?v5 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?birthName WHERE {
  ?person a dbo:MusicalArtist ;
          dbo:birthDate ""1947-04-21""^^xsd:date ;
          dbo:bandMember dbr:The_Ramones .
  OPTIONAL { ?person dbp:birthday ""1947-04-21""^^xsd:date . }
  OPTIONAL { ?person dbp:birthName ?birthName . }
}
```",9,15,10,3,3,3,3,71,0,0,1,0,0.0,0
826,58,test,"Give me the predecessor of the parent of the child of Louis IV, Grand Duke of Hesse and spouse of Anna Magdalena Appel and successor of the child, that is a royalty, of Louis I, Grand Duke of Hesse.","SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/parent> <http://dbpedia.org/resource/Louis_IV,_Grand_Duke_of_Hesse> . ?result <http://dbpedia.org/ontology/successor> ?v2 . <http://dbpedia.org/resource/Louis_I,_Grand_Duke_of_Hesse> <http://dbpedia.org/ontology/child> ?v5 . ?v1 <http://dbpedia.org/ontology/parent> ?v2 . ?v5 <http://dbpedia.org/ontology/successor> ?result . <http://dbpedia.org/resource/Anna_Magdalena_Appel> <http://dbpedia.org/ontology/spouse> ?result . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?predecessor WHERE {
  # Louis IV, Grand Duke of Hesse
  VALUES ?louisIV { dbr:Ludwig_IV,_Grand_Duke_of_Hesse }

  # Child of Louis IV who is royalty
  ?child dbo:parent ?louisIV .
  ?child a dbo:Monarch .

  # Parent of the child (Louis IV or another parent)
  OPTIONAL { ?parent dbo:child ?child . }
  
  # Spouse of Anna Magdalena Appel
  ?spouse dbo:spouse dbr:Anna_Magdalena_Appel .
  
  # Louis I, Grand Duke of Hesse and his child
  VALUES ?louisI { dbr:Ludwig_I,_Grand_Duke_of_Hesse }
  ?childL1 dbo:parent ?louisI .
  ?childL1 a dbo:Monarch .

  # Successor of the child of Louis I
  ?successor dbo:predecessor ?childL1 .

  # Predecessor of the parent (Louis IV or another)
  ?predecessor dbo:successor ?parent .
}
```",6,7,7,3,3,3,3,71,0,0,1,0,0.0,0
976,67,test,"Give me the office of the person born as the birth name of Naci Bostancı and office of Mustafa Şentop and office of the mayor, that is a politician and an office holder and Turkish, of the reference, that is an organisation and a political party and Turkish, to Millet İttifakı.","SELECT ?result WHERE { <http://dbpedia.org/resource/Naci_Bostancı> <http://dbpedia.org/property/birthName> ?v4 . <http://dbpedia.org/resource/Mustafa_Şentop> <http://dbpedia.org/property/office> ?result . ?v0 <http://dbpedia.org/property/office> ?result . ?v1 <http://xmlns.com/foaf/0.1/name> ""Millet İttifakı""@en . ?v5 <http://dbpedia.org/property/office> ?result . ?v1 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Turkey>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/PoliticalParty>. ?v0 <http://dbpedia.org/property/birthName> ?v4 . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v1 <http://dbpedia.org/property/leader> ?v5 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v5 <http://dbpedia.org/ontology/nationality> <http://dbpedia.org/resource/Turkey>. }","```sparql
# Query 1: Find Naci Bostancı's birth name
SELECT ?birthName WHERE {
  dbpedia-tr:Naci_Bostancı dbo:birthName ?birthName .
}

# Query 2: Find the office of the person with the birth name obtained from Query 1
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?office WHERE {
  ?person dbo:birthName ?birthName .
  ?person dbo:currentOffice ?office .
  FILTER(?birthName = ""Naci Bostancı's birth name from Query 1"")
}

# Query 3: Find Mustafa Şentop's office
SELECT ?office WHERE {
  dbr:Mustafa_Şentop dbo:currentOffice ?office .
}

# Query 4: Identify the organization referred to as Millet İttifakı
SELECT ?organization WHERE {
  ?organization rdfs:label ""Millet İttifakı""@tr .
  FILTER(LANG(?organization) = 'tr')
}

# Query 5: Find a Turkish mayor who is also a politician and associated with the organization from Query 4
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?mayor ?office WHERE {
  ?mayor rdf:type dbo:Mayor .
  ?mayor dbo:nationality dbr:Turkey .
  ?mayor dbo:currentOffice ?office .
  ?mayor dbo:partyAffiliation ?organization .
  FILTER(?organization = ""Organization from Query 4"")
}
```",7,13,8,3,3,3,3,71,0,0,1,0,0.0,0
445,59,test,"Give me the death place of the awardee of the establishment of 1820-03-10 and entity in the residence, that is a country, of the resident, that is an athlete, of Great Britain.","SELECT ?result WHERE { ?v0 <http://dbpedia.org/ontology/foundingDate> ""1820-03-10""^^<http://www.w3.org/2001/XMLSchema#date> . ?v3 <http://dbpedia.org/property/residence> <http://dbpedia.org/resource/Great_Britain> . ?result <http://dbpedia.org/ontology/location> ?v2 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Athlete>. ?v3 <http://dbpedia.org/property/residence> ?v2 . ?v5 <http://dbpedia.org/ontology/deathPlace> ?result . ?v5 <http://dbpedia.org/property/awards> ?v0 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. }","```sparql
SELECT ?deathPlace WHERE {
  # Step 1: Identify the entity associated with the establishment date
  ?entity dbo:foundingDate ""1820-03-10""^^xsd:date .
  
  # Step 2: Find athletes from Great Britain and their countries of residence
  ?athlete dbo:nationality dbr:United_Kingdom ;
           dbo:residenceCountry ?country .

  # Step 3: Link the awardee to the athlete's country of residence
  ?entity dbo:awardRecipient ?awardee .
  ?awardee dbo:residenceCountry ?country .

  # Find the death place of the awardee
  ?awardee dbo:deathPlace ?deathPlace .
}
```",6,8,7,3,2,3,3,71,0,0,1,0,0.0,0
888,18,test,"Give me the awardee of the award of Oleksandr Syrskyi and commander in the force, that is a societal event and an event, of the military force of War in Donbas (2014–2022).",SELECT ?result WHERE { ?v2 <http://dbpedia.org/ontology/commander> ?v1 . ?v2 <http://dbpedia.org/ontology/commander> ?result . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?result <http://dbpedia.org/property/awards> ?v3 . <http://dbpedia.org/resource/Oleksandr_Syrskyi> <http://dbpedia.org/property/awards> ?v3 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?v1 <http://dbpedia.org/ontology/battle> <http://dbpedia.org/resource/War_in_Donbas_(2014–2022)> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?award ?event WHERE {
  ?person a dbo:Person ;
          foaf:name ""Oleksandr Syrskyi""@en ;
          dbo:occupation ?occupation .
  
  OPTIONAL { ?person dbo:award ?award . }
  OPTIONAL { ?award dbo:event ?event . }

  FILTER(CONTAINS(LCASE(?occupation), ""commander"") || CONTAINS(LCASE(?occupation), ""military""))
  FILTER(CONTAINS(LCASE(?event), ""war in donbas"") || CONTAINS(LCASE(?event), ""donbas""))

  SERVICE wikibase:label { bd:serviceParam wikibase:language ""[AUTO_LANGUAGE],en"". }
}
```",5,7,6,3,2,3,2,20,0,0,2,0,0.0,0
443,24,test,"Give me the birthplace of the person born, that is a musical artist and an artist, on 1949-11-20 and birthplace of the work of yes.","SELECT ?result WHERE { ?v2 <http://dbpedia.org/ontology/birthPlace> ?result . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?v1 <http://dbpedia.org/ontology/birthPlace> ?result . ?v2 <http://dbpedia.org/ontology/birthDate> ""1949-11-20""^^<http://www.w3.org/2001/XMLSchema#date> . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. ?v1 <http://dbpedia.org/property/author> ""yes""@en . }","```sparql
# Query 1: Find the birthplace of a person who is both a musical artist and an artist, born on November 20, 1949.
SELECT ?birthPlace WHERE {
  ?person dbo:birthDate ""1949-11-20""^^xsd:date ;
          dbo:occupation dbr_Musician ;
          dbo:occupation dbr_Artist .
  ?person foaf:bornIn ?birthPlace .
}

# Query 2: Find the birthplace or origin of the band Yes.
SELECT ?origin WHERE {
  ?band rdfs:label ""Yes""@en ;
        dbo:foundingLocation ?origin .
}
```",4,6,5,2,2,2,3,28,0,0,2,0,0.0,0
341,9,test,"Give me the band member of the awardee of List of awards and nominations received by Beyoncé and writer of the work, that is a work and an album, of Serrano.","SELECT ?result WHERE { ?v3 <http://dbpedia.org/property/writer> ?result . ?result <http://dbpedia.org/ontology/associatedMusicalArtist> ?v1 . ?v1 <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/List_of_awards_and_nominations_received_by_Beyoncé> . ?v3 <http://dbpedia.org/property/writer> ""Serrano""@en . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Album>. }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?bandMember WHERE {
  # Beyoncé's awards
  ?award dbo:recipient dbr:Beyoncé .
  
  # Pulitzer Prize for Music in 2020
  ?pulitzerAward a dbo:Award ;
                rdfs:label ""Pulitzer Prize for Music""@en ;
                dbo:year ""2020""^^xsd:gYear ;
                dbo:winner dbr:DAMN._(album) .

  # DAMN. album details
  dbr:DAMN._(album) dbo:contributor ?writer .
  
  # Check if any Beyoncé band member is linked to the writer or album
  OPTIONAL { ?bandMember dbo:musicGroup dbr:Beyoncé . }
  FILTER(?bandMember != dbr:Beyoncé)
}
```",4,6,5,2,2,2,2,9,0,0,1,0,0.0,0
465,64,test,"Give me the spouse of Archduchess Barbara of Austria and successor of the child of the parent of Ercole II d'Este, Duke of Ferrara and successor of the child, that is a royalty, of the parent of Charles Orlando, Dauphin of France.","SELECT ?result WHERE { ?v2 <http://dbpedia.org/property/father> ?v3 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. <http://dbpedia.org/resource/Ercole_II_d'Este,_Duke_of_Ferrara> <http://dbpedia.org/ontology/parent> ?v3 . ?v0 <http://dbpedia.org/ontology/child> ?v1 . ?v2 <http://dbpedia.org/ontology/successor> ?result . <http://dbpedia.org/resource/Charles_Orlando,_Dauphin_of_France> <http://dbpedia.org/ontology/parent> ?v0 . ?v1 <http://dbpedia.org/ontology/successor> ?result . ?result <http://dbpedia.org/ontology/spouse> <http://dbpedia.org/resource/Archduchess_Barbara_of_Austria> . }","```sparql
# Step 1: Find Ercole II d'Este's parent
SELECT ?parent WHERE {
    wd:Q123456 wdt:P31/wdt:P279* wd:Q11111; # Ercole II d'Este is a Duke of Ferrara
    wdt:P22 ?parent. # His father
}

# Step 2: Find the successor of Alfonso I d'Este's child (Ercole II)
SELECT ?successor WHERE {
    ?ercole wdt:P31/wdt:P279* wd:Q11111; # Ercole II is a Duke of Ferrara
    wdt:P22 wd:Q123456. # His father is Alfonso I d'Este
    ?ercole wdt:P57 ?successor. # Successor (Alfonso II)
}

# Step 3: Find Charles Orlando's parent
SELECT ?parent WHERE {
    wd:Q654321 wdt:P31/wdt:P279* wd:Q11112; # Charles Orlando is a Dauphin of France
    wdt:P22 ?parent. # His mother (Marie Antoinette)
}

# Step 4: Find the successor of Marie Thérèse (child of Marie Antoinette)
SELECT ?successor WHERE {
    wd:Q987654 wdt:P31/wdt:P279* wd:Q11113; # Marie Thérèse is a Princess
    wdt:P22 wd:Q654321. # Her mother is Marie Antoinette
    ?marieTherese wdt:P57 ?successor. # Successor (royalty)
}

# Step 5: Find the spouse of Archduchess Barbara of Austria
SELECT ?spouse WHERE {
    wd:Q13579 wdt:P26 ?spouse. # Spouse of Archduchess Barbara of Austria
}
```",7,8,8,3,3,3,3,71,0,0,1,0,0.0,0
926,62,test,Give me the father of the father of the spouse of Neşerek Kadın and child of Ahmed III and successor of the child of the spouse of Şermi Kadın.,SELECT ?result WHERE { ?v5 <http://dbpedia.org/property/father> ?v1 . ?v2 <http://dbpedia.org/property/father> ?result . <http://dbpedia.org/resource/Ahmed_III> <http://dbpedia.org/ontology/child> ?result . ?v5 <http://dbpedia.org/ontology/successor> ?result . <http://dbpedia.org/resource/Neşerek_Kadın> <http://dbpedia.org/ontology/spouse> ?v4 . ?v4 <http://dbpedia.org/property/father> ?v2 . ?v1 <http://dbpedia.org/ontology/spouse> <http://dbpedia.org/resource/Şermi_Kadın> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?father WHERE {
  # Neşerek Kadın's spouse
  ?neşerekKadınSpouse a dbo:Person ;
                     dbo:spouse dbr:Neşerek_Kadın .

  # Father of Neşerek Kadın's spouse
  ?neşerekKadınSpouse dbo:father ?fatherOfSpouse .

  # Ahmed III and his child who is a successor
  dbr:Ahmed_III dbo:child ?ahmedChild .
  ?ahmedChild dbo:succeededBy ?successor .

  # Şermi Kadın's spouse and their child
  ?şermiKadınSpouse a dbo:Person ;
                   dbo:spouse dbr:Şermi_Kadın .
  ?şermiKadınSpouse dbo:child ?childOfŞermi .

  # Linking the relationships to find the father of the father
  ?fatherOfSpouse rdfs:label ?labelFatherOfSpouse .
  FILTER(CONTAINS(LCASE(?labelFatherOfSpouse), ""ahmed iii"") || CONTAINS(LCASE(?labelFatherOfSpouse), ""şermi kadın""))
}
```",7,7,8,3,3,3,3,71,0,0,1,0,0.0,0
83,8,test,"Give me the player in Greg Boehme and player in the person born, that is an athlete, on 1991-11-19.","SELECT ?result WHERE { ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Athlete>. ?v2 <http://dbpedia.org/ontology/team> ?result . <http://dbpedia.org/resource/Greg_Boehme> <http://dbpedia.org/ontology/team> ?result . ?v2 <http://dbpedia.org/ontology/birthDate> ""1991-11-19""^^<http://www.w3.org/2001/XMLSchema#date> . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?player WHERE {
  # Find Greg Boehme's team
  ?gregBoehme a dbo:Athlete ;
              foaf:name ""Greg Boehme"" .
  ?gregBoehme dbo:team ?team1 .

  # Find the athlete born on 1991-11-19
  ?athlete a dbo:Athlete ;
           dbo:birthDate ""1991-11-19""^^xsd:date .
  ?athlete dbo:team ?team2 .

  # Retrieve players from both teams
  ?player a dbo:Athlete ;
          dbo:playsFor ?team1 ;
          foaf:name ?name1 .
  UNION
  ?player a dbo:Athlete ;
          dbo:playsFor ?team2 ;
          foaf:name ?name2 .
}
```",3,4,4,2,2,2,2,9,0,0,1,0,0.0,0
102,19,test,"Give me the native of the residence, that is English and a settlement, of the resident, that is an athlete, of Dewsbury and manager of the player in Ellie Roebuck.",SELECT ?result WHERE { <http://dbpedia.org/resource/Ellie_Roebuck> <http://dbpedia.org/ontology/team> ?v2 . ?v0 <http://dbpedia.org/property/residence> ?v4 . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. ?v0 <http://dbpedia.org/ontology/residence> <http://dbpedia.org/resource/Dewsbury> . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Athlete>. ?v4 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/United_Kingdom>. ?v2 <http://dbpedia.org/ontology/manager> ?result . ?result <http://dbpedia.org/ontology/birthPlace> ?v4 . },"```sparql
SELECT ?native WHERE {
  # Step 1: Find Ellie Roebuck's manager
  ?roebuck dbo:manager ?manager .
  ?roebuck rdfs:label ""Ellie Roebuck""@en .

  # Step 2: Get the residence of the manager
  ?manager dbo:residence ?residence .

  # Step 3: Ensure the residence is an English settlement
  ?residence a dbo:Settlement ;
             dbo:country dbr:England .

  # Step 4: Find who is native to this residence
  ?native dbo:nativePlace ?residence .
}
```",5,8,6,3,2,3,2,20,0,0,1,0,0.0,0
273,19,test,Give me the parent of the alumnus of the reference to Università degli Studi di Torino and spouse of the child of Giovanni Agnelli.,"SELECT ?result WHERE { ?v4 <http://dbpedia.org/ontology/parent> ?result . ?v0 <http://xmlns.com/foaf/0.1/name> ""Università degli Studi di Torino""@en . <http://dbpedia.org/resource/Giovanni_Agnelli> <http://dbpedia.org/ontology/child> ?v2 . ?v4 <http://dbpedia.org/ontology/almaMater> ?v0 . ?result <http://dbpedia.org/ontology/spouse> ?v2 . }","```sparql
SELECT ?parent WHERE {
  ?alumnus wdt:P69 wd:Q1234567; # Università degli Studi di Torino
           wdt:P26 ?spouse.
  ?child wdt:P25 wd:Q2345678; # Giovanni Agnelli
         wdt:P26 ?spouse.
  ?parent wdt:P40 ?alumnus. # Parent of the alumnus
}
```

Note: Replace `wd:Q1234567` with the actual DBpedia ID for Università degli Studi di Torino and `wd:Q2345678` with the DBpedia ID for Giovanni Agnelli.",5,5,6,3,2,3,2,20,0,0,1,0,0.0,0
874,18,test,"Give me the band of the band member of The Jones Gang and band of the writer, that is an artist and a musical artist, of the work, that is a work, of Horace Andy.",SELECT ?result WHERE { ?v3 <http://dbpedia.org/ontology/associatedMusicalArtist> <http://dbpedia.org/resource/The_Jones_Gang> . ?result <http://dbpedia.org/ontology/bandMember> ?v3 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. ?v1 <http://dbpedia.org/property/writer> <http://dbpedia.org/resource/Horace_Andy> . ?v1 <http://dbpedia.org/property/writer> ?v2 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?result <http://dbpedia.org/ontology/bandMember> ?v2 . },"```sparql
SELECT ?work ?writer ?band WHERE {
  # Step 1: Find works associated with Horace Andy
  ?work dbo:artist <http://dbpedia.org/resource/Horace_Andy> .
  
  # Step 2: Identify the writer/artist of that work
  ?work dbo:composerOrLyricist ?writer .
  
  # Step 3: Check if this writer is a member of The Jones Gang
  OPTIONAL {
    ?writer dbo:member <http://dbpedia.org/resource/The_Jones_Gang> .
  }
  
  # Step 4: Find the band of the writer
  OPTIONAL {
    ?writer dbo:band <http://dbpedia.org/ontology/Band> .
    ?writer dbo:band ?band .
  }
}
```",5,8,6,3,2,3,2,20,0,0,1,0,0.0,0
456,59,test,"Give me the spouse of the actor of the movie, that is a work and a television show, with Ross Newton and professional in the alter ego of the reference, that is a fictional character, to Lamont Cranston (radio, film and television).","SELECT ?result WHERE { ?v3 <http://dbpedia.org/property/starring> ?v2 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/TelevisionShow>. ?v3 <http://dbpedia.org/property/starring> <http://dbpedia.org/resource/Ross_Newton> . ?v0 <http://dbpedia.org/property/alterEgo> ?v5 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/FictionalCharacter>. ?result <http://dbpedia.org/property/occupation> ?v5 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?v2 <http://dbpedia.org/ontology/spouse> ?result . ?v0 <http://xmlns.com/foaf/0.1/name> ""Lamont Cranston (radio, film and television)""@en . }","```sparql
# Step 1: Find a movie with Ross Newton that also has a TV show adaptation
SELECT ?movie WHERE {
  ?movie dbo:starringRossNewton dbp:name ""Ross Newton""@en .
  ?tvShow dbo:basedOn ?movie .
}

# Assuming we find the correct movie, let's say it is identified as ?movie

# Step 2: Find the main actor of this movie
SELECT ?actor WHERE {
  ?movie dbo:starring ?actor .
  FILTER NOT EXISTS { ?movie dbo:starringRossNewton ?x }
}

# Assuming we identify the actor as ?actor

# Step 3: Retrieve the spouse of this actor
SELECT ?spouse WHERE {
  ?actor dbo:spouse ?spouse .
}
```

Note: The above SPARQL query is a template and assumes that Ross Newton's involvement in a movie with a TV adaptation can be directly queried. Adjustments may be needed based on actual DBpedia schema details.",6,9,7,3,2,3,3,71,0,0,2,0,0.0,0
329,28,test,"Give me the entity in the region, that is a country, of Western European Time and entity in the birthplace, that is an organisation and a country, of Robert Bates (loyalist) and birthplace of the author of The Tailor and Ansty.",SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/birthPlace> ?result . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?result <http://dbpedia.org/ontology/country> ?v5 . ?result <http://dbpedia.org/ontology/country> ?v3 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. ?v3 <http://dbpedia.org/property/timeZone> <http://dbpedia.org/resource/Western_European_Time> . <http://dbpedia.org/resource/The_Tailor_and_Ansty> <http://dbpedia.org/property/author> ?v1 . <http://dbpedia.org/resource/Robert_Bates_(loyalist)> <http://dbpedia.org/ontology/birthPlace> ?v5 . },"```sparql
# Query 1: Entity in the region of Western European Time that is a country
SELECT ?country WHERE {
  ?timeZone dcterms:isPartOf ?region .
  ?timeZone rdfs:label ""Western European Time""@en .
  ?region dbo:country ?country .
  ?country rdf:type dbo:Country .
}

# Query 2: Entity in the birthplace of Robert Bates (loyalist) that is an organization and a country
SELECT ?birthPlace WHERE {
  dbpedia:Robert_Bates_(loyalist) dbo:birthPlace ?birthPlace .
  ?birthPlace rdf:type dbo:Organisation ;
              rdf:type dbo:Country .
}

# Query 3: Birthplace of the author of ""The Tailor and Ansty""
SELECT ?authorBirthPlace WHERE {
  ?book dbo:author ?author .
  ?book rdfs:label ""The Tailor and Ansty""@en .
  ?author dbo:birthPlace ?authorBirthPlace .
}
```",6,9,7,2,3,2,3,28,0,0,1,0,0.0,0
892,67,test,"Give me the entity in the administration, that is Italian and a region and a settlement and an administrative region, of the party, that is a political party and an organisation, of Andrea Cozzolino and landmark at elevation of the award of the member of E-girls and entity in Italy.",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Italy> . <http://dbpedia.org/resource/E-girls> <http://dbpedia.org/ontology/bandMember> ?v1 . ?v0 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Italy>. <http://dbpedia.org/resource/Andrea_Cozzolino> <http://dbpedia.org/ontology/party> ?v4 . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/PoliticalParty>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Region>. ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?v0 <http://dbpedia.org/property/leaderParty> ?v4 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/AdministrativeRegion>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. ?result <http://dbpedia.org/ontology/province> ?v0 . ?result <http://dbpedia.org/ontology/elevation> ?v5 . ?v1 <http://dbpedia.org/property/awards> ?v5 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT DISTINCT ?region ?landmark ?award WHERE {
  # Step 1: Identify Andrea Cozzolino's political party
  ?party dbo:member dbr:Andrea_Cozzolino ;
         a dbo:PoliticalParty .

  # Step 2: Find the Italian region that is also a settlement and administrative region
  ?region dbo:country dbr:Italy ;
          a dbo:Region, dbo:Settlement, dbo:AdministrativeRegion ;
          dbo:administrativeRegionOf ?party .

  # Step 3: Identify landmarks at elevation within this region
  ?landmark dbo:elevation ?elevation ;
            dbo:location ?region .

  # Step 4: Connect the landmark to an award related to a member of E-girls
  ?award dbo:recipient ?egirl_member ;
         dbo:relatedPlace ?landmark .
  
  ?egirl_member dbo:memberOf dbr:E-girls .

  # Ensure all entities are in Italy
  FILTER EXISTS { ?region dbo:country dbr:Italy }
}
```",7,13,8,3,3,3,3,71,0,0,2,0,0.0,0
582,68,test,"Give me the player in the father, that is an athlete and a soccer manager and a sports manager, of the child of Kazuaki Nagasawa and reference to the residence of the reference, that is a scientist, to Hirotaka Sugawara and figure known as the nickname of Japan national football team.","SELECT ?result WHERE { ?v0 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Kazuaki_Nagasawa> . ?result <http://xmlns.com/foaf/0.1/name> ?v4 . <http://dbpedia.org/resource/Japan_national_football_team> <http://dbpedia.org/property/nickname> ?v3 . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Scientist>. ?v7 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerManager>. ?result <http://dbpedia.org/property/nickname> ?v3 . ?v7 <http://dbpedia.org/ontology/team> ?result . ?v0 <http://dbpedia.org/property/father> ?v7 . ?v5 <http://dbpedia.org/property/residence> ?v4 . ?v5 <http://xmlns.com/foaf/0.1/name> ""Hirotaka Sugawara""@en . ?v7 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsManager>. ?v7 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Athlete>. }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?player WHERE {
  # Step 1: Identify Kazuaki Nagasawa's child
  ?child dbo:parent dbr:Kazuaki_Nagasawa .
  
  # Step 2: Find the father of that child
  ?father dbo:spouse ?mother .
  ?child dbo:parent ?father .
  
  # Step 3: Check if this person is an athlete, soccer manager, and sports manager
  ?father a dbo:Athlete ;
          a dbo:SoccerManager ;
          a dbo:SportsManager .

  # Step 4: Identify Hirotaka Sugawara's residence reference (scientist)
  ?residence dbr:Hirotaka_Sugawara .
  
  # Step 5: Find the nickname of the Japan national football team
  ?nickname rdfs:label ""Bashamono""@ja ;
           dbo:nicknameOf dbr:Japan_national_football_team .

  # Step 6: Combine all these elements
  ?player dbo:residence ?residence .
  ?player dbo:nickname ?nickname .
}
```",8,12,9,3,3,3,3,71,0,0,1,0,0.0,0
445,68,test,"Give me the entity in the award of George H. Cameron and entity in the residence, that is a country, of the resident, that is an athlete, of Great Britain and death place of the awardee of the establishment of 1820-03-10.","SELECT ?result WHERE { ?v7 <http://dbpedia.org/ontology/deathPlace> ?result . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. ?v0 <http://dbpedia.org/ontology/foundingDate> ""1820-03-10""^^<http://www.w3.org/2001/XMLSchema#date> . ?v7 <http://dbpedia.org/property/awards> ?v0 . <http://dbpedia.org/resource/George_H._Cameron> <http://dbpedia.org/property/awards> ?v3 . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Athlete>. ?result <http://dbpedia.org/ontology/location> ?v4 . ?v5 <http://dbpedia.org/property/residence> ?v4 . ?result <http://dbpedia.org/ontology/country> ?v3 . ?v5 <http://dbpedia.org/property/residence> <http://dbpedia.org/resource/Great_Britain> . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT DISTINCT ?awardEntity ?countryOfResidence ?deathPlace 
WHERE {
  # Step 1: Find George H. Cameron's award
  ?person dbo:name ""George H. Cameron""@en .
  ?person dbo:honoraryAward ?award .

  # Step 2: Find an athlete from Great Britain and their country of residence
  ?athlete dbo:nationality dbr:United_Kingdom ;
           dbo:residenceLocation ?countryOfResidence .
  FILTER (isLiteral(?countryOfResidence) && datatype(?countryOfResidence) = xsd:string)

  # Step 3: Find the establishment on 1820-03-10 and its awardee's death place
  ?establishment dbo:dateEstablished ""1820-03-10""^^xsd:date ;
                 dbo:honoraryAward ?award .
  ?awardee dbo:honoraryAward ?award ;
           dbo:deathPlace ?deathPlace .

  # Combine results
  BIND(?award AS ?awardEntity)
}
```",8,10,9,3,3,3,3,71,0,0,1,0,0.0,0
573,66,test,"Give me the person decedent at the administration, that is a region, of Charlie Baker and parent of the author, that is a politician and an office holder, of the work of John Quincy Adams and person decedent at the residence, that is a settlement, of William J. Phelan.","SELECT ?result WHERE { ?v1 <http://dbpedia.org/property/author> ?v2 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v6 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. ?result <http://dbpedia.org/ontology/deathPlace> ?v3 . <http://dbpedia.org/resource/William_J._Phelan> <http://dbpedia.org/property/residence> ?v6 . ?v3 <http://dbpedia.org/property/governor> ""Charlie Baker""@en . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v1 <http://dbpedia.org/property/author> <http://dbpedia.org/resource/John_Quincy_Adams> . ?v2 <http://dbpedia.org/ontology/parent> ?result . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Region>. ?result <http://dbpedia.org/ontology/deathPlace> ?v6 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT DISTINCT ?personDecedent WHERE {
  # Charlie Baker's administration region
  ?charlieBakerRegion dbo:administrator dbr:Charlie_Baker .
  
  # John Quincy Adams' work author who is a politician and office holder
  ?work dbo:author ?johnQuincyAdamsAuthor .
  ?johnQuincyAdamsAuthor rdf:type dbo:Politician ;
                        foaf:name ""John Quincy Adams"" .

  # William J. Phelan's residence settlement
  ?williamJPhelanResidence dbo:resident dbr:William_J._Phelan .

  # Person decedent at the administration region of Charlie Baker
  ?personDecedent dbo:decedentAt ?charlieBakerRegion .
  
  # Parent relationship with John Quincy Adams' author
  ?johnQuincyAdamsAuthor dbo:parent ?personDecedent .

  # Person decedent at the residence settlement of William J. Phelan
  ?personDecedent dbo:decedentAt ?williamJPhelanResidence .
}
```",7,11,8,3,3,3,3,71,0,0,2,0,0.0,0
773,57,test,"Give me the spouse of Louis the German and parent of the child, that is a royalty, of Louis the German and parent of the successor of the child, that is a royalty, of Louis the Pious.",SELECT ?result WHERE { ?v3 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Louis_the_German> . <http://dbpedia.org/resource/Louis_the_Pious> <http://dbpedia.org/ontology/child> ?v0 . ?v0 <http://dbpedia.org/ontology/successor> ?v5 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v3 <http://dbpedia.org/ontology/parent> ?result . <http://dbpedia.org/resource/Louis_the_German> <http://dbpedia.org/ontology/spouse> ?result . ?result <http://dbpedia.org/ontology/child> ?v5 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?spouse WHERE {
  dbr:Louis_the_German dbo:spouse ?spouse .
  
  ?child dbo:parent dbr:Louis_the_German ;
         a dbo:Monarch .

  ?successor dbo:predecessor ?child .

  ?spouse dbo:parentOf ?child .
  ?spouse dbo:parentOf ?successor .
}
```",6,8,7,3,3,3,3,71,0,0,1,0,0.0,0
373,8,test,Give me the professional in the profession of Beto Guedes and writer of 2300 Jackson Street (song).,SELECT ?result WHERE { ?result <http://dbpedia.org/property/occupation> ?v1 . <http://dbpedia.org/resource/2300_Jackson_Street_(song)> <http://dbpedia.org/property/writer> ?result . <http://dbpedia.org/resource/Beto_Guedes> <http://dbpedia.org/property/occupation> ?v1 . },"```sparql
# Query to find Beto Guedes' profession
SELECT ?profession WHERE {
  dbpedia:Betinho_Guedes dbo:occupation ?profession .
}

# Query to find the writer of ""2300 Jackson Street""
SELECT ?writer WHERE {
  dbpedia:""2300_Jackson_Street"" dbo:composer ?writer .
}
```",3,3,4,2,2,2,2,9,0,0,1,0,0.0,0
554,19,test,"Give me the leader of the administration of Francisco da Costa Gomes and leader of the birth place of the band, that is an artist, of Rita Redshoes.",SELECT ?result WHERE { ?v2 <http://dbpedia.org/property/leader> <http://dbpedia.org/resource/Francisco_da_Costa_Gomes> . <http://dbpedia.org/resource/Rita_Redshoes> <http://dbpedia.org/ontology/associatedMusicalArtist> ?v0 . ?v4 <http://dbpedia.org/property/leader> ?result . ?v0 <http://dbpedia.org/ontology/birthPlace> ?v4 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. ?v2 <http://dbpedia.org/property/leader> ?result . },"```sparql
# Query to find the Prime Minister during Francisco da Costa Gomes' presidency
SELECT ?primeMinister WHERE {
  ?presidency dbo:president dbr:Francisco_da_Costa_Gomes ;
              dbo:startDate ?start ;
              dbo:endDate ?end .
  ?cabinet dbo:headOfGovernment ?primeMinister ;
           dbo:startDate ?startCabinet ;
           dbo:endDate ?endCabinet .
  FILTER (?start <= ?startCabinet && ?end >= ?endCabinet)
}

# Query to find an artist from Rita Redshoes' band and their birthplace
SELECT DISTINCT ?artist ?birthPlace WHERE {
  dbr:Rita_Redshoes dbo:bandMember ?band .
  ?band dbo:member ?artist .
  ?artist dbo:birthPlace ?birthPlace .
}

# Assuming we have identified an artist, replace <ArtistURI> with the actual URI of the artist
SELECT ?leader WHERE {
  <ArtistURI> dbo:birthPlace ?place .
  ?place dbo:mayor ?leader .
}
```",5,6,6,3,2,3,2,20,0,0,3,0,0.0,0
216,68,test,"Give me the player in the coach, that is a soccer player and a sports manager and a soccer manager, of the player, that is an organisation and a sports club and a soccer club, in Džemal Berberović and team of the person born, that is a sports manager and a soccer manager and a soccer player, on 1983-12-20 and player in the coach of the reference, that is an organisation and a soccer club, to Croatia U21.","SELECT ?result WHERE { ?v7 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsManager>. ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerClub>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerManager>. ?v7 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerManager>. <http://dbpedia.org/resource/Džemal_Berberović> <http://dbpedia.org/ontology/team> ?v0 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?v5 <http://xmlns.com/foaf/0.1/name> ""Croatia U21""@en . ?v7 <http://dbpedia.org/ontology/team> ?result . ?v5 <http://dbpedia.org/ontology/coach> ?v4 . ?v3 <http://dbpedia.org/ontology/birthDate> ""1983-12-20""^^<http://www.w3.org/2001/XMLSchema#date> . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsClub>. ?v0 <http://dbpedia.org/ontology/coach> ?v7 . ?result <http://dbpedia.org/ontology/coach> ?v3 . ?v4 <http://dbpedia.org/ontology/team> ?result . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsManager>. ?v7 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerPlayer>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerPlayer>. ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerClub>. }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?playerInCoach WHERE {
  # Identify Džemal Berberović
  ?person a dbo:SoccerPlayer ;
          dbo:sportManagerOf ?organisation ;
          dbo:managerOf ?organisation ;
          dbo:birthDate ""1983-12-20""^^xsd:date ;
          rdfs:label ""Džemal Berberović""@en .

  # Ensure the organization is both a sports club and soccer club
  ?organisation a dbo:SportsClub, dbo:SoccerClub .

  # Find the coach of this organization linked to Croatia U21
  ?coach dbo:playerInTeam ?organisation ;
         dbo:reference dbr:Croatia_U21_Senior_Men's_National_Football_Team .

  # Identify the player in the coach's team who is a soccer player, sports manager, and soccer manager
  ?playerInCoach dbo:playerInTeam ?coach ;
                 a dbo:SoccerPlayer, dbo:SportsManager, dbo:SoccerManager .
}
```",8,19,9,3,3,3,3,71,0,0,1,0,0.0,0
36,24,test,Give me the person born in the birth year of Deanne Bray and person born as the birth name of Ayo Makun.,SELECT ?result WHERE { <http://dbpedia.org/resource/Ayo_Makun> <http://dbpedia.org/property/birthName> ?v1 . ?result <http://dbpedia.org/ontology/birthYear> ?v2 . <http://dbpedia.org/resource/Deanne_Bray> <http://dbpedia.org/ontology/birthYear> ?v2 . ?result <http://dbpedia.org/property/birthName> ?v1 . },"```sparql
# Query 1: Find Deanne Bray's birth year
SELECT ?birthYear WHERE {
    dbpedia:Deanne_Bray dbo:birthYear ?birthYear .
}

# Query 2: Find Ayo Makun's birth name
SELECT ?birthName WHERE {
    dbpedia:Ayo_Makun dbo:birthName ?birthName .
}

# Query 3: Find a person born in Deanne Bray's birth year (assuming we found the year to be 1975)
SELECT DISTINCT ?person WHERE {
    ?person dbo:birthYear ""1975""^^xsd:gYear .
    FILTER(?person != dbpedia:Deanne_Bray) # Exclude Deanne Bray herself
}

# Query 4: Find a person with Ayo Makun's birth name (assuming we found the name to be ""Adebowale Makun"")
SELECT DISTINCT ?person WHERE {
    ?person dbo:birthName ""Adebowale Makun""@en .
    FILTER(?person != dbpedia:Ayo_Makun) # Exclude Ayo Makun himself
}
```",4,4,5,2,2,2,3,28,0,0,1,0,0.0,0
826,62,test,"Give me the successor of the child, that is a royalty, of the reference, that is a royalty, to Louis I and spouse of the child of the father of Anna Magdalena Appel and predecessor of Louis IV, Grand Duke of Hesse.","SELECT ?result WHERE { ?v0 <http://dbpedia.org/ontology/child> ?v6 . ?v0 <http://xmlns.com/foaf/0.1/name> ""Louis I""@en . ?v6 <http://dbpedia.org/ontology/successor> ?result . ?v3 <http://dbpedia.org/ontology/spouse> ?result . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?result <http://dbpedia.org/ontology/successor> <http://dbpedia.org/resource/Louis_IV,_Grand_Duke_of_Hesse> . ?v6 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v3 <http://dbpedia.org/property/father> ?v4 . <http://dbpedia.org/resource/Anna_Magdalena_Appel> <http://dbpedia.org/property/father> ?v4 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?successor WHERE {
  # Anna Magdalena Appel's father
  dbr:Anna_Magdalena_Bach dbo:father dbr:Johann_Georg_Bach .
  
  # Louis I, Grand Duke of Hesse and his spouse
  dbr:Louis_I,_Grand_Duke_of_Hesse dbo:spouse dbr:Princess_Wilhelmina_of_Baden .

  # Predecessor of Louis IV, Grand Duke of Hesse
  dbr:Louis_IV,_Grand_Duke_of_Hesse dbo:predecessor dbr:Louis_III,_Grand_Duke_of_Hesse .
  
  # Child of Louis III who is royalty and successor to someone
  dbr:Louis_IV,_Grand_Duke_of_Hesse dbo:father dbr:Louis_III,_Grand_Duke_of_Hesse ;
                                   dbo:succeededBy ?successor .

  # Successor of Princess Wilhelmina's child that is royalty
  ?successor a dbo:Monarch .
}
```",7,9,8,3,3,3,3,71,0,0,1,0,0.0,0
129,24,test,"Give me the associated musical artist of the actor, that is an organisation, of Dreamville Presents: Revenge and associated musical artist of the person born as Tahj Malik Chandler.","SELECT ?result WHERE { ?v0 <http://dbpedia.org/property/birthName> ""Tahj Malik Chandler""@en . <http://dbpedia.org/resource/Dreamville_Presents:_Revenge> <http://dbpedia.org/property/starring> ?v2 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?v0 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v2 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . }","```sparql
# Query for Dreamville Presents: Revenge's associated musical artist (organization)
SELECT ?artist WHERE {
  ?event dcterms:title ""Dreamville Presents: Revenge""@en .
  ?event dbo:associatedMusicalArtist ?artist .
  ?artist a dbo:RecordLabel .
}

UNION

# Query for Lil Wayne's associated musical artist (organization)
SELECT ?artist WHERE {
  ?person foaf:name ""Lil Wayne""@en ;
          foaf:birthName ""Tahj Malik Chandler""@en .
  ?person dbo:associatedMusicalArtist ?artist .
  ?artist a dbo:RecordLabel .
}
```",4,5,5,2,2,2,3,28,0,0,1,0,0.0,0
865,59,test,"Give me the native of the residence, that is a country, of the person decedent at Patna and father of the child, that is a politician, of the spouse of Syeda Shahar Banu.",SELECT ?result WHERE { ?v3 <http://dbpedia.org/property/father> ?v2 . ?v1 <http://dbpedia.org/ontology/deathPlace> <http://dbpedia.org/resource/Patna> . ?v1 <http://dbpedia.org/property/residence> ?v0 . ?v3 <http://dbpedia.org/property/father> ?result . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. <http://dbpedia.org/resource/Syeda_Shahar_Banu> <http://dbpedia.org/ontology/spouse> ?v2 . ?result <http://dbpedia.org/ontology/birthPlace> ?v0 . },"```sparql
# Step 1: Find Syeda Shahar Banu's spouse
SELECT ?spouse WHERE {
  wd:Q1234567 wdt:P26 ?spouse .
}

# Step 2: Identify the child of that spouse who is a politician
SELECT ?child WHERE {
  ?spouse wdt:P40 ?child .
  ?child wdt:P106 wd:Q82955 . # Politician occupation
}

# Step 3: Find out the father of this politician
SELECT ?father WHERE {
  ?child wdt:P22 ?father .
}

# Step 4: Locate where this person passed away at Patna
SELECT ?deathPlace WHERE {
  ?father wdt:P20 wd:Q12345 . # Assuming Q12345 is the DBpedia resource for Patna
}

# Step 5: Determine the native country of the residence of this decedent
SELECT ?nativeCountry WHERE {
  ?father wdt:P19 ?residence .
  ?residence wdt:P17 ?nativeCountry .
}
```

Note: The above SPARQL queries assume that we have specific DBpedia resource identifiers (like `Q1234567` for Syeda Shahar Banu and `Q12345` for Patna). These would need to be replaced with the actual identifiers from DBpedia.",6,8,7,3,2,3,3,71,0,0,1,0,0.0,0
445,71,test,"Give me the entity in the residence, that is a country, of the resident, that is an athlete, of Great Britain and death place of the awardee of the establishment of 1820-03-10 and entity in the award of the commander in Battle of Saint-Mihiel.","SELECT ?result WHERE { ?v1 <http://dbpedia.org/property/residence> <http://dbpedia.org/resource/Great_Britain> . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. ?v1 <http://dbpedia.org/property/residence> ?v2 . ?v5 <http://dbpedia.org/ontology/deathPlace> ?result . ?v7 <http://dbpedia.org/property/awards> ?v8 . ?v5 <http://dbpedia.org/property/awards> ?v4 . ?result <http://dbpedia.org/ontology/country> ?v8 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Athlete>. <http://dbpedia.org/resource/Battle_of_Saint-Mihiel> <http://dbpedia.org/ontology/commander> ?v7 . ?v4 <http://dbpedia.org/ontology/foundingDate> ""1820-03-10""^^<http://www.w3.org/2001/XMLSchema#date> . ?result <http://dbpedia.org/ontology/location> ?v2 . }","```sparql
# Step 1: Find a country that is the residence of an athlete from Great Britain
SELECT ?country WHERE {
    ?athlete dbo:nationality dbr:United_Kingdom ;
             dbo:residenceLocation ?location .
    ?location rdf:type dbo:Country .
    BIND(str(?location) AS ?country)
}

UNION

# Step 2: Find the death place of the awardee associated with an event on 1820-03-10
SELECT ?deathPlace WHERE {
    ?event dcterms:date ""1820-03-10""^^xsd:date ;
           dbo:awardee ?person .
    ?person dbo:deathPlace ?deathPlace .
}

UNION

# Step 3: Find an entity in the award of the commander in Battle of Saint-Mihiel
SELECT ?awardEntity WHERE {
    ?battle dcterms:title ""Battle of Saint-Mihiel"" ;
            dbo:commander ?commander .
    ?commander dbo:receivedAward ?award .
    ?award dbo:entity ?awardEntity .
}

# Find the common entity from all three queries
SELECT DISTINCT ?commonEntity WHERE {
    VALUES ?country { <http://dbpedia.org/resource/United_Kingdom> } # Example country, replace with actual result
    VALUES ?deathPlace { <http://dbpedia.org/resource/London> } # Example death place, replace with actual result
    VALUES ?awardEntity { <http://dbpedia.org/resource/Medal_of_Honor> } # Example award entity, replace with actual result

    FILTER(?country = ?deathPlace && ?deathPlace = ?awardEntity)
}
```",9,11,10,3,3,3,3,71,0,0,1,0,0.0,0
965,63,test,"Give me the parent of the child, that is a royalty, of Prince Louis of Battenberg and parent of the person born, that is a noble, as Prince George of Battenberg and spouse of the spouse of the parent of Louise Mountbatten.","SELECT ?result WHERE { ?v3 <http://dbpedia.org/ontology/spouse> ?v1 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Noble>. ?v0 <http://dbpedia.org/property/birthName> ""Prince George of Battenberg""@en . ?result <http://dbpedia.org/ontology/spouse> ?v1 . ?v5 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Prince_Louis_of_Battenberg> . ?v0 <http://dbpedia.org/ontology/parent> ?result . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v5 <http://dbpedia.org/ontology/parent> ?result . <http://dbpedia.org/resource/Louise_Mountbatten> <http://dbpedia.org/ontology/parent> ?v3 . }","```sparql
SELECT DISTINCT ?finalParent WHERE {
  # Step 1: Find Prince Louis of Battenberg's child who is royalty
  ?child dbo:parent dbr:Prince_Louis_of_Battenberg ;
         dbo:title ?royalTitle .
  
  FILTER(CONTAINS(LCASE(?royalTitle), ""prince"") || CONTAINS(LCASE(?royalTitle), ""duke"") || CONTAINS(LCASE(?royalTitle), ""king""))

  # Step 2: Find the parent of that child
  ?parent dbo:child ?child .

  # Step 3: Identify Prince George of Battenberg who is noble
  ?nobleChild foaf:name ""Prince George of Battenberg"" ;
              dbo:title ?nobleTitle .
  
  FILTER(CONTAINS(LCASE(?nobleTitle), ""prince"") || CONTAINS(LCASE(?nobleTitle), ""duke""))

  # Step 4: Determine the parent of this noble person
  ?nobleParent dbo:child ?nobleChild .

  # Step 5: Find the spouse of that parent
  ?spouse1 dbo:spouse ?nobleParent .

  # Step 6: Identify the parent of Louise Mountbatten
  ?louiseParent dbo:child dbr:Louise_Mountbatten .

  # Step 7: Determine the spouse of the parent from step 6
  ?spouse2 dbo:spouse ?louiseParent .

  # Step 8: Combine steps 5 and 7 to find the common entity
  FILTER(?spouse1 = ?spouse2)
  BIND(?spouse1 AS ?finalParent)
}
```",7,9,8,3,3,3,3,71,0,0,2,0,0.0,0
606,18,test,"Give me the figure known as the nickname of the figure known, that is a settlement, as Barb City and birthplace of the alumnus of University of Pennsylvania.","SELECT ?result WHERE { ?v3 <http://dbpedia.org/ontology/birthPlace> ?result . ?result <http://dbpedia.org/property/nickname> ?v2 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. ?v3 <http://dbpedia.org/ontology/almaMater> <http://dbpedia.org/resource/University_of_Pennsylvania> . ?v1 <http://dbpedia.org/property/nickname> ""Barb City""@en . ?v1 <http://dbpedia.org/property/nickname> ?v2 . }","```sparql
# Step 1: Find settlement known as Barb City
SELECT ?settlement WHERE {
  ?settlement dbp:nickname ""Barb City""@en .
}

# Step 2: Identify notable individuals from this settlement who are alumni of the University of Pennsylvania and find their birthplaces
SELECT DISTINCT ?person ?birthPlace WHERE {
  # Assuming we found a settlement with URI <http://dbpedia.org/resource/SomeSettlement>
  VALUES (?settlement) { <http://dbpedia.org/resource/SomeSettlement> }
  
  ?person dbo:almaMater dbr:University_of_Pennsylvania ;
          dbo:birthPlace ?settlement .
  
  OPTIONAL {
    ?person dbo:birthPlace ?birthPlace .
  }
}
```",5,6,6,3,2,3,2,20,0,0,1,0,0.0,0
791,61,test,"Give me the predecessor of the child of the child, that is an office holder and a royalty, of Emperor Go-Shirakawa and father of the child, that is a royalty, of the father, that is a royalty and an office holder, of Emperor Antoku.",SELECT ?result WHERE { ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v3 <http://dbpedia.org/property/father> ?v1 . ?result <http://dbpedia.org/ontology/successor> ?v5 . <http://dbpedia.org/resource/Emperor_Antoku> <http://dbpedia.org/property/father> ?v1 . ?v0 <http://dbpedia.org/ontology/parent> <http://dbpedia.org/resource/Emperor_Go-Shirakawa> . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v3 <http://dbpedia.org/property/father> ?result . ?v5 <http://dbpedia.org/property/father> ?v0 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. },"```sparql
SELECT DISTINCT ?predecessor WHERE {
  # Step 1: Find a child of Emperor Go-Shirakawa who is both an office holder and royalty
  ?child dbo:parent dbr:Emperor_Go-Shirakawa ;
         rdf:type dbo:Royalty, dbo:OfficeHolder .

  # Step 2: Find the grandchild (child of the child)
  ?grandchild dbo:parent ?child .

  # Step 3: Identify the predecessor of this grandchild
  ?predecessor dbo:successor ?grandchild .

  # Step 4: Trace back to Emperor Antoku's lineage
  dbr:Emperor_Antoku dbo:father ?antokuFather .
  ?antokuFather rdf:type dbo:Royalty, dbo:OfficeHolder .
  
  # Find a child of the father who is royalty
  ?childOfAntokuFather dbo:parent ?antokuFather ;
                      rdf:type dbo:Royalty .

  # Step 5: Identify the father of this child
  ?fatherOfChildOfAntokuFather dbo:child ?childOfAntokuFather .
  
  # Ensure the predecessor from step 3 matches the father found in step 5
  FILTER(?predecessor = ?fatherOfChildOfAntokuFather)
}
```",6,11,7,3,2,3,3,71,0,0,1,0,0.0,0
987,61,test,"Give me the entity in the region, that is a country, of the time zone, that is a sports event, in Canicosa de la Sierra and birth place of the actor of the show, that is a film, with Emir Hadžihafizbegović.",SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/starring> <http://dbpedia.org/resource/Emir_Hadžihafizbegović> . ?v0 <http://dbpedia.org/property/timeZone> ?v3 . ?result <http://dbpedia.org/ontology/country> ?v0 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsEvent>. ?v4 <http://dbpedia.org/ontology/birthPlace> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Film>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. <http://dbpedia.org/resource/Canicosa_de_la_Sierra> <http://dbpedia.org/ontology/timeZone> ?v3 . ?v1 <http://dbpedia.org/property/starring> ?v4 . },"```sparql
# Step 1: Find films/shows featuring Emir Hadžihafizbegović
SELECT ?film WHERE {
  ?film dbo:starringEmirHadžihafizbegović dbp:name ""Emir Hadžihafizbegović"" .
}

# Step 2: Identify an actor from one of these films and their birthplace
SELECT DISTINCT ?actor ?birthPlace WHERE {
  ?film dbo:starring ?actor .
  ?actor dbo:birthPlace ?birthPlace .
  FILTER EXISTS { ?film dbo:starringEmirHadžihafizbegović dbp:name ""Emir Hadžihafizbegović"" }
}

# Step 3: Determine the time zone for Canicosa de la Sierra and any sports event associated with it
SELECT DISTINCT ?timeZone ?sportsEvent WHERE {
  wd:Q123456 dbo:location ?place .
  ?place dbp:timezone ?timeZone .
  ?timeZone dbo:sportsEvent ?sportsEvent .
  FILTER (str(?place) = ""Canicosa de la Sierra"")
}

# Step 4: Find a country in that region
SELECT DISTINCT ?country WHERE {
  ?sportsEvent dbo:region ?region .
  ?region dbo:country ?country .
  FILTER EXISTS { 
    wd:Q123456 dbo:location ?place .
    ?place dbp:timezone ?timeZone .
    ?timeZone dbo:sportsEvent ?sportsEvent .
    FILTER (str(?place) = ""Canicosa de la Sierra"")
  }
}
```

Note: Replace `wd:Q123456` with the actual DBpedia identifier for Canicosa de la Sierra.",6,9,7,3,2,3,3,71,0,0,18,0,0.0,0
5,20,test,"Give me the birthplace of the person born, that is a politician, as the award of Renata Adler and entity in the award of the associated musical artist, that is a band, of Rubén Colón Tarrats.",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/country> ?v5 . <http://dbpedia.org/resource/Renata_Adler> <http://dbpedia.org/property/awards> ?v1 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v2 <http://dbpedia.org/property/birthName> ?v1 . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Band>. <http://dbpedia.org/resource/Rubén_Colón_Tarrats> <http://dbpedia.org/ontology/associatedMusicalArtist> ?v4 . ?v4 <http://dbpedia.org/property/awards> ?v5 . ?v2 <http://dbpedia.org/ontology/birthPlace> ?result . },"```sparql
SELECT ?politicianBirthplace WHERE {
  # Step 1: Find the award associated with Renata Adler
  ?award dbo:recipient dbp:Renata_Adler .
  
  # Step 2: Find the entity linked to this award
  ?entity dbo:awarded ?award .

  # Get the birthplace of the entity
  ?entity dbo:birthPlace ?entityBirthplace .

  # Step 3: Find the musical artist associated with Rubén Colón Tarrats
  ?musicalArtist dbo:associatedWith dbp:Rubén_Colón_Tarrats .

  # Step 4: Identify the band connected to this musical artist
  ?band dbo:associatedMusicalArtist ?musicalArtist .

  # Step 5: Find a politician born in the birthplace of the entity from step 2
  ?politician rdf:type dbo:Politician ;
              dbo:birthPlace ?entityBirthplace .
}
```",6,8,7,3,2,3,2,20,0,0,2,0,0.0,0
445,65,test,"Give me the death place of the awardee of the establishment of 1820-03-10 and entity in the residence, that is a country, of Anna Sharkey and entity in the award of George H. Cameron.","SELECT ?result WHERE { ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. <http://dbpedia.org/resource/Anna_Sharkey> <http://dbpedia.org/property/residence> ?v4 . ?v0 <http://dbpedia.org/ontology/foundingDate> ""1820-03-10""^^<http://www.w3.org/2001/XMLSchema#date> . ?v6 <http://dbpedia.org/property/awards> ?v0 . ?result <http://dbpedia.org/ontology/country> ?v3 . ?v6 <http://dbpedia.org/ontology/deathPlace> ?result . ?result <http://dbpedia.org/ontology/location> ?v4 . <http://dbpedia.org/resource/George_H._Cameron> <http://dbpedia.org/property/awards> ?v3 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?deathPlace WHERE {
  # Step 1: Find entity established on March 10, 1820
  ?entity dbo:foundingDate ?foundingDate .
  FILTER (YEAR(?foundingDate) = 1820 && MONTH(?foundingDate) = 3 && DAY(?foundingDate) = 10)

  # Step 2: Find Anna Sharkey's residence country
  dbr:Anna_Sharkey dbo:residenceCountry ?country .

  # Step 3: Identify George H. Cameron's award
  dbr:George_H._Cameron dbo:award ?award .

  # Step 4: Combine information to find the entity in both criteria
  ?entity dbo:location ?location .
  FILTER (?location = ?country || ?location = ?award)

  # Step 5: Find the death place of the awardee
  ?awardee dbo:deathPlace ?deathPlace .
  ?awardee dbo:award ?award .
  FILTER (?awardee = ?entity)
}
```",7,8,8,3,3,3,3,71,0,0,1,0,0.0,0
826,60,test,"Give me the spouse of the child of the father of Anna Magdalena Appel and predecessor of the parent of the child of Louis IV, Grand Duke of Hesse.","SELECT ?result WHERE { ?v0 <http://dbpedia.org/ontology/parent> ?v1 . <http://dbpedia.org/resource/Anna_Magdalena_Appel> <http://dbpedia.org/property/father> ?v3 . ?v0 <http://dbpedia.org/ontology/parent> <http://dbpedia.org/resource/Louis_IV,_Grand_Duke_of_Hesse> . ?result <http://dbpedia.org/ontology/successor> ?v1 . ?v2 <http://dbpedia.org/ontology/spouse> ?result . ?v2 <http://dbpedia.org/property/father> ?v3 . }","```sparql
# Step 1: Find Anna Magdalena Appel's father
SELECT ?father WHERE {
  wd:Q123456 wdt:P22 ?father. # Assuming Q123456 is the DBpedia ID for Anna Magdalena Appel
}

# Step 2: Identify Johann Sebastian Bach as her spouse (child of her father)
SELECT ?spouse WHERE {
  ?child wdt:P26 wd:Q67890. # Assuming Q67890 is the DBpedia ID for Johann Sebastian Bach
  ?father wdt:P40 ?child.
}

# Step 3: Find Louis IV, Grand Duke of Hesse's child
SELECT ?child WHERE {
  wd:Q234567 wdt:P40 ?child. # Assuming Q234567 is the DBpedia ID for Louis IV, Grand Duke of Hesse
}

# Step 4: Identify the predecessor of Louis IV as Grand Duke of Hesse
SELECT ?predecessor WHERE {
  wd:Q234567 wdt:P39 ?predecessor.
}

# Step 5: Confirm Anna Magdalena Bach as the spouse of Johann Sebastian Bach
SELECT ?spouse WHERE {
  wd:Q67890 wdt:P26 ?spouse. # Assuming Q67890 is the DBpedia ID for Johann Sebastian Bach
}
```",6,6,7,3,2,3,3,71,0,0,1,0,0.0,0
926,68,test,"Give me the child of the father, that is a royalty, of Mustafa III and successor of the child of the spouse of Şermi Kadın and father of the father of the spouse of Neşerek Kadın.",SELECT ?result WHERE { ?v0 <http://dbpedia.org/ontology/child> ?result . <http://dbpedia.org/resource/Mustafa_III> <http://dbpedia.org/property/father> ?v0 . ?v4 <http://dbpedia.org/property/father> ?v2 . ?v6 <http://dbpedia.org/property/father> ?v1 . <http://dbpedia.org/resource/Neşerek_Kadın> <http://dbpedia.org/ontology/spouse> ?v4 . ?v6 <http://dbpedia.org/ontology/successor> ?result . ?v1 <http://dbpedia.org/ontology/spouse> <http://dbpedia.org/resource/Şermi_Kadın> . ?v2 <http://dbpedia.org/property/father> ?result . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?successor WHERE {
  # Mustafa III's child who is royalty (his successor)
  dbr:Mustafa_III dbo:child ?successor .
  
  # Ensure the successor is a Sultan
  ?successor dbo:positionHeld dbr:Sultan_of_the_Ottoman_Empire .

  # Şermi Kadın's spouse is Mustafa III
  dbr:Şermi_Kadın dbo:spouse dbr:Mustafa_III .
  
  # Neşerek Kadın's spouse (likely a Sultan)
  ?neşerekSpouse dbo:spouse dbr:Neşerek_Kadın .

  # Father of Neşerek Kadın's spouse
  ?fatherOfNeşerekSpouse dbo:child ?neşerekSpouse .
  
  # Grandfather of Neşerek Kadın's spouse (father of the father)
  ?grandfatherOfNeşerekSpouse dbo:child ?fatherOfNeşerekSpouse .

  # Ensure the successor is the same as the grandfather identified
  FILTER(?successor = ?grandfatherOfNeşerekSpouse)
}
```",8,9,9,3,3,3,3,71,0,0,1,0,0.0,0
773,71,test,"Give me the parent of the successor of the child, that is a royalty, of Louis the Pious and parent of the child, that is a royalty, of the father, that is an office holder and a royalty, of Carloman of Bavaria and spouse of the father of the parent of Bernard (son of Charles the Fat).",SELECT ?result WHERE { <http://dbpedia.org/resource/Carloman_of_Bavaria> <http://dbpedia.org/property/father> ?v7 . ?v8 <http://dbpedia.org/ontology/parent> ?result . ?v7 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v8 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?result <http://dbpedia.org/ontology/child> ?v5 . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v7 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v4 <http://dbpedia.org/ontology/successor> ?v5 . ?v1 <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Bernard_(son_of_Charles_the_Fat)> . ?v2 <http://dbpedia.org/ontology/spouse> ?result . <http://dbpedia.org/resource/Louis_the_Pious> <http://dbpedia.org/ontology/child> ?v4 . ?v8 <http://dbpedia.org/property/father> ?v7 . ?v1 <http://dbpedia.org/property/father> ?v2 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?parentOfSuccessor WHERE {
  # Step 1: Louis the Pious's child who is royalty
  ?child dbp:father dbr:Louis_the_Pious ;
         a dbo:Monarch .

  # Step 2: Successor of that child
  ?successor dbp:predecessor ?child .

  # Step 3: Parent of this successor
  ?parentOfSuccessor dbp:child ?successor .

  # Step 4: Carloman of Bavaria's father
  dbr:Louis_the_German dbp:son dbr:Carloman_of_Bavaria .

  # Step 5: Child of Louis the German who is royalty
  ?royalChild dbp:father dbr:Louis_the_German ;
              a dbo:Monarch .

  # Step 6: Parent of this child
  ?parentOfRoyalChild dbp:child ?royalChild .

  # Step 7: Bernard (son of Charles the Fat)'s lineage
  dbr:Charles_the_Fat dbp:son dbr:Bernard_of_Swabia .
  ?charlesParent dbp:child dbr:Charles_the_Fat .
  ?fatherOfCharlesParent dbp:spouse ?charlesParent .

  # Step 8: Find the commonality
  FILTER (?parentOfSuccessor = ?parentOfRoyalChild)
}
```",9,13,10,3,3,3,3,71,0,0,1,0,0.0,0
236,20,test,"Give me the party member of the administration of the reference, that is an office holder and a politician, to James Madison and party member of the administration, that is an organisation, of the person decedent, that is a politician and an office holder, at Quincy, Massachusetts.","SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v1 <http://dbpedia.org/ontology/deathPlace> <http://dbpedia.org/resource/Quincy,_Massachusetts> . ?v4 <http://xmlns.com/foaf/0.1/name> ""James Madison""@en . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?result <http://dbpedia.org/ontology/party> ?v2 . ?v5 <http://dbpedia.org/property/leader> ?v4 . ?v2 <http://dbpedia.org/property/leader> ?v1 . ?result <http://dbpedia.org/ontology/party> ?v5 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT DISTINCT ?madisonParty ?decedentName ?decedentParty WHERE {
  # James Madison's party membership
  dbr:James_Madison dbo:politicalAffiliation ?madisonParty .

  # Politician from Quincy, Massachusetts who held an office and passed away there
  ?decedent a dbo:Politician ;
            dbo:officeHolder true ;
            dbo:deathPlace dbr:Quincy,_Massachusetts ;
            dbp:name ?decedentName .
  
  # Decedent's party membership
  ?decedent dbo:politicalAffiliation ?decedentParty .
}
```",6,11,7,3,2,3,2,20,0,0,19,0,0.0,0
417,61,test,"Give me the child of the father of the leader, that is a royalty, of Colony of Greenland and child of the child, that is a royalty, of the parent, that is a royalty, of Alexandrine of Mecklenburg-Schwerin.",SELECT ?result WHERE { ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?result <http://dbpedia.org/ontology/parent> ?v3 . <http://dbpedia.org/resource/Colony_of_Greenland> <http://dbpedia.org/property/leader> ?v0 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?result <http://dbpedia.org/property/father> ?v5 . ?v0 <http://dbpedia.org/property/father> ?v5 . ?v3 <http://dbpedia.org/property/father> ?v1 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. <http://dbpedia.org/resource/Alexandrine_of_Mecklenburg-Schwerin> <http://dbpedia.org/ontology/parent> ?v1 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?childOfChild
WHERE {
  # Step 1: Identify the leader of the Colony of Greenland
  ?leader dbo:country dbr:Greenland .
  
  # Step 2: Find the father of this leader and his child that is royalty
  ?father dbo:child ?leader .
  ?royalChild dbo:parent ?father .
  ?royalChild a dbo:Monarch .

  # Step 3: Identify Alexandrine of Mecklenburg-Schwerin's parent who is royalty
  dbr:Aleksandra_of_Mecklenburg-Schwerin dbo:parent ?alexParent .
  ?alexParent a dbo:Monarch .

  # Step 4: Find the child of this royal parent that is royalty
  ?royalChild2 dbo:parent ?alexParent .
  ?royalChild2 a dbo:Monarch .

  # Step 5: Identify the child of the child from step 2 and step 4
  ?childOfRoyalChild dbo:parent ?royalChild .
  ?childOfRoyalChild2 dbo:parent ?royalChild2 .
  
  FILTER(?childOfRoyalChild = ?childOfRoyalChild2)
}
```",6,9,7,3,2,3,3,71,0,0,2,0,0.0,0
976,62,test,"Give me the office of Naci Bostancı and office of the mayor, that is a politician and an office holder and Turkish, of the reference, that is an organisation and a political party and Turkish, to Millet İttifakı and office of the leader, that is a politician, of the administration, that is an organisation, of Kemal Kılıçdaroğlu.","SELECT ?result WHERE { ?v2 <http://dbpedia.org/property/office> ?result . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?v4 <http://dbpedia.org/property/leader> <http://dbpedia.org/resource/Kemal_Kılıçdaroğlu> . ?v1 <http://xmlns.com/foaf/0.1/name> ""Millet İttifakı""@en . ?v4 <http://dbpedia.org/ontology/leader> ?v2 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v5 <http://dbpedia.org/ontology/nationality> <http://dbpedia.org/resource/Turkey>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/PoliticalParty>. ?v1 <http://dbpedia.org/property/leader> ?v5 . <http://dbpedia.org/resource/Naci_Bostancı> <http://dbpedia.org/property/office> ?result . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v1 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Turkey>. ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?v5 <http://dbpedia.org/property/office> ?result . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?naciOffice ?milatParty ?kemalRole
WHERE {
  # Naci Bostancı's office as Mayor of Istanbul
  dbr:Naci_Bostancı dbo:office ?naciOffice .
  
  # Millet İttifakı as a Turkish political party
  dbr:Millet_İttifakı a dbo:PoliticalParty ;
                     dbo:country dbr:Türkiye .

  # Kemal Kılıçdaroğlu's role within Millet İttifakı
  dbr:Kemal_Kılıçdaroğlu dbo:office ?kemalRole .
  ?kemalOffice a dbo:PoliticalParty ;
               dbo:leader dbr:Kemal_Kılıçdaroğlu .
}
```",7,15,8,3,3,3,3,71,0,0,1,0,0.0,0
645,57,test,"Give me the commander in Battle of Jarama and leader of the office, that is a government agency and an organisation, of Camilo Menéndez Tolosa and military force of the force, that is an event and a military conflict and a societal event, of the native, that is a president and a politician, of Restoration (Spain).",SELECT ?result WHERE { ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. <http://dbpedia.org/resource/Battle_of_Jarama> <http://dbpedia.org/ontology/commander> ?result . ?v5 <http://dbpedia.org/ontology/commander> ?v0 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/President>. ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?v3 <http://dbpedia.org/ontology/leader> ?result . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/GovernmentAgency>. ?result <http://dbpedia.org/ontology/battle> ?v5 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v0 <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Restoration_(Spain)> . <http://dbpedia.org/resource/Camilo_Menéndez_Tolosa> <http://dbpedia.org/property/office> ?v3 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?commander ?leaderOfOffice ?militaryForce WHERE {
  # Step 1: Identify a president and politician during the Restoration period in Spain.
  ?president a dbo:President ;
             dbo:nationality dbr:Spain ;
             dbo:politicalParty ?party .
  
  FILTER (CONTAINS(LCASE(?presidentLabel), ""restoration"")) .

  # Step 2: Find military conflict associated with this president.
  ?conflict dbo:participant ?president ;
           a dbo:MilitaryConflict, dbo:SocietalEvent .

  # Step 3: Identify commander in the Battle of Jarama.
  ?battle dbr:Battle_of_Jarama ;
         dbo:commander ?commander .
  
  # Step 4: Find leader of an office (government agency/organization) led by Camilo Menéndez Tolosa.
  ?office a dbo:GovernmentAgency, dbo:Organization ;
          dbo:leader ?camiloMenendezTolosa ;
          rdfs:label ?officeLabel .

  FILTER(LCASE(?camiloMenendezTolosaLabel) = ""camilo menéndez tolosa"") .

  # Step 5: Determine the military force associated with this commander.
  ?commander dbo:militaryForce ?militaryForce .
  
  SERVICE wikibase:label { bd:serviceParam wikibase:language ""[AUTO_LANGUAGE],en"". }
}
```",6,13,7,3,3,3,3,71,0,0,1,0,0.0,0
892,65,test,"Give me the entity in the administration, that is Italian and a region and a settlement and an administrative region, of Democratic Party (Italy) and landmark at elevation of the award of the member of E-girls and entity in the profession of Henri Crolla.",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/country> ?v2 . ?v1 <http://dbpedia.org/property/awards> ?v5 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Region>. ?v0 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Italy>. ?result <http://dbpedia.org/ontology/elevation> ?v5 . ?v0 <http://dbpedia.org/property/leaderParty> <http://dbpedia.org/resource/Democratic_Party_(Italy)> . <http://dbpedia.org/resource/E-girls> <http://dbpedia.org/ontology/bandMember> ?v1 . ?result <http://dbpedia.org/ontology/province> ?v0 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. <http://dbpedia.org/resource/Henri_Crolla> <http://dbpedia.org/property/occupation> ?v2 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/AdministrativeRegion>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?entity WHERE {
  ?entity a dbo:Region .
  ?entity a dbo:Settlement .
  ?entity a dbo:AdministrativeRegion .
  
  ?entity dbo:country dbr:Italy .
  
  OPTIONAL { ?entity dbo:government dbr:Democratic_Party_(Italy) . }
  
  ?landmark dbo:elevation ?elevation .
  ?landmark dbo:location ?entity .
  
  ?award dbo:recipient ?member .
  ?member foaf:name ""E-girls"" .
  
  ?profession dbo:person dbr:Henri_Crolla .
  ?entity dbo:relatedEntity ?profession .
}
```",7,11,8,3,3,3,3,71,0,0,2,0,0.0,0
83,20,test,"Give me the ruling party in the birthplace, that is a town and Brazilian and a soccer club, of the member, that is a sports manager, of Kedah FA and party of the governor of the commander, that is a politician, in Central African Republic Civil War.",SELECT ?result WHERE { ?v2 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Brazil>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerClub>. ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v2 <http://dbpedia.org/property/leaderParty> ?result . ?v5 <http://dbpedia.org/ontology/party> ?result . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Town>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsManager>. ?v4 <http://dbpedia.org/property/governor> ?v5 . <http://dbpedia.org/resource/Central_African_Republic_Civil_War> <http://dbpedia.org/ontology/commander> ?v4 . ?v1 <http://dbpedia.org/ontology/birthPlace> ?v2 . ?v1 <http://dbpedia.org/ontology/team> <http://dbpedia.org/resource/Kedah_FA> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?rulingParty WHERE {
  # Step 1: Identify the commander in the Central African Republic Civil War
  ?commander a dbo:Politician ;
             dbo:role ?warRole .
  FILTER(CONTAINS(LCASE(?warRole), ""central african republic civil war""))

  # Step 2: Find the governor's party
  ?governor dbo:affiliation ?party ;
           dbo:isGovernedBy ?commander .

  # Step 3: Locate the sports manager
  ?sportsManager a dbo:SportsManager ;
                 dbo:memberOfKedahFA true ;
                 dbo:politicalAffiliation ?party .

  # Step 4: Determine birthplace details
  ?sportsManager dbo:birthPlace ?town .
  FILTER(STRSTARTS(LCASE(?town), ""brazil"") && (dbo:SoccerClub IN (SELECT ?club WHERE { ?club a dbo:SoccerClub ; dbo:location ?town })))

  # Step 5: Identify the ruling party in that Brazilian town
  ?town dbo:rulingParty ?rulingParty .
}
```",6,11,7,3,2,3,2,20,0,0,1,0,0.0,0
715,68,test,"Give me the commander in the force, that is a military conflict, of the native of Morocco and leader of the office, that is a government agency and an organisation, of Carlos Franco Iribarnegaray and commander in the force of the mayor, that is an office holder and a politician and a president, of 1933 Spanish general election.",SELECT ?result WHERE { ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. <http://dbpedia.org/resource/1933_Spanish_general_election> <http://dbpedia.org/property/leader> ?v0 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/President>. ?v4 <http://dbpedia.org/ontology/commander> ?result . ?v4 <http://dbpedia.org/ontology/commander> ?v5 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v5 <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Morocco> . ?v7 <http://dbpedia.org/ontology/commander> ?v0 . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v7 <http://dbpedia.org/ontology/commander> ?result . <http://dbpedia.org/resource/Carlos_Franco_Iribarnegaray> <http://dbpedia.org/property/office> ?v3 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/GovernmentAgency>. ?v3 <http://dbpedia.org/ontology/leader> ?result . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?commanderInForce WHERE {
  # Carlos Franco Iribarnegaray's military conflict
  ?conflict dbo:commander ?carlosFranco .
  ?carlosFranco foaf:name ""Carlos Franco Iribarnegaray""@en .

  # Native of Morocco who is a leader of an office and commander in the same force
  ?person dbo:nationality dbr:Morocco ;
          dbo:leaderOf ?office ;
          dbo:commanderInForce ?conflict .
  ?office rdf:type dbo:GovernmentAgency, dbo:Organization .

  # Mayor and President of 1933 Spanish General Election
  ?mayorOrPresident dbo:officeHolder ""Mayor""@en ;
                    dbo:politician true ;
                    dbo:electedAs dbr:Spanish_general_election,_1933 .
  ?mayorOrPresident dbo:commanderInForce ?conflict .

  # Find the commander in force common to all
  ?commonCommander dbo:commanderInForce ?conflict .
}
```",8,14,9,3,3,3,3,71,0,0,1,0,0.0,0
839,64,test,"Give me the band of the person born, that is a musical artist, as the persona of Kevin Russell (musician) and band of Peter Schorowsky and band of the band, that is a musical artist, of the professional in Musician.","SELECT ?result WHERE { ?v2 <http://dbpedia.org/property/birthName> ?v3 . ?v0 <http://dbpedia.org/ontology/associatedMusicalArtist> ?v1 . <http://dbpedia.org/resource/Kevin_Russell_(musician)> <http://xmlns.com/foaf/0.1/givenName> ?v3 . ?result <http://dbpedia.org/ontology/bandMember> ?v1 . ?v2 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?v0 <http://dbpedia.org/property/occupation> ""Musician""@en . ?result <http://dbpedia.org/ontology/bandMember> <http://dbpedia.org/resource/Peter_Schorowsky> . }","```sparql
# Query to find Kevin Russell's band
SELECT ?band WHERE {
  ?person foaf:name ""Kevin Russell"" .
  ?person dbo:occupation dbp:musician .
  ?person dbo:associatedBand ?band .
}

UNION

# Query to find Peter Schorowsky's band
SELECT ?band WHERE {
  ?person foaf:name ""Peter Schorowsky"" .
  ?person dbo:occupation dbp:musician .
  ?person dbo:associatedBand ?band .
}

UNION

# Query to find the bands of notable members of Kevin Russell's and Peter Schorowsky's bands
SELECT DISTINCT ?notableMemberBand WHERE {
  # For Kevin Russell's band
  ?band1 (dbo:associatedBand|dbo:member) ?person1 .
  ?person1 dbo:occupation dbp:musician .
  ?person1 dbo:associatedBand ?notableMemberBand .

  UNION

  # For Peter Schorowsky's band
  ?band2 (dbo:associatedBand|dbo:member) ?person2 .
  ?person2 dbo:occupation dbp:musician .
  ?person2 dbo:associatedBand ?notableMemberBand .
}
```",7,9,8,3,3,3,3,71,0,0,1,0,0.0,0
582,57,test,"Give me the reference to Japan and player in the father, that is an athlete and a soccer manager and a sports manager, of the child of Kazuaki Nagasawa and figure known as the nickname of Japan national football team.","SELECT ?result WHERE { ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsManager>. ?result <http://xmlns.com/foaf/0.1/name> ""Japan""@en . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerManager>. ?v0 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Kazuaki_Nagasawa> . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Athlete>. ?v0 <http://dbpedia.org/property/father> ?v5 . ?result <http://dbpedia.org/property/nickname> ?v3 . ?v5 <http://dbpedia.org/ontology/team> ?result . <http://dbpedia.org/resource/Japan_national_football_team> <http://dbpedia.org/property/nickname> ?v3 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?child ?father ?nickname WHERE {
  # Find Kazuaki Nagasawa's child
  ?child dbo:parent dbr:Kazuaki_Nagasawa .
  
  # Determine the father of that child
  ?father dbo:spouse ?mother .
  ?mother dbo:child ?child .

  # Check if the father is an athlete, soccer manager, and sports manager
  ?father a dbo:Athlete ;
          a dbo:SoccerManager ;
          a dbo:SportsManager .

  # Find the nickname of Japan national football team
  dbr:Japan_national_football_team dbo:nickname ?nickname .
}
```",6,9,7,3,3,3,3,71,0,0,1,0,0.0,0
791,67,test,"Give me the father of the child, that is a royalty, of the father, that is a royalty and an office holder, of Emperor Antoku and spouse of Taira no Tokuko and predecessor of the child of the child, that is an office holder and a royalty, of Emperor Go-Shirakawa.",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/successor> ?v6 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v0 <http://dbpedia.org/ontology/parent> <http://dbpedia.org/resource/Emperor_Go-Shirakawa> . ?v3 <http://dbpedia.org/property/father> ?v1 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?result <http://dbpedia.org/ontology/spouse> <http://dbpedia.org/resource/Taira_no_Tokuko> . ?v6 <http://dbpedia.org/property/father> ?v0 . <http://dbpedia.org/resource/Emperor_Antoku> <http://dbpedia.org/property/father> ?v1 . ?v3 <http://dbpedia.org/property/father> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. },"```sparql
SELECT ?father WHERE {
  wd:Q123456 wdt:P22 ?father . # Emperor Antoku's father (Taira no Kiyomori)
  ?father wdt:P106 wd:Q82955 . # Taira no Kiyomori is a royalty
  ?father wdt:P39 ?office .    # Taira no Kiyomori held an office
  ?father wdt:P26 wd:Q1234567 .# Spouse of Taira no Kiyomori (Taira no Tokuko)
  ?child wdt:P22 ?father .     # Child of Taira no Kiyomori
  ?child wdt:P106 wd:Q82955 .  # This child is royalty
  ?child wdt:P39 ?office2 .    # This child held an office
  ?predecessor wdt:P1365 ?child . # Predecessor of this child
  ?secondChild wdt:P22 ?predecessor . # Child of the predecessor
  ?secondChild wdt:P106 wd:Q82955 .   # Second child is royalty
  ?secondChild wdt:P39 ?office3 .     # Second child held an office
}
```

Note: Replace `wd:Q123456` with the actual DBpedia ID for Emperor Antoku, and similarly adjust other placeholders like `wd:Q1234567` for Taira no Tokuko. The query assumes these IDs are known or can be looked up.",7,12,8,3,3,3,3,71,0,0,1,0,0.0,0
933,62,test,"Give me the reference to the birth name of the professional in Musician and band of the band of the band, that is an artist and a musical artist, of The Ramong Sound and band of The Ramong Sound.",SELECT ?result WHERE { ?result <http://xmlns.com/foaf/0.1/name> ?v5 . ?v1 <http://dbpedia.org/property/occupation> <http://dbpedia.org/resource/Musician> . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. ?v1 <http://dbpedia.org/property/birthName> ?v5 . <http://dbpedia.org/resource/The_Ramong_Sound> <http://dbpedia.org/ontology/associatedMusicalArtist> ?v4 . <http://dbpedia.org/resource/The_Ramong_Sound> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v2 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v4 <http://dbpedia.org/ontology/associatedMusicalArtist> ?v2 . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?birthName WHERE {
  ?band a dbo:Band ;
        foaf:name ""The Ramones""@en .
  
  ?member dbo:memberOf ?band ;
          dbo:birthName ?birthName .

  FILTER EXISTS { ?member dbo:occupation dbr:Musician }
}
```",7,9,8,3,3,3,3,71,0,0,1,0,0.0,0
573,69,test,"Give me the person decedent at the administration, that is a region, of the real name of Charlie Baker (Australian footballer) and parent of the author, that is a politician and an office holder, of the work of John Quincy Adams and person decedent at the residence, that is a settlement, of William J. Phelan.",SELECT ?result WHERE { ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Region>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v7 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. ?result <http://dbpedia.org/ontology/deathPlace> ?v7 . ?v2 <http://dbpedia.org/ontology/parent> ?result . ?v1 <http://dbpedia.org/property/author> ?v2 . ?result <http://dbpedia.org/ontology/deathPlace> ?v3 . ?v3 <http://dbpedia.org/property/governor> ?v4 . <http://dbpedia.org/resource/Charlie_Baker_(Australian_footballer)> <http://xmlns.com/foaf/0.1/name> ?v4 . ?v1 <http://dbpedia.org/property/author> <http://dbpedia.org/resource/John_Quincy_Adams> . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. <http://dbpedia.org/resource/William_J._Phelan> <http://dbpedia.org/property/residence> ?v7 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?person WHERE {
  # Step 1: Identify Charlie Baker's real name and the region he administers
  ?charlieBaker a dbo:AustralianFootballer ;
                foaf:name ""Charlie Baker"" .
  
  ?realName rdfs:label ?charlieBakerLabel ;
            dbo:administrativeRegion ?region .

  # Step 2: Identify John Quincy Adams' work and its author who is also a politician
  ?work dbo:author ?author ;
        dbo:subject dbr:John_Quincy_Adams .
  
  ?author a dbo:Politician, dbo:OfficeHolder .

  # Step 3: Find William J. Phelan's residence
  ?phelan a dbo:Person ;
          foaf:name ""William J. Phelan"" .
  
  ?residence dbo:resident ?phelan .

  # Step 4: Find the person who fits all criteria
  ?person dbo:deceasedAt ?region ;
          dbo:parent ?author ;
          dbo:deceasedAt ?residence .
}
```",8,12,9,3,3,3,3,71,0,0,2,0,0.0,0
978,18,test,"Give me the band member of the professional, that is a musical artist and an artist, in the award of Michel Claparède and band member of the person born as Nicholas Bracegirdle.","SELECT ?result WHERE { ?v2 <http://dbpedia.org/property/occupation> ?v1 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. <http://dbpedia.org/resource/Michel_Claparède> <http://dbpedia.org/property/awards> ?v1 . ?v3 <http://dbpedia.org/property/birthName> ""Nicholas Bracegirdle""@en . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?result <http://dbpedia.org/ontology/associatedMusicalArtist> ?v3 . ?result <http://dbpedia.org/ontology/associatedMusicalArtist> ?v2 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?bandMember WHERE {
  # Find a person who is both a musical artist and an artist
  ?person dbo:musicalArtist true .
  ?person dbo:artist true .

  # Michel Claparède received the Legion of Honour
  dbr:Michel_Claparède dbo:awardReceived dbr:Legion_of_Honour .

  # Nick Mason is a member of Pink Floyd
  dbr:Nick_Mason dbo:memberOf dbr:Pink_Floyd .

  # Find band members of Pink Floyd
  ?bandMember dbo:memberOf dbr:Pink_Floyd .
  
  # Check if the person fits all criteria
  FILTER(?person = ?bandMember)
}
```",5,7,6,3,2,3,2,20,0,0,2,0,0.0,0
433,67,test,"Give me the associated musical artist of Paul Chambers and associated musical artist of the associated musical artist, that is an artist and a musical artist, of the associated musical artist, that is a musical artist and an artist, of Ornette Coleman and professional in the profession of the writer of Slowhand at 70 – Live at the Royal Albert Hall.",SELECT ?result WHERE { <http://dbpedia.org/resource/Slowhand_at_70_–_Live_at_the_Royal_Albert_Hall> <http://dbpedia.org/property/writer> ?v1 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?v6 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v0 <http://dbpedia.org/ontology/associatedMusicalArtist> ?v6 . ?v6 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. <http://dbpedia.org/resource/Paul_Chambers> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?result <http://dbpedia.org/property/occupation> ?v3 . ?v1 <http://dbpedia.org/property/occupation> ?v3 . ?v6 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. <http://dbpedia.org/resource/Ornette_Coleman> <http://dbpedia.org/ontology/associatedMusicalArtist> ?v0 . },"```sparql
# Step 1: Find Paul Chambers' associated musical artist (Miles Davis)
SELECT ?artist WHERE {
  dbpedia:Paul_Chambers dbo:musicalArtist ?artist .
}

# Step 2: Find Miles Davis' associated musical artist (John Coltrane)
SELECT ?coltrane WHERE {
  ?miles a dbo:MusicalArtist ;
         foaf:name ""Miles Davis""@en .
  ?miles dbo:musicalArtist ?coltrane .
  FILTER(lang(?coltrane) = 'en')
}

# Step 3: Find Ornette Coleman's associated musical artist (Don Cherry)
SELECT ?donCherry WHERE {
  dbpedia:Ornette_Coleman dbo:musicalArtist ?donCherry .
}

# Step 4: Find Don Cherry's associated musical artist (Charlie Haden)
SELECT ?charlieHaden WHERE {
  ?don a dbo:MusicalArtist ;
       foaf:name ""Don Cherry""@en .
  ?don dbo:musicalArtist ?charlieHaden .
  FILTER(lang(?charlieHaden) = 'en')
}

# Note: Steps 5-7 involve more complex associations that may not be directly available in DBpedia.
```",7,11,8,3,3,3,3,71,0,0,4,0,0.0,0
456,68,test,"Give me the spouse of the actor of the movie, that is a work and a television show, with Ross Newton and band of the band, that is a musical artist, of Dean Brody and professional in the alter ego of the reference, that is a fictional character, to Lamont Cranston (radio, film and television).","SELECT ?result WHERE { ?v3 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v4 <http://dbpedia.org/ontology/spouse> ?result . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/FictionalCharacter>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?result <http://dbpedia.org/property/occupation> ?v7 . <http://dbpedia.org/resource/Dean_Brody> <http://dbpedia.org/ontology/associatedMusicalArtist> ?v3 . ?v5 <http://dbpedia.org/property/starring> ?v4 . ?v5 <http://dbpedia.org/property/starring> <http://dbpedia.org/resource/Ross_Newton> . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/TelevisionShow>. ?v0 <http://xmlns.com/foaf/0.1/name> ""Lamont Cranston (radio, film and television)""@en . ?v0 <http://dbpedia.org/property/alterEgo> ?v7 . }","```sparql
# Step 1: Find Lamont Cranston (The Shadow)
SELECT ?shadow WHERE {
  wd:Q123456 rdfs:label ""Lamont Cranston""@en .
}

# Step 2: Identify Dean Brody's band
SELECT ?band WHERE {
  wd:Q789012 dbo:musicalArtist wd:Q987654 .
  wd:Q987654 rdfs:label ""High Valley""@en .
}

# Step 3: Find the movie/TV show with Ross Newton
SELECT ?work WHERE {
  wd:Q345678 dbo:actor wd:Q567890 .
  wd:Q567890 rdfs:label ""Ross Newton""@en .
  ?work dbo:genre wd:Q1234567 ; # TV series genre
        dbo:basedOn wd:Q234567 . # Based on comic books (work)
}

# Step 4: Identify the actor from this work
SELECT ?actor WHERE {
  ?work dbo:actor ?actor .
  FILTER NOT EXISTS { ?actor rdfs:label ""Ross Newton""@en }
}

# Step 5: Find the spouse of this actor
SELECT ?spouse WHERE {
  ?actor dbo:spouse ?spouse .
}
```",8,12,9,3,3,3,3,71,0,0,1,0,0.0,0
826,71,test,"Give me the spouse of the child of the father of Anna Magdalena Appel and successor of the child, that is a royalty, of the reference, that is a royalty, to Louis I and predecessor of the parent of the child of Louis IV, Grand Duke of Hesse.","SELECT ?result WHERE { <http://dbpedia.org/resource/Anna_Magdalena_Appel> <http://dbpedia.org/property/father> ?v1 . ?v2 <http://dbpedia.org/ontology/spouse> ?result . ?v4 <http://xmlns.com/foaf/0.1/name> ""Louis I""@en . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v2 <http://dbpedia.org/property/father> ?v1 . ?v7 <http://dbpedia.org/ontology/parent> <http://dbpedia.org/resource/Louis_IV,_Grand_Duke_of_Hesse> . ?v4 <http://dbpedia.org/ontology/child> ?v5 . ?v5 <http://dbpedia.org/ontology/successor> ?result . ?v7 <http://dbpedia.org/ontology/parent> ?v8 . ?result <http://dbpedia.org/ontology/successor> ?v8 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?spouse WHERE {
  # Anna Magdalena Bach's father
  dbr:Anna_Magdalena_Bach dbo:father dbr:Johann_Sebastian_Kuhnau .
  
  # Johann Sebastian Kuhnau's child
  dbr:Johann_Sebastian_Kuhnau dbo:child dbr:Johann_Sebastian_Bach .

  # Spouse of Johann Sebastian Bach
  dbr:Johann_Sebastian_Bach dbo:spouse ?spouse .
  
  # Successor of Johann Sebastian Bach (his son)
  dbr:Johann_Sebastian_Bach dbo:child dbr:Carl_Philipp_Emanuel_Bach .

  # Reference to Louis I and predecessor
  dbr:Ludwig_I,_King_of_Bavaria dbo:predecessor ?predecessor .
  
  # Parent of the child of Louis IV, Grand Duke of Hesse
  dbr:Louis_IV,_Grand_Duke_of_Hesse dbo:child dbr:Princess_Alice_of_Hesse_and_by_Rhine .
  dbr:Princess_Alice_of_Hesse_and_by_Rhine dbo:parent ?parent .

  # Predecessor of Louis III, Grand Duke of Hesse
  ?parent dbo:predecessor dbr:Ludwig_II,_Grand_Duke_of_Hesse .

  # Ensure the spouse is royalty
  ?spouse a dbo:Monarch .
}
```",9,11,10,3,3,3,3,71,0,0,1,0,0.0,0
935,18,test,"Give me the death place of the awardee of the award, that is an award, of Syed Sohail Hussain Naqvi and headquarter of the office of Sanaullah Khan Zehri.",SELECT ?result WHERE { <http://dbpedia.org/resource/Sanaullah_Khan_Zehri> <http://dbpedia.org/property/office> ?v3 . ?v3 <http://dbpedia.org/ontology/location> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Award>. ?v2 <http://dbpedia.org/ontology/deathPlace> ?result . <http://dbpedia.org/resource/Syed_Sohail_Hussain_Naqvi> <http://dbpedia.org/property/awards> ?v1 . ?v2 <http://dbpedia.org/property/awards> ?v1 . },"```sparql
# Query for Syed Sohail Hussain Naqvi's award and death place
SELECT ?award ?deathPlace WHERE {
  ?person rdfs:label ""Syed Sohail Hussain Naqvi""@en .
  ?person dbo:awards ?award .
  ?award dbo:recipient ?person .
  OPTIONAL { ?person dbo:deathPlace ?deathPlace . }
}

UNION

# Query for Sanaullah Khan Zehri's office and headquarters
SELECT ?office ?headquarters WHERE {
  ?person rdfs:label ""Sanaullah Khan Zehri""@en .
  ?person dbo:positionHeld ?office .
  OPTIONAL { ?office dbo:headquarterLocation ?headquarters . }
}
```",5,6,6,3,2,3,2,20,0,0,1,0,0.0,0
773,67,test,"Give me the parent of the child, that is a royalty, of the father, that is an office holder and a royalty, of Carloman of Bavaria and parent of the successor of the child, that is a royalty, of Louis the Pious and spouse of Louis the German.",SELECT ?result WHERE { <http://dbpedia.org/resource/Louis_the_Pious> <http://dbpedia.org/ontology/child> ?v0 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. <http://dbpedia.org/resource/Carloman_of_Bavaria> <http://dbpedia.org/property/father> ?v1 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?result <http://dbpedia.org/ontology/child> ?v6 . ?v0 <http://dbpedia.org/ontology/successor> ?v6 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. <http://dbpedia.org/resource/Louis_the_German> <http://dbpedia.org/ontology/spouse> ?result . ?v3 <http://dbpedia.org/property/father> ?v1 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v3 <http://dbpedia.org/ontology/parent> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?parent WHERE {
  # Carloman of Bavaria's father who was an office holder and royalty
  dbr:C._of_Bavaria dbo:father dbr:Louis_the_German .

  # Louis the Pious's child who is a royalty
  dbr:Louis_the_Pious dbo:child ?royaltyChild .
  
  # Successor of Louis the Pious's child (Charles the Bald)
  ?royaltyChild dbo:succ ?successor .
  
  # Parent of the successor (Louis II of Italy)
  ?successor dbo:parent ?parent .

  # Spouse of Louis the German
  dbr:Louis_the_German dbo:spouse ?spouse .

  # Check if parent is also spouse of Louis the German
  FILTER(?parent != ?spouse)

  # Ensure the parent matches Charles the Bald
  ?parent rdfs:label ""Charles II_(King_of_France)""@en .
}
```",7,11,8,3,3,3,3,71,0,0,1,0,0.0,0
926,58,test,"Give me the child of the father, that is a royalty, of the parent, that is a royalty, of Beyhan Sultan (daughter of Mustafa III) and father of Mahmud II and successor of the child of Ahmed III.",SELECT ?result WHERE { <http://dbpedia.org/resource/Beyhan_Sultan_(daughter_of_Mustafa_III)> <http://dbpedia.org/ontology/parent> ?v4 . ?v4 <http://dbpedia.org/property/father> ?v0 . ?v5 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Ahmed_III> . <http://dbpedia.org/resource/Mahmud_II> <http://dbpedia.org/property/father> ?result . ?v0 <http://dbpedia.org/ontology/child> ?result . ?v5 <http://dbpedia.org/ontology/successor> ?result . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. },"```sparql
SELECT ?child WHERE {
  wd:Q123456 wdt:P22 wd:Q789012 . # Beyhan Sultan (daughter of Mustafa III)
  wd:Q789012 wdt:P25 ?father .   # Father of Beyhan Sultan is Mustafa III
  ?father wdt:P31 wd:Q5 .        # Mustafa III is a royalty
  ?child wdt:P22 ?father .       # Child of Mustafa III
  ?child wdt:P31 wd:Q5 .         # The child is also a royalty
}
```

Note: Replace `wd:Q123456` with the DBpedia identifier for Beyhan Sultan, and `wd:Q789012` with the identifier for Mustafa III. These identifiers need to be looked up in DBpedia.",6,8,7,3,3,3,3,71,0,0,1,0,0.0,0
826,66,test,"Give me the spouse of the child of Johann Heinrich Appel and predecessor of the parent of the child of Louis IV, Grand Duke of Hesse and successor of the child, that is a royalty, of Louis I, Grand Duke of Hesse.","SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/parent> ?v2 . ?v3 <http://dbpedia.org/property/father> ""Johann Heinrich Appel""@en . ?result <http://dbpedia.org/ontology/successor> ?v2 . ?v6 <http://dbpedia.org/ontology/successor> ?result . ?v1 <http://dbpedia.org/ontology/parent> <http://dbpedia.org/resource/Louis_IV,_Grand_Duke_of_Hesse> . ?v6 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v3 <http://dbpedia.org/ontology/spouse> ?result . <http://dbpedia.org/resource/Louis_I,_Grand_Duke_of_Hesse> <http://dbpedia.org/ontology/child> ?v6 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?spouse WHERE {
  # Step 1: Identify Johann Heinrich Appel's child
  ?appelChild dbo:parent dbr:Johann_Heinrich_Appel .
  
  # Step 2: Find the spouse of that child
  ?appelChild dbo:spouse ?spouse .

  # Step 3: Identify Louis IV, Grand Duke of Hesse's child
  ?louisIVChild dbo:parent dbr:Louis_IV,_Grand_Duke_of_Hesse .
  
  # Step 4: Find the parent of that child
  ?louisIVChild dbo:parent ?parent .

  # Step 5: Determine the predecessor of that parent
  ?predecessor dbo:succeededBy ?parent .

  # Step 6: Identify Louis I, Grand Duke of Hesse's child
  ?louisIChild dbo:parent dbr:Louis_I,_Grand_Duke_of_Hesse .
  
  # Step 7: Find the successor of that child
  ?successor dbo:succeededBy ?louisIChild .

  # Step 8: Ensure the final answer is royalty
  FILTER EXISTS { ?spouse a dbo:Monarch . }

  # Step 9: Combine these steps to find the spouse
  FILTER (?predecessor = ?spouse && ?successor = ?spouse)
}
```",7,8,8,3,3,3,3,71,0,0,1,0,0.0,0
353,8,test,"Give me the entity in the country of Moskovsky City District, Nizhny Novgorod and alma mater of Daniil Yegorov.","SELECT ?result WHERE { <http://dbpedia.org/resource/Moskovsky_City_District,_Nizhny_Novgorod> <http://dbpedia.org/ontology/country> ?v1 . ?result <http://dbpedia.org/ontology/country> ?v1 . <http://dbpedia.org/resource/Daniil_Yegorov> <http://dbpedia.org/ontology/almaMater> ?result . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?institution WHERE {
  ?person dbo:almaMater ?institution .
  ?person rdfs:label ""Daniil Yegorov""@en .
  
  OPTIONAL { 
    ?institution dbo:location ?location .
    ?location rdfs:label ?locationLabel .
    FILTER(CONTAINS(LCASE(?locationLabel), ""moskovsky city district, nizhny novgorod""))
  }
}
```",3,3,4,2,2,2,2,9,1,0,0,1.0,1.0,1.0
826,65,test,"Give me the spouse of the child of Johann Heinrich Appel and successor of the child, that is a royalty, of the reference, that is a royalty, to Louis I and predecessor of the parent of Prince Friedrich of Hesse and by Rhine.","SELECT ?result WHERE { ?v0 <http://dbpedia.org/ontology/child> ?v6 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v4 <http://dbpedia.org/property/father> ""Johann Heinrich Appel""@en . ?v6 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v4 <http://dbpedia.org/ontology/spouse> ?result . ?v0 <http://xmlns.com/foaf/0.1/name> ""Louis I""@en . <http://dbpedia.org/resource/Prince_Friedrich_of_Hesse_and_by_Rhine> <http://dbpedia.org/ontology/parent> ?v3 . ?result <http://dbpedia.org/ontology/successor> ?v3 . ?v6 <http://dbpedia.org/ontology/successor> ?result . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?spouse WHERE {
  # Step 1: Identify Johann Heinrich Appel's child
  ?child dbo:parent dbr:Johann_Heinrich_Appel .
  
  # Step 2: Find the spouse of that child
  ?spouse dbo:spouse ?child .

  # Step 3: Successor of the child (assuming a role or title)
  OPTIONAL { ?successor dbo:succeededBy ?child . }

  # Step 4: Reference to Louis I and successor
  ?royalty1 dbo:relatedTo dbr:Louis_I_of_Bavaria .
  OPTIONAL { ?successor2 dbo:succeededBy ?royalty1 . }

  # Step 5: Predecessor of the parent of Prince Friedrich of Hesse and by Rhine
  ?parent dbr:Friedrich_III,_Grand_Duke_of_Hesse dbo:child .
  OPTIONAL { ?predecessor dbo:precededBy ?parent . }

  # Combine conditions to find a royalty that fits all criteria
  FILTER(?spouse = ?successor && ?spouse = ?successor2 && ?spouse = ?predecessor)
}
```",7,9,8,3,3,3,3,71,0,0,1,0,0.0,0
158,19,test,"Give me the entity in the award, that is a country, of Adelbert Cronkhite and party of the successor, that is a prime minister and an office holder and a politician, of the person deceased, that is an office holder and a politician, on 1945-09-15.","SELECT ?result WHERE { ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. ?v0 <http://dbpedia.org/ontology/deathDate> ""1945-09-15""^^<http://www.w3.org/2001/XMLSchema#date> . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. <http://dbpedia.org/resource/Adelbert_Cronkhite> <http://dbpedia.org/property/awards> ?v2 . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/PrimeMinister>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v4 <http://dbpedia.org/ontology/party> ?result . ?v0 <http://dbpedia.org/ontology/successor> ?v4 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?result <http://dbpedia.org/ontology/country> ?v2 . }","```sparql
SELECT DISTINCT ?country WHERE {
  # Step 1: Identify Adelbert Cronkhite and his award
  ?cronkite dbo:wikiPageID ""Adelbert_Cronkhite"" .
  
  # Assuming the award is linked via a property like dbo:honoraryDegree or similar
  ?award dbo:recipient ?cronkite ;
         dbo:country ?country .

  # Step 2: Identify the successor who is a prime minister and politician
  ?successor dbo:officeHolder ""Prime Minister"" ;
             rdf:type dbo:Politician ;
             dbo:succeededBy ?deceased .

  # Step 3: Find the deceased person on 1945-09-15
  ?deceased dbo:dateOfDeath ""1945-09-15""^^xsd:date ;
            rdf:type dbo:OfficeHolder, dbo:Politician .
  
  # Linking successor to the deceased
  ?successor dbo:succeededBy ?deceased .

  # Step 4: Ensure the successor is related to Adelbert Cronkhite's award context
  ?award dbo:recipient ?cronkite ;
         dbo:country ?country .
}
```",5,11,6,3,2,3,2,20,0,0,1,0,0.0,0
36,25,test,"Give me the person born in the birth year of Deanne Bray and person born as Ayo Makun and actor of the claim to fame, that is a film, of Lepacious Bose.","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/birthYear> ?v1 . ?v4 <http://dbpedia.org/ontology/starring> ?result . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Film>. ?result <http://dbpedia.org/property/birthName> ""Ayo Makun""@en . <http://dbpedia.org/resource/Deanne_Bray> <http://dbpedia.org/ontology/birthYear> ?v1 . <http://dbpedia.org/resource/Lepacious_Bose> <http://dbpedia.org/ontology/knownFor> ?v4 . }","```sparql
# Step 1: Get Deanne Bray's birth year
SELECT ?deanneBrayBirthYear WHERE {
    dbpedia:Deanne_Bray dbo:birthDate ?deanneBrayBirth .
    BIND(YEAR(?deanneBrayBirth) AS ?deanneBrayBirthYear)
}

# Step 2: Get Ayo Makun's birth date
SELECT ?ayoMakunBirthYear WHERE {
    dbpedia:Ayo_Makun dbo:birthDate ?ayoMakunBirth .
    BIND(YEAR(?ayoMakunBirth) AS ?ayoMakunBirthYear)
}

# Step 3: Identify a notable film associated with Lepacious Bose
SELECT DISTINCT ?film WHERE {
    dbpedia:Lepacious_Bose dbo:claimToFame ?film .
    FILTER (datatype(?film) = xsd:string)
}

# Step 4: Find an actor from that film
SELECT DISTINCT ?actor WHERE {
    ?film dbo:starring ?actor .
    FILTER EXISTS { ?film rdf:type dbpedia-owl:Film }
}

# Step 5: Combine results to find people born in both years and are actors in the identified film
SELECT DISTINCT ?person WHERE {
    # Assuming we have obtained values for ?deanneBrayBirthYear, ?ayoMakunBirthYear, and ?film from previous queries
    BIND(1234 AS ?deanneBrayBirthYear)  # Replace with actual value
    BIND(1986 AS ?ayoMakunBirthYear)   # Replace with actual value
    BIND(""Film Title"" AS ?film)        # Replace with actual film title

    ?person dbo:birthDate ?birth .
    FILTER (YEAR(?birth) = ?deanneBrayBirthYear || YEAR(?birth) = ?ayoMakunBirthYear)
    
    ?film dbo:starring ?person .
}
```",5,6,6,2,3,2,3,28,0,0,1,0,0.0,0
987,62,test,"Give me the entity in Montenegro and birth place of the band, that is an artist and a musical artist, of the band, that is an artist, of Dado Polumenta and birth place of the actor of the show, that is a film, with Emir Hadžihafizbegović.",SELECT ?result WHERE { <http://dbpedia.org/resource/Dado_Polumenta> <http://dbpedia.org/ontology/associatedMusicalArtist> ?v4 . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. ?v5 <http://dbpedia.org/ontology/birthPlace> ?result . ?v1 <http://dbpedia.org/property/starring> ?v5 . ?result <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Montenegro> . ?v2 <http://dbpedia.org/ontology/birthPlace> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Film>. ?v4 <http://dbpedia.org/ontology/associatedMusicalArtist> ?v2 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?v1 <http://dbpedia.org/ontology/starring> <http://dbpedia.org/resource/Emir_Hadžihafizbegović> . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. },"```sparql
# Step 1: Identify Dado Polumenta's Band
SELECT ?band WHERE {
  ?person foaf:name ""Dado Poldrugovac""@en .
  ?person dbo:memberOf ?band .
}

# Step 2: Find the Birth Place of the Band in Montenegro
SELECT DISTINCT ?birthPlace WHERE {
  ?band dbo:foundingLocation ?location .
  ?location rdfs:label ?placeLabel .
  FILTER(CONTAINS(LCASE(?placeLabel), ""montenegro""))
  ?location dbp:country ""Montenegro"" .
}

# Step 3: Identify a Film Featuring Emir Hadžihafizbegović
SELECT DISTINCT ?film WHERE {
  ?person foaf:name ""Emir Hadžihafizbegović""@en .
  ?film dbo:starring ?person .
}

# Step 4: Find an Actor from the Identified Film
SELECT DISTINCT ?actor WHERE {
  ?film dbo:starring ?actor .
  FILTER(?actor != <http://dbpedia.org/resource/Emir_Hadžihafizbegović>)
}

# Step 5: Determine the Birth Place of This Actor
SELECT DISTINCT ?birthPlace WHERE {
  ?actor dbo:birthPlace ?birthPlace .
}
```",7,11,8,3,3,3,3,71,0,0,1,0,0.0,0
445,69,test,"Give me the death place of the awardee of Royal Astronomical Society and entity in the residence, that is a country, of the resident, that is an athlete, of Great Britain and entity in the award of the commander in Battle of Saint-Mihiel.",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/country> ?v2 . ?v1 <http://dbpedia.org/property/awards> ?v2 . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Athlete>. <http://dbpedia.org/resource/Battle_of_Saint-Mihiel> <http://dbpedia.org/ontology/commander> ?v1 . ?v4 <http://dbpedia.org/property/residence> ?v3 . ?v7 <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/Royal_Astronomical_Society> . ?result <http://dbpedia.org/ontology/location> ?v3 . ?v7 <http://dbpedia.org/ontology/deathPlace> ?result . ?v4 <http://dbpedia.org/property/residence> <http://dbpedia.org/resource/Great_Britain> . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. },"```sparql
# Step 1: Find an awardee of the Royal Astronomical Society and their death place
SELECT ?awardee ?deathPlace WHERE {
  ?awardee dbo:award dbpedia:Royal_Astronomical_Society .
  OPTIONAL { ?awardee dbo:deathPlace ?deathPlace . }
}

# Step 2: Find a British athlete and their country of residence
SELECT DISTINCT ?athlete ?residenceCountry WHERE {
  ?athlete dbo:nationality dbr:United_Kingdom ;
           dbo:sport ?sport .
  OPTIONAL { ?athlete dbo:residenceLocation ?residence .
             ?residence geo:hasCoordinates ?coordinates .
             BIND(SUBSTR(str(?residence), STRSTARTS(str(?residence), ""http://dbpedia.org/resource/"") + 21) AS ?country)
           }
}

# Step 3: Find the commander in the Battle of Saint-Mihiel and an entity in their award
SELECT DISTINCT ?commander ?awardEntity WHERE {
  ?battle dbo:commander ?commander .
  FILTER(STRSTARTS(str(?battle), ""http://dbpedia.org/resource/Battle_of_Saint-Mihiel""))
  OPTIONAL { ?commander dbo:award ?award .
             ?award dbo:recipient ?entity .
           }
}
```",8,10,9,3,3,3,3,71,0,0,1,0,0.0,0
926,70,test,"Give me the father of the father of Abdulaziz and child of the father, that is a royalty, of the parent, that is a royalty, of Beyhan Sultan (daughter of Mustafa III) and successor of the child of the spouse of Şermi Kadın.",SELECT ?result WHERE { <http://dbpedia.org/resource/Abdulaziz> <http://dbpedia.org/property/father> ?v3 . ?v0 <http://dbpedia.org/ontology/child> ?result . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v1 <http://dbpedia.org/ontology/spouse> <http://dbpedia.org/resource/Şermi_Kadın> . ?v6 <http://dbpedia.org/property/father> ?v1 . ?v5 <http://dbpedia.org/property/father> ?v0 . <http://dbpedia.org/resource/Beyhan_Sultan_(daughter_of_Mustafa_III)> <http://dbpedia.org/ontology/parent> ?v5 . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v6 <http://dbpedia.org/ontology/successor> ?result . ?v3 <http://dbpedia.org/property/father> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?person WHERE {
  # Abdulaziz's father
  VALUES (?abdulazizFather) { dbr:Abdül_Aziz }

  # Mahmud II is the father of Abdulaziz
  ?mahmud2 dbo:child dbr:Abdül_Aziz .
  
  # Abdul Hamid I is the father of Mahmud II
  ?abdulhamid1 dbo:child ?mahmud2 .

  # Mustafa III is the parent (father) of Beyhan Sultan and a royalty
  ?mustafathiirdbr:Mustafa_III dbo:spouse ?beyhansultan .
  
  # Şermi Kadın's spouse is Selim III
  ?selim3 dbo:spouse dbr:Şermi_Kadın .

  # Mahmud II is the child of Selim III and succeeded him
  ?mahmud2 dbo:child ?selim3 .
  
  # Abdulmejid I is the successor of Mahmud II
  ?abdulmejid1 dbo:predecessor ?mahmud2 .

  # Mustafa III is the father of Abdul Hamid I, and a royalty
  ?abdulhamid1 dbo:child dbr:Mustafa_III .
  
  FILTER (?abdulhamid1 = ?abdulazizGrandfather)
}
```",8,10,9,3,3,3,3,71,0,0,1,0,0.0,0
978,20,test,"Give me the band member of the professional, that is a musical artist and an artist, in the award of Michel Claparède and band member of the person born as the name of Chicane (musician).",SELECT ?result WHERE { <http://dbpedia.org/resource/Michel_Claparède> <http://dbpedia.org/property/awards> ?v1 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?result <http://dbpedia.org/ontology/associatedMusicalArtist> ?v5 . ?v2 <http://dbpedia.org/property/occupation> ?v1 . <http://dbpedia.org/resource/Chicane_(musician)> <http://xmlns.com/foaf/0.1/givenName> ?v4 . ?result <http://dbpedia.org/ontology/associatedMusicalArtist> ?v2 . ?v5 <http://dbpedia.org/property/birthName> ?v4 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?bandMember WHERE {
  # Step 1: Identify Nick Bracegirdle (Chicane)
  dbr:Nick_Bracegirdle dbo:birthName ""Nick Bracegirdle""@en .
  
  # Step 2: Find band memberships of Nick Bracegirdle
  OPTIONAL { 
    ?bandMembership dbo:member dbr:Nick_Bracegirdle .
    ?bandMembership dbo:bandMember ?bandMember .
  }
  
  # Step 3: Identify professionals associated with the Prix Michel-Claparède
  ?person dbo:awardReceived dbr:Prix_Michel-Claparède .
  
  # Step 4: Ensure they are both musical artists and artists
  ?person a dbo:MusicalArtist ;
         a dbo:Artist .
  
  # Step 5: Check for overlap in band membership
  OPTIONAL {
    ?bandMembership2 dbo:member ?person .
    FILTER(?bandMember = ?person)
  }
}
```",6,8,7,3,2,3,2,20,0,0,2,0,0.0,0
791,60,test,"Give me the father of the child, that is a royalty, of the father, that is a royalty and an office holder, of Emperor Antoku and spouse of the spouse, that is a royalty, of the reference to Emperor Takakura.","SELECT ?result WHERE { ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. <http://dbpedia.org/resource/Emperor_Antoku> <http://dbpedia.org/property/father> ?v0 . ?result <http://dbpedia.org/ontology/spouse> ?v2 . ?v1 <http://dbpedia.org/property/father> ?v0 . ?v2 <http://dbpedia.org/ontology/spouse> ?v3 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v3 <http://xmlns.com/foaf/0.1/name> ""Emperor Takakura""@en . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v1 <http://dbpedia.org/property/father> ?result . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?father WHERE {
  # Emperor Antoku's father
  dbr:Emperor_Antoku dbo:father dbr:Minamoto_no_Yoritomo .
  
  # Minamoto no Yoritomo's father (royalty and office holder)
  dbr:Minamoto_no_Yoritomo dbo:father ?yoshitomo .
  ?yoshitomo a dbo:Monarch ;
             dbo:officeHolderOf ?office .

  # Spouse of Emperor Takakura
  dbr:Takakura_Emperor dbo:spouse dbr:Empress_Shōshi .

  # Spouse of Empress Shōshi (Tokuko)
  dbr:Empress_Shōshi dbo:spouse dbr:Fujiwara_no_Michinaga .

  # Father of Minamoto no Yoshitomo
  ?yoshitomo dbo:father ?yorinobu .
}
```",6,10,7,3,2,3,3,71,0,0,1,0,0.0,0
456,66,test,"Give me the band of the band, that is a musical artist, of the band of Alan Doyle and spouse of the actor of Pacific Drive and professional in the alter ego of The Shadow.",SELECT ?result WHERE { ?result <http://dbpedia.org/property/occupation> ?v6 . ?v3 <http://dbpedia.org/ontology/spouse> ?result . ?v1 <http://dbpedia.org/ontology/associatedMusicalArtist> ?v2 . <http://dbpedia.org/resource/The_Shadow> <http://dbpedia.org/property/alterEgo> ?v6 . <http://dbpedia.org/resource/Alan_Doyle> <http://dbpedia.org/ontology/associatedMusicalArtist> ?v1 . ?v2 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . <http://dbpedia.org/resource/Pacific_Drive> <http://dbpedia.org/property/starring> ?v3 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?band ?musicalArtist WHERE {
  # Step 1: Alan Doyle's band
  VALUES (?alanDoyleBand) { dbr:Great_Big_Sea }
  
  # Step 2: Actor from Pacific Drive and their spouse
  ?actor dbo:title ""Pacific Drive""@en .
  ?actor dbo:spouse ?spouse .

  # Step 3: Alter ego of The Shadow is Lamont Cranston
  VALUES (?lamontCranston) { dbr:Lamont_Cranston }

  # Step 4: Professional associated with Lamont Cranston (assuming actor)
  ?professional dbo:profession dbr:Actor .
  ?professional dbo:alterEgo ?lamontCranston .

  # Step 5: Spouse's band
  ?spouse dbo:band ?band .

  # Step 6: Musical artist of the spouse's band
  ?band dbo:musicalArtist ?musicalArtist .
}
```",7,8,8,3,3,3,3,71,0,0,1,0,0.0,0
917,62,test,"Give me the parent of the child, that is a royalty, of the mayor of Hawaiian Kingdom and child of Kekūanāoʻa and child of the father of the spouse, that is a royalty, of Leleiohoku I.","SELECT ?result WHERE { ?v2 <http://dbpedia.org/property/father> ?v4 . ?result <http://dbpedia.org/ontology/child> ?v2 . <http://dbpedia.org/resource/Hawaiian_Kingdom> <http://dbpedia.org/property/leader> ?v4 . ?v1 <http://dbpedia.org/ontology/spouse> <http://dbpedia.org/resource/Leleiohoku_I> . ?result <http://dbpedia.org/property/father> ""Kekūanāoʻa""@en . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v1 <http://dbpedia.org/property/father> ?v5 . ?result <http://dbpedia.org/ontology/parent> ?v5 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?parent WHERE {
  # Step 1: Identify the mayor of Hawaiian Kingdom
  ?mayor dbo:positionTitle ""Mayor""@en .
  ?mayor dbo:country dbr:Hawaiian_Kingdom .

  # Step 2: Find a child of Kekūanāoʻa who is royalty
  ?child dbo:parent dbr:Kekūanāoʻa ;
         dbo:nationality dbr:Hawaii ;
         rdf:type dbo:Monarch .

  # Step 3: Identify the spouse of Leleiohoku I who is royalty and their father
  ?spouse dbo:spouse dbr:Leleiohoku_I ;
          rdf:type dbo:Monarch .
  ?father dbo:child ?spouse .

  # Step 4: Ensure the child from step 2 is also a child of the spouse's father
  ?child dbo:parent ?father .

  # Find the parent of this child
  ?parent dbo:child ?child .
}
```",7,9,8,3,3,3,3,71,0,0,2,0,0.0,0
507,70,test,"Give me the director of the movie, that is a movie and a work, with the person born on 1919-06-17 and professional in the profession of the person born on 1966-02-18 and spouse of the person born as Anne Voase Coates.","SELECT ?result WHERE { ?v0 <http://dbpedia.org/ontology/birthDate> ""1919-06-17""^^<http://www.w3.org/2001/XMLSchema#date> . ?v7 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?v1 <http://dbpedia.org/ontology/birthDate> ""1966-02-18""^^<http://www.w3.org/2001/XMLSchema#date> . ?v1 <http://dbpedia.org/property/occupation> ?v3 . ?result <http://dbpedia.org/ontology/spouse> ?v4 . ?v7 <http://dbpedia.org/ontology/director> ?result . ?result <http://dbpedia.org/property/occupation> ?v3 . ?v7 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Film>. ?v4 <http://dbpedia.org/property/birthName> ""Anne Voase Coates""@en . ?v7 <http://dbpedia.org/property/starring> ?v0 . }","```sparql
SELECT ?director WHERE {
  # Step 1: Find the person born on 1919-06-17
  ?person1 dbo:birthDate ""1919-06-17""^^xsd:date .
  
  # Step 2: Find the profession of the person born on 1966-02-18
  ?person2 dbo:birthDate ""1966-02-18""^^xsd:date .
  ?person2 dbo:occupation ?profession .

  # Step 3: Determine who is married to Anne Voase Coates
  ?anneVoaseCoates foaf:name ""Anne Voase Coates""@en ;
                   dbo:spouse ?spouse .

  # Step 4: Match the professions
  ?person1 dbo:occupation ?profession .
  
  # Ensure the person from step 1 is the spouse of Anne Voase Coates
  FILTER (?spouse = ?person1)

  # Step 5: Identify movies directed by this person
  ?director foaf:name ?name ;
            dbo:directed ?movie .

  # Ensure the director matches the person found in previous steps
  FILTER(?person1 = ?director)
}
```",8,10,9,3,3,3,3,71,0,0,1,0,0.0,0
212,8,test,Give me the birthplace of the professional in  and birthplace of Corp Sayvee.,"SELECT ?result WHERE { <http://dbpedia.org/resource/Corp_Sayvee> <http://dbpedia.org/ontology/birthPlace> ?result . ?v2 <http://dbpedia.org/property/occupation> """"@en . ?v2 <http://dbpedia.org/ontology/birthPlace> ?result . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?birthPlace WHERE {
  ?person a dbo:Person ;
          foaf:name ""Corp Sayvee""@en .
  ?person dbo:birthPlace ?birthPlace .
}
```",3,3,4,2,2,2,2,9,1,0,0,1.0,1.0,1.0
329,25,test,"Give me the entity in the region, that is a country, of Western European Time and birthplace of the author of The Tailor and Ansty and entity in Northern Ireland.",SELECT ?result WHERE { <http://dbpedia.org/resource/The_Tailor_and_Ansty> <http://dbpedia.org/property/author> ?v3 . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. ?result <http://dbpedia.org/ontology/country> ?v4 . ?result <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Northern_Ireland> . ?v3 <http://dbpedia.org/ontology/birthPlace> ?result . ?v4 <http://dbpedia.org/property/timeZone> <http://dbpedia.org/resource/Western_European_Time> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?country ?birthPlace WHERE {
  # Find countries using Western European Time (WET)
  ?timeZone a dbo:TimeZone ;
            dbo:timezoneName ""Western European Time"" .
  
  ?country dbo:timeZone ?timeZone ;
           rdf:type dbo:Country .

  # Find George Moore's birthplace
  dbr:George_Moore dbo:birthPlace ?birthPlace .

  # Ensure the birthplace is in Northern Ireland
  ?birthPlace dbo:locatedIn dbr:Northern_Ireland .
  
  FILTER(?country = ?birthPlace)
}
```",5,6,6,2,3,2,3,28,0,0,1,0,0.0,0
826,56,test,"Give me the predecessor of the parent of the child of Louis IV, Grand Duke of Hesse and successor of Louis II, Grand Duke of Hesse and spouse of the child of Johann Heinrich Appel.","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/successor> ?v1 . ?v2 <http://dbpedia.org/ontology/spouse> ?result . ?v2 <http://dbpedia.org/property/father> ""Johann Heinrich Appel""@en . ?v0 <http://dbpedia.org/ontology/parent> <http://dbpedia.org/resource/Louis_IV,_Grand_Duke_of_Hesse> . ?v0 <http://dbpedia.org/ontology/parent> ?v1 . <http://dbpedia.org/resource/Louis_II,_Grand_Duke_of_Hesse> <http://dbpedia.org/ontology/successor> ?result . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?predecessor ?spouse WHERE {
  # Louis IV's child
  ?child dbo:parent dbr:Louis_IV,_Grand_Duke_of_Hesse .

  # Parent of Louis IV's child is Louis IV himself
  ?parent dbo:child ?child .
  
  # Predecessor of Louis IV (Louis III)
  ?predecessor dbo:successor dbr:Louis_IV,_Grand_Duke_of_Hesse .

  # Successor of Louis II (Louis III)
  ?successor dbo:predecessor dbr:Louis_II,_Grand_Duke_of_Hesse .
  
  FILTER(?predecessor = ?successor)

  # Johann Heinrich Appel's child and their spouse
  ?appelChild dbo:parent dbr:Johann_Heinrich_Appel .
  ?spouse dbo:spouse ?appelChild .

  # Ensure the predecessor is also the successor of Louis II
  FILTER(?predecessor = ?successor)
}
```",6,6,7,3,3,3,3,71,0,0,1,0,0.0,0
93,19,test,"Give me the death place of the governor of the native, that is a politician, of Seattle and capital of the headquarter, that is a region and a settlement, of Lake Clark National Park and Preserve.",SELECT ?result WHERE { ?v0 <http://dbpedia.org/property/governor> ?v4 . <http://dbpedia.org/resource/Lake_Clark_National_Park_and_Preserve> <http://dbpedia.org/ontology/location> ?v2 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Region>. ?v0 <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Seattle> . ?v4 <http://dbpedia.org/ontology/deathPlace> ?result . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. ?v2 <http://dbpedia.org/ontology/capital> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?deathPlace WHERE {
  ?governor a dbo:Governor ;
            dbo:stateOrTerritory dbr:Washington ;
            dbo:deathPlace ?deathPlace .
}
```",5,8,6,3,2,3,2,20,0,0,1,0,0.0,0
865,58,test,"Give me the father of the child of the father of Abul Maal Abdul Muhith and native of British Raj and father of the child, that is a politician, of Abu Ahmad Abdul Hafiz.",SELECT ?result WHERE { ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. <http://dbpedia.org/resource/Abul_Maal_Abdul_Muhith> <http://dbpedia.org/property/father> ?v5 . ?v4 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Abu_Ahmad_Abdul_Hafiz> . ?v2 <http://dbpedia.org/property/father> ?v5 . ?v2 <http://dbpedia.org/property/father> ?result . ?v4 <http://dbpedia.org/property/father> ?result . ?result <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/British_Raj> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?fatherOfAbulMaal ?childOfFather ?politicianChild ?fatherOfPolitician
WHERE {
  # Step 1: Find the father of Abul Maal Abdul Muhith
  dbr:Abul_Maal_Abdul_Muhith dbo:parent ?fatherOfAbulMaal .

  # Step 2: Find a child of Abul Maal Abdul Muhith's father
  ?fatherOfAbulMaal dbo:child ?childOfFather .

  # Step 3: Find Abu Ahmad Abdul Hafiz and his children who are politicians
  dbr:Abu_Ahmad_Abdul_Hafiz dbo:child ?politicianChild .
  ?politicianChild a dbo:Politician .

  # Step 4: Find the father of this politician
  ?politicianChild dbo:parent ?fatherOfPolitician .

  # Step 5: Check if this father is native of British Raj
  ?fatherOfPolitician dbo:nativePlace dbr:British_Raj .
}
```",6,7,7,3,3,3,3,71,0,0,1,0,0.0,0
976,70,test,"Give me the office of the mayor, that is a politician and an office holder and Turkish, of the reference, that is an organisation and a political party and Turkish, to Millet İttifakı and office of the person born as the birth name of Naci Bostancı and office of the leader, that is a politician, of Grand National Assembly of Turkey.","SELECT ?result WHERE { ?v0 <http://dbpedia.org/property/office> ?result . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v6 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v3 <http://dbpedia.org/property/office> ?result . ?v0 <http://dbpedia.org/property/birthName> ?v5 . ?v6 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v1 <http://dbpedia.org/property/leader> ?v6 . ?v1 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Turkey>. ?v6 <http://dbpedia.org/property/office> ?result . <http://dbpedia.org/resource/Grand_National_Assembly_of_Turkey> <http://dbpedia.org/ontology/leader> ?v3 . ?v6 <http://dbpedia.org/ontology/nationality> <http://dbpedia.org/resource/Turkey>. ?v1 <http://xmlns.com/foaf/0.1/name> ""Millet İttifakı""@en . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/PoliticalParty>. <http://dbpedia.org/resource/Naci_Bostancı> <http://dbpedia.org/property/birthName> ?v5 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT DISTINCT ?mayorOffice ?partyLeaderOffice ?naciBostanciOffice WHERE {
  # Mayor who is a politician
  ?person dbo:office ?mayorOffice .
  FILTER(CONTAINS(LCASE(STR(?mayorOffice)), ""mayor"") && CONTAINS(LCASE(STR(?person)), ""turkish"")) .
  
  # Millet İttifakı as an organization and political party
  dbr:Millet_İttifakı dbo:politicalParty ?party .
  FILTER(CONTAINS(LCASE(STR(?party)), ""turkish"") && CONTAINS(LCASE(STR(?party)), ""millet ittifaki"")) .

  # Naci Bostancı's office
  ?naciBostanci dbo:birthName ""Naci Bostancı""@en .
  ?naciBostanci dbo:office ?naciBostanciOffice .
  
  # Leader of Grand National Assembly of Turkey who is a politician
  ?leader dbo:office ?partyLeaderOffice .
  FILTER(CONTAINS(LCASE(STR(?partyLeaderOffice)), ""grand national assembly"") && CONTAINS(LCASE(STR(?leader)), ""turkish"")) .

}
```",8,15,9,3,3,3,3,71,0,0,1,0,0.0,0
976,60,test,"Give me the office of the leader, that is a politician, of the administration, that is an organisation, of Kemal Kılıçdaroğlu and office of the person born as the birth name of Naci Bostancı.",SELECT ?result WHERE { ?v4 <http://dbpedia.org/property/leader> <http://dbpedia.org/resource/Kemal_Kılıçdaroğlu> . ?v4 <http://dbpedia.org/ontology/leader> ?v2 . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?v0 <http://dbpedia.org/property/birthName> ?v5 . <http://dbpedia.org/resource/Naci_Bostancı> <http://dbpedia.org/property/birthName> ?v5 . ?v0 <http://dbpedia.org/property/office> ?result . ?v2 <http://dbpedia.org/property/office> ?result . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. },"```sparql
SELECT ?officeKilicdaroglu ?officeBostanci WHERE {
  # Kemal Kılıçdaroğlu's office in the organization he leads
  wd:Q123456 wdt:P39 ?organizationLeader.
  ?organizationLeader wdt:P136 wd:Q123456. # Assuming Q123456 is the DBpedia ID for CHP
  ?organizationLeader wdt:P279* wd:Q43210. # P279* to include subclasses of political parties
  ?organizationLeader wdt:P39 ?officeKilicdaroglu.

  # Naci Bostancı's office based on his birth name and role
  wd:Q654321 wdt:P31 wd:Q5; # Assuming Q654321 is the DBpedia ID for Naci Bostancı, P31 indicates an instance of a human
  wdt:P569 ?birthDate.
  OPTIONAL { wd:Q654321 wdt:P570 ?deathDate. }
  FILTER NOT EXISTS { wd:Q654321 wdt:P570 ?deathDate } # Ensure he is alive or the office was held during his lifetime

  # Assuming Naci Bostancı's role as Minister of Health
  OPTIONAL {
    ?ministerRole wdt:P39 wd:Q1234567; # Q1234567 is a placeholder for the DBpedia ID for ""Minister of Health""
    wdt:P161 wd:Q654321.
    ?ministerRole wdt:P39 ?officeBostanci.
  }
}
```

Note: The actual DBpedia IDs (e.g., `wd:Q123456`, `wd:Q43210`, `wd:Q654321`, and `wd:Q1234567`) need to be replaced with the correct identifiers for CHP, political parties, Naci Bostancı, and Minister of Health respectively. These can be found by querying DBpedia or using its search functionality.",6,8,7,3,2,3,3,71,0,0,1,0,0.0,0
507,65,test,"Give me the spouse of the person born as Anne Voase Coates and director of the movie, that is a movie and a work, with the person born on 1919-06-17 and professional in the profession of Guy Ferland.","SELECT ?result WHERE { ?v6 <http://dbpedia.org/ontology/director> ?result . ?result <http://dbpedia.org/ontology/spouse> ?v4 . ?v6 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?result <http://dbpedia.org/property/occupation> ?v3 . ?v6 <http://dbpedia.org/property/starring> ?v0 . ?v4 <http://dbpedia.org/property/birthName> ""Anne Voase Coates""@en . ?v0 <http://dbpedia.org/ontology/birthDate> ""1919-06-17""^^<http://www.w3.org/2001/XMLSchema#date> . <http://dbpedia.org/resource/Guy_Ferland> <http://dbpedia.org/property/occupation> ?v3 . ?v6 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Film>. }","```sparql
# Step 1: Find Anne Voase Coates' spouse
SELECT ?spouse WHERE {
    ?anne foaf:name ""Anne Voase Coates""@en .
    ?anne dbo:spouse ?spouse .
}

# Step 2: Find a movie directed by Anne Voase Coates that is both a ""movie"" and a ""work""
SELECT DISTINCT ?movie WHERE {
    ?anne foaf:name ""Anne Voase Coates""@en .
    ?anne dbo:directs ?movie .
    ?movie rdf:type dbpedia-owl:Film ;
           rdf:type dbpedia-owl:CreativeWork .
}

# Step 3: Find the person born on June 17, 1919, with a profession similar to Guy Ferland
SELECT DISTINCT ?person WHERE {
    ?person dbo:birthday ""1919-06-17""^^xsd:date ;
            dbo:occupation ?profession .
    FILTER EXISTS { ?profession rdfs:label ""Film editor""@en }
}

# Step 4: Check if there's any connection between Anne Voase Coates' spouse and the person found in step 3
SELECT DISTINCT ?spouse ?person WHERE {
    ?anne foaf:name ""Anne Voase Coates""@en .
    ?anne dbo:spouse ?spouse .
    
    ?person dbo:birthday ""1919-06-17""^^xsd:date ;
            dbo:occupation ?profession .
    FILTER EXISTS { ?profession rdfs:label ""Film editor""@en }
    
    OPTIONAL {
        ?spouse foaf:name ?name .
        ?person foaf:name ?name .
    }
}
```",7,9,8,3,3,3,3,71,0,0,1,0,0.0,0
453,9,test,"Give me the religion of the birth place, that is a country, of William Denning and religion of the author, that is a cardinal and a cleric, of Apologia Pro Vita Sua.",SELECT ?result WHERE { ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Cleric>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Cardinal>. <http://dbpedia.org/resource/William_Denning> <http://dbpedia.org/ontology/birthPlace> ?v1 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. <http://dbpedia.org/resource/Apologia_Pro_Vita_Sua> <http://dbpedia.org/property/author> ?v3 . ?v1 <http://dbpedia.org/ontology/religion> ?result . ?v3 <http://dbpedia.org/ontology/religion> ?result . },"```sparql
# Query to find William Denning's birthplace and its religion
SELECT ?birthPlaceCountry ?religion WHERE {
  ?denning dbo:birthPlace ?birthPlace .
  ?birthPlace geo:hasAdministrativeArea ?country .
  ?country rdfs:label ?birthPlaceCountry .
  FILTER (lang(?birthPlaceCountry) = 'en')
  
  OPTIONAL {
    ?country dbo:religion ?religion .
    FILTER (lang(?religion) = 'en')
  }
  
  VALUES ?denning { dbpedia:William_Denning_(judge) }
}

UNION

# Query to find John Henry Newman's religion
SELECT ?authorReligion WHERE {
  ?newman dbo:profession dbr:Clergy .
  ?newman dbo:position dbr:Cardinal .
  ?newman dbo:religion ?authorReligion .
  FILTER (lang(?authorReligion) = 'en')
  
  VALUES ?newman { dbpedia:John_Henry_Newman }
}
```",4,7,5,2,2,2,2,9,0,0,1,0,0.0,0
507,71,test,"Give me the professional in the profession of the person born on 1966-02-18 and spouse of the person born as the birth name of Anne V. Coates and director of the movie, that is a movie and a work, with the person born on 1919-06-17.","SELECT ?result WHERE { <http://dbpedia.org/resource/Anne_V._Coates> <http://dbpedia.org/property/birthName> ?v1 . ?v5 <http://dbpedia.org/ontology/director> ?result . ?result <http://dbpedia.org/property/occupation> ?v8 . ?result <http://dbpedia.org/ontology/spouse> ?v2 . ?v7 <http://dbpedia.org/property/occupation> ?v8 . ?v2 <http://dbpedia.org/property/birthName> ?v1 . ?v5 <http://dbpedia.org/property/starring> ?v4 . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Film>. ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?v4 <http://dbpedia.org/ontology/birthDate> ""1919-06-17""^^<http://www.w3.org/2001/XMLSchema#date> . ?v7 <http://dbpedia.org/ontology/birthDate> ""1966-02-18""^^<http://www.w3.org/2001/XMLSchema#date> . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT DISTINCT ?professional WHERE {
  # Step 1: Find the person born on 1966-02-18
  ?person1 dbo:birthday ""1966-02-18""^^xsd:date .
  
  # Step 2: Find Anne V. Coates' spouse
  dbr:Anne_V._Coates dbo:spouse ?coatesSpouse .

  # Step 3: Identify the person born on 1919-06-17
  ?person2 dbo:birthday ""1919-06-17""^^xsd:date .
  
  # Find a movie directed by someone involving both persons and Anne V. Coates' spouse
  ?movie dbo:director ?director ;
         dbo:editor ?coatesSpouse ;
         dbo:starring ?person2 .

  # Step 4: Get the profession of the person born on 1966-02-18
  ?person1 dbo:occupation ?profession .
  
  # Step 5: Find another professional in the same field
  ?professional dbo:occupation ?profession .
}
```",9,11,10,3,3,3,3,71,0,0,1,0,0.0,0
41,26,test,"Give me the party of the work, that is an office holder, of yes and party of Declan Costello and party of the leader, that is a politician and an office holder, of 2005 Castlereagh Borough Council election.","SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/party> ?result . ?v1 <http://dbpedia.org/property/author> ""yes""@en . <http://dbpedia.org/resource/Declan_Costello> <http://dbpedia.org/ontology/party> ?result . ?v4 <http://dbpedia.org/ontology/party> ?result . <http://dbpedia.org/resource/2005_Castlereagh_Borough_Council_election> <http://dbpedia.org/property/leader> ?v4 . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?yesParty ?declanCostelloParty ?castlereaghLeaderParty WHERE {
  # Find the party of ""Yes""
  OPTIONAL { 
    dbr:Yes dbo:party dbr:Fine_Gael ;
            dbo:politicalAffiliation ?yesParty .
  }

  # Find the party of Declan Costello
  OPTIONAL {
    dbr:Declan_Costello dbo:party ?declanCostelloParty .
  }

  # Find the leader and their party in the 2005 Castlereagh Borough Council election
  OPTIONAL {
    ?castlereaghLeader dbo:electedAsLeaderOf dbr:Castlereagh_Borough_Council_2005_Election ;
                      dbo:party ?castlereaghLeaderParty .
  }
}
```",5,8,6,2,3,2,3,28,1,0,0,1.0,1.0,1.0
47,61,test,"Give me the office of the awardee of the entity, that is an award, in India and office of the awardee of the award, that is an award, of Mantu Ghosh.",SELECT ?result WHERE { ?v5 <http://dbpedia.org/property/awards> ?v0 . ?v3 <http://dbpedia.org/property/awards> ?v1 . <http://dbpedia.org/resource/Mantu_Ghosh> <http://dbpedia.org/property/awards> ?v0 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Award>. ?v1 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/India> . ?v5 <http://dbpedia.org/property/office> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Award>. ?v3 <http://dbpedia.org/property/office> ?result . },"```sparql
# Part 1: Office of the Awardee of an Award in India
SELECT DISTINCT ?award ?awardee ?office WHERE {
  ?award dbo:country dbr:India .
  ?award dbo:recipient ?awardee .
  OPTIONAL { ?awardee dbo:office ?office . }
}

UNION

# Part 2: Office of the Awardee of Mantu Ghosh's Awards
SELECT DISTINCT ?award ?awardee ?office WHERE {
  ?award dbo:recipient dbr:Mantu_Ghosh .
  ?award dbo:recipient ?awardee .
  OPTIONAL { ?awardee dbo:office ?office . }
}
```",6,8,7,3,2,3,3,71,0,0,1,0,0.0,0
987,63,test,"Give me the birth place of the band, that is an artist and a musical artist, of the band, that is an artist, of Dado Polumenta and entity in the region, that is a country, of Central European Time and birth place of the actor of All for Free.",SELECT ?result WHERE { ?v3 <http://dbpedia.org/ontology/associatedMusicalArtist> ?v1 . ?result <http://dbpedia.org/ontology/country> ?v0 . ?v5 <http://dbpedia.org/ontology/birthPlace> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. <http://dbpedia.org/resource/All_for_Free> <http://dbpedia.org/property/starring> ?v5 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. ?v1 <http://dbpedia.org/ontology/birthPlace> ?result . <http://dbpedia.org/resource/Dado_Polumenta> <http://dbpedia.org/ontology/associatedMusicalArtist> ?v3 . ?v0 <http://dbpedia.org/property/timeZone> <http://dbpedia.org/resource/Central_European_Time> . },"```sparql
# Step 1: Identify Zabranjeno Pušenje as both an artist and a musical artist
SELECT ?band WHERE {
  ?band rdf:type dbo:Band .
  ?band foaf:name ""Zabranjeno Pušenje"" .
  ?band dbo:genre dbr:Musical_artist .
}

# Step 2: Find the birth place of Zabranjeno Pušenje
SELECT ?birthPlace WHERE {
  ?band rdf:type dbo:Band .
  ?band foaf:name ""Zabranjeno Pušenje"" .
  ?band dbo:placeOfBirth ?birthPlace .
}

# Step 3: Identify a country using Central European Time (CET)
SELECT DISTINCT ?country WHERE {
  ?region geo:timezone dbr:Central_European_Time .
  ?region rdf:type dbo:Country .
  BIND(?region AS ?country)
}

# Step 4: Find the birth place of Goran Višnjić
SELECT ?birthPlace WHERE {
  ?actor foaf:name ""Goran Višnjić"" .
  ?actor dbo:birthPlace ?birthPlace .
}
```",7,11,8,3,3,3,3,71,0,0,1,0,0.0,0
216,24,test,Give me the administration of the designer of Woolfe: The Red Hood Diaries and party of the awardee of Australian Defence Medal.,SELECT ?result WHERE { ?result <http://dbpedia.org/property/leader> ?v0 . ?v2 <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/Australian_Defence_Medal> . ?v2 <http://dbpedia.org/ontology/party> ?result . <http://dbpedia.org/resource/Woolfe:_The_Red_Hood_Diaries> <http://dbpedia.org/property/designer> ?v0 . },"```sparql
# Query to find the head of government during the release of Woolfe: The Red Hood Diaries (2013)
SELECT ?administration WHERE {
  ?game dbp:title ""Woolfe: The Red Hood Diaries""@en .
  ?game dbo:developer <http://dbpedia.org/resource/WayForward_Technologies> .
  ?releaseEvent dbo:date ""2013""^^xsd:gYear .
  ?releaseEvent dbo:subject ?game .
  ?country dbo:headOfGovernment ?person .
  ?person dbo:officeStartYear ?startYear .
  ?person dbo:officeEndYear ?endYear .
  FILTER (?startYear <= 2013 && (BOUND(?endYear) => ?endYear >= 2013))
  ?person dbo:memberOf ?administration .
  ?administration a dbo:Government .
}
```

```sparql
# Query to clarify the non-partisan nature of the Australian Defence Medal
SELECT DISTINCT ?medal WHERE {
  ?medal dbp:title ""Australian Defence Medal""@en .
  FILTER NOT EXISTS { ?medal dbo:politicalParty ?party }
}
```",4,4,5,2,2,2,3,28,0,0,1,0,0.0,0
124,71,test,"Give me the commander in the war, that is a societal event and a military conflict, of the reference, that is Australian and an organisation and a military unit, to 'A' Battery, Royal Australian Artillery and military force of the force, that is a societal event and a military conflict, of the person born on 1850-06-24 and military force of the war, that is an event and a military conflict and a societal event, of the awardee of British South Africa Company Medal.","SELECT ?result WHERE { ?v4 <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/British_South_Africa_Company_Medal> . ?v2 <http://dbpedia.org/ontology/commander> ?result . ?v1 <http://dbpedia.org/ontology/battle> ?v2 . ?v8 <http://dbpedia.org/ontology/commander> ?v7 . ?v8 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?v1 <http://xmlns.com/foaf/0.1/name> ""'A' Battery, Royal Australian Artillery""@en . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?v7 <http://dbpedia.org/ontology/birthDate> ""1850-06-24""^^<http://www.w3.org/2001/XMLSchema#date> . ?v8 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryUnit>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?result <http://dbpedia.org/ontology/battle> ?v5 . ?v4 <http://dbpedia.org/ontology/battle> ?v5 . ?v1 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Australia>. ?result <http://dbpedia.org/ontology/battle> ?v8 . }","```sparql
# Step 1: Find the person born on 1850-06-24 involved in a war that is an event, military conflict, and societal event.
SELECT ?person ?war WHERE {
  ?person dbo:birthDate ""1850-06-24""^^xsd:date .
  ?person dbo:militaryConflict ?war .
  ?war rdf:type dbpedia-owl:MilitaryConflict ;
       rdf:type dbpedia-owl:Event .
}

# Step 2: Identify the military force associated with this person during that war.
SELECT ?militaryForce WHERE {
  ?person dbo:militaryService ?militaryForce .
  ?militaryForce dbo:country dbr:Australia .
}

# Step 3: Determine 'A' Battery, Royal Australian Artillery's reference organization or unit.
SELECT ?reference WHERE {
  dbpedia:A_Battery,_Royal_Australian_Artillery dbo:partOf ?reference .
  ?reference rdf:type dbpedia-owl:MilitaryUnit ;
             dbo:country dbr:Australia .
}

# Step 4: Find the commander of the war involving both the societal event and military conflict related to this reference.
SELECT ?commander WHERE {
  ?war dbo:commander ?commander .
  ?reference dbo:militaryConflict ?war .
}
```",9,19,10,3,3,3,3,71,0,0,9,0,0.0,0
935,20,test,"Give me the headquarter of the office of the native of Balochistan, Pakistan and death place of the awardee of the award, that is an award, of Syed Sohail Hussain Naqvi.","SELECT ?result WHERE { ?v5 <http://dbpedia.org/ontology/location> ?result . ?v2 <http://dbpedia.org/property/awards> ?v1 . ?v4 <http://dbpedia.org/property/office> ?v5 . ?v4 <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Balochistan,_Pakistan> . ?v2 <http://dbpedia.org/ontology/deathPlace> ?result . <http://dbpedia.org/resource/Syed_Sohail_Hussain_Naqvi> <http://dbpedia.org/property/awards> ?v1 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Award>. }","```sparql
# Query 1: Find Syed Sohail Hussain Naqvi's awards and death place
SELECT ?award ?deathPlace WHERE {
  ?person foaf:name ""Syed Sohail Hussain Naqvi"" .
  ?person dbo:awardReceived ?award .
  OPTIONAL { ?person dbo:deathPlace ?deathPlace . }
}

# Query 2: Identify the award received by Syed Sohail Hussain Naqvi
SELECT DISTINCT ?award WHERE {
  ?person foaf:name ""Syed Sohail Hussain Naqzi"" .
  ?person dbo:awardReceived ?award .
}

# Query 3: Find the headquarter of the office for natives of Balochistan, Pakistan
SELECT ?headquarter WHERE {
  ?region rdfs:label ""Balochistan""@en .
  ?office dbo:country ?region ;
          dbo:headquarters ?headquarter .
}
```",6,7,7,3,2,3,2,20,0,0,1,0,0.0,0
122,9,test,"Give me the band of the reference, that is a musical artist and an artist, to Gift of Gab and band member of the band of Gift of Gab (rapper).","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/associatedMusicalArtist> ?v1 . ?v3 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . <http://dbpedia.org/resource/Gift_of_Gab_(rapper)> <http://dbpedia.org/ontology/associatedMusicalArtist> ?v1 . ?v3 <http://xmlns.com/foaf/0.1/name> ""Gift of Gab""@en . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?band ?artist WHERE {
  # Gift of Gab's association with Blackalicious
  dbr:Gift_of_Gab dbo:memberOfBand dbr:Blackalicious .
  
  # Find an artist who is both a musical artist and an artist in general
  ?artist a dbo:MusicalArtist ;
         a dbo:Artist .

  # Ensure the artist is distinct from Gift of Gab's band
  FILTER(?artist != dbr:Blackalicious)
}
```",4,6,5,2,2,2,2,9,0,0,3,0,0.0,0
987,66,test,"Give me the entity in the region, that is a country, of the time zone, that is a sports event, in Canicosa de la Sierra and birth place of the band, that is an artist and a musical artist, of Šako Polumenta and birth place of the actor of All for Free.",SELECT ?result WHERE { ?v0 <http://dbpedia.org/property/timeZone> ?v5 . ?v6 <http://dbpedia.org/ontology/birthPlace> ?result . <http://dbpedia.org/resource/Canicosa_de_la_Sierra> <http://dbpedia.org/ontology/timeZone> ?v5 . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsEvent>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. <http://dbpedia.org/resource/Šako_Polumenta> <http://dbpedia.org/ontology/associatedMusicalArtist> ?v3 . <http://dbpedia.org/resource/All_for_Free> <http://dbpedia.org/property/starring> ?v6 . ?v3 <http://dbpedia.org/ontology/birthPlace> ?result . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?result <http://dbpedia.org/ontology/country> ?v0 . },"```sparql
# Step 1: Find the time zone of Canicosa de la Sierra
SELECT ?timeZone WHERE {
  dbpedia-es:Canicosa_de_la_Sierra dbo:timezone ?timeZone .
}

# Step 2: Identify sports events in that time zone
SELECT DISTINCT ?sportsEvent WHERE {
  ?sportsEvent dbo:location ?place .
  ?place dbo:timezone ?timeZone .
  FILTER(?timeZone = <URI_of_Time_Zone_from_Step_1>)
  ?sportsEvent a dbo:SportsEvent .
}

# Step 3: Determine the region and country for these sports events
SELECT DISTINCT ?country WHERE {
  ?sportsEvent dbo:location ?place .
  ?place dbo:region ?region .
  ?region dbo:country ?country .
  FILTER(?sportsEvent IN (<URIs_of_Sports_Events_from_Step_2>))
}

# Step 4: Find Šako Polumenta's band and its birthplace
SELECT DISTINCT ?bandBirthPlace WHERE {
  dbpedia:Sako_Polumenta dbo:associatedBand ?band .
  ?band a dbo:MusicalArtist ;
        dbo:birthPlace ?bandBirthPlace .
}

# Step 5: Identify the actor of ""All for Free"" and their birthplace
SELECT DISTINCT ?actorBirthPlace WHERE {
  ?movie dbo:title ""All for Free""@en .
  ?movie dbo:starring ?actor .
  ?actor dbo:birthPlace ?actorBirthPlace .
}

# Step 6: Match entities (country) that are common to both band's and actor's birthplaces
SELECT DISTINCT ?entity WHERE {
  VALUES (?bandBirthPlace ?actorBirthPlace) { (<URIs_of_Band_Birthplace_from_Step_4> <URIs_of_Actor_Birthplace_from_Step_5>) }
  
  ?bandBirthPlace dbo:country ?entity .
  ?actorBirthPlace dbo:country ?entity .
}
```",7,11,8,3,3,3,3,71,0,0,1,0,0.0,0
976,68,test,"Give me the office of the person born as Mehmet Naci Bostancı and office of the leader, that is a politician, of the administration, that is an organisation, of Kemal Kılıçdaroğlu and office of the mayor, that is a politician and an office holder and Turkish, of the reference, that is an organisation and a political party and Turkish, to Millet İttifakı.","SELECT ?result WHERE { ?v2 <http://dbpedia.org/property/office> ?result . ?v1 <http://dbpedia.org/property/leader> ?v6 . ?v6 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v4 <http://dbpedia.org/property/leader> <http://dbpedia.org/resource/Kemal_Kılıçdaroğlu> . ?v6 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v0 <http://dbpedia.org/property/birthName> ""Mehmet Naci Bostancı""@en . ?v6 <http://dbpedia.org/property/office> ?result . ?v1 <http://xmlns.com/foaf/0.1/name> ""Millet İttifakı""@en . ?v6 <http://dbpedia.org/ontology/nationality> <http://dbpedia.org/resource/Turkey>. ?v1 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Turkey>. ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?v0 <http://dbpedia.org/property/office> ?result . ?v4 <http://dbpedia.org/ontology/leader> ?v2 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/PoliticalParty>. }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?bostanciOffice ?kılıçdaroğluLeaderOffice ?mayorOffice
WHERE {
  # Find Mehmet Naci Bostancı's office
  ?person dbo:birthName ""Mehmet Naci Bostancı""@tr .
  ?person dbo:office ?bostanciOffice .

  # Find Kemal Kılıçdaroğlu's organization and its leader's office
  dbr:Kemal_Kılıçdaroğlu dbo:presidentOf dbr:Cumhuriyet_Halk_Parti ;
                          dbo:positionHeld ?organization .
  ?leader dbo:office ?kılıçdaroğluLeaderOffice .
  ?organization dbo:leader ?leader .

  # Find the mayor associated with Millet İttifakı
  ?mayor a dbo:Mayor ;
         dbo:nationality dbr:Turkey ;
         dbo:partyAffiliation dbr:Millet_İttifakı ;
         dbo:office ?mayorOffice .
}
```",8,16,9,3,3,3,3,71,0,0,1,0,0.0,0
508,19,test,"Give me the birthplace of the commander, that is a politician, in 1939–1940 Winter Offensive and birthplace of the commander, that is Saudi, in the war, that is a military conflict and a societal event, of Hu Yukun.",SELECT ?result WHERE { ?v4 <http://dbpedia.org/ontology/birthPlace> ?result . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?v4 <http://dbpedia.org/ontology/nationality> <http://dbpedia.org/resource/Saudi_Arabia>. <http://dbpedia.org/resource/Hu_Yukun> <http://dbpedia.org/ontology/battle> ?v0 . ?v2 <http://dbpedia.org/ontology/birthPlace> ?result . ?v0 <http://dbpedia.org/ontology/commander> ?v4 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. <http://dbpedia.org/resource/1939–1940_Winter_Offensive> <http://dbpedia.org/ontology/commander> ?v2 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. },"```sparql
# Query for the birthplace of Georgy Zhukov
SELECT ?birthPlace WHERE {
  wd:Q1234 dbo:birthPlace ?birthPlace .
}

UNION

# Query for the birthplace of Abdulaziz Ibn Saud
SELECT ?birthPlace WHERE {
  wd:Q1245 dbo:birthPlace ?birthPlace .
}
```",5,9,6,3,2,3,2,20,0,0,3,0,0.0,0
507,63,test,"Give me the director of the movie, that is a movie and a work, with Beryl Reid and professional in the profession of Guy Ferland and spouse of the person born as the birth name of Anne V. Coates.",SELECT ?result WHERE { ?v6 <http://dbpedia.org/property/starring> <http://dbpedia.org/resource/Beryl_Reid> . ?v6 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?v6 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Film>. ?v6 <http://dbpedia.org/ontology/director> ?result . <http://dbpedia.org/resource/Guy_Ferland> <http://dbpedia.org/property/occupation> ?v2 . <http://dbpedia.org/resource/Anne_V._Coates> <http://dbpedia.org/property/birthName> ?v4 . ?v3 <http://dbpedia.org/property/birthName> ?v4 . ?result <http://dbpedia.org/property/occupation> ?v2 . ?result <http://dbpedia.org/ontology/spouse> ?v3 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?director WHERE {
  ?movie dbo:starring dbr:Beryl_Reid .
  ?movie dbo:profession dbr:Guy_Ferland .
  
  ?coates dbo:spouse ?spouse .
  FILTER (str(?coates) = ""Anne_V._Coates"") .

  ?movie dbo:director ?director .
}
```",7,9,8,3,3,3,3,71,0,0,1,0,0.0,0
645,67,test,"Give me the commander in Battle of Jarama and military force of the force, that is an event and a military conflict and a societal event, of the native, that is a president and a politician, of Restoration (Spain) and leader of the office, that is a government agency and an organisation, of the native of Restoration (Spain).",SELECT ?result WHERE { ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?v1 <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Restoration_(Spain)> . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/President>. ?v3 <http://dbpedia.org/ontology/leader> ?result . ?v1 <http://dbpedia.org/property/office> ?v3 . <http://dbpedia.org/resource/Battle_of_Jarama> <http://dbpedia.org/ontology/commander> ?result . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?result <http://dbpedia.org/ontology/battle> ?v6 . ?v6 <http://dbpedia.org/ontology/commander> ?v0 . ?v0 <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Restoration_(Spain)> . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/GovernmentAgency>. ?v6 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v6 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?v6 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?commander WHERE {
  # Identify the Battle of Jarama as a military conflict
  dbr:Battle_of_Jarama dbo:type ?type .
  
  FILTER(?type IN (dbr:Military_Conflict, dbr:Societal_Event, dbr:Event))
  
  # Find the commander associated with this battle
  dbr:Battle_of_Jarama dbo:commander ?commander .

  OPTIONAL {
    # Contextual information about Alfonso XIII and his role during the Restoration period
    dbr:Alfonso_XIII dbo:nationality dbr:Spain ;
                    dbo:office ?office .
    
    FILTER(?office IN (dbr:Government_Agency, dbr:Organization))
  }
}
```",7,14,8,3,3,3,3,71,0,0,1,0,0.0,0
507,60,test,Give me the spouse of the person born as the birth name of Anne V. Coates and professional in the profession of the person born on 1966-02-18.,"SELECT ?result WHERE { ?v2 <http://dbpedia.org/property/birthName> ?v3 . ?v0 <http://dbpedia.org/property/occupation> ?v1 . ?v0 <http://dbpedia.org/ontology/birthDate> ""1966-02-18""^^<http://www.w3.org/2001/XMLSchema#date> . ?result <http://dbpedia.org/property/occupation> ?v1 . <http://dbpedia.org/resource/Anne_V._Coates> <http://dbpedia.org/property/birthName> ?v3 . ?result <http://dbpedia.org/ontology/spouse> ?v2 . }","```sparql
# Step 1: Find Anne V. Coates' birth name
SELECT ?birthName WHERE {
  dbpedia:Anne_V._Coates foaf:name ""Anne V. Coates""@en .
  dbpedia:Anne_V._Coates dbo:birthName ?birthName .
}

# Step 2: Identify the person with that birth name (assuming we get a result like ""Anne Veronica Coates"")
SELECT ?person WHERE {
  ?person foaf:name ""Anne Veronica Coates""@en .
  ?person rdf:type dbo:Person .
}

# Step 3: Find the profession of the person born on 1966-02-18
SELECT ?profession WHERE {
  ?person dbo:birthday ""1966-02-18""^^xsd:date .
  ?person dbo:occupation ?profession .
}

# Step 4: Find the spouse of the person identified in step 2
SELECT ?spouse WHERE {
  ?person foaf:name ""Anne Veronica Coates""@en .
  ?person dbo:spouse ?spouse .
}
```",6,6,7,3,2,3,3,71,0,0,1,0,0.0,0
645,66,test,"Give me the commander in the force of Carlos Asensio Cabanillas and leader of the office, that is a government agency and an organisation, of the native of Restoration (Spain) and military force of the force, that is an event and a military conflict and a societal event, of Francisco Largo Caballero.",SELECT ?result WHERE { ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?v3 <http://dbpedia.org/ontology/commander> ?result . ?v6 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?v6 <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Francisco_Largo_Caballero> . ?v6 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?v1 <http://dbpedia.org/property/office> ?v2 . ?v1 <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Restoration_(Spain)> . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/GovernmentAgency>. ?v3 <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Carlos_Asensio_Cabanillas> . ?v6 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v2 <http://dbpedia.org/ontology/leader> ?result . ?result <http://dbpedia.org/ontology/battle> ?v6 . },"```sparql
SELECT ?commander WHERE {
  ?person dbo:nationality dbr:Spain .
  ?person dbo:birthPlace dbr:Restoration_(Spain) .
  ?person dbo:occupation dbr:Military_officer .
  ?person dbo:officeHolder ?agency .
  ?agency a dbo:Government_agency .

  ?conflict dbo:type dbr:Military_conflict ;
            dbo:type dbr:Societal_event .
  ?conflict dbo:participant ?person2 .
  
  ?asensio dbo:commanderIn ?force .
  ?asensio dbo:name ""Carlos Asensio Cabanillas""@en .

  ?caballero dbo:participant ?conflict .
  ?caballero dbo:name ""Francisco Largo Caballero""@en .

  ?person2 dbo:commanderIn ?force ;
           dbo:name ?commanderName .
  
  FILTER(?commanderName = ?person)
}
```",7,12,8,3,3,3,3,71,0,0,2,0,0.0,0
465,59,test,"Give me the successor of the child of the parent of Ercole II d'Este, Duke of Ferrara and spouse of the child, that is a royalty, of the parent of Elizabeth of Austria (1526–1545).","SELECT ?result WHERE { ?v0 <http://dbpedia.org/ontology/child> ?v5 . ?v2 <http://dbpedia.org/ontology/successor> ?result . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v0 <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Elizabeth_of_Austria_(1526–1545)> . <http://dbpedia.org/resource/Ercole_II_d'Este,_Duke_of_Ferrara> <http://dbpedia.org/ontology/parent> ?v3 . ?v2 <http://dbpedia.org/property/father> ?v3 . ?result <http://dbpedia.org/ontology/spouse> ?v5 . }","```sparql
SELECT ?successor WHERE {
  # Step 1: Identify Ercole II d'Este's parent
  dbp:Ercole_II_d%27Este dbo:parent ?ercoleParent .

  # Step 2: Find the child of Ercole II d'Este's parent who is a royalty and spouse
  ?child dbo:parent ?ercoleParent .
  ?child rdf:type dbo:Monarch .
  ?child dbo:spouse ?spouse .

  # Step 3: Identify Elizabeth of Austria's parent
  dbp:Elizabeth_of_Austria_(1526–1545) dbo:parent ?elizabethParent .

  # Step 4: Find the spouse who is related to Elizabeth of Austria's parent
  ?spouse dbo:childOf ?elizabethParent .

  # Step 5: Determine the successor of the identified spouse
  ?spouse dbo:successor ?successor .
}
```",6,7,7,3,2,3,3,71,0,0,1,0,0.0,0
917,63,test,"Give me the parent of the child, that is a royalty, of the mayor of Hawaiian Kingdom and child of the father of Kamehameha IV and child of the father of Keʻelikōlani.",SELECT ?result WHERE { <http://dbpedia.org/resource/Keʻelikōlani> <http://dbpedia.org/property/father> ?v5 . <http://dbpedia.org/resource/Kamehameha_IV> <http://dbpedia.org/property/father> ?v0 . ?result <http://dbpedia.org/property/father> ?v0 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. <http://dbpedia.org/resource/Hawaiian_Kingdom> <http://dbpedia.org/property/leader> ?v3 . ?result <http://dbpedia.org/ontology/child> ?v1 . ?result <http://dbpedia.org/ontology/parent> ?v5 . ?v1 <http://dbpedia.org/property/father> ?v3 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?parent WHERE {
  # Step 1: Identify the mayor of Hawaiian Kingdom
  ?mayor a dbo:Mayor ;
         dbo:country dbr:Hawaii .

  # Step 2: Find royalty child of the mayor
  ?royaltyChild dbo:childOf ?mayor ;
                a dbo:Monarch .

  # Step 3: Father of Kamehameha IV is Kamehameha III
  ?kamehamehaIV dbo:father dbr:Kamehameha_III .

  # Step 4: Child of father of Kamehameha IV
  ?childOfFatherKamehamehaIV dbo:childOf dbr:Kamehameha_III ;
                            a dbo:Monarch .

  # Step 5: Father of Keʻelikōlani is Kahekili Naihe
  ?keelikolani dbo:father dbr:Kahekili_Naihe .

  # Step 6: Child of father of Keʻelikōlani
  ?childOfFatherKeelikolani dbo:childOf dbr:Kahekili_Naihe ;
                           a dbo:Monarch .

  # Step 7: Find common royalty child
  VALUES ?commonChild { ?royaltyChild ?childOfFatherKamehamehaIV ?childOfFatherKeelikolani }

  # Step 8: Identify the parent of this common child
  ?parent dbo:child ?commonChild .
}
```",7,8,8,3,3,3,3,71,0,0,2,0,0.0,0
917,69,test,"Give me the parent of the child, that is a royalty, of the mayor of Hawaiian Kingdom and child of the father of the child, that is a royalty, of Kamehameha III and child of the father of Keʻelikōlani.",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/parent> ?v6 . <http://dbpedia.org/resource/Kamehameha_III> <http://dbpedia.org/ontology/child> ?v5 . <http://dbpedia.org/resource/Keʻelikōlani> <http://dbpedia.org/property/father> ?v6 . ?result <http://dbpedia.org/ontology/child> ?v2 . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?result <http://dbpedia.org/property/father> ?v0 . ?v5 <http://dbpedia.org/property/father> ?v0 . ?v2 <http://dbpedia.org/property/father> ?v4 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. <http://dbpedia.org/resource/Hawaiian_Kingdom> <http://dbpedia.org/property/leader> ?v4 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?parent WHERE {
  # Keʻelikōlani's father
  dbr:Keʻelikōlani dbo:father dbr:Kamehameha_IV .

  # Kamehameha III's royal child (Keʻelikōlani)
  dbr:Kamehameha_III dbo:child dbr:Keʻelikōlani .

  # Parent of Keʻelikōlani
  ?parent dbo:child dbr:Keʻelikōlani .
}
```",8,10,9,3,3,3,3,71,0,0,2,0,0.0,0
573,64,test,"Give me the parent of the author, that is a politician and an office holder, of the work of John Quincy Adams and person decedent at Quincy, Massachusetts and person decedent at the administration, that is a region, of the real name of Charlie Baker (Australian footballer).","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/deathPlace> <http://dbpedia.org/resource/Quincy,_Massachusetts> . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v0 <http://dbpedia.org/property/author> ?v1 . ?result <http://dbpedia.org/ontology/deathPlace> ?v2 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Region>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. <http://dbpedia.org/resource/Charlie_Baker_(Australian_footballer)> <http://xmlns.com/foaf/0.1/name> ?v3 . ?v0 <http://dbpedia.org/property/author> <http://dbpedia.org/resource/John_Quincy_Adams> . ?v1 <http://dbpedia.org/ontology/parent> ?result . ?v2 <http://dbpedia.org/property/governor> ?v3 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?parent WHERE {
  # John Quincy Adams' work
  dbr:John_Quincy_Adams dbo:work dbr:The_Defense_of_the_Constitutions_of_Government_of_the_United_States_of_America .

  # Parent of John Quincy Adams who is a politician and office holder
  dbr:John_Quincy_Adams dbo:father ?parent .
  ?parent a dbo:Politician ;
          a dbo:OfficeHolder .

  # Person decedent at Quincy, Massachusetts
  ?parent dbo:deathPlace dbr:Quincy,_Massachusetts .

  # Administration related to Charlie Baker (Australian footballer)
  dbr:Charlie_Baker_(Australian_footballer) dbo:realName dbr:Charles_Francis_Baker .
  dbr:Massachusetts dbo:stateGovernor dbr:Charlie_Baker_(Australian_footballer) .

  # Ensure the parent is related to the administration
  ?parent dbo:deathPlace ?administration .
  FILTER(STRSTARTS(STR(?administration), ""http://dbpedia.org/resource/Massachusetts""))
}
```",7,10,8,3,3,3,3,71,0,0,2,0,0.0,0
645,59,test,"Give me the commander in the force of the commander in Siege of Madrid and military force of the force, that is an event and a military conflict and a societal event, of the native, that is a president and a politician, of Restoration (Spain).",SELECT ?result WHERE { ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?v5 <http://dbpedia.org/ontology/commander> ?v0 . ?v2 <http://dbpedia.org/ontology/commander> ?v3 . ?v0 <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Restoration_(Spain)> . <http://dbpedia.org/resource/Siege_of_Madrid> <http://dbpedia.org/ontology/commander> ?v3 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?result <http://dbpedia.org/ontology/battle> ?v5 . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/President>. ?v2 <http://dbpedia.org/ontology/commander> ?result . },"```sparql
SELECT ?commander ?politicalFigure WHERE {
  ?siege dcterms:isPartOf ?conflict .
  ?siege dbo:location ?location .
  FILTER (CONTAINS(LCASE(?location), ""madrid"") && CONTAINS(LCASE(STR(?conflict)), ""civil war"")) .
  
  ?commander dbo:commanderIn ?siege .
  ?politicalFigure dbo:nationality dbr:Spain ;
                   dbo:occupation dbr:Politician ;
                   dbo:birthPlace ?place .

  OPTIONAL { ?politicalFigure dbo:relatedTo ?commander . }
}
```",6,11,7,3,2,3,3,71,0,0,53,0,0.0,0
839,58,test,"Give me the band of the band, that is a musical artist, of the professional in Musician and band of the member of Böhse Onkelz and band of Kevin Russell (musician).","SELECT ?result WHERE { <http://dbpedia.org/resource/Böhse_Onkelz> <http://dbpedia.org/ontology/bandMember> ?v5 . ?v1 <http://dbpedia.org/ontology/associatedMusicalArtist> ?v2 . ?result <http://dbpedia.org/ontology/bandMember> ?v5 . <http://dbpedia.org/resource/Kevin_Russell_(musician)> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v1 <http://dbpedia.org/property/occupation> ""Musician""@en . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?result <http://dbpedia.org/ontology/bandMember> ?v2 . }","```sparql
SELECT ?band WHERE {
  ?person foaf:name ""Kevin Russell""@en .
  ?person dbo:memberOfBand ?boBand .
  ?boBand rdfs:label ""Böhse Onkelz""@en .
  ?boBand dbo:band ?band .
}
```",6,7,7,3,3,3,3,71,0,0,1,0,0.0,0
965,57,test,"Give me the spouse of Prince Louis of Battenberg and parent of the child, that is a royalty, of the person born, that is a politician, on 1854-05-24 and parent of the person born, that is a noble, as Prince George of Battenberg.","SELECT ?result WHERE { ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?result <http://dbpedia.org/ontology/spouse> <http://dbpedia.org/resource/Prince_Louis_of_Battenberg> . ?v4 <http://dbpedia.org/ontology/parent> ?result . ?v0 <http://dbpedia.org/property/birthName> ""Prince George of Battenberg""@en . ?v1 <http://dbpedia.org/ontology/birthDate> ""1854-05-24""^^<http://www.w3.org/2001/XMLSchema#date> . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v0 <http://dbpedia.org/ontology/parent> ?result . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Noble>. ?v4 <http://dbpedia.org/property/father> ?v1 . }","```sparql
SELECT ?spouse WHERE {
  ?person dbr:Prince_Henry_of_Battenberg ;
          dbo:birthDate ""1854-05-24""^^xsd:date ;
          foaf:surname ""Battenberg""@en .
  
  ?person dbo:spouse ?spouse .

  ?child dbo:parent ?person ;
         dbo:parent ?spouse ;
         rdf:type dbr:Royal_family_member .

  FILTER EXISTS {
    ?politician dbo:birthDate ""1854-05-24""^^xsd:date .
    ?politician owl:sameAs ?person .
  }
}
```",6,9,7,3,3,3,3,71,0,0,1,0,0.0,0
445,64,test,"Give me the death place of Patrick Moore and entity in the residence, that is a country, of the resident, that is an athlete, of Great Britain and entity in the award of the commander in Battle of Saint-Mihiel.",SELECT ?result WHERE { <http://dbpedia.org/resource/Patrick_Moore> <http://dbpedia.org/ontology/deathPlace> ?result . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. ?result <http://dbpedia.org/ontology/location> ?v2 . ?v3 <http://dbpedia.org/property/residence> ?v2 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Athlete>. ?result <http://dbpedia.org/ontology/country> ?v1 . ?v0 <http://dbpedia.org/property/awards> ?v1 . <http://dbpedia.org/resource/Battle_of_Saint-Mihiel> <http://dbpedia.org/ontology/commander> ?v0 . ?v3 <http://dbpedia.org/property/residence> <http://dbpedia.org/resource/Great_Britain> . },"```sparql
# Query for Patrick Moore's death place
SELECT ?deathPlace WHERE {
  dbpedia:Patrick_Moore dbo:deathPlace ?deathPlace .
}

UNION

# Query for a British athlete's country of residence
SELECT DISTINCT ?country WHERE {
  ?athlete dbo:nationality dbc:Great_Britain ;
           dbo:residence ?residence .
  ?residence dbo:locationCountry ?country .
}

UNION

# Query for the award entity of the commander in Battle of Saint-Mihiel
SELECT DISTINCT ?awardEntity WHERE {
  dbpedia:George_S._Patton dbo:honours ?honour .
  ?honour rdf:type dbo:Award ;
          rdfs:label ?awardLabel .
  FILTER(CONTAINS(LCASE(?awardLabel), ""battle of saint-mihiel""))
  ?honour dbo:recipient ?recipient .
  OPTIONAL { ?honour dbo:entity ?awardEntity . }
}
```",7,9,8,3,3,3,3,71,0,0,1,0,0.0,0
573,60,test,"Give me the person decedent at the administration, that is a region, of the real name of Charlie Baker (Australian footballer) and parent of the author, that is a politician and an office holder, of the work of John Quincy Adams.",SELECT ?result WHERE { ?v0 <http://dbpedia.org/property/author> <http://dbpedia.org/resource/John_Quincy_Adams> . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Region>. <http://dbpedia.org/resource/Charlie_Baker_(Australian_footballer)> <http://xmlns.com/foaf/0.1/name> ?v3 . ?v2 <http://dbpedia.org/property/governor> ?v3 . ?result <http://dbpedia.org/ontology/deathPlace> ?v2 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v1 <http://dbpedia.org/ontology/parent> ?result . ?v0 <http://dbpedia.org/property/author> ?v1 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. },"```sparql
# Step 1: Find Charlie Baker's real name
SELECT ?realName WHERE {
  ?person foaf:name ""Charlie Baker (Australian footballer)"" .
  ?person dbo:birthName ?realName .
}

# Step 2: Identify a region associated with Charlie Baker
SELECT DISTINCT ?region WHERE {
  ?person dbo:birthName ?realName .
  ?person dbo:administers ?region .
}

# Step 3: Find John Quincy Adams' notable work and its author
SELECT ?work ?author WHERE {
  ?adams foaf:name ""John Quincy Adams"" .
  ?adams dbo:authored ?work .
  ?work dbo:author ?author .
}

# Step 4: Determine the parent of that author who is a politician/office holder
SELECT DISTINCT ?parent WHERE {
  ?author dbo:child ?person .
  ?person foaf:name ?name .
  ?person dbo:occupation ?occupation .
  FILTER (CONTAINS(?occupation, ""politician"") || CONTAINS(?occupation, ""office holder""))
}

# Step 5: Find the decedent at the administration of the region
SELECT DISTINCT ?decedent WHERE {
  ?region dbo:administeredBy ?person .
  ?person dbo:deathDate ?date .
  ?person foaf:name ?name .
}
```",6,9,7,3,2,3,3,71,0,0,2,0,0.0,0
926,61,test,"Give me the successor of the child of the spouse of Şermi Kadın and child of the father, that is a royalty, of the parent, that is a royalty, of Beyhan Sultan (daughter of Mustafa III).",SELECT ?result WHERE { ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v1 <http://dbpedia.org/ontology/spouse> <http://dbpedia.org/resource/Şermi_Kadın> . <http://dbpedia.org/resource/Beyhan_Sultan_(daughter_of_Mustafa_III)> <http://dbpedia.org/ontology/parent> ?v3 . ?v3 <http://dbpedia.org/property/father> ?v0 . ?v4 <http://dbpedia.org/property/father> ?v1 . ?v0 <http://dbpedia.org/ontology/child> ?result . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v4 <http://dbpedia.org/ontology/successor> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?successor WHERE {
  # Beyhan Sultan's parent who is royalty
  ?beyhanSultan dbo:parent ?mustafaIII .
  ?mustafaIII rdfs:label ""Mustafa III""@en .

  # Mustafa III's father and his children
  ?abdulHamidI dbo:child ?mustafaIII .
  ?abdulHamidI rdfs:label ""Abdülhamid I""@en .
  ?abdulHamidIClild dbo:parent ?abdulHamidI .

  # Şermi Kadın's spouse and their child
  ?sermiKadin dbo:spouse ?spouse .
  ?sermiKadin rdfs:label ""Şermi Kadın""@en .
  ?childOfSpouse dbo:parent ?spouse .

  # Find the successor of the child of Şermi Kadın's spouse and Abdul Hamid I's child
  ?abdulHamidIClild dbo:succedent ?successor .
  FILTER(?childOfSpouse = ?abdulHamidIClild)
}
```",6,8,7,3,2,3,3,71,0,0,1,0,0.0,0
582,60,test,"Give me the figure known as the nickname of the team, that is an organisation, of Hajime Moriyasu and reference to the residence of the reference, that is a scientist, to Hirotaka Sugawara.","SELECT ?result WHERE { ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Scientist>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?v3 <http://dbpedia.org/property/residence> ?v2 . ?v0 <http://dbpedia.org/property/nickname> ?v1 . ?v3 <http://xmlns.com/foaf/0.1/name> ""Hirotaka Sugawara""@en . ?result <http://dbpedia.org/property/nickname> ?v1 . ?result <http://xmlns.com/foaf/0.1/name> ?v2 . ?v0 <http://dbpedia.org/ontology/coach> <http://dbpedia.org/resource/Hajime_Moriyasu> . }","```sparql
# Step 1: Find the team managed by Hajime Moriyasu and its nickname
SELECT ?team ?nickname WHERE {
  ?team dbo:manager dbr:Hajime_Moriyasu .
  OPTIONAL { ?team skos:altLabel ?nickname . }
}

# Step 2: Find Hirotaka Sugawara's place of residence or affiliation
SELECT ?scientist ?residence WHERE {
  ?scientist foaf:name ""Hirotaka Sugawara""@en .
  OPTIONAL { ?scientist dbo:affiliation ?institution . }
  OPTIONAL { ?scientist dbo:location ?residence . }
}

# Step 3: Check for any connection between the team nickname and Hirotaka Sugawara's residence
SELECT ?nickname ?residence WHERE {
  # Assuming we have variables from previous queries
  VALUES (?team) { <URL_of_the_team> } # Replace with actual URL obtained from step 1
  VALUES (?scientist) { <URL_of_scientist> } # Replace with actual URL obtained from step 2

  ?team skos:altLabel ?nickname .
  ?scientist dbo:location ?residence .
}
```",6,8,7,3,2,3,3,71,0,0,1,0,0.0,0
459,27,test,"Give me the governor of the administration, that is a politician, of Brad Henry and governor of Oklahoma and person born as the birth name of Kevin Stitt.",SELECT ?result WHERE { ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v3 <http://dbpedia.org/property/governor> ?result . ?result <http://dbpedia.org/property/birthName> ?v2 . ?v3 <http://dbpedia.org/property/governor> <http://dbpedia.org/resource/Brad_Henry> . <http://dbpedia.org/resource/Oklahoma> <http://dbpedia.org/property/governor> ?result . <http://dbpedia.org/resource/Kevin_Stitt> <http://dbpedia.org/property/birthName> ?v2 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?person ?role
WHERE {
  # Brad Henry's information
  dbr:Brad_Henry dbo:governmentRole ?role1 .
  
  # Kevin Stitt's information
  dbr:Kevin_Stitt dbo:birthName ""Kevin Stitt""@en ;
                  dbo:governmentRole ?role2 .

  # Check for overlap in roles or administration
  OPTIONAL { ?person dbo:governmentRole ?role1 . }
  OPTIONAL { ?person dbo:governmentRole ?role2 . }

  FILTER(?role1 != ?role2) # Ensure we are looking for a different role if any

  # Return the person and their role if they overlap in both administrations
  VALUES ?person { dbr:Brad_Henry dbr:Kevin_Stitt }
}
```",5,6,6,2,3,2,3,28,0,0,1,0,0.0,0
965,56,test,"Give me the spouse of the spouse of Princess Victoria of Hesse and by Rhine and parent of Louise Mountbatten and parent of the person born, that is a noble, as the birth name of George Mountbatten, 2nd Marquess of Milford Haven.","SELECT ?result WHERE { <http://dbpedia.org/resource/George_Mountbatten,_2nd_Marquess_of_Milford_Haven> <http://dbpedia.org/property/birthName> ?v4 . ?v0 <http://dbpedia.org/ontology/parent> ?result . <http://dbpedia.org/resource/Louise_Mountbatten> <http://dbpedia.org/ontology/parent> ?result . ?result <http://dbpedia.org/ontology/spouse> ?v2 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Noble>. <http://dbpedia.org/resource/Princess_Victoria_of_Hesse_and_by_Rhine> <http://dbpedia.org/ontology/spouse> ?v2 . ?v0 <http://dbpedia.org/property/birthName> ?v4 . }","```sparql
SELECT ?spouse WHERE {
  wd:Q1198 wdt:P26 ?husband . # Ernest Louis, Grand Duke of Hesse (Princess Victoria's husband)
  ?husband wdt:P22 wd:Q1184 . # Princess Victoria of Hesse and by Rhine
  ?husband wdt:P40 wd:Q1200 . # Louise Mountbatten (child of Ernest Louis and Princess Victoria)

  ?princePhilip wdt:P31 wd:Q5 . # Prince Philip, Duke of Edinburgh is a human
  ?princePhilip wdt:P1476 wd:Q1184 . # Mother is Princess Victoria of Hesse and by Rhine
  ?princePhilip wdt:P22 ?mother . # Mother of Prince Philip

  ?mother wdt:P26 ?father . # Father of Alice (Princess Andrew's wife)
  ?father wdt:P31 wd:Q5 . # Ensure father is a human
  ?father rdfs:label ""Ernest Louis, Grand Duke of Hesse""@en . # Match Ernest Louis

  ?mother wdt:P26 ?spouse . # Spouse of Alice (Princess Andrew's wife)
}
```",6,7,7,3,3,3,3,71,0,0,1,0,0.0,0
773,66,test,"Give me the parent of the successor of Charles the Bald and parent of the child, that is a royalty, of the father, that is an office holder and a royalty, of Carloman of Bavaria and spouse of the father of Charles the Fat.",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/child> ?v6 . ?v3 <http://dbpedia.org/ontology/spouse> ?result . <http://dbpedia.org/resource/Carloman_of_Bavaria> <http://dbpedia.org/property/father> ?v1 . <http://dbpedia.org/resource/Charles_the_Bald> <http://dbpedia.org/ontology/successor> ?v6 . <http://dbpedia.org/resource/Charles_the_Fat> <http://dbpedia.org/property/father> ?v3 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v2 <http://dbpedia.org/property/father> ?v1 . ?v2 <http://dbpedia.org/ontology/parent> ?result . },"```sparql
# Step 1: Successor of Charles the Bald
SELECT ?successor WHERE {
  wd:Q1343 dbo:successionSuccessor ?successor .
}

# Step 2: Parent of the successor
SELECT ?parent WHERE {
  ?successor dbo:child ?parent .
}

# Step 3: Father of Carloman of Bavaria who is an office holder and royalty
SELECT ?father WHERE {
  wd:Q11150 dbo:father ?father .
  ?father rdf:type wdno:OfficeHolder ;
          rdf:type wdno:RoyalFamilyMember .
}

# Step 4: Child of this father that is a royalty
SELECT ?royalChild WHERE {
  ?father dbo:child ?royalChild .
  ?royalChild rdf:type wdno:RoyalFamilyMember .
}

# Step 5: Parent of the royal child
SELECT ?parentOfRoyalChild WHERE {
  ?royalChild dbo:child ?parentOfRoyalChild .
}

# Step 6: Spouse of the father of Charles the Fat
SELECT ?spouse WHERE {
  wd:Q1344 dbo:father ?fatherOfCharlesTheFat .
  ?fatherOfCharlesTheFat dbo:spouse ?spouse .
}
```",7,10,8,3,3,3,3,71,0,0,1,0,0.0,0
216,69,test,"Give me the team of the person born, that is a sports manager and a soccer manager and a soccer player, on the death of Pavel Vezhinov and player in the coach, that is a soccer player and a sports manager and a soccer manager, of Bosnia and Herzegovina national under-18 football team and player in the coach of the reference, that is an organisation and a soccer club, to Croatia U21.","SELECT ?result WHERE { ?v7 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsManager>. ?v7 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerPlayer>. ?v7 <http://dbpedia.org/ontology/team> ?result . ?v4 <http://dbpedia.org/ontology/coach> ?v3 . ?v4 <http://xmlns.com/foaf/0.1/name> ""Croatia U21""@en . ?v2 <http://dbpedia.org/ontology/birthDate> ?v1 . ?result <http://dbpedia.org/ontology/coach> ?v2 . ?v7 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerManager>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerManager>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsManager>. ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerClub>. <http://dbpedia.org/resource/Bosnia_and_Herzegovina_national_under-18_football_team> <http://dbpedia.org/ontology/coach> ?v7 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerPlayer>. <http://dbpedia.org/resource/Pavel_Vezhinov> <http://dbpedia.org/ontology/deathDate> ?v1 . ?v3 <http://dbpedia.org/ontology/team> ?result . }","```sparql
# Step 1: Find Pavel Vezhinov's death date
SELECT ?deathDate WHERE {
  dbpedia:Pavel_Vezhinov dbo:deathDate ?deathDate .
}

# Step 2: Find person born on that date who is a sports manager, soccer manager, and soccer player
SELECT DISTINCT ?person WHERE {
  ?person dbo:birthDate ?birthDate ;
          rdf:type dbo:SportsManager ;
          rdf:type dbo:SoccerPlayer ;
          rdf:type dbo:SoccerManager .
  FILTER (?birthDate = ""deathDateFromStep1"") # Replace with actual date from Step 1
}

# Step 3: Determine this person's team affiliation as a coach for Bosnia and Herzegovina national under-18 football team
SELECT DISTINCT ?team WHERE {
  ?person dbo:coachTeam ?team .
  FILTER (?team = dbpedia:Bosnia_and_Herzegovina_national_under-18_football_team)
}

# Step 4: Find another individual who is both a soccer player and a sports manager, and also a soccer manager for Croatia U21
SELECT DISTINCT ?individual WHERE {
  ?individual rdf:type dbo:SoccerPlayer ;
              rdf:type dbo:SportsManager ;
              rdf:type dbo:SoccerManager .
  ?individual dbo:coachTeam dbpedia:Croatia_national_under-21_football_team .
}

# Step 5: Identify the organization or soccer club associated with this second person's coaching role
SELECT DISTINCT ?organization WHERE {
  ?individual dbo:coachTeam ?team .
  ?team rdf:type dbo:SoccerClub ;
        dbo:country dbpedia:Croatia .
}
```",8,16,9,3,3,3,3,71,0,0,1,0,0.0,0
465,62,test,"Give me the spouse of the child, that is a royalty, of the parent of Elizabeth of Austria (1526–1545) and successor of Renée of France and successor of the child of the parent of Ercole II d'Este, Duke of Ferrara.","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/spouse> ?v6 . ?v3 <http://dbpedia.org/property/father> ?v4 . ?v0 <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Elizabeth_of_Austria_(1526–1545)> . ?v3 <http://dbpedia.org/ontology/successor> ?result . ?v0 <http://dbpedia.org/ontology/child> ?v6 . ?v6 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. <http://dbpedia.org/resource/Ercole_II_d'Este,_Duke_of_Ferrara> <http://dbpedia.org/ontology/parent> ?v4 . <http://dbpedia.org/resource/Renée_of_France> <http://dbpedia.org/ontology/successor> ?result . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?spouse WHERE {
  # Step 1: Identify Elizabeth of Austria's parent
  ?elizabeth a dbo:Person ;
             dbp:name ""Elizabeth of Austria"" ;
             dbp:dateOfBirth ""1526-07-05""^^xsd:date ;
             dbp:dateOfDeath ""1545-02-14""^^xsd:date ;
             dbo:parent ?parent .

  # Step 2: Find the child that is royalty
  ?child a dbo:Person ;
         dbo:parent ?parent ;
         dbo:spouse ?spouse ;
         (dbp:title|dbo:royalty) ?title .

  # Step 3: Successor of Renée of France
  ?renée dbp:name ""Renée of France"" .
  ?successor dbp:succeededBy ?renée .

  # Step 4: Identify Ercole II d'Este's parent
  ?ercole2 a dbo:Person ;
           dbp:name ""Ercole II d'Este, Duke of Ferrara"" ;
           dbo:parent ?parentErcole .

  # Step 5: Find the child of that parent
  ?childErcole a dbo:Person ;
               dbo:parent ?parentErcole .

  # Step 6: Successor of that child
  ?successorChild dbp:succeededBy ?childErcole .

  # Step 7: Combine successors and find spouse
  FILTER (?spouse = ?successor && ?spouse = ?successorChild)
}
```",7,8,8,3,3,3,3,71,0,0,1,0,0.0,0
216,64,test,"Give me the player in Mario Ivanković and team of the person born, that is a sports manager and a soccer manager and a soccer player, on the death of Pavel Vezhinov and player in the coach of the reference, that is an organisation and a soccer club, to Croatia U21.","SELECT ?result WHERE { ?v2 <http://dbpedia.org/ontology/team> ?result . ?v3 <http://dbpedia.org/ontology/coach> ?v2 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerClub>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerPlayer>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsManager>. ?v1 <http://dbpedia.org/ontology/birthDate> ?v0 . ?v3 <http://xmlns.com/foaf/0.1/name> ""Croatia U21""@en . ?result <http://dbpedia.org/ontology/coach> ?v1 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerManager>. <http://dbpedia.org/resource/Pavel_Vezhinov> <http://dbpedia.org/ontology/deathDate> ?v0 . <http://dbpedia.org/resource/Mario_Ivanković> <http://dbpedia.org/ontology/team> ?result . }","```sparql
# Step 1: Find Mario Ivanković's team
SELECT ?team WHERE {
  wd:Q1234567 dbo:playsFor ?team .
}

# Step 2: Find the date of Pavel Vezhinov's death
SELECT ?deathDate WHERE {
  wd:Q6543210 dbo:dateOfDeath ?deathDate .
}

# Step 3: Find a person who is both a sports manager and soccer manager and player born on that date
SELECT ?person WHERE {
  ?person dbo:birthDate ?birthDate ;
          (dbo:sportManager | dbo:soccerManager) ?managerRole ;
          dbo:soccerPlayer ?playerRole .
  FILTER (?birthDate = ?deathDate)
}

# Step 4: Find the coach of Croatia U21 at that time
SELECT ?coach WHERE {
  wd:Q9876543 dbo:coach ?coach .
}

# Step 5: Identify any players associated with this coach and team
SELECT ?player WHERE {
  ?team dbo:member ?player .
  ?coach dbo:coached ?team .
}
```

Note: Replace `wd:Q1234567`, `wd:Q6543210`, and `wd:Q9876543` with the actual DBpedia identifiers for Mario Ivanković, Pavel Vezhinov, and Croatia U21 respectively. These queries assume that such properties exist in DBpedia.",7,12,8,3,3,3,3,71,0,0,1,0,0.0,0
933,70,test,"Give me the band of the band, that is a group and a band and an organisation, of the person born, that is a musical artist, on 1947-04-21 and reference to the birth name of the professional in Musician and band of the band of Alan Warner (musician).","SELECT ?result WHERE { ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Band>. ?v3 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?result <http://xmlns.com/foaf/0.1/name> ?v6 . ?v5 <http://dbpedia.org/ontology/associatedMusicalArtist> ?v0 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Group>. ?v1 <http://dbpedia.org/property/birthName> ?v6 . ?v5 <http://dbpedia.org/ontology/birthDate> ""1947-04-21""^^<http://www.w3.org/2001/XMLSchema#date> . ?v1 <http://dbpedia.org/property/occupation> <http://dbpedia.org/resource/Musician> . <http://dbpedia.org/resource/Alan_Warner_(musician)> <http://dbpedia.org/ontology/associatedMusicalArtist> ?v3 . ?v0 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . }","```sparql
# Step 1: Find the musician born on 1947-04-21
SELECT ?musician WHERE {
  ?musician dbo:birthday ""1947-04-21""^^xsd:date .
  ?musician rdf:type dbo:MusicalArtist .
}

# Step 2: Find the band associated with this musician and check if it is an organization
WITH <http://dbpedia.org/resource/John_Mayall> AS ?musician
SELECT ?band WHERE {
  ?musician dbo:memberOfBand ?band .
  ?band rdf:type dbo:MusicalGroup ;
        dbo:isPartOf ?organization .
}

# Step 3: Find Alan Warner's band
SELECT ?alanWarnerBand WHERE {
  dbpedia:Alan_Warner dbo:memberOfBand ?alanWarnerBand .
}

# Step 4: Find a member of Alan Warner's band who is also a musician
WITH <http://dbpedia.org/resource/John_Mayall> AS ?band
SELECT ?member WHERE {
  ?member dbo:memberOfBand ?band ;
          rdf:type dbo:MusicalArtist .
}

# Step 5: Get the birth name of this member
SELECT ?birthName WHERE {
  ?member foaf:name ?birthName .
}
```",8,12,9,3,3,3,3,71,0,0,1,0,0.0,0
573,68,test,"Give me the person decedent at the residence, that is a settlement, of the professional, that is American, in Politician and person decedent at the administration, that is a region, of the real name of Charlie Baker (Australian footballer) and parent of the author, that is a politician and an office holder, of Exchequer Standards.","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/deathPlace> ?v7 . ?v4 <http://dbpedia.org/property/governor> ?v5 . ?v7 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v0 <http://dbpedia.org/ontology/nationality> <http://dbpedia.org/resource/United_States>. ?v0 <http://dbpedia.org/property/residence> ?v7 . ?v0 <http://dbpedia.org/property/occupation> ""Politician""@en . <http://dbpedia.org/resource/Charlie_Baker_(Australian_footballer)> <http://xmlns.com/foaf/0.1/name> ?v5 . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Region>. ?result <http://dbpedia.org/ontology/deathPlace> ?v4 . ?v3 <http://dbpedia.org/ontology/parent> ?result . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. <http://dbpedia.org/resource/Exchequer_Standards> <http://dbpedia.org/property/author> ?v3 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?decedent WHERE {
  # Step 1: Find Charlie Baker's real name
  ?charlieBaker a dbo:AustralianFootballer ;
                foaf:name ""Charlie Baker"" .
  
  ?charlieBaker dbo:birthName ?realName .

  # Step 2: Find the administration region associated with his real name
  ?administrationRegion dbo:officeHolder ?realName ;
                        a dbo:AdministrativeRegion .

  # Step 3: Identify the author of ""Exchequer Standards""
  ?author dbo:title ""Exchequer Standards"" ;
          dbo:occupation dbo:Politician, dbo:OfficeHolder .

  # Step 4: Find the parent of this author
  ?parent dbo:child ?author .

  # Step 5: Identify the professional American in Politician
  ?americanPolitician a dbo:American ;
                     dbo:profession dbo:Politician ;
                     dbo:residence ?settlementResidence .
  
  ?settlementResidence a dbo:Settlement .

  # Step 6: Determine the person decedent at both locations
  ?decedent dbo:placeOfDeath ?settlementResidence ;
            dbo:placeOfDeath ?administrationRegion .
}
```",8,13,9,3,3,3,3,71,0,0,2,0,0.0,0
645,68,test,"Give me the military force of the force, that is an event and a military conflict and a societal event, of the native, that is a president and a politician, of Restoration (Spain) and leader of the office, that is a government agency and an organisation, of Camilo Menéndez Tolosa and commander in the force of the commander in Siege of Madrid.",SELECT ?result WHERE { ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/GovernmentAgency>. ?v7 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?result <http://dbpedia.org/ontology/battle> ?v7 . <http://dbpedia.org/resource/Siege_of_Madrid> <http://dbpedia.org/ontology/commander> ?v5 . ?v4 <http://dbpedia.org/ontology/commander> ?v5 . ?v7 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v3 <http://dbpedia.org/ontology/leader> ?result . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v7 <http://dbpedia.org/ontology/commander> ?v0 . ?v4 <http://dbpedia.org/ontology/commander> ?result . ?v0 <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Restoration_(Spain)> . <http://dbpedia.org/resource/Camilo_Menéndez_Tolosa> <http://dbpedia.org/property/office> ?v3 . ?v7 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/President>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?militaryForce WHERE {
  # Identify the Restoration period in Spain
  ?restorationEvent a dbo:Event ;
                    dbo:place dbr:Spain ;
                    rdfs:label ?eventLabel .
  
  FILTER(CONTAINS(LCASE(?eventLabel), ""restoration spain"")) .

  # Find the president during this period
  ?president dbo:nationality dbr:Spain ;
            dbo:officeHolderOf ?governmentAgency ;
            a dbo:Politician ;
            dbo:positionHeld ?position .
  
  FILTER(CONTAINS(LCASE(?position), ""president"")) .

  # Identify Camilo Menéndez Tolosa's role
  ?camiloMenendezTolosa dbo:leaderOf ?governmentAgency ;
                        dbo:commanderIn ?siegeEvent ;
                        a dbo:MilitaryPerson .

  # Find the Siege of Madrid event
  ?siegeEvent a dbo:MilitaryConflict ;
              rdfs:label ?siegeLabel .
  
  FILTER(CONTAINS(LCASE(?siegeLabel), ""siege of madrid"")) .

  # Determine the military force involved in the siege
  ?militaryForce dbo:commander ?camiloMenendezTolosa ;
                dbo:participatedIn ?siegeEvent ;
                a dbo:MilitaryUnit .
}
```",8,15,9,3,3,3,3,71,0,0,1,0,0.0,0
465,70,test,"Give me the successor of the child of Alfonso I d'Este and spouse of the child, that is a royalty, of the parent of Elizabeth of Austria (1526–1545) and successor of the child, that is a royalty, of the parent of Charles Orlando, Dauphin of France.","SELECT ?result WHERE { ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v0 <http://dbpedia.org/ontology/child> ?v7 . ?v4 <http://dbpedia.org/ontology/successor> ?result . <http://dbpedia.org/resource/Charles_Orlando,_Dauphin_of_France> <http://dbpedia.org/ontology/parent> ?v1 . ?v4 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Alfonso_I_d'Este> . ?v0 <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Elizabeth_of_Austria_(1526–1545)> . ?v1 <http://dbpedia.org/ontology/child> ?v3 . ?v7 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v3 <http://dbpedia.org/ontology/successor> ?result . ?result <http://dbpedia.org/ontology/spouse> ?v7 . }","```sparql
# Find Alfonso I d'Este's child (Lucrezia Borgia)
SELECT ?child WHERE {
  wd:Q12345 wdt:P40 ?child .
}

# Find Lucrezia Borgia's spouse who is royalty (Alfonso II d'Este)
SELECT ?spouse WHERE {
  ?child wdt:P26 ?spouse .
  ?spouse wdt:P31 wd:Q215627 .
}

# Find Elizabeth of Austria's parent (Ferdinand I, Holy Roman Emperor)
SELECT ?parent WHERE {
  wd:Q12346 wdt:P22 ?parent .
}

# Find the child who is royalty and their successor (Maximilian II -> Rudolf II)
SELECT ?child ?successor WHERE {
  ?parent wdt:P40 ?child .
  ?child wdt:P31 wd:Q215627 .
  ?child wdt:P36 wd:Q12347 .
  ?child wdt:P57 ?successor .
}

# Find Charles Orlando's parent (Henry II of France)
SELECT ?parent WHERE {
  wd:Q12348 wdt:P22 ?parent .
}

# Find the child who is royalty and their successor (Francis II -> Charles IX)
SELECT ?child ?successor WHERE {
  ?parent wdt:P40 ?child .
  ?child wdt:P31 wd:Q215627 .
  ?child wdt:P36 wd:Q12349 .
  ?child wdt:P57 ?successor .
}

# Find the successor of Alfonso II d'Este (Ercole II d'Este)
SELECT ?successor WHERE {
  ?spouse wdt:P57 ?successor .
}

# Find the successor of Rudolf II (Matthias)
SELECT ?successor WHERE {
  ?successor2 wdt:P57 ?successor .
}

# Combine to find the final successor
SELECT ?finalSuccessor WHERE {
  ?ercole wdt:P57 ?finalSuccessor .
  ?matthias wdt:P57 ?finalSuccessor .
}
```",8,10,9,3,3,3,3,71,0,0,1,0,0.0,0
965,58,test,"Give me the parent of the child, that is a royalty, of Prince Louis of Battenberg and parent of the person born, that is a noble, as the birth name of George Mountbatten, 2nd Marquess of Milford Haven and spouse of Prince Louis of Battenberg.","SELECT ?result WHERE { ?v0 <http://dbpedia.org/ontology/parent> ?result . ?v5 <http://dbpedia.org/ontology/parent> ?result . ?result <http://dbpedia.org/ontology/spouse> <http://dbpedia.org/resource/Prince_Louis_of_Battenberg> . ?v0 <http://dbpedia.org/property/birthName> ?v4 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Noble>. ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. <http://dbpedia.org/resource/George_Mountbatten,_2nd_Marquess_of_Milford_Haven> <http://dbpedia.org/property/birthName> ?v4 . ?v5 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Prince_Louis_of_Battenberg> . }","```sparql
SELECT ?parent WHERE {
  # Step 1: Identify Prince Louis of Battenberg's child who is royalty
  ?child dbo:spouse ?royalParent .
  ?child dbp:father dbr:Prince_Louis_of_Battenberg .
  ?child dbo:title ?royaltyTitle .

  # Step 2: Find the parent of this royal child
  ?parent dbo:child ?child .

  # Step 3: Identify George Mountbatten, 2nd Marquess of Milford Haven's birth name
  dbr:George_Mountbatten,_2nd_Marquess_of_Milford_Haven dbp:birthName ?birthName .

  # Step 4: Determine who is noble and born with that name
  ?noblePerson dbp:birthName ?birthName .
  ?noblePerson dbo:title ?nobilityTitle .

  # Step 5: Find the spouse of Prince Louis of Battenberg
  dbr:Princess_Victoria_of_Hesse_and_by_Rhine dbo:spouse dbr:Prince_Louis_of_Battenberg .

  # Step 6: Determine the parent of this noble person
  ?nobleParent dbo:child ?noblePerson .
  
  FILTER(?royalParent = dbr:Princess_Victoria_of_Hesse_and_by_Rhine)
}
```",6,8,7,3,3,3,3,71,0,0,1,0,0.0,0
47,59,test,"Give me the office of the awardee of the award, that is an award, of Mantu Ghosh and office of the administration of the commander, that is a politician, in Operation Green Hunt.",SELECT ?result WHERE { ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Award>. <http://dbpedia.org/resource/Mantu_Ghosh> <http://dbpedia.org/property/awards> ?v0 . ?v5 <http://dbpedia.org/property/awards> ?v0 . <http://dbpedia.org/resource/Operation_Green_Hunt> <http://dbpedia.org/ontology/commander> ?v3 . ?v5 <http://dbpedia.org/property/office> ?result . ?v2 <http://dbpedia.org/property/governor> ?v3 . ?v2 <http://dbpedia.org/property/office> ?result . },"```sparql
# Query for Mantu Ghosh's office at the time of an award
SELECT ?award ?office WHERE {
  ?person foaf:name ""Mantu Ghosh""@en .
  ?person dbo:awarded ?award .
  OPTIONAL { ?award dbo:recipient ?person . }
  OPTIONAL { ?person dbo:positionHeld ?office . }
}

# Query for the politician's office in Operation Green Hunt
SELECT ?politician ?operation ?office WHERE {
  ?operation dbo:name ""Operation Green Hunt""@en ;
             dbo:commander ?politician .
  ?politician a dbo:Politician ;
              foaf:name ?name .
  OPTIONAL { ?politician dbo:positionHeld ?office . }
}
```",6,8,7,3,2,3,3,71,0,0,1,0,0.0,0
791,58,test,"Give me the father of the child, that is a royalty, of the father, that is a royalty and an office holder, of Emperor Antoku and spouse of Taira no Tokuko and predecessor of the child of Emperor Takakura.",SELECT ?result WHERE { ?v2 <http://dbpedia.org/property/father> ?result . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. <http://dbpedia.org/resource/Emperor_Antoku> <http://dbpedia.org/property/father> ?v1 . ?v2 <http://dbpedia.org/property/father> ?v1 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?result <http://dbpedia.org/ontology/spouse> <http://dbpedia.org/resource/Taira_no_Tokuko> . ?v5 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Emperor_Takakura> . ?result <http://dbpedia.org/ontology/successor> ?v5 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?father ?spouse ?predecessor WHERE {
  # Find Taira no Kiyomori as the father of Emperor Antoku
  dbr:Emperor_Antoku dbo:father dbr:Taira_no_Kiyomori .
  
  # Identify Taira no Tokuko as his spouse
  dbr:Taira_no_Kiyomori dbo:spouse dbr:Taira_no_Tokuko .

  # Determine the predecessor of Emperor Antoku in terms of official succession
  OPTIONAL {
    ?emperor dbo:successor dbr:Emperor_Antoku .
    ?emperor rdfs:label ?predecessorLabel .
    FILTER (LANG(?predecessorLabel) = ""en"")
  }
}
```",6,9,7,3,3,3,3,71,0,0,1,0,0.0,0
232,8,test,Give me the artistic movement of Ella Cheever Thayer and claim to fame of the person born as Emily Katherine Jacques.,"SELECT ?result WHERE { <http://dbpedia.org/resource/Ella_Cheever_Thayer> <http://dbpedia.org/ontology/movement> ?result . ?v2 <http://dbpedia.org/property/birthName> ""Emily Katherine Jacques""@en . ?v2 <http://dbpedia.org/ontology/knownFor> ?result . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?artisticMovement ?claimToFame WHERE {
  # Query for Ella Cheever Thayer's artistic movement
  OPTIONAL { 
    dbr:Ella_Cheever_Thayer dbo:associatedMusicalArtist ?artist .
    ?artist dbo:movement ?artisticMovement .
  }

  # Query for Emily Katherine Jacques' claim to fame
  OPTIONAL {
    dbr:Mistinguett dbo:occupation ?claimToFame .
  }
}
```",3,3,4,2,2,2,2,9,0,0,1,0,0.0,0
507,61,test,"Give me the professional in the profession of the person born on 1966-02-18 and director of the movie, that is a movie and a work, with the person born on 1919-06-17.","SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/birthDate> ""1966-02-18""^^<http://www.w3.org/2001/XMLSchema#date> . ?result <http://dbpedia.org/property/occupation> ?v3 . ?v1 <http://dbpedia.org/property/occupation> ?v3 . ?v5 <http://dbpedia.org/property/starring> ?v0 . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?v5 <http://dbpedia.org/ontology/director> ?result . ?v0 <http://dbpedia.org/ontology/birthDate> ""1919-06-17""^^<http://www.w3.org/2001/XMLSchema#date> . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Film>. }","```sparql
# Step 1: Find the person born on February 18, 1966
SELECT ?person1966 WHERE {
    ?person1966 dbo:birthday ""1966-02-18""^^xsd:date .
}

# Step 2: Find the person born on June 17, 1919
SELECT ?person1919 WHERE {
    ?person1919 dbo:birthday ""1919-06-17""^^xsd:date .
}

# Step 3: Find movies directed by the person from step 1
SELECT DISTINCT ?movie WHERE {
    ?director foaf:name ?name1966 .
    ?director dbo:birthDate ""1966-02-18""^^xsd:date .
    ?director dbo:directed ?movie .
    
    # Join with the result of Step 2 to find common movies
    ?person1919 dbo:actedIn ?movie .
}

# Step 4: Get the profession of the director from step 1
SELECT DISTINCT ?profession WHERE {
    ?director foaf:name ?name1966 .
    ?director dbo:birthDate ""1966-02-18""^^xsd:date .
    ?director rdf:type dbo:FilmDirector .
    ?director dbo:occupation ?profession .
}
```",6,8,7,3,2,3,3,71,0,0,2,0,0.0,0
365,19,test,"Give me the spouse of the native, that is a politician, of the reference to Полтавская губерния and person born as the birth name of Symon Petliura.","SELECT ?result WHERE { ?v4 <http://dbpedia.org/ontology/spouse> ?result . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v4 <http://dbpedia.org/ontology/birthPlace> ?v0 . <http://dbpedia.org/resource/Symon_Petliura> <http://dbpedia.org/property/birthName> ?v2 . ?result <http://dbpedia.org/property/birthName> ?v2 . ?v0 <http://xmlns.com/foaf/0.1/name> ""Полтавская губерния""@en . }","```sparql
SELECT ?spouse WHERE {
  # Find Symon Petliura's birthplace
  wd:Q123456 wdt:P19 ?birthPlace .
  
  # Check if the birthplace is Poltava Governorate
  FILTER(?birthPlace = wd:Q12345) .

  # Find politicians from Poltava Governorate
  ?politician wdt:P19 ?birthPlace ;
             wdt:P106 wd:Q82955 . # P106 is ""occupation"", Q82955 is ""politician""

  # Get the spouse of the politician
  ?politician wdt:P26 ?spouse .
}
```

Note: `wd:Q123456` should be replaced with the actual DBpedia/Wikidata ID for Symon Petliura, and `wd:Q12345` should be replaced with the ID for Poltava Governorate. The occupation property P106 is used to filter politicians.",5,6,6,3,2,3,2,20,0,0,1,0,0.0,0
47,66,test,"Give me the office of the awardee of Banga Bhushan and office of the awardee of the entity, that is an award, in India and office of the administration of Jagdeep Dhankhar.",SELECT ?result WHERE { ?v6 <http://dbpedia.org/property/office> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Award>. ?v2 <http://dbpedia.org/property/office> ?result . ?v1 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/India> . ?v3 <http://dbpedia.org/property/office> ?result . ?v3 <http://dbpedia.org/property/governor> <http://dbpedia.org/resource/Jagdeep_Dhankhar> . ?v2 <http://dbpedia.org/property/awards> ?v1 . ?v6 <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/Banga_Bhushan> . },"```sparql
# Query for Banga Bhushan awardee's office
SELECT ?awardee ?office WHERE {
  ?award dcterms:isPartOf <http://dbpedia.org/resource/Category:Banga_Bhushan_Awards> .
  ?award dbo:recipient ?person .
  ?person foaf:name ?awardee .
  OPTIONAL { ?person dbo:position ?office }
} LIMIT 1

# Query for Bharat Ratna awardee's office
SELECT ?awardee ?office WHERE {
  ?award dcterms:isPartOf <http://dbpedia.org/resource/Category:Bharat_Ratna> .
  ?award dbo:recipient ?person .
  ?person foaf:name ?awardee .
  OPTIONAL { ?person dbo:position ?office }
} LIMIT 1

# Query for Jagdeep Dhankhar's office
SELECT ?name ?office WHERE {
  <http://dbpedia.org/resource/Jagdeep_Dhankhar> foaf:name ?name ;
                                                     dbo:position ?office .
}
```",7,8,8,3,3,3,3,71,0,0,1,0,0.0,0
987,59,test,"Give me the birth place of the band, that is an artist and a musical artist, of the band, that is an artist, of Dado Polumenta and birth place of the actor of the show, that is a film, with Emir Hadžihafizbegović.",SELECT ?result WHERE { ?v0 <http://dbpedia.org/property/starring> ?v4 . <http://dbpedia.org/resource/Dado_Polumenta> <http://dbpedia.org/ontology/associatedMusicalArtist> ?v3 . ?v0 <http://dbpedia.org/ontology/starring> <http://dbpedia.org/resource/Emir_Hadžihafizbegović> . ?v1 <http://dbpedia.org/ontology/birthPlace> ?result . ?v3 <http://dbpedia.org/ontology/associatedMusicalArtist> ?v1 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Film>. ?v4 <http://dbpedia.org/ontology/birthPlace> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. },"```sparql
# Query for the birth place of Dado Prljaca
SELECT ?birthPlace WHERE {
  wd:Q123456 a dbo:MusicalArtist ; # Replace Q123456 with the actual DBpedia ID for Dado Prljaca
             dbo:birthPlace ?birthPlace .
}

# Query for an actor from ""Welcome to Sarajevo"" and their birth place
SELECT ?actor ?actorBirthPlace WHERE {
  wd:Q789012 dbo:starring ?actor . # Replace Q789012 with the actual DBpedia ID for ""Welcome to Sarajevo""
  ?actor a dbo:Actor ;
         dbo:birthPlace ?actorBirthPlace .
}
```

Note: You will need to replace `wd:Q123456` and `wd:Q789012` with the correct DBpedia resource identifiers for Dado Prljaca and ""Welcome to Sarajevo,"" respectively. These can be found by searching DBpedia or using a SPARQL endpoint to query for these entities.",6,10,7,3,2,3,3,71,0,0,4,0,0.0,0
582,64,test,"Give me the reference to the residence of the reference, that is a scientist, to Hirotaka Sugawara and figure known as the nickname of the team, that is an organisation, of Hajime Moriyasu and player in Kazuaki Nagasawa.","SELECT ?result WHERE { ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Scientist>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?v3 <http://dbpedia.org/property/residence> ?v2 . ?v0 <http://dbpedia.org/ontology/coach> <http://dbpedia.org/resource/Hajime_Moriyasu> . ?v3 <http://xmlns.com/foaf/0.1/name> ""Hirotaka Sugawara""@en . <http://dbpedia.org/resource/Kazuaki_Nagasawa> <http://dbpedia.org/ontology/team> ?result . ?result <http://dbpedia.org/property/nickname> ?v1 . ?result <http://xmlns.com/foaf/0.1/name> ?v2 . ?v0 <http://dbpedia.org/property/nickname> ?v1 . }","```sparql
# Query for Hirotaka Sugawara's Residence
SELECT ?residence WHERE {
  ?person dbo:occupation dbr:Scientist .
  ?person foaf:name ""Hirotaka Sugawara""@en .
  ?person dbo:residenceLocation ?location .
  ?location rdfs:label ?residence .
  FILTER(LANG(?residence) = 'en')
}

UNION

# Query for Hajime Moriyasu's Team Nickname
SELECT ?teamNickname WHERE {
  ?person dbo:occupation dbr:Association_football_manager .
  ?person foaf:name ""Hajime Moriyasu""@en .
  ?person dbo:currentTeam ?team .
  ?team rdfs:label ?teamName .
  ?team dbo:nickname ?teamNickname .
  FILTER(LANG(?teamName) = 'en' && LANG(?teamNickname) = 'en')
}

UNION

# Query for Kazuaki Nagasawa's Team
SELECT ?club WHERE {
  ?person dbo:occupation dbr:Association_football_player .
  ?person foaf:name ""Kazuaki Nagasawa""@en .
  ?person dbo:currentTeam ?team .
  ?team rdfs:label ?club .
  FILTER(LANG(?club) = 'en')
}
```",7,9,8,3,3,3,3,71,0,0,1,0,0.0,0
459,24,test,"Give me the governor of the administration, that is a politician, of Brad Henry and person born as the birth name of Kevin Stitt.",SELECT ?result WHERE { ?result <http://dbpedia.org/property/birthName> ?v1 . <http://dbpedia.org/resource/Kevin_Stitt> <http://dbpedia.org/property/birthName> ?v1 . ?v2 <http://dbpedia.org/property/governor> ?result . ?v2 <http://dbpedia.org/property/governor> <http://dbpedia.org/resource/Brad_Henry> . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. },"```sparql
SELECT ?governor WHERE {
  ?person1 foaf:name ""Brad Henry""@en .
  ?person1 dbo:officeHolder ?office .
  ?office dbo:position dbr:Governor_of_Oklahoma .
  
  ?person2 foaf:name ""Kevin Stitt""@en .
  ?person2 dbo:birthName ""Kevin Stitt""@en .

  ?office dbo:successor ?nextOffice .
  ?nextOffice dbo:officeHolder ?governor .
}
```",4,5,5,2,2,2,3,28,0,0,1,0,0.0,0
645,70,test,"Give me the military force of the force, that is an event and a military conflict and a societal event, of the native, that is a president and a politician, of Restoration (Spain) and commander in the force of Carlos Asensio Cabanillas and leader of the office, that is a government agency and an organisation, of the native of Restoration (Spain).",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/battle> ?v7 . ?v1 <http://dbpedia.org/property/office> ?v3 . ?v7 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?v3 <http://dbpedia.org/ontology/leader> ?result . ?v4 <http://dbpedia.org/ontology/commander> ?result . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/GovernmentAgency>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?v7 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v7 <http://dbpedia.org/ontology/commander> ?v0 . ?v7 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?v1 <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Restoration_(Spain)> . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/President>. ?v4 <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Carlos_Asensio_Cabanillas> . ?v0 <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Restoration_(Spain)> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?militaryForce WHERE {
  ?event a dbo:MilitaryConflict ;
        dbo:participatingMilitaryUnit ?militaryForce .
  
  ?militaryForce dbo:commander ?commander .
  ?commander foaf:name ""Carlos Asensio Cabanillas"" .

  ?president a dbo:President ;
            dbo:nationality dbr:Spain ;
            dbo:officeHolderOf ?governmentAgency ;
            foaf:name ?name .

  ?governmentAgency a dbo:GovernmentAgency ;
                    dbo:leader ?president .
  
  FILTER(?event = ?societalEvent)
}
```",8,15,9,3,3,3,3,71,0,0,2,0,0.0,0
987,70,test,"Give me the entity in the region, that is a country, of the time zone, that is a sports event, in Canicosa de la Sierra and birth place of the actor of the show, that is a film, with Emir Hadžihafizbegović and birth place of the band, that is an artist and a musical artist, of Šako Polumenta.",SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Film>. ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsEvent>. <http://dbpedia.org/resource/Šako_Polumenta> <http://dbpedia.org/ontology/associatedMusicalArtist> ?v3 . ?v0 <http://dbpedia.org/property/timeZone> ?v5 . ?v1 <http://dbpedia.org/ontology/starring> <http://dbpedia.org/resource/Emir_Hadžihafizbegović> . <http://dbpedia.org/resource/Canicosa_de_la_Sierra> <http://dbpedia.org/ontology/timeZone> ?v5 . ?v6 <http://dbpedia.org/ontology/birthPlace> ?result . ?v1 <http://dbpedia.org/property/starring> ?v6 . ?result <http://dbpedia.org/ontology/country> ?v0 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?v3 <http://dbpedia.org/ontology/birthPlace> ?result . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?country WHERE {
  # Step 1: Find the time zone of Canicosa de la Sierra
  ?canicosa dbo:timeZone ?timezone .
  
  # Step 2: Find a sports event in that time zone
  ?event dbo:location ?location .
  ?location dbo:timeZone ?timezone .
  ?event a dbo:SportsEvent .

  # Step 3: Determine the country of the sports event
  ?location dbo:country ?country .

  # Step 4: Find Emir Hadžihafizbegović's birthplace and film/show
  ?emir dbo:birthPlace ?birthPlaceEmir .
  ?film dbo:actor ?emir .
  
  # Check if the birthplace of Emir is the same as the country
  FILTER (?birthPlaceEmir = ?country)

  # Step 5: Find Šako Polumenta's band and its birthplace
  ?sako dbo:band ?band .
  ?band dbo:birthPlace ?birthPlaceBand .

  # Check if the birthplace of the band is the same as the country
  FILTER (?birthPlaceBand = ?country)
  
  # Ensure the entity is a country
  ?country a dbo:Country .
}
```",8,13,9,3,3,3,3,71,0,0,1,0,0.0,0
917,58,test,"Give me the child of the father of the child, that is a royalty, of Kamehameha III and child of the father of Keʻelikōlani and parent of Albert Kamehameha.",SELECT ?result WHERE { ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. <http://dbpedia.org/resource/Kamehameha_III> <http://dbpedia.org/ontology/child> ?v4 . ?result <http://dbpedia.org/property/father> ?v0 . ?v4 <http://dbpedia.org/property/father> ?v0 . <http://dbpedia.org/resource/Keʻelikōlani> <http://dbpedia.org/property/father> ?v5 . ?result <http://dbpedia.org/ontology/parent> ?v5 . ?result <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Albert_Kamehameha> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?person WHERE {
  # Kamehameha III's children who are royalty
  ?child dbo:parent dbr:Kamehameha_III ;
         a dbo:Monarch .

  # Keʻelikōlani's father and his child who is royalty
  ?keelikoalanisFather dbo:spouse ?motherOfKeelikoalani .
  ?motherOfKeelikoalani dbo:child dbr:Keʻelikōlani ;
                       a dbo:Monarch .

  # Albert Kamehameha's parent
  ?parent dbo:child dbr:Albert_Kamehameha .

  # Find the person who matches all criteria
  FILTER (?child = ?person && ?keelikoalanisFather = ?personParent && ?parent = ?person)
}
```",6,7,7,3,3,3,3,71,0,0,1,0,0.0,0
36,28,test,"Give me the actor of the claim to fame, that is a film, of Lepacious Bose and person born in the birth year of Deanne Bray and person born as the birth name of Ayo Makun.",SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Film>. ?result <http://dbpedia.org/ontology/birthYear> ?v3 . <http://dbpedia.org/resource/Ayo_Makun> <http://dbpedia.org/property/birthName> ?v5 . ?result <http://dbpedia.org/property/birthName> ?v5 . <http://dbpedia.org/resource/Lepacious_Bose> <http://dbpedia.org/ontology/knownFor> ?v1 . <http://dbpedia.org/resource/Deanne_Bray> <http://dbpedia.org/ontology/birthYear> ?v3 . ?v1 <http://dbpedia.org/ontology/starring> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT DISTINCT ?actor WHERE {
  # Step 1: Find Lepacious Bose's film
  ?film dbo:starring dbr:Lepacious_Bose .
  
  # Step 2: Get Deanne Bray's birth year
  ?deanne dbp:birthdayYear ?birthYearDeanne .

  # Step 3: Get Ayo Makun's birth name
  ?ayo dbp:birthName ?birthNameAyo .

  # Step 4: Find people born in the same year as Deanne Bray and with the same birth name as Ayo Makun
  ?person1 dbo:birthdayYear ?birthYearDeanne .
  ?person2 dbp:birthName ?birthNameAyo .

  # Step 5: Identify actor common to all these criteria
  ?film dbo:starring ?actor .
  
  FILTER (?actor = ?person1 && ?actor = ?person2)
}
```",6,7,7,2,3,2,3,28,0,0,1,0,0.0,0
606,20,test,"Give me the birthplace of the alumnus of the figure known, that is a university and a sports league and an educational institution, as Penn Quakers and figure known as the nickname of the figure known, that is a settlement, as Barb City.","SELECT ?result WHERE { ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsLeague>. ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/University>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. ?v1 <http://dbpedia.org/property/nickname> ?v2 . ?v4 <http://dbpedia.org/property/nickname> <http://dbpedia.org/resource/Penn_Quakers> . ?v5 <http://dbpedia.org/ontology/birthPlace> ?result . ?v5 <http://dbpedia.org/ontology/almaMater> ?v4 . ?result <http://dbpedia.org/property/nickname> ?v2 . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/EducationalInstitution>. ?v1 <http://dbpedia.org/property/nickname> ""Barb City""@en . }","```sparql
SELECT ?alumnus ?birthPlace WHERE {
  ?alumnus dbo:almaMater dbr:University_of_Pennsylvania .
  ?alumnus dbo:birthPlace ?birthPlace .
  ?alumnus foaf:name ?name .
  FILTER(CONTAINS(LCASE(?name), ""andy warhol"") || CONTAINS(LCASE(?name), ""pittsburgh""))
}
```",6,10,7,3,2,3,2,20,0,0,1,0,0.0,0
47,67,test,"Give me the office of the awardee of the entity, that is an award, in India and office of the awardee of the award, that is an award, of Mantu Ghosh and office of Suvendu Adhikari.",SELECT ?result WHERE { ?v3 <http://dbpedia.org/property/awards> ?v1 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Award>. ?v6 <http://dbpedia.org/property/office> ?result . ?v1 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/India> . <http://dbpedia.org/resource/Suvendu_Adhikari> <http://dbpedia.org/property/office> ?result . ?v3 <http://dbpedia.org/property/office> ?result . ?v6 <http://dbpedia.org/property/awards> ?v0 . <http://dbpedia.org/resource/Mantu_Ghosh> <http://dbpedia.org/property/awards> ?v0 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Award>. },"```sparql
# Query 1: Office of the awardee of an award in India
SELECT ?award ?office WHERE {
  ?award dbo:country dbr:India .
  ?award dbo:recipient ?person .
  ?person dbo:occupation ?office .
}

UNION

# Query 2: Office of the awardee of Mantu Ghosh's award
SELECT ?award ?office WHERE {
  ?award dbo:recipient dbr:Mantu_Ghosh .
  ?award dbo:recipient ?person .
  ?person dbo:occupation ?office .
}

UNION

# Query 3: Office of Suvendu Adhikari
SELECT ?office WHERE {
  dbr:Suvendu_Adhikari dbo:occupation ?office .
}
```",7,9,8,3,3,3,3,71,0,0,1,0,0.0,0
573,65,test,"Give me the person decedent at the residence, that is a settlement, of the professional, that is American, in Politician and person decedent at the administration, that is a region, of Charlie Baker and parent of the author, that is a politician and an office holder, of Exchequer Standards.","SELECT ?result WHERE { <http://dbpedia.org/resource/Exchequer_Standards> <http://dbpedia.org/property/author> ?v3 . ?v3 <http://dbpedia.org/ontology/parent> ?result . ?result <http://dbpedia.org/ontology/deathPlace> ?v4 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v0 <http://dbpedia.org/property/residence> ?v6 . ?v4 <http://dbpedia.org/property/governor> ""Charlie Baker""@en . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v0 <http://dbpedia.org/property/occupation> ""Politician""@en . ?v0 <http://dbpedia.org/ontology/nationality> <http://dbpedia.org/resource/United_States>. ?v6 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. ?result <http://dbpedia.org/ontology/deathPlace> ?v6 . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Region>. }","```sparql
# Step 1: Find Charlie Baker's administrative region
SELECT ?administration WHERE {
    ?charlieBaker dbo:officeHolderOf ?administration .
    ?charlieBaker foaf:name ""Charlie Baker"" .
}

# Step 2: Identify the author of ""Exchequer Standards""
SELECT ?author WHERE {
    ?book dbo:author ?author ;
          rdfs:label ""Exchequer Standards""@en .
    ?author rdf:type dbo:Politician ;
            dbo:officeHolderOf ?office .
}

# Step 3: Find the parent of this author who is an American professional in politics
SELECT ?parent WHERE {
    ?author dbo:child ?parent .
    ?parent foaf:nationality <http://dbpedia.org/resource/United_States> ;
            rdf:type dbo:Politician .
}

# Step 4: Identify decedent at the residence/settlement of this professional
SELECT DISTINCT ?decedent WHERE {
    ?professional dbo:residence ?settlement .
    ?settlement rdf:type dbo:Settlement .
    ?decedent dbo:placeOfDeath ?settlement .
    ?parent dbo:profession ?professional .
}

# Step 5: Identify decedent at the administration/region of Charlie Baker
SELECT DISTINCT ?decedent WHERE {
    ?administration dbo:placeOfBirth ?decedent .
}
```",7,12,8,3,3,3,3,71,0,0,2,0,0.0,0
965,61,test,"Give me the parent of the child, that is a royalty, of the person born, that is a politician, on 1854-05-24 and parent of the person born, that is a noble, as the birth name of George Mountbatten, 2nd Marquess of Milford Haven.","SELECT ?result WHERE { <http://dbpedia.org/resource/George_Mountbatten,_2nd_Marquess_of_Milford_Haven> <http://dbpedia.org/property/birthName> ?v3 . ?v0 <http://dbpedia.org/property/birthName> ?v3 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Noble>. ?v1 <http://dbpedia.org/ontology/birthDate> ""1854-05-24""^^<http://www.w3.org/2001/XMLSchema#date> . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v4 <http://dbpedia.org/ontology/parent> ?result . ?v4 <http://dbpedia.org/property/father> ?v1 . ?v0 <http://dbpedia.org/ontology/parent> ?result . }","```sparql
# Step 1: Find the politician born on 1854-05-24
SELECT ?politician WHERE {
    ?politician dbo:birthday ""1854-05-24""^^xsd:date .
    ?politician rdf:type dbo:Politician .
}

# Step 2: Find the parent of this politician
SELECT ?parent WHERE {
    ?politician dbo:parent ?parent .
    FILTER(?politician = <POLITICIAN_URI>) # Replace with actual URI from step 1
}

# Step 3: Find a child of that parent who is royalty
SELECT ?royalChild WHERE {
    ?parent dbo:child ?royalChild .
    ?royalChild rdf:type dbo:RoyalFamilyMember .
}

# Step 4: Find the birth name of George Mountbatten, 2nd Marquess of Milford Haven
SELECT ?birthName WHERE {
    ?person foaf:name ""George Mountbatten, 2nd Marquess of Milford Haven""@en .
    ?person dbo:birthName ?birthName .
}

# Step 5: Find the parent of the person with that birth name
SELECT ?parentOfBirthNamePerson WHERE {
    ?person dbo:birthName ?birthName .
    FILTER(?birthName = <BIRTH_NAME_URI>) # Replace with actual URI from step 4
    ?person dbo:parent ?parentOfBirthNamePerson .
}

# Step 6: Find the parent of the royal child identified in step 3
SELECT ?finalParent WHERE {
    ?royalChild dbo:parent ?finalParent .
    FILTER(?royalChild = <ROYAL_CHILD_URI>) # Replace with actual URI from step 3
}
```",6,9,7,3,2,3,3,71,0,0,2,0,0.0,0
465,63,test,"Give me the successor of the child, that is a royalty, of Anne of Brittany and successor of the child of the parent of Ercole II d'Este, Duke of Ferrara and spouse of the child, that is a royalty, of Ferdinand I, Holy Roman Emperor.","SELECT ?result WHERE { ?v3 <http://dbpedia.org/property/father> ?v4 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. <http://dbpedia.org/resource/Ferdinand_I,_Holy_Roman_Emperor> <http://dbpedia.org/ontology/child> ?v6 . ?result <http://dbpedia.org/ontology/spouse> ?v6 . ?v3 <http://dbpedia.org/ontology/successor> ?result . ?v6 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. <http://dbpedia.org/resource/Anne_of_Brittany> <http://dbpedia.org/ontology/child> ?v2 . <http://dbpedia.org/resource/Ercole_II_d'Este,_Duke_of_Ferrara> <http://dbpedia.org/ontology/parent> ?v4 . ?v2 <http://dbpedia.org/ontology/successor> ?result . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?successor WHERE {
  # Anne of Brittany's children who are royalty
  VALUES ?anneChild { 
    dbr:Claude_of_France 
    dbr:Renée_of_France 
    dbr:Francis_I_of_France 
    dbr:Charles_VII_of_France 
    dbr:Charlotte_of_Valois 
    dbr:Louis_XII_of_France 
  }
  
  # Successor of Anne's child
  ?anneChild dbo:successor ?successor1 .

  # Ercole II d'Este's parent
  dbr:Alfonso_I_d'_Este dbo:child dbr:Ercole_II_d'_Este .
  
  # Child of Alfonso I d'Este
  dbr:Alfonso_I_d'_Este dbo:child ?alFonsoChild .

  # Successor of Alfonso's child
  ?alFonsoChild dbo:successor ?successor2 .

  # Ferdinand I's spouse and their children
  dbr:Ferdinand_I,_Holy_Roman_Emperor dbo:spouse dbr:Anna_Jagiellonica .
  
  # Royal child of Anna Jagiellonica
  ?annaChild dbo:parent dbr:Anna_Jagiellonica ;
             a dbo:Monarch .

  # Successor of Anna's royal child
  ?annaChild dbo:successor ?successor3 .

  # Final successor combining all relationships
  FILTER(?successor1 = ?successor2 && ?successor2 = ?successor3)
}
```",7,9,8,3,3,3,3,71,0,0,1,0,0.0,0
791,71,test,"Give me the spouse of the spouse, that is a royalty, of the reference to Emperor Takakura and predecessor of the child of the child, that is an office holder and a royalty, of Emperor Go-Shirakawa and father of the child, that is a royalty, of the father, that is a royalty and an office holder, of Emperor Antoku.","SELECT ?result WHERE { ?v8 <http://dbpedia.org/property/father> ?result . <http://dbpedia.org/resource/Emperor_Antoku> <http://dbpedia.org/property/father> ?v7 . ?v7 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v1 <http://xmlns.com/foaf/0.1/name> ""Emperor Takakura""@en . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?result <http://dbpedia.org/ontology/spouse> ?v2 . ?v5 <http://dbpedia.org/property/father> ?v4 . ?result <http://dbpedia.org/ontology/successor> ?v5 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v4 <http://dbpedia.org/ontology/parent> <http://dbpedia.org/resource/Emperor_Go-Shirakawa> . ?v2 <http://dbpedia.org/ontology/spouse> ?v1 . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v8 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v8 <http://dbpedia.org/property/father> ?v7 . ?v7 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. }","```sparql
# Step 1: Find Emperor Takakura's spouse
SELECT ?spouse WHERE {
  wd:Q123456 wdt:P26 ?spouse .
}

# Step 2: Find the spouse of that person who is a royalty (Fujiwara no Michinaga)
SELECT ?royalSpouse WHERE {
  ?spouse wdt:P26 ?royalSpouse .
  ?royalSpouse wdt:P31 wd:Q1234567 . # Assuming Q1234567 represents the class for royalty
}

# Step 3: Find Emperor Go-Shirakawa's child who is an office holder and a royalty (Emperor Nijō)
SELECT ?child WHERE {
  wd:Q234567 wdt:P40 ?child .
  ?child wdt:P31/wdt:P279* wd:Q1234567 . # Royalty
  ?child wdt:P39 ?office . # Office holder
}

# Step 4: Find Emperor Nijō's child who is a royalty (Emperor Rokujo)
SELECT ?grandChild WHERE {
  ?child wdt:P40 ?grandChild .
  ?grandChild wdt:P31/wdt:P279* wd:Q1234567 . # Royalty
}

# Step 5: Find the father of Emperor Rokujo (Fujiwara no Yorimichi)
SELECT ?father WHERE {
  ?grandChild wdt:P22 ?father .
  ?father wdt:P31/wdt:P279* wd:Q1234567 . # Royalty
  ?father wdt:P39 ?office . # Office holder
}

# Step 6: Find Emperor Antoku's father (Taira no Kiyomori)
SELECT ?antokuFather WHERE {
  wd:Q345678 wdt:P22 ?antokuFather .
  ?antokuFather wdt:P31/wdt:P279* wd:Q1234567 . # Royalty
  ?antokuFather wdt:P39 ?office . # Office holder
}

# Final Step: Find the spouse of Fujiwara no Michinaga who is a royalty (Fujiwara no Rinshi)
SELECT ?finalSpouse WHERE {
  wd:Q567890 wdt:P26 ?finalSpouse .
  ?finalSpouse wdt:P31/wdt:P279* wd:Q1234567 . # Royalty
}
```

Note: The actual DBpedia IDs (e.g., Q123456, Q234567) need to be replaced with the correct identifiers for Emperor Takakura, Fujiwara no Michinaga, Emperor Go-Shirakawa, etc. This query assumes these entities are correctly identified in DBpedia.",9,15,10,3,3,3,3,71,0,0,1,0,0.0,0
98,25,test,Give me the birth place of the person born as Paolo Elito M. Ballesteros IV and entity in Philippines and region of the time zone of Lopez Jaena.,"SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/timeZone> ?v4 . ?v1 <http://dbpedia.org/property/birthName> ""Paolo Elito M. Ballesteros IV""@en . ?result <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Philippines> . <http://dbpedia.org/resource/Lopez_Jaena> <http://dbpedia.org/ontology/timeZone> ?v4 . ?v1 <http://dbpedia.org/ontology/birthPlace> ?result . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?birthPlace ?region WHERE {
  # Query for birth place of Paolo Elito M. Ballesteros IV
  OPTIONAL { 
    dbr:Paolo_Elito_M._Ballesteros_IV dbo:birthPlace ?birthPlace .
  }
  
  # Confirming the region for Lopez and Jaena time zone
  FILTER (
    EXISTS {
      dbr:Lopez dbo:location ?lozLocation .
      dbr:Jaena dbo:location ?jnaLocation .
      ?lozLocation dbo:timeZone ?tzLopez .
      ?jnaLocation dbo:timeZone ?tzJaena .
      FILTER (?tzLopez = ?tzJaena)
    }
  )
  
  # Assuming the region is Zamboanga Peninsula for both
  OPTIONAL {
    dbr:Lopez dbo:locationInRegion dbr:Zamboanga_Peninsula .
    BIND(dbr:Zamboanga_Peninsula AS ?region)
  }
}
```",5,5,6,2,3,2,3,28,0,0,2,0,0.0,0
839,67,test,"Give me the band of the member of the band, that is a band and a group, of Peter Schorowsky and band of Kevin Russell (musician) and band of the band, that is a musical artist, of the professional in Musician.","SELECT ?result WHERE { ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. <http://dbpedia.org/resource/Kevin_Russell_(musician)> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Group>. <http://dbpedia.org/resource/Peter_Schorowsky> <http://dbpedia.org/ontology/associatedMusicalArtist> ?v0 . ?v1 <http://dbpedia.org/ontology/associatedMusicalArtist> ?v3 . ?result <http://dbpedia.org/ontology/bandMember> ?v6 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Band>. ?v1 <http://dbpedia.org/property/occupation> ""Musician""@en . ?v0 <http://dbpedia.org/ontology/bandMember> ?v6 . ?result <http://dbpedia.org/ontology/bandMember> ?v3 . }","```sparql
# Step 1: Find bands associated with Peter Schorowsky that are both ""band"" and ""group""
SELECT ?band WHERE {
    ?band dbo:member dbr:Peter_Schorowsky .
    ?band rdf:type dbp:Band .
    ?band rdf:type dbp:Group .
}

# Step 2: Find bands associated with Kevin Russell
SELECT ?band WHERE {
    ?band dbo:member dbr:Kevin_Russell_(musician) .
    ?band rdf:type dbp:Band .
}

# Step 3: For each band found in steps 1 and 2, find another band that is a musical artist
SELECT DISTINCT ?final_band WHERE {
    { ?band1 ?p ?member . FILTER(?band1 IN ({bands_from_step_1})). }
    UNION
    { ?band2 ?p ?member . FILTER(?band2 IN ({bands_from_step_2})). }

    ?member dbo:associatedBand ?intermediate_band .
    ?intermediate_band rdf:type dbp:Band .
    ?intermediate_band dbo:musicalArtist ?final_band .
}

# Step 4: Identify a professional musician and their band
SELECT ?band WHERE {
    ?musician rdf:type dbp:Musician .
    ?musician dbo:associatedBand ?band .
}
```

Note: Replace `{bands_from_step_1}` and `{bands_from_step_2}` with the actual results from steps 1 and 2.",7,10,8,3,3,3,3,71,0,0,1,0,0.0,0
826,64,test,"Give me the successor of Louis II, Grand Duke of Hesse and spouse of the child of the father of Anna Magdalena Appel and predecessor of the parent of the child of Louis IV, Grand Duke of Hesse.","SELECT ?result WHERE { <http://dbpedia.org/resource/Anna_Magdalena_Appel> <http://dbpedia.org/property/father> ?v3 . ?v0 <http://dbpedia.org/ontology/parent> <http://dbpedia.org/resource/Louis_IV,_Grand_Duke_of_Hesse> . <http://dbpedia.org/resource/Louis_II,_Grand_Duke_of_Hesse> <http://dbpedia.org/ontology/successor> ?result . ?v0 <http://dbpedia.org/ontology/parent> ?v1 . ?v2 <http://dbpedia.org/property/father> ?v3 . ?result <http://dbpedia.org/ontology/successor> ?v1 . ?v2 <http://dbpedia.org/ontology/spouse> ?result . }","```sparql
SELECT ?successor WHERE {
  wd:Q1234567 wdt:P136 ?parent1 . # Louis II, Grand Duke of Hesse
  ?parent1 wdt:P57 ?child1 .     # Child of Louis II (Louis III)
  ?child1 wdt:P31 wd:Q1234568 .  # Louis III is a human

  wd:Q8765432 wdt:P22 ?spouse .  # Johann Jacob Bach
  ?spouse wdt:P25 ?child2 .      # Child of Johann Jacob Bach (Anna Magdalena Bach)
  ?child2 wdt:P26 ?husband .     # Spouse of Anna Magdalena Bach (Johann Sebastian Bach)

  wd:Q1111111 wdt:P136 ?parent3 . # Louis IV, Grand Duke of Hesse
  ?parent3 wdt:P40 ?child3 .      # Child of Louis IV (Princess Alice)
  ?child3 wdt:P31 wd:Q1234569 .   # Princess Alice is a human

  ?parent3 wdt:P22 ?spouse2 .     # Parent of Princess Alice
  ?spouse2 wdt:P136 ?predecessor .# Predecessor of Louis IV (Ludwig III, Elector Palatine)

  FILTER(?child1 = ?successor)
}
```

Note: The placeholders `wd:Q1234567`, `wd:Q1234568`, `wd:Q8765432`, `wd:Q1111111`, and `wd:Q1234569` should be replaced with the actual DBpedia identifiers for Louis II, Grand Duke of Hesse, Louis III, Grand Duke of Hesse, Johann Jacob Bach, Louis IV, Grand Duke of Hesse, and Princess Alice of Hesse and by Rhine respectively.",7,7,8,3,3,3,3,71,0,0,1,0,0.0,0
216,58,test,"Give me the player in Igor Bišćan and team of the person born, that is a sports manager and a soccer manager and a soccer player, on the death of Pavel Vezhinov and player in the coach, that is a soccer player and a sports manager and a soccer manager, of Bosnia and Herzegovina national under-18 football team.",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/coach> ?v2 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsManager>. ?v5 <http://dbpedia.org/ontology/team> ?result . <http://dbpedia.org/resource/Igor_Bišćan> <http://dbpedia.org/ontology/team> ?result . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsManager>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerManager>. ?v2 <http://dbpedia.org/ontology/birthDate> ?v1 . <http://dbpedia.org/resource/Bosnia_and_Herzegovina_national_under-18_football_team> <http://dbpedia.org/ontology/coach> ?v5 . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerManager>. <http://dbpedia.org/resource/Pavel_Vezhinov> <http://dbpedia.org/ontology/deathDate> ?v1 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerPlayer>. ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerPlayer>. },"```sparql
# Step 1: Get Igor Bišćan's team
SELECT ?team WHERE {
  dbpedia:Igor_Bišćan dbo:playsFor ?team .
}

# Step 2: Find person born in the same place as the team, who is a sports manager, soccer manager, and player
SELECT DISTINCT ?person WHERE {
  ?team dbo:location ?location .
  ?person dbo:birthPlace ?location ;
          rdf:type dbpedia:SoccerManager ;
          rdf:type dbpedia:SportsManager ;
          rdf:type dbpedia:SoccerPlayer .
}

# Step 3: Get Pavel Vezhinov's death date
SELECT ?deathDate WHERE {
  dbpedia:Pavel_Vezhinov dbo:dateOfDeath ?deathDate .
}

# Step 4: Find the coach of Bosnia and Herzegovina national under-18 football team who is also a soccer player, sports manager, and soccer manager
SELECT DISTINCT ?coach WHERE {
  dbpedia:Bosnia_and_Herzegovina_national_under-18_football_team dbo:headCoach ?coach .
  ?coach rdf:type dbpedia:SoccerPlayer ;
         rdf:type dbpedia:SportsManager ;
         rdf:type dbpedia:SoccerManager .
}

# Step 5: Identify a player in that coach's team
SELECT DISTINCT ?player WHERE {
  ?team dbo:headCoach ?coach .
  ?team dbo:member ?player .
}
```",6,12,7,3,3,3,3,71,0,0,1,0,0.0,0
773,56,test,"Give me the parent of the child, that is a royalty, of the father, that is an office holder and a royalty, of Carloman of Bavaria and spouse of the father of Charles the Fat and parent of Carloman of Bavaria.",SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v1 <http://dbpedia.org/property/father> ?v0 . <http://dbpedia.org/resource/Carloman_of_Bavaria> <http://dbpedia.org/property/father> ?v0 . ?v1 <http://dbpedia.org/ontology/parent> ?result . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?result <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Carloman_of_Bavaria> . <http://dbpedia.org/resource/Charles_the_Fat> <http://dbpedia.org/property/father> ?v2 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v2 <http://dbpedia.org/ontology/spouse> ?result . },"```sparql
SELECT DISTINCT ?parent WHERE {
  # Carloman of Bavaria
  wd:Q123456 rdfs:label ""Carloman of Bavaria""@en.
  
  # Father of Carloman of Bavaria who is an office holder and royalty
  ?father wdt:P22 wd:Q123456; 
          wdt:P39 ?officeHolder;
          wdt:P31/wdt:P279* wd:Q5. 

  # Spouse of the father (mother of Charles the Fat)
  ?spouse wdt:P26 ?father.
  
  # Father of Charles the Fat
  ?charlesFat rdfs:label ""Charles the Fat""@en.
  ?spouse wdt:P22 ?charlesFat.

  # Child that is royalty from this marriage
  ?child wdt:P25 ?spouse;
         wdt:P31/wdt:P279* wd:Q5. 

  # Parent of this royal child
  ?parent wdt:P25 ?child.
}
```",6,9,7,3,3,3,3,71,0,0,1,0,0.0,0
124,69,test,"Give me the military force of the war, that is an event and a military conflict and a societal event, of Frank Rhodes (British Army officer) and commander in the war, that is a societal event and a military conflict, of the reference, that is Australian and an organisation and a military unit, to 'A' Battery, Royal Australian Artillery and military force of the force, that is a societal event and a military conflict, of the person born on 1850-06-24.","SELECT ?result WHERE { ?v4 <http://dbpedia.org/ontology/battle> ?v3 . ?result <http://dbpedia.org/ontology/battle> ?v7 . ?v7 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?v3 <http://dbpedia.org/ontology/commander> ?result . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?v4 <http://xmlns.com/foaf/0.1/name> ""'A' Battery, Royal Australian Artillery""@en . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryUnit>. ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?v7 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. <http://dbpedia.org/resource/Frank_Rhodes_(British_Army_officer)> <http://dbpedia.org/ontology/battle> ?v7 . ?v1 <http://dbpedia.org/ontology/birthDate> ""1850-06-24""^^<http://www.w3.org/2001/XMLSchema#date> . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v4 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Australia>. ?result <http://dbpedia.org/ontology/battle> ?v2 . ?v2 <http://dbpedia.org/ontology/commander> ?v1 . ?v7 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?militaryForce ?personName WHERE {
  # Find the war Frank Rhodes commanded
  ?frankRhodes a dbo:MilitaryPerson ;
               foaf:name ""Frank Rhodes"" ;
               dbo:commanderOf ?war .
  
  # Ensure the war is both a societal event and a military conflict
  ?war a dbo:SocietalEvent, dbo:MilitaryConflict .

  # Find the military force involved in that war
  ?war dbo:militaryForce ?militaryForce .

  # Identify 'A' Battery, Royal Australian Artillery as part of this context
  ?battery dbr:A_Battery,_Royal_Australian_Artillery ;
           dbo:partOf ?militaryForce .

  # Find the person born on 1850-06-24 and their associated military force
  ?person a dbo:MilitaryPerson ;
          dbo:dateOfBirth ""1850-06-24""^^xsd:date ;
          dbo:militaryForce ?force .
  
  # Ensure this force is related to the societal event and military conflict
  ?force dbo:partOf ?war .

  # Return the military force and the person's name
  OPTIONAL { ?person foaf:name ?personName }
}
```",8,18,9,3,3,3,3,71,0,0,9,0,0.0,0
715,60,test,"Give me the commander in the force, that is a military conflict, of the native of Morocco and leader of the office, that is a government agency and an organisation, of the reference to Carlos Franco Iribarnegaray.","SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/GovernmentAgency>. ?v0 <http://xmlns.com/foaf/0.1/name> ""Carlos Franco Iribarnegaray""@en . ?v0 <http://dbpedia.org/property/office> ?v1 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?v1 <http://dbpedia.org/ontology/leader> ?result . ?v3 <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Morocco> . ?v2 <http://dbpedia.org/ontology/commander> ?result . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v2 <http://dbpedia.org/ontology/commander> ?v3 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?commander ?conflict WHERE {
  # Find Carlos Franco Iribarnegaray and the office he led
  ?person rdfs:label ""Carlos Franco Iribarnegaray""@en .
  ?office dbo:head ?person ;
          a dbo:GovernmentAgency, dbo:Organization .

  # Find military conflicts involving this office
  ?conflict dbo:participatingOrganisation ?office ;
            a dbo:MilitaryConflict .

  # Find the commander in these forces
  ?commander dbo:commanded ?force .
  ?force dbo:participatedIn ?conflict .

  # Check if the commander is native to Morocco
  ?commander dbo:nationality dbr:Morocco .
}
```",6,9,7,3,2,3,3,71,0,0,1,0,0.0,0
433,59,test,"Give me the associated musical artist of the person born, that is a musical artist and an artist, as the persona of Paul Chambers and associated musical artist of the associated musical artist, that is an artist and a musical artist, of the associated musical artist, that is a musical artist and an artist, of Ornette Coleman.",SELECT ?result WHERE { ?v2 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v2 <http://dbpedia.org/property/birthName> ?v3 . <http://dbpedia.org/resource/Paul_Chambers> <http://xmlns.com/foaf/0.1/givenName> ?v3 . ?v5 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. <http://dbpedia.org/resource/Ornette_Coleman> <http://dbpedia.org/ontology/associatedMusicalArtist> ?v0 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?v0 <http://dbpedia.org/ontology/associatedMusicalArtist> ?v5 . },"```sparql
# Step 1: Find an artist associated with Paul Chambers who is both a musical artist and an artist
SELECT ?artist WHERE {
  ?paulChambers dbo:birthName ""Paul Laurence Dunbar Chambers Jr."" .
  ?paulChambers dbo:associatedMusicalArtist ?artist .
  ?artist rdf:type dbo:Musician ;
          dbo:occupation dbr:Artist .
}

# Step 2: Find an artist associated with Ornette Coleman who is both a musical artist and an artist
SELECT ?artist WHERE {
  ?ornetteColeman dbo:birthName ""Ornette Coleman"" .
  ?ornetteColeman dbo:associatedMusicalArtist ?artist .
  ?artist rdf:type dbo:Musician ;
          dbo:occupation dbr:Artist .
}

# Step 3: Find the associated musical artist of the artist from step 2
SELECT ?finalArtist WHERE {
  # Assuming ?artistFromStep1 and ?artistFromStep2 are obtained from steps 1 and 2
  ?artistFromStep2 dbo:associatedMusicalArtist ?finalArtist .
  ?finalArtist rdf:type dbo:Musician ;
               dbo:occupation dbr:Artist .
}
```",6,12,7,3,2,3,3,71,0,0,10,0,0.0,0
791,62,test,"Give me the spouse of the spouse, that is a royalty, of the reference to Emperor Takakura and father of Emperor Go-Toba and predecessor of the child of the child, that is an office holder and a royalty, of Emperor Go-Shirakawa.","SELECT ?result WHERE { ?v3 <http://dbpedia.org/ontology/spouse> ?v4 . <http://dbpedia.org/resource/Emperor_Go-Toba> <http://dbpedia.org/property/father> ?result . ?v4 <http://xmlns.com/foaf/0.1/name> ""Emperor Takakura""@en . ?v6 <http://dbpedia.org/property/father> ?v0 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?result <http://dbpedia.org/ontology/successor> ?v6 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?result <http://dbpedia.org/ontology/spouse> ?v3 . ?v0 <http://dbpedia.org/ontology/parent> <http://dbpedia.org/resource/Emperor_Go-Shirakawa> . }","```sparql
SELECT ?spouseOfSpouse WHERE {
  # Step 1: Identify Emperor Takakura
  ?emperorTakakura dbo:wikiPageRedirects db:Q123456 . # Replace Q123456 with the actual DBpedia ID for Emperor Takakura

  # Step 2: Find his spouse
  ?spouseOfEmperorTakakura dbo:spouse ?emperorTakakura .

  # Step 3: Spouse's spouse (that is a royalty) is Emperor Takakura himself
  ?emperorTakakura rdf:type dbo:Monarch .

  # Step 4: Father of Emperor Go-Toba
  ?fatherOfGoToba dbo:child db:Q654321 . # Replace Q654321 with the actual DBpedia ID for Emperor Go-Toba

  # Step 5: Predecessor of the child of the child of Emperor Go-Shirakawa
  ?emperorGoShirakawa dbo:wikiPageRedirects db:Q789012 . # Replace Q789012 with the actual DBpedia ID for Emperor Go-Shirakawa
  ?childOfGoShirakawa dbo:child ?emperorGoShirakawa .
  ?grandChild dbo:child ?childOfGoShirakawa .
  ?predecessor dbo:successor ?grandChild .

  # Final step: Find the spouse of the predecessor
  ?spouseOfPredecessor dbo:spouse ?predecessor .
  
  BIND(?emperorTakakura AS ?spouseOfSpouse)
}
```",7,10,8,3,3,3,3,71,0,0,1,0,0.0,0
166,20,test,"Give me the entity in the territory administered, that is a country, from the reference to Madrid and resting place of the military force of the force, that is an event and a societal event and a military conflict, of Manuel Hedilla.","SELECT ?result WHERE { ?v2 <http://dbpedia.org/ontology/restingPlace> ?result . ?v4 <http://xmlns.com/foaf/0.1/name> ""Madrid""@en . ?v2 <http://dbpedia.org/ontology/battle> ?v1 . ?v1 <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Manuel_Hedilla> . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. ?v5 <http://dbpedia.org/ontology/capital> ?v4 . ?result <http://dbpedia.org/ontology/country> ?v5 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?entity WHERE {
  ?event dbo:type dbr:Military_conflict .
  ?event dbo:location dbr:Spain .
  ?event dbo:relatedEvent dbr:Spanish_Civil_War .
  ?person dbo:birthPlace dbr:Madrid .
  ?person foaf:name ""Manuel Hedilla"" .
  ?person dbo:associatedWith ?event .
}
```",6,10,7,3,2,3,2,20,0,0,4,0,0.0,0
917,66,test,"Give me the parent of the child, that is a royalty, of Kamehameha IV and child of the father of the child, that is a royalty, of Kamehameha III and child of the father of Keʻelikōlani.",SELECT ?result WHERE { <http://dbpedia.org/resource/Kamehameha_III> <http://dbpedia.org/ontology/child> ?v5 . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. <http://dbpedia.org/resource/Keʻelikōlani> <http://dbpedia.org/property/father> ?v6 . ?result <http://dbpedia.org/property/father> ?v0 . ?result <http://dbpedia.org/ontology/parent> ?v6 . ?result <http://dbpedia.org/ontology/child> ?v3 . ?v5 <http://dbpedia.org/property/father> ?v0 . ?v3 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Kamehameha_IV> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?parent WHERE {
  # Kamehameha IV's child who is royalty
  ?child1 dbo:spouse ?kamehamehaIV .
  ?kamehamehaIV dbr:Kamehameha_IV .

  # Kamehameha III's child who is royalty and their father
  ?child2 dbo:parent ?fatherOfChild2 .
  ?fatherOfChild2 dbo:spouse ?kamehamehaIII .
  ?kamehamehaIII dbr:Kamehameha_III .

  # Keʻelikōlani's father
  ?keelikolanisFather dbo:child dbr:Ke_elikolani .

  # Common parent of the two children and father of Keʻelikōlani's father
  ?parent dbo:child ?child1 .
  ?parent dbo:child ?child2 .
  ?parent dbo:child ?keelikolanisFather .

}
```",7,9,8,3,3,3,3,71,0,0,1,0,0.0,0
508,20,test,"Give me the birthplace of the commander, that is Saudi, in the war, that is a military conflict and a societal event, of Hu Yukun and birthplace of the commander, that is a politician, in the war, that is a military conflict and a societal event and an event, of Hayao Tada.",SELECT ?result WHERE { ?v5 <http://dbpedia.org/ontology/birthPlace> ?result . ?v5 <http://dbpedia.org/ontology/nationality> <http://dbpedia.org/resource/Saudi_Arabia>. ?v2 <http://dbpedia.org/ontology/birthPlace> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. <http://dbpedia.org/resource/Hayao_Tada> <http://dbpedia.org/ontology/battle> ?v1 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v1 <http://dbpedia.org/ontology/commander> ?v2 . ?v4 <http://dbpedia.org/ontology/commander> ?v5 . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. <http://dbpedia.org/resource/Hu_Yukun> <http://dbpedia.org/ontology/battle> ?v4 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. },"```sparql
# Query for the commander in the war involving Hu Yukun
SELECT ?commanderBirthPlace WHERE {
  ?war dbo:wikiPageDisambiguates ""Hu_Yukun"" .
  ?war dbo:commander ?commander .
  ?commander rdf:type dbo:MilitaryPerson .
  ?commander dbo:nationality dbr:Saudi_Arabia .
  ?commander dbo:birthPlace ?birthPlace .
  BIND(STR(?birthPlace) AS ?commanderBirthPlace)
}

UNION

# Query for the commander in the war involving Hayao Tada
SELECT ?commanderBirthPlace WHERE {
  ?war dbo:wikiPageDisambiguates ""Hayao_Tada"" .
  ?war dbo:commander ?commander .
  ?commander rdf:type dbo:MilitaryPerson .
  ?commander rdf:type dbo:Politician .
  ?commander dbo:birthPlace ?birthPlace .
  BIND(STR(?birthPlace) AS ?commanderBirthPlace)
}
```",6,13,7,3,2,3,2,20,0,0,3,0,0.0,0
158,18,test,"Give me the entity in the award, that is a country, of the reference to Adelbert Cronkhite and party of the successor, that is a prime minister and an office holder and a politician, of André Tardieu.","SELECT ?result WHERE { ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/PrimeMinister>. ?v1 <http://xmlns.com/foaf/0.1/name> ""Adelbert Cronkhite""@en . ?v3 <http://dbpedia.org/ontology/party> ?result . ?result <http://dbpedia.org/ontology/country> ?v2 . ?v1 <http://dbpedia.org/property/awards> ?v2 . <http://dbpedia.org/resource/André_Tardieu> <http://dbpedia.org/ontology/successor> ?v3 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. }","```sparql
# Step 1: Find awards associated with Adelbert Cronkhite
SELECT ?award WHERE {
  ?person dbo:name ""Adelbert Cronkhite""@en .
  ?person dbo:awardsReceived ?award .
}

# Step 2: Find countries linked to those awards
SELECT DISTINCT ?country WHERE {
  ?award dbo:country ?country .
  ?person dbo:name ""Adelbert Cronkhite""@en .
  ?person dbo:awardsReceived ?award .
}

# Step 3: Identify André Tardieu's successors and their political parties
SELECT DISTINCT ?successor ?party WHERE {
  ?tardieu dbo:succeededBy ?successor .
  ?tardieu dbo:name ""André Tardieu""@en .
  ?successor dbo:politicalParty ?party .
  ?successor a dbo:PrimeMinister ;
             a dbo:OfficeHolder ;
             a dbo:Politician .
}

# Step 4: Combine information to find the entity in the award (country) and party of successor
SELECT DISTINCT ?country ?party WHERE {
  # Find country from Cronkhite's awards
  ?award dbo:country ?country .
  ?person dbo:name ""Adelbert Cronkhite""@en .
  ?person dbo:awardsReceived ?award .

  # Find party of Tardieu's successor
  ?tardieu dbo:succeededBy ?successor .
  ?tardieu dbo:name ""André Tardieu""@en .
  ?successor dbo:politicalParty ?party .
  ?successor a dbo:PrimeMinister ;
             a dbo:OfficeHolder ;
             a dbo:Politician .
}
```",5,9,6,3,2,3,2,20,0,0,1,0,0.0,0
926,71,test,"Give me the child of the father, that is a royalty, of the parent, that is a royalty, of Beyhan Sultan (daughter of Mustafa III) and father of the father of the spouse of Neşerek Kadın and successor of the child of the spouse of Şermi Kadın.",SELECT ?result WHERE { ?v1 <http://dbpedia.org/property/father> ?v2 . ?v7 <http://dbpedia.org/property/father> ?v8 . ?v8 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. <http://dbpedia.org/resource/Neşerek_Kadın> <http://dbpedia.org/ontology/spouse> ?v1 . ?v5 <http://dbpedia.org/ontology/successor> ?result . ?v8 <http://dbpedia.org/ontology/child> ?result . <http://dbpedia.org/resource/Beyhan_Sultan_(daughter_of_Mustafa_III)> <http://dbpedia.org/ontology/parent> ?v7 . ?v4 <http://dbpedia.org/ontology/spouse> <http://dbpedia.org/resource/Şermi_Kadın> . ?v5 <http://dbpedia.org/property/father> ?v4 . ?v7 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v2 <http://dbpedia.org/property/father> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?child WHERE {
  # Beyhan Sultan's father (Mustafa III)
  dbr:Beyhan_Sultan dbo:father dbr:Mustafa_III .

  # Neşerek Kadın's spouse and their lineage
  ?nefernekadınSpouse dbo:spouse dbr:Neşerek_Kadın .
  ?nefernekadinsFather dbo:child ?nefernekadınSpouse .
  ?nefernekadinsGrandfather dbo:child ?nefernekadinsFather .

  # Şermi Kadın's spouse and their child
  ?sermikadinSpouse dbo:spouse dbr:Şermi_Kadın .
  ?sermikadincChild dbo:parent ?sermikadinSpouse .
  
  # Successor of Şermi Kadın's spouse's child
  ?successor dbo:succeededBy ?sermikadincChild .

  # Mustafa III's royal children
  dbr:Mustafa_III dbo:child ?mustafasChild .
  FILTER EXISTS { ?mustafasChild a dbo:Monarch . }

  # Find the person who is both:
  # - A father of the father of Neşerek Kadın's spouse
  # - A successor of Şermi Kadın's spouse's child
  ?mustafasChild = ?nefernekadinsGrandfather .
  ?mustafasChild = ?successor .

}
```",9,11,10,3,3,3,3,71,0,0,1,0,0.0,0
715,57,test,"Give me the commander in the force of the mayor, that is an office holder and a politician and a president, of 1933 Spanish general election and commander in Rif War and leader of the office, that is a government agency and an organisation, of Carlos Franco Iribarnegaray.",SELECT ?result WHERE { ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/President>. ?v3 <http://dbpedia.org/ontology/leader> ?result . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/GovernmentAgency>. ?v5 <http://dbpedia.org/ontology/commander> ?v0 . ?v5 <http://dbpedia.org/ontology/commander> ?result . <http://dbpedia.org/resource/Carlos_Franco_Iribarnegaray> <http://dbpedia.org/property/office> ?v3 . <http://dbpedia.org/resource/1933_Spanish_general_election> <http://dbpedia.org/property/leader> ?v0 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. <http://dbpedia.org/resource/Rif_War> <http://dbpedia.org/ontology/commander> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?person WHERE {
  ?person a dbo:Person .
  ?person dbo:birthName ""Miguel Primo de Rivera y Orbaneja""@en .
  
  # Check for roles as commander and politician
  OPTIONAL { ?person dbo:occupation dbr:Military_officer . }
  OPTIONAL { ?person dbo:occupation dbr:Politician . }

  # Check for presidency
  OPTIONAL {
    ?presidency dbo:officeHolder ?person ;
                a dbo:Presidency .
  }

  # Check involvement in the Rif War
  OPTIONAL {
    ?rifWar dbo:commander ?person ;
            a dbo:Military_conflict ;
            rdfs:label ""Rif_War""@en .
  }
  
  # Check leadership of an organization related to Carlos Franco Iribarnegaray
  OPTIONAL {
    ?organization dbo:leader ?person ;
                  a dbo:Government_agency, dbo:Organization ;
                  dbo:relatedTo dbr:Carlos_Franco_Iribarnegaray .
  }

  FILTER (BOUND(?rifWar) && BOUND(?presidency))
}
```",6,11,7,3,3,3,3,71,0,0,1,0,0.0,0
579,18,test,"Give me the native of the residence, that is English and a settlement, of the resident of Scotland and person born as the birth name of Jane Percy, Duchess of Northumberland.","SELECT ?result WHERE { ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. ?v2 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/United_Kingdom>. <http://dbpedia.org/resource/Jane_Percy,_Duchess_of_Northumberland> <http://dbpedia.org/property/birthName> ?v3 . ?result <http://dbpedia.org/property/birthName> ?v3 . ?v1 <http://dbpedia.org/property/residence> ?v2 . ?v1 <http://dbpedia.org/ontology/residence> <http://dbpedia.org/resource/Scotland> . ?result <http://dbpedia.org/ontology/birthPlace> ?v2 . }","```sparql
# Step 1: Find Jane Percy's birth name
SELECT ?birthName WHERE {
  wd:Q123456 wdt:P735 ?birthName .
}

# Assuming we find her birth name is ""X""

# Step 2: Find a person from Scotland with the same birth name
SELECT ?person WHERE {
  ?person wdt:P31 wd:Q5 . # Person
  ?person wdt:P19 wd:Q1454 . # Born in Scotland
  ?person wdt:P735 ?birthName .
  FILTER(?birthName = ""X"") # Replace X with the actual birth name found
}

# Assuming we find a person with QID Y

# Step 3: Find their residence
SELECT ?residence WHERE {
  wd:Y wdt:P551 ?residence . # Resides in
}

# Assuming we find a residence with QID Z

# Step 4: Check if the residence is an English settlement
ASK {
  wd:Z wdt:P17 wd:Q145 . # Located in England
  wd:Z wdt:P31 wd:Q515 . # Settlement
}

# If true, proceed to step 5

# Step 5: Find the native language of the settlement
SELECT ?nativeLanguage WHERE {
  wd:Z wdt:P37 ?nativeLanguage .
}
```",5,7,6,3,2,3,2,20,0,0,1,0,0.0,0
527,19,test,"Give me the actor of the movie, that is a work and English and a television show, with Bernard Bresslaw and author of the work, that is a work and a book, of the host of Hyperland.",SELECT ?result WHERE { ?v2 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/United_Kingdom>. ?v4 <http://dbpedia.org/property/author> ?v0 . <http://dbpedia.org/resource/Hyperland> <http://dbpedia.org/ontology/presenter> ?v0 . ?v4 <http://dbpedia.org/property/author> ?result . ?v2 <http://dbpedia.org/property/starring> ?result . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/TelevisionShow>. ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?v2 <http://dbpedia.org/property/starring> <http://dbpedia.org/resource/Bernard_Bresslaw> . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Book>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. },"```sparql
# Step 1: Find the host of Hyperland
SELECT ?host WHERE {
    ?hyperland dbo:genre dbc:British_television_series .
    ?hyperland dbo:host ?person .
    ?person rdfs:label ""Hyperland""@en .
}

# Step 2: Find books authored by this person
SELECT DISTINCT ?book WHERE {
    ?author foaf:name ?hostName .
    ?author dbo:work ?book .
    ?book rdf:type dbo:Book .
    FILTER(?hostName = ""Host Name from Step 1"")
}

# Step 3: Find a work that is English, features Bernard Bresslaw, and relates to the book
SELECT DISTINCT ?work WHERE {
    ?work dbo:language dbr:English .
    ?work dbo:actor ?bresslaw .
    ?bresslaw rdfs:label ""Bernard Bresslaw""@en .
    ?work dbo:basedOnBook ?book .
}

# Step 4: Find the actor of this work
SELECT DISTINCT ?actor WHERE {
    ?work dbo:actor ?actor .
    FILTER(?work = ""Work from Step 3"")
}
```

Note: Replace `""Host Name from Step 1""` and `""Work from Step 3""` with actual values obtained from executing previous queries.",5,10,6,3,2,3,2,20,0,0,1,0,0.0,0
892,58,test,"Give me the entity in Italy and landmark at elevation of the award of Anna Ishii and entity in the administration, that is Italian and a region and a settlement and an administrative region, of the party, that is a political party and an organisation, of Andrea Cozzolino.",SELECT ?result WHERE { <http://dbpedia.org/resource/Anna_Ishii> <http://dbpedia.org/property/awards> ?v5 . ?v0 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Italy>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/AdministrativeRegion>. ?result <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Italy> . ?result <http://dbpedia.org/ontology/province> ?v0 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Region>. <http://dbpedia.org/resource/Andrea_Cozzolino> <http://dbpedia.org/ontology/party> ?v4 . ?result <http://dbpedia.org/ontology/elevation> ?v5 . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/PoliticalParty>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?v0 <http://dbpedia.org/property/leaderParty> ?v4 . },"```sparql
# Step 1: Find Anna Ishii's award
SELECT ?award WHERE {
    ?person foaf:name ""Anna Ishii""@en .
    ?person dbo:awards ?award .
}

# Assuming we have identified the elevation from the award, let's say it is X meters

# Step 2: Find a landmark in Italy at that elevation
SELECT ?landmark WHERE {
    ?landmark dbo:elevation ?elevation .
    FILTER(?elevation = X) # Replace X with the actual elevation value
    ?landmark dbo:country dbr:Italy .
}

# Step 3: Identify Andrea Cozzolino's political party
SELECT ?party WHERE {
    ?person foaf:name ""Andrea Cozzolino""@en .
    ?person dbo:memberOfParty ?party .
    ?party rdf:type dbo:PoliticalParty .
}

# Step 4: Find the administrative region and settlement associated with the party
SELECT DISTINCT ?region ?settlement WHERE {
    ?party dbo:hasMember ?person .
    ?person dbo:residence ?location .
    ?location a dbo:AdministrativeRegion ;
              dbo:country dbr:Italy ;
              rdfs:label ?regionLabel .
    FILTER(LANG(?regionLabel) = ""it"") # Ensure the label is in Italian
    OPTIONAL {
        ?location dbo:settlement ?settlement .
        ?settlement a dbo:Settlement ;
                    dbo:country dbr:Italy .
    }
}
```",6,12,7,3,3,3,3,71,0,0,2,0,0.0,0
917,64,test,"Give me the child of Kekūanāoʻa and child of the father of the child, that is a royalty, of Kamehameha III and parent of the child, that is a royalty, of the mayor of Hawaiian Kingdom.",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/child> ?v2 . <http://dbpedia.org/resource/Kamehameha_III> <http://dbpedia.org/ontology/child> ?v5 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v2 <http://dbpedia.org/property/father> ?v4 . ?v5 <http://dbpedia.org/property/father> ?v0 . ?result <http://dbpedia.org/ontology/parent> <http://dbpedia.org/resource/Kekūanāoʻa> . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?result <http://dbpedia.org/property/father> ?v0 . <http://dbpedia.org/resource/Hawaiian_Kingdom> <http://dbpedia.org/property/leader> ?v4 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?commonIndividual WHERE {
  # Step 1: Identify Kekūanāoʻa's child who is royalty
  ?childKekuanaoa dbo:parent dbr:Kekūanāoʻa ;
                 a dbo:Monarch .

  # Step 2: Find the grandchild of Kekūanāoʻa who is royalty
  ?grandChildKekuanaoa dbo:parent ?childKekuanaoa ;
                      a dbo:Monarch .

  # Step 3: Identify Kamehameha III's child who is royalty
  ?childKamehamehaIII dbo:parent dbr:Kamehameha_III ;
                     a dbo:Monarch .

  # Step 4: Find the mayor of the Hawaiian Kingdom and their royal child
  ?mayor dbr:Hawaiian_Kingdom dbo:mayorOf ;
                             dbo:child ?royalChildMayor .
  ?royalChildMayor a dbo:Monarch .

  # Step 5: Determine the parent of that royal child
  ?parentRoyalChildMayor dbo:child ?royalChildMayor .

  # Step 6: Find common individual between grandchild of Kekūanāoʻa and parent of royal child of mayor
  VALUES (?commonIndividual) {
    ?grandChildKekuanaoa
    ?parentRoyalChildMayor
  }
}
```",7,9,8,3,3,3,3,71,0,0,2,0,0.0,0
129,25,test,"Give me the associated musical artist of Saba (rapper) and associated musical artist of the actor, that is an organisation, of Dreamville Presents: Revenge and professional in the mayor of 1999 West Dunbartonshire Council election.",SELECT ?result WHERE { <http://dbpedia.org/resource/Dreamville_Presents:_Revenge> <http://dbpedia.org/property/starring> ?v4 . ?result <http://dbpedia.org/property/occupation> ?v3 . <http://dbpedia.org/resource/1999_West_Dunbartonshire_Council_election> <http://dbpedia.org/property/leader> ?v3 . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. <http://dbpedia.org/resource/Saba_(rapper)> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v4 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . },"```sparql
# Query for artists associated with Saba
SELECT ?artist WHERE {
  wd:Q1055982 wdt:P106 wd:Q215380 . # Saba is a musician
  wd:Q1055982 wdt:P527 ?artist .    # Associated acts or collaborators
}

UNION

# Query for artists associated with J. Cole (Dreamville)
SELECT ?artist WHERE {
  wd:Q2390625 wdt:P106 wd:Q215380 . # J. Cole is a musician
  wd:Q2390625 wdt:P527 ?artist .     # Associated acts or collaborators
}
```",5,6,6,2,3,2,3,28,0,0,1,0,0.0,0
892,59,test,Give me the entity in the profession of the true self of Enrico Crolla and landmark at elevation of the award of the member of E-girls.,"SELECT ?result WHERE { ?v3 <http://dbpedia.org/property/occupation> ?v1 . ?v3 <http://xmlns.com/foaf/0.1/givenName> ""Enrico Crolla""@en . ?result <http://dbpedia.org/ontology/elevation> ?v4 . <http://dbpedia.org/resource/E-girls> <http://dbpedia.org/ontology/bandMember> ?v0 . ?v0 <http://dbpedia.org/property/awards> ?v4 . ?result <http://dbpedia.org/ontology/country> ?v1 . }","```sparql
# Query for Enrico Crolla's profession
SELECT ?profession WHERE {
  dbpedia:Enrico_Crolla dbo:occupation ?profession .
}

# Assuming we identify a specific E-girls member and their award, e.g., Ami (award hypothetical)
# Query for the landmark at elevation related to the award
SELECT ?landmark WHERE {
  # Hypothetical example assuming an award with elevation data
  dbpedia:Ami dbo:award ?award .
  ?award dbo:elevation ?elevation .
  ?landmark dbo:elevation ?elevation .
}
```",6,6,7,3,2,3,3,71,0,0,11,0,0.0,0
417,69,test,"Give me the spouse of the parent, that is a royalty, of the child of Knud, Hereditary Prince of Denmark and child of the father of Frederick IX of Denmark and child of the child, that is a royalty, of the parent, that is a royalty, of Alexandrine of Mecklenburg-Schwerin.","SELECT ?result WHERE { ?v4 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Knud,_Hereditary_Prince_of_Denmark> . ?v3 <http://dbpedia.org/ontology/child> ?v4 . ?result <http://dbpedia.org/ontology/parent> ?v2 . ?result <http://dbpedia.org/property/father> ?v7 . ?result <http://dbpedia.org/ontology/spouse> ?v3 . <http://dbpedia.org/resource/Frederick_IX_of_Denmark> <http://dbpedia.org/property/father> ?v7 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. <http://dbpedia.org/resource/Alexandrine_of_Mecklenburg-Schwerin> <http://dbpedia.org/ontology/parent> ?v1 . ?v2 <http://dbpedia.org/property/father> ?v1 . }","```sparql
SELECT ?spouse WHERE {
  # Step 1: Identify Knud, Hereditary Prince of Denmark's child
  ?knudChild dbo:childOf dbr:Knud,_Hereditary_Prince_of_Denmark .

  # Step 2: Find the parent of Frederick IX of Denmark
  ?frederickIXParent dbo:parent dbr:Frederick_IX_of_Denmark .

  # Step 3: Identify a child of this parent who is royalty (Frederick IX)
  ?frederickIX dbo:childOf ?frederickIXParent .
  ?frederickIX rdf:type dbo:Monarch .

  # Step 4: Find the child of Frederick IX who is royalty
  ?margretheII dbo:childOf ?frederickIX .
  ?margretheII rdf:type dbo:Monarch .

  # Step 5: Identify the parent of Alexandrine of Mecklenburg-Schwerin
  ?alexandrineParent dbo:parent dbr:Alexandrine_of_Mecklenburg-Schwerin .

  # Step 6: Find a child of this parent who is royalty (Alexandrine)
  ?alexandrine dbo:childOf ?alexandrineParent .
  ?alexandrine rdf:type dbo:Monarch .

  # Step 7: Identify the spouse of Alexandrine
  ?spouse dbo:spouse ?alexandrine .
  ?spouse rdf:type dbo:Monarch .
}
```",8,11,9,3,3,3,3,71,0,0,1,0,0.0,0
892,62,test,Give me the entity in the profession of the true self of Enrico Crolla and entity in Province of Reggio Emilia and landmark at elevation of the award of the member of E-girls.,"SELECT ?result WHERE { ?v1 <http://dbpedia.org/property/awards> ?v5 . ?result <http://dbpedia.org/ontology/elevation> ?v5 . ?result <http://dbpedia.org/ontology/country> ?v2 . ?v4 <http://dbpedia.org/property/occupation> ?v2 . ?result <http://dbpedia.org/ontology/province> <http://dbpedia.org/resource/Province_of_Reggio_Emilia> . <http://dbpedia.org/resource/E-girls> <http://dbpedia.org/ontology/bandMember> ?v1 . ?v4 <http://xmlns.com/foaf/0.1/givenName> ""Enrico Crolla""@en . }","```sparql
# Query 1: Enrico Crolla's True Self Profession
SELECT ?realName ?profession WHERE {
  ?person foaf:name ""Enrico Crolla""@en .
  ?person dbo:birthName ?realName .
  ?realName dbo:occupation ?profession .
}

# Query 2: Entity in Province of Reggio Emilia
SELECT ?entity WHERE {
  ?entity dbo:location dbr:Province_of_Reggio_Emilia .
}

# Query 3: Landmark at Elevation of Award of a Member of E-girls
SELECT ?landmark WHERE {
  ?member foaf:name ?name .
  FILTER regex(?name, ""E-girls"", ""i"") .
  ?member dbo:award ?award .
  ?award dbo:elevation ?elevation .
  ?landmark dbo:elevation ?elevation .
}
```",7,7,8,3,3,3,3,71,0,0,1,0,0.0,0
791,56,test,"Give me the predecessor of Emperor Antoku and spouse of the spouse, that is a royalty, of Emperor Takakura and father of the child, that is a royalty, of the father, that is a royalty and an office holder, of Emperor Antoku.",SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v1 <http://dbpedia.org/property/father> ?result . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?result <http://dbpedia.org/ontology/successor> <http://dbpedia.org/resource/Emperor_Antoku> . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v2 <http://dbpedia.org/ontology/spouse> <http://dbpedia.org/resource/Emperor_Takakura> . <http://dbpedia.org/resource/Emperor_Antoku> <http://dbpedia.org/property/father> ?v0 . ?result <http://dbpedia.org/ontology/spouse> ?v2 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v1 <http://dbpedia.org/property/father> ?v0 . },"```sparql
SELECT DISTINCT ?predecessor WHERE {
  # Step 1: Find Emperor Antoku's predecessor
  dbpedia:Emperor_Antoku dbo:successionSuccessorOf ?antokuPredecessor .
  
  # Step 2: Find spouse of Emperor Takakura
  dbpedia:Emperor_Takakura dbo:spouse ?takakuraSpouse .

  # Step 3: Ensure the spouse is royalty and find their spouse (also royalty)
  ?takakuraSpouse a dbo:Monarch .
  ?takakuraSpouse dbo:spouse ?royaltySpouse .
  
  # Step 4: Find father of child whose parent is royalty and an office holder
  ?royaltySpouse dbo:child ?child .
  ?child dbo:parent ?officeHolderParent .
  ?officeHolderParent a dbo:Monarch ;
                     dbo:officeHolderOf ?office .

  # Step 5: Link back to Emperor Antoku's father who is royalty and an office holder
  ?antokuPredecessor dbo:successionSuccessorOf dbpedia:Emperor_Antoku .
  ?antokuPredecessor a dbo:Monarch ;
                    dbo:child ?officeHolderParent .

  # Final step: Find the predecessor of Emperor Antoku who matches all conditions
  ?predecessor dbo:successionSuccessorOf ?antokuPredecessor .
}
```",6,10,7,3,3,3,3,71,0,0,1,0,0.0,0
839,57,test,"Give me the band of the band, that is a musical artist, of Charlie Huhn and band of Kevin Russell (musician) and band of the member of the band, that is a band and a group, of Peter Schorowsky.",SELECT ?result WHERE { ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Group>. <http://dbpedia.org/resource/Kevin_Russell_(musician)> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v0 <http://dbpedia.org/ontology/bandMember> ?v5 . <http://dbpedia.org/resource/Peter_Schorowsky> <http://dbpedia.org/ontology/associatedMusicalArtist> ?v0 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Band>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. <http://dbpedia.org/resource/Charlie_Huhn> <http://dbpedia.org/ontology/associatedMusicalArtist> ?v3 . ?result <http://dbpedia.org/ontology/bandMember> ?v3 . ?result <http://dbpedia.org/ontology/bandMember> ?v5 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?commonBand WHERE {
  # Charlie Huhn's bands
  VALUES (?charlieHuhn) { dbr:Charlie_Huhn }
  ?charlieHuhn dbo:musicalArtist ?band1 .

  # Kevin Russell's band
  VALUES (?kevinRussell) { dbr:Kevin_Russell_(musician) }
  ?kevinRussell dbo:band ?band2 .

  # Peter Schorowsky's bands
  VALUES (?peterSchorowsky) { dbr:Peter_Schorowsky }
  ?peterSchorowsky dbo:member ?group .
  ?group a dbo:Band ;
         rdfs:label ?commonBandLabel .

  FILTER (lang(?commonBandLabel) = 'en')

  # Find common band
  VALUES (?band1 ?band2) { ?band1 ?band2 }
  OPTIONAL { ?band1 rdfs:label ?band1Label . FILTER(lang(?band1Label) = 'en') }
  OPTIONAL { ?band2 rdfs:label ?band2Label . FILTER(lang(?band2Label) = 'en') }

  BIND(IRI(CONCAT(""http://dbpedia.org/resource/"", REPLACE(LCASE(?commonBandLabel), "" "", ""_""))) AS ?commonBand)
}
```",6,9,7,3,3,3,3,71,0,0,1,0,0.0,0
865,65,test,"Give me the native of the residence, that is a country, of Ram Jaipal Singh Yadav and father of the child, that is a politician, of the spouse of Syeda Shahar Banu and father of the child of Abu Ahmad Abdul Hafiz.",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/birthPlace> ?v0 . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. <http://dbpedia.org/resource/Ram_Jaipal_Singh_Yadav> <http://dbpedia.org/property/residence> ?v0 . ?v5 <http://dbpedia.org/property/father> ?result . ?v5 <http://dbpedia.org/property/father> ?v2 . <http://dbpedia.org/resource/Syeda_Shahar_Banu> <http://dbpedia.org/ontology/spouse> ?v2 . ?v4 <http://dbpedia.org/property/father> ?result . ?v4 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Abu_Ahmad_Abdul_Hafiz> . },"```sparql
SELECT ?nativeCountry WHERE {
  ?person foaf:name ""Ram Jaipal Singh Yadav"" .
  ?person dbo:residenceLocation ?location .
  ?location geo:hasCoordinate ?coordinate .
  ?location dbo:country ?nativeCountry .

  OPTIONAL { 
    ?spouse foaf:name ""Syeda Shahar Banu""@en .
    ?spouse dbo:spouse ?husband .
    ?husband dbo:child ?politicianChild .
    ?politicianChild rdf:type dbo:Politician .
  }

  OPTIONAL {
    ?father foaf:name ""Abu Ahmad Abdul Hafiz"" .
    ?father dbo:child ?asaduddinOwaisi .
    ?asaduddinOwaisi dbo:parent ?father .
  }
}
```",7,9,8,3,3,3,3,71,0,0,1,0,0.0,0
917,57,test,"Give me the parent of Albert Kamehameha and child of the father of Kamehameha IV and child of the father of the spouse, that is a royalty, of Leleiohoku I.",SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. <http://dbpedia.org/resource/Kamehameha_IV> <http://dbpedia.org/property/father> ?v0 . ?result <http://dbpedia.org/property/father> ?v0 . ?v1 <http://dbpedia.org/ontology/spouse> <http://dbpedia.org/resource/Leleiohoku_I> . ?v1 <http://dbpedia.org/property/father> ?v4 . ?result <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Albert_Kamehameha> . ?result <http://dbpedia.org/ontology/parent> ?v4 . },"```sparql
# Step 1: Find Albert Kamehameha's parent
SELECT ?parent WHERE {
  wd:Q123456 wdt:P22 ?parent .
}

# Step 2: Identify Kamehameha IV's father
SELECT ?father WHERE {
  wd:Q789012 wdt:P22 ?father .
}

# Step 3: Find the child of Kamehameha IV's father
SELECT ?child WHERE {
  ?father wdt:P40 ?child .
  FILTER(?father = <URI_of_Kamehameha_IVs_father>)
}

# Step 4: Identify Leleiohoku I's spouse and their parent
SELECT ?spouse ?parentOfSpouse WHERE {
  wd:Q345678 wdt:P26 ?spouse .
  ?spouse wdt:P22 ?parentOfSpouse .
}

# Step 5: Find the child of the spouse's parent
SELECT ?childOfSpouseParent WHERE {
  ?parentOfSpouse wdt:P40 ?childOfSpouseParent .
  FILTER(?parentOfSpouse = <URI_of_spouse_parent>)
}

# Step 6: Determine royalty among these children
SELECT DISTINCT ?person WHERE {
  VALUES ?list1 { (<URIs_from_step_3>), (<URIs_from_step_5>) }
  ?person wdt:P31 wd:Q11873 .
  FILTER(?person IN ?list1)
}
```

Note: Replace `<URI_of_Kamehameha_IVs_father>`, `<URI_of_spouse_parent>`, and the URIs in `VALUES` with actual URIs obtained from previous queries.",6,7,7,3,3,3,3,71,0,0,1,0,0.0,0
353,9,test,"Give me the entity in the country of Moskovsky City District, Nizhny Novgorod and alma mater of the awardee of Medal of the Order ""For Merit to the Fatherland"".","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/country> ?v3 . ?v1 <http://dbpedia.org/ontology/almaMater> ?result . <http://dbpedia.org/resource/Moskovsky_City_District,_Nizhny_Novgorod> <http://dbpedia.org/ontology/country> ?v3 . ?v1 <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/Medal_of_the_Order_%22For_Merit_to_the_Fatherland%22> . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT DISTINCT ?entityInMoskovsky ?almaMater WHERE {
  # Find entities in Moskovsky City District, Nizhny Novgorod
  ?entityInMoskovsky dbo:location dbr:Moskovsky_City_District,_Nizhny_Novgorod .

  # Find individuals who have received the Medal of the Order ""For Merit to the Fatherland""
  ?person dbp:awards dbr:Medal_of_the_Order_""For_Merit_to_the_Fatherland"" .
  
  # Get the alma mater of these individuals
  ?person dbo:almaMater ?almaMater .

  # Find a connection between the entity in Moskovsky City District and any alma mater
  OPTIONAL { ?entityInMoskovsky dbp:relatedAlmaMater ?almaMater }
}
```",4,4,5,2,2,2,2,9,0,0,5,0,0.0,0
507,62,test,"Give me the director of the movie, that is a movie and a work, with the person born on 1919-06-17 and spouse of the person born as the birth name of Anne V. Coates and professional in Film director, television director.","SELECT ?result WHERE { ?result <http://dbpedia.org/property/occupation> ""Film director, television director""@en . ?v6 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?v0 <http://dbpedia.org/ontology/birthDate> ""1919-06-17""^^<http://www.w3.org/2001/XMLSchema#date> . <http://dbpedia.org/resource/Anne_V._Coates> <http://dbpedia.org/property/birthName> ?v4 . ?v6 <http://dbpedia.org/property/starring> ?v0 . ?v6 <http://dbpedia.org/ontology/director> ?result . ?v3 <http://dbpedia.org/property/birthName> ?v4 . ?result <http://dbpedia.org/ontology/spouse> ?v3 . ?v6 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Film>. }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT ?directorName WHERE {
  # Step 1: Find the person born on 1919-06-17
  ?person dbo:birthday ""1919-06-17""^^xsd:date .
  
  # Step 2: Check if this person is married to Anne V. Coates
  ?person dbo:spouse dbr:Anne_V._Coates .

  # Step 3: Ensure Anne V. Coates' profession includes film and television directing
  dbr:Anne_V._Coates dbo:occupation ?occupation .
  FILTER (
    EXISTS { ?occupation rdfs:label ""film director""@en . }
    && EXISTS { ?occupation rdfs:label ""television director""@en . }
  )

  # Step 4: Identify movies directed by this spouse
  ?movie dbo:director ?person ;
         a dbo:Film .

  # Step 5: Confirm these movies are both works and films
  ?movie a dbo:Work .

  # Step 6: Retrieve the director's name
  ?person foaf:name ?directorName .
}
```",7,9,8,3,3,3,3,71,0,0,1,0,0.0,0
976,61,test,"Give me the office of the person born as the birth name of Naci Bostancı and office of the mayor, that is a politician and an office holder and Turkish, of the reference, that is an organisation and a political party and Turkish, to Millet İttifakı.","SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Turkey>. ?v0 <http://dbpedia.org/property/office> ?result . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v1 <http://dbpedia.org/property/leader> ?v4 . ?v4 <http://dbpedia.org/ontology/nationality> <http://dbpedia.org/resource/Turkey>. ?v4 <http://dbpedia.org/property/office> ?result . <http://dbpedia.org/resource/Naci_Bostancı> <http://dbpedia.org/property/birthName> ?v3 . ?v0 <http://dbpedia.org/property/birthName> ?v3 . ?v1 <http://xmlns.com/foaf/0.1/name> ""Millet İttifakı""@en . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/PoliticalParty>. ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. }","```sparql
# Step 1: Find Naci Bostancı's birth name
SELECT ?birthName WHERE {
  dbpedia-tr:Naci_Bostancı dbo:birthName ?birthName .
}

# Step 2: Find the office held by the person with this birth name
SELECT DISTINCT ?office WHERE {
  ?person dbo:birthName ?birthName .
  ?person dbo:occupation ?office .
  FILTER(?birthName = ""Naci Bostancı""@en) # Replace with actual birth name found in Step 1
}

# Step 3: Identify Millet İttifakı and find associated mayors who are politicians
SELECT DISTINCT ?mayor ?office WHERE {
  dbpedia-tr:Millet_İttifakı dbo:member ?person .
  ?person rdf:type dbo:Politician ;
          dbo:occupation ?office .
  OPTIONAL { ?person dbo:positionHeld ?mayor . }
}
```",6,12,7,3,2,3,3,71,0,0,1,0,0.0,0
926,56,test,"Give me the father of the father of Abdulaziz and child of the father, that is a royalty, of the parent, that is a royalty, of Beyhan Sultan (daughter of Mustafa III) and successor of Mustafa III.",SELECT ?result WHERE { ?v0 <http://dbpedia.org/ontology/child> ?result . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v4 <http://dbpedia.org/property/father> ?v0 . <http://dbpedia.org/resource/Abdulaziz> <http://dbpedia.org/property/father> ?v2 . ?v2 <http://dbpedia.org/property/father> ?result . <http://dbpedia.org/resource/Beyhan_Sultan_(daughter_of_Mustafa_III)> <http://dbpedia.org/ontology/parent> ?v4 . <http://dbpedia.org/resource/Mustafa_III> <http://dbpedia.org/ontology/successor> ?result . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?person WHERE {
  # Abdulaziz's father
  dbr:Abdulaziz_Ibn_Saud dbo:father dbr:Abdul_Rahman_bin_Faisal_Al_Saud .
  
  # Father of Abdulaziz's father
  dbr:Abdul_Rahman_bin_Faisal_Al_Saud dbo:father ?faisalBinTurki .

  # Mustafa III details
  dbr:Beyhan_Sultan dbo:parent dbr:Mustafa_III .
  dbr:Mustafa_III dbo:succeededBy dbr:Abdul_Hamid_I .
  dbr:Abdul_Hamid_I dbo:father dbr:Aḥmed_III .

  # Ahmed III's child who is royalty
  ?person dbo:childOf dbr:Aḥmed_III .
  ?person a dbo:Monarch .
  
  FILTER (?person = dbr:Mustafa_III)
}
```",6,8,7,3,3,3,3,71,0,0,1,0,0.0,0
987,68,test,"Give me the birth place of the band, that is an artist and a musical artist, of the band, that is an artist, of Dado Polumenta and birth place of the actor of the show, that is a film, with Emir Hadžihafizbegović and entity in the region, that is a country, of Central European Time.",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/country> ?v0 . ?v6 <http://dbpedia.org/ontology/birthPlace> ?result . ?v0 <http://dbpedia.org/property/timeZone> <http://dbpedia.org/resource/Central_European_Time> . ?v2 <http://dbpedia.org/ontology/birthPlace> ?result . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Film>. ?v1 <http://dbpedia.org/property/starring> ?v6 . ?v4 <http://dbpedia.org/ontology/associatedMusicalArtist> ?v2 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. <http://dbpedia.org/resource/Dado_Polumenta> <http://dbpedia.org/ontology/associatedMusicalArtist> ?v4 . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. ?v1 <http://dbpedia.org/ontology/starring> <http://dbpedia.org/resource/Emir_Hadžihafizbegović> . },"```sparql
# Step 1: Identify Dado Prljaca and find his birthplace
SELECT ?birthPlace WHERE {
  ?person rdfs:label ""Dado Prljaca""@en .
  ?person dbo:birthPlace ?birthPlace .
  FILTER(LANG(?birthPlace) = 'en')
}

UNION

# Step 2: Identify a film with Emir Hadžihafizbegović and find an actor from that film
SELECT ?actorBirthPlace WHERE {
  ?film dbo:starring ?actor .
  ?film dbo:starring <http://dbpedia.org/resource/Emir_Hadžihafizbegović> .
  ?actor dbo:birthPlace ?actorBirthPlace .
  FILTER(LANG(?actorBirthPlace) = 'en')
}

UNION

# Step 3: Identify a country in the Central European Time region
SELECT ?country WHERE {
  ?region rdfs:label ""Central European Time""@en .
  ?region geo:hasMember ?country .
  ?country rdf:type dbo:Country .
}
```",8,13,9,3,3,3,3,71,0,0,1,0,0.0,0
326,18,test,"Give me the resident of the birthplace, that is a state and British, of the professional in Writer and person decedent at the award, that is a country, of Adelbert Cronkhite.","SELECT ?result WHERE { ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. ?v1 <http://dbpedia.org/property/occupation> ""Writer""@en . ?result <http://dbpedia.org/property/residence> ?v2 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/AdministrativeRegion>. ?result <http://dbpedia.org/ontology/deathPlace> ?v3 . ?v2 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/United_Kingdom>. ?v1 <http://dbpedia.org/ontology/birthPlace> ?v2 . <http://dbpedia.org/resource/Adelbert_Cronkhite> <http://dbpedia.org/property/awards> ?v3 . }","```sparql
# Step 1: Get information about Adelbert Cronkhite
SELECT ?person WHERE {
  ?person foaf:name ""Adelbert Cronkhite""@en .
  ?person dbo:occupation dbo:Writer .
}

# Step 2: Find the country where he received an award
SELECT DISTINCT ?awardCountry WHERE {
  ?person dbo:receivedAward ?award .
  ?award dbo:country ?awardCountry .
}

# Step 3: Determine his place of death (decedent location)
SELECT DISTINCT ?deathPlace WHERE {
  ?person dbo:placeOfBirth ?birthPlace .
  ?person dbo:deathPlace ?deathPlace .
  FILTER regex(?birthPlace, ""United Kingdom"", ""i"") # Ensuring it's a British state
}

# Step 4: Identify the resident of the birthplace state
SELECT DISTINCT ?resident WHERE {
  ?state dbo:country dbr:United_Kingdom .
  ?state foaf:name ?birthPlaceState .
  ?person dbo:placeOfBirth ?birthPlaceState .
  
  # Find a notable resident of that state
  ?resident dbo:residence ?birthPlaceState .
}
```",5,8,6,3,2,3,2,20,0,0,1,0,0.0,0
417,67,test,"Give me the spouse of Princess Caroline-Mathilde of Denmark and child of the father of the leader, that is a royalty, of Colony of Greenland and child of the child, that is a royalty, of the parent, that is a royalty, of Alexandrine of Mecklenburg-Schwerin.",SELECT ?result WHERE { ?v3 <http://dbpedia.org/property/father> ?v1 . <http://dbpedia.org/resource/Colony_of_Greenland> <http://dbpedia.org/property/leader> ?v0 . ?result <http://dbpedia.org/ontology/parent> ?v3 . ?result <http://dbpedia.org/ontology/spouse> <http://dbpedia.org/resource/Princess_Caroline-Mathilde_of_Denmark> . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?result <http://dbpedia.org/property/father> ?v6 . <http://dbpedia.org/resource/Alexandrine_of_Mecklenburg-Schwerin> <http://dbpedia.org/ontology/parent> ?v1 . ?v0 <http://dbpedia.org/property/father> ?v6 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. },"```sparql
# Find the spouse of Princess Caroline-Mathilde of Denmark
SELECT ?spouse WHERE {
  wd:Q123456 wdt:P26 ?spouse .
}

# Find the leader of the Colony of Greenland (historically Danish leaders)
SELECT ?leader WHERE {
  wd:Q789012 wdt:P39 ?leader .
}

# Find the father of the leader
SELECT ?father WHERE {
  ?leader wdt:P22 ?father .
}

# Find a royal child of the leader's father
SELECT ?royalChild WHERE {
  ?father wdt:P40 ?royalChild .
  ?royalChild wdt:P31 wd:Q5 . # Instance of human
  ?royalChild wdt:P21 wd:Q6581097 . # Male or Female (royalty)
}

# Find Alexandrine of Mecklenburg-Schwerin's parent who is royalty
SELECT ?parent WHERE {
  wd:Q345678 wdt:P22 ?parent .
  ?parent wdt:P31 wd:Q5 .
  ?parent wdt:P21 wd:Q6581097 .
}

# Find a royal child of Alexandrine's parent
SELECT ?royalChild2 WHERE {
  ?parent wdt:P40 ?royalChild2 .
  ?royalChild2 wdt:P31 wd:Q5 .
  ?royalChild2 wdt:P21 wd:Q6581097 .
}

# Combine the results to find the spouse of Princess Caroline-Mathilde
SELECT DISTINCT ?spouse WHERE {
  wd:Q123456 wdt:P26 ?spouse .
  ?leader wdt:P39 wd:Q789012 .
  ?leader wdt:P22 ?father .
  ?father wdt:P40 ?royalChild .
  wd:Q345678 wdt:P22 ?parent .
  ?parent wdt:P40 ?royalChild2 .
  FILTER(?spouse = ?royalChild || ?spouse = ?royalChild2)
}
```",7,10,8,3,3,3,3,71,0,0,1,0,0.0,0
170,27,test,Give me the entity in Russia and birth place of the awardee of People's Artist of Russia and domain of the profession of John Scholey.,SELECT ?result WHERE { <http://dbpedia.org/resource/John_Scholey> <http://dbpedia.org/property/occupation> ?v0 . ?result <http://dbpedia.org/ontology/leaderTitle> ?v0 . ?v3 <http://dbpedia.org/ontology/birthPlace> ?result . ?v3 <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/People's_Artist_of_Russia> . ?result <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Russia> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT DISTINCT ?person ?birthPlace ?professionDomain ?entityInRussia
WHERE {
  ?person a dbo:Person ;
          foaf:name ""John Scholey""@en .
  
  OPTIONAL { 
    ?award dbo:recipient ?person ;
           rdfs:label ""People's Artist of Russia""@ru .
  }
  
  OPTIONAL { 
    ?person dbo:birthPlace ?birthPlace .
  }
  
  OPTIONAL {
    ?person dbo:profession ?profession .
    ?profession rdfs:label ?professionDomain .
  }
  
  OPTIONAL {
    ?person dbo:locationOccupied ?entityInRussia ;
            a dbo:City .
  }
}
```",5,5,6,2,3,2,3,28,0,7,3,0.0,0.0,0
456,69,test,"Give me the band of the band, that is a musical artist, of the band of Alan Doyle and professional in the alter ego of The Shadow and spouse of the actor of the movie, that is a work and a television show, with Ross Newton.",SELECT ?result WHERE { ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?v2 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v3 <http://dbpedia.org/ontology/spouse> ?result . ?result <http://dbpedia.org/property/occupation> ?v7 . <http://dbpedia.org/resource/The_Shadow> <http://dbpedia.org/property/alterEgo> ?v7 . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?v1 <http://dbpedia.org/ontology/associatedMusicalArtist> ?v2 . ?v4 <http://dbpedia.org/property/starring> <http://dbpedia.org/resource/Ross_Newton> . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/TelevisionShow>. ?v4 <http://dbpedia.org/property/starring> ?v3 . <http://dbpedia.org/resource/Alan_Doyle> <http://dbpedia.org/ontology/associatedMusicalArtist> ?v1 . },"```sparql
# Step 1: Find Alan Doyle's Band
SELECT ?band WHERE {
  wd:Q123456 wdt:P106 wd:Q33999; # Alan Doyle is a member of Great Big Sea
  wdt:P175 ?band.
}

# Step 2: Identify The Shadow (Christopher Doohan)
SELECT ?doohan WHERE {
  wd:Q789012 wdt:P735 wd:Q345678. # Christopher Doohan has the alter ego ""The Shadow""
}

# Step 3: Find Spouse of Christopher Doohan
SELECT ?spouse WHERE {
  ?doohan wdt:P26 ?spouse.
}

# Step 4: Identify Ross Newton's Movie/TV Show
SELECT ?work WHERE {
  wd:Q987654 wdt:P136 ?work. # Ross Newton has acted in ""The Adventures of Tintin""
}

# Step 5: Find Musical Artist Associated with the Work
SELECT ?artist WHERE {
  ?work wdt:P175 ?artist.
}

# Step 6: Determine Band of Howard Shore (if applicable)
SELECT ?band WHERE {
  wd:Q112233 wdt:P175 ?band. # Howard Shore's band association, if any
}
```",8,11,9,3,3,3,3,71,0,0,1,0,0.0,0
47,62,test,"Give me the office of the administration of the commander, that is a politician, in Operation Green Hunt and office of the awardee of the award, that is an award, of Mantu Ghosh and office of Ajoy Mukherjee.",SELECT ?result WHERE { ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Award>. <http://dbpedia.org/resource/Mantu_Ghosh> <http://dbpedia.org/property/awards> ?v0 . <http://dbpedia.org/resource/Ajoy_Mukherjee> <http://dbpedia.org/property/office> ?result . ?v3 <http://dbpedia.org/property/office> ?result . ?v6 <http://dbpedia.org/property/office> ?result . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v6 <http://dbpedia.org/property/awards> ?v0 . <http://dbpedia.org/resource/Operation_Green_Hunt> <http://dbpedia.org/ontology/commander> ?v4 . ?v3 <http://dbpedia.org/property/governor> ?v4 . },"```sparql
# Query 1: Office of the administration of the commander in Operation Green Hunt
SELECT ?office WHERE {
  ?person dbo:occupation dbr:Politician .
  ?operation dbo:commander ?person .
  FILTER(STR(?operation) = ""Operation_Green_Hunt"") .
  ?person dbo:office ?office .
}

# Query 2: Office of the awardee of Mantu Ghosh's award
SELECT DISTINCT ?award ?recipientOffice WHERE {
  ?award dbo:awardedTo ?recipient .
  ?recipient rdfs:label ?name .
  FILTER(CONTAINS(LCASE(?name), ""mantu ghosh"")) .
  OPTIONAL { ?recipient dbo:office ?recipientOffice . }
}

# Query 3: Office of Ajoy Mukherjee
SELECT ?office WHERE {
  dbr:Ajoy_Mukherjee dbo:office ?office .
}
```",7,9,8,3,3,3,3,71,0,0,1,0,0.0,0
47,71,test,"Give me the office of the awardee of the entity, that is an award, in India and office of the awardee of the award, that is an award, of Mantu Ghosh and office of the administration of the commander, that is a politician, in Operation Green Hunt.",SELECT ?result WHERE { ?v5 <http://dbpedia.org/property/office> ?result . ?v7 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Award>. ?v5 <http://dbpedia.org/property/awards> ?v4 . ?v2 <http://dbpedia.org/property/office> ?result . ?v2 <http://dbpedia.org/property/governor> ?v1 . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Award>. ?v7 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/India> . <http://dbpedia.org/resource/Operation_Green_Hunt> <http://dbpedia.org/ontology/commander> ?v1 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v8 <http://dbpedia.org/property/office> ?result . <http://dbpedia.org/resource/Mantu_Ghosh> <http://dbpedia.org/property/awards> ?v4 . ?v8 <http://dbpedia.org/property/awards> ?v7 . },"```sparql
# Query for office of the awardee of an award in India
SELECT ?award ?office WHERE {
  ?award a dbo:Award ;
        dbo:country dbr:India .
  OPTIONAL { ?recipient dbo:awardedBy ?award ;
                   foaf:currentProject ?project .
    ?project dbo:office ?office }
}

# Query for office of the awardee of Mantu Ghosh's award
SELECT ?award ?office WHERE {
  ?award a dbo:Award ;
        dbo:recipient dbr:Mantu_Ghosh .
  OPTIONAL { ?recipient dbo:awardedBy ?award ;
                   foaf:currentProject ?project .
    ?project dbo:office ?office }
}

# Query for office of the administration of the commander in Operation Green Hunt
SELECT ?politician ?office WHERE {
  ?operation a dbo:MilitaryOperation ;
             dbo:commander ?politician .
  FILTER regex(?operation, ""Green Hunt"", ""i"")
  OPTIONAL { ?politician foaf:currentProject ?project .
    ?project dbo:office ?office }
}
```",9,12,10,3,3,3,3,71,0,0,1,0,0.0,0
124,68,test,"Give me the military force of the force, that is a societal event and a military conflict, of Herbert Kitchener, 1st Earl Kitchener and military force of the war, that is an event and a military conflict and a societal event, of the awardee of British South Africa Company Medal and commander in the war, that is a societal event and a military conflict, of the reference, that is Australian and an organisation and a military unit, to 'A' Battery, Royal Australian Artillery.","SELECT ?result WHERE { ?v5 <http://dbpedia.org/ontology/battle> ?v4 . ?result <http://dbpedia.org/ontology/battle> ?v7 . ?v3 <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Herbert_Kitchener,_1st_Earl_Kitchener> . ?v4 <http://dbpedia.org/ontology/commander> ?result . ?v0 <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/British_South_Africa_Company_Medal> . ?v5 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Australia>. ?v7 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?v0 <http://dbpedia.org/ontology/battle> ?v7 . ?v7 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryUnit>. ?v5 <http://xmlns.com/foaf/0.1/name> ""'A' Battery, Royal Australian Artillery""@en . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v7 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?result <http://dbpedia.org/ontology/battle> ?v3 . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. }","```sparql
SELECT ?militaryForce WHERE {
  ?kitchener dbo:occupation dbr:Military_officer .
  ?kitchener foaf:name ""Herbert Kitchener"" .
  ?boerWar dbo:commander ?kitchener ;
           rdf:type dbo:Military_conflict, dbo:Societal_event .
  
  ?medal dbo:awardedDuring ?boerWar ;
         rdfs:label ""British South Africa Company Medal""@en .
  
  ?awardee dbo:recipientOf ?medal ;
           dbo:commanderInMilitaryConflict ?boerWar .

  ?battery dbo:reference dbr:'A' Battery, Royal Australian Artillery ;
           dbo:militaryUnitType dbr:Military_unit ;
           dbo:nationality dbr:Australia .
  
  ?battery dbo:participatedIn ?boerWar .
}
```",8,18,9,3,3,3,3,71,0,0,9,0,0.0,0
826,63,test,"Give me the predecessor of the parent of Prince Friedrich of Hesse and by Rhine and successor of the child, that is a royalty, of Louis I, Grand Duke of Hesse and spouse of the child of the father of Anna Magdalena Appel.","SELECT ?result WHERE { <http://dbpedia.org/resource/Prince_Friedrich_of_Hesse_and_by_Rhine> <http://dbpedia.org/ontology/parent> ?v2 . <http://dbpedia.org/resource/Louis_I,_Grand_Duke_of_Hesse> <http://dbpedia.org/ontology/child> ?v6 . ?v3 <http://dbpedia.org/ontology/spouse> ?result . ?v3 <http://dbpedia.org/property/father> ?v4 . ?v6 <http://dbpedia.org/ontology/successor> ?result . ?v6 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. <http://dbpedia.org/resource/Anna_Magdalena_Appel> <http://dbpedia.org/property/father> ?v4 . ?result <http://dbpedia.org/ontology/successor> ?v2 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?predecessor WHERE {
  # Step 1: Find the parent of Prince Friedrich of Hesse and by Rhine
  ?friedrich a dbo:Person ;
             foaf:name ""Prince Friedrich of Hesse and by Rhine""@en .
  ?parent dbo:child ?friedrich .

  # Step 2: Find the predecessor of this parent
  ?predecessor dbo:successor ?parent .

  # Step 3: Identify Louis I, Grand Duke of Hesse's royal child
  ?louis a dbo:Person ;
         foaf:name ""Louis I, Grand Duke of Hesse""@en .
  ?royalChild dbo:child ?louis ;
              dbo:isRoyalMember true .

  # Step 4: Find the successor of this royal child
  ?successor dbo:predecessor ?royalChild .

  # Step 5: Identify Anna Magdalena Appel's father and his child
  ?anna a dbo:Person ;
        foaf:name ""Anna Magdalena Appel""@en .
  ?father dbo:child ?anna .
  ?grandchild dbo:parent ?father .

  # Step 6: Find the spouse of this grandchild
  ?spouse dbo:spouse ?grandchild .

  FILTER(?predecessor = ?successor && ?spouse = ?predecessor)
}
```",7,8,8,3,3,3,3,71,0,0,1,0,0.0,0
715,61,test,"Give me the leader of the office, that is a government agency and an organisation, of the reference to Carlos Franco Iribarnegaray and commander in the force of the mayor, that is an office holder and a politician and a president, of 1933 Spanish general election.","SELECT ?result WHERE { ?v1 <http://dbpedia.org/property/office> ?v3 . ?v5 <http://dbpedia.org/ontology/commander> ?result . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. <http://dbpedia.org/resource/1933_Spanish_general_election> <http://dbpedia.org/property/leader> ?v0 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/President>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/GovernmentAgency>. ?v3 <http://dbpedia.org/ontology/leader> ?result . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v1 <http://xmlns.com/foaf/0.1/name> ""Carlos Franco Iribarnegaray""@en . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?v5 <http://dbpedia.org/ontology/commander> ?v0 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?leader WHERE {
  # Step 1: Identify Carlos Franco Iribarnegaray's role in a government agency
  ?carlos a dbo:Person ;
          foaf:name ""Carlos Franco Iribarnegaray"" ;
          dbo:positionHeld ?position .
  
  # Step 2: Find the mayor during the 1933 Spanish general election
  ?mayor a dbo:Politician, dbo:OfficeHolder ;
         dbo:office ?office ;
         dbo:electedDuring ?election .
  FILTER (?election = dbr:Spanish_general_election,_1933)
  
  # Step 3: Determine who led the office or organization related to both Carlos Franco Iribarnegaray and the mayor
  ?position dbo:leader ?leader .
  ?office dbo:leader ?leader .
}
```",6,11,7,3,2,3,3,71,0,0,1,0,0.0,0
136,9,test,Give me the region coded as the area code of Levenhagen and landmark at elevation of the award of Bret Anthony Johnston.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/areaCode> ?v1 . <http://dbpedia.org/resource/Bret_Anthony_Johnston> <http://dbpedia.org/property/awards> ?v3 . <http://dbpedia.org/resource/Levenhagen> <http://dbpedia.org/ontology/areaCode> ?v1 . ?result <http://dbpedia.org/ontology/elevation> ?v3 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?region ?landmark WHERE {
  # Find Levenhagen and its area code
  ?levenhagen a dbo:Settlement ;
              rdfs:label ""Levenhagen""@en .
  
  OPTIONAL { 
    ?levenhagen dbo:areaServed ?region .
    ?region dbo:postalCode ?areaCode .
  }
  
  # Find an award associated with Bret Anthony Johnston
  ?johnston a dbo:Person ;
            rdfs:label ""Bret Anthony Johnston""@en .
  
  ?award dbo:recipient ?johnston ;
         a dbo:Award .
  
  # Find a landmark with elevation matching the award's number or related property
  ?landmark a dbo:Lighthouse ;
            dbo:elevation ?elevation .
  
  FILTER (?elevation = ?awardNumber) # Assuming the award has a numerical identifier
  
  BIND(?region AS ?region)
  BIND(?landmark AS ?landmark)
}
```",4,4,5,2,2,2,2,9,0,0,1,0,0.0,0
329,26,test,"Give me the entity in United Kingdom and entity in the birthplace, that is an organisation and a country, of Robert Bates (loyalist) and birthplace of the author of The Tailor and Ansty.",SELECT ?result WHERE { <http://dbpedia.org/resource/Robert_Bates_(loyalist)> <http://dbpedia.org/ontology/birthPlace> ?v1 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. ?v2 <http://dbpedia.org/ontology/birthPlace> ?result . ?result <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/United_Kingdom> . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?result <http://dbpedia.org/ontology/country> ?v1 . <http://dbpedia.org/resource/The_Tailor_and_Ansty> <http://dbpedia.org/property/author> ?v2 . },"```sparql
# Query for Robert Bates (loyalist)
SELECT ?birthPlaceUK ?organisationOrCountry WHERE {
  ?bates dbo:birthPlace ?birthPlace .
  ?birthPlace dcterms:isPartOf dbc:Countries_of_the_United_Kingdom .
  OPTIONAL { ?bates dbo:associatedWith ?organisationOrCountry . }
  FILTER (str(?bates) = ""Robert Bates (loyalist)"")
}
```

```sparql
# Query for the author of ""The Tailor and Ansty""
SELECT ?authorBirthPlace WHERE {
  ?book dbo:author ?author .
  ?book rdfs:label ""The Tailor and Ansty""@en .
  ?author dbo:birthPlace ?authorBirthPlace .
}
```",5,7,6,2,3,2,3,28,0,0,1,0,0.0,0
216,57,test,"Give me the team of the person born, that is a sports manager and a soccer manager and a soccer player, on 1983-12-20 and player in the coach, that is a soccer player and a sports manager and a soccer manager, of the player, that is an organisation and a sports club and a soccer club, in Džemal Berberović and player in Igor Bišćan.","SELECT ?result WHERE { ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerManager>. ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerPlayer>. <http://dbpedia.org/resource/Igor_Bišćan> <http://dbpedia.org/ontology/team> ?result . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerManager>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsManager>. ?v3 <http://dbpedia.org/ontology/birthDate> ""1983-12-20""^^<http://www.w3.org/2001/XMLSchema#date> . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerClub>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerPlayer>. ?v5 <http://dbpedia.org/ontology/team> ?result . ?result <http://dbpedia.org/ontology/coach> ?v3 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsClub>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsManager>. ?v0 <http://dbpedia.org/ontology/coach> ?v5 . <http://dbpedia.org/resource/Džemal_Berberović> <http://dbpedia.org/ontology/team> ?v0 . }","```sparql
SELECT ?team WHERE {
  # Find the individual born on December 20, 1983, who is a sports manager, soccer manager, and player
  ?person dbo:birthDate ""1983-12-20""^^xsd:date ;
          rdf:type dbo:SoccerManager ;
          rdf:type dbo:SportsManager ;
          rdf:type dbo:SoccerPlayer .

  # Find the team managed by this person that includes Džemal Berberović and Igor Bišćan as players
  ?team dbo:coach ?person ;
        dbo:player Džemal_Berberović ;
        dbo:player Igor_Bišćan .

  # Ensure the team is an organization, sports club, and soccer club
  ?team rdf:type dbo:SportsClub ;
        rdf:type dbo:SoccerClub ;
        rdf:type dbo:Organization .
}
```",6,15,7,3,3,3,3,71,0,0,1,0,0.0,0
987,60,test,"Give me the entity in the region, that is a country, of the time zone, that is a sports event, in Canicosa de la Sierra and birth place of the band, that is an artist and a musical artist, of the band, that is an artist, of Dado Polumenta.",SELECT ?result WHERE { ?v4 <http://dbpedia.org/ontology/associatedMusicalArtist> ?v2 . ?v0 <http://dbpedia.org/property/timeZone> ?v5 . ?v2 <http://dbpedia.org/ontology/birthPlace> ?result . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. ?result <http://dbpedia.org/ontology/country> ?v0 . <http://dbpedia.org/resource/Canicosa_de_la_Sierra> <http://dbpedia.org/ontology/timeZone> ?v5 . <http://dbpedia.org/resource/Dado_Polumenta> <http://dbpedia.org/ontology/associatedMusicalArtist> ?v4 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsEvent>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. },"```sparql
# Step 1: Identify Dado Prudhomme's Band
SELECT ?band WHERE {
  dbo:Dado_Prudhomme dbo:memberOf ?band .
}

# Step 2: Determine the Birth Place of The Rippingtons' Band Members
SELECT DISTINCT ?birthPlace WHERE {
  ?person dbo:memberOf <http://dbpedia.org/resource/The_Rippingtons> ;
          dbo:birthPlace ?birthPlace .
}

# Step 3: Identify the Time Zone and Sports Event in Canicosa de la Sierra
SELECT ?timeZone ?sportsEvent WHERE {
  dbpedia-es:Canicosa_de_la_Sierra dbo:timeZone ?timeZone .
  OPTIONAL { ?timeZone dbo:sportsEvent ?sportsEvent . }
}

# Step 4: Find a Country in That Region
SELECT DISTINCT ?country WHERE {
  ?region dbo:hasTimeZone ?timeZone ;
          dbo:country ?country .
}
```",6,11,7,3,2,3,3,71,0,0,2,0,0.0,0
976,63,test,"Give me the office of the person born as Mehmet Naci Bostancı and office of the leader, that is a politician, of the administration, that is an organisation, of Kemal Kılıçdaroğlu and office of the mayor, that is a politician and an office holder and Turkish, of Nation Alliance (Turkey).","SELECT ?result WHERE { ?v5 <http://dbpedia.org/ontology/nationality> <http://dbpedia.org/resource/Turkey>. ?v1 <http://dbpedia.org/property/office> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v3 <http://dbpedia.org/ontology/leader> ?v1 . <http://dbpedia.org/resource/Nation_Alliance_(Turkey)> <http://dbpedia.org/property/leader> ?v5 . ?v0 <http://dbpedia.org/property/office> ?result . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?v3 <http://dbpedia.org/property/leader> <http://dbpedia.org/resource/Kemal_Kılıçdaroğlu> . ?v5 <http://dbpedia.org/property/office> ?result . ?v0 <http://dbpedia.org/property/birthName> ""Mehmet Naci Bostancı""@en . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?office1 ?office2 ?office3 WHERE {
  # Office of Mehmet Naci Bostancı
  OPTIONAL {
    ?person dbr:Mehmet_Naci_Bostancı .
    ?person dbo:office ?office1 .
  }

  # Office of the leader of Kemal Kılıçdaroğlu's administration
  OPTIONAL {
    ?leader dbr:Kemal_Kılıçdaroğlu .
    ?party dbo:chairman ?leader .
    ?party dbo:headOffice ?administration .
    ?administration dbo:officeHolder ?office2 .
  }

  # Office of the mayor of Nation Alliance (Turkey)
  OPTIONAL {
    ?mayor dbo:nationality dbr:Turkey ;
           dbo:politicalParty dbr:Nation_Alliance_(Turkey) ;
           dbo:office ""Mayor""@en .
    ?mayor dbo:officeHolder ?office3 .
  }
}
```",7,12,8,3,3,3,3,71,0,0,1,0,0.0,0
976,64,test,"Give me the office of Meral Akşener and office of the leader, that is a politician, of the administration, that is an organisation, of Kemal Kılıçdaroğlu and office of the person born as the birth name of Naci Bostancı.",SELECT ?result WHERE { <http://dbpedia.org/resource/Meral_Akşener> <http://dbpedia.org/property/office> ?result . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?v4 <http://dbpedia.org/ontology/leader> ?v2 . ?v0 <http://dbpedia.org/property/birthName> ?v5 . ?v0 <http://dbpedia.org/property/office> ?result . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. <http://dbpedia.org/resource/Naci_Bostancı> <http://dbpedia.org/property/birthName> ?v5 . ?v2 <http://dbpedia.org/property/office> ?result . ?v4 <http://dbpedia.org/property/leader> <http://dbpedia.org/resource/Kemal_Kılıçdaroğlu> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT ?meralOffice ?kemalOffice ?naciOffice WHERE {
  # Meral Akşener's office
  ?meral a dbo:Person;
         foaf:name ""Meral Akşener""@en.
  ?meral dbo:office ?meralOffice.

  # Kemal Kılıçdaroğlu's organization and his office
  ?kemal a dbo:Person;
         foaf:name ""Kemal Kılıçdaroğlu""@en.
  ?organization dbo:leader ?kemal;
                a dbo:Organization.
  ?kemal dbo:office ?kemalOffice.

  # Naci Bostancı's office
  ?naci a dbo:Person;
        foaf:name ""Naci Bostancı""@en;
        dbp:birthName ""Naci Bostancı"".
  ?naci dbo:office ?naciOffice.
}
```",7,9,8,3,3,3,3,71,0,0,1,0,0.0,0
18,24,test,"Give me the alumnus of the figure known, that is an educational institution, as Saints and parent of the professional in Actress.","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/child> ?v0 . ?result <http://dbpedia.org/ontology/almaMater> ?v1 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/EducationalInstitution>. ?v0 <http://dbpedia.org/property/occupation> ""Actress""@en . ?v1 <http://dbpedia.org/property/nickname> ""Saints""@en . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?alumnus WHERE {
  ?college rdfs:label ""Saint Mary's College of California""@en .
  ?alumnus dbo:almaMater ?college ;
           dbo:spouseOrPartner ?parent .
  ?parent dbo:child ?actress .
  ?actress rdf:type dbo:Actress .
}
```",4,5,5,2,2,2,3,28,0,0,1,0,0.0,0
281,28,test,"Give me the awardee of the award of Alfred Warden and commander in the war, that is an event and a military conflict, of Roy Boehm and awardee of the award, that is a military conflict, of Lawrence Moore Cosgrave.",SELECT ?result WHERE { ?result <http://dbpedia.org/property/awards> ?v5 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. <http://dbpedia.org/resource/Roy_Boehm> <http://dbpedia.org/ontology/battle> ?v1 . ?result <http://dbpedia.org/property/awards> ?v3 . <http://dbpedia.org/resource/Lawrence_Moore_Cosgrave> <http://dbpedia.org/property/awards> ?v3 . <http://dbpedia.org/resource/Alfred_Warden> <http://dbpedia.org/property/awards> ?v5 . ?v1 <http://dbpedia.org/ontology/commander> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?commonEntity WHERE {
  # Find the award named after Alfred Warden and its awardee
  ?award dbo:name ""Alfred Warden"" ;
         dbo:recipient ?awardee1 .
  
  # Identify the event (military conflict) associated with Roy Boehm
  ?event dbo:commander ?royBoehm ;
         a dbo:MilitaryConflict .

  # Ensure the awardee is also a commander in this military conflict
  FILTER (?awardee1 = ?royBoehm)

  # Identify the military conflict related to Lawrence Moore Cosgrave
  ?conflict dbo:recipient ?awardee2 ;
            a dbo:MilitaryConflict .
  
  # Ensure the awardee of the Alfred Warden award is also an awardee in this conflict
  FILTER (?awardee1 = ?awardee2)

  # The common entity should be both awardees and commanders
  BIND(?awardee1 AS ?commonEntity)
}
```",6,9,7,2,3,2,3,28,0,0,1,0,0.0,0
382,20,test,"Give me the birthplace of the manager, that is a soccer manager and an athlete and a sports manager, of the player in Lukas Kübler and landmark at elevation of the award of the reference, that is a college coach and a coach, to Harry Combes.","SELECT ?result WHERE { ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/CollegeCoach>. <http://dbpedia.org/resource/Lukas_Kübler> <http://dbpedia.org/ontology/team> ?v1 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsManager>. ?v4 <http://xmlns.com/foaf/0.1/name> ""Harry Combes""@en . ?v4 <http://dbpedia.org/property/awards> ?v5 . ?result <http://dbpedia.org/ontology/elevation> ?v5 . ?v1 <http://dbpedia.org/ontology/manager> ?v2 . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Coach>. ?v2 <http://dbpedia.org/ontology/birthPlace> ?result . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerManager>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Athlete>. }","```sparql
# Step 1: Find Lukas Kübler's manager who is a soccer manager, athlete, and sports manager
SELECT ?manager WHERE {
  ?player dbo:birthName ""Lukas Kübler""@en .
  ?player dbo:manager ?manager .
  ?manager rdf:type dbo:SoccerManager ;
           dbo:occupation dbr:Athlete ;
           dbo:occupation dbr:SportsManager .
}

# Step 2: Find the birthplace of this manager
SELECT ?birthPlace WHERE {
  ?manager dbo:birthPlace ?birthPlace .
}

# Step 3: Identify the award given to Harry Combes
SELECT ?award WHERE {
  ?person dbo:birthName ""Harry Combes""@en ;
          dbo:occupation dbr:College_coach ;
          dbo:occupation dbr:Coach .
  ?person dbo:receivedAward ?award .
}

# Step 4: Find a landmark at the elevation of this award
SELECT ?landmark WHERE {
  ?award dbo:elevation ?elevation .
  ?landmark dbo:elevation ?elevation ;
            rdf:type dbo:Landscape .
}
```",6,11,7,3,2,3,2,20,0,0,1,0,0.0,0
267,20,test,"Give me the coach of the player, that is a soccer club, in the manager of 2020–21 Tractor S.C. season and person born on the birth date of the reference to Dan Cathy.","SELECT ?result WHERE { ?v4 <http://dbpedia.org/ontology/birthDate> ?v5 . ?result <http://dbpedia.org/ontology/birthDate> ?v5 . ?v1 <http://dbpedia.org/ontology/team> ?v2 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerClub>. ?v4 <http://xmlns.com/foaf/0.1/name> ""Dan Cathy""@en . <http://dbpedia.org/resource/2020–21_Tractor_S.C._season> <http://dbpedia.org/ontology/manager> ?v1 . ?v2 <http://dbpedia.org/ontology/coach> ?result . }","```sparql
# Step 1: Get Dan Cathy's birth date
SELECT ?birthDate WHERE {
    dbpedia:Dan_Cathy dbo:birthday ?birthDate .
}

# Step 2: Find another person with the same birth date
SELECT DISTINCT ?person WHERE {
    ?person dbo:birthday ?sameBirthDate .
    FILTER(?sameBirthDate = <http://dbpedia.org/resource/Dan_Cathy> :birthday) # Replace with actual URI from step 1
}

# Step 3: Get the manager of Tractor S.C. in the 2020–21 season
SELECT DISTINCT ?manager WHERE {
    dbpedia:Tractor_S.C._Football_Club dbo:managerDuringSeason ?manager .
    ?manager dbo:seasonStart ""2020-07-01""^^xsd:date ;
             dbo:seasonEnd ""2021-06-30""^^xsd:date .
}

# Step 4: Identify a player who is also associated with multiple clubs
SELECT DISTINCT ?player WHERE {
    ?player rdf:type dbpedia:SoccerPlayer .
    ?player dbo:playsFor ?club1, ?club2 .
    FILTER(?club1 != ?club2)
}

# Step 5: Find the coach of that player
SELECT DISTINCT ?coach WHERE {
    ?player dbo:coachedBy ?coach .
}
```",6,7,7,3,2,3,2,20,0,0,1,0,0.0,0
865,69,test,"Give me the father of the child, that is a politician, of Abu Ahmad Abdul Hafiz and father of the child of the father of Abul Maal Abdul Muhith and native of the residence, that is a country, of the person decedent at Patna.",SELECT ?result WHERE { ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. <http://dbpedia.org/resource/Abul_Maal_Abdul_Muhith> <http://dbpedia.org/property/father> ?v7 . ?v1 <http://dbpedia.org/ontology/deathPlace> <http://dbpedia.org/resource/Patna> . ?v3 <http://dbpedia.org/property/father> ?result . ?v1 <http://dbpedia.org/property/residence> ?v0 . ?result <http://dbpedia.org/ontology/birthPlace> ?v0 . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v3 <http://dbpedia.org/property/father> ?v7 . ?v5 <http://dbpedia.org/property/father> ?result . ?v5 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Abu_Ahmad_Abdul_Hafiz> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?fatherOfPolitician ?grandfatherChild ?nativeCountryPerson WHERE {
  # Step 1: Find Abu Ahmad Abdul Hafiz's child who is a politician
  ?politician dbo:parent dbr:Abu_Ahmad_Abdul_Hafiz ;
             dbo:occupation dbr:Politician .

  # Step 2: Find the father of that politician
  ?fatherOfPolitician dbo:child ?politician .

  # Step 3: Identify Abul Maal Abdul Muhith's paternal grandfather
  ?abulMaal dbr:Abul_Maal_Abdul_Muhith ;
           dbo:parent ?fatherOfAbulMaal .
  ?fatherOfAbulMaal dbo:parent ?grandfather .

  # Step 4: Find the child of that grandfather
  ?grandfatherChild dbo:child ?grandfather .

  # Step 5: Identify a person who died in Patna and their place of origin as a country
  ?decedent dbo:deathPlace dbr:Patna ;
            dbo:nationality ?nativeCountry .
  ?nativeCountry rdf:type dbo:Country .

  # Combine the information to get the final result
  FILTER(?fatherOfPolitician = ?grandfatherChild)
}
```",8,10,9,3,3,3,3,71,0,0,1,0,0.0,0
573,58,test,"Give me the person decedent at Massachusetts and parent of the author, that is a politician and an office holder, of the work of John Quincy Adams and person decedent at the residence, that is a settlement, of William J. Phelan.",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/deathPlace> <http://dbpedia.org/resource/Massachusetts> . ?v1 <http://dbpedia.org/property/author> <http://dbpedia.org/resource/John_Quincy_Adams> . ?v2 <http://dbpedia.org/ontology/parent> ?result . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. ?result <http://dbpedia.org/ontology/deathPlace> ?v5 . ?v1 <http://dbpedia.org/property/author> ?v2 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. <http://dbpedia.org/resource/William_J._Phelan> <http://dbpedia.org/property/residence> ?v5 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?person WHERE {
  ?person dbo:deathPlace dbr:Massachusetts .
  ?person dbo:child dbr:John_Quincy_Adams .
  ?person a dbo:Politician ;
          a dbo:OfficeHolder .

  OPTIONAL { 
    ?phelanResidence dbo:location dbr:San_Francisco .
    ?person dbo:deathPlace ?phelanResidence .
  }
}
```",6,9,7,3,3,3,3,71,1,0,1,1.0,0.5,0.6666666666666666
507,56,test,Give me the spouse of the person born as Anne Voase Coates and professional in the profession of the person born on 1966-02-18 and director of Entertaining Mr Sloane (film).,"SELECT ?result WHERE { ?v0 <http://dbpedia.org/ontology/birthDate> ""1966-02-18""^^<http://www.w3.org/2001/XMLSchema#date> . ?result <http://dbpedia.org/ontology/spouse> ?v2 . ?result <http://dbpedia.org/property/occupation> ?v1 . ?v0 <http://dbpedia.org/property/occupation> ?v1 . ?v2 <http://dbpedia.org/property/birthName> ""Anne Voase Coates""@en . <http://dbpedia.org/resource/Entertaining_Mr_Sloane_(film)> <http://dbpedia.org/ontology/director> ?result . }","```sparql
# Step 1: Find Anne Voase Coates' spouse
SELECT ?spouse WHERE {
  ?anne foaf:name ""Anne Voase Coates""@en .
  ?anne dbo:spouse ?spouse .
}

UNION

# Step 2: Determine the profession of the person born on 1966-02-18
SELECT ?person ?profession WHERE {
  ?person dbo:birthday ""1966-02-18""^^xsd:date .
  ?person dbo:occupation ?profession .
}

UNION

# Step 3: Find the director of ""Entertaining Mr Sloane""
SELECT ?director WHERE {
  ?film foaf:name ""Entertaining Mr Sloane""@en ;
        dbo:director ?director .
}
```",6,6,7,3,3,3,3,71,0,0,1,0,0.0,0
216,59,test,"Give me the player in the coach, that is a soccer player and a sports manager and a soccer manager, of the player, that is an organisation and a sports club and a soccer club, in Džemal Berberović and player in the coach of the reference, that is an organisation and a soccer club, to Croatia U21.","SELECT ?result WHERE { ?v3 <http://dbpedia.org/ontology/coach> ?v2 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsClub>. ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsManager>. ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerManager>. ?v0 <http://dbpedia.org/ontology/coach> ?v5 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerClub>. <http://dbpedia.org/resource/Džemal_Berberović> <http://dbpedia.org/ontology/team> ?v0 . ?v5 <http://dbpedia.org/ontology/team> ?result . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerClub>. ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerPlayer>. ?v3 <http://xmlns.com/foaf/0.1/name> ""Croatia U21""@en . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?v2 <http://dbpedia.org/ontology/team> ?result . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?player WHERE {
  # Find Džemal Berberović's coaching role
  ?coach a dbo:SoccerCoach ;
         foaf:name ""Džemal Berberović""@en .
  
  # Identify players who are also coaches (soccer player and sports manager)
  ?player a dbo:SoccerPlayer, dbo:SportsManager ;
          dbo:coach ?coach .

  # Ensure the player is associated with a club that is both a sports club and a soccer club
  ?club a dbo:SportsClub, dbo:SoccerClub ;
        dbo:member ?player .
  
  # Verify the club's connection to Croatia U21
  ?croatiaU21 a dbo:SoccerTeam ;
              foaf:name ""Croatia national under-21 football team""@en ;
              dbo:club ?club .

}
```",6,14,7,3,2,3,3,71,0,0,3,0,0.0,0
582,69,test,"Give me the figure known as the nickname of the team, that is an organisation, of Hajime Moriyasu and reference to the residence of the reference, that is a scientist, to Hirotaka Sugawara and player in the father, that is an athlete and a soccer manager and a sports manager, of Masami Nagasawa.","SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/coach> <http://dbpedia.org/resource/Hajime_Moriyasu> . ?v1 <http://dbpedia.org/property/nickname> ?v2 . <http://dbpedia.org/resource/Masami_Nagasawa> <http://dbpedia.org/property/father> ?v7 . ?result <http://xmlns.com/foaf/0.1/name> ?v3 . ?result <http://dbpedia.org/property/nickname> ?v2 . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Scientist>. ?v7 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsManager>. ?v4 <http://xmlns.com/foaf/0.1/name> ""Hirotaka Sugawara""@en . ?v4 <http://dbpedia.org/property/residence> ?v3 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?v7 <http://dbpedia.org/ontology/team> ?result . ?v7 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerManager>. ?v7 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Athlete>. }","```sparql
# Step 1: Find Hajime Moriyasu's team nickname
SELECT ?teamNickname WHERE {
  ?person foaf:name ""Hajime Moriyasu""@en .
  ?person dbo:managerOf ?team .
  ?team rdfs:label ?teamLabel .
  FILTER(CONTAINS(LCASE(?teamLabel), ""nickname""))
  BIND(REPLACE(STR(?teamLabel), ""(.*)(nickname|sobriquet): (.*)"", ""$3"") AS ?teamNickname)
}

UNION

# Step 2: Find Hirotaka Sugawara's residence reference
SELECT ?residence WHERE {
  ?person foaf:name ""Hirotaka Sugawara""@en .
  ?person dbo:almaMater ?institution .
  ?institution dbo:location ?location .
  ?location rdfs:label ?residence .
}

UNION

# Step 3: Find Masami Nagasawa's father and his professions
SELECT ?fatherName WHERE {
  ?athlete foaf:name ""Masami Nagasawa""@en .
  ?athlete dbo:parent ?father .
  ?father foaf:name ?fatherName .
  OPTIONAL { ?father dbo:occupation ?occupation . FILTER(CONTAINS(LCASE(?occupation), ""soccer manager"") || CONTAINS(LCASE(?occupation), ""sports manager"")) }
}

# Step 4: Combine the results to find the final answer
SELECT DISTINCT ?teamNickname WHERE {
  # Assuming we have intermediate variables for each step, combine them logically
  # This part is more conceptual as SPARQL doesn't directly support complex joins without intermediate steps
}
```",8,13,9,3,3,3,3,71,0,0,1,0,0.0,0
443,26,test,Give me the landmark at elevation of the award of William Shepherd and birthplace of the work of yes and birthplace of Ulf Lundell.,"SELECT ?result WHERE { ?v2 <http://dbpedia.org/property/author> ""yes""@en . ?result <http://dbpedia.org/ontology/elevation> ?v1 . <http://dbpedia.org/resource/Ulf_Lundell> <http://dbpedia.org/ontology/birthPlace> ?result . <http://dbpedia.org/resource/William_Shepherd> <http://dbpedia.org/property/awards> ?v1 . ?v2 <http://dbpedia.org/ontology/birthPlace> ?result . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?landmark ?elevation WHERE {
  # Nobel Peace Prize elevation (symbolic, assuming a standard value for demonstration)
  VALUES (?awardElevation) { (""1000""^^xsd:int) } # Placeholder for symbolic elevation

  # Landmarks at the elevation of the Nobel Peace Prize
  ?landmark dbo:elevationAboveSeaLevel ?elevation .
  FILTER(?elevation = ?awardElevation)

  UNION

  # Accrington, birthplace of Jon Anderson (Yes)
  dbr:Accrington dbo:elevationAboveSeaLevel ?accringtonElevation .
  ?landmark dbo:elevationAboveSeaLevel ?elevation .
  FILTER(?elevation = ?accringtonElevation)

  UNION

  # Helsinki, birthplace of Ulf Lundell
  dbr:Helsinki dbo:elevationAboveSeaLevel ?helsinkiElevation .
  ?landmark dbo:elevationAboveSeaLevel ?elevation .
  FILTER(?elevation = ?helsinkiElevation)
}
```",5,5,6,2,3,2,3,28,0,0,1,0,0.0,0
892,61,test,"Give me the entity in the administration, that is Italian and a region and a settlement and an administrative region, of the party, that is a political party and an organisation, of Andrea Cozzolino and landmark at elevation of the award of the member of E-girls.",SELECT ?result WHERE { ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/AdministrativeRegion>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/PoliticalParty>. ?v0 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Italy>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Region>. ?result <http://dbpedia.org/ontology/province> ?v0 . ?v0 <http://dbpedia.org/property/leaderParty> ?v3 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. ?v1 <http://dbpedia.org/property/awards> ?v4 . ?result <http://dbpedia.org/ontology/elevation> ?v4 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. <http://dbpedia.org/resource/E-girls> <http://dbpedia.org/ontology/bandMember> ?v1 . <http://dbpedia.org/resource/Andrea_Cozzolino> <http://dbpedia.org/ontology/party> ?v3 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT DISTINCT ?region WHERE {
  # Step 1: Identify Andrea Cozzolino's political party
  ?party a dbo:PoliticalParty ;
         dbo:member dbr:Andrea_Cozzolino .

  # Step 2: Find the Italian administrative region associated with this party
  ?region a dbo:AdministrativeRegion, dbo:Settlement ;
          dbo:country dbr:Italy ;
          dbo:administrativeRegion ?party .

  # Step 3: Identify landmarks at elevation related to E-girls members
  ?landmark dbo:elevation ?elevation ;
            dbo:location ?region .
  
  ?member a dbo:E-girls_member ;
          dbo:award ?award .
  
  FILTER(?elevation > 0) # Assuming we need a positive elevation

  # Step 4: Combine information to find the region
}
```",6,12,7,3,2,3,3,71,0,0,2,0,0.0,0
933,64,test,"Give me the band of the band of the band, that is an artist and a musical artist, of The Ramong Sound and reference to Alan Warner and band of the band, that is a group and a band and an organisation, of the person born, that is a musical artist, on 1947-04-21.","SELECT ?result WHERE { <http://dbpedia.org/resource/The_Ramong_Sound> <http://dbpedia.org/ontology/associatedMusicalArtist> ?v4 . ?v5 <http://dbpedia.org/ontology/birthDate> ""1947-04-21""^^<http://www.w3.org/2001/XMLSchema#date> . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?v5 <http://dbpedia.org/ontology/associatedMusicalArtist> ?v0 . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?result <http://xmlns.com/foaf/0.1/name> ""Alan Warner""@en . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Group>. ?v0 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v2 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v4 <http://dbpedia.org/ontology/associatedMusicalArtist> ?v2 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Band>. }","```sparql
# Step 1: Identify ""The Ramong Sound"" as The Rolling Stones
SELECT ?rollingStones WHERE {
  ?entity rdfs:label ""The Rolling Stones""@en .
  ?entity dbo:type dbo:Band ;
          foaf:name ?name .
  FILTER(CONTAINS(LCASE(?name), ""the rolling stones""))
}

# Step 2: Find the band associated with Alan Warner
SELECT ?belleAndSebastian WHERE {
  ?entity rdfs:label ""Alan Warner""@en .
  ?entity dbo:member ?band .
  ?band rdfs:label ""Belle and Sebastian""@en ;
        dbo:type dbo:Band .
}

# Step 3: Find the person born on 1947-04-21
SELECT ?mickJagger WHERE {
  ?person rdfs:label ""Mick Jagger""@en .
  ?person dbo:birthDate ""1947-04-21""^^xsd:date ;
          dbo:type dbo:MusicalArtist .
}

# Step 4: Determine the organization (band) associated with Mick Jagger
SELECT ?rollingStonesBand WHERE {
  ?mickJagger dbo:member ?band .
  ?band rdfs:label ""The Rolling Stones""@en ;
        dbo:type dbo:Band .
}
```",7,13,8,3,3,3,3,71,0,0,1,0,0.0,0
888,19,test,"Give me the commander in the force, that is a societal event and an event, of Serhiy Kotenko and awardee of the award of the commander in 2022 Ukrainian eastern counteroffensive.",SELECT ?result WHERE { ?result <http://dbpedia.org/property/awards> ?v4 . ?v2 <http://dbpedia.org/ontology/commander> ?result . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?v2 <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Serhiy_Kotenko> . ?v0 <http://dbpedia.org/property/awards> ?v4 . <http://dbpedia.org/resource/2022_Ukrainian_eastern_counteroffensive> <http://dbpedia.org/ontology/commander> ?v0 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?commander ?event ?award WHERE {
  ?person rdfs:label ""Serhiy Kotenko""@en .
  ?person dbo:position ?commander .
  ?commander rdfs:label ?commanderLabel .

  OPTIONAL {
    ?person dbo:award ?award .
    ?award dbo:dateReceived ?dateReceived .
    FILTER (YEAR(?dateReceived) = 2022)
    ?award dbo:event ?event .
    ?event rdfs:label ?eventLabel .
    FILTER CONTAINS(LCASE(?eventLabel), ""ukrainian eastern counteroffensive"")
  }

  SERVICE <http://dbpedia.org/sparql> {
    ?commander rdfs:label ?commanderLabel .
    ?award rdfs:label ?awardLabel .
    ?event rdfs:label ?eventLabel .
  }
}
```",5,7,6,3,2,3,2,20,0,0,1,0,0.0,0
791,65,test,"Give me the predecessor of the child of the child, that is an office holder and a royalty, of Emperor Go-Shirakawa and father of the child, that is a royalty, of Emperor Takakura and spouse of the spouse, that is a royalty, of Emperor Takakura.",SELECT ?result WHERE { ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v6 <http://dbpedia.org/property/father> ?v0 . ?v3 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Emperor_Takakura> . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v3 <http://dbpedia.org/property/father> ?result . ?v0 <http://dbpedia.org/ontology/parent> <http://dbpedia.org/resource/Emperor_Go-Shirakawa> . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v4 <http://dbpedia.org/ontology/spouse> <http://dbpedia.org/resource/Emperor_Takakura> . ?result <http://dbpedia.org/ontology/successor> ?v6 . ?result <http://dbpedia.org/ontology/spouse> ?v4 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?predecessor WHERE {
  # Step 1: Find Emperor Go-Shirakawa's child who is an office holder and royalty
  ?childGoShirakawa dbo:parent dbr:Emperor_Go-Shirakawa ;
                   a dbo:Monarch, dbo:OfficeHolder .

  # Step 2: Find the grandchild of Emperor Go-Shirakawa
  ?grandchildGoShirakawa dbo:parent ?childGoShirakawa .

  # Step 3: Find the predecessor of this grandchild
  ?predecessor dbo:succeededBy ?grandchildGoShirakawa .

  # Step 4: Find Emperor Takakura's child who is royalty
  ?childTakakura dbo:parent dbr:Emperor_Takakura ;
                 a dbo:Monarch .

  # Step 5: Find the father of this child
  ?fatherChildTakakura dbo:spouse ?motherChildTakakura ;
                       dbo:child ?childTakakura .

  # Step 6: Find the spouse of Emperor Takakura who is royalty
  ?spouseTakakura dbo:spouse dbr:Emperor_Takakura ;
                  a dbo:Monarch .

  # Ensure all these individuals are connected as described
  FILTER (?predecessor = ?fatherChildTakakura && ?predecessor = ?spouseTakakura)
}
```",7,11,8,3,3,3,3,71,0,0,1,0,0.0,0
965,68,test,"Give me the parent of the child, that is a royalty, of the person born, that is a politician, on 1854-05-24 and spouse of the spouse of the parent of Louise Mountbatten and parent of the person born, that is a noble, as Prince George of Battenberg.","SELECT ?result WHERE { ?v0 <http://dbpedia.org/property/birthName> ""Prince George of Battenberg""@en . ?v4 <http://dbpedia.org/ontology/spouse> ?v2 . ?v6 <http://dbpedia.org/property/father> ?v1 . ?result <http://dbpedia.org/ontology/spouse> ?v2 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Noble>. ?v6 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. <http://dbpedia.org/resource/Louise_Mountbatten> <http://dbpedia.org/ontology/parent> ?v4 . ?v1 <http://dbpedia.org/ontology/birthDate> ""1854-05-24""^^<http://www.w3.org/2001/XMLSchema#date> . ?v0 <http://dbpedia.org/ontology/parent> ?result . ?v6 <http://dbpedia.org/ontology/parent> ?result . }","```sparql
SELECT DISTINCT ?parentOfRoyalChild WHERE {
  # Step 1: Find the politician born on 1854-05-24
  ?politician dbo:birthDate ""1854-05-24""^^xsd:date ;
              rdf:type dbo:Politician .

  # Step 2: Find the spouse of this politician
  ?spouse dbo:spouse ?politician .

  # Step 3: Find the parent of Louise Mountbatten
  ?louiseMountbatten dbo:parent ?parentOfLouise ;
                     rdfs:label ""Louise Mountbatten""@en .
  
  # Step 4: Find the spouse of the parent from step 3
  ?spouseOfParent dbo:spouse ?parentOfLouise .

  # Step 5: Find the child of this spouse that is royalty
  ?royalChild dbo:child ?spouseOfParent ;
              rdf:type dbo:RoyalFamilyMember .

  # Step 6: Determine the parent of this royal child
  ?parentOfRoyalChild dbo:parent ?royalChild .
}
```",8,11,9,3,3,3,3,71,0,0,2,0,0.0,0
865,64,test,"Give me the father of the child of the father of Abul Maal Abdul Muhith and native of the residence, that is a country, of the person decedent at Patna and father of AK Abdul Momen.",SELECT ?result WHERE { <http://dbpedia.org/resource/AK_Abdul_Momen> <http://dbpedia.org/property/father> ?result . <http://dbpedia.org/resource/Abul_Maal_Abdul_Muhith> <http://dbpedia.org/property/father> ?v6 . ?v2 <http://dbpedia.org/property/father> ?result . ?v2 <http://dbpedia.org/property/father> ?v6 . ?v1 <http://dbpedia.org/property/residence> ?v0 . ?v1 <http://dbpedia.org/ontology/deathPlace> <http://dbpedia.org/resource/Patna> . ?result <http://dbpedia.org/ontology/birthPlace> ?v0 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?fatherOfAbulMaal ?childOfFather ?fatherOfChild ?fatherOfAKAbdulMomen ?residenceCountry ?nativePerson
WHERE {
  # Step 1: Identify Abul Maal Abdul Muhith's father
  dbr:Abul_Maal_Abdul_Muhith dbo:father ?fatherOfAbulMaal .

  # Step 2: Find the child of that father (likely Abul Maal Abdul Muhith himself)
  ?childOfFather dbo:father ?fatherOfAbulMaal .
  
  # Step 3: Identify the father of this child
  ?fatherOfChild dbo:child ?childOfFather .

  # Step 4: Find AK Abdul Momen's father
  dbr:AK_Abdul_Momen dbo:father ?fatherOfAKAbdulMomen .

  # Step 5: Determine the residence of AK Abdul Momen's father at the time of his death
  ?fatherOfAKAbdulMomen dbo:deathPlace ?residenceCountry .
  
  FILTER (isLiteral(?residenceCountry) && regex(str(?residenceCountry), ""Patna""))

  # Step 6: Identify the native of that residence
  ?nativePerson dbo:nationality dbr:?residenceCountry .
}
```",7,8,8,3,3,3,3,71,0,0,1,0,0.0,0
715,59,test,"Give me the commander in the force, that is a military conflict, of the native of Morocco and commander in the force of the mayor, that is an office holder and a politician and a president, of 1933 Spanish general election.",SELECT ?result WHERE { <http://dbpedia.org/resource/1933_Spanish_general_election> <http://dbpedia.org/property/leader> ?v0 . ?v2 <http://dbpedia.org/ontology/commander> ?v3 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/President>. ?v2 <http://dbpedia.org/ontology/commander> ?result . ?v5 <http://dbpedia.org/ontology/commander> ?v0 . ?v5 <http://dbpedia.org/ontology/commander> ?result . ?v3 <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Morocco> . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?person WHERE {
  # Find a person who was a commander in a military conflict involving Morocco
  ?conflict dbo:location dbr:Morocco .
  ?conflict dbo:commander ?person .

  # Find a person who was an office holder, politician, and president around the 1933 Spanish general election
  OPTIONAL {
    ?officeHolder dbo:officeTitle dbr:Mayor ;
                  dbo:politicalAffiliation ?politician ;
                  dbo:startDate ?start .
    FILTER (?start <= ""1933-12-04""^^xsd:date && ?start >= ""1933-01-01""^^xsd:date)
  }
  
  OPTIONAL {
    ?president dbo:officeTitle dbr:President_of_Spain ;
               dbo:politicalAffiliation ?politician ;
               dbo:startDate ?start .
    FILTER (?start <= ""1933-12-04""^^xsd:date && ?start >= ""1933-01-01""^^xsd:date)
  }
  
  # Ensure the person is the same in both contexts
  FILTER EXISTS { ?person dbo:birthPlace dbr:Morocco } # Assuming a connection to Morocco for broader context
}
```",6,10,7,3,2,3,3,71,0,0,4,0,0.0,0
122,8,test,"Give me the band of the reference, that is a musical artist and an artist, to Gift of Gab and band member of Lyrics Born.","SELECT ?result WHERE { ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?v2 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v2 <http://xmlns.com/foaf/0.1/name> ""Gift of Gab""@en . ?result <http://dbpedia.org/ontology/associatedMusicalArtist> <http://dbpedia.org/resource/Lyrics_Born> . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?band WHERE {
  ?band a dbo:MusicalArtist .
  ?band rdfs:label ""Blackalicious""@en .

  OPTIONAL { 
    ?giftOfGab dbo:member ?band ;
               rdfs:label ""Gift of Gab""@en .
  }
  
  OPTIONAL { 
    ?lyricsBorn dbo:member ?band ;
                rdfs:label ""Lyrics Born""@en .
  }
}
```",3,5,4,2,2,2,2,9,0,0,2,0,0.0,0
976,56,test,"Give me the office of the leader, that is a politician, of Grand National Assembly of Turkey and office of the person born as the birth name of Naci Bostancı and office of Meral Akşener.",SELECT ?result WHERE { <http://dbpedia.org/resource/Meral_Akşener> <http://dbpedia.org/property/office> ?result . ?v2 <http://dbpedia.org/property/office> ?result . ?v0 <http://dbpedia.org/property/office> ?result . <http://dbpedia.org/resource/Grand_National_Assembly_of_Turkey> <http://dbpedia.org/ontology/leader> ?v2 . ?v0 <http://dbpedia.org/property/birthName> ?v4 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. <http://dbpedia.org/resource/Naci_Bostancı> <http://dbpedia.org/property/birthName> ?v4 . },"```sparql
# Query for the office of the leader of the Grand National Assembly of Turkey (Speaker)
SELECT ?office WHERE {
  wd:Q1234567 foaf:name ""Speaker""@en .
  wd:Q1234567 dbo:positionHeld ?office .
}

# Query for the office of Naci Bostancı
SELECT ?office WHERE {
  wd:Q9876543 foaf:name ""Naci Bostancı""@en .
  wd:Q9876543 dbo:positionHeld ?office .
}

# Query for the office of Meral Akşener
SELECT ?office WHERE {
  wd:Q1122334 foaf:name ""Meral Akşener""@en .
  wd:Q1122334 dbo:positionHeld ?office .
}
```

Note: The `wd:Q1234567`, `wd:Q9876543`, and `wd:Q1122334` are placeholders for the actual DBpedia resource identifiers of the Speaker of the Turkish Parliament, Naci Bostancı, and Meral Akşener, respectively. These should be replaced with their correct identifiers.",6,7,7,3,3,3,3,71,0,0,1,0,0.0,0
507,66,test,"Give me the professional in the profession of the person born on 1966-02-18 and spouse of the person born as Anne Voase Coates and director of the movie, that is a movie and a work, with Beryl Reid.","SELECT ?result WHERE { ?v6 <http://dbpedia.org/property/starring> <http://dbpedia.org/resource/Beryl_Reid> . ?v6 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Film>. ?result <http://dbpedia.org/ontology/spouse> ?v3 . ?result <http://dbpedia.org/property/occupation> ?v2 . ?v6 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?v6 <http://dbpedia.org/ontology/director> ?result . ?v1 <http://dbpedia.org/ontology/birthDate> ""1966-02-18""^^<http://www.w3.org/2001/XMLSchema#date> . ?v3 <http://dbpedia.org/property/birthName> ""Anne Voase Coates""@en . ?v1 <http://dbpedia.org/property/occupation> ?v2 . }","```sparql
SELECT ?director ?profession WHERE {
  # Step 1: Identify the person born on 1966-02-18
  ?person dbo:birthDate ""1966-02-18""^^xsd:date .
  
  # Step 2: Check if this person is married to Anne Voase Coates
  ?person dbo:spouse dbr:Anne_Voase_Coates .

  # Step 3: Find movies directed by this person that feature Beryl Reid
  ?movie dbo:director ?person .
  ?movie dbo:starring dbr:Beryl_Reid .

  # Step 4: Retrieve the profession of this director
  ?person dbo:occupation ?profession .
  
  # Ensure we are dealing with a movie and work
  ?movie rdf:type dbp:Film ;
         rdf:type dbo:CreativeWork .
}
```",7,9,8,3,3,3,3,71,0,0,1,0,0.0,0
98,26,test,"Give me the entity in the region, that is a country, of Philippine Standard Time and birth place of Paolo Ballesteros and region of the time zone of Lopez Jaena.",SELECT ?result WHERE { <http://dbpedia.org/resource/Lopez_Jaena> <http://dbpedia.org/ontology/timeZone> ?v4 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. ?result <http://dbpedia.org/ontology/timeZone> ?v4 . ?result <http://dbpedia.org/ontology/country> ?v1 . <http://dbpedia.org/resource/Paolo_Ballesteros> <http://dbpedia.org/ontology/birthPlace> ?result . ?v1 <http://dbpedia.org/property/timeZone> <http://dbpedia.org/resource/Philippine_Standard_Time> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?country WHERE {
  # Philippine Standard Time
  VALUES ?pst {dbr:Philippine_Standard_Time}

  # Find the country using PST
  ?pst dbo:timeZoneIn dbr:Philippines .

  # Birthplace of Paolo Ballesteros
  OPTIONAL {
    dbr:Paolo_Ballesteros dbo:birthPlace ?birthPlace .
    ?birthPlace dbo:country ?country .
  }

  # Region of the time zone of Lopez, Jaena
  OPTIONAL {
    dbr:Lopez_Jaena dbo:timeZone ?timezone .
    ?timezone dbo:timeZoneIn ?region .
    ?region dbo:country ?country .
  }
  
  FILTER(?country = dbr:Philippines)
}
```",5,6,6,2,3,2,3,28,0,0,2,0,0.0,0
465,56,test,"Give me the successor of the child of Alfonso I d'Este and successor of the child, that is a royalty, of the parent of Charles Orlando, Dauphin of France and spouse of Archduchess Barbara of Austria.","SELECT ?result WHERE { <http://dbpedia.org/resource/Charles_Orlando,_Dauphin_of_France> <http://dbpedia.org/ontology/parent> ?v0 . ?v1 <http://dbpedia.org/ontology/successor> ?result . ?v0 <http://dbpedia.org/ontology/child> ?v1 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?result <http://dbpedia.org/ontology/spouse> <http://dbpedia.org/resource/Archduchess_Barbara_of_Austria> . ?v2 <http://dbpedia.org/ontology/successor> ?result . ?v2 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Alfonso_I_d'Este> . }","```sparql
# Step 1: Find a notable child of Alfonso I d'Este
SELECT ?child WHERE {
  wd:Q123456 wdt:P40 ?child .
  FILTER (STRSTARTS(STR(?child), ""http://dbpedia.org/resource/""))
}

# Step 2: Find the successor of that child
SELECT ?successor WHERE {
  ?child wdt:P36 ?successor .
  FILTER (STRSTARTS(STR(?successor), ""http://dbpedia.org/resource/""))
}

# Step 3: Identify Charles Orlando, Dauphin of France's parent
SELECT ?parent WHERE {
  wd:Q789012 wdt:P22 ?parent .
  FILTER (STRSTARTS(STR(?parent), ""http://dbpedia.org/resource/""))
}

# Step 4: Identify the spouse of Archduchess Barbara of Austria
SELECT ?spouse WHERE {
  wd:Q345678 wdt:P26 ?spouse .
  FILTER (STRSTARTS(STR(?spouse), ""http://dbpedia.org/resource/""))
}

# Step 5: Find a notable child from this union who is royalty
SELECT ?child WHERE {
  ?parent wdt:P40 ?child .
  ?spouse wdt:P40 ?child .
  FILTER (STRSTARTS(STR(?child), ""http://dbpedia.org/resource/""))
}

# Step 6: Find the successor of that child
SELECT ?successor WHERE {
  ?child wdt:P36 ?successor .
  FILTER (STRSTARTS(STR(?successor), ""http://dbpedia.org/resource/""))
}

# Combine results to find successors
SELECT DISTINCT ?successor1, ?successor2 WHERE {
  # Successor of Alfonso I d'Este's child
  ?child wdt:P40 wd:Q123456 .
  ?child wdt:P36 ?successor1 .

  # Successor of the child from Charles Orlando's parent and Archduchess Barbara's spouse
  ?parent wdt:P22 wd:Q789012 .
  ?spouse wdt:P26 wd:Q345678 .
  ?child2 wdt:P40 ?parent ;
          wdt:P40 ?spouse .
  ?child2 wdt:P36 ?successor2 .
}
```",6,7,7,3,3,3,3,71,0,0,1,0,0.0,0
273,18,test,Give me the spouse of the child of the child of Edoardo Agnelli (1831-1871) and parent of the alumnus of University of Turin.,SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/child> ?v2 . ?v3 <http://dbpedia.org/ontology/almaMater> <http://dbpedia.org/resource/University_of_Turin> . ?v3 <http://dbpedia.org/ontology/parent> ?result . ?v1 <http://dbpedia.org/ontology/parent> <http://dbpedia.org/resource/Edoardo_Agnelli_(1831-1871)> . ?result <http://dbpedia.org/ontology/spouse> ?v2 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?spouse WHERE {
  # Step 1: Identify Edoardo Agnelli (1831-1871)
  ?edoardo a dbo:Person ;
           foaf:name ""Edoardo Agnelli"" ;
           dbo:birthYear ?birthYear .
  
  FILTER(?birthYear = 1831)

  # Step 2: Find the child of Edoardo Agnelli
  ?child dbo:parent ?edoardo .

  # Step 3: Identify the grandchild (child's child)
  ?grandchild dbo:parent ?child .

  # Step 4: Determine the spouse of the grandchild
  ?spouse dbo:spouse ?grandchild .

  # Step 5: Find if this spouse is a parent to an alumnus from University of Turin
  ?alumnus dbo:almaMater dbr:University_of_Turin ;
           dbo:parent ?spouse .
}
```",5,5,6,3,2,3,2,20,0,0,1,0,0.0,0
124,59,test,"Give me the military force of the war, that is an event and a military conflict and a societal event, of the awardee of British South Africa Company Medal and commander in the war, that is a societal event and a military conflict, of the reference, that is Australian and an organisation and a military unit, to 'A' Battery, Royal Australian Artillery.","SELECT ?result WHERE { ?v0 <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/British_South_Africa_Company_Medal> . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?result <http://dbpedia.org/ontology/battle> ?v5 . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?v0 <http://dbpedia.org/ontology/battle> ?v5 . ?v3 <http://xmlns.com/foaf/0.1/name> ""'A' Battery, Royal Australian Artillery""@en . ?v3 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Australia>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryUnit>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v2 <http://dbpedia.org/ontology/commander> ?result . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v3 <http://dbpedia.org/ontology/battle> ?v2 . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?militaryForce WHERE {
  # Identify the war as the Second Boer War
  VALUES ?war { dbr:Second_British_Empire–Boer_War }

  # Find a commander who received the British South Africa Company Medal and was involved in this war
  ?commander dbo:awardReceived dbr:British_South_Africa_Company_Medal ;
             dbo:occupation ""Military_Commander"" ;
             dbo:participatedIn ?war .

  # Identify 'A' Battery, Royal Australian Artillery as part of the Australian Army
  ?unit rdfs:label ""'A' Battery, Royal Australian Artillery""@en ;
        dbo:memberOf dbr:Australian_Army .

  # Find the military force involved in the Second Boer War
  ?militaryForce dbo:participatedIn ?war .
}
```",6,14,7,3,2,3,3,71,0,0,10,0,0.0,0
791,68,test,"Give me the spouse of the spouse, that is a royalty, of the reference to Emperor Takakura and father of the child, that is a royalty, of Emperor Takakura and predecessor of the child of the child, that is an office holder and a royalty, of Emperor Go-Shirakawa.","SELECT ?result WHERE { ?v4 <http://dbpedia.org/ontology/spouse> ?v5 . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v3 <http://dbpedia.org/property/father> ?result . ?v0 <http://dbpedia.org/ontology/parent> <http://dbpedia.org/resource/Emperor_Go-Shirakawa> . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v5 <http://xmlns.com/foaf/0.1/name> ""Emperor Takakura""@en . ?v7 <http://dbpedia.org/property/father> ?v0 . ?result <http://dbpedia.org/ontology/spouse> ?v4 . ?result <http://dbpedia.org/ontology/successor> ?v7 . ?v3 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Emperor_Takakura> . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. }","```sparql
SELECT ?spouseOfSpouse WHERE {
  # Step 1: Identify Emperor Takakura's spouse
  dbpedia:Emperor_Takakura dbo:spouse ?empressTakakura .

  # Step 2: Find the child of Emperor Takakura and his spouse who is royalty
  ?child dbp:father dbpedia:Emperor_Takakura ;
        dbp:mother ?empressTakakura ;
        rdf:type dbo:Monarch .

  # Step 3: Determine the predecessor of this child
  ?predecessor dbo:successor ?child .

  # Step 4: Identify the child of this predecessor
  ?grandChild dbp:father ?predecessor ;
              rdf:type dbo:Monarch .

  # Step 5: Find the spouse of this grandChild who is both an office holder and royalty
  ?grandChild dbo:spouse ?spouseOfSpouse .
  ?spouseOfSpouse rdf:type dbo:Monarch ;
                  dbo:officeHolder dbpedia:Office_Holder .
}
```",8,12,9,3,3,3,3,71,0,0,1,0,0.0,0
976,71,test,"Give me the office of the person born as the birth name of Naci Bostancı and office of the mayor, that is a politician and an office holder and Turkish, of the reference, that is an organisation and a political party and Turkish, to Millet İttifakı and office of the leader, that is a politician, of the administration, that is an organisation, of Kemal Kılıçdaroğlu.","SELECT ?result WHERE { ?v5 <http://dbpedia.org/ontology/nationality> <http://dbpedia.org/resource/Turkey>. ?v8 <http://dbpedia.org/property/birthName> ?v7 . ?v4 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Turkey>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?v8 <http://dbpedia.org/property/office> ?result . ?v1 <http://dbpedia.org/ontology/leader> ?v2 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v5 <http://dbpedia.org/property/office> ?result . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?v1 <http://dbpedia.org/property/leader> <http://dbpedia.org/resource/Kemal_Kılıçdaroğlu> . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/PoliticalParty>. ?v4 <http://xmlns.com/foaf/0.1/name> ""Millet İttifakı""@en . <http://dbpedia.org/resource/Naci_Bostancı> <http://dbpedia.org/property/birthName> ?v7 . ?v4 <http://dbpedia.org/property/leader> ?v5 . ?v2 <http://dbpedia.org/property/office> ?result . }","```sparql
# Step 1: Find Naci Bostancı's birth name
SELECT ?birthName WHERE {
  dbpedia-tr:Naci_Bostancı dbo:birthName ?birthName .
}

# Step 2: Find the office held by the person with that birth name
SELECT DISTINCT ?office WHERE {
  ?person foaf:name ?birthName .
  ?person dbo:occupation ?office .
  FILTER(?office IN (dbpedia-tr:Politician, dbpedia-tr:OfficeHolder))
} LIMIT 1

# Step 3: Identify Millet İttifakı and its leader
SELECT DISTINCT ?leader WHERE {
  dbpedia-tr:Millet_İttifakı dbo:leader ?leader .
}

# Step 4: Determine Kemal Kılıçdaroğlu's role in his administration
SELECT DISTINCT ?office WHERE {
  dbpedia-tr:Kemal_Kılıçdaroğlu dbo:occupation ?office .
  FILTER(?office IN (dbpedia-tr:Politician, dbpedia-tr:OfficeHolder))
}
```",9,17,10,3,3,3,3,71,0,0,1,0,0.0,0
582,65,test,"Give me the figure known as the nickname of Japan national football team and reference to the residence of Hirotaka Sugawara and player in the father, that is an athlete and a soccer manager and a sports manager, of the child of Kazuaki Nagasawa.",SELECT ?result WHERE { ?v6 <http://dbpedia.org/ontology/team> ?result . ?v6 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Athlete>. ?v6 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerManager>. <http://dbpedia.org/resource/Japan_national_football_team> <http://dbpedia.org/property/nickname> ?v3 . ?v0 <http://dbpedia.org/property/father> ?v6 . ?v6 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsManager>. ?result <http://dbpedia.org/property/nickname> ?v3 . <http://dbpedia.org/resource/Hirotaka_Sugawara> <http://dbpedia.org/property/residence> ?v4 . ?v0 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Kazuaki_Nagasawa> . ?result <http://xmlns.com/foaf/0.1/name> ?v4 . },"```sparql
# Step 1: Find the nickname of Japan National Football Team
SELECT ?nickname WHERE {
  ?team dcterms:title ""Japan national football team""@en .
  ?team dbo:nickname ?nickname .
}

# Step 2: Find Hirotaka Sugawara's residence
SELECT ?residence WHERE {
  ?person foaf:name ""Hirotaka Sugawara""@ja ;
          dbo:currentResidence ?residence .
}

# Step 3: Identify Kazuaki Nagasawa's father and his professions
SELECT ?father ?profession WHERE {
  ?nagasawa foaf:name ""Kazuaki Nagasawa""@ja ;
            dbo:parent ?father .
  OPTIONAL { ?father rdf:type dbo:Athlete . }
  OPTIONAL { ?father rdf:type dbo:SoccerManager . }
  OPTIONAL { ?father rdf:type dbo:SportsManager . }
}

# Step 4: Connect all pieces to identify the figure
SELECT DISTINCT ?figure WHERE {
  # Assuming we have found the nickname, residence, and father's details in previous steps
  VALUES (?nickname) {""Bashamichi Boys""@en} # Example value from step 1
  VALUES (?residence) {<http://dbpedia.org/resource/SomeResidence>} # Placeholder for actual result
  VALUES (?father) {<http://dbpedia.org/resource/FatherName>} # Placeholder for actual result

  ?figure dbo:nickname ?nickname ;
          dbo:currentResidence ?residence ;
          dbo:parent ?father .
}
```",7,10,8,3,3,3,3,71,0,0,1,0,0.0,0
216,66,test,"Give me the player in the coach, that is a soccer player and a sports manager and a soccer manager, of Bosnia and Herzegovina national under-18 football team and player in the coach of Croatia national under-21 football team and team of the person born, that is a sports manager and a soccer manager and a soccer player, on the death of Pavel Vezhinov.",SELECT ?result WHERE { ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsManager>. <http://dbpedia.org/resource/Croatia_national_under-21_football_team> <http://dbpedia.org/ontology/coach> ?v3 . ?v6 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerPlayer>. ?v3 <http://dbpedia.org/ontology/team> ?result . <http://dbpedia.org/resource/Pavel_Vezhinov> <http://dbpedia.org/ontology/deathDate> ?v1 . ?v6 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerManager>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerPlayer>. <http://dbpedia.org/resource/Bosnia_and_Herzegovina_national_under-18_football_team> <http://dbpedia.org/ontology/coach> ?v6 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerManager>. ?v6 <http://dbpedia.org/ontology/team> ?result . ?v6 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsManager>. ?result <http://dbpedia.org/ontology/coach> ?v2 . ?v2 <http://dbpedia.org/ontology/birthDate> ?v1 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT DISTINCT ?person WHERE {
  ?person a dbo:SoccerPlayer .
  ?person a dbo:SportsManager .

  # Involvement with Bosnia and Herzegovina national under-18 football team
  ?team1 dbr:Bosnia_and_Herzegovina_national_under-18_football_team ;
         dbo:player ?person ;
         dbo:coach ?person .
  
  # Involvement with Croatia national under-21 football team
  ?team2 dbr:Croatia_national_under-21_football_team ;
         dbo:player ?person ;
         dbo:coach ?person .

  # Person associated with someone born on Pavel Vezhinov's death date (March 3, 2011)
  ?relatedPerson dbp:birthday ""2011-03-03""^^xsd:date .
  ?person dbo:team ?relatedTeam .
  ?relatedTeam dbo:player ?relatedPerson ;
              dbo:coach ?relatedPerson .
}
```",7,13,8,3,3,3,3,71,0,0,1,0,0.0,0
281,27,test,"Give me the awardee of the award of Alfred Warden and commander in New Guinea campaign and awardee of the award, that is a military conflict, of Lawrence Moore Cosgrave.",SELECT ?result WHERE { <http://dbpedia.org/resource/Alfred_Warden> <http://dbpedia.org/property/awards> ?v0 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. <http://dbpedia.org/resource/Lawrence_Moore_Cosgrave> <http://dbpedia.org/property/awards> ?v3 . ?result <http://dbpedia.org/property/awards> ?v3 . <http://dbpedia.org/resource/New_Guinea_campaign> <http://dbpedia.org/ontology/commander> ?result . ?result <http://dbpedia.org/property/awards> ?v0 . },"```sparql
SELECT ?awardee1 ?campaign ?awardee2 ?conflict WHERE {
  # Find the awardee of the Alfred Warden Medal who was a commander in the New Guinea campaign
  ?award1 dcterms:isPartOf <http://dbpedia.org/resource/Alfred_Ward_Medal> .
  ?award1 dbo:recipient ?awardee1 .
  ?awardee1 dbo:occupation ""Commander""@en .
  ?awardee1 dbo:wikiPageRedirects ?campaign .
  ?campaign rdfs:label ""New Guinea campaign""@en .

  # Find the military conflict associated with Lawrence Moore Cosgrave's award
  ?award2 dbo:recipient <http://dbpedia.org/resource/Lawrence_Moore_Cosgrave> .
  ?award2 dcterms:isPartOf ?conflict .
  ?conflict rdfs:label ?conflictLabel .
  
  FILTER (lang(?conflictLabel) = ""en"")
}
```",5,6,6,2,3,2,3,28,0,0,1,0,0.0,0
236,19,test,"Give me the party member of the administration of the reference, that is an office holder and a politician, to James Madison and party member of the administration, that is an organisation, of John Adams.","SELECT ?result WHERE { ?v4 <http://dbpedia.org/property/leader> ?v0 . ?v2 <http://dbpedia.org/property/leader> <http://dbpedia.org/resource/John_Adams> . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v0 <http://xmlns.com/foaf/0.1/name> ""James Madison""@en . ?result <http://dbpedia.org/ontology/party> ?v2 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?result <http://dbpedia.org/ontology/party> ?v4 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. }","```sparql
# Query to find the political party of James Madison
SELECT ?party WHERE {
  wd:Q937 ?p ?o .
  ?o wdt:P102 ?party .
  FILTER (strstarts(str(?party), ""http://dbpedia.org/resource/""))
}

UNION

# Query to find the political party or organization associated with John Adams
SELECT ?organization WHERE {
  wd:Q424 ?p ?o .
  ?o wdt:P102 ?organization .
  FILTER (strstarts(str(?organization), ""http://dbpedia.org/resource/""))
}
```",5,8,6,3,2,3,2,20,0,0,19,0,0.0,0
826,59,test,"Give me the successor of the child, that is a royalty, of the reference, that is a royalty, to Louis I and spouse of the child of the father of Anna Magdalena Appel.","SELECT ?result WHERE { ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v0 <http://xmlns.com/foaf/0.1/name> ""Louis I""@en . ?v0 <http://dbpedia.org/ontology/child> ?v5 . ?v5 <http://dbpedia.org/ontology/successor> ?result . <http://dbpedia.org/resource/Anna_Magdalena_Appel> <http://dbpedia.org/property/father> ?v3 . ?v2 <http://dbpedia.org/ontology/spouse> ?result . ?v2 <http://dbpedia.org/property/father> ?v3 . }","```sparql
SELECT ?successor WHERE {
  # Step 1: Identify Anna Magdalena Appel's father
  dbpedia:Anna_Magdalena_Bach dbo:father ?father .

  # Step 2: Find the child of her father
  ?child dbo:parent ?father .
  
  # Step 3: Determine the spouse of this child
  ?spouse dbo:spouse ?child .

  # Step 4: Identify the reference royalty related to Louis I
  dbpedia:Louis_I_of_Bavaria dbo:referenceRoyalty ?referenceRoyalty .

  # Step 5: Find the child of this reference royalty that is also a royalty
  ?royalChild dbo:parent ?referenceRoyalty .
  ?royalChild rdf:type dbo:RoyalFamilyMember .

  # Step 6: Determine the successor of this royal child
  ?royalChild dbo:successor ?successor .
}
```",6,8,7,3,2,3,3,71,0,0,1,0,0.0,0
170,26,test,Give me the entity in the work of International Energy Agency and birth place of Era Ziganshina and domain of the profession of John Scholey.,SELECT ?result WHERE { <http://dbpedia.org/resource/John_Scholey> <http://dbpedia.org/property/occupation> ?v1 . ?result <http://dbpedia.org/ontology/country> ?v2 . ?result <http://dbpedia.org/ontology/leaderTitle> ?v1 . ?v2 <http://dbpedia.org/property/author> <http://dbpedia.org/resource/International_Energy_Agency> . <http://dbpedia.org/resource/Era_Ziganshina> <http://dbpedia.org/ontology/birthPlace> ?result . },"```sparql
# Query for an entity associated with the International Energy Agency
SELECT ?entity WHERE {
  ?entity dbo:organization dbpedia:International_Energy_Agency .
}

UNION

# Query for the birthplace of Era Ziganshina
SELECT ?birthPlace WHERE {
  dbpedia:Era_Ziganshina dbo:birthPlace ?birthPlace .
}

UNION

# Query for the domain of John Scholey's profession
SELECT ?domain WHERE {
  ?scholey foaf:name ""John Scholey"" .
  ?scholey dbo:occupation ?occupation .
  ?occupation dbo:fieldOfStudyOrDomain ?domain .
}
```",5,5,6,2,3,2,3,28,0,0,1,0,0.0,0
456,65,test,"Give me the spouse of the actor of Pacific Drive and professional in the alter ego of the reference, that is a fictional character, to Lamont Cranston (radio, film and television) and band of the band, that is a musical artist, of Dean Brody.","SELECT ?result WHERE { ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. <http://dbpedia.org/resource/Dean_Brody> <http://dbpedia.org/ontology/associatedMusicalArtist> ?v3 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/FictionalCharacter>. ?result <http://dbpedia.org/property/occupation> ?v6 . ?v0 <http://xmlns.com/foaf/0.1/name> ""Lamont Cranston (radio, film and television)""@en . ?v3 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v0 <http://dbpedia.org/property/alterEgo> ?v6 . ?v4 <http://dbpedia.org/ontology/spouse> ?result . <http://dbpedia.org/resource/Pacific_Drive> <http://dbpedia.org/property/starring> ?v4 . }","```sparql
# Step 1: Get the actor of ""Pacific Drive""
SELECT ?actor WHERE {
  ?movie dcterms:title ""Pacific Drive""@en .
  ?movie dbo:starring ?actor .
}

# Step 2: Get actors associated with Lamont Cranston/The Shadow
SELECT ?shadowActor WHERE {
  ?character rdfs:label ""Lamont Cranston""@en ;
             dbo:alterEgo ?shadowCharacter .
  ?shadowCharacter rdfs:label ""The Shadow""@en .
  ?appearance dbo:actor ?shadowActor .
}

# Step 3: Get the band of Dean Brody
SELECT ?band WHERE {
  ?musician foaf:name ""Dean Brody""@en ;
            dbo:memberOfBand ?band .
}

# Step 4: Find the spouse of the actor who fits both criteria and is in Dean Brody's band
SELECT DISTINCT ?spouse WHERE {
  VALUES (?actor) { 
    # Replace with actual results from steps 1 and 2
    (URI_of_actor_from_Pacific_Drive)
    (URI_of_shadowActor)
  }
  
  ?band dbo:member ?musician .
  FILTER(?musician = URI_of_Deans_band_member)

  ?actor foaf:mbox ?email .
  ?person dbo:spouse ?actor ;
          foaf:mbox ?email .
  BIND(?person AS ?spouse)
}
```

Note: The placeholders like `URI_of_actor_from_Pacific_Drive`, `URI_of_shadowActor`, and `URI_of_Deans_band_member` need to be replaced with actual URIs obtained from the results of the previous queries.",7,9,8,3,3,3,3,71,0,0,1,0,0.0,0
791,63,test,"Give me the spouse of the spouse, that is a royalty, of the reference to Emperor Takakura and father of the child, that is a royalty, of Emperor Takakura and predecessor of the child of Emperor Takakura.","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/spouse> ?v3 . ?v2 <http://dbpedia.org/property/father> ?result . ?result <http://dbpedia.org/ontology/successor> ?v6 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v2 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Emperor_Takakura> . ?v6 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Emperor_Takakura> . ?v4 <http://xmlns.com/foaf/0.1/name> ""Emperor Takakura""@en . ?v3 <http://dbpedia.org/ontology/spouse> ?v4 . }","```sparql
SELECT ?result WHERE {
  # Step 1: Identify Emperor Takakura
  ?emperor rdfs:label ""Emperor Takakura""@en .
  
  # Step 2: Find his spouse
  ?spouse dbo:spouse ?emperor .

  # Step 3: Spouse's spouse who is a royalty
  ?royalSpouse dbo:spouse ?spouse .
  ?royalSpouse rdf:type dbo:Monarch .

  # Step 4: Emperor Takakura's child who is a royalty
  ?child dbo:parent ?emperor .
  ?child rdf:type dbo:Monarch .

  # Step 5: Predecessor of the child
  ?predecessor dbo:successor ?child .

  # Return the result
  BIND(?royalSpouse AS ?result)
}
```",7,9,8,3,3,3,3,71,0,0,1,0,0.0,0
417,63,test,"Give me the child of the father of Frederick IX of Denmark and spouse of the parent, that is a royalty, of the child of Knud, Hereditary Prince of Denmark and child of the child, that is a royalty, of Frederick Francis III, Grand Duke of Mecklenburg-Schwerin.","SELECT ?result WHERE { <http://dbpedia.org/resource/Frederick_IX_of_Denmark> <http://dbpedia.org/property/father> ?v6 . ?result <http://dbpedia.org/property/father> ?v6 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?result <http://dbpedia.org/ontology/parent> ?v2 . ?v4 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Knud,_Hereditary_Prince_of_Denmark> . ?v2 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Frederick_Francis_III,_Grand_Duke_of_Mecklenburg-Schwerin> . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v3 <http://dbpedia.org/ontology/child> ?v4 . ?result <http://dbpedia.org/ontology/spouse> ?v3 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?person WHERE {
  # Frederick IX's father
  dbr:Frederick_IX_of_Denmark dbo:father dbr:Christian_X_of_Denmark .
  
  # Christian X's spouse
  dbr:Christian_X_of_Denmark dbo:spouse dbr:Alexandrine_of_Mecklenburg-Schwerin .

  # Knud, Hereditary Prince of Denmark's child
  dbr:Knud,_Hereditary_Prince_of_Denmark dbo:child ?benedikte .
  
  # Princess Benedikte's child
  ?benedikte dbo:child ?joachim .
  
  # Frederick Francis III's child
  dbr:Frederick_Francis_III,_Grand_Duke_of_Mecklenburg-Schwerin dbo:child dbr:Cecilie_of_Mecklenburg-Schwerin .

  # Princess Cecilie's child
  dbr:Cecilie_of_Mecklenburg-Schwerin dbo:child ?margretheII .
  
  # Check if the person is a royalty and matches both conditions
  ?person dbo:spouse dbr:Alexandrine_of_Mecklenburg-Schwerin ;
          dbo:parent ?margretheII .

  FILTER (STRSTARTS(STR(?person), ""http://dbpedia.org/resource/Queen_Margrethe_II_of_Denmark""))
}
```",7,9,8,3,3,3,3,71,0,0,1,0,0.0,0
124,63,test,"Give me the commander in the war, that is a societal event and a military conflict, of the reference, that is Australian and an organisation and a military unit, to 'A' Battery, Royal Australian Artillery and military force of the war, that is an event and a military conflict and a societal event, of Frank Rhodes (British Army officer) and military force of the force, that is a societal event and a military conflict, of Herbert Kitchener, 1st Earl Kitchener.","SELECT ?result WHERE { ?v4 <http://xmlns.com/foaf/0.1/name> ""'A' Battery, Royal Australian Artillery""@en . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryUnit>. ?result <http://dbpedia.org/ontology/battle> ?v6 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?v6 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. <http://dbpedia.org/resource/Frank_Rhodes_(British_Army_officer)> <http://dbpedia.org/ontology/battle> ?v6 . ?v4 <http://dbpedia.org/ontology/battle> ?v3 . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?v3 <http://dbpedia.org/ontology/commander> ?result . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v6 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v2 <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Herbert_Kitchener,_1st_Earl_Kitchener> . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v6 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?v4 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Australia>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?result <http://dbpedia.org/ontology/battle> ?v2 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?commander WHERE {
  ?war a dbo:MilitaryConflict ;
      dbo:participatingMilitaryUnit dbr:A_Battery,_Royal_Australian_Artillery ;
      dbo:commander ?commander .
  
  ?frankRhodes dbo:militaryForce ?war .
  FILTER (str(?frankRhodes) = ""Frank Rhodes (British Army officer)"")

  ?kitchener dbo:militaryForce ?war .
  FILTER (str(?kitchener) = ""Herbert Kitchener, 1st Earl Kitchener"")

  ?australianUnit a dbo:MilitaryUnit ;
                 dbo:country dbr:Australia ;
                 dbo:militaryConflict ?war .

  ?commander dbo:nationality dbr:Australia .
}
```",7,17,8,3,3,3,3,71,0,0,9,0,0.0,0
456,62,test,"Give me the band of Alan Doyle and professional in the alter ego of the reference, that is a fictional character, to Lamont Cranston (radio, film and television) and spouse of the actor of the movie, that is a work and a television show, with Ross Newton.","SELECT ?result WHERE { ?v4 <http://dbpedia.org/property/starring> <http://dbpedia.org/resource/Ross_Newton> . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?v0 <http://xmlns.com/foaf/0.1/name> ""Lamont Cranston (radio, film and television)""@en . ?result <http://dbpedia.org/property/occupation> ?v6 . ?v3 <http://dbpedia.org/ontology/spouse> ?result . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/FictionalCharacter>. ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/TelevisionShow>. <http://dbpedia.org/resource/Alan_Doyle> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v0 <http://dbpedia.org/property/alterEgo> ?v6 . ?v4 <http://dbpedia.org/property/starring> ?v3 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?band ?alterEgo ?spouse WHERE {
  # Alan Doyle's band
  VALUES ?band { dbr:Great_Big_Sea }
  
  # Lamont Cranston's alter ego
  VALUES ?alterEgo { dbr:The_Shadow_(radio_character) }

  # Ross Newton's spouse in a movie and TV show
  ?actor dbo:spouse ?spouse .
  ?actor dbo:role ?role .
  ?role dbo:title ?title .
  
  FILTER EXISTS {
    ?title dbo:starring dbr:Ross_Newton .
  }
  
  FILTER (?spouse = dbr:Betty_Ross)
}
```",7,10,8,3,3,3,3,71,0,0,1,0,0.0,0
417,68,test,"Give me the spouse of the parent, that is a royalty, of the child of Knud, Hereditary Prince of Denmark and child of the child, that is a royalty, of Frederick Francis III, Grand Duke of Mecklenburg-Schwerin and child of the father of the leader, that is a royalty, of Colony of Greenland.","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/spouse> ?v4 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?result <http://dbpedia.org/ontology/parent> ?v3 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?result <http://dbpedia.org/property/father> ?v7 . ?v5 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Knud,_Hereditary_Prince_of_Denmark> . ?v4 <http://dbpedia.org/ontology/child> ?v5 . <http://dbpedia.org/resource/Colony_of_Greenland> <http://dbpedia.org/property/leader> ?v0 . ?v3 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Frederick_Francis_III,_Grand_Duke_of_Mecklenburg-Schwerin> . ?v0 <http://dbpedia.org/property/father> ?v7 . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. }","```sparql
SELECT ?spouse WHERE {
  # Step 1: Find Knud's child who is royalty
  ?knudsChild dbo:childOf dbr:Knud,_Hereditary_Prince_of_Denmark ;
             rdf:type dbo:RoyalFamilyMember .

  # Step 2: Identify the parent of that child (who must be royalty)
  ?parent dbo:spouse ?knudsChild ;
          rdf:type dbo:RoyalFamilyMember .

  # Step 3: Find Frederick Francis III's grandchild who is royalty
  ?frederickChild dbo:childOf dbr:Frederick_Francis_III,_Grand_Duke_of_Mecklenburg-Schwerin ;
                  rdf:type dbo:RoyalFamilyMember .
  
  ?grandchild dbo:childOf ?frederickChild ;
              rdf:type dbo:RoyalFamilyMember .

  # Ensure the parent from step 2 is the same as the grandchild from step 3
  FILTER (?parent = ?grandchild)

  # Step 4: Identify the leader of Colony of Greenland and their father
  ?greenlandLeader dbo:leaderOf dbr:Colony_of_Greenland ;
                   rdf:type dbo:RoyalFamilyMember .
  
  ?father dbo:spouse ?greenlandLeader .

  # Ensure the parent from step 2 is also connected to the leader's father
  FILTER (?parent = ?father)

  # Step 5: Find the spouse of the identified royalty (from step 2)
  ?parent dbo:spouse ?spouse .
}
```",8,11,9,3,3,3,3,71,0,0,1,0,0.0,0
839,65,test,"Give me the band of the person born, that is a musical artist, as Kevin Richard Russell and band of the member of the band, that is a band and a group, of Peter Schorowsky and band of the band, that is a musical artist, of Charlie Huhn.","SELECT ?result WHERE { ?v4 <http://dbpedia.org/property/birthName> ""Kevin Richard Russell""@en . ?result <http://dbpedia.org/ontology/bandMember> ?v6 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Group>. ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. <http://dbpedia.org/resource/Charlie_Huhn> <http://dbpedia.org/ontology/associatedMusicalArtist> ?v3 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?v0 <http://dbpedia.org/ontology/bandMember> ?v6 . ?result <http://dbpedia.org/ontology/bandMember> ?v3 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Band>. <http://dbpedia.org/resource/Peter_Schorowsky> <http://dbpedia.org/ontology/associatedMusicalArtist> ?v0 . ?v4 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . }","```sparql
# Query for Kevin Richard Russell (The Gourds)
SELECT ?band WHERE {
  ?person dbo:birthName ""Kevin Richard Russell""@en .
  ?person dbo:associatedBand ?band .
  FILTER EXISTS { ?band a dbo:MusicalArtist }
}

UNION

# Query for Peter Schorowsky (Scorpions)
SELECT ?band WHERE {
  ?person rdfs:label ""Peter Baltes""@en .
  ?person dbo:memberOf ?group .
  ?group dbo:associatedBand ?band .
  FILTER EXISTS { ?band a dbo:MusicalArtist }
}

UNION

# Query for Charlie Huhn (Humble Pie, Ted Nugent's band)
SELECT ?band WHERE {
  ?person rdfs:label ""Charlie Huhn""@en .
  ?person dbo:memberOf ?group .
  ?group dbo:associatedBand ?band .
  FILTER EXISTS { ?band a dbo:MusicalArtist }
}
```",7,11,8,3,3,3,3,71,0,0,1,0,0.0,0
124,65,test,"Give me the military force of the force, that is a societal event and a military conflict, of Herbert Kitchener, 1st Earl Kitchener and commander in the war, that is a societal event and a military conflict, of A Field Battery, Royal Australian Artillery and military force of the war, that is an event and a military conflict and a societal event, of the awardee of British South Africa Company Medal.","SELECT ?result WHERE { ?v4 <http://dbpedia.org/ontology/commander> ?result . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v3 <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Herbert_Kitchener,_1st_Earl_Kitchener> . ?result <http://dbpedia.org/ontology/battle> ?v3 . ?v6 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?v6 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?v0 <http://dbpedia.org/ontology/battle> ?v6 . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?result <http://dbpedia.org/ontology/battle> ?v6 . <http://dbpedia.org/resource/A_Field_Battery,_Royal_Australian_Artillery> <http://dbpedia.org/ontology/battle> ?v4 . ?v6 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v0 <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/British_South_Africa_Company_Medal> . }","```sparql
SELECT ?militaryForce WHERE {
  ?kitchener dbo:occupation dbr:Military_person ;
             foaf:name ""Herbert Kitchener"" .
  
  ?boerWar dbo:commander ?kitchener ;
           rdf:type dbo:Military_conflict .

  ?australianBattery dbo:militaryConflict ?boerWar ;
                     rdf:type dbo:Military_unit ;
                     foaf:name ""A Field Battery, Royal Australian Artillery"" .

  ?medalAwardedTo dbo:recipient ?awardee .
  ?awardee dbo:award dbr:British_South_Africa_Company_Medal .
  
  ?boerWar dbo:militaryForce ?militaryForce ;
           rdf:type dbo:Military_conflict .
}
```",7,14,8,3,3,3,3,71,0,0,9,0,0.0,0
715,58,test,"Give me the commander in the force of Francisco Largo Caballero and commander in Rif War and leader of the office, that is a government agency and an organisation, of the reference to Carlos Franco Iribarnegaray.","SELECT ?result WHERE { ?v5 <http://dbpedia.org/ontology/commander> ?result . ?v1 <http://xmlns.com/foaf/0.1/name> ""Carlos Franco Iribarnegaray""@en . <http://dbpedia.org/resource/Rif_War> <http://dbpedia.org/ontology/commander> ?result . ?v1 <http://dbpedia.org/property/office> ?v2 . ?v5 <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Francisco_Largo_Caballero> . ?v2 <http://dbpedia.org/ontology/leader> ?result . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/GovernmentAgency>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. }","```sparql
SELECT ?person WHERE {
  ?person dbo:spouse ?franciscoLargoCaballero .
  ?person dbo:occupation ""Military commander""@en .
  ?rifWar dbo:commander ?person ;
          dbo:name ""Rif War""@en .
  ?office dbo:leader ?person ;
          a dbo:GovernmentAgency ;
          dbo:reference ?carlosFrancoIribarnegaray .
}
```",6,8,7,3,3,3,3,71,0,0,1,0,0.0,0
212,9,test,"Give me the birthplace of the professional, that is a musical artist and an artist, in Singer, rapper, CEO, Facilities and Project Manager and birthplace of the professional in .","SELECT ?result WHERE { ?v3 <http://dbpedia.org/ontology/birthPlace> ?result . ?v1 <http://dbpedia.org/ontology/birthPlace> ?result . ?v3 <http://dbpedia.org/property/occupation> """"@en . ?v1 <http://dbpedia.org/property/occupation> ""Singer, rapper, CEO, Facilities and Project Manager""@en . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>

SELECT DISTINCT ?person ?birthPlace WHERE {
  ?person rdf:type dbo:Singer .
  ?person rdf:type dbo:Rapper .
  ?person dbo:occupation dbo:Artist .
  ?person dbo:occupation dbo:ChiefExecutiveOfficer .
  ?person dbo:occupation dbo:FacilitiesAndProjectManager .
  ?person dbo:birthPlace ?birthPlace .
}
```",4,6,5,2,2,2,2,9,0,0,1,0,0.0,0
791,66,test,"Give me the spouse of the spouse, that is a royalty, of Emperor Takakura and predecessor of the child of Emperor Takakura and father of the child, that is a royalty, of the father, that is a royalty and an office holder, of Emperor Antoku.",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/successor> ?v6 . <http://dbpedia.org/resource/Emperor_Antoku> <http://dbpedia.org/property/father> ?v1 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v6 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Emperor_Takakura> . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v3 <http://dbpedia.org/ontology/spouse> <http://dbpedia.org/resource/Emperor_Takakura> . ?result <http://dbpedia.org/ontology/spouse> ?v3 . ?v2 <http://dbpedia.org/property/father> ?v1 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v2 <http://dbpedia.org/property/father> ?result . },"```sparql
SELECT ?spouse WHERE {
  # Emperor Takakura and his spouse
  wd:Q12345 wdt:P26 ?spouse1 . # Emperor Takakura's spouse

  # Spouse of the spouse (Emperor Takakura himself)
  ?spouse1 wdt:P26 wd:Q12345 .

  # Predecessor of Emperor Antoku (child of Takakura and Tokuko)
  wd:Q12345 wdt:P31/wdt:P279* wd:Q43219 . # Emperor Takakura is a monarch
  wd:Q12345 wdt:P22 ?antoku . # Child of Takakura
  ?antoku wdt:P31/wdt:P279* wd:Q43219 . # Antoku is a monarch
  ?antoku wdt:P65 ?predecessor . # Predecessor of Antoku

  # Father of the child (Emperor Takakura)
  ?antoku wdt:P22 wd:Q12345 .

  # Royalty and office holder of Emperor Antoku's father
  ?takakura wdt:P31/wdt:P279* wd:Q43219 . # Takakura is a monarch
  ?takakura wdt:P39 ?officeHolder . # Office holder

  # Father of Emperor Antoku (Emperor Takakura)
  ?antoku wdt:P22 ?father .

  # Spouse of the father (Emperor Go-Shirakawa's spouse)
  ?predecessor wdt:P26 ?spouse .
}
```",7,11,8,3,3,3,3,71,0,0,1,0,0.0,0
507,69,test,"Give me the professional in the profession of the person born on 1966-02-18 and spouse of the person born as the birth name of Anne V. Coates and director of the movie, that is a movie and a work, with Beryl Reid.","SELECT ?result WHERE { ?result <http://dbpedia.org/property/occupation> ?v2 . ?v1 <http://dbpedia.org/ontology/birthDate> ""1966-02-18""^^<http://www.w3.org/2001/XMLSchema#date> . ?v1 <http://dbpedia.org/property/occupation> ?v2 . <http://dbpedia.org/resource/Anne_V._Coates> <http://dbpedia.org/property/birthName> ?v4 . ?v7 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?v7 <http://dbpedia.org/property/starring> <http://dbpedia.org/resource/Beryl_Reid> . ?v7 <http://dbpedia.org/ontology/director> ?result . ?result <http://dbpedia.org/ontology/spouse> ?v3 . ?v3 <http://dbpedia.org/property/birthName> ?v4 . ?v7 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Film>. }","```sparql
# Step 1: Find Anne V. Coates' birth name
SELECT ?birthName WHERE {
  ?anneVCoates dbp:birthName ?birthName .
  FILTER (str(?anneVCoates) = ""Anne_V._Coates"")
}

# Step 2: Find the director of a movie with Beryl Reid
SELECT ?director WHERE {
  ?movie dbo:starring ?berylReid ;
         dbo:director ?director .
  ?berylReid foaf:name ""Beryl Reid"" .
}

# Step 3: Determine the spouse of the person identified in Step 1
SELECT ?spouse WHERE {
  ?person dbp:birthName ?birthName .
  ?person dbo:spouse ?spouse .
  FILTER (str(?birthName) = ""<result_from_step_1>"")
}

# Step 4: Identify the profession of the person born on 1966-02-18
SELECT ?profession WHERE {
  ?person dbp:birthday ""1966-02-18""^^xsd:date ;
          dbo:occupation ?profession .
}

# Step 5: Find a professional in that same field
SELECT DISTINCT ?professional WHERE {
  ?professional dbo:occupation ?sameProfession .
  FILTER (str(?sameProfession) = ""<result_from_step_4>"")
}
```

Note: Replace `<result_from_step_1>` and `<result_from_step_4>` with the actual results obtained from executing the previous queries.",8,10,9,3,3,3,3,71,0,0,1,0,0.0,0
417,62,test,"Give me the child of Alexandrine of Mecklenburg-Schwerin and spouse of the parent, that is a royalty, of the child of Knud, Hereditary Prince of Denmark and child of the father of the leader, that is a royalty, of Colony of Greenland.","SELECT ?result WHERE { ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. <http://dbpedia.org/resource/Colony_of_Greenland> <http://dbpedia.org/property/leader> ?v0 . ?result <http://dbpedia.org/property/father> ?v6 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?result <http://dbpedia.org/ontology/spouse> ?v3 . ?v4 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Knud,_Hereditary_Prince_of_Denmark> . ?result <http://dbpedia.org/ontology/parent> <http://dbpedia.org/resource/Alexandrine_of_Mecklenburg-Schwerin> . ?v3 <http://dbpedia.org/ontology/child> ?v4 . ?v0 <http://dbpedia.org/property/father> ?v6 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?child ?spouse ?knudChild ?leaderFather ?royalty
WHERE {
  # Alexandrine of Mecklenburg-Schwerin's child
  dbr:Alexandrine_of_Mecklenburg-Schwerin dbo:child ?child .

  # Spouse of Alexandrine (Frederick VIII)
  dbr:Frederick_VIII_of_Denmark dbo:spouse ?spouse .

  # Knud, Hereditary Prince of Denmark's child
  dbr:Knud,_Hereditary_Prince_of_Denmark dbo:child ?knudChild .

  # Leader of Colony of Greenland (King of Denmark)
  ?leaderFather a dbo:Monarch ;
               dbo:country ?greenlandLeaderCountry .
  
  FILTER(?greenlandLeaderCountry = dbr:Greenland)

  # Find the royalty that connects these relationships
  ?royalty dbo:child ?knudChild ;
           dbo:parent ?spouse .

  # Ensure the person is a royalty
  ?royalty rdf:type dbo:Monarch .
}
```",7,9,8,3,3,3,3,71,0,0,1,0,0.0,0
926,59,test,Give me the father of the father of the spouse of Neşerek Kadın and successor of the child of the spouse of Şermi Kadın.,SELECT ?result WHERE { ?v4 <http://dbpedia.org/ontology/successor> ?result . ?v1 <http://dbpedia.org/property/father> ?result . ?v4 <http://dbpedia.org/property/father> ?v0 . <http://dbpedia.org/resource/Neşerek_Kadın> <http://dbpedia.org/ontology/spouse> ?v3 . ?v3 <http://dbpedia.org/property/father> ?v1 . ?v0 <http://dbpedia.org/ontology/spouse> <http://dbpedia.org/resource/Şermi_Kadın> . },"```sparql
SELECT ?fatherOfFather WHERE {
  # Step 1: Identify Neşerek Kadın's spouse
  ?neşerek_kadin dbo:spouse ?nesereks_spouse .
  
  # Step 2: Find the father of Neşerek Kadın's spouse
  ?nesereks_spouse dbo:father ?fatherOfSpouse .

  # Step 3: Identify Şermi Kadın's spouse
  ?sermi_kadin dbo:spouse ?sermis_spouse .
  
  # Step 4: Find the child of Şermi Kadın's spouse
  ?sermis_spouse dbo:child ?childOfSermisSpouse .

  # Step 5: Determine the successor of Şermi Kadın's spouse's child
  ?childOfSermisSpouse dbo:succeededBy ?successor .
  
  # Step 6: Identify the father of the successor
  ?successor dbo:father ?fatherOfSuccessor .

  # Return the father of the father of Neşerek Kadın's spouse (from step 2)
  ?fatherOfSpouse dbo:father ?fatherOfFather .
}
```",6,6,7,3,2,3,3,71,0,0,1,0,0.0,0
36,27,test,Give me the actor of Being Mrs Elliot and person born in the birth year of Deanne Bray and person born as the birth name of Ayo Makun.,SELECT ?result WHERE { ?result <http://dbpedia.org/property/birthName> ?v1 . <http://dbpedia.org/resource/Deanne_Bray> <http://dbpedia.org/ontology/birthYear> ?v2 . <http://dbpedia.org/resource/Being_Mrs_Elliot> <http://dbpedia.org/ontology/starring> ?result . <http://dbpedia.org/resource/Ayo_Makun> <http://dbpedia.org/property/birthName> ?v1 . ?result <http://dbpedia.org/ontology/birthYear> ?v2 . },"```sparql
# Step 1: Find the actor of ""Being Mrs Elliot""
SELECT ?actor WHERE {
  ?show dcterms:title ""Being Mrs Elliot""@en .
  ?show dbo:starring ?actor .
}

UNION

# Step 2: Determine Deanne Bray's birth year
SELECT ?birthYear WHERE {
  dbpedia:Deanne_Bray dbo:birthDate ?date .
  BIND(YEAR(?date) AS ?birthYear)
}

UNION

# Step 3: Identify Ayo Makun's birth name
SELECT ?birthName WHERE {
  dbpedia:Ayo_Makun foaf:name ?birthName .
}

UNION

# Step 4: Find a person who matches all criteria
SELECT DISTINCT ?person WHERE {
  # Actor of ""Being Mrs Elliot""
  ?show dcterms:title ""Being Mrs Elliot""@en .
  ?show dbo:starring ?actor .

  # Person born in the same year as Deanne Bray
  ?person dbo:birthDate ?date .
  BIND(YEAR(?date) AS ?birthYear)
  
  # Ayo Makun's birth name
  dbpedia:Ayo_Makun foaf:name ?birthName .

  FILTER (?actor = ?person && ?birthYear = ?deanneBirthYear && ?birthName = ?ayoBirthName)
}
```",5,5,6,2,3,2,3,28,0,0,1,0,0.0,0
926,60,test,"Give me the child of the father, that is a royalty, of the parent, that is a royalty, of Beyhan Sultan (daughter of Mustafa III) and father of the father of the spouse of Neşerek Kadın.",SELECT ?result WHERE { ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. <http://dbpedia.org/resource/Neşerek_Kadın> <http://dbpedia.org/ontology/spouse> ?v4 . ?v5 <http://dbpedia.org/property/father> ?v0 . <http://dbpedia.org/resource/Beyhan_Sultan_(daughter_of_Mustafa_III)> <http://dbpedia.org/ontology/parent> ?v5 . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v0 <http://dbpedia.org/ontology/child> ?result . ?v2 <http://dbpedia.org/property/father> ?result . ?v4 <http://dbpedia.org/property/father> ?v2 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?child WHERE {
    # Step 1: Beyhan Sultan's parent (Mustafa III)
    dbr:Beyhan_Sultan dbo:parent dbr:Mustafa_III .

    # Step 2: Neşerek Kadın's spouse
    ?neşerekKadin a dbo:Spouse ;
        dbo:spouse ?spouse .

    # Step 3: Father of Neşerek Kadın's spouse
    ?spouse dbo:father ?fatherOfSpouse .

    # Step 4: Mustafa III's children who are royalty and have a son matching the father from step 3
    dbr:Mustafa_III dbo:child ?royalChild .
    ?royalChild a dbo:Monarch ;
        dbo:son ?fatherOfSpouse .

    # Step 5: Child of this royal son
    ?royalChild dbo:child ?child .
}
```",6,8,7,3,2,3,3,71,0,0,1,0,0.0,0
124,56,test,"Give me the military force of Battle of Tamai and military force of the force, that is a societal event and a military conflict, of the person born on 1850-06-24 and commander in the war, that is a societal event and a military conflict, of A Field Battery, Royal Australian Artillery.","SELECT ?result WHERE { <http://dbpedia.org/resource/A_Field_Battery,_Royal_Australian_Artillery> <http://dbpedia.org/ontology/battle> ?v2 . ?result <http://dbpedia.org/ontology/battle> ?v1 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v0 <http://dbpedia.org/ontology/birthDate> ""1850-06-24""^^<http://www.w3.org/2001/XMLSchema#date> . ?v1 <http://dbpedia.org/ontology/commander> ?v0 . ?result <http://dbpedia.org/ontology/battle> <http://dbpedia.org/resource/Battle_of_Tamai> . ?v2 <http://dbpedia.org/ontology/commander> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. }","```sparql
# Query for Battle of Tamai military forces
SELECT ?battle ?force1 ?force2 WHERE {
  ?battle dbo:wikiPageRedirects db:Battle_of_Tamai .
  ?battle dbo:participatingMilitaryUnit ?unit1 .
  ?unit1 dbo:militaryConflict ?battle .
  ?unit1 rdfs:label ?force1 .
  FILTER (LANG(?force1) = ""en"")
  
  OPTIONAL {
    ?battle dbo:opposingMilitaryUnit ?unit2 .
    ?unit2 dbo:militaryConflict ?battle .
    ?unit2 rdfs:label ?force2 .
    FILTER (LANG(?force2) = ""en"")
  }
}

UNION

# Query for person born on 1850-06-24 and their military forces
SELECT ?person ?war ?commanderForce WHERE {
  ?person dbo:birthDate ?date .
  ?date dbo:day ""24""^^xsd:gDay ;
        dbo:month ""6""^^xsd:gMonth1 ;
        dbo:year ""1850""^^xsd:gYear .
  
  OPTIONAL {
    ?person dbo:occupation db:Military_person .
    ?war dbo:commander ?person .
    ?war rdfs:label ?conflictName .
    FILTER (LANG(?conflictName) = ""en"")
    
    ?unit dbo:militaryConflict ?war .
    ?unit rdfs:label ?commanderForce .
    FILTER (LANG(?commanderForce) = ""en"")
  }
}

UNION

# Query for A Field Battery, Royal Australian Artillery and their military forces
SELECT ?battery ?war ?force WHERE {
  ?battery rdfs:label ""A Field Battery, Royal Australian Artillery""@en .
  
  ?unit dbo:militaryConflict ?war .
  ?unit rdfs:subClassOf* db:Australian_Artillery_Battery .
  ?unit rdfs:label ?force .
  FILTER (LANG(?force) = ""en"")
}
```",6,10,7,3,3,3,3,71,0,0,1,0,0.0,0
874,20,test,"Give me the band of the band member of the band, that is an organisation, of Mark Read (singer) and band of the writer, that is an artist and a musical artist, of the work, that is a work, of Horace Andy.",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/bandMember> ?v5 . ?v1 <http://dbpedia.org/property/writer> <http://dbpedia.org/resource/Horace_Andy> . ?result <http://dbpedia.org/ontology/bandMember> ?v2 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?v4 <http://dbpedia.org/ontology/bandMember> <http://dbpedia.org/resource/Mark_Read_(singer)> . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?v1 <http://dbpedia.org/property/writer> ?v2 . ?v5 <http://dbpedia.org/ontology/associatedMusicalArtist> ?v4 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. },"```sparql
# Step 1: Identify Mark Read's Band
SELECT ?band WHERE {
  ?person dbo:birthName ""Mark Read""@en .
  ?person dbo:memberOfBand ?band .
  FILTER EXISTS { ?band a dbo:MusicalGroup . }
}

UNION

# Step 2: Find Horace Andy's Work
SELECT ?work WHERE {
  ?artist dbo:birthName ""Horace Andy""@en .
  ?artist dbo:recordedWork ?work .
  FILTER EXISTS { ?work a dbo:CreativeWork . }
}

UNION

# Step 3: Determine the Writer of That Work
SELECT ?writer WHERE {
  ?work dbo:creator ?writer .
  FILTER EXISTS { ?writer a dbo:Artist . }
  FILTER EXISTS { ?writer a dbo:MusicalArtist . }
}

UNION

# Step 4: Identify the Band of This Writer
SELECT ?band2 WHERE {
  ?writer dbo:memberOfBand ?band2 .
}
```",6,10,7,3,2,3,2,20,0,0,1,0,0.0,0
124,60,test,"Give me the commander in the war, that is a societal event and a military conflict, of the reference, that is Australian and an organisation and a military unit, to 'A' Battery, Royal Australian Artillery and military force of the force, that is a societal event and a military conflict, of the person born on 1850-06-24.","SELECT ?result WHERE { ?v0 <http://dbpedia.org/ontology/birthDate> ""1850-06-24""^^<http://www.w3.org/2001/XMLSchema#date> . ?result <http://dbpedia.org/ontology/battle> ?v1 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?v3 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Australia>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?v1 <http://dbpedia.org/ontology/commander> ?v0 . ?v2 <http://dbpedia.org/ontology/commander> ?result . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?v3 <http://dbpedia.org/ontology/battle> ?v2 . ?v3 <http://xmlns.com/foaf/0.1/name> ""'A' Battery, Royal Australian Artillery""@en . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryUnit>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?commander WHERE {
  # Step 1: Find the person born on 1850-06-24
  ?person dbo:birthday ""1850-06-24""^^xsd:date .
  
  # Step 2: Identify the military force associated with this person during a societal event and military conflict
  ?person dbo:militaryService ?militaryForce .
  ?militaryForce dbo:type dbr:Military_conflict .

  # Step 3: Find 'A' Battery, Royal Australian Artillery within this context
  ?unit dbo:name ""A Battery, Royal Australian Artillery"" ;
        dbo:partOf ?organisation .
  ?organisation dbo:country dbr:Australia ;
                a dbo:Military_unit .

  # Step 4: Determine the commander of the war involving these elements
  ?war dbo:type dbr:Military_conflict ;
       dbo:commander ?commander .
  
  FILTER(?militaryForce = ?unit)
}
```",6,13,7,3,2,3,3,71,0,0,9,0,0.0,0
456,60,test,"Give me the spouse of the actor of the movie, that is a work and a television show, with Ross Newton and band of the band, that is a musical artist, of the band of Alan Doyle.",SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v2 <http://dbpedia.org/ontology/spouse> ?result . ?v0 <http://dbpedia.org/ontology/associatedMusicalArtist> ?v1 . <http://dbpedia.org/resource/Alan_Doyle> <http://dbpedia.org/ontology/associatedMusicalArtist> ?v0 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?v3 <http://dbpedia.org/property/starring> <http://dbpedia.org/resource/Ross_Newton> . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?v3 <http://dbpedia.org/property/starring> ?v2 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/TelevisionShow>. },"```sparql
# Step 1: Find Alan Doyle's spouse
SELECT ?spouse WHERE {
  wd:Q123456 wdt:P26 ?spouse .
}

# Step 2: Identify Ross Newton's works that are both films and television shows
SELECT DISTINCT ?work WHERE {
  wd:Q789012 wdt:P136 ?filmType .
  FILTER (?filmType IN (wdt:P791, wdt:P154)) # P791 is film, P154 is TV series
  ?work wdt:P577 ?releaseDate . # Ensure it's a work with a release date
}

# Step 3: Find actors in those works
SELECT DISTINCT ?actor WHERE {
  ?work wdt:P161 ?actor .
}

# Step 4: Check if these actors are associated with any bands
SELECT DISTINCT ?band WHERE {
  ?actor wdt:P106 wd:Q33999 . # P106 is occupation, Q33999 is musician
  ?actor wdt:P46 ?band .
}

# Step 5: Find the spouse of the musician from that band
SELECT DISTINCT ?spouse WHERE {
  ?bandMember wdt:P46 ?band .
  ?bandMember wdt:P26 ?spouse .
}
```

Note: Replace `wd:Q123456` with Alan Doyle's DBpedia ID and `wd:Q789012` with Ross Newton's DBpedia ID. The actual IDs need to be looked up in the DBpedia database.",6,9,7,3,2,3,3,71,0,0,1,0,0.0,0
917,61,test,"Give me the child of the father of the spouse, that is a royalty, of Leleiohoku I and child of the father of the child, that is a royalty, of Kamehameha III.",SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. <http://dbpedia.org/resource/Kamehameha_III> <http://dbpedia.org/ontology/child> ?v3 . ?v3 <http://dbpedia.org/property/father> ?v0 . ?result <http://dbpedia.org/ontology/parent> ?v4 . ?result <http://dbpedia.org/property/father> ?v0 . ?v1 <http://dbpedia.org/property/father> ?v4 . ?v1 <http://dbpedia.org/ontology/spouse> <http://dbpedia.org/resource/Leleiohoku_I> . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT DISTINCT ?child1 ?child2 WHERE {
  # Step 1: Identify Leleiohoku I's spouse
  ?leleiohokuI dbo:spouse ?spouse .
  
  # Step 2: Find the father of Leleiohoku I's spouse
  ?spouse dbo:father ?fatherOfSpouse .

  # Step 3: Determine the child of this father that is royalty
  ?child1 dbo:parent ?fatherOfSpouse ;
         a dbo:Monarch .

  # Step 4: Identify Kamehameha III's child that is royalty
  ?kamehamehaIII dbo:child ?royalChild .
  
  # Filter to ensure the child is royalty
  FILTER EXISTS { ?royalChild a dbo:Monarch }

  # Step 5: Find the father of this royal child
  ?royalChild dbo:parent ?fatherOfRoyalChild .

  # Step 6: Determine the child of this father that is royalty
  ?child2 dbo:parent ?fatherOfRoyalChild ;
         a dbo:Monarch .
  
  # Ensure we are looking at Leleiohoku I and Kamehameha III specifically
  VALUES ?leleiohokuI { <http://dbpedia.org/resource/Leleiohoku_I> }
  VALUES ?kamehamehaIII { <http://dbpedia.org/resource/Kamehameha_III> }

}
```",6,8,7,3,2,3,3,71,0,0,3,0,0.0,0
417,65,test,"Give me the child of the father of the leader, that is a royalty, of Colony of Greenland and child of the child, that is a royalty, of Frederick Francis III, Grand Duke of Mecklenburg-Schwerin and spouse of the parent, that is a royalty, of Count Ingolf of Rosenborg.","SELECT ?result WHERE { ?v4 <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Count_Ingolf_of_Rosenborg> . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?result <http://dbpedia.org/ontology/parent> ?v3 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v3 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Frederick_Francis_III,_Grand_Duke_of_Mecklenburg-Schwerin> . <http://dbpedia.org/resource/Colony_of_Greenland> <http://dbpedia.org/property/leader> ?v0 . ?v0 <http://dbpedia.org/property/father> ?v6 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?result <http://dbpedia.org/ontology/spouse> ?v4 . ?result <http://dbpedia.org/property/father> ?v6 . }","```sparql
# Step 1: Identify the leader of the Colony of Greenland
SELECT ?leader WHERE {
  ?leader dbo:country dbr:Greenland .
  ?leader dbo:positionTitle ?title .
  FILTER(CONTAINS(LCASE(?title), ""leader"") || CONTAINS(LCASE(?title), ""ruler""))
}

# Step 2: Determine the father of that leader and his child who is royalty
SELECT ?child WHERE {
  ?father dbo:spouse ?mother .
  ?leader dbo:parent ?father .
  ?child dbo:parent ?father .
  ?child dbo:title ?royaltyTitle .
  FILTER(CONTAINS(LCASE(?royaltyTitle), ""king"") || CONTAINS(LCASE(?royaltyTitle), ""queen""))
}

# Step 3: Identify Frederick Francis III's child who is royalty
SELECT ?frederickChild WHERE {
  ?frederick dbr:Friedrich_Franz_III_of_Mecklenburg-Schwerin dbo:child ?frederickChild .
  ?frederickChild dbo:title ?royaltyTitle .
  FILTER(CONTAINS(LCASE(?royaltyTitle), ""king"") || CONTAINS(LCASE(?royaltyTitle), ""queen""))
}

# Step 4: Find the spouse of the parent who is royalty for Count Ingolf of Rosenborg
SELECT ?spouse WHERE {
  ?parent dbo:child dbr:Count_Ingolf_of_Rosenborg .
  ?parent dbo:title ?royaltyTitle .
  FILTER(CONTAINS(LCASE(?royaltyTitle), ""king"") || CONTAINS(LCASE(?royaltyTitle), ""queen""))
  ?parent dbo:spouse ?spouse .
}

# Step 5: Combine these relationships
SELECT DISTINCT ?finalChild WHERE {
  # Child of the father of the leader of Greenland who is royalty
  ?child1 dbo:parent ?fatherLeader .
  
  # Child of Frederick Francis III who is royalty
  ?frederickChild dbo:parent dbr:Friedrich_Franz_III_of_Mecklenburg-Schwerin .
  
  # Spouse of the parent who is royalty for Count Ingolf of Rosenborg
  ?spouse dbo:spouse ?parentIngolf .

  # Find the intersection where these individuals are related as described
  FILTER(?child1 = ?frederickChild && ?child1 = ?spouse)
}
```",7,10,8,3,3,3,3,71,0,0,1,0,0.0,0
47,58,test,"Give me the office of the awardee of the entity, that is an award, in India and office of Suvendu Adhikari and office of the awardee of Banga Bhushan.",SELECT ?result WHERE { ?v5 <http://dbpedia.org/property/office> ?result . <http://dbpedia.org/resource/Suvendu_Adhikari> <http://dbpedia.org/property/office> ?result . ?v5 <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/Banga_Bhushan> . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Award>. ?v2 <http://dbpedia.org/property/awards> ?v1 . ?v1 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/India> . ?v2 <http://dbpedia.org/property/office> ?result . },"```sparql
# Query to find an awardee of any award in India and their office
SELECT ?award ?awardee ?office WHERE {
  ?award dbo:country dbr:India .
  ?award dbo:recipient ?awardee .
  OPTIONAL { ?awardee dbo:office ?office . }
}

UNION

# Query to find Suvendu Adhikari's office
SELECT ?person ?office WHERE {
  ?person foaf:name ""Suvendu Adhikari""@en .
  ?person dbo:office ?office .
}

UNION

# Query to find the awardee of Banga Bhushan and their office
SELECT ?award ?awardee ?office WHERE {
  ?award foaf:name ""Banga Bhushan""@en .
  ?award dbo:recipient ?awardee .
  OPTIONAL { ?awardee dbo:office ?office . }
}
```",6,7,7,3,3,3,3,71,0,0,1,0,0.0,0
170,24,test,Give me the birth place of the awardee of People's Artist of Russia and domain of the profession of John Scholey.,SELECT ?result WHERE { ?v2 <http://dbpedia.org/ontology/birthPlace> ?result . <http://dbpedia.org/resource/John_Scholey> <http://dbpedia.org/property/occupation> ?v0 . ?v2 <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/People's_Artist_of_Russia> . ?result <http://dbpedia.org/ontology/leaderTitle> ?v0 . },"```sparql
# Query for birthplace of awardees of People's Artist of Russia
SELECT DISTINCT ?person ?birthPlace WHERE {
  ?person dbo:award dbpedia-ru:Народный_художник_Российской_Федерации .
  ?person dbo:birthPlace ?birthPlace .
}

UNION

# Query for domain of profession of John Scholey
SELECT DISTINCT ?domain WHERE {
  dbpedia:John_Scholey dbo:profession ?occupation .
  ?occupation rdf:type dbo:Occupation .
  ?occupation dbo:field ?domain .
}
```",4,4,5,2,2,2,3,28,0,0,3,0,0.0,0
465,69,test,"Give me the spouse of the child, that is a royalty, of Ferdinand I, Holy Roman Emperor and successor of the child, that is a royalty, of the parent of Charles Orlando, Dauphin of France and successor of the child of the parent of Ercole II d'Este, Duke of Ferrara.","SELECT ?result WHERE { ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?result <http://dbpedia.org/ontology/spouse> ?v7 . ?v2 <http://dbpedia.org/ontology/successor> ?result . ?v3 <http://dbpedia.org/property/father> ?v4 . ?v1 <http://dbpedia.org/ontology/child> ?v2 . <http://dbpedia.org/resource/Ercole_II_d'Este,_Duke_of_Ferrara> <http://dbpedia.org/ontology/parent> ?v4 . <http://dbpedia.org/resource/Ferdinand_I,_Holy_Roman_Emperor> <http://dbpedia.org/ontology/child> ?v7 . ?v3 <http://dbpedia.org/ontology/successor> ?result . ?v7 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. <http://dbpedia.org/resource/Charles_Orlando,_Dauphin_of_France> <http://dbpedia.org/ontology/parent> ?v1 . }","```sparql
# Step 1: Identify Ferdinand I's children who are royalty
SELECT ?child WHERE {
    wd:Q1247 dbo:spouse ?parent .
    ?parent dbo:child ?child .
    ?child rdf:type wd:Q5 . # Person
    FILTER EXISTS { ?child wdt:P39 wd:Q11696 } # Has occupation of monarch
}

# Step 2: Find the successor of one of these children
SELECT ?successor WHERE {
    ?child dbo:succeededBy ?successor .
    ?child rdf:type wd:Q5 .
    FILTER EXISTS { ?child wdt:P39 wd:Q11696 }
}

# Step 3: Identify Charles Orlando's parent and find the successor of this parent's child
SELECT ?parent, ?successor WHERE {
    wd:Q1234567 dbo:spouse ?parent . # Charles Orlando, Dauphin of France
    ?parent dbo:child ?child .
    ?child dbo:succeededBy ?successor .
}

# Step 4: Identify Ercole II d'Este's parent and find the successor of this parent's child
SELECT ?parent, ?successor WHERE {
    wd:Q2345678 dbo:spouse ?parent . # Ercole II d'Este, Duke of Ferrara
    ?parent dbo:child ?child .
    ?child dbo:succeededBy ?successor .
}

# Step 5: Combine these relationships to find the relevant royal figure
SELECT ?finalFigure WHERE {
    ?figure rdf:type wd:Q5 .
    FILTER EXISTS { ?figure wdt:P39 wd:Q11696 } # Has occupation of monarch
    # Additional conditions based on previous steps' results
}

# Step 6: Determine the spouse of the final identified individual
SELECT ?spouse WHERE {
    ?finalFigure dbo:spouse ?spouse .
}
```

Note: The above SPARQL query is a template and requires specific Wikidata IDs for individuals like Charles Orlando, Dauphin of France (Q1234567) and Ercole II d'Este, Duke of Ferrara (Q2345678). These should be replaced with the correct identifiers from Wikidata.",8,10,9,3,3,3,3,71,0,0,1,0,0.0,0
791,69,test,"Give me the predecessor of the child of Emperor Takakura and father of the child, that is a royalty, of the father, that is a royalty and an office holder, of Emperor Antoku and spouse of the spouse, that is a royalty, of the reference to Emperor Takakura.","SELECT ?result WHERE { ?v2 <http://dbpedia.org/property/father> ?v1 . <http://dbpedia.org/resource/Emperor_Antoku> <http://dbpedia.org/property/father> ?v1 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?result <http://dbpedia.org/ontology/successor> ?v7 . ?v7 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Emperor_Takakura> . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v2 <http://dbpedia.org/property/father> ?result . ?v4 <http://xmlns.com/foaf/0.1/name> ""Emperor Takakura""@en . ?result <http://dbpedia.org/ontology/spouse> ?v3 . ?v3 <http://dbpedia.org/ontology/spouse> ?v4 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?predecessor WHERE {
  # Step 1: Child of Emperor Takakura
  VALUES (?child) { dbr:Imperial_Princess_Shushi }
  
  # Step 2: Father of the child who is a royalty
  ?father dbo:spouse ?child .
  ?father rdf:type dbo:Monarch .

  # Step 3: Predecessor of Taira no Kiyomori (considering lineage)
  VALUES (?kiyomori) { dbr:Taira_no_Kiyomori }
  ?predecessor dbo:parent ?kiyomori .
  
  # Step 4: Father of Emperor Antoku
  ?antokuFather dbo:spouse dbr:Emperor_Antoku .
  ?antokuFather rdf:type dbo:Monarch .
  FILTER(?antokuFather = ?kiyomori)

  # Step 5: Spouse of the spouse related to Emperor Takakura
  ?tokuko dbo:spouse ?kiyomori .
  ?emperorTakakura dbo:spouse ?tokuko .
  FILTER(?emperorTakakura = dbr:Emperor_Takakura)
}
```",8,12,9,3,3,3,3,71,0,0,1,0,0.0,0
453,8,test,"Give me the religion of the author, that is a cardinal and a cleric, of Apologia Pro Vita Sua and religion of Newfoundland Colony.",SELECT ?result WHERE { ?v0 <http://dbpedia.org/ontology/religion> ?result . <http://dbpedia.org/resource/Apologia_Pro_Vita_Sua> <http://dbpedia.org/property/author> ?v0 . <http://dbpedia.org/resource/Newfoundland_Colony> <http://dbpedia.org/ontology/religion> ?result . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Cardinal>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Cleric>. },"```sparql
SELECT ?authorReligion ?colonyReligion WHERE {
  # Find the religion of John Henry Newman, who is a cardinal and wrote Apologia Pro Vita Sua
  wd:Q2186 dbo:religion ?authorReligion .
  
  # Find the predominant religion in Newfoundland Colony
  wd:Q1049 dbo:religion ?colonyReligion .
}
```",3,5,4,2,2,2,2,9,0,0,1,0,0.0,0
965,71,test,"Give me the parent of the person born, that is a noble, as the birth name of George Mountbatten, 2nd Marquess of Milford Haven and spouse of the spouse of the parent of Louise Mountbatten and parent of the child, that is a royalty, of the person born, that is a politician, on 1854-05-24.","SELECT ?result WHERE { <http://dbpedia.org/resource/George_Mountbatten,_2nd_Marquess_of_Milford_Haven> <http://dbpedia.org/property/birthName> ?v7 . <http://dbpedia.org/resource/Louise_Mountbatten> <http://dbpedia.org/ontology/parent> ?v1 . ?v1 <http://dbpedia.org/ontology/spouse> ?v2 . ?v8 <http://dbpedia.org/property/birthName> ?v7 . ?v8 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Noble>. ?result <http://dbpedia.org/ontology/spouse> ?v2 . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v5 <http://dbpedia.org/ontology/parent> ?result . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v5 <http://dbpedia.org/property/father> ?v4 . ?v4 <http://dbpedia.org/ontology/birthDate> ""1854-05-24""^^<http://www.w3.org/2001/XMLSchema#date> . ?v8 <http://dbpedia.org/ontology/parent> ?result . }","```sparql
SELECT ?parentName WHERE {
  # Step 1: Identify George Mountbatten, 2nd Marquess of Milford Haven
  ?george dbr:George_Mountbatten,_2nd_Marquess_of_Milford_Haven dbo:birthName ?birthName .
  
  # Step 2: Find Louise Mountbatten's parent
  ?louise dbp:parent ?parentLouise .
  ?parentLouise rdfs:label ""Louise Mountbatten""@en .

  # Step 3: Determine the spouse of that parent
  ?spouse dbp:spouse ?parentLouise .

  # Step 4: Identify the child, who is royalty, of a politician born on 1854-05-24
  ?politician dbo:birthday ""1854-05-24""^^xsd:date .
  ?child dbp:royalty true ;
         dbo:parent ?politician .

  # Step 5: Find the parent of that royal child
  ?parentRoyalChild dbp:spouse ?child .

  # Step 6: Identify the spouse of the person found in step 5
  ?spouseParent dbp:spouse ?parentRoyalChild .

  # Step 7: Finally, find the parent of George Mountbatten's birth name
  ?birthNameParent dbo:spouse ?spouseParent .
  
  # Return the parent's name
  ?birthNameParent rdfs:label ?parentName .
}
```",9,12,10,3,3,3,3,71,0,0,2,0,0.0,0
281,26,test,"Give me the awardee of the award of Alfred Warden and commander in the war, that is an event and a military conflict, of Roy Boehm and awardee of Medal bar.",SELECT ?result WHERE { ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?result <http://dbpedia.org/property/awards> ?v1 . <http://dbpedia.org/resource/Alfred_Warden> <http://dbpedia.org/property/awards> ?v1 . ?v2 <http://dbpedia.org/ontology/commander> ?result . <http://dbpedia.org/resource/Roy_Boehm> <http://dbpedia.org/ontology/battle> ?v2 . ?result <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/Medal_bar> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?person WHERE {
  # Find the award received by Alfred Warden
  ?award dbo:recipient dbr:Alfred_Warden .
  
  # Find the war involving Roy Boehm and his role as a commander
  ?war dbo:commander dbr:Roy_Boehm .
  
  # Find individuals who are both an event and a military conflict, and received a Medal bar
  ?person dbo:recipient ?award ;
          dbo:participatedIn ?war ;
          dbo:medalBar true .

}
```",5,7,6,2,3,2,3,28,0,0,1,0,0.0,0
933,57,test,"Give me the band of the band, that is a group and a band and an organisation, of Alan Warner (musician) and reference to the birth name of the professional in Musician and band of Mike Elliott (saxophonist).",SELECT ?result WHERE { <http://dbpedia.org/resource/Mike_Elliott_(saxophonist)> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Band>. ?v1 <http://dbpedia.org/property/occupation> <http://dbpedia.org/resource/Musician> . ?v0 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v1 <http://dbpedia.org/property/birthName> ?v4 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. <http://dbpedia.org/resource/Alan_Warner_(musician)> <http://dbpedia.org/ontology/associatedMusicalArtist> ?v0 . ?result <http://xmlns.com/foaf/0.1/name> ?v4 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Group>. },"```sparql
# Query to find Alan Warner's band
SELECT ?band WHERE {
  ?person dbo:birthName ""Alan Warner""@en .
  ?person dbo:associatedBand ?band .
  FILTER EXISTS { ?band a dbo:MusicalGroup . }
}

UNION

# Query to find Mike Elliott's birth name
SELECT ?birthName WHERE {
  ?person dbo:birthName ?birthName .
  ?person rdfs:label ""Mike Elliott (saxophonist)""@en .
}
```",6,9,7,3,3,3,3,71,0,0,1,0,0.0,0
417,57,test,"Give me the child of the child, that is a royalty, of Frederick Francis III, Grand Duke of Mecklenburg-Schwerin and spouse of Princess Caroline-Mathilde of Denmark and child of the father of the leader, that is a royalty, of Colony of Greenland.","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/parent> ?v3 . ?v3 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Frederick_Francis_III,_Grand_Duke_of_Mecklenburg-Schwerin> . ?result <http://dbpedia.org/ontology/spouse> <http://dbpedia.org/resource/Princess_Caroline-Mathilde_of_Denmark> . <http://dbpedia.org/resource/Colony_of_Greenland> <http://dbpedia.org/property/leader> ?v0 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?result <http://dbpedia.org/property/father> ?v5 . ?v0 <http://dbpedia.org/property/father> ?v5 . }","```sparql
# Step 1: Identify children of Frederick Francis III who are royalty
SELECT ?child WHERE {
    wd:Q123456 wdt:P40 ?child .
    ?child wdt:P31/wdt:P279* wd:Q11850 . # Royal title
}

# Step 2: Find the child of that child who is also royalty
SELECT DISTINCT ?grandChild WHERE {
    ?parent wdt:P40 ?child . # From step 1 results
    ?child wdt:P40 ?grandChild .
    ?grandChild wdt:P31/wdt:P279* wd:Q11850 . # Royal title
}

# Step 3: Identify the leader of the Colony of Greenland
SELECT ?leader WHERE {
    wd:Q789012 wdt:P39 ?leader . # Leader of Colony of Greenland
}

# Step 4: Find the father of that leader
SELECT ?father WHERE {
    ?leader wdt:P22 ?father .
}

# Step 5: Identify the child of that father who is royalty
SELECT DISTINCT ?royalChild WHERE {
    ?father wdt:P40 ?royalChild .
    ?royalChild wdt:P31/wdt:P279* wd:Q11850 . # Royal title
}

# Step 6: Match the two royals from steps 2 and 5
SELECT ?grandChild ?royalChild WHERE {
    { ?parent wdt:P40 ?child . 
      ?child wdt:P40 ?grandChild .
      ?grandChild wdt:P31/wdt:P279* wd:Q11850 }
    UNION
    { ?father wdt:P40 ?royalChild .
      ?royalChild wdt:P31/wdt:P279* wd:Q11850 }
}
```

Note: Replace `wd:Q123456` with the actual DBpedia ID for Frederick Francis III, and `wd:Q789012` with the ID for the Colony of Greenland. The query assumes that the relevant properties (like P40 for children) are correctly used in DBpedia.",6,8,7,3,3,3,3,71,0,0,1,0,0.0,0
933,68,test,"Give me the band of the band, that is a group and a band and an organisation, of Alan Warner (musician) and band of the band of the band, that is an artist and a musical artist, of The Ramong Sound and reference to the birth name of the professional in Musician.",SELECT ?result WHERE { ?v1 <http://dbpedia.org/property/birthName> ?v6 . <http://dbpedia.org/resource/The_Ramong_Sound> <http://dbpedia.org/ontology/associatedMusicalArtist> ?v4 . ?v0 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Band>. ?v2 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?result <http://xmlns.com/foaf/0.1/name> ?v6 . ?v1 <http://dbpedia.org/property/occupation> <http://dbpedia.org/resource/Musician> . <http://dbpedia.org/resource/Alan_Warner_(musician)> <http://dbpedia.org/ontology/associatedMusicalArtist> ?v0 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Group>. ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?v4 <http://dbpedia.org/ontology/associatedMusicalArtist> ?v2 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. },"```sparql
# Query for Alan Warner's band and his birth name
SELECT ?band ?birthName WHERE {
  ?person foaf:name ""Alan Warner""@en .
  ?person dbo:band ?band .
  OPTIONAL { ?person foaf:birthday ?birthday . FILTER (LANG(?birthday) = 'en') }
  OPTIONAL { ?person foaf:name ?birthName . FILTER (lang(?birthName) = 'en') }
}

# Query for The Ramones' associated band or artist
SELECT ?associatedBand WHERE {
  ?ramones dbo:band ""The Ramones""@en .
  ?ramones dbo:member ?member .
  ?member dbo:band ?associatedBand .
}
```",8,13,9,3,3,3,3,71,0,0,1,0,0.0,0
456,64,test,"Give me the band of the band, that is a musical artist, of the band of Alan Doyle and spouse of the actor of the movie, that is a work and a television show, with Ross Newton and professional in .","SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v0 <http://dbpedia.org/ontology/associatedMusicalArtist> ?v1 . ?v2 <http://dbpedia.org/ontology/spouse> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?v3 <http://dbpedia.org/property/starring> ?v2 . ?v3 <http://dbpedia.org/property/starring> <http://dbpedia.org/resource/Ross_Newton> . <http://dbpedia.org/resource/Alan_Doyle> <http://dbpedia.org/ontology/associatedMusicalArtist> ?v0 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?result <http://dbpedia.org/property/occupation> """"@en . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/TelevisionShow>. }","```sparql
# Step 1: Find movies/TV shows featuring Ross Newton
SELECT ?work WHERE {
  ?actor foaf:name ""Ross Newton""@en .
  ?actor dbo:profession dbr:Actor .
  ?work dbo:starring ?actor .
}

# Step 2: Identify any actors from these works who might be connected to Alan Doyle through marriage
SELECT DISTINCT ?spouse WHERE {
  ?doyle foaf:name ""Alan Doyle""@en .
  ?doyle dbo:spouse ?spouse .
  ?spouse dbo:profession dbr:MusicalArtist .
  
  # Assuming we have identified a work from Step 1, check if the spouse is connected to it
  OPTIONAL {
    ?work dbo:starring ?actor .
    ?actor foaf:name ?actorName .
    FILTER(?actorName = ""Ross Newton""@en)
  }
}

# Step 3: Determine the band associated with Alan Doyle's spouse
SELECT DISTINCT ?band WHERE {
  ?spouse dbo:member ?band .
  ?doyle foaf:name ""Alan Doyle""@en .
  ?doyle dbo:spouse ?spouse .
}

# Note: The above queries are structured to be executed sequentially, as SPARQL does not support direct chaining of results.
```",7,10,8,3,3,3,3,71,0,0,1,0,0.0,0
329,24,test,"Give me the entity in the region, that is a country, of Western European Time and entity in the birthplace, that is an organisation and a country, of Robert Bates (loyalist).",SELECT ?result WHERE { <http://dbpedia.org/resource/Robert_Bates_(loyalist)> <http://dbpedia.org/ontology/birthPlace> ?v0 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. ?result <http://dbpedia.org/ontology/country> ?v0 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?result <http://dbpedia.org/ontology/country> ?v2 . ?v2 <http://dbpedia.org/property/timeZone> <http://dbpedia.org/resource/Western_European_Time> . },"```sparql
# Query for country in Western European Time (WET)
SELECT ?country WHERE {
  ?country a dbo:Country .
  ?country dbo:timeZone dbr:Western_European_Time .
}

UNION

# Query for organization and country at Robert Bates' birthplace
SELECT ?organization WHERE {
  ?bates foaf:name ""Robert Bates""@en .
  ?bates dbo:birthPlace ?birthPlace .
  ?organization a dbo:Country ;
                a dbo:Organization ;
                dbo:location ?birthPlace .
}
```",4,7,5,2,2,2,3,28,0,0,531,0,0.0,0
456,71,test,"Give me the spouse of the actor of the movie, that is a work and a television show, with Ross Newton and band of the band, that is a musical artist, of the band of Alan Doyle and professional in the alter ego of the reference, that is a fictional character, to Lamont Cranston (radio, film and television).","SELECT ?result WHERE { ?v4 <http://xmlns.com/foaf/0.1/name> ""Lamont Cranston (radio, film and television)""@en . ?v8 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?v2 <http://dbpedia.org/ontology/spouse> ?result . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/FictionalCharacter>. ?v4 <http://dbpedia.org/property/alterEgo> ?v5 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/TelevisionShow>. <http://dbpedia.org/resource/Alan_Doyle> <http://dbpedia.org/ontology/associatedMusicalArtist> ?v7 . ?result <http://dbpedia.org/property/occupation> ?v5 . ?v7 <http://dbpedia.org/ontology/associatedMusicalArtist> ?v8 . ?v1 <http://dbpedia.org/property/starring> ?v2 . ?v1 <http://dbpedia.org/property/starring> <http://dbpedia.org/resource/Ross_Newton> . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?v8 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . }","```sparql
SELECT ?spouse WHERE {
  # Find Lamont Cranston (The Shadow)
  ?shadow dbo:alterEgo ""The Gray Man""@en .
  
  # Find Ross Newton's role in The Shadow TV series
  ?ross dbp:roleInFilmOrTVSeries ?shadow .
  
  # Find the band associated with Alan Doyle
  ?greatBigSea dbo:memberAlanDoyle true .
  
  # Find a musical artist connected to Great Big Sea
  ?band dbo:associatedBand ?greatBigSea .
  ?artist dbo:musicalArtistOf ?band .
  
  # Find the movie and TV show connection
  ?movie dbo:workType dbc:The_Shadow_film_series .
  ?tvShow dbo:workType dbc:The_Shadow_TV_series .
  ?ross dbp:roleInFilmOrTVSeries ?movie .
  ?ross dbp:roleInFilmOrTVSeries ?tvShow .
  
  # Find Ross Newton's spouse
  ?ross foaf:spouse ?spouse .
}
```",9,13,10,3,3,3,3,71,0,0,1,0,0.0,0
326,8,test,"Give me the person decedent at Rancho Mirage, California and professional in the profession of Susanne Lewis.","SELECT ?result WHERE { <http://dbpedia.org/resource/Susanne_Lewis> <http://dbpedia.org/property/occupation> ?v1 . ?result <http://dbpedia.org/ontology/deathPlace> <http://dbpedia.org/resource/Rancho_Mirage,_California> . ?result <http://dbpedia.org/property/occupation> ?v1 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT ?person ?deathPlace WHERE {
  ?person dbo:deathPlace ?deathLocation .
  ?person foaf:worksFor|dbo:employer ?susanneLewis .
  
  FILTER(CONTAINS(LCASE(?deathLocation), ""rancho mirage, california""))
  
  VALUES ?susanneLewis { <http://dbpedia.org/resource/Susanne_Lewis> }
}
```",3,3,4,2,2,2,2,9,0,0,1,0,0.0,0
645,71,test,"Give me the military force of the force, that is an event and a military conflict and a societal event, of the native, that is a president and a politician, of Restoration (Spain) and commander in the force of the commander in Siege of Madrid and leader of the office, that is a government agency and an organisation, of the native of Restoration (Spain).",SELECT ?result WHERE { ?v8 <http://dbpedia.org/ontology/leader> ?result . ?v7 <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Restoration_(Spain)> . ?v7 <http://dbpedia.org/property/office> ?v8 . ?v8 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?v8 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/GovernmentAgency>. ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/President>. <http://dbpedia.org/resource/Siege_of_Madrid> <http://dbpedia.org/ontology/commander> ?v1 . ?result <http://dbpedia.org/ontology/battle> ?v5 . ?v2 <http://dbpedia.org/ontology/commander> ?result . ?v5 <http://dbpedia.org/ontology/commander> ?v4 . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v2 <http://dbpedia.org/ontology/commander> ?v1 . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?v4 <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Restoration_(Spain)> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?militaryForce ?commander ?organization WHERE {
  # Step 1: Identify the native of Restoration (Spain) who was a president and politician
  ?person dbo:nationality dbr:Spain ;
          dbo:occupation dbr:Politician ;
          dbo:officeHeld dbr:President_of_Spain .

  # Step 2: Find the military force associated with this person that is an event, conflict, and societal event
  ?militaryForce dbo:relatedTo ?person ;
                 a dbo:MilitaryConflict ;
                 a dbo:SocietalEvent ;
                 a dbo:Event .

  # Step 3: Identify the commander of this military force during the Siege of Madrid
  ?commander dbo:commanded ?militaryForce ;
             dbo:occupation dbr:Military_person ;
             dbo:placeOfBirth dbr:Spain .

  # Step 4: Find out which organization this commander led
  ?organization dbo:leader ?commander ;
                a dbo:Government_agency ;
                a dbo:Organization .
}
```",9,16,10,3,3,3,3,71,0,0,2,0,0.0,0
465,65,test,"Give me the successor of the child, that is a royalty, of Anne of Brittany and successor of the child of Alfonso I d'Este and spouse of the child, that is a royalty, of the parent of Elizabeth of Austria (1526–1545).",SELECT ?result WHERE { ?v4 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Alfonso_I_d'Este> . ?v4 <http://dbpedia.org/ontology/successor> ?result . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v0 <http://dbpedia.org/ontology/child> ?v6 . ?v6 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. <http://dbpedia.org/resource/Anne_of_Brittany> <http://dbpedia.org/ontology/child> ?v3 . ?v0 <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Elizabeth_of_Austria_(1526–1545)> . ?result <http://dbpedia.org/ontology/spouse> ?v6 . ?v3 <http://dbpedia.org/ontology/successor> ?result . },"```sparql
# Step 1: Find Anne of Brittany's child who is royalty (Claude)
SELECT ?child WHERE {
    wd:Q1116 wdt:P31/wdt:P279* wd:Q5; # Anne of Brittany, person, human
    wdt:P40 wd:Q11696. # Charles VIII of France
    ?child wdt:P25 wd:Q1116; # Child of Anne of Brittany
           wdt:P31/wdt:P279* wd:Q5; # Person, human
           wdt:P39 wd:Q134064. # Queen consort of France (Claude)
}

# Step 2: Find the successor of Claude in French queenship (Her daughter Claude)
SELECT ?successor WHERE {
    ?child wdt:P31/wdt:P279* wd:Q5; # Person, human
           wdt:P39 wd:Q134064. # Queen consort of France (Claude)
    ?successor wdt:P25 ?child; # Successor is child of Claude
               wdt:P39 wd:Q134064. # Queen consort of France
}

# Step 3: Find Alfonso I d'Este's child who is royalty (Ercole II d'Este)
SELECT ?child WHERE {
    wd:Q11107 wdt:P31/wdt:P279* wd:Q5; # Alfonso I d'Este, person, human
    ?child wdt:P25 wd:Q11107; # Child of Alfonso I d'Este
           wdt:P39 wd:Q134064. # Duke of Ferrara (Ercole II)
}

# Step 4: Find the spouse of Ercole II (Renée of France)
SELECT ?spouse WHERE {
    ?child wdt:P31/wdt:P279* wd:Q5; # Person, human
           wdt:P39 wd:Q134064. # Duke of Ferrara (Ercole II)
    ?spouse wdt:P26 ?child. # Spouse of Ercole II
}

# Step 5: Find Elizabeth of Austria's parent (Ferdinand I)
SELECT ?parent WHERE {
    wd:Q1194 wdt:P31/wdt:P279* wd:Q5; # Elizabeth of Austria, person, human
    ?parent wdt:P22 wd:Q1194. # Parent of Elizabeth of Austria
}

# Step 6: Find the child who is royalty of Ferdinand I (Charles V)
SELECT ?royalChild WHERE {
    ?parent wdt:P31/wdt:P279* wd:Q5; # Person, human
            wdt:P22",7,9,8,3,3,3,3,71,0,0,1,0,0.0,0
130,18,test,"Give me the figure known as the film, that is a soccer club and an organisation, of the native, that is a coach and a college coach, of Madison, Alabama and entity in the administration, that is American, of .","SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/CollegeCoach>. ?v1 <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Madison,_Alabama> . ?v3 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/United_States>. ?result <http://dbpedia.org/ontology/state> ?v3 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Coach>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?result <http://dbpedia.org/property/nickname> ?v2 . ?v2 <http://dbpedia.org/ontology/director> ?v1 . ?v3 <http://dbpedia.org/property/governor> """"@en . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerClub>. }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?person ?film WHERE {
  ?person a dbo:Person ;
          dbo:birthPlace dbr:Madison,_Alabama ;
          (dbo:occupation dbo:SoccerCoach | dbo:occupation dbo:CollegeCoach) .
  
  OPTIONAL { ?person dbo:memberOf dbr:American_Administration . }
  
  OPTIONAL { ?film dbo:starring ?person . }

  FILTER NOT EXISTS {
    ?person dbo:deathDate ?date .
  }
}
```",5,10,6,3,2,3,2,20,0,0,1,0,0.0,0
839,62,test,"Give me the band of Matthias Röhr and band of the person born, that is a musical artist, as the persona of Kevin Russell (musician) and band of the member of the band, that is a band and a group, of Peter Schorowsky.",SELECT ?result WHERE { ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Group>. ?result <http://dbpedia.org/ontology/bandMember> <http://dbpedia.org/resource/Matthias_Röhr> . ?v0 <http://dbpedia.org/ontology/bandMember> ?v6 . ?v3 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v3 <http://dbpedia.org/property/birthName> ?v4 . <http://dbpedia.org/resource/Kevin_Russell_(musician)> <http://xmlns.com/foaf/0.1/givenName> ?v4 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Band>. <http://dbpedia.org/resource/Peter_Schorowsky> <http://dbpedia.org/ontology/associatedMusicalArtist> ?v0 . ?result <http://dbpedia.org/ontology/bandMember> ?v6 . },"```sparql
# Query for Matthias Röhr's Band
SELECT ?band WHERE {
  ?person foaf:name ""Matthias Röhr""@en .
  ?person dbo:memberOf ?band .
}

UNION

# Query for Kevin Russell's Persona and Related Band
SELECT ?band WHERE {
  ?persona dbo:birthPlace ?place .
  ?persona foaf:name ""Kevin Russell (musician)""@en .
  ?persona dbo:associatedBand ?band .
}

UNION

# Query for Peter Schorowsky's Band Membership
SELECT ?band WHERE {
  ?person foaf:name ""Peter Schorowsky""@en .
  ?person dbo:memberOf ?band .
  FILTER (STRSTARTS(STR(?band), ""http://dbpedia.org/resource/"") && 
          EXISTS { ?band a dbo:Band . } &&
          EXISTS { ?band a dbo:Group . })
}
```",7,10,8,3,3,3,3,71,0,0,1,0,0.0,0
216,26,test,Give me the party of Campbell Newman and office of the mayor of Ros Bates and administration of the designer of Woolfe: The Red Hood Diaries.,SELECT ?result WHERE { <http://dbpedia.org/resource/Ros_Bates> <http://dbpedia.org/property/leader> ?v2 . <http://dbpedia.org/resource/Campbell_Newman> <http://dbpedia.org/ontology/party> ?result . ?result <http://dbpedia.org/property/leader> ?v1 . ?v2 <http://dbpedia.org/property/office> ?result . <http://dbpedia.org/resource/Woolfe:_The_Red_Hood_Diaries> <http://dbpedia.org/property/designer> ?v1 . },"```sparql
# Query to get the political party of Campbell Newman
SELECT ?party WHERE {
  dbpedia:Campbell_Newman dbo:politicalParty ?party .
}

# Query to get the office held by Ros Bates as a mayor
SELECT ?office WHERE {
  dbpedia:Ros_Bates dbo:positionHeld ?office .
  FILTER(CONTAINS(LCASE(STR(?office)), ""mayor""))
}

# Query to find the designer of Woolfe: The Red Hood Diaries and their administration
SELECT DISTINCT ?designer ?administration WHERE {
  # Find the designer of the game
  dbpedia:Woolfe:_The_Red_Hood_Diaries dbo:creator ?designer .
  
  # Get information about the designer's administration (if applicable)
  OPTIONAL { 
    ?designer dbo:positionHeld ?administration .
  }
}
```",5,5,6,2,3,2,3,28,0,0,1,0,0.0,0
773,61,test,"Give me the parent of the child, that is a royalty, of the father, that is an office holder and a royalty, of Carloman of Bavaria and parent of the successor of the child, that is a royalty, of Louis the Pious.",SELECT ?result WHERE { ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. <http://dbpedia.org/resource/Louis_the_Pious> <http://dbpedia.org/ontology/child> ?v0 . ?result <http://dbpedia.org/ontology/child> ?v5 . ?v3 <http://dbpedia.org/ontology/parent> ?result . ?v0 <http://dbpedia.org/ontology/successor> ?v5 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v3 <http://dbpedia.org/property/father> ?v1 . <http://dbpedia.org/resource/Carloman_of_Bavaria> <http://dbpedia.org/property/father> ?v1 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. },"```sparql
SELECT ?parentOfSuccessor WHERE {
  # Step 1: Identify Carloman of Bavaria's father
  dbp:Carmann_of_Bavaria dbo:father ?carlomansFather .
  
  # Step 2: Ensure the father is both an office holder and a royalty
  ?carlomansFather rdf:type dbp:Royalty ;
                   dbo:officeHolder ?office .

  # Step 3: Find the child of this father who is a royalty
  ?carlomansFather dbo:child ?royalChild .
  
  # Step 4: Identify Louis the Pious' child who is a royalty
  dbp:Louis_the_Pious dbo:child ?louisRoyalChild .
  ?louisRoyalChild rdf:type dbp:Royalty .

  # Step 5: Find the successor of Louis the Pious' royal child
  ?louisRoyalChild dbo:succeededBy ?successor .

  # Step 6: Determine the parent of this successor
  ?successor dbo:parent ?parentOfSuccessor .

  # Step 7: Identify the parent of Carloman's father's royal child
  ?royalChild dbo:parent ?parentOfRoyalChild .
  
  FILTER(?parentOfSuccessor = ?parentOfRoyalChild)
}
```",6,10,7,3,2,3,3,71,0,0,2,0,0.0,0
445,61,test,Give me the death place of the awardee of the establishment of 1820-03-10 and entity in the award of the commander in Battle of Saint-Mihiel.,"SELECT ?result WHERE { <http://dbpedia.org/resource/Battle_of_Saint-Mihiel> <http://dbpedia.org/ontology/commander> ?v1 . ?v0 <http://dbpedia.org/ontology/foundingDate> ""1820-03-10""^^<http://www.w3.org/2001/XMLSchema#date> . ?v5 <http://dbpedia.org/ontology/deathPlace> ?result . ?v5 <http://dbpedia.org/property/awards> ?v0 . ?v1 <http://dbpedia.org/property/awards> ?v3 . ?result <http://dbpedia.org/ontology/country> ?v3 . }","```sparql
SELECT ?deathPlace WHERE {
  ?person dbo:birthDate ""1820-03-10""^^xsd:date .
  ?person dbo:award ?award .
  ?award dbo:recipient ?person .
  ?battle dbo:commander ?person ;
          rdfs:label ""Battle of Saint-Mihiel""@en .
  OPTIONAL { ?person dbo:deathPlace ?deathPlace . }
}
```",6,6,7,3,2,3,3,71,0,0,2,0,0.0,0
129,28,test,"Give me the associated musical artist of the actor, that is an organisation, of Dreamville Presents: Revenge and professional in the mayor of 1999 West Dunbartonshire Council election and associated musical artist of the person born as Tahj Malik Chandler.","SELECT ?result WHERE { <http://dbpedia.org/resource/1999_West_Dunbartonshire_Council_election> <http://dbpedia.org/property/leader> ?v1 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?v5 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . <http://dbpedia.org/resource/Dreamville_Presents:_Revenge> <http://dbpedia.org/property/starring> ?v3 . ?v3 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v5 <http://dbpedia.org/property/birthName> ""Tahj Malik Chandler""@en . ?result <http://dbpedia.org/property/occupation> ?v1 . }","```sparql
# Step 1: Find the actor associated with ""Dreamville Presents: Revenge""
SELECT ?actor WHERE {
  ?production dcterms:title ""Dreamville Presents: Revenge"" .
  ?production dbo:starring ?actor .
}

# Step 2: Identify any organization the actor is part of
SELECT DISTINCT ?organization WHERE {
  ?actor dbo:memberOf ?organization .
}

# Step 3: Find the mayor elected in 1999 for West Dunbartonshire Council
SELECT ?mayor WHERE {
  ?person dbo:electedAsMayorOf ""West Dunbartonshire"" ;
          dbo:electionYear ""1999"" .
}

# Step 4: Determine the musical artist associated with Lil Uzi Vert
SELECT ?artist WHERE {
  ?lilUziVert foaf:name ""Lil Uzi Vert""@en .
  ?lilUziVert dbo:associatedMusicalArtist ?artist .
}

# Step 5: Identify an organization that connects these entities
SELECT DISTINCT ?organization WHERE {
  VALUES (?actor ?mayor ?artist) { 
    (?actor1 ?mayor1 ?artist1)
  }
  OPTIONAL { ?actor1 dbo:memberOf ?organization . }
  OPTIONAL { ?mayor1 dbo:memberOf ?organization . }
  OPTIONAL { ?artist1 dbo:associatedMusicalArtist ?organization . }
}
```",6,7,7,2,3,2,3,28,0,0,1,0,0.0,0
465,67,test,"Give me the successor of the child, that is a royalty, of the parent of Charles Orlando, Dauphin of France and spouse of the child, that is a royalty, of the parent of Elizabeth of Austria (1526–1545) and successor of Ercole II d'Este, Duke of Ferrara.","SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/child> ?v3 . <http://dbpedia.org/resource/Ercole_II_d'Este,_Duke_of_Ferrara> <http://dbpedia.org/ontology/successor> ?result . ?v3 <http://dbpedia.org/ontology/successor> ?result . ?v0 <http://dbpedia.org/ontology/child> ?v6 . ?v6 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v0 <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Elizabeth_of_Austria_(1526–1545)> . <http://dbpedia.org/resource/Charles_Orlando,_Dauphin_of_France> <http://dbpedia.org/ontology/parent> ?v1 . ?result <http://dbpedia.org/ontology/spouse> ?v6 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?successor WHERE {
  # Charles IX's parent
  dbr:Charles_IX_of_France dbo:father dbr:Henry_II_of_France .

  # Elizabeth of Austria's parent
  dbr:Elizabeth_of_Austria_(1526–1545) dbo:parent dbr:Ferdinand_I,_Holy_Roman_Emperor .

  # Successor of Ercole II d'Este
  dbr:Alfonso_II_d'_Este dbo:succeededBy ?successorErcole .

  # Child of Ferdinand I and successor of Ercole II
  ?anna dbo:parent dbr:Ferdinand_I,_Holy_Roman_Emperor .
  ?anna dbo:succeededBy ?successorErcole .

  # Spouse of Anna (Ferdinand I)
  ?anna dbo:spouse dbr:Ferdinand_I_of_Habsburg .

  # Parent of Charles IX's spouse
  dbr:Isabella_Clara_Eugenia dbo:parent dbr:Philip_II_of_Spain .

  # Child of Elizabeth of Austria
  ?isabella dbo:child dbr:Isabella_Clara_Eugenia .

  # Successor of Isabella Clara Eugenia
  ?isabella dbo:succeededBy dbr:Philip_IV_of_Spain .
}
```",7,9,8,3,3,3,3,71,0,0,1,0,0.0,0
965,65,test,"Give me the parent of the person born, that is a noble, as Prince George of Battenberg and parent of the child, that is a royalty, of the person born, that is a politician, on 1854-05-24 and spouse of the spouse of Princess Victoria of Hesse and by Rhine.","SELECT ?result WHERE { ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v5 <http://dbpedia.org/property/father> ?v1 . ?v0 <http://dbpedia.org/property/birthName> ""Prince George of Battenberg""@en . ?result <http://dbpedia.org/ontology/spouse> ?v2 . ?v5 <http://dbpedia.org/ontology/parent> ?result . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Noble>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v1 <http://dbpedia.org/ontology/birthDate> ""1854-05-24""^^<http://www.w3.org/2001/XMLSchema#date> . <http://dbpedia.org/resource/Princess_Victoria_of_Hesse_and_by_Rhine> <http://dbpedia.org/ontology/spouse> ?v2 . ?v0 <http://dbpedia.org/ontology/parent> ?result . }","```sparql
SELECT ?parent WHERE {
  # Step 1: Identify Prince George of Battenberg
  ?princeGeorge dcterms:title ""Prince George of Battenberg""@en .
  
  # Step 2: Find the child of Prince George who is royalty
  ?child dbo:parent ?princeGeorge ;
         dbo:royalTitle ?royaltyTitle .

  # Step 3: Identify the politician born on 1854-05-24
  ?politician dbo:birthday ""1854-05-24""^^xsd:date ;
              dbo:occupation ""Politician""@en .
  
  # Step 4: Determine the spouse of Princess Victoria of Hesse and by Rhine
  ?princessVictoria dcterms:title ""Princess Victoria of Hesse and by Rhine""@en .
  ?spouse dbo:spouse ?princessVictoria ;
          dbo:spouse ?politician .

  # Step 5: Find the parent of the royalty child who is also the spouse from step 4
  ?parent dbo:child ?child ;
          rdfs:label ?spouseLabel .

  FILTER(?spouseLabel = ?spouse)
  
  # Step 6: Determine the parent of Prince George of Battenberg
  ?princeParent dbo:child ?princeGeorge .
}
```",7,10,8,3,3,3,3,71,0,0,1,0,0.0,0
274,26,test,"Give me the band member of the person born, that is a musical artist, as John Birks Gillespie and associated musical artist of the actor, that is a musical artist, of Imagine the Sound and professional in .","SELECT ?result WHERE { ?v2 <http://dbpedia.org/property/birthName> ""John Birks Gillespie""@en . <http://dbpedia.org/resource/Imagine_the_Sound> <http://dbpedia.org/property/starring> ?v1 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?result <http://dbpedia.org/ontology/associatedMusicalArtist> ?v2 . ?result <http://dbpedia.org/property/occupation> """"@en . ?v1 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . }","```sparql
# Query for band members associated with Dizzy Gillespie
SELECT ?bandMember WHERE {
  ?gillespie dbo:birthName ""John Birks Gillespie""@en .
  ?gillespie a dbo:Musician .
  ?gillespie dbo:memberOfBand ?band .
  ?bandMember dbo:memberOf ?band .
  FILTER(?bandMember != ?gillespie)
}

UNION

# Query for musical artists associated with an actor from ""Imagine the Sound""
SELECT ?musicalArtist WHERE {
  ?actor dbo:profession dbr:Actor ;
         dbo:associatedWithCreativeWork dbr:Imagine_the_Sound .
  ?actor dbo:associatedMusicalArtist ?musicalArtist .
}
```",5,7,6,2,3,2,3,28,0,0,3,0,0.0,0
465,71,test,"Give me the successor of the child of the parent of Ercole II d'Este, Duke of Ferrara and successor of the child, that is a royalty, of the parent of Charles Orlando, Dauphin of France and spouse of the child, that is a royalty, of the parent of Elizabeth of Austria (1526–1545).","SELECT ?result WHERE { ?v2 <http://dbpedia.org/ontology/successor> ?result . ?v7 <http://dbpedia.org/ontology/child> ?v8 . ?v4 <http://dbpedia.org/ontology/child> ?v5 . <http://dbpedia.org/resource/Ercole_II_d'Este,_Duke_of_Ferrara> <http://dbpedia.org/ontology/parent> ?v1 . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v2 <http://dbpedia.org/property/father> ?v1 . ?result <http://dbpedia.org/ontology/spouse> ?v5 . ?v8 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v8 <http://dbpedia.org/ontology/successor> ?result . ?v4 <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Elizabeth_of_Austria_(1526–1545)> . <http://dbpedia.org/resource/Charles_Orlando,_Dauphin_of_France> <http://dbpedia.org/ontology/parent> ?v7 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?successor WHERE {
  # Ercole II d'Este's parent
  ?ercole2 dbo:parent ?alfonso1 .
  FILTER(STR(?ercole2) = ""Ercole_II_d%27Este"")

  # Alfonso I d'Este's child
  ?alfonso1 dbo:child ?lucrezia .

  # Lucrezia Borgia's successor in terms of lineage
  ?alfonso2 dbo:parent ?alfonso1 .
  FILTER(STR(?alfonso2) = ""Alfonso_II_d%27Este"")

  # Charles Orlando's parent
  ?charlesOrlando dbo:parent ?louis12 .
  FILTER(STR(?charlesOrlando) = ""Charles_Orland"")

  # Louis XII of France's child
  ?louis12 dbo:child ?claud .

  # Claude of France's spouse
  ?claud dbo:spouse ?francis1 .
  FILTER(STR(?claud) = ""Claude_of_France"")

  # Ferdinand I, Holy Roman Emperor's child
  ?elizabeth dbp:father ?ferdinandI .
  ?ferdinandI dbo:child ?charlesV .

  # Charles V, Holy Roman Emperor's spouse
  ?charlesV dbo:spouse ?isabellaP .

  # Successor of Alfonso II d'Este that is a royalty
  ?alfonso2 dbo:succeededBy ?cesare .
  FILTER(STR(?cesare) = ""Cesare_d%27Este"")
}
```",9,11,10,3,3,3,3,71,0,0,1,0,0.0,0
976,59,test,"Give me the office of the leader, that is a politician, of the administration, that is an organisation, of Kemal Kılıçdaroğlu and office of the mayor, that is a politician and an office holder and Turkish, of the reference, that is an organisation and a political party and Turkish, to Millet İttifakı.","SELECT ?result WHERE { ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v4 <http://dbpedia.org/ontology/nationality> <http://dbpedia.org/resource/Turkey>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?v3 <http://dbpedia.org/ontology/leader> ?v1 . ?v3 <http://dbpedia.org/property/leader> <http://dbpedia.org/resource/Kemal_Kılıçdaroğlu> . ?v0 <http://xmlns.com/foaf/0.1/name> ""Millet İttifakı""@en . ?v0 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Turkey>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v0 <http://dbpedia.org/property/leader> ?v4 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/PoliticalParty>. ?v4 <http://dbpedia.org/property/office> ?result . ?v1 <http://dbpedia.org/property/office> ?result . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?kemalOffice ?mayorName ?mayorOffice
WHERE {
  # Kemal Kılıçdaroğlu's office within his administration (CHP)
  dbr:Kemal_Kılıçdaroğlu dbo:positionHeld ?kemalPosition .
  ?kemalPosition dbo:office ?kemalOffice .

  # Mayor associated with Millet İttifakı
  ?mayor a dbo:Mayor ;
         dbo:nationality dbr:Turkey ;
         dbo:politicalParty ?party .
  
  ?party dbo:memberOfAlliance dbr:Millet_İttifakı .
  
  BIND(dbo:municipalityHead AS ?mayorOffice)
}
```",6,14,7,3,2,3,3,71,0,0,3,0,0.0,0
926,66,test,"Give me the father of the father of Abdulaziz and child of the father, that is a royalty, of the parent, that is a royalty, of Beyhan Sultan (daughter of Mustafa III) and successor of the child of Ahmed III.",SELECT ?result WHERE { ?v5 <http://dbpedia.org/property/father> ?v0 . ?v3 <http://dbpedia.org/property/father> ?result . <http://dbpedia.org/resource/Beyhan_Sultan_(daughter_of_Mustafa_III)> <http://dbpedia.org/ontology/parent> ?v5 . <http://dbpedia.org/resource/Abdulaziz> <http://dbpedia.org/property/father> ?v3 . ?v6 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Ahmed_III> . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v6 <http://dbpedia.org/ontology/successor> ?result . ?v0 <http://dbpedia.org/ontology/child> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?person WHERE {
  # Abdulaziz's father
  ?abdulazizFather a dbo:Person ;
                  dbo:father dbr:Faisal_bin_Turki_Al_Saud .

  # Faisal bin Turki Al Saud's children who are royalty
  ?faisalChild dbo:childOf dbr:Faisal_bin_Turki_Al_Saud ;
              a dbo:Monarch .

  # Beyhan Sultan and her father Mustafa III
  ?beyhanSultan dbo:parent dbr:Mustafa_III ;
               a dbo:Person .
  
  # Successor of the child of Ahmed III (Mahmud I)
  ?ahmedChild dbo:childOf dbr:Ahmed_III ;
              a dbo:Sultan .
  ?mahmudI dbo:succeededBy ?ahmedChild .

  # Find the person who fits all criteria
  ?person rdf:type dbo:Monarch ;
          rdfs:label ?name .
  
  FILTER (?faisalChild = ?person)
  FILTER EXISTS { ?beyhanSultan dbo:parent ?mustafaIII . }
  FILTER EXISTS { ?mahmudI dbo:succeededBy ?ahmedChild . }
}
```",7,9,8,3,3,3,3,71,0,0,1,0,0.0,0
773,69,test,"Give me the parent of the child, that is a royalty, of the father, that is an office holder and a royalty, of Carloman of Bavaria and spouse of the father of the parent of Bernard (son of Charles the Fat) and parent of the successor of Charles the Bald.",SELECT ?result WHERE { ?v3 <http://dbpedia.org/ontology/spouse> ?result . ?v4 <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Bernard_(son_of_Charles_the_Fat)> . ?v2 <http://dbpedia.org/ontology/parent> ?result . ?v2 <http://dbpedia.org/property/father> ?v1 . ?result <http://dbpedia.org/ontology/child> ?v7 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. <http://dbpedia.org/resource/Carloman_of_Bavaria> <http://dbpedia.org/property/father> ?v1 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v4 <http://dbpedia.org/property/father> ?v3 . <http://dbpedia.org/resource/Charles_the_Bald> <http://dbpedia.org/ontology/successor> ?v7 . },"```sparql
SELECT ?parent WHERE {
  # Carloman of Bavaria's father
  wd:Q123456 wdt:P22 ?fatherOfCarloman .
  
  # Father's spouse (Emma of Altdorf)
  ?fatherOfCarloman wdt:P26 ?spouseOfFather .

  # Bernard's parent and their parent
  wd:Q789012 wdt:P25 ?parentOfBernard .
  ?parentOfBernard wdt:P25 ?grandParentOfBernard .

  # Charles the Bald's successor and their parent
  wd:Q987654 wdt:P36 ?successorOfCharlesTheBald .
  ?successorOfCharlesTheBald wdt:P22 ?parentOfSuccessor .

  # Find Judith of Flanders as the royalty parent of Emma
  ?spouseOfFather wdt:P25 ?parentOfSpouse .
  ?parentOfSpouse wdt:P31 wd:Q12345 . # Q12345 is a placeholder for ""royalty"" class

  FILTER(?parentOfSpouse = wd:Q67890) # Q67890 is a placeholder for Judith of Flanders
}
```",8,11,9,3,3,3,3,71,0,0,1,0,0.0,0
281,25,test,"Give me the awardee of Volunteer Decoration and commander in the war, that is an event and a military conflict, of Roy Boehm and awardee of the award, that is a military conflict, of Lawrence Moore Cosgrave.",SELECT ?result WHERE { ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?v3 <http://dbpedia.org/ontology/commander> ?result . ?result <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/Volunteer_Decoration> . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. <http://dbpedia.org/resource/Lawrence_Moore_Cosgrave> <http://dbpedia.org/property/awards> ?v4 . <http://dbpedia.org/resource/Roy_Boehm> <http://dbpedia.org/ontology/battle> ?v3 . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?result <http://dbpedia.org/property/awards> ?v4 . },"```sparql
SELECT DISTINCT ?person ?event ?conflict WHERE {
  # For Roy Boehm
  VALUES ?boehm { dbpedia:Roy_Boehm }
  
  OPTIONAL {
    ?boehm dbo:awardReceived dbr:Volunteer_Decoration .
    ?boehm dbo:militaryConflict ?conflict .
    FILTER(?conflict != dbr:None)
  }

  OPTIONAL {
    ?boehm dbo:event ?event .
    ?event dbo:type dbr:Military_conflict .
    FILTER(?event != dbr:None)
  }
  
  # For Lawrence Moore Cosgrave
  VALUES ?cosgrave { dbpedia:Lawrence_Moore_Cosgrave }
  
  OPTIONAL {
    ?cosgrave dbo:awardReceived dbr:Volunteer_Decoration .
    ?cosgrave dbo:militaryConflict ?conflict .
    FILTER(?conflict != dbr:None)
  }

}
```",5,8,6,2,3,2,3,28,0,0,1,0,0.0,0
130,19,test,"Give me the figure known as the film, that is a soccer club and an organisation, of Candice Storey Lee and entity in the administration, that is American, of the award of Živko Ključe.",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/state> ?v4 . ?v4 <http://dbpedia.org/property/governor> ?v0 . ?result <http://dbpedia.org/property/nickname> ?v2 . ?v4 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/United_States>. <http://dbpedia.org/resource/Živko_Ključe> <http://dbpedia.org/property/awards> ?v0 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerClub>. ?v2 <http://dbpedia.org/ontology/director> <http://dbpedia.org/resource/Candice_Storey_Lee> . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?filmFigure ?soccerClub ?organization ?americanEntity WHERE {
  # Candice Storey Lee as a film figure, soccer club, and organization
  OPTIONAL { 
    ?candice dbo:profession dbr:Film_producer .
    ?candice rdfs:label ""Candice Storey Lee""@en .
    ?filmFigure dbo:producer ?candice .
  }
  
  OPTIONAL {
    ?soccerClub dbo:president ?candice .
  }

  OPTIONAL {
    ?organization dbo:executiveBoardMember ?candice .
  }

  # Živko Ključe and American administrative entity
  OPTIONAL {
    ?award dbo:recipient dbr:Živko_Ključe .
    ?americanEntity dbo:administrator ?award .
    ?americanEntity dbo:country dbr:United_States .
  }
}
```",5,8,6,3,2,3,2,20,0,35282,1,0.0,0.0,0
773,70,test,"Give me the spouse of the father of Charles the Fat and parent of the successor of the child, that is a royalty, of Louis the Pious and parent of the child, that is a royalty, of the father, that is an office holder and a royalty, of Carloman of Bavaria.",SELECT ?result WHERE { ?v0 <http://dbpedia.org/ontology/successor> ?v7 . <http://dbpedia.org/resource/Carloman_of_Bavaria> <http://dbpedia.org/property/father> ?v1 . <http://dbpedia.org/resource/Charles_the_Fat> <http://dbpedia.org/property/father> ?v4 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?result <http://dbpedia.org/ontology/child> ?v7 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v4 <http://dbpedia.org/ontology/spouse> ?result . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. <http://dbpedia.org/resource/Louis_the_Pious> <http://dbpedia.org/ontology/child> ?v0 . ?v3 <http://dbpedia.org/ontology/parent> ?result . ?v3 <http://dbpedia.org/property/father> ?v1 . },"```sparql
SELECT ?spouse WHERE {
  ?charlesFat dbo:father dbc:Louis_the_German .
  ?louisGerman dbo:spouse ?spouse .
}
```",8,12,9,3,3,3,3,71,0,0,1,0,0.0,0
47,63,test,"Give me the office of the awardee of Padma Vibhushan and office of the administration of the commander, that is a politician, in Operation Green Hunt and office of the awardee of Banga Bhushan.",SELECT ?result WHERE { ?v3 <http://dbpedia.org/property/governor> ?v4 . ?v3 <http://dbpedia.org/property/office> ?result . ?v6 <http://dbpedia.org/property/office> ?result . ?v2 <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/Padma_Vibhushan> . ?v6 <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/Banga_Bhushan> . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. <http://dbpedia.org/resource/Operation_Green_Hunt> <http://dbpedia.org/ontology/commander> ?v4 . ?v2 <http://dbpedia.org/property/office> ?result . },"```sparql
# Query for Padma Vibhushan awardee's office
SELECT ?person ?office WHERE {
  ?person dbo:award dbp:Padma_Vibhushan .
  OPTIONAL { ?person dbo:occupation ?office . }
}

UNION

# Query for politician involved in Operation Green Hunt and their office
SELECT ?person ?office WHERE {
  ?person dbo:occupation dbr:Politician ;
          dbo:participatedIn dbp:Operation_Green_Hunt .
  OPTIONAL { ?person dbo:officeHeld ?office . }
}

UNION

# Query for Banga Bhushan awardee's office
SELECT ?person ?office WHERE {
  ?person dbo:award dbr:Banga_Bhushan ;
          OPTIONAL { ?person dbo:occupation ?office . }
}
```",7,8,8,3,3,3,3,71,0,0,1,0,0.0,0
965,67,test,"Give me the spouse of Prince Louis of Battenberg and parent of the person born, that is a noble, as the birth name of George Mountbatten, 2nd Marquess of Milford Haven and parent of the child, that is a royalty, of the person born, that is a politician, on 1854-05-24.","SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?result <http://dbpedia.org/ontology/spouse> <http://dbpedia.org/resource/Prince_Louis_of_Battenberg> . ?v5 <http://dbpedia.org/property/father> ?v1 . ?v5 <http://dbpedia.org/ontology/parent> ?result . ?v1 <http://dbpedia.org/ontology/birthDate> ""1854-05-24""^^<http://www.w3.org/2001/XMLSchema#date> . ?v0 <http://dbpedia.org/property/birthName> ?v4 . ?v0 <http://dbpedia.org/ontology/parent> ?result . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Noble>. ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. <http://dbpedia.org/resource/George_Mountbatten,_2nd_Marquess_of_Milford_Haven> <http://dbpedia.org/property/birthName> ?v4 . }","```sparql
SELECT ?spouse WHERE {
  ?person dbo:birthName ""Prince Louis of Battenberg""@en .
  ?person dbo:spouse ?spouse .
}

UNION

SELECT ?parent WHERE {
  ?child dbo:birthName ""George Mountbatten, 2nd Marquess of Milford Haven""@en .
  ?child dbo:parent ?parent .
  ?parent rdfs:label ?spouseLabel FILTER(CONTAINS(LCASE(?spouseLabel), ""prince louis of battenberg"")).
}

UNION

SELECT ?birthName WHERE {
  ?person dbo:birthName ?birthName .
  ?person dbo:alias ""George Mountbatten, 2nd Marquess of Milford Haven""@en .
}

UNION

SELECT ?parentOfRoyalChild WHERE {
  ?politician dbo:birthDate ""1854-05-24""^^xsd:date .
  ?politician dbo:child ?royalChild .
  ?royalChild dbo:parent ?parentOfRoyalChild .
  ?parentOfRoyalChild rdfs:label ?spouseLabel FILTER(CONTAINS(LCASE(?spouseLabel), ""george mountbatten"")).
}
```",7,10,8,3,3,3,3,71,0,0,1,0,0.0,0
216,60,test,"Give me the player in the coach of the reference, that is an organisation and a soccer club, to Croatia U21 and team of the person born, that is a sports manager and a soccer manager and a soccer player, on the death of Pavel Vezhinov.","SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/birthDate> ?v0 . ?v3 <http://dbpedia.org/ontology/coach> ?v2 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerManager>. ?v2 <http://dbpedia.org/ontology/team> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerPlayer>. ?v3 <http://xmlns.com/foaf/0.1/name> ""Croatia U21""@en . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsManager>. <http://dbpedia.org/resource/Pavel_Vezhinov> <http://dbpedia.org/ontology/deathDate> ?v0 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerClub>. ?result <http://dbpedia.org/ontology/coach> ?v1 . }","```sparql
# Step 1: Find the death date of Pavel Vezhinov
SELECT ?deathDate WHERE {
  dbpedia:Pavel_Vezhínov dbo:deathDate ?deathDate .
}

# Step 2: Find a sports manager and soccer player born on that date
SELECT DISTINCT ?person WHERE {
  ?person rdf:type dbo:SportsManager ;
          rdf:type dbo:SoccerPlayer ;
          dbo:birthDate ?birthDate .
  FILTER (?birthDate = <deathDateFromStep1>)
}

# Step 3: Determine the team associated with this person
SELECT DISTINCT ?team WHERE {
  ?person dbo:managerOf ?team ;
          dbo:playerFor ?team .
}

# Step 4: Identify the coach of Croatia U21
SELECT DISTINCT ?coach WHERE {
  dbpedia:Croatia_national_under-21_football_team dbo:coach ?coach .
}

# Step 5: Find the organization and soccer club related to this coach
SELECT DISTINCT ?organization WHERE {
  ?coach dbo:managerOf ?organization ;
         rdf:type dbo:SoccerClub .
}
```

Note: Replace `<deathDateFromStep1>` with the actual date obtained from the first query.",6,11,7,3,2,3,3,71,0,0,1,0,0.0,0
645,63,test,"Give me the leader of the office, that is a government agency and an organisation, of Camilo Menéndez Tolosa and commander in the force of the commander in Siege of Madrid and military force of the force, that is an event and a military conflict and a societal event, of Francisco Largo Caballero.",SELECT ?result WHERE { <http://dbpedia.org/resource/Camilo_Menéndez_Tolosa> <http://dbpedia.org/property/office> ?v2 . ?v3 <http://dbpedia.org/ontology/commander> ?v4 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/GovernmentAgency>. ?v6 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v6 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?v2 <http://dbpedia.org/ontology/leader> ?result . ?v3 <http://dbpedia.org/ontology/commander> ?result . <http://dbpedia.org/resource/Siege_of_Madrid> <http://dbpedia.org/ontology/commander> ?v4 . ?v6 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?result <http://dbpedia.org/ontology/battle> ?v6 . ?v6 <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Francisco_Largo_Caballero> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?leader WHERE {
  ?event dbo:type dbr:Military_conflict .
  ?event dbo:event_of dbr:Spanish_Civil_War .
  ?event dbo:location dbr:Madrid .

  ?person dbo:role ?office ;
          dbo:memberOf ?organization ;
          dbo:commanderOf ?force .

  ?leader dbo:role ?office ;
          dbo:memberOf ?organization ;
          dbo:commanderOf ?force .

  FILTER(?person = dbr:Camilo_Menéndez_Tolosa)
  FILTER(?leader = dbr:Francisco_Largo_Caballero)
}
```",7,12,8,3,3,3,3,71,0,0,1,0,0.0,0
267,19,test,"Give me the coach of the player, that is a soccer club, in Rasoul Khatibi and person born on the birth date of the reference to Dan Cathy.","SELECT ?result WHERE { <http://dbpedia.org/resource/Rasoul_Khatibi> <http://dbpedia.org/ontology/team> ?v2 . ?v2 <http://dbpedia.org/ontology/coach> ?result . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerClub>. ?result <http://dbpedia.org/ontology/birthDate> ?v4 . ?v0 <http://xmlns.com/foaf/0.1/name> ""Dan Cathy""@en . ?v0 <http://dbpedia.org/ontology/birthDate> ?v4 . }","```sparql
# Step 1: Get Rasoul Khatibi's birth date
SELECT ?birthDate WHERE {
  dbpedia:Rasoul_Khatibi dbo:birthday ?birthDate .
}

# Step 2: Find a person born on the same date as Dan Cathy
SELECT DISTINCT ?person WHERE {
  ?person dbo:birthday ?birthDate .
  FILTER (?birthDate = (dbpedia:Dan_Cathy dbo:birthday))
}

# Step 3: Check if this person is associated with a soccer club
SELECT DISTINCT ?soccerClub WHERE {
  ?person dbo:member ?team .
  ?team rdf:type dbpedia-owl:Soccer_Club .
  FILTER (?person IN (<result_from_step_2>)) # Replace <result_from_step_2> with the actual result from step 2
}

# Step 4: Find the coach of that soccer club
SELECT DISTINCT ?coach WHERE {
  ?soccerClub dbo:coach ?coach .
  FILTER (?soccerClub IN (<result_from_step_3>)) # Replace <result_from_step_3> with the actual result from step 3
}
```",5,6,6,3,2,3,2,20,0,0,1,0,0.0,0
417,60,test,"Give me the child of the child, that is a royalty, of the parent, that is a royalty, of Alexandrine of Mecklenburg-Schwerin and spouse of the parent, that is a royalty, of the child of Knud, Hereditary Prince of Denmark.","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/spouse> ?v2 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. <http://dbpedia.org/resource/Alexandrine_of_Mecklenburg-Schwerin> <http://dbpedia.org/ontology/parent> ?v0 . ?v1 <http://dbpedia.org/property/father> ?v0 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?result <http://dbpedia.org/ontology/parent> ?v1 . ?v2 <http://dbpedia.org/ontology/child> ?v3 . ?v3 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Knud,_Hereditary_Prince_of_Denmark> . }","```sparql
SELECT DISTINCT ?royalChild WHERE {
  # Step 1: Find Alexandrine of Mecklenburg-Schwerin's parent who is royalty
  ?alexParent dbo:spouse ?alexSpouse .
  ?alexParent rdf:type dbo:Monarch .
  ?alexParent dbp:child ?alexChild .
  ?alexChild rdfs:label ""Alexandrine of Mecklenburg-Schwerin""@en .

  # Step 2: Find the spouse of this royal parent
  ?alexSpouse rdf:type dbo:Person .

  # Step 3: Identify Knud, Hereditary Prince of Denmark's child
  ?knudChild dbp:parent ?knudParent .
  ?knudParent rdfs:label ""Knud, Hereditary Prince of Denmark""@en .
  ?knudChild rdf:type dbo:Person .

  # Step 4: Determine the parent and spouse of this child
  ?childParent dbp:spouse ?childSpouse .
  ?childParent dbp:child ?knudChild .
  ?childParent rdf:type dbo:Monarch .

  # Step 5: Find the child of this royal parent (from step 4)
  ?childSpouse dbp:child ?grandChild .

  # Step 6: Identify a royalty among these children
  ?grandChild rdf:type dbo:Monarch .
  
  FILTER(?grandChild != ?knudChild) # Ensure it's not the same child as in step 3

  BIND(?grandChild AS ?royalChild)
}
```",6,9,7,3,2,3,3,71,0,0,1,0,0.0,0
892,68,test,"Give me the landmark at elevation of the award of the member of E-girls and entity in the profession of the true self of Enrico Crolla and entity in the administration, that is Italian and a region and a settlement and an administrative region, of Democratic Party (Italy).","SELECT ?result WHERE { ?v4 <http://dbpedia.org/property/occupation> ?v2 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. ?v1 <http://dbpedia.org/property/awards> ?v6 . ?v0 <http://dbpedia.org/property/leaderParty> <http://dbpedia.org/resource/Democratic_Party_(Italy)> . ?v4 <http://xmlns.com/foaf/0.1/givenName> ""Enrico Crolla""@en . ?v0 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Italy>. <http://dbpedia.org/resource/E-girls> <http://dbpedia.org/ontology/bandMember> ?v1 . ?result <http://dbpedia.org/ontology/elevation> ?v6 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Region>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/AdministrativeRegion>. ?result <http://dbpedia.org/ontology/country> ?v2 . ?result <http://dbpedia.org/ontology/province> ?v0 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?landmark WHERE {
  # Step 1: Identify a member of E-girls
  VALUES ?eGirlMember { dbr:Lisa_(Japanese_singer) } # Assuming Lisa is the member

  # Step 2: Find an award associated with this member
  ?award dbo:recipient ?eGirlMember .
  
  # Step 3: Determine the elevation of a landmark associated with the award
  ?landmark dbo:elevation ?elevation .
  ?award dbo:location ?landmark .

  # Step 4: Identify Enrico Crolla's true self profession
  dbr:Enrico_Crolla dbo:profession ?profession .

  # Step 5: Find an entity in administration related to this profession
  ?administrationEntity dbo:occupation ?profession .
  
  # Step 6: Combine with Italian regions and settlements associated with the Democratic Party (Italy)
  ?region a dbo:AdministrativeRegion ;
          dbo:country dbr:Italy ;
          dbo:settlement ?settlement ;
          dbo:politicalParty dbr:Democratic_Party_(Italy) .

  FILTER(?landmark = ?settlement)
}
```",8,12,9,3,3,3,3,71,0,0,2,0,0.0,0
933,63,test,"Give me the reference to the birth name of Alan Warner (musician) and band of the band, that is a group and a band and an organisation, of Alan Warner (musician) and band of the band of the band, that is an artist and a musical artist, of The Ramong Sound.",SELECT ?result WHERE { ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Band>. ?v3 <http://dbpedia.org/ontology/associatedMusicalArtist> ?v1 . <http://dbpedia.org/resource/The_Ramong_Sound> <http://dbpedia.org/ontology/associatedMusicalArtist> ?v3 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. ?result <http://xmlns.com/foaf/0.1/name> ?v5 . ?v0 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v1 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . <http://dbpedia.org/resource/Alan_Warner_(musician)> <http://dbpedia.org/property/birthName> ?v5 . <http://dbpedia.org/resource/Alan_Warner_(musician)> <http://dbpedia.org/ontology/associatedMusicalArtist> ?v0 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Group>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT ?birthName ?band ?theRamongSoundArtist WHERE {
  # Find Alan Warner (musician)
  ?alanWarner a dbo:MusicalArtist ;
              foaf:name ""Alan Warner"" .

  # Get his birth name
  OPTIONAL { ?alanWarner foaf:givenName ?firstName . }
  OPTIONAL { ?alanWarner foaf:familyName ?lastName . }
  BIND(CONCAT(?firstName, "" "", ?lastName) AS ?birthName)

  # Find the band associated with Alan Warner
  ?band a dbo:MusicalBand ;
        dbo:musicalArtist ?alanWarner .
  
  # Ensure the band is recognized as an organization and group
  ?band rdf:type dbo:Organization .

  # Identify The Ramong Sound's artist association
  ?theRamongSoundArtist a dbo:MusicalArtist ;
                        foaf:name ""The Ramong Sound"" .

  # Ensure The Ramong Sound's artist is recognized as both an artist and musical artist
  ?theRamongSoundArtist rdf:type dbo:Artist .
}
```",7,12,8,3,3,3,3,71,0,0,1,0,0.0,0
382,19,test,"Give me the landmark at elevation of the award of the reference, that is a college coach and a coach, to Harry Combes and birthplace of the manager, that is a soccer manager and an athlete and a sports manager, of Bonner SC.","SELECT ?result WHERE { ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Coach>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsManager>. ?result <http://dbpedia.org/ontology/elevation> ?v4 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerManager>. <http://dbpedia.org/resource/Bonner_SC> <http://dbpedia.org/ontology/manager> ?v2 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/CollegeCoach>. ?v2 <http://dbpedia.org/ontology/birthPlace> ?result . ?v0 <http://xmlns.com/foaf/0.1/name> ""Harry Combes""@en . ?v0 <http://dbpedia.org/property/awards> ?v4 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Athlete>. }","```sparql
# Query to find Harry Combes' award and related elevation
SELECT ?award ?elevation WHERE {
  ?person foaf:name ""Harry Combes"" .
  ?person dbo:occupation dbo:CollegeCoach ;
          dbo:occupation dbo:Coach .
  ?person dbo:award ?award .
  ?award dbo:elevation ?elevation .
}

# Query to find the landmark at that elevation
SELECT ?landmark WHERE {
  ?landmark geo:elevation ?elevation .
  FILTER(?elevation = <value_from_previous_query>) # Replace with actual value from previous query
}

# Query to find the manager of Bonner SC and their birthplace
SELECT ?manager ?birthPlace WHERE {
  ?team dbo:coach ?manager .
  ?team foaf:name ""Bonner SC"" .
  ?manager dbo:occupation dbo:SoccerManager ;
           dbo:occupation dbo:Athlete ;
           dbo:occupation dbo:SportsManager .
  ?manager foaf:birthPlace ?birthPlace .
}
```",5,10,6,3,2,3,2,20,0,0,1,0,0.0,0
865,60,test,"Give me the native of the residence, that is a country, of the person decedent at Patna and father of the child of the father of Abul Maal Abdul Muhith.",SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/deathPlace> <http://dbpedia.org/resource/Patna> . ?v1 <http://dbpedia.org/property/residence> ?v0 . <http://dbpedia.org/resource/Abul_Maal_Abdul_Muhith> <http://dbpedia.org/property/father> ?v5 . ?result <http://dbpedia.org/ontology/birthPlace> ?v0 . ?v2 <http://dbpedia.org/property/father> ?v5 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. ?v2 <http://dbpedia.org/property/father> ?result . },"```sparql
SELECT ?native WHERE {
  # Step 1: Find Abul Maal Abdul Muhith's father
  ?person dbo:birthName ""Abul Maal Abdul Muhith""@en .
  ?person dbo:father ?father .

  # Step 2: Identify the residence of his father, ensuring it is a country
  ?father dbo:residence ?residence .
  ?residence rdf:type dbo:Country .

  # Step 3: Find the native place associated with this country
  ?residence dbo:nativePlace ?native .
}
```",6,7,7,3,2,3,3,71,0,0,1,0,0.0,0
465,58,test,"Give me the spouse of the child, that is a royalty, of Ferdinand I, Holy Roman Emperor and successor of Ercole II d'Este, Duke of Ferrara and successor of the child, that is a royalty, of the parent of Charles Orlando, Dauphin of France.","SELECT ?result WHERE { ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. <http://dbpedia.org/resource/Charles_Orlando,_Dauphin_of_France> <http://dbpedia.org/ontology/parent> ?v1 . <http://dbpedia.org/resource/Ercole_II_d'Este,_Duke_of_Ferrara> <http://dbpedia.org/ontology/successor> ?result . ?v1 <http://dbpedia.org/ontology/child> ?v2 . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. <http://dbpedia.org/resource/Ferdinand_I,_Holy_Roman_Emperor> <http://dbpedia.org/ontology/child> ?v5 . ?v2 <http://dbpedia.org/ontology/successor> ?result . ?result <http://dbpedia.org/ontology/spouse> ?v5 . }","```sparql
SELECT ?spouse WHERE {
  # Ferdinand I's children who are royalty
  ?child dbo:parent dbc:Ferdinand_I,_Holy_Roman_Emperor ;
         a dbo:RoyalFamilyMember .

  # Ercole II d'Este's successor
  ?successor dbo:succeededBy dbc:Ercole_II_d%27Este,_Duke_of_Ferrara ;
              dbo:spouse ?spouse .

  # Parent of Charles Orlando (assuming Charles IX)
  ?parent dbo:child dbc:Charles_IX_of_France .
  
  # Child of the parent of Charles Orlando
  ?royalChild dbo:parent ?parent ;
              a dbo:RoyalFamilyMember .

  FILTER(?successor = ?royalChild)

  SERVICE wikibase:label { bd:serviceParam wikibase:language ""[AUTO_LANGUAGE],en"". }
}
```",6,8,7,3,3,3,3,71,0,0,1,0,0.0,0
582,58,test,"Give me the player in the father, that is an athlete and a soccer manager and a sports manager, of Masami Nagasawa and reference to Japan and figure known as the nickname of the team, that is an organisation, of Hajime Moriyasu.","SELECT ?result WHERE { ?v5 <http://dbpedia.org/ontology/team> ?result . ?v1 <http://dbpedia.org/property/nickname> ?v2 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. <http://dbpedia.org/resource/Masami_Nagasawa> <http://dbpedia.org/property/father> ?v5 . ?v1 <http://dbpedia.org/ontology/coach> <http://dbpedia.org/resource/Hajime_Moriyasu> . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsManager>. ?result <http://xmlns.com/foaf/0.1/name> ""Japan""@en . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerManager>. ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Athlete>. ?result <http://dbpedia.org/property/nickname> ?v2 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?father ?teamOrganization ?nickname WHERE {
  # Find Masami Nagasawa's father
  ?nagasawa dbo:birthName ""Masami Nagasawa""@en .
  ?nagasawa dbo:father ?father .

  # Ensure the father is an athlete, soccer manager, and sports manager
  ?father a dbo:Athlete ;
          a dbo:SoccerManager ;
          a dbo:SportsManager .

  # Find Hajime Moriyasu's team organization and its nickname
  ?moriyasu dbo:birthName ""Hajime Moriyasu""@en .
  ?moriyasu dbo:team ?teamOrganization .
  ?teamOrganization rdfs:label ?nickname .

  # Ensure all entities are related to Japan
  ?nagasawa dbp:nationality <http://dbpedia.org/resource/Japan> ;
            dbp:birthPlace <http://dbpedia.org/resource/Japan> .
  ?moriyasu dbp:nationality <http://dbpedia.org/resource/Japan> ;
            dbp:birthPlace <http://dbpedia.org/resource/Japan> .
}
```",6,10,7,3,3,3,3,71,0,0,1,0,0.0,0
715,56,test,"Give me the commander in the force, that is a military conflict, of Abd el-Krim and commander in Spanish Civil War and leader of the office, that is a government agency and an organisation, of the reference to Carlos Franco Iribarnegaray.","SELECT ?result WHERE { ?v0 <http://xmlns.com/foaf/0.1/name> ""Carlos Franco Iribarnegaray""@en . ?v0 <http://dbpedia.org/property/office> ?v1 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/GovernmentAgency>. ?v2 <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Abd_el-Krim> . ?v2 <http://dbpedia.org/ontology/commander> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. <http://dbpedia.org/resource/Spanish_Civil_War> <http://dbpedia.org/ontology/commander> ?result . ?v1 <http://dbpedia.org/ontology/leader> ?result . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?abdElKrimRole ?civilWarCommander ?carlosFrancoOffice
WHERE {
  # Abd el-Krim's role in the Rif War
  dbr:Abd_el-Krim dbo:militaryConflict dbr:Rif_War .
  dbr:Rif_War dbo:commander ?abdElKrimRole .

  # Commanders in the Spanish Civil War
  OPTIONAL {
    ?civilWarCommander dbo:militaryConflict dbr:Spanish_Civil_War .
  }

  # Carlos Franco Iribarnegaray's office
  dbr:Carlos_Franco_Iribarnegaray dbo:leaderOf ?carlosFrancoOffice .
  ?carlosFrancoOffice a dbo:GovernmentAgency ;
                     a dbo:Organization .
}
```",6,9,7,3,3,3,3,71,0,0,1,0,0.0,0
433,64,test,"Give me the professional in the profession of the writer of Slowhand at 70 – Live at the Royal Albert Hall and associated musical artist of Bill Evans and associated musical artist of the person born, that is a musical artist and an artist, as the persona of Paul Chambers.",SELECT ?result WHERE { ?result <http://dbpedia.org/property/occupation> ?v1 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. <http://dbpedia.org/resource/Paul_Chambers> <http://xmlns.com/foaf/0.1/givenName> ?v3 . <http://dbpedia.org/resource/Slowhand_at_70_–_Live_at_the_Royal_Albert_Hall> <http://dbpedia.org/property/writer> ?v0 . ?v2 <http://dbpedia.org/property/birthName> ?v3 . ?v0 <http://dbpedia.org/property/occupation> ?v1 . <http://dbpedia.org/resource/Bill_Evans> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v2 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . },"```sparql
SELECT ?person WHERE {
  # Eric Clapton wrote ""Slowhand at 70 – Live at the Royal Albert Hall""
  ?album dcterms:creator dbpedia:Eric_Claptont ;
         rdfs:label ""Slowhand at 70 – Live at the Royal Albert Hall""@en .
  
  # Bill Evans associated with Miles Davis
  ?billEvans dbo:associatedMusicalArtist dbpedia:Miles_Davis .

  # Paul Chambers associated with Miles Davis
  ?paulChambers dbo:associatedMusicalArtist dbpedia:Miles_Davis .

  # Find the person who is both a musical artist and an artist, similar to Paul Chambers' persona in music
  ?person rdfs:label ""Miles Davis""@en .
  
  FILTER EXISTS { ?person rdf:type dbo:Musician . }
  FILTER EXISTS { ?person rdf:type dbo:Artist . }
}
```",7,9,8,3,3,3,3,71,0,0,1,0,0.0,0
573,70,test,"Give me the person decedent at the residence, that is a settlement, of the professional, that is American, in Politician and parent of the author, that is a politician and an office holder, of the work of John Quincy Adams and person decedent at the administration, that is a region, of Charlie Baker.","SELECT ?result WHERE { ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v0 <http://dbpedia.org/property/occupation> ""Politician""@en . ?result <http://dbpedia.org/ontology/deathPlace> ?v4 . ?v7 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. ?v0 <http://dbpedia.org/property/residence> ?v7 . ?v1 <http://dbpedia.org/property/author> ?v3 . ?v3 <http://dbpedia.org/ontology/parent> ?result . ?v0 <http://dbpedia.org/ontology/nationality> <http://dbpedia.org/resource/United_States>. ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Region>. ?v4 <http://dbpedia.org/property/governor> ""Charlie Baker""@en . ?v1 <http://dbpedia.org/property/author> <http://dbpedia.org/resource/John_Quincy_Adams> . ?result <http://dbpedia.org/ontology/deathPlace> ?v7 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?personDecedentAtResidence WHERE {
  # Step 1: Identify John Quincy Adams' work
  ?work dbo:author dbr:John_Quincy_Adams .
  
  # Step 2: Find the author of that work
  ?work dbo:author ?author .

  # Step 3: Determine the parent of the author who is a politician and office holder
  ?parent dbo:child ?author ;
          rdf:type dbo:Politician ;
          dbo:officeHolder ?office .
  
  # Step 4: Identify Charlie Baker's administration
  ?administration dbo:administrator dbr:Charlie_Baker .

  # Step 5: Find the person decedent at that administration
  ?decedentAtAdmin dbo:decedentAt ?administration ;
                   rdf:type dbo:Person .
  
  # Step 6: Determine the residence of the professional (parent) who is American and works in politics
  ?residence dbo:settlementOf ?professional ;
             rdf:type dbo:Settlement .
  ?professional dbo:nationality dbr:United_States ;
                dbo:occupation dbo:Politician ;
                dbo:child ?parent .

  # Step 7: Identify the person decedent at that residence
  ?personDecedentAtResidence dbo:decedentAt ?residence .
}
```",8,13,9,3,3,3,3,71,0,0,2,0,0.0,0
102,20,test,"Give me the native of the residence, that is English and a settlement, of the resident, that is an athlete, of Dewsbury and manager of the player in the member, that is a soccer player, of England women's national football team.",SELECT ?result WHERE { ?v4 <http://dbpedia.org/property/residence> ?v5 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerPlayer>. ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Athlete>. ?v2 <http://dbpedia.org/ontology/manager> ?result . ?result <http://dbpedia.org/ontology/birthPlace> ?v5 . ?v4 <http://dbpedia.org/ontology/residence> <http://dbpedia.org/resource/Dewsbury> . ?v5 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/United_Kingdom>. ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. ?v1 <http://dbpedia.org/ontology/team> <http://dbpedia.org/resource/England_women's_national_football_team> . ?v1 <http://dbpedia.org/ontology/team> ?v2 . },"```sparql
SELECT DISTINCT ?nativeLanguage WHERE {
  ?player dbo:memberOf dbr_England_women's_national_football_team .
  ?manager dbo:manages ?player .
  ?manager dbo:residence ?residence .
  ?residence rdfs:label ""Dewsbury""@en .
  ?residence dbo:type dbr:Settlement .
  ?athlete dbo:name ?manager ;
           dbo:nationality dbr:England .
  ?residence dbo:language ?nativeLanguage .
  FILTER (lang(?nativeLanguage) = 'en' && strstarts(str(?nativeLanguage), ""English""))
}
```",6,10,7,3,2,3,2,20,0,0,1,0,0.0,0
192,19,test,"Give me the spouse of the spouse, that is a royalty, of Charles Martel of Anjou and child of the child of the parent of Anna of Hungary (Byzantine empress).",SELECT ?result WHERE { ?v0 <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Anna_of_Hungary_(Byzantine_empress)> . ?v2 <http://dbpedia.org/ontology/spouse> <http://dbpedia.org/resource/Charles_Martel_of_Anjou> . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v4 <http://dbpedia.org/property/father> ?v0 . ?v2 <http://dbpedia.org/ontology/spouse> ?result . ?result <http://dbpedia.org/ontology/parent> ?v4 . },"```sparql
SELECT ?finalSpouse WHERE {
  # Step 1: Identify Anna of Hungary (Byzantine empress)
  ?anna dbr:Anna_of_Hungary_(Byzantine_empress) .

  # Step 2: Find the parent of Anna of Hungary
  ?parent dbo:child ?anna .
  
  # Step 3: Determine the child of the parent of Anna
  ?sibling dbo:child ?parent .

  # Step 4: Identify Charles Martel of Anjou's spouse
  ?charles dbr:Charles_Martel_of_Anjou ;
           dbo:spouse ?charlesSpouse .

  # Step 5: Find the spouse of Charles Martel's spouse
  ?charlesSpouse dbo:spouse ?finalSpouse .

  # Step 6: Check if this person is royalty
  ?finalSpouse rdf:type dbo:Monarch .
}
```",5,6,6,3,2,3,2,20,0,0,1,0,0.0,0
456,57,test,"Give me the spouse of Danielle Spencer (Australian actress) and band of the band, that is a musical artist, of Dean Brody and professional in the alter ego of the reference, that is a fictional character, to Lamont Cranston (radio, film and television).","SELECT ?result WHERE { ?v0 <http://dbpedia.org/property/alterEgo> ?v5 . <http://dbpedia.org/resource/Dean_Brody> <http://dbpedia.org/ontology/associatedMusicalArtist> ?v3 . <http://dbpedia.org/resource/Danielle_Spencer_(Australian_actress)> <http://dbpedia.org/ontology/spouse> ?result . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?v0 <http://xmlns.com/foaf/0.1/name> ""Lamont Cranston (radio, film and television)""@en . ?result <http://dbpedia.org/property/occupation> ?v5 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/FictionalCharacter>. ?v3 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . }","```sparql
# Query for Danielle Spencer's spouse
SELECT ?spouse WHERE {
  dbpedia:en:Danielle_Spencer dbo:spouse ?spouse .
}

# Query for Dean Brody's band association
SELECT DISTINCT ?band WHERE {
  dbpedia:Dean_Brody dbo:musicalArtist ?band .
}

# Known information about Lamont Cranston's alter ego
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>
SELECT ?alterEgo WHERE {
  dbpedia:Lamont_Cranston rdfs:label ""The Shadow""@en .
}
```",6,8,7,3,3,3,3,71,0,0,1,0,0.0,0
274,28,test,"Give me the professional in the designer of Tetris Classic and band member of the person born, that is a musical artist, as John Birks Gillespie and associated musical artist of the actor, that is a musical artist, of Imagine the Sound.","SELECT ?result WHERE { ?v5 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?result <http://dbpedia.org/ontology/associatedMusicalArtist> ?v1 . <http://dbpedia.org/resource/Imagine_the_Sound> <http://dbpedia.org/property/starring> ?v5 . ?v1 <http://dbpedia.org/property/birthName> ""John Birks Gillespie""@en . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. <http://dbpedia.org/resource/Tetris_Classic> <http://dbpedia.org/property/designer> ?v3 . ?result <http://dbpedia.org/property/occupation> ?v3 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. }","```sparql
# Step 1: Find the designer of Tetris Classic
SELECT ?designer WHERE {
  ?game dbp:title ""Tetris Classic""@en .
  ?game dbo:creator ?designer .
}

# Step 2: Find a band member associated with Dizzy Gillespie
SELECT ?bandMember WHERE {
  ?gillespie foaf:name ""Dizzy Gillespie""@en ;
             dbo:member ?band .
  ?band dbo:member ?bandMember .
}

# Step 3: Identify the actor from ""Imagine the Sound""
SELECT ?actor WHERE {
  ?film dbp:title ""Imagine the Sound""@en ;
        dbo:starring ?actor .
  ?actor rdf:type dbo:Actor .
}

# Step 4: Find associated musical artist for that actor
SELECT ?musicalArtist WHERE {
  ?actor dbo:associatedMusicalArtist ?musicalArtist .
  ?musicalArtist rdf:type dbo:MusicalArtist .
}

# Combine the results to find a professional fitting all criteria
SELECT DISTINCT ?designer ?bandMember ?musicalArtist WHERE {
  # Designer of Tetris Classic
  ?game dbp:title ""Tetris Classic""@en ;
        dbo:creator ?designer .

  # Band member associated with Dizzy Gillespie
  ?gillespie foaf:name ""Dizzy Gillespie""@en ;
             dbo:member ?band .
  ?band dbo:member ?bandMember .

  # Actor from ""Imagine the Sound""
  ?film dbp:title ""Imagine the Sound""@en ;
        dbo:starring ?actor .
  ?actor rdf:type dbo:Actor .

  # Associated musical artist for that actor
  ?actor dbo:associatedMusicalArtist ?musicalArtist .
  ?musicalArtist rdf:type dbo:MusicalArtist .

  # Ensure all roles are filled by the same individual
  FILTER(?designer = ?bandMember && ?bandMember = ?musicalArtist)
}
```",6,8,7,2,3,2,3,28,0,0,3,0,0.0,0
274,27,test,"Give me the associated musical artist of the actor, that is a musical artist, of Imagine the Sound and band member of Dizzy Gillespie and professional in the designer of Tetris Classic.",SELECT ?result WHERE { ?result <http://dbpedia.org/property/occupation> ?v3 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?v0 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . <http://dbpedia.org/resource/Imagine_the_Sound> <http://dbpedia.org/property/starring> ?v0 . ?result <http://dbpedia.org/ontology/associatedMusicalArtist> <http://dbpedia.org/resource/Dizzy_Gillespie> . <http://dbpedia.org/resource/Tetris_Classic> <http://dbpedia.org/property/designer> ?v3 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?actor WHERE {
  # Step 1: Find the actor associated with ""Imagine the Sound""
  ?sound dbr:Imagine_the_Sound .
  
  # Assuming there is a property linking soundtracks to actors
  ?sound dbo:performer ?actor .

  # Step 2: Check if this actor is also a musical artist and band member of Dizzy Gillespie
  ?actor dbo:musicalArtist true .
  ?gillespieBand dbr:Dizzy_Gillespie .
  ?gillespieBand dbo:bandMember ?actor .

  # Step 3: Verify professional involvement in designing ""Tetris Classic""
  ?tetrisDesigner dbr:Tetris_Classic .
  ?tetrisDesigner dbo:designer ?actor .
}
```",5,6,6,2,3,2,3,28,0,0,3,0,0.0,0
926,65,test,"Give me the successor of the child of the spouse of Şermi Kadın and father of the father of Abdulaziz and child of the father, that is a royalty, of Mustafa III.",SELECT ?result WHERE { <http://dbpedia.org/resource/Mustafa_III> <http://dbpedia.org/property/father> ?v0 . ?v0 <http://dbpedia.org/ontology/child> ?result . ?v5 <http://dbpedia.org/ontology/successor> ?result . ?v5 <http://dbpedia.org/property/father> ?v1 . ?v2 <http://dbpedia.org/property/father> ?result . <http://dbpedia.org/resource/Abdulaziz> <http://dbpedia.org/property/father> ?v2 . ?v1 <http://dbpedia.org/ontology/spouse> <http://dbpedia.org/resource/Şermi_Kadın> . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?successor WHERE {
  # Şermi Kadın's spouse
  dbr:Şermi_Kadın dbo:spouse dbr:Ahmed_I_of_the_Ottoman_Empire .
  
  # Ahmed I's child (Osman II)
  dbr:Ahmed_I_of_the_Ottoman_Empire dbo:child dbr:Osman_II .

  # Osman II's descendant Mahmud II
  dbr:Osman_II dbo:descendant dbr:Mahmud_II .
  
  # Mahmud II is the father of Abdulaziz's father (Abdulmejid I)
  dbr:Mahmud_II dbo:child dbr:Abdulmejid_I .

  # Mustafa III's child who is a royalty
  dbr:Mustafa_III dbo:child ?royaltyChild .
  
  # Selim III is the child of Mustafa III and a royalty
  FILTER(?royaltyChild = dbr:Selim_III) .

  # Successor of Selim III
  dbr:Selim_III dbo:successor ?successor .
}
```",7,8,8,3,3,3,3,71,0,0,1,0,0.0,0
926,64,test,"Give me the successor of Mustafa III and father of the father of the spouse of Neşerek Kadın and child of the father, that is a royalty, of the parent, that is a royalty, of Beyhan Sultan (daughter of Mustafa III).",SELECT ?result WHERE { ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. <http://dbpedia.org/resource/Neşerek_Kadın> <http://dbpedia.org/ontology/spouse> ?v4 . ?v2 <http://dbpedia.org/property/father> ?result . <http://dbpedia.org/resource/Mustafa_III> <http://dbpedia.org/ontology/successor> ?result . <http://dbpedia.org/resource/Beyhan_Sultan_(daughter_of_Mustafa_III)> <http://dbpedia.org/ontology/parent> ?v5 . ?v4 <http://dbpedia.org/property/father> ?v2 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v5 <http://dbpedia.org/property/father> ?v0 . ?v0 <http://dbpedia.org/ontology/child> ?result . },"```sparql
SELECT ?successor WHERE {
  wd:Q1234568 wdt:P35 wd:Q1234569 . # Mustafa III (Q1234568) has a successor (P35) who is Abdul Hamid I (Q1234569)
  wd:Q1234569 wdt:P22 ?neşerekKadinSpouse . # Abdul Hamid I (Q1234569) has a child (P22) who is Selim III
  ?neşerekKadinSpouse rdfs:label ""Selim III""@en . # Ensure the spouse of Neşerek Kadın is Selim III
  wd:Q1234570 wdt:P25 wd:Q1234568 . # Beyhan Sultan (Q1234570) has a parent (P25) who is Mustafa III (Q1234568)
  ?abdulHamidI wdt:P22 wd:Q1234570 . # Abdul Hamid I (Q1234571) has a child (P22) who is Beyhan Sultan
}
```",7,9,8,3,3,3,3,71,0,0,1,0,0.0,0
965,60,test,"Give me the spouse of the spouse of the parent of Louise Mountbatten and parent of the person born, that is a noble, as the birth name of George Mountbatten, 2nd Marquess of Milford Haven.","SELECT ?result WHERE { ?v0 <http://dbpedia.org/property/birthName> ?v5 . ?v0 <http://dbpedia.org/ontology/parent> ?result . ?v4 <http://dbpedia.org/ontology/spouse> ?v2 . ?result <http://dbpedia.org/ontology/spouse> ?v2 . <http://dbpedia.org/resource/Louise_Mountbatten> <http://dbpedia.org/ontology/parent> ?v4 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Noble>. <http://dbpedia.org/resource/George_Mountbatten,_2nd_Marquess_of_Milford_Haven> <http://dbpedia.org/property/birthName> ?v5 . }","```sparql
SELECT ?birthName WHERE {
  # Step 1: Identify Louise Mountbatten's parent
  ?louise dbo:parent ?parent .

  FILTER(STR(?louise) = ""Louise_Mountbatten"")

  # Step 2: Find the spouse of Louise Mountbatten's parent
  ?parent dbo:spouse ?spouse1 .

  # Step 3: Identify the spouse of that spouse
  ?spouse1 dbo:spouse ?spouse2 .

  # Step 4: Determine the noble person born from this lineage
  ?noble dbo:birthName ?child .
  ?spouse2 dbo:parent ?noble .

  # Step 5: Find George Mountbatten, 2nd Marquess of Milford Haven's birth name
  ?george foaf:name ""George_Mountbatten,_2nd_Marquess_of_Milford_Haven"" .
  ?george dbo:birthName ?birthName .

  FILTER(STR(?noble) = STR(?george))
}
```",6,7,7,3,2,3,3,71,0,0,2,0,0.0,0
976,66,test,"Give me the office of the leader, that is a politician, of Grand National Assembly of Turkey and office of the person born as the birth name of Naci Bostancı and office of the mayor, that is a politician and an office holder and Turkish, of Nation Alliance (Turkey).",SELECT ?result WHERE { <http://dbpedia.org/resource/Grand_National_Assembly_of_Turkey> <http://dbpedia.org/ontology/leader> ?v3 . <http://dbpedia.org/resource/Nation_Alliance_(Turkey)> <http://dbpedia.org/property/leader> ?v6 . ?v6 <http://dbpedia.org/ontology/nationality> <http://dbpedia.org/resource/Turkey>. ?v6 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v6 <http://dbpedia.org/property/office> ?result . ?v0 <http://dbpedia.org/property/birthName> ?v5 . <http://dbpedia.org/resource/Naci_Bostancı> <http://dbpedia.org/property/birthName> ?v5 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v0 <http://dbpedia.org/property/office> ?result . ?v6 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v3 <http://dbpedia.org/property/office> ?result . },"```sparql
# Query for the office of the leader of the Grand National Assembly of Turkey
SELECT ?office WHERE {
  wd:Q123456 rdfs:label ""Speaker of the Grand National Assembly of Turkey""@en .
  ?office dbo:positionHeldBy wd:Q123456 .
}

UNION

# Query for the office held by Naci Bostancı
SELECT ?office WHERE {
  wd:Q789012 rdfs:label ""Naci Bostancı""@en .
  ?office dbo:positionHeldBy wd:Q789012 .
}

UNION

# Query for the office of the mayor of Nation Alliance (Turkey)
SELECT DISTINCT ?office WHERE {
  ?mayor dbo:nationality dbr:Turkey ;
         dbo:politicalParty dbr:Nation_Alliance_(Turkey) ;
         dbo:occupation dbr:Politician ;
         dbo:positionHeldBy ?office .
  FILTER EXISTS { ?office rdfs:label ?label . FILTER (lang(?label) = ""en"") }
}
```",7,11,8,3,3,3,3,71,0,0,1,0,0.0,0
917,70,test,"Give me the child of the father of the child, that is a royalty, of Kamehameha III and parent of the child, that is a royalty, of Kamehameha IV and child of the father of the spouse, that is a royalty, of Leleiohoku I.",SELECT ?result WHERE { ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v1 <http://dbpedia.org/property/father> ?v6 . ?result <http://dbpedia.org/ontology/child> ?v3 . <http://dbpedia.org/resource/Kamehameha_III> <http://dbpedia.org/ontology/child> ?v5 . ?v5 <http://dbpedia.org/property/father> ?v0 . ?v3 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Kamehameha_IV> . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v1 <http://dbpedia.org/ontology/spouse> <http://dbpedia.org/resource/Leleiohoku_I> . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?result <http://dbpedia.org/property/father> ?v0 . ?result <http://dbpedia.org/ontology/parent> ?v6 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?child WHERE {
  # Kamehameha III's child who is royalty
  ?child dbo:parent dbr:Kamehameha_III .
  ?child a dbo:Monarch .

  # Kamehameha IV's child who is royalty
  ?kamehamehaIVChild dbo:parent dbr:Kamehameha_IV .
  ?kamehamehaIVChild a dbo:Monarch .

  # Leleiohoku I's spouse who is royalty
  ?spouse dbo:spouse dbr:Leleiohoku_I .
  ?spouse a dbo:Monarch .

  # Father of Leleiohoku I's spouse
  ?father dbo:child ?spouse .

  # The child must be the parent of Kamehameha IV's child and also the child of the father of Leleiohoku I's spouse
  ?child dbo:parent ?kamehamehaIVChild .
  ?child dbo:child ?father .
}
```",8,11,9,3,3,3,3,71,0,0,1,0,0.0,0
987,67,test,"Give me the birth place of the actor of the show, that is a film, with Emir Hadžihafizbegović and entity in the region, that is a country, of the time zone, that is a sports event, in Canicosa de la Sierra and birth place of Dado Polumenta.",SELECT ?result WHERE { <http://dbpedia.org/resource/Canicosa_de_la_Sierra> <http://dbpedia.org/ontology/timeZone> ?v4 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Film>. ?v5 <http://dbpedia.org/ontology/birthPlace> ?result . ?v0 <http://dbpedia.org/property/timeZone> ?v4 . ?v1 <http://dbpedia.org/ontology/starring> <http://dbpedia.org/resource/Emir_Hadžihafizbegović> . ?v1 <http://dbpedia.org/property/starring> ?v5 . <http://dbpedia.org/resource/Dado_Polumenta> <http://dbpedia.org/ontology/birthPlace> ?result . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsEvent>. ?result <http://dbpedia.org/ontology/country> ?v0 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. },"```sparql
# Query 1: Find a film featuring Emir Hadžihafizbegović
SELECT ?film WHERE {
  ?film dbo:starring dbpedia:Emir_Hadžihafizić-Hadžihafić.
}

# Query 2: Identify an actor from that film (assuming we get a specific film from Query 1)
SELECT DISTINCT ?actor WHERE {
  ?film dbo:starring ?actor.
  FILTER(?film = <Film_URI_from_Query_1>)
}

# Query 3: Get the birthplace of that actor
SELECT ?birthPlace WHERE {
  ?actor foaf:bornIn ?birthPlace.
  FILTER(?actor = <Actor_URI_from_Query_2>)
}

# Query 4: Determine the time zone for Canicosa de la Sierra and find a sports event in that time zone
SELECT DISTINCT ?event WHERE {
  ?location geo:hasTimezone ?timezone.
  ?event dbo:timeZone ?timezone.
  FILTER(?location = dbpedia:Canicosa_de_la_Sierra)
}

# Query 5: Find the country or region associated with this sports event
SELECT DISTINCT ?country WHERE {
  ?event dbo:location ?location.
  ?location geo:hasCountry ?country.
  FILTER(?event = <Event_URI_from_Query_4>)
}

# Query 6: Get the birthplace of Dado Polumenta
SELECT ?birthPlace WHERE {
  dbpedia:Dado_Polumenta foaf:bornIn ?birthPlace.
}
```",7,10,8,3,3,3,3,71,0,0,1,0,0.0,0
98,27,test,"Give me the region of Philippine Standard Time and birth place of the person born as Paolo Elito M. Ballesteros IV and entity in the region, that is a country, of Philippine Standard Time.","SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. ?result <http://dbpedia.org/ontology/timeZone> <http://dbpedia.org/resource/Philippine_Standard_Time> . ?v2 <http://dbpedia.org/ontology/birthPlace> ?result . ?v2 <http://dbpedia.org/property/birthName> ""Paolo Elito M. Ballesteros IV""@en . ?v1 <http://dbpedia.org/property/timeZone> <http://dbpedia.org/resource/Philippine_Standard_Time> . ?result <http://dbpedia.org/ontology/country> ?v1 . }","```sparql
# Query to get the birth place of Paolo Elito M. Ballesteros IV
SELECT ?birthPlace WHERE {
  ?person foaf:name ""Paolo Elito M. Ballesteros IV""@en .
  ?person dbo:birthPlace ?birthPlace .
}

# Query to find the region associated with Philippine Standard Time and a country in that region
SELECT DISTINCT ?country WHERE {
  ?timezone dcterms:isPartOf ?region .
  ?timezone rdfs:label ""Philippine Standard Time""@en .
  ?region dbo:country ?country .
}
```",5,6,6,2,3,2,3,28,0,0,2,0,0.0,0
839,66,test,"Give me the band of the member of Böhse Onkelz and band of the person born, that is a musical artist, as Kevin Richard Russell and band of the band, that is a musical artist, of the professional in Musician.","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/bandMember> ?v2 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?v3 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . <http://dbpedia.org/resource/Böhse_Onkelz> <http://dbpedia.org/ontology/bandMember> ?v6 . ?v3 <http://dbpedia.org/property/birthName> ""Kevin Richard Russell""@en . ?result <http://dbpedia.org/ontology/bandMember> ?v6 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?v1 <http://dbpedia.org/ontology/associatedMusicalArtist> ?v2 . ?v1 <http://dbpedia.org/property/occupation> ""Musician""@en . }","```sparql
SELECT DISTINCT ?boMemberBand ?kevinBand ?kevinOtherBand ?musicianBand WHERE {
  # Find a member of Böhse Onkelz and their band
  ?boMember dbo:memberOf dbr:Böhse_Onkelz .
  ?boMember dbo:band dbr:Böhse_Onkelz ;
            dbo:associatedBand ?boMemberBand .

  # Find Kevin Richard Russell's band
  ?kevin dcterms:title ""Kevin Richard Russell""@en .
  ?kevin dbo:band ?kevinBand .

  # Find other bands associated with members of Kevin Richard Russell's band
  ?member dbo:band ?kevinBand ;
          dbo:associatedBand ?kevinOtherBand .

  # Identify a musician and their band
  ?musician rdf:type dbo:Musician .
  ?musician dbo:band ?musicianBand .
}
```",7,9,8,3,3,3,3,71,0,0,1,0,0.0,0
124,58,test,"Give me the military force of the force, that is a societal event and a military conflict, of the person born on 1850-06-24 and military force of the war, that is an event and a military conflict and a societal event, of Frank Rhodes (British Army officer) and commander in Mahdist War.","SELECT ?result WHERE { <http://dbpedia.org/resource/Frank_Rhodes_(British_Army_officer)> <http://dbpedia.org/ontology/battle> ?v5 . ?v1 <http://dbpedia.org/ontology/birthDate> ""1850-06-24""^^<http://www.w3.org/2001/XMLSchema#date> . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. <http://dbpedia.org/resource/Mahdist_War> <http://dbpedia.org/ontology/commander> ?result . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?result <http://dbpedia.org/ontology/battle> ?v2 . ?result <http://dbpedia.org/ontology/battle> ?v5 . ?v2 <http://dbpedia.org/ontology/commander> ?v1 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?militaryForce1 ?militaryForce2 WHERE {
  # Find the person born on 1850-06-24
  ?person dbo:birthDate ""1850-06-24""^^xsd:date .
  
  # Get military force or conflict associated with this person
  ?person dbo:militaryConflict ?conflict1 .
  ?conflict1 dbo:participatingMilitaryForce ?militaryForce1 .

  # Find Frank Rhodes and his military involvement
  dbr:Frank_Rhodes dbo:militaryConflict ?conflict2 .
  ?conflict2 dbo:participatingMilitaryForce ?militaryForce2 .

  # Ensure the conflict is a societal event and military conflict
  ?conflict1 rdf:type dbo:SocietalEvent ;
             rdf:type dbo:MilitaryConflict .

  # Find commander in Mahdist War
  ?mahdistWar dbo:commander ?commander .
  ?mahdistWar rdfs:label ""Mahdist War""@en .
  
  # Ensure Frank Rhodes was a commander in the Mahdist War
  FILTER(?commander = dbr:Frank_Rhodes)
}
```",6,11,7,3,3,3,3,71,0,0,3,0,0.0,0
773,65,test,"Give me the parent of the child, that is a royalty, of Louis the German and parent of the successor of the child, that is a royalty, of Louis the Pious and spouse of the father of Charles the Fat.",SELECT ?result WHERE { ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. <http://dbpedia.org/resource/Louis_the_Pious> <http://dbpedia.org/ontology/child> ?v0 . <http://dbpedia.org/resource/Charles_the_Fat> <http://dbpedia.org/property/father> ?v4 . ?v3 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Louis_the_German> . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v0 <http://dbpedia.org/ontology/successor> ?v6 . ?v3 <http://dbpedia.org/ontology/parent> ?result . ?result <http://dbpedia.org/ontology/child> ?v6 . ?v4 <http://dbpedia.org/ontology/spouse> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?parentOfLouisGermanChild ?parentOfSuccessor ?spouseOfCharlesFatFather WHERE {
  # Step 1 & 2: Louis the German's child who is royalty and their parent
  ?child dbo:father dbr:Louis_the_German ;
         a dbo:Monarch .
  ?parentOfLouisGermanChild dbo:child ?child .

  # Step 3, 4 & 5: Louis the Pious' child who is royalty, their successor, and the successor's parent
  ?royalChild2 dbo:father dbr:Louis_the_Pious ;
               a dbo:Monarch .
  ?successor dbo:predecessor ?royalChild2 .
  ?parentOfSuccessor dbo:child ?successor .

  # Step 6 & 7: Charles the Fat's father and his spouse
  dbr:Charles_the_Fat dbo:father ?charlesFatFather .
  ?spouseOfCharlesFatFather dbo:spouse ?charlesFatFather .

  # Combine results to find the common entity
  FILTER (?parentOfLouisGermanChild = ?parentOfSuccessor)
  FILTER (?parentOfLouisGermanChild = ?spouseOfCharlesFatFather)
}
```",7,9,8,3,3,3,3,71,0,0,1,0,0.0,0
83,18,test,"Give me the ruling party in the birthplace, that is a town and Brazilian and a soccer club, of the member, that is a sports manager, of Kedah FA and party of the governor of Dilma Rousseff.",SELECT ?result WHERE { ?v2 <http://dbpedia.org/property/leaderParty> ?result . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerClub>. ?v1 <http://dbpedia.org/ontology/team> <http://dbpedia.org/resource/Kedah_FA> . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Town>. ?v2 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Brazil>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsManager>. ?v3 <http://dbpedia.org/ontology/party> ?result . ?v1 <http://dbpedia.org/ontology/birthPlace> ?v2 . <http://dbpedia.org/resource/Dilma_Rousseff> <http://dbpedia.org/property/governor> ?v3 . },"```sparql
# Step 1: Identify the sports manager associated with Kedah FA
SELECT ?manager WHERE {
  ?kfa dbo:member ?person .
  ?person rdf:type dbo:SportsManager .
  FILTER(CONTAINS(LCASE(?kfa), ""kedah fa""))
}

# Assuming we find a person, let's say their URI is <http://dbpedia.org/resource/John_Doe>

# Step 2: Determine the birthplace of this sports manager
SELECT ?birthPlace WHERE {
  <http://dbpedia.org/resource/John_Doe> dbo:birthPlace ?birthPlace .
}

# Assuming we find a place, let's say its URI is <http://dbpedia.org/resource/Brazilian_Town>

# Step 3: Check if the birthplace is a Brazilian town with a soccer club
ASK {
  <http://dbpedia.org/resource/Brazilian_Town> rdf:type dbo:Town .
  <http://dbpedia.org/resource/Brazilian_Town> dbo:country dbr:Brazil .
  ?soccerClub dbo:location <http://dbpedia.org/resource/Brazilian_Town> .
}

# Step 4: Identify the governor of Dilma Rousseff's state and their party
SELECT ?governorParty WHERE {
  ?dilma dbo:governmentRole ?role .
  ?role dbo:state ?state .
  ?governor dbo:officeHolder ?role .
  ?governor dbo:partyAffiliation ?governorParty .
}

# Assuming we find the party, let's say it is ""Party_X""

# Step 5: Find the ruling party in the identified Brazilian town
SELECT ?rulingParty WHERE {
  <http://dbpedia.org/resource/Brazilian_Town> dbo:governingBody ?government .
  ?government dbo:rulingParty ?rulingParty .
}
```",5,9,6,3,2,3,2,20,0,0,1,0,0.0,0
826,68,test,"Give me the predecessor of the parent of Prince Friedrich of Hesse and by Rhine and successor of the child, that is a royalty, of the reference, that is a royalty, to Louis I and spouse of the child of the father of Anna Magdalena Appel.","SELECT ?result WHERE { <http://dbpedia.org/resource/Anna_Magdalena_Appel> <http://dbpedia.org/property/father> ?v5 . ?v4 <http://dbpedia.org/ontology/spouse> ?result . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. <http://dbpedia.org/resource/Prince_Friedrich_of_Hesse_and_by_Rhine> <http://dbpedia.org/ontology/parent> ?v3 . ?v0 <http://dbpedia.org/ontology/child> ?v7 . ?result <http://dbpedia.org/ontology/successor> ?v3 . ?v7 <http://dbpedia.org/ontology/successor> ?result . ?v4 <http://dbpedia.org/property/father> ?v5 . ?v7 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v0 <http://xmlns.com/foaf/0.1/name> ""Louis I""@en . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?predecessor WHERE {
  # Step 1: Find Prince Friedrich of Hesse and by Rhine's parent
  ?friedrich a dbo:Person ;
             foaf:name ""Prince Friedrich of Hesse and by Rhine""@en .
  ?friedrich dbo:parent ?father .

  # Step 2: Find the predecessor of this parent
  ?predecessor dbo:successor ?father .

  # Step 3: Identify Louis I's reference that is royalty
  ?louisI a dbo:Person ;
          foaf:name ""Louis I""@en .
  
  # Step 4: Find the child of this royal figure
  ?child dbo:parent ?louisI .

  # Step 5: Identify the spouse of this child
  ?spouse dbo:spouse ?child .

  # Step 6: Find the successor of this spouse that is royalty
  ?successor dbo:predecessor ?spouse .
  
  FILTER(?predecessor != ?father) # Ensure it's not the same as Friedrich's father
}
```",8,10,9,3,3,3,3,71,0,0,1,0,0.0,0
926,63,test,"Give me the child of the father, that is a royalty, of Mustafa III and father of the father of the spouse of Neşerek Kadın and successor of the child of Ahmed III.",SELECT ?result WHERE { <http://dbpedia.org/resource/Neşerek_Kadın> <http://dbpedia.org/ontology/spouse> ?v3 . ?v3 <http://dbpedia.org/property/father> ?v1 . <http://dbpedia.org/resource/Mustafa_III> <http://dbpedia.org/property/father> ?v0 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v1 <http://dbpedia.org/property/father> ?result . ?v0 <http://dbpedia.org/ontology/child> ?result . ?v5 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Ahmed_III> . ?v5 <http://dbpedia.org/ontology/successor> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?person WHERE {
  # Mustafa III's father
  dbr:Mustafa_III dbo:father dbr:Abdul_Hamid_I .
  
  # Abdul Hamid I is a royalty (Sultan)
  dbr:Abdul_Hamid_I a dbo:Sultan .

  # Ahmed III's child
  dbr:Ahmed_III dbo:child dbr:Mustafa_III .

  # Successor of Mustafa III
  dbr:Mustafa_III dbo:succeededBy dbr:Abdul_Hamid_I .

  # Neşerek Kadın's spouse
  dbr:Neşerek_Kadın dbo:spouse dbr:Selim_III .

  # Father of Selim III
  dbr:Selim_III dbo:father dbr:Mustafa_III .
  
  # Abdul Hamid I is the person we are looking for
  ?person dbr:Abdul_Hamid_I .
}
```",7,8,8,3,3,3,3,71,0,0,1,0,0.0,0
216,27,test,Give me the office of Tim Nicholls and party of the awardee of Australian Defence Medal and administration of the designer of Woolfe: The Red Hood Diaries.,SELECT ?result WHERE { <http://dbpedia.org/resource/Woolfe:_The_Red_Hood_Diaries> <http://dbpedia.org/property/designer> ?v0 . ?v3 <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/Australian_Defence_Medal> . ?result <http://dbpedia.org/property/leader> ?v0 . <http://dbpedia.org/resource/Tim_Nicholls> <http://dbpedia.org/property/office> ?result . ?v3 <http://dbpedia.org/ontology/party> ?result . },"```sparql
# Query for Tim Nicholls' office
SELECT ?office WHERE {
  dbpedia:Tim_Nicholls dbo:occupation ?office .
}

UNION

# Query for a notable awardee of the Australian Defence Medal and their party
SELECT ?party WHERE {
  ?person dbo:awardReceived dbpedia:Australian_Defence_Medal ;
          foaf:nationality dbr:Australia ;
          dbo:politicalParty ?party .
  FILTER (LANG(?party) = ""en"")
}

UNION

# Query for the designer of Woolfe: The Red Hood Diaries and their administration
SELECT ?administration WHERE {
  dbpedia:Woolfe:_The_Red_Hood_Diaries dbo:creator ?designer ;
                                            dbo:administrator ?administration .
}
```",5,5,6,2,3,2,3,28,0,0,1,0,0.0,0
456,67,test,"Give me the band of the band, that is a musical artist, of the band of Alan Doyle and spouse of Danielle Spencer (Australian actress) and professional in the alter ego of the reference, that is a fictional character, to Lamont Cranston (radio, film and television).","SELECT ?result WHERE { <http://dbpedia.org/resource/Danielle_Spencer_(Australian_actress)> <http://dbpedia.org/ontology/spouse> ?result . ?result <http://dbpedia.org/property/occupation> ?v6 . <http://dbpedia.org/resource/Alan_Doyle> <http://dbpedia.org/ontology/associatedMusicalArtist> ?v1 . ?v1 <http://dbpedia.org/ontology/associatedMusicalArtist> ?v3 . ?v0 <http://dbpedia.org/property/alterEgo> ?v6 . ?v3 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/FictionalCharacter>. ?v0 <http://xmlns.com/foaf/0.1/name> ""Lamont Cranston (radio, film and television)""@en . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. }","```sparql
SELECT ?band WHERE {
  ?person foaf:name ""Alan Doyle"" .
  ?person dbo:memberOf <http://dbpedia.org/resource/Great_Big_Sea> .

  ?spouse1 foaf:name ""Danielle Spencer""@en .
  ?spouse2 foaf:name ""Ryan Reynolds""@en .
  ?spouse1 dbo:spouse ?spouse2 .

  ?character foaf:name ""The Shadow""@en .
  ?character dbo:alterEgoOf <http://dbpedia.org/resource/Lamont_Cranston> .

  ?hipBand dbo:member ?reynoldsMember .
  ?reynoldsMember foaf:name ""Ryan Reynolds"" .
  ?hipBand rdfs:label ?band .
  
  FILTER (lang(?band) = 'en')
}
```",7,9,8,3,3,3,3,71,0,0,1,0,0.0,0
170,25,test,Give me the birth place of the awardee of People's Artist of Russia and domain of Mayor and entity in the work of International Energy Agency.,"SELECT ?result WHERE { ?v3 <http://dbpedia.org/property/author> <http://dbpedia.org/resource/International_Energy_Agency> . ?v4 <http://dbpedia.org/ontology/birthPlace> ?result . ?v4 <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/People's_Artist_of_Russia> . ?result <http://dbpedia.org/ontology/leaderTitle> ""Mayor""@en . ?result <http://dbpedia.org/ontology/country> ?v3 . }","```sparql
# Query for birthplace of awardees of People's Artist of Russia
SELECT ?person ?birthPlace WHERE {
  ?person dbo:award dbpedia-ru:Народный_художник_Российской_Федерации .
  ?person dbo:birthPlace ?birthPlace .
}

UNION

# Query for entities related to the work of International Energy Agency
SELECT ?entity WHERE {
  ?entity dbo:organization dbpedia:International_Energy_Agency .
  ?entity rdf:type dbo:Country OR ?entity rdf:type dbo:Organization .
}
```",5,5,6,2,3,2,3,28,0,0,3,0,0.0,0
955,19,test,"Give me the band of the band member, that is a musical artist and an artist, of the reference, that is a band and a group and an organisation, to Street Dogs and band of the writer of Don't Forget Your Roots (album).","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/bandMember> ?v2 . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?result <http://dbpedia.org/ontology/bandMember> ?v4 . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. ?v4 <http://dbpedia.org/ontology/associatedMusicalArtist> ?v0 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Band>. <http://dbpedia.org/resource/Don't_Forget_Your_Roots_(album)> <http://dbpedia.org/property/writer> ?v2 . ?v0 <http://xmlns.com/foaf/0.1/name> ""Street Dogs""@en . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Group>. }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?bandMember ?otherBand WHERE {
  # Identify Street Dogs
  VALUES (?streetDogs) { dbr:Street_Dogs }

  # Find members of Street Dogs associated with the album ""Don't Forget Your Roots""
  ?album dbo:artist ?bandMember .
  ?album rdfs:label ""Don't Forget Your Roots""@en .

  # Ensure the band member is part of Street Dogs
  ?streetDogs dbo:member ?bandMember .

  # Check if the band member is part of any other bands
  ?otherBand dbo:member ?bandMember .

  # Ensure the band member is both an artist and a musical artist
  ?bandMember dbo:occupation ?occupation .
  FILTER (
    EXISTS { ?bandMember dbo:occupation dbr:Musical_artist . }
    && EXISTS { ?bandMember dbo:occupation dbr:Artist_(art) . }
  )

  # Filter out the original band (Street Dogs)
  FILTER (?otherBand != ?streetDogs)
}
```",5,10,6,3,2,3,2,20,0,0,1,0,0.0,0
216,28,test,Give me the party of the awardee of Australian Defence Medal and office of the mayor of Ros Bates and administration of the designer of Woolfe: The Red Hood Diaries.,SELECT ?result WHERE { ?result <http://dbpedia.org/property/leader> ?v5 . <http://dbpedia.org/resource/Woolfe:_The_Red_Hood_Diaries> <http://dbpedia.org/property/designer> ?v5 . ?v3 <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/Australian_Defence_Medal> . <http://dbpedia.org/resource/Ros_Bates> <http://dbpedia.org/property/leader> ?v1 . ?v1 <http://dbpedia.org/property/office> ?result . ?v3 <http://dbpedia.org/ontology/party> ?result . },"```sparql
# Query for the political party of an awardee of the Australian Defence Medal
SELECT ?person ?party WHERE {
  ?person dbo:award dbpedia:Australian_Defence_Medal .
  OPTIONAL { ?person dbo:politicalParty ?party . }
  FILTER (LANG(?party) = ""en"")
} LIMIT 1

# Query for the office of Ros Bates
SELECT ?office WHERE {
  dbpedia:Ros_Bates dbo:positionHeld ?office .
}

# Query for the administration of the designer of Woolfe: The Red Hood Diaries
SELECT ?designer ?administration WHERE {
  dbpedia:Woolfe:_The_Red_Hood_Diaries dbo:creator ?designer .
  OPTIONAL { ?designer dbo:memberOf ?administration . }
  FILTER (LANG(?administration) = ""en"")
} LIMIT 1
```",6,6,7,2,3,2,3,28,0,0,1,0,0.0,0
18,25,test,"Give me the parent of the professional in Actress and alumnus of Marymount College, Tarrytown and professional in the award of Ana María Sánchez de Ríos.","SELECT ?result WHERE { ?result <http://dbpedia.org/property/occupation> ?v3 . ?result <http://dbpedia.org/ontology/child> ?v0 . ?v0 <http://dbpedia.org/property/occupation> ""Actress""@en . ?result <http://dbpedia.org/ontology/almaMater> <http://dbpedia.org/resource/Marymount_College,_Tarrytown> . <http://dbpedia.org/resource/Ana_María_Sánchez_de_Ríos> <http://dbpedia.org/property/awards> ?v3 . }","```sparql
SELECT ?parent WHERE {
  ?person dbo:almaMater dbr:Marymount_College_(Tarrytown,_New_York) ;
          dbo:occupation dbr:Actress .
  ?association dbo:professional dbr:Ana_María_Sánchez_de_Ríos ;
               dbo:associatedWith ?person .
  ?person foaf:parent ?parent .
}
```",5,5,6,2,3,2,3,28,0,0,1,0,0.0,0
773,58,test,"Give me the spouse of Louis the German and parent of the child, that is a royalty, of the father, that is an office holder and a royalty, of Carloman of Bavaria and parent of the successor of Charles the Bald.",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/child> ?v5 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v2 <http://dbpedia.org/ontology/parent> ?result . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. <http://dbpedia.org/resource/Charles_the_Bald> <http://dbpedia.org/ontology/successor> ?v5 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. <http://dbpedia.org/resource/Carloman_of_Bavaria> <http://dbpedia.org/property/father> ?v1 . <http://dbpedia.org/resource/Louis_the_German> <http://dbpedia.org/ontology/spouse> ?result . ?v2 <http://dbpedia.org/property/father> ?v1 . },"```sparql
SELECT ?spouse WHERE {
  wd:Q1198 wdt:P26 ?spouse .
}
```",6,9,7,3,3,3,3,71,0,0,1,0,0.0,0
129,27,test,"Give me the associated musical artist of the actor, that is an organisation, of Dreamville Presents: Revenge and professional in  and associated musical artist of the person born as Tahj Malik Chandler.","SELECT ?result WHERE { <http://dbpedia.org/resource/Dreamville_Presents:_Revenge> <http://dbpedia.org/property/starring> ?v3 . ?v0 <http://dbpedia.org/property/birthName> ""Tahj Malik Chandler""@en . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?v0 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v3 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?result <http://dbpedia.org/property/occupation> """"@en . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT DISTINCT ?artist1 ?artist2 WHERE {
  # Find J. Cole as an actor in ""Dreamville Presents: Revenge"" and confirm he is a professional musician
  ?production dbo:title ""Dreamville Presents: Revenge""@en .
  ?production dbo:actor dbr:J._Cole .
  ?jcole dbo:profession dbp:musician .

  # Find Childish Gambino as the person born Tahj Malik Chandler
  ?childishGambino rdfs:label ""Childish Gambino""@en ;
                  foaf:birthName ""Tahj Malik Chandler"" ;
                  dbo:associatedMusicalArtist ?artist2 .
}
```",5,6,6,2,3,2,3,28,0,0,1,0,0.0,0
573,71,test,"Give me the parent of the author, that is a politician and an office holder, of the work of John Quincy Adams and person decedent at the residence, that is a settlement, of the professional, that is American, in Politician and person decedent at the administration, that is a region, of the real name of Charlie Baker (Australian footballer).","SELECT ?result WHERE { <http://dbpedia.org/resource/Charlie_Baker_(Australian_footballer)> <http://xmlns.com/foaf/0.1/name> ?v1 . ?result <http://dbpedia.org/ontology/deathPlace> ?v2 . ?v4 <http://dbpedia.org/property/occupation> ""Politician""@en . ?result <http://dbpedia.org/ontology/deathPlace> ?v5 . ?v8 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v8 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v2 <http://dbpedia.org/property/governor> ?v1 . ?v7 <http://dbpedia.org/property/author> ?v8 . ?v8 <http://dbpedia.org/ontology/parent> ?result . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Region>. ?v4 <http://dbpedia.org/ontology/nationality> <http://dbpedia.org/resource/United_States>. ?v4 <http://dbpedia.org/property/residence> ?v5 . ?v7 <http://dbpedia.org/property/author> <http://dbpedia.org/resource/John_Quincy_Adams> . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. }","```sparql
SELECT DISTINCT ?parentName WHERE {
  # Step 1: Identify Charlie Baker (Australian footballer)
  ?charlieBaker dbp:birthPlace ?birthPlace .
  ?charlieBaker rdf:type dbo:AustralianFootballer .
  ?charlieBaker foaf:name ""Charlie Baker"" .

  # Step 2: Find the administration as a region
  ?administration dbo:member ?charlieBaker .
  ?administration rdf:type dbo:Region .

  # Step 3: Locate the residence of this professional
  ?professional dbp:nationality dbr:United_States .
  ?professional dbo:residence ?settlement .
  ?settlement rdf:type dbo:Settlement .

  # Step 4: Identify the author of John Quincy Adams' work
  ?work dbo:author ?author .
  ?work dbo:subject dbr:John_Quincy_Adams .

  # Step 5: Find the parent who is a politician and office holder
  ?parent dbp:child ?author .
  ?parent rdf:type dbo:Politician ;
          dbo:officeHolder true .
  
  BIND(?parent AS ?resultParent)
  SERVICE wikibase:label { bd:serviceParam wikibase:language ""[AUTO_LANGUAGE],en"". }
}
```",9,14,10,3,3,3,3,71,0,0,2,0,0.0,0
791,59,test,"Give me the spouse of the spouse, that is a royalty, of the reference to Emperor Takakura and predecessor of the child of the child, that is an office holder and a royalty, of Emperor Go-Shirakawa.","SELECT ?result WHERE { ?v2 <http://dbpedia.org/ontology/spouse> ?v3 . ?result <http://dbpedia.org/ontology/spouse> ?v2 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v5 <http://dbpedia.org/property/father> ?v0 . ?v3 <http://xmlns.com/foaf/0.1/name> ""Emperor Takakura""@en . ?v0 <http://dbpedia.org/ontology/parent> <http://dbpedia.org/resource/Emperor_Go-Shirakawa> . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?result <http://dbpedia.org/ontology/successor> ?v5 . }","```sparql
SELECT ?spouseOfSpouse WHERE {
  # Step 1: Find Emperor Takakura's spouse
  dbpedia:Emperor_Takakura dbo:spouse ?takakurasSpouse .

  # Step 2: Find the spouse of that spouse
  ?takakurasSpouse dbo:spouse ?spouseOfSpouse .

  # Step 3: Ensure this person is royalty
  ?spouseOfSpouse rdf:type dbpedia:Royalty .

  # Step 4: Find Emperor Go-Shirakawa's child
  dbpedia:Emperor_Go-Shirakawa dbo:child ?goShirakawasChild .

  # Step 5: Find the grandchild of Emperor Go-Shirakawa
  ?goShirakawasChild dbo:child ?grandchildOfGoShirakawa .

  # Step 6: Ensure this grandchild is an office holder and royalty
  ?grandchildOfGoShirakawa rdf:type dbpedia:Royalty .
  ?grandchildOfGoShirakawa dbo:officeHolder ?office .

  # Step 7: Find the predecessor of that grandchild
  ?predecessor dbo:succeededBy ?grandchildOfGoShirakawa .

  # Step 8: Find the spouse of that predecessor
  ?predecessor dbo:spouse ?finalSpouse .
}
```",6,9,7,3,2,3,3,71,0,0,1,0,0.0,0
715,70,test,"Give me the commander in the force, that is a military conflict, of Abd el-Krim and leader of the office, that is a government agency and an organisation, of the reference to Carlos Franco Iribarnegaray and commander in the force of the mayor, that is an office holder and a politician and a president, of 1933 Spanish general election.","SELECT ?result WHERE { ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/GovernmentAgency>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/President>. ?v1 <http://dbpedia.org/property/office> ?v3 . <http://dbpedia.org/resource/1933_Spanish_general_election> <http://dbpedia.org/property/leader> ?v0 . ?v4 <http://dbpedia.org/ontology/commander> ?result . ?v4 <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Abd_el-Krim> . ?v7 <http://dbpedia.org/ontology/commander> ?v0 . ?v3 <http://dbpedia.org/ontology/leader> ?result . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v7 <http://dbpedia.org/ontology/commander> ?result . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?v1 <http://xmlns.com/foaf/0.1/name> ""Carlos Franco Iribarnegaray""@en . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?abdElKrimCommander ?carlosFrancoRole ?mayorPresident ?mayorCommander
WHERE {
  # Abd el-Krim as a commander in the Rif War
  dbr:Abd_el-Krim dbo:militaryConflict dbr:Rif_War .
  
  # Carlos Franco Iribarnegaray's role and connection to Abd el-Krim
  ?carlosFrancoRole dbo:leader dbr:Carlos_Franco_Iribarnegaray ;
                   dbo:officeHolder ?office ;
                   dbo:organization ?organization .
  OPTIONAL { ?office dbo:reference dbr:Abd_el-Krim . }
  
  # Mayor from the 1933 Spanish general election who became president
  ?mayorPresident dbo:electedAs dbr:Mayor_of_Spain ;
                  dbo:dateElected ""1933""^^xsd:gYear .
  OPTIONAL { ?mayorPresident dbo:presidentOf dbr:Spain . }
  
  # Commander of the mayor-president
  ?mayorCommander dbo:commanderInForce ?mayorPresident .
}
```",8,14,9,3,3,3,3,71,0,0,1,0,0.0,0
579,20,test,"Give me the native of the residence, that is English and a settlement, of the resident of Scotland and person born as the birth name of the native, that is an office holder, of Edinburgh.",SELECT ?result WHERE { ?result <http://dbpedia.org/property/birthName> ?v5 . ?v4 <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Edinburgh> . ?v1 <http://dbpedia.org/property/residence> ?v2 . ?result <http://dbpedia.org/ontology/birthPlace> ?v2 . ?v2 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/United_Kingdom>. ?v4 <http://dbpedia.org/property/birthName> ?v5 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. ?v1 <http://dbpedia.org/ontology/residence> <http://dbpedia.org/resource/Scotland> . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. },"```sparql
# Step 1: Find an office holder from Edinburgh
SELECT ?officeHolder ?birthName WHERE {
  ?officeHolder dbo:nationality dbr:United_Kingdom ;
               dbo:placeOfBirth dbr:Edinburgh ;
               foaf:name ?name .
  OPTIONAL { ?officeHolder schema:birthName ?birthName . }
}

# Step 2: Get their birth name (assuming we have a specific office holder in mind, e.g., Boris Johnson)
SELECT ?birthName WHERE {
  ?person schema:birthName ?birthName .
  FILTER(?person = <http://dbpedia.org/resource/Boris_Johnson>)
}

# Step 3: Identify a Scottish resident with that birth name
SELECT ?resident WHERE {
  ?resident dbo:nationality dbr:Scotland ;
            schema:birthName ?birthName .
  FILTER(?birthName = ""Boris Johnson"") # Replace with the actual birth name from step 2
}

# Step 4: Determine their residence (assuming we have a specific resident in mind, e.g., Boris Johnson)
SELECT ?residence WHERE {
  ?resident dbo:currentResidence ?residence .
  FILTER(?resident = <http://dbpedia.org/resource/Boris_Johnson>) # Replace with the actual resident from step 3
}

# Step 5: Find the native of this residence (assuming it's an English settlement)
SELECT ?native WHERE {
  ?residence dbo:native dbr:England ;
             dbo:settlementType dbr:Settlement .
  ?resident dbo:currentResidence ?residence .
  FILTER(?resident = <http://dbpedia.org/resource/Boris_Johnson>) # Replace with the actual resident from step 4
}
```",6,9,7,3,2,3,2,20,0,0,18,0,0.0,0
47,65,test,"Give me the office of the administration of Jagdeep Dhankhar and office of the awardee of Padma Vibhushan and office of the awardee of the award, that is an award, of Mantu Ghosh.",SELECT ?result WHERE { <http://dbpedia.org/resource/Mantu_Ghosh> <http://dbpedia.org/property/awards> ?v0 . ?v3 <http://dbpedia.org/property/office> ?result . ?v4 <http://dbpedia.org/property/governor> <http://dbpedia.org/resource/Jagdeep_Dhankhar> . ?v6 <http://dbpedia.org/property/office> ?result . ?v6 <http://dbpedia.org/property/awards> ?v0 . ?v4 <http://dbpedia.org/property/office> ?result . ?v3 <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/Padma_Vibhushan> . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Award>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?officeJagdeep ?officePadmaVibhushan ?officeMantuGhosh WHERE {
  # Office of Jagdeep Dhankhar
  OPTIONAL { 
    dbr:Jagdeep_Dhankhar dbo:positionHeld ?officeJagdeep .
  }

  # Example office of a Padma Vibhushan awardee (using Lata Mangeshkar as an example)
  OPTIONAL {
    dbr:Lata_Mangeshkar dbo:awardReceived dbr:Padma_Vibhushan ;
                        dbo:positionHeld ?officePadmaVibhushan .
  }

  # Office of Mantu Ghosh related to the Sahitya Akademi Award
  OPTIONAL {
    dbr:Mantu_Ghosh dbo:awardReceived dbr:Sahitya_Akademi_Award ;
                    dbo:positionHeld ?officeMantuGhosh .
  }
}
```",7,8,8,3,3,3,3,71,0,0,1,0,0.0,0
976,65,test,"Give me the office of the mayor, that is a politician and an office holder and Turkish, of the reference, that is an organisation and a political party and Turkish, to Millet İttifakı and office of the leader, that is a politician, of Grand National Assembly of Turkey and office of the person born as Mehmet Naci Bostancı.","SELECT ?result WHERE { ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v0 <http://dbpedia.org/property/birthName> ""Mehmet Naci Bostancı""@en . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v2 <http://dbpedia.org/property/office> ?result . ?v1 <http://dbpedia.org/property/leader> ?v5 . <http://dbpedia.org/resource/Grand_National_Assembly_of_Turkey> <http://dbpedia.org/ontology/leader> ?v2 . ?v0 <http://dbpedia.org/property/office> ?result . ?v5 <http://dbpedia.org/ontology/nationality> <http://dbpedia.org/resource/Turkey>. ?v5 <http://dbpedia.org/property/office> ?result . ?v1 <http://xmlns.com/foaf/0.1/name> ""Millet İttifakı""@en . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/PoliticalParty>. ?v1 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Turkey>. }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT DISTINCT ?mayorOffice ?leaderOffice ?personOffice
WHERE {
  # Office of the Mayor who is a politician and Turkish
  ?mayor dbo:office ?mayorOffice .
  ?mayor dbo:country dbr:Türkiye .
  ?mayor rdf:type dbo:Politician .

  # Reference to Millet İttifakı as an organisation and political party
  dbr:Millet_İttifakı dbo:politicalParty dbr:Türkiye ;
                     a dbo:PoliticalParty .

  # Office of the Leader of Grand National Assembly of Turkey
  ?leaderOffice dbo:officeName ""Speaker of the Grand National Assembly of Turkey"" .
  ?leader dbo:holdsPosition ?leaderOffice .
  ?leader rdf:type dbo:Politician .

  # Person born as Mehmet Naci Bostancı and their office
  dbr:Mehmet_Naci_Bostancı foaf:name ""Mehmet Naci Bostancı"" ;
                           dbo:office ?personOffice .
}
```",7,14,8,3,3,3,3,71,0,0,1,0,0.0,0
933,59,test,"Give me the reference to the birth name of the professional in Musician and band of the band of the band, that is an artist and a musical artist, of The Ramong Sound.",SELECT ?result WHERE { ?result <http://xmlns.com/foaf/0.1/name> ?v4 . ?v3 <http://dbpedia.org/ontology/associatedMusicalArtist> ?v1 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. ?v1 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v0 <http://dbpedia.org/property/birthName> ?v4 . ?v0 <http://dbpedia.org/property/occupation> <http://dbpedia.org/resource/Musician> . <http://dbpedia.org/resource/The_Ramong_Sound> <http://dbpedia.org/ontology/associatedMusicalArtist> ?v3 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?musician ?birthName WHERE {
  ?musician a dbo:MusicArtist ;
            dbo:musicalBand dbp:band ""The Rolling Stones""@en .
  OPTIONAL { ?musician dbo:birthName ?birthName . }
}
```",6,8,7,3,2,3,3,71,0,0,1,0,0.0,0
917,59,test,"Give me the parent of the child, that is a royalty, of the mayor of Hawaiian Kingdom and child of the father of the spouse, that is a royalty, of Leleiohoku I.",SELECT ?result WHERE { ?v0 <http://dbpedia.org/property/father> ?v4 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?result <http://dbpedia.org/ontology/parent> ?v4 . <http://dbpedia.org/resource/Hawaiian_Kingdom> <http://dbpedia.org/property/leader> ?v3 . ?v1 <http://dbpedia.org/property/father> ?v3 . ?result <http://dbpedia.org/ontology/child> ?v1 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v0 <http://dbpedia.org/ontology/spouse> <http://dbpedia.org/resource/Leleiohoku_I> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?parent WHERE {
  # Step 1: Identify Leleiohoku I
  VALUES (?leleiohokuI) { dbr:Leleiohoku_I }

  # Step 2: Find spouse of Leleiohoku I who is royalty
  ?spouse dbo:spouseOf ?leleiohokuI .
  ?spouse a dbo:Monarch .

  # Step 3: Identify father of this spouse
  ?father dbo:child ?spouse .

  # Step 4: Find children of the father
  ?child dbo:parent ?father .

  # Step 5: Identify mayor in Hawaiian Kingdom context (hypothetical)
  ?mayor a dbo:MunicipalMayor ;
         dbo:country dbr:Hawaii .

  # Step 6: Check if any child of this mayor is royalty
  ?royaltyChild dbo:childOf ?mayor .
  ?royaltyChild a dbo:Monarch .

  # Step 7: Find parent of the royal child
  ?parent dbo:child ?royaltyChild .
}
```",6,8,7,3,2,3,3,71,0,0,3,0,0.0,0
582,56,test,"Give me the figure known as the nickname of the team, that is an organisation, of Hajime Moriyasu and reference to the residence of Hirotaka Sugawara and player in Kazuaki Nagasawa.",SELECT ?result WHERE { ?v0 <http://dbpedia.org/property/nickname> ?v1 . ?v0 <http://dbpedia.org/ontology/coach> <http://dbpedia.org/resource/Hajime_Moriyasu> . ?result <http://xmlns.com/foaf/0.1/name> ?v2 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. <http://dbpedia.org/resource/Kazuaki_Nagasawa> <http://dbpedia.org/ontology/team> ?result . <http://dbpedia.org/resource/Hirotaka_Sugawara> <http://dbpedia.org/property/residence> ?v2 . ?result <http://dbpedia.org/property/nickname> ?v1 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?teamNickname ?residence ?club
WHERE {
  # Hajime Moriyasu's team and its nickname
  OPTIONAL {
    ?manager a dbo:FootballManager ;
             foaf:name ""Hajime Moriyasu"" .
    ?manager dbo:managedTeam ?team .
    ?team dbo:nickname ?teamNickname .
  }

  # Hirotaka Sugawara's residence
  OPTIONAL {
    ?person a dbo:Person ;
            foaf:name ""Hirotaka Sugawara"" .
    ?person dbo:residenceLocation ?location .
    ?location rdfs:label ?residence .
    FILTER (lang(?residence) = 'en')
  }

  # Kazuaki Nagasawa's club
  OPTIONAL {
    ?player a dbo:FootballPlayer ;
            foaf:name ""Kazuaki Nagasawa"" .
    ?player dbo:playsFor ?club .
  }
}
```",6,7,7,3,3,3,3,71,0,0,1,0,0.0,0
715,69,test,"Give me the leader of the office, that is a government agency and an organisation, of the reference to Carlos Franco Iribarnegaray and commander in the force of Francisco Largo Caballero and commander in the force, that is a military conflict, of the native of Morocco.","SELECT ?result WHERE { ?v4 <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Morocco> . ?v3 <http://dbpedia.org/ontology/commander> ?v4 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/GovernmentAgency>. ?v7 <http://dbpedia.org/ontology/commander> ?result . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v1 <http://xmlns.com/foaf/0.1/name> ""Carlos Franco Iribarnegaray""@en . ?v2 <http://dbpedia.org/ontology/leader> ?result . ?v7 <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Francisco_Largo_Caballero> . ?v3 <http://dbpedia.org/ontology/commander> ?result . ?v1 <http://dbpedia.org/property/office> ?v2 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?leader WHERE {
  # Carlos Franco Iribarnegaray as leader of an office that is both a government agency and an organization
  dbr:Carlos_Franco_Iribarnegaray dbo:positionHeld ?office .
  ?office rdf:type dbo:GovernmentAgency ;
          rdf:type dbo:Organization .

  # Francisco Largo Caballero as commander in the force led by Carlos Franco Iribarnegaray
  dbr:Francisco_Largo_Caballero dbo:commanderOf ?force1 .
  ?force1 dbo:leader ?officeLeader .
  FILTER(?officeLeader = dbr:Carlos_Franco_Iribarnegaray)

  # Francisco Largo Caballero as commander in another military conflict involving a Moroccan native
  dbr:Francisco_Largo_Caballero dbo:commanderOf ?force2 .
  ?force2 dbo:leader ?otherLeader .
  ?conflict dbo:participatedIn ?force2 ;
            dbo:nativeCountry dbr:Morocco .

  # Return the leader of the office
  BIND(dbr:Carlos_Franco_Iribarnegaray AS ?leader)
}
```",8,11,9,3,3,3,3,71,0,0,1,0,0.0,0
326,19,test,"Give me the person decedent at the award, that is a country, of the awardee of French Legion of Honor and resident of the birthplace, that is a state and British, of David Jessel.","SELECT ?result WHERE { ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. ?result <http://dbpedia.org/property/residence> ?v2 . ?v0 <http://dbpedia.org/property/awards> ""French Legion of Honor""@en . ?v0 <http://dbpedia.org/property/awards> ?v4 . <http://dbpedia.org/resource/David_Jessel> <http://dbpedia.org/ontology/birthPlace> ?v2 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/AdministrativeRegion>. ?v2 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/United_Kingdom>. ?result <http://dbpedia.org/ontology/deathPlace> ?v4 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT DISTINCT ?decedent WHERE {
  # Step 1: Find David Jessel's birthplace
  dbr:David_Jessel dbo:birthPlace ?birthPlace .
  
  # Ensure the birthplace is a state in the UK
  ?birthPlace rdf:type dbo:State .

  # Step 2: Find awardees of the French Legion of Honor residing in that place
  ?person dbo:nationality dbr:United_Kingdom ;
          dbo:residence ?birthPlace ;
          dbo:honoraryTitle dbr:French_Legion_of_Honor .

  # Step 3: Identify awards associated with a country for these individuals
  ?award dbo:recipient ?person ;
         dbo:country ?country .

  # Ensure the award is associated with a country
  ?country rdf:type dbo:Country .

  # Step 4: Find the decedent related to such an award
  ?award dbo:decedent ?decedent .
}
```",5,8,6,3,2,3,2,20,0,0,1,0,0.0,0
465,57,test,"Give me the spouse of the child, that is a royalty, of the parent of Elizabeth of Austria (1526–1545) and successor of Ercole II d'Este, Duke of Ferrara and successor of the child, that is a royalty, of Anne of Brittany.","SELECT ?result WHERE { ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. <http://dbpedia.org/resource/Ercole_II_d'Este,_Duke_of_Ferrara> <http://dbpedia.org/ontology/successor> ?result . ?v0 <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Elizabeth_of_Austria_(1526–1545)> . ?v3 <http://dbpedia.org/ontology/successor> ?result . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. <http://dbpedia.org/resource/Anne_of_Brittany> <http://dbpedia.org/ontology/child> ?v3 . ?v0 <http://dbpedia.org/ontology/child> ?v5 . ?result <http://dbpedia.org/ontology/spouse> ?v5 . }","```sparql
# Step 1: Identify Elizabeth of Austria's parent
SELECT ?parent WHERE {
  wd:Q123456 wdt:P22 ?parent. # Q123456 is a placeholder for Elizabeth of Austria (1526–1545)
}

# Step 2: Find the successor of Ercole II d'Este, Duke of Ferrara
SELECT ?successor WHERE {
  wd:Q789012 wdt:P57 ?successor. # Q789012 is a placeholder for Ercole II d'Este
}

# Step 3: Identify the child who is royalty and their spouse
SELECT ?child ?spouse WHERE {
  ?parent wdt:P40 ?child.
  ?child wdt:P26 ?spouse.
  ?child wdt:P31 wd:Q5. # Q5 represents human, ensuring the child is a person
}

# Step 4: Identify Anne of Brittany's royal child
SELECT ?royalChild WHERE {
  wd:Q345678 wdt:P40 ?royalChild. # Q345678 is a placeholder for Anne of Brittany
  ?royalChild wdt:P31 wd:Q5.
}

# Step 5: Find the successor of this royal child
SELECT ?successor2 WHERE {
  ?royalChild wdt:P57 ?successor2.
}

# Final step: Identify the spouse of the specified individual
SELECT ?finalSpouse WHERE {
  ?specifiedIndividual wdt:P26 ?finalSpouse.
}
```

Note: The placeholders (e.g., Q123456, Q789012) need to be replaced with actual DBpedia identifiers for Elizabeth of Austria, Ercole II d'Este, and Anne of Brittany. This query structure assumes the relationships are correctly identified in DBpedia.",6,8,7,3,3,3,3,71,0,0,1,0,0.0,0
987,69,test,"Give me the entity in the region, that is a country, of the time zone, that is a sports event, in Canicosa de la Sierra and birth place of the band, that is an artist and a musical artist, of the band, that is an artist, of Dado Polumenta and birth place of the actor of All for Free.",SELECT ?result WHERE { ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsEvent>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?v0 <http://dbpedia.org/property/timeZone> ?v5 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. <http://dbpedia.org/resource/All_for_Free> <http://dbpedia.org/property/starring> ?v6 . ?result <http://dbpedia.org/ontology/country> ?v0 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. ?v4 <http://dbpedia.org/ontology/associatedMusicalArtist> ?v2 . ?v2 <http://dbpedia.org/ontology/birthPlace> ?result . <http://dbpedia.org/resource/Dado_Polumenta> <http://dbpedia.org/ontology/associatedMusicalArtist> ?v4 . <http://dbpedia.org/resource/Canicosa_de_la_Sierra> <http://dbpedia.org/ontology/timeZone> ?v5 . ?v6 <http://dbpedia.org/ontology/birthPlace> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT DISTINCT ?country WHERE {
  # Step 1: Find Dado Prudhomme's band ""All for Free""
  ?band a dbo:Band ;
        dbo:member dbr:Dado_Prudhomme ;
        rdfs:label ""All for Free""@en .

  # Step 2: Find an actor associated with ""All for Free"" and their birthplace
  ?actor dbo:associatedBand ?band ;
         dbo:birthPlace ?birthPlace .

  # Step 3: Find a band or artist born in the same place as the actor
  ?artist dbo:birthPlace ?birthPlace ;
          (a dbo:MusicalArtist ; dbo:Artist) .

  # Step 4: Determine the time zone for Canicosa de la Sierra
  dbr:Canicosa_de_la_Sierra dbo:timeZone ?timeZone .

  # Step 5: Find sports events in that time zone
  ?event a dbo:SportsEvent ;
         dbo:locationTimezone ?timeZone .

  # Step 6: Identify the country of these sports events
  ?event dbo:country ?country .
}
```",8,13,9,3,3,3,3,71,0,0,1,0,0.0,0
955,18,test,"Give me the band of the band member, that is a musical artist and an artist, of Street Dogs and band of the writer of the work, that is a work and an album and a musical work, of Matt Freeman.",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/bandMember> ?v3 . ?result <http://dbpedia.org/ontology/bandMember> ?v2 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalWork>. ?v3 <http://dbpedia.org/ontology/associatedMusicalArtist> <http://dbpedia.org/resource/Street_Dogs> . ?v1 <http://dbpedia.org/property/writer> ?v2 . ?v1 <http://dbpedia.org/property/writer> <http://dbpedia.org/resource/Matt_Freeman> . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Album>. },"```sparql
# Query for part 1: Band of a member of Street Dogs who is both a musical artist and an artist
SELECT DISTINCT ?memberBand WHERE {
  ?streetDog dbr:Street_Dogs dbo:bandMember ?member .
  ?member dbo:occupation dbp:musical_artist ;
          dbo:occupation dbp:artist .
  ?member dbo:associatedBand ?memberBand .
}

UNION

# Query for part 2: Band of the writer of a work that is a work, album, and musical work by Matt Freeman
SELECT DISTINCT ?band WHERE {
  ?work dbr:Matt_Freeman dbo:composer ?writer ;
        rdf:type dbp:album ;
        rdf:type dbp:musical_work .
  ?writer rdfs:label ""Matt Freeman""@en .
  ?work dbo:associatedBand ?band .
}
```",5,10,6,3,2,3,2,20,0,0,1,0,0.0,0
715,63,test,"Give me the commander in the force, that is a military conflict, of the native of Morocco and commander in the force of Francisco Largo Caballero and leader of the office, that is a government agency and an organisation, of Carlos Franco Iribarnegaray.",SELECT ?result WHERE { <http://dbpedia.org/resource/Carlos_Franco_Iribarnegaray> <http://dbpedia.org/property/office> ?v2 . ?v2 <http://dbpedia.org/ontology/leader> ?result . ?v4 <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Morocco> . ?v3 <http://dbpedia.org/ontology/commander> ?result . ?v6 <http://dbpedia.org/ontology/commander> ?result . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/GovernmentAgency>. ?v3 <http://dbpedia.org/ontology/commander> ?v4 . ?v6 <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Francisco_Largo_Caballero> . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?commander WHERE {
  # Find the military conflict involving Francisco Largo Caballero and a native of Morocco
  ?conflict dbo:participant dbr:Francisco_Largo_Caballero .
  ?conflict dbo:participant ?moroccanParticipant .
  
  # Ensure the Moroccan participant is indeed from Morocco
  ?moroccanParticipant dbo:nationality dbr:Morocco .

  # Identify the commander of this conflict
  ?commander dbo:commanded ?conflict .

  # Verify Carlos Franco Iribarnegaray's leadership role in an organization related to the commander
  ?organization dbo:leader dbr:Carlos_Franco_Iribarnegaray .
  ?organization a dbo:GovernmentAgency ;
                a dbo:Organization .
  
  # Ensure this organization is associated with the commander
  ?commander dbo:associatedWith ?organization .
}
```",7,10,8,3,3,3,3,71,0,0,1,0,0.0,0
129,26,test,Give me the associated musical artist of EarthGang and professional in the mayor of 1999 West Dunbartonshire Council election and associated musical artist of the person born as Tahj Malik Chandler.,"SELECT ?result WHERE { <http://dbpedia.org/resource/1999_West_Dunbartonshire_Council_election> <http://dbpedia.org/property/leader> ?v2 . ?result <http://dbpedia.org/property/occupation> ?v2 . ?v1 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v1 <http://dbpedia.org/property/birthName> ""Tahj Malik Chandler""@en . <http://dbpedia.org/resource/EarthGang> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . }","```sparql
# Query to get the associated musical artist of EarthGang
SELECT ?artist WHERE {
  wd:Q1105010 wdt:P106 wd:Q838109; # EarthGang is a musical group
  wdt:P463 ?artist. # Find artists they are part of or collaborate with
}

UNION

# Query to get the professional in the 1999 West Dunbartonshire Council election and their associated artist
SELECT DISTINCT ?candidate ?artist WHERE {
  ?election wdt:P31 wd:Q11424; # Election is an instance of political event
          wdt:P580 ?start;
          wdt:P582 ?end.
  FILTER(?start <= ""1999-05-06""^^xsd:date && ?end >= ""1999-05-06""^^xsd:date) .
  ?election wdt:P127 ?candidate. # Candidates in the election
  OPTIONAL {
    ?candidate wdt:P106 wd:Q838109; # Check if they are a musician
              wdt:P463 ?artist.
  }
}

UNION

# Query to get the associated musical artist of Tahj Malik Chandler (Lil Wayne)
SELECT ?artist WHERE {
  wd:Q1776 wdt:P735 wd:Q1105010; # Lil Wayne is an artist in EarthGang collaborations
  wdt:P106 wd:Q838109;
  wdt:P463 ?artist. # Find artists he is part of or collaborates with
}
```",5,5,6,2,3,2,3,28,0,0,1,0,0.0,0
917,68,test,"Give me the parent of the child, that is a royalty, of the mayor of Hawaiian Kingdom and child of the father of Kamehameha IV and child of the father of the spouse, that is a royalty, of Leleiohoku I.",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/child> ?v2 . ?v2 <http://dbpedia.org/property/father> ?v4 . <http://dbpedia.org/resource/Kamehameha_IV> <http://dbpedia.org/property/father> ?v0 . ?v1 <http://dbpedia.org/property/father> ?v6 . <http://dbpedia.org/resource/Hawaiian_Kingdom> <http://dbpedia.org/property/leader> ?v4 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?result <http://dbpedia.org/property/father> ?v0 . ?v1 <http://dbpedia.org/ontology/spouse> <http://dbpedia.org/resource/Leleiohoku_I> . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?result <http://dbpedia.org/ontology/parent> ?v6 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?parent WHERE {
  # Mayor of Hawaiian Kingdom
  ?mayor dbo:positionTitle ""Mayor""@en .
  ?mayor dbo:country dbr:Hawaiian_Kingdom .

  # Child of the mayor who is royalty
  ?child dbo:parent ?mayor ;
         a dbo:Monarch .

  # Father of Kamehameha IV (Kamehameha III)
  ?kamehamehaIV dbo:father dbr:Kamehameha_III .

  # Child of father of Kamehameha IV
  ?child2 dbo:parent dbr:Kamehameha_III ;
          a dbo:Monarch .

  # Spouse of Leleiohoku I who is royalty
  ?spouse dbo:spouse dbr:Leleiohoku_I ;
          a dbo:Monarch .

  # Father of spouse of Leleiohoku I
  ?fatherOfSpouse dbo:child ?spouse .

  # Child of father of spouse of Leleiohoku I
  ?child3 dbo:parent ?fatherOfSpouse ;
          a dbo:Monarch .

  # Parent of the child who is royalty
  ?parent dbo:child ?child .
}
```",8,10,9,3,3,3,3,71,0,0,2,0,0.0,0
274,25,test,"Give me the band member of the person born, that is a musical artist, as John Birks Gillespie and associated musical artist of Cecil Taylor and professional in the designer of Tetris Classic.","SELECT ?result WHERE { <http://dbpedia.org/resource/Tetris_Classic> <http://dbpedia.org/property/designer> ?v4 . ?v3 <http://dbpedia.org/property/birthName> ""John Birks Gillespie""@en . ?result <http://dbpedia.org/ontology/associatedMusicalArtist> ?v3 . ?result <http://dbpedia.org/property/occupation> ?v4 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. <http://dbpedia.org/resource/Cecil_Taylor> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?person WHERE {
  # Dizzy Gillespie's band members
  ?gillespieBandMember dbo:bandMemberOf dbr:Dizzy_Gillespie .
  
  # Cecil Taylor's associated musical artists
  ?cecilTaylorAssociatedArtist dbo:associatedMusicalArtist dbr:Cecil_Taylor .
  
  # Professional designer of Tetris Classic
  ?tetrisDesigner dbo:profession dbr:Tetris_Classic .

  # Find the person who fits all criteria
  VALUES ?person { 
    ?gillespieBandMember 
    ?cecilTaylorAssociatedArtist 
    ?tetrisDesigner 
  }
  
  FILTER(?gillespieBandMember = ?cecilTaylorAssociatedArtist && ?cecilTaylorAssociatedArtist = ?tetrisDesigner)
}
```",5,6,6,2,3,2,3,28,0,0,1,0,0.0,0
216,67,test,"Give me the player in the coach, that is a soccer player and a sports manager and a soccer manager, of the player, that is an organisation and a sports club and a soccer club, in Džemal Berberović and team of the person born, that is a sports manager and a soccer manager and a soccer player, on the death of Pavel Vezhinov and player in Igor Bišćan.",SELECT ?result WHERE { ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerPlayer>. ?v3 <http://dbpedia.org/ontology/birthDate> ?v1 . ?v6 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerPlayer>. <http://dbpedia.org/resource/Džemal_Berberović> <http://dbpedia.org/ontology/team> ?v0 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsManager>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerClub>. <http://dbpedia.org/resource/Pavel_Vezhinov> <http://dbpedia.org/ontology/deathDate> ?v1 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerManager>. ?v0 <http://dbpedia.org/ontology/coach> ?v6 . ?result <http://dbpedia.org/ontology/coach> ?v3 . <http://dbpedia.org/resource/Igor_Bišćan> <http://dbpedia.org/ontology/team> ?result . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsClub>. ?v6 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsManager>. ?v6 <http://dbpedia.org/ontology/team> ?result . ?v6 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerManager>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?player WHERE {
  # Find the player who is a coach, soccer player, sports manager, and soccer manager
  ?player a dbo:SoccerPlayer ;
          a dbo:SportsManager ;
          a dbo:SoccerManager ;
          dbo:coach ?team .

  # The team should be an organization that is both a sports club and a soccer club
  ?team a dbo:Organization ;
        a dbo:SportsClub ;
        a dbo:SoccerClub .

  # Connect the player to Džemal Berberović through some relationship (e.g., played for, coached)
  ?player dbo:playedFor dbr:Džemal_Berberović .

  # Connect the player to Igor Bišćan similarly
  ?player dbo:playedWith dbr:Igor_Bišćan .

  # Find Pavel Vezhinov's death date and ensure it is before the birth of the person in question
  OPTIONAL { 
    ?vezhinov dbo:dateOfDeath ?deathDate .
    FILTER (?deathDate < ?birthDate)
  }

  # Ensure the player was born after Pavel Vezhinov's death
  ?player dbo:birthDate ?birthDate .

}
```",7,16,8,3,3,3,3,71,0,0,1,0,0.0,0
645,61,test,"Give me the leader of the office, that is a government agency and an organisation, of the native of Restoration (Spain) and military force of the force, that is an event and a military conflict and a societal event, of the native, that is a president and a politician, of Restoration (Spain).",SELECT ?result WHERE { ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/GovernmentAgency>. ?v1 <http://dbpedia.org/property/office> ?v3 . ?v0 <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Restoration_(Spain)> . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/President>. ?result <http://dbpedia.org/ontology/battle> ?v5 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v5 <http://dbpedia.org/ontology/commander> ?v0 . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v1 <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Restoration_(Spain)> . ?v3 <http://dbpedia.org/ontology/leader> ?result . },"```sparql
SELECT DISTINCT ?leader WHERE {
  # Step 1: Find ""Restoration (Spain)"" event
  ?restorationEvent dbr:Restoration_(Spain) .
  
  # Step 2: Identify military forces related to the Restoration event
  ?militaryForce dbo:wikiPageWikiLink ?restorationEvent .
  ?militaryForce a dbo:MilitaryConflict ;
                 a dbo:SocietalEvent .

  # Step 3: Find native of this military force who is president and politician
  ?native foaf:nationality ?country .
  ?native dbo:positionHeld ?presidency .
  ?presidency dbo:officeHolder ?militaryForce .
  ?native a dbo:President ;
          a dbo:Politician .

  # Step 4: Identify the office led by this native
  ?office dbo:leader ?native .
  ?office a dbo:GovernmentAgency ;
          a dbo:Organization .

  # Step 5: Find the leader of this office
  ?office dbo:leader ?leader .
}
```",6,13,7,3,2,3,3,71,0,0,2,0,0.0,0
98,8,test,Give me the child of the child of Emperor Toba and parent of Emperor Rokujō.,SELECT ?result WHERE { <http://dbpedia.org/resource/Emperor_Toba> <http://dbpedia.org/ontology/child> ?v2 . ?result <http://dbpedia.org/ontology/parent> ?v2 . <http://dbpedia.org/resource/Emperor_Rokujō> <http://dbpedia.org/ontology/parent> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?person WHERE {
  # Emperor Toba's child
  ?childToba dbo:father dbr:Emperor_Toba .
  
  # Child of Toba's child (grandchild of Toba)
  ?grandChildToba dbo:father ?childToba .

  # Parent of Emperor Rokujō
  ?parentRokujō dbo:child dbr:Emperor_Rokujō .

  # The person who is both a grandchild of Toba and parent of Rokujō
  FILTER (?grandChildToba = ?parentRokujō)
  
  # Return the person
  BIND(?grandChildToba AS ?person)
}
```",3,3,4,2,2,2,2,9,0,0,1,0,0.0,0
507,57,test,"Give me the spouse of Anne V. Coates and director of the movie, that is a movie and a work, with the person born on 1919-06-17 and professional in the profession of Guy Ferland.","SELECT ?result WHERE { ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?result <http://dbpedia.org/property/occupation> ?v3 . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Film>. ?v5 <http://dbpedia.org/property/starring> ?v0 . ?v5 <http://dbpedia.org/ontology/director> ?result . ?v0 <http://dbpedia.org/ontology/birthDate> ""1919-06-17""^^<http://www.w3.org/2001/XMLSchema#date> . <http://dbpedia.org/resource/Guy_Ferland> <http://dbpedia.org/property/occupation> ?v3 . ?result <http://dbpedia.org/ontology/spouse> <http://dbpedia.org/resource/Anne_V._Coates> . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?spouse ?director ?movie WHERE {
  # Find Anne V. Coates' spouse
  dbr:Anne_V._Coates dbo:spouse ?spouse .

  # Ensure the spouse is a director of a movie that is also a work
  ?spouse dbo:profession dbr:Film_director .
  ?director dbr:Film_director .
  ?movie dbo:director ?director ;
         rdf:type dbo:Film ;
         dbo:workType dbr:Movie .

  # Find the person born on June 17, 1919
  ?person dbp:birthday ""1919-06-17""^^xsd:date ;
          dbo:profession ?profession .

  # Ensure this person is in the same profession as Guy Ferland
  ?guyFerland dbr:Guy_Ferland .
  ?guyFerland dbo:profession ?sameProfession .
  
  FILTER (?profession = ?sameProfession)

  # Match the spouse with the director and ensure they are the same person
  FILTER(?spouse = ?director)
}
```",6,8,7,3,3,3,3,71,0,0,1,0,0.0,0
573,62,test,"Give me the person decedent at the residence, that is a settlement, of the professional, that is American, in Politician and person decedent at the administration, that is a region, of the real name of Charlie Baker (Australian footballer) and parent of John Quincy Adams.","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/deathPlace> ?v6 . ?v0 <http://dbpedia.org/ontology/nationality> <http://dbpedia.org/resource/United_States>. ?v0 <http://dbpedia.org/property/residence> ?v6 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Region>. ?v3 <http://dbpedia.org/property/governor> ?v4 . ?v6 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. ?v0 <http://dbpedia.org/property/occupation> ""Politician""@en . <http://dbpedia.org/resource/John_Quincy_Adams> <http://dbpedia.org/ontology/parent> ?result . <http://dbpedia.org/resource/Charlie_Baker_(Australian_footballer)> <http://xmlns.com/foaf/0.1/name> ?v4 . ?result <http://dbpedia.org/ontology/deathPlace> ?v3 . }","```sparql
# Step 1: Get Charlie Baker's real name
SELECT ?realName WHERE {
    wd:Q1234567 foaf:name ""Charlie Baker""@en .
    ?person dbo:birthPlace ?place .
    ?person foaf:name ?realName .
}

# Step 2: Find John Quincy Adams' parent (John Adams)
SELECT ?parent WHERE {
    wd:Q12345 dbo:child wd:Q67890 .
    ?parent rdfs:label ""John Adams""@en .
}

# Step 3: Identify an American politician and their residence
SELECT ?politician ?residence WHERE {
    ?politician rdf:type wd:Q11111 ;
                foaf:nationality wd:Q30 ; # America
                dbo:residence ?residence .
    ?residence rdf:type wd:Q1234 . # Settlement
}

# Step 4: Find the administration (region) associated with John Adams
SELECT ?administration WHERE {
    ?person rdfs:label ""John Adams""@en ;
            dbo:officeHolder ?office .
    ?office dbo:administrativeRegion ?administration .
    ?administration rdf:type wd:Q12345 . # Region
}

# Step 5: Find the person decedent at both the identified settlement and region
SELECT DISTINCT ?personDecedent WHERE {
    VALUES (?residence) { (<residence_uri_from_step_3>) }
    VALUES (?administration) { (<administration_uri_from_step_4>) }

    ?personDecedent dbo:placeOfDeath ?residence .
    ?personDecedent dbo:placeOfDeath ?administration .
}
```

Note: Replace `<residence_uri_from_step_3>` and `<administration_uri_from_step_4>` with the actual URIs obtained from steps 3 and 4.",7,10,8,3,3,3,3,71,0,0,2,0,0.0,0
573,56,test,"Give me the parent of the author, that is a politician and an office holder, of the work of John Quincy Adams and person decedent at Quincy, Massachusetts and person decedent at the administration, that is a region, of Charlie Baker.","SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v0 <http://dbpedia.org/property/author> <http://dbpedia.org/resource/John_Quincy_Adams> . ?result <http://dbpedia.org/ontology/deathPlace> <http://dbpedia.org/resource/Quincy,_Massachusetts> . ?result <http://dbpedia.org/ontology/deathPlace> ?v2 . ?v0 <http://dbpedia.org/property/author> ?v1 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Region>. ?v1 <http://dbpedia.org/ontology/parent> ?result . ?v2 <http://dbpedia.org/property/governor> ""Charlie Baker""@en . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?parent WHERE {
  # Step 1: Find a work by John Quincy Adams
  ?work dbo:author dbr:John_Quincy_Adams .
  
  # Step 2: Identify any related author who is a politician and office holder
  OPTIONAL { 
    ?relatedAuthor dbo:childOf ?parent .
    ?relatedAuthor dbo:occupation dbr:Politician ;
                  dbo:officeHolder true .
  }
  
  # Step 3: Find Charlie Baker's decedent locations
  ?charlieBaker dbo:deathPlace dbr:Quincy,_Massachusetts ;
                dbo:deceasedAtAdministration ?administration .
  
  # Step 4: Ensure administration is a region
  ?administration rdf:type dbo:Region .

  # Step 5: Find common parent who fits all criteria
  OPTIONAL {
    ?charlieBaker dbo:childOf ?parent .
  }
}
```",6,9,7,3,3,3,3,71,0,0,2,0,0.0,0
582,59,test,"Give me the player in the father, that is an athlete and a soccer manager and a sports manager, of the child of Kazuaki Nagasawa and reference to the residence of the reference, that is a scientist, to Hirotaka Sugawara.","SELECT ?result WHERE { ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Scientist>. ?v3 <http://xmlns.com/foaf/0.1/name> ""Hirotaka Sugawara""@en . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Athlete>. ?v0 <http://dbpedia.org/property/father> ?v5 . ?v0 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Kazuaki_Nagasawa> . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsManager>. ?v5 <http://dbpedia.org/ontology/team> ?result . ?v3 <http://dbpedia.org/property/residence> ?v2 . ?result <http://xmlns.com/foaf/0.1/name> ?v2 . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerManager>. }","```sparql
# Step 1: Identify Kazuaki Nagasawa's child
SELECT ?child WHERE {
    ?person dbo:spouse ?kazuakiNagasawa .
    ?kazuakiNagasawa foaf:name ""Kazuaki Nagasawa"" .
    ?person dbo:child ?child .
}

# Step 2: Identify the father of that child
SELECT ?father WHERE {
    ?child dbo:parent ?father .
    FILTER EXISTS { 
        SELECT ?athlete WHERE {
            ?athlete rdf:type dbo:Athlete ;
                     dbo:sport ""Soccer"" ;
                     dbo:occupation ""Sports Manager"" .
            ?athlete foaf:name ?fatherName .
            VALUES ?fatherName {""<Father's Name>""}
        }
    }
}

# Step 3: Check if the father is an athlete, soccer manager, and sports manager
SELECT ?player WHERE {
    ?player rdf:type dbo:Athlete ;
            dbo:sport ""Soccer"" ;
            dbo:occupation ""Sports Manager"" .
    FILTER EXISTS { 
        SELECT ?athlete WHERE {
            ?athlete rdf:type dbo:Athlete ;
                     dbo:sport ""Soccer"" ;
                     dbo:occupation ""Sports Manager"" .
            ?athlete foaf:name ?playerName .
            VALUES ?playerName {""<Father's Name>""}
        }
    }
}

# Step 4: Determine Hirotaka Sugawara's residence
SELECT ?residence WHERE {
    ?hirotakaSugawara dbo:residence ?residence .
    ?hirotakaSugawara foaf:name ""Hirotaka Sugawara"" .
}

# Step 5: Find a scientist associated with that residence
SELECT ?scientist WHERE {
    ?scientist dbo:residence ?residence ;
               rdf:type dbo:Scientist .
}
```",6,10,7,3,2,3,3,71,0,0,1,0,0.0,0
433,68,test,"Give me the associated musical artist of the associated musical artist, that is an artist and a musical artist, of the associated musical artist, that is a musical artist and an artist, of Ornette Coleman and professional in the profession of Bob Marley and associated musical artist of the person born, that is a musical artist and an artist, as the persona of Paul Chambers.",SELECT ?result WHERE { ?v7 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . <http://dbpedia.org/resource/Paul_Chambers> <http://xmlns.com/foaf/0.1/givenName> ?v5 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. <http://dbpedia.org/resource/Bob_Marley> <http://dbpedia.org/property/occupation> ?v3 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. <http://dbpedia.org/resource/Ornette_Coleman> <http://dbpedia.org/ontology/associatedMusicalArtist> ?v0 . ?v7 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?v4 <http://dbpedia.org/property/birthName> ?v5 . ?v4 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?result <http://dbpedia.org/property/occupation> ?v3 . ?v0 <http://dbpedia.org/ontology/associatedMusicalArtist> ?v7 . ?v7 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. },"```sparql
# Step 1: Find Ornette Coleman's associated musical artist
SELECT ?associatedArtist1 WHERE {
  wd:Q1234 wdt:P106 wd:Q33999 . # Ornette Coleman is a musician
  wd:Q1234 wdt:P463 ?associatedArtist1 .
}

# Step 2: Find the associated musical artist of that person who is both an artist and a musical artist
SELECT ?associatedArtist2 WHERE {
  ?artist wdt:P106 wd:Q33999 . # The person is a musician
  ?artist wdt:P800 ?artwork .   # The person is also an artist (has created artwork)
  ?associatedArtist1 wdt:P463 ?artist .
}

# Step 3: Identify Bob Marley's profession
SELECT ?profession WHERE {
  wd:Q1117 wdt:P106 ?profession . # Bob Marley's profession
}

# Step 4: Find the associated musical artist of that person who is a musical artist and an artist
SELECT ?associatedArtist3 WHERE {
  ?artist wdt:P106 ?profession . # The person has the same profession as Bob Marley
  ?artist wdt:P800 ?artwork .     # The person is also an artist (has created artwork)
  ?associatedArtist2 wdt:P463 ?artist .
}

# Step 5: Identify Paul Chambers' birth persona
SELECT ?birthPersona WHERE {
  wd:Q12345 wdt:P31 wd:Q33999 . # Paul Chambers is a musician
  wd:Q12345 wdt:P735 ?birthPersona . # Birth name or identity
}

# Step 6: Find the associated musical artist of that person who is both a musical artist and an artist
SELECT ?finalArtist WHERE {
  ?artist wdt:P106 wd:Q33999 . # The person is a musician
  ?artist wdt:P800 ?artwork .   # The person is also an artist (has created artwork)
  ?associatedArtist3 wdt:P463 ?artist .
}
```",8,14,9,3,3,3,3,71,0,0,4,0,0.0,0
892,56,test,"Give me the entity in the administration, that is Italian and a region and a settlement and an administrative region, of the party, that is a political party and an organisation, of Andrea Cozzolino and entity in the profession of Henri Crolla and landmark at elevation of 58.","SELECT ?result WHERE { ?v0 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Italy>. <http://dbpedia.org/resource/Henri_Crolla> <http://dbpedia.org/property/occupation> ?v2 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Region>. ?result <http://dbpedia.org/ontology/elevation> ""58""^^<http://www.w3.org/2001/XMLSchema#integer> . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?v0 <http://dbpedia.org/property/leaderParty> ?v4 . <http://dbpedia.org/resource/Andrea_Cozzolino> <http://dbpedia.org/ontology/party> ?v4 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/AdministrativeRegion>. ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/PoliticalParty>. ?result <http://dbpedia.org/ontology/province> ?v0 . ?result <http://dbpedia.org/ontology/country> ?v2 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>
PREFIX geo: <http://www.w3.org/2003/01/geo/wgs84_pos#>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT DISTINCT ?region
WHERE {
  # Find Andrea Cozzolino's party
  ?party dbo:member ?cozzolino .
  ?cozzolino foaf:name ""Andrea Cozzolino"" .

  # Identify the region associated with this party
  ?region dbo:administrativeRegion ?party ;
          dbo:country dbc:Italy ;
          a dbo:Region ;
          a dbo:Settlement ;
          a dbo:AdministrativeRegion .

  # Henri Crolla's profession
  ?profession rdfs:label ""Boxer""@en .
  ?person dbo:occupation ?profession ;
          foaf:name ""Henri Crolla"" .

  # Landmark at elevation of 58 meters
  ?landmark geo:elevation ?elevation ;
            a dbo:Lighthouse ;
            geo:hasElevation ?elevationValue .
  FILTER (?elevationValue = 58)

  # Ensure the region is related to all criteria
  ?region dbo:contains ?landmark .
}
```",6,12,7,3,3,3,3,71,0,0,2,0,0.0,0
874,19,test,"Give me the band of the band member of the band, that is an organisation, of Mark Read (singer) and band of the writer, that is an artist and a musical artist, of Mezzanine (album).",SELECT ?result WHERE { ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. ?v4 <http://dbpedia.org/ontology/associatedMusicalArtist> ?v0 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?result <http://dbpedia.org/ontology/bandMember> ?v2 . ?result <http://dbpedia.org/ontology/bandMember> ?v4 . ?v0 <http://dbpedia.org/ontology/bandMember> <http://dbpedia.org/resource/Mark_Read_(singer)> . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. <http://dbpedia.org/resource/Mezzanine_(album)> <http://dbpedia.org/property/writer> ?v2 . },"```sparql
# Query to find Mark Read's band (The Vamps)
SELECT ?band WHERE {
  ?person foaf:name ""Mark Read""@en .
  ?person dbo:memberOf ?band .
  FILTER EXISTS { ?band a dbo:Band . }
}

# Query to find the writer of Mezzanine (Robert Del Naja) and his band
SELECT ?writerBand WHERE {
  ?album dc:title ""Mezzanine""@en ;
         dbo:artist ?band .
  ?band dbo:member ?person .
  ?person foaf:name ""Robert Del Naja""@en .
  
  # Check if Robert Del Naja is an artist and a musical artist
  OPTIONAL { ?person dbo:occupation dbp:Artist . }
  OPTIONAL { ?person dbo:occupation dbp:MusicalArtist . }

  # Find the band associated with Robert Del Naja
  ?person dbo:memberOf ?writerBand .
  FILTER EXISTS { ?writerBand a dbo:Band . }
}
```",5,8,6,3,2,3,2,20,0,0,1,0,0.0,0
267,18,test,"Give me the person born on the birth date of Dan Cathy and coach of the player, that is a soccer club, in the manager of 2020–21 Tractor S.C. season.",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/birthDate> ?v3 . <http://dbpedia.org/resource/2020–21_Tractor_S.C._season> <http://dbpedia.org/ontology/manager> ?v1 . ?v1 <http://dbpedia.org/ontology/team> ?v2 . <http://dbpedia.org/resource/Dan_Cathy> <http://dbpedia.org/ontology/birthDate> ?v3 . ?v2 <http://dbpedia.org/ontology/coach> ?result . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerClub>. },"```sparql
# Step 1: Find Dan Cathy's birth date
SELECT ?birthDate WHERE {
  dbpedia:Dan_Cathy dbo:birthday ?birthDate .
}

# Step 2: Find another person with the same birth date
SELECT DISTINCT ?person WHERE {
  ?person dbo:birthday ?sameBirthDate .
  FILTER(?sameBirthDate = <URI_of_Dan_Cathys_birth_date>)
  FILTER NOT EXISTS { ?person owl:sameAs dbpedia:Dan_Cathy }
}

# Step 3: Find the manager of Tractor S.C. during the 2020-21 season
SELECT DISTINCT ?manager WHERE {
  dbpedia:Tractor_S.C._(football)_season_2020–21 dbo:coach ?manager .
}

# Step 4: Identify the soccer club managed by this person
SELECT DISTINCT ?soccerClub WHERE {
  ?soccerClub dbo:manager ?samePerson .
  FILTER(?samePerson = <URI_of_the_manager_found_in_step_3>)
}
```

Note: Replace `<URI_of_Dan_Cathys_birth_date>` and `<URI_of_the_manager_found_in_step_3>` with the actual URIs obtained from executing the previous queries.",5,6,6,3,2,3,2,20,0,0,1,0,0.0,0
83,9,test,"Give me the player in the person born on 1995-07-07 and player in the person born, that is an athlete, on 1991-11-19.","SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/team> ?result . ?v3 <http://dbpedia.org/ontology/birthDate> ""1991-11-19""^^<http://www.w3.org/2001/XMLSchema#date> . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Athlete>. ?v3 <http://dbpedia.org/ontology/team> ?result . ?v1 <http://dbpedia.org/ontology/birthDate> ""1995-07-07""^^<http://www.w3.org/2001/XMLSchema#date> . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?person1Label ?person2Label WHERE {
  # Find person born on 1995-07-07 who is an athlete
  ?person1 dbo:birthDate ""1995-07-07""^^xsd:date .
  ?person1 dbo:occupation dbr:Athlete .
  SERVICE wikibase:label { bd:serviceParam wikibase:language ""[AUTO_LANGUAGE],en"". }
  
  # Find person born on 1991-11-19 who is an athlete
  ?person2 dbo:birthDate ""1991-11-19""^^xsd:date .
  ?person2 dbo:occupation dbr:Athlete .
  SERVICE wikibase:label { bd:serviceParam wikibase:language ""[AUTO_LANGUAGE],en"". }
}
```",4,5,5,2,2,2,2,9,0,0,5,0,0.0,0
192,18,test,"Give me the spouse of the spouse, that is a royalty, of the child of Charles II of Naples and child of the child of Stephen V of Hungary.",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/parent> ?v3 . ?v2 <http://dbpedia.org/ontology/spouse> ?result . ?v1 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Charles_II_of_Naples> . ?v3 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Stephen_V_of_Hungary> . ?v2 <http://dbpedia.org/ontology/spouse> ?v1 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. },"```sparql
# Step 1: Get children of Charles II of Naples
SELECT ?child WHERE {
    wd:Q123456 dbo:spouse ?parent . # Charles II of Naples
    ?parent dbo:child ?child .
}

# Step 2: Get children of Stephen V of Hungary and their descendants
SELECT ?descendant WHERE {
    wd:Q654321 dbo:child ?stephenChild . # Stephen V of Hungary
    ?stephenChild dbo:child ?descendant .
}

# Step 3: Find intersection where a child of Charles II is also a descendant of Stephen V
SELECT DISTINCT ?intersectingPerson WHERE {
    { 
        wd:Q123456 dbo:spouse ?parent1 . # Charles II of Naples
        ?parent1 dbo:child ?intersectingPerson .
    }
    UNION
    {
        wd:Q654321 dbo:child ?stephenChild . # Stephen V of Hungary
        ?stephenChild dbo:child ?descendant .
        FILTER(?intersectingPerson = ?descendant)
    }
}

# Step 4: Identify the spouse of this intersecting person
SELECT ?spouse WHERE {
    ?intersectingPerson dbo:spouse ?spouse .
}

# Step 5: Find the spouse of that spouse who is royalty
SELECT DISTINCT ?royalSpouse WHERE {
    ?spouse dbo:spouse ?royalSpouse .
    ?royalSpouse rdf:type wd:Q1184 . # Royal title type in DBpedia
}
```

Note: Replace `wd:Q123456` with the actual DBpedia ID for Charles II of Naples and `wd:Q654321` with the ID for Stephen V of Hungary. The query assumes that `dbo:spouse`, `dbo:child`, and `rdf:type wd:Q1184` (royalty) are correct properties in DBpedia.",5,6,6,3,2,3,2,20,0,0,1,0,0.0,0
791,57,test,"Give me the spouse of Taira no Tokuko and father of the child, that is a royalty, of Emperor Takakura and predecessor of the child of the child, that is an office holder and a royalty, of Emperor Go-Shirakawa.",SELECT ?result WHERE { ?v5 <http://dbpedia.org/property/father> ?v0 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?result <http://dbpedia.org/ontology/successor> ?v5 . ?v3 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Emperor_Takakura> . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v3 <http://dbpedia.org/property/father> ?result . ?result <http://dbpedia.org/ontology/spouse> <http://dbpedia.org/resource/Taira_no_Tokuko> . ?v0 <http://dbpedia.org/ontology/parent> <http://dbpedia.org/resource/Emperor_Go-Shirakawa> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?spouse WHERE {
  # Taira no Tokuko's spouse
  dbr:Taira_no_Tokuko dbo:spouse ?spouse .
  
  # Emperor Takakura and his child Antoku
  ?emperorTakakura a dbo:Monarch ;
                   dbo:spouse dbr:Taira_no_Tokuko ;
                   dbo:child ?antoku .

  # Antoku's predecessor in the imperial lineage
  ?horikawa a dbo:Monarch ;
            dbo:successor ?antoku .
  
  # Emperor Go-Shirakawa and his child Nijō
  dbr:Emperor_Go-Shirakawa dbo:child ?nijo .
  ?nijo a dbo:Monarch .

  FILTER(?spouse = ?emperorTakakura)
}
```",6,9,7,3,3,3,3,71,0,0,1,0,0.0,0
933,69,test,"Give me the band of the band, that is a group and a band and an organisation, of the person born, that is a musical artist, on 1947-04-21 and reference to the birth name of Alan Warner (musician) and band of the band of the band, that is an artist and a musical artist, of The Ramong Sound.","SELECT ?result WHERE { ?v5 <http://dbpedia.org/ontology/birthDate> ""1947-04-21""^^<http://www.w3.org/2001/XMLSchema#date> . ?v0 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. ?v5 <http://dbpedia.org/ontology/associatedMusicalArtist> ?v0 . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?result <http://xmlns.com/foaf/0.1/name> ?v6 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?v4 <http://dbpedia.org/ontology/associatedMusicalArtist> ?v2 . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. <http://dbpedia.org/resource/Alan_Warner_(musician)> <http://dbpedia.org/property/birthName> ?v6 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Band>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Group>. ?v2 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . <http://dbpedia.org/resource/The_Ramong_Sound> <http://dbpedia.org/ontology/associatedMusicalArtist> ?v4 . }","```sparql
# Step 1: Find Alan Warner born on 1947-04-21
SELECT ?person WHERE {
  ?person dbo:birthDate ""1947-04-21""^^xsd:date .
  ?person rdfs:label ""Alan Warner (musician)""@en .
}

# Step 2: Retrieve the band associated with Alan Warner
SELECT ?band WHERE {
  VALUES ?person { <http://dbpedia.org/resource/Alan_Warner_(musician)> } # Replace with actual URI from step 1
  ?person dbo:memberOfBand ?band .
}

# Step 3: Check if this band is also an organization or group
SELECT DISTINCT ?band WHERE {
  VALUES ?band { <URI_of_band_from_step_2> } # Replace with actual URI from step 2
  OPTIONAL { ?band rdf:type dbpedia-owl:MusicalGroup . }
  OPTIONAL { ?band rdf:type dbpedia-owl:Organization . }
}

# Step 4 and 5: Identify The Ramones and their associated band
SELECT ?ramonesBand WHERE {
  ?ramonesBand dbo:member ?member .
  ?member rdfs:label ""The Ramones""@en .
}
```",8,14,9,3,3,3,3,71,0,0,1,0,0.0,0
417,66,test,"Give me the child of the father of Frederick IX of Denmark and child of the child, that is a royalty, of the parent, that is a royalty, of Alexandrine of Mecklenburg-Schwerin and spouse of the parent, that is a royalty, of Count Ingolf of Rosenborg.",SELECT ?result WHERE { ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?result <http://dbpedia.org/property/father> ?v6 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?result <http://dbpedia.org/ontology/spouse> ?v3 . ?v3 <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Count_Ingolf_of_Rosenborg> . <http://dbpedia.org/resource/Alexandrine_of_Mecklenburg-Schwerin> <http://dbpedia.org/ontology/parent> ?v1 . <http://dbpedia.org/resource/Frederick_IX_of_Denmark> <http://dbpedia.org/property/father> ?v6 . ?result <http://dbpedia.org/ontology/parent> ?v2 . ?v2 <http://dbpedia.org/property/father> ?v1 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?person WHERE {
  # Frederick IX's father
  ?father a dbo:Monarch ;
          dbo:spouse ?mother ;
          dbo:child dbr:Frederick_IX_of_Denmark .

  # Child of Frederick IX's father (King Christian X)
  ?kingX a dbo:Monarch ;
         dbo:child ?child1 .

  # Alexandrine of Mecklenburg-Schwerin and her spouse
  ?alexandrine a dbo:Person ;
               dbo:spouse ?frederickVIII .
  
  # Child of Frederick VIII and Alexandrine (King Christian X)
  ?frederickVIII a dbo:Monarch ;
                 dbo:child ?kingX .

  # Count Ingolf's parent
  ?benedikte a dbo:Person ;
             dbo:spouse ?husband ;
             dbo:child dbr:Ingolf_of_Rosenborg .

  # Spouse of Benedikte (Princess Benedikte)
  ?princeJoachim a dbo:Person ;
                 dbo:parent ?mother1 ;
                 dbo:parent ?father1 .

  # Conditions to find the person
  ?child1 dbo:child ?person .
  ?mother1 rdfs:label ""Margrethe II""@en .
  ?person dbo:spouse ?husband2 .
  ?benedikte dbo:child ?husband2 .
  
  FILTER (STRSTARTS(STR(?person), STR(dbr:)))
}
```",7,10,8,3,3,3,3,71,0,0,1,0,0.0,0
93,20,test,"Give me the death place of the governor of the native, that is a politician, of Seattle and capital of the headquarter, that is a region and a settlement, of the headquarter of Clam Cove Pictograph Site.",SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/location> ?v2 . ?v2 <http://dbpedia.org/ontology/capital> ?result . ?v4 <http://dbpedia.org/property/governor> ?v5 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v5 <http://dbpedia.org/ontology/deathPlace> ?result . ?v4 <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Seattle> . <http://dbpedia.org/resource/Clam_Cove_Pictograph_Site> <http://dbpedia.org/ontology/location> ?v1 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Region>. },"```sparql
SELECT ?deathPlace WHERE {
  # Step 1: Identify Clam Cove Pictograph Site
  dbpedia:ClamCovePictographSite dcterms:isPartOf ?region .
  
  # Step 2: Determine the Headquarter Region and Settlement
  ?region a dbo:Region ;
          dbo:headquartersIn ?settlement .

  # Step 3: Find the Capital of the Headquarters
  ?settlement dbo:capital ?capitalCity .

  # Step 4: Identify the Governor of Seattle
  dbpedia:Seattle dbo:governor ?governor .
  
  # Ensure the governor is a politician
  ?governor rdf:type dbo:Politician .

  # Step 5: Determine the Death Place of the Governor
  ?governor dbo:deathPlace ?deathPlace .
}
```",6,9,7,3,2,3,2,20,0,0,1,0,0.0,0
456,56,test,"Give me the band of the band, that is a musical artist, of the band of Alan Doyle and professional in  and spouse of the actor of Pacific Drive.","SELECT ?result WHERE { ?v2 <http://dbpedia.org/ontology/spouse> ?result . <http://dbpedia.org/resource/Pacific_Drive> <http://dbpedia.org/property/starring> ?v2 . ?v1 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v0 <http://dbpedia.org/ontology/associatedMusicalArtist> ?v1 . <http://dbpedia.org/resource/Alan_Doyle> <http://dbpedia.org/ontology/associatedMusicalArtist> ?v0 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?result <http://dbpedia.org/property/occupation> """"@en . }","```sparql
# Step 1: Find Alan Doyle's Band
SELECT ?band WHERE {
  wd:Q123456 wdt:P106 wd:Q33999; # Alan Doyle is a member of an organization (Great Big Sea)
  wdt:P463 ?band.               # The band is part of a larger band or ensemble
}

# Step 2: Find actors in ""Pacific Drive"" and their spouses
SELECT DISTINCT ?actor ?spouse WHERE {
  wd:Q789012 wdt:P161 ?actor;    # Pacific Drive has cast members (actors)
  ?actor wdt:P26 ?spouse.       # The actor has a spouse
}

# Step 3: Check if any spouse is a musical artist and identify their band
SELECT DISTINCT ?musicalArtist ?band WHERE {
  ?spouse wdt:P106 wd:Q215627;   # Spouse is a musician
  ?spouse wdt:P463 ?band.        # The band they are part of
}

# Step 4: Determine the band of that band
SELECT DISTINCT ?finalBand WHERE {
  ?band wdt:P463 ?finalBand.     # The band is part of a larger band or ensemble
}
```

Note: Replace `wd:Q123456` with Alan Doyle's DBpedia ID and `wd:Q789012` with ""Pacific Drive"" TV show's DBpedia ID.",6,7,7,3,3,3,3,71,0,0,1,0,0.0,0
232,9,test,"Give me the claim to fame of the person born as Emily Katherine Jacques and artistic movement of the person born, that is a writer, on 1849-09-14.","SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/movement> ?result . ?v3 <http://dbpedia.org/property/birthName> ""Emily Katherine Jacques""@en . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Writer>. ?v3 <http://dbpedia.org/ontology/knownFor> ?result . ?v1 <http://dbpedia.org/ontology/birthDate> ""1849-09-14""^^<http://www.w3.org/2001/XMLSchema#date> . }","```sparql
# Query to find the claim to fame of Emily Katherine Jacques
SELECT ?claimToFame WHERE {
  ?person foaf:name ""Emily Katherine Jacques""@en .
  ?person dbo:birthName ""Emily Katherine Jacques"" .
  ?person dbo:notableFor ?claimToFame .
}

UNION

# Query to find the artistic movement of a writer born on 1849-09-14
SELECT ?artisticMovement WHERE {
  ?person dbo:birthDate ""1849-09-14""^^xsd:date ;
          rdf:type dbo:Writer .
  ?person dbo:associatedWithArtisticMovement ?artisticMovement .
}
```",4,5,5,2,2,2,2,9,0,0,1,0,0.0,0
715,66,test,"Give me the commander in the force, that is a military conflict, of Abd el-Krim and leader of the office, that is a government agency and an organisation, of the reference to Carlos Franco Iribarnegaray and commander in the force of Francisco Largo Caballero.","SELECT ?result WHERE { ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/GovernmentAgency>. ?v1 <http://dbpedia.org/property/office> ?v2 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?v2 <http://dbpedia.org/ontology/leader> ?result . ?v6 <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Francisco_Largo_Caballero> . ?v3 <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Abd_el-Krim> . ?v6 <http://dbpedia.org/ontology/commander> ?result . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v3 <http://dbpedia.org/ontology/commander> ?result . ?v1 <http://xmlns.com/foaf/0.1/name> ""Carlos Franco Iribarnegaray""@en . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?commander WHERE {
  # Abd el-Krim's military conflict
  ?rifWar dbo:commander ?commander .
  FILTER(CONTAINS(LCASE(STR(?rifWar)), ""rif war"")) .

  # Carlos Franco Iribarnegaray's office
  ?office dbo:head ?commander ;
          (dbo:member | dbo:employee) dbr:Carlos_Franco_Iribarnegaray .

  # Francisco Largo Caballero's military force
  ?civilWar dbo:commander ?commander .
  FILTER(CONTAINS(LCASE(STR(?civilWar)), ""spanish civil war"")) .
}
```",7,10,8,3,3,3,3,71,0,0,1,0,0.0,0
888,20,test,"Give me the commander in the force, that is a societal event and an event, of the military force of War in Donbas (2014–2022) and awardee of the award of the commander in 2022 Ukrainian eastern counteroffensive.",SELECT ?result WHERE { ?v4 <http://dbpedia.org/property/awards> ?v5 . <http://dbpedia.org/resource/2022_Ukrainian_eastern_counteroffensive> <http://dbpedia.org/ontology/commander> ?v4 . ?v2 <http://dbpedia.org/ontology/commander> ?v1 . ?v2 <http://dbpedia.org/ontology/commander> ?result . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?result <http://dbpedia.org/property/awards> ?v5 . ?v1 <http://dbpedia.org/ontology/battle> <http://dbpedia.org/resource/War_in_Donbas_(2014–2022)> . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?commander ?award WHERE {
  ?commander a dbo:MilitaryPerson ;
             dbo:militaryBranch dbr:Ukrainian_Armed_Forces ;
             dbo:occupation dbr:Commander ;
             dbo:awards ?award .

  FILTER EXISTS { 
    ?event dbo:location dbr:Donbas ;
           dbo:participatingOrganisation dbr:Ukrainian_Armed_Forces ;
           dbo:date ?date .
    FILTER (?date >= ""2014-04-06""^^xsd:date && ?date <= ""2022-12-31""^^xsd:date)
  }

  FILTER EXISTS {
    ?awardEvent dbo:awardee ?commander ;
                dbo:event dbr:2022_Ukrainian_eastern_counteroffensive ;
                dbo:date ?awardDate .
    FILTER (?awardDate >= ""2022-02-24""^^xsd:date && ?awardDate <= ""2022-12-31""^^xsd:date)
  }
}
```",6,8,7,3,2,3,2,20,0,0,4,0,0.0,0
456,61,test,"Give me the band of the band, that is a musical artist, of the band of Alan Doyle and professional in the alter ego of the reference, that is a fictional character, to Lamont Cranston (radio, film and television).","SELECT ?result WHERE { <http://dbpedia.org/resource/Alan_Doyle> <http://dbpedia.org/ontology/associatedMusicalArtist> ?v1 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?v1 <http://dbpedia.org/ontology/associatedMusicalArtist> ?v3 . ?v3 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/FictionalCharacter>. ?v0 <http://dbpedia.org/property/alterEgo> ?v5 . ?result <http://dbpedia.org/property/occupation> ?v5 . ?v0 <http://xmlns.com/foaf/0.1/name> ""Lamont Cranston (radio, film and television)""@en . }","```sparql
SELECT ?band WHERE {
  ?character rdfs:label ""Lamont Cranston""@en .
  ?character dbo:alterEgo ?shadowCharacter .
  ?shadowCharacter rdfs:label ""The Shadow""@en .
  
  ?artist dbo:associatedBand ?musicalArtist .
  ?musicalArtist rdfs:label ""The Shadows (band)""@en .

  ?member dbo:memberOf ?band .
  ?member foaf:name ""Hank Marvin""@en .
  ?band rdfs:label ?bandLabel .
}
```",6,8,7,3,2,3,3,71,0,0,1,0,0.0,0
459,23,val,"Give me the governor of the death place, that is a settlement, of Cliff Roquemore and person born as the birth name of Kevin Stitt.",SELECT ?result WHERE { ?result <http://dbpedia.org/property/birthName> ?v2 . ?v1 <http://dbpedia.org/property/governor> ?result . <http://dbpedia.org/resource/Kevin_Stitt> <http://dbpedia.org/property/birthName> ?v2 . <http://dbpedia.org/resource/Cliff_Roquemore> <http://dbpedia.org/ontology/deathPlace> ?v1 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?governor WHERE {
  # Find Cliff Roquemore's death place and ensure it is a settlement
  ?cliffRoquemore dbo:deathPlace ?deathPlace .
  ?deathPlace rdf:type dbo:Settlement .

  # Get the state or region of the death place
  ?deathPlace dbo:stateOrRegion ?stateOrRegion .

  # Find Kevin Stitt's birth name
  dbr:Kevin_Stitt dbp:birthName ?birthName .

  # Ensure the birth name matches
  FILTER (?birthName = ""Kevin Stitt"")

  # Get the current governor of the state or region
  ?governor dbo:governs ?stateOrRegion .
}
```",4,5,5,2,2,2,3,28,0,0,1,0,0.0,0
773,49,val,"Give me the spouse of the father of Charles the Fat and parent of the child, that is a royalty, of the father, that is an office holder and a royalty, of Carloman of Bavaria.",SELECT ?result WHERE { ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v1 <http://dbpedia.org/ontology/parent> ?result . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v1 <http://dbpedia.org/property/father> ?v0 . <http://dbpedia.org/resource/Charles_the_Fat> <http://dbpedia.org/property/father> ?v2 . <http://dbpedia.org/resource/Carloman_of_Bavaria> <http://dbpedia.org/property/father> ?v0 . ?v2 <http://dbpedia.org/ontology/spouse> ?result . },"```sparql
SELECT ?spouse WHERE {
  ?charles rdf:type dbo:Person ;
           foaf:name ""Charles the Fat""@en .
  ?louis dbo:child ?charles ;
         foaf:name ""Louis the German""@en .
  ?emma dbo:spouse ?louis ;
        foaf:name ""Emma of Altdorf""@en .
}
```",5,8,6,3,2,3,3,71,0,0,1,0,0.0,0
18,20,val,"Give me the professional in  and parent of the professional in Actress and alumnus of Marymount College, Tarrytown.","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/almaMater> <http://dbpedia.org/resource/Marymount_College,_Tarrytown> . ?result <http://dbpedia.org/ontology/child> ?v0 . ?result <http://dbpedia.org/property/occupation> """"@en . ?v0 <http://dbpedia.org/property/occupation> ""Actress""@en . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?professional ?parentName WHERE {
  ?professional dbo:almaMater dbpedia:Marymount_College_Tarrytown .
  ?parent dbo:child ?professional .
  ?parent dbo:occupation dbpedia:Actress .
  BIND(str(?parent) AS ?parentName)
}
```",4,4,5,2,3,2,3,28,0,0,1,0,0.0,0
443,23,val,Give me the landmark at elevation of the award of William Shepherd and birthplace of the work of yes.,"SELECT ?result WHERE { <http://dbpedia.org/resource/William_Shepherd> <http://dbpedia.org/property/awards> ?v1 . ?v2 <http://dbpedia.org/property/author> ""yes""@en . ?result <http://dbpedia.org/ontology/elevation> ?v1 . ?v2 <http://dbpedia.org/ontology/birthPlace> ?result . }","```sparql
# Step 1: Find an award received by William Shepherd
SELECT ?award WHERE {
  ?person foaf:name ""William Shepherd""@en .
  ?person dbo:awardsReceived ?award .
}

# Step 2: Get the location and elevation of the award's landmark
SELECT ?location ?elevation WHERE {
  ?award dbo:location ?location .
  OPTIONAL { ?location geo:elevation ?elevation . }
}

# Step 3: Find a work by Yes and its associated birthplace
SELECT ?work ?birthPlace WHERE {
  ?band foaf:name ""Yes""@en .
  ?band dbo:album ?work .
  ?artist dbo:recordedWith ?band ;
          dbo:birthPlace ?birthPlace .
}

# Step 4: Find a landmark at the identified elevation
SELECT ?landmark WHERE {
  ?landmark geo:elevation ?elevation .
}
```",4,4,5,2,2,2,3,28,0,0,2,0,0.0,0
917,49,val,"Give me the child of the father of the child, that is a royalty, of Kamehameha III and parent of the child, that is a royalty, of Kamehameha IV.",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/child> ?v2 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v4 <http://dbpedia.org/property/father> ?v0 . ?result <http://dbpedia.org/property/father> ?v0 . <http://dbpedia.org/resource/Kamehameha_III> <http://dbpedia.org/ontology/child> ?v4 . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v2 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Kamehameha_IV> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?childOfFather ?parentOfChildIV WHERE {
  # Step 1: Find Kamehameha III's children who are royalty
  ?childIII a dbo:Monarch ;
            dbo:spouseOrPartner ?kamehamehaIII .
  
  FILTER (?kamehamehaIII = dbr:Kamehameha_III)

  # Step 2: For each child of Kamehameha III, find their father's other children
  ?fatherChild a dbo:Monarch ;
              dbo:spouseOrPartner ?kamehamehaIII .
  
  FILTER (?fatherChild != ?childIII && ?kamehamehaIII = dbr:Kamehameha_III)
  BIND(?fatherChild AS ?childOfFather)

  # Step 3: Find Kamehameha IV's children who are royalty
  ?childIV a dbo:Monarch ;
           dbo:spouseOrPartner ?kamehamehaIV .
  
  FILTER (?kamehamehaIV = dbr:Kamehameha_IV)

  # Step 4: Find the parent of Kamehameha IV's children
  ?parentOfChildIV dbo:child ?childIV .

  # Final step: Match the results from steps 2 and 4
  FILTER(?childOfFather = ?parentOfChildIV)
}
```",5,7,6,3,2,3,3,71,0,0,1,0,0.0,0
170,23,val,Give me the entity in the work of International Energy Agency and domain of the profession of John Scholey.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/country> ?v2 . ?v2 <http://dbpedia.org/property/author> <http://dbpedia.org/resource/International_Energy_Agency> . ?result <http://dbpedia.org/ontology/leaderTitle> ?v1 . <http://dbpedia.org/resource/John_Scholey> <http://dbpedia.org/property/occupation> ?v1 . },"```sparql
# Query for entity associated with the work of the International Energy Agency
SELECT ?entity WHERE {
  ?work dcterms:isPartOf <http://dbpedia.org/resource/International_Energy_Agency> .
  ?work rdfs:label ?entity .
  FILTER(LANG(?entity) = 'en')
}

UNION

# Query for domain of the profession of John Scholey
SELECT ?domain WHERE {
  ?person foaf:name ""John Scholey""@en .
  ?person dbo:occupation ?profession .
  ?profession dbo:fieldOfStudyOrDomain ?domain .
  FILTER(LANG(?domain) = 'en')
}
```",4,4,5,2,2,2,3,28,0,0,99,0,0.0,0
645,46,val,"Give me the commander in the force of the commander in Siege of Madrid and military force of the force, that is an event and a military conflict and a societal event, of Francisco Largo Caballero.",SELECT ?result WHERE { ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?result <http://dbpedia.org/ontology/battle> ?v4 . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. <http://dbpedia.org/resource/Siege_of_Madrid> <http://dbpedia.org/ontology/commander> ?v2 . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?v1 <http://dbpedia.org/ontology/commander> ?v2 . ?v1 <http://dbpedia.org/ontology/commander> ?result . ?v4 <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Francisco_Largo_Caballero> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?commander ?militaryForce WHERE {
  # Find the commander of the Siege of Madrid
  ?siege dbo:commander ?commander .
  ?siege rdfs:label ""Siege of Madrid""@en .

  # Ensure the military force is linked to Francisco Largo Caballero
  ?militaryForce dbo:commander ?commander ;
                 dbo:participatedInMilitaryConflict ?conflict ;
                 dbo:relatedToSocietalEvent ?event .
  
  ?conflict rdfs:label ""Spanish Civil War""@en .
  ?event dbr:Francisco_Largo_Caballero .

  # Filter to ensure the military force is relevant
  FILTER(?commander != dbr:Francisco_Largo_Caballero) 
}
```",5,8,6,3,2,3,3,71,0,0,53,0,0.0,0
715,42,val,"Give me the commander in the force, that is a military conflict, of Abd el-Krim and commander in Spanish Civil War and leader of the office, that is a government agency and an organisation, of Carlos Franco Iribarnegaray.",SELECT ?result WHERE { <http://dbpedia.org/resource/Carlos_Franco_Iribarnegaray> <http://dbpedia.org/property/office> ?v1 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?v1 <http://dbpedia.org/ontology/leader> ?result . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/GovernmentAgency>. ?v2 <http://dbpedia.org/ontology/commander> ?result . ?v2 <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Abd_el-Krim> . <http://dbpedia.org/resource/Spanish_Civil_War> <http://dbpedia.org/ontology/commander> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?abdElKrimCommander ?carlosFrancoOfficeLeader WHERE {
  # Abd el-Krim's involvement in military conflicts
  OPTIONAL {
    dbr:Abd_el-Krim dbo:militaryConflict [
      a dbo:MilitaryConflict ;
      dbo:commander ?abdElKrimCommander .
    ] .
  }

  # Equivalent role during the Spanish Civil War (if any)
  OPTIONAL {
    ?abdElKrimRole dbo:conflict dbr:Spanish_Civil_War .
    ?abdElKrimRole dbo:commander ?abdElKrimCommander .
  }

  # Carlos Franco Iribarnegaray's leadership role
  OPTIONAL {
    dbr:Carlos_Franco_Iribarnegaray dbo:officeLeader [
      a dbo:GovernmentAgency, dbo:Organization ;
      dbo:leader ?carlosFrancoOfficeLeader .
    ] .
  }
}
```",5,8,6,2,3,3,3,71,0,0,1,0,0.0,0
839,44,val,"Give me the band of the member of Böhse Onkelz and band of Kevin Russell (musician) and band of the band, that is a musical artist, of Charlie Huhn.",SELECT ?result WHERE { <http://dbpedia.org/resource/Böhse_Onkelz> <http://dbpedia.org/ontology/bandMember> ?v4 . <http://dbpedia.org/resource/Charlie_Huhn> <http://dbpedia.org/ontology/associatedMusicalArtist> ?v2 . ?result <http://dbpedia.org/ontology/bandMember> ?v2 . <http://dbpedia.org/resource/Kevin_Russell_(musician)> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?result <http://dbpedia.org/ontology/bandMember> ?v4 . },"```sparql
# Query to find a band of a member of Böhse Onkelz
SELECT ?member ?otherBand WHERE {
  ?band rdf:type dbo:MusicalGroup ;
        rdfs:label ""Böhse Onkelz""@en .
  ?band dbo:member ?person .
  ?person foaf:name ?member .
  OPTIONAL { 
    ?person dbo:associatedBand ?otherBand .
  }
} LIMIT 1

UNION

# Query to find the band of Kevin Russell
SELECT ?band WHERE {
  ?person foaf:name ""Kevin Russell""@en ;
          dbo:associatedBand ?band .
} LIMIT 1

UNION

# Query to find the band of Charlie Huhn and then a related musical artist or band
SELECT ?relatedBand WHERE {
  ?person foaf:name ""Charlie Huhn""@en ;
          dbo:member ?band .
  OPTIONAL { 
    ?band dbo:associatedMusicalArtistOrBand ?relatedBand .
  }
} LIMIT 1
```",5,6,6,2,3,3,3,71,0,0,1,0,0.0,0
41,23,val,"Give me the party of the work, that is an office holder, of yes and party of the leader, that is a politician and an office holder, of 2005 Castlereagh Borough Council election.","SELECT ?result WHERE { ?v3 <http://dbpedia.org/ontology/party> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. <http://dbpedia.org/resource/2005_Castlereagh_Borough_Council_election> <http://dbpedia.org/property/leader> ?v3 . ?v1 <http://dbpedia.org/property/author> ""yes""@en . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v1 <http://dbpedia.org/ontology/party> ?result . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?winnerParty ?leaderParty WHERE {
  # Find the winner of the Castlereagh Borough Council election in 2005
  ?election dbo:electionDate ?date .
  ?election dbo:officeHolder ?winner .
  ?winner dbo:party ?winnerParty .

  FILTER (STRSTARTS(STR(?date), ""2005""))

  # Ensure it's the Castlereagh Borough Council election
  ?election rdfs:label ?label .
  FILTER(CONTAINS(LCASE(?label), ""castlereagh borough council election 2005""))

  # Find the leader who is a politician and office holder in 2005
  ?leader dbo:officeHolder ?office .
  ?leader dbo:party ?leaderParty .

  # Ensure the leader was active around 2005
  ?leader dbo:birthDate ?birthDate .
  OPTIONAL { ?leader dbo:deathDate ?deathDate }
  
  FILTER (
    (YEAR(?birthDate) < 2005 && (!BOUND(?deathDate) || YEAR(?deathDate) > 2005))
  )

  # Ensure the leader is a politician
  ?leader rdf:type dbr:Politician .

  # Link the leader to the election contextually, assuming they are related
  OPTIONAL { ?election dbo:relatedLeader ?leader }
}
```",4,7,5,2,2,2,3,28,0,0,1,0,0.0,0
865,41,val,"Give me the father of the child, that is a politician, of Abu Ahmad Abdul Hafiz and father of Shahla Khatun and native of the residence, that is a country, of Ram Jaipal Singh Yadav.",SELECT ?result WHERE { ?v4 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Abu_Ahmad_Abdul_Hafiz> . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. <http://dbpedia.org/resource/Ram_Jaipal_Singh_Yadav> <http://dbpedia.org/property/residence> ?v0 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. <http://dbpedia.org/resource/Shahla_Khatun> <http://dbpedia.org/property/father> ?result . ?result <http://dbpedia.org/ontology/birthPlace> ?v0 . ?v4 <http://dbpedia.org/property/father> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?father WHERE {
  # Step 1: Identify the child of Abu Ahmad Abdul Hafiz who is a politician
  ?child dbo:parent dbr:Abu_Ahmad_Abdul_Hafiz .
  ?child rdf:type dbo:Politician .

  # Step 2: Identify the father of Shahla Khatun
  ?shahlaChild dbo:parent ?father .
  ?shahlaChild rdfs:label ""Shahla Khatun""@en .

  # Step 3: Determine the country associated with Ram Jaipal Singh Yadav's residence
  dbr:Ram_Jaipal_Singh_Yadav dbo:nationality ?country .

  # Step 4: Find the common person who fits all these criteria
  FILTER(?child = ?shahlaChild)
}
```",5,7,6,2,3,3,3,71,0,0,1,0,0.0,0
216,54,val,"Give me the player in the coach, that is a soccer player and a sports manager and a soccer manager, of the player, that is an organisation and a sports club and a soccer club, in Džemal Berberović and player in the coach of Croatia national under-21 football team and team of Ognjen Vukojević.",SELECT ?result WHERE { ?v0 <http://dbpedia.org/ontology/coach> ?v5 . ?result <http://dbpedia.org/ontology/coach> <http://dbpedia.org/resource/Ognjen_Vukojević> . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. <http://dbpedia.org/resource/Croatia_national_under-21_football_team> <http://dbpedia.org/ontology/coach> ?v3 . <http://dbpedia.org/resource/Džemal_Berberović> <http://dbpedia.org/ontology/team> ?v0 . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsManager>. ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerManager>. ?v5 <http://dbpedia.org/ontology/team> ?result . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerClub>. ?v3 <http://dbpedia.org/ontology/team> ?result . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerPlayer>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsClub>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?playerInCoach WHERE {
  # Džemal Berberović's connections
  ?džemalBerberović a dbo:SoccerPlayer ;
                   dbo:team ?croatiaUnder21Team ;
                   dbo:coach ?playerInCoach .

  # Ognjen Vukojević's connections
  ?ognjenVukojevic a dbo:SoccerPlayer ;
                   dbo:team ?someTeam ;
                   dbo:coach ?playerInCoach .

  # The player in the coach must be a soccer player, sports manager, and soccer manager
  ?playerInCoach a dbo:SoccerPlayer , dbo:SportsManager , dbo:SoccerManager .

  # The organization is a sports club and specifically a soccer club
  ?croatiaUnder21Team a dbo:SportsClub ;
                      dbo:sport dbr:Soccer .
  
  FILTER(?džemalBerberović = dbr:Džemal_Berberović)
  FILTER(?ognjenVukojevic = dbr:Ognjen_Vukojević)
}
```",6,12,7,3,3,3,3,71,0,0,1,0,0.0,0
129,21,val,Give me the associated musical artist of the person born as Tahj Malik Chandler and associated musical artist of EarthGang and professional in .,"SELECT ?result WHERE { <http://dbpedia.org/resource/EarthGang> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v0 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v0 <http://dbpedia.org/property/birthName> ""Tahj Malik Chandler""@en . ?result <http://dbpedia.org/property/occupation> """"@en . }","```sparql
# Query for Tahj Malik Chandler (Lil Nas X)
SELECT ?artist WHERE {
  ?person rdfs:label ""Tahj Malik Chandler""@en .
  ?person foaf:name ?name .
  FILTER(CONTAINS(LCASE(?name), ""lil nas x""))
  OPTIONAL { ?person dbo:musicArtist ?artist . }
}

# Query for EarthGang members
SELECT DISTINCT ?member ?associatedArtist WHERE {
  VALUES ?group { dbpedia:EarthGang }
  ?group dbo:member ?member .
  OPTIONAL { ?member dbo:musicalArtist ?associatedArtist . }
}
```",4,4,5,2,3,2,3,28,0,0,1,0,0.0,0
976,47,val,"Give me the office of the leader, that is a politician, of Grand National Assembly of Turkey and office of the mayor, that is a politician and an office holder and Turkish, of the reference, that is an organisation and a political party and Turkish, to Millet İttifakı.","SELECT ?result WHERE { ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v0 <http://xmlns.com/foaf/0.1/name> ""Millet İttifakı""@en . ?v3 <http://dbpedia.org/property/office> ?result . ?v0 <http://dbpedia.org/property/leader> ?v3 . ?v1 <http://dbpedia.org/property/office> ?result . ?v3 <http://dbpedia.org/ontology/nationality> <http://dbpedia.org/resource/Turkey>. ?v0 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Turkey>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/PoliticalParty>. <http://dbpedia.org/resource/Grand_National_Assembly_of_Turkey> <http://dbpedia.org/ontology/leader> ?v1 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?office1 ?office2 WHERE {
  # Office of the leader of the Grand National Assembly of Turkey
  dbr:Speaker_of_the_Grand_National_Assembly_of_Turkey dbo:positionHeld ?office1 .
  
  # Mayor associated with Millet İttifakı
  ?mayor a dbo:Mayor ;
         dbo:politicalAffiliation ?party ;
         dbo:officeHolder ?office2 .

  # Ensure the party is part of Millet İttifakı
  ?party dbo:memberOf dbr:Millet_İttifakı .
  
  # Ensure the mayor is a politician and office holder
  ?mayor dbo:isPolitician true ;
         dbo:isOfficeHolder true .

  FILTER (lang(?office1) = 'en' && lang(?office2) = 'en')
}
```",5,12,6,3,2,3,3,71,0,0,1,0,0.0,0
573,52,val,"Give me the person decedent at the residence, that is a settlement, of William J. Phelan and parent of John Quincy Adams and person decedent at the administration, that is a region, of the real name of Charlie Baker (Australian footballer).",SELECT ?result WHERE { <http://dbpedia.org/resource/John_Quincy_Adams> <http://dbpedia.org/ontology/parent> ?result . ?result <http://dbpedia.org/ontology/deathPlace> ?v2 . ?result <http://dbpedia.org/ontology/deathPlace> ?v5 . <http://dbpedia.org/resource/Charlie_Baker_(Australian_footballer)> <http://xmlns.com/foaf/0.1/name> ?v3 . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Region>. <http://dbpedia.org/resource/William_J._Phelan> <http://dbpedia.org/property/residence> ?v5 . ?v2 <http://dbpedia.org/property/governor> ?v3 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?parent1 ?parent2 WHERE {
  # Part 1: Person decedent at the residence of William J. Phelan and parent of John Quincy Adams
  ?residence a dbo:Settlement ;
             dbo:resident dbr:William_J._Phelan .
  ?phelanParent dbo:child dbr:John_Quincy_Adams ;
                dbo:spouse ?parent1 ;
                dbo:deceased ?deathDate1 .
  FILTER EXISTS { ?residence dbo:resident ?phelanParent }
  
  # Part 2: Person decedent at the administration of Charlie Baker's real name
  dbr:Charlie_Baker (dbo:birthName|dbo:realName) ?charlieRealName .
  ?administration a dbo:Region ;
                  dbo:administrator ?charlieRealName ;
                  dbo:deceased ?deathDate2 .
  ?adminParent dbo:child ?charlieRealName ;
               dbo:spouse ?parent2 ;
               dbo:deceased ?deathDate3 .
  FILTER EXISTS { ?administration dbo:administrator ?adminParent }
  
  # Ensure the same person is found in both parts
  BIND(?phelanParent AS ?parent1)
  BIND(?adminParent AS ?parent2)
}
```",6,8,7,3,3,3,3,71,0,0,2,0,0.0,0
645,48,val,"Give me the commander in the force of the commander in Siege of Madrid and leader of the office, that is a government agency and an organisation, of Camilo Menéndez Tolosa.",SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. <http://dbpedia.org/resource/Camilo_Menéndez_Tolosa> <http://dbpedia.org/property/office> ?v1 . <http://dbpedia.org/resource/Siege_of_Madrid> <http://dbpedia.org/ontology/commander> ?v3 . ?v2 <http://dbpedia.org/ontology/commander> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/GovernmentAgency>. ?v1 <http://dbpedia.org/ontology/leader> ?result . ?v2 <http://dbpedia.org/ontology/commander> ?v3 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?commander ?office WHERE {
  # Find the commander involved in the Siege of Madrid
  ?siege dbo:partOf dbr:Spanish_Civil_War ;
         dbo:location dbr:Madrid .
  
  ?commander dbo:role ?siege ;
             a dbo:MilitaryPerson .

  # Find any office or government agency led by Camilo Menéndez Tolosa
  ?office dbo:leader dbr:Camilo_Menéndez_Tolosa ;
          a dbo:GovernmentAgency ; 
          dbo:organizationType ?type .
  
  # Link the commander to the office
  OPTIONAL { ?commander dbo:role ?office }
}
```",5,7,6,3,2,3,3,71,0,0,1,0,0.0,0
926,47,val,Give me the father of the father of Abdulaziz and successor of the child of the spouse of Şermi Kadın.,SELECT ?result WHERE { ?v0 <http://dbpedia.org/ontology/spouse> <http://dbpedia.org/resource/Şermi_Kadın> . ?v3 <http://dbpedia.org/property/father> ?v0 . ?v3 <http://dbpedia.org/ontology/successor> ?result . <http://dbpedia.org/resource/Abdulaziz> <http://dbpedia.org/property/father> ?v1 . ?v1 <http://dbpedia.org/property/father> ?result . },"```sparql
# Query to find Faisal bin Turki (father of Abdulaziz's father)
SELECT ?grandfather WHERE {
  wd:Q1234567 wdt:P22 ?father.
  ?father wdt:P22 ?grandfather.
}

# Query to find Murad V and his successor Abdülhamid II
SELECT ?successor WHERE {
  wd:Q7890123 wdt:P45 ?successor.
}
```

Note: The above SPARQL queries use placeholder QIDs (`wd:Q1234567` for Abdulaziz, `wd:Q7890123` for Murad V) which need to be replaced with the actual DBpedia identifiers for these individuals.",5,5,6,3,2,3,3,71,0,0,1,0,0.0,0
976,55,val,"Give me the office of the mayor, that is a politician and an office holder and Turkish, of Nation Alliance (Turkey) and office of the person born as Mehmet Naci Bostancı and office of the leader, that is a politician, of Grand National Assembly of Turkey.","SELECT ?result WHERE { <http://dbpedia.org/resource/Nation_Alliance_(Turkey)> <http://dbpedia.org/property/leader> ?v5 . ?v5 <http://dbpedia.org/property/office> ?result . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v2 <http://dbpedia.org/property/office> ?result . ?v0 <http://dbpedia.org/property/office> ?result . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. <http://dbpedia.org/resource/Grand_National_Assembly_of_Turkey> <http://dbpedia.org/ontology/leader> ?v2 . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v5 <http://dbpedia.org/ontology/nationality> <http://dbpedia.org/resource/Turkey>. ?v0 <http://dbpedia.org/property/birthName> ""Mehmet Naci Bostancı""@en . }","```sparql
# Query for the mayor associated with Nation Alliance (Turkey)
SELECT ?mayorOffice WHERE {
  ?person dbo:nationality dbr:Turkish_people ;
          dbo:occupation dbr:Politician ;
          dbo:officeHolderOf ?office .
  ?office dbo:party dbr:Nation_Alliance_(Turkey) .
  ?office rdf:type dbo:Mayor .
  BIND(?office AS ?mayorOffice)
}

UNION

# Query for Mehmet Naci Bostancı's office
SELECT ?bostanciOffice WHERE {
  ?person foaf:name ""Mehmet Naci Bostancı""@en ;
          dbo:birthName ""Mehmet Naci Bostancı""@en ;
          dbo:officeHolderOf ?office .
  BIND(?office AS ?bostanciOffice)
}

UNION

# Query for the leader of the Grand National Assembly of Turkey
SELECT ?leaderOffice WHERE {
  ?person dbo:nationality dbr:Turkish_people ;
          dbo:occupation dbr:Politician ;
          dbo:officeHolderOf ?office .
  ?office rdf:type dbo:Leader_of_the_Grand_National_Assembly_of_Turkey .
  BIND(?office AS ?leaderOffice)
}
```",6,10,7,2,3,3,3,71,0,0,1,0,0.0,0
839,54,val,"Give me the band of the person born, that is a musical artist, as Kevin Richard Russell and band of the member of the band, that is a band and a group, of Peter Schorowsky and band of Matthias Röhr.","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/bandMember> <http://dbpedia.org/resource/Matthias_Röhr> . ?v0 <http://dbpedia.org/ontology/bandMember> ?v5 . ?v3 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Group>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Band>. ?v3 <http://dbpedia.org/property/birthName> ""Kevin Richard Russell""@en . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?result <http://dbpedia.org/ontology/bandMember> ?v5 . <http://dbpedia.org/resource/Peter_Schorowsky> <http://dbpedia.org/ontology/associatedMusicalArtist> ?v0 . }","```sparql
# Query for the band of Kevin Richard Russell
SELECT ?band WHERE {
  ?person foaf:name ""Kevin Richard Russell""@en .
  ?person dbo:genre dbr:Musical_artist .
  ?person dbo:associatedBand ?band .
}

UNION

# Query for the band of Peter Schorowsky where it is both a band and a group
SELECT ?band WHERE {
  ?person foaf:name ""Peter Schorowsky""@en .
  ?person dbo:memberOf ?band .
  ?band rdf:type dbr:Band .
  ?band rdf:type dbr:Group .
}

UNION

# Query for the band of Matthias Röhr
SELECT ?band WHERE {
  ?person foaf:name ""Matthias Röhr""@en .
  ?person dbo:associatedBand ?band .
}
```",6,9,7,3,3,3,3,71,0,0,1,0,0.0,0
445,53,val,"Give me the death place of Patrick Moore and entity in the residence, that is a country, of the resident, that is an athlete, of Great Britain and entity in the award of George H. Cameron.",SELECT ?result WHERE { ?v3 <http://dbpedia.org/property/residence> <http://dbpedia.org/resource/Great_Britain> . ?v3 <http://dbpedia.org/property/residence> ?v2 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Athlete>. ?result <http://dbpedia.org/ontology/country> ?v1 . <http://dbpedia.org/resource/George_H._Cameron> <http://dbpedia.org/property/awards> ?v1 . <http://dbpedia.org/resource/Patrick_Moore> <http://dbpedia.org/ontology/deathPlace> ?result . ?result <http://dbpedia.org/ontology/location> ?v2 . },"```sparql
# Query to get the death place of Patrick Moore
SELECT ?deathPlace WHERE {
  dbpedia:Patrick_Moore dbo:deathPlace ?deathPlace .
}

UNION

# Query to find a country where a British athlete resides
SELECT DISTINCT ?country WHERE {
  ?athlete dbo:nationality dbc:Great_Britain ;
           dbo:residence ?residence .
  ?residence rdf:type dbo:Country ;
             rdfs:label ?country .
  FILTER (lang(?country) = 'en')
}

UNION

# Query to find the award associated with George H. Cameron
SELECT DISTINCT ?award WHERE {
  dbpedia:George_H._Cameron dbo:award ?award .
}
```",6,8,7,3,3,3,3,71,0,0,1,0,0.0,0
773,54,val,"Give me the spouse of the father of Charles the Fat and parent of Charles the Fat and parent of the successor of the child, that is a royalty, of Louis the Pious.",SELECT ?result WHERE { <http://dbpedia.org/resource/Charles_the_Fat> <http://dbpedia.org/ontology/parent> ?result . <http://dbpedia.org/resource/Louis_the_Pious> <http://dbpedia.org/ontology/child> ?v0 . ?v3 <http://dbpedia.org/ontology/spouse> ?result . <http://dbpedia.org/resource/Charles_the_Fat> <http://dbpedia.org/property/father> ?v3 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?result <http://dbpedia.org/ontology/child> ?v5 . ?v0 <http://dbpedia.org/ontology/successor> ?v5 . },"```sparql
SELECT ?spouse WHERE {
  ?charlesFat dbo:father dbc:Louis_the_German .
  ?louisGerman dbo:spouse ?spouse .
  FILTER EXISTS { ?spouse rdf:type dbo:Person . }
  FILTER EXISTS { ?spouse dbo:nationality dbr:Frankish_Roman_Empire . }
}
```",6,7,7,3,3,3,3,71,0,0,1,0,0.0,0
507,43,val,"Give me the professional in Film director, television director and director of the movie, that is a movie and a work, with the person born on 1919-06-17 and spouse of Anne V. Coates.","SELECT ?result WHERE { ?v4 <http://dbpedia.org/property/starring> ?v0 . ?result <http://dbpedia.org/ontology/spouse> <http://dbpedia.org/resource/Anne_V._Coates> . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Film>. ?v0 <http://dbpedia.org/ontology/birthDate> ""1919-06-17""^^<http://www.w3.org/2001/XMLSchema#date> . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?result <http://dbpedia.org/property/occupation> ""Film director, television director""@en . ?v4 <http://dbpedia.org/ontology/director> ?result . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?person ?film WHERE {
  ?person a dbo:FilmDirector ;
          dbo:birthDate ""1919-06-17""^^xsd:date ;
          dbo:spouse dbr:Anne_V._Coates .
  
  OPTIONAL { ?person dbo:televisionDirector true . }
  
  ?film dbo:director ?person ;
        a dbo:Film ;
        dbo:workType dbp:Movie .

  FILTER EXISTS {
    ?film a dbo:Work .
  }
}
```",5,7,6,3,3,3,3,71,0,0,1,0,0.0,0
36,22,val,"Give me the actor of the claim to fame, that is a film, of Lepacious Bose and person born in the birth year of Deanne Bray.",SELECT ?result WHERE { <http://dbpedia.org/resource/Deanne_Bray> <http://dbpedia.org/ontology/birthYear> ?v0 . <http://dbpedia.org/resource/Lepacious_Bose> <http://dbpedia.org/ontology/knownFor> ?v3 . ?result <http://dbpedia.org/ontology/birthYear> ?v0 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Film>. ?v3 <http://dbpedia.org/ontology/starring> ?result . },"```sparql
# Step 1: Find Lepa Bose's claim to fame (film)
SELECT ?film WHERE {
    wd:Q1234567 dbo:claimToFame ?film .
}

# Step 2: Get Deanne Bray's birth year
SELECT ?birthYear WHERE {
    wd:Q6543210 dbo:birthday ?date .
    BIND(YEAR(?date) AS ?birthYear)
}

# Step 3: Find actors of the film born in that year
SELECT DISTINCT ?actor WHERE {
    # Replace ?film with the actual URI obtained from step 1
    ?film dbo:starring ?actor .
    
    # Replace ?birthYear with the value obtained from step 2
    ?actor dbo:birthday ?date .
    FILTER(YEAR(?date) = ?birthYear)
}
```

Note: The placeholders `wd:Q1234567` and `wd:Q6543210` should be replaced with the actual DBpedia URIs for Lepa Bose and Deanne Bray, respectively. These can be found by querying DBpedia or using a service like Wikidata to get their respective QIDs.",4,5,5,2,2,2,3,28,0,0,1,0,0.0,0
200,7,val,Give me the reference to the name of Angelcorpse and band member of Order from Chaos.,SELECT ?result WHERE { <http://dbpedia.org/resource/Angelcorpse> <http://xmlns.com/foaf/0.1/name> ?v0 . ?result <http://dbpedia.org/ontology/associatedMusicalArtist> <http://dbpedia.org/resource/Order_from_Chaos> . ?result <http://xmlns.com/foaf/0.1/name> ?v0 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?angelcorpseName ?memberName WHERE {
  # Find the name of Angelcorpse
  ?angelcorpse a dbo:Band ;
               rdfs:label ?angelcorpseName .
  FILTER (CONTAINS(LCASE(?angelcorpseName), ""angelcorpse"") && LANGMATCHES(LANG(?angelcorpseName), ""en""))

  # Find members of Angelcorpse
  ?member dbo:bandMemberOf ?angelcorpse ;
          rdfs:label ?memberName .

  # Find the name of Order from Chaos
  ?order a dbo:Band ;
         rdfs:label ?orderName .
  FILTER (CONTAINS(LCASE(?orderName), ""order from chaos"") && LANGMATCHES(LANG(?orderName), ""en""))

  # Find members of Order from Chaos
  ?member dbo:bandMemberOf ?order .

}
```",3,3,4,2,2,2,2,9,0,0,1,0,0.0,0
582,46,val,"Give me the reference to the residence of the reference, that is a scientist, to Hirotaka Sugawara and player in the father, that is an athlete and a soccer manager and a sports manager, of Masami Nagasawa.","SELECT ?result WHERE { ?v2 <http://xmlns.com/foaf/0.1/name> ""Hirotaka Sugawara""@en . ?v2 <http://dbpedia.org/property/residence> ?v1 . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Athlete>. ?result <http://xmlns.com/foaf/0.1/name> ?v1 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Scientist>. ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsManager>. ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerManager>. ?v4 <http://dbpedia.org/ontology/team> ?result . <http://dbpedia.org/resource/Masami_Nagasawa> <http://dbpedia.org/property/father> ?v4 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?residence WHERE {
  ?person1 dbo:father dbr:Tetsuji_Nagasawa .
  ?person2 dbo:mother ?person1 .
  ?person2 rdfs:label ""Masami Nagasawa""@en .
  ?person2 dbo:residenceLocation ?residence .
}
```",5,9,6,3,2,3,3,71,0,0,1,0,0.0,0
507,55,val,"Give me the spouse of the person born as Anne Voase Coates and professional in the profession of Guy Ferland and director of the movie, that is a movie and a work, with Beryl Reid.","SELECT ?result WHERE { ?v5 <http://dbpedia.org/property/starring> <http://dbpedia.org/resource/Beryl_Reid> . ?v3 <http://dbpedia.org/property/birthName> ""Anne Voase Coates""@en . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Film>. <http://dbpedia.org/resource/Guy_Ferland> <http://dbpedia.org/property/occupation> ?v2 . ?result <http://dbpedia.org/ontology/spouse> ?v3 . ?v5 <http://dbpedia.org/ontology/director> ?result . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?result <http://dbpedia.org/property/occupation> ?v2 . }","```sparql
SELECT ?spouse WHERE {
  wd:Q123456 a dbo:Person; 
             foaf:name ""Anne Voase Coates""@en;
             dbo:spouse ?spouse.
}
```

Note: Replace `wd:Q123456` with the actual DBpedia resource identifier for Anne Voase Coates.",6,8,7,2,3,3,3,71,0,0,1,0,0.0,0
976,54,val,"Give me the office of the leader, that is a politician, of Grand National Assembly of Turkey and office of Naci Bostancı and office of the mayor, that is a politician and an office holder and Turkish, of the reference, that is an organisation and a political party and Turkish, to Millet İttifakı.","SELECT ?result WHERE { ?v1 <http://xmlns.com/foaf/0.1/name> ""Millet İttifakı""@en . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?v4 <http://dbpedia.org/ontology/nationality> <http://dbpedia.org/resource/Turkey>. ?v1 <http://dbpedia.org/property/leader> ?v4 . ?v2 <http://dbpedia.org/property/office> ?result . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v4 <http://dbpedia.org/property/office> ?result . <http://dbpedia.org/resource/Grand_National_Assembly_of_Turkey> <http://dbpedia.org/ontology/leader> ?v2 . <http://dbpedia.org/resource/Naci_Bostancı> <http://dbpedia.org/property/office> ?result . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v1 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Turkey>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/PoliticalParty>. }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?officeLeaderGNAT ?officeNaciBostanci ?officeMayorMilletIttifak

{
  # Office of the Leader of the Grand National Assembly of Turkey
  {
    SELECT ?officeLeaderGNAT WHERE {
      ?leader a dbo:MemberOfParliament ;
              dbo:memberOf dbr:Grand_National_Assembly_of_Turkey .
      OPTIONAL { ?leader dbo:position ?officeLeaderGNAT }
    } ORDER BY DESC(?leader) LIMIT 1
  }

  # Office of Naci Bostancı
  {
    SELECT ?officeNaciBostanci WHERE {
      dbr:Naci_Bostancı a dbo:Politician ;
                        dbo:politicalOffice ?officeNaciBostanci .
    }
  }

  # Office of the Mayor related to Millet İttifakı
  {
    SELECT ?officeMayorMilletIttifak WHERE {
      ?mayor a dbo:Mayor ;
             dbo:memberOf dbr:Millet_İttifakı ;
             dbo:politicalParty dbr:Millet_İttifakı .
      OPTIONAL { ?mayor dbo:position ?officeMayorMilletIttifak }
    } ORDER BY DESC(?mayor) LIMIT 1
  }
}
```",6,13,7,3,3,3,3,71,0,0,1,0,0.0,0
41,21,val,"Give me the party of Declan Costello and party of the work, that is an office holder, of yes and party of Mark Durkan.","SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. <http://dbpedia.org/resource/Mark_Durkan> <http://dbpedia.org/ontology/party> ?result . ?v1 <http://dbpedia.org/ontology/party> ?result . <http://dbpedia.org/resource/Declan_Costello> <http://dbpedia.org/ontology/party> ?result . ?v1 <http://dbpedia.org/property/author> ""yes""@en . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX db: <http://dbpedia.org/resource/>

SELECT ?declanParty ?markOfficeHolder ?markParty WHERE {
  # Query for Declan Costello's party
  OPTIONAL { 
    db:Declan_Costello dbo:party ?declanParty .
  }
  
  # Query for Mark Durkan's office holder status and party
  OPTIONAL {
    ?markDurkan dbo:officeHolder ?markOfficeHolder .
    ?markDurkan dbo:party ?markParty .
    FILTER (str(?markDurkan) = ""Mark_Durkan"")
  }
}
```",4,5,5,2,3,2,3,28,1,0,0,1.0,1.0,1.0
645,55,val,"Give me the leader of the office, that is a government agency and an organisation, of Camilo Menéndez Tolosa and military force of the force, that is an event and a military conflict and a societal event, of Francisco Largo Caballero and commander in the force of Carlos Asensio Cabanillas.",SELECT ?result WHERE { ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?v5 <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Francisco_Largo_Caballero> . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/GovernmentAgency>. ?v3 <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Carlos_Asensio_Cabanillas> . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v3 <http://dbpedia.org/ontology/commander> ?result . ?v2 <http://dbpedia.org/ontology/leader> ?result . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?result <http://dbpedia.org/ontology/battle> ?v5 . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. <http://dbpedia.org/resource/Camilo_Menéndez_Tolosa> <http://dbpedia.org/property/office> ?v2 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?leader ?militaryForce ?commander WHERE {
  # Find the organization led by Camilo Menéndez Tolosa
  ?office dbo:type dbr:Government_office ;
          dbo:head dbr:Camilo_Menéndez_Tolosa .
  
  # Identify the military force associated with Francisco Largo Caballero
  ?militaryForce dbo:type ?type1, ?type2, ?type3 ;
                 dbo:commander dbr:Francisco_Largo_Caballero ;
                 ?relation ?office .

  FILTER(?type1 = dbr:Military_conflict && 
         ?type2 = dbr:Event && 
         ?type3 = dbr:Societal_event)

  # Determine Carlos Asensio Cabanillas' role as a commander
  ?militaryForce dbo:commander dbr:Carlos_Asensio_Cabanillas .

  BIND(dbr:Camilo_Menéndez_Tolosa AS ?leader)
  BIND(?militaryForce AS ?force)
  BIND(dbr:Carlos_Asensio_Cabanillas AS ?commander)
}
```",6,11,7,2,3,3,3,71,0,0,1,0,0.0,0
892,50,val,"Give me the landmark at elevation of the award of the member of E-girls and entity in the administration, that is Italian and a region and a settlement and an administrative region, of Democratic Party (Italy).",SELECT ?result WHERE { ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. ?v0 <http://dbpedia.org/property/leaderParty> <http://dbpedia.org/resource/Democratic_Party_(Italy)> . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/AdministrativeRegion>. ?result <http://dbpedia.org/ontology/province> ?v0 . ?v1 <http://dbpedia.org/property/awards> ?v3 . ?v0 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Italy>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Region>. <http://dbpedia.org/resource/E-girls> <http://dbpedia.org/ontology/bandMember> ?v1 . ?result <http://dbpedia.org/ontology/elevation> ?v3 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?landmark WHERE {
  # Step 1: Identify a member of E-girls and their award
  ?member dbo:memberOf dbr:E-girls .
  ?award dbo:recipient ?member .

  # Step 2: Find Italian entities that are regions, settlements, administrative regions, and part of the Democratic Party
  ?region a dbo:Region ;
          dbo:country dbr:Italy ;
          dbo:settlement true ;
          dbo:administrativeRegion true ;
          dbp:politicalParty dbr:Democratic_Party_(Italy) .

  # Step 3: Find landmarks in these regions and their elevations
  ?landmark dbo:elevation ?elevation ;
            dbo:location ?region .
  
  # Order by elevation to find the highest landmark
  ORDER BY DESC(?elevation)
}
LIMIT 1
```",5,9,6,3,2,3,3,71,0,0,2,0,0.0,0
645,42,val,"Give me the leader of the office, that is a government agency and an organisation, of Camilo Menéndez Tolosa and military force of Spanish Civil War and commander in the force of Carlos Asensio Cabanillas.",SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/GovernmentAgency>. ?v1 <http://dbpedia.org/ontology/leader> ?result . ?v2 <http://dbpedia.org/ontology/commander> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?v2 <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Carlos_Asensio_Cabanillas> . ?result <http://dbpedia.org/ontology/battle> <http://dbpedia.org/resource/Spanish_Civil_War> . <http://dbpedia.org/resource/Camilo_Menéndez_Tolosa> <http://dbpedia.org/property/office> ?v1 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?leaderOfOffice ?militaryForceLeader WHERE {
  # Find the office led by Camilo Menéndez Tolosa
  OPTIONAL {
    ?office dbo:head dbr:Camilo_Menéndez_Tolosa .
    ?office dbo:type ?type .
    FILTER(?type IN (dbo:GovernmentAgency, dbo:Organization)) .
    ?leaderOfOffice dbo:head ?office .
  }

  # Find the military force commanded by Carlos Asensio Cabanillas
  OPTIONAL {
    ?militaryForce dbo:commander dbr:Carlos_Asensio_Cabanillas ;
                   dbo:type dbo:MilitaryUnit .
    ?militaryForceLeader dbo:commander ?militaryForce .
  }
}
```",5,7,6,2,3,3,3,71,0,0,1,0,0.0,0
987,53,val,"Give me the birth place of Moamer Kasumović and entity in the region, that is a country, of Central European Time and birth place of the band, that is an artist and a musical artist, of the band, that is an artist, of Dado Polumenta.",SELECT ?result WHERE { <http://dbpedia.org/resource/Dado_Polumenta> <http://dbpedia.org/ontology/associatedMusicalArtist> ?v3 . ?v3 <http://dbpedia.org/ontology/associatedMusicalArtist> ?v1 . ?v1 <http://dbpedia.org/ontology/birthPlace> ?result . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. ?v0 <http://dbpedia.org/property/timeZone> <http://dbpedia.org/resource/Central_European_Time> . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. <http://dbpedia.org/resource/Moamer_Kasumović> <http://dbpedia.org/ontology/birthPlace> ?result . ?result <http://dbpedia.org/ontology/country> ?v0 . },"```sparql
# Query to get the birth place of Slobodan Milošević
SELECT ?birthPlace WHERE {
  wd:Q3045 dbo:birthPlace ?birthPlace .
}

# Query to find a country in Central European Time near his birth place
SELECT DISTINCT ?country WHERE {
  ?place wdt:P421 wd:Q11173 . # P421 is the time zone property, Q11173 is Central European Time
  ?place wdt:P31/wdt:P279* wd:Q6256 . # P31 is instance of, Q6256 is country
  FILTER(?birthPlace = ?place) .
}

# Query to find the band associated with Dado Polumenta and its birth place
SELECT DISTINCT ?band ?bandBirthPlace WHERE {
  wd:Q1234567 dbo:associatedBand ?band . # Replace Q1234567 with Dado Polumenta's DBpedia ID
  ?band dbo:birthPlace ?bandBirthPlace .
}

# Query to find a country in the region of the band's birth place
SELECT DISTINCT ?country WHERE {
  ?place wdt:P31/wdt:P279* wd:Q6256 . # P31 is instance of, Q6256 is country
  FILTER(?bandBirthPlace = ?place) .
}
```

Note: Replace `wd:Q1234567` with the actual DBpedia ID for Dado Polumenta.",6,10,7,3,3,3,3,71,0,0,1,0,0.0,0
865,45,val,Give me the father of AK Abdul Momen and father of the child of the father of Abul Maal Abdul Muhith and native of British Raj.,SELECT ?result WHERE { <http://dbpedia.org/resource/AK_Abdul_Momen> <http://dbpedia.org/property/father> ?result . ?v1 <http://dbpedia.org/property/father> ?v4 . ?v1 <http://dbpedia.org/property/father> ?result . ?result <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/British_Raj> . <http://dbpedia.org/resource/Abul_Maal_Abdul_Muhith> <http://dbpedia.org/property/father> ?v4 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?father WHERE {
  # Part 1: Father of AK Abdul Momen
  OPTIONAL { 
    dbr:AK_Abdul_Momen dbo:father ?father1 .
  }

  # Part 2: Nested relationship for Abul Maal Abdul Muhith
  OPTIONAL {
    dbr:Abul_Maal_Abdul_Muhith dbo:father ?fatherOfMuhith .
    ?child dbo:parent ?fatherOfMuhith ;
           dbo:parent ?father2 .
  }

  # Ensure the father is common in both parts and a native of British Raj
  FILTER (?father1 = ?father2)
  OPTIONAL {
    ?father dbo:nativePlace dbr:British_Raj .
  }
}
```",5,5,6,3,3,3,3,71,0,0,1,0,0.0,0
926,42,val,"Give me the child of the father, that is a royalty, of Mustafa III and father of the father of Abdulaziz and successor of Mustafa III.",SELECT ?result WHERE { <http://dbpedia.org/resource/Mustafa_III> <http://dbpedia.org/ontology/successor> ?result . ?v0 <http://dbpedia.org/ontology/child> ?result . <http://dbpedia.org/resource/Mustafa_III> <http://dbpedia.org/property/father> ?v0 . ?v1 <http://dbpedia.org/property/father> ?result . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. <http://dbpedia.org/resource/Abdulaziz> <http://dbpedia.org/property/father> ?v1 . },"```sparql
SELECT ?person WHERE {
  ?mustafa3 rdf:type dbo:Sultan .
  ?mustafa3 foaf:name ""Mustafa III""@en .
  
  ?selim3 dbo:successorOf ?mustafa3 ;
          rdf:type dbo:Sultan ;
          foaf:name ""Selim III""@en .

  ?abdulaziz dbo:grandfather ?abdulrahman ;
             foaf:name ""Abdulaziz Ibn Saud""@en .
  
  ?abdulrahman dbo:father ?faisal ;
               foaf:name ""Abdul Rahman bin Faisal Al Saud""@en .

  ?faisal dbo:sonOf ?selim3 .
}
```",5,6,6,2,3,3,3,71,0,0,1,0,0.0,0
456,54,val,"Give me the professional in the alter ego of the reference, that is a fictional character, to Lamont Cranston (radio, film and television) and spouse of the actor of Pacific Drive and band of Alan Doyle.","SELECT ?result WHERE { ?v3 <http://dbpedia.org/ontology/spouse> ?result . <http://dbpedia.org/resource/Alan_Doyle> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v0 <http://dbpedia.org/property/alterEgo> ?v5 . ?result <http://dbpedia.org/property/occupation> ?v5 . ?v0 <http://xmlns.com/foaf/0.1/name> ""Lamont Cranston (radio, film and television)""@en . <http://dbpedia.org/resource/Pacific_Drive> <http://dbpedia.org/property/starring> ?v3 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/FictionalCharacter>. }","```sparql
# Query for Lamont Cranston (The Shadow)
SELECT ?character WHERE {
  ?character rdfs:label ""Lamont Cranston""@en .
  FILTER(CONTAINS(LCASE(?character), ""the shadow""))
}

# Query for Hilary Swank, spouse of David Charvet
SELECT ?spouse WHERE {
  ?actor dbo:spouse ?spouse ;
         foaf:name ""David Charvet""@en .
  ?spouse foaf:name ""Hilary Swank""@en .
}

# Query for Alan Doyle and the band Great Big Sea
SELECT ?bandMember, ?band WHERE {
  ?bandMember dbo:memberOfBand ?band ;
              foaf:name ""Alan Doyle""@en .
  ?band rdfs:label ""Great Big Sea""@en .
}
```",6,7,7,3,3,3,3,71,0,0,1,0,0.0,0
933,46,val,"Give me the reference to the birth name of Alan Warner (musician) and band of the band of the band, that is an artist and a musical artist, of The Ramong Sound.",SELECT ?result WHERE { ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. <http://dbpedia.org/resource/Alan_Warner_(musician)> <http://dbpedia.org/property/birthName> ?v3 . <http://dbpedia.org/resource/The_Ramong_Sound> <http://dbpedia.org/ontology/associatedMusicalArtist> ?v2 . ?result <http://xmlns.com/foaf/0.1/name> ?v3 . ?v2 <http://dbpedia.org/ontology/associatedMusicalArtist> ?v0 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?v0 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . },"```sparql
PREFIX foaf: <http://xmlns.com/foaf/0.1/>
PREFIX dbp: <http://dbpedia.org/property/>
PREFIX dbo: <http://dbpedia.org/ontology/>

SELECT ?birthName ?band WHERE {
  ?musician foaf:name ""Alan Warner"" .
  ?musician foaf:givenName ?birthName .
  
  ?musician dbp:bandMember ?band .
  
  ?band dbo:genre ?genre .
  FILTER(CONTAINS(LCASE(?genre), ""ramones sound""))
}
```",5,7,6,3,2,3,3,71,0,0,1,0,0.0,0
791,42,val,"Give me the predecessor of Emperor Antoku and father of the child, that is a royalty, of Emperor Takakura and spouse of the spouse, that is a royalty, of Emperor Takakura.",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/successor> <http://dbpedia.org/resource/Emperor_Antoku> . ?v1 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Emperor_Takakura> . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v1 <http://dbpedia.org/property/father> ?result . ?v2 <http://dbpedia.org/ontology/spouse> <http://dbpedia.org/resource/Emperor_Takakura> . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?result <http://dbpedia.org/ontology/spouse> ?v2 . },"```sparql
# Step 1: Find Emperor Antoku's predecessor
SELECT ?predecessor WHERE {
  wd:Q123456 wdt:P39 wd:Q123457 . # Emperor Antoku (replace with actual QID)
  wd:Q123457 wdt:P1367 ?predecessor .
}

UNION

# Step 2: Find a royal child of Emperor Takakura
SELECT DISTINCT ?child WHERE {
  wd:Q234567 wdt:P39 wd:Q345678 . # Emperor Takakura (replace with actual QID)
  ?child wdt:P40 wd:Q234567 .
  ?child wdt:P31 wd:Q5 . # Ensure the child is a human
}

UNION

# Step 3: Find the spouse of this royal child
SELECT DISTINCT ?spouse WHERE {
  ?child wdt:P26 ?spouse .
  ?spouse wdt:P31 wd:Q5 . # Ensure the spouse is a human
}

UNION

# Step 4: Find Emperor Takakura's spouse who is royalty
SELECT DISTINCT ?empress WHERE {
  wd:Q234567 wdt:P26 ?empress .
  ?empress wdt:P31 wd:Q5 . # Ensure the empress is a human
}
```

Note: Replace `wd:Q123456`, `wd:Q123457`, `wd:Q234567`, and `wd:Q345678` with the actual QIDs for Emperor Antoku, his predecessor, Emperor Takakura, and any relevant individuals respectively. The queries are structured to find the necessary relationships and ensure all individuals involved are identified as royalty where specified.",5,7,6,2,3,3,3,71,0,0,1,0,0.0,0
606,16,val,"Give me the birthplace of the alumnus of University of Pennsylvania and figure known as the nickname of DeKalb, Illinois.","SELECT ?result WHERE { ?result <http://dbpedia.org/property/nickname> ?v2 . ?v3 <http://dbpedia.org/ontology/birthPlace> ?result . ?v3 <http://dbpedia.org/ontology/almaMater> <http://dbpedia.org/resource/University_of_Pennsylvania> . <http://dbpedia.org/resource/DeKalb,_Illinois> <http://dbpedia.org/property/nickname> ?v2 . }","```sparql
SELECT ?birthPlace WHERE {
  ?person dbo:almaMater dbr_University_of_Pennsylvania ;
          foaf:name ""Ronald Reagan""@en .
  OPTIONAL { 
    ?event dbo:location dbr_DeKalb,_Illinois ;
           dbo:agent ?person .
  }
  ?person dbo:birthPlace ?birthPlace .
}
```",4,4,5,2,2,3,2,20,0,0,1,0,0.0,0
216,52,val,"Give me the player in the coach of the reference, that is an organisation and a soccer club, to Croatia U21 and player in the coach, that is a soccer player and a sports manager and a soccer manager, of Bosnia and Herzegovina national under-18 football team and team of Ognjen Vukojević.","SELECT ?result WHERE { ?v3 <http://xmlns.com/foaf/0.1/name> ""Croatia U21""@en . ?result <http://dbpedia.org/ontology/coach> <http://dbpedia.org/resource/Ognjen_Vukojević> . ?v2 <http://dbpedia.org/ontology/team> ?result . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsManager>. ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerManager>. ?v3 <http://dbpedia.org/ontology/coach> ?v2 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerClub>. ?v5 <http://dbpedia.org/ontology/team> ?result . <http://dbpedia.org/resource/Bosnia_and_Herzegovina_national_under-18_football_team> <http://dbpedia.org/ontology/coach> ?v5 . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerPlayer>. }","```sparql
# Query for the first individual (coach of Croatia U21 who is an organization/soccer club)
SELECT ?coach WHERE {
  ?team dcterms:isPartOf dbc:Croatia_national_under-21_football_team ;
        dbo:headCoach ?coach .
  ?coach a dbo:SoccerClub .
}

# Query for the second individual (player in coach of Bosnia and Herzegovina U18, also player/sports manager/manager, team of Ognjen Vukojević)
SELECT DISTINCT ?individual WHERE {
  # Find coaches of Bosnia and Herzegovina U18
  ?team dbo:coach ?coach .
  FILTER(STRSTARTS(LCASE(?team), ""bosnia_and_herzegovina_national_under-18_football_team""))

  # Ensure the coach is also a player, sports manager, and soccer manager
  ?individual rdf:type dbo:SoccerPlayer ;
              rdf:type dbo:SportsManager ;
              rdf:type dbo:SoccerManager .

  # Find connection to Ognjen Vukojević's team
  ?team2 dbo:coach ?individual .
  ?vukojevic dbo:birthName ""Ognjen Vukojević""^^xsd:string .
  ?team2 dcterms:isPartOf ?vukojevic .

  # Ensure the individual is part of the coaching staff for Bosnia and Herzegovina U18
  ?coach foaf:name ?individualName .
}
```",6,11,7,3,3,3,3,71,0,0,1,0,0.0,0
888,15,val,"Give me the commander in the force, that is a societal event and an event, of the military force of War in Donbas (2014–2022) and awardee of Hero of Ukraine.","SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/commander> ?result . ?result <http://dbpedia.org/property/awards> ""Hero of Ukraine""@en . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?v1 <http://dbpedia.org/ontology/commander> ?v0 . ?v0 <http://dbpedia.org/ontology/battle> <http://dbpedia.org/resource/War_in_Donbas_(2014–2022)> . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?commander ?name WHERE {
  ?event dbo:type dbr:Military_conflict .
  ?event dbo:name ""War in Donbas (2014–2022)""@en .
  
  ?commander dbo:role ""Commander""@en ;
             dbo:awardReceived dbr:Hero_of_Ukraine .

  ?commander rdfs:label ?name .
  FILTER(LANG(?name) = 'uk' || LANG(?name) = 'en')
}
```",4,6,5,3,2,3,2,20,0,0,2,0,0.0,0
507,51,val,"Give me the director of the movie, that is a movie and a work, with Beryl Reid and professional in the profession of the person born on 1966-02-18.","SELECT ?result WHERE { ?v4 <http://dbpedia.org/ontology/director> ?result . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Film>. ?v1 <http://dbpedia.org/ontology/birthDate> ""1966-02-18""^^<http://www.w3.org/2001/XMLSchema#date> . ?v1 <http://dbpedia.org/property/occupation> ?v2 . ?v4 <http://dbpedia.org/property/starring> <http://dbpedia.org/resource/Beryl_Reid> . ?result <http://dbpedia.org/property/occupation> ?v2 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT DISTINCT ?director WHERE {
  # Step 1: Identify the person born on 1966-02-18
  ?person a dbo:Person ;
          dbo:birthDate ""1966-02-18""^^xsd:date .

  # Step 2: Determine their profession
  ?person dbo:profession ?profession .

  # Step 3: Find movies featuring Beryl Reid
  ?movie dbo:starring dbr:Beryl_Reid ;
         a dbo:Film, dbo:Work .

  # Step 4: Identify the director of such a movie
  ?movie dbo:director ?director .

  # Optional: Ensure the profession is involved in the movie (if needed)
  OPTIONAL {
    ?movie dbo:starring ?actor .
    ?actor dbo:profession ?profession .
  }
}
```",5,7,6,3,2,3,3,71,0,0,2,0,0.0,0
47,40,val,"Give me the office of Bidesh Ranjan Bose and office of the administration of the commander, that is a politician, in Operation Green Hunt and office of Ajoy Mukherjee.",SELECT ?result WHERE { ?v1 <http://dbpedia.org/property/governor> ?v2 . ?v1 <http://dbpedia.org/property/office> ?result . <http://dbpedia.org/resource/Ajoy_Mukherjee> <http://dbpedia.org/property/office> ?result . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. <http://dbpedia.org/resource/Operation_Green_Hunt> <http://dbpedia.org/ontology/commander> ?v2 . <http://dbpedia.org/resource/Bidesh_Ranjan_Bose> <http://dbpedia.org/property/office> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?bideshRanjanBoseOffice ?commanderOffice ?ajoyMukherjeeOffice WHERE {
  # Bidesh Ranjan Bose's office or role in Operation Green Hunt
  OPTIONAL { 
    dbr:Bidesh_Ranjan_Bose dbo:occupation ?bideshRanjanBoseOffice .
  }

  # Commander in Operation Green Hunt (assuming a politician)
  OPTIONAL {
    ?commander dbo:occupation ?commanderRole .
    FILTER(CONTAINS(LCASE(?commanderRole), ""politician"") && CONTAINS(LCASE(?commanderDescription), ""operation green hunt""))
    ?commander dbo:office ?commanderOffice .
  }

  # Ajoy Mukherjee's office
  OPTIONAL {
    dbr:Ajoy_Mukherjee dbo:occupation ?ajoyMukherjeeOccupation .
    ?ajoyMukherjeeOccupation dbo:office ?ajoyMukherjeeOffice .
  }
}
```",5,6,6,3,3,3,3,71,0,0,1,0,0.0,0
933,47,val,Give me the band of the band of Alan Warner (musician) and reference to the birth name of the professional in Musician.,SELECT ?result WHERE { ?v0 <http://dbpedia.org/property/occupation> <http://dbpedia.org/resource/Musician> . ?v0 <http://dbpedia.org/property/birthName> ?v3 . ?v1 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?result <http://xmlns.com/foaf/0.1/name> ?v3 . <http://dbpedia.org/resource/Alan_Warner_(musician)> <http://dbpedia.org/ontology/associatedMusicalArtist> ?v1 . },"```sparql
# Query to find the band associated with Alan Warner
SELECT ?band WHERE {
  ?person dbo:birthName ""Alan Warner""@en .
  ?person dbo:associatedBand ?band .
}

# Query to find the birth name or alias of Alan Warner
SELECT DISTINCT ?alias WHERE {
  ?person a dbo:Musician ;
          foaf:name ""Alan Warner""@en ;
          foaf:givenName ?alias .
}
```",5,5,6,3,2,3,3,71,0,0,1,0,0.0,0
98,20,val,Give me the region of Philippine Standard Time and entity in Philippines and birth place of the person born as Paolo Elito M. Ballesteros IV.,"SELECT ?result WHERE { ?v1 <http://dbpedia.org/property/birthName> ""Paolo Elito M. Ballesteros IV""@en . ?v1 <http://dbpedia.org/ontology/birthPlace> ?result . ?result <http://dbpedia.org/ontology/timeZone> <http://dbpedia.org/resource/Philippine_Standard_Time> . ?result <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Philippines> . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?region ?entity ?birthPlace WHERE {
  # Region for Philippine Standard Time
  OPTIONAL {
    ?timeZone a dbo:TimeZone ;
              rdfs:label ""Philippine Standard Time""@en .
    ?region dbo:timezone ?timeZone .
    FILTER(CONTAINS(LCASE(?region), ""philippines""))
  }

  # Entity in the Philippines (example: Manila)
  OPTIONAL {
    ?entity a dbo:Place ;
            dbo:country dbr:Philippines .
    FILTER(CONTAINS(LCASE(STR(?entity)), ""manila"")) # Example entity
  }

  # Birthplace of Paolo Elito M. Ballesteros IV
  OPTIONAL {
    ?person dbo:birthPlace ?birthPlace ;
            rdfs:label ""Paolo Elito M. Ballesteros IV""@en .
  }
}
```",4,4,5,2,3,2,3,28,0,18,2,0.0,0.0,0
281,19,val,"Give me the awardee of Medal bar and awardee of Volunteer Decoration and commander in the war, that is an event and a military conflict, of Roy Boehm.",SELECT ?result WHERE { <http://dbpedia.org/resource/Roy_Boehm> <http://dbpedia.org/ontology/battle> ?v2 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v2 <http://dbpedia.org/ontology/commander> ?result . ?result <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/Volunteer_Decoration> . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?result <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/Medal_bar> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?medalBar ?volunteerDecoration ?warCommanded WHERE {
  VALUES ?person { dbr:Roy_Boehm }
  
  OPTIONAL {
    ?person dbo:award ?medalBar .
    FILTER (strstarts(str(?medalBar), ""Medal Bar""))
  }

  OPTIONAL {
    ?person dbo:award ?volunteerDecoration .
    FILTER (strstarts(str(?volunteerDecoration), ""Volunteer Decoration""))
  }
  
  OPTIONAL {
    ?person dbo:militaryConflict ?warCommanded .
    FILTER (isLiteral(?warCommanded))
  }
}
```",4,6,5,2,3,2,3,28,0,0,1,0,0.0,0
582,48,val,"Give me the figure known as the nickname of Japan national football team and reference to the residence of the reference, that is a scientist, to Hirotaka Sugawara.","SELECT ?result WHERE { ?result <http://xmlns.com/foaf/0.1/name> ?v2 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Scientist>. ?result <http://dbpedia.org/property/nickname> ?v1 . ?v3 <http://dbpedia.org/property/residence> ?v2 . ?v3 <http://xmlns.com/foaf/0.1/name> ""Hirotaka Sugawara""@en . <http://dbpedia.org/resource/Japan_national_football_team> <http://dbpedia.org/property/nickname> ?v1 . }","```sparql
# Query to get the nickname of the Japan national football team
SELECT ?nickname WHERE {
  dbpedia:Japan_national_football_team rdfs:label ?nickname .
  FILTER (lang(?nickname) = 'en')
}

# Query to find a scientist residing in the same place as Hirotaka Sugawara
SELECT DISTINCT ?scientist ?residence WHERE {
  # Find residence of Hirotaka Sugawara
  dbpedia:Hirotaka_Sugawara dbo:birthPlace ?residence .
  
  # Find scientists with the same residence
  ?scientist a dbo:Scientist ;
             dbo:birthPlace ?residence .
}
```",5,6,6,3,2,3,3,71,0,0,1,0,0.0,0
715,44,val,"Give me the commander in the force of Francisco Largo Caballero and commander in Rif War and leader of the office, that is a government agency and an organisation, of Carlos Franco Iribarnegaray.",SELECT ?result WHERE { ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/GovernmentAgency>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?v4 <http://dbpedia.org/ontology/commander> ?result . ?v4 <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Francisco_Largo_Caballero> . <http://dbpedia.org/resource/Rif_War> <http://dbpedia.org/ontology/commander> ?result . ?v2 <http://dbpedia.org/ontology/leader> ?result . <http://dbpedia.org/resource/Carlos_Franco_Iribarnegaray> <http://dbpedia.org/property/office> ?v2 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?person WHERE {
  # Francisco Largo Caballero's Prime Ministership period
  ?primeMinistership dbo:startDate ?startPrime;
                    dbo:endDate ?endPrime;
                    dbo:officeHolder dbr:Franco_Largo_Caballero.
  
  # Miguel Primo de Rivera as a commander during the Rif War
  ?rifWar dbo:commander ?person;
          dbo:place ?location.

  # Check if person was involved in the Rif War and under Largo Caballero's period
  FILTER (?startPrime <= ?rifWarStartDate && ?endPrime >= ?rifWarEndDate)

  # Carlos Franco Iribarnegaray's leadership role
  ?office dbo:leader ?person;
          dbo:officeHolder dbr:Carlos_Franco_Iribarnegaray.

  # Ensure the person is Miguel Primo de Rivera
  FILTER (?person = dbr:Miguel_Prime_de_Rivera)
}
```",5,7,6,2,3,3,3,71,0,0,1,0,0.0,0
433,55,val,"Give me the associated musical artist of the associated musical artist, that is an artist and a musical artist, of Scott LaFaro and professional in the profession of Bob Marley and associated musical artist of the person born, that is a musical artist and an artist, as Paul Laurence Dunbar Chambers Jr..","SELECT ?result WHERE { ?v5 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?v3 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. ?v3 <http://dbpedia.org/property/birthName> ""Paul Laurence Dunbar Chambers Jr.""@en . <http://dbpedia.org/resource/Scott_LaFaro> <http://dbpedia.org/ontology/associatedMusicalArtist> ?v5 . <http://dbpedia.org/resource/Bob_Marley> <http://dbpedia.org/property/occupation> ?v2 . ?result <http://dbpedia.org/property/occupation> ?v2 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. }","```sparql
# Step 1: Identify Scott LaFaro's associated musical artist who is also an artist
SELECT ?artist WHERE {
  wd:Q123456 wdt:P106 wd:Q1028181; # Scott LaFaro's occupation as a musician
  wdt:P175 ?associatedArtist.     # Associated with another artist
  ?associatedArtist wdt:P106 wd:Q33999 . # The associated artist is also an artist (in the broader sense)
}

# Step 2: Identify Bob Marley's profession and find another professional in that field
SELECT ?professional WHERE {
  wd:Q777 wdt:P106 wd:Q1028181;    # Bob Marley's occupation as a musician
  ?professional wdt:P106 wd:Q1028181 . # Another musician or singer-songwriter
}

# Step 3: Identify Paul Laurence Dunbar Chambers Jr.'s birthplace and find someone from there who is both a musical artist and an artist
SELECT ?person WHERE {
  wd:Q1234567 wdt:P19 wd:Q12345;    # Paul Laurence Dunbar Chambers Jr. was born in Pittsburgh, PA (WD item for Pittsburgh)
  ?person wdt:P19 wd:Q12345;        # Person also from Pittsburgh
  ?person wdt:P106 wd:Q1028181;     # The person is a musician
  ?person wdt:P106 wd:Q33999 .      # The person is also an artist (in the broader sense)
}
```",6,10,7,2,3,3,3,71,0,0,1,0,0.0,0
93,17,val,"Give me the capital of Alaska and death place of the governor of the native, that is a politician, of Seattle.",SELECT ?result WHERE { ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. <http://dbpedia.org/resource/Alaska> <http://dbpedia.org/ontology/capital> ?result . ?v3 <http://dbpedia.org/ontology/deathPlace> ?result . ?v0 <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Seattle> . ?v0 <http://dbpedia.org/property/governor> ?v3 . },"```sparql
# Query 1: Capital of Alaska
SELECT ?capital WHERE {
  wd:Q1343 dbo:capital ?capital .
}

# Query 2: Death Place of Gary Locke (as an example of a notable politician from Seattle)
SELECT ?deathPlace WHERE {
  wd:Q210698 dbo:birthPlace wd:Q1204 . # Assuming Q1204 is the DBpedia item for Seattle
  wd:Q210698 dbo:deathPlace ?deathPlace .
}
```",4,5,5,3,2,3,2,20,0,0,1,0,0.0,0
645,54,val,"Give me the leader of Ministry of the Army (Spain) and military force of the force, that is an event and a military conflict and a societal event, of the native, that is a president and a politician, of Restoration (Spain) and commander in the force of Carlos Asensio Cabanillas.",SELECT ?result WHERE { ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. <http://dbpedia.org/resource/Ministry_of_the_Army_(Spain)> <http://dbpedia.org/ontology/leader> ?result . ?v3 <http://dbpedia.org/ontology/commander> ?result . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?v5 <http://dbpedia.org/ontology/commander> ?v0 . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/President>. ?v3 <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Carlos_Asensio_Cabanillas> . ?v0 <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Restoration_(Spain)> . ?result <http://dbpedia.org/ontology/battle> ?v5 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?leader ?militaryForce ?event WHERE {
  # Identify Antonio Maura as a politician and president during the Restoration period
  ?maura dbo:nationality dbr:Spain ;
         dbo:occupation dbr:Politician ;
         dbo:officeHeld dbr:Prime_Minister_of_Spain .

  # Link to an event that is both a military conflict and societal event
  ?event dbo:type dbr:Military_conflict ;
         dbo:location dbr:Morocco ;  # Rif War location
         dbo:participatedIn ?militaryForce .

  # Identify the leader of the Ministry of the Army during this period
  ?leader dbo:nationality dbr:Spain ;
          dbo:occupation dbr:Military_officer ;
          dbo:officeHeld dbr:Ministry_of_the_Army_(Spain) ;
          dbo:commanderOf ?militaryForce .

  # Link Carlos Asensio Cabanillas to the military force
  dbr:Caballero_de_la_Orden_Militar_de_San_Hermenegildo dbo:commander ?leader .
}
```",6,11,7,3,3,3,3,71,0,0,1,0,0.0,0
645,49,val,"Give me the leader of the office, that is a government agency and an organisation, of the native of Restoration (Spain) and commander in the force of Carlos Asensio Cabanillas.",SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?v0 <http://dbpedia.org/property/office> ?v1 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/GovernmentAgency>. ?v2 <http://dbpedia.org/ontology/commander> ?result . ?v1 <http://dbpedia.org/ontology/leader> ?result . ?v0 <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Restoration_(Spain)> . ?v2 <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Carlos_Asensio_Cabanillas> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?leader WHERE {
  # Find Carlos Asensio Cabanillas and his nationality
  ?person a dbo:MilitaryPerson ;
          foaf:name ""Carlos Asensio Cabanillas"" ;
          dbo:nationality dbr:Spain .

  # Identify the military force he commanded
  ?person dbo:militaryCommanderOf ?force .

  # Find the government agency or organization associated with this force
  ?force dbo:partOf ?organization .
  
  # Ensure it's a government agency/organization
  ?organization rdf:type dbo:GovernmentAgency ;
                dbo:head ?leader .
}
```",5,7,6,3,2,3,3,71,0,0,3,0,0.0,0
645,50,val,"Give me the leader of the office, that is a government agency and an organisation, of Camilo Menéndez Tolosa and military force of the force, that is an event and a military conflict and a societal event, of the native, that is a president and a politician, of Restoration (Spain).",SELECT ?result WHERE { ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. <http://dbpedia.org/resource/Camilo_Menéndez_Tolosa> <http://dbpedia.org/property/office> ?v3 . ?v0 <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Restoration_(Spain)> . ?v3 <http://dbpedia.org/ontology/leader> ?result . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/President>. ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/GovernmentAgency>. ?v4 <http://dbpedia.org/ontology/commander> ?v0 . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?result <http://dbpedia.org/ontology/battle> ?v4 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?leader WHERE {
  # Find Camilo Menéndez Tolosa and his role
  ?person rdfs:label ""Camilo Menéndez Tolosa""@en .
  ?person dbo:office ?office .

  # Ensure the office is a government agency and organization
  ?office rdf:type dbo:GovernmentAgency ;
          rdf:type dbo:Organization .

  # Find the military force related to an event and conflict
  ?event rdfs:label ?eventName .
  ?event rdf:type dbo:MilitaryConflict ;
         rdf:type dbo:SocietalEvent .
  
  ?force rdfs:label ""Military Force""@en .
  ?force dbo:participatedIn ?event .

  # Find the native leader during the Restoration period
  ?native rdfs:label ?nativeName .
  ?native dbo:nationality dbr:Spain ;
          dbo:office ?presidencyOffice .
  
  ?presidencyOffice rdf:type dbo:GovernmentAgency ;
                    rdf:type dbo:Organization .

  ?restorationPeriod rdfs:label ""Restoration (Spain)""@en .
  ?native dbo:termStart ?startTerm .
  ?native dbo:termEnd ?endTerm .
  FILTER (?startTerm <= ?restorationPeriod && ?endTerm >= ?restorationPeriod)

  # Connect the elements
  ?office dbo:leader ?leader .
}
```",5,12,6,3,2,3,3,71,0,0,1,0,0.0,0
933,41,val,Give me the reference to the birth name of Alan Warner (musician) and band of the band of Alan Warner (musician) and band of The Ramong Sound.,SELECT ?result WHERE { ?result <http://xmlns.com/foaf/0.1/name> ?v4 . ?v2 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . <http://dbpedia.org/resource/Alan_Warner_(musician)> <http://dbpedia.org/property/birthName> ?v4 . <http://dbpedia.org/resource/The_Ramong_Sound> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . <http://dbpedia.org/resource/Alan_Warner_(musician)> <http://dbpedia.org/ontology/associatedMusicalArtist> ?v2 . },"```sparql
# Query for Alan Warner's birth name and associated band
SELECT ?birthName ?band WHERE {
  ?person foaf:name ""Alan Warner (musician)"" .
  ?person foaf:givenName ?birthName .
  ?person dbo:bandMember ?band .
}

# Query for The Ramong Sound band members
SELECT ?member WHERE {
  dbpedia:The_Ramones_sound _:bnode .
  _:bnode rdf:type dbo:Band .
  _:bnode dbo:member ?member .
}
```",5,5,6,2,3,3,3,71,0,0,1,0,0.0,0
5,16,val,"Give me the entity in the award of Coro de la Pontificia Universidad Católica de Puerto Rico and birthplace of the person born, that is a politician, as .","SELECT ?result WHERE { <http://dbpedia.org/resource/Coro_de_la_Pontificia_Universidad_Católica_de_Puerto_Rico> <http://dbpedia.org/property/awards> ?v0 . ?v2 <http://dbpedia.org/property/birthName> """"@en . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v2 <http://dbpedia.org/ontology/birthPlace> ?result . ?result <http://dbpedia.org/ontology/country> ?v0 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?person ?birthPlace WHERE {
  ?person a dbo:Politician ;
          dbo:honoraryAward dbr:Coro_de_la_Pontificia_Universidad_Católica_de_Puerto_Rico .
  OPTIONAL { ?person dbo:birthPlace ?birthPlace }
}
```",4,5,5,2,2,3,2,20,0,0,2,0,0.0,0
129,22,val,"Give me the professional in the mayor of 1999 West Dunbartonshire Council election and associated musical artist of the actor, that is an organisation, of Dreamville Presents: Revenge.",SELECT ?result WHERE { <http://dbpedia.org/resource/1999_West_Dunbartonshire_Council_election> <http://dbpedia.org/property/leader> ?v2 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. <http://dbpedia.org/resource/Dreamville_Presents:_Revenge> <http://dbpedia.org/property/starring> ?v3 . ?result <http://dbpedia.org/property/occupation> ?v2 . ?v3 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . },"```sparql
# Step 1: Find the Mayor of West Dunbartonshire Council in 1999
SELECT ?mayor WHERE {
  ?election dbo:electionDate ?date .
  ?election dbo:officeHolder ?mayor .
  ?mayor rdfs:label ""West Dunbartonshire Council""@en .
  FILTER(YEAR(?date) = 1999)
}

# Step 2: Find an actor associated with ""Dreamville Presents: Revenge""
SELECT ?actor WHERE {
  ?event dbo:title ""Dreamville Presents: Revenge""@en ;
         dbo:performer ?actor .
  ?actor rdf:type dbo:Actor .
}

# Step 3: Find a musical artist associated with the actor, who is also an organization
SELECT DISTINCT ?artist WHERE {
  ?actor dbo:associatedMusicalArtist ?artist .
  ?artist rdf:type dbo:Organization .
}
```

Note: This query assumes that DBpedia has structured data for these specific events and associations. The actual availability of such detailed information may vary.",4,5,5,2,2,2,3,28,0,0,3,0,0.0,0
465,50,val,"Give me the successor of the child, that is a royalty, of Anne of Brittany and spouse of the child, that is a royalty, of the parent of Elizabeth of Austria (1526–1545).",SELECT ?result WHERE { <http://dbpedia.org/resource/Anne_of_Brittany> <http://dbpedia.org/ontology/child> ?v3 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v0 <http://dbpedia.org/ontology/child> ?v4 . ?v0 <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Elizabeth_of_Austria_(1526–1545)> . ?v3 <http://dbpedia.org/ontology/successor> ?result . ?result <http://dbpedia.org/ontology/spouse> ?v4 . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. },"```sparql
# Step 1: Find Anne of Brittany's child who is royalty and their spouse
SELECT ?child ?spouse WHERE {
  wd:Q1198 wdt:P31/wdt:P279* wd:Q5; # Anne of Brittany, person
    wdt:P40 ?child. # has child
  ?child wdt:P31/wdt:P279* wd:Q5; # the child is a person (royalty)
    wdt:P26 ?spouse. # spouse of the child
}

# Step 2: Find Elizabeth of Austria's parent who is royalty and their royal child
SELECT ?parent ?royalChild WHERE {
  wd:Q1199 wdt:P31/wdt:P279* wd:Q5; # Elizabeth of Austria, person
    wdt:P22 ?parent. # parent
  ?parent wdt:P31/wdt:P279* wd:Q5; # the parent is a person (royalty)
    wdt:P40 ?royalChild. # has child who is royalty
}

# Step 3: Find the successor of Francis I
SELECT ?successor WHERE {
  wd:Q1197 wdt:P57 ?successor. # Francis I, succeeded by
}
```",5,7,6,3,2,3,3,71,0,0,1,0,0.0,0
353,7,val,"Give me the alma mater of the awardee of Medal of the Order ""For Merit to the Fatherland"" and entity in Russia.",SELECT ?result WHERE { ?v2 <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/Medal_of_the_Order_%22For_Merit_to_the_Fatherland%22> . ?result <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Russia> . ?v2 <http://dbpedia.org/ontology/almaMater> ?result . },"```sparql
SELECT ?university WHERE {
  wd:Q1599 dbo:almaMater ?university .
}
```",3,3,4,2,2,2,2,9,0,0,5,0,0.0,0
874,15,val,"Give me the band of Robert Hart (musician) and band of the writer, that is an artist and a musical artist, of the work, that is a work, of Horace Andy.",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/bandMember> <http://dbpedia.org/resource/Robert_Hart_(musician)> . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. ?result <http://dbpedia.org/ontology/bandMember> ?v1 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?v0 <http://dbpedia.org/property/writer> <http://dbpedia.org/resource/Horace_Andy> . ?v0 <http://dbpedia.org/property/writer> ?v1 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?band ?writer WHERE {
  # Step 1: Find Robert Hart's band
  dbr:Robert_Hart_(musician) dbo:memberOf ?band .

  # Step 2: Find works by Horace Andy that involve another artist
  ?work dbo:artist dbr:Horace_Andy ;
        dbo:contributor ?writer .

  # Ensure the writer is both an artist and a musical artist
  ?writer rdf:type dbo:Artist, dbo:MusicalArtist .
}
```",4,7,5,3,2,3,2,20,0,0,1,0,0.0,0
892,53,val,"Give me the entity in the profession of the true self of Enrico Crolla and entity in the administration, that is Italian and a region and a settlement and an administrative region, of Democratic Party (Italy) and landmark at elevation of 58.","SELECT ?result WHERE { ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. ?v0 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Italy>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Region>. ?v0 <http://dbpedia.org/property/leaderParty> <http://dbpedia.org/resource/Democratic_Party_(Italy)> . ?v3 <http://xmlns.com/foaf/0.1/givenName> ""Enrico Crolla""@en . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/AdministrativeRegion>. ?result <http://dbpedia.org/ontology/country> ?v1 . ?result <http://dbpedia.org/ontology/elevation> ""58""^^<http://www.w3.org/2001/XMLSchema#integer> . ?v3 <http://dbpedia.org/property/occupation> ?v1 . ?result <http://dbpedia.org/ontology/province> ?v0 . }","```sparql
# Query for Enrico Crolla's profession
SELECT ?profession WHERE {
  dbpedia:Enrico_Crolla dbo:occupation ?profession .
}

# Query for Italian region associated with Democratic Party (Italy) that is a settlement and administrative region
SELECT DISTINCT ?region WHERE {
  ?party rdf:type dbo:PoliticalParty ;
         foaf:name ""Democratic Party (Italy)""@en .
  ?region dbo:politicalParty ?party ;
          dbo:country dbr:Italy ;
          rdf:type dbo:Settlement, dbo:AdministrativeRegion .
}

# Query for landmark at elevation of 58 meters
SELECT ?landmark WHERE {
  ?landmark a dbo:Lighthouse ;
            dbo:elevation ""58""^^xsd:decimal .
}
```",6,10,7,3,3,3,3,71,0,0,2,0,0.0,0
865,44,val,"Give me the native of British Raj and father of the child of Abu Ahmad Abdul Hafiz and father of the child, that is a politician, of Abu Ahmad Abdul Hafiz.",SELECT ?result WHERE { ?v2 <http://dbpedia.org/property/father> ?result . ?result <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/British_Raj> . ?v2 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Abu_Ahmad_Abdul_Hafiz> . ?v3 <http://dbpedia.org/property/father> ?result . ?v3 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Abu_Ahmad_Abdul_Hafiz> . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. },"```sparql
SELECT ?person WHERE {
  ?person dbo:spouse dbr:Mithibai_Jinnah .
  ?person dbo:child dbr:Muhammad_Ali_Jinnah .
}
```",5,6,6,2,3,3,3,71,0,0,1,0,0.0,0
573,44,val,"Give me the parent of the author, that is a politician and an office holder, of Exchequer Standards and person decedent at the residence, that is a settlement, of William J. Phelan and person decedent at Massachusetts.",SELECT ?result WHERE { ?v2 <http://dbpedia.org/ontology/parent> ?result . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. <http://dbpedia.org/resource/William_J._Phelan> <http://dbpedia.org/property/residence> ?v4 . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?result <http://dbpedia.org/ontology/deathPlace> ?v4 . ?result <http://dbpedia.org/ontology/deathPlace> <http://dbpedia.org/resource/Massachusetts> . <http://dbpedia.org/resource/Exchequer_Standards> <http://dbpedia.org/property/author> ?v2 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?parent WHERE {
  # Step 1: Identify the author of ""Exchequer Standards""
  ?author dbo:work ?exchequerStandards .
  ?exchequerStandards rdfs:label ""Exchequer Standards""@en .

  # Step 2: Find the parent of this author
  ?parent dbo:child ?author .

  # Step 3: Check if the parent is a politician and an office holder
  ?parent rdf:type dbo:Politician .
  ?parent dbo:officeHolder ?office .

  # Step 4: Identify William J. Phelan's residence
  dbr:William_J._Phelan dbo:placeOfDeath ?residence .

  # Step 5: Find the person who died at this residence and in Massachusetts
  ?person dbo:placeOfDeath ?residence ;
          dbo:deathPlace dbp:country ""United States"" .
  
  FILTER (CONTAINS(LCASE(?residence), ""massachusetts""))
}
```",5,8,6,2,3,3,3,71,0,0,2,0,0.0,0
582,44,val,"Give me the figure known as the nickname of Japan national football team and player in the father, that is an athlete and a soccer manager and a sports manager, of Masami Nagasawa and reference to Japan.","SELECT ?result WHERE { <http://dbpedia.org/resource/Japan_national_football_team> <http://dbpedia.org/property/nickname> ?v2 . ?result <http://dbpedia.org/property/nickname> ?v2 . ?v4 <http://dbpedia.org/ontology/team> ?result . <http://dbpedia.org/resource/Masami_Nagasawa> <http://dbpedia.org/property/father> ?v4 . ?result <http://xmlns.com/foaf/0.1/name> ""Japan""@en . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Athlete>. ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerManager>. ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsManager>. }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?nickname ?player ?role1 ?role2 WHERE {
  # Find the nickname of Japan national football team
  dbr:Japan_national_football_team dbo:nickname ?nickname .
  
  # Identify Hidetoshi Nakata as a player and his roles
  dbr:Hidetoshi_Nakata dbo:spouse ?masamiNagasawa ;
                      a dbo:Athlete ;
                      dbo:sportRole ?role1 ;
                      dbo:occupation ?role2 .

  # Ensure the spouse is Masami Nagasawa
  ?masamiNagasawa rdfs:label ""Masami Nagasawa""@en .
  
  FILTER(?role1 IN (dbo:SoccerPlayer, dbo:SportsManager))
  FILTER(?role2 = dbo:SoccerCoach)
}
```",5,8,6,2,3,3,3,71,0,0,1,0,0.0,0
645,53,val,"Give me the military force of Spanish Civil War and leader of the office, that is a government agency and an organisation, of Camilo Menéndez Tolosa and commander in the force of the commander in Siege of Madrid.",SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/leader> ?result . ?v2 <http://dbpedia.org/ontology/commander> ?result . <http://dbpedia.org/resource/Camilo_Menéndez_Tolosa> <http://dbpedia.org/property/office> ?v1 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/GovernmentAgency>. ?result <http://dbpedia.org/ontology/battle> <http://dbpedia.org/resource/Spanish_Civil_War> . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?v2 <http://dbpedia.org/ontology/commander> ?v3 . <http://dbpedia.org/resource/Siege_of_Madrid> <http://dbpedia.org/ontology/commander> ?v3 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?militaryForce ?leaderOffice ?siegeCommander WHERE {
  # Identify military forces involved in the Spanish Civil War
  ?militaryForce dbo:partOfMilitaryConflict dbr:Spanish_Civil_War .

  # Find Camilo Menéndez Tolosa's leadership role
  OPTIONAL {
    ?office dbo:head dbr:Camilo_Menéndez_Tolosa ;
            a dbo:GovernmentAgency .
    ?leaderOffice rdfs:label ?officeLabel .
  }

  # Identify the commander during the Siege of Madrid
  ?siegeCommander dbo:commandedMilitaryForce ?militaryForceDuringSiege ;
                  dbo:participatedIn dbr:Siege_of_Madrid .

  # Linking military force to the siege and leadership roles
  OPTIONAL {
    ?militaryForceDuringSiege dbo:partOfMilitaryConflict dbr:Spanish_Civil_War .
  }
  
  FILTER (lang(?officeLabel) = 'en')
}
```",6,8,7,3,3,3,3,71,0,0,1,0,0.0,0
965,53,val,"Give me the spouse of the spouse of the parent of Louise Mountbatten and parent of the person born, that is a noble, as Prince George of Battenberg and parent of Louise Mountbatten.","SELECT ?result WHERE { ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Noble>. ?result <http://dbpedia.org/ontology/spouse> ?v1 . ?v3 <http://dbpedia.org/ontology/spouse> ?v1 . ?v0 <http://dbpedia.org/property/birthName> ""Prince George of Battenberg""@en . <http://dbpedia.org/resource/Louise_Mountbatten> <http://dbpedia.org/ontology/parent> ?result . ?v0 <http://dbpedia.org/ontology/parent> ?result . <http://dbpedia.org/resource/Louise_Mountbatten> <http://dbpedia.org/ontology/parent> ?v3 . }","```sparql
SELECT ?finalSpouse WHERE {
  # Step 1: Identify Louise Mountbatten's parent
  wd:Q123456 a dbo:Person ;
             foaf:sibling* wd:Q789012 . # Assuming Q789012 is Louise Mountbatten

  # Step 2: Find the spouse of that parent
  ?parentParent wdt:P26 ?spouseOfParent .

  # Step 3: Identify the child who was born as Prince George of Battenberg and is a noble
  ?child wdt:P25 ?spouseOfParent ;
         wdt:P31 wd:Q1234567 ; # Assuming Q1234567 represents nobility
         rdfs:label ""Prince George of Battenberg""@en .

  # Step 4: Find the parent of this noble person
  ?parentOfChild wdt:P25 ?child .

  # Step 5: Determine the spouse of that parent
  ?finalSpouse wdt:P26 ?parentOfChild .
}
```

Note: The placeholders `wd:Q123456`, `wd:Q789012`, and `wd:Q1234567` need to be replaced with the actual DBpedia identifiers for Louise Mountbatten, her parent, and the class representing nobility, respectively. These can be found using additional queries or by consulting a reliable source.",6,7,7,3,3,3,3,71,0,0,2,0,0.0,0
917,44,val,Give me the child of the father of Keʻelikōlani and parent of Albert Kamehameha and child of the father of Kamehameha IV.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Albert_Kamehameha> . <http://dbpedia.org/resource/Kamehameha_IV> <http://dbpedia.org/property/father> ?v0 . ?result <http://dbpedia.org/ontology/parent> ?v4 . <http://dbpedia.org/resource/Keʻelikōlani> <http://dbpedia.org/property/father> ?v4 . ?result <http://dbpedia.org/property/father> ?v0 . },"```sparql
SELECT ?person WHERE {
  # Find the father of Keʻelikōlani
  ?keelikolani dbo:parent dbc:Keelikolani;
              rdfs:label ""Keʻelikōlani""@en.
  ?father dbo:child ?keelikolani.

  # Find Albert Kamehameha's parent who is also a child of Keʻelikōlani's father
  ?albertKamehameha dbo:parent ?commonParent;
                    rdfs:label ""Albert Kamehameha""@en.
  ?commonParent dbo:child ?father.

  # Find the father of Kamehameha IV and check if the common parent is also his child
  ?kamehamehaIV dbo:parent ?kingKamehamehaI;
                rdfs:label ""Kamehameha IV""@en.
  ?kingKamehamehaI dbo:child ?commonParent.

  # Return the person who fits all criteria
  BIND(?commonParent AS ?person)
}
```",5,5,6,2,3,3,3,71,0,0,1,0,0.0,0
507,54,val,"Give me the professional in Film director, television director and spouse of the person born as Anne Voase Coates and director of the movie, that is a movie and a work, with the person born on 1919-06-17.","SELECT ?result WHERE { ?v5 <http://dbpedia.org/property/starring> ?v0 . ?v5 <http://dbpedia.org/ontology/director> ?result . ?v3 <http://dbpedia.org/property/birthName> ""Anne Voase Coates""@en . ?v0 <http://dbpedia.org/ontology/birthDate> ""1919-06-17""^^<http://www.w3.org/2001/XMLSchema#date> . ?result <http://dbpedia.org/property/occupation> ""Film director, television director""@en . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?result <http://dbpedia.org/ontology/spouse> ?v3 . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Film>. }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT ?spouse ?filmDirectorRole ?tvDirectorRole ?movie WHERE {
  # Find Anne Voase Coates
  ?anne a dbo:Person ;
        foaf:name ""Anne Voase Coates""@en ;
        dbo:birthday ""1919-06-17""^^xsd:date .

  # Find her spouse
  ?anne dbo:spouse ?spouse .

  # Check if the spouse is a film director or television director
  OPTIONAL { ?spouse dbo:occupation ?filmDirectorRole . FILTER(CONTAINS(LCASE(?filmDirectorRole), ""film director"")) }
  OPTIONAL { ?spouse dbo:occupation ?tvDirectorRole . FILTER(CONTAINS(LCASE(?tvDirectorRole), ""television director"")) }

  # Find movies directed by the spouse
  OPTIONAL {
    ?movie dbo:director ?spouse ;
           a dbo:Film .
  }
}
```",6,8,7,3,3,3,3,71,0,0,1,0,0.0,0
933,53,val,"Give me the band of the band of the band, that is an artist and a musical artist, of The Ramong Sound and reference to Alan Warner and band of the band, that is a group and a band and an organisation, of Alan Warner (musician).","SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. <http://dbpedia.org/resource/The_Ramong_Sound> <http://dbpedia.org/ontology/associatedMusicalArtist> ?v3 . <http://dbpedia.org/resource/Alan_Warner_(musician)> <http://dbpedia.org/ontology/associatedMusicalArtist> ?v0 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Band>. ?v0 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Group>. ?result <http://xmlns.com/foaf/0.1/name> ""Alan Warner""@en . ?v3 <http://dbpedia.org/ontology/associatedMusicalArtist> ?v1 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. }","```sparql
SELECT ?band WHERE {
  ?ramones dbo:genre dbr:Punk_rock .
  ?influence dbo:influencedBy ?ramones ;
             rdfs:label ""The Beatles""@en .
  ?beatles dbo:type dbr:Musical_artist ;
           dbo:type dbr:Artist .
  ?alanWarner dbo:associatedBand ?belleAndSebastian .
  ?belleAndSebastian dbo:type dbr:Musical_group ;
                     dbo:type dbr:Band ;
                     dbo:type dbr:Organization .
}
```",6,11,7,3,3,3,3,71,0,0,1,0,0.0,0
47,43,val,"Give me the office of Ajoy Mukherjee and office of the awardee of the award, that is an award, of Mantu Ghosh and office of Suvendu Adhikari.",SELECT ?result WHERE { ?v4 <http://dbpedia.org/property/awards> ?v0 . <http://dbpedia.org/resource/Mantu_Ghosh> <http://dbpedia.org/property/awards> ?v0 . <http://dbpedia.org/resource/Ajoy_Mukherjee> <http://dbpedia.org/property/office> ?result . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Award>. <http://dbpedia.org/resource/Suvendu_Adhikari> <http://dbpedia.org/property/office> ?result . ?v4 <http://dbpedia.org/property/office> ?result . },"```sparql
# Ajoy Mukherjee's Office
SELECT ?office WHERE {
  wd:Q123456 rdfs:label ""Ajoy Mukherjee""@en.
  OPTIONAL { wd:Q123456 dbo:positionHeld ?office. }
}

UNION

# Mantu Ghosh's Award and Related Office
SELECT DISTINCT ?award ?awardeeOffice WHERE {
  wd:Q654321 rdfs:label ""Mantu Ghosh""@en.
  wd:Q654321 dbo:receivedAward ?award.
  ?award dbo:recipient ?otherRecipient.
  OPTIONAL { ?otherRecipient dbo:positionHeld ?awardeeOffice. }
}

UNION

# Suvendu Adhikari's Office
SELECT ?office WHERE {
  wd:Q789012 rdfs:label ""Suvendu Adhikari""@en.
  OPTIONAL { wd:Q789012 dbo:positionHeld ?office. }
}
```

Note: Replace `wd:Q123456`, `wd:Q654321`, and `wd:Q789012` with the actual DBpedia resource identifiers for Ajoy Mukherjee, Mantu Ghosh, and Suvendu Adhikari respectively.",5,6,6,3,3,3,3,71,0,0,1,0,0.0,0
236,17,val,"Give me the party member of Federalist Party and party member of the administration of the reference, that is an office holder and a politician, to James Madison.","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/party> <http://dbpedia.org/resource/Federalist_Party> . ?v0 <http://xmlns.com/foaf/0.1/name> ""James Madison""@en . ?v3 <http://dbpedia.org/property/leader> ?v0 . ?result <http://dbpedia.org/ontology/party> ?v3 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?person ?office WHERE {
  ?person dbo:partyMemberOf dbr:Federalist_Party .
  ?person dbo:politicalAffiliation dbr:Federalist_Party .
  ?person dbo:officeHolder ?office .
  ?office dbo:holder ?person .
  ?office dbo:startDate ?start .
  ?office dbo:endDate ?end .
  FILTER (?start <= ""1817-03-04""^^xsd:date && (?end >= ""1809-03-04""^^xsd:date || ?end = ""9999-12-31""^^xsd:date))
}
```",4,6,5,3,2,3,2,20,0,0,19,0,0.0,0
917,41,val,"Give me the child of Kekūanāoʻa and child of the father of Keʻelikōlani and parent of the child, that is a royalty, of Kamehameha IV.","SELECT ?result WHERE { ?v2 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Kamehameha_IV> . ?result <http://dbpedia.org/ontology/child> ?v2 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?result <http://dbpedia.org/property/father> ""Kekūanāoʻa""@en . ?result <http://dbpedia.org/ontology/parent> ?v4 . <http://dbpedia.org/resource/Keʻelikōlani> <http://dbpedia.org/property/father> ?v4 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?person WHERE {
  # Step 1: Find children of Kekūanāoʻa
  VALUES ?kekuanaoaChild { 
    ?child1
  }
  ?child1 dbo:parent dbr:Kekuanaoa_of_Hawaii .
  
  # Step 2: Find father of Keʻelikōlani and his child
  ?keelikoalanFather dbo:child ?keelikoalaChild .
  ?keelikoalaChild rdfs:label ""Keʻelikōlani""@en .

  # Step 3: Find a child of Kamehameha IV and their parent
  VALUES ?kamehamehaIVChild { 
    ?child2
  }
  ?child2 dbo:parent dbr:Kamehameha_IV_of_Hawaii .
  
  # Step 4: Ensure the person is royalty
  ?person dbo:parent ?kekuanaoaChild ;
          dbo:parent ?keelikoalaChild ;
          dbo:parent ?child2 ;
          a dbo:Monarch .

}
```",5,6,6,2,3,3,3,71,0,0,1,0,0.0,0
917,48,val,"Give me the child of the father of Kamehameha IV and parent of the child, that is a royalty, of the mayor of Hawaiian Kingdom.",SELECT ?result WHERE { ?result <http://dbpedia.org/property/father> ?v0 . ?v1 <http://dbpedia.org/property/father> ?v3 . <http://dbpedia.org/resource/Kamehameha_IV> <http://dbpedia.org/property/father> ?v0 . ?result <http://dbpedia.org/ontology/child> ?v1 . <http://dbpedia.org/resource/Hawaiian_Kingdom> <http://dbpedia.org/property/leader> ?v3 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?child ?parent WHERE {
  # Kamehameha IV's father
  dbr:Kamehameha_IV dbo:father dbr:Kamehameha_I .
  
  # Child of Kamehameha I who is royalty
  dbr:Kamehameha_I dbo:child ?child .
  FILTER EXISTS { ?child a dbo:Monarch . }
  
  # Assuming Queen Liliʻuokalani as the leader (mayor equivalent)
  dbr:Liliʻuokalani dbo:spouse dbr:Kalākaua .
  
  # Child of Queen Liliʻuokalani who is royalty
  dbr:Liliʻuokalani dbo:child ?royaltyChild .
  FILTER EXISTS { ?royaltyChild a dbo:Monarch . }
  
  # Parent of this child that is royalty
  ?royaltyChild dbo:parent ?parent .
  FILTER EXISTS { ?parent a dbo:Monarch . }
}
```",5,6,6,3,2,3,3,71,0,0,2,0,0.0,0
839,53,val,"Give me the band of the person born, that is a musical artist, as the persona of Kevin Russell (musician) and band of the band, that is a musical artist, of Charlie Huhn and band of Peter Schorowsky.",SELECT ?result WHERE { <http://dbpedia.org/resource/Kevin_Russell_(musician)> <http://xmlns.com/foaf/0.1/givenName> ?v3 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?result <http://dbpedia.org/ontology/bandMember> <http://dbpedia.org/resource/Peter_Schorowsky> . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?v2 <http://dbpedia.org/property/birthName> ?v3 . <http://dbpedia.org/resource/Charlie_Huhn> <http://dbpedia.org/ontology/associatedMusicalArtist> ?v1 . ?result <http://dbpedia.org/ontology/bandMember> ?v1 . ?v2 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . },"```sparql
SELECT ?person ?personLabel ?band ?bandLabel WHERE {
  # Kevin Russell
  VALUES (?person) { dbr:Kevin_Russell_(musician) }
  
  OPTIONAL {
    ?person dbo:musicalArtist dbp:band ?band .
    SERVICE wikibase:label { bd:serviceParam wikibase:language ""[AUTO_LANGUAGE],en"". }
  }

  UNION

  # Charlie Huhn
  VALUES (?person) { dbr:Charlie_Huhn }
  
  OPTIONAL {
    ?person dbo:musicalArtist dbp:band ?band .
    SERVICE wikibase:label { bd:serviceParam wikibase:language ""[AUTO_LANGUAGE],en"". }
  }

  UNION

  # Peter Schorowsky
  VALUES (?person) { dbr:Peter_Schorowsky }
  
  OPTIONAL {
    ?person dbo:musicalArtist dbp:band ?band .
    SERVICE wikibase:label { bd:serviceParam wikibase:language ""[AUTO_LANGUAGE],en"". }
  }
}
```",6,8,7,3,3,3,3,71,0,0,1,0,0.0,0
606,15,val,"Give me the birthplace of Charles I. Barber and figure known as the nickname of the figure known, that is a settlement, as Barb City.","SELECT ?result WHERE { ?v0 <http://dbpedia.org/property/nickname> ?v1 . ?result <http://dbpedia.org/property/nickname> ?v1 . <http://dbpedia.org/resource/Charles_I._Barber> <http://dbpedia.org/ontology/birthPlace> ?result . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. ?v0 <http://dbpedia.org/property/nickname> ""Barb City""@en . }","```sparql
# Query to get the birthplace of Charles I. Barber
SELECT ?birthPlace WHERE {
  ?person dbo:birthName ""Charles I. Barber""@en .
  ?person dbo:birthPlace ?birthPlace .
}

# Query to find the settlement known as ""Barb City""
SELECT ?settlement WHERE {
  ?settlement rdfs:label ?label .
  FILTER(CONTAINS(LCASE(?label), ""barb city"") && LANGMATCHES(LANG(?label), ""en""))
}
```",4,5,5,3,2,3,2,20,0,0,1,0,0.0,0
933,51,val,"Give me the band of the band, that is a group and a band and an organisation, of the person born, that is a musical artist, on 1947-04-21 and reference to the birth name of Alan Warner (musician).","SELECT ?result WHERE { ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?result <http://xmlns.com/foaf/0.1/name> ?v4 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Group>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Band>. <http://dbpedia.org/resource/Alan_Warner_(musician)> <http://dbpedia.org/property/birthName> ?v4 . ?v3 <http://dbpedia.org/ontology/birthDate> ""1947-04-21""^^<http://www.w3.org/2001/XMLSchema#date> . ?v0 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?v3 <http://dbpedia.org/ontology/associatedMusicalArtist> ?v0 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?band WHERE {
  ?person dbo:birthDate ?birthDate .
  FILTER (YEAR(?birthDate) = 1947 && MONTH(?birthDate) = 4 && DAY(?birthDate) = 21)
  ?person rdfs:label ""Alan Warner""@en .
  ?person dbo:birthName ?birthName .
  FILTER (?birthName = ""Alan Warner""^^xsd:string)

  ?band dbo:member ?person ;
        a dbo:Band, dbo:Organization .

  OPTIONAL { ?band rdfs:label ?bandLabel }
}
```",5,9,6,3,2,3,3,71,0,0,1,0,0.0,0
192,17,val,Give me the child of the child of the parent of Anna of Hungary (Byzantine empress) and spouse of Clemence of Austria.,SELECT ?result WHERE { ?v3 <http://dbpedia.org/property/father> ?v0 . ?v0 <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Anna_of_Hungary_(Byzantine_empress)> . <http://dbpedia.org/resource/Clemence_of_Austria> <http://dbpedia.org/ontology/spouse> ?result . ?result <http://dbpedia.org/ontology/parent> ?v3 . },"```sparql
# Step 1: Find Anna of Hungary (Byzantine empress)
SELECT ?anna WHERE {
  ?anna dbo:title ""Anna of Hungary (Byzantine Empress)""@en .
}

# Step 2: Find her parent
SELECT ?parent WHERE {
  VALUES ?anna { <http://dbpedia.org/resource/Anna_of_Hungary_(Byzantine_empress)> }
  ?anna dbo:parent ?parent .
}

# Step 3: Determine the child of that parent (other than Anna)
SELECT DISTINCT ?child WHERE {
  ?parent dbo:child ?child .
  FILTER NOT EXISTS { ?parent dbo:child <http://dbpedia.org/resource/Anna_of_Hungary_(Byzantine_empress)> }
}

# Step 4: Identify Clemence of Austria and her spouse
SELECT ?clemenceSpouse WHERE {
  ?clemence dbo:spouse ?clemenceSpouse .
  VALUES ?clemence { <http://dbpedia.org/resource/Clemence_of_Austria> }
}

# Step 5: Find the child of Clemence's spouse and the other child of Anna's parent
SELECT DISTINCT ?child WHERE {
  # Child of Clemence's spouse
  ?clemenceSpouse dbo:child ?child .
  
  UNION
  
  # Other child of Anna's parent
  VALUES ?parent { <result_from_step_2> }
  ?parent dbo:child ?child .
  FILTER NOT EXISTS { ?parent dbo:child <http://dbpedia.org/resource/Anna_of_Hungary_(Byzantine_empress)> }
}

# Step 6: Determine the grandchild of the individual found in step 5
SELECT DISTINCT ?grandChild WHERE {
  VALUES ?parent { <result_from_step_5> }
  ?parent dbo:child ?grandChild .
}
```

Note: Replace `<http://dbpedia.org/resource/Anna_of_Hungary_(Byzantine_empress)>`, `<http://dbpedia.org/resource/Clemence_of_Austria>`, and `<result_from_step_2>` with the actual URIs obtained from executing previous queries.",4,4,5,3,2,3,2,20,0,0,1,0,0.0,0
465,46,val,"Give me the spouse of the child, that is a royalty, of Ferdinand I, Holy Roman Emperor and successor of the child of the parent of Ercole II d'Este, Duke of Ferrara.","SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/successor> ?result . ?result <http://dbpedia.org/ontology/spouse> ?v4 . <http://dbpedia.org/resource/Ercole_II_d'Este,_Duke_of_Ferrara> <http://dbpedia.org/ontology/parent> ?v2 . ?v1 <http://dbpedia.org/property/father> ?v2 . <http://dbpedia.org/resource/Ferdinand_I,_Holy_Roman_Emperor> <http://dbpedia.org/ontology/child> ?v4 . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?spouse WHERE {
  # Step 1: Identify Ercole II d'Este's parent
  dbr:Ercole_II_d%27Este_Duke_of_Ferrara dbo:parent dbr:Alfonso_I_d%27Este.

  # Step 2: Find the child of Alfonso I d'Este (which is Ercole II himself)
  dbr:Alfonso_I_d%27Este dbo:child ?ercoleII.

  # Step 3: Determine the successor of Ercole II
  ?successor dbo:succeededBy ?ercoleII.
  
  # Step 4: Identify Ferdinand I's children
  dbr:Ferdinand_I,_Holy_Roman_Emperor dbo:child ?childFerdinand.

  # Step 5: Find which child is a royalty and succeeded by the successor of Ercole II
  ?childFerdinand a dbo:Monarch;
                 dbo:succeededBy ?successor.
  
  # Step 6: Get the spouse of this royal child
  ?childFerdinand dbo:spouse ?spouse.
}
```",5,6,6,3,2,3,3,71,0,0,1,0,0.0,0
917,40,val,"Give me the child of Kekūanāoʻa and parent of the child, that is a royalty, of the mayor of Hawaiian Kingdom and child of Kekūanāoʻa.","SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?result <http://dbpedia.org/ontology/child> ?v1 . ?v1 <http://dbpedia.org/property/father> ?v3 . ?result <http://dbpedia.org/ontology/parent> <http://dbpedia.org/resource/Kekūanāoʻa> . <http://dbpedia.org/resource/Hawaiian_Kingdom> <http://dbpedia.org/property/leader> ?v3 . ?result <http://dbpedia.org/property/father> ""Kekūanāoʻa""@en . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?person WHERE {
  # Kekūanāoʻa's child who is royalty
  ?child dbo:parent dbr:Kekūanāoʻa .
  ?child a dbo:Monarch .

  # This person must be the parent of the mayor of Hawaiian Kingdom
  ?mayor dbo:parent ?child .
  ?mayor rdfs:label ""Alexander Liholiho""@en .

  # The person we are looking for is this child
  ?person sameAs ?child .
}
```",5,6,6,3,3,3,3,71,0,0,2,0,0.0,0
839,51,val,"Give me the band of the member of Böhse Onkelz and band of the band, that is a musical artist, of the professional in Musician.","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/bandMember> ?v2 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. <http://dbpedia.org/resource/Böhse_Onkelz> <http://dbpedia.org/ontology/bandMember> ?v4 . ?result <http://dbpedia.org/ontology/bandMember> ?v4 . ?v1 <http://dbpedia.org/property/occupation> ""Musician""@en . ?v1 <http://dbpedia.org/ontology/associatedMusicalArtist> ?v2 . }","```sparql
SELECT DISTINCT ?bandOfMember ?bandOfBand ?musicianName WHERE {
  # Step 1: Identify a member of Böhse Onkelz
  ?member dbo:memberOf dbr:Böhse_Onkelz .
  
  # Step 2: Find the band associated with that member as a musical artist
  ?member dbo:musicalArtistOf ?bandOfMember .

  # Step 3: Identify if this band has another band they are part of (as an entity)
  ?bandOfMember dbo:band dbr:Böhse_Onkelz .
  
  # Step 4: Find the professional in Musician from that band
  ?musician dbo:memberOf ?bandOfBand ;
            foaf:name ?musicianName ;
            dbo:occupation dbr:Musician .

  # Ensure the musician is part of the band found in step 2
  ?bandOfMember dbo:member ?musician .
}
```",5,6,6,3,2,3,3,71,0,0,1,0,0.0,0
865,43,val,"Give me the native of British Raj and father of Shahla Khatun and father of the child, that is a politician, of the spouse of Syeda Shahar Banu.",SELECT ?result WHERE { <http://dbpedia.org/resource/Syeda_Shahar_Banu> <http://dbpedia.org/ontology/spouse> ?v1 . ?result <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/British_Raj> . ?v3 <http://dbpedia.org/property/father> ?result . ?v3 <http://dbpedia.org/property/father> ?v1 . <http://dbpedia.org/resource/Shahla_Khatun> <http://dbpedia.org/property/father> ?result . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. },"```sparql
SELECT ?person WHERE {
  # Find Shahla Khatun's father
  ?shahla dbo:parent ?father .
  ?shahla rdfs:label ""Shahla Khatun""@en .

  # Ensure the person is a native of British Raj (historical context)
  ?father dbo:nationality dbr:British_Raj .

  # Find Tofail Ahmed's spouse and their children
  ?tofail dbo:spouse ?spouse .
  ?spouse rdfs:label ""Syeda Shahar Banu""@en .
  
  ?child dbo:parent ?spouse ;
         dbo:occupation dbr:Politician .

  # Ensure the person is the same as Shahla Khatun's father
  FILTER(?father = ?person)
}
```",5,6,6,3,3,3,3,71,0,0,1,0,0.0,0
976,53,val,"Give me the office of the person born as Mehmet Naci Bostancı and office of the leader, that is a politician, of the administration, that is an organisation, of Kemal Kılıçdaroğlu and office of Meral Akşener.","SELECT ?result WHERE { ?v3 <http://dbpedia.org/property/leader> <http://dbpedia.org/resource/Kemal_Kılıçdaroğlu> . ?v0 <http://dbpedia.org/property/office> ?result . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. <http://dbpedia.org/resource/Meral_Akşener> <http://dbpedia.org/property/office> ?result . ?v3 <http://dbpedia.org/ontology/leader> ?v1 . ?v1 <http://dbpedia.org/property/office> ?result . ?v0 <http://dbpedia.org/property/birthName> ""Mehmet Naci Bostancı""@en . }","```sparql
# Query for Mehmet Naci Bostancı's office
SELECT ?office WHERE {
  ?person foaf:givenName ""Mehmet"" .
  ?person foaf:surname ""Naci Bostancı"" .
  ?person dbo:office ?office .
}

UNION

# Query for Kemal Kılıçdaroğlu's office as the leader of his administration
SELECT ?office WHERE {
  ?person foaf:givenName ""Kemal"" .
  ?person foaf:surname ""Kılıçdaroğlu"" .
  ?person dbo:office ?office .
}

UNION

# Query for Meral Akşener's office
SELECT ?office WHERE {
  ?person foaf:givenName ""Meral"" .
  ?person foaf:surname ""Akşener"" .
  ?person dbo:office ?office .
}
```",6,8,7,3,3,3,3,71,0,0,1,0,0.0,0
926,54,val,Give me the successor of the child of the spouse of Şermi Kadın and father of the father of Abdulaziz and child of Ahmed III.,SELECT ?result WHERE { <http://dbpedia.org/resource/Ahmed_III> <http://dbpedia.org/ontology/child> ?result . ?v4 <http://dbpedia.org/ontology/successor> ?result . ?v1 <http://dbpedia.org/ontology/spouse> <http://dbpedia.org/resource/Şermi_Kadın> . ?v2 <http://dbpedia.org/property/father> ?result . <http://dbpedia.org/resource/Abdulaziz> <http://dbpedia.org/property/father> ?v2 . ?v4 <http://dbpedia.org/property/father> ?v1 . },"```sparql
SELECT ?successor WHERE {
  wd:Q1234567 wdt:P26 wd:Q7890123 . # Mustafa III (Şermi Kadın's spouse) is the father of Selim III
  wd:Q7890123 wdt:P22 wd:Q3456789 . # Selim III is a child of Mustafa III
  wd:Q7890123 wdt:P31/wdt:P279* wd:Q1234567 . # Mustafa III is the father of Abdulaziz
  wd:Q1234567 wdt:P22 wd:Q11121314 . # Mustafa III is a child of Ahmed III
  wd:Q1234567 wdt:P35 ?abdulHamidI . # Mustafa III's successor
  ?abdulHamidI rdfs:label ""Abdul Hamid I""@en .
}
```

Note: Replace `wd:Q1234567`, `wd:Q7890123`, and other placeholders with the actual DBpedia identifiers for Mustafa III, Selim III, Abdulaziz, Ahmed III, and Abdul Hamid I.",6,6,7,3,3,3,3,71,0,0,1,0,0.0,0
715,49,val,"Give me the commander in the force, that is a military conflict, of Abd el-Krim and leader of the office, that is a government agency and an organisation, of the reference to Carlos Franco Iribarnegaray.","SELECT ?result WHERE { ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v0 <http://dbpedia.org/property/office> ?v1 . ?v2 <http://dbpedia.org/ontology/commander> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/GovernmentAgency>. ?v1 <http://dbpedia.org/ontology/leader> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?v0 <http://xmlns.com/foaf/0.1/name> ""Carlos Franco Iribarnegaray""@en . ?v2 <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Abd_el-Krim> . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?rifWarCommander ?protectorateLeader WHERE {
  # Abd el-Krim's role in the Rif War
  dbr:Abd_el-Krim dbo:commanderOf ?rifWar .
  ?rifWar rdfs:label ?rifWarLabel .
  FILTER(CONTAINS(LCASE(?rifWarLabel), ""rif war""))

  # Carlos Franco Iribarnegaray's leadership position
  dbr:Carlos_Franco_Iribarnegaray dbo:headOf ?protectorate .
  ?protectorate rdfs:label ?protectorateLabel .
  FILTER(CONTAINS(LCASE(?protectorateLabel), ""spanish protectorate in morocco""))

  # Bind the results to variables
  BIND(dbr:Abd_el-Krim AS ?rifWarCommander)
  BIND(dbr:Carlos_Franco_Iribarnegaray AS ?protectorateLeader)
}
```",5,8,6,3,2,3,3,71,0,0,1,0,0.0,0
645,52,val,"Give me the military force of the force, that is an event and a military conflict and a societal event, of Francisco Largo Caballero and commander in the force of the commander in Siege of Madrid and leader of Ministry of the Army (Spain).",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/battle> ?v5 . <http://dbpedia.org/resource/Siege_of_Madrid> <http://dbpedia.org/ontology/commander> ?v3 . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?v2 <http://dbpedia.org/ontology/commander> ?v3 . <http://dbpedia.org/resource/Ministry_of_the_Army_(Spain)> <http://dbpedia.org/ontology/leader> ?result . ?v5 <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Francisco_Largo_Caballero> . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v2 <http://dbpedia.org/ontology/commander> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?militaryForce WHERE {
  ?person dbo:spouse ?spouse .
  ?person rdfs:label ""Francisco Largo Caballero""@en .
  
  OPTIONAL { ?person dbo:positionHeld ?position . }
  OPTIONAL { ?position dbo:officeHolder ?holder . }
  OPTIONAL { ?position dbo:officeName ?officeName . }

  FILTER regex(?officeName, ""Ministry of the Army (Spain)"", ""i"")
  FILTER regex(?officeName, ""Siege of Madrid"", ""i"")

  ?militaryForce dbo:commander ?person .
  ?militaryForce rdfs:label ?forceLabel .

  FILTER regex(?forceLabel, ""Republican"", ""i"")
}
```",6,9,7,3,3,3,3,71,0,0,1,0,0.0,0
978,16,val,"Give me the band member of the person born as Nicholas Bracegirdle and band member of the professional, that is a musical artist and an artist, in .","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/associatedMusicalArtist> ?v3 . ?v3 <http://dbpedia.org/property/birthName> ""Nicholas Bracegirdle""@en . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. ?result <http://dbpedia.org/ontology/associatedMusicalArtist> ?v2 . ?v2 <http://dbpedia.org/property/occupation> """"@en . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. }","```sparql
SELECT ?band WHERE {
  ?person foaf:name ""Nick Mason""@en .
  ?person dbo:birthName ""Nicholas Bracegirdle"" .
  ?person dbo:memberOfBand ?band .
}
```",4,6,5,2,2,3,2,20,0,0,2,0,0.0,0
926,52,val,Give me the child of Ahmed III and successor of the child of Ahmed III and father of the father of the spouse of Neşerek Kadın.,SELECT ?result WHERE { ?v4 <http://dbpedia.org/ontology/successor> ?result . ?v4 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Ahmed_III> . <http://dbpedia.org/resource/Ahmed_III> <http://dbpedia.org/ontology/child> ?result . ?v1 <http://dbpedia.org/property/father> ?result . ?v3 <http://dbpedia.org/property/father> ?v1 . <http://dbpedia.org/resource/Neşerek_Kadın> <http://dbpedia.org/ontology/spouse> ?v3 . },"```sparql
# Step 1: Find a notable child of Ahmed III
SELECT ?child WHERE {
    wd:Q123456 wdt:P40 ?child. # Assuming Q123456 is the DBpedia ID for Ahmed III
}

# Step 2: Find the successor of this child
SELECT ?successor WHERE {
    ?child wdt:P136 ?position.
    ?successor wdt:P136 ?position.
    FILTER(?successor > ?child)
}

# Step 3: Determine the father of this successor
SELECT ?father WHERE {
    ?successor wdt:P22 ?father.
}

# Step 4: Identify the spouse of Neşerek Kadın
SELECT ?spouse WHERE {
    wd:Q654321 wdt:P26 ?spouse. # Assuming Q654321 is the DBpedia ID for Neşerek Kadın
}

# Step 5: Find the father of this spouse's father
SELECT ?grandfather WHERE {
    ?spouse wdt:P22 ?father.
    ?father wdt:P22 ?grandfather.
}

# Step 6: Determine the child of Ahmed III and successor of this grandfather
SELECT ?finalPerson WHERE {
    wd:Q123456 wdt:P40 ?child. # Child of Ahmed III
    ?grandfather wdt:P136 ?position.
    ?child wdt:P136 ?position.
    FILTER(?child > ?grandfather)
}
```",6,6,7,3,3,3,3,71,0,0,1,0,0.0,0
273,17,val,Give me the spouse of Edoardo Agnelli (industrialist) and parent of the alumnus of the reference to Università degli Studi di Torino.,"SELECT ?result WHERE { ?v3 <http://dbpedia.org/ontology/almaMater> ?v0 . ?result <http://dbpedia.org/ontology/spouse> <http://dbpedia.org/resource/Edoardo_Agnelli_(industrialist)> . ?v0 <http://xmlns.com/foaf/0.1/name> ""Università degli Studi di Torino""@en . ?v3 <http://dbpedia.org/ontology/parent> ?result . }","```sparql
SELECT ?spouse WHERE {
  ?edoardo a dbo:Person ;
           foaf:name ""Edoardo Agnelli"" ;
           dbo:occupation dbo:Industrialist .
  
  ?edoardo dbo:child ?child .
  ?child dbo:almaMater dbr:Università_degli_Studi_di_Torino .

  ?edoardo dbo:spouse ?spouse .
}
```",4,4,5,3,2,3,2,20,0,0,1,0,0.0,0
976,40,val,"Give me the office of Naci Bostancı and office of the leader, that is a politician, of the administration, that is an organisation, of Kemal Kılıçdaroğlu and office of Meral Akşener.",SELECT ?result WHERE { ?v1 <http://dbpedia.org/property/office> ?result . <http://dbpedia.org/resource/Meral_Akşener> <http://dbpedia.org/property/office> ?result . <http://dbpedia.org/resource/Naci_Bostancı> <http://dbpedia.org/property/office> ?result . ?v3 <http://dbpedia.org/property/leader> <http://dbpedia.org/resource/Kemal_Kılıçdaroğlu> . ?v3 <http://dbpedia.org/ontology/leader> ?v1 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?person ?name ?office WHERE {
  VALUES (?person ?name) {
    (dbr:Naci_Bostancı ""Naci Bostancı"")
    (dbr:Meral_Akşener ""Meral Akşener"")
  }
  OPTIONAL { ?person dbo:office ?office . }

  OPTIONAL {
    ?leader dbr:Kemal_Kılıçdaroğlu dbo:leaderOf ?organisation .
    ?organisation dbo:leader ?leader .
    ?leader dbo:office ?officeLeader .
  }
}
```",5,7,6,3,3,3,3,71,0,0,1,0,0.0,0
917,51,val,"Give me the child of the father of the child, that is a royalty, of Kamehameha III and child of the father of Keʻelikōlani.",SELECT ?result WHERE { <http://dbpedia.org/resource/Keʻelikōlani> <http://dbpedia.org/property/father> ?v4 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v3 <http://dbpedia.org/property/father> ?v0 . ?result <http://dbpedia.org/ontology/parent> ?v4 . ?result <http://dbpedia.org/property/father> ?v0 . <http://dbpedia.org/resource/Kamehameha_III> <http://dbpedia.org/ontology/child> ?v3 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?child WHERE {
  # Kamehameha III's children
  VALUES ?kamehamehaIII (dbr:Kamehameha_III) .
  
  ?child dbo:parent dbr:Kamehameha_III ;
         a dbo:Person .

  # Keʻelikōlani's father
  VALUES ?keelikolanisFather (dbr:High_Court_of_the_Kingdom_of_Hawaii#Kahekili_II) .
  
  dbr:Keʻelikōlani dbo:parent ?keelikolanisFather ;
                   a dbo:Person .

  # Intersection and royalty
  FILTER (?child = ?commonChild)
  ?commonChild dbo:parent ?keelikolanisFather ;
               a dbo:RoyalFamilyMember .
}
```",5,6,6,3,2,3,3,71,0,0,3,0,0.0,0
935,15,val,"Give me the headquarter of Provincial Assembly of Balochistan and death place of the awardee of the award, that is an award, of Syed Sohail Hussain Naqvi.",SELECT ?result WHERE { ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Award>. ?v1 <http://dbpedia.org/ontology/deathPlace> ?result . ?v1 <http://dbpedia.org/property/awards> ?v0 . <http://dbpedia.org/resource/Provincial_Assembly_of_Balochistan> <http://dbpedia.org/ontology/location> ?result . <http://dbpedia.org/resource/Syed_Sohail_Hussain_Naqvi> <http://dbpedia.org/property/awards> ?v0 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?headquarter ?deathPlace WHERE {
  # Query for the headquarters of the Provincial Assembly of Balochistan
  dbr:Provincial_Assembly_of_Balochistan dbo:headquarters ?headquarter .

  # Query for Syed Sohail Hussain Naqvi's award and death place
  OPTIONAL {
    dbr:Syed_Sohail_Hussain_Naqvi dbo:award ?award .
    ?award dbo:recipient dbr:Syed_Sohail_Hussain_Naqvi .
    dbr:Syed_Sohail_Hussain_Naqvi dbo:deathPlace ?deathPlace .
  }
}
```",4,5,5,3,2,3,2,20,0,0,1,0,0.0,0
507,49,val,Give me the spouse of the person born as Anne Voase Coates and professional in the profession of the person born on 1966-02-18.,"SELECT ?result WHERE { ?v0 <http://dbpedia.org/ontology/birthDate> ""1966-02-18""^^<http://www.w3.org/2001/XMLSchema#date> . ?v0 <http://dbpedia.org/property/occupation> ?v1 . ?result <http://dbpedia.org/property/occupation> ?v1 . ?v2 <http://dbpedia.org/property/birthName> ""Anne Voase Coates""@en . ?result <http://dbpedia.org/ontology/spouse> ?v2 . }","```sparql
SELECT ?spouse WHERE {
  # Subquery to find Anne Voase Coates and her spouse
  ?anne a dbo:Person ;
        foaf:name ""Anne Voase Coates""@en ;
        dbo:birthName ""Anne Voase Coates"" .
  
  OPTIONAL { ?anne dbo:spouse ?spouse . }
  
  # Subquery to find the profession of a person born on 1966-02-18
  ?person a dbo:Person ;
          dbo:birthDate ""1966-02-18""^^xsd:date ;
          dbo:occupation ?profession .
  
  # Ensure Anne Voase Coates has the same profession
  FILTER EXISTS {
    ?anne dbo:occupation ?profession .
  }
}
```",5,5,6,3,2,3,3,71,0,0,1,0,0.0,0
976,51,val,"Give me the office of the mayor, that is a politician and an office holder and Turkish, of Nation Alliance (Turkey) and office of the person born as the birth name of Naci Bostancı.",SELECT ?result WHERE { ?v0 <http://dbpedia.org/property/office> ?result . <http://dbpedia.org/resource/Nation_Alliance_(Turkey)> <http://dbpedia.org/property/leader> ?v4 . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v4 <http://dbpedia.org/ontology/nationality> <http://dbpedia.org/resource/Turkey>. ?v0 <http://dbpedia.org/property/birthName> ?v3 . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v4 <http://dbpedia.org/property/office> ?result . <http://dbpedia.org/resource/Naci_Bostancı> <http://dbpedia.org/property/birthName> ?v3 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?office WHERE {
  ?person a dbo:Politician ;
          dbo:nationality dbr:Turkey ;
          dbo:birthName ""Naci Bostancı""@en ;
          dbo:party dbr:Nation_Alliance_(Turkey) .
  
  OPTIONAL { ?person dbo:office ?office . }
  
  FILTER EXISTS {
    ?office a dbo:Mayor .
  }
}
```",5,8,6,3,2,3,3,71,0,0,1,0,0.0,0
917,50,val,"Give me the child of the father of Kamehameha IV and child of the father of the spouse, that is a royalty, of Leleiohoku I.",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/parent> ?v3 . ?result <http://dbpedia.org/property/father> ?v0 . ?v1 <http://dbpedia.org/property/father> ?v3 . <http://dbpedia.org/resource/Kamehameha_IV> <http://dbpedia.org/property/father> ?v0 . ?v1 <http://dbpedia.org/ontology/spouse> <http://dbpedia.org/resource/Leleiohoku_I> . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?child WHERE {
  # Kamehameha IV's father
  dbr:Kamehameha_IV dbo:father dbr:Kamehameha_I .
  
  # Child of Kamehameha I who is royalty
  dbr:Leleiohoku_I dbo:parent dbr:Kamehameha_I ;
                  a dbo:Monarch .

  # Leleiohoku I's spouse
  dbr:Leleiohoku_I dbo:spouse dbr:Kamāmalu .

  # Father of Kamāmalu
  dbr:Kamāmalu dbo:father dbr:Kamehameha_II .

  # Child of Kamehameha II who is royalty
  ?child dbo:parent dbr:Kamehameha_II ;
         a dbo:Monarch .
  
  FILTER(?child = dbr:Victoria_Kamāmalu)
}
```",5,6,6,3,2,3,3,71,0,0,3,0,0.0,0
329,21,val,"Give me the entity in the birthplace, that is an organisation and a country, of Robert Bates (loyalist) and entity in United Kingdom and birthplace of Eric Cross (writer).",SELECT ?result WHERE { ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. <http://dbpedia.org/resource/Robert_Bates_(loyalist)> <http://dbpedia.org/ontology/birthPlace> ?v0 . ?result <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/United_Kingdom> . <http://dbpedia.org/resource/Eric_Cross_(writer)> <http://dbpedia.org/ontology/birthPlace> ?result . ?result <http://dbpedia.org/ontology/country> ?v0 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?birthplaceRobertBates ?organisation ?country ?entityUKEricCross ?birthplaceEricCross
WHERE {
  # Robert Bates (loyalist)
  dbr:Robert_Bates_(loyalist) dbo:birthPlace ?birthplaceRobertBates .
  
  OPTIONAL {
    ?birthplaceRobertBates dbo:country ?country .
  }
  
  OPTIONAL {
    ?organisation dbo:location ?birthplaceRobertBates ;
                  a dbo:Organisation .
  }

  # Eric Cross (writer)
  dbr:Eric_Cross_(writer) dbo:birthPlace ?birthplaceEricCross .
  
  OPTIONAL {
    ?entityUKEricCross dbo:country dbr:United_Kingdom ;
                       dbo:wikiPageDisambiguates ?ericCrossResource .
    
    FILTER EXISTS { ?ericCrossResource rdfs:label ""Eric Cross (writer)""@en }
  }
}
```",4,6,5,2,3,2,3,28,0,0,1,0,0.0,0
36,23,val,"Give me the actor of the claim to fame, that is a film, of Lepacious Bose and person born as the birth name of Ayo Makun.",SELECT ?result WHERE { ?v3 <http://dbpedia.org/ontology/starring> ?result . ?result <http://dbpedia.org/property/birthName> ?v1 . <http://dbpedia.org/resource/Ayo_Makun> <http://dbpedia.org/property/birthName> ?v1 . <http://dbpedia.org/resource/Lepacious_Bose> <http://dbpedia.org/ontology/knownFor> ?v3 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Film>. },"```sparql
# Query for Lepa Adekunle's claim to fame film and its actors
SELECT ?film ?actor WHERE {
  ?person foaf:name ""Lepa Adekunle""@en .
  ?person dbo:claimToFame ?film .
  ?film dbo:starring ?actor .
}

UNION

# Query for Ayo Makun's birth name film and its actors
SELECT ?film ?actor WHERE {
  ?person foaf:name ""Ayo Makun""@en ;
          dbo:birthName ?birthName .
  ?film dbo:title ?birthName .
  ?film dbo:starring ?actor .
}
```",4,5,5,2,2,2,3,28,0,0,1,0,0.0,0
445,45,val,Give me the entity in England and death place of Patrick Moore and entity in the award of the commander in Battle of Saint-Mihiel.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/country> ?v1 . ?v0 <http://dbpedia.org/property/awards> ?v1 . ?result <http://dbpedia.org/ontology/location> <http://dbpedia.org/resource/England> . <http://dbpedia.org/resource/Battle_of_Saint-Mihiel> <http://dbpedia.org/ontology/commander> ?v0 . <http://dbpedia.org/resource/Patrick_Moore> <http://dbpedia.org/ontology/deathPlace> ?result . },"```sparql
# Query for Patrick Moore's death place in England
SELECT ?deathPlace WHERE {
  dbpedia:Patrick_Moore dbo:placeOfBirth ?birthPlace .
  dbpedia:Patrick_Moore dbo:deathPlace ?deathPlace .
  FILTER (CONTAINS(LCASE(STR(?deathPlace)), ""england""))
}

# Query for the commander of the Battle of Saint-Mihiel and his award
SELECT ?commander ?award WHERE {
  dbpedia:Battle_of_Saint-Mihiel dbo:commander ?commander .
  ?commander dbo:receivedAward ?award .
}
```",5,5,6,3,3,3,3,71,0,0,1,0,0.0,0
839,55,val,"Give me the band of the band, that is a musical artist, of Charlie Huhn and band of the person born, that is a musical artist, as Kevin Richard Russell and band of the member of Böhse Onkelz.","SELECT ?result WHERE { ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?v3 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v3 <http://dbpedia.org/property/birthName> ""Kevin Richard Russell""@en . ?result <http://dbpedia.org/ontology/bandMember> ?v5 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. <http://dbpedia.org/resource/Charlie_Huhn> <http://dbpedia.org/ontology/associatedMusicalArtist> ?v2 . ?result <http://dbpedia.org/ontology/bandMember> ?v2 . <http://dbpedia.org/resource/Böhse_Onkelz> <http://dbpedia.org/ontology/bandMember> ?v5 . }","```sparql
# Query to find Charlie Huhn's band
SELECT ?band WHERE {
  ?person dbo:birthName ""Charlie Huhn""@en .
  ?person dbo:associatedBand ?band .
}

UNION

# Query to find Kevin Richard Russell's band (The Rubinoos)
SELECT ?band WHERE {
  ?person dbo:birthDate ?date .
  FILTER (?date = ""1963-03-31""^^xsd:date) .
  ?person rdfs:label ""Kevin Richard Russell""@en .
  ?person dbo:associatedBand ?band .
}

UNION

# Query to find a Böhse Onkelz member's band
SELECT ?member ?band WHERE {
  ?group rdfs:label ""Böhse Onkelz""@de .
  ?group dbo:member ?member .
  ?member dbo:associatedBand ?band .
}
```",6,8,7,2,3,3,3,71,0,0,1,0,0.0,0
573,40,val,"Give me the parent of John Quincy Adams and person decedent at Quincy, Massachusetts and person decedent at the administration, that is a region, of the real name of Charlie Baker (Australian footballer).","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/deathPlace> <http://dbpedia.org/resource/Quincy,_Massachusetts> . <http://dbpedia.org/resource/John_Quincy_Adams> <http://dbpedia.org/ontology/parent> ?result . <http://dbpedia.org/resource/Charlie_Baker_(Australian_footballer)> <http://xmlns.com/foaf/0.1/name> ?v2 . ?result <http://dbpedia.org/ontology/deathPlace> ?v1 . ?v1 <http://dbpedia.org/property/governor> ?v2 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Region>. }","```sparql
# Step 1: Get the parent of John Quincy Adams
SELECT ?parent WHERE {
  wd:Q9373 wdt:P22 ?parent .
}

# Step 2: Find person decedent at Quincy, Massachusetts
SELECT DISTINCT ?person WHERE {
  ?person wdt:P20 wd:Q1204 . # P20 is deathPlace
  ?person wdt:P19 wd:Q1204 . # P19 is birthPlace (to ensure they are associated with Quincy)
}

# Step 3: Find Charlie Baker's real name and associated region
SELECT DISTINCT ?realName ?region WHERE {
  wd:Q1234567 rdfs:label ""Charlie Baker""@en . # Assuming Q1234567 is the entity for Charlie Baker
  ?charlie wdt:P735 ?realName .
  ?charlie wdt:P69 ?region . # P69 is sport (to find associated region)
}

# Step 4: Find person decedent at administration of that region
SELECT DISTINCT ?person WHERE {
  ?person wdt:P20 ?deathPlace .
  ?admin wdt:P39 ?position . # P39 is officeHolder
  ?admin wdt:P69 wd:Q1234567 . # Assuming Charlie Baker's sport entity is Q1234567
  ?admin wdt:P106 wd:Q1930181 . # P106 is occupation (politician)
  ?admin wdt:P131 ?region . # P131 is administrative territorial entity
  FILTER(?deathPlace = ?region) .
}

# Step 5: Combine all information to find the common entity
SELECT DISTINCT ?commonEntity WHERE {
  VALUES ?parent { ?result1 } # Result from step 1
  VALUES ?quincyPerson { ?result2 } # Result from step 2
  VALUES ?adminDecedent { ?result4 } # Result from step 4
  FILTER(?parent = ?quincyPerson && ?quincyPerson = ?adminDecedent)
}
```",5,6,6,3,3,3,3,71,0,0,2,0,0.0,0
456,50,val,"Give me the band of the band, that is a musical artist, of Dean Brody and professional in the alter ego of the reference, that is a fictional character, to Lamont Cranston (radio, film and television).","SELECT ?result WHERE { ?v0 <http://xmlns.com/foaf/0.1/name> ""Lamont Cranston (radio, film and television)""@en . <http://dbpedia.org/resource/Dean_Brody> <http://dbpedia.org/ontology/associatedMusicalArtist> ?v3 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?result <http://dbpedia.org/property/occupation> ?v4 . ?v0 <http://dbpedia.org/property/alterEgo> ?v4 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/FictionalCharacter>. ?v3 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . }","```sparql
# Step 1: Find Dean Brody's band
SELECT ?band WHERE {
  ?person dbo:name ""Dean Brody""@en .
  ?person dbo:associatedBand ?band .
}

UNION

# Step 2 and 3: Find the band associated with The Shadow (alter ego of Lamont Cranston)
SELECT ?band WHERE {
  ?character rdfs:label ""The Shadow""@en .
  ?character dbo:alterEgoOf ?lamontCranston .
  ?lamontCranston dbo:name ""Lamont Cranston""@en .
  ?character dbo:associatedBand ?band .
}

# Step 4: Find the common band
SELECT DISTINCT ?commonBand WHERE {
  { 
    # Dean Brody's band
    ?person dbo:name ""Dean Brody""@en .
    ?person dbo:associatedBand ?commonBand .
  }
  UNION
  {
    # The Shadow's band
    ?character rdfs:label ""The Shadow""@en .
    ?character dbo:alterEgoOf ?lamontCranston .
    ?lamontCranston dbo:name ""Lamont Cranston""@en .
    ?character dbo:associatedBand ?commonBand .
  }
}
```",5,7,6,3,2,3,3,71,0,0,1,0,0.0,0
573,46,val,"Give me the person decedent at the residence, that is a settlement, of William J. Phelan and person decedent at the administration, that is a region, of the real name of Charlie Baker (Australian footballer).",SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Region>. <http://dbpedia.org/resource/Charlie_Baker_(Australian_footballer)> <http://xmlns.com/foaf/0.1/name> ?v2 . ?v1 <http://dbpedia.org/property/governor> ?v2 . <http://dbpedia.org/resource/William_J._Phelan> <http://dbpedia.org/property/residence> ?v4 . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. ?result <http://dbpedia.org/ontology/deathPlace> ?v4 . ?result <http://dbpedia.org/ontology/deathPlace> ?v1 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?personDecedentAtPhelanResidence ?personDecedentAtAustralianFootballerAdmin
WHERE {
  # Find William J. Phelan's residence and check if it is a settlement
  dbr:William_J._Phelan dbo:residence ?phelanResidence .
  ?phelanResidence rdf:type dbo:Settlement .

  # Find person decedent at the residence of William J. Phelan
  ?personDecedentAtPhelanResidence dbo:deathPlace ?phelanResidence ;
                                     dbo:deathDate ?date1 .

  # Find Charlie Baker's real name and associated administration
  dbr:Charlie_Baker_(Australian_footballer) dbo:birthName ?charlieBakerRealName .
  ?charlieBakerRealName dbo:administrativeRegion ?australianFootballerAdmin .

  # Find person decedent at the administration of Charlie Baker
  ?personDecedentAtAustralianFootballerAdmin dbo:deathPlace ?australianFootballerAdmin ;
                                              dbo:deathDate ?date2 .
}
```",5,7,6,3,2,3,3,71,0,0,4,0,0.0,0
579,15,val,"Give me the native of the residence, that is English and a settlement, of the resident of Scotland and person born as Isobel Jane Miller Richard.","SELECT ?result WHERE { ?result <http://dbpedia.org/property/birthName> ""Isobel Jane Miller Richard""@en . ?result <http://dbpedia.org/ontology/birthPlace> ?v1 . ?v0 <http://dbpedia.org/property/residence> ?v1 . ?v0 <http://dbpedia.org/ontology/residence> <http://dbpedia.org/resource/Scotland> . ?v1 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/United_Kingdom>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. }","```sparql
SELECT ?nativeLanguage WHERE {
  ?person foaf:name ""Isobel Jane Miller Richard""@en .
  ?person dbo:birthPlace ?birthPlace .
  ?person dbo:residence ?residence .
  
  FILTER(?residence a dbo:Settlement)
  FILTER(CONTAINS(LCASE(STR(?residence)), ""england""))

  ?residence dbo:nativeLanguage ?nativeLanguage .
}
```",4,6,5,3,2,3,2,20,0,0,1,0,0.0,0
826,45,val,"Give me the successor of Louis II, Grand Duke of Hesse and spouse of Anna Magdalena Appel and predecessor of the parent of the child of Louis IV, Grand Duke of Hesse.","SELECT ?result WHERE { ?v0 <http://dbpedia.org/ontology/parent> <http://dbpedia.org/resource/Louis_IV,_Grand_Duke_of_Hesse> . ?result <http://dbpedia.org/ontology/successor> ?v1 . <http://dbpedia.org/resource/Louis_II,_Grand_Duke_of_Hesse> <http://dbpedia.org/ontology/successor> ?result . <http://dbpedia.org/resource/Anna_Magdalena_Appel> <http://dbpedia.org/ontology/spouse> ?result . ?v0 <http://dbpedia.org/ontology/parent> ?v1 . }","```sparql
SELECT ?successor WHERE {
  wd:Q1234567 wdt:P39 wd:Q7890123 . # Louis II's successor
  BIND(wd:Q7890123 AS ?successor)
}
UNION
SELECT ?predecessor WHERE {
  wd:Q3456789 wdt:P22 wd:Q5678901 . # Parent of Alice (Louis III)
  wd:Q5678901 wdt:P1365 ?parent . # Louis III's predecessor
  BIND(?parent AS ?predecessor)
}
FILTER (?successor = ?predecessor)
```

Note: Replace `wd:Q1234567` with the actual DBpedia ID for Louis II, Grand Duke of Hesse, and similarly replace other placeholders with their respective IDs.",5,5,6,3,3,3,3,71,0,0,1,0,0.0,0
892,47,val,Give me the entity in the profession of Henri Crolla and landmark at elevation of the award of the member of E-girls.,SELECT ?result WHERE { <http://dbpedia.org/resource/E-girls> <http://dbpedia.org/ontology/bandMember> ?v0 . ?result <http://dbpedia.org/ontology/elevation> ?v3 . ?result <http://dbpedia.org/ontology/country> ?v1 . <http://dbpedia.org/resource/Henri_Crolla> <http://dbpedia.org/property/occupation> ?v1 . ?v0 <http://dbpedia.org/property/awards> ?v3 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?profession ?landmark ?elevation WHERE {
  # Henri Crolla's profession
  dbr:Henri_Crolla dbo:occupation ?profession .

  # E-girls member and their award
  OPTIONAL {
    ?member dbo:memberOf dbr:E-girls .
    ?award dbo:recipient ?member .
    
    # Landmark associated with the award
    ?award dbo:location ?landmark .
    
    # Elevation of the landmark
    ?landmark dbo:elevationAboveSeaLevel ?elevation .
  }
}
```",5,5,6,3,2,3,3,71,0,1,11,0.0,0.0,0
826,47,val,"Give me the spouse of the child of Johann Heinrich Appel and successor of the child, that is a royalty, of the reference, that is a royalty, to Louis I.","SELECT ?result WHERE { ?v2 <http://dbpedia.org/property/father> ""Johann Heinrich Appel""@en . ?v0 <http://xmlns.com/foaf/0.1/name> ""Louis I""@en . ?v4 <http://dbpedia.org/ontology/successor> ?result . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v0 <http://dbpedia.org/ontology/child> ?v4 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v2 <http://dbpedia.org/ontology/spouse> ?result . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?spouse ?successor WHERE {
  # Find Johann Heinrich Appel's child
  ?child dbo:parent dbr:Johann_Heinrich_Appel .
  
  # Find the spouse of that child
  ?spouse dbo:spouse ?child .

  # Find successors who are royalty and connected to Louis I
  ?successor dbo:parent ?child ;
            a dbo:Monarch ;
            dbo:reigns dbr:Louis_I_of_Bavaria .
}
```",5,7,6,3,2,3,3,71,0,0,1,0,0.0,0
791,40,val,"Give me the father of Emperor Go-Toba and predecessor of Emperor Antoku and spouse of the spouse, that is a royalty, of the reference to Emperor Takakura.","SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v2 <http://xmlns.com/foaf/0.1/name> ""Emperor Takakura""@en . ?v1 <http://dbpedia.org/ontology/spouse> ?v2 . ?result <http://dbpedia.org/ontology/successor> <http://dbpedia.org/resource/Emperor_Antoku> . <http://dbpedia.org/resource/Emperor_Go-Toba> <http://dbpedia.org/property/father> ?result . ?result <http://dbpedia.org/ontology/spouse> ?v1 . }","```sparql
SELECT ?person WHERE {
  # Find Emperor Go-Toba's father
  ?goToba dbo:father ?father .
  VALUES ?goToba { dbr:Emperor_Go-Toba }
  
  # Find Emperor Antoku's predecessor (Go-Toba)
  ?antoku dbo:predecessor ?predecessor .
  VALUES ?antoku { dbr:Emperor_Antoku }
  
  # Check if the father of Go-Toba is also the predecessor of Antoku
  FILTER (?father = ?predecessor)

  # Find Emperor Takakura's spouse (Shikishi Naishinnō)
  ?takakura dbo:spouse ?spouse .
  VALUES ?takakura { dbr:Emperor_Takakura }
  
  # Check if the father of Go-Toba is also Emperor Takakura
  FILTER (?father = ?takakura)

  # Return the person who satisfies all conditions
  BIND(?father AS ?person)
}
```",5,6,6,3,3,3,3,71,0,0,1,0,0.0,0
573,54,val,"Give me the person decedent at the administration, that is a region, of Charlie Baker and person decedent at the residence, that is a settlement, of the professional, that is American, in Politician and parent of John Quincy Adams.","SELECT ?result WHERE { ?v0 <http://dbpedia.org/ontology/nationality> <http://dbpedia.org/resource/United_States>. ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. ?result <http://dbpedia.org/ontology/deathPlace> ?v5 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Region>. ?v0 <http://dbpedia.org/property/residence> ?v5 . ?result <http://dbpedia.org/ontology/deathPlace> ?v3 . <http://dbpedia.org/resource/John_Quincy_Adams> <http://dbpedia.org/ontology/parent> ?result . ?v3 <http://dbpedia.org/property/governor> ""Charlie Baker""@en . ?v0 <http://dbpedia.org/property/occupation> ""Politician""@en . }","```sparql
# Step 1: Find Charlie Baker's administration (Massachusetts)
SELECT ?state WHERE {
  ?governor dbo:office ""Governor of Massachusetts""@en .
  ?governor foaf:name ""Charlie Baker""@en .
}

# Step 2: Find a notable person buried in Massachusetts
SELECT DISTINCT ?personDecedent WHERE {
  ?personDecedent dbo:deathPlace ?place .
  ?place rdfs:label ?stateLabel .
  FILTER(CONTAINS(LCASE(?stateLabel), ""massachusetts""))
  ?personDecedent dbo:occupation dbr:Politician .
}

# Step 3: Identify John Quincy Adams' parent (John Adams)
SELECT DISTINCT ?parent WHERE {
  ?child foaf:name ""John Quincy Adams""@en ;
         dbo:parent ?parent .
  ?parent foaf:name ""John Adams""@en .
}

# Step 4: Determine the residence of John Adams
SELECT DISTINCT ?residence WHERE {
  ?personDecedent foaf:name ""John Adams""@en .
  ?personDecedent dbo:residence ?residence .
}

# Step 5: Find a notable person buried in Quincy, Massachusetts
SELECT DISTINCT ?personDecedent WHERE {
  ?personDecedent dbo:deathPlace ?place .
  ?place rdfs:label ""Quincy, Massachusetts""@en .
}
```",6,9,7,3,3,3,3,71,0,0,2,0,0.0,0
976,42,val,"Give me the office of the person born as Mehmet Naci Bostancı and office of Meral Akşener and office of the leader, that is a politician, of Grand National Assembly of Turkey.","SELECT ?result WHERE { ?v0 <http://dbpedia.org/property/office> ?result . ?v1 <http://dbpedia.org/property/office> ?result . <http://dbpedia.org/resource/Grand_National_Assembly_of_Turkey> <http://dbpedia.org/ontology/leader> ?v1 . <http://dbpedia.org/resource/Meral_Akşener> <http://dbpedia.org/property/office> ?result . ?v0 <http://dbpedia.org/property/birthName> ""Mehmet Naci Bostancı""@en . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. }","```sparql
# Query for Mehmet Naci Bostancı's office
SELECT ?office WHERE {
  ?person foaf:name ""Mehmet Naci Bostancı""@en .
  OPTIONAL { ?person dbo:birthName ?birthName . }
  ?person dbo:positionHeld ?position .
  ?position dbo:office ?office .
}

# Query for Meral Akşener's office
SELECT ?office WHERE {
  ?person foaf:name ""Meral Akşener""@en .
  ?person dbo:positionHeld ?position .
  ?position dbo:office ?office .
}

# Query for the leader of the Grand National Assembly of Turkey (Speaker)
SELECT ?office WHERE {
  ?assembly dcterms:title ""Grand National Assembly of Turkey""@en .
  ?assembly dbo:leader ?speaker .
  ?speaker dbo:positionHeld ?position .
  ?position dbo:office ?office .
}
```",5,6,6,2,3,3,3,71,0,0,1,0,0.0,0
715,47,val,"Give me the commander in the force of the mayor, that is an office holder and a politician and a president, of 1933 Spanish general election and commander in the force, that is a military conflict, of Abd el-Krim.",SELECT ?result WHERE { ?v4 <http://dbpedia.org/ontology/commander> ?result . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v2 <http://dbpedia.org/ontology/commander> ?result . <http://dbpedia.org/resource/1933_Spanish_general_election> <http://dbpedia.org/property/leader> ?v0 . ?v4 <http://dbpedia.org/ontology/commander> ?v0 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v2 <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Abd_el-Krim> . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/President>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. },"```sparql
# Query to find the commander in the force of the mayor (president) in the 1933 Spanish general election
SELECT ?person WHERE {
  ?person dbo:officeHolderOf dbr:President_of_Spain.
  ?person dbo:termStartYear ""1933""^^xsd:gYear.
  ?person a dbo:Politician .
}

UNION

# Query to find the commander in the force of Abd el-Krim
SELECT ?commander WHERE {
  ?conflict dbo:participatedIn dbr:Rif_War.
  ?conflict dbo:commandedBy ?commander.
  ?conflict dbo:opponent dbr:Abd_el-Krim .
}
```",5,9,6,3,2,3,3,71,0,0,4,0,0.0,0
124,50,val,"Give me the military force of the war, that is an event and a military conflict and a societal event, of the awardee of British South Africa Company Medal and military force of the force, that is a societal event and a military conflict, of Herbert Kitchener, 1st Earl Kitchener.","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/battle> ?v3 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?v0 <http://dbpedia.org/ontology/battle> ?v4 . ?result <http://dbpedia.org/ontology/battle> ?v4 . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v0 <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/British_South_Africa_Company_Medal> . ?v3 <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Herbert_Kitchener,_1st_Earl_Kitchener> . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?militaryForce WHERE {
  # British South Africa Company Medal associated military force/event
  ?medal dbo:awardedBy ?force1 .
  ?force1 rdf:type dbo:MilitaryConflict ;
          dbo:eventType ?eventType1 .

  FILTER(?eventType1 IN (dbr:Event, dbr:Military_conflict, dbr:Societal_event))

  # Herbert Kitchener associated military force/event
  ?kitchener dbo:associatedWith ?force2 .
  ?force2 rdf:type dbo:MilitaryConflict ;
          dbo:eventType ?eventType2 .

  FILTER(?eventType2 IN (dbr:Societal_event, dbr:Military_conflict))

  # Common military force
  ?militaryForce dbo:participatedIn ?force1, ?force2 .
}
```",5,10,6,3,2,3,3,71,0,0,1085,0,0.0,0
216,45,val,"Give me the player in Mario Ivanković and player in Igor Bišćan and team of the person born, that is a sports manager and a soccer manager and a soccer player, on the death of Pavel Vezhinov.",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/coach> ?v1 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerManager>. <http://dbpedia.org/resource/Igor_Bišćan> <http://dbpedia.org/ontology/team> ?result . ?v1 <http://dbpedia.org/ontology/birthDate> ?v0 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsManager>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerPlayer>. <http://dbpedia.org/resource/Pavel_Vezhinov> <http://dbpedia.org/ontology/deathDate> ?v0 . <http://dbpedia.org/resource/Mario_Ivanković> <http://dbpedia.org/ontology/team> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?player1Team ?player2Team ?person ?personTeam WHERE {
  # Find teams for Mario Ivanković and Igor Bišćan
  OPTIONAL { 
    dbr:Mario_Ivanković dbo:team ?player1Team .
  }
  OPTIONAL { 
    dbr:Igor_Bišćan dbo:team ?player2Team .
  }

  # Find a person born on March 5, 2013, who is a sports manager and soccer player
  ?person dbo:birthDate ""2013-03-05""^^xsd:date ;
          rdf:type dbo:SoccerManager ;
          rdf:type dbo:SportsManager ;
          rdf:type dbo:SoccerPlayer .

  # Find the team of this person
  OPTIONAL { 
    ?person dbo:team ?personTeam .
  }

  # Filter to ensure the person is a soccer manager and player
  FILTER EXISTS { ?person rdf:type dbo:SoccerManager }
  FILTER EXISTS { ?person rdf:type dbo:SoccerPlayer }
}
```",5,8,6,3,3,3,3,71,0,0,1,0,0.0,0
892,49,val,"Give me the entity in the profession of Henri Crolla and entity in the administration, that is Italian and a region and a settlement and an administrative region, of the party, that is a political party and an organisation, of Andrea Cozzolino.",SELECT ?result WHERE { <http://dbpedia.org/resource/Henri_Crolla> <http://dbpedia.org/property/occupation> ?v2 . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/PoliticalParty>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/AdministrativeRegion>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. <http://dbpedia.org/resource/Andrea_Cozzolino> <http://dbpedia.org/ontology/party> ?v4 . ?result <http://dbpedia.org/ontology/province> ?v0 . ?result <http://dbpedia.org/ontology/country> ?v2 . ?v0 <http://dbpedia.org/property/leaderParty> ?v4 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Region>. ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?v0 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Italy>. },"```sparql
# Step 1: Get Henri Crolla's Profession
SELECT ?profession WHERE {
    wd:Q123456 a dbo:Person .
    ?person wdt:P106 ?occupation .
    ?occupation rdfs:label ?profession .
    FILTER (lang(?profession) = ""en"")
} LIMIT 1

# Step 2: Get Andrea Cozzolino's Party
SELECT ?party WHERE {
    wd:Q654321 a dbo:Person .
    ?person wdt:P102 ?party .
    ?party rdfs:label ?partyLabel .
    FILTER (lang(?partyLabel) = ""en"")
} LIMIT 1

# Step 3: Get Italian Regions, Settlements, and Administrative Regions associated with the Party
SELECT DISTINCT ?region ?settlement WHERE {
    ?party wdt:P131* ?location .
    ?location a dbo:AdministrativeRegion ;
              rdfs:label ?regionLabel .
    OPTIONAL { 
        ?location a dbo:Settlement ;
                  rdfs:label ?settlementLabel .
    }
    FILTER (lang(?regionLabel) = ""en"" && lang(?settlementLabel) = ""en"")
    FILTER CONTAINS(LCASE(?regionLabel), ""italy"") || CONTAINS(LCASE(?settlementLabel), ""italy"")
} LIMIT 10
```

Note: Replace `wd:Q123456` with the actual DBpedia ID for Henri Crolla and `wd:Q654321` with the DBpedia ID for Andrea Cozzolino.",5,11,6,3,2,3,3,71,0,0,587,0,0.0,0
47,53,val,"Give me the office of the administration of the commander, that is a politician, in Operation Green Hunt and office of the awardee of Padma Vibhushan and office of Bidesh Ranjan Bose.",SELECT ?result WHERE { ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. <http://dbpedia.org/resource/Operation_Green_Hunt> <http://dbpedia.org/ontology/commander> ?v3 . ?v1 <http://dbpedia.org/property/office> ?result . ?v2 <http://dbpedia.org/property/governor> ?v3 . <http://dbpedia.org/resource/Bidesh_Ranjan_Bose> <http://dbpedia.org/property/office> ?result . ?v2 <http://dbpedia.org/property/office> ?result . ?v1 <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/Padma_Vibhushan> . },"```sparql
# Query for the commander in Operation Green Hunt
SELECT ?person ?office WHERE {
  ?operation dbo:wikiPageRedirects db:Operation_Green_Hunt .
  ?operation dbo:participant ?person .
  ?person rdf:type dbo:Politician .
  ?person dbo:officeHeld ?office .
}

UNION

# Query for the awardee of Padma Vibhushan
SELECT ?person ?awardOffice WHERE {
  ?person dbo:honoraryTitle db:Padma_Vibhushan .
  OPTIONAL { ?person dbo:officeHeld ?awardOffice }
}

UNION

# Query for Bidesh Ranjan Bose's office
SELECT ?bosesOffice WHERE {
  db:Bidesh_Ranjan_Bose dbo:officeHeld ?bosesOffice .
}
```",6,7,7,3,3,3,3,71,0,0,1,0,0.0,0
232,7,val,"Give me the claim to fame of Katherine ""Kitty"" Marshall and artistic movement of the person born, that is a writer, on 1849-09-14.","SELECT ?result WHERE { <http://dbpedia.org/resource/Katherine_%22Kitty%22_Marshall> <http://dbpedia.org/ontology/knownFor> ?result . ?v0 <http://dbpedia.org/ontology/birthDate> ""1849-09-14""^^<http://www.w3.org/2001/XMLSchema#date> . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Writer>. ?v0 <http://dbpedia.org/ontology/movement> ?result . }","```sparql
# Query to get the claim to fame of Katherine ""Kitty"" Marshall
SELECT ?claimToFame WHERE {
  ?person foaf:name ""Katherine 'Kitty' Marshall""@en .
  OPTIONAL { ?person dbo:occupation ?occupation . }
  OPTIONAL { ?person dbo:notableWork ?notableWork . }
  BIND(CONCAT(""Occupation: "", ?occupation, ""; Notable Work: "", ?notableWork) AS ?claimToFame)
}

UNION

# Query to get the artistic movement of a writer born on September 14, 1849
SELECT ?artisticMovement WHERE {
  ?person dbo:birthDate ""1849-09-14""^^xsd:date .
  ?person dbo:occupation dbp:Writer .
  OPTIONAL { ?person dbo:associatedArtMovement ?artisticMovement . }
}
```",3,4,4,2,2,2,2,9,0,0,1,0,0.0,0
987,52,val,"Give me the birth place of the band, that is an artist and a musical artist, of the band, that is an artist, of Dado Polumenta and entity in Montenegro and birth place of the actor of All for Free.",SELECT ?result WHERE { ?v3 <http://dbpedia.org/ontology/associatedMusicalArtist> ?v1 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?result <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Montenegro> . <http://dbpedia.org/resource/All_for_Free> <http://dbpedia.org/property/starring> ?v4 . ?v1 <http://dbpedia.org/ontology/birthPlace> ?result . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. ?v4 <http://dbpedia.org/ontology/birthPlace> ?result . <http://dbpedia.org/resource/Dado_Polumenta> <http://dbpedia.org/ontology/associatedMusicalArtist> ?v3 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. },"```sparql
# Step 1: Find Dado Prljaca's band
SELECT ?band WHERE {
  wd:Q123456 a dbo:Band ;
             dbo:member wd:Q789012 . # Assuming Q789012 is Dado Prljaca
}

# Step 2: Find the main artist of Zabranjeto Pušenje
SELECT ?artist WHERE {
  wd:Q345678 a dbo:MusicalArtist ; # Assuming Q345678 is Zabranjeno Pušenje
              dbo:member wd:Q789012 .
}

# Step 3: Find the birthplace of Goran Bregović
SELECT ?birthPlaceLabel WHERE {
  wd:Q987654 dbo:birthPlace ?birthPlace . # Assuming Q987654 is Goran Bregović
  SERVICE wikibase:label { bd:serviceParam wikibase:language ""en"". }
}

# Step 4: Find the actor in ""All for Free""
SELECT ?actor WHERE {
  wd:Q678901 dbo:castMember ?actor . # Assuming Q678901 is All for Free
}

# Step 5: Find the birthplace of Miki Manojlović
SELECT ?birthPlaceLabel WHERE {
  wd:Q876543 dbo:birthPlace ?birthPlace . # Assuming Q876543 is Miki Manojlović
  SERVICE wikibase:label { bd:serviceParam wikibase:language ""en"". }
}
```",6,9,7,3,3,3,3,71,0,0,1,0,0.0,0
926,49,val,"Give me the father of the father of Abdulaziz and child of the father, that is a royalty, of the parent, that is a royalty, of Beyhan Sultan (daughter of Mustafa III).",SELECT ?result WHERE { ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. <http://dbpedia.org/resource/Beyhan_Sultan_(daughter_of_Mustafa_III)> <http://dbpedia.org/ontology/parent> ?v4 . ?v2 <http://dbpedia.org/property/father> ?result . ?v4 <http://dbpedia.org/property/father> ?v0 . <http://dbpedia.org/resource/Abdulaziz> <http://dbpedia.org/property/father> ?v2 . ?v0 <http://dbpedia.org/ontology/child> ?result . },"```sparql
# Step 1: Find Abdulaziz Ibn Saud's father
SELECT ?father WHERE {
  wd:Q1596 wdt:P22 ?father .
}

# Step 2: Find the father of Abdul Rahman bin Faisal Al Saud
SELECT ?grandFather WHERE {
  ?father wdt:P22 ?grandFather .
  FILTER(?father = <URI_of_Abdul_Rahman_bin_Faisal_Al_Saud>)
}

# Step 3: Find a child of Faisal bin Turki Al Saud who is royalty
SELECT ?child WHERE {
  ?grandFather wdt:P40 ?child .
  ?child wdt:P31 wd:Q33999 . # Instance of Monarch
}

# Step 4: Identify Mustafa III's children who are royalty
SELECT ?child WHERE {
  wd:Q1523 wdt:P40 ?child .
  ?child wdt:P31 wd:Q33999 . # Instance of Monarch
}

# Note: Replace <URI_of_Abdul_Rahman_bin_Faisal_Al_Saud> with the actual URI for Abdul Rahman bin Faisal Al Saud.
```",5,7,6,3,2,3,3,71,0,0,1,0,0.0,0
976,48,val,"Give me the office of the leader, that is a politician, of the administration, that is an organisation, of Kemal Kılıçdaroğlu and office of the person born as Mehmet Naci Bostancı.","SELECT ?result WHERE { ?v0 <http://dbpedia.org/property/office> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v0 <http://dbpedia.org/property/birthName> ""Mehmet Naci Bostancı""@en . ?v3 <http://dbpedia.org/ontology/leader> ?v1 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?v3 <http://dbpedia.org/property/leader> <http://dbpedia.org/resource/Kemal_Kılıçdaroğlu> . ?v1 <http://dbpedia.org/property/office> ?result . }","```sparql
# Query for Kemal Kılıçdaroğlu's office in the administration of an organization
SELECT ?office WHERE {
  ?person foaf:name ""Kemal Kılıçdaroğlu""@en .
  ?person dbo:positionHeld ?position .
  ?position dbo:organization ?organization .
  ?position dbo:title ?office .
}

UNION

# Query for Mehmet Naci Bostancı's office
SELECT ?office WHERE {
  ?person foaf:name ""Mehmet Naci Bostancı""@en .
  ?person dbo:birthName ""Mehmet Naci Bostancı""@en .
  ?person dbo:positionHeld ?position .
  ?position dbo:title ?office .
}
```",5,7,6,3,2,3,3,71,0,0,1,0,0.0,0
216,20,val,Give me the administration of  and office of Tim Nicholls and party of the awardee of Australian Defence Medal.,"SELECT ?result WHERE { <http://dbpedia.org/resource/Tim_Nicholls> <http://dbpedia.org/property/office> ?result . ?v3 <http://dbpedia.org/ontology/party> ?result . ?result <http://dbpedia.org/property/leader> """"@en . ?v3 <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/Australian_Defence_Medal> . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?administration ?office ?party WHERE {
  VALUES ?tim_nicholls { dbr:Tim_Nicholls }
  
  OPTIONAL {
    ?tim_nicholls dbo:memberOf ?administration .
  }

  OPTIONAL {
    ?tim_nicholls dbo:positionHeld ?office .
  }

  OPTIONAL {
    ?tim_nicholls dbo:partyAffiliation ?party .
  }
}
```",4,4,5,2,3,2,3,28,0,0,1,0,0.0,0
582,51,val,"Give me the player in the father, that is an athlete and a soccer manager and a sports manager, of Masami Nagasawa and figure known as the nickname of the team, that is an organisation, of Hajime Moriyasu.",SELECT ?result WHERE { ?result <http://dbpedia.org/property/nickname> ?v2 . ?v4 <http://dbpedia.org/ontology/team> ?result . ?v1 <http://dbpedia.org/ontology/coach> <http://dbpedia.org/resource/Hajime_Moriyasu> . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerManager>. ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Athlete>. ?v1 <http://dbpedia.org/property/nickname> ?v2 . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsManager>. <http://dbpedia.org/resource/Masami_Nagasawa> <http://dbpedia.org/property/father> ?v4 . },"```sparql
# Step 1: Find Masami Nagasawa's father who is an athlete, soccer manager, and sports manager.
SELECT ?father WHERE {
    ?nagasawa dbo:spouse ?person .
    ?person foaf:name ""Masami Nagasawa""@en .
    ?person dbo:parent ?father .
    ?father rdf:type dbo:Athlete ;
            dbo:sportTeamRole dbo:SoccerManager ;
            dbo:sportTeamRole dbo:SportsManager .
}

# Step 2: Find Hajime Moriyasu's team and its nickname.
SELECT ?team ?nickname WHERE {
    ?moriyasu dbo:position ""Head Coach""@en ;
              dbo:organization ?team .
    ?person foaf:name ""Hajime Moriyasu""@en .
    ?person owl:sameAs ?moriyasu .
    ?team dbo:nickname ?nickname .
}

# Step 3: Check if there is any connection between the father and the team's nickname.
SELECT ?father ?nickname WHERE {
    # Subquery for Masami Nagasawa's father
    {
        SELECT ?father WHERE {
            ?nagasawa dbo:spouse ?person .
            ?person foaf:name ""Masami Nagasawa""@en .
            ?person dbo:parent ?father .
            ?father rdf:type dbo:Athlete ;
                    dbo:sportTeamRole dbo:SoccerManager ;
                    dbo:sportTeamRole dbo:SportsManager .
        }
    }
    
    # Subquery for Hajime Moriyasu's team nickname
    {
        SELECT ?nickname WHERE {
            ?moriyasu dbo:position ""Head Coach""@en ;
                      dbo:organization ?team .
            ?person foaf:name ""Hajime Moriyasu""@en .
            ?person owl:sameAs ?moriyasu .
            ?team dbo:nickname ?nickname .
        }
    }

    # Check if the father is related to the nickname
    ?father rdfs:label ?nickname .
}
```",5,9,6,3,2,3,3,71,0,0,1,0,0.0,0
715,45,val,"Give me the leader of the office, that is a government agency and an organisation, of the reference to Carlos Franco Iribarnegaray and commander in Spanish Civil War and commander in Rif War.","SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/GovernmentAgency>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?v1 <http://dbpedia.org/ontology/leader> ?result . ?v0 <http://xmlns.com/foaf/0.1/name> ""Carlos Franco Iribarnegaray""@en . ?v0 <http://dbpedia.org/property/office> ?v1 . <http://dbpedia.org/resource/Spanish_Civil_War> <http://dbpedia.org/ontology/commander> ?result . <http://dbpedia.org/resource/Rif_War> <http://dbpedia.org/ontology/commander> ?result . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?leader WHERE {
  ?office dbo:type dbr:Government_agency .
  ?office dbo:type dbr:Organization .
  ?office dbo:head ?leader .
  ?leader foaf:name ""Carlos Franco Iribarnegaray""@en .
}
```",5,7,6,3,3,3,3,71,0,0,1,0,0.0,0
158,15,val,"Give me the party of Théodore Steeg and entity in the award, that is a country, of the reference to Adelbert Cronkhite.","SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. ?v0 <http://dbpedia.org/property/awards> ?v1 . ?v0 <http://xmlns.com/foaf/0.1/name> ""Adelbert Cronkhite""@en . ?result <http://dbpedia.org/ontology/country> ?v1 . <http://dbpedia.org/resource/Théodore_Steeg> <http://dbpedia.org/ontology/party> ?result . }","```sparql
SELECT ?party WHERE {
  ?steeg dbo:birthName ""Théodore Steeg""@en .
  ?steeg dbo:partyAffiliation ?party .
}

UNION

SELECT DISTINCT ?country WHERE {
  ?cronkhite dbo:name ""Adelbert Cronkhite""@en .
  ?award dbo:recipient ?cronkhite ;
         dbo:awardedBy|dbo:givenTo ?entity .
  ?entity a ?type .
  OPTIONAL { ?entity dbo:country ?country . }
  FILTER(?type IN (dbpedia-owl:Award, dbpedia-owl:Honor)) 
}
```",4,5,5,3,2,3,2,20,0,0,1,0,0.0,0
129,20,val,"Give me the professional in  and associated musical artist of Saba (rapper) and associated musical artist of the actor, that is an organisation, of Dreamville Presents: Revenge.","SELECT ?result WHERE { <http://dbpedia.org/resource/Saba_(rapper)> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?result <http://dbpedia.org/property/occupation> """"@en . ?v3 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . <http://dbpedia.org/resource/Dreamville_Presents:_Revenge> <http://dbpedia.org/property/starring> ?v3 . }","```sparql
# Query to find Saba's associated musical artist (J. Cole)
SELECT ?artist WHERE {
  wd:Q1056982 dbo:associatedMusicalArtist ?artist .
}

UNION

# Query to find the actor/organization involved in ""Dreamville Presents: Revenge"" and their associated musical artist (21 Savage)
SELECT ?artist WHERE {
  # Assuming J. Cole is the organization behind Dreamville
  wd:Q1066560 dbo:associatedMusicalArtist ?artist .
}
```",4,5,5,2,3,2,3,28,0,0,1,0,0.0,0
791,46,val,"Give me the predecessor of the child of Emperor Takakura and spouse of the spouse, that is a royalty, of the reference to Emperor Takakura.","SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?result <http://dbpedia.org/ontology/successor> ?v4 . ?v4 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Emperor_Takakura> . ?v2 <http://xmlns.com/foaf/0.1/name> ""Emperor Takakura""@en . ?v1 <http://dbpedia.org/ontology/spouse> ?v2 . ?result <http://dbpedia.org/ontology/spouse> ?v1 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?spouseOfSpouse WHERE {
  # Step 1: Find Emperor Takakura's child
  ?child dbo:parent dbr:Takakura_Emperor ;
         a dbo:Monarch .

  # Step 2: Find the predecessor of that child (previous emperor)
  ?predecessor dbo:succeededBy ?child ;
               a dbo:Monarch .

  # Step 3: Find the spouse of this predecessor
  ?spouseOfPredecessor dbo:spouse ?predecessor ;
                      a dbo:Person .

  # Step 4: Find the spouse of that spouse (ensuring they are royalty)
  ?spouseOfSpouse dbo:spouse ?spouseOfPredecessor ;
                  a dbo:Monarch .
}
```",5,6,6,3,2,3,3,71,0,0,1,0,0.0,0
216,22,val,Give me the office of the mayor of Ros Bates and party of the awardee of Australian Defence Medal.,SELECT ?result WHERE { ?v3 <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/Australian_Defence_Medal> . ?v2 <http://dbpedia.org/property/office> ?result . <http://dbpedia.org/resource/Ros_Bates> <http://dbpedia.org/property/leader> ?v2 . ?v3 <http://dbpedia.org/ontology/party> ?result . },"```sparql
# Query to get the office of Ros Bates
SELECT ?office WHERE {
  wd:Q1234568 dbo:occupation ?office .
  FILTER(CONTAINS(LCASE(STR(?office)), ""mayor""))
}

# Query to find awardees of the Australian Defence Medal and their party affiliation
SELECT DISTINCT ?person ?party WHERE {
  ?award wdt:P31/wdt:P279* wd:Q1234567 ; # Q1234567 is a placeholder for the Australian Defence Medal entity
         wdt:P921 ?person .
  OPTIONAL { 
    ?person dbo:politicalParty ?party .
  }
}
```

Note: Replace `wd:Q1234568` with the actual DBpedia identifier for Ros Bates and `wd:Q1234567` with the correct identifier for the Australian Defence Medal.",4,4,5,2,2,2,3,28,0,0,2,0,0.0,0
507,41,val,"Give me the director of the movie, that is a movie and a work, with Beryl Reid and spouse of the person born as Anne Voase Coates and professional in Film director, television director.","SELECT ?result WHERE { ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Film>. ?v4 <http://dbpedia.org/ontology/director> ?result . ?v2 <http://dbpedia.org/property/birthName> ""Anne Voase Coates""@en . ?result <http://dbpedia.org/property/occupation> ""Film director, television director""@en . ?v4 <http://dbpedia.org/property/starring> <http://dbpedia.org/resource/Beryl_Reid> . ?result <http://dbpedia.org/ontology/spouse> ?v2 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?movie ?director WHERE {
  # Anne Voase Coates' spouse who is a director
  dbr:Anne_Voase_Coates dbo:spouse dbr:Sidney_Cole .
  
  # Sidney Cole's director role
  dbr:Sidney_Cole dbo:profession dbr:Film_director .

  # Beryl Reid's movies
  ?movie dbo:starring dbr:Beryl_Reid .
  
  # Movie directed by Sidney Cole
  ?movie dbo:director dbr:Sidney_Cole .
  
  # Ensure the movie is a work and has a director
  ?movie rdf:type dbo:Film .
}
```",5,7,6,2,3,3,3,71,0,0,1,0,0.0,0
267,15,val,"Give me the person born on 1953-03-01 and coach of the player, that is a soccer club, in the manager of 2020–21 Tractor S.C. season.","SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/coach> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerClub>. <http://dbpedia.org/resource/2020–21_Tractor_S.C._season> <http://dbpedia.org/ontology/manager> ?v0 . ?v0 <http://dbpedia.org/ontology/team> ?v1 . ?result <http://dbpedia.org/ontology/birthDate> ""1953-03-01""^^<http://www.w3.org/2001/XMLSchema#date> . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?manager WHERE {
    ?manager dbo:position ""coach""@en .
    ?manager dbo:birthDate ""1953-03-01""^^xsd:date .
    ?team dbo:manager ?manager ;
          rdfs:label ""Tractor S.C.""@en .
    FILTER (YEAR(?team.dbp:seasonStart) = 2020 && YEAR(?team.dbp:seasonEnd) = 2021)
}
```",4,5,5,3,2,3,2,20,0,0,1,0,0.0,0
865,55,val,"Give me the native of the residence, that is a country, of Ram Jaipal Singh Yadav and father of the child of Abu Ahmad Abdul Hafiz and father of the child, that is a politician, of Abu Ahmad Abdul Hafiz.",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/birthPlace> ?v0 . ?v3 <http://dbpedia.org/property/father> ?result . <http://dbpedia.org/resource/Ram_Jaipal_Singh_Yadav> <http://dbpedia.org/property/residence> ?v0 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v4 <http://dbpedia.org/property/father> ?result . ?v3 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Abu_Ahmad_Abdul_Hafiz> . ?v4 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Abu_Ahmad_Abdul_Hafiz> . },"```sparql
# Step 1: Find Ram Jaipal Singh Yadav's residence country
SELECT ?residenceCountry WHERE {
  ?person dbo:name ""Ram Jaipal Singh Yadav""@en .
  ?person dbo:countryOfCitizenship ?residenceCountry .
}

# Step 2: Identify Abu Ahmad Abdul Hafiz's child who is a politician
SELECT DISTINCT ?child WHERE {
  ?hafiz dbo:spouse ?partner .
  ?hafiz dbo:child ?child .
  ?child rdf:type dbo:Politician .
  FILTER(CONTAINS(LCASE(?hafiz), ""abu ahmad abdul hafiz""))
}

# Step 3: Confirm Abu Ahmad Abdul Hafiz is the father of this child
SELECT DISTINCT ?father WHERE {
  ?child dbo:parent ?father .
  ?father rdfs:label ""Abu Ahmad Abdul Hafiz""@en .
}

# Step 4: Find the native place of Abu Ahmad Abdul Hafiz
SELECT ?nativePlace WHERE {
  ?hafiz dbo:nativePlace ?nativePlace .
  FILTER(CONTAINS(LCASE(?hafiz), ""abu ahmad abdul hafiz""))
}
```",6,8,7,2,3,3,3,71,0,0,1,0,0.0,0
645,45,val,"Give me the military force of Spanish Civil War and commander in Battle of Jarama and leader of the office, that is a government agency and an organisation, of the native of Restoration (Spain).",SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/leader> ?result . ?v0 <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Restoration_(Spain)> . ?v0 <http://dbpedia.org/property/office> ?v1 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/GovernmentAgency>. <http://dbpedia.org/resource/Battle_of_Jarama> <http://dbpedia.org/ontology/commander> ?result . ?result <http://dbpedia.org/ontology/battle> <http://dbpedia.org/resource/Spanish_Civil_War> . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. },"```sparql
# Query to get military force and commander in the Battle of Jarama
SELECT ?militaryForce ?commander WHERE {
  ?battle dbpedia-owl:wikiPageRedirects dbc:Battle_of_Jarama .
  ?battle dbo:militaryConflicts ?conflict .
  ?conflict dbo:participatingMilitaryUnit ?militaryForce .
  OPTIONAL { 
    ?militaryForce dbo:commander ?commander .
  }
}

# Query to get leader of a government agency or organization native to Restoration (Spain)
SELECT ?leader ?agency WHERE {
  ?person dbo:nationality dbc:Restoration_(Spain) .
  ?person dbo:occupation ?occupation .
  FILTER(CONTAINS(LCASE(?occupation), ""government"") || CONTAINS(LCASE(?occupation), ""organization"")) .
  ?person dbo:headOf ?agency .
  OPTIONAL { 
    ?agency dbo:leader ?leader .
  }
}
```",5,7,6,3,3,3,3,71,0,0,1,0,0.0,0
987,44,val,"Give me the birth place of Dado Polumenta and birth place of the actor of All for Free and entity in the region, that is a country, of Central European Time.",SELECT ?result WHERE { <http://dbpedia.org/resource/Dado_Polumenta> <http://dbpedia.org/ontology/birthPlace> ?result . ?v0 <http://dbpedia.org/property/timeZone> <http://dbpedia.org/resource/Central_European_Time> . ?result <http://dbpedia.org/ontology/country> ?v0 . <http://dbpedia.org/resource/All_for_Free> <http://dbpedia.org/property/starring> ?v4 . ?v4 <http://dbpedia.org/ontology/birthPlace> ?result . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. },"```sparql
# Query to find the birthplace of Dado Povolny
SELECT ?birthPlace WHERE {
  wd:Q123456 wdt:P19 ?birthPlace .
}

# Query to find the main actor(s) of ""All for Free"" and their birthplaces
SELECT DISTINCT ?actor ?birthPlace WHERE {
  wd:Q789012 dbo:starring ?actor .
  ?actor wdt:P19 ?birthPlace .
}

# Query to find a country in the Central European Time zone
SELECT ?country WHERE {
  ?country wdt:P421 wd:Q11111 . # Q11111 is the DBpedia item for Central European Time
}
```

Note: Replace `wd:Q123456` with the actual DBpedia ID for Dado Povolny and `wd:Q789012` with the DBpedia ID for ""All for Free"". The ID `wd:Q11111` represents the Central European Time zone in DBpedia.",5,6,6,2,3,3,3,71,0,0,1,0,0.0,0
216,51,val,"Give me the player in the coach, that is a soccer player and a sports manager and a soccer manager, of Bosnia and Herzegovina national under-18 football team and team of the person born, that is a sports manager and a soccer manager and a soccer player, on the death of Pavel Vezhinov.",SELECT ?result WHERE { ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsManager>. ?result <http://dbpedia.org/ontology/coach> ?v2 . ?v4 <http://dbpedia.org/ontology/team> ?result . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerManager>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerManager>. ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerPlayer>. ?v2 <http://dbpedia.org/ontology/birthDate> ?v1 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerPlayer>. <http://dbpedia.org/resource/Pavel_Vezhinov> <http://dbpedia.org/ontology/deathDate> ?v1 . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsManager>. <http://dbpedia.org/resource/Bosnia_and_Herzegovina_national_under-18_football_team> <http://dbpedia.org/ontology/coach> ?v4 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?player WHERE {
    ?player a dbo:SoccerPlayer .
    ?player a dbo:SportsManager .
    ?player a dbo:SoccerManager .

    # Coach of Bosnia and Herzegovina national under-18 football team
    ?coachship dbo:team dbr:Bosnia_and_Herzegovina_national_under-18_football_team ;
               dbo:agent ?player .

    # Born on the date of Pavel Vezhinov's death (October 5, 2012)
    ?person dbo:birthDate ""2012-10-05""^^xsd:date .
    ?team dbo:member ?person .
    ?coachship dbo:team ?team ;
               dbo:agent ?player .

}
```",5,11,6,3,2,3,3,71,0,0,1,0,0.0,0
773,42,val,"Give me the parent of Carloman of Bavaria and spouse of the father of Charles the Fat and parent of the child, that is a royalty, of Louis the German.",SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v1 <http://dbpedia.org/ontology/parent> ?result . ?v2 <http://dbpedia.org/ontology/spouse> ?result . ?result <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Carloman_of_Bavaria> . <http://dbpedia.org/resource/Charles_the_Fat> <http://dbpedia.org/property/father> ?v2 . ?v1 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Louis_the_German> . },"```sparql
SELECT ?parent ?spouse WHERE {
  # Step 1: Find Carloman of Bavaria's parent
  ?carloman dbo:father ?parent .
  FILTER(STR(?carloman) = ""Carloman_of_Bavaria"")

  # Step 2: Check if this parent is also the father of Charles the Fat
  OPTIONAL { ?charles dbo:father ?parent . }
  FILTER(STR(?charles) = ""Charles_the_Fat"")

  # If true, find the spouse of this parent (father of Charles the Fat)
  OPTIONAL {
    ?spouse dbo:spouse ?parent .
  }

  # Step 3: Find a royal child of Louis the German
  ?louis dbo:child ?royalChild .
  FILTER(STR(?louis) = ""Louis_the_German"")
  ?royalChild rdf:type dbo:Monarch .

  # Step 4: Check if any of these individuals are the same
  OPTIONAL {
    ?parent rdfs:label ?commonLink .
  }
}
```",5,6,6,2,3,3,3,71,0,0,1,0,0.0,0
573,45,val,"Give me the person decedent at Quincy, Massachusetts and person decedent at Massachusetts and parent of the author, that is a politician and an office holder, of the work of John Quincy Adams.","SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v1 <http://dbpedia.org/ontology/parent> ?result . ?v0 <http://dbpedia.org/property/author> ?v1 . ?result <http://dbpedia.org/ontology/deathPlace> <http://dbpedia.org/resource/Massachusetts> . ?result <http://dbpedia.org/ontology/deathPlace> <http://dbpedia.org/resource/Quincy,_Massachusetts> . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v0 <http://dbpedia.org/property/author> <http://dbpedia.org/resource/John_Quincy_Adams> . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT ?personDecedentAtQuincy ?parentPolitician
WHERE {
  # John Quincy Adams decedent at Quincy, Massachusetts
  dbr:John_Quincy_Adams dbo:deathPlace dbr:Quincy,_Massachusetts ;
                        foaf:parent ?parentPolitician .

  # Ensure the parent is a politician and office holder
  ?parentPolitician rdf:type dbo:Politician ;
                    dbo:officeHolder true .
}
```",5,7,6,3,3,3,3,71,0,0,2,0,0.0,0
865,46,val,"Give me the father of the child, that is a politician, of Abu Ahmad Abdul Hafiz and native of the residence, that is a country, of the person decedent at Patna.",SELECT ?result WHERE { ?v3 <http://dbpedia.org/property/father> ?result . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v3 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Abu_Ahmad_Abdul_Hafiz> . ?v1 <http://dbpedia.org/ontology/deathPlace> <http://dbpedia.org/resource/Patna> . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. ?v1 <http://dbpedia.org/property/residence> ?v0 . ?result <http://dbpedia.org/ontology/birthPlace> ?v0 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT DISTINCT ?father WHERE {
  # Step 1: Find Abu Ahmad Abdul Hafiz and his politician child
  ?abuAH a dbo:Person ;
         foaf:name ""Abu Ahmad Abdul Hafiz"" .
  
  ?child dbo:parent ?abuAH ;
         dbo:occupation dbr:Politician .

  # Step 2: Identify the person decedent at Patna and their country of residence
  ?decedent dbo:deathPlace dbr:Patna ;
            dbo:nationality ?countryResidence .
  
  # Step 3: Find the father of the politician child
  ?child dbo:father ?father .
}
```",5,7,6,3,2,3,3,71,0,0,1,0,0.0,0
926,53,val,"Give me the successor of Mustafa III and father of the father of the spouse of Neşerek Kadın and child of the father, that is a royalty, of Mustafa III.",SELECT ?result WHERE { <http://dbpedia.org/resource/Mustafa_III> <http://dbpedia.org/ontology/successor> ?result . ?v0 <http://dbpedia.org/ontology/child> ?result . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. <http://dbpedia.org/resource/Mustafa_III> <http://dbpedia.org/property/father> ?v0 . ?v3 <http://dbpedia.org/property/father> ?v1 . ?v1 <http://dbpedia.org/property/father> ?result . <http://dbpedia.org/resource/Neşerek_Kadın> <http://dbpedia.org/ontology/spouse> ?v3 . },"```sparql
SELECT ?successor WHERE {
  # Step 1: Find Mustafa III's successor
  wd:Q123456 wdt:P39 wd:Q789012 . # Mustafa III (Q123456) succeeded by Q789012

  # Step 2: Identify Neşerek Kadın's spouse
  wd:Q987654 wdt:P26 ?spouse . # Neşerek Kadın (Q987654) has a spouse (?spouse)

  # Step 3: Determine the father of Neşerek Kadın's spouse
  ?spouse wdt:P22 ?fatherOfSpouse .

  # Step 4: Identify Mustafa III's child who is royalty and shares the same father
  wd:Q123456 wdt:P40 ?child . # Mustafa III (Q123456) has a child (?child)
  ?child wdt:P22 ?fatherOfChild .
  ?child wdt:P31/wdt:P279* wd:Q4321 . # The child is royalty (Q4321)

  # Step 5: Match the successor with the criteria
  FILTER(?successor = ?child && ?fatherOfSpouse = ?fatherOfChild)
}
```

Note: Replace `wd:Q123456`, `wd:Q789012`, `wd:Q987654`, and `wd:Q4321` with the actual DBpedia identifiers for Mustafa III, his successor, Neşerek Kadın, and royalty respectively.",6,7,7,3,3,3,3,71,0,0,1,0,0.0,0
433,49,val,"Give me the professional in the profession of the writer of Slowhand at 70 – Live at the Royal Albert Hall and associated musical artist of the person born, that is a musical artist and an artist, as Paul Laurence Dunbar Chambers Jr..","SELECT ?result WHERE { ?result <http://dbpedia.org/property/occupation> ?v1 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. <http://dbpedia.org/resource/Slowhand_at_70_–_Live_at_the_Royal_Albert_Hall> <http://dbpedia.org/property/writer> ?v0 . ?v0 <http://dbpedia.org/property/occupation> ?v1 . ?v2 <http://dbpedia.org/property/birthName> ""Paul Laurence Dunbar Chambers Jr.""@en . ?v2 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?professional WHERE {
  # Eric Clapton's album ""Slowhand at 70 – Live at the Royal Albert Hall""
  ?album dbo:title ""Slowhand at 70 – Live at the Royal Albert Hall"" ;
         dbo:artist dbr:Eric_Clapton .

  # Jack Bruce, born Paul Laurence Dunbar Chambers Jr.
  ?jackBruce a dbo:MusicalArtist ;
             foaf:name ""Jack Bruce"" ;
             dbo:birthName ""Paul Laurence Dunbar Chambers Jr."" .

  # Find professionals associated with both Eric Clapton and Jack Bruce
  ?professional dbo:associatedWith dbr:Eric_Clapton .
  ?professional dbo:associatedWith ?jackBruce .
}
```",5,7,6,3,2,3,3,71,0,0,16,0,0.0,0
216,48,val,"Give me the team of the person born, that is a sports manager and a soccer manager and a soccer player, on 1983-12-20 and player in the coach of the reference, that is an organisation and a soccer club, to Croatia U21.","SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/birthDate> ""1983-12-20""^^<http://www.w3.org/2001/XMLSchema#date> . ?v3 <http://dbpedia.org/ontology/coach> ?v2 . ?result <http://dbpedia.org/ontology/coach> ?v1 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?v3 <http://xmlns.com/foaf/0.1/name> ""Croatia U21""@en . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerManager>. ?v2 <http://dbpedia.org/ontology/team> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerPlayer>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsManager>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerClub>. }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?person ?team WHERE {
  ?person a dbo:Person ;
          dbo:birthDate ""1983-12-20""^^xsd:date ;
          (dbo:sport occupation|dbo:occupation) dbr:Soccer ;
          (dbo:managerOf|dbo:playerFor) ?team .
  
  OPTIONAL { 
    ?team dbo:coach dbr:Croatia_national_under-21_football_team .
  }
}
```",5,10,6,3,2,3,3,71,0,0,1,0,0.0,0
507,52,val,"Give me the professional in Film director, television director and spouse of the person born as the birth name of Anne V. Coates and director of the movie, that is a movie and a work, with Beryl Reid.","SELECT ?result WHERE { ?result <http://dbpedia.org/property/occupation> ""Film director, television director""@en . ?v2 <http://dbpedia.org/property/birthName> ?v3 . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Film>. ?v5 <http://dbpedia.org/ontology/director> ?result . ?v5 <http://dbpedia.org/property/starring> <http://dbpedia.org/resource/Beryl_Reid> . ?result <http://dbpedia.org/ontology/spouse> ?v2 . <http://dbpedia.org/resource/Anne_V._Coates> <http://dbpedia.org/property/birthName> ?v3 . }","```sparql
# Step 1: Find Anne V. Coates' birth name
SELECT ?birthName WHERE {
  wd:Q1234568 foaf:name ""Anne V. Coates""@en .
  wd:Q1234568 schema:birthName ?birthName .
}

# Step 2: Identify her spouse
SELECT ?spouse WHERE {
  wd:Q1234568 dbo:spouse ?spouse .
}

# Step 3: Check if the spouse is a film director and television director
SELECT DISTINCT ?spouse WHERE {
  ?spouse wdt:P106 wd:Q33999 . # Film director
  ?spouse wdt:P106 wd:Q11173 .  # Television director
  FILTER(?spouse IN (?spouse))
}

# Step 4: Find a movie directed by the spouse that features Beryl Reid
SELECT DISTINCT ?movie WHERE {
  ?movie dbo:director ?spouse .
  ?movie dbo:starring ?actor .
  wd:Q1234567 foaf:name ""Beryl Reid""@en . # Assuming Q1234567 is Beryl Reid's DBpedia ID
  FILTER(?actor = wd:Q1234567)
}
```",6,8,7,3,3,3,3,71,0,0,1,0,0.0,0
892,54,val,Give me the landmark at elevation of the award of the member of E-girls and entity in the profession of Henri Crolla and entity in Province of Reggio Emilia.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/elevation> ?v4 . <http://dbpedia.org/resource/E-girls> <http://dbpedia.org/ontology/bandMember> ?v1 . ?result <http://dbpedia.org/ontology/province> <http://dbpedia.org/resource/Province_of_Reggio_Emilia> . ?v1 <http://dbpedia.org/property/awards> ?v4 . ?result <http://dbpedia.org/ontology/country> ?v2 . <http://dbpedia.org/resource/Henri_Crolla> <http://dbpedia.org/property/occupation> ?v2 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?landmark WHERE {
  # Find an award-winning E-girls member
  ?member dbo:memberOf dbr:E-girls ;
          dbo:awardReceived ?award .

  # Find landmarks with known elevations
  ?landmark dbo:elevationAboveSeaLevel ?elevation ;
            dbo:location dbr:Province_of_Reggio_Emilia .

  # Ensure the landmark is connected to boxing (Henri Crolla's profession)
  ?boxingEntity dbo:profession dbr:Boxing ;
                dbo:associatedWith ?landmark .

  FILTER(?elevation > 0) # Assuming we want a positive elevation
}
```",6,6,7,3,3,3,3,71,0,0,1,0,0.0,0
433,52,val,"Give me the associated musical artist of the person born, that is a musical artist and an artist, as the persona of Paul Chambers and professional in Musician and associated musical artist of the associated musical artist, that is an artist and a musical artist, of Scott LaFaro.","SELECT ?result WHERE { ?v2 <http://dbpedia.org/property/birthName> ?v3 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?result <http://dbpedia.org/property/occupation> ""Musician""@en . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. <http://dbpedia.org/resource/Paul_Chambers> <http://xmlns.com/foaf/0.1/givenName> ?v3 . ?v5 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . <http://dbpedia.org/resource/Scott_LaFaro> <http://dbpedia.org/ontology/associatedMusicalArtist> ?v5 . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. ?v2 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?artist WHERE {
  # Scott LaFaro's associated musical artist who is also an artist and a musician
  ?laFarosArtist dbo:associatedMusicalArtist dbr:Scott_LaFaro .
  ?laFarosArtist rdf:type dbo:Musician .
  ?laFarosArtist rdf:type dbo:Artist .

  # Paul Chambers' associated musical artist who is also an artist and a musician
  ?chambersArtist dbo:associatedMusicalArtist dbr:Paul_Chambers .
  ?chambersArtist rdf:type dbo:Musician .
  ?chambersArtist rdf:type dbo:Artist .

  # Find the common artist between Scott LaFaro's and Paul Chambers' associated artists
  FILTER (?laFarosArtist = ?chambersArtist)
  
  # Return the name of this common artist
  ?artist rdfs:label ?name .
  FILTER (lang(?name) = 'en')
  BIND(IRI(CONCAT(""http://dbpedia.org/resource/"", REPLACE(LCASE(?name), "" "", ""_""))) AS ?artist)
}
```",6,10,7,3,3,3,3,71,0,0,1,0,0.0,0
645,47,val,"Give me the commander in the force of Carlos Asensio Cabanillas and military force of the force, that is an event and a military conflict and a societal event, of the native, that is a president and a politician, of Restoration (Spain).",SELECT ?result WHERE { ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/President>. ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?result <http://dbpedia.org/ontology/battle> ?v4 . ?v0 <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Restoration_(Spain)> . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v4 <http://dbpedia.org/ontology/commander> ?v0 . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?v2 <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Carlos_Asensio_Cabanillas> . ?v2 <http://dbpedia.org/ontology/commander> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?commander WHERE {
  # Carlos Asensio Cabanillas' involvement in a military force
  ?militaryForce dbo:member dbr:Carlos_Asensio_Cabanillas .
  
  # The commander of the military force
  ?militaryForce dbo:commander ?commander .

  # The event is both a military conflict and societal event
  ?event dbo:participatedInMilitaryConflict ?militaryForce ;
         rdf:type dbo:SocietalEvent .

  # Alfonso XIII as president during Restoration (Spain)
  dbr:Alfonso_XIII_of_Spain dbo:nationality dbr:Spain ;
                            dbo:officeHolder dbr:President_of_Spain .
  
  # Linking the event to Alfonso XIII's presidency
  ?event dbo:relatedTo dbr:Alfonso_XIII_of_Spain .

}
```",5,10,6,3,2,3,3,71,0,0,23,0,0.0,0
445,43,val,Give me the death place of the awardee of the establishment of 1820-03-10 and entity in England and entity in United Kingdom.,"SELECT ?result WHERE { ?v4 <http://dbpedia.org/ontology/deathPlace> ?result . ?v0 <http://dbpedia.org/ontology/foundingDate> ""1820-03-10""^^<http://www.w3.org/2001/XMLSchema#date> . ?result <http://dbpedia.org/ontology/location> <http://dbpedia.org/resource/England> . ?result <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/United_Kingdom> . ?v4 <http://dbpedia.org/property/awards> ?v0 . }","```sparql
SELECT ?deathPlace WHERE {
  ?award dbo:established ?date .
  ?award dbo:recipient ?person .
  ?person dbo:birthPlace ?placeOfBirth .
  ?placeOfBirth rdf:type dbo:City ;
                dbo:country dbr:England .
  ?person dbo:deathPlace ?deathPlace .
  OPTIONAL { 
    ?person dbo:residence ?residence .
    ?residence rdf:type dbo:AdministrativeTerritory ;
               dbo:country dbr:UnitedKingdom .
  }
  FILTER (YEAR(?date) = 1820 && MONTH(?date) = 3 && DAY(?date) = 10)
}
```",5,5,6,3,3,3,3,71,0,0,1,0,0.0,0
456,49,val,"Give me the band of the band, that is a musical artist, of the band of Alan Doyle and spouse of the actor of Pacific Drive.",SELECT ?result WHERE { <http://dbpedia.org/resource/Alan_Doyle> <http://dbpedia.org/ontology/associatedMusicalArtist> ?v0 . ?v0 <http://dbpedia.org/ontology/associatedMusicalArtist> ?v1 . ?v2 <http://dbpedia.org/ontology/spouse> ?result . <http://dbpedia.org/resource/Pacific_Drive> <http://dbpedia.org/property/starring> ?v2 . ?v1 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. },"```sparql
# Step 1: Find Alan Doyle's Band
SELECT ?band WHERE {
  wd:Q123456 wdt:P106 wd:Q33999; # Alan Doyle is a musician
  wdt:P46 ?band. # Alan Doyle is a member of the band
}

# Step 2: Identify actors from ""Pacific Drive"" and their spouses
SELECT DISTINCT ?actor ?spouse WHERE {
  ?show wdt:P31 wd:Q11424; # Pacific Drive is a TV series
        wdt:P161 ?actor. # Cast members of Pacific Drive
  OPTIONAL { ?actor wdt:P26 ?spouse. } # Spouses of the actors
}

# Step 3: Check if any spouse is a musical artist and determine their band
SELECT DISTINCT ?musicalArtist ?band WHERE {
  ?spouse wdt:P106 wd:Q33999; # The spouse is a musician
          rdfs:label ?name. FILTER regex(?name, ""Pacific Drive"", ""i"") # Filter by Pacific Drive actors' spouses
  OPTIONAL { ?spouse wdt:P46 ?band. } # Band of the musical artist
}

# Step 4: Find the band of that band (if applicable)
SELECT DISTINCT ?bandOfBand WHERE {
  ?band wdt:P31 wd:Q13442814; # The entity is a band
        rdfs:label ?name. FILTER regex(?name, ""Musical Artist Name"", ""i"") # Filter by the musical artist's name
  OPTIONAL { ?band wdt:P46 ?bandOfBand. } # Band of the band
}
```

Note: Replace `wd:Q123456` with Alan Doyle's actual DBpedia QID and `""Musical Artist Name""` with the identified spouse's name from Step 3.",5,6,6,3,2,3,3,71,0,0,1,0,0.0,0
18,19,val,"Give me the professional in the award of Ana María Sánchez de Ríos and parent of Liza Huber and alumnus of Marymount College, Tarrytown.","SELECT ?result WHERE { ?result <http://dbpedia.org/property/occupation> ?v3 . ?result <http://dbpedia.org/ontology/almaMater> <http://dbpedia.org/resource/Marymount_College,_Tarrytown> . ?result <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Liza_Huber> . <http://dbpedia.org/resource/Ana_María_Sánchez_de_Ríos> <http://dbpedia.org/property/awards> ?v3 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?person WHERE {
  # Find the award associated with Ana María Sánchez de Ríos
  ?award dbo:recipient dbr:Ana_María_Sánchez_de_Ríos .
  
  # Find a person who received the same award
  ?person dbo:award ?award .

  # Check if this person is a parent of Liza Huber
  OPTIONAL { ?person dbo:child dbr:Liza_Huber . }

  # Verify if they are an alumnus of Marymount College, Tarrytown
  OPTIONAL { ?person dbo:almaMater dbr:Marymount_College,_Tarrytown . }
  
  FILTER EXISTS { ?person dbo:child dbr:Liza_Huber } .
  FILTER EXISTS { ?person dbo:almaMater dbr:Marymount_College,_Tarrytown } .
}
```",4,4,5,2,3,2,3,28,0,0,1,0,0.0,0
465,45,val,"Give me the spouse of Archduchess Barbara of Austria and successor of the child, that is a royalty, of the parent of Charles Orlando, Dauphin of France and successor of Ercole II d'Este, Duke of Ferrara.","SELECT ?result WHERE { <http://dbpedia.org/resource/Charles_Orlando,_Dauphin_of_France> <http://dbpedia.org/ontology/parent> ?v0 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?result <http://dbpedia.org/ontology/spouse> <http://dbpedia.org/resource/Archduchess_Barbara_of_Austria> . ?v0 <http://dbpedia.org/ontology/child> ?v1 . ?v1 <http://dbpedia.org/ontology/successor> ?result . <http://dbpedia.org/resource/Ercole_II_d'Este,_Duke_of_Ferrara> <http://dbpedia.org/ontology/successor> ?result . }","```sparql
SELECT ?spouse WHERE {
  # Step 1: Find Charles Orlando's parent
  ?charlesOrlando dbo:parent ?parent .
  FILTER(STR(?charlesOrlando) = ""Charles Orlando, Dauphin of France"") .

  # Step 2: Find successor of Ercole II d'Este
  ?ercoleII dbo:succeededBy ?successorErcole .
  FILTER(STR(?ercoleII) = ""Ercole II d'Este, Duke of Ferrara"") .

  # Step 3: Find a common child who is royalty
  ?child dbo:parent ?parent ;
         dbo:parent ?successorErcole .

  # Step 4: Find spouse of Archduchess Barbara of Austria
  ?barbara dbo:spouse ?spouse .
  FILTER(STR(?barbara) = ""Archduchess Barbara of Austria"") .

  # Step 5: Find successor of the child (royalty)
  ?child dbo:succeededBy ?successorChild .
  
  # Final condition to match the spouse with the successor
  FILTER(STR(?spouse) = STR(?successorChild))
}
```",5,6,6,3,3,3,3,71,0,0,1,0,0.0,0
773,41,val,Give me the parent of the successor of Charles the Bald and parent of Charles the Fat and spouse of the father of Charles the Fat.,SELECT ?result WHERE { ?v2 <http://dbpedia.org/ontology/spouse> ?result . ?result <http://dbpedia.org/ontology/child> ?v4 . <http://dbpedia.org/resource/Charles_the_Fat> <http://dbpedia.org/ontology/parent> ?result . <http://dbpedia.org/resource/Charles_the_Bald> <http://dbpedia.org/ontology/successor> ?v4 . <http://dbpedia.org/resource/Charles_the_Fat> <http://dbpedia.org/property/father> ?v2 . },"```sparql
# Step 1: Find the successor of Charles the Bald
SELECT ?successor WHERE {
  wd:Q1117 dbo:successor ?successor .
}

# Step 2: Find the parent of the successor of Charles the Bald
SELECT ?parent WHERE {
  ?successor dbo:parent ?parent .
}

# Step 3: Find the parent of Charles the Fat
SELECT ?parentFat WHERE {
  wd:Q1118 dbo:parent ?parentFat .
}

# Step 4: Find the father of Charles the Fat
SELECT ?fatherFat WHERE {
  ?parentFat rdfs:label ""Charles the Bald""@en .
}

# Step 5: Find the spouse of the father of Charles the Fat
SELECT ?spouse WHERE {
  ?fatherFat dbo:spouse ?spouse .
}
```",5,5,6,2,3,3,3,71,0,0,1,0,0.0,0
326,7,val,"Give me the professional in Composer and person decedent at the region coded, that is a settlement, as 442/760.","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/deathPlace> ?v2 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. ?result <http://dbpedia.org/property/occupation> <http://dbpedia.org/resource/Composer> . ?v2 <http://dbpedia.org/ontology/areaCode> ""442/760"" . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?composer WHERE {
  # Identify the settlement corresponding to the region code ""442/760""
  VALUES ?settlement { 
    dbr:Saint-Nazaire (dbr:Seine-Maritime) } # Saint-Nazaire is in department 44, arrondissement 7

  # Find composers who are associated with this settlement
  ?composer dbo:birthPlace ?settlement .
  ?composer a dbo:Composer .

  FILTER NOT EXISTS { ?composer dbo:deathPlace ?place . }
}
```",3,4,4,2,2,2,2,9,0,0,6,0,0.0,0
341,7,val,Give me the band member of the awardee of List of awards and nominations received by Beyoncé and writer of In Love & War (Amerie album).,SELECT ?result WHERE { <http://dbpedia.org/resource/In_Love_&_War_(Amerie_album)> <http://dbpedia.org/property/writer> ?result . ?result <http://dbpedia.org/ontology/associatedMusicalArtist> ?v2 . ?v2 <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/List_of_awards_and_nominations_received_by_Beyoncé> . },"```sparql
# Step 1: Find artists related to Beyoncé through awards
SELECT ?artist WHERE {
  ?award dbo:recipient dbr:Beyoncé .
  ?award dbo:otherRecipient ?artist .
}

UNION

# Step 2: Identify which of these artists wrote for Amerie's album ""In Love & War""
SELECT DISTINCT ?writer WHERE {
  ?album dct:title ""In Love & War""@en ;
         dbo:lyricsBy ?writer .
  FILTER (strstarts(str(?album), str(dbr:))).
}

# Step 3: Find the band member of this artist
SELECT ?bandMember WHERE {
  ?artist foaf:name ?name .
  ?artist dbo:memberOfBand ?band .
  ?band dbo:bandMember ?bandMember .
}
```",3,3,4,2,2,2,2,9,0,0,1,0,0.0,0
582,49,val,"Give me the reference to the residence of Hirotaka Sugawara and figure known as the nickname of the team, that is an organisation, of Hajime Moriyasu.",SELECT ?result WHERE { ?v0 <http://dbpedia.org/ontology/coach> <http://dbpedia.org/resource/Hajime_Moriyasu> . ?v0 <http://dbpedia.org/property/nickname> ?v1 . <http://dbpedia.org/resource/Hirotaka_Sugawara> <http://dbpedia.org/property/residence> ?v2 . ?result <http://dbpedia.org/property/nickname> ?v1 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?result <http://xmlns.com/foaf/0.1/name> ?v2 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?residence ?nickname WHERE {
  # Query for Hirotaka Sugawara's residence
  OPTIONAL { 
    dbr:Hirotaka_Sugawara dbo:residence ?residence .
  }
  
  # Query for the nickname of the Japan national football team
  OPTIONAL {
    dbr:Japan_national_football_team dbo:nickname ?nickname .
  }
}
```",5,6,6,3,2,3,3,71,0,0,1,0,0.0,0
433,48,val,"Give me the associated musical artist of the person born, that is a musical artist and an artist, as the persona of Paul Chambers and professional in the profession of Bob Marley.",SELECT ?result WHERE { ?v2 <http://dbpedia.org/property/birthName> ?v3 . ?result <http://dbpedia.org/property/occupation> ?v1 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. <http://dbpedia.org/resource/Paul_Chambers> <http://xmlns.com/foaf/0.1/givenName> ?v3 . <http://dbpedia.org/resource/Bob_Marley> <http://dbpedia.org/property/occupation> ?v1 . ?v2 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?person WHERE {
  ?person dbo:birthPlace ?place .
  ?person dbo:profession dbr/Musician .
  ?person dbo:associatedBand dbr/The_Wailers .
  
  OPTIONAL { ?person foaf:name ?name . }
}
```",5,7,6,3,2,3,3,71,0,0,16,0,0.0,0
892,43,val,Give me the entity in Italy and entity in Province of Reggio Emilia and landmark at elevation of the award of the member of E-girls.,SELECT ?result WHERE { ?v1 <http://dbpedia.org/property/awards> ?v3 . ?result <http://dbpedia.org/ontology/elevation> ?v3 . ?result <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Italy> . ?result <http://dbpedia.org/ontology/province> <http://dbpedia.org/resource/Province_of_Reggio_Emilia> . <http://dbpedia.org/resource/E-girls> <http://dbpedia.org/ontology/bandMember> ?v1 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT DISTINCT ?italyEntity ?reggioEmiliaEntity ?landmark WHERE {
  # Step 1: Identify a member of E-girls
  ?member dbo:memberOf dbr:E-girls .
  
  # Step 2: Find an award associated with this member
  ?award dbo:recipient ?member ;
         dbp:elevation ?elevation .

  # Step 3: Determine the landmark at the elevation of the award
  ?landmark dbo:elevation ?elevation ;
            a dbo:Lighthouse ;  # Assuming landmarks are lighthouses for simplicity

  # Step 4: Identify an entity in Italy
  ?italyEntity dbo:country dbr:Italy .

  # Step 5: Identify an entity in the Province of Reggio Emilia
  ?reggioEmiliaEntity dbo:administrativeRegion dbr:Province_of_Reggio_Emilia .
}
```",5,5,6,3,3,3,3,71,0,0,1,0,0.0,0
47,45,val,"Give me the office of the awardee of the entity, that is an award, in India and office of Suvendu Adhikari and office of Bidesh Ranjan Bose.",SELECT ?result WHERE { ?v1 <http://dbpedia.org/property/office> ?result . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Award>. ?v1 <http://dbpedia.org/property/awards> ?v0 . <http://dbpedia.org/resource/Suvendu_Adhikari> <http://dbpedia.org/property/office> ?result . <http://dbpedia.org/resource/Bidesh_Ranjan_Bose> <http://dbpedia.org/property/office> ?result . ?v0 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/India> . },"```sparql
# Query for the awardee of a specific award in India (example: Bharat Ratna)
SELECT ?awardee ?office WHERE {
  ?award dbo:country dbr:India .
  ?award dbo:recipient ?person .
  ?person foaf:name ?awardee .
  OPTIONAL { ?person dbo:position ?office . }
  FILTER EXISTS { ?award rdf:type dbo:Award } # Assuming the award type is known
}

UNION

# Query for Suvendu Adhikari's office
SELECT ?name ?office WHERE {
  ?person foaf:name ""Suvendu Adhikari""@en .
  OPTIONAL { ?person dbo:position ?office . }
  BIND(""Suvendu Adhikari"" AS ?name)
}

UNION

# Query for Bidesh Ranjan Bose's office
SELECT ?name ?office WHERE {
  ?person foaf:name ""Bidesh Ranjan Bose""@en .
  OPTIONAL { ?person dbo:position ?office . }
  BIND(""Bidesh Ranjan Bose"" AS ?name)
}
```",5,6,6,3,3,3,3,71,0,0,1,0,0.0,0
582,55,val,"Give me the figure known as the nickname of Japan national football team and player in the father, that is an athlete and a soccer manager and a sports manager, of Masami Nagasawa and reference to the residence of Hirotaka Sugawara.",SELECT ?result WHERE { ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsManager>. <http://dbpedia.org/resource/Masami_Nagasawa> <http://dbpedia.org/property/father> ?v5 . ?result <http://dbpedia.org/property/nickname> ?v2 . ?v5 <http://dbpedia.org/ontology/team> ?result . <http://dbpedia.org/resource/Japan_national_football_team> <http://dbpedia.org/property/nickname> ?v2 . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Athlete>. ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerManager>. ?result <http://xmlns.com/foaf/0.1/name> ?v3 . <http://dbpedia.org/resource/Hirotaka_Sugawara> <http://dbpedia.org/property/residence> ?v3 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?nickname ?player ?father ?residence WHERE {
  # Step 1: Find the nickname of Japan National Football Team
  ?team a dbo:NationalSoccerTeam ;
        dbp:nickname ?nickname .
  
  FILTER (str(?team) = str(dbr:Japan_national_football_team))

  # Step 2: Identify player whose father is an athlete and also works as a soccer manager and sports manager
  ?player dbo:father ?father .
  ?father a dbo:Athlete ;
          dbo:occupation ?occupation1, ?occupation2 .

  FILTER (CONTAINS(LCASE(?occupation1), ""soccer manager"") && CONTAINS(LCASE(?occupation2), ""sports manager""))

  # Step 3: Connection to Masami Nagasawa
  OPTIONAL { ?player dbo:spouse dbr:Masami_Nagasawa }

  # Step 4: Residence of Hirotaka Sugawara
  ?sugawara a dbo:Person ;
            foaf:name ""Hirotaka Sugawara"" ;
            dbo:residenceLocation ?residence .

}
```",6,9,7,2,3,3,3,71,0,0,1,0,0.0,0
933,52,val,"Give me the band of the band of the band, that is an artist and a musical artist, of The Ramong Sound and reference to the birth name of Alan Warner (musician) and band of The Ramong Sound.",SELECT ?result WHERE { ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. <http://dbpedia.org/resource/Alan_Warner_(musician)> <http://dbpedia.org/property/birthName> ?v4 . <http://dbpedia.org/resource/The_Ramong_Sound> <http://dbpedia.org/ontology/associatedMusicalArtist> ?v3 . ?result <http://xmlns.com/foaf/0.1/name> ?v4 . ?v3 <http://dbpedia.org/ontology/associatedMusicalArtist> ?v1 . ?v1 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . <http://dbpedia.org/resource/The_Ramong_Sound> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?band ?birthName ?associatedBand WHERE {
  # Step 1: Identify The Rolling Stones
  VALUES (?rollingStones) { dbr:The_Rolling_Stones }
  
  # Step 2: Find Alan Warner's birth name and his association with The Rolling Stones
  ?alanWarner dbo:memberOf ?rollingStones .
  ?alanWarner foaf:name ""Alan Warner"" .
  ?alanWarner foaf:givenName ?birthName .

  # Step 3: Determine the band he was part of (The Rolling Stones)
  ?associatedBand dbo:bandMember ?alanWarner .

  # Step 4: Find any notable bands associated with that band
  OPTIONAL {
    ?associatedBand dbo:member ?notableMember .
    ?notableMember foaf:name ?bandName .
  }
}
```",6,8,7,3,3,3,3,71,0,0,1,0,0.0,0
926,41,val,Give me the successor of the child of Ahmed III and child of Ahmed III and father of the father of Abdulaziz.,SELECT ?result WHERE { <http://dbpedia.org/resource/Abdulaziz> <http://dbpedia.org/property/father> ?v2 . ?v4 <http://dbpedia.org/ontology/successor> ?result . ?v4 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Ahmed_III> . <http://dbpedia.org/resource/Ahmed_III> <http://dbpedia.org/ontology/child> ?result . ?v2 <http://dbpedia.org/property/father> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?successor WHERE {
  # Find Ahmed III's children
  ?child dbo:parent dbr:Ahmed_III_of_the_Ottoman_Empire .
  
  # Identify the child who is the father of Abdulaziz
  ?father dbo:child dbr:Abdulaziz_I_of_Saudi_Arabia ;
          rdf:type dbo:Person .

  FILTER(?child = ?father)

  # Find the successor of this person
  OPTIONAL {
    ?successor dbo:predecessor ?father .
  }
  
  # Ensure we have a valid successor
  FILTER(BOUND(?successor))
}
```",5,5,6,2,3,3,3,71,0,0,1,0,0.0,0
976,43,val,"Give me the office of the mayor, that is a politician and an office holder and Turkish, of the reference, that is an organisation and a political party and Turkish, to Millet İttifakı and office of Mustafa Şentop and office of Naci Bostancı.","SELECT ?result WHERE { ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/PoliticalParty>. <http://dbpedia.org/resource/Naci_Bostancı> <http://dbpedia.org/property/office> ?result . ?v3 <http://dbpedia.org/property/office> ?result . ?v1 <http://xmlns.com/foaf/0.1/name> ""Millet İttifakı""@en . <http://dbpedia.org/resource/Mustafa_Şentop> <http://dbpedia.org/property/office> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?v1 <http://dbpedia.org/property/leader> ?v3 . ?v1 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Turkey>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v3 <http://dbpedia.org/ontology/nationality> <http://dbpedia.org/resource/Turkey>. }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?office ?politician ?party WHERE {
  # Offices of Mustafa Şentop and Naci Bostancı
  VALUES (?person) { dbr:Mustafa_Şentop dbr:Naci_Bostancı }
  
  ?person dbo:positionHeld ?office .
  ?office dbo:country dbr:Türkiye .

  # Politician who is Turkish and an office holder
  ?politician dbo:nationality dbr:Türkiye ;
              a dbo:Politician ;
              dbo:holdsPublicOffice ?office .

  # Political parties or organizations in Turkey associated with Millet İttifakı
  ?party dbo:country dbr:Türkiye ;
         dbo:politicalPartyMember ?politician ;
         rdfs:label ?label .
  
  FILTER CONTAINS(LCASE(?label), ""millet ittifakı"")

  # Ensure the politician is linked to an office and a party in Millet İttifakı
  OPTIONAL { ?office dbo:member ?party }
}
```",5,11,6,3,3,3,3,71,0,0,1,0,0.0,0
326,15,val,"Give me the person decedent at France and resident of the birthplace, that is a state and British, of the professional in Writer.","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/deathPlace> <http://dbpedia.org/resource/France> . ?v1 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/United_Kingdom>. ?v0 <http://dbpedia.org/ontology/birthPlace> ?v1 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/AdministrativeRegion>. ?v0 <http://dbpedia.org/property/occupation> ""Writer""@en . ?result <http://dbpedia.org/property/residence> ?v1 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?person ?birthPlace ?deathPlace WHERE {
  ?person a dbo:Writer ;
          dbo:nationality dbr:United_Kingdom ;
          dbo:birthPlace ?birthPlace ;
          dbo:deathPlace ?deathPlace .
  
  FILTER (isLiteral(?birthPlace) && regex(str(?birthPlace), ""State"", ""i""))
  FILTER (str(?deathPlace) = str(dbr:France))
}
```",4,6,5,3,2,3,2,20,0,0,1,0,0.0,0
606,17,val,"Give me the figure known as Barb City and birthplace of the alumnus of the figure known, that is a university and a sports league and an educational institution, as Penn Quakers.","SELECT ?result WHERE { ?v3 <http://dbpedia.org/ontology/birthPlace> ?result . ?v0 <http://dbpedia.org/property/nickname> <http://dbpedia.org/resource/Penn_Quakers> . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/University>. ?v3 <http://dbpedia.org/ontology/almaMater> ?v0 . ?result <http://dbpedia.org/property/nickname> ""Barb City""@en . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/EducationalInstitution>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsLeague>. }","```sparql
SELECT ?birthPlace WHERE {
  ?person foaf:name ""Wilt Chamberlain""@en .
  ?person dbo:almaMater dbr:University_of_Pennsylvania .
  ?person dbo:birthPlace ?birthPlace .
}
```",4,7,5,3,2,3,2,20,0,0,1,0,0.0,0
445,44,val,Give me the entity in the award of George H. Cameron and death place of the awardee of Royal Astronomical Society and entity in England.,SELECT ?result WHERE { <http://dbpedia.org/resource/George_H._Cameron> <http://dbpedia.org/property/awards> ?v2 . ?v4 <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/Royal_Astronomical_Society> . ?result <http://dbpedia.org/ontology/country> ?v2 . ?v4 <http://dbpedia.org/ontology/deathPlace> ?result . ?result <http://dbpedia.org/ontology/location> <http://dbpedia.org/resource/England> . },"```sparql
# Step 1: Find the award associated with George H. Cameron
SELECT ?award WHERE {
  wd:Q1234567 dbo:award ?award .
}

# Step 2: Find the awardee of the Royal Astronomical Society and their death place
SELECT ?awardee ?deathPlace WHERE {
  ?award dbo:recipient ?awardee ;
         dbo:organization ""Royal Astronomical Society""^^xsd:string .
  ?awardee dbo:placeOfBirth ?birthPlace ;
           dbo:deathPlace ?deathPlace .
}

# Step 3: Find an entity in England
SELECT ?entity WHERE {
  ?entity dbo:country ""England""^^xsd:string .
}
```

Note: Replace `wd:Q1234567` with the actual DBpedia identifier for George H. Cameron.",5,5,6,2,3,3,3,71,0,0,1,0,0.0,0
865,47,val,"Give me the father of the child, that is a politician, of the spouse of Syeda Shahar Banu and native of the residence, that is a country, of Ram Jaipal Singh Yadav.",SELECT ?result WHERE { <http://dbpedia.org/resource/Ram_Jaipal_Singh_Yadav> <http://dbpedia.org/property/residence> ?v0 . <http://dbpedia.org/resource/Syeda_Shahar_Banu> <http://dbpedia.org/ontology/spouse> ?v2 . ?result <http://dbpedia.org/ontology/birthPlace> ?v0 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. ?v3 <http://dbpedia.org/property/father> ?result . ?v3 <http://dbpedia.org/property/father> ?v2 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?father WHERE {
  # Step 1: Find Syeda Shahar Banu's spouse
  ?spouse a dbo:Person ;
          dbo:spouse ?syedaShaharBanu .
  
  FILTER(?syedaShaharBanu = dbp:Syeda_Shahar_Banu) .

  # Step 2: Identify the child of that spouse who is a politician
  ?child dbo:parent ?spouse ;
         dbo:occupation ?occupation .
  
  FILTER(CONTAINS(LCASE(str(?occupation)), ""politician"")) .

  # Step 3: Find Ram Jaipal Singh Yadav's residence country
  ?ramJaipalSinghYadav a dbo:Person ;
                       dbp:nationality ?country .
  
  FILTER(?ramJaipalSinghYadav = dbp:Ram_Jaipal_Singh_Yadav) .

  # Step 4: Ensure the child is native of Ram Jaipal Singh Yadav's residence country
  ?child dbo:nationality ?country .

  # Step 5: Find the father of that child
  ?father dbo:child ?child .
}
```",5,7,6,3,2,3,3,71,0,0,1,0,0.0,0
166,15,val,"Give me the resting place of the military force of the force, that is an event and a societal event and a military conflict, of Manuel Hedilla and entity in Spain.",SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/restingPlace> ?result . ?v0 <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Manuel_Hedilla> . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?result <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Spain> . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?v1 <http://dbpedia.org/ontology/battle> ?v0 . },"```sparql
SELECT ?place WHERE {
  ?person dbo:birthPlace dbr:Spain .
  ?person rdfs:label ""Manuel Hedilla""@en .
  ?person dbo:deathPlace ?place .
}
```",4,7,5,3,2,3,2,20,0,0,4,0,0.0,0
433,41,val,"Give me the associated musical artist of the associated musical artist, that is an artist and a musical artist, of Scott LaFaro and associated musical artist of the person born, that is a musical artist and an artist, as Paul Laurence Dunbar Chambers Jr. and professional in Musician.","SELECT ?result WHERE { ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. <http://dbpedia.org/resource/Scott_LaFaro> <http://dbpedia.org/ontology/associatedMusicalArtist> ?v4 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?v2 <http://dbpedia.org/property/birthName> ""Paul Laurence Dunbar Chambers Jr.""@en . ?v2 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?result <http://dbpedia.org/property/occupation> ""Musician""@en . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. ?v4 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . }","```sparql
# Step 1: Find Bill Evans' associated musical artist who is also an artist.
SELECT ?artist WHERE {
    wd:Q1234 wdt:P106 wd:Q33999 . # Bill Evans is a musician
    wd:Q1234 wdt:P175 ?associatedArtist . # Associated artists of Bill Evans
    ?associatedArtist wdt:P106 wd:Q33999 . # The associated artist is also a musician
    OPTIONAL { ?associatedArtist wdt:P1015 ?isArtist } # Check if the person is an artist (in any sense)
    FILTER EXISTS { ?associatedArtist wdt:P1015 ?isArtist }
}

# Step 2: Find Ron Carter's associated musical artist who is also an artist.
SELECT ?artist WHERE {
    wd:Q12345 wdt:P106 wd:Q33999 . # Ron Carter is a musician
    wd:Q12345 wdt:P175 ?associatedArtist . # Associated artists of Ron Carter
    ?associatedArtist wdt:P106 wd:Q33999 . # The associated artist is also a musician
    OPTIONAL { ?associatedArtist wdt:P1015 ?isArtist } # Check if the person is an artist (in any sense)
    FILTER EXISTS { ?associatedArtist wdt:P1015 ?isArtist }
}

# Step 3: Find the associated musical artist of the result from Step 1 who fits the criteria.
SELECT ?finalArtist WHERE {
    ?artist wdt:P106 wd:Q33999 . # The artist is a musician
    ?artist wdt:P175 ?finalArtist . # Associated artists of the first result
    ?finalArtist wdt:P106 wd:Q33999 . # The final associated artist is also a musician
    OPTIONAL { ?finalArtist wdt:P1015 ?isArtist } # Check if the person is an artist (in any sense)
    FILTER EXISTS { ?finalArtist wdt:P1015 ?isArtist }
}
```

Note: Replace `wd:Q1234` with Bill Evans' DBpedia identifier and `wd:Q12345` with Ron Carter's DBpedia identifier.",5,9,6,2,3,3,3,71,0,0,1,0,0.0,0
826,53,val,"Give me the predecessor of the parent of Prince Friedrich of Hesse and by Rhine and spouse of the child of the father of Anna Magdalena Appel and successor of Louis II, Grand Duke of Hesse.","SELECT ?result WHERE { <http://dbpedia.org/resource/Prince_Friedrich_of_Hesse_and_by_Rhine> <http://dbpedia.org/ontology/parent> ?v1 . <http://dbpedia.org/resource/Louis_II,_Grand_Duke_of_Hesse> <http://dbpedia.org/ontology/successor> ?result . ?result <http://dbpedia.org/ontology/successor> ?v1 . ?v2 <http://dbpedia.org/property/father> ?v3 . <http://dbpedia.org/resource/Anna_Magdalena_Appel> <http://dbpedia.org/property/father> ?v3 . ?v2 <http://dbpedia.org/ontology/spouse> ?result . }","```sparql
SELECT ?predecessor WHERE {
  ?person dbo:parent dbc:Friedrich_of_Hesse_and_by_Rhine.
  ?person dbo:predecessor ?predecessor.
}
```",6,6,7,3,3,3,3,71,0,0,1,0,0.0,0
917,47,val,"Give me the child of the father of the spouse, that is a royalty, of Leleiohoku I and parent of the child, that is a royalty, of Kamehameha IV.",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/child> ?v1 . ?v0 <http://dbpedia.org/ontology/spouse> <http://dbpedia.org/resource/Leleiohoku_I> . ?v0 <http://dbpedia.org/property/father> ?v3 . ?result <http://dbpedia.org/ontology/parent> ?v3 . ?v1 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Kamehameha_IV> . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?parent WHERE {
  # Leleiohoku I's spouse
  dbr:Leleiohoku_I dbo:spouse dbr:Victoria_Kamāmalu .
  
  # Father of Victoria Kamāmalu (Kamehameha II)
  dbr:Victoria_Kamāmalu dbo:father dbr:Kamehameha_II .

  # Child of Kamehameha II who is a royalty
  dbr:Kamehameha_II dbo:child ?royaltyChild .
  
  # Ensure the child is a royalty (has a title)
  ?royaltyChild dbo:title ?title .
  
  # Kamehameha IV's children
  dbr:Kamehameha_IV dbo:child ?kamehamehaIVChild .

  # Child of Kamehameha IV who is a royalty
  ?kamehamehaIVChild dbo:title ?childTitle .

  # Parent of this child (should be Kamehameha IV)
  ?kamehamehaIVChild dbo:parent ?parent .
}
```",5,7,6,3,2,3,3,71,0,0,1,0,0.0,0
456,51,val,"Give me the band of the band, that is a musical artist, of the band of Alan Doyle and professional in the alter ego of The Shadow.",SELECT ?result WHERE { ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?v1 <http://dbpedia.org/ontology/associatedMusicalArtist> ?v2 . <http://dbpedia.org/resource/Alan_Doyle> <http://dbpedia.org/ontology/associatedMusicalArtist> ?v1 . ?v2 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?result <http://dbpedia.org/property/occupation> ?v4 . <http://dbpedia.org/resource/The_Shadow> <http://dbpedia.org/property/alterEgo> ?v4 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?band ?relatedBand WHERE {
  # Find the band associated with Alan Doyle
  ?person dbo:memberOf dbr:Great_Big_Sea .
  FILTER (str(?person) = ""Alan_Doyle"") .

  # Find related bands or projects of Great Big Sea members
  ?greatBigSeaMember dbo:memberOf dbr:Great_Big_Sea ;
                     dbo:band dbr:?relatedBand .
  
  # Return the band and any related band
  BIND(dbr:Great_Big_Sea AS ?band)
}
```",5,6,6,3,2,3,3,71,0,0,1,0,0.0,0
573,41,val,"Give me the person decedent at the residence, that is a settlement, of William J. Phelan and parent of John Quincy Adams and person decedent at the administration, that is a region, of Charlie Baker.","SELECT ?result WHERE { <http://dbpedia.org/resource/John_Quincy_Adams> <http://dbpedia.org/ontology/parent> ?result . ?result <http://dbpedia.org/ontology/deathPlace> ?v2 . <http://dbpedia.org/resource/William_J._Phelan> <http://dbpedia.org/property/residence> ?v4 . ?v2 <http://dbpedia.org/property/governor> ""Charlie Baker""@en . ?result <http://dbpedia.org/ontology/deathPlace> ?v4 . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Region>. }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?parentDecedent ?adminDecedent
WHERE {
  # Person Decedent at the Residence of William J. Phelan and Parent of John Quincy Adams
  dbr:William_J._Phelan dbo:residence ?settlement .
  FILTER (dbo:Settlement ?settlement) .

  ?parentDecedent dbo:deathPlace ?settlement ;
                  dbo:child dbr:John_Quincy_Adams .

  # Person Decedent at the Administration of Charlie Baker
  dbr:Charlie_Baker dbo:officeHolder ?administration .
  FILTER (dbo:Region ?administration) .

  ?adminDecedent dbo:deathPlace ?administration .
}
```",5,7,6,2,3,3,3,71,0,0,2,0,0.0,0
47,51,val,"Give me the office of the awardee of Banga Bhushan and office of the awardee of the entity, that is an award, in India.",SELECT ?result WHERE { ?v2 <http://dbpedia.org/property/awards> ?v1 . ?v4 <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/Banga_Bhushan> . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Award>. ?v2 <http://dbpedia.org/property/office> ?result . ?v4 <http://dbpedia.org/property/office> ?result . ?v1 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/India> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?awardee ?office WHERE {
  # Banga Bhushan awardees
  {
    ?award dbr:Banga_Bhushan .
    ?award dbo:recipient ?awardee .
    OPTIONAL { ?awardee dbo:position ?office . }
  }

  UNION

  # Bharat Ratna awardees (as an example of another award)
  {
    ?award dbr:Bharat_Ratna .
    ?award dbo:recipient ?awardee .
    OPTIONAL { ?awardee dbo:position ?office . }
  }
}
```",5,6,6,3,2,3,3,71,0,0,1,0,0.0,0
773,51,val,"Give me the parent of the successor of Charles the Bald and parent of the child, that is a royalty, of the father, that is an office holder and a royalty, of Carloman of Bavaria.",SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v2 <http://dbpedia.org/ontology/parent> ?result . <http://dbpedia.org/resource/Charles_the_Bald> <http://dbpedia.org/ontology/successor> ?v4 . ?v2 <http://dbpedia.org/property/father> ?v1 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?result <http://dbpedia.org/ontology/child> ?v4 . <http://dbpedia.org/resource/Carloman_of_Bavaria> <http://dbpedia.org/property/father> ?v1 . },"```sparql
# Step 1: Find Charles the Bald's successor
SELECT ?successor WHERE {
  wd:Q134064 dbo:successionSuccessor ?successor .
}

# Step 2: Find the parent of Charles the Bald's successor
SELECT ?parent WHERE {
  ?successor dbo:parent ?parent .
}

# Step 3: Identify Carloman of Bavaria's father who is an office holder and royalty
SELECT ?father WHERE {
  wd:Q134065 dbo:father ?father .
  ?father a wd:Q11696 ; # OfficeHolder class
          a wd:Q11850 . # Royalty class
}

# Step 4: Find the child that is royalty of Carloman of Bavaria's father
SELECT ?royalChild WHERE {
  ?father dbo:child ?royalChild .
  ?royalChild a wd:Q11850 . # Royalty class
}

# Step 5: Determine the parent of this royal child
SELECT ?parentOfRoyalChild WHERE {
  ?royalChild dbo:parent ?parentOfRoyalChild .
}
```",5,8,6,3,2,3,3,71,0,0,2,0,0.0,0
582,53,val,"Give me the figure known as the nickname of Japan national football team and reference to the residence of the reference, that is a scientist, to Hirotaka Sugawara and player in Kazuaki Nagasawa.","SELECT ?result WHERE { <http://dbpedia.org/resource/Japan_national_football_team> <http://dbpedia.org/property/nickname> ?v1 . ?result <http://dbpedia.org/property/nickname> ?v1 . ?v3 <http://xmlns.com/foaf/0.1/name> ""Hirotaka Sugawara""@en . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Scientist>. ?result <http://xmlns.com/foaf/0.1/name> ?v2 . <http://dbpedia.org/resource/Kazuaki_Nagasawa> <http://dbpedia.org/ontology/team> ?result . ?v3 <http://dbpedia.org/property/residence> ?v2 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?nickname ?scientistName ?residence WHERE {
  # Get the nickname of Japan national football team
  dbr:Japan_national_football_team dbo:nickname ?nickname .

  # Assuming we have identified a scientist connected to Hirotaka Sugawara and Kazuaki Nagasawa
  # Replace 'Scientist_Name' with the actual name once identified
  OPTIONAL {
    dbr:Scientist_Name dbo:residence ?residence .
    BIND(dbr:Scientist_Name AS ?scientistName)
  }
}
```

Note: The query assumes that we have already identified a specific scientist connected to Hirotaka Sugawara and Kazuaki Nagasawa. If such information is not readily available, further research or context would be needed to complete the query accurately.",6,7,7,3,3,3,3,71,0,0,1,0,0.0,0
715,53,val,"Give me the commander in Spanish Civil War and leader of the office, that is a government agency and an organisation, of Carlos Franco Iribarnegaray and commander in the force, that is a military conflict, of the native of Morocco.",SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v1 <http://dbpedia.org/ontology/leader> ?result . <http://dbpedia.org/resource/Spanish_Civil_War> <http://dbpedia.org/ontology/commander> ?result . ?v3 <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Morocco> . <http://dbpedia.org/resource/Carlos_Franco_Iribarnegaray> <http://dbpedia.org/property/office> ?v1 . ?v2 <http://dbpedia.org/ontology/commander> ?v3 . ?v2 <http://dbpedia.org/ontology/commander> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/GovernmentAgency>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?carlosRole ?agencyLeader ?moroccanForce ?commander 
WHERE {
  # Carlos Franco Iribarnegaray's role in the Spanish Civil War
  dbr:Carlos_Franco_Iribarnegaray dbo:nationality dbr:Spain ;
                                  dbo:occupation ?carlosRole .
  
  OPTIONAL {
    ?agencyLeader dbo:leader dbr:Carlos_Franco_Iribarnegaray ;
                  a dbo:GovernmentAgency ; # or dbo:Organization
                  rdfs:label ?agencyLabel .
  }
  
  # Moroccan forces in the Spanish Civil War
  ?moroccanForce dbo:nationality dbr:Morocco ;
                 dbo:participatedIn dbr:Spanish_Civil_War ;
                 dbo:commander ?commander .
}
```",6,9,7,3,3,3,3,71,0,0,1,0,0.0,0
36,21,val,Give me the actor of Being Mrs Elliot and person born as the birth name of Ayo Makun and person born in 1971.,"SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/birthYear> ""1971""^^<http://www.w3.org/2001/XMLSchema#gYear> . <http://dbpedia.org/resource/Being_Mrs_Elliot> <http://dbpedia.org/ontology/starring> ?result . ?result <http://dbpedia.org/property/birthName> ?v1 . <http://dbpedia.org/resource/Ayo_Makun> <http://dbpedia.org/property/birthName> ?v1 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?actor WHERE {
  # Actor of ""Being Mrs Elliot""
  ?castMember dbo:characterName ?character .
  ?castMember dbo:title ?title .
  ?title rdfs:label ""Being Mrs Elliot""@en .

  # Person born as Ayo Makun's birth name
  ?person foaf:name ""Ayoola Makushin"" .
  
  # Person born in 1971
  ?person dbo:birthYear ?year .
  FILTER (?year = 1971)

  # Ensure the actor is the same person who matches both conditions above
  BIND(?castMember AS ?actor)
}
```",4,4,5,2,3,2,3,28,0,0,1,0,0.0,0
281,23,val,"Give me the awardee of the award of Alfred Warden and commander in the war, that is an event and a military conflict, of Roy Boehm.",SELECT ?result WHERE { <http://dbpedia.org/resource/Roy_Boehm> <http://dbpedia.org/ontology/battle> ?v2 . ?result <http://dbpedia.org/property/awards> ?v1 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v2 <http://dbpedia.org/ontology/commander> ?result . <http://dbpedia.org/resource/Alfred_Warden> <http://dbpedia.org/property/awards> ?v1 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?awardee WHERE {
  # Identify Alfred Warden's award
  ?warden a dbo:Person ;
          foaf:name ""Alfred Warden"" ;
          dbo:honoraryAward ?award .

  # Identify Roy Boehm's military conflict/event
  ?boehm a dbo:Person ;
         foaf:name ""Roy Boehm"" ;
         dbo:militaryConflictOrEvent ?event .

  # Find individuals who received the same award and were commanders in the event
  ?person a dbo:Person ;
          foaf:name ?name ;
          dbo:honoraryAward ?award ;
          dbo:militaryCommanderOf ?commandedEvent .

  FILTER (?award = ?wardenAward)
  FILTER (?event = ?commandedEvent)
}
```",4,6,5,2,2,2,3,28,0,0,1,0,0.0,0
826,49,val,"Give me the predecessor of the parent of the child of Louis IV, Grand Duke of Hesse and spouse of the child of Johann Heinrich Appel.","SELECT ?result WHERE { ?v0 <http://dbpedia.org/ontology/parent> ?v1 . ?result <http://dbpedia.org/ontology/successor> ?v1 . ?v2 <http://dbpedia.org/ontology/spouse> ?result . ?v0 <http://dbpedia.org/ontology/parent> <http://dbpedia.org/resource/Louis_IV,_Grand_Duke_of_Hesse> . ?v2 <http://dbpedia.org/property/father> ""Johann Heinrich Appel""@en . }","```sparql
# Step 1: Find a child of Louis IV, Grand Duke of Hesse
SELECT ?child WHERE {
    wd:Q123456 wdt:P40 ?child .
}

# Step 2: Identify the spouse of this child who is also connected to Johann Heinrich Appel's lineage
SELECT ?spouse WHERE {
    ?child wdt:P26 ?spouse .
    ?appelChild wdt:P26 ?spouse .
    wd:Q654321 wdt:P40 ?appelChild .  # Assuming Q654321 is Johann Heinrich Appel
}

# Step 3: Find the parent of this spouse
SELECT ?parent WHERE {
    ?spouse wdt:P25 ?parent .
}

# Step 4: Determine the predecessor of this parent
SELECT ?predecessor WHERE {
    ?parent wdt:P39 ?position .
    ?predecessor wdt:P57 ?position .
}
```

Note: The above SPARQL queries assume that we have specific DBpedia identifiers for Louis IV, Johann Heinrich Appel, and their respective children. These identifiers (e.g., Q123456, Q654321) need to be replaced with the actual DBpedia resource IDs.",5,5,6,3,2,3,3,71,0,0,1,0,0.0,0
326,17,val,"Give me the resident of Berkshire and person decedent at the award, that is a country, of the awardee of French Legion of Honor.","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/deathPlace> ?v3 . ?result <http://dbpedia.org/property/residence> <http://dbpedia.org/resource/Berkshire> . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. ?v0 <http://dbpedia.org/property/awards> ?v3 . ?v0 <http://dbpedia.org/property/awards> ""French Legion of Honor""@en . }","```sparql
SELECT DISTINCT ?resident WHERE {
  # Step 1: Find awardees of the French Legion of Honor
  ?awardee dbo:honoraryTitle dbr:French_Legion_of_Honor .
  
  # Step 2: Link the awardee to a country (assuming this is where they were awarded or associated)
  ?awardee dbo:nationality ?country .

  # Step 3: Find people who died in that country
  ?decedent dbo:deathPlace ?place .
  ?place rdfs:label ?countryLabel .
  FILTER(CONTAINS(LCASE(?countryLabel), LCASE(str(?country)))) .

  # Step 4: Link the decedent to a resident of Berkshire
  ?resident dbo:residence dbr:Berkshire .
  ?decedent foaf:surname ?surname .
  ?resident foaf:surname ?surname .
}
```",4,5,5,3,2,3,2,20,0,0,1,0,0.0,0
527,17,val,"Give me the actor of The Book Tower and author of the work, that is a work and a book, of the host of Hyperland.",SELECT ?result WHERE { ?v3 <http://dbpedia.org/property/author> ?result . <http://dbpedia.org/resource/Hyperland> <http://dbpedia.org/ontology/presenter> ?v0 . <http://dbpedia.org/resource/The_Book_Tower> <http://dbpedia.org/property/starring> ?result . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?v3 <http://dbpedia.org/property/author> ?v0 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Book>. },"```sparql
SELECT ?actor ?author WHERE {
  # Find actor for The Book Tower
  ?theBookTower dcterms:title ""The Book Tower""@en .
  ?theBookTower dbo:starring ?actor .

  # Find host of Hyperland
  ?hyperland dcterms:title ""Hyperland""@en .
  ?hyperland dbo:hostedBy ?host .

  # Find a work that is both a book and authored by the host of Hyperland
  ?work dcterms:type dbc:Books ;
        dbo:author ?host ;
        rdfs:label ?title .
  
  FILTER (lang(?title) = ""en"")
}
```",4,6,5,3,2,3,2,20,0,0,1,0,0.0,0
5,15,val,"Give me the birthplace of the person born, that is a politician, as the award of Renata Adler and entity in Canada.",SELECT ?result WHERE { ?v3 <http://dbpedia.org/ontology/birthPlace> ?result . <http://dbpedia.org/resource/Renata_Adler> <http://dbpedia.org/property/awards> ?v2 . ?v3 <http://dbpedia.org/property/birthName> ?v2 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?result <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Canada> . },"```sparql
SELECT ?birthPlace WHERE {
  ?person dbo:occupation dbr:Politician ;
          foaf:awardReceivedBy <http://dbpedia.org/resource/Renata_Adler> .
  ?person dbo:country dbr:Canada .
  ?person dbp:birthPlace ?birthPlace .
}
```",4,5,5,3,2,3,2,20,0,0,2,0,0.0,0
382,15,val,"Give me the birthplace of the manager, that is a soccer manager and an athlete and a sports manager, of the player in Lukas Kübler and landmark at elevation of 100.","SELECT ?result WHERE { <http://dbpedia.org/resource/Lukas_Kübler> <http://dbpedia.org/ontology/team> ?v0 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Athlete>. ?v1 <http://dbpedia.org/ontology/birthPlace> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsManager>. ?result <http://dbpedia.org/ontology/elevation> ""100""^^<http://www.w3.org/2001/XMLSchema#integer> . ?v0 <http://dbpedia.org/ontology/manager> ?v1 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerManager>. }","```sparql
# Step 1: Find Lukas Kübler's current soccer manager
SELECT ?manager WHERE {
  ?player dbo:birthName ""Lukas Kübler""@en .
  ?player dbo:position dbr:Soccer_Midfielder .
  ?team dbo:currentSquad ?player .
  ?team dbo:coach ?manager .
}

# Step 2: Verify if the manager is also an athlete and sports manager
SELECT DISTINCT ?manager WHERE {
  VALUES (?role1 ?role2) { (dbr:Athlete dbr:Sports_Manager) }
  ?manager rdf:type ?role1 .
  ?manager rdf:type ?role2 .
}

# Step 3: Get the birthplace of the manager
SELECT ?birthPlace WHERE {
  ?manager dbo:birthPlace ?birthPlace .
}

# Step 4: Find a landmark at an elevation of 100 meters
SELECT ?landmark WHERE {
  ?landmark dbo:elevation ""100""^^xsd:integer .
}
```",4,7,5,3,2,3,2,20,0,0,1,0,0.0,0
573,42,val,"Give me the parent of the author, that is a politician and an office holder, of Exchequer Standards and person decedent at the administration, that is a region, of Charlie Baker and person decedent at Quincy, Massachusetts.","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/deathPlace> ?v2 . <http://dbpedia.org/resource/Exchequer_Standards> <http://dbpedia.org/property/author> ?v1 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Region>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v1 <http://dbpedia.org/ontology/parent> ?result . ?result <http://dbpedia.org/ontology/deathPlace> <http://dbpedia.org/resource/Quincy,_Massachusetts> . ?v2 <http://dbpedia.org/property/governor> ""Charlie Baker""@en . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?parent WHERE {
  # Charlie Baker's administration region
  dbr:Charlie_Baker dbo:governmentRole dbr:Governor_of_Massachusetts .

  # John Maynard Keynes as the author of ""Exchequer Standards""
  dbr:John_Maynard_Keynes dbo:authorOf dbr:Exchequer_Standards .

  # Parent of John Maynard Keynes
  ?parent dbo:child dbr:John_Maynard_Keynes .
  
  # Parent is a politician and office holder
  ?parent a dbo:Politician ;
          dbo:officeHolder true .

  # Decedent at the administration region (Massachusetts)
  ?parent dbo:placeOfDeath dbr:Massachusetts .

  # Decedent at Quincy, Massachusetts
  OPTIONAL { ?parent dbo:placeOfDeath dbr:Quincy,_Massachusetts . }
}
```",5,8,6,2,3,3,3,71,0,0,2,0,0.0,0
47,47,val,"Give me the office of the administration of Jagdeep Dhankhar and office of the awardee of the award, that is an award, of Mantu Ghosh.",SELECT ?result WHERE { ?v2 <http://dbpedia.org/property/governor> <http://dbpedia.org/resource/Jagdeep_Dhankhar> . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Award>. <http://dbpedia.org/resource/Mantu_Ghosh> <http://dbpedia.org/property/awards> ?v0 . ?v2 <http://dbpedia.org/property/office> ?result . ?v4 <http://dbpedia.org/property/awards> ?v0 . ?v4 <http://dbpedia.org/property/office> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?officeDhankhar ?awardGhosh ?officeAward
WHERE {
  # Office of Jagdeep Dhankhar
  dbr:Jagdeep_Dhankhar dbo:positionHeld ?officeDhankhar .

  # Award received by Mantu Ghosh and its associated office
  OPTIONAL {
    ?person rdfs:label ""Mantu Ghosh""@en .
    ?person dbo:awardReceived ?awardGhosh .
    ?awardGhosh dbo:associatedOffice ?officeAward .
  }
}
```",5,6,6,3,2,3,3,71,0,0,1,0,0.0,0
124,45,val,"Give me the military force of the force, that is a societal event and a military conflict, of the person born on 1850-06-24 and commander in Mahdist War and military force of Battle of Tamai.","SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?result <http://dbpedia.org/ontology/battle> ?v1 . ?result <http://dbpedia.org/ontology/battle> <http://dbpedia.org/resource/Battle_of_Tamai> . <http://dbpedia.org/resource/Mahdist_War> <http://dbpedia.org/ontology/commander> ?result . ?v1 <http://dbpedia.org/ontology/commander> ?v0 . ?v0 <http://dbpedia.org/ontology/birthDate> ""1850-06-24""^^<http://www.w3.org/2001/XMLSchema#date> . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?person ?militaryForce WHERE {
  ?person dbo:birthDate ""1850-06-24""^^xsd:date .
  ?person dbo:occupation dbr:Military_person .
  
  # Check involvement in Mahdist War
  ?event1 a dbo:MilitaryConflict ;
          dbo:participatedIn ?person ;
          rdfs:label ?label1 .
  FILTER(CONTAINS(LCASE(?label1), ""mahdist war"")) .

  # Check involvement in Battle of Tamai
  ?event2 a dbo:Battle ;
          dbo:commander ?person ;
          rdfs:label ?label2 .
  FILTER(CONTAINS(LCASE(?label2), ""battle of tamai"")) .

  # Retrieve the military force associated with the person
  ?person dbo:militaryService ?militaryForce .
}
```",5,7,6,3,3,3,3,71,0,0,1,0,0.0,0
791,49,val,"Give me the father of the child, that is a royalty, of the father, that is a royalty and an office holder, of Emperor Antoku and spouse of the spouse, that is a royalty, of Emperor Takakura.",SELECT ?result WHERE { ?v1 <http://dbpedia.org/property/father> ?v0 . ?result <http://dbpedia.org/ontology/spouse> ?v2 . ?v1 <http://dbpedia.org/property/father> ?result . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v2 <http://dbpedia.org/ontology/spouse> <http://dbpedia.org/resource/Emperor_Takakura> . <http://dbpedia.org/resource/Emperor_Antoku> <http://dbpedia.org/property/father> ?v0 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. },"```sparql
SELECT ?father WHERE {
  # Step 1: Find Emperor Antoku's father who is royalty and an office holder
  ?antoku dbo:parent ?fatherAntoku .
  ?fatherAntoku rdfs:label ""Taira no Kiyomori""@en .
  
  # Step 2: Find Emperor Takakura's spouse who is royalty
  ?takakura dbo:spouse ?spouseTakakura .
  ?spouseTakakura rdfs:label ""Princess Shikishi""@en .

  # Step 3: Find the child of both identified individuals
  ?child dbo:parent ?fatherAntoku ;
         dbo:parent ?spouseTakakura .
  
  # Step 4: Identify the father of this child who is royalty
  ?child dbo:parent ?fatherChild .
  ?fatherChild rdfs:label ?resultLabel .
}
```",5,9,6,3,2,3,3,71,0,0,1,0,0.0,0
47,46,val,"Give me the office of the awardee of Banga Bhushan and office of the administration of the commander, that is a politician, in Operation Green Hunt.",SELECT ?result WHERE { ?v4 <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/Banga_Bhushan> . ?v1 <http://dbpedia.org/property/office> ?result . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v4 <http://dbpedia.org/property/office> ?result . ?v1 <http://dbpedia.org/property/governor> ?v2 . <http://dbpedia.org/resource/Operation_Green_Hunt> <http://dbpedia.org/ontology/commander> ?v2 . },"```sparql
# Query to find the office of the Banga Bhushan awardee
SELECT ?awardee ?office WHERE {
  ?award dcterms:isPartOf <http://dbpedia.org/resource/Category:Banga_Bhushan_awards> .
  ?award dbo:recipient ?person .
  ?person foaf:name ?awardee .
  OPTIONAL { ?person dbo:positionHeld ?office . }
}

UNION

# Query to find the office of a politician involved in Operation Green Hunt
SELECT ?politician ?office WHERE {
  ?operation dbo:relatedPoliticalEntity ?politician .
  FILTER(CONTAINS(LCASE(?operation), ""operation green hunt""))
  ?politician foaf:name ?politicianName .
  OPTIONAL { ?politician dbo:positionHeld ?office . }
}
```",5,6,6,3,2,3,3,71,0,0,1,0,0.0,0
965,51,val,"Give me the parent of the person born, that is a noble, as the birth name of George Mountbatten, 2nd Marquess of Milford Haven and parent of the child, that is a royalty, of Prince Louis of Battenberg.","SELECT ?result WHERE { ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Noble>. ?v0 <http://dbpedia.org/ontology/parent> ?result . ?v4 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Prince_Louis_of_Battenberg> . ?v4 <http://dbpedia.org/ontology/parent> ?result . ?v0 <http://dbpedia.org/property/birthName> ?v3 . <http://dbpedia.org/resource/George_Mountbatten,_2nd_Marquess_of_Milford_Haven> <http://dbpedia.org/property/birthName> ?v3 . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. }","```sparql
SELECT ?parent ?birthName WHERE {
  # Find George Mountbatten, 2nd Marquess of Milford Haven
  ?george a dbo:Person ;
          foaf:name ""George Mountbatten, 2nd Marquess of Milford Haven""@en ;
          dbo:birthName ?birthName .

  # Identify his parent who is noble
  ?parent dbo:child ?george .
  ?parent dbo:title ?title .
  FILTER(CONTAINS(LCASE(STR(?title)), ""noble"")) .

  # Find Prince Louis of Battenberg and his child who is royalty
  ?princeLouis a dbo:Person ;
              foaf:name ""Prince Louis of Battenberg""@en .
  
  ?child dbo:parent ?princeLouis ;
         dbo:title ?royaltyTitle .
  FILTER(CONTAINS(LCASE(STR(?royaltyTitle)), ""royalty"")) .

  # Ensure the parent is common between George and Prince Louis
  FILTER(?parent = ?georgeParent)
}
```",5,7,6,3,2,3,3,71,0,0,2,0,0.0,0
507,40,val,"Give me the director of Entertaining Mr Sloane (film) and professional in Film director, television director and spouse of the person born as the birth name of Anne V. Coates.","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/spouse> ?v1 . ?v1 <http://dbpedia.org/property/birthName> ?v2 . <http://dbpedia.org/resource/Anne_V._Coates> <http://dbpedia.org/property/birthName> ?v2 . <http://dbpedia.org/resource/Entertaining_Mr_Sloane_(film)> <http://dbpedia.org/ontology/director> ?result . ?result <http://dbpedia.org/property/occupation> ""Film director, television director""@en . }","```sparql
# Step 1: Find the director of ""Entertaining Mr Sloane""
SELECT ?director WHERE {
    dbpedia:Entertaining_Mr_Sloane_film dbo:director ?director .
}

# Step 2: Find Anne V. Coates' spouse
SELECT ?spouse WHERE {
    dbpedia:Anne_V._Coates dbo:spouse ?spouse .
}

# Step 3: Check if the spouse is a professional in film and television directing
SELECT ?spouse WHERE {
    ?spouse rdf:type dbo:FilmDirector ;
            rdf:type dbo:TelevisionDirector .
}
```",5,5,6,3,3,3,3,71,0,0,1,0,0.0,0
433,46,val,"Give me the associated musical artist of the person born, that is a musical artist and an artist, as the persona of Paul Chambers and associated musical artist of the associated musical artist, that is an artist and a musical artist, of Scott LaFaro.",SELECT ?result WHERE { ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. ?v1 <http://dbpedia.org/property/birthName> ?v2 . ?v1 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . <http://dbpedia.org/resource/Paul_Chambers> <http://xmlns.com/foaf/0.1/givenName> ?v2 . ?v4 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. <http://dbpedia.org/resource/Scott_LaFaro> <http://dbpedia.org/ontology/associatedMusicalArtist> ?v4 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. },"```sparql
# Query to find the associated musical artist of Paul Chambers
SELECT ?artist WHERE {
  wd:Q12345 wdt:P106 wd:Q33999 . # Paul Chambers is a musician (musical artist)
  wd:Q12345 wdt:P136 ?band .     # Paul Chambers was part of a band
  ?band wdt:P527 ?member .       # The band has members
  ?member wdt:P31/wdt:P279* wd:Q33999 . # Member is a musician (musical artist)
  ?member wdt:P106 wd:Q33999 .   # Member is an artist
  BIND(?member AS ?artist)       # Bind the member as the associated artist
}

UNION

# Query to find the associated musical artist of Scott LaFaro
SELECT ?artist WHERE {
  wd:Q12346 wdt:P106 wd:Q33999 . # Scott LaFaro is a musician (musical artist)
  wd:Q12346 wdt:P136 ?band .     # Scott LaFaro was part of a band
  ?band wdt:P527 ?member .       # The band has members
  ?member wdt:P31/wdt:P279* wd:Q33999 . # Member is a musician (musical artist)
  ?member wdt:P106 wd:Q33999 .   # Member is an artist
  BIND(?member AS ?artist)       # Bind the member as the associated artist
}
```

Note: Replace `wd:Q12345` with the actual DBpedia identifier for Paul Chambers and `wd:Q12346` for Scott LaFaro. Similarly, replace `wd:Q33999` with the identifier for a musician (musical artist) if needed.",5,9,6,3,2,3,3,71,0,0,2,0,0.0,0
839,48,val,"Give me the band of the band, that is a musical artist, of Charlie Huhn and band of the person born, that is a musical artist, as the persona of Kevin Russell (musician).",SELECT ?result WHERE { <http://dbpedia.org/resource/Charlie_Huhn> <http://dbpedia.org/ontology/associatedMusicalArtist> ?v1 . <http://dbpedia.org/resource/Kevin_Russell_(musician)> <http://xmlns.com/foaf/0.1/givenName> ?v3 . ?result <http://dbpedia.org/ontology/bandMember> ?v1 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?v2 <http://dbpedia.org/property/birthName> ?v3 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?v2 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . },"```sparql
SELECT ?charlieHuhnBand ?kevinRussellBand WHERE {
  # Find Charlie Huhn's band
  ?charlieHuhn dbo:associatedMusicalArtist dbr:Charlie_Huhn .
  ?charlieHuhn dbo:band dbr:Name_of_Charlie_Huhn_Band .

  # Find Kevin Russell's birth details and his associated band
  ?kevinRussell dbo:birthPlace ?place .
  ?kevinRussell dbo:associatedMusicalArtist dbr:Kevin_Russell_(musician) .
  ?kevinRussell dbo:band dbr:Name_of_Kevin_Russell_Band .

  # Bind the band names to variables
  BIND(dbr:Name_of_Charlie_Huhn_Band AS ?charlieHuhnBand)
  BIND(dbr:Name_of_Kevin_Russell_Band AS ?kevinRussellBand)
}
```

Note: Replace `dbr:Name_of_Charlie_Huhn_Band` and `dbr:Name_of_Kevin_Russell_Band` with the actual DBpedia resource identifiers for the bands once they are known.",5,7,6,3,2,3,3,71,0,0,1,0,0.0,0
892,52,val,Give me the entity in Province of Reggio Emilia and landmark at elevation of the award of Anna Ishii and entity in the profession of the true self of Enrico Crolla.,"SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/elevation> ?v4 . ?v3 <http://xmlns.com/foaf/0.1/givenName> ""Enrico Crolla""@en . ?result <http://dbpedia.org/ontology/province> <http://dbpedia.org/resource/Province_of_Reggio_Emilia> . <http://dbpedia.org/resource/Anna_Ishii> <http://dbpedia.org/property/awards> ?v4 . ?v3 <http://dbpedia.org/property/occupation> ?v1 . ?result <http://dbpedia.org/ontology/country> ?v1 . }","```sparql
# Query for an entity in Province of Reggio Emilia
SELECT ?entity WHERE {
  ?entity wdt:P131 wd:Q11170. # P131 is the property for administrative territorial entity, Q11170 is the DBpedia item for Province of Reggio Emilia
}

UNION

# Query for a landmark at elevation of Anna Ishii's award
SELECT ?landmark WHERE {
  ?award dbo:recipient dbr:Anna_Ishii. # Assuming there's an award property and recipient relation
  ?award dbo:elevation ?elevation.
  ?landmark dbo:elevation ?elevation.
}

UNION

# Query for an entity in the profession of Enrico Crolla's true self
SELECT ?entity WHERE {
  ?enrico dbo:profession ?trueProfession. # Assuming there's a direct link to his profession
  ?entity wdt:P106 ?trueProfession. # P106 is the property for occupation
}
```",6,6,7,3,3,3,3,71,0,0,1,0,0.0,0
935,17,val,"Give me the headquarter of the office of the native of Balochistan, Pakistan and death place of Abdul Raziq Bugti.","SELECT ?result WHERE { ?v0 <http://dbpedia.org/property/office> ?v3 . ?v0 <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Balochistan,_Pakistan> . ?v3 <http://dbpedia.org/ontology/location> ?result . <http://dbpedia.org/resource/Abdul_Raziq_Bugti> <http://dbpedia.org/ontology/deathPlace> ?result . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?capital ?deathPlace WHERE {
  # Find the capital of Balochistan, Pakistan
  dbr:Balochistan_(province) dbo:capital ?capital .

  # Find the death place of Abdul Raziq Bugti
  dbr:Abdul_Razzaq_Bugti dbo:placeOfBirth ?birthPlace ;
                         dbo:deathPlace ?deathPlace .
}
```",4,4,5,3,2,3,2,20,0,0,1,0,0.0,0
976,49,val,"Give me the office of the leader, that is a politician, of Grand National Assembly of Turkey and office of the person born as the birth name of Naci Bostancı.",SELECT ?result WHERE { ?v0 <http://dbpedia.org/property/birthName> ?v4 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v2 <http://dbpedia.org/property/office> ?result . <http://dbpedia.org/resource/Grand_National_Assembly_of_Turkey> <http://dbpedia.org/ontology/leader> ?v2 . <http://dbpedia.org/resource/Naci_Bostancı> <http://dbpedia.org/property/birthName> ?v4 . ?v0 <http://dbpedia.org/property/office> ?result . },"```sparql
# Query to find the office of the leader of the Grand National Assembly of Turkey
SELECT ?office WHERE {
  ?person dbo:position ""Speaker of the Grand National Assembly of Turkey""@en .
  ?person dbo:office ?office .
}

UNION

# Query to find Naci Bostancı's birth name and his office
SELECT ?birthName, ?office WHERE {
  ?person foaf:name ""Naci Bostancı""@en ;
          foaf:givenname ?birthName .
  OPTIONAL { ?person dbo:office ?office . }
}
```",5,6,6,3,2,3,3,71,0,0,1,0,0.0,0
274,22,val,"Give me the band member of the person born, that is a musical artist, as John Birks Gillespie and professional in the designer of Tetris Classic.","SELECT ?result WHERE { ?v2 <http://dbpedia.org/property/birthName> ""John Birks Gillespie""@en . ?result <http://dbpedia.org/ontology/associatedMusicalArtist> ?v2 . ?result <http://dbpedia.org/property/occupation> ?v3 . <http://dbpedia.org/resource/Tetris_Classic> <http://dbpedia.org/property/designer> ?v3 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?bandMember WHERE {
  # Dizzy Gillespie's information
  dbr:Dizzy_Gillespie dbo:birthName ""John Birks Gillespie""@en .
  
  # Alexey Pajitnov's information
  dbr:Alexey_Pajitnov dbo:profession dbr:Video_game_designer .

  # Check for any common band members or collaborations
  OPTIONAL {
    ?bandMember dbo:memberOf ?group1 .
    ?group1 dbo:performer dbr:Dizzy_Gillespie .
  }
  
  OPTIONAL {
    ?bandMember dbo:memberOf ?group2 .
    ?group2 dbo:performer dbr:Alexey_Pajitnov .
  }

  FILTER(?bandMember != dbr:Dizzy_Gillespie && ?bandMember != dbr:Alexey_Pajitnov)
}
```",4,5,5,2,2,2,3,28,0,0,8,0,0.0,0
216,19,val,Give me the office of the mayor of Ros Bates and administration of  and party of Campbell Newman.,"SELECT ?result WHERE { <http://dbpedia.org/resource/Campbell_Newman> <http://dbpedia.org/ontology/party> ?result . ?v2 <http://dbpedia.org/property/office> ?result . <http://dbpedia.org/resource/Ros_Bates> <http://dbpedia.org/property/leader> ?v2 . ?result <http://dbpedia.org/property/leader> """"@en . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?mayorOffice ?administration ?newmanParty WHERE {
  # Ros Bates information
  OPTIONAL {
    ?rosBates a dbo:Mayor ;
              dbo:office ?mayorOffice .
    ?term dbo:member ?rosBates ;
          dbo:startDate ?start ;
          dbo:endDate ?end .
    BIND(CONCAT(""Administration from "", STR(?start), "" to "", STR(?end)) AS ?administration)
  }
  
  # Campbell Newman information
  OPTIONAL {
    ?newman a dbo:Politician ;
            dbo:party ?newmanParty .
  }

  # Bind specific individuals
  VALUES (?rosBates) { dbr:Ros_Bates }
  VALUES (?newman) { dbr:Campbell_Newman }
}
```",4,4,5,2,3,2,3,28,0,0,1,0,0.0,0
917,52,val,"Give me the child of Kekūanāoʻa and child of the father of Keʻelikōlani and parent of the child, that is a royalty, of the mayor of Hawaiian Kingdom.","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/parent> ?v4 . ?result <http://dbpedia.org/property/father> ""Kekūanāoʻa""@en . ?v1 <http://dbpedia.org/property/father> ?v3 . ?result <http://dbpedia.org/ontology/child> ?v1 . <http://dbpedia.org/resource/Keʻelikōlani> <http://dbpedia.org/property/father> ?v4 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. <http://dbpedia.org/resource/Hawaiian_Kingdom> <http://dbpedia.org/property/leader> ?v3 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?childOfKekuanaoa WHERE {
  # Step 1: Identify Kekūanāoʻa's child
  ?kekuanaoa dbr:Kekūanāoʻa .
  ?kekuanaoa dbo:child ?childOfKekuanaoa .

  # Step 2: Identify Keʻelikōlani's father and his child
  ?keelikoalani dbr:Keʻelikōlani .
  ?fatherOfKeelikoalani dbo:spouse ?keelikoalani ;
                      dbo:child ?childOfFatherOfKeelikoalani .

  # Step 3: Find the mayor of the Hawaiian Kingdom
  ?mayor dbo:positionHeld dbr:Hawaiian_Kingdom_mayors .
  
  # Step 4: Identify the parent of the mayor's child that is royalty
  ?mayorChild dbo:childOf ?parentOfMayorChild ;
              a dbo:Person .
  ?parentOfMayorChild dbo:royalty ""true""^^xsd:boolean .

  # Combine relationships to find the final answer
  FILTER(?childOfKekuanaoa = ?childOfFatherOfKeelikoalani && 
         ?childOfKekuanaoa = ?parentOfMayorChild)
}
```",6,7,7,3,3,3,3,71,0,0,2,0,0.0,0
216,53,val,"Give me the team of the person born, that is a sports manager and a soccer manager and a soccer player, on 1983-12-20 and player in the coach of the reference, that is an organisation and a soccer club, to Croatia U21 and player in Mario Ivanković.","SELECT ?result WHERE { <http://dbpedia.org/resource/Mario_Ivanković> <http://dbpedia.org/ontology/team> ?result . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?v1 <http://dbpedia.org/ontology/birthDate> ""1983-12-20""^^<http://www.w3.org/2001/XMLSchema#date> . ?v3 <http://xmlns.com/foaf/0.1/name> ""Croatia U21""@en . ?v2 <http://dbpedia.org/ontology/team> ?result . ?v3 <http://dbpedia.org/ontology/coach> ?v2 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsManager>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerManager>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerClub>. ?result <http://dbpedia.org/ontology/coach> ?v1 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerPlayer>. }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?person ?team WHERE {
  ?person a dbo:SoccerPlayer ;
          dbo:birthDate ""1983-12-20""^^xsd:date ;
          dbo:sportsManager true ;
          dbo:soccerManager true .
  
  OPTIONAL { ?person dbo:coach dbr:Croatia_national_under-21_football_team . }
  
  ?playerInTeam dbo:player ?person ;
                a dbo:SoccerClub .
  
  ?playerInTeam dbp:manager dbr:Mario_Ivanković .

  FILTER EXISTS {
    ?person dbo:coach dbr:Croatia_national_under-21_football_team .
  }
}
```",6,11,7,3,3,3,3,71,0,0,1,0,0.0,0
926,45,val,"Give me the successor of Mustafa III and child of the father, that is a royalty, of the parent, that is a royalty, of Beyhan Sultan (daughter of Mustafa III) and father of Mahmud II.",SELECT ?result WHERE { ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. <http://dbpedia.org/resource/Mahmud_II> <http://dbpedia.org/property/father> ?result . ?v0 <http://dbpedia.org/ontology/child> ?result . <http://dbpedia.org/resource/Mustafa_III> <http://dbpedia.org/ontology/successor> ?result . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. <http://dbpedia.org/resource/Beyhan_Sultan_(daughter_of_Mustafa_III)> <http://dbpedia.org/ontology/parent> ?v3 . ?v3 <http://dbpedia.org/property/father> ?v0 . },"```sparql
SELECT ?successor WHERE {
  wd:Q1234568 wdt:P39 wd:Q1234569 . # Mustafa III's successor (Abdul Hamid I)
  wd:Q1234568 wdt:P22 wd:Q1234570 .   # Abdul Hamid I is the child of Mustafa III
  wd:Q1234571 wdt:P22 wd:Q1234568 .   # Mahmud II's father is Abdul Hamid I
}
```

Note: The placeholders `wd:Q1234568`, `wd:Q1234569`, `wd:Q1234570`, and `wd:Q1234571` should be replaced with the actual DBpedia identifiers for Mustafa III, his successor (Abdul Hamid I), Beyhan Sultan, and Mahmud II respectively.",5,7,6,3,3,3,3,71,0,0,1,0,0.0,0
976,41,val,"Give me the office of Naci Bostancı and office of the leader, that is a politician, of Grand National Assembly of Turkey and office of the mayor, that is a politician and an office holder and Turkish, of Nation Alliance (Turkey).",SELECT ?result WHERE { <http://dbpedia.org/resource/Nation_Alliance_(Turkey)> <http://dbpedia.org/property/leader> ?v4 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v4 <http://dbpedia.org/property/office> ?result . <http://dbpedia.org/resource/Grand_National_Assembly_of_Turkey> <http://dbpedia.org/ontology/leader> ?v2 . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. <http://dbpedia.org/resource/Naci_Bostancı> <http://dbpedia.org/property/office> ?result . ?v4 <http://dbpedia.org/ontology/nationality> <http://dbpedia.org/resource/Turkey>. ?v2 <http://dbpedia.org/property/office> ?result . },"```sparql
# Query for Naci Bostancı's office
SELECT ?office WHERE {
  dbpedia:en:Naci_Bostancı dbo:positionHeld ?office .
}

UNION

# Query for the leader of the Grand National Assembly of Turkey's office
SELECT ?office WHERE {
  ?person dbo:memberOf <http://dbpedia.org/resource/Grand_National_Assembly_of_Turkey> ;
          dbo:leaderOf <http://dbpedia.org/resource/Grand_National_Assembly_of_Turkey> .
  ?person dbo:positionHeld ?office .
}

UNION

# Query for the mayor of Nation Alliance (Turkey)'s office
SELECT ?office WHERE {
  ?mayor dbo:party <http://dbpedia.org/resource/Nation_Alliance_(Turkey)> ;
         dbo:isMayorOf ?city ;
         dbo:positionHeld ?office .
}
```",5,9,6,2,3,3,3,71,0,0,1,0,0.0,0
645,44,val,"Give me the leader of the office, that is a government agency and an organisation, of Camilo Menéndez Tolosa and military force of the force, that is an event and a military conflict and a societal event, of Francisco Largo Caballero and commander in Battle of Jarama.",SELECT ?result WHERE { ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/GovernmentAgency>. <http://dbpedia.org/resource/Camilo_Menéndez_Tolosa> <http://dbpedia.org/property/office> ?v2 . <http://dbpedia.org/resource/Battle_of_Jarama> <http://dbpedia.org/ontology/commander> ?result . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?v4 <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Francisco_Largo_Caballero> . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?v2 <http://dbpedia.org/ontology/leader> ?result . ?result <http://dbpedia.org/ontology/battle> ?v4 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?leaderOfOffice ?battleCommander WHERE {
  # Find the office led by Camilo Menéndez Tolosa
  ?office dbo:head dbr:Camilo_Menéndez_Tolosa .
  ?office a dbo:GovernmentAgency ;
          a dbo:Organization .

  # Find the leader of that office
  ?leaderOfOffice dbo:head ?office .

  # Find the military force associated with Francisco Largo Caballero
  ?militaryForce dbo:participant dbr:Francisco_Largo_Caballero .
  ?militaryForce a dbo:MilitaryConflict ;
                 a dbo:SocietalEvent ;
                 a dbo:Event .

  # Find the commander in the Battle of Jarama
  ?battleCommander dbo:commanderOf dbr:Battle_of_Jarama .
}
```",5,10,6,2,3,3,3,71,0,0,1,0,0.0,0
773,53,val,"Give me the parent of Carloman of Bavaria and spouse of the father of the parent of Bernard (son of Charles the Fat) and parent of the child, that is a royalty, of Louis the German.",SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?result <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Carloman_of_Bavaria> . ?v1 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Louis_the_German> . ?v1 <http://dbpedia.org/ontology/parent> ?result . ?v3 <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Bernard_(son_of_Charles_the_Fat)> . ?v2 <http://dbpedia.org/ontology/spouse> ?result . ?v3 <http://dbpedia.org/property/father> ?v2 . },"```sparql
SELECT DISTINCT ?individual WHERE {
  # Carloman of Bavaria's parent
  ?carloman dbo:parent ?parent1 .
  ?carloman dbp:name ""Carloman of Bavaria"" .

  # Charles the Fat's parent and their spouse
  ?charlesFat dbo:child ?bernard .
  ?bernard rdfs:label ""Bernard (son of Charles the Fat)""@en .
  ?charlesFat dbo:parent ?grandparent .
  ?grandparent dbo:spouse ?spouse .

  # Louis the German's royal child and their parent
  ?louisGerman dbo:child ?royalChild .
  ?royalChild dbo:title ?title .
  FILTER EXISTS { ?title rdfs:label ?label . FILTER regex(?label, ""King|Queen"", ""i"") }
  ?royalChild dbo:parent ?parent2 .

  # Find the common individual
  FILTER (?parent1 = ?spouse && ?parent2 = ?spouse)
}
```",6,7,7,3,3,3,3,71,0,0,1,0,0.0,0
773,44,val,"Give me the parent of the child, that is a royalty, of Louis the German and spouse of Louis the German and parent of the successor of Charles the Bald.",SELECT ?result WHERE { ?v2 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Louis_the_German> . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. <http://dbpedia.org/resource/Charles_the_Bald> <http://dbpedia.org/ontology/successor> ?v4 . <http://dbpedia.org/resource/Louis_the_German> <http://dbpedia.org/ontology/spouse> ?result . ?result <http://dbpedia.org/ontology/child> ?v4 . ?v2 <http://dbpedia.org/ontology/parent> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?parent WHERE {
  # Louis the German and his spouse
  dbr:Louis_the_German dbo:spouse dbr:Hildegarde_of_Vinzgouw .
  
  # Charles the Bald's successor
  dbr:Charles_the_Bald dbo:child dbr:Louis_the_Stammerer .

  # Parent of Louis the Stammerer (Charles the Bald)
  dbr:Louis_the_Stammerer dbo:parent dbr:Charles_the_Bald .

  # Parent of Hildegarde of Vinzgouw
  dbr:Hildegarde_of_Vinzgouw dbo:parent ?parent .
}
```",5,6,6,2,3,3,3,71,0,0,1,0,0.0,0
98,21,val,"Give me the entity in the region, that is a country, of Philippine Standard Time and region of Philippine Standard Time and birth place of Paolo Ballesteros.",SELECT ?result WHERE { ?v1 <http://dbpedia.org/property/timeZone> <http://dbpedia.org/resource/Philippine_Standard_Time> . ?result <http://dbpedia.org/ontology/timeZone> <http://dbpedia.org/resource/Philippine_Standard_Time> . ?result <http://dbpedia.org/ontology/country> ?v1 . <http://dbpedia.org/resource/Paolo_Ballesteros> <http://dbpedia.org/ontology/birthPlace> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. },"```sparql
SELECT ?country WHERE {
  ?timeZone dcterms:isPartOf ?region .
  ?timeZone rdfs:label ""Philippine Standard Time""@en .
  ?region rdfs:label ?regionLabel .
  
  OPTIONAL { 
    ?person dbo:birthPlace ?place .
    ?person foaf:name ""Paolo Ballesteros""@en .
    ?place rdfs:label ?placeLabel .
  }
  
  FILTER(?regionLabel = ""Philippines"" && ?placeLabel = ""Philippines"")
  ?country rdf:type dbo:Country .
  ?country dcterms:isPartOf ?region .
}
```",4,5,5,2,3,2,3,28,0,0,2,0,0.0,0
987,55,val,"Give me the birth place of the actor of All for Free and birth place of the band, that is an artist and a musical artist, of Šako Polumenta and entity in the region, that is a country, of Central European Time.",SELECT ?result WHERE { ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. ?v5 <http://dbpedia.org/ontology/birthPlace> ?result . ?result <http://dbpedia.org/ontology/country> ?v0 . ?v0 <http://dbpedia.org/property/timeZone> <http://dbpedia.org/resource/Central_European_Time> . <http://dbpedia.org/resource/Šako_Polumenta> <http://dbpedia.org/ontology/associatedMusicalArtist> ?v2 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. <http://dbpedia.org/resource/All_for_Free> <http://dbpedia.org/property/starring> ?v5 . ?v2 <http://dbpedia.org/ontology/birthPlace> ?result . },"```sparql
# Query for the actor of ""All for Free"" and their birth place
SELECT ?actor ?birthPlace WHERE {
  ?movie dcterms:title ""All for Free""@en .
  ?movie dbo:starring ?actor .
  ?actor foaf:bornIn ?birthPlace .
}

UNION

# Query for Šako Polumenta's band and its birth place
SELECT ?band ?birthPlace WHERE {
  ?person foaf:name ""Šako Polumenta""@en .
  ?person dbo:memberOfBand ?band .
  ?band dbo:birthPlace ?birthPlace .
}

UNION

# Query for a country in the Central European Time region
SELECT ?country WHERE {
  ?timeZone dcterms:title ""Central European Time"" .
  ?timeZone dbo:country ?country .
}
```",6,9,7,2,3,3,3,71,0,0,1,0,0.0,0
158,16,val,"Give me the party of the successor, that is a prime minister and an office holder and a politician, of André Tardieu and entity in the award, that is a country, of Adelbert Cronkhite.",SELECT ?result WHERE { <http://dbpedia.org/resource/Adelbert_Cronkhite> <http://dbpedia.org/property/awards> ?v2 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. ?v3 <http://dbpedia.org/ontology/party> ?result . <http://dbpedia.org/resource/André_Tardieu> <http://dbpedia.org/ontology/successor> ?v3 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?result <http://dbpedia.org/ontology/country> ?v2 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/PrimeMinister>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?successorParty ?awardCountry WHERE {
  # Part 1: André Tardieu's successor
  ?tardieu a dbo:Politician ;
          foaf:name ""André Tardieu""@en .
  
  ?tardieu dbo:officeHolderOf dbr:Prime_Minister_of_France .

  ?successor dbo:predecessor ?tardieu ;
            dbo:officeHolderOf dbr:Prime_Minister_of_France ;
            a dbo:Politician ;
            dbo:party ?successorParty .
  
  # Part 2: Adelbert Cronkhite's award
  ?cronkhite a dbo:Person ;
             foaf:name ""Adelbert Cronkhite""@en .

  ?award dbo:recipient ?cronkhite ;
         dbo:country ?awardCountry .
}

```",4,8,5,2,2,3,2,20,0,0,1,0,0.0,0
715,51,val,"Give me the leader of the office, that is a government agency and an organisation, of the reference to Carlos Franco Iribarnegaray and commander in the force of Francisco Largo Caballero.","SELECT ?result WHERE { ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?v4 <http://dbpedia.org/ontology/commander> ?result . ?v1 <http://dbpedia.org/property/office> ?v2 . ?v2 <http://dbpedia.org/ontology/leader> ?result . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/GovernmentAgency>. ?v4 <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Francisco_Largo_Caballero> . ?v1 <http://xmlns.com/foaf/0.1/name> ""Carlos Franco Iribarnegaray""@en . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?office ?leader WHERE {
  # Find offices associated with Carlos Franco Iribarnegaray as a leader
  {
    ?person rdfs:label ""Carlos Franco Iribarnegaray""@en .
    ?person dbo:positionHeld ?office .
    ?office dbo:head ?leader .
  }
  
  UNION
  
  # Find forces associated with Francisco Largo Caballero as a commander
  {
    ?person rdfs:label ""Francisco Largo Caballero""@en .
    ?person dbo:commanderOf ?force .
    ?force dbo:commander ?leader .
  }

  FILTER(?office = ?force) # Find common entity
}
```",5,7,6,3,2,3,3,71,0,0,1,0,0.0,0
83,7,val,Give me the player in the person born on 1995-07-07 and player in Albert Edward (soccer).,"SELECT ?result WHERE { <http://dbpedia.org/resource/Albert_Edward_(soccer)> <http://dbpedia.org/ontology/team> ?result . ?v0 <http://dbpedia.org/ontology/birthDate> ""1995-07-07""^^<http://www.w3.org/2001/XMLSchema#date> . ?v0 <http://dbpedia.org/ontology/team> ?result . }","```sparql
# Query for player born on 1995-07-07
SELECT ?player WHERE {
    ?player a dbo:FootballPlayer .
    ?player dbo:birthDate ""1995-07-07""^^xsd:date .
}

UNION

# Query for player associated with Albert Edward (soccer)
SELECT ?relatedPlayer WHERE {
    ?albertEdward a dbo:SoccerPlayer ;
                  foaf:name ""Albert Edward""@en .
    ?albertEdward dbo:associatedWith ?relatedPlayer .
}
```",3,3,4,2,2,2,2,9,0,0,1,0,0.0,0
987,40,val,"Give me the birth place of the band, that is an artist and a musical artist, of the band, that is an artist, of Dado Polumenta and entity in Montenegro and birth place of Moamer Kasumović.",SELECT ?result WHERE { ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. ?v3 <http://dbpedia.org/ontology/associatedMusicalArtist> ?v1 . ?v1 <http://dbpedia.org/ontology/birthPlace> ?result . <http://dbpedia.org/resource/Dado_Polumenta> <http://dbpedia.org/ontology/associatedMusicalArtist> ?v3 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?result <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Montenegro> . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. <http://dbpedia.org/resource/Moamer_Kasumović> <http://dbpedia.org/ontology/birthPlace> ?result . },"```sparql
SELECT ?birthPlace WHERE {
  ?person foaf:name ""Dado Prljaca""@en .
  ?person dbo:birthPlace ?birthPlace .
  FILTER EXISTS { ?band dbo:member ?person . }
  FILTER EXISTS { ?band dbo:genre dbr:Musical_artist . }
  FILTER EXISTS { ?person dbo:nationality dbr:Montenegro . }
}
```",5,8,6,3,3,3,3,71,0,0,1,0,0.0,0
433,53,val,"Give me the professional in the profession of Bob Marley and associated musical artist of Bill Evans and associated musical artist of the person born, that is a musical artist and an artist, as the persona of Paul Chambers.",SELECT ?result WHERE { <http://dbpedia.org/resource/Paul_Chambers> <http://xmlns.com/foaf/0.1/givenName> ?v3 . ?v2 <http://dbpedia.org/property/birthName> ?v3 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?v2 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . <http://dbpedia.org/resource/Bill_Evans> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . <http://dbpedia.org/resource/Bob_Marley> <http://dbpedia.org/property/occupation> ?v1 . ?result <http://dbpedia.org/property/occupation> ?v1 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?person WHERE {
  # Bob Marley's profession
  VALUES ?bobMarleyProfession {dbr:Singer-songwriter dbr:Guitarist}

  # Bill Evans' associated musical artist
  ?billEvans dbr:Bill_Evans dbo:associatedMusicalArtist ?milesDavis .
  
  # Paul Chambers' persona
  ?paulChambers dbr:Paul_Chambers dbo:associatedMusicalArtist ?johnColtrane .

  # Person born as a musical artist and an artist (David Bowie)
  ?davidBowie dbr:David_Bowie dbo:musicalArtist true ;
                dbo:artist true .

  # The person we are looking for
  ?person dbo:profession ?bobMarleyProfession ;
          dbo:associatedMusicalArtist ?milesDavis ;
          dbo:associatedMusicalArtist ?johnColtrane ;
          dbo:collaboratedWith ?davidBowie .
}
```",6,8,7,3,3,3,3,71,0,0,1,0,0.0,0
507,44,val,"Give me the professional in the profession of Guy Ferland and spouse of Anne V. Coates and director of the movie, that is a movie and a work, with Beryl Reid.",SELECT ?result WHERE { ?result <http://dbpedia.org/property/occupation> ?v2 . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. <http://dbpedia.org/resource/Guy_Ferland> <http://dbpedia.org/property/occupation> ?v2 . ?v4 <http://dbpedia.org/property/starring> <http://dbpedia.org/resource/Beryl_Reid> . ?result <http://dbpedia.org/ontology/spouse> <http://dbpedia.org/resource/Anne_V._Coates> . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Film>. ?v4 <http://dbpedia.org/ontology/director> ?result . },"```sparql
SELECT ?person WHERE {
  # Guy Ferland's profession (editor)
  ?guyFerland dbo:profession dbr:Film_editor .
  
  # Anne V. Coates' spouse who is also a director and has worked with Beryl Reid
  ?anneVCoates dbo:spouse ?person .
  ?person dbo:profession dbr:Film_director .
  ?movie dbo:director ?person ;
         dbo:starring dbr:Beryl_Reid .

  # Ensure the person is in the same profession as Guy Ferland (editor)
  ?person dbo:profession dbr:Film_editor .
}
```",5,7,6,2,3,3,3,71,0,0,1,0,0.0,0
917,55,val,"Give me the child of the father of Keʻelikōlani and child of the father of Kamehameha IV and parent of the child, that is a royalty, of Kamehameha IV.",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/child> ?v2 . <http://dbpedia.org/resource/Kamehameha_IV> <http://dbpedia.org/property/father> ?v0 . <http://dbpedia.org/resource/Keʻelikōlani> <http://dbpedia.org/property/father> ?v5 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?result <http://dbpedia.org/ontology/parent> ?v5 . ?result <http://dbpedia.org/property/father> ?v0 . ?v2 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Kamehameha_IV> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?person WHERE {
  # Keʻelikōlani's father
  ?keelikoalani dbo:father dbr:Kapaʻakea.
  
  # Kamehameha IV's father
  ?kamehamehaIV dbo:father dbr:Kīnaʻu.

  # Common child of both fathers (Princess Victoria Kamāmalu)
  ?commonChild dbo:mother dbr:Kapaʻakea.
  ?commonChild dbo:mother dbr:Kīnaʻu.
  
  # Parent of Kamehameha IV's child
  ?kamehamehaIVChild dbo:parent ?commonChild.

  # Ensure the person is royalty
  ?person rdfs:label ""Princess Victoria Kamāmalu""@en.
}
```",6,7,7,2,3,3,3,71,0,0,1,0,0.0,0
826,54,val,"Give me the successor of the child, that is a royalty, of the reference, that is a royalty, to Louis I and predecessor of Louis IV, Grand Duke of Hesse and spouse of the child of Johann Heinrich Appel.","SELECT ?result WHERE { ?v3 <http://dbpedia.org/property/father> ""Johann Heinrich Appel""@en . ?v5 <http://dbpedia.org/ontology/successor> ?result . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v0 <http://xmlns.com/foaf/0.1/name> ""Louis I""@en . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?result <http://dbpedia.org/ontology/successor> <http://dbpedia.org/resource/Louis_IV,_Grand_Duke_of_Hesse> . ?v3 <http://dbpedia.org/ontology/spouse> ?result . ?v0 <http://dbpedia.org/ontology/child> ?v5 . }","```sparql
SELECT ?successor WHERE {
  # Identify Louis IV as Grand Duke of Hesse
  ?louisIV dbo:spouse ?spouse .
  ?louisIV dbp:title ""Louis IV, Grand Duke of Hesse""@en .

  # Find Louis I who is predecessor to Louis IV
  ?louisI dbo:successor ?louisIV .
  
  # Identify a child of Louis I who is royalty
  ?childOfLouisI dbo:parent ?louisI ;
                rdf:type dbo:Monarch .

  # Find the successor of this child
  ?childOfLouisI dbo:successor ?successor .

  # Identify Johann Heinrich Appel's child and their spouse
  ?appelChild dbo:parent dbc:Johann_Heinrich_Appel ;
              dbo:spouse ?spouse .
  
  # Ensure the successor is the spouse of Johann Heinrich Appel's child
  FILTER (?successor = ?spouse)
}
```",6,8,7,3,3,3,3,71,0,0,1,0,0.0,0
773,52,val,Give me the parent of Charles the Fat and parent of the successor of Charles the Bald and spouse of the father of the parent of Bernard (son of Charles the Fat).,SELECT ?result WHERE { ?v3 <http://dbpedia.org/property/father> ?v2 . ?result <http://dbpedia.org/ontology/child> ?v5 . <http://dbpedia.org/resource/Charles_the_Bald> <http://dbpedia.org/ontology/successor> ?v5 . <http://dbpedia.org/resource/Charles_the_Fat> <http://dbpedia.org/ontology/parent> ?result . ?v3 <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Bernard_(son_of_Charles_the_Fat)> . ?v2 <http://dbpedia.org/ontology/spouse> ?result . },"```sparql
# Query 1: Parent of Charles the Fat
SELECT ?parent WHERE {
  wd:Q12345 dbo:child ?person .
  ?person rdf:type dbo:Person .
  FILTER (?person IN (wd:Q12345)) # Assuming Q12345 is Charles the Fat's DBpedia ID
  OPTIONAL { ?person dbo:father ?parent . }
  OPTIONAL { ?person dbo:mother ?parent . }
}

# Query 2: Parent of the successor of Charles the Bald
SELECT ?successorParent WHERE {
  wd:Q67890 dbo:succeededBy ?successor .
  ?successor rdf:type dbo:Person .
  FILTER (?successor IN (wd:Q67890)) # Assuming Q67890 is Charles the Bald's DBpedia ID
  OPTIONAL { ?successor dbo:father ?successorParent . }
  OPTIONAL { ?successor dbo:mother ?successorParent . }
}

# Query 3: Spouse of the father of the parent of Bernard (son of Charles the Fat)
SELECT ?spouse WHERE {
  wd:Q23456 dbo:child ?bernard .
  ?bernard rdf:type dbo:Person .
  FILTER (?bernard IN (wd:Q23456)) # Assuming Q23456 is Bernard's DBpedia ID
  OPTIONAL { ?bernard dbo:father ?parent . }
  OPTIONAL { ?parent dbo:father ?grandParent . }
  OPTIONAL { ?grandParent dbo:spouse ?spouse . }
}
```

Note: The actual DBpedia IDs for Charles the Fat, Charles the Bald, and Bernard need to be verified and replaced in the queries above (e.g., `wd:Q12345`, `wd:Q67890`, `wd:Q23456`).",6,6,7,3,3,3,3,71,0,0,1,0,0.0,0
459,22,val,"Give me the governor of the death place, that is a settlement, of Cliff Roquemore and governor of the administration, that is a politician, of Brad Henry.",SELECT ?result WHERE { ?v3 <http://dbpedia.org/property/governor> ?result . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. <http://dbpedia.org/resource/Cliff_Roquemore> <http://dbpedia.org/ontology/deathPlace> ?v2 . ?v2 <http://dbpedia.org/property/governor> ?result . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v3 <http://dbpedia.org/property/governor> <http://dbpedia.org/resource/Brad_Henry> . },"```sparql
# Query for Cliff Roquemore's death place and its governor
SELECT ?deathPlace ?governor WHERE {
  ?cliffRoquemore dbo:deathPlace ?deathPlace .
  ?deathPlace a dbo:Settlement .
  ?deathPlace dbo:country dbr:United_States .
  ?state dbo:capital ?deathPlace .
  ?state dbo:governmentHead ?governor .
  FILTER (LANG(?governorLabel) = ""en"")
} 

UNION

# Query for Brad Henry's administration and its governor
SELECT ?henryAdministrationStart ?henryAdministrationEnd ?governor WHERE {
  dbr:Brad_Henry dbo:officeHolder [
    a dbo:Governor ;
    dbo:termStart ?henryAdministrationStart ;
    dbo:termEnd ?henryAdministrationEnd .
  ] .
  ?oklahomaGovOffice dbo:holder ?governor .
  ?oklahomaGovOffice dbo:state dbr:Oklahoma .
  ?oklahomaGovOffice dbo:startDate ?startYear .
  ?oklahomaGovOffice dbo:endDate ?endYear .
  FILTER (?startYear <= ?henryAdministrationStart && ?endYear >= ?henryAdministrationEnd)
  FILTER (LANG(?governorLabel) = ""en"")
}
```",4,6,5,2,2,2,3,28,0,0,1,0,0.0,0
329,20,val,"Give me the entity in Northern Ireland and entity in the region, that is a country, of Western European Time and birthplace of Eric Cross (writer).",SELECT ?result WHERE { ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. ?v3 <http://dbpedia.org/property/timeZone> <http://dbpedia.org/resource/Western_European_Time> . <http://dbpedia.org/resource/Eric_Cross_(writer)> <http://dbpedia.org/ontology/birthPlace> ?result . ?result <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Northern_Ireland> . ?result <http://dbpedia.org/ontology/country> ?v3 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?countyDown ?northernIreland ?unitedKingdom WHERE {
  # County Down in Northern Ireland
  dbr:County_Down dbo:country dbr:Northern_Ireland .
  
  # Northern Ireland is part of the United Kingdom
  dbr:Northern_Ireland dbo:partOf dbr:United_Kingdom .

  # The United Kingdom uses Western European Time
  OPTIONAL { 
    ?ukTimeZone rdfs:label ""Western European Time""@en .
    dbr:United_Kingdom dbo:timeZone ?ukTimeZone .
  }
  
  FILTER (lang(?ukTimeZone) = 'en')
}
```",4,5,5,2,3,2,3,28,0,0,1,0,0.0,0
47,42,val,Give me the office of the awardee of Padma Vibhushan and office of Bidesh Ranjan Bose and office of the administration of Jagdeep Dhankhar.,SELECT ?result WHERE { ?v2 <http://dbpedia.org/property/governor> <http://dbpedia.org/resource/Jagdeep_Dhankhar> . ?v2 <http://dbpedia.org/property/office> ?result . ?v1 <http://dbpedia.org/property/office> ?result . ?v1 <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/Padma_Vibhushan> . <http://dbpedia.org/resource/Bidesh_Ranjan_Bose> <http://dbpedia.org/property/office> ?result . },"```sparql
# Query for an awardee of Padma Vibhushan (example: Lata Mangeshkar)
SELECT ?office WHERE {
  wd:Q123456 wdt:P39 ?office .
}

# Query for Bidesh Ranjan Bose
SELECT ?office WHERE {
  wd:Q789012 wdt:P39 ?office .
}

# Query for Jagdeep Dhankhar
SELECT ?office WHERE {
  wd:Q345678 wdt:P39 ?office .
}
```

Note: Replace `wd:Q123456`, `wd:Q789012`, and `wd:Q345678` with the actual DBpedia resource identifiers for Lata Mangeshkar, Bidesh Ranjan Bose, and Jagdeep Dhankhar respectively. You can find these identifiers by searching their names on DBpedia.",5,5,6,2,3,3,3,71,0,0,1,0,0.0,0
791,47,val,"Give me the predecessor of the child of the child, that is an office holder and a royalty, of Emperor Go-Shirakawa and spouse of the spouse, that is a royalty, of Emperor Takakura.",SELECT ?result WHERE { ?v4 <http://dbpedia.org/property/father> ?v0 . ?result <http://dbpedia.org/ontology/spouse> ?v2 . ?result <http://dbpedia.org/ontology/successor> ?v4 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v0 <http://dbpedia.org/ontology/parent> <http://dbpedia.org/resource/Emperor_Go-Shirakawa> . ?v2 <http://dbpedia.org/ontology/spouse> <http://dbpedia.org/resource/Emperor_Takakura> . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT DISTINCT ?predecessor WHERE {
  # Step 1: Find a child of Emperor Go-Shirakawa who is an office holder and royalty
  ?child dbo:parent dbr:Emperor_Go-Shirakawa ;
         dbo:officeHolder ?office ;
         rdf:type dbo:Royalty .

  # Step 2: Find the child of that child who is also an office holder and royalty
  ?grandchild dbo:parent ?child ;
              dbo:officeHolder ?office2 ;
              rdf:type dbo:Royalty .

  # Step 3: Identify the spouse of this grandchild, ensuring they are royalty
  ?spouse dbo:spouse ?grandchild ;
          rdf:type dbo:Royalty .

  # Step 4: Find the predecessor of this spouse
  ?predecessor dbo:successor ?spouse .

  # Step 5: Identify the spouse of Emperor Takakura who is royalty
  ?takakuraSpouse dbo:spouse dbr:Emperor_Takakura ;
                  rdf:type dbo:Royalty .

  # Step 6: Ensure the predecessor found in step 4 matches the predecessor of the spouse from step 5
  FILTER(?predecessor = ?takakuraPredecessor)
}
```",5,8,6,3,2,3,3,71,0,0,1,0,0.0,0
865,52,val,"Give me the father of Shahla Khatun and father of the child, that is a politician, of Abu Ahmad Abdul Hafiz and native of the residence, that is a country, of the person decedent at Patna.",SELECT ?result WHERE { ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. <http://dbpedia.org/resource/Shahla_Khatun> <http://dbpedia.org/property/father> ?result . ?v1 <http://dbpedia.org/ontology/deathPlace> <http://dbpedia.org/resource/Patna> . ?v1 <http://dbpedia.org/property/residence> ?v0 . ?v4 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Abu_Ahmad_Abdul_Hafiz> . ?result <http://dbpedia.org/ontology/birthPlace> ?v0 . ?v4 <http://dbpedia.org/property/father> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?shahlaFather ?politicianChildFather ?decedentCountry WHERE {
  # Shahla Khatun's father
  OPTIONAL { 
    dbr:Shahla_Khatun dbo:father ?shahlaFather .
  }

  # Abu Ahmad Abdul Hafiz's child who is a politician
  OPTIONAL {
    dbr:Abu_Ahmad_Abdul_Hafiz dbo:child ?politicianChild .
    ?politicianChild dbo:occupation dbr:Politician .
    ?politicianChild dbo:father ?politicianChildFather .
  }

  # Person decedent at Patna and their native country
  OPTIONAL {
    ?decedent dbo:deathPlace dbr:Patna .
    ?decedent dbo:nationality ?decedentCountry .
  }
}
```",6,8,7,3,3,3,3,71,1,4,0,0.2,1.0,0.33333333333333337
281,21,val,Give me the awardee of Medal bar and awardee of the award of Alfred Warden and commander in New Guinea campaign.,SELECT ?result WHERE { <http://dbpedia.org/resource/New_Guinea_campaign> <http://dbpedia.org/ontology/commander> ?result . ?result <http://dbpedia.org/property/awards> ?v0 . ?result <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/Medal_bar> . <http://dbpedia.org/resource/Alfred_Warden> <http://dbpedia.org/property/awards> ?v0 . },"```sparql
# Query to find the awardee of the Medal Bar
SELECT ?person WHERE {
  ?person dbo:award <http://dbpedia.org/resource/Medal_Bar> .
}

UNION

# Query to find the awardee of an award named after Alfred Warden
SELECT ?person WHERE {
  ?award dbo:name ""Alfred Warden"" ;
         dbo:recipient ?person .
}

UNION

# Query to find a commander in the New Guinea campaign
SELECT ?commander WHERE {
  ?campaign dbo:name ""New Guinea campaign"" ;
            dbo:commander ?commander .
}
```",4,4,5,2,3,2,3,28,0,0,1,0,0.0,0
826,51,val,"Give me the predecessor of the parent of the child of Louis IV, Grand Duke of Hesse and successor of the child, that is a royalty, of Louis I, Grand Duke of Hesse.","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/successor> ?v2 . ?v4 <http://dbpedia.org/ontology/successor> ?result . <http://dbpedia.org/resource/Louis_I,_Grand_Duke_of_Hesse> <http://dbpedia.org/ontology/child> ?v4 . ?v1 <http://dbpedia.org/ontology/parent> <http://dbpedia.org/resource/Louis_IV,_Grand_Duke_of_Hesse> . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v1 <http://dbpedia.org/ontology/parent> ?v2 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?predecessor ?successor WHERE {
  # Louis IV, Grand Duke of Hesse and his child
  dbr:Louis_IV,_Grand_Duke_of_Hesse dbo:child ?child1 .
  
  # Parent of the child (Louis IV)
  ?parent dbo:child ?child1 .
  
  # Predecessor of the parent (Louis IV)
  ?predecessor dbo:succeededBy ?parent .

  # Louis I, Grand Duke of Hesse and his child
  dbr:Louis_I,_Grand_Duke_of_Hesse dbo:child ?child2 .

  # Successor of the child that is a royalty
  ?successor dbo:predecessor ?child2 .
  
  FILTER (dbo:Person ?predecessor)
  FILTER (dbo:Person ?successor)
}
```",5,6,6,3,2,3,3,71,0,0,1,0,0.0,0
465,52,val,"Give me the successor of Renée of France and successor of the child of the parent of Ercole II d'Este, Duke of Ferrara and spouse of the child, that is a royalty, of Ferdinand I, Holy Roman Emperor.","SELECT ?result WHERE { <http://dbpedia.org/resource/Ercole_II_d'Este,_Duke_of_Ferrara> <http://dbpedia.org/ontology/parent> ?v3 . <http://dbpedia.org/resource/Renée_of_France> <http://dbpedia.org/ontology/successor> ?result . ?result <http://dbpedia.org/ontology/spouse> ?v5 . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v2 <http://dbpedia.org/ontology/successor> ?result . <http://dbpedia.org/resource/Ferdinand_I,_Holy_Roman_Emperor> <http://dbpedia.org/ontology/child> ?v5 . ?v2 <http://dbpedia.org/property/father> ?v3 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT DISTINCT ?successorRenée ?successorErcoleChild ?royalSpouseSuccessor WHERE {
  # Successor of Renée of France
  ?renée dbo:spouse ?spouseRenée .
  FILTER(STR(?renée) = ""Renée_of_France"")
  
  # Assuming successor is the next in line or related royalty
  OPTIONAL { ?spouseRenée dbo:succedBy ?successorRenée . }
  
  # Successor of the child of the parent of Ercole II d'Este
  ?ercole dbo:parent ?parentErcole .
  FILTER(STR(?ercole) = ""Ercole_II_d%27Este"")
  
  ?parentErcole dbo:child ?childAlfonso .
  OPTIONAL { ?childAlfonso dbo:succedBy ?successorErcoleChild . }
  
  # Spouse of the child of Ferdinand I, Holy Roman Emperor
  ?ferdinand dbo:child ?childFerdinand .
  FILTER(STR(?ferdinand) = ""Ferdinand_I,_Holy_Roman_Emperor"")
  
  OPTIONAL { ?childFerdinand dbo:spouse ?royalSpouse . }
  OPTIONAL { ?royalSpouse dbo:succedBy ?royalSpouseSuccessor . }
  
  # Combine to find the final successor
  FILTER(?successorErcoleChild = ?royalSpouse)
}
```",6,7,7,3,3,3,3,71,0,0,1,0,0.0,0
130,15,val,"Give me the figure known as the film, that is a soccer club and an organisation, of the native, that is a coach and a college coach, of Madison, Alabama and entity in Tennessee.","SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Coach>. ?v0 <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Madison,_Alabama> . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerClub>. ?result <http://dbpedia.org/property/nickname> ?v1 . ?v1 <http://dbpedia.org/ontology/director> ?v0 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/CollegeCoach>. ?result <http://dbpedia.org/ontology/state> <http://dbpedia.org/resource/Tennessee> . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT DISTINCT ?person ?film WHERE {
  # Find a coach from Madison, Alabama
  ?person dbo:nationality dbr:United_States ;
          dbo:birthPlace dbr:Madison,_Alabama ;
          dbo:occupation dbr:Coolie .

  # Check if this person is connected to an organization in Tennessee
  OPTIONAL { 
    ?organization dbo:location dbr:Tennessee ;
                  dbo:coach ?person .
  }

  # Find a film associated with the soccer club/organization
  OPTIONAL {
    ?film dbo:subject ?organization .
  }
  
  FILTER EXISTS { ?organization . } # Ensure there is an organization linked
}
```",4,8,5,3,2,3,2,20,0,0,1,0,0.0,0
791,45,val,"Give me the father of the child, that is a royalty, of the father, that is a royalty and an office holder, of Emperor Antoku and predecessor of Emperor Antoku and spouse of Taira no Tokuko.",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/spouse> <http://dbpedia.org/resource/Taira_no_Tokuko> . ?v1 <http://dbpedia.org/property/father> ?result . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v1 <http://dbpedia.org/property/father> ?v0 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?result <http://dbpedia.org/ontology/successor> <http://dbpedia.org/resource/Emperor_Antoku> . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. <http://dbpedia.org/resource/Emperor_Antoku> <http://dbpedia.org/property/father> ?v0 . },"```sparql
SELECT ?father WHERE {
  wd:Q123456 wdt:P31/wdt:P279* wd:Q5; # Emperor Antoku is an instance of human (royalty)
  wdt:P22 ?father. # Father of Emperor Antoku

  ?father wdt:P31/wdt:P279* wd:Q5; # The father is a royalty
          wdt:P39 ?office. # The father holds an office

  ?father wdt:P26 wd:Q123456. # The father is the predecessor of Emperor Antoku

  ?father wdt:P26 wd:Q789012. # The father is married to Taira no Tokuko (assuming Q789012 is her DBpedia ID)
}
```

Note: Replace `wd:Q123456` with the actual DBpedia ID for Emperor Antoku and `wd:Q789012` with the DBpedia ID for Taira no Tokuko.",5,8,6,3,3,3,3,71,0,0,1,0,0.0,0
978,17,val,Give me the band member of Enya and band member of the person born as the name of Chicane (musician).,SELECT ?result WHERE { ?v3 <http://dbpedia.org/property/birthName> ?v0 . ?result <http://dbpedia.org/ontology/associatedMusicalArtist> ?v3 . ?result <http://dbpedia.org/ontology/associatedMusicalArtist> <http://dbpedia.org/resource/Enya> . <http://dbpedia.org/resource/Chicane_(musician)> <http://xmlns.com/foaf/0.1/givenName> ?v0 . },"```sparql
# Query to find Enya's collaborators (not traditional band members)
SELECT ?collaborator WHERE {
  wd:Q15288 wdt:P106 wd:Q82955 . # Enya is a musician
  ?collaboration wdt:P527 wd:Q15288 . # Collaborations involving Enya
  ?collaboration wdt:P175 ?collaborator . # People involved in the collaboration
  FILTER(?collaborator != wd:Q15288) # Exclude Enya herself
}

UNION

# Query to find Chicane's collaborators (not traditional band members)
SELECT ?collaborator WHERE {
  wd:Q177878 wdt:P31 wd:Q48350160 . # Nicholas Bracegirdle is a musician
  ?collaboration wdt:P527 wd:Q177878 . # Collaborations involving Nicholas Bracegirdle
  ?collaboration wdt:P175 ?collaborator . # People involved in the collaboration
  FILTER(?collaborator != wd:Q177878) # Exclude Chicane/Nicholas Bracegirdle himself
}
```",4,4,5,3,2,3,2,20,0,0,1,0,0.0,0
839,49,val,"Give me the band of the person born, that is a musical artist, as Kevin Richard Russell and band of the band, that is a musical artist, of the professional in Musician.","SELECT ?result WHERE { ?v0 <http://dbpedia.org/ontology/associatedMusicalArtist> ?v1 . ?v2 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?result <http://dbpedia.org/ontology/bandMember> ?v1 . ?v2 <http://dbpedia.org/property/birthName> ""Kevin Richard Russell""@en . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?v0 <http://dbpedia.org/property/occupation> ""Musician""@en . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. }","```sparql
# Query for Kevin Richard Russell's band
SELECT ?band WHERE {
  ?person dbo:birthName ""Kevin Richard Russell""@en .
  ?person rdf:type dbo:MusicalArtist .
  ?person dbo:associatedBand ?band .
}

UNION

# Query for a notable musician (e.g., The Beatles) and their associated band
SELECT ?band WHERE {
  ?musician rdfs:label ""The Beatles""@en .
  ?musician rdf:type dbo:MusicalGroup .
  ?musician dbo:associatedBand ?band .
}
```",5,7,6,3,2,3,3,71,0,0,1,0,0.0,0
417,40,val,"Give me the child of Alexandrine of Mecklenburg-Schwerin and child of Christian X of Denmark and spouse of the parent, that is a royalty, of the child of Knud, Hereditary Prince of Denmark.","SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/child> ?v2 . ?result <http://dbpedia.org/ontology/parent> <http://dbpedia.org/resource/Alexandrine_of_Mecklenburg-Schwerin> . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?result <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Christian_X_of_Denmark> . ?v2 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Knud,_Hereditary_Prince_of_Denmark> . ?result <http://dbpedia.org/ontology/spouse> ?v1 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?child ?spouse WHERE {
  # Find a child of Alexandrine of Mecklenburg-Schwerin and Christian X of Denmark
  ?child dbo:parent dbr:Alexandrine_of_Mecklenburg-Schwerin .
  ?child dbo:parent dbr:Christian_X_of_Denmark .

  # The spouse of the parent (Alexandrine) is Alexandrine herself
  ?spouse rdfs:label ""Alexandrine of Mecklenburg-Schwerin""@en .

  # Find a child of Knud, Hereditary Prince of Denmark
  ?knudChild dbo:parent dbr:Knud,_Hereditary_Prince_of_Denmark .

  # The parent of this child is one of Knud's parents (Alexandrine)
  ?knudParent dbo:child ?knudChild .
  ?knudParent rdfs:label ""Alexandrine of Mecklenburg-Schwerin""@en .

  # The spouse of this parent (Alexandrine) is Christian X
  ?spouse2 rdfs:label ""Christian_X_of_Denmark""@en .
}
```",5,6,6,3,3,3,3,71,0,0,1,0,0.0,0
554,16,val,Give me the leader of the birth place of The Legendary Tigerman and leader of the administration of Francisco da Costa Gomes.,SELECT ?result WHERE { ?v2 <http://dbpedia.org/property/leader> <http://dbpedia.org/resource/Francisco_da_Costa_Gomes> . ?v2 <http://dbpedia.org/property/leader> ?result . ?v3 <http://dbpedia.org/property/leader> ?result . <http://dbpedia.org/resource/The_Legendary_Tigerman> <http://dbpedia.org/ontology/birthPlace> ?v3 . },"```sparql
# Query for The Legendary Tigerman's birthplace and current leader
SELECT ?birthPlaceLabel ?leaderLabel WHERE {
  ?band rdf:type dbo:MusicalBand ;
        foaf:name ""The Legendary Tigerman""@en .
  ?band dbo:originLocation ?birthPlace .
  ?birthPlace rdfs:label ?birthPlaceLabel .
  FILTER (lang(?birthPlaceLabel) = 'en')
  
  OPTIONAL {
    ?band dbo:leader ?leader .
    ?leader rdfs:label ?leaderLabel .
    FILTER (lang(?leaderLabel) = 'en')
  }
}

UNION

# Query for Francisco da Costa Gomes' administration and its leader
SELECT ?administrationLabel ?leaderLabel WHERE {
  ?person rdf:type dbo:Person ;
          foaf:name ""Francisco da Costa Gomes""@en ;
          dbo:presidentOf ?country .
  
  OPTIONAL {
    ?country dbo:headOfState ?leader .
    ?leader rdfs:label ?leaderLabel .
    FILTER (lang(?leaderLabel) = 'en')
  }
  
  ?administration dbo:headOfState ?person ;
                  rdfs:label ?administrationLabel .
  FILTER (lang(?administrationLabel) = 'en')
}
```",4,4,5,2,2,3,2,20,0,0,3,0,0.0,0
715,52,val,"Give me the commander in the force, that is a military conflict, of the native of Morocco and leader of Ministry of the Air (Spain) and commander in the force of Francisco Largo Caballero.",SELECT ?result WHERE { ?v2 <http://dbpedia.org/ontology/commander> ?v3 . ?v2 <http://dbpedia.org/ontology/commander> ?result . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v3 <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Morocco> . <http://dbpedia.org/resource/Ministry_of_the_Air_(Spain)> <http://dbpedia.org/ontology/leader> ?result . ?v5 <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Francisco_Largo_Caballero> . ?v5 <http://dbpedia.org/ontology/commander> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?person ?name ?birthPlace ?role1 ?role2 WHERE {
  ?person a dbo:MilitaryPerson ;
          foaf:name ?name ;
          dbo:nationality dbr:Morocco ;
          dbo:birthPlace ?birthPlace .
  
  OPTIONAL { ?person dbo:positionHeld ?ministry . 
             ?ministry rdfs:label ""Minister of the Air (Spain)""@en }
  
  OPTIONAL { ?person dbo:militaryCommanderOf ?conflict1 .
             ?conflict2 dbo:militaryCommander ?person ;
                        dbo:militaryCommander ?francoCaballero .
             ?francoCaballero rdfs:label ""Francisco Largo Caballero""@en }
  
  FILTER (lang(?name) = 'en')
}
```",6,7,7,3,3,3,3,71,0,0,1,0,0.0,0
715,50,val,"Give me the commander in the force of the mayor, that is an office holder and a politician and a president, of 1933 Spanish general election and leader of the office, that is a government agency and an organisation, of Carlos Franco Iribarnegaray.",SELECT ?result WHERE { ?v4 <http://dbpedia.org/ontology/commander> ?v0 . <http://dbpedia.org/resource/Carlos_Franco_Iribarnegaray> <http://dbpedia.org/property/office> ?v3 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/GovernmentAgency>. ?v4 <http://dbpedia.org/ontology/commander> ?result . <http://dbpedia.org/resource/1933_Spanish_general_election> <http://dbpedia.org/property/leader> ?v0 . ?v3 <http://dbpedia.org/ontology/leader> ?result . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/President>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?commander WHERE {
  # Find the 1933 Spanish General Election
  ?election dbo:date ""1933""^^xsd:gYear ;
            dbo:country dbr:Spain ;
            a dbo:Election .

  # Identify office holders, politicians, and presidents around this time
  ?person dbo:officeHolderOf ?office ;
          dbo:politicalParty ?party ;
          dbo:presidentOf ?country ;
          dbo:commanderInForceOf ?mayor .
  
  # Ensure the person is related to the election
  ?election dbo:hasCandidate ?person .

  # Find Carlos Franco Iribarnegaray's organization
  ?organization dbo:leader dbr:C_Franco_Iribarnegaray ;
                a (dbo:GovernmentAgency | dbo:Organization) .
  
  # Link the commander to the organization led by Carlos Franco Iribarnegaray
  ?commander dbo:commanderInForceOf ?mayor ;
             dbo:leaderOf ?organization .

}
```",5,10,6,3,2,3,3,71,0,0,1,0,0.0,0
917,45,val,"Give me the child of Kekūanāoʻa and child of the father of the child, that is a royalty, of Kamehameha III and parent of Albert Kamehameha.",SELECT ?result WHERE { ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v3 <http://dbpedia.org/property/father> ?v0 . <http://dbpedia.org/resource/Kamehameha_III> <http://dbpedia.org/ontology/child> ?v3 . ?result <http://dbpedia.org/ontology/parent> <http://dbpedia.org/resource/Kekūanāoʻa> . ?result <http://dbpedia.org/property/father> ?v0 . ?result <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Albert_Kamehameha> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?child WHERE {
  # Find the child of Kekūanāoʻa
  ?kekuanaoa dbo:spouse ?parent .
  ?parent dbo:child ?child .

  FILTER(?kekuanaoa = dbr:Kekuanaoa)

  # Find the child of Kamehameha III who is royalty and parent of Albert Kamehameha
  ?kamehamehaIII dbo:child ?royalty .
  ?royalty dbo:parent ?albertParent .

  FILTER(?kamehamehaIII = dbr:Kamehameha_III)
  FILTER(?albertParent = dbr:Albert_Kamehameha)

  # Ensure the royalty is a child of Kekūanāoʻa's lineage
  ?child rdfs:label ""Miriam Likelike"" .
}
```",5,6,6,3,3,3,3,71,0,0,1,0,0.0,0
459,21,val,Give me the person born as the birth name of Kevin Stitt and governor of Oklahoma and governor of Dana Murphy.,SELECT ?result WHERE { <http://dbpedia.org/resource/Kevin_Stitt> <http://dbpedia.org/property/birthName> ?v1 . <http://dbpedia.org/resource/Oklahoma> <http://dbpedia.org/property/governor> ?result . ?result <http://dbpedia.org/property/birthName> ?v1 . <http://dbpedia.org/resource/Dana_Murphy> <http://dbpedia.org/property/governor> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT ?person WHERE {
  ?person foaf:givenName ""Kevin"" .
  ?person foaf:familyName ""Stitt"" .
  ?person dbo:birthName ""Dana Murphy"" .
  ?person dbo:governorOf dbpedia:Oklahoma .
}
```",4,4,5,2,3,2,3,28,0,0,1,0,0.0,0
373,7,val,"Give me the professional in Singer, songwriter and writer of the work, that is a single and a musical work and a work and a soundtrack, of .","SELECT ?result WHERE { ?v2 <http://dbpedia.org/property/writer> """"@en . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Single>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?v2 <http://dbpedia.org/property/writer> ?result . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Song>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalWork>. ?result <http://dbpedia.org/property/occupation> ""Singer, songwriter""@en . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?person WHERE {
  ?person a dbo:Singer .
  ?person a dbo:Songwriter .
  ?person a dbo:Writer .

  ?work dbo:creator ?person ;
        a ?workType .

  VALUES ?workType { 
    dbr:Single 
    dbr:MusicalWork 
    dbr:Soundtrack
  }
}
```",3,7,4,2,2,2,2,9,0,0,78,0,0.0,0
826,40,val,"Give me the spouse of the child of the father of Anna Magdalena Appel and predecessor of Louis IV, Grand Duke of Hesse and successor of Louis II, Grand Duke of Hesse.","SELECT ?result WHERE { <http://dbpedia.org/resource/Louis_II,_Grand_Duke_of_Hesse> <http://dbpedia.org/ontology/successor> ?result . ?v1 <http://dbpedia.org/ontology/spouse> ?result . <http://dbpedia.org/resource/Anna_Magdalena_Appel> <http://dbpedia.org/property/father> ?v2 . ?v1 <http://dbpedia.org/property/father> ?v2 . ?result <http://dbpedia.org/ontology/successor> <http://dbpedia.org/resource/Louis_IV,_Grand_Duke_of_Hesse> . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?spouse WHERE {
  # Step 1: Identify Anna Magdalena Appel's father
  dbr:Anna_Magdalena_Bach dbo:father ?father .

  # Step 2: Find the child of Anna Magdalena Appel's father
  ?child dbo:parent ?father .
  
  # Step 3: Determine the spouse of that child
  ?spouse dbo:spouse ?child .

  # Step 4: Identify Louis IV and Louis II, Grand Duke of Hesse
  dbr:Ludwig_IV,_Grand_Duke_of_Hesse dbo:predecessor ?predecessor .
  dbr:Ludwig_II,_Grand_Duke_of_Hesse dbo:successor ?successor .

  # Step 5: Find the common person
  FILTER (?spouse = ?predecessor && ?spouse = ?successor)
}
```",5,5,6,3,3,3,3,71,0,0,1,0,0.0,0
465,40,val,"Give me the spouse of Archduchess Barbara of Austria and successor of Renée of France and successor of the child of the parent of Ercole II d'Este, Duke of Ferrara.","SELECT ?result WHERE { <http://dbpedia.org/resource/Renée_of_France> <http://dbpedia.org/ontology/successor> ?result . ?v1 <http://dbpedia.org/ontology/successor> ?result . ?result <http://dbpedia.org/ontology/spouse> <http://dbpedia.org/resource/Archduchess_Barbara_of_Austria> . <http://dbpedia.org/resource/Ercole_II_d'Este,_Duke_of_Ferrara> <http://dbpedia.org/ontology/parent> ?v2 . ?v1 <http://dbpedia.org/property/father> ?v2 . }","```sparql
# Step 1: Find Archduchess Barbara of Austria's spouse
SELECT ?spouse WHERE {
  wd:Q123456 wdt:P26 ?spouse .
}

# Step 2: Find the successor of Renée of France
SELECT ?successor WHERE {
  wd:Q654321 wdt:P1365 ?successor .
}

# Step 3: Find the child of Ercole II d'Este's parent and their successor
# Identify Ercole II d'Este's parent
SELECT ?parent WHERE {
  wd:Q789012 wdt:P22 ?parent .
}

# Find the child of that parent (excluding Ercole II)
SELECT DISTINCT ?child WHERE {
  ?parent wdt:P40 ?child .
  FILTER(?child != wd:Q789012) # Exclude Ercole II
}

# Determine the successor of that child
SELECT ?successor WHERE {
  ?child wdt:P1365 ?successor .
}

# Combine results to find a common individual
SELECT DISTINCT ?individual WHERE {
  VALUES ?spouse { ?spouse1 } UNION { ?spouse2 } UNION { ?spouse3 }
  VALUES ?successor1 { ?successorRenée } UNION { ?successorChild }
  
  FILTER(?spouse = ?successor1)
  BIND(?spouse AS ?individual)
}
```

Note: Replace `wd:Q123456`, `wd:Q654321`, and `wd:Q789012` with the actual DBpedia IDs for Archduchess Barbara of Austria, Renée of France, and Ercole II d'Este respectively. The query assumes these entities are correctly identified in DBpedia.",5,5,6,3,3,3,3,71,0,0,1,0,0.0,0
839,42,val,"Give me the band of Peter Schorowsky and band of the person born, that is a musical artist, as Kevin Richard Russell and band of the band, that is a musical artist, of Charlie Huhn.","SELECT ?result WHERE { ?v2 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?v2 <http://dbpedia.org/property/birthName> ""Kevin Richard Russell""@en . <http://dbpedia.org/resource/Charlie_Huhn> <http://dbpedia.org/ontology/associatedMusicalArtist> ?v1 . ?result <http://dbpedia.org/ontology/bandMember> ?v1 . ?result <http://dbpedia.org/ontology/bandMember> <http://dbpedia.org/resource/Peter_Schorowsky> . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. }","```sparql
# Query for Peter Schorowsky's Band
SELECT ?band WHERE {
  ?person foaf:name ""Peter Schorowsky""@en .
  ?person dbo:memberOf ?band .
}

UNION

# Query for Kevin Richard Russell's Birth and Confirmation as a Musical Artist
SELECT ?birthPlace WHERE {
  ?person foaf:name ""Kevin Richard Russell""@en .
  ?person dbo:birthPlace ?birthPlace .
  FILTER EXISTS { ?person rdf:type dbo:MusicalArtist }
}

UNION

# Query for Charlie Huhn's Band
SELECT ?band WHERE {
  ?person foaf:name ""Charlie Huhn""@en .
  ?person dbo:memberOf ?band .
}
```",5,7,6,2,3,3,3,71,0,0,1,0,0.0,0
839,47,val,"Give me the band of the person born, that is a musical artist, as Kevin Richard Russell and band of the member of the band, that is a band and a group, of Peter Schorowsky.","SELECT ?result WHERE { ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Band>. ?v0 <http://dbpedia.org/ontology/bandMember> ?v4 . ?result <http://dbpedia.org/ontology/bandMember> ?v4 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Group>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. <http://dbpedia.org/resource/Peter_Schorowsky> <http://dbpedia.org/ontology/associatedMusicalArtist> ?v0 . ?v2 <http://dbpedia.org/property/birthName> ""Kevin Richard Russell""@en . ?v2 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . }","```sparql
# Query to find Kevin Richard Russell's band
SELECT ?band WHERE {
  ?person dbo:birthName ""Kevin Richard Russell""@en .
  ?person rdf:type dbo:MusicalArtist .
  ?person dbo:associatedBand ?band .
}

UNION

# Query to find Peter Schorowsky's band and the bands of its members
SELECT DISTINCT ?memberBand WHERE {
  ?band a dbo:Band ;
        a dbo:Group ;
        dbo:member ?member .
  ?member foaf:name ""Peter Schorowsky""@en .

  OPTIONAL { 
    ?member dbo:associatedBand ?memberBand .
  }
}
```",5,8,6,3,2,3,3,71,0,0,1,0,0.0,0
192,15,val,"Give me the spouse of the spouse, that is a royalty, of the child of Charles II of Naples and child of Mary of Hungary, Queen of Naples.","SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/spouse> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?result <http://dbpedia.org/ontology/parent> <http://dbpedia.org/resource/Mary_of_Hungary,_Queen_of_Naples> . ?v0 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Charles_II_of_Naples> . ?v1 <http://dbpedia.org/ontology/spouse> ?v0 . }","```sparql
SELECT ?royalSpouse WHERE {
  ?person dbo:parent dbr:Charles_II_of_Naples .
  ?person dbo:parent dbr:Mary_of_Hungary_(Queen_of_Naples) .
  
  ?spouse1 dbo:spouse ?person .
  
  OPTIONAL { 
    ?spouse2 dbo:spouse ?spouse1 .
    ?spouse2 a dbo:RoyalFamilyMember .
  }
  
  FILTER EXISTS {
    ?spouse2 a dbo:RoyalFamilyMember
  }
}
```",4,5,5,3,2,3,2,20,0,0,1,0,0.0,0
715,54,val,"Give me the commander in the force of the mayor, that is an office holder and a politician and a president, of 1933 Spanish general election and commander in the force, that is a military conflict, of Abd el-Krim and leader of Ministry of the Air (Spain).",SELECT ?result WHERE { <http://dbpedia.org/resource/1933_Spanish_general_election> <http://dbpedia.org/property/leader> ?v0 . ?v5 <http://dbpedia.org/ontology/commander> ?v0 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/President>. ?v5 <http://dbpedia.org/ontology/commander> ?result . ?v3 <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Abd_el-Krim> . ?v3 <http://dbpedia.org/ontology/commander> ?result . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. <http://dbpedia.org/resource/Ministry_of_the_Air_(Spain)> <http://dbpedia.org/ontology/leader> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?person WHERE {
  ?person a dbo:Person .
  ?person foaf:name ""Manuel Azaña""@en .

  # Check for presidency during the 1933 Spanish general election
  ?presidency dbo:officeHolder ?person ;
              dbo:startDate ?start ;
              dbo:endDate ?end .
  FILTER (?start <= ""1933-04-01""^^xsd:date && ?end >= ""1933-12-31""^^xsd:date) .

  # Check for involvement in a military conflict with Abd el-Krim
  ?conflict dbo:commander ?person ;
            dbo:opposingMilitaryForce dbr:Abd_el-Krim .
  
  # Check for leadership of the Ministry of the Air (Spain)
  ?ministryPosition dbo:officeHolder ?person ;
                    rdfs:label ""Minister of the Air""@en .
}
```",6,10,7,3,3,3,3,71,0,0,1,0,0.0,0
281,22,val,"Give me the commander in the war, that is an event and a military conflict, of Roy Boehm and awardee of the award, that is a military conflict, of Lawrence Moore Cosgrave.",SELECT ?result WHERE { <http://dbpedia.org/resource/Roy_Boehm> <http://dbpedia.org/ontology/battle> ?v2 . ?result <http://dbpedia.org/property/awards> ?v3 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. <http://dbpedia.org/resource/Lawrence_Moore_Cosgrave> <http://dbpedia.org/property/awards> ?v3 . ?v2 <http://dbpedia.org/ontology/commander> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?event WHERE {
  # Roy Boehm's command in a war
  ?boehm dbo:occupation dbr:Military_person ;
         dbo:commanderOf ?war .
  
  # Lawrence Moore Cosgrave's award related to a military conflict
  ?cosgrave dbo:awardReceived ?award ;
            dbo:recipient dbr:Lawrence_Moore_Cosgrave .
  ?award dbo:name ?conflictName .

  # Find the common event or conflict
  FILTER(?war = ?conflictName)
  
  BIND(?war AS ?event)
}
```",4,7,5,2,2,2,3,28,0,0,3,0,0.0,0
47,54,val,"Give me the office of Ajoy Mukherjee and office of the administration of Jagdeep Dhankhar and office of the awardee of the award, that is an award, of Mantu Ghosh.",SELECT ?result WHERE { ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Award>. ?v5 <http://dbpedia.org/property/office> ?result . <http://dbpedia.org/resource/Mantu_Ghosh> <http://dbpedia.org/property/awards> ?v0 . ?v3 <http://dbpedia.org/property/governor> <http://dbpedia.org/resource/Jagdeep_Dhankhar> . ?v3 <http://dbpedia.org/property/office> ?result . <http://dbpedia.org/resource/Ajoy_Mukherjee> <http://dbpedia.org/property/office> ?result . ?v5 <http://dbpedia.org/property/awards> ?v0 . },"```sparql
# Query for Ajoy Mukherjee's office
SELECT ?office WHERE {
  ?person rdfs:label ""Ajoy Mukherjee""@en .
  ?person dbo:office ?office .
}

UNION

# Query for Jagdeep Dhankhar's current administrative role
SELECT ?office WHERE {
  ?person rdfs:label ""Jagdeep Dhankhar""@en .
  ?person dbo:currentAdministrativeRole ?office .
}

UNION

# Query for Mantu Ghosh's award and the office of its awardee
SELECT DISTINCT ?awardOffice WHERE {
  ?ghosh rdfs:label ""Mantu Ghosh""@en .
  ?ghosh dbo:award ?award .
  
  ?award dbo:recipient ?recipient .
  ?recipient dbo:office ?awardOffice .
}
```",6,7,7,3,3,3,3,71,0,0,1,0,0.0,0
456,43,val,"Give me the band of Alan Doyle and professional in the alter ego of the reference, that is a fictional character, to Lamont Cranston (radio, film and television) and spouse of Danielle Spencer (Australian actress).","SELECT ?result WHERE { <http://dbpedia.org/resource/Danielle_Spencer_(Australian_actress)> <http://dbpedia.org/ontology/spouse> ?result . ?v0 <http://xmlns.com/foaf/0.1/name> ""Lamont Cranston (radio, film and television)""@en . ?v0 <http://dbpedia.org/property/alterEgo> ?v4 . ?result <http://dbpedia.org/property/occupation> ?v4 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/FictionalCharacter>. <http://dbpedia.org/resource/Alan_Doyle> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . }","```sparql
SELECT ?band WHERE {
  ?person foaf:name ""Alan Doyle"" .
  ?person dbo:memberOf ?band .
  FILTER regex(str(?band), ""Great Big Sea"", ""i"")
}
UNION
{
  ?character rdfs:label ""The Shadow""@en .
  ?character dbo:alterEgo ?entity .
  ?entity ?p ?o .
}
```",5,6,6,3,3,3,3,71,0,0,1,0,0.0,0
987,45,val,"Give me the birth place of Moamer Kasumović and birth place of Dado Polumenta and entity in the region, that is a country, of the time zone, that is a sports event, in Canicosa de la Sierra.",SELECT ?result WHERE { <http://dbpedia.org/resource/Moamer_Kasumović> <http://dbpedia.org/ontology/birthPlace> ?result . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. <http://dbpedia.org/resource/Dado_Polumenta> <http://dbpedia.org/ontology/birthPlace> ?result . ?result <http://dbpedia.org/ontology/country> ?v0 . <http://dbpedia.org/resource/Canicosa_de_la_Sierra> <http://dbpedia.org/ontology/timeZone> ?v3 . ?v0 <http://dbpedia.org/property/timeZone> ?v3 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsEvent>. },"```sparql
# Query 1: Birthplace of Moamer Kadhafi
SELECT ?birthPlace WHERE {
  dbpedia:Moamer_Kadhafi dbo:birthPlace ?birthPlace .
}

# Query 2: Birthplace of Dado Pršo
SELECT ?birthPlace WHERE {
  dbpedia:Dado_Pršo dbo:birthPlace ?birthPlace .
}

# Query 3: Country in the time zone of Canicosa de la Sierra
SELECT DISTINCT ?country WHERE {
  dbpedia:Canicosa_de_la_Sierra dbo:timeZone ?timeZone .
  ?location dbo:timeZone ?timeZone ;
            a dbo:Country .
  BIND(?location AS ?country)
}

# Query 4: Sports event in the identified country
SELECT DISTINCT ?event WHERE {
  ?country rdfs:label ?countryLabel .
  FILTER(CONTAINS(LCASE(STR(?country)), LCASE(""{{country_label}}""))) # Replace {{country_label}} with actual label from query 3 result
  ?event dbo:location ?country ;
         a dbo:SportsEvent .
}
```",5,7,6,3,3,3,3,71,0,0,1,0,0.0,0
124,49,val,"Give me the commander in the war, that is a societal event and a military conflict, of A Field Battery, Royal Australian Artillery and military force of the force, that is a societal event and a military conflict, of the person born on 1850-06-24.","SELECT ?result WHERE { ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. <http://dbpedia.org/resource/A_Field_Battery,_Royal_Australian_Artillery> <http://dbpedia.org/ontology/battle> ?v2 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?v0 <http://dbpedia.org/ontology/birthDate> ""1850-06-24""^^<http://www.w3.org/2001/XMLSchema#date> . ?v1 <http://dbpedia.org/ontology/commander> ?v0 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?result <http://dbpedia.org/ontology/battle> ?v1 . ?v2 <http://dbpedia.org/ontology/commander> ?result . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?commander WHERE {
  # Find the person born on June 24, 1850
  ?person dbo:birthday ""1850-06-24""^^xsd:date .
  
  # Determine military forces associated with this person during a societal event and a military conflict
  ?person dbo:militaryService [
    a dbo:MilitaryConflict ;
    dbo:participatingMilitaryForce ?militaryForce .
  ] .

  # Find the commander of A Field Battery, Royal Australian Artillery within those identified forces
  ?commander dbo:commanded [
    a dbo:MilitaryUnit ;
    dbp:name ""A Field Battery, Royal Australian Artillery"" ;
    dbo:partOf ?militaryForce .
  ] .
}
```",5,9,6,3,2,3,3,71,0,0,9,0,0.0,0
965,47,val,"Give me the spouse of the spouse of Princess Victoria of Hesse and by Rhine and parent of the child, that is a royalty, of the person born, that is a politician, on 1854-05-24.","SELECT ?result WHERE { ?v3 <http://dbpedia.org/property/father> ?v0 . ?v3 <http://dbpedia.org/ontology/parent> ?result . <http://dbpedia.org/resource/Princess_Victoria_of_Hesse_and_by_Rhine> <http://dbpedia.org/ontology/spouse> ?v1 . ?result <http://dbpedia.org/ontology/spouse> ?v1 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v0 <http://dbpedia.org/ontology/birthDate> ""1854-05-24""^^<http://www.w3.org/2001/XMLSchema#date> . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?spouse WHERE {
  # Step 1: Identify Princess Victoria's spouse
  dbr:Princess_Victoria_of_Hesse_and_by_Rhine dbo:spouse ?princeErnestLouis .

  # Step 2: Find the spouse of Ernest Louis (which is Princess Victoria)
  ?princeErnestLouis dbo:spouse ?princessVictoria .

  # Step 3: Identify a child who is royalty
  ?princessVictoria dbo:child ?royalChild .
  ?royalChild rdf:type dbo:Monarch .

  # Step 4: Find the parent of that royal child (which includes Ernest Louis)
  ?royalChild dbo:parent ?ernestLouis .

  # Step 5: Identify a politician born on 1854-05-24
  OPTIONAL {
    ?politician dbo:birthday ""1854-05-24""^^xsd:date .
    ?politician rdf:type dbo:Politician .
  }

  # Step 6: Connect the dots to find Ernest Louis as the answer
  FILTER(?ernestLouis = ?princeErnestLouis)
}
```",5,7,6,3,2,3,3,71,0,0,1,0,0.0,0
926,40,val,Give me the child of Ahmed III and father of the father of the spouse of Neşerek Kadın and successor of Mustafa III.,SELECT ?result WHERE { <http://dbpedia.org/resource/Neşerek_Kadın> <http://dbpedia.org/ontology/spouse> ?v3 . ?v1 <http://dbpedia.org/property/father> ?result . <http://dbpedia.org/resource/Ahmed_III> <http://dbpedia.org/ontology/child> ?result . ?v3 <http://dbpedia.org/property/father> ?v1 . <http://dbpedia.org/resource/Mustafa_III> <http://dbpedia.org/ontology/successor> ?result . },"```sparql
SELECT ?child WHERE {
  ?ahmed3 dbo:spouse ?wife .
  ?ahmed3 foaf:surname ""Ahmed III""@en .
  ?ahmed3 dbo:child ?child .

  ?mustafa3 foaf:surname ""Mustafa III""@en .
  ?selim3 foaf:surname ""Selim III""@en .
  ?selim3 dbo:spouse ?neserekKadin .
  ?neserekKadin foaf:name ""Neşerek Kadın""@tr .

  ?mustafa3 dbo:child ?selim3 .
  ?ahmed3 dbo:child ?mustafa3 .

  ?abdulHamid1 foaf:surname ""Abdülhamid I""@en .
  ?abdulHamid1 dbo:successorOf ?mustafa3 .
  ?abdulHamid1 dbo:child ?ahmed3 .
}
```",5,5,6,3,3,3,3,71,0,0,1,0,0.0,0
495,15,val,Give me the father of Princess Charlotte of Württemberg and child of the father of the parent of Princess Catherine of Württemberg.,SELECT ?result WHERE { ?v0 <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Princess_Catherine_of_Württemberg> . ?result <http://dbpedia.org/property/father> ?v1 . <http://dbpedia.org/resource/Princess_Charlotte_of_Württemberg> <http://dbpedia.org/property/father> ?result . ?v0 <http://dbpedia.org/property/father> ?v1 . },"```sparql
# Step 1: Find Princess Charlotte of Württemberg's father
SELECT ?father WHERE {
    wd:Q1234567 wdt:P22 ?father .
}

# Step 2: Find the parent (mother or father) of Princess Catherine of Württemberg
SELECT ?parent WHERE {
    wd:Q2345678 wdt:P25|wdt:P22 ?parent .
}

# Step 3: Find the father of that parent from step 2
SELECT ?grandfather WHERE {
    ?parent wdt:P22 ?grandfather .
    FILTER(?parent = <URI_of_Duke_Alexander>)
}

# Step 4: Identify a child of this person found in step 3 (King William I)
SELECT ?child WHERE {
    wd:Q3456789 wdt:P40 ?child .
}
```

Note: Replace `wd:Q1234567`, `wd:Q2345678`, and `wd:Q3456789` with the actual DBpedia URIs for Princess Charlotte of Württemberg, Princess Catherine of Württemberg, and King William I of Württemberg respectively. Also, replace `<URI_of_Duke_Alexander>` with the URI for Duke Alexander of Württemberg.",4,4,5,3,2,3,2,20,0,0,1,0,0.0,0
773,55,val,"Give me the parent of the child, that is a royalty, of Louis the German and spouse of the father of Charles the Fat and parent of the successor of Charles the Bald.",SELECT ?result WHERE { <http://dbpedia.org/resource/Charles_the_Fat> <http://dbpedia.org/property/father> ?v3 . ?v3 <http://dbpedia.org/ontology/spouse> ?result . ?v2 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Louis_the_German> . ?v2 <http://dbpedia.org/ontology/parent> ?result . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. <http://dbpedia.org/resource/Charles_the_Bald> <http://dbpedia.org/ontology/successor> ?v5 . ?result <http://dbpedia.org/ontology/child> ?v5 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?parent WHERE {
  # Louis the German and his spouse Hemma of Altdorf
  dbr:Louis_the_German dbo:spouse dbr:Hemma_of_Altdorf .
  
  # Charles the Fat is a child of Louis the German
  dbr:Charles_the_Fat dbo:childOf dbr:Louis_the_German .

  # Charles the Bald and his successor, Louis the Stammerer
  dbr:Charles_the_Bald dbo:successor dbr:Louis_the_Stammerer .
  
  # Hemma of Altdorf is a parent of someone in the Carolingian lineage
  ?parent dbo:spouse dbr:Louis_the_German .
  OPTIONAL { ?parent dbo:child dbr:Louis_the_Stammerer . }
}
```",6,7,7,2,3,3,3,71,0,0,1,0,0.0,0
459,20,val,"Give me the governor of Oklahoma and governor of the administration, that is a politician, of Brad Henry and person born as John Kevin Stitt.","SELECT ?result WHERE { ?result <http://dbpedia.org/property/birthName> ""John Kevin Stitt""@en . ?v3 <http://dbpedia.org/property/governor> ?result . ?v3 <http://dbpedia.org/property/governor> <http://dbpedia.org/resource/Brad_Henry> . <http://dbpedia.org/resource/Oklahoma> <http://dbpedia.org/property/governor> ?result . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?person ?name WHERE {
  VALUES (?governorRole) { 
    dbr:Governor_of_Oklahoma 
  }
  
  # Find Brad Henry's governorship
  {
    ?person dbo:officeHolder ?role .
    ?role dbo:positionHeld dbr:Governor_of_Oklahoma .
    ?person rdfs:label ?name .
    FILTER(CONTAINS(LCASE(?name), ""brad henry""))
  }
  
  UNION
  
  # Find Kevin Stitt's governorship
  {
    ?person dbo:officeHolder ?role .
    ?role dbo:positionHeld dbr:Governor_of_Oklahoma .
    ?person rdfs:label ?name .
    FILTER(CONTAINS(LCASE(?name), ""kevin stitt""))
  }
}
```",4,5,5,2,3,2,3,28,0,0,1,0,0.0,0
791,41,val,"Give me the predecessor of the child of Emperor Takakura and spouse of the spouse, that is a royalty, of Emperor Takakura and father of Emperor Go-Toba.",SELECT ?result WHERE { <http://dbpedia.org/resource/Emperor_Go-Toba> <http://dbpedia.org/property/father> ?result . ?v2 <http://dbpedia.org/ontology/spouse> <http://dbpedia.org/resource/Emperor_Takakura> . ?result <http://dbpedia.org/ontology/spouse> ?v2 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?result <http://dbpedia.org/ontology/successor> ?v4 . ?v4 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Emperor_Takakura> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?predecessor WHERE {
  # Emperor Takakura's child (Antoku)
  VALUES (?child) { dbr:Emperor_Antoku }
  
  # Predecessor of Antoku
  ?predecessor dbo:succession ?child .
  
  # Spouse of the spouse (Imperial Princess Tokuko, daughter of Emperor Sanjō)
  ?spouse dbo:spouse dbr:Emperor_Takakura ;
          dbo:father dbr:Emperor_Sanjō .

  # Father of Emperor Go-Toba
  VALUES (?goTobaFather) { dbr:Emperor_Tsuchimikado }
  
  # Check if the predecessor is also the father of Emperor Go-Toba
  ?goTobaFather dbo:father dbr:Emperor_Go-Toba .
  
  FILTER(?predecessor = ?goTobaFather)
}
```",5,6,6,2,3,3,3,71,0,0,1,0,0.0,0
976,46,val,"Give me the office of the leader, that is a politician, of the administration, that is an organisation, of Kemal Kılıçdaroğlu and office of the mayor, that is a politician and an office holder and Turkish, of Nation Alliance (Turkey).",SELECT ?result WHERE { ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v2 <http://dbpedia.org/ontology/leader> ?v0 . ?v3 <http://dbpedia.org/ontology/nationality> <http://dbpedia.org/resource/Turkey>. <http://dbpedia.org/resource/Nation_Alliance_(Turkey)> <http://dbpedia.org/property/leader> ?v3 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?v2 <http://dbpedia.org/property/leader> <http://dbpedia.org/resource/Kemal_Kılıçdaroğlu> . ?v0 <http://dbpedia.org/property/office> ?result . ?v3 <http://dbpedia.org/property/office> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?officeKemal ?mayorName ?mayorOffice
WHERE {
  # Find Kemal Kılıçdaroğlu's office
  dbr:Kemal_Kılıçdaroğlu dbo:positionHeld ?position .
  ?position dbo:title ?officeKemal .

  # Find mayors associated with the Nation Alliance in Turkey
  ?mayor a dbo:Mayor ;
         dbo:country dbr:Türkiye ;
         dbo:politicalParty ?party .
  
  FILTER EXISTS { 
    ?party dbo:member dbr:Nation_Alliance_(Turkey) .
  }
  
  ?mayor dbo:title ?mayorOffice .
  BIND (str(?mayor) AS ?mayorName)
}
```",5,10,6,3,2,3,3,71,0,0,3,0,0.0,0
573,53,val,"Give me the person decedent at Quincy, Massachusetts and parent of the author, that is a politician and an office holder, of Exchequer Standards and person decedent at the administration, that is a region, of the real name of Charlie Baker (Australian footballer).","SELECT ?result WHERE { ?v2 <http://dbpedia.org/property/governor> ?v3 . ?v1 <http://dbpedia.org/ontology/parent> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?result <http://dbpedia.org/ontology/deathPlace> ?v2 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. <http://dbpedia.org/resource/Exchequer_Standards> <http://dbpedia.org/property/author> ?v1 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Region>. ?result <http://dbpedia.org/ontology/deathPlace> <http://dbpedia.org/resource/Quincy,_Massachusetts> . <http://dbpedia.org/resource/Charlie_Baker_(Australian_footballer)> <http://xmlns.com/foaf/0.1/name> ?v3 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?personDecedent WHERE {
  # Find Charlie Baker's real name and administrative region
  dbr:Charlie_Baker_(Australian_footballer) dbo:realName ?charlieRealName .
  
  # Assume the administrative region is related to his career or life
  ?charlieRealName dbo:administrativeRegion ?region .

  # Find a person who was an office holder and politician in that region
  ?officeHolder dbo:politicalAffiliation ?politician ;
                dbo:officeHeld ?exchequerStandards ;
                dbo:deathPlace dbr:Quincy,_Massachusetts .
  
  # Ensure this person is the parent of an author
  ?author dbo:parent ?officeHolder .

  # Bind the decedent to the result
  BIND(?officeHolder AS ?personDecedent)
}
```",6,9,7,3,3,3,3,71,0,0,2,0,0.0,0
987,46,val,"Give me the birth place of the actor of All for Free and birth place of the band, that is an artist and a musical artist, of the band, that is an artist, of Dado Polumenta.",SELECT ?result WHERE { ?v3 <http://dbpedia.org/ontology/birthPlace> ?result . ?v0 <http://dbpedia.org/ontology/birthPlace> ?result . <http://dbpedia.org/resource/Dado_Polumenta> <http://dbpedia.org/ontology/associatedMusicalArtist> ?v2 . <http://dbpedia.org/resource/All_for_Free> <http://dbpedia.org/property/starring> ?v3 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. ?v2 <http://dbpedia.org/ontology/associatedMusicalArtist> ?v0 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. },"```sparql
# Query to find the actor of ""All for Free"" and their birthplace
SELECT ?actor ?birthPlace WHERE {
  ?film dcterms:title ""All for Free""@en .
  ?film dbo:starring ?actor .
  ?actor foaf:birthPlace ?birthPlace .
}

UNION

# Query to find the band associated with Dado Pršo and their birthplaces
SELECT ?bandMember ?birthPlace WHERE {
  ?person foaf:name ""Dado Pršo""@en ;
          dbo:memberOfBand ?band .
  ?band dcterms:title ""Zabranjeno Pušenje""@en .
  
  # Find band members who are also artists and musical artists
  OPTIONAL { ?bandMember dbo:memberOfBand ?band . }
  OPTIONAL { ?bandMember dbo:occupation ""artist""@en . }
  OPTIONAL { ?bandMember dbo:occupation ""musical artist""@en . }

  ?bandMember foaf:birthPlace ?birthPlace .
}
```",5,8,6,3,2,3,3,71,0,0,4,0,0.0,0
281,20,val,"Give me the awardee of the award, that is a military conflict, of Lawrence Moore Cosgrave and commander in New Guinea campaign and awardee of Volunteer Decoration.",SELECT ?result WHERE { ?result <http://dbpedia.org/property/awards> ?v3 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?result <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/Volunteer_Decoration> . <http://dbpedia.org/resource/Lawrence_Moore_Cosgrave> <http://dbpedia.org/property/awards> ?v3 . <http://dbpedia.org/resource/New_Guinea_campaign> <http://dbpedia.org/ontology/commander> ?result . },"```sparql
SELECT ?person WHERE {
  ?person dbo:award dbp:Victoria_Cross .
  ?person dbo:commanderInMilitaryConflict dbp:New_Guinea_campaign .
  ?person dbo:recipientOfAward dbp:Volunteer_Decoration .
}
```",4,5,5,2,3,2,3,28,0,0,1,0,0.0,0
465,43,val,"Give me the spouse of the child, that is a royalty, of the parent of Elizabeth of Austria (1526–1545) and successor of Renée of France and successor of Ercole II d'Este, Duke of Ferrara.","SELECT ?result WHERE { <http://dbpedia.org/resource/Ercole_II_d'Este,_Duke_of_Ferrara> <http://dbpedia.org/ontology/successor> ?result . ?v0 <http://dbpedia.org/ontology/child> ?v4 . ?v0 <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Elizabeth_of_Austria_(1526–1545)> . ?result <http://dbpedia.org/ontology/spouse> ?v4 . <http://dbpedia.org/resource/Renée_of_France> <http://dbpedia.org/ontology/successor> ?result . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. }","```sparql
# Step 1: Find Elizabeth of Austria's parent
SELECT ?parent WHERE {
  dbpedia:Elizabeth_of_Austria_(1526–1545) dbo:childOf ?parent .
}

# Step 2: Identify a royal child from the parent
SELECT DISTINCT ?royalChild WHERE {
  ?parent dbo:child ?royalChild .
  ?royalChild rdf:type dbo:Monarch .
}

# Step 3: Find successors of Renée of France and Ercole II d'Este
SELECT DISTINCT ?successor WHERE {
  # Successors of Renée of France
  dbpedia:Renée_of_France dbo:succeededBy ?successor1 .
  
  # Successors of Ercole II d'Este, Duke of Ferrara
  dbpedia:Ercole_II_d%27Este,_Duke_of_Ferrara dbo:succeededBy ?successor2 .

  FILTER (?successor1 = ?successor2)
  BIND(?successor1 AS ?successor)
}

# Step 4: Find the spouse of the royal child who is a successor
SELECT DISTINCT ?spouse WHERE {
  ?royalChild dbo:spouse ?spouse .
  ?spouse dbp:succeededBy ?successor .
}
```",5,6,6,3,3,3,3,71,0,0,1,0,0.0,0
83,16,val,"Give me the ruling party in the birthplace, that is a town and Brazilian and a soccer club, of Sandro (footballer, born October 1983) and party of the governor of Dilma Rousseff.","SELECT ?result WHERE { ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Town>. ?v2 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Brazil>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerClub>. ?v2 <http://dbpedia.org/property/leaderParty> ?result . <http://dbpedia.org/resource/Sandro_(footballer,_born_October_1983)> <http://dbpedia.org/ontology/birthPlace> ?v2 . ?v3 <http://dbpedia.org/ontology/party> ?result . <http://dbpedia.org/resource/Dilma_Rousseff> <http://dbpedia.org/property/governor> ?v3 . }","```sparql
# Query to find Sandro's birthplace
SELECT ?town WHERE {
  ?sandro dbo:birthPlace ?town .
  ?sandro foaf:name ""Sandro"" .
  ?sandro dbo:birthDate ?date .
  FILTER (YEAR(?date) = 1983 && MONTH(?date) = 10)
  ?town a dbo:Town .
  ?town dbo:country dbr:Brazil .
  OPTIONAL { ?town dbo:sportTeam ?club . }
}

# Query to find the ruling party in Sandro's birthplace
SELECT ?party WHERE {
  ?town dbp:governingParty ?party .
  # Replace ?town with the actual URI of Sandro's birthplace obtained from the first query
}

# Query to find Dilma Rousseff's governor state and current governor's party
SELECT ?state ?currentGovernorParty WHERE {
  ?dilma dbo:officeHolder dbp:governorOf ?state .
  ?dilma foaf:name ""Dilma Rousseff"" .
  OPTIONAL { 
    ?state dbp:currentGovernor ?governor .
    ?governor dbo:partyAffiliation ?currentGovernorParty .
  }
}
```",4,7,5,2,2,3,2,20,0,0,1,0,0.0,0
445,52,val,"Give me the death place of the awardee of Royal Astronomical Society and entity in United Kingdom and entity in the residence, that is a country, of the resident, that is an athlete, of Great Britain.",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/United_Kingdom> . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. ?v3 <http://dbpedia.org/property/residence> ?v2 . ?v3 <http://dbpedia.org/property/residence> <http://dbpedia.org/resource/Great_Britain> . ?result <http://dbpedia.org/ontology/location> ?v2 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Athlete>. ?v5 <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/Royal_Astronomical_Society> . ?v5 <http://dbpedia.org/ontology/deathPlace> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?deathPlace WHERE {
  ?person dbo:awardReceived dbr:Royal_Astronomical_Society .
  ?person dbo:nationality dbr:United_Kingdom .
  ?person dbo:residence ?residenceCountry .
  
  # Ensure the residence is a country with athletes from Great Britain
  ?athlete dbo:nationality dbr:Great_Britain .
  ?athlete dbo:residence ?residenceCountry .

  OPTIONAL { 
    ?person dbo:deathPlace ?deathPlace .
  }
}
```",6,8,7,3,3,3,3,71,0,0,1,0,0.0,0
791,44,val,"Give me the predecessor of the child of Emperor Takakura and father of the child, that is a royalty, of Emperor Takakura and spouse of Taira no Tokuko.",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/spouse> <http://dbpedia.org/resource/Taira_no_Tokuko> . ?v4 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Emperor_Takakura> . ?v2 <http://dbpedia.org/property/father> ?result . ?v2 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Emperor_Takakura> . ?result <http://dbpedia.org/ontology/successor> ?v4 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. },"```sparql
SELECT ?predecessor WHERE {
  wd:Q12345 wdt:P31 wd:Q11850; # Emperor Takakura is a monarch
  wdt:P22 ?spouse;             # Spouse of Taira no Tokuko (Emperor Takakura)
  wdt:P921 ?child.            # Child of Emperor Takakura

  ?child wdt:P31 wd:Q11850;    # The child is a monarch (Antoku)
  ?child wdt:P22 ?spouse.     # Spouse of the child (Taira no Tokuko)

  ?predecessor wdt:P35 ?child; # Predecessor of Antoku
                wdt:P136 wd:Q11850. # Predecessor is a monarch

  ?emperor wdt:P31 wd:Q11850;  # Emperor Takakura is a monarch
            wdt:P35 ?predecessor. # Predecessor of Emperor Takakura
}
```

Note: `wd:Q12345` should be replaced with the actual DBpedia identifier for Emperor Takakura, and similarly, identifiers for Antoku and Taira no Tokuko should be used if available.",5,6,6,2,3,3,3,71,0,0,1,0,0.0,0
892,40,val,Give me the entity in Province of Reggio Emilia and landmark at elevation of 58 and entity in the profession of the true self of Enrico Crolla.,"SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/elevation> ""58""^^<http://www.w3.org/2001/XMLSchema#integer> . ?result <http://dbpedia.org/ontology/country> ?v1 . ?v3 <http://dbpedia.org/property/occupation> ?v1 . ?v3 <http://xmlns.com/foaf/0.1/givenName> ""Enrico Crolla""@en . ?result <http://dbpedia.org/ontology/province> <http://dbpedia.org/resource/Province_of_Reggio_Emilia> . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX geo: <http://www.w3.org/2003/01/geo/wgs84_pos#>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT DISTINCT ?entityInReggioEmilia ?landmarkAtElevation58 ?professionEntity
WHERE {
  # Entity in Province of Reggio Emilia
  ?entityInReggioEmilia dbo:locatedIn dbr:Province_of_Reggio_Emilia .

  # Landmark at elevation of 58
  ?landmarkAtElevation58 geo:elevation ""58""^^xsd:decimal .
  
  # Enrico Crolla's profession
  ?enricoCrolla dbp:name ""Enrico Crolla""@en ;
                dbo:occupation ?profession .

  # Entity in the same profession as Enrico Crolla
  ?professionEntity dbo:occupation ?profession .
}
```",5,5,6,3,3,3,3,71,0,0,1,0,0.0,0
826,46,val,"Give me the successor of the child, that is a royalty, of Louis I, Grand Duke of Hesse and spouse of the child of the father of Anna Magdalena Appel.","SELECT ?result WHERE { <http://dbpedia.org/resource/Louis_I,_Grand_Duke_of_Hesse> <http://dbpedia.org/ontology/child> ?v4 . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v1 <http://dbpedia.org/ontology/spouse> ?result . ?v4 <http://dbpedia.org/ontology/successor> ?result . ?v1 <http://dbpedia.org/property/father> ?v2 . <http://dbpedia.org/resource/Anna_Magdalena_Appel> <http://dbpedia.org/property/father> ?v2 . }","```sparql
# Step 1: Identify Louis I, Grand Duke of Hesse
SELECT ?louis WHERE {
  ?louis dbo:title ""Grand Duke of Hesse""@en .
  ?louis foaf:name ""Louis I, Grand Duke of Hesse""@en .
}

# Step 2: Find his children and identify the royal child
SELECT ?child WHERE {
  ?louis dbo:child ?child .
  FILTER EXISTS { ?child dbo:title ?title . }
}

# Step 3: Determine the spouse of this royal child
SELECT ?spouse WHERE {
  ?royalChild dbo:spouse ?spouse .
  ?royalChild rdfs:label ""NameOfRoyalChild""@en .
}

# Step 4: Identify Anna Magdalena Appel's father
SELECT ?father WHERE {
  ?anna foaf:name ""Anna Magdalena Appel""@en .
  ?anna dbo:parent ?father .
}

# Step 5: Find the father's children
SELECT ?child WHERE {
  ?father dbo:child ?child .
}

# Step 6: Determine the successor of this child
SELECT ?successor WHERE {
  ?child dbo:succeededBy ?successor .
  ?child rdfs:label ""NameOfChild""@en .
}
```

Note: Replace `""NameOfRoyalChild""` and `""NameOfChild""` with the actual names identified in steps 2 and 5.",5,6,6,3,2,3,3,71,0,0,1,0,0.0,0
433,45,val,Give me the associated musical artist of Bill Evans and associated musical artist of Paul Chambers and professional in the profession of the writer of Slowhand at 70 – Live at the Royal Albert Hall.,SELECT ?result WHERE { <http://dbpedia.org/resource/Bill_Evans> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . <http://dbpedia.org/resource/Slowhand_at_70_–_Live_at_the_Royal_Albert_Hall> <http://dbpedia.org/property/writer> ?v0 . <http://dbpedia.org/resource/Paul_Chambers> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?result <http://dbpedia.org/property/occupation> ?v1 . ?v0 <http://dbpedia.org/property/occupation> ?v1 . },"```sparql
# Query for associated musical artist of Bill Evans
SELECT ?artist WHERE {
  ?billEvans dbo:associatedMusicalArtist ?artist .
  FILTER (str(?billEvans) = ""Bill_Evans_(musician)"")
}

UNION

# Query for associated musical artist of Paul Chambers
SELECT ?artist WHERE {
  ?paulChambers dbo:associatedMusicalArtist ?artist .
  FILTER (str(?paulChambers) = ""Paul_Chambers_(bassist)"")
}

UNION

# Query for the writer of ""Slowhand at 70 – Live at the Royal Albert Hall"" and their profession
SELECT ?profession WHERE {
  ?album dbo:author ?writer .
  ?writer foaf:profession ?profession .
  FILTER (str(?album) = ""Slowhand_at_70_-_Live_at_the_Royal_Albert_Hall"")
}
```",5,5,6,3,3,3,3,71,0,0,1,0,0.0,0
826,50,val,"Give me the successor of the child, that is a royalty, of the reference, that is a royalty, to Louis I and predecessor of the parent of Prince Friedrich of Hesse and by Rhine.","SELECT ?result WHERE { <http://dbpedia.org/resource/Prince_Friedrich_of_Hesse_and_by_Rhine> <http://dbpedia.org/ontology/parent> ?v3 . ?v4 <http://dbpedia.org/ontology/successor> ?result . ?v0 <http://dbpedia.org/ontology/child> ?v4 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v0 <http://xmlns.com/foaf/0.1/name> ""Louis I""@en . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?result <http://dbpedia.org/ontology/successor> ?v3 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?successor WHERE {
  # Louis I's predecessor
  ?predecessor dbo:spouse ?louisI .
  ?louisI dbr:Ludwig_I,_King_of_Bavaria .

  # Child of the predecessor who is royalty
  ?child dbo:parent ?predecessor ;
         a dbo:Monarch .

  # Parent of Prince Friedrich and their predecessor
  ?princeFriedrich dbr:Friedrich_Eugene,_Prince_of_Hesse_and_by_Rhine .
  ?alice dbo:spouse ?fatherAlice .
  ?fatherAlice dbr:Albert_II,_Duke_of_Saxe-Coburg_and_Gotha .
  ?queenVictoria dbo:child ?fatherAlice .

  # Successor of the child
  ?successor dbo:predecessor ?child .
}
```",5,7,6,3,2,3,3,71,0,0,1,0,0.0,0
865,51,val,"Give me the father of the child of the father of Abul Maal Abdul Muhith and father of the child, that is a politician, of Abu Ahmad Abdul Hafiz.",SELECT ?result WHERE { ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v1 <http://dbpedia.org/property/father> ?v4 . ?v3 <http://dbpedia.org/property/father> ?result . ?v3 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Abu_Ahmad_Abdul_Hafiz> . <http://dbpedia.org/resource/Abul_Maal_Abdul_Muhith> <http://dbpedia.org/property/father> ?v4 . ?v1 <http://dbpedia.org/property/father> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT DISTINCT ?commonChildFather WHERE {
  # Step 1: Find Abul Maal Abdul Muhith's father
  ?abulMaal a dbo:Person;
            foaf:name ""Abul Maal Abdul Muhith""@en.
  
  ?fatherOfAbulMaal dbo:child ?abulMaal;
                   a dbo:Person.

  # Step 2: Find the child of Abul Maal's father
  ?childOfFather dbp:father ?fatherOfAbulMaal;
                 a dbo:Person.

  # Step 3: Find Abu Ahmad Abdul Hafiz's father
  ?abuAhmad a dbo:Person;
            foaf:name ""Abu Ahmad Abdul Hafiz""@en.
  
  ?fatherOfAbuAhmad dbo:child ?abuAhmad;
                    a dbo:Person.

  # Step 4: Find the child of Abu Ahmad's father who is a politician
  ?politicianChild dbp:father ?fatherOfAbuAhmad;
                   a dbo:Person;
                   dbo:occupation ?occupation.
  
  FILTER(CONTAINS(LCASE(?occupation), ""politician""))

  # Step 5: Determine if there is a common child and find their father
  VALUES ?commonChild { ?childOfFather ?politicianChild }
  
  ?commonChildFather dbp:father ?commonChild;
                     a dbo:Person.
}
```",5,6,6,3,2,3,3,71,0,0,1,0,0.0,0
417,44,val,"Give me the child of the father of Frederick IX of Denmark and spouse of Princess Caroline-Mathilde of Denmark and child of the child, that is a royalty, of Frederick Francis III, Grand Duke of Mecklenburg-Schwerin.","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/spouse> <http://dbpedia.org/resource/Princess_Caroline-Mathilde_of_Denmark> . ?result <http://dbpedia.org/property/father> ?v4 . <http://dbpedia.org/resource/Frederick_IX_of_Denmark> <http://dbpedia.org/property/father> ?v4 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?result <http://dbpedia.org/ontology/parent> ?v2 . ?v2 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Frederick_Francis_III,_Grand_Duke_of_Mecklenburg-Schwerin> . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?person WHERE {
  # Frederick IX's father
  ?father dbo:spouse dbr:Princess_Alexandra_of_Denmark ;
          dbo:child dbr:Frederick_IX_of_Denmark .

  # Spouse of Princess Caroline-Mathilde and child of Christian X
  ?prince dbo:spouse ?carolineMathilde ;
          dbo:parent ?father .

  # Frederick Francis III's royal child
  ?frederickFrancisIII dbr:Frederick_Francis_III,_Grand_Duke_of_Mecklenburg-Schwerin ;
                       dbo:child ?royalChild .

  # Child of Prince Knud and Adolphus Frederick V (through marriage ties)
  ?marieChantal dbo:parent ?prince ;
                dbo:parent ?royalChild .

  FILTER(?person = ?marieChantal)
}
```",5,6,6,2,3,3,3,71,0,0,1,0,0.0,0
365,15,val,"Give me the spouse of Olha Petliura and person born as the birth name of the commander, that is an office holder, in Ukrainian–Soviet War.",SELECT ?result WHERE { <http://dbpedia.org/resource/Ukrainian–Soviet_War> <http://dbpedia.org/ontology/commander> ?v0 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. <http://dbpedia.org/resource/Olha_Petliura> <http://dbpedia.org/ontology/spouse> ?result . ?result <http://dbpedia.org/property/birthName> ?v1 . ?v0 <http://dbpedia.org/property/birthName> ?v1 . },"```sparql
# Query to find the spouse of Olha Petliura
SELECT ?spouse WHERE {
  dbpedia:Olha_Petliura dbo:spouse ?spouse .
}

# Query to find commanders in the Ukrainian–Soviet War, their birth names, and check if they are office holders
SELECT DISTINCT ?person ?birthName WHERE {
  ?person dbo:occupation dbr:Commander_in_the_Ukrainian%E2%80%93Soviet_War .
  ?person foaf:name ?name .
  OPTIONAL { ?person foaf:givenName ?givenName . }
  OPTIONAL { ?person foaf:familyName ?familyName . }
  BIND(CONCAT(?givenName, "" "", ?familyName) AS ?birthName)
  FILTER EXISTS {
    ?person dbo:officeHolder ?office .
  }
}
```",4,5,5,3,2,3,2,20,0,0,1,0,0.0,0
933,45,val,"Give me the band of the band, that is a group and a band and an organisation, of the person born, that is a musical artist, on 1947-04-21 and band of Mike Elliott (saxophonist) and reference to Alan Warner.","SELECT ?result WHERE { ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?v0 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v3 <http://dbpedia.org/ontology/associatedMusicalArtist> ?v0 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Band>. ?result <http://xmlns.com/foaf/0.1/name> ""Alan Warner""@en . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Group>. ?v3 <http://dbpedia.org/ontology/birthDate> ""1947-04-21""^^<http://www.w3.org/2001/XMLSchema#date> . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. <http://dbpedia.org/resource/Mike_Elliott_(saxophonist)> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?band WHERE {
  # Step 1: Find the musical artist born on 1947-04-21
  ?person a dbo:MusicalArtist ;
          dbo:birthday ""1947-04-21""^^xsd:date .

  # Step 2: Find bands associated with Mike Elliott (saxophonist)
  ?mikeElliott dbr:Mike_Elliott_(saxophonist) .
  ?mikeElliott dbo:band ?band .

  # Step 3: Check for connection between the person and the band
  ?person dbo:member ?band .

  # Step 4: Reference Alan Warner in some context
  OPTIONAL { ?band dbo:associatedBandMember dbr:Alan_Warner } .

  # Ensure the band is a group, band, and organization
  ?band a dbo:MusicalGroup ;
        a dbo:Band ;
        a dbo:Organization .
}
```",5,9,6,3,3,3,3,71,0,0,1,0,0.0,0
465,47,val,"Give me the successor of the child of Alfonso I d'Este and spouse of the child, that is a royalty, of the parent of Elizabeth of Austria (1526–1545).",SELECT ?result WHERE { ?v2 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Alfonso_I_d'Este> . ?v0 <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Elizabeth_of_Austria_(1526–1545)> . ?v0 <http://dbpedia.org/ontology/child> ?v4 . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?result <http://dbpedia.org/ontology/spouse> ?v4 . ?v2 <http://dbpedia.org/ontology/successor> ?result . },"```sparql
SELECT ?successor WHERE {
  # Step 1: Alfonso I d'Este's notable child
  ?child dbo:parent dbr:Alfonso_I_d%27Este ;
         rdf:type dbo:Person .

  # Step 2: Spouse of Alfonso I d'Este's child who is royalty
  ?spouse dbo:spouse ?child ;
          rdf:type dbo:RoyalFamilyMember .

  # Step 3: Parent of Elizabeth of Austria (1526–1545)
  ?parent dbo:child dbr:Elizabeth_of_Austria_(1526%E2%80%931545) .

  # Step 4: Child of this parent who is royalty and married to the spouse
  ?royalChild dbo:spouse ?spouse ;
              dbo:parent ?parent ;
              rdf:type dbo:RoyalFamilyMember .

  # Step 5: Successor of that royal child
  ?successor dbo:predecessor ?royalChild .
}
```",5,6,6,3,2,3,3,71,0,0,1,0,0.0,0
965,40,val,"Give me the spouse of the spouse of the parent of Louise Mountbatten and parent of Louise Mountbatten and parent of George Mountbatten, 2nd Marquess of Milford Haven.","SELECT ?result WHERE { ?v3 <http://dbpedia.org/ontology/spouse> ?v1 . <http://dbpedia.org/resource/Louise_Mountbatten> <http://dbpedia.org/ontology/parent> ?result . <http://dbpedia.org/resource/Louise_Mountbatten> <http://dbpedia.org/ontology/parent> ?v3 . ?result <http://dbpedia.org/ontology/spouse> ?v1 . <http://dbpedia.org/resource/George_Mountbatten,_2nd_Marquess_of_Milford_Haven> <http://dbpedia.org/ontology/parent> ?result . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT DISTINCT ?spouse WHERE {
  # Louise Mountbatten's parent
  ?louiseParent dbo:child dbp:Louise_Mountbatten.
  
  # Spouse of Louise Mountbatten's parent
  ?louiseParent dbo:spouse ?parentSpouse1.

  # George Mountbatten, 2nd Marquess of Milford Haven's parent
  ?georgeParent dbo:child dbp:George_Mountbatten_2nd_Marquess_of_Milford_Haven.
  
  # Spouse of George Mountbatten's parent
  ?georgeParent dbo:spouse ?parentSpouse2.

  # Find the common spouse
  FILTER (?parentSpouse1 = ?parentSpouse2)
}
```",5,5,6,3,3,3,3,71,0,0,2,0,0.0,0
216,44,val,"Give me the team of the person born, that is a sports manager and a soccer manager and a soccer player, on 1983-12-20 and player in the coach, that is a soccer player and a sports manager and a soccer manager, of Bosnia and Herzegovina national under-18 football team and player in Igor Bišćan.","SELECT ?result WHERE { <http://dbpedia.org/resource/Bosnia_and_Herzegovina_national_under-18_football_team> <http://dbpedia.org/ontology/coach> ?v4 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsManager>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerManager>. ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerManager>. ?v2 <http://dbpedia.org/ontology/birthDate> ""1983-12-20""^^<http://www.w3.org/2001/XMLSchema#date> . <http://dbpedia.org/resource/Igor_Bišćan> <http://dbpedia.org/ontology/team> ?result . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerPlayer>. ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsManager>. ?v4 <http://dbpedia.org/ontology/team> ?result . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerPlayer>. ?result <http://dbpedia.org/ontology/coach> ?v2 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?person ?team WHERE {
  ?person dbo:birthDate ?date .
  FILTER (YEAR(?date) = 1983 && MONTH(?date) = 12 && DAY(?date) = 20)
  
  ?person dbo:sportsManager ?managerRole .
  ?person dbo:coach ?coachRole .
  ?person dbo:playerInTeam ?playerRole .

  ?coachRole dbo:team dbr:Bosnia_and_Herzegovina_national_under-18_football_team .
  ?playerRole dbo:team dbr:Bosnia_and_Herzegovina_national_under-18_football_team .

  ?person dbo:playerInTeam ?team .
  ?team dbo:member dbr:Igor_Bišćan .
}
```",5,11,6,2,3,3,3,71,0,0,1,0,0.0,0
965,46,val,"Give me the spouse of the spouse of the parent of Louise Mountbatten and parent of the child, that is a royalty, of Prince Louis of Battenberg.",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/spouse> ?v0 . ?v2 <http://dbpedia.org/ontology/spouse> ?v0 . ?v3 <http://dbpedia.org/ontology/parent> ?result . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. <http://dbpedia.org/resource/Louise_Mountbatten> <http://dbpedia.org/ontology/parent> ?v2 . ?v3 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Prince_Louis_of_Battenberg> . },"```sparql
# Step 1: Find Louise Mountbatten's parent
SELECT ?parent WHERE {
    wd:Q123456 wdt:P40 ?parent. # Assuming Q123456 is the DBpedia ID for Louise Mountbatten
}

# Step 2: Find the spouse of Louise Mountbatten's parent
SELECT ?spouse WHERE {
    ?parent wdt:P26 ?spouse.
}

# Step 3: Identify Prince Louis of Battenberg's child that is a royalty
SELECT ?royalChild WHERE {
    wd:Q654321 wdt:P40 ?child. # Assuming Q654321 is the DBpedia ID for Prince Louis of Battenberg
    ?child wdt:P31 wd:Q12345.   # Assuming Q12345 represents royalty
}

# Step 4: Find the parent of this royal child
SELECT ?parentOfRoyalChild WHERE {
    ?royalChild wdt:P40 ?parentOfRoyalChild.
}

# Step 5: Determine the spouse of this parent
SELECT ?spouseOfParentOfRoyalChild WHERE {
    ?parentOfRoyalChild wdt:P26 ?spouseOfParentOfRoyalChild.
}

# Step 6: Identify the spouse of the spouse from step 2
SELECT ?finalSpouse WHERE {
    ?spouse wdt:P26 ?finalSpouse.
}
```

Note: The actual DBpedia IDs for Louise Mountbatten, Prince Louis of Battenberg, and royalty need to be replaced with their correct identifiers. This query assumes a structure where `wdt:P40` is used for parent-child relationships, `wdt:P26` for spouse relationships, and `wdt:P31` for instance of (type) relationships.",5,6,6,3,2,3,3,71,0,0,2,0,0.0,0
465,55,val,"Give me the successor of the child of Alfonso I d'Este and spouse of the child, that is a royalty, of Ferdinand I, Holy Roman Emperor and successor of the child, that is a royalty, of Anne of Brittany.","SELECT ?result WHERE { ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. <http://dbpedia.org/resource/Ferdinand_I,_Holy_Roman_Emperor> <http://dbpedia.org/ontology/child> ?v5 . ?v3 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Alfonso_I_d'Este> . ?v2 <http://dbpedia.org/ontology/successor> ?result . <http://dbpedia.org/resource/Anne_of_Brittany> <http://dbpedia.org/ontology/child> ?v2 . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?result <http://dbpedia.org/ontology/spouse> ?v5 . ?v3 <http://dbpedia.org/ontology/successor> ?result . }","```sparql
# Step 1: Find Alfonso I d'Este's notable child
SELECT ?child WHERE {
  ?alfonso dbo:spouse ?parent .
  ?parent dbo:child ?child .
  FILTER(?alfonso = dbpedia:Alfonso_I_d%27Este)
}

# Step 2: Find the spouse of Ferdinand I's royal child
SELECT ?royalChild ?spouse WHERE {
  ?ferdinand dbo:child ?royalChild .
  ?royalChild rdf:type dbo:Monarch .
  ?royalChild dbo:spouse ?spouse .
  FILTER(?ferdinand = dbpedia:Ferdinand_I,_Holy_Roman_Emperor)
}

# Step 3: Find Anne of Brittany's royal child and their successor
SELECT ?anneChild ?successor WHERE {
  ?anne dbo:child ?anneChild .
  ?anneChild rdf:type dbo:Monarch .
  ?anneChild dbo:successor ?successor .
  FILTER(?anne = dbpedia:Anne_of_Brittany)
}

# Step 4: Link the individuals
SELECT ?finalIndividual WHERE {
  # Assuming we have identified the individuals from previous steps
  # Replace ?identifiedIndividual with the actual individual found
  ?identifiedIndividual dbo:successor ?finalIndividual .
}

# Step 5: Find the successor of the final individual
SELECT ?successor WHERE {
  ?finalIndividual dbo:successor ?successor .
}
```

Note: The above SPARQL queries are structured to guide through each step. You will need to replace placeholders like `?identifiedIndividual` with actual URIs obtained from previous query results.",6,8,7,2,3,3,3,71,0,0,1,0,0.0,0
41,19,val,"Give me the party of Enda Kenny and party of the leader, that is a politician and an office holder, of 2005 Castlereagh Borough Council election and party of Declan Costello.",SELECT ?result WHERE { <http://dbpedia.org/resource/Enda_Kenny> <http://dbpedia.org/ontology/party> ?result . <http://dbpedia.org/resource/Declan_Costello> <http://dbpedia.org/ontology/party> ?result . ?v3 <http://dbpedia.org/ontology/party> ?result . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. <http://dbpedia.org/resource/2005_Castlereagh_Borough_Council_election> <http://dbpedia.org/property/leader> ?v3 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. },"```sparql
SELECT ?party1 ?party2 ?party3 WHERE {
  # Political party of Enda Kenny
  wd:Q123456 wdt:P102 ?party1 .
  
  # Political party of Declan Costello
  wd:Q654321 wdt:P102 ?party3 .

  # Leader associated with the 2005 Castlereagh Borough Council election
  ?leader wdt:P39 wd:Q987654 . # Assuming Q987654 is a placeholder for the office related to the council
  ?leader wdt:P106 wd:Q12345 . # Assuming Q12345 is a placeholder for politician occupation
  ?leader wdt:P102 ?party2 .
}
```

Note: The placeholders `wd:Q123456`, `wd:Q654321`, `wd:Q987654`, and `wd:Q12345` need to be replaced with the actual DBpedia identifiers for Enda Kenny, Declan Costello, the office related to the 2005 Castlereagh Borough Council election, and politician occupation respectively. These can be found by querying DBpedia or using known QIDs.",4,6,5,2,3,2,3,28,0,0,1,0,0.0,0
41,20,val,Give me the party of Mark Durkan and party of the person born as David Declan Costello and party of Enda Kenny.,"SELECT ?result WHERE { <http://dbpedia.org/resource/Mark_Durkan> <http://dbpedia.org/ontology/party> ?result . <http://dbpedia.org/resource/Enda_Kenny> <http://dbpedia.org/ontology/party> ?result . ?v1 <http://dbpedia.org/property/birthName> ""David Declan Costello""@en . ?v1 <http://dbpedia.org/ontology/party> ?result . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?person ?partyLabel WHERE {
  VALUES ?person { 
    dbr:Mark_Durkan 
    dbr:Martin_McGuinness 
    dbr:Enda_Kenny
  }
  
  OPTIONAL {
    ?person dbo:politicalParty ?party .
    SERVICE <http://dbpedia.org/sparql> {
      ?party rdfs:label ?partyLabel .
      FILTER (lang(?partyLabel) = 'en')
    }
  }
}
```",4,4,5,2,3,2,3,28,0,0,1,0,0.0,0
329,19,val,Give me the birthplace of the author of The Tailor and Ansty and entity in United Kingdom and entity in Northern Ireland.,SELECT ?result WHERE { <http://dbpedia.org/resource/The_Tailor_and_Ansty> <http://dbpedia.org/property/author> ?v2 . ?result <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/United_Kingdom> . ?v2 <http://dbpedia.org/ontology/birthPlace> ?result . ?result <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Northern_Ireland> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?birthPlace ?ukEntity ?niEntity WHERE {
  # Find birthplace of George MacDonald
  dbr:George_MacDonald dbo:birthPlace ?birthPlace .

  # Find an entity in the United Kingdom
  ?ukEntity a dbo:Country ;
            rdfs:label ""United Kingdom""@en .
  
  # Find an entity in Northern Ireland
  ?niEntity a dbo:AdministrativeRegion ;
            rdfs:label ""Northern Ireland""@en .
}
```",4,4,5,2,3,2,3,28,0,0,1,0,0.0,0
216,55,val,"Give me the player in the coach of Croatia national under-21 football team and team of the person born, that is a sports manager and a soccer manager and a soccer player, on 1983-12-20 and player in the coach, that is a soccer player and a sports manager and a soccer manager, of Bosnia and Herzegovina national under-18 football team.","SELECT ?result WHERE { ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerManager>. <http://dbpedia.org/resource/Bosnia_and_Herzegovina_national_under-18_football_team> <http://dbpedia.org/ontology/coach> ?v5 . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerManager>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerPlayer>. ?v5 <http://dbpedia.org/ontology/team> ?result . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerPlayer>. ?result <http://dbpedia.org/ontology/coach> ?v2 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsManager>. ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsManager>. ?v3 <http://dbpedia.org/ontology/team> ?result . <http://dbpedia.org/resource/Croatia_national_under-21_football_team> <http://dbpedia.org/ontology/coach> ?v3 . ?v2 <http://dbpedia.org/ontology/birthDate> ""1983-12-20""^^<http://www.w3.org/2001/XMLSchema#date> . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?person ?name WHERE {
  ?person a dbo:SoccerPlayer ;
          dbo:birthDate ?date ;
          dbo:occupation ?occupation .
  
  FILTER (?date = ""1983-12-20""^^xsd:date)
  
  VALUES ?occupation { 
    dbr:Sports_manager 
    dbr:Soccer_manager 
    dbr:Soccer_player
  }
  
  OPTIONAL {
    ?person dbo:coach dbr:Croatia_national_under-21_football_team .
  }
  
  OPTIONAL {
    ?person dbo:player dbr:Croatia_national_under-21_football_team .
  }

  OPTIONAL {
    ?person dbo:coach dbr:Bosnia_and_Herzegovina_national_under-18_football_team .
  }
  
  OPTIONAL {
    ?person dbo:player dbr:Bosnia_and_Herzegovina_national_under-18_football_team .
  }
  
  ?person rdfs:label ?name .
}
```",6,12,7,2,3,3,3,71,0,0,1,0,0.0,0
456,47,val,"Give me the spouse of the actor of Pacific Drive and professional in the alter ego of the reference, that is a fictional character, to Lamont Cranston (radio, film and television).","SELECT ?result WHERE { ?v0 <http://dbpedia.org/property/alterEgo> ?v4 . <http://dbpedia.org/resource/Pacific_Drive> <http://dbpedia.org/property/starring> ?v2 . ?v0 <http://xmlns.com/foaf/0.1/name> ""Lamont Cranston (radio, film and television)""@en . ?result <http://dbpedia.org/property/occupation> ?v4 . ?v2 <http://dbpedia.org/ontology/spouse> ?result . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/FictionalCharacter>. }","```sparql
# Step 1: Find Lamont Cranston's alter ego
SELECT ?alterEgo WHERE {
  wd:Lamont_Cranston dbo:aliasName ""The Shadow""@en .
}

# Step 2: Identify the actor from Pacific Drive
SELECT ?actor WHERE {
  ?movie rdfs:label ""Pacific Drive""@en .
  ?movie dbo:starring ?actor .
  FILTER(lang(?movie) = 'en')
}

# Step 3: Find the spouse of the identified actor
SELECT ?spouse WHERE {
  ?actor dbo:spouse ?spouse .
}
```",5,6,6,3,2,3,3,71,0,0,2,0,0.0,0
773,47,val,"Give me the spouse of the father of Charles the Fat and parent of the successor of the child, that is a royalty, of Louis the Pious.",SELECT ?result WHERE { <http://dbpedia.org/resource/Louis_the_Pious> <http://dbpedia.org/ontology/child> ?v0 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v0 <http://dbpedia.org/ontology/successor> ?v4 . ?v2 <http://dbpedia.org/ontology/spouse> ?result . <http://dbpedia.org/resource/Charles_the_Fat> <http://dbpedia.org/property/father> ?v2 . ?result <http://dbpedia.org/ontology/child> ?v4 . },"```sparql
SELECT ?spouse WHERE {
  ?charlesFat dbo:father ?louisGerman .
  ?louisGerman foaf:surname ""Louis the German""@en .
  ?louisGerman dbo:spouse ?emma .
  ?emma foaf:name ""Emma of Altdorf""@en .
  
  ?louisPious dbo:child ?successor .
  ?successor foaf:name ""Louis the German""@en .
  
  FILTER EXISTS { ?emma a dbo:Monarch . }
}
```",5,6,6,3,2,3,3,71,0,0,1,0,0.0,0
865,50,val,"Give me the father of the child, that is a politician, of the spouse of Syeda Shahar Banu and father of the child of Abu Ahmad Abdul Hafiz.",SELECT ?result WHERE { ?v2 <http://dbpedia.org/property/father> ?result . ?v3 <http://dbpedia.org/property/father> ?result . ?v2 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Abu_Ahmad_Abdul_Hafiz> . <http://dbpedia.org/resource/Syeda_Shahar_Banu> <http://dbpedia.org/ontology/spouse> ?v0 . ?v3 <http://dbpedia.org/property/father> ?v0 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. },"```sparql
SELECT ?spouse WHERE {
  wd:Q1234567 wdt:P26 ?spouse .
}
```

In this query:
- `wd:Q1234567` should be replaced with the actual DBpedia identifier for Syeda Shahar Banu.
- The property `P26` is used to denote a spouse.

Note: You will need to replace `wd:Q1234567` with the correct DBpedia resource ID for Syeda Shahar Banu, which can be found by searching DBpedia or another reliable source.",5,6,6,3,2,3,3,71,0,0,1,0,0.0,0
124,55,val,"Give me the military force of the war, that is an event and a military conflict and a societal event, of Frank Rhodes (British Army officer) and commander in the war, that is a societal event and a military conflict, of A Field Battery, Royal Australian Artillery and military force of the force, that is a societal event and a military conflict, of Herbert Kitchener, 1st Earl Kitchener.","SELECT ?result WHERE { ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. <http://dbpedia.org/resource/A_Field_Battery,_Royal_Australian_Artillery> <http://dbpedia.org/ontology/battle> ?v3 . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. <http://dbpedia.org/resource/Frank_Rhodes_(British_Army_officer)> <http://dbpedia.org/ontology/battle> ?v5 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?v3 <http://dbpedia.org/ontology/commander> ?result . ?result <http://dbpedia.org/ontology/battle> ?v5 . ?v2 <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Herbert_Kitchener,_1st_Earl_Kitchener> . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?result <http://dbpedia.org/ontology/battle> ?v2 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?militaryForce WHERE {
  # Frank Rhodes and his military force during a war that is both a societal event and a military conflict
  ?frankRhodes dbo:nationality dbr:United_Kingdom ;
               dbo:militaryService dbr:British_Army ;
               dbo:commanderOf ?war .
  
  # A Field Battery, Royal Australian Artillery and its military force during the same war
  ?fieldBattery dbo:partOfMilitaryForce ?australianImperialForce ;
                dbo:involvedInWar ?war .
  
  # Herbert Kitchener's military force during the same war
  ?herbertKitchener dbo:nationality dbr:United_Kingdom ;
                    dbo:militaryService ?militaryForce ;
                    dbo:commanderOf ?war .

  FILTER(?war = dbr:World_War_I)
}
```",6,13,7,2,3,3,3,71,0,0,9,0,0.0,0
274,21,val,"Give me the professional in  and associated musical artist of the actor, that is a musical artist, of Imagine the Sound and band member of Dizzy Gillespie.","SELECT ?result WHERE { ?v0 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . <http://dbpedia.org/resource/Imagine_the_Sound> <http://dbpedia.org/property/starring> ?v0 . ?result <http://dbpedia.org/property/occupation> """"@en . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?result <http://dbpedia.org/ontology/associatedMusicalArtist> <http://dbpedia.org/resource/Dizzy_Gillespie> . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?actor ?associatedArtist WHERE {
  # Find the actor in ""Imagine the Sound""
  ?work dbo:title ""Imagine the Sound""@en .
  ?work dbo:starring ?actor .

  # Check if this actor is associated with a musical artist
  ?actor dbo:associatedMusicalArtist ?associatedArtist .

  # Ensure that the associated artist was a band member of Dizzy Gillespie
  ?associatedArtist dbo:bandMemberOf dbr:Dizzy_Gillespie .
}
```",4,5,5,2,3,2,3,28,0,0,3,0,0.0,0
442,7,val,"Give me the resting place of the work of Roosevelt, Theodore and resting place of Fay Bainter.","SELECT ?result WHERE { ?v2 <http://dbpedia.org/property/author> ""Roosevelt, Theodore""@en . <http://dbpedia.org/resource/Fay_Bainter> <http://dbpedia.org/ontology/restingPlace> ?result . ?v2 <http://dbpedia.org/ontology/restingPlace> ?result . }","```sparql
# Query to find the resting place of Theodore Roosevelt
SELECT ?restingPlace WHERE {
  dbpedia:Theodore_Roosevelt dbo:deathPlace ?restingPlace .
  OPTIONAL { ?restingPlace rdfs:label ?placeLabel FILTER (lang(?placeLabel) = ""en"") }
}

UNION

# Query to find the resting place of Fay Bainter
SELECT ?restingPlace WHERE {
  dbpedia:Fay_Bainter dbo:deathPlace ?restingPlace .
  OPTIONAL { ?restingPlace rdfs:label ?placeLabel FILTER (lang(?placeLabel) = ""en"") }
}
```",3,3,4,2,2,2,2,9,0,0,1,0,0.0,0
445,42,val,"Give me the death place of Patrick Moore and entity in the award of George H. Cameron and entity in the residence, that is a country, of Anna Sharkey.",SELECT ?result WHERE { ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. <http://dbpedia.org/resource/Anna_Sharkey> <http://dbpedia.org/property/residence> ?v2 . <http://dbpedia.org/resource/Patrick_Moore> <http://dbpedia.org/ontology/deathPlace> ?result . <http://dbpedia.org/resource/George_H._Cameron> <http://dbpedia.org/property/awards> ?v1 . ?result <http://dbpedia.org/ontology/location> ?v2 . ?result <http://dbpedia.org/ontology/country> ?v1 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?deathPlace ?award ?countryResidence WHERE {
  # Death place of Patrick Moore
  dbr:Patrick_Moore dbo:deathPlace ?deathPlace .

  # Award associated with George H. Cameron
  dbr:George_H._Cameron dbo:honoraryAward ?award .

  # Country of residence for Anna Sharkey
  dbr:Anna_Sharkey dbo:residence ?residence .
  ?residence a dbo:Country ; rdfs:label ?countryResidence .
}
```",5,6,6,2,3,3,3,71,0,0,1,0,0.0,0
965,48,val,"Give me the spouse of the spouse of the parent of Louise Mountbatten and parent of the person born, that is a noble, as Prince George of Battenberg.","SELECT ?result WHERE { ?v0 <http://dbpedia.org/ontology/parent> ?result . ?result <http://dbpedia.org/ontology/spouse> ?v1 . ?v3 <http://dbpedia.org/ontology/spouse> ?v1 . <http://dbpedia.org/resource/Louise_Mountbatten> <http://dbpedia.org/ontology/parent> ?v3 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Noble>. ?v0 <http://dbpedia.org/property/birthName> ""Prince George of Battenberg""@en . }","```sparql
SELECT ?spouseOfSpouse WHERE {
  # Step 1: Identify Louise Mountbatten's parent
  ?louise dbo:parent ?parent .

  FILTER(?louise = dbp:Louise_Mountbatten) .

  # Step 2: Find the spouse of Louise Mountbatten's parent
  ?parent dbo:spouse ?spouse1 .

  # Step 3: Identify the spouse of that spouse
  ?spouse1 dbo:spouse ?spouseOfSpouse .

  # Step 4: Determine the parent of Prince George of Battenberg
  ?princeGeorge dbo:parent ?parent2 .

  FILTER(?princeGeorge = dbp:Prince_George_of_Battenberg) .

  # Step 5 & 6: Ensure the person is a noble and find the spouse of the parent from step 4
  ?parent2 dbo:spouse ?finalSpouse .
  
  FILTER(?finalSpouse = ?spouseOfSpouse)
}
```",5,6,6,3,2,3,3,71,0,0,2,0,0.0,0
443,19,val,Give me the birthplace of Ulf Lundell and landmark at elevation of the award of William Shepherd and birthplace of Carl Larsson.,SELECT ?result WHERE { <http://dbpedia.org/resource/Carl_Larsson> <http://dbpedia.org/ontology/birthPlace> ?result . ?result <http://dbpedia.org/ontology/elevation> ?v1 . <http://dbpedia.org/resource/William_Shepherd> <http://dbpedia.org/property/awards> ?v1 . <http://dbpedia.org/resource/Ulf_Lundell> <http://dbpedia.org/ontology/birthPlace> ?result . },"```sparql
# Query for Ulf Lundell's birthplace
SELECT ?birthPlace WHERE {
  dbpedia:Ulf_Lundell dbo:birthPlace ?birthPlace .
}

UNION

# Query for Carl Larsson's birthplace
SELECT ?birthPlace WHERE {
  dbpedia:Carl_Larsson dbo:birthPlace ?birthPlace .
}

UNION

# Assuming William Shepherd is associated with a specific award, e.g., Nobel Prize (hypothetical)
# We need to find the location of this award and then identify a landmark at its elevation
SELECT ?landmark WHERE {
  # Hypothetical query for an award location related to William Shepherd
  dbpedia:William_Shepherd dbo:awardReceived ?award .
  ?award dbo:location ?location .
  
  # Find a landmark at the same elevation as the award's location
  ?location geo:elevation ?elevation .
  ?landmark geo:elevation ?sameElevation .
  FILTER(?elevation = ?sameElevation)
}
```",4,4,5,2,3,2,3,28,0,0,1,0,0.0,0
236,16,val,"Give me the party member of the administration of James Madison and party member of the administration, that is an organisation, of John Adams.",SELECT ?result WHERE { ?v2 <http://dbpedia.org/property/leader> <http://dbpedia.org/resource/John_Adams> . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?v3 <http://dbpedia.org/property/leader> <http://dbpedia.org/resource/James_Madison> . ?result <http://dbpedia.org/ontology/party> ?v3 . ?result <http://dbpedia.org/ontology/party> ?v2 . },"```sparql
SELECT ?madisonPartyLabel ?adamsPartyLabel WHERE {
  # James Madison's party affiliation
  dbpedia:James_Madison dbo:presidentOf dbpedia:United_States.
  dbpedia:James_Madison dbo:partyAffiliation ?madisonParty.

  # John Adams' party affiliation
  dbpedia:John_Adams dbo:presidentOf dbpedia:United_States.
  dbpedia:John_Adams dbo:partyAffiliation ?adamsParty.

  # Get labels for the parties
  ?madisonParty rdfs:label ?madisonPartyLabel .
  ?adamsParty rdfs:label ?adamsPartyLabel .

  FILTER (lang(?madisonPartyLabel) = 'en')
  FILTER (lang(?adadsPartyLabel) = 'en')
}
```",4,5,5,2,2,3,2,20,0,0,19,0,0.0,0
826,55,val,"Give me the predecessor of the parent of Prince Friedrich of Hesse and by Rhine and successor of the child, that is a royalty, of Louis I, Grand Duke of Hesse and spouse of the child of Johann Heinrich Appel.","SELECT ?result WHERE { ?v5 <http://dbpedia.org/ontology/successor> ?result . <http://dbpedia.org/resource/Louis_I,_Grand_Duke_of_Hesse> <http://dbpedia.org/ontology/child> ?v5 . ?v3 <http://dbpedia.org/ontology/spouse> ?result . <http://dbpedia.org/resource/Prince_Friedrich_of_Hesse_and_by_Rhine> <http://dbpedia.org/ontology/parent> ?v2 . ?result <http://dbpedia.org/ontology/successor> ?v2 . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v3 <http://dbpedia.org/property/father> ""Johann Heinrich Appel""@en . }","```sparql
# Step 1: Find Prince Friedrich of Hesse and by Rhine's parent
SELECT ?parent WHERE {
  wd:Q123456 wdt:P22 ?parent .
}

# Step 2: Find the predecessor of that parent
SELECT ?predecessor WHERE {
  ?parent wdt:P136 ?title .
  ?predecessor wdt:P136 ?title ;
              rdfs:subClassOf* wd:Q11873 .
}

# Step 3: Identify Louis I, Grand Duke of Hesse's child who is a royalty
SELECT ?royalChild WHERE {
  wd:Q789012 wdt:P40 ?child .
  ?child wdt:P31/wdt:P279* wd:Q5 .
}

# Step 4: Find the successor of that royal child
SELECT ?successor WHERE {
  ?royalChild wdt:P136 ?title .
  ?successor wdt:P136 ?title ;
             rdfs:subClassOf* wd:Q11873 .
}

# Step 5: Identify Johann Heinrich Appel's child
SELECT ?appelChild WHERE {
  wd:Q345678 wdt:P40 ?child .
}

# Step 6: Determine the spouse of Johann Heinrich Appel's child
SELECT ?spouse WHERE {
  ?appelChild wdt:P26 ?spouse .
}

# Combine results to find the final answer
SELECT DISTINCT ?predecessor WHERE {
  # Assuming we have variables from previous queries: ?parent, ?royalChild, ?appelChild, ?spouse
  ?predecessor = ?successor .
  ?predecessor = ?spouse .
}
```

Note: Replace `wd:Q123456`, `wd:Q789012`, and `wd:Q345678` with the actual DBpedia IDs for Prince Friedrich of Hesse and by Rhine, Louis I, Grand Duke of Hesse, and Johann Heinrich Appel respectively. The queries assume that these individuals have properties like P22 (father), P40 (children), P26 (spouse), and P136 (title) linked in DBpedia.",6,7,7,2,3,3,3,71,0,0,1,0,0.0,0
892,45,val,"Give me the landmark at elevation of 58 and entity in the administration, that is Italian and a region and a settlement and an administrative region, of the party, that is a political party and an organisation, of Andrea Cozzolino and entity in Italy.","SELECT ?result WHERE { ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/PoliticalParty>. ?result <http://dbpedia.org/ontology/province> ?v0 . <http://dbpedia.org/resource/Andrea_Cozzolino> <http://dbpedia.org/ontology/party> ?v3 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/AdministrativeRegion>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?result <http://dbpedia.org/ontology/elevation> ""58""^^<http://www.w3.org/2001/XMLSchema#integer> . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Region>. ?v0 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Italy>. ?result <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Italy> . ?v0 <http://dbpedia.org/property/leaderParty> ?v3 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?landmark ?region ?party WHERE {
  ?landmark a dbo:Lighthouse ;
            dbo:elevation ""58""^^xsd:float ;
            dbo:location dbr:Italy .
  
  ?region a dbo:Region, dbo:Settlement, dbo:AdministrativeRegion ;
          dbo:country dbr:Italy .

  ?landmark dbo:administrativeRegion ?region .

  ?party a dbo:PoliticalParty, dbo:Organization ;
         dbo:member dbr:Andrea_Cozzolino .
  
  ?region dbo:party ?party .
}
```",5,11,6,3,3,3,3,71,0,0,2,0,0.0,0
955,17,val,"Give me the band of the band member, that is a musical artist and an artist, of the reference, that is a band and a group and an organisation, to Street Dogs and band of Nate Albert.","SELECT ?result WHERE { ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. ?result <http://dbpedia.org/ontology/bandMember> <http://dbpedia.org/resource/Nate_Albert> . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?v3 <http://dbpedia.org/ontology/associatedMusicalArtist> ?v0 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Group>. ?v0 <http://xmlns.com/foaf/0.1/name> ""Street Dogs""@en . ?result <http://dbpedia.org/ontology/bandMember> ?v3 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Band>. }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?bandOfInterest WHERE {
  # Identify Street Dogs as a reference band
  dbr:Street_Dogs a dbo:Band ;
                  dbo:member dbr:Nate_Albert .

  # Find other bands Nate Albert is associated with
  dbr:Nate_Albert dbo:musicalArtistFor ?otherBand .
  
  # Check if any member of these bands is both a musical artist and an artist
  ?otherBand dbo:member ?member ;
            ?memberType a (dbo:MusicalArtist|dbo:Artist) .

  # Retrieve the band associated with such a member
  ?member dbo:musicalArtistFor ?bandOfInterest .
}
```",4,9,5,3,2,3,2,20,0,0,1,0,0.0,0
965,44,val,"Give me the spouse of Prince Louis of Battenberg and parent of the child, that is a royalty, of Prince Louis of Battenberg and parent of the person born, that is a noble, as Prince George of Battenberg.","SELECT ?result WHERE { ?v0 <http://dbpedia.org/ontology/parent> ?result . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Noble>. ?v4 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Prince_Louis_of_Battenberg> . ?v4 <http://dbpedia.org/ontology/parent> ?result . ?result <http://dbpedia.org/ontology/spouse> <http://dbpedia.org/resource/Prince_Louis_of_Battenberg> . ?v0 <http://dbpedia.org/property/birthName> ""Prince George of Battenberg""@en . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?spouse WHERE {
  dbr:Prince_Louis_of_Battenberg dbo:spouse ?spouse .
  FILTER EXISTS { ?child dbo:parent ?spouse . 
                 ?child a dbo:RoyalFamilyMember ;
                        dbo:parent dbr:Prince_Louis_of_Battenberg }
}
```",5,7,6,2,3,3,3,71,0,0,1,0,0.0,0
865,40,val,"Give me the native of the residence, that is a country, of the person decedent at Patna and father of Shahla Khatun and father of AK Abdul Momen.",SELECT ?result WHERE { ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. <http://dbpedia.org/resource/Shahla_Khatun> <http://dbpedia.org/property/father> ?result . ?v1 <http://dbpedia.org/ontology/deathPlace> <http://dbpedia.org/resource/Patna> . <http://dbpedia.org/resource/AK_Abdul_Momen> <http://dbpedia.org/property/father> ?result . ?v1 <http://dbpedia.org/property/residence> ?v0 . ?result <http://dbpedia.org/ontology/birthPlace> ?v0 . },"```sparql
SELECT ?person ?residenceCountry ?nativePlace WHERE {
  ?person dbo:deathPlace dbr:Patna .
  ?person dbo:child dbr:Shahla_Khatun ;
           dbo:child dbr:AK_Abdul_Momen .
  OPTIONAL { ?person dbo:residenceLocation ?location . }
  OPTIONAL { ?location a dbo:Country ; dbo:nativeName ?nativePlace . }
  BIND(IF(BOUND(?location), STR(?location), ""Unknown"") AS ?residenceCountry)
}
```",5,6,6,3,3,3,3,71,0,0,1,0,0.0,0
892,51,val,"Give me the landmark at elevation of the award of Anna Ishii and entity in the administration, that is Italian and a region and a settlement and an administrative region, of the party, that is a political party and an organisation, of Andrea Cozzolino.",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/elevation> ?v4 . ?v0 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Italy>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. <http://dbpedia.org/resource/Anna_Ishii> <http://dbpedia.org/property/awards> ?v4 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?result <http://dbpedia.org/ontology/province> ?v0 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/PoliticalParty>. <http://dbpedia.org/resource/Andrea_Cozzolino> <http://dbpedia.org/ontology/party> ?v3 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Region>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/AdministrativeRegion>. ?v0 <http://dbpedia.org/property/leaderParty> ?v3 . },"```sparql
# Step 1: Find Anna Ishii's award and its elevation
SELECT ?award ?elevation WHERE {
  ?person foaf:name ""Anna Ishii"" .
  ?person dbo:awards ?award .
  ?award dbo:elevation ?elevation .
}

# Step 2: Find a landmark at the same elevation as the award
SELECT DISTINCT ?landmark WHERE {
  ?landmark dbo:elevation ?elevation .
  FILTER(?elevation = <ELEVATION_FROM_STEP_1>)
}

# Step 3: Identify Andrea Cozzolino's political party
SELECT ?party WHERE {
  ?person foaf:name ""Andrea Cozzolino"" .
  ?person dbo:memberOf ?party .
  ?party rdf:type dbo:PoliticalParty .
}

# Step 4: Find an Italian region, settlement, and administrative region associated with the party
SELECT DISTINCT ?region ?settlement WHERE {
  ?region rdf:type dbo:AdministrativeRegion ;
          dbo:country dbr:Italy ;
          dbo:isPartOf ?party .
  ?settlement dbo:location ?region ;
              rdf:type dbo:Settlement .
}
```",5,11,6,3,2,3,3,71,0,0,2,0,0.0,0
582,45,val,"Give me the player in Kazuaki Nagasawa and figure known as the nickname of the team, that is an organisation, of Hajime Moriyasu and reference to Japan.","SELECT ?result WHERE { ?result <http://xmlns.com/foaf/0.1/name> ""Japan""@en . <http://dbpedia.org/resource/Kazuaki_Nagasawa> <http://dbpedia.org/ontology/team> ?result . ?v0 <http://dbpedia.org/ontology/coach> <http://dbpedia.org/resource/Hajime_Moriyasu> . ?v0 <http://dbpedia.org/property/nickname> ?v1 . ?result <http://dbpedia.org/property/nickname> ?v1 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?playerTeam ?managerNickname WHERE {
  # Kazuaki Nagasawa's team
  ?nagasawa dbo:nationality dbr:Japan ;
           dbo:team ?playerTeam .
  
  # Hajime Moriyasu's current role and team nickname
  ?moriyasu dbo:nationality dbr:Japan ;
           dbo:manager ?team ;
           rdfs:label ""Hajime Moriyasu""@en .
  
  ?team rdfs:label ?managerNickname .

  FILTER (CONTAINS(LCASE(?managerNickname), ""japan""))
}
```",5,6,6,3,3,3,3,71,0,0,1,0,0.0,0
417,49,val,"Give me the spouse of the parent, that is a royalty, of Count Ingolf of Rosenborg and child of the child, that is a royalty, of the parent, that is a royalty, of Alexandrine of Mecklenburg-Schwerin.",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/parent> ?v1 . ?v2 <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Count_Ingolf_of_Rosenborg> . ?result <http://dbpedia.org/ontology/spouse> ?v2 . ?v1 <http://dbpedia.org/property/father> ?v0 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. <http://dbpedia.org/resource/Alexandrine_of_Mecklenburg-Schwerin> <http://dbpedia.org/ontology/parent> ?v0 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?spouse WHERE {
  # Step 1: Find Count Ingolf of Rosenborg's royal parent
  ?ingolf dbo:parent ?royalParentIngolf .
  ?royalParentIngolf rdf:type dbo:Monarch .

  # Step 2: Find the spouse of that royal parent
  ?royalParentIngolf dbp:spouse ?spouseIngolf .

  # Step 3: Find Alexandrine of Mecklenburg-Schwerin's royal parent
  ?alexandrine dbo:parent ?royalParentAlexandrine .
  ?royalParentAlexandrine rdf:type dbo:Monarch .

  # Step 4: Find the child of that royal parent who is royalty
  ?royalChild dbp:childOf ?royalParentAlexandrine ;
              rdf:type dbo:Monarch .

  # Step 5: Identify the child of that royal descendant
  ?finalDescendant dbp:parent ?royalChild .

  # Ensure the spouse from step 2 is the same as the spouse in step 6
  ?finalDescendant dbp:spouse ?spouse .
  
  FILTER(?spouse = ?spouseIngolf)
}
```",5,8,6,3,2,3,3,71,0,0,1,0,0.0,0
987,51,val,"Give me the entity in the region, that is a country, of the time zone, that is a sports event, in Canicosa de la Sierra and birth place of the actor of All for Free.",SELECT ?result WHERE { <http://dbpedia.org/resource/All_for_Free> <http://dbpedia.org/property/starring> ?v4 . ?result <http://dbpedia.org/ontology/country> ?v0 . <http://dbpedia.org/resource/Canicosa_de_la_Sierra> <http://dbpedia.org/ontology/timeZone> ?v3 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. ?v4 <http://dbpedia.org/ontology/birthPlace> ?result . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsEvent>. ?v0 <http://dbpedia.org/property/timeZone> ?v3 . },"```sparql
# Step 1: Find Canicosa de la Sierra's time zone
SELECT ?timeZone WHERE {
    dbpedia-es:Canicosa_de_la_Sierra dbo:timezone ?timeZone .
}

# Step 2: Identify sports events in that time zone
SELECT DISTINCT ?sportsEvent WHERE {
    ?sportsEvent dbo:location ?place .
    ?place dbo:timezone ?timeZone .
    FILTER(?timeZone = <URI_OF_CANICOSA_TIMEZONE>)
}

# Step 3: Determine the region of these sports events
SELECT DISTINCT ?region WHERE {
    ?sportsEvent dbo:location ?place .
    ?place dbo:administrativeRegion ?region .
    FILTER(STRSTARTS(STR(?sportsEvent), ""http://dbpedia.org/resource/""))
}

# Step 4: Identify countries in that region
SELECT DISTINCT ?country WHERE {
    ?country a dbo:Country ;
             dbo:partOfAdministrativeTerritory ?region .
}

# Step 5: Find the actor of ""All for Free"" and their birthplace
SELECT DISTINCT ?actor ?birthPlace WHERE {
    dbpedia:All_for_Free dbo:starring ?actor .
    ?actor dbo:birthPlace ?birthPlace .
}

# Step 6: Match country with actor's birthplace
SELECT DISTINCT ?country WHERE {
    ?country a dbo:Country ;
             foaf:name ?name .
    ?birthPlace dbo:locatedInAdministrativeTerritory ?country .
}
```

Note: Replace `<URI_OF_CANICOSA_TIMEZONE>` with the actual URI obtained from Step 1.",5,7,6,3,2,3,3,71,0,0,4,0,0.0,0
124,47,val,"Give me the military force of the war, that is an event and a military conflict and a societal event, of the awardee of British South Africa Company Medal and commander in the war, that is a societal event and a military conflict, of A Field Battery, Royal Australian Artillery.","SELECT ?result WHERE { ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?result <http://dbpedia.org/ontology/battle> ?v4 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?v0 <http://dbpedia.org/ontology/battle> ?v4 . ?v2 <http://dbpedia.org/ontology/commander> ?result . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. <http://dbpedia.org/resource/A_Field_Battery,_Royal_Australian_Artillery> <http://dbpedia.org/ontology/battle> ?v2 . ?v0 <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/British_South_Africa_Company_Medal> . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?militaryForce WHERE {
  # A Field Battery, Royal Australian Artillery involvement in a war
  ?unit dbo:militaryConflict ?war .
  ?unit rdfs:label ""A Field Battery, Royal Australian Artillery""@en .

  # The war is the Second Boer War (South African War)
  ?war dbo:name ?warName .
  FILTER(CONTAINS(LCASE(?warName), ""second boer war"") || CONTAINS(LCASE(?warName), ""south african war""))

  # Commander of the war: Lord Baden-Powell
  ?commander dbo:commandedMilitaryUnit ?unit .
  ?commander rdfs:label ""Lord Baden-Powell""@en .

  # Awardee of British South Africa Company Medal
  ?awardee dbo:recipientOfAward ?medal .
  ?medal rdfs:label ""British South Africa Company Medal""@en .
  FILTER(?awardee = ?commander)

  # Military force involved in the war
  ?militaryForce dbo:militaryConflict ?war .
}
```",5,10,6,3,2,3,3,71,0,0,10,0,0.0,0
865,48,val,"Give me the native of the residence, that is a country, of the person decedent at Patna and father of the child of Abu Ahmad Abdul Hafiz.",SELECT ?result WHERE { ?v2 <http://dbpedia.org/property/father> ?result . ?v1 <http://dbpedia.org/property/residence> ?v0 . ?v2 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Abu_Ahmad_Abdul_Hafiz> . ?v1 <http://dbpedia.org/ontology/deathPlace> <http://dbpedia.org/resource/Patna> . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. ?result <http://dbpedia.org/ontology/birthPlace> ?v0 . },"```sparql
SELECT ?native WHERE {
  # Find Abu Ahmad Abdul Hafiz
  ?person rdfs:label ""Abu Ahmad Abdul Hafiz""@en .
  
  # Determine his place of death
  ?deathEvent dbo:place ?deathPlace ;
              dbo:agent ?person .
  FILTER (str(?deathPlace) = ""Patna"")

  # Find his residence, which should be a country
  ?residence dbo:resident ?person ;
             rdf:type dbo:Country .

  # Determine the native of that country
  ?native dbo:nativeCountry ?residence .
}
```",5,6,6,3,2,3,3,71,0,0,1,0,0.0,0
465,42,val,"Give me the spouse of Archduchess Barbara of Austria and successor of the child, that is a royalty, of Anne of Brittany and successor of the child of Alfonso I d'Este.",SELECT ?result WHERE { <http://dbpedia.org/resource/Anne_of_Brittany> <http://dbpedia.org/ontology/child> ?v1 . ?v2 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Alfonso_I_d'Este> . ?v2 <http://dbpedia.org/ontology/successor> ?result . ?v1 <http://dbpedia.org/ontology/successor> ?result . ?result <http://dbpedia.org/ontology/spouse> <http://dbpedia.org/resource/Archduchess_Barbara_of_Austria> . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. },"```sparql
# Step 1: Find spouse of Archduchess Barbara of Austria
SELECT ?spouse WHERE {
  wd:Q123456 wdt:P26 ?spouse .
}

# Step 2: Find successor of the child that is royalty of Anne of Brittany
SELECT ?successor WHERE {
  wd:Q789012 wdt:P40 ?child . # Anne of Brittany's children
  ?child wdt:P39 wd:Q1234567 . # Check if the child is a monarch (e.g., Claude, Queen of France)
  ?child wdt:P54 ?successor .
}

# Step 3: Find successor of the child of Alfonso I d'Este
SELECT ?successor WHERE {
  wd:Q345678 wdt:P40 ?child . # Alfonso I d'Este's children
  ?child wdt:P39 wd:Q890123 . # Ercole II d'Este, Duke of Ferrara
  ?child wdt:P54 ?successor .
}

# Combine results to find the common individual
SELECT DISTINCT ?individual WHERE {
  VALUES (?spouse ?royalSuccessor ?ducalSuccessor) {
    (wd:Q999999 wd:Q888888 wd:Q777777)
  }
  FILTER(?spouse = ?royalSuccessor && ?royalSuccessor = ?ducalSuccessor)
}
```

Note: The above SPARQL query uses placeholders for entity IDs (`wd:Q123456`, `wd:Q789012`, etc.) which need to be replaced with the actual DBpedia identifiers for Archduchess Barbara of Austria, Anne of Brittany's children, and Alfonso I d'Este's children. These can be found by querying DBpedia directly or using a lookup tool.",5,6,6,2,3,3,3,71,0,0,1,0,0.0,0
715,55,val,"Give me the commander in the force, that is a military conflict, of Abd el-Krim and leader of the office, that is a government agency and an organisation, of Carlos Franco Iribarnegaray and commander in the force of Francisco Largo Caballero.",SELECT ?result WHERE { ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. <http://dbpedia.org/resource/Carlos_Franco_Iribarnegaray> <http://dbpedia.org/property/office> ?v2 . ?v3 <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Abd_el-Krim> . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v5 <http://dbpedia.org/ontology/commander> ?result . ?v5 <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Francisco_Largo_Caballero> . ?v3 <http://dbpedia.org/ontology/commander> ?result . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/GovernmentAgency>. ?v2 <http://dbpedia.org/ontology/leader> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?person WHERE {
  # Abd el-Krim's military conflict (Rif War)
  ?rifWar dbo:opposingCommander ?commander1 .
  ?commander1 dbo:spouseOrPartner ?person .

  # Carlos Franco Iribarnegaray's organization
  ?organization dbo:leader ?person .
  ?organization a dbo:GovernmentAgency ; dbo:member dbr:Carlos_Franco_Iribarnegaray .

  # Francisco Largo Caballero's military conflict (Spanish Civil War)
  ?civilWar dbo:commander ?commander2 .
  ?commander2 dbo:spouseOrPartner ?person .

  FILTER (?rifWar = dbr:Rif_War && ?civilWar = dbr:Spanish_Civil_War)
}
```",6,9,7,2,3,3,3,71,0,0,1,0,0.0,0
976,52,val,"Give me the office of Naci Bostancı and office of the mayor, that is a politician and an office holder and Turkish, of Nation Alliance (Turkey) and office of the leader, that is a politician, of the administration, that is an organisation, of Kemal Kılıçdaroğlu.",SELECT ?result WHERE { ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v4 <http://dbpedia.org/ontology/nationality> <http://dbpedia.org/resource/Turkey>. ?v3 <http://dbpedia.org/ontology/leader> ?v1 . ?v1 <http://dbpedia.org/property/office> ?result . <http://dbpedia.org/resource/Naci_Bostancı> <http://dbpedia.org/property/office> ?result . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. <http://dbpedia.org/resource/Nation_Alliance_(Turkey)> <http://dbpedia.org/property/leader> ?v4 . ?v3 <http://dbpedia.org/property/leader> <http://dbpedia.org/resource/Kemal_Kılıçdaroğlu> . ?v4 <http://dbpedia.org/property/office> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?naciOffice ?kemalOffice WHERE {
  # Find Naci Bostancı's office in the Nation Alliance (Turkey)
  OPTIONAL {
    ?person rdfs:label ""Naci Bostancı""@en.
    ?person dbo:nationality dbr:Turkish_people.
    ?person dbo:partyAffiliation dbr:Nation_Alliance_(Turkey).
    ?person dbo:office ?naciOffice.
  }

  # Find Kemal Kılıçdaroğlu's office as a leader of an administration
  OPTIONAL {
    ?leader rdfs:label ""Kemal Kılıçdaroğlu""@en.
    ?leader dbo:positionHeld ?kemalOffice.
    ?organization dbo:leader ?leader.
    ?organization a dbo:Organization.
  }
}
```",6,11,7,3,3,3,3,71,0,0,1,0,0.0,0
445,40,val,"Give me the entity in the residence, that is a country, of the resident, that is an athlete, of Great Britain and entity in United Kingdom and death place of Patrick Moore.",SELECT ?result WHERE { ?v2 <http://dbpedia.org/property/residence> <http://dbpedia.org/resource/Great_Britain> . ?v2 <http://dbpedia.org/property/residence> ?v1 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. ?result <http://dbpedia.org/ontology/location> ?v1 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Athlete>. <http://dbpedia.org/resource/Patrick_Moore> <http://dbpedia.org/ontology/deathPlace> ?result . ?result <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/United_Kingdom> . },"```sparql
SELECT DISTINCT ?entity WHERE {
  # Find athletes from Great Britain and their country of residence
  ?athlete dbo:country dbr:United_Kingdom .
  ?athlete dbo:residenceCountry ?residenceCountry .

  # Ensure the residence is a country within the United Kingdom
  ?residenceCountry rdf:type dbo:Country ;
                    dbo:partOf dbr:United_Kingdom .

  # Find the death place of Patrick Moore
  dbr:Patrick_Moore dbo:deathPlace ?deathPlace .

  # Match the residence country with the death place
  FILTER (?residenceCountry = ?deathPlace)

  # Bind the common entity to the result
  BIND(?residenceCountry AS ?entity)
}
```",5,7,6,3,3,3,3,71,0,0,1,0,0.0,0
839,50,val,"Give me the band of the band, that is a musical artist, of Charlie Huhn and band of the member of the band, that is a band and a group, of Peter Schorowsky.",SELECT ?result WHERE { ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. <http://dbpedia.org/resource/Peter_Schorowsky> <http://dbpedia.org/ontology/associatedMusicalArtist> ?v0 . ?result <http://dbpedia.org/ontology/bandMember> ?v4 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Band>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Group>. ?result <http://dbpedia.org/ontology/bandMember> ?v3 . ?v0 <http://dbpedia.org/ontology/bandMember> ?v4 . <http://dbpedia.org/resource/Charlie_Huhn> <http://dbpedia.org/ontology/associatedMusicalArtist> ?v3 . },"```sparql
SELECT DISTINCT ?charlieBand ?peterBand WHERE {
  # Find Charlie Huhn's band
  ?charlieHuhn dbo:birthName ""Charlie Huhn""@en .
  ?charlieHuhn dbo:band ?charlieBand .

  # Find Peter Schorowsky's band
  ?peterSchorowsky dbo:birthName ""Peter Schorowsky""@en .
  ?peterSchorowsky dbo:band ?peterBand .
}
```",5,8,6,3,2,3,3,71,0,0,1,0,0.0,0
507,46,val,"Give me the spouse of the person born as the birth name of Anne V. Coates and director of the movie, that is a movie and a work, with Beryl Reid.",SELECT ?result WHERE { <http://dbpedia.org/resource/Anne_V._Coates> <http://dbpedia.org/property/birthName> ?v2 . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Film>. ?v1 <http://dbpedia.org/property/birthName> ?v2 . ?v4 <http://dbpedia.org/property/starring> <http://dbpedia.org/resource/Beryl_Reid> . ?v4 <http://dbpedia.org/ontology/director> ?result . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?result <http://dbpedia.org/ontology/spouse> ?v1 . },"```sparql
# Step 1: Get Anne V. Coates' birth name
SELECT ?birthName WHERE {
  wd:Q123456 foaf:name ""Anne V. Coates""@en .
  wd:Q123456 schema:birthName ?birthName .
}

# Step 2: Find the movie directed by her that features Beryl Reid
SELECT DISTINCT ?movie WHERE {
  # Assuming we have obtained Anne's birth name from the previous query, replace <BirthName> with it.
  ?person schema:name ""<BirthName>""@en .
  ?person dbo:directed ?movie .
  ?movie dbo:castMember wd:Q78910 .  # Beryl Reid's DBpedia ID
}

# Step 3: Find the spouse of the person with Anne V. Coates' birth name who directed that movie
SELECT DISTINCT ?spouse WHERE {
  # Assuming we have obtained the movie from the previous query, replace <Movie> with it.
  ?person schema:name ""<BirthName>""@en .
  ?person dbo:directed wd:<Movie> .
  ?person foaf:mbox ?email .  # To uniquely identify the person
  ?person dbo:spouse ?spouse .
}
```

Note: Replace `wd:Q123456` with Anne V. Coates' actual DBpedia ID, `<BirthName>` with her birth name obtained from Step 1, and `wd:<Movie>` with the movie's DBpedia ID obtained from Step 2.",5,7,6,3,2,3,3,71,0,0,1,0,0.0,0
216,43,val,"Give me the player in the coach, that is a soccer player and a sports manager and a soccer manager, of the player, that is an organisation and a sports club and a soccer club, in Džemal Berberović and player in Igor Bišćan and team of Ognjen Vukojević.",SELECT ?result WHERE { ?v0 <http://dbpedia.org/ontology/coach> ?v4 . <http://dbpedia.org/resource/Igor_Bišćan> <http://dbpedia.org/ontology/team> ?result . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsManager>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerClub>. <http://dbpedia.org/resource/Džemal_Berberović> <http://dbpedia.org/ontology/team> ?v0 . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerPlayer>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsClub>. ?v4 <http://dbpedia.org/ontology/team> ?result . ?result <http://dbpedia.org/ontology/coach> <http://dbpedia.org/resource/Ognjen_Vukojević> . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerManager>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?coach WHERE {
  # Džemal Berberović played for the team of Igor Bišćan
  dbr:Džemal_Berberović dbo:team dbr:Igor_Bišćan .
  
  # Igor Bišćan was part of a team managed by Ognjen Vukojević
  dbr:Igor_Bišćan dbo:coach dbr:Ognjen_Vukojević .

  # Ensure the coach is also a soccer player, sports manager, and soccer manager
  ?coach rdfs:label ""Ognjen Vukojević""@en .
  ?coach dbo:occupation dbr:Soccer_player ;
         dbo:occupation dbr:Sports_manager ;
         dbo:occupation dbr:Soccer_manager .

  # The organization is a sports club and a soccer club
  ?team dbo:type dbr:Sports_club ;
        dbo:sport dbr:Soccer .
  
  # Link the coach to this team
  ?coach dbo:coach ?team .
}
```",5,11,6,3,3,3,3,71,0,0,1,0,0.0,0
926,48,val,"Give me the father of the father of the spouse of Neşerek Kadın and child of the father, that is a royalty, of Mustafa III.",SELECT ?result WHERE { ?v0 <http://dbpedia.org/ontology/child> ?result . ?v3 <http://dbpedia.org/property/father> ?v1 . <http://dbpedia.org/resource/Mustafa_III> <http://dbpedia.org/property/father> ?v0 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v1 <http://dbpedia.org/property/father> ?result . <http://dbpedia.org/resource/Neşerek_Kadın> <http://dbpedia.org/ontology/spouse> ?v3 . },"```sparql
SELECT DISTINCT ?grandfather WHERE {
  # Step 1: Identify Neşerek Kadın's spouse
  ?neşerekKadın dbo:spouse ?spouse .
  
  # Step 2: Find the father of Neşerek Kadın's spouse
  ?spouse dbo:father ?fatherOfSpouse .

  # Step 3: Identify Mustafa III and his father
  dbpedia:Mustafa_III dbo:father ?mustafaFather .

  # Step 4: Find children of Mustafa III's father
  ?mustafaFather dbo:child ?child .
  
  # Step 5: Filter for royalty among these children
  ?child rdf:type dbo:Monarch .

  # Step 6: Determine the grandfather of Neşerek Kadın (father of spouse)
  ?fatherOfSpouse dbo:father ?grandfather .
}
```",5,6,6,3,2,3,3,71,0,0,1,0,0.0,0
933,54,val,Give me the reference to the birth name of the professional in Musician and band of The Ramong Sound and band of the band of Alan Warner (musician).,SELECT ?result WHERE { ?v2 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?result <http://xmlns.com/foaf/0.1/name> ?v4 . <http://dbpedia.org/resource/The_Ramong_Sound> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v1 <http://dbpedia.org/property/occupation> <http://dbpedia.org/resource/Musician> . ?v1 <http://dbpedia.org/property/birthName> ?v4 . <http://dbpedia.org/resource/Alan_Warner_(musician)> <http://dbpedia.org/ontology/associatedMusicalArtist> ?v2 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?birthName WHERE {
  # Find The Ramong Sound as a band
  ?band rdfs:label ""The Ramong Sound""@en .
  
  # Get members of the band
  ?band dbo:member ?member .

  # Identify Alan Warner among the members
  ?member rdfs:label ""Alan Warner (musician)""@en .

  # Retrieve Alan Warner's birth name
  OPTIONAL { ?member foaf:name ?birthName }
}
```",6,6,7,3,3,3,3,71,0,0,1,0,0.0,0
329,22,val,"Give me the entity in the region, that is a country, of Western European Time and birthplace of the author of The Tailor and Ansty.",SELECT ?result WHERE { <http://dbpedia.org/resource/The_Tailor_and_Ansty> <http://dbpedia.org/property/author> ?v2 . ?result <http://dbpedia.org/ontology/country> ?v3 . ?v3 <http://dbpedia.org/property/timeZone> <http://dbpedia.org/resource/Western_European_Time> . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. ?v2 <http://dbpedia.org/ontology/birthPlace> ?result . },"```sparql
SELECT ?country WHERE {
  ?author foaf:name ""George MacDonald""@en .
  ?author dbo:birthPlace ?birthPlace .
  ?birthPlace geo:hasCoordinate ?coordinate .
  ?coordinate geo:lat ?latitude ;
              geo:long ?longitude .
  FILTER(?latitude >= 56.0 && ?latitude <= 60.0 && ?longitude >= -8.0 && ?longitude <= -2.0) # Approximate coordinates for Scotland
  ?country dbr:United_Kingdom/geo:hasLocation/geo:location ?birthPlace .
  ?country a dbo:Country .
}
```",4,5,5,2,2,2,3,28,0,0,1,0,0.0,0
136,7,val,Give me the landmark at elevation of 5 and region coded as the area code of Levenhagen.,"SELECT ?result WHERE { <http://dbpedia.org/resource/Levenhagen> <http://dbpedia.org/ontology/areaCode> ?v0 . ?result <http://dbpedia.org/ontology/elevation> ""5""^^<http://www.w3.org/2001/XMLSchema#integer> . ?result <http://dbpedia.org/ontology/areaCode> ?v0 . }","```sparql
# Step 1: Find the area code for Levenhagen
SELECT ?areaCode WHERE {
  ?place rdfs:label ""Levenhagen""@en .
  ?place wdt:P281 ?areaCode .
}

# Step 2: Use the obtained area code to find a landmark at elevation of 5 meters in that region
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?landmark WHERE {
  ?landmark a dbo:Lighthouse ;
            dbo:elevationAboveSeaLevel ""5""^^xsd:float ;
            dbo:location dbr:Levenhagen .
}
```

Note: The second query assumes that the area code obtained from the first query is used to filter landmarks in Levenhagen. If DBpedia does not directly link landmarks with postal codes, additional steps may be needed to refine this search based on available data.",3,3,4,2,2,2,2,9,0,0,1,0,0.0,0
582,43,val,"Give me the player in the father, that is an athlete and a soccer manager and a sports manager, of the child of Kazuaki Nagasawa and figure known as --10-19 and reference to Japan.","SELECT ?result WHERE { ?v0 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Kazuaki_Nagasawa> . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerManager>. ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Athlete>. ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsManager>. ?result <http://dbpedia.org/property/nickname> ""--10-19""^^<http://www.w3.org/2001/XMLSchema#gMonthDay> . ?v4 <http://dbpedia.org/ontology/team> ?result . ?v0 <http://dbpedia.org/property/father> ?v4 . ?result <http://xmlns.com/foaf/0.1/name> ""Japan""@en . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?father WHERE {
  # Find Kazuaki Nagasawa
  ?kazuaki a dbo:Person ;
           foaf:name ""Kazuaki Nagasawa"" .

  # Identify his child
  ?child dbo:parent ?kazuaki .
  
  # Assume --10-19 is an alias or another name for the child
  OPTIONAL { ?child foaf:name ""--10-19"" . }

  # Find the father of this child who fits the description
  ?father dbo:spouse ?mother ;
          dbo:parent ?child .

  # Ensure the father is an athlete, soccer manager, and sports manager
  ?father dbo:occupation dbp:Athlete .
  ?father dbo:occupation dbp:SoccerManager .
  ?father dbo:occupation dbp:SportsManager .

  # Reference to Japan (either through nationality or place of birth)
  ?father dbo:nationality dbr:Japan ;
          OPTIONAL { ?father dbo:birthPlace dbr:Japan . }
}
```",5,8,6,3,3,3,3,71,0,0,1,0,0.0,0
933,48,val,"Give me the band of the band of the band, that is an artist and a musical artist, of The Ramong Sound and band of the band, that is a group and a band and an organisation, of Alan Warner (musician).",SELECT ?result WHERE { ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. ?v1 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Band>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Group>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. <http://dbpedia.org/resource/The_Ramong_Sound> <http://dbpedia.org/ontology/associatedMusicalArtist> ?v3 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. <http://dbpedia.org/resource/Alan_Warner_(musician)> <http://dbpedia.org/ontology/associatedMusicalArtist> ?v0 . ?v0 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v3 <http://dbpedia.org/ontology/associatedMusicalArtist> ?v1 . },"```sparql
SELECT DISTINCT ?bandMember ?alanWarnerBand WHERE {
  # Find members of The Ramones who are also artists and musical artists
  ?ramones rdf:type dbo:MusicalArtist .
  ?ramones foaf:name ""The Ramones"" .
  ?ramones dbo:member ?bandMember .
  ?bandMember rdf:type dbo:MusicalArtist .
  ?bandMember dbo:genre ?genre .

  # Find bands associated with Alan Warner
  ?alanWarner foaf:name ""Alan Warner (musician)"" .
  ?alanWarner dbo:memberOf ?alanWarnerBand .
  ?alanWarnerBand rdf:type dbo:Band ;
                  dbo:genre ?genre2 .

  FILTER(?genre = ?genre2)
}
```",5,10,6,3,2,3,3,71,0,0,4,0,0.0,0
495,16,val,Give me the father of the child of Princess Charlotte of Saxe-Hildburghausen and child of the father of William I of Württemberg.,SELECT ?result WHERE { ?v3 <http://dbpedia.org/ontology/parent> <http://dbpedia.org/resource/Princess_Charlotte_of_Saxe-Hildburghausen> . ?result <http://dbpedia.org/property/father> ?v2 . <http://dbpedia.org/resource/William_I_of_Württemberg> <http://dbpedia.org/property/father> ?v2 . ?v3 <http://dbpedia.org/property/father> ?result . },"```sparql
SELECT ?father WHERE {
  ?princess rdf:type dbo:Person ;
            foaf:name ""Princess Charlotte of Saxe-Hildburghausen""@en .
  ?child1 dbo:parent ?princess ;
          dbo:parent ?father .
  ?william1 dbo:parent ?child1 ;
            foaf:name ""William I, Duke of Württemberg""@en .
  ?charles2Eugene rdf:type dbo:Person ;
                  foaf:name ""Charles II Eugene, Duke of Württemberg""@en ;
                  dbo:spouse ?princess .
  ?william2 rdf:type dbo:Person ;
            foaf:name ""William I of Württemberg""@en ;
            dbo:parent ?charles2Eugene .
}
```",4,4,5,2,2,3,2,20,0,0,1,0,0.0,0
273,15,val,Give me the spouse of the child of the child of Edoardo Agnelli (1831-1871) and parent of Gianni Agnelli.,SELECT ?result WHERE { <http://dbpedia.org/resource/Gianni_Agnelli> <http://dbpedia.org/ontology/parent> ?result . ?result <http://dbpedia.org/ontology/spouse> ?v1 . ?v0 <http://dbpedia.org/ontology/parent> <http://dbpedia.org/resource/Edoardo_Agnelli_(1831-1871)> . ?v0 <http://dbpedia.org/ontology/child> ?v1 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?spouse WHERE {
  # Edoardo Agnelli (1831-1871)
  ?edoardo a dbo:Person ;
           foaf:name ""Edoardo Agnelli"" ;
           dbo:birthDate ?birthDate .
  
  FILTER(?birthDate = ""1831-01-01T00:00:00Z""^^xsd:dateTime)

  # Giovanni Agnelli (1866-1945), child of Edoardo
  ?giovanni a dbo:Person ;
            foaf:name ""Giovanni Agnelli"" ;
            dbo:parent ?edoardo ;
            dbo:birthDate ?birthDate2 .

  FILTER(?birthDate2 = ""1866-01-01T00:00:00Z""^^xsd:dateTime)

  # Gianni Agnelli, child of Giovanni
  ?gianni a dbo:Person ;
          foaf:name ""Gianni Agnelli"" ;
          dbo:parent ?giovanni .

  # Donna Rosa Marone Cinzano, spouse of Giovanni and mother of Gianni
  ?spouse a dbo:Person ;
          foaf:name ""Donna Rosa Marone Cinzano"" ;
          dbo:spouse ?giovanni .
}
```",4,4,5,3,2,3,2,20,0,0,1,0,0.0,0
465,48,val,"Give me the successor of the child, that is a royalty, of Anne of Brittany and successor of the child of the parent of Ercole II d'Este, Duke of Ferrara.","SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/successor> ?result . <http://dbpedia.org/resource/Ercole_II_d'Este,_Duke_of_Ferrara> <http://dbpedia.org/ontology/parent> ?v3 . ?v2 <http://dbpedia.org/property/father> ?v3 . <http://dbpedia.org/resource/Anne_of_Brittany> <http://dbpedia.org/ontology/child> ?v1 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v2 <http://dbpedia.org/ontology/successor> ?result . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?successor WHERE {
  # Anne of Brittany's child who is royalty
  ?anneChild a dbo:Monarch ;
             dbo:spouse ?parent1 ;
             dbo:child ?royalChild .
  
  FILTER (?parent1 = dbp:AnneOfBrittany) .

  # Successor of this royal child
  ?royalChild dbo:successor ?successor1 .

  # Ercole II d'Este's parent
  ?ercoleParent a dbo:Monarch ;
                dbo:child ?ercoleII .
  
  FILTER (?ercoleII = dbp:ErcoleIIDEste) .

  # Successor of Ercole II d'Este's child
  ?ercoleChild a dbo:Monarch ;
               dbo:parent ?ercoleII ;
               dbo:successor ?successor2 .

  # Find the common successor
  FILTER (?successor1 = ?successor2)
}
```",5,6,6,3,2,3,3,71,0,0,1,0,0.0,0
365,16,val,"Give me the spouse of the native, that is a politician, of Poltava Governorate and person born as the birth name of Symon Petliura.",SELECT ?result WHERE { ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v3 <http://dbpedia.org/ontology/spouse> ?result . ?result <http://dbpedia.org/property/birthName> ?v2 . ?v3 <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Poltava_Governorate> . <http://dbpedia.org/resource/Symon_Petliura> <http://dbpedia.org/property/birthName> ?v2 . },"```sparql
# Step 1: Get Symon Petliura's birth name
SELECT ?birthName WHERE {
  dbpedia:Symon_Petliura dbo:birthName ?birthName .
}

# Assuming the birth name is found, let's say it is ""Ivan Ivanovich"" (replace with actual value)

# Step 2: Find politicians from Poltava Governorate and match birth name
SELECT ?politician ?spouse WHERE {
  ?politician dbo:nativePlace dbr:Poltava_Governorate ;
              dbo:birthName ?birthName .
  FILTER(?birthName = ""Ivan Ivanovich"") # Replace with actual birth name

  OPTIONAL { ?politician dbo:spouse ?spouse . }
}
```",4,5,5,2,2,3,2,20,0,0,1,0,0.0,0
917,54,val,"Give me the parent of the child, that is a royalty, of Kamehameha IV and child of the father of the spouse, that is a royalty, of Leleiohoku I and child of Kekūanāoʻa.","SELECT ?result WHERE { ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v1 <http://dbpedia.org/ontology/spouse> <http://dbpedia.org/resource/Leleiohoku_I> . ?v1 <http://dbpedia.org/property/father> ?v4 . ?result <http://dbpedia.org/ontology/child> ?v2 . ?result <http://dbpedia.org/property/father> ""Kekūanāoʻa""@en . ?v2 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Kamehameha_IV> . ?result <http://dbpedia.org/ontology/parent> ?v4 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?parent WHERE {
  # Kamehameha IV's children who are royalty
  ?child dbo:spouse ?kamehamehaIV .
  ?child a dbo:Monarch .

  # Leleiohoku I's spouse and her father
  dbr:Leleiohoku_I dbo:spouse ?kapiolani .
  ?kapiolani dbo:father ?keeaumokuII .
  ?keeaumokuII a dbo:Monarch .

  # Kekūanāoʻa's child
  dbr:Kekuanaoa dbo:child ?child .

  # Victoria Kamāmalu is the child in question
  ?child rdfs:label ""Victoria Kamāmalu""@en .

  # Parent of Victoria Kamāmalu
  ?parent dbo:spouse ?kamehamehaIV .
  ?parent dbo:child ?child .
}
```",6,8,7,3,3,3,3,71,0,0,1,0,0.0,0
645,43,val,"Give me the military force of the force, that is an event and a military conflict and a societal event, of the native, that is a president and a politician, of Restoration (Spain) and commander in Battle of Jarama and leader of Ministry of the Army (Spain).",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/battle> ?v4 . ?v0 <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Restoration_(Spain)> . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/President>. <http://dbpedia.org/resource/Ministry_of_the_Army_(Spain)> <http://dbpedia.org/ontology/leader> ?result . ?v4 <http://dbpedia.org/ontology/commander> ?v0 . <http://dbpedia.org/resource/Battle_of_Jarama> <http://dbpedia.org/ontology/commander> ?result . },"```sparql
SELECT ?militaryForce WHERE {
  ?person dbo:nationality dbr:Spain .
  ?person dbo:occupation dbr:President_of_Spain .
  ?person dbo:occupation dbr:Politician .
  ?person dbo:commanderInBattle dbr:Battle_of_Jarama .
  ?person dbo:leaderOfMinistry dbr:Ministry_of_the_Army_(Spain) .
  ?militaryForce dbo:participatedIn ?person .
  ?militaryForce rdf:type dbp:Military_Conflict .
  ?militaryForce rdf:type dbp:Societal_Event .
  ?militaryForce rdf:type dbp:Event .
}
```",5,10,6,3,3,3,3,71,0,0,1,0,0.0,0
382,16,val,"Give me the landmark at elevation of the award of Harry Combes and birthplace of the manager, that is a soccer manager and an athlete and a sports manager, of Bonner SC.",SELECT ?result WHERE { ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsManager>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Athlete>. ?v2 <http://dbpedia.org/ontology/birthPlace> ?result . <http://dbpedia.org/resource/Bonner_SC> <http://dbpedia.org/ontology/manager> ?v2 . <http://dbpedia.org/resource/Harry_Combes> <http://dbpedia.org/property/awards> ?v3 . ?result <http://dbpedia.org/ontology/elevation> ?v3 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerManager>. },"```sparql
# Step 1: Find the award associated with Harry Combes
SELECT ?award WHERE {
    ?person foaf:name ""Harry Combes""@en .
    ?person dbo:awarded ?award .
}

# Step 2: Identify the manager of Bonner SC who is also an athlete and a sports manager
SELECT DISTINCT ?manager WHERE {
    ?team dbo:coach ?manager ;
          rdfs:label ""Bonner SC""@en .
    ?manager dbo:occupation dbr:Athlete ;
             dbo:occupation dbr:Sports_manager .
}

# Step 3: Find the birthplace of this manager
SELECT ?birthPlace WHERE {
    ?manager dbo:birthPlace ?birthPlace .
}

# Step 4: Identify the landmark at the elevation associated with Harry Combes' award
SELECT DISTINCT ?landmark WHERE {
    ?award dbo:elevation ?elevation .
    ?location dbo:elevation ?elevation ;
              dbo:isPartOf ?country .
    ?location dbo:name ?landmark .
}
```",4,7,5,2,2,3,2,20,0,0,1,0,0.0,0
445,48,val,"Give me the entity in the award of George H. Cameron and entity in the residence, that is a country, of the resident, that is an athlete, of Great Britain.",SELECT ?result WHERE { <http://dbpedia.org/resource/George_H._Cameron> <http://dbpedia.org/property/awards> ?v1 . ?v3 <http://dbpedia.org/property/residence> ?v2 . ?result <http://dbpedia.org/ontology/location> ?v2 . ?result <http://dbpedia.org/ontology/country> ?v1 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. ?v3 <http://dbpedia.org/property/residence> <http://dbpedia.org/resource/Great_Britain> . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Athlete>. },"```sparql
SELECT DISTINCT ?award ?country WHERE {
  # Part 1: Find the award associated with George H. Cameron
  ?person dbo:name ""George H. Cameron""@en .
  ?person dbo:award ?award .

  # Part 2: Find an athlete from Great Britain and their country of residence
  ?athlete dbo:nationality dbr:United_Kingdom ;
           a dbo:Athlete ;
           dbo:residence ?residence .
  
  ?residence rdfs:label ?countryLabel .
  FILTER (LANG(?countryLabel) = ""en"" && REGEX(STR(?countryLabel), ""^Country""))
}
```",5,7,6,3,2,3,3,71,0,0,102,0,0.0,0
865,42,val,"Give me the father of the child of Abu Ahmad Abdul Hafiz and father of AK Abdul Momen and native of the residence, that is a country, of Ram Jaipal Singh Yadav.",SELECT ?result WHERE { <http://dbpedia.org/resource/Ram_Jaipal_Singh_Yadav> <http://dbpedia.org/property/residence> ?v0 . ?v2 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Abu_Ahmad_Abdul_Hafiz> . <http://dbpedia.org/resource/AK_Abdul_Momen> <http://dbpedia.org/property/father> ?result . ?v2 <http://dbpedia.org/property/father> ?result . ?result <http://dbpedia.org/ontology/birthPlace> ?v0 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. },"```sparql
# Step 1: Find the common child of Abu Ahmad Abdul Hafiz and AK Abdul Momen
SELECT ?child WHERE {
    ?person dbo:parent dbr:Abu_Ahmad_Abdul_Hafiz .
    ?person dbo:parent dbr:AK_Abdul_Momen .
    ?person rdfs:label ?childLabel .
    FILTER(CONTAINS(LCASE(?childLabel), ""common child name"")) # Replace with actual common child's name if known
}

# Step 2: Find the father of that child
SELECT ?father WHERE {
    ?person dbo:parent ?father .
    ?person rdfs:label ?childLabel .
    FILTER(?childLabel = ""Common Child Name"") # Use the result from step 1
}

# Step 3: Determine Ram Jaipal Singh Yadav's residence country
SELECT ?country WHERE {
    dbr:Ram_Jaipal_Singh_Yadav dbo:nativePlace ?place .
    ?place rdf:type dbo:Country .
    ?place rdfs:label ?countryLabel .
}

# Step 4: Ensure the father is a native of that country
SELECT ?father WHERE {
    ?person dbo:parent ?father .
    ?person rdfs:label ""Common Child Name"" .
    ?father dbo:nativePlace ?nativePlace .
    ?nativePlace rdf:type dbo:Country .
    ?nativePlace rdfs:label ?countryLabel .
    FILTER(?countryLabel = ""Country Name"") # Use the result from step 3
}
```",5,6,6,2,3,3,3,71,0,0,1,0,0.0,0
216,46,val,"Give me the player in the coach, that is a soccer player and a sports manager and a soccer manager, of Bosnia and Herzegovina national under-18 football team and player in the coach of the reference, that is an organisation and a soccer club, to Croatia U21.","SELECT ?result WHERE { ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerManager>. ?v2 <http://dbpedia.org/ontology/coach> ?v1 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. <http://dbpedia.org/resource/Bosnia_and_Herzegovina_national_under-18_football_team> <http://dbpedia.org/ontology/coach> ?v4 . ?v4 <http://dbpedia.org/ontology/team> ?result . ?v1 <http://dbpedia.org/ontology/team> ?result . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsManager>. ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerPlayer>. ?v2 <http://xmlns.com/foaf/0.1/name> ""Croatia U21""@en . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerClub>. }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?person WHERE {
  ?person a dbo:SoccerPlayer .
  ?person dbo:sportManagerOf dbr:Bosnia_and_Herzegovina_national_under-18_football_team .
  ?person dbo:coachOf dbr:Croatia_U21_football_team .
  
  OPTIONAL { ?person dbo:managerOf dbr:Croatia_U21_football_team . }
  OPTIONAL { ?person dbo:playerInTeam dbr:Bosnia_and_Herzegovina_national_under-18_football_team . }
}
```",5,10,6,3,2,3,3,71,0,0,3,0,0.0,0
47,41,val,Give me the office of the awardee of Banga Bhushan and office of the administration of Jagdeep Dhankhar and office of Ajoy Mukherjee.,SELECT ?result WHERE { ?v4 <http://dbpedia.org/property/office> ?result . ?v2 <http://dbpedia.org/property/office> ?result . ?v2 <http://dbpedia.org/property/governor> <http://dbpedia.org/resource/Jagdeep_Dhankhar> . ?v4 <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/Banga_Bhushan> . <http://dbpedia.org/resource/Ajoy_Mukherjee> <http://dbpedia.org/property/office> ?result . },"```sparql
# Query for the office of the awardee of Banga Bhushan
SELECT ?awardee ?office WHERE {
  ?award dcterms:isPartOf <http://dbpedia.org/resource/West_Bengal> ;
         dbp:name ""Banga Bhushan"" .
  ?award dbo:recipient ?person .
  ?person foaf:name ?awardee .
  OPTIONAL { ?person dbo:officeHeld ?office . }
}

# Query for the office of Jagdeep Dhankhar
SELECT DISTINCT ?office WHERE {
  ?dhankhar foaf:name ""Jagdeep Dhankhar"" ;
            dbo:officeHeld ?office .
}

# Query for the office of Ajoy Mukherjee
SELECT DISTINCT ?office WHERE {
  ?mukherjee foaf:name ""Ajoy Mukherjee"" ;
             dbo:officeHeld ?office .
}
```",5,5,6,2,3,3,3,71,0,0,1,0,0.0,0
417,47,val,"Give me the spouse of the parent, that is a royalty, of Count Ingolf of Rosenborg and child of the father of the leader, that is a royalty, of Colony of Greenland.",SELECT ?result WHERE { ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. <http://dbpedia.org/resource/Colony_of_Greenland> <http://dbpedia.org/property/leader> ?v0 . ?result <http://dbpedia.org/ontology/spouse> ?v2 . ?result <http://dbpedia.org/property/father> ?v4 . ?v0 <http://dbpedia.org/property/father> ?v4 . ?v2 <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Count_Ingolf_of_Rosenborg> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?spouse WHERE {
  # Step 1: Identify Count Ingolf of Rosenborg and his royal parent
  ?countIngolf a dbo:Count ;
               foaf:name ""Ingolf of Rosenborg"" .
  
  ?parent dbo:child ?countIngolf ;
          dbo:title ?royalTitle .

  FILTER EXISTS { ?royalTitle dbp:isRoyalTitle true }

  # Step 2: Determine the spouse of this royal parent
  ?spouse dbo:spouseOrPartner ?parent .

  # Step 3: Identify the leader of Colony of Greenland and their father
  ?leader a dbo:Leader ;
          foaf:name ?greenlandLeaderName .
  
  ?father dbo:child ?leader .

  # Step 4: Determine the child of this father that is a royalty
  ?royalChild dbo:parent ?father ;
              dbo:title ?childRoyalTitle .

  FILTER EXISTS { ?childRoyalTitle dbp:isRoyalTitle true }

  # Ensure the royal parent and the royal child are related through the same lineage
  ?parent foaf:name ?commonName .
  ?royalChild foaf:name ?commonName .
}
```",5,7,6,3,2,3,3,71,0,0,1,0,0.0,0
715,41,val,"Give me the commander in the force of Francisco Largo Caballero and commander in the force, that is a military conflict, of Abd el-Krim and leader of Ministry of the Air (Spain).",SELECT ?result WHERE { ?v2 <http://dbpedia.org/ontology/commander> ?result . <http://dbpedia.org/resource/Ministry_of_the_Air_(Spain)> <http://dbpedia.org/ontology/leader> ?result . ?v4 <http://dbpedia.org/ontology/commander> ?result . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v4 <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Francisco_Largo_Caballero> . ?v2 <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Abd_el-Krim> . },"```sparql
# Query to find the commander in the force of Francisco Largo Caballero
SELECT ?commander WHERE {
  ?person dbo:spouse|dbo:partner|dbo:child|dbo:parent|dbo:employer|dbo:employee|dbo:member|dbo:memberOf|dbo:director|dbo:executive|dbo:founder|dbo:foundingDirector|dbo:cofounder|dbo:vicePresident|dbo:president|dbo:chairman|dbo:boardMember|dbo:chiefExecutiveOfficer|dbo:CEO|dbo:head|dbo:leader|dbo:commander ?francisco .
  ?francisco rdfs:label ""Francisco Largo Caballero""@en .
  ?person rdfs:label ?commanderLabel .
  FILTER(LANG(?commanderLabel) = 'en')
}

UNION

# Query to find the commander in the force of Abd el-Krim
SELECT ?commander WHERE {
  ?conflict dbo:opposingMilitaryCommander|dbo:militaryCommander ?abdElKrim .
  ?abdElKrim rdfs:label ""Abd el-Krim""@en .
  ?conflict dbo:opposingMilitaryCommander|dbo:militaryCommander ?commander .
  ?commander rdfs:label ?commanderLabel .
  FILTER(LANG(?commanderLabel) = 'en')
}

UNION

# Query to find the leader of Ministry of the Air (Spain)
SELECT ?leader WHERE {
  ?ministry dbo:head|dbo:leader ?person .
  ?ministry rdfs:label ""Ministry of the Air (Spain)""@en .
  ?person rdfs:label ?leaderLabel .
  FILTER(LANG(?leaderLabel) = 'en')
}
```",5,6,6,2,3,3,3,71,0,0,1,0,0.0,0
582,42,val,Give me the reference to the residence of Hirotaka Sugawara and player in Kazuaki Nagasawa and figure known as the nickname of Japan national football team.,SELECT ?result WHERE { <http://dbpedia.org/resource/Kazuaki_Nagasawa> <http://dbpedia.org/ontology/team> ?result . ?result <http://dbpedia.org/property/nickname> ?v1 . <http://dbpedia.org/resource/Hirotaka_Sugawara> <http://dbpedia.org/property/residence> ?v2 . <http://dbpedia.org/resource/Japan_national_football_team> <http://dbpedia.org/property/nickname> ?v1 . ?result <http://xmlns.com/foaf/0.1/name> ?v2 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?residence ?playerRole ?nickname WHERE {
  # Hirotaka Sugawara's residence
  OPTIONAL { 
    dbr:Hirotaka_Sugawara dbo:residenceLocation ?residence .
  }
  
  # Kazuaki Nagasawa as a player
  OPTIONAL {
    dbr:Kazuaki_Nagasawa dbo:occupation ?playerRole .
    FILTER(CONTAINS(LCASE(?playerRole), ""football""))
  }

  # Nickname of the Japan National Football Team
  OPTIONAL {
    dbr:Japan_national_football_team dbo:nickname ?nickname .
  }
}
```",5,5,6,2,3,3,3,71,0,0,1,0,0.0,0
47,55,val,Give me the office of the awardee of Banga Bhushan and office of the administration of Jagdeep Dhankhar and office of the awardee of Padma Vibhushan.,SELECT ?result WHERE { ?v2 <http://dbpedia.org/property/office> ?result . ?v2 <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/Padma_Vibhushan> . ?v5 <http://dbpedia.org/property/office> ?result . ?v3 <http://dbpedia.org/property/governor> <http://dbpedia.org/resource/Jagdeep_Dhankhar> . ?v5 <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/Banga_Bhushan> . ?v3 <http://dbpedia.org/property/office> ?result . },"```sparql
# Query for Banga Bhushan Awardee's Office
SELECT ?person ?office WHERE {
  ?person dbo:award dbr:Banga_Bhushan_Award .
  OPTIONAL { ?person dbo:officeHolder ?office . }
}

UNION

# Query for Jagdeep Dhankhar's Administration Role
SELECT ?person ?position WHERE {
  ?person foaf:name ""Jagdeep Dhankhar""@en .
  OPTIONAL { ?person dbo:position ?position . }
}

UNION

# Query for Padma Vibhushan Awardee's Office
SELECT ?person ?office WHERE {
  ?person dbo:award dbr:Padma_Vibhushan .
  OPTIONAL { ?person dbo:officeHolder ?office . }
}
```",6,6,7,2,3,3,3,71,0,0,1,0,0.0,0
47,44,val,Give me the office of the awardee of Padma Vibhushan and office of the awardee of Banga Bhushan and office of Suvendu Adhikari.,SELECT ?result WHERE { ?v2 <http://dbpedia.org/property/office> ?result . <http://dbpedia.org/resource/Suvendu_Adhikari> <http://dbpedia.org/property/office> ?result . ?v4 <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/Banga_Bhushan> . ?v4 <http://dbpedia.org/property/office> ?result . ?v2 <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/Padma_Vibhushan> . },"```sparql
# Query for a specific Padma Vibhushan awardee's office
SELECT ?person ?office WHERE {
  ?person dbo:award <http://dbpedia.org/resource/Padma_Vibhushan> .
  OPTIONAL { ?person dbo:office ?office . }
  FILTER (LANG(?office) = ""en"")
}

# Query for a specific Banga Bhushan awardee's office
SELECT ?person ?office WHERE {
  ?person dbo:award <http://dbpedia.org/resource/Banga_Bhushan> .
  OPTIONAL { ?person dbo:office ?office . }
  FILTER (LANG(?office) = ""en"")
}

# Query for Suvendu Adhikari's office
SELECT ?person ?office WHERE {
  ?person foaf:name ""Suvendu Adhikari""@en .
  OPTIONAL { ?person dbo:office ?office . }
  FILTER (LANG(?office) = ""en"")
}
```",5,5,6,2,3,3,3,71,0,0,1,0,0.0,0
417,50,val,"Give me the child of the child, that is a royalty, of Frederick Francis III, Grand Duke of Mecklenburg-Schwerin and child of the father of the leader, that is a royalty, of Colony of Greenland.","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/parent> ?v3 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. <http://dbpedia.org/resource/Colony_of_Greenland> <http://dbpedia.org/property/leader> ?v0 . ?result <http://dbpedia.org/property/father> ?v4 . ?v0 <http://dbpedia.org/property/father> ?v4 . ?v3 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Frederick_Francis_III,_Grand_Duke_of_Mecklenburg-Schwerin> . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. }","```sparql
# Step 1: Find Frederick Francis III's children
SELECT ?child WHERE {
  wd:Q123456 wdt:P40 ?child .
}

# Step 2: Identify grandchildren who are royalty
SELECT DISTINCT ?grandchild WHERE {
  ?child wdt:P40 ?grandchild .
  ?grandchild wdt:P31/wdt:P279* wd:Q11850 . # Royal title
}

# Step 3: Find the leader of the Colony of Greenland
SELECT ?leader WHERE {
  wd:Q789012 wdt:P39 ?leader . # Assuming Q789012 is the DBpedia item for Colony of Greenland
}

# Step 4: Identify the father of this leader
SELECT ?father WHERE {
  ?leader wdt:P22 ?father .
}

# Step 5: Find a child of this father who is royalty
SELECT DISTINCT ?royalChild WHERE {
  ?father wdt:P40 ?royalChild .
  ?royalChild wdt:P31/wdt:P279* wd:Q11850 . # Royal title
}

# Final step: Match the grandchild from Step 2 with the royal child from Step 5
SELECT DISTINCT ?grandchild WHERE {
  ?grandchild IN (?grandchildren) .
  ?grandchild IN (?royalChildren) .
}
```

Note: The above query assumes placeholders like `Q123456` for Frederick Francis III and `Q789012` for the Colony of Greenland. These need to be replaced with actual DBpedia identifiers.",5,7,6,3,2,3,3,71,0,0,2,0,0.0,0
83,15,val,"Give me the ruling party in the birthplace, that is a town and Brazilian and a soccer club, of the member, that is a sports manager, of Kedah FA and party of Alceu Collares.",SELECT ?result WHERE { ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsManager>. ?v0 <http://dbpedia.org/ontology/birthPlace> ?v1 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerClub>. ?v0 <http://dbpedia.org/ontology/team> <http://dbpedia.org/resource/Kedah_FA> . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Town>. <http://dbpedia.org/resource/Alceu_Collares> <http://dbpedia.org/ontology/party> ?result . ?v1 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Brazil>. ?v1 <http://dbpedia.org/property/leaderParty> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?town ?rulingParty WHERE {
  # Find Alceu Collares and his birthplace
  ?person a dbo:SportsManager ;
          foaf:name ""Alceu Collares"" ;
          dbo:nationality dbr:Brazil ;
          dbo:memberOf dbr/Kedah_FA .
  
  ?person dbo:birthPlace ?town .

  FILTER (isLiteral(?town) && contains(str(?town), ""Brazil""))

  # Ensure the town has a soccer club
  ?club dbo:location ?town ;
        a dbo:SoccerClub .

  # Find ruling party in the town
  OPTIONAL {
    ?town dbp:government ?government .
    ?government dbo:rulingParty ?rulingParty .
  }
}
```",4,8,5,3,2,3,2,20,0,0,1,0,0.0,0
933,42,val,"Give me the reference to Alan Warner and band of the band, that is a group and a band and an organisation, of Alan Warner (musician) and band of the band of Alan Warner (musician).","SELECT ?result WHERE { ?v0 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v1 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . <http://dbpedia.org/resource/Alan_Warner_(musician)> <http://dbpedia.org/ontology/associatedMusicalArtist> ?v1 . <http://dbpedia.org/resource/Alan_Warner_(musician)> <http://dbpedia.org/ontology/associatedMusicalArtist> ?v0 . ?result <http://xmlns.com/foaf/0.1/name> ""Alan Warner""@en . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Group>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Band>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?band ?subBand WHERE {
  # Find Alan Warner as a musician
  ?person rdfs:label ""Alan Warner""@en .
  ?person dbo:occupation dbr:Musical_instrumentalist .

  # Find bands associated with Alan Warner
  ?band dbo:member ?person ;
        rdf:type ?type .
  
  FILTER (CONTAINS(LCASE(STR(?type)), ""band"") || CONTAINS(LCASE(STR(?type)), ""group"") || CONTAINS(LCASE(STR(?type)), ""organization""))

  OPTIONAL {
    # Find sub-bands or groups within the band
    ?subBand dbo:member ?band ;
             rdf:type ?subType .
    
    FILTER (CONTAINS(LCASE(STR(?subType)), ""band"") || CONTAINS(LCASE(STR(?subType)), ""group""))
  }
}
```",5,8,6,2,3,3,3,71,0,0,1,0,0.0,0
791,43,val,"Give me the predecessor of the child of the child, that is an office holder and a royalty, of Emperor Go-Shirakawa and father of Emperor Go-Toba and spouse of Taira no Tokuko.",SELECT ?result WHERE { <http://dbpedia.org/resource/Emperor_Go-Toba> <http://dbpedia.org/property/father> ?result . ?v4 <http://dbpedia.org/property/father> ?v0 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?result <http://dbpedia.org/ontology/spouse> <http://dbpedia.org/resource/Taira_no_Tokuko> . ?v0 <http://dbpedia.org/ontology/parent> <http://dbpedia.org/resource/Emperor_Go-Shirakawa> . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?result <http://dbpedia.org/ontology/successor> ?v4 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?predecessor WHERE {
  # Emperor Go-Shirakawa
  ?goShirakawa a dbo:Monarch ;
               foaf:name ""Emperor Go-Shirakawa""@en .

  # Child of Emperor Go-Shirakawa who is an office holder and royalty, father of Emperor Go-Toba, spouse of Taira no Tokuko
  ?antoku dbo:childOf ?goShirakawa ;
         a dbo:Monarch ;
         foaf:name ""Antoku""@en .
  
  # Antoku's child (Emperor Go-Toba)
  ?goToba dbo:parent ?antoku ;
          foaf:name ""Emperor Go-Toba""@en .

  # Predecessor of Emperor Go-Toba
  ?predecessor dbo:successor ?goToba ;
               foaf:name ?name .
}
```",5,7,6,3,3,3,3,71,0,0,1,0,0.0,0
865,54,val,"Give me the father of the child, that is a politician, of the spouse of Syeda Shahar Banu and father of Shahla Khatun and native of the residence, that is a country, of Ram Jaipal Singh Yadav.",SELECT ?result WHERE { ?v4 <http://dbpedia.org/property/father> ?result . <http://dbpedia.org/resource/Syeda_Shahar_Banu> <http://dbpedia.org/ontology/spouse> ?v2 . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. <http://dbpedia.org/resource/Shahla_Khatun> <http://dbpedia.org/property/father> ?result . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. ?v4 <http://dbpedia.org/property/father> ?v2 . <http://dbpedia.org/resource/Ram_Jaipal_Singh_Yadav> <http://dbpedia.org/property/residence> ?v0 . ?result <http://dbpedia.org/ontology/birthPlace> ?v0 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?father WHERE {
  # Step 1: Find Syeda Shahar Banu's spouse
  ?spouse a dbo:Spouse ;
          dbo:spouse dbr:Syeda_Sharbanoo .
  
  # Step 2: Identify their children who are politicians
  ?child dbo:parent ?spouse ;
         dbo:occupation dbr:Politician .

  # Step 3: Find Shahla Khatun's father (should be the same as above)
  ?shahla dbo:parent ?spouse .
  
  FILTER (?child = ?shahla || ?child != ?shahla)

  # Step 4: Determine Ram Jaipal Singh Yadav's residence country
  dbr:Ram_Jaipal_Singh_Yadav dbo:nativeCountry ?country .

  # Step 5: Ensure the politician child and their father are native to this country
  ?child dbo:nativeCountry ?country .
  ?spouse dbo:nationality ?nationality ;
          FILTER(?nationality = ?country) .
}
```",6,8,7,3,3,3,3,71,0,0,1,0,0.0,0
987,42,val,"Give me the birth place of the band, that is an artist and a musical artist, of Šako Polumenta and entity in the region, that is a country, of Central European Time and birth place of Moamer Kasumović.",SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. ?v0 <http://dbpedia.org/property/timeZone> <http://dbpedia.org/resource/Central_European_Time> . <http://dbpedia.org/resource/Šako_Polumenta> <http://dbpedia.org/ontology/associatedMusicalArtist> ?v1 . ?v1 <http://dbpedia.org/ontology/birthPlace> ?result . ?result <http://dbpedia.org/ontology/country> ?v0 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. <http://dbpedia.org/resource/Moamer_Kasumović> <http://dbpedia.org/ontology/birthPlace> ?result . },"```sparql
# Step 1: Find the band associated with Šako Polumenta
SELECT ?band WHERE {
  ?person foaf:name ""Šako Polumenta""@en .
  ?person dbo:memberOf ?band .
}

# Step 2: Get birthplaces of members of that band
SELECT DISTINCT ?birthPlace WHERE {
  ?band dbo:member ?member .
  ?member dbo:birthPlace ?birthPlace .
}

# Step 3: Find Moamer Kasumović's birthplace
SELECT ?kasumovicBirthPlace WHERE {
  ?kasumovic foaf:name ""Moamer Kasumović""@en .
  ?kasumovic dbo:birthPlace ?kasumovicBirthPlace .
}

# Step 4: Identify countries in the CET region
SELECT DISTINCT ?country WHERE {
  ?timeZone dcterms:isPartOf ?region .
  ?region rdfs:label ""Central European Time""@en .
  ?country dbo:timeZone ?timeZone .
}

# Step 5: Combine information to find matching birthplace
SELECT DISTINCT ?birthPlace WHERE {
  # Birthplaces of band members
  ?band dbo:member ?member .
  ?member dbo:birthPlace ?birthPlace .

  # Moamer Kasumović's birthplace
  ?kasumovic foaf:name ""Moamer Kasumović""@en .
  ?kasumovic dbo:birthPlace ?kasumovicBirthPlace .

  # Country in CET region
  ?country dbo:timeZone ?timeZone .
  ?timeZone dcterms:isPartOf ?region .
  ?region rdfs:label ""Central European Time""@en .

  # Match birthplace with Moamer Kasumović's and ensure it is in a CET country
  FILTER (?birthPlace = ?kasumovicBirthPlace)
  ?birthPlace dbo:country ?cetCountry .
  FILTER EXISTS { ?cetCountry = ?country }
}
```",5,8,6,2,3,3,3,71,0,0,1,0,0.0,0
573,47,val,"Give me the person decedent at the administration, that is a region, of Charlie Baker and person decedent at the residence, that is a settlement, of the professional, that is American, in Politician.","SELECT ?result WHERE { ?v0 <http://dbpedia.org/ontology/nationality> <http://dbpedia.org/resource/United_States>. ?v0 <http://dbpedia.org/property/occupation> ""Politician""@en . ?v0 <http://dbpedia.org/property/residence> ?v4 . ?v2 <http://dbpedia.org/property/governor> ""Charlie Baker""@en . ?result <http://dbpedia.org/ontology/deathPlace> ?v2 . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. ?result <http://dbpedia.org/ontology/deathPlace> ?v4 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Region>. }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?personInMassachusetts ?personInChicago
WHERE {
  # Find a notable person who died in Massachusetts
  ?personInMassachusetts dbo:deathPlace dbr:Massachusetts .
  
  # Find a notable person who died in Chicago
  ?personInChicago dbo:deathPlace dbr:Chicago .
}
```",5,8,6,3,2,3,3,71,366,1712,34,0.17613089509143406,0.915,0.29539951573849876
554,17,val,"Give me the leader of Portuguese São Tomé and Príncipe and leader of the birth place of the band, that is an artist, of Rita Redshoes.",SELECT ?result WHERE { ?v0 <http://dbpedia.org/ontology/birthPlace> ?v3 . ?v3 <http://dbpedia.org/property/leader> ?result . <http://dbpedia.org/resource/Rita_Redshoes> <http://dbpedia.org/ontology/associatedMusicalArtist> ?v0 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. <http://dbpedia.org/resource/Portuguese_São_Tomé_and_Príncipe> <http://dbpedia.org/property/leader> ?result . },"```sparql
# Leader of São Tomé and Príncipe
SELECT ?leader WHERE {
  wd:Q1108 wdt:P6 ?leader .
}

UNION

# Leader of the birthplace of Rita Redshoes' band's artist
{
  # Find Rita Redshoes' band
  SELECT ?band WHERE {
    wd:Q1066342 wdt:P175 ?band .
  }

  # Identify the lead artist or member of this band
  SELECT ?artist WHERE {
    ?band wdt:P175 ?artist .
  }

  # Determine the birthplace of this artist
  SELECT ?birthPlace WHERE {
    ?artist wdt:P19 ?birthPlace .
  }

  # Find the current leader of that country
  SELECT ?leader WHERE {
    ?birthPlace wdt:P31/wdt:P279* wd:Q6256 ; # Ensure it's a country
    wdt:P6 ?leader .
  }
}
```",4,5,5,3,2,3,2,20,0,0,1,0,0.0,0
955,15,val,"Give me the band of the writer of the work, that is a work and an album and a musical work, of Matt Freeman and band of Johnny Rioux.",SELECT ?result WHERE { ?v0 <http://dbpedia.org/property/writer> <http://dbpedia.org/resource/Matt_Freeman> . ?v0 <http://dbpedia.org/property/writer> ?v1 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalWork>. ?result <http://dbpedia.org/ontology/bandMember> ?v1 . ?result <http://dbpedia.org/ontology/bandMember> <http://dbpedia.org/resource/Johnny_Rioux> . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Album>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?work ?band WHERE {
  # Find albums or musical works involving Matt Freeman and Johnny Rioux
  ?work dbo:artist dbr:Matt_Freeman .
  ?work dbo:artist dbr:Johnny_Rioux .

  # Identify the band associated with Matt Freeman as a writer
  ?writer dbo:memberOf ?band .
  ?writer foaf:name ""Matt Freeman""^^xsd:string .
  
  # Ensure the work is both an album and a musical work
  ?work rdf:type dbo:Album ;
        rdf:type dbo:MusicalWork .

  FILTER(?band != dbr:The_Luyas) # Exclude Johnny Rioux's band to focus on Matt Freeman's
}
```",4,7,5,3,2,3,2,20,0,0,1,0,0.0,0
987,48,val,"Give me the birth place of the band, that is an artist and a musical artist, of the band, that is an artist, of Dado Polumenta and entity in the region, that is a country, of Central European Time.",SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/birthPlace> ?result . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. ?v0 <http://dbpedia.org/property/timeZone> <http://dbpedia.org/resource/Central_European_Time> . ?v3 <http://dbpedia.org/ontology/associatedMusicalArtist> ?v1 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. ?result <http://dbpedia.org/ontology/country> ?v0 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. <http://dbpedia.org/resource/Dado_Polumenta> <http://dbpedia.org/ontology/associatedMusicalArtist> ?v3 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. },"```sparql
SELECT ?birthPlace WHERE {
  ?band rdf:type dbo:Band .
  ?band foaf:name ""Zabranjeto Pušenje""@en .
  ?member dbo:memberOf ?band ;
          foaf:name ""Dado Pršo""@en .
  ?member dbo:birthPlace ?birthPlace .
}
```",5,9,6,3,2,3,3,71,0,0,2,0,0.0,0
965,55,val,"Give me the parent of the child, that is a royalty, of Prince Louis of Battenberg and spouse of the spouse of Princess Victoria of Hesse and by Rhine and parent of the person born, that is a noble, as Prince George of Battenberg.","SELECT ?result WHERE { ?v0 <http://dbpedia.org/property/birthName> ""Prince George of Battenberg""@en . ?v5 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Prince_Louis_of_Battenberg> . ?result <http://dbpedia.org/ontology/spouse> ?v2 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Noble>. ?v0 <http://dbpedia.org/ontology/parent> ?result . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v5 <http://dbpedia.org/ontology/parent> ?result . <http://dbpedia.org/resource/Princess_Victoria_of_Hesse_and_by_Rhine> <http://dbpedia.org/ontology/spouse> ?v2 . }","```sparql
SELECT ?parent WHERE {
  wd:Q123456 wdt:P40 wd:Q789012 . # Prince George of Battenberg (Prince Louis's child)
  wd:Q789012 wdt:P26 ?spouse .    # Spouse of Prince George
  ?spouse wdt:P22 ?parent .       # Parent of Louise Hay (Spouse of Prince George)
}
```

Note: Replace `wd:Q123456` with the DBpedia identifier for Prince Louis of Battenberg and `wd:Q789012` with the identifier for Prince George of Battenberg. The query assumes that these identifiers are known.",6,8,7,2,3,3,3,71,0,0,1,0,0.0,0
129,19,val,Give me the professional in the mayor of 1999 West Dunbartonshire Council election and associated musical artist of Saba (rapper) and associated musical artist of EarthGang.,SELECT ?result WHERE { <http://dbpedia.org/resource/Saba_(rapper)> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . <http://dbpedia.org/resource/EarthGang> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?result <http://dbpedia.org/property/occupation> ?v2 . <http://dbpedia.org/resource/1999_West_Dunbartonshire_Council_election> <http://dbpedia.org/property/leader> ?v2 . },"```sparql
# Query to find the professional in the 1999 West Dunbartonshire Council election
SELECT ?mayor WHERE {
  ?election dbp:date ""1999"" ;
           dbo:officeHolder ?mayor .
  ?mayor rdf:type dbo:Mayor .
}

UNION

# Query to find associated musical artists of Saba (rapper)
SELECT DISTINCT ?artist WHERE {
  ?saba dbo:associatedMusicalArtist ?artist .
  FILTER EXISTS { ?saba rdfs:label ""Saba (rapper)""@en }
} UNION
{
  ?collab dbo:musicalArtist ?saba ;
          dbo:musicalArtist ?artist .
  FILTER EXISTS { ?saba rdfs:label ""Saba (rapper)""@en }
}

UNION

# Query to find associated musical artists of EarthGang
SELECT DISTINCT ?artist WHERE {
  ?earthgang dbo:associatedMusicalArtist ?artist .
  FILTER EXISTS { ?earthgang rdfs:label ""EarthGang""@en }
} UNION
{
  ?collab dbo:musicalArtist ?earthgang ;
          dbo:musicalArtist ?artist .
  FILTER EXISTS { ?earthgang rdfs:label ""EarthGang""@en }
}
```",4,4,5,2,3,2,3,28,0,0,1,0,0.0,0
98,22,val,Give me the birth place of the person born as Paolo Elito M. Ballesteros IV and region of the time zone of Lopez Jaena.,"SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/timeZone> ?v3 . <http://dbpedia.org/resource/Lopez_Jaena> <http://dbpedia.org/ontology/timeZone> ?v3 . ?v0 <http://dbpedia.org/property/birthName> ""Paolo Elito M. Ballesteros IV""@en . ?v0 <http://dbpedia.org/ontology/birthPlace> ?result . }","```sparql
# Query 1: Birth place of Paolo Elito M. Ballesteros IV
SELECT ?birthPlace WHERE {
  ?person foaf:name ""Paolo Elito M. Ballesteros IV""@en .
  ?person dbo:birthPlace ?birthPlace .
}

# Query 2: Region of the time zone of Lopez Jaena
SELECT DISTINCT ?region WHERE {
  ?location rdfs:label ""Lopez, Jaena""@en .
  ?location geo:timezone ?timeZone .
  ?timeZone dbp:country ?country .
  ?country dbo:administrativeDivision ?region .
}
```",4,4,5,2,2,2,3,28,0,0,2,0,0.0,0
926,51,val,"Give me the child of the father, that is a royalty, of the parent, that is a royalty, of Beyhan Sultan (daughter of Mustafa III) and successor of the child of Ahmed III.",SELECT ?result WHERE { ?v0 <http://dbpedia.org/ontology/child> ?result . ?v3 <http://dbpedia.org/property/father> ?v0 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v4 <http://dbpedia.org/ontology/successor> ?result . <http://dbpedia.org/resource/Beyhan_Sultan_(daughter_of_Mustafa_III)> <http://dbpedia.org/ontology/parent> ?v3 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v4 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Ahmed_III> . },"```sparql
# Step 1: Identify Beyhan Sultan's father (Mustafa III)
SELECT ?mustafaIII WHERE {
  wd:Q1234567 wdt:P22 ?mustafaIII .
}

# Step 2: Identify Ahmed III's children and his successor
SELECT ?ahmedIIIChild WHERE {
  wd:Q654321 wdt:P40 ?ahmedIIIChild .
}
SELECT ?successor WHERE {
  ?ahmedIIIChild wdt:P36 wd:Q1234568 . # Assuming Q1234568 is the DBpedia item for Mustafa III
}

# Step 3: Identify Mustafa III's children and find who succeeded Ahmed III's successor
SELECT ?mustafaChild WHERE {
  ?mustafaIII wdt:P40 ?mustafaChild .
}
SELECT ?succeededBy WHERE {
  ?successor wdt:P36 ?succeededBy .
}

# Step 4: Find the child of this individual (who is royalty)
SELECT ?finalChild WHERE {
  ?succeededBy wdt:P40 ?finalChild .
  ?finalChild wdt:P31 wd:Q5 . # Assuming Q5 represents a human
}
```

Note: Replace `wd:Q1234567`, `wd:Q654321`, and `wd:Q1234568` with the actual DBpedia identifiers for Beyhan Sultan, Ahmed III, and Mustafa III respectively. The query assumes that the successor is determined by the `P36` (holds office) property.",5,7,6,3,2,3,3,71,0,0,1,0,0.0,0
892,44,val,"Give me the landmark at elevation of the award of Anna Ishii and entity in the administration, that is Italian and a region and a settlement and an administrative region, of Democratic Party (Italy) and entity in Italy.",SELECT ?result WHERE { <http://dbpedia.org/resource/Anna_Ishii> <http://dbpedia.org/property/awards> ?v4 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Region>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/AdministrativeRegion>. ?result <http://dbpedia.org/ontology/province> ?v0 . ?v0 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Italy>. ?result <http://dbpedia.org/ontology/elevation> ?v4 . ?v0 <http://dbpedia.org/property/leaderParty> <http://dbpedia.org/resource/Democratic_Party_(Italy)> . ?result <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Italy> . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT DISTINCT ?landmark ?elevation ?region WHERE {
  # Find Anna Ishii's award and its elevation
  ?award dbo:recipient dbr:Anna_Ishii .
  ?award dbo:elevation ?elevation .

  # Find landmarks at the same elevation as the award
  ?landmark dbo:elevation ?sameElevation .
  FILTER(?elevation = ?sameElevation)

  # Identify an Italian administrative region or settlement associated with the Democratic Party (Italy)
  ?region a dbo:AdministrativeRegion ;
          dbp:country dbr:Italy ;
          dbo:party dbr:Democratic_Party_(Italy) .

  # Ensure the entity is in Italy
  ?region dbo:location dbr:Italy .
}
```",5,9,6,2,3,3,3,71,0,0,2,0,0.0,0
865,53,val,"Give me the father of the child of Abu Ahmad Abdul Hafiz and father of AK Abdul Momen and native of the residence, that is a country, of the person decedent at Patna.",SELECT ?result WHERE { ?v1 <http://dbpedia.org/property/residence> ?v0 . ?result <http://dbpedia.org/ontology/birthPlace> ?v0 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. ?v2 <http://dbpedia.org/property/father> ?result . ?v1 <http://dbpedia.org/ontology/deathPlace> <http://dbpedia.org/resource/Patna> . ?v2 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Abu_Ahmad_Abdul_Hafiz> . <http://dbpedia.org/resource/AK_Abdul_Momen> <http://dbpedia.org/property/father> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?father ?nativeCountry WHERE {
  # Find Abu Ahmad Abdul Hafiz's child and AK Abdul Momen's father
  ?child dbo:parent dbr:Abu_Ahmad_Abdul_Hafiz .
  ?akChild dbo:parent ?father .
  FILTER (?akChild = dbr:AK_Abdul_Momen) .

  # Find the decedent at Patna and their native country
  ?decedent dbo:deathPlace dbr:Patna .
  ?decedent dbo:nativeCountry ?nativeCountry .

  # Ensure the father's native country matches the decedent's native country
  ?father dbo:nativeCountry ?nativeCountry .
}
```",6,7,7,3,3,3,3,71,0,0,1,0,0.0,0
965,42,val,"Give me the parent of the person born, that is a noble, as Prince George of Battenberg and spouse of the spouse of Princess Victoria of Hesse and by Rhine and parent of Louise Mountbatten.","SELECT ?result WHERE { ?v0 <http://dbpedia.org/property/birthName> ""Prince George of Battenberg""@en . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Noble>. <http://dbpedia.org/resource/Louise_Mountbatten> <http://dbpedia.org/ontology/parent> ?result . ?result <http://dbpedia.org/ontology/spouse> ?v1 . ?v0 <http://dbpedia.org/ontology/parent> ?result . <http://dbpedia.org/resource/Princess_Victoria_of_Hesse_and_by_Rhine> <http://dbpedia.org/ontology/spouse> ?v1 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?parent WHERE {
  # Prince George of Battenberg's parent
  OPTIONAL { 
    dbr:Prince_George_of_Battenberg dbo:parent ?parent .
  }
  
  # Louise Mountbatten's parent
  OPTIONAL {
    dbr:Louise_Mountbatten dbo:parent ?parent .
  }

  FILTER EXISTS { ?parent a dbo:NoblePerson } # Assuming NoblePerson is the class for nobles
}
```",5,6,6,2,3,3,3,71,0,0,1,0,0.0,0
433,44,val,"Give me the associated musical artist of Paul Chambers and associated musical artist of the associated musical artist, that is an artist and a musical artist, of Scott LaFaro and professional in the profession of Bob Marley.",SELECT ?result WHERE { <http://dbpedia.org/resource/Bob_Marley> <http://dbpedia.org/property/occupation> ?v2 . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. <http://dbpedia.org/resource/Scott_LaFaro> <http://dbpedia.org/ontology/associatedMusicalArtist> ?v4 . ?v4 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . <http://dbpedia.org/resource/Paul_Chambers> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?result <http://dbpedia.org/property/occupation> ?v2 . },"```sparql
# Step 1: Find Paul Chambers' associated musical artist
SELECT ?artist WHERE {
  wd:Q123456 wdt:P106 wd:Q33999 . # Paul Chambers is a musician
  wd:Q123456 wdt:P527 ?artist .    # Associated with
}

# Step 2: Find the associated musical artist of the artist found in step 1
SELECT ?secondArtist WHERE {
  ?artist wdt:P106 wd:Q33999 .     # The artist is a musician
  ?artist wdt:P527 ?secondArtist . # Associated with
}

# Step 3: Find Scott LaFaro's associated musical artist
SELECT ?laFaroArtist WHERE {
  wd:Q654321 wdt:P106 wd:Q33999 .   # Scott LaFaro is a musician
  wd:Q654321 wdt:P527 ?laFaroArtist .# Associated with
}

# Step 4: Find professionals in the same profession as Bob Marley (singer-songwriter)
SELECT ?profession WHERE {
  wd:Q567890 wdt:P106 wd:Q33999 .   # Bob Marley is a musician
  wd:Q567890 wdt:P106/wdt:P279* ?profession . # Profession of singer-songwriter
}

# Step 5: Combine results to find the final artist
SELECT DISTINCT ?finalArtist WHERE {
  ?secondArtist wdt:P106 ?profession . # The second artist is a musician and matches the profession
  FILTER(?profession IN (wd:Q33999, wd:Q123456)) # Ensure it's a singer-songwriter
}
```

Note: Replace `wd:Q123456`, `wd:Q654321`, and `wd:Q567890` with the actual DBpedia QIDs for Paul Chambers, Scott LaFaro, and Bob Marley respectively. The query assumes that the associated artists can be found using the property `P527` (part of) or similar properties indicating collaboration.",5,7,6,2,3,3,3,71,0,0,1,0,0.0,0
987,41,val,"Give me the birth place of the actor of All for Free and entity in Montenegro and birth place of the band, that is an artist and a musical artist, of Šako Polumenta.",SELECT ?result WHERE { ?v4 <http://dbpedia.org/ontology/birthPlace> ?result . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. <http://dbpedia.org/resource/Šako_Polumenta> <http://dbpedia.org/ontology/associatedMusicalArtist> ?v2 . ?v2 <http://dbpedia.org/ontology/birthPlace> ?result . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?result <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Montenegro> . <http://dbpedia.org/resource/All_for_Free> <http://dbpedia.org/property/starring> ?v4 . },"```sparql
# Query for the actor of ""All for Free"" who is an entity in Montenegro
SELECT ?actor ?birthPlace WHERE {
  ?movie dbo:title ""All for Free""@en .
  ?movie dbo:starring ?actor .
  ?actor dbo:nationality dbr:Montenegro .
  ?actor dbo:birthPlace ?birthPlace .
}

# Query for the band of Šako Polumenta
SELECT ?band ?bandBirthPlace WHERE {
  ?person foaf:name ""Šako Polumenta""@en .
  ?person dbo:musicalArtist ?band .
  ?band a dbo:Band ;
        dbo:member ?person .
  OPTIONAL { ?band dbo:birthPlace ?bandBirthPlace }
}
```",5,7,6,2,3,3,3,71,0,0,1,0,0.0,0
445,54,val,"Give me the entity in the residence, that is a country, of Anna Sharkey and entity in United Kingdom and death place of the awardee of the establishment of 1820-03-10.","SELECT ?result WHERE { ?v5 <http://dbpedia.org/property/awards> ?v0 . ?result <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/United_Kingdom> . ?result <http://dbpedia.org/ontology/location> ?v3 . ?v5 <http://dbpedia.org/ontology/deathPlace> ?result . <http://dbpedia.org/resource/Anna_Sharkey> <http://dbpedia.org/property/residence> ?v3 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. ?v0 <http://dbpedia.org/ontology/foundingDate> ""1820-03-10""^^<http://www.w3.org/2001/XMLSchema#date> . }","```sparql
# Part 1: Anna Sharkey's Residence
SELECT ?residence WHERE {
    wd:Q123456 rdfs:label ""Anna Sharkey""@en. # Replace Q123456 with the actual DBpedia ID for Anna Sharkey
    ?residence dbo:resident wd:Q123456.
    FILTER (isBlank(?residence) || (wdt:P31/* wdt:P279* wd:Q6256)) # Check if residence is a country
}

UNION

# Part 2: Entity in the United Kingdom
SELECT ?entity WHERE {
    ?entity dbo:country wd:Q145. # Q145 is the DBpedia ID for the United Kingdom
}

UNION

# Part 3: Death Place of an Awardee from Establishment on 1820-03-10
SELECT ?deathPlace WHERE {
    ?establishment dbo:foundingDate ""1820-03-10""^^xsd:date.
    ?award dbo:awardedBy ?establishment.
    ?recipient dbo:receivedAward ?award.
    ?recipient dbo:deathPlace ?deathPlace.
}
```",6,7,7,3,3,3,3,71,0,0,1,0,0.0,0
892,55,val,"Give me the entity in the profession of Henri Crolla and entity in the administration, that is Italian and a region and a settlement and an administrative region, of Democratic Party (Italy) and landmark at elevation of the award of Anna Ishii.",SELECT ?result WHERE { <http://dbpedia.org/resource/Anna_Ishii> <http://dbpedia.org/property/awards> ?v5 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Region>. ?v0 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Italy>. ?result <http://dbpedia.org/ontology/country> ?v2 . ?result <http://dbpedia.org/ontology/province> ?v0 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. <http://dbpedia.org/resource/Henri_Crolla> <http://dbpedia.org/property/occupation> ?v2 . ?v0 <http://dbpedia.org/property/leaderParty> <http://dbpedia.org/resource/Democratic_Party_(Italy)> . ?result <http://dbpedia.org/ontology/elevation> ?v5 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/AdministrativeRegion>. },"```sparql
# Query for Henri Crolla's profession
SELECT ?profession WHERE {
  dbpedia:Henri_Crolla dbo:occupation ?profession .
}

# Query for Italian entity in administration related to Democratic Party (Italy)
SELECT DISTINCT ?entity WHERE {
  ?entity a dbo:Region ;
         dbo:country dbr:Italy ;
         dbo:governingParty dbr:Democratic_Party_(Italy) .
  OPTIONAL { ?entity a dbo:Settlement . }
  OPTIONAL { ?entity a dbo:AdministrativeRegion . }
}

# Query for elevation of Anna Ishii's award
SELECT DISTINCT ?elevation WHERE {
  ?award dbo:recipient dbr:Anna_Ishii ;
         dbo:elevation ?elevation .
}

# Query for landmark at the same elevation as Anna Ishii's award
SELECT DISTINCT ?landmark WHERE {
  ?landmark dbo:elevation ?elevation .
  FILTER EXISTS { 
    SELECT ?elevation WHERE {
      ?award dbo:recipient dbr:Anna_Ishii ;
             dbo:elevation ?elevation .
    }
  }
}
```",6,10,7,2,3,3,3,71,0,0,2,0,0.0,0
41,22,val,"Give me the party of the person born as David Declan Costello and party of the leader, that is a politician and an office holder, of 2005 Castlereagh Borough Council election.","SELECT ?result WHERE { ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v3 <http://dbpedia.org/ontology/party> ?result . ?v0 <http://dbpedia.org/ontology/party> ?result . <http://dbpedia.org/resource/2005_Castlereagh_Borough_Council_election> <http://dbpedia.org/property/leader> ?v3 . ?v0 <http://dbpedia.org/property/birthName> ""David Declan Costello""@en . }","```sparql
# Query to find the political party of David Declan Costello
SELECT ?party WHERE {
  ?person foaf:name ""David Declan Costello""@en .
  OPTIONAL { ?person dbo:party ?party . }
}

UNION

# Query to find the leader and their party in the 2005 Castlereagh Borough Council election
SELECT DISTINCT ?leaderParty WHERE {
  ?election dbo:electionDate ?date .
  FILTER (YEAR(?date) = 2005 && STRSTARTS(STR(?election), ""Castlereagh Borough Council""))
  
  ?officeHolder dbo:positionTitle ?title .
  ?officeHolder dbo:memberOf ?council .
  ?council dbo:electedDuring ?election .
  
  OPTIONAL { ?officeHolder dbo:party ?leaderParty . }
}
```",4,6,5,2,2,2,3,28,0,0,1,0,0.0,0
98,23,val,"Give me the region of the time zone of Lopez Jaena and entity in the region, that is a country, of Philippine Standard Time.",SELECT ?result WHERE { ?v1 <http://dbpedia.org/property/timeZone> <http://dbpedia.org/resource/Philippine_Standard_Time> . ?result <http://dbpedia.org/ontology/timeZone> ?v3 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. <http://dbpedia.org/resource/Lopez_Jaena> <http://dbpedia.org/ontology/timeZone> ?v3 . ?result <http://dbpedia.org/ontology/country> ?v1 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?region ?country WHERE {
  # Find the time zone for Lopez Jaena (Asia/Manila)
  ?place dbo:timeZone dbr:Time_in_the_Philippines .
  
  # Ensure it's Philippine Standard Time
  FILTER(CONTAINS(LCASE(STR(?place)), ""lopez jaena""))

  # Get the region of this time zone
  ?place dbo:location dbr:Philippines ;
         dbo:administrativeTerritoryRegion ?region .

  # Find a country in that region
  ?country dbo:locatedIn ?region .
  FILTER (STRSTARTS(STR(?country), ""http://dbpedia.org/resource/""))
}
```",4,5,5,2,2,2,3,28,0,0,1743,0,0.0,0
170,20,val,Give me the domain of Mayor and entity in Russia and birth place of the awardee of People's Artist of Russia.,"SELECT ?result WHERE { ?v3 <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/People's_Artist_of_Russia> . ?result <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Russia> . ?result <http://dbpedia.org/ontology/leaderTitle> ""Mayor""@en . ?v3 <http://dbpedia.org/ontology/birthPlace> ?result . }","```sparql
# Query for mayors in Russian cities
SELECT ?mayor ?city WHERE {
  ?mayor a dbo:Mayor .
  ?mayor dbo:country dbr:Russia .
  ?mayor dbo:officeLocation ?city .
}

UNION

# Query for birthplaces of awardees of People's Artist of Russia
SELECT ?person ?birthPlace WHERE {
  ?person dbo:title ""People's Artist of Russia""@en .
  ?person dbo:birthPlace ?birthPlace .
}
```",4,4,5,2,3,2,3,28,0,0,3,0,0.0,0
645,51,val,"Give me the military force of the force, that is an event and a military conflict and a societal event, of Francisco Largo Caballero and leader of the office, that is a government agency and an organisation, of the native of Restoration (Spain).",SELECT ?result WHERE { ?v4 <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Francisco_Largo_Caballero> . ?v2 <http://dbpedia.org/ontology/leader> ?result . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?result <http://dbpedia.org/ontology/battle> ?v4 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/GovernmentAgency>. ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?v1 <http://dbpedia.org/property/office> ?v2 . ?v1 <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Restoration_(Spain)> . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?militaryForce WHERE {
  ?event a dbo:MilitaryConflict ;
        dbo:participatingMilitaryUnit ?militaryForce .
  
  ?militaryForce dbo:leader dbr:Fran%C3%A7ois_Largo_Caballero .

  ?office dbo:head dbr:Fran%C3%A7ois_Largo_Caballero ;
          a (dbo:GovernmentAgency | dbo:Organization) .

  ?person dbo:nativePlace dbr:Restoration_(Spain) .
  
  FILTER EXISTS { ?event dbo:societalEvent true }
}
```",5,10,6,3,2,3,3,71,0,0,2,0,0.0,0
365,17,val,"Give me the person born as Symon Vasylyovych Petliura and spouse of the native, that is a politician, of the reference to Полтавская губерния.","SELECT ?result WHERE { ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v3 <http://dbpedia.org/ontology/spouse> ?result . ?v0 <http://xmlns.com/foaf/0.1/name> ""Полтавская губерния""@en . ?v3 <http://dbpedia.org/ontology/birthPlace> ?v0 . ?result <http://dbpedia.org/property/birthName> ""Symon Vasylyovych Petliura""@en . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?spouse ?politician WHERE {
  # Find the spouse of Symon Vasylyovych Petliura
  dbr:Symon_Petliura dbo:spouse ?spouse .

  # Check if this spouse is a politician and has a connection to Полтавская губерния
  OPTIONAL { ?spouse dbo:nationality dbr:Ukraine . }
  OPTIONAL { ?spouse dbo:birthPlace dbr:Poltava_Governorate . }
  OPTIONAL { ?spouse dbo:occupation dbr:Politician . }

  # Ensure the spouse is a politician and has a connection to Полтавская губерния
  FILTER (?politician = ?spouse)
}
```",4,5,5,3,2,3,2,20,0,0,1,0,0.0,0
274,20,val,Give me the professional in the designer of Tetris Classic and band member of Dizzy Gillespie and associated musical artist of Cecil Taylor.,SELECT ?result WHERE { ?result <http://dbpedia.org/property/occupation> ?v3 . <http://dbpedia.org/resource/Cecil_Taylor> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?result <http://dbpedia.org/ontology/associatedMusicalArtist> <http://dbpedia.org/resource/Dizzy_Gillespie> . <http://dbpedia.org/resource/Tetris_Classic> <http://dbpedia.org/property/designer> ?v3 . },"```sparql
SELECT ?person WHERE {
  # Find person associated with Dizzy Gillespie
  ?gillespieBand a dbo:MusicalGroup ;
                 dbo:musicalArtist ?person .
  FILTER EXISTS { ?gillespieBand dbo:memberOf ?dizzyGillespie } .

  # Find person associated with Cecil Taylor
  ?cecilTaylorAlbum a dbo:MusicAlbum ;
                   dbo:artist ?person .
  FILTER EXISTS { ?cecilTaylorAlbum dbo:associatedMusicalArtist ?cecilTaylor } .

  # Check if the same person is involved in both contexts
}
```",4,4,5,2,3,2,3,28,0,0,1,0,0.0,0
216,47,val,"Give me the player in the coach of Croatia national under-21 football team and player in the coach, that is a soccer player and a sports manager and a soccer manager, of the player, that is an organisation and a sports club and a soccer club, in Džemal Berberović.",SELECT ?result WHERE { <http://dbpedia.org/resource/Croatia_national_under-21_football_team> <http://dbpedia.org/ontology/coach> ?v2 . ?v4 <http://dbpedia.org/ontology/team> ?result . ?v0 <http://dbpedia.org/ontology/coach> ?v4 . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerPlayer>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerClub>. ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerManager>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsClub>. ?v2 <http://dbpedia.org/ontology/team> ?result . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsManager>. <http://dbpedia.org/resource/Džemal_Berberović> <http://dbpedia.org/ontology/team> ?v0 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?playerRole ?managerRole ?organization WHERE {
  # Džemal Berberović's role as a coach of the Croatia national under-21 football team
  dbr:Džemal_Berberović dbo:coach dbr:Croatia_national_under-21_football_team .

  # Check if he is also a soccer player and sports manager
  OPTIONAL { dbr:Džemal_Berberović dbo:sport dbr:Soccer . }
  OPTIONAL { dbr:Džemal_Berberović dbo:occupation dbr:Sports_manager . }

  # Identify the club or organization he manages
  ?organization a dbo:SportsClub ;
                dbo:sport dbr:Soccer ;
                dbo:manager dbr:Džemal_Berberović .

  BIND(""Coach of Croatia national under-21 football team"" AS ?playerRole)
  BIND(""Soccer player and Sports manager"" AS ?managerRole)
}
```",5,11,6,3,2,3,3,71,0,0,3,0,0.0,0
933,55,val,"Give me the reference to the birth name of Alan Warner (musician) and band of the band of Alan Warner (musician) and band of the band, that is a group and a band and an organisation, of Alan Warner (musician).",SELECT ?result WHERE { ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?result <http://xmlns.com/foaf/0.1/name> ?v5 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Group>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Band>. <http://dbpedia.org/resource/Alan_Warner_(musician)> <http://dbpedia.org/ontology/associatedMusicalArtist> ?v2 . ?v0 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . <http://dbpedia.org/resource/Alan_Warner_(musician)> <http://dbpedia.org/ontology/associatedMusicalArtist> ?v0 . ?v2 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . <http://dbpedia.org/resource/Alan_Warner_(musician)> <http://dbpedia.org/property/birthName> ?v5 . },"```sparql
PREFIX foaf: <http://xmlns.com/foaf/0.1/>
PREFIX dbo: <http://dbpedia.org/ontology/>

SELECT ?birthName ?band WHERE {
  ?person a dbo:Musician ;
          foaf:name ""Alan Warner"" ;
          foaf:givenName ?givenName ;
          foaf:familyName ?familyName .
  
  BIND(CONCAT(?givenName, "" "", ?familyName) AS ?birthName)
  
  OPTIONAL { 
    ?person dbo:musicalArtist ?band .
  }
  
  FILTER(CONTAINS(LCASE(STR(?person)), ""alan warner""))
}
```",6,9,7,2,3,3,3,71,0,0,1,0,0.0,0
124,48,val,"Give me the military force of the force, that is a societal event and a military conflict, of Herbert Kitchener, 1st Earl Kitchener and commander in the war, that is a societal event and a military conflict, of the reference, that is Australian and an organisation and a military unit, to 'A' Battery, Royal Australian Artillery.","SELECT ?result WHERE { ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v3 <http://dbpedia.org/ontology/battle> ?v2 . ?v3 <http://xmlns.com/foaf/0.1/name> ""'A' Battery, Royal Australian Artillery""@en . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v1 <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Herbert_Kitchener,_1st_Earl_Kitchener> . ?v2 <http://dbpedia.org/ontology/commander> ?result . ?result <http://dbpedia.org/ontology/battle> ?v1 . ?v3 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Australia>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryUnit>. }","```sparql
SELECT ?militaryForce WHERE {
  ?kitchener dbo:occupation dbr:Military_person ;
             foaf:name ""Herbert Kitchener""@en .
  
  ?worldWar1 dbo:commander ?kitchener ;
             rdf:type dbo:Military_conflict .

  ?australianUnit dbo:participatedIn ?worldWar1 ;
                  dbo:military_unit dbr:A_Battery,_Royal_Australian_Artillery ;
                  dbo:nationality dbr:Australia .

  ?britishArmy dbo:commander ?kitchener ;
               rdf:type dbo:Military_force .
  
  BIND(?britishArmy AS ?militaryForce)
}
```",5,12,6,3,2,3,3,71,0,0,9,0,0.0,0
170,19,val,Give me the domain of Mayor and entity in the work of International Energy Agency and birth place of Era Ziganshina.,"SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/leaderTitle> ""Mayor""@en . <http://dbpedia.org/resource/Era_Ziganshina> <http://dbpedia.org/ontology/birthPlace> ?result . ?result <http://dbpedia.org/ontology/country> ?v2 . ?v2 <http://dbpedia.org/property/author> <http://dbpedia.org/resource/International_Energy_Agency> . }","```sparql
# Query 1: Domain of Mayor and entity in the work of International Energy Agency
SELECT ?entity ?mayor WHERE {
  ?entity wdt:P31 wd:Q515; # Instance of an organization or city
          wdt:P463 wd:Q11173. # Part of the International Energy Agency (IEA)
  OPTIONAL { 
    ?mayor dbo:positionTitle ""Mayor""@en;
           dbo:officeHolder ?entity.
  }
}

# Query 2: Birthplace of Era Ziganshina
SELECT ?birthPlace WHERE {
  ?person foaf:name ""Era Ziganshina""@en;
          dbo:birthPlace ?birthPlace.
}
```",4,4,5,2,3,2,3,28,0,0,1,0,0.0,0
465,51,val,"Give me the successor of the child, that is a royalty, of the parent of Charles Orlando, Dauphin of France and spouse of the child, that is a royalty, of Ferdinand I, Holy Roman Emperor.","SELECT ?result WHERE { ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. <http://dbpedia.org/resource/Ferdinand_I,_Holy_Roman_Emperor> <http://dbpedia.org/ontology/child> ?v4 . ?v2 <http://dbpedia.org/ontology/successor> ?result . ?result <http://dbpedia.org/ontology/spouse> ?v4 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v1 <http://dbpedia.org/ontology/child> ?v2 . <http://dbpedia.org/resource/Charles_Orlando,_Dauphin_of_France> <http://dbpedia.org/ontology/parent> ?v1 . }","```sparql
# Step 1: Find Charles Orlando's parent
SELECT ?parent WHERE {
    wd:Q123456 dbo:child wd:Charles_Orlando_Dauphin_of_France .
}

# Step 2: Find the child of that parent who is royalty
SELECT ?royalChild WHERE {
    ?parent dbo:child ?royalChild .
    ?royalChild rdf:type dbo:Monarch .
}

# Step 3: Identify Ferdinand I's royal child
SELECT ?ferdinandChild WHERE {
    wd:Q654321 dbo:child ?ferdinandChild .
    ?ferdinandChild rdf:type dbo:Monarch .
}

# Step 4: Find the spouse of this royal child
SELECT ?spouse WHERE {
    ?ferdinandChild dbo:spouse ?spouse .
}

# Step 5: Determine the successor of this spouse
SELECT ?successor WHERE {
    ?spouse dbo:succesor ?successor .
}
```

Note: Replace `wd:Q123456` with the actual DBpedia ID for Charles Orlando, Dauphin of France, and `wd:Q654321` with the ID for Ferdinand I, Holy Roman Emperor. The exact property names like `dbo:succesor` might need to be adjusted based on available properties in DBpedia.",5,7,6,3,2,3,3,71,0,0,1,0,0.0,0
267,16,val,"Give me the coach of the player, that is a soccer club, in Rasoul Khatibi and person born on the birth date of Dan Cathy.",SELECT ?result WHERE { ?v2 <http://dbpedia.org/ontology/coach> ?result . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerClub>. <http://dbpedia.org/resource/Rasoul_Khatibi> <http://dbpedia.org/ontology/team> ?v2 . ?result <http://dbpedia.org/ontology/birthDate> ?v3 . <http://dbpedia.org/resource/Dan_Cathy> <http://dbpedia.org/ontology/birthDate> ?v3 . },"```sparql
# Step 1: Find Rasoul Khatibi's association with a soccer club
SELECT ?club WHERE {
  dbpedia:Rasoul_Khatibi dbo:playsFor ?player .
  ?player dbo:team ?club .
}

# Step 2: Get Dan Cathy's birth date
SELECT ?birthDate WHERE {
  dbpedia:Dan_Cathy dbo:birthday ?birthDate .
}

# Step 3: Find person born on the same date as Dan Cathy
SELECT DISTINCT ?person WHERE {
  ?person dbo:birthday ?birthDate .
  FILTER(?birthDate = <URI_of_Dan_Cathys_birth_date>)
}

# Step 4: Determine the coach of Rasoul Khatibi's club
SELECT ?coach WHERE {
  ?club dbo:coach ?coach .
}
```

Note: Replace `<URI_of_Dan_Cathys_birth_date>` with the actual URI or literal value obtained from Step 2.",4,5,5,2,2,3,2,20,0,0,1,0,0.0,0
715,46,val,"Give me the commander in the force of Francisco Largo Caballero and commander in the force, that is a military conflict, of the native of Morocco.",SELECT ?result WHERE { ?v4 <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Francisco_Largo_Caballero> . ?v1 <http://dbpedia.org/ontology/commander> ?result . ?v4 <http://dbpedia.org/ontology/commander> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v1 <http://dbpedia.org/ontology/commander> ?v2 . ?v2 <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Morocco> . },"```sparql
SELECT ?commander1 ?commander2 WHERE {
  # Commander associated with Francisco Largo Caballero
  ?person dbo:spouse dbr:Franco_Largo_Caballero .
  ?person dbo:occupation dbr:Military_officer .
  ?person rdfs:label ?commander1 FILTER (lang(?commander1) = ""en"") .

  # Commander in a military conflict involving a native of Morocco
  ?conflict dbo:location dbr:Morocco .
  ?conflict dbo:opposingCommander ?commander2 .
  ?commander2 rdfs:label ?commanderLabel FILTER (lang(?commanderLabel) = ""en"") .

  # Example for Rif War involving Abd el-Krim
  OPTIONAL {
    ?conflict dbr:Rif_War .
    ?conflict dbo:opposingCommander dbr:Manuel_Fernández_Silvestre .
  }
}
```",5,6,6,3,2,3,3,71,0,0,4,0,0.0,0
573,48,val,"Give me the parent of the author, that is a politician and an office holder, of Exchequer Standards and person decedent at the administration, that is a region, of the real name of Charlie Baker (Australian footballer).",SELECT ?result WHERE { <http://dbpedia.org/resource/Charlie_Baker_(Australian_footballer)> <http://xmlns.com/foaf/0.1/name> ?v3 . ?result <http://dbpedia.org/ontology/deathPlace> ?v2 . ?v1 <http://dbpedia.org/ontology/parent> ?result . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Region>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. <http://dbpedia.org/resource/Exchequer_Standards> <http://dbpedia.org/property/author> ?v1 . ?v2 <http://dbpedia.org/property/governor> ?v3 . },"```sparql
# Step 1: Find Charlie Baker (Australian footballer) real name
SELECT ?charlieBakerRealName WHERE {
  ?charlieBaker dbo:wikiPageID ""Charlie_Baker_(Australian_footballer)"" .
  ?charlieBaker foaf:name ?realName .
  BIND(IRI(CONCAT(""http://dbpedia.org/resource/"", REPLACE(LCASE(?realName), "" "", ""_""))) AS ?charlieBakerRealName)
}

# Step 2: Find the administration (region) associated with Charlie Baker
SELECT ?administration WHERE {
  ?charlieBaker dbo:deathPlace ?administration .
  FILTER(STRSTARTS(STR(?charlieBaker), STR(?charlieBakerRealName)))
}

# Step 3: Find the author of ""Exchequer Standards""
SELECT ?author WHERE {
  ?work dcterms:title ""Exchequer Standards"" .
  ?work dbo:author ?author .
}

# Step 4: Find the parent of this author who is a politician and an office holder
SELECT DISTINCT ?parent WHERE {
  ?author dbo:birthParent ?parent .
  ?parent dbo:occupation dbp:Politician ;
          dbo:officeHolder ?office .
}
```",5,8,6,3,2,3,3,71,0,0,2,0,0.0,0
508,16,val,"Give me the birthplace of the commander, that is Saudi, in Central Plains War and birthplace of the commander, that is a politician, in 1939–1940 Winter Offensive.",SELECT ?result WHERE { ?v3 <http://dbpedia.org/ontology/birthPlace> ?result . ?v3 <http://dbpedia.org/ontology/nationality> <http://dbpedia.org/resource/Saudi_Arabia>. <http://dbpedia.org/resource/Central_Plains_War> <http://dbpedia.org/ontology/commander> ?v3 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. <http://dbpedia.org/resource/1939–1940_Winter_Offensive> <http://dbpedia.org/ontology/commander> ?v2 . ?v2 <http://dbpedia.org/ontology/birthPlace> ?result . },"```sparql
# Query for the birthplace of the Saudi commander in the Central Plains War
SELECT ?birthPlace WHERE {
  ?person dbo:nationality dbr:Saudi_Arabia .
  ?person dbo:occupation dbr:Military_commander .
  ?person dbo:participatedIn dbr:Central_Plains_War .
  ?person dbp:birthPlace ?birthPlace .
}

UNION

# Query for the birthplace of the politician commander in the 1939–1940 Winter Offensive
SELECT ?birthPlace WHERE {
  ?person dbo:nationality dbr:Soviet_Union .
  ?person dbo:occupation dbr:Military_commander ;
          dbo:occupation dbr:Politician .
  ?person dbo:participatedIn dbr:Winter_Offensive_(1939–1940) .
  ?person dbp:birthPlace ?birthPlace .
}
```",4,6,5,2,2,3,2,20,0,0,3,0,0.0,0
645,40,val,Give me the commander in the force of the commander in Siege of Madrid and military force of Spanish Civil War and leader of Ministry of the Army (Spain).,SELECT ?result WHERE { <http://dbpedia.org/resource/Siege_of_Madrid> <http://dbpedia.org/ontology/commander> ?v2 . ?v1 <http://dbpedia.org/ontology/commander> ?v2 . ?result <http://dbpedia.org/ontology/battle> <http://dbpedia.org/resource/Spanish_Civil_War> . <http://dbpedia.org/resource/Ministry_of_the_Army_(Spain)> <http://dbpedia.org/ontology/leader> ?result . ?v1 <http://dbpedia.org/ontology/commander> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?person WHERE {
  ?person a dbo:MilitaryPerson .
  ?person dbo:commanderOf ?siegeEvent .
  ?siegeEvent rdfs:label ""Siege of Madrid""@en .
  
  ?person dbo:militaryConflict ?civilWar .
  ?civilWar rdfs:label ""Spanish Civil War""@en .

  ?person dbo:minister ?ministryRole .
  ?ministryRole dbo:officeName ""Ministry of the Army (Spain)""@en .
}
```",5,5,6,3,3,3,3,71,0,0,1,0,0.0,0
122,7,val,Give me the band of Gift of Gab (rapper) and band member of the band of Gift of Gab (rapper).,SELECT ?result WHERE { <http://dbpedia.org/resource/Gift_of_Gab_(rapper)> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . <http://dbpedia.org/resource/Gift_of_Gab_(rapper)> <http://dbpedia.org/ontology/associatedMusicalArtist> ?v0 . ?result <http://dbpedia.org/ontology/associatedMusicalArtist> ?v0 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?bandLabel ?memberLabel WHERE {
  ?giftOfGab a dbo:MusicalArtist ;
             foaf:name ""Gift of Gab""@en .
  
  ?giftOfGab dbo:band ?band .

  ?band rdfs:label ?bandLabel .
  FILTER (lang(?bandLabel) = 'en')

  OPTIONAL { 
    ?member dbo:band ?band ;
            foaf:name ?memberLabel .
    FILTER (lang(?memberLabel) = 'en')
  }
}
```",3,3,4,2,2,2,2,9,0,0,3,0,0.0,0
18,21,val,"Give me the parent of Liza Huber and professional in  and alumnus of the figure known, that is an educational institution, as Saints.","SELECT ?result WHERE { ?result <http://dbpedia.org/property/occupation> """"@en . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/EducationalInstitution>. ?v1 <http://dbpedia.org/property/nickname> ""Saints""@en . ?result <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Liza_Huber> . ?result <http://dbpedia.org/ontology/almaMater> ?v1 . }","```sparql
# Step 1: Find Liza Huber's parent
SELECT ?parent WHERE {
  dbpedia:Liza_Huber dbo:parent ?parent .
}

# Assuming we identify a parent (e.g., ?parent), proceed to find their profession

# Step 2: Determine the professional field of the identified parent
SELECT ?profession WHERE {
  ?parent dbo:occupation ?profession .
}

# Assuming we have identified the profession, proceed to find an educational institution known as ""Saints""

# Step 3: Identify the educational institution known as ""Saints""
SELECT ?institution WHERE {
  ?institution rdfs:label ?label .
  FILTER(CONTAINS(LCASE(?label), ""saints""))
}

# Assuming we have identified the institution (e.g., ?institution), proceed to find alumni

# Step 4: Find alumni from this institution who are professionals in the same field
SELECT DISTINCT ?alumnus WHERE {
  ?alumnus dbo:almaMater ?institution .
  ?alumnus dbo:occupation ?profession .
  FILTER(?profession = <identified_profession_uri>) # Replace with actual URI of identified profession
}
```",4,5,5,2,3,2,3,28,0,0,1,0,0.0,0
917,46,val,"Give me the parent of the child, that is a royalty, of the mayor of Hawaiian Kingdom and child of the father of Keʻelikōlani.",SELECT ?result WHERE { <http://dbpedia.org/resource/Keʻelikōlani> <http://dbpedia.org/property/father> ?v3 . ?v0 <http://dbpedia.org/property/father> ?v2 . ?result <http://dbpedia.org/ontology/child> ?v0 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?result <http://dbpedia.org/ontology/parent> ?v3 . <http://dbpedia.org/resource/Hawaiian_Kingdom> <http://dbpedia.org/property/leader> ?v2 . },"```sparql
SELECT DISTINCT ?mayor ?royalChild ?fatherOfKeelikolani ?parentOfRoyalChild WHERE {
  # Step 1: Identify a mayor of the Hawaiian Kingdom
  ?mayor dbo:positionTitle ""Mayor""@en .
  ?mayor dbo:country dbr:Hawaiian_Kingdom .

  # Step 2: Find children of the mayor who are royalty
  ?royalChild dbo:parent ?mayor ;
              dbo:occupation dbr:Royalty .

  # Step 3: Identify the father of Keʻelikōlani (Queen Kaʻahumanu)
  ?keelikolani dbo:mother dbr:Kaahumanu .
  ?fatherOfKeelikolani dbo:child ?keelikolani .

  # Step 4: Find the parent of the royal child
  ?parentOfRoyalChild dbo:child ?royalChild .
}
```",5,6,6,3,2,3,3,71,0,0,2,0,0.0,0
826,42,val,"Give me the spouse of the child of Johann Heinrich Appel and predecessor of the parent of Prince Friedrich of Hesse and by Rhine and successor of Louis II, Grand Duke of Hesse.","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/successor> ?v1 . <http://dbpedia.org/resource/Prince_Friedrich_of_Hesse_and_by_Rhine> <http://dbpedia.org/ontology/parent> ?v1 . <http://dbpedia.org/resource/Louis_II,_Grand_Duke_of_Hesse> <http://dbpedia.org/ontology/successor> ?result . ?v2 <http://dbpedia.org/property/father> ""Johann Heinrich Appel""@en . ?v2 <http://dbpedia.org/ontology/spouse> ?result . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?spouse WHERE {
  # Step 1: Identify Johann Heinrich Appel's child
  ?child dbo:parent dbr:Johann_Heinrich_Appel .
  
  # Step 2: Find the spouse of that child
  ?child dbo:spouse ?spouse .

  # Step 3: Identify Prince Friedrich of Hesse and by Rhine's parent
  ?friedrichParent dbo:child dbr:Prince_Friedrich_of_Hesse_and_by_Rhine .
  
  # Step 4: Predecessor of that parent
  ?predecessor dbo:succeededBy ?friedrichParent .

  # Step 5: Louis II, Grand Duke of Hesse's successor
  ?successor dbo:predecessor dbr:Louis_II,_Grand_Duke_of_Hesse .
  
  # Combine these elements
  FILTER (?spouse = ?predecessor && ?spouse = ?successor)
}
```",5,5,6,2,3,3,3,71,0,0,1,0,0.0,0
892,46,val,Give me the landmark at elevation of the award of Anna Ishii and entity in the profession of the true self of Enrico Crolla.,"SELECT ?result WHERE { ?v2 <http://xmlns.com/foaf/0.1/givenName> ""Enrico Crolla""@en . <http://dbpedia.org/resource/Anna_Ishii> <http://dbpedia.org/property/awards> ?v3 . ?result <http://dbpedia.org/ontology/country> ?v0 . ?result <http://dbpedia.org/ontology/elevation> ?v3 . ?v2 <http://dbpedia.org/property/occupation> ?v0 . }","```sparql
# Query to find Anna Ishii's award and its elevation
SELECT ?award ?elevation WHERE {
  ?person foaf:name ""Anna Ishii""@en .
  ?person dbo:award ?award .
  OPTIONAL { ?award dbo:elevation ?elevation . }
}

UNION

# Find a landmark at the same elevation as Anna Ishii's award
SELECT DISTINCT ?landmark WHERE {
  ?landmark dbo:elevation ?elevation .
  FILTER EXISTS {
    SELECT ?award ?elevation2 WHERE {
      ?person foaf:name ""Anna Ishii""@en .
      ?person dbo:award ?award .
      OPTIONAL { ?award dbo:elevation ?elevation2 . }
    } 
    FILTER (?elevation = ?elevation2)
  }
}

UNION

# Query to find Enrico Crolla's profession
SELECT ?profession WHERE {
  ?person foaf:name ""Enrico Crolla""@en .
  ?person dbo:occupation ?profession .
}

UNION

# Find an entity in the same profession as Enrico Crolla
SELECT DISTINCT ?entity WHERE {
  ?entity dbo:occupation ?profession .
  FILTER EXISTS {
    SELECT ?profession2 WHERE {
      ?person foaf:name ""Enrico Crolla""@en .
      ?person dbo:occupation ?profession2 .
    }
    FILTER (?profession = ?profession2)
  }
}
```",5,5,6,3,2,3,3,71,0,0,11,0,0.0,0
124,54,val,"Give me the commander in the war, that is a societal event and a military conflict, of A Field Battery, Royal Australian Artillery and military force of Battle of Atbara and military force of the war, that is an event and a military conflict and a societal event, of the awardee of British South Africa Company Medal.","SELECT ?result WHERE { ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?result <http://dbpedia.org/ontology/battle> ?v5 . ?v0 <http://dbpedia.org/ontology/battle> ?v5 . ?v3 <http://dbpedia.org/ontology/commander> ?result . ?v0 <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/British_South_Africa_Company_Medal> . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?result <http://dbpedia.org/ontology/battle> <http://dbpedia.org/resource/Battle_of_Atbara> . <http://dbpedia.org/resource/A_Field_Battery,_Royal_Australian_Artillery> <http://dbpedia.org/ontology/battle> ?v3 . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?commander WHERE {
  # Find a field battery from the Royal Australian Artillery and its commander in a war
  ?battery dbo:type dbr:Field_Battery ;
           dbo:militaryUnitOf dbr:Royal_Australian_Artillery ;
           dbo:commandedBy ?raaCommander .
  
  ?war dbo:participatingMilitaryUnit ?battery ;
       dbo:eventType dbr:Military_Conflict, dbr:Societal_Event .

  # Find military forces involved in the Battle of Atbara and their commander
  ?atbaraForce dbo:participatedInBattle dbr:Battle_of_Atbara ;
               dbo:commandedBy ?atbaraCommander .
  
  # Check if the commanders are the same
  FILTER (?raaCommander = ?atbaraCommander)

  # Ensure the war is a societal event and military conflict
  ?war dbo:eventType dbr:Military_Conflict, dbr:Societal_Event .

  # Find awardees of the British South Africa Company Medal
  ?medalAwardee dbo:awardedMedal dbr:British_South_Africa_Company_Medal ;
                dbo:participatedInWar ?war .
}
```",6,11,7,3,3,3,3,71,0,0,1,0,0.0,0
124,41,val,"Give me the commander in the war, that is a societal event and a military conflict, of A Field Battery, Royal Australian Artillery and military force of Battle of Atbara and military force of the war, that is an event and a military conflict and a societal event, of Frank Rhodes (British Army officer).","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/battle> ?v4 . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?v2 <http://dbpedia.org/ontology/commander> ?result . <http://dbpedia.org/resource/A_Field_Battery,_Royal_Australian_Artillery> <http://dbpedia.org/ontology/battle> ?v2 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?result <http://dbpedia.org/ontology/battle> <http://dbpedia.org/resource/Battle_of_Atbara> . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. <http://dbpedia.org/resource/Frank_Rhodes_(British_Army_officer)> <http://dbpedia.org/ontology/battle> ?v4 . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?commander WHERE {
  # A Field Battery, Royal Australian Artillery involvement
  ?unit dbo:militaryConflict ?conflict1 .
  FILTER(STRSTARTS(STR(?unit), ""http://dbpedia.org/resource/A_Field_Battery,_Royal_Australian_Artillery""))

  # Battle of Atbara and its military force
  ?battle dbr:Battle_of_Atbara .
  ?battle dbo:participatedInMilitaryForce ?force1 .

  # Frank Rhodes involvement in a war
  ?officer dbr:Frank_Rhodes .
  ?officer dbo:militaryConflict ?conflict2 .

  # Commander of the military force at Battle of Atbara
  ?commander dbo:commanded ?force1 .

  # Commander of A Field Battery, Royal Australian Artillery's conflict
  ?commander dbo:commanded ?unit .

  # Commander in Frank Rhodes' war
  ?commander dbo:militaryConflict ?conflict2 .
}
```",5,10,6,2,3,3,3,71,0,0,1,0,0.0,0
773,43,val,"Give me the spouse of Louis the German and parent of the successor of the child, that is a royalty, of Louis the Pious and parent of Charles the Fat.",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/child> ?v4 . <http://dbpedia.org/resource/Louis_the_German> <http://dbpedia.org/ontology/spouse> ?result . ?v0 <http://dbpedia.org/ontology/successor> ?v4 . <http://dbpedia.org/resource/Louis_the_Pious> <http://dbpedia.org/ontology/child> ?v0 . <http://dbpedia.org/resource/Charles_the_Fat> <http://dbpedia.org/ontology/parent> ?result . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. },"```sparql
# Step 1: Find spouse of Louis the German
SELECT ?spouse WHERE {
  wd:Q12345 wdt:P26 ?spouse .
}

# Step 2: Identify a child of Louis the Pious whose successor is royalty
SELECT DISTINCT ?child ?successor WHERE {
  wd:Q67890 wdt:P40 ?child . # Louis the Pious' children
  ?child wdt:P1368 ?successor . # Successor (royalty)
}

# Step 3: Find parent of Charles the Fat
SELECT ?parent WHERE {
  wd:Q23456 wdt:P22 ?parent .
}

# Step 4: Connect these relationships to find the common individual
SELECT DISTINCT ?individual WHERE {
  # Spouse of Louis the German
  wd:Q12345 wdt:P26 ?individual .

  # Parent of successor of a child of Louis the Pious (who is royalty)
  ?child wdt:P40 ?successor .
  ?successor wdt:P22 ?individual .
  
  # Parent of Charles the Fat
  wd:Q23456 wdt:P22 ?individual .
}
```

Note: Replace `wd:Q12345`, `wd:Q67890`, and `wd:Q23456` with the actual DBpedia identifiers for Louis the German, Louis the Pious, and Charles the Fat respectively.",5,6,6,3,3,3,3,71,0,0,1,0,0.0,0
888,17,val,Give me the awardee of the award of the commander in 2022 Ukrainian eastern counteroffensive and commander in Southern Ukraine campaign.,SELECT ?result WHERE { ?result <http://dbpedia.org/property/awards> ?v3 . <http://dbpedia.org/resource/Southern_Ukraine_campaign> <http://dbpedia.org/ontology/commander> ?result . <http://dbpedia.org/resource/2022_Ukrainian_eastern_counteroffensive> <http://dbpedia.org/ontology/commander> ?v0 . ?v0 <http://dbpedia.org/property/awards> ?v3 . },"```sparql
SELECT ?awardName ?awardee WHERE {
  # Find the award given during the Ukrainian eastern counteroffensive in 2022
  ?award dbo:wikiPageRedirects db:QXXXXX ;  # Replace QXXXXX with the specific DBpedia resource for the award if known
         dbo:dateReceived ""2022""^^xsd:gYear ;
         dbo:recipient ?awardee .
  
  # Find the award given during the Southern Ukraine campaign in 2022
  OPTIONAL {
    ?award2 dbo:wikiPageRedirects db:QYYYYY ;  # Replace QYYYYY with the specific DBpedia resource for the second award if known
           dbo:dateReceived ""2022""^^xsd:gYear ;
           dbo:recipient ?awardee .
  }
  
  FILTER (regex(?awardName, ""Ukrainian eastern counteroffensive"") || regex(?awardName, ""Southern Ukraine campaign""))
}
```

Note: The placeholders `QXXXXX` and `QYYYYY` should be replaced with the actual DBpedia resource identifiers for the specific awards if they are known. If not, additional research may be needed to identify these resources.",4,4,5,3,2,3,2,20,0,0,1,0,0.0,0
839,52,val,"Give me the band of the person born, that is a musical artist, as the persona of Kevin Russell (musician) and band of Matthias Röhr and band of the member of Böhse Onkelz.",SELECT ?result WHERE { ?v2 <http://dbpedia.org/property/birthName> ?v3 . ?v2 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. <http://dbpedia.org/resource/Böhse_Onkelz> <http://dbpedia.org/ontology/bandMember> ?v5 . ?result <http://dbpedia.org/ontology/bandMember> ?v5 . ?result <http://dbpedia.org/ontology/bandMember> <http://dbpedia.org/resource/Matthias_Röhr> . <http://dbpedia.org/resource/Kevin_Russell_(musician)> <http://xmlns.com/foaf/0.1/givenName> ?v3 . },"```sparql
# Query for Kevin Russell (musician)
SELECT ?band WHERE {
  ?person rdfs:label ""Kevin Russell (musician)""@en .
  ?person dbo:associatedBand ?band .
}

UNION

# Query for Matthias Röhr
SELECT ?band WHERE {
  ?person rdfs:label ""Matthias Röhr""@en .
  ?person dbo:associatedBand ?band .
}

UNION

# Query for a member of Böhse Onkelz (e.g., Kevin Russell)
SELECT ?member ?band WHERE {
  ?band rdfs:label ""Böhse Onkelz""@en .
  ?band dbo:member ?member .
  OPTIONAL { ?member dbo:associatedBand ?band2 . FILTER(?band != ?band2) }
}
```",6,7,7,3,3,3,3,71,0,0,1,0,0.0,0
839,41,val,"Give me the band of the person born, that is a musical artist, as Kevin Richard Russell and band of the member of Böhse Onkelz and band of Matthias Röhr.","SELECT ?result WHERE { ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?result <http://dbpedia.org/ontology/bandMember> ?v4 . ?v2 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . <http://dbpedia.org/resource/Böhse_Onkelz> <http://dbpedia.org/ontology/bandMember> ?v4 . ?v2 <http://dbpedia.org/property/birthName> ""Kevin Richard Russell""@en . ?result <http://dbpedia.org/ontology/bandMember> <http://dbpedia.org/resource/Matthias_Röhr> . }","```sparql
# Query to find the band associated with Kip Winger (Kevin Richard Russell)
SELECT ?band WHERE {
  ?person dbo:birthName ""Kevin Richard Russell""@en .
  ?person foaf:name ""Kip Winger""@en .
  ?person dbo:memberOfBand ?band .
}

UNION

# Query to find the band associated with Matthias Röhr
SELECT ?band WHERE {
  ?person foaf:name ""Matthias Röhr""@de .
  ?person dbo:memberOfBand ?band .
  FILTER(CONTAINS(LCASE(STR(?band)), ""böhse onkelz""))
}
```",5,6,6,2,3,3,3,71,0,0,1,0,0.0,0
976,44,val,"Give me the office of the mayor, that is a politician and an office holder and Turkish, of Nation Alliance (Turkey) and office of the person born as Mehmet Naci Bostancı and office of Mustafa Şentop.","SELECT ?result WHERE { ?v4 <http://dbpedia.org/property/office> ?result . ?v0 <http://dbpedia.org/property/birthName> ""Mehmet Naci Bostancı""@en . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v0 <http://dbpedia.org/property/office> ?result . ?v4 <http://dbpedia.org/ontology/nationality> <http://dbpedia.org/resource/Turkey>. <http://dbpedia.org/resource/Nation_Alliance_(Turkey)> <http://dbpedia.org/property/leader> ?v4 . <http://dbpedia.org/resource/Mustafa_Şentop> <http://dbpedia.org/property/office> ?result . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT DISTINCT ?office WHERE {
  # Office of Mehmet Naci Bostancı
  OPTIONAL {
    ?person dbr:Mehmet_Naci_Bostancı .
    ?person dbo:nationality dbr:Turkey ;
            dbo:partyMember dbr:Nation_Alliance_(Turkey) .
    ?person dbo:office ?office .
  }

  # Office of Mustafa Şentop
  OPTIONAL {
    ?person dbr:Mustafa_Şentop .
    ?person dbo:office ?office .
  }

  # Any Turkish politician from Nation Alliance (Turkey)
  OPTIONAL {
    ?person dbo:nationality dbr:Turkey ;
            dbo:partyMember dbr:Nation_Alliance_(Turkey) .
    ?person dbo:office ?office .
  }
}
```",5,8,6,2,3,3,3,71,0,0,1,0,0.0,0
955,16,val,"Give me the band of the band member, that is a musical artist and an artist, of Street Dogs and band of the writer of Don't Forget Your Roots (album).",SELECT ?result WHERE { ?v3 <http://dbpedia.org/ontology/associatedMusicalArtist> <http://dbpedia.org/resource/Street_Dogs> . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?result <http://dbpedia.org/ontology/bandMember> ?v2 . ?result <http://dbpedia.org/ontology/bandMember> ?v3 . <http://dbpedia.org/resource/Don't_Forget_Your_Roots_(album)> <http://dbpedia.org/property/writer> ?v2 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. },"```sparql
# Query to find a member of Street Dogs who is also an artist (visual arts)
SELECT ?bandMember WHERE {
  ?person dbo:memberOfBand dbr:Street_Dogs ;
          dbo:occupation dbr:Musical_artist ;
          dbo:occupation dbr:Artist .
}

# Query to find the band associated with the writer of ""Don't Forget Your Roots""
SELECT ?band WHERE {
  ?album dbo:writer ?person ;
         rdfs:label ""Don't Forget Your Roots""@en .
  ?person dbo:memberOfBand ?band .
}
```",4,6,5,2,2,3,2,20,0,0,1,0,0.0,0
965,52,val,"Give me the parent of the child, that is a royalty, of Prince Louis of Battenberg and spouse of the spouse of the parent of Louise Mountbatten and parent of George Mountbatten, 2nd Marquess of Milford Haven.","SELECT ?result WHERE { ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. <http://dbpedia.org/resource/George_Mountbatten,_2nd_Marquess_of_Milford_Haven> <http://dbpedia.org/ontology/parent> ?result . ?result <http://dbpedia.org/ontology/spouse> ?v1 . ?v3 <http://dbpedia.org/ontology/spouse> ?v1 . ?v4 <http://dbpedia.org/ontology/parent> ?result . <http://dbpedia.org/resource/Louise_Mountbatten> <http://dbpedia.org/ontology/parent> ?v3 . ?v4 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Prince_Louis_of_Battenberg> . }","```sparql
SELECT ?parent WHERE {
  # Victoria Eugenie of Battenberg (child of Prince Louis)
  wd:Q1234567 wdt:P31/wdt:P279* wd:Q5; # Victoria Eugenie is a person and royalty
  wdt:P22 wd:Q12345. # Spouse of Victoria Eugenie

  # Alfonso XIII of Spain (spouse of Victoria Eugenie)
  ?alfonso13 wdt:P26 wd:Q1234567. # Alfonso XIII married Victoria Eugenie

  # Parent of Louise Mountbatten
  wd:Q67891011 wdt:P22 wd:Q12345. # Princess Alice is the parent of Louise Mountbatten

  # Spouse of Princess Alice (parent of Louise)
  ?princessAlice wdt:P26 ?albertOfGreece. # Princess Alice married Prince Andrew

  # Parent of George Mountbatten, 2nd Marquess of Milford Haven
  wd:Q2345678 wdt:P22 wd:Q3456789. # Louis Mountbatten is the parent of George Mountbatten

  # Parent of Louis Mountbatten
  ?louisMountbatten wdt:P22 wd:Q12345; # Prince Louis of Battenberg is a parent of Louis Mountbatten
    wdt:P26 wd:Q9876543. # Spouse of Prince Louis (Princess Victoria)

  # Parent of the spouse of Alfonso XIII (Victoria Eugenie)
  ?victoriaEugenie wdt:P22 ?parentOfVic; # Parent of Victoria Eugenie
    wdt:P26 ?alfonso13. # Spouse of Victoria Eugenie

  # Parent of Maria de las Mercedes of Bourbon-Two Sicilies
  ?mariaMercedes wdt:P22 ?parentOfMaria; # Parent of Maria de las Mercedes
    wdt:P26 wd:Q987654321. # Spouse of Maria de las Mercedes

  # Find the parent of Maria's father (Prince Alfonso, Duke of Calabria)
  ?parentOfMaria rdfs:label ""Alfonso, Duke of Calabria""@en.
}
```",6,7,7,3,3,3,3,71,0,0,2,0,0.0,0
917,43,val,"Give me the child of Kekūanāoʻa and parent of Albert Kamehameha and child of the father of the spouse, that is a royalty, of Leleiohoku I.","SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/spouse> <http://dbpedia.org/resource/Leleiohoku_I> . ?v1 <http://dbpedia.org/property/father> ?v3 . ?result <http://dbpedia.org/ontology/parent> ?v3 . ?result <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Albert_Kamehameha> . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?result <http://dbpedia.org/property/father> ""Kekūanāoʻa""@en . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?person WHERE {
  # Kekūanāoʻa's child who is also the parent of Albert Kamehameha
  ?child dbo:parent dbr:Kekūanāoʻa .
  ?child dbo:child dbr:Albert_Kamehameha .

  # Leleiohoku I's spouse and their father
  dbr:Leleiohoku_I dbo:spouse ?spouse .
  ?spouse dbo:father ?father .

  # The child of the father of Leleiohoku I's spouse who is royalty
  ?child dbo:parent ?father .
  ?child a dbo:Monarch .
  
  FILTER (?child = ?person)
}
```",5,6,6,3,3,3,3,71,0,0,1,0,0.0,0
715,40,val,"Give me the commander in Spanish Civil War and commander in the force, that is a military conflict, of the native of Morocco and leader of Ministry of the Air (Spain).",SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v1 <http://dbpedia.org/ontology/commander> ?v2 . <http://dbpedia.org/resource/Spanish_Civil_War> <http://dbpedia.org/ontology/commander> ?result . ?v2 <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Morocco> . <http://dbpedia.org/resource/Ministry_of_the_Air_(Spain)> <http://dbpedia.org/ontology/leader> ?result . ?v1 <http://dbpedia.org/ontology/commander> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?person ?name WHERE {
  ?person a dbo:MilitaryPerson ;
          dbo:nationality dbr:Morocco ;
          dbo:officeHolderOf dbr:Ministry_of_the_Air_(Spain) ;
          dbo:commanderInMilitaryConflicts ?conflict1, ?conflict2 .
  
  FILTER (
    EXISTS { ?conflict1 dbp:name ""Spanish Civil War"" . }
    && EXISTS { ?conflict2 dbp:location dbr:Morocco . }
  )
  
  ?person foaf:name ?name .
}
```",5,6,6,3,3,3,3,71,0,0,1,0,0.0,0
102,17,val,"Give me the native of the residence, that is English and a settlement, of the resident, that is an athlete, of Dewsbury and manager of Sheffield United W.F.C..",SELECT ?result WHERE { ?v0 <http://dbpedia.org/ontology/residence> <http://dbpedia.org/resource/Dewsbury> . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Athlete>. ?v0 <http://dbpedia.org/property/residence> ?v3 . ?result <http://dbpedia.org/ontology/birthPlace> ?v3 . <http://dbpedia.org/resource/Sheffield_United_W.F.C.> <http://dbpedia.org/ontology/manager> ?result . ?v3 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/United_Kingdom>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?native WHERE {
  ?person dbo:managerOf dbr:Sheffield_United_Women_Football_Club ;
          dbo:sport dbr:Athletics .
  
  ?person dbo:birthPlace dbr:Dewsbury .

  ?residence dbo:resident ?person ;
             dbo:country dbr:England ;
             a dbo:Settlement .

  ?residence dbp:nativeLanguage ?native .
}
```",4,7,5,3,2,3,2,20,0,0,1,0,0.0,0
987,50,val,"Give me the birth place of the actor of the show, that is a film, with Emir Hadžihafizbegović and entity in the region, that is a country, of Central European Time.",SELECT ?result WHERE { ?v3 <http://dbpedia.org/ontology/birthPlace> ?result . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Film>. ?v0 <http://dbpedia.org/property/timeZone> <http://dbpedia.org/resource/Central_European_Time> . ?v1 <http://dbpedia.org/property/starring> ?v3 . ?v1 <http://dbpedia.org/ontology/starring> <http://dbpedia.org/resource/Emir_Hadžihafizbegović> . ?result <http://dbpedia.org/ontology/country> ?v0 . },"```sparql
SELECT ?film ?actor ?birthPlace WHERE {
  # Find films featuring Emir Hadžihafizbegović
  ?film dbo:starringEmirHadžihafizbegović dbp:name ?filmName .
  
  # Identify actors from those films who have appeared in TV shows or series
  ?actor dbo:actedInFilm ?film ;
         dbo:actedInSeriesOrShow ?show .

  # Find the birthplace of one such actor
  ?actor dbo:birthPlace ?birthPlace .

  # Ensure that this birthplace is a country within the Central European Time zone
  ?birthPlace rdf:type dbo:Country .
  ?birthPlace dbo:timeZone ""Central European Time""^^xsd:string .
}
```",5,7,6,3,2,3,3,71,0,0,18,0,0.0,0
465,41,val,"Give me the spouse of the child, that is a royalty, of Ferdinand I, Holy Roman Emperor and successor of Renée of France and successor of the child of Alfonso I d'Este.","SELECT ?result WHERE { <http://dbpedia.org/resource/Ferdinand_I,_Holy_Roman_Emperor> <http://dbpedia.org/ontology/child> ?v4 . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v2 <http://dbpedia.org/ontology/successor> ?result . <http://dbpedia.org/resource/Renée_of_France> <http://dbpedia.org/ontology/successor> ?result . ?v2 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Alfonso_I_d'Este> . ?result <http://dbpedia.org/ontology/spouse> ?v4 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?spouse WHERE {
  # Ferdinand I, Holy Roman Emperor's children who are royalty
  ?child dbo:parent dbr:Ferdinand_I,_Holy_Roman_Emperor .
  ?child a dbo:Monarch .

  # Child of Ferdinand I and Renée of France
  ?child dbo:mother dbr:Renée_of_France .

  # Alfonso I d'Este's child
  ?alfonsoChild dbo:parent dbr:Alfonso_I_d%27Este,_Duke_of_Ferrara .
  
  # Successor relationship
  ?successor dbo:predecessor ?child .
  ?successor dbo:predecessor ?alfonsoChild .

  # Spouse of the successor
  ?successor dbp:spouse ?spouse .
}
```",5,6,6,2,3,3,3,71,0,0,1,0,0.0,0
987,47,val,"Give me the birth place of the actor of the show, that is a film, with Emir Hadžihafizbegović and birth place of the band, that is an artist and a musical artist, of Šako Polumenta.",SELECT ?result WHERE { ?v0 <http://dbpedia.org/property/starring> ?v3 . <http://dbpedia.org/resource/Šako_Polumenta> <http://dbpedia.org/ontology/associatedMusicalArtist> ?v1 . ?v3 <http://dbpedia.org/ontology/birthPlace> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?v0 <http://dbpedia.org/ontology/starring> <http://dbpedia.org/resource/Emir_Hadžihafizbegović> . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Film>. ?v1 <http://dbpedia.org/ontology/birthPlace> ?result . },"```sparql
# Query to find a film featuring Emir Hadžihafizbegović
SELECT ?film WHERE {
  ?film dbo:starring dbpedia:Emir_Hadžihafizbegović .
}

# Assuming we identify the film, query for TV shows based on that film
SELECT ?show WHERE {
  ?show dbo:basedOnFilm ?film .
}

# Query to find an actor from the identified show and their birthplace
SELECT DISTINCT ?actor ?birthPlace WHERE {
  ?actor dbo:actedIn ?show .
  ?actor foaf:bornIn ?birthPlace .
}

# Query to identify the band associated with Šako Polumenta
SELECT ?band WHERE {
  ?band dbo:member dbpedia:Šako_Polumenta .
  ?band a dbo:Band .
}

# Query to find the birthplace of that band (origin)
SELECT DISTINCT ?bandOrigin WHERE {
  ?band dbo:foundingPlace ?bandOrigin .
}
```",5,8,6,3,2,3,3,71,0,0,4,0,0.0,0
839,45,val,"Give me the band of Kevin Russell (musician) and band of the band, that is a musical artist, of the professional in Musician and band of Peter Schorowsky.","SELECT ?result WHERE { ?v0 <http://dbpedia.org/property/occupation> ""Musician""@en . ?v0 <http://dbpedia.org/ontology/associatedMusicalArtist> ?v1 . ?result <http://dbpedia.org/ontology/bandMember> <http://dbpedia.org/resource/Peter_Schorowsky> . ?result <http://dbpedia.org/ontology/bandMember> ?v1 . <http://dbpedia.org/resource/Kevin_Russell_(musician)> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. }","```sparql
# Query for Kevin Russell's band
SELECT ?kevinRussellBand WHERE {
  dbpedia:Kevin_Russell dbo:band ?kevinRussellBand .
}

UNION

# Query for the band of Kevin Russell's band, if it exists as a musical artist
SELECT ?subBand WHERE {
  ?kevinRussellBand dbo:band ?subBand .
  FILTER EXISTS { ?subBand rdf:type dbpedia-owl:MusicalArtist }
}

UNION

# Query for Peter Schorowsky's band
SELECT ?peterSchorowskyBand WHERE {
  dbpedia:Peter_Schorowsky dbo:band ?peterSchorowskyBand .
}
```",5,6,6,3,3,3,3,71,0,0,1,0,0.0,0
874,17,val,"Give me the band of Manfred Mann (musician) and band of the band member of the band, that is an organisation, of Mark Read (singer).",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/bandMember> <http://dbpedia.org/resource/Manfred_Mann_(musician)> . ?v0 <http://dbpedia.org/ontology/bandMember> <http://dbpedia.org/resource/Mark_Read_(singer)> . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?v3 <http://dbpedia.org/ontology/associatedMusicalArtist> ?v0 . ?result <http://dbpedia.org/ontology/bandMember> ?v3 . },"```sparql
# Query to get the band of Manfred Mann
SELECT ?band WHERE {
  dbpedia:Manfred_Mann dbo:musicalArtist <http://dbpedia.org/resource/Category:Musicians_from_London> .
  ?band dbo:member dbpedia:Manfred_Mann ;
        a dbo:Band .
}

# Query to find the band of any member who is an organization
SELECT DISTINCT ?organizationBand WHERE {
  ?band dbo:member ?member .
  ?member rdf:type dbo:Organization .
  ?member dbo:musicalArtist ?organizationBand .
}

# Query to confirm Mark Read's band
SELECT ?readBand WHERE {
  dbpedia:Mark_Read dbo:musicalArtist <http://dbpedia.org/resource/Category:Singers> ;
                    dbo:bandMember ?readBand .
}
```",4,5,5,3,2,3,2,20,0,0,1,0,0.0,0
935,16,val,Give me the death place of the awardee of Sitara-i-Imtiaz and headquarter of the office of Sanaullah Khan Zehri.,SELECT ?result WHERE { ?v3 <http://dbpedia.org/ontology/location> ?result . ?v2 <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/Sitara-i-Imtiaz> . ?v2 <http://dbpedia.org/ontology/deathPlace> ?result . <http://dbpedia.org/resource/Sanaullah_Khan_Zehri> <http://dbpedia.org/property/office> ?v3 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT DISTINCT ?deathPlace ?officeHeadquarters WHERE {
  # Find the death place of a Sitara-i-Imtiaz awardee who has passed away
  ?person dbo:award dbr:Sitara-i-Imtiaz ;
          dbo:deathPlace ?deathPlace .
  
  # Confirm Sanaullah Khan Zehri's office headquarters location
  OPTIONAL {
    dbp:Sanaullah_Khan_Zehri dbo:officeHeadquarters ?officeHeadquarters .
  }
  
  FILTER(?officeHeadquarters = ""Quetta"")
}
```",4,4,5,2,2,3,2,20,0,0,1,0,0.0,0
839,43,val,"Give me the band of Matthias Röhr and band of the member of the band, that is a band and a group, of Peter Schorowsky and band of Kevin Russell (musician).",SELECT ?result WHERE { <http://dbpedia.org/resource/Peter_Schorowsky> <http://dbpedia.org/ontology/associatedMusicalArtist> ?v0 . ?v0 <http://dbpedia.org/ontology/bandMember> ?v4 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Group>. <http://dbpedia.org/resource/Kevin_Russell_(musician)> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?result <http://dbpedia.org/ontology/bandMember> <http://dbpedia.org/resource/Matthias_Röhr> . ?result <http://dbpedia.org/ontology/bandMember> ?v4 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Band>. },"```sparql
# Query for Matthias Röhr's band
SELECT ?band WHERE {
  ?person foaf:name ""Matthias Röhr""@en .
  ?person dbo:memberOf ?band .
  ?band a dbo:MusicalGroup .
}

UNION

# Query for Peter Schorowsky's band that is both a band and a group
SELECT ?band WHERE {
  ?person foaf:name ""Peter Schorowsky""@en .
  ?person dbo:memberOf ?band .
  ?band a dbo:Band ;
        a dbo:MusicalGroup .
}

UNION

# Query for Kevin Russell's band
SELECT ?band WHERE {
  ?person foaf:name ""Kevin Russell (musician)""@en .
  ?person dbo:memberOf ?band .
  ?band a dbo:MusicalGroup .
}
```",5,7,6,3,3,3,3,71,0,0,1,0,0.0,0
987,49,val,"Give me the entity in the region, that is a country, of the time zone, that is a sports event, in Canicosa de la Sierra and birth place of the band, that is an artist and a musical artist, of Šako Polumenta.",SELECT ?result WHERE { ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?result <http://dbpedia.org/ontology/country> ?v0 . ?v2 <http://dbpedia.org/ontology/birthPlace> ?result . <http://dbpedia.org/resource/Canicosa_de_la_Sierra> <http://dbpedia.org/ontology/timeZone> ?v4 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. <http://dbpedia.org/resource/Šako_Polumenta> <http://dbpedia.org/ontology/associatedMusicalArtist> ?v2 . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsEvent>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. ?v0 <http://dbpedia.org/property/timeZone> ?v4 . },"```sparql
SELECT DISTINCT ?entity WHERE {
  # Step 1: Identify Šako Polumenta's band
  ?band dbo:type dbr:MusicalArtist ;
        dbo:member dbr:Šako_Polumenta .
  
  # Step 2: Determine the birth place of the band
  ?band dbo:birthPlace ?place .

  # Step 3: Find the time zone in Canicosa de la Sierra
  ?canicosa dbp:timeZone ?timezone .

  # Step 4: Identify a sports event in that time zone
  ?event dbo:type dbr:SportsEvent ;
         dbo:location ?timezone .

  # Step 5: Determine the region of the country associated with the sports event
  ?country dbo:region ?region .
  ?region dbp:timeZone ?timezone .

  # Ensure the country is a country entity
  ?country rdf:type dbr:Country .

  # Bind the final entity to be returned
  BIND(?country AS ?entity)
}
```",5,9,6,3,2,3,3,71,0,0,2,0,0.0,0
216,40,val,"Give me the player in Mario Ivanković and player in the coach of the reference, that is an organisation and a soccer club, to Croatia U21 and team of Ognjen Vukojević.","SELECT ?result WHERE { ?v2 <http://dbpedia.org/ontology/coach> ?v1 . ?v1 <http://dbpedia.org/ontology/team> ?result . <http://dbpedia.org/resource/Mario_Ivanković> <http://dbpedia.org/ontology/team> ?result . ?v2 <http://xmlns.com/foaf/0.1/name> ""Croatia U21""@en . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerClub>. ?result <http://dbpedia.org/ontology/coach> <http://dbpedia.org/resource/Ognjen_Vukojević> . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?player ?coachTeam WHERE {
  # Find the player associated with Mario Ivanković
  ?mario a dbo:FootballPlayer ;
         foaf:name ""Mario Ivanković""@en .
  
  # Find Ognjen Vukojević's coaching team
  ?ognjen a dbo:Coach ;
          foaf:name ""Ognjen Vukojević""@en ;
          dbo:team ?coachTeam .

  # Ensure the coach's team is both an organisation and a soccer club
  ?coachTeam a dbo:SoccerClub, dbo:Organisation .

  # Link to Croatia U21
  ?croatiaU21 a dbo:NationalFootballTeam ;
              foaf:name ""Croatia national under-21 football team""@en .
  
  OPTIONAL { ?mario dbo:team ?croatiaU21 . }
  OPTIONAL { ?ognjen dbo:team ?croatiaU21 . }

  # Return the player and coach's team
  ?player a dbo:FootballPlayer ;
          foaf:name ?name ;
          dbo:team ?coachTeam .
}
```",5,7,6,3,3,3,3,71,0,0,1,0,0.0,0
433,50,val,"Give me the professional in the profession of Bob Marley and associated musical artist of the associated musical artist, that is an artist and a musical artist, of the associated musical artist, that is a musical artist and an artist, of Ornette Coleman.",SELECT ?result WHERE { ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. <http://dbpedia.org/resource/Bob_Marley> <http://dbpedia.org/property/occupation> ?v3 . ?result <http://dbpedia.org/property/occupation> ?v3 . ?v0 <http://dbpedia.org/ontology/associatedMusicalArtist> ?v4 . ?v4 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. <http://dbpedia.org/resource/Ornette_Coleman> <http://dbpedia.org/ontology/associatedMusicalArtist> ?v0 . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?artist WHERE {
  # Step 1: Find Bob Marley's profession
  dbr:Bob_Marley dbo:profession ?marleyProfession .
  
  # Step 2: Find musicians associated with Bob Marley in the same profession
  ?associatedMarleyArtist dbo:profession ?marleyProfession ;
                         dbo:genre dbr:Reggae ;
                         dbo:associatedBandOrMusicalArtist dbr:Bob_Marley .

  # Step 3: Find Ornette Coleman's associated artists who are both musicians and artists
  dbr:Ornette_Coleman dbo:associatedBandOrMusicalArtist ?associatedColemanArtist .
  
  ?associatedColemanArtist a dbo:Musician ;
                          dbo:genre ?colemanGenre .

  # Step 4: Find overlap between the two sets
  FILTER(?artist = ?associatedMarleyArtist && ?artist = ?associatedColemanArtist)
}
```",5,9,6,3,2,3,3,71,0,0,44,0,0.0,0
267,17,val,Give me the person born on the birth date of the reference to Dan Cathy and coach of Iran national football team.,"SELECT ?result WHERE { ?v0 <http://xmlns.com/foaf/0.1/name> ""Dan Cathy""@en . ?result <http://dbpedia.org/ontology/birthDate> ?v3 . ?v0 <http://dbpedia.org/ontology/birthDate> ?v3 . <http://dbpedia.org/resource/Iran_national_football_team> <http://dbpedia.org/ontology/coach> ?result . }","```sparql
# Query 1: Get Dan Cathy's birth date
SELECT ?birthDate WHERE {
  dbpedia:Dan_Cathy dbo:birthday ?birthDate .
}

# Query 2: Find a person born on the same date as Dan Cathy who is also the coach of the Iran national football team
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?person WHERE {
  # Replace 'YYYY-MM-DD' with the actual birth date obtained from Query 1
  VALUES ?birthDate { ""YYYY-MM-DD""^^xsd:date }
  
  ?person dbo:birthday ?birthDate .
  ?person rdfs:label ?name .
  FILTER(CONTAINS(LCASE(?name), ""coach of iran national football team""))
}
```",4,4,5,3,2,3,2,20,0,0,1,0,0.0,0
892,42,val,"Give me the entity in the profession of Henri Crolla and entity in the administration, that is Italian and a region and a settlement and an administrative region, of Democratic Party (Italy) and landmark at elevation of 58.","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/country> ?v1 . <http://dbpedia.org/resource/Henri_Crolla> <http://dbpedia.org/property/occupation> ?v1 . ?v0 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Italy>. ?v0 <http://dbpedia.org/property/leaderParty> <http://dbpedia.org/resource/Democratic_Party_(Italy)> . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/AdministrativeRegion>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Region>. ?result <http://dbpedia.org/ontology/province> ?v0 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. ?result <http://dbpedia.org/ontology/elevation> ""58""^^<http://www.w3.org/2001/XMLSchema#integer> . }","```sparql
# Query to find Henri Crolla's profession
SELECT ?profession WHERE {
  ?person foaf:name ""Henri Crolla""@en .
  ?person dbo:occupation ?profession .
}

UNION

# Query to find an Italian entity in administration that is a region, settlement, administrative region, and part of the Democratic Party (Italy)
SELECT DISTINCT ?entity WHERE {
  ?entity rdf:type dbo:Region ;
          dbo:country dbr:Italy ;
          dbo:partyAffiliation dbr:Democratic_Party_(Italy) .
  OPTIONAL { ?entity rdf:type dbo:Settlement . }
  OPTIONAL { ?entity rdf:type dbo:AdministrativeRegion . }
}

UNION

# Query to find a landmark at an elevation of 58 meters
SELECT DISTINCT ?landmark WHERE {
  ?landmark rdf:type dbo:Lighthouse ;
            dbo:elevation ""58""^^xsd:integer .
}
```",5,9,6,2,3,3,3,71,0,0,2,0,0.0,0
926,46,val,Give me the successor of the child of Ahmed III and father of the father of the spouse of Neşerek Kadın.,SELECT ?result WHERE { ?v3 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Ahmed_III> . <http://dbpedia.org/resource/Neşerek_Kadın> <http://dbpedia.org/ontology/spouse> ?v2 . ?v3 <http://dbpedia.org/ontology/successor> ?result . ?v0 <http://dbpedia.org/property/father> ?result . ?v2 <http://dbpedia.org/property/father> ?v0 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?successor WHERE {
  # Step 1: Find a child of Ahmed III
  ?child dbo:parent dbr:Ahmed_III_of_the_Ottoman_Empire .
  
  # Step 2: Identify the father of this child's father (Ahmed III)
  ?ahmed3 dbo:child ?child .

  # Step 3: Find Neşerek Kadın's spouse
  ?neserekKadin dbo:spouse ?spouse .

  # Step 4: Determine the successor of the identified child
  ?child dbo:succeededBy ?successor .
}
```",5,5,6,3,2,3,3,71,0,0,1,0,0.0,0
443,20,val,"Give me the birthplace of Carl Larsson and landmark at elevation of 28 and birthplace of the person born, that is a musical artist and an artist, on 1949-11-20.","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/elevation> ""28""^^<http://www.w3.org/2001/XMLSchema#integer> . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. <http://dbpedia.org/resource/Carl_Larsson> <http://dbpedia.org/ontology/birthPlace> ?result . ?v3 <http://dbpedia.org/ontology/birthPlace> ?result . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. ?v3 <http://dbpedia.org/ontology/birthDate> ""1949-11-20""^^<http://www.w3.org/2001/XMLSchema#date> . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?carlLarssonBirthplace ?landmarkName ?personBirthplace WHERE {
  # Find Carl Larsson's birthplace
  dbr:C._L.__Carl_Larsson dbo:birthPlace ?carlLarssonBirthplace .

  # Find a landmark at elevation of 28 meters
  ?landmark dbo:elevation ?elevation .
  FILTER (?elevation = ""28""^^xsd:string) 
  BIND (STR(?landmark) AS ?landmarkName)

  # Find the person born on 1949-11-20 who is both a musical artist and an artist
  ?person dbp:birthDate ""1949-11-20""^^xsd:date ;
          dbo:occupation dbr:Musical_artist ;
          dbo:occupation dbr:Artist .
  ?person dbo:birthPlace ?personBirthplace .

  # Ensure the birthplaces match
  FILTER (?carlLarssonBirthplace = ?personBirthplace)
}
```",4,6,5,2,3,2,3,28,0,0,1,0,0.0,0
216,41,val,"Give me the team of Ognjen Vukojević and player in the coach, that is a soccer player and a sports manager and a soccer manager, of Bosnia and Herzegovina national under-18 football team and player in the coach of Croatia national under-21 football team.",SELECT ?result WHERE { <http://dbpedia.org/resource/Bosnia_and_Herzegovina_national_under-18_football_team> <http://dbpedia.org/ontology/coach> ?v4 . ?result <http://dbpedia.org/ontology/coach> <http://dbpedia.org/resource/Ognjen_Vukojević> . ?v4 <http://dbpedia.org/ontology/team> ?result . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsManager>. <http://dbpedia.org/resource/Croatia_national_under-21_football_team> <http://dbpedia.org/ontology/coach> ?v2 . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerPlayer>. ?v2 <http://dbpedia.org/ontology/team> ?result . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerManager>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?team WHERE {
  # Find the team where Ognjen Vukojević is a coach of Bosnia and Herzegovina national under-18 football team
  ?coachTeam dbo:manager dbr:Ognjen_Vukojević .
  ?coachTeam dbo:team dbr:Bosnia_and_Herzegovina_national_under-18_football_team .

  # Find the same or related entity where he is a player and sports manager
  OPTIONAL {
    ?playerManager dbo:manager dbr:Ognjen_Vukojević .
    ?playerManager dbo:team ?team .
    FILTER EXISTS { ?team dbo:sport dbr:Soccer }
  }

  # Find the team where Ognjen Vukojević is a coach of Croatia national under-21 football team
  OPTIONAL {
    ?croatiaCoachTeam dbo:manager dbr:Ognjen_Vukojević .
    ?croatiaCoachTeam dbo:team dbr:Croatia_national_under-21_football_team .
  }

  # Return the team where he is both a coach and player manager
  BIND(?playerManager AS ?team)
}
```",5,8,6,2,3,3,3,71,0,0,1,0,0.0,0
826,44,val,"Give me the predecessor of the parent of Prince Friedrich of Hesse and by Rhine and spouse of Anna Magdalena Appel and successor of the child, that is a royalty, of Louis I, Grand Duke of Hesse.","SELECT ?result WHERE { <http://dbpedia.org/resource/Louis_I,_Grand_Duke_of_Hesse> <http://dbpedia.org/ontology/child> ?v4 . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?result <http://dbpedia.org/ontology/successor> ?v2 . ?v4 <http://dbpedia.org/ontology/successor> ?result . <http://dbpedia.org/resource/Anna_Magdalena_Appel> <http://dbpedia.org/ontology/spouse> ?result . <http://dbpedia.org/resource/Prince_Friedrich_of_Hesse_and_by_Rhine> <http://dbpedia.org/ontology/parent> ?v2 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?predecessor WHERE {
  # Step 1: Identify Prince Friedrich of Hesse and by Rhine
  ?prince rdfs:label ""Prince Friedrich of Hesse and by Rhine""@en .
  
  # Step 2: Find the Parent of Prince Friedrich
  ?parent dbo:child ?prince .

  # Step 3: Determine the Predecessor of this Parent
  ?predecessor dbo:successor ?parent .

  # Step 4: Identify Anna Magdalena Appel's Spouse
  ?anna dbr:Anna_Magdalena_Appel dbo:spouse ?prince .
  
  # Step 5: Find Louis I, Grand Duke of Hesse's Child
  ?louisChild dbo:childOf dbr:Louis_I,_Grand_Duke_of_Hesse ;
              a dbo:Royal .

  # Step 6: Determine the Successor of this Child
  ?successor dbo:predecessor ?louisChild .
  
  FILTER(?prince = ?successor)
}
```",5,6,6,2,3,3,3,71,0,0,1,0,0.0,0
456,55,val,"Give me the professional in the alter ego of The Shadow and band of the band, that is a musical artist, of Dean Brody and spouse of the actor of Pacific Drive.",SELECT ?result WHERE { ?v2 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . <http://dbpedia.org/resource/Pacific_Drive> <http://dbpedia.org/property/starring> ?v3 . ?result <http://dbpedia.org/property/occupation> ?v5 . ?v3 <http://dbpedia.org/ontology/spouse> ?result . <http://dbpedia.org/resource/Dean_Brody> <http://dbpedia.org/ontology/associatedMusicalArtist> ?v2 . <http://dbpedia.org/resource/The_Shadow> <http://dbpedia.org/property/alterEgo> ?v5 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. },"```sparql
SELECT ?person WHERE {
  # Find Delta Goodrem as a musical artist
  ?person dbo:profession dbr/Musical_artist .
  
  # Ensure she is associated with Pacific Drive through her spouse, Matt Day
  ?spouse wdt:P106 wd:Q11424 ;  # Occupation: Actor
          wdt:P26 ?person .      # Spouse of Delta Goodrem
  
  ?actor dbo:film dbr/Pacific_Drive .
  
  ?spouse owl:sameAs ?actor .

  FILTER (?person = wd:Q123456) # Replace with Delta Goodrem's DBpedia ID
}
```",6,7,7,2,3,3,3,71,0,0,1,0,0.0,0
507,42,val,Give me the spouse of the person born as Anne Voase Coates and director of Entertaining Mr Sloane (film) and professional in the profession of Guy Ferland.,"SELECT ?result WHERE { <http://dbpedia.org/resource/Guy_Ferland> <http://dbpedia.org/property/occupation> ?v1 . ?result <http://dbpedia.org/ontology/spouse> ?v2 . ?v2 <http://dbpedia.org/property/birthName> ""Anne Voase Coates""@en . ?result <http://dbpedia.org/property/occupation> ?v1 . <http://dbpedia.org/resource/Entertaining_Mr_Sloane_(film)> <http://dbpedia.org/ontology/director> ?result . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?spouse WHERE {
  ?person a dbo:FilmEditor .
  ?person dbo:birthName ""Anne Voase Coates"" .
  ?person dbo:directed dbr:Entertaining_Mr_Sloane .
  ?person dbo:spouse ?spouse .
}
```",5,5,6,2,3,3,3,71,0,0,1,0,0.0,0
102,16,val,"Give me the manager of the player in Ellie Roebuck and native of the residence, that is English and a settlement, of Peter Finbow.",SELECT ?result WHERE { <http://dbpedia.org/resource/Ellie_Roebuck> <http://dbpedia.org/ontology/team> ?v2 . ?v3 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/United_Kingdom>. ?result <http://dbpedia.org/ontology/birthPlace> ?v3 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. <http://dbpedia.org/resource/Peter_Finbow> <http://dbpedia.org/property/residence> ?v3 . ?v2 <http://dbpedia.org/ontology/manager> ?result . },"```sparql
# Step 1: Get Ellie Roebuck's manager
SELECT ?manager WHERE {
  ?person dbo:name ""Ellie Roebuck""@en .
  ?person dbo:manager ?manager .
}

# Step 2: Get Peter Finbow's native settlement and ensure it is English
SELECT ?settlement WHERE {
  ?person dbo:name ""Peter Finbow""@en .
  ?person dbo:birthPlace ?place .
  ?place a dbo:Settlement ;
         dbo:country dbr:England .
  BIND(?place AS ?settlement)
}

# Step 3: Check if the manager is from the same settlement
SELECT DISTINCT ?manager WHERE {
  # Ellie Roebuck's manager
  ?person1 dbo:name ""Ellie Roebuck""@en .
  ?person1 dbo:manager ?manager .

  # Peter Finbow's native settlement
  ?person2 dbo:name ""Peter Finbow""@en .
  ?person2 dbo:birthPlace ?place .
  ?place a dbo:Settlement ;
         dbo:country dbr:England .

  # Check if the manager is from the same place
  ?manager dbo:birthPlace ?place .
}
```",4,6,5,2,2,3,2,20,0,0,1,0,0.0,0
826,43,val,"Give me the spouse of Anna Magdalena Appel and successor of the child, that is a royalty, of the reference, that is a royalty, to Louis I and predecessor of Louis IV, Grand Duke of Hesse.","SELECT ?result WHERE { ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v0 <http://xmlns.com/foaf/0.1/name> ""Louis I""@en . ?v0 <http://dbpedia.org/ontology/child> ?v4 . ?v4 <http://dbpedia.org/ontology/successor> ?result . <http://dbpedia.org/resource/Anna_Magdalena_Appel> <http://dbpedia.org/ontology/spouse> ?result . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?result <http://dbpedia.org/ontology/successor> <http://dbpedia.org/resource/Louis_IV,_Grand_Duke_of_Hesse> . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?spouse ?royalDescendant WHERE {
  # Anna Magdalena Bach's spouse
  dbr:Anna_Magdalena_Bach dbo:spouse dbr:Johann_Sebastian_Bach .
  
  # Johann Sebastian Bach's descendant who became royalty
  ?descendant dbo:parent dbr:Johann_Sebastian_Bach ;
             dbo:spouse ?royalSpouse .
  ?royalSpouse dbo:title ?title .
  FILTER(CONTAINS(LCASE(?title), ""prince"") || CONTAINS(LCASE(?title), ""duke""))
}
```",5,7,6,3,3,3,3,71,0,0,1,0,0.0,0
36,19,val,"Give me the person born in 1971 and person born as Ayo Makun and actor of the claim to fame, that is a film, of Lepacious Bose.","SELECT ?result WHERE { ?v3 <http://dbpedia.org/ontology/starring> ?result . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Film>. ?result <http://dbpedia.org/ontology/birthYear> ""1971""^^<http://www.w3.org/2001/XMLSchema#gYear> . <http://dbpedia.org/resource/Lepacious_Bose> <http://dbpedia.org/ontology/knownFor> ?v3 . ?result <http://dbpedia.org/property/birthName> ""Ayo Makun""@en . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT DISTINCT ?person1 ?person2 WHERE {
  # Find person born in 1971
  ?person1 dbo:birthYear ""1971""^^xsd:gYear .
  
  # Find Ayo Makun by birth name
  ?person2 foaf:name ""Ayo Makun""@en ;
           dbp:birthName ""Ayo Makun""@en .

  # Find films associated with Lepacious Bose and actors in those films
  ?film dbo:actor dbr:Lepacious_Bose .
  OPTIONAL { ?film dbo:starring ?actor . }
  
  FILTER (?person1 != ?person2)
}
```",4,5,5,2,3,2,3,28,0,0,1,0,0.0,0
192,16,val,"Give me the child of the child of Stephen V of Hungary and spouse of the spouse, that is a royalty, of Charles Martel of Anjou.",SELECT ?result WHERE { ?v2 <http://dbpedia.org/ontology/spouse> ?result . ?v3 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Stephen_V_of_Hungary> . ?v2 <http://dbpedia.org/ontology/spouse> <http://dbpedia.org/resource/Charles_Martel_of_Anjou> . ?result <http://dbpedia.org/ontology/parent> ?v3 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. },"```sparql
# Step 1: Find children of Stephen V of Hungary
SELECT ?child WHERE {
  wd:Q123456 wdt:P40 ?child .
}

# Step 2: Find grandchildren (children of the child)
SELECT ?grandchild WHERE {
  ?child wdt:P40 ?grandchild .
  FILTER(?child IN (<result from step 1>))
}

# Step 3: Find spouse of Charles Martel of Anjou
SELECT ?spouse WHERE {
  wd:Q654321 wdt:P26 ?spouse .
}

# Step 4: Find the spouse of that spouse
SELECT ?secondSpouse WHERE {
  ?spouse wdt:P26 ?secondSpouse .
  FILTER(?spouse IN (<result from step 3>))
}

# Step 5: Identify royalty connection between grandchild and second spouse
SELECT ?royaltyConnection WHERE {
  VALUES (?grandchild ?secondSpouse) {(<result from step 2> <result from step 4>)}
  OPTIONAL { ?grandchild wdt:P31 wd:Q5 . } # Check if grandchild is a royalty (instance of human)
  OPTIONAL { ?secondSpouse wdt:P31 wd:Q5 . } # Check if second spouse is a royalty
}

# Note: Replace <result from step X> with actual results obtained from previous queries.
```",4,5,5,2,2,3,2,20,0,0,1,0,0.0,0
456,41,val,Give me the spouse of the actor of Pacific Drive and professional in the alter ego of The Shadow and band of Alan Doyle.,SELECT ?result WHERE { <http://dbpedia.org/resource/The_Shadow> <http://dbpedia.org/property/alterEgo> ?v4 . <http://dbpedia.org/resource/Alan_Doyle> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v2 <http://dbpedia.org/ontology/spouse> ?result . ?result <http://dbpedia.org/property/occupation> ?v4 . <http://dbpedia.org/resource/Pacific_Drive> <http://dbpedia.org/property/starring> ?v2 . },"```sparql
# Find the main actor of ""Pacific Drive""
SELECT ?actor WHERE {
  ?movie dbo:genre dbc:Pacific_Drive.
  ?movie dbo:starring ?actor.
}

# Find the professional associated with The Shadow
SELECT ?shadowActor WHERE {
  ?character rdfs:label ""The Shadow""@en.
  ?character dbo:portrayedBy ?shadowActor.
}

# Find Alan Doyle's spouse
SELECT ?doyleSpouse WHERE {
  wd:Q123456 dbo:spouse ?doyleSpouse. # Replace Q123456 with the actual DBpedia ID for Alan Doyle
}

# Assuming we have identified the actors, find their spouses and check for commonality
SELECT DISTINCT ?commonSpouse WHERE {
  VALUES (?actor1 ?actor2 ?actor3) { 
    (wd:QActorPacificDrive wd:QShadowActor wd:QAlanDoyle) # Replace with actual DBpedia IDs
  }
  
  OPTIONAL { ?actor1 dbo:spouse ?commonSpouse. }
  OPTIONAL { ?actor2 dbo:spouse ?commonSpouse. }
  OPTIONAL { ?actor3 dbo:spouse ?commonSpouse. }

  FILTER (?commonSpouse != wd:QActorPacificDrive && 
          ?commonSpouse != wd:QShadowActor &&
          ?commonSpouse != wd:QAlanDoyle)
}
```",5,5,6,2,3,3,3,71,0,0,1,0,0.0,0
417,43,val,"Give me the child of the father of the leader, that is a royalty, of Colony of Greenland and spouse of Princess Caroline-Mathilde of Denmark and child of Alexandrine of Mecklenburg-Schwerin.",SELECT ?result WHERE { ?v0 <http://dbpedia.org/property/father> ?v4 . <http://dbpedia.org/resource/Colony_of_Greenland> <http://dbpedia.org/property/leader> ?v0 . ?result <http://dbpedia.org/ontology/parent> <http://dbpedia.org/resource/Alexandrine_of_Mecklenburg-Schwerin> . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?result <http://dbpedia.org/property/father> ?v4 . ?result <http://dbpedia.org/ontology/spouse> <http://dbpedia.org/resource/Princess_Caroline-Mathilde_of_Denmark> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?child WHERE {
  ?leader dbo:spouse ?carolineMathilde .
  ?carolineMathilde rdfs:label ""Princess Caroline-Mathilde of Denmark""@en .

  ?father dbo:child ?leader .
  ?leader dbo:parent ?father .

  ?child dbo:parent ?father .
  ?child a dbo:Monarch .

  ?alexandrine dbo:child ?child .
  ?alexandrine rdfs:label ""Alexandrine of Mecklenburg-Schwerin""@en .
}
```",5,6,6,3,3,3,3,71,0,0,1,0,0.0,0
456,52,val,"Give me the professional in the alter ego of The Shadow and band of Alan Doyle and spouse of the actor of the movie, that is a work and a television show, with Ross Newton.",SELECT ?result WHERE { ?result <http://dbpedia.org/property/occupation> ?v5 . ?v3 <http://dbpedia.org/property/starring> <http://dbpedia.org/resource/Ross_Newton> . <http://dbpedia.org/resource/The_Shadow> <http://dbpedia.org/property/alterEgo> ?v5 . <http://dbpedia.org/resource/Alan_Doyle> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/TelevisionShow>. ?v3 <http://dbpedia.org/property/starring> ?v2 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?v2 <http://dbpedia.org/ontology/spouse> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?person WHERE {
  # Lamont Cranston (The Shadow)
  VALUES ?shadowAlterEgo { dbr:Lamont_Cranston }
  
  # Alan Doyle's band
  ?band dbo:member dbr:Alan_Doyle .
  ?band rdfs:label ""Great Big Sea""@en .

  # Ross Newton and Benedict Cumberbatch in Sherlock Holmes
  ?work dbo:starring dbr:Benedict_Cumberbatch ;
        dbo:starring dbr:Ross_Newton ;
        rdf:type dbo:Film OR dbo:TVSeries .
  
  # Sophie Hunter, spouse of Benedict Cumberbatch
  ?benedict dbo:spouse ?sophie .
  ?sophie rdfs:label ""Sophie Hunter""@en .

  FILTER(?person = ?sophie)
}
```",6,8,7,3,3,3,3,71,0,0,1,0,0.0,0
579,16,val,"Give me the person born as the birth name of Jane Percy, Duchess of Northumberland and native of the residence, that is English and a settlement, of Alan Clyne.","SELECT ?result WHERE { ?result <http://dbpedia.org/property/birthName> ?v3 . <http://dbpedia.org/resource/Alan_Clyne> <http://dbpedia.org/property/residence> ?v2 . ?v2 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/United_Kingdom>. <http://dbpedia.org/resource/Jane_Percy,_Duchess_of_Northumberland> <http://dbpedia.org/property/birthName> ?v3 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. ?result <http://dbpedia.org/ontology/birthPlace> ?v2 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?person WHERE {
  # Find Jane Percy's birth name
  dbr:Jane_Percy Duchess_of_Northumberland dbo:birthName ?birthName .

  # Find Alan Clyne's place of origin
  dbr:Alan_Clyne dbo:nativePlace ?placeOfOrigin .
  
  FILTER (regex(str(?placeOfOrigin), ""England"", ""i"")) # Ensure it is an English settlement

  # Find a person with the same birth name and place of origin
  ?person dbo:birthName ?birthName ;
          dbo:birthPlace ?placeOfBirth .

  FILTER (?placeOfBirth = ?placeOfOrigin)
}
```",4,6,5,2,2,3,2,20,0,0,1,0,0.0,0
791,52,val,"Give me the spouse of the spouse, that is a royalty, of the reference to Emperor Takakura and predecessor of the child of Emperor Takakura and father of Emperor Go-Toba.","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/spouse> ?v2 . <http://dbpedia.org/resource/Emperor_Go-Toba> <http://dbpedia.org/property/father> ?result . ?result <http://dbpedia.org/ontology/successor> ?v5 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v3 <http://xmlns.com/foaf/0.1/name> ""Emperor Takakura""@en . ?v2 <http://dbpedia.org/ontology/spouse> ?v3 . ?v5 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Emperor_Takakura> . }","```sparql
SELECT ?spouseOfSpouse WHERE {
  # Step 1: Identify Emperor Takakura
  dbpedia:Emperor_Takakura dbo:predecessor ?emperorAntoku .
  
  # Step 2: Find predecessor of Emperor Antoku (Emperor Tsuchimikado)
  ?emperorAntoku dbo:predecessor ?emperorTsuchimikado .

  # Step 3: Identify spouse of Emperor Tsuchimikado
  ?emperorTsuchimikado dbo:spouse ?spouseOfEmperorTsuchimikado .
  
  # Step 4: Find the spouse's spouse that is royalty
  ?spouseOfEmperorTsuchimikado dbo:spouse ?spouseOfSpouse .
  
  FILTER EXISTS { ?spouseOfSpouse rdf:type dbpedia:Monarch }
}
```",6,7,7,3,3,3,3,71,0,0,1,0,0.0,0
433,42,val,"Give me the associated musical artist of Bill Evans and associated musical artist of the person born, that is a musical artist and an artist, as Paul Laurence Dunbar Chambers Jr. and professional in the profession of Bob Marley.","SELECT ?result WHERE { <http://dbpedia.org/resource/Bill_Evans> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v2 <http://dbpedia.org/property/birthName> ""Paul Laurence Dunbar Chambers Jr.""@en . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. <http://dbpedia.org/resource/Bob_Marley> <http://dbpedia.org/property/occupation> ?v1 . ?v2 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?result <http://dbpedia.org/property/occupation> ?v1 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. }","```sparql
# Query to find the associated musical artist of Bill Evans
SELECT ?associatedArtist WHERE {
  wd:Q1234 wdt:P106 wd:Q33999 . # Bill Evans is a musician
  ?associatedArtist wdt:P106 wd:Q33999 . # Associated artist is also a musician
  ?association wdt:P170 wd:Q1234 ; # Association with Bill Evans
               wdt:P361 ?associatedArtist .
}

UNION

# Query to find the person born as Paul Laurence Dunbar Chambers Jr. and their associated musical artist
SELECT ?associatedArtist WHERE {
  wd:Q1245 wdt:P31 wd:Q33999 . # Chick Corea is a musician
  ?association wdt:P19 wd:Q1245 ; # Born as Paul Laurence Dunbar Chambers Jr.
               wdt:P106 wd:Q33999 . # Profession matches that of Bob Marley (musician)
  ?associatedArtist wdt:P106 wd:Q33999 . # Associated artist is also a musician
  ?association2 wdt:P361 ?associatedArtist ; # Association with Chick Corea
                wdt:P170 wd:Q1245 .
}
```",5,7,6,2,3,3,3,71,0,0,1,0,0.0,0
926,43,val,Give me the successor of the child of the spouse of Şermi Kadın and child of Ahmed III and father of Mahmud II.,SELECT ?result WHERE { <http://dbpedia.org/resource/Ahmed_III> <http://dbpedia.org/ontology/child> ?result . ?v3 <http://dbpedia.org/property/father> ?v1 . ?v3 <http://dbpedia.org/ontology/successor> ?result . ?v1 <http://dbpedia.org/ontology/spouse> <http://dbpedia.org/resource/Şermi_Kadın> . <http://dbpedia.org/resource/Mahmud_II> <http://dbpedia.org/property/father> ?result . },"```sparql
SELECT ?successor WHERE {
  wd:Q1234567 wdt:P26 wd:Q7890123 . # Abdul Hamid I (father of Mahmud II)
  wd:Q7890123 wdt:P57 ?successor .   # Successor of Abdul Hamid I
}
```

Note: Replace `wd:Q1234567` with the actual DBpedia ID for Abdul Hamid I and `wd:Q7890123` with the actual DBpedia ID for Mahmud II. The property `P26` is used to denote spouse, `P57` for successor, and `P25` for child.",5,5,6,3,3,3,3,71,0,0,1,0,0.0,0
158,17,val,"Give me the entity in France and party of the successor, that is a prime minister and an office holder and a politician, of the person deceased, that is an office holder and a politician, on 1945-09-15.","SELECT ?result WHERE { ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?result <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/France> . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v3 <http://dbpedia.org/ontology/party> ?result . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v0 <http://dbpedia.org/ontology/deathDate> ""1945-09-15""^^<http://www.w3.org/2001/XMLSchema#date> . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/PrimeMinister>. ?v0 <http://dbpedia.org/ontology/successor> ?v3 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?successor ?party WHERE {
  # Édouard Daladier's death date
  VALUES ?daladier { dbr:Édouard_Daladier }
  
  # Find the successor who was Prime Minister of France after Daladier
  ?successor dbo:officeHolderOf dbr:Prime_Minister_of_France ;
            dbo:predecessor ?daladier ;
            a dbo:Politician ;
            dbp:country dbr:France .
  
  # Get the political party of the successor
  ?successor dbp:party ?party .
}
```",4,9,5,3,2,3,2,20,0,0,1,0,0.0,0
527,16,val,"Give me the author of the work, that is a work and a book, of Tom Baker and actor of the movie, that is a work and English and a television show, with Bernard Bresslaw.",SELECT ?result WHERE { ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Book>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?v2 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/United_Kingdom>. ?v2 <http://dbpedia.org/property/starring> <http://dbpedia.org/resource/Bernard_Bresslaw> . ?v3 <http://dbpedia.org/property/author> <http://dbpedia.org/resource/Tom_Baker> . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/TelevisionShow>. ?v2 <http://dbpedia.org/property/starring> ?result . ?v3 <http://dbpedia.org/property/author> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?author WHERE {
  # Step 1: Find books authored by Tom Baker
  ?book a dbo:Book ;
        dbo:author dbr:Tom_Baker .

  # Step 2: Find TV shows in English featuring Bernard Bresslaw
  ?tvShow a dbo:TelevisionSeries ;
          dbo:country dbr:United_Kingdom ; # Assuming the country is UK for English TV shows
          dbo:starring dbr:Bernard_Bresslaw .

  # Step 3: Find common link (author of the book)
  ?book dbo:author ?author .
}
```",4,9,5,2,2,3,2,20,0,0,1,0,0.0,0
465,44,val,"Give me the successor of the child, that is a royalty, of Anne of Brittany and successor of Ercole II d'Este, Duke of Ferrara and spouse of the child, that is a royalty, of Ferdinand I, Holy Roman Emperor.","SELECT ?result WHERE { <http://dbpedia.org/resource/Ferdinand_I,_Holy_Roman_Emperor> <http://dbpedia.org/ontology/child> ?v4 . <http://dbpedia.org/resource/Ercole_II_d'Este,_Duke_of_Ferrara> <http://dbpedia.org/ontology/successor> ?result . <http://dbpedia.org/resource/Anne_of_Brittany> <http://dbpedia.org/ontology/child> ?v2 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v2 <http://dbpedia.org/ontology/successor> ?result . ?result <http://dbpedia.org/ontology/spouse> ?v4 . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?successor WHERE {
  ?anne dbo:spouse ?charles .
  ?anne dbo:spouse ?louis .
  ?claudine dbo:parent ?anne ;
            a dbo:Monarch .
  ?francis dbo:spouse ?claudine .
  ?henry dbo:parent ?francis,?claudine .
  
  ?ercole dbo:succeededBy ?alfonso .
  ?cesare dbo:predecessor ?alfonso .

  ?ferdinand dbo:child ?joanna .
  ?philip dbo:spouse ?joanna .
  ?mary dbo:parent ?philip,?joanna ;
         a dbo:Monarch .
  
  ?cesare dbp:succeededBy ?successor .
}
```",5,7,6,2,3,3,3,71,0,0,1,0,0.0,0
47,50,val,"Give me the office of the awardee of Padma Vibhushan and office of the awardee of the award, that is an award, of Mantu Ghosh.",SELECT ?result WHERE { ?v4 <http://dbpedia.org/property/awards> ?v0 . <http://dbpedia.org/resource/Mantu_Ghosh> <http://dbpedia.org/property/awards> ?v0 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Award>. ?v3 <http://dbpedia.org/property/office> ?result . ?v4 <http://dbpedia.org/property/office> ?result . ?v3 <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/Padma_Vibhushan> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?padmaVibhushanOffice ?mantuGhoshAward ?mantuGhoshOffice WHERE {
  # Find offices of Padma Vibhushan awardees
  ?person dbo:award dbr:Padma_Vibhushan ;
          dbo:occupation ?padmaVibhushanOffice .

  # Find Mantu Ghosh's award and his office
  dbr:Mantu_Ghosh dbo:award ?mantuGhoshAward .
  dbr:Mantu_Ghosh dbo:occupation ?mantuGhoshOffice .
}
```",5,6,6,3,2,3,3,71,0,84,1,0.0,0.0,0
124,43,val,"Give me the commander in Mahdist War and military force of the war, that is an event and a military conflict and a societal event, of the awardee of British South Africa Company Medal and military force of Battle of Atbara.",SELECT ?result WHERE { ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?v0 <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/British_South_Africa_Company_Medal> . <http://dbpedia.org/resource/Mahdist_War> <http://dbpedia.org/ontology/commander> ?result . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?result <http://dbpedia.org/ontology/battle> ?v4 . ?v0 <http://dbpedia.org/ontology/battle> ?v4 . ?result <http://dbpedia.org/ontology/battle> <http://dbpedia.org/resource/Battle_of_Atbara> . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?commander ?militaryForce ?awardee WHERE {
  # Mahdist War details
  VALUES (?event) { dbr:Mahdist_War }
  
  # Commander of the Mahdist War
  ?commander dbo:role ?role .
  FILTER(CONTAINS(LCASE(?role), ""mahdi"") || CONTAINS(LCASE(?role), ""commander""))
  ?commander dbo:associatedWith ?event .

  # Military force involved in the Mahdist War
  ?militaryForce dbo:participatedIn ?event .
  
  # Awardee of the British South Africa Company Medal and participant in Battle of Atbara
  ?awardee dbo:receivedAward dbr:British_South_Africa_Company_Medal ;
           dbo:participatedIn dbr:Battle_of_Atbara .

  # Ensure Mahdist War is a military conflict and societal event
  ?event rdf:type ?eventType .
  FILTER(?eventType IN (dbr:Military_conflict, dbr:Societal_event))
}
```",5,8,6,3,3,3,3,71,0,0,1,0,0.0,0
933,43,val,Give me the reference to the birth name of the professional in Musician and band of The Ramong Sound and band of Mike Elliott (saxophonist).,SELECT ?result WHERE { <http://dbpedia.org/resource/Mike_Elliott_(saxophonist)> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v1 <http://dbpedia.org/property/birthName> ?v3 . <http://dbpedia.org/resource/The_Ramong_Sound> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?result <http://xmlns.com/foaf/0.1/name> ?v3 . ?v1 <http://dbpedia.org/property/occupation> <http://dbpedia.org/resource/Musician> . },"```sparql
# Query for The Ramong Sound (assuming it refers to ""The Rolling Stones"")
SELECT ?birthName WHERE {
  ?person dbo:bandMember dbr:The_Rolling_Stones .
  ?person foaf:name ?name .
  FILTER regex(?name, ""Ramong Sound"", ""i"") # Adjust based on correct band name
  OPTIONAL { ?person foaf:name ?birthName . }
}

# Query for Mike Elliott (saxophonist)
SELECT ?birthName WHERE {
  ?person dbo:instrument dbr:Saxophone .
  ?person foaf:name ""Mike Elliott"" .
  OPTIONAL { ?person foaf:name ?birthName . }
}
```",5,5,6,3,3,3,3,71,0,0,1,0,0.0,0
453,7,val,"Give me the religion of the birth place, that is a country, of William Denning and religion of John Henry Newman.",SELECT ?result WHERE { <http://dbpedia.org/resource/John_Henry_Newman> <http://dbpedia.org/ontology/religion> ?result . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. <http://dbpedia.org/resource/William_Denning> <http://dbpedia.org/ontology/birthPlace> ?v2 . ?v2 <http://dbpedia.org/ontology/religion> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?denningBirthCountry ?denningReligion ?newmanReligion WHERE {
  # Find William Denning's birthplace and check if it is a country
  dbr:William_Denning dbo:birthPlace ?birthPlace .
  
  OPTIONAL { 
    ?birthPlace rdf:type dbo:Country .
    ?birthPlace dbo:religion ?denningReligion .
    BIND(?birthPlace AS ?denningBirthCountry)
  }
  
  # Find John Henry Newman's religion
  dbr:John_Henry_Newman dbo:religion ?newmanReligion .
}
```",3,4,4,2,2,2,2,9,1,2,0,0.3333333333333333,1.0,0.5
582,47,val,"Give me the player in the father, that is an athlete and a soccer manager and a sports manager, of the child of Kazuaki Nagasawa and reference to the residence of Hirotaka Sugawara.",SELECT ?result WHERE { ?v0 <http://dbpedia.org/property/father> ?v4 . ?result <http://xmlns.com/foaf/0.1/name> ?v2 . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Athlete>. ?v0 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Kazuaki_Nagasawa> . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsManager>. <http://dbpedia.org/resource/Hirotaka_Sugawara> <http://dbpedia.org/property/residence> ?v2 . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerManager>. ?v4 <http://dbpedia.org/ontology/team> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT ?father ?residence WHERE {
  # Find Kazuaki Nagasawa's child
  ?child dbo:parent ?kazuakiNagasawa .
  ?kazuakiNagasawa foaf:name ""Kazuaki Nagasawa"" .

  # Identify the father of that child who is an athlete, soccer manager, and sports manager
  ?father dbo:spouse ?mother .
  ?mother dbo:child ?child .
  
  FILTER EXISTS { ?father dbo:occupation dbr:Athlete . }
  FILTER EXISTS { ?father dbo:occupation dbr:Soccer_Manager . }
  FILTER EXISTS { ?father dbo:occupation dbr:Sports_Manager . }

  # Retrieve the residence of Hirotaka Sugawara
  ?sugawara foaf:name ""Hirotaka Sugawara"" .
  ?sugawara dbo:residenceLocation ?residence .
}
```",5,8,6,3,2,3,3,71,0,0,1,0,0.0,0
445,47,val,"Give me the death place of the awardee of the establishment of 1820-03-10 and entity in the residence, that is a country, of Anna Sharkey.","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/location> ?v2 . ?v4 <http://dbpedia.org/ontology/deathPlace> ?result . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. ?v0 <http://dbpedia.org/ontology/foundingDate> ""1820-03-10""^^<http://www.w3.org/2001/XMLSchema#date> . <http://dbpedia.org/resource/Anna_Sharkey> <http://dbpedia.org/property/residence> ?v2 . ?v4 <http://dbpedia.org/property/awards> ?v0 . }","```sparql
# Step 1: Find an institution or award established on March 10, 1820
SELECT ?institution WHERE {
  ?institution dbo:foundingDate ""1820-03-10""^^xsd:date .
}

# Assuming we find an institution, let's say it's the Royal Society of Literature (hypothetical example)
# Step 2: Find a notable awardee associated with this institution
SELECT ?awardee WHERE {
  ?award dbo:recipient ?awardee .
  ?award dbo:givenBy <http://dbpedia.org/resource/Royal_Society_of_Literature> .
}

# Assuming we identify an awardee, let's say it's Charles Dickens (hypothetical example)
# Step 3: Find the death place of this awardee
SELECT ?deathPlace WHERE {
  wd:Q318 wikibase:P19 ?deathPlace .
}

# Step 4: Determine Anna Sharkey's country of residence
SELECT ?country WHERE {
  wd:Q123456 dbo:residenceCountry ?country .
}

# Step 5: Check if the death place is in the same country as Anna Sharkey's residence
SELECT ?deathPlace WHERE {
  wd:Q318 wikibase:P19 ?deathPlace .
  ?deathPlace wdt:P17 ?country .
  wd:Q123456 dbo:residenceCountry ?country .
}
```

Note: Replace `wd:Q318` with the actual DBpedia ID of the identified awardee and `wd:Q123456` with the DBpedia ID for Anna Sharkey.",5,6,6,3,2,3,3,71,0,0,1,0,0.0,0
417,55,val,"Give me the spouse of the parent, that is a royalty, of Count Ingolf of Rosenborg and child of the child, that is a royalty, of Frederick Francis III, Grand Duke of Mecklenburg-Schwerin and child of the father of Frederick IX of Denmark.","SELECT ?result WHERE { ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v2 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Frederick_Francis_III,_Grand_Duke_of_Mecklenburg-Schwerin> . ?result <http://dbpedia.org/property/father> ?v5 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?result <http://dbpedia.org/ontology/parent> ?v2 . ?v3 <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Count_Ingolf_of_Rosenborg> . ?result <http://dbpedia.org/ontology/spouse> ?v3 . <http://dbpedia.org/resource/Frederick_IX_of_Denmark> <http://dbpedia.org/property/father> ?v5 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?spouse WHERE {
  # Count Ingolf of Rosenborg's royal parent and their spouse
  ?countIngolf a dbo:Count ;
               dbo:parent ?royalParent .
  ?royalParent a dbo:Monarch ;
               dbo:spouse ?spouse .

  # Frederick Francis III's child who is royalty
  dbr:Frederick_Francis_III_Grand_Duke_of_Mecklenburg-Schwerin dbo:child ?royalChild .
  ?royalChild a dbo:Monarch ;
              dbo:parent ?grandChild .

  # Frederick IX of Denmark's father
  dbr:Frederick_IX_of_Denmark dbo:father ?frederickVIII .
  ?frederickVIII dbo:child ?commonChild .

  # The common child fitting both descriptions
  FILTER (?spouse = ?grandChild && ?grandChild = ?commonChild)
}
```",6,8,7,2,3,3,3,71,0,0,1,0,0.0,0
417,46,val,"Give me the spouse of the parent, that is a royalty, of the child of Knud, Hereditary Prince of Denmark and child of the father of Frederick IX of Denmark.","SELECT ?result WHERE { ?v2 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Knud,_Hereditary_Prince_of_Denmark> . <http://dbpedia.org/resource/Frederick_IX_of_Denmark> <http://dbpedia.org/property/father> ?v4 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?result <http://dbpedia.org/ontology/spouse> ?v1 . ?v1 <http://dbpedia.org/ontology/child> ?v2 . ?result <http://dbpedia.org/property/father> ?v4 . }","```sparql
SELECT ?spouse WHERE {
  # Step 1: Identify Frederick IX of Denmark
  wd:Fredrik_IX_of_Denmark wdt:P22 ?fatherOfFrederickIX .
  
  # Step 2: Find his father (Christian X)
  ?fatherOfFrederickIX rdfs:label ""Christian X""@en .

  # Step 3: Identify Knud, Hereditary Prince of Denmark's child who is also a child of Christian X
  wd:Knud,_Hereditary_Prince_of_Denmark wdt:P40 ?child .
  ?child wdt:P22 ?parentOfChild .
  
  # Ensure the parent is Christian X
  FILTER(?parentOfChild = wd:Fredrik_XII_of_Schleswig-Holstein-Gottorp)

  # Step 4: Determine which parent of this child is royalty (Christian X)
  ?child wdt:P22/wdt:P31/wdt:P279* wd:Q5 .

  # Step 5: Find the spouse of Christian X
  ?parentOfChild wdt:P26 ?spouse .
}
```",5,6,6,3,2,3,3,71,0,0,1,0,0.0,0
987,43,val,"Give me the birth place of the actor of the show, that is a film, with Emir Hadžihafizbegović and birth place of Dado Polumenta and entity in Montenegro.",SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Film>. ?v1 <http://dbpedia.org/ontology/starring> <http://dbpedia.org/resource/Emir_Hadžihafizbegović> . ?result <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Montenegro> . ?v3 <http://dbpedia.org/ontology/birthPlace> ?result . ?v1 <http://dbpedia.org/property/starring> ?v3 . <http://dbpedia.org/resource/Dado_Polumenta> <http://dbpedia.org/ontology/birthPlace> ?result . },"```sparql
# Query to find a film featuring Emir Hadžihafizbegović
SELECT ?film WHERE {
  wd:Q123456 dbo:starring wd:Q789012 . # Replace Q123456 with Emir Hadžihafizbegović's DBpedia ID and Q789012 with the film's DBpedia ID
}

# Query to find actors from that film who are also in TV shows
SELECT DISTINCT ?actor WHERE {
  ?film dbo:starring ?actor .
  ?actor dbo:spouseOrPartner ?tvShow . # Assuming involvement in a show through spouse or partner, adjust as needed
}

# Query to get the birthplace of the actor from the film and show
SELECT ?birthPlace WHERE {
  ?actor dbo:birthPlace ?birthPlace .
}

# Query to find the birthplace of Dado Polumenta
SELECT ?birthPlace WHERE {
  wd:Q987654 dbo:birthPlace ?birthPlace . # Replace Q987654 with Dado Polumenta's DBpedia ID
}

# Query to find an entity in Montenegro
SELECT DISTINCT ?entity WHERE {
  ?entity wdt:P17 wd:Q30 ; # P17 is the property for country, and Q30 is the DBpedia ID for Montenegro
  rdfs:label ?label .
  FILTER (lang(?label) = 'en')
}
```",5,6,6,3,3,3,3,71,0,0,1,0,0.0,0
917,42,val,"Give me the parent of the child, that is a royalty, of Kamehameha IV and child of the father of Kamehameha IV and child of Kekūanāoʻa.",SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?result <http://dbpedia.org/ontology/child> ?v1 . ?result <http://dbpedia.org/ontology/parent> <http://dbpedia.org/resource/Kekūanāoʻa> . ?result <http://dbpedia.org/property/father> ?v0 . ?v1 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Kamehameha_IV> . <http://dbpedia.org/resource/Kamehameha_IV> <http://dbpedia.org/property/father> ?v0 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?parent WHERE {
  # Kamehameha IV (Alexander Liholiho)
  ?kamehamehaIV a dbo:Monarch ;
                foaf:name ""Kamehameha IV""@en ;
                dbo:spouse ?mother .

  # Father of Kamehameha IV
  ?father a dbo:Monarch ;
          dbo:child ?kamehamehaIV ;
          foaf:name ""Kamehameha II""@en .

  # Mother of Kamehameha IV (Kamāmalu)
  ?mother a dbo:Person ;
          foaf:name ""Kamāmalu""@en ;
          dbo:spouse ?father .

  # Kekūanāoʻa
  ?kekuanaoa a dbo:Person ;
              foaf:name ""Kekūanāoʻa""@en .

  # Child of both Kamehameha II and Kekūanāoʻa (Princess Victoria Kamāmalu)
  ?child a dbo:Monarch ;
         dbo:parent ?mother, ?kekuanaoa ;
         foaf:name ""Victoria Kamāmalu""@en .

  # Parent of the identified royalty
  ?parent dbo:spouse ?mother .
}
```",5,6,6,2,3,3,3,71,0,0,1,0,0.0,0
715,48,val,"Give me the commander in the force, that is a military conflict, of the native of Morocco and leader of the office, that is a government agency and an organisation, of Carlos Franco Iribarnegaray.",SELECT ?result WHERE { ?v3 <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Morocco> . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v2 <http://dbpedia.org/ontology/commander> ?result . ?v1 <http://dbpedia.org/ontology/leader> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/GovernmentAgency>. <http://dbpedia.org/resource/Carlos_Franco_Iribarnegaray> <http://dbpedia.org/property/office> ?v1 . ?v2 <http://dbpedia.org/ontology/commander> ?v3 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?commander WHERE {
  # Identify Carlos Franco Iribarnegaray and his role
  ?carlos a dbo:Person ;
          foaf:name ""Carlos Franco Iribarnegaray"" ;
          dbo:office ?office .

  # Ensure the office is both a government agency and an organization
  ?office a dbo:GovernmentAgency, dbo:Organization .

  # Identify a Moroccan native involved in a military conflict
  ?moroccan a dbo:Person ;
            dbo:nationality dbr:Morocco ;
            dbo:militaryConflict ?conflict .

  # Find the commander of the force in that conflict
  ?conflict dbo:commander ?commander .
}
```",5,8,6,3,2,3,3,71,0,0,1,0,0.0,0
47,48,val,"Give me the office of the awardee of Padma Vibhushan and office of the administration of the commander, that is a politician, in Operation Green Hunt.",SELECT ?result WHERE { ?v1 <http://dbpedia.org/property/office> ?result . ?v1 <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/Padma_Vibhushan> . <http://dbpedia.org/resource/Operation_Green_Hunt> <http://dbpedia.org/ontology/commander> ?v3 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v2 <http://dbpedia.org/property/office> ?result . ?v2 <http://dbpedia.org/property/governor> ?v3 . },"```sparql
# Query for the office of the awardee of Padma Vibhushan
SELECT ?person ?office WHERE {
  ?person dbo:award dbp:Padma_Vibhushan .
  OPTIONAL { ?person dbo:occupation ?office . }
}

UNION

# Query for the office of the politician involved in Operation Green Hunt
SELECT ?person ?office WHERE {
  ?person dbo:wikiPageWikiLink dbpedia:Operation_Green_Hunt .
  ?person rdf:type dbo:Politician .
  OPTIONAL { ?person dbo:occupation ?office . }
}
```",5,6,6,3,2,3,3,71,0,0,22,0,0.0,0
791,54,val,"Give me the predecessor of the child of the child, that is an office holder and a royalty, of Emperor Go-Shirakawa and spouse of the spouse, that is a royalty, of Emperor Takakura and father of Emperor Go-Toba.",SELECT ?result WHERE { <http://dbpedia.org/resource/Emperor_Go-Toba> <http://dbpedia.org/property/father> ?result . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?result <http://dbpedia.org/ontology/successor> ?v5 . ?v5 <http://dbpedia.org/property/father> ?v0 . ?v3 <http://dbpedia.org/ontology/spouse> <http://dbpedia.org/resource/Emperor_Takakura> . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?result <http://dbpedia.org/ontology/spouse> ?v3 . ?v0 <http://dbpedia.org/ontology/parent> <http://dbpedia.org/resource/Emperor_Go-Shirakawa> . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT DISTINCT ?predecessor WHERE {
  # Step 1: Find Emperor Go-Shirakawa's child who is an office holder and royalty
  ?child dbo:parent dbr:Emperor_Go-Shirakawa ;
         a dbo:Monarch, dbo:OfficeHolder .

  # Step 2: Find the spouse of that child
  ?spouse dbp:spouse ?child .

  # Step 3: Identify Emperor Takakura's spouse who is royalty
  ?takakuraSpouse dbp:spouse dbr:Emperor_Takakura ;
                  a dbo:Monarch .

  # Ensure the spouse from step 2 is the same as the spouse from step 3
  FILTER (?spouse = ?takakuraSpouse)

  # Step 4: Determine the father of Emperor Go-Toba
  dbr:Emperor_Go-Toba dbo:father ?father .

  # Ensure the father from step 4 is the same as the spouse from step 2
  FILTER (?spouse = ?father)

  # Step 5: Find the predecessor of the child of the spouse identified in step 2
  ?childOfSpouse dbp:parent ?spouse ;
                 a dbo:Monarch, dbo:OfficeHolder .

  ?predecessor dbo:succeededBy ?childOfSpouse .
}
```",6,9,7,3,3,3,3,71,0,0,1,0,0.0,0
917,53,val,"Give me the child of Kekūanāoʻa and child of the father of Kamehameha IV and parent of the child, that is a royalty, of the mayor of Hawaiian Kingdom.",SELECT ?result WHERE { ?result <http://dbpedia.org/property/father> ?v0 . <http://dbpedia.org/resource/Hawaiian_Kingdom> <http://dbpedia.org/property/leader> ?v3 . <http://dbpedia.org/resource/Kamehameha_IV> <http://dbpedia.org/property/father> ?v0 . ?result <http://dbpedia.org/ontology/parent> <http://dbpedia.org/resource/Kekūanāoʻa> . ?result <http://dbpedia.org/ontology/child> ?v1 . ?v1 <http://dbpedia.org/property/father> ?v3 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?person WHERE {
  # Kekūanāoʻa's child
  VALUES (?kekuanaoaChild) { dbr:Bernice_Pauahi_Bishop }

  # Father of Kamehameha IV (Kamehameha I)
  VALUES (?kamehamehaIVFather) { dbr/Kamehameha_I }

  # Child of Kamehameha I
  ?child dbo:parent ?kamehamehaIVFather .
  
  # Mayor of Hawaiian Kingdom (assuming Lorrin A. Thurston for historical context)
  VALUES (?mayor) { dbr/Lorrin_A._Thurston }
  
  # Child of the mayor and their parent
  ?mayorChild dbo:parent ?mayor .
  ?mayorParent dbo:child ?mayorChild .

  # Find a royal figure connected through these lines
  ?person dbo:parent ?kekuanaoaChild .
  ?person dbo:parent ?child .
  ?person dbo:parent ?mayorParent .
  
  FILTER (?person = ?kekuanaoaChild) # Ensuring the person is Bernice Pauahi Bishop
}
```",6,7,7,3,3,3,3,71,0,0,2,0,0.0,0
274,23,val,"Give me the associated musical artist of the actor, that is a musical artist, of Imagine the Sound and band member of the person born, that is a musical artist, as John Birks Gillespie.","SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . <http://dbpedia.org/resource/Imagine_the_Sound> <http://dbpedia.org/property/starring> ?v1 . ?result <http://dbpedia.org/ontology/associatedMusicalArtist> ?v2 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?v2 <http://dbpedia.org/property/birthName> ""John Birks Gillespie""@en . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?artist WHERE {
  # John Legend as an actor and musician
  dbr:John_Legend dbo:profession dbr:Musical_artist ;
                  dbo:profession dbr:Actor .

  # Dizzy Gillespie's band members
  dbr:Dizzy_Gillespie dbo:musicGroupMember ?gillespieBandMember .
  
  # Find the intersection of John Legend's associated artists and Dizzy Gillespie's band members
  ?artist dbo:associatedMusicalArtist dbr:John_Legend ;
          rdfs:label ?name .

  FILTER(CONTAINS(LCASE(?name), ""dizzy gillespie"") || CONTAINS(LCASE(?name), ""jazz musician""))
}
```",4,6,5,2,2,2,3,28,0,0,4,0,0.0,0
236,15,val,"Give me the party member of the administration, that is an organisation, of the person decedent, that is a politician and an office holder, at Quincy, Massachusetts and party member of Democratic-Republican Party.","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/party> ?v1 . ?v0 <http://dbpedia.org/ontology/deathPlace> <http://dbpedia.org/resource/Quincy,_Massachusetts> . ?result <http://dbpedia.org/ontology/party> <http://dbpedia.org/resource/Democratic-Republican_Party> . ?v1 <http://dbpedia.org/property/leader> ?v0 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?person ?organization WHERE {
  ?person a dbo:OfficeHolder ;
          dbo:residence dbr:Quincy,_Massachusetts ;
          dbp:party dbc:Democratic-Republican_Party .
  
  OPTIONAL { ?person dbo:memberOf ?organization . }
}
```",4,7,5,3,2,3,2,20,0,0,18,0,0.0,0
382,17,val,"Give me the birthplace of Björn Joppe and landmark at elevation of the award of the reference, that is a college coach and a coach, to Harry Combes.","SELECT ?result WHERE { ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Coach>. <http://dbpedia.org/resource/Björn_Joppe> <http://dbpedia.org/ontology/birthPlace> ?result . ?v0 <http://xmlns.com/foaf/0.1/name> ""Harry Combes""@en . ?result <http://dbpedia.org/ontology/elevation> ?v3 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/CollegeCoach>. ?v0 <http://dbpedia.org/property/awards> ?v3 . }","```sparql
# Query for Björn Joppe's birthplace
SELECT ?birthPlace WHERE {
  dbpedia:Joppe_Bj%C3%B6rn dbo:birthPlace ?birthPlace .
}

UNION

# Query to find Harry Combes' award and corresponding landmark by elevation
{
  # Assuming the award is a numerical value, we need to identify it first
  SELECT ?award WHERE {
    dbpedia:Combes_Harry dbo:awardReceived ?award .
  }
  
  # Find a landmark with an elevation matching the award's number
  SELECT ?landmark WHERE {
    ?landmark dbo:elevation ?elevation .
    FILTER(?elevation = ?award)
  }
}
```",4,6,5,3,2,3,2,20,0,0,1,0,0.0,0
865,49,val,"Give me the father of the child of the father of Abul Maal Abdul Muhith and native of the residence, that is a country, of Ram Jaipal Singh Yadav.",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/birthPlace> ?v0 . ?v2 <http://dbpedia.org/property/father> ?result . <http://dbpedia.org/resource/Abul_Maal_Abdul_Muhith> <http://dbpedia.org/property/father> ?v4 . <http://dbpedia.org/resource/Ram_Jaipal_Singh_Yadav> <http://dbpedia.org/property/residence> ?v0 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. ?v2 <http://dbpedia.org/property/father> ?v4 . },"```sparql
# Step 1: Find the father of Abul Maal Abdul Muhith
SELECT ?father WHERE {
    wd:Q123456 wdt:P22 ?father .
}

# Step 2: Find Ram Jaipal Singh Yadav's native place and ensure it is a country
SELECT ?nativePlace WHERE {
    wd:Q654321 wdt:P19 ?nativePlace .
    FILTER (isBlank(?nativePlace) = false)
}
FILTER EXISTS { ?nativePlace wdt:P31/wdt:P279* wd:Q6256 } # Q6256 is the DBpedia class for 'country'

# Step 3: Ensure the father's native place matches the country
SELECT ?father WHERE {
    wd:Q123456 wdt:P22 ?father .
    ?father wdt:P19 ?nativePlace .
    FILTER EXISTS { ?nativePlace wdt:P31/wdt:P279* wd:Q6256 } # Q6256 is the DBpedia class for 'country'
}
```

Note: Replace `wd:Q123456` with the actual DBpedia entity ID for Abul Maal Abdul Muhith and `wd:Q654321` with the entity ID for Ram Jaipal Singh Yadav. These IDs need to be looked up in DBpedia.",5,6,6,3,2,3,3,71,0,0,1,0,0.0,0
965,49,val,"Give me the spouse of the spouse of Princess Victoria of Hesse and by Rhine and parent of the person born, that is a noble, as the birth name of George Mountbatten, 2nd Marquess of Milford Haven.","SELECT ?result WHERE { <http://dbpedia.org/resource/George_Mountbatten,_2nd_Marquess_of_Milford_Haven> <http://dbpedia.org/property/birthName> ?v4 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Noble>. ?v0 <http://dbpedia.org/property/birthName> ?v4 . <http://dbpedia.org/resource/Princess_Victoria_of_Hesse_and_by_Rhine> <http://dbpedia.org/ontology/spouse> ?v2 . ?result <http://dbpedia.org/ontology/spouse> ?v2 . ?v0 <http://dbpedia.org/ontology/parent> ?result . }","```sparql
SELECT ?princePhilipBirthName WHERE {
  wd:Q1198 wdt:P26 ?princessAlice . # Princess Victoria's spouse (Ernest Louis)
  ?princessAlice wdt:P26 ?princePhilip . # Spouse of Ernest Louis is Princess Alice
  ?princePhilip wdt:P31 wd:Q483501 . # Prince Philip, Duke of Edinburgh
  ?princePhilip wdt:P735 wd:Q1198 . # Parent of George Mountbatten, 2nd Marquess of Milford Haven
  ?princePhilip wdt:P1476 ?princePhilipBirthName . # Birth name of Prince Philip
}
```",5,6,6,3,2,3,3,71,0,0,1,0,0.0,0
124,44,val,"Give me the military force of the force, that is a societal event and a military conflict, of Herbert Kitchener, 1st Earl Kitchener and military force of the war, that is an event and a military conflict and a societal event, of Frank Rhodes (British Army officer) and commander in Mahdist War.","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/battle> ?v4 . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?result <http://dbpedia.org/ontology/battle> ?v2 . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. <http://dbpedia.org/resource/Frank_Rhodes_(British_Army_officer)> <http://dbpedia.org/ontology/battle> ?v4 . <http://dbpedia.org/resource/Mahdist_War> <http://dbpedia.org/ontology/commander> ?result . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v2 <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Herbert_Kitchener,_1st_Earl_Kitchener> . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?force WHERE {
  # Herbert Kitchener's involvement in a societal event and military conflict
  OPTIONAL { 
    dbr:Herbert_Kitchener_1st_Earl_Kitchener dbo:militaryConflict ?kitchenerConflict .
    ?kitchenerConflict dbo:type ?typeK .
    FILTER(?typeK IN (dbr:Military_Conflict, dbr:Societal_Event))
  }

  # Frank Rhodes' involvement in a societal event and military conflict
  OPTIONAL { 
    dbr:Frank_Rhodes_(British_Army_officer) dbo:militaryConflict ?rhodesConflict .
    ?rhodesConflict dbo:type ?typeR .
    FILTER(?typeR IN (dbr:Military_Conflict, dbr:Societal_Event))
  }

  # Common military force or conflict
  OPTIONAL {
    ?force dbo:commander ?kitchener .
    ?force dbo:commander ?rhodes .
    FILTER(?kitchener = dbr:Herbert_Kitchener_1st_Earl_Kitchener && ?rhodes = dbr:Frank_Rhodes_(British_Army_officer))
  }
}
```",5,10,6,2,3,3,3,71,0,0,3,0,0.0,0
892,48,val,"Give me the entity in the administration, that is Italian and a region and a settlement and an administrative region, of Democratic Party (Italy) and entity in the profession of the true self of Enrico Crolla.","SELECT ?result WHERE { ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. ?v3 <http://dbpedia.org/property/occupation> ?v1 . ?v3 <http://xmlns.com/foaf/0.1/givenName> ""Enrico Crolla""@en . ?v0 <http://dbpedia.org/property/leaderParty> <http://dbpedia.org/resource/Democratic_Party_(Italy)> . ?result <http://dbpedia.org/ontology/province> ?v0 . ?result <http://dbpedia.org/ontology/country> ?v1 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/AdministrativeRegion>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Region>. ?v0 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Italy>. }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT DISTINCT ?region ?profession WHERE {
  # Part 1: Find Italian regions that are settlements and administrative regions associated with the Democratic Party
  ?region a dbo:Region ;
          dbo:country dbr:Italy ;
          dbo:settlementType dbr:Settlement ;
          dbo:administrativeRegion true ;
          dbp:governingParty dbr:Democratic_Party_(Italy) .

  # Part 2: Find Enrico Crolla's profession
  ?enrico a dbo:Person ;
          foaf:name ""Enrico Crolla"" .
  ?enrico dbo:profession ?profession .
}
```",5,9,6,3,2,3,3,71,0,0,587,0,0.0,0
273,16,val,Give me the spouse of the child of Giovanni Agnelli and parent of the alumnus of University of Turin.,SELECT ?result WHERE { <http://dbpedia.org/resource/Giovanni_Agnelli> <http://dbpedia.org/ontology/child> ?v2 . ?v3 <http://dbpedia.org/ontology/parent> ?result . ?v3 <http://dbpedia.org/ontology/almaMater> <http://dbpedia.org/resource/University_of_Turin> . ?result <http://dbpedia.org/ontology/spouse> ?v2 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?spouse WHERE {
  # Giovanni Agnelli's child (Edoardo Agnelli)
  dbr:Giovanni_Agnelli dbo:child dbr:Edoardo_Agnelli .
  
  # Spouse of Edoardo Agnelli
  dbr:Edoardo_Agnelli dbo:spouse ?spouse .

  # John Elkann as child of Edoardo and Marella, alumnus of University of Turin
  ?child dbo:parent dbr:Edoardo_Agnelli .
  ?child dbo:parent ?spouse .
  ?child rdfs:label ""John Elkann""@en .
  
  # John Elkann's education at the University of Turin
  ?child dbo:almaMater dbr:University_of_Turin .
}
```",4,4,5,2,2,3,2,20,0,0,1,0,0.0,0
216,21,val,Give me the administration of the designer of Woolfe: The Red Hood Diaries and party of Campbell Newman and office of Tim Nicholls.,SELECT ?result WHERE { <http://dbpedia.org/resource/Campbell_Newman> <http://dbpedia.org/ontology/party> ?result . <http://dbpedia.org/resource/Tim_Nicholls> <http://dbpedia.org/property/office> ?result . <http://dbpedia.org/resource/Woolfe:_The_Red_Hood_Diaries> <http://dbpedia.org/property/designer> ?v0 . ?result <http://dbpedia.org/property/leader> ?v0 . },"```sparql
# Query for Gameloft (company behind Woolfe: The Red Hood Diaries)
SELECT ?gameloftDescription WHERE {
  wd:Q169878 dbp:description ?gameloftDescription .
} LIMIT 1

# Query for Campbell Newman's administration role
SELECT ?newmanRole WHERE {
  wd:Q2109788 dbo:officeHeld ?newmanOffice .
  ?newmanOffice dbo:positionTitle ?newmanRole .
} LIMIT 1

# Query for Tim Nicholls' office or position
SELECT ?nichollsPosition WHERE {
  wd:Q1055986 dbo:officeHeld ?nichollsOffice .
  ?nichollsOffice dbo:positionTitle ?nichollsPosition .
} LIMIT 1
```",4,4,5,2,3,2,3,28,0,0,1,0,0.0,0
445,55,val,"Give me the death place of the awardee of Royal Astronomical Society and entity in the residence, that is a country, of Anna Sharkey and entity in the award of George H. Cameron.",SELECT ?result WHERE { <http://dbpedia.org/resource/George_H._Cameron> <http://dbpedia.org/property/awards> ?v2 . ?v5 <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/Royal_Astronomical_Society> . ?v5 <http://dbpedia.org/ontology/deathPlace> ?result . ?result <http://dbpedia.org/ontology/location> ?v3 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. ?result <http://dbpedia.org/ontology/country> ?v2 . <http://dbpedia.org/resource/Anna_Sharkey> <http://dbpedia.org/property/residence> ?v3 . },"```sparql
# Step 1: Find an awardee of the Royal Astronomical Society
SELECT ?awardee WHERE {
  ?awardee dbo:award dbpedia:Royal_Astronomical_Society.
}

# Step 2: Find the death place of that awardee
SELECT ?deathPlace WHERE {
  ?person dbo:award dbpedia:Royal_Astronomical_Society.
  ?person dbo:placeOfBirth ?birthPlace.
  ?person dbo:deathPlace ?deathPlace.
}

# Step 3: Determine Anna Sharkey's residence country
SELECT ?country WHERE {
  dbpedia:Anna_Sharkey dbo:residenceCountry ?country.
}

# Step 4: Identify George H. Cameron's award
SELECT ?award WHERE {
  dbpedia:George_H._Cameron dbo:award ?award.
}

# Step 5: Find the common entity between Anna Sharkey's residence country and George H. Cameron's award
SELECT DISTINCT ?commonEntity WHERE {
  # Assuming we have results from previous queries stored in variables
  VALUES (?country) { <http://dbpedia.org/resource/Country_X> } # Replace with actual result
  VALUES (?award) { <http://dbpedia.org/resource/Award_Y> }     # Replace with actual result

  ?commonEntity rdfs:label ?label .
  FILTER (
    CONTAINS(LCASE(?label), LCASE(""Country X"")) || 
    CONTAINS(LCASE(?label), LCASE(""Award Y""))
  )
}
```",6,7,7,2,3,3,3,71,0,0,1,0,0.0,0
124,53,val,"Give me the military force of Battle of Tamai and commander in the war, that is a societal event and a military conflict, of the reference, that is Australian and an organisation and a military unit, to 'A' Battery, Royal Australian Artillery and military force of the force, that is a societal event and a military conflict, of Herbert Kitchener, 1st Earl Kitchener.","SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Herbert_Kitchener,_1st_Earl_Kitchener> . ?v3 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Australia>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v3 <http://xmlns.com/foaf/0.1/name> ""'A' Battery, Royal Australian Artillery""@en . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryUnit>. ?result <http://dbpedia.org/ontology/battle> ?v1 . ?v3 <http://dbpedia.org/ontology/battle> ?v2 . ?result <http://dbpedia.org/ontology/battle> <http://dbpedia.org/resource/Battle_of_Tamai> . ?v2 <http://dbpedia.org/ontology/commander> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?battle ?force ?commander WHERE {
  # Identify the Battle of Tamai
  VALUES ?battle { dbr:Battle_of_Tamai }

  # Find military forces involved in the battle
  ?battle dbo:militaryConflicts ?conflict .
  ?conflict dbo:participatingMilitaryUnit ?unit .

  # Filter for A Battery, Royal Australian Artillery
  OPTIONAL {
    ?unit rdfs:label ""A Battery, Royal Australian Artillery""@en .
  }

  # Find the commander of the force involved in the battle
  ?force dbo:commander ?commander .

  # Identify forces commanded by Herbert Kitchener during this conflict
  VALUES ?kitchener { dbr:Herbert_Kitchener_1st_Earl_Kitchener }
  OPTIONAL {
    ?force dbo:commander ?kitchener .
  }

  FILTER (lang(?unit) = 'en')
}
```",6,13,7,3,3,3,3,71,0,0,1,0,0.0,0
433,54,val,"Give me the associated musical artist of the associated musical artist, that is an artist and a musical artist, of the associated musical artist, that is a musical artist and an artist, of Ornette Coleman and professional in Musician and associated musical artist of the person born, that is a musical artist and an artist, as Paul Laurence Dunbar Chambers Jr..","SELECT ?result WHERE { ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. ?v5 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. ?v3 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . <http://dbpedia.org/resource/Ornette_Coleman> <http://dbpedia.org/ontology/associatedMusicalArtist> ?v0 . ?v0 <http://dbpedia.org/ontology/associatedMusicalArtist> ?v5 . ?v3 <http://dbpedia.org/property/birthName> ""Paul Laurence Dunbar Chambers Jr.""@en . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?result <http://dbpedia.org/property/occupation> ""Musician""@en . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. }","```sparql
# Step 1: Find associated musical artist of Paul Laurence Dunbar Chambers Jr.
SELECT ?firstAssociatedArtist WHERE {
    wd:Q123456 dbo:associatedMusicalArtist ?firstAssociatedArtist .
    ?firstAssociatedArtist rdf:type/(dbo:MusicalArtist|dbo:Artist) .
}

# Step 2: Find associated musical artist of the first associated artist
SELECT ?secondAssociatedArtist WHERE {
    ?firstAssociatedArtist dbo:associatedMusicalArtist ?secondAssociatedArtist .
    ?secondAssociatedArtist rdf:type/(dbo:MusicalArtist|dbo:Artist) .
}

# Step 3: Find associated musical artist of Ornette Coleman
SELECT ?thirdAssociatedArtist WHERE {
    wd:Q789012 dbo:associatedMusicalArtist ?thirdAssociatedArtist .
    ?thirdAssociatedArtist rdf:type/(dbo:MusicalArtist|dbo:Artist) .
}

# Step 4: Find associated musical artist of the third associated artist
SELECT ?fourthAssociatedArtist WHERE {
    ?thirdAssociatedArtist dbo:associatedMusicalArtist ?fourthAssociatedArtist .
    ?fourthAssociatedArtist rdf:type/(dbo:MusicalArtist|dbo:Artist) .
}

# Step 5: Check for commonality between second and fourth associated artists
SELECT DISTINCT ?commonArtist WHERE {
    VALUES (?artist1 ?artist2) { 
        (?secondAssociatedArtist ?fourthAssociatedArtist)
        (?fourthAssociatedArtist ?secondAssociatedArtist)
    }
    ?artist1 owl:sameAs ?commonArtist .
}
```

Note: Replace `wd:Q123456` with the actual DBpedia ID for Paul Laurence Dunbar Chambers Jr. and `wd:Q789012` with the DBpedia ID for Ornette Coleman.",6,12,7,3,3,3,3,71,0,0,3,0,0.0,0
216,50,val,"Give me the player in the coach, that is a soccer player and a sports manager and a soccer manager, of the player, that is an organisation and a sports club and a soccer club, in Džemal Berberović and team of the person born, that is a sports manager and a soccer manager and a soccer player, on 1983-12-20.","SELECT ?result WHERE { ?v0 <http://dbpedia.org/ontology/coach> ?v4 . ?result <http://dbpedia.org/ontology/coach> ?v3 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerClub>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerPlayer>. ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsManager>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsClub>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerManager>. ?v3 <http://dbpedia.org/ontology/birthDate> ""1983-12-20""^^<http://www.w3.org/2001/XMLSchema#date> . ?v4 <http://dbpedia.org/ontology/team> ?result . <http://dbpedia.org/resource/Džemal_Berberović> <http://dbpedia.org/ontology/team> ?v0 . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerManager>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsManager>. ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerPlayer>. }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?coach WHERE {
  # Step 1: Identify Džemal Berberović and his team
  dbr:Džemal_Berberović dbo:birthDate ""1983-12-20""^^xsd:date ;
                        dbo:memberOfTeam ?team .

  # Ensure the team is an organization, sports club, and soccer club
  ?team a dbo:SoccerClub ;
        a dbo:SportsOrganization .

  # Step 2: Find the coach of that team with specified roles
  ?coach dbo:position ""Coach"" ;
         dbo:memberOfTeam ?team ;
         a dbo:SoccerPlayer ;
         a dbo:SportsManager ;
         a dbo:SoccerManager .
}
```",5,14,6,3,2,3,3,71,0,0,1,0,0.0,0
495,17,val,Give me the child of Frederick I of Württemberg and father of the child of the parent of Princess Pauline of Württemberg (1810–1856).,SELECT ?result WHERE { ?v3 <http://dbpedia.org/ontology/parent> ?v0 . ?v3 <http://dbpedia.org/property/father> ?result . <http://dbpedia.org/resource/Princess_Pauline_of_Württemberg_(1810–1856)> <http://dbpedia.org/ontology/parent> ?v0 . ?result <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Frederick_I_of_Württemberg> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?child WHERE {
  # Princess Pauline's father
  dbr:Pauline_of_Württemberg dbo:father dbr:William_I,_King_of_Württemberg .
  
  # Frederick I of Württemberg is a child of William I
  dbr:Frederick_I_of_Württemberg dbo:father dbr:William_I,_King_of_Württemberg .

  # Check if Frederick I has children (to confirm he's a parent)
  OPTIONAL { 
    ?child dbo:parent dbr:Frederick_I_of_Württemberg .
  }
  
  FILTER EXISTS {
    ?child dbo:parent dbr:William_I,_King_of_Württemberg .
  }
}
```",4,4,5,3,2,3,2,20,0,0,1,0,0.0,0
507,47,val,"Give me the director of the movie, that is a movie and a work, with the person born on 1919-06-17 and spouse of the person born as Anne Voase Coates.","SELECT ?result WHERE { ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Film>. ?v4 <http://dbpedia.org/property/starring> ?v0 . ?v2 <http://dbpedia.org/property/birthName> ""Anne Voase Coates""@en . ?v4 <http://dbpedia.org/ontology/director> ?result . ?result <http://dbpedia.org/ontology/spouse> ?v2 . ?v0 <http://dbpedia.org/ontology/birthDate> ""1919-06-17""^^<http://www.w3.org/2001/XMLSchema#date> . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?director WHERE {
  # Step 1: Find person born on June 17, 1919
  ?person a dbo:Person ;
          dbo:birthDate ""1919-06-17""^^xsd:date .

  # Step 2: Find Anne Voase Coates' spouse
  ?anneVoaseCoates dbp:spouse ?spouse .
  FILTER (str(?anneVoaseCoates) = str(dbr:Anne_Voase_Coates)) .

  # Ensure the person found in step 1 is the same as the spouse from step 2
  FILTER (?person = ?spouse)

  # Step 3: Find a movie that is both a ""movie"" and a ""work""
  ?movie dbo:type dbr:Film ;
         dbo:director ?director .

  # Ensure the person found in steps 1 and 2 directed this movie
  FILTER (str(?person) = str(?director))
}
```",5,7,6,3,2,3,3,71,0,0,1,0,0.0,0
433,47,val,"Give me the associated musical artist of the person born, that is a musical artist and an artist, as Paul Laurence Dunbar Chambers Jr. and associated musical artist of the associated musical artist, that is an artist and a musical artist, of the associated musical artist, that is a musical artist and an artist, of Ornette Coleman.","SELECT ?result WHERE { ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?v0 <http://dbpedia.org/ontology/associatedMusicalArtist> ?v4 . ?v2 <http://dbpedia.org/property/birthName> ""Paul Laurence Dunbar Chambers Jr.""@en . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. ?v4 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . <http://dbpedia.org/resource/Ornette_Coleman> <http://dbpedia.org/ontology/associatedMusicalArtist> ?v0 . ?v2 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. }","```sparql
# Step 1: Find Paul Chambers' associated musical artist
SELECT ?artist1 WHERE {
  wd:Q12345 wdt:P106 wd:Q33999 . # Paul Chambers is a musician
  wd:Q12345 wdt:P463 ?artist1 .    # Associated with artist1
  ?artist1 wdt:P106 wd:Q33999 .    # Artist1 is a musician
}

# Step 2: Find the associated musical artist of the result from step 1
SELECT ?artist2 WHERE {
  ?artist1 wdt:P463 ?artist2 .     # Associated with artist2
  ?artist2 wdt:P106 wd:Q33999 .    # Artist2 is a musician
}

# Step 3: Find the associated musical artist of the result from step 2
SELECT ?finalArtist1 WHERE {
  ?artist2 wdt:P463 ?finalArtist1 . # Associated with finalArtist1
  ?finalArtist1 wdt:P106 wd:Q33999 .# FinalArtist1 is a musician
}

# Step 4: Find Ornette Coleman's associated musical artist
SELECT ?artist3 WHERE {
  wd:Q12346 wdt:P106 wd:Q33999 .   # Ornette Coleman is a musician
  wd:Q12346 wdt:P463 ?artist3 .     # Associated with artist3
  ?artist3 wdt:P106 wd:Q33999 .     # Artist3 is a musician
}

# Step 5: Find the associated musical artist of the result from step 4
SELECT ?finalArtist2 WHERE {
  ?artist3 wdt:P463 ?finalArtist2 . # Associated with finalArtist2
  ?finalArtist2 wdt:P106 wd:Q33999 .# FinalArtist2 is a musician
}

# Combine results to find the final associated musical artist
SELECT DISTINCT ?finalArtist1 ?finalArtist2 WHERE {
  { SELECT ?finalArtist1 WHERE { ... } }
  UNION
  { SELECT ?finalArtist2 WHERE { ... } }
}
```

Note: Replace `wd:Q12345` with the actual DBpedia ID for Paul Chambers and `wd:Q12346` for Ornette Coleman. The query assumes that the relationships are captured in the `P463` property (associated with) and `P106` property (occupation).",5,11,6,3,2,3,3,71,0,0,10,0,0.0,0
417,41,val,"Give me the child of Alexandrine of Mecklenburg-Schwerin and spouse of the parent, that is a royalty, of Count Ingolf of Rosenborg and child of the father of Frederick IX of Denmark.",SELECT ?result WHERE { <http://dbpedia.org/resource/Frederick_IX_of_Denmark> <http://dbpedia.org/property/father> ?v4 . ?result <http://dbpedia.org/ontology/parent> <http://dbpedia.org/resource/Alexandrine_of_Mecklenburg-Schwerin> . ?result <http://dbpedia.org/property/father> ?v4 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v2 <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Count_Ingolf_of_Rosenborg> . ?result <http://dbpedia.org/ontology/spouse> ?v2 . },"```sparql
SELECT ?child WHERE {
  # Alexandrine of Mecklenburg-Schwerin's child who is royalty and spouse of Count Ingolf's parent
  ?alexandrine dbr:Alexandrine_of_Mecklenburg-Schwerin .
  ?alexandrine dbo:spouse dbr:Christian_X_of_Denmark .
  
  # Christian X's children
  ?child dbo:parent dbr:Christian_X_of_Denmark .
  
  # Frederick IX of Denmark and his parent
  ?frederickIX dbr:Fredrik_IX_of_Denmark .
  ?frederickIX dbo:parent dbr:Christian_X_of_Denmark .

  # Count Ingolf's parent (Frederick IX)
  ?ingolf dbr:Ingolf_of_Rosenborg .
  ?ingolf dbo:parent ?frederickIX .

  # Ensure the child is royalty
  ?child rdf:type dbo:RoyalFamilyMember .
  
  FILTER(?child != dbr:Christian_X_of_Denmark) # Exclude Christian X himself
}
```",5,6,6,2,3,3,3,71,0,0,1,0,0.0,0
102,15,val,"Give me the manager of the player in the member, that is a soccer player, of England women's national football team and native of Dewsbury.",SELECT ?result WHERE { ?v0 <http://dbpedia.org/ontology/team> <http://dbpedia.org/resource/England_women's_national_football_team> . ?v1 <http://dbpedia.org/ontology/manager> ?result . ?result <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Dewsbury> . ?v0 <http://dbpedia.org/ontology/team> ?v1 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerPlayer>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?manager WHERE {
  ?player dbo:nationalTeam dbr:England_women's_national_football_team ;
          dbo:birthPlace dbr:Dewsbury .
  
  ?player dbo:currentClub ?club .
  
  ?club dbo:manager ?manager .
}
```",4,5,5,3,2,3,2,20,0,0,1,0,0.0,0
130,16,val,"Give me the figure known as the film, that is a soccer club and an organisation, of Candice Storey Lee and entity in the administration, that is American, of .","SELECT ?result WHERE { ?v3 <http://dbpedia.org/property/governor> """"@en . ?result <http://dbpedia.org/ontology/state> ?v3 . ?v3 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/United_States>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerClub>. ?result <http://dbpedia.org/property/nickname> ?v2 . ?v2 <http://dbpedia.org/ontology/director> <http://dbpedia.org/resource/Candice_Storey_Lee> . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?film WHERE {
  ?film dbo:director dbr:Candice_Storey_Lee .
  ?film dbo:genre dbr:Soccer_film .
  OPTIONAL { ?film dbo:subject dbr:American_politician . }
}
```",4,7,5,2,2,3,2,20,0,0,1,0,0.0,0
212,7,val,"Give me the birthplace of KODA (singer) and birthplace of the professional, that is a musical artist and an artist, in Singer, rapper, CEO, Facilities and Project Manager.","SELECT ?result WHERE { ?v0 <http://dbpedia.org/property/occupation> ""Singer, rapper, CEO, Facilities and Project Manager""@en . <http://dbpedia.org/resource/KODA_(singer)> <http://dbpedia.org/ontology/birthPlace> ?result . ?v0 <http://dbpedia.org/ontology/birthPlace> ?result . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. }","```sparql
# Query for the birthplace of Koda (Kumi Koda)
SELECT ?birthPlace WHERE {
  wd:Q123456 wdt:P19 ?birthPlace .
}

# Query for the birthplace of Kanye West
SELECT ?birthPlace WHERE {
  wd:Q234567 wdt:P19 ?birthPlace .
}
```

Note: The placeholders `wd:Q123456` and `wd:Q234567` should be replaced with the actual DBpedia resource identifiers for Kumi Koda and Kanye West, respectively. You can find these identifiers by searching their names in DBpedia.",3,5,4,2,2,2,2,9,0,0,1,0,0.0,0
18,22,val,Give me the professional in the award of Ana María Sánchez de Ríos and parent of the professional in Actress.,"SELECT ?result WHERE { ?v0 <http://dbpedia.org/property/occupation> ""Actress""@en . ?result <http://dbpedia.org/property/occupation> ?v2 . <http://dbpedia.org/resource/Ana_María_Sánchez_de_Ríos> <http://dbpedia.org/property/awards> ?v2 . ?result <http://dbpedia.org/ontology/child> ?v0 . }","```sparql
SELECT ?professional WHERE {
  # Find the award associated with Ana María Sánchez de Ríos
  ?award dbo:recipient dbr:Ana_María_Sánchez_de_Ríos .
  
  # Identify professionals linked to that award
  ?professional dbo:awardedAward ?award .

  # Check if these professionals have children who are actresses
  ?child dbo:parent ?professional ;
         rdf:type dbo:Actress .
}
```",4,4,5,2,2,2,3,28,0,0,200,0,0.0,0
18,23,val,"Give me the professional in the award of Ana María Sánchez de Ríos and alumnus of the figure known, that is an educational institution, as Saints.","SELECT ?result WHERE { ?v0 <http://dbpedia.org/property/nickname> ""Saints""@en . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/EducationalInstitution>. <http://dbpedia.org/resource/Ana_María_Sánchez_de_Ríos> <http://dbpedia.org/property/awards> ?v3 . ?result <http://dbpedia.org/ontology/almaMater> ?v0 . ?result <http://dbpedia.org/property/occupation> ?v3 . }","```sparql
# Step 1: Find the award associated with Ana María Sánchez de Ríos
SELECT ?award WHERE {
    wd:Q1234567 dbo:receivedAward ?award .
}

# Step 2: Identify educational institutions known as ""Saints""
SELECT ?institution WHERE {
    ?institution rdfs:label ?label .
    FILTER(CONTAINS(LCASE(?label), ""saints"") && CONTAINS(LCASE(?label), ""educational institution""))
}

# Step 3: Find alumni of these institutions who received the same award
SELECT DISTINCT ?alumnus WHERE {
    # Replace ?award with the actual URI obtained from step 1
    ?alumnus dbo:receivedAward ?award .
    
    # Ensure they are an alumnus of one of the institutions found in step 2
    ?alumnus dbo:almaMater ?institution .
}
```

Note: Replace `wd:Q1234567` with the actual DBpedia URI for Ana María Sánchez de Ríos, and replace `?award` in Step 3 with the actual award URI obtained from Step 1.",4,5,5,2,2,2,3,28,0,0,1,0,0.0,0
465,54,val,"Give me the spouse of the child, that is a royalty, of the parent of Elizabeth of Austria (1526–1545) and successor of the child of Alfonso I d'Este and successor of Renée of France.",SELECT ?result WHERE { ?v3 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Alfonso_I_d'Este> . ?result <http://dbpedia.org/ontology/spouse> ?v5 . ?v0 <http://dbpedia.org/ontology/child> ?v5 . ?v0 <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Elizabeth_of_Austria_(1526–1545)> . <http://dbpedia.org/resource/Renée_of_France> <http://dbpedia.org/ontology/successor> ?result . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v3 <http://dbpedia.org/ontology/successor> ?result . },"```sparql
SELECT ?spouse WHERE {
  # Step 1: Identify Elizabeth of Austria's parent
  ?elizabeth dbo:childOf ?parent .
  FILTER(STR(?elizabeth) = ""Elizabeth_of_Austria_(1526–1545)"")

  # Step 2: Find the child who is royalty from this parent
  ?royaltyChild dbo:childOf ?parent ;
                a dbo:Monarch .

  # Step 3: Identify Alfonso I d'Este's child and successor
  ?alfonsoChild dbo:childOf ?alfonsoI .
  FILTER(STR(?alfonsoI) = ""Alfonso_I_d'_Este"")
  
  ?successorAlfonso dbo:successor ?alfonsoChild .

  # Step 4: Identify Renée of France's successor
  ?successorRenée dbo:successor ?renée .
  FILTER(STR(?renée) = ""Renée_of_France"")

  # Step 5: Find commonality (person who is both successors)
  VALUES (?commonSuccessor) {
    ?successorAlfonso
    ?successorRenée
  }
  
  # Ensure the person is the same in both successor roles
  FILTER(?successorAlfonso = ?successorRenée)

  # Step 6: Find spouse of the royalty child
  ?royaltyChild dbo:spouse ?spouse .
}
```",6,7,7,3,3,3,3,71,0,0,1,0,0.0,0
93,15,val,"Give me the death place of John Weir Troy and capital of the headquarter, that is a region and a settlement, of the headquarter of Clam Cove Pictograph Site.",SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. <http://dbpedia.org/resource/Clam_Cove_Pictograph_Site> <http://dbpedia.org/ontology/location> ?v0 . ?v0 <http://dbpedia.org/ontology/location> ?v1 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Region>. <http://dbpedia.org/resource/John_Weir_Troy> <http://dbpedia.org/ontology/deathPlace> ?result . ?v1 <http://dbpedia.org/ontology/capital> ?result . },"```sparql
# Query for the death place of John Weir Troy
SELECT ?deathPlace WHERE {
  ?person dbo:birthName ""John Weir Troy"" .
  ?person dbo:deathPlace ?deathPlace .
}

UNION

# Assuming Clam Cove Pictograph Site is a notable landmark, we need to find its administrative region and settlement.
# This part might require some assumptions or additional context about what ""headquarter"" refers to.

SELECT ?regionCapital WHERE {
  # Find the region associated with Clam Cove Pictograph Site
  ?site dbo:location ?settlement .
  ?settlement dbo:partOfRegion ?region .

  # Get the capital of that region
  ?region dbo:capital ?regionCapital .
}
```",4,6,5,3,2,3,2,20,0,0,1,0,0.0,0
216,23,val,Give me the administration of the designer of Woolfe: The Red Hood Diaries and office of the mayor of Ros Bates.,SELECT ?result WHERE { <http://dbpedia.org/resource/Woolfe:_The_Red_Hood_Diaries> <http://dbpedia.org/property/designer> ?v1 . <http://dbpedia.org/resource/Ros_Bates> <http://dbpedia.org/property/leader> ?v2 . ?v2 <http://dbpedia.org/property/office> ?result . ?result <http://dbpedia.org/property/leader> ?v1 . },"```sparql
# Query to find the designer of Woolfe: The Red Hood Diaries and their administration
SELECT ?designer ?administration WHERE {
  ?game dcterms:title ""Woolfe: The Red Hood Diaries""@en .
  ?game dbo:creator ?designer .
  OPTIONAL { ?designer dbo:office ?administration . }
}

# Query to find the office of Ros Bates as mayor
SELECT ?mayorOffice WHERE {
  ?person foaf:name ""Ros Bates""@en ;
          dbo:office ?mayorOffice .
}
```",4,4,5,2,2,2,3,28,0,0,1,0,0.0,0
443,22,val,"Give me the landmark at elevation of the award of William Shepherd and birthplace of the person born, that is a musical artist and an artist, on 1949-11-20.","SELECT ?result WHERE { ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. ?v3 <http://dbpedia.org/ontology/birthPlace> ?result . ?v3 <http://dbpedia.org/ontology/birthDate> ""1949-11-20""^^<http://www.w3.org/2001/XMLSchema#date> . ?result <http://dbpedia.org/ontology/elevation> ?v2 . <http://dbpedia.org/resource/William_Shepherd> <http://dbpedia.org/property/awards> ?v2 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. }","```sparql
# Step 1: Find William Shepherd's Award
SELECT ?award WHERE {
  ?person foaf:name ""William Shepherd""@en .
  ?person dbo:award ?award .
}

# Step 2: Find Landmark and Elevation of the Award
SELECT ?landmark ?elevation WHERE {
  ?award dbo:location ?landmark .
  ?landmark dbo:elevationAboveSeaLevel ?elevation .
}

# Step 3: Find Person Born on 1949-11-20 who is a Musical Artist and an Artist
SELECT ?person ?birthPlace WHERE {
  ?person dbo:birthDate ""1949-11-20""^^xsd:date ;
          rdf:type dbo:MusicalArtist, dbo:Artist .
  ?person dbo:birthPlace ?birthPlace .
}

# Step 4: Match Landmark Elevation with Birthplace
SELECT ?landmark ?elevation WHERE {
  # Assuming we have the elevation from step 2 and birthplace from step 3
  VALUES (?elevation) { <calculated_elevation> } # Replace with actual elevation value

  ?birthPlace dbo:elevationAboveSeaLevel ?elevation .
}
```",4,6,5,2,2,2,3,28,0,0,1,0,0.0,0
456,40,val,"Give me the professional in  and band of Alan Doyle and spouse of the actor of the movie, that is a work and a television show, with Ross Newton.","SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/spouse> ?result . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/TelevisionShow>. ?v2 <http://dbpedia.org/property/starring> ?v1 . ?v2 <http://dbpedia.org/property/starring> <http://dbpedia.org/resource/Ross_Newton> . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. <http://dbpedia.org/resource/Alan_Doyle> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?result <http://dbpedia.org/property/occupation> """"@en . }","```sparql
# Step 1: Get Alan Doyle's band
SELECT ?band WHERE {
  wd:Q1234567 dbo:memberOf ?band .
}

# Step 2: Identify Ross Newton's movie and its adaptations
SELECT ?movie ?work ?tvShow WHERE {
  wd:Q7890123 dbo:actedIn ?movie .
  OPTIONAL { ?movie dbo:adaptationOfWork ?work . }
  OPTIONAL { ?movie dbo:adaptationForTelevision ?tvShow . }
}

# Step 3: Find Dan Stevens' spouse
SELECT ?spouse WHERE {
  wd:Q3456789 dbo:spouse ?spouse .
}

# Step 4: Check for professional connection between the band and Dan Stevens' spouse
SELECT ?connection WHERE {
  ?band dbo:member ?alanDoyle .
  ?alanDoyle foaf:name ""Alan Doyle"" .
  ?spouse dbo:professionalConnection ?connection .
}
```

Note: Replace `wd:Q1234567` with Alan Doyle's DBpedia ID, `wd:Q7890123` with Ross Newton's DBpedia ID, and `wd:Q3456789` with Dan Stevens' DBpedia ID. These IDs need to be looked up in the DBpedia dataset.",5,7,6,3,3,3,3,71,0,0,1,0,0.0,0
417,42,val,"Give me the child of the child, that is a royalty, of Frederick Francis III, Grand Duke of Mecklenburg-Schwerin and child of Christian X of Denmark and spouse of the parent, that is a royalty, of Count Ingolf of Rosenborg.","SELECT ?result WHERE { ?v1 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Frederick_Francis_III,_Grand_Duke_of_Mecklenburg-Schwerin> . ?result <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Christian_X_of_Denmark> . ?result <http://dbpedia.org/ontology/parent> ?v1 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?result <http://dbpedia.org/ontology/spouse> ?v2 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v2 <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Count_Ingolf_of_Rosenborg> . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?child WHERE {
  # Frederick Francis III's children
  VALUES (?ff3) { dbr:Frederick_Franz_III,_Grand_Duke_of_Mecklenburg-Schwerin }
  
  # Christian X of Denmark's child who is royalty and spouse of a parent of Count Ingolf of Rosenborg
  ?christianXChild dbo:spouse ?parentOfIngolf .
  ?parentOfIngolf dbo:child dbr:Count_Ingolf_of_Rosenborg .

  # Alexandra, Princess of Hanover as the grandchild of Frederick Francis III and child of Christian X
  ?ff3Child dbo:child ?alexandra .
  ?alexandra dbo:spouse ?fziv .
  ?fziv dbo:parent dbr:Friedrich_Franz_IV,_Grand_Duke_of_Mecklenburg-Schwerin .

  # Ensure Alexandra is royalty
  ?alexandra a dbo:Monarch .

  FILTER (?christianXChild = dbr:Alexandrine,_Princess_of_Sayn-Wittgenstein-Berleburg)
}
```",5,7,6,2,3,3,3,71,0,0,1,0,0.0,0
773,48,val,"Give me the parent of the child, that is a royalty, of Louis the German and spouse of the father of the parent of Bernard (son of Charles the Fat).",SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/parent> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v1 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Louis_the_German> . ?v3 <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Bernard_(son_of_Charles_the_Fat)> . ?v2 <http://dbpedia.org/ontology/spouse> ?result . ?v3 <http://dbpedia.org/property/father> ?v2 . },"```sparql
SELECT ?parent WHERE {
  wd:Q1114 wdt:P22 ?mother . # Charles the Fat (Louis the German's child who is royalty)
  ?mother wdt:P26 ?spouse .   # Spouse of Louis the German
  ?spouse rdfs:label ""Hemma of Worms""@en .
}
```",5,6,6,3,2,3,3,71,0,0,1,0,0.0,0
129,23,val,Give me the associated musical artist of the person born as Tahj Malik Chandler and professional in the mayor of 1999 West Dunbartonshire Council election.,"SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?result <http://dbpedia.org/property/occupation> ?v2 . <http://dbpedia.org/resource/1999_West_Dunbartonshire_Council_election> <http://dbpedia.org/property/leader> ?v2 . ?v1 <http://dbpedia.org/property/birthName> ""Tahj Malik Chandler""@en . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?alias ?mayorElection WHERE {
  VALUES ?person { dbr:Tahj_Malik_Chandler }
  
  # Find the alias for Tahj Malik Chandler
  OPTIONAL {
    ?person dbo:alsoKnownAs ?alias .
  }

  # Find his involvement in the 1999 West Dunbartonshire Council election
  OPTIONAL {
    ?election dbo:electionDate ?date ;
              dbo:candidates ?candidate .
    ?candidate dbo:candidateName ?name .
    FILTER(?name = ""Tahj Malik Chandler"" && ?date < ""2000-01-01^^xsd:date"")
  }
}
```",4,4,5,2,2,2,3,28,0,0,7,0,0.0,0
507,45,val,Give me the director of Entertaining Mr Sloane (film) and professional in the profession of the person born on 1966-02-18 and spouse of Anne V. Coates.,"SELECT ?result WHERE { ?v0 <http://dbpedia.org/property/occupation> ?v1 . <http://dbpedia.org/resource/Entertaining_Mr_Sloane_(film)> <http://dbpedia.org/ontology/director> ?result . ?result <http://dbpedia.org/ontology/spouse> <http://dbpedia.org/resource/Anne_V._Coates> . ?result <http://dbpedia.org/property/occupation> ?v1 . ?v0 <http://dbpedia.org/ontology/birthDate> ""1966-02-18""^^<http://www.w3.org/2001/XMLSchema#date> . }","```sparql
# Query to get the director of ""Entertaining Mr Sloane""
SELECT ?director WHERE {
  ?film dcterms:title ""Entertaining Mr Sloane""@en .
  ?film dbo:director ?director .
}

# Query to find the person born on 1966-02-18 and spouse of Anne V. Coates
SELECT ?person ?profession WHERE {
  ?person dbo:birthday ""1966-02-18""^^xsd:date ;
          foaf:surname ?surname .
  ?coates foaf:name ""Anne V. Coates""@en ;
          foaf:spouse ?person .
  OPTIONAL { ?person dbo:occupation ?profession }
}

# Query to get the profession of the director
SELECT ?directorProfession WHERE {
  ?film dcterms:title ""Entertaining Mr Sloane""@en .
  ?film dbo:director ?director .
  ?director dbo:occupation ?directorProfession .
}
```",5,5,6,3,3,3,3,71,0,0,1,0,0.0,0
573,55,val,"Give me the parent of the author, that is a politician and an office holder, of Exchequer Standards and person decedent at the residence, that is a settlement, of William J. Phelan and person decedent at the administration, that is a region, of Charlie Baker.","SELECT ?result WHERE { ?v2 <http://dbpedia.org/ontology/parent> ?result . <http://dbpedia.org/resource/William_J._Phelan> <http://dbpedia.org/property/residence> ?v5 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?result <http://dbpedia.org/ontology/deathPlace> ?v5 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Region>. ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. ?result <http://dbpedia.org/ontology/deathPlace> ?v3 . ?v3 <http://dbpedia.org/property/governor> ""Charlie Baker""@en . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. <http://dbpedia.org/resource/Exchequer_Standards> <http://dbpedia.org/property/author> ?v2 . }","```sparql
# Step 1: Identify the author of ""Exchequer Standards""
SELECT ?author WHERE {
  ?work dcterms:title ""Exchequer Standards""@en .
  ?work dbo:author ?author .
}

# Step 2: Find the parent of this author and check if they are a politician and office holder
SELECT DISTINCT ?parent WHERE {
  ?author dbo:parent ?parent .
  ?parent rdf:type dbo:Politician ;
          dbo:officeHolder ?office .
}

# Step 3: Identify William J. Phelan's residence (place of death)
SELECT ?residence WHERE {
  dbpedia:William_J._Phelan dbo:deathPlace ?residence .
  ?residence rdf:type dbo:Settlement .
}

# Step 4: Find the person who died at this residence
SELECT DISTINCT ?person WHERE {
  ?person dbo:deathPlace ?residence .
  FILTER(?residence = <URI_of_Phelan's_residence>)
}

# Step 5: Identify Charlie Baker's administration region
SELECT ?region WHERE {
  dbpedia:Charlie_Baker dbo:officeHolder ?position .
  ?position dbo:administrativeRegion ?region .
}

# Step 6: Find the person who died in this administration region
SELECT DISTINCT ?person WHERE {
  ?person dbo:deathPlace ?location .
  ?location dbo:locatedIn ?region .
  FILTER(?region = <URI_of_Baker's_region>)
}
```

Note: Replace `<URI_of_Phelan's_residence>` and `<URI_of_Baker's_region>` with the actual URIs obtained from the results of steps 3 and 5.",6,10,7,2,3,3,3,71,0,0,2,0,0.0,0
582,54,val,"Give me the figure known as --10-19 and player in the father, that is an athlete and a soccer manager and a sports manager, of the child of Kazuaki Nagasawa and reference to the residence of Hirotaka Sugawara.","SELECT ?result WHERE { ?v5 <http://dbpedia.org/ontology/team> ?result . ?result <http://dbpedia.org/property/nickname> ""--10-19""^^<http://www.w3.org/2001/XMLSchema#gMonthDay> . ?result <http://xmlns.com/foaf/0.1/name> ?v3 . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Athlete>. <http://dbpedia.org/resource/Hirotaka_Sugawara> <http://dbpedia.org/property/residence> ?v3 . ?v0 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Kazuaki_Nagasawa> . ?v0 <http://dbpedia.org/property/father> ?v5 . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsManager>. ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerManager>. }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?child ?residence WHERE {
  # Find Kazuaki Nagasawa and his child
  ?kazuaki a dbo:Person ;
           foaf:name ""Kazuaki Nagasawa"" ;
           dbo:child ?child .

  # Check if the child is an athlete, soccer manager, and sports manager
  ?child a dbo:Athlete ;
         dbo:sportTeamRole dbr:Soccer_Manager ;
         dbo:occupation dbr:Sports_Manager .

  # Find Hirotaka Sugawara's residence
  ?hirotaka a dbo:Person ;
            foaf:name ""Hirotaka Sugawara"" ;
            dbo:residenceLocation ?residence .
}
```",6,9,7,3,3,3,3,71,0,0,1,0,0.0,0
965,43,val,"Give me the parent of George Mountbatten, 2nd Marquess of Milford Haven and spouse of Prince Louis of Battenberg and parent of the child, that is a royalty, of the person born, that is a politician, on 1854-05-24.","SELECT ?result WHERE { ?v3 <http://dbpedia.org/property/father> ?v1 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?result <http://dbpedia.org/ontology/spouse> <http://dbpedia.org/resource/Prince_Louis_of_Battenberg> . ?v3 <http://dbpedia.org/ontology/parent> ?result . <http://dbpedia.org/resource/George_Mountbatten,_2nd_Marquess_of_Milford_Haven> <http://dbpedia.org/ontology/parent> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v1 <http://dbpedia.org/ontology/birthDate> ""1854-05-24""^^<http://www.w3.org/2001/XMLSchema#date> . }","```sparql
SELECT ?parent WHERE {
  # Step 1: Identify George Mountbatten and his spouse
  ?georgeMountbatten dbo:title ""2nd Marquess of Milford Haven""@en .
  ?georgeMountbatten foaf:surname ""Mountbatten""@en .
  ?spouse rdf:type dbo:Spouse ;
          dbo:spouse ?georgeMountbatten ;
          foaf:name ""Prince Louis of Battenberg""@en .

  # Step 2: Find their child who is royalty
  ?child dbo:parent ?georgeMountbatten ;
         dbo:parent ?spouse ;
         rdf:type dbo:RoyalFamilyMember .

  # Step 3: Identify the politician born on 1854-05-24
  ?politician dbo:birthDate ""1854-05-24""^^xsd:date ;
              dbo:childOf ?child ;
              dbo:occupation dbo:Politician .

  # Step 4: Determine the parent of this politician
  ?parent dbo:child ?politician .
}
```",5,7,6,3,3,3,3,71,0,0,1,0,0.0,0
417,48,val,"Give me the spouse of the parent, that is a royalty, of the child of Knud, Hereditary Prince of Denmark and child of the child, that is a royalty, of Frederick Francis III, Grand Duke of Mecklenburg-Schwerin.","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/parent> ?v1 . ?v3 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Knud,_Hereditary_Prince_of_Denmark> . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v2 <http://dbpedia.org/ontology/child> ?v3 . ?result <http://dbpedia.org/ontology/spouse> ?v2 . ?v1 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Frederick_Francis_III,_Grand_Duke_of_Mecklenburg-Schwerin> . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. }","```sparql
# Query for Knud, Hereditary Prince of Denmark's child who is a royalty
SELECT ?child WHERE {
  wd:Q1234567 wdt:P40 ?child .
  ?child wdt:P31 wd:Q5 . # Instance of human
  ?child wdt:P39 wd:Q11424 . # Occupation includes royalty
}

# Query for the parent (Queen Margrethe II) and her spouse (Henrik, Prince Consort)
SELECT ?spouse WHERE {
  ?parent wdt:P40 wd:Q1234567 .
  ?parent wdt:P31 wd:Q5 .
  ?parent wdt:P39 wd:Q11424 .
  ?parent wdt:P26 ?spouse .
}

# Query for Frederick Francis III's grandchild who is a royalty
SELECT ?grandchild WHERE {
  ?parent wdt:P22 wd:Q1234567 . # Parent of child (who is Knud)
  ?parent wdt:P40 ?child .
  ?child wdt:P40 ?grandchild .
  ?grandchild wdt:P31 wd:Q5 .
  ?grandchild wdt:P39 wd:Q11424 .
}

# Query for the parent (Hans-Adam II) and his spouse (Countess Marie Aglaë Kinsky)
SELECT ?spouse WHERE {
  ?parent wdt:P40 ?grandchild .
  ?parent wdt:P31 wd:Q5 .
  ?parent wdt:P39 wd:Q11424 .
  ?parent wdt:P26 ?spouse .
}
```

Note: Replace `wd:Q1234567` with the actual DBpedia identifier for Knud, Hereditary Prince of Denmark and adjust other identifiers accordingly based on DBpedia's data.",5,7,6,3,2,3,3,71,0,0,1,0,0.0,0
433,43,val,"Give me the associated musical artist of the associated musical artist, that is an artist and a musical artist, of the associated musical artist, that is a musical artist and an artist, of Ornette Coleman and associated musical artist of Paul Chambers and professional in Musician.","SELECT ?result WHERE { ?v4 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?v0 <http://dbpedia.org/ontology/associatedMusicalArtist> ?v4 . <http://dbpedia.org/resource/Ornette_Coleman> <http://dbpedia.org/ontology/associatedMusicalArtist> ?v0 . ?result <http://dbpedia.org/property/occupation> ""Musician""@en . <http://dbpedia.org/resource/Paul_Chambers> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. }","```sparql
# Step 1: Find Ornette Coleman's associated musical artist who is also an artist
SELECT ?artist1 WHERE {
    wd:Q12345 wdt:P106 wd:Q33999 . # Ornette Coleman is a musician
    wd:Q12345 wdt:P175 ?artist1 .   # Associated with artist1
    ?artist1 wdt:P106 wd:Q33999 .   # Artist1 is a musician
    ?artist1 wdt:P101 wd:Q1234567 . # Artist1 is also an artist (replace Q1234567 with the correct property for ""artist"")
}

# Step 2: Find associated musical artist of the first result who is both a musical artist and an artist
SELECT ?artist2 WHERE {
    ?artist1 wdt:P175 ?artist2 .
    ?artist2 wdt:P106 wd:Q33999 .
    ?artist2 wdt:P101 wd:Q1234567 .
}

# Step 3: Find Paul Chambers' associated musical artist who is both a musical artist and an artist
SELECT ?chambersArtist WHERE {
    wd:Q12345 wdt:P106 wd:Q33999 . # Paul Chambers is a musician
    wd:Q12345 wdt:P175 ?chambersArtist .
    ?chambersArtist wdt:P106 wd:Q33999 .
    ?chambersArtist wdt:P101 wd:Q1234567 .
}

# Step 4: Find the professional in Musician of the third result
SELECT ?finalArtist WHERE {
    ?chambersArtist wdt:P175 ?finalArtist .
    ?finalArtist wdt:P106 wd:Q33999 .
}
```

Note: Replace `wd:Q12345` with Ornette Coleman's DBpedia ID, `wd:Q1234567` with the correct property for ""artist"", and ensure Paul Chambers' DBpedia ID is correctly used.",5,9,6,3,3,3,3,71,0,0,3,0,0.0,0
976,50,val,"Give me the office of the mayor, that is a politician and an office holder and Turkish, of the reference, that is an organisation and a political party and Turkish, to Millet İttifakı and office of the person born as Mehmet Naci Bostancı.","SELECT ?result WHERE { ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v3 <http://dbpedia.org/ontology/nationality> <http://dbpedia.org/resource/Turkey>. ?v1 <http://xmlns.com/foaf/0.1/name> ""Millet İttifakı""@en . ?v1 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Turkey>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/PoliticalParty>. ?v0 <http://dbpedia.org/property/office> ?result . ?v1 <http://dbpedia.org/property/leader> ?v3 . ?v0 <http://dbpedia.org/property/birthName> ""Mehmet Naci Bostancı""@en . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?v3 <http://dbpedia.org/property/office> ?result . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?mayorOffice ?politicalParty ?personOffice WHERE {
  # Millet İttifakı reference
  ?milatRef a dbo:PoliticalAlliance ;
            rdfs:label ""Millet İttifakı""@tr .

  # Mayor who is Turkish, a politician, and an office holder
  ?mayor a dbo:Mayor ;
         dbo:nationality dbr:Turkey ;
         dbo:officeHolderOf ?city ;
         dbo:politicalParty ?party .
  FILTER(CONTAINS(LANG(?mayorLabel), ""tr""))
  
  # Political party that is Turkish
  ?party a dbo:PoliticalParty ;
         dbo:nationality dbr:Turkey .

  # Mehmet Naci Bostancı's office
  ?person dbr:Mehmet_Naci_Bostancı ;
          dbo:officeHolderOf ?office .
  
  BIND(dbo:Mayor as ?mayorOffice)
  BIND(?party as ?politicalParty)
  BIND(dbo:officeHolderOf as ?personOffice)
}
```",5,11,6,3,2,3,3,71,0,0,1,0,0.0,0
445,49,val,"Give me the entity in the residence, that is a country, of Anna Sharkey and entity in the award of the commander in Battle of Saint-Mihiel.",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/country> ?v1 . <http://dbpedia.org/resource/Battle_of_Saint-Mihiel> <http://dbpedia.org/ontology/commander> ?v0 . ?v0 <http://dbpedia.org/property/awards> ?v1 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. <http://dbpedia.org/resource/Anna_Sharkey> <http://dbpedia.org/property/residence> ?v2 . ?result <http://dbpedia.org/ontology/location> ?v2 . },"```sparql
# Query to find Anna Sharkey's residence country
SELECT ?country WHERE {
  ?person dbo:birthName ""Anna Sharkey"" .
  ?person dbo:residence ?location .
  ?location a dbo:Country .
  BIND(?location AS ?country)
}

UNION

# Query to find the award of the commander in the Battle of Saint-Mihiel
SELECT ?award WHERE {
  ?battle dbo:commander ?commander .
  ?battle rdfs:label ""Battle of Saint-Mihiel""@en .
  ?commander dbo:receivedAward ?award .
}
```",5,6,6,3,2,3,3,71,0,0,102,0,0.0,0
791,50,val,"Give me the father of the child, that is a royalty, of Emperor Takakura and predecessor of the child of the child, that is an office holder and a royalty, of Emperor Go-Shirakawa.",SELECT ?result WHERE { ?v3 <http://dbpedia.org/property/father> ?result . ?result <http://dbpedia.org/ontology/successor> ?v4 . ?v3 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Emperor_Takakura> . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v4 <http://dbpedia.org/property/father> ?v0 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v0 <http://dbpedia.org/ontology/parent> <http://dbpedia.org/resource/Emperor_Go-Shirakawa> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?father WHERE {
  # Emperor Takakura's child who is royalty
  ?antoku dbo:child dbr:Takakura ;
          a dbo:Monarch ;
          dbo:parent dbr:Takakura .

  # Predecessor of Antoku (Emperor Takakura)
  ?predecessor dbo:succession dbr:Antoku ;
               a dbo:Monarch ;
               dbo:parent ?father .

  # Emperor Go-Shirakawa's grandchild who is royalty and an office holder
  ?tsuchimikado dbo:child ?go_shirakawa_child ;
                a dbo:Monarch ;
                dbo:officeHolder true ;
                dbo:parent ?go_shirakawa_child .

  # Linking Emperor Go-Shirakawa to his child
  ?go_shirakawa_child dbo:child dbr:Go_Shirakawa ;
                      a dbo:Person .
}
```",5,8,6,3,2,3,3,71,0,0,1,0,0.0,0
417,52,val,"Give me the child of the father of Frederick IX of Denmark and spouse of the parent, that is a royalty, of the child of Knud, Hereditary Prince of Denmark and child of Alexandrine of Mecklenburg-Schwerin.","SELECT ?result WHERE { ?v3 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Knud,_Hereditary_Prince_of_Denmark> . ?v2 <http://dbpedia.org/ontology/child> ?v3 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. <http://dbpedia.org/resource/Frederick_IX_of_Denmark> <http://dbpedia.org/property/father> ?v5 . ?result <http://dbpedia.org/property/father> ?v5 . ?result <http://dbpedia.org/ontology/spouse> ?v2 . ?result <http://dbpedia.org/ontology/parent> <http://dbpedia.org/resource/Alexandrine_of_Mecklenburg-Schwerin> . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?person WHERE {
  # Frederick IX's father
  ?father a dbo:Monarch ;
          dbo:spouse dbr:Alexandrine_of_Mecklenburg-Schwerin ;
          dbo:child dbr:Frederick_IX_of_Denmark .

  # King Christian X (Frederick IX's father)
  ?king a dbo:Monarch ;
        rdfs:label ""Christian X""@en ;
        dbo:spouse ?father ;
        dbo:child ?child .

  # Children of King Christian X
  ?child a dbo:Person ;
         dbo:spouse ?spouse .

  # Knud, Hereditary Prince of Denmark's child
  ?knudChild a dbo:Person ;
             dbo:parent dbr:Knud,_Hereditary_Prince_of_Denmark .

  # Alexandrine of Mecklenburg-Schwerin's spouse
  ?alexSpouse a dbo:Person ;
              dbo:spouse dbr:Alexandrine_of_Mecklenburg-Schwerin .

  # Find the royalty who is both a child of King Christian X and related through marriage to Alexandrine
  FILTER (?child = ?person && EXISTS {
    ?knudChild dbo:parent ?alexSpouse .
  })

  # Ensure the person is royalty
  ?person dbo:spouse ?spouse ;
          rdfs:label ?name .
  FILTER CONTAINS(LCASE(?name), ""harald v of norway"")
}
```",6,7,7,3,3,3,3,71,0,0,1,0,0.0,0
326,16,val,"Give me the person decedent at the award, that is a country, of Adelbert Cronkhite and resident of the birthplace, that is a state and British, of David Jessel.",SELECT ?result WHERE { ?result <http://dbpedia.org/property/residence> ?v2 . ?v2 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/United_Kingdom>. <http://dbpedia.org/resource/Adelbert_Cronkhite> <http://dbpedia.org/property/awards> ?v3 . ?result <http://dbpedia.org/ontology/deathPlace> ?v3 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/AdministrativeRegion>. <http://dbpedia.org/resource/David_Jessel> <http://dbpedia.org/ontology/birthPlace> ?v2 . },"```sparql
# Step 1: Find Adelbert Cronkhite's associated award and its country
SELECT ?award ?country WHERE {
  ?person dbo:birthName ""Adelbert Cronkhite""@en .
  ?person dbo:award ?award .
  OPTIONAL { ?award dbo:country ?country . }
}

# Step 2: Find David Jessel's birthplace (a British state)
SELECT ?birthPlace WHERE {
  ?person dbo:birthName ""David Jessel""@en .
  ?person dbo:birthPlace ?birthPlace .
  FILTER EXISTS { ?birthPlace rdf:type dbo:StateOrTerritory ; dbo:country dbr:United_Kingdom . }
}

# Step 3: Find a person who is a decedent at the award and resides in David Jessel's birthplace
SELECT DISTINCT ?person WHERE {
  # Assuming we have identified ?awardCountry from step 1 and ?birthPlace from step 2
  ?decedent dbo:deathPlace ?awardCountry .
  ?resident dbo:residenceLocation ?birthPlace .
  FILTER (?decedent = ?resident)
}
```

Note: The above SPARQL queries are structured to be executed sequentially, where the results of one query inform the next. You will need to manually replace `?awardCountry` and `?birthPlace` with actual values obtained from executing the first two queries.",4,7,5,2,2,3,2,20,0,0,1,0,0.0,0
456,44,val,"Give me the band of the band, that is a musical artist, of Dean Brody and spouse of Danielle Spencer (Australian actress) and professional in the alter ego of The Shadow.",SELECT ?result WHERE { <http://dbpedia.org/resource/The_Shadow> <http://dbpedia.org/property/alterEgo> ?v4 . <http://dbpedia.org/resource/Dean_Brody> <http://dbpedia.org/ontology/associatedMusicalArtist> ?v2 . ?v2 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . <http://dbpedia.org/resource/Danielle_Spencer_(Australian_actress)> <http://dbpedia.org/ontology/spouse> ?result . ?result <http://dbpedia.org/property/occupation> ?v4 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. },"```sparql
SELECT ?band WHERE {
  ?person foaf:name ""Dean Brody"" .
  ?person dbo:memberOfBand ?band .
  FILTER EXISTS { ?band a dbo:MusicalArtist . }
}
```",5,6,6,2,3,3,3,71,0,0,1,0,0.0,0
433,40,val,"Give me the professional in Musician and associated musical artist of Bill Evans and associated musical artist of the person born, that is a musical artist and an artist, as the persona of Paul Chambers.","SELECT ?result WHERE { ?result <http://dbpedia.org/property/occupation> ""Musician""@en . <http://dbpedia.org/resource/Paul_Chambers> <http://xmlns.com/foaf/0.1/givenName> ?v2 . ?v1 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?v1 <http://dbpedia.org/property/birthName> ?v2 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. <http://dbpedia.org/resource/Bill_Evans> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . }","```sparql
# Query for associated musical artists of Bill Evans
SELECT ?associatedArtist WHERE {
  ?billEvans dbo:occupation dbr/Musician .
  ?billEvans foaf:name ""Bill Evans"" .
  ?collaboration dbo:artist ?billEvans ;
                 dbo:artist ?associatedArtist .
}

UNION

# Query for associated musical artists of Paul Chambers
SELECT ?associatedArtist WHERE {
  ?paulChambers dbo:birthDate ""1935-04-22""^^xsd:date ;
                dbo:occupation dbr/Musician ;
                foaf:name ""Paul Chambers"" .
  ?collaboration dbo:artist ?paulChambers ;
                 dbo:artist ?associatedArtist .
}
```",5,7,6,3,3,3,3,71,0,0,1,0,0.0,0
5,17,val,"Give me the birthplace of Gerald Regan and entity in the award of the associated musical artist, that is a band, of Rubén Colón Tarrats.",SELECT ?result WHERE { <http://dbpedia.org/resource/Rubén_Colón_Tarrats> <http://dbpedia.org/ontology/associatedMusicalArtist> ?v3 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Band>. ?result <http://dbpedia.org/ontology/country> ?v0 . <http://dbpedia.org/resource/Gerald_Regan> <http://dbpedia.org/ontology/birthPlace> ?result . ?v3 <http://dbpedia.org/property/awards> ?v0 . },"```sparql
SELECT ?birthPlace WHERE {
  ?gerry dbo:name ""Gerald Regan""@en .
  ?gerry dbo:birthPlace ?birthPlace .
}

UNION

SELECT DISTINCT ?band WHERE {
  ?ruben dbo:name ""Rubén Colón Tarrats""@en .
  ?ruben dbo:award ?award .
  ?award dbo:recipient ?entity .
  ?entity rdf:type dbo:Band .
  BIND(?entity AS ?band)
}
```",4,5,5,3,2,3,2,20,0,0,1,0,0.0,0
216,42,val,"Give me the player in the coach of Croatia national under-21 football team and player in Mario Ivanković and team of the person born, that is a sports manager and a soccer manager and a soccer player, on 1983-12-20.","SELECT ?result WHERE { <http://dbpedia.org/resource/Croatia_national_under-21_football_team> <http://dbpedia.org/ontology/coach> ?v2 . ?v2 <http://dbpedia.org/ontology/team> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerManager>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsManager>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerPlayer>. <http://dbpedia.org/resource/Mario_Ivanković> <http://dbpedia.org/ontology/team> ?result . ?v1 <http://dbpedia.org/ontology/birthDate> ""1983-12-20""^^<http://www.w3.org/2001/XMLSchema#date> . ?result <http://dbpedia.org/ontology/coach> ?v1 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?player WHERE {
  # Mario Ivanković as coach of Croatia national under-21 football team
  dbr:Mario_Ivanković dbo:position dbr:Croatia_national_under-21_football_team .
  
  # Players in the team during his tenure
  ?team_member dbo:memberOfTeam dbr:Croatia_national_under-21_football_team ;
               dbo:coach dbr:Mario_Ivanković .

  # Check if this player was also part of another team coached by Mario Ivanković
  ?player dbp:name ?name .
  FILTER (?team_member = ?player) .

  # Filter for the person born on December 20, 1983
  ?player dbo:birthDate ""1983-12-20""^^xsd:date ;
          a dbo:SoccerPlayer ;
          a dbo:SportsManager ;
          a dbo:SoccerCoach .
}
```",5,8,6,2,3,3,3,71,0,0,1,0,0.0,0
645,41,val,"Give me the commander in the force of Carlos Asensio Cabanillas and military force of the force, that is an event and a military conflict and a societal event, of Francisco Largo Caballero and leader of Ministry of the Army (Spain).",SELECT ?result WHERE { ?v2 <http://dbpedia.org/ontology/commander> ?result . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. <http://dbpedia.org/resource/Ministry_of_the_Army_(Spain)> <http://dbpedia.org/ontology/leader> ?result . ?v2 <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Carlos_Asensio_Cabanillas> . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?result <http://dbpedia.org/ontology/battle> ?v4 . ?v4 <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Francisco_Largo_Caballero> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?commander WHERE {
  ?event dbo:type dbr:Spanish_Civil_War .
  ?event dbo:participant dbr:Carlos_Asensio_Cabanillas .
  ?asensioCaballeras dbo:commandedBy ?commander .
  ?caballero dbo:position dbr:Ministry_of_the_Army_(Spain) ;
             dbo:leader dbr:Francisco_Largo_Caballero .
  FILTER (str(?commander) = ""José Miaja"")
}
```",5,8,6,2,3,3,3,71,0,0,1,0,0.0,0
582,41,val,"Give me the reference to the residence of Hirotaka Sugawara and player in the father, that is an athlete and a soccer manager and a sports manager, of Masami Nagasawa and figure known as --10-19.","SELECT ?result WHERE { ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerManager>. ?result <http://xmlns.com/foaf/0.1/name> ?v2 . <http://dbpedia.org/resource/Hirotaka_Sugawara> <http://dbpedia.org/property/residence> ?v2 . ?v4 <http://dbpedia.org/ontology/team> ?result . ?result <http://dbpedia.org/property/nickname> ""--10-19""^^<http://www.w3.org/2001/XMLSchema#gMonthDay> . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsManager>. <http://dbpedia.org/resource/Masami_Nagasawa> <http://dbpedia.org/property/father> ?v4 . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Athlete>. }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?hirotakaResidence ?fatherName ?figureNickname WHERE {
  # Find Hirotaka Sugawara's residence
  OPTIONAL { 
    ?hirotaka a dbo:Person ;
              foaf:name ""Hirotaka Sugawara"" ;
              dbo:residence ?hirotakaResidence .
  }

  # Find Masami Nagasawa's father who is an athlete, soccer manager, and sports manager
  OPTIONAL {
    ?father a dbo:Person ;
            foaf:name ?fatherName ;
            dbo:spouse dbr:Masami_Nagasawa ;
            (dbo:sportTeamMember|dbo:manager) ?team .
    FILTER EXISTS { ?team a dbo:SoccerClub }
  }

  # Find the figure known as --10-19
  OPTIONAL {
    ?figure a dbo:Person ;
            foaf:name ?figureNickname .
    FILTER regex(?figureNickname, ""--10-19"", ""i"")
  }

  # Attempt to connect these entities if possible
  OPTIONAL { 
    ?hirotakaResidence dbr:location ?connectedEntity .
    ?father dbr:relatedTo ?connectedEntity .
    ?figure dbr:relatedTo ?connectedEntity .
  }
}
```",5,8,6,2,3,3,3,71,0,0,1,0,0.0,0
773,45,val,"Give me the parent of the child, that is a royalty, of the father, that is an office holder and a royalty, of Carloman of Bavaria and parent of Carloman of Bavaria and spouse of Louis the German.",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Carloman_of_Bavaria> . ?v1 <http://dbpedia.org/ontology/parent> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v1 <http://dbpedia.org/property/father> ?v0 . <http://dbpedia.org/resource/Louis_the_German> <http://dbpedia.org/ontology/spouse> ?result . <http://dbpedia.org/resource/Carloman_of_Bavaria> <http://dbpedia.org/property/father> ?v0 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?parent WHERE {
  # Carloman of Bavaria's father
  dbr:C._of_Bavaria dbo:father dbr:Louis_the_German .

  # Louis the German's spouse and Carloman's mother
  dbr:Louis_the_German dbo:spouse ?mother .
  
  # Judith of Bavaria is the spouse of Louis the German
  ?mother rdfs:label ""Judith of Bavaria""@en .

  # Charles the Fat, a child of Louis the German and Judith
  dbr:Charles_II_of_France dbo:father dbr:Louis_the_German .
  
  # Charles the Fat is royalty
  dbr:Charles_II_of_France dbo:position ?royaltyPosition .
  FILTER EXISTS { ?royaltyPosition rdfs:label ?label . FILTER(CONTAINS(LCASE(?label), ""king"")) }

  # Judith of Bavaria is the parent of Charles the Fat
  ?mother dbo:child dbr:Charles_II_of_France .

  # Return Judith of Bavaria as the parent of the royalty child
  BIND(?mother AS ?parent)
}
```",5,8,6,3,3,3,3,71,0,0,1,0,0.0,0
978,15,val,"Give me the band member of the professional, that is a musical artist and an artist, in the award of Michel Claparède and band member of Chicane (musician).",SELECT ?result WHERE { ?v1 <http://dbpedia.org/property/occupation> ?v0 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. ?result <http://dbpedia.org/ontology/associatedMusicalArtist> ?v1 . <http://dbpedia.org/resource/Michel_Claparède> <http://dbpedia.org/property/awards> ?v0 . ?result <http://dbpedia.org/ontology/associatedMusicalArtist> <http://dbpedia.org/resource/Chicane_(musician)> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?person WHERE {
  # Find band members of Chicane
  ?bandMember dbo:memberOfBand dbr:Chicane_(musician) .
  
  # Check if the same person is associated with the Michel Claparède award
  OPTIONAL { 
    ?person dbo:awardReceived dbr:Michele_Claparède_Award .
    FILTER(?bandMember = ?person)
  }
}
```",4,6,5,3,2,3,2,20,0,0,2,0,0.0,0
465,53,val,"Give me the spouse of Archduchess Barbara of Austria and successor of the child, that is a royalty, of Anne of Brittany and successor of the child of the parent of Ercole II d'Este, Duke of Ferrara.","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/spouse> <http://dbpedia.org/resource/Archduchess_Barbara_of_Austria> . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. <http://dbpedia.org/resource/Ercole_II_d'Este,_Duke_of_Ferrara> <http://dbpedia.org/ontology/parent> ?v3 . ?v1 <http://dbpedia.org/ontology/successor> ?result . ?v2 <http://dbpedia.org/property/father> ?v3 . ?v2 <http://dbpedia.org/ontology/successor> ?result . <http://dbpedia.org/resource/Anne_of_Brittany> <http://dbpedia.org/ontology/child> ?v1 . }","```sparql
# Step 1: Find spouse of Archduchess Barbara of Austria
SELECT ?spouse WHERE {
  wd:Q123456 wdt:P26 ?spouse .
}

# Step 2: Find a royal successor among Anne of Brittany's children
SELECT ?royalSuccessor WHERE {
  wd:Q789012 wdt:P40 ?child .
  ?child wdt:P31/wdt:P279* wd:Q11424 . # Royal person
  OPTIONAL { ?child wdt:P36 ?position } # Check if they held a royal position
}

# Step 3: Find Ercole II d'Este's parent and their child, then find the successor
SELECT ?successor WHERE {
  wd:Q345678 wdt:P22 ?parent .
  ?parent wdt:P40 ?child .
  ?child wdt:P36 ?position . # Check if they held a position
}

# Step 4: Combine results to find common individual
SELECT DISTINCT ?commonIndividual WHERE {
  { SELECT ?spouse WHERE {
      wd:Q123456 wdt:P26 ?spouse .
    }
  }
  UNION
  { SELECT ?royalSuccessor WHERE {
      wd:Q789012 wdt:P40 ?child .
      ?child wdt:P31/wdt:P279* wd:Q11424 .
      OPTIONAL { ?child wdt:P36 ?position }
    }
  }
  UNION
  { SELECT ?successor WHERE {
      wd:Q345678 wdt:P22 ?parent .
      ?parent wdt:P40 ?child .
      ?child wdt:P36 ?position .
    }
  }
}
```

Note: Replace `wd:Q123456`, `wd:Q789012`, and `wd:Q345678` with the actual DBpedia identifiers for Archduchess Barbara of Austria, Anne of Brittany, and Ercole II d'Este respectively. The query assumes that these entities are correctly identified in DBpedia.",6,7,7,3,3,3,3,71,0,0,1,0,0.0,0
933,40,val,"Give me the band of the band of the band, that is an artist and a musical artist, of The Ramong Sound and reference to Alan Warner and band of The Ramong Sound.","SELECT ?result WHERE { <http://dbpedia.org/resource/The_Ramong_Sound> <http://dbpedia.org/ontology/associatedMusicalArtist> ?v3 . ?result <http://xmlns.com/foaf/0.1/name> ""Alan Warner""@en . <http://dbpedia.org/resource/The_Ramong_Sound> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v1 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v3 <http://dbpedia.org/ontology/associatedMusicalArtist> ?v1 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?bandMember ?subGroup WHERE {
  # Identify members of The Rolling Stones who are both artists and musical artists
  ?member dbo:memberOfBand dbr:The_Rolling_Stones .
  ?member a dbo:MusicalArtist .
  ?member dbo:occupation dbr:Artist .

  # Find any sub-group or associated act within The Rolling Stones
  OPTIONAL {
    ?subGroup dbo:member dbr:Alan_Warner .
    ?subGroup dbo:memberOfBand dbr:The_Rolling_Stones .
  }

  # Bind the member to bandMember variable
  BIND(?member AS ?bandMember)
}
```",5,7,6,3,3,3,3,71,0,0,1,0,0.0,0
791,48,val,"Give me the father of the child, that is a royalty, of Emperor Takakura and spouse of the spouse, that is a royalty, of the reference to Emperor Takakura.","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/spouse> ?v2 . ?v1 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Emperor_Takakura> . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v2 <http://dbpedia.org/ontology/spouse> ?v3 . ?v1 <http://dbpedia.org/property/father> ?result . ?v3 <http://xmlns.com/foaf/0.1/name> ""Emperor Takakura""@en . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?child ?father WHERE {
  # Find Emperor Takakura and his spouse
  dbr:Takakura_of_Japan dbo:spouse ?spouse .
  
  # Identify children of Emperor Takakura who are royalty (emperors)
  ?child dbo:parent ?takakura ;
         a dbo:Monarch ;
         dbo:country dbr:Japan .

  # Ensure the child is indeed an emperor
  ?child dbo:father ?father .
  
  FILTER (?takakura = dbr:Takakura_of_Japan)
}
```",5,7,6,3,2,3,3,71,0,0,1,0,0.0,0
445,41,val,"Give me the entity in the residence, that is a country, of Anna Sharkey and death place of the awardee of Royal Astronomical Society and entity in United Kingdom.",SELECT ?result WHERE { ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. <http://dbpedia.org/resource/Anna_Sharkey> <http://dbpedia.org/property/residence> ?v2 . ?result <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/United_Kingdom> . ?v4 <http://dbpedia.org/ontology/deathPlace> ?result . ?result <http://dbpedia.org/ontology/location> ?v2 . ?v4 <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/Royal_Astronomical_Society> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT DISTINCT ?entityInResidence ?deathPlace WHERE {
  # Anna Sharkey's residence
  OPTIONAL { 
    dbr:Anna_Sharkey dbo:residence ?residence .
    ?residence dbo:country dbr:United_Kingdom .
    ?residence rdfs:label ?entityInResidence .
  }

  # Stephen Hawking's death place
  OPTIONAL {
    dbr:Stephen_Hawking dbo:deathPlace ?deathPlace .
    ?deathPlace dbo:country dbr:United_Kingdom .
  }
  
  FILTER(?entityInResidence != """" && ?deathPlace != """")
}
```",5,6,6,2,3,3,3,71,0,2,1,0.0,0.0,0
791,51,val,"Give me the predecessor of the child of Emperor Takakura and father of the child, that is a royalty, of the father, that is a royalty and an office holder, of Emperor Antoku.",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/successor> ?v4 . ?v2 <http://dbpedia.org/property/father> ?v1 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v2 <http://dbpedia.org/property/father> ?result . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v4 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Emperor_Takakura> . <http://dbpedia.org/resource/Emperor_Antoku> <http://dbpedia.org/property/father> ?v1 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?predecessor WHERE {
  # Emperor Antoku's father
  dbr:Emperor_Antoku dbo:father dbr:Taira_no_Kiyomori .
  
  # Taira no Kiyomori's child who is royalty and an office holder
  dbr:Taira_no_Kiyomori dbo:child ?emperorTakakura .
  ?emperorTakakura a dbo:Monarch ;
                   dbo:country dbr:Japan .

  # Emperor Takakura's child
  ?emperorTakakura dbo:child dbr:Emperor_Antoku .

  # Predecessor of Emperor Antoku
  dbr:Emperor_Antoku dbo:predecessor ?predecessor .
}
```",5,8,6,3,2,3,3,71,0,0,1,0,0.0,0
573,51,val,"Give me the parent of the author, that is a politician and an office holder, of the work of John Quincy Adams and person decedent at the residence, that is a settlement, of William J. Phelan.",SELECT ?result WHERE { <http://dbpedia.org/resource/William_J._Phelan> <http://dbpedia.org/property/residence> ?v4 . ?v1 <http://dbpedia.org/property/author> <http://dbpedia.org/resource/John_Quincy_Adams> . ?v1 <http://dbpedia.org/property/author> ?v2 . ?v2 <http://dbpedia.org/ontology/parent> ?result . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?result <http://dbpedia.org/ontology/deathPlace> ?v4 . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. },"```sparql
# Step 1: Find a work by John Quincy Adams
SELECT ?work WHERE {
    ?work dbo:author dbr:John_Quincy_Adams .
}

# Step 2: Identify his parents who were politicians and office holders
SELECT DISTINCT ?parent WHERE {
    ?parent dbo:child dbr:John_Quincy_Adams ;
            a dbo:Politician ;
            dbo:officeHolder ?office .
}

# Step 3: Find William J. Phelan's residence that is a settlement
SELECT DISTINCT ?residence WHERE {
    ?residence dbo:resident dbr:William_J._Phelan ;
               a dbo:Settlement .
}

# Step 4: Identify any person who died at this residence
SELECT DISTINCT ?decedent WHERE {
    ?deathEvent dbo:place dbr:William_J._Phelan_Residence ; # Assuming we have the specific residence URI
                  dbo:agent ?decedent ;
                  a dbo:Death .
}

# Step 5: Check if the parent matches the decedent
SELECT DISTINCT ?parent WHERE {
    ?parent dbo:child dbr:John_Quincy_Adams ;
            a dbo:Politician ;
            dbo:officeHolder ?office .

    ?deathEvent dbo:place dbr:William_J._Phelan_Residence ; # Assuming we have the specific residence URI
                  dbo:agent ?parent ;
                  a dbo:Death .
}
```",5,8,6,3,2,3,3,71,0,0,2,0,0.0,0
329,23,val,"Give me the birthplace of the author of The Tailor and Ansty and entity in the birthplace, that is an organisation and a country, of Robert Bates (loyalist).",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/country> ?v1 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. <http://dbpedia.org/resource/The_Tailor_and_Ansty> <http://dbpedia.org/property/author> ?v2 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. ?v2 <http://dbpedia.org/ontology/birthPlace> ?result . <http://dbpedia.org/resource/Robert_Bates_(loyalist)> <http://dbpedia.org/ontology/birthPlace> ?v1 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?birthPlace ?organisationCountry WHERE {
  # Find Robert Bates' birthplace
  dbr:Robert_Bates_(loyalist) dbo:birthPlace ?birthPlace .

  # Within the birthplace, find an entity that is both an organization and a country
  ?organisationCountry rdf:type dbo:Organisation ;
                      rdf:type dbo:Country ;
                      dbo:location ?birthPlace .
}
```",4,6,5,2,2,2,3,28,0,0,1,0,0.0,0
98,7,val,Give me the child of Emperor Go-Shirakawa and parent of the successor of Emperor Nijō.,SELECT ?result WHERE { <http://dbpedia.org/resource/Emperor_Nijō> <http://dbpedia.org/ontology/successor> ?v0 . ?result <http://dbpedia.org/ontology/parent> <http://dbpedia.org/resource/Emperor_Go-Shirakawa> . ?v0 <http://dbpedia.org/ontology/parent> ?result . },"```sparql
SELECT ?child WHERE {
  ?goShirakawa dbo:spouse ?parent .
  ?goShirakawa foaf:name ""Go-Shirakawa""@ja .
  
  ?child dbo:parent ?goShirakawa ;
         dbo:parent ?successorParent .

  ?nijo dbo:succeededBy ?rokujō .
  ?nijo foaf:name ""Nijō""@ja .
  ?rokujō foaf:name ""Rokujō""@ja .

  ?successorParent dbo:child ?rokujō .
}
```",3,3,4,2,2,2,2,9,0,0,1,0,0.0,0
926,50,val,"Give me the child of the father, that is a royalty, of Mustafa III and successor of the child of the spouse of Şermi Kadın.",SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/spouse> <http://dbpedia.org/resource/Şermi_Kadın> . <http://dbpedia.org/resource/Mustafa_III> <http://dbpedia.org/property/father> ?v0 . ?v0 <http://dbpedia.org/ontology/child> ?result . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v3 <http://dbpedia.org/property/father> ?v1 . ?v3 <http://dbpedia.org/ontology/successor> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?childOfFather ?successor WHERE {
  # Mustafa III's father
  dbr:Mustafa_III dbo:father dbr:Sultan_Ahmed_III .

  # Royal children of Sultan Ahmed III (Mustafa III's father)
  ?royalChild dbo:parent dbr:Sultan_Ahmed_III .
  
  # Şermi Kadın's spouse
  dbr:Şermi_Kadın dbo:spouse ?spouse .

  # Child of Şermi Kadın's spouse
  ?childOfSpouse dbo:parent ?spouse .

  # Successor of the child of Şermi Kadın's spouse
  ?successor dbo:predecessor ?childOfSpouse .

  # Find commonality between royal child and successor
  FILTER (?royalChild = ?successor)
  
  BIND(?royalChild AS ?childOfFather)
}
```",5,6,6,3,2,3,3,71,0,0,1,0,0.0,0
456,42,val,"Give me the spouse of the actor of Pacific Drive and professional in  and band of the band, that is a musical artist, of Dean Brody.","SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?v2 <http://dbpedia.org/ontology/spouse> ?result . ?result <http://dbpedia.org/property/occupation> """"@en . <http://dbpedia.org/resource/Pacific_Drive> <http://dbpedia.org/property/starring> ?v2 . ?v1 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . <http://dbpedia.org/resource/Dean_Brody> <http://dbpedia.org/ontology/associatedMusicalArtist> ?v1 . }","```sparql
# Step 1: Find the actor of ""Pacific Drive""
SELECT ?actor WHERE {
    ?movie dbo:title ""Pacific Drive""@en .
    ?movie dbo:starring ?actor .
}

# Assuming we have found an actor, let's call them ?actor

# Step 2: Find the spouse of this actor
SELECT ?spouse WHERE {
    ?actor foaf:surname ?surname .
    ?spouse foaf:surname ?surname ;
            foaf:mbox ?email .
    FILTER EXISTS { ?spouse dbo:spouse ?actor }
}

# Assuming we have found a spouse, let's call them ?spouse

# Step 3: Find Dean Brody's band and its musical artist members
SELECT ?bandMember WHERE {
    dbpedia:Dean_Brody dbo:member ?band .
    ?band dbo:member ?bandMember .
    FILTER EXISTS { ?bandMember rdf:type dbo:MusicalArtist }
}

# Assuming we have found a band member, let's call them ?bandMember

# Step 4: Find the professional field (band) of this musical artist
SELECT ?professionalField WHERE {
    ?bandMember dbo:member ?professionalField .
    FILTER EXISTS { ?professionalField rdf:type dbo:Band }
}
```",5,6,6,2,3,3,3,71,0,0,1,0,0.0,0
433,51,val,"Give me the professional in the profession of the writer of Slowhand at 70 – Live at the Royal Albert Hall and associated musical artist of the associated musical artist, that is an artist and a musical artist, of Scott LaFaro.",SELECT ?result WHERE { <http://dbpedia.org/resource/Slowhand_at_70_–_Live_at_the_Royal_Albert_Hall> <http://dbpedia.org/property/writer> ?v1 . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?result <http://dbpedia.org/property/occupation> ?v2 . ?v4 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . <http://dbpedia.org/resource/Scott_LaFaro> <http://dbpedia.org/ontology/associatedMusicalArtist> ?v4 . ?v1 <http://dbpedia.org/property/occupation> ?v2 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?professional WHERE {
  # Eric Clapton as the writer of ""Slowhand at 70 – Live at the Royal Albert Hall""
  dbr:Eric_Clapperton dbo:album dbr:Slowhand_at_70_%E2%80%93_Live_at_the_Royal_Albert_Hall .
  
  # Scott LaFaro's associated musical artist
  dbr:Scott_LaFaro dbo:associatedMusicalArtist dbr:Bill_Evans .

  # Find a professional who is both an artist and a musician related to Eric Clapton and Bill Evans
  ?professional dbo:profession dbr:Musician .
  ?professional dbo:associatedMusicalArtist dbr:Eric_Clapperton .
  ?professional dbo:associatedMusicalArtist dbr:Bill_Evans .
}
```",5,7,6,3,2,3,3,71,0,0,4,0,0.0,0
791,53,val,"Give me the predecessor of Emperor Antoku and father of the child, that is a royalty, of Emperor Takakura and spouse of the spouse, that is a royalty, of the reference to Emperor Takakura.","SELECT ?result WHERE { ?v1 <http://dbpedia.org/property/father> ?result . ?result <http://dbpedia.org/ontology/successor> <http://dbpedia.org/resource/Emperor_Antoku> . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v2 <http://dbpedia.org/ontology/spouse> ?v3 . ?v1 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Emperor_Takakura> . ?v3 <http://xmlns.com/foaf/0.1/name> ""Emperor Takakura""@en . ?result <http://dbpedia.org/ontology/spouse> ?v2 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?predecessor WHERE {
  # Find predecessor of Emperor Antoku
  ?antoku dbo:succession dbr:Emperor_Antoku .
  ?antoku dbo:predecessor ?predecessor .

  # Verify connections through Emperor Takakura
  OPTIONAL {
    ?takakura dbo:spouse ?spouse .
    ?child dbo:parent ?takakura ;
           dbo:parent ?spouse .
    FILTER (EXISTS { ?child a dbo:Monarch } || EXISTS { ?child a dbo:RoyalFamilyMember })
    
    # Check if the predecessor is related to Emperor Takakura
    OPTIONAL {
      ?predecessor dbo:succession ?takakura .
    }
  }
}
```",6,8,7,3,3,3,3,71,0,0,1,0,0.0,0
47,52,val,"Give me the office of Ajoy Mukherjee and office of the administration of the commander, that is a politician, in Operation Green Hunt and office of the awardee of Banga Bhushan.",SELECT ?result WHERE { ?v5 <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/Banga_Bhushan> . <http://dbpedia.org/resource/Ajoy_Mukherjee> <http://dbpedia.org/property/office> ?result . ?v2 <http://dbpedia.org/property/office> ?result . <http://dbpedia.org/resource/Operation_Green_Hunt> <http://dbpedia.org/ontology/commander> ?v3 . ?v2 <http://dbpedia.org/property/governor> ?v3 . ?v5 <http://dbpedia.org/property/office> ?result . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. },"```sparql
# Query for Ajoy Mukherjee's office
SELECT ?office WHERE {
  wd:Q123456 foaf:holdsOffice ?office .
}

# Query for the commander in Operation Green Hunt and their administrative role
SELECT ?person ?role WHERE {
  ?operation dbo:partOfOperation ""Operation Green Hunt"" ;
             dbo:commander ?person .
  ?person dbo:occupation ?role .
}

# Query for an awardee of Banga Bhushan and their office
SELECT ?office WHERE {
  ?awardee dbo:award ""Banga Bhushan Award"" ;
           foaf:holdsOffice ?office .
}
```

Note: Replace `wd:Q123456` with the actual DBpedia entity ID for Ajoy Mukherjee. The queries assume that DBpedia has structured data about these individuals and their roles.",6,7,7,3,3,3,3,71,0,0,1,0,0.0,0
892,41,val,Give me the landmark at elevation of the award of Anna Ishii and entity in the profession of Henri Crolla and entity in Province of Reggio Emilia.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/elevation> ?v4 . ?result <http://dbpedia.org/ontology/country> ?v2 . <http://dbpedia.org/resource/Henri_Crolla> <http://dbpedia.org/property/occupation> ?v2 . ?result <http://dbpedia.org/ontology/province> <http://dbpedia.org/resource/Province_of_Reggio_Emilia> . <http://dbpedia.org/resource/Anna_Ishii> <http://dbpedia.org/property/awards> ?v4 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?landmark WHERE {
  # Find the award Anna Ishii received
  ?award dbo:recipient dbr:Anna_Ishii .
  
  # Get the elevation of the location associated with this award
  ?location dbo:elevation ?elevationAward .
  ?award dbo:location ?location .

  # Find Henri Crolla's profession
  ?henri dbo:profession ?professionHenri .
  dbr:Henri_Crolla ?henri .

  # Find an entity in the Province of Reggio Emilia
  ?entity dbo:locatedIn dbr:Province_of_Reggio_Emilia .
  
  # Find a landmark at the same elevation as the award's location
  ?landmark dbo:elevation ?elevationAward ;
            a dbo:Lighthouse ; # Assuming we are looking for a lighthouse, adjust if needed
            dbo:location ?locationLandmark .

}
```",5,5,6,2,3,3,3,71,0,0,1,0,0.0,0
773,46,val,Give me the parent of the successor of Charles the Bald and spouse of the father of the parent of Bernard (son of Charles the Fat).,SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/spouse> ?result . <http://dbpedia.org/resource/Charles_the_Bald> <http://dbpedia.org/ontology/successor> ?v4 . ?result <http://dbpedia.org/ontology/child> ?v4 . ?v2 <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Bernard_(son_of_Charles_the_Fat)> . ?v2 <http://dbpedia.org/property/father> ?v1 . },"```sparql
# Step 1: Find Charles the Bald's successor (Louis the Stammerer)
SELECT ?successor WHERE {
  wd:Q1247 wdt:P35 wd:Q1343 .
}

# Step 2: Get the parent of Louis the Stammerer (Charles the Bald)
SELECT ?parent WHERE {
  wd:Q1343 wdt:P22 wd:Q1247 .
}

# Step 3: Identify Bernard's father and grandfather
SELECT ?father, ?grandfather WHERE {
  wd:Q1116 wdt:P22 ?father .
  ?father wdt:P22 ?grandfather .
  FILTER (?grandfather = wd:Q1342) # Louis the German
}

# Step 4: Find the spouse of Louis the German (Ermengarde of Hesbaye)
SELECT ?spouse WHERE {
  wd:Q1342 wdt:P26 wd:Q1117 .
}

# Step 5: Determine the parent of Ermengarde of Hesbaye (Adalard of Valenciennes)
SELECT ?parent WHERE {
  wd:Q1117 wdt:P22 wd:Q1120 .
}
```",5,5,6,3,2,3,3,71,0,0,1,0,0.0,0
582,40,val,"Give me the reference to the residence of the reference, that is a scientist, to Hirotaka Sugawara and figure known as --10-19 and player in Kazuaki Nagasawa.","SELECT ?result WHERE { ?result <http://xmlns.com/foaf/0.1/name> ?v1 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Scientist>. ?v2 <http://xmlns.com/foaf/0.1/name> ""Hirotaka Sugawara""@en . ?v2 <http://dbpedia.org/property/residence> ?v1 . <http://dbpedia.org/resource/Kazuaki_Nagasawa> <http://dbpedia.org/ontology/team> ?result . ?result <http://dbpedia.org/property/nickname> ""--10-19""^^<http://www.w3.org/2001/XMLSchema#gMonthDay> . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?residence WHERE {
  # Find Hirotaka Sugawara's residence
  OPTIONAL { 
    dbr:Hirotaka_Sugawara dbo:residence ?residence .
  }

  # Identify the figure known as --10-19 (assuming it might be a pseudonym or alias)
  OPTIONAL {
    ?figure rdfs:label ""-10-19"" ;
            dbo:alias ?alias .
    FILTER(CONTAINS(LCASE(?alias), ""hirotaka sugawara""))
  }

  # Find Kazuaki Nagasawa and his role as a player
  OPTIONAL {
    dbr:Kazuaki_Nagasawa dbo:role ?role .
    FILTER CONTAINS(LCASE(?role), ""player"")
  }
}
```",5,6,6,3,3,3,3,71,0,0,1,0,0.0,0
130,17,val,"Give me the entity in the administration, that is American, of the award of Živko Ključe and figure known as Vanderbilt Commodores.",SELECT ?result WHERE { <http://dbpedia.org/resource/Živko_Ključe> <http://dbpedia.org/property/awards> ?v0 . ?v3 <http://dbpedia.org/property/governor> ?v0 . ?v3 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/United_States>. ?result <http://dbpedia.org/property/nickname> <http://dbpedia.org/resource/Vanderbilt_Commodores> . ?result <http://dbpedia.org/ontology/state> ?v3 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?entity WHERE {
  # Assuming Živko Ključe is associated with an award, find that award
  ?award dbo:recipient dbr:Živko_Ključe .
  
  # Find notable figures associated with Vanderbilt Commodores
  ?figure dbo:associatedTeam dbr:Vanderbilt_Commodores ;
          a dbo:Person .

  # Find American entities in administration linked to both
  ?entity dbo:nationality dbr:United_States ;
          dbo:position ?position ;
          (dbo:awardRecipient ?award ; dbo:associatedWith ?figure) .
}
```",4,5,5,3,2,3,2,20,0,0,1,0,0.0,0
965,54,val,"Give me the parent of the child, that is a royalty, of the person born, that is a politician, on 1854-05-24 and spouse of the spouse of Princess Victoria of Hesse and by Rhine and parent of George Mountbatten, 2nd Marquess of Milford Haven.","SELECT ?result WHERE { ?v4 <http://dbpedia.org/property/father> ?v1 . ?result <http://dbpedia.org/ontology/spouse> ?v2 . <http://dbpedia.org/resource/Princess_Victoria_of_Hesse_and_by_Rhine> <http://dbpedia.org/ontology/spouse> ?v2 . ?v1 <http://dbpedia.org/ontology/birthDate> ""1854-05-24""^^<http://www.w3.org/2001/XMLSchema#date> . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. <http://dbpedia.org/resource/George_Mountbatten,_2nd_Marquess_of_Milford_Haven> <http://dbpedia.org/ontology/parent> ?result . ?v4 <http://dbpedia.org/ontology/parent> ?result . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?parent WHERE {
  # Lord Randolph Churchill (politician born on 1854-05-24)
  ?lordRandolph a dbo:Politician ;
                dbo:birthDate ""1854-05-24""^^xsd:date ;
                dbo:spouse ?jennieJerome .

  # Princess Victoria of Hesse and by Rhine's spouse
  dbr:Princess_Victoria_of_Hesse_and_by_Rhine dbo:spouse ?princeLouis .

  # Prince Louis of Battenberg's spouse
  ?princeLouis dbo:spouse dbr:Princess_Victoria_of_Hesse_and_by_Rhine .

  # Parent of George Mountbatten, 2nd Marquess of Milford Haven
  dbr:George_Mountbatten_2nd_Marquess_of_Milford_Haven dbo:parent ?louisMountbatten ;
                                                        dbo:parent ?edwinaAshley .

  # Child of Lord Randolph Churchill who is royalty (Winston Churchill)
  ?winstonChurchill dbo:childOf ?lordRandolph ;
                    a dbo:RoyalFamilyMember .

  # Parent of Winston Churchill
  ?jennieJerome dbo:child ?winstonChurchill .

  # Parent of Jennie Jerome
  ?jennieJerome dbo:parent ?parent .
}
```",6,8,7,3,3,3,3,71,0,0,1,0,0.0,0
965,50,val,"Give me the parent of the child, that is a royalty, of the person born, that is a politician, on 1854-05-24 and parent of the person born, that is a noble, as Prince George of Battenberg.","SELECT ?result WHERE { ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v0 <http://dbpedia.org/ontology/parent> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v0 <http://dbpedia.org/property/birthName> ""Prince George of Battenberg""@en . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Noble>. ?v3 <http://dbpedia.org/ontology/parent> ?result . ?v1 <http://dbpedia.org/ontology/birthDate> ""1854-05-24""^^<http://www.w3.org/2001/XMLSchema#date> . ?v3 <http://dbpedia.org/property/father> ?v1 . }","```sparql
SELECT ?parent WHERE {
  # Step 1: Identify Otto von Bismarck
  ?bismarck dbo:birthDate ""1854-05-24""^^xsd:date ;
           rdf:type dbo:Politician .
  
  # Step 2: Find his child who is royalty (Marie Louise of Battenberg)
  ?marieLuisa dbo:parent ?bismarck ;
              rdf:type dbo:Royalty .

  # Step 3: Verify Prince George of Battenberg's parentage
  ?princeGeorge dbo:birthDate ?birthDate ;
                dbo:parent ?louisBattenberg ;
                rdf:type dbo:Noble .
  
  ?louisBattenberg rdfs:label ""Prince Louis of Battenberg""@en .

  # Step 4: Find the parent of Marie Louise of Bismarck
  ?marieLuisa dbo:parent ?parent .
}
```",5,8,6,3,2,3,3,71,2,0,0,1.0,1.0,1.0
826,41,val,"Give me the successor of the child, that is a royalty, of Louis I, Grand Duke of Hesse and spouse of the child of Johann Heinrich Appel and predecessor of Louis IV, Grand Duke of Hesse.","SELECT ?result WHERE { <http://dbpedia.org/resource/Louis_I,_Grand_Duke_of_Hesse> <http://dbpedia.org/ontology/child> ?v4 . ?v4 <http://dbpedia.org/ontology/successor> ?result . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v2 <http://dbpedia.org/property/father> ""Johann Heinrich Appel""@en . ?result <http://dbpedia.org/ontology/successor> <http://dbpedia.org/resource/Louis_IV,_Grand_Duke_of_Hesse> . ?v2 <http://dbpedia.org/ontology/spouse> ?result . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?successor WHERE {
  # Step 1: Identify Louis I, Grand Duke of Hesse
  ?louisI a dbo:GrandDuke ;
          foaf:name ""Louis I, Grand Duke of Hesse""@en .

  # Step 2: Find the child who is royalty
  ?child dbo:parent ?louisI ;
         dbo:spouse ?royalSpouse .
  
  ?royalSpouse a dbo:Monarch ; # Assuming royalty means being a monarch

  # Step 3: Determine the spouse of this royal child
  ?appelChild dbo:parent dbr:Johann_Heinrich_Appel ;
              foaf:name ?spouseName .

  FILTER(?royalSpouse = ?appelChild)

  # Step 4: Identify Johann Heinrich Appel and his child
  # Already done in the above step

  # Step 5: Find the predecessor of Louis IV, Grand Duke of Hesse
  ?predecessor dbo:succeededBy dbr:Louis_IV,_Grand_Duke_of_Hesse ;
               foaf:name ?spouseName .

  FILTER(?royalSpouse = ?predecessor)

  # Step 6: Connect these elements
  # Already connected in the above steps

  # Step 7: Find the successor of this spouse
  ?successor dbo:predecessor ?royalSpouse .
}
```",5,6,6,2,3,3,3,71,0,0,1,0,0.0,0
456,48,val,"Give me the spouse of the actor of the movie, that is a work and a television show, with Ross Newton and band of the band, that is a musical artist, of Dean Brody.",SELECT ?result WHERE { ?v3 <http://dbpedia.org/property/starring> <http://dbpedia.org/resource/Ross_Newton> . <http://dbpedia.org/resource/Dean_Brody> <http://dbpedia.org/ontology/associatedMusicalArtist> ?v1 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?v1 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v3 <http://dbpedia.org/property/starring> ?v2 . ?v2 <http://dbpedia.org/ontology/spouse> ?result . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/TelevisionShow>. },"```sparql
SELECT ?movie ?actor ?band ?spouse WHERE {
  # Find the movie with Ross Newton and ""band of the band""
  ?movie dbo:starring dbr:Ross_Newton ;
         rdfs:label ?movieLabel .
  
  FILTER(CONTAINS(LCASE(?movieLabel), ""work"") && CONTAINS(LCASE(?movieLabel), ""television show""))
  
  # Find the actor in this movie
  ?movie dbo:starring ?actor .

  # Find Dean Brody's band
  dbr:Dean_Brody dbo:band ?band .
  
  # Find the spouse of the actor
  ?actor dbo:spouse ?spouse .
}
```",5,8,6,3,2,3,3,71,0,0,1,0,0.0,0
124,51,val,"Give me the military force of the force, that is a societal event and a military conflict, of the person born on 1850-06-24 and military force of the war, that is an event and a military conflict and a societal event, of Frank Rhodes (British Army officer).","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/battle> ?v2 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. <http://dbpedia.org/resource/Frank_Rhodes_(British_Army_officer)> <http://dbpedia.org/ontology/battle> ?v4 . ?v1 <http://dbpedia.org/ontology/birthDate> ""1850-06-24""^^<http://www.w3.org/2001/XMLSchema#date> . ?result <http://dbpedia.org/ontology/battle> ?v4 . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?v2 <http://dbpedia.org/ontology/commander> ?v1 . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT DISTINCT ?personMilitaryForce ?frankRhodesWar ?frankRhodesMilitaryForce WHERE {
  # Find the person born on June 24, 1850
  ?person dbo:birthDate ""1850-06-24""^^xsd:date .
  
  # Retrieve military forces associated with this person that are societal events and military conflicts
  ?personMilitaryForce dbo:agent ?person ;
                      a dbo:MilitaryConflict ;
                      a dbo:SocietalEvent .

  # Find Frank Rhodes, the British Army officer
  ?frankRhodes rdfs:label ""Frank Rhodes (British Army officer)""@en .
  
  # Retrieve wars associated with Frank Rhodes that are events, military conflicts, and societal events
  ?war dbo:agent ?frankRhodes ;
       a dbo:MilitaryConflict ;
       a dbo:Event ;
       a dbo:SocietalEvent .

  # Retrieve the military force involved in these wars
  ?war dbo:militaryForce ?frankRhodesMilitaryForce .
}
```",5,10,6,3,2,3,3,71,0,0,1085,0,0.0,0
124,52,val,"Give me the military force of Battle of Atbara and commander in the war, that is a societal event and a military conflict, of the reference, that is Australian and an organisation and a military unit, to 'A' Battery, Royal Australian Artillery and military force of the war, that is an event and a military conflict and a societal event, of Frank Rhodes (British Army officer).","SELECT ?result WHERE { ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?v3 <http://xmlns.com/foaf/0.1/name> ""'A' Battery, Royal Australian Artillery""@en . <http://dbpedia.org/resource/Frank_Rhodes_(British_Army_officer)> <http://dbpedia.org/ontology/battle> ?v5 . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?result <http://dbpedia.org/ontology/battle> ?v5 . ?v3 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Australia>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?v2 <http://dbpedia.org/ontology/commander> ?result . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryUnit>. ?result <http://dbpedia.org/ontology/battle> <http://dbpedia.org/resource/Battle_of_Atbara> . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v3 <http://dbpedia.org/ontology/battle> ?v2 . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?battle ?commander ?unit ?frankConflict ?frankCommander WHERE {
  # Battle of Atbara details
  VALUES ?battle { dbr:Battle_of_Atbara }
  
  # Commanders of the Battle of Atbara
  ?battle dbo:commander ?commander .
  
  # 'A' Battery, Royal Australian Artillery reference
  VALUES ?unit { dbr:A_Battery,_Royal_Australian_Artillery }
  
  # Frank Rhodes and his military conflict
  ?frankConflict dbo:commander ?frankCommander ;
                 dbo:participatedIn ?battle .
  FILTER(?frankCommander = dbr:Frank_Rhodes_(British_Army_officer))
}
```",6,14,7,3,3,3,3,71,0,0,1,0,0.0,0
170,22,val,Give me the birth place of the awardee of People's Artist of Russia and entity in the work of International Energy Agency.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/country> ?v2 . ?v3 <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/People's_Artist_of_Russia> . ?v2 <http://dbpedia.org/property/author> <http://dbpedia.org/resource/International_Energy_Agency> . ?v3 <http://dbpedia.org/ontology/birthPlace> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?person ?birthPlace WHERE {
  ?person dbo:honorificTitle dbr:People's_Artist_of_Russia .
  ?person dbo:memberOf dbr:International_Energy_Agency .
  ?person dbo:birthPlace ?birthPlace .
}
```",4,4,5,2,2,2,3,28,0,0,12,0,0.0,0
839,40,val,"Give me the band of the person born, that is a musical artist, as the persona of Kevin Russell (musician) and band of Peter Schorowsky and band of Matthias Röhr.",SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. <http://dbpedia.org/resource/Kevin_Russell_(musician)> <http://xmlns.com/foaf/0.1/givenName> ?v2 . ?v1 <http://dbpedia.org/property/birthName> ?v2 . ?result <http://dbpedia.org/ontology/bandMember> <http://dbpedia.org/resource/Peter_Schorowsky> . ?v1 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?result <http://dbpedia.org/ontology/bandMember> <http://dbpedia.org/resource/Matthias_Röhr> . },"```sparql
SELECT ?person ?band WHERE {
  VALUES (?personName) { 
    (""Kevin Russell (musician)""^^xsd:string)
    (""Peter Schorowsky""^^xsd:string)
    (""Matthias Röhr""^^xsd:string)
  }
  
  ?person rdfs:label ?personName .
  FILTER(CONTAINS(LCASE(?personName), ""musician"") || CONTAINS(LCASE(?personName), ""singer""))
  
  OPTIONAL {
    ?band dbo:musicalArtist ?person .
    ?band rdfs:label ?bandLabel .
    FILTER(langMatches(lang(?bandLabel), ""EN""))
  }
  
  SERVICE wikibase:label { bd:serviceParam wikibase:language ""[AUTO_LANGUAGE],en"". }
}
ORDER BY ?person
```",5,6,6,3,3,3,3,71,0,0,1,0,0.0,0
507,50,val,"Give me the professional in the profession of Guy Ferland and director of the movie, that is a movie and a work, with the person born on 1919-06-17.","SELECT ?result WHERE { ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?v4 <http://dbpedia.org/property/starring> ?v0 . ?v4 <http://dbpedia.org/ontology/director> ?result . <http://dbpedia.org/resource/Guy_Ferland> <http://dbpedia.org/property/occupation> ?v3 . ?result <http://dbpedia.org/property/occupation> ?v3 . ?v0 <http://dbpedia.org/ontology/birthDate> ""1919-06-17""^^<http://www.w3.org/2001/XMLSchema#date> . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Film>. }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?director WHERE {
  ?person a dbo:Actor ;
          dbo:birthDate ""1919-06-17""^^xsd:date ;
          dbo:directed ?film .
  
  ?film a dbo:Film, dbo:Work .

  FILTER EXISTS { ?person dbp:name ?name . }
}
```",5,7,6,3,2,3,3,71,0,0,1,0,0.0,0
987,54,val,"Give me the entity in Montenegro and birth place of the actor of the show, that is a film, with Emir Hadžihafizbegović and birth place of the band, that is an artist and a musical artist, of Šako Polumenta.",SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/starring> <http://dbpedia.org/resource/Emir_Hadžihafizbegović> . ?result <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Montenegro> . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. ?v1 <http://dbpedia.org/property/starring> ?v4 . <http://dbpedia.org/resource/Šako_Polumenta> <http://dbpedia.org/ontology/associatedMusicalArtist> ?v2 . ?v2 <http://dbpedia.org/ontology/birthPlace> ?result . ?v4 <http://dbpedia.org/ontology/birthPlace> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Film>. },"```sparql
# Step 1: Find a film featuring Emir Hadžihafizbegović
SELECT ?film WHERE {
  ?film dbo:starring dbpedia:Emir_Hadžihafizbegović .
}

# Step 2: Find actors in the identified film who were born in Montenegro
SELECT DISTINCT ?actor ?birthPlace WHERE {
  VALUES (?film) { <INSERT_FILM_URI_HERE> } # Replace with actual film URI from step 1
  ?film dbo:starring ?actor .
  ?actor dbo:birthPlace ?birthLocation .
  ?birthLocation rdfs:label ""Montenegro""@en .
}

# Step 3: Find bands associated with Šako Polumenta and their birthplaces
SELECT DISTINCT ?band ?bandBirthPlace WHERE {
  ?band dbo:member dbpedia:Šako_Polumenta ;
        dbo:birthPlace ?bandBirthLocation .
  ?bandBirthLocation rdfs:label ?bandBirthPlace .
}
```

Note: Replace `<INSERT_FILM_URI_HERE>` with the actual URI of the film identified in step 1.",6,9,7,3,3,3,3,71,0,0,1,0,0.0,0
926,44,val,"Give me the successor of the child of Ahmed III and father of Mahmud II and child of the father, that is a royalty, of Mustafa III.",SELECT ?result WHERE { <http://dbpedia.org/resource/Mahmud_II> <http://dbpedia.org/property/father> ?result . ?v4 <http://dbpedia.org/ontology/successor> ?result . <http://dbpedia.org/resource/Mustafa_III> <http://dbpedia.org/property/father> ?v0 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v0 <http://dbpedia.org/ontology/child> ?result . ?v4 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Ahmed_III> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?successor WHERE {
  # Abdul Hamid I's successor
  OPTIONAL { 
    dbr:Abdul_Hamid_I dbo:successor ?abdulHamidSuccessor .
  }
  
  # Mustafa III's successor
  OPTIONAL { 
    dbr:Mustafa_III dbo:successor ?mustafaSuccessor .
  }

  # Check if both successors are the same person (Selim III)
  FILTER (?abdulHamidSuccessor = ?mustafaSuccessor && ?abdulHamidSuccessor = dbr:Selim_III)
  
  # Return the successor
  BIND(?abdulHamidSuccessor AS ?successor)
}
```",5,6,6,2,3,3,3,71,0,0,1,0,0.0,0
826,48,val,Give me the predecessor of the parent of Prince Friedrich of Hesse and by Rhine and spouse of the child of the father of Anna Magdalena Appel.,SELECT ?result WHERE { ?v2 <http://dbpedia.org/ontology/spouse> ?result . ?v2 <http://dbpedia.org/property/father> ?v3 . <http://dbpedia.org/resource/Anna_Magdalena_Appel> <http://dbpedia.org/property/father> ?v3 . ?result <http://dbpedia.org/ontology/successor> ?v1 . <http://dbpedia.org/resource/Prince_Friedrich_of_Hesse_and_by_Rhine> <http://dbpedia.org/ontology/parent> ?v1 . },"```sparql
# Step 1: Find Anna Magdalena Bach's father
SELECT ?father WHERE {
  wd:Q123456 wdt:P22 ?mother .
  ?mother wdt:P25 wd:Q789012 . # Johann Christoph Bach
}

# Step 2: Find a child of Johann Christoph Bach (Carl Philipp Emanuel Bach)
SELECT ?child WHERE {
  wd:Q789012 wdt:P40 ?child .
}

# Step 3: Find the spouse of Carl Philipp Emanuel Bach
SELECT ?spouse WHERE {
  ?child wdt:P26 ?spouse .
}

# Step 4: Identify Prince Friedrich's parent (Louis IV, Grand Duke of Hesse)
SELECT ?parent WHERE {
  wd:Q987654 wdt:P22 ?mother .
  ?mother wdt:P25 wd:Q345678 . # Princess Alice
  ?parent wdt:P31/wdt:P279* wd:Q1234567 . # Louis IV, Grand Duke of Hesse
}

# Step 5: Find the predecessor of Louis IV, Grand Duke of Hesse (Ludwig III)
SELECT ?predecessor WHERE {
  wd:Q345678 wdt:P136 ?position .
  ?predecessor wdt:P136 ?position .
  FILTER(?predecessor != wd:Q345678) # Exclude current holder
}
```

Note: The actual Wikidata IDs (e.g., `wd:Q123456`, `wd:Q789012`) need to be replaced with the correct identifiers for Anna Magdalena Bach, Johann Christoph Bach, Carl Philipp Emanuel Bach, Princess Alice, and Louis IV, Grand Duke of Hesse.",5,5,6,3,2,3,3,71,0,0,1,0,0.0,0
459,19,val,"Give me the governor of Dana Murphy and governor of the death place, that is a settlement, of Cliff Roquemore and person born as John Kevin Stitt.","SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. <http://dbpedia.org/resource/Dana_Murphy> <http://dbpedia.org/property/governor> ?result . <http://dbpedia.org/resource/Cliff_Roquemore> <http://dbpedia.org/ontology/deathPlace> ?v1 . ?v1 <http://dbpedia.org/property/governor> ?result . ?result <http://dbpedia.org/property/birthName> ""John Kevin Stitt""@en . }","```sparql
# Query for Dana Murphy's birthplace and current governor of that state
SELECT ?governor WHERE {
  ?dana dbo:birthPlace ?birthPlace .
  FILTER (str(?dama) = ""Dana_Murphy"") .
  ?birthPlace dbo:country dbc:United_States .
  ?birthPlace dbo:state ?state .
  ?state dbo:governmentOfficial ?governor .
  ?governor rdf:type dbo:Governor .
}

UNION

# Query for Cliff Roquemore's death place and current governor of that state
SELECT ?governor WHERE {
  ?cliff dbo:deathPlace ?deathPlace .
  FILTER (str(?cliff) = ""Cliff_Roquemore"") .
  ?deathPlace rdf:type dbo:Settlement .
  ?deathPlace dbo:country dbc:United_States .
  ?deathPlace dbo:state ?state .
  ?state dbo:governmentOfficial ?governor .
  ?governor rdf:type dbo:Governor .
}

UNION

# Query for John Kevin Stitt's birthplace and current governor of that state
SELECT ?governor WHERE {
  ?johnKevin dbo:birthPlace ?birthPlace .
  FILTER (str(?johnKevin) = ""John_Kevin_Stitt"") .
  ?birthPlace dbo:country dbc:United_States .
  ?birthPlace dbo:state ?state .
  ?state dbo:governmentOfficial ?governor .
  ?governor rdf:type dbo:Governor .
}
```",4,5,5,2,3,2,3,28,0,0,1,0,0.0,0
124,42,val,"Give me the commander in the war, that is a societal event and a military conflict, of A Field Battery, Royal Australian Artillery and military force of Battle of Tamai and military force of the force, that is a societal event and a military conflict, of Herbert Kitchener, 1st Earl Kitchener.","SELECT ?result WHERE { ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?v2 <http://dbpedia.org/ontology/commander> ?result . <http://dbpedia.org/resource/A_Field_Battery,_Royal_Australian_Artillery> <http://dbpedia.org/ontology/battle> ?v2 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?result <http://dbpedia.org/ontology/battle> <http://dbpedia.org/resource/Battle_of_Tamai> . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?result <http://dbpedia.org/ontology/battle> ?v1 . ?v1 <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Herbert_Kitchener,_1st_Earl_Kitchener> . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?commander WHERE {
  # Find commanders involved in the Battle of Tamai
  ?battle dbr:Battle_of_Tamai ;
         dbo:commander ?commander1 .
  
  # Find commanders involved with A Field Battery, Royal Australian Artillery
  ?unit dbr:A_Field_Battery,_Royal_Australian_Artillery ;
        dbo:participatedInMilitaryConflict ?conflict .
  ?conflict dbo:commander ?commander2 .

  # Find commanders associated with Herbert Kitchener
  ?kitchenerEvent dbo:commander ?commander3 .
  FILTER (str(?kitchenerEvent) = ""Herbert_Kitchener"")

  # Ensure the same commander is involved in all relevant events
  FILTER (?commander1 = ?commander2 && ?commander1 = ?commander3)

  # Return the commander's name
  ?commander1 rdfs:label ?name .
}
```",5,9,6,2,3,3,3,71,0,0,1,0,0.0,0
445,51,val,Give me the entity in the award of the commander in Battle of Saint-Mihiel and death place of the awardee of Royal Astronomical Society.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/country> ?v2 . <http://dbpedia.org/resource/Battle_of_Saint-Mihiel> <http://dbpedia.org/ontology/commander> ?v1 . ?v4 <http://dbpedia.org/ontology/deathPlace> ?result . ?v4 <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/Royal_Astronomical_Society> . ?v1 <http://dbpedia.org/property/awards> ?v2 . },"```sparql
# Query to find the commander in Battle of Saint-Mihiel and the award they received
SELECT ?commander ?award WHERE {
  ?battle dbo:type dbr:Battle_of_Saint-Mihiel .
  ?battle dbo:commander ?commander .
  ?commander dbo:receivedAward ?award .
}

UNION

# Query to find awardees of the Royal Astronomical Society and their place of death
SELECT ?person ?deathPlace WHERE {
  ?person dbo:awardedBy dbr:Royal_Astronomical_Society .
  ?person dbo:placeOfDeath ?deathPlace .
}
```",5,5,6,3,2,3,3,71,0,0,2,0,0.0,0
507,53,val,Give me the professional in the profession of Guy Ferland and director of Entertaining Mr Sloane (film) and spouse of the person born as the birth name of Anne V. Coates.,SELECT ?result WHERE { <http://dbpedia.org/resource/Anne_V._Coates> <http://dbpedia.org/property/birthName> ?v3 . ?result <http://dbpedia.org/ontology/spouse> ?v2 . ?result <http://dbpedia.org/property/occupation> ?v1 . ?v2 <http://dbpedia.org/property/birthName> ?v3 . <http://dbpedia.org/resource/Entertaining_Mr_Sloane_(film)> <http://dbpedia.org/ontology/director> ?result . <http://dbpedia.org/resource/Guy_Ferland> <http://dbpedia.org/property/occupation> ?v1 . },"```sparql
# Step 1: Find Guy Ferland's profession
SELECT ?profession WHERE {
  dbpedia:Guy_Ferland dbo:occupation ?profession .
}

# Step 2: Find the director of ""Entertaining Mr Sloane""
SELECT ?director WHERE {
  dbpedia:""Entertaining_Mr._Sloane"" dbo:director ?director .
}

# Step 3: Find Anne V. Coates' spouse
SELECT ?spouse WHERE {
  dbpedia:Anne_V._Coates dbo:spouse ?spouse .
}

# Final step: Combine the results to find the common individual
SELECT DISTINCT ?person WHERE {
  # Person has the same profession as Guy Ferland
  ?person dbo:occupation ?profession .
  FILTER EXISTS { dbpedia:Guy_Ferland dbo:occupation ?profession . }

  # Person is the director of ""Entertaining Mr Sloane""
  ?director dbpedia:""Entertaining_Mr._Sloane"" dbo:director .
  FILTER (?person = ?director)

  # Person is the spouse of Anne V. Coates
  ?spouse dbpedia:Anne_V._Coates dbo:spouse .
  FILTER (?person = ?spouse)
}
```",6,6,7,3,3,3,3,71,0,0,1,0,0.0,0
791,55,val,"Give me the spouse of the spouse, that is a royalty, of Emperor Takakura and father of the child, that is a royalty, of Emperor Takakura and predecessor of the child of Emperor Takakura.",SELECT ?result WHERE { ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v2 <http://dbpedia.org/property/father> ?result . ?result <http://dbpedia.org/ontology/successor> ?v5 . ?result <http://dbpedia.org/ontology/spouse> ?v3 . ?v3 <http://dbpedia.org/ontology/spouse> <http://dbpedia.org/resource/Emperor_Takakura> . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v5 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Emperor_Takakura> . ?v2 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Emperor_Takakura> . },"```sparql
SELECT ?spouseOfSpouse WHERE {
  # Step 1: Identify Emperor Takakura's spouse
  dbpedia:Emperor_Takakura dbo:spouse ?empress .
  
  # Step 2: Find the spouse of Emperor Takakura's spouse
  ?empress dbo:spouse ?spouseOfSpouse .

  # Step 3: Ensure this second spouse is royalty
  ?spouseOfSpouse rdf:type dbpedia:RoyalFamilyMember .

  # Step 4: Identify Emperor Takakura's child who is royalty
  dbpedia:Emperor_Takakura dbo:child ?royalChild .
  ?royalChild rdf:type dbpedia:RoyalFamilyMember .

  # Step 5: Find the father of this royal child
  ?royalChild dbo:parent ?fatherOfRoyalChild .

  # Step 6: Ensure the father is the predecessor of the child
  ?royalChild dbo:predecessor ?fatherOfRoyalChild .
}
```",6,8,7,2,3,3,3,71,0,0,1,0,0.0,0
527,15,val,"Give me the actor of the movie, that is a work and English and a television show, with the professional in Actor and author of The Boy Who Kicked Pigs.","SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/United_Kingdom>. <http://dbpedia.org/resource/The_Boy_Who_Kicked_Pigs> <http://dbpedia.org/property/author> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?v1 <http://dbpedia.org/property/starring> ?v0 . ?v0 <http://dbpedia.org/property/occupation> ""Actor""@en . ?v1 <http://dbpedia.org/property/starring> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/TelevisionShow>. }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?actor WHERE {
  ?book dbo:author ?person .
  ?person foaf:name ?name .
  ?person dbo:profession dbr:Actor .
  
  FILTER(CONTAINS(LCASE(?name), ""the boy who kicked pigs""))
  
  OPTIONAL { 
    ?work dbo:starring ?person ;
          a ?type .
    FILTER((?type = dbr:Film || ?type = dbr:TelevisionShow) && CONTAINS(LCASE(STR(?work)), ""english""))
  }
}
```",4,7,5,3,2,3,2,20,0,0,1,0,0.0,0
274,19,val,"Give me the associated musical artist of Cecil Taylor and professional in  and band member of the person born, that is a musical artist, as John Birks Gillespie.","SELECT ?result WHERE { ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. <http://dbpedia.org/resource/Cecil_Taylor> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?result <http://dbpedia.org/ontology/associatedMusicalArtist> ?v2 . ?v2 <http://dbpedia.org/property/birthName> ""John Birks Gillespie""@en . ?result <http://dbpedia.org/property/occupation> """"@en . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?associatedArtist ?bandMember WHERE {
  # Find musicians associated with Cecil Taylor
  ?cecilTaylor dbr:Cecil_Taylor .
  ?cecilTaylor dbo:associatedMusicalArtist ?associatedArtist .

  # Find band members of groups involving Dizzy Gillespie
  ?dizzyGillespie dbr:Dizzy_Gillespie .
  ?group dbo:bandMember ?bandMember ;
         dbo:member ?dizzyGillespie .

  # Ensure the band member is also a musical artist
  ?bandMember dbo:occupation dbr:Musical_artist .

  # Find if there's an overlap between associated artists and band members
  FILTER(?associatedArtist = ?bandMember)
}
```",4,5,5,2,3,2,3,28,0,0,1,0,0.0,0
579,17,val,"Give me the native of Edinburgh and person born as the birth name of the native, that is an office holder, of Edinburgh.",SELECT ?result WHERE { ?v0 <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Edinburgh> . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?result <http://dbpedia.org/property/birthName> ?v3 . ?v0 <http://dbpedia.org/property/birthName> ?v3 . ?result <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Edinburgh> . },"```sparql
SELECT ?officeHolder ?officeTitle WHERE {
  ?person foaf:birthName ""Thomas Sean Connery""@en .
  ?person dbo:occupation dbr:Actor ; 
          dbo:placeOfBirth dbr:Edinburgh .
  OPTIONAL { ?person dbo:holdsOffice ?office . }
  ?office dbo:officeHolder ?officeHolder ;
          dbo:title ?officeTitle .
}
```",4,5,5,3,2,3,2,20,0,0,18,0,0.0,0
933,44,val,"Give me the band of the band, that is a group and a band and an organisation, of Alan Warner (musician) and reference to the birth name of Alan Warner (musician) and band of Mike Elliott (saxophonist).",SELECT ?result WHERE { ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Group>. <http://dbpedia.org/resource/Mike_Elliott_(saxophonist)> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v0 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Band>. ?result <http://xmlns.com/foaf/0.1/name> ?v4 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. <http://dbpedia.org/resource/Alan_Warner_(musician)> <http://dbpedia.org/ontology/associatedMusicalArtist> ?v0 . <http://dbpedia.org/resource/Alan_Warner_(musician)> <http://dbpedia.org/property/birthName> ?v4 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?alanWarnerBand ?alanWarnerBirthName ?mikeElliottBand 
WHERE {
  # Find Alan Warner's birth name and band
  dbr:Alan_Warner_(musician) dbo:birthName ?alanWarnerBirthName .
  
  # Find the band associated with Alan Warner that is a group, band, and organization
  ?band dbo:member dbr:Alan_Warner_(musician) ;
        rdf:type dbo:Band ;
        dbo:genre ?genre .
  FILTER EXISTS { ?genre rdfs:subClassOf* dbo:MusicalGroup }
  
  # Find Mike Elliott's associated band
  dbr:Mike_Elliott_(saxophonist) dbo:member ?mikeElliottBand .
  ?mikeElliottBand rdf:type dbo:Band .
  
  BIND(?band AS ?alanWarnerBand)
}
```",5,8,6,2,3,3,3,71,0,0,1,0,0.0,0
839,46,val,"Give me the band of the member of Böhse Onkelz and band of the person born, that is a musical artist, as the persona of Kevin Russell (musician).",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/bandMember> ?v4 . ?v1 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . <http://dbpedia.org/resource/Kevin_Russell_(musician)> <http://xmlns.com/foaf/0.1/givenName> ?v2 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. <http://dbpedia.org/resource/Böhse_Onkelz> <http://dbpedia.org/ontology/bandMember> ?v4 . ?v1 <http://dbpedia.org/property/birthName> ?v2 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?band1 ?band2 WHERE {
  # Find a member of Böhse Onkelz and their other bands
  ?member dbo:memberOfBand dbr:Böhse_Onkelz .
  OPTIONAL { ?member dbo:memberOfBand ?otherBand . FILTER(?otherBand != dbr:Böhse_Onkelz) }
  
  # Kevin Russell's band
  dbr:Kevin_Russell dbo:birthPlace ?place ;
                     a dbo:MusicalArtist .
  ?kevinRussellBand dbo:leadMember dbr:Kevin_Russell .

  BIND(IF(BOUND(?otherBand), ?otherBand, ""No other band found"") AS ?band1)
  BIND(dbo:leadMember ?kevinRussellBand AS ?band2)

}
```",5,6,6,3,2,3,3,71,0,0,1,0,0.0,0
926,55,val,"Give me the child of the father, that is a royalty, of Mustafa III and father of the father of Abdulaziz and successor of the child of Ahmed III.",SELECT ?result WHERE { ?v0 <http://dbpedia.org/ontology/child> ?result . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v2 <http://dbpedia.org/property/father> ?result . <http://dbpedia.org/resource/Abdulaziz> <http://dbpedia.org/property/father> ?v2 . <http://dbpedia.org/resource/Mustafa_III> <http://dbpedia.org/property/father> ?v0 . ?v5 <http://dbpedia.org/ontology/successor> ?result . ?v5 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Ahmed_III> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?person WHERE {
  # Mustafa III's father
  VALUES (?mustafaIII) { dbr:Mustafa_III }
  ?mustafaIII dbo:father ?mahmudI .
  
  # Mahmud I is the child of Ahmed III
  ?ahmedIII dbo:child ?mahmudI .

  # Abdulaziz's grandfather (Faisal bin Turki)
  VALUES (?abdulaziz) { dbr:Abdulaziz_of_Saudi_Arabia }
  ?abdulaziz dbo:father ?abdulazizFather .
  ?abdulazizFather dbo:father ?faisalBinTurki .

  # Successor of Selim III
  VALUES (?selimIII) { dbr:Selim_III }
  ?selimIII dbo:succeededBy ?mustafaIV .

  # Mahmud I is the person we are looking for
  FILTER(?mahmudI = ?person)
}
```",6,7,7,2,3,3,3,71,0,0,1,0,0.0,0
443,21,val,Give me the birthplace of Ulf Lundell and landmark at elevation of 28 and birthplace of the work of yes.,"SELECT ?result WHERE { ?v1 <http://dbpedia.org/property/author> ""yes""@en . <http://dbpedia.org/resource/Ulf_Lundell> <http://dbpedia.org/ontology/birthPlace> ?result . ?result <http://dbpedia.org/ontology/elevation> ""28""^^<http://www.w3.org/2001/XMLSchema#integer> . ?v1 <http://dbpedia.org/ontology/birthPlace> ?result . }","```sparql
# Query for Ulf Lundell's birthplace
SELECT ?birthPlace WHERE {
  wd:Q123456 wdt:P19 ?birthPlace .
}

UNION

# Query for a landmark at elevation of 28 meters
SELECT ?landmark ?elevation WHERE {
  ?landmark wdt:P2044 ?elevation .
  FILTER(?elevation = ""28""^^xsd:decimal)
}

UNION

# Query for the birthplace of ""Close to the Edge"" by Yes
SELECT ?album ?birthPlace WHERE {
  wd:Q1234567 wdt:P19 ?birthPlace .
  OPTIONAL { wd:Q1234567 wdt:P1476 ?album . FILTER(STR(?album) = ""Close to the Edge"") }
}
```

Note: Replace `wd:Q123456` with the actual DBpedia QID for Ulf Lundell and `wd:Q1234567` with the QID for ""Close to the Edge"" by Yes.",4,4,5,2,3,2,3,28,0,0,1,0,0.0,0
98,19,val,Give me the entity in Philippines and region of the time zone of Lopez Jaena and birth place of Paolo Ballesteros.,SELECT ?result WHERE { <http://dbpedia.org/resource/Lopez_Jaena> <http://dbpedia.org/ontology/timeZone> ?v3 . <http://dbpedia.org/resource/Paolo_Ballesteros> <http://dbpedia.org/ontology/birthPlace> ?result . ?result <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Philippines> . ?result <http://dbpedia.org/ontology/timeZone> ?v3 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT DISTINCT ?entityLopezJaena ?timeZoneRegion ?birthPlacePaoloBallesteros WHERE {
  # Find the entity related to Lopez Jaena in the Philippines
  ?entityLopezJaena dbo:country dbr:Philippines .
  ?entityLopezJaena rdfs:label ""Lopez""@en .
  
  # Get the time zone region for this entity
  OPTIONAL { ?entityLopezJaena dbp:timeZoneRegion ?timeZoneRegion . }
  
  # Find the birthplace of Paolo Ballesteros
  ?paoloBallesteros dbo:birthPlace ?birthPlacePaoloBallesteros .
  ?paoloBallesteros rdfs:label ""Paolo Ballesteros""@en .
}
```",4,4,5,2,3,2,3,28,0,0,2,0,0.0,0
124,40,val,"Give me the military force of Battle of Tamai and commander in the war, that is a societal event and a military conflict, of the reference, that is Australian and an organisation and a military unit, to 'A' Battery, Royal Australian Artillery and military force of Battle of Atbara.","SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/commander> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?result <http://dbpedia.org/ontology/battle> <http://dbpedia.org/resource/Battle_of_Atbara> . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v2 <http://xmlns.com/foaf/0.1/name> ""'A' Battery, Royal Australian Artillery""@en . ?v2 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Australia>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?v2 <http://dbpedia.org/ontology/battle> ?v1 . ?result <http://dbpedia.org/ontology/battle> <http://dbpedia.org/resource/Battle_of_Tamai> . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryUnit>. }","```sparql
# Query for military force and commander in the Battle of Tamai
SELECT ?militaryForce ?commander WHERE {
  ?battle dbpedia-owl:wikiPageRedirects dbp:Battle_of_Tamai .
  ?battle dbpedia-owl:participatingMilitaryUnit ?militaryForce .
  OPTIONAL { ?militaryForce dbpedia-owl:commander ?commander . }
}

# Query for the war involving the Battle of Tamai
SELECT ?war WHERE {
  ?battle dbpedia-owl:wikiPageRedirects dbp:Battle_of_Tamai .
  ?battle dbpedia-owl:partOfWar ?war .
  FILTER (strstarts(str(?war), ""Military conflict"") || strstarts(str(?war), ""Societal event""))
}

# Query for military force in the Battle of Atbara
SELECT ?militaryForce WHERE {
  ?battle dbpedia-owl:wikiPageRedirects dbp:Battle_of_Atbara .
  ?battle dbpedia-owl:participatingMilitaryUnit ?militaryForce .
}
```",5,10,6,3,3,3,3,71,0,0,1,0,0.0,0
715,43,val,"Give me the leader of Ministry of the Air (Spain) and commander in Rif War and commander in the force of the mayor, that is an office holder and a politician and a president, of 1933 Spanish general election.",SELECT ?result WHERE { <http://dbpedia.org/resource/Ministry_of_the_Air_(Spain)> <http://dbpedia.org/ontology/leader> ?result . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. <http://dbpedia.org/resource/Rif_War> <http://dbpedia.org/ontology/commander> ?result . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/President>. ?v4 <http://dbpedia.org/ontology/commander> ?result . ?v4 <http://dbpedia.org/ontology/commander> ?v0 . <http://dbpedia.org/resource/1933_Spanish_general_election> <http://dbpedia.org/property/leader> ?v0 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?person WHERE {
  ?person a dbo:Person .
  
  # Manuel Azaña's involvement in Ministry of the Air and Rif War
  OPTIONAL { ?ministry dbo:leader ?person . FILTER(STRSTARTS(STR(?ministry), ""http://dbpedia.org/resource/Ministry_of_the_Air_(Spain)"")) }
  OPTIONAL { ?rifWar dbo:commander ?person . FILTER(STRSTARTS(STR(?rifWar), ""http://dbpedia.org/resource/Rif_War"")) }

  # Political roles
  OPTIONAL { ?officeHolder dbo:officeHolder ?person . }
  OPTIONAL { ?politician dbo:politician ?person . }
  OPTIONAL { ?president dbo:electedAsPresident ?person . FILTER(STRSTARTS(STR(?president), ""http://dbpedia.org/resource/1933_Spanish_general_election"")) }

  # Ensure the person is Manuel Azaña
  VALUES ?person { dbr:Manuel_Azaña }
}
```",5,8,6,3,3,3,3,71,0,1,1,0.0,0.0,0
456,45,val,"Give me the spouse of Danielle Spencer (Australian actress) and professional in  and band of the band, that is a musical artist, of the band of Alan Doyle.","SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?v0 <http://dbpedia.org/ontology/associatedMusicalArtist> ?v1 . ?v1 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?result <http://dbpedia.org/property/occupation> """"@en . <http://dbpedia.org/resource/Danielle_Spencer_(Australian_actress)> <http://dbpedia.org/ontology/spouse> ?result . <http://dbpedia.org/resource/Alan_Doyle> <http://dbpedia.org/ontology/associatedMusicalArtist> ?v0 . }","```sparql
# Query to find the spouse of Danielle Spencer
SELECT ?spouse WHERE {
  dbpedia:en:Danielle_Spencer dbo:spouse ?spouse .
}

# Query to find the band associated with Alan Doyle
SELECT ?band WHERE {
  dbpedia:Alan_Doyle dbo:musicalBand ?band .
}

# Query to find musical artists in that band
SELECT DISTINCT ?artist WHERE {
  ?band dbo:member ?artist .
  ?artist rdf:type dbo:MusicalArtist .
}
```",5,6,6,3,3,3,3,71,0,0,1,0,0.0,0
573,49,val,"Give me the person decedent at the administration, that is a region, of Charlie Baker and parent of the author, that is a politician and an office holder, of the work of John Quincy Adams.","SELECT ?result WHERE { ?v0 <http://dbpedia.org/property/author> <http://dbpedia.org/resource/John_Quincy_Adams> . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v2 <http://dbpedia.org/property/governor> ""Charlie Baker""@en . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Region>. ?v0 <http://dbpedia.org/property/author> ?v1 . ?v1 <http://dbpedia.org/ontology/parent> ?result . ?result <http://dbpedia.org/ontology/deathPlace> ?v2 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?decedent WHERE {
  # Charlie Baker's administration in Massachusetts
  dbr:Charlie_Baker dbo:governmentRole dbr:Governor_of_Massachusetts .
  
  # Find the predecessor (decedent) of Charlie Baker as Governor of Massachusetts
  ?predecessor dbo:successor dbr:Charlie_Baker ;
              dbo:officeHolderOf dbr:Governor_of_Massachusetts .

  # John Quincy Adams' work and its author
  ?work dbo:author dbr:John_Quincy_Adams .
  
  # Find the author of that work
  ?author dbo:parent ?decedent ;
          dbo:profession dbr:Politician ;
          dbo:officeHolderOf ?office .

  # Ensure the parent is a politician and office holder
  ?office rdf:type dbo:PoliticalOffice .
}
```",5,8,6,3,2,3,3,71,0,0,2,0,0.0,0
773,40,val,Give me the parent of Carloman of Bavaria and parent of Charles the Fat and spouse of the father of the parent of Bernard (son of Charles the Fat).,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Carloman_of_Bavaria> . ?v1 <http://dbpedia.org/ontology/spouse> ?result . <http://dbpedia.org/resource/Charles_the_Fat> <http://dbpedia.org/ontology/parent> ?result . ?v2 <http://dbpedia.org/property/father> ?v1 . ?v2 <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Bernard_(son_of_Charles_the_Fat)> . },"```sparql
# Query for the parent of Carloman of Bavaria
SELECT ?parent WHERE {
  ?carloman dbo:parent ?parent .
  FILTER (str(?carloman) = ""Carloman_of_Bavaria"")
}

UNION

# Query for the parent of Charles the Fat
SELECT ?parent WHERE {
  ?charlesFat dbo:parent ?parent .
  FILTER (str(?charlesFat) = ""Charles_the_Fat"")
}

UNION

# Query for the spouse of the father of the parent of Bernard (son of Charles the Fat)
SELECT ?spouse WHERE {
  ?bernard dbo:parent ?charlesFat .
  FILTER (str(?bernard) = ""Bernard_(son_of_Charles_the_Fat)"")
  
  ?charlesFat dbo:parent ?grandParent .
  
  ?grandParent dbo:spouse ?spouse .
}
```",5,5,6,3,3,3,3,71,0,0,1,0,0.0,0
166,17,val,"Give me the resting place of Gonzalo Queipo de Llano and entity in the territory administered, that is a country, from the reference to Madrid.","SELECT ?result WHERE { ?v0 <http://xmlns.com/foaf/0.1/name> ""Madrid""@en . ?v3 <http://dbpedia.org/ontology/capital> ?v0 . <http://dbpedia.org/resource/Gonzalo_Queipo_de_Llano> <http://dbpedia.org/ontology/restingPlace> ?result . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. ?result <http://dbpedia.org/ontology/country> ?v3 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?restingPlace ?administeredCountry WHERE {
  # Find the resting place of Gonzalo Queipo de Llano
  OPTIONAL { 
    dbr:Gonzalo_Queipo_de_Llano dbo:finalRestingPlace ?restingPlace .
  }
  
  # Find a country or territory administered by him with reference to Madrid
  OPTIONAL {
    dbr:Gonzalo_Queipo_de_Llano dbo:administeredCountry ?administeredEntity .
    ?administeredEntity dbo:capital dbr:Madrid .
    BIND(str(?administeredEntity) AS ?administeredCountry)
  }
}
```",4,5,5,3,2,3,2,20,0,0,1,0,0.0,0
445,50,val,Give me the entity in the award of George H. Cameron and death place of the awardee of the establishment of 1820-03-10.,"SELECT ?result WHERE { ?v4 <http://dbpedia.org/property/awards> ?v0 . <http://dbpedia.org/resource/George_H._Cameron> <http://dbpedia.org/property/awards> ?v3 . ?v4 <http://dbpedia.org/ontology/deathPlace> ?result . ?result <http://dbpedia.org/ontology/country> ?v3 . ?v0 <http://dbpedia.org/ontology/foundingDate> ""1820-03-10""^^<http://www.w3.org/2001/XMLSchema#date> . }","```sparql
# Step 1: Find the award associated with George H. Cameron
SELECT ?award WHERE {
  ?person dbo:name ""George H. Cameron""@en .
  ?person dbo:awardsReceived ?award .
}

# Step 2: Identify the establishment on 1820-03-10 and its awardee
SELECT ?entity ?awardee WHERE {
  ?entity dbo:dateEstablished ""1820-03-10""^^xsd:date ;
          dbo:awardsReceived ?award .
  ?award dbo:recipient ?awardee .
}

# Step 3: Find the death place of the identified awardee
SELECT ?deathPlace WHERE {
  ?person dbo:name ?name .
  FILTER(?name = ""AwardeeName"") # Replace with actual name from step 2
  ?person dbo:placeOfBirth ?birthPlace ;
          dbo:dateOfDeath ?dateOfDeath ;
          dbo:deathPlace ?deathPlace .
}
```

Note: The query assumes that the award and establishment details are directly linked in DBpedia. You may need to adjust based on actual data availability.",5,5,6,3,2,3,3,71,0,0,2,0,0.0,0
508,15,val,"Give me the birthplace of Ma Bufang and birthplace of the commander, that is a politician, in the war, that is a military conflict and a societal event and an event, of Hayao Tada.",SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v0 <http://dbpedia.org/ontology/commander> ?v1 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. <http://dbpedia.org/resource/Ma_Bufang> <http://dbpedia.org/ontology/birthPlace> ?result . ?v1 <http://dbpedia.org/ontology/birthPlace> ?result . <http://dbpedia.org/resource/Hayao_Tada> <http://dbpedia.org/ontology/battle> ?v0 . },"```sparql
# Query for Ma Bufang's birthplace
SELECT ?birthPlace WHERE {
  dbpedia:Ma_Bufang dbo:birthPlace ?birthPlace .
}

# Query for Hayao Tada's birthplace
SELECT ?birthPlace WHERE {
  dbpedia:Hayao_Tada dbo:birthPlace ?birthPlace .
}
```",4,8,5,3,2,3,2,20,0,0,3,0,0.0,0
47,49,val,"Give me the office of the administration of Jagdeep Dhankhar and office of the awardee of the entity, that is an award, in India.",SELECT ?result WHERE { ?v1 <http://dbpedia.org/property/office> ?result . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Award>. ?v2 <http://dbpedia.org/property/governor> <http://dbpedia.org/resource/Jagdeep_Dhankhar> . ?v0 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/India> . ?v2 <http://dbpedia.org/property/office> ?result . ?v1 <http://dbpedia.org/property/awards> ?v0 . },"```sparql
# Query to get the office of Jagdeep Dhankhar
SELECT ?office WHERE {
  wd:Q1234568 dbo:positionHeld ?office .
}

UNION

# Query to get the office associated with an awardee of a notable Indian award (e.g., Padma Awards)
SELECT DISTINCT ?awardOffice WHERE {
  ?recipient dbo:awardReceived ?award .
  ?award rdf:type wd:Q1234569 . # Assuming Q1234569 is the DBpedia ID for Padma Awards
  ?recipient dbo:positionHeld ?awardOffice .
}
```

Note: Replace `wd:Q1234568` with the actual DBpedia entity ID for Jagdeep Dhankhar and `wd:Q1234569` with the DBpedia entity ID for the specific award you are interested in.",5,6,6,3,2,3,3,71,0,0,11,0,0.0,0
826,52,val,"Give me the successor of the child, that is a royalty, of Louis I, Grand Duke of Hesse and spouse of the child of the father of Anna Magdalena Appel and predecessor of Louis IV, Grand Duke of Hesse.","SELECT ?result WHERE { ?v2 <http://dbpedia.org/ontology/spouse> ?result . ?result <http://dbpedia.org/ontology/successor> <http://dbpedia.org/resource/Louis_IV,_Grand_Duke_of_Hesse> . ?v2 <http://dbpedia.org/property/father> ?v3 . ?v5 <http://dbpedia.org/ontology/successor> ?result . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. <http://dbpedia.org/resource/Louis_I,_Grand_Duke_of_Hesse> <http://dbpedia.org/ontology/child> ?v5 . <http://dbpedia.org/resource/Anna_Magdalena_Appel> <http://dbpedia.org/property/father> ?v3 . }","```sparql
SELECT ?successor WHERE {
  # Louis I, Grand Duke of Hesse
  wd:Q123456 rdfs:label ""Louis I, Grand Duke of Hesse""@en .
  
  # His child who is royalty
  ?child wdt:P31/wdt:P279* wd:Q5 ; # Instance of human and subclass of human
         wdt:P22 wd:Q123456 . # Parent is Louis I

  ?royalChild wdt:P31/wdt:P279* wd:Q34629 ; # Instance of monarch
              wdt:P40 ?child . # Child of the royal child

  # Spouse of this royal child
  ?spouse wdt:P26 ?royalChild .

  # Anna Magdalena Appel's father (Johann Georg Bach)
  wd:Q1234567 rdfs:label ""Johann Georg Bach""@en .
  
  # Predecessor of Louis IV, Grand Duke of Hesse
  wd:Q765432 rdfs:label ""Ernst Ludwig, Grand Duke of Hesse""@en .

  # Child of Johann Georg Bach and predecessor of Louis IV
  ?childOfBach wdt:P22 wd:Q1234567 .
  ?predecessorChild wdt:P22 wd:Q765432 .

  # Find the spouse who is also a child of Johann Georg Bach and predecessor of Louis IV
  FILTER(?spouse = ?childOfBach && ?spouse = ?predecessorChild)

  # Successor of this spouse
  ?successor wdt:P46 ?spouse .
}
```",6,7,7,3,3,3,3,71,0,0,1,0,0.0,0
417,54,val,"Give me the child of the father of the leader, that is a royalty, of Colony of Greenland and spouse of the parent, that is a royalty, of Count Ingolf of Rosenborg and child of Alexandrine of Mecklenburg-Schwerin.",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/parent> <http://dbpedia.org/resource/Alexandrine_of_Mecklenburg-Schwerin> . ?v3 <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Count_Ingolf_of_Rosenborg> . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?result <http://dbpedia.org/ontology/spouse> ?v3 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?result <http://dbpedia.org/property/father> ?v5 . <http://dbpedia.org/resource/Colony_of_Greenland> <http://dbpedia.org/property/leader> ?v0 . ?v0 <http://dbpedia.org/property/father> ?v5 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?child WHERE {
  # Step 1: Identify the leader of the Colony of Greenland
  ?leader dbo:country dbr:Greenland .
  
  # Step 2: Determine the father of that leader
  ?father dbo:child ?leader .

  # Step 3: Find the child of this father who is royalty
  ?child dbo:parent ?father ;
         a dbo:Monarch .

  # Step 4: Identify Count Ingolf of Rosenborg and his parent who is royalty
  dbr:Count_Ingolf_of_Rosenborg dbo:parent ?royalParent .
  
  # Ensure the parent is royalty
  ?royalParent a dbo:Monarch .

  # Step 5: Find the spouse of this royal parent
  ?spouse dbo:spouse ?royalParent ;
          dbo:child ?child .

  # Step 6: Identify Alexandrine of Mecklenburg-Schwerin and her child
  dbr:Alexandrine_of_Mecklenburg-Schwerin dbo:child ?child .
}
```",6,8,7,3,3,3,3,71,0,0,1,0,0.0,0
976,45,val,Give me the office of Meral Akşener and office of Mustafa Şentop and office of the person born as the birth name of Naci Bostancı.,SELECT ?result WHERE { <http://dbpedia.org/resource/Mustafa_Şentop> <http://dbpedia.org/property/office> ?result . ?v0 <http://dbpedia.org/property/birthName> ?v3 . <http://dbpedia.org/resource/Naci_Bostancı> <http://dbpedia.org/property/birthName> ?v3 . ?v0 <http://dbpedia.org/property/office> ?result . <http://dbpedia.org/resource/Meral_Akşener> <http://dbpedia.org/property/office> ?result . },"```sparql
SELECT ?officeMeralAkseren ?officeMustafaSentop ?birthNameNaciBostanci ?officePersonWithBirthName WHERE {
  # Office of Meral Akşener
  dbpedia:en:Meral_Akşener dbo:positionHeld ?officeMeralAkseren .
  
  # Office of Mustafa Şentop
  dbpedia:tr:Mustafa_Şentop dbo:positionHeld ?officeMustafaSentop .

  # Birth name of Naci Bostancı
  dbpedia:tr:Naci_Bostancı dbo:birthName ?birthNameNaciBostanci .
  
  # Office held by the person with the birth name of Naci Bostancı
  ?person dbo:birthName ?birthNameNaciBostanci ;
          dbo:positionHeld ?officePersonWithBirthName .
}
```",5,5,6,3,3,3,3,71,0,0,1,0,0.0,0
216,49,val,"Give me the player in the coach of Croatia national under-21 football team and team of the person born, that is a sports manager and a soccer manager and a soccer player, on the death of Pavel Vezhinov.",SELECT ?result WHERE { <http://dbpedia.org/resource/Pavel_Vezhinov> <http://dbpedia.org/ontology/deathDate> ?v0 . <http://dbpedia.org/resource/Croatia_national_under-21_football_team> <http://dbpedia.org/ontology/coach> ?v2 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerManager>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerPlayer>. ?v2 <http://dbpedia.org/ontology/team> ?result . ?v1 <http://dbpedia.org/ontology/birthDate> ?v0 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsManager>. ?result <http://dbpedia.org/ontology/coach> ?v1 . },"```sparql
# Query to find the coach of Croatia national under-21 football team
SELECT ?coach WHERE {
  ?team dcterms:subject dbc:Croatia_national_under-21_football_team .
  ?team dbo:coach ?coach .
}

# Assuming we have identified the coach, let's say it is ""Igor Bišćan"" (as an example)
# Query to find birthplace and roles of Igor Bišćan
SELECT ?birthPlace WHERE {
  wd:Q123456 dbo:birthPlace ?birthPlace . # Replace Q123456 with actual Wikidata ID for the coach
}

SELECT ?role WHERE {
  wd:Q123456 rdf:type ?type .
  ?type rdfs:label ?role .
  FILTER(CONTAINS(LCASE(?role), ""sports manager"") || CONTAINS(LCASE(?role), ""soccer manager"") || CONTAINS(LCASE(?role), ""soccer player""))
}

# Query to find the death date of Pavel Vezhinov
SELECT ?deathDate WHERE {
  wd:Q789012 dbo:dateOfDeath ?deathDate . # Replace Q789012 with actual Wikidata ID for Pavel Vezhinov
}
```",5,8,6,3,2,3,3,71,0,0,1,0,0.0,0
933,50,val,"Give me the reference to the birth name of the professional in Musician and band of the band, that is a group and a band and an organisation, of Alan Warner (musician).",SELECT ?result WHERE { ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Band>. ?v1 <http://dbpedia.org/property/birthName> ?v3 . ?v0 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v1 <http://dbpedia.org/property/occupation> <http://dbpedia.org/resource/Musician> . <http://dbpedia.org/resource/Alan_Warner_(musician)> <http://dbpedia.org/ontology/associatedMusicalArtist> ?v0 . ?result <http://xmlns.com/foaf/0.1/name> ?v3 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Group>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT ?birthName WHERE {
  ?musician a dbo:MusicArtist ;
            foaf:name ""Alan Warner"" .
  ?band a dbo:Band ;
        dbo:musicalArtist ?musician .
  FILTER (str(?band) = str(dbpedia:The_Waterboys))
  
  OPTIONAL { 
    ?musician foaf:givenName ?firstName .
    ?musician foaf:familyName ?lastName .
    BIND(CONCAT(?firstName, "" "", ?lastName) AS ?birthName)
  }
}
```",5,8,6,3,2,3,3,71,0,0,1,0,0.0,0
445,46,val,"Give me the death place of the awardee of Royal Astronomical Society and entity in the residence, that is a country, of the resident, that is an athlete, of Great Britain.",SELECT ?result WHERE { ?v2 <http://dbpedia.org/property/residence> <http://dbpedia.org/resource/Great_Britain> . ?v4 <http://dbpedia.org/ontology/deathPlace> ?result . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Athlete>. ?result <http://dbpedia.org/ontology/location> ?v1 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. ?v2 <http://dbpedia.org/property/residence> ?v1 . ?v4 <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/Royal_Astronomical_Society> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?deathPlace WHERE {
  ?person dbo:awardReceived dbr:Royal_Astronomical_Society .
  
  ?athlete dbo:nationality dbr:United_Kingdom ;
           dbo:residenceCountry ?country .

  ?person dbo:residenceCountry ?country .

  OPTIONAL { ?person dbo:deathPlace ?deathPlace . }
}
```",5,7,6,3,2,3,3,71,0,0,1,0,0.0,0
874,16,val,"Give me the band of the writer, that is an artist and a musical artist, of Mezzanine (album) and band of the band member of The Jones Gang.",SELECT ?result WHERE { <http://dbpedia.org/resource/Mezzanine_(album)> <http://dbpedia.org/property/writer> ?v2 . ?v3 <http://dbpedia.org/ontology/associatedMusicalArtist> <http://dbpedia.org/resource/The_Jones_Gang> . ?result <http://dbpedia.org/ontology/bandMember> ?v2 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. ?result <http://dbpedia.org/ontology/bandMember> ?v3 . },"```sparql
SELECT DISTINCT ?band1 ?band2 WHERE {
  # Find the band associated with the album Mezzanine and its writer who is an artist and a musical artist
  ?album dcterms:title ""Mezzanine"" ;
         dbo:artist ?member .
  ?member foaf:name ?name .
  FILTER(?name = ""Robert Del Naja"")
  ?member dbo:band ?band1 .

  # Find the band associated with a member of The Jones Gang
  ?theJonesGang dcterms:title ""The Jones Gang"" ;
                dbo:bandMember ?jonesGangMember .
  ?jonesGangMember foaf:name ?name2 .
  FILTER(?name2 = ""Steve Jones"")
  ?jonesGangMember dbo:band ?band2 .

}
```",4,6,5,2,2,3,2,20,0,0,1,0,0.0,0
83,17,val,"Give me the ruling party in Fortaleza and party of the governor of the commander, that is a politician, in Central African Republic Civil War.",SELECT ?result WHERE { <http://dbpedia.org/resource/Fortaleza> <http://dbpedia.org/property/leaderParty> ?result . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. <http://dbpedia.org/resource/Central_African_Republic_Civil_War> <http://dbpedia.org/ontology/commander> ?v0 . ?v3 <http://dbpedia.org/ontology/party> ?result . ?v0 <http://dbpedia.org/property/governor> ?v3 . },"```sparql
# Query for the ruling party in Fortaleza
SELECT ?party WHERE {
  ?city rdfs:label ""Fortaleza""@en .
  ?city dbo:mayor ?mayor .
  ?mayor dbo:politicalParty ?party .
}

UNION

# Query for the political affiliation of the leader during the Central African Republic Civil War
SELECT ?party WHERE {
  ?country rdfs:label ""Central African Republic""@en .
  ?country dbo:headOfStateOrGovernment ?leader .
  FILTER (YEAR(NOW()) >= 2012 && YEAR(NOW()) <= 2014 || YEAR(NOW()) >= 2017) # Adjust the years as needed
  ?leader dbo:politicalParty ?party .
}
```",4,5,5,3,2,3,2,20,0,0,1,0,0.0,0
456,53,val,"Give me the band of the band, that is a musical artist, of Dean Brody and spouse of the actor of the movie, that is a work and a television show, with Ross Newton and professional in .","SELECT ?result WHERE { ?v3 <http://dbpedia.org/property/starring> <http://dbpedia.org/resource/Ross_Newton> . <http://dbpedia.org/resource/Dean_Brody> <http://dbpedia.org/ontology/associatedMusicalArtist> ?v1 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/TelevisionShow>. ?v2 <http://dbpedia.org/ontology/spouse> ?result . ?result <http://dbpedia.org/property/occupation> """"@en . ?v1 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?v3 <http://dbpedia.org/property/starring> ?v2 . }","```sparql
# Step 1: Identify Dean Brody's Band
SELECT ?band WHERE {
  ?person foaf:name ""Dean Brody""@en .
  ?person dbo:associatedBand ?band .
}

# Step 2: Find a movie or TV show with Ross Newton and another actor
SELECT DISTINCT ?actor WHERE {
  ?work rdf:type dbo:Film .
  ?work dbo:starring ?robinson .
  ?robinson foaf:name ""Ross Newton""@en .
  ?work dbo:starring ?actor .
  FILTER(?actor != ?robinson)
}

# Step 3: Find the spouse of the identified actor
SELECT DISTINCT ?spouse WHERE {
  ?actor dbo:spouse ?spouse .
  VALUES ?actor { <URI_of_the_actor> } # Replace with actual URI from step 2
}

# Step 4: Determine the profession of the spouse
SELECT DISTINCT ?profession WHERE {
  ?spouse dbo:occupation ?profession .
}
```",6,9,7,3,3,3,3,71,0,0,1,0,0.0,0
417,51,val,"Give me the child of the father of Frederick IX of Denmark and child of the child, that is a royalty, of the parent, that is a royalty, of Alexandrine of Mecklenburg-Schwerin.",SELECT ?result WHERE { <http://dbpedia.org/resource/Alexandrine_of_Mecklenburg-Schwerin> <http://dbpedia.org/ontology/parent> ?v1 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v2 <http://dbpedia.org/property/father> ?v1 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?result <http://dbpedia.org/property/father> ?v4 . ?result <http://dbpedia.org/ontology/parent> ?v2 . <http://dbpedia.org/resource/Frederick_IX_of_Denmark> <http://dbpedia.org/property/father> ?v4 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?person WHERE {
  # Frederick IX's father
  dbr:Frederick_IX_of_Denmark dbo:father dbr:Christian_X_of_Denmark .
  
  # Christian X's children
  dbr:Christian_X_of_Denmark dbo:child ?child1 .

  # Alexandrine of Mecklenburg-Schwerin's father
  dbr:Aleksandra_Frederika_Dagmar_von_Mecklenburg-Schwerin dbo:father dbr:George_II,_Grand Duke_of_Mecklenburg-Strelitz .
  
  # George II's children
  dbr:George_II,_Grand_Duke_of_Mecklenburg-Strelitz dbo:child ?child2 .

  # Find a common royalty descendant
  ?person dbo:parent ?child1 ;
          dbo:parent ?child2 .
}
```",5,7,6,3,2,3,3,71,0,0,2,0,0.0,0
36,20,val,Give me the person born in the birth year of Deanne Bray and actor of Being Mrs Elliot and person born as Ayo Makun.,"SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/birthYear> ?v1 . <http://dbpedia.org/resource/Being_Mrs_Elliot> <http://dbpedia.org/ontology/starring> ?result . <http://dbpedia.org/resource/Deanne_Bray> <http://dbpedia.org/ontology/birthYear> ?v1 . ?result <http://dbpedia.org/property/birthName> ""Ayo Makun""@en . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?person WHERE {
  # Deanne Bray's birth year
  ?deanneBray dbo:birthYear ?birthYear .
  FILTER(?deanneBray = dbr:Deanne_Bray) .

  # Actor of ""Being Mrs Elliot""
  ?beingMrsElliot dbo:actor ?actor .
  FILTER(?beingMrsElliot = dbr:Being_Mrs_Elliot) .

  # Ayo Makun's birth name
  ?ayoMakun dbo:birthName ?birthName .
  FILTER(?ayoMakun = dbr:Ayo_Makun) .
  FILTER(?birthName = ""Ayo Makun"") .

  # Find the person who matches all criteria
  ?person dbo:birthYear ?birthYear ;
          dbo:actorInFilm ?beingMrsElliot ;
          dbo:birthName ?birthName .
}
```",4,4,5,2,3,2,3,28,0,0,1,0,0.0,0
507,48,val,Give me the professional in the profession of Guy Ferland and spouse of the person born as the birth name of Anne V. Coates.,SELECT ?result WHERE { <http://dbpedia.org/resource/Guy_Ferland> <http://dbpedia.org/property/occupation> ?v1 . ?result <http://dbpedia.org/property/occupation> ?v1 . <http://dbpedia.org/resource/Anne_V._Coates> <http://dbpedia.org/property/birthName> ?v3 . ?result <http://dbpedia.org/ontology/spouse> ?v2 . ?v2 <http://dbpedia.org/property/birthName> ?v3 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?professional WHERE {
    # Step 1: Get Guy Ferland's profession
    ?guyFerland a dbo:Person ;
               foaf:name ""Guy Ferland""@en .
    
    ?guyFerland dbo:occupation ?profession .

    # Step 2: Find Anne V. Coates' spouse using her birth name
    ?anneVCoates a dbo:Person ;
                 foaf:name ""Anne V. Coates""@en ;
                 dbp:birthName ?birthName .
    
    ?anneVCoates dbo:spouse ?spouse .

    # Step 3: Match the profession and spouse
    ?spouse dbo:occupation ?profession .
}
```",5,5,6,3,2,3,3,71,0,0,1,0,0.0,0
933,49,val,"Give me the band of the band, that is a group and a band and an organisation, of the person born, that is a musical artist, on 1947-04-21 and band of the band of Alan Warner (musician).","SELECT ?result WHERE { ?v2 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v4 <http://dbpedia.org/ontology/birthDate> ""1947-04-21""^^<http://www.w3.org/2001/XMLSchema#date> . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Group>. ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?v4 <http://dbpedia.org/ontology/associatedMusicalArtist> ?v0 . <http://dbpedia.org/resource/Alan_Warner_(musician)> <http://dbpedia.org/ontology/associatedMusicalArtist> ?v2 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Band>. ?v0 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . }","```sparql
SELECT DISTINCT ?bandOfBand WHERE {
  # Step 1: Find the musician born on 1947-04-21
  ?musician dbo:birthDate ""1947-04-21""^^xsd:date ;
            a dbo:MusicalArtist .

  # Step 2: Find the band associated with this musician
  ?band1 dbo:musicalArtist ?musician ;
         a dbo:Band .

  # Step 3: Identify Alan Warner and his band
  ?alanWarner foaf:name ""Alan Warner (musician)"" ;
              dbo:musicalArtist ?alanMusician .
  ?alanBand dbo:musicalArtist ?alanMusician ;
            a dbo:Band .

  # Step 4: Find the band of the band that is also a group, band, and organization
  ?bandOfBand dbo:band ?band1 ;
              dbo:band ?alanBand ;
              a dbo:Group , dbo:Band , dbo:Organization .
}
```",5,9,6,3,2,3,3,71,0,0,4,0,0.0,0
465,49,val,"Give me the successor of the child of Alfonso I d'Este and successor of the child, that is a royalty, of the parent of Charles Orlando, Dauphin of France.","SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. <http://dbpedia.org/resource/Charles_Orlando,_Dauphin_of_France> <http://dbpedia.org/ontology/parent> ?v0 . ?v2 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Alfonso_I_d'Este> . ?v2 <http://dbpedia.org/ontology/successor> ?result . ?v0 <http://dbpedia.org/ontology/child> ?v1 . ?v1 <http://dbpedia.org/ontology/successor> ?result . }","```sparql
# Step 1: Find a notable child of Alfonso I d'Este
SELECT ?child WHERE {
    ?alfonso dbo:child ?child .
    ?alfonso rdfs:label ""Alfonso I d'Este""@en .
}

# Step 2: Find the successor of that child
SELECT ?successor WHERE {
    ?child dbo:successor ?successor .
    FILTER(?child IN (SELECT ?child WHERE {
        ?alfonso dbo:child ?child .
        ?alfonso rdfs:label ""Alfonso I d'Este""@en .
    }))
}

# Step 3: Identify the parent of Charles Orlando, Dauphin of France
SELECT ?parent WHERE {
    ?charlesOrlando dbo:parent ?parent .
    ?charlesOrlando rdfs:label ""Charles Orlando, Dauphin of France""@en .
}

# Step 4: Find a child of that parent who is royalty
SELECT ?royalChild WHERE {
    ?parent dbo:child ?royalChild .
    FILTER(?parent IN (SELECT ?parent WHERE {
        ?charlesOrlando dbo:parent ?parent .
        ?charlesOrlando rdfs:label ""Charles Orlando, Dauphin of France""@en .
    }))
    ?royalChild rdf:type dbo:Monarch .
}

# Step 5: Determine the successor of that royal child
SELECT ?successor WHERE {
    ?royalChild dbo:successor ?successor .
    FILTER(?royalChild IN (SELECT ?royalChild WHERE {
        ?parent dbo:child ?royalChild .
        FILTER(?parent IN (SELECT ?parent WHERE {
            ?charlesOrlando dbo:parent ?parent .
            ?charlesOrlando rdfs:label ""Charles Orlando, Dauphin of France""@en .
        }))
        ?royalChild rdf:type dbo:Monarch .
    }))
}
```",5,6,6,3,2,3,3,71,0,0,1,0,0.0,0
456,46,val,"Give me the professional in the alter ego of The Shadow and spouse of the actor of the movie, that is a work and a television show, with Ross Newton.",SELECT ?result WHERE { ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?result <http://dbpedia.org/property/occupation> ?v4 . <http://dbpedia.org/resource/The_Shadow> <http://dbpedia.org/property/alterEgo> ?v4 . ?v2 <http://dbpedia.org/property/starring> <http://dbpedia.org/resource/Ross_Newton> . ?v2 <http://dbpedia.org/property/starring> ?v1 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/TelevisionShow>. ?v1 <http://dbpedia.org/ontology/spouse> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?spouse WHERE {
  # Ross Newton's spouse
  OPTIONAL { 
    dbr:Ross_Newton dbo:spouse ?spouse .
  }
  
  # Lamont Cranston as The Shadow's alter ego
  OPTIONAL {
    dbr:Lamont_Cranston dbo:fictionalAlterEgoOf dbr:The_Shadow .
  }
}
```",5,7,6,3,2,3,3,71,0,0,2,0,0.0,0
554,15,val,Give me the leader of the administration of the party member of Independent politician and leader of Portuguese Mozambique.,SELECT ?result WHERE { <http://dbpedia.org/resource/Portuguese_Mozambique> <http://dbpedia.org/property/leader> ?result . ?v1 <http://dbpedia.org/property/leader> ?result . ?v0 <http://dbpedia.org/ontology/party> <http://dbpedia.org/resource/Independent_politician> . ?v1 <http://dbpedia.org/property/leader> ?v0 . },"```sparql
SELECT ?person ?position WHERE {
  ?person dbo:occupation dbr:President_of_Mozambique .
  ?person foaf:name ""Samora Machel""@en .
  
  OPTIONAL { 
    ?person dbo:spouse ?party .
    ?party rdfs:label ?partyLabel .
    FILTER (CONTAINS(LCASE(?partyLabel), ""frelimo""))
  }
  
  ?administration dbo:leader ?adminLeader .
  ?administration dbo:dateStart ?dateStart .
  ?administration dbo:dateEnd ?dateEnd .
  ?adminLeader foaf:name ?leaderName .

  FILTER (?dateStart < ""1975-06-25""^^xsd:date && (?dateEnd > ""1975-06-25""^^xsd:date || NOT EXISTS { ?administration dbo:dateEnd ?dateEnd }))
  
  ?adminLeader dbo:position dbr:Prime_Minister_of_Portugal .
}
```",4,4,5,3,2,3,2,20,0,0,3,0,0.0,0
888,16,val,"Give me the commander in the force, that is a societal event and an event, of Serhiy Kotenko and awardee of the award of Oleksandr Syrskyi.",SELECT ?result WHERE { <http://dbpedia.org/resource/Oleksandr_Syrskyi> <http://dbpedia.org/property/awards> ?v3 . ?v2 <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Serhiy_Kotenko> . ?v2 <http://dbpedia.org/ontology/commander> ?result . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?result <http://dbpedia.org/property/awards> ?v3 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?force WHERE {
  ?person a dbo:Person ;
          foaf:name ""Serhiy Kotenko""@en .
  
  ?person dbo:commander ?force .

  ?force dbo:societalEvent ?societalEvent .
  ?force dbo:event ?event .

  OPTIONAL { 
    ?award dbo:awardee ?person ;
           foaf:name ?awardName .
    FILTER(CONTAINS(LCASE(?awardName), ""oleksandr syrskyi""))
  }

  FILTER EXISTS {
    ?person dbo:commander ?force
  }
}
```",4,6,5,2,2,3,2,20,0,0,1,0,0.0,0
417,45,val,"Give me the child of the child, that is a royalty, of the parent, that is a royalty, of Alexandrine of Mecklenburg-Schwerin and spouse of Princess Caroline-Mathilde of Denmark and child of Christian X of Denmark.",SELECT ?result WHERE { ?v1 <http://dbpedia.org/property/father> ?v0 . ?result <http://dbpedia.org/ontology/parent> ?v1 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. <http://dbpedia.org/resource/Alexandrine_of_Mecklenburg-Schwerin> <http://dbpedia.org/ontology/parent> ?v0 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?result <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Christian_X_of_Denmark> . ?result <http://dbpedia.org/ontology/spouse> <http://dbpedia.org/resource/Princess_Caroline-Mathilde_of_Denmark> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?grandchild WHERE {
  # Alexandrine of Mecklenburg-Schwerin and her spouse
  ?alexandrine a dbo:Person ;
              foaf:name ""Alexandrine of Mecklenburg-Schwerin""@en .
  
  ?carolineMathilde a dbo:Person ;
                    foaf:name ""Princess Caroline-Mathilde of Denmark""@en .

  # Their child who is also a child of Christian X
  ?child a dbo:Person ;
         dbo:spouse ?alexandrine ;
         dbo:spouse ?carolineMathilde ;
         dbo:parent dbr:Christian_X_of_Denmark .

  # The grandchild (child of the child) who is royalty
  ?grandchild a dbo:Person ;
              dbo:parent ?child .
  
  FILTER EXISTS { ?grandchild dbo:royalty true }
}
```",5,7,6,3,3,3,3,71,0,0,1,0,0.0,0
93,16,val,"Give me the death place of the governor of Bob Bartlett and capital of the headquarter, that is a region and a settlement, of Lake Clark National Park and Preserve.",SELECT ?result WHERE { ?v3 <http://dbpedia.org/ontology/deathPlace> ?result . <http://dbpedia.org/resource/Lake_Clark_National_Park_and_Preserve> <http://dbpedia.org/ontology/location> ?v2 . <http://dbpedia.org/resource/Bob_Bartlett> <http://dbpedia.org/property/governor> ?v3 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Region>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. ?v2 <http://dbpedia.org/ontology/capital> ?result . },"```sparql
# Query to find the death place of Bob Bartlett
SELECT ?deathPlace WHERE {
  ?b bobBartlett dbo:deathPlace ?deathPlace .
  FILTER (str(?b) = ""Bob_Bartlett_(Alaska_politician)"")
}

UNION

# Query to find the capital of the region that serves as the headquarters for Lake Clark National Park and Preserve
SELECT ?capital WHERE {
  # Find the settlement associated with Lake Clark National Park and Preserve
  ?park dbo:headquarters ?settlement .
  FILTER (str(?park) = ""Lake_Clark_National_Park_and_Preserve"")

  # Ensure this settlement is also a region
  ?settlement rdf:type dbpedia-owl:Region .

  # Find the capital of this region
  ?region dbo:capital ?capital .
  FILTER (?settlement = ?region)
}
```",4,6,5,2,2,3,2,20,0,0,1,0,0.0,0
582,50,val,"Give me the figure known as the nickname of Japan national football team and player in the father, that is an athlete and a soccer manager and a sports manager, of the child of Kazuaki Nagasawa.",SELECT ?result WHERE { ?v4 <http://dbpedia.org/ontology/team> ?result . ?result <http://dbpedia.org/property/nickname> ?v3 . ?v0 <http://dbpedia.org/property/father> ?v4 . ?v0 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Kazuaki_Nagasawa> . <http://dbpedia.org/resource/Japan_national_football_team> <http://dbpedia.org/property/nickname> ?v3 . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Athlete>. ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsManager>. ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerManager>. },"```sparql
# Step 1: Find Kazuaki Nagasawa's child who is an athlete and soccer manager
SELECT ?child WHERE {
  ?person dbo:spouse dbpedia:Kazuaki_Nagasawa ;
          dbo:child ?child .
  ?child rdf:type dbo:Athlete ;
         dbo:sportType dbc:Soccer_managers .
}

# Step 2: Find the nickname of the Japan national football team
SELECT ?nickname WHERE {
  dbpedia:The_Japan_national_football_team dbo:nickname ?nickname .
}

# Step 3: Find a player with the same nickname whose father is Kazuaki Nagasawa
SELECT DISTINCT ?player WHERE {
  ?child ?p ?player . # Assuming ?child from step 1 is linked to players in some way
  ?team dbpedia:The_Japan_national_football_team ;
        dbo:nickname ?nickname .
  ?player dbo:father ?person ;
          dbo:nickname ?nickname .
}
```",5,8,6,3,2,3,3,71,0,0,1,0,0.0,0
573,43,val,"Give me the person decedent at the residence, that is a settlement, of the professional, that is American, in Politician and parent of John Quincy Adams and person decedent at Massachusetts.","SELECT ?result WHERE { ?v0 <http://dbpedia.org/ontology/nationality> <http://dbpedia.org/resource/United_States>. ?v0 <http://dbpedia.org/property/occupation> ""Politician""@en . ?result <http://dbpedia.org/ontology/deathPlace> <http://dbpedia.org/resource/Massachusetts> . ?v0 <http://dbpedia.org/property/residence> ?v4 . <http://dbpedia.org/resource/John_Quincy_Adams> <http://dbpedia.org/ontology/parent> ?result . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. ?result <http://dbpedia.org/ontology/deathPlace> ?v4 . }","```sparql
SELECT ?personDecedentAtResidence WHERE {
  ?parent a dbo:Politician ;
          foaf:nationality ""American"" ;
          dbo:childOfJohnQuincyAdams dbr:John_Quincy_Adams .
  ?residence a dbo:Settlement ;
             dbo:resident ?parent ;
             dbo:placeOfBirth ?personDecedentAtResidence .
  ?deathEvent dbo:location ?residence ;
              dbo:agent ?personDecedentAtResidence .
}
```",5,7,6,3,3,3,3,71,0,0,2,0,0.0,0
573,50,val,"Give me the parent of the author, that is a politician and an office holder, of Exchequer Standards and person decedent at the residence, that is a settlement, of the professional, that is American, in Politician.","SELECT ?result WHERE { ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. ?v0 <http://dbpedia.org/property/residence> ?v4 . <http://dbpedia.org/resource/Exchequer_Standards> <http://dbpedia.org/property/author> ?v3 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?result <http://dbpedia.org/ontology/deathPlace> ?v4 . ?v3 <http://dbpedia.org/ontology/parent> ?result . ?v0 <http://dbpedia.org/ontology/nationality> <http://dbpedia.org/resource/United_States>. ?v0 <http://dbpedia.org/property/occupation> ""Politician""@en . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?parent WHERE {
  # Step 1: Find the author of ""Exchequer Standards""
  ?work dbo:author ?author .
  ?work rdfs:label ""Exchequer Standards""@en .

  # Step 2: Check if this author is a politician and an office holder
  ?author dbo:occupation dbr:Politician ;
          dbo:officeHolder ?true .

  # Step 3: Determine where this author died, ensuring it's classified as a settlement
  ?author dbo:deathPlace ?residence .
  ?residence rdf:type dbo:Settlement .

  # Step 4: Identify a professional who is American in the field of Politician (cross-reference)
  ?professional dbo:nationality dbr:United_States ;
                dbo:occupation dbr:Politician .

  # Step 5: Find the parent of the author
  ?author dbo:parent ?parent .
}
```",5,9,6,3,2,3,3,71,0,0,2,0,0.0,0
166,16,val,"Give me the resting place of the military force of Spanish Civil War and entity in the territory administered, that is a country, from Madrid.",SELECT ?result WHERE { ?v2 <http://dbpedia.org/ontology/battle> <http://dbpedia.org/resource/Spanish_Civil_War> . ?result <http://dbpedia.org/ontology/country> ?v3 . ?v2 <http://dbpedia.org/ontology/restingPlace> ?result . ?v3 <http://dbpedia.org/ontology/capital> <http://dbpedia.org/resource/Madrid> . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?restingPlace ?country
WHERE {
  ?restingPlace dbo:location dbr:Madrid .
  ?restingPlace dbo:associatedWithMilitaryConflict dbr:Spanish_Civil_War .
  
  ?administeredEntity dbo:administrativeCapital dbr:Madrid ;
                     a dbo:Country .

  BIND(dbr:Spain AS ?country)
}
```",4,5,5,2,2,3,2,20,0,0,4,0,0.0,0
508,17,val,"Give me the birthplace of Ma Hongkui and birthplace of the commander, that is Saudi, in the war, that is a military conflict and a societal event, of Hu Yukun.",SELECT ?result WHERE { <http://dbpedia.org/resource/Hu_Yukun> <http://dbpedia.org/ontology/battle> ?v0 . ?v3 <http://dbpedia.org/ontology/nationality> <http://dbpedia.org/resource/Saudi_Arabia>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. <http://dbpedia.org/resource/Ma_Hongkui> <http://dbpedia.org/ontology/birthPlace> ?result . ?v0 <http://dbpedia.org/ontology/commander> ?v3 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?v3 <http://dbpedia.org/ontology/birthPlace> ?result . },"```sparql
# Query for Ma Hongkui's birthplace
SELECT ?birthPlace WHERE {
  dbpedia:Ma_Hongkui dbo:birthPlace ?birthPlace .
}

# Assuming we identify the military conflict and Saudi commander, replace `:Conflict` and `:SaudiCommander`
# with the appropriate DBpedia resources.
SELECT ?commanderBirthPlace WHERE {
  :SaudiCommander dbo:birthPlace ?commanderBirthPlace .
}
```",4,7,5,3,2,3,2,20,0,0,3,0,0.0,0
170,21,val,Give me the domain of the profession of John Scholey and birth place of Era Ziganshina and entity in Russia.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Russia> . <http://dbpedia.org/resource/John_Scholey> <http://dbpedia.org/property/occupation> ?v0 . ?result <http://dbpedia.org/ontology/leaderTitle> ?v0 . <http://dbpedia.org/resource/Era_Ziganshina> <http://dbpedia.org/ontology/birthPlace> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>
PREFIX wd: <http://www.wikidata.org/entity/>

SELECT DISTINCT ?professionDomain ?birthPlace ?entityInRussia WHERE {
  # John Scholey's profession domain
  wd:Q123456 dbo:occupation ?occupation .
  ?occupation rdfs:domain ?professionDomain .

  # Era Ziganshina's birth place
  wd:Q654321 dbo:birthPlace ?birthPlace .

  # Entity in Russia
  ?entityInRussia dbo:location ?location .
  FILTER(CONTAINS(LCASE(?location), ""russia""))
}
```

Note: Replace `wd:Q123456` with the actual DBpedia resource ID for John Scholey and `wd:Q654321` with the actual DBpedia resource ID for Era Ziganshina.",4,4,5,2,3,2,3,28,0,0,1,0,0.0,0
965,45,val,"Give me the parent of Louise Mountbatten and spouse of Prince Louis of Battenberg and parent of the person born, that is a noble, as the birth name of George Mountbatten, 2nd Marquess of Milford Haven.","SELECT ?result WHERE { <http://dbpedia.org/resource/Louise_Mountbatten> <http://dbpedia.org/ontology/parent> ?result . ?v0 <http://dbpedia.org/property/birthName> ?v3 . ?result <http://dbpedia.org/ontology/spouse> <http://dbpedia.org/resource/Prince_Louis_of_Battenberg> . <http://dbpedia.org/resource/George_Mountbatten,_2nd_Marquess_of_Milford_Haven> <http://dbpedia.org/property/birthName> ?v3 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Noble>. ?v0 <http://dbpedia.org/ontology/parent> ?result . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?person WHERE {
  # Louise Mountbatten's parent
  ?louiseMountbatten dbo:parent ?person .
  FILTER(?louiseMountbatten = dbr:Louise_Mountbatten)

  # Prince Louis of Battenberg's spouse
  ?princeLouisOfBattenberg dbo:spouse ?person .
  FILTER(?princeLouisOfBattenberg = dbr:Prince_Louis_of_Battenberg)

  # George Mountbatten, 2nd Marquess of Milford Haven's parent
  ?georgeMountbatten dbo:parent ?person .
  FILTER(?georgeMountbatten = dbr:George_Mountbatten_2nd_Marquess_of_Milford_Haven)
}
```",5,6,6,3,3,3,3,71,0,0,1,0,0.0,0
417,53,val,"Give me the child of the child, that is a royalty, of Frederick Francis III, Grand Duke of Mecklenburg-Schwerin and spouse of the parent, that is a royalty, of the child of Knud, Hereditary Prince of Denmark and child of Christian X of Denmark.","SELECT ?result WHERE { ?result <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Christian_X_of_Denmark> . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?result <http://dbpedia.org/ontology/parent> ?v1 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v3 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Knud,_Hereditary_Prince_of_Denmark> . ?v2 <http://dbpedia.org/ontology/child> ?v3 . ?result <http://dbpedia.org/ontology/spouse> ?v2 . ?v1 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Frederick_Francis_III,_Grand_Duke_of_Mecklenburg-Schwerin> . }","```sparql
SELECT ?child WHERE {
  # Step 1: Identify Margrethe II as a child of Knud, Hereditary Prince of Denmark and Christian X of Denmark
  ?margrethe2 wdt:P31 wd:Q5;       # Margrethe II is a human
              wdt:P22 wd:Q111680;   # Parent (Knud, Hereditary Prince of Denmark)
              wdt:P25 wd:Q11696.    # Another parent (Christian X of Denmark)

  # Step 2: Identify Frederick IX as the parent of Margrethe II who is royalty
  ?frederick9 wdt:P31 wd:Q5;       # Frederick IX is a human
               wdt:P22 wd:Q111680; # Parent (Knud, Hereditary Prince of Denmark)
               wdt:P25 ?margrethe2. # Another parent (Margrethe II)

  # Step 3: Identify Ingrid of Sweden as the spouse of Frederick IX
  ?ingrid wdt:P31 wd:Q5;           # Ingrid is a human
          wdt:P26 ?frederick9.     # Spouse (Frederick IX)

  # Step 4: Identify Friedrich Franz IV as the child of Frederick Francis III and Alexandrine of Mecklenburg-Schwerin
  ?friedrichfranzIV wdt:P31 wd:Q5; # Friedrich Franz IV is a human
                        wdt:P22 wd:Q111681; # Parent (Frederick Francis III)
                        wdt:P25 wd:Q112233. # Another parent (Alexandrine of Mecklenburg-Schwerin)

  # Step 5: Identify Princess Cecilie as the royal child of Friedrich Franz IV
  ?cecilie wdt:P31 wd:Q5;          # Cecilie is a human
            wdt:P22 ?friedrichfranzIV. # Parent (Friedrich Franz IV)
}
```",6,8,7,3,3,3,3,71,0,0,1,0,0.0,0
582,52,val,"Give me the figure known as --10-19 and player in the father, that is an athlete and a soccer manager and a sports manager, of Masami Nagasawa and reference to the residence of the reference, that is a scientist, to Hirotaka Sugawara.","SELECT ?result WHERE { ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsManager>. ?v3 <http://xmlns.com/foaf/0.1/name> ""Hirotaka Sugawara""@en . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Scientist>. ?v3 <http://dbpedia.org/property/residence> ?v2 . <http://dbpedia.org/resource/Masami_Nagasawa> <http://dbpedia.org/property/father> ?v5 . ?v5 <http://dbpedia.org/ontology/team> ?result . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Athlete>. ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerManager>. ?result <http://xmlns.com/foaf/0.1/name> ?v2 . ?result <http://dbpedia.org/property/nickname> ""--10-19""^^<http://www.w3.org/2001/XMLSchema#gMonthDay> . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?father ?profession1 ?profession2 ?profession3 ?scientist ?residence WHERE {
  # Find Masami Nagasawa's father
  ?nagasawa dbr:Masami_Nagasawa ;
           dbo:parent ?father .
  
  # Extract professions of the father
  OPTIONAL { ?father dbo:occupation ?profession1 . FILTER regex(?profession1, ""athlete"", ""i"") }
  OPTIONAL { ?father dbo:occupation ?profession2 . FILTER regex(?profession2, ""soccer manager"", ""i"") }
  OPTIONAL { ?father dbo:occupation ?profession3 . FILTER regex(?profession3, ""sports manager"", ""i"") }

  # Find a scientist related to Hirotaka Sugawara
  ?scientist dbo:residence ?residence ;
             dbo:collaborator dbr:Hirotaka_Sugawara .
}
```",6,10,7,3,3,3,3,71,0,0,1,0,0.0,0
965,41,val,"Give me the parent of George Mountbatten, 2nd Marquess of Milford Haven and spouse of the spouse of Princess Victoria of Hesse and by Rhine and parent of the child, that is a royalty, of Prince Louis of Battenberg.","SELECT ?result WHERE { ?v4 <http://dbpedia.org/ontology/parent> ?result . <http://dbpedia.org/resource/George_Mountbatten,_2nd_Marquess_of_Milford_Haven> <http://dbpedia.org/ontology/parent> ?result . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. <http://dbpedia.org/resource/Princess_Victoria_of_Hesse_and_by_Rhine> <http://dbpedia.org/ontology/spouse> ?v2 . ?v4 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Prince_Louis_of_Battenberg> . ?result <http://dbpedia.org/ontology/spouse> ?v2 . }","```sparql
SELECT ?parent WHERE {
  ?person rdf:type dbo:Person .
  ?person foaf:name ""George Mountbatten, 2nd Marquess of Milford Haven""@en .
  ?person dbo:spouse ?spouse1 .
  ?spouse1 dbo:spouse ?princessVictoria .
  ?princessVictoria foaf:name ""Princess Victoria of Hesse and by Rhine""@en .
  ?person dbo:parent ?parent .
}
```",5,6,6,2,3,3,3,71,0,0,1,0,0.0,0
773,50,val,"Give me the parent of the child, that is a royalty, of Louis the German and parent of the successor of the child, that is a royalty, of Louis the Pious.",SELECT ?result WHERE { ?v3 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Louis_the_German> . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. <http://dbpedia.org/resource/Louis_the_Pious> <http://dbpedia.org/ontology/child> ?v0 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v3 <http://dbpedia.org/ontology/parent> ?result . ?v0 <http://dbpedia.org/ontology/successor> ?v4 . ?result <http://dbpedia.org/ontology/child> ?v4 . },"```sparql
# Step 1: Find Louis the German's children who were royalty
SELECT ?child WHERE {
    ?child dbo:parent dbr:Louis_the_German .
    ?child dbo:royalty true .
}

# Step 2: Determine the parent of one of these royal children (Louis the German)
SELECT ?parent WHERE {
    ?child dbo:parent dbr:Louis_the_German .
    ?child dbo:royalty true .
    ?child dbo:parent ?parent .
}

# Step 3: Find Louis the Pious' children who were royalty
SELECT ?child WHERE {
    ?child dbo:parent dbr:Louis_the_Pious .
    ?child dbo:royalty true .
}

# Step 4: Determine a successor of one of these royal children (Louis the Pious)
SELECT ?successor WHERE {
    ?child dbo:parent dbr:Louis_the_Pious .
    ?child dbo:royalty true .
    ?child dbo:succesor ?successor .
}

# Step 5: Find the parent of this successor
SELECT ?parent WHERE {
    ?child dbo:parent dbr:Louis_the_Pious .
    ?child dbo:royalty true .
    ?child dbo:succesor ?successor .
    ?successor dbo:parent ?parent .
}
```",5,7,6,3,2,3,3,71,0,0,2,0,0.0,0
124,46,val,"Give me the military force of the war, that is an event and a military conflict and a societal event, of Frank Rhodes (British Army officer) and commander in the war, that is a societal event and a military conflict, of the reference, that is Australian and an organisation and a military unit, to 'A' Battery, Royal Australian Artillery.","SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v2 <http://xmlns.com/foaf/0.1/name> ""'A' Battery, Royal Australian Artillery""@en . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?result <http://dbpedia.org/ontology/battle> ?v4 . ?v1 <http://dbpedia.org/ontology/commander> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. <http://dbpedia.org/resource/Frank_Rhodes_(British_Army_officer)> <http://dbpedia.org/ontology/battle> ?v4 . ?v2 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Australia>. ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?v2 <http://dbpedia.org/ontology/battle> ?v1 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryUnit>. ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?militaryForce WHERE {
  # Find wars where Frank Rhodes was a commander
  ?war dbo:commander dbr:Frank_Rhodes ;
       a dbo:MilitaryConflict, dbo:SocietalEvent .

  # Find the military force associated with 'A' Battery, Royal Australian Artillery
  ?battery dbo:militaryUnitOf ?militaryForce ;
           rdfs:label ""A Battery, Royal Australian Artillery""@en .
  
  FILTER(?militaryForce != dbr:A_Battery,_Royal_Australian_Artillery)
}
```",5,13,6,3,2,3,3,71,0,0,9,0,0.0,0
582,27,train,"Give me the figure known as the nickname of the team, that is an organisation, of Hajime Moriyasu.",SELECT ?result WHERE { ?result <http://dbpedia.org/property/nickname> ?v2 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?v1 <http://dbpedia.org/ontology/coach> <http://dbpedia.org/resource/Hajime_Moriyasu> . ?v1 <http://dbpedia.org/property/nickname> ?v2 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?team ?nickname WHERE {
  ?person dbo:nationality dbr:Japan ;
          foaf:name ""Hajime Moriyasu""@en .
  
  ?person dbo:currentTeam ?team .

  OPTIONAL { 
    ?team dbo:commonName ?nickname .
  }
}
```",3,4,4,3,1,3,3,71,0,0,1,0,0.0,0
47,1,train,Give me the office of Bidesh Ranjan Bose.,SELECT ?result WHERE { <http://dbpedia.org/resource/Bidesh_Ranjan_Bose> <http://dbpedia.org/property/office> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?office WHERE {
  ?person rdfs:label ""Bidesh Ranjan Bose""@en.
  OPTIONAL { ?person dbo:positionHeld ?office. }
}
```",1,1,2,1,1,3,3,71,0,0,1,0,0.0,0
129,10,train,"Give me the associated musical artist of the actor, that is an organisation, of Dreamville Presents: Revenge.",SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. <http://dbpedia.org/resource/Dreamville_Presents:_Revenge> <http://dbpedia.org/property/starring> ?v1 . ?v1 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?artist WHERE {
  # Find the event or album related to Dreamville Presents: Revenge
  ?event dbo:title ""Dreamville Presents: Revenge"" .
  
  # Find actors associated with this event
  ?actor dbo:associatedWith ?event .

  # Find musical artists (organizations) associated with these actors
  ?artist dbo:associatedMusicalArtist ?actor .
  FILTER EXISTS { ?artist a dbo:Band . } # Ensure the artist is an organization

  # Limit to known Dreamville Records related entities
  OPTIONAL { ?event dbo:label dbr:Dreamville_Records }
}
```",2,3,3,2,1,2,3,28,0,0,4,0,0.0,0
926,20,train,Give me the successor of the child of Ahmed III and father of Mahmud II.,SELECT ?result WHERE { <http://dbpedia.org/resource/Mahmud_II> <http://dbpedia.org/property/father> ?result . ?v1 <http://dbpedia.org/ontology/successor> ?result . ?v1 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Ahmed_III> . },"```sparql
SELECT ?successor WHERE {
  ?mustafa3 wdt:P31 wd:Q215627; # Mustafa III is an instance of a person
             wdt:P22 wd:Q1169;    # Ahmed III is the father of Mustafa III
             wdt:P25 wd:Q1204.   # Mahmud II is the child of Mustafa III

  ?mustafa3 wdt:P1368 ?successor. # The successor of Mustafa III
}
```",3,3,4,2,2,3,3,71,0,0,1,0,0.0,0
933,6,train,Give me the birth name of Alan Warner (musician).,SELECT ?result WHERE { <http://dbpedia.org/resource/Alan_Warner_(musician)> <http://dbpedia.org/property/birthName> ?result . },"```sparql
PREFIX foaf: <http://xmlns.com/foaf/0.1/>
PREFIX schema: <http://schema.org/>

SELECT ?birthName WHERE {
  ?person a foaf:Person ;
          foaf:name ""Alan Warner (musician)"" .
  
  OPTIONAL { ?person foaf:givenName ?givenName . }
  OPTIONAL { ?person schema:birthName ?birthName . }

  FILTER(?birthName != """")
}
```",1,1,2,1,1,3,3,71,0,0,1,0,0.0,0
791,27,train,"Give me the father of the child, that is a royalty, of the father, that is a royalty and an office holder, of Emperor Antoku.",SELECT ?result WHERE { ?v2 <http://dbpedia.org/property/father> ?result . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. <http://dbpedia.org/resource/Emperor_Antoku> <http://dbpedia.org/property/father> ?v1 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v2 <http://dbpedia.org/property/father> ?v1 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?father WHERE {
  # Emperor Antoku's father
  dbr:Emperor_Antoku dbo:father dbr:Taira_no_Kiyomori .
  
  # Taira no Kiyomori is a royalty and an office holder
  dbr:Taira_no_Kiyomori dbo:nationality dbr:Japan ;
                        dbo:occupation ?office .

  FILTER EXISTS { 
    VALUES ?office { dbo:Ruler dbo:GovernmentOfficial }
  }

  # Find a child of Taira no Kiyomori who is royalty
  dbr:Taira_no_Kiyomori dbo:child ?royalChild .
  
  # Ensure the child is also royalty
  ?royalChild dbo:nationality dbr:Japan .

  # Get the father of this royal child (which should be Taira no Kiyomori)
  ?royalChild dbo:father ?father .
}
```",3,6,4,3,1,3,3,71,0,0,1,0,0.0,0
216,35,train,"Give me the team of the person born, that is a sports manager and a soccer manager and a soccer player, on 1983-12-20 and player in the coach of Croatia national under-21 football team.","SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerManager>. ?v2 <http://dbpedia.org/ontology/team> ?result . ?v1 <http://dbpedia.org/ontology/birthDate> ""1983-12-20""^^<http://www.w3.org/2001/XMLSchema#date> . <http://dbpedia.org/resource/Croatia_national_under-21_football_team> <http://dbpedia.org/ontology/coach> ?v2 . ?result <http://dbpedia.org/ontology/coach> ?v1 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerPlayer>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsManager>. }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?person ?team WHERE {
  ?person dbo:birthDate ""1983-12-20""^^xsd:date .
  ?person dbo:occupation ?occupation .
  FILTER (
    EXISTS { ?occupation rdfs:label ?label1 . FILTER (CONTAINS(LCASE(?label1), ""sports manager"")) }
    &&
    EXISTS { ?occupation rdfs:label ?label2 . FILTER (CONTAINS(LCASE(?label2), ""soccer manager"")) }
    &&
    EXISTS { ?occupation rdfs:label ?label3 . FILTER (CONTAINS(LCASE(?label3), ""soccer player"")) }
  )
  OPTIONAL {
    ?person dbo:managerTeam ?team .
  }
  OPTIONAL {
    ?person dbo:coachTeam dbr:Croatia_national_under-21_football_team .
  }
}
```",4,7,5,2,2,3,3,71,0,0,1,0,0.0,0
579,14,train,"Give me the person born as the birth name of the native, that is an office holder, of Edinburgh.",SELECT ?result WHERE { ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v2 <http://dbpedia.org/property/birthName> ?v0 . ?v2 <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Edinburgh> . ?result <http://dbpedia.org/property/birthName> ?v0 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT ?person ?birthName WHERE {
  ?person dbo:birthPlace dbr:Edinburgh .
  ?person foaf:name ?birthName .
  OPTIONAL { ?person dbo:occupation ?office . FILTER (CONTAINS(LCASE(str(?office)), ""office"")) }
}
```",3,4,4,3,1,3,2,20,17,3546,3,0.0047712601740106655,0.85,0.00948925481440134
170,10,train,Give me the birth place of the awardee of People's Artist of Russia.,SELECT ?result WHERE { ?v1 <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/People's_Artist_of_Russia> . ?v1 <http://dbpedia.org/ontology/birthPlace> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?person ?birthPlace WHERE {
  ?person a dbo:Person .
  ?person dbo:honoraryTitle dbr:People's_Artist_of_Russia .
  ?person dbo:birthPlace ?birthPlace .
}
```",2,2,3,2,1,2,3,28,0,0,33,0,0.0,0
465,21,train,Give me the successor of the child of Alfonso I d'Este and successor of Renée of France.,SELECT ?result WHERE { ?v1 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Alfonso_I_d'Este> . <http://dbpedia.org/resource/Renée_of_France> <http://dbpedia.org/ontology/successor> ?result . ?v1 <http://dbpedia.org/ontology/successor> ?result . },"```sparql
SELECT ?successor WHERE {
  ?alfonso1 dbo:spouse ?rene .
  ?rene foaf:name ""Renée of France""@en .
  ?alfonso1 foaf:name ""Alfonso I d'Este""@en .
  ?child dbo:parent ?alfonso1 ;
         dbo:parent ?rene .
  ?ercole2 foaf:name ""Ercole II d'Este""@en .
  ?ercole2 dbo:successorOf ?alfonso1 .
  ?alberto2 foaf:name ""Alfonso II d'Este""@en .
  ?alberto2 dbo:successorOf ?ercole2 .
  BIND(?alberto2 AS ?successor)
}
```",3,3,4,2,2,3,3,71,0,0,1,0,0.0,0
933,17,train,"Give me the band, that is a group and a band and an organisation, of the person born, that is a musical artist, on 1947-04-21.","SELECT ?result WHERE { ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?v0 <http://dbpedia.org/ontology/birthDate> ""1947-04-21""^^<http://www.w3.org/2001/XMLSchema#date> . ?v0 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Band>. ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Group>. }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?band WHERE {
  ?person dbo:birthDate ""1947-04-21""^^xsd:date .
  ?person a dbo:MusicalArtist .
  ?person dbp:band ?band .
  
  FILTER EXISTS { ?band a dbo:Band . }
  FILTER EXISTS { ?band a dbo:MusicalGroup . }
  FILTER EXISTS { ?band a dbo:Organization . }
}
```",2,6,3,2,1,3,3,71,0,0,2,0,0.0,0
36,12,train,Give me the actor of Being Mrs Elliot and person born in 1971 and person born as Ayo Makun.,"SELECT ?result WHERE { <http://dbpedia.org/resource/Being_Mrs_Elliot> <http://dbpedia.org/ontology/starring> ?result . ?result <http://dbpedia.org/property/birthName> ""Ayo Makun""@en . ?result <http://dbpedia.org/ontology/birthYear> ""1971""^^<http://www.w3.org/2001/XMLSchema#gYear> . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT ?actor WHERE {
  ?film dbo:starring ?actor .
  ?film dbr:Being_Mrs_Elliot .
  
  ?actor dbo:birthdayYear ?birthYear .
  FILTER (?birthYear = ""1971""^^xsd:gYear) .

  OPTIONAL { 
    ?actor foaf:name ?name .
    FILTER (CONTAINS(LCASE(?name), LCASE(""Ayo Makun"")))
  }
}
```",3,3,4,1,3,2,3,28,0,0,1,0,0.0,0
507,5,train,Who is the person born on 1919-06-17?,"SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/birthDate> ""1919-06-17""^^<http://www.w3.org/2001/XMLSchema#date> . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT ?person ?name WHERE {
  ?person a dbo:Person .
  ?person foaf:name ?name .
  ?person dbo:birthDate ?date .
  FILTER (YEAR(?date) = 1919 && MONTH(?date) = 6 && DAY(?date) = 17)
}
```",1,1,2,1,1,3,3,71,13,14,1,0.48148148148148145,0.9285714285714286,0.6341463414634146
917,29,train,Give me the child of the father of Keʻelikōlani and child of Kekūanāoʻa and parent of Albert Kamehameha.,"SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Albert_Kamehameha> . <http://dbpedia.org/resource/Keʻelikōlani> <http://dbpedia.org/property/father> ?v3 . ?result <http://dbpedia.org/property/father> ""Kekūanāoʻa""@en . ?result <http://dbpedia.org/ontology/parent> ?v3 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?person WHERE {
  # Keʻelikōlani's father
  ?keelikolani a dbo:Person ;
               dbo:father dbr:Kahekili_II_of_Hawaii .

  # Kekūanāoʻa and his sibling (Bernice Pauahi Bishop)
  ?kekuanaoa a dbo:Person ;
             dbo:child dbr:Kahekili_II_of_Hawaii .
  
  ?sibling a dbo:Person ;
           dbo:father dbr:Kahekili_II_of_Hawaii ;
           dbo:mother dbr:Kekuanaoa .

  # Albert Kamehameha's parent
  ?albert a dbo:Person ;
          dbo:parent ?sibling .
  
  FILTER(?sibling = ?person)
}
```",4,4,5,2,3,3,3,71,0,0,1,0,0.0,0
465,37,train,"Give me the spouse of the child, that is a royalty, of the parent of Elizabeth of Austria (1526–1545) and successor of Renée of France.",SELECT ?result WHERE { ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?result <http://dbpedia.org/ontology/spouse> ?v3 . ?v0 <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Elizabeth_of_Austria_(1526–1545)> . ?v0 <http://dbpedia.org/ontology/child> ?v3 . <http://dbpedia.org/resource/Renée_of_France> <http://dbpedia.org/ontology/successor> ?result . },"```sparql
SELECT ?spouse WHERE {
  # Elizabeth of Austria (1526–1545)
  wd:Q123456 wdt:P22 ?parent1 .
  
  # Parent of Elizabeth of Austria is Ferdinand I, Holy Roman Emperor
  ?parent1 rdfs:label ""Ferdinand I, Holy Roman Emperor""@en .

  # Child of Ferdinand I who is royalty (e.g., Charles V)
  ?child wdt:P40 wd:Q123456 .
  ?child wdt:P39 ?royaltyTitle .

  # Renée of France and her successor
  wd:Q654321 wdt:P26 ?successor .
  wd:Q654321 rdfs:label ""Renée of France""@en .

  # Spouse of the royal child
  ?child wdt:P26 ?spouse .
}
```

Note: The placeholders `wd:Q123456` and `wd:Q654321` should be replaced with the actual DBpedia identifiers for Elizabeth of Austria (1526–1545) and Renée of France, respectively. You may need to look up these identifiers in DBpedia.",4,5,5,3,2,3,3,71,0,0,1,0,0.0,0
606,4,train,"Give me the figure known, that is a university and a sports league and an educational institution, as Penn Quakers.",SELECT ?result WHERE { ?result <http://dbpedia.org/property/nickname> <http://dbpedia.org/resource/Penn_Quakers> . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/EducationalInstitution>. ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/University>. ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsLeague>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?team WHERE {
  ?university a dbo:University ;
              rdfs:label ""University of Pennsylvania""@en .
  
  ?team dbo:sportTeamOf ?university ;
        rdfs:label ?label .

  FILTER(CONTAINS(LCASE(?label), ""quakers""))
}
```",1,4,2,1,1,3,2,20,0,0,1,0,0.0,0
976,19,train,"Give me the office of the leader, that is a politician, of Grand National Assembly of Turkey and office of Meral Akşener.",SELECT ?result WHERE { <http://dbpedia.org/resource/Meral_Akşener> <http://dbpedia.org/property/office> ?result . <http://dbpedia.org/resource/Grand_National_Assembly_of_Turkey> <http://dbpedia.org/ontology/leader> ?v2 . ?v2 <http://dbpedia.org/property/office> ?result . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?office1 ?office2 WHERE {
  # Find the office of the Speaker of the Grand National Assembly of Turkey
  dbr:Speaker_of_the_Grand_National_Assembly_of_Turkey dbo:positionHeld ?office1 .
  
  # Find the current political role or office of Meral Akşener
  OPTIONAL { 
    dbr:Meral_Akşener dbo:politicalParty ?party ;
                      dbo:office ?office2 .
  }
}
```",3,4,4,2,2,3,3,71,0,0,1,0,0.0,0
508,7,train,"Give me the birthplace of the commander, that is a politician, in 1939–1940 Winter Offensive.",SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/birthPlace> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. <http://dbpedia.org/resource/1939–1940_Winter_Offensive> <http://dbpedia.org/ontology/commander> ?v1 . },"```sparql
SELECT ?birthPlace WHERE {
  dbpedia:Semjon_Timoschenko dbo:birthPlace ?birthPlace .
}
```",2,3,3,2,1,3,2,20,0,0,11,0,0.0,0
417,14,train,"Give me the child of the child, that is a royalty, of Frederick Francis III, Grand Duke of Mecklenburg-Schwerin.","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/parent> ?v1 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v1 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Frederick_Francis_III,_Grand_Duke_of_Mecklenburg-Schwerin> . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>

SELECT ?grandchild WHERE {
  ?frederickFrancisIII dbo:child ?child .
  FILTER (str(?frederickFrancisIII) = ""Frederick Francis III, Grand Duke of Mecklenburg-Schwerin""^^xsd:string)
  
  ?child dbo:child ?grandchild .

  OPTIONAL { ?grandchild dbo:royalTitle ?title . }
  FILTER EXISTS { ?grandchild dbo:royalTitle ?title }
}
```",2,3,3,2,1,3,3,71,0,0,8,0,0.0,0
865,9,train,Give me the native of British Raj and father of AK Abdul Momen.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/British_Raj> . <http://dbpedia.org/resource/AK_Abdul_Momen> <http://dbpedia.org/property/father> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?father WHERE {
  ?person a dbo:Person ;
          foaf:name ""AK Abdul Momen""@en .
  OPTIONAL { ?person dbo:father ?father . }
}
```",2,2,3,1,2,3,3,71,0,0,1,0,0.0,0
41,15,train,"Give me the party of Enda Kenny and party of the leader, that is a politician and an office holder, of 2005 Castlereagh Borough Council election.",SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/party> ?result . <http://dbpedia.org/resource/Enda_Kenny> <http://dbpedia.org/ontology/party> ?result . <http://dbpedia.org/resource/2005_Castlereagh_Borough_Council_election> <http://dbpedia.org/property/leader> ?v1 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?party1 ?party2 WHERE {
  # Find Enda Kenny's political party
  dbr:Enda_Kenny dbo:politicalParty ?party1 .

  # Find politicians who were office holders in the 2005 Castlereagh Borough Council election and their parties
  ?officeHolder dbo:election ?election .
  ?election dbo:date ""2005-05-05""^^xsd:date ;
             dbo:place dbr:Castlereagh_Borough_Council_Elections_2005 .
  ?officeHolder dbo:politicalParty ?party2 .
}
```",3,5,4,2,2,2,3,28,0,0,1,0,0.0,0
83,10,train,"Who is the governor of the commander, that is a politician, in Central African Republic Civil War?",SELECT ?result WHERE { ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. <http://dbpedia.org/resource/Central_African_Republic_Civil_War> <http://dbpedia.org/ontology/commander> ?v0 . ?v0 <http://dbpedia.org/property/governor> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?governor WHERE {
  # Find commanders involved in the Central African Republic Civil War
  ?commander dbo:spouse ?war .
  ?war rdfs:label ""Central African Republic Civil War""@en .

  # Identify who governs or has authority over these commanders
  ?commander dbo:subOrganizationOf ?authority .
  ?authority dbo:head ?governor .

  # Ensure the governor is a politician
  ?governor rdf:type dbo:Politician .
  
  FILTER (lang(?war) = 'en')
}
```",2,3,3,2,1,3,2,20,0,0,19,0,0.0,0
573,0,train,Give me the person decedent at Massachusetts.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/deathPlace> <http://dbpedia.org/resource/Massachusetts> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?person ?name WHERE {
  ?person a dbo:Person ;
          dbo:deathPlace ?place .
  ?place rdfs:label ?locationLabel .
  FILTER (CONTAINS(LCASE(?locationLabel), ""massachusetts"") && LANGMATCHES(LANG(?locationLabel), ""en""))
  OPTIONAL { ?person rdfs:label ?name . }
}
ORDER BY ?name
LIMIT 100
```",1,1,2,1,1,3,3,71,22,156,946,0.12359550561797752,0.022727272727272728,0.038394415357766144
267,5,train,Give me the birth date of Dan Cathy.,SELECT ?result WHERE { <http://dbpedia.org/resource/Dan_Cathy> <http://dbpedia.org/ontology/birthDate> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?birthDate WHERE {
  ?person a dbo:Person ;
          rdfs:label ""Dan Cathy""@en .
  OPTIONAL { ?person dbo:birthDate ?birthDate . }
}
```",1,1,2,1,1,3,2,20,1,0,0,1.0,1.0,1.0
987,1,train,Give me the birth place of Moamer Kasumović.,SELECT ?result WHERE { <http://dbpedia.org/resource/Moamer_Kasumović> <http://dbpedia.org/ontology/birthPlace> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?birthPlace WHERE {
  dbr:Mohamed_Gaddafi dbo:birthPlace ?birthPlace .
}
```",1,1,2,1,1,3,3,71,0,0,3,0,0.0,0
935,1,train,Give me the headquarter of Provincial Assembly of Balochistan.,SELECT ?result WHERE { <http://dbpedia.org/resource/Provincial_Assembly_of_Balochistan> <http://dbpedia.org/ontology/location> ?result . },"```sparql
SELECT ?headquarters WHERE {
  ?assembly a dbo:Legislature ;
            rdfs:label ""Provincial Assembly of Balochistan""@en .
  OPTIONAL { ?assembly dbp:headquarters ?headquarters . }
}
```",1,1,2,1,1,3,2,20,0,0,1,0,0.0,0
170,11,train,Give me the domain of the profession of John Scholey.,SELECT ?result WHERE { <http://dbpedia.org/resource/John_Scholey> <http://dbpedia.org/property/occupation> ?v1 . ?result <http://dbpedia.org/ontology/leaderTitle> ?v1 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT ?domain WHERE {
  ?person foaf:name ""John Scholey""@en .
  ?person foaf:profession ?profession .
  ?profession dbo:fieldOfActivity ?domain .
}
```",2,2,3,2,1,2,3,28,0,0,39395,0,0.0,0
129,7,train,Give me the associated musical artist of Saba (rapper) and professional in .,"SELECT ?result WHERE { <http://dbpedia.org/resource/Saba_(rapper)> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?result <http://dbpedia.org/property/occupation> """"@en . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?associatedArtist WHERE {
  VALUES ?saba { dbr:Saba_(rapper) }
  ?saba dbo:associatedMusicalArtist ?associatedArtist .
}
```",2,2,3,1,2,2,3,28,0,0,7,0,0.0,0
445,11,train,"Give me the entity in the residence, that is a country, of Anna Sharkey.",SELECT ?result WHERE { <http://dbpedia.org/resource/Anna_Sharkey> <http://dbpedia.org/property/residence> ?v0 . ?result <http://dbpedia.org/ontology/location> ?v0 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?country WHERE {
  ?person a dbo:Person ;
          foaf:name ""Anna Sharkey""@en .
  
  OPTIONAL { 
    ?person dbo:residence ?residence .
    
    ?residence dbo:country ?country .
  }
}
```",2,3,3,2,1,3,3,71,0,0,3570,0,0.0,0
41,17,train,Give me the party of the person born as David Declan Costello and party of Enda Kenny.,"SELECT ?result WHERE { ?v2 <http://dbpedia.org/ontology/party> ?result . <http://dbpedia.org/resource/Enda_Kenny> <http://dbpedia.org/ontology/party> ?result . ?v2 <http://dbpedia.org/property/birthName> ""David Declan Costello""@en . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT ?person ?name ?partyLabel WHERE {
  VALUES ?names { 
    (""David Declan Costello""^^xsd:string) 
    (""Enda Kenny""^^xsd:string)
  }
  
  ?person a dbo:Person ;
          foaf:name ?name .
  FILTER(CONTAINS(LCASE(?name), LCASE(?names)))
  
  OPTIONAL {
    ?person dbo:party ?party .
    ?party rdfs:label ?partyLabel .
    FILTER(langMatches(lang(?partyLabel), ""en""))
  }
}
ORDER BY ?name
```",3,3,4,2,2,2,3,28,0,0,1,0,0.0,0
41,9,train,Give me the party of Declan Costello and party of Enda Kenny.,SELECT ?result WHERE { <http://dbpedia.org/resource/Enda_Kenny> <http://dbpedia.org/ontology/party> ?result . <http://dbpedia.org/resource/Declan_Costello> <http://dbpedia.org/ontology/party> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?person ?name ?partyLabel WHERE {
  VALUES ?person { 
    dbr:Declan_Costello (dbr:Enda_Kenny) 
  }
  
  OPTIONAL {
    ?person dbo:memberOfParty ?party .
    SERVICE wikibase:label { bd:serviceParam wikibase:language ""[AUTO_LANGUAGE],en"". }
  }

  BIND(?person AS ?subject)
  ?subject rdfs:label ?name .
}
```",2,2,3,1,2,2,3,28,0,0,1,0,0.0,0
98,5,train,"Give me the region, that is a country, of Philippine Standard Time.",SELECT ?result WHERE { ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. ?result <http://dbpedia.org/property/timeZone> <http://dbpedia.org/resource/Philippine_Standard_Time> . },"```sparql
SELECT ?country WHERE {
  ?pst wdt:P31 wd:Q11173; # Instance of Time Zone
       dbp:timezoneName ""Philippine Standard Time"".
  OPTIONAL { ?pst dbp:country ?country. }
}
```",1,2,2,1,1,2,3,28,0,0,8,0,0.0,0
933,12,train,Give me the reference to Alan Warner and band of The Ramong Sound.,"SELECT ?result WHERE { <http://dbpedia.org/resource/The_Ramong_Sound> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?result <http://xmlns.com/foaf/0.1/name> ""Alan Warner""@en . }","```sparql
# Query for Alan Warner's notable work
SELECT ?work WHERE {
  wd:Q2106785 dbo:notableWork ?work .
}

UNION

# Query for The Ramones' basic information
SELECT ?formationYear, ?album WHERE {
  wd:Q15188 dbo:formed ?formationYear .
  OPTIONAL { wd:Q15188 dbo:album ?album . }
}
```",2,2,3,1,2,3,3,71,0,0,1,0,0.0,0
773,6,train,Give me the successor of Charles the Bald.,SELECT ?result WHERE { <http://dbpedia.org/resource/Charles_the_Bald> <http://dbpedia.org/ontology/successor> ?result . },"```sparql
SELECT ?successor WHERE {
  dbpedia:Charles_the_Bald dbo:successor ?successor .
}
```",1,1,2,1,1,3,3,71,0,0,2,0,0.0,0
236,8,train,Give me the party member of the administration of James Madison.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/party> ?v0 . ?v0 <http://dbpedia.org/property/leader> <http://dbpedia.org/resource/James_Madison> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?person ?position WHERE {
  # James Madison's presidency
  dbr:James_Madison dbo:presidentOf ?country .
  
  # Democratic-Republican Party affiliation during his administration
  dbr:Democratic-Republican_Party dbo:member ?partyMember .
  
  # Filter members who were part of the administration
  ?partyMember dbo:officeHolder ?position .
  ?partyMember dbo:heldBy ?person .

  FILTER (?country = dbr:United_States)
}
```",2,2,3,2,1,3,2,20,0,0,597,0,0.0,0
826,5,train,"Who is the reference, that is a royalty, to Louis I?","SELECT ?result WHERE { ?result <http://xmlns.com/foaf/0.1/name> ""Louis I""@en . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. }","```sparql
SELECT ?reference WHERE {
  ?person dbo:wikiPageRedirects dbpedia:Louis_I.
  OPTIONAL { ?person dbo:father ?reference. }
  OPTIONAL { ?person dbo:mother ?reference. }
  OPTIONAL { ?person dbo:spouse ?reference. }
  FILTER(?reference != ?person)
}
```",1,2,2,1,1,3,3,71,0,0,8,0,0.0,0
216,39,train,"Give me the team of the person born, that is a sports manager and a soccer manager and a soccer player, on the death of Pavel Vezhinov and player in Mario Ivanković.",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/coach> ?v1 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerPlayer>. ?v1 <http://dbpedia.org/ontology/birthDate> ?v0 . <http://dbpedia.org/resource/Mario_Ivanković> <http://dbpedia.org/ontology/team> ?result . <http://dbpedia.org/resource/Pavel_Vezhinov> <http://dbpedia.org/ontology/deathDate> ?v0 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsManager>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerManager>. },"```sparql
# Step 1: Get Pavel Vezhinov's birthdate
SELECT ?birthdate WHERE {
    dbpedia:Pavel_Vezhinov dbo:birthday ?birthdate .
}

# Assuming the birthdate is found, replace <VezhinovBirthDate> with the actual date

# Step 2: Find people born on the same day who are sports managers, soccer managers, and players
SELECT DISTINCT ?person WHERE {
    ?person dbo:birthday ?bday .
    FILTER (YEAR(?bday) = YEAR(<VezhinovBirthDate>) && MONTH(?bday) = MONTH(<VezhinovBirthDate>) && DAY(?bday) = DAY(<VezhinovBirthDate>))
    
    # Check if the person is a sports manager
    OPTIONAL { ?person dbo:occupation dbpedia:Sports_Manager . }
    
    # Check if the person is a soccer manager
    OPTIONAL { ?person dbo:occupation dbpedia:Soccer_Manager . }
    
    # Check if the person is a soccer player
    OPTIONAL { ?person dbo:occupation dbpedia:Soccer_Player . }
    
    FILTER (COUNT(?person) > 0)
}

# Step 3: Identify teams associated with these individuals
SELECT DISTINCT ?team WHERE {
    ?person dbo:memberTeam ?team .
    # Assuming ?person is replaced by the actual person found in step 2
}

# Step 4: Check if any of these teams included Mario Ivanković
SELECT DISTINCT ?team WHERE {
    ?team dbo:member ?player .
    FILTER (?player = dbpedia:Mario_Ivanković)
    
    # Assuming ?team is replaced by the actual team found in step 3
}
```",4,7,5,3,2,3,3,71,0,0,1,0,0.0,0
579,5,train,"Give me the birth name of Jane Percy, Duchess of Northumberland.","SELECT ?result WHERE { <http://dbpedia.org/resource/Jane_Percy,_Duchess_of_Northumberland> <http://dbpedia.org/property/birthName> ?result . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT ?birthName WHERE {
  ?person a dbo:Duchess ;
          foaf:name ""Jane Percy"" ;
          dbo:birthName ?birthName .
}
```",1,1,2,1,1,3,2,20,0,0,1,0,0.0,0
200,0,train,Give me the reference to Angelcorpse.,"SELECT ?result WHERE { ?result <http://xmlns.com/foaf/0.1/name> ""Angelcorpse""@en . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?band ?genre ?members ?albums WHERE {
  ?band a dbo:Band ;
        rdfs:label ""Angelcorpse""@en .
  
  OPTIONAL { ?band dbo:genre ?genre . }
  OPTIONAL { ?band dbo:member ?members . }
  OPTIONAL { ?band dbo:album ?albums . }

  FILTER (lang(?band) = 'en')
}
```",1,1,2,1,1,2,2,9,0,0,1,0,0.0,0
606,7,train,"Give me the figure known as the nickname of DeKalb, Illinois.","SELECT ?result WHERE { <http://dbpedia.org/resource/DeKalb,_Illinois> <http://dbpedia.org/property/nickname> ?v1 . ?result <http://dbpedia.org/property/nickname> ?v1 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?nickname WHERE {
  VALUES ?dekalb { dbr:DeKalb_(Illinois) }
  OPTIONAL { ?dekalb dbo:nickname ?nickname . }
}
```",2,2,3,2,1,3,2,20,0,0,1,0,0.0,0
445,18,train,Give me the death place of Patrick Moore and entity in United Kingdom and entity in England.,SELECT ?result WHERE { <http://dbpedia.org/resource/Patrick_Moore> <http://dbpedia.org/ontology/deathPlace> ?result . ?result <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/United_Kingdom> . ?result <http://dbpedia.org/ontology/location> <http://dbpedia.org/resource/England> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?deathPlace ?ukEntity ?englandEntity WHERE {
  # Find Patrick Moore's death place
  dbr:Patrick_Moore dbo:deathPlace ?deathPlace .

  # Find an entity in the United Kingdom related to the death place
  ?deathPlace dbo:country dbr:United_Kingdom .
  ?ukEntity dbo:location ?deathPlace .
  FILTER NOT EXISTS { ?ukEntity owl:sameAs* dbr:Patrick_Moore }

  # Find an entity in England related to the death place
  ?deathPlace dbo:stateOrProvince dbr:England .
  ?englandEntity dbo:location ?deathPlace .
  FILTER NOT EXISTS { ?englandEntity owl:sameAs* dbr:Patrick_Moore }
}
```",3,3,4,1,3,3,3,71,0,0,1,0,0.0,0
507,1,train,Give me the director of Entertaining Mr Sloane (film).,SELECT ?result WHERE { <http://dbpedia.org/resource/Entertaining_Mr_Sloane_(film)> <http://dbpedia.org/ontology/director> ?result . },"```sparql
SELECT ?director WHERE {
  ?film dbo:title ""Entertaining Mr Sloane""@en .
  ?film dbo:director ?director .
}
```",1,1,2,1,1,3,3,71,0,0,1,0,0.0,0
273,9,train,Give me the child of the child of Edoardo Agnelli (1831-1871).,SELECT ?result WHERE { ?v0 <http://dbpedia.org/ontology/parent> <http://dbpedia.org/resource/Edoardo_Agnelli_(1831-1871)> . ?v0 <http://dbpedia.org/ontology/child> ?result . },"```sparql
SELECT ?grandchild WHERE {
  # Find the children of Edoardo Agnelli
  ?child dbo:parent dbr:Edoardo_Agnelli_(1831-1871) .
  
  # For each child, find their children (i.e., grandchildren of Edoardo Agnelli)
  ?grandchild dbo:parent ?child .
}
```",2,2,3,2,1,3,2,20,0,0,1,0,0.0,0
83,13,train,"Give me the ruling party in the birthplace, that is a town and Brazilian and a soccer club, of the member, that is a sports manager, of Kedah FA.",SELECT ?result WHERE { ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsManager>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Town>. ?v1 <http://dbpedia.org/property/leaderParty> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerClub>. ?v0 <http://dbpedia.org/ontology/team> <http://dbpedia.org/resource/Kedah_FA> . ?v1 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Brazil>. ?v0 <http://dbpedia.org/ontology/birthPlace> ?v1 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?town ?rulingParty WHERE {
  # Step 1: Identify sports manager of Kedah FA
  ?person dbo:memberOf dbr:Kedah_FA ;
          a dbo:SportsManager .

  # Step 2: Find birthplace that is a Brazilian town with a soccer club
  ?person dbp:birthPlace ?town .
  ?town a dbo:Settlement ;
        dbo:country dbr:Brazil ;
        dbo:sportTeam ?soccerClub .
  ?soccerClub a dbo:SoccerClub .

  # Step 3: Find the ruling party in that town
  OPTIONAL { ?town dbp:rulingParty ?rulingParty }
}
```",3,7,4,3,1,3,2,20,0,0,1,0,0.0,0
507,36,train,Give me the professional in the profession of the person born on 1966-02-18 and spouse of Anne V. Coates.,"SELECT ?result WHERE { ?v0 <http://dbpedia.org/property/occupation> ?v1 . ?v0 <http://dbpedia.org/ontology/birthDate> ""1966-02-18""^^<http://www.w3.org/2001/XMLSchema#date> . ?result <http://dbpedia.org/ontology/spouse> <http://dbpedia.org/resource/Anne_V._Coates> . ?result <http://dbpedia.org/property/occupation> ?v1 . }","```sparql
# Step 1: Find the person born on 1966-02-18
SELECT ?person WHERE {
    ?person dbo:birthday ""1966-02-18""^^xsd:date .
}

# Step 2: Identify this person's spouse who is Anne V. Coates
SELECT ?spouse WHERE {
    ?person dbo:spouse ?spouse .
    ?spouse foaf:name ""Anne V. Coates""@en .
}

# Step 3: Determine the profession of the person born on 1966-02-18
SELECT ?profession WHERE {
    ?person dbo:occupation ?profession .
}

# Step 4: Find a professional in this field (assuming we have identified the profession)
SELECT DISTINCT ?professional WHERE {
    ?x dbo:occupation ?profession .
    FILTER(?x != ?person) # Exclude the original person to find another professional
}
```",4,4,5,3,2,3,3,71,0,0,1,0,0.0,0
715,26,train,"Give me the commander in the force of the mayor, that is an office holder and a politician and a president, of 1933 Spanish general election.",SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v2 <http://dbpedia.org/ontology/commander> ?v1 . <http://dbpedia.org/resource/1933_Spanish_general_election> <http://dbpedia.org/property/leader> ?v1 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/President>. ?v2 <http://dbpedia.org/ontology/commander> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?person WHERE {
  ?person dbo:officeHolder ?office .
  ?office dbo:election ?election .
  ?election rdfs:label ""1933 Spanish general election""@en .
  
  ?person dbo:positionHeld ?position .
  ?position rdfs:label ?roleLabel .

  FILTER(CONTAINS(LCASE(?roleLabel), ""president"") || CONTAINS(LCASE(?roleLabel), ""politician""))

  OPTIONAL {
    ?person dbo:spouse ?spouse .
    ?spouse dbo:officeHolder ?municipalOffice .
    ?municipalOffice dbo:election ?mayoralElection .
    ?mayoralElection rdfs:label ?mayorRoleLabel .
    FILTER(CONTAINS(LCASE(?mayorRoleLabel), ""commander"") || CONTAINS(LCASE(?mayorRoleLabel), ""force""))
  }
}
```",3,6,4,3,1,3,3,71,0,0,28,0,0.0,0
715,4,train,"Give me the force, that is a military conflict, of Abd el-Krim.",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Abd_el-Krim> . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?conflict WHERE {
  ?person a dbo:Person ;
          foaf:name ""Abd el-Krim""@en .
  
  OPTIONAL { ?person dbo:spouse ?spouse . }
  OPTIONAL { ?person dbo:child ?child . }
  OPTIONAL { ?person dbo:parent ?parent . }

  ?event dbo:agent ?person ;
         a dbo:MilitaryConflict .

  ?conflict rdfs:label ?label .
  FILTER (lang(?label) = 'en' && regex(str(?label), ""Rif War"", ""i""))
  
  BIND(?event AS ?conflict)
}
```",1,2,2,1,1,3,3,71,0,0,2,0,0.0,0
839,36,train,"Give me the band of Kevin Russell (musician) and band of the band, that is a musical artist, of the professional in Musician.","SELECT ?result WHERE { <http://dbpedia.org/resource/Kevin_Russell_(musician)> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?v0 <http://dbpedia.org/ontology/associatedMusicalArtist> ?v1 . ?v0 <http://dbpedia.org/property/occupation> ""Musician""@en . ?result <http://dbpedia.org/ontology/bandMember> ?v1 . }","```sparql
# Query to find the band of Kevin Russell
SELECT ?band WHERE {
  dbpedia:Kevin_Russell dbo:musicArtist ?band .
}

# Assuming the result from above gives us ""The Gourds"", we query for bands associated with ""The Gourds""
SELECT ?associatedBand WHERE {
  dbpedia:The_Gourds dbo:bandMember ?member .
  OPTIONAL { ?member dbo:band ?associatedBand . }
}
```",4,5,5,3,2,3,3,71,0,0,1,0,0.0,0
47,37,train,"Give me the office of the awardee of the award, that is an award, of Mantu Ghosh and office of Ajoy Mukherjee.",SELECT ?result WHERE { ?v3 <http://dbpedia.org/property/office> ?result . <http://dbpedia.org/resource/Ajoy_Mukherjee> <http://dbpedia.org/property/office> ?result . <http://dbpedia.org/resource/Mantu_Ghosh> <http://dbpedia.org/property/awards> ?v0 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Award>. ?v3 <http://dbpedia.org/property/awards> ?v0 . },"```sparql
# Query to find the office held by Mantu Ghosh when he received an award
SELECT DISTINCT ?award ?office 
WHERE {
  ?person foaf:name ""Mantu Ghosh""@en .
  ?person dbo:awardsReceived ?award .
  ?award a dbo:Award .
  OPTIONAL { ?person dbo:holdsOffice ?office . }
}

UNION

# Query to find the office held by Ajoy Mukherjee
SELECT DISTINCT ?office 
WHERE {
  ?person foaf:name ""Ajoy Mukherjee""@en .
  ?person dbo:holdsOffice ?office .
}
```",4,5,5,3,2,3,3,71,0,0,1,0,0.0,0
465,17,train,"Give me the child, that is a royalty, of the parent of Charles Orlando, Dauphin of France.","SELECT ?result WHERE { ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. <http://dbpedia.org/resource/Charles_Orlando,_Dauphin_of_France> <http://dbpedia.org/ontology/parent> ?v1 . ?v1 <http://dbpedia.org/ontology/child> ?result . }","```sparql
SELECT ?child WHERE {
  ?charlesOrlando dbo:spouse ?parent .
  FILTER(STR(?charlesOrlando) = ""Charles Orlando, Dauphin of France"")
  
  ?parent dbo:child ?child .
  ?child a dbo:Monarch .
}
```",2,3,3,2,1,3,3,71,0,0,2,0,0.0,0
839,37,train,"Give me the band of Matthias Röhr and band of the member of the band, that is a band and a group, of Peter Schorowsky.",SELECT ?result WHERE { ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Group>. ?result <http://dbpedia.org/ontology/bandMember> <http://dbpedia.org/resource/Matthias_Röhr> . ?result <http://dbpedia.org/ontology/bandMember> ?v3 . ?v0 <http://dbpedia.org/ontology/bandMember> ?v3 . <http://dbpedia.org/resource/Peter_Schorowsky> <http://dbpedia.org/ontology/associatedMusicalArtist> ?v0 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Band>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?matthiasBand ?peterBand WHERE {
  # Find the band of Matthias Röhr
  ?matthiasRöhr a dbo:Musician ;
                foaf:name ""Matthias Röhr"" .
  
  ?matthiasRöhr dbo:bandMemberOf ?matthiasBand .

  # Find the band that is both a group and has Peter Schorowsky as a member
  ?peterSchorowsky a dbo:Musician ;
                   foaf:name ""Peter Schorowsky"" .
  
  ?peterSchorowsky dbo:bandMemberOf ?peterBand .

  # Ensure the band is classified both as a Band and a Group
  ?peterBand rdf:type dbo:MusicalGroup, dbo:Band .
}
```",4,6,5,3,2,3,3,71,0,0,1,0,0.0,0
508,13,train,"Give me the birthplace of the commander, that is a politician, in the war, that is a military conflict and a societal event and an event, of Hayao Tada.",SELECT ?result WHERE { ?v0 <http://dbpedia.org/ontology/commander> ?v1 . ?v1 <http://dbpedia.org/ontology/birthPlace> ?result . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. <http://dbpedia.org/resource/Hayao_Tada> <http://dbpedia.org/ontology/battle> ?v0 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?birthPlace WHERE {
  ?person a dbo:Person ;
          foaf:name ""Hayao Tada""@en ;
          dbo:birthPlace ?birthPlace .
  
  OPTIONAL { 
    ?person dbo:occupation [
      rdf:type dbo:Occupation ;
      dbo:field dbr:Military ; # As an admiral
      dbo:field dbr:Politics ; # As a politician
    ] .
  }
}
```",3,7,4,3,1,3,2,20,0,0,49,0,0.0,0
365,14,train,"Give me the spouse of the native, that is a politician, of the reference to Полтавская губерния.","SELECT ?result WHERE { ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v0 <http://dbpedia.org/ontology/birthPlace> ?v2 . ?v2 <http://xmlns.com/foaf/0.1/name> ""Полтавская губерния""@en . ?v0 <http://dbpedia.org/ontology/spouse> ?result . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?politician ?spouse WHERE {
  # Find a politician native to Полтавская губерния
  ?politician dbo:nationality dbr:Ukraine ;
              dbo:birthPlace dbr:Poltava_Governorate ;
              rdf:type dbo:Politician .

  # Get the spouse of this politician
  OPTIONAL { ?politician dbo:spouse ?spouse . }
}
```",3,4,4,3,1,3,2,20,0,1,3,0.0,0.0,0
917,25,train,Give me the child of Kekūanāoʻa and child of the father of Kamehameha IV.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/parent> <http://dbpedia.org/resource/Kekūanāoʻa> . ?result <http://dbpedia.org/property/father> ?v0 . <http://dbpedia.org/resource/Kamehameha_IV> <http://dbpedia.org/property/father> ?v0 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?child WHERE {
  # Kekūanāoʻa's child (Lot Kapuāiwa)
  dbr:Kekūanāoʻa dbo:spouse ?parent1 .
  ?parent1 dbo:child ?lotkapuaiwa .
  
  # Father of Kamehameha IV (Kamehameha I)
  dbr:Alexander_Liholiho dbo:father dbr:Kamehameha_I .

  # Child of Lot Kapuāiwa and descendant of Kamehameha I
  ?lotkapuaiwa dbo:child ?child .
  
  OPTIONAL {
    ?child dbo:spouse dbr:Alexander_Liholiho .
  }
}
```",3,3,4,2,2,3,3,71,0,0,3,0,0.0,0
98,16,train,"Give me the region of Philippine Standard Time and entity in the region, that is a country, of Philippine Standard Time.",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/country> ?v0 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. ?result <http://dbpedia.org/ontology/timeZone> <http://dbpedia.org/resource/Philippine_Standard_Time> . ?v0 <http://dbpedia.org/property/timeZone> <http://dbpedia.org/resource/Philippine_Standard_Time> . },"```sparql
SELECT DISTINCT ?region ?country WHERE {
  # Find the region of Philippine Standard Time
  ?timeZone dbp:timeZone ""Philippine Standard Time"" .
  ?location dbo:timeZone ?timeZone ;
            rdfs:label ?region .

  # Find a country in that region
  OPTIONAL { 
    ?country dbo:country ?location ;
             rdf:type dbo:Country .
  }
  
  FILTER (lang(?region) = 'en')
}
```",3,4,4,2,2,2,3,28,0,0,1743,0,0.0,0
216,29,train,"Give me the player in Igor Bišćan and player in the coach, that is a soccer player and a sports manager and a soccer manager, of Bosnia and Herzegovina national under-18 football team and team of Ognjen Vukojević.",SELECT ?result WHERE { ?v3 <http://dbpedia.org/ontology/team> ?result . ?result <http://dbpedia.org/ontology/coach> <http://dbpedia.org/resource/Ognjen_Vukojević> . <http://dbpedia.org/resource/Bosnia_and_Herzegovina_national_under-18_football_team> <http://dbpedia.org/ontology/coach> ?v3 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerPlayer>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsManager>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerManager>. <http://dbpedia.org/resource/Igor_Bišćan> <http://dbpedia.org/ontology/team> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?person WHERE {
  # Igor Bišćan's teammates
  ?teammate dbo:teamMemberOf dbr:Igor_Bišćan .
  
  # Coaches of Bosnia and Herzegovina national under-18 football team
  ?coach dbo:position ""manager"" ;
         dbo:managedTeam dbr:Bosnia_and_Herzegovina_national_under-18_football_team .

  # Ognjen Vukojević's teams
  ?teamMember dbo:teamMemberOf dbr:Ognjen_Vukojević .
  
  # The person must be a soccer player and have managerial roles
  ?person rdf:type dbo:SoccerPlayer ;
          dbo:managerialCareer ?coach ;
          dbo:playerForTeam ?teammate ;
          dbo:playerForTeam ?teamMember .

  FILTER (?person = ?teammate && ?person = ?coach && ?person = ?teamMember)
}
```",4,7,5,2,3,3,3,71,0,0,1,0,0.0,0
839,33,train,"Give me the band of Kevin Russell (musician) and band of the member of the band, that is a band and a group, of Peter Schorowsky.",SELECT ?result WHERE { <http://dbpedia.org/resource/Peter_Schorowsky> <http://dbpedia.org/ontology/associatedMusicalArtist> ?v0 . ?v0 <http://dbpedia.org/ontology/bandMember> ?v3 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Group>. ?result <http://dbpedia.org/ontology/bandMember> ?v3 . <http://dbpedia.org/resource/Kevin_Russell_(musician)> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Band>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?kevinBand ?peterBand WHERE {
  # Find the band associated with Kevin Russell
  ?kevinRussell a dbo:Musician ;
                foaf:name ""Kevin Russell"" .
  ?kevinRussell dbo:bandMemberOf ?kevinBand .

  # Find the band associated with Peter Schorowsky, ensuring it is both a band and a group
  ?peterSchorowsky a dbo:Musician ;
                   foaf:name ""Peter Schorowsky"" .
  ?peterSchorowsky dbo:bandMemberOf ?peterBand .
  ?peterBand a dbo:MusicalGroup, dbo:Band .
}
```",4,6,5,3,2,3,3,71,0,0,1,0,0.0,0
987,10,train,Give me the entity in Montenegro and birth place of Dado Polumenta.,SELECT ?result WHERE { <http://dbpedia.org/resource/Dado_Polumenta> <http://dbpedia.org/ontology/birthPlace> ?result . ?result <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Montenegro> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX geo: <http://www.w3.org/2003/01/geo/wgs84_pos#>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?birthPlace WHERE {
  ?person a dbo:Person ;
          foaf:name ""Dado Polumenta""@en .
  ?person dbo:birthPlace ?birthPlace .
  ?birthPlace geo:lat ?lat ;
              geo:long ?long .
  OPTIONAL { 
    ?birthPlace dbp:country ""Montenegro""@en .
  }
}
```",2,2,3,1,2,3,3,71,1,2,0,0.3333333333333333,1.0,0.5
791,34,train,"Give me the father of Emperor Go-Toba and spouse of the spouse, that is a royalty, of the reference to Emperor Takakura.","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/spouse> ?v1 . ?v1 <http://dbpedia.org/ontology/spouse> ?v2 . <http://dbpedia.org/resource/Emperor_Go-Toba> <http://dbpedia.org/property/father> ?result . ?v2 <http://xmlns.com/foaf/0.1/name> ""Emperor Takakura""@en . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. }","```sparql
SELECT DISTINCT ?goTobaFather ?takakuraSpouse ?royalSpouse WHERE {
  # Find Emperor Go-Toba's father
  ?goToba dbo:father ?goTobaFather .
  ?goToba rdfs:label ""Emperor Go-Toba""@en .

  # Find Emperor Takakura's spouse
  ?takakura dbo:spouse ?takakuraSpouse .
  ?takakura rdfs:label ""Emperor Takakura""@en .

  # Find the spouse of Emperor Takakura's spouse who is royalty
  ?takakuraSpouse dbo:spouse ?royalSpouse .
  FILTER EXISTS { ?royalSpouse rdf:type dbo:Monarch } 
}
```",4,5,5,3,2,3,3,71,0,0,1,0,0.0,0
978,5,train,Give me the person born as Nicholas Bracegirdle.,"SELECT ?result WHERE { ?result <http://dbpedia.org/property/birthName> ""Nicholas Bracegirdle""@en . }","```sparql
PREFIX foaf: <http://xmlns.com/foaf/0.1/>
PREFIX dbpedia-owl: <http://dbpedia.org/ontology/>

SELECT ?person ?birthName WHERE {
  ?person foaf:givenName ""Nicholas"" .
  ?person foaf:familyName ""Bracegirdle"" .
  OPTIONAL { ?person dbpedia-owl:birthName ?birthName . }
  FILTER(?birthName = ""Nicholas Bracegirdle"")
}
```",1,1,2,1,1,3,2,20,0,0,1,0,0.0,0
926,5,train,Give me the spouse of Şermi Kadın.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/spouse> <http://dbpedia.org/resource/Şermi_Kadın> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?spouse WHERE {
  dbr:Şermi_Kadın dbo:spouse ?spouse .
}
```",1,1,2,1,1,3,3,71,0,0,1,0,0.0,0
158,0,train,Give me the entity in France.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/France> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?entity ?entityLabel WHERE {
  ?entity dbo:country dbr:France .
  SERVICE wikibase:label { bd:serviceParam wikibase:language ""[AUTO_LANGUAGE],en"". }
}
LIMIT 10
```",1,1,2,1,1,3,2,20,0,0,44301,0,0.0,0
715,34,train,"Give me the commander in the force, that is a military conflict, of the native of Morocco and leader of Ministry of the Air (Spain).",SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/commander> ?v2 . <http://dbpedia.org/resource/Ministry_of_the_Air_(Spain)> <http://dbpedia.org/ontology/leader> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v2 <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Morocco> . ?v1 <http://dbpedia.org/ontology/commander> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?person ?conflict ?ministryRole WHERE {
  ?person a dbo:Person ;
          rdfs:label ""Francisco Franco""@en .
  
  OPTIONAL { 
    ?person dbo:nationality dbr:Morocco .
  }
  
  OPTIONAL {
    ?militaryConflict dbo:commander ?person ;
                      rdf:type dbo:MilitaryConflict .
  }

  OPTIONAL {
    ?ministryRole dbo:leader ?person ;
                  dbo:office dbr:Ministry_of_the_Air_(Spain) .
  }
}
```",4,5,5,3,2,3,3,71,0,0,1,0,0.0,0
888,4,train,Give me the commander in 2022 Ukrainian eastern counteroffensive.,SELECT ?result WHERE { <http://dbpedia.org/resource/2022_Ukrainian_eastern_counteroffensive> <http://dbpedia.org/ontology/commander> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?commander WHERE {
  ?event dbo:wikiPageRedirects dbr:2022_Ukrainian_eastern_counteroffensive .
  ?event dbo:commander ?commander .
}
```",1,1,2,1,1,3,2,20,0,0,4,0,0.0,0
527,7,train,"Give me the actor of the movie, that is a work and English and a television show, with Bernard Bresslaw.",SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?v1 <http://dbpedia.org/property/starring> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/TelevisionShow>. ?v1 <http://dbpedia.org/property/starring> <http://dbpedia.org/resource/Bernard_Bresslaw> . ?v1 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/United_Kingdom>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dcterms: <http://purl.org/dc/terms/>

SELECT ?movie ?actor WHERE {
  ?movie a dbo:TelevisionShow ;
         dbo:starring dbr:Bernard_Bresslaw ;
         dcterms:language ""English""@en .
  
  OPTIONAL { ?movie dbo:genre ?genre . FILTER EXISTS { ?genre rdfs:subClassOf* dbo:FictionalWork } }
  
  ?actor dbo:starring ?movie .
}
```",2,5,3,2,1,3,2,20,0,0,7,0,0.0,0
18,17,train,"Give me the parent of the professional in Actress and alumnus of Marymount College, Tarrytown.","SELECT ?result WHERE { ?v2 <http://dbpedia.org/property/occupation> ""Actress""@en . ?result <http://dbpedia.org/ontology/child> ?v2 . ?result <http://dbpedia.org/ontology/almaMater> <http://dbpedia.org/resource/Marymount_College,_Tarrytown> . }","```sparql
# Step 1: Identify the actress
SELECT ?person WHERE {
  ?person dbo:almaMater dbr:Marymount_College_(Tarrytown,_New_York) .
  ?person dbo:occupation dbr:Actress .
}

# Assuming we have identified the person (let's say her DBpedia resource is :Person), proceed to step 2

# Step 2: Retrieve parent information
SELECT ?parent WHERE {
  :Person dbo:parent ?parent .
}
```",3,3,4,2,2,2,3,28,0,0,1,0,0.0,0
773,35,train,"Give me the parent of the child, that is a royalty, of Louis the German and spouse of the father of Charles the Fat.",SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. <http://dbpedia.org/resource/Charles_the_Fat> <http://dbpedia.org/property/father> ?v2 . ?v1 <http://dbpedia.org/ontology/parent> ?result . ?v2 <http://dbpedia.org/ontology/spouse> ?result . ?v1 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Louis_the_German> . },"```sparql
SELECT ?parent WHERE {
  # Identify Louis the German and his children
  wd:Q12345 wdt:P40 ?child . 

  # Find which child is royalty (Carloman of Bavaria)
  ?child wdt:P39 wd:Q12346 .

  # Find Carloman's spouse (Richgard)
  ?child wdt:P26 ?spouse .

  # Identify Charles the Fat and his father
  wd:Q67890 wdt:P22 ?father .

  # Ensure the father is Louis the Younger, son of Louis the German
  ?father wdt:P40 wd:Q12345 .
  
  # Find the parent of Richgard (spouse of Carloman)
  ?spouse wdt:P25 ?parent .
}
```

Note: In this query:
- `wd:Q12345` represents Louis the German.
- `wd:Q67890` represents Charles the Fat.
- `wd:Q12346` represents Carloman of Bavaria.",4,5,5,2,2,3,3,71,0,0,1,0,0.0,0
129,2,train,Give me the associated musical artist of Saba (rapper).,SELECT ?result WHERE { <http://dbpedia.org/resource/Saba_(rapper)> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?artist WHERE {
  VALUES ?saba { dbr:Saba_(rapper) }
  ?saba dbo:associatedMusicalArtist ?artist .
}
```",1,1,2,1,1,2,3,28,0,0,8,0,0.0,0
417,12,train,Give me the child of Alexandrine of Mecklenburg-Schwerin and child of Christian X of Denmark.,SELECT ?result WHERE { ?result <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Christian_X_of_Denmark> . ?result <http://dbpedia.org/ontology/parent> <http://dbpedia.org/resource/Alexandrine_of_Mecklenburg-Schwerin> . },"```sparql
SELECT ?child WHERE {
  ?parent rdf:type dbo:Person .
  ?parent foaf:name ""Alexandrine of Mecklenburg-Schwerin""@en ;
          dbo:spouse ?spouse .
  ?spouse foaf:name ""Christian X of Denmark""@en .
  ?parent dbo:child ?child .
}
```",2,2,3,1,2,3,3,71,0,0,2,0,0.0,0
36,1,train,Give me the person born in 1971.,"SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/birthYear> ""1971""^^<http://www.w3.org/2001/XMLSchema#gYear> . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT ?person ?name WHERE {
  ?person a dbo:Person .
  OPTIONAL { ?person foaf:name ?name . }
  ?person dbo:birthYear ?birthYear .
  FILTER (?birthYear = ""1971""^^xsd:gYear)
}
ORDER BY ?name
```",1,1,2,1,1,2,3,28,2611,2483,0,0.5125638005496663,1.0,0.6777417261518496
281,16,train,Give me the commander in New Guinea campaign and awardee of the award of Alfred Warden.,SELECT ?result WHERE { ?result <http://dbpedia.org/property/awards> ?v2 . <http://dbpedia.org/resource/New_Guinea_campaign> <http://dbpedia.org/ontology/commander> ?result . <http://dbpedia.org/resource/Alfred_Warden> <http://dbpedia.org/property/awards> ?v2 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?commander ?awardee WHERE {
  # Find the commander involved in the New Guinea campaign
  ?campaign dbo:wikiPageRedirects dbr:New_Guinea_campaign .
  ?campaign dbo:commander ?commander .

  # Find the awardee of the Alfred Warden Medal
  ?person dbo:awardReceived dbr:Alfred_Ward_Medal .
  BIND(?person AS ?awardee)
  
  FILTER (?commander != ?awardee) # Ensure they are distinct individuals if needed
}
```",3,3,4,2,2,2,3,28,0,0,1,0,0.0,0
965,34,train,"Give me the spouse of the spouse of the parent of Louise Mountbatten and parent of George Mountbatten, 2nd Marquess of Milford Haven.","SELECT ?result WHERE { <http://dbpedia.org/resource/George_Mountbatten,_2nd_Marquess_of_Milford_Haven> <http://dbpedia.org/ontology/parent> ?result . ?v3 <http://dbpedia.org/ontology/spouse> ?v1 . ?result <http://dbpedia.org/ontology/spouse> ?v1 . <http://dbpedia.org/resource/Louise_Mountbatten> <http://dbpedia.org/ontology/parent> ?v3 . }","```sparql
SELECT ?spouseOfSpouse WHERE {
  # Step 1: Find Louise Mountbatten's parent
  ?louise dbo:parent ?parentLouise .
  ?louise dbp:name ""Louise Mountbatten""@en .

  # Step 2: Find the spouse of Louise Mountbatten's parent
  ?parentLouise dbo:spouse ?spouseParentLouise .

  # Step 3: Find George Mountbatten, 2nd Marquess of Milford Haven's parent
  ?george dbo:parent ?parentGeorge .
  ?george dbp:name ""George Mountbatten, 2nd Marquess of Milford Haven""@en .

  # Step 4: Ensure the spouse from step 2 is also a parent to George Mountbatten
  FILTER(?spouseParentLouise = ?parentGeorge)

  # Step 5: Find the spouse of the spouse from step 2
  ?spouseParentLouise dbo:spouse ?spouseOfSpouse .
}
```",4,4,5,3,2,3,3,71,0,0,2,0,0.0,0
216,6,train,"Give me the coach, that is a soccer player and a sports manager and a soccer manager, of Bosnia and Herzegovina national under-18 football team.",SELECT ?result WHERE { ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerManager>. ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsManager>. <http://dbpedia.org/resource/Bosnia_and_Herzegovina_national_under-18_football_team> <http://dbpedia.org/ontology/coach> ?result . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerPlayer>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?coach WHERE {
  ?team dbo:coach ?coach .
  ?coach dbo:occupation ?occupation1 .
  ?coach dbo:occupation ?occupation2 .
  ?coach dbo:occupation ?occupation3 .

  FILTER (
    str(?team) = ""Bosnia_and_Herzegovina_national_under-18_football_team"" &&
    (str(?occupation1) = ""Soccer player"" || str(?occupation1) = ""Sports manager"" || str(?occupation1) = ""Soccer manager"") &&
    (str(?occupation2) = ""Soccer player"" || str(?occupation2) = ""Sports manager"" || str(?occupation2) = ""Soccer manager"") &&
    (str(?occupation3) = ""Soccer player"" || str(?occupation3) = ""Sports manager"" || str(?occupation3) = ""Soccer manager"")
  )
}
```",1,4,2,1,1,3,3,71,0,0,1,0,0.0,0
417,39,train,"Give me the child of the child, that is a royalty, of the parent, that is a royalty, of Alexandrine of Mecklenburg-Schwerin and child of Christian X of Denmark.",SELECT ?result WHERE { <http://dbpedia.org/resource/Alexandrine_of_Mecklenburg-Schwerin> <http://dbpedia.org/ontology/parent> ?v0 . ?v1 <http://dbpedia.org/property/father> ?v0 . ?result <http://dbpedia.org/ontology/parent> ?v1 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?result <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Christian_X_of_Denmark> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?grandchild WHERE {
  # Find the children of Alexandrine and Christian X
  ?parent a dbo:RoyalFamily ;
          dbo:spouse dbr:Alexandrine_of_Mecklenburg-Schwerin ;
          dbo:spouse dbr:Christian_X_of_Denmark .

  ?parent dbo:child ?child .
  
  # Find the children of those children (grandchildren)
  ?child dbo:child ?grandchild .

  # Ensure the grandchild is a royalty
  ?grandchild a dbo:RoyalFamily .
}
```",4,6,5,3,2,3,3,71,0,0,2,0,0.0,0
495,11,train,Give me the child of the father of William I of Württemberg and father of Princess Charlotte of Württemberg.,SELECT ?result WHERE { ?result <http://dbpedia.org/property/father> ?v2 . <http://dbpedia.org/resource/Princess_Charlotte_of_Württemberg> <http://dbpedia.org/property/father> ?result . <http://dbpedia.org/resource/William_I_of_Württemberg> <http://dbpedia.org/property/father> ?v2 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?child WHERE {
  # Identify the father of William I and Princess Charlotte
  ?father a dbo:Monarch ;
          dbo:spouse ?mother ;
          dbo:child dbr:William_I_of_W%C3%BCrttemberg, dbr:Princess_Charlotte_of_W%C3%BCrttemberg .

  # Get the children of this father
  ?father dbo:child ?child .
}
```",3,3,4,2,2,3,2,20,0,0,1,0,0.0,0
41,6,train,Give me the party of Declan Costello and party of Mark Durkan.,SELECT ?result WHERE { <http://dbpedia.org/resource/Mark_Durkan> <http://dbpedia.org/ontology/party> ?result . <http://dbpedia.org/resource/Declan_Costello> <http://dbpedia.org/ontology/party> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?person ?personLabel ?party ?partyLabel
WHERE {
  VALUES ?person { 
    dbr:Declan_Costello (replace with actual DBpedia resource for Declan Costello)
    dbr:Mark_Durkan (replace with actual DBpedia resource for Mark Durkan)
  }
  
  ?person rdfs:label ?personLabel .
  OPTIONAL {
    ?person dbo:party ?party .
    ?party rdfs:label ?partyLabel .
  }

  FILTER(LANG(?personLabel) = 'en')
  FILTER(LANG(?partyLabel) = 'en')
}
ORDER BY ?person
```

Note: The placeholders `dbr:Declan_Costello` and `dbr:Mark_Durkan` should be replaced with the actual DBpedia resources for Declan Costello and Mark Durkan, respectively. These can typically be found by searching DBpedia or using a SPARQL endpoint to query for their labels.",2,2,3,1,2,2,3,28,0,0,1,0,0.0,0
158,5,train,"Who is the successor, that is a prime minister and an office holder and a politician, of André Tardieu?",SELECT ?result WHERE { ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. <http://dbpedia.org/resource/André_Tardieu> <http://dbpedia.org/ontology/successor> ?result . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/PrimeMinister>. },"```sparql
SELECT ?successor WHERE {
  ?tardieu dbo:officeHolder dbr:Prime_Minister_of_France ;
           dbo:termStart ?startTardieu ;
           dbo:termEnd ?endTardieu .
  
  ?successor dbo:officeHolder dbr:Prime_Minister_of_France ;
             dbo:predecessor ?tardieu ;
             dbo:termStart ?startSuccessor .

  FILTER (?startSuccessor > ?endTardieu)
  
  ?successor a dbo:Politician .
}
```",1,4,2,1,1,3,2,20,0,0,1,0,0.0,0
978,0,train,Give me the band member of Enya.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/associatedMusicalArtist> <http://dbpedia.org/resource/Enya> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?person ?role WHERE {
  ?enya a dbo:MusicalArtist ;
        foaf:name ""Enya""@en .
  
  OPTIONAL { 
    ?collaboration dbo:artist ?enya ;
                   dbo:performer ?person .
    ?person dbp:occupation ?role .
  }
}
```",1,1,2,1,1,3,2,20,0,0,7,0,0.0,0
465,19,train,Give me the successor of the child of Alfonso I d'Este and spouse of Archduchess Barbara of Austria.,SELECT ?result WHERE { ?v0 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Alfonso_I_d'Este> . ?result <http://dbpedia.org/ontology/spouse> <http://dbpedia.org/resource/Archduchess_Barbara_of_Austria> . ?v0 <http://dbpedia.org/ontology/successor> ?result . },"```sparql
SELECT ?successor WHERE {
  wd:Q1234567 wdt:P26 wd:Q7890123 . # Alfonso I d'Este (Q1234567) has child Ercole II d'Este (Q7890123)
  wd:Q7890123 wdt:P26 wd:Q3456789 . # Ercole II d'Este (Q7890123) has child Alfonso II d'Este (Q3456789)
  wd:Q3456789 wdt:P26 ?successor . # Alfonso II d'Este (Q3456789) has successor
}
```

Note: The actual DBpedia IDs for these individuals need to be verified and replaced in the query.",3,3,4,2,2,3,3,71,0,0,1,0,0.0,0
573,5,train,"Who is the professional, that is American, in Politician?","SELECT ?result WHERE { ?result <http://dbpedia.org/property/occupation> ""Politician""@en . ?result <http://dbpedia.org/ontology/nationality> <http://dbpedia.org/resource/United_States>. }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?person WHERE {
  ?person a dbo:Politician .
  ?person dbo:nationality dbr:United_States .
}
LIMIT 10
```",1,2,2,1,1,3,3,71,0,10,83,0.0,0.0,0
865,28,train,"Give me the native of the residence, that is a country, of Ram Jaipal Singh Yadav and father of AK Abdul Momen and father of Shahla Khatun.",SELECT ?result WHERE { <http://dbpedia.org/resource/Shahla_Khatun> <http://dbpedia.org/property/father> ?result . ?result <http://dbpedia.org/ontology/birthPlace> ?v0 . <http://dbpedia.org/resource/Ram_Jaipal_Singh_Yadav> <http://dbpedia.org/property/residence> ?v0 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. <http://dbpedia.org/resource/AK_Abdul_Momen> <http://dbpedia.org/property/father> ?result . },"```sparql
SELECT ?nativeLanguage WHERE {
  wd:Q123456 wdt:P19 wd:Q84 . # Ram Jaipal Singh Yadav resided in or was associated with Bangladesh (Q84)
  wd:Q84 wdt:P37 ?nativeLanguage . # Official language of Bangladesh
}
```

Note: Replace `wd:Q123456` with the actual DBpedia identifier for Ram Jaipal Singh Yadav if available.",4,5,5,2,3,3,3,71,0,0,1,0,0.0,0
865,5,train,Who is the spouse of Syeda Shahar Banu?,SELECT ?result WHERE { <http://dbpedia.org/resource/Syeda_Shahar_Banu> <http://dbpedia.org/ontology/spouse> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>

SELECT ?spouse WHERE {
  ?person rdfs:label ""Syeda Shahar Banu""@en .
  ?person dbo:spouse ?spouse .
}
```",1,1,2,1,1,3,3,71,1,0,0,1.0,1.0,1.0
573,39,train,"Give me the person decedent at Quincy, Massachusetts and parent of the author, that is a politician and an office holder, of the work of John Quincy Adams.","SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v0 <http://dbpedia.org/property/author> <http://dbpedia.org/resource/John_Quincy_Adams> . ?result <http://dbpedia.org/ontology/deathPlace> <http://dbpedia.org/resource/Quincy,_Massachusetts> . ?v1 <http://dbpedia.org/ontology/parent> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v0 <http://dbpedia.org/property/author> ?v1 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?person WHERE {
  ?person a dbo:Person .
  ?person dbo:deathPlace dbr:Quincy,_Massachusetts .
  ?person dbo:child dbr:John_Quincy_Adams .
  ?person dbo:occupation dbr:Politician ;
          dbo:officeHolder true .
}
```",4,6,5,3,2,3,3,71,0,0,2,0,0.0,0
892,3,train,Give me the true self of Enrico Crolla.,"SELECT ?result WHERE { ?result <http://xmlns.com/foaf/0.1/givenName> ""Enrico Crolla""@en . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT ?givenName ?familyName ?birthName WHERE {
  ?person a dbo:Person ;
          foaf:name ""Enrico Crolla"" .
  
  OPTIONAL { ?person foaf:givenName ?givenName . }
  OPTIONAL { ?person foaf:familyName ?familyName . }
  OPTIONAL { ?person dbo:birthName ?birthName . }
}
```",1,1,2,1,1,3,3,71,0,0,1,0,0.0,0
102,13,train,"Give me the manager of the player in the member, that is a soccer player, of England women's national football team.",SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/manager> ?result . ?v0 <http://dbpedia.org/ontology/team> ?v1 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerPlayer>. ?v0 <http://dbpedia.org/ontology/team> <http://dbpedia.org/resource/England_women's_national_football_team> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?player ?manager WHERE {
  ?player dbo:member dbr:England_women's_national_football_team .
  ?player dbo:occupation dbr:Soccer_player .
  OPTIONAL { ?player dbo:managedBy ?manager . }
}
```",3,4,4,3,1,3,2,20,0,0,43,0,0.0,0
527,11,train,"Give me the actor of the movie, that is a work and English and a television show, with Bernard Bresslaw and author of The Boy Who Kicked Pigs.",SELECT ?result WHERE { <http://dbpedia.org/resource/The_Boy_Who_Kicked_Pigs> <http://dbpedia.org/property/author> ?result . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?v2 <http://dbpedia.org/property/starring> <http://dbpedia.org/resource/Bernard_Bresslaw> . ?v2 <http://dbpedia.org/property/starring> ?result . ?v2 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/United_Kingdom>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/TelevisionShow>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?actor WHERE {
  ?show dbo:genre dbr:Sitcom .
  ?show dbo:country dbr:United_Kingdom .
  ?show dbo:title ""The Fall and Rise of Reginald Perrin""@en .
  
  ?castMember dbo:characterName ?role .
  ?castMember dbo:actor dbr:Bernard_Bresslaw .
  ?castMember dbo:actor ?actor .

  FILTER(?actor != dbr:Bernard_Bresslaw)
}
```",3,6,4,2,2,3,2,20,0,0,1,0,0.0,0
987,27,train,"Give me the entity in the region, that is a country, of the time zone, that is a sports event, in Canicosa de la Sierra.",SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsEvent>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. ?v0 <http://dbpedia.org/property/timeZone> ?v1 . ?result <http://dbpedia.org/ontology/country> ?v0 . <http://dbpedia.org/resource/Canicosa_de_la_Sierra> <http://dbpedia.org/ontology/timeZone> ?v1 . },"```sparql
SELECT DISTINCT ?country WHERE {
  # Step 1: Identify Canicosa de la Sierra and its time zone
  dbpedia:Canicosa_de_la_Sierra dbo:locationInTimezone ?timezone .

  # Step 2: Find sports events associated with the time zone
  ?event dbo:timeZone ?timezone .
  FILTER EXISTS { ?event a dbo:SportsEvent }

  # Step 3: Identify countries in the region of the sports event
  ?region dbo:location ?event .
  ?country dbo:locatedInRegion ?region .

  # Ensure that the country is indeed a country entity
  ?country a dbo:Country .
}
```",3,5,4,3,1,3,3,71,0,0,173261,0,0.0,0
18,2,train,"Give me the alumnus of Marymount College, Tarrytown.","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/almaMater> <http://dbpedia.org/resource/Marymount_College,_Tarrytown> . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?person ?name WHERE {
  ?person dbo:almaMater dbp:Marymount_College_Tarrytown .
  OPTIONAL { ?person foaf:name ?name . }
}
```",1,1,2,1,1,2,3,28,0,0,5,0,0.0,0
36,7,train,Give me the actor of Being Mrs Elliot and person born as Ayo Makun.,"SELECT ?result WHERE { <http://dbpedia.org/resource/Being_Mrs_Elliot> <http://dbpedia.org/ontology/starring> ?result . ?result <http://dbpedia.org/property/birthName> ""Ayo Makun""@en . }","```sparql
SELECT ?actor ?person WHERE {
  # Find actor for ""Being Mrs Elliot""
  ?movie dbo:title ""Being Mrs Elliot""@en .
  ?movie dbo:starring ?actor .

  # Find person born as Ayo Makun
  ?person foaf:name ""Ayo Makun""@en ;
          a dbo:Person .
}
```",2,2,3,1,2,2,3,28,0,0,1,0,0.0,0
715,23,train,"Give me the commander in the force, that is a military conflict, of the native of Morocco.",SELECT ?result WHERE { ?v0 <http://dbpedia.org/ontology/commander> ?v2 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v2 <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Morocco> . ?v0 <http://dbpedia.org/ontology/commander> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?conflict ?commander WHERE {
  ?conflict a dbo:MilitaryConflict ;
           dbo:location dbr:Morocco .
  
  OPTIONAL { 
    ?conflict dbo:militaryCommander ?commander .
  }
}
LIMIT 1
```",3,4,4,3,1,3,3,71,0,0,476,0,0.0,0
507,15,train,Who is the person born as the birth name of Anne V. Coates?,SELECT ?result WHERE { <http://dbpedia.org/resource/Anne_V._Coates> <http://dbpedia.org/property/birthName> ?v1 . ?result <http://dbpedia.org/property/birthName> ?v1 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT ?person ?fullName WHERE {
  ?person dbo:birthName ""Anne V. Coates"" .
  OPTIONAL { ?person foaf:name ?fullName . }
}
```",2,2,3,2,1,3,3,71,0,0,1,0,0.0,0
216,18,train,Give me the party of Campbell Newman and administration of the designer of Woolfe: The Red Hood Diaries.,SELECT ?result WHERE { <http://dbpedia.org/resource/Campbell_Newman> <http://dbpedia.org/ontology/party> ?result . <http://dbpedia.org/resource/Woolfe:_The_Red_Hood_Diaries> <http://dbpedia.org/property/designer> ?v2 . ?result <http://dbpedia.org/property/leader> ?v2 . },"```sparql
# Query to get Campbell Newman's party
SELECT ?party WHERE {
  ?person dbo:birthName ""Campbell Newman""@en .
  ?person dbo:officeLabel ""Premier of Queensland""@en ;
          dbo:positionHeld ?premiership .
  ?premiership dbo:politicalParty ?party .
}

# Query to find the designer of Woolfe: The Red Hood Diaries
SELECT ?designer WHERE {
  ?game dbp:title ""Woolfe: The Red Hood Diaries""@en ;
        dbo:developer ?studio .
  ?studio dbo:employee ?designer .
  ?designer rdfs:label ?name .
  FILTER(CONTAINS(LCASE(?name), ""woolfe""))
}

# Assuming we find a designer, query for their political affiliation (if any)
SELECT ?administration WHERE {
  ?person rdfs:label ?name .
  FILTER(CONTAINS(LCASE(?name), ""designer_name_from_previous_query"")) # Replace with actual name
  OPTIONAL { ?person dbo:politicalAffiliation ?party . }
  OPTIONAL { ?party dbo:member ?administration . }
}
```",3,3,4,2,2,2,3,28,0,0,1,0,0.0,0
443,18,train,Give me the birthplace of Ulf Lundell and birthplace of the work of yes.,"SELECT ?result WHERE { <http://dbpedia.org/resource/Ulf_Lundell> <http://dbpedia.org/ontology/birthPlace> ?result . ?v0 <http://dbpedia.org/property/author> ""yes""@en . ?v0 <http://dbpedia.org/ontology/birthPlace> ?result . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?ulundellBirthPlaceLabel ?yesFormationPlaceLabel WHERE {
  # Query for Ulf Lundell's birthplace
  dbr:Ulf_Lundell dbo:birthPlace ?ulundellBirthPlace .
  SERVICE wikibase:label { bd:serviceParam wikibase:language ""[AUTO_LANGUAGE],en"". }
  
  # Query for the formation place of Yes, which is often considered their ""birthplace""
  dbr:Yes dbo:foundingLocation ?yesFormationPlace .
  SERVICE wikibase:label { bd:serviceParam wikibase:language ""[AUTO_LANGUAGE],en"". }
}
```",3,3,4,2,2,2,3,28,0,0,2,0,0.0,0
965,23,train,Give me the spouse of the spouse of the parent of Louise Mountbatten.,SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/spouse> ?v2 . ?result <http://dbpedia.org/ontology/spouse> ?v2 . <http://dbpedia.org/resource/Louise_Mountbatten> <http://dbpedia.org/ontology/parent> ?v1 . },"```sparql
SELECT ?finalSpouse WHERE {
  ?louise dbo:parent ?parent .
  FILTER (str(?louise) = ""Louise Mountbatten"") .

  ?parent dbo:spouse ?spouse1 .
  
  ?spouse1 dbo:spouse ?finalSpouse .
}
```",3,3,4,3,1,3,3,71,0,0,2,0,0.0,0
826,20,train,"Give me the spouse of Anna Magdalena Appel and successor of the child, that is a royalty, of Louis I, Grand Duke of Hesse.","SELECT ?result WHERE { ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. <http://dbpedia.org/resource/Anna_Magdalena_Appel> <http://dbpedia.org/ontology/spouse> ?result . ?v2 <http://dbpedia.org/ontology/successor> ?result . <http://dbpedia.org/resource/Louis_I,_Grand_Duke_of_Hesse> <http://dbpedia.org/ontology/child> ?v2 . }","```sparql
# Query to find Johann Sebastian Bach as spouse of Anna Magdalena Bach
SELECT ?johannSebastianBach WHERE {
  ?annaMagdalenaBach dbo:spouse ?johannSebastianBach .
  ?annaMagdalenaBach foaf:name ""Anna Magdalena Bach""@en .
}

# Query to find Wilhelm II as successor of Victoria, Princess Royal
SELECT ?wilhelmII WHERE {
  ?victoriaPrincessRoyal dbo:child ?wilhelmII .
  ?victoriaPrincessRoyal foaf:name ""Victoria, Princess Royal""@en .
  ?wilhelmII dbo:title ""German Emperor""@en .
}
```",3,4,4,2,2,3,3,71,0,0,1,0,0.0,0
892,5,train,Give me the member of E-girls.,SELECT ?result WHERE { <http://dbpedia.org/resource/E-girls> <http://dbpedia.org/ontology/bandMember> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?member WHERE {
  ?group a dbo:MusicalGroup ;
         rdfs:label ""E-girls""@en .
  ?group dbo:member ?member .
}
```",1,1,2,1,1,3,3,71,0,0,8,0,0.0,0
47,2,train,Give me the office of Ajoy Mukherjee.,SELECT ?result WHERE { <http://dbpedia.org/resource/Ajoy_Mukherjee> <http://dbpedia.org/property/office> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?office WHERE {
  ?person a dbo:Person ;
          foaf:name ""Ajoy Mukherjee""@en .
  OPTIONAL { ?person dbo:office ?office . }
}
```",1,1,2,1,1,3,3,71,0,0,2,0,0.0,0
433,16,train,"Give me the associated musical artist, that is an artist and a musical artist, of the associated musical artist, that is a musical artist and an artist, of Ornette Coleman.",SELECT ?result WHERE { ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?v1 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. <http://dbpedia.org/resource/Ornette_Coleman> <http://dbpedia.org/ontology/associatedMusicalArtist> ?v1 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. },"```sparql
SELECT DISTINCT ?finalArtist WHERE {
  # Step 1: Find artists associated with Ornette Coleman who are both musical and general artists
  ?artist dbo:associatedMusicalArtist dbr:Ornette_Coleman .
  ?artist a dbo:MusicalArtist .
  OPTIONAL { ?artist dbo:artist ?generalArt . FILTER EXISTS { ?generalArt a dbo:Artist } }

  # Step 2: From the above result, find another associated artist who is both musical and general artists
  ?intermediateArtist dbo:associatedMusicalArtist ?artist .
  ?intermediateArtist a dbo:MusicalArtifact .
  OPTIONAL { ?intermediateArtist dbo:artist ?generalArt . FILTER EXISTS { ?generalArt a dbo:Artist } }

  # Step 3: Find the final artist associated with the intermediate artist
  ?finalArtist dbo:associatedMusicalArtist ?intermediateArtist .
  ?finalArtist a dbo:MusicalArtifact .
  OPTIONAL { ?finalArtist dbo:artist ?generalArt . FILTER EXISTS { ?generalArt a dbo:Artist } }
}
```",2,6,3,2,1,3,3,71,0,0,20,0,0.0,0
158,13,train,"Give me the entity in the award, that is a country, of the reference to Adelbert Cronkhite.","SELECT ?result WHERE { ?v0 <http://dbpedia.org/property/awards> ?v1 . ?v0 <http://xmlns.com/foaf/0.1/name> ""Adelbert Cronkhite""@en . ?result <http://dbpedia.org/ontology/country> ?v1 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. }","```sparql
SELECT ?award ?country WHERE {
  ?person foaf:name ""Adelbert Cronkhite""@en .
  ?person dbo:awardsReceived ?award .
  OPTIONAL { ?award dbo:country ?country . }
}
```",3,4,4,3,1,3,2,20,0,0,44301,0,0.0,0
645,0,train,Give me the commander in Battle of Jarama.,SELECT ?result WHERE { <http://dbpedia.org/resource/Battle_of_Jarama> <http://dbpedia.org/ontology/commander> ?result . },"```sparql
PREFIX dbpedia-owl: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?commander WHERE {
  ?battle a dbpedia-owl:Battle .
  ?battle rdfs:label ""Battle of Jarama""@en .
  OPTIONAL { ?battle dbp:commander ?commander . }
}
```",1,1,2,1,1,3,3,71,0,0,10,0,0.0,0
965,37,train,"Give me the parent of George Mountbatten, 2nd Marquess of Milford Haven and parent of the child, that is a royalty, of the person born, that is a politician, on 1854-05-24.","SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v2 <http://dbpedia.org/property/father> ?v1 . <http://dbpedia.org/resource/George_Mountbatten,_2nd_Marquess_of_Milford_Haven> <http://dbpedia.org/ontology/parent> ?result . ?v1 <http://dbpedia.org/ontology/birthDate> ""1854-05-24""^^<http://www.w3.org/2001/XMLSchema#date> . ?v2 <http://dbpedia.org/ontology/parent> ?result . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. }","```sparql
# Step 1: Find George Mountbatten, 2nd Marquess of Milford Haven and his parents
SELECT ?parent WHERE {
    ?person rdfs:label ""George Mountbatten, 2nd Marquess of Milford Haven""@en .
    ?person dbo:parent ?parent .
}

# Step 2: Find a child of George Mountbatten who is royalty
SELECT DISTINCT ?royalChild WHERE {
    ?child dbo:parent ?georgeMountbatten ;
           rdf:type dbo:RoyalFamilyMember .
    FILTER EXISTS { 
        ?georgeMountbatten rdfs:label ""George Mountbatten, 2nd Marquess of Milford Haven""@en .
    }
}

# Step 3: Identify the politician born on May 24, 1854
SELECT ?politician WHERE {
    ?person dbo:dateOfBirth ?dob ;
            rdf:type dbo:Politician .
    FILTER (YEAR(?dob) = 1854 && MONTH(?dob) = 5 && DAY(?dob) = 24)
}

# Step 4: Find the child of this politician who is royalty
SELECT DISTINCT ?royalChild2 WHERE {
    ?child dbo:parent ?politician ;
           rdf:type dbo:RoyalFamilyMember .
    FILTER EXISTS { 
        ?politician dbo:dateOfBirth ?dob .
        FILTER (YEAR(?dob) = 1854 && MONTH(?dob) = 5 && DAY(?dob) = 24)
    }
}

# Step 5: Find the common parent of both identified royals
SELECT DISTINCT ?commonParent WHERE {
    ?royalChild1 dbo:parent ?commonParent .
    ?royalChild2 dbo:parent ?commonParent .
    FILTER EXISTS { 
        ?royalChild1 ?p ?x . # Ensure it's a valid DBpedia entity
    }
    FILTER EXISTS { 
        ?royalChild2 ?q ?y . # Ensure it's a valid DBpedia entity
    }
}
```",4,6,5,3,2,3,3,71,0,0,2,0,0.0,0
865,34,train,"Give me the native of the residence, that is a country, of the person decedent at Patna and father of Shahla Khatun.",SELECT ?result WHERE { ?v1 <http://dbpedia.org/property/residence> ?v0 . ?v1 <http://dbpedia.org/ontology/deathPlace> <http://dbpedia.org/resource/Patna> . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. ?result <http://dbpedia.org/ontology/birthPlace> ?v0 . <http://dbpedia.org/resource/Shahla_Khatun> <http://dbpedia.org/property/father> ?result . },"```sparql
SELECT DISTINCT ?nativeName WHERE {
  ?shahla rdf:type dbo:Person ;
          foaf:name ""Shahla Khatun""@en .
  
  ?father dbo:child ?shahla ;
          dbo:deathPlace ?patnaDeath .

  FILTER (CONTAINS(LCASE(STR(?patnaDeath)), ""patna""))

  ?residence dbo:location ?country ;
             rdfs:label ?placeLabel .
  
  FILTER (CONTAINS(LCASE(STR(?placeLabel)), ""patna""))
  
  ?country dbo:officialLanguage ?language .

  OPTIONAL {
    ?language rdfs:label ?nativeName .
    FILTER (LANG(?nativeName) = 'en')
  }
}
```",4,5,5,3,2,3,3,71,0,0,1,0,0.0,0
47,28,train,Give me the office of the administration of Jagdeep Dhankhar and office of Ajoy Mukherjee and office of Bidesh Ranjan Bose.,SELECT ?result WHERE { <http://dbpedia.org/resource/Ajoy_Mukherjee> <http://dbpedia.org/property/office> ?result . ?v1 <http://dbpedia.org/property/office> ?result . <http://dbpedia.org/resource/Bidesh_Ranjan_Bose> <http://dbpedia.org/property/office> ?result . ?v1 <http://dbpedia.org/property/governor> <http://dbpedia.org/resource/Jagdeep_Dhankhar> . },"```sparql
# Query for Jagdeep Dhankhar's office
SELECT ?office WHERE {
  dbpedia:Jagdeep_Dhankhar dbo:positionHeld ?position .
  ?position dbo:office ?office .
}

UNION

# Query for Ajoy Mukherjee's office
SELECT ?office WHERE {
  dbpedia:Ajoy_Mukherjee dbo:positionHeld ?position .
  ?position dbo:office ?office .
}

UNION

# Query for Bidesh Ranjan Bose's office
SELECT ?office WHERE {
  dbpedia:Bidesh_Ranjan_Bose dbo:positionHeld ?position .
  ?position dbo:office ?office .
}
```",4,4,5,2,3,3,3,71,0,0,1,0,0.0,0
917,2,train,Give me the child of Kekūanāoʻa.,"SELECT ?result WHERE { ?result <http://dbpedia.org/property/father> ""Kekūanāoʻa""@en . }","```sparql
SELECT ?child WHERE {
  ?person rdfs:label ""Kekūanāoʻa""@en .
  FILTER (lang(?person) = 'en')
  ?person dbo:child ?child .
}
```",1,1,2,1,1,3,3,71,0,0,3,0,0.0,0
933,24,train,Give me the reference to the birth name of Alan Warner (musician) and band of The Ramong Sound.,SELECT ?result WHERE { <http://dbpedia.org/resource/The_Ramong_Sound> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?result <http://xmlns.com/foaf/0.1/name> ?v2 . <http://dbpedia.org/resource/Alan_Warner_(musician)> <http://dbpedia.org/property/birthName> ?v2 . },"```sparql
# Query for Alan Warner's birth name
SELECT ?birthName WHERE {
  dbpedia:Alan_Warner_(musician) dbo:birthName ?birthName .
}

# Query for the band associated with ""The Ramong Sound""
SELECT ?band WHERE {
  ?entity rdfs:label ""The Ramong Sound""@en.
  ?entity dbo:associatedBand ?band.
}
```",3,3,4,2,2,3,3,71,0,0,1,0,0.0,0
933,16,train,Give me the birth name of the professional in Musician.,SELECT ?result WHERE { ?v0 <http://dbpedia.org/property/occupation> <http://dbpedia.org/resource/Musician> . ?v0 <http://dbpedia.org/property/birthName> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?musician ?birthName WHERE {
  ?musician a dbo:MusicArtist .
  ?musician dbo:occupation ?occupation .
  FILTER(CONTAINS(LCASE(str(?occupation)), ""musician""))
  OPTIONAL { ?musician dbp:birthName ?birthName }
}
```",2,2,3,2,1,3,3,71,0,0,856,0,0.0,0
18,3,train,Give me the award of Ana María Sánchez de Ríos.,SELECT ?result WHERE { <http://dbpedia.org/resource/Ana_María_Sánchez_de_Ríos> <http://dbpedia.org/property/awards> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?award WHERE {
  ?person a dbo:Person ;
          foaf:name ""Ana María Sánchez de Ríos""@en .
  OPTIONAL { ?person dbo:award ?award . }
}
```",1,1,2,1,1,2,3,28,0,2,3,0.0,0.0,0
773,11,train,Give me the spouse of the father of Charles the Fat.,SELECT ?result WHERE { ?v0 <http://dbpedia.org/ontology/spouse> ?result . <http://dbpedia.org/resource/Charles_the_Fat> <http://dbpedia.org/property/father> ?v0 . },"```sparql
SELECT ?spouse WHERE {
  wd:Q1198 dbo:fatherOf wd:Q1187 .
  wd:Q1198 dbo:spouse ?spouse .
}
```",2,2,3,2,1,3,3,71,0,0,1,0,0.0,0
124,16,train,"Give me the war, that is an event and a military conflict and a societal event, of the awardee of British South Africa Company Medal.",SELECT ?result WHERE { ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v1 <http://dbpedia.org/ontology/battle> ?result . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?v1 <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/British_South_Africa_Company_Medal> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?war WHERE {
  ?medal dbo:awardedFor ?campaign .
  ?campaign dbo:partOf ?war .
  ?war a dbo:MilitaryConflict ;
      a dbo:Event ;
      a dbo:SocietalEvent .

  FILTER EXISTS { 
    ?medal rdfs:label ""British South Africa Company Medal""@en
  }
}
```",2,5,3,2,1,3,3,71,0,0,13,0,0.0,0
773,5,train,"Give me the child, that is a royalty, of Louis the Pious.",SELECT ?result WHERE { ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. <http://dbpedia.org/resource/Louis_the_Pious> <http://dbpedia.org/ontology/child> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?child WHERE {
  # Identify Louis the Pious by his DBpedia resource
  dbr:Louis_the_Pious dbo:spouse ?parent .
  
  # Retrieve children of Louis the Pious
  ?parent dbo:child ?child .

  # Filter for royalty based on occupation or title
  OPTIONAL { ?child dbo:occupation ?occupation . FILTER(CONTAINS(LCASE(?occupation), ""king"") || CONTAINS(LCASE(?occupation), ""queen"")) }
  OPTIONAL { ?child dbo:title ?title . FILTER(CONTAINS(LCASE(?title), ""king"") || CONTAINS(LCASE(?title), ""queen"")) }

  # Ensure the child is not null and has a royal title or occupation
  FILTER(BOUND(?occupation) || BOUND(?title))
}
```",1,2,2,1,1,3,3,71,0,0,3,0,0.0,0
987,17,train,"Give me the region, that is a country, of the time zone, that is a sports event, in Canicosa de la Sierra.",SELECT ?result WHERE { ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. ?result <http://dbpedia.org/property/timeZone> ?v0 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsEvent>. <http://dbpedia.org/resource/Canicosa_de_la_Sierra> <http://dbpedia.org/ontology/timeZone> ?v0 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?region WHERE {
  # Step 1: Identify Canicosa de la Sierra
  dbr:Canicosa_de_la_Sierra dbo:timeZone ?timezone .

  # Step 2: Find sports events associated with the time zone
  ?event dbo:timeZone ?timezone .
  
  # Ensure the event is a sports event
  ?event rdf:type dbo:SportEvent .

  # Step 3: Identify the region/country of the sports event
  ?event dbo:location ?location .
  ?location dbo:country ?region .
}
```",2,4,3,2,1,3,3,71,0,0,56,0,0.0,0
281,9,train,Give me the awardee of Medal bar and awardee of Volunteer Decoration.,SELECT ?result WHERE { ?result <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/Volunteer_Decoration> . ?result <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/Medal_bar> . },"```sparql
SELECT DISTINCT ?medalBarAwardee ?volunteerDecorationAwardee WHERE {
  ?medalBarAward a dbo:Award ;
                 rdfs:label ""Medal bar""@en .
  ?medalBarAward dbo:awardedTo ?medalBarAwardee .

  ?volunteerDecorationAward a dbo:Award ;
                           rdfs:label ""Volunteer Decoration""@en .
  ?volunteerDecorationAward dbo:awardedTo ?volunteerDecorationAwardee .
}
```",2,2,3,1,2,2,3,28,0,0,1,0,0.0,0
955,0,train,Give me the band of Nate Albert.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/bandMember> <http://dbpedia.org/resource/Nate_Albert> . },"```sparql
PREFIX dbp: <http://dbpedia.org/property/>
PREFIX dbo: <http://dbpedia.org/ontology/>

SELECT ?bandName WHERE {
  ?person foaf:name ""Nate Albert""@en .
  ?person dbp:band ?band .
  ?band foaf:name ?bandName .
}
```",1,1,2,1,1,3,2,20,0,0,1,0,0.0,0
445,19,train,"Give me the death place of Patrick Moore and entity in the residence, that is a country, of Anna Sharkey.",SELECT ?result WHERE { ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. ?result <http://dbpedia.org/ontology/location> ?v0 . <http://dbpedia.org/resource/Patrick_Moore> <http://dbpedia.org/ontology/deathPlace> ?result . <http://dbpedia.org/resource/Anna_Sharkey> <http://dbpedia.org/property/residence> ?v0 . },"```sparql
SELECT ?deathPlace ?country WHERE {
  # Query for Patrick Moore's death place
  dbpedia:Patrick_Moore dbo:deathPlace ?deathPlace .

  # Query for Anna Sharkey's residence and its country
  dbpedia:Anna_Sharkey dbo:residence ?residence .
  ?residence geo:location ?geoLocation .
  ?geoLocation geo:country ?country .
}
```",3,4,4,2,2,3,3,71,0,0,1,0,0.0,0
93,6,train,Give me the death place of John Weir Troy and capital of Alaska.,SELECT ?result WHERE { <http://dbpedia.org/resource/Alaska> <http://dbpedia.org/ontology/capital> ?result . <http://dbpedia.org/resource/John_Weir_Troy> <http://dbpedia.org/ontology/deathPlace> ?result . },"```sparql
SELECT ?deathPlace ?capitalCity WHERE {
  ?johnWeirTroy dbo:deathPlace ?deathPlace .
  FILTER(STRSTARTS(LCASE(?johnWeirTroy), ""http://dbpedia.org/resource/john_weir_troy""))
  
  dbpedia:Alaska dbo:capital ?capitalCity .
}
```",2,2,3,1,2,3,2,20,0,0,1,0,0.0,0
216,12,train,Give me the party of Campbell Newman and office of Tim Nicholls and administration of .,"SELECT ?result WHERE { <http://dbpedia.org/resource/Tim_Nicholls> <http://dbpedia.org/property/office> ?result . <http://dbpedia.org/resource/Campbell_Newman> <http://dbpedia.org/ontology/party> ?result . ?result <http://dbpedia.org/property/leader> """"@en . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?party ?office WHERE {
  # Query for Campbell Newman's political party
  OPTIONAL { 
    dbr:Campbell_Newman dbo:politicalParty ?party .
  }
  
  # Query for Tim Nicholls' office
  OPTIONAL { 
    dbr:Tim_Nicholls dbo:positionHeld ?office .
  }
}
```",3,3,4,1,3,2,3,28,0,0,1,0,0.0,0
281,7,train,Give me the awardee of Volunteer Decoration and commander in New Guinea campaign.,SELECT ?result WHERE { <http://dbpedia.org/resource/New_Guinea_campaign> <http://dbpedia.org/ontology/commander> ?result . ?result <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/Volunteer_Decoration> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?person ?name WHERE {
  ?person dbo:award dbr:Volunteer_Decoration .
  ?person dbo:militaryCommanderOf dbr:New_Guinea_campaign .
  ?person rdfs:label ?name .
  FILTER (LANG(?name) = 'en')
}
```",2,2,3,1,2,2,3,28,0,0,1,0,0.0,0
888,12,train,Give me the commander in Southern Ukraine campaign and awardee of the award of Oleksandr Syrskyi.,SELECT ?result WHERE { <http://dbpedia.org/resource/Oleksandr_Syrskyi> <http://dbpedia.org/property/awards> ?v0 . ?result <http://dbpedia.org/property/awards> ?v0 . <http://dbpedia.org/resource/Southern_Ukraine_campaign> <http://dbpedia.org/ontology/commander> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?commander ?campaign ?award WHERE {
  # Find Oleksandr Syrskyi and his award
  ?oleksandrSyrsKy a dbo:Person ;
                  foaf:name ""Oleksandr Syrskyi""@en ;
                  dbo:award ?award .

  # Find the campaign in Southern Ukraine involving a commander
  ?campaign dbo:location dbr:Southern_Ukraine ;
            dbo:commander ?commander .

  # Link the award to the campaign or commander if possible
  OPTIONAL { ?commander dbo:award ?award . }
}
```",3,3,4,2,2,3,2,20,0,0,1,0,0.0,0
122,5,train,Give me the band member of the band of Gift of Gab (rapper).,SELECT ?result WHERE { <http://dbpedia.org/resource/Gift_of_Gab_(rapper)> <http://dbpedia.org/ontology/associatedMusicalArtist> ?v0 . ?result <http://dbpedia.org/ontology/associatedMusicalArtist> ?v0 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?member WHERE {
  ?band a dbo:MusicalBand ;
        dbo:musicalArtist ?giftOfGab .
  
  ?giftOfGab rdfs:label ""Gift of Gab""@en .

  ?band dbo:member ?member .
  FILTER NOT EXISTS { ?band dbo:member ?giftOfGab }
}
```",2,2,3,2,1,2,2,9,0,0,24,0,0.0,0
935,0,train,Give me the death place of Abdul Raziq Bugti.,SELECT ?result WHERE { <http://dbpedia.org/resource/Abdul_Raziq_Bugti> <http://dbpedia.org/ontology/deathPlace> ?result . },"```sparql
SELECT ?deathPlace WHERE {
  ?person dbo:birthName ""Abdul Raziq Bugti""@en .
  ?person dbo:deathPlace ?deathPlace .
}
```",1,1,2,1,1,3,2,20,0,0,3,0,0.0,0
433,28,train,"Give me the associated musical artist of Bill Evans and professional in Musician and associated musical artist of the person born, that is a musical artist and an artist, as Paul Laurence Dunbar Chambers Jr..","SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. <http://dbpedia.org/resource/Bill_Evans> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v1 <http://dbpedia.org/property/birthName> ""Paul Laurence Dunbar Chambers Jr.""@en . ?result <http://dbpedia.org/property/occupation> ""Musician""@en . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?v1 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT DISTINCT ?artist1 ?artist2 WHERE {
  # Find an associated musical artist of Bill Evans who is a musician
  ?billEvans dbo:associatedMusicalArtist ?artist1 .
  ?billEvans rdf:type dbo:Musician .

  FILTER(?billEvans = dbpedia:Bill_Evans) 

  # Find an associated musical artist of Paul Chambers who was born as a musical artist and an artist
  ?paulChambers dbo:associatedMusicalArtist ?artist2 .
  ?paulChambers rdf:type dbo:Musician .
  ?paulChambers dbp:birthName ""Paul Laurence Dunbar Chambers Jr."" .

  FILTER(?paulChambers = dbpedia:Paul_Chambers_(bassist))
}
```",4,6,5,2,3,3,3,71,0,0,1,0,0.0,0
926,13,train,Give me the successor of the child of Ahmed III.,SELECT ?result WHERE { ?v1 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Ahmed_III> . ?v1 <http://dbpedia.org/ontology/successor> ?result . },"```sparql
SELECT ?successor WHERE {
  ?mustafa3 wdt:P31 wd:Q215627; # Mustafa III is a person
             wdt:P22 wd:Q1116;    # Ahmed III is the father of Mustafa III
             wdt:P35 wd:Q1204.   # Mustafa III was Sultan of the Ottoman Empire

  ?abdulhamid1 wdt:P31 wd:Q215627; # Abdul Hamid I is a person
               wdt:P57 ?mustafa3;    # Abdul Hamid I succeeded Mustafa III
               wdt:P35 wd:Q1204.   # Abdul Hamid I was Sultan of the Ottoman Empire

  BIND(?abdulhamid1 AS ?successor)
}
```",2,2,3,2,1,3,3,71,0,0,2,0,0.0,0
192,3,train,"Give me the spouse, that is a royalty, of Charles Martel of Anjou.",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/spouse> <http://dbpedia.org/resource/Charles_Martel_of_Anjou> . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?spouse ?title WHERE {
  ?person dbo:spouse ?spouse .
  ?person rdfs:label ""Charles Martel of Anjou""@en .
  
  OPTIONAL { 
    ?spouse dbo:title ?title .
    FILTER (CONTAINS(LCASE(?title), ""king"") || CONTAINS(LCASE(?title), ""queen"") ||
            CONTAINS(LCASE(?title), ""prince"") || CONTAINS(LCASE(?title), ""princess"") ||
            CONTAINS(LCASE(?title), ""duke"") || CONTAINS(LCASE(?title), ""duchess""))
  }
  
  FILTER (LANG(?person) = 'en')
}
```",1,2,2,1,1,3,2,20,0,0,1,0,0.0,0
98,0,train,Give me the parent of Emperor Rokujō.,SELECT ?result WHERE { <http://dbpedia.org/resource/Emperor_Rokujō> <http://dbpedia.org/ontology/parent> ?result . },"```sparql
SELECT ?parent WHERE {
  ?emperor rdf:type dbo:Emperor .
  ?emperor rdfs:label ""Rokujō""@en .
  ?emperor dbo:parent ?parent .
}
```",1,1,2,1,1,2,2,9,0,0,1,0,0.0,0
582,8,train,Give me the nickname of Japan national football team.,SELECT ?result WHERE { <http://dbpedia.org/resource/Japan_national_football_team> <http://dbpedia.org/property/nickname> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?nickname WHERE {
  ?team rdfs:label ""Japan national football team""@en .
  OPTIONAL { ?team dbo:officialName ?nickname . }
  FILTER (lang(?nickname) = 'en')
}
```",1,1,2,1,1,3,3,71,0,0,1,0,0.0,0
329,3,train,Give me the author of The Tailor and Ansty.,SELECT ?result WHERE { <http://dbpedia.org/resource/The_Tailor_and_Ansty> <http://dbpedia.org/property/author> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?author WHERE {
  ?book dbo:title ""The Tailor and Ansty""@en .
  ?book dbo:author ?author .
}
```",1,1,2,1,1,2,3,28,0,0,1,0,0.0,0
892,30,train,"Give me the landmark at elevation of 58 and entity in the administration, that is Italian and a region and a settlement and an administrative region, of Democratic Party (Italy) and entity in Italy.","SELECT ?result WHERE { ?v0 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Italy>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. ?result <http://dbpedia.org/ontology/elevation> ""58""^^<http://www.w3.org/2001/XMLSchema#integer> . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/AdministrativeRegion>. ?result <http://dbpedia.org/ontology/province> ?v0 . ?v0 <http://dbpedia.org/property/leaderParty> <http://dbpedia.org/resource/Democratic_Party_(Italy)> . ?result <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Italy> . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Region>. }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?landmark WHERE {
  ?landmark a dbo:Landmark ;
            dbo:elevationAboveSeaLevel ""58""^^xsd:float ;
            dbo:country dbr:Italy ;
            dbo:administrativeRegion ?region .
  
  ?region a dbo:AdministrativeRegion, dbo:Settlement, dbo:Region .

  OPTIONAL { ?landmark dbp:governmentParty dbr:Democratic_Party_(Italy) . }

  FILTER EXISTS {
    ?region dbo:country dbr:Italy
  }
}
```",4,8,5,2,3,3,3,71,0,0,2,0,0.0,0
892,39,train,"Give me the landmark at elevation of 58 and entity in the administration, that is Italian and a region and a settlement and an administrative region, of the party, that is a political party and an organisation, of Andrea Cozzolino.","SELECT ?result WHERE { ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/AdministrativeRegion>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. <http://dbpedia.org/resource/Andrea_Cozzolino> <http://dbpedia.org/ontology/party> ?v2 . ?v0 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Italy>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Region>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. ?v0 <http://dbpedia.org/property/leaderParty> ?v2 . ?result <http://dbpedia.org/ontology/province> ?v0 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/PoliticalParty>. ?result <http://dbpedia.org/ontology/elevation> ""58""^^<http://www.w3.org/2001/XMLSchema#integer> . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT DISTINCT ?landmark ?region WHERE {
  # Step 1: Find the political party of Andrea Cozzolino
  ?party dbo:member dbr:Andrea_Cozzolino .
  
  # Step 2: Identify regions that are Italian, a region, settlement, and administrative region
  ?region a dbo:Region ;
          dbp:country ""Italy""@en ;
          rdf:type dbo:Settlement ;
          rdf:type dbo:AdministrativeRegion .

  # Step 3: Find landmarks in these regions at an elevation of 58 meters
  ?landmark dbo:elevation ""58""^^xsd:int ;
            dbo:location dbr:?region .
}
```",4,10,5,3,2,3,3,71,0,0,2,0,0.0,0
507,14,train,Give me the professional in the profession of Guy Ferland.,SELECT ?result WHERE { ?result <http://dbpedia.org/property/occupation> ?v1 . <http://dbpedia.org/resource/Guy_Ferland> <http://dbpedia.org/property/occupation> ?v1 . },"```sparql
# Step 1: Retrieve the profession of Guy Ferland
SELECT ?profession WHERE {
  dbpedia:Guy_Ferland dbo:occupation ?profession .
}

# Step 2: Find other professionals in the same field
PREFIX dbo: <http://dbpedia.org/ontology/>

SELECT DISTINCT ?person WHERE {
  ?person a dbo:Person ;
          dbo:occupation ?profession .
  FILTER(?profession = <INSERT_GUY_FERLAND_PROFESSION_URI_HERE>)
}
```

Note: Replace `<INSERT_GUY_FERLAND_PROFESSION_URI_HERE>` with the actual URI of Guy Ferland's profession obtained from Step 1.",2,2,3,2,1,3,3,71,0,0,38,0,0.0,0
417,21,train,"Give me the child of Alexandrine of Mecklenburg-Schwerin and spouse of the parent, that is a royalty, of Count Ingolf of Rosenborg.",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/parent> <http://dbpedia.org/resource/Alexandrine_of_Mecklenburg-Schwerin> . ?result <http://dbpedia.org/ontology/spouse> ?v1 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v1 <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Count_Ingolf_of_Rosenborg> . },"```sparql
SELECT ?child ?spouse WHERE {
  # Find Alexandrine of Mecklenburg-Schwerin's children
  ?alexandrine dbr:Alexandrine_of_Mecklenburg-Schwerin .
  ?alexandrine dbo:child ?child .

  # Check if the child has a spouse who is royalty and parent of Count Ingolf of Rosenborg
  ?child dbo:spouse ?spouse .
  ?spouse rdf:type dbo:Monarch .
  
  # Verify that this spouse is also a parent of Count Ingolf of Rosenborg
  ?ingolf dbr:Count_Ingolf_of_Rosenborg .
  ?ingolf dbo:parent ?spouse .
}
```",3,4,4,2,2,3,3,71,0,0,1,0,0.0,0
417,34,train,"Give me the spouse of the parent, that is a royalty, of the child of Knud, Hereditary Prince of Denmark and child of Alexandrine of Mecklenburg-Schwerin.","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/spouse> ?v1 . ?result <http://dbpedia.org/ontology/parent> <http://dbpedia.org/resource/Alexandrine_of_Mecklenburg-Schwerin> . ?v1 <http://dbpedia.org/ontology/child> ?v2 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v2 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Knud,_Hereditary_Prince_of_Denmark> . }","```sparql
SELECT ?spouse WHERE {
  # Step 1: Find a child of Knud, Hereditary Prince of Denmark
  ?child dbo:parent dbr:Knud,_Hereditary_Prince_of_Denmark .
  
  # Step 2: Ensure the parent is Alexandrine of Mecklenburg-Schwerin (royalty)
  ?child dbo:parent dbr:Aleksandra_von_Mecklenburg-Schwerin .

  # Step 3: Find the spouse of this royal parent
  dbr:Aleksandra_von_Mecklenburg-Schwerin dbo:spouse ?spouse .
}
```",4,5,5,3,2,3,3,71,0,0,1,0,0.0,0
212,2,train,"Give me the professional, that is a musical artist and an artist, in Singer, rapper, CEO, Facilities and Project Manager.","SELECT ?result WHERE { ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. ?result <http://dbpedia.org/property/occupation> ""Singer, rapper, CEO, Facilities and Project Manager""@en . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT DISTINCT ?person WHERE {
  ?person a dbo:MusicalArtist .
  ?person dbo:genre ?musicGenre .
  FILTER (CONTAINS(LCASE(STR(?musicGenre)), ""singer"") || CONTAINS(LCASE(STR(?musicGenre)), ""rapper"")) .

  ?person dbo:occupation ?occupation .
  FILTER (
    CONTAINS(LCASE(STR(?occupation)), ""artist"") ||
    CONTAINS(LCASE(STR(?occupation)), ""ceo"") ||
    CONTAINS(LCASE(STR(?occupation)), ""facilities and project manager"")
  ) .
}
```",1,3,2,1,1,2,2,9,0,0,1,0,0.0,0
267,4,train,Who is the reference to Dan Cathy?,"SELECT ?result WHERE { ?result <http://xmlns.com/foaf/0.1/name> ""Dan Cathy""@en . }","```sparql
SELECT ?person ?personLabel ?organization ?organizationLabel WHERE {
  ?person foaf:name ""Dan Cathy""@en .
  OPTIONAL { ?person dbo:president ?organization . }
  SERVICE wikibase:label { bd:serviceParam wikibase:language ""[AUTO_LANGUAGE],en"". }
}
```",1,1,2,1,1,3,2,20,0,0,1,0,0.0,0
192,4,train,Give me the parent of Anna of Hungary (Byzantine empress).,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Anna_of_Hungary_(Byzantine_empress)> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?parent WHERE {
  VALUES ?anna { dbr:Anna_of_Hungary_(Byzantine_empress) }
  ?anna dbo:parent ?parent .
}
```",1,1,2,1,1,3,2,20,0,0,1,0,0.0,0
47,31,train,"Give me the office of the administration of the commander, that is a politician, in Operation Green Hunt and office of Bidesh Ranjan Bose.",SELECT ?result WHERE { <http://dbpedia.org/resource/Bidesh_Ranjan_Bose> <http://dbpedia.org/property/office> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v0 <http://dbpedia.org/property/governor> ?v1 . ?v0 <http://dbpedia.org/property/office> ?result . <http://dbpedia.org/resource/Operation_Green_Hunt> <http://dbpedia.org/ontology/commander> ?v1 . },"```sparql
# Query to find the office of P. Chidambaram during Operation Green Hunt
SELECT ?office WHERE {
  ?person dbo:occupation dbr/Politician .
  ?person foaf:name ""P. Chidambaram""@en .
  ?person dbo:office ?office .
}

UNION

# Query to find the office of Bidesh Ranjan Bose
SELECT ?office WHERE {
  ?person foaf:name ""Bidesh Ranjan Bose""@en .
  ?person dbo:office ?office .
}
```",4,5,5,3,2,3,3,71,0,0,1,0,0.0,0
136,2,train,Give me the area code of Levenhagen.,SELECT ?result WHERE { <http://dbpedia.org/resource/Levenhagen> <http://dbpedia.org/ontology/areaCode> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?postalCode ?areaCode WHERE {
  ?place a dbo:Settlement ;
        rdfs:label ""Levenhagen""@en .
  
  OPTIONAL { ?place dbo:postalCode ?postalCode . }
  OPTIONAL { ?place dbp:areaCode ?areaCode . }
}
```",1,1,2,1,1,2,2,9,0,2,1,0.0,0.0,0
495,9,train,Give me the father of the parent of Princess Catherine of Württemberg.,SELECT ?result WHERE { ?v0 <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Princess_Catherine_of_Württemberg> . ?v0 <http://dbpedia.org/property/father> ?result . },"```sparql
SELECT ?grandfather WHERE {
  # Find Princess Catherine of Württemberg
  dbpedia:Princess_Catherine_of_W%C3%BCrttemberg dbo:child ?parent .

  # Find one of her parents (either father or mother)
  OPTIONAL { ?parent rdf:type dbo:Man . }
  OPTIONAL { ?parent rdf:type dbo:Woman . }

  # Find the father of that parent
  ?parent dbo:father ?grandfather .
}
```",2,2,3,2,1,3,2,20,0,0,2,0,0.0,0
98,3,train,Who is the child of Emperor Toba?,SELECT ?result WHERE { <http://dbpedia.org/resource/Emperor_Toba> <http://dbpedia.org/ontology/child> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>

SELECT ?child WHERE {
  ?emperor rdf:type dbo:Monarch .
  ?emperor rdfs:label ""Emperor Toba""@en .
  ?emperor dbo:child ?child .
}
```",1,1,2,1,1,2,2,9,0,0,5,0,0.0,0
582,1,train,Give me the player in Kazuaki Nagasawa.,SELECT ?result WHERE { <http://dbpedia.org/resource/Kazuaki_Nagasawa> <http://dbpedia.org/ontology/team> ?result . },"```sparql
PREFIX dbp: <http://dbpedia.org/property/>
PREFIX dbo: <http://dbpedia.org/ontology/>

SELECT ?team WHERE {
  ?person a dbo:FootballPlayer ;
          foaf:name ""Kazuaki Nagasawa""@en .
  OPTIONAL { ?person dbp:team ?team . }
}
```",1,1,2,1,1,3,3,71,0,0,4,0,0.0,0
158,8,train,"Give me the party of the successor, that is a prime minister and an office holder and a politician, of André Tardieu.",SELECT ?result WHERE { ?v0 <http://dbpedia.org/ontology/party> ?result . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. <http://dbpedia.org/resource/André_Tardieu> <http://dbpedia.org/ontology/successor> ?v0 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/PrimeMinister>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?successor ?party WHERE {
  # André Tardieu's resource in DBpedia
  dbr:André_Tardieu dbo:officeHolderOf dbr:Prime_Minister_of_France.
  
  # Find his successor as Prime Minister of France
  OPTIONAL { 
    dbr:André_Tardieu dbo:successor ?successor .
  }
  
  # Ensure the successor is a politician and an office holder
  ?successor rdf:type dbo:Politician ;
             dbo:officeHolderOf ?office .

  # Get the political party of the successor
  ?successor dbo:party ?party .
}
```",2,5,3,2,1,3,2,20,0,0,1,0,0.0,0
926,28,train,Give me the child of Ahmed III and father of the father of Abdulaziz and successor of Mustafa III.,SELECT ?result WHERE { <http://dbpedia.org/resource/Abdulaziz> <http://dbpedia.org/property/father> ?v1 . <http://dbpedia.org/resource/Ahmed_III> <http://dbpedia.org/ontology/child> ?result . ?v1 <http://dbpedia.org/property/father> ?result . <http://dbpedia.org/resource/Mustafa_III> <http://dbpedia.org/ontology/successor> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?person WHERE {
  ?ahmed3 dbo:child ?person .
  FILTER (str(?ahmed3) = ""Ahmed_III"")
  
  ?person dbo:father ?faisalBinTurki .
  ?faisalBinTurki rdfs:label ?grandfatherLabel .
  FILTER (CONTAINS(LCASE(?grandfatherLabel), ""faisal bin turki""))

  ?mustafa3 dbo:succeededBy ?successor .
  ?successor rdfs:label ?successorLabel .
  FILTER (str(?successor) = ""Selim_III"" && CONTAINS(LCASE(?successorLabel), ""selim iii""))
}
```",4,4,5,2,3,3,3,71,0,0,1,0,0.0,0
281,11,train,Give me the awardee of the award of Alfred Warden.,SELECT ?result WHERE { ?result <http://dbpedia.org/property/awards> ?v1 . <http://dbpedia.org/resource/Alfred_Warden> <http://dbpedia.org/property/awards> ?v1 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?awardee WHERE {
  ?award a dbo:Award ;
        rdfs:label ""Alfred Warden""@en .
  
  ?recipient dbo:receivedAward ?award ;
             foaf:name ?awardee .
}
```",2,2,3,2,1,2,3,28,0,0,12,0,0.0,0
874,0,train,Give me the band of Manfred Mann (musician).,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/bandMember> <http://dbpedia.org/resource/Manfred_Mann_(musician)> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?band WHERE {
  ?manfredMann a dbo:MusicalArtist ;
               foaf:name ""Manfred Mann"" .
  OPTIONAL { ?manfredMann dbo:memberOfBand ?band . }
}
```",1,1,2,1,1,3,2,20,0,0,2,0,0.0,0
978,8,train,Give me the band member of the person born as Nicholas Bracegirdle.,"SELECT ?result WHERE { ?v0 <http://dbpedia.org/property/birthName> ""Nicholas Bracegirdle""@en . ?result <http://dbpedia.org/ontology/associatedMusicalArtist> ?v0 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?band ?member WHERE {
  # Find Nicholas Bracegirdle by his birth name
  ?person a dbo:Person ;
          foaf:name ""Nicholas Bracegirdle""@en .
  
  # Identify bands associated with him
  ?person dbo:musicalArtist dbr:Bands_He_Is_Part_Of .

  # Get the members of those bands
  ?band dbo:member ?member .
}
```",2,2,3,2,1,3,2,20,0,0,2,0,0.0,0
373,2,train,"Give me the work, that is a single and a musical work and a work and a soundtrack, of .","SELECT ?result WHERE { ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalWork>. ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Single>. ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?result <http://dbpedia.org/property/writer> """"@en . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Song>. }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?work WHERE {
  ?work a dbo:Single .
  ?work a dbo:MusicalWork .
  ?work a dbo:Soundtrack .
}
```",1,5,2,1,1,2,2,9,0,0,8275,0,0.0,0
36,0,train,Give me the actor of Being Mrs Elliot.,SELECT ?result WHERE { <http://dbpedia.org/resource/Being_Mrs_Elliot> <http://dbpedia.org/ontology/starring> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?actorLabel WHERE {
  ?movie rdfs:label ""Being Mrs. Elliot""@en .
  ?movie dbo:starring ?actor .
  ?actor rdfs:label ?actorLabel .
  FILTER(LANG(?actorLabel) = 'en')
}
```",1,1,2,1,1,2,3,28,0,0,6,0,0.0,0
232,2,train,"Give me the person born, that is a writer, on 1849-09-14.","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/birthDate> ""1849-09-14""^^<http://www.w3.org/2001/XMLSchema#date> . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Writer>. }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?person WHERE {
  ?person dbo:birthDate ""1849-09-14""^^xsd:date .
  ?person dbo:occupation dbr:Writer .
}
```",1,2,2,1,1,2,2,9,0,0,1,0,0.0,0
826,7,train,"Who is the child of Louis IV, Grand Duke of Hesse?","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/parent> <http://dbpedia.org/resource/Louis_IV,_Grand_Duke_of_Hesse> . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?child WHERE {
  dbr:Louis_IV,_Grand_Duke_of_Hesse dbo:child ?child .
}
```",1,1,2,1,1,3,3,71,0,0,4,0,0.0,0
382,11,train,"Give me the landmark at elevation of 100 and birthplace of the manager, that is a soccer manager and an athlete and a sports manager, of Bonner SC.","SELECT ?result WHERE { ?v2 <http://dbpedia.org/ontology/birthPlace> ?result . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerManager>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsManager>. ?result <http://dbpedia.org/ontology/elevation> ""100""^^<http://www.w3.org/2001/XMLSchema#integer> . <http://dbpedia.org/resource/Bonner_SC> <http://dbpedia.org/ontology/manager> ?v2 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Athlete>. }","```sparql
# Step 1: Find the manager of Bonner SC who is a soccer manager, athlete, and sports manager
SELECT ?manager WHERE {
  ?team dbo:coach ?manager .
  ?manager rdf:type dbo:SoccerManager .
  ?manager dbo:sport ?sport .
  FILTER(?sport IN (dbo:Athletics, dbo:SportsManagement)) .
  ?team rdfs:label ""Bonner SC""@en .
  FILTER NOT EXISTS { ?manager dbo:deceasedYear ?year } # Ensure the manager is alive
} LIMIT 1

# Step 2: Find the birthplace of this manager
SELECT ?birthPlace WHERE {
  ?manager dbo:birthPlace ?birthPlace .
}

# Step 3: Find a landmark at elevation 100 meters in that birthplace
SELECT DISTINCT ?landmark WHERE {
  ?landmark rdf:type dbo:Lighthouse ;
            dbo:elevationAboveSeaLevel ""100""^^xsd:integer ;
            dbo:location ?location .
  ?location rdfs:label ?birthPlaceLabel .
  FILTER(?birthPlaceLabel = ?birthPlace)
}
```",3,6,4,2,2,3,2,20,0,0,1,0,0.0,0
136,4,train,Give me the region coded as 03834 and landmark at elevation of 5.,"SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/areaCode> ""03834"" . ?result <http://dbpedia.org/ontology/elevation> ""5""^^<http://www.w3.org/2001/XMLSchema#integer> . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?region ?landmark WHERE {
  ?region dbo:postalCode ""03834"" .
  ?landmark a dbo:Lighthouse ;
            dbo:elevation ?elevation ;
            dbo:location ?region .
  FILTER (?elevation = 5)
}
```",2,2,3,1,2,2,2,9,0,0,1,0,0.0,0
166,5,train,"Give me the territory administered, that is a country, from Madrid.",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/capital> <http://dbpedia.org/resource/Madrid> . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. },"```sparql
SELECT ?territory WHERE {
  ?country dbo:capital dbr:Madrid .
  ?territory dbo:country ?country .
}
```",1,2,2,1,1,3,2,20,0,12023,15,0.0,0.0,0
124,18,train,Give me the military force of Battle of Atbara and military force of Battle of Tamai and commander in Mahdist War.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/battle> <http://dbpedia.org/resource/Battle_of_Atbara> . <http://dbpedia.org/resource/Mahdist_War> <http://dbpedia.org/ontology/commander> ?result . ?result <http://dbpedia.org/ontology/battle> <http://dbpedia.org/resource/Battle_of_Tamai> . },"```sparql
PREFIX dbpedia-owl: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?battle ?opposingForces ?commander1 ?commander2 WHERE {
  VALUES (?battle ?label) {
    (dbpedia:Battle_of_Atbara ""Battle of Atbara"")
    (dbpedia:Battle_of_Tamai ""Battle of Tamai"")
  }
  
  ?battle rdfs:label ?label ;
          dbp:opposingForces ?forces ;
          dbp:commander1 ?cmdr1 ;
          dbp:commander2 ?cmdr2 .

  OPTIONAL { ?forces rdfs:label ?forcesLabel . }
  OPTIONAL { ?cmdr1 rdfs:label ?cmdr1Label . }
  OPTIONAL { ?cmdr2 rdfs:label ?cmdr2Label . }

  FILTER (lang(?label) = 'en')
}
ORDER BY ?battle
```",3,3,4,1,3,3,3,71,0,0,1,0,0.0,0
773,37,train,"Give me the parent of Charles the Fat and parent of the successor of the child, that is a royalty, of Louis the Pious.",SELECT ?result WHERE { <http://dbpedia.org/resource/Louis_the_Pious> <http://dbpedia.org/ontology/child> ?v0 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v0 <http://dbpedia.org/ontology/successor> ?v3 . ?result <http://dbpedia.org/ontology/child> ?v3 . <http://dbpedia.org/resource/Charles_the_Fat> <http://dbpedia.org/ontology/parent> ?result . },"```sparql
# Step 1: Find Charles the Fat's parent
SELECT ?parent WHERE {
  wd:Q1198 wdt:P22 ?parent .
}

# Step 2: Identify Louis the Pious' royal children
SELECT DISTINCT ?child WHERE {
  wd:Q1240 wdt:P40 ?child .
  FILTER EXISTS { ?child wdt:P31 wd:Q5 } # Ensure the child is a person
  FILTER EXISTS { ?child wdt:P39 ?royalty . } # Check if they held a royal title
}

# Step 3: Find the successor of each royal child
SELECT DISTINCT ?successor WHERE {
  ?child wdt:P57 ?successor .
  ?child wdt:P40 wd:Q1240 . # Ensure the child is Louis the Pious' child
  FILTER EXISTS { ?child wdt:P31 wd:Q5 } # Ensure the child is a person
}

# Step 4: Find the parent of each successor
SELECT DISTINCT ?parent WHERE {
  ?successor wdt:P22 ?parent .
}
```",4,5,5,3,2,3,3,71,0,0,2,0,0.0,0
554,11,train,Give me the leader of the administration of Francisco da Costa Gomes and leader of Portuguese Mozambique.,SELECT ?result WHERE { ?v2 <http://dbpedia.org/property/leader> ?result . ?v2 <http://dbpedia.org/property/leader> <http://dbpedia.org/resource/Francisco_da_Costa_Gomes> . <http://dbpedia.org/resource/Portuguese_Mozambique> <http://dbpedia.org/property/leader> ?result . },"```sparql
# Query to find the Prime Minister of Portugal during Francisco da Costa Gomes' presidency (1974-1976)
SELECT ?primeMinister WHERE {
  ?presidency dbo:startDate ?start .
  ?presidency dbo:endDate ?end .
  ?presidency dbo:leader dbr:Fran%C3%A7isco_da_Costa_Gomes .
  FILTER (?start <= ""1974-07-30""^^xsd:date && ?end >= ""1976-09-30""^^xsd:date)
  ?presidency dbo:primeMinister ?pm .
  ?pm rdfs:label ?primeMinister .
  FILTER (lang(?primeMinister) = ""en"")
}

# Query to find the Governor or High Commissioner of Portuguese Mozambique before independence in 1975
SELECT ?governor WHERE {
  ?colony dbo:country dbr:Portugal ;
          dbo:administrativeUnit dbr:Mozambique .
  ?governor dbo:officeHolderOf ?colony ;
           rdfs:label ?governorLabel .
  FILTER (lang(?governorLabel) = ""en"" && ?governorLabel != """")
  OPTIONAL { ?governor dbo:endDate ?endDate . FILTER (?endDate < ""1975-06-25""^^xsd:date) }
}
```",3,3,4,2,2,3,2,20,0,0,3,0,0.0,0
582,11,train,Give me the reference to the residence of Hirotaka Sugawara.,SELECT ?result WHERE { <http://dbpedia.org/resource/Hirotaka_Sugawara> <http://dbpedia.org/property/residence> ?v0 . ?result <http://xmlns.com/foaf/0.1/name> ?v0 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT ?residence WHERE {
  ?person a dbo:Person ;
          foaf:name ""Hirotaka Sugawara""@en .
  OPTIONAL { ?person dbo:residence ?residence . }
}
```",2,2,3,2,1,3,3,71,0,0,41,0,0.0,0
965,19,train,Give me the spouse of the spouse of Princess Victoria of Hesse and by Rhine and parent of Louise Mountbatten.,SELECT ?result WHERE { <http://dbpedia.org/resource/Louise_Mountbatten> <http://dbpedia.org/ontology/parent> ?result . <http://dbpedia.org/resource/Princess_Victoria_of_Hesse_and_by_Rhine> <http://dbpedia.org/ontology/spouse> ?v2 . ?result <http://dbpedia.org/ontology/spouse> ?v2 . },"```sparql
SELECT ?spouse WHERE {
  wd:Q123456 wdt:P26 wd:Q789012 . # Grand Duke Ernst Ludwig (Q123456) married to Princess Victoria (Q789012)
  wd:Q789012 wdt:P26 ?princessVictoria . # Princess Victoria's spouse is Grand Duke Ernst Ludwig
  wd:Q123456 wdt:P26 ?spouse . # Spouse of Grand Duke Ernst Ludwig after Princess Victoria
}
```

Note: The actual DBpedia IDs (e.g., Q123456, Q789012) for ""Grand Duke Ernst Ludwig"" and ""Princess Victoria of Hesse and by Rhine"" need to be replaced with their correct identifiers from the DBpedia dataset.",3,3,4,2,2,3,3,71,0,0,1,0,0.0,0
826,13,train,"Give me the successor of the child, that is a royalty, of Louis I, Grand Duke of Hesse.","SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v1 <http://dbpedia.org/ontology/successor> ?result . <http://dbpedia.org/resource/Louis_I,_Grand_Duke_of_Hesse> <http://dbpedia.org/ontology/child> ?v1 . }","```sparql
SELECT ?child ?successor WHERE {
  ?grandDuke rdf:type dbo:GrandDuke ;
             foaf:name ""Louis I, Grand Duke of Hesse""@en .
  
  ?grandDuke dbo:child ?child .
  ?child rdf:type ?royaltyType .
  FILTER(?royaltyType IN (dbo:Monarch, dbo:Queen, dbo:King, dbo:GrandDuke)) .

  OPTIONAL { ?child dbo:successor ?successor . }
}
```",2,3,3,2,1,3,3,71,0,0,1,0,0.0,0
274,7,train,Give me the band member of Dizzy Gillespie and associated musical artist of Cecil Taylor.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/associatedMusicalArtist> <http://dbpedia.org/resource/Dizzy_Gillespie> . <http://dbpedia.org/resource/Cecil_Taylor> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . },"```sparql
SELECT ?bandMember ?associatedArtist WHERE {
  # Find a band member of Dizzy Gillespie
  ?gillespie dbo:genre dbr:Bebop .
  ?gillespie dbo:member ?bandMember .
  
  FILTER(?gillespie = dbr:Dizzy_Gillespie)
  
  # Find an associated artist of Cecil Taylor
  ?taylor dbo:genre dbr:Avant-garde_jazz .
  ?taylor dbo:associatedMusicalArtist ?associatedArtist .
  
  FILTER(?taylor = dbr:Cecil_Taylor)
}
```",2,2,3,1,2,2,3,28,0,0,1,0,0.0,0
917,26,train,"Give me the child of the father of the spouse, that is a royalty, of Leleiohoku I.",SELECT ?result WHERE { ?v2 <http://dbpedia.org/ontology/spouse> <http://dbpedia.org/resource/Leleiohoku_I> . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v2 <http://dbpedia.org/property/father> ?v0 . ?result <http://dbpedia.org/ontology/parent> ?v0 . },"```sparql
SELECT ?child WHERE {
  ?leleiohoku1 dbo:spouse ?spouse .
  FILTER (str(?leleiohoku1) = ""Leleiohoku I"") .

  ?spouse dbo:father ?fatherOfSpouse .

  ?fatherOfSpouse dbo:child ?child .

  ?child rdf:type ?royaltyType .
  FILTER (
    ?royaltyType IN (dbo:Monarch, dbo:RoyalFamilyMember)
  )
}
```",3,4,4,3,1,3,3,71,0,0,11,0,0.0,0
465,35,train,"Give me the successor of the child of Alfonso I d'Este and successor of the child, that is a royalty, of Anne of Brittany.",SELECT ?result WHERE { <http://dbpedia.org/resource/Anne_of_Brittany> <http://dbpedia.org/ontology/child> ?v1 . ?v2 <http://dbpedia.org/ontology/successor> ?result . ?v2 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Alfonso_I_d'Este> . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v1 <http://dbpedia.org/ontology/successor> ?result . },"```sparql
# Query to find the successor of a child of Alfonso I d'Este
SELECT ?child ?successor WHERE {
  ?alfonso dbo:spouse ?parent .
  FILTER(?alfonso = dbpedia:Alfonso_I_d%27Este) .
  
  ?parent dbo:child ?child .
  ?child rdf:type dbo:Monarch .

  OPTIONAL { ?child dbo:successor ?successor . }
} 

UNION

# Query to find the successor of a child of Anne of Brittany
SELECT ?child ?successor WHERE {
  ?anne dbo:spouse ?parent .
  FILTER(?anne = dbpedia:Anne_of_Brittany) .

  ?parent dbo:child ?child .
  ?child rdf:type dbo:Monarch .

  OPTIONAL { ?child dbo:successor ?successor . }
}
```",4,5,5,2,2,3,3,71,0,0,1,0,0.0,0
573,29,train,"Give me the parent of John Quincy Adams and person decedent at the residence, that is a settlement, of William J. Phelan and person decedent at Massachusetts.",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/deathPlace> ?v3 . <http://dbpedia.org/resource/William_J._Phelan> <http://dbpedia.org/property/residence> ?v3 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. ?result <http://dbpedia.org/ontology/deathPlace> <http://dbpedia.org/resource/Massachusetts> . <http://dbpedia.org/resource/John_Quincy_Adams> <http://dbpedia.org/ontology/parent> ?result . },"```sparql
# Step 1: Get parent(s) of John Quincy Adams
SELECT ?parent WHERE {
    dbpedia:John_Quincy_Adams dbo:childOf ?parent .
}

# Step 2: Find person decedent at the residence (settlement) of William J. Phelan
SELECT DISTINCT ?decedent WHERE {
    dbpedia:William_J._Phelan dbo:residenceLocation ?location .
    ?location a dbo:Settlement .
    ?decedent dbo:placeOfBurial ?location .
}

# Step 3: Find person decedent at Massachusetts
SELECT DISTINCT ?massachusettsDecedent WHERE {
    ?massachusettsDecedent dbo:placeOfBurial ?burialPlace .
    ?burialPlace dbpedia:Massachusetts .
}

# Step 4: Combine results to find common decedents and relate to John Quincy Adams' parent
SELECT DISTINCT ?parent ?commonDecedent WHERE {
    # Get parents of John Quincy Adams
    dbpedia:John_Quincy_Adams dbo:childOf ?parent .

    # Find common decedent between Phelan's residence and Massachusetts
    ?decedent dbo:placeOfBurial ?location .
    ?location a dbo:Settlement .
    ?burialPlace dbpedia:Massachusetts .
    ?decedent dbo:placeOfBurial ?burialPlace .
    
    # Ensure the decedent is common in both contexts
    BIND(?decedent AS ?commonDecedent)
}
```",4,5,5,2,3,3,3,71,0,0,2,0,0.0,0
267,12,train,Give me the person born on the birth date of Dan Cathy and coach of Iran national football team.,SELECT ?result WHERE { <http://dbpedia.org/resource/Dan_Cathy> <http://dbpedia.org/ontology/birthDate> ?v0 . <http://dbpedia.org/resource/Iran_national_football_team> <http://dbpedia.org/ontology/coach> ?result . ?result <http://dbpedia.org/ontology/birthDate> ?v0 . },"```sparql
# Step 1: Retrieve Dan Cathy's birth date
SELECT ?birthDate WHERE {
    dbpedia:Dan_Cathy dbo:birthday ?birthDate .
}

# Step 2: Find person born on that date who is a coach of the Iran national football team
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?person WHERE {
    # Replace 'YYYY-MM-DD' with Dan Cathy's birth date obtained from Step 1
    VALUES ?birthDate { ""YYYY-MM-DD""^^xsd:date }
    
    ?person dbo:birthday ?birthDate .
    ?person dbo:occupation dbr:Football_manager .
    ?team dbo:coach ?person .
    FILTER (strstarts(str(?team), str(dbr:Iran_national_football_team)))
}
```

Note: Replace `""YYYY-MM-DD""` with the actual birth date of Dan Cathy obtained from the first query.",3,3,4,2,2,3,2,20,0,0,1,0,0.0,0
773,12,train,Give me the parent of Carloman of Bavaria and parent of Charles the Fat.,SELECT ?result WHERE { <http://dbpedia.org/resource/Charles_the_Fat> <http://dbpedia.org/ontology/parent> ?result . ?result <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Carloman_of_Bavaria> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>

SELECT ?individual (IF(?parentType = ""father"", ""Father"", ""Mother"") AS ?relationship) ?parentName WHERE {
  VALUES (?individual ?parentType ?parentProperty) {
    (dbr:C._of_Bavaria dbo:father ?parentProperty)
    (dbr:C._of_Bavaria dbo:mother ?parentProperty)
    (dbr:Charles_the_Fat dbo:father ?parentProperty)
    (dbr:Charles_the_Fat dbo:mother ?parentProperty)
  }
  
  BIND(IF(?parentType = ""father"", ""dbo:father"", ""dbo:mother"") AS ?parentProperty)
  ?individual ?parentProperty ?parent .
  ?parent rdfs:label ?parentName .
  FILTER(LANG(?parentName) = 'en')
}
ORDER BY ?individual ?relationship
```",2,2,3,1,2,3,3,71,0,0,2,0,0.0,0
791,22,train,"Give me the spouse of Taira no Tokuko and father of the child, that is a royalty, of Emperor Takakura.",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/spouse> <http://dbpedia.org/resource/Taira_no_Tokuko> . ?v1 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Emperor_Takakura> . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v1 <http://dbpedia.org/property/father> ?result . },"```sparql
SELECT ?spouse ?child WHERE {
  ?tokuko dbo:spouse ?spouse .
  ?tokuko foaf:name ""Taira no Tokuko""@en .

  OPTIONAL { 
    ?spouse foaf:name ?spouseName .
  }

  ?parentChild dbo:parent ?tokuko ;
              dbo:parent ?spouse ;
              dbo:child ?child .

  ?child a dbo:RoyalFamilyMember ;
         dbo:royalTitle ?title .

  FILTER(?title IN (dbo:Emperor, dbo:Empress))
}
```",3,4,4,2,2,3,3,71,0,0,1,0,0.0,0
216,1,train,Give me the party of Campbell Newman.,SELECT ?result WHERE { <http://dbpedia.org/resource/Campbell_Newman> <http://dbpedia.org/ontology/party> ?result . },"```sparql
SELECT ?party WHERE {
  ?person foaf:name ""Campbell Newman""@en .
  ?person dbo:party ?party .
}
```",1,1,2,1,1,2,3,28,2,0,0,1.0,1.0,1.0
166,9,train,"Who is the military force of the force, that is an event and a societal event and a military conflict, of Manuel Hedilla?",SELECT ?result WHERE { ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?v0 <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Manuel_Hedilla> . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?result <http://dbpedia.org/ontology/battle> ?v0 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?militaryForce ?event WHERE {
  # Step 1: Identify Manuel Hedilla and his military force
  dbr:Manuel_Hedilla dbo:militaryService ?militaryForce .

  # Step 2: Find events related to this military force that are societal events and military conflicts
  ?event a dbo:MilitaryConflict ;
        dbo:participatedIn ?militaryForce ;
        a dbo:SocietalEvent .
}
```",2,5,3,2,1,3,2,20,0,0,514,0,0.0,0
573,30,train,"Give me the parent of the author, that is a politician and an office holder, of Exchequer Standards and person decedent at Massachusetts and person decedent at Quincy, Massachusetts.","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/deathPlace> <http://dbpedia.org/resource/Massachusetts> . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. <http://dbpedia.org/resource/Exchequer_Standards> <http://dbpedia.org/property/author> ?v1 . ?v1 <http://dbpedia.org/ontology/parent> ?result . ?result <http://dbpedia.org/ontology/deathPlace> <http://dbpedia.org/resource/Quincy,_Massachusetts> . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?parent WHERE {
  ?author dbo:deathPlace ?deathPlace .
  ?author dbo:occupation ?occupation .
  ?author dbo:causeOfDeath ?causeOfDeath .
  ?author dbo:wikiPageRedirects dbr:Exchequer_Standards .

  FILTER(CONTAINS(LCASE(STR(?deathPlace)), ""massachusetts"") && 
         CONTAINS(LCASE(STR(?deathPlace)), ""quincy, massachusetts""))

  FILTER(CONTAINS(LCASE(STR(?occupation)), ""politician"") &&
         CONTAINS(LCASE(STR(?occupation)), ""office holder""))

  ?author dbo:parent ?parent .

  ?parent dbo:occupation ?parentOccupation .
  
  FILTER(CONTAINS(LCASE(STR(?parentOccupation)), ""politician"") &&
         CONTAINS(LCASE(STR(?parentOccupation)), ""office holder""))
}
```",4,6,5,2,3,3,3,71,0,0,2,0,0.0,0
839,20,train,Give me the band of Kevin Russell (musician) and band of the member of Böhse Onkelz.,SELECT ?result WHERE { <http://dbpedia.org/resource/Böhse_Onkelz> <http://dbpedia.org/ontology/bandMember> ?v2 . ?result <http://dbpedia.org/ontology/bandMember> ?v2 . <http://dbpedia.org/resource/Kevin_Russell_(musician)> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . },"```sparql
# Query to get the band of Kevin Russell
SELECT ?band WHERE {
  wd:Q1234567 dbo:musicArtist <http://dbpedia.org/resource/The_Black_Keys> .
}

UNION

# Query to get bands associated with members of Böhse Onkelz
SELECT DISTINCT ?member ?band WHERE {
  # Michael ""Kuddel"" Rudolph
  wd:Q7890123 dbo:memberOf <http://dbpedia.org/resource/Böhse_Onkelz> ;
              dbo:musicArtist ?band .
  
  UNION
  
  # Peter ""Pe"" Schorowsky
  wd:Q3456789 dbo:memberOf <http://dbpedia.org/resource/Böhse_Onkelz> ;
              dbo:musicArtist ?band .

  UNION

  # Stephan ""Der Graf"" Weidner
  wd:Q5678901 dbo:memberOf <http://dbpedia.org/resource/Böhse_Onkelz> ;
              dbo:musicArtist ?band .

  UNION

  # Ingo Sänger
  wd:Q6789012 dbo:memberOf <http://dbpedia.org/resource/Böhse_Onkelz> ;
              dbo:musicArtist ?band .
}
```

Note: The `wd:Q1234567`, `wd:Q7890123`, `wd:Q3456789`, `wd:Q5678901`, and `wd:Q6789012` are placeholders for the actual DBpedia resource identifiers for Kevin Russell and the members of Böhse Onkelz. These should be replaced with their correct identifiers.",3,3,4,2,2,3,3,71,0,0,1,0,0.0,0
573,20,train,"Give me the person decedent at Massachusetts and person decedent at the residence, that is a settlement, of William J. Phelan.",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/deathPlace> ?v2 . ?result <http://dbpedia.org/ontology/deathPlace> <http://dbpedia.org/resource/Massachusetts> . <http://dbpedia.org/resource/William_J._Phelan> <http://dbpedia.org/property/residence> ?v2 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?personDecedentMassachusetts ?personDecedentPhelanResidence WHERE {
  # Find person decedent at Massachusetts
  ?personDecedentMassachusetts a dbo:Person ;
                              dbo:deathPlace dbr:Massachusetts .

  # Find William J. Phelan's residence
  OPTIONAL {
    dbr:William_J._Phelan dbo:residence ?phelanResidence .
    
    # Find person decedent at Phelan's residence
    ?personDecedentPhelanResidence a dbo:Person ;
                                   dbo:deathPlace ?phelanResidence .
  }
}
```",3,4,4,2,2,3,3,71,4,1000,0,0.00398406374501992,1.0,0.007936507936507936
582,13,train,"Give me the player in the father, that is an athlete and a soccer manager and a sports manager, of Masami Nagasawa.",SELECT ?result WHERE { <http://dbpedia.org/resource/Masami_Nagasawa> <http://dbpedia.org/property/father> ?v1 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerManager>. ?v1 <http://dbpedia.org/ontology/team> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsManager>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Athlete>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?father ?occupation WHERE {
  ?person a dbo:Person ;
          foaf:name ""Masami Nagasawa""@en .
  
  OPTIONAL { ?person dbo:father ?father . }
  
  FILTER EXISTS { ?father dbo:occupation ?o1 .
                 ?o1 rdfs:label ?occupation1 .
                 FILTER (CONTAINS(LCASE(?occupation1), ""athlete"") ||
                         CONTAINS(LCASE(?occupation1), ""soccer manager"") ||
                         CONTAINS(LCASE(?occupation1), ""sports manager"")) }
}
```",2,5,3,2,1,3,3,71,0,0,4,0,0.0,0
236,7,train,"Give me the party member of the administration, that is an organisation, of John Adams.",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/party> ?v1 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?v1 <http://dbpedia.org/property/leader> <http://dbpedia.org/resource/John_Adams> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?party WHERE {
  dbr:John_Adams dbo:presidentOf dbr:United_States .
  dbr:John_Adams dbo:politicalParty ?party .
  FILTER (isLiteral(?party) = false)
}
```",2,3,3,2,1,3,2,20,0,0,269,0,0.0,0
365,10,train,"Give me the native, that is a politician, of the reference to Полтавская губерния.","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/birthPlace> ?v0 . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v0 <http://xmlns.com/foaf/0.1/name> ""Полтавская губерния""@en . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?person ?name WHERE {
  ?person dbo:birthPlace dbr:Poltava_Governorate ;
          dbo:occupation ?occupation .
  FILTER (CONTAINS(LCASE(str(?occupation)), ""politician"") || CONTAINS(LCASE(str(?occupation)), ""political""))
  SERVICE wikibase:label { bd:serviceParam wikibase:language ""[AUTO_LANGUAGE],en"". }
}
```",2,3,3,2,1,3,2,20,0,0,11,0,0.0,0
373,5,train,"Give me the writer of the work, that is a single and a musical work and a work and a soundtrack, of .","SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?v1 <http://dbpedia.org/property/writer> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Single>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Song>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalWork>. ?v1 <http://dbpedia.org/property/writer> """"@en . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?work WHERE {
  ?work a dbo:Singles;
        a dbo:MusicalComposition;
        a dbo:Film; # or another appropriate class for ""work""
        a dbo:Soundtrack.
}
```",2,6,3,2,1,2,2,9,0,0,15041,0,0.0,0
98,4,train,Give me the person born as Paolo Elito M. Ballesteros IV.,"SELECT ?result WHERE { ?result <http://dbpedia.org/property/birthName> ""Paolo Elito M. Ballesteros IV""@en . }","```sparql
PREFIX foaf: <http://xmlns.com/foaf/0.1/>
PREFIX schema: <http://schema.org/>

SELECT ?person WHERE {
  VALUES ?name {""Paolo Elito M. Ballesteros IV""}
  
  # Check if the full name matches
  { ?person schema:name ?name }
  
  UNION
  
  # Check if given and family names match parts of the full name
  { 
    ?person foaf:givenName ?given .
    ?person foaf:familyName ?family .
    FILTER (str(?given) + "" "" + str(?family) = ?name)
  }
}
```",1,1,2,1,1,2,3,28,0,0,1,0,0.0,0
216,7,train,Give me the death of Pavel Vezhinov.,SELECT ?result WHERE { <http://dbpedia.org/resource/Pavel_Vezhinov> <http://dbpedia.org/ontology/deathDate> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?deathDate ?deathPlace WHERE {
  VALUES ?vezhinov { dbr:Pavel_Vezhinov }
  OPTIONAL { ?vezhinov dbo:deathDate ?deathDate . }
  OPTIONAL { ?vezhinov dbo:deathPlace ?deathPlace . }
}
```",1,1,2,1,1,3,3,71,1,2,0,0.3333333333333333,1.0,0.5
917,19,train,"Give me the parent of the child, that is a royalty, of Kamehameha IV and child of Kekūanāoʻa.",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/child> ?v2 . ?v2 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Kamehameha_IV> . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?result <http://dbpedia.org/ontology/parent> <http://dbpedia.org/resource/Kekūanāoʻa> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?parent WHERE {
  # Kamehameha IV and his spouse (Queen Emma)
  ?kamehamehaIV a dbo:Monarch ;
                dbo:spouse dbr:Emma_of_the_Hawaiian_Islands .

  # Kekūanāoʻa
  ?kekuanaoa a dbo:Person ;
             rdfs:label ""Kekūanāoʻa""@en .

  # Child of both Kamehameha IV and Kekūanāoʻa who is royalty
  ?child dbo:parent dbr:Kamehameha_IV ;
         dbo:parent ?kekuanaoa ;
         a dbo:Monarch .

  # Parent of the child (who should be Queen Emma)
  ?child dbo:parent ?parent .
}
```",3,4,4,2,2,3,3,71,0,0,1,0,0.0,0
495,3,train,Give me the father of William I of Württemberg.,SELECT ?result WHERE { <http://dbpedia.org/resource/William_I_of_Württemberg> <http://dbpedia.org/property/father> ?result . },"```sparql
SELECT ?father WHERE {
  ?person dbo:givenName ""William""@en .
  ?person dbo:familyName ""I""@en .
  ?person dbo:country dbr:Kingdom_of_Württemberg .
  ?person dbo:father ?father .
}
```",1,1,2,1,1,3,2,20,0,0,1,0,0.0,0
18,5,train,"Give me the figure known, that is an educational institution, as Saints.","SELECT ?result WHERE { ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/EducationalInstitution>. ?result <http://dbpedia.org/property/nickname> ""Saints""@en . }","```sparql
SELECT ?institution WHERE {
  ?institution dbo:name ?name .
  FILTER(CONTAINS(LCASE(?name), ""saints""))
  OPTIONAL { ?institution dbo:wikiPageRedirects ?redirect . }
  ?institution a dbo:EducationalInstitution .
}
```",1,2,2,1,1,2,3,28,0,0,25,0,0.0,0
791,28,train,"Give me the predecessor of Emperor Antoku and spouse of the spouse, that is a royalty, of Emperor Takakura and father of Emperor Go-Toba.",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/spouse> ?v1 . ?v1 <http://dbpedia.org/ontology/spouse> <http://dbpedia.org/resource/Emperor_Takakura> . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?result <http://dbpedia.org/ontology/successor> <http://dbpedia.org/resource/Emperor_Antoku> . <http://dbpedia.org/resource/Emperor_Go-Toba> <http://dbpedia.org/property/father> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?person WHERE {
  # Predecessor of Emperor Antoku
  ?antoku dbo:predecessor ?takakura .
  FILTER(STR(?antoku) = ""Emperor_Antoku"")

  # Spouse of the spouse (that is royalty) of Emperor Takakura
  ?takakura dbo:spouse ?tokuko .
  ?tokuko dbo:spouse ?kiyomori .
  ?kiyomori a dbo:Royalty .

  # Father of Emperor Go-Toba
  ?gootoba dbo:father ?kiyomori .
  FILTER(STR(?gootoba) = ""Emperor_Go-Toba"")

  # Ensure the person is Taira no Kiyomori
  ?person rdfs:label ?name .
  FILTER(CONTAINS(LCASE(?name), ""taira no kiyomori""))
}
```",4,5,5,2,3,3,3,71,0,0,1,0,0.0,0
124,33,train,"Give me the military force of the war, that is an event and a military conflict and a societal event, of the awardee of British South Africa Company Medal and commander in Mahdist War.",SELECT ?result WHERE { ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v0 <http://dbpedia.org/ontology/battle> ?v3 . ?v0 <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/British_South_Africa_Company_Medal> . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?result <http://dbpedia.org/ontology/battle> ?v3 . <http://dbpedia.org/resource/Mahdist_War> <http://dbpedia.org/ontology/commander> ?result . },"```sparql
SELECT ?war ?militaryForce WHERE {
  ?person dbo:award dbp:British_South_Africa_Company_Medal .
  ?person dbo:militaryCommanderOf dbp:Mahdist_War .
  
  ?event dbo:type dbr:Event ;
         dbo:type dbr:Military_conflict ;
         dbo:type dbr:Societal_event .

  ?war dbo:participatingMilitaryForce ?militaryForce ;
       dbo:commandedBy ?person ;
       rdfs:subClassOf ?event .
}
```",4,7,5,3,2,3,3,71,0,0,3,0,0.0,0
433,0,train,Give me the associated musical artist of Paul Chambers.,SELECT ?result WHERE { <http://dbpedia.org/resource/Paul_Chambers> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . },"```sparql
SELECT ?artist WHERE {
  dbpedia:Paul_Chambers a dbo:Musician .
  OPTIONAL { dbpedia:Paul_Chambers dbo:associatedBand ?band . }
  OPTIONAL { dbpedia:Paul_Chambers dbo:memberOf ?group . }
  FILTER EXISTS { ?band rdfs:label ?artist } UNION
  FILTER EXISTS { ?group rdfs:label ?artist }
}
```",1,1,2,1,1,3,3,71,0,0,31,0,0.0,0
874,10,train,"Give me the band member of the band, that is an organisation, of Mark Read (singer).",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/associatedMusicalArtist> ?v0 . ?v0 <http://dbpedia.org/ontology/bandMember> <http://dbpedia.org/resource/Mark_Read_(singer)> . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?bandMember WHERE {
  ?markRead dbo:member dbr:McFly .
  FILTER (str(?markRead) = ""Mark_Read_(singer)"")
  
  ?bandMember dbo:member dbr:McFly .
  FILTER (?bandMember != ?markRead)
}
```",2,3,3,2,1,3,2,20,0,0,7,0,0.0,0
892,24,train,Give me the entity in Province of Reggio Emilia and landmark at elevation of the award of Anna Ishii.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/province> <http://dbpedia.org/resource/Province_of_Reggio_Emilia> . <http://dbpedia.org/resource/Anna_Ishii> <http://dbpedia.org/property/awards> ?v2 . ?result <http://dbpedia.org/ontology/elevation> ?v2 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT DISTINCT ?entityInReggioEmilia ?landmarkAtElevation WHERE {
  # Step 1: Find Anna Ishii and her awards
  ?annaIshii dbo:award ?award .
  
  FILTER (str(?annaIshii) = ""Anna_Ishii"")

  # Step 2: Determine elevation of the award or related landmark
  OPTIONAL { 
    ?award dbp:elevation ?elevation .
    ?landmark dbp:elevation ?elevation ;
              dbo:location ?location .
  }

  # Step 3: Identify landmarks at that elevation
  FILTER EXISTS {
    ?landmark dbp:elevation ?elevation .
  }

  # Step 4: Find entities in Province of Reggio Emilia
  ?entityInReggioEmilia dbo:locatedIn dbr:Province_of_Reggio_Emilia ;
                       dbo:location ?location .

  # Link the landmark to the entity in Reggio Emilia
  FILTER (?location = ?landmarkLocation)
}
```",3,3,4,2,2,3,3,71,0,0,1,0,0.0,0
582,25,train,Give me the figure known as the nickname of Japan national football team and player in Kazuaki Nagasawa.,SELECT ?result WHERE { ?result <http://dbpedia.org/property/nickname> ?v1 . <http://dbpedia.org/resource/Kazuaki_Nagasawa> <http://dbpedia.org/ontology/team> ?result . <http://dbpedia.org/resource/Japan_national_football_team> <http://dbpedia.org/property/nickname> ?v1 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?nickname WHERE {
  dbr:Japan_national_football_team dbo:nickname ?nickname .
}

UNION

SELECT DISTINCT ?playerName WHERE {
  ?team dbo:member ?player .
  ?player foaf:name ""Kazuaki Nagasawa""@en .
  ?team rdfs:label ""Japan national football team""@en .
}
```",3,3,4,2,2,3,3,71,0,0,1,0,0.0,0
453,3,train,"Who is the author, that is a cardinal and a cleric, of Apologia Pro Vita Sua?",SELECT ?result WHERE { <http://dbpedia.org/resource/Apologia_Pro_Vita_Sua> <http://dbpedia.org/property/author> ?result . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Cardinal>. ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Cleric>. },"```sparql
SELECT ?person WHERE {
  ?person dbo:author ""Apologia Pro Vita Sua""@en .
  ?person rdf:type dbo:Cardinal .
  ?person rdf:type dbo:Cleric .
}
```",1,3,2,1,1,2,2,9,0,0,1,0,0.0,0
465,18,train,"Give me the successor of Renée of France and successor of Ercole II d'Este, Duke of Ferrara and spouse of Archduchess Barbara of Austria.","SELECT ?result WHERE { <http://dbpedia.org/resource/Renée_of_France> <http://dbpedia.org/ontology/successor> ?result . <http://dbpedia.org/resource/Ercole_II_d'Este,_Duke_of_Ferrara> <http://dbpedia.org/ontology/successor> ?result . ?result <http://dbpedia.org/ontology/spouse> <http://dbpedia.org/resource/Archduchess_Barbara_of_Austria> . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?successorRenée ?successorErcole WHERE {
  # Find the successor of Renée of France as Duchess of Ferrara
  OPTIONAL {
    dbr:Renée_of_France dbo:spouse dbr:Ercole_II_d'Este.
    dbr:Ercole_II_d'Este dbo:title ""Duke of Ferrara""@en.
    ?successorErcole dbo:predecessor dbr:Ercole_II_d'Este.
    ?successorRenée dbo:predecessor dbr:Renée_of_France.
  }

  # Find the successor of Ercole II d'Este as Duke of Ferrara
  OPTIONAL {
    dbr:Ercole_II_d'Este dbo:title ""Duke of Ferrara""@en.
    ?successorErcole dbo:predecessor dbr:Ercole_II_d'Este.
  }
}
```",3,3,4,1,3,3,3,71,0,0,1,0,0.0,0
274,18,train,"Give me the associated musical artist of the actor, that is a musical artist, of Imagine the Sound and professional in .","SELECT ?result WHERE { ?v2 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?result <http://dbpedia.org/property/occupation> """"@en . <http://dbpedia.org/resource/Imagine_the_Sound> <http://dbpedia.org/property/starring> ?v2 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?actorArtist WHERE {
  ?person a dbo:MusicalArtist ;
          a dbo:Actor ;
          dbo:associatedBandOrMusicalGroup dbr:Imagine_the_Sound .
  
  OPTIONAL { ?person foaf:name ?name . }
}
```",3,4,4,2,2,2,3,28,0,0,6,0,0.0,0
124,8,train,"Give me the force, that is a societal event and a military conflict, of Herbert Kitchener, 1st Earl Kitchener.","SELECT ?result WHERE { ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?result <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Herbert_Kitchener,_1st_Earl_Kitchener> . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?force WHERE {
  ?kitchener a dbo:Person ;
             foaf:name ""Herbert Kitchener"" ;
             dbo:associatedWith ?force .
  
  ?force a dbo:MilitaryUnit ;
         dbo:partOf ?event .

  ?event a dbo:SocietalEvent, dbo:MilitaryConflict .
}
```",1,3,2,1,1,3,3,71,0,0,8,0,0.0,0
715,27,train,"Give me the leader of the office, that is a government agency and an organisation, of the reference to Carlos Franco Iribarnegaray.","SELECT ?result WHERE { ?v1 <http://xmlns.com/foaf/0.1/name> ""Carlos Franco Iribarnegaray""@en . ?v2 <http://dbpedia.org/ontology/leader> ?result . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?v1 <http://dbpedia.org/property/office> ?v2 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/GovernmentAgency>. }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?leader WHERE {
  ?office dbo:head ?leader .
  ?person dbo:office ?office .
  ?person foaf:name ""Carlos Franco Iribarnegaray""@en .
}
```",3,5,4,3,1,3,3,71,0,0,2,0,0.0,0
459,5,train,Give me the birth name of Kevin Stitt.,SELECT ?result WHERE { <http://dbpedia.org/resource/Kevin_Stitt> <http://dbpedia.org/property/birthName> ?result . },"```sparql
PREFIX foaf: <http://xmlns.com/foaf/0.1/>
PREFIX dbo: <http://dbpedia.org/ontology/>

SELECT ?birthName WHERE {
  ?person foaf:name ""Kevin Stitt""@en .
  OPTIONAL { ?person foaf:givenName ?firstName . }
  OPTIONAL { ?person foaf:familyName ?lastName . }
  OPTIONAL { ?person dbo:alias ?alias . FILTER regex(?alias, ""^Kevin"", ""i"") }
  
  BIND(CONCAT(STR(?firstName), "" "", STR(?lastName)) AS ?birthName)
}
```",1,1,2,1,1,2,3,28,0,1,1,0.0,0.0,0
507,34,train,"Give me the professional in Film director, television director and spouse of the person born as the birth name of Anne V. Coates.","SELECT ?result WHERE { <http://dbpedia.org/resource/Anne_V._Coates> <http://dbpedia.org/property/birthName> ?v2 . ?result <http://dbpedia.org/ontology/spouse> ?v1 . ?v1 <http://dbpedia.org/property/birthName> ?v2 . ?result <http://dbpedia.org/property/occupation> ""Film director, television director""@en . }","```sparql
SELECT ?spouse ?filmDirector ?tvDirector WHERE {
  ?anne foaf:name ""Anne V. Coates""@en .
  ?anne dbo:birthName ?birthName .
  
  ?anne dbo:spouse ?spouse .

  OPTIONAL { 
    ?spouse dbo:occupation ?occupation .
    FILTER(CONTAINS(LCASE(?occupation), ""film director"") && CONTAINS(LCASE(?occupation), ""television director""))
  }

  BIND(IF(BOUND(?occupation), true, false) AS ?isDirector)
  
  FILTER(?isDirector = true)
}
```",4,4,5,3,2,3,3,71,0,0,1,0,0.0,0
865,24,train,"Give me the father of the child, that is a politician, of Abu Ahmad Abdul Hafiz and father of Shahla Khatun.",SELECT ?result WHERE { ?v2 <http://dbpedia.org/property/father> ?result . ?v2 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Abu_Ahmad_Abdul_Hafiz> . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. <http://dbpedia.org/resource/Shahla_Khatun> <http://dbpedia.org/property/father> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT DISTINCT ?father WHERE {
  # Abu Ahmad Abdul Hafiz's child who is a politician
  ?child dbo:parent dbr:Abu_Ahmad_Abdul_Hafiz ;
         dbo:occupation dbp:Politician .
  
  # Shahla Khatun's father
  dbr:Shahla_Khatun dbo:father ?father .

  # The common person who is the father of both
  ?child dbo:parent ?father .
}
```",3,4,4,2,2,3,3,71,0,0,1,0,0.0,0
554,3,train,Give me the administration of Francisco da Costa Gomes.,SELECT ?result WHERE { ?result <http://dbpedia.org/property/leader> <http://dbpedia.org/resource/Francisco_da_Costa_Gomes> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?termStart ?termEnd ?predecessor ?successor WHERE {
  VALUES ?person { dbr:Fran%C3%A7isco_da_Costa_Gomes }
  
  OPTIONAL { ?person dbo:presidentOf dbr:Portugal . }
  OPTIONAL { ?person dbo:termStart ?termStart . }
  OPTIONAL { ?person dbo:termEnd ?termEnd . }
  OPTIONAL { ?person dbo:predecessor ?predecessor . }
  OPTIONAL { ?person dbo:successor ?successor . }
}
```",1,1,2,1,1,3,2,20,0,0,3,0,0.0,0
987,8,train,"Give me the region, that is a country, of Central European Time.",SELECT ?result WHERE { ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. ?result <http://dbpedia.org/property/timeZone> <http://dbpedia.org/resource/Central_European_Time> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?country WHERE {
  ?country a dbo:Country .
  ?country dbo:timeZone dbr:Central_European_Time_Zone .
}
```",1,2,2,1,1,3,3,71,0,0,56,0,0.0,0
645,34,train,Give me the commander in the force of the commander in Siege of Madrid and leader of Ministry of the Army (Spain).,SELECT ?result WHERE { <http://dbpedia.org/resource/Ministry_of_the_Army_(Spain)> <http://dbpedia.org/ontology/leader> ?result . ?v1 <http://dbpedia.org/ontology/commander> ?v2 . ?v1 <http://dbpedia.org/ontology/commander> ?result . <http://dbpedia.org/resource/Siege_of_Madrid> <http://dbpedia.org/ontology/commander> ?v2 . },"```sparql
SELECT ?person WHERE {
  ?person dbo:occupation dbr:Military_person.
  ?person rdfs:label ""Francisco Franco""@en .
  OPTIONAL { 
    ?event dbo:eventLocation dbr:Siege_of_Madrid ;
           dbo:commander ?person .
  }
  OPTIONAL {
    ?ministry dbo:head ?person ;
              rdfs:label ""Ministry of the Army (Spain)""@en .
  }
}
```",4,4,5,3,2,3,3,71,0,0,1,0,0.0,0
124,17,train,"Give me the force, that is a societal event and a military conflict, of the person born on 1850-06-24.","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/commander> ?v1 . ?v1 <http://dbpedia.org/ontology/birthDate> ""1850-06-24""^^<http://www.w3.org/2001/XMLSchema#date> . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?event WHERE {
  ?person dbo:birthDate ""1850-06-24""^^xsd:date .
  ?person rdfs:label ""Otto von Bismarck""@en .
  
  ?person dbo:associatedWith ?event .

  FILTER (
    (CONTAINS(LCASE(?event), ""franco-prussian war"") || 
     CONTAINS(LCASE(?event), ""unification of germany""))
  )
}
```",2,4,3,2,1,3,3,71,0,0,8,0,0.0,0
445,6,train,Who is the awardee of Royal Astronomical Society?,SELECT ?result WHERE { ?result <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/Royal_Astronomical_Society> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?recipient WHERE {
  ?award dbo:givenBy dbr:Royal_Astronomical_Society .
  ?award dbo:recipient ?recipient .
}
```",1,1,2,1,1,3,3,71,0,0,2,0,0.0,0
456,27,train,"Give me the band of the band, that is a musical artist, of the band of Alan Doyle.",SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/associatedMusicalArtist> ?v2 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?v2 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . <http://dbpedia.org/resource/Alan_Doyle> <http://dbpedia.org/ontology/associatedMusicalArtist> ?v1 . },"```sparql
SELECT ?band WHERE {
  ?person foaf:name ""Alan Doyle""@en .
  ?person dbo:memberOfBand ?band .
  FILTER NOT EXISTS { 
    ?band dbo:memberOfBand ?higherLevelBand .
  }
}
```",3,4,4,3,1,3,3,71,0,0,3,0,0.0,0
917,23,train,"Give me the parent of the child, that is a royalty, of the mayor of Hawaiian Kingdom.",SELECT ?result WHERE { ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v2 <http://dbpedia.org/property/father> ?v1 . <http://dbpedia.org/resource/Hawaiian_Kingdom> <http://dbpedia.org/property/leader> ?v1 . ?result <http://dbpedia.org/ontology/child> ?v2 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?parent WHERE {
    # Identify the monarch of the Hawaiian Kingdom, focusing on King Kamehameha I
    dbr:King_Kamehameha_I dbo:spouse ?spouse .
    
    # Find children who are royalty (i.e., have a royal title)
    ?child dbo:parent ?spouse ;
           dbo:parent dbr:King_Kamehameha_I ;
           a dbo:RoyalPerson .

    # Get the parent of this child
    ?child dbo:parent ?parent .
}
```",3,4,4,3,1,3,3,71,0,0,12,0,0.0,0
216,24,train,"Give me the team of Ognjen Vukojević and player in the coach, that is a soccer player and a sports manager and a soccer manager, of Bosnia and Herzegovina national under-18 football team.",SELECT ?result WHERE { ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerPlayer>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsManager>. ?result <http://dbpedia.org/ontology/coach> <http://dbpedia.org/resource/Ognjen_Vukojević> . ?v2 <http://dbpedia.org/ontology/team> ?result . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerManager>. <http://dbpedia.org/resource/Bosnia_and_Herzegovina_national_under-18_football_team> <http://dbpedia.org/ontology/coach> ?v2 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?team WHERE {
  ?person rdfs:label ""Ognjen Vukojević""@en .
  ?person dbo:nationality dbr:Bosnia_and_Herzegovina .
  ?person dbo:sport dbr:Soccer .
  ?person dbo:occupation dbp:Sports_manager .
  ?person dbo:managerTeam ?team .
  FILTER(CONTAINS(LCASE(?team), ""bosnia and herzegovina national under-18 football team""))
}
```",3,6,4,2,2,3,3,71,0,0,1,0,0.0,0
826,11,train,Give me the spouse of the child of Johann Heinrich Appel.,"SELECT ?result WHERE { ?v0 <http://dbpedia.org/property/father> ""Johann Heinrich Appel""@en . ?v0 <http://dbpedia.org/ontology/spouse> ?result . }","```sparql
SELECT DISTINCT ?child ?spouse WHERE {
  ?person foaf:name ""Johann Heinrich Appel""@en .
  ?person dbo:child ?child .
  ?child dbp:spouse ?spouse .
}
```",2,2,3,2,1,3,3,71,0,0,1,0,0.0,0
124,1,train,Give me the military force of Battle of Tamai.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/battle> <http://dbpedia.org/resource/Battle_of_Tamai> . },"```sparql
PREFIX dbp: <http://dbpedia.org/property/>
PREFIX dbo: <http://dbpedia.org/ontology/>

SELECT ?combatant1 ?combatant2 WHERE {
  ?battle a dbo:MilitaryEngagement ;
         rdfs:label ""Battle of Tamai""@en .
  
  OPTIONAL { ?battle dbp:combatant1 ?combatant1 . }
  OPTIONAL { ?battle dbp:combatant2 ?combatant2 . }

  FILTER (lang(?combatant1) = 'en' || lang(?combatant2) = 'en')
}
```",1,1,2,1,1,3,3,71,0,0,4,0,0.0,0
417,24,train,Give me the child of the father of Frederick IX of Denmark and child of Alexandrine of Mecklenburg-Schwerin.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/parent> <http://dbpedia.org/resource/Alexandrine_of_Mecklenburg-Schwerin> . <http://dbpedia.org/resource/Frederick_IX_of_Denmark> <http://dbpedia.org/property/father> ?v2 . ?result <http://dbpedia.org/property/father> ?v2 . },"```sparql
SELECT ?person WHERE {
  ?frederick ix:father ?christian .
  ?alexandrine ix:mother ?frederick .
  ?christian foaf:name ""Christian X""@en .
  ?alexandrine foaf:name ""Alexandrine of Mecklenburg-Schwerin""@en .
}
```",3,3,4,2,2,3,3,71,0,0,2,0,0.0,0
273,7,train,Give me the spouse of the child of Giovanni Agnelli.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/spouse> ?v1 . <http://dbpedia.org/resource/Giovanni_Agnelli> <http://dbpedia.org/ontology/child> ?v1 . },"```sparql
SELECT DISTINCT ?spouse WHERE {
  ?giovanni dbo:givenName ""Giovanni""@en .
  ?giovanni foaf:surname ""Agnelli""@en .
  ?giovanni dbo:child ?child .
  ?child dbp:spouse ?spouse .
}
```",2,2,3,2,1,3,2,20,0,0,1,0,0.0,0
965,22,train,"Give me the spouse of Prince Louis of Battenberg and parent of the person born, that is a noble, as Prince George of Battenberg.","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/spouse> <http://dbpedia.org/resource/Prince_Louis_of_Battenberg> . ?v0 <http://dbpedia.org/ontology/parent> ?result . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Noble>. ?v0 <http://dbpedia.org/property/birthName> ""Prince George of Battenberg""@en . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?spouse WHERE {
  ?princeLouis a dbo:Person ;
              foaf:name ""Prince Louis of Battenberg""@en .
  
  ?princeGeorge a dbo:Person ;
                foaf:name ""Prince George of Battenberg""@en ;
                dbo:mother ?spouse .

  ?princeLouis dbo:spouse ?spouse .
}
```",3,4,4,2,2,3,3,71,0,0,1,0,0.0,0
417,6,train,Who is the father of Frederick IX of Denmark?,SELECT ?result WHERE { <http://dbpedia.org/resource/Frederick_IX_of_Denmark> <http://dbpedia.org/property/father> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>

SELECT ?father WHERE {
  ?person a dbo:Monarch ;
          foaf:name ""Frederick IX""@en .
  ?person dbo:father ?father .
}
```",1,1,2,1,1,3,3,71,0,0,1,0,0.0,0
36,16,train,Give me the person born as the birth name of Ayo Makun and actor of Being Mrs Elliot.,SELECT ?result WHERE { ?result <http://dbpedia.org/property/birthName> ?v0 . <http://dbpedia.org/resource/Being_Mrs_Elliot> <http://dbpedia.org/ontology/starring> ?result . <http://dbpedia.org/resource/Ayo_Makun> <http://dbpedia.org/property/birthName> ?v0 . },"```sparql
SELECT ?person WHERE {
  ?person dbo:birthName ""Ayo Makun""@en .
  ?person dbo:spouse ?actorRole .
  ?actorRole rdfs:label ""Being Mrs Elliot""@en .
}
```",3,3,4,2,2,2,3,28,0,0,1,0,0.0,0
124,31,train,"Give me the military force of Battle of Tamai and commander in the war, that is a societal event and a military conflict, of the reference, that is Australian and an organisation and a military unit, to 'A' Battery, Royal Australian Artillery.","SELECT ?result WHERE { ?v1 <http://xmlns.com/foaf/0.1/name> ""'A' Battery, Royal Australian Artillery""@en . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?v1 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Australia>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?v1 <http://dbpedia.org/ontology/battle> ?v0 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryUnit>. ?v0 <http://dbpedia.org/ontology/commander> ?result . ?result <http://dbpedia.org/ontology/battle> <http://dbpedia.org/resource/Battle_of_Tamai> . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?battle ?force1 ?commander1 ?force2 ?commander2 WHERE {
  # Identify the Battle of Tamai as a societal event and military conflict
  VALUES ?battle { dbr:Battle_of_Tamai }
  
  # Retrieve information about the military forces involved in the battle
  ?battle dbo:participatingMilitaryUnit ?unit1 .
  ?unit1 dbo:commander ?commander1 .
  
  ?battle dbo:opposingMilitaryUnit ?unit2 .
  ?unit2 dbo:commander ?commander2 .

  # Ensure one of the units is an Australian military unit, specifically 'A' Battery
  OPTIONAL {
    ?unit1 rdfs:label ""A Battery, Royal Australian Artillery""@en .
  }
  
  # Filter to ensure at least one force is Australian
  FILTER (
    EXISTS { ?unit1 dbo:nationality dbr:Australia } ||
    EXISTS { ?unit2 dbo:nationality dbr:Australia }
  )
}
```",4,9,5,3,2,3,3,71,0,0,1,0,0.0,0
98,4,train,Give me the parent of Emperor Rokujō and child of Emperor Go-Shirakawa.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/parent> <http://dbpedia.org/resource/Emperor_Go-Shirakawa> . <http://dbpedia.org/resource/Emperor_Rokujō> <http://dbpedia.org/ontology/parent> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?parent WHERE {
  # Find Emperor Go-Shirakawa and his children
  ?goShirakawa a dbo:Monarch ;
               foaf:name ""Emperor Go-Shirakawa""@en ;
               dbo:child ?child .

  # Find the child of Go-Shirakawa who is also the parent of Emperor Rokujō (Sutoku)
  ?parent a dbo:Monarch ;
          foaf:name ""Emperor Toba""@en ;
          dbo:child dbr:Sutoku_Emperor .

  FILTER (?child = ?parent)
}
```",2,2,3,1,2,2,2,9,0,0,1,0,0.0,0
976,32,train,"Give me the office of the mayor, that is a politician and an office holder and Turkish, of Nation Alliance (Turkey) and office of the leader, that is a politician, of Grand National Assembly of Turkey.",SELECT ?result WHERE { <http://dbpedia.org/resource/Grand_National_Assembly_of_Turkey> <http://dbpedia.org/ontology/leader> ?v1 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. <http://dbpedia.org/resource/Nation_Alliance_(Turkey)> <http://dbpedia.org/property/leader> ?v3 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v3 <http://dbpedia.org/ontology/nationality> <http://dbpedia.org/resource/Turkey>. ?v3 <http://dbpedia.org/property/office> ?result . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v1 <http://dbpedia.org/property/office> ?result . },"```sparql
# Query for Mayor of Nation Alliance (Turkey) who is Turkish
SELECT ?mayor WHERE {
  ?mayor dbo:office dbr:Municipalities_of_Turkey.
  ?mayor dbo:nationality dbr:Turkish_people.
  ?mayor dbo:politicalParty dbr:Nation_Alliance_(Turkey).
}

# Query for Leader of the Grand National Assembly of Turkey
SELECT ?leader WHERE {
  ?leader dbo:office dbr:Speaker_of_the_Grand_National_Assembly_of_Turkey.
  ?leader dbo:politicalAffiliation ?party.
}
```",4,8,5,2,2,3,3,71,0,0,1,0,0.0,0
47,11,train,Give me the office of the administration of Jagdeep Dhankhar.,SELECT ?result WHERE { ?v0 <http://dbpedia.org/property/office> ?result . ?v0 <http://dbpedia.org/property/governor> <http://dbpedia.org/resource/Jagdeep_Dhankhar> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?office WHERE {
  ?person dbo:position ?office .
  ?person foaf:name ""Jagdeep Dhankhar""@en .
}
```",2,2,3,2,1,3,3,71,0,0,80,0,0.0,0
216,13,train,"Give me the player in the coach, that is a soccer player and a sports manager and a soccer manager, of Bosnia and Herzegovina national under-18 football team.",SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/team> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerManager>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerPlayer>. <http://dbpedia.org/resource/Bosnia_and_Herzegovina_national_under-18_football_team> <http://dbpedia.org/ontology/coach> ?v1 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsManager>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?player WHERE {
  ?player a dbo:SoccerPlayer .
  ?player dbo:occupation ?occupation1 .
  FILTER (str(?occupation1) = ""Soccer player"" || str(?occupation1) = ""Sports manager"") .

  ?player dbo:occupation ?occupation2 .
  FILTER (str(?occupation2) = ""Sports manager"") .

  ?player dbo:coachForTeam ?team .
  ?team rdfs:label ?teamLabel .
  FILTER (langMatches(lang(?teamLabel), ""en"") && 
          strContains(lcase(?teamLabel), ""bosnia and herzegovina national under-18 football team""))
}
```",2,5,3,2,1,3,3,71,0,0,13,0,0.0,0
645,23,train,Give me the commander in the force of the commander in Siege of Madrid.,SELECT ?result WHERE { ?v0 <http://dbpedia.org/ontology/commander> ?result . <http://dbpedia.org/resource/Siege_of_Madrid> <http://dbpedia.org/ontology/commander> ?v2 . ?v0 <http://dbpedia.org/ontology/commander> ?v2 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?commander WHERE {
  ?event dbo:location dbr:Madrid .
  ?event dbo:eventType dbr:Siege_of_Madrid .
  ?event dbo:participant [
    a dbo:MilitaryConflict ;
    dbo:commander ?commander
  ] .
}
```",3,3,4,3,1,3,3,71,0,0,274,0,0.0,0
892,34,train,Give me the entity in the profession of the true self of Enrico Crolla and entity in Province of Reggio Emilia.,"SELECT ?result WHERE { ?v3 <http://xmlns.com/foaf/0.1/givenName> ""Enrico Crolla""@en . ?result <http://dbpedia.org/ontology/province> <http://dbpedia.org/resource/Province_of_Reggio_Emilia> . ?result <http://dbpedia.org/ontology/country> ?v1 . ?v3 <http://dbpedia.org/property/occupation> ?v1 . }","```sparql
# Query to find the profession of Enrico Crolla
SELECT ?profession WHERE {
  wd:Q123456 rdfs:label ""Enrico Crolla""@en .
  OPTIONAL { wd:Q123456 dbo:occupation ?profession . }
}

# Query to find an entity in the Province of Reggio Emilia
SELECT DISTINCT ?entity ?label WHERE {
  ?entity wdt:P131* wd:Q1234 ; # P131 is ""located in the administrative territorial entity""
           rdfs:label ?label .
  FILTER (LANG(?label) = 'en')
}
```

Note: Replace `wd:Q123456` with the actual DBpedia identifier for Enrico Crolla and `wd:Q1234` with the identifier for Province of Reggio Emilia.",4,4,5,3,2,3,3,71,0,0,40,0,0.0,0
130,2,train,"Give me the native, that is a coach and a college coach, of Madison, Alabama.","SELECT ?result WHERE { ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Coach>. ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/CollegeCoach>. ?result <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Madison,_Alabama> . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?person ?name WHERE {
  ?person dbo:birthPlace dbr:Madison,_Alabama ;
          dbo:occupation ?occupation .
  
  FILTER (
    (CONTAINS(LCASE(STR(?occupation)), ""coach"") &&
     CONTAINS(LCASE(STR(?occupation)), ""college""))
  )
  
  OPTIONAL { ?person rdfs:label ?name . }
}
ORDER BY ?name
LIMIT 1
```",1,3,2,1,1,3,2,20,0,0,3,0,0.0,0
353,5,train,"Give me the alma mater of the awardee of Medal of the Order ""For Merit to the Fatherland"".",SELECT ?result WHERE { ?v1 <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/Medal_of_the_Order_%22For_Merit_to_the_Fatherland%22> . ?v1 <http://dbpedia.org/ontology/almaMater> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT DISTINCT ?recipient ?almaMater WHERE {
  ?medal a dbo:Award ;
         rdfs:label ""Medal of the Order 'For Merit to the Fatherland'""@en .
  
  ?medal dbo:recipient ?recipient .

  OPTIONAL { 
    ?recipient foaf:almaMater ?almaMater .
  }
}
```",2,2,3,2,1,2,2,9,0,0,8,0,0.0,0
326,11,train,"Give me the person decedent at France and resident of the birthplace, that is a state and British, of David Jessel.",SELECT ?result WHERE { ?v2 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/United_Kingdom>. ?result <http://dbpedia.org/property/residence> ?v2 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/AdministrativeRegion>. ?result <http://dbpedia.org/ontology/deathPlace> <http://dbpedia.org/resource/France> . <http://dbpedia.org/resource/David_Jessel> <http://dbpedia.org/ontology/birthPlace> ?v2 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?personDecedent WHERE {
  # Step 1: Get David Jessel's birthplace
  dbr:David_Jessel dbo:birthPlace ?birthPlace .

  # Step 2: Ensure the birthplace is a state and British
  ?birthPlace rdf:type dbo:State .
  ?birthPlace dbo:country dbr:United_Kingdom .

  # Step 3: Find individuals who were residents of this place and died in France
  ?personDecedent dbo:residence ?birthPlace ;
                  dbo:deathPlace dbr:France .
}
```",3,5,4,2,2,3,2,20,0,0,1,0,0.0,0
839,18,train,Give me the band of Peter Schorowsky and band of Kevin Russell (musician) and band of Matthias Röhr.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/bandMember> <http://dbpedia.org/resource/Matthias_Röhr> . <http://dbpedia.org/resource/Kevin_Russell_(musician)> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?result <http://dbpedia.org/ontology/bandMember> <http://dbpedia.org/resource/Peter_Schorowsky> . },"```sparql
SELECT ?person ?band WHERE {
  VALUES ?person { 
    dbr:Peter_Schorowsky 
    dbr:Kevin_Russell_(musician) 
    dbr:Matthias_Röhr 
  }
  
  ?person dbo:musicalArtist ?band .
}
```",3,3,4,1,3,3,3,71,0,0,1,0,0.0,0
382,0,train,Give me the birthplace of Björn Joppe.,SELECT ?result WHERE { <http://dbpedia.org/resource/Björn_Joppe> <http://dbpedia.org/ontology/birthPlace> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?birthPlace WHERE {
  ?person a dbo:Person ;
          foaf:name ""Björn Joppe""@en .
  OPTIONAL { ?person dbo:birthPlace ?birthPlace . }
}
```",1,1,2,1,1,3,2,20,2,0,0,1.0,1.0,1.0
158,7,train,"Give me the entity in the award, that is a country, of Adelbert Cronkhite.",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/country> ?v1 . <http://dbpedia.org/resource/Adelbert_Cronkhite> <http://dbpedia.org/property/awards> ?v1 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?award ?country WHERE {
  ?person dbo:name ""Adelbert Cronkhite""@en .
  ?person dbo:award ?award .
  OPTIONAL { ?award dbo:awardingBody ?body . }
  OPTIONAL { ?body a dbo:Country . ?body rdfs:label ?country . FILTER (lang(?country) = 'en') }
}
```",2,3,3,2,1,3,2,20,0,0,44301,0,0.0,0
47,33,train,"Give me the office of the awardee of the award, that is an award, of Mantu Ghosh and office of Suvendu Adhikari.",SELECT ?result WHERE { ?v3 <http://dbpedia.org/property/office> ?result . ?v3 <http://dbpedia.org/property/awards> ?v0 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Award>. <http://dbpedia.org/resource/Mantu_Ghosh> <http://dbpedia.org/property/awards> ?v0 . <http://dbpedia.org/resource/Suvendu_Adhikari> <http://dbpedia.org/property/office> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?award ?awardeeOffice ?suvenduOffice WHERE {
  # Find awards received by Mantu Ghosh
  VALUES (?mantu) { dbr:Mantu_Ghosh }
  
  ?mantu dbo:awardReceived ?award .
  
  # Find other awardees of the same award and their offices
  ?otherAwardee dbo:awardReceived ?award .
  ?otherAwardee dbo:officeHeld ?awardeeOffice .

  # Get Suvendu Adhikari's office
  VALUES (?suvendu) { dbr:Suvendu_Adhikari }
  ?suvendu dbo:officeHeld ?suvenduOffice .
}
```",4,5,5,3,2,3,3,71,0,0,1,0,0.0,0
124,22,train,"Give me the commander in Mahdist War and military force of the force, that is a societal event and a military conflict, of Herbert Kitchener, 1st Earl Kitchener.","SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Herbert_Kitchener,_1st_Earl_Kitchener> . <http://dbpedia.org/resource/Mahdist_War> <http://dbpedia.org/ontology/commander> ?result . ?result <http://dbpedia.org/ontology/battle> ?v1 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?force WHERE {
  ?kitchener a dbo:Person ;
             foaf:name ""Herbert Kitchener"" ;
             dbo:commander ?force .
  
  ?war a dbo:MilitaryConflict, dbo:SocietalEvent ;
       rdfs:label ?warLabel .

  FILTER(CONTAINS(LCASE(?warLabel), ""mahdist war""))

  ?kitchener dbo:militaryConflict ?war .
}
```",3,5,4,2,2,3,3,71,0,0,3,0,0.0,0
329,9,train,Give me the entity in United Kingdom and entity in Northern Ireland.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/United_Kingdom> . ?result <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Northern_Ireland> . },"```sparql
SELECT ?ukEntity ?niEntity WHERE {
  # Find an entity in the United Kingdom
  ?ukEntity dbo:country dbr:United_Kingdom .
  
  # Find an entity in Northern Ireland
  ?niEntity dbo:region dbr:Northern_Ireland .
}
```",2,2,3,1,2,2,3,28,531,42470,0,0.012348550033720146,1.0,0.024395846733437473
527,6,train,Give me the author of The Boy Who Kicked Pigs and actor of The Book Tower.,SELECT ?result WHERE { <http://dbpedia.org/resource/The_Book_Tower> <http://dbpedia.org/property/starring> ?result . <http://dbpedia.org/resource/The_Boy_Who_Kicked_Pigs> <http://dbpedia.org/property/author> ?result . },"```sparql
# Query to find the author of ""The Boy Who Kicked Pigs""
SELECT ?author WHERE {
  ?book dbo:title ""The Boy Who Kicked Pigs""@en .
  ?book dbo:author ?author .
}

# Query to find an actor from ""The Book Tower""
SELECT ?actor WHERE {
  ?film dbo:title ""The Book Tower""@en .
  ?film dbo:starring ?actor .
}
```",2,2,3,1,2,3,2,20,0,0,1,0,0.0,0
933,39,train,"Give me the reference to Alan Warner and band of the band, that is a group and a band and an organisation, of the person born, that is a musical artist, on 1947-04-21.","SELECT ?result WHERE { ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Group>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?v2 <http://dbpedia.org/ontology/associatedMusicalArtist> ?v0 . ?v2 <http://dbpedia.org/ontology/birthDate> ""1947-04-21""^^<http://www.w3.org/2001/XMLSchema#date> . ?v0 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Band>. ?result <http://xmlns.com/foaf/0.1/name> ""Alan Warner""@en . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?person ?band WHERE {
  ?person a dbo:MusicalArtist ;
          dbo:birthday ""1947-04-21""^^xsd:date .
  
  ?person dbo:memberOfBand ?band .
  ?band a dbo:Band, dbo:Organization, dbo:Group .
}
```",4,8,5,3,2,3,3,71,0,0,1,0,0.0,0
200,6,train,Give me the band member of the band of Revenge (Canadian band).,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/associatedMusicalArtist> ?v0 . <http://dbpedia.org/resource/Revenge_(Canadian_band)> <http://dbpedia.org/ontology/associatedMusicalArtist> ?v0 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?member WHERE {
  ?band a dbo:Band ;
        rdfs:label ""Revenge""@en .
  FILTER(CONTAINS(LANG(?band), ""en""))
  OPTIONAL { ?band dbo:country dbr:Canada . }
  
  ?bandMember dbo:bandMember ?band .
  ?bandMember foaf:name ?member .
}
```",2,2,3,2,1,2,2,9,0,0,9,0,0.0,0
232,5,train,"Give me the artistic movement of the person born, that is a writer, on 1849-09-14.","SELECT ?result WHERE { ?v0 <http://dbpedia.org/ontology/movement> ?result . ?v0 <http://dbpedia.org/ontology/birthDate> ""1849-09-14""^^<http://www.w3.org/2001/XMLSchema#date> . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Writer>. }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?writer ?artisticMovement WHERE {
  ?writer a dbo:Writer ;
          dbo:birthDate ""1849-09-14""^^xsd:date .
  OPTIONAL { ?writer dbo:artisticMovement ?artisticMovement . }
}
```",2,3,3,2,1,2,2,9,0,1,1,0.0,0.0,0
236,11,train,"Give me the party member of Democratic-Republican Party and party member of the administration, that is an organisation, of John Adams.",SELECT ?result WHERE { ?v2 <http://dbpedia.org/property/leader> <http://dbpedia.org/resource/John_Adams> . ?result <http://dbpedia.org/ontology/party> ?v2 . ?result <http://dbpedia.org/ontology/party> <http://dbpedia.org/resource/Democratic-Republican_Party> . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?partyMemberOfDemocraticRepublicanParty ?partyMemberOfAdministration
WHERE {
  # Find John Adams' political affiliations
  dbr:John_Adams dbo:politicalAffiliation ?affiliation .

  # Check if he was a member of the Democratic-Republican Party
  OPTIONAL { 
    ?affiliation rdfs:label ""Democratic-Republican Party""@en .
    BIND(""Yes"" AS ?partyMemberOfDemocraticRepublicanParty)
  }
  
  # Default to No if not found
  FILTER(!bound(?partyMemberOfDemocraticRepublicanParty))
  BIND(""No"" AS ?partyMemberOfDemocraticRepublicanParty)

  # Find the party associated with his administration
  OPTIONAL {
    dbr:John_Adams dbo:presidentOf ?country .
    ?country dbo:headOfState ?administration .
    ?administration dbo:politicalAffiliation ?adminParty .
    ?adminParty rdfs:label ?partyLabel .
    FILTER(lang(?partyLabel) = ""en"")
    BIND(str(?partyLabel) AS ?partyMemberOfAdministration)
  }
  
  # Default to unknown if not found
  FILTER(!bound(?partyMemberOfAdministration))
  BIND(""Unknown"" AS ?partyMemberOfAdministration)
}
```",3,4,4,2,2,3,2,20,0,0,18,0,0.0,0
507,18,train,"Give me the director of Entertaining Mr Sloane (film) and professional in Film director, television director and spouse of Anne V. Coates.","SELECT ?result WHERE { <http://dbpedia.org/resource/Entertaining_Mr_Sloane_(film)> <http://dbpedia.org/ontology/director> ?result . ?result <http://dbpedia.org/ontology/spouse> <http://dbpedia.org/resource/Anne_V._Coates> . ?result <http://dbpedia.org/property/occupation> ""Film director, television director""@en . }","```sparql
SELECT ?director WHERE {
  ?film dcterms:title ""Entertaining Mr Sloane""@en .
  ?film dbo:director ?director .
  ?director dbo:profession ?profession .
  FILTER EXISTS { ?profession rdfs:label ""Film director""@en }
  FILTER EXISTS { ?profession rdfs:label ""Television director""@en }
  ?director foaf:mbox ?email . # Assuming there's a way to identify the person uniquely
  OPTIONAL {
    ?director dbo:spouse ?spouse .
    ?spouse foaf:name ""Anne V. Coates"" .
  }
}
```",3,3,4,1,3,3,3,71,0,0,1,0,0.0,0
129,9,train,Give me the associated musical artist of EarthGang and associated musical artist of Saba (rapper).,SELECT ?result WHERE { <http://dbpedia.org/resource/EarthGang> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . <http://dbpedia.org/resource/Saba_(rapper)> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . },"```sparql
SELECT ?artist WHERE {
  VALUES (?band ?person) { 
    (""EarthGang"" ""Saba_(rapper)"")
  }
  
  ?band dbo:associatedMusicalArtist ?artist .
  OPTIONAL {
    ?person dbo:associatedMusicalArtist ?artist .
  }
}
```",2,2,3,1,2,2,3,28,0,0,1,0,0.0,0
573,14,train,"Give me the parent of the author, that is a politician and an office holder, of Exchequer Standards.",SELECT ?result WHERE { <http://dbpedia.org/resource/Exchequer_Standards> <http://dbpedia.org/property/author> ?v1 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v1 <http://dbpedia.org/ontology/parent> ?result . },"```sparql
SELECT ?parent WHERE {
  ?author dbo:workExample dbr:Exchequer_Standards .
  ?author dbo:occupation dbr:Politician ;
          dbo:officeHolder true .
  ?author foaf:familyName ?name .
  ?author dbo:parent ?parent .
  ?parent dbo:occupation dbr:Politician ;
          dbo:officeHolder true .
}
```",2,4,3,2,1,3,3,71,0,0,2,0,0.0,0
773,2,train,Give me the parent of Charles the Fat.,SELECT ?result WHERE { <http://dbpedia.org/resource/Charles_the_Fat> <http://dbpedia.org/ontology/parent> ?result . },"```sparql
SELECT ?parentLabel WHERE {
  ?charles dbo:givenName ""Charles"" .
  ?charles dbo:familyName ""the Fat"" .
  ?charles dbo:fatherOrMother ?parent .
  ?parent rdfs:label ?parentLabel .
  FILTER(LANG(?parentLabel) = 'en')
}
```",1,1,2,1,1,3,3,71,0,0,2,0,0.0,0
41,7,train,Give me the party of Enda Kenny and party of Mark Durkan.,SELECT ?result WHERE { <http://dbpedia.org/resource/Enda_Kenny> <http://dbpedia.org/ontology/party> ?result . <http://dbpedia.org/resource/Mark_Durkan> <http://dbpedia.org/ontology/party> ?result . },"```sparql
SELECT ?person ?name ?partyLabel WHERE {
  VALUES (?person ?name) { 
    (dbpedia:Enda_Kenny ""Enda Kenny"") 
    (dbpedia:Mark_Durkan ""Mark Durkan"")
  }
  
  ?person dbo:affiliation ?party .
  ?party rdfs:label ?partyLabel .
  
  FILTER(LANG(?partyLabel) = 'en')
}
```",2,2,3,1,2,2,3,28,0,0,1,0,0.0,0
865,18,train,Give me the father of AK Abdul Momen and native of British Raj and father of Shahla Khatun.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/British_Raj> . <http://dbpedia.org/resource/AK_Abdul_Momen> <http://dbpedia.org/property/father> ?result . <http://dbpedia.org/resource/Shahla_Khatun> <http://dbpedia.org/property/father> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?fatherLabel WHERE {
  ?momen dbo:label ""AK Abdul Momen""@en .
  ?momen dbo:father ?father .
  ?father dbo:label ?fatherLabel .
  
  OPTIONAL { 
    ?father dbo:nativePlace ?nativePlace .
    FILTER(CONTAINS(LCASE(STR(?nativePlace)), ""british raj""))
  }
  
  OPTIONAL {
    ?shahla dbo:father ?father .
    ?shahla dbo:label ""Shahla Khatun""@en .
  }
}
```",3,3,4,1,3,3,3,71,0,0,1,0,0.0,0
582,31,train,"Give me the reference to the residence of the reference, that is a scientist, to Hirotaka Sugawara and player in Kazuaki Nagasawa.","SELECT ?result WHERE { ?v1 <http://dbpedia.org/property/residence> ?v0 . ?v1 <http://xmlns.com/foaf/0.1/name> ""Hirotaka Sugawara""@en . ?result <http://xmlns.com/foaf/0.1/name> ?v0 . <http://dbpedia.org/resource/Kazuaki_Nagasawa> <http://dbpedia.org/ontology/team> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Scientist>. }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?scientistResidence WHERE {
  # Find Hirotaka Sugawara's profession or notable association
  ?sugawara a dbo:Person ;
            foaf:name ""Hirotaka Sugawara"" .
  
  # Find Kazuaki Nagasawa's profession or notable association
  ?nagasawa a dbo:Person ;
            foaf:name ""Kazuaki Nagasawa"" .

  # Identify a scientist connected to both individuals
  ?scientist a dbo:Scientist ;
             dbo:reference ?sugawara ;
             dbo:reference ?nagasawa .
  
  # Retrieve the residence of that scientist
  ?scientist dbo:residence ?scientistResidence .
}
```",4,5,5,3,2,3,3,71,0,0,1,0,0.0,0
645,15,train,Give me the force of the commander in Siege of Madrid.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/commander> ?v1 . <http://dbpedia.org/resource/Siege_of_Madrid> <http://dbpedia.org/ontology/commander> ?v1 . },"```sparql
SELECT ?commander ?forceSize WHERE {
  ?event dbo:wikiPageRedirects db:Q1234567 . # Replace Q1234567 with the DBpedia resource for the Siege of Madrid
  ?event dbo:participatedInMilitaryConflict dbr:Spanish_Civil_War .
  ?event dbo:commander ?commander .
  ?commander rdfs:label ?name .
  FILTER(CONTAINS(LCASE(?name), ""franco"") || CONTAINS(LCASE(?name), ""miaja"")) .
  OPTIONAL {
    ?commander dbo:militaryForceSize ?forceSize .
  }
}
```

Note: The query assumes that DBpedia has structured data about the Siege of Madrid and its commanders, including their military force sizes. You may need to adjust the resource identifier for the Siege of Madrid (`Q1234567`) based on actual DBpedia entries.",2,2,3,2,1,3,3,71,0,0,65,0,0.0,0
417,22,train,"Give me the child of the child, that is a royalty, of Frederick Francis III, Grand Duke of Mecklenburg-Schwerin and spouse of Princess Caroline-Mathilde of Denmark.","SELECT ?result WHERE { ?v1 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Frederick_Francis_III,_Grand_Duke_of_Mecklenburg-Schwerin> . ?result <http://dbpedia.org/ontology/spouse> <http://dbpedia.org/resource/Princess_Caroline-Mathilde_of_Denmark> . ?result <http://dbpedia.org/ontology/parent> ?v1 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?grandchild ?title WHERE {
  # Frederick Francis III, Grand Duke of Mecklenburg-Schwerin
  dbr:Friedrich_Franz_III,_Grand_Duke_of_Mecklenburg-Schwerin dbo:spouse ?spouse .
  
  # Find the child married to Princess Caroline-Mathilde of Denmark
  ?child dbo:spouse dbr:Caroline_Mathilde_of_Mecklenburg-Schwerin ;
         dbo:parent dbr:Friedrich_Franz_III,_Grand_Duke_of_Mecklenburg-Schwerin .
  
  # Find the grandchildren (children of the child found above)
  ?grandchild dbo:parent ?child .

  # Check if any grandchild has a royal title
  OPTIONAL { ?grandchild dbo:title ?title . FILTER regex(?title, ""King|Queen|Prince|Princess"", ""i"") }
  
  FILTER EXISTS { ?grandchild dbo:title ?title } .
}
```",3,4,4,2,2,3,3,71,0,0,1,0,0.0,0
933,5,train,Who is the professional in Musician?,SELECT ?result WHERE { ?result <http://dbpedia.org/property/occupation> <http://dbpedia.org/resource/Musician> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?person ?name WHERE {
  ?person a dbo:Person .
  ?person dbo:occupation ?occupation .
  ?occupation rdfs:subClassOf* dbo:Musician .
  OPTIONAL { ?person foaf:name ?name . }
}
ORDER BY ?name
LIMIT 100
```",1,1,2,1,1,3,3,71,0,0,1825,0,0.0,0
865,27,train,Give me the father of the child of the father of Abul Maal Abdul Muhith.,SELECT ?result WHERE { ?v0 <http://dbpedia.org/property/father> ?v2 . <http://dbpedia.org/resource/Abul_Maal_Abdul_Muhith> <http://dbpedia.org/property/father> ?v2 . ?v0 <http://dbpedia.org/property/father> ?result . },"```sparql
SELECT ?grandfather ?childFather WHERE {
  ?muhith dbo:father ?father .
  FILTER(STR(?muhith) = ""Abul_Maal_Abdul_Muhith"") .

  ?father dbo:child ?child .
  
  ?child dbo:father ?childFather .
}
```",3,3,4,3,1,3,3,71,0,0,1,0,0.0,0
443,17,train,"Give me the birthplace of the person born, that is a musical artist and an artist, on 1949-11-20 and birthplace of Carl Larsson.","SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. ?v1 <http://dbpedia.org/ontology/birthPlace> ?result . <http://dbpedia.org/resource/Carl_Larsson> <http://dbpedia.org/ontology/birthPlace> ?result . ?v1 <http://dbpedia.org/ontology/birthDate> ""1949-11-20""^^<http://www.w3.org/2001/XMLSchema#date> . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. }","```sparql
# Query for the person born on 1949-11-20 who is both a musical artist and an artist
SELECT ?birthPlace WHERE {
  ?person dbo:birthDate ""1949-11-20""^^xsd:date .
  ?person dbo:occupation ?occupation .
  FILTER (
    EXISTS { ?person dbo:occupation dbp:musical_artist . }
    && EXISTS { ?person dbo:occupation dbp:artist . }
  )
  ?person dbo:birthPlace ?birthPlace .
}

UNION

# Query for Carl Larsson's birthplace
SELECT ?birthPlace WHERE {
  dbpedia:Carl_Larsson dbo:birthPlace ?birthPlace .
}
```",3,5,4,2,2,2,3,28,0,0,1,0,0.0,0
445,29,train,Give me the entity in United Kingdom and entity in England and death place of the awardee of Royal Astronomical Society.,SELECT ?result WHERE { ?v3 <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/Royal_Astronomical_Society> . ?result <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/United_Kingdom> . ?result <http://dbpedia.org/ontology/location> <http://dbpedia.org/resource/England> . ?v3 <http://dbpedia.org/ontology/deathPlace> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?awardee ?deathPlace WHERE {
  ?awardee dbo:awardReceived dbr:Royal_Astronomical_Society .
  
  OPTIONAL { ?awardee dbo:birthPlace dbr:England . }
  OPTIONAL { ?awardee dbo:deathPlace ?deathPlace . }

  FILTER EXISTS { 
    ?awardee dbo:birthPlace|dbo:deathPlace dbr:United_Kingdom .
  }

  FILTER NOT EXISTS {
    ?awardee dbo:deathPlace ?deathPlace .
    FILTER (isBlank(?deathPlace))
  }
}
```",4,4,5,2,3,3,3,71,0,0,1,0,0.0,0
582,36,train,"Give me the figure known as the nickname of the team, that is an organisation, of Hajime Moriyasu and reference to Japan.","SELECT ?result WHERE { ?result <http://dbpedia.org/property/nickname> ?v1 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?v0 <http://dbpedia.org/property/nickname> ?v1 . ?v0 <http://dbpedia.org/ontology/coach> <http://dbpedia.org/resource/Hajime_Moriyasu> . ?result <http://xmlns.com/foaf/0.1/name> ""Japan""@en . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?team ?nickname WHERE {
  ?person a dbo:Person ;
          foaf:name ""Hajime Moriyasu""@en .
  ?person dbo:coach ?team .
  ?team dbo:country dbr:Japan .
  OPTIONAL { ?team rdfs:label ?nickname FILTER (lang(?nickname) = 'en') }
}
```",4,5,5,3,2,3,3,71,0,0,1,0,0.0,0
935,12,train,Give me the death place of Abdul Raziq Bugti and headquarter of the office of Sanaullah Khan Zehri.,SELECT ?result WHERE { <http://dbpedia.org/resource/Abdul_Raziq_Bugti> <http://dbpedia.org/ontology/deathPlace> ?result . ?v0 <http://dbpedia.org/ontology/location> ?result . <http://dbpedia.org/resource/Sanaullah_Khan_Zehri> <http://dbpedia.org/property/office> ?v0 . },"```sparql
SELECT ?deathPlace ?headquarterLocation WHERE {
  # Find death place of Abdul Raziq Bugti
  dbpedia:Abdul_Razzaq_Bugti dbo:deathPlace ?deathPlace .

  # Assuming Sanaullah Khan Zehri was a Chief Minister, find the headquarters location
  OPTIONAL {
    ?zehri foaf:name ""Sanaullah Khan Zehri"" .
    ?zehri dbo:office dbpedia:Chief_Minister_of_Balochistan .
    ?office dbo:headquarterLocation ?headquarterLocation .
  }
}
```",3,3,4,2,2,3,2,20,0,0,1,0,0.0,0
232,1,train,"Give me the claim to fame of Katherine ""Kitty"" Marshall.",SELECT ?result WHERE { <http://dbpedia.org/resource/Katherine_%22Kitty%22_Marshall> <http://dbpedia.org/ontology/knownFor> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?claimToFame WHERE {
  ?person rdfs:label ""Katherine \""Kitty\"" Marshall""@en.
  OPTIONAL { ?person dbo:notableWork ?work. }
  OPTIONAL { ?person dbo:award ?award. }
  OPTIONAL { ?person dbo:occupation ?occupation. }
  
  FILTER (lang(?claimToFame) = 'en')
  
  BIND(CONCAT(""Notable works: "", IF(BOUND(?work), STR(?work), """"), 
              "" | Awards: "", IF(BOUND(?award), STR(?award), """"),
              "" | Occupation: "", IF(BOUND(?occupation), STR(?occupation), """")) AS ?claimToFame)
}
LIMIT 1
```",1,1,2,1,1,2,2,9,0,0,2,0,0.0,0
573,2,train,Give me the parent of John Quincy Adams.,SELECT ?result WHERE { <http://dbpedia.org/resource/John_Quincy_Adams> <http://dbpedia.org/ontology/parent> ?result . },"```sparql
SELECT ?parent WHERE {
  dbpedia:John_Quincy_Adams dbo:father ?parent .
}
```",1,1,2,1,1,3,3,71,0,0,2,0,0.0,0
554,13,train,Give me the leader of the administration of the party member of Independent politician.,SELECT ?result WHERE { ?v1 <http://dbpedia.org/property/leader> ?result . ?v0 <http://dbpedia.org/ontology/party> <http://dbpedia.org/resource/Independent_politician> . ?v1 <http://dbpedia.org/property/leader> ?v0 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?leader ?administration WHERE {
  ?leader dbo:politicalParty dbr:Independent_politician .
  ?leader dbo:officeHolder ?position .
  ?position dbo:headOfStateOrGovernment true .
  OPTIONAL { ?leader dbo:spouse ?spouse . }
}
```",3,3,4,3,1,3,2,20,0,0,1909,0,0.0,0
124,12,train,Give me the military force of Battle of Tamai and military force of Battle of Atbara.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/battle> <http://dbpedia.org/resource/Battle_of_Tamai> . ?result <http://dbpedia.org/ontology/battle> <http://dbpedia.org/resource/Battle_of_Atbara> . },"```sparql
# Query for Battle of Tamai
SELECT ?participant WHERE {
  ?battle dbp:wikiPageID ""Battle_of_Tamai"" .
  ?battle dbo:battleParticipant ?participant .
}

UNION

# Query for Battle of Atbara
SELECT ?participant WHERE {
  ?battle dbp:wikiPageID ""Battle_of_Atbara_(1898)"" .
  ?battle dbo:battleParticipant ?participant .
}
```",2,2,3,1,2,3,3,71,0,0,1,0,0.0,0
93,10,train,"Who is the governor of the native, that is a politician, of Seattle?",SELECT ?result WHERE { ?v0 <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Seattle> . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v0 <http://dbpedia.org/property/governor> ?result . },"```sparql
SELECT ?governor WHERE {
  # Find the current governor of Washington State
  ?state dcterms:isPartOf wd:Q30 ;  # Q30 is the identifier for the United States
           dbo:governmentHead ?governor ;
           rdfs:label ""Washington""@en .
  
  # Find a notable politician from Seattle
  ?person dbo:nationality wd:Q30 ;
          dbo:birthPlace ?city ;
          dbo:occupation dbo:Politician ;
          rdfs:label ?name .

  FILTER(CONTAINS(LCASE(?city), ""seattle""))
  
  # Ensure the person is currently serving as governor
  OPTIONAL { ?governor foaf:name ?name . }
}
```",2,3,3,2,1,3,2,20,0,0,18,0,0.0,0
47,7,train,"Give me the entity, that is an award, in India.",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/India> . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Award>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?award WHERE {
  ?award a dbo:Award .
  OPTIONAL { ?award dbo:country dbr:India . }
  FILTER EXISTS { ?award dbo:country dbr:India . }
}
```",1,2,2,1,1,3,3,71,272,0,0,1.0,1.0,1.0
933,13,train,Give me the reference to the birth name of Alan Warner (musician).,SELECT ?result WHERE { <http://dbpedia.org/resource/Alan_Warner_(musician)> <http://dbpedia.org/property/birthName> ?v1 . ?result <http://xmlns.com/foaf/0.1/name> ?v1 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?birthName WHERE {
  dbr:Alan_Warner_musical_director dbo:birthName ?birthName .
}
```",2,2,3,2,1,3,3,71,0,0,1,0,0.0,0
791,4,train,"Give me the spouse, that is a royalty, of Emperor Takakura.",SELECT ?result WHERE { ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?result <http://dbpedia.org/ontology/spouse> <http://dbpedia.org/resource/Emperor_Takakura> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?spouse ?spouseLabel WHERE {
  VALUES ?emperor { dbr:Takakura }
  ?emperor dbo:spouse ?spouse .
  OPTIONAL { ?spouse dbo:title ?title . FILTER(CONTAINS(LCASE(?title), ""royalty"")) }
  SERVICE wikibase:label { bd:serviceParam wikibase:language ""[AUTO_LANGUAGE],en"". }
}
```",1,2,2,1,1,3,3,71,0,0,1,0,0.0,0
83,2,train,"Who is the member, that is a sports manager, of Kedah FA?",SELECT ?result WHERE { ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsManager>. ?result <http://dbpedia.org/ontology/team> <http://dbpedia.org/resource/Kedah_FA> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?manager WHERE {
  ?team dbp:name ""Kedah FA""@en .
  ?team dbo:manager ?manager .
  FILTER EXISTS { ?manager a dbo:SportsManager }
}
```",1,2,2,1,1,3,2,20,0,0,17,0,0.0,0
216,2,train,Give me the team of Ognjen Vukojević.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/coach> <http://dbpedia.org/resource/Ognjen_Vukojević> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?team WHERE {
  ?person a dbo:Footballer .
  ?person foaf:name ""Ognjen Vukojević""@en .
  OPTIONAL { ?person dbo:nationality dbr:Serbia . }
  ?person dbo:team ?team .
}
```",1,1,2,1,1,3,3,71,0,0,1,0,0.0,0
83,14,train,"Give me the party of the governor of the commander, that is a politician, in Central African Republic Civil War.",SELECT ?result WHERE { ?v0 <http://dbpedia.org/ontology/party> ?result . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. <http://dbpedia.org/resource/Central_African_Republic_Civil_War> <http://dbpedia.org/ontology/commander> ?v2 . ?v2 <http://dbpedia.org/property/governor> ?v0 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?person ?party WHERE {
  ?person a dbo:Politician ;
          dbo:nationality dbr:Central_African_Republic ;
          dbo:officeTitle ?title .
  
  OPTIONAL { ?person dbo:politicalParty ?party . }
  
  FILTER (
    CONTAINS(LCASE(?title), ""governor"") ||
    CONTAINS(LCASE(?title), ""president"") ||  # Including president as a high-ranking position
    CONTAINS(LCASE(?title), ""prime minister"")
  )
  
  OPTIONAL {
    ?person dbo:wikiPageWikiLink ?event .
    FILTER(CONTAINS(LCASE(STR(?event)), ""central african republic civil war""))
  }
}
```",3,4,4,3,1,3,2,20,0,0,12,0,0.0,0
507,11,train,Give me the spouse of the person born as Anne Voase Coates.,"SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/spouse> ?v0 . ?v0 <http://dbpedia.org/property/birthName> ""Anne Voase Coates""@en . }","```sparql
SELECT ?spouse WHERE {
  ?person foaf:name ""Anne Voase Coates""@en .
  ?person dbo:birthName ""Anne Voase Coates"" .
  ?person dbo:spouse ?spouse .
}
```",2,2,3,2,1,3,3,71,0,0,1,0,0.0,0
865,22,train,Give me the native of British Raj and father of the child of Abu Ahmad Abdul Hafiz.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/British_Raj> . ?v0 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Abu_Ahmad_Abdul_Hafiz> . ?v0 <http://dbpedia.org/property/father> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?nativeOfBritishRaj WHERE {
  # Step 1: Identify Abu Ahmad Abdul Hafiz and his children
  ?child dbo:parent dbr:Abu_Ahmad_Abdul_Hafiz .
  
  # Step 2: Determine the father of that child (assuming it's Abu Ahmad Abdul Hafiz)
  ?father dbo:child ?child .

  # Step 3: Check if this father is native to British Raj
  ?father dbo:nativePlace dbr:British_Raj .
  
  BIND(?father AS ?nativeOfBritishRaj)
}
```",3,3,4,2,2,3,3,71,0,0,1,0,0.0,0
976,39,train,Give me the office of the person born as the birth name of Naci Bostancı and office of Meral Akşener.,SELECT ?result WHERE { <http://dbpedia.org/resource/Naci_Bostancı> <http://dbpedia.org/property/birthName> ?v2 . ?v0 <http://dbpedia.org/property/birthName> ?v2 . ?v0 <http://dbpedia.org/property/office> ?result . <http://dbpedia.org/resource/Meral_Akşener> <http://dbpedia.org/property/office> ?result . },"```sparql
# Query for Naci Bostancı's birth name and office
SELECT ?birthName ?officeLabel WHERE {
  ?person a dbo:Person ;
          foaf:name ""Naci Bostancı""@en .
  OPTIONAL { ?person dbp:birthName ?birthName . }
  OPTIONAL { ?person dbo:holdsPublicOffice ?office . 
             ?office rdfs:label ?officeLabel . FILTER (lang(?officeLabel) = 'en') }
}
UNION
# Query for Meral Akşener's office
SELECT ?officeLabel WHERE {
  ?person a dbo:Person ;
          foaf:name ""Meral Akşener""@en .
  OPTIONAL { ?person dbo:holdsPublicOffice ?office . 
             ?office rdfs:label ?officeLabel . FILTER (lang(?officeLabel) = 'en') }
}
```",4,4,5,3,2,3,3,71,0,0,1,0,0.0,0
976,37,train,"Give me the office of Naci Bostancı and office of the mayor, that is a politician and an office holder and Turkish, of the reference, that is an organisation and a political party and Turkish, to Millet İttifakı.","SELECT ?result WHERE { ?v1 <http://dbpedia.org/property/leader> ?v2 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v2 <http://dbpedia.org/ontology/nationality> <http://dbpedia.org/resource/Turkey>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?v2 <http://dbpedia.org/property/office> ?result . ?v1 <http://xmlns.com/foaf/0.1/name> ""Millet İttifakı""@en . <http://dbpedia.org/resource/Naci_Bostancı> <http://dbpedia.org/property/office> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/PoliticalParty>. ?v1 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Turkey>. }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?naciOffice ?mayorOffice WHERE {
  # Find Naci Bostancı's office
  OPTIONAL {
    dbr:Naci_Bostancı dbo:office ?naciOffice .
  }

  # Find mayors associated with Millet İttifakı
  ?person a dbo:Politician ;
          dbo:nationality dbr:Turkey ;
          dbo:memberOf dbr:Millet_İttifakı ;
          dbo:office ?mayorOffice .

  FILTER EXISTS { ?mayorOffice rdfs:label ?officeLabel . FILTER(CONTAINS(LCASE(?officeLabel), ""mayor"")) }
}
```",4,10,5,3,2,3,3,71,0,0,1,0,0.0,0
645,37,train,"Give me the military force of the force, that is an event and a military conflict and a societal event, of the native, that is a president and a politician, of Restoration (Spain) and leader of Ministry of the Army (Spain).",SELECT ?result WHERE { ?v3 <http://dbpedia.org/ontology/commander> ?v0 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/President>. <http://dbpedia.org/resource/Ministry_of_the_Army_(Spain)> <http://dbpedia.org/ontology/leader> ?result . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?v0 <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Restoration_(Spain)> . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?result <http://dbpedia.org/ontology/battle> ?v3 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?militaryForce WHERE {
  # Identify Alfonso XIII as the native of Restoration (Spain) who is a president and politician
  dbr:Alfonso_XIII_of_Spain dbo:nationality dbr:Spain ;
                             dbo:positionHeld dbr:King_of_Spain .

  # Find events that are military conflicts and societal events during his reign
  ?event dbo:type dbr:Military_conflict ;
         dbo:place dbr:Morocco ; # The Rif War took place in Morocco
         dbo:participatedIn ?militaryForce .

  # Ensure the event is a societal event (e.g., part of broader historical context)
  ?event dbo:isPartOf ?societalEvent .
  
  # Identify the military force involved, specifically the Spanish Army
  ?militaryForce rdfs:label ""Spanish Army""@en ;
                 dbo:country dbr:Spain .
}
```",4,9,5,3,2,3,3,71,0,0,1,0,0.0,0
216,17,train,"Give me the person born, that is a sports manager and a soccer manager and a soccer player, on the death of Pavel Vezhinov.",SELECT ?result WHERE { ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerPlayer>. ?result <http://dbpedia.org/ontology/birthDate> ?v1 . <http://dbpedia.org/resource/Pavel_Vezhinov> <http://dbpedia.org/ontology/deathDate> ?v1 . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsManager>. ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerManager>. },"```sparql
SELECT ?person ?birthDate WHERE {
  # Find the death date of Pavel Vezhinov
  ?vezhinov dbo:deathDate ?deathDate .
  FILTER (str(?vezhinov) = ""Pavel_Vezhinov"") .

  # Find people born on that same date
  ?person dbo:birthDate ?birthDate .
  
  # Ensure the person has occupations as a sports manager, soccer manager, and soccer player
  ?person dbo:occupation ?occupation .
  FILTER (
    EXISTS { ?occupation rdfs:label ""sports manager""@en }
    && EXISTS { ?occupation rdfs:label ""soccer manager""@en }
    && EXISTS { ?occupation rdfs:label ""soccer player""@en }
  )
  
  # Match the birth date with Vezhinov's death date
  FILTER (YEAR(?birthDate) = YEAR(?deathDate) && MONTH(?birthDate) = MONTH(?deathDate) && DAY(?birthDate) = DAY(?deathDate))
}
```",2,5,3,2,1,3,3,71,0,0,1,0,0.0,0
353,6,train,"Give me the entity in the country of Moskovsky City District, Nizhny Novgorod.","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/country> ?v1 . <http://dbpedia.org/resource/Moskovsky_City_District,_Nizhny_Novgorod> <http://dbpedia.org/ontology/country> ?v1 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?entity WHERE {
  ?administrativeUnit a dbo:AdministrativeArea .
  ?administrativeUnit rdfs:label ""Moskovsky City District""@en .
  ?administrativeUnit dbo:partOf ?city .
  ?city rdfs:label ""Nizhny Novgorod""@en .
  ?entity dbo:administrativeUnit ?administrativeUnit .
}
```",2,2,3,2,1,2,2,9,0,0,29927,0,0.0,0
917,3,train,Who is the mayor of Hawaiian Kingdom?,SELECT ?result WHERE { <http://dbpedia.org/resource/Hawaiian_Kingdom> <http://dbpedia.org/property/leader> ?result . },"```sparql
# This query is intentionally left blank as there is no valid SPARQL query to find a mayor of the non-existent Hawaiian Kingdom.
```",1,1,2,1,1,3,3,71,0,0,8,0,0.0,0
582,18,train,Give me the player in Kazuaki Nagasawa and figure known as --10-19 and reference to Japan.,"SELECT ?result WHERE { <http://dbpedia.org/resource/Kazuaki_Nagasawa> <http://dbpedia.org/ontology/team> ?result . ?result <http://dbpedia.org/property/nickname> ""--10-19""^^<http://www.w3.org/2001/XMLSchema#gMonthDay> . ?result <http://xmlns.com/foaf/0.1/name> ""Japan""@en . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?player WHERE {
    ?player dbo:nationality dbr:Japan .
    ?player dbo:sport dbr:Football .
    
    OPTIONAL { 
        ?association dbo:member ?player .
        ?association dbo:name ""Kazuaki Nagasawa""@en .
    }
    
    OPTIONAL {
        ?team dbo:captain ?player .
        ?team dbo:homeTeamName ?club .
        ?club dbo:city dbr:Nagoya .
    }

    FILTER EXISTS { 
        ?player dbo:jerseyNumber ?number .
        FILTER (?number = 10 || ?number = ""10""^^xsd:string)
    }
}
```",3,3,4,1,3,3,3,71,0,0,1,0,0.0,0
892,33,train,Give me the landmark at elevation of the award of the member of E-girls and entity in Italy.,SELECT ?result WHERE { ?v0 <http://dbpedia.org/property/awards> ?v2 . <http://dbpedia.org/resource/E-girls> <http://dbpedia.org/ontology/bandMember> ?v0 . ?result <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Italy> . ?result <http://dbpedia.org/ontology/elevation> ?v2 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?landmark ?elevation WHERE {
  # Step 1: Identify a member of E-girls and their award
  ?member dbo:memberOf dbr:E-girls .
  ?award dbo:recipient ?member .
  
  # Assuming Ami Suzuki is a notable member, we use her directly for simplicity
  VALUES ?member { dbr:Ami_Suzuki }
  
  # Step 2: Find the elevation related to this award (hypothetical property)
  ?award dbo:elevation ?elevation .

  # Step 3: Identify landmarks at that elevation
  ?landmark dbo:elevation ?elevation .
  
  # Step 4: Ensure the landmark is in Italy
  ?landmark dbo:location dbr:Italy .
}
```",4,4,5,3,2,3,3,71,0,0,11,0,0.0,0
826,15,train,Who is the child of the father of Anna Magdalena Appel?,SELECT ?result WHERE { <http://dbpedia.org/resource/Anna_Magdalena_Appel> <http://dbpedia.org/property/father> ?v1 . ?result <http://dbpedia.org/property/father> ?v1 . },"```sparql
SELECT ?child WHERE {
  ?person dbo:spouse ?annaMagdalenaAppel .
  ?annaMagdalenaAppel foaf:name ""Anna Magdalena Appel"" .
  ?person dbo:child ?fatherOfAnnaMagdalenaAppel .
  
  OPTIONAL { 
    ?fatherOfAnnaMagdalenaAppel dbo:child ?child .
  }
}
```",2,2,3,2,1,3,3,71,0,0,1,0,0.0,0
987,13,train,Give me the birth place of the actor of All for Free.,SELECT ?result WHERE { <http://dbpedia.org/resource/All_for_Free> <http://dbpedia.org/property/starring> ?v1 . ?v1 <http://dbpedia.org/ontology/birthPlace> ?result . },"```sparql
SELECT ?actor ?birthPlace WHERE {
  VALUES ?film { dbpedia:All_for_Free }
  
  # Find actors associated with the film
  ?film dbo:starring ?actor .
  
  # Filter for known main actors (Leonardo DiCaprio and Kate Winslet)
  FILTER(?actor IN (
    dbpedia:Leonardo_DiCaprio,
    dbpedia:Kate_Winslet
  ))
  
  # Retrieve birthplace information
  OPTIONAL { ?actor dbo:birthPlace ?birthPlace }
}
```",2,2,3,2,1,3,3,71,0,0,14,0,0.0,0
5,7,train,"Give me the birthplace of the person born, that is a politician, as .","SELECT ?result WHERE { ?v0 <http://dbpedia.org/property/birthName> """"@en . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v0 <http://dbpedia.org/ontology/birthPlace> ?result . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
SELECT ?person ?birthPlace WHERE {
  ?person rdf:type dbo:Politician .
  ?person dbo:birthPlace ?birthPlace .
}
```",2,3,3,2,1,3,2,20,222,205306,0,0.001080144797789109,1.0,0.002157958687727825
274,17,train,Give me the associated musical artist of Cecil Taylor and professional in the designer of Tetris Classic.,SELECT ?result WHERE { ?result <http://dbpedia.org/property/occupation> ?v1 . <http://dbpedia.org/resource/Cecil_Taylor> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . <http://dbpedia.org/resource/Tetris_Classic> <http://dbpedia.org/property/designer> ?v1 . },"```sparql
# Query to find associated musical artists of Cecil Taylor
SELECT ?artist WHERE {
  ?cecil a dbo:MusicalArtist ;
         foaf:name ""Cecil Taylor""@en .
  ?collaboration dbo:performer ?cecil ;
                 dbo:performer ?artist .
}

UNION

# Query to find the designer of Tetris Classic
SELECT ?designer WHERE {
  ?tetris a dbo:VideoGame ;
          dbo:developer ?designer ;
          rdfs:label ""Tetris""@en .
  FILTER(CONTAINS(LCASE(?tetris), ""classic""))
}
```",3,3,4,2,2,2,3,28,0,0,1,0,0.0,0
888,7,train,"Give me the commander in the force, that is a societal event and an event, of Serhiy Kotenko.",SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/commander> ?result . ?v1 <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Serhiy_Kotenko> . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?event WHERE {
  ?serhiyKotenko a dbo:Person ;
                 foaf:name ""Serhiy Kotenko""@en .
  
  ?serhiyKotenko dbo:positionHeld ?commanderRole .
  ?commanderRole dbo:roleName ?roleName .

  OPTIONAL { ?commanderRole dbo:memberOf ?force . }
  OPTIONAL { ?event dbo:agent ?commanderRole . }

  FILTER(CONTAINS(LCASE(?roleName), ""commander""))
  
  ?event a dbo:SocietalEvent ;
         a dbo:Event .
}
```",2,4,3,2,1,3,2,20,0,0,13,0,0.0,0
865,8,train,Who is the child of Abu Ahmad Abdul Hafiz?,SELECT ?result WHERE { ?result <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Abu_Ahmad_Abdul_Hafiz> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>

SELECT ?child WHERE {
  ?person rdfs:label ""Abu Ahmad Abdul Hafiz""@en .
  ?person dbo:child ?child .
}
```",1,1,2,1,1,3,3,71,3,0,0,1.0,1.0,1.0
83,0,train,Give me the player in Greg Boehme.,SELECT ?result WHERE { <http://dbpedia.org/resource/Greg_Boehme> <http://dbpedia.org/ontology/team> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?team WHERE {
  dbr:Greg_Boehme dbo:playsFor ?team .
}
```",1,1,2,1,1,2,2,9,0,0,2,0,0.0,0
373,6,train,Give me the professional in the profession of Beto Guedes.,SELECT ?result WHERE { ?result <http://dbpedia.org/property/occupation> ?v1 . <http://dbpedia.org/resource/Beto_Guedes> <http://dbpedia.org/property/occupation> ?v1 . },"```sparql
SELECT ?person WHERE {
  dbpedia:Betinho_Guedes dbo:occupation ?profession .
  ?person dbo:occupation ?profession .
  FILTER(?person != dbpedia:Betinho_Guedes)
}
```",2,2,3,2,1,2,2,9,0,0,1543,0,0.0,0
124,34,train,"Give me the commander in the war, that is a societal event and a military conflict, of the reference, that is Australian and an organisation and a military unit, to 'A' Battery, Royal Australian Artillery and military force of Battle of Atbara.","SELECT ?result WHERE { ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryUnit>. ?v2 <http://xmlns.com/foaf/0.1/name> ""'A' Battery, Royal Australian Artillery""@en . ?result <http://dbpedia.org/ontology/battle> <http://dbpedia.org/resource/Battle_of_Atbara> . ?v2 <http://dbpedia.org/ontology/battle> ?v1 . ?v2 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Australia>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?v1 <http://dbpedia.org/ontology/commander> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?commander WHERE {
  # Find the commander of the Battle of Atbara
  ?battle dbo:commander ?commander .
  
  FILTER (str(?battle) = ""Battle_of_Atbara"") .

  # Ensure the commander is linked to A Battery, Royal Australian Artillery
  ?unit dbo:commander ?commander .
  ?unit rdfs:label ?unitLabel .
  
  FILTER (CONTAINS(LCASE(?unitLabel), ""a battery royal australian artillery"")) .

  # Ensure the unit or commander has an Australian connection
  OPTIONAL { ?unit dbo:country dbr:Australia . }
}
```",4,9,5,3,2,3,3,71,0,0,1,0,0.0,0
129,12,train,Give me the associated musical artist of Saba (rapper) and associated musical artist of EarthGang and professional in .,"SELECT ?result WHERE { <http://dbpedia.org/resource/Saba_(rapper)> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?result <http://dbpedia.org/property/occupation> """"@en . <http://dbpedia.org/resource/EarthGang> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . }","```sparql
# Query for Saba (rapper)
SELECT ?artist WHERE {
  dbpedia:Saba_(rapper) dbo:associatedMusicalArtist ?artist .
}

UNION

# Query for EarthGang
SELECT ?artist WHERE {
  dbpedia:EarthGang dbo:associatedMusicalArtist ?artist .
}
```",3,3,4,1,3,2,3,28,0,0,1,0,0.0,0
341,0,train,Give me the band member of Beyoncé.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/associatedMusicalArtist> <http://dbpedia.org/resource/Beyoncé> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?band ?member WHERE {
  ?band dbo:member ?member .
  ?member foaf:name ""Beyoncé"" .
}
```",1,1,2,1,1,2,2,9,0,0,50,0,0.0,0
459,2,train,Give me the person born as John Kevin Stitt.,"SELECT ?result WHERE { ?result <http://dbpedia.org/property/birthName> ""John Kevin Stitt""@en . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT ?person WHERE {
  ?person dbo:birthName ""John Kevin Stitt"" .
}
```",1,1,2,1,1,2,3,28,0,0,1,0,0.0,0
5,6,train,Give me the entity in Canada and birthplace of Gerald Regan.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Canada> . <http://dbpedia.org/resource/Gerald_Regan> <http://dbpedia.org/ontology/birthPlace> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?birthPlace WHERE {
  ?person a dbo:Politician ;
          foaf:name ""Gerald Regan""@en .
  ?person dbo:birthPlace ?birthPlace .
  FILTER EXISTS { ?birthPlace dbo:country dbr:Canada }
}
```",2,2,3,1,2,3,2,20,1,0,0,1.0,1.0,1.0
459,16,train,Give me the person born as the birth name of Kevin Stitt and governor of Oklahoma.,SELECT ?result WHERE { <http://dbpedia.org/resource/Oklahoma> <http://dbpedia.org/property/governor> ?result . ?result <http://dbpedia.org/property/birthName> ?v2 . <http://dbpedia.org/resource/Kevin_Stitt> <http://dbpedia.org/property/birthName> ?v2 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT ?person ?name WHERE {
  ?person foaf:givenName ""Kevin"" .
  ?person foaf:surname ""Stitt"" .
  ?person dbo:officeHolder ?office .
  ?office dbo:positionTitle ""Governor of Oklahoma""@en .
  BIND(CONCAT(STR(?person), "" "", STR(?name)) AS ?name)
}
```",3,3,4,2,2,2,3,28,0,0,1,0,0.0,0
41,8,train,"Give me the party of the leader, that is a politician and an office holder, of 2005 Castlereagh Borough Council election.",SELECT ?result WHERE { <http://dbpedia.org/resource/2005_Castlereagh_Borough_Council_election> <http://dbpedia.org/property/leader> ?v1 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v1 <http://dbpedia.org/ontology/party> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?leader ?party WHERE {
  ?election dbo:electionDate ?date .
  ?election dbo:officeHolder ?leader .
  ?leader dbo:politicalParty ?party .
  
  FILTER (CONTAINS(LCASE(STR(?election)), ""castlereagh borough council election 2005""))
  FILTER (YEAR(?date) = 2005)
}
```",2,4,3,2,1,2,3,28,0,0,6,0,0.0,0
645,39,train,"Give me the leader of the office, that is a government agency and an organisation, of the native of Restoration (Spain) and military force of Spanish Civil War.",SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/GovernmentAgency>. ?result <http://dbpedia.org/ontology/battle> <http://dbpedia.org/resource/Spanish_Civil_War> . ?v0 <http://dbpedia.org/property/office> ?v1 . ?v0 <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Restoration_(Spain)> . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?v1 <http://dbpedia.org/ontology/leader> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?person ?office WHERE {
  ?person dbo:nationality dbr:Spain .
  ?person dbo:birthPlace ?place .
  FILTER (regex(str(?place), ""Restoration"", ""i"")) .

  OPTIONAL { 
    ?militaryForce dbo:member ?person .
    ?militaryForce dbo:partOfMilitaryConflict dbr:Spanish_Civil_War .
  }

  OPTIONAL {
    ?office dbo:leader ?person .
    ?office a dbo:GovernmentAgency ; dbo:organizationType ?type .
    FILTER (regex(str(?type), ""government|organisation"", ""i""))
  }
  
  FILTER NOT EXISTS { ?person dbo:deathPlace ?place . } # Ensure they are still alive or relevant
}
ORDER BY ?person
LIMIT 10
```",4,6,5,3,2,3,3,71,0,9,2,0.0,0.0,0
36,10,train,Give me the person born in the birth year of Deanne Bray.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/birthYear> ?v1 . <http://dbpedia.org/resource/Deanne_Bray> <http://dbpedia.org/ontology/birthYear> ?v1 . },"```sparql
# Step 1: Retrieve Deanne Bray's birth year
SELECT ?birthYear WHERE {
  dbpedia:Deanne_Bray dbo:birthDate ?date .
  BIND(YEAR(?date) AS ?birthYear)
}

# Step 2: Find other persons born in the same year as Deanne Bray
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT DISTINCT ?person WHERE {
  # Retrieve Deanne Bray's birth year from the first query
  BIND(?birthYear AS ?deanneBirthYear) .
  
  ?person a dbo:Person ;
          dbo:birthDate ?date .
  FILTER(YEAR(?date) = ?deanneBirthYear)
  FILTER(?person != dbpedia:Deanne_Bray) # Exclude Deanne Bray herself
}
```",2,2,3,2,1,2,3,28,0,0,2611,0,0.0,0
926,34,train,Give me the child of Ahmed III and father of the father of the spouse of Neşerek Kadın.,SELECT ?result WHERE { ?v1 <http://dbpedia.org/property/father> ?result . ?v3 <http://dbpedia.org/property/father> ?v1 . <http://dbpedia.org/resource/Neşerek_Kadın> <http://dbpedia.org/ontology/spouse> ?v3 . <http://dbpedia.org/resource/Ahmed_III> <http://dbpedia.org/ontology/child> ?result . },"```sparql
SELECT ?child WHERE {
  wd:Q1234567 wdt:P26 ?spouse . # Neşerek Kadın's spouse
  ?spouse wdt:P22 ?father .    # Father of Neşerek Kadın's spouse
  ?father wdt:P22 ?grandfather . # Grandfather (Father of the father)
  wd:Q7890123 wdt:P40 ?child .   # Ahmed III's children
  FILTER(?grandfather = ?child) 
}
```

Note: `wd:Q1234567` should be replaced with the actual DBpedia identifier for Neşerek Kadın, and `wd:Q7890123` should be replaced with the identifier for Ahmed III.",4,4,5,3,2,3,3,71,0,0,1,0,0.0,0
573,9,train,"Give me the person decedent at Massachusetts and person decedent at Quincy, Massachusetts.","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/deathPlace> <http://dbpedia.org/resource/Quincy,_Massachusetts> . ?result <http://dbpedia.org/ontology/deathPlace> <http://dbpedia.org/resource/Massachusetts> . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?person WHERE {
  {
    ?person dbo:deathPlace dbr:Massachusetts .
  }
  UNION
  {
    ?person dbo:deathPlace dbr:Quincy,_Massachusetts .
  }
}
```",2,2,3,1,2,3,3,71,0,0,4,0,0.0,0
442,6,train,Give me the resting place of the actor of This Side of Heaven.,SELECT ?result WHERE { ?v0 <http://dbpedia.org/ontology/restingPlace> ?result . <http://dbpedia.org/resource/This_Side_of_Heaven> <http://dbpedia.org/ontology/starring> ?v0 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?actorName ?burialPlace WHERE {
  VALUES ?film { dbr:This_Side_of_Heaven }
  
  ?film dbo:starring ?actor .
  ?actor rdfs:label ?actorName .
  FILTER (CONTAINS(LCASE(?actorName), ""stephen baldwin""))
  
  OPTIONAL {
    ?actor dbo:deathPlace ?burialPlace .
  }
}
```",2,2,3,2,1,2,2,9,0,0,3,0,0.0,0
456,14,train,"Give me the band of the band, that is a musical artist, of Dean Brody.",SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . <http://dbpedia.org/resource/Dean_Brody> <http://dbpedia.org/ontology/associatedMusicalArtist> ?v1 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?band WHERE {
  ?person a dbo:MusicalArtist ;
          foaf:name ""Dean Brody""@en .
  OPTIONAL { ?person dbo:memberOfBand ?band . }
}
```",2,3,3,2,1,3,3,71,0,0,3,0,0.0,0
417,8,train,"Who is the child, that is a royalty, of Frederick Francis III, Grand Duke of Mecklenburg-Schwerin?","SELECT ?result WHERE { ?result <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Frederick_Francis_III,_Grand_Duke_of_Mecklenburg-Schwerin> . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?child ?title WHERE {
  ?person dbo:spouse ?frederick .
  ?frederick foaf:name ""Frederick Francis III"" ;
             dbo:parent ?parent .
  FILTER(CONTAINS(LCASE(?parent), ""mecklenburg-schwerin""))
  
  ?person dbo:child ?child .
  OPTIONAL { ?child dbp:royalTitle ?title }
  FILTER EXISTS { ?child dbo:royalTitle ?title }
}
```",1,2,2,1,1,3,3,71,0,0,3,0,0.0,0
216,28,train,Give me the player in Mario Ivanković and team of Ognjen Vukojević and player in the coach of Croatia national under-21 football team.,SELECT ?result WHERE { <http://dbpedia.org/resource/Croatia_national_under-21_football_team> <http://dbpedia.org/ontology/coach> ?v1 . ?result <http://dbpedia.org/ontology/coach> <http://dbpedia.org/resource/Ognjen_Vukojević> . <http://dbpedia.org/resource/Mario_Ivanković> <http://dbpedia.org/ontology/team> ?result . ?v1 <http://dbpedia.org/ontology/team> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?marioTeam ?ognjenTeam ?coachPlayer
WHERE {
  # Find the team Mario Ivanković played for
  dbr:Mario_Ivanković dbo:team ?marioTeam .

  # Find the team Ognjen Vukojević was associated with
  dbr:Ognjen_Vukojević dbo:team ?ognjenTeam .

  # Identify the coach of the Croatia national under-21 football team
  dbr:Croatia_national_under-21_football_team dbo:coach ?coach .
  
  # Find a player that this coach has coached
  ?coach dbo:player ?coachPlayer .
}
```",4,4,5,2,3,3,3,71,0,0,1,0,0.0,0
353,2,train,"Give me the awardee of Medal of the Order ""For Merit to the Fatherland"".",SELECT ?result WHERE { ?result <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/Medal_of_the_Order_%22For_Merit_to_the_Fatherland%22> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?awardee ?name WHERE {
  ?award a dbo:Award ;
        rdfs:label ""Medal of the Order 'For Merit to the Fatherland'""@en .
  
  ?recipient dbo:hasAward ?award .
  ?recipient foaf:name ?name .

  FILTER (lang(?name) = 'en')
}
```",1,1,2,1,1,2,2,9,0,0,12,0,0.0,0
453,2,train,"Give me the birth place, that is a country, of William Denning.",SELECT ?result WHERE { ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. <http://dbpedia.org/resource/William_Denning> <http://dbpedia.org/ontology/birthPlace> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?birthPlaceName WHERE {
  ?person dbo:birthName ""William Denning""@en.
  ?person dbo:birthPlace ?birthPlace.
  ?birthPlace a dbo:Country.
  ?birthPlace rdfs:label ?birthPlaceName.
  FILTER (lang(?birthPlaceName) = 'en')
}
```",1,2,2,1,1,2,2,9,0,0,1,0,0.0,0
382,2,train,Give me the player in Lukas Kübler.,SELECT ?result WHERE { <http://dbpedia.org/resource/Lukas_Kübler> <http://dbpedia.org/ontology/team> ?result . },"```sparql
PREFIX dbp: <http://dbpedia.org/property/>
PREFIX dbo: <http://dbpedia.org/ontology/>

SELECT ?team WHERE {
  ?person a dbo:FootballPlayer ;
          foaf:name ""Lukas Kübler""@en .
  OPTIONAL { ?person dbp:team ?team . }
}
```",1,1,2,1,1,3,2,20,0,0,6,0,0.0,0
865,35,train,"Give me the father of the child of Abu Ahmad Abdul Hafiz and native of the residence, that is a country, of Ram Jaipal Singh Yadav.",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/birthPlace> ?v0 . ?v2 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Abu_Ahmad_Abdul_Hafiz> . <http://dbpedia.org/resource/Ram_Jaipal_Singh_Yadav> <http://dbpedia.org/property/residence> ?v0 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. ?v2 <http://dbpedia.org/property/father> ?result . },"```sparql
SELECT ?father WHERE {
  # Abu Ahmad Abdul Hafiz (Tipu Sultan) and his child
  wd:Q1234567 wdt:P40 ?child. # Tipu Sultan's child
  ?child wdt:P22 wd:Q1234568. # Fateh Hyder as the child

  # Ram Jaipal Singh Yadav's residence country
  wd:Q8765432 wdt:P19/wdt:P17 ?country. # Residence of Ram Jaipal Singh Yadav and its country

  # Tipu Sultan (Abu Ahmad Abdul Hafiz) is a native of India
  wd:Q1234567 wdt:P27 wd:Q288. # Tipu Sultan's nationality as Indian

  FILTER(?country = wd:Q288) # Ensure the country is India

  # The father of the child
  ?child wdt:P22 ?father.
}
```

Note: Replace `wd:Q1234567` with the actual DBpedia identifier for Abu Ahmad Abdul Hafiz (Tipu Sultan), and `wd:Q8765432` with the identifier for Ram Jaipal Singh Yadav. The identifiers used here are placeholders.",4,5,5,2,2,3,3,71,0,0,1,0,0.0,0
456,30,train,"Give me the spouse of Danielle Spencer (Australian actress) and band of the band, that is a musical artist, of Dean Brody and professional in .","SELECT ?result WHERE { <http://dbpedia.org/resource/Danielle_Spencer_(Australian_actress)> <http://dbpedia.org/ontology/spouse> ?result . ?result <http://dbpedia.org/property/occupation> """"@en . <http://dbpedia.org/resource/Dean_Brody> <http://dbpedia.org/ontology/associatedMusicalArtist> ?v1 . ?v1 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. }","```sparql
# Query for Danielle Spencer's spouse
SELECT ?spouse WHERE {
  ?person dbo:name ""Danielle Spencer""@en .
  ?person dbo:nationality dbr:Australia .
  ?person dbo:occupation dbr/Actress .
  ?person dbo:spouse ?spouse .
}

UNION

# Query for Dean Brody's band that is a musical artist
SELECT ?band WHERE {
  ?brody dbo:name ""Dean Brody""@en .
  ?brody dbo:member ?band .
  ?band rdf:type dbo:MusicalArtist .
}
```",4,5,5,2,3,3,3,71,0,0,1,0,0.0,0
715,37,train,"Give me the commander in the force of the mayor, that is an office holder and a politician and a president, of 1933 Spanish general election and leader of Ministry of the Air (Spain).",SELECT ?result WHERE { <http://dbpedia.org/resource/Ministry_of_the_Air_(Spain)> <http://dbpedia.org/ontology/leader> ?result . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/President>. ?v3 <http://dbpedia.org/ontology/commander> ?v0 . ?v3 <http://dbpedia.org/ontology/commander> ?result . <http://dbpedia.org/resource/1933_Spanish_general_election> <http://dbpedia.org/property/leader> ?v0 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?person WHERE {
  ?person a dbo:Politician .
  ?person dbo:officeHolderOf dbr:1933_Spanish_general_election .
  ?person dbo:positionHeld dbr:Ministry_of_the_Air_(Spain) .
  ?person dbo:presidentOf dbr:Government_of_Spain .
  ?person rdfs:label ""Juan Negrín""@en .
}
```",4,7,5,3,2,3,3,71,0,0,1,0,0.0,0
267,3,train,"Give me the player, that is a soccer club, in Rasoul Khatibi.",SELECT ?result WHERE { <http://dbpedia.org/resource/Rasoul_Khatibi> <http://dbpedia.org/ontology/team> ?result . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerClub>. },"```sparql
PREFIX dbp: <http://dbpedia.org/property/>
PREFIX dbo: <http://dbpedia.org/ontology/>

SELECT ?club WHERE {
  ?person a dbo:SoccerPlayer .
  ?person foaf:name ""Rasoul Khatibi""@en .
  ?person dbp:team ?club .
}
```",1,2,2,1,1,3,2,20,0,0,12,0,0.0,0
236,4,train,"Give me the reference, that is an office holder and a politician, to James Madison.","SELECT ?result WHERE { ?result <http://xmlns.com/foaf/0.1/name> ""James Madison""@en . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?officeHolder WHERE {
  ?person rdfs:label ""James Madison""@en .
  FILTER (lang(?person) = 'en')
  
  # Ensure the person is a politician
  ?person rdf:type dbo:Politician .

  # Check if they held any office
  ?person dbo:positionHeld ?officeHolder .
}
```",1,3,2,1,1,3,2,20,0,0,2,0,0.0,0
892,2,train,Give me the entity in Province of Reggio Emilia.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/province> <http://dbpedia.org/resource/Province_of_Reggio_Emilia> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?entity WHERE {
  ?entity dbo:location dbr:Province_of_Reggio_Emilia .
}
```",1,1,2,1,1,3,3,71,0,1,40,0.0,0.0,0
976,30,train,Give me the office of Mustafa Şentop and office of Meral Akşener and office of the person born as Mehmet Naci Bostancı.,"SELECT ?result WHERE { <http://dbpedia.org/resource/Meral_Akşener> <http://dbpedia.org/property/office> ?result . <http://dbpedia.org/resource/Mustafa_Şentop> <http://dbpedia.org/property/office> ?result . ?v0 <http://dbpedia.org/property/birthName> ""Mehmet Naci Bostancı""@en . ?v0 <http://dbpedia.org/property/office> ?result . }","```sparql
SELECT ?person ?office WHERE {
  VALUES (?name ?birthName) {
    (""Mustafa Şentop"" ""Mustafa Şentop"")
    (""Meral Akşener"" ""Meral Akşener"")
    (""Cem Karaca"" ""Mehmet Naci Bostancı"")
  }
  
  OPTIONAL {
    ?person rdfs:label ?name .
    FILTER (lang(?name) = 'en')
  }
  
  OPTIONAL {
    ?person foaf:name ?birthName .
    FILTER (lang(?birthName) = 'en')
  }

  OPTIONAL {
    ?person dbo:office ?office .
    FILTER NOT EXISTS { ?office a owl:Nothing } # Exclude empty offices
  }
}
```",4,4,5,2,3,3,3,71,0,378033,1,0.0,0.0,0
433,36,train,Give me the professional in the profession of the writer of Slowhand at 70 – Live at the Royal Albert Hall and associated musical artist of Paul Chambers.,SELECT ?result WHERE { ?result <http://dbpedia.org/property/occupation> ?v1 . <http://dbpedia.org/resource/Slowhand_at_70_–_Live_at_the_Royal_Albert_Hall> <http://dbpedia.org/property/writer> ?v0 . <http://dbpedia.org/resource/Paul_Chambers> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v0 <http://dbpedia.org/property/occupation> ?v1 . },"```sparql
# Query to find the writer of ""Slowhand at 70 – Live at the Royal Albert Hall""
SELECT ?writer WHERE {
    ?album dcterms:title ""Slowhand at 70 – Live at the Royal Albert Hall"" .
    ?album dbo:performer ?artist .
    ?artist foaf:name ""Eric Clapton""@en .
    ?album dbo:composer ?writer .
}

# Query to find associated musical artist of Paul Chambers
SELECT ?associatedArtist WHERE {
    ?musician foaf:name ""Paul Chambers""@en .
    ?musician dbo:associatedMusicalArtist ?associatedArtist .
}

# Assuming the writer and associated artist are musicians, we can query for a common musician
SELECT DISTINCT ?commonMusician WHERE {
    VALUES (?profession) { dbc:Songwriter dbc:JazzBassist }
    
    # Eric Clapton's profession
    ?clapton foaf:name ""Eric Clapton""@en .
    ?clapton dbo:occupation ?profession .

    # Associated artist of Paul Chambers' profession
    ?chambersArtist ?p ?associatedArtist .
    ?associatedArtist dbo:occupation ?profession .

    # Find a common musician in these professions
    ?commonMusician dbo:occupation ?profession .
}
```",4,4,5,3,2,3,3,71,0,0,16,0,0.0,0
955,13,train,"Give me the band of the writer of the work, that is a work and an album and a musical work, of Matt Freeman.",SELECT ?result WHERE { ?v0 <http://dbpedia.org/property/writer> <http://dbpedia.org/resource/Matt_Freeman> . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Album>. ?result <http://dbpedia.org/ontology/bandMember> ?v1 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?v0 <http://dbpedia.org/property/writer> ?v1 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalWork>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?band WHERE {
  ?work dbo:composer dbr:Matt_Freeman .
  ?work a dbo:Album ;
        a dbo:MusicalWork .
  ?work dbo:title ""Let It Be"" .
  ?work dbo:artist dbr:Rancid .
  ?band dbo:member dbr:Matt_Freeman .
}
```",3,6,4,3,1,3,2,20,0,0,21,0,0.0,0
281,0,train,Give me the commander in New Guinea campaign.,SELECT ?result WHERE { <http://dbpedia.org/resource/New_Guinea_campaign> <http://dbpedia.org/ontology/commander> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?person ?name WHERE {
  VALUES ?campaign { 
    dbr/New_Guinea_campaign_(1942%E2%80%9345) 
  }
  
  ?commander dbo:commandedBy ?campaign .
  ?commander rdfs:label ?name .
  FILTER (LANG(?name) = 'en')
  
  OPTIONAL {
    ?person dbo:commander ?commander .
    ?person rdfs:label ?namePerson .
    FILTER (LANG(?namePerson) = 'en') 
    BIND(CONCAT(?name, "" - "", ?namePerson) AS ?name)
  }
}
ORDER BY ?name
LIMIT 10
```",1,1,2,1,1,2,3,28,0,0,27,0,0.0,0
83,1,train,Give me the player in Albert Edward (soccer).,SELECT ?result WHERE { <http://dbpedia.org/resource/Albert_Edward_(soccer)> <http://dbpedia.org/ontology/team> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?player WHERE {
  ?association dbo:agent dbr:Albert_Edward_(soccer) .
  ?association dbo:object ?player .
  FILTER (isLiteral(?player))
}
```",1,1,2,1,1,2,2,9,0,0,8,0,0.0,0
926,22,train,"Give me the child of the father, that is a royalty, of Mustafa III and father of Mahmud II.",SELECT ?result WHERE { ?v0 <http://dbpedia.org/ontology/child> ?result . <http://dbpedia.org/resource/Mustafa_III> <http://dbpedia.org/property/father> ?v0 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. <http://dbpedia.org/resource/Mahmud_II> <http://dbpedia.org/property/father> ?result . },"```sparql
SELECT ?child WHERE {
  ?mustafa3 dbo:spouse ?mother .
  ?mustafa3 foaf:surname ""Ottoman"" .
  ?mustafa3 dbp:name ""Mustafa III""@en .
  
  ?mustafa3 dbo:child ?child .
  ?child rdf:type dbo:Sultan .
  
  ?child dbo:parent ?mahmud2 .
  ?mahmud2 dbp:name ""Mahmud II""@en .
}
```",3,4,4,2,2,3,3,71,0,0,1,0,0.0,0
122,3,train,"Who is the reference, that is a musical artist and an artist, to Gift of Gab?","SELECT ?result WHERE { ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?result <http://xmlns.com/foaf/0.1/name> ""Gift of Gab""@en . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?artist WHERE {
  ?person dbo:associatedMusicalArtist dbr:Gift_of_Gab .
  ?person a dbo:Musician ;
          dbo:genre ?genre .
  FILTER EXISTS { ?person dbo:occupation dbr:DJ_Shadow } .
}
```",1,3,2,1,1,2,2,9,0,0,1,0,0.0,0
443,15,train,Give me the landmark at elevation of the award of William Shepherd and birthplace of Carl Larsson.,SELECT ?result WHERE { <http://dbpedia.org/resource/Carl_Larsson> <http://dbpedia.org/ontology/birthPlace> ?result . ?result <http://dbpedia.org/ontology/elevation> ?v1 . <http://dbpedia.org/resource/William_Shepherd> <http://dbpedia.org/property/awards> ?v1 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?landmark WHERE {
    # Find the birthplace of Carl Larsson
    dbr:Claude_Larsson dbo:birthPlace dbr:Stockholm .
    
    # Find landmarks in Stockholm with an elevation around 1969 meters
    ?landmark a dbo:Lighthouse ;
              dbo:elevation ?elevation ;
              dbo:location dbr:Stockholm .
              
    FILTER(?elevation >= 1960 && ?elevation <= 1970)
}
```",3,3,4,2,2,2,3,28,0,0,1,0,0.0,0
508,6,train,Give me the birthplace of Ma Hongkui and birthplace of Ma Bufang.,SELECT ?result WHERE { <http://dbpedia.org/resource/Ma_Hongkui> <http://dbpedia.org/ontology/birthPlace> ?result . <http://dbpedia.org/resource/Ma_Bufang> <http://dbpedia.org/ontology/birthPlace> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?person ?name ?birthPlace WHERE {
  VALUES ?person { 
    dbr:Ma_Hongkui 
    dbr:Ma_Bufang 
  }
  
  ?person dbo:name ?name .
  OPTIONAL { ?person dbo:birthPlace ?birthPlace . }
}
```",2,2,3,1,2,3,2,20,0,0,3,0,0.0,0
382,3,train,"Give me the manager, that is a soccer manager and an athlete and a sports manager, of Bonner SC.",SELECT ?result WHERE { ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsManager>. <http://dbpedia.org/resource/Bonner_SC> <http://dbpedia.org/ontology/manager> ?result . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Athlete>. ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerManager>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?manager WHERE {
  ?club rdf:type dbo:SoccerClub ;
        rdfs:label ""Bonner SC""@en .
  
  ?club dbp:manager ?manager .

  ?manager rdf:type dbo:SoccerManager, dbo:Athlete, dbo:SportsManager .
}
```",1,4,2,1,1,3,2,20,1,0,0,1.0,1.0,1.0
170,15,train,Give me the entity in the work of International Energy Agency and domain of Mayor.,"SELECT ?result WHERE { ?v1 <http://dbpedia.org/property/author> <http://dbpedia.org/resource/International_Energy_Agency> . ?result <http://dbpedia.org/ontology/leaderTitle> ""Mayor""@en . ?result <http://dbpedia.org/ontology/country> ?v1 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?ieaEntity ?mayorDomain
WHERE {
  # Find an entity related to the International Energy Agency
  ?ieaEntity dbo:wikiPageWikiLink dbr:International_Energy_Agency .
  
  # Find domains associated with a Mayor
  ?mayorDomain rdfs:label ?label .
  FILTER (CONTAINS(LCASE(?label), ""mayor"") || CONTAINS(LCASE(?label), ""municipal government""))
}
```",3,3,4,2,2,2,3,28,0,13648,99,0.0,0.0,0
465,10,train,"Give me the successor of Ercole II d'Este, Duke of Ferrara and successor of Renée of France.","SELECT ?result WHERE { <http://dbpedia.org/resource/Ercole_II_d'Este,_Duke_of_Ferrara> <http://dbpedia.org/ontology/successor> ?result . <http://dbpedia.org/resource/Renée_of_France> <http://dbpedia.org/ontology/successor> ?result . }","```sparql
SELECT ?successor WHERE {
  dbpedia:Ercole_II_d%27Este_(Duke_of_Ferrara) dbo:successor ?successor .
}
```",2,2,3,1,2,3,3,71,0,0,1,0,0.0,0
5,3,train,"Give me the person born, that is a politician, as .","SELECT ?result WHERE { ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?result <http://dbpedia.org/property/birthName> """"@en . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?person ?name ?birthDate WHERE {
  ?person a dbo:Person .
  ?person dbo:occupation dbr:Politician ; # or use more specific politician classes if needed
         foaf:name ?name ;
         dbo:birthDate ?birthDate .
}
ORDER BY ?birthDate
```",1,2,2,1,1,3,2,20,4,11119,165,0.0003596152117234559,0.023668639053254437,0.0007084661707403471
935,13,train,"Give me the death place of the awardee of the award, that is an award, of Syed Sohail Hussain Naqvi.",SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/deathPlace> ?result . ?v1 <http://dbpedia.org/property/awards> ?v0 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Award>. <http://dbpedia.org/resource/Syed_Sohail_Hussain_Naqvi> <http://dbpedia.org/property/awards> ?v0 . },"```sparql
SELECT ?deathPlace WHERE {
  # Step 1: Find Syed Sohail Hussain Naqvi and his awards
  ?person rdfs:label ""Syed Sohail Hussain Naqvi""@en .
  
  # Assuming the award is stored in a property like dbo:award or similar
  ?person dbo:award ?award .

  # Step 2: Find out what that specific award is called
  ?award rdfs:label ?awardLabel .

  # Step 3: Locate the awardee associated with that award
  ?recipient dbo:award ?award .
  
  # Step 4: Retrieve the death place of that awardee
  OPTIONAL { ?recipient dbo:deathPlace ?deathPlace . }
}
```",3,4,4,3,1,3,2,20,18,2,0,0.9,1.0,0.9473684210526316
129,0,train,Give me the professional in .,"SELECT ?result WHERE { ?result <http://dbpedia.org/property/occupation> """"@en . }","```sparql
# This query cannot be completed as the question lacks specificity.
SELECT ?professional WHERE {
  # Placeholder for a specific profession or category
}
```",1,1,2,1,1,2,3,28,0,0,39640,0,0.0,0
645,22,train,"Give me the commander in Battle of Jarama and leader of the office, that is a government agency and an organisation, of Camilo Menéndez Tolosa.",SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/leader> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/GovernmentAgency>. <http://dbpedia.org/resource/Camilo_Menéndez_Tolosa> <http://dbpedia.org/property/office> ?v1 . <http://dbpedia.org/resource/Battle_of_Jarama> <http://dbpedia.org/ontology/commander> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?commander ?officeLeader WHERE {
  # Find the commander of the Battle of Jarama
  OPTIONAL {
    ?battle dbo:commander ?commander .
    FILTER(STRSTARTS(STR(?battle), ""http://dbpedia.org/resource/Battle_of_Jarama""))
  }

  # Find an office that is a government agency and organization led by Camilo Menéndez Tolosa
  OPTIONAL {
    ?office dbo:leader ?officeLeader ;
            a dbo:GovernmentAgency, dbo:Organization .
    ?office dbo:member dbr:Camilo_Menéndez_Tolosa .
  }
}
```",3,5,4,2,2,3,3,71,1,9,0,0.1,1.0,0.18181818181818182
573,35,train,"Give me the person decedent at the administration, that is a region, of Charlie Baker and parent of the author, that is a politician and an office holder, of Exchequer Standards.","SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Region>. ?v1 <http://dbpedia.org/ontology/parent> ?result . <http://dbpedia.org/resource/Exchequer_Standards> <http://dbpedia.org/property/author> ?v1 . ?v2 <http://dbpedia.org/property/governor> ""Charlie Baker""@en . ?result <http://dbpedia.org/ontology/deathPlace> ?v2 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?decedent WHERE {
  # Step 1: Identify Charlie Baker's administration region
  dbr:Charlie_Baker dbo:governmentRole dbr:Governor_of_Massachusetts .
  
  # Step 2: Find the decedent at that administration (assuming a placeholder for now)
  ?administration dbo:decedent ?decedent .

  # Step 3: Identify the author of Exchequer Standards
  ?author dbo:work dbr:Exchequer_Standards .
  
  # Step 4: Verify if the author is a politician and office holder
  ?author rdf:type dbo:Politician ;
          dbo:officeHolder true .

  # Step 5: Find the parent of the author
  ?author dbo:parent ?decedent .
}
```

Note: The query assumes certain relationships (like `dbo:decedent` and `dbo:work`) which may not exist in DBpedia as described. Adjustments might be necessary based on actual data availability.",4,7,5,2,2,3,3,71,0,0,2,0,0.0,0
826,27,train,"Give me the predecessor of the parent of the child of Louis IV, Grand Duke of Hesse.","SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/parent> <http://dbpedia.org/resource/Louis_IV,_Grand_Duke_of_Hesse> . ?v1 <http://dbpedia.org/ontology/parent> ?v2 . ?result <http://dbpedia.org/ontology/successor> ?v2 . }","```sparql
SELECT DISTINCT ?predecessor WHERE {
  # Step 1: Identify Louis IV, Grand Duke of Hesse
  ?louisIV dbo:spouse ?spouse .
  FILTER (str(?louisIV) = ""Louis_IV,_Grand_Duke_of_Hesse"")

  # Step 2: Find his child
  ?child dbo:parent ?louisIV .

  # Step 3: Determine the parent of this child
  ?parent dbo:child ?child .

  # Step 4: Identify the predecessor of this parent
  OPTIONAL { 
    ?predecessor dbo:successor ?parent .
  }
}
```",3,3,4,3,1,3,3,71,0,0,1,0,0.0,0
445,31,train,"Give me the entity in the residence, that is a country, of the resident, that is an athlete, of Great Britain and death place of Patrick Moore.",SELECT ?result WHERE { <http://dbpedia.org/resource/Patrick_Moore> <http://dbpedia.org/ontology/deathPlace> ?result . ?v1 <http://dbpedia.org/property/residence> <http://dbpedia.org/resource/Great_Britain> . ?v1 <http://dbpedia.org/property/residence> ?v0 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. ?result <http://dbpedia.org/ontology/location> ?v0 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Athlete>. },"```sparql
# Step 1: Find an athlete from Great Britain and their country of residence
SELECT ?athlete ?residenceCountry WHERE {
  ?athlete dbo:nationality dbr:United_Kingdom ;
           rdf:type dbo:Athlete .
  OPTIONAL { ?athlete dbo:country dbr:United_Kingdom . }
  OPTIONAL { ?athlete dbo:residence ?residence .
             ?residence dbo:countryName ?residenceCountry . }
}

# Step 2: Find Patrick Moore's death place
SELECT ?deathPlace WHERE {
  dbr:Patrick_Moore dbo:placeOfBirth ?birthPlace ;
                     dbo:deathPlace ?deathPlace .
}

# Combine the results to find a match
SELECT DISTINCT ?athlete ?residenceCountry WHERE {
  # Athlete from Great Britain and their residence country
  ?athlete dbo:nationality dbr:United_Kingdom ;
           rdf:type dbo:Athlete .
  OPTIONAL { ?athlete dbo:country dbr:United_Kingdom . }
  OPTIONAL { ?athlete dbo:residence ?residence .
             ?residence dbo:countryName ?residenceCountry . }

  # Patrick Moore's death place
  dbr:Patrick_Moore dbo:placeOfBirth ?birthPlace ;
                     dbo:deathPlace ?deathPlace .

  # Match the residence country with the death place
  FILTER(?residenceCountry = ?deathPlace)
}
```",4,6,5,3,2,3,3,71,0,0,1,0,0.0,0
41,12,train,Give me the party of Enda Kenny and party of Declan Costello and party of Mark Durkan.,SELECT ?result WHERE { <http://dbpedia.org/resource/Enda_Kenny> <http://dbpedia.org/ontology/party> ?result . <http://dbpedia.org/resource/Mark_Durkan> <http://dbpedia.org/ontology/party> ?result . <http://dbpedia.org/resource/Declan_Costello> <http://dbpedia.org/ontology/party> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?person ?partyLabel WHERE {
  VALUES ?person { 
    dbr:Enda_Kenny 
    dbr:Declan_Costello_(politician) 
    dbr:Mark_Durkan
  }
  
  ?person dbo:politicalParty ?party .
  SERVICE <http://dbpedia.org/sparql> {
    ?party rdfs:label ?partyLabel .
    FILTER (lang(?partyLabel) = 'en')
  }
}
```",3,3,4,1,3,2,3,28,0,0,1,0,0.0,0
554,8,train,Give me the leader of the birth place of The Legendary Tigerman.,SELECT ?result WHERE { <http://dbpedia.org/resource/The_Legendary_Tigerman> <http://dbpedia.org/ontology/birthPlace> ?v0 . ?v0 <http://dbpedia.org/property/leader> ?result . },"```sparql
# Step 1: Find the birthplace of The Legendary Tigerman
SELECT ?birthPlace WHERE {
  dbpedia:en:The_Legendary_Tigerman dbo:birthPlace ?birthPlace .
}

# Step 2: Use the result from step 1 to find the leader of that place
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?leader WHERE {
  BIND(<INSERT_BIRTH_PLACE_URI_HERE> AS ?place) .
  ?place dbo:mayor ?leader .
}
```

Note: Replace `<INSERT_BIRTH_PLACE_URI_HERE>` with the actual URI of the birthplace obtained from the first query.",2,2,3,2,1,3,2,20,0,0,3,0,0.0,0
527,10,train,"Give me the work, that is a work and a book, of the host of Hyperland.",SELECT ?result WHERE { <http://dbpedia.org/resource/Hyperland> <http://dbpedia.org/ontology/presenter> ?v0 . ?result <http://dbpedia.org/property/author> ?v0 . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Book>. },"```sparql
SELECT ?work WHERE {
  ?person foaf:name ""Tim Brooke-Taylor""@en .
  ?person dbo:profession dbr:Comedian .
  ?person dbo:memberOf dbr:The_Goodies .
  ?work dbo:author ?person ;
        a dbo:Book ;
        rdfs:label ?title .
  FILTER(CONTAINS(LCASE(?title), ""the goodies songbook""))
}
```",2,4,3,2,1,3,2,20,0,0,9,0,0.0,0
874,5,train,Give me the band member of The Jones Gang.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/associatedMusicalArtist> <http://dbpedia.org/resource/The_Jones_Gang> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?member WHERE {
  ?band rdfs:label ""The Jones Gang""@en .
  ?band dbo:bandMember ?member .
}
```",1,1,2,1,1,3,2,20,2,2,2,0.5,0.5,0.5
987,35,train,"Give me the birth place of the band, that is an artist and a musical artist, of Šako Polumenta and entity in the region, that is a country, of Central European Time.",SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/birthPlace> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. ?result <http://dbpedia.org/ontology/country> ?v0 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. <http://dbpedia.org/resource/Šako_Polumenta> <http://dbpedia.org/ontology/associatedMusicalArtist> ?v1 . ?v0 <http://dbpedia.org/property/timeZone> <http://dbpedia.org/resource/Central_European_Time> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?bandBirthPlace WHERE {
  ?band dbo:member dbr:Šako_Polumenta .
  ?band dbo:birthPlace ?bandBirthPlace .
  FILTER EXISTS { 
    ?country dbo:timeZone dbr:Central_European_Time ;
             dbo:location ?bandBirthPlace .
  }
}
```",4,7,5,2,2,3,3,71,0,0,2,0,0.0,0
443,5,train,Who is the work of yes?,"SELECT ?result WHERE { ?result <http://dbpedia.org/property/author> ""yes""@en . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?album WHERE {
  ?album dbo:artist dbr:Yes .
  ?album a dbo:Album .
}
```",1,1,2,1,1,2,3,28,0,0,1563,0,0.0,0
554,0,train,Give me the leader of Portuguese São Tomé and Príncipe.,SELECT ?result WHERE { <http://dbpedia.org/resource/Portuguese_São_Tomé_and_Príncipe> <http://dbpedia.org/property/leader> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?person ?position ?startYear ?endYear
WHERE {
  ?person a dbo:Person ;
          foaf:name ""Marcelo Caetano""@en .
  OPTIONAL { ?person dbo:office ?office . }
  OPTIONAL { ?office dbo:positionName ?position . }
  OPTIONAL { ?office dbo:startDate ?startYear . }
  OPTIONAL { ?office dbo:endDate ?endYear . }
  FILTER (?position = ""Prime Minister of Portugal""@en)
}
```",1,1,2,1,1,3,2,20,0,0,2,0,0.0,0
773,33,train,"Give me the spouse of Louis the German and parent of the successor of the child, that is a royalty, of Louis the Pious.",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/child> ?v3 . ?v0 <http://dbpedia.org/ontology/successor> ?v3 . <http://dbpedia.org/resource/Louis_the_German> <http://dbpedia.org/ontology/spouse> ?result . <http://dbpedia.org/resource/Louis_the_Pious> <http://dbpedia.org/ontology/child> ?v0 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. },"```sparql
SELECT ?spouse WHERE {
  wd:Q1116 wdt:P26 ?spouse .
  ?spouse wdt:P31/wdt:P279* wd:Q11850 . # Ensure the spouse is royalty
}
```

This query retrieves the spouse of Louis the German (wd:Q1116) and ensures that the spouse is a member of the royalty class.",4,5,5,3,2,3,3,71,0,0,1,0,0.0,0
192,12,train,Give me the child of the child of Stephen V of Hungary and spouse of Clemence of Austria.,SELECT ?result WHERE { <http://dbpedia.org/resource/Clemence_of_Austria> <http://dbpedia.org/ontology/spouse> ?result . ?v0 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Stephen_V_of_Hungary> . ?result <http://dbpedia.org/ontology/parent> ?v0 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?grandchild ?spouse WHERE {
  # Stephen V of Hungary
  VALUES ?stephenV { dbr:Stephen_V_of_Hungary }

  # Find children of Stephen V
  ?child dbo:parent ?stephenV .
  
  # Find grandchildren (children of the children)
  ?grandchild dbo:parent ?child .

  # Check if any grandchild is married to Clemence of Austria
  ?marriage dbo:spouse1 ?grandchild ;
            dbo:spouse2 dbr:Clemence_of_Austria .
  
  OPTIONAL { ?marriage dbo:spouse1 ?grandchild . BIND(dbo:spouse2 AS ?spouse) }
  OPTIONAL { ?marriage dbo:spouse2 ?grandchild . BIND(dbo:spouse1 AS ?spouse) }

}
```",3,3,4,2,2,3,2,20,0,0,1,0,0.0,0
507,30,train,Give me the spouse of Anne V. Coates and director of Entertaining Mr Sloane (film) and professional in the profession of Guy Ferland.,SELECT ?result WHERE { ?result <http://dbpedia.org/property/occupation> ?v1 . <http://dbpedia.org/resource/Guy_Ferland> <http://dbpedia.org/property/occupation> ?v1 . <http://dbpedia.org/resource/Entertaining_Mr_Sloane_(film)> <http://dbpedia.org/ontology/director> ?result . ?result <http://dbpedia.org/ontology/spouse> <http://dbpedia.org/resource/Anne_V._Coates> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?spouse ?director ?profession 
WHERE {
  # Find the spouse of Anne V. Coates
  OPTIONAL { 
    dbr:Anne_V._Coates dbo:spouse ?spouse .
  }

  # Find the director of Entertaining Mr Sloane
  OPTIONAL {
    dbr:Entertaining_Mr_Sloane dbo:director ?director .
  }
  
  # Find a cinematographer (Guy Ferland's profession)
  OPTIONAL {
    ?person dbo:occupation dbr:Cinematography ;
            rdfs:label ?profession .
    FILTER(CONTAINS(LCASE(?profession), ""cinematographer""))
  }

  # Ensure the same person is returned for all three roles
  FILTER (?spouse = ?director && ?director = ?person)
}
```",4,4,5,2,3,3,3,71,0,0,1,0,0.0,0
826,14,train,Give me the predecessor of the parent of Prince Friedrich of Hesse and by Rhine.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/successor> ?v1 . <http://dbpedia.org/resource/Prince_Friedrich_of_Hesse_and_by_Rhine> <http://dbpedia.org/ontology/parent> ?v1 . },"```sparql
SELECT ?grandparentLabel WHERE {
  # Find Prince Friedrich of Hesse and by Rhine
  ?friedrich dbo:child ?parent .
  ?friedrich rdfs:label ""Prince Friedrich of Hesse and by Rhine""@en .

  # Find the parent of Prince Friedrich
  ?parent dbo:spouse ?otherParent .
  
  # Find the grandparent (predecessor of the parent)
  ?otherParent dbo:child ?grandparent .
  ?grandparent rdfs:label ?grandparentLabel .
}
```",2,2,3,2,1,3,3,71,0,0,1,0,0.0,0
582,34,train,"Give me the reference to the residence of the reference, that is a scientist, to Hirotaka Sugawara and figure known as --10-19.","SELECT ?result WHERE { ?v2 <http://dbpedia.org/property/residence> ?v1 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Scientist>. ?result <http://dbpedia.org/property/nickname> ""--10-19""^^<http://www.w3.org/2001/XMLSchema#gMonthDay> . ?v2 <http://xmlns.com/foaf/0.1/name> ""Hirotaka Sugawara""@en . ?result <http://xmlns.com/foaf/0.1/name> ?v1 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?scientist ?residence WHERE {
  # Assuming Hirotaka Sugawara is a person in DBpedia
  ?sugawara dbr:Hirotaka_Sugawara .
  
  # Find any scientist associated with Hirotaka Sugawara
  ?sugawara dbo:colleague ?scientist .
  FILTER (rdf:type(?scientist, dbo:Scientist)) .

  # Assuming --10-19 refers to a specific event or person, we need more context
  # For now, let's assume it might be related to a date or identifier in DBpedia
  OPTIONAL {
    ?event dbr:Event_with_identifier_--10-19 .
    ?scientist dbo:relatedTo ?event .
  }

  # Get the residence of the scientist
  ?scientist dbo:residenceLocation ?residence .
}
```",4,5,5,3,2,3,3,71,0,0,1,0,0.0,0
573,23,train,"Give me the person decedent at the administration, that is a region, of the real name of Charlie Baker (Australian footballer).",SELECT ?result WHERE { ?v0 <http://dbpedia.org/property/governor> ?v2 . <http://dbpedia.org/resource/Charlie_Baker_(Australian_footballer)> <http://xmlns.com/foaf/0.1/name> ?v2 . ?result <http://dbpedia.org/ontology/deathPlace> ?v0 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Region>. },"```sparql
# Step 1: Find Charlie Baker (Australian footballer) and his real name
SELECT ?charlieBaker ?realName WHERE {
  ?charlieBaker dbo:occupation dbr:Australian_footballer .
  ?charlieBaker foaf:name ""Charlie Baker"" .
  ?charlieBaker foaf:name ?realName .
}

# Step 2: Find the administrative region associated with his real name
SELECT DISTINCT ?region WHERE {
  # Assuming we have identified Charlie Baker's resource as ?charlieBaker from step 1
  VALUES (?charlieBaker) { <http://dbpedia.org/resource/Charlie_Baker_(Australian_footballer)> }
  
  ?charlieBaker dbo:birthPlace ?place .
  ?place dbo:administrativeRegion ?region .
}

# Step 3: Find a notable person decedent in that region
SELECT DISTINCT ?decedent WHERE {
  # Assuming we have identified the region as ?region from step 2
  VALUES (?region) { <http://dbpedia.org/resource/Some_Administrative_Region> } # Replace with actual region URI
  
  ?person dbo:deathPlace ?place .
  ?place dbo:administrativeRegion ?region .
  ?person foaf:name ?decedent .
}
```

Note: The above SPARQL queries are structured to be executed in sequence. You will need to replace `<http://dbpedia.org/resource/Some_Administrative_Region>` with the actual URI of the administrative region identified in step 2.",3,4,4,3,1,3,3,71,0,0,968,0,0.0,0
582,6,train,"Give me the father, that is an athlete and a soccer manager and a sports manager, of Masami Nagasawa.",SELECT ?result WHERE { ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerManager>. <http://dbpedia.org/resource/Masami_Nagasawa> <http://dbpedia.org/property/father> ?result . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Athlete>. ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsManager>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?father WHERE {
  ?person dbp:name ""Masami Nagasawa""@en .
  ?person dbo:father ?father .

  FILTER EXISTS { ?father dbo:occupation dbo:Athlete . }
  FILTER EXISTS { ?father dbo:occupation dbo:SoccerManager . }
  FILTER EXISTS { ?father dbo:occupation dbo:SportsManager . }
}
```",1,4,2,1,1,3,3,71,0,0,1,0,0.0,0
166,6,train,Give me the resting place of Gonzalo Queipo de Llano and entity in Spain.,SELECT ?result WHERE { <http://dbpedia.org/resource/Gonzalo_Queipo_de_Llano> <http://dbpedia.org/ontology/restingPlace> ?result . ?result <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Spain> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?restingPlace WHERE {
  dbr:Gonzalo_Queipo_de_Llano dbo:deathPlace ?restingPlace .
}
```",2,2,3,1,2,3,2,20,0,0,1,0,0.0,0
926,29,train,Give me the child of Ahmed III and successor of the child of Ahmed III and father of Mahmud II.,SELECT ?result WHERE { ?v3 <http://dbpedia.org/ontology/successor> ?result . ?v3 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Ahmed_III> . <http://dbpedia.org/resource/Mahmud_II> <http://dbpedia.org/property/father> ?result . <http://dbpedia.org/resource/Ahmed_III> <http://dbpedia.org/ontology/child> ?result . },"```sparql
SELECT ?child WHERE {
  wd:Q1234 wdt:P40 ?child . # Ahmed III (Q1234) has a child (?child)
  ?child wdt:P35 wd:Q1235 . # The child is Abdul Hamid I (Q1235)
  wd:Q1235 wdt:P22 wd:Q1236 . # Abdul Hamid I's father is Mahmud I (Q1236)
  wd:Q1236 wdt:P57 ?successor . # Mahmud I's successor is Osman III (?successor)
  wd:Q1235 wdt:P40 ?mahmudII . # Abdul Hamid I has a child Mahmud II (?mahmudII)
}
```",4,4,5,2,3,3,3,71,0,0,1,0,0.0,0
192,0,train,Give me the spouse of Clemence of Austria.,SELECT ?result WHERE { <http://dbpedia.org/resource/Clemence_of_Austria> <http://dbpedia.org/ontology/spouse> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>

SELECT ?spouse WHERE {
  ?person a dbo:Person ;
          foaf:name ""Clemence of Austria""@en .
  ?person dbo:spouse ?spouse .
}
```",1,1,2,1,1,3,2,20,0,0,1,0,0.0,0
874,8,train,Give me the band of the band member of The Jones Gang.,SELECT ?result WHERE { ?v0 <http://dbpedia.org/ontology/associatedMusicalArtist> <http://dbpedia.org/resource/The_Jones_Gang> . ?result <http://dbpedia.org/ontology/bandMember> ?v0 . },"```sparql
SELECT ?member ?otherBand WHERE {
  ?band dbr:The_Jones_Gang .
  ?band dbo:bandMember ?member .
  OPTIONAL { 
    ?member dbo:memberOf ?otherBand .
    FILTER(?otherBand != ?band)
  }
}
```",2,2,3,2,1,3,2,20,0,0,4,0,0.0,0
433,14,train,Give me the professional in the profession of Bob Marley.,SELECT ?result WHERE { <http://dbpedia.org/resource/Bob_Marley> <http://dbpedia.org/property/occupation> ?v1 . ?result <http://dbpedia.org/property/occupation> ?v1 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?professional WHERE {
  # Identify Bob Marley's DBpedia resource
  VALUES ?bobMarley { dbr:Bob_Marley }
  
  # Find individuals associated with him in a musical context
  ?association dbo:associatedBandMember ?bobMarley .
  ?association a dbo:MusicalArtist .

  BIND(?association AS ?professional)
}
```",2,2,3,2,1,3,3,71,0,0,45013,0,0.0,0
839,13,train,Give me the band of the member of Böhse Onkelz.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/bandMember> ?v1 . <http://dbpedia.org/resource/Böhse_Onkelz> <http://dbpedia.org/ontology/bandMember> ?v1 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?member ?otherBand WHERE {
  # Find members of Böhse Onkelz
  ?band a dbo:MusicalGroup ;
        dbo:musicalArtist ?member .
  
  FILTER (str(?band) = ""http://dbpedia.org/resource/Böhse_Onkelz"")

  OPTIONAL {
    # Check if the member is part of any other band
    ?otherBand a dbo:MusicalGroup ;
               dbo:musicalArtist ?member .
    
    FILTER (?band != ?otherBand)
  }
}
```",2,2,3,2,1,3,3,71,0,0,1,0,0.0,0
917,12,train,Give me the child of Kekūanāoʻa and child of Kekūanāoʻa.,"SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/parent> <http://dbpedia.org/resource/Kekūanāoʻa> . ?result <http://dbpedia.org/property/father> ""Kekūanāoʻa""@en . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?child WHERE {
  ?parent rdfs:label ""Kekūanāoʻa""@en .
  ?parent dbo:spouse ?spouse .
  OPTIONAL { ?parent dbo:child ?child . }
  FILTER (lang(?parentLabel) = 'en')
}
```",2,2,3,1,2,3,3,71,0,0,3,0,0.0,0
433,13,train,"Give me the associated musical artist of the associated musical artist, that is an artist and a musical artist, of Scott LaFaro.",SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . <http://dbpedia.org/resource/Scott_LaFaro> <http://dbpedia.org/ontology/associatedMusicalArtist> ?v1 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. },"```sparql
SELECT DISTINCT ?finalArtist WHERE {
  # Step 1: Find Scott LaFaro's associated musical artist
  ?scottLaFaro dbo:associatedMusicalArtist ?firstAssociatedArtist .
  
  FILTER(?scottLaFaro = dbpedia:Scott_LaFaro) .

  # Step 2: Find the associated musical artist of that first associated artist
  ?firstAssociatedArtist dbo:associatedMusicalArtist ?finalArtist .

  # Step 3: Ensure the final artist is both an artist and a musical artist
  ?finalArtist rdf:type dbpedia-owl:Musician .
}
```",2,4,3,2,1,3,3,71,0,0,13,0,0.0,0
326,4,train,Who is the awardee of French Legion of Honor?,"SELECT ?result WHERE { ?result <http://dbpedia.org/property/awards> ""French Legion of Honor""@en . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?person ?personLabel WHERE {
  ?award a dbo:Award .
  ?award rdfs:label ""Legion of Honor""@en .
  ?award dbo:recipient ?person .
  SERVICE wikibase:label { bd:serviceParam wikibase:language ""[AUTO_LANGUAGE],en"". }
}
LIMIT 10
```",1,1,2,1,1,3,2,20,0,0,13,0,0.0,0
18,14,train,Give me the parent of the professional in Actress and professional in .,"SELECT ?result WHERE { ?v2 <http://dbpedia.org/property/occupation> ""Actress""@en . ?result <http://dbpedia.org/property/occupation> """"@en . ?result <http://dbpedia.org/ontology/child> ?v2 . }","```sparql
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>
SELECT ?parentClass WHERE {
  ?actress rdfs:label ""Actress""@en.
  ?actress a ?class .
  ?class rdfs:subClassOf+ ?parentClass .
  FILTER NOT EXISTS { ?parentClass rdfs:subClassOf+ ?grandParentClass }
}
```",3,3,4,2,2,2,3,28,0,1,200,0.0,0.0,0
839,28,train,"Give me the band of the person born, that is a musical artist, as Kevin Richard Russell and band of Peter Schorowsky and band of Matthias Röhr.","SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?result <http://dbpedia.org/ontology/bandMember> <http://dbpedia.org/resource/Peter_Schorowsky> . ?v1 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?result <http://dbpedia.org/ontology/bandMember> <http://dbpedia.org/resource/Matthias_Röhr> . ?v1 <http://dbpedia.org/property/birthName> ""Kevin Richard Russell""@en . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT ?person ?band WHERE {
  # Kevin Richard Russell and The Black Keys
  { 
    ?person a dbo:MusicalArtist ;
            foaf:name ""Kevin Richard Russell"" .
    OPTIONAL { ?person dbo:memberOf dbr:The_Black_Keys . }
  } UNION
  # Peter Schorowsky (assuming he is a musical artist)
  {
    ?person a dbo:MusicalArtist ;
            foaf:name ""Peter Schorowsky"" .
    OPTIONAL { ?person dbo:memberOf ?band . }
  } UNION
  # Matthias Röhr and Revolverheld
  {
    ?person a dbo:MusicalArtist ;
            foaf:name ""Matthias Röhr"" .
    OPTIONAL { ?person dbo:memberOf dbr:Revolverheld . }
  }
}
```",4,5,5,2,3,3,3,71,0,0,1,0,0.0,0
232,4,train,"Give me the artistic movement of Ella Cheever Thayer and claim to fame of Katherine ""Kitty"" Marshall.",SELECT ?result WHERE { <http://dbpedia.org/resource/Katherine_%22Kitty%22_Marshall> <http://dbpedia.org/ontology/knownFor> ?result . <http://dbpedia.org/resource/Ella_Cheever_Thayer> <http://dbpedia.org/ontology/movement> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?movement ?claimToFame WHERE {
  # Query for Ella Cheever Thayer's artistic movement
  OPTIONAL {
    dbr:Ella_Cheever_Thayer dbo:movement ?movement .
  }
  
  # Query for Katherine ""Kitty"" Marshall's claim to fame
  OPTIONAL {
    dbr:Katherine_Marshall_(actress) dbo:notableWork ?claimToFame .
  }
}
```",2,2,3,1,2,2,2,9,0,0,1,0,0.0,0
329,8,train,Give me the birthplace of the author of The Tailor and Ansty.,SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/birthPlace> ?result . <http://dbpedia.org/resource/The_Tailor_and_Ansty> <http://dbpedia.org/property/author> ?v1 . },"```sparql
SELECT ?birthPlace WHERE {
  ?author foaf:name ""George MacDonald""@en .
  ?author dbo:birthPlace ?birthPlace .
}
```",2,2,3,2,1,2,3,28,0,2,2,0.0,0.0,0
192,8,train,Give me the child of the child of Stephen V of Hungary.,SELECT ?result WHERE { ?v0 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Stephen_V_of_Hungary> . ?result <http://dbpedia.org/ontology/parent> ?v0 . },"```sparql
SELECT DISTINCT ?grandchild WHERE {
  # Stephen V of Hungary resource identifier in DBpedia
  wd:Q123456 dbo:child ?child . 

  # Each child of Stephen V has their own children (Stephen's grandchildren)
  ?child dbo:child ?grandchild .
}
```

Note: Replace `wd:Q123456` with the actual DBpedia QID for Stephen V of Hungary. You can find this identifier by searching DBpedia or using a SPARQL query to identify him based on his name.",2,2,3,2,1,3,2,20,0,0,7,0,0.0,0
373,0,train,Give me the writer of 2300 Jackson Street (song).,SELECT ?result WHERE { <http://dbpedia.org/resource/2300_Jackson_Street_(song)> <http://dbpedia.org/property/writer> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?composer WHERE {
  ?song dbo:title ""2300 Jackson Street"" .
  ?song dbo:composer ?composer .
}
```",1,1,2,1,1,2,2,9,0,0,6,0,0.0,0
976,3,train,"Give me the administration, that is an organisation, of Kemal Kılıçdaroğlu.",SELECT ?result WHERE { ?result <http://dbpedia.org/property/leader> <http://dbpedia.org/resource/Kemal_Kılıçdaroğlu> . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?organization WHERE {
  ?person dbo:leader ?organization .
  ?person foaf:name ""Kemal Kılıçdaroğlu""@en .
}
```",1,2,2,1,1,3,3,71,0,0,3,0,0.0,0
465,30,train,"Give me the successor of Ercole II d'Este, Duke of Ferrara and successor of the child, that is a royalty, of Anne of Brittany and spouse of Archduchess Barbara of Austria.","SELECT ?result WHERE { <http://dbpedia.org/resource/Anne_of_Brittany> <http://dbpedia.org/ontology/child> ?v1 . ?v1 <http://dbpedia.org/ontology/successor> ?result . <http://dbpedia.org/resource/Ercole_II_d'Este,_Duke_of_Ferrara> <http://dbpedia.org/ontology/successor> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?result <http://dbpedia.org/ontology/spouse> <http://dbpedia.org/resource/Archduchess_Barbara_of_Austria> . }","```sparql
# Query to find the successor of Ercole II d'Este
SELECT ?successor WHERE {
  ?este dbo:spouse ?ercole2 .
  ?ercole2 foaf:name ""Ercole II d'Este""@en .
  ?este dbo:positionHeld ?position .
  ?position dbo:title ""Duke of Ferrara""@en ;
            dbo:successor ?successor .
}

# Query to find Anne of Brittany's child who is royalty and married Archduchess Barbara of Austria
SELECT ?child WHERE {
  ?anne foaf:name ""Anne of Brittany""@en .
  ?anne dbo:child ?child .
  ?child rdf:type dbo:Monarch ;
         dbo:spouse ?barbara .
  ?barbara foaf:name ""Barbara of Austria""@en .
}

# Query to find the successor of the identified child
SELECT ?successor WHERE {
  ?child dbo:spouse ?barbara .
  ?barbara foaf:name ""Barbara of Austria""@en .
  ?child dbo:positionHeld ?position .
  ?position dbo:title ?title ;
            dbo:successor ?successor .
}
```",4,5,5,2,3,3,3,71,0,0,1,0,0.0,0
865,32,train,"Give me the native of the residence, that is a country, of Ram Jaipal Singh Yadav and father of the child, that is a politician, of Abu Ahmad Abdul Hafiz.",SELECT ?result WHERE { ?v3 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Abu_Ahmad_Abdul_Hafiz> . ?v3 <http://dbpedia.org/property/father> ?result . ?result <http://dbpedia.org/ontology/birthPlace> ?v0 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. <http://dbpedia.org/resource/Ram_Jaipal_Singh_Yadav> <http://dbpedia.org/property/residence> ?v0 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?nativeLanguage WHERE {
  # Ram Jaipal Singh Yadav's residence country and its native language
  dbr:Ram_Jaipal_Singh_Yadav dbo:residenceCountry ?country .
  ?country dbo:officialLanguage ?nativeLanguage .

  # Abu Ahmad Abdul Hafiz's child who is a politician
  OPTIONAL {
    ?child dbo:parent dbr:Abu_Ahmad_Abdul_Hafiz ;
           rdf:type dbo:Politician .
  }
}
```",4,6,5,2,2,3,3,71,0,0,1,0,0.0,0
456,35,train,"Give me the spouse of the actor of Pacific Drive and band of the band, that is a musical artist, of Dean Brody.",SELECT ?result WHERE { <http://dbpedia.org/resource/Pacific_Drive> <http://dbpedia.org/property/starring> ?v2 . ?v2 <http://dbpedia.org/ontology/spouse> ?result . ?v1 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. <http://dbpedia.org/resource/Dean_Brody> <http://dbpedia.org/ontology/associatedMusicalArtist> ?v1 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?actorSpouse ?bandMemberArtist WHERE {
  # Step 1: Find the actor of ""Pacific Drive""
  ?movie dbo:title ""Pacific Drive""@en .
  ?movie dbo:starring ?actor .

  # Step 2: Find the spouse of this actor
  ?actor dbo:spouse ?actorSpouse .

  # Step 3: Identify Dean Brody's band
  dbr:Dean_Brody dbo:band ?band .

  # Step 4: Find a musical artist in this band
  ?bandMember dbo:member ?band .
  ?bandMember dbo:occupation dbc:MusicalArtist .
  ?bandMember dbo:name ?bandMemberArtist .
}
```",4,5,5,2,2,3,3,71,0,0,1,0,0.0,0
445,33,train,Give me the death place of the awardee of the establishment of 1820-03-10 and entity in England.,"SELECT ?result WHERE { ?v3 <http://dbpedia.org/property/awards> ?v0 . ?v0 <http://dbpedia.org/ontology/foundingDate> ""1820-03-10""^^<http://www.w3.org/2001/XMLSchema#date> . ?result <http://dbpedia.org/ontology/location> <http://dbpedia.org/resource/England> . ?v3 <http://dbpedia.org/ontology/deathPlace> ?result . }","```sparql
SELECT ?deathPlace WHERE {
  ?establishment dbo:establishedOn ""1820-03-10""^^xsd:date ;
                dbo:country dbr:England .
  ?award dbo:recipient ?person .
  ?person dbo:awardedBy ?establishment .
  ?person dbo:placeOfBirth ?birthPlace .
  ?person dbo:deathPlace ?deathPlace .
}
```",4,4,5,3,2,3,3,71,0,0,1,0,0.0,0
47,17,train,"Give me the awardee of the entity, that is an award, in India.",SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Award>. ?result <http://dbpedia.org/property/awards> ?v1 . ?v1 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/India> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?person ?name WHERE {
  ?award dbo:country dbr:India .
  ?award dbo:name ""Bharat Ratna""@en .
  ?award dbo:recipient ?person .
  ?person rdfs:label ?name .
  FILTER(LANG(?name) = 'en')
}
```",2,3,3,2,1,3,3,71,0,0,1632,0,0.0,0
791,0,train,Give me the spouse of Taira no Tokuko.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/spouse> <http://dbpedia.org/resource/Taira_no_Tokuko> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?spouse WHERE {
  dbr:Taira_no_Tokuko dbo:spouse ?spouse .
}
```",1,1,2,1,1,3,3,71,1,0,0,1.0,1.0,1.0
41,2,train,Give me the party of Enda Kenny.,SELECT ?result WHERE { <http://dbpedia.org/resource/Enda_Kenny> <http://dbpedia.org/ontology/party> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?party WHERE {
  dbr:Enda_Kenny dbo:partyAffiliation ?party .
}
```",1,1,2,1,1,2,3,28,0,0,1,0,0.0,0
465,15,train,"Give me the child of the parent of Ercole II d'Este, Duke of Ferrara.","SELECT ?result WHERE { ?result <http://dbpedia.org/property/father> ?v1 . <http://dbpedia.org/resource/Ercole_II_d'Este,_Duke_of_Ferrara> <http://dbpedia.org/ontology/parent> ?v1 . }","```sparql
SELECT ?parent ?child WHERE {
  # Find the parent (mother or father) of Ercole II d'Este
  dbpedia:Ercole_II_d%27Este_(Duke_of_Ferrara) dbo:mother|dbo:father ?parent .
  
  # Find a child of that parent
  ?parent dbo:child|dbo:son|dbo:daughter ?child .
}
```",2,2,3,2,1,3,3,71,0,0,2,0,0.0,0
456,29,train,Give me the professional in the alter ego of The Shadow and band of Alan Doyle and spouse of Danielle Spencer (Australian actress).,SELECT ?result WHERE { ?result <http://dbpedia.org/property/occupation> ?v3 . <http://dbpedia.org/resource/Alan_Doyle> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . <http://dbpedia.org/resource/Danielle_Spencer_(Australian_actress)> <http://dbpedia.org/ontology/spouse> ?result . <http://dbpedia.org/resource/The_Shadow> <http://dbpedia.org/property/alterEgo> ?v3 . },"```sparql
SELECT ?person WHERE {
  # Lamont Cranston (The Shadow's alter ego)
  ?shadow dbo:alterEgo dbr:Lamont_Cranston .
  
  # Great Big Sea (Alan Doyle's band)
  ?band rdf:type dbo:Band ;
        dbo:member dbr:Alan_Doyle .

  # Danielle Spencer's spouse
  ?spouse dbo:spouse dbr:Danielle_Spencer ;
          dbo:profession dbr:Actor ;
          dbo:nationality dbc:Australian_actresses .
  
  # Tim Minchin as the connecting person
  ?person rdfs:label ""Tim Minchin""@en ;
          dbo:spouse ?spouse ;
          dbo:member ?band .
}
```",4,4,5,2,3,3,3,71,0,0,1,0,0.0,0
917,1,train,Give me the child of Kekūanāoʻa.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/parent> <http://dbpedia.org/resource/Kekūanāoʻa> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>

SELECT ?child WHERE {
  ?person a dbo:Person ;
          foaf:name ""Kekūanāoʻa""@en .
  ?person dbo:child ?child .
}
```",1,1,2,1,1,3,3,71,0,0,6,0,0.0,0
130,0,train,Give me the figure known as Vanderbilt Commodores.,SELECT ?result WHERE { ?result <http://dbpedia.org/property/nickname> <http://dbpedia.org/resource/Vanderbilt_Commodores> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?team ?description WHERE {
  ?university a dbo:CollegeOrUniversity ;
              rdfs:label ""Vanderbilt University""@en .
  ?university dbo:team ?team .
  ?team rdfs:label ?label .
  FILTER(CONTAINS(LCASE(?label), ""vanderbilt commodores""))
  OPTIONAL { ?team dbo:description ?description }
}
```",1,1,2,1,1,3,2,20,0,0,3,0,0.0,0
582,16,train,"Give me the father, that is an athlete and a soccer manager and a sports manager, of the child of Kazuaki Nagasawa.",SELECT ?result WHERE { ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Athlete>. ?v1 <http://dbpedia.org/property/father> ?result . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerManager>. ?v1 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Kazuaki_Nagasawa> . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsManager>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?father WHERE {
  # Step 1: Identify Kazuaki Nagasawa
  ?kazuaki a dbo:Person ;
           foaf:name ""Kazuaki Nagasawa""@en .

  # Step 2: Find the child of Kazuaki Nagasawa
  ?child dbo:parent ?kazuaki .

  # Step 3: Identify the father of this child who is an athlete, soccer manager, and sports manager
  ?father dbo:spouse ?mother ;
          dbo:child ?child .
  
  FILTER EXISTS { ?father dbo:occupation dbp:Athlete . }
  FILTER EXISTS { ?father dbo:occupation dbp:SoccerManager . }
  FILTER EXISTS { ?father dbo:occupation dbp:SportsManager . }
}
```",2,5,3,2,1,3,3,71,0,0,1,0,0.0,0
715,32,train,"Give me the commander in the force, that is a military conflict, of Abd el-Krim and commander in the force of Francisco Largo Caballero.",SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Abd_el-Krim> . ?v3 <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Francisco_Largo_Caballero> . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v3 <http://dbpedia.org/ontology/commander> ?result . ?v1 <http://dbpedia.org/ontology/commander> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?conflict ?commander WHERE {
  # Query for Abd el-Krim in the Rif War
  { 
    ?rifWar a dbo:MilitaryConflict ;
            dbo:participatingMilitaryUnit ?unit1 .
    ?unit1 dbo:commander ?commander1 .
    ?commander1 rdfs:label ""Abd el-Krim""@en .
    BIND(""Rif War"" AS ?conflict)
  }
  
  UNION
  
  # Query for Francisco Largo Caballero in the Spanish Civil War
  { 
    ?civilWar a dbo:MilitaryConflict ;
              dbo:participatingMilitaryUnit ?unit2 .
    ?unit2 dbo:commander ?commander2 .
    ?commander2 rdfs:label ""Francisco Largo Caballero""@en .
    BIND(""Spanish Civil War"" AS ?conflict)
  }
}
```",4,5,5,2,2,3,3,71,0,0,4,0,0.0,0
417,30,train,"Give me the spouse of Princess Caroline-Mathilde of Denmark and child of the child, that is a royalty, of Frederick Francis III, Grand Duke of Mecklenburg-Schwerin and child of Christian X of Denmark.","SELECT ?result WHERE { ?v1 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Frederick_Francis_III,_Grand_Duke_of_Mecklenburg-Schwerin> . ?result <http://dbpedia.org/ontology/spouse> <http://dbpedia.org/resource/Princess_Caroline-Mathilde_of_Denmark> . ?result <http://dbpedia.org/ontology/parent> ?v1 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?result <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Christian_X_of_Denmark> . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?spouse ?child ?grandChild WHERE {
  # Princess Caroline-Mathilde and her spouse
  dbr:Princess_Caroline_Matilda_of_Denmark dbo:spouse ?spouse .

  # Children of Frederick Francis III
  dbr:Frederick_Francis_III,_Grand_Duke_of_Mecklenburg-Schwerin dbo:child ?child .

  # Check if the spouse is a child of Frederick Francis III
  ?spouse rdfs:label ?spouseLabel .
  FILTER(CONTAINS(LCASE(?spouseLabel), ""frederick francis iii""))

  # Children of Christian X
  dbr:Christian_X_of_Denmark dbo:child ?grandChild .

  # Check if the child is also a child of Christian X
  ?child rdfs:label ?childLabel .
  FILTER(CONTAINS(LCASE(?childLabel), ""christian x""))
}
```",4,5,5,2,3,3,3,71,0,0,1,0,0.0,0
373,3,train,Give me the profession of Beto Guedes.,SELECT ?result WHERE { <http://dbpedia.org/resource/Beto_Guedes> <http://dbpedia.org/property/occupation> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?occupation WHERE {
  dbr:Beto_Guedes dbo:occupation ?occupation .
}
```",1,1,2,1,1,2,2,9,0,0,1,0,0.0,0
341,2,train,Give me the awardee of List of awards and nominations received by Beyoncé.,SELECT ?result WHERE { ?result <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/List_of_awards_and_nominations_received_by_Beyoncé> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?award WHERE {
  ?award dbo:recipient dbr:Beyoncé .
}
```",1,1,2,1,1,2,2,9,0,0,1,0,0.0,0
47,24,train,Give me the office of the awardee of Banga Bhushan and office of Ajoy Mukherjee.,SELECT ?result WHERE { ?v2 <http://dbpedia.org/property/office> ?result . ?v2 <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/Banga_Bhushan> . <http://dbpedia.org/resource/Ajoy_Mukherjee> <http://dbpedia.org/property/office> ?result . },"```sparql
# Part 1: Find the office of the Banga Bibhushan awardee
SELECT ?awardee ?office WHERE {
  ?award dcterms:title ""Banga Bibhushan""@en .
  ?award dbo:recipient ?person .
  ?person foaf:name ?awardee .
  OPTIONAL { ?person dbo:occupation ?office }
}

UNION

# Part 2: Find the office of Ajoy Mukherjee
SELECT ?name ?office WHERE {
  ?person foaf:name ""Ajoy Mukherjee""@en .
  OPTIONAL { ?person dbo:occupation ?office }
}
```",3,3,4,2,2,3,3,71,0,0,1,0,0.0,0
158,4,train,"Who is the person deceased, that is an office holder and a politician, on 1945-09-15?","SELECT ?result WHERE { ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?result <http://dbpedia.org/ontology/deathDate> ""1945-09-15""^^<http://www.w3.org/2001/XMLSchema#date> . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?person ?name WHERE {
  ?person a dbo:Politician ;
          a dbo:OfficeHolder ;
          dbo:dateOfDeath ?deathDate .
  FILTER (YEAR(?deathDate) = 1945 && MONTH(?deathDate) = 9 && DAY(?deathDate) = 15)
  OPTIONAL { ?person rdfs:label ?name . FILTER(LANG(?name) = 'en') }
}
ORDER BY ?name
```",1,3,2,1,1,3,2,20,0,0,3,0,0.0,0
582,4,train,Give me the residence of Hirotaka Sugawara.,SELECT ?result WHERE { <http://dbpedia.org/resource/Hirotaka_Sugawara> <http://dbpedia.org/property/residence> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?residence WHERE {
  ?person a dbo:Person ;
          foaf:name ""Hirotaka Sugawara""@en .
  OPTIONAL { ?person dbo:residence ?residence . }
}
```",1,1,2,1,1,3,3,71,0,0,2,0,0.0,0
273,2,train,Give me the child of Edoardo Agnelli (1831-1871).,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/parent> <http://dbpedia.org/resource/Edoardo_Agnelli_(1831-1871)> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>

SELECT ?child WHERE {
  ?person dbo:birthDate ?birth .
  ?person dbo:deathDate ?death .
  FILTER (YEAR(?birth) = 1831 && YEAR(?death) = 1871)
  ?person dbo:child ?child .
}
```",1,1,2,1,1,3,2,20,0,0,1,0,0.0,0
456,22,train,"Give me the band of the band, that is a musical artist, of Dean Brody and spouse of Danielle Spencer (Australian actress).",SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?v1 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . <http://dbpedia.org/resource/Danielle_Spencer_(Australian_actress)> <http://dbpedia.org/ontology/spouse> ?result . <http://dbpedia.org/resource/Dean_Brody> <http://dbpedia.org/ontology/associatedMusicalArtist> ?v1 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?band WHERE {
  ?person a dbo:MusicalArtist ;
          foaf:name ""Dean Brody"" .
  
  ?person dbo:memberOfBand ?band .

  OPTIONAL { 
    ?spouse dbo:spouse ?person .
    ?spouse foaf:name ""Danielle Spencer""@en .
  }
}
```",3,4,4,2,2,3,3,71,0,0,1,0,0.0,0
892,8,train,"Give me the administration, that is Italian and a region and a settlement and an administrative region, of Democratic Party (Italy).",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Italy>. ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Region>. ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/AdministrativeRegion>. ?result <http://dbpedia.org/property/leaderParty> <http://dbpedia.org/resource/Democratic_Party_(Italy)> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>

SELECT DISTINCT ?region WHERE {
  ?region rdf:type dbo:Region .
  ?region dbo:country dbr:Italy .
  ?region rdf:type dbo:Settlement .
  ?region rdf:type dbo:AdministrativeRegion .
  OPTIONAL { 
    ?party dbr:Democratic_Party_(Italy) .
    ?party dbo:member ?person .
    ?person dbo:holdsOffice ?office .
    ?office dbo:heldBy ?person .
    ?office dbo:administrates ?region .
  }
}
```",1,5,2,1,1,3,3,71,0,0,14,0,0.0,0
926,23,train,Give me the father of the father of the spouse of Neşerek Kadın.,SELECT ?result WHERE { <http://dbpedia.org/resource/Neşerek_Kadın> <http://dbpedia.org/ontology/spouse> ?v1 . ?v2 <http://dbpedia.org/property/father> ?result . ?v1 <http://dbpedia.org/property/father> ?v2 . },"```sparql
SELECT ?grandFatherOfSpouse WHERE {
  ?neserekKadin a dbo:Person ;
                rdfs:label ""Neşerek Kadın""@en .
  
  OPTIONAL { ?neserekKadin dbo:spouse ?spouse . }
  
  OPTIONAL { ?spouse dbo:father ?fatherOfSpouse . }
  
  OPTIONAL { ?fatherOfSpouse dbo:father ?grandFatherOfSpouse . }
}
```",3,3,4,3,1,3,3,71,0,2296,1,0.0,0.0,0
507,29,train,"Give me the spouse of Anne V. Coates and professional in Film director, television director and director of the movie, that is a movie and a work, with Beryl Reid.","SELECT ?result WHERE { ?result <http://dbpedia.org/property/occupation> ""Film director, television director""@en . ?v3 <http://dbpedia.org/property/starring> <http://dbpedia.org/resource/Beryl_Reid> . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Film>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?result <http://dbpedia.org/ontology/spouse> <http://dbpedia.org/resource/Anne_V._Coates> . ?v3 <http://dbpedia.org/ontology/director> ?result . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?spouse ?directorRole ?movie WHERE {
  # Find Anne V. Coates' spouse
  dbr:Anne_V._Coates dbo:spouse ?spouse .
  
  # Ensure the spouse is a director (film or television)
  OPTIONAL { ?spouse dbo:occupation ?occupation . FILTER(CONTAINS(LCASE(?occupation), ""director"")) }
  
  # Check if they directed any movies featuring Beryl Reid
  ?movie dbo:director ?spouse ;
         dbo:starring dbr:Beryl_Reid .
}
```",4,6,5,2,3,3,3,71,0,0,1,0,0.0,0
274,14,train,Give me the professional in the designer of Tetris Classic and band member of Dizzy Gillespie.,SELECT ?result WHERE { ?result <http://dbpedia.org/property/occupation> ?v2 . <http://dbpedia.org/resource/Tetris_Classic> <http://dbpedia.org/property/designer> ?v2 . ?result <http://dbpedia.org/ontology/associatedMusicalArtist> <http://dbpedia.org/resource/Dizzy_Gillespie> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?person WHERE {
  # Find individuals associated with Tetris Classic design
  ?designer dbo:occupation dbr:Video_game_designer .
  ?designer dbo:work dbr:Tetris_Classic .

  # Find individuals who were band members of Dizzy Gillespie
  ?musician dbo:memberOfBand dbr:Dizzy_Gillespie .
  
  # Look for a person who is both a designer and a musician
  FILTER (?designer = ?musician)
  
  # Return the person's name
  ?person rdfs:label ?name .
  FILTER (lang(?name) = 'en')
  BIND(?designer AS ?person)
}
```",3,3,4,2,2,2,3,28,0,0,8,0,0.0,0
326,13,train,"Give me the resident of the birthplace, that is a state and British, of the professional in Writer.","SELECT ?result WHERE { ?v0 <http://dbpedia.org/property/occupation> ""Writer""@en . ?v0 <http://dbpedia.org/ontology/birthPlace> ?v1 . ?result <http://dbpedia.org/property/residence> ?v1 . ?v1 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/United_Kingdom>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/AdministrativeRegion>. }","```sparql
SELECT DISTINCT ?resident WHERE {
  ?writer dbo:occupation dbr:Writer ;
          foaf:nationality dbr:United_Kingdom .
  
  ?writer dbo:birthPlace ?birthplace .
  
  ?birthplace a dbo:State ; 
              dbo:country dbr:United_Kingdom .

  ?resident dbo:residence ?birthplace .
}
```",3,5,4,3,1,3,2,20,0,0,120,0,0.0,0
459,18,train,Give me the governor of Dana Murphy and person born as the birth name of Kevin Stitt.,SELECT ?result WHERE { <http://dbpedia.org/resource/Kevin_Stitt> <http://dbpedia.org/property/birthName> ?v0 . <http://dbpedia.org/resource/Dana_Murphy> <http://dbpedia.org/property/governor> ?result . ?result <http://dbpedia.org/property/birthName> ?v0 . },"```sparql
# Find the governor of the state governed by Dana Murphy
SELECT ?governor WHERE {
  ?dana a dbo:Governor ;
        dbp:governs ?state .
  ?governor a dbo:Governor ;
            dbp:governs ?state ;
            foaf:name ?name .
}

UNION

# Find the person with the same birth name as Kevin Stitt
SELECT ?person WHERE {
  ?kevin a dbo:Person ;
         foaf:name ""Kevin Stitt""@en ;
         dbp:birthday ?birthday ;
         dbp:birthName ?birthName .
  ?person a dbo:Person ;
          dbp:birthName ?birthName ;
          foaf:name ?name .
  FILTER(?person != ?kevin)
}
```",3,3,4,2,2,2,3,28,0,0,1,0,0.0,0
791,2,train,Give me the father of Emperor Go-Toba.,SELECT ?result WHERE { <http://dbpedia.org/resource/Emperor_Go-Toba> <http://dbpedia.org/property/father> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>

SELECT ?father WHERE {
  ?emperor a dbo:Emperor ;
           foaf:name ""Go-Toba""@en .
  ?emperor dbo:father ?father .
}
```",1,1,2,1,1,3,3,71,0,0,1,0,0.0,0
129,6,train,Give me the professional in  and associated musical artist of EarthGang.,"SELECT ?result WHERE { ?result <http://dbpedia.org/property/occupation> """"@en . <http://dbpedia.org/resource/EarthGang> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?occupation ?associatedArtist WHERE {
  VALUES ?earthGang { dbr:EarthGang }
  
  ?earthGang a dbo:Band ;
             dbo:occupation ?occupation .
  
  OPTIONAL {
    ?earthGang dbo:associatedMusicalArtist ?associatedArtist .
  }
}
```",2,2,3,1,2,2,3,28,0,0,3,0,0.0,0
507,23,train,Give me the spouse of the person born as the birth name of Anne V. Coates.,SELECT ?result WHERE { ?v0 <http://dbpedia.org/property/birthName> ?v2 . ?result <http://dbpedia.org/ontology/spouse> ?v0 . <http://dbpedia.org/resource/Anne_V._Coates> <http://dbpedia.org/property/birthName> ?v2 . },"```sparql
SELECT ?spouse WHERE {
  wd:Q123456 foaf:name ""Anne V. Coates""@en .
  ?person schema:birthName ?birthName .
  FILTER(?birthName = ""Anne V. Coates"") .
  OPTIONAL { ?person dbo:spouse ?spouse . }
}
```

Note: Replace `wd:Q123456` with the actual DBpedia resource identifier for Anne V. Coates if known, or use a more specific query to identify her birth name.",3,3,4,3,1,3,3,71,0,0,1,0,0.0,0
888,3,train,"Give me the force, that is a societal event and an event, of Serhiy Kotenko.",SELECT ?result WHERE { ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?result <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Serhiy_Kotenko> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?event ?eventType WHERE {
  VALUES ?person { dbr:Serhiy_Kotenko }
  
  ?event dbo:agent ?person .
  OPTIONAL { 
    ?event a ?eventType .
    FILTER (?eventType IN (dbo:SocietalEvent, dbo:Event))
  }
}
```",1,3,2,1,1,3,2,20,0,0,1,0,0.0,0
645,25,train,"Give me the military force of Spanish Civil War and leader of the office, that is a government agency and an organisation, of Camilo Menéndez Tolosa.",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/battle> <http://dbpedia.org/resource/Spanish_Civil_War> . ?v1 <http://dbpedia.org/ontology/leader> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. <http://dbpedia.org/resource/Camilo_Menéndez_Tolosa> <http://dbpedia.org/property/office> ?v1 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/GovernmentAgency>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?militaryForce ?leaderRole WHERE {
  # Find Camilo Menéndez Tolosa's involvement in the Spanish Civil War
  dbr:Camilo_Menéndez_Tolosa dbo:militaryConflict dbr:Spanish_Civil_War .
  
  OPTIONAL {
    # Identify military force associated with him during the war
    ?militaryForce dbo:member dbr:Camilo_Menéndez_Tolosa .
    ?militaryForce rdfs:label ?forceLabel .
    FILTER (LANG(?forceLabel) = ""en"")
  }
  
  OPTIONAL {
    # Identify any leadership role in a government agency or organization
    ?leaderRole dbo:head dbr:Camilo_Menéndez_Tolosa ;
               a dbo:GovernmentAgency ; # Assuming the office is a type of Government Agency
               rdfs:label ?roleLabel .
    FILTER (LANG(?roleLabel) = ""en"")
  }
}
```",3,5,4,2,2,3,3,71,0,0,1,0,0.0,0
216,4,train,Give me the awardee of Australian Defence Medal.,SELECT ?result WHERE { ?result <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/Australian_Defence_Medal> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?person WHERE {
  ?medal rdf:type dbo:Award .
  ?medal rdfs:label ""Australian Defence Medal""@en .
  
  ?recipient dbo:award ?medal ;
             a dbo:Person .
  
  BIND(?recipient AS ?person)
}
```",1,1,2,1,1,2,3,28,5,2,0,0.7142857142857143,1.0,0.8333333333333333
965,38,train,"Give me the parent of the child, that is a royalty, of Prince Louis of Battenberg and parent of the person born, that is a noble, as Prince George of Battenberg.","SELECT ?result WHERE { ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v3 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Prince_Louis_of_Battenberg> . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Noble>. ?v3 <http://dbpedia.org/ontology/parent> ?result . ?v0 <http://dbpedia.org/property/birthName> ""Prince George of Battenberg""@en . ?v0 <http://dbpedia.org/ontology/parent> ?result . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?royalChildParent ?nobleChildParent WHERE {
  # Find a child of Prince Louis of Battenberg who is royalty
  ?child dbo:parent dbr:Prince_Louis_of_Battenberg .
  ?child dbo:title ?title .
  FILTER(CONTAINS(LCASE(str(?title)), ""prince"") || CONTAINS(LCASE(str(?title)), ""duke"") || CONTAINS(LCASE(str(?title)), ""king"") || CONTAINS(LCASE(str(?title)), ""queen""))

  # Find the parent of this royal child
  ?child dbo:parent ?royalChildParent .

  # Find a child of Prince George of Battenberg who is noble
  ?nobleChild dbo:parent dbr:Prince_George_of_Battenberg .
  ?nobleChild dbo:title ?nobleTitle .
  FILTER(CONTAINS(LCASE(str(?nobleTitle)), ""prince"") || CONTAINS(LCASE(str(?nobleTitle)), ""duke"") || CONTAINS(LCASE(str(?nobleTitle)), ""count"") || CONTAINS(LCASE(str(?nobleTitle)), ""baron""))

  # Find the parent of this noble child
  ?nobleChild dbo:parent ?nobleChildParent .
}
```",4,6,5,2,2,3,3,71,0,0,2,0,0.0,0
445,35,train,"Give me the entity in the residence, that is a country, of Anna Sharkey and entity in the award of George H. Cameron.",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/country> ?v1 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. <http://dbpedia.org/resource/Anna_Sharkey> <http://dbpedia.org/property/residence> ?v2 . ?result <http://dbpedia.org/ontology/location> ?v2 . <http://dbpedia.org/resource/George_H._Cameron> <http://dbpedia.org/property/awards> ?v1 . },"```sparql
# Query for Anna Sharkey's residence country
SELECT ?country WHERE {
  ?person dbo:birthName ""Anna Sharkey"" .
  ?person dbo:residence ?residence .
  ?residence rdf:type dbo:Country .
  ?residence rdfs:label ?country .
  FILTER (lang(?country) = 'en')
}

UNION

# Query for George H. Cameron's award
SELECT ?award WHERE {
  ?person dbo:name ""George H. Cameron"" .
  ?person dbo:award ?award .
  ?award rdfs:label ?awardLabel .
  FILTER (lang(?awardLabel) = 'en')
}
```",4,5,5,2,2,3,3,71,0,0,102,0,0.0,0
433,39,train,Give me the associated musical artist of Bill Evans and professional in the profession of the writer of Slowhand at 70 – Live at the Royal Albert Hall.,SELECT ?result WHERE { <http://dbpedia.org/resource/Slowhand_at_70_–_Live_at_the_Royal_Albert_Hall> <http://dbpedia.org/property/writer> ?v0 . ?v0 <http://dbpedia.org/property/occupation> ?v1 . ?result <http://dbpedia.org/property/occupation> ?v1 . <http://dbpedia.org/resource/Bill_Evans> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . },"```sparql
# Query to find the associated musical artist of Bill Evans
SELECT ?artist WHERE {
  ?billEvans dbo:associatedMusicalArtist ?artist .
  FILTER(CONTAINS(LCASE(?billEvans), ""bill evans""))
}

UNION

# Query to find the profession of Eric Clapton (writer/producer of Slowhand at 70)
SELECT DISTINCT ?profession WHERE {
  ?clapton dbo:occupation ?profession .
  FILTER(CONTAINS(LCASE(?clapton), ""eric clapton"") || CONTAINS(LCASE(?clapton), ""slowhand""))
}
```",4,4,5,3,2,3,3,71,0,0,4,0,0.0,0
865,38,train,"Give me the father of the child, that is a politician, of Abu Ahmad Abdul Hafiz and father of the child of Abu Ahmad Abdul Hafiz.",SELECT ?result WHERE { ?v2 <http://dbpedia.org/property/father> ?result . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v2 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Abu_Ahmad_Abdul_Hafiz> . ?v1 <http://dbpedia.org/property/father> ?result . ?v1 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Abu_Ahmad_Abdul_Hafiz> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?child ?politician WHERE {
  # Identify Abu Ahmad Abdul Hafiz
  VALUES ?abuAhmad { dbr:Abu_Ahmad_Abdul_Hafiz }

  # Find children of Abu Ahmad Abdul Hafiz
  ?child dbo:parent ?abuAhmad .

  # Check if any child is a politician
  OPTIONAL {
    ?politician dbo:parent ?abuAhmad .
    ?politician dbo:occupation dbr:Politician .
  }

  # Return the children and check if they are politicians
}
```",4,5,5,2,2,3,3,71,0,0,1,0,0.0,0
839,34,train,"Give me the band of Matthias Röhr and band of the person born, that is a musical artist, as the persona of Kevin Russell (musician).",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/bandMember> <http://dbpedia.org/resource/Matthias_Röhr> . ?v1 <http://dbpedia.org/property/birthName> ?v2 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?v1 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . <http://dbpedia.org/resource/Kevin_Russell_(musician)> <http://xmlns.com/foaf/0.1/givenName> ?v2 . },"```sparql
# Query to get the band of Matthias Röhr
SELECT ?band WHERE {
  ?person foaf:name ""Matthias Röhr"" .
  ?person dbo:memberOf ?band .
}

UNION

# Query to get the band associated with Kevin Russell (persona of Kevin Gordon)
SELECT ?band WHERE {
  ?person foaf:name ""Kevin Russell""@en .
  ?person dbo:birthDate ?date .
  FILTER(?date >= ""1963-02-28""^^xsd:date) # Ensuring he is a musical artist born as such
  OPTIONAL { ?person dbo:memberOf ?band . }
}
```",4,5,5,3,2,3,3,71,0,0,1,0,0.0,0
926,18,train,Give me the child of Ahmed III and successor of Mustafa III and father of Mahmud II.,SELECT ?result WHERE { <http://dbpedia.org/resource/Ahmed_III> <http://dbpedia.org/ontology/child> ?result . <http://dbpedia.org/resource/Mahmud_II> <http://dbpedia.org/property/father> ?result . <http://dbpedia.org/resource/Mustafa_III> <http://dbpedia.org/ontology/successor> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?person WHERE {
  ?person dbo:child dbr:Ahmed_III .
  ?person dbo:succeededBy dbr:Mustafa_III .
  ?person dbo:parent dbr:Mahmud_II .
}
```",3,3,4,1,3,3,3,71,0,0,1,0,0.0,0
495,7,train,Give me the child of the father of William I of Württemberg.,SELECT ?result WHERE { ?result <http://dbpedia.org/property/father> ?v1 . <http://dbpedia.org/resource/William_I_of_Württemberg> <http://dbpedia.org/property/father> ?v1 . },"```sparql
SELECT ?father ?child WHERE {
  wd:Q1234567 foaf:parent ?father . # Replace Q1234567 with William I of Württemberg's DBpedia ID
  ?father dbo:child ?child .
}
```

Note: The placeholder `wd:Q1234567` should be replaced with the actual DBpedia resource identifier for William I of Württemberg. You can find this by searching DBpedia or using a SPARQL query to identify his unique ID.",2,2,3,2,1,3,2,20,0,0,3,0,0.0,0
582,39,train,"Give me the player in Kazuaki Nagasawa and figure known as the nickname of the team, that is an organisation, of Hajime Moriyasu.",SELECT ?result WHERE { ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?v0 <http://dbpedia.org/property/nickname> ?v1 . ?result <http://dbpedia.org/property/nickname> ?v1 . <http://dbpedia.org/resource/Kazuaki_Nagasawa> <http://dbpedia.org/ontology/team> ?result . ?v0 <http://dbpedia.org/ontology/coach> <http://dbpedia.org/resource/Hajime_Moriyasu> . },"```sparql
# Query to find Kazuaki Nagasawa's team and its nickname
SELECT ?team ?nickname WHERE {
  ?player dbo:birthName ""Kazuaki Nagasawa""@en .
  ?player dbo:playsFor ?team .
  OPTIONAL { ?team rdfs:label ?nickname FILTER (lang(?nickname) = 'en') }
}

# Query to find Hajime Moriyasu's organization and its nickname
SELECT ?organization ?orgNickname WHERE {
  ?person dbo:birthName ""Hajime Moriyasu""@en .
  ?person dbo:worksFor ?organization .
  OPTIONAL { ?organization rdfs:label ?orgNickname FILTER (lang(?orgNickname) = 'en') }
}

# Query to find a player who has played for both teams
SELECT DISTINCT ?player WHERE {
  ?player dbo:playsFor ?team1 .
  ?team1 rdfs:label ?nickname1 FILTER (lang(?nickname1) = 'en').
  
  ?player dbo:worksFor ?organization .
  ?organization rdfs:label ?orgNickname FILTER (lang(?orgNickname) = 'en') .

  # Assuming we have the nicknames from previous queries
  VALUES (?nickname1 ?orgNickname) {
    (""Team Nickname for Nagasawa"" ""Organization Nickname for Moriyasu"")
  }
}
```",4,5,5,3,2,3,3,71,0,0,1,0,0.0,0
791,1,train,Give me the predecessor of Emperor Antoku.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/successor> <http://dbpedia.org/resource/Emperor_Antoku> . },"```sparql
SELECT ?predecessor WHERE {
  ?emperor rdf:type dbo:EmperorOfJapan ;
           foaf:name ""Antoku"" .
  ?emperor dbo:predecessor ?predecessor .
}
```",1,1,2,1,1,3,3,71,0,0,1,0,0.0,0
130,8,train,"Give me the entity in the administration, that is American, of .","SELECT ?result WHERE { ?v0 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/United_States>. ?result <http://dbpedia.org/ontology/state> ?v0 . ?v0 <http://dbpedia.org/property/governor> """"@en . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?entity WHERE {
  ?entity dbo:country dbr:United_States .
  ?entity dbo:position ?position .
  FILTER EXISTS { ?position dbo:administrativeBody ?administration }
}
```",2,3,3,2,1,3,2,20,0,0,26076,0,0.0,0
326,0,train,"Give me the person decedent at Rancho Mirage, California.","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/deathPlace> <http://dbpedia.org/resource/Rancho_Mirage,_California> . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?person WHERE {
  ?person dbo:deathPlace dbr:Rancho_Mirage .
}
```",1,1,2,1,1,2,2,9,0,5,97,0.0,0.0,0
445,4,train,"Give me the residence, that is a country, of Anna Sharkey.",SELECT ?result WHERE { ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. <http://dbpedia.org/resource/Anna_Sharkey> <http://dbpedia.org/property/residence> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?country WHERE {
  ?person foaf:name ""Anna Sharkey""@en .
  ?person dbo:residence ?residence .
  ?residence rdf:type dbo:Country .
  BIND(?residence AS ?country)
}
```",1,2,2,1,1,3,3,71,0,0,2,0,0.0,0
124,35,train,"Give me the commander in the war, that is a societal event and a military conflict, of A Field Battery, Royal Australian Artillery and military force of the force, that is a societal event and a military conflict, of Herbert Kitchener, 1st Earl Kitchener.","SELECT ?result WHERE { ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?v1 <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Herbert_Kitchener,_1st_Earl_Kitchener> . <http://dbpedia.org/resource/A_Field_Battery,_Royal_Australian_Artillery> <http://dbpedia.org/ontology/battle> ?v2 . ?v2 <http://dbpedia.org/ontology/commander> ?result . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?result <http://dbpedia.org/ontology/battle> ?v1 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?fieldBatteryCommander ?kitchenerForce WHERE {
  # Find a field battery from the Royal Australian Artillery and its commander during a war
  ?battery dbo:type dbr:Field_Battery ;
           dbo:militaryConflict ?war1 ;
           dbo:commander ?fieldBatteryCommander .
  
  # Ensure the war is both a societal event and a military conflict
  ?war1 rdf:type/dbo:supertype* dbr:Military_Conflict, dbr:Societal_Event .

  # Find Herbert Kitchener's military force during a similar context of war
  dbr:Herbert_Kitchener dbo:militaryConflict ?war2 ;
                        dbo:commanderOfMilitaryForce ?kitchenerForce .
  
  # Ensure the same type of war for consistency
  ?war2 rdf:type/dbo:supertype* dbr:Military_Conflict, dbr:Societal_Event .

  FILTER(?war1 != ?war2) # To ensure they are different wars but similar in nature
}
```",4,8,5,2,2,3,3,71,0,0,9,0,0.0,0
326,5,train,"Give me the award, that is a country, of Adelbert Cronkhite.",SELECT ?result WHERE { ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. <http://dbpedia.org/resource/Adelbert_Cronkhite> <http://dbpedia.org/property/awards> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?award WHERE {
  ?person a dbo:MilitaryPerson ;
          foaf:name ""Adelbert Cronkhite""@en .
  
  ?person dbo:receivedAward ?award .

  ?award rdfs:label ?awardLabel .
  FILTER (lang(?awardLabel) = 'en')

  OPTIONAL { 
    ?country a dbo:Country ;
             rdfs:label ?countryLabel .
    FILTER (lang(?countryLabel) = 'en' && ?awardLabel = ?countryLabel)
  }
  
  FILTER EXISTS { ?country . } # Ensures that the award is also a country
}
```",1,2,2,1,1,3,2,20,0,0,1,0,0.0,0
47,0,train,Give me the office of Suvendu Adhikari.,SELECT ?result WHERE { <http://dbpedia.org/resource/Suvendu_Adhikari> <http://dbpedia.org/property/office> ?result . },"```sparql
SELECT ?office WHERE {
  ?person foaf:name ""Suvendu Adhikari""@en .
  ?person dbo:office ?office .
}
```",1,1,2,1,1,3,3,71,0,0,8,0,0.0,0
417,27,train,"Give me the child of the child, that is a royalty, of the parent, that is a royalty, of Alexandrine of Mecklenburg-Schwerin.",SELECT ?result WHERE { <http://dbpedia.org/resource/Alexandrine_of_Mecklenburg-Schwerin> <http://dbpedia.org/ontology/parent> ?v1 . ?result <http://dbpedia.org/ontology/parent> ?v2 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v2 <http://dbpedia.org/property/father> ?v1 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. },"```sparql
SELECT DISTINCT ?grandchild WHERE {
  # Step 1: Find Alexandrine's parent who is a royalty
  ?parent dbo:spouse|dbo:partner ?alexandrine .
  ?alexandrine foaf:name ""Alexandrine of Mecklenburg-Schwerin""@en .

  # Ensure the parent is a member of royalty
  ?parent rdf:type dbo:Monarch .

  # Step 2: Find one child of this royal parent
  ?child dbo:spouse|dbo:partner ?parent .
  
  # Step 3: Find a grandchild (child of the child) who is also a royalty
  ?grandchild dbo:spouse|dbo:partner ?child .
  ?grandchild rdf:type dbo:Monarch .
}
```",3,5,4,3,1,3,3,71,0,0,8,0,0.0,0
216,0,train,Give me the player in Igor Bišćan.,SELECT ?result WHERE { <http://dbpedia.org/resource/Igor_Bišćan> <http://dbpedia.org/ontology/team> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?team WHERE {
  dbr:Igor_Bišćan dbo:team ?team .
}
```",1,1,2,1,1,3,3,71,6,0,0,1.0,1.0,1.0
136,6,train,Give me the landmark at elevation of the award of Bret Anthony Johnston.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/elevation> ?v0 . <http://dbpedia.org/resource/Bret_Anthony_Johnston> <http://dbpedia.org/property/awards> ?v0 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?landmark WHERE {
  # Find the award Bret Anthony Johnston received
  ?award dbo:recipient dbr:Bret_Anthony_Johnston .
  
  # Determine the location of the award ceremony
  ?award dbo:location dbr:Cipriani_Wall_Street .

  # Get landmarks near Battery Park (elevation ~0 meters)
  ?landmark dbo:elevation ""0""^^xsd:int ;
            dbo:location dbr:Battery_Park .
}
```",2,2,3,2,1,2,2,9,0,0,909,0,0.0,0
892,4,train,Give me the profession of Henri Crolla.,SELECT ?result WHERE { <http://dbpedia.org/resource/Henri_Crolla> <http://dbpedia.org/property/occupation> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?occupation WHERE {
  dbr:Henri_Crolla dbo:occupation ?occupation .
}
```",1,1,2,1,1,3,3,71,1,0,1,1.0,0.5,0.6666666666666666
124,20,train,"Give me the military force of the war, that is an event and a military conflict and a societal event, of Frank Rhodes (British Army officer) and commander in Mahdist War.",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/battle> ?v2 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. <http://dbpedia.org/resource/Frank_Rhodes_(British_Army_officer)> <http://dbpedia.org/ontology/battle> ?v2 . <http://dbpedia.org/resource/Mahdist_War> <http://dbpedia.org/ontology/commander> ?result . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?militaryForce WHERE {
  ?person a dbo:MilitaryPerson ;
          foaf:name ""Frank Rhodes"" ;
          dbo:commanderOf ?event .
  
  ?event a dbo:MilitaryConflict ;
         dbo:participatingMilitaryUnit ?unit .

  ?unit dbo:militaryBranch ?militaryForce .

  FILTER(CONTAINS(LCASE(?event), ""mahdist war""))
}
```",3,6,4,2,2,3,3,71,0,0,3,0,0.0,0
216,5,train,Give me the designer of Woolfe: The Red Hood Diaries.,SELECT ?result WHERE { <http://dbpedia.org/resource/Woolfe:_The_Red_Hood_Diaries> <http://dbpedia.org/property/designer> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?designer WHERE {
  ?game dbp:title ""Woolfe: The Red Hood Diaries""@en .
  OPTIONAL { ?game dbo:creator ?designer . }
  OPTIONAL { ?game dbp:developer ?designer . }
}
```",1,1,2,1,1,2,3,28,0,1,4,0.0,0.0,0
582,22,train,Give me the figure known as the nickname of Japan national football team and reference to Japan.,"SELECT ?result WHERE { ?result <http://dbpedia.org/property/nickname> ?v1 . ?result <http://xmlns.com/foaf/0.1/name> ""Japan""@en . <http://dbpedia.org/resource/Japan_national_football_team> <http://dbpedia.org/property/nickname> ?v1 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?nickname WHERE {
  dbr:Japan_national_football_team dbo:nickname ?nickname .
}
```",3,3,4,2,2,3,3,71,0,0,1,0,0.0,0
47,22,train,Give me the office of the awardee of Padma Vibhushan and office of Suvendu Adhikari.,SELECT ?result WHERE { ?v1 <http://dbpedia.org/property/office> ?result . <http://dbpedia.org/resource/Suvendu_Adhikari> <http://dbpedia.org/property/office> ?result . ?v1 <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/Padma_Vibhushan> . },"```sparql
# Query for offices of Padma Vibhushan awardees
SELECT DISTINCT ?person ?office WHERE {
  ?person dbo:award dbp:Padma_Vibhushan .
  OPTIONAL { ?person dbo:office ?office . }
}

# Query for the office of Suvendu Adhikari
SELECT DISTINCT ?office WHERE {
  ?suvendu foaf:name ""Suvendu Adhikari""@en ;
           dbo:office ?office .
}
```",3,3,4,2,2,3,3,71,0,0,2,0,0.0,0
443,6,train,Give me the birthplace of Ulf Lundell and landmark at elevation of 28.,"SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/elevation> ""28""^^<http://www.w3.org/2001/XMLSchema#integer> . <http://dbpedia.org/resource/Ulf_Lundell> <http://dbpedia.org/ontology/birthPlace> ?result . }","```sparql
# Query to find the birthplace of Ulf Lundell
SELECT ?birthPlace WHERE {
  ?person dbo:birthName ""Ulf Lundell""@sv.
  ?person dbo:birthPlace ?birthPlace.
}

# Query to find a landmark at an elevation of 28 (assuming meters)
SELECT ?landmark ?elevation WHERE {
  ?landmark a dbo:Lighthouse ; 
            dbo:elevationAboveSeaLevel ?elevation .
  FILTER (?elevation = ""28""^^xsd:integer)
}
```",2,2,3,1,2,2,3,28,0,0,1,0,0.0,0
353,3,train,"Give me the country of Moskovsky City District, Nizhny Novgorod.","SELECT ?result WHERE { <http://dbpedia.org/resource/Moskovsky_City_District,_Nizhny_Novgorod> <http://dbpedia.org/ontology/country> ?result . }","```sparql
SELECT ?country WHERE {
  wd:Q123456 wdt:P17 ?country .
}
```
*Note: `wd:Q123456` should be replaced with the actual DBpedia identifier for Moskovsky City District, Nizhny Novgorod. You can find this identifier by searching DBpedia or using a SPARQL endpoint to query for entities related to ""Moskovsky City District, Nizhny Novgorod"" and identifying the correct one.*",1,1,2,1,1,2,2,9,0,0,1,0,0.0,0
926,27,train,"Give me the child of the father, that is a royalty, of the parent, that is a royalty, of Beyhan Sultan (daughter of Mustafa III).",SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v1 <http://dbpedia.org/property/father> ?v0 . ?v0 <http://dbpedia.org/ontology/child> ?result . <http://dbpedia.org/resource/Beyhan_Sultan_(daughter_of_Mustafa_III)> <http://dbpedia.org/ontology/parent> ?v1 . },"```sparql
SELECT DISTINCT ?child WHERE {
  # Beyhan Sultan as a daughter of Mustafa III
  dbpedia:Mustafa_III dbo:spouse ?mother .
  ?mother dbo:child dbpedia:Beyhan_Sultan .

  # Mustafa III's children who are royalty
  dbpedia:Mustafa_III dbo:child ?royalChild .
  ?royalChild a dbo:Monarch .

  # The father of this royal child (who is Mustafa III)
  ?royalChild dbo:father dbpedia:Mustafa_III .

  # Find the child of this father who is royalty
  dbpedia:Mustafa_III dbo:child ?grandChild .
  ?grandChild a dbo:Monarch .
}
```",3,5,4,3,1,3,3,71,0,0,11,0,0.0,0
582,14,train,Give me the figure known as the nickname of Japan national football team.,SELECT ?result WHERE { ?result <http://dbpedia.org/property/nickname> ?v1 . <http://dbpedia.org/resource/Japan_national_football_team> <http://dbpedia.org/property/nickname> ?v1 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?nickname WHERE {
  dbr:Japan_national_football_team dbo:nickname ?nickname .
}
```",2,2,3,2,1,3,3,71,0,0,1,0,0.0,0
507,8,train,Give me the profession of Guy Ferland.,SELECT ?result WHERE { <http://dbpedia.org/resource/Guy_Ferland> <http://dbpedia.org/property/occupation> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?occupation WHERE {
  VALUES ?guyFerland { dbr:Guy_Ferland }
  ?guyFerland dbo:occupation ?occupation .
}
```",1,1,2,1,1,3,3,71,0,2,1,0.0,0.0,0
987,16,train,"Who is the actor of the show, that is a film, with Emir Hadžihafizbegović?",SELECT ?result WHERE { ?v0 <http://dbpedia.org/property/starring> ?result . ?v0 <http://dbpedia.org/ontology/starring> <http://dbpedia.org/resource/Emir_Hadžihafizbegović> . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Film>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?actor WHERE {
  # Identify Emir Hadžihafizbegović's DBpedia resource
  dbr:Emir_Hadžihafizbegović a dbo:Actor .

  # Find films in which he has acted
  ?film dbo:starring dbr:Emir_Hadžihafizbegović .
  
  # Check if the film is associated with a TV series or show
  ?film dbo:basedOn ?tvSeries .
  
  # Retrieve actors involved in that TV series or show
  ?tvSeries dbo:starring ?actor .
}
```",2,3,3,2,1,3,3,71,0,0,54,0,0.0,0
102,9,train,"Give me the player in the member, that is a soccer player, of England women's national football team.",SELECT ?result WHERE { ?v0 <http://dbpedia.org/ontology/team> <http://dbpedia.org/resource/England_women's_national_football_team> . ?v0 <http://dbpedia.org/ontology/team> ?result . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerPlayer>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?player WHERE {
  ?team rdf:type dbo:NationalSoccerTeam ;
        rdfs:label ""England women's national football team""@en .
  
  ?player dbo:member ?team ;
          rdf:type dbo:SoccerPlayer .

  FILTER(LANG(?team->rdfs:label) = 'en')
}
```",2,3,3,2,1,3,2,20,0,0,180,0,0.0,0
826,25,train,"Give me the successor of Louis II, Grand Duke of Hesse and predecessor of the parent of Prince Friedrich of Hesse and by Rhine.","SELECT ?result WHERE { <http://dbpedia.org/resource/Louis_II,_Grand_Duke_of_Hesse> <http://dbpedia.org/ontology/successor> ?result . <http://dbpedia.org/resource/Prince_Friedrich_of_Hesse_and_by_Rhine> <http://dbpedia.org/ontology/parent> ?v1 . ?result <http://dbpedia.org/ontology/successor> ?v1 . }","```sparql
SELECT ?successor WHERE {
  wd:Q1234567 wdt:P39 wd:Q7890123 . # Louis II, Grand Duke of Hesse (P39: successor)
  ?successor wdt:P57 wd:Q1234567 .   # Successor of Louis II
  wd:Q3456789 wdt:P22 ?parent .      # Prince Friedrich of Hesse and by Rhine (P22: parent)
  ?parent wdt:P31/wdt:P279* wd:Q9876543 . # Parent is a person or subclass of person
  ?parent wdt:P39 ?predecessor .     # Predecessor of the parent
  FILTER(?successor = ?predecessor)  # Successor of Louis II and predecessor of the parent are the same
}
```

Note: Replace `wd:Q1234567`, `wd:Q7890123`, `wd:Q3456789`, `wd:Q9876543` with the actual DBpedia identifiers for Louis II, Grand Duke of Hesse, Ernst Ludwig, Prince Friedrich of Hesse and by Rhine, and Ernest Louis, Landgrave of Hesse-Darmstadt respectively.",3,3,4,2,2,3,3,71,0,0,1,0,0.0,0
527,13,train,"Give me the actor of the movie, that is a work and English and a television show, with the professional in Actor.","SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?v1 <http://dbpedia.org/property/starring> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/TelevisionShow>. ?v1 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/United_Kingdom>. ?v0 <http://dbpedia.org/property/occupation> ""Actor""@en . ?v1 <http://dbpedia.org/property/starring> ?v0 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dcterms: <http://purl.org/dc/terms/>

SELECT DISTINCT ?actor WHERE {
  ?work dbo:genre dbc:English_television_series ;
        dbo:genre dbc:Film .
  FILTER (LANG(?workLabel) = ""en"")
  ?work dcterms:language ?lang .
  FILTER (strstarts(str(?lang), str(""en"")))
  ?work dbo:starring ?actor .
  ?actor a dbo:Actor .
}
```",3,6,4,3,1,3,2,20,0,0,1472,0,0.0,0
216,10,train,Give me the player in Igor Bišćan and team of Ognjen Vukojević.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/coach> <http://dbpedia.org/resource/Ognjen_Vukojević> . <http://dbpedia.org/resource/Igor_Bišćan> <http://dbpedia.org/ontology/team> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT DISTINCT ?bišćanTeam ?vukojevićPlayer WHERE {
  # Find the team Igor Bišćan played for
  ?bišćanTeam dbo:player ?bišćan .
  ?bišćan rdfs:label ""Igor Bišćan""@en .

  # Find the teams Ognjen Vukojević played for and their players
  ?vukojevićTeam dbo:player ?vukojević .
  ?vukojević rdfs:label ""Ognjen Vukojević""@en .
  
  ?vukojevićTeam dbo:player ?vukojevićPlayer .
}
```",2,2,3,1,2,3,3,71,0,0,1,0,0.0,0
136,0,train,Give me the region coded as 03834.,"SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/areaCode> ""03834"" . }","```sparql
SELECT ?region WHERE {
  ?region wdt:P281 ""03834"" .
}
```",1,1,2,1,1,2,2,9,0,0,9,0,0.0,0
465,1,train,Give me the spouse of Archduchess Barbara of Austria.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/spouse> <http://dbpedia.org/resource/Archduchess_Barbara_of_Austria> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?spouse WHERE {
  VALUES ?archduchess { dbr:Barbara_of_Austria }
  ?archduchess dbo:spouse ?spouse .
}
```",1,1,2,1,1,3,3,71,0,0,1,0,0.0,0
791,15,train,"Give me the spouse, that is a royalty, of the reference to Emperor Takakura.","SELECT ?result WHERE { ?v1 <http://xmlns.com/foaf/0.1/name> ""Emperor Takakura""@en . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?result <http://dbpedia.org/ontology/spouse> ?v1 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?spouse WHERE {
  ?emperor rdf:type dbo:Emperor ;
           rdfs:label ""Takakura""@en .
  
  ?emperor dbo:spouse ?spouse .

  OPTIONAL { 
    ?spouse dbo:title ?title .
    FILTER(CONTAINS(LCASE(?title), ""princess"") || CONTAINS(LCASE(?title), ""queen""))
  }
}
```",2,3,3,2,1,3,3,71,0,0,1,0,0.0,0
926,9,train,Give me the successor of Mustafa III and father of Mahmud II.,SELECT ?result WHERE { <http://dbpedia.org/resource/Mahmud_II> <http://dbpedia.org/property/father> ?result . <http://dbpedia.org/resource/Mustafa_III> <http://dbpedia.org/ontology/successor> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?successor ?father WHERE {
  # Find the successor of Mustafa III
  ?mustafa3 dbo:succeededBy ?successor .
  ?mustafa3 dbr:Mustafa_III .

  # Ensure this successor is also the father of Mahmud II
  ?successor dbo:child ?mahmud2 .
  ?mahmud2 dbr:Mahmud_II .

  # Bind the names for clarity in results
  ?successor rdfs:label ?successorLabel .
  FILTER (lang(?successorLabel) = 'en')
  
  ?successor dbo:fatherOf ?mahmud2 .
}
```",2,2,3,1,2,3,3,71,0,0,1,0,0.0,0
645,1,train,Give me the military force of Spanish Civil War.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/battle> <http://dbpedia.org/resource/Spanish_Civil_War> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?force ?description WHERE {
  VALUES ?conflict { dbr:Spanish_Civil_War }
  
  ?force dbo:wikiPageWikiLink ?conflict .
  OPTIONAL { ?force dbo:description ?description . FILTER (lang(?description) = 'en') }

  FILTER (
    regex(str(?force), ""Republican"") ||
    regex(str(?force), ""Nationalist"")
  )
}
ORDER BY ?force
```",1,1,2,1,1,3,3,71,4,26,510,0.13333333333333333,0.007782101167315175,0.014705882352941176
353,1,train,Give me the entity in Russia.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Russia> . },"```sparql
SELECT DISTINCT ?entity WHERE {
  ?entity dbo:country dbr:Russia .
}
LIMIT 10
```",1,1,2,1,1,2,2,9,10,0,29917,1.0,0.00033414642296254217,0.0006680696128536594
83,5,train,Give me the player in the person born on 1995-07-07.,"SELECT ?result WHERE { ?v0 <http://dbpedia.org/ontology/birthDate> ""1995-07-07""^^<http://www.w3.org/2001/XMLSchema#date> . ?v0 <http://dbpedia.org/ontology/team> ?result . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?player WHERE {
  ?player a dbo:Person ;
          dbo:birthDate ""1995-07-07""^^xsd:date .
  
  OPTIONAL { 
    ?player dbo:sport dbr:Soccer . # Example for soccer, can be adjusted or expanded
  }
}
```",2,2,3,2,1,2,2,9,0,34,133,0.0,0.0,0
508,9,train,"Give me the commander, that is a politician, in the war, that is a military conflict and a societal event and an event, of Hayao Tada.",SELECT ?result WHERE { ?v0 <http://dbpedia.org/ontology/commander> ?result . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. <http://dbpedia.org/resource/Hayao_Tada> <http://dbpedia.org/ontology/battle> ?v0 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?commander WHERE {
  # Identify Hayao Tada
  dbr:Hayao_Tada dbo:associatedWith ?event .

  # Ensure the event is a military conflict and societal event
  ?event rdf:type dbo:MilitaryConflict ;
         rdf:type dbo:SocietalEvent .

  # Find commanders of the event
  ?event dbo:commander ?commander .

  # Ensure the commander is also a politician
  ?commander rdf:type dbo:Politician .
}
```",2,6,3,2,1,3,2,20,0,0,28,0,0.0,0
839,12,train,Give me the band of Peter Schorowsky and band of Matthias Röhr.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/bandMember> <http://dbpedia.org/resource/Matthias_Röhr> . ?result <http://dbpedia.org/ontology/bandMember> <http://dbpedia.org/resource/Peter_Schorowsky> . },"```sparql
PREFIX dbp: <http://dbpedia.org/property/>
PREFIX dbo: <http://dbpedia.org/ontology/>

SELECT ?person ?band WHERE {
  VALUES ?name { ""Peter Schorowsky"" ""Matthias Röhr"" }
  
  ?person rdfs:label ?name .
  FILTER (lang(?name) = 'en')
  
  OPTIONAL {
    ?person dbp:band ?band .
    ?band rdfs:label ?bandLabel .
    FILTER (lang(?bandLabel) = 'en')
  }
}
ORDER BY ?person
```",2,2,3,1,2,3,3,71,0,0,1,0,0.0,0
573,7,train,Give me the work of John Quincy Adams.,SELECT ?result WHERE { ?result <http://dbpedia.org/property/author> <http://dbpedia.org/resource/John_Quincy_Adams> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?work WHERE {
  VALUES ?person { dbr:John_Quincy_Adams }
  ?person dbo:work ?work .
}
```",1,1,2,1,1,3,3,71,0,0,1,0,0.0,0
5,14,train,"Give me the entity in the award of the associated musical artist, that is a band, of Rubén Colón Tarrats.",SELECT ?result WHERE { ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Band>. ?v0 <http://dbpedia.org/property/awards> ?v2 . ?result <http://dbpedia.org/ontology/country> ?v2 . <http://dbpedia.org/resource/Rubén_Colón_Tarrats> <http://dbpedia.org/ontology/associatedMusicalArtist> ?v0 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?band ?award WHERE {
  ?artist a dbo:MusicArtist ;
          foaf:name ""Rubén Colón Tarrats""@en .
  
  ?artist dbo:associatedBand ?band .

  ?band dbo:award ?award .
}
```",3,4,4,3,1,3,2,20,0,0,20990,0,0.0,0
495,8,train,Give me the father of the child of Princess Charlotte of Saxe-Hildburghausen.,SELECT ?result WHERE { ?v0 <http://dbpedia.org/ontology/parent> <http://dbpedia.org/resource/Princess_Charlotte_of_Saxe-Hildburghausen> . ?v0 <http://dbpedia.org/property/father> ?result . },"```sparql
SELECT ?father WHERE {
  wd:Q1234567 wdt:P40 ?child . # Princess Charlotte's children
  ?child wdt:P22 ?father .   # The father of the child
}
```

Note: `wd:Q1234567` should be replaced with the actual DBpedia resource identifier for Princess Charlotte of Saxe-Hildburghausen.",2,2,3,2,1,3,2,20,0,0,1,0,0.0,0
839,38,train,"Give me the band of the member of Böhse Onkelz and band of the band, that is a musical artist, of Charlie Huhn.",SELECT ?result WHERE { <http://dbpedia.org/resource/Charlie_Huhn> <http://dbpedia.org/ontology/associatedMusicalArtist> ?v2 . <http://dbpedia.org/resource/Böhse_Onkelz> <http://dbpedia.org/ontology/bandMember> ?v3 . ?result <http://dbpedia.org/ontology/bandMember> ?v3 . ?result <http://dbpedia.org/ontology/bandMember> ?v2 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. },"```sparql
# Query to find a member of Böhse Onkelz and their other band
SELECT ?member ?otherBand WHERE {
  ?band rdf:type dbo:MusicalGroup .
  ?band rdfs:label ""Böhse Onkelz""@en .
  ?band dbo:bandMember ?person .
  ?person foaf:name ?member .
  OPTIONAL { 
    ?person dbo:associatedBand ?otherBand .
    FILTER(?otherBand != ?band)
  }
}

UNION

# Query to find Charlie Huhn's band and another musical artist from that band
SELECT ?charlieHuhnBand ?artist WHERE {
  ?band rdf:type dbo:MusicalGroup .
  ?person foaf:name ""Charlie Huhn""@en .
  ?person dbo:associatedBand ?band .
  ?band rdfs:label ?charlieHuhnBand .
  OPTIONAL { 
    ?band dbo:bandMember ?artistPerson .
    ?artistPerson foaf:name ?artist .
    FILTER(?artist != ""Charlie Huhn"")
  }
}
```",4,5,5,2,2,3,3,71,0,0,1,0,0.0,0
773,18,train,Give me the parent of Carloman of Bavaria and spouse of Louis the German and parent of Charles the Fat.,SELECT ?result WHERE { <http://dbpedia.org/resource/Louis_the_German> <http://dbpedia.org/ontology/spouse> ?result . <http://dbpedia.org/resource/Charles_the_Fat> <http://dbpedia.org/ontology/parent> ?result . ?result <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Carloman_of_Bavaria> . },"```sparql
SELECT ?person WHERE {
  # Carloman of Bavaria's parent
  ?carloman dbr:Carloman_of_Bavaria ;
            dbo:parent ?person .
  
  # Louis the German's spouse
  ?louis dbr:Louis_the_German ;
         dbo:spouse ?person .

  # Charles the Fat's parent
  ?charles dbr:Charles_the_Fat ;
           dbo:parent ?person .
}
```",3,3,4,1,3,3,3,71,0,0,1,0,0.0,0
445,17,train,Give me the award of the commander in Battle of Saint-Mihiel.,SELECT ?result WHERE { <http://dbpedia.org/resource/Battle_of_Saint-Mihiel> <http://dbpedia.org/ontology/commander> ?v1 . ?v1 <http://dbpedia.org/property/awards> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?award WHERE {
  ?battle a dbo:MilitaryConflict ;
          rdfs:label ""Battle of Saint-Mihiel""@en .
  
  ?person dbo:commanderOf ?battle ;
          foaf:name ""John J. Pershing""@en .

  OPTIONAL { 
    ?person dbo:receivedAward ?award .
  }
}
```",2,2,3,2,1,3,3,71,0,0,26,0,0.0,0
839,1,train,Give me the band of Peter Schorowsky.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/bandMember> <http://dbpedia.org/resource/Peter_Schorowsky> . },"```sparql
PREFIX dbp: <http://dbpedia.org/property/>
PREFIX dbo: <http://dbpedia.org/ontology/>

SELECT ?band WHERE {
  ?person foaf:name ""Peter Schorowsky""@en .
  ?person dbp:band ?band .
}
```",1,1,2,1,1,3,3,71,0,0,1,0,0.0,0
445,32,train,"Give me the entity in the residence, that is a country, of Anna Sharkey and death place of the awardee of Royal Astronomical Society.",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/location> ?v1 . <http://dbpedia.org/resource/Anna_Sharkey> <http://dbpedia.org/property/residence> ?v1 . ?v3 <http://dbpedia.org/ontology/deathPlace> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. ?v3 <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/Royal_Astronomical_Society> . },"```sparql
# Query for Anna Sharkey's residence
SELECT ?residence WHERE {
  ?person foaf:name ""Anna Sharkey"" .
  ?person dbo:residenceLocation ?location .
  ?location rdfs:label ?residence .
  FILTER (lang(?residence) = 'en')
}

UNION

# Query for an awardee of the Royal Astronomical Society and their place of death
SELECT ?deathPlace WHERE {
  ?awardee dbo:award ""Royal Astronomical Society"" .
  ?awardee dbo:placeOfDeath ?location .
  ?location rdfs:label ?deathPlace .
  FILTER (lang(?deathPlace) = 'en')
}

# Find common country between residence and death place
SELECT DISTINCT ?country WHERE {
  VALUES (?entity) { (""United Kingdom"") } # Assuming we find ""United Kingdom"" as a potential match from above queries

  OPTIONAL { 
    ?person foaf:name ""Anna Sharkey"" .
    ?person dbo:residenceLocation ?location .
    ?location rdfs:label ?entity .
    FILTER (lang(?entity) = 'en')
  }

  OPTIONAL {
    ?awardee dbo:award ""Royal Astronomical Society"" .
    ?awardee dbo:placeOfDeath ?deathLocation .
    ?deathLocation rdfs:label ?entity .
    FILTER (lang(?entity) = 'en')
  }
}
```",4,5,5,2,2,3,3,71,0,0,1,0,0.0,0
935,6,train,Give me the death place of Abdul Raziq Bugti and headquarter of Provincial Assembly of Balochistan.,SELECT ?result WHERE { <http://dbpedia.org/resource/Abdul_Raziq_Bugti> <http://dbpedia.org/ontology/deathPlace> ?result . <http://dbpedia.org/resource/Provincial_Assembly_of_Balochistan> <http://dbpedia.org/ontology/location> ?result . },"```sparql
# Query to get the death place of Abdul Raziq Bugti
SELECT ?deathPlace WHERE {
  dbpedia:Abdul_Razzaq_Bugti dbo:deathPlace ?deathPlace .
}

# Query to get the headquarter of the Provincial Assembly of Balochistan
SELECT ?headquarter WHERE {
  dbpedia:Provincial_Assembly_of_Balochistan dbo:headquarter ?headquarter .
}
```",2,2,3,1,2,3,2,20,0,0,1,0,0.0,0
166,2,train,"Give me the force, that is an event and a societal event and a military conflict, of Manuel Hedilla.",SELECT ?result WHERE { ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?result <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Manuel_Hedilla> . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?force WHERE {
  ?event dbo:wikiPageRedirects dbr:Sanjurjada.
  ?event dbo:wikiPageDisambiguates ?disambiguation.
  ?disambiguation rdfs:label ""Manuel Hedilla""@en.
  
  OPTIONAL { ?event dbo:type ?type. }
  FILTER (?type IN (dbr:Societal_event, dbr:Military_conflict))
  
  ?force dbo:wikiPageRedirects ?event.
}
```",1,4,2,1,1,3,2,20,0,0,1,0,0.0,0
36,11,train,Give me the person born as the birth name of Ayo Makun.,SELECT ?result WHERE { <http://dbpedia.org/resource/Ayo_Makun> <http://dbpedia.org/property/birthName> ?v1 . ?result <http://dbpedia.org/property/birthName> ?v1 . },"```sparql
# Step 1: Retrieve Ayo Makun's birth name
SELECT ?birthName WHERE {
  ?person rdfs:label ""Ayo Makun""@en .
  ?person foaf:name ?birthName .
  FILTER(LANG(?birthName) = 'en')
}

# Step 2: Find any other person with the same birth name
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT DISTINCT ?otherPerson WHERE {
  # Replace 'Ayo Makun's Birth Name' with the actual birth name obtained from Step 1
  ?person foaf:name ""Ayo Makun's Birth Name""@en .
  
  ?otherPerson foaf:name ""Ayo Makun's Birth Name""@en .
  FILTER(?person != ?otherPerson)
}
```",2,2,3,2,1,2,3,28,0,0,1,0,0.0,0
465,29,train,"Give me the successor of Ercole II d'Este, Duke of Ferrara and spouse of the child, that is a royalty, of Ferdinand I, Holy Roman Emperor and successor of Renée of France.","SELECT ?result WHERE { <http://dbpedia.org/resource/Ercole_II_d'Este,_Duke_of_Ferrara> <http://dbpedia.org/ontology/successor> ?result . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. <http://dbpedia.org/resource/Renée_of_France> <http://dbpedia.org/ontology/successor> ?result . ?result <http://dbpedia.org/ontology/spouse> ?v3 . <http://dbpedia.org/resource/Ferdinand_I,_Holy_Roman_Emperor> <http://dbpedia.org/ontology/child> ?v3 . }","```sparql
SELECT ?successor WHERE {
  ?ercole2 dbo:spouse ?renée .
  ?renée foaf:name ""Renée of France""@en .
  ?ercole2 dbo:title dbr:Duke_of_Ferrara .
  ?alfonso dbo:parent ?ercole2 ;
          dbo:parent ?renée ;
          dbo:title dbr:Duke_of_Ferrara .
  ?successor dbo:succ ?ercole2 .
  FILTER(?successor = ?alfonso)
}
```",4,5,5,2,3,3,3,71,0,0,1,0,0.0,0
791,9,train,Give me the spouse of Taira no Tokuko and predecessor of Emperor Antoku.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/spouse> <http://dbpedia.org/resource/Taira_no_Tokuko> . ?result <http://dbpedia.org/ontology/successor> <http://dbpedia.org/resource/Emperor_Antoku> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?person WHERE {
  # Find Taira no Tokuko's spouse
  dbr:Taira_no_Tokuko dbo:spouse ?person .
  
  # Ensure the person is also the predecessor of Emperor Antoku
  ?person dbo:predecessor dbr:Emperor_Antoku .
}
```",2,2,3,1,2,3,3,71,0,0,1,0,0.0,0
582,37,train,"Give me the figure known as --10-19 and player in the father, that is an athlete and a soccer manager and a sports manager, of the child of Kazuaki Nagasawa.","SELECT ?result WHERE { ?v0 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Kazuaki_Nagasawa> . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Athlete>. ?result <http://dbpedia.org/property/nickname> ""--10-19""^^<http://www.w3.org/2001/XMLSchema#gMonthDay> . ?v0 <http://dbpedia.org/property/father> ?v3 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsManager>. ?v3 <http://dbpedia.org/ontology/team> ?result . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerManager>. }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT ?father ?nickname WHERE {
  ?child dbo:parent ?kazuakiNagasawa .
  ?kazuakiNagasawa foaf:name ""Kazuaki Nagasawa"" .

  ?father dbo:spouseOrPartner ?mother .
  ?child dbo:parent ?father .
  
  ?father a dbo:Athlete ;
         a dbo:SoccerManager ;
         a dbo:SportsManager .

  OPTIONAL { ?father foaf:nick ?nickname . }
  FILTER (CONTAINS(?nickname, ""--10-19""))
}
```",4,7,5,3,2,3,3,71,0,0,1,0,0.0,0
41,0,train,Give me the party of Mark Durkan.,SELECT ?result WHERE { <http://dbpedia.org/resource/Mark_Durkan> <http://dbpedia.org/ontology/party> ?result . },"```sparql
PREFIX foaf: <http://xmlns.com/foaf/0.1/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?party WHERE {
  ?person foaf:name ""Mark Durkan""@en .
  OPTIONAL { ?person dbp:party ?party . }
}
```",1,1,2,1,1,2,3,28,1,1,1,0.5,0.5,0.5
456,1,train,Give me the professional in .,"SELECT ?result WHERE { ?result <http://dbpedia.org/property/occupation> """"@en . }","```sparql
# Example SPARQL query for professionals in a specified field (e.g., medicine)
SELECT ?person ?label WHERE {
  ?person dbo:occupation dbr:Medicine .
  ?person rdfs:label ?label .
  FILTER (lang(?label) = 'en')
}
```",1,1,2,1,1,3,3,71,0,28,39640,0.0,0.0,0
839,15,train,"Give me the person born, that is a musical artist, as the persona of Kevin Russell (musician).",SELECT ?result WHERE { ?result <http://dbpedia.org/property/birthName> ?v1 . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. <http://dbpedia.org/resource/Kevin_Russell_(musician)> <http://xmlns.com/foaf/0.1/givenName> ?v1 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT ?person ?birthDate WHERE {
  ?person foaf:nick ""Kevin Russell"" .
  ?person a dbo:MusicalArtist .
  OPTIONAL { ?person dbo:birthDate ?birthDate . }
}
```",2,3,3,2,1,3,3,71,0,0,1,0,0.0,0
329,11,train,"Give me the entity in the birthplace, that is an organisation and a country, of Robert Bates (loyalist).",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/country> ?v1 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. <http://dbpedia.org/resource/Robert_Bates_(loyalist)> <http://dbpedia.org/ontology/birthPlace> ?v1 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?entity WHERE {
  # Identify Robert Bates (loyalist)
  dbr:Robert_Bates_(loyalist) dbo:birthPlace ?birthplace .

  # Find entities that are both countries and organizations in the birthplace
  ?entity a dbo:Country ;
         a dbo:Organization ;
         dbo:location ?birthplace .
}
```",2,4,3,2,1,2,3,28,0,0,846,0,0.0,0
987,30,train,"Give me the birth place of Moamer Kasumović and birth place of Dado Polumenta and entity in the region, that is a country, of Central European Time.",SELECT ?result WHERE { ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. <http://dbpedia.org/resource/Moamer_Kasumović> <http://dbpedia.org/ontology/birthPlace> ?result . ?result <http://dbpedia.org/ontology/country> ?v0 . <http://dbpedia.org/resource/Dado_Polumenta> <http://dbpedia.org/ontology/birthPlace> ?result . ?v0 <http://dbpedia.org/property/timeZone> <http://dbpedia.org/resource/Central_European_Time> . },"```sparql
# Query for Moamer Kadhafi's birth place
SELECT ?birthPlace WHERE {
  wd:Q1616 dbo:birthPlace ?birthPlace .
}

# Query for Dado Polumenta's birth place
SELECT ?birthPlace WHERE {
  wd:Q1234567 dbo:birthPlace ?birthPlace . # Replace Q1234567 with the correct DBpedia ID for Dado Polumenta
}

# Query for a country in the Central European Time region
SELECT ?country WHERE {
  ?country wdt:P421 wd:Q11173 . # Q11173 is the DBpedia item for Central European Time
}
```",4,5,5,2,3,3,3,71,0,0,1,0,0.0,0
865,25,train,Give me the father of AK Abdul Momen and father of the child of Abu Ahmad Abdul Hafiz.,SELECT ?result WHERE { <http://dbpedia.org/resource/AK_Abdul_Momen> <http://dbpedia.org/property/father> ?result . ?v0 <http://dbpedia.org/property/father> ?result . ?v0 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Abu_Ahmad_Abdul_Hafiz> . },"```sparql
# Query to get the father of AK Abdul Momen
SELECT ?father WHERE {
  wd:Q1234567 wdt:P22 ?father .
}

UNION

# Query to get the father of the child of Abu Ahmad Abdul Hafiz
SELECT ?childFather WHERE {
  # Find a child of Abu Ahmad Abdul Hafiz
  wd:Q6543210 wdt:P40 ?child .
  
  # Get the father of that child
  ?child wdt:P22 ?childFather .
}
```

Note: Replace `wd:Q1234567` with the actual DBpedia entity ID for AK Abdul Momen and `wd:Q6543210` with the entity ID for Abu Ahmad Abdul Hafiz. These IDs can be found by searching their names on DBpedia or Wikipedia.",3,3,4,2,2,3,3,71,0,0,1,0,0.0,0
582,21,train,Give me the figure known as --10-19 and reference to the residence of Hirotaka Sugawara.,"SELECT ?result WHERE { ?result <http://xmlns.com/foaf/0.1/name> ?v1 . ?result <http://dbpedia.org/property/nickname> ""--10-19""^^<http://www.w3.org/2001/XMLSchema#gMonthDay> . <http://dbpedia.org/resource/Hirotaka_Sugawara> <http://dbpedia.org/property/residence> ?v1 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?residence WHERE {
  ?person a dbo:Person ;
          foaf:name ""Hirotaka Sugawara""@en .
  OPTIONAL { ?person dbo:residence ?residence . }
}
```",3,3,4,2,2,3,3,71,0,0,1,0,0.0,0
382,5,train,Give me the award of Harry Combes.,SELECT ?result WHERE { <http://dbpedia.org/resource/Harry_Combes> <http://dbpedia.org/property/awards> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?award WHERE {
  ?person a dbo:Person ;
          foaf:name ""Harry Combes""@en .
  OPTIONAL { ?person dbo:award ?award . }
}
```",1,1,2,1,1,3,2,20,0,0,1,0,0.0,0
645,31,train,Give me the commander in the force of the commander in Siege of Madrid and military force of Spanish Civil War.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/battle> <http://dbpedia.org/resource/Spanish_Civil_War> . ?v0 <http://dbpedia.org/ontology/commander> ?v1 . <http://dbpedia.org/resource/Siege_of_Madrid> <http://dbpedia.org/ontology/commander> ?v1 . ?v0 <http://dbpedia.org/ontology/commander> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?person WHERE {
  VALUES ?event { 
    dbr:Siege_of_Madrid_(1936–39) 
    dbr:Spanish_Civil_War 
  }
  
  ?person dbo:commanderOf ?event .
  FILTER (
    ?event = dbr:Siege_of_Madrid_(1936–39) ||
    ?event = dbr:Spanish_Civil_War
  )
}
```",4,4,5,3,2,3,3,71,0,0,53,0,0.0,0
465,2,train,Give me the successor of Renée of France.,SELECT ?result WHERE { <http://dbpedia.org/resource/Renée_of_France> <http://dbpedia.org/ontology/successor> ?result . },"```sparql
SELECT ?successor WHERE {
  ?renée dbr:Renée_of_France .
  ?renée dbo:title ""Duchess of Ferrara""@en ;
         dbo:successor ?successor .
}
```",1,1,2,1,1,3,3,71,0,0,1,0,0.0,0
236,2,train,"Give me the person decedent, that is a politician and an office holder, at Quincy, Massachusetts.","SELECT ?result WHERE { ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?result <http://dbpedia.org/ontology/deathPlace> <http://dbpedia.org/resource/Quincy,_Massachusetts> . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?person ?name WHERE {
  ?person a dbo:Person .
  ?person dbo:birthPlace dbr:Quincy,_Massachusetts ;
          (dbo:occupation|dbo:profession) ?occupation .
  FILTER (
    CONTAINS(LCASE(?occupation), ""politician"") ||
    CONTAINS(LCASE(?occupation), ""office holder"")
  ) .
  ?person rdfs:label ?name .
  FILTER (LANG(?name) = 'en')
}
ORDER BY ?name
LIMIT 10
```",1,3,2,1,1,3,2,20,0,0,3,0,0.0,0
839,0,train,Give me the band of Kevin Russell (musician).,SELECT ?result WHERE { <http://dbpedia.org/resource/Kevin_Russell_(musician)> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?band WHERE {
  ?person a dbo:Musician ;
          foaf:name ""Kevin Russell""@en .
  ?person dbo:member ?band .
}
```",1,1,2,1,1,3,3,71,0,0,1,0,0.0,0
365,3,train,Give me the birth name of Symon Petliura.,SELECT ?result WHERE { <http://dbpedia.org/resource/Symon_Petliura> <http://dbpedia.org/property/birthName> ?result . },"```sparql
SELECT ?birthName WHERE {
  <http://dbpedia.org/resource/Symon_Petliura> dbo:birthName ?birthName .
}
```",1,1,2,1,1,3,2,20,1,0,0,1.0,1.0,1.0
465,31,train,"Give me the spouse of Archduchess Barbara of Austria and successor of the child of the parent of Ercole II d'Este, Duke of Ferrara.","SELECT ?result WHERE { ?v0 <http://dbpedia.org/property/father> ?v1 . ?result <http://dbpedia.org/ontology/spouse> <http://dbpedia.org/resource/Archduchess_Barbara_of_Austria> . ?v0 <http://dbpedia.org/ontology/successor> ?result . <http://dbpedia.org/resource/Ercole_II_d'Este,_Duke_of_Ferrara> <http://dbpedia.org/ontology/parent> ?v1 . }","```sparql
# Step 1: Find Ercole II d'Este's parent
SELECT ?parent WHERE {
  wd:Q123456 wdt:P22 ?parent .
}

# Step 2: Find the other child of this parent
SELECT DISTINCT ?child WHERE {
  ?parent wdt:P40 ?child .
  FILTER(?child != wd:Q123456)
}

# Step 3: Determine the successor of this child
SELECT DISTINCT ?successor WHERE {
  ?child wdt:P1367 ?successor .
}

# Step 4: Find Archduchess Barbara of Austria's spouse
SELECT ?spouse WHERE {
  wd:Q654321 wdt:P26 ?spouse .
}

# Combine the results to find if the spouse is also the successor
SELECT DISTINCT ?spouse WHERE {
  {
    SELECT DISTINCT ?successor WHERE {
      ?child wdt:P1367 ?successor .
      ?parent wdt:P40 ?child .
      wd:Q123456 wdt:P22 ?parent .
      FILTER(?child != wd:Q123456)
    }
  }
  UNION
  {
    SELECT ?spouse WHERE {
      wd:Q654321 wdt:P26 ?spouse .
    }
  }
}
```

Note: Replace `wd:Q123456` with the actual DBpedia ID for Ercole II d'Este and `wd:Q654321` with the DBpedia ID for Archduchess Barbara of Austria.",4,4,5,3,2,3,3,71,0,0,1,0,0.0,0
124,11,train,"Give me the commander in the war, that is a societal event and a military conflict, of A Field Battery, Royal Australian Artillery.","SELECT ?result WHERE { <http://dbpedia.org/resource/A_Field_Battery,_Royal_Australian_Artillery> <http://dbpedia.org/ontology/battle> ?v0 . ?v0 <http://dbpedia.org/ontology/commander> ?result . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?commander WHERE {
  ?battery a dbo:MilitaryUnit ;
           dbo:militaryBranch dbr:Royal_Australian_Artillery ;
           dbo:participatedIn ?war .
  
  FILTER (
    ?war IN (dbr:World_War_I, dbr:World_War_II)
  )
  
  OPTIONAL {
    ?battery dbo:commander ?commander .
  }
  
  FILTER EXISTS { ?battery rdfs:label ""A Field Battery""@en }
}
```",2,4,3,2,1,3,3,71,0,0,109,0,0.0,0
839,26,train,"Give me the band of the member of the band, that is a band and a group, of Peter Schorowsky.",SELECT ?result WHERE { <http://dbpedia.org/resource/Peter_Schorowsky> <http://dbpedia.org/ontology/associatedMusicalArtist> ?v1 . ?result <http://dbpedia.org/ontology/bandMember> ?v2 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Band>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Group>. ?v1 <http://dbpedia.org/ontology/bandMember> ?v2 . },"```sparql
SELECT ?band WHERE {
  ?person foaf:name ""Peter Schorowsky""@en .
  ?membership dbo:member ?person ;
              dbo:bandOrMusicalArtist ?band .
  ?band a dbo:Band ;
        a dbo:Group .
  
  OPTIONAL { 
    ?subMembership dbo:bandOrMusicalArtist ?band ;
                   dbo:bandOrMusicalArtist ?subgroup .
    FILTER(?subgroup != ?band)
  }
}
```",3,5,4,3,1,3,3,71,0,0,1,0,0.0,0
102,14,train,"Give me the native of the residence, that is English and a settlement, of the resident, that is an athlete, of Dewsbury.",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/birthPlace> ?v0 . ?v0 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/United_Kingdom>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. ?v2 <http://dbpedia.org/property/residence> ?v0 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Athlete>. ?v2 <http://dbpedia.org/ontology/residence> <http://dbpedia.org/resource/Dewsbury> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?nativeLanguage WHERE {
  ?athlete a dbo:Athlete ;
           dbo:residence dbr:Dewsbury .
  
  ?settlement dbo:country dbr:England ;
              dbo:resident ?athlete .

  ?settlement dbo:nativeLanguage ?nativeLanguage .
}
```",3,6,4,3,1,3,2,20,0,0,100,0,0.0,0
976,33,train,"Give me the office of the mayor, that is a politician and an office holder and Turkish, of the reference, that is an organisation and a political party and Turkish, to Millet İttifakı and office of Mustafa Şentop.","SELECT ?result WHERE { ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/PoliticalParty>. ?v2 <http://dbpedia.org/property/office> ?result . ?v0 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Turkey>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v2 <http://dbpedia.org/ontology/nationality> <http://dbpedia.org/resource/Turkey>. ?v0 <http://dbpedia.org/property/leader> ?v2 . <http://dbpedia.org/resource/Mustafa_Şentop> <http://dbpedia.org/property/office> ?result . ?v0 <http://xmlns.com/foaf/0.1/name> ""Millet İttifakı""@en . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?mayorOffice WHERE {
  # Find political parties in Turkey that are organizations
  ?party a dbo:PoliticalParty ;
         dbo:country dbr:Türkiye ;
         dbo:organization dbr:Organization .

  # Identify Millet İttifakı and Mustafa Şentop's office
  ?milatittifak a dbo:Organisation ;
                dbo:member ?mustafaS ;
                rdfs:label ""Millet İttifakı""@en .
  
  ?mustafaS rdfs:label ""Mustafa Şentop""@tr .

  # Find the mayor who is a politician and office holder
  ?mayor a dbo:Politician, dbo:OfficeHolder ;
         dbo:nationality dbr:Türkiye ;
         dbo:office ?mayorOffice .

  # Link the mayor to the political party/organization found earlier
  ?party dbo:member ?mayor .
}
```",4,10,5,3,2,3,3,71,0,0,1,0,0.0,0
453,0,train,Give me the religion of Newfoundland Colony.,SELECT ?result WHERE { <http://dbpedia.org/resource/Newfoundland_Colony> <http://dbpedia.org/ontology/religion> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?religion WHERE {
  ?colony rdf:type dbo:Colony .
  ?colony dbo:name ""Newfoundland Colony"" .
  ?colony dbo:hasReligiousDemographic ?demographic .
  ?demographic dbo:religion ?religion .
}
```",1,1,2,1,1,2,2,9,0,0,1,0,0.0,0
933,31,train,"Give me the reference to Alan Warner and band of the band of the band, that is an artist and a musical artist, of The Ramong Sound.","SELECT ?result WHERE { ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?v2 <http://dbpedia.org/ontology/associatedMusicalArtist> ?v0 . <http://dbpedia.org/resource/The_Ramong_Sound> <http://dbpedia.org/ontology/associatedMusicalArtist> ?v2 . ?result <http://xmlns.com/foaf/0.1/name> ""Alan Warner""@en . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. ?v0 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?alanWarner ?band WHERE {
  ?alanWarner a dbo:Artist ;
              foaf:name ""Alan Warner""@en .
  
  ?band a dbo:MusicalBand ;
        foaf:name ""The Ramong Sound""@en .

  OPTIONAL { 
    ?membership dbo:member ?alanWarner ;
                dbo:musicalGroup ?band .
  }
}
```",4,6,5,3,2,3,3,71,0,0,1,0,0.0,0
326,6,train,Give me the person decedent at France and resident of Berkshire.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/deathPlace> <http://dbpedia.org/resource/France> . ?result <http://dbpedia.org/property/residence> <http://dbpedia.org/resource/Berkshire> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?person WHERE {
  ?person a dbo:Person .
  ?person dbo:deathPlace dbr:France .
  ?person dbo:residence dbr:Berkshire_County_England .
}
```",2,2,3,1,2,3,2,20,0,0,1,0,0.0,0
200,3,train,Give me the band of Revenge (Canadian band).,SELECT ?result WHERE { <http://dbpedia.org/resource/Revenge_(Canadian_band)> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?bandLabel WHERE {
  ?band a dbo:Band ;
        rdfs:label ""Revenge""@en .
  FILTER (LANG(?bandLabel) = 'en')
}
```",1,1,2,1,1,2,2,9,0,0,5,0,0.0,0
274,3,train,"Who is the person born, that is a musical artist, as John Birks Gillespie?","SELECT ?result WHERE { ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?result <http://dbpedia.org/property/birthName> ""John Birks Gillespie""@en . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?person WHERE {
  ?person dbo:birthName ""John Birks Gillespie""@en .
  ?person a dbo:MusicalArtist .
}
```",1,2,2,1,1,2,3,28,0,0,1,0,0.0,0
892,13,train,Give me the landmark at elevation of the award of Anna Ishii.,SELECT ?result WHERE { <http://dbpedia.org/resource/Anna_Ishii> <http://dbpedia.org/property/awards> ?v1 . ?result <http://dbpedia.org/ontology/elevation> ?v1 . },"```sparql
# Step 1: Find Anna Ishii and any awards she might have received.
SELECT ?award WHERE {
    ?person foaf:name ""Anna Ishii""@en .
    ?person dbo:award ?award .
}

# Assuming we find an award, let's say it has a property for elevation (hypothetical).
# Step 2: Find the elevation of the award (this step is hypothetical as DBpedia might not have such data directly).
SELECT ?elevation WHERE {
    ?award dbo:elevation ?elevation .
}

# Step 3: Find a landmark at this elevation.
SELECT ?landmark WHERE {
    ?landmark dbo:elevation ?elevation .
}
```

Note: The above query assumes that DBpedia has an `dbo:elevation` property for awards and landmarks, which might not be the case. Adjustments may be needed based on actual data availability.",2,2,3,2,1,3,3,71,0,0,258,0,0.0,0
166,3,train,Who is the military force of Spanish Civil War?,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/battle> <http://dbpedia.org/resource/Spanish_Civil_War> . },"```sparql
SELECT ?militaryForce WHERE {
  VALUES ?event { dbpedia:Spanish_Civil_War }
  
  # Querying for Republican forces
  OPTIONAL {
    ?militaryForce rdfs:label ?label .
    FILTER(CONTAINS(LCASE(?label), ""republican"") && CONTAINS(LCASE(?label), ""spanish civil war""))
  }

  # Querying for Nationalist forces
  OPTIONAL {
    ?militaryForce rdfs:label ?label .
    FILTER(CONTAINS(LCASE(?label), ""nationalist"") && CONTAINS(LCASE(?label), ""spanish civil war""))
  }
  
  FILTER(!isBlank(?militaryForce))
}
ORDER BY ?militaryForce
```",1,1,2,1,1,3,2,20,0,0,514,0,0.0,0
456,32,train,Give me the professional in the alter ego of The Shadow and spouse of the actor of Pacific Drive.,SELECT ?result WHERE { <http://dbpedia.org/resource/The_Shadow> <http://dbpedia.org/property/alterEgo> ?v3 . <http://dbpedia.org/resource/Pacific_Drive> <http://dbpedia.org/property/starring> ?v1 . ?v1 <http://dbpedia.org/ontology/spouse> ?result . ?result <http://dbpedia.org/property/occupation> ?v3 . },"```sparql
# Query to find the alter ego of The Shadow and the actor who played it
SELECT ?actor WHERE {
  ?character rdfs:label ""The Shadow""@en .
  ?character dbo:alterEgo ?alterEgo .
  ?alterEgo rdfs:label ""Lamont Cranston""@en .
  ?film dbo:starring ?actor .
  ?film dbo:title ""The Shadow (1994 film)""@en .
}

# Query to find the actor associated with Pacific Drive
SELECT ?pacificActor WHERE {
  ?work dbo:title ""Pacific Drive""@en .
  ?work dbo:starring ?pacificActor .
}

# Assuming we have identified Bruce Campbell as the actor for The Shadow,
# and found the actor for Pacific Drive, we now need to find their spouses.
SELECT ?spouse WHERE {
  wd:Q123456 dbp:spouse ?spouse . # Replace Q123456 with the Wikidata ID of Bruce Campbell
}

SELECT ?spouse WHERE {
  wd:Q789012 dbp:spouse ?spouse . # Replace Q789012 with the Wikidata ID of the actor from Pacific Drive
}
```

Note: The above SPARQL queries assume that we have identified the correct Wikidata IDs for Bruce Campbell and the actor associated with ""Pacific Drive."" You would need to replace `Q123456` and `Q789012` with the actual Wikidata IDs once they are known.",4,4,5,2,2,3,3,71,0,0,2,0,0.0,0
508,1,train,Give me the birthplace of Ma Bufang.,SELECT ?result WHERE { <http://dbpedia.org/resource/Ma_Bufang> <http://dbpedia.org/ontology/birthPlace> ?result . },"```sparql
SELECT ?birthPlace WHERE {
  ?person foaf:name ""Ma Bufang""@en .
  ?person dbo:birthPlace ?birthPlace .
}
```",1,1,2,1,1,3,2,20,3,0,0,1.0,1.0,1.0
98,18,train,"Give me the entity in the region, that is a country, of Philippine Standard Time and birth place of Paolo Ballesteros.",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/country> ?v1 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. <http://dbpedia.org/resource/Paolo_Ballesteros> <http://dbpedia.org/ontology/birthPlace> ?result . ?v1 <http://dbpedia.org/property/timeZone> <http://dbpedia.org/resource/Philippine_Standard_Time> . },"```sparql
SELECT ?country WHERE {
  ?timeZone rdfs:label ""Philippine Standard Time""@en .
  ?region dbo:timezone ?timeZone .
  ?region dbo:country ?country .
  
  OPTIONAL { 
    ?person foaf:name ""Paolo Ballesteros""@en .
    ?person dbo:birthPlace ?country .
  }
  
  FILTER EXISTS {
    ?person foaf:name ""Paolo Ballesteros""@en .
  }
}
```",3,4,4,2,2,2,3,28,0,0,2,0,0.0,0
573,22,train,"Give me the person decedent at Massachusetts and parent of the author, that is a politician and an office holder, of Exchequer Standards.",SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v1 <http://dbpedia.org/ontology/parent> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?result <http://dbpedia.org/ontology/deathPlace> <http://dbpedia.org/resource/Massachusetts> . <http://dbpedia.org/resource/Exchequer_Standards> <http://dbpedia.org/property/author> ?v1 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?person WHERE {
  # Find the author of ""Exchequer Standards""
  ?author dbo:work ?exchequerStandards .
  ?exchequerStandards rdfs:label ""Exchequer Standards""@en .

  # Identify the parent(s) of this author
  ?parent dbo:child ?author .

  # Filter for a person who is both a politician and an office holder in Massachusetts
  ?person owl:sameAs ?parent .
  ?person dbo:politicalParty ?party ;
          dbo:officeHolder ?office ;
          dbo:placeOfBirth dbr:Massachusetts .

  FILTER (lang(?exchequerStandardsLabel) = ""en"")
}
```",3,5,4,2,2,3,3,71,0,0,2,0,0.0,0
976,24,train,"Give me the office of the mayor, that is a politician and an office holder and Turkish, of Nation Alliance (Turkey) and office of Naci Bostancı.",SELECT ?result WHERE { ?v2 <http://dbpedia.org/property/office> ?result . ?v2 <http://dbpedia.org/ontology/nationality> <http://dbpedia.org/resource/Turkey>. <http://dbpedia.org/resource/Naci_Bostancı> <http://dbpedia.org/property/office> ?result . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. <http://dbpedia.org/resource/Nation_Alliance_(Turkey)> <http://dbpedia.org/property/leader> ?v2 . },"```sparql
SELECT ?naciBostanciOffice ?nationAllianceOffice WHERE {
  # Query for Naci Bostancı's office
  wd:Q1234567 dbo:office ?naciBostanciOffice .
  
  # Query for a Turkish politician from the Nation Alliance (Turkey)
  ?person a dbo:Politician ;
          dbo:partyAffiliation wd:Q7890123 ; # Assuming Q7890123 is the DBpedia ID for Nation Alliance (Turkey)
          dbo:office ?nationAllianceOffice ;
          foaf:nationality wd:Q43 . # Q43 is the DBpedia ID for Turkey
}
```

Note: Replace `wd:Q1234567` with the actual DBpedia identifier for Naci Bostancı and `wd:Q7890123` with the correct identifier for Nation Alliance (Turkey) if they differ.",3,6,4,2,2,3,3,71,0,0,1,0,0.0,0
326,2,train,Who is the professional in Writer?,"SELECT ?result WHERE { ?result <http://dbpedia.org/property/occupation> ""Writer""@en . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT ?person ?name WHERE {
  {
    ?person dbo:occupation dbc:Writers .
  } UNION {
    ?person foaf:profession dbc:Writers .
  }
  OPTIONAL { ?person foaf:name ?name . }
}
```",1,1,2,1,1,3,2,20,0,0,6466,0,0.0,0
274,13,train,"Give me the professional in  and band member of the person born, that is a musical artist, as John Birks Gillespie.","SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?result <http://dbpedia.org/property/occupation> """"@en . ?v1 <http://dbpedia.org/property/birthName> ""John Birks Gillespie""@en . ?result <http://dbpedia.org/ontology/associatedMusicalArtist> ?v1 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?profession ?bandMember 
WHERE {
  VALUES ?gillespie { dbr:Dizzy_Gillespie }
  
  ?gillespie dbo:birthName ""John Birks Gillespie""@en .
  ?gillespie dbo:occupation ?profession .
  FILTER(CONTAINS(LCASE(?profession), ""musician"") || CONTAINS(LCASE(?profession), ""trumpeter"") || CONTAINS(LCASE(?profession), ""singer""))

  OPTIONAL {
    ?bandMembership dbo:member ?gillespie .
    ?bandMembership rdfs:label ?bandMember .
    FILTER(LANG(?bandMember) = 'en')
  }
}
```",3,4,4,2,2,2,3,28,0,0,8,0,0.0,0
826,33,train,"Give me the successor of the child, that is a royalty, of the reference, that is a royalty, to Louis I and spouse of Anna Magdalena Appel.","SELECT ?result WHERE { ?v3 <http://dbpedia.org/ontology/successor> ?result . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. <http://dbpedia.org/resource/Anna_Magdalena_Appel> <http://dbpedia.org/ontology/spouse> ?result . ?v0 <http://dbpedia.org/ontology/child> ?v3 . ?v0 <http://xmlns.com/foaf/0.1/name> ""Louis I""@en . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. }","```sparql
SELECT ?successor WHERE {
  # Find Louis I of Hungary
  ?louis1 dbo:spouse ?anna .
  ?louis1 foaf:name ""Louis I"" .
  ?louis1 dbo:country dbr:Hungary .

  # Identify his spouse, Anna of Bohemia and Hungary
  ?anna foaf:name ""Anna of Bohemia and Hungary""@en .

  # Find their child who is royalty
  ?child dbo:parent ?louis1 ;
         dbo:parent ?anna ;
         a dbo:Monarch .

  # Determine the successor of that royal child (e.g., Charles Robert)
  OPTIONAL { ?successor dbo:predecessor ?child . }

  FILTER(?child = dbr:Charles_I_of_Hungary) # Assuming Charles I is the child in question
}
```",4,6,5,3,2,3,3,71,0,0,1,0,0.0,0
933,8,train,"Give me the band, that is a group and a band and an organisation, of Alan Warner (musician).",SELECT ?result WHERE { ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Group>. <http://dbpedia.org/resource/Alan_Warner_(musician)> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Band>. ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?band WHERE {
  ?band a dbo:MusicalGroup ;
        a dbo:Organisation .
  ?member dbo:member ?band .
  ?member foaf:name ""Alan Warner"" .
}
```",1,4,2,1,1,3,3,71,0,0,2,0,0.0,0
839,14,train,"Give me the band of the band, that is a musical artist, of Charlie Huhn.",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/bandMember> ?v1 . <http://dbpedia.org/resource/Charlie_Huhn> <http://dbpedia.org/ontology/associatedMusicalArtist> ?v1 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?band WHERE {
  ?person a dbo:MusicalArtist ;
          foaf:name ""Charlie Huhn""@en .
  
  ?person dbo:bandMember ?membership .
  ?membership dbo:band ?band .
}
```",2,3,3,2,1,3,3,71,0,0,2,0,0.0,0
507,6,train,"Give me the movie, that is a movie and a work, with Beryl Reid.",SELECT ?result WHERE { ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Film>. ?result <http://dbpedia.org/property/starring> <http://dbpedia.org/resource/Beryl_Reid> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?film WHERE {
  ?film a dbo:Film .
  ?film dbo:starring dbr:Beryl_Reid .
}
```",1,3,2,1,1,3,3,71,9,2,0,0.8181818181818182,1.0,0.9
170,18,train,Give me the domain of the profession of John Scholey and birth place of Era Ziganshina.,SELECT ?result WHERE { <http://dbpedia.org/resource/Era_Ziganshina> <http://dbpedia.org/ontology/birthPlace> ?result . <http://dbpedia.org/resource/John_Scholey> <http://dbpedia.org/property/occupation> ?v2 . ?result <http://dbpedia.org/ontology/leaderTitle> ?v2 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT DISTINCT ?professionDomain ?birthPlace
WHERE {
  # Find the domain of John Scholey's profession
  OPTIONAL {
    ?scholey dbo:occupation ?profession .
    ?profession rdfs:domain ?professionDomain .
    FILTER (str(?scholey) = ""John_Scholey"")
  }
  
  # Find the birthplace of Era Ziganshina
  OPTIONAL {
    dbr:Era_Ziganshina dbo:birthPlace ?birthPlace .
  }
}
```",3,3,4,2,2,2,3,28,1,2,0,0.3333333333333333,1.0,0.5
933,33,train,Give me the reference to the birth name of the professional in Musician and band of Mike Elliott (saxophonist).,SELECT ?result WHERE { ?v0 <http://dbpedia.org/property/occupation> <http://dbpedia.org/resource/Musician> . ?result <http://xmlns.com/foaf/0.1/name> ?v2 . ?v0 <http://dbpedia.org/property/birthName> ?v2 . <http://dbpedia.org/resource/Mike_Elliott_(saxophonist)> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT ?birthName WHERE {
  ?person a dbo:Saxophonist ;
          foaf:name ""Mike Elliott"" .
  OPTIONAL { ?person foaf:givenName ?birthName . }
  OPTIONAL { ?person dbo:birthName ?birthName . }
}
```",4,4,5,3,2,3,3,71,0,0,1,0,0.0,0
453,6,train,"Give me the religion of the author, that is a cardinal and a cleric, of Apologia Pro Vita Sua.",SELECT ?result WHERE { ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Cleric>. <http://dbpedia.org/resource/Apologia_Pro_Vita_Sua> <http://dbpedia.org/property/author> ?v0 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Cardinal>. ?v0 <http://dbpedia.org/ontology/religion> ?result . },"```sparql
SELECT ?religion WHERE {
  ?author foaf:name ""John Henry Newman""@en .
  ?author dbo:book dbp:Apologia_Pro_Vita_Sua .
  ?author dbo:position dbr:Cardinal .
  ?author dbo:occupation dbr:Cleric .
  ?author dbo:religion ?religion .
}
```",2,4,3,2,1,2,2,9,0,0,2,0,0.0,0
417,16,train,"Who is the father of the leader, that is a royalty, of Colony of Greenland?",SELECT ?result WHERE { ?v1 <http://dbpedia.org/property/father> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. <http://dbpedia.org/resource/Colony_of_Greenland> <http://dbpedia.org/property/leader> ?v1 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?leader ?father WHERE {
  # Find a person who was a leader (monarch) of Greenland
  ?leader dbo:country dbr:Greenland .
  ?leader dbo:positionTitle ?title .
  
  FILTER regex(?title, ""King|Queen"", ""i"") # Filter for royalty titles

  # Get the father of this leader
  ?leader dbo:father ?father .

  # Ensure the leader is associated with a historical period relevant to Greenland's colonial status
  OPTIONAL { ?leader dbo:birthPlace dbr:Denmark } # Assuming Danish connection due to historical context
}
```",2,3,3,2,1,3,3,71,0,0,1,0,0.0,0
433,15,train,"Give me the person born, that is a musical artist and an artist, as the persona of Paul Chambers.",SELECT ?result WHERE { ?result <http://dbpedia.org/property/birthName> ?v1 . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. <http://dbpedia.org/resource/Paul_Chambers> <http://xmlns.com/foaf/0.1/givenName> ?v1 . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?person ?birthDate WHERE {
  ?person a dbo:MusicalArtist .
  ?person dbo:occupation dbr:Artist .
  ?person dbo:birthDate ?birthDate .
}
```",2,4,3,2,1,3,3,71,0,50,1,0.0,0.0,0
41,10,train,Give me the party of the person born as David Declan Costello.,"SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/party> ?result . ?v1 <http://dbpedia.org/property/birthName> ""David Declan Costello""@en . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT ?party WHERE {
  ?person foaf:name ""David Declan Costello"" .
  ?person dbo:party ?party .
}
```",2,2,3,2,1,2,3,28,0,0,1,0,0.0,0
445,0,train,Give me the entity in England.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/location> <http://dbpedia.org/resource/England> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?entity ?label WHERE {
  ?entity dbo:country dbr:England .
  SERVICE wikibase:label { bd:serviceParam wikibase:language ""[AUTO_LANGUAGE],en"". }
}
LIMIT 10
```",1,1,2,1,1,3,3,71,0,0,3546,0,0.0,0
129,11,train,Give me the associated musical artist of the person born as Tahj Malik Chandler.,"SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v1 <http://dbpedia.org/property/birthName> ""Tahj Malik Chandler""@en . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?artist WHERE {
  ?game a dbo:MusicalArtist ;
        foaf:name ""The Game"" .
  
  OPTIONAL { 
    ?game dbo:associatedBandOrMusicalGroup ?artist .
  }
}
```",2,2,3,2,1,2,3,28,0,0,8,0,0.0,0
281,8,train,"Give me the commander in the war, that is an event and a military conflict, of Roy Boehm.",SELECT ?result WHERE { <http://dbpedia.org/resource/Roy_Boehm> <http://dbpedia.org/ontology/battle> ?v1 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v1 <http://dbpedia.org/ontology/commander> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?war ?commander WHERE {
  # Find military conflicts (wars) associated with Roy Boehm
  ?boehm dbo:occupation dbr:Military_person .
  ?boehm foaf:name ""Roy Boehm"" .
  
  ?boehm dbo:participatedIn ?event .
  ?event a dbo:MilitaryConflict .

  # Find the commander of each military conflict
  ?event dbo:commander ?commander .
  
  # Return the war and its commander
  ?war rdfs:label ?warLabel .
  FILTER (lang(?warLabel) = 'en')
  BIND(str(?warLabel) AS ?war)
}
```",2,4,3,2,1,2,3,28,0,0,171,0,0.0,0
508,4,train,"Give me the war, that is a military conflict and a societal event, of Hu Yukun.",SELECT ?result WHERE { ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. <http://dbpedia.org/resource/Hu_Yukun> <http://dbpedia.org/ontology/battle> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?war WHERE {
  ?person dbo:nationality dbr:China .
  ?person rdfs:label ""Hu Yukun""@en .
  ?event dbo:agent ?person ;
         a dbo:MilitaryConflict ;
         dbo:socialEvent true .
  ?event rdfs:label ?war .
}
```",1,3,2,1,1,3,2,20,0,0,4,0,0.0,0
976,9,train,Give me the office of Mustafa Şentop and office of Meral Akşener.,SELECT ?result WHERE { <http://dbpedia.org/resource/Mustafa_Şentop> <http://dbpedia.org/property/office> ?result . <http://dbpedia.org/resource/Meral_Akşener> <http://dbpedia.org/property/office> ?result . },"```sparql
# Query for Mustafa Şentop's offices
SELECT ?office WHERE {
  wd:Q123456 dbo:office ?office .
}

UNION

# Query for Meral Akşener's offices
SELECT ?office WHERE {
  wd:Q654321 dbo:office ?office .
}
```

Note: Replace `wd:Q123456` with the actual DBpedia resource ID for Mustafa Şentop and `wd:Q654321` with the actual DBpedia resource ID for Meral Akşener. You can find these IDs by searching their names on DBpedia or using a SPARQL endpoint to query for them.",2,2,3,1,2,3,3,71,0,0,1,0,0.0,0
826,38,train,"Give me the predecessor of the parent of Prince Friedrich of Hesse and by Rhine and successor of the child, that is a royalty, of Louis I, Grand Duke of Hesse.","SELECT ?result WHERE { <http://dbpedia.org/resource/Prince_Friedrich_of_Hesse_and_by_Rhine> <http://dbpedia.org/ontology/parent> ?v2 . <http://dbpedia.org/resource/Louis_I,_Grand_Duke_of_Hesse> <http://dbpedia.org/ontology/child> ?v3 . ?v3 <http://dbpedia.org/ontology/successor> ?result . ?result <http://dbpedia.org/ontology/successor> ?v2 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?predecessor ?successor WHERE {
  # Step 1: Identify Prince Friedrich of Hesse and by Rhine
  ?friedrich a dbo:Person ;
             rdfs:label ""Prince Friedrich of Hesse and by Rhine""@en .

  # Step 2: Find his parent
  ?parent dbo:child ?friedrich .

  # Step 3: Determine the predecessor of this parent
  ?predecessor dbo:succeededBy ?parent .

  # Step 4: Identify Louis I, Grand Duke of Hesse
  ?louis a dbo:Person ;
         rdfs:label ""Louis I, Grand Duke of Hesse""@en .

  # Step 5: Find a child that is royalty
  ?royalChild dbo:child ?louis ;
              a dbo:Monarch .

  # Step 6: Determine the successor of this royal child
  ?successor dbo:succeededBy ?royalChild .
}
```",4,5,5,2,2,3,3,71,0,0,1,0,0.0,0
459,11,train,Give me the person born as the birth name of Kevin Stitt.,SELECT ?result WHERE { ?result <http://dbpedia.org/property/birthName> ?v1 . <http://dbpedia.org/resource/Kevin_Stitt> <http://dbpedia.org/property/birthName> ?v1 . },"```sparql
PREFIX foaf: <http://xmlns.com/foaf/0.1/>
SELECT ?birthName WHERE {
  ?person a foaf:Person ;
          foaf:name ""Kevin Stitt""@en .
  OPTIONAL { 
    ?person foaf:givenName ?givenName .
    ?person foaf:familyName ?familyName .
    BIND(CONCAT(?givenName, "" "", ?familyName) AS ?birthName)
  }
}
```",2,2,3,2,1,2,3,28,0,0,1,0,0.0,0
495,0,train,Give me the child of Frederick I of Württemberg.,SELECT ?result WHERE { ?result <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Frederick_I_of_Württemberg> . },"```sparql
SELECT ?child WHERE {
  ?person dbo:givenName ""Frederick"" .
  ?person dbo:familyName ""I of Württemberg""@en .
  ?person dbo:child ?child .
}
```",1,1,2,1,1,3,2,20,0,0,3,0,0.0,0
130,13,train,"Give me the figure known as the film, that is a soccer club and an organisation, of the native, that is a coach and a college coach, of Madison, Alabama.","SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerClub>. ?v0 <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Madison,_Alabama> . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/CollegeCoach>. ?result <http://dbpedia.org/property/nickname> ?v1 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Coach>. ?v1 <http://dbpedia.org/ontology/director> ?v0 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?person ?club ?film WHERE {
  ?person dbo:nationality dbr:United_States ;
          dbo:birthPlace dbr:Madison,_Alabama ;
          dbo:occupation dbr:Soccer_coach ;
          dbo:collegeCoach true .
  
  ?person dbo:associatedWith ?club .
  
  ?club rdfs:label ?clubLabel .
  
  OPTIONAL {
    ?film dbo:title ?clubLabel .
  }
  
  FILTER (lang(?clubLabel) = 'en')
}
```",3,7,4,3,1,3,2,20,0,0,3,0,0.0,0
124,15,train,"Give me the war, that is a societal event and a military conflict, of the reference, that is Australian and an organisation and a military unit, to 'A' Battery, Royal Australian Artillery.","SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryUnit>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v1 <http://dbpedia.org/ontology/battle> ?result . ?v1 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Australia>. ?v1 <http://xmlns.com/foaf/0.1/name> ""'A' Battery, Royal Australian Artillery""@en . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?war WHERE {
  ?war a dbo:MilitaryConflict ;
      a dbo:SocietalEvent .
  
  OPTIONAL { 
    ?unit dbo:partOfMilitaryUnit dbr:A_Battery,_Royal_Australian_Artillery .
    ?unit dbo:country dbr:Australia .
    ?unit dbo:participatedInWar ?war .
  }
}
```",2,7,3,2,1,3,3,71,0,0,6,0,0.0,0
166,8,train,"Give me the entity in the territory administered, that is a country, from Madrid.",SELECT ?result WHERE { ?v0 <http://dbpedia.org/ontology/capital> <http://dbpedia.org/resource/Madrid> . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. ?result <http://dbpedia.org/ontology/country> ?v0 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?country WHERE {
  # Find the entity for Spain, which has Madrid as its capital
  dbr:Spain dbo:capital dbr:Madrid .
  
  # Find countries that are part of territories administered by Spain
  ?territory dbo:administrativeTerritory dbr:Spain ;
             a dbo:Country .
  
  BIND(?territory AS ?country)
}
```",2,3,3,2,1,3,2,20,0,0,12023,0,0.0,0
826,35,train,Give me the spouse of the child of Johann Heinrich Appel and predecessor of the parent of Prince Friedrich of Hesse and by Rhine.,"SELECT ?result WHERE { ?v2 <http://dbpedia.org/ontology/spouse> ?result . ?v2 <http://dbpedia.org/property/father> ""Johann Heinrich Appel""@en . ?result <http://dbpedia.org/ontology/successor> ?v1 . <http://dbpedia.org/resource/Prince_Friedrich_of_Hesse_and_by_Rhine> <http://dbpedia.org/ontology/parent> ?v1 . }","```sparql
# Step 1: Find Johann Heinrich Appel's child
SELECT ?child WHERE {
    ?appel dbo:spouse ?partner .
    ?partner dbo:child ?child .
    FILTER(CONTAINS(LCASE(?appel), ""johann heinrich appel""))
}

# Assuming we have identified a specific child, let's call it :Child1

# Step 2: Find the spouse of Johann Heinrich Appel's child
SELECT ?spouse WHERE {
    :Child1 dbo:spouse ?spouse .
}

# Assuming we have identified a specific spouse, let's call it :Spouse1

# Step 3: Identify Prince Friedrich of Hesse and by Rhine's parent
SELECT ?parent WHERE {
    dbpedia:Prince_Friedrich_of_Hesse_and_by_Rhine dbo:parent ?parent .
}

# Assuming we have identified a specific parent, let's call it :Parent1

# Step 4: Determine the predecessor of that parent
SELECT ?predecessor WHERE {
    ?parent dbo:predecessor ?predecessor .
    FILTER(?parent = :Parent1)
}

# Assuming we have identified a specific predecessor, let's call it :Predecessor1

# Step 5: Ensure the spouse from step 2 is connected through this predecessor
SELECT ?spouse WHERE {
    :Spouse1 dbo:relatedTo ?predecessor .
    FILTER(?predecessor = :Predecessor1)
}
```",4,4,5,2,2,3,3,71,0,0,1,0,0.0,0
170,14,train,Give me the entity in Russia and birth place of the awardee of People's Artist of Russia.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Russia> . ?v2 <http://dbpedia.org/ontology/birthPlace> ?result . ?v2 <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/People's_Artist_of_Russia> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?person ?birthPlace ?entityInRussia WHERE {
  ?person dbo:title ""People's Artist of Russia""@ru .
  OPTIONAL { ?person dbo:birthPlace ?birthPlace . }
  OPTIONAL { 
    ?person dbo:residence|dbo:workLocation ?location .
    ?location rdf:type dbr:City ; dbo:country dbr:Russia .
    BIND(?location AS ?entityInRussia)
  }
}
```",3,3,4,2,2,2,3,28,0,0,12,0,0.0,0
216,10,train,Give me the party of the awardee of Australian Defence Medal.,SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/party> ?result . ?v1 <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/Australian_Defence_Medal> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?person ?party WHERE {
  ?person dbo:award dbr:Australian_Defence_Medal .
  OPTIONAL { ?person dbo:politicalAffiliation ?party . }
}
```",2,2,3,2,1,2,3,28,0,7,5,0.0,0.0,0
888,2,train,Give me the military force of War in Donbas (2014–2022).,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/battle> <http://dbpedia.org/resource/War_in_Donbas_(2014–2022)> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?militaryForce WHERE {
  VALUES ?region { 
    dbr:Donbas
  }
  
  # Ukrainian Armed Forces
  OPTIONAL {
    ?ukraineMilitary a dbo:MilitaryUnit ;
                     dbo:militaryConflict dbr:War_in_Donbass_(2014–2022) ;
                     rdfs:label ?militaryForce .
    FILTER (lang(?militaryForce) = ""en"")
  }
  
  # Donetsk People's Republic Forces
  OPTIONAL {
    ?donetskMilitary a dbo:MilitaryUnit ;
                     dbo:militaryConflict dbr:War_in_Donbass_(2014–2022) ;
                     rdfs:label ?militaryForce .
    FILTER (lang(?militaryForce) = ""en"")
  }
  
  # Luhansk People's Republic Forces
  OPTIONAL {
    ?luhanskMilitary a dbo:MilitaryUnit ;
                     dbo:militaryConflict dbr:War_in_Donbass_(2014–2022) ;
                     rdfs:label ?militaryForce .
    FILTER (lang(?militaryForce) = ""en"")
  }
}
```",1,1,2,1,1,3,2,20,0,0,135,0,0.0,0
715,39,train,"Give me the commander in Spanish Civil War and leader of the office, that is a government agency and an organisation, of the reference to Carlos Franco Iribarnegaray.","SELECT ?result WHERE { <http://dbpedia.org/resource/Spanish_Civil_War> <http://dbpedia.org/ontology/commander> ?result . ?v0 <http://dbpedia.org/property/office> ?v1 . ?v1 <http://dbpedia.org/ontology/leader> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/GovernmentAgency>. ?v0 <http://xmlns.com/foaf/0.1/name> ""Carlos Franco Iribarnegaray""@en . }","```sparql
SELECT ?person WHERE {
  ?person dbo:spouse dbr:Carlos_Franco_Iribarnegaray .
  ?person dbo:occupation dbr:Military_officer .
  ?person dbo:commanderInWar dbr:Spanish_Civil_War .
  OPTIONAL { 
    ?office dbo:leader ?person ;
            a dbo:Government_agency, dbo:Organization .
  }
}
```",4,6,5,3,2,3,3,71,0,0,1,0,0.0,0
456,11,train,Give me the spouse of the actor of Pacific Drive.,SELECT ?result WHERE { ?v0 <http://dbpedia.org/ontology/spouse> ?result . <http://dbpedia.org/resource/Pacific_Drive> <http://dbpedia.org/property/starring> ?v0 . },"```sparql
SELECT ?actor ?spouse WHERE {
  # Find the movie ""Pacific Drive""
  ?movie dbo:title ""Pacific Drive""@en .
  
  # Find actors of the movie
  ?movie dbo:starring ?actor .

  # Find the spouse of each actor
  OPTIONAL { ?actor dbo:spouse ?spouse . }
}
```",2,2,3,2,1,3,3,71,0,0,4,0,0.0,0
216,3,train,"Give me the reference, that is an organisation and a soccer club, to Croatia U21.","SELECT ?result WHERE { ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerClub>. ?result <http://xmlns.com/foaf/0.1/name> ""Croatia U21""@en . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?club WHERE {
  ?club a dbo:Organization .
  ?club a dbo:FootballClub .
  ?club dbo:teamName ?name .
  FILTER(CONTAINS(LCASE(?name), ""croatia u21""))
}
```",1,3,2,1,1,3,3,71,0,0,1,0,0.0,0
892,27,train,"Give me the entity in the administration, that is Italian and a region and a settlement and an administrative region, of the party, that is a political party and an organisation, of Andrea Cozzolino.",SELECT ?result WHERE { ?v0 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Italy>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. ?result <http://dbpedia.org/ontology/province> ?v0 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?v0 <http://dbpedia.org/property/leaderParty> ?v1 . <http://dbpedia.org/resource/Andrea_Cozzolino> <http://dbpedia.org/ontology/party> ?v1 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Region>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/PoliticalParty>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/AdministrativeRegion>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?entity WHERE {
  # Find the political party associated with Andrea Cozzolino
  ?party dbo:member dbr:Andrea_Cozzolino .
  
  # Identify entities in the administration of this party
  ?administration dbo:politicalParty ?party ;
                  dbo:country dbr:Italy ;
                  a dbo:AdministrativeRegion .

  # Filter for entities that are also regions, settlements, and administrative regions
  ?entity dbo:administrativeRegion ?administration ;
          a dbo:Region , dbo:Settlement , dbo:AdministrativeRegion .
}
```",3,9,4,3,1,3,3,71,0,0,587,0,0.0,0
935,14,train,"Give me the headquarter of the office of the native of Balochistan, Pakistan.","SELECT ?result WHERE { ?v2 <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Balochistan,_Pakistan> . ?v0 <http://dbpedia.org/ontology/location> ?result . ?v2 <http://dbpedia.org/property/office> ?v0 . }","```sparql
SELECT ?officeHeadquarters WHERE {
  ?governor a dbo:GovernmentOfficial ;
            foaf:name ?name .
  ?governor dbo:officeLocation ?office .
  ?office dbo:location ?officeHeadquarters .
  FILTER(CONTAINS(LCASE(?name), ""balochistan""))
}
```",3,3,4,3,1,3,2,20,0,0,1,0,0.0,0
93,11,train,"Give me the capital of the headquarter, that is a region and a settlement, of Lake Clark National Park and Preserve and death place of John Weir Troy.",SELECT ?result WHERE { ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Region>. ?v2 <http://dbpedia.org/ontology/capital> ?result . <http://dbpedia.org/resource/Lake_Clark_National_Park_and_Preserve> <http://dbpedia.org/ontology/location> ?v2 . <http://dbpedia.org/resource/John_Weir_Troy> <http://dbpedia.org/ontology/deathPlace> ?result . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. },"```sparql
# Step 1: Identify the region and settlement for Lake Clark National Park and Preserve
SELECT ?region ?settlement WHERE {
  wd:Q123456 wdt:P131* ?region .
  ?region wdt:P31/wdt:P279* wd:Q515 . # Assuming Q515 is a type of administrative division
  ?settlement wdt:P131* ?region .
}

# Step 2: Find the capital of this region or settlement
SELECT DISTINCT ?capital WHERE {
  ?region wdt:P36 ?capital .
  FILTER(?region IN (?region))
}

# Step 3: Determine the death place of John Weir Troy
SELECT ?deathPlace WHERE {
  wd:Q12345 wdt:P20 ?deathPlace .
}

# Step 4: Check for commonality between the capital and death place
SELECT DISTINCT ?capital WHERE {
  VALUES ?deathPlace { ?deathPlace }
  ?region wdt:P36 ?capital .
  FILTER(?region IN (?region))
  FILTER(?capital = ?deathPlace)
}
```

Note: Replace `wd:Q123456` with the actual DBpedia ID for Lake Clark National Park and Preserve, and `wd:Q12345` with the DBpedia ID for John Weir Troy. The query assumes that the region type is a known administrative division (e.g., state or province).",3,5,4,2,2,3,2,20,0,0,1,0,0.0,0
456,2,train,Give me the band of Alan Doyle.,SELECT ?result WHERE { <http://dbpedia.org/resource/Alan_Doyle> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . },"```sparql
SELECT ?band WHERE {
  dbpedia:Alan_Doyle dbo:memberOf ?band .
}
```",1,1,2,1,1,3,3,71,0,0,3,0,0.0,0
130,4,train,Give me the award of Živko Ključe.,SELECT ?result WHERE { <http://dbpedia.org/resource/Živko_Ključe> <http://dbpedia.org/property/awards> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?award WHERE {
  VALUES ?person { dbr:Živko_Ključe }
  ?person dbo:award ?award .
}
```",1,1,2,1,1,3,2,20,0,1,2,0.0,0.0,0
839,31,train,"Give me the band of the person born, that is a musical artist, as the persona of Kevin Russell (musician) and band of Peter Schorowsky.",SELECT ?result WHERE { ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?result <http://dbpedia.org/ontology/bandMember> <http://dbpedia.org/resource/Peter_Schorowsky> . <http://dbpedia.org/resource/Kevin_Russell_(musician)> <http://xmlns.com/foaf/0.1/givenName> ?v1 . ?v0 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v0 <http://dbpedia.org/property/birthName> ?v1 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?band WHERE {
  # Query for Kevin Russell's band
  OPTIONAL { 
    ?person rdfs:label ""Kevin Russell (musician)""@en .
    ?person dbo:musicArtistOf ?band .
  }
  
  # Placeholder query for Peter Schorowsky, assuming we had more information
  OPTIONAL {
    ?person2 rdfs:label ""Peter Schorowsky""@en .
    ?person2 dbo:musicArtistOf ?band2 .
  }
}
```",4,5,5,3,2,3,3,71,0,0,1,0,0.0,0
216,5,train,"Give me the player, that is an organisation and a sports club and a soccer club, in Džemal Berberović.",SELECT ?result WHERE { <http://dbpedia.org/resource/Džemal_Berberović> <http://dbpedia.org/ontology/team> ?result . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerClub>. ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsClub>. ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?player WHERE {
  ?player a dbo:SoccerClub ;
          dbo:member ?member .
  ?member foaf:name ""Džemal Berberović""@sl .
}
```",1,4,2,1,1,3,3,71,0,0,10,0,0.0,0
976,29,train,"Give me the office of the mayor, that is a politician and an office holder and Turkish, of Nation Alliance (Turkey) and office of Naci Bostancı and office of Mustafa Şentop.",SELECT ?result WHERE { <http://dbpedia.org/resource/Mustafa_Şentop> <http://dbpedia.org/property/office> ?result . ?v3 <http://dbpedia.org/ontology/nationality> <http://dbpedia.org/resource/Turkey>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. <http://dbpedia.org/resource/Naci_Bostancı> <http://dbpedia.org/property/office> ?result . <http://dbpedia.org/resource/Nation_Alliance_(Turkey)> <http://dbpedia.org/property/leader> ?v3 . ?v3 <http://dbpedia.org/property/office> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?person ?office WHERE {
  ?person a dbo:Politician ;
          dbo:nationality dbr:Turkey ;
          dbo:partyMembership dbr:Nation_Alliance_(Turkey) .
  
  OPTIONAL { 
    ?person dbo:holdsOffice ?office .
    FILTER (?office IN (dbr:Office_of_Naci_Bostancı, dbr:Office_of_Mustafa_Şentop))
  }
}
```",4,7,5,2,3,3,3,71,0,0,1,0,0.0,0
874,3,train,"Give me the writer, that is an artist and a musical artist, of Mezzanine (album).",SELECT ?result WHERE { ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. <http://dbpedia.org/resource/Mezzanine_(album)> <http://dbpedia.org/property/writer> ?result . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?writer WHERE {
  ?album dbo:artist ?band .
  ?band dbo:member ?person .
  ?person foaf:name ?name .
  ?album rdfs:label ""Mezzanine""@en .
  FILTER EXISTS { ?person dbo:occupation dbr:Artist . }
  FILTER EXISTS { ?person dbo:occupation dbr:Musical_artist . }
}
```",1,3,2,1,1,3,2,20,0,0,15,0,0.0,0
445,9,train,Give me the entity in England and death place of Patrick Moore.,SELECT ?result WHERE { <http://dbpedia.org/resource/Patrick_Moore> <http://dbpedia.org/ontology/deathPlace> ?result . ?result <http://dbpedia.org/ontology/location> <http://dbpedia.org/resource/England> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?entityInEngland ?deathPlace WHERE {
  VALUES ?person { dbr:Patrick_Moore }
  
  # Find the entity in England associated with Patrick Moore
  ?person dbo:birthPlace ?birthPlace .
  ?birthPlace dbo:country dbr:United_Kingdom ;
              rdfs:label ?entityInEngland .
  FILTER(CONTAINS(LCASE(?entityInEngland), ""england""))

  # Find his place of death
  ?person dbo:deathPlace ?deathPlace .
}
```",2,2,3,1,2,3,3,71,0,0,1,0,0.0,0
47,27,train,"Give me the office of the awardee of the entity, that is an award, in India.",SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/India> . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Award>. ?v2 <http://dbpedia.org/property/awards> ?v1 . ?v2 <http://dbpedia.org/property/office> ?result . },"```sparql
SELECT ?recipient ?office WHERE {
  ?award dcterms:isPartOf dbc:Bharat_Ratna ;
         dbo:recipient ?recipient .
  OPTIONAL { ?recipient dbo:positionHeld ?office . }
  FILTER (LANG(?award) = ""en"")
}
ORDER BY DESC(?award)
LIMIT 1
```",3,4,4,3,1,3,3,71,0,0,200,0,0.0,0
892,7,train,"Give me the party, that is a political party and an organisation, of Andrea Cozzolino.",SELECT ?result WHERE { ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/PoliticalParty>. <http://dbpedia.org/resource/Andrea_Cozzolino> <http://dbpedia.org/ontology/party> ?result . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>

SELECT ?party WHERE {
  ?person a dbo:Person ;
          foaf:name ""Andrea Cozzolino""@en .
  ?person dbo:party ?party .
  FILTER EXISTS { ?party a dbo:PoliticalParty . }
  FILTER EXISTS { ?party a dbo:Organization . }
}
```",1,3,2,1,1,3,3,71,0,0,1,0,0.0,0
791,5,train,"Give me the child, that is an office holder and a royalty, of Emperor Go-Shirakawa.",SELECT ?result WHERE { ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?result <http://dbpedia.org/ontology/parent> <http://dbpedia.org/resource/Emperor_Go-Shirakawa> . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?child WHERE {
  dbr:Emperor_Go-Shirakawa dbo:spouse ?parent .
  ?parent dbo:child ?child .
  
  ?child a dbo:Monarch ;
         dbo:country dbr:Japan .

  FILTER EXISTS { ?child dbo:officeHolder ?position }
}
```",1,3,2,1,1,3,3,71,0,0,2,0,0.0,0
129,17,train,"Give me the associated musical artist of the actor, that is an organisation, of Dreamville Presents: Revenge and associated musical artist of Saba (rapper).",SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . <http://dbpedia.org/resource/Dreamville_Presents:_Revenge> <http://dbpedia.org/property/starring> ?v1 . <http://dbpedia.org/resource/Saba_(rapper)> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?dreamvilleArtist ?sabaArtist WHERE {
  # Find the organization associated with Dreamville Presents: Revenge
  OPTIONAL {
    ?album dcterms:title ""Dreamville Presents: Revenge"" .
    ?album dbo:artist ?dreamvilleArtist .
    FILTER (isLiteral(?dreamvilleArtist) && regex(str(?dreamvilleArtist), ""organization"", ""i""))
  }

  # Find the musical artist associated with Saba
  OPTIONAL {
    ?saba dbr:Saba_(rapper) .
    ?saba dbo:musicalArtist ?sabaArtist .
  }
}
```",3,4,4,2,2,2,3,28,0,0,1,0,0.0,0
495,6,train,Give me the father of Princess Charlotte of Württemberg and child of Frederick I of Württemberg.,SELECT ?result WHERE { <http://dbpedia.org/resource/Princess_Charlotte_of_Württemberg> <http://dbpedia.org/property/father> ?result . ?result <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Frederick_I_of_Württemberg> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>

SELECT ?father WHERE {
  ?child dbo:parent ?father .
  ?father dbo:spouse ?mother .

  FILTER (?child = dbpedia:Princess_Charlotte_of_Württemberg)
  
  ?parentChild dbo:parent ?frederickI .
  ?parentChild dbo:child ?child .
  FILTER (?frederickI = dbpedia:Friedrich_I._of_Württemberg)

}
```",2,2,3,1,2,3,2,20,0,0,1,0,0.0,0
606,0,train,Give me the figure known as Barb City.,"SELECT ?result WHERE { ?result <http://dbpedia.org/property/nickname> ""Barb City""@en . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?entity ?label WHERE {
  ?entity rdfs:label ""Barb City""@en .
  OPTIONAL { ?entity dbo:wikiPageRedirects ?redirect . }
  FILTER NOT EXISTS { ?redirect rdfs:label ?redirectLabel } # Exclude redirects
}
```",1,1,2,1,1,3,2,20,0,0,1,0,0.0,0
93,7,train,"Give me the capital of the headquarter, that is a region and a settlement, of Lake Clark National Park and Preserve.",SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/capital> ?result . <http://dbpedia.org/resource/Lake_Clark_National_Park_and_Preserve> <http://dbpedia.org/ontology/location> ?v1 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Region>. },"```sparql
# Step 1: Find the region and settlement for Lake Clark National Park and Preserve
SELECT ?region ?settlement WHERE {
    ?park dcterms:isPartOf ?region .
    ?park dbp:headquarters ?settlement .
    ?park rdfs:label ""Lake Clark National Park and Preserve""@en .
}

# Step 2: Verify if the settlement is also a region
SELECT ?settlement WHERE {
    VALUES (?settlement) { <result_from_step_1> }
    ?settlement rdf:type dbo:Settlement .
    ?settlement rdf:type dbo:Region .
}

# Step 3: Find the capital of this region
SELECT ?capital WHERE {
    VALUES (?region) { <result_from_step_1> }
    ?region dbo:capital ?capital .
}
```

Note: Replace `<result_from_step_1>` with the actual URI obtained from the first query.",2,4,3,2,1,3,2,20,0,0,2,0,0.0,0
917,10,train,Give me the child of Kekūanāoʻa and parent of Albert Kamehameha.,"SELECT ?result WHERE { ?result <http://dbpedia.org/property/father> ""Kekūanāoʻa""@en . ?result <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Albert_Kamehameha> . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>

SELECT ?person WHERE {
  ?kekuanaoa dbo:name ""Kekūanāoʻa""@en .
  ?kekuanaoa dbo:child ?person .

  ?albert dbo:name ""Albert Kamehameha""@en .
  ?albert dbo:parent ?person .
}
```",2,2,3,1,2,3,3,71,0,0,1,0,0.0,0
326,7,train,"Give me the resident of the birthplace, that is a state and British, of David Jessel.",SELECT ?result WHERE { ?result <http://dbpedia.org/property/residence> ?v1 . ?v1 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/United_Kingdom>. <http://dbpedia.org/resource/David_Jessel> <http://dbpedia.org/ontology/birthPlace> ?v1 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/AdministrativeRegion>. },"```sparql
SELECT ?resident WHERE {
  wd:Q1116 wdt:P19 wd:Q84 . # David Jessel's birthplace is London (wd:Q84)
  wd:Q84 wdt:P31/wdt:P279* wd:Q2220681 . # London is a city in England (wd:Q2220681)
  wd:Q2220681 wdt:P30 ?resident . # Residents of England
  FILTER EXISTS { ?resident wdt:P27 wd:Q145 . } # Filter for British residents
}
LIMIT 10
```",2,4,3,2,1,3,2,20,0,0,5,0,0.0,0
965,1,train,Give me the parent of Louise Mountbatten.,SELECT ?result WHERE { <http://dbpedia.org/resource/Louise_Mountbatten> <http://dbpedia.org/ontology/parent> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?parent WHERE {
  ?person a dbo:Person ;
          foaf:name ""Louise Mountbatten""@en .
  OPTIONAL { ?person dbo:childOf ?parent . }
  FILTER (?person = dbr:Louise_Mountbatten)
}
```",1,1,2,1,1,3,3,71,0,0,2,0,0.0,0
582,23,train,"Give me the reference to the residence of the reference, that is a scientist, to Hirotaka Sugawara.","SELECT ?result WHERE { ?v2 <http://xmlns.com/foaf/0.1/name> ""Hirotaka Sugawara""@en . ?result <http://xmlns.com/foaf/0.1/name> ?v0 . ?v2 <http://dbpedia.org/property/residence> ?v0 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Scientist>. }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?residence WHERE {
  ?person a dbo:Scientist ;
          foaf:name ""Hirotaka Sugawara""@en .
  OPTIONAL { ?person dbo:residenceLocation ?residence . }
}
```",3,4,4,3,1,3,3,71,0,0,41,0,0.0,0
236,5,train,Give me the administration of James Madison.,SELECT ?result WHERE { ?result <http://dbpedia.org/property/leader> <http://dbpedia.org/resource/James_Madison> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?termStart ?termEnd ?vicePresident WHERE {
  ?presidency a dbo:Presidency ;
              dbo:president dbr:James_Madison ;
              dbo:startDate ?termStart ;
              dbo:endDate ?termEnd .
  
  OPTIONAL { 
    ?presidency dbo:vicePresidents ?vp .
    ?vp rdfs:label ?vicePresident .
    FILTER (lang(?vicePresident) = 'en')
  }
}
```",1,1,2,1,1,3,2,20,0,0,4,0,0.0,0
987,20,train,Give me the birth place of Dado Polumenta and birth place of the actor of All for Free.,SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/birthPlace> ?result . <http://dbpedia.org/resource/All_for_Free> <http://dbpedia.org/property/starring> ?v1 . <http://dbpedia.org/resource/Dado_Polumenta> <http://dbpedia.org/ontology/birthPlace> ?result . },"```sparql
# Query to get the birth place of Dado Polumenta
SELECT ?birthPlace WHERE {
  wd:Q1234568 dbo:birthPlace ?birthPlace .
}

# Query to find actors in ""All for Free"" and then get one actor's birthplace
SELECT DISTINCT ?actor ?actorBirthPlace WHERE {
  # Find the film ""All for Free""
  ?film foaf:name ""All for Free""@en .

  # Get the DBpedia resource for the film
  ?film wdt:P31 wd:Q11424 . # Q11424 is the class for films

  # Find actors in the film
  ?film dbo:starring ?actor .

  # Get one actor's birthplace
  ?actor dbo:birthPlace ?actorBirthPlace .
}
```

Note: Replace `wd:Q1234568` with the actual DBpedia resource ID for Dado Polumenta if it is different. The film ""All for Free"" should be identified by its correct DBpedia resource, and similarly, ensure that the class for films (`wdt:P31 wd:Q11424`) is accurate.",3,3,4,2,2,3,3,71,0,0,3,0,0.0,0
926,17,train,"Give me the father, that is a royalty, of the parent, that is a royalty, of Beyhan Sultan (daughter of Mustafa III).",SELECT ?result WHERE { ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. <http://dbpedia.org/resource/Beyhan_Sultan_(daughter_of_Mustafa_III)> <http://dbpedia.org/ontology/parent> ?v0 . ?v0 <http://dbpedia.org/property/father> ?result . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. },"```sparql
SELECT ?grandfather WHERE {
  # Beyhan Sultan is a child of Mustafa III
  dbpedia:Beyhan_Sultan dbo:parent ?mustafaIII .
  
  # Mustafa III's father (the grandfather we're looking for)
  ?mustafaIII dbo:parent ?grandfather .

  # Ensure both Mustafa III and his father are royals
  ?mustafaIII rdf:type dbo:Monarch .
  ?grandfather rdf:type dbo:Monarch .
}
```",2,4,3,2,1,3,3,71,0,0,1,0,0.0,0
273,13,train,Give me the spouse of the child of the child of Edoardo Agnelli (1831-1871).,SELECT ?result WHERE { ?v0 <http://dbpedia.org/ontology/parent> <http://dbpedia.org/resource/Edoardo_Agnelli_(1831-1871)> . ?v0 <http://dbpedia.org/ontology/child> ?v1 . ?result <http://dbpedia.org/ontology/spouse> ?v1 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?spouse WHERE {
  # Identify Edoardo Agnelli using his birth and death dates
  ?edoardo a dbo:Person ;
           dbo:birthDate ""1831-01-01""^^xsd:date ;
           dbo:deathDate ""1871-12-31""^^xsd:date .

  # Find the child of Edoardo Agnelli
  ?child dbo:parent ?edoardo .
  
  # Find the grandchild (child of the child)
  ?grandchild dbo:parent ?child .

  # Find the spouse of this grandchild
  ?spouse dbo:spouse ?grandchild .
}
```",3,3,4,3,1,3,2,20,0,0,1,0,0.0,0
926,7,train,"Give me the parent, that is a royalty, of Beyhan Sultan (daughter of Mustafa III).",SELECT ?result WHERE { ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. <http://dbpedia.org/resource/Beyhan_Sultan_(daughter_of_Mustafa_III)> <http://dbpedia.org/ontology/parent> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?parent WHERE {
  ?sibling a dbo:Child ;
           dbo:childOf ?parent .
  ?sibling rdfs:label ""Beyhan Sultan""@en .
  FILTER(CONTAINS(LCASE(?parent), ""mustafa iii""))
}
```",1,2,2,1,1,3,3,71,0,0,2,0,0.0,0
715,17,train,"Give me the office, that is a government agency and an organisation, of the reference to Carlos Franco Iribarnegaray.","SELECT ?result WHERE { ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/GovernmentAgency>. ?v1 <http://xmlns.com/foaf/0.1/name> ""Carlos Franco Iribarnegaray""@en . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?v1 <http://dbpedia.org/property/office> ?result . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT ?office WHERE {
  ?person foaf:name ""Carlos Franco Iribarnegaray""@en .
  ?person foaf:holdsAccount ?office .
  ?office rdf:type dbo:GovernmentAgency ;
          rdf:type dbo:Organization .
}
```",2,4,3,2,1,3,3,71,0,0,1,0,0.0,0
987,26,train,"Give me the birth place of the actor of the show, that is a film, with Emir Hadžihafizbegović.",SELECT ?result WHERE { ?v2 <http://dbpedia.org/property/starring> ?v0 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Film>. ?v0 <http://dbpedia.org/ontology/birthPlace> ?result . ?v2 <http://dbpedia.org/ontology/starring> <http://dbpedia.org/resource/Emir_Hadžihafizbegović> . },"```sparql
SELECT ?actor ?birthPlace WHERE {
  ?film dcterms:subject dbc:Category:Fictional_films_set_in_Bosnia_and_Herzegovina .
  ?film dbo:starringEmirHadžihafizbegović dbp:name ""Emir Hadžihafizbegović"" .
  ?film dbo:starring ?actor .
  
  OPTIONAL {
    ?actor dbo:birthPlace ?birthPlace .
  }
}
```",3,4,4,3,1,3,3,71,0,0,40,0,0.0,0
417,10,train,Give me the child of Alexandrine of Mecklenburg-Schwerin and spouse of Princess Caroline-Mathilde of Denmark.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/spouse> <http://dbpedia.org/resource/Princess_Caroline-Mathilde_of_Denmark> . ?result <http://dbpedia.org/ontology/parent> <http://dbpedia.org/resource/Alexandrine_of_Mecklenburg-Schwerin> . },"```sparql
SELECT ?child ?spouse WHERE {
  ?alexandrine dbo:spouse dbr:Frederick_I_of_Mecklenburg-Schwerin ;
                dbo:child ?child .
  FILTER (str(?alexandrine) = ""Alexandrine of Mecklenburg-Schwerin"") .

  OPTIONAL { 
    ?child dbo:spouse ?spouse .
    FILTER (str(?spouse) = ""Princess Caroline-Mathilde of Denmark"")
  }
}
```",2,2,3,1,2,3,3,71,0,0,1,0,0.0,0
965,14,train,"Give me the parent of the person born, that is a noble, as Prince George of Battenberg.","SELECT ?result WHERE { ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Noble>. ?v0 <http://dbpedia.org/ontology/parent> ?result . ?v0 <http://dbpedia.org/property/birthName> ""Prince George of Battenberg""@en . }","```sparql
SELECT ?parent WHERE {
  wd:Q123456 wdt:P31 wd:Q5; # Prince George of Battenberg is an instance of human
  wdt:P22 ?parent.        # has parent

  OPTIONAL { 
    ?parent wdt:P106 wd:Q82955 . # has occupation as noble
  }
  
  FILTER EXISTS {
    ?parent wdt:P31 wd:Q5 . # parent is a human
  }
}
```

Note: Replace `wd:Q123456` with the actual DBpedia identifier for Prince George of Battenberg.",2,3,3,2,1,3,3,71,0,0,2,0,0.0,0
892,29,train,Give me the entity in Province of Reggio Emilia and landmark at elevation of the award of Anna Ishii and entity in Italy.,SELECT ?result WHERE { <http://dbpedia.org/resource/Anna_Ishii> <http://dbpedia.org/property/awards> ?v3 . ?result <http://dbpedia.org/ontology/province> <http://dbpedia.org/resource/Province_of_Reggio_Emilia> . ?result <http://dbpedia.org/ontology/elevation> ?v3 . ?result <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Italy> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT DISTINCT ?entityInReggioEmilia ?landmarkAtElevation ?entityInItaly
WHERE {
  # Find entities in Province of Reggio Emilia
  ?entityInReggioEmilia dbo:location dbr:Province_of_Reggio_Emilia .
  
  # Find the elevation associated with an award received by Anna Ishii
  ?award dbo:recipient dbr:Anna_Ishii ;
         dbo:elevation ?elevation .

  # Find landmarks at this specific elevation
  ?landmarkAtElevation dbo:elevation ?elevation ;
                      a dbo:Lighthouse ;  # Assuming we are looking for lighthouses as landmarks

  # Ensure all entities are in Italy
  ?entityInReggioEmilia dbo:country dbr:Italy .
  ?landmarkAtElevation dbo:country dbr:Italy .

  # Find any other entity in Italy
  ?entityInItaly dbo:country dbr:Italy .
}
```",4,4,5,2,3,3,3,71,0,0,1,0,0.0,0
445,20,train,Give me the entity in England and death place of the awardee of Royal Astronomical Society.,SELECT ?result WHERE { ?v2 <http://dbpedia.org/ontology/deathPlace> ?result . ?result <http://dbpedia.org/ontology/location> <http://dbpedia.org/resource/England> . ?v2 <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/Royal_Astronomical_Society> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?person ?deathPlace WHERE {
  ?person dbo:awardReceivedBy dbr:Royal_Astronomical_Society .
  ?person dbo:birthPlace dbr:England .
  OPTIONAL { ?person dbo:deathPlace ?deathPlace . }
}
```",3,3,4,2,2,3,3,71,0,0,1,0,0.0,0
965,4,train,Give me the spouse of Princess Victoria of Hesse and by Rhine.,SELECT ?result WHERE { <http://dbpedia.org/resource/Princess_Victoria_of_Hesse_and_by_Rhine> <http://dbpedia.org/ontology/spouse> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?spouse WHERE {
  dbr:Princess_Victoria_of_Hesse_and_by_Rhine dbo:spouse ?spouse .
}
```",1,1,2,1,1,3,3,71,1,0,0,1.0,1.0,1.0
445,12,train,Give me the entity in United Kingdom and death place of Patrick Moore.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/United_Kingdom> . <http://dbpedia.org/resource/Patrick_Moore> <http://dbpedia.org/ontology/deathPlace> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?birthPlaceLabel ?deathPlaceLabel WHERE {
  VALUES ?person { dbr:Patrick_Moore }
  
  OPTIONAL {
    ?person dbo:birthPlace ?birthPlace .
    SERVICE wikibase:label { bd:serviceParam wikibase:language ""[AUTO_LANGUAGE],en"". }
  }

  OPTIONAL {
    ?person dbo:deathPlace ?deathPlace .
    SERVICE wikibase:label { bd:serviceParam wikibase:language ""[AUTO_LANGUAGE],en"". }
  }
}
```",2,2,3,1,2,3,3,71,0,0,2,0,0.0,0
573,8,train,"Who is the author, that is a politician and an office holder, of Exchequer Standards?",SELECT ?result WHERE { ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. <http://dbpedia.org/resource/Exchequer_Standards> <http://dbpedia.org/property/author> ?result . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?author WHERE {
  ?work dbo:title ""Exchequer Standards""@en .
  ?work dbo:author ?author .

  ?author a dbo:Politician ;
          dbo:officeHolder ?true .

  FILTER EXISTS { ?author dbo:occupation dbo:Politician }
}
```",1,3,2,1,1,3,3,71,0,0,1,0,0.0,0
47,29,train,Give me the office of Ajoy Mukherjee and office of Suvendu Adhikari and office of the awardee of Banga Bhushan.,SELECT ?result WHERE { <http://dbpedia.org/resource/Suvendu_Adhikari> <http://dbpedia.org/property/office> ?result . ?v3 <http://dbpedia.org/property/office> ?result . ?v3 <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/Banga_Bhushan> . <http://dbpedia.org/resource/Ajoy_Mukherjee> <http://dbpedia.org/property/office> ?result . },"```sparql
SELECT ?person ?name ?office WHERE {
  # Ajoy Mukherjee's office
  VALUES ?person { dbr:Ajoy_Mukherjee }
  OPTIONAL { ?person dbo:office ?officeMukherjee . }
  
  # Suvendu Adhikari's office
  VALUES ?person2 { dbr:Suvendu_Adhikari }
  OPTIONAL { ?person2 dbo:office ?officeAdhikari . }

  # Banga Bhushan Awardee's office
  SELECT DISTINCT ?awardee WHERE {
    ?award dbo:recipient ?awardee .
    FILTER (?award = dbr:Banga_Bhushan)
  }
  OPTIONAL { ?awardee dbo:office ?officeAwardee . }

  # Bind names for clarity in results
  BIND (IF(BOUND(?person), ?person, ?person2) AS ?individual)
  BIND (IF(BOUND(?person), ?nameMukherjee, ?nameAdhikari) AS ?name)
  BIND (IF(BOUND(?person), ?officeMukherjee, IF(BOUND(?person2), ?officeAdhikari, ?officeAwardee)) AS ?office)

  # Names for Ajoy Mukherjee and Suvendu Adhikari
  OPTIONAL { ?person rdfs:label ?nameMukherjee FILTER (LANG(?nameMukherjee) = ""en"") }
  OPTIONAL { ?person2 rdfs:label ?nameAdhikari FILTER (LANG(?nameAdhikari) = ""en"") }

  # Name for Banga Bhushan Awardee
  OPTIONAL { ?awardee rdfs:label ?nameAwardee FILTER (LANG(?nameAwardee) = ""en"") }
}
```",4,4,5,2,3,3,3,71,0,0,1,0,0.0,0
917,0,train,Give me the parent of Albert Kamehameha.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Albert_Kamehameha> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>

SELECT ?parent WHERE {
  ?person dbo:child ?albert .
  FILTER (str(?albert) = ""Albert Kamehameha"")
  ?person a dbo:Person .
  ?person dbo:parent ?parent .
}
```",1,1,2,1,1,3,3,71,0,0,2,0,0.0,0
216,23,train,"Give me the player in the coach of the reference, that is an organisation and a soccer club, to Croatia U21.","SELECT ?result WHERE { ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerClub>. ?v2 <http://xmlns.com/foaf/0.1/name> ""Croatia U21""@en . ?v0 <http://dbpedia.org/ontology/team> ?result . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?v2 <http://dbpedia.org/ontology/coach> ?v0 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?playerInCoach WHERE {
  ?club a dbo:SoccerClub ;
        dbo:organization ?org .
  ?org rdf:type dbo:Organization .
  ?croatiaU21 dbp:coach ?playerInCoach .
  FILTER (str(?croatiaU21) = ""Croatia national under-21 football team"")
}
```",3,5,4,3,1,3,3,71,0,0,6,0,0.0,0
865,36,train,Give me the native of British Raj and father of the child of the father of Abul Maal Abdul Muhith.,SELECT ?result WHERE { ?v1 <http://dbpedia.org/property/father> ?result . ?result <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/British_Raj> . ?v1 <http://dbpedia.org/property/father> ?v3 . <http://dbpedia.org/resource/Abul_Maal_Abdul_Muhith> <http://dbpedia.org/property/father> ?v3 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?father WHERE {
  ?person dbr:Abul_Maal_Abdul_Muhith .
  ?person dbo:father ?father .
  
  OPTIONAL { 
    ?father dbo:nationality dbr:British_Raj . 
  }
}
```",4,4,5,3,2,3,3,71,0,0,1,0,0.0,0
507,7,train,Who is the person born on 1966-02-18?,"SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/birthDate> ""1966-02-18""^^<http://www.w3.org/2001/XMLSchema#date> . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT ?person ?name WHERE {
  ?person a dbo:Person .
  ?person dbo:birthDate ?date .
  FILTER (YEAR(?date) = 1966 && MONTH(?date) = 2 && DAY(?date) = 18)
  OPTIONAL { ?person foaf:name ?name }
}
ORDER BY ?name
```",1,1,2,1,1,3,3,71,21,23,0,0.4772727272727273,1.0,0.6461538461538462
645,4,train,Give me the force of Carlos Asensio Cabanillas.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Carlos_Asensio_Cabanillas> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?property ?value
WHERE {
  VALUES ?person { dbr:Caballero_de_la_Soledad }
  ?person ?property ?value .
  FILTER (
    ?property IN (dbo:occupation, dbo:notableWork, dbo:wikiPageWikiLink)
  )
}
```",1,1,2,1,1,3,3,71,0,0,9,0,0.0,0
976,35,train,"Give me the office of the leader, that is a politician, of Grand National Assembly of Turkey and office of the person born as Mehmet Naci Bostancı.","SELECT ?result WHERE { ?v0 <http://dbpedia.org/property/birthName> ""Mehmet Naci Bostancı""@en . <http://dbpedia.org/resource/Grand_National_Assembly_of_Turkey> <http://dbpedia.org/ontology/leader> ?v1 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v1 <http://dbpedia.org/property/office> ?result . ?v0 <http://dbpedia.org/property/office> ?result . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?office1 ?office2 WHERE {
  # Office of the leader of the Grand National Assembly of Turkey
  OPTIONAL { 
    dbr:Speaker_of_the_Grand_National_Assembly_of_Turkey dbo:positionHeld ?leader .
    ?leader dbo:office ?office1 .
  }

  # Office of Mehmet Naci Bostancı
  OPTIONAL {
    dbr:Mehmet_Naci_Bostancı dbo:occupation ?occupation .
    ?occupation dbo:office ?office2 .
  }
}
```",4,5,5,2,2,3,3,71,0,0,1,0,0.0,0
645,16,train,"Give me the force, that is an event and a military conflict and a societal event, of the native, that is a president and a politician, of Restoration (Spain).",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/commander> ?v1 . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/President>. ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?v1 <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Restoration_(Spain)> . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?force WHERE {
  # Identify the Restoration period in Spain
  ?restoration dbo:wikiPageRedirects dbr:Spanish_Restoration.

  # Find a president/politician from this period
  ?person dbo:nationality dbr:Spain ;
          (dbo:presidentOf|dbo:primeMinister) ?country ;
          dbo:birthPlace ?place .

  FILTER EXISTS { ?restoration dbo:relatedTo ?person }

  # Identify the force/event that is a military conflict and societal event
  ?force dbo:type dbr:Military_conflict ;
         dbo:societal_event true ;
         dbo:relatedTo ?person .
}
```",2,7,3,2,1,3,3,71,0,0,1,0,0.0,0
442,1,train,Give me the resting place of Fay Bainter.,SELECT ?result WHERE { <http://dbpedia.org/resource/Fay_Bainter> <http://dbpedia.org/ontology/restingPlace> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?burialPlace WHERE {
  ?person rdfs:label ""Fay Bainter""@en .
  ?person dbo:deathPlace ?burialPlace .
  FILTER (lang(?person) = 'en')
}
```",1,1,2,1,1,2,2,9,0,0,1,0,0.0,0
158,14,train,"Give me the party of the successor, that is a prime minister and an office holder and a politician, of the person deceased, that is an office holder and a politician, on 1945-09-15.","SELECT ?result WHERE { ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v2 <http://dbpedia.org/ontology/successor> ?v0 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v2 <http://dbpedia.org/ontology/deathDate> ""1945-09-15""^^<http://www.w3.org/2001/XMLSchema#date> . ?v0 <http://dbpedia.org/ontology/party> ?result . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/PrimeMinister>. }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?successorParty WHERE {
  ?deceased a dbo:Politician ;
            dbo:deathDate ""1945-09-15""^^xsd:date ;
            dbo:officeHolder true .
  
  ?deceased dbo:successor ?successor .

  ?successor a dbo:PrimeMinister, dbo:OfficeHolder, dbo:Politician ;
             dbo:partyAffiliation ?successorParty .
}
```",3,8,4,3,1,3,2,20,0,0,1,0,0.0,0
645,26,train,"Give me the military force of the force, that is an event and a military conflict and a societal event, of the native, that is a president and a politician, of Restoration (Spain).",SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Restoration_(Spain)> . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?result <http://dbpedia.org/ontology/battle> ?v2 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/President>. ?v2 <http://dbpedia.org/ontology/commander> ?v1 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?militaryForce WHERE {
  ?event a dbo:MilitaryConflict ;
        dbo:society dbr:Spain ;
        dbo:dateStart ?dateStart .
  
  FILTER(?dateStart >= ""1872-01-01""^^xsd:date && ?dateStart <= ""1876-12-31""^^xsd:date) .

  ?event dbo:participatingMilitaryForce ?militaryForce .
  
  OPTIONAL {
    ?politicalFigure dbo:nationality dbr:Spain ;
                     a dbo:Politician, dbo:President ;
                     dbo:associatedWith ?event .
  }
}
```",3,8,4,3,1,3,3,71,0,0,514,0,0.0,0
365,5,train,"Give me the native, that is a politician, of Poltava Governorate.",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Poltava_Governorate> . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?person ?name WHERE {
  ?person dbo:nativePlace dbr:Poltava_Governorate ;
          dbo:occupation ?occupation .
  FILTER (CONTAINS(LCASE(str(?occupation)), ""politician"") || CONTAINS(LCASE(str(?occupation)), ""politik""))
  SERVICE wikibase:label { bd:serviceParam wikibase:language ""[AUTO_LANGUAGE],en"". }
}
```",1,2,2,1,1,3,2,20,0,0,11,0,0.0,0
443,9,train,Give me the birthplace of Carl Larsson and birthplace of Ulf Lundell.,SELECT ?result WHERE { <http://dbpedia.org/resource/Carl_Larsson> <http://dbpedia.org/ontology/birthPlace> ?result . <http://dbpedia.org/resource/Ulf_Lundell> <http://dbpedia.org/ontology/birthPlace> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT ?person ?name ?birthPlace WHERE {
  VALUES (?name) { (""Carl Larsson"" ""Ulf Lundell"") }
  
  ?person foaf:name ?name .
  OPTIONAL { ?person dbo:birthPlace ?birthPlace . }
}
```",2,2,3,1,2,2,3,28,0,0,1,0,0.0,0
976,13,train,"Give me the office of the mayor, that is a politician and an office holder and Turkish, of Nation Alliance (Turkey).",SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/nationality> <http://dbpedia.org/resource/Turkey>. ?v1 <http://dbpedia.org/property/office> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. <http://dbpedia.org/resource/Nation_Alliance_(Turkey)> <http://dbpedia.org/property/leader> ?v1 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?mayor ?officeLabel WHERE {
  ?mayor dbo:office dbr:Municipality_of_Turkey_mayors .
  ?mayor foaf:nationality dbr:Turkey .
  ?mayor dbp:politicalParty dbr:Nation_Alliance_(Turkey) .
  ?mayor rdf:type dbo:Politician .
  ?mayor rdf:type dbo:OfficeHolder .
  
  OPTIONAL { ?mayor rdfs:label ?officeLabel . FILTER (lang(?officeLabel) = 'en') }
}
```",2,5,3,2,1,3,3,71,0,0,3,0,0.0,0
443,14,train,"Give me the birthplace of the person born, that is a musical artist and an artist, on 1949-11-20 and landmark at elevation of 28.","SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?result <http://dbpedia.org/ontology/elevation> ""28""^^<http://www.w3.org/2001/XMLSchema#integer> . ?v1 <http://dbpedia.org/ontology/birthDate> ""1949-11-20""^^<http://www.w3.org/2001/XMLSchema#date> . ?v1 <http://dbpedia.org/ontology/birthPlace> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?birthPlaceLabel WHERE {
  ?person dbo:birthDate ""1949-11-20""^^xsd:date ;
          dbo:occupation dbr_Musician ;
          dbo:occupation dbr_Artist .
  ?person dbo:birthPlace ?birthPlace .
  ?landmark dbo:elevation ""28""^^xsd:decimal ;
            dbo:location ?birthPlace .
  SERVICE wikibase:label { bd:serviceParam wikibase:language ""[AUTO_LANGUAGE],en"". }
}
```",3,5,4,2,2,2,3,28,0,0,1,0,0.0,0
791,19,train,"Give me the predecessor of Emperor Antoku and spouse of the spouse, that is a royalty, of Emperor Takakura.",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/spouse> ?v0 . ?result <http://dbpedia.org/ontology/successor> <http://dbpedia.org/resource/Emperor_Antoku> . ?v0 <http://dbpedia.org/ontology/spouse> <http://dbpedia.org/resource/Emperor_Takakura> . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?predecessor ?spouseOfSpouse WHERE {
  # Find Emperor Antoku's predecessor
  ?antoku dbo:succession dbr:Emperor_Antoku .
  ?antoku dbo:predecessor ?predecessor .

  # Find Emperor Takakura's spouse
  ?takakura dbo:spouse ?spouseTakakura .
  FILTER(?takakura = dbr:Emperor_Takakura) .

  # Find the spouse of Emperor Takakura's spouse, ensuring they are royalty
  ?spouseTakakura dbo:spouse ?spouseOfSpouse .
  ?spouseOfSpouse a dbo:Monarch .
}
```",3,4,4,2,2,3,3,71,0,0,1,0,0.0,0
933,27,train,"Give me the band of the band, that is a group and a band and an organisation, of the person born, that is a musical artist, on 1947-04-21.","SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?v1 <http://dbpedia.org/ontology/birthDate> ""1947-04-21""^^<http://www.w3.org/2001/XMLSchema#date> . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Group>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?v0 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Band>. ?v1 <http://dbpedia.org/ontology/associatedMusicalArtist> ?v0 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>

SELECT ?band WHERE {
  ?person dbo:birthDate ""1947-04-21""^^xsd:date .
  ?person rdf:type dbo:MusicalArtist .
  ?person dbo:memberOfBand ?band .
  ?band rdf:type dbo:Band ;
        rdf:type dbo:MusicalGroup ;
        rdf:type dbo:Organization .
}
```",3,7,4,3,1,3,3,71,0,0,4,0,0.0,0
865,15,train,"Give me the residence, that is a country, of the person decedent at Patna.",SELECT ?result WHERE { ?v0 <http://dbpedia.org/ontology/deathPlace> <http://dbpedia.org/resource/Patna> . ?v0 <http://dbpedia.org/property/residence> ?result . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?person ?countryOfResidence WHERE {
  ?person dbo:deathPlace dbr:Patna .
  ?person dbo:countryOfResidence ?countryOfResidence .
}
```",2,3,3,2,1,3,3,71,0,0,1,0,0.0,0
122,6,train,"Give me the band of the reference, that is a musical artist and an artist, to Gift of Gab.","SELECT ?result WHERE { ?v0 <http://xmlns.com/foaf/0.1/name> ""Gift of Gab""@en . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?v0 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?band WHERE {
  dbr:Gift_of_Gab dbo:musicalArtist ?band .
  ?band a dbo:MusicalBand ;
        a dbo:Artist .
}
```",2,4,3,2,1,2,2,9,0,0,4,0,0.0,0
18,15,train,"Give me the alumnus of Marymount College, Tarrytown and professional in the award of Ana María Sánchez de Ríos.","SELECT ?result WHERE { ?result <http://dbpedia.org/property/occupation> ?v0 . ?result <http://dbpedia.org/ontology/almaMater> <http://dbpedia.org/resource/Marymount_College,_Tarrytown> . <http://dbpedia.org/resource/Ana_María_Sánchez_de_Ríos> <http://dbpedia.org/property/awards> ?v0 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?alumnus WHERE {
  ?alumnus dbo:almaMater dbr:Marymount_College,_Tarrytown .
  
  OPTIONAL {
    ?award dbo:name ""Ana María Sánchez de Ríos Award""@en ;
           dbo:recipient ?alumnus .
  }
}
```",3,3,4,2,2,2,3,28,0,0,1,0,0.0,0
456,7,train,Give me the band of Alan Doyle.,SELECT ?result WHERE { <http://dbpedia.org/resource/Alan_Doyle> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . },"```sparql
SELECT ?band WHERE {
  dbpedia:Alan_Doyle dbo:memberOf ?band .
}
```",1,1,2,1,1,3,3,71,0,0,3,0,0.0,0
965,10,train,"Give me the parent of George Mountbatten, 2nd Marquess of Milford Haven and spouse of Prince Louis of Battenberg.","SELECT ?result WHERE { <http://dbpedia.org/resource/George_Mountbatten,_2nd_Marquess_of_Milford_Haven> <http://dbpedia.org/ontology/parent> ?result . ?result <http://dbpedia.org/ontology/spouse> <http://dbpedia.org/resource/Prince_Louis_of_Battenberg> . }","```sparql
SELECT ?father WHERE {
  ?george a dbo:Marquess ;
          foaf:name ""George Mountbatten, 2nd Marquess of Milford Haven""@en .
  ?george dbo:spouse ?louis .
  ?louis foaf:name ""Prince Louis of Battenberg""@en .
  ?george dbo:parent ?father .
}
```",2,2,3,1,2,3,3,71,0,0,1,0,0.0,0
136,1,train,Give me the landmark at elevation of 5.,"SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/elevation> ""5""^^<http://www.w3.org/2001/XMLSchema#integer> . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?landmark WHERE {
    ?landmark a dbo:Lighthouse ; # Assuming 'Lighthouse' as an example class for landmarks; this can be adjusted based on available classes.
               dbo:elevation ""5""^^xsd:decimal .
}
```",1,1,2,1,1,2,2,9,0,0,909,0,0.0,0
645,19,train,Give me the military force of Spanish Civil War and commander in the force of Carlos Asensio Cabanillas.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/battle> <http://dbpedia.org/resource/Spanish_Civil_War> . ?v0 <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Carlos_Asensio_Cabanillas> . ?v0 <http://dbpedia.org/ontology/commander> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?militaryForce ?commander WHERE {
  # Find Carlos Asensio Cabanillas and his associated military role
  dbr:Carlos_Asensio_Cabanillas dbo:militaryService [
    a dbo:MilitaryUnit ;
    dbo:commandedBy ?commander .
  ] .

  # Retrieve the military force he was part of during the Spanish Civil War
  OPTIONAL {
    ?militaryForce dbo:member ?asensioCabanillasRole .
    ?asensioCabanillasRole dbo:position ""General""@en .
    ?asensioCabanillasRole dbo:militaryService dbr:Carlos_Asensio_Cabanillas .
  }
}
```",3,3,4,2,2,3,3,71,0,0,23,0,0.0,0
93,4,train,"Who is the native, that is a politician, of Seattle?",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Seattle> . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?person ?name WHERE {
  ?person a dbo:Person .
  ?person dbo:birthPlace dbr:Seattle .
  ?person dbo:occupation ?occupation .
  FILTER(CONTAINS(LCASE(str(?occupation)), ""politician""))
  OPTIONAL { ?person foaf:name ?name }
}
ORDER BY ?name
```",1,2,2,1,1,3,2,20,1,1,113,0.5,0.008771929824561403,0.017241379310344827
456,34,train,"Give me the band of Alan Doyle and spouse of the actor of the movie, that is a work and a television show, with Ross Newton.",SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/spouse> ?result . <http://dbpedia.org/resource/Alan_Doyle> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v2 <http://dbpedia.org/property/starring> ?v1 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/TelevisionShow>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?v2 <http://dbpedia.org/property/starring> <http://dbpedia.org/resource/Ross_Newton> . },"```sparql
# Query to get Alan Doyle's band
SELECT ?band WHERE {
  ?person dbo:memberOfBand ?band .
  ?person foaf:name ""Alan Doyle""@en .
}

# Query to find Ross Newton's spouse (assuming the actor is Ross Newton)
SELECT ?spouse WHERE {
  ?actor dbo:spouse ?spouse .
  ?actor foaf:name ""Ross Newton""@en .
}
```",4,6,5,3,2,3,3,71,0,0,1,0,0.0,0
124,5,train,Who is the awardee of British South Africa Company Medal?,SELECT ?result WHERE { ?result <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/British_South_Africa_Company_Medal> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?recipient WHERE {
  ?medal a dbo:Award .
  ?medal rdfs:label ""British South Africa Company Medal""@en .
  OPTIONAL { ?medal dbo:recipient ?recipient . }
}
```",1,1,2,1,1,3,3,71,0,0,5,0,0.0,0
102,0,train,Give me the manager of Sheffield United W.F.C..,SELECT ?result WHERE { <http://dbpedia.org/resource/Sheffield_United_W.F.C.> <http://dbpedia.org/ontology/manager> ?result . },"```sparql
PREFIX dbp: <http://dbpedia.org/property/>
PREFIX dbo: <http://dbpedia.org/ontology/>

SELECT ?manager WHERE {
  ?team dbp:name ""Sheffield United W.F.C.""@en .
  ?team dbp:manager ?manager .
}
```",1,1,2,1,1,3,2,20,0,0,1,0,0.0,0
456,9,train,Give me the professional in  and spouse of Danielle Spencer (Australian actress).,"SELECT ?result WHERE { ?result <http://dbpedia.org/property/occupation> """"@en . <http://dbpedia.org/resource/Danielle_Spencer_(Australian_actress)> <http://dbpedia.org/ontology/spouse> ?result . }","```sparql
SELECT ?profession ?spouse WHERE {
  ?person rdfs:label ""Danielle Spencer (Australian actress)""@en .
  OPTIONAL { ?person dbo:profession ?profession . }
  OPTIONAL { ?person dbp:spouse ?spouse . }
}
```",2,2,3,1,2,3,3,71,1,4,0,0.2,1.0,0.33333333333333337
192,2,train,Give me the child of Charles II of Naples.,SELECT ?result WHERE { ?result <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Charles_II_of_Naples> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?child WHERE {
  ?parent dbo:spouse ?spouse .
  FILTER (str(?parent) = ""Charles II of Naples""^^xsd:string)
  ?parent dbo:child ?child .
}
```",1,1,2,1,1,3,2,20,0,0,2,0,0.0,0
582,30,train,Give me the reference to Japan and figure known as the nickname of Japan national football team and player in Kazuaki Nagasawa.,"SELECT ?result WHERE { ?result <http://xmlns.com/foaf/0.1/name> ""Japan""@en . <http://dbpedia.org/resource/Japan_national_football_team> <http://dbpedia.org/property/nickname> ?v1 . ?result <http://dbpedia.org/property/nickname> ?v1 . <http://dbpedia.org/resource/Kazuaki_Nagasawa> <http://dbpedia.org/ontology/team> ?result . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?nickname WHERE {
  ?team dbo:name ""Japan national football team""@en .
  ?team dbp:nickname ?nickname .
  
  OPTIONAL {
    ?player dbo:birthName ""Kazuaki Nagasawa""@en ;
            dbo:member ?team .
  }
}
```",4,4,5,2,3,3,3,71,0,0,1,0,0.0,0
433,7,train,Give me the writer of Slowhand at 70 – Live at the Royal Albert Hall.,SELECT ?result WHERE { <http://dbpedia.org/resource/Slowhand_at_70_–_Live_at_the_Royal_Albert_Hall> <http://dbpedia.org/property/writer> ?result . },"```sparql
SELECT ?writer WHERE {
  wd:Q1116 dbo:album ""Slowhand at 70 – Live at the Royal Albert Hall""@en .
  wd:Q1116 dbo:artist ?artist .
  ?artist foaf:name ""Eric Clapton""@en .
  ?artist dbo:occupation ?occupation .
  FILTER(?occupation IN (dbo:Singer, dbo:Songwriter))
}
```",1,1,2,1,1,3,3,71,0,0,30,0,0.0,0
36,8,train,"Give me the actor of the claim to fame, that is a film, of Lepacious Bose.",SELECT ?result WHERE { <http://dbpedia.org/resource/Lepacious_Bose> <http://dbpedia.org/ontology/knownFor> ?v1 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Film>. ?v1 <http://dbpedia.org/ontology/starring> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?actor WHERE {
  ?film dbo:title ""Chhinnamul""@en .
  ?film dbo:starring ?actor .
}
```",2,3,3,2,1,2,3,28,0,0,6,0,0.0,0
926,4,train,Give me the father of Abdulaziz.,SELECT ?result WHERE { <http://dbpedia.org/resource/Abdulaziz> <http://dbpedia.org/property/father> ?result . },"```sparql
SELECT ?father WHERE {
  dbpedia:Abdulaziz_Ibn_Saud dbo:father ?father .
}
```",1,1,2,1,1,3,3,71,0,0,1,0,0.0,0
791,20,train,Give me the predecessor of the child of Emperor Takakura and spouse of Taira no Tokuko.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/successor> ?v2 . ?v2 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Emperor_Takakura> . ?result <http://dbpedia.org/ontology/spouse> <http://dbpedia.org/resource/Taira_no_Tokuko> . },"```sparql
SELECT ?predecessor WHERE {
  wd:Q1234567 wdt:P31 wd:Q11840; # Antoku as a person and emperor
  wdt:P35 wd:Q1234567. # Antoku's predecessor is Emperor Takakura

  OPTIONAL { 
    ?predecessor wdt:P39 wd:Q11840; # Predecessor as an emperor
                 rdfs:label ?label .
    FILTER (lang(?label) = ""en"")
  }
}
```

Note: In the above SPARQL query, `wd:Q1234567` should be replaced with the actual DBpedia resource identifier for Emperor Antoku. The property `P39` is used to find predecessors in a sequence of roles or positions.",3,3,4,2,2,3,3,71,0,0,1,0,0.0,0
443,16,train,Give me the landmark at elevation of 28 and birthplace of the work of yes.,"SELECT ?result WHERE { ?v2 <http://dbpedia.org/ontology/birthPlace> ?result . ?v2 <http://dbpedia.org/property/author> ""yes""@en . ?result <http://dbpedia.org/ontology/elevation> ""28""^^<http://www.w3.org/2001/XMLSchema#integer> . }","```sparql
# Query for landmark at elevation of 28
SELECT ?landmark WHERE {
  ?landmark dbo:elevation ""28""^^xsd:integer .
  ?landmark rdf:type dbo:Landmark .
}

UNION

# Query for birthplace of a member of the band Yes
SELECT ?person ?birthPlace WHERE {
  ?band dbo:member ?person ;
        rdfs:label ""Yes""@en .
  ?person dbo:birthPlace ?birthPlace .
}
```",3,3,4,2,2,2,3,28,0,0,2,0,0.0,0
47,19,train,Give me the office of Bidesh Ranjan Bose and office of the administration of Jagdeep Dhankhar.,SELECT ?result WHERE { <http://dbpedia.org/resource/Bidesh_Ranjan_Bose> <http://dbpedia.org/property/office> ?result . ?v0 <http://dbpedia.org/property/office> ?result . ?v0 <http://dbpedia.org/property/governor> <http://dbpedia.org/resource/Jagdeep_Dhankhar> . },"```sparql
# Query for Bidesh Ranjan Bose's office
SELECT ?office WHERE {
  ?person foaf:name ""Bidesh Ranjan Bose""@en .
  OPTIONAL { ?person dbo:position ?office . }
}

UNION

# Query for Jagdeep Dhankhar's office
SELECT ?office WHERE {
  ?person foaf:name ""Jagdeep Dhankhar""@en .
  OPTIONAL { ?person dbo:position ?office . }
}
```",3,3,4,2,2,3,3,71,0,0,1,0,0.0,0
442,4,train,Give me the resting place of Fay Bainter and resting place of Allyn K. Capron.,SELECT ?result WHERE { <http://dbpedia.org/resource/Allyn_K._Capron> <http://dbpedia.org/ontology/restingPlace> ?result . <http://dbpedia.org/resource/Fay_Bainter> <http://dbpedia.org/ontology/restingPlace> ?result . },"```sparql
# Query for Fay Bainter's resting place
SELECT ?restingPlace WHERE {
  wd:Q123456 dbo:deathPlace ?restingPlace .
}

UNION

# Query for Allyn K. Capron's resting place
SELECT ?restingPlace WHERE {
  wd:Q789012 dbo:deathPlace ?restingPlace .
}
```

Note: Replace `wd:Q123456` with the actual DBpedia URI for Fay Bainter and `wd:Q789012` with the URI for Allyn K. Capron.",2,2,3,1,2,2,2,9,0,0,1,0,0.0,0
888,0,train,Give me the commander in Southern Ukraine campaign.,SELECT ?result WHERE { <http://dbpedia.org/resource/Southern_Ukraine_campaign> <http://dbpedia.org/ontology/commander> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?commander ?name WHERE {
  ?campaign dbo:location dbr:Crimea .
  ?campaign dbo:eventCategory dbr:Military_campaigns_of_World_War_II .
  ?campaign dbo:commander ?commander .
  ?commander rdfs:label ?name .
  FILTER (LANG(?name) = 'en')
}
ORDER BY ?name
```",1,1,2,1,1,3,2,20,0,0,13,0,0.0,0
645,9,train,Give me the military force of Spanish Civil War and commander in Battle of Jarama.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/battle> <http://dbpedia.org/resource/Spanish_Civil_War> . <http://dbpedia.org/resource/Battle_of_Jarama> <http://dbpedia.org/ontology/commander> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?militaryForce ?commander WHERE {
  # Retrieve military forces involved in the Spanish Civil War
  ?militaryForce a dbo:MilitaryUnit ;
                 dbo:partOfMilitaryConflict dbr:Spanish_Civil_War .

  OPTIONAL {
    # Find commanders associated with the Battle of Jarama
    ?battle dbr:Battle_of_Jarama ;
           dbo:commander ?commander .
    
    FILTER(?militaryForce IN (?battle))
  }
}
```",2,2,3,1,2,3,3,71,0,0,6,0,0.0,0
192,5,train,Give me the child of Stephen V of Hungary.,SELECT ?result WHERE { ?result <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Stephen_V_of_Hungary> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?child ?childLabel WHERE {
  VALUES ?stephenV { dbr:Stephen_V_of_Hungary }
  ?stephenV dbo:child ?child .
  SERVICE wikibase:label { bd:serviceParam wikibase:language ""[AUTO_LANGUAGE],en"". }
}
```",1,1,2,1,1,3,2,20,0,0,5,0,0.0,0
582,26,train,"Give me the player in the father, that is an athlete and a soccer manager and a sports manager, of the child of Kazuaki Nagasawa.",SELECT ?result WHERE { ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Athlete>. ?v1 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Kazuaki_Nagasawa> . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsManager>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerManager>. ?v2 <http://dbpedia.org/ontology/team> ?result . ?v1 <http://dbpedia.org/property/father> ?v2 . },"```sparql
SELECT ?father WHERE {
  # Find Kazuaki Nagasawa
  ?kazuaki a dbo:Person ;
           foaf:name ""Kazuaki Nagasawa""@en .
  
  # Identify his child
  ?child dbo:parent ?kazuaki .

  # Confirm the father of this child is Kazuaki Nagasawa
  ?father dbo:spouse ?mother ;
          dbo:child ?child .

  # Check if this person has roles as athlete, soccer manager, and sports manager
  ?father a dbo:Athlete ;
          a dbo:SoccerManager ;
          a dbo:SportsManager .
}
```",3,6,4,3,1,3,3,71,0,0,4,0,0.0,0
83,11,train,"Give me the party of Alceu Collares and ruling party in the birthplace, that is a town and Brazilian and a soccer club, of Sandro (footballer, born October 1983).","SELECT ?result WHERE { ?v2 <http://dbpedia.org/property/leaderParty> ?result . ?v2 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Brazil>. <http://dbpedia.org/resource/Alceu_Collares> <http://dbpedia.org/ontology/party> ?result . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Town>. <http://dbpedia.org/resource/Sandro_(footballer,_born_October_1983)> <http://dbpedia.org/ontology/birthPlace> ?v2 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerClub>. }","```sparql
# Query to get Sandro's birthplace
SELECT ?birthPlace WHERE {
  ?sandro dbo:birthDate ?date .
  ?sandro foaf:name ""Sandro"" .
  ?sandro dbo:birthPlace ?birthPlace .
  FILTER (YEAR(?date) = 1983 && MONTH(?date) = 10)
}

# Query to check if the birthplace is a town in Brazil with a soccer club
SELECT DISTINCT ?town WHERE {
  ?town rdf:type dbo:Town ;
        dbo:country dbr:Brazil ;
        dbo:sportTeam ?club .
  FILTER (STRSTARTS(STR(?birthPlace), STR(?town)))
}

# Query to get Alceu Collares' political party
SELECT ?party WHERE {
  ?alceu foaf:name ""Alceu Collares"" .
  ?alceu dbo:politicalParty ?party .
}

# Query to find the ruling party in Sandro's birthplace
SELECT DISTINCT ?rulingParty WHERE {
  ?town dbo:mayor ?mayor .
  FILTER (STRSTARTS(STR(?birthPlace), STR(?town)))
  ?mayor dbo:politicalAffiliation ?rulingParty .
}
```",3,6,4,2,2,3,2,20,0,0,1,0,0.0,0
573,13,train,"Give me the person decedent at the residence, that is a settlement, of William J. Phelan.",SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. ?result <http://dbpedia.org/ontology/deathPlace> ?v1 . <http://dbpedia.org/resource/William_J._Phelan> <http://dbpedia.org/property/residence> ?v1 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?decedent WHERE {
  # Find William J. Phelan's residence
  dbr:William_J._Phelan dbo:residence ?residence .
  
  # Ensure the residence is a settlement (e.g., city, town)
  ?residence rdf:type ?settlementType .
  FILTER (
    ?settlementType IN (
      dbr:City ,
      dbr:Town
    )
  )

  # Find persons who died at this location
  ?decedent dbo:deathPlace ?residence ;
           a dbo:Person .
}
```",2,3,3,2,1,3,3,71,0,0,40,0,0.0,0
83,7,train,"Give me the ruling party in the birthplace, that is a town and Brazilian and a soccer club, of Sandro (footballer, born October 1983).","SELECT ?result WHERE { <http://dbpedia.org/resource/Sandro_(footballer,_born_October_1983)> <http://dbpedia.org/ontology/birthPlace> ?v1 . ?v1 <http://dbpedia.org/property/leaderParty> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerClub>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Town>. ?v1 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Brazil>. }","```sparql
SELECT ?town ?rulingParty WHERE {
  # Step 1: Find Sandro's birthplace
  ?sandro dbo:birthPlace ?town .
  FILTER (str(?sandro) = ""Sandro_(footballer,_born_October_1983)"")

  # Step 2: Ensure the town is in Brazil and has a soccer club
  ?town dbo:country dbr:Brazil ;
        dbo:type dbr:Town ;
        dbo:sportTeam ?soccerClub .
  
  # Step 3: Find the ruling party of the town
  OPTIONAL { ?town dbo:government ?government . 
             ?government dbo:rulingParty ?rulingParty }
}
```",2,5,3,2,1,3,2,20,0,0,1,0,0.0,0
645,33,train,"Give me the military force of the force, that is an event and a military conflict and a societal event, of the native, that is a president and a politician, of Restoration (Spain) and commander in Battle of Jarama.",SELECT ?result WHERE { ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v3 <http://dbpedia.org/ontology/commander> ?v0 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. <http://dbpedia.org/resource/Battle_of_Jarama> <http://dbpedia.org/ontology/commander> ?result . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?result <http://dbpedia.org/ontology/battle> ?v3 . ?v0 <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Restoration_(Spain)> . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/President>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?militaryForce WHERE {
  # Identify Francisco Franco as a politician and military leader during the Restoration period and Battle of Jarama
  dbr:Francisco_Franco dbo:nationality dbr:Spain ;
                       dbo:occupation dbr:Politician ;
                       dbo:commanderOf dbr:Battle_of_Jarama .

  # Find the military force associated with Francisco Franco
  ?militaryForce dbo:leader dbr:Francisco_Franco .
  ?militaryForce a dbo:MilitaryConflict .
  ?militaryForce dbo:eventCategory dbr:Societal_event .
}
```",4,9,5,3,2,3,3,71,0,0,6,0,0.0,0
573,19,train,"Give me the person decedent at Quincy, Massachusetts and person decedent at the administration, that is a region, of Charlie Baker.","SELECT ?result WHERE { ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Region>. ?result <http://dbpedia.org/ontology/deathPlace> ?v0 . ?v0 <http://dbpedia.org/property/governor> ""Charlie Baker""@en . ?result <http://dbpedia.org/ontology/deathPlace> <http://dbpedia.org/resource/Quincy,_Massachusetts> . }","```sparql
# Query for person decedent at Quincy, Massachusetts
SELECT ?person WHERE {
  ?deathEvent dbo:place dbr:Quincy,_Massachusetts .
  ?deathEvent dbo:deceased ?person .
  FILTER (lang(?label) = 'en')
}

UNION

# Query for person associated with Charlie Baker's administration as a region
SELECT ?person WHERE {
  ?administration dbo:administrator dbr:Charlie_Baker .
  ?administration dbo:region ?region .
  ?region dbo:head ?person .
  FILTER (lang(?label) = 'en')
}
```",3,4,4,2,2,3,3,71,0,0,4,0,0.0,0
507,37,train,"Give me the professional in Film director, television director and director of the movie, that is a movie and a work, with the person born on 1919-06-17.","SELECT ?result WHERE { ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Film>. ?v3 <http://dbpedia.org/property/starring> ?v0 . ?v0 <http://dbpedia.org/ontology/birthDate> ""1919-06-17""^^<http://www.w3.org/2001/XMLSchema#date> . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?result <http://dbpedia.org/property/occupation> ""Film director, television director""@en . ?v3 <http://dbpedia.org/ontology/director> ?result . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?person ?film WHERE {
  ?person a dbo:FilmDirector ;
          dbo:birthDate ""1919-06-17""^^xsd:date ;
          dbo:works ?work .
  
  ?work a dbo:Film ;
        rdfs:label ?film .

  FILTER (lang(?film) = 'en')
}
```",4,6,5,3,2,3,3,71,0,0,1,0,0.0,0
98,12,train,Give me the birth place of Paolo Ballesteros and entity in Philippines and region of Philippine Standard Time.,SELECT ?result WHERE { <http://dbpedia.org/resource/Paolo_Ballesteros> <http://dbpedia.org/ontology/birthPlace> ?result . ?result <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Philippines> . ?result <http://dbpedia.org/ontology/timeZone> <http://dbpedia.org/resource/Philippine_Standard_Time> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?birthPlace ?entityInPhilippines ?regionOfPST WHERE {
  # Query for Paolo Ballesteros's birthplace
  dbr:Paolo_Ballesteros dbo:birthPlace ?birthPlace .

  # Query for an entity in the Philippines related to Paolo Ballesteros
  OPTIONAL { 
    ?entityInPhilippines dbo:country dbr:Philippines .
    FILTER(CONTAINS(LCASE(STR(?entityInPhilippines)), ""paolo ballesteros""))
  }

  # Query for regions using Philippine Standard Time
  ?regionOfPST dbo:timeZone dbr:Time_in_the_Philippines .
}
```",3,3,4,1,3,2,3,28,2,2,0,0.5,1.0,0.6666666666666666
433,22,train,Give me the associated musical artist of Paul Chambers and professional in the profession of Bob Marley.,SELECT ?result WHERE { ?result <http://dbpedia.org/property/occupation> ?v1 . <http://dbpedia.org/resource/Bob_Marley> <http://dbpedia.org/property/occupation> ?v1 . <http://dbpedia.org/resource/Paul_Chambers> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?artist WHERE {
  # Find artists associated with Paul Chambers
  ?association dbo:musicalArtist dbr:Paul_Chambers .
  ?association dbo:associatedBandOrMusicalArtist ?artist .

  # Ensure the artist is also a musician like Bob Marley
  ?artist dbo:profession dbr:Singer-songwriter ;
          dbo:genre dbr:Jazz OR dbo:genre dbr:Reggae .
}
```",3,3,4,2,2,3,3,71,0,0,16,0,0.0,0
216,15,train,"Give me the coach of the reference, that is an organisation and a soccer club, to Croatia U21.","SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerClub>. ?v1 <http://dbpedia.org/ontology/coach> ?result . ?v1 <http://xmlns.com/foaf/0.1/name> ""Croatia U21""@en . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?coach WHERE {
  # Find the coach of Croatia U21
  ?team a dbo:SoccerTeam ;
        dbo:coach ?coach .
  
  FILTER (str(?team) = ""Croatia national under-21 football team"")

  OPTIONAL {
    # Check if the coach is associated with Dinamo Zagreb as an organization and soccer club
    ?coach dbo:memberOf ?club .
    ?club a dbo:SoccerClub ;
          rdfs:label ?clubLabel .
    
    FILTER (CONTAINS(LCASE(?clubLabel), ""dinamo zagreb""))
  }
}
```",2,4,3,2,1,3,3,71,0,0,1,0,0.0,0
326,1,train,Give me the person decedent at France.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/deathPlace> <http://dbpedia.org/resource/France> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?person ?label WHERE {
  ?person dbo:deathPlace ?place .
  ?place rdfs:label ?locationLabel .
  FILTER (CONTAINS(LCASE(?locationLabel), ""france""))
  SERVICE wikibase:label { bd:serviceParam wikibase:language ""[AUTO_LANGUAGE],en"". }
}
LIMIT 10
```",1,1,2,1,1,3,2,20,0,0,3795,0,0.0,0
976,1,train,Give me the office of Meral Akşener.,SELECT ?result WHERE { <http://dbpedia.org/resource/Meral_Akşener> <http://dbpedia.org/property/office> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?office WHERE {
  dbr:Meral_Akşener dbo:office ?office .
}
```",1,1,2,1,1,3,3,71,0,0,3,0,0.0,0
976,11,train,"Give me the office of the leader, that is a politician, of Grand National Assembly of Turkey.",SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v1 <http://dbpedia.org/property/office> ?result . <http://dbpedia.org/resource/Grand_National_Assembly_of_Turkey> <http://dbpedia.org/ontology/leader> ?v1 . },"```sparql
SELECT ?office WHERE {
  ?assembly a dbo:Parliament ;
            rdfs:label ""Grand National Assembly of Turkey""@en .
  ?assembly dbpedia-owl:leader ?leader .
  ?leader dbpprop:office ?office .
}
```",2,3,3,2,1,3,3,71,0,0,4,0,0.0,0
527,12,train,"Give me the author of the work, that is a work and a book, of Tom Baker and actor of The Book Tower.",SELECT ?result WHERE { ?v0 <http://dbpedia.org/property/author> ?result . ?v0 <http://dbpedia.org/property/author> <http://dbpedia.org/resource/Tom_Baker> . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Book>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. <http://dbpedia.org/resource/The_Book_Tower> <http://dbpedia.org/property/starring> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?book ?actor WHERE {
  ?author foaf:name ""Tom Baker"" .
  ?work dbo:author ?author ;
        a dbo:Book .
  ?work dbo:title ?book .

  OPTIONAL {
    ?work dbo:performer ?actor .
  }
}
```",3,5,4,2,2,3,2,20,0,0,1,0,0.0,0
773,39,train,"Give me the parent of the child, that is a royalty, of the father, that is an office holder and a royalty, of Carloman of Bavaria and parent of Carloman of Bavaria.",SELECT ?result WHERE { <http://dbpedia.org/resource/Carloman_of_Bavaria> <http://dbpedia.org/property/father> ?v0 . ?result <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Carloman_of_Bavaria> . ?v1 <http://dbpedia.org/ontology/parent> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v1 <http://dbpedia.org/property/father> ?v0 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>

SELECT DISTINCT ?parentOfChild WHERE {
  # Step 1: Identify Carloman of Bavaria
  ?carloman rdfs:label ""Carloman of Bavaria""@en .
  
  # Step 2: Find his father who is an office holder and royalty
  ?father dbo:child ?carloman ;
          rdf:type dbo:Monarch ;
          dbo:officeHolder ?office .

  # Step 3: Identify a child of this father who is royalty
  ?child dbo:parent ?father ;
         rdf:type dbo:Monarch .

  # Step 4: Find the parent of this child
  ?parentOfChild dbo:child ?child .
}
```",4,7,5,3,2,3,3,71,0,0,2,0,0.0,0
192,13,train,"Give me the spouse of the spouse, that is a royalty, of the child of Charles II of Naples.",SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v1 <http://dbpedia.org/ontology/spouse> ?v0 . ?v1 <http://dbpedia.org/ontology/spouse> ?result . ?v0 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Charles_II_of_Naples> . },"```sparql
SELECT DISTINCT ?spouseOfSpouse WHERE {
  # Step 1: Identify Charles II of Naples
  ?charles2 a dbo:Monarch ;
            foaf:name ""Charles II of Naples""@en .
  
  # Step 2: Find his children
  ?child dbo:parent ?charles2 .

  # Step 3: Determine the spouse of that child
  ?spouse dbo:spouse ?child .

  # Step 4: Identify if any of these spouses have a spouse who is royalty
  ?spouseOfSpouse dbo:spouse ?spouse ;
                  a dbo:Monarch .
}
```",3,4,4,3,1,3,2,20,0,0,2,0,0.0,0
791,24,train,Give me the predecessor of the child of Emperor Takakura and father of Emperor Go-Toba.,SELECT ?result WHERE { <http://dbpedia.org/resource/Emperor_Go-Toba> <http://dbpedia.org/property/father> ?result . ?v2 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Emperor_Takakura> . ?result <http://dbpedia.org/ontology/successor> ?v2 . },"```sparql
SELECT ?predecessorLabel WHERE {
  ?antoku dbo:father dbr:Emperor_Go-Toba .
  ?antoku dbo:mother dbr:Princess_Sachiko_of_Kujō .
  ?antoku dbo:spouse dbr:Princess_Antoku .
  ?antoku dbo:predecessor ?predecessor .
  ?predecessor rdfs:label ?predecessorLabel .
  FILTER(LANG(?predecessorLabel) = ""en"")
}
```",3,3,4,2,2,3,3,71,0,0,1,0,0.0,0
433,38,train,"Give me the professional in the profession of Bob Marley and associated musical artist of the associated musical artist, that is an artist and a musical artist, of Scott LaFaro.",SELECT ?result WHERE { <http://dbpedia.org/resource/Bob_Marley> <http://dbpedia.org/property/occupation> ?v2 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. <http://dbpedia.org/resource/Scott_LaFaro> <http://dbpedia.org/ontology/associatedMusicalArtist> ?v3 . ?result <http://dbpedia.org/property/occupation> ?v2 . ?v3 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?person WHERE {
  # Find people with the profession of musician like Bob Marley
  ?person dbo:profession dbr:Singer-songwriter .
  
  # Ensure they are associated with Bill Evans, who is linked to Scott LaFaro
  ?person dbo:associatedMusicalArtist dbr:Bill_Evans .

  # Ensure they are recognized as an artist in general
  ?person a dbo:Artist .
}
```",4,6,5,2,2,3,3,71,0,0,4,0,0.0,0
926,31,train,Give me the father of the father of the spouse of Neşerek Kadın and successor of Mustafa III.,SELECT ?result WHERE { <http://dbpedia.org/resource/Neşerek_Kadın> <http://dbpedia.org/ontology/spouse> ?v2 . <http://dbpedia.org/resource/Mustafa_III> <http://dbpedia.org/ontology/successor> ?result . ?v0 <http://dbpedia.org/property/father> ?result . ?v2 <http://dbpedia.org/property/father> ?v0 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?fatherOfSpouse ?successorFather WHERE {
  # Step 1 & 2: Find Neşerek Kadın's spouse
  ?neserekkadin a dbo:Person ;
                dbo:spouse ?spouse .

  # Step 3: Find the father of Neşerek Kadın's spouse
  ?spouse dbo:father ?fatherOfSpouse .

  # Step 4 & 5: Identify Mustafa III's successor and find his father
  dbr:Mustafa_III dbo:succeededBy ?successor .
  ?successor dbo:father ?successorFather .

  # Step 6: Check if the fathers are the same person
  FILTER (?fatherOfSpouse = ?successorFather)
}
```",4,4,5,3,2,3,3,71,0,0,1,0,0.0,0
874,12,train,Give me the band of Manfred Mann (musician) and band of the band member of The Jones Gang.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/bandMember> <http://dbpedia.org/resource/Manfred_Mann_(musician)> . ?result <http://dbpedia.org/ontology/bandMember> ?v0 . ?v0 <http://dbpedia.org/ontology/associatedMusicalArtist> <http://dbpedia.org/resource/The_Jones_Gang> . },"```sparql
# Query to get the band of Manfred Mann
SELECT ?band WHERE {
  wd:Q12345 dbo:musicGroupMember ?band .
}

UNION

# Query to get the bands of The Jones Gang members
SELECT DISTINCT ?memberBand WHERE {
  # Get members of The Jones Gang
  wd:Q67890 dbo:musicalArtist ?member .

  # Get other bands that these members are part of
  ?member dbo:musicGroupMember ?memberBand .
  
  FILTER(?memberBand != wd:Q67890) # Exclude The Jones Gang itself
}
```

Note: Replace `wd:Q12345` with the actual DBpedia entity ID for Manfred Mann and `wd:Q67890` with the entity ID for The Jones Gang.",3,3,4,2,2,3,2,20,0,0,1,0,0.0,0
892,0,train,Give me the entity in Italy.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Italy> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?entity WHERE {
  ?entity dbo:country dbr:Italy .
}
LIMIT 10
```",1,1,2,1,1,3,3,71,10,0,13082,1.0,0.0007638252367858234,0.0015264845061822622
433,34,train,"Give me the professional in Musician and associated musical artist of the person born, that is a musical artist and an artist, as the persona of Paul Chambers.","SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. <http://dbpedia.org/resource/Paul_Chambers> <http://xmlns.com/foaf/0.1/givenName> ?v2 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?v1 <http://dbpedia.org/property/birthName> ?v2 . ?v1 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?result <http://dbpedia.org/property/occupation> ""Musician""@en . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?person ?associatedArtist ?birthPlace ?otherPerson
WHERE {
  # Identify Paul Chambers and confirm he is a musician
  dbr:Paul_Chambers a dbo:Musician .

  # Find associated musical artists with whom Paul Chambers worked
  OPTIONAL { 
    ?association dbo:musicalArtist dbr:Paul_Chambers .
    ?association dbo:musicalArtist ?associatedArtist .
  }

  # Determine the birthplace of Paul Chambers
  dbr:Paul_Chambers dbo:birthPlace ?birthPlace .

  # Find other individuals born at the same place who are both musicians and artists
  ?otherPerson a dbo:MusicalArtist ;
              a dbo:Artist ;
              dbo:birthPlace ?birthPlace .
}
```",4,6,5,3,2,3,3,71,0,0,15,0,0.0,0
158,12,train,"Give me the party of the successor, that is a prime minister and an office holder and a politician, of André Tardieu and entity in France.",SELECT ?result WHERE { ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. <http://dbpedia.org/resource/André_Tardieu> <http://dbpedia.org/ontology/successor> ?v0 . ?result <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/France> . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/PrimeMinister>. ?v0 <http://dbpedia.org/ontology/party> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?successor ?party WHERE {
  # André Tardieu's resource in DBpedia
  VALUES ?tardieu { dbr:André_Tardieu }

  # Find successors who were Prime Ministers of France
  ?successor dbo:officeHolder ?office .
  ?office dbo:positionTitle ""Prime Minister""@en .
  ?office dbo:country dbr:France .

  # Ensure the successor is a politician and office holder
  ?successor rdf:type dbo:Politician .
  ?successor dbo:officeHolder ?office2 .

  # Find André Tardieu's successors
  ?tardieu dbo:successor ?successor .

  # Get the political party of the successor
  OPTIONAL { ?successor dbo:party ?party . }
}
```",3,6,4,2,2,3,2,20,0,0,1,0,0.0,0
166,1,train,Give me the entity in Spain.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Spain> . },"```sparql
SELECT DISTINCT ?entity WHERE {
  ?entity dbo:country dbr:Spain .
}
LIMIT 10
```",1,1,2,1,1,3,2,20,10,0,11834,1.0,0.0008443093549476528,0.0016871941960519654
267,7,train,"Give me the coach of the player, that is a soccer club, in Rasoul Khatibi.",SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/coach> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerClub>. <http://dbpedia.org/resource/Rasoul_Khatibi> <http://dbpedia.org/ontology/team> ?v1 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?coach WHERE {
  ?player foaf:name ""Rasoul Khatibi""@en.
  ?player dbo:nationality dbr:Iranian_people.
  ?player dbo:sport dbr:Soccer.
  
  ?club dbo:member ?player.
  ?club dbo:manager ?coach.

  FILTER (lang(?playerLabel) = 'en')
}
```",2,3,3,2,1,3,2,20,0,0,2,0,0.0,0
965,27,train,"Give me the parent of the person born, that is a noble, as the birth name of George Mountbatten, 2nd Marquess of Milford Haven.","SELECT ?result WHERE { ?v0 <http://dbpedia.org/property/birthName> ?v1 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Noble>. <http://dbpedia.org/resource/George_Mountbatten,_2nd_Marquess_of_Milford_Haven> <http://dbpedia.org/property/birthName> ?v1 . ?v0 <http://dbpedia.org/ontology/parent> ?result . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?parent ?parentLabel WHERE {
  # Find George Mountbatten, 2nd Marquess of Milford Haven
  VALUES ?george { dbr:George_Mountbatten,_2nd_Marquess_of_Milford_Haven }
  
  # Get his birth name
  ?george dbo:birthName ?birthName .
  
  # Find parents using the birth name
  ?parent dbo:child ?george .
  
  # Ensure the parent is a noble (has a title)
  OPTIONAL { ?parent dbo:title ?title . FILTER EXISTS { ?title rdfs:label ? } }
  
  # Get labels for readability
  SERVICE wikibase:label { bd:serviceParam wikibase:language ""[AUTO_LANGUAGE],en"". }
}
```",3,4,4,3,1,3,3,71,0,0,2,0,0.0,0
433,12,train,Give me the associated musical artist of Bill Evans and professional in Musician.,"SELECT ?result WHERE { <http://dbpedia.org/resource/Bill_Evans> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?result <http://dbpedia.org/property/occupation> ""Musician""@en . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>

SELECT ?associatedArtist WHERE {
  ?billEvans a dbo:Person ;
             foaf:name ""Bill Evans"" .
  
  ?billEvans dbo:associatedMusicalArtist ?associatedArtist .
  
  ?associatedArtist rdf:type dbo:Musician .
}
```",2,2,3,1,2,3,3,71,0,0,3,0,0.0,0
773,3,train,Give me the parent of Bernard (son of Charles the Fat).,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Bernard_(son_of_Charles_the_Fat)> . },"```sparql
SELECT ?parent WHERE {
  ?charles dbo:child ?bernard .
  ?charles rdfs:label ""Charles the Fat""@en .
  FILTER(CONTAINS(LCASE(?bernard), ""bernard""))
  ?bernard dbo:parent ?parent .
}
```",1,1,2,1,1,3,3,71,0,0,1,0,0.0,0
773,14,train,"Give me the parent of the child, that is a royalty, of Louis the German.",SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v1 <http://dbpedia.org/ontology/parent> ?result . ?v1 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Louis_the_German> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>
PREFIX schema: <http://schema.org/>

SELECT ?child ?parent WHERE {
  ?person rdfs:label ""Louis the German""@en .
  ?person dbo:child ?child .
  ?child rdf:type ?type .
  FILTER (
    ?type = schema:Person ||
    ?type = dbo:Monarch ||
    ?type = dbo:King ||
    ?type = dbo:Queen ||
    ?type = dbo:Duke ||
    ?type = dbo:Princess ||
    ?type = dbo:Prince
  ) .
  ?child dbo:parent ?parent .
}
```",2,3,3,2,1,3,3,71,2,3,0,0.4,1.0,0.5714285714285715
791,25,train,"Give me the predecessor of Emperor Antoku and father of the child, that is a royalty, of Emperor Takakura.",SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?result <http://dbpedia.org/ontology/successor> <http://dbpedia.org/resource/Emperor_Antoku> . ?v1 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Emperor_Takakura> . ?v1 <http://dbpedia.org/property/father> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?predecessor WHERE {
  # Find the predecessor of Emperor Antoku
  ?antoku dbo:succession dbr:Emperor_Antoku .
  ?predecessor dbo:succession ?antoku .

  # Find a child of Emperor Takakura who is royalty
  ?takakura dbo:child ?royalChild .
  FILTER (strstarts(str(?royalChild), ""http://dbpedia.org/resource/Emperor_"") || strstarts(str(?royalChild), ""http://dbpedia.org/resource/Prince_""))

  # Ensure the predecessor is also the father of this child
  ?takakura dbo:child ?antoku .
}
```",3,4,4,2,2,3,3,71,0,0,1,0,0.0,0
917,39,train,"Give me the child of Kekūanāoʻa and child of the father of the child, that is a royalty, of Kamehameha III.",SELECT ?result WHERE { <http://dbpedia.org/resource/Kamehameha_III> <http://dbpedia.org/ontology/child> ?v2 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v2 <http://dbpedia.org/property/father> ?v0 . ?result <http://dbpedia.org/property/father> ?v0 . ?result <http://dbpedia.org/ontology/parent> <http://dbpedia.org/resource/Kekūanāoʻa> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?child WHERE {
  # Kekūanāoʻa's child (Bernice Pauahi Bishop)
  dbr:Bernice_Pauahi_Bishop dbo:parent dbr:Kekūanāoʻa .
  
  # Child of Bernice Pauahi Bishop
  ?child dbo:parent dbr:Bernice_Pauahi_Bishop .

  # Ensure the child is a royalty and related to Kamehameha III
  ?child dbo:occupation ?occupation .
  FILTER(CONTAINS(LCASE(?occupation), ""royalty"") || CONTAINS(LCASE(?occupation), ""kamehameha iii""))
}
```",4,5,5,3,2,3,3,71,0,0,3,0,0.0,0
874,6,train,Give me the band of Robert Hart (musician) and band of Manfred Mann (musician).,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/bandMember> <http://dbpedia.org/resource/Robert_Hart_(musician)> . ?result <http://dbpedia.org/ontology/bandMember> <http://dbpedia.org/resource/Manfred_Mann_(musician)> . },"```sparql
SELECT ?robertHartBand ?manfredMannBand WHERE {
  ?robertHart dbo:occupation dbr/Musician .
  ?robertHart foaf:name ""Robert Hart""@en .
  ?robertHart dbo:band ?robertHartBand .

  ?manfredMann dbo:occupation dbr/Musician .
  ?manfredMann foaf:name ""Manfred Mann""@en .
  ?manfredMann dbo:band ?manfredMannBand .
}
```",2,2,3,1,2,3,2,20,0,0,1,0,0.0,0
573,3,train,Give me the real name of Charlie Baker (Australian footballer).,SELECT ?result WHERE { <http://dbpedia.org/resource/Charlie_Baker_(Australian_footballer)> <http://xmlns.com/foaf/0.1/name> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT ?alias WHERE {
  ?person a dbo:AustralianFootballer ;
          foaf:name ""Charlie Baker"" .
  ?person dbo:alias ?alias .
}
```",1,1,2,1,1,3,3,71,0,0,2,0,0.0,0
715,28,train,"Give me the commander in the force, that is a military conflict, of Abd el-Krim and commander in Spanish Civil War and leader of Ministry of the Air (Spain).",SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. <http://dbpedia.org/resource/Ministry_of_the_Air_(Spain)> <http://dbpedia.org/ontology/leader> ?result . ?v1 <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Abd_el-Krim> . <http://dbpedia.org/resource/Spanish_Civil_War> <http://dbpedia.org/ontology/commander> ?result . ?v1 <http://dbpedia.org/ontology/commander> ?result . },"```sparql
SELECT ?person WHERE {
  ?person dbo:spouse ?spouse .
  ?spouse foaf:name ""Abd el-Krim""@en .

  ?person dbo:commanderOfMilitaryConflict ?rifWar .
  ?rifWar dbo:conflictName ?rifConflict .
  ?rifConflict rdfs:label ?rifLabel .
  FILTER(CONTAINS(LCASE(?rifLabel), ""rif war"") || CONTAINS(LCASE(?rifLabel), ""riffian""))

  ?person dbo:commanderOfMilitaryConflict ?civilWar .
  ?civilWar dbo:conflictName ?civilConflict .
  ?civilConflict rdfs:label ?civilLabel .
  FILTER(CONTAINS(LCASE(?civilLabel), ""spanish civil war""))

  ?person dbo:leaderOfOrganization ?airMinistry .
  ?airMinistry dbo:name ?ministryName .
  FILTER(CONTAINS(LCASE(?ministryName), ""ministry of the air"") || CONTAINS(LCASE(?ministryName), ""aeropuertos y navegación aérea""))
}
```",4,5,5,2,3,3,3,71,0,0,1,0,0.0,0
933,37,train,Give me the reference to the birth name of the professional in Musician and band of The Ramong Sound.,SELECT ?result WHERE { ?v1 <http://dbpedia.org/property/birthName> ?v2 . <http://dbpedia.org/resource/The_Ramong_Sound> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v1 <http://dbpedia.org/property/occupation> <http://dbpedia.org/resource/Musician> . ?result <http://xmlns.com/foaf/0.1/name> ?v2 . },"```sparql
SELECT ?birthName WHERE {
  wd:Q246 wdt:P31/wdt:P279* wd:Q215380 .
  wd:Q246 wdt:P154/wdq:P154 wd:Q1340649 .
  wd:Q246 wdt:P1476 ?birthName .
}
```",4,4,5,3,2,3,3,71,0,0,1,0,0.0,0
83,1,train,Give me the party of Alceu Collares.,SELECT ?result WHERE { <http://dbpedia.org/resource/Alceu_Collares> <http://dbpedia.org/ontology/party> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?partyLabel WHERE {
  ?person foaf:name ""Alceu Collares""@en .
  ?person dbo:party ?party .
  ?party rdfs:label ?partyLabel .
  FILTER(LANG(?partyLabel) = 'en')
}
```",1,1,2,1,1,3,2,20,0,1,1,0.0,0.0,0
965,32,train,"Give me the spouse of the spouse of Princess Victoria of Hesse and by Rhine and parent of the child, that is a royalty, of Prince Louis of Battenberg.",SELECT ?result WHERE { ?v3 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Prince_Louis_of_Battenberg> . ?result <http://dbpedia.org/ontology/spouse> ?v1 . <http://dbpedia.org/resource/Princess_Victoria_of_Hesse_and_by_Rhine> <http://dbpedia.org/ontology/spouse> ?v1 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v3 <http://dbpedia.org/ontology/parent> ?result . },"```sparql
SELECT ?spouse WHERE {
  wd:Q123456 wdt:P26 wd:Q789012 . # Princess Victoria of Hesse and by Rhine (wd:Q123456) married to Ernest Louis, Grand Duke of Hesse (wd:Q789012)
  wd:Q789012 wdt:P26 ?child .     # Children of Ernest Louis
  ?child wdt:P31 wd:Q5 .          # The child is a human
  ?child wdt:P22 wd:Q987654 .     # The child is Princess Alice of Battenberg (wd:Q987654)
  ?child wdt:P26 ?spouse .        # Spouse of Princess Alice of Battenberg
}
```

Note: In the above SPARQL query, `wd:Q123456`, `wd:Q789012`, and `wd:Q987654` are placeholders for the actual DBpedia identifiers for Princess Victoria of Hesse and by Rhine, Ernest Louis, Grand Duke of Hesse, and Princess Alice of Battenberg respectively. You would need to replace these with their correct DBpedia resource IDs.",4,5,5,2,2,3,3,71,0,0,1,0,0.0,0
495,14,train,Give me the father of the child of the parent of Princess Pauline of Württemberg (1810–1856).,SELECT ?result WHERE { ?v0 <http://dbpedia.org/ontology/parent> ?v2 . <http://dbpedia.org/resource/Princess_Pauline_of_Württemberg_(1810–1856)> <http://dbpedia.org/ontology/parent> ?v2 . ?v0 <http://dbpedia.org/property/father> ?result . },"```sparql
SELECT DISTINCT ?father WHERE {
  # Step 1: Identify Princess Pauline of Württemberg
  ?princess a dbo:Person ;
            foaf:name ""Princess Pauline of Württemberg""@en .
  
  FILTER(YEAR(?princessBirth) = 1810 && YEAR(?princessDeath) = 1856)

  # Step 2: Find Her Parent(s)
  ?parent dbo:child ?princess .

  # Step 3: Determine the Child of Her Parent
  ?parentChild dbo:child ?child .

  # Step 4: Identify the Father of That Child
  ?father dbo:child ?child .
}
```",3,3,4,3,1,3,2,20,0,0,1,0,0.0,0
329,15,train,Give me the entity in Northern Ireland and birthplace of the author of The Tailor and Ansty.,SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/birthPlace> ?result . ?result <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Northern_Ireland> . <http://dbpedia.org/resource/The_Tailor_and_Ansty> <http://dbpedia.org/property/author> ?v1 . },"```sparql
SELECT ?author ?birthPlace WHERE {
  ?book dcterms:title ""The Tailor and Ansty"" .
  ?book dbo:author ?author .
  ?author dbo:birthPlace ?birthPlace .
  ?birthPlace dbp:country ""Northern Ireland"" .
}
```",3,3,4,2,2,2,3,28,0,0,1,0,0.0,0
433,17,train,Give me the profession of the writer of Slowhand at 70 – Live at the Royal Albert Hall.,SELECT ?result WHERE { <http://dbpedia.org/resource/Slowhand_at_70_–_Live_at_the_Royal_Albert_Hall> <http://dbpedia.org/property/writer> ?v1 . ?v1 <http://dbpedia.org/property/occupation> ?result . },"```sparql
SELECT ?profession WHERE {
  wd:Q3474 dbo:occupation ?profession .
}
```",2,2,3,2,1,3,3,71,0,0,11,0,0.0,0
791,17,train,"Give me the child, that is a royalty, of the father, that is a royalty and an office holder, of Emperor Antoku.",SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. <http://dbpedia.org/resource/Emperor_Antoku> <http://dbpedia.org/property/father> ?v1 . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?result <http://dbpedia.org/property/father> ?v1 . },"```sparql
SELECT ?child WHERE {
  ?antoku dbo:parent dbr:Taira_no_Kiyomori .
  ?antoku rdf:type dbo:Monarch ;
          rdfs:label ""Emperor Antoku""@en .
  
  ?antoku dbo:child ?child .
  ?child rdf:type dbo:Monarch ;
         rdfs:label ?label .

  FILTER(CONTAINS(LCASE(?label), ""go-toba""))
}
```",2,5,3,2,1,3,3,71,0,0,3,0,0.0,0
976,14,train,Give me the office of the person born as Mehmet Naci Bostancı.,"SELECT ?result WHERE { ?v0 <http://dbpedia.org/property/office> ?result . ?v0 <http://dbpedia.org/property/birthName> ""Mehmet Naci Bostancı""@en . }","```sparql
SELECT ?office WHERE {
  ?person foaf:name ""Mehmet Naci Bostancı""@en .
  ?person dbo:office ?office .
}
```",2,2,3,2,1,3,3,71,0,0,4,0,0.0,0
573,4,train,"Give me the administration, that is a region, of Charlie Baker.","SELECT ?result WHERE { ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Region>. ?result <http://dbpedia.org/property/governor> ""Charlie Baker""@en . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?administration WHERE {
  ?person dbo:name ""Charlie Baker""@en .
  ?person dbo:governmentRole ?role .
  ?role dbo:officeHolder ?holder .
  FILTER(?holder = ?person) .
  ?role dbo:administrativeArea ?administration .
  ?administration a dbo:State .
}
```",1,2,2,1,1,3,3,71,0,0,1,0,0.0,0
839,4,train,"Give me the person born, that is a musical artist, as Kevin Richard Russell.","SELECT ?result WHERE { ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?result <http://dbpedia.org/property/birthName> ""Kevin Richard Russell""@en . }","```sparql
PREFIX foaf: <http://xmlns.com/foaf/0.1/>
PREFIX dbo: <http://dbpedia.org/ontology/>

SELECT ?person ?fullName WHERE {
  ?person a dbo:MusicalArtist .
  ?person foaf:givenName ""Kevin"" .
  ?person foaf:familyName ""Russell"" .
  OPTIONAL { ?person foaf:name ?fullName }
}
```",1,2,2,1,1,3,3,71,0,0,1,0,0.0,0
47,21,train,Give me the office of the administration of Jagdeep Dhankhar and office of Ajoy Mukherjee.,SELECT ?result WHERE { ?v1 <http://dbpedia.org/property/governor> <http://dbpedia.org/resource/Jagdeep_Dhankhar> . ?v1 <http://dbpedia.org/property/office> ?result . <http://dbpedia.org/resource/Ajoy_Mukherjee> <http://dbpedia.org/property/office> ?result . },"```sparql
# Query for Jagdeep Dhankhar's office
SELECT ?office WHERE {
  ?person dbo:wikiPageID ""Jagdeep_Dhankhar"" .
  ?person dbo:positionHeld ?office .
}

UNION

# Query for Ajoy Mukherjee's office
SELECT ?office WHERE {
  ?person dbo:wikiPageID ""Ajoy_Mukherjee"" .
  ?person dbo:positionHeld ?office .
}
```",3,3,4,2,2,3,3,71,0,0,1,0,0.0,0
417,2,train,Give me the child of Alexandrine of Mecklenburg-Schwerin.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/parent> <http://dbpedia.org/resource/Alexandrine_of_Mecklenburg-Schwerin> . },"```sparql
SELECT ?child WHERE {
  ?person foaf:name ""Alexandrine of Mecklenburg-Schwerin""@en .
  ?person dbo:spouse ?spouse .
  ?spouse dbo:child ?child .
}
```",1,1,2,1,1,3,3,71,2,0,0,1.0,1.0,1.0
976,16,train,"Who is the mayor, that is a politician and an office holder and Turkish, of the reference, that is an organisation and a political party and Turkish, to Millet İttifakı?","SELECT ?result WHERE { ?v0 <http://xmlns.com/foaf/0.1/name> ""Millet İttifakı""@en . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v0 <http://dbpedia.org/property/leader> ?result . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/PoliticalParty>. ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?result <http://dbpedia.org/ontology/nationality> <http://dbpedia.org/resource/Turkey>. ?v0 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Turkey>. }","```sparql
SELECT ?mayor WHERE {
  # Identify Millet İttifakı as an organization and political party
  dbpedia:Milli_İttifak_Partisi dbo:type dbpedia-owl:PoliticalParty ;
                                  dbo:type dbpedia-owl:Organization .

  # Find entities that are references or related to Millet İttifakı
  ?reference dbo:wikiPageRedirects dbpedia:Milli_İttifak_Partisi .
  
  # Filter these entities to find those that are organizations and political parties
  ?reference a dbpedia-owl:PoliticalParty ;
             a dbpedia-owl:Organization .

  # Identify the mayor who is a politician, office holder, and Turkish
  ?mayor dbo:nationality dbr:Türkiye ;
         dbo:occupation dbr:Politician ;
         dbo:officeHolder ?reference .
}
```",2,8,3,2,1,3,3,71,0,0,1,0,0.0,0
495,5,train,Give me the child of Princess Charlotte of Saxe-Hildburghausen.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/parent> <http://dbpedia.org/resource/Princess_Charlotte_of_Saxe-Hildburghausen> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>

SELECT ?child WHERE {
  ?person rdf:type dbo:Person .
  ?person rdfs:label ""Princess Charlotte of Saxe-Hildburghausen""@en .
  ?person dbo:child ?child .
}
```",1,1,2,1,1,3,2,20,4,0,0,1.0,1.0,1.0
955,12,train,"Give me the band of the band member, that is a musical artist and an artist, of Street Dogs and band of Nate Albert.",SELECT ?result WHERE { ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. ?result <http://dbpedia.org/ontology/bandMember> <http://dbpedia.org/resource/Nate_Albert> . ?result <http://dbpedia.org/ontology/bandMember> ?v0 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?v0 <http://dbpedia.org/ontology/associatedMusicalArtist> <http://dbpedia.org/resource/Street_Dogs> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?band WHERE {
  ?person a dbo:MusicalArtist ;
          dbo:memberOfBand dbr:Street_Dogs .
  ?person foaf:name ""Nate Albert"" .
  OPTIONAL { ?person dbo:associatedBand ?band . }
  FILTER EXISTS { ?band a dbo:MusicalGroup } 
}
```",3,5,4,2,2,3,2,20,0,0,1,0,0.0,0
773,16,train,"Give me the successor of the child, that is a royalty, of Louis the Pious.",SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/successor> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. <http://dbpedia.org/resource/Louis_the_Pious> <http://dbpedia.org/ontology/child> ?v1 . },"```sparql
SELECT ?child ?successor WHERE {
  # Louis the Pious's children who were royalty
  VALUES ?child { 
    dbr:Lothair_I_of_Lorraine 
    dbr:Louis_the_German 
    dbr:Charles_the_Bald 
  }
  
  # Relationship indicating that a person is a child of Louis the Pious
  ?child dbo:parent dbr:Louis_the_Pious .

  # Find the successor for each child who was royalty
  OPTIONAL {
    ?child dbo:succeededBy ?successor .
  }

  FILTER(?successor != dbr:Louis_the_Pious) # Exclude Louis the Pious himself as a successor
}
```",2,3,3,2,1,3,3,71,0,0,5,0,0.0,0
36,6,train,Give me the actor of Being Mrs Elliot and person born in 1971.,"SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/birthYear> ""1971""^^<http://www.w3.org/2001/XMLSchema#gYear> . <http://dbpedia.org/resource/Being_Mrs_Elliot> <http://dbpedia.org/ontology/starring> ?result . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?actor WHERE {
    ?film dbo:title ""Being Mrs Elliot""@en .
    ?film dbo:starring ?actor .
    ?actor dbo:birthYear ""1971""^^xsd:gYear .
}
```",2,2,3,1,2,2,3,28,0,0,1,0,0.0,0
987,14,train,"Give me the entity in the region, that is a country, of Central European Time.",SELECT ?result WHERE { ?v0 <http://dbpedia.org/property/timeZone> <http://dbpedia.org/resource/Central_European_Time> . ?result <http://dbpedia.org/ontology/country> ?v0 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?country WHERE {
  ?country a dbo:Country .
  ?country dbo:timeZone dbr:Central_European_Time .
}
```",2,3,3,2,1,3,3,71,29,65,173232,0.30851063829787234,0.00016737754024275515,0.00033457356292001964
933,14,train,"Give me the band of the band, that is a group and a band and an organisation, of Alan Warner (musician).",SELECT ?result WHERE { <http://dbpedia.org/resource/Alan_Warner_(musician)> <http://dbpedia.org/ontology/associatedMusicalArtist> ?v0 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Group>. ?v0 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Band>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?band WHERE {
  ?band a dbo:Band ;
        a dbo:MusicalGroup ;
        a dbo:Organization .
  ?band dbo:musicalArtist dbp:Alan_Warner .
}
```",2,5,3,2,1,3,3,71,0,0,4,0,0.0,0
579,1,train,Give me the person born as Isobel Jane Miller Richard.,"SELECT ?result WHERE { ?result <http://dbpedia.org/property/birthName> ""Isobel Jane Miller Richard""@en . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT ?person ?officialName WHERE {
  ?person dbo:birthName ""Isobel Jane Miller Richard"" .
  OPTIONAL { ?person foaf:name ?officialName . }
}
```",1,1,2,1,1,3,2,20,0,0,1,0,0.0,0
102,3,train,Give me the player in Ellie Roebuck.,SELECT ?result WHERE { <http://dbpedia.org/resource/Ellie_Roebuck> <http://dbpedia.org/ontology/team> ?result . },"```sparql
PREFIX dbp: <http://dbpedia.org/property/>
PREFIX dbo: <http://dbpedia.org/ontology/>

SELECT ?teamName WHERE {
  ?person foaf:name ""Ellie Roebuck""@en .
  ?person dbp:team ?team .
  ?team foaf:name ?teamName .
}
```",1,1,2,1,1,3,2,20,0,0,5,0,0.0,0
826,8,train,Who is the parent of Prince Friedrich of Hesse and by Rhine?,SELECT ?result WHERE { <http://dbpedia.org/resource/Prince_Friedrich_of_Hesse_and_by_Rhine> <http://dbpedia.org/ontology/parent> ?result . },"```sparql
SELECT ?parent WHERE {
  ?person dbo:child dbr:Friedrich_of_Hesse_and_by_Rhine .
  ?person dbo:parent ?parent .
}
```",1,1,2,1,1,3,3,71,0,0,2,0,0.0,0
170,12,train,Give me the domain of Mayor and entity in Russia and birth place of Era Ziganshina.,"SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Russia> . <http://dbpedia.org/resource/Era_Ziganshina> <http://dbpedia.org/ontology/birthPlace> ?result . ?result <http://dbpedia.org/ontology/leaderTitle> ""Mayor""@en . }","```sparql
# Query for domain of Mayor and Entity in Russia
SELECT ?mayor ?city WHERE {
  ?mayor dbo:position dbr:Municipal_government_of_Russia.
  ?mayor dbo:location dbr:Russia.
  ?mayor dbo:officeLocation ?city.
  FILTER EXISTS { ?city a dbo:City. }
} LIMIT 10

UNION

# Query for birthplace of Era Ziganshina
SELECT ?birthPlace WHERE {
  dbpedia:en:Era_Ziganshina dbo:birthPlace ?birthPlace.
}
```",3,3,4,1,3,2,3,28,0,0,1,0,0.0,0
170,1,train,Give me the birth place of Era Ziganshina.,SELECT ?result WHERE { <http://dbpedia.org/resource/Era_Ziganshina> <http://dbpedia.org/ontology/birthPlace> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>

SELECT ?birthPlace WHERE {
  ?person a dbo:Person ;
          foaf:name ""Era Ziganshina""@en .
  ?person dbo:birthPlace ?birthPlace .
}
```",1,1,2,1,1,2,3,28,3,0,0,1.0,1.0,1.0
554,12,train,Give me the leader of the birth place of The Legendary Tigerman and leader of Portuguese São Tomé and Príncipe.,SELECT ?result WHERE { ?v0 <http://dbpedia.org/property/leader> ?result . <http://dbpedia.org/resource/The_Legendary_Tigerman> <http://dbpedia.org/ontology/birthPlace> ?v0 . <http://dbpedia.org/resource/Portuguese_São_Tomé_and_Príncipe> <http://dbpedia.org/property/leader> ?result . },"```sparql
# Query to find the mayor of the birthplace of ""The Legendary Tigerman""
SELECT ?birthPlaceLabel ?mayorLabel WHERE {
  wd:Q123456 # Replace with José Manuel Coimbra's DBpedia QID
    dbo:birthPlace ?birthPlace .
  ?birthPlace wdt:P6 ?mayor .
  SERVICE wikibase:label { bd:serviceParam wikibase:language ""en"". }
}
```

```sparql
# Query to find the current President of São Tomé and Príncipe
SELECT ?presidentLabel WHERE {
  wd:Q1234567 # Replace with São Tomé and Príncipe's DBpedia QID for the presidency
    dbo:currentLeader ?president .
  SERVICE wikibase:label { bd:serviceParam wikibase:language ""en"". }
}
```

Note: The placeholders `wd:Q123456` and `wd:Q1234567` should be replaced with the actual DBpedia QIDs for José Manuel Coimbra and the presidency of São Tomé and Príncipe, respectively. These can be found by searching DBpedia or using a SPARQL endpoint to query for these entities.",3,3,4,2,2,3,2,20,0,0,1,0,0.0,0
382,7,train,"Give me the birthplace of the manager, that is a soccer manager and an athlete and a sports manager, of Bonner SC.",SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerManager>. <http://dbpedia.org/resource/Bonner_SC> <http://dbpedia.org/ontology/manager> ?v1 . ?v1 <http://dbpedia.org/ontology/birthPlace> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsManager>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Athlete>. },"```sparql
SELECT ?birthPlace WHERE {
  dbpedia:Rainer_Zobel dbo:birthPlace ?birthPlace .
}
```",2,5,3,2,1,3,2,20,0,0,2,0,0.0,0
267,14,train,Give me the person born on the birth date of the reference to Dan Cathy.,"SELECT ?result WHERE { ?v2 <http://xmlns.com/foaf/0.1/name> ""Dan Cathy""@en . ?result <http://dbpedia.org/ontology/birthDate> ?v0 . ?v2 <http://dbpedia.org/ontology/birthDate> ?v0 . }","```sparql
# Step 1: Get the birth date of Dan Cathy
SELECT ?birthDate WHERE {
    dbpedia:Dan_Cathy dbo:birthDate ?birthDate .
}

# Step 2: Find other people with the same birth date as Dan Cathy
PREFIX dbo: <http://dbpedia.org/ontology/>
SELECT DISTINCT ?person ?name WHERE {
    ?person a dbo:Person ;
            dbo:birthDate ?birthDate .
    dbpedia:Dan_Cathy dbo:birthDate ?danBirthDate .
    FILTER (?birthDate = ?danBirthDate)
    
    OPTIONAL { ?person rdfs:label ?name . FILTER (lang(?name) = 'en') }
}
```",3,3,4,3,1,3,2,20,0,0,35,0,0.0,0
417,32,train,"Give me the child of the father of Frederick IX of Denmark and spouse of the parent, that is a royalty, of Count Ingolf of Rosenborg.",SELECT ?result WHERE { ?result <http://dbpedia.org/property/father> ?v3 . ?result <http://dbpedia.org/ontology/spouse> ?v1 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. <http://dbpedia.org/resource/Frederick_IX_of_Denmark> <http://dbpedia.org/property/father> ?v3 . ?v1 <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Count_Ingolf_of_Rosenborg> . },"```sparql
# Step 1: Find Frederick IX of Denmark's father
SELECT ?father WHERE {
  wd:Q1116 wdt:P22 ?father .
}

# Step 2: Find children of Frederick IX's father and their spouses
SELECT DISTINCT ?child ?spouse WHERE {
  ?father wdt:P40 ?child . # ?father has child ?child
  OPTIONAL { ?child wdt:P26 ?spouse } # ?child is married to ?spouse
  FILTER(?father = <FREEDOMIX_FATHER_URI>) # Replace with actual URI from Step 1
}

# Step 3: Find Count Ingolf of Rosenborg's parent that is royalty
SELECT DISTINCT ?parent WHERE {
  wd:Q123456 wdt:P40 ?parent . # Count Ingolf has parent ?parent
  OPTIONAL { ?parent wdt:P31/wdt:P279* wd:Q5 } # ?parent is a human or subclass thereof (royalty)
}

# Step 4: Find commonality between the results of Step 2 and Step 3
SELECT DISTINCT ?common WHERE {
  VALUES ?child_spouse { <CHILD_SPOUSE_URI1> <CHILD_SPOUSE_URI2> ... } # Replace with URIs from Step 2
  VALUES ?parent_royalty { <PARENT_ROYALTY_URI1> <PARENT_ROYALTY_URI2> ... } # Replace with URIs from Step 3
  FILTER(?child_spouse = ?parent_royalty)
}
```

Note: The placeholders `<FREEDOMIX_FATHER_URI>`, `<CHILD_SPOUSE_URI1>`, `<CHILD_SPOUSE_URI2>`, etc., need to be replaced with actual URIs obtained from the results of each query step.",4,5,5,2,2,3,3,71,0,0,1,0,0.0,0
341,5,train,Give me the band member of the awardee of List of awards and nominations received by Beyoncé.,SELECT ?result WHERE { ?v1 <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/List_of_awards_and_nominations_received_by_Beyoncé> . ?result <http://dbpedia.org/ontology/associatedMusicalArtist> ?v1 . },"```sparql
SELECT ?bandMember WHERE {
  ?award dbo:recipient dbr:Beyoncé .
  OPTIONAL { 
    ?award dbo:awardedToBand dbr:Destiny's_Child .
    ?bandMember dbo:memberOf dbr:Destiny's_Child .
  }
}
```",2,2,3,2,1,2,2,9,0,0,50,0,0.0,0
166,13,train,"Give me the resting place of the military force of the force, that is an event and a societal event and a military conflict, of Manuel Hedilla.",SELECT ?result WHERE { ?v0 <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Manuel_Hedilla> . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v1 <http://dbpedia.org/ontology/battle> ?v0 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?v1 <http://dbpedia.org/ontology/restingPlace> ?result . },"```sparql
SELECT ?burialPlace WHERE {
  ?manuelHedilla dbo:deathPlace ?deathPlace .
  ?manuelHedilla dbo:birthPlace ?birthPlace .
  ?manuelHedilla foaf:name ""Manuel Hedilla"" .
  OPTIONAL { ?manuelHedilla dbo:causeOfDeath ?causeOfDeath . }
  OPTIONAL { ?manuelHedilla dbo:spouse ?spouse . }
  OPTIONAL { ?manuelHedilla dbo:burialPlace ?burialPlace . }
}
```",3,6,4,3,1,3,2,20,0,0,36,0,0.0,0
326,4,train,"Give me the person decedent at Rancho Mirage, California and professional in Composer.","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/deathPlace> <http://dbpedia.org/resource/Rancho_Mirage,_California> . ?result <http://dbpedia.org/property/occupation> <http://dbpedia.org/resource/Composer> . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?person ?name WHERE {
  ?person dbo:deathPlace dbr:Rancho_Mirage,_California .
  ?person dbo:occupation dbr:Composer .
  OPTIONAL { ?person foaf:name ?name . }
}
```",2,2,3,1,2,2,2,9,0,0,1,0,0.0,0
892,35,train,"Give me the entity in the profession of Henri Crolla and entity in the administration, that is Italian and a region and a settlement and an administrative region, of Democratic Party (Italy).",SELECT ?result WHERE { ?v0 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Italy>. <http://dbpedia.org/resource/Henri_Crolla> <http://dbpedia.org/property/occupation> ?v1 . ?v0 <http://dbpedia.org/property/leaderParty> <http://dbpedia.org/resource/Democratic_Party_(Italy)> . ?result <http://dbpedia.org/ontology/country> ?v1 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Region>. ?result <http://dbpedia.org/ontology/province> ?v0 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/AdministrativeRegion>. },"```sparql
# Query to find Henri Crolla's profession
SELECT ?profession WHERE {
  dbpedia:Henri_Crolla dbo:occupation ?profession .
}

# Query to find Italian regions that are settlements, administrative regions, and associated with the Democratic Party (Italy)
SELECT DISTINCT ?region WHERE {
  ?region a dbo:Settlement ;
          a dbo:AdministrativeRegion ;
          dbo:country dbr:Italy ;
          dbp:party dbr:Democratic_Party_(Italy) .
}
```",4,8,5,2,2,3,3,71,0,0,587,0,0.0,0
216,11,train,Give me the administration of the designer of Woolfe: The Red Hood Diaries.,SELECT ?result WHERE { ?result <http://dbpedia.org/property/leader> ?v1 . <http://dbpedia.org/resource/Woolfe:_The_Red_Hood_Diaries> <http://dbpedia.org/property/designer> ?v1 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?designer ?role WHERE {
  # Find the designer of Woolfe: The Red Hood Diaries
  ?game dbo:director ?designer .
  
  FILTER (str(?game) = ""Woolfe: The Red Hood Diaries"")

  OPTIONAL {
    # Check if the designer has an administrative role in the game
    ?role dbr:Woolfe:_The_Red_Hood_Diaries ?adminRole .
    ?adminRole dbo:agent ?designer .
    
    FILTER (str(?adminRole) IN (""Producer"", ""Director""))
  }
}
```",2,2,3,2,1,2,3,28,0,0,1099,0,0.0,0
892,6,train,Give me the award of Anna Ishii.,SELECT ?result WHERE { <http://dbpedia.org/resource/Anna_Ishii> <http://dbpedia.org/property/awards> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?award WHERE {
  VALUES ?annaIshii { dbr:Anna_Ishii }
  ?annaIshii dbo:award ?award .
}
```",1,1,2,1,1,3,3,71,0,1,1,0.0,0.0,0
791,13,train,Give me the predecessor of the child of Emperor Takakura.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/successor> ?v1 . ?v1 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Emperor_Takakura> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>

SELECT ?predecessor WHERE {
  ?emperor a dbo:Emperor ;
           foaf:name ""Takakura""@en .
  
  ?child dbo:parent ?emperor ;
         a dbo:Person .

  ?successor dbo:predecessor ?child ;
             a dbo:Emperor .

  ?predecessor dbo:successor ?child .
}
```",2,2,3,2,1,3,3,71,0,0,2,0,0.0,0
216,2,train,Give me the administration of .,"SELECT ?result WHERE { ?result <http://dbpedia.org/property/leader> """"@en . }","```
# No valid SPARQL query can be generated due to lack of specific subject information.
```",1,1,2,1,1,2,3,28,0,0,1099,0,0.0,0
645,11,train,Give me the commander in the force of Carlos Asensio Cabanillas.,SELECT ?result WHERE { ?v0 <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Carlos_Asensio_Cabanillas> . ?v0 <http://dbpedia.org/ontology/commander> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?commander WHERE {
  ?person a dbo:MilitaryPerson ;
          foaf:name ""Carlos Asensio Cabanillas""@en .
  
  OPTIONAL { ?person dbo:commander ?commander . }
  FILTER (lang(?person) = 'en')
}
```",2,2,3,2,1,3,3,71,0,0,51,0,0.0,0
573,25,train,"Give me the parent of the author, that is a politician and an office holder, of Exchequer Standards and person decedent at Quincy, Massachusetts.","SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. <http://dbpedia.org/resource/Exchequer_Standards> <http://dbpedia.org/property/author> ?v1 . ?v1 <http://dbpedia.org/ontology/parent> ?result . ?result <http://dbpedia.org/ontology/deathPlace> <http://dbpedia.org/resource/Quincy,_Massachusetts> . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?parent WHERE {
  ?author dbo:work ?work .
  ?work rdfs:label ""Exchequer Standards""@en .
  
  ?author a dbo:Politician ;
          dbo:officeHolder ?office .
  
  ?author dbo:deathPlace dbr:Quincy,_Massachusetts .

  OPTIONAL { ?author dbp:parent ?parent . }
}
```",3,5,4,2,2,3,3,71,0,0,2,0,0.0,0
955,4,train,"Give me the reference, that is a band and a group and an organisation, to Street Dogs.","SELECT ?result WHERE { ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Group>. ?result <http://xmlns.com/foaf/0.1/name> ""Street Dogs""@en . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Band>. ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?streetDogs WHERE {
  ?streetDogs a dbo:Band .
  ?streetDogs rdfs:label ""Street Dogs""@en .
  OPTIONAL { ?streetDogs dbo:organization ?org . }
}
```",1,4,2,1,1,3,2,20,1,0,0,1.0,1.0,1.0
273,3,train,Give me the child of Giovanni Agnelli.,SELECT ?result WHERE { <http://dbpedia.org/resource/Giovanni_Agnelli> <http://dbpedia.org/ontology/child> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>

SELECT ?child WHERE {
  ?person dbo:givenName ""Giovanni""@en .
  ?person dbo:familyName ""Agnelli""@en .
  ?person dbo:child ?child .
}
```",1,1,2,1,1,3,2,20,0,0,1,0,0.0,0
965,25,train,"Give me the parent of the person born, that is a noble, as Prince George of Battenberg and parent of Louise Mountbatten.","SELECT ?result WHERE { ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Noble>. <http://dbpedia.org/resource/Louise_Mountbatten> <http://dbpedia.org/ontology/parent> ?result . ?v0 <http://dbpedia.org/ontology/parent> ?result . ?v0 <http://dbpedia.org/property/birthName> ""Prince George of Battenberg""@en . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?parent WHERE {
  ?parent dbo:child dbr:Prince_George_of_Battenberg .
  ?parent dbo:child dbr:Louise_Mountbatten .
  ?parent a dbo:NoblePerson .
}
```",3,4,4,2,2,3,3,71,0,0,2,0,0.0,0
865,37,train,"Give me the father of the child, that is a politician, of the spouse of Syeda Shahar Banu and father of Shahla Khatun.",SELECT ?result WHERE { ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v2 <http://dbpedia.org/property/father> ?v0 . ?v2 <http://dbpedia.org/property/father> ?result . <http://dbpedia.org/resource/Syeda_Shahar_Banu> <http://dbpedia.org/ontology/spouse> ?v0 . <http://dbpedia.org/resource/Shahla_Khatun> <http://dbpedia.org/property/father> ?result . },"```sparql
SELECT ?father WHERE {
  ?shaharBanu dbo:spouse ?spouse .
  FILTER (str(?shaharBanu) = ""Syeda_Shahar_Banu"") .

  ?child dbo:parent ?spouse ;
         rdf:type dbo:Politician ;
         dbo:child ?shahlaKhatun .
  FILTER (str(?shahlaKhatun) = ""Shahla_Khatun"") .

  ?child dbo:father ?father .
}
```",4,5,5,3,2,3,3,71,0,0,1,0,0.0,0
978,9,train,"Who is the professional, that is a musical artist and an artist, in the award of Michel Claparède?",SELECT ?result WHERE { ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. <http://dbpedia.org/resource/Michel_Claparède> <http://dbpedia.org/property/awards> ?v0 . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. ?result <http://dbpedia.org/property/occupation> ?v0 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?recipient WHERE {
  ?award dbo:winner ?recipient .
  FILTER (str(?award) = ""Michel_Claparède_Award"")
  
  ?recipient dbo:occupation ?occupation1 .
  ?recipient dbo:occupation ?occupation2 .

  VALUES ?musicOccupation { 
    dbr:Singer 
    dbr:Musician 
    dbr:Bands_and_musicians
  }
  VALUES ?artOccupation {
    dbr:Artist 
    dbr:Painter 
    dbr:Sculptor
  }

  FILTER (?occupation1 IN ?musicOccupation && ?occupation2 IN ?artOccupation) ||
        (?occupation1 IN ?artOccupation && ?occupation2 IN ?musicOccupation)
}
```",2,4,3,2,1,3,2,20,0,0,8677,0,0.0,0
365,13,train,"Give me the person born as the birth name of the commander, that is an office holder, in Ukrainian–Soviet War.",SELECT ?result WHERE { ?v0 <http://dbpedia.org/property/birthName> ?v1 . <http://dbpedia.org/resource/Ukrainian–Soviet_War> <http://dbpedia.org/ontology/commander> ?v0 . ?result <http://dbpedia.org/property/birthName> ?v1 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?person ?birthName WHERE {
  ?person dbo:occupation dbr:Military_person .
  ?person dbo:nationality dbr:Ukraine .
  ?person dbo:birthName ?birthName .
  
  # Filter for involvement in the Ukrainian–Soviet War
  ?person dbo:wikiPageWikiLink dbr:Ukrainian_Soviet_War .

  # Check if they held a command position
  ?person dbo:commanderOf ?unit .
  ?unit dbo:participatedIn dbr:Ukrainian_Soviet_War .

  # Check if they were office holders
  OPTIONAL { ?person dbo:officeHolderOf ?office . }
  
  FILTER EXISTS {
    ?person dbo:officeHolderOf ?office .
  }

  FILTER (?birthName != """")
}
ORDER BY ?person
LIMIT 1
```",3,4,4,3,1,3,2,20,0,0,2,0,0.0,0
281,17,train,"Give me the awardee of Volunteer Decoration and awardee of the award, that is a military conflict, of Lawrence Moore Cosgrave.",SELECT ?result WHERE { ?result <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/Volunteer_Decoration> . ?result <http://dbpedia.org/property/awards> ?v1 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. <http://dbpedia.org/resource/Lawrence_Moore_Cosgrave> <http://dbpedia.org/property/awards> ?v1 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?volunteerDecorationAward ?militaryConflictAward WHERE {
  # Find the Volunteer Decoration award received by Lawrence Moore Cosgrave
  ?cosgrave a dbo:Person ;
            foaf:name ""Lawrence Moore Cosgrave""@en .
  
  ?cosgrave dbo:awardReceived ?volunteerDecorationAward .
  ?volunteerDecorationAward rdfs:label ?volunteerLabel .
  FILTER(CONTAINS(LCASE(?volunteerLabel), ""volunteer decoration""))

  # Find another award related to a military conflict
  OPTIONAL {
    ?cosgrave dbo:awardReceived ?militaryConflictAward .
    ?militaryConflictAward dbo:conflict ?conflict .
    ?conflict rdfs:label ?conflictLabel .
    FILTER(CONTAINS(LCASE(?conflictLabel), ""war"") || CONTAINS(LCASE(?conflictLabel), ""battle""))
  }
}
```",3,4,4,2,2,2,3,28,0,0,1,0,0.0,0
935,4,train,"Give me the native of Balochistan, Pakistan.","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Balochistan,_Pakistan> . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?person ?name WHERE {
  ?person a dbo:Person .
  ?person dbo:nationality dbr:Pakistan ;
          dbo:birthPlace dbr:Balochistan_Pakistan .
  OPTIONAL { ?person rdfs:label ?name FILTER (lang(?name) = 'en') }
}
ORDER BY ?name
LIMIT 10
```",1,1,2,1,1,3,2,20,0,0,57,0,0.0,0
791,21,train,"Give me the father of Emperor Go-Toba and spouse of the spouse, that is a royalty, of Emperor Takakura.",SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/spouse> <http://dbpedia.org/resource/Emperor_Takakura> . <http://dbpedia.org/resource/Emperor_Go-Toba> <http://dbpedia.org/property/father> ?result . ?result <http://dbpedia.org/ontology/spouse> ?v1 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. },"```sparql
SELECT ?father WHERE {
  ?goToba dbo:parent ?father .
  ?goToba rdfs:label ""Emperor Go-Toba""@en .
  
  ?takakura dbo:spouse ?spouse .
  ?takakura rdfs:label ""Emperor Takakura""@en .
  
  ?spouse rdf:type dbo:RoyalPerson .
  
  ?spouse dbo:parent ?father .
}
```",3,4,4,2,2,3,3,71,0,0,1,0,0.0,0
83,0,train,Give me the ruling party in Fortaleza.,SELECT ?result WHERE { <http://dbpedia.org/resource/Fortaleza> <http://dbpedia.org/property/leaderParty> ?result . },"```sparql
PREFIX dbp: <http://dbpedia.org/property/>
PREFIX dbo: <http://dbpedia.org/ontology/>

SELECT ?mayorName ?partyName WHERE {
  ?city a dbo:City ;
        rdfs:label ""Fortaleza""@en .
  
  ?city dbo:mayor ?mayor .
  ?mayor foaf:name ?mayorName .

  OPTIONAL { 
    ?mayor dbp:party ?party .
    ?party foaf:name ?partyName .
  }
}
```",1,1,2,1,1,3,2,20,0,0,1,0,0.0,0
955,1,train,Give me the band of Johnny Rioux.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/bandMember> <http://dbpedia.org/resource/Johnny_Rioux> . },"```sparql
PREFIX dbp: <http://dbpedia.org/property/>
PREFIX dbo: <http://dbpedia.org/ontology/>

SELECT ?bandName WHERE {
  ?person foaf:name ""Johnny Rioux""@en .
  ?person dbp:band ?band .
  ?band foaf:name ?bandName .
}
```",1,1,2,1,1,3,2,20,0,0,1,0,0.0,0
445,27,train,Give me the entity in the award of the commander in Battle of Saint-Mihiel.,SELECT ?result WHERE { ?v1 <http://dbpedia.org/property/awards> ?v2 . <http://dbpedia.org/resource/Battle_of_Saint-Mihiel> <http://dbpedia.org/ontology/commander> ?v1 . ?result <http://dbpedia.org/ontology/country> ?v2 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?awardEntity WHERE {
  ?battle dbo:wikiPageRedirects dbr:Battle_of_Saint-Mihiel .
  ?person dbo:commanderOf ?battle .
  ?person dbo:awardsReceived ?award .
  ?award dbo:recipient ?person .
  FILTER EXISTS { ?award rdfs:label ?awardLabel . FILTER(CONTAINS(LCASE(?awardLabel), ""legion of honor"")) }
}
```",3,3,4,3,1,3,3,71,0,0,87241,0,0.0,0
645,8,train,"Give me the office, that is a government agency and an organisation, of Camilo Menéndez Tolosa.",SELECT ?result WHERE { ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/GovernmentAgency>. <http://dbpedia.org/resource/Camilo_Menéndez_Tolosa> <http://dbpedia.org/property/office> ?result . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?officeName WHERE {
  ?person foaf:name ""Camilo Menéndez Tolosa""@en .
  ?person dbo:positionHeld ?office .
  ?office rdfs:label ?officeName .
  FILTER (lang(?officeName) = 'en')
  ?office a ?type .
  VALUES ?type { <http://dbpedia.org/ontology/GovernmentAgency> <http://dbpedia.org/ontology/Organization> }
}
```",1,3,2,1,1,3,3,71,0,0,1,0,0.0,0
645,21,train,Give me the leader of Ministry of the Army (Spain) and commander in the force of Carlos Asensio Cabanillas.,SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Carlos_Asensio_Cabanillas> . ?v1 <http://dbpedia.org/ontology/commander> ?result . <http://dbpedia.org/resource/Ministry_of_the_Army_(Spain)> <http://dbpedia.org/ontology/leader> ?result . },"```sparql
# Query to find the leader of the Ministry of the Army (Spain)
SELECT ?minister WHERE {
  ?minister dbo:officeHolderOf dbr:Ministry_of_Defense_(Spain) .
  ?minister dbo:country dbr:Spain .
}

UNION

# Query to find the commander in the force of Carlos Asensio Cabanillas
SELECT ?commander WHERE {
  ?c a dbo:MilitaryPerson ;
     foaf:name ""Carlos Asensio Cabanillas""@en ;
     dbo:subordinateOf ?commander .
}
```",3,3,4,2,2,3,3,71,0,0,1,0,0.0,0
976,10,train,Give me the office of Mustafa Şentop and office of Naci Bostancı.,SELECT ?result WHERE { <http://dbpedia.org/resource/Mustafa_Şentop> <http://dbpedia.org/property/office> ?result . <http://dbpedia.org/resource/Naci_Bostancı> <http://dbpedia.org/property/office> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT ?person ?officeLabel WHERE {
  VALUES ?person { 
    dbpedia-tr:Mustafa_Şentop 
    dbpedia-tr:Naci_Bostancı
  }
  
  ?person dbo:office ?office .
  SERVICE wikibase:label { bd:serviceParam wikibase:language ""[AUTO_LANGUAGE],en"". }
}
```",2,2,3,1,2,3,3,71,0,0,1,0,0.0,0
158,9,train,"Give me the award, that is a country, of the reference to Adelbert Cronkhite.","SELECT ?result WHERE { ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. ?v0 <http://dbpedia.org/property/awards> ?result . ?v0 <http://xmlns.com/foaf/0.1/name> ""Adelbert Cronkhite""@en . }","```sparql
SELECT ?award ?country WHERE {
  ?person foaf:name ""Adelbert Cronkhite""@en .
  ?person dbo:almaMater dbr:Columbia_University .
  ?person dbo:awards ?award .
  ?award dbo:wikiPageRedirects ?redirect .
  OPTIONAL { ?redirect rdfs:label ?countryLabel . FILTER (lang(?countryLabel) = ""en"") }
  BIND(CASE WHEN EXISTS { ?redirect rdfs:label ?countryLabel . FILTER (lang(?countryLabel) = ""en"") } THEN ?countryLabel ELSE ""United States"" END AS ?country)
}
```",2,3,3,2,1,3,2,20,0,0,1,0,0.0,0
527,2,train,Give me the professional in Actor.,"SELECT ?result WHERE { ?result <http://dbpedia.org/property/occupation> ""Actor""@en . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT DISTINCT ?professional WHERE {
  ?professional rdfs:subClassOf* dbo:Actor .
}
```",1,1,2,1,1,3,2,20,0,4,21580,0.0,0.0,0
465,32,train,"Give me the successor of the child of Alfonso I d'Este and spouse of the child, that is a royalty, of Ferdinand I, Holy Roman Emperor.","SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/successor> ?result . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v1 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Alfonso_I_d'Este> . ?result <http://dbpedia.org/ontology/spouse> ?v3 . <http://dbpedia.org/resource/Ferdinand_I,_Holy_Roman_Emperor> <http://dbpedia.org/ontology/child> ?v3 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?successor WHERE {
  # Step 1: Find a child of Alfonso I d'Este
  ?child dbo:parent dbr:Alfonso_I_d%27Este.

  # Step 2: Find the spouse of this child
  ?spouse dbp:spouse ?child.
  
  # Step 3: Identify Ferdinand I's child who is royalty
  ?royaltyChild dbo:parent dbr:Ferdinand_I,_Holy_Roman_Emperor;
                a dbo:Monarch.

  # Step 4: Determine the successor of the spouse in terms of royal lineage
  ?successor dbp:predecessor ?spouse.
}
```",4,5,5,2,2,3,3,71,0,0,1,0,0.0,0
129,14,train,"Give me the associated musical artist of the actor, that is an organisation, of Dreamville Presents: Revenge and professional in .","SELECT ?result WHERE { ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?result <http://dbpedia.org/property/occupation> """"@en . ?v2 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . <http://dbpedia.org/resource/Dreamville_Presents:_Revenge> <http://dbpedia.org/property/starring> ?v2 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?artist WHERE {
  ?event dbo:associatedMusicalArtist ?artist .
  ?event rdfs:label ""Dreamville Presents: Revenge""@en .
  ?artist a dbo:RecordLabel ;
          dbo:foundingDate ?date .
}
```",3,4,4,2,2,2,3,28,0,0,3,0,0.0,0
888,9,train,"Give me the force, that is a societal event and an event, of the military force of War in Donbas (2014–2022).",SELECT ?result WHERE { ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?result <http://dbpedia.org/ontology/commander> ?v0 . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?v0 <http://dbpedia.org/ontology/battle> <http://dbpedia.org/resource/War_in_Donbas_(2014–2022)> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?militaryForce ?troopNumber ?event 
WHERE {
  # Find the resource for War in Donbas (2014–2022)
  VALUES ?war { dbr:War_in_Donbass_(2014%E2%80%932022) }
  
  # Identify military forces involved
  ?war dbo:militaryForce ?militaryForce .
  
  # Look for troop numbers or military strength
  OPTIONAL {
    ?militaryForce dbo:numberOfTroops ?troopNumber .
  }
  
  # Find related events
  OPTIONAL {
    ?event dbo:relatedEvent ?war .
    ?event rdfs:label ?eventName .
  }
}
```",2,4,3,2,1,3,2,20,0,0,24,0,0.0,0
273,6,train,Give me the parent of Gianni Agnelli and spouse of Edoardo Agnelli (industrialist).,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/spouse> <http://dbpedia.org/resource/Edoardo_Agnelli_(industrialist)> . <http://dbpedia.org/resource/Gianni_Agnelli> <http://dbpedia.org/ontology/parent> ?result . },"```sparql
SELECT ?parent ?spouse WHERE {
  # Find the parent of Gianni Agnelli
  wd:Q123456 wdt:P22 ?parent . 

  # Find the spouse of Edoardo Agnelli
  wd:Q654321 wdt:P26 ?spouse .

  # Check if the parent and spouse are the same individual
  FILTER (?parent = ?spouse)
}
```

Note: `wd:Q123456` should be replaced with the actual DBpedia identifier for Gianni Agnelli, and `wd:Q654321` should be replaced with the identifier for Edoardo Agnelli. These identifiers can be found by querying DBpedia or using a service like Wikidata to get the correct QIDs.",2,2,3,1,2,3,2,20,0,0,1,0,0.0,0
839,39,train,"Give me the band of Peter Schorowsky and band of the band, that is a musical artist, of the professional in Musician.","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/bandMember> <http://dbpedia.org/resource/Peter_Schorowsky> . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?v0 <http://dbpedia.org/ontology/associatedMusicalArtist> ?v1 . ?v0 <http://dbpedia.org/property/occupation> ""Musician""@en . ?result <http://dbpedia.org/ontology/bandMember> ?v1 . }","```sparql
# Part 1: Find the band associated with Peter Schorowsky
SELECT ?band WHERE {
    ?person dbo:profession dbr:Musician .
    ?person foaf:name ""Peter Schorowsky""@en .
    ?person dbo:memberOf ?band .
}

UNION

# Part 2: Find a band that is also a musical artist and has another band linked to it
SELECT DISTINCT ?band WHERE {
    ?band a dbr:Band ;
          dbo:genre dbr:Musical_artist ;
          dbo:memberOf ?sub_band .
}
```",4,5,5,3,2,3,3,71,0,0,1,0,0.0,0
417,25,train,"Give me the child of the child, that is a royalty, of Frederick Francis III, Grand Duke of Mecklenburg-Schwerin and child of Christian X of Denmark.","SELECT ?result WHERE { ?result <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Christian_X_of_Denmark> . ?result <http://dbpedia.org/ontology/parent> ?v1 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v1 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Frederick_Francis_III,_Grand_Duke_of_Mecklenburg-Schwerin> . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?grandchild WHERE {
  # Frederick Francis III's children
  VALUES (?frederickChild) { 
    dbr:Alexandrine_of_Mecklenburg-Schwerin 
  }
  
  # Alexandrine of Mecklenburg-Schwerin married Christian X of Denmark
  ?marriage dbo:spouse ?christianX .
  ?marriage dbo:spouse ?frederickChild .

  # Their child, Frederick IX of Denmark
  ?child dbo:parent ?frederickChild ;
         dbo:parent ?christianX ;
         rdfs:label ""Frederick IX""@en .

  # Children of Frederick IX (grandchildren of Alexandrine and Christian X)
  ?grandchild dbo:parent ?child .
  
  # Filter for royalty
  FILTER EXISTS { 
    ?grandchild dbo:title ?title .
    FILTER(CONTAINS(LCASE(?title), ""queen"") || CONTAINS(LCASE(?title), ""king""))
  }
}
```",3,4,4,2,2,3,3,71,0,0,2,0,0.0,0
987,4,train,"Who is the band, that is an artist and a musical artist, of Šako Polumenta?",SELECT ?result WHERE { <http://dbpedia.org/resource/Šako_Polumenta> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?band WHERE {
  ?s dbp:name ""Šako Polumenta""@sl .
  ?s dbo:bandMember ?band .
  ?band a dbo:Band ;
        a dbo:MusicalArtist .
}
```",1,3,2,1,1,3,3,71,0,0,2,0,0.0,0
965,12,train,"Give me the parent of George Mountbatten, 2nd Marquess of Milford Haven and parent of Louise Mountbatten.","SELECT ?result WHERE { <http://dbpedia.org/resource/Louise_Mountbatten> <http://dbpedia.org/ontology/parent> ?result . <http://dbpedia.org/resource/George_Mountbatten,_2nd_Marquess_of_Milford_Haven> <http://dbpedia.org/ontology/parent> ?result . }","```sparql
SELECT ?parent WHERE {
  ?george dbo:parent ?parent .
  ?louise dbo:parent ?parent .
  
  VALUES ?george { dbpedia:George_Mountbatten_2nd_Marquess_of_Milford_Haven }
  VALUES ?louise { dbpedia:Louise_Mountbatten }
}
```",2,2,3,1,2,3,3,71,0,0,2,0,0.0,0
892,11,train,Give me the entity in the profession of Henri Crolla.,SELECT ?result WHERE { <http://dbpedia.org/resource/Henri_Crolla> <http://dbpedia.org/property/occupation> ?v1 . ?result <http://dbpedia.org/ontology/country> ?v1 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?occupation WHERE {
  VALUES ?person { dbr:Henri_Crolla }
  ?person dbo:occupation ?occupation .
}
```",2,2,3,2,1,3,3,71,0,1,13092,0.0,0.0,0
976,6,train,"Who is the mayor, that is a politician and an office holder and Turkish, of Nation Alliance (Turkey)?",SELECT ?result WHERE { <http://dbpedia.org/resource/Nation_Alliance_(Turkey)> <http://dbpedia.org/property/leader> ?result . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?result <http://dbpedia.org/ontology/nationality> <http://dbpedia.org/resource/Turkey>. ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?mayor ?city WHERE {
  ?mayor a dbo:Mayor ;
         dbo:nationality dbr:Turkey ;
         dbo:politicalParty dbr:Nation_Alliance_(Turkey) .
  
  OPTIONAL { ?mayor dbo:officeHolderOf ?city . }
}
```",1,4,2,1,1,3,3,71,0,0,1,0,0.0,0
417,19,train,"Give me the spouse of the parent, that is a royalty, of Count Ingolf of Rosenborg and child of Christian X of Denmark.",SELECT ?result WHERE { ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v0 <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Count_Ingolf_of_Rosenborg> . ?result <http://dbpedia.org/ontology/spouse> ?v0 . ?result <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Christian_X_of_Denmark> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?spouse WHERE {
  # Find Count Ingolf of Rosenborg
  ?ingolf a dbo:Person ;
          dbp:name ""Ingolf of Rosenborg""@en .
  
  # Identify his parents
  ?parent dbo:child ?ingolf .

  # Check if the parent is royalty and child of Christian X of Denmark
  ?parent dbo:royaltyTitle ?title ;
          dbo:childOf ?christianX .
  ?christianX a dbo:Person ;
              dbp:name ""Christian X of Denmark""@en .

  # Find the spouse of this royal parent
  ?parent dbo:spouse ?spouse .
}
```",3,4,4,2,2,3,3,71,0,0,1,0,0.0,0
353,0,train,Give me the alma mater of Daniil Yegorov.,SELECT ?result WHERE { <http://dbpedia.org/resource/Daniil_Yegorov> <http://dbpedia.org/ontology/almaMater> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT ?almaMater WHERE {
  ?person foaf:name ""Daniil Yegorov""@en .
  ?person dbo:almaMater ?almaMater .
}
```",1,1,2,1,1,2,2,9,1,0,0,1.0,1.0,1.0
456,13,train,Give me the professional in the alter ego of The Shadow.,SELECT ?result WHERE { <http://dbpedia.org/resource/The_Shadow> <http://dbpedia.org/property/alterEgo> ?v1 . ?result <http://dbpedia.org/property/occupation> ?v1 . },"```sparql
SELECT ?person WHERE {
  ?character dbo:alterEgoOf ?person .
  ?character rdfs:label ""The Shadow""@en .
}
```",2,2,3,2,1,3,3,71,0,0,39640,0,0.0,0
554,4,train,"Who is the band, that is an artist, of Rita Redshoes?",SELECT ?result WHERE { ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. <http://dbpedia.org/resource/Rita_Redshoes> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?bandName WHERE {
  ?artist a dbo:MusicalArtist ;
          foaf:name ""Rita Redshoes""@en .
  OPTIONAL { ?artist dbo:band ?band . }
  ?band foaf:name ?bandName .
}
```",1,2,2,1,1,3,2,20,0,0,1,0,0.0,0
865,21,train,"Give me the father of Shahla Khatun and native of the residence, that is a country, of Ram Jaipal Singh Yadav.",SELECT ?result WHERE { <http://dbpedia.org/resource/Shahla_Khatun> <http://dbpedia.org/property/father> ?result . ?result <http://dbpedia.org/ontology/birthPlace> ?v2 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. <http://dbpedia.org/resource/Ram_Jaipal_Singh_Yadav> <http://dbpedia.org/property/residence> ?v2 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?shahlaFather ?ramNativeCountry WHERE {
  # Find Shahla Khatun's father
  ?shahla a dbo:Person ;
          foaf:name ""Shahla Khatun""@en .
  OPTIONAL { ?shahla dbo:father ?shahlaFather . }

  # Find Ram Jaipal Singh Yadav's native place and check if it is a country
  ?ram a dbo:Person ;
       foaf:name ""Ram Jaipal Singh Yadav""@en .
  OPTIONAL { ?ram dbo:nativePlace ?nativePlace . }
  
  OPTIONAL {
    ?nativePlace a dbo:Country .
    BIND(str(?nativePlace) AS ?ramNativeCountry)
  }

  FILTER(BOUND(?shahlaFather))
  FILTER(BOUND(?ramNativeCountry))
}
```",3,4,4,2,2,3,3,71,0,0,1,0,0.0,0
281,15,train,"Give me the commander in the war, that is an event and a military conflict, of Roy Boehm and awardee of Volunteer Decoration.",SELECT ?result WHERE { <http://dbpedia.org/resource/Roy_Boehm> <http://dbpedia.org/ontology/battle> ?v1 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?result <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/Volunteer_Decoration> . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v1 <http://dbpedia.org/ontology/commander> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?war ?commander WHERE {
  ?person rdfs:label ""Roy Boehm""@en.
  ?person dbo:awardReceived dbr:Volunteer_Decoration.
  
  ?event dbo:commandedBy ?person;
         a dbo:MilitaryConflict, dbo:Event.

  ?event rdfs:label ?war.
  ?person rdfs:label ?commander.
}
```",3,5,4,2,2,2,3,28,0,0,1,0,0.0,0
47,15,train,"Give me the administration of the commander, that is a politician, in Operation Green Hunt.",SELECT ?result WHERE { ?result <http://dbpedia.org/property/governor> ?v1 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. <http://dbpedia.org/resource/Operation_Green_Hunt> <http://dbpedia.org/ontology/commander> ?v1 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?administration WHERE {
  ?person a dbo:Politician ;
          foaf:name ""Manmohan Singh""@en .
  
  OPTIONAL { 
    ?person dbo:officeHolderOf dbr:Prime_Minister_of_India .
  }
  
  OPTIONAL {
    ?operation dbo:relatedTo ?person .
    FILTER(CONTAINS(LCASE(?operation), ""green hunt""))
  }

  ?administration dbo:head ?person ;
                  a dbo:Government .
}
```",2,3,3,2,1,3,3,71,0,0,189,0,0.0,0
170,3,train,Give me the work of International Energy Agency.,SELECT ?result WHERE { ?result <http://dbpedia.org/property/author> <http://dbpedia.org/resource/International_Energy_Agency> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?work ?title WHERE {
  VALUES ?iea { dbr:International_Energy_Agency }
  ?work dbo:author ?iea .
  OPTIONAL { ?work rdfs:label ?title . FILTER (lang(?title) = 'en') }
}
ORDER BY ?title
```",1,1,2,1,1,2,3,28,1,1,1,0.5,0.5,0.5
129,3,train,Give me the mayor of 1999 West Dunbartonshire Council election.,SELECT ?result WHERE { <http://dbpedia.org/resource/1999_West_Dunbartonshire_Council_election> <http://dbpedia.org/property/leader> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?mayor WHERE {
  ?election dbo:electionDate ?date .
  FILTER (YEAR(?date) = 1999)
  ?election dbo:place dbr:West_Dunbartonshire_Council .
  ?election dbo:electedOfficial ?mayor .
}
```",1,1,2,1,1,2,3,28,0,0,4,0,0.0,0
47,18,train,Give me the office of Suvendu Adhikari and office of Ajoy Mukherjee and office of Bidesh Ranjan Bose.,SELECT ?result WHERE { <http://dbpedia.org/resource/Ajoy_Mukherjee> <http://dbpedia.org/property/office> ?result . <http://dbpedia.org/resource/Bidesh_Ranjan_Bose> <http://dbpedia.org/property/office> ?result . <http://dbpedia.org/resource/Suvendu_Adhikari> <http://dbpedia.org/property/office> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?person ?officeTitle WHERE {
  VALUES ?person { 
    dbr:Suvendu_Adhikari 
    dbr:Ajoy_Mukherjee 
    dbr:Bidesh_Ranjan_Bose
  }
  
  ?person dbo:office ?office .
  ?office dbo:title ?officeTitle .
}
```",3,3,4,1,3,3,3,71,0,0,1,0,0.0,0
917,16,train,"Who is the father of the spouse, that is a royalty, of Leleiohoku I?",SELECT ?result WHERE { ?v0 <http://dbpedia.org/property/father> ?result . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v0 <http://dbpedia.org/ontology/spouse> <http://dbpedia.org/resource/Leleiohoku_I> . },"```sparql
SELECT ?fatherLabel WHERE {
  ?leleiohoku1 dbo:spouse ?spouse .
  ?spouse rdfs:label ?spouseLabel .
  FILTER(CONTAINS(LCASE(?spouseLabel), ""leleiohoku i"") && CONTAINS(LCASE(?spouseLabel), ""spouse"")) .
  
  OPTIONAL { ?spouse dbo:royalty true . }
  
  ?spouse dbo:father ?father .
  ?father rdfs:label ?fatherLabel .
}
```",2,3,3,2,1,3,3,71,0,0,2,0,0.0,0
715,18,train,Give me the commander in Rif War and commander in Spanish Civil War and leader of Ministry of the Air (Spain).,SELECT ?result WHERE { <http://dbpedia.org/resource/Spanish_Civil_War> <http://dbpedia.org/ontology/commander> ?result . <http://dbpedia.org/resource/Ministry_of_the_Air_(Spain)> <http://dbpedia.org/ontology/leader> ?result . <http://dbpedia.org/resource/Rif_War> <http://dbpedia.org/ontology/commander> ?result . },"```sparql
# Query for Commander in Rif War
SELECT ?commander WHERE {
  ?event dcterms:subject dbc:Rif_War .
  ?event dbo:agent ?commander .
  ?commander rdf:type dbo:Military_person .
  FILTER(CONTAINS(LCASE(STR(?commander)), ""rif war commander""))
}

UNION

# Query for Commander in Spanish Civil War
SELECT ?commander WHERE {
  ?event dcterms:subject dbc:Spanish_Civil_War .
  ?event dbo:agent ?commander .
  ?commander rdf:type dbo:Military_person .
  FILTER(CONTAINS(LCASE(STR(?commander)), ""spanish civil war commander""))
}

UNION

# Query for Leader of Ministry of the Air (Spain)
SELECT ?leader WHERE {
  ?ministry dcterms:subject dbc:Ministry_of_the_Air_(Spain) .
  ?ministry dbo:head ?leader .
  ?leader rdf:type dbo:Government_official .
  FILTER(CONTAINS(LCASE(STR(?leader)), ""minister of air""))
}
```",3,3,4,1,3,3,3,71,0,0,1,0,0.0,0
507,28,train,"Give me the spouse of the person born as Anne Voase Coates and professional in Film director, television director and director of Entertaining Mr Sloane (film).","SELECT ?result WHERE { ?result <http://dbpedia.org/property/occupation> ""Film director, television director""@en . <http://dbpedia.org/resource/Entertaining_Mr_Sloane_(film)> <http://dbpedia.org/ontology/director> ?result . ?result <http://dbpedia.org/ontology/spouse> ?v1 . ?v1 <http://dbpedia.org/property/birthName> ""Anne Voase Coates""@en . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?spouse WHERE {
  VALUES ?anneVoaseCoates { dbr:Anne_Voase_Coates }
  ?anneVoaseCoates dbo:spouseOrPartner ?spouse .
}
```",4,4,5,2,3,3,3,71,0,0,1,0,0.0,0
965,2,train,"Give me the parent of George Mountbatten, 2nd Marquess of Milford Haven.","SELECT ?result WHERE { <http://dbpedia.org/resource/George_Mountbatten,_2nd_Marquess_of_Milford_Haven> <http://dbpedia.org/ontology/parent> ?result . }","```sparql
SELECT ?parent WHERE {
  dbpedia:George_Mountbatten,_2nd_Marquess_of_Milford_Haven dbo:father ?parent .
}
```",1,1,2,1,1,3,3,71,0,0,2,0,0.0,0
579,4,train,"Give me the native, that is an office holder, of Edinburgh.",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Edinburgh> . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?person ?office WHERE {
  ?person dbo:birthPlace dbr:Edinburgh .
  ?person dbo:officeHolder ?office .
}
```",1,2,2,1,1,3,2,20,0,0,88,0,0.0,0
715,12,train,Give me the commander in Spanish Civil War and leader of Ministry of the Air (Spain).,SELECT ?result WHERE { <http://dbpedia.org/resource/Ministry_of_the_Air_(Spain)> <http://dbpedia.org/ontology/leader> ?result . <http://dbpedia.org/resource/Spanish_Civil_War> <http://dbpedia.org/ontology/commander> ?result . },"```sparql
SELECT ?person ?role WHERE {
  ?person dbo:wikiPageID ""Juan_Negrín"" .
  OPTIONAL { 
    ?person dbo:positionHeld dbr:Ministerio_de_Aire .
    ?person rdfs:label ?role .
  }
}
```",2,2,3,1,2,3,3,71,0,0,1,0,0.0,0
445,2,train,Give me the entity in United Kingdom.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/United_Kingdom> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?entity WHERE {
  ?entity dbo:location ?place .
  ?place dbp:country ""United Kingdom""^^xsd:string .
}
LIMIT 10
```",1,1,2,1,1,3,3,71,0,0,42999,0,0.0,0
326,0,train,Give me the resident of Berkshire.,SELECT ?result WHERE { ?result <http://dbpedia.org/property/residence> <http://dbpedia.org/resource/Berkshire> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?person ?name WHERE {
  VALUES ?berkshire (dbr:Berkshire (England) dbr:Berkshire (United States))
  
  ?person dbo:birthPlace ?berkshire .
  UNION
  ?person dbo:residence ?berkshire .

  OPTIONAL { ?person rdfs:label ?name FILTER (lang(?name) = 'en') }
}
ORDER BY ?name
```",1,1,2,1,1,3,2,20,0,0,5,0,0.0,0
274,0,train,Give me the band member of Dizzy Gillespie.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/associatedMusicalArtist> <http://dbpedia.org/resource/Dizzy_Gillespie> . },"```sparql
PREFIX dbp: <http://dbpedia.org/property/>
PREFIX dbo: <http://dbpedia.org/ontology/>

SELECT ?bandMember WHERE {
  ?gillespie dbo:alias ""Dizzy Gillespie""@en .
  ?gillespie dbp:bandMember ?bandMember .
}
```",1,1,2,1,1,2,3,28,0,0,67,0,0.0,0
36,9,train,Give me the person born as Ayo Makun and person born in 1971.,"SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/birthYear> ""1971""^^<http://www.w3.org/2001/XMLSchema#gYear> . ?result <http://dbpedia.org/property/birthName> ""Ayo Makun""@en . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT ?person ?givenName ?familyName ?birthYear WHERE {
  ?person a dbo:Person .
  OPTIONAL { ?person foaf:givenName ?givenName . }
  OPTIONAL { ?person foaf:familyName ?familyName . }
  ?person dbo:birthYear ?birthYear .

  FILTER (?birthYear = ""1971""^^xsd:gYear)
  
  # Assuming Ayo Makun is known by a specific DBpedia resource or alias
  VALUES ?givenName { ""Ayo"" }
  VALUES ?familyName { ""Makun"" }

}
```",2,2,3,1,2,2,3,28,0,0,1,0,0.0,0
773,32,train,Give me the parent of the successor of Charles the Bald and spouse of the father of Charles the Fat.,SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/spouse> ?result . <http://dbpedia.org/resource/Charles_the_Bald> <http://dbpedia.org/ontology/successor> ?v3 . <http://dbpedia.org/resource/Charles_the_Fat> <http://dbpedia.org/property/father> ?v1 . ?result <http://dbpedia.org/ontology/child> ?v3 . },"```sparql
# Step 1: Find Charles the Bald's successor
SELECT ?successor WHERE {
  wd:Q134064 # Charles the Bald
  wdt:P39 ?position .
  ?position wdt:P106 wd:Q82955 ; # monarch of a country
            wdt:P1373 ?successor .
}

# Step 2: Find the parent of the successor
SELECT ?parent WHERE {
  ?successor wdt:P22 ?parent .
}

# Step 3: Identify Charles the Fat's father
SELECT ?father WHERE {
  wd:Q134065 # Charles the Fat
  wdt:P22 ?father .
}

# Step 4: Find the spouse of Charles the Fat's father
SELECT ?spouse WHERE {
  ?father wdt:P26 ?spouse .
}

# Combine results to find if they are the same individual
SELECT DISTINCT ?parent ?spouse WHERE {
  # Successor of Charles the Bald and their parent
  wd:Q134064 wdt:P39 ?position1 .
  ?position1 wdt:P106 wd:Q82955 ;
             wdt:P1373 ?successor .
  ?successor wdt:P22 ?parent .

  # Father of Charles the Fat and his spouse
  wd:Q134065 wdt:P22 ?father .
  ?father wdt:P26 ?spouse .
}
```",4,4,5,2,2,3,3,71,0,0,1,0,0.0,0
917,38,train,Give me the child of the father of Keʻelikōlani and child of the father of Kamehameha IV.,SELECT ?result WHERE { <http://dbpedia.org/resource/Keʻelikōlani> <http://dbpedia.org/property/father> ?v3 . <http://dbpedia.org/resource/Kamehameha_IV> <http://dbpedia.org/property/father> ?v0 . ?result <http://dbpedia.org/property/father> ?v0 . ?result <http://dbpedia.org/ontology/parent> ?v3 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?child WHERE {
  # Keʻelikōlani's father
  dbr:Keʻelikōlani dbo:father dbr:Kahekili_II_of_Maui .
  
  # Kamehameha IV's father
  dbr:Kamehameha_IV dbo:father dbr:Kamehameha_I .

  # Child of Kahekili II (Keʻelikōlani's father)
  ?child1 dbo:parent dbr:Kahekili_II_of_Maui .
  
  # Child of Kamehameha I (Kamehameha IV's father)
  ?child2 dbo:parent dbr:Kamehameha_I .

  # Find the common child
  FILTER (?child1 = ?child2)
  BIND(?child1 AS ?child)
}
```",4,4,5,2,2,3,3,71,0,0,3,0,0.0,0
791,12,train,Give me the predecessor of Emperor Antoku and father of Emperor Go-Toba.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/successor> <http://dbpedia.org/resource/Emperor_Antoku> . <http://dbpedia.org/resource/Emperor_Go-Toba> <http://dbpedia.org/property/father> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?emperor WHERE {
  ?antoku dbo:predecessor ?emperor .
  ?goToba dbo:father ?emperor .
  
  VALUES ?antoku { dbr:Emperor_Antoku }
  VALUES ?goToba { dbr:Emperor_Go-Toba }
}
```",2,2,3,1,2,3,3,71,0,0,1,0,0.0,0
456,6,train,Give me the alter ego of The Shadow.,SELECT ?result WHERE { <http://dbpedia.org/resource/The_Shadow> <http://dbpedia.org/property/alterEgo> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?alterEgo WHERE {
  dbr:The_Shadow dbo:aliasName ?alterEgo .
}
```",1,1,2,1,1,3,3,71,0,0,3,0,0.0,0
965,39,train,"Give me the parent of the person born, that is a noble, as the birth name of George Mountbatten, 2nd Marquess of Milford Haven and parent of Louise Mountbatten.","SELECT ?result WHERE { ?v0 <http://dbpedia.org/property/birthName> ?v2 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Noble>. ?v0 <http://dbpedia.org/ontology/parent> ?result . <http://dbpedia.org/resource/Louise_Mountbatten> <http://dbpedia.org/ontology/parent> ?result . <http://dbpedia.org/resource/George_Mountbatten,_2nd_Marquess_of_Milford_Haven> <http://dbpedia.org/property/birthName> ?v2 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?parent WHERE {
  ?person dbo:birthName ""Prince Louis of Battenberg""@en .
  ?person dbo:child dbr:Louise_Mountbatten .
  ?person a dbo:Noble .

  OPTIONAL { ?person rdfs:label ?name . FILTER (lang(?name) = 'en') }
  
  ?parent dbo:child ?person .
}
```",4,5,5,3,2,3,3,71,0,0,2,0,0.0,0
122,1,train,Give me the band of Gift of Gab (rapper).,SELECT ?result WHERE { <http://dbpedia.org/resource/Gift_of_Gab_(rapper)> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . },"```sparql
PREFIX dbp: <http://dbpedia.org/property/>
PREFIX dbo: <http://dbpedia.org/ontology/>

SELECT ?band WHERE {
  ?person a dbo:MusicalArtist ;
          foaf:name ""Gift of Gab""@en .
  OPTIONAL { ?person dbp:memberOfBand ?band . }
}
```",1,1,2,1,1,2,2,9,0,0,4,0,0.0,0
341,1,train,Give me the writer of In Love & War (Amerie album).,SELECT ?result WHERE { <http://dbpedia.org/resource/In_Love_&_War_(Amerie_album)> <http://dbpedia.org/property/writer> ?result . },"```sparql
SELECT ?writer WHERE {
  ?album dbo:title ""In Love & War""@en .
  ?album dbo:artist dbr:Amerie .
  ?album dbo:writer ?writer .
}
```",1,1,2,1,1,2,2,9,0,0,57,0,0.0,0
976,2,train,Give me the office of Naci Bostancı.,SELECT ?result WHERE { <http://dbpedia.org/resource/Naci_Bostancı> <http://dbpedia.org/property/office> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?office WHERE {
  ?person a dbo:Person ;
          foaf:name ""Naci Bostancı""@en .
  OPTIONAL { ?person dbo:occupation ?office . }
}
```",1,1,2,1,1,3,3,71,0,0,4,0,0.0,0
507,31,train,Give me the director of Entertaining Mr Sloane (film) and spouse of the person born as the birth name of Anne V. Coates.,SELECT ?result WHERE { <http://dbpedia.org/resource/Anne_V._Coates> <http://dbpedia.org/property/birthName> ?v1 . <http://dbpedia.org/resource/Entertaining_Mr_Sloane_(film)> <http://dbpedia.org/ontology/director> ?result . ?v0 <http://dbpedia.org/property/birthName> ?v1 . ?result <http://dbpedia.org/ontology/spouse> ?v0 . },"```sparql
SELECT DISTINCT ?directorSpouse ?coatesSpouse WHERE {
  # Part 1: Director of ""Entertaining Mr Sloane"" (film)
  ?film dbo:title ""Entertaining Mr Sloane""@en .
  ?film dbo:film dbpedia:Entertaining_Mr._Sloane_(1969_film) .
  ?film dbo:director ?director .

  # Get the spouse of the director
  OPTIONAL { ?director foaf:surname ?surname . }
  OPTIONAL { ?director dbp:spouse ?directorSpouse . }

  # Part 2: Anne V. Coates' birth name and spouse
  ?anneVCoates dbo:birthName ?birthName .
  ?anneVCoates foaf:name ""Anne V. Coates""@en .

  # Find a person with the same birth name as Anne V. Coates
  OPTIONAL { ?person foaf:surname ?birthName . }
  
  # Get the spouse of this person
  OPTIONAL { ?person dbp:spouse ?coatesSpouse . }

  FILTER(?director != ?person) # Ensure we are not comparing the same entity
}
```",4,4,5,3,2,3,3,71,0,0,1,0,0.0,0
715,9,train,Give me the commander in Rif War and commander in Spanish Civil War.,SELECT ?result WHERE { <http://dbpedia.org/resource/Spanish_Civil_War> <http://dbpedia.org/ontology/commander> ?result . <http://dbpedia.org/resource/Rif_War> <http://dbpedia.org/ontology/commander> ?result . },"```sparql
SELECT ?rifWarCommander ?rifWarCommanderLabel ?civilWarCommander ?civilWarCommanderLabel WHERE {
  ?rifWarCommander dbp:commanderIn ?rifWar .
  ?rifWar rdfs:label ""Rif War""@en .
  ?rifWarCommander rdfs:label ?rifWarCommanderLabel .

  ?civilWarCommander dbp:commanderIn ?civilWar .
  ?civilWar rdfs:label ""Spanish Civil War""@en .
  ?civilWarCommander rdfs:label ?civilWarCommanderLabel .

  FILTER(lang(?rifWarCommanderLabel) = 'en')
  FILTER(lang(?civilWarCommanderLabel) = 'en')
}
LIMIT 2
```",2,2,3,1,2,3,3,71,0,0,4,0,0.0,0
987,34,train,"Give me the entity in Montenegro and birth place of the band, that is an artist and a musical artist, of the band, that is an artist, of Dado Polumenta.",SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?result <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Montenegro> . ?v3 <http://dbpedia.org/ontology/associatedMusicalArtist> ?v1 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. <http://dbpedia.org/resource/Dado_Polumenta> <http://dbpedia.org/ontology/associatedMusicalArtist> ?v3 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. ?v1 <http://dbpedia.org/ontology/birthPlace> ?result . },"```sparql
SELECT ?birthPlace WHERE {
  wd:Q123456 wdt:P31/wdt:P279* wd:Q215627 ; # Dado Prljaca (artist) and member of Zabranjeno Pušenje
    wdt:P46 wd:Q789012 . # Zabranjeno Pušenje has a lead artist Gibonni

  wd:Q789012 wdt:P19 ?birthPlace . # Gibonni's birthplace

  FILTER EXISTS { 
    ?birthPlace wdt:P31 wd:Q199378 . # Birthplace is an entity in Montenegro
  }
}
```

Note: Replace `wd:Q123456` with the actual DBpedia identifier for Dado Prljaca and `wd:Q789012` with the identifier for Gibonni. The identifiers are placeholders here as they need to be looked up or confirmed from a reliable source.",4,7,5,3,2,3,3,71,0,0,1,0,0.0,0
417,9,train,Give me the child of Christian X of Denmark and spouse of Princess Caroline-Mathilde of Denmark.,SELECT ?result WHERE { ?result <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Christian_X_of_Denmark> . ?result <http://dbpedia.org/ontology/spouse> <http://dbpedia.org/resource/Princess_Caroline-Mathilde_of_Denmark> . },"```sparql
SELECT ?child ?spouse WHERE {
  ?christianX dbo:spouse ?queenAlexandra .
  ?christianX dbo:child ?child .
  
  ?princessCarolineMathilde dbo:spouse ?spouse .

  FILTER(?child = <http://dbpedia.org/resource/Frederick_IX_of_Denmark> || ?child = <http://dbpedia.org/resource/Princess_Thyra_of_Denmark>)
}
```",2,2,3,1,2,3,3,71,1,59926,0,1.668696914579405e-05,1.0,3.3373381391002534e-05
606,5,train,Who is the alumnus of University of Pennsylvania?,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/almaMater> <http://dbpedia.org/resource/University_of_Pennsylvania> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?person WHERE {
  ?person dbo:almaMater dbr:University_of_Pennsylvania .
}
```",1,1,2,1,1,3,2,20,1114,0,0,1.0,1.0,1.0
606,14,train,"Give me the birthplace of the alumnus of the figure known, that is a university and a sports league and an educational institution, as Penn Quakers.",SELECT ?result WHERE { ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsLeague>. ?v0 <http://dbpedia.org/ontology/almaMater> ?v2 . ?v0 <http://dbpedia.org/ontology/birthPlace> ?result . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/EducationalInstitution>. ?v2 <http://dbpedia.org/property/nickname> <http://dbpedia.org/resource/Penn_Quakers> . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/University>. },"```sparql
SELECT ?birthPlace WHERE {
  ?person dbo:almaMater dbr:University_of_Pennsylvania .
  ?person foaf:name ""Bill Gates""@en .
  ?person dbp:birthPlace ?birthPlace .
}
```",3,6,4,3,1,3,2,20,0,0,598,0,0.0,0
41,3,train,"Who is the leader, that is a politician and an office holder, of 2005 Castlereagh Borough Council election?",SELECT ?result WHERE { <http://dbpedia.org/resource/2005_Castlereagh_Borough_Council_election> <http://dbpedia.org/property/leader> ?result . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?leader WHERE {
  ?council a dbo:Council ;
           dbo:election ?election .
  
  ?election dbo:date ""2005""^^xsd:gYear ;
            dbo:result ?result .

  ?result dbo:officeHolder ?leader .
  
  ?leader a dbo:Politician ;
          dbo:officeHolderOf ?council .

  FILTER (strstarts(str(?council), str(dbr:Castlereagh_Borough_Council)))
}
```",1,3,2,1,1,2,3,28,0,0,4,0,0.0,0
917,32,train,"Give me the parent of the child, that is a royalty, of Kamehameha IV and child of the father of Keʻelikōlani.",SELECT ?result WHERE { ?v1 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Kamehameha_IV> . ?result <http://dbpedia.org/ontology/child> ?v1 . <http://dbpedia.org/resource/Keʻelikōlani> <http://dbpedia.org/property/father> ?v3 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?result <http://dbpedia.org/ontology/parent> ?v3 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?parent WHERE {
  # Kamehameha IV's child who is royalty
  ?child dbo:spouse ?kamehamehaIV .
  ?kamehamehaIV dbr:Kamehameha_IV .

  # Keʻelikōlani's father
  ?keelikolanisFather dbo:child dbr:Keʻelikōlani .
  
  # Child of Kamehameha IV who is royalty
  ?child dbo:parent ?parent .

  # Check if the parent is also a parent of Keʻelikōlani's father's child
  OPTIONAL {
    ?keelikolanisFatherChild dbo:parent ?parent .
    ?keelikolanisFatherChild dbo:child dbr:Keʻelikōlani .
  }
  
  FILTER EXISTS { ?child a dbo:Monarch } # Ensure the child is royalty
}
```",4,5,5,2,2,3,3,71,0,0,1,0,0.0,0
507,19,train,Give me the spouse of the person born as Anne Voase Coates and director of Entertaining Mr Sloane (film).,"SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/spouse> ?v0 . <http://dbpedia.org/resource/Entertaining_Mr_Sloane_(film)> <http://dbpedia.org/ontology/director> ?result . ?v0 <http://dbpedia.org/property/birthName> ""Anne Voase Coates""@en . }","```sparql
SELECT ?spouse WHERE {
  ?person foaf:name ""Anne Voase Coates""@en .
  ?person dbo:birthName ""Anne Voase Coates"" .
  ?film dbo:director ?person ;
        rdfs:label ""Entertaining Mr Sloane""@en .
  OPTIONAL { ?person dbo:spouse ?spouse . }
}
```",3,3,4,2,2,3,3,71,0,0,1,0,0.0,0
216,21,train,Give me the player in the coach of Croatia national under-21 football team and team of Ognjen Vukojević.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/coach> <http://dbpedia.org/resource/Ognjen_Vukojević> . ?v1 <http://dbpedia.org/ontology/team> ?result . <http://dbpedia.org/resource/Croatia_national_under-21_football_team> <http://dbpedia.org/ontology/coach> ?v1 . },"```sparql
# Query to find the coach of the Croatia national under-21 football team
SELECT ?coach WHERE {
  ?team dct:subject dbc:Croatia_national_under-21_football_team .
  ?team dbo:coach ?coach .
}

UNION

# Query to find the teams Ognjen Vukojević played for
SELECT ?team WHERE {
  ?player foaf:name ""Ognjen Vukojević""@en .
  ?player dbo:playsFor ?team .
}
```",3,3,4,2,2,3,3,71,0,0,1,0,0.0,0
826,30,train,"Give me the spouse of Anna Magdalena Appel and predecessor of the parent of Prince Friedrich of Hesse and by Rhine and successor of Louis II, Grand Duke of Hesse.","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/successor> ?v1 . <http://dbpedia.org/resource/Prince_Friedrich_of_Hesse_and_by_Rhine> <http://dbpedia.org/ontology/parent> ?v1 . <http://dbpedia.org/resource/Louis_II,_Grand_Duke_of_Hesse> <http://dbpedia.org/ontology/successor> ?result . <http://dbpedia.org/resource/Anna_Magdalena_Appel> <http://dbpedia.org/ontology/spouse> ?result . }","```sparql
SELECT ?person WHERE {
  # Spouse of Anna Magdalena Bach
  ?bach a dbo:Person ;
        foaf:name ""Johann Sebastian Bach""@en .
  ?annaMagdalenaBach a dbo:Person ;
                     foaf:name ""Anna Magdalena Bach""@en ;
                     dbo:spouse ?bach .

  # Predecessor of the parent of Prince Friedrich of Hesse and by Rhine
  ?princeFriedrich a dbo:Person ;
                   foaf:name ""Prince Friedrich of Hesse and by Rhine""@en .
  ?aliceOfUK a dbo:Person ;
             foaf:name ""Princess Alice of the United Kingdom""@en ;
             dbo:spouse ?louisIVHesse .
  ?louisIVHesse a dbo:Person ;
                foaf:name ""Louis IV, Grand Duke of Hesse""@en ;
                dbo:childOf ?princessAliceAndLudwigIII .
  ?ludwigIIIHesse a dbo:Person ;
                  foaf:name ""Ludwig III, Grand Duke of Hesse""@en ;
                  dbo:parent ?princeFriedrich .

  # Successor of Louis II, Grand Duke of Hesse
  ?louisIIHesse a dbo:Person ;
                foaf:name ""Louis II, Grand Duke of Hesse""@en .
  ?ernstLudwigHesse a dbo:Person ;
                    foaf:name ""Ernst Ludwig, Grand Duke of Hesse""@en ;
                    dbo:succeededBy ?louisIIHesse .

  # Find the person who fits all criteria
  ?person = ?bach ;
           = ?ludwigIIIHesse ;
           = ?ernstLudwigHesse .
}
```",4,4,5,2,3,3,3,71,0,0,1,0,0.0,0
93,13,train,"Give me the capital of the headquarter, that is a region and a settlement, of the headquarter of Clam Cove Pictograph Site.",SELECT ?result WHERE { ?v0 <http://dbpedia.org/ontology/location> ?v1 . ?v1 <http://dbpedia.org/ontology/capital> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Region>. <http://dbpedia.org/resource/Clam_Cove_Pictograph_Site> <http://dbpedia.org/ontology/location> ?v0 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. },"```sparql
SELECT ?capital WHERE {
  wd:Q1599 wdt:P36 ?capital .
}
```",3,5,4,3,1,3,2,20,0,0,2,0,0.0,0
83,4,train,"Who is the commander, that is a politician, in Central African Republic Civil War?",SELECT ?result WHERE { ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. <http://dbpedia.org/resource/Central_African_Republic_Civil_War> <http://dbpedia.org/ontology/commander> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?commander ?politicianRole WHERE {
  ?war dbo:wikiPageRedirects dbr:Central_African_Republic_Civil_War .
  ?war dbo:participant ?commander .
  ?commander a dbo:MilitaryPerson ;
             dbo:occupation ?occupation .
  FILTER(CONTAINS(LCASE(?occupation), ""commander"") || CONTAINS(LCASE(?occupation), ""military leader"")) .

  OPTIONAL {
    ?commander dbo:politicalParty ?party .
    ?commander dbo:office ?office .
    BIND(CONCAT(""Politician with role: "", STR(?office)) AS ?politicianRole)
  }

  FILTER(BOUND(?politicianRole))
}
```",1,2,2,1,1,3,2,20,0,0,279,0,0.0,0
236,3,train,"Give me the administration, that is an organisation, of John Adams.",SELECT ?result WHERE { ?result <http://dbpedia.org/property/leader> <http://dbpedia.org/resource/John_Adams> . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. },"```sparql
SELECT ?administration WHERE {
  ?person foaf:name ""John Adams""@en .
  ?person dbo:president ?administration .
}
```",1,2,2,1,1,3,2,20,0,0,1,0,0.0,0
826,2,train,"Give me the predecessor of Louis IV, Grand Duke of Hesse.","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/successor> <http://dbpedia.org/resource/Louis_IV,_Grand_Duke_of_Hesse> . }","```sparql
SELECT ?predecessor WHERE {
  wd:Q1234568 wdt:P39 wd:Q1234567 .
  wd:Q1234567 wdt:P136 ?predecessor .
}
```

In this query:
- `wd:Q1234568` represents Louis IV, Grand Duke of Hesse.
- `wdt:P39` is the property for ""successor"" in DBpedia.
- `wd:Q1234567` would be the identifier for Louis III, Landgrave of Hess-Darmstadt (the predecessor).
- `wdt:P136` is the property for ""predecessor"" to find who held the position before Louis IV.

Note: The exact identifiers (`Q1234568`, `Q1234567`) need to be replaced with the correct DBpedia resource IDs for Louis IV and Louis III, respectively. You can find these by searching DBpedia or using a SPARQL endpoint to query for their names.",1,1,2,1,1,3,3,71,0,0,1,0,0.0,0
955,2,train,"Give me the work, that is a work and an album and a musical work, of Matt Freeman.",SELECT ?result WHERE { ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Album>. ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalWork>. ?result <http://dbpedia.org/property/writer> <http://dbpedia.org/resource/Matt_Freeman> . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?work WHERE {
  ?work dbo:creator dbr:Matt_Freeman .
  ?work a dbo:Album ;
        a dbo:MusicalWork .
}
```",1,4,2,1,1,3,2,20,0,0,2,0,0.0,0
507,4,train,Who is the person born as Anne Voase Coates?,"SELECT ?result WHERE { ?result <http://dbpedia.org/property/birthName> ""Anne Voase Coates""@en . }","```sparql
SELECT ?person ?commonName WHERE {
  ?person foaf:givenname ""Anne"" .
  ?person foaf:surname ""Coates"" .
  OPTIONAL { ?person foaf:name ?commonName . }
}
```",1,1,2,1,1,3,3,71,0,0,1,0,0.0,0
976,22,train,Give me the office of Mustafa Şentop and office of the person born as Mehmet Naci Bostancı.,"SELECT ?result WHERE { <http://dbpedia.org/resource/Mustafa_Şentop> <http://dbpedia.org/property/office> ?result . ?v0 <http://dbpedia.org/property/office> ?result . ?v0 <http://dbpedia.org/property/birthName> ""Mehmet Naci Bostancı""@en . }","```sparql
SELECT ?person ?office WHERE {
  # Query for Mustafa Şentop
  { 
    wd:Q1234567 dbo:office ?office .
    BIND(wd:Q1234567 AS ?person)
  }
  
  UNION
  
  # Query for Mehmet Naci Bostancı (Mustafa Kemal Atatürk)
  {
    wd:Q12345 dbo:birthName ""Mehmet Naci Bostancı""@tr .
    wd:Q12345 dbo:office ?office .
    BIND(wd:Q12345 AS ?person)
  }
}
```

Note: The `wd:Q1234567` and `wd:Q12345` are placeholders for the actual DBpedia resource identifiers for Mustafa Şentop and Mehmet Naci Bostancı (Mustafa Kemal Atatürk), respectively. You would need to replace these with the correct QIDs from DBpedia.",3,3,4,2,2,3,3,71,0,0,1,0,0.0,0
129,8,train,Give me the professional in the mayor of 1999 West Dunbartonshire Council election.,SELECT ?result WHERE { ?result <http://dbpedia.org/property/occupation> ?v1 . <http://dbpedia.org/resource/1999_West_Dunbartonshire_Council_election> <http://dbpedia.org/property/leader> ?v1 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?mayor ?profession WHERE {
  ?mayor a dbo:Mayor ;
         dbo:officeHolderOf dbr:West_Dunbartonshire_Council ;
         dbp:termStart ?start .
  
  OPTIONAL { ?mayor dbo:occupation ?profession . }
  
  FILTER (YEAR(?start) = 1999)
}
```",2,2,3,2,1,2,3,28,0,0,39640,0,0.0,0
826,39,train,"Give me the successor of Louis II, Grand Duke of Hesse and predecessor of the parent of the child of Louis IV, Grand Duke of Hesse.","SELECT ?result WHERE { <http://dbpedia.org/resource/Louis_II,_Grand_Duke_of_Hesse> <http://dbpedia.org/ontology/successor> ?result . ?result <http://dbpedia.org/ontology/successor> ?v1 . ?v0 <http://dbpedia.org/ontology/parent> <http://dbpedia.org/resource/Louis_IV,_Grand_Duke_of_Hesse> . ?v0 <http://dbpedia.org/ontology/parent> ?v1 . }","```sparql
# Step 1: Find the successor of Louis II, Grand Duke of Hesse
SELECT ?successor WHERE {
    wd:Q1234567 dbo:successor ?successor .
}

UNION

# Step 2: Find the predecessor of Louis IV, Grand Duke of Hesse
SELECT ?predecessor WHERE {
    wd:Q6543210 dbo:predecessor ?predecessor .
}
```

Note: Replace `wd:Q1234567` with the actual DBpedia identifier for Louis II, Grand Duke of Hesse and `wd:Q6543210` with the identifier for Louis IV, Grand Duke of Hesse. These identifiers can be found in DBpedia by searching for these individuals.",4,4,5,3,2,3,3,71,0,0,1,0,0.0,0
465,23,train,"Give me the successor of the child of the parent of Ercole II d'Este, Duke of Ferrara.","SELECT ?result WHERE { ?v0 <http://dbpedia.org/property/father> ?v2 . ?v0 <http://dbpedia.org/ontology/successor> ?result . <http://dbpedia.org/resource/Ercole_II_d'Este,_Duke_of_Ferrara> <http://dbpedia.org/ontology/parent> ?v2 . }","```sparql
SELECT ?successor WHERE {
  ?ercole2 dbr:Ercole_II_d%27Este ""dbo:father"" ?parent .
  ?parent dbo:child ?child .
  FILTER(?child = ?ercole2) .
  ?ercole2 dbo:successor ?successor .
}
```",3,3,4,3,1,3,3,71,0,0,1,0,0.0,0
926,32,train,Give me the father of the father of Abdulaziz and successor of the child of Ahmed III.,SELECT ?result WHERE { <http://dbpedia.org/resource/Abdulaziz> <http://dbpedia.org/property/father> ?v1 . ?v3 <http://dbpedia.org/ontology/successor> ?result . ?v3 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Ahmed_III> . ?v1 <http://dbpedia.org/property/father> ?result . },"```sparql
SELECT ?person WHERE {
  # Abdulaziz Ibn Saud's father
  ?abdulaziz dbo:father dbr:Abdul_Aziz_Ibn_Saud .
  
  # Abdul Rahman bin Faisal Al Saud (father of Abdulaziz)
  ?abdulrahman dbo:father ?abdulaziz .
  
  # Faisal bin Turki Al Saud (father of Abdul Rahman)
  ?faisal dbo:father ?abdulrahman .

  # Ahmed III's child, Mustafa III
  ?ahmed3 dbo:child dbr:Mustafa_III .

  # Selim III as successor of Mustafa III
  ?mustafa3 dbo:succeededBy dbr:Selim_III .
  
  # Faisal bin Turki Al Saud's father
  ?turki dbo:father ?faisal .
}
```",4,4,5,2,2,3,3,71,0,0,1,0,0.0,0
573,37,train,"Give me the person decedent at the residence, that is a settlement, of the professional, that is American, in Politician and parent of John Quincy Adams.","SELECT ?result WHERE { ?v0 <http://dbpedia.org/property/occupation> ""Politician""@en . ?result <http://dbpedia.org/ontology/deathPlace> ?v3 . ?v0 <http://dbpedia.org/property/residence> ?v3 . ?v0 <http://dbpedia.org/ontology/nationality> <http://dbpedia.org/resource/United_States>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. <http://dbpedia.org/resource/John_Quincy_Adams> <http://dbpedia.org/ontology/parent> ?result . }","```sparql
SELECT ?decedent WHERE {
  # Find John Quincy Adams' parent who was an American politician
  wd:Q9373 wdt:P40 wd:Q9373; # John Quincy Adams (P40 is child)
  wdt:P39 wd:Q11424. # P39 is occupation, Q11424 is Politician

  # Identify the residence of this person that is a settlement
  ?residence wdt:P551 wd:Q9373; # Residence of John Adams
             wdt:P31/wdt:P279* wd:Q515. # Settlement (P31 is instance of)

  # Find who died at this residence
  ?decedent wdt:P20 ?residence.
}
```",4,6,5,3,2,3,3,71,0,0,2,0,0.0,0
47,23,train,"Give me the office of the administration of the commander, that is a politician, in Operation Green Hunt.",SELECT ?result WHERE { ?v0 <http://dbpedia.org/property/governor> ?v2 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. <http://dbpedia.org/resource/Operation_Green_Hunt> <http://dbpedia.org/ontology/commander> ?v2 . ?v0 <http://dbpedia.org/property/office> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?office WHERE {
  ?person a dbo:Politician ;
          foaf:name ""Manmohan Singh""@en .
  ?person dbo:positionHeld ?office .
  ?office dbo:startDate ?start ;
          dbo:endDate ?end .
  FILTER (?start <= ""2010-01-01""^^xsd:date && (BOUND(?end) => ?end >= ""2004-05-22""^^xsd:date))
}
```",3,4,4,3,1,3,3,71,0,0,369,0,0.0,0
573,12,train,"Give me the person decedent at Quincy, Massachusetts and parent of John Quincy Adams.","SELECT ?result WHERE { <http://dbpedia.org/resource/John_Quincy_Adams> <http://dbpedia.org/ontology/parent> ?result . ?result <http://dbpedia.org/ontology/deathPlace> <http://dbpedia.org/resource/Quincy,_Massachusetts> . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?person ?deathPlace WHERE {
  ?person dbo:spouse dbr:John_Quincy_Adams .
  ?person dbo:deathPlace dbr:Quincy,_Massachusetts .
}
```",2,2,3,1,2,3,3,71,0,0,2,0,0.0,0
987,15,train,"Who is the band, that is an artist and a musical artist, of the band, that is an artist, of Dado Polumenta?",SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. <http://dbpedia.org/resource/Dado_Polumenta> <http://dbpedia.org/ontology/associatedMusicalArtist> ?v1 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?band ?relatedBand WHERE {
  # Find Dado Povolny's band
  dbr:Dado_Povolný dbo:musicalArtist ?band .
  
  # Find related bands to Lucie
  ?band dbo:associatedBand ?relatedBand .
}
```",2,5,3,2,1,3,3,71,0,0,2,0,0.0,0
826,37,train,"Give me the successor of the child, that is a royalty, of the reference, that is a royalty, to Louis I and predecessor of Louis IV, Grand Duke of Hesse.","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/successor> <http://dbpedia.org/resource/Louis_IV,_Grand_Duke_of_Hesse> . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v3 <http://dbpedia.org/ontology/successor> ?result . ?v0 <http://xmlns.com/foaf/0.1/name> ""Louis I""@en . ?v0 <http://dbpedia.org/ontology/child> ?v3 . }","```sparql
SELECT ?successor WHERE {
  # Find Louis IV, Grand Duke of Hesse
  ?louisIV dbo:title ""Louis IV, Grand Duke of Hesse""@en .
  
  # Find his predecessor
  ?predecessor dbo:predecessor ?louisIV .

  # Find the child of this predecessor who is royalty
  ?child dbo:parent ?predecessor ;
         a dbo:Monarch .

  # Find the successor of this child
  ?successor dbo:predecessor ?child .
}
```",4,6,5,3,2,3,3,71,0,0,1,0,0.0,0
865,33,train,"Give me the native of British Raj and father of the child, that is a politician, of the spouse of Syeda Shahar Banu.",SELECT ?result WHERE { ?v2 <http://dbpedia.org/property/father> ?v1 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v2 <http://dbpedia.org/property/father> ?result . <http://dbpedia.org/resource/Syeda_Shahar_Banu> <http://dbpedia.org/ontology/spouse> ?v1 . ?result <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/British_Raj> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT ?father ?child WHERE {
  # Step 1: Identify Syeda Shahar Banu's spouse
  ?shaharBanu dbo:spouse ?spouse .
  
  FILTER (str(?shaharBanu) = ""Syeda_Shahar_Banu"") .

  # Step 2: Check if the spouse has children who are politicians
  ?spouse dbo:child ?child .
  ?child dbo:occupation dbr:Politician .

  # Step 3: Find out which of these children's fathers is native to British Raj
  OPTIONAL { ?spouse foaf:birthPlace ?birthPlace . }
  FILTER (CONTAINS(LCASE(str(?birthPlace)), ""british raj"") || CONTAINS(LCASE(str(?birthPlace)), ""india"")) .

  BIND(?spouse AS ?father)
}
```",4,5,5,3,2,3,3,71,0,0,1,0,0.0,0
987,18,train,Give me the entity in Montenegro and birth place of Dado Polumenta and birth place of Moamer Kasumović.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Montenegro> . <http://dbpedia.org/resource/Moamer_Kasumović> <http://dbpedia.org/ontology/birthPlace> ?result . <http://dbpedia.org/resource/Dado_Polumenta> <http://dbpedia.org/ontology/birthPlace> ?result . },"```sparql
# Query for Dado Polumenta's birthplace
SELECT ?birthPlace WHERE {
  wd:Q123456 dbo:birthPlace ?birthPlace .
}

# Query for Moamer Kasumović (Ramush Haradinaj)'s birthplace
SELECT ?birthPlace WHERE {
  wd:Q654321 dbo:birthPlace ?birthPlace .
}
```

Note: Replace `wd:Q123456` with the actual DBpedia entity ID for Dado Polumenta and `wd:Q654321` with the actual DBpedia entity ID for Moamer Kasumović (Ramush Haradinaj). You can find these IDs by searching their names on DBpedia or using a SPARQL endpoint to query for them.",3,3,4,1,3,3,3,71,0,0,1,0,0.0,0
130,7,train,"Give me the figure known as the film, that is a soccer club and an organisation, of Candice Storey Lee.",SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerClub>. ?result <http://dbpedia.org/property/nickname> ?v1 . ?v1 <http://dbpedia.org/ontology/director> <http://dbpedia.org/resource/Candice_Storey_Lee> . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?club WHERE {
  ?person foaf:name ""Candice Storey Lee""@en.
  ?person dbo:worksFor|dbo:memberOf ?organization.
  
  ?organization a ?type1.
  ?organization a ?type2.

  FILTER(?type1 IN (dbr:Soccer_Club, dbr:Sports_Organization))
  FILTER(?type2 IN (dbr:Film, dbr:Organization))

  BIND(?organization AS ?club)
}
```",2,4,3,2,1,3,2,20,0,0,3,0,0.0,0
715,8,train,"Give me the office, that is a government agency and an organisation, of Carlos Franco Iribarnegaray.",SELECT ?result WHERE { ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/GovernmentAgency>. <http://dbpedia.org/resource/Carlos_Franco_Iribarnegaray> <http://dbpedia.org/property/office> ?result . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?office WHERE {
  ?person rdfs:label ""Carlos Franco Iribarnegaray""@en .
  OPTIONAL { ?person dbo:wikiPageRedirects ?redirect . }
  ?redirect rdfs:label ""Carlos Franco Iribarnegaray""@en .
  
  ?person dbo:positionHeld ?office .

  FILTER EXISTS {
    ?office rdf:type dbo:GovernmentAgency .
  }

  FILTER EXISTS {
    ?office rdf:type dbo:Organization .
  }
}
```",1,3,2,1,1,3,3,71,0,0,1,0,0.0,0
465,25,train,"Give me the successor of the child, that is a royalty, of Anne of Brittany and spouse of Archduchess Barbara of Austria.",SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. <http://dbpedia.org/resource/Anne_of_Brittany> <http://dbpedia.org/ontology/child> ?v1 . ?v1 <http://dbpedia.org/ontology/successor> ?result . ?result <http://dbpedia.org/ontology/spouse> <http://dbpedia.org/resource/Archduchess_Barbara_of_Austria> . },"```sparql
SELECT ?successor WHERE {
  wd:Q1116 wdt:P26 wd:Q1343 . # Anne of Brittany (Q1116) spouse Charles VIII (Q1343)
  wd:Q1343 wdt:P40 wd:Q1194 . # Charles VIII (Q1343) child Claude of France (Q1194)
  wd:Q1194 wdt:P26 wd:Q1247 . # Claude of France (Q1194) spouse Francis I of France (Q1247)
  wd:Q1247 wdt:P40 ?successor . # Francis I of France (Q1247) child ?successor
  FILTER(?successor = wd:Q1342) # Henry II of France (Q1342)
}
```",3,4,4,2,2,3,3,71,0,0,1,0,0.0,0
976,34,train,"Give me the office of Naci Bostancı and office of the leader, that is a politician, of the administration, that is an organisation, of Kemal Kılıçdaroğlu.",SELECT ?result WHERE { <http://dbpedia.org/resource/Naci_Bostancı> <http://dbpedia.org/property/office> ?result . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v3 <http://dbpedia.org/ontology/leader> ?v1 . ?v3 <http://dbpedia.org/property/leader> <http://dbpedia.org/resource/Kemal_Kılıçdaroğlu> . ?v1 <http://dbpedia.org/property/office> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?naciOffice ?kemalOrganization ?leaderName ?leaderOffice
WHERE {
  # Find Naci Bostancı's office
  OPTIONAL { 
    dbr:Naci_Bostancı dbo:office ?naciOffice .
  }

  # Identify Kemal Kılıçdaroğlu's leading organization (CHP)
  dbr:Kemal_Kılıçdaroğlu dbo:leaderOfOrganization dbr:Republican_People%27s_Party_(Turkey) .

  # Find the leader of CHP and their office
  OPTIONAL {
    ?organization dbo:leader dbr:Kemal_Kılıçdaroğlu .
    ?organization dbo:leader ?leaderName .
    ?leaderName dbo:office ?leaderOffice .
  }
}
```",4,6,5,3,2,3,3,71,0,0,1,0,0.0,0
166,10,train,"Give me the territory administered, that is a country, from the reference to Madrid.","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/capital> ?v0 . ?v0 <http://xmlns.com/foaf/0.1/name> ""Madrid""@en . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?territory WHERE {
  ?entity dbo:capital dbr:Madrid .
  ?country dbo:capital ?entity .
  ?country dbo:administrativeTerritory ?territory .
}
```",2,3,3,2,1,3,2,20,0,0,15,0,0.0,0
865,2,train,Give me the father of Shahla Khatun.,SELECT ?result WHERE { <http://dbpedia.org/resource/Shahla_Khatun> <http://dbpedia.org/property/father> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>

SELECT ?father WHERE {
  ?person a dbo:Person ;
          foaf:name ""Shahla Khatun""@en .
  ?person dbo:father ?father .
}
```",1,1,2,1,1,3,3,71,1,0,0,1.0,1.0,1.0
98,15,train,Give me the region of the time zone of Lopez Jaena and entity in Philippines.,SELECT ?result WHERE { <http://dbpedia.org/resource/Lopez_Jaena> <http://dbpedia.org/ontology/timeZone> ?v1 . ?result <http://dbpedia.org/ontology/timeZone> ?v1 . ?result <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Philippines> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?region ?timeZone WHERE {
  ?place a dbo:Municipality ;
        rdfs:label ""Lopez Jaena""@en .
  
  OPTIONAL { 
    ?place dbo:locatedIn ?province .
    ?province dbo:partOfRegion ?region .
  }
  
  OPTIONAL {
    ?place dbo:timeZone ?tz .
    ?tz rdfs:label ?timeZone .
  }

  FILTER (lang(?region) = 'en' && lang(?timeZone) = 'en')
}
```",3,3,4,2,2,2,3,28,0,0,1743,0,0.0,0
926,36,train,"Give me the child of the father, that is a royalty, of the parent, that is a royalty, of Beyhan Sultan (daughter of Mustafa III) and father of Mahmud II.",SELECT ?result WHERE { <http://dbpedia.org/resource/Beyhan_Sultan_(daughter_of_Mustafa_III)> <http://dbpedia.org/ontology/parent> ?v3 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v0 <http://dbpedia.org/ontology/child> ?result . ?v3 <http://dbpedia.org/property/father> ?v0 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. <http://dbpedia.org/resource/Mahmud_II> <http://dbpedia.org/property/father> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?child WHERE {
  ?sultan dbo:spouse ?parent .
  ?parent foaf:name ""Beyhan Sultan""@en .
  ?sultan foaf:name ""Mustafa III""@en .
  
  ?mustafaChild dbo:father ?sultan ;
                a dbo:Sovereign .
  
  ?abdulHamid dbo:father ?mustafaChild ;
              foaf:name ""Abdul Hamid I""@en .
  
  ?mahmudII dbo:father ?abdulHamid ;
            foaf:name ""Mahmud II""@en .

  OPTIONAL { ?abdulHamid dbo:child ?child . }
}
```",4,6,5,3,2,3,3,71,0,0,1,0,0.0,0
839,5,train,"Give me the band, that is a band and a group, of Peter Schorowsky.",SELECT ?result WHERE { <http://dbpedia.org/resource/Peter_Schorowsky> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Group>. ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Band>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?band WHERE {
  ?band dbo:member dbr:Peter_Schorowsky .
  ?band rdf:type dbo:Band .
  ?band rdf:type dbo:MusicalGroup .
}
```",1,3,2,1,1,3,3,71,0,0,1,0,0.0,0
417,17,train,"Who is the child, that is a royalty, of the parent, that is a royalty, of Alexandrine of Mecklenburg-Schwerin?",SELECT ?result WHERE { <http://dbpedia.org/resource/Alexandrine_of_Mecklenburg-Schwerin> <http://dbpedia.org/ontology/parent> ?v1 . ?result <http://dbpedia.org/property/father> ?v1 . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?grandchild WHERE {
  # Step 1: Identify Alexandrine of Mecklenburg-Schwerin
  dbr:Alexandrine_of_Mecklenburg-Schwerin dbo:spouse ?parent .

  # Step 2: Find her children who are royalty
  ?parent dbo:child ?child .
  ?child a dbo:Monarch ; 
         rdfs:label ?childLabel .

  # Step 3: For each child, find their children (Alexandrine's grandchildren)
  ?child dbo:child ?grandchild .
  
  # Step 4: Ensure the grandchild is royalty
  ?grandchild a dbo:Monarch ;
              rdfs:label ?grandchildLabel .
}
```",2,4,3,2,1,3,3,71,0,0,3,0,0.0,0
874,9,train,"Give me the writer, that is an artist and a musical artist, of the work, that is a work, of Horace Andy.",SELECT ?result WHERE { ?v0 <http://dbpedia.org/property/writer> <http://dbpedia.org/resource/Horace_Andy> . ?v0 <http://dbpedia.org/property/writer> ?result . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?writer WHERE {
  ?song dbo:artist dbr:Horace_Andy ;
        dbo:title ""Angel"" .
  
  ?song dbo:lyricist ?writer .

  ?writer dbo:occupation dbr:Songwriter ;
          dbo:occupation dbr:Artist ;
          dbo:occupation dbr:Musical_artist .
}
```",2,5,3,2,1,3,2,20,0,0,29,0,0.0,0
417,0,train,Give me the spouse of Princess Caroline-Mathilde of Denmark.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/spouse> <http://dbpedia.org/resource/Princess_Caroline-Mathilde_of_Denmark> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?spouse WHERE {
  VALUES ?princess { dbr:Princess_Caroline-Mathilde_of_Denmark }
  ?princess dbo:spouse ?spouse .
}
```",1,1,2,1,1,3,3,71,1,0,0,1.0,1.0,1.0
445,3,train,"Who is the resident, that is an athlete, of Great Britain?",SELECT ?result WHERE { ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Athlete>. ?result <http://dbpedia.org/property/residence> <http://dbpedia.org/resource/Great_Britain> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?athlete WHERE {
  ?athlete a dbo:Athlete .
  ?athlete dbo:residence ?place .
  ?place rdfs:label ""Great Britain""@en .
}
```",1,2,2,1,1,3,3,71,6,11,0,0.35294117647058826,1.0,0.5217391304347826
527,9,train,"Give me the movie, that is a work and English and a television show, with the professional in Actor.","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/United_Kingdom>. ?v0 <http://dbpedia.org/property/occupation> ""Actor""@en . ?result <http://dbpedia.org/property/starring> ?v0 . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/TelevisionShow>. ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?film WHERE {
  ?film a dbo:Film .
  ?film rdfs:label ?label .
  FILTER (LANG(?label) = 'en') .
  ?film dbo:language ?lang .
  ?lang rdfs:label ""English""@en .
  ?film dbo:genre ?genre .
  ?genre rdfs:label ""Television show""@en .
  ?film dbo:starring ?actor .
}
```",2,5,3,2,1,3,2,20,0,0,298,0,0.0,0
329,16,train,"Give me the birthplace of Eric Cross (writer) and entity in the birthplace, that is an organisation and a country, of Robert Bates (loyalist).",SELECT ?result WHERE { ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?result <http://dbpedia.org/ontology/country> ?v2 . <http://dbpedia.org/resource/Eric_Cross_(writer)> <http://dbpedia.org/ontology/birthPlace> ?result . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. <http://dbpedia.org/resource/Robert_Bates_(loyalist)> <http://dbpedia.org/ontology/birthPlace> ?v2 . },"```sparql
# Query to find the birthplace of Eric Cross (writer)
SELECT ?birthPlace WHERE {
  dbpedia:Eric_Cross_(writer) dbo:birthPlace ?birthPlace .
}

# Query to find the birthplace of Robert Bates (loyalist) and an organization and a country in that birthplace
SELECT DISTINCT ?birthPlace ?organization ?country WHERE {
  dbpedia:Robert_Bates_(loyalist) dbo:birthPlace ?birthPlace .
  OPTIONAL { ?birthPlace dbo:organisation ?organization . }
  OPTIONAL { ?birthPlace dbo:country ?country . }
}
```",3,5,4,2,2,2,3,28,0,0,1,0,0.0,0
826,16,train,"Who is the child, that is a royalty, of the reference, that is a royalty, to Louis I?","SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v1 <http://xmlns.com/foaf/0.1/name> ""Louis I""@en . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v1 <http://dbpedia.org/ontology/child> ?result . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?child WHERE {
  ?person rdfs:label ""Louis I""@en .
  ?person dbo:child ?child .
  ?child a dbo:Monarch ;
         OPTIONAL { ?child rdfs:label ?name . FILTER (lang(?name) = 'en') }
}
```",2,4,3,2,1,3,3,71,0,0,8,0,0.0,0
124,0,train,Give me the commander in Mahdist War.,SELECT ?result WHERE { <http://dbpedia.org/resource/Mahdist_War> <http://dbpedia.org/ontology/commander> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?person ?name WHERE {
  VALUES ?war { dbr:Mahdist_War }
  
  # Find commanders on the Mahdist side
  {
    ?person dbo:commanderOf ?war .
    ?person rdfs:label ?name .
    FILTER (CONTAINS(LCASE(?name), ""muhammad ahmad"") || CONTAINS(LCASE(?name), ""khalifa abdullah al-taashi""))
  }
  
  # Find commanders on the British-Egyptian side
  UNION {
    ?person dbo:commanderOf ?war .
    ?person rdfs:label ?name .
    FILTER (CONTAINS(LCASE(?name), ""charles gordon"") || CONTAINS(LCASE(?name), ""lord kitchener""))
  }
  
  # Filter out non-English labels
  FILTER (LANG(?name) = 'en')
}
ORDER BY ?person
```",1,1,2,1,1,3,3,71,0,0,15,0,0.0,0
554,5,train,Give me the birth place of The Legendary Tigerman.,SELECT ?result WHERE { <http://dbpedia.org/resource/The_Legendary_Tigerman> <http://dbpedia.org/ontology/birthPlace> ?result . },"```sparql
SELECT ?birthPlace WHERE {
  ?person foaf:name ""The Legendary Tigerman"" .
  ?person dbo:birthPlace ?birthPlace .
}
```",1,1,2,1,1,3,2,20,0,0,1,0,0.0,0
445,21,train,"Give me the entity in United Kingdom and entity in the residence, that is a country, of Anna Sharkey.",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/location> ?v1 . <http://dbpedia.org/resource/Anna_Sharkey> <http://dbpedia.org/property/residence> ?v1 . ?result <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/United_Kingdom> . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?ukEntity ?residenceCountry WHERE {
  # Find Anna Sharkey's entity
  ?anna a dbo:Person ;
        foaf:name ""Anna Sharkey"" .
  
  # Get the residence country of Anna Sharkey
  OPTIONAL { ?anna dbo:residence ?residence . }
  OPTIONAL { ?residence dbo:country dbr:?residenceCountry . }

  # Find an entity in the United Kingdom associated with Anna Sharkey
  OPTIONAL {
    ?ukEntity a dbo:Place ;
              dbo:country dbr:United_Kingdom .
    FILTER(?anna = ?ukEntity)
  }
}
```",3,4,4,2,2,3,3,71,0,0,102,0,0.0,0
507,16,train,"Give me the movie, that is a movie and a work, with the person born on 1919-06-17.","SELECT ?result WHERE { ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?v1 <http://dbpedia.org/ontology/birthDate> ""1919-06-17""^^<http://www.w3.org/2001/XMLSchema#date> . ?result <http://dbpedia.org/property/starring> ?v1 . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Film>. }","```sparql
SELECT ?movie WHERE {
  ?person dbo:birthDate ""1919-06-17""^^xsd:date .
  ?person dbo:film ?movie .
  ?movie a dbo:Film ;
         a dbo:Work .
}
```",2,4,3,2,1,3,3,71,0,0,11,0,0.0,0
98,1,train,Give me the birth place of Paolo Ballesteros.,SELECT ?result WHERE { <http://dbpedia.org/resource/Paolo_Ballesteros> <http://dbpedia.org/ontology/birthPlace> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?birthPlace WHERE {
  ?person a dbo:Person ;
          foaf:name ""Paolo Ballesteros""@en .
  OPTIONAL { ?person dbo:birthPlace ?birthPlace . }
}
```",1,1,2,1,1,2,3,28,2,0,0,1.0,1.0,1.0
495,1,train,Give me the father of Princess Charlotte of Württemberg.,SELECT ?result WHERE { <http://dbpedia.org/resource/Princess_Charlotte_of_Württemberg> <http://dbpedia.org/property/father> ?result . },"```sparql
SELECT ?father WHERE {
  ?person dbo:givenName ""Charlotte""@en .
  ?person dbo:familyName ""of Württemberg""@en .
  ?person dbo:parent ?father .
  FILTER EXISTS { ?father rdf:type dbo:Person . }
}
```",1,1,2,1,1,3,2,20,0,0,1,0,0.0,0
839,22,train,"Give me the band of Kevin Russell (musician) and band of the band, that is a musical artist, of Charlie Huhn.",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/bandMember> ?v1 . <http://dbpedia.org/resource/Charlie_Huhn> <http://dbpedia.org/ontology/associatedMusicalArtist> ?v1 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. <http://dbpedia.org/resource/Kevin_Russell_(musician)> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?kevinRussellBand ?charlieHuhnBand ?bandOfTheBand
WHERE {
  # Find the band associated with Kevin Russell
  OPTIONAL { 
    ?kevinRussell a dbo:Musician ;
                  foaf:name ""Kevin Russell"" .
    ?kevinRussell dbo:member ?kevinRussellBand .
  }

  # Find the band associated with Charlie Huhn
  OPTIONAL {
    ?charlieHuhn a dbo:Musician ;
                 foaf:name ""Charlie Huhn"" .
    ?charlieHuhn dbo:member ?charlieHuhnBand .

    # Check if there's any musical artist considered as the ""band"" of Charlie Huhn's band
    OPTIONAL {
      ?charlieHuhnBand dbo:alias ?bandOfTheBand ;
                       a dbo:MusicalArtist .
    }
  }
}
```",3,4,4,2,2,3,3,71,0,0,1,0,0.0,0
326,2,train,"Give me the region coded, that is a settlement, as 442/760.","SELECT ?result WHERE { ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. ?result <http://dbpedia.org/ontology/areaCode> ""442/760"" . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?settlement WHERE {
  ?settlement a dbo:Settlement .
  OPTIONAL { ?settlement dbo:postalCode ""442/760"" . }
}
```",1,2,2,1,1,2,2,9,168,660302,0,0.0002543643163201962,1.0,0.0005085992631365437
791,39,train,"Give me the father of the child, that is a royalty, of the father, that is a royalty and an office holder, of Emperor Antoku and predecessor of Emperor Antoku.",SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v1 <http://dbpedia.org/property/father> ?v0 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?result <http://dbpedia.org/ontology/successor> <http://dbpedia.org/resource/Emperor_Antoku> . ?v1 <http://dbpedia.org/property/father> ?result . <http://dbpedia.org/resource/Emperor_Antoku> <http://dbpedia.org/property/father> ?v0 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?fatherOfChild WHERE {
  # Step 1: Find Emperor Antoku's father
  dbr:Emperor_Antoku dbo:father ?antokuFather .

  # Step 2: Find the predecessor of Emperor Antoku
  dbr:Emperor_Antoku dbo:predecessor ?antokuPredecessor .

  # Step 3: Identify a child of this predecessor who is royalty and an office holder
  ?child dbo:father ?antokuPredecessor .
  ?child rdf:type dbo:Monarch .
  OPTIONAL { ?child dbo:office ?office } .

  # Step 4: Find the father of this child
  ?child dbo:father ?fatherOfChild .
}
```",4,7,5,3,2,3,3,71,0,0,1,0,0.0,0
715,2,train,Give me the leader of Ministry of the Air (Spain).,SELECT ?result WHERE { <http://dbpedia.org/resource/Ministry_of_the_Air_(Spain)> <http://dbpedia.org/ontology/leader> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?leader WHERE {
  ?ministry a dbo:GovernmentMinistry ;
            rdfs:label ""Ministry of the Air""@en .
  ?ministry dbo:country dbr:Spain .
  ?ministry dbo:head ?leader .
}
```",1,1,2,1,1,3,3,71,0,0,2,0,0.0,0
987,24,train,Give me the entity in Montenegro and birth place of the actor of All for Free.,SELECT ?result WHERE { <http://dbpedia.org/resource/All_for_Free> <http://dbpedia.org/property/starring> ?v2 . ?v2 <http://dbpedia.org/ontology/birthPlace> ?result . ?result <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Montenegro> . },"```sparql
SELECT ?actor ?birthPlace WHERE {
  ?movie dbo:director <http://dbpedia.org/resource/Goran_Radovanović> .
  ?movie dbo:starring ?actor .
  FILTER(CONTAINS(LCASE(str(?movie)), ""all for free""))
  ?actor dbo:birthPlace ?birthPlace .
  ?birthPlace dbo:country <http://dbpedia.org/resource/Montenegro> .
}
```",3,3,4,2,2,3,3,71,0,0,1,0,0.0,0
965,13,train,"Give me the parent of the child, that is a royalty, of Prince Louis of Battenberg.",SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v1 <http://dbpedia.org/ontology/parent> ?result . ?v1 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Prince_Louis_of_Battenberg> . },"```sparql
SELECT ?child ?parent WHERE {
  # Find children of Prince Louis of Battenberg
  ?child dbo:spouse|dbo:childOf dbp:Louis_of_Battenberg .
  
  # Filter to find which child is royalty (has a royal title)
  OPTIONAL { 
    ?child dbo:title ?title .
    FILTER(CONTAINS(LCASE(?title), ""prince"") || CONTAINS(LCASE(?title), ""duke"") || CONTAINS(LCASE(?title), ""king"") || CONTAINS(LCASE(?title), ""queen""))
  }
  
  # Find the parent of this royal child
  ?child dbo:parent ?parent .
}
```",2,3,3,2,1,3,3,71,0,0,2,0,0.0,0
507,21,train,"Give me the professional in Film director, television director and spouse of the person born as Anne Voase Coates.","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/spouse> ?v1 . ?result <http://dbpedia.org/property/occupation> ""Film director, television director""@en . ?v1 <http://dbpedia.org/property/birthName> ""Anne Voase Coates""@en . }","```sparql
SELECT ?spouse ?spouseLabel WHERE {
  ?anne foaf:name ""Anne Voase Coates""@en .
  ?anne dbo:spouse ?spouse .
  OPTIONAL { ?spouse rdf:type dbo:FilmDirector . }
  OPTIONAL { ?spouse rdf:type dbo:TelevisionDirector . }
  SERVICE wikibase:label { bd:serviceParam wikibase:language ""[AUTO_LANGUAGE],en"". }
}
```",3,3,4,2,2,3,3,71,0,0,1,0,0.0,0
955,14,train,"Give me the band of the band member, that is a musical artist and an artist, of the reference, that is a band and a group and an organisation, to Street Dogs.","SELECT ?result WHERE { ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. ?v2 <http://xmlns.com/foaf/0.1/name> ""Street Dogs""@en . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Band>. ?v0 <http://dbpedia.org/ontology/associatedMusicalArtist> ?v2 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Group>. ?result <http://dbpedia.org/ontology/bandMember> ?v0 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?member ?otherBand WHERE {
  # Find members of Street Dogs
  ?streetDogMember dbo:band dbr:Street_Dogs .
  
  # Check if the member is also an artist (broad sense)
  ?streetDogMember dbo:occupation dbr:Musical_artist ;
                  dbo:occupation dbr:Artist .

  # Find other bands or groups they are associated with
  ?otherBandMembership dbo:band ?member .
  ?otherBandMembership dbo:band ?otherBand .
  
  FILTER(?otherBand != dbr:Street_Dogs)
}
```",3,8,4,3,1,3,2,20,0,0,3,0,0.0,0
892,15,train,Give me the profession of the true self of Enrico Crolla.,"SELECT ?result WHERE { ?v1 <http://xmlns.com/foaf/0.1/givenName> ""Enrico Crolla""@en . ?v1 <http://dbpedia.org/property/occupation> ?result . }","```sparql
SELECT ?profession WHERE {
  wd:Q123456 rdfs:label ""Enrico Crolla""@en .
  OPTIONAL { wd:Q123456 wdt:P106 ?occupation . }
  OPTIONAL { ?occupation skos:prefLabel ?profession . FILTER (lang(?profession) = 'en') }
}
```

Note: Replace `wd:Q123456` with the actual DBpedia resource identifier for Enrico Crolla if available.",2,2,3,2,1,3,3,71,0,0,2,0,0.0,0
826,31,train,"Give me the successor of Louis II, Grand Duke of Hesse and spouse of the child of the father of Anna Magdalena Appel.","SELECT ?result WHERE { <http://dbpedia.org/resource/Anna_Magdalena_Appel> <http://dbpedia.org/property/father> ?v1 . ?v0 <http://dbpedia.org/ontology/spouse> ?result . ?v0 <http://dbpedia.org/property/father> ?v1 . <http://dbpedia.org/resource/Louis_II,_Grand_Duke_of_Hesse> <http://dbpedia.org/ontology/successor> ?result . }","```sparql
# Query to find the successor of Louis II, Grand Duke of Hesse
SELECT ?successor WHERE {
  wd:Q123456 rdfs:label ""Louis II, Grand Duke of Hesse""@en .
  ?succession p:P39/ps:P39 ?successor . # P39 is the position held (Grand Duke of Hesse)
  ?succession pq:P580 ?start .        # P580 is start time
  FILTER EXISTS { ?death p:P570 ?end . ?death pq:P921 wd:Q123456 . } # P570 is death date, P921 is predecessor
}

# Query to find the spouse of Carl Philipp Emanuel Bach (Anna Magdalena Appel's sibling)
SELECT ?spouse WHERE {
  wd:Q678910 rdfs:label ""Carl Philipp Emanuel Bach""@en .
  ?marriage p:P26/ps:P26 ?spouse . # P26 is spouse
}
```",4,4,5,3,2,3,3,71,0,0,1,0,0.0,0
527,4,train,Give me the host of Hyperland.,SELECT ?result WHERE { <http://dbpedia.org/resource/Hyperland> <http://dbpedia.org/ontology/presenter> ?result . },"```sparql
PREFIX dbp: <http://dbpedia.org/property/>
PREFIX dbo: <http://dbpedia.org/ontology/>

SELECT ?hostName WHERE {
  ?show rdfs:label ""Hyperland""@en.
  ?show dbo:presenter ?person.
  ?person foaf:name ?hostName.
}
```",1,1,2,1,1,3,2,20,0,2,2,0.0,0.0,0
158,1,train,Give me the party of Théodore Steeg.,SELECT ?result WHERE { <http://dbpedia.org/resource/Théodore_Steeg> <http://dbpedia.org/ontology/party> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?partyName WHERE {
  dbr:Théodore_Steeg dbo:partyAffiliation ?party .
  ?party rdfs:label ?partyName .
  FILTER (lang(?partyName) = 'en')
}
```",1,1,2,1,1,3,2,20,0,0,1,0,0.0,0
47,30,train,Give me the office of Bidesh Ranjan Bose and office of the awardee of Padma Vibhushan and office of Suvendu Adhikari.,SELECT ?result WHERE { ?v1 <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/Padma_Vibhushan> . <http://dbpedia.org/resource/Suvendu_Adhikari> <http://dbpedia.org/property/office> ?result . ?v1 <http://dbpedia.org/property/office> ?result . <http://dbpedia.org/resource/Bidesh_Ranjan_Bose> <http://dbpedia.org/property/office> ?result . },"```sparql
# Query for Bidesh Ranjan Bose's office
SELECT ?office WHERE {
  ?person dbo:wikiPageID ""Bidesh_Ranjan_Bose"" .
  ?person dbo:occupation ?office .
}

UNION

# Query for any Padma Vibhushan awardee's office
SELECT ?awardee ?office WHERE {
  ?awardee dbo:honour ""Padma_Vibhushan"" ;
           dbo:occupation ?office .
}

UNION

# Query for Suvendu Adhikari's office
SELECT ?office WHERE {
  ?person dbo:wikiPageID ""Suvendu_Adhikari"" .
  ?person dbo:occupation ?office .
}
```",4,4,5,2,3,3,3,71,0,0,1,0,0.0,0
791,26,train,"Give me the predecessor of the child of the child, that is an office holder and a royalty, of Emperor Go-Shirakawa.",SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?result <http://dbpedia.org/ontology/successor> ?v2 . ?v2 <http://dbpedia.org/property/father> ?v1 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v1 <http://dbpedia.org/ontology/parent> <http://dbpedia.org/resource/Emperor_Go-Shirakawa> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT DISTINCT ?predecessor WHERE {
  # Step 1: Identify Emperor Go-Shirakawa
  ?emperor a dbo:Monarch ;
           rdfs:label ""Go-Shirakawa""@en .
  
  # Step 2: Find His Children
  ?child dbo:parent ?emperor .

  # Step 3: Find the Child of Each Child (Grandchildren)
  ?grandchild dbo:parent ?child .

  # Step 4: Identify Office Holders and Royalty Among Grandchildren
  ?grandchild a dbo:Monarch ;
              dbo:officeHolder true ;
              rdfs:label ?name .
  
  # Step 5: Find the Predecessor of Each Qualifying Grandchild
  OPTIONAL {
    ?predecessor dbo:succeededBy ?grandchild .
  }
  
  FILTER (lang(?name) = 'en')
}
ORDER BY ?name
LIMIT 1
```",3,5,4,3,1,3,3,71,0,0,3,0,0.0,0
5,12,train,Give me the birthplace of Gerald Regan and entity in the award of Coro de la Pontificia Universidad Católica de Puerto Rico.,SELECT ?result WHERE { <http://dbpedia.org/resource/Coro_de_la_Pontificia_Universidad_Católica_de_Puerto_Rico> <http://dbpedia.org/property/awards> ?v2 . <http://dbpedia.org/resource/Gerald_Regan> <http://dbpedia.org/ontology/birthPlace> ?result . ?result <http://dbpedia.org/ontology/country> ?v2 . },"```sparql
# Query for Gerald Regan's birthplace
SELECT ?birthPlace WHERE {
  ?gerry dbo:birthPlace ?birthPlace .
  ?gerry rdfs:label ""Gerald Regan""@en .
  FILTER (lang(?gerry) = 'en')
}

UNION

# Query for the awarding entity of Coro de la Pontificia Universidad Católica de Puerto Rico
SELECT ?awardingEntity WHERE {
  ?choir dbo:award ?award .
  ?choir rdfs:label ""Coro de la Pontificia Universidad Católica de Puerto Rico""@es .
  ?award dbo:recipient ?choir ;
         dbo:givenBy ?awardingEntity .
  FILTER (lang(?choir) = 'es')
}
```",3,3,4,2,2,3,2,20,0,0,1,0,0.0,0
933,1,train,Give me the reference to Alan Warner.,"SELECT ?result WHERE { ?result <http://xmlns.com/foaf/0.1/name> ""Alan Warner""@en . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?linkedPage ?label WHERE {
  ?alanWarner a dbo:Person ;
              rdfs:label ""Alan Warner""@en .
  
  OPTIONAL { 
    ?redirect dbo:wikiPageRedirects ?alanWarner .
    ?redirect rdfs:label ?label .
  }
  
  ?alanWarner dbo:wikiPageWikiLink ?linkedPage .
  ?linkedPage rdfs:label ?label .
}
```",1,1,2,1,1,3,3,71,0,0,1,0,0.0,0
917,14,train,Give me the child of the father of Kamehameha IV.,SELECT ?result WHERE { ?result <http://dbpedia.org/property/father> ?v0 . <http://dbpedia.org/resource/Kamehameha_IV> <http://dbpedia.org/property/father> ?v0 . },"```sparql
SELECT ?child WHERE {
  ?kamehamehaIV dbo:father ?father .
  FILTER (str(?kamehamehaIV) = ""Kamehameha_IV"")
  ?father dbo:child ?child .
}
```",2,2,3,2,1,3,3,71,0,0,3,0,0.0,0
18,16,train,"Give me the alumnus of the figure known, that is an educational institution, as Saints and professional in .","SELECT ?result WHERE { ?result <http://dbpedia.org/property/occupation> """"@en . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/EducationalInstitution>. ?result <http://dbpedia.org/ontology/almaMater> ?v1 . ?v1 <http://dbpedia.org/property/nickname> ""Saints""@en . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?alumnus ?profession WHERE {
  # Identify the University of San Francisco (USF) in DBpedia
  dbr:University_of_San_Francisco dbo:alumni ?alumnus .
  
  # Ensure that the alumnus is a person and has a profession
  ?alumnus rdf:type dbo:Person ;
           dbo:occupation ?profession .
}
```",3,4,4,2,2,2,3,28,0,0,1,0,0.0,0
987,31,train,"Give me the birth place of Moamer Kasumović and birth place of the band, that is an artist and a musical artist, of the band, that is an artist, of Dado Polumenta.",SELECT ?result WHERE { <http://dbpedia.org/resource/Dado_Polumenta> <http://dbpedia.org/ontology/associatedMusicalArtist> ?v2 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. ?v2 <http://dbpedia.org/ontology/associatedMusicalArtist> ?v0 . ?v0 <http://dbpedia.org/ontology/birthPlace> ?result . <http://dbpedia.org/resource/Moamer_Kasumović> <http://dbpedia.org/ontology/birthPlace> ?result . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. },"```sparql
# Query for Moamer Kadhafi's birthplace
SELECT ?birthPlace WHERE {
  wd:Q1596 dbo:birthPlace ?birthPlace .
}

UNION

# Query for Dado Polumenta's band and its birthplace
SELECT ?bandBirthPlace WHERE {
  # Assuming Eiffel 65 is the band associated with Dado Polumenta
  wd:Q1234567 dbo:member wd:Q7890123 . # Dado Polumenta as a member of Eiffel 65
  wd:Q1234567 dbo:birthPlace ?bandBirthPlace .
}

UNION

# Query for the artist associated with the band and its birthplace
SELECT ?artistBirthPlace WHERE {
  # Assuming there's an entity representing the ""artist"" of the band
  wd:Q1234567 dbo:associatedArtist ?artistEntity .
  ?artistEntity dbo:birthPlace ?artistBirthPlace .
}
```

Note: Replace `wd:Q1234567` with the actual DBpedia ID for Eiffel 65 and `wd:Q7890123` with Dado Polumenta's DBpedia ID. The query assumes there is an entity representing the ""artist"" of the band, which may need to be adjusted based on available data.",4,7,5,3,2,3,3,71,0,0,3,0,0.0,0
839,16,train,"Give me the member of the band, that is a band and a group, of Peter Schorowsky.",SELECT ?result WHERE { <http://dbpedia.org/resource/Peter_Schorowsky> <http://dbpedia.org/ontology/associatedMusicalArtist> ?v1 . ?v1 <http://dbpedia.org/ontology/bandMember> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Band>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Group>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>

SELECT ?band WHERE {
  ?person rdfs:label ""Peter Schorowsky""@en .
  ?person dbo:member ?band .
  ?band rdf:type dbo:Band ;
        rdf:type dbo:MusicalGroup .
}
```",2,4,3,2,1,3,3,71,0,0,4,0,0.0,0
933,32,train,Give me the reference to the birth name of Alan Warner (musician) and band of the band of Alan Warner (musician).,SELECT ?result WHERE { <http://dbpedia.org/resource/Alan_Warner_(musician)> <http://dbpedia.org/property/birthName> ?v3 . ?result <http://xmlns.com/foaf/0.1/name> ?v3 . ?v1 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . <http://dbpedia.org/resource/Alan_Warner_(musician)> <http://dbpedia.org/ontology/associatedMusicalArtist> ?v1 . },"```sparql
PREFIX foaf: <http://xmlns.com/foaf/0.1/>
PREFIX dbpedia-owl: <http://dbpedia.org/ontology/>

SELECT ?birthName ?band WHERE {
  ?person a dbo:Musician ;
          foaf:name ""Alan Warner"" ;
          foaf:givenName ?givenName ;
          foaf:familyName ?familyName .
  
  BIND(CONCAT(?givenName, "" "", ?familyName) AS ?birthName)

  OPTIONAL {
    ?band dbpedia-owl:member ?person .
    ?band rdfs:label ?bandLabel .
    FILTER(LANG(?bandLabel) = 'en')
  }
}
```",4,4,5,2,2,3,3,71,0,0,1,0,0.0,0
933,35,train,"Give me the band of the band of Alan Warner (musician) and band of the band, that is a group and a band and an organisation, of Alan Warner (musician).",SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v0 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . <http://dbpedia.org/resource/Alan_Warner_(musician)> <http://dbpedia.org/ontology/associatedMusicalArtist> ?v0 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. <http://dbpedia.org/resource/Alan_Warner_(musician)> <http://dbpedia.org/ontology/associatedMusicalArtist> ?v1 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Band>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Group>. },"```sparql
# Step 1: Find Alan Warner's band
SELECT ?band WHERE {
  ?person dbo:birthName ""Alan Warner""@en .
  ?person dbo:musicGroup ?band .
}

# Step 2: Identify sub-groups or related bands within that band
SELECT DISTINCT ?subgroup WHERE {
  ?band dbo:member ?subgroup .
  ?subgroup a dbo:Band ;
            rdfs:label ?label .
  FILTER (lang(?label) = 'en')
}

# Step 3: Ensure the subgroup is also an organization
SELECT DISTINCT ?subgroupLabel WHERE {
  ?subgroup a dbo:Band, dbo:Organization ;
            rdfs:label ?subgroupLabel .
  FILTER (lang(?subgroupLabel) = 'en')
}
```",4,7,5,2,2,3,3,71,0,0,4,0,0.0,0
459,14,train,"Give me the governor of Oklahoma and governor of the administration, that is a politician, of Brad Henry.",SELECT ?result WHERE { ?v1 <http://dbpedia.org/property/governor> ?result . ?v1 <http://dbpedia.org/property/governor> <http://dbpedia.org/resource/Brad_Henry> . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. <http://dbpedia.org/resource/Oklahoma> <http://dbpedia.org/property/governor> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?governor ?occupation WHERE {
  ?person dbo:officeHolderOf dbr:Governor_of_Oklahoma.
  ?person dbo:termStart ?start.
  ?person dbo:termEnd ?end.
  ?person foaf:name ""Brad Henry""@en.

  OPTIONAL { ?person dbo:positionHeldBy ?governor. }
  
  FILTER (?start <= 2003 && ?end >= 2003) # Ensuring the term includes 2003
  FILTER (?start <= 2011 && ?end >= 2011) # Ensuring the term includes 2011

  OPTIONAL { ?governor dbo:occupation ?occupation. }
  
  FILTER regex(?occupation, ""politician"", ""i"") # Checking if occupation is a politician
}
```",3,4,4,2,2,2,3,28,0,0,1,0,0.0,0
281,3,train,"Give me the war, that is an event and a military conflict, of Roy Boehm.",SELECT ?result WHERE { <http://dbpedia.org/resource/Roy_Boehm> <http://dbpedia.org/ontology/battle> ?result . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?war WHERE {
  ?person rdfs:label ""Roy Boehm""@en .
  ?event dbo:wikiPageDisambiguates ?person .
  ?event rdf:type dbo:War ;
         rdf:type dbo:MilitaryConflict .
}
```",1,3,2,1,1,2,3,28,0,0,20,0,0.0,0
274,10,train,Give me the professional in the designer of Tetris Classic.,SELECT ?result WHERE { ?result <http://dbpedia.org/property/occupation> ?v1 . <http://dbpedia.org/resource/Tetris_Classic> <http://dbpedia.org/property/designer> ?v1 . },"```sparql
SELECT ?designer WHERE {
  ?game dcterms:title ""Tetris""@en .
  ?game dbo:creator ?designer .
}
```",2,2,3,2,1,2,3,28,0,0,39640,0,0.0,0
839,30,train,"Give me the band of Peter Schorowsky and band of Kevin Russell (musician) and band of the band, that is a musical artist, of Charlie Huhn.",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/bandMember> ?v1 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. <http://dbpedia.org/resource/Charlie_Huhn> <http://dbpedia.org/ontology/associatedMusicalArtist> ?v1 . ?result <http://dbpedia.org/ontology/bandMember> <http://dbpedia.org/resource/Peter_Schorowsky> . <http://dbpedia.org/resource/Kevin_Russell_(musician)> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . },"```sparql
# Query for Peter Schorowsky's band
SELECT ?band WHERE {
  ?person foaf:name ""Peter Schorowsky""@en .
  ?person dbo:memberOf ?band .
}

UNION

# Query for Kevin Russell's band
SELECT ?band WHERE {
  ?person foaf:name ""Kevin Russell (musician)""@en .
  ?person dbo:memberOf ?band .
}

UNION

# Query for Charlie Huhn's band
SELECT ?band WHERE {
  ?person foaf:name ""Charlie Huhn""@en .
  ?person dbo:memberOf ?band .
}

# Find common bands among the results
SELECT DISTINCT ?commonBand WHERE {
  VALUES ?schorowskyBand { ?band1 }
  VALUES ?russellBand { ?band2 }
  VALUES ?huhnBand { ?band3 }

  ?schorowskyBand rdfs:label ?bandLabel .
  FILTER (lang(?bandLabel) = ""en"")

  ?russellBand rdfs:label ?bandLabel .
  FILTER (lang(?bandLabel) = ""en"")

  ?huhnBand rdfs:label ?bandLabel .
  FILTER (lang(?bandLabel) = ""en"")

  BIND(?schorowskyBand AS ?commonBand)
}
```",4,5,5,2,3,3,3,71,0,0,1,0,0.0,0
926,35,train,"Give me the father of the father of Abdulaziz and child of the father, that is a royalty, of Mustafa III.",SELECT ?result WHERE { ?v1 <http://dbpedia.org/property/father> ?result . <http://dbpedia.org/resource/Abdulaziz> <http://dbpedia.org/property/father> ?v1 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v0 <http://dbpedia.org/ontology/child> ?result . <http://dbpedia.org/resource/Mustafa_III> <http://dbpedia.org/property/father> ?v0 . },"```sparql
# Query to find Abdulaziz's paternal grandfather
SELECT ?grandfather WHERE {
  wd:Q12345 wdt:P22 ?father .
  ?father wdt:P22 ?grandfather .
}

UNION

# Query to find the child of Mustafa III's father who is royalty
SELECT ?child WHERE {
  wd:Q67890 wdt:P22 ?parent .
  ?parent wdt:P40 ?child .
  FILTER EXISTS { ?child wdt:P31 wd:Q1184 } # Filter for royalty (instance of monarch)
}
```

Note: Replace `wd:Q12345` with the DBpedia identifier for Abdulaziz Al Saud and `wd:Q67890` with the identifier for Ahmad III.",4,5,5,2,2,3,3,71,0,0,1,0,0.0,0
773,23,train,Give me the spouse of the father of the parent of Bernard (son of Charles the Fat).,SELECT ?result WHERE { ?v0 <http://dbpedia.org/ontology/spouse> ?result . ?v2 <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Bernard_(son_of_Charles_the_Fat)> . ?v2 <http://dbpedia.org/property/father> ?v0 . },"```sparql
SELECT ?spouse WHERE {
  # Step 1: Identify Bernard (son of Charles the Fat)
  ?bernard dbo:father dbc:Charles_the_Fat .
  
  # Step 2: Find the parent of Bernard
  ?parent dbo:child ?bernard .

  # Step 3: Determine the father of that parent
  ?grandfather dbo:child ?parent .

  # Step 4: Identify the spouse of this father
  ?grandfather dbo:spouse ?spouse .
}
```",3,3,4,3,1,3,3,71,0,0,1,0,0.0,0
791,10,train,Give me the father of Emperor Go-Toba and spouse of Taira no Tokuko.,SELECT ?result WHERE { <http://dbpedia.org/resource/Emperor_Go-Toba> <http://dbpedia.org/property/father> ?result . ?result <http://dbpedia.org/ontology/spouse> <http://dbpedia.org/resource/Taira_no_Tokuko> . },"```sparql
SELECT ?person WHERE {
  ?person dbo:spouse dbr:Taira_no_Tokuko .
  ?person dbo:child dbr:Emperor_Takakura .
}
```",2,2,3,1,2,3,3,71,0,0,1,0,0.0,0
926,26,train,Give me the successor of the child of the spouse of Şermi Kadın.,SELECT ?result WHERE { ?v0 <http://dbpedia.org/ontology/successor> ?result . ?v2 <http://dbpedia.org/ontology/spouse> <http://dbpedia.org/resource/Şermi_Kadın> . ?v0 <http://dbpedia.org/property/father> ?v2 . },"```sparql
SELECT ?successor WHERE {
  ?şermiKadin rdf:type dbo:Person ;
              foaf:name ""Şermi Kadın""@en .
  
  ?şermiKadin dbo:spouse ?spouse .

  ?spouse dbo:child ?child .

  ?child dbo:successor ?successor .
}
```",3,3,4,3,1,3,3,71,2,0,0,1.0,1.0,1.0
978,13,train,"Give me the band member of the professional, that is a musical artist and an artist, in the award of Michel Claparède.",SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. <http://dbpedia.org/resource/Michel_Claparède> <http://dbpedia.org/property/awards> ?v0 . ?result <http://dbpedia.org/ontology/associatedMusicalArtist> ?v1 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. ?v1 <http://dbpedia.org/property/occupation> ?v0 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?bandMember WHERE {
  # Identify Michel Claparède and find the associated award
  dbr:Michel_Clapi%C3%A8re a dbo:Person ;
    dbo:award ?award .

  # Find band members who are both musical artists and artists
  ?bandMember a dbo:MusicalArtist, dbo:Artist ;
              dbo:memberOfBand ?band .

  # Ensure the award is related to the band or its activities
  ?award dbo:recipient ?band .
}
```",3,5,4,3,1,3,2,20,0,0,9007,0,0.0,0
36,15,train,"Give me the person born as Ayo Makun and actor of the claim to fame, that is a film, of Lepacious Bose.","SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Film>. ?result <http://dbpedia.org/property/birthName> ""Ayo Makun""@en . <http://dbpedia.org/resource/Lepacious_Bose> <http://dbpedia.org/ontology/knownFor> ?v1 . ?v1 <http://dbpedia.org/ontology/starring> ?result . }","```sparql
SELECT ?person ?film WHERE {
  # Find the person born as Ayo Makun
  ?person dbo:birthName ""Ayo Makun"" .
  
  # Find the film associated with Lepacious Bose's claim to fame
  ?lepacious a dbo:Person ;
             foaf:name ""Lepacious Bose"" .
  ?lepacious dbo:claimToFame ?film .
}
```",3,4,4,2,2,2,3,28,0,0,1,0,0.0,0
917,18,train,Give me the child of Kekūanāoʻa and child of Kekūanāoʻa and parent of Albert Kamehameha.,"SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/parent> <http://dbpedia.org/resource/Kekūanāoʻa> . ?result <http://dbpedia.org/property/father> ""Kekūanāoʻa""@en . ?result <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Albert_Kamehameha> . }","```sparql
SELECT ?person WHERE {
  # Find children of Kekūanāoʻa
  ?child dbo:parent dbr:Kekūanāoʻa .
  
  # Find parents of Albert Kamehameha
  ?parent dbo:child dbr:Albert_Kamehameha .

  # Find the common person who is both a child of Kekūanāoʻa and a parent of Albert Kamehameha
  FILTER (?child = ?parent)
}
```",3,3,4,1,3,3,3,71,0,0,1,0,0.0,0
926,12,train,Give me the successor of Mustafa III and child of Ahmed III.,SELECT ?result WHERE { <http://dbpedia.org/resource/Ahmed_III> <http://dbpedia.org/ontology/child> ?result . <http://dbpedia.org/resource/Mustafa_III> <http://dbpedia.org/ontology/successor> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?succeedingSultan WHERE {
  ?mustafaIII dbo:successor ?succeedingSultan .
  FILTER(STR(?mustafaIII) = ""Mustafa_III"")
  
  ?ahmedIII dbo:child ?succeedingSultan .
  FILTER(STR(?ahmedIII) = ""Ahmed_III"")
}
```",2,2,3,1,2,3,3,71,0,0,1,0,0.0,0
417,28,train,"Give me the spouse of the parent, that is a royalty, of Count Ingolf of Rosenborg and child of Alexandrine of Mecklenburg-Schwerin and child of Christian X of Denmark.",SELECT ?result WHERE { ?result <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Christian_X_of_Denmark> . ?v1 <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Count_Ingolf_of_Rosenborg> . ?result <http://dbpedia.org/ontology/spouse> ?v1 . ?result <http://dbpedia.org/ontology/parent> <http://dbpedia.org/resource/Alexandrine_of_Mecklenburg-Schwerin> . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?spouse WHERE {
  # Count Ingolf of Rosenborg's aunt, Princess Margrethe II of Denmark
  dbr:Princess_Margrethe_II_of_Denmark 
    dbo:childOf dbr:Alexandrine_of_Mecklenburg-Schwerin ;
                dbr:Christian_X_of_Denmark .

  # Find her spouse
  dbr:Princess_Margrethe_II_of_Denmark 
    dbo:spouse ?spouse .
}
```",4,5,5,2,3,3,3,71,0,0,1,0,0.0,0
978,12,train,Give me the band member of the person born as Nicholas Bracegirdle and band member of Enya.,"SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/associatedMusicalArtist> <http://dbpedia.org/resource/Enya> . ?result <http://dbpedia.org/ontology/associatedMusicalArtist> ?v0 . ?v0 <http://dbpedia.org/property/birthName> ""Nicholas Bracegirdle""@en . }","```sparql
SELECT ?person WHERE {
  # Find Nicholas Bracegirdle (Nicky Ryan)
  ?nickyRyan foaf:name ""Nicky Ryan""@en .
  ?nickyRyan dbo:birthName ""Nicholas Bracegirdle""@en .

  # Confirm Nicky Ryan's association with Enya
  OPTIONAL { 
    ?enya dbo:musicalDirector ?nickyRyan ;
          rdfs:label ""Enya""@en .
  }

  FILTER EXISTS {
    ?nickyRyan dbo:musicalDirector ?enya .
  }
  
  BIND(?nickyRyan AS ?person)
}
```",3,3,4,2,2,3,2,20,0,0,1,0,0.0,0
935,7,train,Give me the death place of the awardee of Sitara-i-Imtiaz.,SELECT ?result WHERE { ?v1 <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/Sitara-i-Imtiaz> . ?v1 <http://dbpedia.org/ontology/deathPlace> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT DISTINCT ?person ?deathPlace WHERE {
  ?person dbo:award [dbo:recipient ?person; rdf:type dbr:Sitara-i-Imtiaz] .
  OPTIONAL { ?person dbo:deathPlace ?deathPlace . }
  FILTER (!bound(?deathPlace) || ?deathPlace != """")
}
```",2,2,3,2,1,3,2,20,0,0,18,0,0.0,0
216,3,train,Give me the mayor of Ros Bates.,SELECT ?result WHERE { <http://dbpedia.org/resource/Ros_Bates> <http://dbpedia.org/property/leader> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?mayor WHERE {
  ?location a dbo:Municipality ;
            rdfs:label ""Ros Bates""@en .
  OPTIONAL { ?location dbo:mayor ?mayor . }
}
```",1,1,2,1,1,2,3,28,0,0,4,0,0.0,0
83,4,train,Give me the player in Greg Boehme and player in Albert Edward (soccer).,SELECT ?result WHERE { <http://dbpedia.org/resource/Greg_Boehme> <http://dbpedia.org/ontology/team> ?result . <http://dbpedia.org/resource/Albert_Edward_(soccer)> <http://dbpedia.org/ontology/team> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?player ?name WHERE {
  VALUES (?person1 ?person2) { 
    (dbo:Greg_Boehme dbo:Albert_Edward)
  }
  
  ?person1 rdfs:label ?name1 .
  ?person2 rdfs:label ?name2 .

  OPTIONAL {
    ?person1 dbo:occupation ?occupation .
    FILTER(CONTAINS(LCASE(?occupation), ""soccer"") || CONTAINS(LCASE(?occupation), ""football""))
    BIND(?person1 AS ?player)
  }
  
  OPTIONAL {
    ?person2 dbo:occupation ?occupation .
    FILTER(CONTAINS(LCASE(?occupation), ""soccer"") || CONTAINS(LCASE(?occupation), ""football""))
    BIND(?person2 AS ?player)
  }

  FILTER(?player != (dbo:Greg_Boehme; dbo:Albert_Edward))
  
  SERVICE <http://dbpedia.org/sparql> {
    ?player rdfs:label ?name .
    FILTER(LANG(?name) = 'en')
  }
}
```",2,2,3,1,2,2,2,9,0,0,1,0,0.0,0
987,11,train,"Give me the birth place of the band, that is an artist and a musical artist, of Šako Polumenta.",SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. <http://dbpedia.org/resource/Šako_Polumenta> <http://dbpedia.org/ontology/associatedMusicalArtist> ?v1 . ?v1 <http://dbpedia.org/ontology/birthPlace> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?birthPlace WHERE {
  ?band a dbo:Band ;
        foaf:name ""Riblja Čorba""@en ;
        dbo:member dbr:Šako_Polumenta .
  
  FILTER EXISTS { ?band a dbo:MusicalArtist . }
  FILTER EXISTS { ?band a dbo:Artist . }

  ?band dbo:birthPlace ?birthPlace .
}
```",2,4,3,2,1,3,3,71,0,0,6,0,0.0,0
158,3,train,"Give me the award, that is a country, of Adelbert Cronkhite.",SELECT ?result WHERE { <http://dbpedia.org/resource/Adelbert_Cronkhite> <http://dbpedia.org/property/awards> ?result . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?award WHERE {
  ?person dbo:givenName ""Adelbert"" .
  ?person dbo:familyName ""Cronkhite"" .
  ?person dbo:honoraryTitle ?award .
  FILTER regex(?award, ""Philippines"", ""i"")
}
```",1,2,2,1,1,3,2,20,0,0,1,0,0.0,0
274,4,train,Give me the designer of Tetris Classic.,SELECT ?result WHERE { <http://dbpedia.org/resource/Tetris_Classic> <http://dbpedia.org/property/designer> ?result . },"```sparql
SELECT ?designer WHERE {
  ?game dcterms:creator ?designer .
  ?game rdfs:label ""Tetris""@en .
  FILTER (lang(?game) = 'en')
}
```",1,1,2,1,1,2,3,28,0,0,3,0,0.0,0
445,25,train,Give me the entity in the award of George H. Cameron and death place of Patrick Moore.,SELECT ?result WHERE { <http://dbpedia.org/resource/Patrick_Moore> <http://dbpedia.org/ontology/deathPlace> ?result . <http://dbpedia.org/resource/George_H._Cameron> <http://dbpedia.org/property/awards> ?v1 . ?result <http://dbpedia.org/ontology/country> ?v1 . },"```sparql
SELECT DISTINCT ?awardEntity ?deathPlace 
WHERE {
  # Find the award entity associated with George H. Cameron
  ?cameron dbo:award ?award .
  ?award rdfs:label ?awardLabel .
  FILTER(CONTAINS(LCASE(?awardLabel), ""george h. cameron"")) .
  
  # Find the death place of Patrick Moore
  ?moore dbo:deathPlace ?deathPlace .
  ?moore foaf:name ""Patrick Moore""@en .
}
```",3,3,4,2,2,3,3,71,0,0,2,0,0.0,0
158,11,train,"Give me the entity in the award, that is a country, of Adelbert Cronkhite and party of Théodore Steeg.",SELECT ?result WHERE { <http://dbpedia.org/resource/Théodore_Steeg> <http://dbpedia.org/ontology/party> ?result . <http://dbpedia.org/resource/Adelbert_Cronkhite> <http://dbpedia.org/property/awards> ?v2 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. ?result <http://dbpedia.org/ontology/country> ?v2 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?award ?country WHERE {
  VALUES ?person { 
    dbr:Adelbert_Cronkhite 
    dbr:Théodore_Steeg 
  }
  
  ?person dbo:receivedAward ?award .
  OPTIONAL { ?award dbo:awardingCountry ?country . FILTER (isLiteral(?country) && langMatches(lang(?country), ""en"")) }
  
  # Ensure the award involves a country
  VALUES ?countryType { dbr:United_States dbr:France }
  OPTIONAL { ?award dbo:awardingCountry ?countryType }
}
```",3,4,4,2,2,3,2,20,0,0,1,0,0.0,0
456,10,train,Give me the band of Alan Doyle and spouse of Danielle Spencer (Australian actress).,SELECT ?result WHERE { <http://dbpedia.org/resource/Danielle_Spencer_(Australian_actress)> <http://dbpedia.org/ontology/spouse> ?result . <http://dbpedia.org/resource/Alan_Doyle> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . },"```sparql
# Query to find the band associated with Alan Doyle
SELECT ?band WHERE {
  wd:Q123456 a dbo:MusicalArtist ;
             dbo:member ?person .
  ?person foaf:name ""Alan Doyle""@en .
}

UNION

# Query to find the spouse of Danielle Spencer
SELECT ?spouse WHERE {
  wd:Q654321 dbo:spouse ?spouse .
  wd:Q654321 foaf:name ""Danielle Spencer""@en .
}
```

Note: The above SPARQL query uses placeholder QIDs (`wd:Q123456` for Alan Doyle and `wd:Q654321` for Danielle Spencer) which should be replaced with the actual DBpedia identifiers for these individuals. You would need to look up or verify these IDs in DBpedia.",2,2,3,1,2,3,3,71,0,0,1,0,0.0,0
124,13,train,"Give me the military force of the war, that is an event and a military conflict and a societal event, of Frank Rhodes (British Army officer).",SELECT ?result WHERE { <http://dbpedia.org/resource/Frank_Rhodes_(British_Army_officer)> <http://dbpedia.org/ontology/battle> ?v1 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?result <http://dbpedia.org/ontology/battle> ?v1 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?war ?militaryForce WHERE {
  ?officer dbo:rank ""British Army officer"" .
  ?officer foaf:name ""Frank Rhodes"" .
  
  ?officer dbo:servedInMilitaryOrganization ?organization .
  ?organization dbo:member ?soldier .
  
  ?soldier dbo:participatedInWar ?war .
  ?war a dbo:MilitaryConflict ;
      a dbo:SocietalEvent .

  ?war dbo:militaryForce ?militaryForce .
}
```",2,5,3,2,1,3,3,71,0,0,1091,0,0.0,0
216,30,train,"Give me the player in Mario Ivanković and team of the person born, that is a sports manager and a soccer manager and a soccer player, on 1983-12-20 and player in Igor Bišćan.","SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsManager>. <http://dbpedia.org/resource/Igor_Bišćan> <http://dbpedia.org/ontology/team> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerManager>. <http://dbpedia.org/resource/Mario_Ivanković> <http://dbpedia.org/ontology/team> ?result . ?v1 <http://dbpedia.org/ontology/birthDate> ""1983-12-20""^^<http://www.w3.org/2001/XMLSchema#date> . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerPlayer>. ?result <http://dbpedia.org/ontology/coach> ?v1 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT DISTINCT ?player WHERE {
  # Find teams for Mario Ivanković and Igor Bišćan
  ?team1 dbo:member dbr:Mario_Ivanković .
  ?team2 dbo:member dbr:Igor_Bišćan .

  # Ensure the team is the same
  FILTER (?team1 = ?team2)

  # Find players in these teams born on December 20, 1983
  ?player dbo:birthDate ""1983-12-20""^^xsd:date ;
          dbo:member ?team1 ;
          a dbo:SoccerPlayer .

  # Ensure the player is also a sports manager and soccer manager
  ?player dbo:occupation dbr:Sports_manager ;
          dbo:occupation dbr:Soccer_manager .
}
```",4,7,5,2,3,3,3,71,0,0,1,0,0.0,0
365,4,train,Give me the reference to Полтавская губерния.,"SELECT ?result WHERE { ?result <http://xmlns.com/foaf/0.1/name> ""Полтавская губерния""@en . }","```sparql
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>
SELECT ?entity ?description WHERE {
  ?entity rdfs:label ""Полтавская губерния""@ru .
  OPTIONAL { ?entity dbo:description ?description . FILTER (lang(?description) = 'en') }
}
```",1,1,2,1,1,3,2,20,0,0,1,0,0.0,0
987,19,train,"Give me the birth place of the band, that is an artist and a musical artist, of Šako Polumenta and birth place of Moamer Kasumović.",SELECT ?result WHERE { ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. <http://dbpedia.org/resource/Moamer_Kasumović> <http://dbpedia.org/ontology/birthPlace> ?result . ?v2 <http://dbpedia.org/ontology/birthPlace> ?result . <http://dbpedia.org/resource/Šako_Polumenta> <http://dbpedia.org/ontology/associatedMusicalArtist> ?v2 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. },"```sparql
SELECT ?bandBirthPlace ?goranBirthPlace WHERE {
  # Find the birth place of Zabranjeno Pušenje (the band associated with Šako Polumenta)
  dbpedia:Zabranjeno_Pušenje dbo:birthPlace ?bandBirthPlace .

  # Find the birth place of Goran Bregović (Moamer Kasumović)
  dbpedia:Goran_Bregović dbo:birthPlace ?goranBirthPlace .
}
```",3,5,4,2,2,3,3,71,0,0,3,0,0.0,0
433,6,train,"Give me the associated musical artist, that is an artist and a musical artist, of Scott LaFaro.",SELECT ?result WHERE { <http://dbpedia.org/resource/Scott_LaFaro> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?artist WHERE {
  ?association dbo:member dbr:Scott_LaFaro .
  ?association dbo:associatedBandMember ?artist .
  FILTER EXISTS { ?artist a dbo:MusicalArtist . }
}
```",1,3,2,1,1,3,3,71,0,0,1,0,0.0,0
200,2,train,Give me the name of Angelcorpse.,SELECT ?result WHERE { <http://dbpedia.org/resource/Angelcorpse> <http://xmlns.com/foaf/0.1/name> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?band WHERE {
  ?band a dbo:Band .
  ?band rdfs:label ""Angelcorpse""@en .
}
```",1,1,2,1,1,2,2,9,0,1,1,0.0,0.0,0
926,6,train,Give me the child of Ahmed III.,SELECT ?result WHERE { ?result <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Ahmed_III> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>

SELECT ?child WHERE {
  ?s dbp:name ""Ahmed III""@en .
  ?s a dbo:Sultan .
  ?s dbo:child ?child .
}
```",1,1,2,1,1,3,3,71,0,0,12,0,0.0,0
987,0,train,Give me the birth place of Dado Polumenta.,SELECT ?result WHERE { <http://dbpedia.org/resource/Dado_Polumenta> <http://dbpedia.org/ontology/birthPlace> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
SELECT ?birthPlace WHERE {
  <http://dbpedia.org/resource/Dado_Polumenta> dbo:birthPlace ?birthPlace .
}
```",1,1,2,1,1,3,3,71,3,0,0,1.0,1.0,1.0
442,3,train,Give me the actor of This Side of Heaven.,SELECT ?result WHERE { <http://dbpedia.org/resource/This_Side_of_Heaven> <http://dbpedia.org/ontology/starring> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?actor WHERE {
  ?movie dbo:title ""This Side of Heaven""@en .
  ?movie dbo:starring ?actor .
}
```",1,1,2,1,1,2,2,9,0,0,5,0,0.0,0
236,1,train,Give me the party member of Democratic-Republican Party.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/party> <http://dbpedia.org/resource/Democratic-Republican_Party> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?member WHERE {
  ?party a dbo:PoliticalParty ;
         rdfs:label ""Democratic-Republican Party""@en .
  
  ?member dbo:partyMember ?party .
}
```",1,1,2,1,1,3,2,20,0,0,590,0,0.0,0
978,11,train,"Give me the band member of the professional, that is a musical artist and an artist, in  and band member of Chicane (musician).","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/associatedMusicalArtist> ?v2 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. ?v2 <http://dbpedia.org/property/occupation> """"@en . ?result <http://dbpedia.org/ontology/associatedMusicalArtist> <http://dbpedia.org/resource/Chicane_(musician)> . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?person ?name WHERE {
  ?person dbo:bandMemberOf <http://dbpedia.org/resource/Chicane_(musician)> .
  ?person dbo:occupation ?occupation1 .
  ?person dbo:occupation ?occupation2 .
  
  FILTER (
    (str(?occupation1) = ""musical artist"" || str(?occupation1) = ""artist"") &&
    (str(?occupation2) = ""musical artist"" || str(?occupation2) = ""artist"")
  )
  
  OPTIONAL { ?person rdfs:label ?name . FILTER (lang(?name) = 'en') }
}
```",3,5,4,2,2,3,2,20,0,0,2,0,0.0,0
267,9,train,"Give me the player, that is a soccer club, in the manager of 2020–21 Tractor S.C. season.",SELECT ?result WHERE { ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerClub>. ?v0 <http://dbpedia.org/ontology/team> ?result . <http://dbpedia.org/resource/2020–21_Tractor_S.C._season> <http://dbpedia.org/ontology/manager> ?v0 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?managerName WHERE {
    ?club a dbo:SoccerClub ;
          rdfs:label ""Tractor S.C.""@en .
    
    ?position dbo:agent ?manager ;
              dbo:team ?club ;
              dbo:startDate ?start ;
              dbo:endDate ?end .

    FILTER (
        EXISTS { 
            ?manager a dbo:Person ;
                     foaf:name ?managerName .
        }
    )

    FILTER (
        ?start <= ""2020-08-01""^^xsd:date &&
        (?end >= ""2021-07-31""^^xsd:date || NOT EXISTS { ?position dbo:endDate ?end })
    )
}
```",2,3,3,2,1,3,2,20,0,0,31,0,0.0,0
987,29,train,Give me the birth place of Dado Polumenta and entity in Montenegro and birth place of the actor of All for Free.,SELECT ?result WHERE { <http://dbpedia.org/resource/All_for_Free> <http://dbpedia.org/property/starring> ?v3 . <http://dbpedia.org/resource/Dado_Polumenta> <http://dbpedia.org/ontology/birthPlace> ?result . ?result <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Montenegro> . ?v3 <http://dbpedia.org/ontology/birthPlace> ?result . },"```sparql
# Query for Dado Polumenta's birthplace and check if it is in Montenegro
SELECT ?birthPlace (COUNT(?country) AS ?isInMontenegro)
WHERE {
  wd:Q1234568 dbo:birthPlace ?birthPlace .
  OPTIONAL { ?birthPlace wdt:P17 wd:Q30 . } # Q30 is the DBpedia entity for Montenegro
}
GROUP BY ?birthPlace

# Query for actors of ""All for Free"" and their birthplaces
SELECT DISTINCT ?actor ?actorBirthPlace
WHERE {
  wd:Q7890123 dbo:castMember ?actor .
  ?actor dbo:birthPlace ?actorBirthPlace .
}
```

Note: Replace `wd:Q1234568` with the actual DBpedia entity ID for Dado Polumenta and `wd:Q7890123` with the entity ID for ""All for Free"" once identified.",4,4,5,2,3,3,3,71,0,0,1,0,0.0,0
417,23,train,"Give me the spouse of the parent, that is a royalty, of the child of Knud, Hereditary Prince of Denmark.","SELECT ?result WHERE { ?v0 <http://dbpedia.org/ontology/child> ?v2 . ?result <http://dbpedia.org/ontology/spouse> ?v0 . ?v2 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Knud,_Hereditary_Prince_of_Denmark> . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?spouse WHERE {
  # Step 1: Identify Knud, Hereditary Prince of Denmark
  ?knud a dbo:Person ;
        foaf:name ""Knud, Hereditary Prince of Denmark""@en .
  
  # Step 2 & 3: Find the child of Knud and confirm Knud as parent
  ?child dbo:parent ?knud .

  # Step 4: Identify the spouse of Knud
  ?knud dbp:spouse ?spouse .

  # Step 5: Check if the spouse is royalty
  ?spouse a dbo:Monarch .
}
```",3,4,4,3,1,3,3,71,0,0,2,0,0.0,0
582,9,train,Give me the player in Kazuaki Nagasawa and reference to Japan.,"SELECT ?result WHERE { <http://dbpedia.org/resource/Kazuaki_Nagasawa> <http://dbpedia.org/ontology/team> ?result . ?result <http://xmlns.com/foaf/0.1/name> ""Japan""@en . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?player ?sport WHERE {
  ?player rdfs:label ""Kazuaki Nagasawa""@en .
  OPTIONAL { ?player dbo:nationality dbr:Japan . }
  OPTIONAL { ?player dbo:sport ?sport . }
  FILTER (LANG(?player) = 'en')
}
```",2,2,3,1,2,3,3,71,0,0,1,0,0.0,0
826,32,train,"Give me the successor of the child, that is a royalty, of Louis I, Grand Duke of Hesse and spouse of the child of Johann Heinrich Appel.","SELECT ?result WHERE { ?v3 <http://dbpedia.org/ontology/successor> ?result . <http://dbpedia.org/resource/Louis_I,_Grand_Duke_of_Hesse> <http://dbpedia.org/ontology/child> ?v3 . ?v1 <http://dbpedia.org/property/father> ""Johann Heinrich Appel""@en . ?v1 <http://dbpedia.org/ontology/spouse> ?result . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?successor WHERE {
  # Louis I, Grand Duke of Hesse
  dbr:Louis_I,_Grand_Duke_of_Hesse dbo:child ?royalChild .
  
  # Filter for children who are royalty
  ?royalChild a dbo:Monarch .

  # Find the spouse of this royal child
  ?royalChild dbo:spouse ?spouse .

  # Johann Heinrich Appel's child (assuming we need to find a connection)
  dbr:Johann_Heinrich_Appel dbo:child ?appelChild .
  
  # Assuming the spouse is connected through Johann Heinrich Appel's lineage
  ?spouse dbo:parent ?appelChild .

  # Find the successor of the spouse
  ?spouse dbo:successor ?successor .
}
```",4,5,5,2,2,3,3,71,0,0,1,0,0.0,0
606,10,train,"Who is the alumnus of the figure known, that is a university and a sports league and an educational institution, as Penn Quakers?",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/almaMater> ?v0 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/EducationalInstitution>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsLeague>. ?v0 <http://dbpedia.org/property/nickname> <http://dbpedia.org/resource/Penn_Quakers> . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/University>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?person WHERE {
  ?person dbo:almaMater dbr:University_of_Pennsylvania .
}
```",2,5,3,2,1,3,2,20,1114,0,0,1.0,1.0,1.0
978,14,train,Give me the band member of the person born as the name of Chicane (musician).,SELECT ?result WHERE { ?v0 <http://dbpedia.org/property/birthName> ?v2 . <http://dbpedia.org/resource/Chicane_(musician)> <http://xmlns.com/foaf/0.1/givenName> ?v2 . ?result <http://dbpedia.org/ontology/associatedMusicalArtist> ?v0 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?bandMember WHERE {
  # Find the birth name of Chicane (Nick Bracegirdle)
  dbr:Chicane dbo:birthName ?birthName .
  
  # Find bands or groups associated with Nick Bracegirdle
  ?person rdfs:label ?birthName ;
          dbo:memberOfBandOrMusicalGroup ?band .

  # Get the members of those bands
  ?band dbo:member ?bandMember .
}
```",3,3,4,3,1,3,2,20,0,0,2,0,0.0,0
527,5,train,"Give me the work, that is a work and a book, of Tom Baker.",SELECT ?result WHERE { ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Book>. ?result <http://dbpedia.org/property/author> <http://dbpedia.org/resource/Tom_Baker> . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?work WHERE {
  ?work dbo:author dbr:Tom_Baker .
  ?work a dbo:Book .
}
```",1,3,2,1,1,3,2,20,1,0,0,1.0,1.0,1.0
987,9,train,Give me the birth place of Dado Polumenta and birth place of Moamer Kasumović.,SELECT ?result WHERE { <http://dbpedia.org/resource/Moamer_Kasumović> <http://dbpedia.org/ontology/birthPlace> ?result . <http://dbpedia.org/resource/Dado_Polumenta> <http://dbpedia.org/ontology/birthPlace> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?person ?name ?birthPlaceLabel WHERE {
  VALUES ?person { 
    dbr:Dado_Polumenta 
    dbr:Mohamed_Ali_(Yugoslav_president)
  }
  
  ?person dbo:name ?name .
  OPTIONAL { ?person dbo:birthPlace ?birthPlace . }
  SERVICE <http://dbpedia.org/sparql> {
    ?birthPlace rdfs:label ?birthPlaceLabel FILTER (lang(?birthPlaceLabel) = 'en')
  }
}
```",2,2,3,1,2,3,3,71,0,0,3,0,0.0,0
341,6,train,"Give me the writer of the work, that is a work and an album, of Serrano.","SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Album>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?v1 <http://dbpedia.org/property/writer> ""Serrano""@en . ?v1 <http://dbpedia.org/property/writer> ?result . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?writer WHERE {
  ?work a dbo:Work ;
        dbo:creator ?writer .
  ?album a dbo:Album ;
         dbo:creator ?writer .
  FILTER(CONTAINS(LCASE(STR(?work)), ""serrano"") || CONTAINS(LCASE(STR(?album)), ""serrano""))
}
```",2,4,3,2,1,2,2,9,0,0,283,0,0.0,0
892,17,train,"Give me the administration, that is Italian and a region and a settlement and an administrative region, of the party, that is a political party and an organisation, of Andrea Cozzolino.",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Italy>. ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/AdministrativeRegion>. ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Region>. <http://dbpedia.org/resource/Andrea_Cozzolino> <http://dbpedia.org/ontology/party> ?v0 . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. ?result <http://dbpedia.org/property/leaderParty> ?v0 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/PoliticalParty>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?administration WHERE {
  # Find Andrea Cozzolino's political party
  ?cozzolino dbo:party ?party .
  FILTER (str(?cozzolino) = ""Andrea_Cozzolino"") .

  # Identify an Italian administrative entity that is a region, settlement, and administrative region
  ?administration a dbo:Region ;
                 dbo:country dbr:Italy ;
                 a dbo:Settlement ;
                 a dbo:AdministrativeRegion .

  # Link the political party to this administration
  ?administration dbo:governingParty ?party .
}
```",2,8,3,2,1,3,3,71,0,0,14,0,0.0,0
41,14,train,Give me the party of the person born as David Declan Costello and party of Mark Durkan.,"SELECT ?result WHERE { ?v2 <http://dbpedia.org/ontology/party> ?result . ?v2 <http://dbpedia.org/property/birthName> ""David Declan Costello""@en . <http://dbpedia.org/resource/Mark_Durkan> <http://dbpedia.org/ontology/party> ?result . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?personLabel ?partyAffiliationLabel WHERE {
  VALUES (?personLabel) { (""David Declan Costello""@en ""Mark Durkan""@en) }
  
  ?person rdfs:label ?personLabel .
  OPTIONAL { ?person dbo:partyAffiliation ?partyAffiliation . }
  OPTIONAL { ?partyAffiliation rdfs:label ?partyAffiliationLabel . }
}
```",3,3,4,2,2,2,3,28,0,0,1,0,0.0,0
715,3,train,Who is the native of Morocco?,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Morocco> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?person ?personLabel WHERE {
  ?person a dbo:Person .
  ?person dbo:birthPlace ?place .
  ?place rdfs:label ?placeLabel .
  FILTER (lang(?placeLabel) = 'en' && CONTAINS(LCASE(?placeLabel), ""morocco""))
  SERVICE wikibase:label { bd:serviceParam wikibase:language ""[AUTO_LANGUAGE],en"". }
}
ORDER BY ?personLabel
```",1,1,2,1,1,3,3,71,0,0,868,0,0.0,0
18,9,train,"Give me the parent of Liza Huber and alumnus of Marymount College, Tarrytown.","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/almaMater> <http://dbpedia.org/resource/Marymount_College,_Tarrytown> . ?result <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Liza_Huber> . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?parentName WHERE {
  ?liza a dbo:Person ;
        foaf:name ""Liza Huber""@en .
  
  ?liza dbo:parent ?parent .

  ?parent foaf:name ?parentName ;
          dbo:almaMater ?college .

  FILTER (str(?college) = ""Marymount College, Tarrytown"")
}
```",2,2,3,1,2,2,3,28,0,0,1,0,0.0,0
554,9,train,Give me the administration of the party member of Independent politician.,SELECT ?result WHERE { ?result <http://dbpedia.org/property/leader> ?v0 . ?v0 <http://dbpedia.org/ontology/party> <http://dbpedia.org/resource/Independent_politician> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?person ?name ?party ?role WHERE {
  ?person a dbo:IndependentPolitician .
  ?person dbo:formerPartyMemberOf ?party .
  OPTIONAL { ?person dbo:officeHeld ?role . }
  ?person rdfs:label ?name .
  FILTER (LANG(?name) = 'en')
}
ORDER BY ?name
```",2,2,3,2,1,3,2,20,0,0,905,0,0.0,0
507,35,train,Give me the professional in the profession of Guy Ferland and spouse of the person born as Anne Voase Coates.,"SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/spouse> ?v2 . ?v2 <http://dbpedia.org/property/birthName> ""Anne Voase Coates""@en . ?result <http://dbpedia.org/property/occupation> ?v1 . <http://dbpedia.org/resource/Guy_Ferland> <http://dbpedia.org/property/occupation> ?v1 . }","```sparql
# Query to get Guy Ferland's profession
SELECT ?profession WHERE {
  dbpedia:Guy_Ferland dbo:occupation ?profession .
}

# Query to find Anne Voase Coates' spouse
SELECT ?spouse WHERE {
  dbpedia:Anne_Voase_Coates dbo:spouse ?spouse .
}

# Assuming we have the results from above queries, let's say:
# Guy Ferland's profession is ""Film Editor"" (example)
# Anne Voase Coates' spouse is ""John Doe"" (example)

# Final query to find a professional in the same field as Guy Ferland and who is also John Doe
SELECT ?person WHERE {
  ?person dbo:occupation dbpedia:Film_Editor .
  ?person rdfs:label ""John Doe""@en .
}
```",4,4,5,2,2,3,3,71,0,0,1,0,0.0,0
606,13,train,"Give me the figure known as the nickname of the figure known, that is a settlement, as Barb City.","SELECT ?result WHERE { ?result <http://dbpedia.org/property/nickname> ?v1 . ?v0 <http://dbpedia.org/property/nickname> ""Barb City""@en . ?v0 <http://dbpedia.org/property/nickname> ?v1 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. }","```sparql
SELECT ?settlement WHERE {
  ?settlement dbo:wikiPageWikiLink db:Barb_City .
}
```",3,4,4,3,1,3,2,20,0,0,1,0,0.0,0
192,14,train,Give me the child of the child of the parent of Anna of Hungary (Byzantine empress).,SELECT ?result WHERE { ?v0 <http://dbpedia.org/property/father> ?v2 . ?result <http://dbpedia.org/ontology/parent> ?v0 . ?v2 <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Anna_of_Hungary_(Byzantine_empress)> . },"```sparql
SELECT ?grandchild WHERE {
  # Step 1: Find Anna of Hungary (Byzantine empress)
  ?anna dbr:Anna_of_Hungary_(Byzantine_empress) .

  # Step 2: Find her parent
  ?anna dbo:parent ?parent .

  # Step 3: Find the child of this parent
  ?parent dbo:child ?child .

  # Step 4: Find the grandchild (child of the child)
  ?child dbo:child ?grandchild .
}
```",3,3,4,3,1,3,2,20,0,0,7,0,0.0,0
417,36,train,"Give me the spouse of Princess Caroline-Mathilde of Denmark and child of the child, that is a royalty, of the parent, that is a royalty, of Alexandrine of Mecklenburg-Schwerin.",SELECT ?result WHERE { <http://dbpedia.org/resource/Alexandrine_of_Mecklenburg-Schwerin> <http://dbpedia.org/ontology/parent> ?v0 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?result <http://dbpedia.org/ontology/parent> ?v1 . ?result <http://dbpedia.org/ontology/spouse> <http://dbpedia.org/resource/Princess_Caroline-Mathilde_of_Denmark> . ?v1 <http://dbpedia.org/property/father> ?v0 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?spouse ?childOfCarolineMathilde ?parentOfAlexandrine ?childOfParent
WHERE {
  # Step 1: Find spouse of Princess Caroline-Mathilde of Denmark
  dbr:Princess_Caroline_Matilda_of_Denmark dbo:spouse ?spouse .

  # Step 2: Find child of Caroline-Mathilde who is royalty
  ?childOfCarolineMathilde dbo:parent ?spouse ;
                          a dbo:Monarch .

  # Step 3: Find parent of Alexandrine of Mecklenburg-Schwerin who is royalty
  dbr:Alexandrine_of_Mecklenburg-Schwerin dbo:parent ?parentOfAlexandrine .
  ?parentOfAlexandrine a dbo:Monarch .

  # Step 4: Find child of that royal parent
  ?childOfParent dbo:parent ?parentOfAlexandrine ;
                a dbo:Monarch .
}
```",4,6,5,3,2,3,3,71,0,0,1,0,0.0,0
93,2,train,Give me the headquarter of Clam Cove Pictograph Site.,SELECT ?result WHERE { <http://dbpedia.org/resource/Clam_Cove_Pictograph_Site> <http://dbpedia.org/ontology/location> ?result . },"```sparql
SELECT ?headquarter WHERE {
  ?site rdfs:label ""Clam Cove Pictograph Site""@en .
  OPTIONAL { ?site dbo:location ?place . }
  OPTIONAL { ?place dbo:headquarter ?headquarter . }
}
```",1,1,2,1,1,3,2,20,0,0,1,0,0.0,0
465,26,train,"Give me the spouse of the child, that is a royalty, of the parent of Elizabeth of Austria (1526–1545).",SELECT ?result WHERE { ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v1 <http://dbpedia.org/ontology/child> ?v2 . ?result <http://dbpedia.org/ontology/spouse> ?v2 . ?v1 <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Elizabeth_of_Austria_(1526–1545)> . },"```sparql
SELECT ?spouse WHERE {
  # Step 1: Identify Elizabeth of Austria and her parent(s)
  ?elizabeth a dbo:ElizabethOfAustria ;
             foaf:name ""Elizabeth of Austria"" ;
             dbo:parent ?parent .

  FILTER(?elizabeth = dbpedia:Elizabeth_of_Austria_(1526-1545)).

  # Step 2: Find the children of these parents who are royalty
  ?child dbo:parent ?parent ;
         a ?royaltyClass .
  
  VALUES ?royaltyClass { 
    dbo:Monarch 
    dbo:Princess 
    dbo:Duchess 
    dbo:Queen 
    dbo:Archduchess 
    # Add other relevant classes if necessary
  }

  # Step 3: Identify the spouse of that royal child
  ?child dbo:spouse ?spouse .
}
```",3,4,4,3,1,3,3,71,0,0,7,0,0.0,0
456,20,train,Give me the spouse of Danielle Spencer (Australian actress) and professional in the alter ego of The Shadow.,SELECT ?result WHERE { ?result <http://dbpedia.org/property/occupation> ?v2 . <http://dbpedia.org/resource/Danielle_Spencer_(Australian_actress)> <http://dbpedia.org/ontology/spouse> ?result . <http://dbpedia.org/resource/The_Shadow> <http://dbpedia.org/property/alterEgo> ?v2 . },"```sparql
# Query to find the spouse of Danielle Spencer
SELECT ?spouse WHERE {
  ?person dbo:birthName ""Danielle Spencer""@en .
  ?person dbo:profession dbr:Actress .
  ?person dbo:spouse ?spouse .
}
```

```sparql
# Query to identify the professional associated with The Shadow
SELECT ?professional WHERE {
  ?character rdfs:label ""The Shadow (radio)""@en .
  ?character dbo:actor ?professional .
}
```",3,3,4,2,2,3,3,71,0,0,1,0,0.0,0
274,15,train,"Give me the band member of the person born, that is a musical artist, as John Birks Gillespie and associated musical artist of Cecil Taylor.","SELECT ?result WHERE { <http://dbpedia.org/resource/Cecil_Taylor> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?v1 <http://dbpedia.org/property/birthName> ""John Birks Gillespie""@en . ?result <http://dbpedia.org/ontology/associatedMusicalArtist> ?v1 . }","```sparql
# Query for Dizzy Gillespie's band members
SELECT ?member WHERE {
  ?gillespie dbo:birthName ""John Birks Gillespie""@en .
  ?gillespie foaf:name ?name .
  FILTER(CONTAINS(LCASE(?name), ""dizzy gillespie"")) .
  ?bandMember dbo:bandMember ?gillespie .
  ?bandMember foaf:name ?member .
}

UNION

# Query for Cecil Taylor's associated musical artists
SELECT ?artist WHERE {
  ?ceciltaylor foaf:name ""Cecil Taylor""@en .
  ?association dbo:associatedMusicalArtist ?ceciltaylor .
  ?association dbo:musicalArtist ?artist .
  ?artist foaf:name ?name .
}
```",3,4,4,2,2,2,3,28,0,0,1,0,0.0,0
456,0,train,Give me the spouse of Danielle Spencer (Australian actress).,SELECT ?result WHERE { <http://dbpedia.org/resource/Danielle_Spencer_(Australian_actress)> <http://dbpedia.org/ontology/spouse> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?spouse WHERE {
  ?person a dbo:Actor ;
          foaf:name ""Danielle Spencer""@en .
  OPTIONAL { ?person dbo:spouse ?spouse . }
}
```",1,1,2,1,1,3,3,71,0,0,1,0,0.0,0
933,2,train,Give me the band of The Ramong Sound.,SELECT ?result WHERE { <http://dbpedia.org/resource/The_Ramong_Sound> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?band WHERE {
  VALUES ?ramones { dbr:The_Ramones }
  ?ramones dbo:band ?band .
}
```",1,1,2,1,1,3,3,71,0,0,4,0,0.0,0
36,17,train,Give me the person born as Ayo Makun and person born in the birth year of Deanne Bray.,"SELECT ?result WHERE { <http://dbpedia.org/resource/Deanne_Bray> <http://dbpedia.org/ontology/birthYear> ?v2 . ?result <http://dbpedia.org/property/birthName> ""Ayo Makun""@en . ?result <http://dbpedia.org/ontology/birthYear> ?v2 . }","```sparql
# Query to find the person born as Ayo Makun
SELECT ?person WHERE {
  ?person dbo:birthName ""Ayo Makun""@en .
}

# Query to find the birth year of Deanne Bray
SELECT ?birthYear WHERE {
  dbpedia:Deanne_Bray dbo:birthDate ?date .
  BIND(YEAR(?date) AS ?birthYear)
}

# Query to find persons born in the same year as Deanne Bray
SELECT DISTINCT ?person WHERE {
  ?person dbo:birthDate ?date .
  BIND(YEAR(?date) AS ?yearOfBirth)
  # Assuming we have already retrieved the birth year of Deanne Bray and stored it in a variable named $birthYear
  FILTER (?yearOfBirth = $birthYear)
}
```",3,3,4,2,2,2,3,28,0,0,1,0,0.0,0
417,37,train,"Give me the child of the father of the leader, that is a royalty, of Colony of Greenland and child of Alexandrine of Mecklenburg-Schwerin.",SELECT ?result WHERE { <http://dbpedia.org/resource/Colony_of_Greenland> <http://dbpedia.org/property/leader> ?v0 . ?result <http://dbpedia.org/property/father> ?v3 . ?result <http://dbpedia.org/ontology/parent> <http://dbpedia.org/resource/Alexandrine_of_Mecklenburg-Schwerin> . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v0 <http://dbpedia.org/property/father> ?v3 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?child WHERE {
  ?leader dbo:country dbr:Greenland .
  ?leader dbo:father ?father .
  ?father dbo:child ?child .
  ?child dbo:spouse ?spouse .
  ?spouse foaf:name ""Alexandrine of Mecklenburg-Schwerin"" .
  OPTIONAL { ?child dbo:royalty true . }
}
```",4,5,5,3,2,3,3,71,0,0,2,0,0.0,0
976,18,train,Give me the office of Naci Bostancı and office of Meral Akşener and office of Mustafa Şentop.,SELECT ?result WHERE { <http://dbpedia.org/resource/Naci_Bostancı> <http://dbpedia.org/property/office> ?result . <http://dbpedia.org/resource/Mustafa_Şentop> <http://dbpedia.org/property/office> ?result . <http://dbpedia.org/resource/Meral_Akşener> <http://dbpedia.org/property/office> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>

SELECT ?person ?personLabel ?office ?officeLabel WHERE {
  VALUES ?person { 
    dbpedia:Naci_Bostancı 
    dbpedia:Meral_Akşener 
    dbpedia:Mustafa_Şentop 
  }
  
  ?person rdfs:label ?personLabel .
  OPTIONAL { ?person dbo:office ?office . }
  OPTIONAL { ?office rdfs:label ?officeLabel . }

  FILTER (lang(?personLabel) = 'en')
  FILTER (lang(?officeLabel) = 'en')
}
ORDER BY ?person
```",3,3,4,1,3,3,3,71,0,0,1,0,0.0,0
216,33,train,"Give me the player in Igor Bišćan and player in the coach, that is a soccer player and a sports manager and a soccer manager, of the player, that is an organisation and a sports club and a soccer club, in Džemal Berberović.",SELECT ?result WHERE { ?v0 <http://dbpedia.org/ontology/coach> ?v3 . <http://dbpedia.org/resource/Igor_Bišćan> <http://dbpedia.org/ontology/team> ?result . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerManager>. ?v3 <http://dbpedia.org/ontology/team> ?result . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerClub>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. <http://dbpedia.org/resource/Džemal_Berberović> <http://dbpedia.org/ontology/team> ?v0 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsManager>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsClub>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerPlayer>. },"```sparql
SELECT DISTINCT ?player ?coach WHERE {
  # Find Džemal Berberović's club
  ?club rdf:type dbo:SoccerClub ;
        dbo:member ?džemal .
  
  # Ensure Džemal Berberović is a player at the club
  ?džemal rdf:type dbo:SoccerPlayer .

  # Find Igor Bišćan as a player in the same club
  ?club dbo:player ?igorBišćan .
  ?igorBišćan rdfs:label ""Igor Bišćan""@en .

  # Find the coach of Igor Bišćan at that club
  ?igorBišćan dbo:coach ?coach .

  # Ensure the player and coach have roles as SoccerPlayer, SportsManager, and SoccerManager
  ?player rdf:type dbo:SoccerPlayer ;
          rdf:type dbo:SportsManager ;
          rdf:type dbo:SoccerManager .
  
  ?coach rdf:type dbo:SoccerPlayer ;
         rdf:type dbo:SportsManager ;
         rdf:type dbo:SoccerManager .

  # Link the player to Igor Bišćan's team
  ?club dbo:player ?player .
}
```",4,10,5,3,2,3,3,71,0,0,3,0,0.0,0
5,2,train,Give me the award of Renata Adler.,SELECT ?result WHERE { <http://dbpedia.org/resource/Renata_Adler> <http://dbpedia.org/property/awards> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?award WHERE {
  ?person dbo:givenName ""Renata"" .
  ?person dbo:familyName ""Adler"" .
  ?person dbo:award ?award .
}
```",1,1,2,1,1,3,2,20,0,0,1,0,0.0,0
443,13,train,Give me the birthplace of Ulf Lundell and landmark at elevation of the award of William Shepherd.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/elevation> ?v1 . <http://dbpedia.org/resource/Ulf_Lundell> <http://dbpedia.org/ontology/birthPlace> ?result . <http://dbpedia.org/resource/William_Shepherd> <http://dbpedia.org/property/awards> ?v1 . },"```sparql
# Query for Ulf Lundell's birthplace
SELECT ?birthPlace WHERE {
  dbpedia:Ulf_Lundell dbo:birthPlace ?birthPlace .
}

# Query for William Shepherd's award
SELECT ?award WHERE {
  dbpedia:William_Shepherd dbo:award ?award .
}

# Assuming we have the elevation from the award, query for a landmark with that elevation
SELECT ?landmark WHERE {
  ?award dbo:elevationAboveSeaLevel ?elevation .
  ?landmark dbo:elevationAboveSeaLevel ?elevation .
}
```",3,3,4,2,2,2,3,28,0,0,1,0,0.0,0
122,2,train,Who is the band of Gift of Gab (rapper)?,SELECT ?result WHERE { <http://dbpedia.org/resource/Gift_of_Gab_(rapper)> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . },"```sparql
SELECT ?band WHERE {
  ?person foaf:name ""Gift of Gab""@en .
  ?person dbo:memberOfBand ?band .
}
```",1,1,2,1,1,2,2,9,0,0,4,0,0.0,0
212,6,train,Give me the birthplace of the professional in .,"SELECT ?result WHERE { ?v0 <http://dbpedia.org/ontology/birthPlace> ?result . ?v0 <http://dbpedia.org/property/occupation> """"@en . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?birthPlace WHERE {
  VALUES (?person) { (dbr:Name_of_the_professional) }
  ?person dbo:birthPlace ?birthPlace .
}
```

Replace `dbr:Name_of_the_professional` with the DBpedia resource identifier for the specific professional whose birthplace you want to find.",2,2,3,2,1,2,2,9,0,0,13346,0,0.0,0
965,24,train,"Give me the parent of George Mountbatten, 2nd Marquess of Milford Haven and parent of the child, that is a royalty, of Prince Louis of Battenberg.","SELECT ?result WHERE { ?v2 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Prince_Louis_of_Battenberg> . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. <http://dbpedia.org/resource/George_Mountbatten,_2nd_Marquess_of_Milford_Haven> <http://dbpedia.org/ontology/parent> ?result . ?v2 <http://dbpedia.org/ontology/parent> ?result . }","```sparql
SELECT ?parent WHERE {
  # George Mountbatten, 2nd Marquess of Milford Haven (as Prince Louis)
  wd:Q1234567 wdt:P22 ?parent1 . 

  # Princess Alice, Countess of Athlone (child of Prince Louis and Victoria)
  wd:Q6543210 wdt:P22 ?parent2 .

  FILTER (?parent1 = ?parent2)
}
```

Note: Replace `wd:Q1234567` with the actual DBpedia resource ID for George Mountbatten, 2nd Marquess of Milford Haven (as Prince Louis) and `wd:Q6543210` with the resource ID for Princess Alice, Countess of Athlone. These IDs need to be verified from DBpedia.",3,4,4,2,2,3,3,71,0,0,2,0,0.0,0
5,11,train,"Give me the birthplace of the person born, that is a politician, as  and entity in Canada.","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Canada> . ?v0 <http://dbpedia.org/ontology/birthPlace> ?result . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v0 <http://dbpedia.org/property/birthName> """"@en . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?birthPlace WHERE {
  dbr:Justin_Trudeau dbo:birthPlace ?birthPlace .
}
```",3,4,4,2,2,3,2,20,0,2,2,0.0,0.0,0
459,8,train,"Give me the governor of the death place, that is a settlement, of Cliff Roquemore.",SELECT ?result WHERE { ?v1 <http://dbpedia.org/property/governor> ?result . <http://dbpedia.org/resource/Cliff_Roquemore> <http://dbpedia.org/ontology/deathPlace> ?v1 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?governor WHERE {
  # Find the death place of Cliff Roquemore
  dbr:Cliff_Roquemore dbo:deathPlace ?deathPlace .

  # Ensure that the death place is a settlement
  ?deathPlace rdf:type dbo:Settlement .

  # Find the governor or head of government for this settlement at the time of his death
  OPTIONAL {
    ?deathPlace dbo:headOfGovernment ?governor .
  }
}
```",2,3,3,2,1,2,3,28,0,0,2,0,0.0,0
232,0,train,Give me the artistic movement of Ella Cheever Thayer.,SELECT ?result WHERE { <http://dbpedia.org/resource/Ella_Cheever_Thayer> <http://dbpedia.org/ontology/movement> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?movement WHERE {
  ?artist a dbo:Artist ;
          foaf:name ""Ella Cheever Thayer""@en .
  OPTIONAL { ?artist dbo:artisticMovement ?movement . }
}
```",1,1,2,1,1,2,2,9,0,0,1,0,0.0,0
98,14,train,Give me the region of Philippine Standard Time and birth place of the person born as Paolo Elito M. Ballesteros IV.,"SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/timeZone> <http://dbpedia.org/resource/Philippine_Standard_Time> . ?v2 <http://dbpedia.org/ontology/birthPlace> ?result . ?v2 <http://dbpedia.org/property/birthName> ""Paolo Elito M. Ballesteros IV""@en . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?region ?birthPlace WHERE {
  # Find the region associated with Philippine Standard Time
  OPTIONAL {
    ?timeZone a dbo:TimeZone ;
              rdfs:label ""Philippine Standard Time""@en .
    ?region dbo:timezone ?timeZone .
    FILTER(CONTAINS(LCASE(?region), ""philippines""))
  }

  # Find the birthplace of Paolo Elito M. Ballesteros IV
  OPTIONAL {
    dbr:Paolo_Elito_M._Ballesteros_IV dbo:birthPlace ?birthPlace .
  }
}
```",3,3,4,2,2,2,3,28,0,0,2,0,0.0,0
456,3,train,"Give me the movie, that is a work and a television show, with Ross Newton.",SELECT ?result WHERE { ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/TelevisionShow>. ?result <http://dbpedia.org/property/starring> <http://dbpedia.org/resource/Ross_Newton> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?movie WHERE {
  ?actor foaf:name ""Ross Newton""@en.
  ?actor dbo:birthName ?name. # Ensure it's the correct Ross Newton

  ?work dbo:starring ?actor .
  ?work a dbo:Film ; 
        (dbo:genre|dbo:subject) dbr:Television_series .

  BIND(?work AS ?movie)
}
```",1,3,2,1,1,3,3,71,0,0,2,0,0.0,0
274,9,train,Give me the associated musical artist of Cecil Taylor and professional in .,"SELECT ?result WHERE { ?result <http://dbpedia.org/property/occupation> """"@en . <http://dbpedia.org/resource/Cecil_Taylor> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?artist WHERE {
  VALUES ?cecil_taylor { dbr:Cecil_Taylor }
  ?association dbo:associatedWith ?cecil_taylor .
  ?association dbo:associatedWith ?artist .
  FILTER(?artist != ?cecil_taylor)
}
```",2,2,3,1,2,2,3,28,0,0,1,0,0.0,0
645,32,train,"Give me the military force of the force, that is an event and a military conflict and a societal event, of Francisco Largo Caballero and commander in the force of Carlos Asensio Cabanillas.",SELECT ?result WHERE { ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?result <http://dbpedia.org/ontology/battle> ?v3 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?v1 <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Carlos_Asensio_Cabanillas> . ?v3 <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Francisco_Largo_Caballero> . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?v1 <http://dbpedia.org/ontology/commander> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?militaryForce WHERE {
  # Francisco Largo Caballero's involvement in a military force
  OPTIONAL { 
    dbr:Francisco_Largo_Caballero dbo:militaryConflict dbr:Spanish_Civil_War .
    dbr:Spanish_Civil_War dbo:participatingMilitaryGroup ?militaryForce .
  }
  
  # Carlos Asensio Cabanillas's involvement in a military force
  OPTIONAL { 
    dbr:Carlos_Asensio_Cabanillas dbo:militaryConflict dbr:Spanish_Civil_War .
    dbr:Spanish_Civil_War dbo:participatingMilitaryGroup ?militaryForce .
  }
  
  # Ensure the military force is related to both individuals
  FILTER EXISTS { 
    ?militaryForce dbo:member dbr:Francisco_Largo_Caballero .
  }
  FILTER EXISTS { 
    ?militaryForce dbo:commander dbr:Carlos_Asensio_Cabanillas .
  }
}
```",4,7,5,2,2,3,3,71,0,0,23,0,0.0,0
18,13,train,Give me the professional in the award of Ana María Sánchez de Ríos and parent of Liza Huber.,SELECT ?result WHERE { ?result <http://dbpedia.org/property/occupation> ?v0 . ?result <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Liza_Huber> . <http://dbpedia.org/resource/Ana_María_Sánchez_de_Ríos> <http://dbpedia.org/property/awards> ?v0 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?professional WHERE {
  # Find the award associated with Ana María Sánchez de Ríos
  ?award dbo:recipient dbr:Ana_María_Sánchez_de_Ríos .
  
  # Find the parent of Liza Huber
  ?parent dbo:child dbr:Liza_Huber .

  # Check if there is a professional who is both associated with the award and is a parent of Liza Huber
  ?professional dbo:award ?award ;
                dbo:child dbr:Liza_Huber .
}
```",3,3,4,2,2,2,3,28,0,0,1,0,0.0,0
93,0,train,Give me the capital of Alaska.,SELECT ?result WHERE { <http://dbpedia.org/resource/Alaska> <http://dbpedia.org/ontology/capital> ?result . },"```sparql
SELECT ?capital WHERE {
  dbpedia:Alaska dbo:capital ?capital .
}
```",1,1,2,1,1,3,2,20,0,0,2,0,0.0,0
442,2,train,"Give me the work of Roosevelt, Theodore.","SELECT ?result WHERE { ?result <http://dbpedia.org/property/author> ""Roosevelt, Theodore""@en . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?work WHERE {
  VALUES ?theodoreRoosevelt { dbr:Theodore_Roosevelt }
  ?theodoreRoosevelt dbo:work ?work .
}
```",1,1,2,1,1,2,2,9,0,0,1,0,0.0,0
579,3,train,"Give me the residence, that is English and a settlement, of Alan Clyne.",SELECT ?result WHERE { <http://dbpedia.org/resource/Alan_Clyne> <http://dbpedia.org/property/residence> ?result . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. ?result <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/United_Kingdom>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>

SELECT ?residence WHERE {
  ?person dbo:residence ?residence .
  FILTER (str(?person) = ""Alan_Clyne"")
  
  ?residence rdf:type dbo:Settlement .
  
  OPTIONAL { 
    ?residence dbo:country dbr:England .
  }
}
```",1,3,2,1,1,3,2,20,0,0,1,0,0.0,0
839,35,train,"Give me the band of the person born, that is a musical artist, as Kevin Richard Russell and band of the band, that is a musical artist, of Charlie Huhn.","SELECT ?result WHERE { ?v2 <http://dbpedia.org/property/birthName> ""Kevin Richard Russell""@en . ?v2 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . <http://dbpedia.org/resource/Charlie_Huhn> <http://dbpedia.org/ontology/associatedMusicalArtist> ?v1 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?result <http://dbpedia.org/ontology/bandMember> ?v1 . }","```sparql
# Query to get the band of Kevin Richard Russell
SELECT ?band WHERE {
  ?person foaf:name ""Kevin Russell""@en .
  ?person dbo:birthDate ?birthdate .
  ?person dbo:associatedBand ?band .
  FILTER EXISTS { ?band a dbo:MusicalArtist }
} LIMIT 1

UNION

# Query to get the band of Charlie Huhn
SELECT ?band WHERE {
  ?person foaf:name ""Charlie Huhn""@en .
  ?person dbo:associatedBand ?band .
  FILTER EXISTS { ?band a dbo:MusicalArtist }
} LIMIT 1
```",4,6,5,2,2,3,3,71,0,0,1,0,0.0,0
124,39,train,"Give me the military force of the force, that is a societal event and a military conflict, of the person born on 1850-06-24 and military force of Battle of Tamai.","SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/commander> ?v0 . ?result <http://dbpedia.org/ontology/battle> ?v1 . ?v0 <http://dbpedia.org/ontology/birthDate> ""1850-06-24""^^<http://www.w3.org/2001/XMLSchema#date> . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?result <http://dbpedia.org/ontology/battle> <http://dbpedia.org/resource/Battle_of_Tamai> . }","```sparql
# Query to find the person born on 1850-06-24
SELECT ?person ?birthDate WHERE {
  ?person dbo:birthDate ?birthDate .
  FILTER (YEAR(?birthDate) = 1850 && MONTH(?birthDate) = 6 && DAY(?birthDate) = 24)
}

# Query to find the military force associated with Horatio Herbert Kitchener
SELECT ?militaryForce WHERE {
  ?kitchener dbo:agent ?event .
  ?kitchener foaf:name ""Horatio Herbert Kitchener"" .
  ?event dbo:militaryUnit ?militaryForce .
}

# Query to find the military forces involved in the Battle of Tamai
SELECT ?battleParticipant WHERE {
  ?battle dbo:participant ?battleParticipant .
  ?battle foaf:name ""Battle of Tamai"" .
}
```",4,6,5,3,2,3,3,71,0,0,4,0,0.0,0
216,16,train,Give me the administration of the designer of Woolfe: The Red Hood Diaries and office of Tim Nicholls.,SELECT ?result WHERE { ?result <http://dbpedia.org/property/leader> ?v2 . <http://dbpedia.org/resource/Tim_Nicholls> <http://dbpedia.org/property/office> ?result . <http://dbpedia.org/resource/Woolfe:_The_Red_Hood_Diaries> <http://dbpedia.org/property/designer> ?v2 . },"```sparql
# Query for the designer of Woolfe: The Red Hood Diaries and their administration
SELECT ?designer ?administration WHERE {
  ?game dcterms:title ""Woolfe: The Red Hood Diaries""@en .
  ?game dbo:developer ?studio .
  ?studio dbo:employee ?person .
  ?person foaf:name ?designer .
  OPTIONAL { ?person dbo:positionHeld ?administration . }
}
```

```sparql
# Query for the office of Tim Nicholls
SELECT ?office WHERE {
  ?tim foaf:name ""Tim Nicholls""@en .
  ?tim dbo:positionHeld ?office .
}
```",3,3,4,2,2,2,3,28,0,0,1,0,0.0,0
579,0,train,Give me the native of Edinburgh.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Edinburgh> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?person WHERE {
  ?person dbo:birthPlace dbr:Edinburgh .
}
```",1,1,2,1,1,3,2,20,1711,0,0,1.0,1.0,1.0
465,28,train,Give me the successor of the child of Alfonso I d'Este and spouse of Archduchess Barbara of Austria and successor of Renée of France.,SELECT ?result WHERE { ?v1 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Alfonso_I_d'Este> . ?result <http://dbpedia.org/ontology/spouse> <http://dbpedia.org/resource/Archduchess_Barbara_of_Austria> . <http://dbpedia.org/resource/Renée_of_France> <http://dbpedia.org/ontology/successor> ?result . ?v1 <http://dbpedia.org/ontology/successor> ?result . },"```sparql
SELECT ?successor WHERE {
  wd:Q123456 wdt:P31 wd:Q5;       # Leonora Gonzaga (child of Alfonso I d'Este)
             wdt:P26 wd:Q789012;   # Spouse of Archduchess Barbara of Austria (Ferdinand II, Archduke of Austria)
  wd:Q123456 wdt:P22 ?parent.     # Parent of Leonora Gonzaga
  ?parent wdt:P31 wd:Q5.
  
  wd:Q987654 wdt:P136 wd:Q111;    # Renée of France (Duchess of Ferrara)
             wdt:P69 wd:Q123456.  # Child of Alfonso I d'Este
  
  wd:Q987654 wdt:P57 ?successor1. # Successor of Renée of France as Duke of Ferrara
  
  ?successor1 wdt:P57 ?successor2. # Successor of Ercole II d'Este (Alfonso II d'Este)
}
```

Note: The actual DBpedia IDs for these historical figures need to be verified and replaced with the correct ones in the query.",4,4,5,2,3,3,3,71,0,0,1,0,0.0,0
791,14,train,"Give me the father of the child, that is a royalty, of Emperor Takakura.",SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v1 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Emperor_Takakura> . ?v1 <http://dbpedia.org/property/father> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?child ?father WHERE {
  VALUES ?emperor { dbr:Emperor_Takakura }
  
  ?child dbo:parent ?emperor .
  OPTIONAL { ?child dbo:spouse ?mother . } # To ensure the child is royalty, they might have a spouse listed
  ?child dbo:father ?father .

  FILTER(?father = ?emperor) # Ensures that Emperor Takakura is indeed the father
}
```",2,3,3,2,1,3,3,71,0,0,1,0,0.0,0
826,26,train,"Give me the successor of the child, that is a royalty, of the reference, that is a royalty, to Louis I.","SELECT ?result WHERE { ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v2 <http://dbpedia.org/ontology/successor> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v1 <http://xmlns.com/foaf/0.1/name> ""Louis I""@en . ?v1 <http://dbpedia.org/ontology/child> ?v2 . }","```sparql
SELECT ?successor WHERE {
  # Step 1: Identify Louis I (assuming Louis I of Hungary)
  wd:Q1234 dbo:spouse ?reference ; 
           dbo:child ?child .

  # Step 2: Ensure the reference is a royalty
  ?reference rdf:type dbo:Monarch .

  # Step 3: Find the child who is also a royalty
  ?child rdf:type dbo:Monarch .

  # Step 4: Determine the successor of this child
  ?child dbo:successor ?successor .
}
```

Note: `wd:Q1234` should be replaced with the actual DBpedia entity ID for Louis I of Hungary or whichever specific Louis I is intended.",3,5,4,3,1,3,3,71,0,0,4,0,0.0,0
267,13,train,"Give me the coach of the player, that is a soccer club, in the manager of 2020–21 Tractor S.C. season.",SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerClub>. <http://dbpedia.org/resource/2020–21_Tractor_S.C._season> <http://dbpedia.org/ontology/manager> ?v0 . ?v1 <http://dbpedia.org/ontology/coach> ?result . ?v0 <http://dbpedia.org/ontology/team> ?v1 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?coach ?club WHERE {
    # Find the coach of Tractor S.C. for the 2020-21 season
    ?team a dbo:SoccerClub ;
          dbo:manager ?coach .
    
    FILTER(CONTAINS(LCASE(?team), ""tractor s.c."") && 
           CONTAINS(LCASE(STR(?coach)), ""2020–21""))

    # Check if this coach is also a manager of any soccer club
    OPTIONAL {
        ?coach dbo:currentManagerOf ?club .
    }
}
```",3,4,4,3,1,3,2,20,0,0,2,0,0.0,0
445,15,train,"Give me the residence, that is a country, of the resident, that is an athlete, of Great Britain.",SELECT ?result WHERE { ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. ?v1 <http://dbpedia.org/property/residence> ?result . ?v1 <http://dbpedia.org/property/residence> <http://dbpedia.org/resource/Great_Britain> . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Athlete>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?residence WHERE {
  ?athlete dbo:nationality dbr:United_Kingdom .
  ?athlete dbo:residence ?residence .
  FILTER (isBlank(?residence) = false)
  ?residence a dbo:Country .
}
```",2,4,3,2,1,3,3,71,1,34,1,0.02857142857142857,0.5,0.05405405405405405
865,17,train,Who is the child of the father of Abul Maal Abdul Muhith?,SELECT ?result WHERE { ?result <http://dbpedia.org/property/father> ?v1 . <http://dbpedia.org/resource/Abul_Maal_Abdul_Muhith> <http://dbpedia.org/property/father> ?v1 . },"```sparql
SELECT ?father ?child WHERE {
  dbpedia:Abul_Maal_Abdul_Muhith dbo:father ?father .
  ?father dbo:child ?child .
}
```",2,2,3,2,1,3,3,71,0,0,3,0,0.0,0
573,11,train,"Give me the person decedent at the administration, that is a region, of Charlie Baker.","SELECT ?result WHERE { ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Region>. ?result <http://dbpedia.org/ontology/deathPlace> ?v0 . ?v0 <http://dbpedia.org/property/governor> ""Charlie Baker""@en . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?person ?deathDate ?region WHERE {
  ?person dbo:deathDate ?death .
  FILTER (?death >= ""2015-01-01""^^xsd:date && ?death <= ""2023-12-31""^^xsd:date)
  
  OPTIONAL { ?person dbo:birthPlace ?place . }
  OPTIONAL { ?place a dbo:AdministrativeRegion . }
  BIND(IF(BOUND(?place), ?place, ""Unknown"") AS ?region)

  FILTER NOT EXISTS {
    ?person dbo:deathDate ?laterDeath .
    FILTER (?laterDeath > ?death)
  }

  # Filter for notable people
  OPTIONAL { ?person dbo:notableFor ?notable . }
}
ORDER BY ?deathDate
LIMIT 10
```",2,3,3,2,1,3,3,71,0,20,968,0.0,0.0,0
965,18,train,"Give me the parent of Louise Mountbatten and parent of George Mountbatten, 2nd Marquess of Milford Haven and spouse of Prince Louis of Battenberg.","SELECT ?result WHERE { <http://dbpedia.org/resource/George_Mountbatten,_2nd_Marquess_of_Milford_Haven> <http://dbpedia.org/ontology/parent> ?result . <http://dbpedia.org/resource/Louise_Mountbatten> <http://dbpedia.org/ontology/parent> ?result . ?result <http://dbpedia.org/ontology/spouse> <http://dbpedia.org/resource/Prince_Louis_of_Battenberg> . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT DISTINCT ?louiseParent ?georgeParent ?princeLouisSpouse WHERE {
  # Louise Mountbatten's parents
  ?louise dbo:parent ?louiseParent .
  VALUES ?louise { 
    dbc:Louise_Mountbatten_(1898-1989) 
  }

  # George Mountbatten, 2nd Marquess of Milford Haven's parents
  ?george dbo:parent ?georgeParent .
  VALUES ?george { 
    dbc:George_Mountbatten,_2nd_Marquess_of_Milford_Haven 
  }

  # Spouse of Prince Louis of Battenberg
  ?princeLouis dbp:spouse ?princeLouisSpouse .
  VALUES ?princeLouis { 
    dbc:Prince_Louis_of_Battenberg 
  }
}
```",3,3,4,1,3,3,3,71,0,0,1,0,0.0,0
773,22,train,"Give me the parent of the child, that is a royalty, of Louis the German and spouse of Louis the German.",SELECT ?result WHERE { <http://dbpedia.org/resource/Louis_the_German> <http://dbpedia.org/ontology/spouse> ?result . ?v1 <http://dbpedia.org/ontology/parent> ?result . ?v1 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Louis_the_German> . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. },"```sparql
SELECT DISTINCT ?parent WHERE {
  # Identify Louis the German
  ?louis a dbo:Person ;
         rdfs:label ""Louis the German""@en .
  
  # Find children who are royalty
  ?child dbo:childOf ?louis ;
         a dbo:Monarch .

  # Find spouse of this child
  ?spouse dbo:spouse ?child .

  # Get parent of the spouse
  ?parent dbo:child ?spouse .
}
```",3,4,4,2,2,3,3,71,0,0,1,0,0.0,0
976,8,train,Who is the person born as Mehmet Naci Bostancı?,"SELECT ?result WHERE { ?result <http://dbpedia.org/property/birthName> ""Mehmet Naci Bostancı""@en . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT ?person ?name WHERE {
  ?person dbo:birthName ""Mehmet Naci Bostancı"" .
  OPTIONAL { ?person foaf:name ?name }
}
```",1,1,2,1,1,3,3,71,0,0,1,0,0.0,0
124,21,train,"Give me the commander in the war, that is a societal event and a military conflict, of A Field Battery, Royal Australian Artillery and military force of Battle of Atbara.","SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/commander> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. <http://dbpedia.org/resource/A_Field_Battery,_Royal_Australian_Artillery> <http://dbpedia.org/ontology/battle> ?v1 . ?result <http://dbpedia.org/ontology/battle> <http://dbpedia.org/resource/Battle_of_Atbara> . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?commander1 ?commander2 WHERE {
  # Commander for A Field Battery, Royal Australian Artillery during a societal event (e.g., World War I)
  OPTIONAL { 
    ?battery dbo:partOf ?event .
    ?event rdf:type dbo:MilitaryConflict .
    ?battery dbo:commander ?commander1 .
    FILTER(CONTAINS(LCASE(STR(?event)), ""world war i""))
  }

  # Commander for the Battle of Atbara
  ?battle dbr:Battle_of_Atbara .
  ?battle dbo:commander ?commander2 .
}
```",3,5,4,2,2,3,3,71,0,0,1,0,0.0,0
888,14,train,Give me the awardee of the award of the commander in 2022 Ukrainian eastern counteroffensive.,SELECT ?result WHERE { <http://dbpedia.org/resource/2022_Ukrainian_eastern_counteroffensive> <http://dbpedia.org/ontology/commander> ?v2 . ?result <http://dbpedia.org/property/awards> ?v0 . ?v2 <http://dbpedia.org/property/awards> ?v0 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?recipient WHERE {
  ?award dbo:rank ""Commander"" .
  ?award dbo:awardedBy dbr:Ukraine .
  ?award dbo:dateAwarded ?date .
  FILTER (YEAR(?date) = 2022)
  ?award dbo:recipient ?recipient .
  ?recipient dbo:description ?description .
  FILTER CONTAINS(LCASE(?description), ""ukrainian eastern counteroffensive"")
}
```",3,3,4,3,1,3,2,20,0,0,44,0,0.0,0
47,5,train,"Give me the award, that is an award, of Mantu Ghosh.",SELECT ?result WHERE { ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Award>. <http://dbpedia.org/resource/Mantu_Ghosh> <http://dbpedia.org/property/awards> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?award WHERE {
  ?person a dbo:Person ;
          foaf:name ""Mantu Ghosh""@en .
  OPTIONAL { ?person dbo:award ?award . }
}
```",1,2,2,1,1,3,3,71,2,0,0,1.0,1.0,1.0
917,6,train,Who is the father of Keʻelikōlani?,SELECT ?result WHERE { <http://dbpedia.org/resource/Keʻelikōlani> <http://dbpedia.org/property/father> ?result . },"```sparql
SELECT ?father WHERE {
  ?person dbo:name ""Keʻelikōlani""@en .
  ?person dbo:father ?father .
}
```",1,1,2,1,1,3,3,71,0,0,1,0,0.0,0
98,2,train,Who is the successor of Emperor Nijō?,SELECT ?result WHERE { <http://dbpedia.org/resource/Emperor_Nijō> <http://dbpedia.org/ontology/successor> ?result . },"```sparql
SELECT ?successor WHERE {
  dbpedia:Emperor_Nijo dbo:successor ?successor .
}
```",1,1,2,1,1,2,2,9,0,0,1,0,0.0,0
839,8,train,"Give me the band, that is a musical artist, of Charlie Huhn.",SELECT ?result WHERE { ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. <http://dbpedia.org/resource/Charlie_Huhn> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . },"```sparql
PREFIX dbp: <http://dbpedia.org/property/>
PREFIX dbo: <http://dbpedia.org/ontology/>

SELECT ?band WHERE {
  ?person foaf:name ""Charlie Huhn""@en .
  ?person dbo:musicArtist ?artist .
  ?artist dbp:band ?band .
}
```",1,2,2,1,1,3,3,71,0,0,4,0,0.0,0
365,2,train,"Give me the commander, that is an office holder, in Ukrainian–Soviet War.",SELECT ?result WHERE { <http://dbpedia.org/resource/Ukrainian–Soviet_War> <http://dbpedia.org/ontology/commander> ?result . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?person ?name ?role WHERE {
  ?person a dbo:Person .
  ?person dbo:commanderOf dbr:Ukrainian–Soviet_War ;
          rdfs:label ?name .
  OPTIONAL { 
    ?person dbo:officeHolder ?office .
    ?office rdfs:label ?role .
  }
  FILTER (lang(?name) = 'en')
}
ORDER BY ?name
LIMIT 10
```",1,2,2,1,1,3,2,20,0,0,5,0,0.0,0
93,8,train,Give me the death place of the governor of Bob Bartlett.,SELECT ?result WHERE { <http://dbpedia.org/resource/Bob_Bartlett> <http://dbpedia.org/property/governor> ?v0 . ?v0 <http://dbpedia.org/ontology/deathPlace> ?result . },"```sparql
SELECT ?deathPlace WHERE {
  wd:Q123456 dbr:Governor_of_Alaska . # Replace Q123456 with the actual DBpedia ID for Bob Bartlett
  wd:Q123456 dbo:deathPlace ?deathPlace .
}
```

Note: The placeholder `wd:Q123456` should be replaced with the correct DBpedia resource identifier for Bob Bartlett. You can find this by searching DBpedia or using a SPARQL query to identify his unique ID.",2,2,3,2,1,3,2,20,0,0,4,0,0.0,0
976,17,train,Who is the person born as the birth name of Naci Bostancı?,SELECT ?result WHERE { ?result <http://dbpedia.org/property/birthName> ?v0 . <http://dbpedia.org/resource/Naci_Bostancı> <http://dbpedia.org/property/birthName> ?v0 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?person ?fullName WHERE {
  ?person dbp:birthName ""Naci Bostancı"" .
  ?person dbo:fullName ?fullName .
}
```",2,2,3,2,1,3,3,71,0,0,1,0,0.0,0
935,5,train,Give me the office of Sanaullah Khan Zehri.,SELECT ?result WHERE { <http://dbpedia.org/resource/Sanaullah_Khan_Zehri> <http://dbpedia.org/property/office> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?office WHERE {
  dbr:Sanaullah_Khan_Zehri dbo:office ?office .
}
```",1,1,2,1,1,3,2,20,0,0,5,0,0.0,0
445,7,train,Who is the commander in Battle of Saint-Mihiel?,SELECT ?result WHERE { <http://dbpedia.org/resource/Battle_of_Saint-Mihiel> <http://dbpedia.org/ontology/commander> ?result . },"```sparql
PREFIX dbp: <http://dbpedia.org/property/>
PREFIX dbo: <http://dbpedia.org/ontology/>

SELECT ?commander WHERE {
  ?battle a dbo:MilitaryEngagement ;
         rdfs:label ""Battle of Saint-Mihiel""@en .
  
  OPTIONAL { ?battle dbp:commander ?commander . }
}
```",1,1,2,1,1,3,3,71,0,0,13,0,0.0,0
417,35,train,"Give me the spouse of the parent, that is a royalty, of Count Ingolf of Rosenborg and child of the child, that is a royalty, of Frederick Francis III, Grand Duke of Mecklenburg-Schwerin.","SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v1 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Frederick_Francis_III,_Grand_Duke_of_Mecklenburg-Schwerin> . ?v2 <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Count_Ingolf_of_Rosenborg> . ?result <http://dbpedia.org/ontology/parent> ?v1 . ?result <http://dbpedia.org/ontology/spouse> ?v2 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT DISTINCT ?spouse ?grandchild WHERE {
  # Step 1: Find Count Ingolf of Rosenborg's parent
  ?countIngolf dbo:title ""Count"" ;
               dbo:parent ?parent .

  # Step 2: Check if the parent is royalty
  OPTIONAL { ?parent dbo:title ?title . FILTER(CONTAINS(LCASE(?title), ""royalty"")) }

  # Step 3: Find the spouse of the royal parent
  ?parent dbo:spouse ?spouse .

  # Step 4: Identify Frederick Francis III's child
  dbp:FrederickFrancisIII dbo:child ?child .

  # Step 5: Check if the child is royalty
  OPTIONAL { ?child dbo:title ?title2 . FILTER(CONTAINS(LCASE(?title2), ""royalty"")) }

  # Step 6: Find the grandchild of Frederick Francis III who is royalty
  ?child dbo:child ?grandchild .
  OPTIONAL { ?grandchild dbo:title ?title3 . FILTER(CONTAINS(LCASE(?title3), ""royalty"")) }
}
```",4,6,5,2,2,3,3,71,0,0,1,0,0.0,0
892,9,train,Give me the entity in Italy and landmark at elevation of 58.,"SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/elevation> ""58""^^<http://www.w3.org/2001/XMLSchema#integer> . ?result <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Italy> . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?entity ?landmark WHERE {
  ?entity dbo:country dbr:Italy .
  ?landmark dbo:location ?entity ;
            dbp:elevation ""58""^^xsd:decimal .
}
```",2,2,3,1,2,3,3,71,0,0,11,0,0.0,0
865,10,train,Give me the native of British Raj and father of Shahla Khatun.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/British_Raj> . <http://dbpedia.org/resource/Shahla_Khatun> <http://dbpedia.org/property/father> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?father WHERE {
  ?shahla a dbo:Person ;
          dbp:childOf ?father .
  ?father dbo:nationality dbr:British_Raj ;
          rdfs:label ?label .
  FILTER(CONTAINS(LCASE(?label), ""native of british raj""))
  VALUES ?shahla { <http://dbpedia.org/resource/Shahla_Khatun> }
}
```",2,2,3,1,2,3,3,71,0,0,1,0,0.0,0
955,6,train,Give me the band of Nate Albert and band of Johnny Rioux.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/bandMember> <http://dbpedia.org/resource/Nate_Albert> . ?result <http://dbpedia.org/ontology/bandMember> <http://dbpedia.org/resource/Johnny_Rioux> . },"```sparql
SELECT ?bandNateAlbert ?bandJohnnyRioux WHERE {
  ?nate a dbo:MusicalArtist ;
        foaf:name ""Nate Albert"" .
  ?format a dbo:Band ;
          dbo:member ?nate .
  BIND(?format AS ?bandNateAlbert)

  ?johnny a dbo:MusicalArtist ;
          foaf:name ""Johnny Rioux"" .
  ?frontBottoms a dbo:Band ;
                dbo:member ?johnny .
  BIND(?frontBottoms AS ?bandJohnnyRioux)
}
```",2,2,3,1,2,3,2,20,0,0,1,0,0.0,0
987,2,train,Give me the entity in Montenegro.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Montenegro> . },"```sparql
SELECT ?entity WHERE {
  ?entity dbo:country dbr:Montenegro .
}
```",1,1,2,1,1,3,3,71,909,0,0,1.0,1.0,1.0
465,38,train,"Give me the successor of the child, that is a royalty, of Anne of Brittany and spouse of the child, that is a royalty, of Ferdinand I, Holy Roman Emperor.","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/spouse> ?v3 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v2 <http://dbpedia.org/ontology/successor> ?result . <http://dbpedia.org/resource/Ferdinand_I,_Holy_Roman_Emperor> <http://dbpedia.org/ontology/child> ?v3 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. <http://dbpedia.org/resource/Anne_of_Brittany> <http://dbpedia.org/ontology/child> ?v2 . }","```sparql
SELECT ?successor WHERE {
  wd:Q1344 wdt:P26 wd:Q1344 ; # Anne of Brittany's spouse (Charles VIII)
  wdt:P40 ?child1 . # Child of Anne and Charles VIII

  ?child1 wdt:P31 wd:Q5 ; # Claude of France is a human
          wdt:P26 ?spouseClaude . # Spouse of Claude of France

  ?spouseClaude wdt:P31 wd:Q5 ;
                rdfs:label ""Francis I""@en . # Francis I of France

  ?child1 wdt:P40 ?grandChild . # Child of Claude and Francis I (Henry II)

  ?grandChild wdt:P31 wd:Q5 ; # Henry II is a human
              rdfs:label ""Henry II, King of France""@en .

  ?grandChild wdt:P26 ?spouseHenry . # Spouse of Henry II

  ?spouseHenry rdfs:label ""Catherine de' Medici""@en . # Catherine de' Medici

  ?grandChild wdt:P40 ?successor . # Successor of Henry II
}
```",4,6,5,2,2,3,3,71,0,0,1,0,0.0,0
715,10,train,Give me the leader of Ministry of the Air (Spain) and commander in Rif War.,SELECT ?result WHERE { <http://dbpedia.org/resource/Rif_War> <http://dbpedia.org/ontology/commander> ?result . <http://dbpedia.org/resource/Ministry_of_the_Air_(Spain)> <http://dbpedia.org/ontology/leader> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?person ?name WHERE {
  ?person dbo:officeTitle dbr:Ministry_of_the_Air_(Spain) .
  ?person dbo:position ""Leader""@en .
  ?person rdfs:label ?name .
  
  OPTIONAL {
    ?person dbo:occupation dbr:Rif_War_commander .
  }
  
  FILTER(LANG(?name) = 'es')
}
```",2,2,3,1,2,3,3,71,0,0,1,0,0.0,0
987,6,train,Who is the actor of All for Free?,SELECT ?result WHERE { <http://dbpedia.org/resource/All_for_Free> <http://dbpedia.org/property/starring> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?actor ?actorLabel WHERE {
  ?movie rdfs:label ""All for Free""@en .
  ?movie a dbo:Film .
  ?movie dbo:starring ?actor .
  ?actor rdfs:label ?actorLabel .
  FILTER(LANG(?actorLabel) = 'en')
}
```",1,1,2,1,1,3,3,71,8,8,0,0.5,1.0,0.6666666666666666
645,28,train,Give me the military force of Spanish Civil War and leader of Ministry of the Army (Spain) and commander in the force of Carlos Asensio Cabanillas.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/battle> <http://dbpedia.org/resource/Spanish_Civil_War> . ?v1 <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Carlos_Asensio_Cabanillas> . ?v1 <http://dbpedia.org/ontology/commander> ?result . <http://dbpedia.org/resource/Ministry_of_the_Army_(Spain)> <http://dbpedia.org/ontology/leader> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?militaryForce ?ministryLeader ?commanderForce WHERE {
  # Find the military force involved in the Spanish Civil War
  ?militaryForce a dbo:MilitaryUnit ;
                 dbo:partOf ?conflict .
  
  FILTER(CONTAINS(LCASE(STR(?conflict)), ""spanish civil war""))

  # Find the leader of the Ministry of the Army during the Spanish Civil War
  ?ministryLeader dbo:positionHeld dbr:Ministry_of_the_Army_(Spain) ;
                  dbo:officeHolderOf ?ministry .
  
  FILTER(CONTAINS(LCASE(STR(?ministry)), ""spanish civil war""))

  # Find Carlos Asensio Cabanillas and the force he commanded
  ?commander a dbo:MilitaryPerson ;
             foaf:name ""Carlos Asensio Cabanillas"" ;
             dbo:commanded ?commanderForce .

}
```",4,4,5,2,3,3,3,71,0,0,1,0,0.0,0
917,24,train,Give me the child of Kekūanāoʻa and child of the father of Keʻelikōlani.,"SELECT ?result WHERE { ?result <http://dbpedia.org/property/father> ""Kekūanāoʻa""@en . ?result <http://dbpedia.org/ontology/parent> ?v2 . <http://dbpedia.org/resource/Keʻelikōlani> <http://dbpedia.org/property/father> ?v2 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?child WHERE {
  # Kekūanāoʻa's child
  ?kekuanaoaChild dbo:parent dbr:Kekūanāoʻa .
  
  # Keʻelikōlani's father is Kekūanāoʻa
  ?keelikolanisFather dbo:child dbr:Keʻelikōlani .
  FILTER(?keelikolanisFather = dbr:Kekūanāoʻa)
  
  # Find the common child
  ?kekuanaoaChild dbo:parent ?keelikolanisFather .
}
```",3,3,4,2,2,3,3,71,0,0,3,0,0.0,0
192,1,train,"Give me the child of Mary of Hungary, Queen of Naples.","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/parent> <http://dbpedia.org/resource/Mary_of_Hungary,_Queen_of_Naples> . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?child ?childLabel WHERE {
  VALUES ?mary { dbr:Maria_of_Hungary_(1371-1395) }
  ?mary dbo:child ?child .
  SERVICE wikibase:label { bd:serviceParam wikibase:language ""[AUTO_LANGUAGE],en"". }
}
```",1,1,2,1,1,3,2,20,0,0,3,0,0.0,0
582,3,train,"Give me the reference, that is a scientist, to Hirotaka Sugawara.","SELECT ?result WHERE { ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Scientist>. ?result <http://xmlns.com/foaf/0.1/name> ""Hirotaka Sugawara""@en . }","```sparql
PREFIX foaf: <http://xmlns.com/foaf/0.1/>
PREFIX dbo: <http://dbpedia.org/ontology/>

SELECT ?scientist WHERE {
  ?sugawara foaf:name ""Hirotaka Sugawara""@en .
  ?sugawara foaf:knows ?person .
  ?person dbo:occupation ?occupation .
  FILTER(CONTAINS(LCASE(?occupation), ""scientist""))
}
```",1,2,2,1,1,3,3,71,0,0,1,0,0.0,0
98,10,train,Give me the birth place of the person born as Paolo Elito M. Ballesteros IV.,"SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/birthPlace> ?result . ?v1 <http://dbpedia.org/property/birthName> ""Paolo Elito M. Ballesteros IV""@en . }","```sparql
SELECT ?birthPlace WHERE {
  ?person foaf:name ""Paolo Elito M. Ballesteros IV""@en .
  ?person dbo:birthPlace ?birthPlace .
}
```",2,2,3,2,1,2,3,28,0,0,2,0,0.0,0
935,10,train,"Give me the office of the native of Balochistan, Pakistan.","SELECT ?result WHERE { ?v0 <http://dbpedia.org/property/office> ?result . ?v0 <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Balochistan,_Pakistan> . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?office WHERE {
  ?person dbo:nationality dbr:Pakistan .
  ?person dbo:birthPlace dbr:Balochistan_(province) .
  ?person dbo:position ?office .
  FILTER(CONTAINS(LCASE(STR(?office)), ""governor""))
}
LIMIT 1
```",2,2,3,2,1,3,2,20,0,0,35,0,0.0,0
18,4,train,Who is the professional in Actress?,"SELECT ?result WHERE { ?result <http://dbpedia.org/property/occupation> ""Actress""@en . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT ?person ?name WHERE {
  ?person a dbo:Person .
  OPTIONAL { ?person foaf:name ?name . }
  ?person dbo:occupation dbo:Actress .
}
ORDER BY ?name
LIMIT 100
```",1,1,2,1,1,2,3,28,0,0,19241,0,0.0,0
236,9,train,"Give me the administration, that is an organisation, of the person decedent, that is a politician and an office holder, at Quincy, Massachusetts.","SELECT ?result WHERE { ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?v0 <http://dbpedia.org/ontology/deathPlace> <http://dbpedia.org/resource/Quincy,_Massachusetts> . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?result <http://dbpedia.org/property/leader> ?v0 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?administration WHERE {
  ?person a dbo:Politician ;
          dbo:officeHolderOf dbr:Quincy,_Massachusetts ;
          dbo:deathPlace dbr:Quincy,_Massachusetts .
  
  OPTIONAL { ?person dbo:memberOf ?administration . }
  
  FILTER(CONTAINS(LCASE(?person), ""josiah quincy iii"") || CONTAINS(LCASE(?person), ""john f. fitzgerald""))
}
```",2,5,3,2,1,3,2,20,0,0,1,0,0.0,0
433,31,train,"Give me the associated musical artist of the person born, that is a musical artist and an artist, as the persona of Paul Chambers and associated musical artist of Bill Evans.",SELECT ?result WHERE { ?v0 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . <http://dbpedia.org/resource/Bill_Evans> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . <http://dbpedia.org/resource/Paul_Chambers> <http://xmlns.com/foaf/0.1/givenName> ?v1 . ?v0 <http://dbpedia.org/property/birthName> ?v1 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?artist WHERE {
  # Find musical artists associated with Paul Chambers
  OPTIONAL { 
    ?paulChambers a dbo:MusicalArtist ;
                  foaf:name ""Paul Chambers"" .
    ?paulChambers dbo:associatedBandOrMusicGroup ?band1 .
    ?band1 dbo:leadMember ?artist .
  }
  
  # Find musical artists associated with Bill Evans
  OPTIONAL { 
    ?billEvans a dbo:MusicalArtist ;
               foaf:name ""Bill Evans"" .
    ?billEvans dbo:associatedBandOrMusicGroup ?band2 .
    ?band2 dbo:leadMember ?artist .
  }
  
  # Filter to find common artist
  FILTER(?artist != dbr:Paul_Chambers && ?artist != dbr:Bill_Evans)
}
```",4,6,5,3,2,3,3,71,0,0,2,0,0.0,0
579,6,train,Give me the native of Edinburgh and person born as Isobel Jane Miller Richard.,"SELECT ?result WHERE { ?result <http://dbpedia.org/property/birthName> ""Isobel Jane Miller Richard""@en . ?result <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Edinburgh> . }","```sparql
SELECT ?person ?name WHERE {
  ?person dbo:birthName ""Isobel Jane Miller Richard""@en .
  ?person dbo:nativePlace dbr:Edinburgh .
  ?person foaf:name ?name .
}
```",2,2,3,1,2,3,2,20,0,0,1,0,0.0,0
865,29,train,"Give me the father of Shahla Khatun and native of British Raj and father of the child, that is a politician, of Abu Ahmad Abdul Hafiz.",SELECT ?result WHERE { ?v3 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Abu_Ahmad_Abdul_Hafiz> . <http://dbpedia.org/resource/Shahla_Khatun> <http://dbpedia.org/property/father> ?result . ?result <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/British_Raj> . ?v3 <http://dbpedia.org/property/father> ?result . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?father WHERE {
  # Shahla Khatun and her father
  ?shahlaKhatun a dbo:Person ;
                foaf:name ""Shahla Khatun""@en .
  ?shahlaKhatun dbo:parent ?father .

  # Father is native of British Raj
  ?father dbo:nationality dbr:British_Raj .

  # Abu Ahmad Abdul Hafiz and his child who is a politician
  ?abuAhmad a dbo:Person ;
            foaf:name ""Abu Ahmad Abdul Hafiz""@en .
  ?child dbo:parent ?father ;
         dbo:occupation dbr:Politician .

}
```",4,5,5,2,3,3,3,71,0,0,1,0,0.0,0
645,24,train,"Give me the leader of Ministry of the Army (Spain) and military force of the force, that is an event and a military conflict and a societal event, of Francisco Largo Caballero.",SELECT ?result WHERE { <http://dbpedia.org/resource/Ministry_of_the_Army_(Spain)> <http://dbpedia.org/ontology/leader> ?result . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?v2 <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Francisco_Largo_Caballero> . ?result <http://dbpedia.org/ontology/battle> ?v2 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?leader ?militaryForce ?event WHERE {
  # Francisco Largo Caballero as leader of the Ministry of War
  ?ministry dbo:head dbr:Fran%C3%A7ois_Largo_Caballero .
  
  # The military force associated with him during the Spanish Civil War
  ?ministry dbo:militaryForce ?militaryForce .

  # The event, which is the Spanish Civil War
  ?event a dbo:MilitaryConflict ;
         rdfs:label ""Spanish Civil War""@en ;
         dbo:participatedInMilitaryGroup ?militaryForce .
  
  # Linking the societal aspect of the event
  ?societalEvent a dbo:SocietalEvent ;
                 rdfs:label ""Spanish Civil War""@en .

  FILTER(?event = ?societalEvent)

  BIND(dbr:Fran%C3%A7ois_Largo_Caballero AS ?leader)
}
```",3,6,4,2,2,3,3,71,0,0,1,0,0.0,0
130,3,train,"Give me the film, that is a soccer club and an organisation, of Candice Storey Lee.",SELECT ?result WHERE { ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerClub>. ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?result <http://dbpedia.org/ontology/director> <http://dbpedia.org/resource/Candice_Storey_Lee> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?film WHERE {
  ?film dbo:writer dbr:Candice_Storey_Lee .
  OPTIONAL { ?film dbo:genre ?genre . FILTER(CONTAINS(LCASE(?genre), ""organization"") || CONTAINS(LCASE(?genre), ""club"")) }
}
```",1,3,2,1,1,3,2,20,0,0,1,0,0.0,0
465,4,train,Give me the child of Alfonso I d'Este.,SELECT ?result WHERE { ?result <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Alfonso_I_d'Este> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?child WHERE {
  ?person dbp:name ""Alfonso I d'Este""@en .
  ?person dbo:child ?child .
}
```",1,1,2,1,1,3,3,71,0,0,2,0,0.0,0
715,24,train,Give me the leader of Ministry of the Air (Spain) and commander in the force of Francisco Largo Caballero.,SELECT ?result WHERE { <http://dbpedia.org/resource/Ministry_of_the_Air_(Spain)> <http://dbpedia.org/ontology/leader> ?result . ?v2 <http://dbpedia.org/ontology/commander> ?result . ?v2 <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Francisco_Largo_Caballero> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?ministerOfAir ?commanderInForce WHERE {
  # Find Francisco Largo Caballero as Prime Minister of Spain
  ?largoCaballero a dbo:PrimeMinister ;
                 foaf:name ""Francisco Largo Caballero""@en ;
                 dbo:country dbr:Spain ;
                 dbo:termStart ?startTerm .

  # Find the leader of the Ministry of the Air during his term
  ?ministerOfAir dbo:officeHolder ?largoCaballero ;
                 dbo:position ""Minister of the Air""@en ;
                 foaf:name ?nameMinister .

  # Find a commander in the force under Francisco Largo Caballero
  ?commanderInForce dbo:subordinateTo ?largoCaballero ;
                    dbo:rank ?rank ;
                    foaf:name ?nameCommander .
}
```",3,3,4,2,2,3,3,71,0,0,1,0,0.0,0
41,11,train,"Give me the party of the work, that is an office holder, of yes.","SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v1 <http://dbpedia.org/property/author> ""yes""@en . ?v1 <http://dbpedia.org/ontology/party> ?result . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?officeHolder ?party WHERE {
  ?officeHolder a dbo:OfficeHolder ;
               foaf:name ""Yes""@en .
  OPTIONAL { ?officeHolder dbo:politicalParty ?party . }
}
```",2,3,3,2,1,2,3,28,0,0,35,0,0.0,0
965,35,train,"Give me the parent of the person born, that is a noble, as Prince George of Battenberg and spouse of the spouse of Princess Victoria of Hesse and by Rhine.","SELECT ?result WHERE { ?v0 <http://dbpedia.org/property/birthName> ""Prince George of Battenberg""@en . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Noble>. ?v0 <http://dbpedia.org/ontology/parent> ?result . ?result <http://dbpedia.org/ontology/spouse> ?v1 . <http://dbpedia.org/resource/Princess_Victoria_of_Hesse_and_by_Rhine> <http://dbpedia.org/ontology/spouse> ?v1 . }","```sparql
SELECT ?parent WHERE {
  wd:Q123456 wdt:P31/wdt:P279* wd:Q5; # Prince George of Battenberg is a human
  wdt:P26 ?spouse. # Spouse of Prince George of Battenberg

  ?spouse wdt:P106 wd:Q215627; # Spouse is a noblewoman (Princess Victoria)
          wdt:P22 ?parent. # Parent of Princess Victoria

  FILTER(?parent != wd:Q123456) # Ensure the parent is not Prince George himself
}
```

Note: Replace `wd:Q123456` with the actual DBpedia identifier for Prince George of Battenberg.",4,5,5,2,2,3,3,71,0,0,1,0,0.0,0
456,8,train,"Give me the band, that is a musical artist, of Dean Brody.",SELECT ?result WHERE { ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. <http://dbpedia.org/resource/Dean_Brody> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?band WHERE {
  ?person a dbo:MusicalArtist ;
          foaf:name ""Dean Brody""@en .
  
  OPTIONAL { 
    ?person dbo:memberOfBand ?band .
  }
}
```",1,2,2,1,1,3,3,71,0,0,2,0,0.0,0
917,9,train,Give me the parent of Albert Kamehameha and child of Kekūanāoʻa.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/parent> <http://dbpedia.org/resource/Kekūanāoʻa> . ?result <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Albert_Kamehameha> . },"```sparql
SELECT ?person WHERE {
  # Find the parent of Albert Kamehameha
  ?albert dbo:child dbr:Albert_Kamehameha ;
          rdfs:label ""Albert Kamehameha""@en .
  
  # Find who this person's spouse is (assuming a traditional family structure)
  ?parent dbo:spouse ?albert .

  # Find the child of Kekūanāoʻa
  ?kekuanaoa dbo:child ?person ;
             rdfs:label ""Kekūanāoʻa""@en .
  
  # Ensure the person is both a parent to Albert and a child of Kekūanāoʻa
  FILTER (?parent = ?person)
}
```",2,2,3,1,2,3,3,71,0,0,1,0,0.0,0
965,21,train,"Give me the parent of George Mountbatten, 2nd Marquess of Milford Haven and spouse of the spouse of Princess Victoria of Hesse and by Rhine.","SELECT ?result WHERE { <http://dbpedia.org/resource/Princess_Victoria_of_Hesse_and_by_Rhine> <http://dbpedia.org/ontology/spouse> ?v2 . ?result <http://dbpedia.org/ontology/spouse> ?v2 . <http://dbpedia.org/resource/George_Mountbatten,_2nd_Marquess_of_Milford_Haven> <http://dbpedia.org/ontology/parent> ?result . }","```sparql
# Step 1: Get the parent of George Mountbatten, 2nd Marquess of Milford Haven
SELECT ?parent WHERE {
    wd:Q1234567 dbo:parent ?parent .
}

# Step 2: Get the spouse of Princess Victoria of Hesse and by Rhine
SELECT ?spouse WHERE {
    wd:Q6543210 dbo:spouse ?spouse .
}

# Step 3: Get the spouse of the person found in step 2 (which should match the parent from step 1)
SELECT ?finalSpouse WHERE {
    ?spouse dbo:spouse ?finalSpouse .
}
```

Note: Replace `wd:Q1234567` with the actual DBpedia ID for George Mountbatten, 2nd Marquess of Milford Haven and `wd:Q6543210` with the DBpedia ID for Princess Victoria of Hesse and by Rhine.",3,3,4,2,2,3,3,71,0,0,1,0,0.0,0
507,22,train,Give me the spouse of Anne V. Coates and professional in the profession of Guy Ferland.,SELECT ?result WHERE { ?result <http://dbpedia.org/property/occupation> ?v1 . ?result <http://dbpedia.org/ontology/spouse> <http://dbpedia.org/resource/Anne_V._Coates> . <http://dbpedia.org/resource/Guy_Ferland> <http://dbpedia.org/property/occupation> ?v1 . },"```sparql
# Query for Anne V. Coates' spouse
SELECT ?spouse WHERE {
  ?anne dbo:name ""Anne V. Coates""@en .
  ?anne dbo:spouse ?spouse .
}

UNION

# Query for Guy Ferland's profession and find professionals in that field
{
  SELECT ?profession WHERE {
    ?guy dbo:name ""Guy Ferland""@en .
    ?guy dbo:occupation ?profession .
  }
  
  # Find other professionals in the same profession as Guy Ferland
  SELECT DISTINCT ?professional WHERE {
    ?person rdf:type ?profession .
    ?person dbo:name ?name .
    FILTER(?name != ""Guy Ferland"")
    BIND(STR(?name) AS ?professional)
  }
}
```",3,3,4,2,2,3,3,71,0,0,1,0,0.0,0
274,1,train,Give me the professional in .,"SELECT ?result WHERE { ?result <http://dbpedia.org/property/occupation> """"@en . }","```
# No valid query can be generated due to lack of specificity in the question.
```",1,1,2,1,1,2,3,28,0,0,39640,0,0.0,0
329,0,train,Give me the birthplace of Eric Cross (writer).,SELECT ?result WHERE { <http://dbpedia.org/resource/Eric_Cross_(writer)> <http://dbpedia.org/ontology/birthPlace> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?birthPlace WHERE {
  dbr:Eric_Cross dbo:birthPlace ?birthPlace .
}
```",1,1,2,1,1,2,3,28,0,0,2,0,0.0,0
47,38,train,Give me the office of the awardee of Banga Bhushan and office of the awardee of Padma Vibhushan.,SELECT ?result WHERE { ?v3 <http://dbpedia.org/property/office> ?result . ?v2 <http://dbpedia.org/property/office> ?result . ?v2 <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/Padma_Vibhushan> . ?v3 <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/Banga_Bhushan> . },"```sparql
SELECT DISTINCT ?awardee ?awardName ?office WHERE {
  {
    ?awardee dbo:award <http://dbpedia.org/resource/Banga_Bhushan> .
    ?awardee dbo:office ?office .
    BIND(""Banga Bhushan"" AS ?awardName)
  }
  UNION
  {
    ?awardee dbo:award <http://dbpedia.org/resource/Padma_Vibhushan> .
    ?awardee dbo:office ?office .
    BIND(""Padma Vibhushan"" AS ?awardName)
  }
}
```",4,4,5,2,2,3,3,71,0,0,1,0,0.0,0
917,11,train,"Give me the parent of the child, that is a royalty, of Kamehameha IV.",SELECT ?result WHERE { ?v1 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Kamehameha_IV> . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?result <http://dbpedia.org/ontology/child> ?v1 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?child ?parent WHERE {
  # Identify Kamehameha IV
  VALUES ?kamehamehaIV { dbr:Kamehameha_IV_of_Hawaii }
  
  # Find children of Kamehameha IV who are royalty
  ?kamehamehaIV dbo:child ?child .
  ?child a dbo:Monarch ; 
         dbo:country ?country .

  # Ensure the child is indeed a monarch (royalty)
  FILTER EXISTS { ?child dbo:country ?country }

  # Find the parent of this royal child
  ?child dbo:parent ?parent .
}
```",2,3,3,2,1,3,3,71,0,0,2,0,0.0,0
433,32,train,"Give me the associated musical artist of the associated musical artist, that is an artist and a musical artist, of Scott LaFaro and associated musical artist of the person born, that is a musical artist and an artist, as Paul Laurence Dunbar Chambers Jr..","SELECT ?result WHERE { ?v3 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. <http://dbpedia.org/resource/Scott_LaFaro> <http://dbpedia.org/ontology/associatedMusicalArtist> ?v3 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?v1 <http://dbpedia.org/property/birthName> ""Paul Laurence Dunbar Chambers Jr.""@en . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?v1 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . }","```sparql
# Find Scott LaFaro's associated musical artist who is both an artist and a musical artist.
SELECT ?artist WHERE {
  wd:Q123456 wdt:P106 wd:Q33999 . # Scott LaFaro has occupation musician (musical artist)
  wd:Q123456 wdt:P527 ?associatedArtist . # Scott LaFaro's associated artists
  ?associatedArtist wdt:P106 wd:Q33999 . # Associated artist is a musician (musical artist)
  ?associatedArtist wdt:P800 ?artwork . # Associated artist has artwork (artist)
}

# Find Paul Laurence Dunbar Chambers Jr.'s associated musical artist who is both an artist and a musical artist.
SELECT ?artist WHERE {
  wd:Q654321 wdt:P106 wd:Q33999 . # Ron Carter has occupation musician (musical artist)
  wd:Q654321 wdt:P19 ?birthPlace . # Ron Carter's place of birth
  wd:Q654321 wdt:P569 ?dateOfBirth . # Ron Carter's date of birth
  wd:Q654321 wdt:P527 ?associatedArtist . # Ron Carter's associated artists
  ?associatedArtist wdt:P106 wd:Q33999 . # Associated artist is a musician (musical artist)
  ?associatedArtist wdt:P800 ?artwork . # Associated artist has artwork (artist)
}

# Find the associated musical artist of Bill Evans.
SELECT ?associatedArtist WHERE {
  wd:Q987654 wdt:P527 ?associatedArtist . # Bill Evans's associated artists
}
```

Note: Replace `wd:Q123456`, `wd:Q654321`, and `wd:Q987654` with the actual DBpedia identifiers for Scott LaFaro, Ron Carter (Paul Laurence Dunbar Chambers Jr.), and Bill Evans respectively.",4,8,5,2,2,3,3,71,0,0,2,0,0.0,0
326,9,train,"Give me the birthplace, that is a state and British, of the professional in Writer.","SELECT ?result WHERE { ?v0 <http://dbpedia.org/ontology/birthPlace> ?result . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/AdministrativeRegion>. ?result <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/United_Kingdom>. ?v0 <http://dbpedia.org/property/occupation> ""Writer""@en . }","```sparql
SELECT ?birthPlace WHERE {
  ?person dbo:occupation dbr:Writer .
  ?person dbo:nationality dbr:United_Kingdom .
  ?person dbo:birthPlace ?birthPlace .
  FILTER regex(?birthPlace, ""New York"", ""i"")
}
```",2,4,3,2,1,3,2,20,0,0,38,0,0.0,0
917,34,train,"Give me the child of Kekūanāoʻa and parent of the child, that is a royalty, of the mayor of Hawaiian Kingdom.","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/child> ?v1 . ?result <http://dbpedia.org/property/father> ""Kekūanāoʻa""@en . ?v1 <http://dbpedia.org/property/father> ?v3 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. <http://dbpedia.org/resource/Hawaiian_Kingdom> <http://dbpedia.org/property/leader> ?v3 . }","```sparql
SELECT ?person WHERE {
  ?person dbo:spouse ?kekuanaoa .
  ?kekuanaoa foaf:name ""Kekūanāoʻa""@en .

  OPTIONAL { ?person dbo:child ?royalty . }
  OPTIONAL { ?mayor dbo:child ?child . }
  OPTIONAL { ?child dbo:parent ?parent . }

  FILTER EXISTS {
    ?royalty rdf:type dbo:Monarch .
  }

  FILTER EXISTS {
    ?mayor foaf:name ""Walter Murray Gibson""@en .
  }

  FILTER EXISTS {
    ?parent rdf:type dbo:Monarch .
  }
}
```",4,5,5,3,2,3,3,71,0,0,2,0,0.0,0
47,6,train,Give me the awardee of Banga Bhushan.,SELECT ?result WHERE { ?result <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/Banga_Bhushan> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?awardee WHERE {
  ?award a dbo:Award ;
        rdfs:label ""Banga Bhushan""@en .
  ?award dbo:recipient ?awardee .
}
```",1,1,2,1,1,3,3,71,0,0,2,0,0.0,0
976,28,train,"Give me the office of Meral Akşener and office of the leader, that is a politician, of Grand National Assembly of Turkey and office of Naci Bostancı.",SELECT ?result WHERE { <http://dbpedia.org/resource/Meral_Akşener> <http://dbpedia.org/property/office> ?result . <http://dbpedia.org/resource/Grand_National_Assembly_of_Turkey> <http://dbpedia.org/ontology/leader> ?v1 . <http://dbpedia.org/resource/Naci_Bostancı> <http://dbpedia.org/property/office> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v1 <http://dbpedia.org/property/office> ?result . },"```sparql
# Query for Meral Akşener's office
SELECT ?office WHERE {
  dbpedia:en:Meral_Aksener dbo:office ?office .
}

UNION

# Query for the Speaker of the Grand National Assembly of Turkey
SELECT ?office WHERE {
  dbpedia:tr:Türkiye_Büyük_Millet_Meclisi_Sözcüsü dbo:office ?office .
}

UNION

# Query for Naci Bostancı's office
SELECT ?office WHERE {
  dbpedia:en:Naci_Bostanci dbo:office ?office .
}
```",4,5,5,2,3,3,3,71,0,0,1,0,0.0,0
433,5,train,"Give me the associated musical artist, that is a musical artist and an artist, of Ornette Coleman.",SELECT ?result WHERE { <http://dbpedia.org/resource/Ornette_Coleman> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?associatedArtist WHERE {
  ?s dbp:name ""Ornette Coleman""@en .
  ?s dbo:associatedMusicalArtist ?associatedArtist .
  ?associatedArtist a dbo:MusicalArtist ;
                   a dbo:Artist .
}
```",1,3,2,1,1,3,3,71,0,0,10,0,0.0,0
965,6,train,"Give me the child, that is a royalty, of Prince Louis of Battenberg.",SELECT ?result WHERE { ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?result <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Prince_Louis_of_Battenberg> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX schema: <http://schema.org/>

SELECT ?child ?title WHERE {
  ?person a dbo:Person ;
          foaf:name ""Louis of Battenberg""@en .
  
  ?person dbo:child ?child .

  OPTIONAL { 
    ?child schema:jobTitle ?title .
    FILTER(CONTAINS(LCASE(?title), ""prince"") || CONTAINS(LCASE(?title), ""duke"") || CONTAINS(LCASE(?title), ""royal""))
  }
}
```",1,2,2,1,1,3,3,71,0,0,2,0,0.0,0
130,5,train,"Give me the administration, that is American, of .","SELECT ?result WHERE { ?result <http://dbpedia.org/property/governor> """"@en . ?result <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/United_States>. }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?administration ?president WHERE {
  ?administration a dbo:Government ;
                  dbo:country dbr:United_States .
  OPTIONAL { ?administration dbo:president ?president . }
}
```",1,2,2,1,1,3,2,20,0,0,43,0,0.0,0
773,15,train,Give me the father of the parent of Bernard (son of Charles the Fat).,SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Bernard_(son_of_Charles_the_Fat)> . ?v1 <http://dbpedia.org/property/father> ?result . },"```sparql
SELECT ?grandFather WHERE {
  ?bernard dbo:father dbr:Charles_the_Fat .
  FILTER (CONTAINS(LCASE(?bernardLabel), ""bernard""))
  
  dbr:Charles_the_Fat dbo:father ?charlesFatFather .

  ?charlesFatFather rdfs:label ?grandFatherLabel .
}
```",2,2,3,2,1,3,3,71,0,0,1,0,0.0,0
456,33,train,"Give me the professional in the alter ego of the reference, that is a fictional character, to Lamont Cranston (radio, film and television) and spouse of Danielle Spencer (Australian actress).","SELECT ?result WHERE { ?result <http://dbpedia.org/property/occupation> ?v3 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/FictionalCharacter>. ?v0 <http://xmlns.com/foaf/0.1/name> ""Lamont Cranston (radio, film and television)""@en . ?v0 <http://dbpedia.org/property/alterEgo> ?v3 . <http://dbpedia.org/resource/Danielle_Spencer_(Australian_actress)> <http://dbpedia.org/ontology/spouse> ?result . }","```sparql
# Query to find Lamont Cranston's alter ego
SELECT ?character WHERE {
  wd:Q1234567 foaf:name ""Lamont Cranston""@en .
  ?character dbo:alterEgo wd:Q1234567 .
}

# Query to find fictional characters associated with Danielle Spencer
SELECT ?spouseCharacter WHERE {
  wd:Q6543210 foaf:name ""Danielle Spencer""@en .
  ?work dbo:actor wd:Q6543210 .
  ?work dbo:character ?spouseCharacter .
  ?spouseCharacter rdf:type dbo:FictionalCharacter .
}

# Assuming we have identified the alter ego and spouse character, check for overlap
SELECT DISTINCT ?commonCharacter WHERE {
  VALUES (?alterEgo) { (wd:Q9876543) } # Replace with actual QID of ""The Shadow""
  VALUES (?spouseCharacter) { (wd:Q8765432) } # Replace with actual QID found from the second query

  FILTER(?alterEgo = ?spouseCharacter)
}
```

Note: The above SPARQL queries assume that we have identified the correct Wikidata IDs for Lamont Cranston, ""The Shadow,"" and Danielle Spencer. These would need to be replaced with the actual QIDs once known.",4,5,5,3,2,3,3,71,0,0,1,0,0.0,0
892,31,train,Give me the entity in the profession of the true self of Enrico Crolla and landmark at elevation of 58.,"SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/country> ?v0 . ?result <http://dbpedia.org/ontology/elevation> ""58""^^<http://www.w3.org/2001/XMLSchema#integer> . ?v2 <http://dbpedia.org/property/occupation> ?v0 . ?v2 <http://xmlns.com/foaf/0.1/givenName> ""Enrico Crolla""@en . }","```sparql
# Query to find Enrico Crolla's profession
SELECT ?profession WHERE {
  ?person foaf:name ""Enrico Crolla""@en .
  ?person dbo:occupation ?profession .
}

UNION

# Query to find a landmark at elevation of 58
SELECT ?landmark WHERE {
  ?landmark a dbo:Lighthouse ;
            dbo:elevationAboveSeaLevel ?elevation .
  FILTER (?elevation = ""58""^^xsd:string)
}
```",4,4,5,3,2,3,3,71,0,0,11,0,0.0,0
573,27,train,"Give me the parent of the author, that is a politician and an office holder, of the work of John Quincy Adams.",SELECT ?result WHERE { ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v2 <http://dbpedia.org/ontology/parent> ?result . ?v1 <http://dbpedia.org/property/author> ?v2 . ?v1 <http://dbpedia.org/property/author> <http://dbpedia.org/resource/John_Quincy_Adams> . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. },"```sparql
SELECT ?parent WHERE {
  ?work dcterms:creator <http://dbpedia.org/resource/John_Quincy_Adams> .
  ?johnQuincyAdams dbo:birthName ""John Quincy Adams""@en ;
                   foaf:parent ?parent .
  OPTIONAL { ?parent dbo:occupation dbp:President_of_the_United_States . }
}
```",3,5,4,3,1,3,3,71,0,0,2,0,0.0,0
715,30,train,"Give me the commander in Spanish Civil War and commander in Rif War and leader of the office, that is a government agency and an organisation, of Carlos Franco Iribarnegaray.",SELECT ?result WHERE { <http://dbpedia.org/resource/Rif_War> <http://dbpedia.org/ontology/commander> ?result . <http://dbpedia.org/resource/Spanish_Civil_War> <http://dbpedia.org/ontology/commander> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. <http://dbpedia.org/resource/Carlos_Franco_Iribarnegaray> <http://dbpedia.org/property/office> ?v1 . ?v1 <http://dbpedia.org/ontology/leader> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/GovernmentAgency>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?person ?name WHERE {
  # Find commanders in the Spanish Civil War
  ?person dbo:occupation dbr:Spanish_Civil_War_commander .
  
  # Find commanders in the Rif War
  ?person dbo:occupation dbr:Rif_War_commander .

  # Check if this person led an office related to Carlos Franco Iribarnegaray
  OPTIONAL {
    ?office dbo:leader ?person ;
            dbo:headquarterLocation dbr:Carlos_Franco_Iribarnegaray .
  }

  # Get the name of the person
  ?person rdfs:label ?name .
  
  FILTER (lang(?name) = 'en')
}
```",4,6,5,2,3,3,3,71,0,0,1,0,0.0,0
917,36,train,"Give me the parent of Albert Kamehameha and child of the father of the child, that is a royalty, of Kamehameha III.",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Albert_Kamehameha> . ?result <http://dbpedia.org/property/father> ?v0 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v3 <http://dbpedia.org/property/father> ?v0 . <http://dbpedia.org/resource/Kamehameha_III> <http://dbpedia.org/ontology/child> ?v3 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>

SELECT ?commonLink WHERE {
  # Step 1: Find Albert Kamehameha's parent
  ?albertKamehameha dbo:parent ?parentAlbert .

  FILTER (str(?albertKamehameha) = ""Albert Kamehameha"")

  # Step 2: Identify a child of Kamehameha III and find that child's father
  ?childKamehamehaIII dbo:parent ?fatherChild .
  
  ?kamehamehaIII dbo:child ?childKamehamehaIII .

  FILTER (str(?kamehamehaIII) = ""Kamehameha III"")

  # Step 3: Ensure the father is royalty
  ?fatherChild a dbo:Monarch .

  # Step 4: Find common link between parent of Albert Kamehameha and royal father
  FILTER (?parentAlbert = ?fatherChild)
  
  BIND(?parentAlbert AS ?commonLink)
}
```",4,5,5,3,2,3,3,71,0,0,1,0,0.0,0
124,26,train,"Give me the military force of the war, that is an event and a military conflict and a societal event, of the awardee of British South Africa Company Medal.",SELECT ?result WHERE { ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v1 <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/British_South_Africa_Company_Medal> . ?v1 <http://dbpedia.org/ontology/battle> ?v2 . ?result <http://dbpedia.org/ontology/battle> ?v2 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?militaryForce WHERE {
  ?person dbo:award dbr:British_South_Africa_Company_Medal .
  
  ?war dbo:participant ?person ;
       a dbo:MilitaryConflict, dbo:Event, dbo:SocietalEvent .

  ?war dbo:militaryForce ?militaryForce .
}
```",3,6,4,3,1,3,3,71,0,0,1434,0,0.0,0
5,4,train,"Give me the associated musical artist, that is a band, of Rubén Colón Tarrats.",SELECT ?result WHERE { <http://dbpedia.org/resource/Rubén_Colón_Tarrats> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Band>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?band WHERE {
  ?person a dbo:Person ;
          foaf:name ""Rubén Colón Tarrats""@en .
  ?association dbo:associatedBand ?band .
  FILTER (isLiteral(?band) = false)
}
```",1,2,2,1,1,3,2,20,2,55858,0,3.580379520229144e-05,1.0,7.160502667287244e-05
976,31,train,"Give me the office of the leader, that is a politician, of the administration, that is an organisation, of Kemal Kılıçdaroğlu and office of Meral Akşener.",SELECT ?result WHERE { ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?v2 <http://dbpedia.org/ontology/leader> ?v0 . <http://dbpedia.org/resource/Meral_Akşener> <http://dbpedia.org/property/office> ?result . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v0 <http://dbpedia.org/property/office> ?result . ?v2 <http://dbpedia.org/property/leader> <http://dbpedia.org/resource/Kemal_Kılıçdaroğlu> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?person ?office WHERE {
  VALUES (?person ?name) { 
    (dbr:Kemal_Kılıçdaroğlu ""Kemal Kılıçdaroğlu"") 
    (dbr:Meral_Akşener ""Meral Akşener"")
  }
  
  OPTIONAL {
    ?person dbo:office ?office .
  }

  FILTER(CONTAINS(LCASE(?office), ""leader"") || CONTAINS(LCASE(?office), ""chair""))
}
```",4,6,5,3,2,3,3,71,0,0,3,0,0.0,0
417,20,train,Give me the child of the father of Frederick IX of Denmark and spouse of Princess Caroline-Mathilde of Denmark.,SELECT ?result WHERE { ?result <http://dbpedia.org/property/father> ?v2 . <http://dbpedia.org/resource/Frederick_IX_of_Denmark> <http://dbpedia.org/property/father> ?v2 . ?result <http://dbpedia.org/ontology/spouse> <http://dbpedia.org/resource/Princess_Caroline-Mathilde_of_Denmark> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?child WHERE {
  # Frederick IX's father
  dbr:Frederick_IX_of_Denmark dbo:father dbr:Christian_X_of_Denmark .
  
  # Princess Caroline-Mathilde's spouse
  dbr:Princess_Caroline_Matilda_of_Denmark dbo:spouse dbr:Frederick_VI_of_Denmark .

  # Common child of Christian X and Frederick VI
  ?child dbo:parent dbr:Christian_X_of_Denmark .
  ?child dbo:parent dbr:Frederick_VI_of_Denmark .
}
```",3,3,4,2,2,3,3,71,0,0,1,0,0.0,0
130,1,train,Give me the entity in Tennessee.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/state> <http://dbpedia.org/resource/Tennessee> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?entity WHERE {
  ?entity a dbo:Place .
  OPTIONAL { ?entity dbo:country dbr:United_States . }
  OPTIONAL { ?entity dbp:state dbr:Tennessee . }
}
```",1,1,2,1,1,3,2,20,96,804698,592,0.00011928518353765063,0.13953488372093023,0.00023836659292200197
442,5,train,"Give me the resting place of the work of Roosevelt, Theodore.","SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/restingPlace> ?result . ?v1 <http://dbpedia.org/property/author> ""Roosevelt, Theodore""@en . }","```sparql
SELECT ?place WHERE {
  ?work dcterms:creator <http://dbpedia.org/resource/Theodore_Roosevelt> .
  ?work dbo:location ?place .
  FILTER(CONTAINS(LCASE(STR(?place)), ""memorial""))
}
```",2,2,3,2,1,2,2,9,0,0,1,0,0.0,0
236,14,train,"Give me the party member of the administration of the reference, that is an office holder and a politician, to James Madison.","SELECT ?result WHERE { ?v0 <http://dbpedia.org/property/leader> ?v2 . ?result <http://dbpedia.org/ontology/party> ?v0 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v2 <http://xmlns.com/foaf/0.1/name> ""James Madison""@en . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?person ?office ?party WHERE {
  ?person dbo:president dbr:James_Madison .
  ?person dbo:positionHeld ?office .
  ?person dbo:politicalParty ?party .
  FILTER (strstarts(str(?party), ""Democratic-Republican Party""))
}
```",3,5,4,3,1,3,2,20,0,0,597,0,0.0,0
965,30,train,"Give me the parent of the person born, that is a noble, as Prince George of Battenberg and spouse of Prince Louis of Battenberg and parent of Louise Mountbatten.","SELECT ?result WHERE { ?v0 <http://dbpedia.org/property/birthName> ""Prince George of Battenberg""@en . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Noble>. ?result <http://dbpedia.org/ontology/spouse> <http://dbpedia.org/resource/Prince_Louis_of_Battenberg> . <http://dbpedia.org/resource/Louise_Mountbatten> <http://dbpedia.org/ontology/parent> ?result . ?v0 <http://dbpedia.org/ontology/parent> ?result . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?parent WHERE {
  ?george a dbo:Person ;
          rdfs:label ""Prince George of Battenberg""@en .
  
  ?george dbo:spouse ?louis .
  ?louis rdfs:label ""Prince Louis of Battenberg""@en .

  ?child dbo:parent ?george ;
         dbo:parent ?louis .
  ?child rdfs:label ""Louise Mountbatten""@en .

  ?george dbo:parent ?parent .
}
```",4,5,5,2,3,3,3,71,0,0,1,0,0.0,0
508,0,train,Give me the birthplace of Ma Hongkui.,SELECT ?result WHERE { <http://dbpedia.org/resource/Ma_Hongkui> <http://dbpedia.org/ontology/birthPlace> ?result . },"```sparql
SELECT ?birthPlace WHERE {
  ?person foaf:name ""Ma Hongkui""@en .
  ?person dbo:birthPlace ?birthPlace .
}
```",1,1,2,1,1,3,2,20,3,0,0,1.0,1.0,1.0
507,32,train,"Give me the director of the movie, that is a movie and a work, with Beryl Reid and spouse of the person born as Anne Voase Coates.","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/spouse> ?v1 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?v3 <http://dbpedia.org/ontology/director> ?result . ?v3 <http://dbpedia.org/property/starring> <http://dbpedia.org/resource/Beryl_Reid> . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Film>. ?v1 <http://dbpedia.org/property/birthName> ""Anne Voase Coates""@en . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?director WHERE {
  # Find Anne Voase Coates' spouse
  ?anneVoaseCoates a dbo:Person ;
                  foaf:name ""Anne Voase Coates""@en .
  ?anneVoaseCoates dbo:spouse ?spouse .

  # Find movies with Beryl Reid and that are also works
  ?movie dbo:starring dbr:Beryl_Reid ;
         rdf:type dbo:Film, dbo:Work .

  # Ensure the movie is directed by someone
  ?movie dbo:director ?director .

  # Filter to find the specific movie involving Anne Voase Coates' spouse
  FILTER(?spouse = ?personInvolved)
}
```",4,6,5,2,2,3,3,71,0,0,1,0,0.0,0
124,10,train,Give me the military force of Battle of Atbara and commander in Mahdist War.,SELECT ?result WHERE { <http://dbpedia.org/resource/Mahdist_War> <http://dbpedia.org/ontology/commander> ?result . ?result <http://dbpedia.org/ontology/battle> <http://dbpedia.org/resource/Battle_of_Atbara> . },"```sparql
PREFIX dbpedia-owl: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?force ?commander WHERE {
  ?battle a dbpedia-owl:Battle ;
          rdfs:label ""Battle of Atbara""@en .
  
  OPTIONAL { 
    ?force dbp:participatedIn ?battle ;
           rdfs:label ?forceLabel .
    FILTER (lang(?forceLabel) = 'en')
  }
  
  OPTIONAL {
    ?commander dbp:commanderOf ?force ;
               rdfs:label ?commanderLabel .
    FILTER (lang(?commanderLabel) = 'en')
  }
}
```",2,2,3,1,2,3,3,71,0,0,1,0,0.0,0
582,10,train,Give me the figure known as --10-19 and reference to Japan.,"SELECT ?result WHERE { ?result <http://dbpedia.org/property/nickname> ""--10-19""^^<http://www.w3.org/2001/XMLSchema#gMonthDay> . ?result <http://xmlns.com/foaf/0.1/name> ""Japan""@en . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dct: <http://purl.org/dc/terms/>

SELECT ?event ?date ?description WHERE {
  ?event a dbo:Earthquake ;
         dbo:date ?date ;
         rdfs:label ?label .
  FILTER(CONTAINS(LCASE(?label), ""great kanto earthquake"") && CONTAINS(LCASE(?label), ""japan""))
  OPTIONAL { ?event dct:description ?description }
  FILTER(YEAR(?date) = 1923)
}
```",2,2,3,1,2,3,3,71,0,0,1,0,0.0,0
965,3,train,Give me the parent of Louise Mountbatten.,SELECT ?result WHERE { <http://dbpedia.org/resource/Louise_Mountbatten> <http://dbpedia.org/ontology/parent> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?parent WHERE {
  ?person a dbo:Person ;
          foaf:name ""Louise Mountbatten""@en .
  ?child dbo:child ?person .
  ?child foaf:name ""Louise Mountbatten""@en .
  ?parent dbo:parent ?child .
}
```",1,1,2,1,1,3,3,71,0,0,2,0,0.0,0
445,28,train,"Give me the death place of Patrick Moore and entity in the residence, that is a country, of Anna Sharkey and entity in United Kingdom.",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/United_Kingdom> . ?result <http://dbpedia.org/ontology/location> ?v1 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. <http://dbpedia.org/resource/Anna_Sharkey> <http://dbpedia.org/property/residence> ?v1 . <http://dbpedia.org/resource/Patrick_Moore> <http://dbpedia.org/ontology/deathPlace> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?deathPlace (SAMPLE(?country) AS ?residenceCountry)
WHERE {
  # Patrick Moore's death place
  dbr:Patrick_Moore dbo:deathPlace ?deathPlace .

  # Anna Sharkey's residence and its country
  dbr:Anna_Sharkey dbo:residence ?residence .
  ?residence dbo:country ?country .

  # Ensure one of the entities is in the United Kingdom
  FILTER (
    EXISTS { ?deathPlace dbo:country dbr:United_Kingdom } ||
    EXISTS { ?country dbr:United_Kingdom }
  )
}
```",4,5,5,2,3,3,3,71,0,0,1,0,0.0,0
554,10,train,"Give me the birth place of the band, that is an artist, of Rita Redshoes.",SELECT ?result WHERE { ?v0 <http://dbpedia.org/ontology/birthPlace> ?result . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. <http://dbpedia.org/resource/Rita_Redshoes> <http://dbpedia.org/ontology/associatedMusicalArtist> ?v0 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?placeOfOrigin WHERE {
  VALUES ?band { dbr:The_Legendary_Tigerman }
  ?band dbo:birthPlace ?placeOfOrigin .
}
```",2,3,3,2,1,3,2,20,1,0,0,1.0,1.0,1.0
433,2,train,Give me the professional in Musician.,"SELECT ?result WHERE { ?result <http://dbpedia.org/property/occupation> ""Musician""@en . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?musician ?name WHERE {
  ?musician dbo:wikiPageCategories dbc:Musicians .
  ?musician rdfs:label ?name .
  FILTER (LANG(?name) = 'en')
}
ORDER BY ?name
LIMIT 10
```",1,1,2,1,1,3,3,71,0,0,7563,0,0.0,0
365,12,train,"Give me the person born as Symon Vasylyovych Petliura and spouse of the native, that is a politician, of Poltava Governorate.","SELECT ?result WHERE { ?v0 <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Poltava_Governorate> . ?result <http://dbpedia.org/property/birthName> ""Symon Vasylyovych Petliura""@en . ?v0 <http://dbpedia.org/ontology/spouse> ?result . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. }","```sparql
SELECT ?person WHERE {
  # Find Symon Vasylyovych Petliura
  ?petliura dbo:birthName ""Symon Vasylyovych Petliura""@en .
  
  # Get his spouse
  ?petliura dbo:spouse ?spouse .

  # Find politicians from Poltava Governorate
  ?politician a dbo:Politician ;
              dbo:nativePlace ?poltava .

  # Check if the spouse is also a politician from Poltava Governorate
  ?spouse = ?politician .
}
```",3,4,4,2,2,3,2,20,0,0,1,0,0.0,0
433,29,train,"Give me the associated musical artist of the associated musical artist, that is an artist and a musical artist, of Scott LaFaro and professional in Musician and associated musical artist of Paul Chambers.","SELECT ?result WHERE { ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. ?v3 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . <http://dbpedia.org/resource/Scott_LaFaro> <http://dbpedia.org/ontology/associatedMusicalArtist> ?v3 . ?result <http://dbpedia.org/property/occupation> ""Musician""@en . <http://dbpedia.org/resource/Paul_Chambers> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . }","```sparql
# Step 1: Find Scott LaFaro's associated musical artists
SELECT ?artist WHERE {
    wd:Q123456 wdt:P106 wd:Q33999 . # Scott LaFaro is a musician
    wd:Q123456 wdt:P463 ?artist .   # Associated musicians of Scott LaFaro
}

# Step 2: Find Paul Chambers' associated musical artists
SELECT ?chambersArtist WHERE {
    wd:Q654321 wdt:P106 wd:Q33999 . # Paul Chambers is a musician
    wd:Q654321 wdt:P463 ?chambersArtist . # Associated musicians of Paul Chambers
}

# Step 3: Find common associated musical artist
SELECT DISTINCT ?commonArtist WHERE {
    { 
        wd:Q123456 wdt:P106 wd:Q33999 .
        wd:Q123456 wdt:P463 ?commonArtist .
    }
    UNION
    {
        wd:Q654321 wdt:P106 wd:Q33999 .
        wd:Q654321 wdt:P463 ?commonArtist .
    }
}

# Step 4: Find the associated musical artist of the common musician
SELECT ?finalArtist WHERE {
    ?commonArtist wdt:P106 wd:Q33999 . # Common musician is a musician
    ?commonArtist wdt:P463 ?finalArtist . # Associated musicians of the common musician
}
```

Note: Replace `wd:Q123456` with Scott LaFaro's actual DBpedia QID and `wd:Q654321` with Paul Chambers' actual DBpedia QID. The property `P106` is used for occupation (musician), and `P463` is used for associated musical artists.",4,6,5,2,3,3,3,71,0,0,1,0,0.0,0
273,0,train,Give me the spouse of Edoardo Agnelli (industrialist).,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/spouse> <http://dbpedia.org/resource/Edoardo_Agnelli_(industrialist)> . },"```sparql
SELECT ?spouse WHERE {
  ?person foaf:name ""Edoardo Agnelli""@it .
  ?person dbo:occupation dbr/Industrialist .
  ?person dbo:spouse ?spouse .
}
```",1,1,2,1,1,3,2,20,0,0,1,0,0.0,0
645,29,train,"Give me the military force of the force, that is an event and a military conflict and a societal event, of Francisco Largo Caballero and leader of Ministry of the Army (Spain) and commander in Battle of Jarama.",SELECT ?result WHERE { ?v3 <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Francisco_Largo_Caballero> . ?result <http://dbpedia.org/ontology/battle> ?v3 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. <http://dbpedia.org/resource/Battle_of_Jarama> <http://dbpedia.org/ontology/commander> ?result . <http://dbpedia.org/resource/Ministry_of_the_Army_(Spain)> <http://dbpedia.org/ontology/leader> ?result . },"```sparql
SELECT ?militaryForce WHERE {
  ?person foaf:name ""Francisco Largo Caballero""@en .
  ?person dbo:role ?role .
  ?role dbo:position ""Minister of Defense (Spain)""@en ;
        dbo:organization ?organization .
  ?organization rdfs:label ?orgLabel .
  FILTER(CONTAINS(LCASE(?orgLabel), ""republican army"") || CONTAINS(LCASE(?orgLabel), ""ejército popular de la república"")) .
  
  OPTIONAL {
    ?person dbo:commanderInBattle ?battle .
    ?battle rdfs:label ?battleLabel .
    FILTER(CONTAINS(LCASE(?battleLabel), ""jarama""))
  }
  
  OPTIONAL {
    ?event dbo:isPartOf ?conflict .
    ?conflict dbo:wikiPageRedirects dbpedia:Spanish_Civil_War .
    ?person dbo:involvedInEvent ?event .
  }

  FILTER(CONTAINS(LCASE(?orgLabel), ""republican army"") || CONTAINS(LCASE(?orgLabel), ""ejército popular de la república""))
  
  BIND(IRI(CONCAT(""http://dbpedia.org/resource/"", REPLACE(UCASE(REPLACE(?orgLabel, "" "", ""_"")), ""_"", """"))) AS ?militaryForce)
}
```",4,7,5,2,3,3,3,71,0,0,1,0,0.0,0
129,18,train,Give me the associated musical artist of the person born as Tahj Malik Chandler and associated musical artist of EarthGang.,"SELECT ?result WHERE { <http://dbpedia.org/resource/EarthGang> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v2 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v2 <http://dbpedia.org/property/birthName> ""Tahj Malik Chandler""@en . }","```sparql
# Query for Lil Uzi Vert (Tahj Malik Chandler)
SELECT ?artist WHERE {
  ?entity rdfs:label ""Lil Uzi Vert""@en .
  ?entity dbo:birthName Tahj_Malik_Chandler .
  ?entity dbo:musicalArtist ?artist .
}

UNION

# Query for EarthGang
SELECT ?artist WHERE {
  ?entity rdfs:label ""EarthGang""@en .
  ?entity dbo:musicalArtist ?artist .
}
```",3,3,4,2,2,2,3,28,0,0,1,0,0.0,0
773,38,train,"Give me the parent of the child, that is a royalty, of Louis the German and parent of the successor of Charles the Bald.",SELECT ?result WHERE { ?v2 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Louis_the_German> . <http://dbpedia.org/resource/Charles_the_Bald> <http://dbpedia.org/ontology/successor> ?v3 . ?v2 <http://dbpedia.org/ontology/parent> ?result . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?result <http://dbpedia.org/ontology/child> ?v3 . },"```sparql
# Step 1: Find Louis the German's royal children
SELECT ?child WHERE {
  ?louis dbp:spouse|dbp:partner ?parent .
  ?louis rdfs:label ""Louis the German""@en .
  ?child dbo:parent ?parent ;
         dbo:royaltyTitle ?title .
}

# Step 2: Find the parent of Louis the German's royal child
SELECT DISTINCT ?parent WHERE {
  ?louis dbp:spouse|dbp:partner ?parent .
  ?louis rdfs:label ""Louis the German""@en .
  ?child dbo:parent ?parent ;
         dbo:royaltyTitle ?title .
}

# Step 3: Find Charles the Bald's successor
SELECT ?successor WHERE {
  ?charles dbp:succeededBy ?successor .
  ?charles rdfs:label ""Charles the Bald""@en .
}

# Step 4: Find the parent of Charles the Bald's successor
SELECT DISTINCT ?parent WHERE {
  ?charles dbp:succeededBy ?successor .
  ?charles rdfs:label ""Charles the Bald""@en .
  ?successor dbo:parent ?parent .
}

# Step 5: Find common individual in both sets of parents
SELECT DISTINCT ?commonParent WHERE {
  { 
    ?louis dbp:spouse|dbp:partner ?commonParent .
    ?louis rdfs:label ""Louis the German""@en .
    ?child dbo:parent ?commonParent ;
           dbo:royaltyTitle ?title .
  }
  UNION
  {
    ?charles dbp:succeededBy ?successor .
    ?charles rdfs:label ""Charles the Bald""@en .
    ?successor dbo:parent ?commonParent .
  }
}
```",4,5,5,2,2,3,3,71,0,0,2,0,0.0,0
353,4,train,Give me the entity in Russia and alma mater of Daniil Yegorov.,SELECT ?result WHERE { <http://dbpedia.org/resource/Daniil_Yegorov> <http://dbpedia.org/ontology/almaMater> ?result . ?result <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Russia> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?entityInRussia ?almaMater WHERE {
  ?yegorov a dbo:Person ;
          foaf:name ""Daniil Yegorov""@en .
  
  OPTIONAL { 
    ?yegorov dbo:birthPlace ?place .
    ?place dbp:country ""Russia"" .
    BIND(?place AS ?entityInRussia)
  }
  
  OPTIONAL {
    ?yegorov dbo:almaMater ?university .
    BIND(?university AS ?almaMater)
  }
}
```",2,2,3,1,2,2,2,9,1,0,0,1.0,1.0,1.0
582,19,train,Give me the player in Kazuaki Nagasawa and reference to the residence of Hirotaka Sugawara.,SELECT ?result WHERE { ?result <http://xmlns.com/foaf/0.1/name> ?v0 . <http://dbpedia.org/resource/Hirotaka_Sugawara> <http://dbpedia.org/property/residence> ?v0 . <http://dbpedia.org/resource/Kazuaki_Nagasawa> <http://dbpedia.org/ontology/team> ?result . },"```sparql
# Query to find a player associated with Kazuaki Nagasawa
SELECT ?player WHERE {
  ?nagasawa dbo:occupation ""Footballer""@en .
  ?nagasawa foaf:name ""Kazuaki Nagasawa"" .
  ?team dbo:member ?nagasawa .
  ?team dbo:member ?player .
  FILTER(?player != ?nagasawa)
}

# Query to find the residence of Hirotaka Sugawara
SELECT ?residence WHERE {
  ?sugawara foaf:name ""Hirotaka Sugawara"" .
  ?sugawara dbo:residenceLocation ?residence .
}
```",3,3,4,2,2,3,3,71,0,0,1,0,0.0,0
122,4,train,Give me the band of Gift of Gab (rapper) and band member of Lyrics Born.,SELECT ?result WHERE { <http://dbpedia.org/resource/Gift_of_Gab_(rapper)> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?result <http://dbpedia.org/ontology/associatedMusicalArtist> <http://dbpedia.org/resource/Lyrics_Born> . },"```sparql
# Query to find the band associated with Gift of Gab
SELECT ?band WHERE {
  ?giftOfGab dbo:associatedBand ?band .
  FILTER (str(?giftOfGab) = ""Gift_of_Gab"")
}

UNION

# Query to find bands that include Lyrics Born as a member
SELECT ?band WHERE {
  ?lyricsBorn dbo:member ?band .
  FILTER (str(?lyricsBorn) = ""Lyrics_Born"")
}
```",2,2,3,1,2,2,2,9,0,0,2,0,0.0,0
326,1,train,Give me the professional in Composer.,SELECT ?result WHERE { ?result <http://dbpedia.org/property/occupation> <http://dbpedia.org/resource/Composer> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?composer WHERE {
  ?composer a dbo:Person .
  ?composer dbo:occupation ?occupation .
  ?occupation rdfs:label ""Composer""@en .
}
```",1,1,2,1,1,2,2,9,1838,1749,78,0.5124059102313911,0.9592901878914405,0.6679992731237506
892,25,train,"Give me the landmark at elevation of 58 and entity in the administration, that is Italian and a region and a settlement and an administrative region, of Democratic Party (Italy).","SELECT ?result WHERE { ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Region>. ?v0 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Italy>. ?result <http://dbpedia.org/ontology/elevation> ""58""^^<http://www.w3.org/2001/XMLSchema#integer> . ?result <http://dbpedia.org/ontology/province> ?v0 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/AdministrativeRegion>. ?v0 <http://dbpedia.org/property/leaderParty> <http://dbpedia.org/resource/Democratic_Party_(Italy)> . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?landmark WHERE {
  ?landmark a dbo:Landmark ;
            dbo:elevation ""58""^^xsd:integer ;
            dbo:country dbr:Italy ;
            dbo:administrativeRegion ?region ;
            dbo:settlement ?settlement ;
            dbo:region ?region .
  
  OPTIONAL { ?region dbp:governingParty dbr:Democratic_Party_(Italy) . }
}
```",3,7,4,2,2,3,3,71,0,0,2,0,0.0,0
645,35,train,"Give me the leader of the office, that is a government agency and an organisation, of Camilo Menéndez Tolosa and commander in the force of Carlos Asensio Cabanillas.",SELECT ?result WHERE { <http://dbpedia.org/resource/Camilo_Menéndez_Tolosa> <http://dbpedia.org/property/office> ?v1 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?v2 <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Carlos_Asensio_Cabanillas> . ?v2 <http://dbpedia.org/ontology/commander> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/GovernmentAgency>. ?v1 <http://dbpedia.org/ontology/leader> ?result . },"```sparql
# Step 1: Find the office or organization led by Camilo Menéndez Tolosa
SELECT ?office WHERE {
  ?person foaf:name ""Camilo Menéndez Tolosa""@en .
  ?person dbo:positionHeld ?office .
  FILTER EXISTS { ?office a dbo:GovernmentAgency . }
  FILTER EXISTS { ?office a dbo:Organization . }
}

# Step 2: Find the force commanded by Carlos Asensio Cabanillas
SELECT ?force WHERE {
  ?person foaf:name ""Carlos Asensio Cabanillas""@en .
  ?person dbo:commanded ?force .
}

# Step 3: Identify common leader for both office and force
SELECT DISTINCT ?leader WHERE {
  # Leader of the office led by Camilo Menéndez Tolosa
  ?office dbo:head ?leader .
  
  # Leader in the force commanded by Carlos Asensio Cabanillas
  ?force dbo:commander ?leader .
}
```",4,6,5,2,2,3,3,71,0,0,1,0,0.0,0
926,2,train,Give me the child of Ahmed III.,SELECT ?result WHERE { <http://dbpedia.org/resource/Ahmed_III> <http://dbpedia.org/ontology/child> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?child WHERE {
  ?s dbp:name ""Ahmed III""@en .
  ?s a dbo:Sultan .
  ?s dbo:child ?child .
}
```",1,1,2,1,1,3,3,71,0,0,11,0,0.0,0
573,1,train,"Give me the person decedent at Quincy, Massachusetts.","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/deathPlace> <http://dbpedia.org/resource/Quincy,_Massachusetts> . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?person ?description WHERE {
  ?person dbo:birthPlace dbr:Quincy,_Massachusetts ;
          dbo:deathPlace ?place .
  FILTER(CONTAINS(LCASE(STR(?place)), ""quincy, massachusetts""))
  OPTIONAL { ?person rdfs:comment ?description }
}
```",1,1,2,1,1,3,3,71,0,0,40,0,0.0,0
839,19,train,"Give me the band of the person born, that is a musical artist, as Kevin Richard Russell and band of Peter Schorowsky.","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/bandMember> <http://dbpedia.org/resource/Peter_Schorowsky> . ?v0 <http://dbpedia.org/property/birthName> ""Kevin Richard Russell""@en . ?v0 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?band WHERE {
  # Query for Kenny Wayne Shepherd (Kevin Richard Russell)
  OPTIONAL { 
    VALUES ?person { dbr:Kenny_Wayne_Shepherd }
    ?person dbo:musicalArtist ?artist .
    ?artist dbo:associatedBand ?band .
  }

  # Attempt to query for Peter Schorowsky
  OPTIONAL {
    VALUES ?person { dbr:Peter_Schorowsky } 
    ?person dbo:musicalArtist ?artist .
    ?artist dbo:associatedBand ?band .
  }
}
```",3,4,4,2,2,3,3,71,0,0,1,0,0.0,0
573,15,train,"Give me the administration, that is a region, of the real name of Charlie Baker (Australian footballer).",SELECT ?result WHERE { ?result <http://dbpedia.org/property/governor> ?v1 . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Region>. <http://dbpedia.org/resource/Charlie_Baker_(Australian_footballer)> <http://xmlns.com/foaf/0.1/name> ?v1 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT DISTINCT ?realName ?region WHERE {
  ?person foaf:name ""Charlie Baker""@en .
  ?person dbo:nationality dbr:Australian_Footballer .
  
  OPTIONAL { 
    ?person foaf:name ?realName .
    FILTER(?realName != ""Charlie Baker"")
  }
  
  OPTIONAL {
    ?person dbo:administratorOf ?region .
  }
}
```",2,3,3,2,1,3,3,71,0,0,1,0,0.0,0
933,3,train,"Who is the band, that is an artist and a musical artist, of The Ramong Sound?",SELECT ?result WHERE { <http://dbpedia.org/resource/The_Ramong_Sound> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?band WHERE {
  ?band a dbo:Band .
  ?band rdfs:label ?label .
  FILTER(CONTAINS(LCASE(?label), ""the rolling stones""))
  OPTIONAL { ?band dbo:genre ?genre . }
}
```",1,3,2,1,1,3,3,71,0,3,3,0.0,0.0,0
527,1,train,Give me the author of The Boy Who Kicked Pigs.,SELECT ?result WHERE { <http://dbpedia.org/resource/The_Boy_Who_Kicked_Pigs> <http://dbpedia.org/property/author> ?result . },"```sparql
SELECT ?author WHERE {
  ?book dbo:title ""The Boy Who Kicked Pigs""@en .
  ?book dbo:author ?author .
}
```",1,1,2,1,1,3,2,20,0,0,1,0,0.0,0
166,4,train,Give me the reference to Madrid.,"SELECT ?result WHERE { ?result <http://xmlns.com/foaf/0.1/name> ""Madrid""@en . }","```sparql
SELECT ?entity ?label WHERE {
  ?entity rdfs:label ""Madrid""@en.
  SERVICE wikibase:label { bd:serviceParam wikibase:language ""[AUTO_LANGUAGE],en"". }
}
```",1,1,2,1,1,3,2,20,0,0,6,0,0.0,0
465,20,train,"Give me the successor of Ercole II d'Este, Duke of Ferrara and spouse of the child, that is a royalty, of Ferdinand I, Holy Roman Emperor.","SELECT ?result WHERE { ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?result <http://dbpedia.org/ontology/spouse> ?v2 . <http://dbpedia.org/resource/Ferdinand_I,_Holy_Roman_Emperor> <http://dbpedia.org/ontology/child> ?v2 . <http://dbpedia.org/resource/Ercole_II_d'Este,_Duke_of_Ferrara> <http://dbpedia.org/ontology/successor> ?result . }","```sparql
SELECT ?successor ?spouse WHERE {
  wd:Q123456 wdt:P39 wd:Q789012 . # Ercole II d'Este was Duke of Ferrara (P39)
  wd:Q123456 wdt:P1368 ?successor . # Successor of Ercole II d'Este
  ?child wdt:P31 wd:Q5 ; # Child of Ferdinand I, Holy Roman Emperor
         wdt:P26 ?spouse . # Spouse of the child
  FILTER(?spouse = ?successor) .
}
```

Note: Replace `wd:Q123456` with the DBpedia identifier for Ercole II d'Este and `wd:Q789012` with the identifier for Duke of Ferrara. Similarly, replace `?child` with the appropriate identifier for a child of Ferdinand I.",3,4,4,2,2,3,3,71,0,0,1,0,0.0,0
102,12,train,"Give me the manager of Sheffield United W.F.C. and native of the residence, that is English and a settlement, of Peter Finbow.",SELECT ?result WHERE { ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. ?v0 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/United_Kingdom>. <http://dbpedia.org/resource/Peter_Finbow> <http://dbpedia.org/property/residence> ?v0 . <http://dbpedia.org/resource/Sheffield_United_W.F.C.> <http://dbpedia.org/ontology/manager> ?result . ?result <http://dbpedia.org/ontology/birthPlace> ?v0 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?manager WHERE {
  # Find Peter Finbow's birthplace that is an English settlement
  dbr:Peter_Finbow dbo:birthPlace ?residence .
  
  # Ensure the residence is a settlement in England
  ?residence rdf:type dbo:Settlement ;
             dbo:country dbr:England .

  # Link to the manager of Sheffield United W.F.C.
  OPTIONAL { 
    ?manager dbo:currentManagerOf dbr:Sheffield_United_Women's_Football_Club .
  }
  
  FILTER EXISTS { ?residence dbo:inhabitant dbr:Peter_Finbow } .
}
```",3,5,4,2,2,3,2,20,0,0,1,0,0.0,0
326,5,train,"Give me the person decedent at the region coded, that is a settlement, as 442/760.","SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. ?result <http://dbpedia.org/ontology/deathPlace> ?v1 . ?v1 <http://dbpedia.org/ontology/areaCode> ""442/760"" . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?person ?personLabel WHERE {
  ?place a dbo:Settlement ;
        foaf:name ""442/760"" ; # Assuming this is the name or identifier of the place

  ?person dbo:deathPlace ?place ;
          a dbo:Person .

  SERVICE wikibase:label { bd:serviceParam wikibase:language ""[AUTO_LANGUAGE],en"". }
}
```",2,3,3,2,1,2,2,9,0,0,699,0,0.0,0
456,31,train,"Give me the spouse of the actor of the movie, that is a work and a television show, with Ross Newton and professional in .","SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/TelevisionShow>. ?v0 <http://dbpedia.org/ontology/spouse> ?result . ?v1 <http://dbpedia.org/property/starring> <http://dbpedia.org/resource/Ross_Newton> . ?result <http://dbpedia.org/property/occupation> """"@en . ?v1 <http://dbpedia.org/property/starring> ?v0 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?actor ?spouse WHERE {
  # Step 1 & 2: Find television shows where Ross Newton is an actor
  ?tvShow a dbo:TelevisionShow ;
          dbo:starring dbr:Ross_Newton .

  # Step 4: Identify other actors in these television shows
  ?tvShow dbo:starring ?actor .
  
  FILTER(?actor != dbr:Ross_Newton) 

  # Step 5: Find the spouse of each actor
  OPTIONAL { ?actor dbo:spouse ?spouse . }
}
```",4,6,5,3,2,3,3,71,2,23,0,0.08,1.0,0.14814814814814814
465,33,train,"Give me the spouse of the child, that is a royalty, of the parent of Elizabeth of Austria (1526–1545) and successor of Ercole II d'Este, Duke of Ferrara.","SELECT ?result WHERE { ?v0 <http://dbpedia.org/ontology/child> ?v3 . ?result <http://dbpedia.org/ontology/spouse> ?v3 . <http://dbpedia.org/resource/Ercole_II_d'Este,_Duke_of_Ferrara> <http://dbpedia.org/ontology/successor> ?result . ?v0 <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Elizabeth_of_Austria_(1526–1545)> . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. }","```sparql
SELECT ?spouse WHERE {
  # Elizabeth of Austria (1526–1545)
  ?elizabeth dbo:birthDate ""1526-07-15""^^xsd:date ;
             dbo:deathDate ""1545-02-14""^^xsd:date ;
             dbo:parent ?parent .

  # Parent of Elizabeth of Austria
  ?parent rdfs:label ""Anna Jagiellon""@en .

  # Successor of Ercole II d'Este, Duke of Ferrara
  ?ercole2 dbo:succeededBy ?successor .
  ?successor rdfs:label ""Alfonso II d'Este, Duke of Ferrara""@en .

  # Child of Anna Jagiellon and Alfonso II d'Este
  ?child dbo:parent ?anna ;
         dbo:parent ?alfonsoII ;
         rdf:type dbo:RoyalFamilyMember .

  # Renée of Austria
  ?anna rdfs:label ""Anna Jagiellon""@en .
  ?alfonsoII rdfs:label ""Alfonso II d'Este, Duke of Ferrara""@en .
  ?child rdfs:label ""Renée of Austria""@en .

  # Spouse of Renée of Austria
  ?child dbo:spouse ?spouse .
}
```",4,5,5,3,2,3,3,71,0,0,1,0,0.0,0
93,3,train,"Give me the headquarter, that is a region and a settlement, of Lake Clark National Park and Preserve.",SELECT ?result WHERE { ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Region>. <http://dbpedia.org/resource/Lake_Clark_National_Park_and_Preserve> <http://dbpedia.org/ontology/location> ?result . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?headquarters WHERE {
  ?park dbo:location dbr:Lake_Clark_National_Park_and_Preserve .
  ?park dbo:administrativeCenter ?headquarters .
  
  ?headquarters a dbo:Region ;
                a (dbo:Settlement|dbo:City) .

  FILTER NOT EXISTS { ?headquarters a dbo:Country } # Exclude countries
}
```",1,3,2,1,1,3,2,20,0,0,5,0,0.0,0
102,5,train,"Give me the residence, that is English and a settlement, of Peter Finbow.",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/United_Kingdom>. ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. <http://dbpedia.org/resource/Peter_Finbow> <http://dbpedia.org/property/residence> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?residence WHERE {
  ?person dbo:name ""Peter Finbow""@en .
  ?person dbo:residence ?residence .
  ?residence a dbo:Settlement ;
             dbo:country dbr:England .
}
```",1,3,2,1,1,3,2,20,0,0,1,0,0.0,0
527,8,train,"Give me the author of the work, that is a work and a book, of Tom Baker.",SELECT ?result WHERE { ?v0 <http://dbpedia.org/property/author> ?result . ?v0 <http://dbpedia.org/property/author> <http://dbpedia.org/resource/Tom_Baker> . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Book>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. },"```sparql
SELECT ?book ?author WHERE {
  ?book dbo:creator dbr:Tom_Baker .
  ?book rdf:type dbo:Book .
  OPTIONAL { ?book dbo:author ?author . }
}
```",2,4,3,2,1,3,2,20,0,0,1,0,0.0,0
433,10,train,Give me the associated musical artist of Paul Chambers and professional in Musician.,"SELECT ?result WHERE { ?result <http://dbpedia.org/property/occupation> ""Musician""@en . <http://dbpedia.org/resource/Paul_Chambers> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?artist WHERE {
  VALUES ?paulChambers { dbr:Paul_Chambers_(bassist) }
  
  ?paulChambers dbo:associatedBand ?band .
  ?band dbo:member ?artist .

  FILTER(?artist != ?paulChambers)
}
```",2,2,3,1,2,3,3,71,0,0,15,0,0.0,0
273,12,train,Give me the parent of the alumnus of University of Turin and spouse of Edoardo Agnelli (industrialist).,SELECT ?result WHERE { ?v0 <http://dbpedia.org/ontology/almaMater> <http://dbpedia.org/resource/University_of_Turin> . ?v0 <http://dbpedia.org/ontology/parent> ?result . ?result <http://dbpedia.org/ontology/spouse> <http://dbpedia.org/resource/Edoardo_Agnelli_(industrialist)> . },"```sparql
SELECT ?spouse ?parent WHERE {
  # Find Edoardo Agnelli's spouse
  dbpedia:Edoardo_Agnelli_(industrialist) dbo:spouse ?spouse .
  
  # Check if the spouse is an alumnus of University of Turin
  ?spouse dbo:almaMater dbr:University_of_Turin .

  # Find parent(s) of the identified spouse
  ?spouse foaf:parent ?parent .
}
```",3,3,4,2,2,3,2,20,0,0,1,0,0.0,0
715,6,train,Give me the force of Francisco Largo Caballero.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Francisco_Largo_Caballero> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?position ?startDate ?endDate WHERE {
  VALUES ?person { dbr:Fran%C3%A7ois_Largo_Caballero }
  ?person dbo:officeHeld ?position .
  ?position dbo:beginDate ?startDate ;
            dbo:endDate ?endDate .
}
```",1,1,2,1,1,3,3,71,0,0,1,0,0.0,0
926,37,train,Give me the successor of the child of the spouse of Şermi Kadın and child of Ahmed III.,SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/spouse> <http://dbpedia.org/resource/Şermi_Kadın> . <http://dbpedia.org/resource/Ahmed_III> <http://dbpedia.org/ontology/child> ?result . ?v2 <http://dbpedia.org/property/father> ?v1 . ?v2 <http://dbpedia.org/ontology/successor> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?successor WHERE {
  # Şermi Kadın's spouse is Mustafa II
  dbr:Şermi_Kadın dbo:spouse dbr:Mustafa_II_of_the_Ottoman_Empire .
  
  # Mustafa II's child who succeeded him is Mustafa III
  dbr:Mustafa_II_of_the_Ottoman_Empire dbo:child dbr:Mustafa_III .

  # The successor of Mustafa III is Abdul Hamid I
  dbr:Mustafa_III dbo:succeededBy dbr:Abdul_Hamid_I .
  
  BIND(dbr:Abdul_Hamid_I AS ?successor)
}
```",4,4,5,3,2,3,3,71,0,0,1,0,0.0,0
826,3,train,Give me the father of Anna Magdalena Appel.,SELECT ?result WHERE { <http://dbpedia.org/resource/Anna_Magdalena_Appel> <http://dbpedia.org/property/father> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>

SELECT ?father WHERE {
  ?person a dbo:Person ;
          foaf:name ""Anna Magdalena Appel""@en .
  ?person dbo:father ?father .
}
```",1,1,2,1,1,3,3,71,0,0,1,0,0.0,0
606,3,train,"Give me the nickname of DeKalb, Illinois.","SELECT ?result WHERE { <http://dbpedia.org/resource/DeKalb,_Illinois> <http://dbpedia.org/property/nickname> ?result . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?nickname WHERE {
  ?place a dbo:PopulatedPlace ;
        rdfs:label ""DeKalb, Illinois""@en .
  OPTIONAL { ?place dbo:nickName ?nickname . }
}
```",1,1,2,1,1,3,2,20,0,0,1,0,0.0,0
47,4,train,Give me the administration of Jagdeep Dhankhar.,SELECT ?result WHERE { ?result <http://dbpedia.org/property/governor> <http://dbpedia.org/resource/Jagdeep_Dhankhar> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?role ?startDate ?endDate WHERE {
  VALUES ?person { dbr:Jagdeep_Dhankhar }
  
  ?person dbo:office ?role .
  OPTIONAL { ?role dbo:positionHeldStartDate ?startDate . }
  OPTIONAL { ?role dbo:positionHeldEndDate ?endDate . }

  FILTER EXISTS { ?role rdfs:label ?label . FILTER(CONTAINS(LCASE(?label), ""vice president of india"") || CONTAINS(LCASE(?label), ""chairman of the rajya sabha"")) }
}
```",1,1,2,1,1,3,3,71,0,0,49,0,0.0,0
791,6,train,Give me the child of Emperor Takakura.,SELECT ?result WHERE { ?result <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Emperor_Takakura> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>

SELECT ?child WHERE {
  ?person dbo:parent dbr:Takakura.
  ?person a dbo:Person.
  ?person dbo:child ?child.
}
```",1,1,2,1,1,3,3,71,0,0,3,0,0.0,0
582,24,train,"Give me the figure known as --10-19 and player in the father, that is an athlete and a soccer manager and a sports manager, of Masami Nagasawa.","SELECT ?result WHERE { ?result <http://dbpedia.org/property/nickname> ""--10-19""^^<http://www.w3.org/2001/XMLSchema#gMonthDay> . ?v2 <http://dbpedia.org/ontology/team> ?result . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Athlete>. <http://dbpedia.org/resource/Masami_Nagasawa> <http://dbpedia.org/property/father> ?v2 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerManager>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsManager>. }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?fatherName ?nickname WHERE {
  ?masami a dbo:Person ;
          foaf:name ""Masami Nagasawa""@en .
  ?masami dbo:parent ?father .
  ?father foaf:name ?fatherName .
  OPTIONAL { 
    ?father dbp:nickname ?nickname .
  }
  FILTER(CONTAINS(?nickname, ""-10-19""))
}
```",3,6,4,2,2,3,3,71,0,0,1,0,0.0,0
98,7,train,Give me the region of Philippine Standard Time and entity in Philippines.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Philippines> . ?result <http://dbpedia.org/ontology/timeZone> <http://dbpedia.org/resource/Philippine_Standard_Time> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?region ?entity WHERE {
  # Find the region associated with Philippine Standard Time
  ?timeZone a dbo:TimeZone ;
            rdfs:label ""Philippine Standard Time""@en .
  
  OPTIONAL { ?timeZone dbo:country ?region . }
  
  # Select an entity in the Philippines
  ?entity dbo:location dbr:Philippines .
}
LIMIT 1
```",2,2,3,1,2,2,3,28,0,0,1743,0,0.0,0
465,13,train,"Give me the spouse of the child, that is a royalty, of Ferdinand I, Holy Roman Emperor.","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/spouse> ?v1 . <http://dbpedia.org/resource/Ferdinand_I,_Holy_Roman_Emperor> <http://dbpedia.org/ontology/child> ?v1 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. }","```sparql
SELECT ?spouse WHERE {
  # Identify Ferdinand I, Holy Roman Emperor
  wd:Ferdinand_I,_Holy_Roman_Emperor dbo:child ?royalChild .
  
  # Ensure the child is royalty (has a royal title)
  ?royalChild wdt:P39 wd:Q11696 .  # P39 is ""position held"" and Q11696 represents ""monarch""
  
  # Find the spouse of this royal child
  ?royalChild dbp:spouse ?spouse .
}
```",2,3,3,2,1,3,3,71,0,0,7,0,0.0,0
839,29,train,Give me the band of the member of Böhse Onkelz and band of Matthias Röhr and band of Kevin Russell (musician).,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/bandMember> <http://dbpedia.org/resource/Matthias_Röhr> . <http://dbpedia.org/resource/Böhse_Onkelz> <http://dbpedia.org/ontology/bandMember> ?v3 . <http://dbpedia.org/resource/Kevin_Russell_(musician)> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?result <http://dbpedia.org/ontology/bandMember> ?v3 . },"```sparql
SELECT ?band1 ?band2 ?band3 WHERE {
  # Stephan Weidner and Böhse Onkelz
  dbpedia:Stephan_Weidner dbo:musicArtist dbpedia:B_hse_Onkelz .
  
  # Matthias Röhr and Eisbrecher
  dbpedia:Matthias_R_hr dbo:musicArtist dbpedia:Eisbrecher .

  # Kevin Russell (musician) and The Black Crowes
  dbpedia:Kevin_Russell_(musician) dbo:musicArtist dbpedia:The_Black_Crowes .
  
  BIND(dbpedia:B_hse_Onkelz AS ?band1)
  BIND(dbpedia:Eisbrecher AS ?band2)
  BIND(dbpedia:The_Black_Crowes AS ?band3)
}
```",4,4,5,2,3,3,3,71,0,0,1,0,0.0,0
987,39,train,"Give me the entity in the region, that is a country, of the time zone, that is a sports event, in Canicosa de la Sierra and birth place of Moamer Kasumović.",SELECT ?result WHERE { ?v0 <http://dbpedia.org/property/timeZone> ?v2 . ?result <http://dbpedia.org/ontology/country> ?v0 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. <http://dbpedia.org/resource/Canicosa_de_la_Sierra> <http://dbpedia.org/ontology/timeZone> ?v2 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsEvent>. <http://dbpedia.org/resource/Moamer_Kasumović> <http://dbpedia.org/ontology/birthPlace> ?result . },"```sparql
SELECT DISTINCT ?country WHERE {
  # Step 1: Find Canicosa de la Sierra's time zone
  ?canicosa dbp:timeZone ?timezone .
  
  # Step 2: Identify sports events in that time zone
  ?event dbp:timeZone ?timezone ;
         rdf:type dbo:SportsEvent .

  # Step 3: Determine the region of these sports events
  ?event dbp:location ?region .

  # Step 4: Find countries in that region
  ?country dbp:partOfRegion ?region ;
           rdf:type dbo:Country .

  # Step 5: Find Moamer Kasumović's birthplace
  ?kasumovic dbo:birthPlace ?birthPlace .
  
  # Step 6: Match country with birthplace
  FILTER (?birthPlace = ?country)
}
```",4,6,5,3,2,3,3,71,0,0,1,0,0.0,0
102,2,train,"Give me the member, that is a soccer player, of England women's national football team.",SELECT ?result WHERE { ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerPlayer>. ?result <http://dbpedia.org/ontology/team> <http://dbpedia.org/resource/England_women's_national_football_team> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?player WHERE {
  ?team dbo:member ?player .
  ?player dbo:occupation ?occupation .
  FILTER(CONTAINS(LCASE(?occupation), ""soccer player"") || CONTAINS(LCASE(?occupation), ""footballer""))
  VALUES ?team { dbr:England_women%27s_national_football_team }
}
```",1,2,2,1,1,3,2,20,0,0,147,0,0.0,0
865,26,train,"Give me the father of the child, that is a politician, of the spouse of Syeda Shahar Banu.",SELECT ?result WHERE { ?v1 <http://dbpedia.org/property/father> ?v0 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. <http://dbpedia.org/resource/Syeda_Shahar_Banu> <http://dbpedia.org/ontology/spouse> ?v0 . ?v1 <http://dbpedia.org/property/father> ?result . },"```sparql
SELECT ?father WHERE {
  # Step 1: Identify Syeda Shahar Banu
  ?syeda sh:spouse ?spouse .
  
  FILTER(?syeda = dbpedia:Syeda_Sharbanoo)

  # Step 2: Find her spouse
  ?spouse a dbo:Person .

  # Step 3: Identify the child of the spouse
  ?child dbo:parent ?spouse ;
         a dbo:Person .

  # Step 4: Filter for politician children
  ?child dbo:occupation dbpedia:Politician .

  # Step 5: Find the father of the politician child
  ?child dbo:father ?father .
}
```",3,4,4,3,1,3,3,71,0,0,1,0,0.0,0
41,18,train,"Give me the party of the work, that is an office holder, of yes and party of Declan Costello.","SELECT ?result WHERE { ?v1 <http://dbpedia.org/property/author> ""yes""@en . <http://dbpedia.org/resource/Declan_Costello> <http://dbpedia.org/ontology/party> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v1 <http://dbpedia.org/ontology/party> ?result . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?person ?partyLabel ?officeLabel WHERE {
  # Leo Varadkar
  VALUES ?leoVaradkar { dbr:Léo_Varadkar }
  
  ?leoVaradkar dbo:politicalParty ?leoParty .
  ?leoVaradkar dbo:positionHeld ?leoOffice .

  SERVICE <http://dbpedia.org/sparql> {
    ?leoParty rdfs:label ?partyLabel .
    FILTER (lang(?partyLabel) = 'en')
  }

  OPTIONAL {
    ?leoOffice rdfs:label ?officeLabel .
    FILTER (lang(?officeLabel) = 'en')
  }
  
  # Declan Costello
  VALUES ?declanCostello { dbr/Declan_Costello_(politician) }
  
  ?declanCostello dbo:politicalParty ?costelloParty .
  ?declanCostello dbo:positionHeld ?costelloOffice .

  SERVICE <http://dbpedia.org/sparql> {
    ?costelloParty rdfs:label ?partyLabel2 .
    FILTER (lang(?partyLabel2) = 'en')
  }

  OPTIONAL {
    ?costelloOffice rdfs:label ?officeLabel2 .
    FILTER (lang(?officeLabel2) = 'en')
  }
}
```",3,4,4,2,2,2,3,28,0,0,1,0,0.0,0
978,7,train,"Give me the band member of the professional, that is a musical artist and an artist, in .","SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?result <http://dbpedia.org/ontology/associatedMusicalArtist> ?v1 . ?v1 <http://dbpedia.org/property/occupation> """"@en . }","```sparql
# Hypothetical query template (requires specific artist name)
SELECT ?bandMember WHERE {
  ?person foaf:name ""NameOfTheArtist"" .
  ?person dbo:occupation dbp:MusicalArtist .
  ?person dbo:occupation dbp:Artist .
  ?band dbo:member ?person .
  ?band rdfs:label ?bandLabel .
  FILTER (lang(?bandLabel) = 'en') .
}
```",2,4,3,2,1,3,2,20,0,0,9007,0,0.0,0
18,0,train,Give me the professional in .,"SELECT ?result WHERE { ?result <http://dbpedia.org/property/occupation> """"@en . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?person ?name WHERE {
  ?person a dbo:Doctor .
  ?person foaf:name ?name .
}
```

This query is hypothetical and assumes we are looking for doctors. It selects individuals who have the occupation of ""Doctor"" and retrieves their names.",1,1,2,1,1,2,3,28,0,0,39640,0,0.0,0
453,5,train,"Give me the religion of the birth place, that is a country, of William Denning.",SELECT ?result WHERE { <http://dbpedia.org/resource/William_Denning> <http://dbpedia.org/ontology/birthPlace> ?v1 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. ?v1 <http://dbpedia.org/ontology/religion> ?result . },"```sparql
SELECT ?birthPlaceLabel ?religionLabel WHERE {
  ?denning dbo:birthPlace ?birthPlace .
  ?denning foaf:name ""William Denning"" .

  OPTIONAL { 
    ?birthPlace rdfs:label ?birthPlaceLabel .
    FILTER (lang(?birthPlaceLabel) = 'en')
  }

  OPTIONAL {
    ?birthPlace wdt:P31 wd:Q6256 . # Q6256 is the DBpedia class for Country
    ?country dbo:religion ?religion .
    ?religion rdfs:label ?religionLabel .
    FILTER (lang(?religionLabel) = 'en')
  }
}
```",2,3,3,2,1,2,2,9,0,0,1,0,0.0,0
573,38,train,"Give me the parent of the author, that is a politician and an office holder, of Exchequer Standards and person decedent at the residence, that is a settlement, of William J. Phelan.",SELECT ?result WHERE { ?v2 <http://dbpedia.org/ontology/parent> ?result . <http://dbpedia.org/resource/William_J._Phelan> <http://dbpedia.org/property/residence> ?v3 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. ?result <http://dbpedia.org/ontology/deathPlace> ?v3 . <http://dbpedia.org/resource/Exchequer_Standards> <http://dbpedia.org/property/author> ?v2 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?parent WHERE {
  # Step 1: Identify William J. Phelan's residence (settlement)
  ?phelanResidence a dbo:Settlement ;
                   dbo:decedent dbr:William_J._Phelan .

  # Step 2: Find the author of Exchequer Standards
  ?author dbo:work dbr:Exchequer_Standards .

  # Step 3: Check if the author is a politician and office holder
  ?author a dbo:Politician ;
          dbo:officeHolder true .

  # Step 4: Determine the parent of the author
  ?parent dbo:child ?author .

  # Ensure all conditions are met
  FILTER(?phelanResidence = ?residence)
}
```",4,7,5,2,2,3,3,71,0,0,2,0,0.0,0
459,9,train,Give me the person born as John Kevin Stitt and governor of Dana Murphy.,"SELECT ?result WHERE { ?result <http://dbpedia.org/property/birthName> ""John Kevin Stitt""@en . <http://dbpedia.org/resource/Dana_Murphy> <http://dbpedia.org/property/governor> ?result . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT ?person ?givenName ?familyName WHERE {
  ?person a dbo:Person .
  ?person foaf:givenName ?givenName .
  ?person foaf:familyName ?familyName .
  OPTIONAL { ?person dbo:birthName ""John Kevin Stitt"" . }
  OPTIONAL { ?role dbo:agent ?person ;
              dbo:title ""Governor Dana Murphy""@en . }
}
```",2,2,3,1,2,2,3,28,0,54,1,0.0,0.0,0
93,5,train,Who is the governor of Bob Bartlett?,SELECT ?result WHERE { <http://dbpedia.org/resource/Bob_Bartlett> <http://dbpedia.org/property/governor> ?result . },"```sparql
SELECT ?governor WHERE {
  ?office dbo:positionHeld dbr:Governor_of_Alaska .
  ?office dbo:officeHolder ?governor .
  ?governor foaf:name ""Bob Bartlett""@en .
}
```",1,1,2,1,1,3,2,20,0,0,2,0,0.0,0
329,4,train,"Give me the region, that is a country, of Western European Time.",SELECT ?result WHERE { ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. ?result <http://dbpedia.org/property/timeZone> <http://dbpedia.org/resource/Western_European_Time> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?country WHERE {
  ?timeZone a dbo:TimeZone ;
            rdfs:label ""Western European Time""@en .
  
  ?location dbo:timeZone ?timeZone ;
            a dbo:Country ;
            rdfs:label ?countryLabel .

  FILTER (lang(?countryLabel) = 'en')
}
```",1,2,2,1,1,2,3,28,0,0,6,0,0.0,0
216,15,train,Give me the office of the mayor of Ros Bates and administration of .,"SELECT ?result WHERE { ?result <http://dbpedia.org/property/leader> """"@en . <http://dbpedia.org/resource/Ros_Bates> <http://dbpedia.org/property/leader> ?v1 . ?v1 <http://dbpedia.org/property/office> ?result . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?office ?administration 
WHERE {
  ?person a dbo:Person ;
          foaf:name ""Ros Bates""@en .
  
  OPTIONAL { ?person dbo:office ?office . }
  OPTIONAL { ?person dbo:administrativePost ?administration . }

  FILTER (lang(?office) = 'en' || lang(?administration) = 'en')
}
```",3,3,4,2,2,2,3,28,0,0,1,0,0.0,0
47,26,train,"Give me the office of the awardee of the award, that is an award, of Mantu Ghosh.",SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Award>. <http://dbpedia.org/resource/Mantu_Ghosh> <http://dbpedia.org/property/awards> ?v1 . ?v2 <http://dbpedia.org/property/office> ?result . ?v2 <http://dbpedia.org/property/awards> ?v1 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?awardName ?awardeeOffice WHERE {
  # Identify Mantu Ghosh as an entity
  dbr:Mantu_Ghosh dbo:award ?award .

  # Retrieve the name of the award
  ?award rdfs:label ?awardName .

  # For each award, identify the awardees
  ?award dbo:recipient ?awardee .

  # Determine the office or position of the awardee at the time they received the award
  OPTIONAL { 
    ?awardee dbo:office ?awardeeOffice .
  }

  FILTER (lang(?awardName) = 'en')
}
```",3,4,4,3,1,3,3,71,0,0,1,0,0.0,0
715,21,train,"Give me the commander in the force, that is a military conflict, of Abd el-Krim and leader of Ministry of the Air (Spain).",SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Abd_el-Krim> . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. <http://dbpedia.org/resource/Ministry_of_the_Air_(Spain)> <http://dbpedia.org/ontology/leader> ?result . ?v1 <http://dbpedia.org/ontology/commander> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?commander WHERE {
  # Abd el-Krim's military conflict
  dbr:Rif_War dbo:opposingCommander ?commander .
  
  # Check if the commander was involved in Spanish forces during the Rif War
  ?commander dbo:nationality dbr:Spain .

  # Check if the commander also served as Minister of the Air in Spain
  OPTIONAL {
    ?commander dbo:officeHolderOf dbr:Ministry_of_the_Air_(Spain) .
  }
  
  FILTER EXISTS { ?commander dbo:officeHolderOf dbr:Ministry_of_the_Air_(Spain) }
}
```",3,4,4,2,2,3,3,71,0,0,1,0,0.0,0
715,20,train,Give me the commander in the force of Francisco Largo Caballero and commander in Rif War.,SELECT ?result WHERE { ?v2 <http://dbpedia.org/ontology/commander> ?result . <http://dbpedia.org/resource/Rif_War> <http://dbpedia.org/ontology/commander> ?result . ?v2 <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Francisco_Largo_Caballero> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?commanderLargoCaballero ?commanderRifWar WHERE {
  # Commander in Francisco Largo Caballero's force (Spanish Civil War)
  OPTIONAL { 
    ?person dbo:spouse dbr:Fran%C3%A7ois_Largo_Caballero .
    ?person dbo:occupation dbr:Military_person .
    ?person rdfs:label ?commanderLargoCaballero .
    FILTER(LANG(?commanderLargoCaballero) = ""en"")
  }
  
  # Commander in the Rif War
  OPTIONAL {
    ?rifWarEvent dbo:location dbr:Rif_Region ;
                 dbo:participant ?person .
    ?person dbo:occupation dbr:Military_person ;
            rdfs:label ?commanderRifWar .
    FILTER(LANG(?commanderRifWar) = ""en"")
  }
}
```",3,3,4,2,2,3,3,71,0,0,4,0,0.0,0
459,4,train,"Who is the administration, that is a politician, of Brad Henry?",SELECT ?result WHERE { ?result <http://dbpedia.org/property/governor> <http://dbpedia.org/resource/Brad_Henry> . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?party WHERE {
  ?person dbo:officeHolderOf dbr:Governor_of_Oklahoma.
  ?person foaf:name ""Brad Henry""@en.
  OPTIONAL { ?person dbo:politicalParty ?party. }
}
```",1,2,2,1,1,2,3,28,0,0,30,0,0.0,0
582,17,train,"Give me the nickname of the team, that is an organisation, of Hajime Moriyasu.",SELECT ?result WHERE { ?v1 <http://dbpedia.org/property/nickname> ?result . ?v1 <http://dbpedia.org/ontology/coach> <http://dbpedia.org/resource/Hajime_Moriyasu> . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. },"```sparql
SELECT ?team ?nickname WHERE {
  ?person dbo:manager ?team .
  ?team rdfs:label ?teamLabel .
  ?team foaf:nick ?nickname .
  FILTER (CONTAINS(LCASE(?teamLabel), ""hajime moriyasu"") && LANG(?teamLabel) = ""en"")
}
```",2,3,3,2,1,3,3,71,0,0,1,0,0.0,0
456,25,train,"Give me the band of the band, that is a musical artist, of Dean Brody and professional in .","SELECT ?result WHERE { ?result <http://dbpedia.org/property/occupation> """"@en . ?v1 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. <http://dbpedia.org/resource/Dean_Brody> <http://dbpedia.org/ontology/associatedMusicalArtist> ?v1 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?band WHERE {
  ?person a dbo:MusicalArtist ;
          foaf:name ""Dean Brody""@en .
  
  ?person dbo:member ?band .
  
  ?band a dbo:Band ;
        dbo:genre ?genre .
}
```",3,4,4,2,2,3,3,71,0,0,1,0,0.0,0
281,10,train,"Give me the awardee of the award, that is a military conflict, of Lawrence Moore Cosgrave.",SELECT ?result WHERE { ?result <http://dbpedia.org/property/awards> ?v1 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. <http://dbpedia.org/resource/Lawrence_Moore_Cosgrave> <http://dbpedia.org/property/awards> ?v1 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?conflict WHERE {
  ?award dbo:recipient dbr:Lawrence_Moore_Cosgrave .
  ?award dbo:conflict ?conflict .
}
```",2,3,3,2,1,2,3,28,0,0,656,0,0.0,0
874,13,train,"Give me the band of the writer, that is an artist and a musical artist, of the work, that is a work, of Horace Andy.",SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. ?v0 <http://dbpedia.org/property/writer> <http://dbpedia.org/resource/Horace_Andy> . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?result <http://dbpedia.org/ontology/bandMember> ?v1 . ?v0 <http://dbpedia.org/property/writer> ?v1 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. },"```sparql
SELECT ?work ?collaborator ?band WHERE {
  ?work dbo:composer dbr:Horace_Andy .
  ?work dbo:lyricist ?collaborator .
  ?collaborator rdf:type dbo:MusicalArtist .
  ?collaborator dbo:bandMember ?band .
}
```",3,6,4,3,1,3,2,20,0,0,6,0,0.0,0
41,16,train,"Give me the party of the work, that is an office holder, of yes and party of Mark Durkan.","SELECT ?result WHERE { ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v0 <http://dbpedia.org/property/author> ""yes""@en . ?v0 <http://dbpedia.org/ontology/party> ?result . <http://dbpedia.org/resource/Mark_Durkan> <http://dbpedia.org/ontology/party> ?result . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?person ?partyLabel WHERE {
  VALUES ?person { 
    dbr:Jeremy_Corbyn 
    dbr:Mark_Durkan 
  }
  
  OPTIONAL {
    ?person dbo:politicalParty ?party .
    SERVICE wikibase:label { bd:serviceParam wikibase:language ""[AUTO_LANGUAGE],en"". }
  }

  FILTER(?party != """")
}
```",3,4,4,2,2,2,3,28,0,0,1,0,0.0,0
508,14,train,"Give me the birthplace of the commander, that is Saudi, in the war, that is a military conflict and a societal event, of Hu Yukun.",SELECT ?result WHERE { ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v2 <http://dbpedia.org/ontology/commander> ?v0 . ?v0 <http://dbpedia.org/ontology/birthPlace> ?result . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?v0 <http://dbpedia.org/ontology/nationality> <http://dbpedia.org/resource/Saudi_Arabia>. <http://dbpedia.org/resource/Hu_Yukun> <http://dbpedia.org/ontology/battle> ?v2 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?birthPlace WHERE {
  ?person dbo:nationality dbr:Saudi_Arabia .
  ?person dbo:occupation dbr:Military_officer .
  ?person dbo:almaMater ?university .
  ?person dbo:spouse ?spouse .
  ?person dbo:children ?child .
  ?person dbo:birthPlace ?birthPlace .

  FILTER EXISTS {
    ?conflict dbo:participant ?person .
    ?conflict rdfs:label ""Yemeni Civil War""@en .
  }
}
```",3,6,4,3,1,3,2,20,0,0,3,0,0.0,0
47,10,train,Give me the office of Suvendu Adhikari and office of Ajoy Mukherjee.,SELECT ?result WHERE { <http://dbpedia.org/resource/Suvendu_Adhikari> <http://dbpedia.org/property/office> ?result . <http://dbpedia.org/resource/Ajoy_Mukherjee> <http://dbpedia.org/property/office> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?person ?officeName WHERE {
  VALUES ?person { 
    dbr:Suvendu_Adhikari 
    dbr:Ajoy_Mukherjee 
  }
  
  ?person dbo:office ?office .
  ?office rdfs:label ?officeName .
  FILTER (lang(?officeName) = 'en')
}
ORDER BY ?person
```",2,2,3,1,2,3,3,71,0,0,1,0,0.0,0
93,12,train,Give me the death place of the governor of Bob Bartlett and capital of Alaska.,SELECT ?result WHERE { ?v0 <http://dbpedia.org/ontology/deathPlace> ?result . <http://dbpedia.org/resource/Bob_Bartlett> <http://dbpedia.org/property/governor> ?v0 . <http://dbpedia.org/resource/Alaska> <http://dbpedia.org/ontology/capital> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?deathPlace ?capitalCity
WHERE {
  # Find the death place of Bob Bartlett
  OPTIONAL { 
    dbr:Bob_Bartlett dbo:placeOfBirth ?birthPlace .
    dbr:Bob_Bartlett dbo:deathPlace ?deathPlace .
  }
  
  # Find the capital city of Alaska
  dbr:Alaska dbo:capital ?capitalCity .
}
```",3,3,4,2,2,3,2,20,1,1,0,0.5,1.0,0.6666666666666666
955,10,train,"Who is the band member, that is a musical artist and an artist, of the reference, that is a band and a group and an organisation, to Street Dogs?","SELECT ?result WHERE { ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?v0 <http://xmlns.com/foaf/0.1/name> ""Street Dogs""@en . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Group>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Band>. ?result <http://dbpedia.org/ontology/associatedMusicalArtist> ?v0 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?member WHERE {
  # Identify Street Dogs as a band, group, or organization
  dbr:Street_Dogs a ?type1 .
  
  FILTER(?type1 IN (dbo:Band, dbo:MusicalGroup, dbo:Organization))

  # Find members of the band
  ?bandMember dbo:member ?streetDogs .
  ?bandMember a ?type2 .

  FILTER(?type2 IN (dbo:Person, dbo:Artist))
  
  # Ensure they are musical artists and artists
  ?bandMember dbo:musicalArtist dbr:Street_Dogs .
  ?bandMember dbo:artist dbr:Street_Dogs .

  BIND(?bandMember AS ?member)
}
```",2,7,3,2,1,3,2,20,0,0,2,0,0.0,0
465,5,train,Give me the parent of Elizabeth of Austria (1526–1545).,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Elizabeth_of_Austria_(1526–1545)> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?parent WHERE {
  VALUES ?elizabeth { dbr:Elizabeth_of_Austria_(1526–1545) }
  ?elizabeth dbo:parent ?parent .
}
```",1,1,2,1,1,3,3,71,0,0,2,0,0.0,0
329,2,train,Give me the entity in Northern Ireland.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Northern_Ireland> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?entity WHERE {
  ?entity dbo:country dbr:Northern_Ireland .
}
LIMIT 10
```",1,1,2,1,1,2,3,28,10,0,836,1.0,0.01182033096926714,0.023364485981308414
933,9,train,Give me the band of Mike Elliott (saxophonist) and reference to Alan Warner.,"SELECT ?result WHERE { ?result <http://xmlns.com/foaf/0.1/name> ""Alan Warner""@en . <http://dbpedia.org/resource/Mike_Elliott_(saxophonist)> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?band ?description WHERE {
  # Find the band associated with Mike Elliott (saxophonist)
  ?person a dbo:Saxophonist ;
          foaf:name ""Mike Elliott"" .
  
  OPTIONAL { 
    ?person dbo:memberOfBand ?band .
    
    # Check if Alan Warner is mentioned in the description of the band
    ?band dbo:description ?description .
    FILTER(CONTAINS(LCASE(?description), LCASE(""alan warner"")))
  }
}
```",2,2,3,1,2,3,3,71,0,0,1,0,0.0,0
917,4,train,"Who is the child, that is a royalty, of Kamehameha IV?",SELECT ?result WHERE { ?result <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Kamehameha_IV> . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. },"```sparql
SELECT ?child ?title WHERE {
  dbpedia:Kamehameha_IV dbo:child ?child .
  OPTIONAL { ?child dbo:royaltyTitle ?title . }
  FILTER EXISTS { ?child dbo:royaltyTitle ?title }
}
```",1,2,2,1,1,3,3,71,0,0,1,0,0.0,0
933,36,train,"Give me the band of the band, that is a group and a band and an organisation, of the person born, that is a musical artist, on 1947-04-21 and band of Mike Elliott (saxophonist).","SELECT ?result WHERE { ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Band>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. <http://dbpedia.org/resource/Mike_Elliott_(saxophonist)> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v3 <http://dbpedia.org/ontology/associatedMusicalArtist> ?v0 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Group>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?v3 <http://dbpedia.org/ontology/birthDate> ""1947-04-21""^^<http://www.w3.org/2001/XMLSchema#date> . ?v0 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . }","```sparql
SELECT DISTINCT ?band WHERE {
  # Step 1: Find the person born on 1947-04-21 who is a musical artist
  ?person dbo:birthday ""1947-04-21""^^xsd:date ;
          rdf:type dbo:MusicalArtist .
  
  # Step 2: Find bands associated with Mike Elliott (saxophonist)
  ?mikeElliott dbo:memberOf ?band ;
               rdfs:label ""Mike Elliott (saxophonist)""@en .

  # Step 3: Check if the person from step 1 is also a member of any band that Mike Elliott is in
  ?person dbo:memberOf ?commonBand .
  
  FILTER (?band = ?commonBand)
}
```",4,8,5,3,2,3,3,71,0,0,3,0,0.0,0
715,36,train,"Give me the commander in Rif War and leader of the office, that is a government agency and an organisation, of the reference to Carlos Franco Iribarnegaray.","SELECT ?result WHERE { ?v0 <http://xmlns.com/foaf/0.1/name> ""Carlos Franco Iribarnegaray""@en . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?v0 <http://dbpedia.org/property/office> ?v1 . <http://dbpedia.org/resource/Rif_War> <http://dbpedia.org/ontology/commander> ?result . ?v1 <http://dbpedia.org/ontology/leader> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/GovernmentAgency>. }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?commanderRole ?agencyLeader WHERE {
  # Identify Carlos Franco Iribarnegaray
  VALUES ?person { dbr:Claudio_Franco_Iribarnegaray }

  # Check if he was a commander in the Rif War
  OPTIONAL {
    ?person dbo:role ?commanderRole .
    FILTER(CONTAINS(LCASE(STR(?commanderRole)), ""rif war"") && CONTAINS(LCASE(STR(?commanderRole)), ""commander""))
  }
  
  # Find leadership role in a government agency or organization
  OPTIONAL {
    ?person dbo:positionHeld ?agencyLeader .
    FILTER(CONTAINS(LCASE(STR(?agencyLeader)), ""government"") || CONTAINS(LCASE(STR(?agencyLeader)), ""organization""))
  }
}
```",4,6,5,3,2,3,3,71,0,0,1,0,0.0,0
865,20,train,"Give me the father of the child, that is a politician, of Abu Ahmad Abdul Hafiz and native of British Raj.",SELECT ?result WHERE { ?v2 <http://dbpedia.org/property/father> ?result . ?v2 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Abu_Ahmad_Abdul_Hafiz> . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?result <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/British_Raj> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?child ?father WHERE {
  # Find Abu Ahmad Abdul Hafiz
  ?abuHafiz a dbo:Person ;
            foaf:name ""Abu Ahmad Abdul Hafiz""@en .

  # Find children of Abu Ahmad Abdul Hafiz who are politicians and natives of British Raj
  ?abuHafiz dbo:child ?child .
  ?child dbo:nationality dbr:British_Raj ;
         a dbo:Politician .

  # Get the father of that child
  ?child dbo:father ?father .
}
```",3,4,4,2,2,3,3,71,0,0,1,0,0.0,0
459,7,train,Give me the person born as John Kevin Stitt and governor of Oklahoma.,"SELECT ?result WHERE { <http://dbpedia.org/resource/Oklahoma> <http://dbpedia.org/property/governor> ?result . ?result <http://dbpedia.org/property/birthName> ""John Kevin Stitt""@en . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?person WHERE {
  ?person dbo:birthName ""John Kevin Stitt""@en .
  ?person dbo:officeHolder [
    a dbo:Office ;
    dbo:title ""Governor of Oklahoma""@en ;
    dbo:holder dbr:Kevin_Stitt
  ] .
}
```",2,2,3,1,2,2,3,28,0,0,1,0,0.0,0
281,18,train,Give me the awardee of the award of Alfred Warden and awardee of Medal bar.,SELECT ?result WHERE { ?result <http://dbpedia.org/property/awards> ?v2 . <http://dbpedia.org/resource/Alfred_Warden> <http://dbpedia.org/property/awards> ?v2 . ?result <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/Medal_bar> . },"```sparql
# Query for Alfred Warden Award awardee
SELECT ?awardee WHERE {
  ?award dbo:wikiPageRedirects db:Q1234567 ; # Replace Q1234567 with the actual DBpedia resource ID for Alfred Warden Award
         dbo:recipient ?person .
  ?person rdfs:label ?awardee .
  FILTER (lang(?awardee) = ""en"")
}

UNION

# Query for Medal Bar awardee
SELECT ?awardee WHERE {
  ?award dbo:wikiPageRedirects db:Q2345678 ; # Replace Q2345678 with the actual DBpedia resource ID for Medal Bar
         dbo:recipient ?person .
  ?person rdfs:label ?awardee .
  FILTER (lang(?awardee) = ""en"")
}
```

Note: The placeholders `db:Q1234567` and `db:Q2345678` should be replaced with the actual DBpedia resource identifiers for the Alfred Warden Award and Medal Bar, respectively. These can be found by searching DBpedia or related resources.",3,3,4,2,2,2,3,28,0,0,1,0,0.0,0
917,13,train,Give me the child of the father of Keʻelikōlani.,SELECT ?result WHERE { <http://dbpedia.org/resource/Keʻelikōlani> <http://dbpedia.org/property/father> ?v1 . ?result <http://dbpedia.org/ontology/parent> ?v1 . },"```sparql
SELECT ?child WHERE {
  ?keelikolani dbo:wikiPageRedirects db:Keʻelikōlani .
  ?keelikolani dbo:father ?father .
  ?father dbo:child ?child .
}
```",2,2,3,2,1,3,3,71,0,0,6,0,0.0,0
579,9,train,"Give me the residence, that is English and a settlement, of the resident of Scotland.",SELECT ?result WHERE { ?v0 <http://dbpedia.org/property/residence> ?result . ?result <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/United_Kingdom>. ?v0 <http://dbpedia.org/ontology/residence> <http://dbpedia.org/resource/Scotland> . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?person ?settlement WHERE {
  ?person dbo:birthPlace dbr:Scotland .
  ?person dbo:residence ?settlement .
  ?settlement a dbo:Settlement ;
              dbo:country dbr:United_Kingdom ;
              dbo:isPartOf dbr:England .
}
```",2,4,3,2,1,3,2,20,0,0,8,0,0.0,0
865,31,train,"Give me the native of the residence, that is a country, of the person decedent at Patna and father of AK Abdul Momen.",SELECT ?result WHERE { ?v1 <http://dbpedia.org/property/residence> ?v0 . ?v1 <http://dbpedia.org/ontology/deathPlace> <http://dbpedia.org/resource/Patna> . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. ?result <http://dbpedia.org/ontology/birthPlace> ?v0 . <http://dbpedia.org/resource/AK_Abdul_Momen> <http://dbpedia.org/property/father> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?native WHERE {
  # Find AK Abdul Momen and his father
  ?momen a dbo:Person ;
         foaf:name ""AK Abdul Momen""@en .
  ?father dbo:child ?momen ;
          foaf:name ?fatherName .

  # Check if the father resided in Patna
  ?residence dbo:resident ?father ;
             dbo:location dbr:Patna .

  # Ensure the residence is a country
  ?residence a dbo:Country .

  # Get the native place of the country
  ?residence dbo:nativePlace ?native .
}
```",4,5,5,3,2,3,3,71,0,0,1,0,0.0,0
456,12,train,Give me the band of Alan Doyle and professional in .,"SELECT ?result WHERE { ?result <http://dbpedia.org/property/occupation> """"@en . <http://dbpedia.org/resource/Alan_Doyle> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?band ?profession 
WHERE {
  VALUES ?alanDoyle { dbr:Alan_Doyle }
  
  ?alanDoyle dbo:bandMember ?band .
  ?alanDoyle dbo:occupation ?profession .
}
```",2,2,3,1,2,3,3,71,0,0,1,0,0.0,0
926,1,train,Give me the successor of Mustafa III.,SELECT ?result WHERE { <http://dbpedia.org/resource/Mustafa_III> <http://dbpedia.org/ontology/successor> ?result . },"```sparql
SELECT ?successor WHERE {
  dbpedia:Mustafa_III dbo:successor ?successor .
}
```",1,1,2,1,1,3,3,71,0,0,1,0,0.0,0
124,27,train,"Give me the military force of the force, that is a societal event and a military conflict, of the person born on 1850-06-24.","SELECT ?result WHERE { ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?result <http://dbpedia.org/ontology/battle> ?v2 . ?v1 <http://dbpedia.org/ontology/birthDate> ""1850-06-24""^^<http://www.w3.org/2001/XMLSchema#date> . ?v2 <http://dbpedia.org/ontology/commander> ?v1 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?person ?event ?militaryForce WHERE {
  ?person dbo:birthday ""1850-06-24""^^xsd:date .
  ?person dbo:wikiPageDisambiguates ?disambiguation .
  OPTIONAL { ?disambiguation dbp:category ?category . FILTER regex(?category, ""Military conflict"") }
  OPTIONAL { ?disambiguation dbp:category ?societalCategory . FILTER regex(?societalCategory, ""Societal event"") }
  
  ?event dbo:wikiPageDisambiguates ?person .
  ?event dbo:participatedIn ?militaryForce .
  
  FILTER EXISTS {
    ?disambiguation dbp:category ?conflictCategory .
    FILTER regex(?conflictCategory, ""Military conflict"")
  }
  FILTER EXISTS {
    ?societalCategory dbp:category ?eventCategory .
    FILTER regex(?eventCategory, ""Societal event"")
  }
}
```",3,5,4,3,1,3,3,71,0,0,1190,0,0.0,0
47,20,train,Give me the office of the awardee of Banga Bhushan and office of Suvendu Adhikari.,SELECT ?result WHERE { ?v2 <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/Banga_Bhushan> . <http://dbpedia.org/resource/Suvendu_Adhikari> <http://dbpedia.org/property/office> ?result . ?v2 <http://dbpedia.org/property/office> ?result . },"```sparql
# Query for the office of the awardee(s) of Banga Bibhushan
SELECT DISTINCT ?person ?office WHERE {
  ?award dcterms:isPartOf <http://dbpedia.org/resource/Category:Banga_Bibhushan_awards> .
  ?award dbo:recipient ?person .
  OPTIONAL { ?person dbo:office ?office . }
}

# Query for the office of Suvendu Adhikari
SELECT DISTINCT ?office WHERE {
  ?suvendu dcterms:title ""Suvendu Adhikari""@en ;
           dbo:office ?office .
}
```",3,3,4,2,2,3,3,71,0,0,1,0,0.0,0
130,12,train,"Give me the entity in the administration, that is American, of  and figure known as Vanderbilt Commodores.","SELECT ?result WHERE { ?v0 <http://dbpedia.org/property/governor> """"@en . ?v0 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/United_States>. ?result <http://dbpedia.org/ontology/state> ?v0 . ?result <http://dbpedia.org/property/nickname> <http://dbpedia.org/resource/Vanderbilt_Commodores> . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?person ?name WHERE {
  ?person dbo:nationality dbr:United_States .
  ?person dbo:position ?position .
  FILTER(CONTAINS(LCASE(?position), ""athletic director"") || CONTAINS(LCASE(?position), ""head coach""))
  OPTIONAL { ?person rdfs:label ?name . FILTER (LANG(?name) = 'en') }
  ?team dbo:member ?person .
  ?team rdfs:label ?teamLabel .
  FILTER(CONTAINS(LCASE(?teamLabel), ""vanderbilt commodores"") || CONTAINS(LCASE(?teamLabel), ""vanderbilt""))
}
ORDER BY ?name
```",3,4,4,2,2,3,2,20,0,0,1,0,0.0,0
926,30,train,"Give me the child of the father, that is a royalty, of Mustafa III and successor of Mustafa III and father of Mahmud II.",SELECT ?result WHERE { ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v0 <http://dbpedia.org/ontology/child> ?result . <http://dbpedia.org/resource/Mustafa_III> <http://dbpedia.org/property/father> ?v0 . <http://dbpedia.org/resource/Mahmud_II> <http://dbpedia.org/property/father> ?result . <http://dbpedia.org/resource/Mustafa_III> <http://dbpedia.org/ontology/successor> ?result . },"```sparql
SELECT ?successor WHERE {
  wd:Q123456 wdt:P22 wd:Q789012; # Mustafa III (P22: child)
  wdt:P35 wd:Q345678;           # Mustafa III (P35: position held, Sultan of the Ottoman Empire)
  wdt:P136 wd:Q987654;          # Mustafa III (P136: royalty)
  
  ?successor wdt:P57 wd:Q789012; # Successor of Mustafa III
  ?successor wdt:P22 wd:Q123456; # Child of Mustafa III
  ?successor wdt:P35 wd:Q345678; # Position held, Sultan of the Ottoman Empire
  ?successor wdt:P136 wd:Q987654;# Royalty
  
  ?successor wdt:P25 wd:Q567890. # Father of Mahmud II (P25: parent)
}
```

Note: The placeholders `wd:Q123456`, `wd:Q789012`, `wd:Q345678`, `wd:Q987654`, and `wd:Q567890` should be replaced with the actual DBpedia identifiers for Mustafa III, Abdul Hamid I, Sultan of the Ottoman Empire, royalty, and Mahmud II respectively.",4,5,5,2,3,3,3,71,0,0,1,0,0.0,0
124,25,train,"Give me the military force of Battle of Tamai and military force of the force, that is a societal event and a military conflict, of Herbert Kitchener, 1st Earl Kitchener.","SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?v1 <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Herbert_Kitchener,_1st_Earl_Kitchener> . ?result <http://dbpedia.org/ontology/battle> <http://dbpedia.org/resource/Battle_of_Tamai> . ?result <http://dbpedia.org/ontology/battle> ?v1 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. }","```sparql
SELECT ?battle ?force1 ?force2 WHERE {
  ?battle dbo:wikiPageRedirects db:Battle_of_Tamai .
  ?battle dbo:militaryConflicts ?conflict .
  ?conflict dbo:participatingMilitaryUnit ?unit1 .
  ?conflict dbo:participatingMilitaryUnit ?unit2 .
  BIND(?unit1 AS ?force1)
  BIND(?unit2 AS ?force2)
}

UNION

SELECT ?event ?force WHERE {
  ?person foaf:name ""Herbert Kitchener, 1st Earl Kitchener""@en .
  ?person dbo:associatedWith ?event .
  FILTER(CONTAINS(LCASE(STR(?event)), ""sudan campaign"") || CONTAINS(LCASE(STR(?event)), ""battle of omdurman""))
  ?event dbo:militaryConflicts ?conflict .
  ?conflict dbo:participatingMilitaryUnit ?force
}
```",3,5,4,2,2,3,3,71,0,0,4,0,0.0,0
326,3,train,"Give me the birthplace, that is a state and British, of David Jessel.",SELECT ?result WHERE { <http://dbpedia.org/resource/David_Jessel> <http://dbpedia.org/ontology/birthPlace> ?result . ?result <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/United_Kingdom>. ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/AdministrativeRegion>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?birthPlace WHERE {
  ?person dbo:birthName ""David Jessel"" .
  ?person dbo:birthPlace ?birthPlace .
  FILTER EXISTS { ?birthPlace a dbr:StateOrRegion . }
  FILTER EXISTS { ?birthPlace dbo:country dbr:United_Kingdom . }
}
```",1,3,2,1,1,3,2,20,0,0,1,0,0.0,0
645,38,train,"Give me the leader of the office, that is a government agency and an organisation, of Camilo Menéndez Tolosa and military force of the force, that is an event and a military conflict and a societal event, of Francisco Largo Caballero.",SELECT ?result WHERE { ?v3 <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Francisco_Largo_Caballero> . <http://dbpedia.org/resource/Camilo_Menéndez_Tolosa> <http://dbpedia.org/property/office> ?v2 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/GovernmentAgency>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?v2 <http://dbpedia.org/ontology/leader> ?result . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?result <http://dbpedia.org/ontology/battle> ?v3 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?officeLeader ?militaryForce WHERE {
  # Find the government office led by Camilo Menéndez Tolosa
  ?office a dbo:GovernmentAgency ;
         dbo:leader dbr:Camilo_Menéndez_Tolosa .

  # Get the leader of that office
  ?officeLeader dbo:leaderOf ?office .

  # Find the military force associated with Francisco Largo Caballero
  ?militaryForce a dbo:MilitaryConflict, dbo:SocietalEvent ;
                 dbo:participant dbr:Franco_Largo_Caballero .
}
```",4,9,5,2,2,3,3,71,0,0,1,0,0.0,0
47,14,train,Give me the office of the awardee of Padma Vibhushan.,SELECT ?result WHERE { ?v1 <http://dbpedia.org/property/office> ?result . ?v1 <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/Padma_Vibhushan> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?person ?office WHERE {
  ?person dbo:award dbr:Padma_Vibhushan .
  OPTIONAL { ?person dbo:position ?office . }
}
```",2,2,3,2,1,3,3,71,0,135,77,0.0,0.0,0
445,26,train,Give me the death place of the awardee of the establishment of 1820-03-10.,"SELECT ?result WHERE { ?v2 <http://dbpedia.org/property/awards> ?v1 . ?v1 <http://dbpedia.org/ontology/foundingDate> ""1820-03-10""^^<http://www.w3.org/2001/XMLSchema#date> . ?v2 <http://dbpedia.org/ontology/deathPlace> ?result . }","```sparql
SELECT ?awardee ?deathPlace WHERE {
  ?award dbo:dateEstablished ""1820-03-10""^^xsd:date .
  ?award dbo:recipient ?awardee .
  OPTIONAL { ?awardee dbp:deathPlace ?deathPlace . }
}
```",3,3,4,3,1,3,3,71,0,0,2,0,0.0,0
216,7,train,Give me the administration of  and office of Tim Nicholls.,"SELECT ?result WHERE { ?result <http://dbpedia.org/property/leader> """"@en . <http://dbpedia.org/resource/Tim_Nicholls> <http://dbpedia.org/property/office> ?result . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?position ?office WHERE {
  ?person foaf:name ""Tim Nicholls""@en .
  OPTIONAL { ?person dbo:position ?position . }
  OPTIONAL { ?person dbp:office ?office . }
}
```",2,2,3,1,2,2,3,28,0,0,1,0,0.0,0
192,11,train,"Give me the child of Mary of Hungary, Queen of Naples and spouse of the spouse, that is a royalty, of Charles Martel of Anjou.","SELECT ?result WHERE { ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v2 <http://dbpedia.org/ontology/spouse> ?result . ?v2 <http://dbpedia.org/ontology/spouse> <http://dbpedia.org/resource/Charles_Martel_of_Anjou> . ?result <http://dbpedia.org/ontology/parent> <http://dbpedia.org/resource/Mary_of_Hungary,_Queen_of_Naples> . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?child WHERE {
  # Find children of Mary of Hungary, Queen of Naples
  ?mary a dbo:Queen ;
        foaf:name ""Mary of Hungary"" .
  
  ?child dbo:parent ?mary .

  # Find spouse of Charles Martel of Anjou
  ?charles a dbo:Person ;
           foaf:name ""Charles Martel of Anjou"" .
  
  ?spouse dbo:spouse ?charles .

  # Check if the child is also related to the spouse as specified
  OPTIONAL {
    ?child dbo:parent ?spouse .
  }

  FILTER EXISTS { ?child dbo:parent ?mary }
  FILTER EXISTS { ?child dbo:parent ?spouse }
}
```",3,4,4,2,2,3,2,20,0,0,1,0,0.0,0
874,2,train,"Give me the work, that is a work, of Horace Andy.",SELECT ?result WHERE { ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?result <http://dbpedia.org/property/writer> <http://dbpedia.org/resource/Horace_Andy> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT ?work WHERE {
  ?artist foaf:name ""Horace Andy""@en .
  ?artist a dbo:MusicArtist .
  ?artist dbo:album ?work .
}
```",1,2,2,1,1,3,2,20,0,0,4,0,0.0,0
773,36,train,"Give me the parent of the child, that is a royalty, of the father, that is an office holder and a royalty, of Carloman of Bavaria and spouse of Louis the German.",SELECT ?result WHERE { <http://dbpedia.org/resource/Carloman_of_Bavaria> <http://dbpedia.org/property/father> ?v0 . ?v1 <http://dbpedia.org/ontology/parent> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v1 <http://dbpedia.org/property/father> ?v0 . <http://dbpedia.org/resource/Louis_the_German> <http://dbpedia.org/ontology/spouse> ?result . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. },"```sparql
SELECT ?parent WHERE {
  wd:Q1116 wdt:P22 ?father . # Carloman of Bavaria's father (Louis the Pious)
  ?father wdt:P39 wd:Q11696 ; # Louis the Pious is an office holder (Emperor)
          wdt:P31 wd:Q5 .     # Louis the Pious is a royalty
  ?father wdt:P26 ?spouse .  # Spouse of Louis the Pious
  ?spouse wdt:P21 wd:Q6581097 ; # Ermengarde of Hesbaye is female
          wdt:P25 ?child .    # Children of Ermengarde
  ?child wdt:P31 wd:Q5 .     # Child is a royalty
  ?child wdt:P22|wdt:P25 ?parent . # Parent of the child (either father or mother)
}
```",4,7,5,3,2,3,3,71,0,0,1,0,0.0,0
433,23,train,"Give me the associated musical artist of the person born, that is a musical artist and an artist, as the persona of Paul Chambers.",SELECT ?result WHERE { ?v0 <http://dbpedia.org/property/birthName> ?v2 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. <http://dbpedia.org/resource/Paul_Chambers> <http://xmlns.com/foaf/0.1/givenName> ?v2 . ?v0 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?associatedArtist WHERE {
  # Identify Paul Chambers' birthdate and birthplace
  VALUES (?birthdate ?birthPlace) {
    { dbr:Paul_Chambers dbo:birthday ?birthdate . 
      dbr:Paul_Chambers dbo:birthPlaceValue ?birthPlace }
  }

  # Find another individual with the same birth details who is a musical artist and an artist
  ?associatedArtist dbo:birthday ?birthdate ;
                   dbo:birthPlaceValue ?birthPlace ;
                   rdf:type dbo:MusicalArtist, dbo:Artist .
  
  FILTER(?associatedArtist != dbr:Paul_Chambers)
}
```",3,5,4,3,1,3,3,71,0,0,31,0,0.0,0
41,13,train,"Give me the party of Declan Costello and party of the leader, that is a politician and an office holder, of 2005 Castlereagh Borough Council election.",SELECT ?result WHERE { ?v0 <http://dbpedia.org/ontology/party> ?result . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. <http://dbpedia.org/resource/Declan_Costello> <http://dbpedia.org/ontology/party> ?result . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. <http://dbpedia.org/resource/2005_Castlereagh_Borough_Council_election> <http://dbpedia.org/property/leader> ?v0 . },"```sparql
# Query to find the political party of Declan Costello
SELECT ?party WHERE {
  ?costello dbo:birthName ""Declan Costello"" .
  ?costello dbo:politicalParty ?party .
}

UNION

# Query to find the leader of the 2005 Castlereagh Borough Council election and their political party
SELECT ?leaderParty WHERE {
  ?election dbo:electionDate ?date .
  FILTER (YEAR(?date) = 2005 && STRSTARTS(STR(?election), ""Castlereagh Borough Council""))
  
  ?result dbo:winner ?party .
  ?party dbo:member ?leader .
  ?leader dbo:politicalParty ?leaderParty .
}
```",3,5,4,2,2,2,3,28,0,0,1,0,0.0,0
281,1,train,Give me the awardee of Medal bar.,SELECT ?result WHERE { ?result <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/Medal_bar> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?winner ?year WHERE {
  ?award dbo:recipient ?winner .
  ?award a dbo:NobelPrizeAward .
  OPTIONAL { ?award dbo:year ?year . }
  FILTER EXISTS { ?winner dbo:wikiPageRedirects dbr:Medal_Bar } 
}
ORDER BY DESC(?year)
LIMIT 10
```",1,1,2,1,1,2,3,28,0,0,656,0,0.0,0
465,11,train,Give me the successor of the child of Alfonso I d'Este.,SELECT ?result WHERE { ?v0 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Alfonso_I_d'Este> . ?v0 <http://dbpedia.org/ontology/successor> ?result . },"```sparql
SELECT ?successor WHERE {
  wd:Q1234567 wdt:P31 wd:Q5;       # Alfonso I d'Este, instance of human
         wdt:P22 ?child.           # has child

  ?child wdt:P39 wd:Q1234568;      # Ercole II d'Este, Duke of Ferrara
         wdt:P57 ?successor.       # successor (heir) is Alfonso II d'Este
}
```

Note: In the above SPARQL query:
- `wd:Q1234567` should be replaced with the actual DBpedia resource ID for Alfonso I d'Este.
- `wd:Q1234568` should be replaced with the actual DBpedia resource ID for Ercole II d'Este.",2,2,3,2,1,3,3,71,0,0,1,0,0.0,0
124,29,train,"Give me the commander in Mahdist War and military force of Battle of Atbara and military force of the war, that is an event and a military conflict and a societal event, of Frank Rhodes (British Army officer).",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/battle> <http://dbpedia.org/resource/Battle_of_Atbara> . <http://dbpedia.org/resource/Frank_Rhodes_(British_Army_officer)> <http://dbpedia.org/ontology/battle> ?v3 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. <http://dbpedia.org/resource/Mahdist_War> <http://dbpedia.org/ontology/commander> ?result . ?result <http://dbpedia.org/ontology/battle> ?v3 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?commander ?battleForce ?warForce WHERE {
  # Find the commander of the Mahdist War
  ?event a dbo:MilitaryConflict ;
         rdfs:label ""Mahdist War""@en .
  
  OPTIONAL { 
    ?event dbo:commander ?commander . 
    ?commander rdfs:label ?commanderLabel .
  }
  
  # Find military force involved in the Battle of Atbara
  ?battle a dbo:MilitaryEngagement ;
          rdfs:label ""Battle of Atbara""@en ;
          dbo:militaryForce ?battleForce .
  
  # Find military forces involved in the Mahdist War
  ?warEvent a dbo:MilitaryConflict ;
            rdfs:label ""Mahdist War""@en ;
            dbo:militaryForce ?warForce .

  # Link Frank Rhodes to these events
  ?officer dbr:Frank_Rhodes_(British_Army_officer) .
  
  OPTIONAL {
    ?event dbo:commander ?officer .
  }
}
```",4,7,5,2,3,3,3,71,0,0,1,0,0.0,0
130,10,train,"Give me the administration, that is American, of the award of Živko Ključe.",SELECT ?result WHERE { ?result <http://dbpedia.org/property/governor> ?v0 . ?result <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/United_States>. <http://dbpedia.org/resource/Živko_Ključe> <http://dbpedia.org/property/awards> ?v0 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?administration WHERE {
  ?award dbo:recipient dbr:Živko_Ključe .
  ?award dbo:administrator ?administration .
  FILTER (CONTAINS(LCASE(?administration), ""american""))
}
```",2,3,3,2,1,3,2,20,0,0,43,0,0.0,0
443,3,train,Give me the award of William Shepherd.,SELECT ?result WHERE { <http://dbpedia.org/resource/William_Shepherd> <http://dbpedia.org/property/awards> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>

SELECT ?award WHERE {
  ?person a dbo:Person ;
          foaf:name ""William Shepherd""@en .
  ?person dbo:award ?award .
}
```",1,1,2,1,1,2,3,28,0,1,1,0.0,0.0,0
124,30,train,"Give me the military force of Battle of Tamai and commander in Mahdist War and military force of the force, that is a societal event and a military conflict, of Herbert Kitchener, 1st Earl Kitchener.","SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Herbert_Kitchener,_1st_Earl_Kitchener> . ?result <http://dbpedia.org/ontology/battle> <http://dbpedia.org/resource/Battle_of_Tamai> . ?result <http://dbpedia.org/ontology/battle> ?v1 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. <http://dbpedia.org/resource/Mahdist_War> <http://dbpedia.org/ontology/commander> ?result . }","```sparql
# Query for the Battle of Tamai
SELECT ?force ?commander WHERE {
  ?battle dbpedia-owl:wikiPageRedirects dbp:Battle_of_Tamai .
  ?battle dbo:militaryConflicts ?conflict .
  ?conflict dbo:participatingMilitaryUnit ?unit .
  ?unit rdfs:label ?force .
  FILTER (lang(?force) = 'en') .

  OPTIONAL {
    ?unit dbo:commander ?person .
    ?person rdfs:label ?commander .
    FILTER (lang(?commander) = 'en')
  }
}
```

```sparql
# Query for Herbert Kitchener's military force in a notable conflict
SELECT ?conflict ?force WHERE {
  dbp:Herbert_Kitchener_1st_Earl_Kitchener dbo:militaryConflicts ?conflict .
  ?conflict dbo:participatingMilitaryUnit ?unit .
  ?unit rdfs:label ?force .
  FILTER (lang(?force) = 'en') .

  OPTIONAL {
    ?conflict rdfs:label ?conflictLabel .
    FILTER (CONTAINS(LCASE(?conflictLabel), ""sudan"") || CONTAINS(LCASE(?conflictLabel), ""mahdist""))
  }
}
```",4,6,5,2,3,3,3,71,0,0,1,0,0.0,0
216,0,train,Give me the office of Tim Nicholls.,SELECT ?result WHERE { <http://dbpedia.org/resource/Tim_Nicholls> <http://dbpedia.org/property/office> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?office WHERE {
  ?person foaf:name ""Tim Nicholls""@en .
  ?person dbo:office ?office .
}
```",1,1,2,1,1,2,3,28,0,0,15,0,0.0,0
892,12,train,Give me the entity in Province of Reggio Emilia and landmark at elevation of 58.,"SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/elevation> ""58""^^<http://www.w3.org/2001/XMLSchema#integer> . ?result <http://dbpedia.org/ontology/province> <http://dbpedia.org/resource/Province_of_Reggio_Emilia> . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?landmark WHERE {
    ?landmark dbo:location dbr:Province_of_Reggio_Emilia .
    ?landmark dbo:elevation ""58""^^xsd:float .
}
```",2,2,3,1,2,3,3,71,0,0,1,0,0.0,0
102,7,train,Give me the manager of the player in Ellie Roebuck.,SELECT ?result WHERE { <http://dbpedia.org/resource/Ellie_Roebuck> <http://dbpedia.org/ontology/team> ?v1 . ?v1 <http://dbpedia.org/ontology/manager> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?manager WHERE {
  ?player foaf:name ""Ellie Roebuck""@en .
  ?player dbo:playsFor ?team .
  ?team dbo:managedBy ?manager .
}
```",2,2,3,2,1,3,2,20,0,0,2,0,0.0,0
582,12,train,Give me the player in Kazuaki Nagasawa and figure known as --10-19.,"SELECT ?result WHERE { ?result <http://dbpedia.org/property/nickname> ""--10-19""^^<http://www.w3.org/2001/XMLSchema#gMonthDay> . <http://dbpedia.org/resource/Kazuaki_Nagasawa> <http://dbpedia.org/ontology/team> ?result . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?player ?alias 
WHERE {
  ?player a dbo:FootballPlayer ;
          rdfs:label ""Kazuaki Nagasawa""@en .
  OPTIONAL { ?player dbo:nickname ?alias . }
  FILTER (CONTAINS(LCASE(?alias), ""10-19""))
}
```",2,2,3,1,2,3,3,71,0,0,1,0,0.0,0
216,25,train,"Give me the team of the person born, that is a sports manager and a soccer manager and a soccer player, on 1983-12-20 and player in Mario Ivanković.","SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/birthDate> ""1983-12-20""^^<http://www.w3.org/2001/XMLSchema#date> . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsManager>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerManager>. <http://dbpedia.org/resource/Mario_Ivanković> <http://dbpedia.org/ontology/team> ?result . ?result <http://dbpedia.org/ontology/coach> ?v1 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerPlayer>. }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?person ?team WHERE {
  ?person a dbo:SoccerPlayer ;
          dbo:birthDate ?date ;
          dbo:occupation ?occupation .
  
  FILTER (?date = ""1983-12-20""^^xsd:date)
  
  VALUES ?occupation { 
    dbr:Sports_manager
    dbr:Soccer_manager
    dbr:Soccer_player
  }
  
  ?person dbo:team ?team .
  
  ?teamMember a dbo:SoccerPlayer ;
              dbo:memberOfTeam ?team ;
              rdfs:label ""Mario Ivanković""@en .
}
```",3,6,4,2,2,3,3,71,0,0,1,0,0.0,0
917,37,train,"Give me the child of the father of the spouse, that is a royalty, of Leleiohoku I and child of Kekūanāoʻa.","SELECT ?result WHERE { ?v1 <http://dbpedia.org/property/father> ?v2 . ?result <http://dbpedia.org/ontology/parent> ?v2 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?result <http://dbpedia.org/property/father> ""Kekūanāoʻa""@en . ?v1 <http://dbpedia.org/ontology/spouse> <http://dbpedia.org/resource/Leleiohoku_I> . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT DISTINCT ?person WHERE {
  # Step 1: Identify Leleiohoku I
  ?leleiohokuI rdfs:label ""Leleiohoku I""@en .
  
  # Step 2: Find the spouse of Leleiohoku I
  ?leleiohokuI dbo:spouse ?spouse .

  # Step 3: Identify the father of this spouse
  ?spouse dbo:father ?fatherOfSpouse .

  # Step 4: Find children of this father who are royalty
  ?childOfFather dbo:parent ?fatherOfSpouse .
  ?childOfFather rdfs:label ?childLabel .
  FILTER(CONTAINS(LCASE(?childLabel), ""king"") || CONTAINS(LCASE(?childLabel), ""queen"") || CONTAINS(LCASE(?childLabel), ""prince"") || CONTAINS(LCASE(?childLabel), ""princess""))

  # Step 5: Identify Kekūanāoʻa and their child
  ?kekuanaoa rdfs:label ""Kekūanāoʻa""@en .
  ?kekuanaoa dbo:child ?childOfKeKuaNaoa .

  # Final step: Match the person who satisfies both conditions
  FILTER(?person = ?childOfFather && ?person = ?childOfKeKuaNaoa)
}
```",4,5,5,3,2,3,3,71,0,0,3,0,0.0,0
459,0,train,Give me the governor of Oklahoma.,SELECT ?result WHERE { <http://dbpedia.org/resource/Oklahoma> <http://dbpedia.org/property/governor> ?result . },"```sparql
SELECT ?governor WHERE {
  dbpedia:Oklahoma dbo:stateGovernor ?governor .
}
```",1,1,2,1,1,2,3,28,0,0,2,0,0.0,0
417,11,train,"Give me the spouse of the parent, that is a royalty, of Count Ingolf of Rosenborg.",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/spouse> ?v0 . ?v0 <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Count_Ingolf_of_Rosenborg> . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?spouse WHERE {
  # Step 1: Identify Count Ingolf of Rosenborg
  ?countIngolf a dbo:Person ;
               rdfs:label ""Count Ingolf of Rosenborg""@en .

  # Step 2: Find the parents of Count Ingolf
  ?parent dbo:child ?countIngolf .

  # Step 3: Determine if a parent is royalty
  OPTIONAL { ?parent dbp:title ?title . FILTER(CONTAINS(LCASE(?title), ""royalty"")) }

  # Ensure we have at least one royal title
  VALUES ?parent {
    ?parent
  }
  
  # Step 4: Identify the spouse of the royal parent
  ?spouse dbo:spouse ?parent .
}
```",2,3,3,2,1,3,3,71,0,0,2,0,0.0,0
236,13,train,"Give me the party member of the administration, that is an organisation, of the person decedent, that is a politician and an office holder, at Quincy, Massachusetts.","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/party> ?v1 . ?v1 <http://dbpedia.org/property/leader> ?v0 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?v0 <http://dbpedia.org/ontology/deathPlace> <http://dbpedia.org/resource/Quincy,_Massachusetts> . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT DISTINCT ?politician ?party WHERE {
  ?politician a dbo:Politician ;
             dbo:officeHolderOf dbr:Quincy,_Massachusetts ;
             dbo:politicalParty ?party .
}
```",3,6,4,3,1,3,2,20,0,0,269,0,0.0,0
573,6,train,"Give me the residence, that is a settlement, of William J. Phelan.",SELECT ?result WHERE { ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. <http://dbpedia.org/resource/William_J._Phelan> <http://dbpedia.org/property/residence> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?residence WHERE {
  ?person foaf:name ""William J. Phelan""@en .
  ?person dbo:residence ?residence .
  ?residence a dbo:Settlement .
}
```",1,2,2,1,1,3,3,71,1,0,0,1.0,1.0,1.0
926,15,train,Give me the father of the spouse of Neşerek Kadın.,SELECT ?result WHERE { <http://dbpedia.org/resource/Neşerek_Kadın> <http://dbpedia.org/ontology/spouse> ?v1 . ?v1 <http://dbpedia.org/property/father> ?result . },"```sparql
SELECT ?father WHERE {
  ?neşerekKadın foaf:name ""Neşerek Kadın""@en .
  ?neşerekKadın dbo:spouse ?spouse .
  ?spouse dbo:father ?father .
}
```",2,2,3,2,1,3,3,71,0,0,1,0,0.0,0
606,8,train,Give me the birthplace of the alumnus of University of Pennsylvania.,SELECT ?result WHERE { ?v0 <http://dbpedia.org/ontology/almaMater> <http://dbpedia.org/resource/University_of_Pennsylvania> . ?v0 <http://dbpedia.org/ontology/birthPlace> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?alumnus ?birthPlace WHERE {
  ?alumnus dbo:almaMater dbr:University_of_Pennsylvania .
  OPTIONAL { ?alumnus dbo:birthPlace ?birthPlace . }
}
```",2,2,3,2,1,3,2,20,598,1114,0,0.3492990654205608,1.0,0.5177489177489177
216,37,train,"Give me the player in the coach, that is a soccer player and a sports manager and a soccer manager, of the player, that is an organisation and a sports club and a soccer club, in Džemal Berberović and team of Ognjen Vukojević.",SELECT ?result WHERE { <http://dbpedia.org/resource/Džemal_Berberović> <http://dbpedia.org/ontology/team> ?v0 . ?result <http://dbpedia.org/ontology/coach> <http://dbpedia.org/resource/Ognjen_Vukojević> . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsManager>. ?v0 <http://dbpedia.org/ontology/coach> ?v3 . ?v3 <http://dbpedia.org/ontology/team> ?result . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerManager>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerPlayer>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsClub>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerClub>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?coach WHERE {
  # Džemal Berberović's coach who is also a sports manager and soccer manager
  ?player dbr:Džemal_Berberović ;
          dbo:coach ?coach .
  
  ?coach a dbo:SoccerPlayer ;
         dbo:sportsManager true ;
         dbo:soccerManager true .

  # The club associated with the coach must be both a sports club and a soccer club
  ?club dbo:manager ?coach ;
        a dbo:SportsClub, dbo:SoccerClub .

  # Ognjen Vukojević's team connection to the same club
  ?team dbr:Ognjen_Vukojević ;
        dbo:member ?player .
  
  ?team dbo:club ?club .
}
```",4,10,5,3,2,3,3,71,0,0,1,0,0.0,0
443,8,train,Give me the landmark at elevation of the award of William Shepherd.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/elevation> ?v1 . <http://dbpedia.org/resource/William_Shepherd> <http://dbpedia.org/property/awards> ?v1 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?landmark ?elevation WHERE {
  # Assuming there's a connection between William Shepherd and the Congressional Space Medal of Honor
  ?award dbo:recipient dbr:William_Shepherd .
  ?award rdfs:label ""Congressional Space Medal of Honor""@en .

  # Find landmarks associated with space exploration or NASA
  ?landmark dbo:elevation ?elevation .
  ?landmark dbo:associatedWith dbr:NASA .

  FILTER (lang(?award) = 'en')
}
```",2,2,3,2,1,2,3,28,0,0,349,0,0.0,0
573,28,train,"Give me the parent of John Quincy Adams and person decedent at Quincy, Massachusetts and person decedent at the administration, that is a region, of Charlie Baker.","SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Region>. ?v1 <http://dbpedia.org/property/governor> ""Charlie Baker""@en . <http://dbpedia.org/resource/John_Quincy_Adams> <http://dbpedia.org/ontology/parent> ?result . ?result <http://dbpedia.org/ontology/deathPlace> ?v1 . ?result <http://dbpedia.org/ontology/deathPlace> <http://dbpedia.org/resource/Quincy,_Massachusetts> . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?parent ?decedent WHERE {
  # Parent of John Quincy Adams
  dbr:John_Quincy_Adams dbo:parent ?parent .

  # Person decedent at Quincy, Massachusetts
  ?decedent dbo:deathPlace dbr:Quincy,_Massachusetts .
  
  # Person decedent during Charlie Baker's administration (2015 onwards)
  ?decedent dbo:deathDate ?date .
  FILTER (?date >= ""2015-01-01""^^xsd:date) .

  # Ensure the person is associated with Massachusetts
  ?decedent dbo:residence dbr:Massachusetts .
}
```",4,5,5,2,3,3,3,71,0,0,2,0,0.0,0
465,8,train,"Give me the child, that is a royalty, of Anne of Brittany.",SELECT ?result WHERE { ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. <http://dbpedia.org/resource/Anne_of_Brittany> <http://dbpedia.org/ontology/child> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?child ?title WHERE {
  ?anne dbo:child ?child .
  FILTER(STRSTARTS(STR(?anne), ""http://dbpedia.org/resource/Anne_of_Brittany""))
  
  OPTIONAL { ?child dbo:royalTitle ?title . }
  OPTIONAL { ?child dbo:positionHeld ?title . }

  FILTER EXISTS {
    ?child dbo:royalTitle ?title .
  } 
  UNION
  FILTER EXISTS {
    ?child dbo:positionHeld ?title .
  }
}
```",1,2,2,1,1,3,3,71,0,0,2,0,0.0,0
456,36,train,"Give me the band of the band, that is a musical artist, of the band of Alan Doyle and spouse of Danielle Spencer (Australian actress).",SELECT ?result WHERE { <http://dbpedia.org/resource/Alan_Doyle> <http://dbpedia.org/ontology/associatedMusicalArtist> ?v0 . ?v0 <http://dbpedia.org/ontology/associatedMusicalArtist> ?v1 . ?v1 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. <http://dbpedia.org/resource/Danielle_Spencer_(Australian_actress)> <http://dbpedia.org/ontology/spouse> ?result . },"```sparql
# Step 1: Find Alan Doyle's band
SELECT ?band WHERE {
  wd:Q123456 wdt:P106 wd:Q33999; # Alan Doyle is a member of this band
  wdt:P175 ?band.               # The band he belongs to
}

# Step 2: Find Danielle Spencer's spouse
SELECT ?spouse WHERE {
  wd:Q654321 wdt:P26 ?spouse.   # Danielle Spencer's spouse
}

# Step 3: Identify the band of Ryan MacDonald (Danielle Spencer's spouse)
SELECT ?band WHERE {
  ?spouse wdt:P106 wd:Q33999;   # The spouse is a musician
  wdt:P175 ?band.               # The band they belong to
}
```

Note: Replace `wd:Q123456` with the actual DBpedia identifier for Alan Doyle and `wd:Q654321` with the identifier for Danielle Spencer.",4,5,5,3,2,3,3,71,0,0,1,0,0.0,0
926,19,train,Give me the successor of Mustafa III and father of the father of Abdulaziz.,SELECT ?result WHERE { ?v2 <http://dbpedia.org/property/father> ?result . <http://dbpedia.org/resource/Mustafa_III> <http://dbpedia.org/ontology/successor> ?result . <http://dbpedia.org/resource/Abdulaziz> <http://dbpedia.org/property/father> ?v2 . },"```sparql
SELECT ?successor ?fatherOfFather WHERE {
  # Find the successor of Mustafa III
  wd:Q123456 rdfs:label ""Mustafa III""@en .
  ?mustafa3Successor wdt:P35 wd:Q123456 ;
                     wdt:P1368 ?successor .

  # Find Abdulaziz's father and his father
  wd:Q789012 rdfs:label ""Abdulaziz""@en .
  ?abdulazizFather wdt:P22 wd:Q789012 .
  ?abdulazizGrandfather wdt:P22 ?abdulazizFather .

  # Check if the successor of Mustafa III is the same as Abdulaziz's grandfather
  FILTER (?successor = ?abdulazizGrandfather)
}
```

Note: Replace `wd:Q123456` with the actual DBpedia resource ID for Mustafa III and `wd:Q789012` with the resource ID for Abdulaziz. The property `P1368` is used to denote a successor in some contexts, but you may need to adjust based on available properties in DBpedia.",3,3,4,2,2,3,3,71,0,0,1,0,0.0,0
83,5,train,Who is the governor of Dilma Rousseff?,SELECT ?result WHERE { <http://dbpedia.org/resource/Dilma_Rousseff> <http://dbpedia.org/property/governor> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?state WHERE {
  dbr:Dilma_Rousseff dbo:positionHeld ?role .
  ?role dbo:office ?office .
  ?office rdfs:label ""Governor""@en .
  ?role dbo:place ?state .
}
```",1,1,2,1,1,3,2,20,0,0,2,0,0.0,0
507,12,train,"Give me the director of Entertaining Mr Sloane (film) and professional in Film director, television director.","SELECT ?result WHERE { <http://dbpedia.org/resource/Entertaining_Mr_Sloane_(film)> <http://dbpedia.org/ontology/director> ?result . ?result <http://dbpedia.org/property/occupation> ""Film director, television director""@en . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?director ?filmDirector ?tvDirector WHERE {
  # Find the film entity
  dbr:Entertaining_Mr_Sloane_(1969_film) dbo:director ?director .
  
  # Check if the director has a profession as a Film Director or Television Director
  OPTIONAL { ?director dbo:occupation ?filmDirector . FILTER (strstarts(str(?filmDirector), ""Film director"")) }
  OPTIONAL { ?director dbo:occupation ?tvDirector . FILTER (strstarts(str(?tvDirector), ""Television director"")) }

  # Ensure at least one of the professions matches
  FILTER (?filmDirector != """" || ?tvDirector != """")
}
```",2,2,3,1,2,3,3,71,0,0,1,0,0.0,0
892,38,train,"Give me the entity in the administration, that is Italian and a region and a settlement and an administrative region, of Democratic Party (Italy) and landmark at elevation of the award of Anna Ishii.",SELECT ?result WHERE { ?v0 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Italy>. <http://dbpedia.org/resource/Anna_Ishii> <http://dbpedia.org/property/awards> ?v3 . ?result <http://dbpedia.org/ontology/elevation> ?v3 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/AdministrativeRegion>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. ?v0 <http://dbpedia.org/property/leaderParty> <http://dbpedia.org/resource/Democratic_Party_(Italy)> . ?result <http://dbpedia.org/ontology/province> ?v0 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Region>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT DISTINCT ?region ?landmark ?elevation WHERE {
  ?region a dbo:Region ;
          dbo:country dbr:Italy ;
          dbo:settlement true ;
          dbo:administrativeRegion true .
  
  OPTIONAL { ?region dbo:party dbr:Democratic_Party_(Italy) . }
  
  ?landmark dbo:elevation ?elevation ;
            dbo:location ?region .

  FILTER (?elevation > 0) # Assuming elevation is a positive number

  OPTIONAL {
    ?landmark dbo:award dbr:Anna_Ishii_Award .
  }

  FILTER EXISTS { ?region dbo:party dbr:Democratic_Party_(Italy) }
}
ORDER BY ?region
```",4,8,5,2,2,3,3,71,0,0,2,0,0.0,0
18,8,train,Give me the professional in the award of Ana María Sánchez de Ríos.,SELECT ?result WHERE { <http://dbpedia.org/resource/Ana_María_Sánchez_de_Ríos> <http://dbpedia.org/property/awards> ?v0 . ?result <http://dbpedia.org/property/occupation> ?v0 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?recipient WHERE {
  ?award dbo:givenBy dbr:Ana_María_Sánchez_de_Ríos .
  ?award dbo:recipient ?recipient .
}
```",2,2,3,2,1,2,3,28,0,0,39640,0,0.0,0
47,39,train,"Give me the office of the awardee of the entity, that is an award, in India and office of Bidesh Ranjan Bose.",SELECT ?result WHERE { ?v0 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/India> . ?v1 <http://dbpedia.org/property/awards> ?v0 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Award>. ?v1 <http://dbpedia.org/property/office> ?result . <http://dbpedia.org/resource/Bidesh_Ranjan_Bose> <http://dbpedia.org/property/office> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?awardeeOffice ?boseOffice WHERE {
  # Find an awardee of the Padma Shri award in India and their office
  ?awardAwardedTo dbo:recipient dbr:Padma_Shri_award_recipients.
  ?awardAwardedTo dbo:country dbr:India.
  ?awardAwardedTo dbo:office ?awardeeOffice.

  # Find the office of Bidesh Ranjan Bose
  OPTIONAL {
    dbr:Bidesh_Ranjan_Bose dbo:office ?boseOffice.
  }
}
```",4,5,5,3,2,3,3,71,0,0,1,0,0.0,0
267,10,train,Give me the birth date of the reference to Dan Cathy.,"SELECT ?result WHERE { ?v0 <http://xmlns.com/foaf/0.1/name> ""Dan Cathy""@en . ?v0 <http://dbpedia.org/ontology/birthDate> ?result . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?birthDate WHERE {
  ?person a dbo:Person ;
          foaf:name ""Dan Cathy""@en .
  ?person dbo:birthDate ?birthDate .
}
```",2,2,3,2,1,3,2,20,1,0,0,1.0,1.0,1.0
874,1,train,Give me the band of Robert Hart (musician).,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/bandMember> <http://dbpedia.org/resource/Robert_Hart_(musician)> . },"```sparql
PREFIX dbpedia-owl: <http://dbpedia.org/ontology/>
PREFIX dbo: <http://dbpedia.org/ontology/>

SELECT ?band WHERE {
  ?person rdfs:label ""Robert Hart""@en .
  ?person a dbpedia-owl:Musician .
  OPTIONAL { ?person dbo:memberOfBand ?band . }
  FILTER (lang(?person) = 'en')
}
```",1,1,2,1,1,3,2,20,0,0,2,0,0.0,0
456,38,train,"Give me the band of the band, that is a musical artist, of Dean Brody and professional in the alter ego of The Shadow.",SELECT ?result WHERE { <http://dbpedia.org/resource/The_Shadow> <http://dbpedia.org/property/alterEgo> ?v3 . ?v2 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?result <http://dbpedia.org/property/occupation> ?v3 . <http://dbpedia.org/resource/Dean_Brody> <http://dbpedia.org/ontology/associatedMusicalArtist> ?v2 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. },"```sparql
# Query for Dean Brody's primary association in music
SELECT ?label WHERE {
  ?entity rdfs:label ""Dean Brody""@en.
  ?entity dbo:genre ?musicGenre.
  ?musicGenre rdfs:label ?label.
} UNION

# Query for any entity associated with the alter ego ""The Shadow""
SELECT ?shadowLabel WHERE {
  ?entity rdfs:label ""The Shadow""@en.
  ?entity dbo:profession ?profession.
  ?profession rdfs:label ?shadowLabel.
}
```",4,5,5,2,2,3,3,71,0,0,1,0,0.0,0
281,2,train,Give me the awardee of Volunteer Decoration.,SELECT ?result WHERE { ?result <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/Volunteer_Decoration> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?awardee WHERE {
  ?award a dbo:Award .
  ?award rdfs:label ""Volunteer Decoration""@ru .
  ?award dbo:recipient ?awardee .
}
```",1,1,2,1,1,2,3,28,0,0,12,0,0.0,0
976,0,train,Give me the office of Mustafa Şentop.,SELECT ?result WHERE { <http://dbpedia.org/resource/Mustafa_Şentop> <http://dbpedia.org/property/office> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?office WHERE {
  ?person foaf:name ""Mustafa Şentop""@en .
  ?person dbo:office ?office .
}
```",1,1,2,1,1,3,3,71,0,0,4,0,0.0,0
865,12,train,Give me the father of Shahla Khatun and father of AK Abdul Momen.,SELECT ?result WHERE { <http://dbpedia.org/resource/Shahla_Khatun> <http://dbpedia.org/property/father> ?result . <http://dbpedia.org/resource/AK_Abdul_Momen> <http://dbpedia.org/property/father> ?result . },"```sparql
SELECT ?person1 ?father1 ?person2 ?father2 WHERE {
  ?person1 dbo:name ""Shahla Khatun""@en .
  ?person1 dbo:father ?father1 .

  ?person2 dbo:name ""AK Abdul Momen""@en .
  ?person2 dbo:father ?father2 .
}
```",2,2,3,1,2,3,3,71,0,0,1,0,0.0,0
955,7,train,Give me the band of the writer of Don't Forget Your Roots (album).,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/bandMember> ?v1 . <http://dbpedia.org/resource/Don't_Forget_Your_Roots_(album)> <http://dbpedia.org/property/writer> ?v1 . },"```sparql
SELECT ?band WHERE {
  ?album dcterms:title ""Don't Forget Your Roots""@en .
  ?album dbo:artist <http://dbpedia.org/resource/Jimmy_Cliff> .
  ?band dbo:member <http://dbpedia.org/resource/Jimmy_Cliff> .
}
```",2,2,3,2,1,3,2,20,0,0,18,0,0.0,0
456,19,train,Give me the professional in  and spouse of the actor of Pacific Drive.,"SELECT ?result WHERE { ?result <http://dbpedia.org/property/occupation> """"@en . <http://dbpedia.org/resource/Pacific_Drive> <http://dbpedia.org/property/starring> ?v0 . ?v0 <http://dbpedia.org/ontology/spouse> ?result . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?actor ?profession ?spouse WHERE {
  # Find the movie ""Pacific Drive""
  ?movie dbo:title ""Pacific Drive""@en .
  
  # Find an actor associated with this movie
  ?movie dbo:starring ?actor .

  # Get the profession of the actor (likely Actor)
  ?actor a dbo:Actor .

  # Retrieve the spouse of the actor
  OPTIONAL { ?actor dbo:spouse ?spouse . }
}
```",3,3,4,2,2,3,3,71,0,0,2,0,0.0,0
926,0,train,Give me the father of Mahmud II.,SELECT ?result WHERE { <http://dbpedia.org/resource/Mahmud_II> <http://dbpedia.org/property/father> ?result . },"```sparql
SELECT ?father WHERE {
  ?mahmud2 dbo:father ?father .
  ?mahmud2 rdfs:label ""Mahmud II""@en .
}
```",1,1,2,1,1,3,3,71,0,0,1,0,0.0,0
456,37,train,"Give me the professional in the alter ego of the reference, that is a fictional character, to Lamont Cranston (radio, film and television) and band of Alan Doyle.","SELECT ?result WHERE { ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/FictionalCharacter>. <http://dbpedia.org/resource/Alan_Doyle> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v0 <http://xmlns.com/foaf/0.1/name> ""Lamont Cranston (radio, film and television)""@en . ?result <http://dbpedia.org/property/occupation> ?v3 . ?v0 <http://dbpedia.org/property/alterEgo> ?v3 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?alterEgoLabel ?bandMemberLabel WHERE {
  # Find Lamont Cranston's alter ego
  OPTIONAL {
    dbr:Lamont_Cranston dbo:alias dbr:The_Shadow .
    SERVICE wikibase:label { bd:serviceParam wikibase:language ""[AUTO_LANGUAGE],en"". }
  }

  # Find Alan Doyle's role in the band Great Big Sea
  OPTIONAL {
    dbr:Alan_Doyle dbo:memberOfBand dbr:Great_Big_Sea ;
                   rdfs:label ?bandMemberLabel .
    SERVICE wikibase:label { bd:serviceParam wikibase:language ""[AUTO_LANGUAGE],en"". }
  }

  BIND(IF(BOUND(?alterEgo), STR(?alterEgoLabel), ""N/A"") AS ?alterEgo)
  BIND(IF(BOUND(?bandMemberLabel), STR(?bandMemberLabel), ""N/A"") AS ?bandMember)
}
```",4,5,5,3,2,3,3,71,0,0,1,0,0.0,0
433,20,train,"Give me the associated musical artist of the associated musical artist, that is an artist and a musical artist, of Scott LaFaro and associated musical artist of Paul Chambers.",SELECT ?result WHERE { ?v2 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. <http://dbpedia.org/resource/Paul_Chambers> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . <http://dbpedia.org/resource/Scott_LaFaro> <http://dbpedia.org/ontology/associatedMusicalArtist> ?v2 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. },"```sparql
SELECT DISTINCT ?finalArtist1 ?finalArtist2 WHERE {
  # Step 1: Find Scott LaFaro's associated musical artist
  ?scottLaFaro dbo:birthName ""Scott LaFaro""@en .
  ?scottLaFaro dbo:associatedBand ?artist1 .

  # Step 2: Find the associated musical artist of that artist
  ?artist1 dbo:associatedBand ?finalArtist1 .

  # Step 3: Find Paul Chambers' associated musical artist
  ?paulChambers dbo:birthName ""Paul Chambers""@en .
  ?paulChambers dbo:associatedBand ?artist2 .

  # Step 4: Find the associated musical artist of that artist
  ?artist2 dbo:associatedBand ?finalArtist2 .

  # Ensure both final artists are musicians
  ?finalArtist1 a dbo:MusicalArtist .
  ?finalArtist2 a dbo:MusicalArtist .
}
```",3,5,4,2,2,3,3,71,0,0,2,0,0.0,0
791,23,train,"Give me the spouse of the spouse, that is a royalty, of the reference to Emperor Takakura.","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/spouse> ?v0 . ?v2 <http://xmlns.com/foaf/0.1/name> ""Emperor Takakura""@en . ?v0 <http://dbpedia.org/ontology/spouse> ?v2 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. }","```sparql
# Step 1: Find Emperor Takakura's spouse
SELECT ?spouse WHERE {
    wd:Q123456 wdt:P26 ?spouse .
}

# Step 2: Find the spouse of Emperor Takakura's spouse
SELECT ?grandSpouse WHERE {
    ?spouse wdt:P26 ?grandSpouse .
    FILTER EXISTS { wd:Q123456 wdt:P26 ?spouse }
}

# Step 3: Ensure the grandSpouse is royalty
SELECT ?royalGrandSpouse WHERE {
    ?grandSpouse wdt:P31/wdt:P279* wd:Q5 . # Q5 is ""human"", we look for subclasses of human that are royalty
    FILTER EXISTS { 
        ?spouse wdt:P26 ?grandSpouse .
        wd:Q123456 wdt:P26 ?spouse 
    }
}
```

Note: Replace `wd:Q123456` with the actual DBpedia identifier for Emperor Takakura.",3,4,4,3,1,3,3,71,0,0,1,0,0.0,0
933,7,train,"Who is the person born, that is a musical artist, on 1947-04-21?","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/birthDate> ""1947-04-21""^^<http://www.w3.org/2001/XMLSchema#date> . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?person WHERE {
  ?person a dbo:MusicalArtist .
  ?person dbo:birthDate ?date .
  FILTER (YEAR(?date) = 1947 && MONTH(?date) = 4 && DAY(?date) = 21)
}
```",1,2,2,1,1,3,3,71,4,0,0,1.0,1.0,1.0
433,11,train,"Give me the associated musical artist of the person born, that is a musical artist and an artist, as Paul Laurence Dunbar Chambers Jr..","SELECT ?result WHERE { ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?v0 <http://dbpedia.org/property/birthName> ""Paul Laurence Dunbar Chambers Jr.""@en . ?v0 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?associatedArtist WHERE {
  ?person a dbo:Musician ;
          foaf:name ""Paul Chambers"" ;
          dbo:birthName ""Paul Laurence Dunbar Chambers Jr."" .
  
  ?person dbo:associatedBand ?band .
  ?band dbo:member ?artist .

  FILTER(?artist != ?person)
  
  BIND(str(?artist) AS ?associatedArtist)
}
```",2,4,3,2,1,3,3,71,0,0,31,0,0.0,0
216,34,train,"Give me the player in the coach of the reference, that is an organisation and a soccer club, to Croatia U21 and team of Ognjen Vukojević.","SELECT ?result WHERE { ?v2 <http://dbpedia.org/ontology/coach> ?v1 . ?v2 <http://xmlns.com/foaf/0.1/name> ""Croatia U21""@en . ?v1 <http://dbpedia.org/ontology/team> ?result . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerClub>. ?result <http://dbpedia.org/ontology/coach> <http://dbpedia.org/resource/Ognjen_Vukojević> . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?club WHERE {
  ?coach foaf:name ""Ognjen Vukojević""@en .
  ?coach dbo:position dbr:Football_manager .
  ?tenure dbo:agent ?coach ;
          dbo:team dbr:Croatia_national_under-21_football_team .
  ?tenure dbo:endTime ?endTime .
  OPTIONAL { ?tenure dbo:startTime ?startTime . }
  
  ?club dbo:manager ?coach ;
        a dbo:Soccer_Club .

  FILTER EXISTS {
    ?tenure dbo:team dbr:Croatia_national_under-21_football_team .
  }

  FILTER NOT EXISTS {
    ?otherTenure dbo:agent ?coach .
    ?otherTenure dbo:endTime ?otherEndTime .
    ?otherTenure dbo:startTime ?otherStartTime .
    FILTER (?otherEndTime > ?endTime || ?otherStartTime < ?startTime)
  }
}
```",4,6,5,3,2,3,3,71,0,0,1,0,0.0,0
124,37,train,"Give me the military force of Battle of Atbara and military force of the war, that is an event and a military conflict and a societal event, of the awardee of British South Africa Company Medal.",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/battle> <http://dbpedia.org/resource/Battle_of_Atbara> . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?v0 <http://dbpedia.org/ontology/battle> ?v3 . ?v0 <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/British_South_Africa_Company_Medal> . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?result <http://dbpedia.org/ontology/battle> ?v3 . },"```sparql
# Query to get military forces involved in the Battle of Atbara
SELECT ?militaryForce WHERE {
  ?battle dbo:wikiPageID ""Battle_of_Atbara"" .
  ?battle dbo:militaryConflicts ?conflict .
  ?conflict dbo:participatingMilitaryUnit ?militaryForce .
}

# Query to get military forces involved in the war associated with the British South Africa Company Medal
SELECT DISTINCT ?war ?militaryForce WHERE {
  ?medal dbo:wikiPageID ""British_South_Africa_Company_Medal"" .
  ?medal dbo:awardedFor ?event .
  ?event rdf:type dbo:MilitaryConflict ;
         dbo:participatingMilitaryUnit ?militaryForce .
  
  # Ensure the event is also a societal event
  ?event rdf:type dbo:SocietalEvent .
}
```",4,7,5,3,2,3,3,71,0,0,7,0,0.0,0
573,34,train,"Give me the parent of John Quincy Adams and person decedent at the administration, that is a region, of the real name of Charlie Baker (Australian footballer).",SELECT ?result WHERE { ?v1 <http://dbpedia.org/property/governor> ?v2 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Region>. ?result <http://dbpedia.org/ontology/deathPlace> ?v1 . <http://dbpedia.org/resource/John_Quincy_Adams> <http://dbpedia.org/ontology/parent> ?result . <http://dbpedia.org/resource/Charlie_Baker_(Australian_footballer)> <http://xmlns.com/foaf/0.1/name> ?v2 . },"```sparql
# Step 1: Get John Quincy Adams' parent (John Adams)
SELECT ?parent WHERE {
    wd:Q11142 wdt:P22 ?parent .
}

# Step 2: Find Charlie Baker's real name
SELECT ?realName WHERE {
    ?charlieBaker foaf:name ""Charlie Baker""@en .
    ?charlieBaker schema:givenName ?firstName ;
                  schema:familyName ?lastName .
    BIND(CONCAT(?firstName, "" "", ?lastName) AS ?realName)
}

# Step 3: Identify the region associated with Charlie Baker's administration
SELECT ?region WHERE {
    ?administration dbo:administrator ?charlieBaker .
    ?administration dbo:country ?region .
}

# Step 4: Find a person decedent at that administration who is a region
SELECT ?descendantRegion WHERE {
    ?admin wdt:P106 wd:Q82955 ; # has occupation of politician
           wdt:P69 ?ancestor .   # child
    ?ancestor wdt:P27 ?region .
    FILTER(?region = ?regionFromStep3)
    ?descendantRegion wdt:P31/wdt:P279* wd:Q6256 . # is a region or subclass of region
}
```",4,5,5,3,2,3,3,71,0,0,2,0,0.0,0
433,9,train,Give me the associated musical artist of Paul Chambers and associated musical artist of Bill Evans.,SELECT ?result WHERE { <http://dbpedia.org/resource/Paul_Chambers> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . <http://dbpedia.org/resource/Bill_Evans> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?musician ?associatedArtist WHERE {
  VALUES (?musician ?label) { 
    (<http://dbpedia.org/resource/Paul_Chambers_(bassist)> ""Paul Chambers"") 
    (<http://dbpedia.org/resource/Bill_Evans_(pianist,_born_1929)> ""Bill Evans"")
  }
  
  ?musician dbo:associatedBand ?band .
  ?band rdfs:label ?associatedArtist .
  FILTER (LANG(?associatedArtist) = 'en')
}
```",2,2,3,1,2,3,3,71,0,0,2,0,0.0,0
935,2,train,"Give me the award, that is an award, of Syed Sohail Hussain Naqvi.",SELECT ?result WHERE { <http://dbpedia.org/resource/Syed_Sohail_Hussain_Naqvi> <http://dbpedia.org/property/awards> ?result . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Award>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?award WHERE {
  ?person a dbo:Person ;
          foaf:name ""Syed Sohail Hussain Naqvi""@en .
  
  OPTIONAL { ?person dbo:award ?award . }
}
```",1,2,2,1,1,3,2,20,1,0,0,1.0,1.0,1.0
888,10,train,Give me the award of the commander in 2022 Ukrainian eastern counteroffensive.,SELECT ?result WHERE { <http://dbpedia.org/resource/2022_Ukrainian_eastern_counteroffensive> <http://dbpedia.org/ontology/commander> ?v0 . ?v0 <http://dbpedia.org/property/awards> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?award ?description WHERE {
  ?award a dbo:Award .
  OPTIONAL { ?award dbo:description ?description . }
  
  # Filter for awards related to the Ukrainian eastern counteroffensive
  ?event dbo:wikiPageRedirects ?redirect .
  FILTER (CONTAINS(LCASE(?redirect), ""2022 ukrainian eastern counteroffensive""))
  
  ?award dbo:awardedFor ?event .
}
```",2,2,3,2,1,3,2,20,0,0,3,0,0.0,0
987,32,train,"Give me the birth place of the actor of All for Free and birth place of the band, that is an artist and a musical artist, of Šako Polumenta.",SELECT ?result WHERE { <http://dbpedia.org/resource/All_for_Free> <http://dbpedia.org/property/starring> ?v3 . ?v3 <http://dbpedia.org/ontology/birthPlace> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. ?v1 <http://dbpedia.org/ontology/birthPlace> ?result . <http://dbpedia.org/resource/Šako_Polumenta> <http://dbpedia.org/ontology/associatedMusicalArtist> ?v1 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. },"```sparql
# Query 1: Birth place of the actor from ""All for Free""
SELECT ?actor ?birthPlace WHERE {
  ?movie dcterms:title ""All for Free""@en .
  ?movie dbo:starring ?actor .
  ?actor dbo:birthPlace ?birthPlace .
}

UNION

# Query 2: Birth place of the band associated with Šako Polumenta
SELECT ?band ?birthPlace WHERE {
  ?person foaf:name ""Šako Polumenta""@sl .
  ?person dbo:member ?band .
  ?band a dbo:Band ;
        dbo:genre ?genre .
  FILTER EXISTS { ?genre rdfs:label ""Musical artist""@en }
  ?band dbo:birthPlace ?birthPlace .
}
```",4,6,5,2,2,3,3,71,0,0,4,0,0.0,0
456,24,train,Give me the band of Alan Doyle and professional in the alter ego of The Shadow.,SELECT ?result WHERE { ?result <http://dbpedia.org/property/occupation> ?v2 . <http://dbpedia.org/resource/The_Shadow> <http://dbpedia.org/property/alterEgo> ?v2 . <http://dbpedia.org/resource/Alan_Doyle> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . },"```sparql
SELECT ?band ?alterEgo WHERE {
  # Find the band associated with Alan Doyle
  ?person rdfs:label ""Alan Doyle""@en .
  ?person dbo:musicGroup ?band .

  # Find the alter ego of The Shadow
  ?character rdfs:label ""The Shadow (pulp magazine character)""@en .
  ?character dbo:alterEgo ?alterEgo .
}
```",3,3,4,2,2,3,3,71,0,0,1,0,0.0,0
965,33,train,"Give me the parent of the child, that is a royalty, of the person born, that is a politician, on 1854-05-24 and spouse of Prince Louis of Battenberg.","SELECT ?result WHERE { ?v0 <http://dbpedia.org/ontology/birthDate> ""1854-05-24""^^<http://www.w3.org/2001/XMLSchema#date> . ?v2 <http://dbpedia.org/property/father> ?v0 . ?result <http://dbpedia.org/ontology/spouse> <http://dbpedia.org/resource/Prince_Louis_of_Battenberg> . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v2 <http://dbpedia.org/ontology/parent> ?result . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. }","```sparql
SELECT ?parent WHERE {
  ?person dbo:birthDate ""1854-05-24""^^xsd:date ;
          dbo:spouse ?spouse .
  FILTER EXISTS { ?spouse foaf:name ""Prince Louis of Battenberg""@en }
  
  ?child dbo:parent ?person, dbo:parent ?spouse .
  FILTER EXISTS { ?child dbo:title ?title . 
                 ?title rdfs:label ?label .
                 FILTER(CONTAINS(LCASE(?label), ""queen"") || CONTAINS(LCASE(?label), ""king"")) }
  
  ?royalChild dbo:parent ?person, dbo:parent ?spouse .
  FILTER EXISTS { ?royalChild foaf:name ""Elizabeth II""@en }
  
  ?parent dbo:child ?royalChild .
  FILTER EXISTS { ?parent dbo:title ?title . 
                 ?title rdfs:label ?label .
                 FILTER(CONTAINS(LCASE(?label), ""king"")) }
}
```",4,6,5,3,2,3,3,71,0,0,1,0,0.0,0
987,28,train,"Give me the birth place of Moamer Kasumović and entity in Montenegro and birth place of the band, that is an artist and a musical artist, of Šako Polumenta.",SELECT ?result WHERE { <http://dbpedia.org/resource/Šako_Polumenta> <http://dbpedia.org/ontology/associatedMusicalArtist> ?v1 . <http://dbpedia.org/resource/Moamer_Kasumović> <http://dbpedia.org/ontology/birthPlace> ?result . ?v1 <http://dbpedia.org/ontology/birthPlace> ?result . ?result <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Montenegro> . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. },"```sparql
# Query for Moamer Kalamović's birthplace and related entity in Montenegro
SELECT ?birthPlace ?entityInMontenegro WHERE {
  wd:Q3046 dbo:birthPlace ?birthPlace .
  OPTIONAL { 
    ?birthPlace wdt:P31/wdt:P279* wd:Q199947 . # Check if the place is an entity in Montenegro
    BIND(?birthPlace AS ?entityInMontenegro)
  }
}

# Query for the band associated with Šako Polumenta and its birthplace
SELECT ?band ?bandBirthPlace WHERE {
  wd:Q1234567 dbo:member ?band . # Replace Q1234567 with the actual DBpedia ID of Šako Polumenta
  ?band wdt:P31 wd:Q215380 . # Ensure it is a musical artist
  ?band dbo:birthPlace ?bandBirthPlace .
}
```",4,6,5,2,3,3,3,71,0,0,1,0,0.0,0
18,7,train,"Give me the alumnus of Marymount College, Tarrytown and professional in .","SELECT ?result WHERE { ?result <http://dbpedia.org/property/occupation> """"@en . ?result <http://dbpedia.org/ontology/almaMater> <http://dbpedia.org/resource/Marymount_College,_Tarrytown> . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?alumnus ?profession WHERE {
  ?alumnus dbo:almaMater dbr:Marymount_College_(Tarrytown) .
  ?alumnus dbo:occupation ?profession .
}
```",2,2,3,1,2,2,3,28,0,0,1,0,0.0,0
417,5,train,"Who is the leader, that is a royalty, of Colony of Greenland?",SELECT ?result WHERE { <http://dbpedia.org/resource/Colony_of_Greenland> <http://dbpedia.org/property/leader> ?result . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. },"```sparql
SELECT ?person WHERE {
  ?person dbo:country dbr:Denmark .
  ?person dbo:royalTitle ?title .
  FILTER(CONTAINS(LCASE(?title), ""king"") || CONTAINS(LCASE(?title), ""queen""))
}
```",1,2,2,1,1,3,3,71,0,0,1,0,0.0,0
124,14,train,"Give me the military force of the force, that is a societal event and a military conflict, of Herbert Kitchener, 1st Earl Kitchener.","SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v1 <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Herbert_Kitchener,_1st_Earl_Kitchener> . ?result <http://dbpedia.org/ontology/battle> ?v1 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?militaryForce WHERE {
  ?kitchener dbo:occupation dbr:Military_officer .
  ?kitchener rdfs:label ""Herbert Kitchener, 1st Earl Kitchener""@en .
  
  OPTIONAL { 
    ?event dbo:participant ?kitchener ;
           rdf:type dbo:MilitaryConflict ;
           rdfs:label ?conflictLabel .
  }
  
  OPTIONAL {
    ?militaryForce dbo:commander ?kitchener ;
                   rdf:type dbo:MilitaryUnit .
  }

  FILTER(CONTAINS(LCASE(?conflictLabel), ""world war i""))
}
```",2,4,3,2,1,3,3,71,0,0,1190,0,0.0,0
465,7,train,"Give me the parent of Charles Orlando, Dauphin of France.","SELECT ?result WHERE { <http://dbpedia.org/resource/Charles_Orlando,_Dauphin_of_France> <http://dbpedia.org/ontology/parent> ?result . }","```sparql
SELECT ?parent WHERE {
  wd:Q123456 dbo:father ?parent .
}
```

Note: Replace `wd:Q123456` with the actual DBpedia resource identifier for Charles Orlando, Dauphin of France. You can find this by searching DBpedia or using a SPARQL endpoint to query for entities related to ""Charles Orlando, Dauphin of France.""",1,1,2,1,1,3,3,71,0,0,2,0,0.0,0
892,36,train,"Give me the entity in Italy and entity in the administration, that is Italian and a region and a settlement and an administrative region, of the party, that is a political party and an organisation, of Andrea Cozzolino.",SELECT ?result WHERE { ?v0 <http://dbpedia.org/property/leaderParty> ?v3 . <http://dbpedia.org/resource/Andrea_Cozzolino> <http://dbpedia.org/ontology/party> ?v3 . ?result <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Italy> . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/AdministrativeRegion>. ?result <http://dbpedia.org/ontology/province> ?v0 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Region>. ?v0 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Italy>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/PoliticalParty>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?region ?settlement WHERE {
  # Step 1: Find Andrea Cozzolino's political party
  ?cozzolino dbo:party dbr:Italian_Democratic_Party ;
            a dbo:Person .

  # Step 2: Identify the region where this party operates
  ?party dbo:country dbr:Italy ;
         dbo:administrativeRegion ?region .
  
  FILTER(?party = dbr:Italian_Democratic_Party)

  # Step 3: Find settlements that are also administrative regions within this region
  ?settlement a dbo:Settlement, dbo:AdministrativeRegion ;
              dbo:country dbr:Italy ;
              dbo:administrativeRegion ?region .
}
```",4,10,5,3,2,3,3,71,0,0,587,0,0.0,0
773,0,train,Give me the spouse of Louis the German.,SELECT ?result WHERE { <http://dbpedia.org/resource/Louis_the_German> <http://dbpedia.org/ontology/spouse> ?result . },"```sparql
SELECT ?spouse WHERE {
  ?person rdfs:label ""Louis the German""@en .
  ?person dbo:spouse ?spouse .
}
```",1,1,2,1,1,3,3,71,1,0,0,1.0,1.0,1.0
839,25,train,"Give me the band of the band, that is a musical artist, of Charlie Huhn and band of Peter Schorowsky.",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/bandMember> <http://dbpedia.org/resource/Peter_Schorowsky> . ?result <http://dbpedia.org/ontology/bandMember> ?v1 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. <http://dbpedia.org/resource/Charlie_Huhn> <http://dbpedia.org/ontology/associatedMusicalArtist> ?v1 . },"```sparql
SELECT ?charlieBand ?peterBand WHERE {
  # Find the band associated with Charlie Huhn
  ?charlieHuhn dbo:birthName ""Charlie Huhn""@en .
  ?charlieHuhn dbo:band ?charlieBand .

  # Find the band associated with Peter Schorowsky
  ?peterSchorowsky dbo:birthName ""Peter Schorowsky""@en .
  ?peterSchorowsky dbo:band ?peterBand .
}
```",3,4,4,2,2,3,3,71,0,0,1,0,0.0,0
933,38,train,"Give me the band of the band, that is a group and a band and an organisation, of Alan Warner (musician) and reference to the birth name of Alan Warner (musician).",SELECT ?result WHERE { ?result <http://xmlns.com/foaf/0.1/name> ?v3 . ?v0 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . <http://dbpedia.org/resource/Alan_Warner_(musician)> <http://dbpedia.org/property/birthName> ?v3 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Band>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Group>. <http://dbpedia.org/resource/Alan_Warner_(musician)> <http://dbpedia.org/ontology/associatedMusicalArtist> ?v0 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?bandName ?birthName WHERE {
  # Find the band associated with Alan Warner
  ?musician a dbo:MusicArtist ;
            foaf:name ""Alan Warner"" ;
            dbo:memberOfBand ?band .
  
  # Check if the band is both a musical group and an organization
  ?band a dbo:MusicalGroup, dbo:Organization .

  # Get the name of the band
  ?band rdfs:label ?bandName .

  # Get Alan Warner's birth name
  ?musician dbp:birthName ?birthName .
  
  FILTER (lang(?bandName) = 'en')
}
```",4,7,5,2,2,3,3,71,0,0,1,0,0.0,0
507,20,train,"Give me the director of the movie, that is a movie and a work, with Beryl Reid and spouse of Anne V. Coates.",SELECT ?result WHERE { ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Film>. ?v2 <http://dbpedia.org/ontology/director> ?result . ?result <http://dbpedia.org/ontology/spouse> <http://dbpedia.org/resource/Anne_V._Coates> . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?v2 <http://dbpedia.org/property/starring> <http://dbpedia.org/resource/Beryl_Reid> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?director WHERE {
  ?movie a dbo:Film ;
         dbo:starring dbr:Beryl_Reid .
  
  ?movie dbo:director ?director .

  ?director dbo:spouse dbr:Anne_V._Coates .
}
```",3,5,4,2,2,3,3,71,1,0,0,1.0,1.0,1.0
839,2,train,Give me the band of Matthias Röhr.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/bandMember> <http://dbpedia.org/resource/Matthias_Röhr> . },"```sparql
PREFIX dbp: <http://dbpedia.org/property/>
PREFIX dbo: <http://dbpedia.org/ontology/>

SELECT ?band WHERE {
  ?person foaf:name ""Matthias Röhr""@en .
  ?person dbp:band ?band .
}
```",1,1,2,1,1,3,3,71,0,0,1,0,0.0,0
773,9,train,Give me the parent of Carloman of Bavaria and spouse of Louis the German.,SELECT ?result WHERE { <http://dbpedia.org/resource/Louis_the_German> <http://dbpedia.org/ontology/spouse> ?result . ?result <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Carloman_of_Bavaria> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?parent ?spouse WHERE {
  # Find the parent of Carloman of Bavaria
  VALUES (?carloman) { dbr:C._of_Bavaria }
  ?carloman dbo:child ?parent .

  # Find the spouse of Louis the German
  VALUES (?louisGerman) { dbr:Louis_the_German }
  ?louisGerman dbo:spouse ?spouse .
}
```",2,2,3,1,2,3,3,71,0,0,1,0,0.0,0
47,32,train,Give me the office of the awardee of Banga Bhushan and office of the administration of Jagdeep Dhankhar.,SELECT ?result WHERE { ?v1 <http://dbpedia.org/property/office> ?result . ?v3 <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/Banga_Bhushan> . ?v1 <http://dbpedia.org/property/governor> <http://dbpedia.org/resource/Jagdeep_Dhankhar> . ?v3 <http://dbpedia.org/property/office> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?officeBhushanAwardee ?officeJagdeepDhankhar WHERE {
  # Find a notable awardee of the Banga Bhushan and their office
  OPTIONAL {
    ?awardee dbo:award dbr:Banga_Bhushan_Award .
    ?awardee dbo:occupation ?officeBhushanAwardee .
  }
  
  # Find Jagdeep Dhankhar's current office
  dbr:Jagdeep_Dhankhar dbo:positionHeld ?officeJagdeepDhankhar .
}
```",4,4,5,2,2,3,3,71,0,0,1,0,0.0,0
373,4,train,"Give me the professional in Singer, songwriter and writer of 2300 Jackson Street (song).","SELECT ?result WHERE { ?result <http://dbpedia.org/property/occupation> ""Singer, songwriter""@en . <http://dbpedia.org/resource/2300_Jackson_Street_(song)> <http://dbpedia.org/property/writer> ?result . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?artist WHERE {
  ?song dbo:title ""2300 Jackson Street"" .
  ?song dbo:artist ?artist .
  FILTER(CONTAINS(LCASE(STR(?artist)), ""stevie wonder""))
}
```",2,2,3,1,2,2,2,9,0,0,1,0,0.0,0
839,7,train,Give me the professional in Musician.,"SELECT ?result WHERE { ?result <http://dbpedia.org/property/occupation> ""Musician""@en . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?musicianLabel WHERE {
  ?musician a dbo:Musician .
  ?musician rdfs:label ?musicianLabel .
  FILTER (lang(?musicianLabel) = 'en')
}
LIMIT 10
```",1,1,2,1,1,3,3,71,0,0,7563,0,0.0,0
773,26,train,"Give me the parent of the successor of the child, that is a royalty, of Louis the Pious.",SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?result <http://dbpedia.org/ontology/child> ?v2 . <http://dbpedia.org/resource/Louis_the_Pious> <http://dbpedia.org/ontology/child> ?v1 . ?v1 <http://dbpedia.org/ontology/successor> ?v2 . },"```sparql
SELECT DISTINCT ?parent WHERE {
  # Step 1: Identify Louis the Pious
  wd:Q1234 dbo:child ?child . 

  # Step 2 & 3: Find children who are royalty
  ?child dbo:title ?title .
  FILTER(CONTAINS(LCASE(?title), ""king"") || CONTAINS(LCASE(?title), ""queen"") || 
         CONTAINS(LCASE(?title), ""emperor"") || CONTAINS(LCASE(?title), ""prince"") ||
         CONTAINS(LCASE(?title), ""duke""))

  # Step 4: Find successor of the child
  ?child dbo:successor ?successor .

  # Step 5: Identify parent of the successor
  ?successor dbo:child ?parent .
}
```",3,4,4,3,1,3,3,71,0,0,4,0,0.0,0
892,10,train,Give me the entity in Italy and entity in Province of Reggio Emilia.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/province> <http://dbpedia.org/resource/Province_of_Reggio_Emilia> . ?result <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Italy> . },"```sparql
SELECT ?italyEntity ?reggioEmiliaEntity WHERE {
  # Entity representing Italy
  VALUES ?italyEntity { dbr:Italy dbr:Rome }
  
  # Entity representing a location in the Province of Reggio Emilia
  VALUES ?reggioEmiliaEntity { dbr:Reggio_Emilia }

  OPTIONAL { ?italyEntity dbo:country dbr:Italy . }
  OPTIONAL { ?reggioEmiliaEntity dbo:administrativeTerritory dbr:Province_of_Reggio_Emilia . }
}
```",2,2,3,1,2,3,3,71,1,2,39,0.3333333333333333,0.025,0.046511627906976744
216,1,train,Give me the player in Mario Ivanković.,SELECT ?result WHERE { <http://dbpedia.org/resource/Mario_Ivanković> <http://dbpedia.org/ontology/team> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT ?player WHERE {
  ?manager foaf:name ""Mario Ivanković""@en .
  ?manager a dbo:FootballManager ;
           dbo:managedTeam ?team .
  ?team dbo:player ?player .
}
```",1,1,2,1,1,3,3,71,0,0,13,0,0.0,0
47,12,train,Give me the office of Ajoy Mukherjee and office of Bidesh Ranjan Bose.,SELECT ?result WHERE { <http://dbpedia.org/resource/Bidesh_Ranjan_Bose> <http://dbpedia.org/property/office> ?result . <http://dbpedia.org/resource/Ajoy_Mukherjee> <http://dbpedia.org/property/office> ?result . },"```sparql
SELECT ?person ?name ?officeLabel WHERE {
  VALUES (?person ?name) { 
    (dbpedia:en:Ajoy_Mukherjee ""Ajoy Mukherjee"")
    (dbpedia:en:Bidesh_Ranjan_Bose ""Bidesh Ranjan Bose"")
  }
  ?person rdfs:label ?name .
  OPTIONAL {
    ?person dbo:office ?office .
    ?office rdfs:label ?officeLabel .
  }
}
ORDER BY ?person
```",2,2,3,1,2,3,3,71,0,0,1,0,0.0,0
645,5,train,"Who is the native, that is a president and a politician, of Restoration (Spain)?",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Restoration_(Spain)> . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/President>. ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?person WHERE {
  ?person dbo:nationality dbr:Spain .
  ?person dbo:occupation dbr:Politician .
  ?person dbo:office dbr:President_of_Spain .
  ?person dbo:birthPlace dbr:Restoration_(Spain) .
}
```",1,3,2,1,1,3,3,71,0,0,1,0,0.0,0
507,33,train,"Give me the director of the movie, that is a movie and a work, with the person born on 1919-06-17 and spouse of Anne V. Coates.","SELECT ?result WHERE { ?v3 <http://dbpedia.org/ontology/director> ?result . ?v0 <http://dbpedia.org/ontology/birthDate> ""1919-06-17""^^<http://www.w3.org/2001/XMLSchema#date> . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Film>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?result <http://dbpedia.org/ontology/spouse> <http://dbpedia.org/resource/Anne_V._Coates> . ?v3 <http://dbpedia.org/property/starring> ?v0 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?director WHERE {
  ?person dbo:birthday ""1919-06-17""^^xsd:date ;
          dbo:spouse dbr:Anne_V._Coates .
  
  ?film dbo:director ?person ;
        a dbo:Film, dbo:Work .

  OPTIONAL { ?film dbo:directedBy ?director . }
  BIND(COALESCE(?director, ?person) AS ?director)
}
```",4,6,5,3,2,3,3,71,0,0,1,0,0.0,0
433,33,train,"Give me the associated musical artist of the associated musical artist, that is an artist and a musical artist, of the associated musical artist, that is a musical artist and an artist, of Ornette Coleman and associated musical artist of Paul Chambers.",SELECT ?result WHERE { ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. <http://dbpedia.org/resource/Paul_Chambers> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v3 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . <http://dbpedia.org/resource/Ornette_Coleman> <http://dbpedia.org/ontology/associatedMusicalArtist> ?v0 . ?v0 <http://dbpedia.org/ontology/associatedMusicalArtist> ?v3 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. },"```sparql
# Step 1: Find Ornette Coleman's associated musical artist
WITH {
    SELECT ?associatedArtist1 WHERE {
        dbpedia:Ornette_Coleman dbo:associatedMusicalArtist ?associatedArtist1 .
    }
}

# Step 2: Find the associated musical artist of that person
UNION {
    SELECT ?artist1 WHERE {
        ?associatedArtist1 dbo:associatedMusicalArtist ?artist1 .
        FILTER EXISTS { ?artist1 a dbo:MusicalArtist . }
        FILTER EXISTS { ?artist1 a dbo:Artist . }
    }
}

# Step 3: Find Paul Chambers' associated musical artist
UNION {
    SELECT ?associatedArtist2 WHERE {
        dbpedia:Paul_Chambers dbo:associatedMusicalArtist ?associatedArtist2 .
    }
}

# Step 4: Find the associated musical artist of that person
UNION {
    SELECT ?artist2 WHERE {
        ?associatedArtist2 dbo:associatedMusicalArtist ?artist2 .
        FILTER EXISTS { ?artist2 a dbo:MusicalArtist . }
        FILTER EXISTS { ?artist2 a dbo:Artist . }
    }
}

# Step 5: Find common artist
UNION {
    SELECT DISTINCT ?commonArtist WHERE {
        VALUES ?artist1 ?artist2 { (?artist1) (?artist2) }
        ?commonArtist owl:sameAs ?artist1 .
        ?commonArtist owl:sameAs ?artist2 .
    }
}
```",4,8,5,3,2,3,3,71,0,0,10,0,0.0,0
98,5,train,Give me the parent of the successor of Emperor Nijō.,SELECT ?result WHERE { ?v0 <http://dbpedia.org/ontology/parent> ?result . <http://dbpedia.org/resource/Emperor_Nijō> <http://dbpedia.org/ontology/successor> ?v0 . },"```sparql
SELECT ?successor ?parent WHERE {
  # Find Emperor Nijō
  ?emperor dbo:name ""Nijō"" .
  ?emperor a dbo:Emperor .

  # Find the successor of Emperor Nijō
  ?emperor dbo:successor ?successor .

  # Find the parent of the successor
  OPTIONAL { ?successor dbo:father ?parent . }
  OPTIONAL { ?successor dbo:mother ?parent . }

  FILTER(?parent != ?successor)
}
```",2,2,3,2,1,2,2,9,0,0,1,0,0.0,0
507,26,train,"Give me the director of the movie, that is a movie and a work, with the person born on 1919-06-17.","SELECT ?result WHERE { ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?v1 <http://dbpedia.org/ontology/birthDate> ""1919-06-17""^^<http://www.w3.org/2001/XMLSchema#date> . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Film>. ?v2 <http://dbpedia.org/ontology/director> ?result . ?v2 <http://dbpedia.org/property/starring> ?v1 . }","```sparql
SELECT ?directorName WHERE {
  ?person dbo:birthDate ""1919-06-17""^^xsd:date .
  ?movie dbo:director ?person ;
         a dbo:Film, dbo:CreativeWork .
  ?person foaf:name ?directorName .
}
```",3,5,4,3,1,3,3,71,0,0,11,0,0.0,0
124,9,train,Give me the commander in Mahdist War and military force of Battle of Tamai.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/battle> <http://dbpedia.org/resource/Battle_of_Tamai> . <http://dbpedia.org/resource/Mahdist_War> <http://dbpedia.org/ontology/commander> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?commander ?militaryForce WHERE {
  # Find the Battle of Tamai entity
  dbr:Battle_of_Tamai dbo:participatedIn dbr:Mahdist_War .
  
  # Get the commander involved in the battle
  OPTIONAL { 
    dbr:Battle_of_Tamai dbo:commander ?commander .
  }
  
  # Find the military force associated with the commander
  OPTIONAL {
    ?commander dbo:militaryService ?militaryForce .
  }
}
```",2,2,3,1,2,3,3,71,0,0,1,0,0.0,0
443,11,train,Give me the birthplace of the work of yes.,"SELECT ?result WHERE { ?v1 <http://dbpedia.org/property/author> ""yes""@en . ?v1 <http://dbpedia.org/ontology/birthPlace> ?result . }","```sparql
SELECT ?birthPlace WHERE {
  ?author foaf:name ""Clarissa Pinkola Estés"" .
  ?author dbo:birthPlace ?birthPlace .
}
```",2,2,3,2,1,2,3,28,0,0,993,0,0.0,0
102,8,train,"Give me the native of the residence, that is English and a settlement, of Peter Finbow.",SELECT ?result WHERE { ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. ?v0 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/United_Kingdom>. <http://dbpedia.org/resource/Peter_Finbow> <http://dbpedia.org/property/residence> ?v0 . ?result <http://dbpedia.org/ontology/birthPlace> ?v0 . },"```sparql
SELECT ?residenceName WHERE {
  ?person dbo:birthPlace dbr:Peter_Finbow .
  ?person dbo:residence ?residence .
  ?residence dbo:country dbr:England ;
             a dbo:Settlement .
  OPTIONAL { ?residence rdfs:label ?residenceName . FILTER (lang(?residenceName) = ""en"") }
}
```",2,4,3,2,1,3,2,20,0,0,100,0,0.0,0
917,33,train,"Give me the parent of Albert Kamehameha and child of the father of the spouse, that is a royalty, of Leleiohoku I.",SELECT ?result WHERE { ?v0 <http://dbpedia.org/ontology/spouse> <http://dbpedia.org/resource/Leleiohoku_I> . ?result <http://dbpedia.org/ontology/parent> ?v2 . ?v0 <http://dbpedia.org/property/father> ?v2 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?result <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Albert_Kamehameha> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX schema: <http://schema.org/>

SELECT DISTINCT ?commonIndividual WHERE {
  # Step 1: Identify Leleiohoku I
  ?leleiohokuI a dbo:Monarch ;
               schema:name ""Leleiohoku I""@en .

  # Step 2: Find the spouse of Leleiohoku I
  ?leleiohokuI dbo:spouse ?spouse .

  # Step 3: Determine the father of the spouse
  ?spouse dbo:father ?fatherOfSpouse .

  # Step 4: Identify the child of the father of the spouse
  ?fatherOfSpouse dbo:child ?childOfFatherOfSpouse .

  # Step 5: Check for royalty among these children
  ?childOfFatherOfSpouse a dbo:Monarch .

  # Step 6: Find Albert Kamehameha's parent
  ?albertKamehameha a dbo:Person ;
                    schema:name ""Albert Kamehameha""@en .
  ?albertKamehameha dbo:parent ?parentOfAlbretKamehameha .

  # Step 7: Identify commonality
  FILTER (?childOfFatherOfSpouse = ?parentOfAlbretKamehameha)
  
  BIND(?childOfFatherOfSpouse AS ?commonIndividual)
}
```",4,5,5,3,2,3,3,71,0,0,1,0,0.0,0
216,14,train,"Give me the team of the person born, that is a sports manager and a soccer manager and a soccer player, on 1983-12-20.","SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerPlayer>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsManager>. ?result <http://dbpedia.org/ontology/coach> ?v1 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerManager>. ?v1 <http://dbpedia.org/ontology/birthDate> ""1983-12-20""^^<http://www.w3.org/2001/XMLSchema#date> . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?person ?team WHERE {
  ?person dbo:birthDate ""1983-12-20""^^xsd:date .
  ?person dbo:occupation dbr:Soccer_manager ;
          dbo:occupation dbr:Sports_manager ;
          dbo:occupation dbr:Soccer_player .
  
  OPTIONAL { 
    ?person dbo:currentTeam ?team .
  }
}
```",2,5,3,2,1,3,3,71,0,0,1,0,0.0,0
917,8,train,Give me the father of Kamehameha IV.,SELECT ?result WHERE { <http://dbpedia.org/resource/Kamehameha_IV> <http://dbpedia.org/property/father> ?result . },"```sparql
SELECT ?father WHERE {
  ?person dbo:givenName ""Alexander"" .
  ?person dbo:familyName ""Liholiho"" .
  ?person dbo:father ?father .
}
```",1,1,2,1,1,3,3,71,0,0,1,0,0.0,0
773,30,train,"Give me the parent of Carloman of Bavaria and parent of the child, that is a royalty, of Louis the German and spouse of Louis the German.",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Carloman_of_Bavaria> . ?v1 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Louis_the_German> . ?v1 <http://dbpedia.org/ontology/parent> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. <http://dbpedia.org/resource/Louis_the_German> <http://dbpedia.org/ontology/spouse> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>

# Query to find the parent of Carloman of Bavaria
SELECT ?parent WHERE {
  ?carloman a dbo:Person ;
            foaf:name ""Carloman of Bavaria""@en .
  ?carloman dbo:parent ?parent .
}

UNION

# Query to find a royal child of Louis the German and their parent
SELECT ?childParent WHERE {
  ?louis a dbo:Person ;
         foaf:name ""Louis the German""@en .
  ?louis dbo:child ?royalChild .
  ?royalChild dbo:parent ?childParent .
  FILTER EXISTS { ?royalChild dbo:title ?title . }
}

UNION

# Query to find the spouse of Louis the German
SELECT ?spouse WHERE {
  ?louis a dbo:Person ;
         foaf:name ""Louis the German""@en .
  ?louis dbo:spouse ?spouse .
}
```",4,5,5,2,3,3,3,71,0,0,1,0,0.0,0
130,6,train,Give me the entity in Tennessee and figure known as Vanderbilt Commodores.,SELECT ?result WHERE { ?result <http://dbpedia.org/property/nickname> <http://dbpedia.org/resource/Vanderbilt_Commodores> . ?result <http://dbpedia.org/ontology/state> <http://dbpedia.org/resource/Tennessee> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?team WHERE {
  ?university a dbo:University ;
              dbo:location dbr:Nashville,_Tennessee ;
              dbo:sportsTeam ?team .
  FILTER(CONTAINS(LCASE(?team), ""vanderbilt commodores""))
}
```",2,2,3,1,2,3,2,20,0,0,1,0,0.0,0
216,31,train,"Give me the player in Mario Ivanković and player in the coach of the reference, that is an organisation and a soccer club, to Croatia U21.","SELECT ?result WHERE { <http://dbpedia.org/resource/Mario_Ivanković> <http://dbpedia.org/ontology/team> ?result . ?v1 <http://xmlns.com/foaf/0.1/name> ""Croatia U21""@en . ?v0 <http://dbpedia.org/ontology/team> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?v1 <http://dbpedia.org/ontology/coach> ?v0 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerClub>. }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?role ?organisation ?club WHERE {
  # Find Mario Ivanković's association with Croatia U21
  OPTIONAL { 
    ?person rdfs:label ""Mario Ivanković""@en .
    ?person dbo:team dbr:Croatia_national_under-21_football_team .

    # Determine if he is a player or coach
    OPTIONAL {
      ?person dbo:position ?role .
      FILTER(CONTAINS(LCASE(?role), ""coach""))
      BIND(""Coach"" AS ?role)
    }
    OPTIONAL {
      ?person dbo:position ?role .
      FILTER(NOT CONTAINS(LCASE(?role), ""coach""))
      BIND(""Player"" AS ?role)
    }

    # If he is a coach, find the organization and club
    OPTIONAL {
      ?person dbo:worksFor ?organisation .
      ?organisation rdfs:label ?orgLabel .
      FILTER(CONTAINS(LCASE(?orgLabel), ""soccer club"") || CONTAINS(LCASE(?orgLabel), ""organization""))
      
      # Find associated soccer club
      ?organisation dbo:sportTeam ?club .
      ?club rdfs:label ?clubLabel .
    }
  }
}
```",4,6,5,3,2,3,3,71,0,0,3,0,0.0,0
341,4,train,Give me the band member of Beyoncé and writer of In Love & War (Amerie album).,SELECT ?result WHERE { <http://dbpedia.org/resource/In_Love_&_War_(Amerie_album)> <http://dbpedia.org/property/writer> ?result . ?result <http://dbpedia.org/ontology/associatedMusicalArtist> <http://dbpedia.org/resource/Beyoncé> . },"```sparql
# Query to find members of Destiny's Child or collaborators with Beyoncé
SELECT ?person WHERE {
  ?band dcterms:member ?person .
  FILTER(CONTAINS(LCASE(?band), ""destiny's child"") || CONTAINS(LCASE(?band), ""beyoncé""))
}

UNION

# Query to find the writer of ""In Love & War"" from Amerie's album
SELECT DISTINCT ?writer WHERE {
  ?song dcterms:creator ?writer .
  ?album dcterms:hasPart ?song .
  FILTER(CONTAINS(LCASE(?album), ""amerie"") && CONTAINS(LCASE(?song), ""in love & war""))
}

# Combine results to find common individuals
SELECT DISTINCT ?person WHERE {
  VALUES ?person { 
    # Results from the first query will be inserted here
  }
  
  ?song dcterms:creator ?person .
  ?album dcterms:hasPart ?song .
  FILTER(CONTAINS(LCASE(?album), ""amerie"") && CONTAINS(LCASE(?song), ""in love & war""))
}
```",2,2,3,1,2,2,2,9,0,0,1,0,0.0,0
582,0,train,Give me the reference to Japan.,"SELECT ?result WHERE { ?result <http://xmlns.com/foaf/0.1/name> ""Japan""@en . }","```sparql
SELECT ?resource WHERE {
  ?resource rdfs:label ""Japan""@en.
}
```",1,1,2,1,1,3,3,71,1,1,14,0.5,0.06666666666666667,0.11764705882352941
965,8,train,"Give me the person born, that is a noble, as Prince George of Battenberg.","SELECT ?result WHERE { ?result <http://dbpedia.org/property/birthName> ""Prince George of Battenberg""@en . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Noble>. }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?person ?title WHERE {
  ?person a dbo:Person ;
          dbo:title ?title .
  FILTER(CONTAINS(LCASE(str(?title)), ""prince"") || CONTAINS(LCASE(str(?title)), ""duke"") || CONTAINS(LCASE(str(?title)), ""count""))
}
```",1,2,2,1,1,3,3,71,0,6713,1,0.0,0.0,0
433,30,train,Give me the associated musical artist of Bill Evans and professional in the profession of Bob Marley and associated musical artist of Paul Chambers.,SELECT ?result WHERE { <http://dbpedia.org/resource/Bill_Evans> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?result <http://dbpedia.org/property/occupation> ?v1 . <http://dbpedia.org/resource/Bob_Marley> <http://dbpedia.org/property/occupation> ?v1 . <http://dbpedia.org/resource/Paul_Chambers> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT DISTINCT ?billEvansArtist ?bobMarleyProfession ?paulChambersArtist WHERE {
  # Associated musical artist of Bill Evans
  ?billEvans dbo:associatedMusicalArtist ?billEvansArtist .
  VALUES ?billEvans { dbp:BillEvans }

  # Profession of Bob Marley
  ?bobMarley dbo:occupation ?bobMarleyProfession .
  VALUES ?bobMarley { dbp:BobMarley }

  # Associated musical artist of Paul Chambers
  ?paulChambers dbo:associatedMusicalArtist ?paulChambersArtist .
  VALUES ?paulChambers { dbp:PaulChambers }
}
```",4,4,5,2,3,3,3,71,0,0,1,0,0.0,0
826,18,train,"Give me the predecessor of Louis IV, Grand Duke of Hesse and spouse of Anna Magdalena Appel and successor of Louis II, Grand Duke of Hesse.","SELECT ?result WHERE { <http://dbpedia.org/resource/Anna_Magdalena_Appel> <http://dbpedia.org/ontology/spouse> ?result . ?result <http://dbpedia.org/ontology/successor> <http://dbpedia.org/resource/Louis_IV,_Grand_Duke_of_Hesse> . <http://dbpedia.org/resource/Louis_II,_Grand_Duke_of_Hesse> <http://dbpedia.org/ontology/successor> ?result . }","```sparql
SELECT ?predecessor WHERE {
  ?grandDuke dbr:Louis_IV,_Grand_Duke_of_Hesse dbo:successorOf ?predecessor .
  ?predecessor a dbo:GrandDuke ;
               dbo:spouse dbr:Anna_Magdalena_Appel ;
               dbo:successor dbr:Louis_II,_Grand_Duke_of_Hesse .
}
```",3,3,4,1,3,3,3,71,0,0,1,0,0.0,0
865,11,train,"Give me the native of the residence, that is a country, of Ram Jaipal Singh Yadav.",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/birthPlace> ?v1 . <http://dbpedia.org/resource/Ram_Jaipal_Singh_Yadav> <http://dbpedia.org/property/residence> ?v1 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?native WHERE {
  # Step 1: Identify Ram Jaipal Singh Yadav and his residence
  ?person a dbo:Person ;
          foaf:name ""Ram Jaipal Singh Yadav""@en .
  
  OPTIONAL { 
    ?person dbo:residence ?residence .
  }
  
  # Step 2: Determine the country of the residence
  ?residence dbo:country ?country .

  # Step 3: Find out who is native to that country
  ?native dbo:nationality ?country ;
          foaf:name ?name .
}
```",2,3,3,2,1,3,3,71,86,4234,1812,0.01990740740740741,0.045310853530031614,0.027661627532968806
987,22,train,"Give me the entity in the region, that is a country, of Central European Time and birth place of Dado Polumenta.",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/country> ?v0 . ?v0 <http://dbpedia.org/property/timeZone> <http://dbpedia.org/resource/Central_European_Time> . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. <http://dbpedia.org/resource/Dado_Polumenta> <http://dbpedia.org/ontology/birthPlace> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?country WHERE {
  ?country a dbo:Country .
  ?country dbo:timeZone dbr:Central_European_Time .

  OPTIONAL { 
    ?person dbo:birthPlace ?country .
    FILTER (str(?person) = ""Dado_Polumenta"") 
  }
  
  FILTER EXISTS { ?person dbo:birthPlace ?country . }
}
```",3,4,4,2,2,3,3,71,0,0,1,0,0.0,0
773,19,train,Give me the parent of Carloman of Bavaria and spouse of the father of Charles the Fat.,SELECT ?result WHERE { <http://dbpedia.org/resource/Charles_the_Fat> <http://dbpedia.org/property/father> ?v0 . ?v0 <http://dbpedia.org/ontology/spouse> ?result . ?result <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Carloman_of_Bavaria> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>

SELECT ?individual WHERE {
  # Step 1: Find Carloman of Bavaria's parent
  ?carloman dbo:parent ?parent .
  VALUES ?carloman { <http://dbpedia.org/resource/Carloman_of_Bavaria> }

  # Step 2: Find Charles the Fat's father
  ?charlesFat dbo:father ?father .
  VALUES ?charlesFat { <http://dbpedia.org/resource/Charles_the_Fat> }

  # Step 3: Find the spouse of Charles the Fat's father
  ?father dbo:spouse ?individual .

  # Ensure the individual is the same as Carloman's parent
  FILTER (?parent = ?individual)
}
```",3,3,4,2,2,3,3,71,0,0,1,0,0.0,0
267,11,train,"Give me the coach of the player, that is a soccer club, in Rasoul Khatibi and person born on 1953-03-01.","SELECT ?result WHERE { ?v2 <http://dbpedia.org/ontology/coach> ?result . ?result <http://dbpedia.org/ontology/birthDate> ""1953-03-01""^^<http://www.w3.org/2001/XMLSchema#date> . <http://dbpedia.org/resource/Rasoul_Khatibi> <http://dbpedia.org/ontology/team> ?v2 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerClub>. }","```sparql
SELECT ?player ?club ?coach WHERE {
  ?player a dbo:SoccerPlayer ;
          foaf:name ""Rasoul Khatibi"" ;
          dbo:birthDate ?birthDate .
  FILTER (YEAR(?birthDate) = 1953 && MONTH(?birthDate) = 3 && DAY(?birthDate) = 1)
  
  ?player dbo:playsFor ?club .

  OPTIONAL {
    ?club dbo:coach ?coach .
  }
}
```",3,4,4,2,2,3,2,20,0,0,1,0,0.0,0
136,5,train,Give me the region coded as the area code of Levenhagen.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/areaCode> ?v0 . <http://dbpedia.org/resource/Levenhagen> <http://dbpedia.org/ontology/areaCode> ?v0 . },"```sparql
SELECT ?region WHERE {
  wd:Q1105010 wdt:P131* wd:Q1117 .
  wd:Q1117 rdfs:label ?region .
  FILTER(LANG(?region) = ""en"")
}
```

In this query:
- `wd:Q1105010` is the DBpedia identifier for Levenhagen.
- `wdt:P131*` is used to find the administrative region (state) of which Levenhagen is a part.
- `wd:Q1117` corresponds to Mecklenburg-Vorpommern, the state in Germany where Levenhagen is located.",2,2,3,2,1,2,2,9,0,0,9,0,0.0,0
456,26,train,"Give me the professional in the alter ego of the reference, that is a fictional character, to Lamont Cranston (radio, film and television).","SELECT ?result WHERE { ?result <http://dbpedia.org/property/occupation> ?v2 . ?v1 <http://dbpedia.org/property/alterEgo> ?v2 . ?v1 <http://xmlns.com/foaf/0.1/name> ""Lamont Cranston (radio, film and television)""@en . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/FictionalCharacter>. }","```sparql
SELECT ?alterEgo WHERE {
  wd:Q123456 rdfs:label ""Lamont Cranston""@en .
  ?alterEgo dbo:aliasOf wd:Q123456 ;
            rdfs:label ?label .
  FILTER(CONTAINS(LCASE(?label), ""the shadow""))
}
```

Note: Replace `wd:Q123456` with the actual DBpedia resource identifier for Lamont Cranston if available.",3,4,4,3,1,3,3,71,0,0,39640,0,0.0,0
582,38,train,"Give me the player in the father, that is an athlete and a soccer manager and a sports manager, of Masami Nagasawa and figure known as the nickname of Japan national football team.",SELECT ?result WHERE { <http://dbpedia.org/resource/Japan_national_football_team> <http://dbpedia.org/property/nickname> ?v2 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsManager>. <http://dbpedia.org/resource/Masami_Nagasawa> <http://dbpedia.org/property/father> ?v3 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Athlete>. ?v3 <http://dbpedia.org/ontology/team> ?result . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerManager>. ?result <http://dbpedia.org/property/nickname> ?v2 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?father WHERE {
  # Find Masami Nagasawa's father
  ?nagasawa dbo:parent ?father .
  FILTER(STRSTARTS(STR(?nagasawa), ""http://dbpedia.org/resource/Masami_Nagasawa""))

  # Check if the father is an athlete and a soccer manager
  ?father dbo:occupation dbr:Soccer_manager ;
          dbo:occupation dbr:Athlete .

  # Verify that he is also a sports manager
  ?father dbo:occupation dbr:Sports_manager .

  # Confirm the nickname associated with Japan national football team
  ?father rdfs:label ""Hajime Moriyasu""@en .
}
```",4,7,5,2,2,3,3,71,0,0,1,0,0.0,0
433,8,train,Give me the profession of Bob Marley.,SELECT ?result WHERE { <http://dbpedia.org/resource/Bob_Marley> <http://dbpedia.org/property/occupation> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?occupation WHERE {
  dbr:Bob_Marley dbo:occupation ?occupation .
}
```",1,1,2,1,1,3,3,71,0,1,3,0.0,0.0,0
216,12,train,Give me the player in Mario Ivanković and team of Ognjen Vukojević.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/coach> <http://dbpedia.org/resource/Ognjen_Vukojević> . <http://dbpedia.org/resource/Mario_Ivanković> <http://dbpedia.org/ontology/team> ?result . },"```sparql
# Query to get the team of Ognjen Vukojević
SELECT ?team WHERE {
  dbpedia:Ognjen_Vukojević dbo:sportsTeam ?team .
}

# Query to find Mario Ivanković as a player
SELECT ?player WHERE {
  ?player rdf:type dbo:FootballPlayer ;
          foaf:name ""Mario Ivanković""@en .
}
```",2,2,3,1,2,3,3,71,0,0,1,0,0.0,0
933,29,train,Give me the reference to the birth name of Alan Warner (musician) and band of Mike Elliott (saxophonist) and band of The Ramong Sound.,SELECT ?result WHERE { <http://dbpedia.org/resource/Alan_Warner_(musician)> <http://dbpedia.org/property/birthName> ?v3 . ?result <http://xmlns.com/foaf/0.1/name> ?v3 . <http://dbpedia.org/resource/Mike_Elliott_(saxophonist)> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . <http://dbpedia.org/resource/The_Ramong_Sound> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . },"```sparql
# Query for Alan Warner's birth name
SELECT ?birthName WHERE {
  ?person foaf:name ""Alan Warner"" .
  OPTIONAL { ?person foaf:alias ?birthName . }
}

UNION

# Query for Mike Elliott's band
SELECT ?band WHERE {
  ?person foaf:name ""Mike Elliott"" .
  ?person dbo:occupation dbc:Saxophonists .
  ?person dbo:memberOfBand ?band .
}

UNION

# Query for The Ramong Sound's band
SELECT ?band WHERE {
  ?group foaf:name ""The Ramong Sound"" .
  ?group dbo:memberOfBand ?band .
}
```",4,4,5,2,3,3,3,71,0,0,1,0,0.0,0
170,4,train,Give me the awardee of People's Artist of Russia.,SELECT ?result WHERE { ?result <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/People's_Artist_of_Russia> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?awardee ?name WHERE {
  ?award a dbo:Award ;
        rdfs:label ""People's Artist of Russia""@en .
  
  ?recipient dbo:receivedAward ?award ;
             foaf:name ?name .

  FILTER (lang(?name) = 'en')
}
```",1,1,2,1,1,2,3,28,0,0,24,0,0.0,0
36,13,train,"Give me the person born in 1971 and actor of the claim to fame, that is a film, of Lepacious Bose.","SELECT ?result WHERE { ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Film>. ?result <http://dbpedia.org/ontology/birthYear> ""1971""^^<http://www.w3.org/2001/XMLSchema#gYear> . <http://dbpedia.org/resource/Lepacious_Bose> <http://dbpedia.org/ontology/knownFor> ?v0 . ?v0 <http://dbpedia.org/ontology/starring> ?result . }","```sparql
# Step 1: Find the claim-to-fame film of Lepa Brena
SELECT ?film WHERE {
    wd:Q123456 foaf:name ?name .
    ?film dbo:starring wd:Q123456 .
    FILTER(CONTAINS(LCASE(?name), ""lepa brena""))
}

# Step 2: Find actors in the identified film born in 1971
SELECT DISTINCT ?actor WHERE {
    # Replace 'FilmURI' with the actual URI of the film found in step 1
    wd:FilmURI dbo:starring ?actor .
    ?actor dbo:birthdayYear ""1971""^^xsd:gYear .
}
```

Note: The placeholder `wd:Q123456` should be replaced with Lepa Brena's DBpedia identifier, and `wd:FilmURI` should be replaced with the URI of her claim-to-fame film once identified.",3,4,4,2,2,2,3,28,0,0,1,0,0.0,0
445,14,train,Give me the entity in the award of George H. Cameron.,SELECT ?result WHERE { <http://dbpedia.org/resource/George_H._Cameron> <http://dbpedia.org/property/awards> ?v1 . ?result <http://dbpedia.org/ontology/country> ?v1 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?award WHERE {
  ?person a dbo:Person ;
          foaf:name ""George H. Cameron""@en .
  ?person dbo:honoraryAwardReceived ?award .
}
```",2,2,3,2,1,3,3,71,0,0,87241,0,0.0,0
459,15,train,"Give me the person born as John Kevin Stitt and governor of the death place, that is a settlement, of Cliff Roquemore.","SELECT ?result WHERE { ?result <http://dbpedia.org/property/birthName> ""John Kevin Stitt""@en . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. ?v1 <http://dbpedia.org/property/governor> ?result . <http://dbpedia.org/resource/Cliff_Roquemore> <http://dbpedia.org/ontology/deathPlace> ?v1 . }","```sparql
# Step 1: Find John Kevin Stitt's details using his birth name.
SELECT ?person WHERE {
  ?person foaf:name ""John Kevin Stitt""@en .
  ?person dbo:birthName ""John Kevin Stitt"" .
}

# Step 2: Identify Cliff Roquemore and determine where he died.
SELECT ?deathPlace WHERE {
  ?cliffRoquemore dbo:deathPlace ?deathPlace .
  ?cliffRoquemore foaf:name ""Cliff Roquemore""@en .
}

# Step 3: Ensure the death place is a settlement.
SELECT DISTINCT ?settlement WHERE {
  ?settlement rdf:type dbo:Settlement .
  FILTER EXISTS { 
    ?deathPlace rdfs:label ?placeLabel .
    ?placeLabel bif:contains ""Cliff Roquemore""@en .
  }
}

# Step 4: Check if John Kevin Stitt has been the governor of that settlement.
SELECT ?governor WHERE {
  ?person dbo:governmentRole ?role .
  ?role dbo:officeHolder ?governor .
  ?settlement dbo:currentGovernor ?governor .
  FILTER EXISTS { 
    ?person foaf:name ""John Kevin Stitt""@en .
  }
}
```",3,4,4,2,2,2,3,28,0,0,1,0,0.0,0
987,21,train,"Give me the birth place of the band, that is an artist and a musical artist, of Šako Polumenta and entity in Montenegro.",SELECT ?result WHERE { <http://dbpedia.org/resource/Šako_Polumenta> <http://dbpedia.org/ontology/associatedMusicalArtist> ?v2 . ?result <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Montenegro> . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?v2 <http://dbpedia.org/ontology/birthPlace> ?result . },"```sparql
SELECT ?band ?birthPlace WHERE {
  ?band dbo:member Šako_Polumenta ;
        a dbo:Band ;
        dbo:genre dbc:Musical_Artists .
  OPTIONAL { ?band dbo:country dbr:Montenegro . }
  ?band dbo:birthPlace ?birthPlace .
}
```",3,5,4,2,2,3,3,71,0,0,1,0,0.0,0
216,17,train,Give me the administration of  and party of the awardee of Australian Defence Medal.,"SELECT ?result WHERE { ?result <http://dbpedia.org/property/leader> """"@en . ?v1 <http://dbpedia.org/ontology/party> ?result . ?v1 <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/Australian_Defence_Medal> . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?person ?administration ?party WHERE {
  ?person dbo:award dbr:Australian_Defence_Medal .
  OPTIONAL { ?person dbo:officeHeld ?position . }
  OPTIONAL { ?position dbo:partOf ?administration . }
  OPTIONAL { ?person dbo:politicalParty ?party . }
}
```",3,3,4,2,2,2,3,28,0,7,1,0.0,0.0,0
935,3,train,Give me the awardee of Sitara-i-Imtiaz.,SELECT ?result WHERE { ?result <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/Sitara-i-Imtiaz> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?recipient ?recipientLabel WHERE {
  ?award dbo:category dbr:Sitara-i-Imtiaz.
  ?award dbo:recipient ?recipient.
  SERVICE wikibase:label { bd:serviceParam wikibase:language ""[AUTO_LANGUAGE],en"". }
}
```",1,1,2,1,1,3,2,20,0,0,52,0,0.0,0
715,35,train,"Give me the leader of the office, that is a government agency and an organisation, of Carlos Franco Iribarnegaray and commander in the force, that is a military conflict, of Abd el-Krim.",SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v2 <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Abd_el-Krim> . <http://dbpedia.org/resource/Carlos_Franco_Iribarnegaray> <http://dbpedia.org/property/office> ?v1 . ?v1 <http://dbpedia.org/ontology/leader> ?result . ?v2 <http://dbpedia.org/ontology/commander> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/GovernmentAgency>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?leaderOfOffice ?commanderInForce
WHERE {
  # Find the office associated with Carlos Franco Iribarnegaray and its leader
  ?office dbo:position dbr:C_Franco_Iribarnegaray .
  ?office dbo:leader ?leaderOfOffice .

  # Find the military conflict involving Abd el-Krim and his commander
  ?conflict dbo:commander dbr:Abd_el-Krim .
  ?conflict dbo:commander ?commanderInForce .
}
```",4,7,5,2,2,3,3,71,0,0,1,0,0.0,0
274,8,train,"Give me the band member of the person born, that is a musical artist, as John Birks Gillespie.","SELECT ?result WHERE { ?v1 <http://dbpedia.org/property/birthName> ""John Birks Gillespie""@en . ?result <http://dbpedia.org/ontology/associatedMusicalArtist> ?v1 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?band WHERE {
  ?person dbo:birthName ""John Birks Gillespie""@en .
  ?person dbo:occupation ?occupation .
  FILTER(CONTAINS(LCASE(STR(?occupation)), ""musical artist"") || CONTAINS(LCASE(STR(?occupation)), ""musician""))
  OPTIONAL { ?person dbo:memberOfBand ?band . }
}
```",2,3,3,2,1,2,3,28,0,0,67,0,0.0,0
98,8,train,Give me the region of the time zone of Lopez Jaena.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/timeZone> ?v1 . <http://dbpedia.org/resource/Lopez_Jaena> <http://dbpedia.org/ontology/timeZone> ?v1 . },"```sparql
SELECT ?region WHERE {
  ?location rdfs:label ""Lopez Jaena""@en .
  ?location dbo:timeZone ?timezone .
  ?timezone dbo:wikiPageRedirects ?redirect .
  OPTIONAL { ?redirect dbo:wikiPageWikiLink ?region . }
  FILTER (lang(?location) = 'en')
}
```",2,2,3,2,1,2,3,28,0,0,1874,0,0.0,0
465,6,train,"Give me the child, that is a royalty, of Ferdinand I, Holy Roman Emperor.","SELECT ?result WHERE { ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. <http://dbpedia.org/resource/Ferdinand_I,_Holy_Roman_Emperor> <http://dbpedia.org/ontology/child> ?result . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?child ?title WHERE {
  ?person a dbo:Emperor ;
          foaf:name ""Ferdinand I"" ;
          dbo:spouse ?spouse .
  
  ?spouse dbo:child ?child .

  OPTIONAL { 
    ?child dbp:title ?title .
  }

  FILTER (regex(?title, ""King|Queen|Prince|Princess|Archduke|Archduchess"", ""i""))
}
```",1,2,2,1,1,3,3,71,0,0,11,0,0.0,0
232,6,train,Give me the claim to fame of the person born as Emily Katherine Jacques.,"SELECT ?result WHERE { ?v0 <http://dbpedia.org/property/birthName> ""Emily Katherine Jacques""@en . ?v0 <http://dbpedia.org/ontology/knownFor> ?result . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?claimToFame WHERE {
  ?person a dbo:Person ;
          foaf:name ""Emily Deschanel""@en .
  OPTIONAL { ?person dbo:notableWorks ?works . }
  OPTIONAL { ?works dbo:abstract ?claimToFame . FILTER (lang(?claimToFame) = 'en') }
}
```",2,2,3,2,1,2,2,9,0,1046516,2,0.0,0.0,0
839,21,train,"Give me the band of the person born, that is a musical artist, as Kevin Richard Russell and band of Matthias Röhr.","SELECT ?result WHERE { ?v1 <http://dbpedia.org/property/birthName> ""Kevin Richard Russell""@en . ?result <http://dbpedia.org/ontology/bandMember> <http://dbpedia.org/resource/Matthias_Röhr> . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?v1 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . }","```sparql
# Query for Kevin Richard Russell (Kip Winger)
SELECT ?band WHERE {
  ?person dbo:birthName ""Kevin Richard Russell""@en .
  ?person foaf:name ""Kip Winger""@en .
  ?person dbo:associatedBand ?band .
  FILTER EXISTS { ?band a dbo:MusicalGroup }
}

UNION

# Query for Matthias Röhr
SELECT ?band WHERE {
  ?person foaf:name ""Matthias Röhr""@en .
  ?person dbo:associatedBand ?band .
  FILTER EXISTS { ?band a dbo:MusicalGroup }
}
```",3,4,4,2,2,3,3,71,0,0,1,0,0.0,0
417,13,train,Give me the child of the father of Frederick IX of Denmark.,SELECT ?result WHERE { <http://dbpedia.org/resource/Frederick_IX_of_Denmark> <http://dbpedia.org/property/father> ?v1 . ?result <http://dbpedia.org/property/father> ?v1 . },"```sparql
SELECT ?child WHERE {
  wd:Q1198 wdt:P22 ?father.
  ?father wdt:P40 ?child.
}
```",2,2,3,2,1,3,3,71,0,0,2,0,0.0,0
645,27,train,"Give me the leader of the office, that is a government agency and an organisation, of the native of Restoration (Spain).",SELECT ?result WHERE { ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?v1 <http://dbpedia.org/property/office> ?v2 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/GovernmentAgency>. ?v2 <http://dbpedia.org/ontology/leader> ?result . ?v1 <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Restoration_(Spain)> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?office ?leader WHERE {
  # Find entities related to Restoration in Spain
  ?entity rdfs:label ""Restoration (Spain)""@en .
  
  # Filter for government agencies and organizations
  ?office dbo:country dbr:Spain ;
          a dbo:GovernmentAgency, dbo:Organization ;
          dbo:relatedTo ?entity .

  # Find the leader of this office
  OPTIONAL { ?office dbo:leader ?leader . }
}
```",3,5,4,3,1,3,3,71,0,0,15,0,0.0,0
47,9,train,Give me the office of Suvendu Adhikari and office of Bidesh Ranjan Bose.,SELECT ?result WHERE { <http://dbpedia.org/resource/Suvendu_Adhikari> <http://dbpedia.org/property/office> ?result . <http://dbpedia.org/resource/Bidesh_Ranjan_Bose> <http://dbpedia.org/property/office> ?result . },"```sparql
SELECT ?person ?name ?officeName WHERE {
  VALUES (?person ?name) { 
    (dbpedia:Suvendu_Adhikari ""Suvendu Adhikari"")
    (dbpedia:Bidesh_Ranjan_Bose ""Bidesh Ranjan Bose"")
  }
  
  ?person foaf:name ?name .
  ?person dbo:office ?office .
  ?office rdfs:label ?officeName .
  FILTER(LANG(?officeName) = 'en')
}
ORDER BY ?person
```",2,2,3,1,2,3,3,71,0,0,1,0,0.0,0
200,4,train,Give me the reference to Angelcorpse and band member of Order from Chaos.,"SELECT ?result WHERE { ?result <http://xmlns.com/foaf/0.1/name> ""Angelcorpse""@en . ?result <http://dbpedia.org/ontology/associatedMusicalArtist> <http://dbpedia.org/resource/Order_from_Chaos> . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?angelcorpseMember ?orderFromChaosLink WHERE {
  # Find Angelcorpse resource
  ?angelcorpse a dbo:Band ;
               rdfs:label ""Angelcorpse""@en .
  
  # Find members of Angelcorpse
  ?member dbo:bandMember ?angelcorpse .

  # Check if any member is also associated with Order from Chaos
  OPTIONAL {
    ?orderFromChaos a dbo:Band ;
                    rdfs:label ""Order from Chaos""@en .
    ?member dbo:memberOfBand ?orderFromChaos .
  }
  
  FILTER (lang(?angelcorpseLabel) = 'en')
}
```",2,2,3,1,2,2,2,9,0,0,1,0,0.0,0
443,1,train,Give me the birthplace of Ulf Lundell.,SELECT ?result WHERE { <http://dbpedia.org/resource/Ulf_Lundell> <http://dbpedia.org/ontology/birthPlace> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?birthPlace WHERE {
  ?person a dbo:Person ;
          foaf:name ""Ulf Lundell""@en .
  ?person dbo:birthPlace ?birthPlace .
}
```",1,1,2,1,1,2,3,28,2,0,0,1.0,1.0,1.0
507,25,train,Give me the director of Entertaining Mr Sloane (film) and professional in the profession of Guy Ferland.,SELECT ?result WHERE { <http://dbpedia.org/resource/Guy_Ferland> <http://dbpedia.org/property/occupation> ?v1 . <http://dbpedia.org/resource/Entertaining_Mr_Sloane_(film)> <http://dbpedia.org/ontology/director> ?result . ?result <http://dbpedia.org/property/occupation> ?v1 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?director ?profession 
WHERE {
  # Find the director of ""Entertaining Mr Sloane""
  OPTIONAL { 
    dbr:Entertaining_Mr_Sloane (dbo:director) ?director .
  }
  
  # Find the profession of Guy Ferland
  OPTIONAL {
    dbr:Guy_Ferland dbo:profession ?profession .
  }
}
```",3,3,4,2,2,3,3,71,0,0,1,0,0.0,0
326,8,train,"Give me the person decedent at the award, that is a country, of Adelbert Cronkhite.",SELECT ?result WHERE { ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. <http://dbpedia.org/resource/Adelbert_Cronkhite> <http://dbpedia.org/property/awards> ?v0 . ?result <http://dbpedia.org/ontology/deathPlace> ?v0 . },"```sparql
SELECT ?award ?decedent WHERE {
  ?person rdfs:label ""Adelbert Cronkhite""@en .
  ?person dbo:awardedBy ?award .
  ?award rdfs:label ?awardLabel .
  FILTER(CONTAINS(LCASE(?awardLabel), ""country"")) .
  
  OPTIONAL { 
    ?award dbo:decedent ?decedent .
    ?decedent rdfs:label ?decedentLabel .
  }
}
```",2,3,3,2,1,3,2,20,0,0,3795,0,0.0,0
216,32,train,"Give me the player in the coach, that is a soccer player and a sports manager and a soccer manager, of Bosnia and Herzegovina national under-18 football team and player in the coach of Croatia national under-21 football team.",SELECT ?result WHERE { ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerManager>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsManager>. <http://dbpedia.org/resource/Croatia_national_under-21_football_team> <http://dbpedia.org/ontology/coach> ?v1 . ?v1 <http://dbpedia.org/ontology/team> ?result . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerPlayer>. <http://dbpedia.org/resource/Bosnia_and_Herzegovina_national_under-18_football_team> <http://dbpedia.org/ontology/coach> ?v3 . ?v3 <http://dbpedia.org/ontology/team> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?person WHERE {
  # Person is a coach of Bosnia and Herzegovina national under-18 football team
  ?person dbo:coach dbr:Bosnia_and_Herzegovina_national_under-18_football_team .
  
  # Person has been a player (or involved in coaching as a player) for Croatia national under-21 football team
  ?person dbo:player dbr:Croatia_national_under-21_football_team .

  # Person is both a soccer player and a sports manager
  ?person dbo:sport dbr:Soccer .
  ?person dbo:occupation dbr:Sports_manager .
}
```",4,7,5,2,2,3,3,71,0,0,3,0,0.0,0
124,19,train,"Give me the military force of Battle of Tamai and commander in the war, that is a societal event and a military conflict, of A Field Battery, Royal Australian Artillery.","SELECT ?result WHERE { ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v0 <http://dbpedia.org/ontology/commander> ?result . ?result <http://dbpedia.org/ontology/battle> <http://dbpedia.org/resource/Battle_of_Tamai> . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. <http://dbpedia.org/resource/A_Field_Battery,_Royal_Australian_Artillery> <http://dbpedia.org/ontology/battle> ?v0 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?battle ?militaryForce ?commander ?war WHERE {
  # Identify the Battle of Tamai
  VALUES ?battle { dbr:Battle_of_Tamai }

  # Get military forces involved in the battle
  ?battle dbo:militaryConflicts ?conflict .
  ?conflict dbo:participatingMilitaryUnit ?militaryForce .

  # Check if A Field Battery, Royal Australian Artillery was part of this battle
  FILTER(?militaryForce = dbr:A_Field_Battery,_Royal_Australian_Artillery)

  # Get commanders involved in the battle
  OPTIONAL {
    ?battle dbo:commander ?commander .
  }

  # Identify the war or societal event context
  ?conflict dbo:partOfWar ?war .
}
```",3,5,4,2,2,3,3,71,0,0,1,0,0.0,0
606,9,train,"Give me the nickname of the figure known, that is a settlement, as Barb City.","SELECT ?result WHERE { ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. ?v0 <http://dbpedia.org/property/nickname> ?result . ?v0 <http://dbpedia.org/property/nickname> ""Barb City""@en . }","```sparql
SELECT ?settlement ?officialName WHERE {
  ?settlement rdfs:label ""Barb City""@en .
  ?settlement foaf:name ?officialName .
}
```",2,3,3,2,1,3,2,20,0,0,1,0,0.0,0
606,2,train,"Give me the figure known, that is a settlement, as Barb City.","SELECT ?result WHERE { ?result <http://dbpedia.org/property/nickname> ""Barb City""@en . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?settlement WHERE {
  ?settlement a dbo:PopulatedPlace .
  ?settlement rdfs:label ""Barb City""@en .
}
```",1,2,2,1,1,3,2,20,0,0,1,0,0.0,0
839,27,train,"Give me the band of the band, that is a musical artist, of the professional in Musician.","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/bandMember> ?v2 . ?v1 <http://dbpedia.org/property/occupation> ""Musician""@en . ?v1 <http://dbpedia.org/ontology/associatedMusicalArtist> ?v2 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>

SELECT ?musician ?band1 ?band2 WHERE {
  ?musician a dbo:Musician .
  ?musician dbo:musicalArtist ?artist .
  ?musician dbo:band ?band1 .
  OPTIONAL { ?band1 dbo:band ?band2 . }
}
```",3,4,4,3,1,3,3,71,0,0,706,0,0.0,0
715,22,train,"Give me the leader of the office, that is a government agency and an organisation, of Carlos Franco Iribarnegaray and commander in Rif War.",SELECT ?result WHERE { <http://dbpedia.org/resource/Rif_War> <http://dbpedia.org/ontology/commander> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. <http://dbpedia.org/resource/Carlos_Franco_Iribarnegaray> <http://dbpedia.org/property/office> ?v1 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/GovernmentAgency>. ?v1 <http://dbpedia.org/ontology/leader> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?leader ?organization WHERE {
  ?person rdfs:label ""Carlos Franco Iribarnegaray""@en .
  ?person dbo:positionHeld ?role .
  ?role dbo:department ?organization .
  ?organization a dbo:GovernmentAgency ;
                dbo:participatedIn dbr:Rif_War .
  OPTIONAL { ?role dbo:leader ?leader . }
}
```",3,5,4,2,2,3,3,71,0,0,1,0,0.0,0
865,0,train,Give me the native of British Raj.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/British_Raj> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?native 
WHERE {
  dbr:British_Raj dbo:native dbr:?native .
}
```",1,1,2,1,1,3,3,71,0,0,1898,0,0.0,0
382,1,train,Give me the landmark at elevation of 100.,"SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/elevation> ""100""^^<http://www.w3.org/2001/XMLSchema#integer> . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?landmark ?landmarkLabel WHERE {
  ?landmark a dbo:Lighthouse .
  ?landmark dbo:elevation ""100""^^xsd:decimal .
  SERVICE wikibase:label { bd:serviceParam wikibase:language ""[AUTO_LANGUAGE],en"". }
}
```",1,1,2,1,1,3,2,20,0,0,727,0,0.0,0
573,31,train,"Give me the person decedent at the administration, that is a region, of the real name of Charlie Baker (Australian footballer) and person decedent at Quincy, Massachusetts.","SELECT ?result WHERE { ?v0 <http://dbpedia.org/property/governor> ?v1 . ?result <http://dbpedia.org/ontology/deathPlace> <http://dbpedia.org/resource/Quincy,_Massachusetts> . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Region>. <http://dbpedia.org/resource/Charlie_Baker_(Australian_footballer)> <http://xmlns.com/foaf/0.1/name> ?v1 . ?result <http://dbpedia.org/ontology/deathPlace> ?v0 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT DISTINCT ?person WHERE {
  # Find the real name of Charlie Baker (Australian footballer)
  ?charlieBaker a dbo:AustralianFootballer ;
                foaf:name ""Charlie Baker"" ;
                dbp:birthName ?realName .

  # Get the administrative region associated with this real name
  ?region dbo:administrativeRegionFor ?realName .

  # Find persons who are decedents in both the identified region and Quincy, Massachusetts
  ?person dbo:deathPlace ?place .
  
  FILTER EXISTS {
    ?place dbr:Quincy,_Massachusetts .
  }
  
  FILTER EXISTS {
    ?placeSameRegion a dbo:AdministrativeRegion ;
                     rdfs:label ?regionLabel .
    FILTER(?regionLabel = ?region)
  }
}
```",4,5,5,3,2,3,3,71,0,0,4,0,0.0,0
715,16,train,"Give me the force of the mayor, that is an office holder and a politician and a president, of 1933 Spanish general election.",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/commander> ?v1 . <http://dbpedia.org/resource/1933_Spanish_general_election> <http://dbpedia.org/property/leader> ?v1 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/President>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?person ?mayorRole ?presidentRole WHERE {
  ?person a dbo:Politician ;
          foaf:name ""Niceto Alcalá-Zamora""@en .
  
  OPTIONAL { 
    ?person dbo:officeHolderOf dbr:Municipality_of_Madrid ; # Assuming he was mayor of Madrid
            dbo:positionHeld ?mayorRole .
  }
  
  OPTIONAL {
    ?person dbo:presidentOf dbr:Spain ;
            dbo:positionHeld ?presidentRole .
  }

  FILTER (YEAR(?presidentRole) = 1933 || YEAR(?mayorRole) = 1933)
}
```",2,5,3,2,1,3,3,71,0,0,1,0,0.0,0
645,36,train,"Give me the commander in Battle of Jarama and leader of the office, that is a government agency and an organisation, of the native of Restoration (Spain).",SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/GovernmentAgency>. ?v0 <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Restoration_(Spain)> . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?v1 <http://dbpedia.org/ontology/leader> ?result . <http://dbpedia.org/resource/Battle_of_Jarama> <http://dbpedia.org/ontology/commander> ?result . ?v0 <http://dbpedia.org/property/office> ?v1 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?commander ?officeLeader WHERE {
    # Find Francisco Franco as a commander in the Battle of Jarama
    ?battle dbo:commander ?commander .
    ?battle rdfs:label ""Battle of Jarama""@en .

    # Ensure the commander is Francisco Franco
    ?commander foaf:name ""Francisco Franco"" ;
               dbo:nationality dbr:Spain .

    # Find his leadership role in a government agency or organization
    OPTIONAL {
        ?officeLeader dbo:leader ?commander .
        ?officeLeader rdf:type dbo:GovernmentAgency ; 
                      dbo:country dbr:Spain .
    }
}
```",4,6,5,3,2,3,3,71,0,0,2,0,0.0,0
935,11,train,Give me the headquarter of Provincial Assembly of Balochistan and death place of the awardee of Sitara-i-Imtiaz.,SELECT ?result WHERE { <http://dbpedia.org/resource/Provincial_Assembly_of_Balochistan> <http://dbpedia.org/ontology/location> ?result . ?v2 <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/Sitara-i-Imtiaz> . ?v2 <http://dbpedia.org/ontology/deathPlace> ?result . },"```sparql
# Query 1: Headquarter of Provincial Assembly of Balochistan
SELECT ?headquarters WHERE {
  wd:Q123456 rdfs:label ""Provincial Assembly of Balochistan""@en .
  OPTIONAL { wd:Q123456 dbo:location ?headquarters . }
}

# Query 2: Death place of awardees of Sitara-i-Imtiaz
SELECT DISTINCT ?person ?deathPlace WHERE {
  ?award wdt:P31/wdt:P279* wd:Q123457 ; # Sitara-i-Imtiaz award
         wdt:P921 ?person . # recipient of the award
  OPTIONAL { ?person dbo:deathPlace ?deathPlace . }
}
```

Note: `wd:Q123456` and `wd:Q123457` are placeholders for the actual DBpedia resource identifiers for ""Provincial Assembly of Balochistan"" and ""Sitara-i-Imtiaz,"" respectively. These should be replaced with the correct identifiers from DBpedia.",3,3,4,2,2,3,2,20,0,0,1,0,0.0,0
433,21,train,"Give me the professional in Musician and associated musical artist of the person born, that is a musical artist and an artist, as Paul Laurence Dunbar Chambers Jr..","SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?v1 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?result <http://dbpedia.org/property/occupation> ""Musician""@en . ?v1 <http://dbpedia.org/property/birthName> ""Paul Laurence Dunbar Chambers Jr.""@en . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?associatedArtist WHERE {
  # Identify Paul Chambers as a musician
  dbr:Paul_Chambers_(musician) dbo:profession dbr:Musician .
  
  # Find associated musicians
  dbr:Paul_Chambers_(musician) dbo:associatedMusicalArtist ?associatedArtist .

  # Ensure the associated artist is also identified as an artist and a musician
  ?associatedArtist rdf:type dbo:Musician .
  OPTIONAL { ?associatedArtist rdf:type dbo:Artist . }
}
```",3,5,4,2,2,3,3,71,0,0,15,0,0.0,0
508,12,train,"Give me the birthplace of the commander, that is Saudi, in Central Plains War and birthplace of Ma Hongkui.",SELECT ?result WHERE { <http://dbpedia.org/resource/Ma_Hongkui> <http://dbpedia.org/ontology/birthPlace> ?result . ?v0 <http://dbpedia.org/ontology/birthPlace> ?result . ?v0 <http://dbpedia.org/ontology/nationality> <http://dbpedia.org/resource/Saudi_Arabia>. <http://dbpedia.org/resource/Central_Plains_War> <http://dbpedia.org/ontology/commander> ?v0 . },"```sparql
SELECT ?birthPlaceCommander ?birthPlaceMaHongkui WHERE {
  # Assuming Ibn Saud is the Saudi commander referred to
  dbpedia:Ibn_Saud dbo:birthPlace ?birthPlaceCommander .
  
  # Ma Hongkui's birthplace
  dbpedia:Ma_Hongkui dbo:birthPlace ?birthPlaceMaHongkui .
}
```",3,4,4,2,2,3,2,20,0,0,3,0,0.0,0
917,20,train,Give me the parent of Albert Kamehameha and child of the father of Keʻelikōlani.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Albert_Kamehameha> . ?result <http://dbpedia.org/ontology/parent> ?v1 . <http://dbpedia.org/resource/Keʻelikōlani> <http://dbpedia.org/property/father> ?v1 . },"```sparql
# Step 1: Find Albert Kamehameha's parent
SELECT ?parent WHERE {
    ?albert dbo:parent ?parent .
    FILTER (str(?albert) = ""Albert Kamehameha"")
}

# Step 2: Find the father of Keʻelikōlani
SELECT ?father WHERE {
    ?keeliko lani dbo:parent ?father .
    FILTER (str(?keeliko_lani) = ""Keʻelikōlani"")
}

# Step 3: Find a person who is both the child of the father from step 2 and matches the parent from step 1
SELECT DISTINCT ?person WHERE {
    # Get Albert Kamehameha's parent
    ?albert dbo:parent ?parent .
    FILTER (str(?albert) = ""Albert Kamehameha"")

    # Get Keʻelikōlani's father
    ?keeliko_lani dbo:parent ?father .
    FILTER (str(?keeliko_lani) = ""Keʻelikōlani"")

    # Find the person who is both a child of Keʻelikōlani's father and matches Albert Kamehameha's parent
    ?person dbo:child ?father .
    FILTER (?parent = ?person)
}
```",3,3,4,2,2,3,3,71,0,0,1,0,0.0,0
554,7,train,Give me the leader of the administration of Francisco da Costa Gomes.,SELECT ?result WHERE { ?v1 <http://dbpedia.org/property/leader> ?result . ?v1 <http://dbpedia.org/property/leader> <http://dbpedia.org/resource/Francisco_da_Costa_Gomes> . },"```sparql
SELECT ?primeMinister WHERE {
  ?presidency dbo:president dbr:Francisco_da_Costa_Gomes .
  ?presidency dbo:startDate ?start .
  ?presidency dbo:endDate ?end .
  
  ?government dbo:headOfState ?presidency ;
              dbo:startDate ?govStart ;
              dbo:endDate ?govEnd .

  ?primeMinister dbo:position ""Prime Minister of Portugal"" ;
                 dbo:country dbr:Portugal ;
                 dbo:termStartDate ?pmStart ;
                 dbo:termEndDate ?pmEnd .
  
  FILTER (?start <= ?pmStart && ?end >= ?pmEnd)
}
```",2,2,3,2,1,3,2,20,0,0,4,0,0.0,0
715,5,train,"Who is the mayor, that is an office holder and a politician and a president, of 1933 Spanish general election?",SELECT ?result WHERE { ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/President>. ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. <http://dbpedia.org/resource/1933_Spanish_general_election> <http://dbpedia.org/property/leader> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?person ?name WHERE {
  ?person a dbo:Politician ;
          dbo:officeHolderOf dbr:1933_Spanish_general_election ;
          dbo:positionTitle ?title .
  
  OPTIONAL { ?person dbo:mayorOf ?city . }
  OPTIONAL { ?person dbo:presidentOf dbr:Spain . }

  FILTER (?title IN (""Mayor"", ""President"") || EXISTS { ?person dbo:primeMinisterOf dbr:Spain })
  
  ?person foaf:name ?name .
}
ORDER BY ?name
```",1,4,2,1,1,3,3,71,0,0,1,0,0.0,0
978,1,train,Give me the band member of Chicane (musician).,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/associatedMusicalArtist> <http://dbpedia.org/resource/Chicane_(musician)> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?member WHERE {
  VALUES ?chicane { dbr:Chicane_(musician) }
  ?bandMember dbo:associatedBand ?chicane .
  ?bandMember a dbo:MusicalArtist .
  FILTER NOT EXISTS { ?bandMember dbo:alias ?alias . } # To avoid aliases
}
```",1,1,2,1,1,3,2,20,0,0,2,0,0.0,0
124,28,train,"Give me the military force of Battle of Tamai and military force of Battle of Atbara and commander in the war, that is a societal event and a military conflict, of A Field Battery, Royal Australian Artillery.","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/battle> <http://dbpedia.org/resource/Battle_of_Atbara> . ?result <http://dbpedia.org/ontology/battle> <http://dbpedia.org/resource/Battle_of_Tamai> . <http://dbpedia.org/resource/A_Field_Battery,_Royal_Australian_Artillery> <http://dbpedia.org/ontology/battle> ?v1 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?v1 <http://dbpedia.org/ontology/commander> ?result . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?battle ?forces1 ?forces2 ?commander1 ?commander2 ?war ?artilleryEvent
WHERE {
  # Battle of Tamai
  VALUES ?tamai { dbr:Battle_of_Tamai }
  
  ?tamai dbo:participatedIn ?angloEgyptianWar .
  ?tamai dbo:opposingMilitaryForce ?forces1, ?forces2 .
  OPTIONAL { ?forces1 dbo:commander ?commander1 . }
  OPTIONAL { ?forces2 dbo:commander ?commander2 . }

  # Battle of Atbara
  VALUES ?atbara { dbr:Battle_of_Atbara }
  
  ?atbara dbo:participatedIn ?angloEgyptianWar .
  ?atbara dbo:opposingMilitaryForce ?forces3, ?forces4 .
  OPTIONAL { ?forces3 dbo:commander ?commander3 . }
  OPTIONAL { ?forces4 dbo:commander ?commander4 . }

  # A Field Battery, Royal Australian Artillery
  VALUES ?artillery { dbr:A_Field_Battery,_Royal_Australian_Artillery }
  
  ?artillery dbo:participatedIn ?worldWarI .
  ?worldWarI dbo:name ?artilleryEvent .

}
```",4,6,5,2,3,3,3,71,0,0,1,0,0.0,0
573,36,train,"Give me the parent of the author, that is a politician and an office holder, of the work of John Quincy Adams and person decedent at Massachusetts.",SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v0 <http://dbpedia.org/property/author> ?v1 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v1 <http://dbpedia.org/ontology/parent> ?result . ?result <http://dbpedia.org/ontology/deathPlace> <http://dbpedia.org/resource/Massachusetts> . ?v0 <http://dbpedia.org/property/author> <http://dbpedia.org/resource/John_Quincy_Adams> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?parent WHERE {
  # John Quincy Adams as an author of a work
  ?work dbo:author dbr:John_Quincy_Adams .
  
  # His parent who is also a politician and office holder
  dbr:John_Quincy_Adams dbo:father ?parent .
  ?parent a dbo:Politician ;
          dbo:officeHolder ?office .

  # The person must be a decedent at Massachusetts
  ?parent dbp:deathPlace dbr:Massachusetts .
}
```",4,6,5,3,2,3,3,71,0,0,2,0,0.0,0
715,33,train,"Give me the commander in Rif War and commander in the force of the mayor, that is an office holder and a politician and a president, of 1933 Spanish general election.",SELECT ?result WHERE { ?v3 <http://dbpedia.org/ontology/commander> ?v0 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/President>. <http://dbpedia.org/resource/1933_Spanish_general_election> <http://dbpedia.org/property/leader> ?v0 . ?v3 <http://dbpedia.org/ontology/commander> ?result . <http://dbpedia.org/resource/Rif_War> <http://dbpedia.org/ontology/commander> ?result . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?commanderInRifWar ?president1933 WHERE {
    # Commander in Rif War
    ?person dbo:nationality dbr:Spain ;
            dbo:occupation dbr:Military_person ;
            rdfs:label ""Miguel Primo de Rivera""@en .
    
    BIND(?person AS ?commanderInRifWar)

    # President and politician of 1933 Spanish general election
    ?politician dbo:nationality dbr:Spain ;
               dbo:occupation dbr:Politician ;
               dbo:officeHolderOf dbr:President_of_Spain ;
               rdfs:label ""Niceto Alcalá-Zamora""@en .
    
    BIND(?politician AS ?president1933)
}
```",4,7,5,3,2,3,3,71,0,0,4,0,0.0,0
212,3,train,Give me the professional in .,"SELECT ?result WHERE { ?result <http://dbpedia.org/property/occupation> """"@en . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?person ?name WHERE {
  ?person a dbo:Doctor .
  ?person foaf:name ?name .
}
```

This query is hypothetical and assumes we are looking for doctors. It selects individuals who have the occupation of ""Doctor"" and retrieves their names.",1,1,2,1,1,2,2,9,0,0,39640,0,0.0,0
715,15,train,"Give me the force, that is a military conflict, of the native of Morocco.",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/commander> ?v1 . ?v1 <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Morocco> . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?conflict WHERE {
  ?person dbo:nationality dbr:Morocco .
  ?person rdfs:label ""Moulay Ismail""@en .
  ?person dbo:participatedInMilitaryConflicts ?conflict .
}
```",2,3,3,2,1,3,3,71,0,0,15,0,0.0,0
129,15,train,Give me the associated musical artist of Saba (rapper) and professional in the mayor of 1999 West Dunbartonshire Council election.,SELECT ?result WHERE { <http://dbpedia.org/resource/Saba_(rapper)> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . <http://dbpedia.org/resource/1999_West_Dunbartonshire_Council_election> <http://dbpedia.org/property/leader> ?v1 . ?result <http://dbpedia.org/property/occupation> ?v1 . },"```sparql
# Query to find the associated musical artist of Saba (rapper)
SELECT ?artist WHERE {
  wd:Q5066887 wdt:P106 wd:Q33999. # Saba is a musician
  wd:Q5066887 wdt:P463 ?collaboration. # Find collaborations or influences
  ?collaboration wdt:P175 ?artist. # The artist involved in the collaboration
}

UNION

# Query to find professionals involved in the 1999 West Dunbartonshire Council election
SELECT ?person WHERE {
  wd:Q1234567 wdt:P361* wd:Q7890123. # Assuming Q1234567 is the event of the election and Q7890123 is a related entity
  ?person wdt:P106 ?occupation. # The person's occupation or role
}

# Combine results to find any common individuals between the two queries
SELECT DISTINCT ?artist WHERE {
  { 
    wd:Q5066887 wdt:P106 wd:Q33999.
    wd:Q5066887 wdt:P463 ?collaboration.
    ?collaboration wdt:P175 ?artist.
  }
  
  UNION
  
  {
    wd:Q1234567 wdt:P361* wd:Q7890123.
    ?person wdt:P106 ?occupation.
    FILTER(?artist = ?person)
  }
}
```

Note: The placeholders `wd:Q1234567` and `wd:Q7890123` need to be replaced with the actual DBpedia identifiers for the 1999 West Dunbartonshire Council election and related entities.",3,3,4,2,2,2,3,28,0,0,7,0,0.0,0
606,12,train,Give me the birthplace of the alumnus of University of Pennsylvania and figure known as Barb City.,"SELECT ?result WHERE { ?result <http://dbpedia.org/property/nickname> ""Barb City""@en . ?v0 <http://dbpedia.org/ontology/almaMater> <http://dbpedia.org/resource/University_of_Pennsylvania> . ?v0 <http://dbpedia.org/ontology/birthPlace> ?result . }","```sparql
SELECT ?birthPlace WHERE {
  ?person foaf:name ""Barb City""@en .
  ?person dbo:almaMater dbr:University_of_Pennsylvania .
  ?person dbp:birthPlace ?birthPlace .
}
```",3,3,4,2,2,3,2,20,0,0,1,0,0.0,0
267,2,train,Who is the manager of 2020–21 Tractor S.C. season?,SELECT ?result WHERE { <http://dbpedia.org/resource/2020–21_Tractor_S.C._season> <http://dbpedia.org/ontology/manager> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?manager WHERE {
  ?team a dbo:FootballClub ;
        dbo:season ?season .
  
  FILTER (
    str(?team) = ""Tractor_S.C."" &&
    ?season = ""2020–21""
  )
  
  OPTIONAL { 
    ?team dbo:manager ?manager .
  }
}
```",1,1,2,1,1,3,2,20,0,0,4,0,0.0,0
933,23,train,"Give me the band of the band of the band, that is an artist and a musical artist, of The Ramong Sound.",SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. ?v1 <http://dbpedia.org/ontology/associatedMusicalArtist> ?v2 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?v2 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . <http://dbpedia.org/resource/The_Ramong_Sound> <http://dbpedia.org/ontology/associatedMusicalArtist> ?v1 . },"```sparql
SELECT ?associatedBand WHERE {
  ?entity rdfs:label ""The Ramones""@en .
  ?entity dbo:band ?associatedBand .
  
  OPTIONAL { 
    ?associatedBand rdfs:label ?associatedLabel .
  }
  
  FILTER EXISTS {
    ?associatedBand a dbo:MusicalArtist .
  }

  OPTIONAL {
    ?associatedBand dbo:band ?secondLevelBand .
    
    FILTER EXISTS {
      ?secondLevelBand a dbo:MusicalArtist .
    }
    
    BIND(?secondLevelBand AS ?finalBand)
  }
  
  OPTIONAL {
    ?finalBand rdfs:label ?finalLabel .
  }

  FILTER (?finalBand != ?associatedBand) 
}
```",3,5,4,3,1,3,3,71,0,0,30,0,0.0,0
507,3,train,Give me the birth name of Anne V. Coates.,SELECT ?result WHERE { <http://dbpedia.org/resource/Anne_V._Coates> <http://dbpedia.org/property/birthName> ?result . },"```sparql
PREFIX foaf: <http://xmlns.com/foaf/0.1/>
PREFIX schema: <http://schema.org/>

SELECT ?birthName WHERE {
  ?person a foaf:Person ;
          foaf:name ""Anne V. Coates""@en .
  OPTIONAL { ?person schema:birthName ?birthName . }
}
```",1,1,2,1,1,3,3,71,0,0,1,0,0.0,0
976,25,train,Give me the office of Meral Akşener and office of the person born as Mehmet Naci Bostancı.,"SELECT ?result WHERE { ?v0 <http://dbpedia.org/property/office> ?result . <http://dbpedia.org/resource/Meral_Akşener> <http://dbpedia.org/property/office> ?result . ?v0 <http://dbpedia.org/property/birthName> ""Mehmet Naci Bostancı""@en . }","```sparql
SELECT ?person ?name ?officeLabel WHERE {
  # Query for Meral Akşener's office
  { 
    ?person rdfs:label ""Meral Akşener""@en .
    OPTIONAL { ?person dbo:office ?office . }
    SERVICE wikibase:label { bd:serviceParam wikibase:language ""[AUTO_LANGUAGE],en"". }
  } UNION
  # Query for Mehmet Naci Bostancı's office
  {
    ?person rdfs:label ""Mehmet Naci Bostancı""@en .
    OPTIONAL { ?person dbo:office ?office . }
    SERVICE wikibase:label { bd:serviceParam wikibase:language ""[AUTO_LANGUAGE],en"". }
  }
}
```",3,3,4,2,2,3,3,71,0,0,1,0,0.0,0
791,3,train,Give me the reference to Emperor Takakura.,"SELECT ?result WHERE { ?result <http://xmlns.com/foaf/0.1/name> ""Emperor Takakura""@en . }","```sparql
SELECT ?reference WHERE {
  ?subject rdfs:label ""Emperor Takakura""@en.
  OPTIONAL { ?subject dbo:wikiPageRedirects ?redirect. }
  BIND(IRI(CONCAT(""http://dbpedia.org/resource/"", REPLACE(LCASE(?subject), ""_"", "" ""))) AS ?reference)
}
```",1,1,2,1,1,3,3,71,0,0,1,0,0.0,0
579,11,train,"Give me the native of the residence, that is English and a settlement, of Alan Clyne and person born as Isobel Jane Miller Richard.","SELECT ?result WHERE { ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. ?result <http://dbpedia.org/ontology/birthPlace> ?v2 . ?v2 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/United_Kingdom>. ?result <http://dbpedia.org/property/birthName> ""Isobel Jane Miller Richard""@en . <http://dbpedia.org/resource/Alan_Clyne> <http://dbpedia.org/property/residence> ?v2 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT DISTINCT ?residence (GROUP_CONCAT(?personLabel; separator="", "") AS ?persons)
WHERE {
  # Find Alan Clyne's residence
  OPTIONAL { 
    ?alan a dbo:Person ;
          foaf:name ""Alan Clyne"" ;
          dbp:residence ?residence .
    ?alan rdfs:label ?alanLabel .
  }
  
  # Find Isobel Jane Miller Richard's residence
  OPTIONAL {
    ?isobel a dbo:Person ;
            foaf:name ""Isobel Jane Miller Richard"" ;
            dbp:residence ?residence .
    ?isobel rdfs:label ?isobelLabel .
  }

  # Ensure the residence is an English settlement
  ?residence a dbo:Settlement ;
             dbo:country dbr:United_Kingdom .

  # Collect labels for persons found
  OPTIONAL { ?alan rdfs:label ?personLabel . FILTER(lang(?personLabel) = ""en"") }
  OPTIONAL { ?isobel rdfs:label ?personLabel . FILTER(lang(?personLabel) = ""en"") }

  FILTER (?alan != ?isobel)
}
GROUP BY ?residence
HAVING (COUNT(DISTINCT ?alan) > 0 && COUNT(DISTINCT ?isobel) > 0)
```",3,5,4,2,2,3,2,20,0,0,1,0,0.0,0
373,1,train,"Give me the professional in Singer, songwriter.","SELECT ?result WHERE { ?result <http://dbpedia.org/property/occupation> ""Singer, songwriter""@en . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?person ?name WHERE {
  ?person dbo:occupation dbr:Singer .
  ?person dbo:occupation dbr:Songwriter .
  OPTIONAL { ?person foaf:name ?name . }
}
ORDER BY ?name
LIMIT 10
```",1,1,2,1,1,2,2,9,0,20,1543,0.0,0.0,0
865,3,train,Who is the person decedent at Patna?,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/deathPlace> <http://dbpedia.org/resource/Patna> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?person ?name WHERE {
  ?person dbo:deathPlace dbr:Patna .
  OPTIONAL { ?person rdfs:label ?name FILTER (lang(?name) = 'en') }
}
ORDER BY ?name
LIMIT 10
```",1,1,2,1,1,3,3,71,10,10,56,0.5,0.15151515151515152,0.23255813953488375
273,10,train,Give me the alumnus of the reference to Università degli Studi di Torino.,"SELECT ?result WHERE { ?v0 <http://xmlns.com/foaf/0.1/name> ""Università degli Studi di Torino""@en . ?result <http://dbpedia.org/ontology/almaMater> ?v0 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?alumnus WHERE {
  ?alumnus dbo:almaMater dbp:Universit%C3%A0_degli_Studi_di_Torino .
}
```",2,2,3,2,1,3,2,20,0,0,141,0,0.0,0
326,14,train,"Give me the person decedent at the award, that is a country, of the awardee of French Legion of Honor.","SELECT ?result WHERE { ?v2 <http://dbpedia.org/property/awards> ?v0 . ?result <http://dbpedia.org/ontology/deathPlace> ?v0 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. ?v2 <http://dbpedia.org/property/awards> ""French Legion of Honor""@en . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?awardee WHERE {
  # Identify the French Legion of Honor
  dbr:Légion_d'Honneur dbo:recipient ?awardee .
  
  # Filter awardees where the award is associated with a country
  OPTIONAL { 
    ?award dbo:country ?country .
    FILTER(?country != dbr:France) # Ensure it's another country, not France itself
  }
}
```",3,4,4,3,1,3,2,20,0,0,4699,0,0.0,0
892,1,train,Give me the landmark at elevation of 58.,"SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/elevation> ""58""^^<http://www.w3.org/2001/XMLSchema#integer> . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?landmark ?name WHERE {
    ?landmark a dbo:Landmark .
    ?landmark dbo:elevation ?elevation .
    FILTER (?elevation = ""58""^^xsd:decimal) .
    OPTIONAL { ?landmark rdfs:label ?name . FILTER (lang(?name) = 'en') }
}
ORDER BY ?name
```",1,1,2,1,1,3,3,71,0,0,258,0,0.0,0
36,4,train,Give me the birth year of Deanne Bray.,SELECT ?result WHERE { <http://dbpedia.org/resource/Deanne_Bray> <http://dbpedia.org/ontology/birthYear> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?birthYear WHERE {
  ?person a dbo:Actor ;
          foaf:name ""Deanne Bray""@en .
  OPTIONAL { 
    ?person dbo:birthDate ?birthDate .
    BIND(YEAR(?birthDate) AS ?birthYear)
  }
}
```",1,1,2,1,1,2,3,28,0,0,1,0,0.0,0
888,6,train,Give me the commander in Southern Ukraine campaign and awardee of Hero of Ukraine.,"SELECT ?result WHERE { ?result <http://dbpedia.org/property/awards> ""Hero of Ukraine""@en . <http://dbpedia.org/resource/Southern_Ukraine_campaign> <http://dbpedia.org/ontology/commander> ?result . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?person ?name WHERE {
  ?person a dbo:MilitaryPerson ;
          dbo:commanderOf ?campaign .
  ?campaign rdfs:label ""Southern Ukraine campaign""@en .
  
  OPTIONAL { 
    ?person dbo:honoraryTitle dbr:Hero_of_Ukraine .
  }
  
  FILTER (CONTAINS(LCASE(?campaign), ""southern ukraine""))
  FILTER EXISTS {
    ?person dbo:honoraryTitle dbr:Hero_of_Ukraine .
  }

  ?person rdfs:label ?name .
}
ORDER BY ?name
```",2,2,3,1,2,3,2,20,0,0,1,0,0.0,0
170,13,train,Give me the entity in the work of International Energy Agency and birth place of Era Ziganshina.,SELECT ?result WHERE { <http://dbpedia.org/resource/Era_Ziganshina> <http://dbpedia.org/ontology/birthPlace> ?result . ?result <http://dbpedia.org/ontology/country> ?v1 . ?v1 <http://dbpedia.org/property/author> <http://dbpedia.org/resource/International_Energy_Agency> . },"```sparql
# Query to get a notable entity from the International Energy Agency's work
SELECT ?entity WHERE {
  ?entity dbo:organizer dbr:International_Energy_Agency .
  FILTER(CONTAINS(LCASE(str(?entity)), ""world energy outlook""))
}

UNION

# Query to get the birthplace of Era Ziganshina
SELECT ?birthPlace WHERE {
  dbp:eraZiganshina dbo:birthPlace ?birthPlace .
}
```",3,3,4,2,2,2,3,28,0,0,1,0,0.0,0
5,5,train,Give me the award of Coro de la Pontificia Universidad Católica de Puerto Rico.,SELECT ?result WHERE { <http://dbpedia.org/resource/Coro_de_la_Pontificia_Universidad_Católica_de_Puerto_Rico> <http://dbpedia.org/property/awards> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?award WHERE {
  ?entity rdfs:label ""Coro de la Pontificia Universidad Católica de Puerto Rico""@en .
  OPTIONAL { ?entity dbo:awardsReceived ?award . }
}
```",1,1,2,1,1,3,2,20,0,0,7,0,0.0,0
200,5,train,Give me the reference to the name of Angelcorpse.,SELECT ?result WHERE { ?result <http://xmlns.com/foaf/0.1/name> ?v0 . <http://dbpedia.org/resource/Angelcorpse> <http://xmlns.com/foaf/0.1/name> ?v0 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?band WHERE {
  ?band a dbo:Band .
  ?band rdfs:label ""Angelcorpse""@en .
}
```",2,2,3,2,1,2,2,9,1,0,0,1.0,1.0,1.0
507,13,train,"Give me the director of the movie, that is a movie and a work, with Beryl Reid.",SELECT ?result WHERE { ?v1 <http://dbpedia.org/property/starring> <http://dbpedia.org/resource/Beryl_Reid> . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Film>. ?v1 <http://dbpedia.org/ontology/director> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?movie ?director WHERE {
  ?movie a dbo:Film .
  ?movie dbo:starring dbr:Beryl_Reid .
  OPTIONAL { ?movie dbo:director ?director . }
}
```",2,4,3,2,1,3,3,71,9,12,0,0.42857142857142855,1.0,0.6
955,11,train,Give me the band of the writer of Don't Forget Your Roots (album) and band of Johnny Rioux.,SELECT ?result WHERE { <http://dbpedia.org/resource/Don't_Forget_Your_Roots_(album)> <http://dbpedia.org/property/writer> ?v2 . ?result <http://dbpedia.org/ontology/bandMember> <http://dbpedia.org/resource/Johnny_Rioux> . ?result <http://dbpedia.org/ontology/bandMember> ?v2 . },"```sparql
# Query for the writer of ""Don't Forget Your Roots"" album and their band
SELECT ?artist ?band WHERE {
  ?album dcterms:title ""Don't Forget Your Roots"" .
  ?album dbo:creator ?artist .
  OPTIONAL { ?artist dbo:musicArtistBand ?band . }
}

UNION

# Query for Johnny Rioux's band
SELECT ?rioux ?band WHERE {
  ?rioux foaf:name ""Johnny Rioux""@en .
  OPTIONAL { ?rioux dbo:musicArtistBand ?band . }
}
```",3,3,4,2,2,3,2,20,0,0,1,0,0.0,0
465,27,train,"Give me the successor of the child, that is a royalty, of the parent of Charles Orlando, Dauphin of France.","SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/child> ?v2 . ?v2 <http://dbpedia.org/ontology/successor> ?result . <http://dbpedia.org/resource/Charles_Orlando,_Dauphin_of_France> <http://dbpedia.org/ontology/parent> ?v1 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. }","```sparql
SELECT ?successor WHERE {
  # Step 1: Identify Charles Orlando
  ?charlesOrlando dbo:title ""Dauphin of France""@en .
  
  # Step 2: Determine His Parent
  ?parent dbo:child ?charlesOrlando .

  # Step 3: Find a Child Who is Royalty
  ?royalChild dbo:parent ?parent ;
              rdf:type dbo:Monarch .

  # Step 4: Identify the Successor
  ?royalChild dbo:successor ?successor .
}
```",3,4,4,3,1,3,3,71,0,0,2,0,0.0,0
507,9,train,Give me the spouse of Anne V. Coates and director of Entertaining Mr Sloane (film).,SELECT ?result WHERE { <http://dbpedia.org/resource/Entertaining_Mr_Sloane_(film)> <http://dbpedia.org/ontology/director> ?result . ?result <http://dbpedia.org/ontology/spouse> <http://dbpedia.org/resource/Anne_V._Coates> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?spouse ?director WHERE {
  # Find Anne V. Coates' spouse
  OPTIONAL { 
    dbr:Anne_V._Coates dbo:spouse ?spouse .
  }
  
  # Find the director of Entertaining Mr Sloane
  OPTIONAL {
    dbr:Entertaining_Mr_Sloane dbo:director ?director .
  }

  # Ensure that the spouse and director are the same person, if possible
  FILTER (?spouse = ?director)
}
```",2,2,3,1,2,3,3,71,0,0,1,0,0.0,0
826,22,train,Give me the predecessor of the parent of Prince Friedrich of Hesse and by Rhine and spouse of Anna Magdalena Appel.,SELECT ?result WHERE { <http://dbpedia.org/resource/Prince_Friedrich_of_Hesse_and_by_Rhine> <http://dbpedia.org/ontology/parent> ?v1 . <http://dbpedia.org/resource/Anna_Magdalena_Appel> <http://dbpedia.org/ontology/spouse> ?result . ?result <http://dbpedia.org/ontology/successor> ?v1 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?parent ?predecessor WHERE {
  # Find the parent of Prince Friedrich of Hesse and by Rhine
  VALUES ?prince { dbr:Friedrich_of_Hesse_and_by_Rhine }
  
  ?prince dbo:father ?parent .
  
  OPTIONAL {
    # Assuming predecessor refers to a title or position, we look for any predecessor in titles
    ?parent dbo:title ?title .
    ?predecessor dbo:title ?title .
    FILTER(?parent != ?predecessor)
  }
}
```",3,3,4,2,2,3,3,71,0,0,1,0,0.0,0
926,38,train,"Give me the child of the father, that is a royalty, of Mustafa III and successor of the child of Ahmed III.",SELECT ?result WHERE { ?v3 <http://dbpedia.org/ontology/successor> ?result . <http://dbpedia.org/resource/Mustafa_III> <http://dbpedia.org/property/father> ?v0 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v3 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Ahmed_III> . ?v0 <http://dbpedia.org/ontology/child> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?successor WHERE {
  # Mustafa III's father is Ahmed III
  dbr:Mustafa_III dbo:father dbr:Ahmed_III .
  
  # Child of Ahmed III who succeeded him is Mahmud I
  dbr:Ahmed_III dbo:child dbr:Mahmud_I .
  dbr:Mahmud_I dbo:succeededBy ?successor1 .

  # Mustafa III's child who succeeded Abdul Hamid I (successor of Mahmud I) is Selim III
  dbr:Mustafa_III dbo:child ?mustafaChild .
  ?mustafaChild dbo:succeededBy dbr:Abdul_Hamid_I .
  
  FILTER(?successor1 = dbr:Abdul_Hamid_I)
  FILTER(?mustafaChild = ?successor)
}
```",4,5,5,2,2,3,3,71,0,0,1,0,0.0,0
365,6,train,Give me the person born as Symon Vasylyovych Petliura and spouse of Olha Petliura.,"SELECT ?result WHERE { ?result <http://dbpedia.org/property/birthName> ""Symon Vasylyovych Petliura""@en . <http://dbpedia.org/resource/Olha_Petliura> <http://dbpedia.org/ontology/spouse> ?result . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?person ?spouseName WHERE {
  ?person dbo:birthName ""Symon Vasylyovych Petliura""@uk .
  ?person dbo:spouse ?spouse .
  ?spouse rdfs:label ?spouseName .
  FILTER (CONTAINS(LCASE(?spouseName), ""olha petliura""))
}
```",2,2,3,1,2,3,2,20,0,0,1,0,0.0,0
273,8,train,Give me the parent of the alumnus of University of Turin.,SELECT ?result WHERE { ?v0 <http://dbpedia.org/ontology/parent> ?result . ?v0 <http://dbpedia.org/ontology/almaMater> <http://dbpedia.org/resource/University_of_Turin> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT ?alumnus ?parent WHERE {
  ?alumnus dbo:almaMater dbr:University_of_Turin .
  OPTIONAL { ?alumnus foaf:parent ?parent . }
}
```",2,2,3,2,1,3,2,20,0,141,2,0.0,0.0,0
281,6,train,Give me the commander in New Guinea campaign and awardee of Medal bar.,SELECT ?result WHERE { <http://dbpedia.org/resource/New_Guinea_campaign> <http://dbpedia.org/ontology/commander> ?result . ?result <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/Medal_bar> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?commander ?medal WHERE {
  ?commander dbo:occupation dbr:Military_person ;
            dbo:award dbr:Medal_of_Honor ;
            dbo:awardedBy dbr:United_States .
  
  OPTIONAL { 
    ?commander dbo:award dbr:Medal_of_Honor_bar .
  }
  
  FILTER EXISTS {
    ?campaign dbo:location dbr:New_Guinea ;
              dbo:participatedIn ?commander .
  }

  ?medal dbo:recipient ?commander .
}
```",2,2,3,1,2,2,3,28,0,0,1,0,0.0,0
41,1,train,Give me the party of Declan Costello.,SELECT ?result WHERE { <http://dbpedia.org/resource/Declan_Costello> <http://dbpedia.org/ontology/party> ?result . },"```sparql
PREFIX dbp: <http://dbpedia.org/property/>
PREFIX dbo: <http://dbpedia.org/ontology/>

SELECT ?person ?partyName WHERE {
  ?person a dbo:Politician ;
          foaf:name ""Declan Costello""@en .
  OPTIONAL { ?person dbp:party ?party . }
  OPTIONAL { ?party rdfs:label ?partyName FILTER (lang(?partyName) = 'en') . }
}
```",1,1,2,1,1,2,3,28,0,2,1,0.0,0.0,0
554,2,train,Who is the party member of Independent politician?,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/party> <http://dbpedia.org/resource/Independent_politician> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?person ?partyLabel WHERE {
  ?person a dbo:IndependentPolitician .
  
  OPTIONAL { 
    ?person dbo:party ?party .
    ?party rdfs:label ?partyLabel .
  }
  
  FILTER (
    !bound(?party) || 
    (bound(?party) && ?partyLabel = ""independent"")
  )
}
ORDER BY ?person
```",1,1,2,1,1,3,2,20,0,0,2968,0,0.0,0
926,16,train,Give me the child of the spouse of Şermi Kadın.,SELECT ?result WHERE { ?v0 <http://dbpedia.org/ontology/spouse> <http://dbpedia.org/resource/Şermi_Kadın> . ?result <http://dbpedia.org/property/father> ?v0 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?child WHERE {
  ?sibling dbo:parent dbr:Murad_III.
  ?sibling a dbo:Child.
  ?sibling rdfs:label ?childLabel.
  FILTER (LANG(?childLabel) = ""en"")
}
```",2,2,3,2,1,3,3,71,0,0,12,0,0.0,0
124,38,train,"Give me the military force of the force, that is a societal event and a military conflict, of Herbert Kitchener, 1st Earl Kitchener and military force of the war, that is an event and a military conflict and a societal event, of Frank Rhodes (British Army officer).","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/battle> ?v2 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. <http://dbpedia.org/resource/Frank_Rhodes_(British_Army_officer)> <http://dbpedia.org/ontology/battle> ?v3 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?result <http://dbpedia.org/ontology/battle> ?v3 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?v2 <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Herbert_Kitchener,_1st_Earl_Kitchener> . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?kitchenerForce ?rhodesForce WHERE {
  # Herbert Kitchener's military force (Second Boer War)
  OPTIONAL { 
    dbr:Herbert_Kitchener dbo:militaryConflict dbr:Second_Boer_War .
    dbr:Second_Boer_War a dbo:MilitaryConflict ;
                       dbo:socialEvent ?kitchenerForce .
  }

  # Frank Rhodes' military force (World War I)
  OPTIONAL { 
    dbr:Frank_Rhodes dbo:militaryConflict dbr:World_War_I .
    dbr:World_War_I a dbo:MilitaryConflict ;
                   dbo:socialEvent ?rhodesForce .
  }
}
```",4,9,5,2,2,3,3,71,0,0,1085,0,0.0,0
508,10,train,"Give me the commander, that is Saudi, in the war, that is a military conflict and a societal event, of Hu Yukun.",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/nationality> <http://dbpedia.org/resource/Saudi_Arabia>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. <http://dbpedia.org/resource/Hu_Yukun> <http://dbpedia.org/ontology/battle> ?v0 . ?v0 <http://dbpedia.org/ontology/commander> ?result . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?commander WHERE {
  ?commander dbo:nationality dbr:Saudi_Arabia .
  ?commander dbo:occupation dbr:Military_officer .
  ?commander rdfs:label ""Faisal bin Abdulaziz Al Saud""@en .
  OPTIONAL { ?commander dbo:wikiPageDisambiguates ?disambiguation . }
}
```",2,5,3,2,1,3,2,20,0,0,1,0,0.0,0
573,18,train,"Give me the person decedent at Massachusetts and person decedent at Quincy, Massachusetts and parent of John Quincy Adams.","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/deathPlace> <http://dbpedia.org/resource/Quincy,_Massachusetts> . <http://dbpedia.org/resource/John_Quincy_Adams> <http://dbpedia.org/ontology/parent> ?result . ?result <http://dbpedia.org/ontology/deathPlace> <http://dbpedia.org/resource/Massachusetts> . }","```sparql
# Query for person who died in Massachusetts
SELECT ?person ?name WHERE {
  ?person dbo:deathPlace dbr:Massachusetts .
  ?person rdfs:label ?name .
  FILTER(LANG(?name) = 'en')
} LIMIT 1

UNION

# Query for person who died in Quincy, Massachusetts
SELECT ?person ?name WHERE {
  ?person dbo:deathPlace dbr:Quincy,_Massachusetts .
  ?person rdfs:label ?name .
  FILTER(LANG(?name) = 'en')
} LIMIT 1

UNION

# Query for parent of John Quincy Adams
SELECT ?parent ?parentName WHERE {
  dbp:John_Quincy_Adams dbo:parent ?parent .
  ?parent rdfs:label ?parentName .
  FILTER(LANG(?parentName) = 'en')
}
```",3,3,4,1,3,3,3,71,0,0,2,0,0.0,0
18,6,train,Give me the parent of Liza Huber and professional in .,"SELECT ?result WHERE { ?result <http://dbpedia.org/property/occupation> """"@en . ?result <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Liza_Huber> . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?parentLabel ?occupationLabel
WHERE {
  ?person a dbo:Person ;
          foaf:name ""Liza Huber""@en .
  
  OPTIONAL { 
    ?person dbo:parent ?parent .
    ?parent rdfs:label ?parentLabel .
    FILTER(LANG(?parentLabel) = 'en')
  }
  
  OPTIONAL {
    ?person dbo:occupation ?occupation .
    ?occupation rdfs:label ?occupationLabel .
    FILTER(LANG(?occupationLabel) = 'en')
  }
}
```",2,2,3,1,2,2,3,28,0,0,1,0,0.0,0
465,39,train,"Give me the successor of the child, that is a royalty, of the parent of Charles Orlando, Dauphin of France and spouse of Archduchess Barbara of Austria.","SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/successor> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v0 <http://dbpedia.org/ontology/child> ?v1 . <http://dbpedia.org/resource/Charles_Orlando,_Dauphin_of_France> <http://dbpedia.org/ontology/parent> ?v0 . ?result <http://dbpedia.org/ontology/spouse> <http://dbpedia.org/resource/Archduchess_Barbara_of_Austria> . }","```sparql
# Step 1: Find Charles Orlando and his parent
SELECT ?parent WHERE {
  ?charlesOrlando dbo:spouse dbr:Charles_Orlando,_Dauphin_of_France .
  ?charlesOrlando dbo:childOf ?parent .
}

# Step 2: Identify the spouse of this parent (Archduchess Barbara)
SELECT ?archduchessBarbara WHERE {
  ?parent dbo:spouse ?archduchessBarbara .
  ?archduchessBarbara rdfs:label ""Barbara of Austria""@en .
}

# Step 3: Find their child who is royalty
SELECT ?royalChild WHERE {
  ?parent dbo:child ?royalChild .
  ?royalChild rdf:type dbo:Monarch .
}

# Step 4: Determine the successor of this royal child
SELECT ?successor WHERE {
  ?royalChild dbo:successor ?successor .
}
```",4,5,5,3,2,3,3,71,0,0,1,0,0.0,0
839,11,train,"Give me the band of the person born, that is a musical artist, as Kevin Richard Russell.","SELECT ?result WHERE { ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?v0 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v0 <http://dbpedia.org/property/birthName> ""Kevin Richard Russell""@en . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT ?band WHERE {
  ?person a dbo:MusicalArtist ;
          foaf:name ""Kevin Russell"" .
  OPTIONAL { ?person dbo:birthName ""Kevin Richard Russell"" . }
  ?person dbo:associatedBand ?band .
}
```",2,3,3,2,1,3,3,71,0,0,1,0,0.0,0
129,4,train,"Give me the actor, that is an organisation, of Dreamville Presents: Revenge.",SELECT ?result WHERE { ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. <http://dbpedia.org/resource/Dreamville_Presents:_Revenge> <http://dbpedia.org/property/starring> ?result . },"```sparql
SELECT ?organization WHERE {
  ?film dbo:title ""Dreamville Presents: Revenge""@en .
  ?film dbo:productionCompany ?organization .
  FILTER(isBlank(?organization))
}
```",1,2,2,1,1,2,3,28,0,0,1,0,0.0,0
18,18,train,"Give me the alumnus of the figure known, that is an educational institution, as Saints and parent of Liza Huber.","SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/EducationalInstitution>. ?v1 <http://dbpedia.org/property/nickname> ""Saints""@en . ?result <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Liza_Huber> . ?result <http://dbpedia.org/ontology/almaMater> ?v1 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?alumnus WHERE {
  ?person dbo:almaMater dbr:Saint_Mary%27s_College_(Notre_Dame,_Indiana) .
  ?person dbo:child dbr:Liza_Huber .
  BIND(?person AS ?alumnus)
}
```",3,4,4,2,2,2,3,28,0,0,1,0,0.0,0
124,32,train,"Give me the military force of the war, that is an event and a military conflict and a societal event, of Frank Rhodes (British Army officer) and commander in the war, that is a societal event and a military conflict, of A Field Battery, Royal Australian Artillery.","SELECT ?result WHERE { <http://dbpedia.org/resource/Frank_Rhodes_(British_Army_officer)> <http://dbpedia.org/ontology/battle> ?v3 . ?v1 <http://dbpedia.org/ontology/commander> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?result <http://dbpedia.org/ontology/battle> ?v3 . <http://dbpedia.org/resource/A_Field_Battery,_Royal_Australian_Artillery> <http://dbpedia.org/ontology/battle> ?v1 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?militaryForce WHERE {
  # Frank Rhodes' involvement in World War II
  dbr:Frank_Rhodes dbo:militaryConflict [
    a dbo:MilitaryConflict ;
    rdfs:label ""World War II""@en .
  ] .

  # A Field Battery, Royal Australian Artillery's involvement in World War II
  ?battery dbo:militaryConflict [
    a dbo:MilitaryConflict ;
    rdfs:label ""World War II""@en .
  ] .

  # The military force associated with both entities during World War II
  ?militaryForce dbo:participatedIn [
    a dbo:MilitaryConflict ;
    rdfs:label ""World War II""@en .
  ] .

  FILTER EXISTS {
    ?battery dbo:militaryUnitOf ?militaryForce .
  }
}
```",4,9,5,2,2,3,3,71,0,0,9,0,0.0,0
573,16,train,"Give me the residence, that is a settlement, of the professional, that is American, in Politician.","SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/nationality> <http://dbpedia.org/resource/United_States>. ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. ?v1 <http://dbpedia.org/property/residence> ?result . ?v1 <http://dbpedia.org/property/occupation> ""Politician""@en . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?politicianName ?residenceName WHERE {
  ?person a dbo:Politician ;
          dbo:nationality dbr:United_States ;
          foaf:name ?politicianName .
  
  ?person dbo:residence ?residence .
  ?residence a dbo:Settlement ;
             foaf:name ?residenceName .
}
```",2,4,3,2,1,3,3,71,0,1839,41,0.0,0.0,0
582,35,train,Give me the figure known as the nickname of Japan national football team and reference to the residence of Hirotaka Sugawara.,SELECT ?result WHERE { <http://dbpedia.org/resource/Hirotaka_Sugawara> <http://dbpedia.org/property/residence> ?v2 . ?result <http://dbpedia.org/property/nickname> ?v1 . ?result <http://xmlns.com/foaf/0.1/name> ?v2 . <http://dbpedia.org/resource/Japan_national_football_team> <http://dbpedia.org/property/nickname> ?v1 . },"```sparql
# Query to get the nickname of the Japan national football team
SELECT ?nickname WHERE {
  wd:Q123456 rdfs:label ""Japan national football team""@en .
  wd:Q123456 foaf:nick ?nickname .
} LIMIT 1

# Query to find the residence associated with Hirotaka Sugawara
SELECT ?residence WHERE {
  ?person schema:name ""Hirotaka Sugawara"" .
  ?person dbo:birthPlace ?residence .
}
```

Note: The exact DBpedia identifiers (like `wd:Q123456`) for the Japan national football team and Hirotaka Sugawara need to be verified or replaced with correct ones from DBpedia.",4,4,5,2,2,3,3,71,0,0,1,0,0.0,0
926,8,train,"Give me the father, that is a royalty, of Mustafa III.",SELECT ?result WHERE { <http://dbpedia.org/resource/Mustafa_III> <http://dbpedia.org/property/father> ?result . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?father WHERE {
  ?mustafa3 dbo:parent ?father .
  ?mustafa3 rdf:type dbr:Mustafa_III .
  ?father rdf:type dbo:Sovereign .
}
```",1,2,2,1,1,3,3,71,0,0,1,0,0.0,0
965,16,train,"Give me the child, that is a royalty, of the person born, that is a politician, on 1854-05-24.","SELECT ?result WHERE { ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v0 <http://dbpedia.org/ontology/birthDate> ""1854-05-24""^^<http://www.w3.org/2001/XMLSchema#date> . ?result <http://dbpedia.org/property/father> ?v0 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?child WHERE {
  ?person dbo:birthDate ""1854-05-24""^^xsd:date ;
          rdf:type dbo:Politician .
  
  ?person dbo:child ?child .

  OPTIONAL { 
    ?child dbo:title ?title .
    FILTER(CONTAINS(LCASE(str(?title)), ""king"") || CONTAINS(LCASE(str(?title)), ""queen""))
  }
}
```",2,4,3,2,1,3,3,71,0,0,2,0,0.0,0
129,1,train,Give me the associated musical artist of EarthGang.,SELECT ?result WHERE { <http://dbpedia.org/resource/EarthGang> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?artist WHERE {
  VALUES ?earthGang { dbr:EarthGang }
  ?association dbo:musicalArtist ?earthGang .
  ?association dbo:associatedMusicalArtist ?artist .
  FILTER(?artist != ?earthGang)
}
```",1,1,2,1,1,2,3,28,0,0,4,0,0.0,0
715,25,train,"Give me the leader of the office, that is a government agency and an organisation, of Carlos Franco Iribarnegaray and commander in Spanish Civil War.",SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?v1 <http://dbpedia.org/ontology/leader> ?result . <http://dbpedia.org/resource/Carlos_Franco_Iribarnegaray> <http://dbpedia.org/property/office> ?v1 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/GovernmentAgency>. <http://dbpedia.org/resource/Spanish_Civil_War> <http://dbpedia.org/ontology/commander> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?office ?leader WHERE {
  # Find offices or organizations related to Carlos Franco Iribarnegaray
  ?person a dbo:Person ;
          foaf:name ""Carlos Franco Iribarnegaray""@en .
  
  OPTIONAL { 
    ?person dbo:positionHeld ?office .
    ?office dbo:leader ?leader .
    
    # Filter for offices relevant to the Spanish Civil War period (1936-1939)
    FILTER (
      EXISTS {
        ?office dbo:date ""1936""^^xsd:gYear ;
                ^dbo:date ""1939""^^xsd:gYear
      }
    )
  }

  # Ensure the office is a government agency or organization
  FILTER (?office rdf:type/(dbo:GovernmentAgency|dbo:Organization))
}
```",3,5,4,2,2,3,3,71,0,0,1,0,0.0,0
465,36,train,"Give me the successor of Ercole II d'Este, Duke of Ferrara and successor of the child, that is a royalty, of the parent of Charles Orlando, Dauphin of France.","SELECT ?result WHERE { <http://dbpedia.org/resource/Ercole_II_d'Este,_Duke_of_Ferrara> <http://dbpedia.org/ontology/successor> ?result . ?v0 <http://dbpedia.org/ontology/child> ?v1 . ?v1 <http://dbpedia.org/ontology/successor> ?result . <http://dbpedia.org/resource/Charles_Orlando,_Dauphin_of_France> <http://dbpedia.org/ontology/parent> ?v0 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. }","```sparql
# Step 1: Find Ercole II d'Este's successor
SELECT ?successor WHERE {
  wd:Q123456 wdt:P39 wd:Q789012 . # Ercole II d'Este was Duke of Ferrara
  wd:Q789012 wdt:P46 ?successor .  # Successor as Duke of Ferrara
}

# Step 2: Find Charles Orlando's parent
SELECT ?parent WHERE {
  wd:Q987654 wdt:P22 ?parent .   # Charles Orlando, Dauphin of France
}

# Step 3: Identify a royal child of that parent
SELECT DISTINCT ?child WHERE {
  ?parent wdt:P40 ?child .
  ?child wdt:P31/wdt:P279* wd:Q5 . # Child is a human and royalty
}

# Step 4: Find the successor of that royal child
SELECT ?successor WHERE {
  ?royalChild wdt:P39 ?position . # Royal child held a position
  ?position wdt:P46 ?successor .  # Successor to that position
}
```

Note: Replace `wd:Q123456`, `wd:Q789012`, and `wd:Q987654` with the actual DBpedia IDs for Ercole II d'Este, Duke of Ferrara, and Charles Orlando, Dauphin of France respectively. The queries assume these entities are correctly identified in DBpedia.",4,5,5,3,2,3,3,71,0,0,1,0,0.0,0
216,22,train,"Give me the player in Igor Bišćan and team of the person born, that is a sports manager and a soccer manager and a soccer player, on 1983-12-20.","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/coach> ?v1 . ?v1 <http://dbpedia.org/ontology/birthDate> ""1983-12-20""^^<http://www.w3.org/2001/XMLSchema#date> . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerPlayer>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsManager>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerManager>. <http://dbpedia.org/resource/Igor_Bišćan> <http://dbpedia.org/ontology/team> ?result . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?person ?team WHERE {
  ?person a dbo:SoccerPlayer ;
          dbo:birthDate ""1983-12-20""^^xsd:date ;
          dbo:sportsManager true ;
          dbo:soccerManager true .
  
  ?person dbo:playedFor ?team .

  OPTIONAL { 
    ?bišćan dbr:Igor_Bišćan ;
             dbo:playedFor ?team .
  }
}
```",3,6,4,2,2,3,3,71,0,0,1,0,0.0,0
791,8,train,"Give me the child, that is a royalty, of Emperor Takakura.",SELECT ?result WHERE { ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?result <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Emperor_Takakura> . },"```sparql
SELECT ?child WHERE {
  ?emperor rdf:type dbo:Emperor ;
           foaf:name ""Takakura"" ;
           dbo:spouse ?spouse .
  
  ?emperor dbo:child ?child .

  OPTIONAL { 
    ?child rdf:type dbo:Emperor ; # Check if the child is also an emperor
           foaf:name ?name .
  }
}
```",1,2,2,1,1,3,3,71,0,0,3,0,0.0,0
965,15,train,Give me the spouse of the parent of Louise Mountbatten.,SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/spouse> ?result . <http://dbpedia.org/resource/Louise_Mountbatten> <http://dbpedia.org/ontology/parent> ?v1 . },"```sparql
SELECT ?spouse WHERE {
  ?louise dbo:parent ?parent .
  FILTER(?louise = dbpedia:Louise_Mountbatten)
  
  OPTIONAL { 
    ?parent dbo:spouse ?spouse .
  }
}
```",2,2,3,2,1,3,3,71,0,0,2,0,0.0,0
47,3,train,"Give me the commander, that is a politician, in Operation Green Hunt.",SELECT ?result WHERE { ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. <http://dbpedia.org/resource/Operation_Green_Hunt> <http://dbpedia.org/ontology/commander> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?politician ?name WHERE {
  ?operation dbo:wikiPageRedirects dbr:Operation_Green_Hunt .
  ?operation dbo:commander ?person .
  ?person a dbo:Politician ;
          foaf:name ?name .
}
```",1,2,2,1,1,3,3,71,0,0,104,0,0.0,0
926,39,train,"Give me the child of the father, that is a royalty, of the parent, that is a royalty, of Beyhan Sultan (daughter of Mustafa III) and successor of Mustafa III.",SELECT ?result WHERE { <http://dbpedia.org/resource/Mustafa_III> <http://dbpedia.org/ontology/successor> ?result . ?v0 <http://dbpedia.org/ontology/child> ?result . ?v2 <http://dbpedia.org/property/father> ?v0 . <http://dbpedia.org/resource/Beyhan_Sultan_(daughter_of_Mustafa_III)> <http://dbpedia.org/ontology/parent> ?v2 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. },"```sparql
SELECT ?child WHERE {
  wd:Q123456 wdt:P22 wd:Q789012 . # Beyhan Sultan's parent is Mustafa III
  wd:Q789012 wdt:P35 wd:Q987654 . # Mustafa III's successor is Abdul Hamid I
  wd:Q987654 wdt:P40 ?child .    # Abdul Hamid I's child who is royalty
  ?child wdt:P39 wd:Q1234567 .   # The child holds a royal title (Sultan)
}
```

Note: In the above SPARQL query, `wd:Q123456` represents Beyhan Sultan, `wd:Q789012` represents Mustafa III, and `wd:Q987654` represents Abdul Hamid I. The property `P22` is used for ""parent,"" `P35` for ""successor,"" `P40` for ""child,"" and `P39` for holding a royal title (Sultan). The actual QIDs should be replaced with the correct identifiers from DBpedia.",4,6,5,3,2,3,3,71,0,0,1,0,0.0,0
456,23,train,"Give me the spouse of the actor of the movie, that is a work and a television show, with Ross Newton.",SELECT ?result WHERE { ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/TelevisionShow>. ?v0 <http://dbpedia.org/ontology/spouse> ?result . ?v2 <http://dbpedia.org/property/starring> <http://dbpedia.org/resource/Ross_Newton> . ?v2 <http://dbpedia.org/property/starring> ?v0 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?actor ?spouse WHERE {
  ?movie a dbo:Film ;
         a dbo:TVSeries .
  ?movie dbo:starring dbr:Ross_Newton .
  ?movie dbo:starring ?actor .
  
  OPTIONAL { 
    ?actor dbo:spouse ?spouse .
  }
}
```",3,5,4,3,1,3,3,71,0,0,5,0,0.0,0
826,21,train,"Give me the spouse of the child of Johann Heinrich Appel and predecessor of Louis IV, Grand Duke of Hesse.","SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/spouse> ?result . ?result <http://dbpedia.org/ontology/successor> <http://dbpedia.org/resource/Louis_IV,_Grand_Duke_of_Hesse> . ?v1 <http://dbpedia.org/property/father> ""Johann Heinrich Appel""@en . }","```sparql
# Step 1: Find a notable child of Johann Heinrich Appel and their spouse
SELECT ?child ?spouse WHERE {
  wd:Q1234567 dbo:child ?child .
  ?child dbo:spouse ?spouse .
}

# Step 2: Find the predecessor of Louis IV, Grand Duke of Hesse
SELECT ?predecessor WHERE {
  wd:Q7890123 dbo:predecessor ?predecessor .
}
```

Note: Replace `wd:Q1234567` with the actual DBpedia ID for Johann Heinrich Appel and `wd:Q7890123` with the DBpedia ID for Louis IV, Grand Duke of Hesse. The exact IDs need to be looked up in DBpedia.",3,3,4,2,2,3,3,71,0,0,1,0,0.0,0
329,17,train,"Give me the entity in Northern Ireland and entity in the region, that is a country, of Western European Time.",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Northern_Ireland> . ?v1 <http://dbpedia.org/property/timeZone> <http://dbpedia.org/resource/Western_European_Time> . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. ?result <http://dbpedia.org/ontology/country> ?v1 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?entityInNorthernIreland ?regionCountry
WHERE {
  # Entity in Northern Ireland that is a country using Western European Time
  ?entityInNorthernIreland dbo:timeZone dbr:Western_European_Time ;
                          dbo:country dbr:Northern_Ireland .

  # Region that is a country and uses Western European Time
  ?regionCountry dbo:timeZone dbr:Western_European_Time ;
                 rdf:type dbo:Country .
}
```",3,4,4,2,2,2,3,28,0,10,531,0.0,0.0,0
170,0,train,Give me the entity in Russia.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Russia> . },"```sparql
SELECT DISTINCT ?entity WHERE {
  ?entity dbo:country dbr:Russia .
}
LIMIT 10
```",1,1,2,1,1,2,3,28,10,0,29917,1.0,0.00033414642296254217,0.0006680696128536594
773,28,train,Give me the spouse of the father of Charles the Fat and parent of Charles the Fat and parent of Carloman of Bavaria.,SELECT ?result WHERE { <http://dbpedia.org/resource/Charles_the_Fat> <http://dbpedia.org/ontology/parent> ?result . <http://dbpedia.org/resource/Charles_the_Fat> <http://dbpedia.org/property/father> ?v1 . ?result <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Carloman_of_Bavaria> . ?v1 <http://dbpedia.org/ontology/spouse> ?result . },"```sparql
SELECT ?spouse WHERE {
  ?charles rdf:type dbo:Person ;
           foaf:name ""Charles the Fat""@en .
  ?charles dbo:parent ?louisTheGerman .
  ?louisTheGerman foaf:name ""Louis the German""@en .
  ?louisTheGerman dbo:spouse ?spouse .
}
```",4,4,5,2,3,3,3,71,0,0,1,0,0.0,0
433,3,train,Give me the persona of Paul Chambers.,SELECT ?result WHERE { <http://dbpedia.org/resource/Paul_Chambers> <http://xmlns.com/foaf/0.1/givenName> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?name ?birthDate ?deathDate ?occupation ?notableWorks WHERE {
  VALUES ?person { dbr:Paul_Chambers_(bassist) }
  ?person rdfs:label ?name .
  OPTIONAL { ?person dbo:birthDate ?birthDate . }
  OPTIONAL { ?person dbo:deathDate ?deathDate . }
  OPTIONAL { ?person dbo:occupation ?occupation . }
  OPTIONAL {
    ?person dbo:notableWorks ?work .
    ?work rdfs:label ?notableWorks .
  }
}
```",1,1,2,1,1,3,3,71,0,0,1,0,0.0,0
465,0,train,"Give me the successor of Ercole II d'Este, Duke of Ferrara.","SELECT ?result WHERE { <http://dbpedia.org/resource/Ercole_II_d'Este,_Duke_of_Ferrara> <http://dbpedia.org/ontology/successor> ?result . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?successor WHERE {
  ?person dbo:title ""Duke of Ferrara""@en .
  ?person dbp:name ""Ercole II d'Este"" .
  OPTIONAL { ?person dbo:successor ?successor . }
}
```",1,1,2,1,1,3,3,71,0,0,1,0,0.0,0
582,7,train,"Give me the team, that is an organisation, of Hajime Moriyasu.",SELECT ?result WHERE { ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?result <http://dbpedia.org/ontology/coach> <http://dbpedia.org/resource/Hajime_Moriyasu> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?team WHERE {
  ?person a dbo:Person ;
          foaf:name ""Hajime Moriyasu""@en .
  
  OPTIONAL { ?person dbo:coach ?team . }
  OPTIONAL { ?person dbo:manager ?team . }

  FILTER EXISTS { ?team a dbo:Organization }
}
```",1,2,2,1,1,3,3,71,0,0,1,0,0.0,0
926,10,train,Give me the child of Ahmed III and father of Mahmud II.,SELECT ?result WHERE { <http://dbpedia.org/resource/Ahmed_III> <http://dbpedia.org/ontology/child> ?result . <http://dbpedia.org/resource/Mahmud_II> <http://dbpedia.org/property/father> ?result . },"```sparql
SELECT ?mustafaIII WHERE {
  ?ahmedIII dbo:child ?mustafaIII .
  FILTER(?ahmedIII = dbpedia:Ahmed_3rd)
  
  ?mahmudII dbo:parent ?mustafaIII .
  FILTER(?mahmudII = dbpedia:Mehmed_4th)
}
```",2,2,3,1,2,3,3,71,0,0,1,0,0.0,0
433,4,train,"Give me the person born, that is a musical artist and an artist, as Paul Laurence Dunbar Chambers Jr..","SELECT ?result WHERE { ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?result <http://dbpedia.org/property/birthName> ""Paul Laurence Dunbar Chambers Jr.""@en . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?person ?birthDate WHERE {
  ?person a dbo:MusicalArtist .
  ?person a dbo:Artist .
  ?person dbo:birthDate ?birthDate .
}
LIMIT 10
```",1,3,2,1,1,3,3,71,0,20,1,0.0,0.0,0
582,2,train,Give me the figure known as --10-19.,"SELECT ?result WHERE { ?result <http://dbpedia.org/property/nickname> ""--10-19""^^<http://www.w3.org/2001/XMLSchema#gMonthDay> . }","```sparql
SELECT ?person WHERE {
  ?person dbo:birthDate ""1882-11-19""^^xsd:date .
  ?person a dbo:Person .
}
```",1,1,2,1,1,3,3,71,0,10,1,0.0,0.0,0
645,12,train,Give me the military force of Spanish Civil War and leader of Ministry of the Army (Spain).,SELECT ?result WHERE { <http://dbpedia.org/resource/Ministry_of_the_Army_(Spain)> <http://dbpedia.org/ontology/leader> ?result . ?result <http://dbpedia.org/ontology/battle> <http://dbpedia.org/resource/Spanish_Civil_War> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?militaryForce ?leader WHERE {
  # Query for military forces involved in the Spanish Civil War
  ?event a dbo:MilitaryConflict ;
         rdfs:label ""Spanish Civil War""@en .
  
  OPTIONAL {
    ?event dbo:participatingMilitaryUnit ?militaryForce .
    FILTER(lang(?militaryForce) = 'en')
  }
  
  # Query for leader of the Ministry of the Army in Spain during the Spanish Civil War
  ?ministry a dbo:GovernmentMinistry ;
            rdfs:label ""Ministry of the Army (Spain)""@en ;
            dbo:country dbr:Spain .
  
  OPTIONAL {
    ?ministry dbo:head ?leader .
    FILTER(lang(?leader) = 'en')
  }
}
```",2,2,3,1,2,3,3,71,0,0,1,0,0.0,0
83,8,train,Give me the party of the governor of Dilma Rousseff.,SELECT ?result WHERE { ?v0 <http://dbpedia.org/ontology/party> ?result . <http://dbpedia.org/resource/Dilma_Rousseff> <http://dbpedia.org/property/governor> ?v0 . },"```sparql
SELECT ?governor ?partyLabel WHERE {
  ?dilma dbo:presidentOf dbr:Brazil .
  ?dilma foaf:name ""Dilma Rousseff""@en .

  OPTIONAL {
    ?pezao dbo:governorOf dbr:Rio_de_Janeiro_State .
    ?pezao foaf:name ""Luiz Fernando Pezão""@pt .
    ?pezao dbo:party ?party .
    ?party rdfs:label ?partyLabel .
    FILTER(LANG(?partyLabel) = 'en')
  }
}
```",2,2,3,2,1,3,2,20,0,0,2,0,0.0,0
987,36,train,"Give me the birth place of Dado Polumenta and entity in the region, that is a country, of the time zone, that is a sports event, in Canicosa de la Sierra.",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/country> ?v0 . <http://dbpedia.org/resource/Dado_Polumenta> <http://dbpedia.org/ontology/birthPlace> ?result . ?v0 <http://dbpedia.org/property/timeZone> ?v3 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsEvent>. <http://dbpedia.org/resource/Canicosa_de_la_Sierra> <http://dbpedia.org/ontology/timeZone> ?v3 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. },"```sparql
# Query to get the birth place of Dado Polumbo
SELECT ?birthPlace WHERE {
  dbpedia:en:Dado_Polumbo dbo:birthPlace ?birthPlace .
}

# Assuming we have obtained the birthPlace URI, let's say it is <http://dbpedia.org/resource/Some_City>

# Query to get the country of the birth place
SELECT ?country WHERE {
  <http://dbpedia.org/resource/Some_City> dbo:country ?country .
}

# Query to find the time zone for Canicosa de la Sierra
SELECT ?timeZone WHERE {
  dbpedia-es:Canicosa_de_la_Sierra dbo:timezone ?timeZone .
}

# Assuming we have obtained the timeZone URI, let's say it is <http://dbpedia.org/resource/Time_Zone>

# Query to find a sports event in that time zone
SELECT ?event WHERE {
  <http://dbpedia.org/resource/Time_Zone> dbo:sportsEvent ?event .
}
```",4,6,5,3,2,3,3,71,0,0,1,0,0.0,0
83,6,train,Give me the ruling party in Fortaleza and party of Alceu Collares.,SELECT ?result WHERE { <http://dbpedia.org/resource/Alceu_Collares> <http://dbpedia.org/ontology/party> ?result . <http://dbpedia.org/resource/Fortaleza> <http://dbpedia.org/property/leaderParty> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?rulingPartyInFortaleza ?partyOfAlceuCollares WHERE {
  # Find the ruling party in Fortaleza by identifying the current mayor and their political party
  ?mayor a dbo:Mayor ;
         dbo:city dbr:Fortaleza ;
         dbo:politicalAffiliation ?rulingPartyInFortaleza .

  # Find the political party of Alceu Collares
  ?alceuCollares a dbo:Person ;
                foaf:name ""Alceu Collares"" ;
                dbo:party ?partyOfAlceuCollares .
}
```",2,2,3,1,2,3,2,20,0,0,1,0,0.0,0
495,10,train,Give me the child of the parent of Princess Pauline of Württemberg (1810–1856).,SELECT ?result WHERE { <http://dbpedia.org/resource/Princess_Pauline_of_Württemberg_(1810–1856)> <http://dbpedia.org/ontology/parent> ?v0 . ?result <http://dbpedia.org/ontology/parent> ?v0 . },"```sparql
SELECT ?child WHERE {
  # Find the parent of Princess Pauline of Württemberg
  ?princess dbo:parent ?parent .
  
  FILTER(?princess = dbpedia:Pauline_of_W%C3%BCrttemberg)

  # Find the child(ren) of that parent
  ?parent dbo:child ?child .
}
```",2,2,3,2,1,3,2,20,0,0,4,0,0.0,0
976,4,train,"Who is the leader, that is a politician, of Grand National Assembly of Turkey?",SELECT ?result WHERE { ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. <http://dbpedia.org/resource/Grand_National_Assembly_of_Turkey> <http://dbpedia.org/ontology/leader> ?result . },"```sparql
SELECT ?person ?name WHERE {
  ?assembly dcterms:isPartOf <http://dbpedia.org/resource/Turkey> ;
            dbo:president ?person .
  ?person rdf:type dbo:Politician ;
          foaf:name ?name .
  FILTER (CONTAINS(LCASE(?assembly), ""grand national assembly of turkey""))
}
```",1,2,2,1,1,3,3,71,0,0,1,0,0.0,0
826,10,train,"Give me the predecessor of Louis IV, Grand Duke of Hesse and spouse of Anna Magdalena Appel.","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/successor> <http://dbpedia.org/resource/Louis_IV,_Grand_Duke_of_Hesse> . <http://dbpedia.org/resource/Anna_Magdalena_Appel> <http://dbpedia.org/ontology/spouse> ?result . }","```sparql
SELECT ?predecessorLabel WHERE {
  wd:Q1234567 wdt:P39 wd:Q7890123 . # Louis IV's predecessor (Louis III)
  SERVICE wikibase:label { bd:serviceParam wikibase:language ""[AUTO_LANGUAGE],en"". }
}

UNION

SELECT ?spouseLabel WHERE {
  wd:Q9876543 wdt:P26 wd:Q1234567 . # Anna Magdalena Bach's spouse (Johann Sebastian Bach)
  SERVICE wikibase:label { bd:serviceParam wikibase:language ""[AUTO_LANGUAGE],en"". }
}
```

Note: Replace `wd:Q1234567` with the actual DBpedia entity ID for Louis IV, Grand Duke of Hesse, and `wd:Q7890123` with the entity ID for Louis III. Similarly, replace `wd:Q9876543` with the entity ID for Anna Magdalena Bach and `wd:Q1234567` (if different) for Johann Sebastian Bach.",2,2,3,1,2,3,3,71,0,0,1,0,0.0,0
508,3,train,"Give me the commander, that is a politician, in 1939–1940 Winter Offensive.",SELECT ?result WHERE { ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. <http://dbpedia.org/resource/1939–1940_Winter_Offensive> <http://dbpedia.org/ontology/commander> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?commander WHERE {
  ?event dbo:wikiPageRedirects dbr:Winter_War .
  ?event dbo:participatedInMilitaryConflict ?conflict .
  ?conflict dbo:dateStart ?dateStart .
  FILTER (YEAR(?dateStart) = 1939 || YEAR(?dateStart) = 1940)
  
  ?commander dbo:commanded ?unit .
  ?unit dbo:participatedInMilitaryOperation ?operation .
  ?operation dbo:wikiPageRedirects ?event .

  ?commander dbo:occupation dbr:Politician .
}
```",1,2,2,1,1,3,2,20,0,0,6,0,0.0,0
791,30,train,"Give me the spouse of Taira no Tokuko and father of the child, that is a royalty, of Emperor Takakura and predecessor of Emperor Antoku.",SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?result <http://dbpedia.org/ontology/successor> <http://dbpedia.org/resource/Emperor_Antoku> . ?result <http://dbpedia.org/ontology/spouse> <http://dbpedia.org/resource/Taira_no_Tokuko> . ?v1 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Emperor_Takakura> . ?v1 <http://dbpedia.org/property/father> ?result . },"```sparql
SELECT ?spouse WHERE {
  wd:Q1234567 wdt:P26 ?spouse .
  FILTER EXISTS { ?child wdt:P25 wd:Q1234567 . }
  FILTER EXISTS { ?child wdt:P31 wd:Q11111 . } # Q11111 is a placeholder for the concept of royalty or emperor
}
```

Note: In this query, `wd:Q1234567` should be replaced with the actual DBpedia identifier for Taira no Tokuko. The placeholders like `wd:Q11111` need to be replaced with the correct identifiers for concepts such as ""royalty"" or ""emperor.""",4,5,5,2,3,3,3,71,0,0,1,0,0.0,0
976,12,train,Give me the office of Meral Akşener and office of Naci Bostancı.,SELECT ?result WHERE { <http://dbpedia.org/resource/Meral_Akşener> <http://dbpedia.org/property/office> ?result . <http://dbpedia.org/resource/Naci_Bostancı> <http://dbpedia.org/property/office> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>

SELECT ?person ?officeLabel WHERE {
  VALUES ?person { 
    dbr:Meral_Akşener 
    dbr:Naci_Bostancı 
  }
  
  ?person dbo:office ?office .
  SERVICE wikibase:label { bd:serviceParam wikibase:language ""[AUTO_LANGUAGE],en"". }
}
```",2,2,3,1,2,3,3,71,0,0,1,0,0.0,0
83,12,train,Give me the party of the governor of Dilma Rousseff and ruling party in Fortaleza.,SELECT ?result WHERE { <http://dbpedia.org/resource/Fortaleza> <http://dbpedia.org/property/leaderParty> ?result . <http://dbpedia.org/resource/Dilma_Rousseff> <http://dbpedia.org/property/governor> ?v0 . ?v0 <http://dbpedia.org/ontology/party> ?result . },"```sparql
# Query to find the political party of Dilma Rousseff when she was governor
SELECT ?party WHERE {
  ?governor a dbo:Governor ;
            foaf:name ""Dilma Rousseff"" ;
            dbo:politicalParty ?party .
  FILTER EXISTS { 
    ?term dbo:startDate ?start ;
          dbo:endDate ?end ;
          dbo:officeHolder ?governor .
    FILTER (?start <= ""2006-01-01T00:00:00Z""^^xsd:dateTime && ?end >= ""2003-01-01T00:00:00Z""^^xsd:dateTime)
  }
}

# Query to find the ruling party in Fortaleza during Dilma Rousseff's governorship
SELECT DISTINCT ?party WHERE {
  ?mayor a dbo:Mayor ;
         dbo:city ?fortaleza .
  ?fortaleza foaf:name ""Fortaleza"" .
  ?term dbo:startDate ?start ;
        dbo:endDate ?end ;
        dbo:officeHolder ?mayor .
  FILTER (?start <= ""2006-01-01T00:00:00Z""^^xsd:dateTime && ?end >= ""2003-01-01T00:00:00Z""^^xsd:dateTime)
  ?mayor dbo:politicalParty ?party .
}
```",3,3,4,2,2,3,2,20,0,0,1,0,0.0,0
976,26,train,"Give me the office of the mayor, that is a politician and an office holder and Turkish, of the reference, that is an organisation and a political party and Turkish, to Millet İttifakı.","SELECT ?result WHERE { ?v0 <http://dbpedia.org/ontology/nationality> <http://dbpedia.org/resource/Turkey>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v2 <http://dbpedia.org/property/leader> ?v0 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/PoliticalParty>. ?v0 <http://dbpedia.org/property/office> ?result . ?v2 <http://xmlns.com/foaf/0.1/name> ""Millet İttifakı""@en . ?v2 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Turkey>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?mayor ?office WHERE {
  # Find Millet İttifakı as an organization and political party in Turkey
  dbr:Millet_İttifakı 
    a dbo:PoliticalParty ;
    dbo:country dbr:Türkiye .

  # Find mayors who are politicians, office holders, and Turkish
  ?mayor 
    a dbo:Mayor ;
    dbo:country dbr:Türkiye ;
    dbo:officeHolderOf ?office ;
    dbo:politicalAffiliation ?party .

  # Ensure the party is part of Millet İttifakı
  ?party dbo:memberPartyOf dbr:Millet_İttifakı .
}
```",3,9,4,3,1,3,3,71,0,0,3,0,0.0,0
715,31,train,"Give me the commander in the force, that is a military conflict, of the native of Morocco and commander in Spanish Civil War.",SELECT ?result WHERE { ?v0 <http://dbpedia.org/ontology/commander> ?result . ?v0 <http://dbpedia.org/ontology/commander> ?v1 . <http://dbpedia.org/resource/Spanish_Civil_War> <http://dbpedia.org/ontology/commander> ?result . ?v1 <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Morocco> . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?person WHERE {
  ?person dbo:nationality dbr:Morocco .
  ?person dbo:occupation dbr:Military_person .

  # Check for involvement in a military conflict involving Morocco
  ?conflict dbo:location dbr:Morocco .
  ?commanderRole dbo:agent ?person ;
                 dbo:subject ?conflict .
  
  # Check for involvement in the Spanish Civil War
  ?civilWar dbr:Spanish_Civil_War .
  ?civilCommanderRole dbo:agent ?person ;
                      dbo:subject ?civilWar .

}
```",4,5,5,3,2,3,3,71,0,0,4,0,0.0,0
445,5,train,Give me the establishment of 1820-03-10.,"SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/foundingDate> ""1820-03-10""^^<http://www.w3.org/2001/XMLSchema#date> . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?entity ?name WHERE {
  ?entity a dbo:Event .
  ?entity dbo:established ""1820-03-10""^^xsd:date .
  OPTIONAL { ?entity rdfs:label ?name . FILTER (lang(?name) = 'en') }
}
```",1,1,2,1,1,3,3,71,0,0,1,0,0.0,0
917,21,train,"Give me the child of Kekūanāoʻa and parent of the child, that is a royalty, of Kamehameha IV.","SELECT ?result WHERE { ?v2 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Kamehameha_IV> . ?result <http://dbpedia.org/ontology/child> ?v2 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?result <http://dbpedia.org/property/father> ""Kekūanāoʻa""@en . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?child ?parentChild WHERE {
  # Kekūanāoʻa's children
  VALUES ?kekuanaoa { dbr:Kekūanāoʻa }
  
  # Find a child of Kekūanāoʻa who is royalty
  ?child dbo:parent dbr:Kekūanāoʻa .
  ?child dbo:title ?title .
  FILTER(CONTAINS(LCASE(?title), ""king"") || CONTAINS(LCASE(?title), ""queen"") || CONTAINS(LCASE(?title), ""prince"") || CONTAINS(LCASE(?title), ""princess""))

  # Find the child of this royal child
  ?parentChild dbo:parent ?child .
  
  # Ensure the parent is royalty
  ?parentChild dbo:title ?parentTitle .
  FILTER(CONTAINS(LCASE(?parentTitle), ""king"") || CONTAINS(LCASE(?parentTitle), ""queen"") || CONTAINS(LCASE(?parentTitle), ""prince"") || CONTAINS(LCASE(?parentTitle), ""princess""))
}
```",3,4,4,2,2,3,3,71,0,0,1,0,0.0,0
507,0,train,Give me the spouse of Anne V. Coates.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/spouse> <http://dbpedia.org/resource/Anne_V._Coates> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>

SELECT ?spouse WHERE {
  ?anne a dbo:Person ;
        foaf:name ""Anne V. Coates""@en .
  OPTIONAL { ?anne dbo:spouse ?spouse . }
}
```",1,1,2,1,1,3,3,71,1,0,0,1.0,1.0,1.0
987,23,train,"Give me the birth place of the band, that is an artist and a musical artist, of the band, that is an artist, of Dado Polumenta.",SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. ?v2 <http://dbpedia.org/ontology/birthPlace> ?result . ?v1 <http://dbpedia.org/ontology/associatedMusicalArtist> ?v2 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. <http://dbpedia.org/resource/Dado_Polumenta> <http://dbpedia.org/ontology/associatedMusicalArtist> ?v1 . },"```sparql
SELECT ?birthPlace WHERE {
  # Step 1: Identify Dado Prato's association with Planet Funk
  ?person rdfs:label ""Dado Prato""@en .
  ?person dbo:memberOfBand ?band .
  
  # Ensure the band is Planet Funk
  FILTER(?band = dbpedia:Planet_Funk)

  # Step 2: Find if Planet Funk is associated with another artist or band
  ?band dbo:associatedBandOrArtist ?relatedEntity .

  # Check if the related entity is both an artist and a musical artist
  ?relatedEntity rdf:type dbo:MusicalArtist .
  ?relatedEntity rdf:type dbo:Artist .

  # Step 3: Get the birth place of the identified band or artist
  ?relatedEntity dbo:birthPlace ?birthPlace .
}
```",3,6,4,3,1,3,3,71,0,0,6,0,0.0,0
382,10,train,"Give me the award of the reference, that is a college coach and a coach, to Harry Combes.","SELECT ?result WHERE { ?v0 <http://dbpedia.org/property/awards> ?result . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/CollegeCoach>. ?v0 <http://xmlns.com/foaf/0.1/name> ""Harry Combes""@en . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Coach>. }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?awardName WHERE {
  ?person rdfs:label ""Harry Combes""@en .
  FILTER NOT EXISTS { ?person a dbo:Agent } # Exclude general agents
  ?person dbo:award ?award .
  ?award rdfs:label ?awardName .
}
```",2,4,3,2,1,3,2,20,0,0,1,0,0.0,0
273,11,train,Give me the parent of Gianni Agnelli and spouse of the child of Giovanni Agnelli.,SELECT ?result WHERE { <http://dbpedia.org/resource/Gianni_Agnelli> <http://dbpedia.org/ontology/parent> ?result . ?result <http://dbpedia.org/ontology/spouse> ?v2 . <http://dbpedia.org/resource/Giovanni_Agnelli> <http://dbpedia.org/ontology/child> ?v2 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?parent ?spouse WHERE {
  # Find the parent of Gianni Agnelli
  OPTIONAL { 
    dbr:Gianni_Agnelli dbo:childOf ?parent .
  }
  
  # Identify a child of Giovanni Agnelli (could be Gianni himself)
  OPTIONAL {
    ?child dbo:childOf dbr:Giovanni_Agnelli .
    FILTER(?child = dbr:Gianni_Agnelli || ?child != dbr:Gianni_Agnelli) # Ensure we consider other children too
  }
  
  # Find the spouse of this child
  OPTIONAL {
    ?child dbo:spouse ?spouse .
  }

  # Return results where both parent and spouse are found
  FILTER(?parent && ?spouse)
}
```",3,3,4,2,2,3,2,20,0,0,1,0,0.0,0
365,1,train,Give me the spouse of Olha Petliura.,SELECT ?result WHERE { <http://dbpedia.org/resource/Olha_Petliura> <http://dbpedia.org/ontology/spouse> ?result . },"```sparql
SELECT ?spouse WHERE {
  wd:Q123456 dbo:spouse ?spouse .
}
```

Note: Replace `wd:Q123456` with the actual DBpedia resource identifier for Olha Petliura. You may need to look up this identifier in DBpedia or through a search engine that indexes DBpedia resources.",1,1,2,1,1,3,2,20,0,0,1,0,0.0,0
926,33,train,Give me the successor of the child of the spouse of Şermi Kadın and father of Mahmud II.,SELECT ?result WHERE { <http://dbpedia.org/resource/Mahmud_II> <http://dbpedia.org/property/father> ?result . ?v2 <http://dbpedia.org/ontology/successor> ?result . ?v0 <http://dbpedia.org/ontology/spouse> <http://dbpedia.org/resource/Şermi_Kadın> . ?v2 <http://dbpedia.org/property/father> ?v0 . },"```sparql
SELECT ?successor WHERE {
  wd:Q123456 wdt:P39 wd:Q789012 . # Mahmud II (Q123456) has a position as Sultan (P39) with Abdul Hamid I (Q789012)
  wd:Q789012 wdt:P921 ?child .    # Abdul Hamid I's child
  FILTER(?child = wd:Q123456)     # Ensure the child is Mahmud II
  wd:Q123456 wdt:P54 ?successor   # Mahmud II's successor
}
```

Note: Replace `wd:Q123456` with the actual DBpedia ID for Mahmud II and `wd:Q789012` with the ID for Abdul Hamid I. You can find these IDs by searching DBpedia or using a SPARQL endpoint to query for entities named ""Mahmud II"" and ""Abdul Hamid I"".",4,4,5,3,2,3,3,71,0,0,1,0,0.0,0
102,11,train,Give me the manager of the player in Ellie Roebuck and native of Dewsbury.,SELECT ?result WHERE { ?v2 <http://dbpedia.org/ontology/manager> ?result . ?result <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Dewsbury> . <http://dbpedia.org/resource/Ellie_Roebuck> <http://dbpedia.org/ontology/team> ?v2 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?manager WHERE {
  ?player a dbo:SoccerPlayer ;
          foaf:name ""Ellie Roebuck""@en ;
          dbo:birthPlace dbr:Dewsbury .
  
  ?player dbo:playsFor ?team .

  ?team dbo:manager ?manager .
}
```",3,3,4,2,2,3,2,20,0,0,1,0,0.0,0
987,25,train,"Give me the entity in the region, that is a country, of Central European Time and birth place of Moamer Kasumović.",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/country> ?v0 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. <http://dbpedia.org/resource/Moamer_Kasumović> <http://dbpedia.org/ontology/birthPlace> ?result . ?v0 <http://dbpedia.org/property/timeZone> <http://dbpedia.org/resource/Central_European_Time> . },"```sparql
SELECT ?entity WHERE {
  ?entity wdt:P31 wd:Q6256; # instance of country
          wdt:P421 wd:Q11173; # time zone Central European Time
          wdt:P19 ?place. # place of birth

  ?place rdfs:label ""Požarevac""@en . # label for Požarevac in English

  FILTER (lang(?place) = 'en')
}
```",3,4,4,2,2,3,3,71,0,0,1,0,0.0,0
170,5,train,Give me the profession of John Scholey.,SELECT ?result WHERE { <http://dbpedia.org/resource/John_Scholey> <http://dbpedia.org/property/occupation> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT ?profession WHERE {
  ?person foaf:name ""John Scholey""@en .
  ?person dbo:occupation ?profession .
}
```",1,1,2,1,1,2,3,28,0,2,1,0.0,0.0,0
216,6,train,Give me the party of Campbell Newman and office of Tim Nicholls.,SELECT ?result WHERE { <http://dbpedia.org/resource/Tim_Nicholls> <http://dbpedia.org/property/office> ?result . <http://dbpedia.org/resource/Campbell_Newman> <http://dbpedia.org/ontology/party> ?result . },"```sparql
# Query to get the party of Campbell Newman
SELECT ?party WHERE {
  dbp:Campbell_Newman dbo:politicalParty ?party .
}

# Query to get the office of Tim Nicholls
SELECT ?office WHERE {
  dbp:Tim_Nicholls dbo:office ?office .
}
```",2,2,3,1,2,2,3,28,0,0,1,0,0.0,0
274,5,train,"Who is the actor, that is a musical artist, of Imagine the Sound?",SELECT ?result WHERE { ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. <http://dbpedia.org/resource/Imagine_the_Sound> <http://dbpedia.org/property/starring> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?actor WHERE {
  ?actor a dbo:Actor .
  ?actor dbo:occupation dbp:musician .
  OPTIONAL { 
    ?actor dbo:work ?work .
    ?work rdfs:label ""Imagine the Sound""@en .
  }
}
```",1,2,2,1,1,2,3,28,0,0,4,0,0.0,0
495,12,train,Give me the father of the child of Princess Charlotte of Saxe-Hildburghausen and child of Frederick I of Württemberg.,SELECT ?result WHERE { ?result <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Frederick_I_of_Württemberg> . ?v0 <http://dbpedia.org/property/father> ?result . ?v0 <http://dbpedia.org/ontology/parent> <http://dbpedia.org/resource/Princess_Charlotte_of_Saxe-Hildburghausen> . },"```sparql
SELECT ?person WHERE {
  # Princess Charlotte of Saxe-Hildburghausen's child (Princess Augusta)
  ?augusta dbo:spouse ?grandDuke .
  ?augusta rdfs:label ""Princess Augusta of Württemberg""@en .

  # Frederick I of Württemberg's child (Frederick William)
  ?frederickWilliam dbo:father ?frederickI .
  ?frederickWilliam rdfs:label ""Frederick William of Württemberg""@en .

  # Frederick I of Württemberg
  ?frederickI rdfs:label ""Frederick I, Duke of Württemberg""@en .
}
```",3,3,4,2,2,3,2,20,0,0,1,0,0.0,0
433,35,train,"Give me the professional in the profession of Bob Marley and associated musical artist of the person born, that is a musical artist and an artist, as Paul Laurence Dunbar Chambers Jr..","SELECT ?result WHERE { ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. ?v2 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v2 <http://dbpedia.org/property/birthName> ""Paul Laurence Dunbar Chambers Jr.""@en . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?result <http://dbpedia.org/property/occupation> ?v1 . <http://dbpedia.org/resource/Bob_Marley> <http://dbpedia.org/property/occupation> ?v1 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?professional WHERE {
  # Bob Marley's profession
  dbr:Bob_Marley dbo:profession dbr:Singer-songwriter .
  
  # Chick Chambers' associated musical artist (e.g., Miles Davis)
  dbr:Chick_Chambers dbo:associatedMusicalArtist dbr:Miles_Davis .

  # Find a professional in the same field
  ?professional dbo:profession dbr:Singer-songwriter ;
                dbo:associatedMusicalArtist dbr:Miles_Davis .
}
```",4,6,5,2,2,3,3,71,0,0,16,0,0.0,0
382,8,train,Give me the landmark at elevation of the award of Harry Combes.,SELECT ?result WHERE { <http://dbpedia.org/resource/Harry_Combes> <http://dbpedia.org/property/awards> ?v0 . ?result <http://dbpedia.org/ontology/elevation> ?v0 . },"```sparql
# Step 1: Find an award associated with Harry Combes
SELECT ?award WHERE {
  ?person foaf:name ""Harry Combes"" .
  ?person dbo:awardsReceived ?award .
}

# Assuming we find an award, let's say it is stored in a variable called $award

# Step 2: Determine the elevation of the award (hypothetical property)
SELECT ?elevation WHERE {
  <$award> dbo:elevation ?elevation .
}

# Assuming we find an elevation, let's say it is stored in a variable called $elevation

# Step 3: Find landmarks at that elevation
SELECT ?landmark WHERE {
  ?landmark dbo:elevation ?elevation .
}
```

Note: The above queries assume the existence of certain properties (`dbo:awardsReceived`, `dbo:elevation`) which may not exist in DBpedia. Adjustments might be necessary based on actual data availability.",2,2,3,2,1,3,2,20,0,0,727,0,0.0,0
507,24,train,"Give me the director of the movie, that is a movie and a work, with Beryl Reid and professional in Film director, television director.","SELECT ?result WHERE { ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Film>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?v2 <http://dbpedia.org/ontology/director> ?result . ?result <http://dbpedia.org/property/occupation> ""Film director, television director""@en . ?v2 <http://dbpedia.org/property/starring> <http://dbpedia.org/resource/Beryl_Reid> . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT DISTINCT ?director WHERE {
  ?movie rdf:type dbo:Movie .
  ?movie rdf:type dbo:Work .
  ?movie dbo:starring dbr:Beryl_Reid .
  ?movie dbo:director ?director .

  OPTIONAL { 
    ?director foaf:currentProject ?project .
    FILTER (
      strstarts(str(?project), ""http://dbpedia.org/resource/"") &&
      (str(?project) = ""http://dbpedia.org/resource/Category:Film_directors"" ||
       str(?project) = ""http://dbpedia.org/resource/Category:Television_directors"")
    )
  }

  OPTIONAL {
    ?director dbo:occupation dbr:Film_director .
  }
  
  OPTIONAL {
    ?director dbo:occupation dbr:Television_director .
  }
}
```",3,5,4,2,2,3,3,71,0,0,1,0,0.0,0
216,14,train,Give me the office of Tim Nicholls and party of the awardee of Australian Defence Medal.,SELECT ?result WHERE { <http://dbpedia.org/resource/Tim_Nicholls> <http://dbpedia.org/property/office> ?result . ?v2 <http://dbpedia.org/ontology/party> ?result . ?v2 <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/Australian_Defence_Medal> . },"```sparql
# Query to get the office of Tim Nicholls
SELECT ?office WHERE {
  wd:Q1234567 dbo:occupation ?office .
}

UNION

# Query to get the party of an awardee of the Australian Defence Medal
SELECT DISTINCT ?party WHERE {
  ?person dbo:awardReceived wd:Q7890123 . # Assuming Q7890123 is the DBpedia ID for the Australian Defence Medal
  ?person dbo:politicalAffiliation ?party .
}
```

Note: Replace `wd:Q1234567` with the actual DBpedia identifier for Tim Nicholls and `wd:Q7890123` with the correct identifier for the Australian Defence Medal.",3,3,4,2,2,2,3,28,0,0,1,0,0.0,0
892,16,train,Give me the award of the member of E-girls.,SELECT ?result WHERE { ?v0 <http://dbpedia.org/property/awards> ?result . <http://dbpedia.org/resource/E-girls> <http://dbpedia.org/ontology/bandMember> ?v0 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?member ?award WHERE {
  ?band a dbo:MusicalBand ;
        dbp:name ""E-girls""@en .
  
  ?band dbo:member ?member .

  OPTIONAL { 
    ?member dbo:award ?award .
  }
}
```",2,2,3,2,1,3,3,71,0,0,2,0,0.0,0
917,27,train,"Give me the child of the father of the child, that is a royalty, of Kamehameha III.",SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v1 <http://dbpedia.org/property/father> ?v0 . <http://dbpedia.org/resource/Kamehameha_III> <http://dbpedia.org/ontology/child> ?v1 . ?result <http://dbpedia.org/property/father> ?v0 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT DISTINCT ?grandchild WHERE {
  ?kamehamehaIII rdfs:label ""Kamehameha III""@en .
  ?kamehamehaIII dbo:child ?child .
  ?child dbo:child ?grandchild .
  
  FILTER EXISTS { 
    ?grandchild dbo:title ?title .
    FILTER regex(?title, ""King|Queen|Prince|Princess"", ""i"")
  }
}
```",3,4,4,3,1,3,3,71,0,1,5,0.0,0.0,0
465,3,train,"Give me the parent of Ercole II d'Este, Duke of Ferrara.","SELECT ?result WHERE { <http://dbpedia.org/resource/Ercole_II_d'Este,_Duke_of_Ferrara> <http://dbpedia.org/ontology/parent> ?result . }","```sparql
SELECT ?fatherName WHERE {
  ?person dbo:givenName ""Ercole II"" .
  ?person dbo:familyName ""d'Este"" .
  ?person dbo:title ""Duke of Ferrara"" .
  ?person dbo:father ?father .
  ?father rdfs:label ?fatherName .
  FILTER(LANG(?fatherName) = 'en')
}
```",1,1,2,1,1,3,3,71,0,0,2,0,0.0,0
865,7,train,Who is the father of Abul Maal Abdul Muhith?,SELECT ?result WHERE { <http://dbpedia.org/resource/Abul_Maal_Abdul_Muhith> <http://dbpedia.org/property/father> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>

SELECT ?father WHERE {
  ?person dbo:givenName ""Abul Maal"" .
  ?person dbo:familyName ""Abdul Muhith"" .
  ?person dbo:father ?father .
}
```",1,1,2,1,1,3,3,71,0,0,1,0,0.0,0
445,10,train,Give me the entity in United Kingdom and entity in England.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/United_Kingdom> . ?result <http://dbpedia.org/ontology/location> <http://dbpedia.org/resource/England> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?entity WHERE {
  ?entity dbo:location dbr:England .
  ?entity dbo:country dbr:United_Kingdom .
}
```",2,2,3,1,2,3,3,71,102,0,0,1.0,1.0,1.0
839,6,train,Give me the member of Böhse Onkelz.,SELECT ?result WHERE { <http://dbpedia.org/resource/Böhse_Onkelz> <http://dbpedia.org/ontology/bandMember> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?member WHERE {
  ?band a dbo:Band .
  ?band rdfs:label ""Böhse Onkelz""@en .
  ?band dbo:bandMember ?member .
}
```",1,1,2,1,1,3,3,71,4,0,0,1.0,1.0,1.0
978,10,train,Give me the person born as the name of Chicane (musician).,SELECT ?result WHERE { ?result <http://dbpedia.org/property/birthName> ?v0 . <http://dbpedia.org/resource/Chicane_(musician)> <http://xmlns.com/foaf/0.1/givenName> ?v0 . },"```sparql
PREFIX foaf: <http://xmlns.com/foaf/0.1/>
SELECT ?birthName WHERE {
  ?person a foaf:Person ;
          foaf:name ""Chicane"" .
  OPTIONAL { ?person foaf:givenName ?birthName . }
}
```",2,2,3,2,1,3,2,20,0,0,1,0,0.0,0
329,7,train,Give me the birthplace of Eric Cross (writer) and entity in Northern Ireland.,SELECT ?result WHERE { <http://dbpedia.org/resource/Eric_Cross_(writer)> <http://dbpedia.org/ontology/birthPlace> ?result . ?result <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Northern_Ireland> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT ?birthPlace WHERE {
  ?person foaf:name ""Eric Cross"" .
  ?person rdf:type dbo:Writer .
  ?person dbo:birthPlace ?birthPlace .
}
```",2,2,3,1,2,2,3,28,0,0,1,0,0.0,0
445,24,train,Give me the death place of the awardee of Royal Astronomical Society and entity in United Kingdom.,SELECT ?result WHERE { ?v2 <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/Royal_Astronomical_Society> . ?v2 <http://dbpedia.org/ontology/deathPlace> ?result . ?result <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/United_Kingdom> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?person ?deathPlace WHERE {
  ?person a dbo:Astronomer ;
          dbo:honoraryMemberOf dbr:Royal_Astronomical_Society ;
          dbo:country dbr:United_Kingdom .
  OPTIONAL { ?person dbp:deathPlace ?deathPlace . }
}
```",3,3,4,2,2,3,3,71,0,0,2,0,0.0,0
170,8,train,Give me the entity in the work of International Energy Agency.,SELECT ?result WHERE { ?v1 <http://dbpedia.org/property/author> <http://dbpedia.org/resource/International_Energy_Agency> . ?result <http://dbpedia.org/ontology/country> ?v1 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?work WHERE {
  VALUES ?iea { dbr:International_Energy_Agency }
  ?iea dbo:work ?work .
}
```",2,2,3,2,1,2,3,28,0,0,29927,0,0.0,0
36,14,train,Give me the person born in the birth year of Deanne Bray and actor of Being Mrs Elliot.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/birthYear> ?v2 . <http://dbpedia.org/resource/Being_Mrs_Elliot> <http://dbpedia.org/ontology/starring> ?result . <http://dbpedia.org/resource/Deanne_Bray> <http://dbpedia.org/ontology/birthYear> ?v2 . },"```sparql
# Step 1: Get Deanne Bray's birth year
SELECT ?birthYear WHERE {
  dbpedia:Deanne_Bray dbo:birthDate ?date .
  BIND(YEAR(?date) AS ?birthYear)
}

# Step 2: Find the actor of ""Being Mrs Elliot""
SELECT ?actor WHERE {
  dbpedia:Being_Mrs_Elliot dbo:starring ?actor .
}

# Step 3: Find a person with the same birth year as Deanne Bray and check if they are an actor
SELECT DISTINCT ?person WHERE {
  # Assuming we have obtained Deanne Bray's birth year from step 1, let's say it is stored in a variable $birthYear
  BIND(1234 AS $birthYear) # Replace 1234 with the actual birth year obtained from Step 1

  ?person dbo:birthDate ?date .
  FILTER(YEAR(?date) = $birthYear)
  
  OPTIONAL { ?person rdf:type dbpedia:Actor . }
  FILTER(EXISTS { ?person rdf:type dbpedia:Actor })
}
```

Note: In the actual implementation, you would replace `1234` with the birth year obtained from Step 1. The queries are structured to be executed sequentially, where the result of one query informs the next.",3,3,4,2,2,2,3,28,0,0,1,0,0.0,0
212,0,train,Give me the birthplace of Corp Sayvee.,SELECT ?result WHERE { <http://dbpedia.org/resource/Corp_Sayvee> <http://dbpedia.org/ontology/birthPlace> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>

SELECT ?birthPlace WHERE {
  ?s a dbo:Person .
  ?s foaf:name ""Corp Sayvee"" .
  ?s dbo:birthPlace ?birthPlace .
}
```",1,1,2,1,1,2,2,9,0,0,1,0,0.0,0
892,20,train,Give me the landmark at elevation of the award of Anna Ishii and entity in Italy.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/elevation> ?v1 . ?result <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Italy> . <http://dbpedia.org/resource/Anna_Ishii> <http://dbpedia.org/property/awards> ?v1 . },"```sparql
# Step 1: Find Anna Ishii's Award
SELECT ?award WHERE {
  ?person foaf:name ""Anna Ishii""@en .
  ?person dbo:award ?award .
}

# Step 2: Find Landmark at Elevation of the Award (assuming award is a number)
PREFIX dbpedia-owl: <http://dbpedia.org/ontology/>
PREFIX dbo: <http://dbpedia.org/ontology/>

SELECT ?landmark WHERE {
  ?landmark a dbpedia-owl:Lighthouse ;
            dbo:elevation ?elevation .
  FILTER (?elevation = ""AWARD_NUMBER"") # Replace AWARD_NUMBER with the actual number from Step 1
}

# Step 3: Find Entity in Italy
PREFIX dbo: <http://dbpedia.org/ontology/>

SELECT ?entity WHERE {
  ?entity a dbo:Place ;
          dbo:country dbr:Italy .
}
```

Note: The above queries assume that the award is numeric and can be directly used as an elevation. Adjustments may be needed based on actual data.",3,3,4,2,2,3,3,71,0,0,11,0,0.0,0
791,16,train,"Give me the child of the child, that is an office holder and a royalty, of Emperor Go-Shirakawa.",SELECT ?result WHERE { ?result <http://dbpedia.org/property/father> ?v1 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v1 <http://dbpedia.org/ontology/parent> <http://dbpedia.org/resource/Emperor_Go-Shirakawa> . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT DISTINCT ?grandchild WHERE {
  # Step 1: Find children of Emperor Go-Shirakawa
  ?emperor dbp:name ""Emperor Go-Shirakawa""@en .
  
  # Step 2: Identify grandchildren (children of the emperor's children)
  ?emperor dbo:child ?child .
  ?child dbo:child ?grandchild .

  # Step 3: Filter grandchildren who are office holders and royalty
  ?grandchild dbo:royalTitle ?title .
  ?grandchild dbo:officeHolder ?office .
}
```",2,4,3,2,1,3,3,71,0,0,4,0,0.0,0
465,22,train,"Give me the successor of the child, that is a royalty, of Anne of Brittany and successor of Ercole II d'Este, Duke of Ferrara.","SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. <http://dbpedia.org/resource/Ercole_II_d'Este,_Duke_of_Ferrara> <http://dbpedia.org/ontology/successor> ?result . ?v1 <http://dbpedia.org/ontology/successor> ?result . <http://dbpedia.org/resource/Anne_of_Brittany> <http://dbpedia.org/ontology/child> ?v1 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?successor WHERE {
  # Anne of Brittany's children with Louis XII
  ?anneChild dbo:parent dbr:Anne_of_Brittany ;
            dbo:spouse ?husband .
  
  # Claude of France (child of Anne and Louis XII)
  FILTER(?anneChild = dbr:Claude_of_France) .

  # Ercole II d'Este's successor
  ?ercoleSuccessor dbo:successorOf dbr:Ercole_II_d%27Este,_Duke_of_Ferrara ;
                  dbo:title ""Duke of Ferrara""@en .
  
  # Claude's spouse (Henry II)
  ?claudesSpouse dbo:spouse ?anneChild .

  FILTER(?claudesSpouse = dbr:Henry_II_of_France) .

  # Elizabeth of Valois as the successor
  ?successor dbo:parent ?claudesSpouse ;
            dbo:parent ?husband .
  
  FILTER(?successor = dbr:Elizabeth_of_Valois)
}
```",3,4,4,2,2,3,3,71,0,0,1,0,0.0,0
791,31,train,"Give me the spouse of the spouse, that is a royalty, of the reference to Emperor Takakura and predecessor of Emperor Antoku.","SELECT ?result WHERE { ?v0 <http://dbpedia.org/ontology/spouse> ?v1 . ?result <http://dbpedia.org/ontology/spouse> ?v0 . ?v1 <http://xmlns.com/foaf/0.1/name> ""Emperor Takakura""@en . ?result <http://dbpedia.org/ontology/successor> <http://dbpedia.org/resource/Emperor_Antoku> . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?spouseOfSpouse WHERE {
  # Step 1: Identify Emperor Takakura
  ?emperorTakakura a dbo:Monarch ;
                   foaf:name ""Emperor Takakura""@en .

  # Step 2: Find the spouse of Emperor Takakura
  ?emperorTakakura dbo:spouse ?spouseOfTakakura .

  # Step 3: Identify the spouse's spouse (who is royalty)
  ?spouseOfTakakura dbo:spouse ?spouseOfSpouse .
  ?spouseOfSpouse a dbo:Monarch .

  # Step 4: Find predecessor of Emperor Antoku
  ?emperorAntoku a dbo:Monarch ;
                 foaf:name ""Emperor Antoku""@en .
  ?predecessor dbr:Emperor_Antoku dbo:successor .

  # Step 5: Match the two individuals
  FILTER (?spouseOfSpouse = ?predecessor)
}
```",4,5,5,3,2,3,3,71,0,0,1,0,0.0,0
236,12,train,Give me the party member of Federalist Party and party member of the administration of James Madison.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/party> <http://dbpedia.org/resource/Federalist_Party> . ?v0 <http://dbpedia.org/property/leader> <http://dbpedia.org/resource/James_Madison> . ?result <http://dbpedia.org/ontology/party> ?v0 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?person WHERE {
  ?person dbo:partyMemberOf dbr:Federalist_Party .
  ?person dbo:presidency dbr:James_Madison .
}
```",3,3,4,2,2,3,2,20,0,0,19,0,0.0,0
839,17,train,"Give me the band, that is a musical artist, of the professional in Musician.","SELECT ?result WHERE { ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?v1 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v1 <http://dbpedia.org/property/occupation> ""Musician""@en . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?musician ?band WHERE {
  ?musician dbo:occupation ?occupation .
  FILTER(CONTAINS(LCASE(str(?occupation)), ""musician""))
  OPTIONAL { ?musician dbp:band ?band . }
  FILTER(BOUND(?band))
}
LIMIT 1
```",2,3,3,2,1,3,3,71,0,0,3643,0,0.0,0
892,37,train,Give me the landmark at elevation of the award of the member of E-girls and entity in Province of Reggio Emilia.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/elevation> ?v2 . ?v1 <http://dbpedia.org/property/awards> ?v2 . <http://dbpedia.org/resource/E-girls> <http://dbpedia.org/ontology/bandMember> ?v1 . ?result <http://dbpedia.org/ontology/province> <http://dbpedia.org/resource/Province_of_Reggio_Emilia> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?member ?award ?landmark ?elevation ?entityInReggioEmilia WHERE {
  # Find a member of E-girls
  ?member dbo:memberOf dbr:E-girls .
  
  # Find an award associated with that member
  ?award dbo:recipient ?member .

  # Find the landmark associated with the award and its elevation
  OPTIONAL { 
    ?award dbo:location ?landmark .
    ?landmark dbo:elevation ?elevation .
  }

  # Find an entity in the Province of Reggio Emilia
  ?entityInReggioEmilia dbo:locatedIn dbr:Province_of_Reggio_Emilia .

}
```",4,4,5,3,2,3,3,71,0,0,1,0,0.0,0
329,12,train,Give me the entity in United Kingdom and birthplace of Eric Cross (writer) and entity in Northern Ireland.,SELECT ?result WHERE { <http://dbpedia.org/resource/Eric_Cross_(writer)> <http://dbpedia.org/ontology/birthPlace> ?result . ?result <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Northern_Ireland> . ?result <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/United_Kingdom> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?birthPlaceUK ?entityNI WHERE {
  # Find Eric Cross and his birthplace in the UK
  dbr:Eric_Cross_(writer) dbo:birthPlace ?birthPlace .
  ?birthPlace rdfs:label ?birthPlaceLabel .
  FILTER (CONTAINS(LCASE(?birthPlaceLabel), ""united kingdom"") || CONTAINS(LCASE(?birthPlaceLabel), ""uk""))

  # Find an entity in Northern Ireland associated with Eric Cross
  OPTIONAL {
    dbr:Eric_Cross_(writer) dbo:residence ?entityNI .
    ?entityNI rdfs:label ?entityNILabel .
    FILTER (CONTAINS(LCASE(?entityNILabel), ""northern ireland"") || CONTAINS(LCASE(?entityNILabel), ""ni""))
  }
}
```",3,3,4,1,3,2,3,28,0,0,1,0,0.0,0
170,7,train,Give me the entity in Russia and domain of Mayor.,"SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Russia> . ?result <http://dbpedia.org/ontology/leaderTitle> ""Mayor""@en . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?cityLabel ?mayorDomain
WHERE {
  ?city a dbo:City ;
        dbp:country dbr:Russia ;
        rdfs:label ?cityLabel .
  
  OPTIONAL { 
    ?city dbo:mayor ?mayor .
    ?mayor a ?mayorDomain .
  }
  
  FILTER (lang(?cityLabel) = 'en')
}
ORDER BY ?cityLabel
```",2,2,3,1,2,2,3,28,0,0,99,0,0.0,0
826,19,train,"Give me the successor of Louis II, Grand Duke of Hesse and spouse of the child of Johann Heinrich Appel.","SELECT ?result WHERE { ?v0 <http://dbpedia.org/ontology/spouse> ?result . <http://dbpedia.org/resource/Louis_II,_Grand_Duke_of_Hesse> <http://dbpedia.org/ontology/successor> ?result . ?v0 <http://dbpedia.org/property/father> ""Johann Heinrich Appel""@en . }","```sparql
SELECT ?successor WHERE {
  wd:Q123456 wdt:P39 wd:Q789012 . # Louis II, Grand Duke of Hesse (replace Q123456 and Q789012 with actual IDs)
  wd:Q789012 wdt:P1368 ?successor .
}
```

Note: Replace `wd:Q123456` with the DBpedia ID for Louis II, Grand Duke of Hesse, and `wdt:P39` with the property indicating his role or title. Similarly, replace `wd:Q789012` with the correct identifier for the position of Grand Duke of Hesse, and `wdt:P1368` with the property that indicates a successor.",3,3,4,2,2,3,3,71,0,0,1,0,0.0,0
826,36,train,"Give me the spouse of Anna Magdalena Appel and predecessor of the parent of the child of Louis IV, Grand Duke of Hesse.","SELECT ?result WHERE { ?v0 <http://dbpedia.org/ontology/parent> ?v1 . ?v0 <http://dbpedia.org/ontology/parent> <http://dbpedia.org/resource/Louis_IV,_Grand_Duke_of_Hesse> . ?result <http://dbpedia.org/ontology/successor> ?v1 . <http://dbpedia.org/resource/Anna_Magdalena_Appel> <http://dbpedia.org/ontology/spouse> ?result . }","```sparql
SELECT ?spouse WHERE {
  wd:Q11940 wdt:P26 ?spouse .
}
```",4,4,5,3,2,3,3,71,0,0,1,0,0.0,0
329,1,train,Give me the entity in United Kingdom.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/United_Kingdom> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?entity WHERE {
  ?entity a dbo:Place .
  ?entity dbo:country dbpedia:United_Kingdom .
}
LIMIT 100
```",1,1,2,1,1,2,3,28,0,0,42999,0,0.0,0
917,35,train,"Give me the child of the father of Kamehameha IV and parent of the child, that is a royalty, of Kamehameha IV.",SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v1 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Kamehameha_IV> . ?result <http://dbpedia.org/property/father> ?v0 . ?result <http://dbpedia.org/ontology/child> ?v1 . <http://dbpedia.org/resource/Kamehameha_IV> <http://dbpedia.org/property/father> ?v0 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?mother WHERE {
  # Kamehameha IV's father
  dbr:Kamehameha_IV dbo:father dbr:Kamehameha_I .
  
  # Kamehameha IV (child of Kamehameha I)
  dbr:Kamehameha_IV dbo:childOf dbr:Kamehameha_I .

  # Parent of Kamehameha IV who is royalty
  dbr:Kamehameha_IV dbo:mother ?mother .
  
  # Ensure the mother is a royalty
  ?mother rdf:type dbo:Monarch .
}
```",4,5,5,2,2,3,3,71,0,0,1,0,0.0,0
826,12,train,"Give me the predecessor of Louis IV, Grand Duke of Hesse and successor of Louis II, Grand Duke of Hesse.","SELECT ?result WHERE { <http://dbpedia.org/resource/Louis_II,_Grand_Duke_of_Hesse> <http://dbpedia.org/ontology/successor> ?result . ?result <http://dbpedia.org/ontology/successor> <http://dbpedia.org/resource/Louis_IV,_Grand_Duke_of_Hesse> . }","```sparql
SELECT ?predecessorLabel ?successorLabel WHERE {
  ?person dbo:predecessor ?predecessor .
  ?person dbo:successor ?successor .
  ?person rdfs:label ""Louis III, Grand Duke of Hesse""@en .
  ?predecessor rdfs:label ?predecessorLabel .
  ?successor rdfs:label ?successorLabel .
}
```",2,2,3,1,2,3,3,71,0,2,1,0.0,0.0,0
715,13,train,Give me the commander in the force of Francisco Largo Caballero.,SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/commander> ?result . ?v1 <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Francisco_Largo_Caballero> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?position WHERE {
  dbr:Franco_Largo_Caballero dbo:office ?position .
  FILTER(CONTAINS(LCASE(STR(?position)), ""commander"") || CONTAINS(LCASE(STR(?position)), ""military""))
}
```",2,2,3,2,1,3,3,71,0,0,28,0,0.0,0
382,14,train,"Give me the landmark at elevation of the award of the reference, that is a college coach and a coach, to Harry Combes.","SELECT ?result WHERE { ?v2 <http://dbpedia.org/property/awards> ?v0 . ?result <http://dbpedia.org/ontology/elevation> ?v0 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Coach>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/CollegeCoach>. ?v2 <http://xmlns.com/foaf/0.1/name> ""Harry Combes""@en . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?landmark WHERE {
  # Find Harry Combes and his roles
  ?combes a dbo:Person ;
          foaf:name ""Harry Combes"" ;
          dbo:occupation ?occupation .
  
  FILTER (CONTAINS(LCASE(STR(?occupation)), ""coach"") || CONTAINS(LCASE(STR(?occupation)), ""college coach""))

  # Find awards associated with Harry Combes
  OPTIONAL { ?combes dbo:awardReceived ?award . }

  # Assuming the award has an elevation property, find the landmark at that elevation
  ?award dbo:elevation ?elevation .
  
  ?landmark a dbo:Landmark ;
            dbo:elevation ?elevation .

}
```",3,5,4,3,1,3,2,20,0,0,727,0,0.0,0
865,16,train,"Who is the child, that is a politician, of the spouse of Syeda Shahar Banu?",SELECT ?result WHERE { <http://dbpedia.org/resource/Syeda_Shahar_Banu> <http://dbpedia.org/ontology/spouse> ?v0 . ?result <http://dbpedia.org/property/father> ?v0 . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. },"```sparql
SELECT ?politician WHERE {
  ?person dbo:spouse ?shaharBanu .
  ?shaharBanu foaf:name ""Syeda Shahar Banu"" .
  
  ?couple dbo:child ?child .
  FILTER (?person = ?couple || ?shaharBanu = ?couple) .

  ?child dbo:occupation ?occupation .
  FILTER CONTAINS(LCASE(?occupation), ""politician"") .

  BIND(?child AS ?politician)
}
```",2,3,3,2,1,3,3,71,0,0,3,0,0.0,0
170,9,train,Give me the domain of Mayor and birth place of Era Ziganshina.,"SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/leaderTitle> ""Mayor""@en . <http://dbpedia.org/resource/Era_Ziganshina> <http://dbpedia.org/ontology/birthPlace> ?result . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT DISTINCT ?domainLabel WHERE {
  ?property rdfs:label ?label .
  FILTER(CONTAINS(LCASE(?label), ""mayor""))
  ?property rdfs:range ?domain .
  ?domain rdfs:label ?domainLabel .
}

UNION

SELECT DISTINCT ?birthPlaceLabel WHERE {
  ?era dbo:birthPlace ?birthPlace .
  ?era rdfs:label ""Era Ziganshina""@en .
  ?birthPlace rdfs:label ?birthPlaceLabel .
}
```",2,2,3,1,2,2,3,28,0,0,1,0,0.0,0
606,11,train,"Give me the birthplace of Charles I. Barber and figure known as the nickname of DeKalb, Illinois.","SELECT ?result WHERE { <http://dbpedia.org/resource/Charles_I._Barber> <http://dbpedia.org/ontology/birthPlace> ?result . ?result <http://dbpedia.org/property/nickname> ?v2 . <http://dbpedia.org/resource/DeKalb,_Illinois> <http://dbpedia.org/property/nickname> ?v2 . }","```sparql
# Query for the birthplace of Charles I. Barber
SELECT ?birthPlace WHERE {
  ?person dbo:birthName ""Charles I. Barber""@en .
  ?person dbo:birthPlace ?birthPlace .
}

UNION

# Query for the nickname of DeKalb, Illinois
SELECT ?nickname WHERE {
  ?city rdfs:label ""DeKalb, Illinois""@en ;
        dbo:officialName ?officialName ;
        dbo:nickname ?nickname .
}
```",3,3,4,2,2,3,2,20,0,0,1,0,0.0,0
715,19,train,"Give me the commander in the force, that is a military conflict, of Abd el-Krim and commander in Spanish Civil War.",SELECT ?result WHERE { ?v0 <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Abd_el-Krim> . ?v0 <http://dbpedia.org/ontology/commander> ?result . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. <http://dbpedia.org/resource/Spanish_Civil_War> <http://dbpedia.org/ontology/commander> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?rifWarCommander ?spanishCivilWarCommander WHERE {
  # Find the commander in the Rif War associated with Abd el-Krim
  ?rifConflict a dbo:MilitaryConflict ;
              dbo:opposingMilitaryForce [
                dbo:commander ?rifWarCommander ;
                dbo:member dbr:Abd_el-Krim
              ] .
  
  # Find a notable commander from the Spanish Civil War
  ?spanishCivilWar a dbo:MilitaryConflict ;
                  dbo:participatingGroup [
                    dbo:commander ?spanishCivilWarCommander ;
                    dbo:name ""Spanish Civil War""@en
                  ] .
}
```",3,4,4,2,2,3,3,71,0,0,4,0,0.0,0
102,6,train,Give me the native of Dewsbury and manager of Sheffield United W.F.C..,SELECT ?result WHERE { <http://dbpedia.org/resource/Sheffield_United_W.F.C.> <http://dbpedia.org/ontology/manager> ?result . ?result <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Dewsbury> . },"```sparql
SELECT ?person WHERE {
  # Find people born in Dewsbury
  ?person dbo:birthPlace dbr:Dewsbury .
  
  # Find managers of Sheffield United W.F.C.
  ?managerPosition dbo:position ""Manager""@en ;
                   dbo:employer dbr:Sheffield_United_Women_Football_Club .

  # Ensure the person is both native to Dewsbury and manager of Sheffield United W.F.C.
  FILTER (?person = ?managerPosition)
}
```",2,2,3,1,2,3,2,20,0,0,1,0,0.0,0
935,8,train,Give me the headquarter of the office of Sanaullah Khan Zehri.,SELECT ?result WHERE { ?v0 <http://dbpedia.org/ontology/location> ?result . <http://dbpedia.org/resource/Sanaullah_Khan_Zehri> <http://dbpedia.org/property/office> ?v0 . },"```sparql
SELECT ?headquarters WHERE {
  ?person foaf:name ""Sanaullah Khan Zehri"" .
  ?person dbo:officeTitle dbr:Chief_Minister_of_Balochistan .
  ?office dbo:headquarter ?headquarters .
  ?office dbo:heldBy ?person .
}
```",2,2,3,2,1,3,2,20,0,0,1,0,0.0,0
281,13,train,"Give me the awardee of Medal bar and commander in the war, that is an event and a military conflict, of Roy Boehm.",SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?result <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/Medal_bar> . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. <http://dbpedia.org/resource/Roy_Boehm> <http://dbpedia.org/ontology/battle> ?v1 . ?v1 <http://dbpedia.org/ontology/commander> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?medalBar ?war WHERE {
  # Find Roy Boehm's entity
  ?person rdfs:label ""Roy Boehm""@en .
  
  # Get the medals awarded to him, specifically looking for a Medal Bar
  OPTIONAL { 
    ?person dbo:award ?award .
    ?award dbo:name ?medalBar .
    FILTER(CONTAINS(LCASE(?medalBar), ""medal bar""))
  }
  
  # Find wars or military conflicts he was involved in and check if he was a commander
  OPTIONAL {
    ?person dbo:militaryConflict ?war .
    ?war rdf:type dbo:MilitaryConflict .
    
    OPTIONAL { 
      ?person dbo:commanderOf ?war .
    }
  }
}
```",3,5,4,2,2,2,3,28,0,0,3,0,0.0,0
839,23,train,"Give me the band of the person born, that is a musical artist, as the persona of Kevin Russell (musician).",SELECT ?result WHERE { ?v0 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v0 <http://dbpedia.org/property/birthName> ?v2 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. <http://dbpedia.org/resource/Kevin_Russell_(musician)> <http://xmlns.com/foaf/0.1/givenName> ?v2 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?bandName WHERE {
  ?person dbo:birthPlace ?place .
  ?person rdfs:label ""Kevin Russell (musician)""@en .
  ?person a dbo:MusicalArtist .
  ?person dbo:associatedBand ?band .
  ?band rdfs:label ?bandName .
}
```",3,4,4,3,1,3,3,71,0,1,1,0.0,0.0,0
976,36,train,Give me the office of the person born as the birth name of Naci Bostancı and office of Mustafa Şentop.,SELECT ?result WHERE { <http://dbpedia.org/resource/Naci_Bostancı> <http://dbpedia.org/property/birthName> ?v3 . <http://dbpedia.org/resource/Mustafa_Şentop> <http://dbpedia.org/property/office> ?result . ?v0 <http://dbpedia.org/property/office> ?result . ?v0 <http://dbpedia.org/property/birthName> ?v3 . },"```sparql
# Query to find Naci Bostancı's birth name and his associated office
SELECT ?birthName ?officeLabel WHERE {
  ?person foaf:name ""Naci Bostancı""@en .
  ?person dbo:birthName ?birthName .
  OPTIONAL { 
    ?person dbo:office ?office .
    ?office rdfs:label ?officeLabel .
  }
}

# Query to find Mustafa Şentop's current office
SELECT ?officeLabel WHERE {
  ?person foaf:name ""Mustafa Şentop""@en .
  ?person dbo:office ?office .
  ?office rdfs:label ?officeLabel .
}
```",4,4,5,3,2,3,3,71,0,0,1,0,0.0,0
773,20,train,Give me the spouse of Louis the German and parent of the successor of Charles the Bald.,SELECT ?result WHERE { <http://dbpedia.org/resource/Louis_the_German> <http://dbpedia.org/ontology/spouse> ?result . <http://dbpedia.org/resource/Charles_the_Bald> <http://dbpedia.org/ontology/successor> ?v2 . ?result <http://dbpedia.org/ontology/child> ?v2 . },"```sparql
SELECT ?spouse ?successorParent WHERE {
  # Find Louis the German's spouse
  wd:Q11940 wdt:P26 ?spouse .
  
  # Find Charles the Bald's successor
  wd:Q1204 wdt:P36 ?successor .

  # Find the parent of Charles the Bald's successor
  ?successor wdt:P22 ?parent .

  # Match the spouse of Louis the German with the parent of Charles the Bald's successor
  FILTER (?spouse = ?parent)
}
```",3,3,4,2,2,3,3,71,0,0,1,0,0.0,0
874,14,train,"Give me the band of the band member of the band, that is an organisation, of Mark Read (singer).",SELECT ?result WHERE { ?v0 <http://dbpedia.org/ontology/associatedMusicalArtist> ?v2 . ?v2 <http://dbpedia.org/ontology/bandMember> <http://dbpedia.org/resource/Mark_Read_(singer)> . ?result <http://dbpedia.org/ontology/bandMember> ?v0 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. },"```sparql
SELECT DISTINCT ?bandMemberBand WHERE {
  # Step 1: Identify Mark Read as a singer
  ?markRead dbo:occupation dbr:Singer .
  
  # Step 2: Find the band McFly that he belongs to and is an organization
  ?mcFly dbo:member ?markRead ;
         rdf:type dbo:Band ;
         dbo:bandMember ?bandMember .

  # Step 3: Retrieve members of McFly
  ?bandMember foaf:name ?name .
  
  FILTER(?name != ""Mark Read"") # Exclude Mark Read himself

  # Step 4: For each member, find other bands they are part of
  ?otherBand dbo:member ?bandMember ;
             rdf:type dbo:Band .

  BIND(str(?otherBand) AS ?bandMemberBand)
}
```",3,4,4,3,1,3,2,20,0,0,5,0,0.0,0
465,34,train,"Give me the successor of Renée of France and successor of the child of the parent of Ercole II d'Este, Duke of Ferrara.","SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/successor> ?result . <http://dbpedia.org/resource/Ercole_II_d'Este,_Duke_of_Ferrara> <http://dbpedia.org/ontology/parent> ?v2 . ?v1 <http://dbpedia.org/property/father> ?v2 . <http://dbpedia.org/resource/Renée_of_France> <http://dbpedia.org/ontology/successor> ?result . }","```sparql
# Query for the successor of Renée of France
SELECT ?successor WHERE {
  wd:Q123456 wdt:P39 wd:Q789012 . # Renée of France's title or position
  wd:Q789013 wdt:P57 wd:Q123456 . # Person who succeeded Renée in that title/position
  SERVICE wikibase:label { bd:serviceParam wikibase:language ""[AUTO_LANGUAGE],en"". }
}

# Query for the successor of the child of the parent of Ercole II d'Este, Duke of Ferrara
SELECT ?successor WHERE {
  wd:Q987654 wdt:P31/wdt:P39 wd:Q567890 . # Ercole II d'Este's title or position
  wd:Q987654 wdt:P22 ?parent .           # Parent of Ercole II d'Este
  ?child wdt:P25 ?parent .               # Child of the parent (i.e., sibling of Ercole)
  ?successor wdt:P57 ?child .            # Successor of this child
  SERVICE wikibase:label { bd:serviceParam wikibase:language ""[AUTO_LANGUAGE],en"". }
}
```

Note: Replace `wd:Q123456`, `wd:Q789012`, `wd:Q789013`, `wd:Q987654`, and `wd:Q567890` with the actual DBpedia entity IDs for Renée of France, her title/position, her successor, Ercole II d'Este, and his title/position respectively.",4,4,5,3,2,3,3,71,0,0,1,0,0.0,0
917,31,train,"Give me the child of Kekūanāoʻa and parent of the child, that is a royalty, of the mayor of Hawaiian Kingdom.",SELECT ?result WHERE { ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?result <http://dbpedia.org/ontology/parent> <http://dbpedia.org/resource/Kekūanāoʻa> . ?result <http://dbpedia.org/ontology/child> ?v0 . <http://dbpedia.org/resource/Hawaiian_Kingdom> <http://dbpedia.org/property/leader> ?v2 . ?v0 <http://dbpedia.org/property/father> ?v2 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?parent WHERE {
  # Kekūanāoʻa and his child who became royalty (Kalākaua)
  dbr:Kekūanāoʻa dbo:child dbr:Kalākaua .
  
  # Kalākaua's parents
  dbr:Kalākaua dbo:parent ?parent .

  # Analea Keohokālole as the parent of Kalākaua
  FILTER(?parent = dbr:Analea_Keohokālole)

  # Lorrin A. Thurston, mayor of the Hawaiian Kingdom
  OPTIONAL {
    dbr:Lorrin_A._Thurston dbo:position dbr:Mayor_of_Honolulu .
  }
}
```",4,5,5,3,2,3,3,71,0,0,2,0,0.0,0
978,4,train,Give me the name of Chicane (musician).,SELECT ?result WHERE { <http://dbpedia.org/resource/Chicane_(musician)> <http://xmlns.com/foaf/0.1/givenName> ?result . },"```sparql
PREFIX foaf: <http://xmlns.com/foaf/0.1/>
SELECT ?name WHERE {
  ?s foaf:name ?name .
  FILTER(CONTAINS(LCASE(STR(?s)), ""chicane""))
}
```",1,1,2,1,1,3,2,20,0,6,1,0.0,0.0,0
212,1,train,Give me the birthplace of KODA (singer).,SELECT ?result WHERE { <http://dbpedia.org/resource/KODA_(singer)> <http://dbpedia.org/ontology/birthPlace> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?birthPlaceLabel WHERE {
  ?person a dbo:Singer .
  ?person rdfs:label ""Koda Kumi""@en .
  ?person dbo:birthPlace ?birthPlace .
  ?birthPlace rdfs:label ?birthPlaceLabel .
}
```",1,1,2,1,1,2,2,9,0,0,2,0,0.0,0
791,36,train,"Give me the spouse of Taira no Tokuko and father of the child, that is a royalty, of the father, that is a royalty and an office holder, of Emperor Antoku.",SELECT ?result WHERE { ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v1 <http://dbpedia.org/property/father> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v1 <http://dbpedia.org/property/father> ?v0 . <http://dbpedia.org/resource/Emperor_Antoku> <http://dbpedia.org/property/father> ?v0 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?result <http://dbpedia.org/ontology/spouse> <http://dbpedia.org/resource/Taira_no_Tokuko> . },"```sparql
SELECT ?spouse WHERE {
  wd:Q1234567 wdt:P26 ?spouse .
  ?spouse wdt:P31 wd:Q5 . # Person
  ?spouse wdt:P39 wd:Q13442814 . # Emperor of Japan
}
```

In this query:
- `wd:Q1234567` should be replaced with the DBpedia identifier for Taira no Tokuko.
- The query looks for her spouse (`P26`) who is a person (`P31`) and an emperor of Japan (`P39`).",4,7,5,3,2,3,3,71,0,0,1,0,0.0,0
579,10,train,"Give me the birth name of the native, that is an office holder, of Edinburgh.",SELECT ?result WHERE { ?v0 <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Edinburgh> . ?v0 <http://dbpedia.org/property/birthName> ?result . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT ?person ?birthName WHERE {
  ?person a dbo:Politician ;
          dbo:officeHolderOf ?office ;
          dbo:birthPlace ?place .
  
  ?office rdfs:label ""First Minister of Scotland""@en .

  ?place rdfs:label ""Edinburgh""@en .

  OPTIONAL { ?person foaf:name ?birthName }
}
```",2,3,3,2,1,3,2,20,0,0,18,0,0.0,0
933,30,train,"Give me the band of the band, that is a group and a band and an organisation, of Alan Warner (musician) and band of Mike Elliott (saxophonist) and reference to Alan Warner.","SELECT ?result WHERE { ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Band>. <http://dbpedia.org/resource/Mike_Elliott_(saxophonist)> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. <http://dbpedia.org/resource/Alan_Warner_(musician)> <http://dbpedia.org/ontology/associatedMusicalArtist> ?v0 . ?v0 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?result <http://xmlns.com/foaf/0.1/name> ""Alan Warner""@en . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Group>. }","```sparql
# Query to find the band of Alan Warner
SELECT ?band WHERE {
  ?person dbo:instrument dbr:Saxophone .
  ?person foaf:name ""Alan Warner"" .
  ?person dbo:memberOfBand ?band .
}

UNION

# Query to find the band of Mike Elliott
SELECT ?band WHERE {
  ?person dbo:instrument dbr:Saxophone .
  ?person foaf:name ""Mike Elliott"" .
  ?person dbo:memberOfBand ?band .
}

# Find common bands between Alan Warner and Mike Elliott
SELECT DISTINCT ?commonBand WHERE {
  {
    SELECT ?bandAlan WHERE {
      ?personAlan dbo:instrument dbr:Saxophone .
      ?personAlan foaf:name ""Alan Warner"" .
      ?personAlan dbo:memberOfBand ?bandAlan .
    }
  }
  {
    SELECT ?bandMike WHERE {
      ?personMike dbo:instrument dbr:Saxophone .
      ?personMike foaf:name ""Mike Elliott"" .
      ?personMike dbo:memberOfBand ?bandMike .
    }
  }
  FILTER (?bandAlan = ?bandMike)
  BIND(?bandAlan AS ?commonBand)
}
```",4,7,5,2,3,3,3,71,0,0,1,0,0.0,0
826,4,train,Who is the child of Johann Heinrich Appel?,"SELECT ?result WHERE { ?result <http://dbpedia.org/property/father> ""Johann Heinrich Appel""@en . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT ?child ?childLabel WHERE {
  ?person a dbo:Person ;
          foaf:name ""Johann Heinrich Appel""@en .
  ?person dbo:child ?child .
  SERVICE wikibase:label { bd:serviceParam wikibase:language ""[AUTO_LANGUAGE],en"". }
}
```",1,1,2,1,1,3,3,71,0,0,1,0,0.0,0
158,2,train,Who is the reference to Adelbert Cronkhite?,"SELECT ?result WHERE { ?result <http://xmlns.com/foaf/0.1/name> ""Adelbert Cronkhite""@en . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?person ?label ?occupation ?birthDate ?deathDate WHERE {
  ?person rdfs:label ""Adelbert Cronkhite""@en .
  OPTIONAL { ?person dbo:occupation ?occupation . }
  OPTIONAL { ?person dbo:birthDate ?birthDate . }
  OPTIONAL { ?person dbo:deathDate ?deathDate . }
  SERVICE wikibase:label { bd:serviceParam wikibase:language ""[AUTO_LANGUAGE],en"". }
}
```",1,1,2,1,1,3,2,20,0,0,1,0,0.0,0
93,1,train,Give me the death place of John Weir Troy.,SELECT ?result WHERE { <http://dbpedia.org/resource/John_Weir_Troy> <http://dbpedia.org/ontology/deathPlace> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?deathPlace WHERE {
  ?person a dbo:Person ;
          foaf:name ""John Weir Troy""@en .
  ?person dbo:deathPlace ?deathPlace .
}
```",1,1,2,1,1,3,2,20,3,0,0,1.0,1.0,1.0
216,18,train,Give me the player in Mario Ivanković and team of Ognjen Vukojević and player in Igor Bišćan.,SELECT ?result WHERE { <http://dbpedia.org/resource/Mario_Ivanković> <http://dbpedia.org/ontology/team> ?result . ?result <http://dbpedia.org/ontology/coach> <http://dbpedia.org/resource/Ognjen_Vukojević> . <http://dbpedia.org/resource/Igor_Bišćan> <http://dbpedia.org/ontology/team> ?result . },"```sparql
# Query to find the team associated with Ognjen Vukojević
SELECT ?team WHERE {
  ?vukojevic dbo:birthName ""Ognjen Vukojević"" .
  ?vukojevic dbo:sportsTeam ?team .
}

UNION

# Query to find teams for Mario Ivanković and Igor Bišćan
SELECT DISTINCT ?player WHERE {
  # Find team(s) for Mario Ivanković
  ?mario dbo:birthName ""Mario Ivanković"" .
  ?mario dbo:sportsTeam ?team1 .

  # Find team(s) for Igor Bišćan
  ?bišćan dbo:birthName ""Igor Bišćan"" .
  ?bišćan dbo:sportsTeam ?team2 .

  # Check if there is a player who was part of both teams
  ?player dbo:sportsTeam ?team1 ;
          dbo:sportsTeam ?team2 .
}
```",3,3,4,1,3,3,3,71,0,0,1,0,0.0,0
865,19,train,"Give me the father of AK Abdul Momen and native of the residence, that is a country, of Ram Jaipal Singh Yadav.",SELECT ?result WHERE { <http://dbpedia.org/resource/Ram_Jaipal_Singh_Yadav> <http://dbpedia.org/property/residence> ?v1 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. <http://dbpedia.org/resource/AK_Abdul_Momen> <http://dbpedia.org/property/father> ?result . ?result <http://dbpedia.org/ontology/birthPlace> ?v1 . },"```sparql
# Query to get the father of AK Abdul Momen
SELECT ?father WHERE {
  ?person dbo:birthName ""AK Abdul Momen""@en .
  ?person dbo:father ?father .
}

UNION

# Query to get the native country of Ram Jaipal Singh Yadav's residence
SELECT ?country WHERE {
  ?yadav dbo:residence ?location .
  ?location dbo:country ?country .
  ?yadav rdfs:label ""Ram Jaipal Singh Yadav""@en .
}
```",3,4,4,2,2,3,3,71,0,0,1,0,0.0,0
933,28,train,Give me the band of the band of Alan Warner (musician) and band of The Ramong Sound and reference to Alan Warner.,"SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . <http://dbpedia.org/resource/The_Ramong_Sound> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . <http://dbpedia.org/resource/Alan_Warner_(musician)> <http://dbpedia.org/ontology/associatedMusicalArtist> ?v1 . ?result <http://xmlns.com/foaf/0.1/name> ""Alan Warner""@en . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?alanWarnerBand ?ramonesBand WHERE {
  # Find the band associated with Alan Warner
  OPTIONAL { 
    ?alanWarner a dbo:Musician ;
                foaf:name ""Alan Warner"" .
    ?alanWarner dbo:band ?alanWarnerBand .
  }
  
  # Find the band associated with The Ramones
  OPTIONAL {
    ?ramones a dbo:MusicalArtist ;
             foaf:name ""The Ramones"" .
    ?ramones dbo:band ?ramonesBand .
  }

  # Check for any reference to Alan Warner in the context of these bands
  OPTIONAL {
    ?alanWarnerBand dbo:member ?commonMember .
    ?commonMember foaf:name ""Alan Warner"" .
  }
}
```",4,4,5,2,3,3,3,71,0,0,1,0,0.0,0
166,12,train,"Give me the resting place of Gonzalo Queipo de Llano and entity in the territory administered, that is a country, from Madrid.",SELECT ?result WHERE { ?v0 <http://dbpedia.org/ontology/capital> <http://dbpedia.org/resource/Madrid> . ?result <http://dbpedia.org/ontology/country> ?v0 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. <http://dbpedia.org/resource/Gonzalo_Queipo_de_Llano> <http://dbpedia.org/ontology/restingPlace> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?burialPlace ?countryAdministeredByMadrid
WHERE {
  # Find the burial place of Gonzalo Queipo de Llano
  OPTIONAL { 
    ?person a dbr:Gonzalo_Queipo_de_Llano ;
            dbo:deathPlace ?deathPlace .
    ?deathPlace dbo:burialPlace ?burialPlace .
  }

  # Identify Spain as the country administered by Madrid
  {
    SELECT DISTINCT ?countryAdministeredByMadrid WHERE {
      dbr:Madrid dbo:administrativeTerritory ?territory .
      ?territory a dbo:Country ;
                 rdfs:label ?countryLabel .
      FILTER (lang(?countryLabel) = 'en' && contains(lcase(str(?countryLabel)), ""spain""))
    }
  }
}
```",3,4,4,2,2,3,2,20,0,0,1,0,0.0,0
216,16,train,"Give me the coach, that is a soccer player and a sports manager and a soccer manager, of the player, that is an organisation and a sports club and a soccer club, in Džemal Berberović.",SELECT ?result WHERE { ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerPlayer>. ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsManager>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerClub>. <http://dbpedia.org/resource/Džemal_Berberović> <http://dbpedia.org/ontology/team> ?v1 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsClub>. ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerManager>. ?v1 <http://dbpedia.org/ontology/coach> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?coach WHERE {
  ?player rdf:type dbo:SoccerPlayer ;
          foaf:name ""Džemal Berberović""@en .
  
  ?player dbo:team ?club .

  ?coach rdf:type dbo:SoccerManager, dbo:SoccerPlayer, dbo:SportsManager ;
         dbo:managedTeam ?club .

}
```",2,8,3,2,1,3,3,71,0,0,2,0,0.0,0
715,14,train,"Give me the leader of the office, that is a government agency and an organisation, of Carlos Franco Iribarnegaray.",SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/leader> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/GovernmentAgency>. <http://dbpedia.org/resource/Carlos_Franco_Iribarnegaray> <http://dbpedia.org/property/office> ?v1 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?office ?leader WHERE {
  # Find Carlos Franco Iribarnegaray's offices that are government agencies or organizations
  ?person dbr:Carlos_Franco_Iribarnegaray .
  ?person dbo:positionHeld ?office .
  
  FILTER (
    ?office a dbo:GovernmentAgency || 
    ?office a dbo:Organization
  )
  
  # Find the leader of those offices
  ?office dbo:leader ?leader .
}
```",2,4,3,2,1,3,3,71,0,0,2,0,0.0,0
917,28,train,"Give me the parent of the child, that is a royalty, of Kamehameha IV and child of Kekūanāoʻa and child of Kekūanāoʻa.","SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?result <http://dbpedia.org/ontology/parent> <http://dbpedia.org/resource/Kekūanāoʻa> . ?result <http://dbpedia.org/ontology/child> ?v1 . ?v1 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Kamehameha_IV> . ?result <http://dbpedia.org/property/father> ""Kekūanāoʻa""@en . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?parent WHERE {
  ?child a dbo:Monarch ;
         dbo:spouse ?kamehamehaIV .
  ?kamehamehaIV foaf:name ""Kamehameha IV""@en .
  
  ?child dbo:mother ?parent .
  ?parent foaf:name ?name .

  OPTIONAL { ?child dbo:father ?otherParent . }
  
  FILTER EXISTS {
    ?parent dbo:spouse ?kekuanaoʻa .
    ?kekuanaoʻa foaf:name ""Kekūanāoʻa""@en .
  }

  FILTER (?name = ""Keōpūolani"" || ?name = ""Alexander Liholiho"")
}
```",4,5,5,2,3,3,3,71,0,0,1,0,0.0,0
274,6,train,Give me the band member of Dizzy Gillespie and professional in .,"SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/associatedMusicalArtist> <http://dbpedia.org/resource/Dizzy_Gillespie> . ?result <http://dbpedia.org/property/occupation> """"@en . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?member ?alternateName WHERE {
  ?band dbo:performer dbr:Dizzy_Gillespie .
  ?band dbo:performer ?member .
  OPTIONAL { ?member foaf:name ?alternateName . }
  FILTER(?alternateName != """")
}
```",2,2,3,1,2,2,3,28,0,0,8,0,0.0,0
41,5,train,"Who is the work, that is an office holder, of yes?","SELECT ?result WHERE { ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?result <http://dbpedia.org/property/author> ""yes""@en . }","```sparql
SELECT ?work WHERE {
  ?work dbo:genre dbr:Political_comedy .
  ?work rdfs:label ""Yes Minister""@en .
}
```",1,2,2,1,1,2,3,28,0,0,59,0,0.0,0
773,8,train,"Give me the child, that is a royalty, of Louis the German.",SELECT ?result WHERE { ?result <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Louis_the_German> . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?child ?title WHERE {
  ?person dbo:name ""Louis the German""@en.
  ?person dbo:child ?child.
  
  OPTIONAL { 
    ?child dbo:royalTitle ?title.
  }
  
  FILTER EXISTS { ?child dbo:royalTitle ?title }
}
```",1,2,2,1,1,3,3,71,0,0,3,0,0.0,0
124,3,train,"Give me the reference, that is Australian and an organisation and a military unit, to 'A' Battery, Royal Australian Artillery.","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Australia>. ?result <http://xmlns.com/foaf/0.1/name> ""'A' Battery, Royal Australian Artillery""@en . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryUnit>. }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?battery WHERE {
  ?battery a dbo:MilitaryUnit ;
           rdfs:label ?label ;
           dbo:country dbr:Australia .
  FILTER(CONTAINS(LCASE(?label), ""a battery royal australian artillery""))
}
```",1,4,2,1,1,3,3,71,0,0,1,0,0.0,0
791,18,train,Give me the spouse of Taira no Tokuko and father of Emperor Go-Toba and predecessor of Emperor Antoku.,SELECT ?result WHERE { <http://dbpedia.org/resource/Emperor_Go-Toba> <http://dbpedia.org/property/father> ?result . ?result <http://dbpedia.org/ontology/successor> <http://dbpedia.org/resource/Emperor_Antoku> . ?result <http://dbpedia.org/ontology/spouse> <http://dbpedia.org/resource/Taira_no_Tokuko> . },"```sparql
SELECT ?person WHERE {
  ?person dbo:spouse dbr:Taira_no_Tokuko .
  ?person dbo:child dbr:Emperor_Go-Toba .
  ?emperor1 dbo:predecessor dbr:Emperor_Antoku .
  ?emperor2 dbo:successor dbr:Emperor_Antoku .
  ?emperor1 rdfs:label ""Emperor Takakura""@en .
  ?person dbo:child ?emperor1 .
}
```",3,3,4,1,3,3,3,71,0,0,1,0,0.0,0
892,14,train,"Give me the entity in the administration, that is Italian and a region and a settlement and an administrative region, of Democratic Party (Italy).",SELECT ?result WHERE { ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Region>. ?result <http://dbpedia.org/ontology/province> ?v0 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/AdministrativeRegion>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. ?v0 <http://dbpedia.org/property/leaderParty> <http://dbpedia.org/resource/Democratic_Party_(Italy)> . ?v0 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Italy>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?region WHERE {
  ?region a dbo:Region .
  ?region a dbo:Settlement .
  ?region dbo:country dbr:Italy .
  ?region dbo:administrativeRegion true .
  OPTIONAL { 
    ?party dbo:member ?person .
    ?person dbo:memberOf ?region .
    ?party rdfs:label ""Democratic Party (Italy)""@en .
  }
}
```",2,6,3,2,1,3,3,71,0,0,587,0,0.0,0
124,7,train,Who is the person born on 1850-06-24?,"SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/birthDate> ""1850-06-24""^^<http://www.w3.org/2001/XMLSchema#date> . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX xsd: <http://www.w3.org/2001/XMLSchema#>

SELECT ?person ?name WHERE {
  ?person a dbo:Person .
  ?person dbo:birthDate ?date .
  FILTER (YEAR(?date) = 1850 && MONTH(?date) = 6 && DAY(?date) = 24)
  OPTIONAL { ?person foaf:name ?name . }
}
ORDER BY ?name
```",1,1,2,1,1,3,3,71,2,2,0,0.5,1.0,0.6666666666666666
122,0,train,Give me the band member of Lyrics Born.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/associatedMusicalArtist> <http://dbpedia.org/resource/Lyrics_Born> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?band ?memberName WHERE {
  VALUES ?lyricsBorn { dbr:Lyrics_Born }
  
  ?band dbo:bandMember ?lyricsBorn .
  ?band dbo:name ?bandName .
  ?lyricsBorn foaf:name ?memberName .
}
```",1,1,2,1,1,2,2,9,0,0,7,0,0.0,0
158,6,train,Give me the party of Théodore Steeg and entity in France.,SELECT ?result WHERE { <http://dbpedia.org/resource/Théodore_Steeg> <http://dbpedia.org/ontology/party> ?result . ?result <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/France> . },"```sparql
PREFIX dbp: <http://dbpedia.org/property/>
PREFIX dbo: <http://dbpedia.org/ontology/>

SELECT ?party ?role WHERE {
  ?steeg a dbo:Person ;
         foaf:name ""Théodore Steeg""@en .
  
  OPTIONAL { ?steeg dbp:party ?party . }
  OPTIONAL { ?steeg dbo:positionHeld ?role . 
             ?role dbo:country dbr:France . }
}
```",2,2,3,1,2,3,2,20,1,0,0,1.0,1.0,1.0
18,11,train,"Give me the alumnus of the figure known, that is an educational institution, as Saints.","SELECT ?result WHERE { ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/EducationalInstitution>. ?result <http://dbpedia.org/ontology/almaMater> ?v0 . ?v0 <http://dbpedia.org/property/nickname> ""Saints""@en . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?alumnus WHERE {
  VALUES ?institution { dbr:University_of_San_Diego }
  ?alumnus dbo:almaMater ?institution .
}
```",2,3,3,2,1,2,3,28,0,37,21,0.0,0.0,0
433,18,train,Give me the associated musical artist of Paul Chambers and associated musical artist of Bill Evans and professional in Musician.,"SELECT ?result WHERE { <http://dbpedia.org/resource/Bill_Evans> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . <http://dbpedia.org/resource/Paul_Chambers> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?result <http://dbpedia.org/property/occupation> ""Musician""@en . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?artist WHERE {
  # Find associated musical artists of Paul Chambers
  ?paulChambersArtist dbo:associatedMusicalArtist dbr:Paul_Chambers .
  
  # Find associated musical artists of Bill Evans
  ?billEvansArtist dbo:associatedMusicalArtist dbr:Bill_Evans .

  # Ensure the artist is the same for both Paul Chambers and Bill Evans
  FILTER (?paulChambersArtist = ?billEvansArtist)

  # Ensure the artist is a musician
  ?artist dbo:occupation dbr:Musician .
  
  # Link the artist to the associated musical artists found above
  ?artist dbo:associatedMusicalArtist ?paulChambersArtist ;
          dbo:associatedMusicalArtist ?billEvansArtist .
}
```",3,3,4,1,3,3,3,71,0,0,1,0,0.0,0
417,7,train,"Who is the parent, that is a royalty, of Alexandrine of Mecklenburg-Schwerin?",SELECT ?result WHERE { ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. <http://dbpedia.org/resource/Alexandrine_of_Mecklenburg-Schwerin> <http://dbpedia.org/ontology/parent> ?result . },"```sparql
SELECT ?parent ?title WHERE {
  ?alex dbp:birthName ""Alexandrine of Mecklenburg-Schwerin""@en .
  ?alex dbo:parent ?parent .

  OPTIONAL { 
    ?parent dbo:title ?title .
    FILTER(CONTAINS(LCASE(?title), ""king"") || CONTAINS(LCASE(?title), ""queen"") || CONTAINS(LCASE(?title), ""prince"") || CONTAINS(LCASE(?title), ""princess""))
  }
}
```",1,2,2,1,1,3,3,71,0,0,2,0,0.0,0
326,12,train,"Give me the person decedent at the award, that is a country, of Adelbert Cronkhite and resident of Berkshire.",SELECT ?result WHERE { ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. <http://dbpedia.org/resource/Adelbert_Cronkhite> <http://dbpedia.org/property/awards> ?v0 . ?result <http://dbpedia.org/property/residence> <http://dbpedia.org/resource/Berkshire> . ?result <http://dbpedia.org/ontology/deathPlace> ?v0 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?recipient WHERE {
  ?award dbo:country dbr:Adelbert_Cronkhite .
  ?award dbo:recipient ?recipient .
  ?recipient dbo:residence dbr:Berkshire .
}
```",3,4,4,2,2,3,2,20,0,0,1,0,0.0,0
445,1,train,Give me the death place of Patrick Moore.,SELECT ?result WHERE { <http://dbpedia.org/resource/Patrick_Moore> <http://dbpedia.org/ontology/deathPlace> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?deathPlace WHERE {
  dbr:Patrick_Moore dbo:deathPlace ?deathPlace .
}
```",1,1,2,1,1,3,3,71,2,0,0,1.0,1.0,1.0
192,6,train,"Give me the child of Mary of Hungary, Queen of Naples and spouse of Clemence of Austria.","SELECT ?result WHERE { <http://dbpedia.org/resource/Clemence_of_Austria> <http://dbpedia.org/ontology/spouse> ?result . ?result <http://dbpedia.org/ontology/parent> <http://dbpedia.org/resource/Mary_of_Hungary,_Queen_of_Naples> . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>

SELECT ?child WHERE {
  ?child dbo:mother dbr:Maria_of_Hungary_(1270–1335) .
  OPTIONAL { ?child dbo:parent dbr:Clemence_of_Austria . }
}
```",2,2,3,1,2,3,2,20,0,0,1,0,0.0,0
273,4,train,Give me the reference to Università degli Studi di Torino.,"SELECT ?result WHERE { ?result <http://xmlns.com/foaf/0.1/name> ""Università degli Studi di Torino""@en . }","```sparql
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?entity WHERE {
  ?entity rdfs:label ""Università degli Studi di Torino""@it .
}
```",1,1,2,1,1,3,2,20,0,0,1,0,0.0,0
773,24,train,Give me the parent of the successor of Charles the Bald and parent of Charles the Fat.,SELECT ?result WHERE { <http://dbpedia.org/resource/Charles_the_Bald> <http://dbpedia.org/ontology/successor> ?v2 . ?result <http://dbpedia.org/ontology/child> ?v2 . <http://dbpedia.org/resource/Charles_the_Fat> <http://dbpedia.org/ontology/parent> ?result . },"```sparql
SELECT ?successorParent ?fatParent WHERE {
  # Find Charles the Bald's successor
  ?charlesTheBald dbo:spouse ?successor .
  ?successor foaf:name ""Louis II of Italy""@en .
  
  # Get the parent of Louis II of Italy (Charles the Bald's successor)
  ?successor dbo:parent ?successorParent .

  # Find Charles the Fat
  ?charlesTheFat foaf:name ""Charles the Fat""@en .

  # Get the parent of Charles the Fat
  ?charlesTheFat dbo:parent ?fatParent .
}
```",3,3,4,2,2,3,3,71,0,0,2,0,0.0,0
527,0,train,Give me the actor of The Book Tower.,SELECT ?result WHERE { <http://dbpedia.org/resource/The_Book_Tower> <http://dbpedia.org/property/starring> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?actor WHERE {
  ?film rdfs:label ""The Book Tower""@en .
  ?film dbo:starring ?actor .
}
```",1,1,2,1,1,3,2,20,7,0,0,1.0,1.0,1.0
917,5,train,"Who is the spouse, that is a royalty, of Leleiohoku I?",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/spouse> <http://dbpedia.org/resource/Leleiohoku_I> . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?spouseName WHERE {
  ?person a dbo:Person ;
          foaf:name ""Leleiohoku I""@en .
  ?person dbo:spouse ?spouse .
  ?spouse foaf:name ?spouseName .
  OPTIONAL { 
    ?spouse dbo:title ?title .
    FILTER(CONTAINS(LCASE(?title), ""royalty""))
  }
}
```",1,2,2,1,1,3,3,71,0,0,2,0,0.0,0
573,26,train,"Give me the person decedent at the residence, that is a settlement, of the professional, that is American, in Politician.","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/deathPlace> ?v2 . ?v1 <http://dbpedia.org/property/occupation> ""Politician""@en . ?v1 <http://dbpedia.org/ontology/nationality> <http://dbpedia.org/resource/United_States>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. ?v1 <http://dbpedia.org/property/residence> ?v2 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT DISTINCT ?politician ?residence ?decedent WHERE {
  ?politician a dbo:Politician ;
             dbo:nationality dbr:United_States .
  
  ?politician dbo:residencePlace ?residence .
  FILTER (dbo:Settlement ?residence) .

  ?deathEvent dbo:place ?residence ;
              dbo:agent ?decedent .
}
```",3,5,4,3,1,3,3,71,0,0,6537,0,0.0,0
773,1,train,Give me the parent of Carloman of Bavaria.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Carloman_of_Bavaria> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>

SELECT ?parent WHERE {
  ?person rdfs:label ""Carloman of Bavaria""@en .
  ?person dbo:parent ?parent .
}
```",1,1,2,1,1,3,3,71,2,0,0,1.0,1.0,1.0
933,19,train,Give me the reference to Alan Warner and band of the band of Alan Warner (musician).,"SELECT ?result WHERE { ?result <http://xmlns.com/foaf/0.1/name> ""Alan Warner""@en . <http://dbpedia.org/resource/Alan_Warner_(musician)> <http://dbpedia.org/ontology/associatedMusicalArtist> ?v2 . ?v2 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?reference ?band 
WHERE {
  VALUES ?alanWarner { dbr:Alan_Warner_(musician) }
  
  ?alanWarner a dbo:MusicArtist ;
              dbo:wikiPageWikiLink ?reference .
  
  OPTIONAL {
    ?alanWarner dbo:band ?band .
  }
}
```",3,3,4,2,2,3,3,71,0,0,1,0,0.0,0
192,7,train,"Give me the spouse of the spouse, that is a royalty, of Charles Martel of Anjou.",SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/spouse> <http://dbpedia.org/resource/Charles_Martel_of_Anjou> . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v1 <http://dbpedia.org/ontology/spouse> ?result . },"```sparql
SELECT ?spouseOfSpouse WHERE {
  ?charles a dbo:Person ;
           foaf:name ""Charles Martel of Anjou""@en .
  
  ?charles dbo:spouse ?spouse .

  ?spouse dbo:spouse ?spouseOfSpouse .

  OPTIONAL { 
    ?spouseOfSpouse dbo:title ?title .
    FILTER(CONTAINS(LCASE(?title), ""royalty""))
  }
}
```",2,3,3,2,1,3,2,20,1,0,0,1.0,1.0,1.0
933,20,train,Give me the reference to the birth name of Alan Warner (musician) and band of Mike Elliott (saxophonist).,SELECT ?result WHERE { <http://dbpedia.org/resource/Mike_Elliott_(saxophonist)> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?result <http://xmlns.com/foaf/0.1/name> ?v1 . <http://dbpedia.org/resource/Alan_Warner_(musician)> <http://dbpedia.org/property/birthName> ?v1 . },"```sparql
SELECT ?birthName ?band WHERE {
  # Query for Alan Warner's birth name
  {
    ?person a dbo:Musician ;
            foaf:name ""Alan Warner"" .
    OPTIONAL { ?person foaf:givenName ?birthName . }
  }

  UNION

  # Query for Mike Elliott's band
  {
    ?musician a dbo:Saxophonist ;
              foaf:name ""Mike Elliott"" .
    OPTIONAL { ?musician dbp:band ?band . }
  }
}
```",3,3,4,2,2,3,3,71,0,0,1,0,0.0,0
582,20,train,"Give me the reference to Japan and player in the father, that is an athlete and a soccer manager and a sports manager, of Masami Nagasawa.","SELECT ?result WHERE { ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerManager>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Athlete>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsManager>. ?result <http://xmlns.com/foaf/0.1/name> ""Japan""@en . ?v2 <http://dbpedia.org/ontology/team> ?result . <http://dbpedia.org/resource/Masami_Nagasawa> <http://dbpedia.org/property/father> ?v2 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?father ?nationality WHERE {
  ?masami a dbo:Person ;
          foaf:name ""Masami Nagasawa""@en .
  ?masami dbo:father ?father .

  ?father a dbo:Athlete, dbo:SoccerManager, dbo:SportsManager .

  OPTIONAL { ?father dbp:nationality ?nationality . }
  
  FILTER(CONTAINS(LCASE(?nationality), ""japan"") || CONTAINS(LCASE(?nationality), ""japanese""))
}
```",3,6,4,2,2,3,3,71,0,0,1,0,0.0,0
417,4,train,"Who is the parent, that is a royalty, of Count Ingolf of Rosenborg?",SELECT ?result WHERE { ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?result <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Count_Ingolf_of_Rosenborg> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>

SELECT ?parent WHERE {
  ?count dbo:parent ?parent .
  FILTER EXISTS { ?count rdfs:label ""Count Ingolf of Rosenborg""@en }
  OPTIONAL { ?parent dbo:royalTitle ?title . }
  FILTER NOT EXISTS { ?parent dbo:royalTitle = """" }
}
```",1,2,2,1,1,3,3,71,0,0,2,0,0.0,0
212,5,train,"Give me the birthplace of the professional, that is a musical artist and an artist, in Singer, rapper, CEO, Facilities and Project Manager.","SELECT ?result WHERE { ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?v0 <http://dbpedia.org/property/occupation> ""Singer, rapper, CEO, Facilities and Project Manager""@en . ?v0 <http://dbpedia.org/ontology/birthPlace> ?result . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. }","```sparql
SELECT ?birthPlace WHERE {
  wd:Q1376 dbo:birthPlace ?birthPlace .
}
```",2,4,3,2,1,2,2,9,0,0,1,0,0.0,0
445,36,train,Give me the entity in the award of the commander in Battle of Saint-Mihiel and entity in England.,SELECT ?result WHERE { ?v0 <http://dbpedia.org/property/awards> ?v1 . ?result <http://dbpedia.org/ontology/location> <http://dbpedia.org/resource/England> . ?result <http://dbpedia.org/ontology/country> ?v1 . <http://dbpedia.org/resource/Battle_of_Saint-Mihiel> <http://dbpedia.org/ontology/commander> ?v0 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?commander ?entityInEngland WHERE {
  # Find the commander associated with the Battle of Saint-Mihiel
  ?battle dbo:participated John_J._Pershing .
  ?battle dbo:name ""Battle of Saint-Mihiel"" .
  ?battle dbo:commander ?commander .

  # Find an entity located in England
  ?entityInEngland dbo:location dbr:England .
}
```",4,4,5,3,2,3,3,71,0,0,102,0,0.0,0
645,2,train,Give me the leader of Ministry of the Army (Spain).,SELECT ?result WHERE { <http://dbpedia.org/resource/Ministry_of_the_Army_(Spain)> <http://dbpedia.org/ontology/leader> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?minister WHERE {
  ?ministry a dbo:GovernmentMinistry ;
            dbo:country dbr:Spain ;
            rdfs:label ""Ministry of Defence (Spain)""@en .
  
  ?minister dbo:ministerOf ?ministry ;
            foaf:name ?name .

  FILTER(LANG(?name) = 'en')
}
```",1,1,2,1,1,3,3,71,0,0,1,0,0.0,0
83,3,train,"Who is the person born, that is an athlete, on 1991-11-19?","SELECT ?result WHERE { ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Athlete>. ?result <http://dbpedia.org/ontology/birthDate> ""1991-11-19""^^<http://www.w3.org/2001/XMLSchema#date> . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?person ?name WHERE {
  ?person a dbo:Athlete .
  ?person dbo:birthDate ""1991-11-19""^^xsd:date .
  OPTIONAL { ?person foaf:name ?name . }
}
```",1,2,2,1,1,2,2,9,30,31,0,0.4918032786885246,1.0,0.6593406593406593
98,1,train,Give me the child of Emperor Go-Shirakawa.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/parent> <http://dbpedia.org/resource/Emperor_Go-Shirakawa> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?child WHERE {
  ?person dbo:parent dbr:Emperor_Go-Shirakawa .
  ?person dbo:child ?child .
}
```",1,1,2,1,1,2,2,9,0,3,3,0.0,0.0,0
47,16,train,"Give me the awardee of the award, that is an award, of Mantu Ghosh.",SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Award>. <http://dbpedia.org/resource/Mantu_Ghosh> <http://dbpedia.org/property/awards> ?v1 . ?result <http://dbpedia.org/property/awards> ?v1 . },"```sparql
SELECT ?award ?otherRecipient WHERE {
  ?person foaf:name ""Mantu Ghosh"" .
  ?person dbo:awardsReceived ?award .
  ?award dbo:recipient ?otherRecipient .
  FILTER(?otherRecipient != ?person)
}
```",2,3,3,2,1,3,3,71,0,0,11,0,0.0,0
5,0,train,Give me the birthplace of Gerald Regan.,SELECT ?result WHERE { <http://dbpedia.org/resource/Gerald_Regan> <http://dbpedia.org/ontology/birthPlace> ?result . },"```sparql
SELECT ?birthPlace WHERE {
  ?person foaf:name ""Gerald Regan""@en .
  ?person dbo:birthPlace ?birthPlace .
}
```",1,1,2,1,1,3,2,20,1,0,0,1.0,1.0,1.0
445,22,train,Give me the entity in the award of George H. Cameron and entity in England.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/location> <http://dbpedia.org/resource/England> . ?result <http://dbpedia.org/ontology/country> ?v1 . <http://dbpedia.org/resource/George_H._Cameron> <http://dbpedia.org/property/awards> ?v1 . },"```sparql
# Query to find the award associated with George H. Cameron
SELECT ?award WHERE {
  ?recipient foaf:name ""George H. Cameron""@en .
  ?recipient dbo:receivedAward ?award .
}

UNION

# Query to find an entity located in England
SELECT ?entity WHERE {
  ?entity dbp:country ""England"" .
}
```",3,3,4,2,2,3,3,71,0,0,102,0,0.0,0
445,37,train,Give me the entity in United Kingdom and death place of the awardee of the establishment of 1820-03-10.,"SELECT ?result WHERE { ?v3 <http://dbpedia.org/ontology/deathPlace> ?result . ?v3 <http://dbpedia.org/property/awards> ?v0 . ?result <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/United_Kingdom> . ?v0 <http://dbpedia.org/ontology/foundingDate> ""1820-03-10""^^<http://www.w3.org/2001/XMLSchema#date> . }","```sparql
SELECT ?award ?awardee ?deathPlace ?ukEntity WHERE {
  # Step 1: Identify the establishment with creation date 1820-03-10
  ?establishment dbp:dateEstablished ""1820-03-10""^^xsd:date .
  
  # Step 2: Find awards given by this establishment
  ?award dbo:awardedBy ?establishment .

  # Step 3: Identify the awardee of these awards
  ?award dbo:recipient ?awardee .

  # Step 4: Get death place of the awardee
  OPTIONAL { ?awardee dbo:deathPlace ?deathPlace . }

  # Step 5: Find any related entity in the United Kingdom
  OPTIONAL {
    ?ukEntity dbo:country dbr:United_Kingdom ;
              dbo:relatedTo ?awardee .
  }
}
```",4,4,5,3,2,3,3,71,0,0,2,0,0.0,0
124,2,train,Give me the military force of Battle of Atbara.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/battle> <http://dbpedia.org/resource/Battle_of_Atbara> . },"```sparql
PREFIX dbpedia-owl: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?force WHERE {
  ?battle a dbpedia-owl:Battle .
  ?battle rdfs:label ""Battle of Atbara""@en .
  OPTIONAL { ?battle dbp:combatant1 ?force . }
  OPTIONAL { ?battle dbp:combatant2 ?force . }
}
```",1,1,2,1,1,3,3,71,0,0,7,0,0.0,0
978,2,train,Give me the award of Michel Claparède.,SELECT ?result WHERE { <http://dbpedia.org/resource/Michel_Claparède> <http://dbpedia.org/property/awards> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?award WHERE {
  VALUES ?person { dbr:Michel_Claparède }
  ?person dbo:award ?award .
}
```",1,1,2,1,1,3,2,20,3,0,1,1.0,0.75,0.8571428571428571
102,4,train,"Give me the resident, that is an athlete, of Dewsbury.",SELECT ?result WHERE { ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Athlete>. ?result <http://dbpedia.org/ontology/residence> <http://dbpedia.org/resource/Dewsbury> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?athlete WHERE {
  ?athlete a dbo:Athlete .
  ?athlete dbo:residence dbp:Dewsbury .
}
```",1,2,2,1,1,3,2,20,0,0,2,0,0.0,0
273,5,train,Give me the alumnus of University of Turin.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/almaMater> <http://dbpedia.org/resource/University_of_Turin> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?alumnus WHERE {
  ?alumnus dbo:almaMater dbr:University_of_Turin .
}
```",1,1,2,1,1,3,2,20,141,0,0,1.0,1.0,1.0
445,39,train,Give me the death place of Patrick Moore and entity in the award of the commander in Battle of Saint-Mihiel.,SELECT ?result WHERE { <http://dbpedia.org/resource/Battle_of_Saint-Mihiel> <http://dbpedia.org/ontology/commander> ?v0 . ?v0 <http://dbpedia.org/property/awards> ?v1 . ?result <http://dbpedia.org/ontology/country> ?v1 . <http://dbpedia.org/resource/Patrick_Moore> <http://dbpedia.org/ontology/deathPlace> ?result . },"```sparql
# Query for Patrick Moore's death place
SELECT ?deathPlace WHERE {
  dbpedia:Patrick_Moore dbo:placeOfBirth ?birthPlace .
  dbpedia:Patrick_Moore dbo:deathPlace ?deathPlace .
}

# Query for an entity related to a commander awarded during the Battle of Saint-Mihiel
SELECT DISTINCT ?person ?award WHERE {
  ?battle dbo:wikiPageRedirects dbpedia:Battle_of_Saint-Mihiel .
  ?person dbo:awardsReceived ?award .
  ?award dbo:recipient ?person .
  FILTER(CONTAINS(LCASE(?award), ""commander""))
}
```",4,4,5,3,2,3,3,71,0,0,2,0,0.0,0
965,5,train,"Give me the person born, that is a politician, on 1854-05-24.","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/birthDate> ""1854-05-24""^^<http://www.w3.org/2001/XMLSchema#date> . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX xsd: <http://www.w3.org/2001/XMLSchema#>

SELECT ?person ?name WHERE {
  ?person a dbo:Person .
  ?person dbo:birthDate ?date .
  ?person foaf:name ?name .
  FILTER (YEAR(?date) = 1854 && MONTH(?date) = 5 && DAY(?date) = 24)
  OPTIONAL { ?person dbo:occupation dbr:Politician . }
}
```",1,2,2,1,1,3,3,71,2,6,0,0.25,1.0,0.4
715,7,train,Who is the reference to Carlos Franco Iribarnegaray?,"SELECT ?result WHERE { ?result <http://xmlns.com/foaf/0.1/name> ""Carlos Franco Iribarnegaray""@en . }","```sparql
PREFIX foaf: <http://xmlns.com/foaf/0.1/>
PREFIX dbo: <http://dbpedia.org/ontology/>

SELECT ?person ?name ?occupation ?birthDate WHERE {
  ?person a dbo:Person .
  ?person foaf:name ""Carlos Franco Iribarnegaray"" .
  OPTIONAL { ?person foaf:name ?name . }
  OPTIONAL { ?person dbo:occupation ?occupation . }
  OPTIONAL { ?person dbo:birthday ?birthDate . }
}
```",1,1,2,1,1,3,3,71,0,0,1,0,0.0,0
582,28,train,Give me the player in Kazuaki Nagasawa and reference to the residence of Hirotaka Sugawara and figure known as --10-19.,"SELECT ?result WHERE { <http://dbpedia.org/resource/Hirotaka_Sugawara> <http://dbpedia.org/property/residence> ?v1 . ?result <http://dbpedia.org/property/nickname> ""--10-19""^^<http://www.w3.org/2001/XMLSchema#gMonthDay> . ?result <http://xmlns.com/foaf/0.1/name> ?v1 . <http://dbpedia.org/resource/Kazuaki_Nagasawa> <http://dbpedia.org/ontology/team> ?result . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?playerTeam WHERE {
  ?nagasawa a dbo:Person ;
            foaf:name ""Kazuaki Nagasawa""@en .
  OPTIONAL { ?nagasawa dbo:sportsTeam ?playerTeam . }
}

UNION

SELECT ?residence WHERE {
  ?sugawara a dbo:Person ;
             foaf:name ""Hirotaka Sugawara""@en .
  OPTIONAL { ?sugawara dbo:residenceLocation ?residence . }
}
```",4,4,5,2,3,3,3,71,0,0,1,0,0.0,0
987,37,train,"Give me the entity in Montenegro and birth place of the actor of the show, that is a film, with Emir Hadžihafizbegović.",SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Film>. ?v1 <http://dbpedia.org/ontology/starring> <http://dbpedia.org/resource/Emir_Hadžihafizbegović> . ?result <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Montenegro> . ?v2 <http://dbpedia.org/ontology/birthPlace> ?result . ?v1 <http://dbpedia.org/property/starring> ?v2 . },"```sparql
# Step 1: Find a film featuring Emir Hadžihafizbegović
SELECT ?film WHERE {
  ?film dbo:starring <http://dbpedia.org/resource/Emir_Hadžihafizbegović> .
}

# Step 2: Identify the TV show based on one of these films (Grbavica)
SELECT ?tvShow WHERE {
  ?tvShow dbo:basedOnFilm <http://dbpedia.org/resource/Grbavica_(film)> .
}

# Step 3: Find the main actor from that TV show
SELECT DISTINCT ?actor WHERE {
  ?tvShow dbo:starring ?actor .
  FILTER NOT EXISTS { ?tvShow dbo:starring <http://dbpedia.org/resource/Emir_Hadžihafizbegović> }
}

# Step 4: Retrieve information about the actor's birthplace and connection to Montenegro
SELECT DISTINCT ?actor ?birthPlace ?montenegroEntity WHERE {
  VALUES ?actor { <INSERT_ACTOR_URI_HERE> } # Replace with actual URI of Mirjana Karanović after step 3

  OPTIONAL { ?actor dbo:birthPlace ?birthPlace . }
  OPTIONAL { ?actor foaf:nationality <http://dbpedia.org/resource/Montenegro> . }
  OPTIONAL { ?actor dbo:residence ?montenegroEntity .
             FILTER (CONTAINS(LCASE(STR(?montenegroEntity)), ""montenegro"")) }
}
```

Note: Replace `<INSERT_ACTOR_URI_HERE>` with the actual URI of Mirjana Karanović obtained from step 3.",4,5,5,3,2,3,3,71,0,0,2,0,0.0,0
47,36,train,"Give me the office of the awardee of the entity, that is an award, in India and office of Suvendu Adhikari.",SELECT ?result WHERE { ?v1 <http://dbpedia.org/property/awards> ?v0 . ?v0 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/India> . ?v1 <http://dbpedia.org/property/office> ?result . <http://dbpedia.org/resource/Suvendu_Adhikari> <http://dbpedia.org/property/office> ?result . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Award>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?suvenduOffice ?awardeeOffice WHERE {
  # Find the office of Suvendu Adhikari
  dbr:Suvendu_Adhikari dbo:office ?suvenduOffice .

  # Find awards located in India and their awardees' offices
  ?award dbo:location dbr:India .
  ?award dbo:recipient ?awardee .
  ?awardee dbo:office ?awardeeOffice .
}
```",4,5,5,3,2,3,3,71,0,0,3,0,0.0,0
955,9,train,"Give me the writer of the work, that is a work and an album and a musical work, of Matt Freeman.",SELECT ?result WHERE { ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Album>. ?v0 <http://dbpedia.org/property/writer> <http://dbpedia.org/resource/Matt_Freeman> . ?v0 <http://dbpedia.org/property/writer> ?result . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalWork>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?work ?writer WHERE {
  # Find the resource for Matt Freeman
  VALUES ?matt_freeman { dbr:Matt_Freeman_(musician) }
  
  # Identify works that are both albums and musical works associated with him
  ?work dbo:artist ?matt_freeman .
  ?work a ?type .
  FILTER (?type IN (dbo:Album, dbo:MusicalWork))
  
  # Retrieve the writer of these works
  OPTIONAL { ?work dbo:composer ?writer }
}
```",2,5,3,2,1,3,2,20,0,0,31,0,0.0,0
495,2,train,Give me the parent of Princess Catherine of Württemberg.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Princess_Catherine_of_Württemberg> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?parent WHERE {
  ?person dbp:name ""Catherine of Württemberg""@en .
  ?person dbo:parent ?parent .
}
```",1,1,2,1,1,3,2,20,0,0,2,0,0.0,0
274,11,train,"Give me the associated musical artist of the actor, that is a musical artist, of Imagine the Sound.",SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. <http://dbpedia.org/resource/Imagine_the_Sound> <http://dbpedia.org/property/starring> ?v1 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?actor ?musicArtist WHERE {
  # Find the actor associated with ""Imagine the Sound""
  ?film dbo:title ""Imagine the Sound"" .
  ?film dbo:starring ?actor .

  # Check if this actor is also a musical artist
  OPTIONAL { 
    ?actor dbo:occupation dbr:Musical_artist .
  }

  # If they are a musical artist, find associated artists
  OPTIONAL {
    ?actor dbo:associatedBandOrArtist ?musicArtist .
  }
  
  FILTER EXISTS { ?actor dbo:occupation dbr:Musical_artist . }
}
```",2,3,3,2,1,2,3,28,0,0,36,0,0.0,0
839,24,train,Give me the band of Matthias Röhr and band of the member of Böhse Onkelz.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/bandMember> <http://dbpedia.org/resource/Matthias_Röhr> . ?result <http://dbpedia.org/ontology/bandMember> ?v2 . <http://dbpedia.org/resource/Böhse_Onkelz> <http://dbpedia.org/ontology/bandMember> ?v2 . },"```sparql
# Query for Matthias Röhr's band
SELECT ?band WHERE {
  ?person foaf:name ""Matthias Röhr""@en .
  ?person dbo:memberOf ?band .
}

# Queries for Böhse Onkelz members and their bands
# Kevin Russell
SELECT ?band WHERE {
  ?person foaf:name ""Kevin Russell""@en .
  ?person dbo:memberOf ?onkelz .
  FILTER(?onkelz = dbpedia:de:Böhse_Onkelz)
  OPTIONAL { ?person dbo:memberOf ?band . }
}

# Peter Schorowsky
SELECT ?band WHERE {
  ?person foaf:name ""Peter Schorowsky""@en .
  ?person dbo:memberOf ?onkelz .
  FILTER(?onkelz = dbpedia:de:Böhse_Onkelz)
  OPTIONAL { ?person dbo:memberOf ?band . }
}

# Stephan Weidner
SELECT ?band WHERE {
  ?person foaf:name ""Stephan Weidner""@en .
  ?person dbo:memberOf ?onkelz .
  FILTER(?onkelz = dbpedia:de:Böhse_Onkelz)
  OPTIONAL { ?person dbo:memberOf ?band . }
}
```",3,3,4,2,2,3,3,71,0,0,1,0,0.0,0
216,11,train,Give me the player in the coach of Croatia national under-21 football team.,SELECT ?result WHERE { <http://dbpedia.org/resource/Croatia_national_under-21_football_team> <http://dbpedia.org/ontology/coach> ?v0 . ?v0 <http://dbpedia.org/ontology/team> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?coach WHERE {
  ?team rdfs:label ""Croatia national under-21 football team""@en .
  ?team dbo:coach ?coach .
}
```",2,2,3,2,1,3,3,71,0,1,6,0.0,0.0,0
892,23,train,Give me the entity in the profession of the true self of Enrico Crolla.,"SELECT ?result WHERE { ?v1 <http://xmlns.com/foaf/0.1/givenName> ""Enrico Crolla""@en . ?result <http://dbpedia.org/ontology/country> ?v2 . ?v1 <http://dbpedia.org/property/occupation> ?v2 . }","```sparql
SELECT ?entity WHERE {
  wd:Q12345 rdfs:label ""Enrico Crolla""@en .
  ?entity wdt:P106 wd:Q134428 . # P106 is the property for occupation
  ?entity wdt:P735 wd:Q12345 .   # P735 is the property for stage name
}
```

Note: In this query, `wd:Q12345` should be replaced with the actual DBpedia resource identifier for Enrico Crolla. Similarly, `wd:Q134428` represents the occupation ""operatic tenor"" in DBpedia.",3,3,4,3,1,3,3,71,0,0,13092,0,0.0,0
456,39,train,"Give me the band of the band, that is a musical artist, of the band of Alan Doyle and professional in .","SELECT ?result WHERE { <http://dbpedia.org/resource/Alan_Doyle> <http://dbpedia.org/ontology/associatedMusicalArtist> ?v0 . ?result <http://dbpedia.org/property/occupation> """"@en . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?v0 <http://dbpedia.org/ontology/associatedMusicalArtist> ?v1 . ?v1 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . }","```sparql
SELECT ?band2 ?member WHERE {
  # Find Alan Doyle's association with Great Big Sea
  ?person rdfs:label ""Alan Doyle""@en .
  ?person dbo:memberOf ?group1 .
  ?group1 rdfs:label ""Great Big Sea""@en .

  # Determine the genre of Great Big Sea
  ?group1 dbo:musicalGenre ?genre .
  FILTER(?genre = dbpedia:Folk_rock)

  # Find another band in the same genre and its members
  ?group2 a dbo:Band ;
          dbo:musicalGenre ?genre .

  ?member dbo:memberOf ?group2 .
  ?member rdfs:label ?bandMemberLabel .
  
  FILTER(?group1 != ?group2)
}
```",4,5,5,3,2,3,3,71,0,0,1,0,0.0,0
865,4,train,"Give me the residence, that is a country, of Ram Jaipal Singh Yadav.",SELECT ?result WHERE { <http://dbpedia.org/resource/Ram_Jaipal_Singh_Yadav> <http://dbpedia.org/property/residence> ?result . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>

SELECT ?residence WHERE {
  ?person a dbo:Person ;
          foaf:name ""Ram Jaipal Singh Yadav""@en .
  
  ?person dbo:residence ?residence .

  FILTER EXISTS { 
    ?residence rdf:type dbo:Country .
  }
}
```",1,2,2,1,1,3,3,71,1,0,0,1.0,1.0,1.0
456,16,train,"Give me the alter ego of the reference, that is a fictional character, to Lamont Cranston (radio, film and television).","SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/FictionalCharacter>. ?v1 <http://xmlns.com/foaf/0.1/name> ""Lamont Cranston (radio, film and television)""@en . ?v1 <http://dbpedia.org/property/alterEgo> ?result . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?alias WHERE {
  dbr:Lamont_Cranston dbo:alsoKnownAs ?alias .
}
```",2,3,3,2,1,3,3,71,0,0,3,0,0.0,0
645,17,train,"Give me the office, that is a government agency and an organisation, of the native of Restoration (Spain).",SELECT ?result WHERE { ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/GovernmentAgency>. ?v1 <http://dbpedia.org/property/office> ?result . ?v1 <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Restoration_(Spain)> . },"```sparql
SELECT ?office WHERE {
  ?person dbo:nationality dbr:Spain .
  ?person dbo:birthPlace dbr:Alcoy .
  ?person foaf:name ""Antonio Maura""@en .
  ?person dbo:occupation dbr:Prime_Minister_of_Spain .
  ?person dbo:positionHeld ?office .
  ?office rdf:type dbp:Government_Agency ;
          rdf:type dbp:Organization .
}
```",2,4,3,2,1,3,3,71,0,0,15,0,0.0,0
129,5,train,Give me the person born as Tahj Malik Chandler.,"SELECT ?result WHERE { ?result <http://dbpedia.org/property/birthName> ""Tahj Malik Chandler""@en . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT ?person ?commonName ?birthDate WHERE {
  ?person a dbo:Person ;
          foaf:name ""Tahj Malik Chandler""@en .
  OPTIONAL { ?person foaf:name ?commonName . }
  OPTIONAL { ?person dbo:birthDate ?birthDate . }
}
```",1,1,2,1,1,2,3,28,0,0,1,0,0.0,0
274,16,train,"Give me the band member of Dizzy Gillespie and associated musical artist of the actor, that is a musical artist, of Imagine the Sound.",SELECT ?result WHERE { ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?v2 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . <http://dbpedia.org/resource/Imagine_the_Sound> <http://dbpedia.org/property/starring> ?v2 . ?result <http://dbpedia.org/ontology/associatedMusicalArtist> <http://dbpedia.org/resource/Dizzy_Gillespie> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?bandMember ?actor ?musicalArtist WHERE {
  # Find band members of Dizzy Gillespie
  ?gillespie dbr:Dizzy_Gillespie .
  ?gillespie dbo:musicalArtist ?bandMember .

  # Find actors from ""Imagine the Sound""
  ?movie dbr:Imagine_the_Sound .
  ?movie dbo:starring ?actor .

  # Check if actor is also a musical artist
  ?actor dbo:musicalArtist ?musicalArtist .

  # Ensure the musical artist is the same as the band member of Dizzy Gillespie
  FILTER (?bandMember = ?musicalArtist)
}
```",3,4,4,2,2,2,3,28,0,0,4,0,0.0,0
791,37,train,"Give me the father of Emperor Go-Toba and predecessor of the child of the child, that is an office holder and a royalty, of Emperor Go-Shirakawa.",SELECT ?result WHERE { <http://dbpedia.org/resource/Emperor_Go-Toba> <http://dbpedia.org/property/father> ?result . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v0 <http://dbpedia.org/ontology/parent> <http://dbpedia.org/resource/Emperor_Go-Shirakawa> . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?result <http://dbpedia.org/ontology/successor> ?v3 . ?v3 <http://dbpedia.org/property/father> ?v0 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?father ?predecessor WHERE {
  # Emperor Go-Toba's father
  dbr:Emperor_Go-Toba dbo:father ?father .
  
  # Emperor Go-Shirakawa's child and grandchild
  dbr:Emperor_Go-Shirakawa dbo:child ?child .
  ?child dbo:child ?grandchild .
  
  # Ensure the grandchild is an office holder and royalty
  ?grandchild a dbo:Monarch ;
              dbo:officeHolder ?office .

  # Find the predecessor of this grandchild
  ?predecessor dbo:succeededBy ?grandchild .

  # Check if the father of Go-Toba is connected to the predecessor
  FILTER(?father = ?predecessor)
}
```",4,6,5,3,2,3,3,71,0,0,1,0,0.0,0
47,25,train,Give me the office of the awardee of Padma Vibhushan and office of Bidesh Ranjan Bose.,SELECT ?result WHERE { <http://dbpedia.org/resource/Bidesh_Ranjan_Bose> <http://dbpedia.org/property/office> ?result . ?v1 <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/Padma_Vibhushan> . ?v1 <http://dbpedia.org/property/office> ?result . },"```sparql
# Query for offices of Padma Vibhushan awardees
SELECT DISTINCT ?person ?office WHERE {
  ?person dbo:award dbr:Padma_Vibhushan .
  ?person dbo:office ?office .
}

# Query for the office of Bidesh Ranjan Bose
SELECT ?office WHERE {
  dbp:Bidesh_Ranjan_Bose dbo:office ?office .
}
```",3,3,4,2,2,3,3,71,0,0,1,0,0.0,0
888,11,train,"Give me the commander in the force, that is a societal event and an event, of Serhiy Kotenko and awardee of Hero of Ukraine.","SELECT ?result WHERE { ?v2 <http://dbpedia.org/ontology/commander> ?result . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?result <http://dbpedia.org/property/awards> ""Hero of Ukraine""@en . ?v2 <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Serhiy_Kotenko> . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?commander WHERE {
  # Find Serhiy Kotenko's involvement in an event or force
  ?event dbo:participant dbr:Serhiy_Kotenko .
  
  # Identify commanders associated with the same event or force
  ?event dbo:commander ?commander .

  # Ensure the commander is a Hero of Ukraine
  ?commander dbo:honoraryTitle dbr:Hero_of_Ukraine .

  # Check for societal events linked to the commander
  ?societalEvent dbo:participant ?commander .
  
  # Check for other relevant events linked to the commander
  ?otherEvent dbo:participant ?commander .
}
```",3,5,4,2,2,3,2,20,0,0,1,0,0.0,0
573,32,train,"Give me the person decedent at the residence, that is a settlement, of William J. Phelan and person decedent at the administration, that is a region, of Charlie Baker.","SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Region>. ?result <http://dbpedia.org/ontology/deathPlace> ?v3 . <http://dbpedia.org/resource/William_J._Phelan> <http://dbpedia.org/property/residence> ?v3 . ?result <http://dbpedia.org/ontology/deathPlace> ?v1 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. ?v1 <http://dbpedia.org/property/governor> ""Charlie Baker""@en . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?personDecedentPhelan ?personDecedentBaker WHERE {
  # Find the residence of William J. Phelan that is a settlement
  ?residence dbo:resident dbr:William_J._Phelan .
  ?residence rdf:type dbo:Settlement .

  # Find person decedent at this residence
  ?personDecedentPhelan dbo:deceasedAt ?residence .

  # Find the administration of Charlie Baker that is a region
  ?administration dbo:administrator dbr:Charlie_Baker .
  ?administration rdf:type dbo:Region .

  # Find person decedent at this administration
  ?personDecedentBaker dbo:deceasedAt ?administration .
}
```",4,6,5,2,2,3,3,71,0,0,4,0,0.0,0
645,20,train,"Give me the commander in Battle of Jarama and military force of the force, that is an event and a military conflict and a societal event, of Francisco Largo Caballero.",SELECT ?result WHERE { <http://dbpedia.org/resource/Battle_of_Jarama> <http://dbpedia.org/ontology/commander> ?result . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?v2 <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Francisco_Largo_Caballero> . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?result <http://dbpedia.org/ontology/battle> ?v2 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?commander ?militaryForce WHERE {
  # Identify the Battle of Jarama as a military conflict and societal event
  dbr:Battle_of_Jarama 
    dbo:type ?type1, ?type2 .
  
  FILTER (?type1 = dbo:MilitaryConflict && ?type2 = dbo:SocietalEvent)

  # Find Francisco Largo Caballero's association with the Battle of Jarama
  OPTIONAL { 
    dbr:Francisco_Largo_Caballero dbo:associatedWith dbr:Battle_of_Jarama .
  }

  # Retrieve commander and military force involved in the battle
  ?battle dbo:commander ?commander ;
          dbo:militaryForce ?militaryForce .

  FILTER (?battle = dbr:Battle_of_Jarama)
}
```",3,6,4,2,2,3,3,71,0,0,6,0,0.0,0
773,4,train,Give me the father of Charles the Fat.,SELECT ?result WHERE { <http://dbpedia.org/resource/Charles_the_Fat> <http://dbpedia.org/property/father> ?result . },"```sparql
SELECT ?father WHERE {
  dbpedia:Charles_the_Fat dbo:father ?father .
}
```",1,1,2,1,1,3,3,71,0,0,1,0,0.0,0
98,0,train,Give me the region of Philippine Standard Time.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/timeZone> <http://dbpedia.org/resource/Philippine_Standard_Time> . },"```sparql
SELECT ?region WHERE {
  ?timeZone dcterms:isPartOf ?country .
  ?country rdfs:label ""Philippines""@en .
  ?timeZone rdfs:label ""Philippine Standard Time""@en .
}
```",1,1,2,1,1,2,3,28,0,0,1874,0,0.0,0
865,30,train,Give me the father of AK Abdul Momen and native of British Raj and father of the child of Abu Ahmad Abdul Hafiz.,SELECT ?result WHERE { ?v1 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Abu_Ahmad_Abdul_Hafiz> . <http://dbpedia.org/resource/AK_Abdul_Momen> <http://dbpedia.org/property/father> ?result . ?v1 <http://dbpedia.org/property/father> ?result . ?result <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/British_Raj> . },"```sparql
# Step 1: Get the father of AK Abdul Momen
SELECT ?father WHERE {
    wd:Q1234567 foaf:parent ?father .
}

# Step 2: Get Abu Ahmad Abdul Hafiz's child and then find that child's father
SELECT DISTINCT ?childFather WHERE {
    ?child dbo:parent wd:Q2345678 . # Assuming Q2345678 is the DBpedia ID for Abu Ahmad Abdul Hafiz
    ?child foaf:parent ?childFather .
}

# Step 3: Find the common individual who is both fathers and a native of British Raj
SELECT DISTINCT ?commonFather WHERE {
    { wd:Q1234567 foaf:parent ?commonFather . } # Father of AK Abdul Momen
    UNION
    { ?childFather foaf:parent ?commonFather . } # Father of Abu Ahmad Abdul Hafiz's child
    FILTER EXISTS { ?commonFather dbo:nativePlace dbr:British_Raj }
}
```

Note: Replace `wd:Q1234567` with the actual DBpedia ID for AK Abdul Momen and `wd:Q2345678` with the actual DBpedia ID for Abu Ahmad Abdul Hafiz. The query assumes these IDs are known or can be found through a preliminary search.",4,4,5,2,3,3,3,71,0,0,1,0,0.0,0
102,1,train,Give me the native of Dewsbury.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Dewsbury> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?person ?name WHERE {
  {
    ?person dbo:birthPlace dbr:Dewsbury .
  } UNION {
    ?person dbo:hometown dbr:Dewsbury .
  }
  OPTIONAL { ?person foaf:name ?name . FILTER (lang(?name) = 'en') }
}
```",1,1,2,1,1,3,2,20,100,141,0,0.4149377593360996,1.0,0.5865102639296188
874,4,train,"Give me the band, that is an organisation, of Mark Read (singer).",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/bandMember> <http://dbpedia.org/resource/Mark_Read_(singer)> . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?band WHERE {
  ?markRead a dbo:Singer ;
            foaf:name ""Mark Read""@en .
  
  ?band a dbo:Band ;
        dbo:memberOrPerformer ?markRead .

  FILTER (lang(?bandLabel) = 'en')
}
```",1,2,2,1,1,3,2,20,0,0,2,0,0.0,0
445,23,train,"Give me the entity in the residence, that is a country, of the resident, that is an athlete, of Great Britain.",SELECT ?result WHERE { ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Athlete>. ?v2 <http://dbpedia.org/property/residence> <http://dbpedia.org/resource/Great_Britain> . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. ?result <http://dbpedia.org/ontology/location> ?v0 . ?v2 <http://dbpedia.org/property/residence> ?v0 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?athlete ?residenceCountry WHERE {
  ?athlete a dbo:Athlete ;
           dbo:nationality dbr:Great_Britain .
  
  OPTIONAL { 
    ?athlete dbo:residence ?residence .
    
    ?residence a dbo:Place ;
               rdfs:label ?residenceLabel .
    
    FILTER (lang(?residenceLabel) = 'en')
    
    # Check if the residence is a country
    OPTIONAL {
      ?residence dbo:country dbr:United_Kingdom .
      BIND(dbr:United_Kingdom AS ?residenceCountry)
    }
  }
}
```",3,5,4,3,1,3,3,71,0,127,3570,0.0,0.0,0
826,0,train,Give me the spouse of Anna Magdalena Appel.,SELECT ?result WHERE { <http://dbpedia.org/resource/Anna_Magdalena_Appel> <http://dbpedia.org/ontology/spouse> ?result . },"```sparql
SELECT ?spouse WHERE {
  ?person foaf:name ""Anna Magdalena Appel""@en .
  OPTIONAL { ?person dbo:spouse ?spouse . }
}
```",1,1,2,1,1,3,3,71,0,0,1,0,0.0,0
382,6,train,Give me the landmark at elevation of 100 and birthplace of Björn Joppe.,"SELECT ?result WHERE { <http://dbpedia.org/resource/Björn_Joppe> <http://dbpedia.org/ontology/birthPlace> ?result . ?result <http://dbpedia.org/ontology/elevation> ""100""^^<http://www.w3.org/2001/XMLSchema#integer> . }","```sparql
# Query to find landmarks at an elevation of 100 meters
SELECT ?landmark WHERE {
  ?landmark a dbo:Landmark ;
            dbo:elevation ""100""^^xsd:float .
}

UNION

# Query to find the birthplace of Björn Joppe
SELECT ?birthPlace WHERE {
  dbpedia:en:Bj%C3%B6rn_Joppe dbo:birthPlace ?birthPlace .
}
```",2,2,3,1,2,3,2,20,0,0,1,0,0.0,0
507,27,train,Give me the professional in the profession of the person born on 1966-02-18.,"SELECT ?result WHERE { ?result <http://dbpedia.org/property/occupation> ?v2 . ?v1 <http://dbpedia.org/ontology/birthDate> ""1966-02-18""^^<http://www.w3.org/2001/XMLSchema#date> . ?v1 <http://dbpedia.org/property/occupation> ?v2 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT ?person ?profession WHERE {
  ?person dbo:birthDate ""1966-02-18""^^xsd:date .
  OPTIONAL { ?person foaf:profession ?profession . }
}
```",3,3,4,3,1,3,3,71,6,15,35597,0.2857142857142857,0.00016852512428727916,0.00033685156074556477
933,34,train,"Give me the band of the band of the band, that is an artist and a musical artist, of The Ramong Sound and band of The Ramong Sound.",SELECT ?result WHERE { ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. <http://dbpedia.org/resource/The_Ramong_Sound> <http://dbpedia.org/ontology/associatedMusicalArtist> ?v3 . ?v1 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v3 <http://dbpedia.org/ontology/associatedMusicalArtist> ?v1 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. <http://dbpedia.org/resource/The_Ramong_Sound> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . },"```sparql
SELECT ?band WHERE {
  ?artist rdf:type dbo:MusicalArtist .
  ?artist foaf:name ""Joey Ramone"" .
  ?artist dbo:memberOf ?band .
  FILTER EXISTS { ?band rdfs:label ""The Ramones""@en }
}
```",4,6,5,3,2,3,3,71,0,0,4,0,0.0,0
773,31,train,Give me the parent of Carloman of Bavaria and spouse of the father of the parent of Bernard (son of Charles the Fat).,SELECT ?result WHERE { ?v0 <http://dbpedia.org/ontology/spouse> ?result . ?v1 <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Bernard_(son_of_Charles_the_Fat)> . ?v1 <http://dbpedia.org/property/father> ?v0 . ?result <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Carloman_of_Bavaria> . },"```sparql
# Step 1: Find Bernard (son of Charles the Fat)
SELECT ?bernard WHERE {
  ?bernard dbo:father dbr:Charles_the_Fat .
}

# Step 2: Identify Charles the Fat's spouse
SELECT ?spouse WHERE {
  dbr:Charles_the_Fat dbo:spouse ?spouse .
}

# Step 3: Find Carloman of Bavaria's parent (Louis the German)
SELECT ?parent WHERE {
  dbr:Claudius_of_Bavaria dbo:father ?parent .
}

# Step 4: Identify Louis the German's spouse
SELECT ?spouse WHERE {
  ?parent rdfs:label ""Louis the German""@en .
  ?parent dbo:spouse ?spouse .
}
```",4,4,5,3,2,3,3,71,0,0,1,0,0.0,0
216,27,train,"Give me the team of the person born, that is a sports manager and a soccer manager and a soccer player, on the death of Pavel Vezhinov.",SELECT ?result WHERE { ?v2 <http://dbpedia.org/ontology/birthDate> ?v1 . <http://dbpedia.org/resource/Pavel_Vezhinov> <http://dbpedia.org/ontology/deathDate> ?v1 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerManager>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerPlayer>. ?result <http://dbpedia.org/ontology/coach> ?v2 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsManager>. },"```sparql
SELECT ?person ?team WHERE {
  # Get Pavel Vezhinov's death date
  ?vezhinov dbo:deathDate ?deathDate .
  FILTER (str(?vezhinov) = ""Pavel_Vezhinov"") .

  # Find people born on the same day as Pavel Vezhinov's death
  ?person dbo:birthDate ?birthDate .
  FILTER (?birthDate = ?deathDate) .

  # Ensure the person is a sports manager, soccer manager, and soccer player
  ?person dbo:occupation ?occupation .
  VALUES ?occupation { 
    dbc:Soccer_managers 
    dbc:Sports_managers 
    dbc:Soccer_players 
  } .

  # Get the team associated with this person
  OPTIONAL {
    ?person dbo:team ?team .
  }
}
```",3,6,4,3,1,3,3,71,0,0,1,0,0.0,0
888,13,train,"Give me the commander in the force, that is a societal event and an event, of the military force of War in Donbas (2014–2022).",SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/commander> ?v0 . ?v1 <http://dbpedia.org/ontology/commander> ?result . ?v0 <http://dbpedia.org/ontology/battle> <http://dbpedia.org/resource/War_in_Donbas_(2014–2022)> . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?commander WHERE {
  ?event dbo:location dbr:Donbas ;
         dbo:partOf dbr:War_in_Donbass_(2014–2022) .
  
  ?militaryForce dbo:name ""Ukrainian Armed Forces""@en .

  ?commander dbo:position ""Commander""@en ;
             dbo:memberOf ?militaryForce ;
             dbo:associatedWith ?event .

  FILTER EXISTS { ?societalEvent dbo:relatedTo ?commander . }
}
```",3,5,4,3,1,3,2,20,0,0,110,0,0.0,0
582,15,train,"Give me the residence of the reference, that is a scientist, to Hirotaka Sugawara.","SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Scientist>. ?v1 <http://xmlns.com/foaf/0.1/name> ""Hirotaka Sugawara""@en . ?v1 <http://dbpedia.org/property/residence> ?result . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?residence WHERE {
  ?person rdfs:label ""Hirotaka Sugawara""@en .
  FILTER (lang(?person) = 'en')
  ?person dbo:residence ?residence .
}
```",2,3,3,2,1,3,3,71,0,0,2,0,0.0,0
170,16,train,Give me the domain of the profession of John Scholey and entity in Russia.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/leaderTitle> ?v2 . <http://dbpedia.org/resource/John_Scholey> <http://dbpedia.org/property/occupation> ?v2 . ?result <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Russia> . },"```sparql
# Step 1: Find John Scholey's profession
SELECT ?profession WHERE {
    ?scholey dbo:occupation ?profession .
    ?scholey foaf:name ""John Scholey"" .
}

# Step 2: Determine the domain of his profession
SELECT DISTINCT ?domain WHERE {
    ?profession rdfs:subClassOf* ?domain .
    # Assuming we have found a specific profession from step 1, replace <profession_uri> with that URI.
    BIND(<profession_uri> AS ?specificProfession)
}

# Step 3: Find an entity in Russia related to this domain
SELECT DISTINCT ?entity WHERE {
    ?entity rdf:type ?domain .
    ?entity dbo:country dbr:Russia .
}
```

Note: Replace `<profession_uri>` with the actual URI of John Scholey's profession obtained from step 1.",3,3,4,2,2,2,3,28,0,0,99,0,0.0,0
987,7,train,"Give me the time zone, that is a sports event, in Canicosa de la Sierra.",SELECT ?result WHERE { <http://dbpedia.org/resource/Canicosa_de_la_Sierra> <http://dbpedia.org/ontology/timeZone> ?result . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsEvent>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?event ?timezone 
WHERE {
  # Find sports events in Canicosa de la Sierra
  ?event a dbo:Sport ;
         dbo:location dbr:Canicosa_de_la_Sierra .
  
  # Get the time zone of Canicosa de la Sierra
  OPTIONAL { 
    dbr:Canicosa_de_la_Sierra dbo:timeZone ?timezone .
  }
}
```",1,2,2,1,1,3,3,71,0,0,2,0,0.0,0
507,38,train,"Give me the professional in the profession of Guy Ferland and director of the movie, that is a movie and a work, with Beryl Reid.",SELECT ?result WHERE { ?v3 <http://dbpedia.org/ontology/director> ?result . ?v3 <http://dbpedia.org/property/starring> <http://dbpedia.org/resource/Beryl_Reid> . <http://dbpedia.org/resource/Guy_Ferland> <http://dbpedia.org/property/occupation> ?v2 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Film>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?result <http://dbpedia.org/property/occupation> ?v2 . },"```sparql
SELECT ?movie ?director WHERE {
  ?movie dbo:starring dbp:Guy_Ferland .
  ?movie dbo:starring dbp:Beryl_Reid .
  ?movie dbo:director ?director .
}
```",4,6,5,2,2,3,3,71,0,0,1,0,0.0,0
129,16,train,Give me the associated musical artist of the person born as Tahj Malik Chandler and professional in .,"SELECT ?result WHERE { ?v2 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v2 <http://dbpedia.org/property/birthName> ""Tahj Malik Chandler""@en . ?result <http://dbpedia.org/property/occupation> """"@en . }","```sparql
SELECT ?artist WHERE {
  ?game dbo:birthName ""Tahj Malik Chandler""@en .
  ?game a dbo:Musician ;
        foaf:name ""The Game""@en .
  OPTIONAL { ?game dbo:associatedMusicalArtist ?artist . }
}
```",3,3,4,2,2,2,3,28,0,0,7,0,0.0,0
888,1,train,Give me the awardee of Hero of Ukraine.,"SELECT ?result WHERE { ?result <http://dbpedia.org/property/awards> ""Hero of Ukraine""@en . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?person ?personLabel WHERE {
  ?award dbr:Hero_of_Ukraine .
  ?person dbo:awardedBy ?award .
  SERVICE wikibase:label { bd:serviceParam wikibase:language ""[AUTO_LANGUAGE],en"". }
}
```",1,1,2,1,1,3,2,20,0,0,14,0,0.0,0
582,32,train,"Give me the player in the father, that is an athlete and a soccer manager and a sports manager, of Masami Nagasawa and reference to the residence of Hirotaka Sugawara.",SELECT ?result WHERE { ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Athlete>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerManager>. ?v3 <http://dbpedia.org/ontology/team> ?result . <http://dbpedia.org/resource/Hirotaka_Sugawara> <http://dbpedia.org/property/residence> ?v1 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsManager>. ?result <http://xmlns.com/foaf/0.1/name> ?v1 . <http://dbpedia.org/resource/Masami_Nagasawa> <http://dbpedia.org/property/father> ?v3 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?father ?residence WHERE {
  # Find Masami Nagasawa's father who is an athlete, soccer manager, and sports manager
  ?person dbo:spouse dbr:Masami_Nagasawa ;
          a dbo:Athlete ;
          a dbo:SoccerManager ;
          a dbo:SportsManager .
  
  BIND(?person AS ?father)

  # Find Hirotaka Sugawara's residence
  dbr:Hirotaka_Sugawara dbo:residenceLocation ?location .
  BIND(?location AS ?residence)
}
```",4,7,5,2,2,3,3,71,0,0,1,0,0.0,0
773,29,train,Give me the parent of the successor of Charles the Bald and parent of Charles the Fat and spouse of Louis the German.,SELECT ?result WHERE { <http://dbpedia.org/resource/Charles_the_Bald> <http://dbpedia.org/ontology/successor> ?v3 . <http://dbpedia.org/resource/Charles_the_Fat> <http://dbpedia.org/ontology/parent> ?result . <http://dbpedia.org/resource/Louis_the_German> <http://dbpedia.org/ontology/spouse> ?result . ?result <http://dbpedia.org/ontology/child> ?v3 . },"```sparql
# Query to find the successor of Charles the Bald
SELECT ?successor WHERE {
  ?charles dbp:successor ?successor .
  ?charles rdfs:label ""Charles the Bald""@en .
}

# Query to find the parent(s) of Charles the Fat
SELECT ?parent WHERE {
  ?charles dbp:fatherOrMother ?parent .
  ?charles rdfs:label ""Charles the Fat""@en .
}

# Query to find the spouse of Louis the German
SELECT ?spouse WHERE {
  ?louis dbp:spouse ?spouse .
  ?louis rdfs:label ""Louis the German""@en .
}

# Query to find the parent of the successor of Charles the Bald
SELECT ?parent WHERE {
  ?successor dbp:fatherOrMother ?parent .
  ?charles dbp:successor ?successor .
  ?charles rdfs:label ""Charles the Bald""@en .
}

# Query to find the parent of Charles the Fat (repeated for clarity)
SELECT ?parent WHERE {
  ?charles dbp:fatherOrMother ?parent .
  ?charles rdfs:label ""Charles the Fat""@en .
}
```",4,4,5,2,3,3,3,71,0,0,1,0,0.0,0
826,23,train,Give me the spouse of the child of the father of Anna Magdalena Appel.,SELECT ?result WHERE { ?v0 <http://dbpedia.org/property/father> ?v2 . ?v0 <http://dbpedia.org/ontology/spouse> ?result . <http://dbpedia.org/resource/Anna_Magdalena_Appel> <http://dbpedia.org/property/father> ?v2 . },"```sparql
SELECT ?spouse WHERE {
  ?anna a dbo:Person ;
        foaf:name ""Anna Magdalena Appel""@en .
  
  ?father dbo:child ?anna ;
          rdf:type dbo:Person .

  ?anna dbo:spouse ?spouse .
}
```",3,3,4,3,1,3,3,71,0,0,1,0,0.0,0
465,14,train,"Give me the successor of the child, that is a royalty, of Anne of Brittany.",SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v1 <http://dbpedia.org/ontology/successor> ?result . <http://dbpedia.org/resource/Anne_of_Brittany> <http://dbpedia.org/ontology/child> ?v1 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?successor WHERE {
  # Find Claude of France, child of Anne of Brittany
  ?child a dbo:Person ;
         dbo:parent dbr:Anne_of_Brittany ;
         rdfs:label ""Claude of France""@en .
  
  # Find the successor of Claude of France in terms of her titles or roles
  OPTIONAL {
    ?title dbo:holder ?child ;
           dbo:successor ?successor .
  }
  
  FILTER (lang(?child) = 'en')
}
```",2,3,3,2,1,3,3,71,0,0,2,0,0.0,0
573,24,train,"Give me the person decedent at the residence, that is a settlement, of William J. Phelan and parent of John Quincy Adams.",SELECT ?result WHERE { ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. <http://dbpedia.org/resource/John_Quincy_Adams> <http://dbpedia.org/ontology/parent> ?result . ?result <http://dbpedia.org/ontology/deathPlace> ?v2 . <http://dbpedia.org/resource/William_J._Phelan> <http://dbpedia.org/property/residence> ?v2 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?personDecedent WHERE {
  # Find William J. Phelan's residence which is a settlement
  ?residence dbo:type dbr:Settlement ;
             dbo:resident dbr:William_J._Phelan .

  # Find the person decedent at that residence
  ?decedent dbo:decedentAt ?residence .

  # Check if this person is a parent of John Quincy Adams
  ?decedent dbo:parent dbr:John_Quincy_Adams .
}
```",3,4,4,2,2,3,3,71,0,0,2,0,0.0,0
933,4,train,Who is the band of Alan Warner (musician)?,SELECT ?result WHERE { <http://dbpedia.org/resource/Alan_Warner_(musician)> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?bandName WHERE {
  ?person foaf:name ""Alan Warner""@en .
  ?person dbo:occupation dbr:Musical_instrumentalist .
  OPTIONAL { ?person dbo:musicGroup ?band . }
  ?band rdfs:label ?bandName .
  FILTER(LANG(?bandName) = 'en')
}
```",1,1,2,1,1,3,3,71,0,0,10,0,0.0,0
826,1,train,"Give me the successor of Louis II, Grand Duke of Hesse.","SELECT ?result WHERE { <http://dbpedia.org/resource/Louis_II,_Grand_Duke_of_Hesse> <http://dbpedia.org/ontology/successor> ?result . }","```sparql
SELECT ?successor WHERE {
  wd:Q123456 dbo:successor ?successor .
}
```

Note: Replace `wd:Q123456` with the actual DBpedia identifier for Louis II, Grand Duke of Hesse. You can find this identifier by searching DBpedia or using a SPARQL query to match his name.",1,1,2,1,1,3,3,71,0,0,1,0,0.0,0
166,7,train,Give me the resting place of the military force of Spanish Civil War.,SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/battle> <http://dbpedia.org/resource/Spanish_Civil_War> . ?v1 <http://dbpedia.org/ontology/restingPlace> ?result . },"```sparql
SELECT ?place WHERE {
  dbpedia:Francisco_Franco dbo:finalBurialPlace ?place .
}
```",2,2,3,2,1,3,2,20,0,0,36,0,0.0,0
874,7,train,"Give me the band of the writer, that is an artist and a musical artist, of Mezzanine (album).",SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. <http://dbpedia.org/resource/Mezzanine_(album)> <http://dbpedia.org/property/writer> ?v1 . ?result <http://dbpedia.org/ontology/bandMember> ?v1 . },"```sparql
SELECT ?bandMember WHERE {
  ?album dcterms:title ""Mezzanine""@en .
  ?album dbo:artist ?band .
  ?band a dbo:MusicalBand ;
        foaf:name ""Massive Attack"" .
  
  ?band dbo:member ?bandMember .

  OPTIONAL { 
    ?bandMember dbo:occupation dbp:Artist .
  }
  OPTIONAL {
    ?bandMember dbo:occupation dbp:Musician .
  }

  FILTER EXISTS { ?bandMember dbo:occupation dbp:Artist . }
  FILTER EXISTS { ?bandMember dbo:occupation dbp:Musician . }
}
```",2,4,3,2,1,3,2,20,0,0,4,0,0.0,0
83,3,train,"Give me the birthplace, that is a town and Brazilian and a soccer club, of Sandro (footballer, born October 1983).","SELECT ?result WHERE { ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerClub>. <http://dbpedia.org/resource/Sandro_(footballer,_born_October_1983)> <http://dbpedia.org/ontology/birthPlace> ?result . ?result <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Brazil>. ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Town>. }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?birthPlace WHERE {
  ?sandro dbo:birthDate ?date .
  ?sandro dbo:birthPlace ?birthPlace .
  
  FILTER (CONTAINS(LANG(?sandro), ""en"")) # Ensure we are looking at the English resource
  FILTER (STRSTARTS(STR(?date), ""1983-10"")) # Filter for October 1983
  
  ?birthPlace a dbo:Town . # Check if it's a town
  OPTIONAL { ?birthPlace dbo:sportTeam ?club } # Check for association with a soccer club

  VALUES ?sandro {
    dbr:Sandro_(footballer,_born_October_1983)
  }
}
```",1,4,2,1,1,3,2,20,0,0,1,0,0.0,0
445,30,train,Give me the entity in England and death place of Patrick Moore and entity in the award of George H. Cameron.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/country> ?v1 . ?result <http://dbpedia.org/ontology/location> <http://dbpedia.org/resource/England> . <http://dbpedia.org/resource/George_H._Cameron> <http://dbpedia.org/property/awards> ?v1 . <http://dbpedia.org/resource/Patrick_Moore> <http://dbpedia.org/ontology/deathPlace> ?result . },"```sparql
# Query for Patrick Moore's death place in England
SELECT ?deathPlace WHERE {
  ?person dbo:birthName ""Patrick Moore""@en .
  ?person dbo:deathPlace ?deathPlace .
  FILTER (CONTAINS(LCASE(str(?deathPlace)), ""england""))
}

UNION

# Query for George H. Cameron's award entity
SELECT ?award WHERE {
  ?person dbo:birthName ""George H. Cameron""@en .
  ?person dbo:award ?award .
}
```",4,4,5,2,3,3,3,71,0,0,1,0,0.0,0
216,36,train,"Give me the team of the person born, that is a sports manager and a soccer manager and a soccer player, on the death of Pavel Vezhinov and player in Igor Bišćan.",SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/birthDate> ?v0 . ?result <http://dbpedia.org/ontology/coach> ?v1 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsManager>. <http://dbpedia.org/resource/Igor_Bišćan> <http://dbpedia.org/ontology/team> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerManager>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerPlayer>. <http://dbpedia.org/resource/Pavel_Vezhinov> <http://dbpedia.org/ontology/deathDate> ?v0 . },"```sparql
# Step 1: Get Pavel Vezhinov's birthdate
SELECT ?birthdate WHERE {
    dbpedia:Pavel_Vezhinov dbo:birthday ?birthdate .
}

# Step 2: Find people born on the same date who are sports managers, soccer managers, and players
SELECT DISTINCT ?person ?team WHERE {
    # Assuming we have obtained Pavel Vezhinov's birthdate as a variable $birthdate
    VALUES (?birthdate) { ""YYYY-MM-DD"" } 

    ?person dbo:birthday ?sameBirthdate .
    FILTER (STR(?sameBirthdate) = STR($birthdate))

    ?person rdf:type dbpedia:SportsManager ;
            rdf:type dbpedia:SoccerManager ;
            rdf:type dbpedia:SoccerPlayer .

    # Step 3: Find teams associated with Igor Bišćan
    dbpedia:Igor_Bišćan dbo:team ?team .

    # Step 4: Check if the person was part of those teams
    ?person dbo:memberOfTeam ?team .
}
```",4,7,5,3,2,3,3,71,0,0,1,0,0.0,0
433,1,train,Give me the associated musical artist of Bill Evans.,SELECT ?result WHERE { <http://dbpedia.org/resource/Bill_Evans> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?artist WHERE {
  VALUES ?billEvans { dbr:Bill_Evans_(pianist) }
  ?billEvans dbo:associatedMusicians ?artist .
  ?artist a dbo:MusicArtist .
}
```",1,1,2,1,1,3,3,71,0,0,13,0,0.0,0
433,27,train,Give me the professional in the profession of the writer of Slowhand at 70 – Live at the Royal Albert Hall.,SELECT ?result WHERE { ?result <http://dbpedia.org/property/occupation> ?v2 . ?v1 <http://dbpedia.org/property/occupation> ?v2 . <http://dbpedia.org/resource/Slowhand_at_70_–_Live_at_the_Royal_Albert_Hall> <http://dbpedia.org/property/writer> ?v1 . },"```sparql
SELECT ?writer ?profession WHERE {
  ?album dcterms:title ""Slowhand at 70 – Live at the Royal Albert Hall"" .
  ?album dbo:creator ?writer .
  ?writer dbo:occupation ?profession .
  FILTER(CONTAINS(LCASE(?profession), ""musician"") || CONTAINS(LCASE(?profession), ""guitarist""))
}
```",3,3,4,3,1,3,3,71,0,0,51837,0,0.0,0
976,5,train,"Give me the reference, that is an organisation and a political party and Turkish, to Millet İttifakı.","SELECT ?result WHERE { ?result <http://xmlns.com/foaf/0.1/name> ""Millet İttifakı""@en . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?result <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Turkey>. ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/PoliticalParty>. }","```sparql
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>
PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>

SELECT ?entity WHERE {
  ?entity rdfs:label ""Millet İttifakı""@tr .
  ?entity rdf:type <http://dbpedia.org/class/yago/YAGO2ClassOrganization> .
  ?entity rdf:type <http://dbpedia.org/ontology/PoliticalParty> .
}
```",1,4,2,1,1,3,3,71,0,0,1,0,0.0,0
507,2,train,"Give me the professional in Film director, television director.","SELECT ?result WHERE { ?result <http://dbpedia.org/property/occupation> ""Film director, television director""@en . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT DISTINCT ?person ?name WHERE {
  ?person a dbo:Person .
  ?person dbo:occupation ?occupation .
  FILTER(CONTAINS(LCASE(?occupation), ""film director"") && CONTAINS(LCASE(?occupation), ""television director""))
  ?person rdfs:label ?name .
  FILTER (LANG(?name) = 'en')
}
ORDER BY ?name
```",1,1,2,1,1,3,3,71,0,0,38,0,0.0,0
955,3,train,Give me the writer of Don't Forget Your Roots (album).,SELECT ?result WHERE { <http://dbpedia.org/resource/Don't_Forget_Your_Roots_(album)> <http://dbpedia.org/property/writer> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?writer WHERE {
  ?album a dbo:Album ;
         rdfs:label ""Don't Forget Your Roots""@en .
  ?album dbo:artist ?artist .
  ?artist dbo:birthName ?writer .
}
```",1,1,2,1,1,3,2,20,0,0,19,0,0.0,0
329,5,train,"Give me the birthplace, that is an organisation and a country, of Robert Bates (loyalist).",SELECT ?result WHERE { ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. <http://dbpedia.org/resource/Robert_Bates_(loyalist)> <http://dbpedia.org/ontology/birthPlace> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?birthPlace WHERE {
  ?person a dbo:Loyalist;
          foaf:name ""Robert Bates""@en.
  ?person dbo:birthPlace ?birthPlace.
  ?birthPlace a dbo:Country .
  ?birthPlace a dbo:Organization .
}
```",1,3,2,1,1,2,3,28,0,0,1,0,0.0,0
417,33,train,"Give me the child of the father of the leader, that is a royalty, of Colony of Greenland and spouse of Princess Caroline-Mathilde of Denmark.",SELECT ?result WHERE { ?result <http://dbpedia.org/property/father> ?v3 . ?result <http://dbpedia.org/ontology/spouse> <http://dbpedia.org/resource/Princess_Caroline-Mathilde_of_Denmark> . ?v0 <http://dbpedia.org/property/father> ?v3 . <http://dbpedia.org/resource/Colony_of_Greenland> <http://dbpedia.org/property/leader> ?v0 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?child WHERE {
  # Step 1: Identify the leader of the Colony of Greenland
  ?leader dbo:positionTitle ""Governor of Greenland""@en .
  
  # Step 2: Determine the father of this leader
  ?father dbo:child ?leader .

  # Step 3: Find the child of this father who is royalty
  ?child dbo:parent ?father ;
         a dbo:Monarch .

  # Step 4: Identify the spouse of Princess Caroline-Mathilde of Denmark
  ?spouse dbo:spouse dbr:Caroline_Matilda_of_Denmark .
  
  # Step 5: Cross-reference these details
  FILTER(?child = ?spouse)
}
```",4,5,5,3,2,3,3,71,0,0,1,0,0.0,0
582,29,train,"Give me the reference to Japan and figure known as --10-19 and player in the father, that is an athlete and a soccer manager and a sports manager, of Masami Nagasawa.","SELECT ?result WHERE { ?v3 <http://dbpedia.org/ontology/team> ?result . ?result <http://dbpedia.org/property/nickname> ""--10-19""^^<http://www.w3.org/2001/XMLSchema#gMonthDay> . <http://dbpedia.org/resource/Masami_Nagasawa> <http://dbpedia.org/property/father> ?v3 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerManager>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsManager>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Athlete>. ?result <http://xmlns.com/foaf/0.1/name> ""Japan""@en . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?father ?figure WHERE {
  # Find Masami Nagasawa and her father
  ?masami a dbo:Person ;
          foaf:name ""Masami Nagasawa""@en .
  
  ?masami dbo:parent ?father .

  # Ensure the father is an athlete, soccer manager, and sports manager
  ?father dbo:occupation dbr:Athlete ;
          dbo:occupation dbr:Soccer_Manager ;
          dbo:occupation dbr:Sports_Manager .

  # Find a figure known as --10-19 related to Japan
  ?figure dbo:name ""Figure Known as --10-19""@en ;
          dbo:nationality dbr:Japan .
  
  # Check if the father is connected to this figure
  OPTIONAL { ?father dbo:relatedTo ?figure }
}
```",4,7,5,2,3,3,3,71,0,0,1,0,0.0,0
573,33,train,"Give me the person decedent at the residence, that is a settlement, of the professional, that is American, in Politician and person decedent at Massachusetts.","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/deathPlace> ?v3 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. ?v0 <http://dbpedia.org/property/occupation> ""Politician""@en . ?v0 <http://dbpedia.org/ontology/nationality> <http://dbpedia.org/resource/United_States>. ?v0 <http://dbpedia.org/property/residence> ?v3 . ?result <http://dbpedia.org/ontology/deathPlace> <http://dbpedia.org/resource/Massachusetts> . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?person ?decedentAt WHERE {
  ?person a dbo:Politician ;
          dbo:nationality dbr:United_States ;
          dbo:deathPlace ?deathPlace .
  
  ?deathPlace rdfs:label ?locationLabel ;
              dbp:country ""Massachusetts""@en .

  FILTER(CONTAINS(LCASE(?locationLabel), ""massachusetts""))

  OPTIONAL { ?person dbo:decedentAt ?decedentAt . }
  
  ?decedentAt a dbo:Settlement .
}
```",4,6,5,3,2,3,3,71,0,0,400,0,0.0,0
888,5,train,Give me the award of Oleksandr Syrskyi.,SELECT ?result WHERE { <http://dbpedia.org/resource/Oleksandr_Syrskyi> <http://dbpedia.org/property/awards> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?award WHERE {
  VALUES ?person { dbr:Oleksandr_Syrskyi }
  ?person dbo:award ?award .
}
```",1,1,2,1,1,3,2,20,0,1,1,0.0,0.0,0
773,17,train,"Give me the child, that is a royalty, of the father, that is an office holder and a royalty, of Carloman of Bavaria.",SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?result <http://dbpedia.org/property/father> ?v1 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. <http://dbpedia.org/resource/Carloman_of_Bavaria> <http://dbpedia.org/property/father> ?v1 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>

SELECT ?child WHERE {
  ?carloman rdf:type dbo:Monarch ;
            foaf:name ""Carloman of Bavaria""@en .
  
  ?carloman dbo:child ?child .

  ?child rdf:type dbo:Monarch .
}
```",2,5,3,2,1,3,3,71,0,0,3,0,0.0,0
47,8,train,Give me the awardee of Padma Vibhushan.,SELECT ?result WHERE { ?result <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/Padma_Vibhushan> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?recipient WHERE {
  ?recipient dbo:award dbr:Padma_Vibhushan .
}
```",1,1,2,1,1,3,3,71,83,52,3,0.6148148148148148,0.9651162790697675,0.751131221719457
527,14,train,"Give me the author of the work, that is a work and a book, of the host of Hyperland.",SELECT ?result WHERE { ?v0 <http://dbpedia.org/property/author> ?result . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?v0 <http://dbpedia.org/property/author> ?v2 . <http://dbpedia.org/resource/Hyperland> <http://dbpedia.org/ontology/presenter> ?v2 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Book>. },"```sparql
SELECT ?author WHERE {
  ?program dcterms:creator ?host .
  ?program dbp:name ""Hyperland""@en .
  
  OPTIONAL { 
    ?host dbo:wikiPageID ?hostWikiId .
    ?host dbo:abstract ?hostAbstract .
    FILTER(CONTAINS(LCASE(?hostAbstract), ""hyperland""))
  }
  
  ?author dbo:book ?book .
  ?book rdf:type dbp:Book .
  ?book dbo:creator ?author .

  FILTER (?host = ?author)
}
```",3,5,4,3,1,3,2,20,0,0,2,0,0.0,0
527,3,train,"Give me the movie, that is a work and English and a television show, with Bernard Bresslaw.",SELECT ?result WHERE { ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/TelevisionShow>. ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?result <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/United_Kingdom>. ?result <http://dbpedia.org/property/starring> <http://dbpedia.org/resource/Bernard_Bresslaw> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>
PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>

SELECT ?work WHERE {
  ?work rdf:type ?type .
  FILTER (?type IN (dbo:Film, dbo:TelevisionShow))
  
  ?work dbo:language ?lang .
  FILTER (str(?lang) = ""English"")
  
  ?work dbo:starring ?actor .
  FILTER (str(?actor) = ""Bernard Bresslaw"")

}
```",1,4,2,1,1,3,2,20,0,0,1,0,0.0,0
917,30,train,Give me the child of the father of Kamehameha IV and parent of Albert Kamehameha and child of Kekūanāoʻa.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/parent> <http://dbpedia.org/resource/Kekūanāoʻa> . <http://dbpedia.org/resource/Kamehameha_IV> <http://dbpedia.org/property/father> ?v0 . ?result <http://dbpedia.org/property/father> ?v0 . ?result <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Albert_Kamehameha> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?person WHERE {
  # Kamehameha IV's father
  ?kamehamehaIV dbo:father dbr:Kīnaʻu .
  
  # Child of Kīnaʻu who is also a parent of Albert Kamehameha and child of Kekūanāoʻa
  ?person dbo:parent dbr:Albert_Kamehameha ;
          dbo:childOf dbr:Kekūanāoʻa ;
          dbo:parent dbr:Kīnaʻu .
}
```",4,4,5,2,3,3,3,71,0,0,1,0,0.0,0
443,2,train,Give me the birthplace of Carl Larsson.,SELECT ?result WHERE { <http://dbpedia.org/resource/Carl_Larsson> <http://dbpedia.org/ontology/birthPlace> ?result . },"```sparql
SELECT ?birthPlace WHERE {
  ?person dbo:birthName ""Carl Larsson""@en .
  ?person dbo:birthPlace ?birthPlace .
}
```",1,1,2,1,1,2,3,28,0,0,2,0,0.0,0
791,38,train,"Give me the father of the child, that is a royalty, of Emperor Takakura and predecessor of the child of Emperor Takakura.",SELECT ?result WHERE { ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v2 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Emperor_Takakura> . ?result <http://dbpedia.org/ontology/successor> ?v3 . ?v3 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Emperor_Takakura> . ?v2 <http://dbpedia.org/property/father> ?result . },"```sparql
SELECT ?father WHERE {
  wd:Q12345 wdt:P22 ?father .
}
```

In this query:
- `wd:Q12345` should be replaced with the DBpedia identifier for Antoku, Emperor of Japan.
- The property `P22` is used to denote ""father"".",4,5,5,2,2,3,3,71,0,0,1,0,0.0,0
47,34,train,"Give me the office of Ajoy Mukherjee and office of the administration of the commander, that is a politician, in Operation Green Hunt.",SELECT ?result WHERE { ?v1 <http://dbpedia.org/property/governor> ?v2 . <http://dbpedia.org/resource/Ajoy_Mukherjee> <http://dbpedia.org/property/office> ?result . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v1 <http://dbpedia.org/property/office> ?result . <http://dbpedia.org/resource/Operation_Green_Hunt> <http://dbpedia.org/ontology/commander> ?v2 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?officeAjoyMukherjee ?officeOperationGreenHunt
WHERE {
  # Find the office held by Ajoy Mukherjee
  dbr:Ajoy_Mukherjee dbo:positionHeld ?officeAjoyMukherjee .
  
  # Find roles related to Operation Green Hunt, focusing on administrative or command positions
  OPTIONAL {
    ?operationGreenHunt dbo:relatedThroughTime ?person .
    ?person dbo:positionHeld ?officeOperationGreenHunt .
    FILTER(CONTAINS(LCASE(?operationGreenHunt), ""operation green hunt""))
  }
}
```",4,5,5,3,2,3,3,71,0,0,2,0,0.0,0
130,9,train,"Give me the film, that is a soccer club and an organisation, of the native, that is a coach and a college coach, of Madison, Alabama.","SELECT ?result WHERE { ?v0 <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Madison,_Alabama> . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/CollegeCoach>. ?result <http://dbpedia.org/ontology/director> ?v0 . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerClub>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Coach>. ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?person ?film WHERE {
  ?person dbo:nationality dbr:United_States ;
          dbo:birthPlace dbr:Madison,_Alabama ;
          dbo:occupation dbr:Coach .
  
  OPTIONAL { ?person dbo:almaMater ?college . }
  
  ?association dbo:agent ?person ;
               dbo:subject ?film .
  
  ?film dbo:genre dbr:Soccer_film ;
        dbo:organization ?soccerClub .

  FILTER (regex(str(?person), ""Coach"") && regex(str(?person), ""College Coach""))
}
```",2,6,3,2,1,3,2,20,0,0,1,0,0.0,0
839,10,train,Give me the band of Matthias Röhr and band of Kevin Russell (musician).,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/bandMember> <http://dbpedia.org/resource/Matthias_Röhr> . <http://dbpedia.org/resource/Kevin_Russell_(musician)> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . },"```sparql
# Query for Matthias Röhr's band
SELECT ?band WHERE {
  ?person foaf:name ""Matthias Röhr""@en .
  ?person dbo:memberOf ?band .
}

UNION

# Query for Kevin Russell's band
SELECT ?band WHERE {
  ?person foaf:name ""Kevin Russell (musician)""@en .
  ?person dbo:memberOf ?band .
}
```",2,2,3,1,2,3,3,71,0,0,1,0,0.0,0
773,7,train,"Give me the father, that is an office holder and a royalty, of Carloman of Bavaria.",SELECT ?result WHERE { ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. <http://dbpedia.org/resource/Carloman_of_Bavaria> <http://dbpedia.org/property/father> ?result . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>

SELECT ?father WHERE {
  ?carloman dbo:father ?father .
  FILTER(STRSTARTS(STR(?carloman), ""http://dbpedia.org/resource/Carloman_of_Bavaria""))
  ?father rdf:type dbo:Monarch .
  OPTIONAL { ?father dbo:officeHolder ?office . }
}
```",1,3,2,1,1,3,3,71,0,0,1,0,0.0,0
232,3,train,Give me the person born as Emily Katherine Jacques.,"SELECT ?result WHERE { ?result <http://dbpedia.org/property/birthName> ""Emily Katherine Jacques""@en . }","```sparql
PREFIX foaf: <http://xmlns.com/foaf/0.1/>
PREFIX schema: <http://schema.org/>

SELECT ?person ?officialName WHERE {
  ?person a foaf:Person .
  OPTIONAL { ?person foaf:name ?officialName . }
  FILTER(CONTAINS(LCASE(str(?person)), ""emily katherine jacques""))
}
```",1,1,2,1,1,2,2,9,0,0,1,0,0.0,0
267,8,train,Give me the person born on the birth date of Dan Cathy.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/birthDate> ?v0 . <http://dbpedia.org/resource/Dan_Cathy> <http://dbpedia.org/ontology/birthDate> ?v0 . },"```sparql
# Step 1: Retrieve Dan Cathy's birth date
SELECT ?birthDate WHERE {
  dbpedia:Dan_Cathy dbo:birthday ?birthDate .
}

# Step 2: Use the retrieved birth date to find other people born on that date
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT DISTINCT ?person WHERE {
  ?person a dbo:Person ;
          dbo:birthday ?birthDate .
  FILTER(?birthDate = ""REPLACE_WITH_DAN_CATHY_BIRTH_DATE""^^xsd:date)
  FILTER(?person != dbpedia:Dan_Cathy) # Exclude Dan Cathy from the results
}
```

Note: In practice, you would replace `""REPLACE_WITH_DAN_CATHY_BIRTH_DATE""` with the actual birth date obtained from the first query.",2,2,3,2,1,3,2,20,0,0,35,0,0.0,0
124,36,train,"Give me the commander in Mahdist War and military force of the force, that is a societal event and a military conflict, of the person born on 1850-06-24.","SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?v0 <http://dbpedia.org/ontology/birthDate> ""1850-06-24""^^<http://www.w3.org/2001/XMLSchema#date> . ?v1 <http://dbpedia.org/ontology/commander> ?v0 . <http://dbpedia.org/resource/Mahdist_War> <http://dbpedia.org/ontology/commander> ?result . ?result <http://dbpedia.org/ontology/battle> ?v1 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?commander ?force WHERE {
  ?person dbo:birthDate ""1850-06-24""^^xsd:date .
  ?person rdfs:label ?name .
  FILTER(CONTAINS(LCASE(?name), ""herbert kitchener"")) .
  
  ?event dbo:participatedInMilitaryConflict dbr:Mahdist_War ;
         dbo:commander ?commander .
  ?commander rdfs:label ?commanderLabel .
  FILTER(CONTAINS(LCASE(?commanderLabel), LCASE(?name))) .

  ?force dbo:commandedBy ?commander ;
         dbo:militaryUnitType ?unitType .
  
  OPTIONAL { ?force dbp:name ?forceName }
}
```",4,6,5,3,2,3,3,71,0,0,3,0,0.0,0
926,24,train,Give me the successor of the child of Ahmed III and child of Ahmed III.,SELECT ?result WHERE { <http://dbpedia.org/resource/Ahmed_III> <http://dbpedia.org/ontology/child> ?result . ?v2 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Ahmed_III> . ?v2 <http://dbpedia.org/ontology/successor> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?successor WHERE {
  # Find the children of Ahmed III
  ?child dbo:parent dbr:Aḥmed_III.

  # Check if any child became Sultan (i.e., succeeded someone)
  ?child dbo:succeededBy ?sultan.
  
  # Get the successor of this Sultan
  ?sultan dbo:succeededBy ?successor.
}
```",3,3,4,2,2,3,3,71,0,0,1,0,0.0,0
933,18,train,Give me the reference to Alan Warner and band of The Ramong Sound and band of Mike Elliott (saxophonist).,"SELECT ?result WHERE { <http://dbpedia.org/resource/The_Ramong_Sound> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?result <http://xmlns.com/foaf/0.1/name> ""Alan Warner""@en . <http://dbpedia.org/resource/Mike_Elliott_(saxophonist)> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . }","```sparql
SELECT ?band1Label ?band2Label WHERE {
  ?band1 rdfs:label ""The Ramones""@en .
  ?band2 rdfs:label ""Santana""@en .
  
  SERVICE <http://dbpedia.org/sparql> {
    ?band1 dbp:member ?alanWarner .
    ?band2 dbp:saxophonist ?mikeElliott .
  }
  
  BIND (str(?band1) AS ?band1Label)
  BIND (str(?band2) AS ?band2Label)
}
```",3,3,4,1,3,3,3,71,0,0,1,0,0.0,0
965,28,train,"Give me the spouse of the spouse of Princess Victoria of Hesse and by Rhine and parent of Louise Mountbatten and parent of George Mountbatten, 2nd Marquess of Milford Haven.","SELECT ?result WHERE { <http://dbpedia.org/resource/Louise_Mountbatten> <http://dbpedia.org/ontology/parent> ?result . <http://dbpedia.org/resource/Princess_Victoria_of_Hesse_and_by_Rhine> <http://dbpedia.org/ontology/spouse> ?v1 . ?result <http://dbpedia.org/ontology/spouse> ?v1 . <http://dbpedia.org/resource/George_Mountbatten,_2nd_Marquess_of_Milford_Haven> <http://dbpedia.org/ontology/parent> ?result . }","```sparql
SELECT ?spouse WHERE {
  wd:Q123456 wdt:P26 wd:Q789012 . # Prince Louis of Battenberg (Lord Mountbatten) has spouse
  wd:Q789012 wdt:P26 ?spouse .    # Spouse of Lord Mountbatten
}
```

Note: Replace `wd:Q123456` with the actual DBpedia ID for Prince Louis of Battenberg and `wd:Q789012` with the DBpedia ID for Princess Victoria of Hesse and by Rhine.",4,4,5,2,3,3,3,71,0,0,1,0,0.0,0
933,0,train,Give me the band of Mike Elliott (saxophonist).,SELECT ?result WHERE { <http://dbpedia.org/resource/Mike_Elliott_(saxophonist)> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?band WHERE {
  ?person rdfs:label ""Mike Elliott (saxophonist)""@en .
  ?person dbo:instrument ?instrument .
  FILTER EXISTS { ?instrument rdf:type dbo:Saxophone }
  OPTIONAL { ?person dbo:member ?membership . 
             ?membership dbo:band ?band }
}
```",1,1,2,1,1,3,3,71,0,0,8,0,0.0,0
554,6,train,Give me the leader of Portuguese Mozambique and leader of Portuguese São Tomé and Príncipe.,SELECT ?result WHERE { <http://dbpedia.org/resource/Portuguese_São_Tomé_and_Príncipe> <http://dbpedia.org/property/leader> ?result . <http://dbpedia.org/resource/Portuguese_Mozambique> <http://dbpedia.org/property/leader> ?result . },"```sparql
SELECT ?leader ?territory WHERE {
  VALUES ?territory { 
    dbr:Portuguese_Mozambique 
    dbr:São_Tomé_and_Príncipe_(colony)
  }
  
  ?leader dbo:positionHeld dbr:Governor-General_of_Portuguese_Mozambique ;
          dbo:positionHeld dbr:High_Commissioner_of_Portuguese_Mozambique ;
          dbo:positionHeld dbr:Governor_of_São_Tomé_and_Príncipe .
  
  ?leader dbo:country dbr:Portugal .
  
  OPTIONAL { 
    ?leader rdfs:label ?label FILTER (lang(?label) = 'en') .
  }
}
ORDER BY ?territory
```",2,2,3,1,2,3,2,20,0,0,1,0,0.0,0
933,25,train,"Give me the band of the band, that is a group and a band and an organisation, of Alan Warner (musician) and reference to Alan Warner.","SELECT ?result WHERE { <http://dbpedia.org/resource/Alan_Warner_(musician)> <http://dbpedia.org/ontology/associatedMusicalArtist> ?v0 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Group>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Band>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?result <http://xmlns.com/foaf/0.1/name> ""Alan Warner""@en . ?v0 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?bandName ?alanWarner WHERE {
  ?band dbo:member dbr:Alan_Warner ;
        a dbo:Band, dbo:Organization .
  BIND (dbr:Alan_Warner AS ?alanWarner)
  SERVICE wikibase:label { bd:serviceParam wikibase:language ""[AUTO_LANGUAGE],en"". }
}
```",3,6,4,2,2,3,3,71,0,0,1,0,0.0,0
865,14,train,Give me the father of the child of Abu Ahmad Abdul Hafiz.,SELECT ?result WHERE { ?v0 <http://dbpedia.org/property/father> ?result . ?v0 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Abu_Ahmad_Abdul_Hafiz> . },"```sparql
SELECT ?child WHERE {
  wd:Q1234567 wdt:P40 ?child .
}
```

Note: `wd:Q1234567` should be replaced with the actual DBpedia identifier for Abu Ahmad Abdul Hafiz. Since I don't have access to a database or external resources, you would need to look up this identifier in DBpedia.",2,2,3,2,1,3,3,71,0,0,1,0,0.0,0
459,6,train,Give me the governor of Oklahoma and governor of Dana Murphy.,SELECT ?result WHERE { <http://dbpedia.org/resource/Oklahoma> <http://dbpedia.org/property/governor> ?result . <http://dbpedia.org/resource/Dana_Murphy> <http://dbpedia.org/property/governor> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?oklahomaGovernorLabel ?danaMurphyRoleLabel WHERE {
  # Query for the current governor of Oklahoma
  OPTIONAL {
    dbr:Oklahoma dbo:stateGovernor ?oklahomaGovernor .
    SERVICE wikibase:label { bd:serviceParam wikibase:language ""[AUTO_LANGUAGE],en"". }
  }

  # Query for Dana Murphy's role, if any
  OPTIONAL {
    ?danaMurphy a dbo:Person ;
               foaf:name ""Dana Murphy""@en .
    ?danaMurphy dbo:governmentRole ?role .
    SERVICE wikibase:label { bd:serviceParam wikibase:language ""[AUTO_LANGUAGE],en"". }
  }

  BIND(COALESCE(?oklahomaGovernorLabel, ""No current governor found"") AS ?oklahomaGovernorLabel)
  BIND(COALESCE(?danaMurphyRoleLabel, ""Dana Murphy not found or no role as governor"") AS ?danaMurphyRoleLabel)
}
```",2,2,3,1,2,2,3,28,0,0,1,0,0.0,0
5,9,train,"Give me the person born, that is a politician, as the award of Renata Adler.",SELECT ?result WHERE { ?result <http://dbpedia.org/property/birthName> ?v0 . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. <http://dbpedia.org/resource/Renata_Adler> <http://dbpedia.org/property/awards> ?v0 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?person ?birthDate WHERE {
  # Find Renata Adler and her associated awards
  ?award dbo:recipient ?recipient .
  ?recipient rdfs:label ""Renata Adler""@en .

  # Find individuals who received the award
  ?recipient dbp:profession ?profession ;
             dbo:birthDate ?birthDate .

  # Filter for politicians
  FILTER(CONTAINS(LCASE(?profession), ""politician""))

  # Ensure they have a birth date
  FILTER(BOUND(?birthDate))

  # Return the person and their birth date
  BIND(?recipient AS ?person)
}
```",2,3,3,2,1,3,2,20,0,0,169,0,0.0,0
965,31,train,Give me the parent of Louise Mountbatten and spouse of the spouse of the parent of Louise Mountbatten.,SELECT ?result WHERE { <http://dbpedia.org/resource/Louise_Mountbatten> <http://dbpedia.org/ontology/parent> ?result . ?v2 <http://dbpedia.org/ontology/spouse> ?v0 . ?result <http://dbpedia.org/ontology/spouse> ?v0 . <http://dbpedia.org/resource/Louise_Mountbatten> <http://dbpedia.org/ontology/parent> ?v2 . },"```sparql
# Step 1: Find Louise Mountbatten's parent
SELECT ?parent WHERE {
    wd:Q123456 dbo:parent ?parent .
}

# Step 2: Find the spouse of that parent
SELECT ?spouseOfParent WHERE {
    ?parent dbo:spouse ?spouseOfParent .
}

# Step 3: Find the spouse of the spouse found in step 2
SELECT ?finalSpouse WHERE {
    ?spouseOfParent dbo:spouse ?finalSpouse .
}
```

Note: Replace `wd:Q123456` with the actual DBpedia identifier for Louise Mountbatten.",4,4,5,3,2,3,3,71,0,0,2,0,0.0,0
382,13,train,"Give me the birthplace of the manager, that is a soccer manager and an athlete and a sports manager, of the player in Lukas Kübler.",SELECT ?result WHERE { <http://dbpedia.org/resource/Lukas_Kübler> <http://dbpedia.org/ontology/team> ?v0 . ?v0 <http://dbpedia.org/ontology/manager> ?v1 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsManager>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerManager>. ?v1 <http://dbpedia.org/ontology/birthPlace> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Athlete>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?managerBirthPlace WHERE {
  # Find Lukas Kübler's manager(s)
  ?player a dbo:SoccerPlayer ;
          foaf:name ""Lukas Kübler""@en .
  
  ?player dbo:managedBy ?manager .

  # Filter managers who are also athletes and sports managers
  ?manager a dbo:Athlete, dbo:SportsManager .

  # Get the birthplace of the manager
  ?manager dbo:birthPlace ?birthPlace ;
           foaf:name ?managerName .
  
  BIND(STR(?birthPlace) AS ?managerBirthPlace)
}
```",3,6,4,3,1,3,2,20,0,0,5,0,0.0,0
5,8,train,Give me the entity in the award of Coro de la Pontificia Universidad Católica de Puerto Rico.,SELECT ?result WHERE { <http://dbpedia.org/resource/Coro_de_la_Pontificia_Universidad_Católica_de_Puerto_Rico> <http://dbpedia.org/property/awards> ?v1 . ?result <http://dbpedia.org/ontology/country> ?v1 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?entity WHERE {
  ?award rdfs:label ""Coro de la Pontificia Universidad Católica de Puerto Rico""@en .
  OPTIONAL { ?award dbo:recipient ?entity . }
}
```",2,2,3,2,1,3,2,20,0,0,20990,0,0.0,0
926,3,train,Give me the spouse of Neşerek Kadın.,SELECT ?result WHERE { <http://dbpedia.org/resource/Neşerek_Kadın> <http://dbpedia.org/ontology/spouse> ?result . },"```sparql
SELECT ?spouse WHERE {
  ?person dbo:givenName ""Neşerek"" .
  ?person dbo:familyName ""Kadın"" .
  ?person dbo:spouse ?spouse .
}
```",1,1,2,1,1,3,3,71,0,0,1,0,0.0,0
465,12,train,Give me the successor of Renée of France and spouse of Archduchess Barbara of Austria.,SELECT ?result WHERE { <http://dbpedia.org/resource/Renée_of_France> <http://dbpedia.org/ontology/successor> ?result . ?result <http://dbpedia.org/ontology/spouse> <http://dbpedia.org/resource/Archduchess_Barbara_of_Austria> . },"```sparql
# Part 1: Find the successor of Renée of France (her child)
SELECT ?successor WHERE {
  wd:Q123456 wdt:P40 ?child .
  ?child rdfs:label ?successorLabel .
  FILTER(LANG(?successorLabel) = ""en"")
}

UNION

# Part 2: Find the spouse of Archduchess Barbara of Austria
SELECT ?spouse WHERE {
  wd:Q654321 wdt:P26 ?spouse .
  ?spouse rdfs:label ?spouseLabel .
  FILTER(LANG(?spouseLabel) = ""en"")
}
```

Note: Replace `wd:Q123456` with the actual DBpedia entity ID for Renée of France and `wd:Q654321` with the entity ID for Archduchess Barbara of Austria.",2,2,3,1,2,3,3,71,0,0,1,0,0.0,0
933,11,train,Give me the band of the band of Alan Warner (musician).,SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . <http://dbpedia.org/resource/Alan_Warner_(musician)> <http://dbpedia.org/ontology/associatedMusicalArtist> ?v1 . },"```sparql
SELECT ?band1 ?band2 WHERE {
  ?musician dbo:givenName ""Alan"" .
  ?musician dbo:familyName ""Warner"" .
  ?musician dbo:band ?band1 .
  
  OPTIONAL { 
    ?band1 dbo:associatedBand ?band2 .
  }
}
```",2,2,3,2,1,3,3,71,0,0,26,0,0.0,0
965,20,train,"Give me the parent of the child, that is a royalty, of Prince Louis of Battenberg and spouse of Prince Louis of Battenberg.",SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v1 <http://dbpedia.org/ontology/parent> ?result . ?result <http://dbpedia.org/ontology/spouse> <http://dbpedia.org/resource/Prince_Louis_of_Battenberg> . ?v1 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Prince_Louis_of_Battenberg> . },"```sparql
SELECT ?parent WHERE {
  # Find Princess Alice, Duchess of Gloucester as a child of Prince Louis of Battenberg
  ?princess rdf:type dbo:Person ;
            foaf:name ""Princess Alice, Duchess of Gloucester""@en ;
            dbo:childOf ?princeLouis .
  
  # Ensure the person is royalty
  ?princess dbo:royalty true .

  # Find her spouse, Prince Henry, Duke of Gloucester
  ?princess dbo:spouse ?husband .
  ?husband foaf:name ""Prince Henry, Duke of Gloucester""@en ;
           rdf:type dbo:Person .

  # Find the parent of Prince Henry (King George V)
  ?husband dbo:childOf ?parent .
  
  # Ensure the parent is a person
  ?parent rdf:type dbo:Person .
}
```",3,4,4,2,2,3,3,71,0,0,1,0,0.0,0
773,27,train,"Give me the parent of the child, that is a royalty, of the father, that is an office holder and a royalty, of Carloman of Bavaria.",SELECT ?result WHERE { ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v2 <http://dbpedia.org/property/father> ?v1 . <http://dbpedia.org/resource/Carloman_of_Bavaria> <http://dbpedia.org/property/father> ?v1 . ?v2 <http://dbpedia.org/ontology/parent> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. },"```sparql
# Step 1: Identify Carloman of Bavaria
SELECT ?carloman WHERE {
    ?carloman rdfs:label ""Carloman of Bavaria""@en .
}

# Step 2: Determine his father
SELECT ?father WHERE {
    VALUES ?carloman { <http://dbpedia.org/resource/Carloman_of_Bavaria> }
    ?carloman dbo:parent ?father .
}

# Step 3: Check the father's roles (office holder and royalty)
SELECT DISTINCT ?father WHERE {
    VALUES ?father { ?f } # Replace ?f with actual URI from previous query
    ?father rdf:type dbo:Monarch . # Royalty check
    OPTIONAL { ?father dbo:positionHeld ?position . }
    FILTER EXISTS { ?position rdfs:label ?officeLabel . FILTER(lang(?officeLabel) = 'en') } # Office holder check
}

# Step 4: Identify the child of this father who is royalty
SELECT DISTINCT ?child WHERE {
    VALUES ?father { ?f } # Replace ?f with actual URI from previous query
    ?child dbo:parent ?father .
    ?child rdf:type dbo:Monarch . # Royalty check
}

# Step 5: Find the parent of this royal child
SELECT DISTINCT ?parent WHERE {
    VALUES ?child { ?c } # Replace ?c with actual URI from previous query
    ?child dbo:parent ?parent .
}
```",3,6,4,3,1,3,3,71,0,0,2,0,0.0,0
917,7,train,"Who is the child, that is a royalty, of Kamehameha III?",SELECT ?result WHERE { <http://dbpedia.org/resource/Kamehameha_III> <http://dbpedia.org/ontology/child> ?result . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?child ?title WHERE {
  ?kamehameha3 dbo:child ?child .
  FILTER (strstarts(str(?kamehameha3), ""Kamehameha III""))
  
  OPTIONAL { ?child dbp:title ?title . }
  FILTER EXISTS { 
    ?child dbo:royalTitle ?title .
  }
}
```",1,2,2,1,1,3,3,71,0,0,3,0,0.0,0
216,4,train,Give me the coach of Croatia national under-21 football team.,SELECT ?result WHERE { <http://dbpedia.org/resource/Croatia_national_under-21_football_team> <http://dbpedia.org/ontology/coach> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?coachLabel WHERE {
  ?team rdfs:label ""Croatia national under-21 football team""@en.
  ?team dbo:coach ?coach.
  ?coach rdfs:label ?coachLabel.
}
```",1,1,2,1,1,3,3,71,0,1,1,0.0,0.0,0
341,3,train,"Give me the work, that is a work and an album, of Serrano.","SELECT ?result WHERE { ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Album>. ?result <http://dbpedia.org/property/writer> ""Serrano""@en . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?work WHERE {
  ?work a dbo:Album .
  ?work dbo:artist dbr:Serrano ;
        rdfs:label ?label .
  FILTER (lang(?label) = 'en')
}
```",1,3,2,1,1,2,2,9,0,0,7,0,0.0,0
507,17,train,Give me the profession of the person born on 1966-02-18.,"SELECT ?result WHERE { ?v1 <http://dbpedia.org/property/occupation> ?result . ?v1 <http://dbpedia.org/ontology/birthDate> ""1966-02-18""^^<http://www.w3.org/2001/XMLSchema#date> . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?person ?occupation WHERE {
  ?person a dbo:Person .
  ?person dbo:birthDate ?date .
  FILTER (YEAR(?date) = 1966 && MONTH(?date) = 2 && DAY(?date) = 18)
  OPTIONAL { ?person dbo:occupation ?occupation }
}
```",2,2,3,2,1,3,3,71,5,27,9,0.15625,0.35714285714285715,0.21739130434782608
456,4,train,Give me the actor of Pacific Drive.,SELECT ?result WHERE { <http://dbpedia.org/resource/Pacific_Drive> <http://dbpedia.org/property/starring> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?actor WHERE {
  VALUES ?movie { dbr:Pacific_Drive }
  ?movie dbo:starring ?actor .
}
```",1,1,2,1,1,3,3,71,16,0,6,1.0,0.7272727272727273,0.8421052631578948
459,10,train,"Give me the governor of the administration, that is a politician, of Brad Henry.",SELECT ?result WHERE { ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v0 <http://dbpedia.org/property/governor> ?result . ?v0 <http://dbpedia.org/property/governor> <http://dbpedia.org/resource/Brad_Henry> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?governorName WHERE {
  ?person foaf:name ""Brad Henry""@en .
  ?person dbo:officeHolderOf ?administration .
  ?administration a dbo:GovernmentAgency ;
                  dbo:governmentHead ?governor .
  ?governor foaf:name ?governorName .
}
```",2,3,3,2,1,2,3,28,0,0,10,0,0.0,0
130,14,train,"Give me the entity in the administration, that is American, of the award of Živko Ključe.",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/state> ?v0 . ?v0 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/United_States>. <http://dbpedia.org/resource/Živko_Ključe> <http://dbpedia.org/property/awards> ?v2 . ?v0 <http://dbpedia.org/property/governor> ?v2 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?administration WHERE {
  ?award dbo:recipient dbr:Živko_Ključe .
  ?award dbo:administeredBy ?administration .
  FILTER (CONTAINS(LCASE(?administration), ""american"") || CONTAINS(LCASE(?administration), ""usa""))
}
```",3,4,4,3,1,3,2,20,0,0,26076,0,0.0,0
18,10,train,Give me the parent of the professional in Actress.,"SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/child> ?v1 . ?v1 <http://dbpedia.org/property/occupation> ""Actress""@en . }","```sparql
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?parentLabel WHERE {
  ?actressClass rdfs:subClassOf+ ?parentClass .
  ?actressClass rdfs:label ""Actress""@en .
  ?parentClass rdfs:label ?parentLabel .
  FILTER(LANG(?parentLabel) = 'en')
}
```",2,2,3,2,1,2,3,28,0,0,1063,0,0.0,0
715,38,train,"Give me the leader of the office, that is a government agency and an organisation, of Carlos Franco Iribarnegaray and commander in the force of Francisco Largo Caballero.",SELECT ?result WHERE { ?v3 <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Francisco_Largo_Caballero> . <http://dbpedia.org/resource/Carlos_Franco_Iribarnegaray> <http://dbpedia.org/property/office> ?v2 . ?v2 <http://dbpedia.org/ontology/leader> ?result . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/GovernmentAgency>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?v3 <http://dbpedia.org/ontology/commander> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?leader WHERE {
  # Find Carlos Franco Iribarnegaray's office
  ?office dbo:head dbr:Carlos_Franco_Iribarnegaray .
  ?office a dbo:GovernmentAgency ;
          a dbo:Organization .

  # Find Francisco Largo Caballero's force and its commander
  ?force dbo:commander dbr:Francisco_Largo_Caballero .
  ?force dbo:commander ?leader .

  # Ensure the leader is the same person who led the office
  FILTER (?office = ?force)
}
```",4,6,5,2,2,3,3,71,0,0,1,0,0.0,0
935,9,train,"Give me the awardee of the award, that is an award, of Syed Sohail Hussain Naqvi.",SELECT ?result WHERE { <http://dbpedia.org/resource/Syed_Sohail_Hussain_Naqvi> <http://dbpedia.org/property/awards> ?v0 . ?result <http://dbpedia.org/property/awards> ?v0 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Award>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?award ?otherRecipient WHERE {
  # Find awards associated with Syed Sohail Hussain Naqvi
  dbr:Syed_Sohail_Hussain_Naqvi dbo:award ?award .
  
  # For each award, find other recipients
  ?award dbo:recipient ?person .
  FILTER(?person != dbr:Syed_Sohail_Hussain_Naqvi)
  BIND(?person AS ?otherRecipient)
}
```",2,3,3,2,1,3,2,20,0,0,52,0,0.0,0
791,11,train,"Give me the spouse of the spouse, that is a royalty, of Emperor Takakura.",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/spouse> ?v0 . ?v0 <http://dbpedia.org/ontology/spouse> <http://dbpedia.org/resource/Emperor_Takakura> . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. },"```sparql
SELECT ?royalty WHERE {
  ?emperor rdf:type dbo:Emperor ;
           foaf:name ""Takakura""@en .
  
  ?emperor dbo:spouse ?spouse1 .

  ?spouse1 dbo:spouse ?spouse2 .

  FILTER EXISTS { ?spouse2 rdf:type dbo:RoyalFamilyMember }
}
```",2,3,3,2,1,3,3,71,0,0,1,0,0.0,0
978,6,train,Give me the band member of Chicane (musician) and band member of Enya.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/associatedMusicalArtist> <http://dbpedia.org/resource/Enya> . ?result <http://dbpedia.org/ontology/associatedMusicalArtist> <http://dbpedia.org/resource/Chicane_(musician)> . },"```sparql
SELECT ?person ?label WHERE {
  VALUES (?musician) { 
    dbc:Chicane (musician)
    dbc:Enya
  }
  
  ?musician dbo:associatedBandMember ?person .
  OPTIONAL { ?person rdfs:label ?label . FILTER(lang(?label) = 'en') }

  UNION

  {
    VALUES (?musician) { dbc:Enya }
    ?musician dbo:collaborator ?person .
    OPTIONAL { ?person rdfs:label ?label . FILTER(lang(?label) = 'en') }
  }
}
```",2,2,3,1,2,3,2,20,0,0,1,0,0.0,0
216,13,train,Give me the office of the mayor of Ros Bates and party of Campbell Newman.,SELECT ?result WHERE { <http://dbpedia.org/resource/Campbell_Newman> <http://dbpedia.org/ontology/party> ?result . ?v1 <http://dbpedia.org/property/office> ?result . <http://dbpedia.org/resource/Ros_Bates> <http://dbpedia.org/property/leader> ?v1 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?rosBatesOffice ?campbellNewmanParty WHERE {
  # Find Ros Bates' office related to being a mayor
  OPTIONAL { 
    ?rosBates dbr:Ros_Bates .
    ?rosBates dbo:office ?office .
    ?office rdfs:label ?rosBatesOffice .
    FILTER(CONTAINS(LCASE(?rosBatesOffice), ""mayor""))
  }
  
  # Find Campbell Newman's political party
  OPTIONAL {
    ?campbellNewman dbr:Campbell_Newman .
    ?campbellNewman dbo:partyAffiliation ?party .
    ?party rdfs:label ?campbellNewmanParty .
  }
}
```",3,3,4,2,2,2,3,28,0,0,1,0,0.0,0
791,33,train,"Give me the predecessor of the child of the child, that is an office holder and a royalty, of Emperor Go-Shirakawa and spouse of Taira no Tokuko.",SELECT ?result WHERE { ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?result <http://dbpedia.org/ontology/successor> ?v3 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v0 <http://dbpedia.org/ontology/parent> <http://dbpedia.org/resource/Emperor_Go-Shirakawa> . ?v3 <http://dbpedia.org/property/father> ?v0 . ?result <http://dbpedia.org/ontology/spouse> <http://dbpedia.org/resource/Taira_no_Tokuko> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?predecessor WHERE {
  # Emperor Go-Shirakawa's child who is a royalty and office holder
  dbr:Emperor_Go-Shirakawa dbo:child dbr:Taira_no_Tokuko .
  
  # Taira no Tokuko's spouse (Emperor Takakura)
  dbr:Taira_no_Tokuko dbo:spouse dbr:Emperor_Takakura .

  # Their child (Emperor Antoku)
  dbr:Emperor_Takakura dbo:child dbr:Emperor_Antoku .

  # Emperor Antoku's child (Princess Imperial Kishi)
  dbr:Emperor_Antoku dbo:child dbr:Princess_Imperial_Kishi .

  # Taira no Tokuko as the predecessor of Princess Imperial Kishi
  dbr:Taira_no_Tokuko a dbo:Monarch ;
                     dbo:spouse dbr:Emperor_Takakura .
  
  FILTER (dbr:Taira_no_Tokuko != dbr:Princess_Imperial_Kishi)
}
```",4,6,5,3,2,3,3,71,0,0,1,0,0.0,0
433,26,train,"Give me the associated musical artist of the associated musical artist, that is an artist and a musical artist, of the associated musical artist, that is a musical artist and an artist, of Ornette Coleman.",SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. ?v2 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v1 <http://dbpedia.org/ontology/associatedMusicalArtist> ?v2 . <http://dbpedia.org/resource/Ornette_Coleman> <http://dbpedia.org/ontology/associatedMusicalArtist> ?v1 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. },"```sparql
SELECT ?finalArtist WHERE {
  # Step 1: Find an artist associated with Ornette Coleman who is both a ""musical artist"" and an ""artist.""
  ?firstArtist dbo:associatedMusicalArtist dbr:Ornette_Coleman .
  ?firstArtist rdf:type dbo:Musician .
  ?firstArtist rdf:type dbo:Artist .

  # Step 2: From the first associated artist, find another associated artist who is both a ""musical artist"" and an ""artist.""
  ?secondArtist dbo:associatedMusicalArtist ?firstArtist .
  ?secondArtist rdf:type dbo:Musician .
  ?secondArtist rdf:type dbo:Artist .

  # Step 3: From the second associated artist, find the musical artist.
  ?finalArtist dbo:associatedMusicalArtist ?secondArtist .
}
```",3,7,4,3,1,3,3,71,0,0,117,0,0.0,0
606,1,train,Give me the birthplace of Charles I. Barber.,SELECT ?result WHERE { <http://dbpedia.org/resource/Charles_I._Barber> <http://dbpedia.org/ontology/birthPlace> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?birthPlace WHERE {
  dbr:Charles_I._Barber dbo:birthPlace ?birthPlace .
}
```",1,1,2,1,1,3,2,20,1,0,0,1.0,1.0,1.0
326,3,train,Give me the profession of Susanne Lewis.,SELECT ?result WHERE { <http://dbpedia.org/resource/Susanne_Lewis> <http://dbpedia.org/property/occupation> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT ?occupation WHERE {
  ?person foaf:name ""Susanne Lewis""@en .
  OPTIONAL { ?person dbo:occupation ?occupation . }
}
```",1,1,2,1,1,2,2,9,2,0,0,1.0,1.0,1.0
329,10,train,"Give me the entity in the region, that is a country, of Western European Time.",SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. ?result <http://dbpedia.org/ontology/country> ?v1 . ?v1 <http://dbpedia.org/property/timeZone> <http://dbpedia.org/resource/Western_European_Time> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?country WHERE {
  ?timeZone a dbo:TimeZone ;
            dbo:hasTimezoneName ""Western European Time"" .
  
  ?location dbo:timezone ?timeZone ;
            a dbo:Country .

  BIND(?location AS ?country)
}
```",2,3,3,2,1,2,3,28,0,0,46363,0,0.0,0
645,18,train,Give me the commander in Battle of Jarama and military force of Spanish Civil War and leader of Ministry of the Army (Spain).,SELECT ?result WHERE { <http://dbpedia.org/resource/Battle_of_Jarama> <http://dbpedia.org/ontology/commander> ?result . ?result <http://dbpedia.org/ontology/battle> <http://dbpedia.org/resource/Spanish_Civil_War> . <http://dbpedia.org/resource/Ministry_of_the_Army_(Spain)> <http://dbpedia.org/ontology/leader> ?result . },"```sparql
# Query 1: Commander in the Battle of Jarama
SELECT ?commander WHERE {
  wd:Q1234567 dbo:commander ?commander .
}
```

```sparql
# Query 2: Military Force in the Spanish Civil War
SELECT DISTINCT ?militaryForce WHERE {
  ?event dbo:participatingMilitaryUnit ?militaryForce ;
         rdfs:label ""Spanish Civil War""@en .
}
```

```sparql
# Query 3: Leader of the Ministry of the Army (Spain)
SELECT ?leader WHERE {
  wd:Q7890123 dbo:head ?leader .
}
```

Note: The placeholders `wd:Q1234567` and `wd:Q7890123` should be replaced with the actual DBpedia resource identifiers for ""Battle of Jarama"" and ""Ministry of the Army (Spain)"" respectively. These can be found by searching DBpedia or using a SPARQL endpoint to query for these entities.",3,3,4,1,3,3,3,71,0,0,1,0,0.0,0
382,4,train,"Give me the reference, that is a college coach and a coach, to Harry Combes.","SELECT ?result WHERE { ?result <http://xmlns.com/foaf/0.1/name> ""Harry Combes""@en . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Coach>. ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/CollegeCoach>. }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?reference WHERE {
  VALUES ?occupation { 
    dbc:Category:American_college_football_coaches 
    dbc:Category:Coaches 
  }
  
  ?reference dbo:wikiPageRedirects dbr:Harry_Combes .
  ?reference dbo:wikiPageCategories ?category .
  ?category rdfs:label ?occupationLabel .
  FILTER (CONTAINS(LCASE(?occupationLabel), ""american college football coaches"") || CONTAINS(LCASE(?occupationLabel), ""coaches""))
}
```",1,3,2,1,1,3,2,20,0,0,1,0,0.0,0
47,13,train,Give me the office of the awardee of Banga Bhushan.,SELECT ?result WHERE { ?v1 <http://dbpedia.org/property/office> ?result . ?v1 <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/Banga_Bhushan> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?person ?office WHERE {
  ?person dbo:honoraryTitle dbr:Banga_Bhushan .
  OPTIONAL { ?person dbo:positionHeld ?office . }
}
```",2,2,3,2,1,3,3,71,0,0,1,0,0.0,0
955,5,train,"Who is the band member, that is a musical artist and an artist, of Street Dogs?",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/associatedMusicalArtist> <http://dbpedia.org/resource/Street_Dogs> . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?member WHERE {
  ?band a dbo:Band ;
        dbo:bandMember ?member .
  
  FILTER(CONTAINS(LCASE(STR(?band)), ""street dogs""))
  
  ?member dbo:occupation ?occupation1 .
  ?member dbo:occupation ?occupation2 .

  FILTER(CONTAINS(LCASE(STR(?occupation1)), ""musician"") && 
         CONTAINS(LCASE(STR(?occupation2)), ""artist""))
}
```",1,3,2,1,1,3,2,20,0,0,2,0,0.0,0
917,22,train,Give me the parent of Albert Kamehameha and child of the father of Kamehameha IV.,SELECT ?result WHERE { <http://dbpedia.org/resource/Kamehameha_IV> <http://dbpedia.org/property/father> ?v0 . ?result <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Albert_Kamehameha> . ?result <http://dbpedia.org/property/father> ?v0 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?commonIndividual WHERE {
  # Find the parent of Albert Kamehameha
  ?albertKamehameha dbo:parent ?parentOfAlbert .
  FILTER(STRSTARTS(STR(?albertKamehameha), ""dbr:Albert_Kamehameha""))

  # Find the father of Kamehameha IV and his child
  ?kamehamehaIV dbo:father ?fatherOfKamehamehaIV .
  FILTER(STRSTARTS(STR(?kamehamehaIV), ""dbr:King_Kamehameha_IV""))
  
  ?childOfFather dbr:parent ?fatherOfKamehamehaIV .

  # Find the common individual
  VALUES (?commonIndividual) {
    (?parentOfAlbert)
    (?childOfFather)
  }
}
```",3,3,4,2,2,3,3,71,0,0,1,0,0.0,0
917,17,train,"Give me the father of the child, that is a royalty, of Kamehameha III.",SELECT ?result WHERE { ?v0 <http://dbpedia.org/property/father> ?result . <http://dbpedia.org/resource/Kamehameha_III> <http://dbpedia.org/ontology/child> ?v0 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?child ?father WHERE {
  # Find Kamehameha III's children
  dbr:Kamehameha_III dbo:child ?child .
  
  # Ensure the child is royalty (e.g., has a title or role related to royalty)
  OPTIONAL { ?child dbo:title ?title . FILTER(CONTAINS(LCASE(?title), ""king"") || CONTAINS(LCASE(?title), ""queen"")) }
  
  # Find the father of each child
  ?child dbo:father ?father .
}
```",2,3,3,2,1,3,3,71,0,0,2,0,0.0,0
83,6,train,"Give me the player in the person born, that is an athlete, on 1991-11-19.","SELECT ?result WHERE { ?v0 <http://dbpedia.org/ontology/team> ?result . ?v0 <http://dbpedia.org/ontology/birthDate> ""1991-11-19""^^<http://www.w3.org/2001/XMLSchema#date> . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Athlete>. }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>

SELECT ?player WHERE {
  ?player rdf:type dbo:Athlete .
  ?player dbo:birthDate ""1991-11-19""^^xsd:date .
}
```",2,3,3,2,1,2,2,9,0,30,91,0.0,0.0,0
933,21,train,Give me the band of The Ramong Sound and band of the band of Alan Warner (musician).,SELECT ?result WHERE { <http://dbpedia.org/resource/The_Ramong_Sound> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v2 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . <http://dbpedia.org/resource/Alan_Warner_(musician)> <http://dbpedia.org/ontology/associatedMusicalArtist> ?v2 . },"```sparql
SELECT ?ramonesBand ?alanWarnerBand WHERE {
  # Find the band of Ramones
  dbpedia:Ramones dbo:musicalArtist ?ramonesBand .
  
  # Find the band of Alan Warner (musician)
  dbpedia:Alan_Warner_musician dbo:musicalArtist ?alanWarnerBand .
}
```",3,3,4,2,2,3,3,71,0,0,4,0,0.0,0
47,35,train,Give me the office of the administration of Jagdeep Dhankhar and office of the awardee of Padma Vibhushan.,SELECT ?result WHERE { ?v2 <http://dbpedia.org/property/governor> <http://dbpedia.org/resource/Jagdeep_Dhankhar> . ?v1 <http://dbpedia.org/property/office> ?result . ?v1 <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/Padma_Vibhushan> . ?v2 <http://dbpedia.org/property/office> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?officeJagdeepDhankhar ?awardeeOffice WHERE {
  # Query for Jagdeep Dhankhar's office
  OPTIONAL {
    dbr:Jagdeep_Dhankhar dbo:positionHeld ?officeJagdeepDhankhar .
  }

  # Query for Padma Vibhushan awardees' offices
  OPTIONAL {
    ?awardee dbo:honour <http://dbpedia.org/resource/Padma_Vibhushan> ;
            dbo:occupation ?awardeeOffice .
  }
}
```",4,4,5,2,2,3,3,71,0,0,6,0,0.0,0
417,15,train,"Who is the parent, that is a royalty, of the child of Knud, Hereditary Prince of Denmark?","SELECT ?result WHERE { ?v1 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Knud,_Hereditary_Prince_of_Denmark> . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?result <http://dbpedia.org/ontology/child> ?v1 . }","```sparql
SELECT DISTINCT ?royalParent WHERE {
  # Find Knud, Hereditary Prince of Denmark
  ?knud dbo:name ""Knud, Hereditary Prince of Denmark""@en .
  
  # Find the child of Knud
  ?child dbo:parent ?knud .

  # Find the parent of this child
  ?child dbo:parent ?royalParent .

  # Check if the royalParent has a title indicating royalty
  OPTIONAL { ?royalParent dbo:title ?title . FILTER(CONTAINS(LCASE(?title), ""prince"") || CONTAINS(LCASE(?title), ""queen"") || CONTAINS(LCASE(?title), ""king"")) }
  
  # Ensure that the parent is indeed a royalty by checking if they have a title
  FILTER EXISTS { ?royalParent dbo:title ?title . }
}
```",2,3,3,2,1,3,3,71,0,0,2,0,0.0,0
129,13,train,Give me the associated musical artist of EarthGang and professional in the mayor of 1999 West Dunbartonshire Council election.,SELECT ?result WHERE { <http://dbpedia.org/resource/1999_West_Dunbartonshire_Council_election> <http://dbpedia.org/property/leader> ?v1 . ?result <http://dbpedia.org/property/occupation> ?v1 . <http://dbpedia.org/resource/EarthGang> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . },"```sparql
# Query to find associated musical artist of EarthGang
SELECT ?artist WHERE {
  wd:Q1234567 wdt:P170 ?artist .
}

UNION

# Query to find candidates in the 1999 West Dunbartonshire Council election
SELECT DISTINCT ?candidate WHERE {
  ?election wdt:P31 wd:Q1234568 ; # Instance of a council election
            wdt:P580 ?start ;
            wdt:P582 ?end .
  FILTER (?start <= ""1999-05-06""^^xsd:date && ?end >= ""1999-05-06""^^xsd:date)
  ?election wdt:P1367 wd:Q1234569 . # West Dunbartonshire
  ?candidate wdt:P1025 ?election .
}
```

Note: The above SPARQL query uses placeholder Wikidata IDs (`wd:Q1234567`, `wd:Q1234568`, `wd:Q1234569`) for EarthGang, council election type, and West Dunbartonshire. These need to be replaced with the actual Wikidata item identifiers.",3,3,4,2,2,2,3,28,0,0,3,0,0.0,0
36,2,train,Give me the person born as Ayo Makun.,"SELECT ?result WHERE { ?result <http://dbpedia.org/property/birthName> ""Ayo Makun""@en . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT ?person ?fullName WHERE {
  ?person a dbo:Person .
  OPTIONAL { ?person foaf:name ?fullName . }
  FILTER(CONTAINS(LCASE(str(?person/dbo:birthName)), ""ayo makun""))
}
```",1,1,2,1,1,2,3,28,0,0,1,0,0.0,0
773,13,train,Give me the parent of the successor of Charles the Bald.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/child> ?v1 . <http://dbpedia.org/resource/Charles_the_Bald> <http://dbpedia.org/ontology/successor> ?v1 . },"```sparql
SELECT ?parent WHERE {
  wd:Q1343 wdt:P31 wd:Q5;       # Louis the Stammerer is a human
           wdt:P22 wd:Q1342.    # Charles the Bald is his father

  wd:Q1342 wdt:P25 ?parent.    # Get the parent of Charles the Bald
}
```",2,2,3,2,1,3,3,71,0,0,2,0,0.0,0
445,38,train,Give me the entity in the award of George H. Cameron and death place of the awardee of Royal Astronomical Society.,SELECT ?result WHERE { ?v3 <http://dbpedia.org/ontology/deathPlace> ?result . ?v3 <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/Royal_Astronomical_Society> . <http://dbpedia.org/resource/George_H._Cameron> <http://dbpedia.org/property/awards> ?v2 . ?result <http://dbpedia.org/ontology/country> ?v2 . },"```sparql
# Query to find the award associated with George H. Cameron
SELECT ?award WHERE {
  ?person dbo:givenName ""George"" .
  ?person dbo:familyName ""H. Cameron"" .
  ?person dbo:honoraryTitle ?award .
}

# Assuming we have identified an award, let's say it is 'AwardX', 
# the next query would be to find recipients of this award from the Royal Astronomical Society

SELECT ?recipient WHERE {
  ?recipient dbo:receivedAward <http://dbpedia.org/resource/AwardX> .
  ?recipient dbo:honoraryTitle ""Royal Astronomical Society"" .
}

# Finally, determine the death place of that awardee
SELECT ?deathPlace WHERE {
  ?recipient dbo:deathPlace ?deathPlace .
}
```

Note: Replace `<http://dbpedia.org/resource/AwardX>` with the actual URI obtained from the first query.",4,4,5,2,2,3,3,71,0,0,2,0,0.0,0
773,10,train,Give me the parent of Charles the Fat and spouse of Louis the German.,SELECT ?result WHERE { <http://dbpedia.org/resource/Charles_the_Fat> <http://dbpedia.org/ontology/parent> ?result . <http://dbpedia.org/resource/Louis_the_German> <http://dbpedia.org/ontology/spouse> ?result . },"```sparql
SELECT ?person WHERE {
  # Find the father of Charles the Fat
  ?charles dbo:parent dbc:Charles_the_Fat .
  ?charles dbo:child dbc:Louis_the_German .

  # Find the spouse of Louis the German
  ?louis dbo:spouse ?hemma .
  ?louis rdfs:label ""Louis the German""@en .

  FILTER(?person = ?louis)
}
```",2,2,3,1,2,3,3,71,0,0,1,0,0.0,0
715,29,train,Give me the commander in the force of Francisco Largo Caballero and leader of Ministry of the Air (Spain) and commander in Rif War.,SELECT ?result WHERE { <http://dbpedia.org/resource/Rif_War> <http://dbpedia.org/ontology/commander> ?result . ?v3 <http://dbpedia.org/ontology/commander> ?result . ?v3 <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Francisco_Largo_Caballero> . <http://dbpedia.org/resource/Ministry_of_the_Air_(Spain)> <http://dbpedia.org/ontology/leader> ?result . },"```sparql
SELECT ?person ?name WHERE {
  ?person dbo:spouse ?spouse .
  ?spouse foaf:name ""Francisco Largo Caballero""@en .
  
  OPTIONAL { 
    ?person dbo:positionHeld ?ministry .
    ?ministry rdfs:label ?ministryLabel .
    FILTER (CONTAINS(LCASE(?ministryLabel), ""air ministry""))
  }
  
  OPTIONAL {
    ?person dbo:occupation ?occupation .
    ?occupation rdfs:label ?occupationLabel .
    FILTER (CONTAINS(LCASE(?occupationLabel), ""commander"") && CONTAINS(LCASE(?occupationLabel), ""rif war""))
  }

  ?person foaf:name ?name .
}
```",4,4,5,2,3,3,3,71,0,0,1,0,0.0,0
976,23,train,"Give me the office of the leader, that is a politician, of the administration, that is an organisation, of Kemal Kılıçdaroğlu.",SELECT ?result WHERE { ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v1 <http://dbpedia.org/property/leader> <http://dbpedia.org/resource/Kemal_Kılıçdaroğlu> . ?v1 <http://dbpedia.org/ontology/leader> ?v2 . ?v2 <http://dbpedia.org/property/office> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. },"```sparql
SELECT ?office WHERE {
  ?person foaf:name ""Kemal Kılıçdaroğlu""@en .
  ?person dbo:party dbr:Republican_People%27s_Party_(Turkey) .
  ?person dbo:position ?office .
}
```",3,5,4,3,1,3,3,71,0,0,13,0,0.0,0
826,29,train,"Give me the predecessor of Louis IV, Grand Duke of Hesse and successor of the child, that is a royalty, of Louis I, Grand Duke of Hesse and spouse of Anna Magdalena Appel.","SELECT ?result WHERE { ?v3 <http://dbpedia.org/ontology/successor> ?result . ?result <http://dbpedia.org/ontology/successor> <http://dbpedia.org/resource/Louis_IV,_Grand_Duke_of_Hesse> . <http://dbpedia.org/resource/Anna_Magdalena_Appel> <http://dbpedia.org/ontology/spouse> ?result . <http://dbpedia.org/resource/Louis_I,_Grand_Duke_of_Hesse> <http://dbpedia.org/ontology/child> ?v3 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?person WHERE {
  # Predecessor of Louis IV, Grand Duke of Hesse
  ?predecessor dbo:successor dbr:Louis_IV,_Grand_Duke_of_Hesse .
  
  # Child of Louis I, Grand Duke of Hesse who is royalty and their successor
  ?child dbo:parent dbr:Louis_I,_Grand_Duke_of_Hesse ;
         a dbo:Monarch .
  ?successorChild dbo:predecessor ?child .

  # Spouse of Anna Magdalena Appel
  ?spouse dbo:spouse dbr:Anna_Magdalena_Appel .

  # Convergence on the same person
  FILTER (?predecessor = ?successorChild && ?predecessor = ?spouse)
}
```",4,5,5,2,3,3,3,71,0,0,1,0,0.0,0
865,39,train,Give me the father of the child of the father of Abul Maal Abdul Muhith and father of AK Abdul Momen.,SELECT ?result WHERE { ?v0 <http://dbpedia.org/property/father> ?result . ?v0 <http://dbpedia.org/property/father> ?v3 . <http://dbpedia.org/resource/AK_Abdul_Momen> <http://dbpedia.org/property/father> ?result . <http://dbpedia.org/resource/Abul_Maal_Abdul_Muhith> <http://dbpedia.org/property/father> ?v3 . },"```sparql
SELECT ?father WHERE {
  ?person foaf:name ""Abul Maal Abdul Muhith""@en .
  ?person dbo:father ?parent1 .
  ?parent1 foaf:name ""A.H.M. Kamruzzaman""@en .

  ?child dbo:father ?parent2 .
  ?parent2 foaf:name ""A.H.M. Kamruzzaman""@en .
  
  ?parent1 dbo:father ?father .
  ?father foaf:name ?name .
  FILTER regex(?name, ""^Abdul Hamid Khan Bhashani$"", ""i"")
}
```",4,4,5,3,2,3,3,71,0,0,1,0,0.0,0
442,0,train,Give me the resting place of Allyn K. Capron.,SELECT ?result WHERE { <http://dbpedia.org/resource/Allyn_K._Capron> <http://dbpedia.org/ontology/restingPlace> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?deathPlace ?burialPlace WHERE {
  VALUES ?person { dbr:Allyn_K._Capron }
  OPTIONAL { ?person dbo:deathPlace ?deathPlace . }
  OPTIONAL { ?person dbo:burialPlace ?burialPlace . }
}
```",1,1,2,1,1,2,2,9,0,0,1,0,0.0,0
124,23,train,"Give me the commander in the war, that is a societal event and a military conflict, of the reference, that is Australian and an organisation and a military unit, to 'A' Battery, Royal Australian Artillery.","SELECT ?result WHERE { ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?v2 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Australia>. ?v0 <http://dbpedia.org/ontology/commander> ?result . ?v2 <http://dbpedia.org/ontology/battle> ?v0 . ?v2 <http://xmlns.com/foaf/0.1/name> ""'A' Battery, Royal Australian Artillery""@en . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryUnit>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?event ?commander WHERE {
  # Identify 'A' Battery as a military unit
  dbr:A_Battery,_Royal_Australian_Artillery dbo:militaryUnitOf dbr:Royal_Australian_Artillery .
  
  # Find events that are both societal and military conflicts
  ?event dbo:type dbr:Military_conflict ;
         dbo:participatingOrganisation dbr:Royal_Australian_Artillery .

  # Determine the commander associated with 'A' Battery during such events
  ?commander dbo:commandedMilitaryUnit dbr:A_Battery,_Royal_Australian_Artillery .
  
  FILTER EXISTS { ?event dbo:location dbr:Australia } # Ensure it's an Australian context
}
```",3,8,4,3,1,3,3,71,0,0,109,0,0.0,0
236,0,train,Give me the party member of Federalist Party.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/party> <http://dbpedia.org/resource/Federalist_Party> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?person ?personLabel WHERE {
  ?person dbo:member dbr:Federalist_Party .
  SERVICE wikibase:label { bd:serviceParam wikibase:language ""[AUTO_LANGUAGE],en"". }
}
```",1,1,2,1,1,3,2,20,0,0,269,0,0.0,0
865,1,train,Give me the father of AK Abdul Momen.,SELECT ?result WHERE { <http://dbpedia.org/resource/AK_Abdul_Momen> <http://dbpedia.org/property/father> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT ?father WHERE {
  ?person a dbo:Person ;
          foaf:name ""AK Abdul Momen""@en .
  OPTIONAL { ?person dbo:father ?father . }
}
```",1,1,2,1,1,3,3,71,0,0,1,0,0.0,0
83,2,train,Who is the person born on 1995-07-07?,"SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/birthDate> ""1995-07-07""^^<http://www.w3.org/2001/XMLSchema#date> . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?person ?name WHERE {
    ?person a dbo:Person .
    ?person dbo:birthDate ?date .
    FILTER (YEAR(?date) = 1995 && MONTH(?date) = 7 && DAY(?date) = 7)
    OPTIONAL { ?person foaf:name ?name . }
}
```",1,1,2,1,1,2,2,9,34,45,0,0.43037974683544306,1.0,0.6017699115044248
579,13,train,"Give me the native of the residence, that is English and a settlement, of the resident of Scotland.",SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/United_Kingdom>. ?v0 <http://dbpedia.org/property/residence> ?v1 . ?result <http://dbpedia.org/ontology/birthPlace> ?v1 . ?v0 <http://dbpedia.org/ontology/residence> <http://dbpedia.org/resource/Scotland> . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?nativeName WHERE {
  # Find a person from Scotland
  ?person dbo:nationality dbr:Scottish ;
          dbo:residence ?residence .
  
  # Ensure the residence is in England and English is native
  ?residence dbo:country dbr:England ;
             dbp:language ""English"" .

  # Get the historical or native name of the settlement
  OPTIONAL { ?residence dbo:nativeName ?nativeName }
  
  FILTER (LANG(?nativeName) = 'en')
}
LIMIT 1
```",3,5,4,3,1,3,2,20,0,0,5279,0,0.0,0
645,10,train,Give me the commander in Battle of Jarama and leader of Ministry of the Army (Spain).,SELECT ?result WHERE { <http://dbpedia.org/resource/Ministry_of_the_Army_(Spain)> <http://dbpedia.org/ontology/leader> ?result . <http://dbpedia.org/resource/Battle_of_Jarama> <http://dbpedia.org/ontology/commander> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?person WHERE {
  ?battle dbo:commander ?person .
  FILTER(STRSTARTS(STR(?battle), ""http://dbpedia.org/resource/Battle_of_Jarama""))
  
  ?ministry dbo:leader ?person .
  FILTER(STRSTARTS(STR(?ministry), ""http://dbpedia.org/resource/Ministry_of_the_Army_(Spain)""))

  ?person a dbo:Person .
}
```",2,2,3,1,2,3,3,71,1,0,0,1.0,1.0,1.0
456,5,train,"Give me the reference, that is a fictional character, to Lamont Cranston (radio, film and television).","SELECT ?result WHERE { ?result <http://xmlns.com/foaf/0.1/name> ""Lamont Cranston (radio, film and television)""@en . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/FictionalCharacter>. }","```sparql
SELECT ?character WHERE {
  ?person dbo:alias ""Lamont Cranston""@en .
  ?person dbo:fictionalCharacter ?character .
}
```",1,2,2,1,1,3,3,71,0,0,1,0,0.0,0
18,1,train,Give me the parent of Liza Huber.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Liza_Huber> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT ?parent WHERE {
  ?person foaf:name ""Liza Huber""@en .
  ?person dbo:parent ?parent .
}
```",1,1,2,1,1,2,3,28,0,0,1,0,0.0,0
459,12,train,Give me the governor of Dana Murphy and governor of Oklahoma and person born as John Kevin Stitt.,"SELECT ?result WHERE { ?result <http://dbpedia.org/property/birthName> ""John Kevin Stitt""@en . <http://dbpedia.org/resource/Dana_Murphy> <http://dbpedia.org/property/governor> ?result . <http://dbpedia.org/resource/Oklahoma> <http://dbpedia.org/property/governor> ?result . }","```sparql
# Query to find the governor of Dana Murphy (assuming it refers to a state or region)
SELECT ?governor WHERE {
  ?state rdfs:label ""Dana""@en.
  ?state dbo:governmentHead ?governor.
}

# Query to find the current governor of Oklahoma
SELECT ?governor WHERE {
  ?oklahoma rdfs:label ""Oklahoma""@en.
  ?oklahoma dbo:currentGovernor ?governor.
}

# Query to find John Kevin Stitt using his birth name and date
SELECT ?person WHERE {
  ?person foaf:name ""John Kevin Stitt"" .
  ?person dbo:birthDate ?birthDate .
  FILTER (YEAR(?birthDate) = 1970 && MONTH(?birthDate) = 5 && DAY(?birthDate) = 6)
}
```",3,3,4,1,3,2,3,28,0,0,1,0,0.0,0
36,18,train,Give me the person born as the birth name of Ayo Makun and person born in 1971.,"SELECT ?result WHERE { ?result <http://dbpedia.org/property/birthName> ?v1 . <http://dbpedia.org/resource/Ayo_Makun> <http://dbpedia.org/property/birthName> ?v1 . ?result <http://dbpedia.org/ontology/birthYear> ""1971""^^<http://www.w3.org/2001/XMLSchema#gYear> . }","```sparql
SELECT ?person WHERE {
  # Get Ayo Makun's birth name
  ?ayoMakun dbo:birthName ?birthName .
  FILTER(?ayoMakun = dbpedia:Ayo_Makun) .

  # Find a person with the same birth name and born in 1971
  ?person dbo:birthName ?birthName ;
          dbo:birthDate ?birthDate .
  FILTER(YEAR(?birthDate) = 1971)
}
```",3,3,4,2,2,2,3,28,0,0,1,0,0.0,0
281,5,train,Give me the award of Alfred Warden.,SELECT ?result WHERE { <http://dbpedia.org/resource/Alfred_Warden> <http://dbpedia.org/property/awards> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?award WHERE {
  dbr:Alfred_Warden dbo:award ?award .
}
```",1,1,2,1,1,2,3,28,1,0,0,1.0,1.0,1.0
365,7,train,Give me the person born as the birth name of Symon Petliura.,SELECT ?result WHERE { ?result <http://dbpedia.org/property/birthName> ?v1 . <http://dbpedia.org/resource/Symon_Petliura> <http://dbpedia.org/property/birthName> ?v1 . },"```sparql
SELECT ?person ?birthName WHERE {
  ?person foaf:name ""Symon Petliura""@en .
  OPTIONAL { ?person dbo:birthName ?birthName . }
}
```",2,2,3,2,1,3,2,20,1,1,0,0.5,1.0,0.6666666666666666
715,11,train,"Give me the commander in the force, that is a military conflict, of Abd el-Krim.",SELECT ?result WHERE { ?v0 <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Abd_el-Krim> . ?v0 <http://dbpedia.org/ontology/commander> ?result . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. },"```sparql
PREFIX dbp: <http://dbpedia.org/property/>
PREFIX dbo: <http://dbpedia.org/ontology/>

SELECT ?conflict ?commander WHERE {
  ?person rdfs:label ""Abd el-Krim""@en .
  ?person dbo:spouse ?conflict ;
          dbp:commander ?commander .
  FILTER (CONTAINS(LCASE(?conflict), ""rif war""))
}
```",2,3,3,2,1,3,3,71,0,0,22,0,0.0,0
93,9,train,"Give me the headquarter, that is a region and a settlement, of the headquarter of Clam Cove Pictograph Site.",SELECT ?result WHERE { ?v0 <http://dbpedia.org/ontology/location> ?result . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Region>. <http://dbpedia.org/resource/Clam_Cove_Pictograph_Site> <http://dbpedia.org/ontology/location> ?v0 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?headquarters WHERE {
  ?site dbo:location ?headquarters .
  FILTER (?site = dbr:Clam_Cove_Pictograph_Site)
  
  ?headquarters a ?type1 .
  ?headquarters a ?type2 .

  VALUES ?type1 { <http://dbpedia.org/ontology/Region> }
  VALUES ?type2 { <http://dbpedia.org/ontology/Settlement> }
}
```",2,4,3,2,1,3,2,20,0,0,5,0,0.0,0
826,17,train,"Who is the parent of the child of Louis IV, Grand Duke of Hesse?","SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/parent> ?result . ?v1 <http://dbpedia.org/ontology/parent> <http://dbpedia.org/resource/Louis_IV,_Grand_Duke_of_Hesse> . }","```sparql
SELECT ?child ?parent WHERE {
  wd:Q123456 wdt:P22 ?child . # Louis IV's children
  ?child wdt:P25 ?parent .   # The parent of each child
}
```

Note: Replace `wd:Q123456` with the actual DBpedia identifier for Louis IV, Grand Duke of Hesse.",2,2,3,2,1,3,3,71,0,0,2,0,0.0,0
212,4,train,Give me the birthplace of KODA (singer) and birthplace of Corp Sayvee.,SELECT ?result WHERE { <http://dbpedia.org/resource/KODA_(singer)> <http://dbpedia.org/ontology/birthPlace> ?result . <http://dbpedia.org/resource/Corp_Sayvee> <http://dbpedia.org/ontology/birthPlace> ?result . },"```sparql
# Query for Koda (Singer)
SELECT ?birthPlace WHERE {
  wd:Q123456 dbo:birthPlace ?birthPlace .
}

# Query for Corp Sayvee
SELECT ?birthPlace WHERE {
  wd:Q789012 dbo:birthPlace ?birthPlace .
}
```

Note: Replace `wd:Q123456` with the actual DBpedia resource identifier for Koda (singer) and `wd:Q789012` with the identifier for Corp Sayvee. These identifiers can be found by searching their names in DBpedia or using a service like Wikidata to find the correct QID.",2,2,3,1,2,2,2,9,0,0,1,0,0.0,0
582,5,train,Give me the child of Kazuaki Nagasawa.,SELECT ?result WHERE { ?result <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Kazuaki_Nagasawa> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>

SELECT ?child WHERE {
  ?person a dbo:Person ;
          foaf:name ""Kazuaki Nagasawa""@en .
  ?person dbo:child ?child .
}
```",1,1,2,1,1,3,3,71,0,0,1,0,0.0,0
453,4,train,Give me the religion of Newfoundland Colony and religion of John Henry Newman.,SELECT ?result WHERE { <http://dbpedia.org/resource/John_Henry_Newman> <http://dbpedia.org/ontology/religion> ?result . <http://dbpedia.org/resource/Newfoundland_Colony> <http://dbpedia.org/ontology/religion> ?result . },"```sparql
# Query for the religion of Newfoundland Colony
SELECT ?religion WHERE {
  wd:Q1234 rdfs:label ""Newfoundland Colony""@en .
  OPTIONAL { wd:Q1234 wdt:P140 ?religion . }
}

# Query for the religion of John Henry Newman
SELECT ?religion WHERE {
  wd:Q1235 rdfs:label ""John Henry Newman""@en .
  OPTIONAL { wd:Q1235 wdt:P140 ?religion . }
}
```

Note: `wd:Q1234` and `wd:Q1235` are placeholders for the actual DBpedia resource identifiers for Newfoundland Colony and John Henry Newman, respectively. You would need to replace these with the correct identifiers from DBpedia.",2,2,3,1,2,2,2,9,0,0,1,0,0.0,0
892,19,train,Give me the landmark at elevation of 58 and entity in the profession of Henri Crolla.,"SELECT ?result WHERE { <http://dbpedia.org/resource/Henri_Crolla> <http://dbpedia.org/property/occupation> ?v2 . ?result <http://dbpedia.org/ontology/country> ?v2 . ?result <http://dbpedia.org/ontology/elevation> ""58""^^<http://www.w3.org/2001/XMLSchema#integer> . }","```sparql
# Query for landmark at elevation of 58
SELECT ?landmark WHERE {
  ?landmark a dbo:Landmark ;
            dbo:elevationAboveSeaLevel ?elevation .
  FILTER (?elevation = ""58""^^xsd:string)
}

UNION

# Query for entities in the profession of boxing (related to Henri Crolla)
SELECT ?person WHERE {
  ?person dbo:occupation dbr:Boxer ;
          foaf:name ?name .
}
```",3,3,4,2,2,3,3,71,0,0,11,0,0.0,0
443,7,train,Give me the landmark at elevation of 28 and birthplace of Carl Larsson.,"SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/elevation> ""28""^^<http://www.w3.org/2001/XMLSchema#integer> . <http://dbpedia.org/resource/Carl_Larsson> <http://dbpedia.org/ontology/birthPlace> ?result . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?birthplace ?elevation WHERE {
    VALUES ?person { dbr:C._L.__Carl_Larsson }
    ?person dbo:birthPlace ?birthplace .
    
    OPTIONAL {
        ?birthplace dbp:elevation ?elevation .
        FILTER (?elevation = ""28""^^xsd:int)
    }
}
```",2,2,3,1,2,2,3,28,0,0,1,0,0.0,0
443,12,train,Give me the landmark at elevation of 28 and birthplace of Carl Larsson and birthplace of Ulf Lundell.,"SELECT ?result WHERE { <http://dbpedia.org/resource/Ulf_Lundell> <http://dbpedia.org/ontology/birthPlace> ?result . <http://dbpedia.org/resource/Carl_Larsson> <http://dbpedia.org/ontology/birthPlace> ?result . ?result <http://dbpedia.org/ontology/elevation> ""28""^^<http://www.w3.org/2001/XMLSchema#integer> . }","```sparql
# Query for landmark at elevation 28
SELECT ?landmark WHERE {
  ?landmark dbo:elevation ""28""^^xsd:integer .
}

UNION

# Query for Carl Larsson's birthplace
SELECT ?birthPlace WHERE {
  dbpedia:Carl_Larsson dbo:birthPlace ?birthPlace .
}

UNION

# Query for Ulf Lundell's birthplace
SELECT ?birthPlace WHERE {
  dbpedia:Ulf_Lundell dbo:birthPlace ?birthPlace .
}
```",3,3,4,1,3,2,3,28,0,0,1,0,0.0,0
865,6,train,"Who is the child, that is a politician, of Abu Ahmad Abdul Hafiz?",SELECT ?result WHERE { ?result <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Abu_Ahmad_Abdul_Hafiz> . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?child WHERE {
  ?person a dbo:Person ;
          foaf:name ""Abu Ahmad Abdul Hafiz""@en .
  
  ?person dbo:child ?child .

  ?child dbo:occupation ?occupation .
  FILTER(CONTAINS(LCASE(str(?occupation)), ""politician""))
}
```",1,2,2,1,1,3,3,71,0,0,3,0,0.0,0
216,9,train,Give me the player in Mario Ivanković and player in Igor Bišćan.,SELECT ?result WHERE { <http://dbpedia.org/resource/Mario_Ivanković> <http://dbpedia.org/ontology/team> ?result . <http://dbpedia.org/resource/Igor_Bišćan> <http://dbpedia.org/ontology/team> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?player1 ?player2 WHERE {
  ?mario a dbo:Footballer ;
         foaf:name ""Mario Ivanković""@en .
  OPTIONAL { ?mario dbo:position ?player1 . }

  ?igor a dbo:Footballer ;
        foaf:name ""Igor Bišćan""@en .
  OPTIONAL { ?igor dbo:position ?player2 . }
}
```",2,2,3,1,2,3,3,71,0,0,3,0,0.0,0
645,3,train,Who is the commander in Siege of Madrid?,SELECT ?result WHERE { <http://dbpedia.org/resource/Siege_of_Madrid> <http://dbpedia.org/ontology/commander> ?result . },"```sparql
PREFIX dbp: <http://dbpedia.org/property/>
PREFIX dbo: <http://dbpedia.org/ontology/>

SELECT ?commander WHERE {
  ?event a dbo:Event .
  ?event rdfs:label ""Siege of Madrid""@en .
  OPTIONAL { ?event dbp:commander ?commander . }
}
```",1,1,2,1,1,3,3,71,0,28,27,0.0,0.0,0
507,10,train,"Give me the spouse of Anne V. Coates and professional in Film director, television director.","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/spouse> <http://dbpedia.org/resource/Anne_V._Coates> . ?result <http://dbpedia.org/property/occupation> ""Film director, television director""@en . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT ?spouseName ?profession 
WHERE {
  ?anne a dbo:Person ;
        foaf:name ""Anne V. Coates""@en .
  
  ?anne dbo:spouse ?spouse .

  ?spouse foaf:name ?spouseName ;
          ?professionType ?profession .
  
  FILTER (
    ?professionType IN (dbo:occupation, dbo:profession) &&
    (?profession = ""Film director"" || ?profession = ""Television director"")
  )
}
```",2,2,3,1,2,3,3,71,0,0,1,0,0.0,0
715,1,train,Give me the commander in Spanish Civil War.,SELECT ?result WHERE { <http://dbpedia.org/resource/Spanish_Civil_War> <http://dbpedia.org/ontology/commander> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?commander ?name WHERE {
  ?commander a dbo:Person .
  ?commander dbo:role ?role .
  ?role dbo:conflict dbr:Spanish_Civil_War .
  OPTIONAL { ?commander rdfs:label ?name FILTER (lang(?name) = 'en') }
}
ORDER BY ?name
```",1,1,2,1,1,3,3,71,0,0,28,0,0.0,0
98,17,train,Give me the entity in Philippines and birth place of the person born as Paolo Elito M. Ballesteros IV.,"SELECT ?result WHERE { ?v2 <http://dbpedia.org/property/birthName> ""Paolo Elito M. Ballesteros IV""@en . ?v2 <http://dbpedia.org/ontology/birthPlace> ?result . ?result <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Philippines> . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?birthPlace ?country WHERE {
  ?person a dbo:Person ;
          foaf:name ""Paolo Elito M. Ballesteros IV""@en .
  
  OPTIONAL { ?person dbo:birthPlace ?birthPlace . }
  OPTIONAL { ?birthPlace dbo:country ?country . }

  FILTER (lang(?name) = 'en')
}
```",3,3,4,2,2,2,3,28,0,0,2,0,0.0,0
329,14,train,"Give me the entity in the region, that is a country, of Western European Time and birthplace of Eric Cross (writer).",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/country> ?v2 . ?v2 <http://dbpedia.org/property/timeZone> <http://dbpedia.org/resource/Western_European_Time> . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. <http://dbpedia.org/resource/Eric_Cross_(writer)> <http://dbpedia.org/ontology/birthPlace> ?result . },"```sparql
SELECT ?country WHERE {
  # Find countries using Western European Time
  ?timeZone wdt:P31/wdt:P279* wd:Q11173; # Q11173 is the concept for time zones
            wdt:P17 ?country. 

  # Find Eric Cross's birthplace
  ?ericCross wdt:P31 wd:Q5; # Q5 is the concept for human
              wdt:P106 wd:Q33999; # Q33999 is the concept for writer
              wdt:P19 ?birthPlace.

  FILTER(?ericCross = wd:Q123456) # Replace with Eric Cross's actual DBpedia ID

  # Match the country of birthplace to one using WET
  ?birthPlace wdt:P17 ?country.
}
```",3,4,4,2,2,2,3,28,0,0,1,0,0.0,0
365,11,train,Give me the person born as the birth name of Symon Petliura and spouse of Olha Petliura.,SELECT ?result WHERE { ?result <http://dbpedia.org/property/birthName> ?v2 . <http://dbpedia.org/resource/Olha_Petliura> <http://dbpedia.org/ontology/spouse> ?result . <http://dbpedia.org/resource/Symon_Petliura> <http://dbpedia.org/property/birthName> ?v2 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT ?person WHERE {
  ?person dbo:birthName ""Symon Vasyl'ovych Petliura""@en .
  OPTIONAL { ?marriage dbo:husband ?person . }
  OPTIONAL { ?marriage dbo:wife ?olhaKhoruzhynska . }
  ?olhaKhoruzhynska foaf:name ""Olha Khoruzhynska""@en .
}
```",3,3,4,2,2,3,2,20,0,0,1,0,0.0,0
41,4,train,Who is the person born as David Declan Costello?,"SELECT ?result WHERE { ?result <http://dbpedia.org/property/birthName> ""David Declan Costello""@en . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT ?person ?name WHERE {
  ?person dbo:birthName ""David Declan Costello"" .
  OPTIONAL { ?person foaf:name ?name }
}
```",1,1,2,1,1,2,3,28,0,0,1,0,0.0,0
579,8,train,"Give me the person born as the birth name of Jane Percy, Duchess of Northumberland.","SELECT ?result WHERE { ?result <http://dbpedia.org/property/birthName> ?v0 . <http://dbpedia.org/resource/Jane_Percy,_Duchess_of_Northumberland> <http://dbpedia.org/property/birthName> ?v0 . }","```sparql
SELECT ?person ?personLabel WHERE {
  # Find the birth name of Jane Percy, Duchess of Northumberland
  dbpedia:Jane_Percy,_Duchess_of_Northumberland dbo:birthName ?birthName .
  
  # Find other persons with the same birth name
  ?person schema:birthName ?birthName .
  
  # Ensure we exclude Jane Percy herself from the results
  FILTER (?person != dbpedia:Jane_Percy,_Duchess_of_Northumberland)
  
  # Get labels for the persons found
  SERVICE wikibase:label { bd:serviceParam wikibase:language ""[AUTO_LANGUAGE],en"". }
}
```",2,2,3,2,1,3,2,20,0,0,1,0,0.0,0
508,5,train,"Give me the commander, that is Saudi, in Central Plains War.",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/nationality> <http://dbpedia.org/resource/Saudi_Arabia>. <http://dbpedia.org/resource/Central_Plains_War> <http://dbpedia.org/ontology/commander> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?person ?description WHERE {
  ?person dbo:nationality dbr:Saudi_Arabia .
  ?person dbo:occupation dbr:Military_officer .
  OPTIONAL { ?person dbo:description ?description . }
  
  FILTER EXISTS {
    ?event dbo:location dbr:Central_Plains_War .
    ?event dbo:participant ?person .
  }

  # Alternatively, if we know Prince Faisal's involvement:
  OPTIONAL {
    ?person rdfs:label ""Faisal bin Abdulaziz Al Saud""@en .
  }
}
```",1,2,2,1,1,3,2,20,0,0,1,0,0.0,0
826,34,train,"Give me the predecessor of Louis IV, Grand Duke of Hesse and spouse of the child of the father of Anna Magdalena Appel.","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/successor> <http://dbpedia.org/resource/Louis_IV,_Grand_Duke_of_Hesse> . <http://dbpedia.org/resource/Anna_Magdalena_Appel> <http://dbpedia.org/property/father> ?v2 . ?v1 <http://dbpedia.org/property/father> ?v2 . ?v1 <http://dbpedia.org/ontology/spouse> ?result . }","```sparql
# Step 1: Find Anna Magdalena Bach's father
SELECT ?father WHERE {
  wd:Q123456 wdt:P22 ?father .
}

# Step 2: Find a child of Johann Jacob Bach (Anna Magdalena Bach)
SELECT ?child WHERE {
  wd:Q789012 wdt:P40 ?child .
}

# Step 3: Find the spouse of Johann Sebastian Bach
SELECT ?spouse WHERE {
  wd:Q345678 wdt:P26 ?spouse .
}

# Step 4: Identify Louis IV, Grand Duke of Hesse and his predecessor
SELECT ?predecessor WHERE {
  wd:Q987654 wdt:P136 ?position .
  ?position wdt:P137 ?predecessor .
}
```

Note: The above SPARQL queries use placeholder QIDs (e.g., `wd:Q123456`, `wd:Q789012`) for entities like Anna Magdalena Bach, Johann Jacob Bach, and others. In a real scenario, you would replace these with the correct DBpedia or Wikidata identifiers.",4,4,5,3,2,3,3,71,0,0,1,0,0.0,0
443,10,train,"Give me the birthplace of the person born, that is a musical artist and an artist, on 1949-11-20.","SELECT ?result WHERE { ?v0 <http://dbpedia.org/ontology/birthDate> ""1949-11-20""^^<http://www.w3.org/2001/XMLSchema#date> . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. ?v0 <http://dbpedia.org/ontology/birthPlace> ?result . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?person ?birthPlace WHERE {
  ?person a dbo:Person ;
          dbo:birthDate ""1949-11-20""^^xsd:date ;
          dbo:occupation ?occupation .
  
  FILTER (
    EXISTS { ?person dbo:occupation dbr:Musical_artist . }
    && EXISTS { ?person dbo:occupation dbr:Artist . }
  )
  
  OPTIONAL { ?person dbp:birthPlace ?birthPlace . }
}
```",2,4,3,2,1,2,3,28,0,0,3,0,0.0,0
170,17,train,Give me the domain of Mayor and birth place of the awardee of People's Artist of Russia.,"SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/birthPlace> ?result . ?result <http://dbpedia.org/ontology/leaderTitle> ""Mayor""@en . ?v1 <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/People's_Artist_of_Russia> . }","```sparql
# Query for the domain of Mayor
SELECT ?class WHERE {
  ?mayor rdf:type dbo:Mayor .
  ?mayor a ?class .
}

UNION

# Query for the birthplace of awardees of People's Artist of Russia
SELECT DISTINCT ?birthPlace WHERE {
  ?person dbo:honorificTitle ""People's Artist of Russia""@ru ;
          dbo:birthPlace ?birthPlace .
}
```",3,3,4,2,2,2,3,28,0,0,3,0,0.0,0
865,23,train,"Give me the native of the residence, that is a country, of the person decedent at Patna.",SELECT ?result WHERE { ?v0 <http://dbpedia.org/property/residence> ?v2 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. ?result <http://dbpedia.org/ontology/birthPlace> ?v2 . ?v0 <http://dbpedia.org/ontology/deathPlace> <http://dbpedia.org/resource/Patna> . },"```sparql
SELECT DISTINCT ?nativeCountry WHERE {
  ?person dbo:deathPlace dbr:Patna .
  ?person dbo:residence ?residence .
  ?residence rdf:type dbo:Country .
  ?residence dbo:nativeName ?nativeCountry .
}
```",3,4,4,3,1,3,3,71,0,0,1898,0,0.0,0
382,12,train,Give me the landmark at elevation of the award of Harry Combes and birthplace of Björn Joppe.,SELECT ?result WHERE { <http://dbpedia.org/resource/Björn_Joppe> <http://dbpedia.org/ontology/birthPlace> ?result . <http://dbpedia.org/resource/Harry_Combes> <http://dbpedia.org/property/awards> ?v0 . ?result <http://dbpedia.org/ontology/elevation> ?v0 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?landmark WHERE {
  # Find the award associated with Harry Combes
  ?award dbo:recipient dbr:Harry_Combes .
  
  # Assuming the award has a location or elevation property (this might need adjustment based on actual data)
  OPTIONAL { ?award dbo:elevation ?elevation . }
  
  # Find landmarks at that elevation
  ?landmark dbo:elevation ?elevation .

  # Optionally, find Björn Joppe's birthplace for context
  OPTIONAL {
    dbr:Björn_Joppe dbo:birthPlace ?birthPlace .
  }
}
```",3,3,4,2,2,3,2,20,0,0,1,0,0.0,0
773,34,train,Give me the spouse of the father of the parent of Bernard (son of Charles the Fat) and parent of Charles the Fat.,SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/spouse> ?result . ?v2 <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Bernard_(son_of_Charles_the_Fat)> . ?v2 <http://dbpedia.org/property/father> ?v1 . <http://dbpedia.org/resource/Charles_the_Fat> <http://dbpedia.org/ontology/parent> ?result . },"```sparql
SELECT ?spouse WHERE {
  # Step 1: Identify Bernard, son of Charles the Fat
  ?bernard dbo:childOf dbr:Charles_the_Fat .
  
  # Step 2: Find the parent(s) of Bernard
  ?parent dbo:child ?bernard .

  # Step 3: Identify the father among Bernard's parents
  ?father rdf:type dbo:Man ;
          dbo:spouse ?parent .

  # Step 4: Determine the spouse of this father
  ?father dbo:spouse ?spouse .
}
```",4,4,5,3,2,3,3,71,0,0,1,0,0.0,0
326,6,train,Give me the professional in the profession of Susanne Lewis.,SELECT ?result WHERE { <http://dbpedia.org/resource/Susanne_Lewis> <http://dbpedia.org/property/occupation> ?v1 . ?result <http://dbpedia.org/property/occupation> ?v1 . },"```sparql
SELECT ?person ?name WHERE {
  # Find Susanne Lewis's profession
  ?susanne a dbo:Person ;
           foaf:name ""Susanne Lewis"" .
  
  # Get her occupation
  ?susanne dbo:occupation ?occupation .

  # Find other people with the same occupation
  ?person a dbo:Person ;
          dbo:occupation ?occupation ;
          foaf:name ?name .
  
  FILTER(?person != ?susanne) # Exclude Susanne Lewis from results
}
```",2,2,3,2,1,2,2,9,0,0,2223,0,0.0,0
216,38,train,"Give me the team of the person born, that is a sports manager and a soccer manager and a soccer player, on 1983-12-20 and player in the coach, that is a soccer player and a sports manager and a soccer manager, of Bosnia and Herzegovina national under-18 football team.","SELECT ?result WHERE { <http://dbpedia.org/resource/Bosnia_and_Herzegovina_national_under-18_football_team> <http://dbpedia.org/ontology/coach> ?v3 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerManager>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsManager>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsManager>. ?v2 <http://dbpedia.org/ontology/birthDate> ""1983-12-20""^^<http://www.w3.org/2001/XMLSchema#date> . ?v3 <http://dbpedia.org/ontology/team> ?result . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerPlayer>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerPlayer>. ?result <http://dbpedia.org/ontology/coach> ?v2 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerManager>. }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?person ?team WHERE {
  ?person dbo:birthDate ?date .
  FILTER (YEAR(?date) = 1983 && MONTH(?date) = 12 && DAY(?date) = 20)
  
  ?person dbo:sportsManager ?managerRole .
  ?person dbo:coach ?coachRole .
  ?person dbo:player ?playerRole .

  ?coachRole dbr:Bosnia_and_Herzegovina_national_under-18_football_team .

  OPTIONAL {
    ?team dbo:member ?person .
    ?team a dbo:SoccerTeam .
  }
}
```",4,10,5,2,2,3,3,71,0,0,1,0,0.0,0
192,9,train,"Give me the spouse, that is a royalty, of the child of Charles II of Naples.",SELECT ?result WHERE { ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v0 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Charles_II_of_Naples> . ?result <http://dbpedia.org/ontology/spouse> ?v0 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT DISTINCT ?spouse WHERE {
  # Identify Charles II of Naples
  ?charles2 dbr:Charles_II_of_Naples .
  
  # Find his children
  ?child dbo:parent ?charles2 .

  # For each child, find their spouse(s)
  ?child dbp:spouse ?spouse .

  # Filter for royalty among the spouses
  ?spouse a dbo:Monarch ;
          rdfs:label ?label .
  
  FILTER (CONTAINS(LCASE(?label), ""king"") || CONTAINS(LCASE(?label), ""queen""))
}
```",2,3,3,2,1,3,2,20,0,0,2,0,0.0,0
456,21,train,Give me the spouse of the actor of Pacific Drive and band of Alan Doyle.,SELECT ?result WHERE { <http://dbpedia.org/resource/Alan_Doyle> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . <http://dbpedia.org/resource/Pacific_Drive> <http://dbpedia.org/property/starring> ?v1 . ?v1 <http://dbpedia.org/ontology/spouse> ?result . },"```sparql
# Query for the spouse of the actor associated with ""Pacific Drive""
SELECT ?actor ?spouse WHERE {
  ?movie dcterms:title ""Pacific Drive""@en .
  ?movie dbo:starring ?actor .
  ?actor foaf:mbox ?email . # Ensures we have a valid person entry
  OPTIONAL { ?actor dbo:spouse ?spouse }
}

UNION

# Query for the band of Alan Doyle
SELECT ?band WHERE {
  ?person foaf:name ""Alan Doyle""@en ;
          dbo:member ?band .
}
```",3,3,4,2,2,3,3,71,0,0,1,0,0.0,0
456,28,train,Give me the band of Alan Doyle and professional in  and spouse of the actor of Pacific Drive.,"SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/spouse> ?result . <http://dbpedia.org/resource/Pacific_Drive> <http://dbpedia.org/property/starring> ?v1 . <http://dbpedia.org/resource/Alan_Doyle> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?result <http://dbpedia.org/property/occupation> """"@en . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?actor ?spouse WHERE {
  ?actor dbo:profession dbr:Actor .
  ?actor dbo:film dbr:Pacific_Drive .
  OPTIONAL { ?actor dbo:spouse ?spouse . }
}
```",4,4,5,2,3,3,3,71,0,0,1,0,0.0,0
933,10,train,Give me the band of The Ramong Sound and band of Mike Elliott (saxophonist).,SELECT ?result WHERE { <http://dbpedia.org/resource/Mike_Elliott_(saxophonist)> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . <http://dbpedia.org/resource/The_Ramong_Sound> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . },"```sparql
# Query to get the band of The Ramong Sound (Ramones)
SELECT ?band WHERE {
  wd:Q1341 dbo:bandName ?band .
}

UNION

# Query to get the band associated with Mike Elliott, the saxophonist
SELECT DISTINCT ?band WHERE {
  ?person foaf:name ""Mike Elliott""@en .
  ?person wdt:P106 wd:Q33999 . # Saxophonist occupation
  ?person dbo:member ?membership .
  ?membership dbo:band ?band .
}
```",2,2,3,1,2,3,3,71,0,0,3,0,0.0,0
192,10,train,Give me the child of the parent of Anna of Hungary (Byzantine empress).,SELECT ?result WHERE { ?v0 <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Anna_of_Hungary_(Byzantine_empress)> . ?result <http://dbpedia.org/property/father> ?v0 . },"```sparql
SELECT DISTINCT ?childName
WHERE {
  # Step 1: Identify Anna of Hungary (Byzantine empress)
  dbpedia:Anna_of_Hungary_(Byzantine_empress) dbo:parent ?parent .

  # Step 2 and 3: Find the child of her parent
  ?parent dbo:child ?child .
  
  # Get the name of the child
  ?child rdfs:label ?childName .
  
  FILTER (lang(?childName) = 'en')
}
```",2,2,3,2,1,3,2,20,0,0,5,0,0.0,0
98,3,train,Give me the time zone of Lopez Jaena.,SELECT ?result WHERE { <http://dbpedia.org/resource/Lopez_Jaena> <http://dbpedia.org/ontology/timeZone> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?timeZone
WHERE {
  ?location a dbo:Municipality ;
            dbo:country dbr:Philippines ;
            rdfs:label ""Lopez Jaena""@en .
  OPTIONAL { ?location dbo:timeZone ?timeZone . }
}
```",1,1,2,1,1,2,3,28,0,0,1,0,0.0,0
508,2,train,"Give me the war, that is a military conflict and a societal event and an event, of Hayao Tada.",SELECT ?result WHERE { ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. <http://dbpedia.org/resource/Hayao_Tada> <http://dbpedia.org/ontology/battle> ?result . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?war WHERE {
  ?person rdfs:label ""Hayao Tada""@en.
  ?person a dbo:Person.
  
  ?event dbo:agent ?person .
  ?event a dbo:MilitaryConflict ;
         a dbo:Event .

  BIND(?event AS ?war)
}
```",1,4,2,1,1,3,2,20,0,0,5,0,0.0,0
645,7,train,Who is the native of Restoration (Spain)?,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Restoration_(Spain)> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?person ?name WHERE {
  # Identify the resource for Restoration, Spain
  VALUES ?restoration { dbr:Restoration_(Spain) }
  
  # Find individuals with a birthPlace or similar connection to Restoration (Spain)
  ?person dbo:birthPlace ?restoration .
  
  # Get the name of these individuals
  ?person rdfs:label ?name .
  
  FILTER(LANG(?name) = 'en')
}
ORDER BY ?name
```",1,1,2,1,1,3,3,71,0,0,217,0,0.0,0
93,14,train,"Give me the death place of the governor of the native, that is a politician, of Seattle.",SELECT ?result WHERE { ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v2 <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Seattle> . ?v0 <http://dbpedia.org/ontology/deathPlace> ?result . ?v2 <http://dbpedia.org/property/governor> ?v0 . },"```sparql
SELECT ?deathPlace WHERE {
  ?person dbo:nationality dbr:United_States ;
          dbo:birthPlace dbr:Seattle ;
          dbo:occupation dbr:Politician ;
          dbo:governmentRole dbr:Governor_of_Washington .
  ?person dbo:deathPlace ?deathPlace .
  FILTER (str(?person) = ""Gary_Locke"")
}
```",3,4,4,3,1,3,2,20,0,0,9,0,0.0,0
987,33,train,"Give me the birth place of the actor of the show, that is a film, with Emir Hadžihafizbegović and birth place of Dado Polumenta.",SELECT ?result WHERE { <http://dbpedia.org/resource/Dado_Polumenta> <http://dbpedia.org/ontology/birthPlace> ?result . ?v0 <http://dbpedia.org/ontology/starring> <http://dbpedia.org/resource/Emir_Hadžihafizbegović> . ?v0 <http://dbpedia.org/property/starring> ?v2 . ?v2 <http://dbpedia.org/ontology/birthPlace> ?result . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Film>. },"```sparql
# Query 1: Find films featuring Emir Hadžihafizbegović
SELECT ?film WHERE {
  ?film dbo:starring dbpedia:Emir_Hadžihafizbegović .
}

# Assuming we find a film, let's say ""The Film Title"" (replace with actual title from results)
# Query 2: Find TV shows based on the identified film
SELECT ?tvShow WHERE {
  ?tvShow dbo:basedOnFilm dbpedia:The_Film_Title .
}

# Assuming we identify a TV show, let's say ""The Show Title"" (replace with actual title from results)
# Query 3: Find actors of the TV show and their birthplaces
SELECT ?actor ?birthPlace WHERE {
  ?tvShow dbo:starring ?actor .
  OPTIONAL { ?actor foaf:bornIn ?birthPlace . }
}

# Query 4: Get Dado Polumenta's birthplace
SELECT ?birthPlace WHERE {
  dbpedia:Dado_Polumenta foaf:bornIn ?birthPlace .
}
```",4,5,5,3,2,3,3,71,0,0,3,0,0.0,0
826,24,train,"Give me the predecessor of Louis IV, Grand Duke of Hesse and successor of the child, that is a royalty, of Louis I, Grand Duke of Hesse.","SELECT ?result WHERE { <http://dbpedia.org/resource/Louis_I,_Grand_Duke_of_Hesse> <http://dbpedia.org/ontology/child> ?v2 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?result <http://dbpedia.org/ontology/successor> <http://dbpedia.org/resource/Louis_IV,_Grand_Duke_of_Hesse> . ?v2 <http://dbpedia.org/ontology/successor> ?result . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?person WHERE {
  # Ludwig III as predecessor of Louis IV
  ?louisIV dbo:predecessor dbr:Ludwig_III,_Grand_Duke_of_Hesse .
  
  # Ludwig II as child of Louis I and predecessor of Ludwig III
  ?louisI dbo:child ?ludwigII .
  ?ludwigII dbo:successor dbr:Ludwig_III,_Grand_Duke_of_Hesse .

  FILTER (?person = dbr:Ludwig_III,_Grand_Duke_of_Hesse)
}
```",3,4,4,2,2,3,3,71,0,0,1,0,0.0,0
445,16,train,Who is the awardee of the establishment of 1820-03-10?,"SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/foundingDate> ""1820-03-10""^^<http://www.w3.org/2001/XMLSchema#date> . ?result <http://dbpedia.org/property/awards> ?v1 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?entity ?award WHERE {
  ?entity dbo:dateEstablished ""1820-03-10""^^xsd:date .
  OPTIONAL { ?entity dbo:awardsReceived ?award . }
}
```",2,2,3,2,1,3,3,71,0,0,2,0,0.0,0
417,26,train,"Give me the child of the father of the leader, that is a royalty, of Colony of Greenland.",SELECT ?result WHERE { ?v1 <http://dbpedia.org/property/father> ?v2 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?result <http://dbpedia.org/property/father> ?v2 . <http://dbpedia.org/resource/Colony_of_Greenland> <http://dbpedia.org/property/leader> ?v1 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?child WHERE {
  ?leader dbo:country dbr:Greenland .
  ?leader dbo:leaderOf dbr:Colony_of_Greenland .
  ?father dbo:parent ?leader .
  ?father dbo:child ?child .
  ?child a dbo:Monarch .
}
```",3,4,4,3,1,3,3,71,0,0,2,0,0.0,0
136,3,train,Give me the award of Bret Anthony Johnston.,SELECT ?result WHERE { <http://dbpedia.org/resource/Bret_Anthony_Johnston> <http://dbpedia.org/property/awards> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?award WHERE {
  ?person dbp:name ""Bret Anthony Johnston""@en .
  ?person dbo:award ?award .
}
```",1,1,2,1,1,2,2,9,0,0,1,0,0.0,0
200,1,train,Give me the band member of Order from Chaos.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/associatedMusicalArtist> <http://dbpedia.org/resource/Order_from_Chaos> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?member WHERE {
  VALUES ?band { dbr:Order_from_Chaos }
  ?band dbo:bandMember ?member .
}
```",1,1,2,1,1,2,2,9,0,0,2,0,0.0,0
987,3,train,"Who is the band, that is an artist, of Dado Polumenta?",SELECT ?result WHERE { ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. <http://dbpedia.org/resource/Dado_Polumenta> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?band WHERE {
  ?artist a dbo:MusicalArtist ;
          foaf:name ""Dado Prso"" .
  
  ?artist dbo:member ?band .
}
```",1,2,2,1,1,3,3,71,0,0,1,0,0.0,0
36,5,train,Give me the birth name of Ayo Makun.,SELECT ?result WHERE { <http://dbpedia.org/resource/Ayo_Makun> <http://dbpedia.org/property/birthName> ?result . },"```sparql
PREFIX foaf: <http://xmlns.com/foaf/0.1/>
SELECT ?givenName ?familyName WHERE {
  ?person a foaf:Person ;
          foaf:name ""Ayo Makun"" .
  OPTIONAL { ?person foaf:givenName ?givenName . }
  OPTIONAL { ?person foaf:familyName ?familyName . }
}
```",1,1,2,1,1,2,3,28,0,0,1,0,0.0,0
976,21,train,"Give me the office of Naci Bostancı and office of the leader, that is a politician, of Grand National Assembly of Turkey.",SELECT ?result WHERE { ?v2 <http://dbpedia.org/property/office> ?result . <http://dbpedia.org/resource/Grand_National_Assembly_of_Turkey> <http://dbpedia.org/ontology/leader> ?v2 . <http://dbpedia.org/resource/Naci_Bostancı> <http://dbpedia.org/property/office> ?result . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?naciOffice ?speakerName ?speakerOffice
WHERE {
  # Find Naci Bostancı's office
  dbr:Naci_Bostancı dbo:occupation ?naciOffice .

  # Find the current Speaker of the Grand National Assembly of Turkey and their office
  dbr:Grand_National_Assembly_of_Turkey dbo:speaker ?speaker .
  ?speaker foaf:name ?speakerName .
  ?speaker dbo:office ?speakerOffice .
}
```",3,4,4,2,2,3,3,71,0,0,1,0,0.0,0
573,17,train,"Who is the author, that is a politician and an office holder, of the work of John Quincy Adams?",SELECT ?result WHERE { ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v1 <http://dbpedia.org/property/author> ?result . ?v1 <http://dbpedia.org/property/author> <http://dbpedia.org/resource/John_Quincy_Adams> . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?work ?title WHERE {
  ?work dbo:author dbr:John_Quincy_Adams .
  ?work a dbo:CreativeWork .
  OPTIONAL { ?work dbo:genre ?genre . FILTER(CONTAINS(LCASE(?genre), ""political"") || CONTAINS(LCASE(?genre), ""office"")) }
  ?work rdfs:label ?title .
  FILTER (LANG(?title) = 'en')
}
ORDER BY ?title
```",2,4,3,2,1,3,3,71,0,0,1,0,0.0,0
273,14,train,Give me the parent of the alumnus of the reference to Università degli Studi di Torino.,"SELECT ?result WHERE { ?v0 <http://dbpedia.org/ontology/parent> ?result . ?v2 <http://xmlns.com/foaf/0.1/name> ""Università degli Studi di Torino""@en . ?v0 <http://dbpedia.org/ontology/almaMater> ?v2 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT ?alumnus ?parent WHERE {
  # Resource for Università degli Studi di Torino
  VALUES ?university { wd:Q123456 } 

  # Find alumni of the university
  ?alumnus dbo:almaMater ?university .

  # For each alumnus, find their parent(s)
  OPTIONAL {
    ?alumnus foaf:parent ?parent .
  }
}
```

Note: Replace `wd:Q123456` with the actual DBpedia identifier for Università degli Studi di Torino.",3,3,4,3,1,3,2,20,0,0,2,0,0.0,0
433,37,train,"Give me the associated musical artist of the associated musical artist, that is an artist and a musical artist, of the associated musical artist, that is a musical artist and an artist, of Ornette Coleman and professional in Musician.","SELECT ?result WHERE { ?v0 <http://dbpedia.org/ontology/associatedMusicalArtist> ?v3 . ?result <http://dbpedia.org/property/occupation> ""Musician""@en . ?v3 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. <http://dbpedia.org/resource/Ornette_Coleman> <http://dbpedia.org/ontology/associatedMusicalArtist> ?v0 . }","```sparql
SELECT DISTINCT ?finalArtist WHERE {
  # Step 1: Find Ornette Coleman's associated musical artist
  ?coleman dbo:associatedMusicalArtist ?firstAssociatedArtist .
  FILTER(?coleman = dbpedia:Ornette_Coleman) .

  # Step 2: Find an artist and musical artist of the first associated artist
  ?firstAssociatedArtist dbo:associatedMusicalArtist ?secondAssociatedArtist ;
                        dbo:artist ?visualArt1 .
  FILTER EXISTS { ?secondAssociatedArtist dbo:musician . }
  FILTER EXISTS { ?secondAssociatedArtist dbo:artist ?visualArt2 } .

  # Step 3: Find an artist and musical artist of the second associated artist
  ?secondAssociatedArtist dbo:associatedMusicalArtist ?finalArtist ;
                         dbo:artist ?visualArt3 .
  FILTER EXISTS { ?finalArtist dbo:musician . }
  FILTER EXISTS { ?finalArtist dbo:artist ?visualArt4 } .

  # Ensure all entities are both musicians and artists
  FILTER(?firstAssociatedArtist != ?secondAssociatedArtist)
  FILTER(?secondAssociatedArtist != ?finalArtist)
}
```",4,8,5,3,2,3,3,71,0,0,38,0,0.0,0
5,1,train,Give me the entity in Canada.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Canada> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?entity ?name WHERE {
  ?entity dbo:country dbr:Canada .
  OPTIONAL { ?entity rdfs:label ?name FILTER (lang(?name) = 'en') }
}
LIMIT 10
```",1,1,2,1,1,3,2,20,10,10,18550,0.5,0.0005387931034482759,0.001076426264800861
170,6,train,Give me the birth place of Era Ziganshina and entity in Russia.,SELECT ?result WHERE { <http://dbpedia.org/resource/Era_Ziganshina> <http://dbpedia.org/ontology/birthPlace> ?result . ?result <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Russia> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX geo: <http://www.w3.org/2003/01/geo/wgs84_pos#>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?birthPlace WHERE {
  ?era a dbo:Person ;
       rdfs:label ""Era Ziganshina""@en .
  ?era dbo:birthPlace ?birthPlace .
  OPTIONAL { ?birthPlace geo:country <http://dbpedia.org/resource/Russia> }
}
```",2,2,3,1,2,2,3,28,1,2,0,0.3333333333333333,1.0,0.5
892,18,train,Give me the entity in Province of Reggio Emilia and landmark at elevation of 58 and entity in Italy.,"SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/province> <http://dbpedia.org/resource/Province_of_Reggio_Emilia> . ?result <http://dbpedia.org/ontology/elevation> ""58""^^<http://www.w3.org/2001/XMLSchema#integer> . ?result <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Italy> . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?entity WHERE {
  ?entity dbo:location dbr:Province_of_Reggio_Emilia .
  ?landmark dbo:location ?entity ;
            dbp:elevation ""58""^^xsd:integer .
  ?entity dbo:country dbr:Italy .
}
```",3,3,4,1,3,3,3,71,0,0,1,0,0.0,0
579,12,train,"Give me the native of Edinburgh and person born as the birth name of Jane Percy, Duchess of Northumberland.","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Edinburgh> . ?result <http://dbpedia.org/property/birthName> ?v0 . <http://dbpedia.org/resource/Jane_Percy,_Duchess_of_Northumberland> <http://dbpedia.org/property/birthName> ?v0 . }","```sparql
SELECT ?person1 ?person2 WHERE {
  # Find a person native to Edinburgh
  ?person1 dbo:birthPlace dbr:Edinburgh .
  
  # Get Jane Percy's birth name
  dbpedia:Jane_Percy_duchess_of_Northumberland dbo:birthName ?birthName .

  # Find another person with the same birth name
  ?person2 dbo:birthName ?birthName .
  
  FILTER(?person1 != ?person2)
}
```",3,3,4,2,2,3,2,20,0,0,1,0,0.0,0
459,13,train,"Give me the governor of Dana Murphy and governor of the death place, that is a settlement, of Cliff Roquemore.",SELECT ?result WHERE { ?v1 <http://dbpedia.org/property/governor> ?result . <http://dbpedia.org/resource/Cliff_Roquemore> <http://dbpedia.org/ontology/deathPlace> ?v1 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. <http://dbpedia.org/resource/Dana_Murphy> <http://dbpedia.org/property/governor> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?governorDanaMurphy ?governorCliffRoquemore WHERE {
  # Find Dana Murphy's residence and its governor if it is a settlement
  OPTIONAL {
    ?danaMurphy dbo:residence ?residence.
    ?residence a dbo:Settlement.
    ?residence dbo:governmentLeader ?governorDanaMurphy.
  }

  # Find Cliff Roquemore's death place and its governor if it is a settlement
  OPTIONAL {
    ?cliffRoquemore dbo:deathPlace ?deathPlace.
    ?deathPlace a dbo:Settlement.
    ?deathPlace dbo:governmentLeader ?governorCliffRoquemore.
  }

  # Bind Dana Murphy and Cliff Roquemore to their respective DBpedia resources
  VALUES (?danaMurphy ?cliffRoquemore) {
    (dbr:Dana_Murphy dbr:Cliff_Roquemore)
  }
}
```",3,4,4,2,2,2,3,28,0,0,1,0,0.0,0
170,2,train,Give me the domain of Mayor.,"SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/leaderTitle> ""Mayor""@en . }","```sparql
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?domain WHERE {
  ?mayorClass rdfs:subClassOf+ ?domain .
  FILTER (str(?mayorClass) = ""http://dbpedia.org/ontology/Mayor"")
}
```",1,1,2,1,1,2,3,28,0,6,39395,0.0,0.0,0
773,25,train,"Give me the parent of Carloman of Bavaria and parent of the child, that is a royalty, of Louis the German.",SELECT ?result WHERE { ?v1 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Louis_the_German> . ?result <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Carloman_of_Bavaria> . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v1 <http://dbpedia.org/ontology/parent> ?result . },"```sparql
# Query to find the parent of Carloman of Bavaria
SELECT ?parent WHERE {
  ?carloman dbo:birthName ""Carloman of Bavaria""@en .
  OPTIONAL { ?carloman dbo:father ?parent . }
  OPTIONAL { ?carloman dbo:mother ?parent . }
}

UNION

# Query to find a royal child of Louis the German and their parent
SELECT ?childParent WHERE {
  ?louis dbo:birthName ""Louis the German""@en .
  ?royalChild dbo:child ?louis ;
              rdf:type dbo:Monarch .
  OPTIONAL { ?royalChild dbo:father ?childParent . }
  OPTIONAL { ?royalChild dbo:mother ?childParent . }
}
```",3,4,4,2,2,3,3,71,0,0,2,0,0.0,0
98,11,train,"Give me the entity in the region, that is a country, of Philippine Standard Time.",SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. ?v1 <http://dbpedia.org/property/timeZone> <http://dbpedia.org/resource/Philippine_Standard_Time> . ?result <http://dbpedia.org/ontology/country> ?v1 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?country WHERE {
  ?timeZone dbo:timezoneName ""Philippine Standard Time"" .
  ?region dbo:timeZone ?timeZone .
  ?region a dbo:Country .
  BIND(?region AS ?country)
}
```",2,3,3,2,1,2,3,28,0,0,5332,0,0.0,0
892,22,train,"Give me the entity in Italy and entity in the administration, that is Italian and a region and a settlement and an administrative region, of Democratic Party (Italy).",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/province> ?v0 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/AdministrativeRegion>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Region>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. ?v0 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Italy>. ?v0 <http://dbpedia.org/property/leaderParty> <http://dbpedia.org/resource/Democratic_Party_(Italy)> . ?result <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Italy> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?region WHERE {
  ?region a dbo:Region ;
          a dbo:AdministrativeRegion ;
          dbo:country dbr:Italy .
  
  OPTIONAL { 
    ?party a dbo:PoliticalParty ;
           dbp:country dbr:Italy ;
           dbp:name ""Democratic Party (Italy)""@en .
    
    ?governance dbo:governingBody ?party ;
               dbo:administrativeRegion ?region .
  }
}
```",3,7,4,2,2,3,3,71,0,306,587,0.0,0.0,0
987,12,train,Give me the birth place of Moamer Kasumović and entity in Montenegro.,SELECT ?result WHERE { <http://dbpedia.org/resource/Moamer_Kasumović> <http://dbpedia.org/ontology/birthPlace> ?result . ?result <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Montenegro> . },"```sparql
# Query to find the birth place of Moamer Kasumović (Muammar Gaddafi)
SELECT ?birthPlace WHERE {
  wd:Q1798 dbo:birthPlace ?birthPlace .
}

# Query to find an entity in Montenegro
SELECT DISTINCT ?entity ?label WHERE {
  ?entity wdt:P17 wd:Q30 ; # P17 is the property for country, Q30 is the identifier for Montenegro
          rdfs:label ?label .
  FILTER (LANG(?label) = 'en')
}
LIMIT 1
```",2,2,3,1,2,3,3,71,0,0,1,0,0.0,0
216,19,train,Give me the player in the coach of Croatia national under-21 football team and player in Mario Ivanković.,SELECT ?result WHERE { <http://dbpedia.org/resource/Mario_Ivanković> <http://dbpedia.org/ontology/team> ?result . <http://dbpedia.org/resource/Croatia_national_under-21_football_team> <http://dbpedia.org/ontology/coach> ?v0 . ?v0 <http://dbpedia.org/ontology/team> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?coach WHERE {
  ?team dbo:coach ?coach .
  ?team rdfs:label ""Croatia national under-21 football team""@en .
  FILTER NOT EXISTS { ?team dbo:endDate ?endDate . }
}

UNION

SELECT DISTINCT ?player WHERE {
  ?coach dbo:employee ?employment .
  ?employment dbo:employer dbr:Mario_Ivanković .
  ?employment dbo:employee ?player .
}
```",3,3,4,2,2,3,3,71,0,0,3,0,0.0,0
166,0,train,Give me the resting place of Gonzalo Queipo de Llano.,SELECT ?result WHERE { <http://dbpedia.org/resource/Gonzalo_Queipo_de_Llano> <http://dbpedia.org/ontology/restingPlace> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?burialPlace WHERE {
  VALUES ?person { dbr:Gonzalo_Queipo_de_Llano }
  ?person dbo:deathPlace ?burialPlace .
}
```",1,1,2,1,1,3,2,20,0,0,1,0,0.0,0
573,10,train,Give me the person decedent at Massachusetts and parent of John Quincy Adams.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/deathPlace> <http://dbpedia.org/resource/Massachusetts> . <http://dbpedia.org/resource/John_Quincy_Adams> <http://dbpedia.org/ontology/parent> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?parent WHERE {
  VALUES ?johnQuincyAdams { dbr:John_Quincy_Adams }
  ?johnQuincyAdams dbo:parent ?parent .
  OPTIONAL { ?parent dbo:deathPlace ?deathPlace . FILTER(CONTAINS(LCASE(str(?deathPlace)), ""massachusetts"")) }
}
```",2,2,3,1,2,3,3,71,2,0,0,1.0,1.0,1.0
453,1,train,Give me the religion of John Henry Newman.,SELECT ?result WHERE { <http://dbpedia.org/resource/John_Henry_Newman> <http://dbpedia.org/ontology/religion> ?result . },"```sparql
SELECT ?religion WHERE {
  dbpedia:John_Henry_Newman dbo:religion ?religion .
}
```",1,1,2,1,1,2,2,9,0,0,2,0,0.0,0
874,11,train,"Give me the band of Robert Hart (musician) and band of the writer, that is an artist and a musical artist, of Mezzanine (album).",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/bandMember> ?v2 . <http://dbpedia.org/resource/Mezzanine_(album)> <http://dbpedia.org/property/writer> ?v2 . ?result <http://dbpedia.org/ontology/bandMember> <http://dbpedia.org/resource/Robert_Hart_(musician)> . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?band1 ?band2 WHERE {
  # Find the band associated with Robert Hart
  OPTIONAL {
    ?person a dbo:Musician ;
            foaf:name ""Robert Hart"" .
    ?person dbo:memberOfBand ?band1 .
  }

  # Find the artist(s) of the album Mezzanine and their band
  OPTIONAL {
    ?album a dbo:Album ;
           dbo:title ""Mezzanine"" ;
           dbo:artist ?artist .
    ?artist dbo:memberOf ?band2 .
  }
}
```",3,5,4,2,2,3,2,20,0,0,1,0,0.0,0
791,35,train,"Give me the father of the child, that is a royalty, of Emperor Takakura and spouse of the spouse, that is a royalty, of Emperor Takakura.",SELECT ?result WHERE { ?v1 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Emperor_Takakura> . ?v2 <http://dbpedia.org/ontology/spouse> <http://dbpedia.org/resource/Emperor_Takakura> . ?result <http://dbpedia.org/ontology/spouse> ?v2 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v1 <http://dbpedia.org/property/father> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?child ?father WHERE {
  # Identify Emperor Takakura and his spouse
  dbr:Takakura_of_Japan dbo:spouse ?spouse .
  
  # Ensure the spouse is royalty
  ?spouse a dbo:Monarch .

  # Find their child who is also royalty
  ?child dbo:parent dbr:Takakura_of_Japan ;
         dbo:parent ?spouse ;
         a dbo:Monarch .

  # Confirm the father of this child
  ?father dbo:child ?child .
  
  FILTER(?father = dbr:Takakura_of_Japan)
}
```",4,6,5,2,2,3,3,71,0,0,1,0,0.0,0
124,4,train,"Give me the war, that is a societal event and a military conflict, of A Field Battery, Royal Australian Artillery.","SELECT ?result WHERE { ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. <http://dbpedia.org/resource/A_Field_Battery,_Royal_Australian_Artillery> <http://dbpedia.org/ontology/battle> ?result . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?war WHERE {
  ?unit a dbo:MilitaryUnit ;
        rdfs:label ""A Field Battery, Royal Australian Artillery""@en .
  
  ?unit dbp:participatedIn ?conflict .

  ?conflict a dbo:MilitaryConflict ;
            dbo:wikiPageRedirects ?war .

  FILTER (lang(?unit) = 'en' && lang(?conflict) = 'en')
}
```",1,3,2,1,1,3,3,71,0,0,6,0,0.0,0
443,4,train,"Who is the person born, that is a musical artist and an artist, on 1949-11-20?","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/birthDate> ""1949-11-20""^^<http://www.w3.org/2001/XMLSchema#date> . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?person ?name WHERE {
  ?person a dbo:MusicalArtist .
  ?person dbo:musicalArtist true .
  ?person dbo:artist true .
  ?person dbo:birthDate ""1949-11-20""^^xsd:date .
  ?person foaf:name ?name .
}
```",1,3,2,1,1,2,3,28,0,0,2,0,0.0,0
158,10,train,"Who is the successor, that is a prime minister and an office holder and a politician, of the person deceased, that is an office holder and a politician, on 1945-09-15?","SELECT ?result WHERE { ?v0 <http://dbpedia.org/ontology/successor> ?result . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/PrimeMinister>. ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v0 <http://dbpedia.org/ontology/deathDate> ""1945-09-15""^^<http://www.w3.org/2001/XMLSchema#date> . }","```sparql
SELECT ?successor WHERE {
  ?deceased dbr:death_date ""1945-09-15""^^xsd:date ;
            dbo:officeHolderOf ?office ;
            dbo:politician ?politics .
  
  ?successor dbo:succeededBy ?deceased ;
             dbo:primeMinister ?pm ;
             dbo:officeHolderOf ?office2 ;
             dbo:politician ?politics2 .
}
```",2,7,3,2,1,3,2,20,0,0,1,0,0.0,0
791,32,train,"Give me the predecessor of the child of Emperor Takakura and spouse of the spouse, that is a royalty, of Emperor Takakura.",SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/spouse> <http://dbpedia.org/resource/Emperor_Takakura> . ?v3 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Emperor_Takakura> . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?result <http://dbpedia.org/ontology/successor> ?v3 . ?result <http://dbpedia.org/ontology/spouse> ?v1 . },"```sparql
SELECT ?predecessor WHERE {
  # Step 1: Identify Emperor Takakura's child
  ?child dbo:parent dbr:Emperor_Takakura .
  
  # Step 2: Find the predecessor of that child (in terms of royalty)
  ?child dbo:successor ?predecessor .

  # Step 3: Identify the spouse of Emperor Takakura
  ?spouse dbo:spouse dbr:Emperor_Takakura .

  # Step 4: Determine the spouse's spouse (which is likely themselves unless otherwise specified)
  ?spouse2 dbo:spouse ?spouse .
  
  # Ensure they are royalty
  ?spouse2 a dbo:Monarch .
  
  # Filter to ensure we get the correct predecessor
  FILTER(?predecessor = ?spouse2)
}
```",4,5,5,2,2,3,3,71,0,0,1,0,0.0,0
933,15,train,"Who is the band of the band, that is an artist and a musical artist, of The Ramong Sound?",SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. <http://dbpedia.org/resource/The_Ramong_Sound> <http://dbpedia.org/ontology/associatedMusicalArtist> ?v1 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?v1 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . },"```sparql
SELECT ?member WHERE {
  ?band rdf:type dbo:Band ;
        foaf:name ""Ramones""@en .
  ?member dbo:band ?band ;
          a dbo:MusicalArtist .
}
```",2,4,3,2,1,3,3,71,0,0,16,0,0.0,0
892,28,train,Give me the entity in the profession of Henri Crolla and landmark at elevation of 58 and entity in Province of Reggio Emilia.,"SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/province> <http://dbpedia.org/resource/Province_of_Reggio_Emilia> . ?result <http://dbpedia.org/ontology/elevation> ""58""^^<http://www.w3.org/2001/XMLSchema#integer> . ?result <http://dbpedia.org/ontology/country> ?v1 . <http://dbpedia.org/resource/Henri_Crolla> <http://dbpedia.org/property/occupation> ?v1 . }","```sparql
# Query 1: Profession of Henri Crolla
SELECT ?profession WHERE {
  wd:Q123456 rdfs:label ""Henri Crolla""@en .
  OPTIONAL { wd:Q123456 dbo:occupation ?profession . }
}

# Query 2: Landmark at Elevation of 58
SELECT ?landmark WHERE {
  ?landmark a dbo:Lighthouse ;
            dbo:elevationAboveSeaLevel ?elevation .
  FILTER (?elevation = ""58""^^xsd:string) # Assuming elevation is stored as string; adjust type if necessary.
}

# Query 3: Entity in Province of Reggio Emilia
SELECT ?entity WHERE {
  ?entity wdt:P131 wd:Q1234567 . # Q1234567 should be replaced with the actual DBpedia item for Province of Reggio Emilia
}
```

Note: Replace `wd:Q123456` with the correct DBpedia identifier for Henri Crolla and `wd:Q1234567` with the identifier for Province of Reggio Emilia. The elevation unit might need adjustment based on how it's stored in DBpedia.",4,4,5,2,3,3,3,71,0,0,1,0,0.0,0
573,21,train,"Give me the parent of John Quincy Adams and person decedent at the administration, that is a region, of Charlie Baker.","SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Region>. ?result <http://dbpedia.org/ontology/deathPlace> ?v1 . ?v1 <http://dbpedia.org/property/governor> ""Charlie Baker""@en . <http://dbpedia.org/resource/John_Quincy_Adams> <http://dbpedia.org/ontology/parent> ?result . }","```sparql
SELECT ?parentOfJohnQuincyAdams ?personInAdministration ?decedentRegion
WHERE {
  # Find the parent of John Quincy Adams
  dbpedia:John_Quincy_Adams dbo:parent ?parentOfJohnQuincyAdams .

  # Find individuals in Charlie Baker's administration
  ?personInAdministration dbo:officeHolder ?office .
  ?office dbo:heldBy dbpedia:Charlie_Baker .

  # Check if any of those individuals have a decedent that is a region
  ?personInAdministration dbo:decedent ?decedent .
  ?decedent rdf:type dbo:Region .

  # Return the results
}
```",3,4,4,2,2,3,3,71,0,0,2,0,0.0,0
124,6,train,"Give me the war, that is an event and a military conflict and a societal event, of Frank Rhodes (British Army officer).",SELECT ?result WHERE { ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. <http://dbpedia.org/resource/Frank_Rhodes_(British_Army_officer)> <http://dbpedia.org/ontology/battle> ?result . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?war WHERE {
  ?frankRhodes a dbo:MilitaryPerson ;
               foaf:name ""Frank Rhodes"" .
  
  ?frankRhodes dbo:servedInMilitaryOrganization ?organization .
  ?organization dbo:participatedIn ?war .

  ?war a dbo:Event ;
      a dbo:MilitaryConflict ;
      a dbo:SocietalEvent .
}
```",1,4,2,1,1,3,3,71,0,0,7,0,0.0,0
98,2,train,Give me the entity in Philippines.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Philippines> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?entity ?label WHERE {
  VALUES ?country { dbr:Philippines }
  
  ?entity dbo:country ?country .
  SERVICE wikibase:label { bd:serviceParam wikibase:language ""[AUTO_LANGUAGE],en"". }
}
ORDER BY ?label
LIMIT 100
```",1,1,2,1,1,2,3,28,0,0,5314,0,0.0,0
965,29,train,"Give me the parent of George Mountbatten, 2nd Marquess of Milford Haven and parent of the child, that is a royalty, of Prince Louis of Battenberg and spouse of Prince Louis of Battenberg.","SELECT ?result WHERE { <http://dbpedia.org/resource/George_Mountbatten,_2nd_Marquess_of_Milford_Haven> <http://dbpedia.org/ontology/parent> ?result . ?result <http://dbpedia.org/ontology/spouse> <http://dbpedia.org/resource/Prince_Louis_of_Battenberg> . ?v3 <http://dbpedia.org/ontology/parent> ?result . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v3 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Prince_Louis_of_Battenberg> . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?parent WHERE {
  # George Mountbatten, 2nd Marquess of Milford Haven's parent
  dbr:George_Mountbatten,_2nd_Marquess_of_Milford_Haven dbo:father dbr:Prince_Louis_of_Battenberg .

  # Prince Louis of Battenberg's spouse
  dbr:Prince_Louis_of_Battenberg dbo:spouse ?parent .

  # Child of Prince Louis of Battenberg who is royalty
  ?child dbo:mother ?parent .
  ?child a dbo:Monarch .
  
  FILTER(?child = dbr:Queen_Elizabeth_The_Queen_Mother)
}
```",4,5,5,2,3,3,3,71,0,0,1,0,0.0,0
445,34,train,"Give me the entity in the residence, that is a country, of the resident, that is an athlete, of Great Britain and entity in United Kingdom.",SELECT ?result WHERE { ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Athlete>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. ?v2 <http://dbpedia.org/property/residence> <http://dbpedia.org/resource/Great_Britain> . ?result <http://dbpedia.org/ontology/location> ?v1 . ?v2 <http://dbpedia.org/property/residence> ?v1 . ?result <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/United_Kingdom> . },"```sparql
SELECT ?country WHERE {
  ?athlete dbo:residence dbr:Great_Britain .
  ?athlete a dbo:Athlete .
  ?location dbo:country ?country .
  FILTER EXISTS { ?location dbo:partOf dbr:United_Kingdom }
  FILTER (?country IN (dbr:England, dbr:Scotland, dbr:Wales, dbr:Northern_Ireland))
}
```",4,6,5,3,2,3,3,71,0,0,102,0,0.0,0
274,12,train,Give me the professional in  and band member of Dizzy Gillespie and associated musical artist of Cecil Taylor.,"SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/associatedMusicalArtist> <http://dbpedia.org/resource/Dizzy_Gillespie> . ?result <http://dbpedia.org/property/occupation> """"@en . <http://dbpedia.org/resource/Cecil_Taylor> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . }","```sparql
SELECT DISTINCT ?person WHERE {
  # Find people who were band members of Dizzy Gillespie
  ?bandMember dbo:memberOf dbr:Dizzy_Gillespie .
  
  # Ensure the same person is an associated musical artist of Cecil Taylor
  ?bandMember dbo:associatedMusicalArtist dbr:Cecil_Taylor .

  BIND(?bandMember AS ?person)
}
```",3,3,4,1,3,2,3,28,0,0,1,0,0.0,0
124,24,train,"Give me the military force of the war, that is an event and a military conflict and a societal event, of Frank Rhodes (British Army officer) and military force of Battle of Atbara.",SELECT ?result WHERE { ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?result <http://dbpedia.org/ontology/battle> <http://dbpedia.org/resource/Battle_of_Atbara> . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?result <http://dbpedia.org/ontology/battle> ?v2 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. <http://dbpedia.org/resource/Frank_Rhodes_(British_Army_officer)> <http://dbpedia.org/ontology/battle> ?v2 . },"```sparql
# Query for Frank Rhodes' military force
SELECT ?militaryForce WHERE {
  ?frankRhodes dbo:occupation dbr:British_Army_officer .
  ?frankRhodes foaf:name ""Frank Rhodes"" .
  ?event dbo:agent ?frankRhodes ;
         a dbo:MilitaryConflict ;
         dbo:military_force ?militaryForce .
}

UNION

# Query for the military force in the Battle of Atbara
SELECT ?militaryForce WHERE {
  ?battle dbr:Battle_of_Atbara ;
          dbo:military_force ?militaryForce .
}
```",3,6,4,2,2,3,3,71,0,0,7,0,0.0,0
508,11,train,"Give me the birthplace of the commander, that is a politician, in 1939–1940 Winter Offensive and birthplace of Ma Bufang.",SELECT ?result WHERE { <http://dbpedia.org/resource/1939–1940_Winter_Offensive> <http://dbpedia.org/ontology/commander> ?v2 . ?v2 <http://dbpedia.org/ontology/birthPlace> ?result . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. <http://dbpedia.org/resource/Ma_Bufang> <http://dbpedia.org/ontology/birthPlace> ?result . },"```sparql
SELECT ?birthPlaceTimoshenko ?birthPlaceMaBufang WHERE {
  ?timoshenko dbo:birthPlace ?birthPlaceTimoshenko .
  ?maBufang dbo:birthPlace ?birthPlaceMaBufang .

  ?timoshenko foaf:name ""Semyon Timoshenko""@en.
  ?maBufang foaf:name ""Ma Bufang""@en.
}
```",3,4,4,2,2,3,2,20,3,2,0,0.6,1.0,0.7499999999999999
965,9,train,Give me the parent of Louise Mountbatten and spouse of Prince Louis of Battenberg.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/spouse> <http://dbpedia.org/resource/Prince_Louis_of_Battenberg> . <http://dbpedia.org/resource/Louise_Mountbatten> <http://dbpedia.org/ontology/parent> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?individual WHERE {
  # Find the parent of Louise Mountbatten
  OPTIONAL { 
    dbr:Louise_Mountbatten dbo:parent ?parent .
    BIND(?parent AS ?individual)
  }
  
  # Find the spouse of Prince Louis of Battenberg
  OPTIONAL { 
    dbr:Prince_Louis_of_Battenberg dbo:spouse ?spouse .
    BIND(?spouse AS ?individual)
  }

  FILTER (?individual != (dbr:Louise_Mountbatten || dbr:Prince_Louis_of_Battenberg))
}
```",2,2,3,1,2,3,3,71,1,0,0,1.0,1.0,1.0
495,4,train,Give me the parent of Princess Pauline of Württemberg (1810–1856).,SELECT ?result WHERE { <http://dbpedia.org/resource/Princess_Pauline_of_Württemberg_(1810–1856)> <http://dbpedia.org/ontology/parent> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?parent WHERE {
  VALUES ?princess { dbr:Princess_Pauline_of_Württemberg }
  ?princess dbo:parent ?parent .
}
```",1,1,2,1,1,3,2,20,0,0,2,0,0.0,0
978,3,train,"Who is the professional, that is a musical artist and an artist, in ?","SELECT ?result WHERE { ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?result <http://dbpedia.org/property/occupation> """"@en . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?person ?name WHERE {
  ?person a dbo:MusicalArtist .
  ?person a dbo:Artist .
  OPTIONAL { ?person rdfs:label ?name FILTER (lang(?name) = 'en') }
}
ORDER BY ?name
LIMIT 10
```",1,3,2,1,1,3,2,20,1,19,8676,0.05,0.00011524720525527257,0.00022996435552489366
365,9,train,"Give me the birth name of the commander, that is an office holder, in Ukrainian–Soviet War.",SELECT ?result WHERE { <http://dbpedia.org/resource/Ukrainian–Soviet_War> <http://dbpedia.org/ontology/commander> ?v0 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v0 <http://dbpedia.org/property/birthName> ?result . },"```sparql
SELECT ?birthName WHERE {
  wd:Q42 foaf:name ""Vladimir Lenin""@en .
  OPTIONAL { wd:Q42 schema:givenName ?givenName . }
  OPTIONAL { wd:Q42 schema:familyName ?familyName . }
  OPTIONAL { wd:Q42 schema:birthName ?birthName . }
}
```",2,3,3,2,1,3,2,20,0,0,2,0,0.0,0
892,32,train,Give me the entity in the profession of Henri Crolla and landmark at elevation of the award of Anna Ishii.,SELECT ?result WHERE { <http://dbpedia.org/resource/Anna_Ishii> <http://dbpedia.org/property/awards> ?v3 . <http://dbpedia.org/resource/Henri_Crolla> <http://dbpedia.org/property/occupation> ?v1 . ?result <http://dbpedia.org/ontology/elevation> ?v3 . ?result <http://dbpedia.org/ontology/country> ?v1 . },"```sparql
# Query for Henri Crolla's profession
SELECT ?profession WHERE {
  dbpedia:Henri_Crolla dbo:occupation ?profession .
}

# Assuming we find out Anna Ishii received an award at a specific elevation, 
# we would then query for landmarks at that elevation. This is hypothetical 
# as the exact elevation and award are not specified in DBpedia directly.
# Example query structure if we knew the elevation:
SELECT ?landmark WHERE {
  ?landmark dbo:elevation ?elevation .
  FILTER(?elevation = ""SPECIFIC_ELEVATION"") # Replace SPECIFIC_ELEVATION with actual value
}
```",4,4,5,2,2,3,3,71,0,0,11,0,0.0,0
456,17,train,"Give me the band, that is a musical artist, of the band of Alan Doyle.",SELECT ?result WHERE { ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?v1 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . <http://dbpedia.org/resource/Alan_Doyle> <http://dbpedia.org/ontology/associatedMusicalArtist> ?v1 . },"```sparql
SELECT ?band WHERE {
  wd:Q123456 wdt:P106 wd:Q33999; # Alan Doyle has occupation of musician (P106)
         wdt:P175 wd:Q789012.     # Alan Doyle is a member of Great Big Sea (P175)
  
  wd:Q789012 wdt:P31 ?band.      # Great Big Sea is an instance of (P31) band
}
```

Note: In the above SPARQL query, `wd:Q123456` should be replaced with Alan Doyle's actual DBpedia identifier, and `wd:Q789012` should be replaced with the identifier for ""Great Big Sea."" These identifiers need to be looked up in DBpedia or a similar resource.",2,3,3,2,1,3,3,71,0,0,2,0,0.0,0
216,26,train,"Give me the player in the coach, that is a soccer player and a sports manager and a soccer manager, of the player, that is an organisation and a sports club and a soccer club, in Džemal Berberović.",SELECT ?result WHERE { <http://dbpedia.org/resource/Džemal_Berberović> <http://dbpedia.org/ontology/team> ?v1 . ?v1 <http://dbpedia.org/ontology/coach> ?v2 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerClub>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerManager>. ?v2 <http://dbpedia.org/ontology/team> ?result . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsManager>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsClub>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerPlayer>. },"```sparql
SELECT ?coach WHERE {
  # Find the soccer club associated with Džemal Berberović
  ?player dbr:Džemal_Berberović .
  ?player dbo:playsFor ?club .
  
  # Ensure the club is a sports organization and specifically a soccer club
  ?club rdf:type dbo:SportsClub ;
        dbo:sport dbr:Soccer .

  # Find the coach of that club who is also a player, manager, and sports manager
  ?coach dbo:managerOf ?club .
  ?coach rdf:type dbo:SoccerPlayer ;
         dbo:occupation dbo:SportsManager ;
         dbo:position dbo:SoccerManager .
}
```",3,9,4,3,1,3,3,71,0,0,24,0,0.0,0
645,14,train,"Give me the leader of the office, that is a government agency and an organisation, of Camilo Menéndez Tolosa.",SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/leader> ?result . <http://dbpedia.org/resource/Camilo_Menéndez_Tolosa> <http://dbpedia.org/property/office> ?v1 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/GovernmentAgency>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?office WHERE {
  ?person foaf:name ""Camilo Menéndez Tolosa""@en .
  ?person dbo:positionHeld ?office .
  ?office a dbo:GovernmentAgency ;
         a dbo:Organization .
}
```",2,4,3,2,1,3,3,71,0,0,1,0,0.0,0
98,13,train,Give me the birth place of Paolo Ballesteros and region of the time zone of Lopez Jaena.,SELECT ?result WHERE { <http://dbpedia.org/resource/Paolo_Ballesteros> <http://dbpedia.org/ontology/birthPlace> ?result . ?result <http://dbpedia.org/ontology/timeZone> ?v0 . <http://dbpedia.org/resource/Lopez_Jaena> <http://dbpedia.org/ontology/timeZone> ?v0 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?birthPlaceLabel ?regionLabel WHERE {
  # Query for Paolo Ballesteros' birthplace
  OPTIONAL { 
    dbr:Paolo_Ballesteros dbo:birthPlace ?birthPlace .
    SERVICE wikibase:label { bd:serviceParam wikibase:language ""[AUTO_LANGUAGE],en"". }
  }

  # Query for the time zone of Lopez, Jaena and its region
  OPTIONAL {
    dbr:Lopez,_Jaena dbo:timeZone ?timeZone .
    ?timeZone dbo:region ?region .
    SERVICE wikibase:label { bd:serviceParam wikibase:language ""[AUTO_LANGUAGE],en"". }
  }

  BIND(COALESCE(?birthPlaceLabel, ""Unknown"") AS ?birthPlaceResult)
  BIND(COALESCE(?regionLabel, ""Unknown"") AS ?regionResult)
}
```",3,3,4,2,2,2,3,28,0,0,2,0,0.0,0
216,8,train,Give me the office of the mayor of Ros Bates.,SELECT ?result WHERE { <http://dbpedia.org/resource/Ros_Bates> <http://dbpedia.org/property/leader> ?v1 . ?v1 <http://dbpedia.org/property/office> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?office WHERE {
  ?person foaf:name ""Ros Bates""@en .
  ?person dbo:office ?office .
}
```",2,2,3,2,1,2,3,28,0,0,30,0,0.0,0
579,2,train,Give me the resident of Scotland.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/residence> <http://dbpedia.org/resource/Scotland> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?person WHERE {
  ?person a dbo:Person .
  ?person dbo:birthPlace dbr:Scotland ;
         OPTIONAL { ?person dbo:residence dbr:Scotland }
}
LIMIT 100
```",1,1,2,1,1,3,2,20,0,0,35,0,0.0,0
645,30,train,"Give me the military force of Spanish Civil War and commander in Battle of Jarama and leader of the office, that is a government agency and an organisation, of Camilo Menéndez Tolosa.",SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. <http://dbpedia.org/resource/Battle_of_Jarama> <http://dbpedia.org/ontology/commander> ?result . <http://dbpedia.org/resource/Camilo_Menéndez_Tolosa> <http://dbpedia.org/property/office> ?v1 . ?result <http://dbpedia.org/ontology/battle> <http://dbpedia.org/resource/Spanish_Civil_War> . ?v1 <http://dbpedia.org/ontology/leader> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/GovernmentAgency>. },"```sparql
# Query for military forces involved in the Battle of Jarama
SELECT ?force WHERE {
  ?battle dbo:wikiPageRedirects db:Battle_of_Jarama .
  ?battle dbo:military_force ?force .
}

# Query for commanders in the Battle of Jarama
SELECT DISTINCT ?commander WHERE {
  ?battle dbo:wikiPageRedirects db:Battle_of_Jarama .
  ?battle dbo:commander ?commander .
}

# Query for Camilo Menéndez Tolosa's associated office, agency, or organization and its leader
SELECT ?office ?leader WHERE {
  ?person foaf:name ""Camilo Menéndez Tolosa""@en ;
          dbo:positionHeld ?office .
  ?office dbo:head ?leader .
}
```",4,6,5,2,3,3,3,71,0,0,1,0,0.0,0
554,14,train,"Give me the leader of the birth place of the band, that is an artist, of Rita Redshoes.",SELECT ?result WHERE { ?v0 <http://dbpedia.org/property/leader> ?result . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. ?v2 <http://dbpedia.org/ontology/birthPlace> ?v0 . <http://dbpedia.org/resource/Rita_Redshoes> <http://dbpedia.org/ontology/associatedMusicalArtist> ?v2 . },"```sparql
# Step 1: Find Rita Redshoes' birthplace
SELECT ?birthPlace WHERE {
    wd:Q123456 wdt:P19 ?birthPlace .
}

# Assuming the birthplace is Lisbon, we proceed to find its current leader
SELECT ?leader WHERE {
    dbpedia:Lisbon dbo:mayor ?leader .
}
```

Note: Replace `wd:Q123456` with the actual DBpedia identifier for Rita Redshoes if available.",3,4,4,3,1,3,2,20,0,0,3,0,0.0,0
606,6,train,Give me the figure known as Barb City and birthplace of Charles I. Barber.,"SELECT ?result WHERE { ?result <http://dbpedia.org/property/nickname> ""Barb City""@en . <http://dbpedia.org/resource/Charles_I._Barber> <http://dbpedia.org/ontology/birthPlace> ?result . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?birthPlaceLabel WHERE {
  ?person a dbo:Person ;
          foaf:name ""Charles I. Barber""@en .
  ?person dbo:birthPlace ?birthPlace .
  ?birthPlace rdfs:label ?birthPlaceLabel .
  FILTER (lang(?birthPlaceLabel) = 'en')
}
```",2,2,3,1,2,3,2,20,0,1,1,0.0,0.0,0
933,26,train,Give me the reference to the birth name of the professional in Musician.,SELECT ?result WHERE { ?v2 <http://dbpedia.org/property/birthName> ?v0 . ?v2 <http://dbpedia.org/property/occupation> <http://dbpedia.org/resource/Musician> . ?result <http://xmlns.com/foaf/0.1/name> ?v0 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT ?musician ?birthName WHERE {
  ?musician a dbo:Musician .
  OPTIONAL { 
    ?musician foaf:name ?birthName .
  }
  FILTER (lang(?birthName) = 'en')
}
LIMIT 10
```",3,3,4,3,1,3,3,71,0,0,364,0,0.0,0
166,11,train,Give me the entity in Spain and resting place of the military force of Spanish Civil War.,SELECT ?result WHERE { ?v2 <http://dbpedia.org/ontology/restingPlace> ?result . ?v2 <http://dbpedia.org/ontology/battle> <http://dbpedia.org/resource/Spanish_Civil_War> . ?result <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Spain> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?entity ?restingPlace WHERE {
  ?person a dbo:MilitaryPerson ;
          foaf:name ""Francisco Franco""@en .
  OPTIONAL { ?person dbo:placeOfBirth dbr:Spain . }
  OPTIONAL { ?person dbo:deathPlace ?restingPlace . }
  FILTER (lang(?restingPlace) = 'en')
}
```",3,3,4,2,2,3,2,20,0,0,4,0,0.0,0
508,8,train,"Give me the birthplace of the commander, that is Saudi, in Central Plains War.",SELECT ?result WHERE { ?v0 <http://dbpedia.org/ontology/birthPlace> ?result . ?v0 <http://dbpedia.org/ontology/nationality> <http://dbpedia.org/resource/Saudi_Arabia>. <http://dbpedia.org/resource/Central_Plains_War> <http://dbpedia.org/ontology/commander> ?v0 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?birthPlace WHERE {
  ?person a dbo:MilitaryPerson ;
          dbo:nationality dbr:Saudi_Arabia ;
          dbo:militaryConflict dbr:Central_Plains_War .
  ?person dbo:birthPlace ?birthPlace .
}
```",2,3,3,2,1,3,2,20,0,0,3,0,0.0,0
267,1,train,Give me the person born on 1953-03-01.,"SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/birthDate> ""1953-03-01""^^<http://www.w3.org/2001/XMLSchema#date> . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?person ?name WHERE {
  ?person a dbo:Person .
  ?person dbo:name ?name .
  ?person dbo:birthDate ?date .
  FILTER (str(?date) = ""1953-03-01T00:00:00Z""^^xsd:dateTime)
}
```",1,1,2,1,1,3,2,20,0,0,35,0,0.0,0
892,26,train,Give me the landmark at elevation of the award of the member of E-girls.,SELECT ?result WHERE { ?v2 <http://dbpedia.org/property/awards> ?v0 . <http://dbpedia.org/resource/E-girls> <http://dbpedia.org/ontology/bandMember> ?v2 . ?result <http://dbpedia.org/ontology/elevation> ?v0 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?award ?landmark WHERE {
  # Find Ami Suzuki as a member of E-girls
  ?member dbo:memberOf dbr:E-girls .
  ?member foaf:name ""Ami Suzuki""@en .

  # Retrieve awards associated with her
  ?member dbo:awardReceived ?award .

  # Hypothetical step to find elevation (this part is speculative)
  OPTIONAL { 
    ?award dbo:elevation ?elevation .
  }

  # Find landmarks at that elevation
  ?landmark dbo:elevation ?elevation .
}
```

Note: The above query assumes the existence of an `dbo:elevation` property for awards, which may not be present in DBpedia. This part is speculative and might need adjustment based on actual data availability.",3,3,4,3,1,3,3,71,0,0,258,0,0.0,0
130,11,train,"Give me the entity in Tennessee and figure known as the film, that is a soccer club and an organisation, of Candice Storey Lee.",SELECT ?result WHERE { ?result <http://dbpedia.org/property/nickname> ?v2 . ?v2 <http://dbpedia.org/ontology/director> <http://dbpedia.org/resource/Candice_Storey_Lee> . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerClub>. ?result <http://dbpedia.org/ontology/state> <http://dbpedia.org/resource/Tennessee> . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?entity WHERE {
  ?entity dbo:location dbr:Tennessee .
  ?entity dbo:genre dbr:Soccer_club .
  ?entity dbo:organizationType dbr:Sports_organization .
  OPTIONAL { ?entity dbo:film dbr:* . }
  OPTIONAL { ?entity dbp:founder dbr:Candice_Storey_Lee . }
}
```",3,5,4,2,2,3,2,20,0,0,1,0,0.0,0
791,29,train,Give me the father of Emperor Go-Toba and predecessor of the child of Emperor Takakura and spouse of Taira no Tokuko.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/spouse> <http://dbpedia.org/resource/Taira_no_Tokuko> . ?v3 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Emperor_Takakura> . ?result <http://dbpedia.org/ontology/successor> ?v3 . <http://dbpedia.org/resource/Emperor_Go-Toba> <http://dbpedia.org/property/father> ?result . },"```sparql
# Step 1: Get the father of Emperor Go-Toba
SELECT ?father WHERE {
  dbpedia:Go_Toba dbp:father ?father .
}

# Step 2: Get the child of Emperor Takakura and Taira no Tokuko (Emperor Antoku)
SELECT ?child WHERE {
  dbpedia:Takakura dbp:spouse dbpedia:Taira_no_Tokuko ;
                  dbp:son ?child .
}

# Step 3: Find the predecessor of Emperor Antoku
SELECT ?predecessor WHERE {
  ?antoku a dbo:Monarch ;
          dbp:succession ""Emperor of Japan""^^xsd:string ;
          dbp:predecessor ?predecessor .
  FILTER(?antoku = <http://dbpedia.org/resource/Emperor_Antoku>)
}

# Step 4: Combine the results to find the common person
SELECT DISTINCT ?father WHERE {
  # Father of Emperor Go-Toba
  dbpedia:Go_Toba dbp:father ?father .

  # Predecessor of Emperor Antoku
  ?antoku a dbo:Monarch ;
          dbp:succession ""Emperor of Japan""^^xsd:string ;
          dbp:predecessor ?father .
  FILTER(?antoku = <http://dbpedia.org/resource/Emperor_Antoku>)
}
```",4,4,5,2,3,3,3,71,0,0,1,0,0.0,0
976,7,train,Give me the birth name of Naci Bostancı.,SELECT ?result WHERE { <http://dbpedia.org/resource/Naci_Bostancı> <http://dbpedia.org/property/birthName> ?result . },"```sparql
SELECT ?birthName WHERE {
  <http://dbpedia.org/resource/Naci_Bostanc%C4%B1> dbo:birthName ?birthName .
}
```",1,1,2,1,1,3,3,71,0,0,1,0,0.0,0
976,38,train,"Give me the office of the person born as Mehmet Naci Bostancı and office of the mayor, that is a politician and an office holder and Turkish, of Nation Alliance (Turkey).","SELECT ?result WHERE { ?v3 <http://dbpedia.org/ontology/nationality> <http://dbpedia.org/resource/Turkey>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v0 <http://dbpedia.org/property/office> ?result . <http://dbpedia.org/resource/Nation_Alliance_(Turkey)> <http://dbpedia.org/property/leader> ?v3 . ?v3 <http://dbpedia.org/property/office> ?result . ?v0 <http://dbpedia.org/property/birthName> ""Mehmet Naci Bostancı""@en . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?office WHERE {
  ?person a dbo:Politician ;
          foaf:name ""Mehmet Naci Bostancı""@en ;
          dbo:nationality dbr:Turkey .
  
  OPTIONAL { ?person dbo:positionHeld ?office . }
  
  FILTER EXISTS {
    ?party a dbo:PoliticalParty ;
           dbp:country dbr:Turkey ;
           dbp:name ""Nation Alliance (Turkey)""@en .
    
    ?person dbo:memberOf ?party .
  }
}
```",4,7,5,2,2,3,3,71,0,0,1,0,0.0,0
645,13,train,"Give me the military force of the force, that is an event and a military conflict and a societal event, of Francisco Largo Caballero.",SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v1 <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Francisco_Largo_Caballero> . ?result <http://dbpedia.org/ontology/battle> ?v1 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. },"```sparql
SELECT ?militaryForce WHERE {
  ?event dcterms:isPartOf ?conflict .
  ?conflict rdf:type dbo:MilitaryConflict .
  ?conflict dbo:eventName ""Spanish Civil War"" .
  
  ?person foaf:name ""Francisco Largo Caballero""@en .
  ?person dbo:memberOf ?militaryForce .
  ?militaryForce dbo:participatedIn ?event .

  FILTER EXISTS { 
    ?event rdf:type dbo:SocietalEvent .
  }
}
```",2,5,3,2,1,3,3,71,0,0,514,0,0.0,0
976,27,train,Give me the office of the person born as the birth name of Naci Bostancı.,SELECT ?result WHERE { ?v0 <http://dbpedia.org/property/birthName> ?v1 . ?v0 <http://dbpedia.org/property/office> ?result . <http://dbpedia.org/resource/Naci_Bostancı> <http://dbpedia.org/property/birthName> ?v1 . },"```sparql
SELECT ?birthName WHERE {
  wd:Q123456 foaf:name ""Naci Bostancı""@en .
  OPTIONAL { wd:Q123456 foaf:givenName ?birthName . }
}

SELECT ?person ?office WHERE {
  ?person foaf:givenName ?birthName .
  FILTER(?birthName = ""Naci""@en) # Assuming Naci is the birth name
  OPTIONAL { ?person dbo:positionHeld ?office . }
}
```

Note: Replace `wd:Q123456` with the actual DBpedia resource identifier for Naci Bostancı if known. The query assumes that the birth name ""Naci"" is correct and available in DBpedia.",3,3,4,3,1,3,3,71,0,0,4,0,0.0,0
365,0,train,Give me the person born as Symon Vasylyovych Petliura.,"SELECT ?result WHERE { ?result <http://dbpedia.org/property/birthName> ""Symon Vasylyovych Petliura""@en . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT ?person ?fullName WHERE {
  ?person dbo:birthName ""Symon Vasylyovych Petliura"" .
  OPTIONAL { ?person foaf:name ?fullName }
}
```",1,1,2,1,1,3,2,20,0,0,1,0,0.0,0
216,8,train,"Give me the person born, that is a sports manager and a soccer manager and a soccer player, on 1983-12-20.","SELECT ?result WHERE { ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerManager>. ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsManager>. ?result <http://dbpedia.org/ontology/birthDate> ""1983-12-20""^^<http://www.w3.org/2001/XMLSchema#date> . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerPlayer>. }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?person WHERE {
  ?person a dbo:Person .
  ?person dbo:birthDate ?date .
  FILTER (YEAR(?date) = 1983 && MONTH(?date) = 12 && DAY(?date) = 20)
  
  ?person dbo:occupation ?occupation1 .
  ?person dbo:occupation ?occupation2 .
  ?person dbo:occupation ?occupation3 .

  VALUES ?occupation1 { dbr:Soccer_manager dbr:Sports_manager }
  VALUES ?occupation2 { dbr:Soccer_player dbr:Sports_manager }
  VALUES ?occupation3 { dbr:Soccer_player dbr:Soccer_manager }

  FILTER (?occupation1 != ?occupation2 && ?occupation1 != ?occupation3 && ?occupation2 != ?occupation3)
}
```",1,4,2,1,1,3,3,71,0,0,1,0,0.0,0
329,18,train,"Give me the entity in United Kingdom and entity in the birthplace, that is an organisation and a country, of Robert Bates (loyalist).",SELECT ?result WHERE { ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?result <http://dbpedia.org/ontology/country> ?v2 . <http://dbpedia.org/resource/Robert_Bates_(loyalist)> <http://dbpedia.org/ontology/birthPlace> ?v2 . ?result <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/United_Kingdom> . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?ukOrganization ?birthCountry WHERE {
  # Find Robert Bates (loyalist)
  ?person a dbo:Person ;
          foaf:name ""Robert Bates"" ;
          dbo:nationality dbr:United_Kingdom .

  # Find organizations related to him in the UK
  OPTIONAL { 
    ?organization dbo:location dbr:United_Kingdom ;
                  dbo:member ?person .
    BIND(?organization AS ?ukOrganization)
  }

  # Find his birthplace and corresponding country
  ?person dbo:birthPlace ?birthPlace .
  ?birthPlace dbo:country ?birthCountry .
}
```",3,5,4,2,2,2,3,28,0,0,531,0,0.0,0
329,6,train,Give me the entity in United Kingdom and birthplace of Eric Cross (writer).,SELECT ?result WHERE { <http://dbpedia.org/resource/Eric_Cross_(writer)> <http://dbpedia.org/ontology/birthPlace> ?result . ?result <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/United_Kingdom> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?birthPlace WHERE {
  ?person a dbo:Writer ;
          foaf:name ""Eric Cross"" .
  ?person dbo:birthPlace ?birthPlace .
  ?birthPlace dbo:country dbr:United_Kingdom .
}
```",2,2,3,1,2,2,3,28,0,0,1,0,0.0,0
826,6,train,"Who is the child, that is a royalty, of Louis I, Grand Duke of Hesse?","SELECT ?result WHERE { ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. <http://dbpedia.org/resource/Louis_I,_Grand_Duke_of_Hesse> <http://dbpedia.org/ontology/child> ?result . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?child ?title WHERE {
  # Identify Louis I, Grand Duke of Hesse
  VALUES ?parent { dbr:Louis_I,_Grand_Duke_of_Hesse }
  
  # Find children of Louis I
  ?child dbo:parent ?parent .
  
  # Check if the child has a royalty title or role
  OPTIONAL {
    ?child dbo:title ?title .
    FILTER(CONTAINS(LCASE(?title), ""royalty""))
  }

  # Ensure that we only get results where a title is found
  FILTER(BOUND(?title))
}
```",1,2,2,1,1,3,3,71,0,0,1,0,0.0,0
459,17,train,"Give me the governor of the administration, that is a politician, of Brad Henry and person born as John Kevin Stitt.","SELECT ?result WHERE { ?v1 <http://dbpedia.org/property/governor> <http://dbpedia.org/resource/Brad_Henry> . ?result <http://dbpedia.org/property/birthName> ""John Kevin Stitt""@en . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v1 <http://dbpedia.org/property/governor> ?result . }","```sparql
SELECT ?governor WHERE {
  ?person1 foaf:name ""Brad Henry""@en .
  ?person1 dbo:officeHolder ?position1 .
  ?position1 dbo:positionTitle ""Governor of Oklahoma""@en .

  ?person2 foaf:name ""John Kevin Stitt""@en .
  ?person2 dbo:birthDate ?birthDate .
  FILTER (YEAR(?birthDate) = 1975 && MONTH(?birthDate) = 5 && DAY(?birthDate) = 6) .

  ?position2 dbo:officeHolder ?person2 .
  ?position2 dbo:positionTitle ""Governor of Oklahoma""@en .

  ?currentPosition dbo:positionTitle ""Governor of Oklahoma""@en .
  ?currentPosition dbo:officeHolder ?governor .
}
```",3,4,4,2,2,2,3,28,0,0,1,0,0.0,0
417,3,train,"Who is the child of Knud, Hereditary Prince of Denmark?","SELECT ?result WHERE { ?result <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Knud,_Hereditary_Prince_of_Denmark> . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?child WHERE {
  ?person a dbo:Person ;
          dbp:father ""Knud, Hereditary Prince of Denmark""@en .
  ?person dbo:child ?child .
}
```",1,1,2,1,1,3,3,71,0,0,3,0,0.0,0
839,32,train,"Give me the band of the person born, that is a musical artist, as Kevin Richard Russell and band of the member of Böhse Onkelz.","SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. <http://dbpedia.org/resource/Böhse_Onkelz> <http://dbpedia.org/ontology/bandMember> ?v3 . ?result <http://dbpedia.org/ontology/bandMember> ?v3 . ?v1 <http://dbpedia.org/property/birthName> ""Kevin Richard Russell""@en . ?v1 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?bandKevinRussell ?memberBöhseOnkelz WHERE {
  # Find the band associated with Kevin Richard Russell
  OPTIONAL {
    ?person a dbo:MusicalArtist ;
            foaf:name ""Kevin Richard Russell"" .
    ?person dbo:associatedBand ?bandKevinRussell .
  }

  # Find members of Böhse Onkelz
  dbr:Böhse_Onkelz dbo:member ?memberBöhseOnkelz .
}
```",4,5,5,2,2,3,3,71,0,0,1,0,0.0,0
36,3,train,"Give me the claim to fame, that is a film, of Lepacious Bose.",SELECT ?result WHERE { <http://dbpedia.org/resource/Lepacious_Bose> <http://dbpedia.org/ontology/knownFor> ?result . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Film>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?film ?title WHERE {
  ?film a dbo:Film .
  ?film dbo:starring dbr:Lepa_Brena .
  ?film rdfs:label ?title .
  FILTER (lang(?title) = 'en')
}
ORDER BY DESC(COUNT(?film))
LIMIT 1
```",1,2,2,1,1,2,3,28,0,2,1,0.0,0.0,0
965,26,train,"Give me the parent of the child, that is a royalty, of the person born, that is a politician, on 1854-05-24.","SELECT ?result WHERE { ?v0 <http://dbpedia.org/ontology/parent> ?result . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v0 <http://dbpedia.org/property/father> ?v2 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v2 <http://dbpedia.org/ontology/birthDate> ""1854-05-24""^^<http://www.w3.org/2001/XMLSchema#date> . }","```sparql
SELECT ?parent WHERE {
  ?person dbo:birthDate ""1854-05-24""^^xsd:date ;
          dbo:occupation dbp:Politician .
  
  ?child dbo:parent ?person ;
         dbo:royaltyStatus ?royalty .

  FILTER EXISTS { ?royalty a dbo:Royalty }
  
  ?parent dbo:child ?child .
}
```",3,5,4,3,1,3,3,71,0,0,2,0,0.0,0
955,8,train,"Give me the band of the band member, that is a musical artist and an artist, of Street Dogs.",SELECT ?result WHERE { ?v0 <http://dbpedia.org/ontology/associatedMusicalArtist> <http://dbpedia.org/resource/Street_Dogs> . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. ?result <http://dbpedia.org/ontology/bandMember> ?v0 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?band WHERE {
  ?person dbo:bandMember dbp:Street_Dogs ;
          a dbo:MusicalArtist, dbo:Artist .
  
  ?person dbo:memberOfBand ?band .
}
```",2,4,3,2,1,3,2,20,0,0,3,0,0.0,0
445,13,train,Give me the death place of the awardee of Royal Astronomical Society.,SELECT ?result WHERE { ?v1 <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/Royal_Astronomical_Society> . ?v1 <http://dbpedia.org/ontology/deathPlace> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?person ?deathPlace WHERE {
  ?person dbo:awardReceivedBy dbr:Royal_Astronomical_Society .
  OPTIONAL { ?person dbo:deathPlace ?deathPlace . }
}
```",2,2,3,2,1,3,3,71,0,0,2,0,0.0,0
933,22,train,"Give me the band of Mike Elliott (saxophonist) and band of the band, that is a group and a band and an organisation, of Alan Warner (musician).",SELECT ?result WHERE { ?v0 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. <http://dbpedia.org/resource/Alan_Warner_(musician)> <http://dbpedia.org/ontology/associatedMusicalArtist> ?v0 . <http://dbpedia.org/resource/Mike_Elliott_(saxophonist)> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Group>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Band>. },"```sparql
# Query for Mike Elliott's band
SELECT ?band WHERE {
  ?person foaf:name ""Mike Elliott""@en .
  ?person dbo:instrument dbr:Saxophone .
  ?person dbo:member ?band .
  FILTER (lang(?band) = 'en')
}
```

```sparql
# Query for Alan Warner's band that is both a group and an organization
SELECT DISTINCT ?band WHERE {
  ?person foaf:name ""Alan Warner""@en .
  ?person dbo:instrument ?instrument .
  ?person dbo:member ?band .
  ?band rdf:type dbr:Musical_group .
  ?band rdfs:label ?label .
  FILTER (lang(?label) = 'en')
  OPTIONAL { 
    ?band dbo:description ?desc .
    FILTER(CONTAINS(LCASE(?desc), ""group"") && CONTAINS(LCASE(?desc), ""organization""))
  }
}
```",3,6,4,2,2,3,3,71,0,0,3,0,0.0,0
267,6,train,Give me the person born on 1953-03-01 and coach of Iran national football team.,"SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/birthDate> ""1953-03-01""^^<http://www.w3.org/2001/XMLSchema#date> . <http://dbpedia.org/resource/Iran_national_football_team> <http://dbpedia.org/ontology/coach> ?result . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?person ?name WHERE {
  ?person a dbo:Person .
  ?person dbo:birthDate ""1953-03-01""^^xsd:date .
  ?person dbo:name ?name .
  ?person dbo:coachForTeam dbr:Iran_national_football_team .
}
```",2,2,3,1,2,3,2,20,0,0,1,0,0.0,0
582,33,train,"Give me the player in the father, that is an athlete and a soccer manager and a sports manager, of the child of Kazuaki Nagasawa and reference to Japan.","SELECT ?result WHERE { ?v0 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Kazuaki_Nagasawa> . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerManager>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsManager>. ?v3 <http://dbpedia.org/ontology/team> ?result . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Athlete>. ?v0 <http://dbpedia.org/property/father> ?v3 . ?result <http://xmlns.com/foaf/0.1/name> ""Japan""@en . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?player WHERE {
  # Find Kazuaki Nagasawa and his child Ritsu Doan
  ?kazuakinagasawa a dbo:Person ;
                   foaf:name ""Kazuaki Nagasawa""@en ;
                   dbo:nationality dbr:Japan .

  ?child dbo:parent ?kazuakinagasawa ;
         foaf:name ""Ritsu Doan""@en .

  # Check if Kazuaki Nagasawa is an athlete and has roles related to soccer management
  ?kazuakinagasawa dbo:occupation ?occupation .
  
  FILTER (
    EXISTS { ?occupation rdfs:label ?label1 . FILTER (CONTAINS(LCASE(?label1), ""athlete"")) }
    || EXISTS { ?occupation rdfs:label ?label2 . FILTER (CONTAINS(LCASE(?label2), ""soccer manager"")) }
    || EXISTS { ?occupation rdfs:label ?label3 . FILTER (CONTAINS(LCASE(?label3), ""sports manager"")) }
  )

  # Ensure the player is related to Japan
  ?kazuakinagasawa dbo:nationality dbr:Japan .

  # Return the player who fits all criteria
  BIND(?kazuakinagasawa AS ?player)
}
```",4,7,5,3,2,3,3,71,0,0,1,0,0.0,0
273,1,train,Give me the parent of Gianni Agnelli.,SELECT ?result WHERE { <http://dbpedia.org/resource/Gianni_Agnelli> <http://dbpedia.org/ontology/parent> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?parentLabel WHERE {
  ?person dbo:givenName ""Gianni"" .
  ?person dbo:familyName ""Agnelli"" .
  ?person dbo:parent ?parent .
  ?parent rdfs:label ?parentLabel .
  FILTER(LANG(?parentLabel) = 'en')
}
```",1,1,2,1,1,3,2,20,0,0,2,0,0.0,0
976,20,train,"Give me the office of the mayor, that is a politician and an office holder and Turkish, of Nation Alliance (Turkey) and office of Mustafa Şentop.",SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v1 <http://dbpedia.org/property/office> ?result . <http://dbpedia.org/resource/Nation_Alliance_(Turkey)> <http://dbpedia.org/property/leader> ?v1 . <http://dbpedia.org/resource/Mustafa_Şentop> <http://dbpedia.org/property/office> ?result . ?v1 <http://dbpedia.org/ontology/nationality> <http://dbpedia.org/resource/Turkey>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. },"```sparql
SELECT DISTINCT ?office WHERE {
  # Part 1: Find the office of Mustafa Şentop
  { 
    dbpedia:Mustafa_Sentop dbo:positionHeld ?office .
  }
  
  UNION
  
  # Part 2: Find offices of Turkish politicians who are office holders and part of Nation Alliance (Turkey)
  {
    ?person a dbo:Politician ;
           dbo:nationality dbr:Turkey ;
           dbo:memberOf dbr:Nation_Alliance_(Turkey) .
    ?person dbo:occupation ?occupation .
    FILTER(CONTAINS(LCASE(?occupation), ""politician"") && CONTAINS(LCASE(?occupation), ""officeholder""))
    ?person dbo:positionHeld ?office .
  }
}
```",3,6,4,2,2,3,3,71,0,0,1,0,0.0,0
326,10,train,"Give me the award, that is a country, of the awardee of French Legion of Honor.","SELECT ?result WHERE { ?v0 <http://dbpedia.org/property/awards> ""French Legion of Honor""@en . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. ?v0 <http://dbpedia.org/property/awards> ?result . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?award WHERE {
  # Find awards that are named after countries
  ?award a dbo:Award ;
         rdfs:label ?label .
  
  FILTER regex(?label, ""Order of the British Empire|Nobel Prize in Literature"", ""i"") .

  # Check if any recipient of the French Legion of Honor has received this award
  ?recipient dbo:awardedBy dbr:French_Legion_of_Honor ;
             dbo:awardReceived ?award .
}
```",2,3,3,2,1,3,2,20,0,0,3,0,0.0,0
554,1,train,Give me the leader of Portuguese Mozambique.,SELECT ?result WHERE { <http://dbpedia.org/resource/Portuguese_Mozambique> <http://dbpedia.org/property/leader> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?leader ?startYear ?endYear WHERE {
  ?leader a dbo:Governor ;
          dbo:country dbr:Portuguese_Mozambique ;
          dbo:startDate ?startYear ;
          dbo:endDate ?endYear .
}
ORDER BY ?startYear
```",1,1,2,1,1,3,2,20,0,0,3,0,0.0,0
715,0,train,Give me the commander in Rif War.,SELECT ?result WHERE { <http://dbpedia.org/resource/Rif_War> <http://dbpedia.org/ontology/commander> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?commander ?title WHERE {
  ?event dbo:wikiPageRedirects dbr:Rif_War .
  ?event dbo:participatedInMilitaryConflict ?conflict .
  ?conflict dbo:commander ?commander .
  OPTIONAL { ?commander dbo:title ?title . }
}
```",1,1,2,1,1,3,3,71,0,0,22,0,0.0,0
382,9,train,"Give me the manager, that is a soccer manager and an athlete and a sports manager, of the player in Lukas Kübler.",SELECT ?result WHERE { ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsManager>. ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerManager>. ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Athlete>. ?v0 <http://dbpedia.org/ontology/manager> ?result . <http://dbpedia.org/resource/Lukas_Kübler> <http://dbpedia.org/ontology/team> ?v0 . },"```sparql
PREFIX dbp: <http://dbpedia.org/property/>
PREFIX dbo: <http://dbpedia.org/ontology/>

SELECT ?manager WHERE {
  ?player rdf:type dbo:SoccerPlayer ;
          foaf:name ""Lukas Kübler""@en .
  
  ?player dbp:team ?team .
  ?team dbp:coach ?manager .

  ?manager rdf:type dbo:Athlete, dbo:SportsManager .
}
```",2,5,3,2,1,3,2,20,0,0,3,0,0.0,0
417,1,train,Give me the child of Christian X of Denmark.,SELECT ?result WHERE { ?result <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Christian_X_of_Denmark> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?child ?childLabel
WHERE {
  dbr:Christian_X_of_Denmark dbo:child ?child .
  SERVICE wikibase:label { bd:serviceParam wikibase:language ""[AUTO_LANGUAGE],en"". }
}
```",1,1,2,1,1,3,3,71,0,0,2,0,0.0,0
456,15,train,"Give me the actor of the movie, that is a work and a television show, with Ross Newton.",SELECT ?result WHERE { ?v1 <http://dbpedia.org/property/starring> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/TelevisionShow>. ?v1 <http://dbpedia.org/property/starring> <http://dbpedia.org/resource/Ross_Newton> . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?work WHERE {
  # Identify Ross Newton's DBpedia resource
  VALUES ?rossNewton { dbr:Ross_Newton }

  # Find movies featuring Ross Newton
  ?movie dbo:starring ?rossNewton .
  
  # Find TV shows featuring Ross Newton
  ?tvShow dbo:starring ?rossNewton .

  # Check if the same work is both a movie and a TV show
  VALUES ?workType { dbo:Film dbo:TelevisionSeries }
  ?work rdf:type ?workType .
  FILTER (?movie = ?work || ?tvShow = ?work)
}
```",2,4,3,2,1,3,3,71,0,0,29,0,0.0,0
917,15,train,"Who is the child, that is a royalty, of the mayor of Hawaiian Kingdom?",SELECT ?result WHERE { <http://dbpedia.org/resource/Hawaiian_Kingdom> <http://dbpedia.org/property/leader> ?v1 . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?result <http://dbpedia.org/property/father> ?v1 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?child ?childLabel WHERE {
  ?leader dbo:country dbr:Hawaiian_Kingdom .
  ?leader dbo:spouse ?parent .
  ?parent dbo:child ?child .
  ?child a dbo:Monarch .
  SERVICE wikibase:label { bd:serviceParam wikibase:language ""[AUTO_LANGUAGE],en"". }
}
```",2,3,3,2,1,3,3,71,0,0,8,0,0.0,0
579,7,train,"Give me the native of the residence, that is English and a settlement, of Alan Clyne.",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/birthPlace> ?v1 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. <http://dbpedia.org/resource/Alan_Clyne> <http://dbpedia.org/property/residence> ?v1 . ?v1 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/United_Kingdom>. },"```sparql
SELECT ?nativeName WHERE {
  ?person dbo:birthName ""Alan Clyne""@en .
  ?person dbo:residence ?place .
  ?place a dbo:Settlement ;
         dbo:country dbr:England .
  OPTIONAL { ?place rdfs:label ?nativeLabel FILTER (lang(?nativeLabel) = 'en') }
  BIND(IF(BOUND(?nativeLabel), ?nativeLabel, """") AS ?nativeName)
}
```",2,4,3,2,1,3,2,20,0,0,1711,0,0.0,0
216,20,train,"Give me the player in Igor Bišćan and player in the coach, that is a soccer player and a sports manager and a soccer manager, of Bosnia and Herzegovina national under-18 football team.",SELECT ?result WHERE { ?v2 <http://dbpedia.org/ontology/team> ?result . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerPlayer>. <http://dbpedia.org/resource/Bosnia_and_Herzegovina_national_under-18_football_team> <http://dbpedia.org/ontology/coach> ?v2 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerManager>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsManager>. <http://dbpedia.org/resource/Igor_Bišćan> <http://dbpedia.org/ontology/team> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?player WHERE {
  # Find Igor Bišćan's coaching role
  dbr:Igor_Bišćan dbo:coachTeam dbr:Bosnia_and_Herzegovina_national_under-18_football_team .

  # Identify players under his coaching
  ?player dbo:team dbr:Bosnia_and_Herzegovina_national_under-18_football_team ;
          dbo:coach dbr:Igor_Bišćan .

  # Check if the player is also a sports manager or soccer manager
  OPTIONAL { ?player dbo:occupation dbr:Soccer_manager . }
  OPTIONAL { ?player dbo:occupation dbr:Sports_manager . }

  FILTER EXISTS { ?player dbo:occupation dbr:Soccer_manager . } ||
              EXISTS { ?player dbo:occupation dbr:Sports_manager . }
}
```",3,6,4,2,2,3,3,71,0,0,3,0,0.0,0
216,9,train,Give me the administration of  and party of Campbell Newman.,"SELECT ?result WHERE { <http://dbpedia.org/resource/Campbell_Newman> <http://dbpedia.org/ontology/party> ?result . ?result <http://dbpedia.org/property/leader> """"@en . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?party ?position 
WHERE {
  ?person a dbo:Person ;
          foaf:name ""Campbell Newman""@en .
  
  OPTIONAL { ?person dbo:party ?party . }
  OPTIONAL { ?person dbo:positionHeld ?position . }

  FILTER (lang(?party->rdfs:label) = 'en' && lang(?position->rdfs:label) = 'en')
}
```",2,2,3,1,2,2,3,28,0,0,1,0,0.0,0
445,8,train,Give me the award of George H. Cameron.,SELECT ?result WHERE { <http://dbpedia.org/resource/George_H._Cameron> <http://dbpedia.org/property/awards> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?award WHERE {
  ?person a dbo:Person ;
          foaf:name ""George H. Cameron""@en .
  OPTIONAL { ?person dbo:award ?award . }
}
```",1,1,2,1,1,3,3,71,0,0,5,0,0.0,0
892,21,train,Give me the entity in the profession of Henri Crolla and entity in Province of Reggio Emilia.,SELECT ?result WHERE { <http://dbpedia.org/resource/Henri_Crolla> <http://dbpedia.org/property/occupation> ?v2 . ?result <http://dbpedia.org/ontology/province> <http://dbpedia.org/resource/Province_of_Reggio_Emilia> . ?result <http://dbpedia.org/ontology/country> ?v2 . },"```sparql
# Query for Henri Crolla's profession
SELECT ?profession WHERE {
  ?person dbo:wikiPageID ""Henri_Crolla"" .
  ?person dbo:occupation ?profession .
}

UNION

# Query for an entity in the Province of Reggio Emilia
SELECT ?entity WHERE {
  ?entity geo:hasLocation/geo:location ?place .
  ?place rdfs:label ""Reggio Emilia""@en .
}
```",3,3,4,2,2,3,3,71,0,0,40,0,0.0,0
236,10,train,"Give me the administration of the reference, that is an office holder and a politician, to James Madison.","SELECT ?result WHERE { ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?result <http://dbpedia.org/property/leader> ?v0 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v0 <http://xmlns.com/foaf/0.1/name> ""James Madison""@en . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?administration WHERE {
  dbr:James_Madison dbo:presidentOf ?country .
  ?administration dbo:startDate ?start ;
                  dbo:endDate ?end ;
                  dbo:headOfState dbr:James_Madison .
}
```",2,4,3,2,1,3,2,20,0,0,4,0,0.0,0
465,24,train,"Give me the spouse of the child, that is a royalty, of Ferdinand I, Holy Roman Emperor and successor of Renée of France.","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/spouse> ?v2 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. <http://dbpedia.org/resource/Renée_of_France> <http://dbpedia.org/ontology/successor> ?result . <http://dbpedia.org/resource/Ferdinand_I,_Holy_Roman_Emperor> <http://dbpedia.org/ontology/child> ?v2 . }","```sparql
SELECT ?spouse WHERE {
  wd:Q1198 wdt:P26 ?child . # Ferdinand I's children
  ?child wdt:P31 wd:Q33999 . # Child is royalty (instance of royal title)
  ?child wdt:P26 ?spouseCandidate . # Spouse candidate of the child

  OPTIONAL { ?spouseCandidate wdt:P569 ?dateOfBirth } .
  FILTER EXISTS {
    ?spouseCandidate wdt:P31 wd:Q33999 . # Ensure spouse is royalty
  }

  ?spouseCandidate wdt:P26 wd:Q1198 . # Child of Ferdinand I
  ?spouseCandidate wdt:P27 wd:Q183 . # French nationality (to connect to Renée)

  OPTIONAL { ?spouseCandidate wdt:P734 wd:Q1184 } . # Successor of Renée of France

  ?spouseCandidate wdt:P26 ?spouse . # Spouse of the child
}
```",3,4,4,2,2,3,3,71,0,0,1,0,0.0,0
976,15,train,"Who is the leader, that is a politician, of the administration, that is an organisation, of Kemal Kılıçdaroğlu?",SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/leader> ?result . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?v1 <http://dbpedia.org/property/leader> <http://dbpedia.org/resource/Kemal_Kılıçdaroğlu> . },"```sparql
SELECT ?leader WHERE {
  ?kemal dbr:Kemal_Kılıçdaroğlu .
  ?kemal dbo:positionHeld ?position .
  ?position dbo:organization ?administration .
  
  ?administration dbo:leader ?leader .
  ?leader a dbo:Politician .
}
```",2,4,3,2,1,3,3,71,0,0,5,0,0.0,0
417,38,train,"Give me the child of the child, that is a royalty, of Frederick Francis III, Grand Duke of Mecklenburg-Schwerin and child of the father of Frederick IX of Denmark.","SELECT ?result WHERE { ?v2 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Frederick_Francis_III,_Grand_Duke_of_Mecklenburg-Schwerin> . ?result <http://dbpedia.org/ontology/parent> ?v2 . <http://dbpedia.org/resource/Frederick_IX_of_Denmark> <http://dbpedia.org/property/father> ?v3 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?result <http://dbpedia.org/property/father> ?v3 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?grandchild ?title WHERE {
  # Frederick Francis III's children
  VALUES ?parent { dbr:Frederick_Francis_III,_Grand_Duke_of_Mecklenburg-Schwerin }
  
  ?child dbo:parent ?parent .
  
  # Child of the child (grandchild)
  ?grandchild dbo:parent ?child .
  
  # Check if grandchild is royalty
  OPTIONAL { 
    ?grandchild dbo:title ?title .
    FILTER(CONTAINS(LCASE(?title), ""king"") || CONTAINS(LCASE(?title), ""queen"") ||
           CONTAINS(LCASE(?title), ""prince"") || CONTAINS(LCASE(?title), ""princess""))
  }
  
  # Ensure grandchild is a descendant of Christian X
  ?christianX dbo:parent dbr:Christian_X_of_Denmark .
  ?frederickIX dbo:parent ?christianX .
  VALUES ?frederickIX { dbr:Frederick_IX_of_Denmark }
  
  # Check if grandchild is related to Frederick IX
  ?relation dbo:parent ?grandchild .
  FILTER(?relation = ?frederickIX)
}
```",4,5,5,2,2,3,3,71,0,0,2,0,0.0,0
456,18,train,Give me the spouse of Danielle Spencer (Australian actress) and professional in  and band of Alan Doyle.,"SELECT ?result WHERE { <http://dbpedia.org/resource/Danielle_Spencer_(Australian_actress)> <http://dbpedia.org/ontology/spouse> ?result . <http://dbpedia.org/resource/Alan_Doyle> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?result <http://dbpedia.org/property/occupation> """"@en . }","```sparql
# Query for the spouse of Danielle Spencer (Australian actress)
SELECT ?spouse WHERE {
  ?person a dbo:Actor ;
          foaf:name ""Danielle Spencer""@en .
  OPTIONAL { ?person dbo:spouse ?spouse . }
}
```

```sparql
# Query for the band associated with Alan Doyle
SELECT ?band WHERE {
  ?person a dbo:Musician ;
          foaf:name ""Alan Doyle""@en .
  OPTIONAL { ?person dbo:musicalBand ?band . }
}
```",3,3,4,1,3,3,3,71,0,0,1,0,0.0,0
417,29,train,Give me the spouse of Princess Caroline-Mathilde of Denmark and child of the father of Frederick IX of Denmark and child of Alexandrine of Mecklenburg-Schwerin.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/parent> <http://dbpedia.org/resource/Alexandrine_of_Mecklenburg-Schwerin> . <http://dbpedia.org/resource/Frederick_IX_of_Denmark> <http://dbpedia.org/property/father> ?v3 . ?result <http://dbpedia.org/ontology/spouse> <http://dbpedia.org/resource/Princess_Caroline-Mathilde_of_Denmark> . ?result <http://dbpedia.org/property/father> ?v3 . },"```sparql
SELECT ?spouse WHERE {
  ?princess rdf:type dbo:Person ;
            foaf:name ""Princess Caroline-Mathilde of Denmark""@en .
  ?princess dbo:spouse ?spouse .
  OPTIONAL { ?princess dbo:parent ?father } .
  ?father rdfs:label ""Christian X, King of Denmark""@en .
  ?father dbo:spouse ?mother .
  ?mother rdfs:label ""Alexandrine of Mecklenburg-Schwerin""@en .
}
```",4,4,5,2,3,3,3,71,0,0,1,0,0.0,0
98,9,train,Give me the birth place of Paolo Ballesteros and entity in Philippines.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Philippines> . <http://dbpedia.org/resource/Paolo_Ballesteros> <http://dbpedia.org/ontology/birthPlace> ?result . },"```sparql
SELECT ?birthPlace WHERE {
  ?person foaf:name ""Paolo Ballesteros""@en .
  ?person dbo:birthPlace ?birthPlace .
}

UNION

SELECT ?entity WHERE {
  ?entity rdf:type dbo:City ;
          dbo:country dbr:Philippines .
}
```",2,2,3,1,2,2,3,28,0,0,2,0,0.0,0
465,9,train,"Give me the successor of Ercole II d'Este, Duke of Ferrara and spouse of Archduchess Barbara of Austria.","SELECT ?result WHERE { <http://dbpedia.org/resource/Ercole_II_d'Este,_Duke_of_Ferrara> <http://dbpedia.org/ontology/successor> ?result . ?result <http://dbpedia.org/ontology/spouse> <http://dbpedia.org/resource/Archduchess_Barbara_of_Austria> . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?successor WHERE {
  ?ercole2 dbo:title ""Duke of Ferrara""@en .
  ?ercole2 dbp:succeededBy ?successor .
  FILTER(CONTAINS(LCASE(STR(?ercole2)), ""ercole ii d'este""))
}
```",2,2,3,1,2,3,3,71,0,0,1,0,0.0,0
274,2,train,Give me the associated musical artist of Cecil Taylor.,SELECT ?result WHERE { <http://dbpedia.org/resource/Cecil_Taylor> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?artist WHERE {
  ?cecilTaylor a dbo:Pianist ;
               foaf:name ""Cecil Taylor""@en .
  ?cecilTaylor dbo:associatedMusicalArtist ?artist .
}
```",1,1,2,1,1,2,3,28,0,0,14,0,0.0,0
965,0,train,Give me the spouse of Prince Louis of Battenberg.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/spouse> <http://dbpedia.org/resource/Prince_Louis_of_Battenberg> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?spouse WHERE {
  ?person rdf:type dbo:Person .
  ?person rdfs:label ""Prince Louis of Battenberg""@en .
  OPTIONAL { ?person dbo:spouse ?spouse . }
  FILTER (lang(?spouse) = 'en')
}
```",1,1,2,1,1,3,3,71,0,0,1,0,0.0,0
987,38,train,"Give me the birth place of the actor of All for Free and entity in the region, that is a country, of Central European Time.",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/country> ?v0 . ?v3 <http://dbpedia.org/ontology/birthPlace> ?result . ?v0 <http://dbpedia.org/property/timeZone> <http://dbpedia.org/resource/Central_European_Time> . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. <http://dbpedia.org/resource/All_for_Free> <http://dbpedia.org/property/starring> ?v3 . },"```sparql
# Step 1: Identify the actor from ""All for Free""
SELECT ?actor WHERE {
    ?film dcterms:title ""All for Free""@en .
    ?film dbo:starring ?actor .
}

# Assuming we found an actor, let's say ""ActorName"" (replace with actual name after first query)

# Step 2: Find the birthplace of the identified actor
SELECT ?birthPlace WHERE {
    <http://dbpedia.org/resource/ActorName> foaf:bornIn ?birthPlace .
}

# Assuming we found a birth place, let's say ""BirthPlace"" (replace with actual name after second query)

# Step 3: Find a country in the CET region associated with this birthplace
SELECT DISTINCT ?country WHERE {
    ?birthPlace dbo:locatedWithin ?region .
    ?region geo:longerThan -15.0 ; geo:shorterThan 45.0 . # Approximate longitude range for CET
    ?region dbpedia-owl:country ?country .
    FILTER (lang(?countryLabel) = 'en' && regex(str(?countryLabel), ""Central European Time"", ""i""))
}
```",4,5,5,2,2,3,3,71,0,0,4,0,0.0,0
459,3,train,"Give me the death place, that is a settlement, of Cliff Roquemore.",SELECT ?result WHERE { <http://dbpedia.org/resource/Cliff_Roquemore> <http://dbpedia.org/ontology/deathPlace> ?result . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?deathPlace WHERE {
  ?person foaf:name ""Cliff Roquemore""@en .
  ?person dbo:deathPlace ?deathPlace .
  FILTER (isLiteral(?deathPlace) = false)
  ?deathPlace a dbo:PopulatedPlace .
}
```",1,2,2,1,1,2,3,28,2,1,0,0.6666666666666666,1.0,0.8
465,16,train,"Give me the child, that is a royalty, of the parent of Elizabeth of Austria (1526–1545).",SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Elizabeth_of_Austria_(1526–1545)> . ?v1 <http://dbpedia.org/ontology/child> ?result . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. },"```sparql
SELECT ?child WHERE {
  ?parent dbo:spouse ?spouse .
  ?parent foaf:name ""Ferdinand I of the Holy Roman Empire""@en .
  ?parent dbo:child ?child .
  OPTIONAL { ?child dbo:title ?title . FILTER(CONTAINS(LCASE(?title), ""king"") || CONTAINS(LCASE(?title), ""queen"")) }
}
```",2,3,3,2,1,3,3,71,0,0,11,0,0.0,0
433,25,train,Give me the associated musical artist of Bill Evans and professional in the profession of Bob Marley.,SELECT ?result WHERE { ?result <http://dbpedia.org/property/occupation> ?v1 . <http://dbpedia.org/resource/Bob_Marley> <http://dbpedia.org/property/occupation> ?v1 . <http://dbpedia.org/resource/Bill_Evans> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . },"```sparql
SELECT ?artist WHERE {
  # Find musicians associated with Bill Evans
  ?association dbo:associatedMusicalArtist dbr:Bill_Evans .
  ?association dbo:musicalArtist ?artist .

  # Ensure the artist is also a musician/singer-songwriter like Bob Marley
  ?artist rdf:type dbo:Musician ;
          dbo:profession dbr:Singer-Songwriter .
}
```",3,3,4,2,2,3,3,71,0,0,4,0,0.0,0
888,8,train,Give me the awardee of the award of Oleksandr Syrskyi.,SELECT ?result WHERE { ?result <http://dbpedia.org/property/awards> ?v0 . <http://dbpedia.org/resource/Oleksandr_Syrskyi> <http://dbpedia.org/property/awards> ?v0 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?award ?awardingEntity WHERE {
  VALUES ?person { dbr:Oleksandr_Syrskyi }
  ?person dbo:award ?award .
  OPTIONAL { ?award dbo:awardedBy ?awardingEntity . }
}
```",2,2,3,2,1,3,2,20,0,1,14,0.0,0.0,0
645,6,train,"Give me the force, that is an event and a military conflict and a societal event, of Francisco Largo Caballero.",SELECT ?result WHERE { ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?result <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Francisco_Largo_Caballero> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?force WHERE {
  ?person dbo:primeMinisterOf dbr:Spain .
  ?person rdfs:label ""Francisco Largo Caballero""@en .
  
  ?event dbo:participatedIn ?person ;
         a dbo:MilitaryConflict, dbo:Event, dbo:SocietalEvent .

  BIND(?event AS ?force)
}
```",1,4,2,1,1,3,3,71,0,0,1,0,0.0,0
329,13,train,Give me the entity in United Kingdom and birthplace of the author of The Tailor and Ansty.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/United_Kingdom> . <http://dbpedia.org/resource/The_Tailor_and_Ansty> <http://dbpedia.org/property/author> ?v1 . ?v1 <http://dbpedia.org/ontology/birthPlace> ?result . },"```sparql
SELECT ?author ?birthPlace WHERE {
  ?work dcterms:title ""The Tailor and Ansty""@en .
  ?work dbo:author ?author .
  ?author dbo:birthPlace ?birthPlace .
  ?birthPlace dbo:country dbc:United_Kingdom .
}
```",3,3,4,2,2,2,3,28,0,0,1,0,0.0,0
18,12,train,"Give me the professional in  and alumnus of Marymount College, Tarrytown and parent of Liza Huber.","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Liza_Huber> . ?result <http://dbpedia.org/ontology/almaMater> <http://dbpedia.org/resource/Marymount_College,_Tarrytown> . ?result <http://dbpedia.org/property/occupation> """"@en . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?person WHERE {
  ?person dbo:almaMater dbr:Marymount_College_(Tarrytown,_New_York) .
  ?person dbo:child dbr:Liza_Huber .
}
```",3,3,4,1,3,2,3,28,0,0,1,0,0.0,0
865,13,train,"Give me the father of the child, that is a politician, of Abu Ahmad Abdul Hafiz.",SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v1 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Abu_Ahmad_Abdul_Hafiz> . ?v1 <http://dbpedia.org/property/father> ?result . },"```sparql
# Step 1: Identify Abu Ahmad Abdul Hafiz in DBpedia
SELECT ?person WHERE {
  ?person rdfs:label ""Abu Ahmad Abdul Hafiz""@en .
}

# Step 2 and 3: Find children of Abu Ahmad Abdul Hafiz who are politicians
SELECT DISTINCT ?child ?childLabel WHERE {
  # Assuming we have identified the person URI from step 1, replace <abuAhmadUri> with that URI
  <abuAhmadUri> foaf:child ?child .
  ?child dbo:occupation dbp:Politician .
  SERVICE wikibase:label { bd:serviceParam wikibase:language ""[AUTO_LANGUAGE],en"". }
}

# Step 4: Determine the father of the identified child
SELECT DISTINCT ?father WHERE {
  # Replace <politicianChildUri> with the URI obtained from step 2 and 3
  <politicianChildUri> foaf:parent ?father .
}
```

Note: The placeholders `<abuAhmadUri>` and `<politicianChildUri>` need to be replaced with actual URIs obtained from executing the previous queries.",2,3,3,2,1,3,3,71,0,0,1,0,0.0,0
459,1,train,Give me the governor of Dana Murphy.,SELECT ?result WHERE { <http://dbpedia.org/resource/Dana_Murphy> <http://dbpedia.org/property/governor> ?result . },"```sparql
SELECT ?governor WHERE {
  ?state dbr:Montana .  # Assuming Dana Murphy was governor of Montana
  ?state dbo:stateGovernor ?governor .
}
```",1,1,2,1,1,2,3,28,0,0,3,0,0.0,0
839,9,train,Give me the band of Peter Schorowsky and band of Kevin Russell (musician).,SELECT ?result WHERE { <http://dbpedia.org/resource/Kevin_Russell_(musician)> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?result <http://dbpedia.org/ontology/bandMember> <http://dbpedia.org/resource/Peter_Schorowsky> . },"```sparql
SELECT ?person ?name ?band WHERE {
  VALUES (?person ?name) { 
    (dbr:Peter_Schorowsky ""Peter Schorowsky"") 
    (dbr:Kevin_Russell_(musician) ""Kevin Russell"")
  }
  ?person foaf:name ?name .
  OPTIONAL { ?person dbp:band ?band . }
}
```",2,2,3,1,2,3,3,71,0,0,1,0,0.0,0
5,10,train,"Give me the award of the associated musical artist, that is a band, of Rubén Colón Tarrats.",SELECT ?result WHERE { ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Band>. <http://dbpedia.org/resource/Rubén_Colón_Tarrats> <http://dbpedia.org/ontology/associatedMusicalArtist> ?v0 . ?v0 <http://dbpedia.org/property/awards> ?result . },"```sparql
SELECT ?band ?award WHERE {
  ?person foaf:name ""Rubén Colón Tarrats"" .
  ?person dbo:associatedBand ?band .
  ?band a dbo:MusicalGroup .
  ?band dbo:award ?award .
}
```",2,3,3,2,1,3,2,20,0,0,7,0,0.0,0
507,39,train,Give me the professional in the profession of the person born on 1966-02-18 and director of Entertaining Mr Sloane (film).,"SELECT ?result WHERE { ?result <http://dbpedia.org/property/occupation> ?v1 . ?v0 <http://dbpedia.org/ontology/birthDate> ""1966-02-18""^^<http://www.w3.org/2001/XMLSchema#date> . <http://dbpedia.org/resource/Entertaining_Mr_Sloane_(film)> <http://dbpedia.org/ontology/director> ?result . ?v0 <http://dbpedia.org/property/occupation> ?v1 . }","```sparql
SELECT ?director ?profession WHERE {
  ?film dcterms:title ""Entertaining Mr Sloane""@en .
  ?film dbo:director ?director .
  ?director dbo:birthDate ""1966-02-18""^^xsd:date .
  ?director dbo:occupation ?profession .
}
```",4,4,5,3,2,3,3,71,0,0,1,0,0.0,0
965,11,train,Give me the spouse of the spouse of Princess Victoria of Hesse and by Rhine.,SELECT ?result WHERE { <http://dbpedia.org/resource/Princess_Victoria_of_Hesse_and_by_Rhine> <http://dbpedia.org/ontology/spouse> ?v1 . ?result <http://dbpedia.org/ontology/spouse> ?v1 . },"```sparql
SELECT ?spouseOfSpouseLabel WHERE {
  ?princess rdfs:label ""Princess Victoria of Hesse and by Rhine""@en .
  ?princess dbo:spouse ?husband .
  ?husband dbo:spouse ?spouseOfSpouse .
  FILTER(?spouseOfSpouse != ?princess) # Ensure it's not the original princess
  SERVICE wikibase:label { bd:serviceParam wikibase:language ""[AUTO_LANGUAGE],en"". }
  BIND(STR(?spouseOfSpouseLabel) AS ?result)
}
```",2,2,3,2,1,3,3,71,0,0,1,0,0.0,0
433,19,train,"Give me the associated musical artist of the person born, that is a musical artist and an artist, as Paul Laurence Dunbar Chambers Jr. and associated musical artist of Bill Evans.","SELECT ?result WHERE { <http://dbpedia.org/resource/Bill_Evans> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?v0 <http://dbpedia.org/property/birthName> ""Paul Laurence Dunbar Chambers Jr.""@en . ?v0 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?associatedArtist WHERE {
  # For Paul Chambers
  OPTIONAL {
    VALUES ?person { dbr:Paul_Chambers_(bassist) }
    ?person dbo:musicalArtist ?associatedArtist .
    FILTER NOT EXISTS { ?associatedArtist rdfs:label ""Paul Chambers"" . }
  }

  UNION

  # For Bill Evans
  OPTIONAL {
    VALUES ?person { dbr:Bill_Evans_(pianist) }
    ?person dbo:musicalArtist ?associatedArtist .
    FILTER NOT EXISTS { ?associatedArtist rdfs:label ""Bill Evans"" . }
  }
}
```",3,5,4,2,2,3,3,71,0,0,2,0,0.0,0
98,6,train,Give me the birth place of Paolo Ballesteros and region of Philippine Standard Time.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/timeZone> <http://dbpedia.org/resource/Philippine_Standard_Time> . <http://dbpedia.org/resource/Paolo_Ballesteros> <http://dbpedia.org/ontology/birthPlace> ?result . },"```sparql
SELECT ?birthPlaceLabel ?regionLabel WHERE {
  # Query for Paolo Ballesteros's birthplace
  wd:Q1234568 dbo:birthPlace ?birthPlace .
  
  # Get the label for the birthplace
  SERVICE wikibase:label { bd:serviceParam wikibase:language ""en"". }
  
  # Query for the region associated with Philippine Standard Time
  wd:Q7890123 wdt:P131 ?region .
  
  # Get the label for the region
  SERVICE wikibase:label { bd:serviceParam wikibase:language ""en"". }
}
```

Note: Replace `wd:Q1234568` with the actual DBpedia identifier for Paolo Ballesteros and `wd:Q7890123` with the identifier for Philippine Standard Time.",2,2,3,1,2,2,3,28,0,0,2,0,0.0,0
267,0,train,Give me the coach of Iran national football team.,SELECT ?result WHERE { <http://dbpedia.org/resource/Iran_national_football_team> <http://dbpedia.org/ontology/coach> ?result . },"```sparql
SELECT ?coach WHERE {
  ?team dbo:officialName ""Iran national football team""@en .
  ?team dbo:coach ?coach .
}
```",1,1,2,1,1,3,2,20,0,0,1,0,0.0,0
166,14,train,"Give me the entity in the territory administered, that is a country, from the reference to Madrid.","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/country> ?v0 . ?v0 <http://dbpedia.org/ontology/capital> ?v2 . ?v2 <http://xmlns.com/foaf/0.1/name> ""Madrid""@en . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. }","```sparql
SELECT ?country WHERE {
  ?city dbo:capital ?country .
  ?city rdfs:label ""Madrid""@en .
}
```",3,4,4,3,1,3,2,20,0,0,12023,0,0.0,0
443,0,train,Give me the landmark at elevation of 28.,"SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/elevation> ""28""^^<http://www.w3.org/2001/XMLSchema#integer> . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?landmark ?name WHERE {
    ?landmark a dbo:Landmark .
    ?landmark dbo:elevation ?elevation .
    FILTER (?elevation = ""28""^^xsd:decimal) .
    OPTIONAL { ?landmark rdfs:label ?name . FILTER (lang(?name) = 'en') }
}
```",1,1,2,1,1,2,3,28,0,0,349,0,0.0,0
791,7,train,"Give me the father, that is a royalty and an office holder, of Emperor Antoku.",SELECT ?result WHERE { ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. <http://dbpedia.org/resource/Emperor_Antoku> <http://dbpedia.org/property/father> ?result . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?father WHERE {
  ?emperor dbo:father ?father .
  ?emperor rdfs:label ""Emperor Antoku""@en .
  FILTER(CONTAINS(LCASE(?father), ""taira no kiyomori""))
}
```",1,3,2,1,1,3,3,71,0,0,1,0,0.0,0
495,13,train,Give me the child of the father of the parent of Princess Catherine of Württemberg.,SELECT ?result WHERE { ?v0 <http://dbpedia.org/property/father> ?v1 . ?result <http://dbpedia.org/property/father> ?v1 . ?v0 <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Princess_Catherine_of_Württemberg> . },"```sparql
SELECT ?child WHERE {
  ?princess rdf:type dbo:Person ;
            foaf:name ""Princess Catherine of Württemberg""@en .
  
  ?parent dbo:child ?princess .

  ?father dbo:spouse ?parent ;
          a dbo:Man ;
          dbo:child ?grandparent .

  ?grandparent dbo:child ?child .
}
```",3,3,4,3,1,3,2,20,0,0,8,0,0.0,0
926,14,train,"Give me the child of the father, that is a royalty, of Mustafa III.",SELECT ?result WHERE { ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v0 <http://dbpedia.org/ontology/child> ?result . <http://dbpedia.org/resource/Mustafa_III> <http://dbpedia.org/property/father> ?v0 . },"```sparql
SELECT ?child WHERE {
  ?mustafa3 rdf:type dbo:OttomanSultan .
  ?mustafa3 foaf:name ""Mustafa III""@en .
  ?mustafa3 dbo:father ?father .

  OPTIONAL { 
    ?father dbo:child ?child .
    ?child rdf:type dbo:OttomanSultan .
  }
}
```",2,3,3,2,1,3,3,71,0,0,11,0,0.0,0
236,6,train,Give me the party member of Democratic-Republican Party and party member of Federalist Party.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/party> <http://dbpedia.org/resource/Federalist_Party> . ?result <http://dbpedia.org/ontology/party> <http://dbpedia.org/resource/Democratic-Republican_Party> . },"```sparql
SELECT ?person ?firstName ?lastName WHERE {
  ?person dbo:partyMemberOf dbr:Democratic-Republican_Party .
  ?person dbo:partyMemberOf dbr:Federalist_Party .
  OPTIONAL { ?person foaf:name ?fullName . }
  BIND(SUBSTR(?fullName, 1, STRLEN(?fullName) - STRLEN(REPLACE(?fullName, "" "", """"))) AS ?firstName)
  BIND(SUBSTR(REPLACE(?fullName, CONCAT(?firstName, "" ""), """"), 1, STRLEN(REPLACE(?fullName, CONCAT(?firstName, "" ""), """")) - STRLEN(REPLACE(REPLACE(?fullName, CONCAT(?firstName, "" ""), """"), "" "", """"))) AS ?lastName)
}
```",2,2,3,1,2,3,2,20,0,0,18,0,0.0,0
98,6,train,Give me the child of the child of Emperor Toba.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/parent> ?v0 . <http://dbpedia.org/resource/Emperor_Toba> <http://dbpedia.org/ontology/child> ?v0 . },"```sparql
SELECT ?grandchild WHERE {
  ?emperorToba dbo:wikiPageID ""Emperor_Toba"" .
  ?emperorToba dbo:child ?child .
  ?child dbo:child ?grandchild .
}
```",2,2,3,2,1,2,2,9,0,0,3,0,0.0,0
965,36,train,"Give me the parent of the person born, that is a noble, as the birth name of George Mountbatten, 2nd Marquess of Milford Haven and spouse of Prince Louis of Battenberg.","SELECT ?result WHERE { ?v0 <http://dbpedia.org/ontology/parent> ?result . <http://dbpedia.org/resource/George_Mountbatten,_2nd_Marquess_of_Milford_Haven> <http://dbpedia.org/property/birthName> ?v3 . ?v0 <http://dbpedia.org/property/birthName> ?v3 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Noble>. ?result <http://dbpedia.org/ontology/spouse> <http://dbpedia.org/resource/Prince_Louis_of_Battenberg> . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?parent WHERE {
  # Identify George Mountbatten, 2nd Marquess of Milford Haven
  dbr:George_Mountbatten,_2nd_Marquess_of_Milford_Haven dbo:birthName ?birthName .
  
  # Confirm his spouse is Prince Louis of Battenberg
  OPTIONAL { 
    dbr:Prince_Louis_of_Battenberg dbo:spouse dbr:George_Mountbatten,_2nd_Marquess_of_Milford_Haven .
  }
  
  # Find the parent who is a noble
  ?parent dbo:child dbr:George_Mountbatten,_2nd_Marquess_of_Milford_Haven ;
          dbo:nationality ?nationality .
  
  FILTER EXISTS { ?parent dbo:title ?title . FILTER regex(?title, ""Noble"", ""i"") }
}
```",4,5,5,3,2,3,3,71,0,0,1,0,0.0,0
965,7,train,"Give me the birth name of George Mountbatten, 2nd Marquess of Milford Haven.","SELECT ?result WHERE { <http://dbpedia.org/resource/George_Mountbatten,_2nd_Marquess_of_Milford_Haven> <http://dbpedia.org/property/birthName> ?result . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?birthName WHERE {
  dbr:George_Mountbatten,_2nd_Marquess_of_Milford_Haven dbo:birthName ?birthName .
}
```",1,1,2,1,1,3,3,71,0,0,1,0,0.0,0
417,31,train,"Give me the spouse of the parent, that is a royalty, of the child of Knud, Hereditary Prince of Denmark and child of Christian X of Denmark.","SELECT ?result WHERE { ?v0 <http://dbpedia.org/ontology/child> ?v1 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?result <http://dbpedia.org/ontology/spouse> ?v0 . ?result <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Christian_X_of_Denmark> . ?v1 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Knud,_Hereditary_Prince_of_Denmark> . }","```sparql
SELECT ?spouse WHERE {
  ?margrethe2 a dbo:Monarch ;
              foaf:surname ""Denmark"" ;
              dbo:father ?frederickIX .
  ?frederickIX a dbo:Person ;
               foaf:name ""Frederik IX""@en ;
               dbo:childOf ?christianX .
  ?christianX a dbo:Person ;
              foaf:name ""Christian X""@en .
  ?margrethe2 dbo:spouse ?henrik .
  ?henrik foaf:name ""Henrik, Prince Consort of Denmark""@en .
}
```",4,5,5,3,2,3,3,71,0,0,1,0,0.0,0
926,21,train,Give me the father of the father of Abdulaziz and child of Ahmed III.,SELECT ?result WHERE { <http://dbpedia.org/resource/Ahmed_III> <http://dbpedia.org/ontology/child> ?result . <http://dbpedia.org/resource/Abdulaziz> <http://dbpedia.org/property/father> ?v2 . ?v2 <http://dbpedia.org/property/father> ?result . },"```sparql
SELECT ?grandfather ?childOfAhmedIII WHERE {
  # Abdulaziz's grandfather
  ?abdulaziz dbo:father ?fatherAbdulaziz .
  ?fatherAbdulaziz dbo:father ?grandfather .
  VALUES ?abdulaziz { dbr:Abdulaziz_Al_Saud }

  # Child of Ahmed III
  ?ahmedIII dbo:child ?childOfAhmedIII .
  VALUES ?ahmedIII { dbr:Aḥmad_III }
}
```",3,3,4,2,2,3,3,71,0,0,1,0,0.0,0
926,25,train,"Give me the child of the father, that is a royalty, of Mustafa III and successor of Mustafa III.",SELECT ?result WHERE { ?v0 <http://dbpedia.org/ontology/child> ?result . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. <http://dbpedia.org/resource/Mustafa_III> <http://dbpedia.org/property/father> ?v0 . <http://dbpedia.org/resource/Mustafa_III> <http://dbpedia.org/ontology/successor> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?successor WHERE {
  ?mustafaIII a dbo:Sultan ;
              dbp:father ?father .
  ?father a dbo:Sultan ;
          dbp:child ?successor .
  FILTER (?mustafaIII = dbpedia:Mustafa_III)
}
```",3,4,4,2,2,3,3,71,0,0,1,0,0.0,0
433,24,train,"Give me the professional in Musician and associated musical artist of the associated musical artist, that is an artist and a musical artist, of Scott LaFaro.","SELECT ?result WHERE { <http://dbpedia.org/resource/Scott_LaFaro> <http://dbpedia.org/ontology/associatedMusicalArtist> ?v2 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. ?v2 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?result <http://dbpedia.org/property/occupation> ""Musician""@en . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>

SELECT DISTINCT ?professionalInMusician ?associatedArtist
WHERE {
  # Step 1: Identify Scott LaFaro's associated musical artists
  ?scottLaFaro a dbo:MusicalArtist ;
               foaf:name ""Scott LaFaro"" .

  ?scottLaFaro dbo:associatedMusicalArtist ?artist1 .
  
  # Step 2: Ensure the artist is both an artist and a musical artist
  ?artist1 a dbo:Artist ;
           a dbo:MusicalArtist .

  # Step 3: Find associated musical artists of these filtered artists
  ?artist1 dbo:associatedMusicalArtist ?professionalInMusician .
  
  # Optional: Retrieve the name or identifier for clarity
  OPTIONAL { ?professionalInMusician foaf:name ?associatedArtist . }
}
```",3,5,4,2,2,3,3,71,0,0,3,0,0.0,0
5,13,train,"Give me the birthplace of the person born, that is a politician, as the award of Renata Adler.",SELECT ?result WHERE { <http://dbpedia.org/resource/Renata_Adler> <http://dbpedia.org/property/awards> ?v1 . ?v0 <http://dbpedia.org/ontology/birthPlace> ?result . ?v0 <http://dbpedia.org/property/birthName> ?v1 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. },"```sparql
# Step 1: Find the award received by Renata Adler
SELECT ?award WHERE {
    wd:Q123456 rdfs:label ""Renata Adler""@en .
    ?award dbo:recipient wd:Q123456 ;
           dbp:name ?awardName .
}

# Assuming we found an award, let's say it is located in a city called ""AwardCity""

# Step 2: Find politicians born in the same place as Renata Adler's award
SELECT DISTINCT ?politician ?birthPlace WHERE {
    ?politician dbo:occupation wd:Q82955 ; # Q82955 is the DBpedia ID for politician
                 dbo:birthPlace ?birthPlace .
    FILTER (?birthPlace = wd:Q789012) # Replace with the actual city or place ID of ""AwardCity""
}
```

Note: The above query assumes that we have identified the award and its location. You would need to replace `wd:Q123456` with Renata Adler's DBpedia ID, `?awardName` with the specific award name if needed for further filtering, and `wd:Q789012` with the actual DBpedia resource identifier of the city or place where the award is associated.",3,4,4,3,1,3,2,20,0,0,222,0,0.0,0
417,18,train,Give me the spouse of Princess Caroline-Mathilde of Denmark and child of Alexandrine of Mecklenburg-Schwerin and child of Christian X of Denmark.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/spouse> <http://dbpedia.org/resource/Princess_Caroline-Mathilde_of_Denmark> . ?result <http://dbpedia.org/ontology/parent> <http://dbpedia.org/resource/Alexandrine_of_Mecklenburg-Schwerin> . ?result <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Christian_X_of_Denmark> . },"```sparql
SELECT ?spouse WHERE {
  wd:Q123456 dbo:spouse ?spouse .
}
```

Note: `wd:Q123456` should be replaced with the actual DBpedia resource identifier for Princess Caroline-Mathilde of Denmark. You can find this identifier by searching DBpedia or using a SPARQL endpoint to query for her entity.",3,3,4,1,3,3,3,71,0,0,1,0,0.0,0
102,10,train,"Give me the residence, that is English and a settlement, of the resident, that is an athlete, of Dewsbury.",SELECT ?result WHERE { ?v0 <http://dbpedia.org/property/residence> ?result . ?result <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/United_Kingdom>. ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. ?v0 <http://dbpedia.org/ontology/residence> <http://dbpedia.org/resource/Dewsbury> . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Athlete>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?athlete ?residence WHERE {
  ?athlete a dbo:Athlete ;
           dbo:birthPlace ?placeOfBirth .
  
  OPTIONAL { ?athlete dbo:residence ?residence . }
  
  FILTER (CONTAINS(LCASE(STR(?placeOfBirth)), ""dewsbury"") || CONTAINS(LCASE(STR(?residence)), ""dewsbury""))
  
  ?residence a dbo:Settlement ;
             dbo:country dbr:England .
}
```",2,5,3,2,1,3,2,20,0,0,1,0,0.0,0
281,12,train,Give me the awardee of Volunteer Decoration and commander in New Guinea campaign and awardee of Medal bar.,SELECT ?result WHERE { <http://dbpedia.org/resource/New_Guinea_campaign> <http://dbpedia.org/ontology/commander> ?result . ?result <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/Medal_bar> . ?result <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/Volunteer_Decoration> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?person WHERE {
  ?person dbo:award [ 
    a dbo:Award ;
    dbo:name ""Volunteer Decoration"" .
  ] .
  
  OPTIONAL { 
    ?person dbo:award [
      a dbo:Award ;
      dbo:name ?medalName ;
      dbo:campaign dbr:New_Guinea_campaign
    ] .
  }
  
  FILTER EXISTS {
    ?person dbo:award [ 
      a dbo:Award ;
      dbo:hasPart ?bar .
    ]
  }
}
```",3,3,4,1,3,2,3,28,0,0,1,0,0.0,0
83,9,train,"Give me the birthplace, that is a town and Brazilian and a soccer club, of the member, that is a sports manager, of Kedah FA.",SELECT ?result WHERE { ?v0 <http://dbpedia.org/ontology/team> <http://dbpedia.org/resource/Kedah_FA> . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsManager>. ?result <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Brazil>. ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Town>. ?v0 <http://dbpedia.org/ontology/birthPlace> ?result . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerClub>. },"```sparql
SELECT DISTINCT ?town ?soccerClub WHERE {
  # Find members who are sports managers at Kedah FA
  ?person dbo:position dbr:Kedah_FA#Sports_Manager ;
          foaf:birthPlace ?place .

  # Ensure the birthplace is a town in Brazil
  ?place rdf:type dbo:Town ;
         dbo:country dbr:Brazil .

  # Check if there's a soccer club in this town
  ?soccerClub dbo:location ?place ;
              rdf:type dbo:Soccer_Club .
}
```",2,6,3,2,1,3,2,20,0,0,1,0,0.0,0
826,9,train,"Give me the successor of Louis II, Grand Duke of Hesse and spouse of Anna Magdalena Appel.","SELECT ?result WHERE { <http://dbpedia.org/resource/Anna_Magdalena_Appel> <http://dbpedia.org/ontology/spouse> ?result . <http://dbpedia.org/resource/Louis_II,_Grand_Duke_of_Hesse> <http://dbpedia.org/ontology/successor> ?result . }","```sparql
SELECT ?successor WHERE {
  ?grandDuke dbr:Louis_II,_Grand_Duke_of_Hesse dbo:successor ?successor .
  FILTER (str(?successor) = ""Ludwig_III,_Grand_Duke_of_Hesse"")
}
```",2,2,3,1,2,3,3,71,0,0,1,0,0.0,0
281,4,train,"Give me the award, that is a military conflict, of Lawrence Moore Cosgrave.",SELECT ?result WHERE { <http://dbpedia.org/resource/Lawrence_Moore_Cosgrave> <http://dbpedia.org/property/awards> ?result . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?award WHERE {
  ?cosgrave a dbo:Person ;
            foaf:name ""Lawrence Moore Cosgrave""@en .
  ?cosgrave dbo:award ?award .
  OPTIONAL { 
    ?award dbo:wikiPageRedirects ?redirect .
    ?redirect rdfs:label ?conflictLabel .
    FILTER(CONTAINS(LCASE(?conflictLabel), ""military conflict""))
  }
}
```",1,2,2,1,1,2,3,28,0,2,1,0.0,0.0,0
987,5,train,"Give me the show, that is a film, with Emir Hadžihafizbegović.",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/starring> <http://dbpedia.org/resource/Emir_Hadžihafizbegović> . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Film>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?film WHERE {
  ?film a dbo:Film .
  ?film dbo:starring dbr:Emir_Hadžihafizbegović .
}
```",1,2,2,1,1,3,3,71,15,0,0,1.0,1.0,1.0
965,17,train,"Give me the person born, that is a noble, as the birth name of George Mountbatten, 2nd Marquess of Milford Haven.","SELECT ?result WHERE { <http://dbpedia.org/resource/George_Mountbatten,_2nd_Marquess_of_Milford_Haven> <http://dbpedia.org/property/birthName> ?v0 . ?result <http://dbpedia.org/property/birthName> ?v0 . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Noble>. }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?birthName WHERE {
  ?person rdfs:label ""George Mountbatten, 2nd Marquess of Milford Haven""@en .
  ?person dbo:birthName ?birthName .
  OPTIONAL { ?person a dbo:Noble . }
  FILTER (LANG(?person) = 'en')
}
```",2,3,3,2,1,3,3,71,0,0,1,0,0.0,0
773,21,train,Give me the spouse of the father of Charles the Fat and parent of Charles the Fat.,SELECT ?result WHERE { <http://dbpedia.org/resource/Charles_the_Fat> <http://dbpedia.org/property/father> ?v1 . ?v1 <http://dbpedia.org/ontology/spouse> ?result . <http://dbpedia.org/resource/Charles_the_Fat> <http://dbpedia.org/ontology/parent> ?result . },"```sparql
SELECT ?spouse WHERE {
  wd:Q1234 wdt:P22 ?father . # Charles the Fat (Q1234) and his father
  ?father wdt:P26 ?spouse .  # The spouse of his father
}
```

Note: `wd:Q1234` should be replaced with the actual DBpedia entity ID for Charles the Fat if it differs.",3,3,4,2,2,3,3,71,0,0,1,0,0.0,0
839,3,train,Give me the persona of Kevin Russell (musician).,SELECT ?result WHERE { <http://dbpedia.org/resource/Kevin_Russell_(musician)> <http://xmlns.com/foaf/0.1/givenName> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?property ?value WHERE {
  VALUES ?subject { dbr:Kevin_Russell_(musician) }
  
  ?subject ?property ?value .
  
  FILTER (
    ?property IN (dbo:genre, dbo:associatedBand, dbo:album, dbo:notableWork)
  )
}
```",1,1,2,1,1,3,3,71,0,0,1,0,0.0,0
281,14,train,"Give me the awardee of the award, that is a military conflict, of Lawrence Moore Cosgrave and commander in New Guinea campaign.",SELECT ?result WHERE { ?result <http://dbpedia.org/property/awards> ?v2 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. <http://dbpedia.org/resource/Lawrence_Moore_Cosgrave> <http://dbpedia.org/property/awards> ?v2 . <http://dbpedia.org/resource/New_Guinea_campaign> <http://dbpedia.org/ontology/commander> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?awardee ?award ?role WHERE {
  ?person dbo:givenName ""Lawrence"" .
  ?person dbo:familyName ""Moore Cosgrave"" .
  ?person dbo:occupation dbr:Commander .
  ?person dbo:birthPlace dbr:Australia .
  ?person dbo:deathPlace dbr:Australia .
  ?person dbo:awardReceived ?award .
  ?award dbo:name ""Victoria Cross"" .
  ?person dbo:roleInMilitaryConflict ?role .
  ?role dbo:campaign dbr:New_Guinea_campaign_(1942%E2%80%931945) .
  
  BIND(?person AS ?awardee)
}
```",3,4,4,2,2,2,3,28,0,0,1,0,0.0,0
926,11,train,Give me the father of the father of Abdulaziz.,SELECT ?result WHERE { <http://dbpedia.org/resource/Abdulaziz> <http://dbpedia.org/property/father> ?v1 . ?v1 <http://dbpedia.org/property/father> ?result . },"```sparql
SELECT ?grandfather WHERE {
  ?abdulaziz dbo:parent ?father .
  ?father dbo:parent ?grandfather .
  FILTER (str(?abdulaziz) = ""Abdulaziz bin Abdul Rahman Al Saud"")
}
```",2,2,3,2,1,3,3,71,0,0,1,0,0.0,0
826,28,train,"Give me the spouse of the child of Johann Heinrich Appel and predecessor of Louis IV, Grand Duke of Hesse and successor of Louis II, Grand Duke of Hesse.","SELECT ?result WHERE { ?v1 <http://dbpedia.org/property/father> ""Johann Heinrich Appel""@en . ?v1 <http://dbpedia.org/ontology/spouse> ?result . ?result <http://dbpedia.org/ontology/successor> <http://dbpedia.org/resource/Louis_IV,_Grand_Duke_of_Hesse> . <http://dbpedia.org/resource/Louis_II,_Grand_Duke_of_Hesse> <http://dbpedia.org/ontology/successor> ?result . }","```sparql
SELECT ?spouse WHERE {
  wd:Q1234567 wdt:P26 ?spouse .
}
```

In this query:
- `wd:Q1234567` should be replaced with the actual DBpedia resource identifier for Louis III, Grand Duke of Hesse. You would need to look up or verify this ID in DBpedia.",4,4,5,2,3,3,3,71,0,0,1,0,0.0,0
365,8,train,"Give me the spouse of the native, that is a politician, of Poltava Governorate.",SELECT ?result WHERE { ?v0 <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Poltava_Governorate> . ?v0 <http://dbpedia.org/ontology/spouse> ?result . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. },"```sparql
SELECT ?spouse WHERE {
  ?person foaf:name ""Volodymyr Zelensky""@en .
  ?person dbo:birthPlace dbr:Poltava_Oblast .
  ?person dbo:spouse ?spouse .
}
```",2,3,3,2,1,3,2,20,0,0,3,0,0.0,0
