id,subid,split,question,sparql,generated_sparql,num_edges,num_edges_full,num_nodes,depth,breadth,base_depth,base_breadth,subgraphs,TP,FP,FN,Precision,Recall,F1
465,68,test,"Give me the successor of the child, that is a royalty, of Anne of Brittany and successor of the child of the parent of Ercole II d'Este, Duke of Ferrara and spouse of the child, that is a royalty, of the parent of Elizabeth of Austria (1526–1545).","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/spouse> ?v7 . <http://dbpedia.org/resource/Anne_of_Brittany> <http://dbpedia.org/ontology/child> ?v3 . <http://dbpedia.org/resource/Ercole_II_d'Este,_Duke_of_Ferrara> <http://dbpedia.org/ontology/parent> ?v5 . ?v0 <http://dbpedia.org/ontology/child> ?v7 . ?v3 <http://dbpedia.org/ontology/successor> ?result . ?v4 <http://dbpedia.org/property/father> ?v5 . ?v0 <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Elizabeth_of_Austria_(1526–1545)> . ?v7 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v4 <http://dbpedia.org/ontology/successor> ?result . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. }","```sparql
SELECT ?successor WHERE {
  # Anne of Brittany's child (Claude of France)
  ?anne dcterms:child ?claude .
  FILTER(?anne = dbpedia:Anne_of_Brittany) .

  # Successor of Claude of France (Henry II of France)
  ?claude dbo:succesor ?henry2 .
  
  # Ercole II d'Este's parent
  ?ercole2 dbo:parent ?alfonso1 .
  FILTER(?ercole2 = dbpedia:Ercole_II_d%27Este) .

  # Spouse of Ercole II d'Este (Renée of France)
  ?ercole2 dbo:spouse ?renee .
  
  # Parent of Elizabeth of Austria
  ?elizabethParent dbo:child ?charlesV .
  FILTER(?elizabethParent = dbpedia:Ferdinand_I,_Holy_Roman_Emperor) .

  # Spouse of Charles V (Isabella of Portugal)
  ?charlesV dbo:spouse ?isabella .
  
  # Successor of Renée of France (Hercule François, Duke of Anjou)
  ?renee dbo:succesor ?herculeFrancois .
  FILTER(?herculeFrancois = dbpedia:Hercule_François,_Duke_of_Anjou) .

  # Final successor
  BIND(?herculeFrancois AS ?successor)
}
```",8,10,9,3,3,3,3,71,0,0,1,0,0.0,0
417,64,test,"Give me the child of Christian X of Denmark and spouse of the parent, that is a royalty, of the child of Knud, Hereditary Prince of Denmark and child of the child, that is a royalty, of the parent, that is a royalty, of Alexandrine of Mecklenburg-Schwerin.","SELECT ?result WHERE { ?v1 <http://dbpedia.org/property/father> ?v0 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. <http://dbpedia.org/resource/Alexandrine_of_Mecklenburg-Schwerin> <http://dbpedia.org/ontology/parent> ?v0 . ?result <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Christian_X_of_Denmark> . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?result <http://dbpedia.org/ontology/spouse> ?v2 . ?result <http://dbpedia.org/ontology/parent> ?v1 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v2 <http://dbpedia.org/ontology/child> ?v3 . ?v3 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Knud,_Hereditary_Prince_of_Denmark> . }","```sparql
SELECT DISTINCT ?result WHERE {
  # Step 1: Christian X's child who is royalty
  ?christianX dbo:child ?childChristianX .
  FILTER (strstarts(str(?childChristianX), ""http://dbpedia.org/resource/"") && 
          ?childChristianX rdf:type dbo:Monarch) .

  # Step 2: Spouse of Christian IX (parent of Christian X)
  ?christianIX dbo:spouse ?spouseChristianIX .
  FILTER (?spouseChristianIX rdf:type dbo:Monarch) .

  # Step 3: Knud's child who is royalty
  ?knud dbo:child ?childKnud .
  FILTER (strstarts(str(?childKnud), ""http://dbpedia.org/resource/"") && 
          ?childKnud rdf:type dbo:Monarch) .

  # Step 4: Child of the royal child from step 3
  ?childKnud dbo:child ?grandChildKnud .
  FILTER (?grandChildKnud rdf:type dbo:Monarch) .

  # Step 5: Parent who is royalty for the grandchild from step 4
  ?parentGrandChildKnud dbo:child ?grandChildKnud .
  FILTER (?parentGrandChildKnud rdf:type dbo:Monarch) .

  # Step 6: Alexandrine's parent who is royalty
  ?alexandrineParent dbo:child dbr:Alexandrine_of_Mecklenburg-Schwerin .
  FILTER (?alexandrineParent rdf:type dbo:Monarch) .

  # Step 7: Child of the royal parent from step 6
  ?alexandrineParent dbo:child ?childAlexandrineParent .
  FILTER (?childAlexandrineParent rdf:type dbo:Monarch) .

  # Final connection: Find the intersection or specific relationship
  ?result = ?spouseChristianIX ;
           = ?parentGrandChildKnud ;
           = ?childAlexandrineParent .
}
```",7,10,8,3,3,3,3,71,0,0,1,0,0.0,0
917,67,test,"Give me the child of the father of the child, that is a royalty, of Kamehameha III and parent of Albert Kamehameha and child of the father of the spouse, that is a royalty, of Leleiohoku I.",SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/spouse> <http://dbpedia.org/resource/Leleiohoku_I> . ?v1 <http://dbpedia.org/property/father> ?v5 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?result <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Albert_Kamehameha> . ?result <http://dbpedia.org/property/father> ?v0 . <http://dbpedia.org/resource/Kamehameha_III> <http://dbpedia.org/ontology/child> ?v4 . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v4 <http://dbpedia.org/property/father> ?v0 . ?result <http://dbpedia.org/ontology/parent> ?v5 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?person WHERE {
  # Kamehameha III's child who is royalty
  ?child dbo:parent dbr:Kamehameha_III ;
         a dbo:Monarch .

  # Parent of Albert Kamehameha
  ?parent dbo:child dbr:Albert_Kamehameha .

  # Leleiohoku I's spouse who is royalty
  ?spouse dbo:spouse dbr:Leleiohoku_I ;
          a dbo:Monarch .

  # Father of Leleiohoku I's royal spouse
  ?father dbo:child ?spouse .

  # Combine conditions to find the common person
  FILTER (?child = ?parent && ?child = ?father)
}
```",7,9,8,3,3,3,3,71,0,0,1,0,0.0,0
5,18,test,"Give me the entity in the award of Coro de la Pontificia Universidad Católica de Puerto Rico and birthplace of the person born, that is a politician, as the award of Renata Adler.",SELECT ?result WHERE { ?v3 <http://dbpedia.org/property/birthName> ?v2 . ?result <http://dbpedia.org/ontology/country> ?v0 . <http://dbpedia.org/resource/Coro_de_la_Pontificia_Universidad_Católica_de_Puerto_Rico> <http://dbpedia.org/property/awards> ?v0 . <http://dbpedia.org/resource/Renata_Adler> <http://dbpedia.org/property/awards> ?v2 . ?v3 <http://dbpedia.org/ontology/birthPlace> ?result . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. },"```sparql
# Step 1: Find the award ""Coro de la Pontificia Universidad Católica de Puerto Rico"" and its recipients
SELECT ?recipient WHERE {
  ?award dcterms:title ""Coro de la Pontificia Universidad Católica de Puerto Rico""@es .
  ?award dbo:recipient ?recipient .
}

# Step 2: For each recipient, find their birthplace
SELECT DISTINCT ?birthPlace WHERE {
  ?recipient dbo:birthPlace ?birthPlace .
}

# Step 3: Find politicians born in those locations
SELECT DISTINCT ?politician WHERE {
  ?politician a dbo:Politician ;
             dbo:birthPlace ?birthPlace .
}

# Step 4: Identify awards related to Renata Adler and find corresponding entities
SELECT DISTINCT ?awardEntity WHERE {
  ?award dcterms:title ?title .
  FILTER(CONTAINS(LCASE(?title), ""renata adler""))
  ?award dbo:recipient ?awardEntity .
}
```",5,6,6,3,2,3,2,20,0,0,2,0,0.0,0
459,26,test,"Give me the governor of the death place, that is a settlement, of Cliff Roquemore and governor of Dana Murphy and person born as the birth name of Kevin Stitt.",SELECT ?result WHERE { ?v1 <http://dbpedia.org/property/governor> ?result . <http://dbpedia.org/resource/Dana_Murphy> <http://dbpedia.org/property/governor> ?result . ?result <http://dbpedia.org/property/birthName> ?v2 . <http://dbpedia.org/resource/Kevin_Stitt> <http://dbpedia.org/property/birthName> ?v2 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. <http://dbpedia.org/resource/Cliff_Roquemore> <http://dbpedia.org/ontology/deathPlace> ?v1 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT DISTINCT ?governor WHERE {
  # Cliff Roquemore's death place
  ?cliffRoquemore dbo:deathPlace ?deathPlace .
  FILTER (strstarts(str(?deathPlace), ""http://dbpedia.org/resource/"") && 
          EXISTS { ?deathPlace a dbo:Settlement } )

  # Governor of the settlement where Cliff Roquemore died
  ?deathPlace dbp:governor ?governor .

  # Dana Murphy's governor
  ?danaMurphy dbo:residence ?danasResidence .
  ?danasResidence dbp:governor ?danasGovernor .

  # Kevin Stitt's birth name
  ?kevinStitt dbp:birthName ?birthName .
  
  FILTER (?governor = ?danasGovernor || ?governor = ?kevinStitt)
}
```",5,6,6,2,3,2,3,28,1,38,0,0.02564102564102564,1.0,0.05
329,27,test,"Give me the entity in the birthplace, that is an organisation and a country, of Robert Bates (loyalist) and entity in the region, that is a country, of Western European Time and birthplace of Eric Cross (writer).",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/country> ?v0 . <http://dbpedia.org/resource/Robert_Bates_(loyalist)> <http://dbpedia.org/ontology/birthPlace> ?v0 . <http://dbpedia.org/resource/Eric_Cross_(writer)> <http://dbpedia.org/ontology/birthPlace> ?result . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. ?result <http://dbpedia.org/ontology/country> ?v3 . ?v3 <http://dbpedia.org/property/timeZone> <http://dbpedia.org/resource/Western_European_Time> . },"```sparql
# Query for Robert Bates (loyalist)
SELECT ?entity WHERE {
  ?bates dbo:birthPlace ?birthPlace .
  FILTER(STRSTARTS(LCASE(?bates), ""robert bates (loyalist)""))
  ?birthPlace rdf:type ?type1 .
  ?birthPlace rdf:type ?type2 .
  VALUES (?type1 ?type2) { (dbo:Country dbo:Organization) }
  BIND(?birthPlace AS ?entity)
}

UNION

# Query for Western European Time
SELECT ?region WHERE {
  ?time geo:region ?region .
  FILTER(STRSTARTS(LCASE(?time), ""western european time""))
  ?region rdf:type dbo:Country .
  BIND(?region AS ?entity)
}

UNION

# Query for Eric Cross (writer)
SELECT ?birthPlace WHERE {
  ?cross dbo:birthPlace ?birthPlace .
  FILTER(STRSTARTS(LCASE(?cross), ""eric cross (writer)""))
  BIND(?birthPlace AS ?entity)
}
```",5,8,6,2,3,2,3,28,0,0,1,0,0.0,0
47,56,test,"Give me the office of the administration of Jagdeep Dhankhar and office of Bidesh Ranjan Bose and office of the awardee of the entity, that is an award, in India.",SELECT ?result WHERE { ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Award>. ?v2 <http://dbpedia.org/property/governor> <http://dbpedia.org/resource/Jagdeep_Dhankhar> . <http://dbpedia.org/resource/Bidesh_Ranjan_Bose> <http://dbpedia.org/property/office> ?result . ?v2 <http://dbpedia.org/property/office> ?result . ?v0 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/India> . ?v1 <http://dbpedia.org/property/office> ?result . ?v1 <http://dbpedia.org/property/awards> ?v0 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?officeJagdeepDhankhar ?officeBideshRanjanBose ?award ?awardee WHERE {
  # Office of Jagdeep Dhankhar
  OPTIONAL { 
    dbr:Jagdeep_Dhankhar dbo:positionHeld ?officeJagdeepDhankhar .
  }
  
  # Office of Bidesh Ranjan Bose
  OPTIONAL { 
    dbr:B._R._Bose dbo:positionHeld ?officeBideshRanjanBose .
  }

  # Awards in India and their awardees
  OPTIONAL {
    ?award dbo:country dbr:India ;
           dbo:recipient ?awardee .
  }
}
```",6,7,7,3,3,3,3,71,0,0,1,0,0.0,0
865,68,test,"Give me the native of the residence, that is a country, of the person decedent at Patna and father of the child, that is a politician, of the spouse of Syeda Shahar Banu and father of the child of Abu Ahmad Abdul Hafiz.",SELECT ?result WHERE { ?v5 <http://dbpedia.org/property/father> ?v2 . ?v4 <http://dbpedia.org/property/father> ?result . ?v5 <http://dbpedia.org/property/father> ?result . ?v4 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Abu_Ahmad_Abdul_Hafiz> . <http://dbpedia.org/resource/Syeda_Shahar_Banu> <http://dbpedia.org/ontology/spouse> ?v2 . ?result <http://dbpedia.org/ontology/birthPlace> ?v0 . ?v1 <http://dbpedia.org/ontology/deathPlace> <http://dbpedia.org/resource/Patna> . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v1 <http://dbpedia.org/property/residence> ?v0 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. },"```sparql
SELECT ?nativeCountry WHERE {
  ?person foaf:name ""Abu Ahmad Abdul Hafiz""@en .
  ?person dbo:spouse ?spouse .
  ?spouse foaf:name ""Syeda Shahar Banu""@en .
  ?person dbo:child ?child .
  ?child dbo:occupation dbc:Politicians_from_India .
  ?person dbo:deathPlace dbr:Patna .
  ?person dbo:nationality ?nationality .
  ?nationality rdfs:label ?nativeCountry .
  FILTER (lang(?nativeCountry) = ""en"")
}
```",8,10,9,3,3,3,3,71,0,0,1,0,0.0,0
865,67,test,"Give me the father of the child of the father of Abul Maal Abdul Muhith and native of British Raj and father of the child, that is a politician, of the spouse of Syeda Shahar Banu.",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/British_Raj> . ?v3 <http://dbpedia.org/property/father> ?v2 . ?v3 <http://dbpedia.org/property/father> ?result . <http://dbpedia.org/resource/Syeda_Shahar_Banu> <http://dbpedia.org/ontology/spouse> ?v1 . ?v5 <http://dbpedia.org/property/father> ?result . ?v5 <http://dbpedia.org/property/father> ?v1 . <http://dbpedia.org/resource/Abul_Maal_Abdul_Muhith> <http://dbpedia.org/property/father> ?v2 . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. },"```sparql
# Step 1: Find Abul Maal Abdul Muhith's father
SELECT ?father WHERE {
    dbpedia:Abul_Maal_Abdul_Muhith dbo:parent ?father .
}

# Step 2: Find the children of Abul Maal Abdul Muhith's father
SELECT ?child WHERE {
    ?father dbo:child ?child .
    FILTER(?father = <URI_of_Abul_Maal_Abdul_Muhiths_father>)
}

# Step 3: Identify the native of British Raj among these children
SELECT ?nativeChild WHERE {
    ?child dbo:nationality dbr:British_Raj .
    FILTER(?child IN (<URIs_from_previous_step>))
}

# Step 4: Find Syeda Shahar Banu's spouse
SELECT ?spouse WHERE {
    dbpedia:Syeda_Shaah_Banu dbo:spouse ?spouse .
}

# Step 5: Identify the children of Syeda Shahar Banu's spouse
SELECT ?childOfSpouse WHERE {
    ?spouse dbo:child ?childOfSpouse .
    FILTER(?spouse = <URI_of_Syeda_Shaah_Banus_spouse>)
}

# Step 6: Find the politician among these children
SELECT ?politician WHERE {
    ?childOfSpouse rdf:type dbo:Politician .
    FILTER(?childOfSpouse IN (<URIs_from_previous_step>))
}

# Step 7: Determine the father of this politician
SELECT ?fatherOfPolitician WHERE {
    ?politician dbo:parent ?fatherOfPolitician .
}
```

Note: Replace `<URI_of_Abul_Maal_Abdul_Muhiths_father>`, `<URIs_from_previous_step>`, and `<URI_of_Syeda_Shaah_Banus_spouse>` with the actual URIs obtained from previous query results.",7,8,8,3,3,3,3,71,0,0,1,0,0.0,0
965,69,test,"Give me the spouse of the spouse of the parent of Louise Mountbatten and parent of the person born, that is a noble, as the birth name of George Mountbatten, 2nd Marquess of Milford Haven and parent of the child, that is a royalty, of Prince Louis of Battenberg.","SELECT ?result WHERE { ?v6 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. <http://dbpedia.org/resource/George_Mountbatten,_2nd_Marquess_of_Milford_Haven> <http://dbpedia.org/property/birthName> ?v5 . ?v4 <http://dbpedia.org/ontology/spouse> ?v2 . ?result <http://dbpedia.org/ontology/spouse> ?v2 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Noble>. ?v6 <http://dbpedia.org/ontology/parent> ?result . ?v6 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Prince_Louis_of_Battenberg> . ?v0 <http://dbpedia.org/ontology/parent> ?result . ?v0 <http://dbpedia.org/property/birthName> ?v5 . <http://dbpedia.org/resource/Louise_Mountbatten> <http://dbpedia.org/ontology/parent> ?v4 . }","```sparql
SELECT ?dorothyHamiltonBirthName WHERE {
  wd:Q11998 wdt:P26 ?louisMountbatten. # Louise Mountbatten's parent (Princess Victoria of Hesse and by Rhine)
  ?louisMountbatten wdt:P26 ?princeLouisOfBattenberg. # Spouse of Princess Victoria
  ?princeLouisOfBattenberg wdt:P31 wd:Q215627. # Prince Louis of Battenberg is a noble
  ?princeLouisOfBattenberg wdt:P569 ?birthDate. # Birth date to ensure correct person
  ?princeLouisOfBattenberg wdt:P22 ?georgeMountbatten. # Child (George Mountbatten)
  ?georgeMountbatten rdfs:label ""George Mountbatten, 2nd Marquess of Milford Haven""@en . # George Mountbatten's title
  ?georgeMountbatten wdt:P734 ?edwinaAshley. # Spouse of George Mountbatten
  ?edwinaAshley wdt:P22 ?williamAshley. # Parent (William Ashley)
  ?williamAshley wdt:P26 ?dorothyHamilton. # Spouse of William Ashley
  ?dorothyHamilton rdfs:label ?dorothyHamiltonBirthName. # Birth name of Dorothy Hamilton
}
```",8,10,9,3,3,3,3,71,0,0,2,0,0.0,0
839,69,test,"Give me the band of the member of Böhse Onkelz and band of the person born, that is a musical artist, as the persona of Kevin Russell (musician) and band of the band, that is a musical artist, of the professional in Musician.","SELECT ?result WHERE { <http://dbpedia.org/resource/Böhse_Onkelz> <http://dbpedia.org/ontology/bandMember> ?v7 . ?v1 <http://dbpedia.org/ontology/associatedMusicalArtist> ?v2 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?result <http://dbpedia.org/ontology/bandMember> ?v7 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?v3 <http://dbpedia.org/property/birthName> ?v4 . ?v1 <http://dbpedia.org/property/occupation> ""Musician""@en . <http://dbpedia.org/resource/Kevin_Russell_(musician)> <http://xmlns.com/foaf/0.1/givenName> ?v4 . ?v3 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?result <http://dbpedia.org/ontology/bandMember> ?v2 . }","```sparql
# Query 1: Band of a member of Böhse Onkelz
SELECT ?member ?otherBand WHERE {
  ?band rdf:type dbo:MusicalGroup .
  ?band rdfs:label ""Böhse Onkelz""@en .
  ?band dbo:member ?person .
  ?person foaf:name ?member .
  OPTIONAL { ?person dbo:memberOf ?otherBand . }
} LIMIT 10

# Query 2: Band of the person born as a musical artist who is the persona of Kevin Russell (musician)
SELECT ?band WHERE {
  ?person foaf:name ""Kevin Russell""@en ;
          rdf:type dbo:MusicalArtist .
  ?person dbo:birthPlace ?place .
  ?person dbo:memberOf ?band .
} LIMIT 1

# Query 3: Band of the band that is a musical artist and is a professional in Musician
SELECT DISTINCT ?band WHERE {
  ?band rdf:type dbo:MusicalGroup ;
        dbo:genre ?genre .
  ?band dbo:member ?person .
  ?person rdf:type dbo:Musician .
} LIMIT 10
```",8,10,9,3,3,3,3,71,0,0,1,0,0.0,0
573,57,test,"Give me the parent of the author, that is a politician and an office holder, of Exchequer Standards and person decedent at the residence, that is a settlement, of the professional, that is American, in Politician and person decedent at Massachusetts.","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/deathPlace> ?v5 . ?v0 <http://dbpedia.org/property/residence> ?v5 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v0 <http://dbpedia.org/ontology/nationality> <http://dbpedia.org/resource/United_States>. ?v0 <http://dbpedia.org/property/occupation> ""Politician""@en . <http://dbpedia.org/resource/Exchequer_Standards> <http://dbpedia.org/property/author> ?v3 . ?v3 <http://dbpedia.org/ontology/parent> ?result . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?result <http://dbpedia.org/ontology/deathPlace> <http://dbpedia.org/resource/Massachusetts> . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?author ?parent WHERE {
  # Step 1: Find the author of ""Exchequer Standards""
  ?work dbo:author ?author .
  FILTER(STRSTARTS(LCASE(?work), LCASE(""exchequer standards"")))

  # Step 2: Check if this author is a politician and an office holder
  ?author dbo:occupation dbr:Politician ;
          dbo:officeHolder ?office .

  # Step 3 & 4: Find the place of death (residence) and confirm it's a settlement
  ?author dbp:placeOfDeath ?deathPlace .
  ?deathPlace rdf:type dbo:Settlement .

  # Step 5: Identify an American professional in politics who died in Massachusetts
  ?professional dbo:nationality dbr:United_States ;
                dbo:occupation dbr:Politician ;
                dbp:placeOfDeath ?massachusettsPlace .
  FILTER(STRSTARTS(LCASE(?massachusettsPlace), LCASE(""massachusetts"")))

  # Step 6: Determine the parent of the author who is a politician and an office holder
  ?author dbo:parent ?parent .
  ?parent dbo:occupation dbr:Politician ;
          dbo:officeHolder ?office2 .
}
```",6,10,7,3,3,3,3,71,0,0,2,0,0.0,0
839,56,test,"Give me the band of the band, that is a musical artist, of the professional in Musician and band of the person born, that is a musical artist, as Kevin Richard Russell and band of Peter Schorowsky.","SELECT ?result WHERE { ?v2 <http://dbpedia.org/property/birthName> ""Kevin Richard Russell""@en . ?v0 <http://dbpedia.org/property/occupation> ""Musician""@en . ?result <http://dbpedia.org/ontology/bandMember> <http://dbpedia.org/resource/Peter_Schorowsky> . ?v2 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?v0 <http://dbpedia.org/ontology/associatedMusicalArtist> ?v1 . ?result <http://dbpedia.org/ontology/bandMember> ?v1 . }","```sparql
# Query to get Kevin Richard Russell's band
SELECT ?bandKevin WHERE {
  ?person dbo:birthName ""Kevin Richard Russell""@en .
  ?person a dbo:MusicalArtist .
  ?person dbo:associatedBand ?bandKevin .
}

UNION

# Query to get Peter Schorowsky's band
SELECT ?bandPeter WHERE {
  ?person dbo:name ""Peter Schorowsky""@en .
  ?person a dbo:Musician .
  ?person dbo:associatedBand ?bandPeter .
}
```",6,8,7,3,3,3,3,71,0,0,1,0,0.0,0
965,59,test,"Give me the spouse of the spouse of the parent of Louise Mountbatten and parent of the child, that is a royalty, of the person born, that is a politician, on 1854-05-24.","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/spouse> ?v1 . ?v4 <http://dbpedia.org/ontology/parent> ?result . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v0 <http://dbpedia.org/ontology/birthDate> ""1854-05-24""^^<http://www.w3.org/2001/XMLSchema#date> . ?v4 <http://dbpedia.org/property/father> ?v0 . <http://dbpedia.org/resource/Louise_Mountbatten> <http://dbpedia.org/ontology/parent> ?v3 . ?v3 <http://dbpedia.org/ontology/spouse> ?v1 . }","```sparql
# Step 1: Find Louise Mountbatten's parent
SELECT ?louiseParent WHERE {
    ?louise dbo:parent ?louiseParent .
    ?louise rdfs:label ""Louise Mountbatten""@en .
}

# Step 2: Find the spouse of Louise Mountbatten's parent
SELECT ?spouseOfParent WHERE {
    ?louiseParent dbo:spouse ?spouseOfParent .
}

# Step 3: Find a child of this spouse who is royalty
SELECT ?royalChild WHERE {
    ?spouseOfParent dbo:child ?royalChild .
    ?royalChild rdf:type dbo:Monarch .
}

# Step 4: Find the person born on 1854-05-24 who is a politician
SELECT ?politician WHERE {
    ?politician dbo:birthDate ""1854-05-24""^^xsd:date .
    ?politician rdf:type dbo:Politician .
}

# Step 5: Find the parent of the royal child
SELECT ?parentOfRoyalChild WHERE {
    ?royalChild dbo:parent ?parentOfRoyalChild .
}

# Step 6: Find the spouse of this parent
SELECT ?finalSpouse WHERE {
    ?parentOfRoyalChild dbo:spouse ?finalSpouse .
}
```",6,8,7,3,2,3,3,71,0,0,2,0,0.0,0
987,65,test,"Give me the entity in the region, that is a country, of Central European Time and birth place of the actor of the show, that is a film, with Emir Hadžihafizbegović and birth place of the band, that is an artist and a musical artist, of Šako Polumenta.",SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Film>. ?result <http://dbpedia.org/ontology/country> ?v0 . ?v1 <http://dbpedia.org/ontology/starring> <http://dbpedia.org/resource/Emir_Hadžihafizbegović> . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. ?v5 <http://dbpedia.org/ontology/birthPlace> ?result . ?v2 <http://dbpedia.org/ontology/birthPlace> ?result . <http://dbpedia.org/resource/Šako_Polumenta> <http://dbpedia.org/ontology/associatedMusicalArtist> ?v2 . ?v0 <http://dbpedia.org/property/timeZone> <http://dbpedia.org/resource/Central_European_Time> . ?v1 <http://dbpedia.org/property/starring> ?v5 . },"```sparql
# Step 1: Find a film featuring Emir Hadžihafizbegović
SELECT ?film WHERE {
  ?film dbo:starring dbpedia:Emir_Hadžihafizbegović .
}

# Step 2: Find actors in the identified film and their birthplaces
SELECT DISTINCT ?actor ?birthPlace WHERE {
  ?film dbo:starring ?actor .
  ?actor dbo:birthPlace ?birthPlace .
  FILTER(?film IN (<Film_URI>)) # Replace <Film_URI> with actual URI from Step 1
}

# Step 3: Find bands associated with Šako Polumenta and their birthplaces
SELECT DISTINCT ?band ?birthPlace WHERE {
  ?band dbo:member dbpedia:Šako_Polumenta .
  ?band dbo:birthPlace ?birthPlace .
}

# Step 4: Identify countries in the CET time zone
SELECT DISTINCT ?country WHERE {
  ?country dbo:timeZone dbr:Central_European_Time .
}

# Step 5: Find common country that matches all criteria
SELECT DISTINCT ?commonCountry WHERE {
  VALUES ?actorBirthPlace { (<Actor_Birthplace_URI>1) (<Actor_Birthplace_URI>2) } # Replace with actual URIs from Step 2
  VALUES ?bandBirthPlace { (<Band_Birthplace_URI>1) (<Band_Birthplace_URI>2) } # Replace with actual URIs from Step 3
  ?commonCountry dbo:countryName ?name .
  FILTER(?actorBirthPlace IN (?commonCountry) && ?bandBirthPlace IN (?commonCountry))
}
```",7,11,8,3,3,3,3,71,0,0,1,0,0.0,0
791,70,test,"Give me the predecessor of the child of the child, that is an office holder and a royalty, of Emperor Go-Shirakawa and father of the child, that is a royalty, of the father, that is a royalty and an office holder, of Emperor Antoku and spouse of the spouse, that is a royalty, of Emperor Takakura.",SELECT ?result WHERE { ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?result <http://dbpedia.org/ontology/spouse> ?v4 . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v4 <http://dbpedia.org/ontology/spouse> <http://dbpedia.org/resource/Emperor_Takakura> . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v0 <http://dbpedia.org/ontology/parent> <http://dbpedia.org/resource/Emperor_Go-Shirakawa> . <http://dbpedia.org/resource/Emperor_Antoku> <http://dbpedia.org/property/father> ?v1 . ?v3 <http://dbpedia.org/property/father> ?result . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?result <http://dbpedia.org/ontology/successor> ?v7 . ?v3 <http://dbpedia.org/property/father> ?v1 . ?v7 <http://dbpedia.org/property/father> ?v0 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?predecessor WHERE {
  # Step 1: Identify Emperor Antoku's father
  ?antoku dbo:father dbr:Taira_no_Kiyomori .
  
  # Step 2: Find the spouse of Taira no Kiyomori
  dbr:Taira_no_Kiyomori dbo:spouse ?tokuko .

  # Step 3: Identify Emperor Takakura's spouse
  ?takakura dbo:spouse ?yoshiko .
  ?yoshiko rdfs:label ""Fujiwara no Yoshiko""@en .

  # Step 4: Find the father of Fujiwara no Yoshiko
  ?yoshiko dbo:father ?yorinaga .
  
  # Step 5: Determine the child of Fujiwara no Yorinaga who is a royalty
  ?yorinaga dbo:child ?yoshiko .

  # Step 6: Identify Emperor Go-Shirakawa's child
  dbr:Emperor_Go-Shirakawa dbo:child ?go_child .
  
  # Step 7: Find the child of Emperor Go-Shirakawa's child
  ?go_child dbo:child ?shigeko .
  ?shigeko rdfs:label ""Princess Shigeko""@en .

  # Step 8: Identify the predecessor of Princess Shigeko who is an office holder and royalty
  ?shigeko dbo:father ?predecessor .
  ?predecessor a dbo:Monarch ;
               dbo:officeHolder true .
}
```",8,14,9,3,3,3,3,71,0,0,1,0,0.0,0
18,27,test,"Give me the professional in  and alumnus of the figure known, that is an educational institution, as Saints and parent of the professional in Actress.","SELECT ?result WHERE { ?result <http://dbpedia.org/property/occupation> """"@en . ?v1 <http://dbpedia.org/property/nickname> ""Saints""@en . ?v0 <http://dbpedia.org/property/occupation> ""Actress""@en . ?result <http://dbpedia.org/ontology/almaMater> ?v1 . ?result <http://dbpedia.org/ontology/child> ?v0 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/EducationalInstitution>. }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?professional ?parent WHERE {
  # Step 1: Identify the educational institution known as ""Saints""
  ?institution rdfs:label ""Saint Mary's College""@en .
  
  # Step 2: Find alumni of this institution who are professionals
  ?alumnus dbo:almaMater ?institution ;
          dbo:profession ?professional .

  # Step 3: Identify the parent of these professionals who is an actress
  ?parent dbo:child ?alumnus .
  ?parent dbo:occupation dbr:Actress .
}
```",5,6,6,2,3,2,3,28,0,0,1,0,0.0,0
773,63,test,"Give me the parent of the successor of Charles the Bald and spouse of the father of the parent of Bernard (son of Charles the Fat) and parent of the child, that is a royalty, of Louis the German.",SELECT ?result WHERE { ?v4 <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Bernard_(son_of_Charles_the_Fat)> . ?result <http://dbpedia.org/ontology/child> ?v6 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v2 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Louis_the_German> . ?v2 <http://dbpedia.org/ontology/parent> ?result . ?v3 <http://dbpedia.org/ontology/spouse> ?result . <http://dbpedia.org/resource/Charles_the_Bald> <http://dbpedia.org/ontology/successor> ?v6 . ?v4 <http://dbpedia.org/property/father> ?v3 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?parent WHERE {
  # Charles the Bald's successor
  dbr:Charles_the_Bald dbo:succeededBy dbr:Louis_II_of_Lombardy .
  
  # Parent of Louis II (successor)
  dbr:Louis_II_of_Lombardy dbo:father dbr:Charles_the_Bald .

  # Spouse of Charles the Bald
  dbr:Charles_the_Bald dbo:spouse ?parent .

  # Bernard's parent
  dbr:Bernard_I_of_Swabia dbo:mother dbr:Richardis_of_Swabia .
  
  # Father of Richardis of Swabia
  dbr:Richardis_of_Swabia dbo:father dbr:Burchard_II,_Duke_of_Swabia .

  # Spouse of Burchard II
  dbr:Burchard_II,_Duke_of_Swabia dbo:spouse ?parent2 .
  
  # Louis the German's child who is royalty
  dbr:Louis_the_Germany dbo:child dbr:Carloman_of_Bavaria .

  FILTER(?parent = ?parent2)
}
```",7,8,8,3,3,3,3,71,0,0,1,0,0.0,0
236,18,test,"Give me the party member of the administration, that is an organisation, of the person decedent, that is a politician and an office holder, at Quincy, Massachusetts and party member of the administration of James Madison.","SELECT ?result WHERE { ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?v3 <http://dbpedia.org/property/leader> <http://dbpedia.org/resource/James_Madison> . ?v2 <http://dbpedia.org/property/leader> ?v1 . ?result <http://dbpedia.org/ontology/party> ?v2 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?result <http://dbpedia.org/ontology/party> ?v3 . ?v1 <http://dbpedia.org/ontology/deathPlace> <http://dbpedia.org/resource/Quincy,_Massachusetts> . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT DISTINCT ?person ?party ?administration WHERE {
  ?person a dbo:OfficeHolder ;
          dbo:politicalParty ?party ;
          dbo:residenceLocation dbr:Quincy,_Massachusetts .
  
  ?administration dbo:startDate ?start ;
                  dbo:endDate ?end ;
                  dbo:member ?person .

  FILTER (?start <= ""1817-03-04""^^xsd:date && ?end >= ""1809-03-04""^^xsd:date)
  
  ?party dbo:member dbr:James_Madison .
}
```",5,8,6,3,2,3,2,20,0,0,19,0,0.0,0
645,60,test,"Give me the commander in the force of the commander in Siege of Madrid and leader of the office, that is a government agency and an organisation, of the native of Restoration (Spain).",SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/GovernmentAgency>. <http://dbpedia.org/resource/Siege_of_Madrid> <http://dbpedia.org/ontology/commander> ?v3 . ?v0 <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Restoration_(Spain)> . ?v1 <http://dbpedia.org/ontology/leader> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?v2 <http://dbpedia.org/ontology/commander> ?result . ?v0 <http://dbpedia.org/property/office> ?v1 . ?v2 <http://dbpedia.org/ontology/commander> ?v3 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?person WHERE {
  ?person dbo:nationality dbr:Spain .
  ?person dbo:birthPlace ?place .
  ?place dbo:country dbr:Spain .
  ?person dbo:birthDate ?date .
  FILTER (?date >= ""1874-01-01""^^xsd:date && ?date <= ""1931-12-31""^^xsd:date) .

  OPTIONAL {
    ?event dbo:eventType dbr:Siege_of_Madrid .
    ?event dbo:commander ?person .
  }

  OPTIONAL {
    ?office dbo:type dbr:Government_agency ;
            dbo:head ?person .
  }
  
  FILTER EXISTS { 
    ?person rdfs:label ""Francisco Franco""@en
  }
}
```",6,8,7,3,2,3,3,71,0,0,3,0,0.0,0
442,8,test,Give me the resting place of Allyn K. Capron and resting place of the actor of This Side of Heaven.,SELECT ?result WHERE { <http://dbpedia.org/resource/Allyn_K._Capron> <http://dbpedia.org/ontology/restingPlace> ?result . ?v0 <http://dbpedia.org/ontology/restingPlace> ?result . <http://dbpedia.org/resource/This_Side_of_Heaven> <http://dbpedia.org/ontology/starring> ?v0 . },"```sparql
# Query for Allyn K. Capron's resting place
SELECT ?restingPlace WHERE {
  ?person a dbo:Person ;
          foaf:name ""Allyn K. Capron""@en .
  OPTIONAL { ?person dbo:placeOfBurial ?restingPlace . }
  OPTIONAL { ?person dbo:memorialSite ?restingPlace . }
}

UNION

# Query for the actor of ""This Side of Heaven""
SELECT ?actorRestingPlace WHERE {
  ?film a dbo:Film ;
        foaf:name ""This Side of Heaven""@en .
  ?film dbo:starring ?actor .
  OPTIONAL { ?actor dbo:placeOfBurial ?actorRestingPlace . }
  OPTIONAL { ?actor dbo:memorialSite ?actorRestingPlace . }
}
```",3,3,4,2,2,2,2,9,0,0,1,0,0.0,0
216,61,test,"Give me the team of the person born, that is a sports manager and a soccer manager and a soccer player, on the death of Pavel Vezhinov and player in the coach, that is a soccer player and a sports manager and a soccer manager, of the player, that is an organisation and a sports club and a soccer club, in Džemal Berberović.",SELECT ?result WHERE { ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsManager>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsClub>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerManager>. ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerManager>. ?v0 <http://dbpedia.org/ontology/coach> ?v5 . <http://dbpedia.org/resource/Pavel_Vezhinov> <http://dbpedia.org/ontology/deathDate> ?v1 . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsManager>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerPlayer>. ?v3 <http://dbpedia.org/ontology/birthDate> ?v1 . ?result <http://dbpedia.org/ontology/coach> ?v3 . ?v5 <http://dbpedia.org/ontology/team> ?result . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerClub>. <http://dbpedia.org/resource/Džemal_Berberović> <http://dbpedia.org/ontology/team> ?v0 . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerPlayer>. },"```sparql
# Step 1: Find Pavel Vezhinov's death date
SELECT ?deathDate WHERE {
    dbpedia:Pavel_Vezhinov dbo:deathDate ?deathDate .
}

# Step 2: Find a person born on that date who is a sports manager, soccer manager, and player
SELECT ?person WHERE {
    ?person dbo:birthDate ?birthDate ;
            rdf:type dbo:SportsManager ;
            rdf:type dbo:SoccerPlayer ;
            rdf:type dbo:SoccerManager .
    FILTER (?birthDate = <deathDateFromStep1>)
}

# Step 3: Find Džemal Berberović's team as a coach
SELECT ?team WHERE {
    dbpedia:Džemal_Berberović dbo:coachTeam ?team ;
                                rdf:type dbo:SoccerPlayer ;
                                rdf:type dbo:SportsManager ;
                                rdf:type dbo:SoccerManager .
}

# Step 4: Identify the player of that team who is an organization, sports club, and soccer club
SELECT ?player WHERE {
    ?player dbo:memberOfTeam ?team ;
            rdf:type dbo:Organization ;
            rdf:type dbo:SportsClub ;
            rdf:type dbo:SoccerClub .
}

# Step 5: Find the team of the person identified in step 2
SELECT ?team WHERE {
    ?person dbo:memberOfTeam ?team .
}
```

Note: Replace `<deathDateFromStep1>` with the actual date obtained from step 1.",6,15,7,3,2,3,3,71,0,0,1,0,0.0,0
365,18,test,"Give me the person born as the birth name of the commander, that is an office holder, in Ukrainian–Soviet War and spouse of the native, that is a politician, of Poltava Governorate.",SELECT ?result WHERE { ?v3 <http://dbpedia.org/ontology/spouse> ?result . ?v1 <http://dbpedia.org/property/birthName> ?v2 . ?v3 <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Poltava_Governorate> . <http://dbpedia.org/resource/Ukrainian–Soviet_War> <http://dbpedia.org/ontology/commander> ?v1 . ?result <http://dbpedia.org/property/birthName> ?v2 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?person ?birthName ?spouse WHERE {
  ?person dbo:nationality dbr:Ukraine ;
          dbo:occupation dbr:Military_person ;
          dbo:wikiPageDisambiguates ?disambiguation .
  
  FILTER(CONTAINS(LCASE(?disambiguation), ""ukrainian-soviet_war"")).
  
  ?person dbp:birthName ?birthName .
  
  OPTIONAL { ?person dbo:officeHolderOf ?office . }
  
  ?person dbo:spouse ?spouse .

  ?spouse dbo:nationality dbr:Ukraine ;
          dbo:occupation dbr:Politician ;
          dbo:birthPlace dbr:Poltava_Governorate .
}
```",5,7,6,3,2,3,2,20,0,0,1,0,0.0,0
965,62,test,"Give me the parent of George Mountbatten, 2nd Marquess of Milford Haven and spouse of the spouse of the parent of Louise Mountbatten and parent of the child, that is a royalty, of the person born, that is a politician, on 1854-05-24.","SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v1 <http://dbpedia.org/ontology/birthDate> ""1854-05-24""^^<http://www.w3.org/2001/XMLSchema#date> . ?v5 <http://dbpedia.org/property/father> ?v1 . <http://dbpedia.org/resource/George_Mountbatten,_2nd_Marquess_of_Milford_Haven> <http://dbpedia.org/ontology/parent> ?result . ?result <http://dbpedia.org/ontology/spouse> ?v2 . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. <http://dbpedia.org/resource/Louise_Mountbatten> <http://dbpedia.org/ontology/parent> ?v4 . ?v4 <http://dbpedia.org/ontology/spouse> ?v2 . ?v5 <http://dbpedia.org/ontology/parent> ?result . }","```sparql
SELECT DISTINCT ?finalParent WHERE {
  # Step 1: Identify Louise Mountbatten's parent
  ?louise dbo:parent ?louiseParent .
  FILTER(STR(?louise) = ""Louise_Mountbatten"") .

  # Step 2: Find the spouse of Louise Mountbatten's parent
  ?louiseParent dbo:spouse ?spouseOfLParent .

  # Step 3: Identify George Mountbatten, 2nd Marquess of Milford Haven's parent
  ?george dbo:parent ?georgeParent .
  FILTER(STR(?george) = ""George_Mountbatten,_2nd_Marquess_of_Milford_Haven"") .

  # Step 4: Spouse of the spouse of Louise Mountbatten's parent
  ?spouseOfLParent dbo:spouse ?finalSpouse .

  # Step 5: Identify the politician born on 1854-05-24
  ?politician dbo:dateOfBirth ?dob .
  FILTER(STR(?dob) = ""1854-05-24"") .
  FILTER(CONTAINS(LCASE(STR(?politician)), ""politician"")) .

  # Step 6: Find the royal child of the politician
  ?child dbo:parent ?politician ;
         dbo:title ?title .
  FILTER(CONTAINS(LCASE(STR(?title)), ""royalty"")) .

  # Step 7: Identify the parent of the royal child
  ?childParent dbo:child ?child .

  # Combine steps 3 and 7 to get the final answer
  BIND(CONCAT(STR(?georgeParent), "" "", STR(?finalSpouse)) AS ?finalParent)
}
```",7,9,8,3,3,3,3,71,0,0,2,0,0.0,0
573,59,test,"Give me the person decedent at the administration, that is a region, of the real name of Charlie Baker (Australian footballer) and person decedent at the residence, that is a settlement, of the professional, that is American, in Politician.","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/deathPlace> ?v2 . ?v0 <http://dbpedia.org/property/residence> ?v5 . ?v2 <http://dbpedia.org/property/governor> ?v3 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Region>. ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. ?v0 <http://dbpedia.org/property/occupation> ""Politician""@en . ?v0 <http://dbpedia.org/ontology/nationality> <http://dbpedia.org/resource/United_States>. ?result <http://dbpedia.org/ontology/deathPlace> ?v5 . <http://dbpedia.org/resource/Charlie_Baker_(Australian_footballer)> <http://xmlns.com/foaf/0.1/name> ?v3 . }","```sparql
# Query for Charlie Baker's real name and the person decedent at a region linked to it
SELECT ?realName ?decedentAtRegion WHERE {
  ?charlieBaker dbo:birthName ?realName .
  FILTER(CONTAINS(LCASE(STR(?charlieBaker)), ""charlie baker"") && CONTAINS(LCASE(STR(?charlieBaker)), ""australian footballer""))
  
  OPTIONAL { 
    ?region dbo:administrativeRegion ?realName .
    ?decedentAtRegion dbo:deathPlace ?region .
  }
}

UNION

# Query for an American politician and the person decedent at a settlement linked to them
SELECT ?politician ?decedentAtSettlement WHERE {
  ?politician rdf:type dbo:Politician ;
              dbo:nationality dbr:United_States .
  
  OPTIONAL { 
    ?settlement dbo:settlement ?politician .
    ?decedentAtSettlement dbo:deathPlace ?settlement .
  }
}
```",6,9,7,3,2,3,3,71,0,0,400,0,0.0,0
839,61,test,"Give me the band of the member of the band, that is a band and a group, of Peter Schorowsky and band of the band, that is a musical artist, of the professional in Musician.","SELECT ?result WHERE { ?v0 <http://dbpedia.org/ontology/bandMember> ?v5 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Group>. ?result <http://dbpedia.org/ontology/bandMember> ?v5 . ?result <http://dbpedia.org/ontology/bandMember> ?v3 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Band>. ?v1 <http://dbpedia.org/ontology/associatedMusicalArtist> ?v3 . <http://dbpedia.org/resource/Peter_Schorowsky> <http://dbpedia.org/ontology/associatedMusicalArtist> ?v0 . ?v1 <http://dbpedia.org/property/occupation> ""Musician""@en . }","```sparql
# Query 1: Find Peter Schorowsky's band that is both a ""band"" and a ""group""
SELECT ?band WHERE {
    ?person dbo:birthName ""Peter Schorowsky""@en .
    ?person dbo:memberOfBand ?band .
    ?band rdf:type dbpedia-owl:MusicalGroup .
    FILTER EXISTS { ?band dbo:type ""band""@en }
    FILTER EXISTS { ?band dbo:type ""group""@en }
}

# Query 2: Find the band of a professional musician that is also a musical artist
SELECT ?band WHERE {
    ?musician rdf:type dbpedia-owl:Musician .
    ?musician dbo:occupation ""professional musician""@en .
    ?musician dbo:memberOfBand ?band .
    ?band rdf:type dbpedia-owl:MusicalArtist .
}
```",6,9,7,3,2,3,3,71,0,0,1,0,0.0,0
987,71,test,"Give me the birth place of the actor of the show, that is a film, with Emir Hadžihafizbegović and entity in the region, that is a country, of the time zone, that is a sports event, in Canicosa de la Sierra and birth place of the band, that is an artist and a musical artist, of the band, that is an artist, of Dado Polumenta.",SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/associatedMusicalArtist> ?v2 . ?result <http://dbpedia.org/ontology/country> ?v8 . ?v4 <http://dbpedia.org/property/starring> ?v5 . ?v4 <http://dbpedia.org/ontology/starring> <http://dbpedia.org/resource/Emir_Hadžihafizbegović> . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?v7 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsEvent>. ?v5 <http://dbpedia.org/ontology/birthPlace> ?result . ?v8 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. <http://dbpedia.org/resource/Canicosa_de_la_Sierra> <http://dbpedia.org/ontology/timeZone> ?v7 . ?v8 <http://dbpedia.org/property/timeZone> ?v7 . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Film>. <http://dbpedia.org/resource/Dado_Polumenta> <http://dbpedia.org/ontology/associatedMusicalArtist> ?v1 . ?v2 <http://dbpedia.org/ontology/birthPlace> ?result . },"```sparql
# Step 1: Find films featuring Emir Hadžihafizbegović
SELECT ?film WHERE {
  ?film dbo:starring dbpedia:Emir_Hadžihafizbegović .
}

# Step 2: Determine the country/region associated with these films
SELECT DISTINCT ?country WHERE {
  ?film dbo:set dbp:locationCountry ?country .
}

# Step 3: Identify sports events in Canicosa de la Sierra and their time zones
SELECT DISTINCT ?event ?timezone WHERE {
  ?event dbo:location dbpedia:Canicosa_de_la_Sierra ;
         dbo:timeZone ?timezone .
}

# Step 4: Find bands related to the identified country/region
SELECT DISTINCT ?band WHERE {
  ?band dbo:country ?country .
}

# Step 5: Determine Dado Pršo's birthplace
SELECT ?birthPlace WHERE {
  dbpedia:Dado_Pršo dbo:birthPlace ?birthPlace .
}

# Step 6: Identify artists/musical artists of a band from this birthplace
SELECT DISTINCT ?artist WHERE {
  ?band dbo:originPlace ?birthPlace ;
        dbo:member ?artist .
  FILTER (STRSTARTS(STR(?artist), ""http://dbpedia.org/ontology/MusicalArtist""))
}

# Step 7: Retrieve the birthplace of the artist/musical artist
SELECT DISTINCT ?finalBirthPlace WHERE {
  ?artist dbo:birthPlace ?finalBirthPlace .
}
```",9,15,10,3,3,3,3,71,0,0,1,0,0.0,0
326,20,test,"Give me the resident of the birthplace, that is a state and British, of the professional in Writer and person decedent at the award, that is a country, of the awardee of French Legion of Honor.","SELECT ?result WHERE { ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. ?v1 <http://dbpedia.org/property/occupation> ""Writer""@en . ?result <http://dbpedia.org/ontology/deathPlace> ?v5 . ?v4 <http://dbpedia.org/property/awards> ""French Legion of Honor""@en . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/AdministrativeRegion>. ?v2 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/United_Kingdom>. ?result <http://dbpedia.org/property/residence> ?v2 . ?v4 <http://dbpedia.org/property/awards> ?v5 . ?v1 <http://dbpedia.org/ontology/birthPlace> ?v2 . }","```sparql
SELECT DISTINCT ?resident WHERE {
  # Step 1: Find awardees of the French Legion of Honor who are writers
  ?person dbo:award dbpedia-fr:Légion_d'honneur ;
          rdf:type dbo:Writer ;
          dbo:deathPlace ?deathPlace .

  # Step 2: Ensure the award was given in a country
  ?awardEvent dbo:eventLocation ?country .
  FILTER (isLiteral(?country) && langMatches(lang(?country), ""en""))

  # Step 3: Find their death place and ensure it's after receiving an award
  ?person dbo:dateOfDeath ?deathDate ;
          dbo:birthPlace ?birthPlace .

  # Step 4: Ensure the birthplace is a British state
  ?birthPlace rdf:type dbo:State ;
              dbo:country dbpedia:United_Kingdom .

  # Step 5: Find current residents of these states
  ?resident dbo:residence ?birthPlace .
}
```",6,9,7,3,2,3,2,20,0,0,1,0,0.0,0
839,68,test,"Give me the band of the band, that is a musical artist, of Charlie Huhn and band of the member of the band, that is a band and a group, of Peter Schorowsky and band of the person born, that is a musical artist, as the persona of Kevin Russell (musician).",SELECT ?result WHERE { ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Band>. <http://dbpedia.org/resource/Peter_Schorowsky> <http://dbpedia.org/ontology/associatedMusicalArtist> ?v0 . ?v4 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. <http://dbpedia.org/resource/Charlie_Huhn> <http://dbpedia.org/ontology/associatedMusicalArtist> ?v3 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Group>. ?v0 <http://dbpedia.org/ontology/bandMember> ?v7 . <http://dbpedia.org/resource/Kevin_Russell_(musician)> <http://xmlns.com/foaf/0.1/givenName> ?v5 . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?v4 <http://dbpedia.org/property/birthName> ?v5 . ?result <http://dbpedia.org/ontology/bandMember> ?v7 . ?result <http://dbpedia.org/ontology/bandMember> ?v3 . },"```sparql
# Query to find Charlie Huhn's band
SELECT ?band WHERE {
  ?person foaf:name ""Charlie Huhn""@en .
  ?person dbo:memberOfBand ?band .
}

UNION

# Query to find Peter Schorowsky's band
SELECT ?band WHERE {
  ?person foaf:name ""Peter Schorowsky""@en .
  ?person dbo:memberOf ?band .
  ?band a ?type .
  FILTER (
    (CONTAINS(LCASE(STR(?type)), ""band"") && CONTAINS(LCASE(STR(?type)), ""group""))
  )
}

UNION

# Query to find Kevin Russell's birth name
SELECT ?birthName WHERE {
  ?person foaf:name ""Kevin Russell""@en .
  ?person dbo:birthName ?birthName .
}
```",8,12,9,3,3,3,3,71,0,0,1,0,0.0,0
433,65,test,"Give me the professional in the profession of Bob Marley and associated musical artist of the person born, that is a musical artist and an artist, as Paul Laurence Dunbar Chambers Jr. and associated musical artist of the associated musical artist, that is an artist and a musical artist, of the associated musical artist, that is a musical artist and an artist, of Ornette Coleman.","SELECT ?result WHERE { ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. ?result <http://dbpedia.org/property/occupation> ?v3 . <http://dbpedia.org/resource/Bob_Marley> <http://dbpedia.org/property/occupation> ?v3 . ?v6 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. <http://dbpedia.org/resource/Ornette_Coleman> <http://dbpedia.org/ontology/associatedMusicalArtist> ?v0 . ?v6 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?v0 <http://dbpedia.org/ontology/associatedMusicalArtist> ?v6 . ?v4 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?v6 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. ?v4 <http://dbpedia.org/property/birthName> ""Paul Laurence Dunbar Chambers Jr.""@en . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. }","```sparql
# Step 1: Find an associated musical artist of Paul Laurence Dunbar Chambers Jr.
SELECT ?associatedArtist WHERE {
    wd:Q12345 wdt:P106 wd:Q33999 . # Chick Chambers is a musician (P106)
    wd:Q12345 wdt:P463 ?associatedArtist . # Associated artists
    FILTER EXISTS { ?associatedArtist wdt:P106 wd:Q33999 } # Must be a musician
    FILTER EXISTS { ?associatedArtist wdt:P102 wd:Q11173 } # Must be an artist
}

# Step 2: Find the associated musical artist of the result from step 1 who is also an artist and musician
SELECT ?finalAssociatedArtist WHERE {
    ?artist wdt:P106 wd:Q33999 . # Must be a musician
    ?artist wdt:P102 wd:Q11173 . # Must be an artist
    ?artist wdt:P463 ?associatedArtist . # Associated artists from step 1 result
}

# Step 3: Find the professional in Bob Marley's profession (musician) who is associated with the final artist from step 2
SELECT ?professional WHERE {
    wd:Q34567 wdt:P106 wd:Q33999 . # Ornette Coleman is a musician
    wd:Q34567 wdt:P463 ?finalAssociatedArtist . # Associated artists from step 2 result
    ?professional wdt:P106 wd:Q33999 . # Must be a musician
}
```

Note: Replace `wd:Q12345` with the DBpedia ID for Paul Laurence Dunbar Chambers Jr., and `wd:Q34567` with the DBpedia ID for Ornette Coleman. The exact IDs need to be looked up in DBpedia.",7,13,8,3,3,3,3,71,0,0,4,0,0.0,0
773,62,test,"Give me the spouse of the father of the parent of Bernard (son of Charles the Fat) and parent of the successor of the child, that is a royalty, of Louis the Pious and parent of Charles the Fat.",SELECT ?result WHERE { <http://dbpedia.org/resource/Charles_the_Fat> <http://dbpedia.org/ontology/parent> ?result . ?v3 <http://dbpedia.org/ontology/spouse> ?result . ?v0 <http://dbpedia.org/ontology/successor> ?v6 . ?result <http://dbpedia.org/ontology/child> ?v6 . ?v4 <http://dbpedia.org/property/father> ?v3 . ?v4 <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Bernard_(son_of_Charles_the_Fat)> . <http://dbpedia.org/resource/Louis_the_Pious> <http://dbpedia.org/ontology/child> ?v0 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?spouse WHERE {
  # Find Charles the Fat
  dbr:Charles_the_Fat a dbo:Monarch ;
                      dbo:child dbr:Bernard_of_Saxony .

  # Get spouse of Charles the Fat
  dbr:Charles_the_Fat dbo:spouse ?spouse .

  OPTIONAL {
    # Find Louis the Pious and his successor
    dbr:Louis_the_Pious a dbo:Monarch ;
                        dbo:child ?successor .
    
    # Ensure the successor is royalty
    ?successor a dbo:Monarch .

    # Get spouse of Louis the Pious
    dbr:Louis_the_Pious dbo:spouse ?spouse2 .

    # Check if spouses are the same or connected
    FILTER(?spouse = ?spouse2)
  }
}
```",7,8,8,3,3,3,3,71,0,0,1,0,0.0,0
166,19,test,"Give me the entity in the territory administered, that is a country, from the reference to Madrid and resting place of the military force of Spanish Civil War.","SELECT ?result WHERE { ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. ?v0 <http://xmlns.com/foaf/0.1/name> ""Madrid""@en . ?v4 <http://dbpedia.org/ontology/capital> ?v0 . ?v2 <http://dbpedia.org/ontology/restingPlace> ?result . ?result <http://dbpedia.org/ontology/country> ?v4 . ?v2 <http://dbpedia.org/ontology/battle> <http://dbpedia.org/resource/Spanish_Civil_War> . }","```sparql
SELECT ?country WHERE {
  ?entity rdfs:label ""Cementerio de la Almudena""@en .
  ?entity dbo:location dbr:Madrid .
  ?entity dbo:militaryForce dbr:Spanish_Civil_War_Military_Force .
  ?entity dbo:territoryAdministered ?country .
  FILTER (lang(?label) = 'en' && regex(str(?label), ""Spain"", ""i""))
}
```",5,6,6,3,2,3,2,20,0,0,4,0,0.0,0
582,71,test,"Give me the figure known as the nickname of the team, that is an organisation, of Hajime Moriyasu and player in the father, that is an athlete and a soccer manager and a sports manager, of the child of Kazuaki Nagasawa and reference to the residence of the reference, that is a scientist, to Hirotaka Sugawara.","SELECT ?result WHERE { ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Athlete>. ?v4 <http://dbpedia.org/property/father> ?v5 . ?v1 <http://dbpedia.org/property/residence> ?v2 . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerManager>. ?v7 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?v7 <http://dbpedia.org/property/nickname> ?v8 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Scientist>. ?result <http://dbpedia.org/property/nickname> ?v8 . ?v5 <http://dbpedia.org/ontology/team> ?result . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsManager>. ?v7 <http://dbpedia.org/ontology/coach> <http://dbpedia.org/resource/Hajime_Moriyasu> . ?v1 <http://xmlns.com/foaf/0.1/name> ""Hirotaka Sugawara""@en . ?v4 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Kazuaki_Nagasawa> . ?result <http://xmlns.com/foaf/0.1/name> ?v2 . }","```sparql
# Step 1: Get Hajime Moriyasu's team nickname
SELECT ?team ?nickname WHERE {
  ?person dbo:occupation dbp:Soccer_manager .
  ?person foaf:name ""Hajime Moriyasu""@en .
  ?person dbo:managerOf ?team .
  OPTIONAL { ?team rdfs:label ?nickname . FILTER (lang(?nickname) = 'en') }
}

# Step 2: Get Kazuaki Nagasawa's father
SELECT ?father WHERE {
  ?child foaf:name ""Kazuaki Nagasawa""@en .
  ?child dbo:parent ?father .
  ?father dbo:occupation dbp:Athlete ;
          dbo:occupation dbp:Soccer_manager ;
          dbo:occupation dbp:Sports_manager .
}

# Step 3: Get the scientist related to Hirotaka Sugawara and their residence
SELECT ?scientist ?residence WHERE {
  ?person foaf:name ""Hirotaka Sugawara""@en .
  ?person dbo:relatedTo ?scientist .
  ?scientist a dbo:Scientist ;
             dbo:residenceLocation ?location .
  ?location rdfs:label ?residence . FILTER (lang(?residence) = 'en')
}

# Step 4: Combine results to get the final figure
SELECT ?teamNickname WHERE {
  # Assuming we have variables from previous queries: ?team, ?father, ?scientist, ?residence
  VALUES (?team) { <URI_of_the_team> }
  VALUES (?father) { <URI_of_Kazuaki_Nagasawa's_father> }
  VALUES (?scientist) { <URI_of_the_scientist> }
  VALUES (?residence) { <URI_of_the_residence> }

  ?team rdfs:label ?teamNickname . FILTER (lang(?teamNickname) = 'en')
}
```",9,14,10,3,3,3,3,71,0,0,1,0,0.0,0
433,63,test,"Give me the associated musical artist of the person born, that is a musical artist and an artist, as the persona of Paul Chambers and associated musical artist of the associated musical artist, that is an artist and a musical artist, of Scott LaFaro and professional in the profession of Bob Marley.",SELECT ?result WHERE { <http://dbpedia.org/resource/Scott_LaFaro> <http://dbpedia.org/ontology/associatedMusicalArtist> ?v6 . ?v3 <http://dbpedia.org/property/birthName> ?v4 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. <http://dbpedia.org/resource/Paul_Chambers> <http://xmlns.com/foaf/0.1/givenName> ?v4 . ?v6 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. <http://dbpedia.org/resource/Bob_Marley> <http://dbpedia.org/property/occupation> ?v2 . ?result <http://dbpedia.org/property/occupation> ?v2 . ?v3 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v6 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. ?v6 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . },"```sparql
# Step 1: Find Paul Chambers' associated musical artist who is also an artist
SELECT ?paulArtist WHERE {
    dbpedia:Paul_Chambers dbo:associatedMusicalArtist ?paulArtist .
    ?paulArtist rdf:type dbo:Musician ;
                rdf:type dbo:Artist .
}

# Step 2: Use the result from Step 1 to find Scott LaFaro's associated musical artist who is also an artist
SELECT ?scottArtist WHERE {
    ?paulArtist dbpedia:Paul_Chambers dbo:associatedMusicalArtist ?paulArtist .
    ?paulArtist rdf:type dbo:Musician ;
                rdf:type dbo:Artist .
    
    ?paulArtist dbo:associatedMusicalArtist ?intermediateArtist .
    ?intermediateArtist dbo:associatedMusicalArtist ?scottArtist .
    ?scottArtist rdf:type dbo:Musician ;
                 rdf:type dbo:Artist .
}

# Step 3: Find the professional in the profession of Bob Marley related to the result from Step 2
SELECT ?finalArtist WHERE {
    ?scottArtist dbpedia:Scott_LaFaro dbo:associatedMusicalArtist ?scottArtist .
    ?scottArtist rdf:type dbo:Musician ;
                 rdf:type dbo:Artist .

    ?scottArtist dbo:associatedMusicalArtist ?intermediateArtist .
    ?intermediateArtist foaf:profession ?profession .
    
    dbpedia:Bob_Marley foaf:profession ?marleyProfession .
    
    FILTER(?profession = ?marleyProfession)
    
    ?intermediateArtist dbo:associatedMusicalArtist ?finalArtist .
}
```",7,11,8,3,3,3,3,71,0,0,1,0,0.0,0
715,62,test,"Give me the commander in the force of the mayor, that is an office holder and a politician and a president, of 1933 Spanish general election and commander in the force, that is a military conflict, of the native of Morocco and leader of Ministry of the Air (Spain).",SELECT ?result WHERE { ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v3 <http://dbpedia.org/ontology/commander> ?result . <http://dbpedia.org/resource/1933_Spanish_general_election> <http://dbpedia.org/property/leader> ?v0 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/President>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. <http://dbpedia.org/resource/Ministry_of_the_Air_(Spain)> <http://dbpedia.org/ontology/leader> ?result . ?v4 <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Morocco> . ?v6 <http://dbpedia.org/ontology/commander> ?v0 . ?v3 <http://dbpedia.org/ontology/commander> ?v4 . ?v6 <http://dbpedia.org/ontology/commander> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?person WHERE {
  ?person rdfs:label ""Juan Negrín""@en .
  OPTIONAL { ?person dbo:officeHolderOf dbr:1933_Spanish_general_election . }
  OPTIONAL { ?person dbo:politicalPartyMemberOf ?party . }
  OPTIONAL { ?person dbo:presidentOf ?country . }
  OPTIONAL { ?person dbo:militaryCommanderIn ?conflict .
             ?conflict dbo:location dbr:Morocco . }
  OPTIONAL { ?person dbo:ministerOf dbr:Ministry_of_the_Air_(Spain) . }
}
```",7,11,8,3,3,3,3,71,0,0,1,0,0.0,0
47,57,test,"Give me the office of the awardee of Padma Vibhushan and office of Suvendu Adhikari and office of the awardee of the award, that is an award, of Mantu Ghosh.",SELECT ?result WHERE { <http://dbpedia.org/resource/Suvendu_Adhikari> <http://dbpedia.org/property/office> ?result . ?v3 <http://dbpedia.org/property/office> ?result . ?v5 <http://dbpedia.org/property/awards> ?v0 . ?v3 <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/Padma_Vibhushan> . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Award>. ?v5 <http://dbpedia.org/property/office> ?result . <http://dbpedia.org/resource/Mantu_Ghosh> <http://dbpedia.org/property/awards> ?v0 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?padmaVibhushanOffice ?suvenduAdhikariOffice ?mantuGhoshAwardAwardeeOffice WHERE {
  # Find an office of a Padma Vibhushan awardee
  ?person dbo:award dbr:Padma_Vibhushan .
  ?person dbo:office ?padmaVibhushanOffice .

  # Find Suvendu Adhikari's office
  dbr:Suvendu_Adhikari dbo:office ?suvenduAdhikariOffice .

  # Find an award associated with Mantu Ghosh, then find the awardee of that award and their office
  ?mantuGhoshAward a dbo:Award .
  ?mantuGhoshAward dbo:recipient dbr:Mantu_Ghosh .
  ?awardAwardee dbo:award ?mantuGhoshAward .
  ?awardAwardee dbo:office ?mantuGhoshAwardAwardeeOffice
}
```",6,7,7,3,3,3,3,71,0,0,1,0,0.0,0
433,58,test,"Give me the associated musical artist of Paul Chambers and professional in the profession of the writer of Slowhand at 70 – Live at the Royal Albert Hall and associated musical artist of the associated musical artist, that is an artist and a musical artist, of Scott LaFaro.",SELECT ?result WHERE { ?result <http://dbpedia.org/property/occupation> ?v2 . <http://dbpedia.org/resource/Scott_LaFaro> <http://dbpedia.org/ontology/associatedMusicalArtist> ?v5 . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. <http://dbpedia.org/resource/Paul_Chambers> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. <http://dbpedia.org/resource/Slowhand_at_70_–_Live_at_the_Royal_Albert_Hall> <http://dbpedia.org/property/writer> ?v1 . ?v5 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v1 <http://dbpedia.org/property/occupation> ?v2 . },"```sparql
# Step 1: Find Paul Chambers' associated musical artist (Miles Davis)
SELECT ?artist WHERE {
  wd:Q12345 wdt:P106 wd:Q33999 . # Paul Chambers is a musician
  wd:Q12345 wdt:P527 ?associatedArtist .
  FILTER EXISTS { ?associatedArtist wdt:P106 wd:Q33999 } # Associated artist is also a musician
}

# Step 2: Find the writer of ""Slowhand at 70 – Live at the Royal Albert Hall"" (Eric Clapton)
SELECT ?writer WHERE {
  wd:Q123456 wdt:P50 wd:Q34567 . # Album written by Eric Clapton
}

# Step 3: Find Eric Clapton's associated musical artist (George Harrison)
SELECT ?associatedArtist WHERE {
  wd:Q34567 wdt:P106 wd:Q33999 . # Eric Clapton is a musician
  wd:Q34567 wdt:P527 ?associatedArtist .
  FILTER EXISTS { ?associatedArtist wdt:P106 wd:Q33999 } # Associated artist is also a musician
}

# Step 4: Find Scott LaFaro's associated musical artist (Bill Evans)
SELECT ?artist WHERE {
  wd:Q67890 wdt:P106 wd:Q33999 . # Scott LaFaro is a musician
  wd:Q67890 wdt:P527 ?associatedArtist .
  FILTER EXISTS { ?associatedArtist wdt:P106 wd:Q33999 } # Associated artist is also a musician
}

# Step 5: Find Bill Evans' associated musical artist (Miles Davis)
SELECT ?associatedArtist WHERE {
  wd:Q54321 wdt:P106 wd:Q33999 . # Bill Evans is a musician
  wd:Q54321 wdt:P527 ?associatedArtist .
  FILTER EXISTS { ?associatedArtist wdt:P106 wd:Q33999 } # Associated artist is also a musician
}

# Step 6: Find the common link (Miles Davis)
SELECT DISTINCT ?commonLink WHERE {
  VALUES ?artist1 { wd:Q12345 wd:Q54321 } # Paul Chambers or Bill Evans
  ?artist1 wdt:P527 ?commonLink .
  FILTER EXISTS { ?commonLink wdt:P106 wd:Q33999 } # Common link is a musician
}
```",6,8,7,3,3,3,3,71,0,0,1,0,0.0,0
987,56,test,"Give me the birth place of the band, that is an artist and a musical artist, of Šako Polumenta and birth place of Moamer Kasumović and entity in the region, that is a country, of the time zone, that is a sports event, in Canicosa de la Sierra.",SELECT ?result WHERE { ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. <http://dbpedia.org/resource/Canicosa_de_la_Sierra> <http://dbpedia.org/ontology/timeZone> ?v4 . <http://dbpedia.org/resource/Moamer_Kasumović> <http://dbpedia.org/ontology/birthPlace> ?result . <http://dbpedia.org/resource/Šako_Polumenta> <http://dbpedia.org/ontology/associatedMusicalArtist> ?v2 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsEvent>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?v0 <http://dbpedia.org/property/timeZone> ?v4 . ?v2 <http://dbpedia.org/ontology/birthPlace> ?result . ?result <http://dbpedia.org/ontology/country> ?v0 . },"```sparql
# Query to find the band associated with Šako Polumenta
SELECT ?band WHERE {
  ?band dbo:artist dbr:Šako_Polumenta .
}

# Query to find Moamer Kasumović's birthplace
SELECT ?birthPlace WHERE {
  dbr:Moamer_Kasumović dbo:birthPlace ?birthPlace .
}

# Query to find the country of Canicosa de la Sierra
SELECT ?country WHERE {
  dbpedia-es:Canicosa_de_la_Sierra dbo:location ?location .
  ?location rdf:type dbo:AdministrativeRegion ;
            dbo:country ?country .
}
```",6,10,7,3,3,3,3,71,0,0,1,0,0.0,0
445,70,test,"Give me the death place of the awardee of the establishment of 1820-03-10 and entity in the residence, that is a country, of Anna Sharkey and entity in the award of the commander in Battle of Saint-Mihiel.","SELECT ?result WHERE { ?v7 <http://dbpedia.org/ontology/deathPlace> ?result . ?result <http://dbpedia.org/ontology/country> ?v3 . <http://dbpedia.org/resource/Anna_Sharkey> <http://dbpedia.org/property/residence> ?v4 . <http://dbpedia.org/resource/Battle_of_Saint-Mihiel> <http://dbpedia.org/ontology/commander> ?v1 . ?result <http://dbpedia.org/ontology/location> ?v4 . ?v7 <http://dbpedia.org/property/awards> ?v0 . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. ?v0 <http://dbpedia.org/ontology/foundingDate> ""1820-03-10""^^<http://www.w3.org/2001/XMLSchema#date> . ?v1 <http://dbpedia.org/property/awards> ?v3 . }","```sparql
# Step 1: Find the awardee of March 10, 1820
SELECT ?awardee WHERE {
  ?award dbp:date ""1820-03-10"" ;
         dbo:recipient ?awardee .
}

# Step 2: Determine Anna Sharkey's residence country
SELECT ?country WHERE {
  wd:Q1234567 dbo:residenceCountry ?country . # Replace Q1234567 with Anna Sharkey's DBpedia ID
}

# Step 3: Find the commander in the Battle of Saint-Mihiel and their award
SELECT ?commander ?award WHERE {
  ?battle dbp:name ""Battle of Saint-Mihiel"" ;
          dbo:commander ?commander .
  ?commander dbo:receivedAward ?award .
}

# Step 4: Find the death place of the awardee from March 10, 1820
SELECT ?deathPlace WHERE {
  ?awardee dbp:dateOfDeath ?dateOfDeath ;
           dbp:placeOfDeath ?deathPlace .
}

# Step 5: Identify an entity related to both Anna Sharkey's residence country and the commander's award
SELECT DISTINCT ?entity WHERE {
  ?entity dbo:country ?country .
  ?entity dbo:award ?award .
}
```

Note: Replace `wd:Q1234567` with the actual DBpedia ID for Anna Sharkey. The query assumes that the relationships are directly available in DBpedia, which may require adjustments based on actual data availability.",8,9,9,3,3,3,3,71,0,0,1,0,0.0,0
465,66,test,"Give me the successor of the child of Alfonso I d'Este and spouse of the child, that is a royalty, of Ferdinand I, Holy Roman Emperor and successor of the child, that is a royalty, of the parent of Charles Orlando, Dauphin of France.","SELECT ?result WHERE { ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v6 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. <http://dbpedia.org/resource/Ferdinand_I,_Holy_Roman_Emperor> <http://dbpedia.org/ontology/child> ?v6 . ?result <http://dbpedia.org/ontology/spouse> ?v6 . ?v2 <http://dbpedia.org/ontology/successor> ?result . ?v1 <http://dbpedia.org/ontology/child> ?v2 . ?v3 <http://dbpedia.org/ontology/successor> ?result . ?v3 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Alfonso_I_d'Este> . <http://dbpedia.org/resource/Charles_Orlando,_Dauphin_of_France> <http://dbpedia.org/ontology/parent> ?v1 . }","```sparql
# Step 1: Find Lucrezia Borgia's notable child and their successor
SELECT ?child ?successor WHERE {
  wd:Q123456 wdt:P40 wd:Q789012 . # Alfonso I d'Este (Q123456) has a child (P40) who is Lucrezia Borgia (Q789012)
  ?child wdt:P40 wd:Q789012 .
  ?child wdt:P1128 ?successor . # Successor of the child
}

# Step 2: Find Maximilian II's notable royal child and their spouse, then find the successor
SELECT ?royalChild ?spouse ?successor WHERE {
  wd:Q234567 wdt:P40 ?royalChild . # Ferdinand I (Q234567) has a child (P40)
  ?royalChild wdt:P31/wdt:P279* wd:Q987654 . # The child is royalty (Q987654)
  ?royalChild wdt:P26 ?spouse . # Spouse of the royal child
  ?spouse wdt:P1128 ?successor . # Successor of the spouse
}

# Step 3: Find Louis XVI's notable child and their successor
SELECT ?child ?successor WHERE {
  wd:Q345678 wdt:P40 ?child . # Louis XVI (Q345678) has a child (P40)
  ?child wdt:P1128 ?successor . # Successor of the child
}

# Combine results to find the final successor
SELECT ?finalSuccessor WHERE {
  VALUES ?intermediate1 { ?successor1 } # From Step 1
  VALUES ?intermediate2 { ?successor2 } # From Step 2
  ?finalSuccessor wdt:P1128 ?intermediate1 .
  ?finalSuccessor wdt:P1128 ?intermediate2 .
}
```

Note: The above SPARQL query uses placeholders like `wd:Q123456` for Alfonso I d'Este, which need to be replaced with the actual DBpedia identifiers. Similarly, other placeholders should be replaced with correct identifiers from DBpedia.",7,9,8,3,3,3,3,71,0,0,1,0,0.0,0
98,28,test,"Give me the birth place of the person born as Paolo Elito M. Ballesteros IV and region of the time zone of Lopez Jaena and entity in the region, that is a country, of Philippine Standard Time.","SELECT ?result WHERE { <http://dbpedia.org/resource/Lopez_Jaena> <http://dbpedia.org/ontology/timeZone> ?v1 . ?v3 <http://dbpedia.org/property/birthName> ""Paolo Elito M. Ballesteros IV""@en . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. ?result <http://dbpedia.org/ontology/country> ?v5 . ?result <http://dbpedia.org/ontology/timeZone> ?v1 . ?v5 <http://dbpedia.org/property/timeZone> <http://dbpedia.org/resource/Philippine_Standard_Time> . ?v3 <http://dbpedia.org/ontology/birthPlace> ?result . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?birthPlace ?region ?country
WHERE {
  # Find the birthplace of Paolo Elito M. Ballesteros IV
  OPTIONAL { 
    dbr:Paolo_Elito_M._Ballesteros_IV dbo:birthPlace ?birthPlace .
  }

  # Determine the region for Lopez Jaena
  dbr:Lopez_Jaena dbo:locatedInRegion ?region .

  # Find any country entity in that region using PST
  OPTIONAL {
    ?country dbo:timeZone dbr:Philippine_Standard_Time ;
             dbo:location ?region .
  }
}
```",6,7,7,2,3,2,3,28,0,0,2,0,0.0,0
47,68,test,"Give me the office of the administration of the commander, that is a politician, in Operation Green Hunt and office of the awardee of the award, that is an award, of Mantu Ghosh and office of the awardee of Padma Vibhushan.",SELECT ?result WHERE { ?v4 <http://dbpedia.org/property/governor> ?v5 . ?v7 <http://dbpedia.org/property/awards> ?v0 . <http://dbpedia.org/resource/Operation_Green_Hunt> <http://dbpedia.org/ontology/commander> ?v5 . ?v3 <http://dbpedia.org/property/office> ?result . ?v3 <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/Padma_Vibhushan> . <http://dbpedia.org/resource/Mantu_Ghosh> <http://dbpedia.org/property/awards> ?v0 . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v7 <http://dbpedia.org/property/office> ?result . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Award>. ?v4 <http://dbpedia.org/property/office> ?result . },"```sparql
# Query 1: Office of the administration of the commander in Operation Green Hunt
SELECT ?office WHERE {
  ?person dbo:occupation dbr:Politician .
  ?operation dbo:commander ?person .
  FILTER(CONTAINS(LCASE(?operation), ""operation green hunt"")) .
  ?person dbo:office ?office .
}

# Query 2: Office of the awardee of Mantu Ghosh's award
SELECT ?award ?recipientOffice WHERE {
  ?award dbo:awardedTo ?recipient .
  ?recipient rdfs:label ?name .
  FILTER(CONTAINS(LCASE(?name), ""mantu ghosh"")) .
  OPTIONAL { ?recipient dbo:office ?recipientOffice . }
}

# Query 3: Office of the awardee of Padma Vibhushan
SELECT DISTINCT ?recipient ?recipientOffice WHERE {
  ?award dbo:category dbr:Padma_Vibhushan .
  ?award dbo:awardedTo ?recipient .
  OPTIONAL { ?recipient dbo:office ?recipientOffice . }
}
```",8,10,9,3,3,3,3,71,0,0,1,0,0.0,0
582,70,test,"Give me the player in the father, that is an athlete and a soccer manager and a sports manager, of the child of Kazuaki Nagasawa and figure known as the nickname of the team, that is an organisation, of Hajime Moriyasu and reference to the residence of Hirotaka Sugawara.",SELECT ?result WHERE { <http://dbpedia.org/resource/Hirotaka_Sugawara> <http://dbpedia.org/property/residence> ?v4 . ?v0 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Kazuaki_Nagasawa> . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?v7 <http://dbpedia.org/ontology/team> ?result . ?v1 <http://dbpedia.org/ontology/coach> <http://dbpedia.org/resource/Hajime_Moriyasu> . ?v7 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Athlete>. ?v7 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsManager>. ?v0 <http://dbpedia.org/property/father> ?v7 . ?v7 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerManager>. ?result <http://dbpedia.org/property/nickname> ?v3 . ?result <http://xmlns.com/foaf/0.1/name> ?v4 . ?v1 <http://dbpedia.org/property/nickname> ?v3 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?player WHERE {
  # Step 1: Identify Kazuaki Nagasawa's child
  ?child dbo:parent dbr:Kazuaki_Nagasawa .
  
  # Step 2: Find the father of that child
  ?father dbo:spouse ?mother .
  ?child dbo:parent ?father .

  # Step 3: Check if this father is an athlete and a soccer manager and a sports manager
  ?father rdf:type dbo:Athlete ;
          rdf:type dbo:SoccerManager ;
          rdf:type dbo:SportsManager .

  # Step 4: Identify Hajime Moriyasu's team nickname
  ?team dbo:manager dbr:Hajime_Moriyasu .
  ?team dbo:nickname ?nickname .

  # Step 5: Find the organization related to that nickname
  ?organization dbo:nickname ?nickname ;
                rdf:type dbo:Organization .

  # Step 6: Determine Hirotaka Sugawara's residence reference
  dbr:Hirotaka_Sugawara dbo:residence ?residence .
  
  # Ensure all conditions are met
  FILTER(?father = ?player)
}
```",8,12,9,3,3,3,3,71,0,0,1,0,0.0,0
274,24,test,"Give me the associated musical artist of the actor, that is a musical artist, of Imagine the Sound and professional in the designer of Tetris Classic.",SELECT ?result WHERE { ?result <http://dbpedia.org/property/occupation> ?v2 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. <http://dbpedia.org/resource/Tetris_Classic> <http://dbpedia.org/property/designer> ?v2 . <http://dbpedia.org/resource/Imagine_the_Sound> <http://dbpedia.org/property/starring> ?v0 . ?v0 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?actorArtist WHERE {
  ?actorArtist dbo:occupation dbr:Actor .
  ?actorArtist dbo:occupation dbr:Musical_artist .
  ?actorArtist dbo:associatedBandOrMusicalGroup dbr:Imagine_the_Sound .

  OPTIONAL { 
    ?tetrisDesigner dbo:profession dbr:Tetris_Classic_designer .
    ?actorArtist dbo:collaborator ?tetrisDesigner .
  }
}
```",4,5,5,2,2,2,3,28,0,0,6,0,0.0,0
582,63,test,"Give me the player in the father, that is an athlete and a soccer manager and a sports manager, of Masami Nagasawa and reference to the residence of the reference, that is a scientist, to Hirotaka Sugawara and figure known as the nickname of Japan national football team.","SELECT ?result WHERE { <http://dbpedia.org/resource/Masami_Nagasawa> <http://dbpedia.org/property/father> ?v6 . ?v6 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Athlete>. ?result <http://dbpedia.org/property/nickname> ?v2 . ?result <http://xmlns.com/foaf/0.1/name> ?v3 . ?v4 <http://xmlns.com/foaf/0.1/name> ""Hirotaka Sugawara""@en . ?v6 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsManager>. ?v4 <http://dbpedia.org/property/residence> ?v3 . <http://dbpedia.org/resource/Japan_national_football_team> <http://dbpedia.org/property/nickname> ?v2 . ?v6 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerManager>. ?v6 <http://dbpedia.org/ontology/team> ?result . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Scientist>. }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?player ?residence ?nickname WHERE {
  # Find Masami Nagasawa's father who is an athlete and a soccer manager
  ?father dbo:spouse dbr:Masami_Nagasawa ;
          a dbo:Athlete, dbo:SoccerManager .

  # Find the scientist related to Hirotaka Sugawara
  ?scientist dbo:relatedTo dbr:Hirotaka_Sugawara ;
             a dbo:Scientist .

  # Get the residence of the scientist
  ?scientist dbo:residenceLocation ?residence .

  # Find the nickname of the Japan national football team
  dbr:Japan_national_football_team dbo:nickname ?nickname .
}
```",7,11,8,3,3,3,3,71,0,0,1,0,0.0,0
98,24,test,"Give me the birth place of the person born as Paolo Elito M. Ballesteros IV and entity in the region, that is a country, of Philippine Standard Time.","SELECT ?result WHERE { ?v2 <http://dbpedia.org/ontology/birthPlace> ?result . ?v1 <http://dbpedia.org/property/timeZone> <http://dbpedia.org/resource/Philippine_Standard_Time> . ?result <http://dbpedia.org/ontology/country> ?v1 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. ?v2 <http://dbpedia.org/property/birthName> ""Paolo Elito M. Ballesteros IV""@en . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?birthPlaceLabel ?countryLabel
WHERE {
  # Find the birthplace of Paolo Elito M. Ballesteros IV
  ?person a dbo:Person ;
          foaf:name ""Paolo Elito M. Ballesteros IV"" ;
          dbo:birthPlace ?birthPlace .
  
  # Get the label for the birth place
  ?birthPlace rdfs:label ?birthPlaceLabel .

  # Find countries in the region of Philippine Standard Time (PST)
  ?country dbp:timeZone ""Philippine Standard Time"" ;
           rdfs:label ?countryLabel .
}
```",4,5,5,2,2,2,3,28,0,0,2,0,0.0,0
839,71,test,"Give me the band of the person born, that is a musical artist, as the persona of Kevin Russell (musician) and band of the band, that is a musical artist, of the professional in Musician and band of the member of the band, that is a band and a group, of Peter Schorowsky.","SELECT ?result WHERE { ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Group>. ?v7 <http://dbpedia.org/ontology/associatedMusicalArtist> ?v8 . ?v8 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. <http://dbpedia.org/resource/Kevin_Russell_(musician)> <http://xmlns.com/foaf/0.1/givenName> ?v1 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?v4 <http://dbpedia.org/ontology/bandMember> ?v5 . ?result <http://dbpedia.org/ontology/bandMember> ?v5 . <http://dbpedia.org/resource/Peter_Schorowsky> <http://dbpedia.org/ontology/associatedMusicalArtist> ?v4 . ?result <http://dbpedia.org/ontology/bandMember> ?v8 . ?v7 <http://dbpedia.org/property/occupation> ""Musician""@en . ?v2 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v2 <http://dbpedia.org/property/birthName> ?v1 . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Band>. }","```sparql
# Query for Kevin Russell's band
SELECT ?band WHERE {
  ?person foaf:name ""Kevin Russell"" .
  ?person dbo:birthDate ?birthdate .
  ?person dbo:occupation dbp:musician .
  ?person dbo:associatedBand ?band .
}

UNION

# Query for bands of the bands associated with Kevin Russell
SELECT ?subBand WHERE {
  ?band dbo:associatedBand ?subBand .
  ?subBand a dbo:MusicalArtist .
}

UNION

# Query for Peter Schorowsky's band
SELECT ?band WHERE {
  ?person foaf:name ""Peter Schorowsky"" .
  ?person dbo:memberOf ?band .
  ?band a dbo:Band ;
        a dbo:Group .
}
```",9,13,10,3,3,3,3,71,0,0,1,0,0.0,0
456,58,test,"Give me the band of the band, that is a musical artist, of the band of Alan Doyle and professional in the alter ego of The Shadow and spouse of Danielle Spencer (Australian actress).",SELECT ?result WHERE { <http://dbpedia.org/resource/Alan_Doyle> <http://dbpedia.org/ontology/associatedMusicalArtist> ?v1 . ?v1 <http://dbpedia.org/ontology/associatedMusicalArtist> ?v2 . ?result <http://dbpedia.org/property/occupation> ?v5 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. <http://dbpedia.org/resource/The_Shadow> <http://dbpedia.org/property/alterEgo> ?v5 . ?v2 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . <http://dbpedia.org/resource/Danielle_Spencer_(Australian_actress)> <http://dbpedia.org/ontology/spouse> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?band WHERE {
  # Alan Doyle's band
  dbr:Alan_Doyle dbo:musicalArtist dbr:Great_Big_Sea .
  
  # Michael Jai White as The Shadow (The Green Hornet)
  dbr:The_Green_Hornet_2011_Film dbo:actor dbr:Michael_Jai_White ;
                                  dbo:alterEgo dbr:The_Shadow .

  # Danielle Spencer's profession
  dbr:Danielle_Spencer dbo:spouse dbr:Michael_Jai_White ;
                      a dbo:Actor .
  
  # Find the band associated with Great Big Sea and Danielle Spencer
  ?band dbo:musicalArtist dbr:Great_Big_Sea .
  ?band dbo:member dbr:Danielle_Spencer .
}
```",6,7,7,3,3,3,3,71,0,0,1,0,0.0,0
445,67,test,Give me the entity in England and entity in the award of the commander in Battle of Saint-Mihiel and death place of the awardee of the establishment of 1820-03-10.,"SELECT ?result WHERE { ?v0 <http://dbpedia.org/ontology/foundingDate> ""1820-03-10""^^<http://www.w3.org/2001/XMLSchema#date> . ?v6 <http://dbpedia.org/property/awards> ?v0 . <http://dbpedia.org/resource/Battle_of_Saint-Mihiel> <http://dbpedia.org/ontology/commander> ?v1 . ?v6 <http://dbpedia.org/ontology/deathPlace> ?result . ?v1 <http://dbpedia.org/property/awards> ?v3 . ?result <http://dbpedia.org/ontology/country> ?v3 . ?result <http://dbpedia.org/ontology/location> <http://dbpedia.org/resource/England> . }","```sparql
# Step 1: Find the commander awarded for the Battle of Saint-Mihiel
SELECT ?commander WHERE {
  ?battle dbo:type dbr:Battle_of_Saint-Mihiel .
  ?award dbo:recipient ?commander ;
         dbo:awardedFor ?battle .
}

# Step 2: Determine the death place of this commander
SELECT ?deathPlace WHERE {
  ?commander dbo:deathPlace ?deathPlace .
}

# Step 3: Identify an entity established on March 10, 1820
SELECT ?entity WHERE {
  ?entity dbo:dateEstablished ""1820-03-10""^^xsd:date .
}

# Step 4: Find an entity in England related to the death place
SELECT ?englishEntity WHERE {
  ?deathPlace dbo:location ?relatedLocation .
  ?englishEntity dbo:location dbr:England ;
                 dbo:relatedTo ?relatedLocation .
}
```",7,7,8,3,3,3,3,71,0,0,1,0,0.0,0
41,25,test,"Give me the party of Enda Kenny and party of the leader, that is a politician and an office holder, of 2005 Castlereagh Borough Council election and party of the person born as David Declan Costello.","SELECT ?result WHERE { ?v4 <http://dbpedia.org/ontology/party> ?result . <http://dbpedia.org/resource/2005_Castlereagh_Borough_Council_election> <http://dbpedia.org/property/leader> ?v4 . ?v1 <http://dbpedia.org/property/birthName> ""David Declan Costello""@en . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. <http://dbpedia.org/resource/Enda_Kenny> <http://dbpedia.org/ontology/party> ?result . ?v1 <http://dbpedia.org/ontology/party> ?result . }","```sparql
# Query for Enda Kenny's party
SELECT ?party WHERE {
  ?person foaf:name ""Enda Kenny""@en .
  ?person dbo:politicalParty ?party .
}

UNION

# Query for the leader of the 2005 Castlereagh Borough Council election and their party
SELECT DISTINCT ?leader ?party WHERE {
  ?election dbo:electionDate ?date ;
            dbo:officeHolder ?holder .
  FILTER (YEAR(?date) = 2005 && STRSTARTS(STR(?election), ""Castlereagh Borough Council""))
  ?holder foaf:name ?leader .
  OPTIONAL { ?holder dbo:politicalParty ?party }
}

UNION

# Query for David Declan Costello's party
SELECT ?party WHERE {
  ?person foaf:name ""David Declan Costello""@en .
  ?person dbo:birthName ""David Declan Costello""@en .
  ?person dbo:politicalParty ?party .
}
```",5,7,6,2,3,2,3,28,0,0,1,0,0.0,0
826,57,test,"Give me the predecessor of the parent of Prince Friedrich of Hesse and by Rhine and spouse of Anna Magdalena Appel and successor of the child, that is a royalty, of the reference, that is a royalty, to Louis I.","SELECT ?result WHERE { ?v5 <http://dbpedia.org/ontology/successor> ?result . ?result <http://dbpedia.org/ontology/successor> ?v3 . <http://dbpedia.org/resource/Prince_Friedrich_of_Hesse_and_by_Rhine> <http://dbpedia.org/ontology/parent> ?v3 . <http://dbpedia.org/resource/Anna_Magdalena_Appel> <http://dbpedia.org/ontology/spouse> ?result . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v0 <http://xmlns.com/foaf/0.1/name> ""Louis I""@en . ?v0 <http://dbpedia.org/ontology/child> ?v5 . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. }","```sparql
SELECT ?predecessor WHERE {
  ?friedrich rdf:type dbo:Person ;
             foaf:name ""Prince Friedrich of Hesse and by Rhine""@en .
  ?annaMagdalenaAppel rdf:type dbo:Person ;
                      foaf:name ""Anna Magdalena Appel""@en .
  ?bach rdf:type dbo:Person ;
        foaf:name ""Johann Sebastian Bach""@en ;
        dbo:spouse ?annaMagdalenaAppel .
  ?princessAlice rdf:type dbo:Person ;
                 foaf:name ""Princess Alice of the United Kingdom""@en ;
                 dbo:childOf ?friedrich .
  ?albertEdward rdf:type dbo:Person ;
                foaf:name ""Albert Edward, Prince of Wales""@en ;
                dbo:parent ?princessAlice .
  ?queenVictoria rdf:type dbo:Person ;
                 foaf:name ""Queen Victoria""@en ;
                 dbo:parent ?albertEdward .
  ?ludwigII rdf:type dbo:Person ;
            foaf:name ""Ludwig II of Bavaria""@en .
  ?luitpold rdf:type dbo:Person ;
            foaf:name ""Luitpold, Prince Regent of Bavaria""@en ;
            dbo:succeededBy ?ludwigIII ;
            dbo:predecessor ?ludwigII .
  ?ludwigIII rdf:type dbo:Person ;
             foaf:name ""Ludwig III of Bavaria""@en ;
             dbo:successorOf ?luitpold .
}
```",6,8,7,3,3,3,3,71,0,0,1,0,0.0,0
965,64,test,"Give me the parent of the person born, that is a noble, as the birth name of George Mountbatten, 2nd Marquess of Milford Haven and parent of Louise Mountbatten and spouse of the spouse of the parent of Louise Mountbatten.","SELECT ?result WHERE { <http://dbpedia.org/resource/Louise_Mountbatten> <http://dbpedia.org/ontology/parent> ?result . ?v0 <http://dbpedia.org/property/birthName> ?v5 . ?v4 <http://dbpedia.org/ontology/spouse> ?v2 . <http://dbpedia.org/resource/Louise_Mountbatten> <http://dbpedia.org/ontology/parent> ?v4 . ?v0 <http://dbpedia.org/ontology/parent> ?result . ?result <http://dbpedia.org/ontology/spouse> ?v2 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Noble>. <http://dbpedia.org/resource/George_Mountbatten,_2nd_Marquess_of_Milford_Haven> <http://dbpedia.org/property/birthName> ?v5 . }","```sparql
SELECT ?parent WHERE {
  ?georgeMountbatten dbo:birthName ""George Mountbatten, 2nd Marquess of Milford Haven""@en .
  ?georgeMountbatten dbo:spouse ?spouse .
  ?spouse dbo:child ?louiseMountbatten .
  ?louiseMountbatten rdfs:label ""Louise Mountbatten""@en .
  ?spouse dbo:parent ?parent .
}
```",7,8,8,3,3,3,3,71,0,0,2,0,0.0,0
192,20,test,"Give me the child of the child of the parent of Anna of Hungary (Byzantine empress) and spouse of the spouse, that is a royalty, of the child of Charles II of Naples.",SELECT ?result WHERE { ?v4 <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Anna_of_Hungary_(Byzantine_empress)> . ?v5 <http://dbpedia.org/property/father> ?v4 . ?result <http://dbpedia.org/ontology/parent> ?v5 . ?v1 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Charles_II_of_Naples> . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v2 <http://dbpedia.org/ontology/spouse> ?v1 . ?v2 <http://dbpedia.org/ontology/spouse> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?result WHERE {
  # Step 1: Find Anna of Hungary (Byzantine empress)
  ?anna a dbo:Person ;
        foaf:name ""Anna of Hungary"" ;
        dbo:spouse ?husband .

  # Step 2: Identify her parent
  ?parent dbo:child ?anna .

  # Step 3: Find the child of Anna's parent (sibling or another child)
  ?sibling dbo:parent ?parent .

  # Step 4: Determine the spouse of this sibling
  ?spouseSibling a dbo:Person ;
                 dbo:spouse ?sibling .

  # Step 5: Identify Charles II of Naples and his child
  ?charlesII a dbo:Person ;
             foaf:name ""Charles II of Naples"" .
  ?childOfCharlesII dbo:parent ?charlesII .

  # Step 6: Find the spouse of Charles II's child
  ?spouseChild a dbo:Person ;
               dbo:spouse ?childOfCharlesII .

  # Step 7: Combine relationships to find the royalty
  ?result a dbo:Royalty ;
          dbo:parent ?sibling ;  # Child of Anna's parent
          dbo:spouse ?spouseChild .  # Spouse of spouse of Charles II's child
}
```",6,7,7,3,2,3,2,20,0,0,1,0,0.0,0
865,62,test,"Give me the native of the residence, that is a country, of the person decedent at Patna and father of Shahla Khatun and father of the child, that is a politician, of the spouse of Syeda Shahar Banu.",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/birthPlace> ?v0 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. <http://dbpedia.org/resource/Syeda_Shahar_Banu> <http://dbpedia.org/ontology/spouse> ?v2 . ?v4 <http://dbpedia.org/property/father> ?result . ?v1 <http://dbpedia.org/property/residence> ?v0 . ?v4 <http://dbpedia.org/property/father> ?v2 . <http://dbpedia.org/resource/Shahla_Khatun> <http://dbpedia.org/property/father> ?result . ?v1 <http://dbpedia.org/ontology/deathPlace> <http://dbpedia.org/resource/Patna> . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. },"```sparql
SELECT ?nativePlace WHERE {
  # Step 1: Identify the person who died in Patna
  ?person dbo:deathPlace dbr:Patna .
  
  # Step 2: This person is the father of Shahla Khatun
  ?person dbo:child dbr:Shahla_Khatun .

  # Step 3: Find Syeda Shahar Banu's spouse
  ?spouse wdt:P26 ?syedaShaharBanu .
  
  # Step 4: Identify the child of this spouse who is a politician
  ?politician dbo:parent ?spouse ;
              rdf:type dbo:Politician .

  # Step 5: This politician's parent (the decedent) should be the same person identified in step 1
  ?person dbo:child ?politician .
  
  # Step 6: Determine the residence country of this person
  ?person dbo:residenceCountry ?country .

  # Step 7: Find the native place of that residence country
  ?country dbo:nativePlace ?nativePlace .
}
```",7,9,8,3,3,3,3,71,0,0,1,0,0.0,0
417,56,test,"Give me the child of the child, that is a royalty, of the parent, that is a royalty, of Alexandrine of Mecklenburg-Schwerin and spouse of the parent, that is a royalty, of Count Ingolf of Rosenborg and child of Christian X of Denmark.",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/parent> ?v1 . ?result <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Christian_X_of_Denmark> . ?v1 <http://dbpedia.org/property/father> ?v0 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. <http://dbpedia.org/resource/Alexandrine_of_Mecklenburg-Schwerin> <http://dbpedia.org/ontology/parent> ?v0 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v2 <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Count_Ingolf_of_Rosenborg> . ?result <http://dbpedia.org/ontology/spouse> ?v2 . },"```sparql
SELECT ?finalChild WHERE {
  # Step 1: Find Alexandrine's spouse
  ?alexandrine dbo:spouse ?spouse .
  FILTER (str(?alexandrine) = ""Alexandrine of Mecklenburg-Schwerin"") .

  # Step 2: Find the child of Alexandrine and her spouse
  ?child1 dbo:parent ?alexandrine ;
         dbo:parent ?spouse .

  # Step 3: Find Count Ingolf's royal parent
  ?countIngolf dbo:parent ?royalParent .
  FILTER (str(?countIngolf) = ""Count Ingolf of Rosenborg"") .

  # Step 4: Find the spouse of this royal parent
  ?spouse2 dbo:spouse ?royalParent .

  # Step 5: Identify their child who is also a royalty and a child of Christian X
  ?child2 dbo:parent ?royalParent ;
         dbo:parent ?spouse2 .
  ?child2 dbo:parent dbr:Christian_X_of_Denmark .

  # Step 6: Find the child of this identified royalty (child2)
  ?finalChild dbo:parent ?child2 .
}
```",6,9,7,3,3,3,3,71,0,0,1,0,0.0,0
47,70,test,"Give me the office of the awardee of the entity, that is an award, in India and office of the awardee of the award, that is an award, of Mantu Ghosh and office of the administration of Jagdeep Dhankhar.",SELECT ?result WHERE { ?v3 <http://dbpedia.org/property/awards> ?v1 . <http://dbpedia.org/resource/Mantu_Ghosh> <http://dbpedia.org/property/awards> ?v0 . ?v3 <http://dbpedia.org/property/office> ?result . ?v4 <http://dbpedia.org/property/office> ?result . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Award>. ?v7 <http://dbpedia.org/property/awards> ?v0 . ?v1 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/India> . ?v4 <http://dbpedia.org/property/governor> <http://dbpedia.org/resource/Jagdeep_Dhankhar> . ?v7 <http://dbpedia.org/property/office> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Award>. },"```sparql
# Query 1: Office of the Awardee of an Award in India
SELECT DISTINCT ?award ?office WHERE {
  ?award a dbo:Award ;
        dbo:country dbr:India .
  OPTIONAL { ?award dbo:recipient ?person . }
  OPTIONAL { ?person dbo:position ?office . }
} LIMIT 10

# Query 2: Office of the Awardee of Mantu Ghosh's Awards
SELECT DISTINCT ?award ?office WHERE {
  ?award a dbo:Award ;
        dbo:recipient dbr:Mantu_Ghosh .
  OPTIONAL { ?award dbo:recipient ?person . }
  OPTIONAL { ?person dbo:position ?office . }
} LIMIT 10

# Query 3: Office of the Administration of Jagdeep Dhankhar
SELECT DISTINCT ?office WHERE {
  dbr:Jagdeep_Dhankhar dbo:position ?office .
}
```",8,10,9,3,3,3,3,71,0,0,1,0,0.0,0
508,18,test,"Give me the birthplace of the commander, that is Saudi, in Central Plains War and birthplace of the commander, that is a politician, in the war, that is a military conflict and a societal event and an event, of Hayao Tada.",SELECT ?result WHERE { ?v3 <http://dbpedia.org/ontology/birthPlace> ?result . <http://dbpedia.org/resource/Hayao_Tada> <http://dbpedia.org/ontology/battle> ?v1 . ?v1 <http://dbpedia.org/ontology/commander> ?v2 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v2 <http://dbpedia.org/ontology/birthPlace> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. <http://dbpedia.org/resource/Central_Plains_War> <http://dbpedia.org/ontology/commander> ?v3 . ?v3 <http://dbpedia.org/ontology/nationality> <http://dbpedia.org/resource/Saudi_Arabia>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. },"```sparql
# Query for the birthplace of the Saudi commander in the Central Plains War
SELECT ?birthPlace WHERE {
  ?commander dbo:nationality dbr:Saudi_Arabia ;
             dbo:occupation dbr:Military_person .
  ?commander dbo:almaMater ?school .
  ?event dbo:participatedIn ?commander ;
         rdfs:label ""Central Plains War""@en .
  ?commander foaf:birthPlace ?birthPlace .
}
```

```sparql
# Query for the birthplace of the commander who is a politician in a military conflict and societal event related to Hayao Tada
SELECT ?birthPlace WHERE {
  ?commander dbo:occupation dbr:Military_person ;
             dbo:occupation dbr:Politician .
  ?event dbo:participatedIn ?commander ;
         rdfs:label ?eventName .
  FILTER(CONTAINS(LCASE(?eventName), ""military conflict"") && CONTAINS(LCASE(?eventName), ""societal event"") && CONTAINS(LCASE(?eventName), ""hayao tada"")) .
  ?commander foaf:birthPlace ?birthPlace .
}
```",5,10,6,3,2,3,2,20,0,0,3,0,0.0,0
892,60,test,"Give me the entity in the profession of the true self of Enrico Crolla and entity in the administration, that is Italian and a region and a settlement and an administrative region, of the party, that is a political party and an organisation, of Andrea Cozzolino.","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/province> ?v0 . ?result <http://dbpedia.org/ontology/country> ?v2 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Region>. ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?v0 <http://dbpedia.org/property/leaderParty> ?v5 . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/PoliticalParty>. ?v4 <http://xmlns.com/foaf/0.1/givenName> ""Enrico Crolla""@en . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. <http://dbpedia.org/resource/Andrea_Cozzolino> <http://dbpedia.org/ontology/party> ?v5 . ?v4 <http://dbpedia.org/property/occupation> ?v2 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/AdministrativeRegion>. ?v0 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Italy>. }","```sparql
# Enrico Crolla's Profession
SELECT ?profession WHERE {
  ?enricoCrolla dbo:birthName ""Enrico Crolla""@it .
  ?enricoCrolla foaf:name ?realIdentity .
  ?realIdentity dbo:occupation ?profession .
}

UNION

# Andrea Cozzolino's Political Party and Region
SELECT DISTINCT ?region WHERE {
  ?cozzolino dbo:party ?party .
  ?party rdf:type dbo:PoliticalParty .
  ?party dbo:country dbr:Italy .
  ?region dbo:administrativeRegion ?party ;
          rdf:type dbo:Settlement ;
          dbo:country dbr:Italy .
}
```",6,12,7,3,2,3,3,71,0,0,587,0,0.0,0
917,71,test,"Give me the parent of the child, that is a royalty, of the mayor of Hawaiian Kingdom and child of the father of the child, that is a royalty, of Kamehameha III and child of the father of the spouse, that is a royalty, of Leleiohoku I.",SELECT ?result WHERE { ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v4 <http://dbpedia.org/property/father> ?v5 . ?v4 <http://dbpedia.org/ontology/spouse> <http://dbpedia.org/resource/Leleiohoku_I> . ?v7 <http://dbpedia.org/property/father> ?v8 . ?v7 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. <http://dbpedia.org/resource/Hawaiian_Kingdom> <http://dbpedia.org/property/leader> ?v1 . ?result <http://dbpedia.org/ontology/parent> ?v5 . ?v2 <http://dbpedia.org/property/father> ?v1 . <http://dbpedia.org/resource/Kamehameha_III> <http://dbpedia.org/ontology/child> ?v7 . ?result <http://dbpedia.org/property/father> ?v8 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?result <http://dbpedia.org/ontology/child> ?v2 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?parent WHERE {
  # Step 1: Child of Kamehameha I who is royalty
  ?child1 dbo:spouse ?mayor .
  ?mayor rdfs:label ""Kamehameha I""@en .
  ?child1 dbo:title ?title1 .
  FILTER(CONTAINS(LCASE(?title1), ""king"") || CONTAINS(LCASE(?title1), ""queen""))

  # Step 2: Child of the father of the child from step 1
  ?father1 dbo:spouse ?mayor .
  ?child2 dbo:parent ?father1 .
  ?child2 rdfs:label ?childLabel2 .

  # Step 3: Spouse of Leleiohoku I who is royalty
  ?spouseLeleiohoku dbo:spouse dbr:Leleiohoku_I .
  ?spouseLeleiohoku dbo:title ?titleSpouse .
  FILTER(CONTAINS(LCASE(?titleSpouse), ""king"") || CONTAINS(LCASE(?titleSpouse), ""queen""))

  # Step 4: Father of the spouse from step 3
  ?father2 dbo:child ?spouseLeleiohoku .

  # Step 5: Child of the father from step 4
  ?child3 dbo:parent ?father2 .
  
  # Step 6: Parent of the child from step 5
  ?parent dbo:child ?child3 .
}
```",9,12,10,3,3,3,3,71,0,0,2,0,0.0,0
976,57,test,"Give me the office of the person born as Mehmet Naci Bostancı and office of Mustafa Şentop and office of the mayor, that is a politician and an office holder and Turkish, of the reference, that is an organisation and a political party and Turkish, to Millet İttifakı.","SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/PoliticalParty>. ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. <http://dbpedia.org/resource/Mustafa_Şentop> <http://dbpedia.org/property/office> ?result . ?v0 <http://dbpedia.org/property/office> ?result . ?v1 <http://xmlns.com/foaf/0.1/name> ""Millet İttifakı""@en . ?v4 <http://dbpedia.org/ontology/nationality> <http://dbpedia.org/resource/Turkey>. ?v0 <http://dbpedia.org/property/birthName> ""Mehmet Naci Bostancı""@en . ?v1 <http://dbpedia.org/property/leader> ?v4 . ?v4 <http://dbpedia.org/property/office> ?result . ?v1 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Turkey>. }","```sparql
# Query for Mehmet Naci Bostancı's office
SELECT ?office WHERE {
  wd:Q1234567 dbo:office ?office .
}

# Query for Mustafa Şentop's office
SELECT ?office WHERE {
  wd:Q2345678 dbo:office ?office .
}

# Query for the current mayor of Turkey who is a politician and an office holder
SELECT ?mayor ?office WHERE {
  ?mayor rdf:type dbo:Mayor ;
         dbo:country dbr:Türkiye ;
         dbo:politicalParty ?party ;
         dbo:office ?office .
  FILTER EXISTS { ?mayor dbo:isPolitician true }
}

# Query for the political party reference to Millet İttifakı
SELECT ?party WHERE {
  ?party rdfs:label ""Millet İttifakı""@tr .
  ?party rdf:type dbo:PoliticalParty ;
         dbo:country dbr:Türkiye .
}
```

Note: Replace `wd:Q1234567` and `wd:Q2345678` with the actual DBpedia identifiers for Mehmet Naci Bostancı and Mustafa Şentop, respectively.",6,12,7,3,3,3,3,71,0,0,1,0,0.0,0
773,68,test,"Give me the spouse of the father of the parent of Bernard (son of Charles the Fat) and parent of the successor of the child, that is a royalty, of Louis the Pious and parent of the child, that is a royalty, of Louis the German.",SELECT ?result WHERE { ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v5 <http://dbpedia.org/property/father> ?v4 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v0 <http://dbpedia.org/ontology/successor> ?v7 . ?v3 <http://dbpedia.org/ontology/parent> ?result . ?result <http://dbpedia.org/ontology/child> ?v7 . ?v3 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Louis_the_German> . ?v4 <http://dbpedia.org/ontology/spouse> ?result . ?v5 <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Bernard_(son_of_Charles_the_Fat)> . <http://dbpedia.org/resource/Louis_the_Pious> <http://dbpedia.org/ontology/child> ?v0 . },"```sparql
SELECT ?spouse WHERE {
  # Charles the Fat and his spouse
  wd:Q12345 wdt:P26 ?spouse . 

  # Bernard (son of Charles the Fat)
  ?bernard wdt:P22 wd:Q12345 .

  # Louis the Pious and his successor
  ?successor wdt:P39 wd:Q67890 .
  ?successor wdt:P25 ?parentOfSuccessor .

  # Louis the German and his child who is royalty
  ?child wdt:P31/wdt:P279* wd:Q98765 .
  ?child wdt:P25 wd:Q54321 .
  
  # Common parent of both successor and royal child
  ?commonParent wdt:P40 ?successor ;
                wdt:P40 ?child .

  FILTER(?spouse != wd:Q12345) # Ensure spouse is not Charles the Fat himself
}
```

Note: The placeholders `wd:Q12345`, `wd:Q67890`, `wd:Q98765`, and `wd:Q54321` should be replaced with the actual DBpedia identifiers for Charles the Fat, Louis the Pious, his successor, and Louis the German respectively. These identifiers can be found by querying DBpedia or using a reliable historical database.",8,10,9,3,3,3,3,71,0,0,1,0,0.0,0
839,63,test,"Give me the band of the band, that is a musical artist, of Charlie Huhn and band of the person born, that is a musical artist, as the persona of Kevin Russell (musician) and band of the member of Böhse Onkelz.",SELECT ?result WHERE { ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. <http://dbpedia.org/resource/Böhse_Onkelz> <http://dbpedia.org/ontology/bandMember> ?v6 . ?v3 <http://dbpedia.org/property/birthName> ?v4 . ?v3 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . <http://dbpedia.org/resource/Charlie_Huhn> <http://dbpedia.org/ontology/associatedMusicalArtist> ?v2 . ?result <http://dbpedia.org/ontology/bandMember> ?v2 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. <http://dbpedia.org/resource/Kevin_Russell_(musician)> <http://xmlns.com/foaf/0.1/givenName> ?v4 . ?result <http://dbpedia.org/ontology/bandMember> ?v6 . },"```sparql
# Query for Charlie Huhn's band
SELECT ?band WHERE {
  ?person foaf:name ""Charlie Huhn""@en .
  ?person dbo:memberOfBand ?band .
  FILTER EXISTS { ?band a dbo:MusicalArtist }
}

UNION

# Query for Kevin Russell's persona (Black Francis) band
SELECT ?band WHERE {
  ?persona foaf:name ""Black Francis""@en .
  ?persona dbo:alias ""Kevin Russell""@en .
  ?persona dbo:memberOfBand ?band .
  FILTER EXISTS { ?band a dbo:MusicalArtist }
}

UNION

# Query for Böhse Onkelz member's band
SELECT DISTINCT ?band WHERE {
  ?onkelzMember dbo:memberOfBand <http://dbpedia.org/resource/Böhse_Onkelz> .
  ?onkelzMember dbo:memberOfBand ?band .
  FILTER EXISTS { ?band a dbo:MusicalArtist }
}
```",7,9,8,3,3,3,3,71,0,0,1,0,0.0,0
83,19,test,"Give me the party of the governor of the commander, that is a politician, in Central African Republic Civil War and ruling party in the birthplace, that is a town and Brazilian and a soccer club, of Sandro (footballer, born October 1983).","SELECT ?result WHERE { <http://dbpedia.org/resource/Sandro_(footballer,_born_October_1983)> <http://dbpedia.org/ontology/birthPlace> ?v2 . ?v2 <http://dbpedia.org/property/leaderParty> ?result . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Town>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v4 <http://dbpedia.org/ontology/party> ?result . <http://dbpedia.org/resource/Central_African_Republic_Civil_War> <http://dbpedia.org/ontology/commander> ?v0 . ?v0 <http://dbpedia.org/property/governor> ?v4 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerClub>. ?v2 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Brazil>. }","```sparql
# Step 1: Identify Sandro's birthplace
SELECT ?sandroBirthPlace WHERE {
  ?sandro dbo:birthDate ?date .
  ?sandro foaf:name ""Sandro"" .
  ?sandro dbo:nationality dbr:Brazil .
  ?sandro dbo:birthPlace ?birthPlace .
  FILTER (YEAR(?date) = 1983 && MONTH(?date) = 10)
}

# Step 2: Find the ruling party in Sandro's birthplace
SELECT ?rulingParty WHERE {
  ?town a dbo:Settlement .
  ?town rdfs:label ?sandroBirthPlaceLabel .
  FILTER (CONTAINS(LCASE(?sandroBirthPlaceLabel), LCASE(?sandroBirthPlace)))
  
  ?party dbo:governingBody ?town .
  ?party rdf:type dbo:PoliticalParty .
}

# Step 3: Identify the governor of a commander in the Central African Republic Civil War
SELECT ?governor WHERE {
  ?commander dbo:occupation dbr:Politician ;
             dbo:role ""Commander"" ;
             dbo:conflict dbr:Central_African_Republic_Civil_War .
  
  ?governor dbo:currentRole ""Governor"" ;
           dbo:formerOccupation ?commander .
}

# Step 4: Determine the party affiliation of this governor
SELECT ?party WHERE {
  ?governor dbo:politicalAffiliation ?party .
}
```",5,9,6,3,2,3,2,20,0,0,1,0,0.0,0
917,60,test,"Give me the parent of the child, that is a royalty, of the mayor of Hawaiian Kingdom and child of the father of the child, that is a royalty, of Kamehameha III.",SELECT ?result WHERE { <http://dbpedia.org/resource/Hawaiian_Kingdom> <http://dbpedia.org/property/leader> ?v4 . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. <http://dbpedia.org/resource/Kamehameha_III> <http://dbpedia.org/ontology/child> ?v5 . ?result <http://dbpedia.org/ontology/child> ?v2 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v5 <http://dbpedia.org/property/father> ?v0 . ?result <http://dbpedia.org/property/father> ?v0 . ?v2 <http://dbpedia.org/property/father> ?v4 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?parentOfSecondRoyalChild WHERE {
  # Step 1: Find Kamehameha III's royal child
  ?kamehamehaIII a dbo:Monarch ;
                 foaf:name ""Kamehameha III""@en .
  
  ?royalChild dbo:child ?kamehamehaIII ;
              dbo:title ?title .
  FILTER(CONTAINS(LCASE(?title), ""prince"") || CONTAINS(LCASE(?title), ""princess""))

  # Step 2: Father of the royal child is Kamehameha III
  BIND(?kamehamehaIII AS ?fatherOfFirstRoyalChild)

  # Step 3: Find a mayor in the Hawaiian Kingdom and their royal child
  ?mayor dbo:officeHolder ?position ;
         foaf:name ?mayorName .
  
  FILTER(CONTAINS(LCASE(STR(?position)), ""mayor"") && CONTAINS(LOWER(STR(?mayorName)), ""hawaiian kingdom""))

  ?royalChild2 dbo:child ?mayor ;
               dbo:title ?title2 .
  FILTER(CONTAINS(LCASE(?title2), ""prince"") || CONTAINS(LCASE(?title2), ""princess""))

  # Step 4: Find the parent of this second royal child
  ?parentOfSecondRoyalChild dbo:child ?royalChild2 .
}
```",6,8,7,3,2,3,3,71,0,0,2,0,0.0,0
443,27,test,"Give me the birthplace of the work of yes and birthplace of the person born, that is a musical artist and an artist, on 1949-11-20 and landmark at elevation of 28.","SELECT ?result WHERE { ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?v3 <http://dbpedia.org/ontology/birthPlace> ?result . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. ?result <http://dbpedia.org/ontology/elevation> ""28""^^<http://www.w3.org/2001/XMLSchema#integer> . ?v2 <http://dbpedia.org/property/author> ""yes""@en . ?v3 <http://dbpedia.org/ontology/birthDate> ""1949-11-20""^^<http://www.w3.org/2001/XMLSchema#date> . ?v2 <http://dbpedia.org/ontology/birthPlace> ?result . }","```sparql
# Query to find Steve Howe's birthplace
SELECT ?birthPlace WHERE {
  ?s dbp:birthDate ""1949-11-20""^^xsd:date .
  ?s rdf:type dbo:Musician ;
     dbo:birthPlace ?birthPlace .
  FILTER(CONTAINS(LCASE(str(?s)), ""steve howe""))
}

# Query to find landmarks at an elevation of 28 meters
SELECT ?landmark WHERE {
  ?landmark a dbo:Lighthouse ;
            dbo:elevationAboveSeaLevel ""28""^^xsd:decimal .
}
```",5,7,6,2,3,2,3,28,0,0,1,0,0.0,0
459,25,test,"Give me the governor of the death place, that is a settlement, of Cliff Roquemore and person born as John Kevin Stitt and governor of the administration, that is a politician, of Brad Henry.","SELECT ?result WHERE { ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?result <http://dbpedia.org/property/birthName> ""John Kevin Stitt""@en . ?v4 <http://dbpedia.org/property/governor> ?result . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. ?v2 <http://dbpedia.org/property/governor> ?result . <http://dbpedia.org/resource/Cliff_Roquemore> <http://dbpedia.org/ontology/deathPlace> ?v2 . ?v4 <http://dbpedia.org/property/governor> <http://dbpedia.org/resource/Brad_Henry> . }","```sparql
# Query to find the death place of Cliff Roquemore which is a settlement
SELECT ?deathPlace WHERE {
  dbpedia:Cliff_Roquemore dbo:deathPlace ?deathPlace .
  ?deathPlace rdf:type dbo:Settlement .
}

# Assuming we have identified the death place, query for its governor at the time of his death
# This requires historical data which might not be directly available in DBpedia

# Query to confirm John Kevin Stitt's birth name
SELECT ?birthName WHERE {
  dbpedia:John_Kevin_Stitt dbo:birthName ?birthName .
}

# Query to find Brad Henry's administration and governor role
SELECT ?administration WHERE {
  dbpedia:Brad_Henry dbo:officeHolderOf ?administration ;
                     rdf:type dbo:Politician .
}
```

Note: The exact query for finding the governor of a place at a specific time might not be directly possible with DBpedia due to limitations in historical data availability. This would typically require additional resources or databases that track historical political office holders.",5,7,6,2,3,2,3,28,0,0,1,0,0.0,0
892,66,test,"Give me the entity in the administration, that is Italian and a region and a settlement and an administrative region, of the party, that is a political party and an organisation, of Andrea Cozzolino and entity in the profession of Henri Crolla and landmark at elevation of the award of Anna Ishii.",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/province> ?v0 . <http://dbpedia.org/resource/Andrea_Cozzolino> <http://dbpedia.org/ontology/party> ?v5 . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/PoliticalParty>. ?result <http://dbpedia.org/ontology/country> ?v3 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/AdministrativeRegion>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Region>. ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?v0 <http://dbpedia.org/property/leaderParty> ?v5 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. <http://dbpedia.org/resource/Henri_Crolla> <http://dbpedia.org/property/occupation> ?v3 . <http://dbpedia.org/resource/Anna_Ishii> <http://dbpedia.org/property/awards> ?v6 . ?v0 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Italy>. ?result <http://dbpedia.org/ontology/elevation> ?v6 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?entity WHERE {
  # Step 1: Find Andrea Cozzolino's political party
  ?party dbo:member dbr:Andrea_Cozzolino .
  ?party a dbo:PoliticalParty .

  # Step 2: Find Italian regions that are both administrative regions and settlements
  ?region dbo:country dbr:Italy ;
          a dbo:AdministrativeRegion, dbo:Settlement .

  # Step 3: Identify Henri Crolla's profession
  ?profession dbr:Henri_Crolla ;
             a dbo:Occupation .

  # Step 4: Locate Anna Ishii's award and the corresponding landmark elevation
  ?award dbr:Anna_Ishii ;
         dbo:recipient dbr:Anna_Ishii .
  ?landmark dbo:elevation ?elevation ;
            dbo:associatedWith ?award .

  # Step 5: Combine information to find a common entity
  ?entity dbo:administrativeRegion ?region ;
          dbo:party ?party ;
          dbo:profession ?profession ;
          dbo:landmark ?landmark .
}
```",7,13,8,3,3,3,3,71,0,0,2,0,0.0,0
892,64,test,"Give me the entity in the administration, that is Italian and a region and a settlement and an administrative region, of the party, that is a political party and an organisation, of Andrea Cozzolino and entity in the profession of the true self of Enrico Crolla and landmark at elevation of 58.","SELECT ?result WHERE { <http://dbpedia.org/resource/Andrea_Cozzolino> <http://dbpedia.org/ontology/party> ?v5 . ?v4 <http://xmlns.com/foaf/0.1/givenName> ""Enrico Crolla""@en . ?v0 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Italy>. ?v0 <http://dbpedia.org/property/leaderParty> ?v5 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Region>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/AdministrativeRegion>. ?result <http://dbpedia.org/ontology/country> ?v2 . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/PoliticalParty>. ?v4 <http://dbpedia.org/property/occupation> ?v2 . ?result <http://dbpedia.org/ontology/province> ?v0 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. ?result <http://dbpedia.org/ontology/elevation> ""58""^^<http://www.w3.org/2001/XMLSchema#integer> . }","```sparql
# Step 1: Find Andrea Cozzolino's Party
SELECT ?party WHERE {
  ?cozzolino dbo:memberOf ?party .
  ?cozzolino foaf:name ""Andrea Cozzolino"" .
  ?party a dbo:PoliticalParty ;
         a dbo:Organization .
}

# Step 2: Find Italian Regions that are Administrative Regions and Settlements
SELECT DISTINCT ?region WHERE {
  ?region a dbo:AdministrativeRegion ;
          a dbo:Settlement ;
          dbo:country dbr:Italy .
}

# Step 3: Find Enrico Crolla's Profession
SELECT ?profession WHERE {
  ?crolla dbo:occupation ?profession .
  ?crolla foaf:name ""Enrico Crolla"" .
}

# Step 4: Find Landmarks at Elevation of 58 Meters
SELECT DISTINCT ?landmark WHERE {
  ?landmark a dbo:Lighthouse ;
            dbo:elevation ""58""^^xsd:integer .
}
```",7,13,8,3,3,3,3,71,0,0,2,0,0.0,0
573,63,test,"Give me the person decedent at the administration, that is a region, of the real name of Charlie Baker (Australian footballer) and parent of the author, that is a politician and an office holder, of Exchequer Standards and person decedent at the residence, that is a settlement, of William J. Phelan.",SELECT ?result WHERE { ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Region>. ?result <http://dbpedia.org/ontology/deathPlace> ?v6 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. <http://dbpedia.org/resource/Charlie_Baker_(Australian_footballer)> <http://xmlns.com/foaf/0.1/name> ?v4 . <http://dbpedia.org/resource/Exchequer_Standards> <http://dbpedia.org/property/author> ?v2 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. <http://dbpedia.org/resource/William_J._Phelan> <http://dbpedia.org/property/residence> ?v6 . ?v6 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. ?v3 <http://dbpedia.org/property/governor> ?v4 . ?v2 <http://dbpedia.org/ontology/parent> ?result . ?result <http://dbpedia.org/ontology/deathPlace> ?v3 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?person WHERE {
  # Step 1: Identify Charlie Baker (Australian footballer) and his real name
  ?charlieBaker a dbo:AustralianFootballer ;
                foaf:name ""Charlie Baker"" ;
                dbo:birthName ?realName .

  # Step 2: Find the region where he is a decedent at the administration
  ?region dbo:administrativeRegionOf ?realName .

  # Step 3: Identify the author of ""Exchequer Standards""
  ?author dbo:work ?exchequerStandards ;
          foaf:name ?authorName ;
          rdf:type dbo:Politician, dbo:OfficeHolder .

  # Step 4: Find the parent of this author
  ?parent dbo:child ?author .

  # Step 5: Identify William J. Phelan's residence
  ?phelan a dbo:Person ;
          foaf:name ""William J. Phelan"" .
  ?residence dbo:resident ?phelan ;
             rdf:type dbo:Settlement .

  # Step 6: Find the decedent at that residence and match with region
  ?person dbo:decedentAtAdministrativeRegion ?region ;
          dbo:decedentAtResidence ?residence .
}
```",7,11,8,3,3,3,3,71,0,0,2,0,0.0,0
433,69,test,"Give me the associated musical artist of the person born, that is a musical artist and an artist, as the persona of Paul Chambers and professional in the profession of the writer of Slowhand at 70 – Live at the Royal Albert Hall and associated musical artist of the associated musical artist, that is an artist and a musical artist, of Scott LaFaro.",SELECT ?result WHERE { <http://dbpedia.org/resource/Scott_LaFaro> <http://dbpedia.org/ontology/associatedMusicalArtist> ?v7 . ?v7 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?result <http://dbpedia.org/property/occupation> ?v2 . <http://dbpedia.org/resource/Paul_Chambers> <http://xmlns.com/foaf/0.1/givenName> ?v4 . ?v3 <http://dbpedia.org/property/birthName> ?v4 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. ?v3 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v7 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?v7 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. ?v1 <http://dbpedia.org/property/occupation> ?v2 . <http://dbpedia.org/resource/Slowhand_at_70_–_Live_at_the_Royal_Albert_Hall> <http://dbpedia.org/property/writer> ?v1 . },"```sparql
SELECT ?artist WHERE {
  ?paulChambers dbo:birthPlace ?place .
  ?paulChambers dbo:profession ""bassist"" .
  ?milesDavis dbo:associatedMusicalArtist ?paulChambers ;
              dbo:profession ""musician"" ;
              dbo:occupation ""artist"" .

  ?ericClapton dbo:writerOf ""Slowhand at 70 – Live at the Royal Albert Hall"" ;
               dbo:profession ""musician"" ;
               dbo:occupation ""artist"" .
  
  ?scottLaFaro dbo:associatedMusicalArtist ?milesDavis ;
               dbo:profession ""bassist"" ;
               dbo:occupation ""artist"" .

  FILTER EXISTS { ?ericClapton dbo:associatedMusicalArtist ?milesDavis }
}
```",8,12,9,3,3,3,3,71,0,0,1,0,0.0,0
933,66,test,"Give me the band of the band of Alan Warner (musician) and band of the band, that is a group and a band and an organisation, of the person born, that is a musical artist, on 1947-04-21 and reference to the birth name of Alan Warner (musician).","SELECT ?result WHERE { <http://dbpedia.org/resource/Alan_Warner_(musician)> <http://dbpedia.org/ontology/associatedMusicalArtist> ?v3 . ?v5 <http://dbpedia.org/ontology/associatedMusicalArtist> ?v0 . <http://dbpedia.org/resource/Alan_Warner_(musician)> <http://dbpedia.org/property/birthName> ?v6 . ?result <http://xmlns.com/foaf/0.1/name> ?v6 . ?v5 <http://dbpedia.org/ontology/birthDate> ""1947-04-21""^^<http://www.w3.org/2001/XMLSchema#date> . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Band>. ?v3 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Group>. ?v0 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT DISTINCT ?alanWarnerBand ?subGroup ?musicalArtist ?groupOrBand ?alanWarnerBirthName
WHERE {
  # Find Alan Warner (musician) and his band
  dbr:Alan_Warner_(musician) dbo:musicalArtistOf ?alanWarnerBand .
  
  # Find the sub-group or related band within Alan Warner's main band
  OPTIONAL { ?alanWarnerBand dbo:bandMember ?subGroup . }
  
  # Identify the musician born on 1947-04-21
  ?musicalArtist a dbo:MusicalArtist ;
                dbo:birthDate ""1947-04-21""^^xsd:date .
  
  # Find the group, band, or organization this musician was part of
  OPTIONAL { ?musicalArtist dbo:musicalArtistOf ?groupOrBand . }
  
  # Retrieve Alan Warner's birth name
  dbr:Alan_Warner_(musician) foaf:name ?alanWarnerBirthName .
}
```",7,11,8,3,3,3,3,71,0,0,1,0,0.0,0
507,64,test,Give me the spouse of the person born as the birth name of Anne V. Coates and director of Entertaining Mr Sloane (film) and professional in the profession of the person born on 1966-02-18.,"SELECT ?result WHERE { <http://dbpedia.org/resource/Anne_V._Coates> <http://dbpedia.org/property/birthName> ?v3 . ?v2 <http://dbpedia.org/property/birthName> ?v3 . ?result <http://dbpedia.org/ontology/spouse> ?v2 . ?v0 <http://dbpedia.org/ontology/birthDate> ""1966-02-18""^^<http://www.w3.org/2001/XMLSchema#date> . <http://dbpedia.org/resource/Entertaining_Mr_Sloane_(film)> <http://dbpedia.org/ontology/director> ?result . ?result <http://dbpedia.org/property/occupation> ?v1 . ?v0 <http://dbpedia.org/property/occupation> ?v1 . }","```sparql
# Step 1: Get birth name and confirm directorship for Anne V. Coates
SELECT ?birthName WHERE {
    ?anne a dbo:FilmEditor .
    ?anne foaf:name ""Anne V. Coates"" .
    ?anne dbo:birthName ?birthName .
    OPTIONAL { 
        ?film dbo:director ?anne ;
              foaf:name ""Entertaining Mr Sloane"" .
    }
}

# Step 2: Find the profession of the person born on 1966-02-18
SELECT ?profession WHERE {
    ?person dbo:birthDate ""1966-02-18""^^xsd:date ;
            dbo:occupation ?profession .
}

# Step 3: Identify someone professional in that field (assuming we get a result from step 2)
# This part is hypothetical as it depends on the profession found
SELECT ?professional WHERE {
    ?person dbo:occupation ?profession .
    FILTER(?profession = <PROFESSION_URI_FROM_STEP_2>)
}

# Step 4: Get the spouse of Anne V. Coates
SELECT ?spouse WHERE {
    ?anne a dbo:FilmEditor ;
          foaf:name ""Anne V. Coates"" .
    OPTIONAL { 
        ?anne dbo:spouse ?spouse .
    }
}
```

Note: Replace `<PROFESSION_URI_FROM_STEP_2>` with the actual URI obtained from step 2.",7,7,8,3,3,3,3,71,0,0,1,0,0.0,0
93,18,test,"Give me the death place of the governor of Bob Bartlett and capital of the headquarter, that is a region and a settlement, of the headquarter of Clam Cove Pictograph Site.",SELECT ?result WHERE { <http://dbpedia.org/resource/Clam_Cove_Pictograph_Site> <http://dbpedia.org/ontology/location> ?v1 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Region>. ?v1 <http://dbpedia.org/ontology/location> ?v2 . <http://dbpedia.org/resource/Bob_Bartlett> <http://dbpedia.org/property/governor> ?v3 . ?v3 <http://dbpedia.org/ontology/deathPlace> ?result . ?v2 <http://dbpedia.org/ontology/capital> ?result . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. },"```sparql
# Query to get Bob Bartlett's death place
SELECT ?deathPlace WHERE {
  ?b obituary ""Bob Bartlett""@en .
  ?b dbo:placeOfBirth ?birthPlace .
  ?b dbo:deathPlace ?deathPlace .
}

# Assuming Bob Bartlett was the governor of Alaska, find the capital of Alaska
SELECT ?capital WHERE {
  wd:Q1599 dbo:governmentSeat ?capital .
}

# Query to get the headquarter region and settlement for Clam Cove Pictograph Site
SELECT ?region ?settlement WHERE {
  wd:Q1234567 dbo:location ?siteLocation . # Replace Q1234567 with actual DBpedia ID for Clam Cove Pictograph Site
  ?siteLocation rdf:type dbo:Settlement .
  ?siteLocation dbo:partOfRegion ?region .
  ?siteLocation rdfs:label ?settlement .
}
```",5,7,6,3,2,3,2,20,0,0,1,0,0.0,0
443,28,test,"Give me the landmark at elevation of the award of William Shepherd and birthplace of the person born, that is a musical artist and an artist, on 1949-11-20 and birthplace of the work of yes.","SELECT ?result WHERE { ?v3 <http://dbpedia.org/ontology/birthPlace> ?result . ?v5 <http://dbpedia.org/ontology/birthPlace> ?result . ?v3 <http://dbpedia.org/ontology/birthDate> ""1949-11-20""^^<http://www.w3.org/2001/XMLSchema#date> . <http://dbpedia.org/resource/William_Shepherd> <http://dbpedia.org/property/awards> ?v1 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?v5 <http://dbpedia.org/property/author> ""yes""@en . ?result <http://dbpedia.org/ontology/elevation> ?v1 . }","```sparql
# Step 1: Identify William Shepherd's Award
SELECT ?award WHERE {
  ?person foaf:name ""William Shepherd""@en .
  ?person dbo:awardsReceived ?award .
}

# Step 2: Find the Elevation of the Landmark Associated with the Award
SELECT DISTINCT ?landmark ?elevation WHERE {
  ?award dbo:location ?location .
  ?location a dbo:Landmark ;
            dbo:elevationAboveSeaLevel ?elevation .
}

# Step 3: Determine Birthplace of the Person Born on 1949-11-20
SELECT ?birthPlace WHERE {
  ?person dbo:birthDate ""1949-11-20""^^xsd:date ;
          dbo:occupation [ a dbo:MusicalArtist ] ;
          dbo:occupation [ a dbo:Artist ] .
  ?person dbo:birthPlace ?birthPlace .
}

# Step 4: Identify the Work Associated with ""Yes""
SELECT ?work WHERE {
  ?band foaf:name ""Yes""@en ;
        dbo:album ?work .
}

# Step 5: Find the Birthplace of the Person Related to the Work of ""Yes""
SELECT ?personBirthPlace WHERE {
  ?work dbo:creator ?person .
  ?person dbo:birthPlace ?personBirthPlace .
}

# Step 6: Combine Information
SELECT DISTINCT ?landmark WHERE {
  VALUES (?elevation) { <ELEVATION_FROM_STEP_2> } # Replace with actual elevation value from step 2
  VALUES (?birthPlace) { <BIRTHPLACE_FROM_STEP_5> } # Replace with actual birthplace value from step 5
  ?location a dbo:Landmark ;
            dbo:elevationAboveSeaLevel ?elevation ;
            foaf:name ?landmark .
  FILTER(?location = ?birthPlace)
}
```",6,8,7,2,3,2,3,28,0,0,1,0,0.0,0
826,61,test,"Give me the successor of the child, that is a royalty, of the reference, that is a royalty, to Louis I and predecessor of the parent of the child of Louis IV, Grand Duke of Hesse.","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/successor> ?v3 . ?v0 <http://xmlns.com/foaf/0.1/name> ""Louis I""@en . ?v1 <http://dbpedia.org/ontology/parent> <http://dbpedia.org/resource/Louis_IV,_Grand_Duke_of_Hesse> . ?v1 <http://dbpedia.org/ontology/parent> ?v3 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v0 <http://dbpedia.org/ontology/child> ?v5 . ?v5 <http://dbpedia.org/ontology/successor> ?result . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?successor WHERE {
  # Louis I's predecessor
  dbr:Ludwig_I_of_Bavaria dbo:predecessor dbr:Maximilian_I_Joseph_of_Bavaria .
  
  # Child of Maximilian I Joseph that is a royalty
  dbr:Maximilian_I_Joseph_of_Bavaria dbo:child ?louisI .
  ?louisI rdf:type dbo:Monarch .

  # Parent of the child of Louis IV, Grand Duke of Hesse
  dbr:Ludwig_IV,_Grand_Duke_of_Hesse dbo:child ?ernstLudwig .
  ?ernstLudwig dbo:parent dbr:Ludwig_IV,_Grand_Duke_of_Hesse .

  # Predecessor of this parent (Louis IV)
  dbr:Ludwig_IV,_Grand_Duke_of_Hesse dbo:predecessor ?louisIII .

  # Successor of the child (Ludwig I) that is a royalty
  ?louisI dbo:successor ?maximilianII .
}
```",6,8,7,3,2,3,3,71,0,0,1,0,0.0,0
373,9,test,"Give me the writer of the work, that is a single and a musical work and a work and a soundtrack, of  and professional in the profession of Beto Guedes.","SELECT ?result WHERE { ?result <http://dbpedia.org/property/occupation> ?v3 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Single>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalWork>. ?v1 <http://dbpedia.org/property/writer> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?v1 <http://dbpedia.org/property/writer> """"@en . <http://dbpedia.org/resource/Beto_Guedes> <http://dbpedia.org/property/occupation> ?v3 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Song>. }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?work ?writer WHERE {
  ?work dbo:composer dbr:Beto_Guedes .
  ?work a ?type1 .
  ?work a ?type2 .
  FILTER (?type1 = dbo:SinglesAlbum || ?type1 = dbo:Soundtrack)
  FILTER (?type2 = dbo:SinglesAlbum || ?type2 = dbo:Soundtrack)
  OPTIONAL { ?work dbo:composer ?writer }
}
```",4,8,5,2,2,2,2,9,0,0,78,0,0.0,0
826,67,test,"Give me the predecessor of the parent of the child of Louis IV, Grand Duke of Hesse and successor of the child, that is a royalty, of the reference, that is a royalty, to Louis I and spouse of Anna Magdalena Appel.","SELECT ?result WHERE { ?v6 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v0 <http://dbpedia.org/ontology/child> ?v6 . ?v1 <http://dbpedia.org/ontology/parent> ?v3 . ?result <http://dbpedia.org/ontology/successor> ?v3 . ?v1 <http://dbpedia.org/ontology/parent> <http://dbpedia.org/resource/Louis_IV,_Grand_Duke_of_Hesse> . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v0 <http://xmlns.com/foaf/0.1/name> ""Louis I""@en . ?v6 <http://dbpedia.org/ontology/successor> ?result . <http://dbpedia.org/resource/Anna_Magdalena_Appel> <http://dbpedia.org/ontology/spouse> ?result . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?predecessor WHERE {
  # Louis IV, Grand Duke of Hesse and his child
  dbr:Louis_IV,_Grand_Duke_of_Hesse dbo:child ?child .
  
  # Parent of the child (Louis IV)
  ?parent dbo:child ?child .
  
  # Predecessor of this parent (Louis III)
  ?predecessor dbo:succ ?parent .
  
  # Successor of the child
  ?successor dbo:predecessor ?child .
  
  # Reference to Louis I and spouse Anna Magdalena Appel (Princess Louise of Prussia)
  dbr:Louis_I,_Grand_Duke_of_Hesse dbo:spouse dbr:Princess_Louise_of_Prussia .
  
  # Ensure the predecessor is a royalty
  ?predecessor rdf:type dbo:Monarch .
}
```",7,9,8,3,3,3,3,71,0,0,1,0,0.0,0
933,67,test,"Give me the reference to the birth name of the professional in Musician and band of the band, that is a group and a band and an organisation, of the person born, that is a musical artist, on 1947-04-21 and band of Mike Elliott (saxophonist).","SELECT ?result WHERE { ?v4 <http://dbpedia.org/ontology/birthDate> ""1947-04-21""^^<http://www.w3.org/2001/XMLSchema#date> . ?result <http://xmlns.com/foaf/0.1/name> ?v5 . <http://dbpedia.org/resource/Mike_Elliott_(saxophonist)> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Group>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Band>. ?v0 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?v1 <http://dbpedia.org/property/occupation> <http://dbpedia.org/resource/Musician> . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?v4 <http://dbpedia.org/ontology/associatedMusicalArtist> ?v0 . ?v1 <http://dbpedia.org/property/birthName> ?v5 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT ?birthName WHERE {
  ?person a dbo:MusicalArtist ;
          dbo:birthDate ""1947-04-21""^^xsd:date ;
          foaf:name ?birthName .
  
  ?band a dbo:Band, dbo:Group, dbo:Organization ;
        dbo:bandMember ?person .

  ?memberRelation dbo:bandMember ?person ;
                  dbo:musicalArtist ?mikeElliott .
  ?mikeElliott foaf:name ""Mike Elliott (saxophonist)""@en .
}
```",7,11,8,3,3,3,3,71,0,0,1,0,0.0,0
124,64,test,"Give me the military force of Battle of Tamai and military force of the force, that is a societal event and a military conflict, of the person born on 1850-06-24 and commander in the war, that is a societal event and a military conflict, of the reference, that is Australian and an organisation and a military unit, to 'A' Battery, Royal Australian Artillery.","SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/commander> ?v0 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryUnit>. ?v0 <http://dbpedia.org/ontology/birthDate> ""1850-06-24""^^<http://www.w3.org/2001/XMLSchema#date> . ?v3 <http://dbpedia.org/ontology/battle> ?v2 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?result <http://dbpedia.org/ontology/battle> ?v1 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v3 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Australia>. ?result <http://dbpedia.org/ontology/battle> <http://dbpedia.org/resource/Battle_of_Tamai> . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?v3 <http://xmlns.com/foaf/0.1/name> ""'A' Battery, Royal Australian Artillery""@en . ?v2 <http://dbpedia.org/ontology/commander> ?result . }","```sparql
# Query for military forces in the Battle of Tamai
SELECT ?force WHERE {
  ?battle dcterms:subject dbc:Battle_of_Tamai .
  ?battle dbo:military_force ?force .
}

# Query for Horatio Herbert Kitchener's command in a war
SELECT ?war WHERE {
  ?person foaf:name ""Horatio Herbert Kitchener""@en ;
          dbo:birthDate ""1850-06-24""^^xsd:date .
  ?command dbo:commander ?person ;
           dbo:military_conflict ?war .
}

# Query for 'A' Battery, Royal Australian Artillery's involvement in a war
SELECT ?war WHERE {
  ?unit foaf:name ""'A' Battery, Royal Australian Artillery""@en ;
        dbo:partOf ?organization .
  ?organization rdf:type dbo:MilitaryUnit ;
                dbo:country dbr:Australia .
  ?conflict dbo:military_unit ?unit ;
            a dbo:MilitaryConflict .
}
```",7,14,8,3,3,3,3,71,0,0,1,0,0.0,0
773,64,test,"Give me the spouse of the father of the parent of Bernard (son of Charles the Fat) and parent of Carloman of Bavaria and parent of the child, that is a royalty, of the father, that is an office holder and a royalty, of Carloman of Bavaria.",SELECT ?result WHERE { ?v3 <http://dbpedia.org/property/father> ?v2 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?result <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Carloman_of_Bavaria> . ?v2 <http://dbpedia.org/ontology/spouse> ?result . ?v1 <http://dbpedia.org/ontology/parent> ?result . ?v3 <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Bernard_(son_of_Charles_the_Fat)> . ?v1 <http://dbpedia.org/property/father> ?v0 . <http://dbpedia.org/resource/Carloman_of_Bavaria> <http://dbpedia.org/property/father> ?v0 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. },"```sparql
SELECT ?spouse WHERE {
  ?charles rdf:type dbo:Monarch ;
           foaf:name ""Charles III"" .
  ?charles dbo:spouse ?spouse .
}
```",7,10,8,3,3,3,3,71,0,0,1,0,0.0,0
47,60,test,"Give me the office of the awardee of the entity, that is an award, in India and office of the administration of the commander, that is a politician, in Operation Green Hunt.",SELECT ?result WHERE { <http://dbpedia.org/resource/Operation_Green_Hunt> <http://dbpedia.org/ontology/commander> ?v3 . ?v0 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/India> . ?v1 <http://dbpedia.org/property/office> ?result . ?v2 <http://dbpedia.org/property/office> ?result . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v1 <http://dbpedia.org/property/awards> ?v0 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Award>. ?v2 <http://dbpedia.org/property/governor> ?v3 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?awardName ?awardeeOffice ?politicianName ?commanderOffice
WHERE {
  # Part 1: Office of the Awardee
  ?award dbo:country dbr:India .
  ?award dbo:recipient ?person .
  ?person dbo:office ?awardeeOffice .

  # Part 2: Office of the Commander in Operation Green Hunt
  ?politician dbo:wikiPageWikiLink ?operationGreenHunt .
  ?operationGreenHunt rdfs:label ""Operation Green Hunt""@en .
  ?politician dbo:office ?commanderOffice .

  FILTER (lang(?awardName) = 'en')
}
```",6,8,7,3,2,3,3,71,0,0,33,0,0.0,0
839,60,test,"Give me the band of the band, that is a musical artist, of the professional in Musician and band of the person born, that is a musical artist, as the persona of Kevin Russell (musician).","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/bandMember> ?v1 . ?v0 <http://dbpedia.org/property/occupation> ""Musician""@en . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?v0 <http://dbpedia.org/ontology/associatedMusicalArtist> ?v1 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?v2 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . <http://dbpedia.org/resource/Kevin_Russell_(musician)> <http://xmlns.com/foaf/0.1/givenName> ?v3 . ?v2 <http://dbpedia.org/property/birthName> ?v3 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?bandOfTheBand WHERE {
  # Find Kevin Russell's DBpedia entry
  ?kevinRussell a dbo:MusicalArtist ;
                foaf:name ""Kevin Russell"" .

  # Identify his professional role and band association
  ?kevinRussell dbo:memberOf ?theGourds .
  
  # Determine the band associated with The Gourds
  ?theGourds dbo:band ?bandOfTheBand .
}
```",6,8,7,3,2,3,3,71,0,0,1,0,0.0,0
216,65,test,"Give me the player in the coach of Croatia national under-21 football team and team of the person born, that is a sports manager and a soccer manager and a soccer player, on 1983-12-20 and player in the coach, that is a soccer player and a sports manager and a soccer manager, of the player, that is an organisation and a sports club and a soccer club, in Džemal Berberović.","SELECT ?result WHERE { ?v6 <http://dbpedia.org/ontology/team> ?result . ?v0 <http://dbpedia.org/ontology/coach> ?v6 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerClub>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerPlayer>. <http://dbpedia.org/resource/Croatia_national_under-21_football_team> <http://dbpedia.org/ontology/coach> ?v4 . ?result <http://dbpedia.org/ontology/coach> ?v3 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsManager>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerManager>. ?v6 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsManager>. ?v3 <http://dbpedia.org/ontology/birthDate> ""1983-12-20""^^<http://www.w3.org/2001/XMLSchema#date> . ?v4 <http://dbpedia.org/ontology/team> ?result . ?v6 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerManager>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsClub>. ?v6 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerPlayer>. <http://dbpedia.org/resource/Džemal_Berberović> <http://dbpedia.org/ontology/team> ?v0 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?coach ?playerInCoach ?club WHERE {
  # Find Džemal Berberović's birthdate and club
  dbr:Džemal_Berberović dbo:birthDate ?birthDate .
  FILTER (YEAR(?birthDate) = 1983 && MONTH(?birthDate) = 12 && DAY(?birthDate) = 20)
  
  # Find the coach of Croatia national under-21 football team
  dbr:Croatia_national_under-21_football_team dbo:coach ?coach .
  
  # Find a person born on 1983-12-20 who is a sports manager, soccer manager, and player
  ?person dbo:birthDate ?birthDate2 .
  FILTER (YEAR(?birthDate2) = 1983 && MONTH(?birthDate2) = 12 && DAY(?birthDate2) = 20)
  
  ?person rdf:type dbr:Sports_manager ;
          rdf:type dbr:Soccer_manager ;
          rdf:type dbr:Soccer_player .
  
  # Find the player coached by this person
  ?coach dbo:playerInCoach ?playerInCoach .
  
  # Link back to Džemal Berberović's club
  dbr:Džemal_Berberović dbo:memberOfTeam ?club .
  FILTER (rdf:type(?club, dbr:Soccer_club))
}
```",7,16,8,3,3,3,3,71,0,0,1,0,0.0,0
417,59,test,"Give me the spouse of the parent, that is a royalty, of the child of Knud, Hereditary Prince of Denmark and child of the father of the leader, that is a royalty, of Colony of Greenland.","SELECT ?result WHERE { ?v2 <http://dbpedia.org/ontology/child> ?v3 . ?v0 <http://dbpedia.org/property/father> ?v5 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v3 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Knud,_Hereditary_Prince_of_Denmark> . <http://dbpedia.org/resource/Colony_of_Greenland> <http://dbpedia.org/property/leader> ?v0 . ?result <http://dbpedia.org/ontology/spouse> ?v2 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?result <http://dbpedia.org/property/father> ?v5 . }","```sparql
SELECT ?spouse WHERE {
  # Step 1: Identify Knud, Hereditary Prince of Denmark
  wd:Q123456 rdfs:label ""Knud, Hereditary Prince of Denmark""@en .
  
  # Step 2 & 3: Find a child of Knud and confirm Knud as the parent
  ?child wdt:P22 wd:Q123456 . # P22 is the property for father
  
  # Step 4: Identify the spouse of Knud
  ?spouse wdt:P26 wd:Q123456 . # P26 is the property for spouse

  # Step 5: Check if the spouse is royalty
  ?spouse wdt:P31/wdt:P279* wd:Q215627 . # P31 is the instance of, and Q215627 is a royal title
  
  # Step 6 & 7: Identify the leader of Colony of Greenland and their father
  ?leader wdt:P39 wd:Q1234562 . # P39 is the property for head of government or state
  ?leader wdt:P22 ?father .
  
  ?father wdt:P31/wdt:P279* wd:Q215627 . # Ensure the father is royalty
  
  # Step 8 & 9: Find a child of Knud's spouse and identify the parent
  ?child2 wdt:P22 ?spouse .
  
  # Step 10: Determine the spouse of this parent (Knud)
  FILTER(?spouse = wd:Q123456) # Ensure it is the same spouse identified in step 4
}
```",6,8,7,3,2,3,3,71,0,0,1,0,0.0,0
933,58,test,"Give me the band of the band, that is a group and a band and an organisation, of the person born, that is a musical artist, on 1947-04-21 and reference to the birth name of Alan Warner (musician) and band of Mike Elliott (saxophonist).","SELECT ?result WHERE { ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?v4 <http://dbpedia.org/ontology/associatedMusicalArtist> ?v0 . ?v0 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. <http://dbpedia.org/resource/Mike_Elliott_(saxophonist)> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v4 <http://dbpedia.org/ontology/birthDate> ""1947-04-21""^^<http://www.w3.org/2001/XMLSchema#date> . <http://dbpedia.org/resource/Alan_Warner_(musician)> <http://dbpedia.org/property/birthName> ?v5 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Band>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Group>. ?result <http://xmlns.com/foaf/0.1/name> ?v5 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT DISTINCT ?band WHERE {
  # Find the musician born on April 21, 1947
  ?musician a dbo:MusicalArtist ;
            dbo:birthDate ?birthDate .
  FILTER (YEAR(?birthDate) = 1947 && MONTH(?birthDate) = 4 && DAY(?birthDate) = 21)

  # Find Alan Warner's band
  ?alanWarner dbp:birthName ""Alan Warner"" ;
              dbo:band ?band .

  # Ensure the musician is Alan Warner
  FILTER (?musician = ?alanWarner)

  # Find Mike Elliott's band
  ?mikeElliott a dbo:Saxophonist ;
               dbo:band ?sameBand .
  FILTER (str(?sameBand) = str(?band))

  # Return the band name
  ?band rdfs:label ?bandLabel .
}
```",6,10,7,3,3,3,3,71,0,0,1,0,0.0,0
955,20,test,"Give me the band of the writer of the work, that is a work and an album and a musical work, of Matt Freeman and band of the band member, that is a musical artist and an artist, of the reference, that is a band and a group and an organisation, to Street Dogs.","SELECT ?result WHERE { ?v4 <http://xmlns.com/foaf/0.1/name> ""Street Dogs""@en . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalWork>. ?result <http://dbpedia.org/ontology/bandMember> ?v2 . ?v1 <http://dbpedia.org/property/writer> <http://dbpedia.org/resource/Matt_Freeman> . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. ?v1 <http://dbpedia.org/property/writer> ?v2 . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Band>. ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?result <http://dbpedia.org/ontology/bandMember> ?v5 . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Group>. ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?v5 <http://dbpedia.org/ontology/associatedMusicalArtist> ?v4 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Album>. }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?band ?artist WHERE {
  # Step 1: Identify the work by Matt Freeman that is both an album and a musical work
  ?work dbo:composer dbr:Matt_Freeman ;
        a dbo:Album ;
        a dbo:MusicalWork .

  # Step 2: Determine the band associated with Matt Freeman as a member
  ?band dbo:member dbr:Matt_Freeman .
  
  # Step 3: Find any reference or connection to Street Dogs through these bands or artists
  ?reference dbo:member ?artist ;
             a dbo:Band ;
             a dbo:Group ;
             a dbo:Organisation .

  FILTER(?artist IN (dbr:Street_Dogs))

  # Link the band from step 2 with the reference found in step 3
  OPTIONAL { ?band dbr:?reference }
}
```",6,14,7,3,2,3,2,20,0,0,1,0,0.0,0
892,69,test,"Give me the entity in the administration, that is Italian and a region and a settlement and an administrative region, of the party, that is a political party and an organisation, of Andrea Cozzolino and entity in the profession of the true self of Enrico Crolla and landmark at elevation of the award of Anna Ishii.","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/province> ?v0 . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?v0 <http://dbpedia.org/property/leaderParty> ?v5 . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/PoliticalParty>. ?result <http://dbpedia.org/ontology/elevation> ?v6 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Region>. ?v4 <http://dbpedia.org/property/occupation> ?v2 . <http://dbpedia.org/resource/Anna_Ishii> <http://dbpedia.org/property/awards> ?v6 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/AdministrativeRegion>. ?v0 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Italy>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. <http://dbpedia.org/resource/Andrea_Cozzolino> <http://dbpedia.org/ontology/party> ?v5 . ?v4 <http://xmlns.com/foaf/0.1/givenName> ""Enrico Crolla""@en . ?result <http://dbpedia.org/ontology/country> ?v2 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?entity WHERE {
  # Step 1: Find Andrea Cozzolino's political party
  ?party dbo:member dbr:Andrea_Cozzolino .
  ?party a dbo:PoliticalParty .

  # Step 2: Identify the Italian region and settlement that is also an administrative region
  ?region a dbo:Region ;
          dbo:country dbr:Italy ;
          dbo:settlement true ;
          dbo:administrativeRegion true .

  # Step 3: Determine Enrico Crolla's profession
  ?profession dbo:occupationOf dbr:Enrico_Crolla .

  # Step 4: Locate the landmark at the elevation of Anna Ishii's award
  ?award dbo:recipient dbr:Anna_Ishii .
  ?landmark dbo:elevation ?elevation ;
            dbo:associatedWith ?award .

  # Combine information to find a common entity
  ?entity = ?region ;
           = ?party ;
           = ?profession ;
           = ?landmark .
}
```",8,14,9,3,3,3,3,71,0,0,2,0,0.0,0
582,66,test,"Give me the reference to the residence of Hirotaka Sugawara and player in the father, that is an athlete and a soccer manager and a sports manager, of Masami Nagasawa and figure known as the nickname of the team, that is an organisation, of Hajime Moriyasu.",SELECT ?result WHERE { ?v1 <http://dbpedia.org/property/nickname> ?v2 . <http://dbpedia.org/resource/Hirotaka_Sugawara> <http://dbpedia.org/property/residence> ?v3 . ?v6 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Athlete>. ?result <http://xmlns.com/foaf/0.1/name> ?v3 . ?v6 <http://dbpedia.org/ontology/team> ?result . <http://dbpedia.org/resource/Masami_Nagasawa> <http://dbpedia.org/property/father> ?v6 . ?v6 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerManager>. ?result <http://dbpedia.org/property/nickname> ?v2 . ?v1 <http://dbpedia.org/ontology/coach> <http://dbpedia.org/resource/Hajime_Moriyasu> . ?v6 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsManager>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. },"```sparql
# Query for Hirotaka Sugawara's residence
SELECT ?residence WHERE {
  dbpedia:Hirotaka_Sugawara dbo:birthPlace ?residence .
}

# Query for Masami Nagasawa's father and his professions
SELECT ?father ?profession WHERE {
  dbpedia:Masami_Nagasawa dbo:father ?father .
  ?father rdf:type ?type .
  FILTER (?type IN (dbpedia:Athlete, dbpedia:Soccer_Manager, dbpedia:Sports_Manager))
}

# Query for Hajime Moriyasu's team nickname
SELECT ?team ?nickname WHERE {
  dbpedia:Hajime_Moriyasu dbo:currentTeam ?team .
  ?team rdfs:label ?nickname .
}
```",7,11,8,3,3,3,3,71,0,0,1,0,0.0,0
433,56,test,"Give me the associated musical artist of the person born, that is a musical artist and an artist, as Paul Laurence Dunbar Chambers Jr. and professional in the profession of the writer of Slowhand at 70 – Live at the Royal Albert Hall and associated musical artist of Bill Evans.","SELECT ?result WHERE { ?v2 <http://dbpedia.org/property/birthName> ""Paul Laurence Dunbar Chambers Jr.""@en . ?v0 <http://dbpedia.org/property/occupation> ?v1 . ?v2 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. <http://dbpedia.org/resource/Slowhand_at_70_–_Live_at_the_Royal_Albert_Hall> <http://dbpedia.org/property/writer> ?v0 . ?result <http://dbpedia.org/property/occupation> ?v1 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. <http://dbpedia.org/resource/Bill_Evans> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . }","```sparql
SELECT ?artist WHERE {
  ?paulChambers dbo:birthName ""Paul Laurence Dunbar Chambers Jr."" .
  ?billEvans dbo:birthName ""Bill Evans"" .
  ?clapton dbo:birthName ""Eric Patrick Clapton"" .

  ?milesArtist dbo:birthName ?artistName .
  ?milesArtist rdf:type dbo:MusicalArtist .
  ?milesArtist dbo:profession dbr:Musical_artist .

  ?paulChambers dbo:associatedBand ?band1 .
  ?billEvans dbo:associatedBand ?band2 .
  ?clapton dbo:associatedBand ?band3 .

  ?milesArtist dbo:associatedBand ?band1 ;
               dbo:associatedBand ?band2 ;
               dbo:associatedBand ?band3 .

  FILTER(?artistName = ""Miles Dewey Davis III"")
}
```",6,8,7,3,3,3,3,71,0,0,1,0,0.0,0
582,62,test,"Give me the figure known as --10-19 and reference to the residence of the reference, that is a scientist, to Hirotaka Sugawara and player in the father, that is an athlete and a soccer manager and a sports manager, of the child of Kazuaki Nagasawa.","SELECT ?result WHERE { ?v4 <http://xmlns.com/foaf/0.1/name> ""Hirotaka Sugawara""@en . ?v6 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Athlete>. ?result <http://xmlns.com/foaf/0.1/name> ?v3 . ?v0 <http://dbpedia.org/property/father> ?v6 . ?result <http://dbpedia.org/property/nickname> ""--10-19""^^<http://www.w3.org/2001/XMLSchema#gMonthDay> . ?v6 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerManager>. ?v4 <http://dbpedia.org/property/residence> ?v3 . ?v6 <http://dbpedia.org/ontology/team> ?result . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Scientist>. ?v0 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Kazuaki_Nagasawa> . ?v6 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsManager>. }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?residence ?father ?figure
WHERE {
  # Find Hirotaka Sugawara's residence
  OPTIONAL { 
    ?sugawara a dbo:Scientist ;
              foaf:name ""Hirotaka Sugawara"" .
    ?sugawara dbo:location ?residence .
  }

  # Find Kazuaki Nagasawa's father
  OPTIONAL {
    ?nagasawa a dbo:Person ;
              foaf:name ""Kazuaki Nagasawa"" .
    ?father dbo:child ?nagasawa ;
            dbo:sportCareer [a dbo:SoccerManager ; dbo:Athlete] ;
            foaf:name ?fatherName .
  }

  # Find the figure --10-19 related to the residence
  OPTIONAL {
    ?residence dbp:identifier ""--10-19"" .
    BIND(?residence AS ?figure)
  }
}
```",7,11,8,3,3,3,3,71,0,0,1,0,0.0,0
917,65,test,"Give me the child of the father of Kamehameha IV and parent of the child, that is a royalty, of Kamehameha IV and child of the father of the spouse, that is a royalty, of Leleiohoku I.",SELECT ?result WHERE { ?v2 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Kamehameha_IV> . ?v1 <http://dbpedia.org/property/father> ?v5 . ?v1 <http://dbpedia.org/ontology/spouse> <http://dbpedia.org/resource/Leleiohoku_I> . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?result <http://dbpedia.org/property/father> ?v0 . ?result <http://dbpedia.org/ontology/child> ?v2 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. <http://dbpedia.org/resource/Kamehameha_IV> <http://dbpedia.org/property/father> ?v0 . ?result <http://dbpedia.org/ontology/parent> ?v5 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?person WHERE {
  # Kamehameha IV's father
  dbr:Kamehameha_IV dbo:father dbr:Alexander_Liholiho .

  # Children of Kamehameha IV's father (royalty)
  dbr:Alexander_Liholiho dbo:child ?child1 .
  ?child1 a dbo:Monarch .

  # Leleiohoku I's spouse
  dbr:Liliʻuokalani dbo:spouse dbr:John_W._Kapiolani .

  # Father of Leleiohoku I's spouse
  dbr:John_W._Kapiolani dbo:father ?father2 .

  # Children of Leleiohoku I's spouse's father (royalty)
  ?father2 dbo:child ?child2 .
  ?child2 a dbo:Monarch .

  # Find the common person who is both ?child1 and ?child2
  FILTER (?child1 = ?child2)
}
```",7,9,8,3,3,3,3,71,0,0,1,0,0.0,0
47,69,test,"Give me the office of the awardee of the entity, that is an award, in India and office of the awardee of Banga Bhushan and office of the administration of the commander, that is a politician, in Operation Green Hunt.",SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/India> . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Award>. ?v2 <http://dbpedia.org/property/office> ?result . ?v7 <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/Banga_Bhushan> . ?v7 <http://dbpedia.org/property/office> ?result . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v2 <http://dbpedia.org/property/awards> ?v1 . <http://dbpedia.org/resource/Operation_Green_Hunt> <http://dbpedia.org/ontology/commander> ?v4 . ?v3 <http://dbpedia.org/property/governor> ?v4 . ?v3 <http://dbpedia.org/property/office> ?result . },"```sparql
# Query for office of the awardee of an award in India
SELECT ?award ?office WHERE {
  ?award dbo:country dbr:India .
  ?award dbo:recipient ?person .
  ?person dbo:occupation ?office .
} LIMIT 10

UNION

# Query for office of the awardee of Banga Bibhushan
SELECT ?person ?office WHERE {
  dbpedia:Banga_Bibhushan dbo:recipient ?person .
  ?person dbo:occupation ?office .
}

UNION

# Query for office of the administration of the commander in Operation Green Hunt
SELECT ?politician ?office WHERE {
  ?operation dcterms:subject dbc:Operation_Green_Hunt ;
             dbo:participant ?politician .
  ?politician a dbo:Politician ;
              dbo:occupation ?office .
} LIMIT 10
```",8,10,9,3,3,3,3,71,0,0,1,0,0.0,0
527,20,test,"Give me the actor of the movie, that is a work and English and a television show, with the professional in Actor and author of the work, that is a work and a book, of the host of Hyperland.","SELECT ?result WHERE { ?v5 <http://dbpedia.org/property/author> ?result . ?v5 <http://dbpedia.org/property/author> ?v4 . ?v1 <http://dbpedia.org/property/occupation> ""Actor""@en . ?v2 <http://dbpedia.org/property/starring> ?result . ?v2 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/United_Kingdom>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/TelevisionShow>. ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Book>. ?v2 <http://dbpedia.org/property/starring> ?v1 . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. <http://dbpedia.org/resource/Hyperland> <http://dbpedia.org/ontology/presenter> ?v4 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT DISTINCT ?actor WHERE {
  # Step 1: Find Hyperland and its host
  ?hyperland a dbo:TelevisionShow ;
             rdfs:label ""Hyperland""@en .
  
  ?host dbo:hostedBy ?hyperland ;
        dbp:name ?hostName .

  # Step 2: Identify books authored by the host of Hyperland
  ?book a dbo:Book ;
        dbo:author ?host ;
        rdfs:label ?bookLabel .

  # Step 3: Find movies that are works and in English, featuring an actor who is also an author of the book
  ?movie a dbo:Film ;
         dbo:language dbr:English ;
         dbo:starring ?actor .
  
  ?actor dbo:profession dbr:Actor ;
         dbo:authorOfBook ?book .

}
```",6,11,7,3,2,3,2,20,0,0,1,0,0.0,0
5,19,test,"Give me the birthplace of the person born, that is a politician, as  and entity in the award of the associated musical artist, that is a band, of Rubén Colón Tarrats.","SELECT ?result WHERE { ?v4 <http://dbpedia.org/property/awards> ?v0 . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Band>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v3 <http://dbpedia.org/property/birthName> """"@en . ?result <http://dbpedia.org/ontology/country> ?v0 . ?v3 <http://dbpedia.org/ontology/birthPlace> ?result . <http://dbpedia.org/resource/Rubén_Colón_Tarrats> <http://dbpedia.org/ontology/associatedMusicalArtist> ?v4 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?birthPlace WHERE {
  ?person a dbo:Person ;
          foaf:name ""Rubén Colón Tarrats""@en ;
          dbo:occupation ?occupation .
  
  FILTER(CONTAINS(LCASE(STR(?occupation)), ""politician""))

  OPTIONAL { 
    ?award dbo:recipient ?person ;
           dbo:givenBy ?artist .
    
    ?artist a dbo:Band ; # or dbo:MusicalArtist
            dbp:name ?artistName .
  }

  ?person dbo:birthPlace ?birthPlace .
}
```",5,7,6,3,2,3,2,20,0,0,2,0,0.0,0
865,66,test,"Give me the native of the residence, that is a country, of Ram Jaipal Singh Yadav and father of the child, that is a politician, of Abu Ahmad Abdul Hafiz and father of the child of the father of Abul Maal Abdul Muhith.",SELECT ?result WHERE { ?v5 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Abu_Ahmad_Abdul_Hafiz> . ?v3 <http://dbpedia.org/property/father> ?v6 . ?v3 <http://dbpedia.org/property/father> ?result . <http://dbpedia.org/resource/Ram_Jaipal_Singh_Yadav> <http://dbpedia.org/property/residence> ?v0 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. ?result <http://dbpedia.org/ontology/birthPlace> ?v0 . ?v5 <http://dbpedia.org/property/father> ?result . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. <http://dbpedia.org/resource/Abul_Maal_Abdul_Muhith> <http://dbpedia.org/property/father> ?v6 . },"```sparql
# Step 1: Find Abu Ahmad Abdul Hafiz's child who is a politician
SELECT ?politician WHERE {
    ?child dbr:Abu_Ahmad_Abdul_Hafiz dbo:parent ?father .
    ?father dbo:occupation dbr:Politician .
    ?child dbo:occupation dbr:Politician .
}

# Step 2: Find Abul Maal Abdul Muhith's grandfather
SELECT ?grandfather WHERE {
    ?father dbr:Abul_Maal_Abdul_Muhith dbo:parent ?mother .
    ?mother dbo:parent ?grandfather .
}

# Step 3: Find Ram Jaipal Singh Yadav's residence country and its native language
SELECT ?nativeLanguage WHERE {
    ?yadav dbr:Ram_Jaipal_Singh_Yadav dbo:residenceCountry ?country .
    ?country dbo:nativeName ?nativeLanguage .
}
```",7,9,8,3,3,3,3,71,0,0,1,0,0.0,0
917,56,test,"Give me the parent of the child, that is a royalty, of Kamehameha IV and child of Kekūanāoʻa and child of the father of the child, that is a royalty, of Kamehameha III.",SELECT ?result WHERE { ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v2 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Kamehameha_IV> . ?v4 <http://dbpedia.org/property/father> ?v0 . ?result <http://dbpedia.org/ontology/child> ?v2 . <http://dbpedia.org/resource/Kamehameha_III> <http://dbpedia.org/ontology/child> ?v4 . ?result <http://dbpedia.org/ontology/parent> <http://dbpedia.org/resource/Kekūanāoʻa> . ?result <http://dbpedia.org/property/father> ?v0 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. },"```sparql
SELECT ?parent WHERE {
  # Step 1: Identify Princess Victoria Kamāmalu as a royalty child of Kamehameha IV
  ?child dbr:Kamehameha_IV dbo:spouse ?mother .
  ?child rdf:type dbo:RoyalFamilyMember .
  ?child rdfs:label ""Victoria Kamāmalu""@en .

  # Step 2: Find the parent (Queen Emma) of Princess Victoria Kamāmalu
  ?mother rdfs:label ""Emma of Hawaii""@en .

  # Step 3: Check if Queen Emma is a child of Kekūanāoʻa
  ?mother dbo:parent ?parent .
  ?parent rdfs:label ""Kekūanāoʻa""@en .

  # Step 4: Identify the father of a royal child of Kamehameha III (e.g., Lunalilo)
  OPTIONAL {
    ?child3 dbr:Kamehameha_III dbo:spouse ?mother3 .
    ?child3 rdf:type dbo:RoyalFamilyMember .
    ?child3 rdfs:label ""Lunalilo""@en .
    ?father3 dbo:parent ?child3 .
    ?father3 rdfs:label ""Keōua Kuahuula""@en .
  }
}
```",6,8,7,3,3,3,3,71,0,0,1,0,0.0,0
645,69,test,"Give me the military force of the force, that is an event and a military conflict and a societal event, of Francisco Largo Caballero and leader of the office, that is a government agency and an organisation, of the native of Restoration (Spain) and commander in the force of the commander in Siege of Madrid.",SELECT ?result WHERE { ?v3 <http://dbpedia.org/ontology/commander> ?result . ?v7 <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Francisco_Largo_Caballero> . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/GovernmentAgency>. ?v7 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?v7 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?result <http://dbpedia.org/ontology/battle> ?v7 . ?v2 <http://dbpedia.org/ontology/leader> ?result . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?v7 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v3 <http://dbpedia.org/ontology/commander> ?v4 . ?v1 <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Restoration_(Spain)> . <http://dbpedia.org/resource/Siege_of_Madrid> <http://dbpedia.org/ontology/commander> ?v4 . ?v1 <http://dbpedia.org/property/office> ?v2 . },"```sparql
SELECT ?militaryForce WHERE {
  ?event rdf:type dbo:MilitaryConflict .
  ?event rdfs:label ""Spanish Civil War""@en .
  
  ?person1 foaf:name ""Francisco Largo Caballero""@en ;
           dbo:positionHeld ?office .
  
  ?office rdf:type dbo:GovernmentAgency ;
          dbo:leader ?person1 .

  ?person2 foaf:name ""José Miaja""@en ;
           dbo:commanderOf ?militaryForce .

  ?militaryForce rdfs:label ?label .
  FILTER(CONTAINS(LCASE(?label), ""republican army"") || CONTAINS(LCASE(?label), ""ejército popular de la república""))
}
```",8,13,9,3,3,3,3,71,0,0,2,0,0.0,0
933,65,test,"Give me the reference to the birth name of the professional in Musician and band of the band, that is a group and a band and an organisation, of Alan Warner (musician) and band of the band of Alan Warner (musician).",SELECT ?result WHERE { ?result <http://xmlns.com/foaf/0.1/name> ?v5 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Band>. <http://dbpedia.org/resource/Alan_Warner_(musician)> <http://dbpedia.org/ontology/associatedMusicalArtist> ?v0 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Group>. <http://dbpedia.org/resource/Alan_Warner_(musician)> <http://dbpedia.org/ontology/associatedMusicalArtist> ?v2 . ?v2 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v1 <http://dbpedia.org/property/occupation> <http://dbpedia.org/resource/Musician> . ?v0 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v1 <http://dbpedia.org/property/birthName> ?v5 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?birthName WHERE {
  ?person a dbo:Musician ;
          foaf:name ""Alan Warner"" .
  OPTIONAL { ?person dbo:birthName ?birthName . }
}
```",7,10,8,3,3,3,3,71,0,0,1,0,0.0,0
933,56,test,"Give me the band of the band, that is a group and a band and an organisation, of the person born, that is a musical artist, on 1947-04-21 and reference to Alan Warner and band of the band of Alan Warner (musician).","SELECT ?result WHERE { ?v4 <http://dbpedia.org/ontology/associatedMusicalArtist> ?v0 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Band>. <http://dbpedia.org/resource/Alan_Warner_(musician)> <http://dbpedia.org/ontology/associatedMusicalArtist> ?v2 . ?result <http://xmlns.com/foaf/0.1/name> ""Alan Warner""@en . ?v4 <http://dbpedia.org/ontology/birthDate> ""1947-04-21""^^<http://www.w3.org/2001/XMLSchema#date> . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Group>. ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?v0 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v2 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?person ?bandOfPerson ?alanWarnerBand ?relatedBand 
WHERE {
  # Step 1: Find the person born on 1947-04-21 who is a musical artist
  ?person dbo:birthDate ""1947-04-21""^^xsd:date ;
          rdf:type dbo:MusicalArtist .

  # Step 2: Get Alan Warner's band
  dbr:Alan_Warner_Musician dbo:band ?alanWarnerBand .
  
  # Step 3: Find the band of the person identified in step 1
  ?person dbo:band ?bandOfPerson ;
          rdf:type dbo:MusicalArtist .

  # Step 4: Identify any related bands to Alan Warner's band
  OPTIONAL { ?alanWarnerBand dbo:member ?relatedBand . }
}
```",6,10,7,3,3,3,3,71,0,0,1,0,0.0,0
18,26,test,"Give me the alumnus of the figure known, that is an educational institution, as Saints and professional in the award of Ana María Sánchez de Ríos and parent of Liza Huber.","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/almaMater> ?v1 . ?v1 <http://dbpedia.org/property/nickname> ""Saints""@en . ?result <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Liza_Huber> . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/EducationalInstitution>. ?result <http://dbpedia.org/property/occupation> ?v4 . <http://dbpedia.org/resource/Ana_María_Sánchez_de_Ríos> <http://dbpedia.org/property/awards> ?v4 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?alumnus WHERE {
  ?person dbo:almaMater dbr:Saint_Joseph%27s_University_(Philadelphia) .
  ?person foaf:name ""Ana María Sánchez de Ríos""@en .
}
```",5,6,6,2,3,2,3,28,0,0,1,0,0.0,0
933,61,test,"Give me the reference to the birth name of the professional in Musician and band of the band, that is a group and a band and an organisation, of the person born, that is a musical artist, on 1947-04-21.","SELECT ?result WHERE { ?v3 <http://dbpedia.org/ontology/associatedMusicalArtist> ?v0 . ?v1 <http://dbpedia.org/property/birthName> ?v4 . ?result <http://xmlns.com/foaf/0.1/name> ?v4 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Band>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Group>. ?v0 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v3 <http://dbpedia.org/ontology/birthDate> ""1947-04-21""^^<http://www.w3.org/2001/XMLSchema#date> . ?v1 <http://dbpedia.org/property/occupation> <http://dbpedia.org/resource/Musician> . }","```sparql
SELECT ?musician ?birthName WHERE {
  ?musician a dbo:MusicalArtist ;
            dbo:birthDate ?date .
  FILTER (YEAR(?date) = 1947 && MONTH(?date) = 4 && DAY(?date) = 21)
  
  OPTIONAL { ?musician foaf:name ?bandName . }
  OPTIONAL { ?musician dbo:birthName ?birthName . }

  ?band a dbo:Band, dbo:Organisation ;
        foaf:name ?bandName .

  FILTER EXISTS {
    ?musician dbo:member ?band .
  }
}
```",6,10,7,3,2,3,3,71,0,0,1,0,0.0,0
839,70,test,"Give me the band of the band, that is a musical artist, of the professional in Musician and band of the member of the band, that is a band and a group, of Peter Schorowsky and band of the person born, that is a musical artist, as Kevin Richard Russell.","SELECT ?result WHERE { ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Band>. ?v1 <http://dbpedia.org/ontology/associatedMusicalArtist> ?v3 . ?v1 <http://dbpedia.org/property/occupation> ""Musician""@en . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?result <http://dbpedia.org/ontology/bandMember> ?v7 . ?v0 <http://dbpedia.org/ontology/bandMember> ?v7 . ?v4 <http://dbpedia.org/property/birthName> ""Kevin Richard Russell""@en . <http://dbpedia.org/resource/Peter_Schorowsky> <http://dbpedia.org/ontology/associatedMusicalArtist> ?v0 . ?result <http://dbpedia.org/ontology/bandMember> ?v3 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?v4 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Group>. }","```sparql
SELECT DISTINCT ?bandOfPeter ?professionalInMusicianAndBand ?bandOfKevin ?personBornAsKevin WHERE {
  # Find Peter Schorowsky's band
  ?peter dbo:birthName ""Peter Schorowsky""@en .
  ?peter dbo:memberOfBand ?bandOfPeter .

  # Find professional in musician and band for that band
  OPTIONAL { 
    ?professionalInMusicianAndBand dbo:memberOfBand ?bandOfPeter ;
                                    a dbo:MusicalArtist .
  }

  # Find Kevin Richard Russell's band
  ?kevin dbo:birthName ""Kevin Richard Russell""@en .
  ?kevin dbo:memberOfBand ?bandOfKevin .

  # Confirm Kevin Richard Russell's identity through birth information
  OPTIONAL {
    ?personBornAsKevin dbo:birthDate ?birthDate ;
                       rdfs:label ""Kevin Richard Russell""@en .
  }
}
```",8,12,9,3,3,3,3,71,0,0,1,0,0.0,0
826,69,test,"Give me the spouse of the child of the father of Anna Magdalena Appel and successor of the child, that is a royalty, of Louis I, Grand Duke of Hesse and predecessor of the parent of the child of Louis IV, Grand Duke of Hesse.","SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/parent> <http://dbpedia.org/resource/Louis_IV,_Grand_Duke_of_Hesse> . ?v3 <http://dbpedia.org/ontology/spouse> ?result . ?v1 <http://dbpedia.org/ontology/parent> ?v2 . ?result <http://dbpedia.org/ontology/successor> ?v2 . ?v7 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v7 <http://dbpedia.org/ontology/successor> ?result . <http://dbpedia.org/resource/Louis_I,_Grand_Duke_of_Hesse> <http://dbpedia.org/ontology/child> ?v7 . <http://dbpedia.org/resource/Anna_Magdalena_Appel> <http://dbpedia.org/property/father> ?v4 . ?v3 <http://dbpedia.org/property/father> ?v4 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?spouse WHERE {
  # Step 1: Identify Johann Sebastian Bach as the spouse of a child of Johann Michael Jagemann
  dbr:Anna_Magdalena_Bach dbo:father dbr:Johann_Michael_Jagemann .
  dbr:Johann_Sebastian_Bach dbo:spouse dbr:Anna_Magdalena_Bach .

  # Step 2: Identify Louis II, Grand Duke of Hesse as the successor and royalty
  dbr:Louis_II,_Grand_Duke_of_Hesse dbo:succeededBy ?successor .
  ?successor a dbo:Monarch .

  # Step 3: Identify Ludwig III as predecessor to Louis IV's parent
  dbr:Ludwig_IV,_Grand_Duke_of_Hesse dbo:father dbr:Ludwig_III,_Grand_Duke_of_Hesse .
  dbr:Ludwig_III,_Grand_Duke_of_Hesse dbo:succeededBy ?predecessor .

  # Step 4: Confirm Johann Sebastian Bach's spouse
  ?spouse rdfs:label ""Anna Magdalena Bach""@en .
}
```",8,9,9,3,3,3,3,71,0,0,1,0,0.0,0
216,71,test,"Give me the team of the person born, that is a sports manager and a soccer manager and a soccer player, on the death of Pavel Vezhinov and player in the coach of the reference, that is an organisation and a soccer club, to Croatia U21 and player in the coach, that is a soccer player and a sports manager and a soccer manager, of the player, that is an organisation and a sports club and a soccer club, in Džemal Berberović.","SELECT ?result WHERE { ?v8 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsManager>. ?v8 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerManager>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?v1 <http://dbpedia.org/ontology/coach> ?v2 . ?v8 <http://dbpedia.org/ontology/birthDate> ?v7 . ?result <http://dbpedia.org/ontology/coach> ?v8 . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerPlayer>. ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsManager>. ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?v1 <http://xmlns.com/foaf/0.1/name> ""Croatia U21""@en . <http://dbpedia.org/resource/Džemal_Berberović> <http://dbpedia.org/ontology/team> ?v4 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerClub>. ?v2 <http://dbpedia.org/ontology/team> ?result . ?v5 <http://dbpedia.org/ontology/team> ?result . <http://dbpedia.org/resource/Pavel_Vezhinov> <http://dbpedia.org/ontology/deathDate> ?v7 . ?v8 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerPlayer>. ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsClub>. ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerManager>. ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerClub>. ?v4 <http://dbpedia.org/ontology/coach> ?v5 . }","```sparql
# Step 1: Find Pavel Vezhinov's death date
SELECT ?deathDate WHERE {
  dbpedia:Pavel_Vezhinov dbo:deathDate ?deathDate .
}

# Step 2: Identify sports manager, soccer manager, and player born on that date
SELECT DISTINCT ?person WHERE {
  ?person a dbo:SportsManager ;
          a dbo:SoccerManager ;
          a dbo:SoccerPlayer ;
          dbo:birthDate ?birthDate .
  FILTER (?birthDate = <deathDateFromStep1>)
}

# Step 3: Find the team associated with this person as coach for Croatia U21
SELECT DISTINCT ?team WHERE {
  ?person dbo:coachOfTeam ?croatiaU21 .
  ?croatiaU21 rdfs:label ""Croatia national under-21 football team""@en .
  ?person dbo:member ?team .
}

# Step 4: Identify another individual who was a player, manager, and coach related to Džemal Berberović
SELECT DISTINCT ?individual WHERE {
  ?individual a dbo:SoccerPlayer ;
              a dbo:SportsManager ;
              a dbo:SoccerManager ;
              dbo:coachOfPerson ?džemalBerberović .
  dbpedia:Džemal_Berberović rdfs:label ""Džemal Berberović""@en .
}

# Step 5: Find the organization or club linked to this individual as a player in their coaching career
SELECT DISTINCT ?organization WHERE {
  ?individual dbo:member ?organization .
}
```",9,20,10,3,3,3,3,71,0,0,1,0,0.0,0
216,25,test,Give me the office of the mayor of Ros Bates and administration of  and party of the awardee of Australian Defence Medal.,"SELECT ?result WHERE { ?v3 <http://dbpedia.org/property/office> ?result . ?v4 <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/Australian_Defence_Medal> . ?result <http://dbpedia.org/property/leader> """"@en . ?v4 <http://dbpedia.org/ontology/party> ?result . <http://dbpedia.org/resource/Ros_Bates> <http://dbpedia.org/property/leader> ?v3 . }","```sparql
# Query for Ros Bates' office and administration
SELECT ?office ?administration WHERE {
  ?rosBates dbo:occupation dbr:Municipal_government_official .
  ?rosBates foaf:name ""Ros Bates"" .
  ?rosBates dbo:positionHeld ?mayorship .
  ?mayorship dbo:officeName ?office .
  ?mayorship dbo:administrativeArea dbr:Rockhampton .
  OPTIONAL { ?mayorship dbo:startDate ?start . }
  OPTIONAL { ?mayorship dbo:endDate ?end . }
  OPTIONAL {
    ?administration dbo:member ?rosBates ;
                    dbo:startDate ?adminStart ;
                    dbo:endDate ?adminEnd .
  }
}

UNION

# Query for an awardee of the Australian Defence Medal and their party
SELECT ?person ?party WHERE {
  ?awardee dbo:award dbr:Australian_Defence_Medal .
  ?awardee foaf:name ?person .
  OPTIONAL {
    ?politicalRole dbo:agent ?awardee ;
                   dbo:positionTitle ?title .
    ?politicalParty dbo:member ?politicalRole .
    ?politicalParty rdfs:label ?party .
  }
}
```",5,5,6,2,3,2,3,28,0,0,1,0,0.0,0
926,57,test,"Give me the father of Mahmud II and child of the father, that is a royalty, of Mustafa III and successor of the child of the spouse of Şermi Kadın.",SELECT ?result WHERE { <http://dbpedia.org/resource/Mustafa_III> <http://dbpedia.org/property/father> ?v0 . <http://dbpedia.org/resource/Mahmud_II> <http://dbpedia.org/property/father> ?result . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v4 <http://dbpedia.org/property/father> ?v1 . ?v4 <http://dbpedia.org/ontology/successor> ?result . ?v0 <http://dbpedia.org/ontology/child> ?result . ?v1 <http://dbpedia.org/ontology/spouse> <http://dbpedia.org/resource/Şermi_Kadın> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?fatherOfMahmudII ?childOfAhmadIII ?successorOfMahmudII WHERE {
  # Father of Mahmud II
  dbr:Mahmud_II dbo:father dbr:Abdul_Hamid_I .
  BIND(dbr:Abdul_Hamid_I AS ?fatherOfMahmudII)

  # Child of Ahmad III who is royalty (Mustafa III)
  dbr:Ahmad_III dbo:child dbr:Mustafa_III .
  FILTER EXISTS { dbr:Mustafa_III a dbo:Monarch }
  BIND(dbr:Mustafa_III AS ?childOfAhmadIII)

  # Successor of Mahmud II
  dbr:Mahmud_II dbo:successor dbr:Abdulmejid_I .
  BIND(dbr:Abdulmejid_I AS ?successorOfMahmudII)
}
```",6,7,7,3,3,3,3,71,0,0,1,0,0.0,0
507,68,test,"Give me the spouse of the person born as the birth name of Anne V. Coates and director of the movie, that is a movie and a work, with the person born on 1919-06-17 and professional in the profession of Guy Ferland.","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/spouse> ?v4 . ?v7 <http://dbpedia.org/ontology/director> ?result . ?v7 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?v7 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Film>. ?v0 <http://dbpedia.org/ontology/birthDate> ""1919-06-17""^^<http://www.w3.org/2001/XMLSchema#date> . ?result <http://dbpedia.org/property/occupation> ?v3 . ?v7 <http://dbpedia.org/property/starring> ?v0 . <http://dbpedia.org/resource/Anne_V._Coates> <http://dbpedia.org/property/birthName> ?v5 . <http://dbpedia.org/resource/Guy_Ferland> <http://dbpedia.org/property/occupation> ?v3 . ?v4 <http://dbpedia.org/property/birthName> ?v5 . }","```sparql
SELECT ?spouse WHERE {
  wd:Q123456 wdt:P569 ?birthDate .
  FILTER (YEAR(?birthDate) = 1919 && MONTH(?birthDate) = 6 && DAY(?birthDate) = 17) .
  OPTIONAL { wd:Q123456 wdt:P26 ?spouse . }
}
```

In this query:
- Replace `wd:Q123456` with the actual DBpedia identifier for Anne V. Coates.
- The filter ensures we are looking at the correct birth date.
- We retrieve the spouse using the property `P26`.",8,10,9,3,3,3,3,71,0,0,1,0,0.0,0
495,18,test,Give me the child of the father of the parent of Princess Catherine of Württemberg and father of the child of Princess Charlotte of Saxe-Hildburghausen.,SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Princess_Catherine_of_Württemberg> . ?v3 <http://dbpedia.org/ontology/parent> <http://dbpedia.org/resource/Princess_Charlotte_of_Saxe-Hildburghausen> . ?v3 <http://dbpedia.org/property/father> ?result . ?v1 <http://dbpedia.org/property/father> ?v2 . ?result <http://dbpedia.org/property/father> ?v2 . },"```sparql
SELECT DISTINCT ?result WHERE {
  # Step 1: Find Princess Catherine of Württemberg's father
  ?catherine dbo:parent ?fatherCatherine .
  ?catherine foaf:name ""Princess Catherine of Württemberg""@en .

  # Step 2: Identify a child of this father (could be Catherine or another sibling)
  ?childFatherCatherine dbo:parent ?fatherCatherine .

  # Step 3: Find Princess Charlotte of Saxe-Hildburghausen's child
  ?charlotteChild dbo:parent ?motherCharlotte .
  ?motherCharlotte foaf:name ""Princess Charlotte of Saxe-Hildburghausen""@en .

  # Step 4: Determine the father of this child
  ?fatherCharlotteChild dbo:child ?charlotteChild .

  # Final step: Find the child of both identified fathers
  ?result dbo:parent ?fatherCatherine .
  ?result dbo:parent ?fatherCharlotteChild .
}
```",5,5,6,3,2,3,2,20,0,0,1,0,0.0,0
433,57,test,"Give me the professional in the profession of Bob Marley and associated musical artist of the associated musical artist, that is an artist and a musical artist, of the associated musical artist, that is a musical artist and an artist, of Ornette Coleman and associated musical artist of Paul Chambers.",SELECT ?result WHERE { <http://dbpedia.org/resource/Bob_Marley> <http://dbpedia.org/property/occupation> ?v3 . ?v5 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. ?result <http://dbpedia.org/property/occupation> ?v3 . ?v0 <http://dbpedia.org/ontology/associatedMusicalArtist> ?v5 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. <http://dbpedia.org/resource/Ornette_Coleman> <http://dbpedia.org/ontology/associatedMusicalArtist> ?v0 . <http://dbpedia.org/resource/Paul_Chambers> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. },"```sparql
# Step 1: Find Bob Marley's profession
SELECT ?profession WHERE {
    wd:Q34555 wdt:P106 ?occupation .
    FILTER(?occupation = wd:Q33999) # Musician
}

# Step 2: Find associated musical artists of Bob Marley
SELECT DISTINCT ?associatedArtist WHERE {
    wd:Q34555 wdt:P463 ?associatedArtist .
    ?associatedArtist wdt:P106 wd:Q33999 . # Ensure they are musicians
}

# Step 3: Filter for those who are also recognized as artists
SELECT DISTINCT ?artist WHERE {
    ?artist wdt:P106 wd:Q33999 . # Must be a musician
    OPTIONAL { ?artist wdt:P101 wd:Q33231 } # Check if they are also an artist (in any form)
}

# Step 4: Find associated musical artists of Ornette Coleman
SELECT DISTINCT ?associatedArtist WHERE {
    wd:Q12345 wdt:P463 ?associatedArtist .
    ?associatedArtist wdt:P106 wd:Q33999 . # Ensure they are musicians
}

# Step 5: Find associated musical artists of Paul Chambers
SELECT DISTINCT ?associatedArtist WHERE {
    wd:Q67890 wdt:P463 ?associatedArtist .
    ?associatedArtist wdt:P106 wd:Q33999 . # Ensure they are musicians
}

# Step 6: Combine results to find common individuals
SELECT DISTINCT ?commonArtist WHERE {
    { SELECT DISTINCT ?artist WHERE {
        wd:Q34555 wdt:P463 ?artist .
        ?artist wdt:P106 wd:Q33999 .
        OPTIONAL { ?artist wdt:P101 wd:Q33231 }
    }}
    UNION
    { SELECT DISTINCT ?artist WHERE {
        wd:Q12345 wdt:P463 ?artist .
        ?artist wdt:P106 wd:Q33999 .
    }}
    UNION
    { SELECT DISTINCT ?artist WHERE {
        wd:Q67890 wdt:P463 ?artist .
        ?artist wdt:P106 wd:Q33999 .
    }}
}
```",6,10,7,3,3,3,3,71,0,0,4,0,0.0,0
445,60,test,"Give me the entity in the residence, that is a country, of the resident, that is an athlete, of Great Britain and entity in the award of the commander in Battle of Saint-Mihiel.",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/location> ?v2 . ?v0 <http://dbpedia.org/property/awards> ?v1 . <http://dbpedia.org/resource/Battle_of_Saint-Mihiel> <http://dbpedia.org/ontology/commander> ?v0 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Athlete>. ?v3 <http://dbpedia.org/property/residence> <http://dbpedia.org/resource/Great_Britain> . ?result <http://dbpedia.org/ontology/country> ?v1 . ?v3 <http://dbpedia.org/property/residence> ?v2 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. },"```sparql
SELECT DISTINCT ?entity WHERE {
  # Step 1: Find athletes from Great Britain
  ?athlete dbo:nationality dbr:United_Kingdom ;
           rdf:type dbo:Athlete .
  
  # Step 2: Get the country of residence (Great Britain)
  ?country rdfs:label ""United Kingdom""@en .

  # Step 3: Find commanders in the Battle of Saint-Mihiel
  ?commander dbo:commanded dbr:Battle_of_Saint-Mihiel ;
             rdf:type dbo:Military_person .
  
  # Step 4: Get awards associated with these commanders
  ?award dbo:recipient ?commander .

  # Step 5: Find common entities between the country and the award
  FILTER(?country = ?entity || ?award = ?entity)
}
```",6,8,7,3,2,3,3,71,0,0,102,0,0.0,0
124,62,test,"Give me the military force of Battle of Atbara and commander in the war, that is a societal event and a military conflict, of the reference, that is Australian and an organisation and a military unit, to 'A' Battery, Royal Australian Artillery and military force of the war, that is an event and a military conflict and a societal event, of the awardee of British South Africa Company Medal.","SELECT ?result WHERE { ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?v3 <http://dbpedia.org/ontology/commander> ?result . ?v4 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Australia>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v6 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?result <http://dbpedia.org/ontology/battle> ?v6 . ?v0 <http://dbpedia.org/ontology/battle> ?v6 . ?v6 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v0 <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/British_South_Africa_Company_Medal> . ?v4 <http://dbpedia.org/ontology/battle> ?v3 . ?v4 <http://xmlns.com/foaf/0.1/name> ""'A' Battery, Royal Australian Artillery""@en . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?result <http://dbpedia.org/ontology/battle> <http://dbpedia.org/resource/Battle_of_Atbara> . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryUnit>. ?v6 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?battle ?commander ?militaryForce WHERE {
  # Battle of Atbara and its commander
  dbr:Battle_of_Atbara dbo:commandedBy ?commander .
  
  # Military force involved in the Battle of Atbara
  ?battle dbo:militaryConflictOf ?militaryForce .

  # 'A' Battery, Royal Australian Artillery involvement
  dbr:A_Battery,_Royal_Australian_Artillery dbo:participatedIn ?conflict .

  # Conflict involving awardee of British South Africa Company Medal (Second Boer War)
  dbr:Second_Boer_War dbo:militaryConflictOf ?militaryForce .
  
  # Linking the military force
  ?battle rdfs:label ?eventLabel FILTER(CONTAINS(LCASE(?eventLabel), ""atbara"")) .
}
```",7,15,8,3,3,3,3,71,0,0,1,0,0.0,0
773,59,test,"Give me the parent of the successor of the child, that is a royalty, of Louis the Pious and spouse of the father of the parent of Bernard (son of Charles the Fat).",SELECT ?result WHERE { ?v2 <http://dbpedia.org/ontology/spouse> ?result . ?result <http://dbpedia.org/ontology/child> ?v5 . ?v0 <http://dbpedia.org/ontology/successor> ?v5 . ?v3 <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Bernard_(son_of_Charles_the_Fat)> . <http://dbpedia.org/resource/Louis_the_Pious> <http://dbpedia.org/ontology/child> ?v0 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v3 <http://dbpedia.org/property/father> ?v2 . },"```sparql
SELECT DISTINCT ?parentOfSuccessorSpouse WHERE {
  # Step 1: Louis the Pious' children
  ?louis dbo:child ?child .
  VALUES ?louis { dbr:Louis_the_Pious } .

  # Step 2: Child that is a royalty
  ?child rdf:type dbo:Monarch .

  # Step 3: Successor of this child
  ?successor dbo:predecessorOrSuccessorOf ?child .
  FILTER (?successor != ?child) .

  # Step 4: Parent of the successor
  ?parentOfSuccessor dbo:child ?successor .

  # Step 5: Spouse of the father of the parent (same as step 4)
  ?spouse dbo:spouse ?fatherOfParent .
  ?fatherOfParent dbo:child ?parentOfSuccessor .

  # Step 6: Bernard's lineage
  ?charlesFat dbo:son dbr:Bernard_I_of_France .
  VALUES ?charlesFat { dbr:Charles_the_Fat } .
  
  ?bernardParent dbo:child dbr:Bernard_I_of_France .
  ?grandparentOfBernard dbo:child ?bernardParent .

  # Step 7: Parent of Bernard's parent (same as step 5)
  FILTER (?spouse = ?fatherOfParent) .

  BIND(?spouse AS ?parentOfSuccessorSpouse)
}
```",6,7,7,3,2,3,3,71,0,0,1,0,0.0,0
47,64,test,"Give me the office of Bidesh Ranjan Bose and office of the administration of the commander, that is a politician, in Operation Green Hunt and office of the awardee of the entity, that is an award, in India.",SELECT ?result WHERE { ?v2 <http://dbpedia.org/property/governor> ?v3 . <http://dbpedia.org/resource/Operation_Green_Hunt> <http://dbpedia.org/ontology/commander> ?v3 . ?v1 <http://dbpedia.org/property/awards> ?v0 . ?v0 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/India> . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Award>. ?v1 <http://dbpedia.org/property/office> ?result . ?v2 <http://dbpedia.org/property/office> ?result . <http://dbpedia.org/resource/Bidesh_Ranjan_Bose> <http://dbpedia.org/property/office> ?result . },"```sparql
# Query for Bidesh Ranjan Bose's office or position
SELECT ?office WHERE {
  ?person foaf:name ""Bidesh Ranjan Bose""@en .
  ?person dbo:occupation ?office .
}

UNION

# Query for the politician involved in Operation Green Hunt and their role
SELECT ?politician ?role WHERE {
  ?operation dcterms:title ""Operation Green Hunt""@en .
  ?operation dbo:participant ?politician .
  ?politician dbo:occupation ?role .
}

UNION

# Query for an awardee of an award in India and their office or position
SELECT ?entity ?office WHERE {
  ?award dbo:country dbr:India .
  ?award dbo:recipient ?entity .
  ?entity dbo:occupation ?office .
}
```",7,9,8,3,3,3,3,71,0,0,1,0,0.0,0
865,63,test,"Give me the father of the child of Abu Ahmad Abdul Hafiz and native of the residence, that is a country, of the person decedent at Patna and father of the child, that is a politician, of Abu Ahmad Abdul Hafiz.",SELECT ?result WHERE { ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. ?v4 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Abu_Ahmad_Abdul_Hafiz> . ?v1 <http://dbpedia.org/property/residence> ?v0 . ?result <http://dbpedia.org/ontology/birthPlace> ?v0 . ?v4 <http://dbpedia.org/property/father> ?result . ?v3 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Abu_Ahmad_Abdul_Hafiz> . ?v3 <http://dbpedia.org/property/father> ?result . ?v1 <http://dbpedia.org/ontology/deathPlace> <http://dbpedia.org/resource/Patna> . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?fatherOfPolitician WHERE {
  # Abu Ahmad Abdul Hafiz's child
  ?child dbo:parent dbr:Abu_Ahmad_Abdul_Hafiz .
  
  # The father of the child is Abu Ahmad Abdul Hafiz himself
  ?abuAhmad dbo:child ?child .

  # Find the decedent at Patna and their native country
  ?decedent dbo:placeOfBirth dbr:Patna ;
            dbo:nationality ?countryResidence .
  
  # The politician who is a child of this person
  ?politician dbo:parent ?decedent .

  # Find the father of this politician
  ?fatherOfPolitician dbo:child ?politician .
}
```",7,9,8,3,3,3,3,71,0,0,1,0,0.0,0
715,67,test,"Give me the commander in the force of the mayor, that is an office holder and a politician and a president, of 1933 Spanish general election and leader of the office, that is a government agency and an organisation, of the reference to Carlos Franco Iribarnegaray and commander in Rif War.","SELECT ?result WHERE { <http://dbpedia.org/resource/Rif_War> <http://dbpedia.org/ontology/commander> ?result . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v1 <http://xmlns.com/foaf/0.1/name> ""Carlos Franco Iribarnegaray""@en . ?v6 <http://dbpedia.org/ontology/commander> ?result . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/President>. <http://dbpedia.org/resource/1933_Spanish_general_election> <http://dbpedia.org/property/leader> ?v0 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/GovernmentAgency>. ?v3 <http://dbpedia.org/ontology/leader> ?result . ?v1 <http://dbpedia.org/property/office> ?v3 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?v6 <http://dbpedia.org/ontology/commander> ?v0 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?person WHERE {
    ?person a dbo:Politician ;
            dbo:officeHolderOf dbr:Spain ;
            dbo:presidentOf dbr:Spain ;
            dbo:leaderOf ?organization .
    
    ?organization dbo:referenceTo dbr:Carlos_Franco_Iribarnegaray ;
                  dbo:commanderInRifWar ?rifWarCommander .

    FILTER (?rifWarCommander = ?person)
}
```",7,12,8,3,3,3,3,71,0,0,1,0,0.0,0
98,9,test,Give me the parent of the successor of Emperor Nijō and child of the child of Emperor Toba.,SELECT ?result WHERE { <http://dbpedia.org/resource/Emperor_Nijō> <http://dbpedia.org/ontology/successor> ?v1 . ?result <http://dbpedia.org/ontology/parent> ?v3 . <http://dbpedia.org/resource/Emperor_Toba> <http://dbpedia.org/ontology/child> ?v3 . ?v1 <http://dbpedia.org/ontology/parent> ?result . },"```sparql
# Step 1: Find the successor of Emperor Nijō
SELECT ?successor WHERE {
  ?nijo dbo:succession dbr:Emperor_Nijō .
  ?successor dbo:predecessor ?nijo .
}

# Step 2: Find the parent of this successor
SELECT ?parent WHERE {
  ?successor dbo:fatherOrMother ?parent .
  # Assuming we have identified the successor from step 1, replace <SUCCESSOR_URI> with its URI
  FILTER(?successor = <SUCCESSOR_URI>)
}

# Step 3: Find a child of Emperor Toba and then their own child (grandchild of Emperor Toba)
SELECT ?grandchild WHERE {
  ?toba dbo:child ?child .
  ?child dbo:child ?grandchild .
  # Assuming we have identified the URI for Emperor Toba, replace <EMPEROR_TOBA_URI> with its URI
  FILTER(?toba = <EMPEROR_TOBA_URI>)
}

# Step 4: Find common entity between parent of successor and grandchild of Emperor Toba
SELECT ?commonEntity WHERE {
  # Assuming we have identified the parent from step 2, replace <PARENT_URI> with its URI
  VALUES (?parent) {<PARENT_URI>}
  
  # Assuming we have identified grandchildren from step 3, replace <GRANDCHILD_URIS> with their URIs
  VALUES (?grandchild) {<GRANDCHILD_URIS>}
  
  FILTER(?parent = ?grandchild)
}
```",4,4,5,2,2,2,2,9,0,0,1,0,0.0,0
18,28,test,"Give me the parent of the professional in Actress and alumnus of the figure known, that is an educational institution, as Saints and professional in the award of Ana María Sánchez de Ríos.","SELECT ?result WHERE { ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/EducationalInstitution>. <http://dbpedia.org/resource/Ana_María_Sánchez_de_Ríos> <http://dbpedia.org/property/awards> ?v1 . ?result <http://dbpedia.org/property/occupation> ?v1 . ?result <http://dbpedia.org/ontology/child> ?v3 . ?v3 <http://dbpedia.org/property/occupation> ""Actress""@en . ?result <http://dbpedia.org/ontology/almaMater> ?v5 . ?v5 <http://dbpedia.org/property/nickname> ""Saints""@en . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?parentInstitution WHERE {
  ?person foaf:name ""Ana María Sánchez de Ríos""@en .
  ?person dbo:profession dbr:Actress .
  ?person dbo:almaMater ?institution .
  ?institution rdfs:label ""Saints""@en .
  
  OPTIONAL { ?institution dbo:foundingOrganization ?parentInstitution . }
  OPTIONAL { ?institution dbo:parentOrganization ?parentInstitution . }

  FILTER (lang(?institutionLabel) = 'en')
}
```",6,7,7,2,3,2,3,28,0,0,1,0,0.0,0
554,18,test,Give me the leader of the birth place of The Legendary Tigerman and leader of the administration of the party member of Independent politician.,SELECT ?result WHERE { ?v2 <http://dbpedia.org/property/leader> ?result . ?v2 <http://dbpedia.org/property/leader> ?v1 . ?v1 <http://dbpedia.org/ontology/party> <http://dbpedia.org/resource/Independent_politician> . <http://dbpedia.org/resource/The_Legendary_Tigerman> <http://dbpedia.org/ontology/birthPlace> ?v3 . ?v3 <http://dbpedia.org/property/leader> ?result . },"```sparql
# Query for The Legendary Tigerman's birthplace and its leader
SELECT ?birthPlaceLabel ?leaderLabel WHERE {
  ?tigerman dbo:birthPlace ?birthPlace .
  ?birthPlace rdfs:label ?birthPlaceLabel .
  FILTER(CONTAINS(LCASE(?birthPlaceLabel), ""john murphy"")) # Assuming DBpedia has a direct link to John Murphy as The Legendary Tigerman
  OPTIONAL { 
    ?birthPlace dbo:mayor ?leader .
    ?leader rdfs:label ?leaderLabel .
  }
  
  SERVICE wikibase:label { bd:serviceParam wikibase:language ""[AUTO_LANGUAGE],en"". }
}

UNION

# Query for an independent politician and the leader of their administration
SELECT ?politicianLabel ?partyLabel ?adminLeaderLabel WHERE {
  ?politician dbo:politicalParty ?party .
  ?party rdfs:label ?partyLabel .
  FILTER(CONTAINS(LCASE(?partyLabel), ""independent"")) # Assuming there's a direct link to an independent party or politician
  OPTIONAL { 
    ?politician dbo:memberOf ?administration .
    ?administration dbo:leader ?adminLeader .
    ?adminLeader rdfs:label ?adminLeaderLabel .
  }
  
  SERVICE wikibase:label { bd:serviceParam wikibase:language ""[AUTO_LANGUAGE],en"". }
}
```",5,5,6,3,2,3,2,20,0,0,3,0,0.0,0
341,8,test,"Give me the writer of the work, that is a work and an album, of Serrano and band member of Beyoncé.","SELECT ?result WHERE { ?v1 <http://dbpedia.org/property/writer> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Album>. ?result <http://dbpedia.org/ontology/associatedMusicalArtist> <http://dbpedia.org/resource/Beyoncé> . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?v1 <http://dbpedia.org/property/writer> ""Serrano""@en . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?writer WHERE {
  ?album dbo:work dbr:The_Lion_King_(1994_film) .
  ?album a dbo:Album .

  OPTIONAL { 
    ?album dbo:lyricist ?writer .
  }

  FILTER EXISTS {
    ?book dbo:subject dbr:The_Lion_King_(1994_film) .
    ?book a dbo:Book .
  }
}
```",3,5,4,2,2,2,2,9,0,0,1,0,0.0,0
965,66,test,"Give me the parent of the person born, that is a noble, as the birth name of George Mountbatten, 2nd Marquess of Milford Haven and parent of the child, that is a royalty, of Prince Louis of Battenberg and spouse of the spouse of Princess Victoria of Hesse and by Rhine.","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/spouse> ?v3 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Noble>. ?v6 <http://dbpedia.org/ontology/parent> ?result . <http://dbpedia.org/resource/Princess_Victoria_of_Hesse_and_by_Rhine> <http://dbpedia.org/ontology/spouse> ?v3 . ?v0 <http://dbpedia.org/property/birthName> ?v5 . ?v6 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Prince_Louis_of_Battenberg> . ?v6 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. <http://dbpedia.org/resource/George_Mountbatten,_2nd_Marquess_of_Milford_Haven> <http://dbpedia.org/property/birthName> ?v5 . ?v0 <http://dbpedia.org/ontology/parent> ?result . }","```sparql
SELECT ?parent WHERE {
  wd:Q2104 wdt:P31/wdt:P279* wd:Q215627 .
  wd:Q2104 wdt:P22 ?parent .
  ?parent wdt:P31 wd:Q34629 .
}
```",7,9,8,3,3,3,3,71,0,0,1,0,0.0,0
130,20,test,"Give me the figure known as the film, that is a soccer club and an organisation, of the native, that is a coach and a college coach, of Madison, Alabama and entity in the administration, that is American, of the award of Živko Ključe.","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/state> ?v5 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/CollegeCoach>. ?result <http://dbpedia.org/property/nickname> ?v2 . ?v2 <http://dbpedia.org/ontology/director> ?v1 . <http://dbpedia.org/resource/Živko_Ključe> <http://dbpedia.org/property/awards> ?v4 . ?v5 <http://dbpedia.org/property/governor> ?v4 . ?v5 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/United_States>. ?v1 <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Madison,_Alabama> . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerClub>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Coach>. }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?person ?filmFigure ?soccerClub ?award WHERE {
  # Find a person from Madison, Alabama who is a coach and college coach
  ?person dbo:nationality dbr:United_States ;
          dbo:birthPlace dbr:Madison,_Alabama ;
          dbo:occupation dbr:Coolie ;
          dbo:almaMater ?college .
  
  # Find if this person is associated with a soccer club or organization as a film figure
  OPTIONAL { ?filmFigure dbo:subject ?person . }
  OPTIONAL { ?soccerClub dbo:coach ?person ; 
             dbo:wikiPageRedirects ?filmFigure . }

  # Identify an American award related to Živko Ključe
  ?award dbo:name ?awardName ;
         dbo:administrator ?person .
  
  FILTER regex(?awardName, ""Živko Ključe"", ""i"")
}
```",6,11,7,3,2,3,2,20,0,0,1,0,0.0,0
216,70,test,"Give me the player in the coach, that is a soccer player and a sports manager and a soccer manager, of the player, that is an organisation and a sports club and a soccer club, in Džemal Berberović and player in the coach of Croatia national under-21 football team and team of the person born, that is a sports manager and a soccer manager and a soccer player, on the death of Pavel Vezhinov.",SELECT ?result WHERE { ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsClub>. <http://dbpedia.org/resource/Croatia_national_under-21_football_team> <http://dbpedia.org/ontology/coach> ?v4 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerPlayer>. <http://dbpedia.org/resource/Pavel_Vezhinov> <http://dbpedia.org/ontology/deathDate> ?v1 . ?v7 <http://dbpedia.org/ontology/team> ?result . ?v7 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerPlayer>. ?v7 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerManager>. ?v4 <http://dbpedia.org/ontology/team> ?result . ?v3 <http://dbpedia.org/ontology/birthDate> ?v1 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsManager>. ?v7 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsManager>. <http://dbpedia.org/resource/Džemal_Berberović> <http://dbpedia.org/ontology/team> ?v0 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerClub>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerManager>. ?v0 <http://dbpedia.org/ontology/coach> ?v7 . ?result <http://dbpedia.org/ontology/coach> ?v3 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?player ?club WHERE {
  # Džemal Berberović's role as a coach
  ?coach dbr:Džemal_Berberović .
  
  # Player coached by Džemal Berberović who is also a soccer player, sports manager, and soccer manager
  ?player dbo:coach ?coach ;
          rdf:type dbo:SoccerPlayer ;
          dbo:sportsManager true ;
          dbo:manager true .

  # The club that is both a sports club and a soccer club
  ?club rdf:type dbo:SportsClub , dbo:SoccerClub ;
        dbo:member ?player .

  # Person born on the date of Pavel Vezhinov's death who has roles as a sports manager, soccer manager, and soccer player
  ?person dbo:dateOfBirth dbr:Pavel_Vezhinov#deathDate ;
          rdf:type dbo:SportsManager , dbo:SoccerPlayer , dbo:SoccerManager .

  # Linking the player to the coach of Croatia national under-21 football team
  ?coach dbo:team dbr:Croatia_national_under-21_football_team .
}
```",8,17,9,3,3,3,3,71,0,0,1,0,0.0,0
926,67,test,"Give me the father of Mahmud II and child of the father, that is a royalty, of the parent, that is a royalty, of Beyhan Sultan (daughter of Mustafa III) and successor of the child of the spouse of Şermi Kadın.",SELECT ?result WHERE { ?v0 <http://dbpedia.org/ontology/child> ?result . ?v5 <http://dbpedia.org/ontology/successor> ?result . ?v5 <http://dbpedia.org/property/father> ?v1 . ?v1 <http://dbpedia.org/ontology/spouse> <http://dbpedia.org/resource/Şermi_Kadın> . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v4 <http://dbpedia.org/property/father> ?v0 . <http://dbpedia.org/resource/Mahmud_II> <http://dbpedia.org/property/father> ?result . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. <http://dbpedia.org/resource/Beyhan_Sultan_(daughter_of_Mustafa_III)> <http://dbpedia.org/ontology/parent> ?v4 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?successor ?royaltyChild WHERE {
  # Beyhan Sultan's parent is Mustafa III
  dbr:Beyhan_Sultan dbo:parent dbr:Mustafa_III .

  # Şermi Kadın's spouse and their child
  ?şermiKadinSpouse dbo:spouse dbr:Şermi_Kadın .
  ?child dbo:parent ?şermiKadinSpouse .
  
  # Successor of the child of Şermi Kadın's spouse
  ?successor dbo:predecessor ?child .

  # Mahmud II's father is Abdul Hamid I
  dbr:Mahmud_II dbo:father dbr:Abdul_Hamid_I .

  # Royalty children of Abdul Hamid I
  ?royaltyChild dbo:parent dbr:Abdul_Hamid_I .
  FILTER EXISTS { ?royaltyChild a dbo:Monarch . }

  # Find the connection between successor and royalty child
  ?successor = ?royaltyChild .
}
```",7,9,8,3,3,3,3,71,0,0,1,0,0.0,0
124,57,test,"Give me the military force of the war, that is an event and a military conflict and a societal event, of the awardee of British South Africa Company Medal and commander in Mahdist War and military force of the force, that is a societal event and a military conflict, of Herbert Kitchener, 1st Earl Kitchener.","SELECT ?result WHERE { ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. <http://dbpedia.org/resource/Mahdist_War> <http://dbpedia.org/ontology/commander> ?result . ?result <http://dbpedia.org/ontology/battle> ?v3 . ?result <http://dbpedia.org/ontology/battle> ?v5 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v0 <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/British_South_Africa_Company_Medal> . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?v0 <http://dbpedia.org/ontology/battle> ?v5 . ?v3 <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Herbert_Kitchener,_1st_Earl_Kitchener> . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?militaryForce WHERE {
  # Find the awardee of the British South Africa Company Medal who was a commander in the Mahdist War
  ?person dbo:awardReceived dbr:British_South_Africa_Company_Medal .
  ?person dbo:militaryCommanderOf dbr:Mahdist_War .

  # Identify the military force associated with this person
  ?militaryForce dbo:commandedBy ?person .

  # Find the military force associated with Herbert Kitchener, 1st Earl Kitchener
  ?kitchenerMilitaryForce dbo:commandedBy dbr:Herbert_Kitchener_1st_Earl_Kitchener .
  
  # Identify a war that is an event, military conflict, and societal event for both forces
  ?war dbo:participatingMilitaryUnit ?militaryForce ;
       dbo:participatingMilitaryUnit ?kitchenerMilitaryForce ;
       rdf:type dbo:MilitaryConflict ;
       dbo:socialEvent true .

}
```",6,11,7,3,3,3,3,71,0,0,3,0,0.0,0
865,56,test,"Give me the father of AK Abdul Momen and native of the residence, that is a country, of Ram Jaipal Singh Yadav and father of the child of the father of Abul Maal Abdul Muhith.",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/birthPlace> ?v0 . <http://dbpedia.org/resource/Abul_Maal_Abdul_Muhith> <http://dbpedia.org/property/father> ?v5 . <http://dbpedia.org/resource/AK_Abdul_Momen> <http://dbpedia.org/property/father> ?result . ?v2 <http://dbpedia.org/property/father> ?result . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. ?v2 <http://dbpedia.org/property/father> ?v5 . <http://dbpedia.org/resource/Ram_Jaipal_Singh_Yadav> <http://dbpedia.org/property/residence> ?v0 . },"```sparql
# Step 1: Find the father of AK Abdul Momen
SELECT ?father WHERE {
    wd:Q1234567 wdt:P22 ?father .
}

# Step 2: Find the native country of Ram Jaipal Singh Yadav
SELECT ?country WHERE {
    wd:Q2345678 wdt:P19 ?place .
    ?place wdt:P17 ?country .
}

# Step 3: Find the grandfather of Abul Maal Abdul Muhith
SELECT ?grandfather WHERE {
    wd:Q3456789 wdt:P22 ?father .
    ?father wdt:P22 ?grandfather .
}
```

Note: Replace `wd:Q1234567`, `wd:Q2345678`, and `wd:Q3456789` with the actual DBpedia QIDs for AK Abdul Momen, Ram Jaipal Singh Yadav, and Abul Maal Abdul Muhith respectively. These IDs need to be looked up in DBpedia.",6,7,7,3,3,3,3,71,0,0,1,0,0.0,0
495,20,test,Give me the child of the father of the parent of Princess Catherine of Württemberg and father of the child of the parent of Princess Pauline of Württemberg (1810–1856).,SELECT ?result WHERE { ?result <http://dbpedia.org/property/father> ?v2 . ?v5 <http://dbpedia.org/ontology/parent> ?v4 . ?v5 <http://dbpedia.org/property/father> ?result . ?v1 <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Princess_Catherine_of_Württemberg> . <http://dbpedia.org/resource/Princess_Pauline_of_Württemberg_(1810–1856)> <http://dbpedia.org/ontology/parent> ?v4 . ?v1 <http://dbpedia.org/property/father> ?v2 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?child WHERE {
  # Princess Catherine's father
  dbr:Catherine_of_W%C3%BCrttemberg dbo:father dbr:Louis_of_W%C3%BCrttemberg .
  
  # Princess Pauline's father
  dbr:Pauline_of_W%C3%BCrttemberg dbo:father dbr:Louis_of_W%Cürttemberg .

  # Find another child of Duke Louis of Württemberg
  ?child dbo:father dbr:Louis_of_W%Cürttemberg .
  
  FILTER(?child != dbr:Catherine_of_W%Cürttemberg && ?child != dbr:Pauline_of_W%Cürttemberg)
}
```",6,6,7,3,2,3,2,20,0,0,1,0,0.0,0
445,56,test,"Give me the entity in the award of the commander in Battle of Saint-Mihiel and death place of Patrick Moore and entity in the residence, that is a country, of Anna Sharkey.",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/country> ?v1 . ?v0 <http://dbpedia.org/property/awards> ?v1 . ?result <http://dbpedia.org/ontology/location> ?v2 . <http://dbpedia.org/resource/Patrick_Moore> <http://dbpedia.org/ontology/deathPlace> ?result . <http://dbpedia.org/resource/Anna_Sharkey> <http://dbpedia.org/property/residence> ?v2 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. <http://dbpedia.org/resource/Battle_of_Saint-Mihiel> <http://dbpedia.org/ontology/commander> ?v0 . },"```sparql
# Query for the entity in the award of the commander in Battle of Saint-Mihiel
SELECT ?award WHERE {
  ?battle dbo:commander ?commander .
  ?battle rdfs:label ""Battle of Saint-Mihiel""@en .
  ?commander dbo:honorsReceived ?award .
}

UNION

# Query for the death place of Patrick Moore
SELECT ?deathPlace WHERE {
  ?person foaf:name ""Patrick Moore"" .
  ?person dbo:placeOfBirth ?birthPlace .
  ?person dbo:deathPlace ?deathPlace .
}

UNION

# Query for the residence country of Anna Sharkey
SELECT ?country WHERE {
  ?person foaf:name ""Anna Sharkey"" .
  ?person dbo:residence ?residence .
  ?residence rdf:type dbo:Country .
  ?residence rdfs:label ?country .
}
```",6,7,7,3,3,3,3,71,0,0,1,0,0.0,0
273,20,test,Give me the spouse of the child of the child of Edoardo Agnelli (1831-1871) and parent of the alumnus of the reference to Università degli Studi di Torino.,"SELECT ?result WHERE { ?v4 <http://xmlns.com/foaf/0.1/name> ""Università degli Studi di Torino""@en . ?v5 <http://dbpedia.org/ontology/parent> ?result . ?result <http://dbpedia.org/ontology/spouse> ?v2 . ?v1 <http://dbpedia.org/ontology/parent> <http://dbpedia.org/resource/Edoardo_Agnelli_(1831-1871)> . ?v1 <http://dbpedia.org/ontology/child> ?v2 . ?v5 <http://dbpedia.org/ontology/almaMater> ?v4 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?spouse WHERE {
  # Step 1: Identify Edoardo Agnelli (1831-1871)
  ?edoardo a dbo:Person ;
           foaf:name ""Edoardo Agnelli"" ;
           dbo:birthDate ?birthDate .
  
  FILTER(YEAR(?birthDate) = 1831 && MONTH(?birthDate) <= 12)

  # Step 2: Find one of his children
  ?child dbo:parent ?edoardo .

  # Step 3: Identify a grandchild (child of the child)
  ?grandchild dbo:parent ?child .

  # Step 4: Determine the spouse of this grandchild
  ?spouse dbo:spouse ?grandchild .

  # Step 5: Check if any alumnus from Università degli Studi di Torino is a parent to this spouse
  ?alumnus dbo:almaMater dbr:Universit%C3%A0_degli_Studi_di_Torino ;
           dbo:parent ?spouse .
}
```",6,6,7,3,2,3,2,20,0,0,1,0,0.0,0
865,61,test,"Give me the father of the child, that is a politician, of the spouse of Syeda Shahar Banu and father of the child of the father of Abul Maal Abdul Muhith.",SELECT ?result WHERE { ?v4 <http://dbpedia.org/property/father> ?result . ?v4 <http://dbpedia.org/property/father> ?v0 . <http://dbpedia.org/resource/Syeda_Shahar_Banu> <http://dbpedia.org/ontology/spouse> ?v0 . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. <http://dbpedia.org/resource/Abul_Maal_Abdul_Muhith> <http://dbpedia.org/property/father> ?v1 . ?v2 <http://dbpedia.org/property/father> ?v1 . ?v2 <http://dbpedia.org/property/father> ?result . },"```sparql
SELECT DISTINCT ?fatherOfPolitician WHERE {
  # Part 1: Syeda Shahar Banu's spouse and their child who is a politician
  ?spouse dbo:spouse dbpedia:Syeda_Sharbanoo .
  ?child dbo:parent ?spouse ;
         dbo:occupation dbc:Politicians_by_country.
  
  # Find the father of this politician child
  ?fatherOfPolitician dbo:child ?child .

  # Part 2: Abul Maal Abdul Muhith's father and their child
  ?abulMaalFather dbo:child dbpedia:Abul_Maal_Abdul_Muhith .
  ?secondChild dbo:parent ?abulMaalFather .

  # Find the father of this second child
  ?fatherOfSecondChild dbo:child ?secondChild .

  # Ensure both fathers are the same person
  FILTER (?fatherOfPolitician = ?fatherOfSecondChild)
}
```",6,7,7,3,2,3,3,71,0,0,1,0,0.0,0
965,70,test,"Give me the parent of the child, that is a royalty, of the person born, that is a politician, on 1854-05-24 and parent of the person born, that is a noble, as the birth name of George Mountbatten, 2nd Marquess of Milford Haven and spouse of the spouse of Princess Victoria of Hesse and by Rhine.","SELECT ?result WHERE { ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Noble>. ?result <http://dbpedia.org/ontology/spouse> ?v3 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v0 <http://dbpedia.org/ontology/parent> ?result . <http://dbpedia.org/resource/George_Mountbatten,_2nd_Marquess_of_Milford_Haven> <http://dbpedia.org/property/birthName> ?v5 . ?v1 <http://dbpedia.org/ontology/birthDate> ""1854-05-24""^^<http://www.w3.org/2001/XMLSchema#date> . <http://dbpedia.org/resource/Princess_Victoria_of_Hesse_and_by_Rhine> <http://dbpedia.org/ontology/spouse> ?v3 . ?v6 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v0 <http://dbpedia.org/property/birthName> ?v5 . ?v6 <http://dbpedia.org/property/father> ?v1 . ?v6 <http://dbpedia.org/ontology/parent> ?result . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?parent WHERE {
  # Step 1: Find the politician born on 1854-05-24
  ?politician a dbo:Politician ;
              dbo:birthDate ""1854-05-24""^^xsd:date .

  # Step 2: Identify their child who is royalty
  ?child dbo:parent ?politician ;
         a dbo:Monarch ;  # Assuming Monarch as a general class for royalty

  # Step 3: Find George Mountbatten, 2nd Marquess of Milford Haven's parent and birth name
  dbr:George_Mountbatten_2nd_Marquess_of_Milford_Haven dbo:birthName ?georgeBirthName ;
                                                        dbo:parent ?georgeParent .

  # Step 4: Identify the spouse of Princess Victoria of Hesse and by Rhine
  dbr:Princess_Victoria_of_Hesse_and_by_Rhine dbo:spouse ?princessSpouse .

  # Step 5: Determine the parent of the royalty child
  ?childParent dbo:parent ?child .
  
  FILTER(?georgeBirthName = ?politician)  # Assuming birth name matches politician's name
  FILTER(?princessSpouse = ?georgeParent)  # Assuming spouse relationship

  BIND(?childParent AS ?parent)
}
```",8,11,9,3,3,3,3,71,0,0,1,0,0.0,0
978,19,test,"Give me the band member of the person born as the name of Chicane (musician) and band member of the professional, that is a musical artist and an artist, in .","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/associatedMusicalArtist> ?v4 . <http://dbpedia.org/resource/Chicane_(musician)> <http://xmlns.com/foaf/0.1/givenName> ?v0 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. ?v4 <http://dbpedia.org/property/birthName> ?v0 . ?result <http://dbpedia.org/ontology/associatedMusicalArtist> ?v2 . ?v2 <http://dbpedia.org/property/occupation> """"@en . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?bandMember WHERE {
  # Step 1: Identify Chicane (Nick Bracegirdle)
  dbr:Nick_Bracegirdle a dbo:MusicArtist ;
                       foaf:name ""Chicane"" .

  # Step 2: Find a professional who is both a musical artist and an artist
  ?artist a dbo:MusicalArtist, dbo:Artist ;
          foaf:name ?name .

  # Example: David Bowie as a dual-role artist
  OPTIONAL { ?artist dbr:David_Bowie . }

  # Step 3: Find band members of this dual-role artist
  ?bandMember dbo:memberOf ?artist .
}
```",5,7,6,3,2,3,2,20,0,0,2,0,0.0,0
124,67,test,"Give me the military force of the war, that is an event and a military conflict and a societal event, of the awardee of British South Africa Company Medal and commander in Mahdist War and military force of the force, that is a societal event and a military conflict, of the person born on 1850-06-24.","SELECT ?result WHERE { ?v0 <http://dbpedia.org/ontology/battle> ?v6 . ?v6 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?v0 <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/British_South_Africa_Company_Medal> . ?v6 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?result <http://dbpedia.org/ontology/battle> ?v6 . ?result <http://dbpedia.org/ontology/battle> ?v3 . ?v1 <http://dbpedia.org/ontology/birthDate> ""1850-06-24""^^<http://www.w3.org/2001/XMLSchema#date> . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?v6 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. <http://dbpedia.org/resource/Mahdist_War> <http://dbpedia.org/ontology/commander> ?result . ?v3 <http://dbpedia.org/ontology/commander> ?v1 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. }","```sparql
SELECT DISTINCT ?militaryForce WHERE {
  # Step 1: Identify the person born on 1850-06-24
  ?person dbo:birthDate ""1850-06-24""^^xsd:date .
  
  # Step 2: Find a societal event and military conflict associated with this person
  ?event dbo:participant ?person ;
         rdf:type dbo:MilitaryConflict, dbo:SocietalEvent .

  # Step 3: Identify the military force of this event
  ?force1 dbo:militaryForceOf ?event .
  
  # Step 4: Find the awardee of the British South Africa Company Medal and commander in Mahdist War
  ?awardee dbo:awardReceived dbr:British_South_Africa_Company_Medal ;
           dbo:commanderInMilitaryConflict dbr:Mahdist_War .

  # Step 5: Identify the war that is an event, military conflict, and societal event
  ?war rdf:type dbo:MilitaryConflict, dbo:Event, dbo:SocietalEvent .
  
  # Step 6: Find the military force associated with this war
  ?force2 dbo:militaryForceOf ?war .

  # Ensure the military forces are the same
  FILTER(?force1 = ?force2)
}
```",7,12,8,3,3,3,3,71,0,0,3,0,0.0,0
645,64,test,"Give me the commander in the force of the commander in Siege of Madrid and military force of Spanish Civil War and leader of the office, that is a government agency and an organisation, of the native of Restoration (Spain).",SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?v2 <http://dbpedia.org/ontology/commander> ?result . ?v0 <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Restoration_(Spain)> . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/GovernmentAgency>. ?result <http://dbpedia.org/ontology/battle> <http://dbpedia.org/resource/Spanish_Civil_War> . ?v1 <http://dbpedia.org/ontology/leader> ?result . <http://dbpedia.org/resource/Siege_of_Madrid> <http://dbpedia.org/ontology/commander> ?v3 . ?v2 <http://dbpedia.org/ontology/commander> ?v3 . ?v0 <http://dbpedia.org/property/office> ?v1 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?person WHERE {
  ?person dbo:nationality dbr:Spain .
  ?person dbo:birthPlace dbr:Restoration_(Spain) .
  ?person dbo:occupation dbr:Military_officer .
  ?person dbo:spouse ?spouse . # To ensure the person is a notable figure
  OPTIONAL { ?person dbo:wikiPageDisambiguates ?disambiguation } # To filter out disambiguations

  FILTER NOT EXISTS {
    ?person dbo:birthPlace ?place .
    ?place rdfs:label ""Spain""@en .
  }

  # Check for involvement in the Siege of Madrid
  OPTIONAL { 
    ?event dbo:location dbr:Siege_of_Madrid .
    ?event dbo:participant ?person .
  }
  
  # Check for leadership during the Spanish Civil War
  OPTIONAL {
    ?war dbo:name ""Spanish_Civil_War""@en .
    ?war dbo:commander ?person .
  }

  # Check for leadership in government agencies or organizations post-war
  OPTIONAL {
    ?office dbo:head ?person .
    ?office a dbo:Government_agency ; dbo:organization dbr:Spain .
  }
}
```",7,9,8,3,3,3,3,71,0,0,2,0,0.0,0
976,58,test,"Give me the office of Mustafa Şentop and office of the mayor, that is a politician and an office holder and Turkish, of Nation Alliance (Turkey) and office of the person born as the birth name of Naci Bostancı.",SELECT ?result WHERE { ?v0 <http://dbpedia.org/property/office> ?result . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v5 <http://dbpedia.org/ontology/nationality> <http://dbpedia.org/resource/Turkey>. ?v5 <http://dbpedia.org/property/office> ?result . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v0 <http://dbpedia.org/property/birthName> ?v4 . <http://dbpedia.org/resource/Nation_Alliance_(Turkey)> <http://dbpedia.org/property/leader> ?v5 . <http://dbpedia.org/resource/Naci_Bostancı> <http://dbpedia.org/property/birthName> ?v4 . <http://dbpedia.org/resource/Mustafa_Şentop> <http://dbpedia.org/property/office> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT DISTINCT ?mustafaOffice ?mayorName ?mayorOffice ?naciBostanciOffice WHERE {
  # Mustafa Şentop's office
  OPTIONAL { 
    dbr:Mustafa_Şentop dbo:office ?mustafaOffice .
  }

  # Mayor from Nation Alliance (Turkey)
  OPTIONAL {
    ?person a dbo:Politician ;
            dbo:nationality dbr:Turkey ;
            dbo:partyAffiliation dbr:Nation_Alliance_(Turkey) ;
            dbo:positionTitle ""Mayor""@en .
    ?person rdfs:label ?mayorName .
    ?person dbo:office ?mayorOffice .
  }

  # Naci Bostancı's office
  OPTIONAL {
    ?naciBostanci a dbo:Person ;
                  dbp:birthday ?birthDate ;
                  foaf:name ""Naci Bostancı""@en .
    ?naciBostanci dbo:office ?naciBostanciOffice .
  }
}
```",6,9,7,3,3,3,3,71,0,0,1,0,0.0,0
892,71,test,"Give me the landmark at elevation of the award of the member of E-girls and entity in the administration, that is Italian and a region and a settlement and an administrative region, of the party, that is a political party and an organisation, of Andrea Cozzolino and entity in the profession of the true self of Enrico Crolla.","SELECT ?result WHERE { ?v8 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. ?v8 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/AdministrativeRegion>. ?v8 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Italy>. ?v1 <http://dbpedia.org/property/occupation> ?v2 . ?result <http://dbpedia.org/ontology/country> ?v2 . ?v7 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/PoliticalParty>. ?result <http://dbpedia.org/ontology/elevation> ?v5 . ?v4 <http://dbpedia.org/property/awards> ?v5 . ?v8 <http://dbpedia.org/property/leaderParty> ?v7 . <http://dbpedia.org/resource/Andrea_Cozzolino> <http://dbpedia.org/ontology/party> ?v7 . ?v1 <http://xmlns.com/foaf/0.1/givenName> ""Enrico Crolla""@en . ?v8 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Region>. ?result <http://dbpedia.org/ontology/province> ?v8 . <http://dbpedia.org/resource/E-girls> <http://dbpedia.org/ontology/bandMember> ?v4 . ?v7 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?landmark WHERE {
  # Step 1: Find an E-girls member and their award
  ?member dbo:memberOf dbr:E-girls .
  ?award dbo:recipient ?member ;
         dbo:dateReceived ?year .

  # Step 2: Find a landmark at the elevation corresponding to the award year
  ?landmark dbo:elevation ?elevation .
  FILTER (?elevation = ?year)

  # Step 3: Identify an Italian entity that is a region, settlement, and administrative region
  ?entity dbo:country dbr:Italy ;
          rdf:type/(dbo:Region|dbo:Settlement|dbo:AdministrativeRegion) .

  # Step 4: Find Andrea Cozzolino's political party
  ?cozzolino dbp:party ?party .
  FILTER (str(?cozzolino) = ""Andrea_Cozzolino"")

  # Step 5: Determine Enrico Crolla's profession
  ?enrico dbo:profession ?profession .
  FILTER (str(?enrico) = ""Enrico_Crolla"")
}
```",9,15,10,3,3,3,3,71,0,0,2,0,0.0,0
445,57,test,Give me the entity in England and entity in the award of George H. Cameron and death place of the awardee of the establishment of 1820-03-10.,"SELECT ?result WHERE { <http://dbpedia.org/resource/George_H._Cameron> <http://dbpedia.org/property/awards> ?v3 . ?v5 <http://dbpedia.org/property/awards> ?v0 . ?result <http://dbpedia.org/ontology/location> <http://dbpedia.org/resource/England> . ?v0 <http://dbpedia.org/ontology/foundingDate> ""1820-03-10""^^<http://www.w3.org/2001/XMLSchema#date> . ?v5 <http://dbpedia.org/ontology/deathPlace> ?result . ?result <http://dbpedia.org/ontology/country> ?v3 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT DISTINCT ?entityInEngland ?award ?deathPlace ?establishedEntity
WHERE {
  # Find the award associated with George H. Cameron
  ?award dbo:recipient dbr:George_H._Cameron .
  
  # Find the awardee(s) of that award and their death places
  ?award dbo:recipient ?awardee .
  ?awardee dbo:deathPlace ?deathPlace .

  # Find an entity in England
  ?entityInEngland dbo:location dbr:England .

  # Find an entity established on March 10, 1820
  ?establishedEntity dbp:foundingDate ""1820-03-10""^^xsd:date .
}
```",6,6,7,3,3,3,3,71,0,0,1,0,0.0,0
382,18,test,"Give me the birthplace of the manager, that is a soccer manager and an athlete and a sports manager, of the player in Lukas Kübler and landmark at elevation of the award of Harry Combes.",SELECT ?result WHERE { ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsManager>. <http://dbpedia.org/resource/Lukas_Kübler> <http://dbpedia.org/ontology/team> ?v1 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Athlete>. ?result <http://dbpedia.org/ontology/elevation> ?v3 . ?v1 <http://dbpedia.org/ontology/manager> ?v2 . <http://dbpedia.org/resource/Harry_Combes> <http://dbpedia.org/property/awards> ?v3 . ?v2 <http://dbpedia.org/ontology/birthPlace> ?result . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerManager>. },"```sparql
# Step 1: Identify Lukas Kübler's Manager
SELECT ?manager WHERE {
  ?player dbo:birthName ""Lukas Kübler""@en .
  ?player dbo:position dbr:Soccer_Midfielder .
  ?team dbo:currentSquad ?player .
  ?team dbo:coach ?manager .
}

# Step 2: Verify Manager's Roles
SELECT DISTINCT ?manager WHERE {
  VALUES (?role1 ?role2) { (dbr:Soccer_Manager dbr:Athlete) (dbr:Sports_Manager dbr:Athlete) }
  ?manager rdf:type ?role1 .
  ?manager rdf:type ?role2 .
}

# Step 3: Find Harry Combes' Award
SELECT ?award WHERE {
  ?person dbo:birthName ""Harry Combes""@en .
  ?person dbo:honoraryTitle ?award .
}

# Step 4: Determine Elevation of the Award (assuming it's a geographical location)
SELECT ?elevation WHERE {
  ?award geo:elevation ?elevation .
}

# Step 5: Find Landmark at that Elevation
SELECT DISTINCT ?landmark WHERE {
  ?landmark geo:elevation ?elevation .
}

# Step 6: Get Birthplace of the Manager
SELECT ?birthPlace WHERE {
  ?manager dbo:birthPlace ?birthPlace .
}
```",5,8,6,3,2,3,2,20,0,0,1,0,0.0,0
865,70,test,"Give me the native of the residence, that is a country, of Ram Jaipal Singh Yadav and father of the child of the father of Abul Maal Abdul Muhith and father of the child, that is a politician, of the spouse of Syeda Shahar Banu.",SELECT ?result WHERE { ?v4 <http://dbpedia.org/property/father> ?v3 . <http://dbpedia.org/resource/Syeda_Shahar_Banu> <http://dbpedia.org/ontology/spouse> ?v2 . ?v6 <http://dbpedia.org/property/father> ?result . ?v6 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v6 <http://dbpedia.org/property/father> ?v2 . ?result <http://dbpedia.org/ontology/birthPlace> ?v0 . <http://dbpedia.org/resource/Abul_Maal_Abdul_Muhith> <http://dbpedia.org/property/father> ?v3 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. <http://dbpedia.org/resource/Ram_Jaipal_Singh_Yadav> <http://dbpedia.org/property/residence> ?v0 . ?v4 <http://dbpedia.org/property/father> ?result . },"```sparql
# Step 1: Get Ram Jaipal Singh Yadav's residence (country)
SELECT ?residence WHERE {
    wd:Q123456 rdfs:label ""Ram Jaipal Singh Yadav""@en .
    ?residence dbo:residenceLocation wd:Q123456 .
    ?residence a dbo:Country .
}

# Step 2: Get Abul Maal Abdul Muhith's father
SELECT ?father WHERE {
    wd:Q654321 rdfs:label ""Abul Maal Abdul Muhith""@en .
    ?father dbo:child wd:Q654321 .
}

# Step 3: Get Syeda Shahar Banu's spouse and their child who is a politician
SELECT ?spouse ?politicianChild WHERE {
    wd:Q789012 rdfs:label ""Syeda Shahar Banu""@en .
    ?spouse dbo:spouse wd:Q789012 .
    ?politicianChild dbo:parent ?spouse ;
                    a dbo:Politician .
}

# Step 4: Get the native of Ram Jaipal Singh Yadav's residence
SELECT ?native WHERE {
    ?residence dbo:nativeLanguage ?native .
}
```

Note: Replace `wd:Q123456`, `wd:Q654321`, and `wd:Q789012` with the actual DBpedia identifiers for Ram Jaipal Singh Yadav, Abul Maal Abdul Muhith, and Syeda Shahar Banu respectively. These identifiers need to be looked up in DBpedia.",8,10,9,3,3,3,3,71,0,0,1,0,0.0,0
433,70,test,"Give me the associated musical artist of the person born, that is a musical artist and an artist, as Paul Laurence Dunbar Chambers Jr. and professional in the profession of the writer of Slowhand at 70 – Live at the Royal Albert Hall and associated musical artist of the associated musical artist, that is an artist and a musical artist, of the associated musical artist, that is a musical artist and an artist, of Ornette Coleman.","SELECT ?result WHERE { ?v4 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v7 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. <http://dbpedia.org/resource/Ornette_Coleman> <http://dbpedia.org/ontology/associatedMusicalArtist> ?v0 . ?result <http://dbpedia.org/property/occupation> ?v3 . ?v1 <http://dbpedia.org/property/occupation> ?v3 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?v7 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?v0 <http://dbpedia.org/ontology/associatedMusicalArtist> ?v7 . ?v7 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . <http://dbpedia.org/resource/Slowhand_at_70_–_Live_at_the_Royal_Albert_Hall> <http://dbpedia.org/property/writer> ?v1 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. ?v4 <http://dbpedia.org/property/birthName> ""Paul Laurence Dunbar Chambers Jr.""@en . }","```sparql
SELECT ?artist WHERE {
  ?chambers dbo:birthName ""Paul Laurence Dunbar Chambers Jr."" .
  ?clapton dbo:writer ""Slowhand at 70 – Live at the Royal Albert Hall"" .
  ?hendrix dbo:associatedMusicalArtist ?clapton ;
           rdf:type dbo:Artist, dbo:MusicalArtist .
  ?mitchell dbo:associatedMusicalArtist ?hendrix ;
            rdf:type dbo:Artist, dbo:MusicalArtist .
  ?coleman dbo:associatedMusicalArtist ?mitchell .
  ?donCherry dbo:associatedMusicalArtist ?coleman ;
             rdf:type dbo:Artist, dbo:MusicalArtist .
}
```",8,14,9,3,3,3,3,71,0,0,4,0,0.0,0
645,58,test,"Give me the leader of the office, that is a government agency and an organisation, of the native of Restoration (Spain) and military force of the force, that is an event and a military conflict and a societal event, of Francisco Largo Caballero and commander in Battle of Jarama.",SELECT ?result WHERE { ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v5 <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Francisco_Largo_Caballero> . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?v2 <http://dbpedia.org/ontology/leader> ?result . ?result <http://dbpedia.org/ontology/battle> ?v5 . <http://dbpedia.org/resource/Battle_of_Jarama> <http://dbpedia.org/ontology/commander> ?result . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?v1 <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Restoration_(Spain)> . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/GovernmentAgency>. ?v1 <http://dbpedia.org/property/office> ?v2 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?leader WHERE {
  # Francisco Largo Caballero's involvement in the Spanish Civil War
  dbr:Francisco_Largo_Caballero dbo:nationality dbr:Spain ;
                                 dbo:occupation dbr:Politician ;
                                 dbo:officeHolderOf ?office .

  # The Battle of Jarama as a military conflict
  dbr:Battle_of_Jarama dbo:type dbr:Military_conflict ;
                       dbo:participatedIn ?conflict .

  # Spanish Civil War as the event and societal context
  dbr:Spanish_Civil_War dbo:type dbr:Societal_event, dbr:Military_conflict ;
                        dbo:participatedIn ?conflict .

  # Linking the office to a government agency or organization
  ?office dbo:isPartOf ?agency .
  
  # Ensuring the leader is related to the military force and event
  ?leader dbo:positionHeld ?office ;
          dbo:memberOf ?force .
  
  FILTER(?conflict = dbr:Spanish_Civil_War)
}
```",6,11,7,3,3,3,3,71,0,0,1,0,0.0,0
158,20,test,"Give me the entity in the award, that is a country, of the reference to Adelbert Cronkhite and party of the successor, that is a prime minister and an office holder and a politician, of the person deceased, that is an office holder and a politician, on 1945-09-15.","SELECT ?result WHERE { ?v4 <http://dbpedia.org/ontology/deathDate> ""1945-09-15""^^<http://www.w3.org/2001/XMLSchema#date> . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/PrimeMinister>. ?v5 <http://dbpedia.org/ontology/party> ?result . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v4 <http://dbpedia.org/ontology/successor> ?v5 . ?v1 <http://dbpedia.org/property/awards> ?v2 . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v1 <http://xmlns.com/foaf/0.1/name> ""Adelbert Cronkhite""@en . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. ?result <http://dbpedia.org/ontology/country> ?v2 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT DISTINCT ?country WHERE {
  # Step 1: Identify Adelbert Cronkhite and find an award associated with him
  ?person rdfs:label ""Adelbert Cronkhite""@en .
  
  OPTIONAL {
    ?award dbo:recipient ?person ;
           dbo:country ?country .
  }
  
  # Step 2: Find the successor who is a prime minister, office holder, and politician
  ?successor dbo:predecessor ?person ;
             rdf:type dbo:PrimeMinister ;
             dbo:officeHolder true ;
             dbo:politician true .

  # Step 3: Identify the deceased person on 1945-09-15 who was an office holder and politician
  ?deceasedPerson dbo:dateOfDeath ""1945-09-15""^^xsd:date ;
                  rdf:type dbo:OfficeHolder, dbo:Politician .
  
  # Link the successor to the deceased person
  ?successor dbo:predecessor ?deceasedPerson .

  FILTER(?country != undefined)
}
```",6,12,7,3,2,3,2,20,0,0,1,0,0.0,0
36,26,test,"Give me the person born in 1971 and person born as the birth name of Ayo Makun and actor of the claim to fame, that is a film, of Lepacious Bose.","SELECT ?result WHERE { ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Film>. ?result <http://dbpedia.org/ontology/birthYear> ""1971""^^<http://www.w3.org/2001/XMLSchema#gYear> . ?v4 <http://dbpedia.org/ontology/starring> ?result . <http://dbpedia.org/resource/Ayo_Makun> <http://dbpedia.org/property/birthName> ?v1 . ?result <http://dbpedia.org/property/birthName> ?v1 . <http://dbpedia.org/resource/Lepacious_Bose> <http://dbpedia.org/ontology/knownFor> ?v4 . }","```sparql
# Step 1: Find a person born in 1971
SELECT ?person WHERE {
  ?person dbo:birthYear ""1971""^^xsd:gYear .
}

# Step 2: Find Ayo Makun's birth name
SELECT ?birthName WHERE {
  dbpedia:Ayo_Makun foaf:name ?name .
  ?person dbo:birthName ?birthName .
  FILTER(?name = ""Ayo Makun"")
}

# Step 3: Find Lepacious Bose's claim to fame film
SELECT ?film WHERE {
  dbpedia:Lepacious_Bose dbo:claimToFame ?film .
  ?film rdf:type dbo:Film .
}

# Step 4: Find an actor associated with that film
SELECT DISTINCT ?actor WHERE {
  ?film dbo:starring ?actor .
  FILTER(?film = <INSERT_FILM_URI_HERE>) # Replace with the URI of the film found in step 3
}
```

Note: The above queries are structured to be executed sequentially. You will need to replace `<INSERT_FILM_URI_HERE>` with the actual URI obtained from Step 3.",5,6,6,2,3,2,3,28,0,0,1,0,0.0,0
933,60,test,"Give me the band of the band, that is a group and a band and an organisation, of the person born, that is a musical artist, on 1947-04-21 and band of the band of the band, that is an artist and a musical artist, of The Ramong Sound.","SELECT ?result WHERE { ?v5 <http://dbpedia.org/ontology/birthDate> ""1947-04-21""^^<http://www.w3.org/2001/XMLSchema#date> . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Group>. ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?v4 <http://dbpedia.org/ontology/associatedMusicalArtist> ?v2 . <http://dbpedia.org/resource/The_Ramong_Sound> <http://dbpedia.org/ontology/associatedMusicalArtist> ?v4 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Band>. ?v5 <http://dbpedia.org/ontology/associatedMusicalArtist> ?v0 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. ?v0 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?v2 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . }","```sparql
# Query to find the musical artist born on 1947-04-21
SELECT ?person WHERE {
  ?person dbo:birthDate ""1947-04-21""^^xsd:date .
  ?person rdf:type dbo:MusicalArtist .
}

# Assuming we found a person, let's say their URI is <http://dbpedia.org/resource/PersonName>
# Query to find the band of this person that is a group and a band and an organization
SELECT ?band WHERE {
  <http://dbpedia.org/resource/PersonName> dbo:memberOfBand ?band .
  ?band rdf:type dbo:MusicalGroup ;
        dbo:genre ""Rock"" ; # Assuming genre for example, adjust as needed
        dbo:organizationType ""Musician collective"" . # Example type, adjust as needed
}

# Query to find the band of The Ramones
SELECT ?ramonesBand WHERE {
  <http://dbpedia.org/resource/The_Ramones> dbo:memberOfBand ?ramonesBand .
  ?ramonesBand rdf:type dbo:MusicalArtist ;
               dbo:genre ""Punk rock"" . # Example genre, adjust as needed
}
```",6,12,7,3,2,3,3,71,0,0,4,0,0.0,0
926,69,test,"Give me the father of the father of the spouse of Neşerek Kadın and successor of the child of Ahmed III and child of the father, that is a royalty, of the parent, that is a royalty, of Beyhan Sultan (daughter of Mustafa III).",SELECT ?result WHERE { ?v4 <http://dbpedia.org/property/father> ?v2 . ?v6 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Ahmed_III> . ?v6 <http://dbpedia.org/ontology/successor> ?result . ?v2 <http://dbpedia.org/property/father> ?result . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v0 <http://dbpedia.org/ontology/child> ?result . ?v5 <http://dbpedia.org/property/father> ?v0 . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. <http://dbpedia.org/resource/Beyhan_Sultan_(daughter_of_Mustafa_III)> <http://dbpedia.org/ontology/parent> ?v5 . <http://dbpedia.org/resource/Neşerek_Kadın> <http://dbpedia.org/ontology/spouse> ?v4 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?fatherOfFather WHERE {
  # Neşerek Kadın's spouse
  ?spouse dbo:spouse dbr:Neşerek_Kadın .
  
  # Father of the spouse
  ?fatherOfSpouse dbo:child ?spouse .
  
  # Successor of the father (royalty and child of Ahmed III)
  ?successor dbo:predecessor ?fatherOfSpouse ;
             a dbo:Monarch ;
             dbo:parent dbr:Aḥmed_III .

  # Beyhan Sultan's parent
  ?beyhanParent dbo:child dbr:Beyhan_Sultan .
  
  # Parent of Beyhan Sultan's parent (royalty)
  ?grandparentOfBeyhan dbo:child ?beyhanParent ;
                       a dbo:Monarch .

  # Father of the grandparent of Beyhan Sultan
  ?fatherOfGrandparent dbo:child ?grandparentOfBeyhan .
  
  # Ensure the successor is related to Beyhan Sultan's lineage
  FILTER(?successor = ?fatherOfGrandparent)
}
```",8,10,9,3,3,3,3,71,0,0,1,0,0.0,0
987,57,test,"Give me the entity in the region, that is a country, of Central European Time and birth place of Dado Polumenta and birth place of the actor of the show, that is a film, with Emir Hadžihafizbegović.",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/country> ?v0 . ?v1 <http://dbpedia.org/property/starring> ?v4 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Film>. <http://dbpedia.org/resource/Dado_Polumenta> <http://dbpedia.org/ontology/birthPlace> ?result . ?v4 <http://dbpedia.org/ontology/birthPlace> ?result . ?v0 <http://dbpedia.org/property/timeZone> <http://dbpedia.org/resource/Central_European_Time> . ?v1 <http://dbpedia.org/ontology/starring> <http://dbpedia.org/resource/Emir_Hadžihafizbegović> . },"```sparql
# Query to get Dado Polumenta's birthplace
SELECT ?birthPlace WHERE {
  wd:Q123456 dbo:birthPlace ?birthPlace .
}

# Query to find a film/show with Emir Hadžihafizbegović and an actor from it
SELECT DISTINCT ?actorBirthPlace WHERE {
  ?film wdt:P161 wd:Q789012 . # Emir Hadžihafizbegović's film role
  ?film wdt:P162 ?actor .      # Actor in the same film
  ?actor dbo:birthPlace ?actorBirthPlace .
}

# Query to find countries in Central European Time zone
SELECT DISTINCT ?country WHERE {
  ?country wdt:P421 wd:Q12345 . # Q12345 is a placeholder for the actual DBpedia item representing Central European Time
}

# Final query combining all conditions
SELECT DISTINCT ?entity WHERE {
  VALUES (?birthPlace) { (wd:BirthplaceOfDadoPolumenta) (wd:BirthplaceOfActor) }
  ?entity wdt:P31 wd:Q6256 . # Q6256 is the DBpedia item for country
  ?entity wdt:P421 wd:Q12345 .
  FILTER (?birthPlace IN (wd:BirthplaceOfDadoPolumenta, wd:BirthplaceOfActor))
}
```

Note: Replace `wd:Q123456`, `wd:Q789012`, `wd:BirthplaceOfDadoPolumenta`, `wd:BirthplaceOfActor`, and `wd:Q12345` with the actual DBpedia identifiers for Dado Polumenta, Emir Hadžihafizbegović's film/show, their birthplaces, and Central European Time respectively.",6,8,7,3,3,3,3,71,0,0,1,0,0.0,0
41,28,test,"Give me the party of the person born as David Declan Costello and party of the work, that is an office holder, of yes and party of the leader, that is a politician and an office holder, of 2005 Castlereagh Borough Council election.","SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v5 <http://dbpedia.org/property/author> ""yes""@en . ?v1 <http://dbpedia.org/ontology/party> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v3 <http://dbpedia.org/property/birthName> ""David Declan Costello""@en . ?v5 <http://dbpedia.org/ontology/party> ?result . ?v3 <http://dbpedia.org/ontology/party> ?result . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. <http://dbpedia.org/resource/2005_Castlereagh_Borough_Council_election> <http://dbpedia.org/property/leader> ?v1 . }","```sparql
# Query for David Declan Costello's Party
SELECT ?party WHERE {
  ?person foaf:name ""David Declan Costello""@en .
  ?person dbo:politicalParty ?party .
}

UNION

# Assuming the second part refers to a notable office holder with confirmed involvement
SELECT ?party WHERE {
  ?officeHolder dbo:positionTitle ?title ;
                dbo:affiliation ?party .
  FILTER(CONTAINS(LCASE(?title), ""office holder"") && CONTAINS(LCASE(?officeHolderLabel), ""yes""))
}

UNION

# Query for the leader of the 2005 Castlereagh Borough Council Election
SELECT ?leaderParty WHERE {
  ?election dbo:electionDate ?date ;
            dbo:winner ?leader .
  FILTER(YEAR(?date) = 2005 && CONTAINS(LCASE(STR(?election)), ""castlereagh borough council""))
  ?leader dbo:politicalAffiliation ?leaderParty .
}
```",6,9,7,2,3,2,3,28,0,0,1,0,0.0,0
892,70,test,"Give me the entity in the profession of Henri Crolla and entity in the administration, that is Italian and a region and a settlement and an administrative region, of the party, that is a political party and an organisation, of Andrea Cozzolino and landmark at elevation of the award of the member of E-girls.",SELECT ?result WHERE { ?v0 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Italy>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Region>. ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. ?v0 <http://dbpedia.org/property/leaderParty> ?v5 . ?result <http://dbpedia.org/ontology/country> ?v3 . ?result <http://dbpedia.org/ontology/elevation> ?v6 . ?v1 <http://dbpedia.org/property/awards> ?v6 . <http://dbpedia.org/resource/Andrea_Cozzolino> <http://dbpedia.org/ontology/party> ?v5 . <http://dbpedia.org/resource/E-girls> <http://dbpedia.org/ontology/bandMember> ?v1 . ?result <http://dbpedia.org/ontology/province> ?v0 . <http://dbpedia.org/resource/Henri_Crolla> <http://dbpedia.org/property/occupation> ?v3 . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/PoliticalParty>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/AdministrativeRegion>. },"```sparql
# Query for Henri Crolla's profession
SELECT ?profession WHERE {
  wd:Q123456 wdt:P106 ?occupation .
  ?occupation rdfs:label ?profession .
  FILTER (lang(?profession) = 'en')
}

UNION

# Query for Andrea Cozzolino's party and related Italian region, settlement, and administrative region
SELECT DISTINCT ?region ?settlement WHERE {
  wd:Q654321 wdt:P102 ?party .
  ?party wdt:P31/wdt:P279* wd:Q12345 . # Political Party or Organization
  ?party wdt:P131 ?location .
  ?location wdt:P31 wd:Q6256 ; # Region
            wdt:P31/wdt:P279* wd:Q515 . # Settlement
  ?location rdfs:label ?region .
  ?settlement rdfs:label ?settlementLabel .
  FILTER (lang(?region) = 'en' && lang(?settlementLabel) = 'en')
}

UNION

# Query for landmark at elevation of E-girls member's award
SELECT DISTINCT ?landmark WHERE {
  wd:Q789012 wdt:P166 ?award . # Award received by an E-girls member
  ?award wdt:P2044 ?elevation .
  ?landmark wdt:P2044 ?sameElevation .
  FILTER (?elevation = ?sameElevation)
  ?landmark rdfs:label ?landmarkLabel .
  FILTER (lang(?landmarkLabel) = 'en')
}
```",8,14,9,3,3,3,3,71,0,0,2,0,0.0,0
445,66,test,"Give me the death place of the awardee of Royal Astronomical Society and entity in the residence, that is a country, of Anna Sharkey and entity in the award of the commander in Battle of Saint-Mihiel.",SELECT ?result WHERE { ?v6 <http://dbpedia.org/ontology/deathPlace> ?result . ?v6 <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/Royal_Astronomical_Society> . <http://dbpedia.org/resource/Anna_Sharkey> <http://dbpedia.org/property/residence> ?v3 . ?v1 <http://dbpedia.org/property/awards> ?v2 . ?result <http://dbpedia.org/ontology/country> ?v2 . <http://dbpedia.org/resource/Battle_of_Saint-Mihiel> <http://dbpedia.org/ontology/commander> ?v1 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. ?result <http://dbpedia.org/ontology/location> ?v3 . },"```sparql
# Query 1: Find an awardee of the Royal Astronomical Society
SELECT ?awardee WHERE {
  ?awardee dbo:award dbpedia:Royal_Astronomical_Society.
}

# Query 2: Get the death place of that awardee
SELECT ?deathPlace WHERE {
  ?person dbo:award dbpedia:Royal_Astronomical_Society.
  ?person dbo:placeOfBirth ?birthPlace.
  ?person dbo:deathPlace ?deathPlace.
}

# Query 3: Identify Anna Sharkey's residence country
SELECT ?country WHERE {
  dbpedia:Anna_Sharkey dbo:residenceCountry ?country.
}

# Query 4: Determine the commander in the Battle of Saint-Mihiel and their award
SELECT ?commander ?award WHERE {
  ?battle dbo:commander ?commander.
  ?commander dbo:receivedAward ?award.
  FILTER(STRSTARTS(LCASE(?battle), ""dbpedia:battle_of_saint-mihiel""))
}
```",7,8,8,3,3,3,3,71,0,0,1,0,0.0,0
445,62,test,"Give me the entity in United Kingdom and entity in the residence, that is a country, of the resident, that is an athlete, of Great Britain and death place of the awardee of the establishment of 1820-03-10.","SELECT ?result WHERE { ?v6 <http://dbpedia.org/ontology/deathPlace> ?result . ?v4 <http://dbpedia.org/property/residence> ?v3 . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Athlete>. ?v6 <http://dbpedia.org/property/awards> ?v0 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. ?v4 <http://dbpedia.org/property/residence> <http://dbpedia.org/resource/Great_Britain> . ?v0 <http://dbpedia.org/ontology/foundingDate> ""1820-03-10""^^<http://www.w3.org/2001/XMLSchema#date> . ?result <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/United_Kingdom> . ?result <http://dbpedia.org/ontology/location> ?v3 . }","```sparql
# Step 1: Identify the establishment on 1820-03-10
SELECT ?establishment WHERE {
  ?establishment dbo:foundingDate ""1820-03-10""^^xsd:date .
}

# Step 2: Find the awardee of this establishment
SELECT ?awardee WHERE {
  ?award dbo:recipient ?person .
  ?award dbo:givenBy ?establishment .
  FILTER(?establishment IN (SELECT ?est FROM { 
    ?est dbo:foundingDate ""1820-03-10""^^xsd:date . 
  }))
}

# Step 3: Determine the death place of the awardee
SELECT ?deathPlace WHERE {
  ?awardee dbo:deathPlace ?deathPlace .
}

# Step 4: Identify a resident athlete of Great Britain
SELECT ?athlete WHERE {
  ?athlete dbo:nationality dbr:United_Kingdom ;
           dbo:sportType ?sport .
  FILTER EXISTS { ?athlete dbo:residence ?residence }
}

# Step 5: Find the country of residence for this athlete
SELECT DISTINCT ?country WHERE {
  ?athlete dbo:residence ?residence .
  ?residence dbo:country ?country .
}

# Final Query to get entities in UK and country of athlete's residence
SELECT ?ukEntity ?countryEntity WHERE {
  # Entity in United Kingdom
  ?ukEntity dbo:location dbr:United_Kingdom .

  # Country entity from athlete's residence
  ?athlete dbo:nationality dbr:United_Kingdom ;
           dbo:sportType ?sport .
  FILTER EXISTS { ?athlete dbo:residence ?residence }
  ?residence dbo:country ?countryEntity .
}
```",7,9,8,3,3,3,3,71,0,0,1,0,0.0,0
507,59,test,"Give me the director of the movie, that is a movie and a work, with the person born on 1919-06-17 and spouse of the person born as the birth name of Anne V. Coates.","SELECT ?result WHERE { ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?v5 <http://dbpedia.org/ontology/director> ?result . ?v5 <http://dbpedia.org/property/starring> ?v0 . ?result <http://dbpedia.org/ontology/spouse> ?v2 . ?v0 <http://dbpedia.org/ontology/birthDate> ""1919-06-17""^^<http://www.w3.org/2001/XMLSchema#date> . <http://dbpedia.org/resource/Anne_V._Coates> <http://dbpedia.org/property/birthName> ?v3 . ?v2 <http://dbpedia.org/property/birthName> ?v3 . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Film>. }","```sparql
SELECT ?director WHERE {
  # Step 1: Find the person born on 1919-06-17
  ?person dbp:birthday ""1919-06-17""^^xsd:date .
  
  # Step 2: Check if this person is married to someone with birth name Anne V. Coates
  ?person foaf:surname ?spouseName .
  ?spouse dbo:birthName ""Anne V. Coates""@en .

  # Step 3: Find movies directed by this person
  ?movie dbo:director ?person ;
         a dbo:Film ;
         rdf:type dbp:Work .

  # Return the director of such a movie
  BIND(?person AS ?director)
}
```",6,8,7,3,2,3,3,71,0,0,1,0,0.0,0
326,9,test,"Give me the person decedent at the region coded, that is a settlement, as 442/760 and professional in the profession of Susanne Lewis.","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/deathPlace> ?v1 . ?result <http://dbpedia.org/property/occupation> ?v3 . <http://dbpedia.org/resource/Susanne_Lewis> <http://dbpedia.org/property/occupation> ?v3 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. ?v1 <http://dbpedia.org/ontology/areaCode> ""442/760"" . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?person WHERE {
  # Find the settlement associated with region code 442/760
  ?settlement dbo:countryCode ""442"" ;
              dbo:postalCode ""760"" .
  
  # Identify Susanne Lewis's profession
  dbr:Susanne_Lewis dbo:occupation ?susanneProfession .

  # Find individuals in the same settlement and with a similar profession
  ?person dbo:residence ?settlement ;
          dbo:occupation ?profession .

  FILTER (?profession = ?susanneProfession)
}
```",4,5,5,2,2,2,2,9,0,0,6,0,0.0,0
200,8,test,Give me the band member of the band of Revenge (Canadian band) and reference to Angelcorpse.,"SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/associatedMusicalArtist> ?v2 . <http://dbpedia.org/resource/Revenge_(Canadian_band)> <http://dbpedia.org/ontology/associatedMusicalArtist> ?v2 . ?result <http://xmlns.com/foaf/0.1/name> ""Angelcorpse""@en . }","```sparql
# Query to find band members of Revenge
SELECT ?member WHERE {
  ?band rdf:type dbo:MusicalBand ;
        foaf:name ""Revenge"" .
  ?band dbo:bandMember ?member .
}

UNION

# Query to find any reference or connection between Revenge and Angelcorpse
SELECT DISTINCT ?reference WHERE {
  { 
    ?band rdf:type dbo:MusicalBand ;
          foaf:name ""Revenge"" .
    ?statement ?p ?o .
    FILTER(CONTAINS(LCASE(STR(?o)), LCASE(""angelcorpse"")))
  }
  
  UNION
  
  {
    ?band rdf:type dbo:MusicalBand ;
          foaf:name ""Angelcorpse"" .
    ?statement ?p ?o .
    FILTER(CONTAINS(LCASE(STR(?o)), LCASE(""revenge"")))
  }
}
```",3,3,4,2,2,2,2,9,0,0,1,0,0.0,0
124,66,test,"Give me the military force of the war, that is an event and a military conflict and a societal event, of Frank Rhodes (British Army officer) and commander in the war, that is a societal event and a military conflict, of A Field Battery, Royal Australian Artillery and military force of the force, that is a societal event and a military conflict, of the person born on 1850-06-24.","SELECT ?result WHERE { <http://dbpedia.org/resource/Frank_Rhodes_(British_Army_officer)> <http://dbpedia.org/ontology/battle> ?v6 . ?v6 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?v6 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?result <http://dbpedia.org/ontology/battle> ?v6 . ?v2 <http://dbpedia.org/ontology/commander> ?v1 . ?v1 <http://dbpedia.org/ontology/birthDate> ""1850-06-24""^^<http://www.w3.org/2001/XMLSchema#date> . ?v6 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. <http://dbpedia.org/resource/A_Field_Battery,_Royal_Australian_Artillery> <http://dbpedia.org/ontology/battle> ?v3 . ?result <http://dbpedia.org/ontology/battle> ?v2 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?v3 <http://dbpedia.org/ontology/commander> ?result . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?war WHERE {
  # Frank Rhodes as a commander in a war
  ?frankRhodes dbo:birthDate ""1850-06-24""^^xsd:date .
  ?frankRhodes dbo:occupation dbr:Military_officer .
  ?frankRhodes dbo:commanderOf ?war .

  # A Field Battery, Royal Australian Artillery in a war
  ?battery rdfs:label ""A Field Battery, Royal Australian Artillery""@en .
  ?battery dbo:participatedIn ?war .

  # Person born on 1850-06-24 and their military force
  ?person dbo:birthDate ""1850-06-24""^^xsd:date .
  ?person dbo:militaryForce ?force .
  ?force dbo:participatedIn ?war .

  FILTER (lang(?battery) = 'en')
}
```",7,14,8,3,3,3,3,71,0,0,9,0,0.0,0
791,64,test,"Give me the father of the child, that is a royalty, of the father, that is a royalty and an office holder, of Emperor Antoku and spouse of the spouse, that is a royalty, of the reference to Emperor Takakura and predecessor of Emperor Antoku.","SELECT ?result WHERE { ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v1 <http://dbpedia.org/property/father> ?v0 . ?v1 <http://dbpedia.org/property/father> ?result . ?v3 <http://xmlns.com/foaf/0.1/name> ""Emperor Takakura""@en . ?v2 <http://dbpedia.org/ontology/spouse> ?v3 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?result <http://dbpedia.org/ontology/spouse> ?v2 . ?result <http://dbpedia.org/ontology/successor> <http://dbpedia.org/resource/Emperor_Antoku> . <http://dbpedia.org/resource/Emperor_Antoku> <http://dbpedia.org/property/father> ?v0 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. }","```sparql
SELECT ?father WHERE {
  ?antoku dbo:predecessorOf dbr:Emperor_Antoku .
  ?kiyomori dbo:spouse ?tokuko ;
            rdf:type dbo:Royalty ;
            dbo:officeHolder true .
  ?kiyomori dbo:child ?child .
  ?child rdf:type dbo:Royalty .
  ?takakura dbo:spouse ?imperialPrincessTokuko .
  ?imperialPrincessTokuko rdfs:label ""Imperial Princess Tokuko""@en .
  ?antoku dbo:father ?kiyomori .
}
```",7,11,8,3,3,3,3,71,0,0,1,0,0.0,0
170,28,test,Give me the entity in the work of International Energy Agency and birth place of the awardee of People's Artist of Russia and domain of the profession of John Scholey.,SELECT ?result WHERE { ?v1 <http://dbpedia.org/property/author> <http://dbpedia.org/resource/International_Energy_Agency> . ?result <http://dbpedia.org/ontology/country> ?v1 . ?v3 <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/People's_Artist_of_Russia> . <http://dbpedia.org/resource/John_Scholey> <http://dbpedia.org/property/occupation> ?v5 . ?result <http://dbpedia.org/ontology/leaderTitle> ?v5 . ?v3 <http://dbpedia.org/ontology/birthPlace> ?result . },"```sparql
# Query 1: Entity in the work of International Energy Agency
SELECT ?entity WHERE {
  ?entity wdt:P31 wd:Q4835010 ; # Instance of Organization
          wdt:P463 wd:Q111930 . # Part of IEA
}

UNION

SELECT ?person WHERE {
  ?person wdt:P106 wd:Q82955 ; # Occupation is Politician or similar related to IEA
          wdt:P39 wd:Q111930 . # Position held in IEA
}

# Query 2: Birthplace of the awardee of People's Artist of Russia
SELECT DISTINCT ?birthPlace WHERE {
  ?person wdt:P166 wd:Q12345678 ; # Award received is People's Artist of Russia (replace with actual QID)
          wdt:P19 ?birthPlace .
}

# Query 3: Domain of the profession of John Scholey
SELECT ?domain WHERE {
  ?scholey foaf:name ""John Scholey""@en ;
           dbo:occupation ?profession .
  ?profession rdfs:label ?domain FILTER (lang(?domain) = 'en') .
}
```

Note: Replace `wd:Q12345678` with the actual QID for People's Artist of Russia once identified.",6,6,7,2,3,2,3,28,0,0,3,0,0.0,0
715,64,test,"Give me the leader of the office, that is a government agency and an organisation, of the reference to Carlos Franco Iribarnegaray and commander in the force, that is a military conflict, of the native of Morocco and commander in Spanish Civil War.","SELECT ?result WHERE { ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. <http://dbpedia.org/resource/Spanish_Civil_War> <http://dbpedia.org/ontology/commander> ?result . ?v3 <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Morocco> . ?v1 <http://dbpedia.org/ontology/leader> ?result . ?v0 <http://xmlns.com/foaf/0.1/name> ""Carlos Franco Iribarnegaray""@en . ?v2 <http://dbpedia.org/ontology/commander> ?result . ?v0 <http://dbpedia.org/property/office> ?v1 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/GovernmentAgency>. ?v2 <http://dbpedia.org/ontology/commander> ?v3 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?leader WHERE {
  # Step 1: Identify Carlos Franco Iribarnegaray and his roles
  ?person rdfs:label ""Carlos Franco Iribarnegaray""@en.
  
  # Step 2: Find the office he led
  ?office dbo:head ?person .
  ?office a dbo:GovernmentAgency ; dbo:organizationType ?type .

  # Step 3: Determine the military conflict and commander role
  ?conflict dbo:commander ?person ;
            a dbo:MilitaryConflict .
  
  # Find the native of Morocco involved in the Spanish Civil War
  ?moroccanPerson dbo:nationality dbr:Morocco ;
                  dbo:commanderInMilitaryConflicts ?spanishCivilWar .

  # Link to the same conflict
  ?spanishCivilWar a dbo:MilitaryConflict ;
                   rdfs:label ""Spanish Civil War""@en .
  
  FILTER(?conflict = ?spanishCivilWar)

  # Step 4: Find the leader of that office
  ?office dbo:head ?leader .
}
```",7,10,8,3,3,3,3,71,0,0,1,0,0.0,0
935,19,test,"Give me the headquarter of the office of the native of Balochistan, Pakistan and death place of the awardee of Sitara-i-Imtiaz.","SELECT ?result WHERE { ?v4 <http://dbpedia.org/ontology/location> ?result . ?v0 <http://dbpedia.org/property/office> ?v4 . ?v2 <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/Sitara-i-Imtiaz> . ?v2 <http://dbpedia.org/ontology/deathPlace> ?result . ?v0 <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Balochistan,_Pakistan> . }","```sparql
# Query for headquarter of an office associated with a native of Balochistan, Pakistan
SELECT ?office ?headquarter WHERE {
  ?office dbo:location dbr:Balochistan.
  ?office dbo:headquarters ?headquarter.
}

UNION

# Query for death place of awardees of Sitara-i-Imtiaz
SELECT ?person ?deathPlace WHERE {
  ?person dbo:honoraryTitle dbr:Sitara_i-Imtiaz.
  OPTIONAL { ?person dbo:deathPlace ?deathPlace. }
}
```",5,5,6,3,2,3,2,20,0,0,1,0,0.0,0
102,18,test,"Give me the native of the residence, that is English and a settlement, of Peter Finbow and manager of the player in the member, that is a soccer player, of England women's national football team.",SELECT ?result WHERE { <http://dbpedia.org/resource/Peter_Finbow> <http://dbpedia.org/property/residence> ?v3 . ?v1 <http://dbpedia.org/ontology/team> <http://dbpedia.org/resource/England_women's_national_football_team> . ?result <http://dbpedia.org/ontology/birthPlace> ?v3 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerPlayer>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. ?v1 <http://dbpedia.org/ontology/team> ?v2 . ?v3 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/United_Kingdom>. ?v2 <http://dbpedia.org/ontology/manager> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?nativePlace WHERE {
  # Step 1: Find Peter Finbow and his residence
  ?person a dbo:Person ;
          foaf:name ""Peter Finbow"" ;
          dbo:residence ?residence .

  # Step 2: Ensure the residence is an English settlement
  ?residence dbo:country dbr:England ;
             a dbo:Settlement .

  # Step 3: Find manager of a player in England women's national football team
  ?player a dbo:SoccerPlayer ;
          dbo:nationalTeam dbr:England_women%27s_national_football_team ;
          dbo:manager ?manager .

  # Step 4: Get the birthplace (native place) of this manager
  ?manager dbo:birthPlace ?nativePlace .
}
```",5,8,6,3,2,3,2,20,0,0,1,0,0.0,0
554,20,test,"Give me the leader of the birth place of the band, that is an artist, of Rita Redshoes and leader of the administration of the party member of Independent politician.",SELECT ?result WHERE { <http://dbpedia.org/resource/Rita_Redshoes> <http://dbpedia.org/ontology/associatedMusicalArtist> ?v4 . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. ?v2 <http://dbpedia.org/property/leader> ?v1 . ?v1 <http://dbpedia.org/ontology/party> <http://dbpedia.org/resource/Independent_politician> . ?v2 <http://dbpedia.org/property/leader> ?result . ?v5 <http://dbpedia.org/property/leader> ?result . ?v4 <http://dbpedia.org/ontology/birthPlace> ?v5 . },"```sparql
# Step 1: Identify Rita Redshoes' Band and its Leader
SELECT ?bandLeader WHERE {
  ?band dbo:musicalArtist dbr:Rita_Redshoes .
  ?band dbo:leader ?bandLeader .
}

# Step 2: Find the Birthplace of the Band Leader
SELECT ?birthPlace WHERE {
  ?bandLeader dbo:birthPlace ?birthPlace .
}

# Step 3: Identify the Leader of the Birth Place
SELECT ?currentLeader WHERE {
  ?birthPlace dbo:governmentHead ?currentLeader .
}

# Step 4: Identify an Independent Politician and their Party
SELECT ?independentPolitician ?party WHERE {
  ?independentPolitician dbo:politicalAffiliation ?party ;
                        dbo:isIndependent true .
}

# Step 5: Leader of the Administration of the Party
SELECT ?partyLeader WHERE {
  ?party dbo:leader ?partyLeader .
}
```",6,7,7,3,2,3,2,20,0,0,3,0,0.0,0
433,62,test,"Give me the associated musical artist of the person born, that is a musical artist and an artist, as the persona of Paul Chambers and associated musical artist of the associated musical artist, that is an artist and a musical artist, of the associated musical artist, that is a musical artist and an artist, of Ornette Coleman and professional in Musician.","SELECT ?result WHERE { ?v3 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v6 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?v6 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. ?result <http://dbpedia.org/property/occupation> ""Musician""@en . ?v3 <http://dbpedia.org/property/birthName> ?v4 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?v0 <http://dbpedia.org/ontology/associatedMusicalArtist> ?v6 . <http://dbpedia.org/resource/Ornette_Coleman> <http://dbpedia.org/ontology/associatedMusicalArtist> ?v0 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. ?v6 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. <http://dbpedia.org/resource/Paul_Chambers> <http://xmlns.com/foaf/0.1/givenName> ?v4 . }","```sparql
SELECT DISTINCT ?finalArtist WHERE {
  # Step 1: Find Paul Chambers' associated musical artist who is also an artist
  ?paulChambers dbo:birthName ""Paul Laurence Dunbar Chambers Jr."" .
  ?paulChambers dbo:associatedMusicalArtist ?artist1 .
  ?artist1 rdf:type dbo:Musician ;
           dbo:occupation dbc:Artists .

  # Step 2: Find the associated musical artist of this artist who is also an artist
  ?artist1 dbo:associatedMusicalArtist ?artist2 .
  ?artist2 rdf:type dbo:Musician ;
           dbo:occupation dbc:Artists .

  # Step 3: Find Ornette Coleman's associated musical artist who is also an artist
  ?ornetteColeman dbo:birthName ""Ornette Coleman"" .
  ?ornetteColeman dbo:associatedMusicalArtist ?artist3 .
  ?artist3 rdf:type dbo:Musician ;
           dbo:occupation dbc:Artists .

  # Step 4: Find the professional musician associated with this artist
  ?artist3 dbo:associatedMusicalArtist ?finalArtist .
  ?finalArtist rdf:type dbo:Musician .
}
```",7,13,8,3,3,3,3,71,0,0,3,0,0.0,0
365,20,test,"Give me the spouse of the native, that is a politician, of the reference to Полтавская губерния and person born as the birth name of the commander, that is an office holder, in Ukrainian–Soviet War.","SELECT ?result WHERE { ?v5 <http://dbpedia.org/ontology/spouse> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v5 <http://dbpedia.org/ontology/birthPlace> ?v4 . ?v4 <http://xmlns.com/foaf/0.1/name> ""Полтавская губерния""@en . <http://dbpedia.org/resource/Ukrainian–Soviet_War> <http://dbpedia.org/ontology/commander> ?v1 . ?v1 <http://dbpedia.org/property/birthName> ?v2 . ?result <http://dbpedia.org/property/birthName> ?v2 . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. }","```sparql
# Step 1: Identify a notable figure associated with Полтавская губерния
SELECT ?person WHERE {
  ?person dbo:nativePlace dbr:Полтавская_губерния .
  ?person rdf:type dbo:Politician .
}

# Step 2: Find the spouse of this politician
SELECT ?spouse WHERE {
  ?politician dbo:spouse ?spouse .
  FILTER(?politician IN (<result_from_step_1>))
}

# Step 3: Identify a commander in the Ukrainian–Soviet War who is an office holder
SELECT ?commander WHERE {
  ?commander dbo:officeHolderOf dbr:Ukrainian-Soviet_War .
  ?commander rdf:type dbo:MilitaryPerson .
}

# Step 4: Determine the birth name of this commander
SELECT ?birthName WHERE {
  ?commander foaf:name ?birthName .
  FILTER(?commander IN (<result_from_step_3>))
}

# Step 5: Find the person born with that birth name
SELECT ?person WHERE {
  ?person foaf:name ?birthName .
  FILTER(?birthName = <result_from_step_4>)
}

# Step 6: Identify the spouse of this person
SELECT ?spouse WHERE {
  ?person dbo:spouse ?spouse .
  FILTER(?person IN (<result_from_step_5>))
}
```

Note: The placeholders `<result_from_step_X>` need to be replaced with actual results from each step when executing the query in sequence.",6,8,7,3,2,3,2,20,0,0,1,0,0.0,0
645,62,test,"Give me the commander in the force of the commander in Siege of Madrid and leader of Ministry of the Army (Spain) and military force of the force, that is an event and a military conflict and a societal event, of the native, that is a president and a politician, of Restoration (Spain).",SELECT ?result WHERE { ?v3 <http://dbpedia.org/ontology/commander> ?result . ?v6 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/President>. ?v6 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v0 <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Restoration_(Spain)> . ?v6 <http://dbpedia.org/ontology/commander> ?v0 . <http://dbpedia.org/resource/Ministry_of_the_Army_(Spain)> <http://dbpedia.org/ontology/leader> ?result . <http://dbpedia.org/resource/Siege_of_Madrid> <http://dbpedia.org/ontology/commander> ?v4 . ?result <http://dbpedia.org/ontology/battle> ?v6 . ?v3 <http://dbpedia.org/ontology/commander> ?v4 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v6 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?person WHERE {
  ?person dbo:nationality dbr:Spain .
  ?person dbo:occupation dbr:Politician .
  ?person dbo:officeTitle dbr:President_of_Spain .
  
  OPTIONAL { ?person dbo:birthPlace ?place . FILTER regex(?place, ""Spain"", ""i"") }
  
  ?event dbo:type dbr:Military_conflict ;
         dbo:location dbr:Madrid ;
         dbo:participatedIn ?conflict .
         
  ?conflict dbo:name dbr:Spanish_Civil_War .

  OPTIONAL {
    ?person dbo:spouse ?spouse .
    ?spouse dbo:occupation dbr:Military_officer .
  }
  
  FILTER EXISTS { 
    ?ministry dbo:minister ?person ;
              dbo:country dbr:Spain .
  }

  FILTER EXISTS {
    ?conflict dbo:commander ?leader .
    ?leader rdfs:label ""José Miaja""@en .
  }
}
```",7,12,8,3,3,3,3,71,0,0,1,0,0.0,0
527,18,test,"Give me the author of the work, that is a work and a book, of Tom Baker and actor of the movie, that is a work and English and a television show, with the professional in Actor.","SELECT ?result WHERE { ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/TelevisionShow>. ?v2 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/United_Kingdom>. ?v3 <http://dbpedia.org/property/author> ?result . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Book>. ?v2 <http://dbpedia.org/property/starring> ?result . ?v2 <http://dbpedia.org/property/starring> ?v1 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?v3 <http://dbpedia.org/property/author> <http://dbpedia.org/resource/Tom_Baker> . ?v1 <http://dbpedia.org/property/occupation> ""Actor""@en . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?author WHERE {
  # Find a book authored by Tom Baker related to Doctor Who
  ?book dbo:author dbr:Tom_Baker .
  ?book dbo:title ?title .
  
  FILTER regex(?title, ""Doctor Who"", ""i"")

  # Find the television show Doctor Who where Tom Baker acted
  ?tvShow dbo:actor dbr:Tom_Baker ;
          a dbo:TelevisionSeries ;
          dbo:language dbr:English .

  # Ensure that the author of the book is also an actor in the TV show
  BIND(dbr:Tom_Baker AS ?author)
}
```",5,10,6,3,2,3,2,20,0,0,1,0,0.0,0
124,61,test,"Give me the military force of the force, that is a societal event and a military conflict, of the person born on 1850-06-24 and military force of the war, that is an event and a military conflict and a societal event, of the awardee of British South Africa Company Medal.","SELECT ?result WHERE { ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?v1 <http://dbpedia.org/ontology/birthDate> ""1850-06-24""^^<http://www.w3.org/2001/XMLSchema#date> . ?result <http://dbpedia.org/ontology/battle> ?v5 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?v0 <http://dbpedia.org/ontology/battle> ?v5 . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?result <http://dbpedia.org/ontology/battle> ?v3 . ?v0 <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/British_South_Africa_Company_Medal> . ?v3 <http://dbpedia.org/ontology/commander> ?v1 . }","```sparql
# Step 1: Find Cecil Rhodes
SELECT ?person WHERE {
  ?person dbo:birthDate ""1850-06-24""^^xsd:date .
  ?person rdfs:label ?name .
  FILTER(CONTAINS(LCASE(?name), ""cecil rhodes""))
}

# Step 2: Identify the military force in the Second Boer War involving Cecil Rhodes
SELECT DISTINCT ?militaryForce WHERE {
  ?event dbo:type dbr:Military_conflict ;
         dbo:participatingMilitaryUnit ?unit .
  ?unit dbo:member ?person .
  ?person rdfs:label ""Cecil Rhodes"" .
  ?event rdfs:label ?eventName .
  FILTER(CONTAINS(LCASE(?eventName), ""second boer war""))
}

# Step 3: Find an awardee of the British South Africa Company Medal
SELECT DISTINCT ?awardee WHERE {
  ?medal dbo:type dbr:British_South_Africa_Company_Medal ;
         dbo:recipient ?awardee .
}

# Step 4: Identify the war related to the awardee
SELECT DISTINCT ?warEvent WHERE {
  ?event dbo:type dbr:Military_conflict ;
         dbo:participatingMilitaryUnit ?unit .
  ?unit dbo:member ?awardee .
  ?medal dbo:type dbr:British_South_Africa_Company_Medal ;
         dbo:recipient ?awardee .
  ?event rdfs:label ?eventName .
  FILTER(CONTAINS(LCASE(?eventName), ""first matabele war""))
}

# Step 5: Identify the military force in both wars
SELECT DISTINCT ?militaryForce WHERE {
  { 
    ?event1 dbo:type dbr:Military_conflict ;
           dbo:participatingMilitaryUnit ?unit .
    ?unit rdfs:label ?forceName .
    FILTER(CONTAINS(LCASE(?forceName), ""british army""))
    ?event1 rdfs:label ?eventName1 .
    FILTER(CONTAINS(LCASE(?eventName1), ""second boer war""))
  }
  UNION
  {
    ?event2 dbo:type dbr:Military_conflict ;
           dbo:participatingMilitaryUnit ?unit .
    ?unit rdfs:label ?forceName .
    FILTER(CONTAINS(LCASE(?forceName), ""british army""))
    ?event2 rdfs:label ?eventName2 .
    FILTER(CONTAINS(LCASE(?eventName2), ""first matabele war""))
  }
}
```",6,11,7,3,2,3,3,71,0,0,1085,0,0.0,0
124,70,test,"Give me the military force of the war, that is an event and a military conflict and a societal event, of the awardee of British South Africa Company Medal and commander in the war, that is a societal event and a military conflict, of A Field Battery, Royal Australian Artillery and military force of the force, that is a societal event and a military conflict, of the person born on 1850-06-24.","SELECT ?result WHERE { ?v7 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?v0 <http://dbpedia.org/ontology/battle> ?v7 . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?result <http://dbpedia.org/ontology/battle> ?v7 . ?v1 <http://dbpedia.org/ontology/birthDate> ""1850-06-24""^^<http://www.w3.org/2001/XMLSchema#date> . ?v7 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?result <http://dbpedia.org/ontology/battle> ?v3 . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v7 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?v4 <http://dbpedia.org/ontology/commander> ?result . <http://dbpedia.org/resource/A_Field_Battery,_Royal_Australian_Artillery> <http://dbpedia.org/ontology/battle> ?v4 . ?v3 <http://dbpedia.org/ontology/commander> ?v1 . ?v0 <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/British_South_Africa_Company_Medal> . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?militaryForce WHERE {
  # Find the person born on 1850-06-24 who received the British South Africa Company Medal
  ?person dbo:birthday ""1850-06-24""^^xsd:date ;
          dbo:awardReceived dbr:British_South_Africa_Company_Medal .

  # Identify a war where this person was a commander and is both a societal event and military conflict
  ?war dbo:type dbr:Societal_event, dbr:Military_conflict ;
       dbo:commander ?person .

  # Determine the military force involved in that war
  ?militaryForce dbo:participatedIn ?war .

  # Ensure A Field Battery, Royal Australian Artillery was part of this military force
  ?unit dbo:partOf ?militaryForce .
  FILTER (str(?unit) = ""A Field Battery, Royal Australian Artillery"")
}
```",8,15,9,3,3,3,3,71,0,0,9,0,0.0,0
976,69,test,"Give me the office of the leader, that is a politician, of the administration, that is an organisation, of Kemal Kılıçdaroğlu and office of the mayor, that is a politician and an office holder and Turkish, of Nation Alliance (Turkey) and office of the person born as the birth name of Naci Bostancı.",SELECT ?result WHERE { ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v0 <http://dbpedia.org/property/birthName> ?v5 . ?v0 <http://dbpedia.org/property/office> ?result . ?v4 <http://dbpedia.org/property/leader> <http://dbpedia.org/resource/Kemal_Kılıçdaroğlu> . ?v6 <http://dbpedia.org/ontology/nationality> <http://dbpedia.org/resource/Turkey>. ?v4 <http://dbpedia.org/ontology/leader> ?v2 . <http://dbpedia.org/resource/Naci_Bostancı> <http://dbpedia.org/property/birthName> ?v5 . ?v2 <http://dbpedia.org/property/office> ?result . ?v6 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. <http://dbpedia.org/resource/Nation_Alliance_(Turkey)> <http://dbpedia.org/property/leader> ?v6 . ?v6 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?v6 <http://dbpedia.org/property/office> ?result . },"```sparql
# Query 1: Office held by Kemal Kılıçdaroğlu
SELECT ?office WHERE {
  wd:Q123456 wdt:P39 ?office .
}

# Query 2: Mayor of Nation Alliance (Turkey)
SELECT DISTINCT ?mayor ?office WHERE {
  ?person wdt:P106 wd:Q82955 ; # politician
          wdt:P39 ?office .    # office holder
  FILTER EXISTS { ?office wdt:P463* wd:Q1234567 } # Nation Alliance (Turkey) organization
  FILTER(LANG(?mayorLabel) = ""tr"") .
  SERVICE wikibase:label { bd:serviceParam wikibase:language ""[AUTO_LANGUAGE],en"". }
}

# Query 3: Office of Naci Bostancı
SELECT ?office WHERE {
  wd:Q1234568 wdt:P31 wd:Q5 ; # person
              wdt:P569 ?birthDate ;
              rdfs:label ""Naci Bostancı""@en .
  ?person wdt:P39 ?office .
}
```

Note: Replace `wd:Q123456`, `wd:Q1234567`, and `wd:Q1234568` with the actual DBpedia identifiers for Kemal Kılıçdaroğlu, Nation Alliance (Turkey), and Naci Bostancı respectively. These identifiers can be found by searching their names in DBpedia.",8,13,9,3,3,3,3,71,0,0,1,0,0.0,0
645,65,test,"Give me the leader of the office, that is a government agency and an organisation, of Camilo Menéndez Tolosa and military force of the force, that is an event and a military conflict and a societal event, of the native, that is a president and a politician, of Restoration (Spain) and commander in the force of Carlos Asensio Cabanillas.",SELECT ?result WHERE { ?v0 <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Restoration_(Spain)> . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/President>. ?v4 <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Carlos_Asensio_Cabanillas> . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/GovernmentAgency>. ?v4 <http://dbpedia.org/ontology/commander> ?result . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v6 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v6 <http://dbpedia.org/ontology/commander> ?v0 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. <http://dbpedia.org/resource/Camilo_Menéndez_Tolosa> <http://dbpedia.org/property/office> ?v3 . ?v6 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?result <http://dbpedia.org/ontology/battle> ?v6 . ?v6 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?v3 <http://dbpedia.org/ontology/leader> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?leader WHERE {
  # Step 1: Identify Camilo Menéndez Tolosa's office
  ?office dbo:type/dbo:subClassOf* dbo:GovernmentAgency ;
          dbo:type/dbo:subClassOf* dbo:Organization ;
          dbo:head dbr:Camilo_Menéndez_Tolosa .
  
  # Step 2: Identify the military force involved in a relevant event
  ?event dbo:type/dbo:subClassOf* dbo:MilitaryConflict ;
         dbo:type/dbo:subClassOf* dbo:SocietalEvent ;
         dbo:militaryForce ?force .

  # Step 3: Find the native president during the Restoration period
  ?president dbo:nationality dbr:Spain ;
             dbo:officeHolder dbr:Restoration_(Spain) ;
             dbo:type/dbo:subClassOf* dbo:Politician ;
             dbo:commanderInForce dbr:Carlos_Asensio_Cabanillas .

  # Step 4: Link the president with Carlos Asensio Cabanillas
  ?president dbo:commanderInForce dbr:Carlos_Asensio_Cabanillas .
}
```",7,14,8,3,3,3,3,71,0,0,1,0,0.0,0
987,64,test,"Give me the entity in the region, that is a country, of the time zone, that is a sports event, in Canicosa de la Sierra and birth place of Moamer Kasumović and birth place of the band, that is an artist and a musical artist, of the band, that is an artist, of Dado Polumenta.",SELECT ?result WHERE { ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. <http://dbpedia.org/resource/Canicosa_de_la_Sierra> <http://dbpedia.org/ontology/timeZone> ?v5 . <http://dbpedia.org/resource/Moamer_Kasumović> <http://dbpedia.org/ontology/birthPlace> ?result . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. ?v4 <http://dbpedia.org/ontology/associatedMusicalArtist> ?v2 . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsEvent>. <http://dbpedia.org/resource/Dado_Polumenta> <http://dbpedia.org/ontology/associatedMusicalArtist> ?v4 . ?result <http://dbpedia.org/ontology/country> ?v0 . ?v2 <http://dbpedia.org/ontology/birthPlace> ?result . ?v0 <http://dbpedia.org/property/timeZone> ?v5 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?country WHERE {
  # Step 1: Find Canicosa de la Sierra's time zone
  ?canicosa dbo:timeZone ?timezone .

  # Step 2: Identify sports events in that time zone
  ?event dbo:timeZone ?timezone ;
         a dbo:SportsEvent .

  # Step 3: Determine Moamer Kasumović's birthplace
  dbr:Radovan_Karadžić dbo:birthPlace ?moamerBirthPlace .

  # Step 4: Identify the band of Dado Pršo and its artist/musical artist
  dbr:Dado_Pršo dbo:band ?band .
  ?band dbo:artist ?artist ;
        a dbo:MusicalArtist .

  # Step 5: Find birthplace of the artist/musical artist
  ?artist dbo:birthPlace ?artistBirthPlace .

  # Step 6: Determine the country in the region defined by these criteria
  ?moamerBirthPlace dbo:country ?country .
  ?artistBirthPlace dbo:country ?country .
}
```",7,12,8,3,3,3,3,71,0,0,1,0,0.0,0
573,61,test,"Give me the person decedent at the residence, that is a settlement, of the professional, that is American, in Politician and parent of the author, that is a politician and an office holder, of the work of John Quincy Adams.","SELECT ?result WHERE { ?v1 <http://dbpedia.org/property/author> <http://dbpedia.org/resource/John_Quincy_Adams> . ?v0 <http://dbpedia.org/ontology/nationality> <http://dbpedia.org/resource/United_States>. ?v1 <http://dbpedia.org/property/author> ?v3 . ?v0 <http://dbpedia.org/property/residence> ?v5 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v0 <http://dbpedia.org/property/occupation> ""Politician""@en . ?result <http://dbpedia.org/ontology/deathPlace> ?v5 . ?v3 <http://dbpedia.org/ontology/parent> ?result . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. }","```sparql
SELECT ?decedent WHERE {
  # Step 1: John Quincy Adams as an author
  wd:Q1778 dbo:authorOf ?work .

  # Step 2: Find related authors who are politicians and office holders
  ?relatedAuthor dbo:authorOf ?work ;
                a dbo:Politician ;
                dbo:officeHolder ?office .

  # Step 3: Identify their parents
  ?parent dbo:child ?relatedAuthor .

  # Step 4: Filter the parent who is American and a politician
  ?parent a dbo:Politician ;
          dbo:nationality wd:Q30 ;  # Q30 is the DBpedia item for United States

  # Step 5: Determine the settlement where they reside
  ?residence dbo:resident ?parent ;
             a dbo:Settlement .

  # Step 6: Find out who was decedent at this residence
  ?decedent dbo:placeOfDeath ?residence .
}
```",6,10,7,3,2,3,3,71,0,0,2,0,0.0,0
573,67,test,"Give me the person decedent at Massachusetts and parent of the author, that is a politician and an office holder, of the work of John Quincy Adams and person decedent at the residence, that is a settlement, of the professional, that is American, in Politician.","SELECT ?result WHERE { ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?result <http://dbpedia.org/ontology/deathPlace> <http://dbpedia.org/resource/Massachusetts> . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v1 <http://dbpedia.org/property/author> ?v3 . ?v0 <http://dbpedia.org/property/residence> ?v6 . ?v3 <http://dbpedia.org/ontology/parent> ?result . ?v0 <http://dbpedia.org/property/occupation> ""Politician""@en . ?result <http://dbpedia.org/ontology/deathPlace> ?v6 . ?v0 <http://dbpedia.org/ontology/nationality> <http://dbpedia.org/resource/United_States>. ?v6 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. ?v1 <http://dbpedia.org/property/author> <http://dbpedia.org/resource/John_Quincy_Adams> . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?person WHERE {
  ?person dbo:deathPlace dbr:Massachusetts .
  ?person dbo:child dbr:John_Quincy_Adams .
  ?person dbo:occupation dbr:Politician .
  ?person dbo:officeHolder true .
}
```",7,11,8,3,3,3,3,71,0,0,2,0,0.0,0
216,63,test,"Give me the player in the coach, that is a soccer player and a sports manager and a soccer manager, of Bosnia and Herzegovina national under-18 football team and player in the coach of the reference, that is an organisation and a soccer club, to Croatia U21 and team of the person born, that is a sports manager and a soccer manager and a soccer player, on 1983-12-20.","SELECT ?result WHERE { ?v6 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsManager>. ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerClub>. ?v4 <http://dbpedia.org/ontology/coach> ?v3 . ?v3 <http://dbpedia.org/ontology/team> ?result . ?v6 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerManager>. ?v6 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerPlayer>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerPlayer>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerManager>. ?v6 <http://dbpedia.org/ontology/team> ?result . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?v4 <http://xmlns.com/foaf/0.1/name> ""Croatia U21""@en . ?v2 <http://dbpedia.org/ontology/birthDate> ""1983-12-20""^^<http://www.w3.org/2001/XMLSchema#date> . ?result <http://dbpedia.org/ontology/coach> ?v2 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsManager>. <http://dbpedia.org/resource/Bosnia_and_Herzegovina_national_under-18_football_team> <http://dbpedia.org/ontology/coach> ?v6 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?person WHERE {
  ?person dbo:birthDate ""1983-12-20""^^xsd:date .
  ?person a dbo:SoccerPlayer ;
          a dbo:SportsManager .

  # Check if the person has been a coach for Bosnia and Herzegovina national under-18 football team
  ?team dbr:Bosnia_and_Herzegovina_national_under-18_football_team ;
        dbo:coach ?person .
  
  # Check if the same person has also been a coach for Croatia U21
  ?org dbr:Croatia_U21 ;
       dbo:coach ?person .

  # Ensure the person is associated with an organization and soccer club
  ?org a dbo:Organization ;
      dbo:sportTeam ?club .
  ?club a dbo:SoccerClub .
}
```",7,15,8,3,3,3,3,71,0,0,1,0,0.0,0
582,67,test,"Give me the figure known as the nickname of the team, that is an organisation, of Hajime Moriyasu and player in the father, that is an athlete and a soccer manager and a sports manager, of the child of Kazuaki Nagasawa and reference to Japan.","SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/coach> <http://dbpedia.org/resource/Hajime_Moriyasu> . ?result <http://dbpedia.org/property/nickname> ?v3 . ?result <http://xmlns.com/foaf/0.1/name> ""Japan""@en . ?v0 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Kazuaki_Nagasawa> . ?v1 <http://dbpedia.org/property/nickname> ?v3 . ?v6 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsManager>. ?v6 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Athlete>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?v0 <http://dbpedia.org/property/father> ?v6 . ?v6 <http://dbpedia.org/ontology/team> ?result . ?v6 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerManager>. }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?teamNickname WHERE {
  # Hajime Moriyasu's team
  ?manager a dbo:SoccerManager ;
           foaf:name ""Hajime Moriyasu""@en .
  
  ?manager dbo:worksFor ?team .

  # Team nickname
  ?team dbo:nickname ?teamNickname .

  # Kazuaki Nagasawa's father
  ?child a dbo:Person ;
         foaf:name ""Kazuaki Nagasawa""@en .
  
  ?father dbo:parent ?child ;
          foaf:name ?fatherName ;
          dbo:occupation ?occupation1, ?occupation2, ?occupation3 .

  FILTER(?occupation1 IN (dbo:Athlete, dbo:SoccerManager, dbo:SportsManager))
  
  # Ensure all entities are related to Japan
  ?manager dbo:nationality dbr:Japan .
  ?team dbo:location dbr:Japan .
  ?father dbo:nationality dbr:Japan .

}
```",7,11,8,3,3,3,3,71,0,0,1,0,0.0,0
459,28,test,"Give me the governor of the administration, that is a politician, of Brad Henry and governor of the death place, that is a settlement, of Cliff Roquemore and person born as the birth name of Kevin Stitt.",SELECT ?result WHERE { ?v3 <http://dbpedia.org/property/governor> ?result . <http://dbpedia.org/resource/Cliff_Roquemore> <http://dbpedia.org/ontology/deathPlace> ?v1 . <http://dbpedia.org/resource/Kevin_Stitt> <http://dbpedia.org/property/birthName> ?v5 . ?v3 <http://dbpedia.org/property/governor> <http://dbpedia.org/resource/Brad_Henry> . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?result <http://dbpedia.org/property/birthName> ?v5 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. ?v1 <http://dbpedia.org/property/governor> ?result . },"```sparql
# Part 1: Governor of the administration of Brad Henry
SELECT ?governor WHERE {
  ?bradHenry dbo:officeHolderOf dbr:Governor_of_Oklahoma.
  ?bradHenry dbo:termStart ?startYear.
  ?bradHenry dbo:termEnd ?endYear.
  ?governor dbo:officeHolderOf dbr:Governor_of_Oklahoma;
            dbo:termStart ?governorStart;
            dbo:termEnd ?governorEnd.
  FILTER (?governorStart <= ?startYear && ?governorEnd >= ?endYear)
}

UNION

# Part 2: Governor of the death place of Cliff Roquemore
SELECT ?governor WHERE {
  ?cliffRoquemore dbo:deathPlace ?deathPlace.
  ?deathPlace a dbo:Settlement;
              dbo:governmentHead ?governor.
}

UNION

# Part 3: Person born as the birth name of Kevin Stitt
SELECT ?person WHERE {
  dbr:Kevin_Stitt dbo:birthName ?birthName.
  ?person dbo:birthName ?birthName.
}
```",6,8,7,2,3,2,3,28,0,0,1,0,0.0,0
445,63,test,"Give me the entity in the award of George H. Cameron and death place of the awardee of Royal Astronomical Society and entity in the residence, that is a country, of the resident, that is an athlete, of Great Britain.",SELECT ?result WHERE { <http://dbpedia.org/resource/George_H._Cameron> <http://dbpedia.org/property/awards> ?v2 . ?v6 <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/Royal_Astronomical_Society> . ?result <http://dbpedia.org/ontology/location> ?v3 . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Athlete>. ?v4 <http://dbpedia.org/property/residence> <http://dbpedia.org/resource/Great_Britain> . ?result <http://dbpedia.org/ontology/country> ?v2 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. ?v4 <http://dbpedia.org/property/residence> ?v3 . ?v6 <http://dbpedia.org/ontology/deathPlace> ?result . },"```sparql
# Step 1: Find the award received by George H. Cameron
SELECT ?award WHERE {
  wd:Q1234567 dbo:awardReceived ?award .
}

# Step 2: Find the death place of other awardees of that award from Royal Astronomical Society
SELECT DISTINCT ?deathPlace WHERE {
  ?person dbo:awardReceived ?award .
  ?award dbo:awardingBody wd:Q1234568 . # Assuming Q1234568 is the ID for Royal Astronomical Society
  OPTIONAL { ?person dbo:deathPlace ?deathPlace }
}

# Step 3: Find a British athlete and their residence country
SELECT DISTINCT ?country WHERE {
  ?athlete dbo:nationality wd:Q145 . # Q145 is the DBpedia entity for Great Britain
  ?athlete rdf:type dbo:Athlete .
  OPTIONAL { ?athlete dbo:residenceCountry ?country }
}
```",7,9,8,3,3,3,3,71,0,0,1,0,0.0,0
892,63,test,"Give me the entity in the profession of the true self of Enrico Crolla and entity in the administration, that is Italian and a region and a settlement and an administrative region, of Democratic Party (Italy) and landmark at elevation of the award of Anna Ishii.","SELECT ?result WHERE { ?v0 <http://dbpedia.org/property/leaderParty> <http://dbpedia.org/resource/Democratic_Party_(Italy)> . ?v3 <http://dbpedia.org/property/occupation> ?v1 . ?result <http://dbpedia.org/ontology/elevation> ?v5 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. ?v3 <http://xmlns.com/foaf/0.1/givenName> ""Enrico Crolla""@en . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/AdministrativeRegion>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Region>. <http://dbpedia.org/resource/Anna_Ishii> <http://dbpedia.org/property/awards> ?v5 . ?v0 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Italy>. ?result <http://dbpedia.org/ontology/country> ?v1 . ?result <http://dbpedia.org/ontology/province> ?v0 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?profession ?region ?landmark WHERE {
  # Enrico Crolla's profession
  OPTIONAL { 
    dbr:Enrico_Crolla dbo:occupation ?profession .
  }

  # Italian region associated with Democratic Party (Italy)
  OPTIONAL {
    ?party dbo:member ?person .
    ?person dbo:nationality dbr:Italy .
    ?region dbo:country dbr:Italy ;
            a dbo:AdministrativeRegion, dbo:Settlement .
    ?party dbo:hasMember ?person .
    FILTER EXISTS { ?person dbo:memberOf dbr:Democratic_Party_(Italy) }
  }

  # Landmark associated with Anna Ishii's award and its elevation
  OPTIONAL {
    ?award dbo:recipient dbr:Anna_Ishii .
    ?landmark dbo:elevation ?elevation ;
              dbo:associatedWith ?award .
  }
}
```",7,11,8,3,3,3,3,71,0,0,2,0,0.0,0
445,58,test,Give me the entity in England and entity in the award of the commander in Battle of Saint-Mihiel and death place of the awardee of Royal Astronomical Society.,SELECT ?result WHERE { ?v5 <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/Royal_Astronomical_Society> . <http://dbpedia.org/resource/Battle_of_Saint-Mihiel> <http://dbpedia.org/ontology/commander> ?v1 . ?result <http://dbpedia.org/ontology/country> ?v2 . ?v5 <http://dbpedia.org/ontology/deathPlace> ?result . ?v1 <http://dbpedia.org/property/awards> ?v2 . ?result <http://dbpedia.org/ontology/location> <http://dbpedia.org/resource/England> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?englandEntity ?commander ?award ?deathPlace WHERE {
  # Find the commander of the Battle of Saint-Mihiel
  ?battle dbo:commander ?commander .
  FILTER(STRSTARTS(STR(?battle), ""Battle_of_Saint-Mihiel""))

  # Find the award received by this commander
  ?commander dbo:honoraryTitle ?award .

  # Find an entity in England related to the award or commander
  ?englandEntity dbo:location dbr:England .
  OPTIONAL { ?englandEntity dbo:relatedTo ?award . }
  OPTIONAL { ?englandEntity dbo:relatedTo ?commander . }

  # Find the death place of someone awarded by the Royal Astronomical Society
  ?awardee dbo:honoraryTitle dbr:Royal_Astronomical_Society .
  ?awardee dbo:deathPlace ?deathPlace .

  # Ensure the awardee is connected to the award or commander
  OPTIONAL { ?awardee dbo:relatedTo ?award . }
  OPTIONAL { ?awardee dbo:relatedTo ?commander . }
}
```",6,6,7,3,3,3,3,71,0,0,1,0,0.0,0
773,60,test,"Give me the parent of the child, that is a royalty, of the father, that is an office holder and a royalty, of Carloman of Bavaria and spouse of the father of the parent of Bernard (son of Charles the Fat).",SELECT ?result WHERE { ?v2 <http://dbpedia.org/ontology/spouse> ?result . ?v1 <http://dbpedia.org/ontology/parent> ?result . ?v1 <http://dbpedia.org/property/father> ?v0 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. <http://dbpedia.org/resource/Carloman_of_Bavaria> <http://dbpedia.org/property/father> ?v0 . ?v3 <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Bernard_(son_of_Charles_the_Fat)> . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v3 <http://dbpedia.org/property/father> ?v2 . },"```sparql
# Step 1: Find Carloman of Bavaria's father
SELECT ?father WHERE {
  wd:Q123456 wdt:P22 ?father .
}

# Step 2: Find Louis the German's spouse
SELECT ?spouse WHERE {
  ?louis wdt:P26 ?spouse .
  FILTER(?louis = wd:Q123457) # Assuming Q123457 is Louis the German
}

# Step 3: Find Bernard (son of Charles the Fat)'s parent
SELECT ?parent WHERE {
  wd:Q123458 wdt:P22 ?parent .
}

# Step 4: Identify the parent of Bernard (Charles the Fat)
SELECT ?charlesFatParent WHERE {
  wd:Q123459 wdt:P22 ?charlesFatParent .
}

# Step 5: Determine the parent of Charles the Fat
SELECT ?louisGerman WHERE {
  ?charlesFatParent wdt:P22 ?louisGerman .
}

# Step 6: Find the child of Louis the German who is royalty (Carloman or Charles)
SELECT ?child WHERE {
  ?louisGerman wdt:P40 ?child .
  FILTER(?louisGerman = wd:Q123457) # Assuming Q123457 is Louis the German
}

# Step 7: Identify the parent of this royal child (already known as Louis the German)

# Step 8: Determine the spouse of Louis the German (already found in step 2)
```",6,9,7,3,2,3,3,71,0,0,1,0,0.0,0
216,62,test,"Give me the player in the coach of the reference, that is an organisation and a soccer club, to Croatia U21 and player in the coach, that is a soccer player and a sports manager and a soccer manager, of the player, that is an organisation and a sports club and a soccer club, in Džemal Berberović and team of Ognjen Vukojević.","SELECT ?result WHERE { ?v0 <http://dbpedia.org/ontology/coach> ?v6 . ?v6 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsManager>. ?v6 <http://dbpedia.org/ontology/team> ?result . ?v6 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerManager>. ?v4 <http://dbpedia.org/ontology/coach> ?v3 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerClub>. ?v4 <http://xmlns.com/foaf/0.1/name> ""Croatia U21""@en . ?v6 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerPlayer>. ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerClub>. <http://dbpedia.org/resource/Džemal_Berberović> <http://dbpedia.org/ontology/team> ?v0 . ?result <http://dbpedia.org/ontology/coach> <http://dbpedia.org/resource/Ognjen_Vukojević> . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsClub>. ?v3 <http://dbpedia.org/ontology/team> ?result . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. }","```sparql
# Step 1: Find the organization related to Croatia U21
SELECT ?organization WHERE {
  ?organization rdf:type dbo:SoccerClub .
  ?organization dbo:team c:CroatiaU21 .
}

# Step 2: Identify the coach of this organization who was also a player in Džemal Berberović's team
SELECT DISTINCT ?coach WHERE {
  ?organization rdf:type dbo:SoccerClub .
  ?organization dbo:team c:CroatiaU21 .
  ?coach dbo:position ""Coach""@en ;
         dbo:playerFor ?playerTeam .
  
  # Find the player team of Džemal Berberović
  ?džemalBerberović rdf:type dbo:SoccerPlayer ;
                    dbo:team ?playerTeam .
  FILTER(?džemalBerberović = dbc:Džemal_Berberović)
}

# Step 3: Determine Džemal Berberović's associated team
SELECT DISTINCT ?playerTeam WHERE {
  ?džemalBerberović rdf:type dbo:SoccerPlayer ;
                    dbo:team ?playerTeam .
  FILTER(?džemalBerberović = dbc:Džemal_Berberović)
}

# Step 4: Find the coach of this team who is linked to Ognjen Vukojević
SELECT DISTINCT ?coach WHERE {
  ?playerTeam rdf:type dbo:SoccerClub .
  
  # Coach of Džemal Berberović's team
  ?coach rdf:type dbo:SoccerManager ;
         dbo:position ""Coach""@en ;
         dbo:playerFor ?playerTeam .

  # Find the team associated with Ognjen Vukojević
  ?ognjenVukojevic rdf:type dbo:SoccerPlayer ;
                   dbo:team ?ognjenTeam .
  FILTER(?ognjenVukojevic = dbc:Ognjen_Vukojević)

  # Ensure the coach is linked to Ognjen Vukojević's team
  ?coach dbo:playerFor ?ognjenTeam .
}
```",7,15,8,3,3,3,3,71,0,0,1,0,0.0,0
136,8,test,Give me the region coded as 03834 and landmark at elevation of the award of Bret Anthony Johnston.,"SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/areaCode> ""03834"" . ?result <http://dbpedia.org/ontology/elevation> ?v2 . <http://dbpedia.org/resource/Bret_Anthony_Johnston> <http://dbpedia.org/property/awards> ?v2 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?landmark ?elevation ?region WHERE {
  # Step 1: Identify Bret Anthony Johnston and his award
  ?person a dbo:Writer ;
          foaf:name ""Bret Anthony Johnston""@en .
  
  ?award dbo:recipient ?person ;
         dbo:name ?awardName .

  # Step 2: Find the landmark associated with the award at a specific elevation
  ?landmark dbo:elevation ?elevation ;
            dbo:associatedWith ?award .

  # Step 3: Identify the region coded as ""03834""
  ?region dbo:postalCode ""03834""^^xsd:string .
  
  # Check if the landmark is in this region
  ?landmark dbo:location ?region .
}
```",3,3,4,2,2,2,2,9,0,0,1,0,0.0,0
826,70,test,"Give me the predecessor of the parent of the child of Louis IV, Grand Duke of Hesse and successor of the child, that is a royalty, of the reference, that is a royalty, to Louis I and spouse of the child of Johann Heinrich Appel.","SELECT ?result WHERE { ?v4 <http://dbpedia.org/property/father> ""Johann Heinrich Appel""@en . ?v0 <http://dbpedia.org/ontology/child> ?v7 . ?v7 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v7 <http://dbpedia.org/ontology/successor> ?result . ?v1 <http://dbpedia.org/ontology/parent> ?v3 . ?v1 <http://dbpedia.org/ontology/parent> <http://dbpedia.org/resource/Louis_IV,_Grand_Duke_of_Hesse> . ?v0 <http://xmlns.com/foaf/0.1/name> ""Louis I""@en . ?result <http://dbpedia.org/ontology/successor> ?v3 . ?v4 <http://dbpedia.org/ontology/spouse> ?result . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?predecessor WHERE {
  # Louis IV, Grand Duke of Hesse and his child
  ?child dbo:parent dbr:Louis_IV,_Grand_Duke_of_Hesse .
  
  # Parent of the child (Louis IV)
  ?parent dbo:child ?child .
  
  # Predecessor of the parent (Father of Louis IV)
  ?predecessor dbo:child ?parent .

  # Successor of the child of Louis IV
  ?successor dbo:parent ?child .

  # Royalty related to Louis I
  ?royalty dbo:spouse ?relatedToLouisI .
  ?relatedToLouisI rdfs:label ""Louis I""@en .

  # Spouse of the child of Johann Heinrich Appel
  ?appelChild dbo:parent dbr:Johann_Heinrich_Appel .
  ?spouse dbo:spouse ?appelChild .

  # Ensure all are royalty
  ?predecessor a dbo:Monarch ;
               rdfs:label ?predecessorLabel .
  FILTER(CONTAINS(LCASE(?predecessorLabel), ""royalty""))

  ?successor a dbo:Monarch ;
             rdfs:label ?successorLabel .
  FILTER(CONTAINS(LCASE(?successorLabel), ""royalty""))

  ?royalty a dbo:Monarch ;
           rdfs:label ?royaltyLabel .
  FILTER(CONTAINS(LCASE(?royaltyLabel), ""royalty""))

  ?spouse a dbo:Monarch ;
          rdfs:label ?spouseLabel .
  FILTER(CONTAINS(LCASE(?spouseLabel), ""royalty""))
}
```",8,10,9,3,3,3,3,71,0,0,1,0,0.0,0
41,27,test,"Give me the party of Mark Durkan and party of the work, that is an office holder, of yes and party of the person born as David Declan Costello.","SELECT ?result WHERE { ?v2 <http://dbpedia.org/ontology/party> ?result . <http://dbpedia.org/resource/Mark_Durkan> <http://dbpedia.org/ontology/party> ?result . ?v1 <http://dbpedia.org/ontology/party> ?result . ?v1 <http://dbpedia.org/property/author> ""yes""@en . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v2 <http://dbpedia.org/property/birthName> ""David Declan Costello""@en . }","```sparql
# Query to get the party of Mark Durkan
SELECT ?party WHERE {
  ?person foaf:name ""Mark Durkan""@en .
  ?person dbo:politicalParty ?party .
}

UNION

# Query to find an office holder with a work titled ""Yes"" and their party
SELECT DISTINCT ?officeHolder ?party WHERE {
  ?work dcterms:title ""Yes""@en .
  ?work dbo:author ?officeHolder .
  ?officeHolder dbo:politicalParty ?party .
}

UNION

# Query to get the party of David Declan Costello
SELECT ?party WHERE {
  ?person foaf:name ""David Declan Costello""@en .
  ?person dbo:politicalParty ?party .
}
```",5,6,6,2,3,2,3,28,0,0,1,0,0.0,0
839,59,test,"Give me the band of the person born, that is a musical artist, as the persona of Kevin Russell (musician) and band of the member of the band, that is a band and a group, of Peter Schorowsky.",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/bandMember> ?v5 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Band>. <http://dbpedia.org/resource/Kevin_Russell_(musician)> <http://xmlns.com/foaf/0.1/givenName> ?v3 . ?v2 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Group>. ?v2 <http://dbpedia.org/property/birthName> ?v3 . <http://dbpedia.org/resource/Peter_Schorowsky> <http://dbpedia.org/ontology/associatedMusicalArtist> ?v0 . ?v0 <http://dbpedia.org/ontology/bandMember> ?v5 . },"```sparql
# Query for Kevin Russell's band
SELECT ?band WHERE {
  ?person foaf:name ""Kevin Russell"" .
  ?person dbo:birthPlace ?place .
  ?person dbo:associatedBand ?band .
  FILTER EXISTS { ?band rdf:type dbo:MusicalArtist }
}

UNION

# Query for Peter Schorowsky's band
SELECT ?band WHERE {
  ?person foaf:name ""Peter Schorowsky"" .
  ?person dbo:memberOf ?band .
  FILTER EXISTS { ?band rdf:type dbo:Band } .
  FILTER EXISTS { ?band rdf:type dbo:Group }
}
```",6,9,7,3,2,3,3,71,0,0,1,0,0.0,0
715,65,test,"Give me the leader of the office, that is a government agency and an organisation, of Carlos Franco Iribarnegaray and commander in the force of the mayor, that is an office holder and a politician and a president, of 1933 Spanish general election and commander in the force, that is a military conflict, of Abd el-Krim.",SELECT ?result WHERE { <http://dbpedia.org/resource/1933_Spanish_general_election> <http://dbpedia.org/property/leader> ?v0 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/President>. ?v3 <http://dbpedia.org/ontology/leader> ?result . <http://dbpedia.org/resource/Carlos_Franco_Iribarnegaray> <http://dbpedia.org/property/office> ?v3 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v4 <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Abd_el-Krim> . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/GovernmentAgency>. ?v6 <http://dbpedia.org/ontology/commander> ?result . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?v4 <http://dbpedia.org/ontology/commander> ?result . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v6 <http://dbpedia.org/ontology/commander> ?v0 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?leader WHERE {
  # Find Carlos Franco Iribarnegaray's role as a leader
  ?office dbo:type/dbo:subClassOf* dbo:GovernmentAgency ;
          dbo:type/dbo:subClassOf* dbo:Organization .
  ?carlos dbr:Carlos_Franco_Iribarnegaray ;
          dbo:leader ?office .

  # Find the president from the 1933 Spanish general election who was also a mayor and politician
  ?president dbr:Spanish_general_election,_1933 ;
             dbo:positionHeld dbr:Municipalities_of_Spain ;
             dbo:positionHeld dbr:Politician ;
             dbo:positionHeld dbr:President .

  # Find the military conflict involving Abd el-Krim
  ?conflict dbo:commander ?abd .
  ?abd dbr:Abd_el-Krim .

  # Connect these entities to find the leader of the office
  ?office dbo:leader ?leader .
}
```",7,13,8,3,3,3,3,71,0,0,1,0,0.0,0
456,70,test,"Give me the spouse of the actor of Pacific Drive and professional in the alter ego of the reference, that is a fictional character, to Lamont Cranston (radio, film and television) and band of the band, that is a musical artist, of the band of Alan Doyle.","SELECT ?result WHERE { ?result <http://dbpedia.org/property/occupation> ?v7 . ?v0 <http://dbpedia.org/property/alterEgo> ?v7 . <http://dbpedia.org/resource/Pacific_Drive> <http://dbpedia.org/property/starring> ?v4 . ?v1 <http://dbpedia.org/ontology/associatedMusicalArtist> ?v3 . <http://dbpedia.org/resource/Alan_Doyle> <http://dbpedia.org/ontology/associatedMusicalArtist> ?v1 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/FictionalCharacter>. ?v0 <http://xmlns.com/foaf/0.1/name> ""Lamont Cranston (radio, film and television)""@en . ?v4 <http://dbpedia.org/ontology/spouse> ?result . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?v3 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . }","```sparql
SELECT ?spouse WHERE {
  # Find the actor of ""Pacific Drive""
  ?actor dbo:actedIn dbr:Pacific_Drive .
  
  # Find the alter ego of Lamont Cranston (The Shadow)
  ?shadowCharacter rdfs:label ""Lamont Cranston""@en .
  ?shadowCharacter dbo:alterEgoOf dbr:The_Shadow .

  # Find Alan Doyle's band
  ?band dbo:memberAlanDoyle dbr:Great_Big_Sea .
  
  # Find the professional associated with The Shadow and in Great Big Sea
  ?professional dbo:profession ""Actor""@en ;
                dbo:alterEgoOf ?shadowCharacter ;
                dbo:memberBand ?band .

  # Ensure the actor is the same as the professional
  FILTER(?actor = ?professional)

  # Find the spouse of this individual
  ?professional dbo:spouse ?spouse .
}
```",8,10,9,3,3,3,3,71,0,0,1,0,0.0,0
417,71,test,"Give me the spouse of the parent, that is a royalty, of the child of Knud, Hereditary Prince of Denmark and child of the child, that is a royalty, of the parent, that is a royalty, of Alexandrine of Mecklenburg-Schwerin and child of the father of the leader, that is a royalty, of Colony of Greenland.","SELECT ?result WHERE { ?v4 <http://dbpedia.org/property/father> ?v5 . ?result <http://dbpedia.org/ontology/spouse> ?v2 . ?v8 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v7 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v8 <http://dbpedia.org/property/father> ?v7 . ?result <http://dbpedia.org/ontology/parent> ?v8 . ?v1 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Knud,_Hereditary_Prince_of_Denmark> . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v2 <http://dbpedia.org/ontology/child> ?v1 . <http://dbpedia.org/resource/Alexandrine_of_Mecklenburg-Schwerin> <http://dbpedia.org/ontology/parent> ?v7 . ?result <http://dbpedia.org/property/father> ?v5 . <http://dbpedia.org/resource/Colony_of_Greenland> <http://dbpedia.org/property/leader> ?v4 . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. }","```sparql
SELECT ?spouse WHERE {
  # Step 1: Identify a child of Knud, Hereditary Prince of Denmark
  ?child dbr:Knud,_Hereditary_Prince_of_Denmark dbo:child ?knudChild .
  
  # Step 2: Find the parent that is royalty for this child
  ?parent dbo:spouse ?knudParent .
  ?knudParent dbo:title ?royalTitle .
  FILTER(CONTAINS(LCASE(?royalTitle), ""prince"") || CONTAINS(LCASE(?royalTitle), ""queen"") || CONTAINS(LCASE(?royalTitle), ""king""))
  
  # Step 3: Identify a child of Alexandrine of Mecklenburg-Schwerin who is royalty
  ?alexChild dbr:Alexandrine_of_Mecklenburg-Schwerin dbo:child ?alexChild .
  ?parent2 dbo:title ?royalTitle2 .
  FILTER(CONTAINS(LCASE(?royalTitle2), ""prince"") || CONTAINS(LCASE(?royalTitle2), ""queen"") || CONTAINS(LCASE(?royalTitle2), ""king""))
  
  # Step 4: Find the leader of Colony of Greenland and their father
  ?leader dbr:Colony_of_Greenland dbo:leader ?greenlandLeader .
  ?father dbo:child ?greenlandFather .
  
  # Step 5: Identify the child of both the royal parent from step 3 and the father from step 4
  ?commonChild dbo:parent ?parent .
  ?commonChild dbo:parent ?father .

  # Step 6: Find the spouse of the parent from step 2
  ?spouse dbo:spouse ?knudParent .
}
```",9,13,10,3,3,3,3,71,0,0,1,0,0.0,0
443,25,test,"Give me the birthplace of Carl Larsson and birthplace of the person born, that is a musical artist and an artist, on 1949-11-20 and landmark at elevation of the award of William Shepherd.","SELECT ?result WHERE { <http://dbpedia.org/resource/William_Shepherd> <http://dbpedia.org/property/awards> ?v2 . ?result <http://dbpedia.org/ontology/elevation> ?v2 . ?v4 <http://dbpedia.org/ontology/birthDate> ""1949-11-20""^^<http://www.w3.org/2001/XMLSchema#date> . <http://dbpedia.org/resource/Carl_Larsson> <http://dbpedia.org/ontology/birthPlace> ?result . ?v4 <http://dbpedia.org/ontology/birthPlace> ?result . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. }","```sparql
# Query to get Carl Larsson's birthplace
SELECT ?birthPlace WHERE {
  dbpedia:Carl_Larsson dbo:birthPlace ?birthPlace .
}

# Query to find the person born on 1949-11-20 who is both a musical artist and an artist
SELECT ?person ?birthPlace WHERE {
  ?person dbo:birthDate ""1949-11-20""^^xsd:date ;
          rdf:type dbpedia-owl:Artist, dbpedia-owl:MusicalArtist .
  ?person dbo:birthPlace ?birthPlace .
}

# Query to find the award received by William Shepherd and its elevation
SELECT ?award ?elevation WHERE {
  dbpedia:William_Shepherd dbo:receivedAward ?award .
  OPTIONAL { ?award dbo:elevation ?elevation . }
}

# Assuming we have an elevation, query for landmarks at that elevation
# This part is hypothetical as it depends on the previous result
SELECT ?landmark WHERE {
  ?landmark dbo:elevation ?elevation .
}
```",5,7,6,2,3,2,3,28,0,0,1,0,0.0,0
645,56,test,"Give me the military force of Spanish Civil War and leader of the office, that is a government agency and an organisation, of the native of Restoration (Spain) and commander in the force of Carlos Asensio Cabanillas.",SELECT ?result WHERE { ?v2 <http://dbpedia.org/ontology/commander> ?result . ?v0 <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Restoration_(Spain)> . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/GovernmentAgency>. ?result <http://dbpedia.org/ontology/battle> <http://dbpedia.org/resource/Spanish_Civil_War> . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?v2 <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Carlos_Asensio_Cabanillas> . ?v0 <http://dbpedia.org/property/office> ?v1 . ?v1 <http://dbpedia.org/ontology/leader> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?militaryForce ?leaderOfOffice WHERE {
  # Carlos Asensio Cabanillas and his military force during the Spanish Civil War
  dbr:Claudio_Asen%C3%A7o_Cabanillas dbo:militaryCommanderOf ?militaryForce .
  
  # Leader of a government agency/organization associated with someone from Restoration (Spain)
  ?person dbo:nationality dbr:Spain ;
          dbo:era dbr:Restoration_(Spain) .
  ?office dbo:type dbr:Government_agency ;
          dbo:leader ?leaderOfOffice .
  ?office dbo:associatedWith ?person .

  # Ensure the office is both a government agency and an organization
  FILTER EXISTS { ?office dbo:type dbr:Organization }
}
```",6,8,7,3,3,3,3,71,0,0,2,0,0.0,0
433,66,test,"Give me the professional in the profession of the writer of Slowhand at 70 – Live at the Royal Albert Hall and associated musical artist of the person born, that is a musical artist and an artist, as Paul Laurence Dunbar Chambers Jr. and associated musical artist of the associated musical artist, that is an artist and a musical artist, of Scott LaFaro.","SELECT ?result WHERE { ?v3 <http://dbpedia.org/property/birthName> ""Paul Laurence Dunbar Chambers Jr.""@en . <http://dbpedia.org/resource/Slowhand_at_70_–_Live_at_the_Royal_Albert_Hall> <http://dbpedia.org/property/writer> ?v1 . ?v1 <http://dbpedia.org/property/occupation> ?v2 . ?v6 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?v6 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?v6 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. <http://dbpedia.org/resource/Scott_LaFaro> <http://dbpedia.org/ontology/associatedMusicalArtist> ?v6 . ?v3 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?result <http://dbpedia.org/property/occupation> ?v2 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?professional WHERE {
  # Eric Clapton's album
  dbr:Slowhand_at_70_%E2%80%93_Live_at_the_Royal_Albert_Hall dbo:composer dbr:Eric_Clapperton .

  # Paul Chambers Jr.
  dbr:Paul_Chambers_Jr. a dbo:Musician ;
                        dbo:associatedBandMember ?band1 ;
                        dbo:associatedMusicalArtist ?artist1 .

  # Scott LaFaro
  dbr:Scott_LaFaro a dbo:Musician ;
                   dbo:associatedBandMember ?band2 ;
                   dbo:associatedMusicalArtist ?artist2 .

  # Find the professional in the profession of Eric Clapton and associated with Paul Chambers Jr.
  ?professional a dbo:Musician ;
                dbo:profession dbr:Eric_Clapperton ;
                dbo:associatedMusicalArtist ?artist1 .

  # Ensure the professional is also an artist
  ?professional dbo:occupationCategory dbr:Artist .
}
```",7,11,8,3,3,3,3,71,0,0,1,0,0.0,0
456,63,test,"Give me the professional in the alter ego of The Shadow and band of the band, that is a musical artist, of Dean Brody and spouse of the actor of the movie, that is a work and a television show, with Ross Newton.",SELECT ?result WHERE { ?v3 <http://dbpedia.org/ontology/spouse> ?result . <http://dbpedia.org/resource/Dean_Brody> <http://dbpedia.org/ontology/associatedMusicalArtist> ?v2 . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?result <http://dbpedia.org/property/occupation> ?v6 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/TelevisionShow>. ?v2 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v4 <http://dbpedia.org/property/starring> ?v3 . <http://dbpedia.org/resource/The_Shadow> <http://dbpedia.org/property/alterEgo> ?v6 . ?v4 <http://dbpedia.org/property/starring> <http://dbpedia.org/resource/Ross_Newton> . },"```sparql
SELECT ?actor ?spouse WHERE {
  # Lamont Cranston as The Shadow's alter ego
  ?shadow dbo:alterEgo dbr:Lamont_Cranston .
  
  # Dean Brody and his band
  ?dean dbp:name ""Dean Brody"" ;
        dbo:bandMember ?band .
  
  # Ross Newton in a movie or TV show
  ?ross dbo:role dbr:Dr._Simon_Crane ;
         dbo:workIn ?work .
  
  # Actor who worked with Ross Newton
  ?actor dbo:actedIn ?work ;
         dbo:spouse ?spouse .
}
```",7,10,8,3,3,3,3,71,0,0,1,0,0.0,0
200,9,test,Give me the band member of the band of Revenge (Canadian band) and reference to the name of Angelcorpse.,SELECT ?result WHERE { <http://dbpedia.org/resource/Revenge_(Canadian_band)> <http://dbpedia.org/ontology/associatedMusicalArtist> ?v3 . ?result <http://dbpedia.org/ontology/associatedMusicalArtist> ?v3 . ?result <http://xmlns.com/foaf/0.1/name> ?v1 . <http://dbpedia.org/resource/Angelcorpse> <http://xmlns.com/foaf/0.1/name> ?v1 . },"```sparql
# Query to find band members of Revenge (Canadian band)
SELECT ?member WHERE {
  ?band rdf:type dbo:MusicalBand .
  ?band rdfs:label ""Revenge""@en .
  ?band dbo:nationality dbr:Canada .
  ?band dbo:bandMember ?member .
  FILTER(LANG(?band) = 'en')
}

# Query to find the name of Angelcorpse
SELECT ?name WHERE {
  ?entity rdfs:label ""Angelcorpse""@en .
  ?entity foaf:name ?name .
  FILTER(LANG(?entity) = 'en')
}
```",4,4,5,2,2,2,2,9,0,0,1,0,0.0,0
417,70,test,"Give me the child of the child, that is a royalty, of the parent, that is a royalty, of Alexandrine of Mecklenburg-Schwerin and child of the father of the leader, that is a royalty, of Colony of Greenland and spouse of the parent, that is a royalty, of Count Ingolf of Rosenborg.",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/parent> ?v3 . ?result <http://dbpedia.org/ontology/spouse> ?v4 . <http://dbpedia.org/resource/Colony_of_Greenland> <http://dbpedia.org/property/leader> ?v0 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v4 <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Count_Ingolf_of_Rosenborg> . ?v3 <http://dbpedia.org/property/father> ?v1 . ?v0 <http://dbpedia.org/property/father> ?v7 . <http://dbpedia.org/resource/Alexandrine_of_Mecklenburg-Schwerin> <http://dbpedia.org/ontology/parent> ?v1 . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?result <http://dbpedia.org/property/father> ?v7 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?finalPerson WHERE {
  # Step 1: Find Alexandrine of Mecklenburg-Schwerin's royal parent
  ?alexParent a dbo:Monarch ;
              dbo:child dbr:Alexandrine_of_Mecklenburg-Schwerin .

  # Step 2: Find the child of that royal parent (sibling or another child)
  ?siblingOrChild dbo:parent ?alexParent .
  
  # Step 3: Identify the leader of the Colony of Greenland and their father
  ?greenlandLeader a dbo:Monarch ;
                   dbo:country dbr:Greenland_Colony .
  ?greenlandFather dbo:child ?greenlandLeader .

  # Step 4: Find the spouse of this leader's parent (who is royalty)
  ?spouseOfParent dbo:spouse ?greenlandFather .

  # Step 5: Determine the child of the child from step 2 who is also royalty
  ?royalDescendant dbo:parent ?siblingOrChild ;
                   a dbo:Monarch .
  
  # Step 6: Combine these relationships to identify the final individual
  ?finalPerson dbo:spouse ?spouseOfParent ;
               dbo:child ?royalDescendant .
}
```",8,12,9,3,3,3,3,71,0,0,1,0,0.0,0
507,67,test,"Give me the spouse of Anne V. Coates and director of the movie, that is a movie and a work, with the person born on 1919-06-17 and professional in the profession of the person born on 1966-02-18.","SELECT ?result WHERE { ?v0 <http://dbpedia.org/ontology/birthDate> ""1919-06-17""^^<http://www.w3.org/2001/XMLSchema#date> . ?v6 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Film>. ?v1 <http://dbpedia.org/ontology/birthDate> ""1966-02-18""^^<http://www.w3.org/2001/XMLSchema#date> . ?result <http://dbpedia.org/ontology/spouse> <http://dbpedia.org/resource/Anne_V._Coates> . ?result <http://dbpedia.org/property/occupation> ?v3 . ?v6 <http://dbpedia.org/property/starring> ?v0 . ?v1 <http://dbpedia.org/property/occupation> ?v3 . ?v6 <http://dbpedia.org/ontology/director> ?result . ?v6 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?spouse ?director ?movie WHERE {
  # Anne V. Coates' spouse
  dbr:Anne_V._Coates dbo:spouse ?spouse .

  # Director of a movie that is both a ""movie"" and a ""work""
  ?spouse dbo:profession dbr:Film_director .
  ?spouse dbo:directorOf ?movie .
  ?movie rdf:type dbr:Film ;
         dbo:genre dbr:Movie ;
         dbo:abstract ?abstract .

  # Person born on 1919-06-17
  ?person1 dbp:birthday ""1919-06-17""^^xsd:date ;
           dbo:profession ?profession1 .

  # Profession of the person born on 1966-02-18
  ?person2 dbp:birthday ""1966-02-18""^^xsd:date .
  ?person2 dbo:profession ?profession2 .

  FILTER(?profession1 = ?profession2)
}
```",7,9,8,3,3,3,3,71,0,0,1,0,0.0,0
465,60,test,"Give me the successor of the child of the parent of Ercole II d'Este, Duke of Ferrara and successor of the child, that is a royalty, of the parent of Charles Orlando, Dauphin of France.","SELECT ?result WHERE { ?v2 <http://dbpedia.org/ontology/successor> ?result . ?v2 <http://dbpedia.org/property/father> ?v3 . ?v0 <http://dbpedia.org/ontology/child> ?v1 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v1 <http://dbpedia.org/ontology/successor> ?result . <http://dbpedia.org/resource/Ercole_II_d'Este,_Duke_of_Ferrara> <http://dbpedia.org/ontology/parent> ?v3 . <http://dbpedia.org/resource/Charles_Orlando,_Dauphin_of_France> <http://dbpedia.org/ontology/parent> ?v0 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT DISTINCT ?successor1 ?successor2 WHERE {
  # Step 1: Find Ercole II d'Este's parent
  ?ercole2 dbo:parent ?parentErcole2 .
  FILTER(STR(?ercole2) = ""Ercole_II_d%27Este"")

  # Step 2: Find the child of Ercole II d'Este's parent
  ?parentErcole2 dbo:child ?childParentErcole2 .

  # Step 3: Determine the successor of this child
  ?childParentErcole2 dbo:successor ?successor1 .
  FILTER(STR(?successor1) != STR(?childParentErcole2))

  # Step 4: Find Charles Orlando's parent
  ?charlesOrlando dbo:parent ?parentCharlesOrlando .
  FILTER(STR(?charlesOrlando) = ""Charles_Orland"")

  # Step 5: Find the child of Charles Orlando's parent
  ?parentCharlesOrlando dbo:child ?childParentCharlesOrlando .

  # Step 6: Determine the successor of this child
  ?childParentCharlesOrlando dbo:successor ?successor2 .
  FILTER(STR(?successor2) != STR(?childParentCharlesOrlando))

  # Ensure both successors are royalty
  ?successor1 rdfs:subClassOf* dbo:Monarch .
  ?successor2 rdfs:subClassOf* dbo:Monarch .

  # Step 7: Find the successor of both identified successors
  OPTIONAL { ?successor1 dbo:successor ?finalSuccessor1 . }
  OPTIONAL { ?successor2 dbo:successor ?finalSuccessor2 . }

  FILTER(STR(?finalSuccessor1) = STR(?finalSuccessor2))
}
```",6,7,7,3,2,3,3,71,0,0,1,0,0.0,0
495,19,test,Give me the child of the father of William I of Württemberg and father of the child of the parent of Princess Pauline of Württemberg (1810–1856).,SELECT ?result WHERE { ?v4 <http://dbpedia.org/property/father> ?result . ?v4 <http://dbpedia.org/ontology/parent> ?v0 . <http://dbpedia.org/resource/William_I_of_Württemberg> <http://dbpedia.org/property/father> ?v2 . ?result <http://dbpedia.org/property/father> ?v2 . <http://dbpedia.org/resource/Princess_Pauline_of_Württemberg_(1810–1856)> <http://dbpedia.org/ontology/parent> ?v0 . },"```sparql
SELECT ?childOfFather WHERE {
  # Step 1: Identify William I's father
  ?williamI dbr:William_I_of_Württemberg .
  ?williamI dbo:father ?fatherOfWilliamI .

  # Step 2: Find the child of William I's father (could be William I or another sibling)
  ?childOfFather dbo:parent ?fatherOfWilliamI .

  # Step 3: Identify Princess Pauline's parent
  ?pauline dbr:Pauline_of_Württemberg .
  ?pauline dbo:parent ?parentOfPauline .

  # Step 4: Find the child of Princess Pauline's parent (could be Pauline or another sibling)
  ?childOfParent dbp:parent ?parentOfPauline .

  # Step 5: Determine the father of the child from step 4
  ?fatherOfChild dbo:parent ?childOfParent .
  
  FILTER(?childOfFather = ?williamI || ?childOfFather = ?childOfParent)
}
```",5,5,6,3,2,3,2,20,0,0,1,0,0.0,0
865,71,test,"Give me the native of the residence, that is a country, of the person decedent at Patna and father of the child, that is a politician, of the spouse of Syeda Shahar Banu and father of the child of the father of Abul Maal Abdul Muhith.",SELECT ?result WHERE { ?v5 <http://dbpedia.org/property/father> ?result . ?result <http://dbpedia.org/ontology/birthPlace> ?v2 . ?v5 <http://dbpedia.org/property/father> ?v4 . <http://dbpedia.org/resource/Syeda_Shahar_Banu> <http://dbpedia.org/ontology/spouse> ?v4 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. ?v8 <http://dbpedia.org/property/father> ?result . <http://dbpedia.org/resource/Abul_Maal_Abdul_Muhith> <http://dbpedia.org/property/father> ?v7 . ?v1 <http://dbpedia.org/ontology/deathPlace> <http://dbpedia.org/resource/Patna> . ?v1 <http://dbpedia.org/property/residence> ?v2 . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v8 <http://dbpedia.org/property/father> ?v7 . },"```sparql
SELECT ?nativeCountry WHERE {
  ?person foaf:name ""Syed Nawab Ali Chaudhury""@en .
  ?person dbo:spouse ?spouse .
  ?spouse foaf:name ""Syeda Shahar Banu""@en .
  ?spouse dbo:child ?politician .
  ?politician rdf:type dbo:Politician ;
              foaf:name ?name .
  FILTER(CONTAINS(LCASE(?name), ""shamsul haque"")) .
  
  ?person dbo:fatherOf ?abulmaal .
  ?abulmaal foaf:name ""Abul Maal Abdul Muhith""@en .

  ?person dbo:placeOfBirth ?birthPlace .
  ?birthPlace dbo:country ?nativeCountry .
}
```",9,11,10,3,3,3,3,71,0,0,1,0,0.0,0
892,57,test,"Give me the entity in the administration, that is Italian and a region and a settlement and an administrative region, of Democratic Party (Italy) and entity in Italy and landmark at elevation of the award of the member of E-girls.",SELECT ?result WHERE { ?v0 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Italy>. <http://dbpedia.org/resource/E-girls> <http://dbpedia.org/ontology/bandMember> ?v1 . ?result <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Italy> . ?result <http://dbpedia.org/ontology/elevation> ?v4 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Region>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/AdministrativeRegion>. ?v1 <http://dbpedia.org/property/awards> ?v4 . ?result <http://dbpedia.org/ontology/province> ?v0 . ?v0 <http://dbpedia.org/property/leaderParty> <http://dbpedia.org/resource/Democratic_Party_(Italy)> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT DISTINCT ?region ?landmark WHERE {
  # Part 1: Find the region associated with Democratic Party (Italy)
  ?region a dbo:Region ;
          dbo:country dbr:Italy ;
          dbo:settlement true ;
          dbo:administrativeRegion true ;
          dbp:governingParty dbr:Democratic_Party_(Italy) .

  # Part 2: Find the landmark in Italy at a specific elevation related to an award of E-girls
  ?landmark a dbo:Lighthouse ;  # Assuming landmarks include lighthouses, adjust as needed
            dbo:elevation ?elevation ;
            dbo:location dbr:Italy .
  
  OPTIONAL {
    ?award dbp:recipient ?member .
    ?member foaf:name ?name .
    FILTER regex(?name, ""E-girls"", ""i"") .
    ?landmark dbo:relatedTo ?award .
  }
}
```",6,10,7,3,3,3,3,71,0,0,2,0,0.0,0
433,61,test,"Give me the professional in the profession of the writer of Slowhand at 70 – Live at the Royal Albert Hall and associated musical artist of the associated musical artist, that is an artist and a musical artist, of the associated musical artist, that is a musical artist and an artist, of Ornette Coleman.",SELECT ?result WHERE { ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?v5 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v0 <http://dbpedia.org/ontology/associatedMusicalArtist> ?v5 . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. ?v1 <http://dbpedia.org/property/occupation> ?v3 . <http://dbpedia.org/resource/Slowhand_at_70_–_Live_at_the_Royal_Albert_Hall> <http://dbpedia.org/property/writer> ?v1 . <http://dbpedia.org/resource/Ornette_Coleman> <http://dbpedia.org/ontology/associatedMusicalArtist> ?v0 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?result <http://dbpedia.org/property/occupation> ?v3 . },"```sparql
SELECT DISTINCT ?finalArtist WHERE {
  # Step 1: Identify Eric Clapton as the writer of ""Slowhand at 70 – Live at the Royal Albert Hall""
  dbpedia:Slowhand_at_70_%E2%80%93_Live_at_the_Royal_Albert_Hall dbo:composer dbpedia:Eric_Claptontemp.

  # Step 2: Find associated musical artists of Eric Clapton
  ?associatedArtist dbo:musicalArtistOf dbpedia:Eric_Clapton .

  # Step 3: Identify a professional who is both an artist and a musical artist among these associates
  ?dualRoleArtist rdf:type dbo:MusicalArtist ;
                  rdf:type dbo:Artist ;
                  dbo:musicalArtistOf ?associatedArtist .

  # Step 4: Find associated musical artists of this dual-role artist
  ?secondDualRoleArtist dbo:musicalArtistOf ?dualRoleArtist ;
                        rdf:type dbo:MusicalArtist ;
                        rdf:type dbo:Artist .

  # Step 5: Identify the professional in the profession of this second dual-role artist, associated with Ornette Coleman
  ?finalArtist dbo:musicalArtistOf ?secondDualRoleArtist ;
               dbo:musicalArtistOf dbpedia:Ornette_Coleman .
}
```",6,10,7,3,2,3,3,71,0,0,46,0,0.0,0
281,24,test,"Give me the awardee of the award of Alfred Warden and awardee of the award, that is a military conflict, of Lawrence Moore Cosgrave.",SELECT ?result WHERE { ?result <http://dbpedia.org/property/awards> ?v0 . <http://dbpedia.org/resource/Lawrence_Moore_Cosgrave> <http://dbpedia.org/property/awards> ?v2 . <http://dbpedia.org/resource/Alfred_Warden> <http://dbpedia.org/property/awards> ?v0 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?result <http://dbpedia.org/property/awards> ?v2 . },"```sparql
SELECT ?wardenAwardee ?cosgraveAwardee WHERE {
  # Find the award associated with Alfred Warden
  ?award wdt:P170 wd:Q1234567; # Assuming Q1234567 is the entity for Alfred Warden
         wdt:P1668 ?wardenAwardee. # P1668 is the property for awardee

  # Find the military conflict-related award associated with Lawrence Moore Cosgrave
  ?conflictAward wdt:P170 wd:Q2345678; # Assuming Q2345678 is the entity for Lawrence Moore Cosgrave
                  wdt:P31/wdt:P279* wd:Q12345; # P31/P279* filters for military conflict-related awards (assuming Q12345 is a class for such conflicts)
                  wdt:P1668 ?cosgraveAwardee.
}
```

Note: The placeholders `wd:Q1234567` and `wd:Q2345678` should be replaced with the actual DBpedia entity IDs for Alfred Warden and Lawrence Moore Cosgrave, respectively. Similarly, `wd:Q12345` should be replaced with the correct class ID for military conflicts if different.",4,5,5,2,2,2,3,28,0,0,1,0,0.0,0
579,19,test,"Give me the native of the residence, that is English and a settlement, of Alan Clyne and person born as the birth name of the native, that is an office holder, of Edinburgh.",SELECT ?result WHERE { ?result <http://dbpedia.org/property/birthName> ?v4 . ?v2 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/United_Kingdom>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v0 <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Edinburgh> . ?v0 <http://dbpedia.org/property/birthName> ?v4 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. <http://dbpedia.org/resource/Alan_Clyne> <http://dbpedia.org/property/residence> ?v2 . ?result <http://dbpedia.org/ontology/birthPlace> ?v2 . },"```sparql
# Step 1: Find Alan Clyne's place of residence that is an English settlement
SELECT ?residence WHERE {
    ?alanClyne dbo:nationality dbr:Scottish ;
               foaf:name ""Alan Clyne"" .
    ?alanClyne dbo:residenceLocation ?residence .
    ?residence dbo:language dbr:English ;
               rdf:type dbo:Settlement .
}

# Step 2: Find a person born in Edinburgh with the same birth name as Alan Clyne who is an office holder
SELECT ?person WHERE {
    ?alanClyne foaf:name ""Alan Clyne"" .
    ?person foaf:name ?name ;
            dbo:birthPlace dbr:Edinburgh ;
            dbo:officeHolder true .
    FILTER(?name = ?alanClyne)
}

# Step 3: Determine the native language or ethnicity of the residence of this office holder
SELECT ?native WHERE {
    ?person dbo:residenceLocation ?residence .
    ?residence dbo:native ?native .
}
```",5,8,6,3,2,3,2,20,0,0,18,0,0.0,0
442,9,test,"Give me the resting place of the actor of This Side of Heaven and resting place of the work of Roosevelt, Theodore.","SELECT ?result WHERE { ?v3 <http://dbpedia.org/ontology/restingPlace> ?result . <http://dbpedia.org/resource/This_Side_of_Heaven> <http://dbpedia.org/ontology/starring> ?v3 . ?v1 <http://dbpedia.org/ontology/restingPlace> ?result . ?v1 <http://dbpedia.org/property/author> ""Roosevelt, Theodore""@en . }","```sparql
# Query for the resting place of the actor from ""This Side of Heaven""
SELECT ?actor ?actorName ?restingPlace WHERE {
  ?film dcterms:title ""This Side of Heaven""@en .
  ?film dbo:starring ?actor .
  ?actor foaf:name ?actorName .
  OPTIONAL { ?actor dbo:deathPlace ?restingPlace . }
} LIMIT 1

UNION

# Query for the resting place associated with Theodore Roosevelt
SELECT ?person ?personName ?restingPlace WHERE {
  ?person foaf:name ""Theodore Roosevelt""@en .
  OPTIONAL { ?person dbo:deathPlace ?restingPlace . }
}
```",4,4,5,2,2,2,2,9,0,0,1,0,0.0,0
41,24,test,"Give me the party of the person born as David Declan Costello and party of the work, that is an office holder, of yes.","SELECT ?result WHERE { ?v1 <http://dbpedia.org/property/author> ""yes""@en . ?v2 <http://dbpedia.org/ontology/party> ?result . ?v1 <http://dbpedia.org/ontology/party> ?result . ?v2 <http://dbpedia.org/property/birthName> ""David Declan Costello""@en . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT ?costelloParty ?officeHolderParty WHERE {
  # Find David Declan Costello's political party
  ?person a dbo:Person ;
          foaf:name ""David Declan Costello""@en .
  OPTIONAL { ?person dbo:party ?costelloParty . }

  # Find an office holder named ""Yes"" and their political party
  ?officeHolder a dbo:OfficeHolder ;
                foaf:name ""Yes""@en .
  OPTIONAL { ?officeHolder dbo:party ?officeHolderParty . }
}
```",4,5,5,2,2,2,3,28,0,0,1,0,0.0,0
465,61,test,"Give me the successor of the child, that is a royalty, of the parent of Charles Orlando, Dauphin of France and spouse of the child, that is a royalty, of the parent of Elizabeth of Austria (1526–1545).","SELECT ?result WHERE { ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. <http://dbpedia.org/resource/Charles_Orlando,_Dauphin_of_France> <http://dbpedia.org/ontology/parent> ?v1 . ?v3 <http://dbpedia.org/ontology/successor> ?result . ?v1 <http://dbpedia.org/ontology/child> ?v3 . ?v0 <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Elizabeth_of_Austria_(1526–1545)> . ?v0 <http://dbpedia.org/ontology/child> ?v5 . ?result <http://dbpedia.org/ontology/spouse> ?v5 . }","```sparql
SELECT ?successor WHERE {
  # Step 1: Identify Charles Orlando, Dauphin of France's parent
  ?charlesOrlando dbo:childOf ?parentCharlesOrlando .
  
  # Step 2: Find a child of Charles Orlando who is royalty and their spouse
  ?royalChild dbo:childOf ?parentCharlesOrlando ;
              rdf:type dbo:Monarch ;
              dbo:spouse ?spouse .

  # Step 3: Identify Elizabeth of Austria (1526–1545) and her parent
  ?elizabeth dbp:dateOfBirth ""1526""^^xsd:gYear ;
             dbp:dateOfDeath ""1545""^^xsd:gYear ;
             dbo:childOf ?parentElizabeth .

  # Step 4: Find a child that is royalty of Elizabeth's parent
  ?royalChild2 dbo:childOf ?parentElizabeth ;
               rdf:type dbo:Monarch .

  # Step 5: Determine the successor of the spouse from step 2
  ?spouse dbo:succeededBy ?successor .
}
```",6,8,7,3,2,3,3,71,0,0,1,0,0.0,0
166,18,test,"Give me the entity in the territory administered, that is a country, from Madrid and resting place of the military force of the force, that is an event and a societal event and a military conflict, of Manuel Hedilla.",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/country> ?v3 . ?v2 <http://dbpedia.org/ontology/battle> ?v1 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?v1 <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Manuel_Hedilla> . ?v2 <http://dbpedia.org/ontology/restingPlace> ?result . ?v3 <http://dbpedia.org/ontology/capital> <http://dbpedia.org/resource/Madrid> . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. },"```sparql
SELECT DISTINCT ?country WHERE {
  # Find Manuel Hedilla and his associated military event
  ?manuelHedilla dbo:birthName ""Manuel Hedilla"" .
  ?manuelHedilla dbo:associatedWith ?militaryEvent .

  # Ensure the event is a societal event, military conflict, and an event
  ?militaryEvent rdf:type dbo:SocietalEvent ;
                 rdf:type dbo:MilitaryConflict ;
                 rdf:type dbo:Event .

  # Find the resting place of this event in Madrid
  ?militaryEvent dbo:location ?restingPlace .
  ?restingPlace dbo:city ""Madrid""^^xsd:string .

  # Identify a country administered from Madrid related to this resting place
  ?country dbo:administrativeCapital ?madrid ;
           dbo:territory ?restingPlace .
}
```",5,9,6,3,2,3,2,20,0,0,4,0,0.0,0
582,61,test,"Give me the figure known as the nickname of the team, that is an organisation, of Hajime Moriyasu and player in the father, that is an athlete and a soccer manager and a sports manager, of the child of Kazuaki Nagasawa.",SELECT ?result WHERE { ?v1 <http://dbpedia.org/property/nickname> ?v3 . ?v0 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Kazuaki_Nagasawa> . ?result <http://dbpedia.org/property/nickname> ?v3 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?v1 <http://dbpedia.org/ontology/coach> <http://dbpedia.org/resource/Hajime_Moriyasu> . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Athlete>. ?v5 <http://dbpedia.org/ontology/team> ?result . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsManager>. ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerManager>. ?v0 <http://dbpedia.org/property/father> ?v5 . },"```sparql
# Step 1: Find Hajime Moriyasu's current team
SELECT ?team WHERE {
  ?person dbo:occupation dbp:Soccer_Manager .
  ?person foaf:name ""Hajime Moriyasu""@en .
  ?person dbo:currentTeam ?team .
}

# Step 2: Get the nickname of the team
SELECT ?nickname WHERE {
  ?team rdfs:label ?teamLabel .
  FILTER(CONTAINS(LCASE(?teamLabel), LCASE(?team)))
  OPTIONAL { ?team dbp:nickname ?nickname . }
}

# Step 3: Identify Kazuaki Nagasawa's father and his professions
SELECT ?father ?profession WHERE {
  ?person dbo:child ?nagasawa .
  ?nagasawa foaf:name ""Kazuaki Nagasawa""@en .
  ?person foaf:name ?fatherName .
  OPTIONAL { ?person dbo:occupation ?profession . }
}

# Step 4: Check for any player connection
SELECT ?player WHERE {
  ?team dbp:nickname ?nickname .
  ?player dbo:currentTeam ?team .
  ?player dbo:spouse|dbo:child ?relatedPerson .
  ?relatedPerson foaf:name ?fatherName .
}
```",6,10,7,3,2,3,3,71,0,0,1,0,0.0,0
216,56,test,"Give me the team of the person born, that is a sports manager and a soccer manager and a soccer player, on the death of Pavel Vezhinov and player in the coach of Croatia national under-21 football team and player in Mario Ivanković.",SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerPlayer>. <http://dbpedia.org/resource/Mario_Ivanković> <http://dbpedia.org/ontology/team> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsManager>. ?v2 <http://dbpedia.org/ontology/team> ?result . ?v1 <http://dbpedia.org/ontology/birthDate> ?v0 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerManager>. <http://dbpedia.org/resource/Croatia_national_under-21_football_team> <http://dbpedia.org/ontology/coach> ?v2 . ?result <http://dbpedia.org/ontology/coach> ?v1 . <http://dbpedia.org/resource/Pavel_Vezhinov> <http://dbpedia.org/ontology/deathDate> ?v0 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?team WHERE {
  ?person a dbo:SoccerPlayer ;
          dbo:dateOfBirth ""1960-03-13""^^xsd:date ;
          dbo:sportManagerTeam ?team .
  
  FILTER EXISTS { 
    ?person dbo:coach dbr:Croatia_national_under-21_football_team .
  }
  
  FILTER EXISTS {
    ?person foaf:name ""Zlatko Kranjčar""@en .
  }
}
```",6,9,7,3,3,3,3,71,0,0,1,0,0.0,0
433,60,test,"Give me the professional in the profession of the writer of Slowhand at 70 – Live at the Royal Albert Hall and associated musical artist of the person born, that is a musical artist and an artist, as the persona of Paul Chambers.",SELECT ?result WHERE { ?v0 <http://dbpedia.org/property/occupation> ?v1 . ?v2 <http://dbpedia.org/property/birthName> ?v3 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?result <http://dbpedia.org/property/occupation> ?v1 . ?v2 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . <http://dbpedia.org/resource/Paul_Chambers> <http://xmlns.com/foaf/0.1/givenName> ?v3 . <http://dbpedia.org/resource/Slowhand_at_70_–_Live_at_the_Royal_Albert_Hall> <http://dbpedia.org/property/writer> ?v0 . },"```sparql
SELECT ?professional WHERE {
  # Identify Eric Clapton's album ""Slowhand at 70 – Live at the Royal Albert Hall""
  ?album dcterms:title ""Slowhand at 70 – Live at the Royal Albert Hall"" .
  ?album dbo:composer ?clapton .

  # Ensure ?clapton is Eric Clapton
  ?clapton foaf:name ""Eric Clapton""@en .

  # Identify Paul Chambers and his associated musical artist, Miles Davis
  ?chambers foaf:name ""Paul Chambers""@en .
  ?chambers dbo:associatedMusicalArtist ?milesDavis .

  # Ensure ?milesDavis is Miles Davis
  ?milesDavis foaf:name ""Miles Davis""@en .

  # Find the profession of Eric Clapton and match it with Miles Davis's roles
  ?clapton dbo:profession ?profession .
  ?milesDavis dbo:profession ?sameProfession .

  FILTER(?sameProfession = ?profession)
}
```",6,8,7,3,2,3,3,71,0,0,16,0,0.0,0
715,71,test,"Give me the commander in the force, that is a military conflict, of the native of Morocco and commander in the force of the mayor, that is an office holder and a politician and a president, of 1933 Spanish general election and leader of the office, that is a government agency and an organisation, of the reference to Carlos Franco Iribarnegaray.","SELECT ?result WHERE { ?v5 <http://dbpedia.org/ontology/commander> ?result . ?v2 <http://dbpedia.org/ontology/commander> ?v1 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v5 <http://dbpedia.org/ontology/commander> ?v4 . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/President>. ?v7 <http://xmlns.com/foaf/0.1/name> ""Carlos Franco Iribarnegaray""@en . ?v8 <http://dbpedia.org/ontology/leader> ?result . ?v8 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?v7 <http://dbpedia.org/property/office> ?v8 . ?v8 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/GovernmentAgency>. ?v1 <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Morocco> . <http://dbpedia.org/resource/1933_Spanish_general_election> <http://dbpedia.org/property/leader> ?v4 . ?v2 <http://dbpedia.org/ontology/commander> ?result . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?commander WHERE {
  # Francisco Franco as a commander in military conflicts
  ?conflict dbo:commander ?commander .
  
  # Francisco Franco's political roles around 1933
  ?politicalRole dbo:officeHolder ?commander ;
                 (dbo:startDate ?start ; dbo:endDate ?end) .
  FILTER (?start <= ""1933-12-31""^^xsd:date && ?end >= ""1933-01-01""^^xsd:date)
  
  # Organization related to Carlos Franco Iribarnegaray
  ?organization dbo:leader ?commander ;
                dbo:reference dbr:Carlos_Franco_Iribarnegaray .
}
```",9,15,10,3,3,3,3,71,0,0,1,0,0.0,0
433,71,test,"Give me the associated musical artist of the person born, that is a musical artist and an artist, as the persona of Paul Chambers and professional in the profession of the writer of Slowhand at 70 – Live at the Royal Albert Hall and associated musical artist of the associated musical artist, that is an artist and a musical artist, of the associated musical artist, that is a musical artist and an artist, of Ornette Coleman.",SELECT ?result WHERE { ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?v5 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v7 <http://dbpedia.org/property/occupation> ?v8 . ?v4 <http://dbpedia.org/ontology/associatedMusicalArtist> ?v5 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. <http://dbpedia.org/resource/Slowhand_at_70_–_Live_at_the_Royal_Albert_Hall> <http://dbpedia.org/property/writer> ?v7 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. ?v2 <http://dbpedia.org/property/birthName> ?v1 . <http://dbpedia.org/resource/Ornette_Coleman> <http://dbpedia.org/ontology/associatedMusicalArtist> ?v4 . ?v2 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?result <http://dbpedia.org/property/occupation> ?v8 . <http://dbpedia.org/resource/Paul_Chambers> <http://xmlns.com/foaf/0.1/givenName> ?v1 . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?artist WHERE {
    # Find Paul Chambers' associated musical artist who is also an artist
    ?paulChambers a dbo:MusicalArtist ;
                  dbo:associatedMusicalArtist ?intermediateArtist .
    ?intermediateArtist a dbo:Artist, dbo:MusicalArtist .

    # This intermediate artist should be Eric Clapton
    ?clapton dbr:Eric_Claptont ;
             rdf:type dbo:Writer ;
             dbo:work ?slowhandAlbum .
    ?slowhandAlbum rdfs:label ""Slowhand at 70 – Live at the Royal Albert Hall""@en .

    # Eric Clapton should be associated with an artist linked to Ornette Coleman
    ?clapton dbo:associatedMusicalArtist ?anotherArtist .
    ?anotherArtist a dbo:Artist, dbo:MusicalArtist ;
                  dbo:associatedMusicalArtist ?ornetteColeman .
    ?ornetteColeman dbr:Ornette_Coleman .

    # Ensure the artist is Eric Clapton
    FILTER(?intermediateArtist = ?clapton)
}
```",9,15,10,3,3,3,3,71,0,0,4,0,0.0,0
987,58,test,"Give me the birth place of Dado Polumenta and birth place of the actor of All for Free and entity in the region, that is a country, of the time zone, that is a sports event, in Canicosa de la Sierra.",SELECT ?result WHERE { ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsEvent>. ?result <http://dbpedia.org/ontology/country> ?v0 . ?v5 <http://dbpedia.org/ontology/birthPlace> ?result . <http://dbpedia.org/resource/Dado_Polumenta> <http://dbpedia.org/ontology/birthPlace> ?result . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. <http://dbpedia.org/resource/All_for_Free> <http://dbpedia.org/property/starring> ?v5 . <http://dbpedia.org/resource/Canicosa_de_la_Sierra> <http://dbpedia.org/ontology/timeZone> ?v4 . ?v0 <http://dbpedia.org/property/timeZone> ?v4 . },"```sparql
# Query 1: Birthplace of Dado Polumenta (Dado Povlevitch)
SELECT ?birthPlace WHERE {
  ?person foaf:name ""Dado Povlevitch""@en .
  ?person dbo:birthPlace ?birthPlace .
}

# Query 2: Actor in ""All for Free"" and their birthplace
SELECT ?actor ?actorBirthPlace WHERE {
  ?movie dbo:title ""All for Free""@en ;
         dbo:starring ?actor .
  ?actor dbo:birthPlace ?actorBirthPlace .
}

# Query 3: Country in the region of a time zone for a sports event in Canicosa de la Sierra
SELECT DISTINCT ?country WHERE {
  # Find the time zone for Canicosa de la Sierra
  ?place rdfs:label ""Canicosa de la Sierra""@en ;
         dbo:timeZone ?timeZone .
  
  # Find sports events associated with this time zone
  ?event dbo:location ?place ;
         a dbo:SportsEvent .

  # Determine the country in the region of that time zone
  ?region geo:hasTimezone ?timeZone ;
          geo:coveredBy ?country .
}
```",6,8,7,3,3,3,3,71,0,0,1,0,0.0,0
606,19,test,"Give me the figure known as the nickname of DeKalb, Illinois and birthplace of the alumnus of the figure known, that is a university and a sports league and an educational institution, as Penn Quakers.","SELECT ?result WHERE { ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/EducationalInstitution>. <http://dbpedia.org/resource/DeKalb,_Illinois> <http://dbpedia.org/property/nickname> ?v2 . ?v0 <http://dbpedia.org/property/nickname> <http://dbpedia.org/resource/Penn_Quakers> . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/University>. ?result <http://dbpedia.org/property/nickname> ?v2 . ?v4 <http://dbpedia.org/ontology/almaMater> ?v0 . ?v4 <http://dbpedia.org/ontology/birthPlace> ?result . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsLeague>. }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?nickname ?alumnus ?institution WHERE {
  # Find DeKalb's nickname
  dbr:DeKalb,_Illinois dbo:nickname ?nickname .

  # Find notable people from DeKalb
  ?person dbo:birthPlace dbr:DeKalb,_Illinois .
  
  # Check if the person is an alumnus of Penn and connected to Quakers
  ?person dbo:almaMater dbr:University_of_Pennsylvania .
  OPTIONAL { ?person dbo:sportTeam dbr:Penn_Quakers . }

  # Return the nickname, alumnus, and institution
  BIND(dbr:University_of_Pennsylvania AS ?institution)
}
```",5,8,6,3,2,3,2,20,0,0,1,0,0.0,0
507,58,test,"Give me the director of the movie, that is a movie and a work, with Beryl Reid and spouse of Anne V. Coates and professional in the profession of the person born on 1966-02-18.","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/spouse> <http://dbpedia.org/resource/Anne_V._Coates> . ?v1 <http://dbpedia.org/property/occupation> ?v2 . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?v5 <http://dbpedia.org/ontology/director> ?result . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Film>. ?result <http://dbpedia.org/property/occupation> ?v2 . ?v5 <http://dbpedia.org/property/starring> <http://dbpedia.org/resource/Beryl_Reid> . ?v1 <http://dbpedia.org/ontology/birthDate> ""1966-02-18""^^<http://www.w3.org/2001/XMLSchema#date> . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?director WHERE {
  # Step 1: Find the person born on 1966-02-18
  ?person dbo:birthday ""1966-02-18""^^xsd:date .
  
  # Step 2: Get their profession
  ?person dbo:occupation ?profession .

  # Step 3: Identify Anne V. Coates' spouse
  dbr:Anne_V._Coates dbo:spouse ?coatesSpouse .

  # Step 4: Find movies featuring both Beryl Reid and Anne V. Coates' spouse
  ?movie dbo:starring ?berylReid ;
         dbo:starring ?coatesSpouse .
  dbr:Beryl_Reid dbo:birthName ""Beryl Reid""^^xsd:string .

  # Step 5: Find the director of such a movie
  ?movie dbo:director ?director .
}
```",6,8,7,3,3,3,3,71,0,0,1,0,0.0,0
417,58,test,"Give me the child of the child, that is a royalty, of the parent, that is a royalty, of Alexandrine of Mecklenburg-Schwerin and child of the father of Frederick IX of Denmark and spouse of Princess Caroline-Mathilde of Denmark.",SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. <http://dbpedia.org/resource/Frederick_IX_of_Denmark> <http://dbpedia.org/property/father> ?v5 . <http://dbpedia.org/resource/Alexandrine_of_Mecklenburg-Schwerin> <http://dbpedia.org/ontology/parent> ?v1 . ?v2 <http://dbpedia.org/property/father> ?v1 . ?result <http://dbpedia.org/ontology/parent> ?v2 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?result <http://dbpedia.org/property/father> ?v5 . ?result <http://dbpedia.org/ontology/spouse> <http://dbpedia.org/resource/Princess_Caroline-Mathilde_of_Denmark> . },"```sparql
SELECT ?childOfChild WHERE {
  # Alexandrine of Mecklenburg-Schwerin's parent who is royalty
  ?parent dbo:spouse dbr:Alexandrine_of_Mecklenburg-Schwerin .
  ?parent a dbo:RoyalFamily .

  # Child of that royal parent
  ?child dbo:parent ?parent ;
         a dbo:RoyalFamily .

  # Father of Frederick IX of Denmark
  ?frederickIXParent dbr:Frederick_IX_of_Denmark dbo:father .

  # Spouse of Princess Caroline-Mathilde of Denmark
  ?spouse dbo:spouse dbr:Princess_Caroline_Matilda_of_Denmark .

  # Child of this spouse
  ?childOfSpouse dbo:parent ?spouse ;
                 a dbo:RoyalFamily .

  # Ensure the child is connected to Alexandrine's lineage and Frederick IX's father
  FILTER(?child = ?childOfSpouse && ?frederickIXParent = ?parent)

  # Child of that child who is royalty
  ?childOfChild dbo:parent ?child ;
                a dbo:RoyalFamily .
}
```",6,8,7,3,3,3,3,71,0,0,1,0,0.0,0
865,57,test,"Give me the native of British Raj and father of the child, that is a politician, of the spouse of Syeda Shahar Banu and father of the child of Abu Ahmad Abdul Hafiz.",SELECT ?result WHERE { ?v4 <http://dbpedia.org/property/father> ?v1 . ?v3 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Abu_Ahmad_Abdul_Hafiz> . ?v4 <http://dbpedia.org/property/father> ?result . ?v3 <http://dbpedia.org/property/father> ?result . ?result <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/British_Raj> . <http://dbpedia.org/resource/Syeda_Shahar_Banu> <http://dbpedia.org/ontology/spouse> ?v1 . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT ?person WHERE {
  # Find Syeda Shahar Banu's spouse
  ?shaharBanu dbo:spouse ?spouse .
  FILTER(STR(?shaharBanu) = ""Syeda_Shahar_Banu"") .

  # Find Abu Ahmad Abdul Hafiz's child's father
  ?hafiz dbo:child ?child .
  ?child foaf:parent ?father .
  FILTER(STR(?hafiz) = ""Abu_Ahmad_Abdul_Hafiz"") .

  # Check if the spouse is the same as the father of Hafiz's child
  FILTER(?spouse = ?father) .

  # Ensure this person is native to British Raj and has a politician child
  ?person dbo:nationality dbr:British_Raj .
  ?person dbo:child ?politicianChild .
  ?politicianChild dbo:occupation dbr:Politician .

  # Check if the person matches both conditions
  FILTER(?spouse = ?person)
}
```",6,7,7,3,3,3,3,71,0,0,1,0,0.0,0
933,71,test,"Give me the reference to the birth name of the professional in Musician and band of the band, that is a group and a band and an organisation, of the person born, that is a musical artist, on 1947-04-21 and band of the band of the band, that is an artist and a musical artist, of The Ramong Sound.","SELECT ?result WHERE { <http://dbpedia.org/resource/The_Ramong_Sound> <http://dbpedia.org/ontology/associatedMusicalArtist> ?v1 . ?v8 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v8 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?v4 <http://dbpedia.org/property/birthName> ?v5 . ?v7 <http://dbpedia.org/ontology/associatedMusicalArtist> ?v8 . ?v8 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Group>. ?v4 <http://dbpedia.org/property/occupation> <http://dbpedia.org/resource/Musician> . ?v1 <http://dbpedia.org/ontology/associatedMusicalArtist> ?v2 . ?v7 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?v8 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Band>. ?v2 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v7 <http://dbpedia.org/ontology/birthDate> ""1947-04-21""^^<http://www.w3.org/2001/XMLSchema#date> . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. ?result <http://xmlns.com/foaf/0.1/name> ?v5 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?birthName WHERE {
    ?person a dbo:MusicalArtist ;
            dbo:band dbr:The_Ramones ;
            dbo:birthDate ""1947-04-21""^^xsd:date .
    OPTIONAL { ?person dbo:birthName ?birthName . }
}
```",9,15,10,3,3,3,3,71,0,0,1,0,0.0,0
826,58,test,"Give me the predecessor of the parent of the child of Louis IV, Grand Duke of Hesse and spouse of Anna Magdalena Appel and successor of the child, that is a royalty, of Louis I, Grand Duke of Hesse.","SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/parent> <http://dbpedia.org/resource/Louis_IV,_Grand_Duke_of_Hesse> . ?result <http://dbpedia.org/ontology/successor> ?v2 . <http://dbpedia.org/resource/Louis_I,_Grand_Duke_of_Hesse> <http://dbpedia.org/ontology/child> ?v5 . ?v1 <http://dbpedia.org/ontology/parent> ?v2 . ?v5 <http://dbpedia.org/ontology/successor> ?result . <http://dbpedia.org/resource/Anna_Magdalena_Appel> <http://dbpedia.org/ontology/spouse> ?result . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?predecessor WHERE {
  # Step 1: Identify Louis IV, Grand Duke of Hesse
  ?louisIV a dbo:Monarch ;
           foaf:name ""Louis IV, Grand Duke of Hesse""@en .

  # Step 2: Find his child
  ?child dbo:parent ?louisIV .

  # Step 3: Parent is Louis IV himself

  # Step 4: Predecessor of Louis IV
  ?predecessor dbo:successor ?louisIV .

  # Step 5: Successor of the child (e.g., Ludwig IV)
  ?successorChild dbo:parent ?child ;
                  dbo:successor ?child .

  # Step 6: Child of Louis I, Grand Duke of Hesse
  ?louisI a dbo:Monarch ;
          foaf:name ""Louis I, Grand Duke of Hesse""@en .
  ?royalChild dbo:parent ?louisI .

  # Step 7: Predecessor of this royal child
  ?predecessorRoyalChild dbo:successor ?royalChild .

  FILTER(?predecessor = ?predecessorRoyalChild)
}
```",6,7,7,3,3,3,3,71,0,0,1,0,0.0,0
976,67,test,"Give me the office of the person born as the birth name of Naci Bostancı and office of Mustafa Şentop and office of the mayor, that is a politician and an office holder and Turkish, of the reference, that is an organisation and a political party and Turkish, to Millet İttifakı.","SELECT ?result WHERE { <http://dbpedia.org/resource/Naci_Bostancı> <http://dbpedia.org/property/birthName> ?v4 . <http://dbpedia.org/resource/Mustafa_Şentop> <http://dbpedia.org/property/office> ?result . ?v0 <http://dbpedia.org/property/office> ?result . ?v1 <http://xmlns.com/foaf/0.1/name> ""Millet İttifakı""@en . ?v5 <http://dbpedia.org/property/office> ?result . ?v1 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Turkey>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/PoliticalParty>. ?v0 <http://dbpedia.org/property/birthName> ?v4 . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v1 <http://dbpedia.org/property/leader> ?v5 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v5 <http://dbpedia.org/ontology/nationality> <http://dbpedia.org/resource/Turkey>. }","```sparql
# Query for Naci Bostancı's birth name and office
SELECT ?birthName ?office WHERE {
  ?person rdfs:label ""Naci Bostancı""@en .
  ?person foaf:name ?birthName .
  OPTIONAL { ?person dbo:positionHeld ?position . ?position dbo:office ?office }
}

# Query for Mustafa Şentop's office
SELECT ?office WHERE {
  ?person rdfs:label ""Mustafa Şentop""@en .
  ?person dbo:positionHeld ?position .
  ?position dbo:office ?office
}

# Query for a mayor who is a politician and associated with Millet İttifakı
SELECT DISTINCT ?mayorName ?office WHERE {
  ?mayor rdfs:label ?mayorLabel .
  FILTER(CONTAINS(LCASE(?mayorLabel), ""mayor"") && CONTAINS(LCASE(?mayorLabel), ""politician""))
  ?mayor dbo:nationality dbr:Turkey .
  ?party rdfs:label ""Millet İttifakı""@tr .
  ?party rdf:type dbo:PoliticalParty .
  ?mayor dbo:memberOf ?party
  OPTIONAL { ?mayor dbo:positionHeld ?position . ?position dbo:office ?office }
}

# Query to confirm Millet İttifakı as a political party in Turkey
SELECT ?label WHERE {
  ?entity rdfs:label ""Millet İttifakı""@tr .
  ?entity rdf:type dbo:PoliticalParty .
  ?entity dbo:nationality dbr:Turkey
}
```",7,13,8,3,3,3,3,71,0,0,1,0,0.0,0
445,59,test,"Give me the death place of the awardee of the establishment of 1820-03-10 and entity in the residence, that is a country, of the resident, that is an athlete, of Great Britain.","SELECT ?result WHERE { ?v0 <http://dbpedia.org/ontology/foundingDate> ""1820-03-10""^^<http://www.w3.org/2001/XMLSchema#date> . ?v3 <http://dbpedia.org/property/residence> <http://dbpedia.org/resource/Great_Britain> . ?result <http://dbpedia.org/ontology/location> ?v2 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Athlete>. ?v3 <http://dbpedia.org/property/residence> ?v2 . ?v5 <http://dbpedia.org/ontology/deathPlace> ?result . ?v5 <http://dbpedia.org/property/awards> ?v0 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?deathPlace WHERE {
  # Find an institution or award established on March 10, 1820
  ?award dbo:foundingDate ""1820-03-10""^^xsd:date ;
         dbo:recipient ?awardee .

  # Get the death place of the awardee
  ?awardee dbo:deathPlace ?deathPlace .

  # Find athletes from Great Britain and their countries of residence
  ?athlete dbo:nationality dbr:United_Kingdom ;
           dbo:residenceCountry ?country .

  # Ensure the death place is in the athlete's country of residence
  ?deathPlace dbo:country ?country .
}
```",6,8,7,3,2,3,3,71,0,0,1,0,0.0,0
888,18,test,"Give me the awardee of the award of Oleksandr Syrskyi and commander in the force, that is a societal event and an event, of the military force of War in Donbas (2014–2022).",SELECT ?result WHERE { ?v2 <http://dbpedia.org/ontology/commander> ?v1 . ?v2 <http://dbpedia.org/ontology/commander> ?result . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?result <http://dbpedia.org/property/awards> ?v3 . <http://dbpedia.org/resource/Oleksandr_Syrskyi> <http://dbpedia.org/property/awards> ?v3 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?v1 <http://dbpedia.org/ontology/battle> <http://dbpedia.org/resource/War_in_Donbas_(2014–2022)> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?award WHERE {
  ?person rdfs:label ""Oleksandr Syrskyi""@en .
  ?person dbo:occupation ?occupation .
  FILTER(CONTAINS(LCASE(?occupation), ""commander"") || CONTAINS(LCASE(?occupation), ""military""))
  
  OPTIONAL { ?person dbo:awards ?award . }
  
  ?award dbo:event ?event .
  ?event rdfs:label ?eventLabel .
  FILTER(CONTAINS(LCASE(?eventLabel), ""war in donbas"") && 
         (CONTAINS(LCASE(?eventLabel), ""societal"") || CONTAINS(LCASE(?eventLabel), ""military"")))
}
```",5,7,6,3,2,3,2,20,0,0,2,0,0.0,0
443,24,test,"Give me the birthplace of the person born, that is a musical artist and an artist, on 1949-11-20 and birthplace of the work of yes.","SELECT ?result WHERE { ?v2 <http://dbpedia.org/ontology/birthPlace> ?result . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?v1 <http://dbpedia.org/ontology/birthPlace> ?result . ?v2 <http://dbpedia.org/ontology/birthDate> ""1949-11-20""^^<http://www.w3.org/2001/XMLSchema#date> . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. ?v1 <http://dbpedia.org/property/author> ""yes""@en . }","```sparql
# Query 1: Find the birthplace of a person who is both a musical artist and an artist, born on November 20, 1949.
SELECT ?birthPlace WHERE {
  ?person dbo:birthDate ""1949-11-20""^^xsd:date ;
          dbo:occupation dbr_Musician ;
          dbo:occupation dbr_Artist .
  ?person foaf:bornIn ?birthPlace .
}

# Query 2: Find the birthplace or origin of the band Yes.
SELECT ?origin WHERE {
  ?band rdfs:label ""Yes""@en ;
        dbo:foundingLocation ?origin .
}
```",4,6,5,2,2,2,3,28,0,0,2,0,0.0,0
341,9,test,"Give me the band member of the awardee of List of awards and nominations received by Beyoncé and writer of the work, that is a work and an album, of Serrano.","SELECT ?result WHERE { ?v3 <http://dbpedia.org/property/writer> ?result . ?result <http://dbpedia.org/ontology/associatedMusicalArtist> ?v1 . ?v1 <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/List_of_awards_and_nominations_received_by_Beyoncé> . ?v3 <http://dbpedia.org/property/writer> ""Serrano""@en . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Album>. }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?bandMember WHERE {
  # Find Beyoncé's awards
  VALUES ?beyonce { dbr:Beyoncé }
  
  ?award dbo:recipient ?beyonce .
  
  # Find works associated with these awards
  ?work dbo:artist ?beyonce ;
        a dbo:Album .

  # Find Serrano's work that is an album
  VALUES ?serrano { dbr:Serrano_(musician) }
  
  ?albumWork dbo:writer ?serrano ;
             a dbo:Album .
  
  # Find band members for Beyoncé's works
  ?workMember dbo:member ?bandMember ;
              dbo:group ?beyonceGroup .
  
  # Find band members for Serrano's work
  ?albumWorkMember dbo:member ?bandMember ;
                   dbo:group ?serranoGroup .

}
```",4,6,5,2,2,2,2,9,0,0,1,0,0.0,0
465,64,test,"Give me the spouse of Archduchess Barbara of Austria and successor of the child of the parent of Ercole II d'Este, Duke of Ferrara and successor of the child, that is a royalty, of the parent of Charles Orlando, Dauphin of France.","SELECT ?result WHERE { ?v2 <http://dbpedia.org/property/father> ?v3 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. <http://dbpedia.org/resource/Ercole_II_d'Este,_Duke_of_Ferrara> <http://dbpedia.org/ontology/parent> ?v3 . ?v0 <http://dbpedia.org/ontology/child> ?v1 . ?v2 <http://dbpedia.org/ontology/successor> ?result . <http://dbpedia.org/resource/Charles_Orlando,_Dauphin_of_France> <http://dbpedia.org/ontology/parent> ?v0 . ?v1 <http://dbpedia.org/ontology/successor> ?result . ?result <http://dbpedia.org/ontology/spouse> <http://dbpedia.org/resource/Archduchess_Barbara_of_Austria> . }","```sparql
# Step 1: Find Ercole II d'Este's parent
SELECT ?parent WHERE {
  wd:Q123456 wdt:P31/wdt:P279* wd:Q11111; # Ercole II d'Este and his type (Duke)
  wdt:P22 ?parent. # Parent of Ercole II d'Este
}

# Step 2: Find the successor of Alfonso I d'Este's child
SELECT ?successor WHERE {
  ?child wdt:P31/wdt:P279* wd:Q11111; # Child of Alfonso I d'Este and his type (Duke)
  wdt:P36 ?place. # Place governed by the child
  ?successor wdt:P136 ?child; # Successor of the child
  wdt:P31/wdt:P279* wd:Q11111. # Type of successor (Duke)
}

# Step 3: Find Charles Orlando's parent
SELECT ?parent WHERE {
  wd:Q654321 wdt:P31/wdt:P279* wd:Q22222; # Charles Orlando and his type (Dauphin)
  wdt:P22 ?parent. # Parent of Charles Orlando
}

# Step 4: Find the successor of Louis XIII's child
SELECT ?successor WHERE {
  ?child wdt:P31/wdt:P279* wd:Q22222; # Child of Louis XIII and his type (King)
  wdt:P36 wd:Q12345. # Place governed by the child (France)
  ?successor wdt:P136 ?child; # Successor of the child
  wdt:P31/wdt:P279* wd:Q22222. # Type of successor (King)
}

# Step 5: Find Archduchess Barbara's spouse
SELECT ?spouse WHERE {
  wd:Q987654 wdt:P26 ?spouse. # Spouse of Archduchess Barbara
}

# Final query to get the answer
SELECT ?spouse WHERE {
  wd:Q987654 wdt:P26 ?spouse.
}
```",7,8,8,3,3,3,3,71,0,0,1,0,0.0,0
926,62,test,Give me the father of the father of the spouse of Neşerek Kadın and child of Ahmed III and successor of the child of the spouse of Şermi Kadın.,SELECT ?result WHERE { ?v5 <http://dbpedia.org/property/father> ?v1 . ?v2 <http://dbpedia.org/property/father> ?result . <http://dbpedia.org/resource/Ahmed_III> <http://dbpedia.org/ontology/child> ?result . ?v5 <http://dbpedia.org/ontology/successor> ?result . <http://dbpedia.org/resource/Neşerek_Kadın> <http://dbpedia.org/ontology/spouse> ?v4 . ?v4 <http://dbpedia.org/property/father> ?v2 . ?v1 <http://dbpedia.org/ontology/spouse> <http://dbpedia.org/resource/Şermi_Kadın> . },"```sparql
# Step 1: Find Neşerek Kadın's spouse
SELECT ?spouse WHERE {
  ?neşerek_kadin dbo:spouse ?spouse .
  FILTER (str(?neşerek_kadin) = ""Neşerek_Kadın"")
}

# Step 2: Find the father of Neşerek Kadın's spouse
SELECT ?father WHERE {
  ?spouse dbo:father ?father .
  # Use the result from Step 1 for ?spouse
}

# Step 3: Identify Ahmed III's child
SELECT ?child WHERE {
  ?ahmed_iii dbo:child ?child .
  FILTER (str(?ahmed_iii) = ""Ahmed_III"")
}

# Step 4: Determine the successor of Ahmed III's child
SELECT ?successor WHERE {
  ?child dbo:succeededBy ?successor .
  # Use the result from Step 3 for ?child
}

# Step 5: Find Şermi Kadın's spouse
SELECT ?spouse2 WHERE {
  ?şermi_kadin dbo:spouse ?spouse2 .
  FILTER (str(?şermi_kadin) = ""Şermi_Kadın"")
}

# Step 6: Find the child of Şermi Kadın's spouse
SELECT ?child2 WHERE {
  ?spouse2 dbo:child ?child2 .
  # Use the result from Step 5 for ?spouse2
}

# Step 7: Combine information to find the father of the father of Neşerek Kadın's spouse and successor of Şermi Kadın's child
SELECT ?finalPerson WHERE {
  ?father dbo:father ?finalPerson .
  ?child2 dbo:succeededBy ?finalPerson .
  # Use results from Step 2 for ?father and Step 6 for ?child2
}
```",7,7,8,3,3,3,3,71,0,0,1,0,0.0,0
83,8,test,"Give me the player in Greg Boehme and player in the person born, that is an athlete, on 1991-11-19.","SELECT ?result WHERE { ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Athlete>. ?v2 <http://dbpedia.org/ontology/team> ?result . <http://dbpedia.org/resource/Greg_Boehme> <http://dbpedia.org/ontology/team> ?result . ?v2 <http://dbpedia.org/ontology/birthDate> ""1991-11-19""^^<http://www.w3.org/2001/XMLSchema#date> . }","```sparql
# Query to find a player associated with Greg Boehme
SELECT ?player WHERE {
  ?team dbo:member ?gregBoehme .
  ?gregBoehme foaf:name ""Greg Boehme"" .
  ?team dbo:member ?player .
  FILTER NOT EXISTS { ?player foaf:name ""Greg Boehme"" }
}

UNION

# Query to find an athlete born on 1991-11-19
SELECT ?athlete WHERE {
  ?athlete dbo:birthDate ?date .
  ?athlete rdf:type dbo:Athlete .
  FILTER (STR(?date) = ""1991-11-19"")
}
```",3,4,4,2,2,2,2,9,0,0,1,0,0.0,0
102,19,test,"Give me the native of the residence, that is English and a settlement, of the resident, that is an athlete, of Dewsbury and manager of the player in Ellie Roebuck.",SELECT ?result WHERE { <http://dbpedia.org/resource/Ellie_Roebuck> <http://dbpedia.org/ontology/team> ?v2 . ?v0 <http://dbpedia.org/property/residence> ?v4 . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. ?v0 <http://dbpedia.org/ontology/residence> <http://dbpedia.org/resource/Dewsbury> . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Athlete>. ?v4 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/United_Kingdom>. ?v2 <http://dbpedia.org/ontology/manager> ?result . ?result <http://dbpedia.org/ontology/birthPlace> ?v4 . },"```sparql
SELECT ?nativeLanguage WHERE {
  ?manager dbo:employee ?roebuck .
  ?roebuck foaf:name ""Ellie Roebuck"" .
  
  ?manager dbo:residenceLocation ?residence .
  ?residence a dbo:Settlement ;
             dbo:nativeLanguage ?nativeLanguage .

  FILTER (langMatches(lang(?nativeLanguage), ""en""))
}
```",5,8,6,3,2,3,2,20,0,0,1,0,0.0,0
273,19,test,Give me the parent of the alumnus of the reference to Università degli Studi di Torino and spouse of the child of Giovanni Agnelli.,"SELECT ?result WHERE { ?v4 <http://dbpedia.org/ontology/parent> ?result . ?v0 <http://xmlns.com/foaf/0.1/name> ""Università degli Studi di Torino""@en . <http://dbpedia.org/resource/Giovanni_Agnelli> <http://dbpedia.org/ontology/child> ?v2 . ?v4 <http://dbpedia.org/ontology/almaMater> ?v0 . ?result <http://dbpedia.org/ontology/spouse> ?v2 . }","```sparql
SELECT ?parent WHERE {
  wd:Q123456 wdt:P69 wd:Q789012 . # John Elkann is an alumnus of Università degli Studi di Torino
  wd:Q789012 wdt:P26 wd:Q345678 .   # John Elkann's mother is Margherita Agnelli
  ?parent wdt:P40 wd:Q345678 .      # Find the parent of Margherita Agnelli
}
```

Note: The placeholders `wd:Q123456`, `wd:Q789012`, and `wd:Q345678` should be replaced with the actual DBpedia identifiers for John Elkann, Università degli Studi di Torino, and Margherita Agnelli respectively. You would need to look up these identifiers in DBpedia or a similar resource.",5,5,6,3,2,3,2,20,0,0,1,0,0.0,0
874,18,test,"Give me the band of the band member of The Jones Gang and band of the writer, that is an artist and a musical artist, of the work, that is a work, of Horace Andy.",SELECT ?result WHERE { ?v3 <http://dbpedia.org/ontology/associatedMusicalArtist> <http://dbpedia.org/resource/The_Jones_Gang> . ?result <http://dbpedia.org/ontology/bandMember> ?v3 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. ?v1 <http://dbpedia.org/property/writer> <http://dbpedia.org/resource/Horace_Andy> . ?v1 <http://dbpedia.org/property/writer> ?v2 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?result <http://dbpedia.org/ontology/bandMember> ?v2 . },"```sparql
# Step 1: Find members of The Jones Gang
SELECT ?member WHERE {
  ?band rdf:type dbo:MusicalBand ;
        rdfs:label ""The Jones Gang""@en .
  ?band dbo:bandMember ?member .
}

# Step 2: Find the band associated with a member of The Jones Gang
SELECT DISTINCT ?associatedBand WHERE {
  ?member dbo:bandMember ?band .
  ?band rdf:type dbo:MusicalBand ;
        rdfs:label ""The Jones Gang""@en .
  OPTIONAL { ?member dbo:band ?associatedBand . }
}

# Step 3: Find works by Horace Andy
SELECT DISTINCT ?work WHERE {
  ?artist rdf:type dbo:MusicArtist ;
          rdfs:label ""Horace Andy""@en .
  ?artist dbo:performerOf ?performance .
  ?performance dbo:workPerformed ?work .
}

# Step 4: Identify the writer of a work by Horace Andy
SELECT DISTINCT ?writer WHERE {
  ?work dbo:creator ?writer .
  FILTER EXISTS { 
    ?writer rdf:type dbo:Artist ;
            dbo:musicalArtist true .
  }
}

# Step 5: Find the band associated with this writer
SELECT DISTINCT ?band WHERE {
  ?writer rdf:type dbo:Artist ;
          dbo:musicalArtist true .
  ?writer dbo:bandMember ?band .
}
```",5,8,6,3,2,3,2,20,0,0,1,0,0.0,0
456,59,test,"Give me the spouse of the actor of the movie, that is a work and a television show, with Ross Newton and professional in the alter ego of the reference, that is a fictional character, to Lamont Cranston (radio, film and television).","SELECT ?result WHERE { ?v3 <http://dbpedia.org/property/starring> ?v2 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/TelevisionShow>. ?v3 <http://dbpedia.org/property/starring> <http://dbpedia.org/resource/Ross_Newton> . ?v0 <http://dbpedia.org/property/alterEgo> ?v5 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/FictionalCharacter>. ?result <http://dbpedia.org/property/occupation> ?v5 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?v2 <http://dbpedia.org/ontology/spouse> ?result . ?v0 <http://xmlns.com/foaf/0.1/name> ""Lamont Cranston (radio, film and television)""@en . }","```sparql
# Step 1: Find a movie with Ross Newton that also has a TV show adaptation
SELECT ?movie WHERE {
  ?movie dbo:starringRossNewton dbp:name ""Ross Newton""@en .
  ?movie dbo:adaptationOf ?tvShow .
}

# Assuming we find the correct movie, let's say it is identified as ?movie

# Step 2: Find the main actor of that movie
SELECT ?actor WHERE {
  ?movie dbo:starring ?actor .
  FILTER NOT EXISTS { ?movie dbo:starringRossNewton ?x }
}

# Assuming we identify the actor as ?actor

# Step 3: Retrieve the spouse of this actor
SELECT ?spouse WHERE {
  ?actor dbo:spouse ?spouse .
}
```",6,9,7,3,2,3,3,71,0,0,2,0,0.0,0
329,28,test,"Give me the entity in the region, that is a country, of Western European Time and entity in the birthplace, that is an organisation and a country, of Robert Bates (loyalist) and birthplace of the author of The Tailor and Ansty.",SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/birthPlace> ?result . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?result <http://dbpedia.org/ontology/country> ?v5 . ?result <http://dbpedia.org/ontology/country> ?v3 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. ?v3 <http://dbpedia.org/property/timeZone> <http://dbpedia.org/resource/Western_European_Time> . <http://dbpedia.org/resource/The_Tailor_and_Ansty> <http://dbpedia.org/property/author> ?v1 . <http://dbpedia.org/resource/Robert_Bates_(loyalist)> <http://dbpedia.org/ontology/birthPlace> ?v5 . },"```sparql
# Query 1: Entity in the region of Western European Time that is a country
SELECT ?country WHERE {
  ?timeZone dcterms:isPartOf ?region .
  ?timeZone rdfs:label ""Western European Time""@en .
  ?region dbo:country ?country .
  ?country rdf:type dbo:Country .
}

# Query 2: Entity in the birthplace of Robert Bates (loyalist) that is an organization and a country
SELECT ?birthPlace WHERE {
  dbpedia:Robert_Bates_(loyalist) dbo:birthPlace ?birthPlace .
  ?birthPlace rdf:type dbo:Organisation ;
              rdf:type dbo:Country .
}

# Query 3: Birthplace of the author of ""The Tailor and Ansty""
SELECT ?authorBirthPlace WHERE {
  ?book dbo:author ?author .
  ?book rdfs:label ""The Tailor and Ansty""@en .
  ?author dbo:birthPlace ?authorBirthPlace .
}
```",6,9,7,2,3,2,3,28,0,0,1,0,0.0,0
892,67,test,"Give me the entity in the administration, that is Italian and a region and a settlement and an administrative region, of the party, that is a political party and an organisation, of Andrea Cozzolino and landmark at elevation of the award of the member of E-girls and entity in Italy.",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Italy> . <http://dbpedia.org/resource/E-girls> <http://dbpedia.org/ontology/bandMember> ?v1 . ?v0 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Italy>. <http://dbpedia.org/resource/Andrea_Cozzolino> <http://dbpedia.org/ontology/party> ?v4 . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/PoliticalParty>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Region>. ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?v0 <http://dbpedia.org/property/leaderParty> ?v4 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/AdministrativeRegion>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. ?result <http://dbpedia.org/ontology/province> ?v0 . ?result <http://dbpedia.org/ontology/elevation> ?v5 . ?v1 <http://dbpedia.org/property/awards> ?v5 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT DISTINCT ?region WHERE {
  # Step 1: Identify Andrea Cozzolino's party
  ?party a dbo:PoliticalParty ;
         dbo:member dbr:Andrea_Cozzolino .

  # Step 2: Find the Italian region that is also a settlement and administrative region
  ?region a dbo:Region, dbo:Settlement, dbo:AdministrativeRegion ;
          dbo:country dbr:Italy ;
          dbo:administrativeRegionOf ?party .

  # Step 3: Identify a landmark at elevation within this region
  ?landmark dbo:elevation ?elevation ;
            dbo:location ?region .

  # Step 4: Connect the landmark to an award received by an E-girls member
  ?award dbo:recipient ?member .
  ?member dbo:memberOf dbr:E-girls ;
          dbo:awarded ?landmark .

  # Ensure all entities are in Italy
  FILTER EXISTS { ?region dbo:country dbr:Italy }
}
```",7,13,8,3,3,3,3,71,0,0,2,0,0.0,0
582,68,test,"Give me the player in the father, that is an athlete and a soccer manager and a sports manager, of the child of Kazuaki Nagasawa and reference to the residence of the reference, that is a scientist, to Hirotaka Sugawara and figure known as the nickname of Japan national football team.","SELECT ?result WHERE { ?v0 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Kazuaki_Nagasawa> . ?result <http://xmlns.com/foaf/0.1/name> ?v4 . <http://dbpedia.org/resource/Japan_national_football_team> <http://dbpedia.org/property/nickname> ?v3 . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Scientist>. ?v7 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerManager>. ?result <http://dbpedia.org/property/nickname> ?v3 . ?v7 <http://dbpedia.org/ontology/team> ?result . ?v0 <http://dbpedia.org/property/father> ?v7 . ?v5 <http://dbpedia.org/property/residence> ?v4 . ?v5 <http://xmlns.com/foaf/0.1/name> ""Hirotaka Sugawara""@en . ?v7 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsManager>. ?v7 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Athlete>. }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?player WHERE {
    # Step 1: Identify Kazuaki Nagasawa's child
    ?child dbo:parent dbr:Kazuaki_Nagasawa .
    
    # Step 2: Find the father of that child
    ?father dbo:spouse ?mother .
    ?child dbo:parent ?father .
    
    # Step 3: Check if this person is an athlete and a soccer manager and a sports manager
    ?father rdf:type dbo:Athlete ;
            rdf:type dbo:SoccerManager ;
            rdf:type dbo:SportsManager .
    
    # Step 4: Identify Hirotaka Sugawara's residence reference (scientist)
    ?residence dbr:Hirotaka_Sugawara ;
               dbo:fieldOfStudy dbr:Science .
    
    # Step 5: Find the nickname of the Japan national football team
    ?nickname rdfs:label ""Bashamichi""@en ;
              dbo:nickname dbr:Japan_national_football_team .
    
    # Step 6: Combine all these elements
    ?player dbo:residence ?residence ;
            dbo:nickname ?nickname .
}
```",8,12,9,3,3,3,3,71,0,0,1,0,0.0,0
445,68,test,"Give me the entity in the award of George H. Cameron and entity in the residence, that is a country, of the resident, that is an athlete, of Great Britain and death place of the awardee of the establishment of 1820-03-10.","SELECT ?result WHERE { ?v7 <http://dbpedia.org/ontology/deathPlace> ?result . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. ?v0 <http://dbpedia.org/ontology/foundingDate> ""1820-03-10""^^<http://www.w3.org/2001/XMLSchema#date> . ?v7 <http://dbpedia.org/property/awards> ?v0 . <http://dbpedia.org/resource/George_H._Cameron> <http://dbpedia.org/property/awards> ?v3 . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Athlete>. ?result <http://dbpedia.org/ontology/location> ?v4 . ?v5 <http://dbpedia.org/property/residence> ?v4 . ?result <http://dbpedia.org/ontology/country> ?v3 . ?v5 <http://dbpedia.org/property/residence> <http://dbpedia.org/resource/Great_Britain> . }","```sparql
# Step 1: Find George H. Cameron's awards
SELECT ?award WHERE {
    ?person dbo:name ""George H. Cameron""@en .
    ?person dbo:awardsReceived ?award .
}

# Step 2: Find athletes from Great Britain and their countries of residence
SELECT DISTINCT ?country WHERE {
    ?athlete dbo:nationality dbr:United_Kingdom ;
             a dbo:Athlete ;
             dbo:residenceLocation ?location .
    ?location rdf:type dbo:Country .
    BIND(?location AS ?country)
}

# Step 3: Find the award established on 1820-03-10 and its awardees' death places
SELECT DISTINCT ?deathPlace WHERE {
    ?award dbo:dateEstablished ""1820-03-10""^^xsd:date ;
           dbo:awardee ?person .
    ?person dbo:deathPlace ?deathPlace .
}

# Step 4: Combine the results to find matching entities
SELECT DISTINCT ?entityInAward ?country WHERE {
    # George H. Cameron's award entity
    ?award1 dbo:name ?entityInAward .
    ?person1 dbo:name ""George H. Cameron""@en ;
             dbo:awardsReceived ?award1 .

    # Athlete's country of residence
    ?athlete dbo:nationality dbr:United_Kingdom ;
             a dbo:Athlete ;
             dbo:residenceLocation ?location .
    ?location rdf:type dbo:Country .
    BIND(?location AS ?country)

    # Awardee's death place from the award established on 1820-03-10
    ?award2 dbo:dateEstablished ""1820-03-10""^^xsd:date ;
            dbo:awardee ?person2 .
    ?person2 dbo:deathPlace ?location1 .
    FILTER(?location1 = ?country)
}
```",8,10,9,3,3,3,3,71,0,0,1,0,0.0,0
573,66,test,"Give me the person decedent at the administration, that is a region, of Charlie Baker and parent of the author, that is a politician and an office holder, of the work of John Quincy Adams and person decedent at the residence, that is a settlement, of William J. Phelan.","SELECT ?result WHERE { ?v1 <http://dbpedia.org/property/author> ?v2 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v6 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. ?result <http://dbpedia.org/ontology/deathPlace> ?v3 . <http://dbpedia.org/resource/William_J._Phelan> <http://dbpedia.org/property/residence> ?v6 . ?v3 <http://dbpedia.org/property/governor> ""Charlie Baker""@en . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v1 <http://dbpedia.org/property/author> <http://dbpedia.org/resource/John_Quincy_Adams> . ?v2 <http://dbpedia.org/ontology/parent> ?result . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Region>. ?result <http://dbpedia.org/ontology/deathPlace> ?v6 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT DISTINCT ?ancestor WHERE {
  # Charlie Baker's administrative region
  ?charlieBakerRole dbo:positionTitle ""Governor""@en .
  ?charlieBakerRole dbo:administrativeRegion ?region .

  # John Quincy Adams' work and political role
  ?work dbo:author dbr:John_Quincy_Adams ;
        dbo:genre ""Political"" .
  ?adamsRole dbo:positionTitle ?title ;
             dbo:officeHolder dbr:John_Quincy_Adams .

  # William J. Phelan's residence settlement
  ?phelanResidence dbo:settlement dbr:William_J._Phelan .

  # Ancestor at the region of Charlie Baker
  ?ancestor dbo:residence ?region .
  
  # Parent of John Quincy Adams' author (who is a politician)
  ?adamsAuthor foaf:name ""John Quincy Adams""@en ;
               dbo:parent ?ancestor .

  # Person decedent at William J. Phelan's residence
  ?ancestor dbo:settlement ?phelanResidence .
}
```",7,11,8,3,3,3,3,71,0,0,2,0,0.0,0
773,57,test,"Give me the spouse of Louis the German and parent of the child, that is a royalty, of Louis the German and parent of the successor of the child, that is a royalty, of Louis the Pious.",SELECT ?result WHERE { ?v3 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Louis_the_German> . <http://dbpedia.org/resource/Louis_the_Pious> <http://dbpedia.org/ontology/child> ?v0 . ?v0 <http://dbpedia.org/ontology/successor> ?v5 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v3 <http://dbpedia.org/ontology/parent> ?result . <http://dbpedia.org/resource/Louis_the_German> <http://dbpedia.org/ontology/spouse> ?result . ?result <http://dbpedia.org/ontology/child> ?v5 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?spouse WHERE {
  dbr:Louis_the_German dbo:spouse ?spouse .
  
  OPTIONAL { 
    ?child dbo:parent dbr:Louis_the_German ;
           a dbo:Monarch .
    
    ?successor dbo:predecessor ?child ;
               a dbo:Monarch .
  }
}
```",6,8,7,3,3,3,3,71,1,0,0,1.0,1.0,1.0
373,8,test,Give me the professional in the profession of Beto Guedes and writer of 2300 Jackson Street (song).,SELECT ?result WHERE { ?result <http://dbpedia.org/property/occupation> ?v1 . <http://dbpedia.org/resource/2300_Jackson_Street_(song)> <http://dbpedia.org/property/writer> ?result . <http://dbpedia.org/resource/Beto_Guedes> <http://dbpedia.org/property/occupation> ?v1 . },"```sparql
# Query to find Beto Guedes' profession
SELECT ?profession WHERE {
  dbpedia:Betinho_Guedes dbo:occupation ?profession .
}

# Query to find the writer of ""2300 Jackson Street""
SELECT ?writer WHERE {
  dbpedia:""2300_Jackson_Street"" dbo:composer ?writer .
}
```",3,3,4,2,2,2,2,9,0,0,1,0,0.0,0
554,19,test,"Give me the leader of the administration of Francisco da Costa Gomes and leader of the birth place of the band, that is an artist, of Rita Redshoes.",SELECT ?result WHERE { ?v2 <http://dbpedia.org/property/leader> <http://dbpedia.org/resource/Francisco_da_Costa_Gomes> . <http://dbpedia.org/resource/Rita_Redshoes> <http://dbpedia.org/ontology/associatedMusicalArtist> ?v0 . ?v4 <http://dbpedia.org/property/leader> ?result . ?v0 <http://dbpedia.org/ontology/birthPlace> ?v4 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. ?v2 <http://dbpedia.org/property/leader> ?result . },"```sparql
# Query to find the Prime Minister during Francisco da Costa Gomes' presidency
SELECT ?primeMinister WHERE {
  ?presidency dbo:startDate ?startDate .
  ?presidency dbo:endDate ?endDate .
  ?presidency dbo:headOfState dbr:Francisco_da_Costa_Gomes .
  ?presidency dbo:headOfGovernment ?primeMinister .
  FILTER (?startDate <= ""1976-07-30""^^xsd:date && ?endDate >= ""1974-09-30""^^xsd:date)
}

# Query to find the birthplace of Rita Redshoes
SELECT ?birthPlace WHERE {
  dbr:Rita_Redshoes dbo:birthPlace ?birthPlace .
}

# Query to find an artist from the birthplace of Rita Redshoes
SELECT DISTINCT ?artist WHERE {
  ?birthPlace dbo:wikiPageDisambiguates ?artist .
  FILTER EXISTS { ?artist rdf:type dbo:MusicalArtist }
}
```",5,6,6,3,2,3,2,20,0,0,3,0,0.0,0
216,68,test,"Give me the player in the coach, that is a soccer player and a sports manager and a soccer manager, of the player, that is an organisation and a sports club and a soccer club, in Džemal Berberović and team of the person born, that is a sports manager and a soccer manager and a soccer player, on 1983-12-20 and player in the coach of the reference, that is an organisation and a soccer club, to Croatia U21.","SELECT ?result WHERE { ?v7 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsManager>. ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerClub>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerManager>. ?v7 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerManager>. <http://dbpedia.org/resource/Džemal_Berberović> <http://dbpedia.org/ontology/team> ?v0 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?v5 <http://xmlns.com/foaf/0.1/name> ""Croatia U21""@en . ?v7 <http://dbpedia.org/ontology/team> ?result . ?v5 <http://dbpedia.org/ontology/coach> ?v4 . ?v3 <http://dbpedia.org/ontology/birthDate> ""1983-12-20""^^<http://www.w3.org/2001/XMLSchema#date> . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsClub>. ?v0 <http://dbpedia.org/ontology/coach> ?v7 . ?result <http://dbpedia.org/ontology/coach> ?v3 . ?v4 <http://dbpedia.org/ontology/team> ?result . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsManager>. ?v7 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerPlayer>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerPlayer>. ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerClub>. }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?coach WHERE {
  # Identify Džemal Berberović based on birth date and roles
  ?person a dbo:SoccerPlayer ;
          dbo:sport dbr:Soccer ;
          dbo:birthDate ""1983-12-20""^^xsd:date ;
          dbp:nationality dbr:Croatia .
  
  # Find the organization associated with Džemal Berberović
  ?organization dbo:type dbr:SportsClub, dbr:SoccerClub ;
                dbo:member ?person .

  # Determine the coach of this organization who is a soccer player, sports manager, and soccer manager
  ?coach dbo:position ""Coach"" ;
         dbo:sport dbr:Soccer ;
         dbo:occupation dbr:SportsManager, dbr:SoccerManager ;
         dbo:playerInTeam ?organization .

  # Ensure the coach is linked to Croatia U21
  ?reference dbo:type dbr:SportsClub, dbr:SoccerClub ;
             dbo:coach ?coach .
  
  FILTER EXISTS { ?reference rdfs:label ""Croatia national under-21 football team""@en }
}
```",8,19,9,3,3,3,3,71,0,0,1,0,0.0,0
36,24,test,Give me the person born in the birth year of Deanne Bray and person born as the birth name of Ayo Makun.,SELECT ?result WHERE { <http://dbpedia.org/resource/Ayo_Makun> <http://dbpedia.org/property/birthName> ?v1 . ?result <http://dbpedia.org/ontology/birthYear> ?v2 . <http://dbpedia.org/resource/Deanne_Bray> <http://dbpedia.org/ontology/birthYear> ?v2 . ?result <http://dbpedia.org/property/birthName> ?v1 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?person1 ?person2 WHERE {
  # Find Deanne Bray's birth year
  dbr:Deanne_Bray dbo:birthYear ?birthYear .
  
  # Find person born in that year
  ?person1 dbo:birthYear ?birthYear .

  # Find Ayo Makun's birth name
  dbr:Ayo_Makun dbo:birthName ?birthName .

  # Find person with that birth name
  ?person2 dbo:birthName ?birthName .
  
  FILTER(?person1 != dbr:Deanne_Bray)
  FILTER(?person2 != dbr:Ayo_Makun)
}
```",4,4,5,2,2,2,3,28,0,0,1,0,0.0,0
826,62,test,"Give me the successor of the child, that is a royalty, of the reference, that is a royalty, to Louis I and spouse of the child of the father of Anna Magdalena Appel and predecessor of Louis IV, Grand Duke of Hesse.","SELECT ?result WHERE { ?v0 <http://dbpedia.org/ontology/child> ?v6 . ?v0 <http://xmlns.com/foaf/0.1/name> ""Louis I""@en . ?v6 <http://dbpedia.org/ontology/successor> ?result . ?v3 <http://dbpedia.org/ontology/spouse> ?result . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?result <http://dbpedia.org/ontology/successor> <http://dbpedia.org/resource/Louis_IV,_Grand_Duke_of_Hesse> . ?v6 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v3 <http://dbpedia.org/property/father> ?v4 . <http://dbpedia.org/resource/Anna_Magdalena_Appel> <http://dbpedia.org/property/father> ?v4 . }","```sparql
SELECT ?successor WHERE {
  wd:Q1116 wdt:P26 ?spouse . # Louis I, Grand Duke of Hesse's spouse (Princess Wilhelmina of Baden)
  ?spouse wdt:P31 wd:Q5 . # Princess Wilhelmina is a human (royalty)
  ?spouse wdt:P22 ?child . # Child of Princess Wilhelmina
  ?child wdt:P136 ?profession . # Profession as royalty
  ?child wdt:P57 ?father . # Father of the child
  ?father rdfs:label ""Johann Georg Bach""@en . # Johann Georg Bach is the father of Anna Magdalena Appel

  wd:Q1116 wdt:P22 ?parent . # Louis I's parent (Louis III)
  ?parent wdt:P57 ?grandfather . # Grandfather of Louis IV
  ?grandfather rdfs:label ""Louis III, Grand Duke of Hesse""@en . # Louis III is the predecessor of Louis IV

  ?child wdt:P136 ?profession2 . # Profession as royalty
  ?child wdt:P36 ?position . # Position held (successor to Louis III)
  ?position rdfs:label ""Grand Duke of Hesse""@en . # Louis IV's position

  ?child wdt:P57 ?successorParent . # Parent of the successor
  ?successorParent wdt:P22 ?successor . # Successor of Louis IV
}
```",7,9,8,3,3,3,3,71,0,0,1,0,0.0,0
129,24,test,"Give me the associated musical artist of the actor, that is an organisation, of Dreamville Presents: Revenge and associated musical artist of the person born as Tahj Malik Chandler.","SELECT ?result WHERE { ?v0 <http://dbpedia.org/property/birthName> ""Tahj Malik Chandler""@en . <http://dbpedia.org/resource/Dreamville_Presents:_Revenge> <http://dbpedia.org/property/starring> ?v2 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?v0 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v2 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . }","```sparql
# Query for the musical artist organization associated with ""Dreamville Presents: Revenge""
SELECT ?artist WHERE {
  ?event dcterms:title ""Dreamville Presents: Revenge""@en .
  ?event dbo:associatedMusicalArtist ?artist .
  ?artist a dbo:RecordLabel .
}

UNION

# Query for the musical artist organization associated with Lil Wayne
SELECT ?artist WHERE {
  ?person foaf:name ""Lil Wayne""@en ;
          foaf:birthName ""Tahj Malik Chandler""@en .
  ?person dbo:musicalArtist ?artist .
  ?artist a dbo:RecordLabel .
}
```",4,5,5,2,2,2,3,28,0,0,1,0,0.0,0
865,59,test,"Give me the native of the residence, that is a country, of the person decedent at Patna and father of the child, that is a politician, of the spouse of Syeda Shahar Banu.",SELECT ?result WHERE { ?v3 <http://dbpedia.org/property/father> ?v2 . ?v1 <http://dbpedia.org/ontology/deathPlace> <http://dbpedia.org/resource/Patna> . ?v1 <http://dbpedia.org/property/residence> ?v0 . ?v3 <http://dbpedia.org/property/father> ?result . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. <http://dbpedia.org/resource/Syeda_Shahar_Banu> <http://dbpedia.org/ontology/spouse> ?v2 . ?result <http://dbpedia.org/ontology/birthPlace> ?v0 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?nativeCountry WHERE {
  # Step 1: Identify Syeda Shahar Banu's spouse
  ?spouse dbo:spouse dbr:Syeda_Shahar_Banu .
  
  # Step 2: Find their child who is a politician
  ?child dbo:parent ?spouse ;
         a dbo:Politician .

  # Step 3: Identify the father of that politician
  ?father dbo:child ?child .

  # Step 4: Check where this person died, specifically looking for Patna as the place of death
  ?deathEvent dbo:agent ?father ;
              dbo:place dbr:Patna .
  
  # Step 5: Determine the native country of the residence of this decedent
  ?residence dbo:nativeCountry ?nativeCountry .
}
```",6,8,7,3,2,3,3,71,0,0,1,0,0.0,0
445,71,test,"Give me the entity in the residence, that is a country, of the resident, that is an athlete, of Great Britain and death place of the awardee of the establishment of 1820-03-10 and entity in the award of the commander in Battle of Saint-Mihiel.","SELECT ?result WHERE { ?v1 <http://dbpedia.org/property/residence> <http://dbpedia.org/resource/Great_Britain> . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. ?v1 <http://dbpedia.org/property/residence> ?v2 . ?v5 <http://dbpedia.org/ontology/deathPlace> ?result . ?v7 <http://dbpedia.org/property/awards> ?v8 . ?v5 <http://dbpedia.org/property/awards> ?v4 . ?result <http://dbpedia.org/ontology/country> ?v8 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Athlete>. <http://dbpedia.org/resource/Battle_of_Saint-Mihiel> <http://dbpedia.org/ontology/commander> ?v7 . ?v4 <http://dbpedia.org/ontology/foundingDate> ""1820-03-10""^^<http://www.w3.org/2001/XMLSchema#date> . ?result <http://dbpedia.org/ontology/location> ?v2 . }","```sparql
# Part 1: Find country of residence of an athlete from Great Britain
SELECT ?country WHERE {
    ?athlete dbo:nationality dbr:United_Kingdom ;
             dbo:sport ?sport .
    ?residence dbo:resident ?athlete ;
               rdfs:label ?country .
}

UNION

# Part 2: Find death place of the awardee associated with establishment on 1820-03-10
SELECT ?deathPlace WHERE {
    ?event dbo:date ""1820-03-10""^^xsd:date ;
           dbo:awardee ?person .
    ?deathEvent dbo:place ?deathPlace ;
                dbo:agent ?person .
}

UNION

# Part 3: Find entity in the award of the commander in Battle of Saint-Mihiel
SELECT ?awardEntity WHERE {
    ?battle dbo:commander ?commander ;
            rdfs:label ""Battle of Saint-Mihiel"" .
    ?award dbo:recipient ?commander ;
           dbo:entity ?awardEntity .
}

# Find common entity across all parts
SELECT DISTINCT ?commonEntity WHERE {
    VALUES ?part1 { ?country }
    VALUES ?part2 { ?deathPlace }
    VALUES ?part3 { ?awardEntity }

    FILTER(?part1 = ?part2 && ?part2 = ?part3)
    BIND(?part1 AS ?commonEntity)
}
```",9,11,10,3,3,3,3,71,0,0,1,0,0.0,0
965,63,test,"Give me the parent of the child, that is a royalty, of Prince Louis of Battenberg and parent of the person born, that is a noble, as Prince George of Battenberg and spouse of the spouse of the parent of Louise Mountbatten.","SELECT ?result WHERE { ?v3 <http://dbpedia.org/ontology/spouse> ?v1 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Noble>. ?v0 <http://dbpedia.org/property/birthName> ""Prince George of Battenberg""@en . ?result <http://dbpedia.org/ontology/spouse> ?v1 . ?v5 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Prince_Louis_of_Battenberg> . ?v0 <http://dbpedia.org/ontology/parent> ?result . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v5 <http://dbpedia.org/ontology/parent> ?result . <http://dbpedia.org/resource/Louise_Mountbatten> <http://dbpedia.org/ontology/parent> ?v3 . }","```sparql
# Step 1: Find Prince Louis of Battenberg's child who is royalty
SELECT ?child WHERE {
  ?person dbo:spouse ?parent .
  ?parent foaf:name ""Prince Louis of Battenberg""@en .
  ?child dbo:parent ?parent .
  ?child dbo:title ?title .
  FILTER(CONTAINS(LCASE(?title), ""royalty""))
}

# Step 2: Find the parent of that child
SELECT ?grandParent WHERE {
  ?child dbo:parent ?grandParent .
  # Use the result from step 1 for ?child
}

# Step 3: Identify Prince George of Battenberg who is noble
SELECT ?noblePerson WHERE {
  ?person foaf:name ""Prince George of Battenberg""@en .
  ?person dbo:title ?title .
  FILTER(CONTAINS(LCASE(?title), ""noble""))
}

# Step 4: Determine the parent of this noble person
SELECT ?parentNoble WHERE {
  ?noblePerson dbo:parent ?parentNoble .
  # Use the result from step 3 for ?noblePerson
}

# Step 5: Find the spouse of that parent
SELECT ?spouseParentNoble WHERE {
  ?parentNoble dbo:spouse ?spouseParentNoble .
  # Use the result from step 4 for ?parentNoble
}

# Step 6: Identify the parent of Louise Mountbatten
SELECT ?louiseParent WHERE {
  ?person foaf:name ""Louise Mountbatten""@en .
  ?person dbo:parent ?louiseParent .
}

# Step 7: Determine the spouse of that parent
SELECT ?spouseLouiseParent WHERE {
  ?louiseParent dbo:spouse ?spouseLouiseParent .
  # Use the result from step 6 for ?louiseParent
}

# Final check to ensure both results match
SELECT DISTINCT ?grandParent WHERE {
  VALUES (?match) { (<result_from_step_2>) (<result_from_step_7>) }
  FILTER(?grandParent = ?match)
}
```",7,9,8,3,3,3,3,71,0,0,2,0,0.0,0
606,18,test,"Give me the figure known as the nickname of the figure known, that is a settlement, as Barb City and birthplace of the alumnus of University of Pennsylvania.","SELECT ?result WHERE { ?v3 <http://dbpedia.org/ontology/birthPlace> ?result . ?result <http://dbpedia.org/property/nickname> ?v2 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. ?v3 <http://dbpedia.org/ontology/almaMater> <http://dbpedia.org/resource/University_of_Pennsylvania> . ?v1 <http://dbpedia.org/property/nickname> ""Barb City""@en . ?v1 <http://dbpedia.org/property/nickname> ?v2 . }","```sparql
SELECT ?settlement ?alumnus WHERE {
  ?settlement dbo:commonName ""Barb City""@en .
  OPTIONAL { 
    ?person dbo:birthPlace ?settlement ;
            foaf:almaMater <http://dbpedia.org/resource/University_of_Pennsylvania> .
    BIND(?person AS ?alumnus)
  }
}
```",5,6,6,3,2,3,2,20,0,0,1,0,0.0,0
791,61,test,"Give me the predecessor of the child of the child, that is an office holder and a royalty, of Emperor Go-Shirakawa and father of the child, that is a royalty, of the father, that is a royalty and an office holder, of Emperor Antoku.",SELECT ?result WHERE { ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v3 <http://dbpedia.org/property/father> ?v1 . ?result <http://dbpedia.org/ontology/successor> ?v5 . <http://dbpedia.org/resource/Emperor_Antoku> <http://dbpedia.org/property/father> ?v1 . ?v0 <http://dbpedia.org/ontology/parent> <http://dbpedia.org/resource/Emperor_Go-Shirakawa> . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v3 <http://dbpedia.org/property/father> ?result . ?v5 <http://dbpedia.org/property/father> ?v0 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. },"```sparql
SELECT DISTINCT ?predecessor WHERE {
  # Step 1: Find a child of Emperor Go-Shirakawa who is both an office holder and royalty
  ?child dbo:parent dbr:Emperor_Go-Shirakawa ;
         rdf:type dbo:Royalty, dbo:OfficeHolder .

  # Step 2: Find the grandchild (child of the child)
  ?grandchild dbo:parent ?child .

  # Step 3: Identify the predecessor of this grandchild
  ?predecessor dbo:successor ?grandchild .

  # Step 4: Trace back to Emperor Antoku's lineage
  dbr:Emperor_Antoku dbo:father ?antokuFather .
  ?antokuFather rdf:type dbo:Royalty, dbo:OfficeHolder .
  
  # Find a child of the father who is royalty
  ?antokuChild dbo:parent ?antokuFather ;
               rdf:type dbo:Royalty .

  # Step 5: Find the father of this identified child
  ?fatherOfAntokuChild dbo:child ?antokuChild .

  FILTER(?predecessor = ?fatherOfAntokuChild)
}
```",6,11,7,3,2,3,3,71,0,0,1,0,0.0,0
987,61,test,"Give me the entity in the region, that is a country, of the time zone, that is a sports event, in Canicosa de la Sierra and birth place of the actor of the show, that is a film, with Emir Hadžihafizbegović.",SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/starring> <http://dbpedia.org/resource/Emir_Hadžihafizbegović> . ?v0 <http://dbpedia.org/property/timeZone> ?v3 . ?result <http://dbpedia.org/ontology/country> ?v0 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsEvent>. ?v4 <http://dbpedia.org/ontology/birthPlace> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Film>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. <http://dbpedia.org/resource/Canicosa_de_la_Sierra> <http://dbpedia.org/ontology/timeZone> ?v3 . ?v1 <http://dbpedia.org/property/starring> ?v4 . },"```sparql
# Step 1: Find a film/show featuring Emir Hadžihafizbegović
SELECT ?film WHERE {
  ?film dbo:starringEmirHadžihafizbegović dbp:name ""The Bridge""@en .
}

# Step 2: Find an actor from the identified film and their birthplace
SELECT DISTINCT ?actor ?birthPlace WHERE {
  ?film dbo:starring ?actor .
  ?actor dbo:birthPlace ?birthPlace .
  FILTER EXISTS { ?film dbp:name ""The Bridge""@en }
}

# Step 3: Identify the time zone for Canicosa de la Sierra and any sports event
SELECT DISTINCT ?timeZone ?sportsEvent WHERE {
  wd:Q123456 wdt:P421 ?timeZone . # Replace Q123456 with the actual entity ID for Canicosa de la Sierra
  ?timeZone dbo:sportsEvent ?sportsEvent .
}

# Step 4: Find a country in the region of the identified time zone (sports event)
SELECT DISTINCT ?country WHERE {
  ?sportsEvent dbo:location ?region .
  ?region wdt:P17 ?country .
}
```

Note: Replace `wd:Q123456` with the actual DBpedia entity ID for Canicosa de la Sierra. The query assumes that there is a direct relationship between time zones and sports events, which may need adjustment based on available data.",6,9,7,3,2,3,3,71,0,0,18,0,0.0,0
5,20,test,"Give me the birthplace of the person born, that is a politician, as the award of Renata Adler and entity in the award of the associated musical artist, that is a band, of Rubén Colón Tarrats.",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/country> ?v5 . <http://dbpedia.org/resource/Renata_Adler> <http://dbpedia.org/property/awards> ?v1 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v2 <http://dbpedia.org/property/birthName> ?v1 . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Band>. <http://dbpedia.org/resource/Rubén_Colón_Tarrats> <http://dbpedia.org/ontology/associatedMusicalArtist> ?v4 . ?v4 <http://dbpedia.org/property/awards> ?v5 . ?v2 <http://dbpedia.org/ontology/birthPlace> ?result . },"```sparql
# Step 1: Find the award associated with Renata Adler
SELECT ?award WHERE {
    wd:Q1234567 dbo:recipient ?entity .
}

# Step 2: Identify the entity that received this award and is a politician
SELECT DISTINCT ?politician WHERE {
    ?entity rdf:type dbo:Person ;
            dbo:occupation ""Politician"" .
}

# Step 3: Find the musical artist associated with Rubén Colón Tarrats and confirm it's a band
SELECT DISTINCT ?band WHERE {
    wd:Q9876543 dbo:associatedMusicalArtist ?artist .
    ?artist rdf:type dbo:Band .
}

# Step 4: Get the birthplace of the politician identified in step 2
SELECT DISTINCT ?birthPlace WHERE {
    ?politician dbo:birthPlace ?birthPlace .
}
```

Note: Replace `wd:Q1234567` with the actual DBpedia ID for Renata Adler and `wd:Q9876543` with the actual DBpedia ID for Rubén Colón Tarrats.",6,8,7,3,2,3,2,20,0,0,2,0,0.0,0
445,65,test,"Give me the death place of the awardee of the establishment of 1820-03-10 and entity in the residence, that is a country, of Anna Sharkey and entity in the award of George H. Cameron.","SELECT ?result WHERE { ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. <http://dbpedia.org/resource/Anna_Sharkey> <http://dbpedia.org/property/residence> ?v4 . ?v0 <http://dbpedia.org/ontology/foundingDate> ""1820-03-10""^^<http://www.w3.org/2001/XMLSchema#date> . ?v6 <http://dbpedia.org/property/awards> ?v0 . ?result <http://dbpedia.org/ontology/country> ?v3 . ?v6 <http://dbpedia.org/ontology/deathPlace> ?result . ?result <http://dbpedia.org/ontology/location> ?v4 . <http://dbpedia.org/resource/George_H._Cameron> <http://dbpedia.org/property/awards> ?v3 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?deathPlace WHERE {
  # Find the awardee on March 10, 1820
  ?award dbo:date ""1820-03-10""^^xsd:date ;
         dbo:recipient ?awardee .

  # Find Anna Sharkey's residence country
  dbr:Anna_Sharkey dbo:residenceCountry ?country .

  # Find George H. Cameron's award
  ?georgeAward dbo:recipient dbr:George_H._Cameron .
  
  # Ensure the entity is in both the country and the award
  ?entity dbo:location ?country ;
          dbo:award ?georgeAward .

  # Get the death place of the awardee
  ?awardee dbo:deathPlace ?deathPlace .
}
```",7,8,8,3,3,3,3,71,0,0,1,0,0.0,0
826,60,test,"Give me the spouse of the child of the father of Anna Magdalena Appel and predecessor of the parent of the child of Louis IV, Grand Duke of Hesse.","SELECT ?result WHERE { ?v0 <http://dbpedia.org/ontology/parent> ?v1 . <http://dbpedia.org/resource/Anna_Magdalena_Appel> <http://dbpedia.org/property/father> ?v3 . ?v0 <http://dbpedia.org/ontology/parent> <http://dbpedia.org/resource/Louis_IV,_Grand_Duke_of_Hesse> . ?result <http://dbpedia.org/ontology/successor> ?v1 . ?v2 <http://dbpedia.org/ontology/spouse> ?result . ?v2 <http://dbpedia.org/property/father> ?v3 . }","```sparql
# Step 1: Find Anna Magdalena Appel's father
SELECT ?father WHERE {
  wd:Q123456 wdt:P22 ?father. # Assuming Q123456 is Anna Magdalena Appel
}

# Step 2: Identify Johann Sebastian Bach as her spouse
SELECT ?spouse WHERE {
  wd:Q123456 wdt:P26 ?spouse. # P26 is the spouse property
}

# Step 3: Find Louis IV, Grand Duke of Hesse's child
SELECT ?child WHERE {
  wd:Q654321 wdt:P40 ?child. # Assuming Q654321 is Louis IV, Grand Duke of Hesse
}

# Step 4: Identify Louis IV's predecessor as Grand Duke of Hesse
SELECT ?predecessor WHERE {
  wd:Q654321 wdt:P39 ?predecessor. # P39 is the predecessor property
}
```",6,6,7,3,2,3,3,71,0,0,1,0,0.0,0
926,68,test,"Give me the child of the father, that is a royalty, of Mustafa III and successor of the child of the spouse of Şermi Kadın and father of the father of the spouse of Neşerek Kadın.",SELECT ?result WHERE { ?v0 <http://dbpedia.org/ontology/child> ?result . <http://dbpedia.org/resource/Mustafa_III> <http://dbpedia.org/property/father> ?v0 . ?v4 <http://dbpedia.org/property/father> ?v2 . ?v6 <http://dbpedia.org/property/father> ?v1 . <http://dbpedia.org/resource/Neşerek_Kadın> <http://dbpedia.org/ontology/spouse> ?v4 . ?v6 <http://dbpedia.org/ontology/successor> ?result . ?v1 <http://dbpedia.org/ontology/spouse> <http://dbpedia.org/resource/Şermi_Kadın> . ?v2 <http://dbpedia.org/property/father> ?result . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. },"```sparql
SELECT ?child WHERE {
  wd:Q123456 wdt:P31/wdt:P279* wd:Q11850; # Mustafa III is an instance of a monarch
  wdt:P22 ?spouse. # Spouse of Mustafa III

  ?spouse wdt:P26 ?child. # Child of the spouse (Mustafa III's child)

  ?child wdt:P31/wdt:P279* wd:Q11850; # The child is a royalty
         wdt:P36 wd:Q123456. # The child succeeded Mustafa III

  ?spouse2 wdt:P26 wd:Q789012. # Neşerek Kadın's spouse (Selim III)
  ?spouse2 wdt:P22 ?fatherOfSpouse2. # Father of Selim III
  ?fatherOfSpouse2 wdt:P22 ?grandfatherOfSpouse2. # Grandfather of Selim III

  FILTER(?child = ?grandfatherOfSpouse2) .
}
```

Note: Replace `wd:Q123456` with the actual DBpedia ID for Mustafa III, `wd:Q789012` with the ID for Selim III, and ensure that the property IDs (like P31, P22, etc.) are correct as per DBpedia's schema.",8,9,9,3,3,3,3,71,0,0,1,0,0.0,0
773,71,test,"Give me the parent of the successor of the child, that is a royalty, of Louis the Pious and parent of the child, that is a royalty, of the father, that is an office holder and a royalty, of Carloman of Bavaria and spouse of the father of the parent of Bernard (son of Charles the Fat).",SELECT ?result WHERE { <http://dbpedia.org/resource/Carloman_of_Bavaria> <http://dbpedia.org/property/father> ?v7 . ?v8 <http://dbpedia.org/ontology/parent> ?result . ?v7 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v8 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?result <http://dbpedia.org/ontology/child> ?v5 . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v7 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v4 <http://dbpedia.org/ontology/successor> ?v5 . ?v1 <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Bernard_(son_of_Charles_the_Fat)> . ?v2 <http://dbpedia.org/ontology/spouse> ?result . <http://dbpedia.org/resource/Louis_the_Pious> <http://dbpedia.org/ontology/child> ?v4 . ?v8 <http://dbpedia.org/property/father> ?v7 . ?v1 <http://dbpedia.org/property/father> ?v2 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?parentOfSuccessor WHERE {
  # Step 1: Louis the Pious's child who is royalty
  ?child dbp:father dbr:Louis_the_Pious ;
         a dbo:Monarch .

  # Step 2: Successor of that child
  ?successor dbp:predecessor ?child .

  # Step 3: Parent of this successor
  ?parentOfSuccessor dbp:child ?successor .

  # Step 4: Carloman of Bavaria's father
  dbr:Louis_the_German dbp:son dbr:Carloman_of_Bavaria .

  # Step 5: Child of Louis the German who is royalty
  ?royalChild dbp:father dbr:Louis_the_German ;
              a dbo:Monarch .

  # Step 6: Parent of this child
  ?parentOfRoyalChild dbp:child ?royalChild .

  # Step 7: Bernard (son of Charles the Fat)'s lineage
  dbr:Charles_the_Fat dbp:son dbr:Bernard_of_Swabia .
  ?charlesParent dbp:child dbr:Charles_the_Fat .
  ?fatherOfCharlesParent dbp:spouse ?charlesParent .

  # Step 8: Find the commonality
  FILTER (?parentOfSuccessor = ?parentOfRoyalChild)
}
```",9,13,10,3,3,3,3,71,0,0,1,0,0.0,0
236,20,test,"Give me the party member of the administration of the reference, that is an office holder and a politician, to James Madison and party member of the administration, that is an organisation, of the person decedent, that is a politician and an office holder, at Quincy, Massachusetts.","SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v1 <http://dbpedia.org/ontology/deathPlace> <http://dbpedia.org/resource/Quincy,_Massachusetts> . ?v4 <http://xmlns.com/foaf/0.1/name> ""James Madison""@en . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?result <http://dbpedia.org/ontology/party> ?v2 . ?v5 <http://dbpedia.org/property/leader> ?v4 . ?v2 <http://dbpedia.org/property/leader> ?v1 . ?result <http://dbpedia.org/ontology/party> ?v5 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?madisonParty ?adamsParty WHERE {
  # James Madison's party membership
  dbr:James_Madison dbo:politicalAffiliation ?madisonParty .
  
  # John Adams' details and party membership
  dbr:John_Adams dbo:deathPlace dbr:Quincy,_Massachusetts ;
                 dbo:politicalAffiliation ?adamsParty .
}
```",6,11,7,3,2,3,2,20,0,0,19,0,0.0,0
417,61,test,"Give me the child of the father of the leader, that is a royalty, of Colony of Greenland and child of the child, that is a royalty, of the parent, that is a royalty, of Alexandrine of Mecklenburg-Schwerin.",SELECT ?result WHERE { ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?result <http://dbpedia.org/ontology/parent> ?v3 . <http://dbpedia.org/resource/Colony_of_Greenland> <http://dbpedia.org/property/leader> ?v0 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?result <http://dbpedia.org/property/father> ?v5 . ?v0 <http://dbpedia.org/property/father> ?v5 . ?v3 <http://dbpedia.org/property/father> ?v1 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. <http://dbpedia.org/resource/Alexandrine_of_Mecklenburg-Schwerin> <http://dbpedia.org/ontology/parent> ?v1 . },"```sparql
# Step 1: Identify the leader of the Colony of Greenland
SELECT ?leader WHERE {
  ?leader dbo:country dbr:Greenland .
  ?leader dbo:positionTitle ?title .
  FILTER(CONTAINS(LCASE(?title), ""leader"") || CONTAINS(LCASE(?title), ""monarch""))
}

# Step 2: Find the father of that leader and his child who is royalty
SELECT DISTINCT ?child WHERE {
  ?leader dbo:father ?father .
  ?father dbo:child ?child .
  ?child rdf:type dbr:Q5 . # Person type
  ?child dbo:royaltyStatus ?status .
  FILTER(?status = ""Royal"")
}

# Step 3: Identify Alexandrine of Mecklenburg-Schwerin's parent who is royalty
SELECT DISTINCT ?parent WHERE {
  dbr:Alexandrine_of_Mecklenburg-Schwerin dbo:parent ?parent .
  ?parent rdf:type dbr:Q5 . # Person type
  ?parent dbo:royaltyStatus ?status .
  FILTER(?status = ""Royal"")
}

# Step 4: Find the child of that parent who is royalty and their own child who is royalty
SELECT DISTINCT ?grandchild WHERE {
  ?parent dbo:child ?child .
  ?child rdf:type dbr:Q5 . # Person type
  ?child dbo:royaltyStatus ?status1 .
  FILTER(?status1 = ""Royal"")
  
  ?child dbo:child ?grandchild .
  ?grandchild rdf:type dbr:Q5 . # Person type
  ?grandchild dbo:royaltyStatus ?status2 .
  FILTER(?status2 = ""Royal"")
}

# Step 5: Connect these two parts to find the common individual
SELECT DISTINCT ?commonIndividual WHERE {
  VALUES (?individual1) { ?child }
  VALUES (?individual2) { ?grandchild }

  ?individual1 dbo:name ?name1 .
  ?individual2 dbo:name ?name2 .

  FILTER(?name1 = ?name2)
}
```",6,9,7,3,2,3,3,71,0,0,2,0,0.0,0
976,62,test,"Give me the office of Naci Bostancı and office of the mayor, that is a politician and an office holder and Turkish, of the reference, that is an organisation and a political party and Turkish, to Millet İttifakı and office of the leader, that is a politician, of the administration, that is an organisation, of Kemal Kılıçdaroğlu.","SELECT ?result WHERE { ?v2 <http://dbpedia.org/property/office> ?result . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?v4 <http://dbpedia.org/property/leader> <http://dbpedia.org/resource/Kemal_Kılıçdaroğlu> . ?v1 <http://xmlns.com/foaf/0.1/name> ""Millet İttifakı""@en . ?v4 <http://dbpedia.org/ontology/leader> ?v2 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v5 <http://dbpedia.org/ontology/nationality> <http://dbpedia.org/resource/Turkey>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/PoliticalParty>. ?v1 <http://dbpedia.org/property/leader> ?v5 . <http://dbpedia.org/resource/Naci_Bostancı> <http://dbpedia.org/property/office> ?result . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v1 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Turkey>. ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?v5 <http://dbpedia.org/property/office> ?result . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?naciBostanciOffice ?turkishMayorOffice ?milletIttifakiReference ?kemalKilicdarogluOffice ?administration

WHERE {
  # Naci Bostancı's office
  OPTIONAL { 
    dbr:Naci_Bostancı dbo:office ?naciBostanciOffice .
  }

  # A Turkish mayor who is also a politician
  OPTIONAL {
    ?turkishMayor a dbo:Politician ;
                 dbo:nationality dbr:Turkey ;
                 dbo:positionTitle ""Mayor"" ;
                 dbo:office ?turkishMayorOffice .
  }

  # Millet İttifakı as an organization and political party
  OPTIONAL {
    dbr:Millet_İttifakı a dbo:PoliticalParty, dbo:Organization ;
                       dbo:nationality dbr:Turkey ;
                       rdfs:label ""Millet İttifakı""@en .
    BIND(dbr:Millet_İttifakı AS ?milletIttifakiReference)
  }

  # Kemal Kılıçdaroğlu's office and the administration he leads
  OPTIONAL {
    dbr:Kemal_Kılıçdaroğlu dbo:office ?kemalKilicdarogluOffice ;
                          dbo:leaderOf ?administration .
  }
}
```",7,15,8,3,3,3,3,71,0,0,1,0,0.0,0
645,57,test,"Give me the commander in Battle of Jarama and leader of the office, that is a government agency and an organisation, of Camilo Menéndez Tolosa and military force of the force, that is an event and a military conflict and a societal event, of the native, that is a president and a politician, of Restoration (Spain).",SELECT ?result WHERE { ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. <http://dbpedia.org/resource/Battle_of_Jarama> <http://dbpedia.org/ontology/commander> ?result . ?v5 <http://dbpedia.org/ontology/commander> ?v0 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/President>. ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?v3 <http://dbpedia.org/ontology/leader> ?result . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/GovernmentAgency>. ?result <http://dbpedia.org/ontology/battle> ?v5 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v0 <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Restoration_(Spain)> . <http://dbpedia.org/resource/Camilo_Menéndez_Tolosa> <http://dbpedia.org/property/office> ?v3 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?commander ?leaderOfOffice ?militaryForce WHERE {
  # Step 1: Identify a president and politician during the Restoration period in Spain.
  ?president a dbo:President ;
             dbo:nationality dbr:Spain ;
             dbo:politicalParty ?party .
  
  FILTER (CONTAINS(LCASE(?presidentLabel), ""restoration"")) .

  # Step 2: Find military conflict associated with this president.
  ?conflict dbo:participant ?president ;
           a dbo:MilitaryConflict, dbo:SocietalEvent .

  # Step 3: Identify commander in the Battle of Jarama.
  ?battle dbr:Battle_of_Jarama ;
         dbo:commander ?commander .
  
  # Step 4: Find leader of an office (government agency/organization) led by Camilo Menéndez Tolosa.
  ?office a dbo:GovernmentAgency, dbo:Organization ;
          dbo:leader ?camiloMenendezTolosa ;
          rdfs:label ?officeLabel .

  FILTER(LCASE(?camiloMenendezTolosaLabel) = ""camilo menéndez tolosa"") .
  
  # Step 5: Determine the military force associated with this commander.
  ?commander dbo:militaryForce ?militaryForce .
}
```",6,13,7,3,3,3,3,71,0,0,1,0,0.0,0
892,65,test,"Give me the entity in the administration, that is Italian and a region and a settlement and an administrative region, of Democratic Party (Italy) and landmark at elevation of the award of the member of E-girls and entity in the profession of Henri Crolla.",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/country> ?v2 . ?v1 <http://dbpedia.org/property/awards> ?v5 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Region>. ?v0 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Italy>. ?result <http://dbpedia.org/ontology/elevation> ?v5 . ?v0 <http://dbpedia.org/property/leaderParty> <http://dbpedia.org/resource/Democratic_Party_(Italy)> . <http://dbpedia.org/resource/E-girls> <http://dbpedia.org/ontology/bandMember> ?v1 . ?result <http://dbpedia.org/ontology/province> ?v0 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. <http://dbpedia.org/resource/Henri_Crolla> <http://dbpedia.org/property/occupation> ?v2 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/AdministrativeRegion>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?entity WHERE {
  ?entity a dbo:Region .
  ?entity a dbo:Settlement .
  ?entity a dbo:AdministrativeRegion .
  
  ?entity dbo:country dbr:Italy .
  
  OPTIONAL { ?entity dbo:government dbr:Democratic_Party_(Italy) . }
  
  ?landmark dbo:elevation ?elevation .
  ?landmark dbo:location ?entity .
  
  ?award dbo:recipient ?member .
  ?member foaf:name ""E-girls"" .
  
  ?profession dbo:person dbr:Henri_Crolla .
  ?entity dbo:relatedTo ?profession .
}
```",7,11,8,3,3,3,3,71,0,0,2,0,0.0,0
83,20,test,"Give me the ruling party in the birthplace, that is a town and Brazilian and a soccer club, of the member, that is a sports manager, of Kedah FA and party of the governor of the commander, that is a politician, in Central African Republic Civil War.",SELECT ?result WHERE { ?v2 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Brazil>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerClub>. ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v2 <http://dbpedia.org/property/leaderParty> ?result . ?v5 <http://dbpedia.org/ontology/party> ?result . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Town>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsManager>. ?v4 <http://dbpedia.org/property/governor> ?v5 . <http://dbpedia.org/resource/Central_African_Republic_Civil_War> <http://dbpedia.org/ontology/commander> ?v4 . ?v1 <http://dbpedia.org/ontology/birthPlace> ?v2 . ?v1 <http://dbpedia.org/ontology/team> <http://dbpedia.org/resource/Kedah_FA> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?rulingParty WHERE {
  # Step 1: Identify the commander in the Central African Republic Civil War
  ?commander a dbo:Politician ;
             dbo:role ?warRole .
  FILTER(CONTAINS(LCASE(?warRole), ""central african republic civil war""))

  # Step 2: Find the governor's party
  ?governor dbo:affiliation ?party ;
           dbo:isGovernedBy ?commander .

  # Step 3: Locate the sports manager
  ?sportsManager a dbo:SportsManager ;
                 dbo:memberOfKedahFA true ;
                 dbo:politicalAffiliation ?party .

  # Step 4: Determine birthplace details
  ?sportsManager dbo:birthPlace ?town .
  FILTER EXISTS { ?town a dbo:Town }
  FILTER EXISTS { ?town dbo:country dbr:Brazil }

  # Ensure the town has a soccer club
  ?soccerClub dbo:location ?town ;
              a dbo:SoccerClub .

  # Step 5: Identify the ruling party in that Brazilian town
  ?town dbo:rulingParty ?rulingParty .
}
```",6,11,7,3,2,3,2,20,0,0,1,0,0.0,0
715,68,test,"Give me the commander in the force, that is a military conflict, of the native of Morocco and leader of the office, that is a government agency and an organisation, of Carlos Franco Iribarnegaray and commander in the force of the mayor, that is an office holder and a politician and a president, of 1933 Spanish general election.",SELECT ?result WHERE { ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. <http://dbpedia.org/resource/1933_Spanish_general_election> <http://dbpedia.org/property/leader> ?v0 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/President>. ?v4 <http://dbpedia.org/ontology/commander> ?result . ?v4 <http://dbpedia.org/ontology/commander> ?v5 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v5 <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Morocco> . ?v7 <http://dbpedia.org/ontology/commander> ?v0 . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v7 <http://dbpedia.org/ontology/commander> ?result . <http://dbpedia.org/resource/Carlos_Franco_Iribarnegaray> <http://dbpedia.org/property/office> ?v3 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/GovernmentAgency>. ?v3 <http://dbpedia.org/ontology/leader> ?result . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?commanderInForce WHERE {
  # Carlos Franco Iribarnegaray's military conflict
  ?conflict dbo:commander ?carlosFranco .
  ?carlosFranco foaf:name ""Carlos Franco Iribarnegaray""@en .

  # Native of Morocco who is a leader of an office and commander in the same force
  ?person dbo:nationality dbr:Morocco ;
          dbo:leaderOf ?office ;
          dbo:commanderInForce ?conflict .
  ?office rdf:type dbo:GovernmentAgency, dbo:Organization .

  # Mayor and President of 1933 Spanish General Election
  ?mayorOrPresident dbo:officeHolder ""Mayor""@en ;
                    dbo:politician true ;
                    dbo:electedAs dbr:Spanish_general_election,_1933 .
  ?mayorOrPresident dbo:commanderInForce ?conflict .

  # Find the commander in force common to all
  ?commonCommander dbo:commanderInForce ?conflict .
}
```",8,14,9,3,3,3,3,71,0,0,1,0,0.0,0
839,64,test,"Give me the band of the person born, that is a musical artist, as the persona of Kevin Russell (musician) and band of Peter Schorowsky and band of the band, that is a musical artist, of the professional in Musician.","SELECT ?result WHERE { ?v2 <http://dbpedia.org/property/birthName> ?v3 . ?v0 <http://dbpedia.org/ontology/associatedMusicalArtist> ?v1 . <http://dbpedia.org/resource/Kevin_Russell_(musician)> <http://xmlns.com/foaf/0.1/givenName> ?v3 . ?result <http://dbpedia.org/ontology/bandMember> ?v1 . ?v2 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?v0 <http://dbpedia.org/property/occupation> ""Musician""@en . ?result <http://dbpedia.org/ontology/bandMember> <http://dbpedia.org/resource/Peter_Schorowsky> . }","```sparql
# Query for Kevin Russell's band
SELECT ?band WHERE {
  ?person foaf:name ""Kevin Russell"" .
  ?person dbo:occupation dbp:musician .
  ?person dbo:associatedBand ?band .
}

UNION

# Query for Peter Schorowsky's band
SELECT ?band WHERE {
  ?person foaf:name ""Peter Schorowsky"" .
  ?person dbo:occupation dbp:musician .
  ?person dbo:associatedBand ?band .
}

UNION

# Query for bands of the bands associated with Kevin Russell and Peter Schorowsky
SELECT DISTINCT ?memberBand WHERE {
  # For Kevin Russell's band
  ?band1 dbo:associatedBand ?band2 .
  ?band2 dbo:associatedBand ?person .
  ?person dbo:occupation dbp:musician .
  ?person dbo:associatedBand ?memberBand .

  UNION

  # For Peter Schorowsky's band
  ?band3 dbo:associatedBand ?band4 .
  ?band4 dbo:associatedBand ?person2 .
  ?person2 dbo:occupation dbp:musician .
  ?person2 dbo:associatedBand ?memberBand .
}
```",7,9,8,3,3,3,3,71,0,0,1,0,0.0,0
582,57,test,"Give me the reference to Japan and player in the father, that is an athlete and a soccer manager and a sports manager, of the child of Kazuaki Nagasawa and figure known as the nickname of Japan national football team.","SELECT ?result WHERE { ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsManager>. ?result <http://xmlns.com/foaf/0.1/name> ""Japan""@en . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerManager>. ?v0 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Kazuaki_Nagasawa> . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Athlete>. ?v0 <http://dbpedia.org/property/father> ?v5 . ?result <http://dbpedia.org/property/nickname> ?v3 . ?v5 <http://dbpedia.org/ontology/team> ?result . <http://dbpedia.org/resource/Japan_national_football_team> <http://dbpedia.org/property/nickname> ?v3 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?child ?father ?nickname WHERE {
  # Step 1: Identify Kazuaki Nagasawa's child
  ?child dbo:parent dbr:Kazuaki_Nagasawa .
  
  # Step 2: Determine the father of that child
  ?child dbo:father ?father .

  # Step 3: Check if the father is an athlete, soccer manager, and sports manager
  ?father a dbo:Athlete ;
          dbo:sport dbr:Soccer ;
          dbo:occupation dbr:Soccer_Manager ;
          dbo:occupation dbr:Sports_Manager .
  
  # Step 4: Identify the nickname of the Japan national football team
  dbr:Japan_National_Football_Team dbo:nickname ?nickname .
}
```",6,9,7,3,3,3,3,71,0,0,1,0,0.0,0
791,67,test,"Give me the father of the child, that is a royalty, of the father, that is a royalty and an office holder, of Emperor Antoku and spouse of Taira no Tokuko and predecessor of the child of the child, that is an office holder and a royalty, of Emperor Go-Shirakawa.",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/successor> ?v6 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v0 <http://dbpedia.org/ontology/parent> <http://dbpedia.org/resource/Emperor_Go-Shirakawa> . ?v3 <http://dbpedia.org/property/father> ?v1 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?result <http://dbpedia.org/ontology/spouse> <http://dbpedia.org/resource/Taira_no_Tokuko> . ?v6 <http://dbpedia.org/property/father> ?v0 . <http://dbpedia.org/resource/Emperor_Antoku> <http://dbpedia.org/property/father> ?v1 . ?v3 <http://dbpedia.org/property/father> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. },"```sparql
SELECT ?father WHERE {
  wd:Q123456 wdt:P22 ?father . # Emperor Antoku's father (Taira no Kiyomori)
  ?father wdt:P106 wd:Q82955 . # Taira no Kiyomori is a royalty
  ?father wdt:P39 ?office .   # Taira no Kiyomori held an office
  ?father wdt:P26 wd:Q1234567 . # Spouse of Taira no Kiyomori (Taira no Tokuko)
  ?child wdt:P22 ?father .    # Child of Taira no Kiyomori
  ?child wdt:P106 wd:Q82955 . # This child is royalty
  ?child wdt:P39 ?office2 .   # This child held an office
  ?predecessor wdt:P1365 ?child . # Predecessor of this child
  ?secondChild wdt:P22 ?predecessor . # Child of the predecessor
  ?secondChild wdt:P106 wd:Q82955 . # Second child is royalty
  ?secondChild wdt:P39 ?office3 .   # Second child held an office
  ?fatherOfPredecessor wdt:P22 ?predecessor . # Father of the predecessor
  FILTER(?fatherOfPredecessor = ?father) .
}
```

Note: Replace `wd:Q123456`, `wd:Q1234567` with actual DBpedia identifiers for Emperor Antoku and Taira no Tokuko, respectively. The query assumes these entities are correctly identified in DBpedia.",7,12,8,3,3,3,3,71,0,0,1,0,0.0,0
933,62,test,"Give me the reference to the birth name of the professional in Musician and band of the band of the band, that is an artist and a musical artist, of The Ramong Sound and band of The Ramong Sound.",SELECT ?result WHERE { ?result <http://xmlns.com/foaf/0.1/name> ?v5 . ?v1 <http://dbpedia.org/property/occupation> <http://dbpedia.org/resource/Musician> . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. ?v1 <http://dbpedia.org/property/birthName> ?v5 . <http://dbpedia.org/resource/The_Ramong_Sound> <http://dbpedia.org/ontology/associatedMusicalArtist> ?v4 . <http://dbpedia.org/resource/The_Ramong_Sound> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v2 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v4 <http://dbpedia.org/ontology/associatedMusicalArtist> ?v2 . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. },"```sparql
SELECT ?birthName WHERE {
  ?person dbo:bandMember dbr:The_Ramones .
  ?person foaf:name ""Joey Ramone""@en .
  ?person foaf:givenName ?birthName .
}
```",7,9,8,3,3,3,3,71,0,0,1,0,0.0,0
573,69,test,"Give me the person decedent at the administration, that is a region, of the real name of Charlie Baker (Australian footballer) and parent of the author, that is a politician and an office holder, of the work of John Quincy Adams and person decedent at the residence, that is a settlement, of William J. Phelan.",SELECT ?result WHERE { ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Region>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v7 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. ?result <http://dbpedia.org/ontology/deathPlace> ?v7 . ?v2 <http://dbpedia.org/ontology/parent> ?result . ?v1 <http://dbpedia.org/property/author> ?v2 . ?result <http://dbpedia.org/ontology/deathPlace> ?v3 . ?v3 <http://dbpedia.org/property/governor> ?v4 . <http://dbpedia.org/resource/Charlie_Baker_(Australian_footballer)> <http://xmlns.com/foaf/0.1/name> ?v4 . ?v1 <http://dbpedia.org/property/author> <http://dbpedia.org/resource/John_Quincy_Adams> . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. <http://dbpedia.org/resource/William_J._Phelan> <http://dbpedia.org/property/residence> ?v7 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT DISTINCT ?person WHERE {
  # Step 1: Find Charlie Baker's real name
  ?charlieBaker a dbo:AustralianFootballer ;
                foaf:name ""Charlie Baker"" .
  
  OPTIONAL { ?charlieBaker dbo:birthName ?realName . }
  
  # Step 2: Find regions administered by the person with that real name
  ?region dbo:administrativeRegionOf ?adminPerson .
  FILTER (?adminPerson = ?realName)
  
  # Step 3: Identify works of John Quincy Adams and their authors who are politicians
  ?work dbo:author ?author ;
        dbo:subject dbr:John_Quincy_Adams .
  ?author a dbo:Politician ;
          dbo:officeHolder true .

  # Step 4: Find settlements associated with William J. Phelan
  ?phelanResidence dbo:settlementOf ?phelanPerson .
  FILTER (?phelanPerson = dbr:William_J._Phelan)
  
  # Step 5: Find common decedent fitting all criteria
  ?person dbo:decedentAtRegion ?region ;
          dbo:parentOf ?author ;
          dbo:decedentAtSettlement ?phelanResidence .
}
```",8,12,9,3,3,3,3,71,0,0,2,0,0.0,0
978,18,test,"Give me the band member of the professional, that is a musical artist and an artist, in the award of Michel Claparède and band member of the person born as Nicholas Bracegirdle.","SELECT ?result WHERE { ?v2 <http://dbpedia.org/property/occupation> ?v1 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. <http://dbpedia.org/resource/Michel_Claparède> <http://dbpedia.org/property/awards> ?v1 . ?v3 <http://dbpedia.org/property/birthName> ""Nicholas Bracegirdle""@en . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?result <http://dbpedia.org/ontology/associatedMusicalArtist> ?v3 . ?result <http://dbpedia.org/ontology/associatedMusicalArtist> ?v2 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?bandMember WHERE {
  # Find individuals who are both musical artists and visual artists
  ?person a dbo:MusicalArtist ;
          a dbo:Artist .

  # Check if they received the Legion of Honour
  ?person dbo:honoraryTitle dbr:Legion_of_Honour .

  # Ensure they are band members of Nick Mason (Pink Floyd)
  ?bandMember dbo:member dbr:Nick_Mason ;
              dbo:member ?person .
}
```",5,7,6,3,2,3,2,20,0,0,2,0,0.0,0
433,67,test,"Give me the associated musical artist of Paul Chambers and associated musical artist of the associated musical artist, that is an artist and a musical artist, of the associated musical artist, that is a musical artist and an artist, of Ornette Coleman and professional in the profession of the writer of Slowhand at 70 – Live at the Royal Albert Hall.",SELECT ?result WHERE { <http://dbpedia.org/resource/Slowhand_at_70_–_Live_at_the_Royal_Albert_Hall> <http://dbpedia.org/property/writer> ?v1 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?v6 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v0 <http://dbpedia.org/ontology/associatedMusicalArtist> ?v6 . ?v6 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. <http://dbpedia.org/resource/Paul_Chambers> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?result <http://dbpedia.org/property/occupation> ?v3 . ?v1 <http://dbpedia.org/property/occupation> ?v3 . ?v6 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. <http://dbpedia.org/resource/Ornette_Coleman> <http://dbpedia.org/ontology/associatedMusicalArtist> ?v0 . },"```sparql
# Step 1: Find Paul Chambers' associated musical artist (Miles Davis)
SELECT ?milesDavis WHERE {
  wd:Q12345 wdt:P106 wd:Q33999 .
  wd:Q33999 wdt:P527 ?milesDavis .
}

# Step 2: Find the associated musical artist of Miles Davis (John Coltrane)
SELECT ?johnColtrane WHERE {
  ?milesDavis wdt:P527 ?johnColtrane .
}

# Step 3: Find Ornette Coleman's associated musical artist (Don Cherry)
SELECT ?donCherry WHERE {
  wd:Q12346 wdt:P106 wd:Q33999 .
  wd:Q12346 wdt:P527 ?donCherry .
}

# Step 4: Find the associated musical artist of Don Cherry (Charlie Haden)
SELECT ?charlieHaden WHERE {
  ?donCherry wdt:P527 ?charlieHaden .
}

# Step 5: Identify the writer of ""Slowhand at 70 – Live at the Royal Albert Hall"" (Assume a music journalist)
# This step is more abstract and may not be directly queryable without specific data.

# Step 6: Find an artist and musical artist of Charlie Haden (Pat Metheny)
SELECT ?patMetheny WHERE {
  ?charlieHaden wdt:P527 ?patMetheny .
}

# Step 7: Find an artist and musical artist of Pat Metheny (David Bowie)
SELECT ?davidBowie WHERE {
  ?patMetheny wdt:P527 ?davidBowie .
}
```

Note: The above SPARQL queries assume the existence of specific Wikidata items for each person mentioned. In practice, you would need to replace `wd:Q12345`, `wd:Q12346`, etc., with the actual Wikidata IDs for Paul Chambers and Ornette Coleman.",7,11,8,3,3,3,3,71,0,0,4,0,0.0,0
456,68,test,"Give me the spouse of the actor of the movie, that is a work and a television show, with Ross Newton and band of the band, that is a musical artist, of Dean Brody and professional in the alter ego of the reference, that is a fictional character, to Lamont Cranston (radio, film and television).","SELECT ?result WHERE { ?v3 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v4 <http://dbpedia.org/ontology/spouse> ?result . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/FictionalCharacter>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?result <http://dbpedia.org/property/occupation> ?v7 . <http://dbpedia.org/resource/Dean_Brody> <http://dbpedia.org/ontology/associatedMusicalArtist> ?v3 . ?v5 <http://dbpedia.org/property/starring> ?v4 . ?v5 <http://dbpedia.org/property/starring> <http://dbpedia.org/resource/Ross_Newton> . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/TelevisionShow>. ?v0 <http://xmlns.com/foaf/0.1/name> ""Lamont Cranston (radio, film and television)""@en . ?v0 <http://dbpedia.org/property/alterEgo> ?v7 . }","```sparql
SELECT ?spouse WHERE {
  # Find the alter ego of Lamont Cranston
  dbpedia:Lamont_Cranston dbo:alterEgo dbpedia:The_Shadow .
  
  # Find Dean Brody's band
  dbpedia:Dean_Brody dbo:memberOfBand dbpedia:High_Valley .

  # Find Ross Newton's work in a movie or TV show
  ?work dbo:actor dbpedia:Ross_Newton .
  FILTER EXISTS { ?work rdf:type (dbpedia:Film|dbpedia:TVSeries) }.

  # Find the spouse of Ross Newton
  dbpedia:Ross_Newton dbo:spouse ?spouse .
}
```",8,12,9,3,3,3,3,71,0,0,1,0,0.0,0
826,71,test,"Give me the spouse of the child of the father of Anna Magdalena Appel and successor of the child, that is a royalty, of the reference, that is a royalty, to Louis I and predecessor of the parent of the child of Louis IV, Grand Duke of Hesse.","SELECT ?result WHERE { <http://dbpedia.org/resource/Anna_Magdalena_Appel> <http://dbpedia.org/property/father> ?v1 . ?v2 <http://dbpedia.org/ontology/spouse> ?result . ?v4 <http://xmlns.com/foaf/0.1/name> ""Louis I""@en . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v2 <http://dbpedia.org/property/father> ?v1 . ?v7 <http://dbpedia.org/ontology/parent> <http://dbpedia.org/resource/Louis_IV,_Grand_Duke_of_Hesse> . ?v4 <http://dbpedia.org/ontology/child> ?v5 . ?v5 <http://dbpedia.org/ontology/successor> ?result . ?v7 <http://dbpedia.org/ontology/parent> ?v8 . ?result <http://dbpedia.org/ontology/successor> ?v8 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?spouse WHERE {
  # Anna Magdalena Bach's father
  dbr:Johann_Sebastian_Bach dbo:child dbr:C_P_E_Bach .
  
  # Successor of Carl Philipp Emanuel Bach in terms of musical legacy
  dbr:C_P_E_Bach dbo:succesor ?successor .

  # Royalty reference to Louis I
  dbr:Louis_I_of_Bavaria dbo:spouse dbr:Princess_Therese_of_Saxe-Hildburghausen .
  
  # Predecessor of the parent of the child of Louis IV, Grand Duke of Hesse
  dbr:Ludwig_IV,_Grand_Duke_of_Hesse dbo:child ?louisIVChild .
  ?louisIVChild dbo:parent dbr:Ludwig_III,_Grand_Duke_of_Hesse .
  dbr:Ludwig_III,_Grand_Duke_of_Hesse dbo:predecessor ?predecessor .

  # Spouse of the child of Johann Sebastian Bach who is royalty
  ?successor dbo:spouse ?spouse .
  
  FILTER (STRSTARTS(STR(?spouse), ""http://dbpedia.org/resource/Princess_Amalie_of_Hesse-Darmstadt""))
}
```",9,11,10,3,3,3,3,71,0,0,1,0,0.0,0
935,18,test,"Give me the death place of the awardee of the award, that is an award, of Syed Sohail Hussain Naqvi and headquarter of the office of Sanaullah Khan Zehri.",SELECT ?result WHERE { <http://dbpedia.org/resource/Sanaullah_Khan_Zehri> <http://dbpedia.org/property/office> ?v3 . ?v3 <http://dbpedia.org/ontology/location> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Award>. ?v2 <http://dbpedia.org/ontology/deathPlace> ?result . <http://dbpedia.org/resource/Syed_Sohail_Hussain_Naqvi> <http://dbpedia.org/property/awards> ?v1 . ?v2 <http://dbpedia.org/property/awards> ?v1 . },"```sparql
# Query to get the death place of Syed Sohail Hussain Naqvi's award awardee
SELECT ?deathPlace WHERE {
  ?person foaf:name ""Syed Sohail Hussain Naqvi""@en .
  ?award dbo:recipient ?person ;
         dbo:name ?awardName .
  OPTIONAL { ?person dbo:deathPlace ?deathPlace . }
}

UNION

# Query to get the headquarters of Sanaullah Khan Zehri's office
SELECT ?headquarters WHERE {
  ?office dbo:head ""Sanaullah Khan Zehri""@en ;
          dbo:headquarterLocation ?headquarters .
}
```",5,6,6,3,2,3,2,20,0,0,1,0,0.0,0
773,67,test,"Give me the parent of the child, that is a royalty, of the father, that is an office holder and a royalty, of Carloman of Bavaria and parent of the successor of the child, that is a royalty, of Louis the Pious and spouse of Louis the German.",SELECT ?result WHERE { <http://dbpedia.org/resource/Louis_the_Pious> <http://dbpedia.org/ontology/child> ?v0 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. <http://dbpedia.org/resource/Carloman_of_Bavaria> <http://dbpedia.org/property/father> ?v1 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?result <http://dbpedia.org/ontology/child> ?v6 . ?v0 <http://dbpedia.org/ontology/successor> ?v6 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. <http://dbpedia.org/resource/Louis_the_German> <http://dbpedia.org/ontology/spouse> ?result . ?v3 <http://dbpedia.org/property/father> ?v1 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v3 <http://dbpedia.org/ontology/parent> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?parent WHERE {
  # Carloman of Bavaria's father who is an office holder and royalty
  dbr:C._of_Bavaria dbo:father ?father1 .
  ?father1 a dbo:Monarch ;
           a dbo:Noble .

  # Louis the Pious's child who is royalty
  dbr:Louis_the_Pious dbo:child ?child1 .
  ?child1 a dbo:Monarch .

  # Successor of Louis the Pious's child (Charles the Bald)
  ?child1 dbo:succ ?successor .
  ?successor dbo:parent ?parent .

  # Spouse of Louis the German
  dbr:Louis_the_German dbo:spouse ?spouse .
  
  FILTER (?parent = ?spouse)
}
```",7,11,8,3,3,3,3,71,0,0,1,0,0.0,0
926,58,test,"Give me the child of the father, that is a royalty, of the parent, that is a royalty, of Beyhan Sultan (daughter of Mustafa III) and father of Mahmud II and successor of the child of Ahmed III.",SELECT ?result WHERE { <http://dbpedia.org/resource/Beyhan_Sultan_(daughter_of_Mustafa_III)> <http://dbpedia.org/ontology/parent> ?v4 . ?v4 <http://dbpedia.org/property/father> ?v0 . ?v5 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Ahmed_III> . <http://dbpedia.org/resource/Mahmud_II> <http://dbpedia.org/property/father> ?result . ?v0 <http://dbpedia.org/ontology/child> ?result . ?v5 <http://dbpedia.org/ontology/successor> ?result . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. },"```sparql
SELECT ?child WHERE {
  wd:Q123456 wdt:P22 wd:Q789012 . # Beyhan Sultan (Q123456) has parent (P22) Mustafa III (Q789012)
  wd:Q789012 wdt:P40 ?successor . # Mustafa III (Q789012) has child (P40) Selim III (Q345678), successor of Abdul Hamid I
  wd:Q345678 wdt:P22 wd:Q901234 . # Abdul Hamid I (Q345678) is the son of Ahmed III (Q901234)
  wd:Q789012 wdt:P40 ?child .    # Mustafa III has another child, who we need to identify
  FILTER(?child = wd:Q567890)    # Mustafa IV (Q567890), father of Mahmud II
}
```",6,8,7,3,3,3,3,71,0,0,1,0,0.0,0
826,66,test,"Give me the spouse of the child of Johann Heinrich Appel and predecessor of the parent of the child of Louis IV, Grand Duke of Hesse and successor of the child, that is a royalty, of Louis I, Grand Duke of Hesse.","SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/parent> ?v2 . ?v3 <http://dbpedia.org/property/father> ""Johann Heinrich Appel""@en . ?result <http://dbpedia.org/ontology/successor> ?v2 . ?v6 <http://dbpedia.org/ontology/successor> ?result . ?v1 <http://dbpedia.org/ontology/parent> <http://dbpedia.org/resource/Louis_IV,_Grand_Duke_of_Hesse> . ?v6 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v3 <http://dbpedia.org/ontology/spouse> ?result . <http://dbpedia.org/resource/Louis_I,_Grand_Duke_of_Hesse> <http://dbpedia.org/ontology/child> ?v6 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?spouse WHERE {
  # Step 1: Identify Johann Heinrich Appel's child
  ?appelChild dbo:parent dbr:Johann_Heinrich_Appel .
  
  # Step 2: Find the spouse of that child
  ?appelChild dbo:spouse ?spouse .

  # Step 3: Identify Louis IV, Grand Duke of Hesse's child
  ?louisIVChild dbo:parent dbr:Louis_IV,_Grand_Duke_of_Hesse .
  
  # Step 4: Find the parent of that child
  ?louisIVChild dbo:parent ?parent .

  # Step 5: Determine the predecessor of that parent
  ?predecessor dbo:succeededBy ?parent .

  # Step 6: Identify Louis I, Grand Duke of Hesse's child
  ?louisIChild dbo:parent dbr:Louis_I,_Grand_Duke_of_Hesse .
  
  # Step 7: Find the successor of that child
  ?successor dbo:succeededBy ?louisIChild .

  # Step 8: Ensure the final answer is royalty
  FILTER EXISTS { ?spouse a dbo:Monarch . }

  # Step 9: Combine these steps to find the spouse
  FILTER (?predecessor = ?spouse && ?successor = ?spouse)
}
```",7,8,8,3,3,3,3,71,0,0,1,0,0.0,0
353,8,test,"Give me the entity in the country of Moskovsky City District, Nizhny Novgorod and alma mater of Daniil Yegorov.","SELECT ?result WHERE { <http://dbpedia.org/resource/Moskovsky_City_District,_Nizhny_Novgorod> <http://dbpedia.org/ontology/country> ?v1 . ?result <http://dbpedia.org/ontology/country> ?v1 . <http://dbpedia.org/resource/Daniil_Yegorov> <http://dbpedia.org/ontology/almaMater> ?result . }","```sparql
SELECT ?institution WHERE {
  ?person foaf:name ""Daniil Yegorov""@en .
  ?person dbo:almaMater ?institution .
  OPTIONAL { ?institution dbo:location ?location . }
  FILTER(CONTAINS(LCASE(?location), ""moskovsky city district, nizhny novgorod""))
}
```",3,3,4,2,2,2,2,9,0,0,1,0,0.0,0
826,65,test,"Give me the spouse of the child of Johann Heinrich Appel and successor of the child, that is a royalty, of the reference, that is a royalty, to Louis I and predecessor of the parent of Prince Friedrich of Hesse and by Rhine.","SELECT ?result WHERE { ?v0 <http://dbpedia.org/ontology/child> ?v6 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v4 <http://dbpedia.org/property/father> ""Johann Heinrich Appel""@en . ?v6 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v4 <http://dbpedia.org/ontology/spouse> ?result . ?v0 <http://xmlns.com/foaf/0.1/name> ""Louis I""@en . <http://dbpedia.org/resource/Prince_Friedrich_of_Hesse_and_by_Rhine> <http://dbpedia.org/ontology/parent> ?v3 . ?result <http://dbpedia.org/ontology/successor> ?v3 . ?v6 <http://dbpedia.org/ontology/successor> ?result . }","```sparql
SELECT ?spouse WHERE {
  # Step 1: Identify Johann Heinrich Appel's child who is royalty
  ?child dbo:parent dbr:Johann_Heinrich_Appel .
  ?child rdf:type dbo:RoyalFamily .

  # Step 2: Find the spouse of that child
  ?spouse dbo:spouse ?child .

  # Step 3: Successor of the child in royalty
  ?successor dbo:predecessor ?child .
  ?successor rdf:type dbo:RoyalFamily .

  # Step 4: Reference to Louis I
  ?royalReference dbo:relatedTo dbr:Louis_I_of_Bavaria .
  ?royalReference rdf:type dbo:RoyalFamily .

  # Step 5: Predecessor of the parent of Prince Friedrich of Hesse and by Rhine
  ?parentParent dbo:child dbr:Friedrich_Prince_of_Hesse_and_by_Rhine .
  ?predecessor dbo:successor ?parentParent .
  ?predecessor rdf:type dbo:RoyalFamily .

  # Combine these elements to find the spouse
  FILTER(?spouse = ?successor && ?successor = ?royalReference && ?successor = ?predecessor)
}
```",7,9,8,3,3,3,3,71,0,0,1,0,0.0,0
158,19,test,"Give me the entity in the award, that is a country, of Adelbert Cronkhite and party of the successor, that is a prime minister and an office holder and a politician, of the person deceased, that is an office holder and a politician, on 1945-09-15.","SELECT ?result WHERE { ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. ?v0 <http://dbpedia.org/ontology/deathDate> ""1945-09-15""^^<http://www.w3.org/2001/XMLSchema#date> . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. <http://dbpedia.org/resource/Adelbert_Cronkhite> <http://dbpedia.org/property/awards> ?v2 . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/PrimeMinister>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v4 <http://dbpedia.org/ontology/party> ?result . ?v0 <http://dbpedia.org/ontology/successor> ?v4 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?result <http://dbpedia.org/ontology/country> ?v2 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT DISTINCT ?country WHERE {
  # Step 1: Identify Adelbert Cronkhite and his award
  ?cronkhite a dbo:Person ;
             rdfs:label ""Adelbert Cronkhite""@en .
  
  ?award dbo:recipient ?cronkhite ;
         dbo:country ?country .

  # Step 2: Find the successor who is a prime minister, office holder, and politician
  ?successor dbo:predecessor ?deceased ;
             a dbo:PrimeMinister, dbo:OfficeHolder, dbo:Politician .
  
  # Step 3: Identify the deceased person on 1945-09-15
  ?deceased dbo:dateOfDeath ?deathDate ;
            a dbo:OfficeHolder, dbo:Politician .

  FILTER (YEAR(?deathDate) = 1945 && MONTH(?deathDate) = 9 && DAY(?deathDate) = 15)

  # Step 4: Link the successor to the deceased
  ?successor dbo:predecessor ?deceased .
}
```",5,11,6,3,2,3,2,20,0,0,1,0,0.0,0
36,25,test,"Give me the person born in the birth year of Deanne Bray and person born as Ayo Makun and actor of the claim to fame, that is a film, of Lepacious Bose.","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/birthYear> ?v1 . ?v4 <http://dbpedia.org/ontology/starring> ?result . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Film>. ?result <http://dbpedia.org/property/birthName> ""Ayo Makun""@en . <http://dbpedia.org/resource/Deanne_Bray> <http://dbpedia.org/ontology/birthYear> ?v1 . <http://dbpedia.org/resource/Lepacious_Bose> <http://dbpedia.org/ontology/knownFor> ?v4 . }","```sparql
# Step 1: Find Deanne Bray's birth year
SELECT ?birthYear WHERE {
  dbpedia:Deanne_Bray dbo:birthDate ?date .
  BIND(YEAR(?date) AS ?birthYear)
}

# Step 2: Find Ayo Makun's birth date
SELECT ?birthDate WHERE {
  dbpedia:Ayo_Makun dbo:birthDate ?birthDate .
}

# Step 3: Identify Lepacious Bose's claim to fame (a film)
SELECT ?film WHERE {
  dbpedia:Lepacious_Bose dbo:claimToFame ?film .
  FILTER(isLiteral(?film))
}

# Step 4: Find the person who matches all criteria
SELECT DISTINCT ?person WHERE {
  # Get Deanne Bray's birth year from previous query result
  VALUES (?birthYear) { (YEAR(dbpedia:Deanne_Bray dbo:birthDate ?date)) }

  # Get Ayo Makun's birth date from previous query result
  VALUES (?birthDate) { (dbpedia:Ayo_Makun dbo:birthDate ?birthDate) }

  # Get Lepacious Bose's claim to fame film from previous query result
  VALUES (?film) { (dbpedia:Lepacious_Bose dbo:claimToFame ?film) }
  
  ?person dbo:birthDate ?date .
  BIND(YEAR(?date) AS ?year)
  FILTER(?year = ?birthYear)

  ?person dbo:birthDate ?exactBirthDate .
  FILTER(?exactBirthDate = ?birthDate)

  ?person dbo:claimToFame ?film .
}
```",5,6,6,2,3,2,3,28,0,0,1,0,0.0,0
987,62,test,"Give me the entity in Montenegro and birth place of the band, that is an artist and a musical artist, of the band, that is an artist, of Dado Polumenta and birth place of the actor of the show, that is a film, with Emir Hadžihafizbegović.",SELECT ?result WHERE { <http://dbpedia.org/resource/Dado_Polumenta> <http://dbpedia.org/ontology/associatedMusicalArtist> ?v4 . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. ?v5 <http://dbpedia.org/ontology/birthPlace> ?result . ?v1 <http://dbpedia.org/property/starring> ?v5 . ?result <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Montenegro> . ?v2 <http://dbpedia.org/ontology/birthPlace> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Film>. ?v4 <http://dbpedia.org/ontology/associatedMusicalArtist> ?v2 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?v1 <http://dbpedia.org/ontology/starring> <http://dbpedia.org/resource/Emir_Hadžihafizbegović> . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. },"```sparql
# Step 1: Identify Dado Polumenta's Band
SELECT ?band WHERE {
  ?person foaf:name ""Dado Poldrugovac""@en .
  ?person dbo:memberOf ?band .
}

# Step 2: Find the Birth Place of the Band in Montenegro
SELECT DISTINCT ?birthPlace WHERE {
  ?band dbo:foundingLocation ?location .
  ?location rdfs:label ?placeLabel .
  FILTER(CONTAINS(LCASE(?placeLabel), ""montenegro""))
  ?location dbp:country ""Montenegro"" .
}

# Step 3: Identify a Film Featuring Emir Hadžihafizbegović
SELECT DISTINCT ?film WHERE {
  ?emir foaf:name ""Emir Hadžihafizbegović""@en .
  ?emir dbo:performerIn ?film .
  ?film rdf:type dbo:Film .
}

# Step 4: Find an Actor from the Film
SELECT DISTINCT ?actor WHERE {
  ?film dbo:starring ?actor .
}

# Step 5: Determine the Birth Place of This Actor
SELECT DISTINCT ?birthPlace WHERE {
  ?actor dbo:birthPlace ?birthPlace .
}
```",7,11,8,3,3,3,3,71,0,0,1,0,0.0,0
445,69,test,"Give me the death place of the awardee of Royal Astronomical Society and entity in the residence, that is a country, of the resident, that is an athlete, of Great Britain and entity in the award of the commander in Battle of Saint-Mihiel.",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/country> ?v2 . ?v1 <http://dbpedia.org/property/awards> ?v2 . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Athlete>. <http://dbpedia.org/resource/Battle_of_Saint-Mihiel> <http://dbpedia.org/ontology/commander> ?v1 . ?v4 <http://dbpedia.org/property/residence> ?v3 . ?v7 <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/Royal_Astronomical_Society> . ?result <http://dbpedia.org/ontology/location> ?v3 . ?v7 <http://dbpedia.org/ontology/deathPlace> ?result . ?v4 <http://dbpedia.org/property/residence> <http://dbpedia.org/resource/Great_Britain> . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. },"```sparql
# Step 1: Find a notable awardee of the Royal Astronomical Society
SELECT ?awardee WHERE {
  ?awardee dbo:award dbp:Royal_Astronomical_Society .
}

# Step 2: Determine the death place of that awardee
SELECT ?deathPlace WHERE {
  ?person dbo:award dbp:Royal_Astronomical_Society .
  ?person dbo:deathPlace ?deathPlace .
}

# Step 3: Find a notable athlete from Great Britain and their country of residence
SELECT DISTINCT ?athlete ?residenceCountry WHERE {
  ?athlete dbo:nationality dbr:United_Kingdom ;
           dbo:sport ?sport .
  OPTIONAL { ?athlete dbo:residenceLocation ?location . }
  ?location dbo:countryName ?residenceCountry .
}

# Step 4: Identify the commander in the Battle of Saint-Mihiel and their award
SELECT DISTINCT ?commander ?award WHERE {
  ?battle dbp:commander ?commander ;
          rdfs:label ""Battle of Saint-Mihiel""@en .
  OPTIONAL { ?commander dbo:award ?award . }
}

# Step 5: Find an entity in the residence country or award
SELECT DISTINCT ?entity WHERE {
  VALUES (?source) { ?residenceCountry ?award }
  ?entity dbo:countryName ?source .
}
```",8,10,9,3,3,3,3,71,0,0,1,0,0.0,0
926,70,test,"Give me the father of the father of Abdulaziz and child of the father, that is a royalty, of the parent, that is a royalty, of Beyhan Sultan (daughter of Mustafa III) and successor of the child of the spouse of Şermi Kadın.",SELECT ?result WHERE { <http://dbpedia.org/resource/Abdulaziz> <http://dbpedia.org/property/father> ?v3 . ?v0 <http://dbpedia.org/ontology/child> ?result . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v1 <http://dbpedia.org/ontology/spouse> <http://dbpedia.org/resource/Şermi_Kadın> . ?v6 <http://dbpedia.org/property/father> ?v1 . ?v5 <http://dbpedia.org/property/father> ?v0 . <http://dbpedia.org/resource/Beyhan_Sultan_(daughter_of_Mustafa_III)> <http://dbpedia.org/ontology/parent> ?v5 . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v6 <http://dbpedia.org/ontology/successor> ?result . ?v3 <http://dbpedia.org/property/father> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?person WHERE {
  # Abdulaziz's father
  dbr:Abdül_Aziz_I dbo:father dbr:Mahmud_II .
  
  # Mahmud II's father
  dbr:Mahmud_II dbo:father dbr:Abdul_Hamid_I .

  # Child of Abdul Hamid I who is royalty and successor of Mahmud II
  ?person dbo:parent dbr:Abdul_Hamid_I .
  ?person a dbo:Sultan .
  ?succession dbo:succeededBy dbr:Mahmud_II ;
              dbo:predecessor dbr:Mahmud_II ;
              dbo:successor ?person .

  # Beyhan Sultan's parent
  dbr:Beyhan_Sultān dbo:parent dbr:Mustafa_III .

  # Child of Şermi Kadın's spouse (Selim III)
  dbr:Selim_III dbo:spouse dbr:Şermi_Kadın .
  ?mahmudII dbo:childOf dbr:Selim_III ;
            a dbo:Sultan .

  # Successor of Mahmud II
  ?successor dbo:succeededBy dbr:Mahmud_II ;
             dbo:predecessor dbr:Mahmud_II ;
             dbo:successor ?person .
}
```",8,10,9,3,3,3,3,71,0,0,1,0,0.0,0
978,20,test,"Give me the band member of the professional, that is a musical artist and an artist, in the award of Michel Claparède and band member of the person born as the name of Chicane (musician).",SELECT ?result WHERE { <http://dbpedia.org/resource/Michel_Claparède> <http://dbpedia.org/property/awards> ?v1 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?result <http://dbpedia.org/ontology/associatedMusicalArtist> ?v5 . ?v2 <http://dbpedia.org/property/occupation> ?v1 . <http://dbpedia.org/resource/Chicane_(musician)> <http://xmlns.com/foaf/0.1/givenName> ?v4 . ?result <http://dbpedia.org/ontology/associatedMusicalArtist> ?v2 . ?v5 <http://dbpedia.org/property/birthName> ?v4 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?bandMember WHERE {
  # Find Nick Bracegirdle's association with the band ""Offshore""
  dbr:Nick_Bracegirdle dbo:memberOfBand dbr:Offshore .

  # Find artists who have won the Michel Claparède Award
  ?artist dbo:awardReceived dbr:Michel_Claparède_Award .
  
  # Ensure the artist is both a musical artist and a visual artist
  ?artist rdf:type dbo:MusicalArtist ;
          rdf:type dbo:Artist .

  # Find if this artist is also a band member of any band
  ?artist dbo:memberOfBand ?band .

  # Return the band member who fits all criteria
  ?bandMember dbo:memberOfBand ?band .
}
```",6,8,7,3,2,3,2,20,0,0,2,0,0.0,0
791,60,test,"Give me the father of the child, that is a royalty, of the father, that is a royalty and an office holder, of Emperor Antoku and spouse of the spouse, that is a royalty, of the reference to Emperor Takakura.","SELECT ?result WHERE { ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. <http://dbpedia.org/resource/Emperor_Antoku> <http://dbpedia.org/property/father> ?v0 . ?result <http://dbpedia.org/ontology/spouse> ?v2 . ?v1 <http://dbpedia.org/property/father> ?v0 . ?v2 <http://dbpedia.org/ontology/spouse> ?v3 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v3 <http://xmlns.com/foaf/0.1/name> ""Emperor Takakura""@en . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v1 <http://dbpedia.org/property/father> ?result . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?fatherOfChild WHERE {
  # Step 1: Find Emperor Antoku's father
  ?antoku dbo:father ?fatherAntoku .
  FILTER(STRSTARTS(STR(?antoku), ""Emperor Antoku""))

  # Step 2: Find the father of Emperor Antoku's father who is a royalty and an office holder
  ?fatherAntoku dbo:father ?grandFather .
  ?grandFather a dbo:Monarch ;
              dbo:officeHolder ?office .

  # Step 3: Identify any child of this person who is also royalty
  ?grandFather dbo:child ?royalChild .
  ?royalChild a dbo:Monarch .

  # Step 4: Find Emperor Takakura's spouse
  dbr:Emperor_Takakura dbo:spouse ?takakuraSpouse .

  # Step 5: Find the spouse of Emperor Takakura's spouse
  ?takakuraSpouse dbo:spouse ?secondSpouse .

  # Final step: Identify the father of the royal child found in step 3, who is also related to the second spouse from step 5
  ?royalChild dbo:father ?fatherOfChild .
}
```",6,10,7,3,2,3,3,71,0,0,1,0,0.0,0
456,66,test,"Give me the band of the band, that is a musical artist, of the band of Alan Doyle and spouse of the actor of Pacific Drive and professional in the alter ego of The Shadow.",SELECT ?result WHERE { ?result <http://dbpedia.org/property/occupation> ?v6 . ?v3 <http://dbpedia.org/ontology/spouse> ?result . ?v1 <http://dbpedia.org/ontology/associatedMusicalArtist> ?v2 . <http://dbpedia.org/resource/The_Shadow> <http://dbpedia.org/property/alterEgo> ?v6 . <http://dbpedia.org/resource/Alan_Doyle> <http://dbpedia.org/ontology/associatedMusicalArtist> ?v1 . ?v2 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . <http://dbpedia.org/resource/Pacific_Drive> <http://dbpedia.org/property/starring> ?v3 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. },"```sparql
# Step 1: Find Alan Doyle's Band
SELECT ?greatBigSeaBand WHERE {
  wd:Q123456 wdt:P106 wd:Q33999; # Alan Doyle is a member of Great Big Sea
  wdt:P175 ?greatBigSeaBand.
}

# Step 2: Identify an Actor from Pacific Drive and their Spouse
SELECT ?actor ?spouse WHERE {
  ?pacificDriveFilm wdt:P31 wd:Q11424; # Pacific Drive is a film
  wdt:P161 ?actor. # actor in the film
  ?actor wdt:P26 ?spouse.
}

# Step 3: Find Lamont Cranston's Professional Association
SELECT ?professional WHERE {
  wd:Q1234567 wdt:P1700 wd:Q67890; # The Shadow is associated with Lamont Cranston
  wdt:P106 ?professional. # professional in the alter ego of The Shadow
}

# Step 4: Find the Band of the Identified Musical Artist
SELECT ?band WHERE {
  ?musicalArtist wdt:P106 wd:Q33999; # musical artist profession
  wdt:P175 ?band.
}

# Step 5: Determine the Band of That Band (if applicable)
SELECT ?finalBand WHERE {
  ?intermediateBand wdt:P175 ?finalBand.
}
```

Note: The above SPARQL queries are structured to follow the logical steps needed to answer the question. Specific entity IDs (`Q123456`, `Q67890`, etc.) need to be replaced with actual DBpedia identifiers for Alan Doyle, Lamont Cranston, and other relevant entities.",7,8,8,3,3,3,3,71,0,0,1,0,0.0,0
917,62,test,"Give me the parent of the child, that is a royalty, of the mayor of Hawaiian Kingdom and child of Kekūanāoʻa and child of the father of the spouse, that is a royalty, of Leleiohoku I.","SELECT ?result WHERE { ?v2 <http://dbpedia.org/property/father> ?v4 . ?result <http://dbpedia.org/ontology/child> ?v2 . <http://dbpedia.org/resource/Hawaiian_Kingdom> <http://dbpedia.org/property/leader> ?v4 . ?v1 <http://dbpedia.org/ontology/spouse> <http://dbpedia.org/resource/Leleiohoku_I> . ?result <http://dbpedia.org/property/father> ""Kekūanāoʻa""@en . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v1 <http://dbpedia.org/property/father> ?v5 . ?result <http://dbpedia.org/ontology/parent> ?v5 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?parent WHERE {
  # Step 1: Identify the mayor of the Hawaiian Kingdom
  ?mayor dbo:positionTitle ""Mayor""@en .
  ?mayor dbo:country dbr:Hawaii .

  # Step 2: Find a child of Kekūanāoʻa who is royalty and related to the mayor
  ?child dbo:parent dbr:Kekūanāoʻa ;
         dbo:spouse ?spouse .
  
  # Step 3: Identify Leleiohoku I's spouse and their father if they are royalty
  ?leleiohoku1 dbo:spouse ?spouseLeleiohokuI .
  ?spouseLeleiohokuI dbo:parent ?fatherSpouseLeleiohokuI .

  # Step 4: Ensure the child is related to both Kekūanāoʻa and the spouse's father
  ?child dbo:parent ?mayor ;
         dbo:parent ?fatherSpouseLeleiohokuI .
  
  # Step 5: Find the parent of this child who is royalty
  ?parent dbo:child ?child .
}
```",7,9,8,3,3,3,3,71,0,0,2,0,0.0,0
507,70,test,"Give me the director of the movie, that is a movie and a work, with the person born on 1919-06-17 and professional in the profession of the person born on 1966-02-18 and spouse of the person born as Anne Voase Coates.","SELECT ?result WHERE { ?v0 <http://dbpedia.org/ontology/birthDate> ""1919-06-17""^^<http://www.w3.org/2001/XMLSchema#date> . ?v7 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?v1 <http://dbpedia.org/ontology/birthDate> ""1966-02-18""^^<http://www.w3.org/2001/XMLSchema#date> . ?v1 <http://dbpedia.org/property/occupation> ?v3 . ?result <http://dbpedia.org/ontology/spouse> ?v4 . ?v7 <http://dbpedia.org/ontology/director> ?result . ?result <http://dbpedia.org/property/occupation> ?v3 . ?v7 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Film>. ?v4 <http://dbpedia.org/property/birthName> ""Anne Voase Coates""@en . ?v7 <http://dbpedia.org/property/starring> ?v0 . }","```sparql
SELECT ?director WHERE {
  # Step 1: Find person born on 1919-06-17
  ?person1 dbo:birthDate ""1919-06-17""^^xsd:date .
  
  # Step 2: Find profession of person born on 1966-02-18
  ?person2 dbo:birthDate ""1966-02-18""^^xsd:date .
  ?person2 dbo:occupation ?profession .

  # Step 3: Find spouse of Anne Voase Coates
  ?anne foaf:name ""Anne Voase Coates""@en ;
        dbo:spouse ?spouse .

  # Step 4: Match the professions
  ?person1 dbo:occupation ?profession .

  # Step 5: Identify a movie directed by person from step 1 that is both a work and a movie
  ?movie dbo:director ?person1 ;
         rdf:type dbpedia-owl:Film, dbpedia-owl:CreativeWork .
  
  # Return the director of the identified movie
  BIND(?person1 AS ?director)
}
```",8,10,9,3,3,3,3,71,0,0,1,0,0.0,0
212,8,test,Give me the birthplace of the professional in  and birthplace of Corp Sayvee.,"SELECT ?result WHERE { <http://dbpedia.org/resource/Corp_Sayvee> <http://dbpedia.org/ontology/birthPlace> ?result . ?v2 <http://dbpedia.org/property/occupation> """"@en . ?v2 <http://dbpedia.org/ontology/birthPlace> ?result . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?birthPlace WHERE {
  ?person rdfs:label ""Corp Sayvee""@en .
  ?person dbo:birthPlace ?birthPlace .
}
```",3,3,4,2,2,2,2,9,1,0,0,1.0,1.0,1.0
329,25,test,"Give me the entity in the region, that is a country, of Western European Time and birthplace of the author of The Tailor and Ansty and entity in Northern Ireland.",SELECT ?result WHERE { <http://dbpedia.org/resource/The_Tailor_and_Ansty> <http://dbpedia.org/property/author> ?v3 . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. ?result <http://dbpedia.org/ontology/country> ?v4 . ?result <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Northern_Ireland> . ?v3 <http://dbpedia.org/ontology/birthPlace> ?result . ?v4 <http://dbpedia.org/property/timeZone> <http://dbpedia.org/resource/Western_European_Time> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?country WHERE {
  # Western European Time countries
  VALUES ?wetCountries { 
    dbr:Ireland 
    dbr:Portugal 
    dbr:Spain 
  }
  
  # George Moore's birthplace
  ?moore dbo:birthPlace dbr:County_Mayo .
  ?mayo dbo:country dbr:Ireland .

  # Entity in Northern Ireland
  ?entity dbo:location dbr:Northern_Ireland .

  # Combine conditions to find the country
  VALUES ?country { dbr:Ireland }
  
  FILTER (?wetCountries = ?country && EXISTS { ?moore dbo:birthPlace ?mayo } && EXISTS { ?entity dbo:location dbr:Northern_Ireland })
}
```",5,6,6,2,3,2,3,28,0,0,1,0,0.0,0
826,56,test,"Give me the predecessor of the parent of the child of Louis IV, Grand Duke of Hesse and successor of Louis II, Grand Duke of Hesse and spouse of the child of Johann Heinrich Appel.","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/successor> ?v1 . ?v2 <http://dbpedia.org/ontology/spouse> ?result . ?v2 <http://dbpedia.org/property/father> ""Johann Heinrich Appel""@en . ?v0 <http://dbpedia.org/ontology/parent> <http://dbpedia.org/resource/Louis_IV,_Grand_Duke_of_Hesse> . ?v0 <http://dbpedia.org/ontology/parent> ?v1 . <http://dbpedia.org/resource/Louis_II,_Grand_Duke_of_Hesse> <http://dbpedia.org/ontology/successor> ?result . }","```sparql
SELECT ?predecessor WHERE {
  wd:Q123456 wdt:P39 wd:Q789012 . # Louis IV, Grand Duke of Hesse (P39: position held)
  wd:Q789012 wdt:P1368 ?successor . # Successor of the position (Louis III)
  wd:Q789012 wdt:P22 ?parent .     # Parent of Louis IV's child is Louis IV himself
  wd:Q123456 wdt:P22 ?child .      # Child of Louis IV
  wd:Q987654 wdt:P26 ?spouse .     # Spouse of Johann Heinrich Appel's child
  wd:Q789012 wdt:P1368 wd:Q345678 . # Louis III succeeded Louis II
  wd:Q123456 wdt:P22 wd:Q901234 .  # Ludwig III, Elector Palatine (Predecessor)
}
```

Note: The actual DBpedia IDs for the individuals mentioned need to be replaced with their correct identifiers. This query assumes placeholders like `wd:Q123456` for Louis IV and similar for others.",6,6,7,3,3,3,3,71,0,0,1,0,0.0,0
93,19,test,"Give me the death place of the governor of the native, that is a politician, of Seattle and capital of the headquarter, that is a region and a settlement, of Lake Clark National Park and Preserve.",SELECT ?result WHERE { ?v0 <http://dbpedia.org/property/governor> ?v4 . <http://dbpedia.org/resource/Lake_Clark_National_Park_and_Preserve> <http://dbpedia.org/ontology/location> ?v2 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Region>. ?v0 <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Seattle> . ?v4 <http://dbpedia.org/ontology/deathPlace> ?result . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. ?v2 <http://dbpedia.org/ontology/capital> ?result . },"```sparql
# Step 1: Find the current governor of Washington State
SELECT ?governor WHERE {
  ?governor dbo:officeHolderOf dbr:Governor_of_Washington .
  ?governor dbo:birthPlace ?birthPlace .
  ?governor dbo:deathPlace ?deathPlace .
}

# Step 2: Identify a significant settlement near Lake Clark National Park and Preserve
SELECT ?settlement WHERE {
  ?park rdf:type dbo:NationalPark ;
        rdfs:label ""Lake Clark National Park and Preserve""@en .
  ?settlement dbo:near dbr:Lake_Clark_National_Park_and_Preserve ;
              rdf:type dbo:Settlement .
}

# Step 3: Find the death place of the governor (if applicable)
SELECT ?deathPlace WHERE {
  ?governor dbo:officeHolderOf dbr:Governor_of_Washington .
  ?governor dbo:deathPlace ?deathPlace .
}
```",5,8,6,3,2,3,2,20,0,0,1,0,0.0,0
865,58,test,"Give me the father of the child of the father of Abul Maal Abdul Muhith and native of British Raj and father of the child, that is a politician, of Abu Ahmad Abdul Hafiz.",SELECT ?result WHERE { ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. <http://dbpedia.org/resource/Abul_Maal_Abdul_Muhith> <http://dbpedia.org/property/father> ?v5 . ?v4 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Abu_Ahmad_Abdul_Hafiz> . ?v2 <http://dbpedia.org/property/father> ?v5 . ?v2 <http://dbpedia.org/property/father> ?result . ?v4 <http://dbpedia.org/property/father> ?result . ?result <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/British_Raj> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?person WHERE {
  # Step 1: Find Abul Maal Abdul Muhith's father
  ?muhith dbr:Abul_Maal_Abdul_Muhith .
  ?muhith dbo:father ?fatherMuhith .

  # Step 2: Find the child of Abul Maal Abdul Muhith's father who is native of British Raj
  ?childFatherMuhith dbo:parent ?fatherMuhith ;
                     dbo:nationality dbr:British_Raj .

  # Step 3: Find Abu Ahmad Abdul Hafiz's child that is a politician
  ?hafiz dbr:Abu_Ahmad_Abdul_Hafiz .
  ?childHafiz dbo:parent ?fatherHafiz ;
             dbo:occupation dbr:Politician .

  # Step 4: Find the common person who satisfies both conditions
  FILTER (?childFatherMuhith = ?fatherHafiz)
  
  BIND(?fatherMuhith AS ?person)
}
```",6,7,7,3,3,3,3,71,0,0,1,0,0.0,0
976,70,test,"Give me the office of the mayor, that is a politician and an office holder and Turkish, of the reference, that is an organisation and a political party and Turkish, to Millet İttifakı and office of the person born as the birth name of Naci Bostancı and office of the leader, that is a politician, of Grand National Assembly of Turkey.","SELECT ?result WHERE { ?v0 <http://dbpedia.org/property/office> ?result . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v6 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v3 <http://dbpedia.org/property/office> ?result . ?v0 <http://dbpedia.org/property/birthName> ?v5 . ?v6 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v1 <http://dbpedia.org/property/leader> ?v6 . ?v1 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Turkey>. ?v6 <http://dbpedia.org/property/office> ?result . <http://dbpedia.org/resource/Grand_National_Assembly_of_Turkey> <http://dbpedia.org/ontology/leader> ?v3 . ?v6 <http://dbpedia.org/ontology/nationality> <http://dbpedia.org/resource/Turkey>. ?v1 <http://xmlns.com/foaf/0.1/name> ""Millet İttifakı""@en . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/PoliticalParty>. <http://dbpedia.org/resource/Naci_Bostancı> <http://dbpedia.org/property/birthName> ?v5 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT DISTINCT ?officeMayor ?officeMilletİttifakı ?officeNaciBostancı ?officeLeaderGNA
WHERE {
  # Office of the Mayor who is a politician and Turkish
  ?person dbo:nationality dbr:Turkey ;
          dbo:occupation dbr:Politician .
  ?person dbo:holdsPoliticalOffice ?officeMayor .

  # Reference to Millet İttifakı as an organization and political party
  ?milletİttifakı a dbo:Organization, dbo:PoliticalParty ;
                  dbp:name ""Millet İttifakı""@tr .
  
  # Office of Naci Bostancı
  ?naciBostancı foaf:name ""Naci Bostancı"" ;
                dbo:birthName ""Naci Bostancı"" ;
                dbo:holdsPoliticalOffice ?officeNaciBostancı .

  # Leader of Grand National Assembly of Turkey
  ?leader a dbo:Politician ;
          dbo:politicalParty dbr:Millet İttifakı ;
          dbo:headOf ?gna .
  ?gna dbp:name ""Grand National Assembly of Turkey""@tr .
  ?leader dbo:holdsPoliticalOffice ?officeLeaderGNA .

  # Ensure all persons are Turkish
  FILTER (?person = ?naciBostancı && ?person = ?leader)
}
```",8,15,9,3,3,3,3,71,0,0,1,0,0.0,0
976,60,test,"Give me the office of the leader, that is a politician, of the administration, that is an organisation, of Kemal Kılıçdaroğlu and office of the person born as the birth name of Naci Bostancı.",SELECT ?result WHERE { ?v4 <http://dbpedia.org/property/leader> <http://dbpedia.org/resource/Kemal_Kılıçdaroğlu> . ?v4 <http://dbpedia.org/ontology/leader> ?v2 . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?v0 <http://dbpedia.org/property/birthName> ?v5 . <http://dbpedia.org/resource/Naci_Bostancı> <http://dbpedia.org/property/birthName> ?v5 . ?v0 <http://dbpedia.org/property/office> ?result . ?v2 <http://dbpedia.org/property/office> ?result . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?officeKemal ?officeNaci WHERE {
  # Query for Kemal Kılıçdaroğlu's office in the organization he leads
  dbr:Kemal_Kılıçdaroğlu dbo:positionHeld ?position .
  ?position dbo:organization dbr:Republican_People%27s_Party_(Turkey) ;
            dbo:title ?officeKemal .

  # Query for Naci Bostancı's birth name and office
  OPTIONAL {
    dbr:Naci_Bostancı dbo:birthName ?birthName .
  }
  
  dbr:Naci_Bostancı dbo:positionHeld ?positionNaci ;
                    dbo:title ?officeNaci .
}
```",6,8,7,3,2,3,3,71,0,0,1,0,0.0,0
507,65,test,"Give me the spouse of the person born as Anne Voase Coates and director of the movie, that is a movie and a work, with the person born on 1919-06-17 and professional in the profession of Guy Ferland.","SELECT ?result WHERE { ?v6 <http://dbpedia.org/ontology/director> ?result . ?result <http://dbpedia.org/ontology/spouse> ?v4 . ?v6 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?result <http://dbpedia.org/property/occupation> ?v3 . ?v6 <http://dbpedia.org/property/starring> ?v0 . ?v4 <http://dbpedia.org/property/birthName> ""Anne Voase Coates""@en . ?v0 <http://dbpedia.org/ontology/birthDate> ""1919-06-17""^^<http://www.w3.org/2001/XMLSchema#date> . <http://dbpedia.org/resource/Guy_Ferland> <http://dbpedia.org/property/occupation> ?v3 . ?v6 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Film>. }","```sparql
# Step 1: Find Anne Voase Coates and her spouse
SELECT ?spouse WHERE {
  ?anne a dbo:FilmEditor ;
        foaf:name ""Anne Voase Coates""@en .
  OPTIONAL { ?anne dbo:spouse ?spouse . }
}

UNION

# Step 2: Identify a movie directed by Anne Voase Coates that is both a movie and a work
SELECT DISTINCT ?movie WHERE {
  ?anne a dbo:FilmEditor ;
        foaf:name ""Anne Voase Coates""@en .
  ?anne dbo:directed ?movie .
  ?movie a dbo:Film ;
         dbo:genre ?genre .
  FILTER EXISTS { ?movie dbo:abstract ?abstract . }
}

UNION

# Step 3: Find the person born on June 17, 1919, with profession Guy Ferland
SELECT ?person WHERE {
  ?person dbo:birthDate ""1919-06-17""^^xsd:date ;
          foaf:name ?name .
  OPTIONAL { ?person dbo:profession ?profession . }
  FILTER (?profession = ""Guy Ferland""@en)
}

UNION

# Step 4: Determine the spouse of the person found in step 3
SELECT ?spouse WHERE {
  ?person dbo:birthDate ""1919-06-17""^^xsd:date ;
          foaf:name ?name .
  OPTIONAL { ?person dbo:profession ?profession . }
  FILTER (?profession = ""Guy Ferland""@en)
  OPTIONAL { ?person dbo:spouse ?spouse . }
}
```",7,9,8,3,3,3,3,71,0,0,1,0,0.0,0
453,9,test,"Give me the religion of the birth place, that is a country, of William Denning and religion of the author, that is a cardinal and a cleric, of Apologia Pro Vita Sua.",SELECT ?result WHERE { ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Cleric>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Cardinal>. <http://dbpedia.org/resource/William_Denning> <http://dbpedia.org/ontology/birthPlace> ?v1 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. <http://dbpedia.org/resource/Apologia_Pro_Vita_Sua> <http://dbpedia.org/property/author> ?v3 . ?v1 <http://dbpedia.org/ontology/religion> ?result . ?v3 <http://dbpedia.org/ontology/religion> ?result . },"```sparql
# Query for William Denning's birthplace and its religion
SELECT ?birthPlaceLabel ?religionLabel WHERE {
  ?denning dbo:birthPlace ?birthPlace .
  ?denning rdfs:label ""William Denning""@en .
  
  OPTIONAL { 
    ?birthPlace wdt:P31 wd:Q6256 . # Check if birthplace is a country
    ?birthPlace wdt:P464 ?religion . # Get predominant religion of the country
  }
  
  SERVICE wikibase:label { bd:serviceParam wikibase:language ""en"". }
}

UNION

# Query for John Henry Newman's religion
SELECT ?authorLabel ?religionLabel WHERE {
  ?book dbo:author ?newman .
  ?book rdfs:label ""Apologia Pro Vita Sua""@en .
  
  ?newman rdfs:label ""John Henry Newman""@en .
  ?newman wdt:P39 wd:Q36180 . # Cardinal
  ?newman wdt:P106 wd:Q82955 . # Cleric
  
  OPTIONAL {
    ?newman wdt:P140 ?religion . # Get religion of John Henry Newman
  }
  
  SERVICE wikibase:label { bd:serviceParam wikibase:language ""en"". }
}
```",4,7,5,2,2,2,2,9,0,0,1,0,0.0,0
507,71,test,"Give me the professional in the profession of the person born on 1966-02-18 and spouse of the person born as the birth name of Anne V. Coates and director of the movie, that is a movie and a work, with the person born on 1919-06-17.","SELECT ?result WHERE { <http://dbpedia.org/resource/Anne_V._Coates> <http://dbpedia.org/property/birthName> ?v1 . ?v5 <http://dbpedia.org/ontology/director> ?result . ?result <http://dbpedia.org/property/occupation> ?v8 . ?result <http://dbpedia.org/ontology/spouse> ?v2 . ?v7 <http://dbpedia.org/property/occupation> ?v8 . ?v2 <http://dbpedia.org/property/birthName> ?v1 . ?v5 <http://dbpedia.org/property/starring> ?v4 . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Film>. ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?v4 <http://dbpedia.org/ontology/birthDate> ""1919-06-17""^^<http://www.w3.org/2001/XMLSchema#date> . ?v7 <http://dbpedia.org/ontology/birthDate> ""1966-02-18""^^<http://www.w3.org/2001/XMLSchema#date> . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT DISTINCT ?professional WHERE {
  # Step 1: Find the person born on 1966-02-18
  ?person1 dbo:birthday ""1966-02-18""^^xsd:date .
  
  # Step 2: Find Anne V. Coates' spouse
  dbr:Anne_V._Coates dbo:spouse ?coatesSpouse .

  # Step 3: Identify the person born on 1919-06-17
  ?person2 dbo:birthday ""1919-06-17""^^xsd:date .
  
  # Find a movie directed by someone involving both persons and Anne V. Coates' spouse
  ?movie dbo:director ?director ;
         dbo:editor ?coatesSpouse ;
         dbo:starring ?person2 .

  # Step 4: Get the profession of the person born on 1966-02-18
  ?person1 dbo:occupation ?profession .
  
  # Step 5: Find another professional in the same field
  ?professional dbo:occupation ?profession .
}
```",9,11,10,3,3,3,3,71,0,0,1,0,0.0,0
41,26,test,"Give me the party of the work, that is an office holder, of yes and party of Declan Costello and party of the leader, that is a politician and an office holder, of 2005 Castlereagh Borough Council election.","SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/party> ?result . ?v1 <http://dbpedia.org/property/author> ""yes""@en . <http://dbpedia.org/resource/Declan_Costello> <http://dbpedia.org/ontology/party> ?result . ?v4 <http://dbpedia.org/ontology/party> ?result . <http://dbpedia.org/resource/2005_Castlereagh_Borough_Council_election> <http://dbpedia.org/property/leader> ?v4 . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?workParty ?yesParty ?declanCostelloParty ?leaderParty WHERE {
  # Work that is an office holder and a politician
  ?work dbo:officeHolder true .
  ?work dbo:politician true .

  # Political party of the work
  ?work dbo:party ?workParty .

  # Political party ""Yes""
  dbr:Yes dbo:politicalParty ?yesParty .

  # Declan Costello's political party
  dbr:Declan_Costello dbo:party ?declanCostelloParty .

  # Leader of the 2005 Castlereagh Borough Council election
  ?leader dbo:electedDuring [
    dbo:event dbr:2005_Castlereagh_Borough_Council_election ;
    dbo:officeHolder true .
  ] .
  
  # Political party of the leader
  ?leader dbo:party ?leaderParty .
}
```",5,8,6,2,3,2,3,28,0,0,1,0,0.0,0
47,61,test,"Give me the office of the awardee of the entity, that is an award, in India and office of the awardee of the award, that is an award, of Mantu Ghosh.",SELECT ?result WHERE { ?v5 <http://dbpedia.org/property/awards> ?v0 . ?v3 <http://dbpedia.org/property/awards> ?v1 . <http://dbpedia.org/resource/Mantu_Ghosh> <http://dbpedia.org/property/awards> ?v0 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Award>. ?v1 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/India> . ?v5 <http://dbpedia.org/property/office> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Award>. ?v3 <http://dbpedia.org/property/office> ?result . },"```sparql
# Part 1: Office of the Awardee of an Award in India
SELECT DISTINCT ?award ?awardee ?office WHERE {
  ?award dbo:country dbr:India .
  ?award dbo:recipient ?awardee .
  OPTIONAL { ?awardee dbo:position ?office . }
}

UNION

# Part 2: Office of the Awardee of Mantu Ghosh's Awards
SELECT DISTINCT ?award ?awardee ?office WHERE {
  ?award dbo:recipient ?awardee .
  ?awardee foaf:name ""Mantu Ghosh""@en .
  OPTIONAL { ?awardee dbo:position ?office . }
}
```",6,8,7,3,2,3,3,71,0,0,1,0,0.0,0
987,63,test,"Give me the birth place of the band, that is an artist and a musical artist, of the band, that is an artist, of Dado Polumenta and entity in the region, that is a country, of Central European Time and birth place of the actor of All for Free.",SELECT ?result WHERE { ?v3 <http://dbpedia.org/ontology/associatedMusicalArtist> ?v1 . ?result <http://dbpedia.org/ontology/country> ?v0 . ?v5 <http://dbpedia.org/ontology/birthPlace> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. <http://dbpedia.org/resource/All_for_Free> <http://dbpedia.org/property/starring> ?v5 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. ?v1 <http://dbpedia.org/ontology/birthPlace> ?result . <http://dbpedia.org/resource/Dado_Polumenta> <http://dbpedia.org/ontology/associatedMusicalArtist> ?v3 . ?v0 <http://dbpedia.org/property/timeZone> <http://dbpedia.org/resource/Central_European_Time> . },"```sparql
# Step 1: Find Dado Pršo's association with a band and an artist
SELECT ?band WHERE {
  wd:Q1234567 wdt:P106 wd:Q33999 . # Dado Pršo is a member of the band Lepa Brena i Block Out
  wd:Q33999 wdt:P175 wd:Q1234568 . # The band has an artist, Lepa Brena
}

# Step 2: Find Lepa Brena's birth place
SELECT ?birthPlace WHERE {
  wd:Q1234568 wdt:P19 ?birthPlace . # Lepa Brena's birth place
}

# Step 3: Identify a country in the CET region
SELECT DISTINCT ?country WHERE {
  ?region wdt:P30 ?country .
  ?region rdfs:label ""Central European Time""@en .
  FILTER (lang(?region) = 'en')
}

# Step 4: Find an entity related to Dado Pršo or Lepa Brena in the CET country
SELECT DISTINCT ?entity WHERE {
  ?entity wdt:P19 ?country . # Entity is born in a CET country
  OPTIONAL { ?entity wdt:P106 wd:Q33999 } # Related to music/art
}

# Step 5: Find Marko Jarić's birth place
SELECT ?birthPlace WHERE {
  wd:Q1234569 wdt:P19 ?birthPlace . # Marko Jarić's birth place
}
```",7,11,8,3,3,3,3,71,0,0,1,0,0.0,0
216,24,test,Give me the administration of the designer of Woolfe: The Red Hood Diaries and party of the awardee of Australian Defence Medal.,SELECT ?result WHERE { ?result <http://dbpedia.org/property/leader> ?v0 . ?v2 <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/Australian_Defence_Medal> . ?v2 <http://dbpedia.org/ontology/party> ?result . <http://dbpedia.org/resource/Woolfe:_The_Red_Hood_Diaries> <http://dbpedia.org/property/designer> ?v0 . },"```sparql
# Query for the administration of the designer of Woolfe: The Red Hood Diaries
SELECT ?designer ?administration WHERE {
  ?game dbpedia-owl:title ""Woolfe: The Red Hood Diaries""@en .
  ?game dbo:developer ?studio .
  ?studio dbo:employee ?person .
  ?person foaf:name ?designer .
  OPTIONAL { ?person dbo:memberOf ?organization . 
             ?organization dbo:officialName ?administration }
}

UNION

# Query for the party of a notable awardee of the Australian Defence Medal
SELECT ?awardee ?party WHERE {
  ?person dbo:award ""Australian Defence Medal""@en .
  OPTIONAL { ?person foaf:name ?awardee } .
  OPTIONAL { ?person dbo:memberOf ?organization .
             ?organization dbo:officialName ?party }
}
```",4,4,5,2,2,2,3,28,0,0,1,0,0.0,0
124,71,test,"Give me the commander in the war, that is a societal event and a military conflict, of the reference, that is Australian and an organisation and a military unit, to 'A' Battery, Royal Australian Artillery and military force of the force, that is a societal event and a military conflict, of the person born on 1850-06-24 and military force of the war, that is an event and a military conflict and a societal event, of the awardee of British South Africa Company Medal.","SELECT ?result WHERE { ?v4 <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/British_South_Africa_Company_Medal> . ?v2 <http://dbpedia.org/ontology/commander> ?result . ?v1 <http://dbpedia.org/ontology/battle> ?v2 . ?v8 <http://dbpedia.org/ontology/commander> ?v7 . ?v8 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?v1 <http://xmlns.com/foaf/0.1/name> ""'A' Battery, Royal Australian Artillery""@en . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?v7 <http://dbpedia.org/ontology/birthDate> ""1850-06-24""^^<http://www.w3.org/2001/XMLSchema#date> . ?v8 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryUnit>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?result <http://dbpedia.org/ontology/battle> ?v5 . ?v4 <http://dbpedia.org/ontology/battle> ?v5 . ?v1 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Australia>. ?result <http://dbpedia.org/ontology/battle> ?v8 . }","```sparql
# Step 1: Find the person born on 1850-06-24 involved in a war
SELECT ?person ?war WHERE {
  ?person dbo:birthDate ""1850-06-24""^^xsd:date .
  ?person dbo:militaryConflict ?war .
}

# Step 2: Identify wars and military forces for this person
SELECT DISTINCT ?war ?militaryForce WHERE {
  ?person dbo:militaryConflict ?war .
  ?person dbo:militaryUnit ?militaryForce .
}

# Step 3: Find 'A' Battery, Royal Australian Artillery and its commander during relevant conflicts
SELECT DISTINCT ?battery ?commander ?conflict WHERE {
  ?battery rdf:type dbo:MilitaryUnit ;
           rdfs:label ""A Battery, Royal Australian Artillery""@en ;
           dbo:participatedIn ?conflict .
  OPTIONAL { ?conflict dbo:commander ?commander . }
}

# Step 4: Determine the military force of 'A' Battery
SELECT DISTINCT ?battery ?militaryForce WHERE {
  ?battery rdf:type dbo:MilitaryUnit ;
           rdfs:label ""A Battery, Royal Australian Artillery""@en .
  ?battery dbo:militaryBranch ?militaryForce .
}
```",9,19,10,3,3,3,3,71,0,0,9,0,0.0,0
935,20,test,"Give me the headquarter of the office of the native of Balochistan, Pakistan and death place of the awardee of the award, that is an award, of Syed Sohail Hussain Naqvi.","SELECT ?result WHERE { ?v5 <http://dbpedia.org/ontology/location> ?result . ?v2 <http://dbpedia.org/property/awards> ?v1 . ?v4 <http://dbpedia.org/property/office> ?v5 . ?v4 <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Balochistan,_Pakistan> . ?v2 <http://dbpedia.org/ontology/deathPlace> ?result . <http://dbpedia.org/resource/Syed_Sohail_Hussain_Naqvi> <http://dbpedia.org/property/awards> ?v1 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Award>. }","```sparql
# Query to find the award received by Syed Sohail Hussain Naqvi
SELECT ?award WHERE {
  ?person dbo:birthName ""Syed Sohail Hussain Naqvi"" .
  ?person dbo:honoraryTitle ?award .
}

# Query to find the death place of Syed Sohail Hussain Naqvi
SELECT ?deathPlace WHERE {
  ?person dbo:birthName ""Syed Sohail Hussain Naqvi"" .
  ?person dbo:deathPlace ?deathPlace .
}

# Query to find the headquarter of the office for natives of Balochistan, Pakistan
SELECT ?headquarter WHERE {
  ?region rdfs:label ""Balochistan""@en .
  ?region dbo:country dbr:Pakistan .
  ?office dbo:location ?region ;
          dbo:headquarters ?headquarter .
}
```",6,7,7,3,2,3,2,20,0,0,1,0,0.0,0
122,9,test,"Give me the band of the reference, that is a musical artist and an artist, to Gift of Gab and band member of the band of Gift of Gab (rapper).","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/associatedMusicalArtist> ?v1 . ?v3 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . <http://dbpedia.org/resource/Gift_of_Gab_(rapper)> <http://dbpedia.org/ontology/associatedMusicalArtist> ?v1 . ?v3 <http://xmlns.com/foaf/0.1/name> ""Gift of Gab""@en . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?band ?artist WHERE {
  # Find the band associated with Gift of Gab
  dbr:Gift_of_Gab dbo:memberOf ?band .

  # Find artists in that band who are also known as artists in another context
  ?band dbo:member ?artist .
  ?artist a dbo:MusicalArtist ;
          dbo:occupation ?occupation .
  
  FILTER(CONTAINS(LCASE(?occupation), ""artist""))
}
```",4,6,5,2,2,2,2,9,0,0,3,0,0.0,0
987,66,test,"Give me the entity in the region, that is a country, of the time zone, that is a sports event, in Canicosa de la Sierra and birth place of the band, that is an artist and a musical artist, of Šako Polumenta and birth place of the actor of All for Free.",SELECT ?result WHERE { ?v0 <http://dbpedia.org/property/timeZone> ?v5 . ?v6 <http://dbpedia.org/ontology/birthPlace> ?result . <http://dbpedia.org/resource/Canicosa_de_la_Sierra> <http://dbpedia.org/ontology/timeZone> ?v5 . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsEvent>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. <http://dbpedia.org/resource/Šako_Polumenta> <http://dbpedia.org/ontology/associatedMusicalArtist> ?v3 . <http://dbpedia.org/resource/All_for_Free> <http://dbpedia.org/property/starring> ?v6 . ?v3 <http://dbpedia.org/ontology/birthPlace> ?result . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?result <http://dbpedia.org/ontology/country> ?v0 . },"```sparql
# Step 1: Find the time zone of Canicosa de la Sierra
SELECT ?timeZone WHERE {
  dbpedia:Canicosa_de_la_Sierra dbo:timezone ?timeZone .
}

# Step 2: Identify sports events in that time zone
SELECT DISTINCT ?sportsEvent WHERE {
  ?sportsEvent dbo:locationTimezone ?timeZone .
  FILTER(?timeZone IN ({{timeZone}})) # Replace {{timeZone}} with the actual value from step 1
}

# Step 3: Determine the region and country for these sports events
SELECT DISTINCT ?country WHERE {
  ?sportsEvent dbo:locationCountry ?country .
  FILTER(STRSTARTS(STR(?sportsEvent), ""http://dbpedia.org/resource/"")) # Ensure it's a DBpedia resource
}

# Step 4: Find Šako Polumenta's band and its birthplace
SELECT DISTINCT ?bandBirthPlace WHERE {
  dbpedia:Sako_Polumenta dbo:associatedBand ?band .
  ?band dbo:birthPlace ?bandBirthPlace .
}

# Step 5: Identify the actor of ""All for Free"" and their birthplace
SELECT DISTINCT ?actorBirthPlace WHERE {
  dbpedia:All_for_Free dbo:starring ?actor .
  ?actor dbo:birthPlace ?actorBirthPlace .
}

# Step 6: Match entities (country) that are common to both band's and actor's birthplaces
SELECT DISTINCT ?entity WHERE {
  VALUES (?bandBirthPlace ?actorBirthPlace) { 
    (<{{bandBirthPlace}}>) (<{{actorBirthPlace}}>) # Replace with actual values from steps 4 and 5
  }
  
  ?entity rdf:type dbo:Country .
  FILTER(?entity IN ({{country}})) # Replace {{country}} with the result from step 3
}
```",7,11,8,3,3,3,3,71,0,0,1,0,0.0,0
976,68,test,"Give me the office of the person born as Mehmet Naci Bostancı and office of the leader, that is a politician, of the administration, that is an organisation, of Kemal Kılıçdaroğlu and office of the mayor, that is a politician and an office holder and Turkish, of the reference, that is an organisation and a political party and Turkish, to Millet İttifakı.","SELECT ?result WHERE { ?v2 <http://dbpedia.org/property/office> ?result . ?v1 <http://dbpedia.org/property/leader> ?v6 . ?v6 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v4 <http://dbpedia.org/property/leader> <http://dbpedia.org/resource/Kemal_Kılıçdaroğlu> . ?v6 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v0 <http://dbpedia.org/property/birthName> ""Mehmet Naci Bostancı""@en . ?v6 <http://dbpedia.org/property/office> ?result . ?v1 <http://xmlns.com/foaf/0.1/name> ""Millet İttifakı""@en . ?v6 <http://dbpedia.org/ontology/nationality> <http://dbpedia.org/resource/Turkey>. ?v1 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Turkey>. ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?v0 <http://dbpedia.org/property/office> ?result . ?v4 <http://dbpedia.org/ontology/leader> ?v2 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/PoliticalParty>. }","```sparql
# Find office of Mehmet Naci Bostancı
SELECT ?office WHERE {
  ?person foaf:name ""Mehmet Naci Bostancı""@tr .
  OPTIONAL { ?person dbo:birthName ""Mehmet Naci Bostancı""@tr . }
  ?person dbo:positionHeld ?position .
  ?position dbo:positionTitle ?office .
}

UNION

# Find office of the leader of Kemal Kılıçdaroğlu's organization
SELECT ?leaderOffice WHERE {
  ?kemal foaf:name ""Kemal Kılıçdaroğlu""@tr .
  ?organization dbo:president ?kemal ;
                a dbo:Organization .
  ?leader dbo:positionHeld ?position ;
          ?position dbo:positionTitle ?leaderOffice .
}

UNION

# Find office of the mayor associated with Millet İttifakı
SELECT ?mayorOffice WHERE {
  ?party foaf:name ""Millet İttifakı""@tr ;
         a dbo:PoliticalParty .
  ?mayor dbo:nationality dbr:Turkey ;
         dbo:positionHeld ?position ;
         ?position dbo:positionTitle ?mayorOffice .
  FILTER EXISTS { ?mayor dbo:memberOf ?party }
}
```",8,16,9,3,3,3,3,71,0,0,1,0,0.0,0
508,19,test,"Give me the birthplace of the commander, that is a politician, in 1939–1940 Winter Offensive and birthplace of the commander, that is Saudi, in the war, that is a military conflict and a societal event, of Hu Yukun.",SELECT ?result WHERE { ?v4 <http://dbpedia.org/ontology/birthPlace> ?result . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?v4 <http://dbpedia.org/ontology/nationality> <http://dbpedia.org/resource/Saudi_Arabia>. <http://dbpedia.org/resource/Hu_Yukun> <http://dbpedia.org/ontology/battle> ?v0 . ?v2 <http://dbpedia.org/ontology/birthPlace> ?result . ?v0 <http://dbpedia.org/ontology/commander> ?v4 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. <http://dbpedia.org/resource/1939–1940_Winter_Offensive> <http://dbpedia.org/ontology/commander> ?v2 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. },"```sparql
# Query to find the birthplace of Georgy Zhukov
SELECT ?birthPlace WHERE {
  wd:Q1234 dbo:birthPlace ?birthPlace .
}

UNION

# Query to find the birthplace of Prince Khalid bin Salman
SELECT ?birthPlace WHERE {
  wd:Q1234567 dbo:birthPlace ?birthPlace .
}
```

Note: `wd:Q1234` and `wd:Q1234567` are placeholders for the actual DBpedia identifiers for Georgy Zhukov and Prince Khalid bin Salman, respectively. You would need to replace these with the correct QIDs from DBpedia.",5,9,6,3,2,3,2,20,0,0,3,0,0.0,0
507,63,test,"Give me the director of the movie, that is a movie and a work, with Beryl Reid and professional in the profession of Guy Ferland and spouse of the person born as the birth name of Anne V. Coates.",SELECT ?result WHERE { ?v6 <http://dbpedia.org/property/starring> <http://dbpedia.org/resource/Beryl_Reid> . ?v6 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?v6 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Film>. ?v6 <http://dbpedia.org/ontology/director> ?result . <http://dbpedia.org/resource/Guy_Ferland> <http://dbpedia.org/property/occupation> ?v2 . <http://dbpedia.org/resource/Anne_V._Coates> <http://dbpedia.org/property/birthName> ?v4 . ?v3 <http://dbpedia.org/property/birthName> ?v4 . ?result <http://dbpedia.org/property/occupation> ?v2 . ?result <http://dbpedia.org/ontology/spouse> ?v3 . },"```sparql
SELECT DISTINCT ?director WHERE {
  ?movie a dbo:Film ;
         dbo:starring ?actor1 ;
         dbo:starring ?actor2 .
  
  ?actor1 foaf:name ""Beryl Reid""@en.
  
  ?actor2 foaf:name ?professionalName .
  ?professional foaf:name ?professionalName .
  ?professional dbo:worksFor|dbo:colleagueOf|dbo:collaborator ?ferland .
  ?ferland foaf:name ""Guy Ferland""@en .

  ?coates foaf:name ""Anne V. Coates""@en ;
          dbo:spouse ?spouse .
  
  ?movie dbo:starring ?spouse .

  ?director dbo:directed ?movie ;
            foaf:name ?directorName .
}
```",7,9,8,3,3,3,3,71,0,0,1,0,0.0,0
645,67,test,"Give me the commander in Battle of Jarama and military force of the force, that is an event and a military conflict and a societal event, of the native, that is a president and a politician, of Restoration (Spain) and leader of the office, that is a government agency and an organisation, of the native of Restoration (Spain).",SELECT ?result WHERE { ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?v1 <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Restoration_(Spain)> . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/President>. ?v3 <http://dbpedia.org/ontology/leader> ?result . ?v1 <http://dbpedia.org/property/office> ?v3 . <http://dbpedia.org/resource/Battle_of_Jarama> <http://dbpedia.org/ontology/commander> ?result . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?result <http://dbpedia.org/ontology/battle> ?v6 . ?v6 <http://dbpedia.org/ontology/commander> ?v0 . ?v0 <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Restoration_(Spain)> . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/GovernmentAgency>. ?v6 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v6 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?v6 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. },"```sparql
SELECT ?commander ?militaryForce WHERE {
  # Identify Alfonso XIII as a native of Restoration (Spain) and his role
  ?alfonso13 wdt:P31 wd:Q215627; 
             wdt:P69 wd:Q1116; # P69 is ""head of state"" for Spain

  # Find the government agency or office he led
  ?office wdt:P1128 ?alfonso13; # P1128 is ""leader of""

  # Identify the Spanish Civil War as a military conflict and societal event involving Alfonso XIII's forces
  ?civilWar wdt:P31 wd:Q215627; 
            wdt:P361 wd:Q1116; # P361 is ""part of"" for Spain

  # Find the Battle of Jarama within the Spanish Civil War
  ?battleOfJarama wdt:P361 wd:Q2160; # Q2160 is the Battle of Jarama
                   wdt:P31 wd:Q215627; 

  # Identify the commander and military force involved in the Battle of Jarama
  ?commander wdt:P39 ?battleOfJarama; # P39 is ""commander""
             rdfs:label ?commanderLabel FILTER (lang(?commanderLabel) = ""en"").
  
  ?militaryForce wdt:P527 ?commander; # P527 is ""part of military unit""
                 rdfs:label ?forceLabel FILTER (lang(?forceLabel) = ""en"").

}
```",7,14,8,3,3,3,3,71,0,0,1,0,0.0,0
507,60,test,Give me the spouse of the person born as the birth name of Anne V. Coates and professional in the profession of the person born on 1966-02-18.,"SELECT ?result WHERE { ?v2 <http://dbpedia.org/property/birthName> ?v3 . ?v0 <http://dbpedia.org/property/occupation> ?v1 . ?v0 <http://dbpedia.org/ontology/birthDate> ""1966-02-18""^^<http://www.w3.org/2001/XMLSchema#date> . ?result <http://dbpedia.org/property/occupation> ?v1 . <http://dbpedia.org/resource/Anne_V._Coates> <http://dbpedia.org/property/birthName> ?v3 . ?result <http://dbpedia.org/ontology/spouse> ?v2 . }","```sparql
# Step 1: Get Anne V. Coates' birth name
SELECT ?birthName WHERE {
  dbpedia:Anne_V._Coates dbo:birthName ?birthName .
}

# Step 2: Find a person with that birth name (assuming the result is ""X"")
SELECT ?person WHERE {
  ?person dbo:birthName ""X""@en .
}

# Step 3: Get the profession of the person born on February 18, 1966
SELECT ?profession WHERE {
  ?person dbp:birthday ""1966-02-18""^^xsd:date ;
          dbo:occupation ?profession .
}

# Step 4: Find another individual with that profession (assuming the result is ""Y"")
SELECT ?individual WHERE {
  ?individual dbo:occupation ?profession .
  FILTER(?individual != ?person) # Ensure it's not the same person
}

# Step 5: Get the spouse of this individual
SELECT ?spouse WHERE {
  ?individual dbo:spouse ?spouse .
}
```

Note: Replace `""X""` and `?profession` with actual values obtained from previous query results.",6,6,7,3,2,3,3,71,0,0,1,0,0.0,0
645,66,test,"Give me the commander in the force of Carlos Asensio Cabanillas and leader of the office, that is a government agency and an organisation, of the native of Restoration (Spain) and military force of the force, that is an event and a military conflict and a societal event, of Francisco Largo Caballero.",SELECT ?result WHERE { ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?v3 <http://dbpedia.org/ontology/commander> ?result . ?v6 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?v6 <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Francisco_Largo_Caballero> . ?v6 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?v1 <http://dbpedia.org/property/office> ?v2 . ?v1 <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Restoration_(Spain)> . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/GovernmentAgency>. ?v3 <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Carlos_Asensio_Cabanillas> . ?v6 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v2 <http://dbpedia.org/ontology/leader> ?result . ?result <http://dbpedia.org/ontology/battle> ?v6 . },"```sparql
SELECT ?commander WHERE {
  ?asensio dbo:rank dbr:General;
           dbo:commandedBy ?commander.
  
  ?cabanillas dbo:nationality dbr:Spain;
              dbo:birthPlace dbr:Restoration_(Spain);
              dbo:leaderOf ?organization.

  ?civilWar dbo:name ""Spanish Civil War"";
            dbo:eventParticipant ?largoCaballero;
            dbo:eventParticipant ?asensio.

  ?largoCaballero foaf:name ""Francisco Largo Caballero"".

  FILTER(?commander = ?cabanillas)
}
```",7,12,8,3,3,3,3,71,0,0,2,0,0.0,0
465,59,test,"Give me the successor of the child of the parent of Ercole II d'Este, Duke of Ferrara and spouse of the child, that is a royalty, of the parent of Elizabeth of Austria (1526–1545).","SELECT ?result WHERE { ?v0 <http://dbpedia.org/ontology/child> ?v5 . ?v2 <http://dbpedia.org/ontology/successor> ?result . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v0 <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Elizabeth_of_Austria_(1526–1545)> . <http://dbpedia.org/resource/Ercole_II_d'Este,_Duke_of_Ferrara> <http://dbpedia.org/ontology/parent> ?v3 . ?v2 <http://dbpedia.org/property/father> ?v3 . ?result <http://dbpedia.org/ontology/spouse> ?v5 . }","```sparql
SELECT ?successor WHERE {
  # Step 1: Identify Ercole II d'Este's parent
  dbp:Ercole_II_d%27Este dbo:parent ?ercoleParent .

  # Step 2: Find the child of Ercole II d'Este's parent who is a royalty and spouse
  ?child dbo:parent ?ercoleParent .
  ?child rdf:type dbo:Monarch .
  ?child dbo:spouse ?spouse .

  # Step 3: Identify Elizabeth of Austria's parent
  dbp:Elizabeth_of_Austria_(1526–1545) dbo:parent ?elizabethParent .

  # Step 4: Find the spouse who is related to Elizabeth of Austria's parent
  ?spouse dbo:childOf ?elizabethParent .

  # Step 5: Determine the successor of the identified spouse
  ?spouse dbo:successor ?successor .
}
```",6,7,7,3,2,3,3,71,0,0,1,0,0.0,0
917,63,test,"Give me the parent of the child, that is a royalty, of the mayor of Hawaiian Kingdom and child of the father of Kamehameha IV and child of the father of Keʻelikōlani.",SELECT ?result WHERE { <http://dbpedia.org/resource/Keʻelikōlani> <http://dbpedia.org/property/father> ?v5 . <http://dbpedia.org/resource/Kamehameha_IV> <http://dbpedia.org/property/father> ?v0 . ?result <http://dbpedia.org/property/father> ?v0 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. <http://dbpedia.org/resource/Hawaiian_Kingdom> <http://dbpedia.org/property/leader> ?v3 . ?result <http://dbpedia.org/ontology/child> ?v1 . ?result <http://dbpedia.org/ontology/parent> ?v5 . ?v1 <http://dbpedia.org/property/father> ?v3 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?parent WHERE {
  # Mayor of Hawaiian Kingdom
  ?mayor dbo:positionTitle ""Mayor""@en;
         dbo:country dbr:Hawaiian_Kingdom.

  # Royalty child of the mayor
  ?child dbo:parent ?mayor;
         a dbo:Monarch.

  # Father of Kamehameha IV (Kamehameha III)
  ?kamehamehaIV dbo:father dbr:Kamehameha_III.

  # Child of father of Kamehameha IV
  ?child2 dbo:parent dbr:Kamehameha_III;
          a dbo:Monarch.

  # Father of Keʻelikōlani (Kahekili Naiʻa)
  ?keelikolani dbo:father dbr:High_Chief_Kahekili_Nai'a.

  # Child of father of Keʻelikōlani
  ?child3 dbo:parent dbr:High_Chief_Kahekili_Nai'a;
          a dbo:Monarch.

  # Common child
  VALUES ?commonChild { ?child ?child2 ?child3 }

  # Parent of the common child
  ?commonChild dbo:parent ?parent.
}
```",7,8,8,3,3,3,3,71,0,0,2,0,0.0,0
917,69,test,"Give me the parent of the child, that is a royalty, of the mayor of Hawaiian Kingdom and child of the father of the child, that is a royalty, of Kamehameha III and child of the father of Keʻelikōlani.",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/parent> ?v6 . <http://dbpedia.org/resource/Kamehameha_III> <http://dbpedia.org/ontology/child> ?v5 . <http://dbpedia.org/resource/Keʻelikōlani> <http://dbpedia.org/property/father> ?v6 . ?result <http://dbpedia.org/ontology/child> ?v2 . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?result <http://dbpedia.org/property/father> ?v0 . ?v5 <http://dbpedia.org/property/father> ?v0 . ?v2 <http://dbpedia.org/property/father> ?v4 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. <http://dbpedia.org/resource/Hawaiian_Kingdom> <http://dbpedia.org/property/leader> ?v4 . },"```sparql
# Step 1: Find the mayor of the Hawaiian Kingdom and their royal child
SELECT ?mayor ?royalChild WHERE {
  ?mayor dbo:position ""Mayor""@en .
  ?mayor dbo:country dbr:Hawaiian_Kingdom .
  ?child dbo:parent ?mayor ;
         rdf:type dbo:RoyalPerson .
}

# Step 2: Find the children of Kamehameha III who were royalty
SELECT ?kamehamehaChild WHERE {
  dbr:Kamehameha_III dbo:child ?kamehamehaChild .
  ?kamehamehaChild rdf:type dbo:RoyalPerson .
}

# Step 3: Find the father of Keʻelikōlani
SELECT ?father WHERE {
  dbr:Keʻelikōlani dbo:parent ?father .
}

# Step 4: Combine to find the parent of the specified child
SELECT ?parent WHERE {
  # Assuming we have identified specific individuals from previous queries
  ?child1 dbo:parent ?mayor ;
          rdf:type dbo:RoyalPerson .
  ?child2 dbo:parent ?kamehamehaChild ;
          rdf:type dbo:RoyalPerson .
  ?child3 dbo:parent ?father .

  # Find the parent of the child that is a royalty
  ?parent dbo:parent ?child1 .
}
```",8,10,9,3,3,3,3,71,0,0,2,0,0.0,0
573,64,test,"Give me the parent of the author, that is a politician and an office holder, of the work of John Quincy Adams and person decedent at Quincy, Massachusetts and person decedent at the administration, that is a region, of the real name of Charlie Baker (Australian footballer).","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/deathPlace> <http://dbpedia.org/resource/Quincy,_Massachusetts> . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v0 <http://dbpedia.org/property/author> ?v1 . ?result <http://dbpedia.org/ontology/deathPlace> ?v2 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Region>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. <http://dbpedia.org/resource/Charlie_Baker_(Australian_footballer)> <http://xmlns.com/foaf/0.1/name> ?v3 . ?v0 <http://dbpedia.org/property/author> <http://dbpedia.org/resource/John_Quincy_Adams> . ?v1 <http://dbpedia.org/ontology/parent> ?result . ?v2 <http://dbpedia.org/property/governor> ?v3 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?parent WHERE {
  # Step 1: Identify John Quincy Adams' work
  ?work dbo:author dbr:John_Quincy_Adams .
  
  # Step 2: Find the parent of John Quincy Adams who is a politician/office holder
  dbr:John_Quincy_Adams dbo:parent ?parent .
  ?parent a dbo:Politician ;
          a dbo:OfficeHolder .

  # Step 3: Determine decedent locations for John Quincy Adams
  dbr:John_Quincy_Adams dbo:placeOfDeath dbr:Quincy,_Massachusetts .
  
  # Find the administration region related to Charlie Baker (Australian footballer)
  ?charlieBaker a dbo:Person ;
                foaf:name ""Charlie Baker"" ;
                dbo:birthPlace ?region .
  ?region dbo:administrativeRegion ?administration .

  # Step 4: Identify decedent location in the administration
  ?parent dbo:placeOfDeath ?administration .

}
```",7,10,8,3,3,3,3,71,0,0,2,0,0.0,0
645,59,test,"Give me the commander in the force of the commander in Siege of Madrid and military force of the force, that is an event and a military conflict and a societal event, of the native, that is a president and a politician, of Restoration (Spain).",SELECT ?result WHERE { ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?v5 <http://dbpedia.org/ontology/commander> ?v0 . ?v2 <http://dbpedia.org/ontology/commander> ?v3 . ?v0 <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Restoration_(Spain)> . <http://dbpedia.org/resource/Siege_of_Madrid> <http://dbpedia.org/ontology/commander> ?v3 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?result <http://dbpedia.org/ontology/battle> ?v5 . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/President>. ?v2 <http://dbpedia.org/ontology/commander> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?commander WHERE {
  ?siege dbo:event = dbr:Siege_of_Madrid .
  ?siege dbo:commander = ?commander .

  ?miguel dbo:occupation = dbo:Politician ;
          dbo:positionHeld = dbr:Prime_Minister_of_Spain ;
          dbo:nationality = dbr:Spain .

  ?commander dbo:associatedWith = ?miguel .
}
```",6,11,7,3,2,3,3,71,0,0,53,0,0.0,0
839,58,test,"Give me the band of the band, that is a musical artist, of the professional in Musician and band of the member of Böhse Onkelz and band of Kevin Russell (musician).","SELECT ?result WHERE { <http://dbpedia.org/resource/Böhse_Onkelz> <http://dbpedia.org/ontology/bandMember> ?v5 . ?v1 <http://dbpedia.org/ontology/associatedMusicalArtist> ?v2 . ?result <http://dbpedia.org/ontology/bandMember> ?v5 . <http://dbpedia.org/resource/Kevin_Russell_(musician)> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v1 <http://dbpedia.org/property/occupation> ""Musician""@en . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?result <http://dbpedia.org/ontology/bandMember> ?v2 . }","```sparql
# Step 1: Find Kevin Russell's Band
SELECT ?band WHERE {
  wd:Q1234567 dbo:musicGroup ?band .
}

# Step 2: Identify a Böhse Onkelz Member who is also a musician
SELECT DISTINCT ?member WHERE {
  wd:Q7890123 dbo:member ?member .
  ?member rdf:type wd:Q11424 . # Musician type
}

# Step 3: Find the band of the identified Böhse Onkelz member
SELECT ?band WHERE {
  ?member dbo:musicGroup ?band .
  FILTER(?member IN (VALUES ?member {<http://dbpedia.org/resource/Member_of_Böhse_Onkelz>}))
}

# Step 4: Identify the musical artist associated with that band
SELECT ?artist WHERE {
  ?band dbo:associatedBand ?artist .
}
```

Note: Replace `wd:Q1234567` and `wd:Q7890123` with the actual DBpedia resource identifiers for Kevin Russell and Böhse Onkelz, respectively. The queries assume these identifiers are known or can be looked up.",6,7,7,3,3,3,3,71,0,0,1,0,0.0,0
965,57,test,"Give me the spouse of Prince Louis of Battenberg and parent of the child, that is a royalty, of the person born, that is a politician, on 1854-05-24 and parent of the person born, that is a noble, as Prince George of Battenberg.","SELECT ?result WHERE { ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?result <http://dbpedia.org/ontology/spouse> <http://dbpedia.org/resource/Prince_Louis_of_Battenberg> . ?v4 <http://dbpedia.org/ontology/parent> ?result . ?v0 <http://dbpedia.org/property/birthName> ""Prince George of Battenberg""@en . ?v1 <http://dbpedia.org/ontology/birthDate> ""1854-05-24""^^<http://www.w3.org/2001/XMLSchema#date> . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v0 <http://dbpedia.org/ontology/parent> ?result . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Noble>. ?v4 <http://dbpedia.org/property/father> ?v1 . }","```sparql
SELECT ?politician ?royalChild ?spouse WHERE {
  # Step 1: Find the politician born on 1854-05-24
  ?politician dbo:birthDate ""1854-05-24""^^xsd:date ;
              rdf:type dbo:Politician .

  # Step 2: Identify their child who is royalty and parent of Prince George of Battenberg
  ?royalChild dbo:parent ?politician ;
              rdf:type dbo:RoyalFamilyMember ;
              dbo:child ?princeGeorge .
  
  ?princeGeorge rdfs:label ""Prince George of Battenberg""@en .

  # Step 3: Find the spouse of Prince Louis of Battenberg
  ?spouse dbo:spouse ?royalChild ;
          dbo:spouse ?princeLouis .
  
  ?princeLouis rdfs:label ""Prince Louis of Battenberg""@en .
}
```",6,9,7,3,3,3,3,71,0,0,1,0,0.0,0
445,64,test,"Give me the death place of Patrick Moore and entity in the residence, that is a country, of the resident, that is an athlete, of Great Britain and entity in the award of the commander in Battle of Saint-Mihiel.",SELECT ?result WHERE { <http://dbpedia.org/resource/Patrick_Moore> <http://dbpedia.org/ontology/deathPlace> ?result . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. ?result <http://dbpedia.org/ontology/location> ?v2 . ?v3 <http://dbpedia.org/property/residence> ?v2 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Athlete>. ?result <http://dbpedia.org/ontology/country> ?v1 . ?v0 <http://dbpedia.org/property/awards> ?v1 . <http://dbpedia.org/resource/Battle_of_Saint-Mihiel> <http://dbpedia.org/ontology/commander> ?v0 . ?v3 <http://dbpedia.org/property/residence> <http://dbpedia.org/resource/Great_Britain> . },"```sparql
# Query for Patrick Moore's death place
SELECT ?deathPlace WHERE {
  dbpedia:Patrick_Moore dbo:placeOfBirth ?birthPlace .
  dbpedia:Patrick_Moore dbo:deathPlace ?deathPlace .
}

UNION

# Query for a British athlete's country of residence
SELECT ?country WHERE {
  ?athlete dbo:nationality dbr:United_Kingdom ;
           dbo:residenceLocation ?location .
  ?location geo:hasCountryCode ?country .
}

UNION

# Query for the commander in Battle of Saint-Mihiel and their award entity
SELECT ?awardEntity WHERE {
  dbpedia:Battle_of_Saint-Mihiel dbo:commander ?commander .
  ?commander dbo:receivedAward ?award .
  ?award dbo:entity ?awardEntity .
}
```",7,9,8,3,3,3,3,71,0,0,1,0,0.0,0
573,60,test,"Give me the person decedent at the administration, that is a region, of the real name of Charlie Baker (Australian footballer) and parent of the author, that is a politician and an office holder, of the work of John Quincy Adams.",SELECT ?result WHERE { ?v0 <http://dbpedia.org/property/author> <http://dbpedia.org/resource/John_Quincy_Adams> . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Region>. <http://dbpedia.org/resource/Charlie_Baker_(Australian_footballer)> <http://xmlns.com/foaf/0.1/name> ?v3 . ?v2 <http://dbpedia.org/property/governor> ?v3 . ?result <http://dbpedia.org/ontology/deathPlace> ?v2 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v1 <http://dbpedia.org/ontology/parent> ?result . ?v0 <http://dbpedia.org/property/author> ?v1 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. },"```sparql
# Step 1: Find Charlie Baker's real name
SELECT ?realName WHERE {
  ?person foaf:name ""Charlie Baker (Australian footballer)"" .
  ?person dbo:birthName ?realName .
}

# Step 2: Identify a region associated with Charlie Baker
SELECT DISTINCT ?region WHERE {
  ?person dbo:birthName ?realName .
  ?person dbo:administers ?region .
}

# Step 3: Find John Quincy Adams' notable work and its author
SELECT ?work ?author WHERE {
  ?adams foaf:name ""John Quincy Adams"" .
  ?adams dbo:authored ?work .
  ?work dbo:author ?author .
}

# Step 4: Determine the parent of that author who is a politician/office holder
SELECT DISTINCT ?parent WHERE {
  ?author dbo:childOf ?parent .
  ?parent rdf:type dbo:Politician ;
          dbo:officeHolder true .
}

# Step 5: Find the decedent at the administration of the region
SELECT DISTINCT ?decedent WHERE {
  ?region dbo:administeredBy ?person .
  ?person dbo:decedentAtAdministration ?decedent .
}
```",6,9,7,3,2,3,3,71,0,0,2,0,0.0,0
926,61,test,"Give me the successor of the child of the spouse of Şermi Kadın and child of the father, that is a royalty, of the parent, that is a royalty, of Beyhan Sultan (daughter of Mustafa III).",SELECT ?result WHERE { ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v1 <http://dbpedia.org/ontology/spouse> <http://dbpedia.org/resource/Şermi_Kadın> . <http://dbpedia.org/resource/Beyhan_Sultan_(daughter_of_Mustafa_III)> <http://dbpedia.org/ontology/parent> ?v3 . ?v3 <http://dbpedia.org/property/father> ?v0 . ?v4 <http://dbpedia.org/property/father> ?v1 . ?v0 <http://dbpedia.org/ontology/child> ?result . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v4 <http://dbpedia.org/ontology/successor> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?successor WHERE {
    # Beyhan Sultan's parent who is royalty
    dbr:Beyhan_Sultan dbo:parent dbr:Mustafa_III .
    
    # Şermi Kadın's spouse
    ?şermiKadinSpouse dbo:spouse dbr:Şermi_Kadın .

    # Child of Şermi Kadın's spouse
    ?childOfSpouse dbo:child ?şermiKadinSpouse .
    
    # Successor of the child (assuming sibling or next in line)
    OPTIONAL { 
        ?successor dbo:sibling ?childOfSpouse .
    }
    
    # Mustafa III's parent who is royalty
    dbr:Mustafa_III dbo:parent ?mustafaParent .

    # Child of Mustafa III's father
    ?siblingOfMustafa dbo:child ?mustafaParent .
    
    FILTER (?siblingOfMustafa != dbr:Mustafa_III)
}
```",6,8,7,3,2,3,3,71,0,0,1,0,0.0,0
582,60,test,"Give me the figure known as the nickname of the team, that is an organisation, of Hajime Moriyasu and reference to the residence of the reference, that is a scientist, to Hirotaka Sugawara.","SELECT ?result WHERE { ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Scientist>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?v3 <http://dbpedia.org/property/residence> ?v2 . ?v0 <http://dbpedia.org/property/nickname> ?v1 . ?v3 <http://xmlns.com/foaf/0.1/name> ""Hirotaka Sugawara""@en . ?result <http://dbpedia.org/property/nickname> ?v1 . ?result <http://xmlns.com/foaf/0.1/name> ?v2 . ?v0 <http://dbpedia.org/ontology/coach> <http://dbpedia.org/resource/Hajime_Moriyasu> . }","```sparql
# Step 1: Find the team managed by Hajime Moriyasu and its nickname
SELECT ?team ?nickname WHERE {
  ?person foaf:name ""Hajime Moriyasu""@en .
  ?person dbo:managerOf ?team .
  OPTIONAL { ?team skos:altLabel ?nickname . }
}

# Step 2: Find the residence or affiliation of Hirotaka Sugawara
SELECT ?scientist ?residence WHERE {
  ?scientist foaf:name ""Hirotaka Sugawara""@en .
  ?scientist dbo:almaMater ?institution .
  OPTIONAL { ?scientist dbo:currentResidence ?residence . }
}

# Step 3: Find any connection between the team nickname and the residence
SELECT ?nickname ?residence WHERE {
  # Assuming we have variables from previous queries
  VALUES (?team) { <http://dbpedia.org/resource/Team_Moriyasu> } # Placeholder for actual team URI
  VALUES (?scientist) { <http://dbpedia.org/resource/Sugawara,_Hirotaka> } # Placeholder for actual scientist URI

  ?team skos:altLabel ?nickname .
  ?scientist dbo:currentResidence ?residence .
}
```",6,8,7,3,2,3,3,71,0,0,1,0,0.0,0
459,27,test,"Give me the governor of the administration, that is a politician, of Brad Henry and governor of Oklahoma and person born as the birth name of Kevin Stitt.",SELECT ?result WHERE { ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v3 <http://dbpedia.org/property/governor> ?result . ?result <http://dbpedia.org/property/birthName> ?v2 . ?v3 <http://dbpedia.org/property/governor> <http://dbpedia.org/resource/Brad_Henry> . <http://dbpedia.org/resource/Oklahoma> <http://dbpedia.org/property/governor> ?result . <http://dbpedia.org/resource/Kevin_Stitt> <http://dbpedia.org/property/birthName> ?v2 . },"```sparql
SELECT ?governor WHERE {
  ?person dbo:officeHolder dbr:Governor_of_Oklahoma.
  ?person foaf:name ""Mary Fallin""@en.
  ?person dbo:birthName ""Mary Fallin""@en.
  
  OPTIONAL { ?person dbo:successor dbr:Kevin_Stitt. }
  OPTIONAL { ?person dbo:predecessor dbr:Brad_Henry. }
}
```",5,6,6,2,3,2,3,28,0,0,1,0,0.0,0
965,56,test,"Give me the spouse of the spouse of Princess Victoria of Hesse and by Rhine and parent of Louise Mountbatten and parent of the person born, that is a noble, as the birth name of George Mountbatten, 2nd Marquess of Milford Haven.","SELECT ?result WHERE { <http://dbpedia.org/resource/George_Mountbatten,_2nd_Marquess_of_Milford_Haven> <http://dbpedia.org/property/birthName> ?v4 . ?v0 <http://dbpedia.org/ontology/parent> ?result . <http://dbpedia.org/resource/Louise_Mountbatten> <http://dbpedia.org/ontology/parent> ?result . ?result <http://dbpedia.org/ontology/spouse> ?v2 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Noble>. <http://dbpedia.org/resource/Princess_Victoria_of_Hesse_and_by_Rhine> <http://dbpedia.org/ontology/spouse> ?v2 . ?v0 <http://dbpedia.org/property/birthName> ?v4 . }","```sparql
SELECT ?spouse WHERE {
  wd:Q1116 wdt:P26 ?spouse .
  ?spouse wdt:P31/wdt:P279* wd:Q5 . # Ensure the spouse is a person
}
```",6,7,7,3,3,3,3,71,0,0,1,0,0.0,0
773,66,test,"Give me the parent of the successor of Charles the Bald and parent of the child, that is a royalty, of the father, that is an office holder and a royalty, of Carloman of Bavaria and spouse of the father of Charles the Fat.",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/child> ?v6 . ?v3 <http://dbpedia.org/ontology/spouse> ?result . <http://dbpedia.org/resource/Carloman_of_Bavaria> <http://dbpedia.org/property/father> ?v1 . <http://dbpedia.org/resource/Charles_the_Bald> <http://dbpedia.org/ontology/successor> ?v6 . <http://dbpedia.org/resource/Charles_the_Fat> <http://dbpedia.org/property/father> ?v3 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v2 <http://dbpedia.org/property/father> ?v1 . ?v2 <http://dbpedia.org/ontology/parent> ?result . },"```sparql
# Find successor of Charles the Bald
SELECT ?successor WHERE {
  wd:Q1247 wdt:P39 wd:Q1234 .
}

# Find parent of Louis the Stammerer (successor of Charles the Bald)
SELECT ?parent WHERE {
  ?successor wdt:P22 ?parent .
  FILTER(?successor = wd:Q1234) # Louis the Stammerer
}

# Find father of Carloman of Bavaria who is an office holder and royalty
SELECT ?father WHERE {
  wd:Q1248 wdt:P22 ?father .
  ?father wdt:P39 ?office .
  FILTER EXISTS { ?office wdt:P279* wd:Q11173 } # Office Holder
}

# Find child of this father that is a royalty
SELECT ?child WHERE {
  ?father wdt:P40 ?child .
  ?child wdt:P31 wd:Q5 . # Human
  ?child wdt:P39 ?royaltyOffice .
  FILTER EXISTS { ?royaltyOffice wdt:P279* wd:Q11173 } # Office Holder
}

# Find parent of this child
SELECT ?parent WHERE {
  ?child wdt:P22 ?parent .
}

# Find spouse of the father of Charles the Fat
SELECT ?spouse WHERE {
  wd:Q1249 wdt:P26 ?spouse . # Boso of Provence
}

# Combine results to find common parent
SELECT DISTINCT ?commonParent WHERE {
  VALUES ?parent1 { ?parent2 } .
  
  ?parent1 wdt:P31 wd:Q5 . # Human
  ?parent2 wdt:P31 wd:Q5 . # Human
  
  FILTER(?parent1 = ?parent2)
}
```",7,10,8,3,3,3,3,71,0,0,1,0,0.0,0
216,69,test,"Give me the team of the person born, that is a sports manager and a soccer manager and a soccer player, on the death of Pavel Vezhinov and player in the coach, that is a soccer player and a sports manager and a soccer manager, of Bosnia and Herzegovina national under-18 football team and player in the coach of the reference, that is an organisation and a soccer club, to Croatia U21.","SELECT ?result WHERE { ?v7 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsManager>. ?v7 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerPlayer>. ?v7 <http://dbpedia.org/ontology/team> ?result . ?v4 <http://dbpedia.org/ontology/coach> ?v3 . ?v4 <http://xmlns.com/foaf/0.1/name> ""Croatia U21""@en . ?v2 <http://dbpedia.org/ontology/birthDate> ?v1 . ?result <http://dbpedia.org/ontology/coach> ?v2 . ?v7 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerManager>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerManager>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsManager>. ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerClub>. <http://dbpedia.org/resource/Bosnia_and_Herzegovina_national_under-18_football_team> <http://dbpedia.org/ontology/coach> ?v7 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerPlayer>. <http://dbpedia.org/resource/Pavel_Vezhinov> <http://dbpedia.org/ontology/deathDate> ?v1 . ?v3 <http://dbpedia.org/ontology/team> ?result . }","```sparql
# Step 1: Find Pavel Vezhinov's death date
SELECT ?deathDate WHERE {
  dbpedia:Pavel_Vezhinov dbo:deathDate ?deathDate .
}

# Step 2: Find person born on that date who is a sports manager, soccer manager, and soccer player
SELECT DISTINCT ?person WHERE {
  ?person dbo:birthDate ?birthDate .
  FILTER (?birthDate = ""DEATH_DATE_FROM_STEP_1"") # Replace DEATH_DATE_FROM_STEP_1 with actual date from step 1
  ?person rdf:type dbpedia:SoccerManager ;
          rdf:type dbpedia:SportsManager ;
          rdf:type dbpedia:SoccerPlayer .
}

# Step 3: Determine this person's team affiliation as a coach for Bosnia and Herzegovina national under-18 football team
SELECT DISTINCT ?team WHERE {
  ?coach rdf:type dbpedia:SoccerCoach ;
         dbo:managedTeam ?team .
  FILTER (?coach = ""PERSON_FROM_STEP_2"") # Replace PERSON_FROM_STEP_2 with actual person from step 2
  ?team rdfs:label ""Bosnia and Herzegovina national under-18 football team""@en .
}

# Step 4: Find another individual who is both a soccer player and a sports manager, and also a soccer manager for Croatia U21
SELECT DISTINCT ?individual WHERE {
  ?individual rdf:type dbpedia:SoccerPlayer ;
              rdf:type dbpedia:SportsManager ;
              rdf:type dbpedia:SoccerManager .
  ?individual dbo:managedTeam ?team .
  FILTER (?team rdfs:label ""Croatia national under-21 football team""@en)
}

# Step 5: Identify the organization or soccer club associated with this second person's coaching role
SELECT DISTINCT ?organization WHERE {
  ?coach rdf:type dbpedia:SoccerCoach ;
         dbo:managedTeam ?organization .
  FILTER (?coach = ""INDIVIDUAL_FROM_STEP_4"") # Replace INDIVIDUAL_FROM_STEP_4 with actual individual from step 4
}
```",8,16,9,3,3,3,3,71,0,0,1,0,0.0,0
465,62,test,"Give me the spouse of the child, that is a royalty, of the parent of Elizabeth of Austria (1526–1545) and successor of Renée of France and successor of the child of the parent of Ercole II d'Este, Duke of Ferrara.","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/spouse> ?v6 . ?v3 <http://dbpedia.org/property/father> ?v4 . ?v0 <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Elizabeth_of_Austria_(1526–1545)> . ?v3 <http://dbpedia.org/ontology/successor> ?result . ?v0 <http://dbpedia.org/ontology/child> ?v6 . ?v6 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. <http://dbpedia.org/resource/Ercole_II_d'Este,_Duke_of_Ferrara> <http://dbpedia.org/ontology/parent> ?v4 . <http://dbpedia.org/resource/Renée_of_France> <http://dbpedia.org/ontology/successor> ?result . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?spouse WHERE {
  # Step 1: Identify Elizabeth of Austria's parent
  ?elizabeth a dbo:Person ;
             foaf:name ""Elizabeth of Austria"" ;
             dbo:parent ?parentOfElizabeth .

  # Step 2: Find the child that is royalty
  ?child dbr:Elizabeth_of_Austria_(1526–1545)/dbo:parent ?parentOfElizabeth ;
         a dbo:Monarch .

  # Step 3: Successor of Renée of France
  ?renée a dbo:Person ;
         foaf:name ""Renée of France"" .
  ?successor dbr:Renée_of_France/dbo:succeededBy ?successorOfRenée .

  # Step 4: Identify Ercole II d'Este's parent
  ?ercoleII a dbo:Person ;
            foaf:name ""Ercole II d'Este, Duke of Ferrara"" .
  ?parentOfErcoleII dbo:child ?ercoleII .

  # Step 5: Find the child of that parent
  ?anotherChild dbo:parent ?parentOfErcoleII .

  # Step 6: Successor of that child
  ?successorOfAnotherChild dbr:?anotherChild/dbo:succeededBy ?successorOfAnotherChild .

  # Step 7: Combine Information
  ?spouse dbo:spouse ?child ;
          dbo:spouse ?successorOfRenée ;
          dbo:spouse ?successorOfAnotherChild .
}
```",7,8,8,3,3,3,3,71,0,0,1,0,0.0,0
216,64,test,"Give me the player in Mario Ivanković and team of the person born, that is a sports manager and a soccer manager and a soccer player, on the death of Pavel Vezhinov and player in the coach of the reference, that is an organisation and a soccer club, to Croatia U21.","SELECT ?result WHERE { ?v2 <http://dbpedia.org/ontology/team> ?result . ?v3 <http://dbpedia.org/ontology/coach> ?v2 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerClub>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerPlayer>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsManager>. ?v1 <http://dbpedia.org/ontology/birthDate> ?v0 . ?v3 <http://xmlns.com/foaf/0.1/name> ""Croatia U21""@en . ?result <http://dbpedia.org/ontology/coach> ?v1 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerManager>. <http://dbpedia.org/resource/Pavel_Vezhinov> <http://dbpedia.org/ontology/deathDate> ?v0 . <http://dbpedia.org/resource/Mario_Ivanković> <http://dbpedia.org/ontology/team> ?result . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?playerInTeam ?coachOfCroatiaU21 WHERE {
  # Find Mario Ivanković's team
  ?mario a dbo:Footballer ;
         foaf:name ""Mario Ivanković"" ;
         dbo:team ?team .
  
  # Find the player in that team who is also a sports manager, soccer manager, and player born on October 5
  ?person a dbo:SoccerPlayer, dbo:SportsManager, dbo:SoccerManager ;
          dbo:birthday ""1982-10-05""^^xsd:date ;  # Assuming Pavel Vezhinov died in 2012, we use an example birth year
          dbo:team ?team .

  # Find the coach of Croatia U21 at that time
  ?coach a dbo:SoccerCoach ;
         dbo:managedTeam dbr:Croatia_national_under-21_football_team ;
         dbo:organization ?organization .
  
  BIND(?person AS ?playerInTeam)
  BIND(?coach AS ?coachOfCroatiaU21)
}
```",7,12,8,3,3,3,3,71,0,0,1,0,0.0,0
933,70,test,"Give me the band of the band, that is a group and a band and an organisation, of the person born, that is a musical artist, on 1947-04-21 and reference to the birth name of the professional in Musician and band of the band of Alan Warner (musician).","SELECT ?result WHERE { ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Band>. ?v3 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?result <http://xmlns.com/foaf/0.1/name> ?v6 . ?v5 <http://dbpedia.org/ontology/associatedMusicalArtist> ?v0 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Group>. ?v1 <http://dbpedia.org/property/birthName> ?v6 . ?v5 <http://dbpedia.org/ontology/birthDate> ""1947-04-21""^^<http://www.w3.org/2001/XMLSchema#date> . ?v1 <http://dbpedia.org/property/occupation> <http://dbpedia.org/resource/Musician> . <http://dbpedia.org/resource/Alan_Warner_(musician)> <http://dbpedia.org/ontology/associatedMusicalArtist> ?v3 . ?v0 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT DISTINCT ?bandName ?birthName WHERE {
  # Step 1: Find the musician born on 1947-04-21
  ?musician dbo:birthday ""1947-04-21""^^xsd:date ;
            a dbo:MusicalArtist .

  # Step 2: Find bands associated with this musician
  ?band dbo:member ?musician ;
        a dbo:Band, dbo:Organization .

  # Get the band name
  ?band rdfs:label ?bandName .

  # Step 3: Identify Alan Warner's band
  dbr:Alan_Warner_Musician dbo:member ?alanWarnerBand ;
                           a dbo:Band .

  # Find musicians in Alan Warner's band
  ?alanWarnerBand dbo:member ?otherMusician .

  # Get the birth name of these musicians
  ?otherMusician dbp:birthName ?birthName .
  
  FILTER(lang(?bandName) = 'en')
}
```",8,12,9,3,3,3,3,71,0,0,1,0,0.0,0
573,68,test,"Give me the person decedent at the residence, that is a settlement, of the professional, that is American, in Politician and person decedent at the administration, that is a region, of the real name of Charlie Baker (Australian footballer) and parent of the author, that is a politician and an office holder, of Exchequer Standards.","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/deathPlace> ?v7 . ?v4 <http://dbpedia.org/property/governor> ?v5 . ?v7 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v0 <http://dbpedia.org/ontology/nationality> <http://dbpedia.org/resource/United_States>. ?v0 <http://dbpedia.org/property/residence> ?v7 . ?v0 <http://dbpedia.org/property/occupation> ""Politician""@en . <http://dbpedia.org/resource/Charlie_Baker_(Australian_footballer)> <http://xmlns.com/foaf/0.1/name> ?v5 . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Region>. ?result <http://dbpedia.org/ontology/deathPlace> ?v4 . ?v3 <http://dbpedia.org/ontology/parent> ?result . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. <http://dbpedia.org/resource/Exchequer_Standards> <http://dbpedia.org/property/author> ?v3 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT DISTINCT ?personDecedentAtSettlement ?personDecedentAtAdministration
WHERE {
  # Step 1: Identify Charlie Baker (Australian footballer)
  ?charlieBaker a dbo:AustralianFootballer ;
                foaf:name ""Charlie Baker"" .

  # Step 2: Find the administration region associated with him
  ?administrationRegion dbo:country dbr:Australia ;
                       dbo:member ?charlieBaker .

  # Step 3: Identify the author of ""Exchequer Standards""
  ?author dbo:work dbr:Exchequer_Standards ;
          a dbo:Politician, dbo:OfficeHolder .

  # Step 4: Determine the parent of this author
  ?parent dbo:child ?author ;
          a dbo:Politician, dbo:OfficeHolder .

  # Step 5: Find the professional American in Politician
  ?americanProfessional a dbo:American ;
                       dbo:profession dbr:Politician .

  # Step 6: Identify the settlement residence of this professional
  ?settlementResidence dbo:residence ?americanProfessional ;
                      a dbo:Settlement .

  # Step 7: Determine the person decedent at both locations
  ?personDecedentAtSettlement dbo:deceasedAt ?settlementResidence .
  ?personDecedentAtAdministration dbo:deceasedAt ?administrationRegion .
}
```",8,13,9,3,3,3,3,71,0,0,2,0,0.0,0
645,68,test,"Give me the military force of the force, that is an event and a military conflict and a societal event, of the native, that is a president and a politician, of Restoration (Spain) and leader of the office, that is a government agency and an organisation, of Camilo Menéndez Tolosa and commander in the force of the commander in Siege of Madrid.",SELECT ?result WHERE { ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/GovernmentAgency>. ?v7 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?result <http://dbpedia.org/ontology/battle> ?v7 . <http://dbpedia.org/resource/Siege_of_Madrid> <http://dbpedia.org/ontology/commander> ?v5 . ?v4 <http://dbpedia.org/ontology/commander> ?v5 . ?v7 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v3 <http://dbpedia.org/ontology/leader> ?result . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v7 <http://dbpedia.org/ontology/commander> ?v0 . ?v4 <http://dbpedia.org/ontology/commander> ?result . ?v0 <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Restoration_(Spain)> . <http://dbpedia.org/resource/Camilo_Menéndez_Tolosa> <http://dbpedia.org/property/office> ?v3 . ?v7 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/President>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?militaryForce WHERE {
  # Identify the Restoration period and its president
  ?restoration a dbo:HistoricalPeriod ;
               dbo:country dbr:Spain ;
               dbo:leader ?president .
  
  # Find Camilo Menéndez Tolosa's organization
  ?organization dbo:head ?camiloMenendezTolosa ;
                a dbo:GovernmentAgency .

  # Identify the Siege of Madrid and its commander
  ?siege a dbo:MilitaryConflict, dbo:SocietalEvent ;
         dbo:location dbr:Madrid ;
         dbo:commander ?commander .
  
  # Find the military force commanded by the leader in the siege
  ?commander dbo:militaryForce ?militaryForce .

  # Link Camilo Menéndez Tolosa to the commander
  ?camiloMenendezTolosa dbo:commanderIn ?commander .

  # Ensure the president is linked to the Restoration period
  ?president dbo:officeHolderOf ?restoration .
}
```",8,15,9,3,3,3,3,71,0,0,1,0,0.0,0
465,70,test,"Give me the successor of the child of Alfonso I d'Este and spouse of the child, that is a royalty, of the parent of Elizabeth of Austria (1526–1545) and successor of the child, that is a royalty, of the parent of Charles Orlando, Dauphin of France.","SELECT ?result WHERE { ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v0 <http://dbpedia.org/ontology/child> ?v7 . ?v4 <http://dbpedia.org/ontology/successor> ?result . <http://dbpedia.org/resource/Charles_Orlando,_Dauphin_of_France> <http://dbpedia.org/ontology/parent> ?v1 . ?v4 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Alfonso_I_d'Este> . ?v0 <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Elizabeth_of_Austria_(1526–1545)> . ?v1 <http://dbpedia.org/ontology/child> ?v3 . ?v7 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v3 <http://dbpedia.org/ontology/successor> ?result . ?result <http://dbpedia.org/ontology/spouse> ?v7 . }","```sparql
# Find Alfonso I d'Este's child and spouse
SELECT ?child ?spouse WHERE {
  wd:Q123456 wdt:P40 ?child .
  ?child wdt:P26 ?spouse .
}

# Find Elizabeth of Austria's parent and their royal child
SELECT ?parent ?royalChild WHERE {
  wd:Q789012 wdt:P22 ?parent .
  ?parent wdt:P40 ?royalChild .
  FILTER EXISTS { ?royalChild wdt:P31 wd:Q5 } # Ensure the child is royalty
}

# Find Charles Orlando's parent and their royal child
SELECT ?parent ?royalChild WHERE {
  wd:Q345678 wdt:P22 ?parent .
  ?parent wdt:P40 ?royalChild .
  FILTER EXISTS { ?royalChild wdt:P31 wd:Q5 } # Ensure the child is royalty
}

# Find successors of these royal children
SELECT ?successor WHERE {
  ?royalChild1 wdt:P136 ?position1 .
  ?royalChild2 wdt:P136 ?position2 .
  ?royalChild1 wdt:P57 ?successor1 .
  ?royalChild2 wdt:P57 ?successor2 .
  FILTER (?successor1 = ?successor2)
}
```",8,10,9,3,3,3,3,71,0,0,1,0,0.0,0
965,58,test,"Give me the parent of the child, that is a royalty, of Prince Louis of Battenberg and parent of the person born, that is a noble, as the birth name of George Mountbatten, 2nd Marquess of Milford Haven and spouse of Prince Louis of Battenberg.","SELECT ?result WHERE { ?v0 <http://dbpedia.org/ontology/parent> ?result . ?v5 <http://dbpedia.org/ontology/parent> ?result . ?result <http://dbpedia.org/ontology/spouse> <http://dbpedia.org/resource/Prince_Louis_of_Battenberg> . ?v0 <http://dbpedia.org/property/birthName> ?v4 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Noble>. ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. <http://dbpedia.org/resource/George_Mountbatten,_2nd_Marquess_of_Milford_Haven> <http://dbpedia.org/property/birthName> ?v4 . ?v5 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Prince_Louis_of_Battenberg> . }","```sparql
# Step 1: Identify Prince Louis of Battenberg's child who is royalty
SELECT ?royalChild WHERE {
  ?child dbo:parent dbr:Prince_Louis_of_Battenberg .
  ?child dbo:title ?title .
  FILTER(CONTAINS(LCASE(STR(?title)), ""prince"") || CONTAINS(LCASE(STR(?title)), ""princess""))
}

# Step 2: Find the parent of this royal child
SELECT ?parent WHERE {
  ?royalChild dbo:parent ?parent .
}

# Step 3: Identify George Mountbatten, 2nd Marquess of Milford Haven's birth name
SELECT ?birthName WHERE {
  dbr:George_Mountbatten_2nd_Marquess_of_Milford_Haven dbo:birthName ?birthName .
}

# Step 4: Determine who is noble and born with that name
SELECT ?noblePerson WHERE {
  ?noblePerson dbo:name ?birthName .
  ?noblePerson dbo:title ?title .
  FILTER(CONTAINS(LCASE(STR(?title)), ""marquess"") || CONTAINS(LCASE(STR(?title)), ""duke"") || CONTAINS(LCASE(STR(?title)), ""earl""))
}

# Step 5: Find the spouse of Prince Louis of Battenberg
SELECT ?spouse WHERE {
  dbr:Prince_Louis_of_Battenberg dbo:spouse ?spouse .
}

# Step 6: Determine the parent of this noble person
SELECT ?parentOfNoblePerson WHERE {
  ?noblePerson dbo:parent ?parentOfNoblePerson .
}
```",6,8,7,3,3,3,3,71,0,0,1,0,0.0,0
47,59,test,"Give me the office of the awardee of the award, that is an award, of Mantu Ghosh and office of the administration of the commander, that is a politician, in Operation Green Hunt.",SELECT ?result WHERE { ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Award>. <http://dbpedia.org/resource/Mantu_Ghosh> <http://dbpedia.org/property/awards> ?v0 . ?v5 <http://dbpedia.org/property/awards> ?v0 . <http://dbpedia.org/resource/Operation_Green_Hunt> <http://dbpedia.org/ontology/commander> ?v3 . ?v5 <http://dbpedia.org/property/office> ?result . ?v2 <http://dbpedia.org/property/governor> ?v3 . ?v2 <http://dbpedia.org/property/office> ?result . },"```sparql
# Query for office of the awardee of an award by Mantu Ghosh
SELECT ?awardee ?office WHERE {
  ?award dbo:givenBy dbr:Mantu_Ghosh .
  ?award dbo:recipient ?awardee .
  OPTIONAL { ?awardee dbo:positionHeld ?office . }
}

UNION

# Query for office of the administration of a politician in Operation Green Hunt
SELECT ?politician ?office WHERE {
  ?operation dcterms:subject dbc:Operation_Green_Hunt ;
             dbo:participant ?politician .
  FILTER (dbo:occupation(?politician) = dbp:Politician)
  OPTIONAL { ?politician dbo:positionHeld ?office . }
}
```",6,8,7,3,2,3,3,71,0,0,1,0,0.0,0
791,58,test,"Give me the father of the child, that is a royalty, of the father, that is a royalty and an office holder, of Emperor Antoku and spouse of Taira no Tokuko and predecessor of the child of Emperor Takakura.",SELECT ?result WHERE { ?v2 <http://dbpedia.org/property/father> ?result . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. <http://dbpedia.org/resource/Emperor_Antoku> <http://dbpedia.org/property/father> ?v1 . ?v2 <http://dbpedia.org/property/father> ?v1 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?result <http://dbpedia.org/ontology/spouse> <http://dbpedia.org/resource/Taira_no_Tokuko> . ?v5 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Emperor_Takakura> . ?result <http://dbpedia.org/ontology/successor> ?v5 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?father WHERE {
  # Emperor Antoku's father
  dbr:Emperor_Antoku dbo:father ?antokuFather .
  
  # Taira no Kiyomori is the father of Emperor Antoku and a royalty and office holder
  ?antokuFather rdfs:label ""Taira no Kiyomori""@en .
  ?antokuFather dbo:nationality dbr:Japan .

  # Taira no Kiyomori's spouse
  ?kiyomoriSpouse dbo:spouse ?antokuFather ;
                  rdfs:label ""Taira no Tokuko""@en .

  # Emperor Takakura's child is Emperor Antoku
  dbr:Emperor_Takakura dbo:child dbr:Emperor_Antoku .

  # Predecessor of Emperor Antoku in terms of emperorship
  OPTIONAL {
    ?antokuFather dbo:predecessor ?predecessor .
    ?predecessor rdfs:label ""Emperor Go-Shirakawa""@en .
  }
}
```",6,9,7,3,3,3,3,71,0,0,1,0,0.0,0
232,8,test,Give me the artistic movement of Ella Cheever Thayer and claim to fame of the person born as Emily Katherine Jacques.,"SELECT ?result WHERE { <http://dbpedia.org/resource/Ella_Cheever_Thayer> <http://dbpedia.org/ontology/movement> ?result . ?v2 <http://dbpedia.org/property/birthName> ""Emily Katherine Jacques""@en . ?v2 <http://dbpedia.org/ontology/knownFor> ?result . }","```sparql
SELECT ?person ?name ?movement ?fame WHERE {
  {
    # Query for Ella Cheever Thayer's artistic movement
    ?person dbo:wikiPageRedirects dbr:Ella_Cheever_Thayer .
    ?person rdfs:label ?name .
    ?person dbo:artisticMovement ?movement .
    FILTER (LANG(?name) = ""en"")
  }
  UNION
  {
    # Query for Emily Katherine Jacques' claim to fame
    ?person dbo:wikiPageRedirects dbr:Coco_Chanel .
    ?person rdfs:label ?name .
    OPTIONAL { ?person dbo:occupation ?fame . }
    FILTER (LANG(?name) = ""en"")
  }
}
```",3,3,4,2,2,2,2,9,0,16,1,0.0,0.0,0
507,61,test,"Give me the professional in the profession of the person born on 1966-02-18 and director of the movie, that is a movie and a work, with the person born on 1919-06-17.","SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/birthDate> ""1966-02-18""^^<http://www.w3.org/2001/XMLSchema#date> . ?result <http://dbpedia.org/property/occupation> ?v3 . ?v1 <http://dbpedia.org/property/occupation> ?v3 . ?v5 <http://dbpedia.org/property/starring> ?v0 . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?v5 <http://dbpedia.org/ontology/director> ?result . ?v0 <http://dbpedia.org/ontology/birthDate> ""1919-06-17""^^<http://www.w3.org/2001/XMLSchema#date> . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Film>. }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?director ?movie ?profession WHERE {
  # Find the person born on 1966-02-18 who is a director of a movie
  ?person1 dbo:birthDate ""1966-02-18""^^xsd:date .
  ?person1 dbo:occupation ?profession .
  ?film dbo:director ?person1 .

  # Find the person born on 1919-06-17 involved in the same movie
  ?person2 dbo:birthDate ""1919-06-17""^^xsd:date .
  ?film dbo:starring ?person2 .

  # Return the director, the movie, and the profession of the director
  BIND(?person1 AS ?director)
}
```",6,8,7,3,2,3,3,71,0,0,2,0,0.0,0
365,19,test,"Give me the spouse of the native, that is a politician, of the reference to Полтавская губерния and person born as the birth name of Symon Petliura.","SELECT ?result WHERE { ?v4 <http://dbpedia.org/ontology/spouse> ?result . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v4 <http://dbpedia.org/ontology/birthPlace> ?v0 . <http://dbpedia.org/resource/Symon_Petliura> <http://dbpedia.org/property/birthName> ?v2 . ?result <http://dbpedia.org/property/birthName> ?v2 . ?v0 <http://xmlns.com/foaf/0.1/name> ""Полтавская губерния""@en . }","```sparql
SELECT ?spouse WHERE {
  # Find Symon Petliura's birthplace
  wd:Q123456 wdt:P19 ?birthPlace .
  
  # Check if the birthplace is Poltava Governorate
  FILTER(?birthPlace = wd:Q12345) .

  # Find politicians from Poltava Governorate
  ?politician wdt:P19 ?birthPlace ;
             wdt:P106 wd:Q82955 . # P106 is ""occupation"", Q82955 is ""politician""

  # Get the spouse of the politician
  ?politician wdt:P26 ?spouse .
}
```

Note: `wd:Q123456` should be replaced with the actual DBpedia/Wikidata ID for Symon Petliura, and `wd:Q12345` should be replaced with the ID for Poltava Governorate. The occupation property P106 is used to filter politicians.",5,6,6,3,2,3,2,20,0,0,1,0,0.0,0
47,66,test,"Give me the office of the awardee of Banga Bhushan and office of the awardee of the entity, that is an award, in India and office of the administration of Jagdeep Dhankhar.",SELECT ?result WHERE { ?v6 <http://dbpedia.org/property/office> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Award>. ?v2 <http://dbpedia.org/property/office> ?result . ?v1 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/India> . ?v3 <http://dbpedia.org/property/office> ?result . ?v3 <http://dbpedia.org/property/governor> <http://dbpedia.org/resource/Jagdeep_Dhankhar> . ?v2 <http://dbpedia.org/property/awards> ?v1 . ?v6 <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/Banga_Bhushan> . },"```sparql
# Query for Banga Bhushan Awardee's Office
SELECT ?awardee ?office WHERE {
  ?award dcterms:isPartOf <http://dbpedia.org/resource/Category:Banga_Bhushan_Awards> .
  ?award dbo:recipient ?person .
  ?person foaf:name ?awardee .
  OPTIONAL { ?person dbo:position ?office }
}

UNION

# Query for Bharat Ratna Awardee's Office
SELECT ?awardee ?office WHERE {
  ?award dcterms:isPartOf <http://dbpedia.org/resource/Category:Bharat_Ratna> .
  ?award dbo:recipient ?person .
  ?person foaf:name ?awardee .
  OPTIONAL { ?person dbo:position ?office }
}

UNION

# Query for Jagdeep Dhankhar's Administration
SELECT ?name ?administration WHERE {
  <http://dbpedia.org/resource/Jagdeep_Dhankhar> foaf:name ?name ;
                                                     dbo:position ?administration .
}
```",7,8,8,3,3,3,3,71,0,0,1,0,0.0,0
987,59,test,"Give me the birth place of the band, that is an artist and a musical artist, of the band, that is an artist, of Dado Polumenta and birth place of the actor of the show, that is a film, with Emir Hadžihafizbegović.",SELECT ?result WHERE { ?v0 <http://dbpedia.org/property/starring> ?v4 . <http://dbpedia.org/resource/Dado_Polumenta> <http://dbpedia.org/ontology/associatedMusicalArtist> ?v3 . ?v0 <http://dbpedia.org/ontology/starring> <http://dbpedia.org/resource/Emir_Hadžihafizbegović> . ?v1 <http://dbpedia.org/ontology/birthPlace> ?result . ?v3 <http://dbpedia.org/ontology/associatedMusicalArtist> ?v1 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Film>. ?v4 <http://dbpedia.org/ontology/birthPlace> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. },"```sparql
# Query to get the birth place of the band Thompson
SELECT ?birthPlace WHERE {
  wd:Q123456 a dbo:Band ; # Replace Q123456 with the actual DBpedia ID for Thompson
  dbo:bandMember wd:Q789012 . # Dado Prljaca's DBpedia ID
  dbo:birthPlace ?birthPlace .
}

# Query to get an actor from ""Welcome to Sarajevo"" and their birthplace
SELECT DISTINCT ?actorBirthPlace WHERE {
  wd:Q987654 a dbo:Film ; # Replace Q987654 with the actual DBpedia ID for Welcome to Sarajevo
  dbo:starring wd:QActor123 . # Emir Hadžihafizbegović's DBpedia ID
  wd:QActor123 dbo:birthPlace ?actorBirthPlace .
}
```

Note: The placeholders `wd:Q123456`, `wd:Q789012`, `wd:Q987654`, and `wd:QActor123` need to be replaced with the actual DBpedia resource identifiers for Thompson, Dado Prljaca, ""Welcome to Sarajevo,"" and Emir Hadžihafizbegović respectively.",6,10,7,3,2,3,3,71,0,0,4,0,0.0,0
582,64,test,"Give me the reference to the residence of the reference, that is a scientist, to Hirotaka Sugawara and figure known as the nickname of the team, that is an organisation, of Hajime Moriyasu and player in Kazuaki Nagasawa.","SELECT ?result WHERE { ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Scientist>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?v3 <http://dbpedia.org/property/residence> ?v2 . ?v0 <http://dbpedia.org/ontology/coach> <http://dbpedia.org/resource/Hajime_Moriyasu> . ?v3 <http://xmlns.com/foaf/0.1/name> ""Hirotaka Sugawara""@en . <http://dbpedia.org/resource/Kazuaki_Nagasawa> <http://dbpedia.org/ontology/team> ?result . ?result <http://dbpedia.org/property/nickname> ?v1 . ?result <http://xmlns.com/foaf/0.1/name> ?v2 . ?v0 <http://dbpedia.org/property/nickname> ?v1 . }","```sparql
# Query for Hirotaka Sugawara's residence
SELECT ?residence WHERE {
  ?person dbo:birthName ""Hirotaka Sugawara""@en .
  ?person dbo:residence ?residence .
}

UNION

# Query for the nickname of the team associated with Hajime Moriyasu
SELECT ?nickname WHERE {
  ?team dbo:coach ?person .
  ?person dbo:birthName ""Hajime Moriyasu""@en .
  ?team dbo:nickname ?nickname .
}

UNION

# Query to confirm Kazuaki Nagasawa as a player
SELECT ?occupation WHERE {
  ?person dbo:birthName ""Kazuaki Nagasawa""@en .
  ?person dbo:occupation ?occupation .
  FILTER(CONTAINS(LCASE(?occupation), ""player""))
}
```",7,9,8,3,3,3,3,71,0,0,1,0,0.0,0
459,24,test,"Give me the governor of the administration, that is a politician, of Brad Henry and person born as the birth name of Kevin Stitt.",SELECT ?result WHERE { ?result <http://dbpedia.org/property/birthName> ?v1 . <http://dbpedia.org/resource/Kevin_Stitt> <http://dbpedia.org/property/birthName> ?v1 . ?v2 <http://dbpedia.org/property/governor> ?result . ?v2 <http://dbpedia.org/property/governor> <http://dbpedia.org/resource/Brad_Henry> . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. },"```sparql
SELECT ?governor WHERE {
  ?person1 foaf:name ""Brad Henry""@en .
  ?person1 dbo:officeHolder ?office .
  ?office dbo:position dbr:Governor_of_Oklahoma .
  
  ?person2 foaf:name ""Kevin Stitt""@en .
  ?person2 dbo:birthName ""Kevin Stitt""@en .
  
  ?office dbo:successor ?nextOffice .
  ?nextOffice dbo:officeHolder ?governor .
}
```",4,5,5,2,2,2,3,28,0,0,1,0,0.0,0
645,70,test,"Give me the military force of the force, that is an event and a military conflict and a societal event, of the native, that is a president and a politician, of Restoration (Spain) and commander in the force of Carlos Asensio Cabanillas and leader of the office, that is a government agency and an organisation, of the native of Restoration (Spain).",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/battle> ?v7 . ?v1 <http://dbpedia.org/property/office> ?v3 . ?v7 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?v3 <http://dbpedia.org/ontology/leader> ?result . ?v4 <http://dbpedia.org/ontology/commander> ?result . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/GovernmentAgency>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?v7 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v7 <http://dbpedia.org/ontology/commander> ?v0 . ?v7 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?v1 <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Restoration_(Spain)> . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/President>. ?v4 <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Carlos_Asensio_Cabanillas> . ?v0 <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Restoration_(Spain)> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?militaryForce WHERE {
  # Antonio Maura, a politician during the Bourbon Restoration
  dbr:Antonio_Maura dbo:nationality dbr:Spain ;
                    dbo:occupation dbr:Politician .

  # Carlos Asensio Cabanillas and his military force
  dbr:Carlos_Asensio_Cabanillas dbo:militaryConflict dbr:Spanish_Civil_War ;
                               dbo:commanderOf ?militaryForce .

  # Spanish Civil War as an event, military conflict, and societal event
  dbr:Spanish_Civil_War a dbo:MilitaryConflict ;
                       a dbo:Event ;
                       a dbo:SocietalEvent .

  # The Nationalist faction during the Spanish Civil War
  ?militaryForce rdfs:label ""Nationalist faction""@en .
}
```",8,15,9,3,3,3,3,71,0,0,2,0,0.0,0
987,70,test,"Give me the entity in the region, that is a country, of the time zone, that is a sports event, in Canicosa de la Sierra and birth place of the actor of the show, that is a film, with Emir Hadžihafizbegović and birth place of the band, that is an artist and a musical artist, of Šako Polumenta.",SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Film>. ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsEvent>. <http://dbpedia.org/resource/Šako_Polumenta> <http://dbpedia.org/ontology/associatedMusicalArtist> ?v3 . ?v0 <http://dbpedia.org/property/timeZone> ?v5 . ?v1 <http://dbpedia.org/ontology/starring> <http://dbpedia.org/resource/Emir_Hadžihafizbegović> . <http://dbpedia.org/resource/Canicosa_de_la_Sierra> <http://dbpedia.org/ontology/timeZone> ?v5 . ?v6 <http://dbpedia.org/ontology/birthPlace> ?result . ?v1 <http://dbpedia.org/property/starring> ?v6 . ?result <http://dbpedia.org/ontology/country> ?v0 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?v3 <http://dbpedia.org/ontology/birthPlace> ?result . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?country WHERE {
  # Step 1: Find the time zone of Canicosa de la Sierra
  ?place a dbo:Place ;
        rdfs:label ""Canicosa de la Sierra""@en .
  
  OPTIONAL { ?place dbo:timeZone ?timezone . }
  
  # Step 2: Find a sports event in that time zone
  ?event dbo:location ?place ;
         a dbo:SportsEvent .

  # Step 3: Determine the country of this sports event
  ?event dbo:country ?country .

  # Step 4: Identify Emir Hadžihafizbegović's film and his birthplace
  ?film dbo:starring dbr:Emir_Hadžihafizbegović ;
        a dbo:Film .
  
  ?emir dbo:birthPlace ?emirBirthPlace .

  # Step 5: Find Šako Polumenta's band and its birthplace
  ?band dbo:member dbr:Šako_Polumenta ;
         a dbo:Band, dbo:MusicalArtist .
  
  ?band dbo:originPlace ?bandOriginPlace .

  # Step 6: Combine information to identify a country
  FILTER(?emirBirthPlace = ?bandOriginPlace)
}
```",8,13,9,3,3,3,3,71,0,0,1,0,0.0,0
917,58,test,"Give me the child of the father of the child, that is a royalty, of Kamehameha III and child of the father of Keʻelikōlani and parent of Albert Kamehameha.",SELECT ?result WHERE { ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. <http://dbpedia.org/resource/Kamehameha_III> <http://dbpedia.org/ontology/child> ?v4 . ?result <http://dbpedia.org/property/father> ?v0 . ?v4 <http://dbpedia.org/property/father> ?v0 . <http://dbpedia.org/resource/Keʻelikōlani> <http://dbpedia.org/property/father> ?v5 . ?result <http://dbpedia.org/ontology/parent> ?v5 . ?result <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Albert_Kamehameha> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?person WHERE {
  # Kamehameha III's child who is royalty
  ?child dbo:parent dbr:Kamehameha_III ;
         a dbo:Monarch .

  # Keʻelikōlani's father and his child
  ?keelikoalanai dbr:Keʻelikōlani ;
                dbo:father ?commonFather .
  
  # Albert Kamehameha's parent
  ?albertParent dbr:Albert_Kamehameha ;
                dbo:parent ?person .

  # The person we are looking for is the child of Keʻelikōlani's father and also a parent of Albert Kamehameha
  ?commonFather dbo:child ?person .
  
  # Ensure the person is the same as Kamehameha III's royal child
  FILTER (?person = ?child)
}
```",6,7,7,3,3,3,3,71,0,0,1,0,0.0,0
36,28,test,"Give me the actor of the claim to fame, that is a film, of Lepacious Bose and person born in the birth year of Deanne Bray and person born as the birth name of Ayo Makun.",SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Film>. ?result <http://dbpedia.org/ontology/birthYear> ?v3 . <http://dbpedia.org/resource/Ayo_Makun> <http://dbpedia.org/property/birthName> ?v5 . ?result <http://dbpedia.org/property/birthName> ?v5 . <http://dbpedia.org/resource/Lepacious_Bose> <http://dbpedia.org/ontology/knownFor> ?v1 . <http://dbpedia.org/resource/Deanne_Bray> <http://dbpedia.org/ontology/birthYear> ?v3 . ?v1 <http://dbpedia.org/ontology/starring> ?result . },"```sparql
# Step 1: Find Lepacious Bose's claim to fame (film)
SELECT ?film WHERE {
  wd:Q123456 dbo:profession wd:Q11424 . # Assuming Q123456 is Lepacious Bose and Q11424 is actor
  wd:Q123456 dbo:work ?film .
}

# Step 2: Find Deanne Bray's birth year
SELECT ?birthYear WHERE {
  wd:Q654321 dbo:birthday ?date . # Assuming Q654321 is Deanne Bray
  BIND(YEAR(?date) AS ?birthYear)
}

# Step 3: Find Ayo Makun's birth name
SELECT ?birthName WHERE {
  wd:Q789012 foaf:name ?birthName . # Assuming Q789012 is Ayo Makun
}

# Step 4: Find actor of the film, born in Deanne Bray's year and with Ayo Makun's birth name
SELECT DISTINCT ?actor WHERE {
  ?film dbo:starring ?actor .
  ?actor dbo:birthday ?dateBirth .
  BIND(YEAR(?dateBirth) AS ?birthYearActor)
  
  # Assuming we have extracted the birth year of Deanne Bray as ?deanneBrayBirthYear and Ayo Makun's birth name as ?ayoMakunBirthName
  FILTER (?birthYearActor = <deanneBrayBirthYear>)
  
  ?actor foaf:name ?actorName .
  FILTER(?actorName = ""<ayoMakunBirthName>"")
}
```

Note: Replace `Q123456`, `Q654321`, and `Q789012` with the actual DBpedia QIDs for Lepacious Bose, Deanne Bray, and Ayo Makun respectively. Also, replace `<deanneBrayBirthYear>` and `<ayoMakunBirthName>` with the values obtained from the respective queries.",6,7,7,2,3,2,3,28,0,0,1,0,0.0,0
606,20,test,"Give me the birthplace of the alumnus of the figure known, that is a university and a sports league and an educational institution, as Penn Quakers and figure known as the nickname of the figure known, that is a settlement, as Barb City.","SELECT ?result WHERE { ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsLeague>. ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/University>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. ?v1 <http://dbpedia.org/property/nickname> ?v2 . ?v4 <http://dbpedia.org/property/nickname> <http://dbpedia.org/resource/Penn_Quakers> . ?v5 <http://dbpedia.org/ontology/birthPlace> ?result . ?v5 <http://dbpedia.org/ontology/almaMater> ?v4 . ?result <http://dbpedia.org/property/nickname> ?v2 . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/EducationalInstitution>. ?v1 <http://dbpedia.org/property/nickname> ""Barb City""@en . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?person ?birthPlace WHERE {
  ?person dbo:almaMater dbr:University_of_Pennsylvania .
  ?person dbo:cityOfBirth ?birthCity .
  ?birthCity rdfs:label ""Pittsburgh""@en .
  FILTER NOT EXISTS { ?person dbo:deathDate ?deathDate } # Ensures the person is alive or at least not marked as deceased
}
```",6,10,7,3,2,3,2,20,0,0,1,0,0.0,0
47,67,test,"Give me the office of the awardee of the entity, that is an award, in India and office of the awardee of the award, that is an award, of Mantu Ghosh and office of Suvendu Adhikari.",SELECT ?result WHERE { ?v3 <http://dbpedia.org/property/awards> ?v1 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Award>. ?v6 <http://dbpedia.org/property/office> ?result . ?v1 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/India> . <http://dbpedia.org/resource/Suvendu_Adhikari> <http://dbpedia.org/property/office> ?result . ?v3 <http://dbpedia.org/property/office> ?result . ?v6 <http://dbpedia.org/property/awards> ?v0 . <http://dbpedia.org/resource/Mantu_Ghosh> <http://dbpedia.org/property/awards> ?v0 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Award>. },"```sparql
# Query 1: Office of the awardee of an award in India
SELECT ?award ?office WHERE {
  ?award dbo:country dbr:India .
  ?recipient dbo:receivedAward ?award ;
             foaf:currentOrMostRecentProject ?project .
  ?project dbo:positionHeld ?office .
}

# Query 2: Office of the awardee of Mantu Ghosh's award
SELECT ?award ?office WHERE {
  ?award dbo:awardedTo dbr:Mantu_Ghosh ;
         dbo:recipient ?recipient .
  ?recipient foaf:currentOrMostRecentProject ?project .
  ?project dbo:positionHeld ?office .
}

# Query 3: Office of Suvendu Adhikari
SELECT ?office WHERE {
  dbr:Suvendu_Adhikari dbo:currentOffice ?office .
}
```",7,9,8,3,3,3,3,71,0,0,1,0,0.0,0
573,65,test,"Give me the person decedent at the residence, that is a settlement, of the professional, that is American, in Politician and person decedent at the administration, that is a region, of Charlie Baker and parent of the author, that is a politician and an office holder, of Exchequer Standards.","SELECT ?result WHERE { <http://dbpedia.org/resource/Exchequer_Standards> <http://dbpedia.org/property/author> ?v3 . ?v3 <http://dbpedia.org/ontology/parent> ?result . ?result <http://dbpedia.org/ontology/deathPlace> ?v4 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v0 <http://dbpedia.org/property/residence> ?v6 . ?v4 <http://dbpedia.org/property/governor> ""Charlie Baker""@en . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v0 <http://dbpedia.org/property/occupation> ""Politician""@en . ?v0 <http://dbpedia.org/ontology/nationality> <http://dbpedia.org/resource/United_States>. ?v6 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. ?result <http://dbpedia.org/ontology/deathPlace> ?v6 . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Region>. }","```sparql
# Step 1: Find Charlie Baker's administrative region
SELECT ?administration WHERE {
    ?charlieBaker dbo:officeHolderOf ?administration .
    ?charlieBaker foaf:name ""Charlie Baker"" .
}

# Step 2: Identify the author of ""Exchequer Standards""
SELECT ?author WHERE {
    ?book dbo:author ?author ;
          rdfs:label ""Exchequer Standards""@en .
    ?author rdf:type dbo:Politician ;
            dbo:officeHolderOf ?office .
}

# Step 3: Find the parent of this author who is an American professional in politics
SELECT ?parent WHERE {
    ?author dbo:child ?parent .
    ?parent foaf:nationality <http://dbpedia.org/resource/United_States> ;
            rdf:type dbo:Politician .
}

# Step 4: Identify decedent at the residence/settlement of this professional
SELECT DISTINCT ?decedent WHERE {
    ?professional dbo:residence ?settlement .
    ?settlement rdf:type dbo:Settlement .
    ?decedent dbo:placeOfDeath ?settlement .
    ?parent dbo:child ?professional .
}

# Step 5: Identify decedent at the administration/region of Charlie Baker
SELECT DISTINCT ?decedent WHERE {
    ?administration dbo:placeOfBirth ?decedent .
    ?charlieBaker dbo:officeHolderOf ?administration .
}
```",7,12,8,3,3,3,3,71,0,0,2,0,0.0,0
965,61,test,"Give me the parent of the child, that is a royalty, of the person born, that is a politician, on 1854-05-24 and parent of the person born, that is a noble, as the birth name of George Mountbatten, 2nd Marquess of Milford Haven.","SELECT ?result WHERE { <http://dbpedia.org/resource/George_Mountbatten,_2nd_Marquess_of_Milford_Haven> <http://dbpedia.org/property/birthName> ?v3 . ?v0 <http://dbpedia.org/property/birthName> ?v3 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Noble>. ?v1 <http://dbpedia.org/ontology/birthDate> ""1854-05-24""^^<http://www.w3.org/2001/XMLSchema#date> . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v4 <http://dbpedia.org/ontology/parent> ?result . ?v4 <http://dbpedia.org/property/father> ?v1 . ?v0 <http://dbpedia.org/ontology/parent> ?result . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?parentOfRoyalChild WHERE {
  # Step 1: Find the politician born on 1854-05-24
  ?politician a dbo:Politician ;
              dbo:birthday ""1854-05-24""^^xsd:date .

  # Step 2: Find their parent
  ?politician dbo:parent ?parentOfPolitician .

  # Step 3: Find the royal child of this parent
  ?royalChild dbo:parent ?parentOfPolitician ;
              a dbo:Monarch ;  # Assuming royalty is represented by Monarch

  # Step 4: Find the birth name of George Mountbatten, 2nd Marquess of Milford Haven
  dbr:George_Mountbatten,_2nd_Marquess_of_Milford_Haven dbo:birthName ?birthName .

  # Step 5: Find the parent of the person with this birth name
  ?personWithBirthName a dbo:Person ;
                      dbo:birthName ?birthName .
  ?personWithBirthName dbo:parent ?parentOfPersonWithBirthName .

  # Step 6: Ensure the royal child is related to the person with the birth name
  ?royalChild dbo:parent ?parentOfPersonWithBirthName .

  # Return the parent of the royal child
  ?parentOfRoyalChild dbo:child ?royalChild .
}
```",6,9,7,3,2,3,3,71,0,0,2,0,0.0,0
465,63,test,"Give me the successor of the child, that is a royalty, of Anne of Brittany and successor of the child of the parent of Ercole II d'Este, Duke of Ferrara and spouse of the child, that is a royalty, of Ferdinand I, Holy Roman Emperor.","SELECT ?result WHERE { ?v3 <http://dbpedia.org/property/father> ?v4 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. <http://dbpedia.org/resource/Ferdinand_I,_Holy_Roman_Emperor> <http://dbpedia.org/ontology/child> ?v6 . ?result <http://dbpedia.org/ontology/spouse> ?v6 . ?v3 <http://dbpedia.org/ontology/successor> ?result . ?v6 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. <http://dbpedia.org/resource/Anne_of_Brittany> <http://dbpedia.org/ontology/child> ?v2 . <http://dbpedia.org/resource/Ercole_II_d'Este,_Duke_of_Ferrara> <http://dbpedia.org/ontology/parent> ?v4 . ?v2 <http://dbpedia.org/ontology/successor> ?result . }","```sparql
SELECT DISTINCT ?successor WHERE {
  # Anne of Brittany's children
  ?anneChild dbo:parent dbr:Anne_of_Brittany ;
             a dbo:RoyalPerson .
  
  # Successor of Anne of Brittany's child
  ?anneSuccessor dbo:predecessor ?anneChild .

  # Ercole II d'Este's parent and sibling
  ?ercoleParent dbo:child dbr:Ercole_II_d%27Este ;
                a dbo:RoyalPerson .
  
  ?ercoleSibling dbo:parent ?ercoleParent ;
                 FILTER(?ercoleSibling != dbr:Ercole_II_d%27Este) .

  # Successor of Ercole II's sibling
  ?siblingSuccessor dbo:predecessor ?ercoleSibling .

  # Ferdinand I's children and their spouses
  ?ferdinandChild dbo:parent dbr:Ferdinand_I,_Holy_Roman_Emperor ;
                  a dbo:RoyalPerson .
  
  ?spouse dbo:spouse ?ferdinandChild ;
          a dbo:RoyalPerson .

  # Successor of the spouse's child
  ?spouseChild dbo:parent ?spouse ;
               a dbo:RoyalPerson .
  
  ?finalSuccessor dbo:predecessor ?spouseChild .

  # Find the intersection of all successors
  FILTER(?anneSuccessor = ?siblingSuccessor && ?siblingSuccessor = ?finalSuccessor)
}
```",7,9,8,3,3,3,3,71,0,0,1,0,0.0,0
791,71,test,"Give me the spouse of the spouse, that is a royalty, of the reference to Emperor Takakura and predecessor of the child of the child, that is an office holder and a royalty, of Emperor Go-Shirakawa and father of the child, that is a royalty, of the father, that is a royalty and an office holder, of Emperor Antoku.","SELECT ?result WHERE { ?v8 <http://dbpedia.org/property/father> ?result . <http://dbpedia.org/resource/Emperor_Antoku> <http://dbpedia.org/property/father> ?v7 . ?v7 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v1 <http://xmlns.com/foaf/0.1/name> ""Emperor Takakura""@en . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?result <http://dbpedia.org/ontology/spouse> ?v2 . ?v5 <http://dbpedia.org/property/father> ?v4 . ?result <http://dbpedia.org/ontology/successor> ?v5 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v4 <http://dbpedia.org/ontology/parent> <http://dbpedia.org/resource/Emperor_Go-Shirakawa> . ?v2 <http://dbpedia.org/ontology/spouse> ?v1 . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v8 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v8 <http://dbpedia.org/property/father> ?v7 . ?v7 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. }","```sparql
SELECT DISTINCT ?finalSpouse WHERE {
  # Step 1: Emperor Takakura's spouse
  ?emperorTakakura dbo:spouse ?spouseOfTakakura .
  FILTER(STR(?emperorTakakura) = ""Emperor_Takakura"") .

  # Step 2: Spouse of Emperor Takakura's child (predecessor)
  ?spouseOfTakakura dbo:child ?childOfSpouseTakakura .
  
  # Step 3: Child of the spouse who is an office holder and royalty
  ?childOfSpouseTakakura dbo:child ?officeHolderRoyalty .
  ?officeHolderRoyalty rdf:type dbo:OfficeHolder ;
                      rdf:type dbo:Monarch .

  # Step 4: Father of this child (who is a royalty)
  ?officeHolderRoyalty dbo:father ?fatherOfChild .
  
  # Step 5: Father's father, who is both royalty and office holder
  ?fatherOfChild dbo:father ?royalOfficeHolderFather .
  ?royalOfficeHolderFather rdf:type dbo:Monarch ;
                           rdf:type dbo:OfficeHolder .

  # Step 6: This person is Emperor Antoku
  FILTER(STR(?royalOfficeHolderFather) = ""Emperor_Antoku"") .

  # Step 7: Emperor Antoku's father
  ?emperorAntoku dbo:father ?antokuFather .
  FILTER(STR(?emperorAntoku) = ""Emperor_Antoku"") .

  # Step 8: Spouse of the spouse from step 1 who is royalty
  ?spouseOfTakakura dbo:spouse ?finalSpouse .
  ?finalSpouse rdf:type dbo:Monarch .
}
```",9,15,10,3,3,3,3,71,0,0,1,0,0.0,0
98,25,test,Give me the birth place of the person born as Paolo Elito M. Ballesteros IV and entity in Philippines and region of the time zone of Lopez Jaena.,"SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/timeZone> ?v4 . ?v1 <http://dbpedia.org/property/birthName> ""Paolo Elito M. Ballesteros IV""@en . ?result <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Philippines> . <http://dbpedia.org/resource/Lopez_Jaena> <http://dbpedia.org/ontology/timeZone> ?v4 . ?v1 <http://dbpedia.org/ontology/birthPlace> ?result . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?birthPlace ?region WHERE {
  # Query for birth place of Paolo Elito M. Ballesteros IV
  dbr:Paolo_Elito_M._Ballesteros_IV dbo:birthPlace ?birthPlace .

  # Since the entire Philippines is in one time zone, we directly assign the region
  BIND(""Philippines"" AS ?region)
}
```",5,5,6,2,3,2,3,28,0,0,2,0,0.0,0
839,67,test,"Give me the band of the member of the band, that is a band and a group, of Peter Schorowsky and band of Kevin Russell (musician) and band of the band, that is a musical artist, of the professional in Musician.","SELECT ?result WHERE { ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. <http://dbpedia.org/resource/Kevin_Russell_(musician)> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Group>. <http://dbpedia.org/resource/Peter_Schorowsky> <http://dbpedia.org/ontology/associatedMusicalArtist> ?v0 . ?v1 <http://dbpedia.org/ontology/associatedMusicalArtist> ?v3 . ?result <http://dbpedia.org/ontology/bandMember> ?v6 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Band>. ?v1 <http://dbpedia.org/property/occupation> ""Musician""@en . ?v0 <http://dbpedia.org/ontology/bandMember> ?v6 . ?result <http://dbpedia.org/ontology/bandMember> ?v3 . }","```sparql
# Step 1: Find Peter Schorowsky's band that is both a ""band"" and a ""group""
SELECT ?band WHERE {
    ?person dbo:birthName ""Peter Schorowsky""@en .
    ?person dbo:memberOfBand ?band .
    ?band rdf:type dbp:Band ;
          rdf:type dbp:MusicalGroup .
}

# Step 2: Find Kevin Russell's band
SELECT ?kevinRussellBand WHERE {
    ?kevinRussell dbo:birthName ""Kevin Russell""@en .
    ?kevinRussell dbo:memberOfBand ?kevinRussellBand .
}

# Step 3: Find the band of Kevin Russell's band that is a musical artist
SELECT ?band2 WHERE {
    ?kevinRussellBand dbo:memberOfBand ?band2 .
    ?band2 rdf:type dbp:MusicalArtist .
}

# Step 4: Find the band associated with the professional musician (assuming this refers to the final band found)
SELECT ?finalBand WHERE {
    ?professionalMusician dbo:occupation ""musician""@en .
    ?professionalMusician dbo:memberOfBand ?finalBand .
}
```",7,10,8,3,3,3,3,71,0,0,1,0,0.0,0
826,64,test,"Give me the successor of Louis II, Grand Duke of Hesse and spouse of the child of the father of Anna Magdalena Appel and predecessor of the parent of the child of Louis IV, Grand Duke of Hesse.","SELECT ?result WHERE { <http://dbpedia.org/resource/Anna_Magdalena_Appel> <http://dbpedia.org/property/father> ?v3 . ?v0 <http://dbpedia.org/ontology/parent> <http://dbpedia.org/resource/Louis_IV,_Grand_Duke_of_Hesse> . <http://dbpedia.org/resource/Louis_II,_Grand_Duke_of_Hesse> <http://dbpedia.org/ontology/successor> ?result . ?v0 <http://dbpedia.org/ontology/parent> ?v1 . ?v2 <http://dbpedia.org/property/father> ?v3 . ?result <http://dbpedia.org/ontology/successor> ?v1 . ?v2 <http://dbpedia.org/ontology/spouse> ?result . }","```sparql
SELECT ?successor WHERE {
  wd:Q1234567 wdt:P136 ?parent1 . # Louis II, Grand Duke of Hesse
  ?parent1 wdt:P57 ?child1 .     # Child of Louis II (Louis III)
  ?child1 wdt:P26 ?spouse .      # Spouse of the child (Anna Magdalena Bach's spouse: Johann Sebastian Bach)

  wd:Q1234568 wdt:P22 ?fatherOfAnnaMagdalenaAppel . # Anna Magdalena Appel's father
  ?fatherOfAnnaMagdalenaAppel wdt:P26 ?spouseOfChild . # Spouse of the child (Johann Sebastian Bach)
  
  wd:Q1234569 wdt:P136 ?parent2 . # Louis IV, Grand Duke of Hesse
  ?parent2 wdt:P40 ?child2 .      # Child of Louis IV (Princess Elisabeth)
  ?child2 wdt:P25 ?parentOfChild .# Parent of the child (Princess Alice)

  ?parentOfChild wdt:P22 ?predecessorParent . # Predecessor of the parent (Queen Victoria's father: Prince Albert)
  
  FILTER (?spouse = ?spouseOfChild) .
}
```",7,7,8,3,3,3,3,71,0,0,1,0,0.0,0
216,58,test,"Give me the player in Igor Bišćan and team of the person born, that is a sports manager and a soccer manager and a soccer player, on the death of Pavel Vezhinov and player in the coach, that is a soccer player and a sports manager and a soccer manager, of Bosnia and Herzegovina national under-18 football team.",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/coach> ?v2 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsManager>. ?v5 <http://dbpedia.org/ontology/team> ?result . <http://dbpedia.org/resource/Igor_Bišćan> <http://dbpedia.org/ontology/team> ?result . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsManager>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerManager>. ?v2 <http://dbpedia.org/ontology/birthDate> ?v1 . <http://dbpedia.org/resource/Bosnia_and_Herzegovina_national_under-18_football_team> <http://dbpedia.org/ontology/coach> ?v5 . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerManager>. <http://dbpedia.org/resource/Pavel_Vezhinov> <http://dbpedia.org/ontology/deathDate> ?v1 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerPlayer>. ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerPlayer>. },"```sparql
# Step 1: Find Igor Bišćan's team
SELECT ?team WHERE {
    dbpedia:Igor_Bišćan dbo:playsFor ?team .
}

# Step 2: Find a person born in the same place as the team, who is a sports manager, soccer manager, and player
SELECT DISTINCT ?person WHERE {
    ?team dbo:location ?location .
    ?person dbo:birthPlace ?location ;
            rdf:type dbpedia:SoccerManager ;
            rdf:type dbpedia:SportsManager ;
            rdf:type dbpedia:SoccerPlayer .
}

# Step 3: Find Pavel Vezhinov's death date
SELECT ?deathDate WHERE {
    dbpedia:Pavel_Vezhinov dbo:dateOfDeath ?deathDate .
}

# Step 4: Identify the coach of Bosnia and Herzegovina national under-18 football team who is also a player, manager, and sports manager
SELECT DISTINCT ?coach WHERE {
    dbpedia:Bosnia_and_Herzegovina_national_under-18_football_team dbo:headCoach ?coach .
    ?coach rdf:type dbpedia:SoccerPlayer ;
           rdf:type dbpedia:SportsManager ;
           rdf:type dbpedia:SoccerManager .
}

# Step 5: Find a player in the coach's squad
SELECT DISTINCT ?player WHERE {
    ?coach dbo:playsFor ?team .
    ?team dbo:member ?player .
}
```",6,12,7,3,3,3,3,71,0,0,1,0,0.0,0
773,56,test,"Give me the parent of the child, that is a royalty, of the father, that is an office holder and a royalty, of Carloman of Bavaria and spouse of the father of Charles the Fat and parent of Carloman of Bavaria.",SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v1 <http://dbpedia.org/property/father> ?v0 . <http://dbpedia.org/resource/Carloman_of_Bavaria> <http://dbpedia.org/property/father> ?v0 . ?v1 <http://dbpedia.org/ontology/parent> ?result . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?result <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Carloman_of_Bavaria> . <http://dbpedia.org/resource/Charles_the_Fat> <http://dbpedia.org/property/father> ?v2 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v2 <http://dbpedia.org/ontology/spouse> ?result . },"```sparql
SELECT ?parent WHERE {
  # Carloman of Bavaria
  wd:Q123456 rdfs:label ""Carloman of Bavaria""@en .
  
  # Father of Carloman of Bavaria who is a royalty and an office holder
  ?father wdt:P22 wd:Q123456 ;
          wdt:P31/wdt:P279* wd:Q5 ;  # Royalty
          wdt:P39 ?office .           # Office Holder

  # Spouse of the father
  ?spouse wdt:P26 ?father .

  # Parent of Charles the Fat
  ?charlesFat wdt:P22 wd:Q654321 ;  # Charles the Fat
               rdfs:label ""Charles the Fat""@en .
  
  FILTER (?spouse = ?charlesFat) .

  # Child of the spouse who is a royalty
  ?child wdt:P25 ?spouse ;
         wdt:P31/wdt:P279* wd:Q5 .  # Royalty

  # Parent of this child
  ?parent wdt:P22 ?child .
}
```

Note: Replace `wd:Q123456` with the actual DBpedia ID for Carloman of Bavaria and `wd:Q654321` with the DBpedia ID for Charles the Fat. These IDs need to be looked up in DBpedia.",6,9,7,3,3,3,3,71,0,0,1,0,0.0,0
124,69,test,"Give me the military force of the war, that is an event and a military conflict and a societal event, of Frank Rhodes (British Army officer) and commander in the war, that is a societal event and a military conflict, of the reference, that is Australian and an organisation and a military unit, to 'A' Battery, Royal Australian Artillery and military force of the force, that is a societal event and a military conflict, of the person born on 1850-06-24.","SELECT ?result WHERE { ?v4 <http://dbpedia.org/ontology/battle> ?v3 . ?result <http://dbpedia.org/ontology/battle> ?v7 . ?v7 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?v3 <http://dbpedia.org/ontology/commander> ?result . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?v4 <http://xmlns.com/foaf/0.1/name> ""'A' Battery, Royal Australian Artillery""@en . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryUnit>. ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?v7 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. <http://dbpedia.org/resource/Frank_Rhodes_(British_Army_officer)> <http://dbpedia.org/ontology/battle> ?v7 . ?v1 <http://dbpedia.org/ontology/birthDate> ""1850-06-24""^^<http://www.w3.org/2001/XMLSchema#date> . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v4 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Australia>. ?result <http://dbpedia.org/ontology/battle> ?v2 . ?v2 <http://dbpedia.org/ontology/commander> ?v1 . ?v7 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. }","```sparql
SELECT ?militaryForce WHERE {
  # Frank Rhodes and his war involvement
  ?frankRhodes dbo:birthDate ""1859-01-01""^^xsd:date ;
               dbo:occupation dbp:British_Army_officer ;
               dbo:commanderInWar ?war .
  
  # A Battery, Royal Australian Artillery reference
  ?battery rdfs:label ""A Battery, Royal Australian Artillery""@en ;
           dbo:militaryUnitOf ?organization .

  ?organization rdf:type dbo:Military_Unit ;
                dbo:participatedIn ?societalEvent .

  ?societalEvent rdf:type dbo:Military_Conflict ;
                 dbo:participatingMilitaryForce ?militaryForce .
  
  # Person born on June 24, 1850
  ?person dbo:birthDate ""1850-06-24""^^xsd:date ;
          dbo:commanderInWar ?war .

  FILTER(?frankRhodes != ?person)
}
```",8,18,9,3,3,3,3,71,0,0,9,0,0.0,0
715,60,test,"Give me the commander in the force, that is a military conflict, of the native of Morocco and leader of the office, that is a government agency and an organisation, of the reference to Carlos Franco Iribarnegaray.","SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/GovernmentAgency>. ?v0 <http://xmlns.com/foaf/0.1/name> ""Carlos Franco Iribarnegaray""@en . ?v0 <http://dbpedia.org/property/office> ?v1 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?v1 <http://dbpedia.org/ontology/leader> ?result . ?v3 <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Morocco> . ?v2 <http://dbpedia.org/ontology/commander> ?result . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v2 <http://dbpedia.org/ontology/commander> ?v3 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?commander WHERE {
  # Identify Carlos Franco Iribarnegaray and his role
  ?person rdfs:label ""Carlos Franco Iribarnegaray""@en .
  
  # Find the office/agency he led
  ?office dbo:head ?person ;
          a dbo:GovernmentAgency, dbo:Organization .

  # Link this office/agency to a military conflict
  ?conflict dbo:participatingOrganisation ?office ;
            a dbo:MilitaryConflict .

  # Find the commander of the force in that conflict who is a native of Morocco
  ?commander dbo:nationality dbr:Morocco ;
             dbo:commandedForce ?force .
  
  ?force dbo:involvedInMilitaryOperation ?conflict .
}
```",6,9,7,3,2,3,3,71,0,0,1,0,0.0,0
433,59,test,"Give me the associated musical artist of the person born, that is a musical artist and an artist, as the persona of Paul Chambers and associated musical artist of the associated musical artist, that is an artist and a musical artist, of the associated musical artist, that is a musical artist and an artist, of Ornette Coleman.",SELECT ?result WHERE { ?v2 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v2 <http://dbpedia.org/property/birthName> ?v3 . <http://dbpedia.org/resource/Paul_Chambers> <http://xmlns.com/foaf/0.1/givenName> ?v3 . ?v5 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. <http://dbpedia.org/resource/Ornette_Coleman> <http://dbpedia.org/ontology/associatedMusicalArtist> ?v0 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?v0 <http://dbpedia.org/ontology/associatedMusicalArtist> ?v5 . },"```sparql
# Step 1: Find Paul Chambers' associated musical artist
SELECT ?associatedArtist WHERE {
  dbpedia:Paul_Chambers dbo:associatedMusicalArtist ?artist .
  ?artist rdf:type dbo:MusicalArtist ;
          rdf:type dbo:Artist .
}

# Step 2: From the result of step 1, find the next associated musical artist
SELECT ?nextAssociatedArtist WHERE {
  ?artist dbo:associatedMusicalArtist ?nextArtist .
  ?nextArtist rdf:type dbo:MusicalArtist ;
              rdf:type dbo:Artist .
}

# Step 3: Find Ornette Coleman's associated musical artist
SELECT ?associatedArtist WHERE {
  dbpedia:Ornette_Coleman dbo:associatedMusicalArtist ?artist .
  ?artist rdf:type dbo:MusicalArtist ;
          rdf:type dbo:Artist .
}

# Step 4: From the result of step 3, find the final associated musical artist
SELECT ?finalAssociatedArtist WHERE {
  ?artist dbo:associatedMusicalArtist ?finalArtist .
  ?finalArtist rdf:type dbo:MusicalArtist ;
               rdf:type dbo:Artist .
}
```",6,12,7,3,2,3,3,71,0,0,10,0,0.0,0
791,62,test,"Give me the spouse of the spouse, that is a royalty, of the reference to Emperor Takakura and father of Emperor Go-Toba and predecessor of the child of the child, that is an office holder and a royalty, of Emperor Go-Shirakawa.","SELECT ?result WHERE { ?v3 <http://dbpedia.org/ontology/spouse> ?v4 . <http://dbpedia.org/resource/Emperor_Go-Toba> <http://dbpedia.org/property/father> ?result . ?v4 <http://xmlns.com/foaf/0.1/name> ""Emperor Takakura""@en . ?v6 <http://dbpedia.org/property/father> ?v0 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?result <http://dbpedia.org/ontology/successor> ?v6 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?result <http://dbpedia.org/ontology/spouse> ?v3 . ?v0 <http://dbpedia.org/ontology/parent> <http://dbpedia.org/resource/Emperor_Go-Shirakawa> . }","```sparql
SELECT ?spouseOfSpouse WHERE {
  # Step 1: Identify Emperor Takakura
  ?emperorTakakura dbp:name ""Emperor Takakura""@en .
  
  # Step 2: Find his spouse
  ?emperorTakakura dbp:spouse ?spouse .

  # Step 3: Spouse's spouse (that is a royalty) refers back to Emperor Takakura himself
  ?spouse dbp:spouse ?spouseOfSpouse .
  
  # Step 4: Father of Emperor Go-Toba
  ?emperorGoToba dbp:name ""Emperor Go-Toba""@en ;
                 dbp:father ?fatherOfGoToba .

  # Ensure the spouse's spouse is indeed Emperor Takakura
  FILTER (?spouseOfSpouse = ?emperorTakakura)

  # Step 5: Predecessor of the child of the child of Emperor Go-Shirakawa
  ?emperorGoShirakawa dbp:name ""Emperor Go-Shirakawa""@en ;
                      dbp:child ?childOfGoShirakawa .
  
  ?childOfGoShirakawa dbp:child ?grandChild .

  # Find the predecessor of this grandchild
  ?predecessor dbp:succeededBy ?grandChild .

  # Ensure the spouse's spouse is indeed Emperor Takakura and matches all conditions
  FILTER (?spouseOfSpouse = ?fatherOfGoToba && ?spouseOfSpouse = ?predecessor)
}
```",7,10,8,3,3,3,3,71,0,0,1,0,0.0,0
166,20,test,"Give me the entity in the territory administered, that is a country, from the reference to Madrid and resting place of the military force of the force, that is an event and a societal event and a military conflict, of Manuel Hedilla.","SELECT ?result WHERE { ?v2 <http://dbpedia.org/ontology/restingPlace> ?result . ?v4 <http://xmlns.com/foaf/0.1/name> ""Madrid""@en . ?v2 <http://dbpedia.org/ontology/battle> ?v1 . ?v1 <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Manuel_Hedilla> . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. ?v5 <http://dbpedia.org/ontology/capital> ?v4 . ?result <http://dbpedia.org/ontology/country> ?v5 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. }","```sparql
SELECT ?country WHERE {
  ?event dbo:wikiPageRedirects db:Q1234567 ;  # Assuming Q1234567 is the DBpedia ID for Sanjurjada
          a dbo:Event ;
          dbo:location dbr:Madrid ;
          dbo:participatedInMilitaryConflict ?conflict .
  ?conflict a dbo:MilitaryConflict .

  ?country dbo:administrativeCapital dbr:Madrid ;
           a dbo:Country .

  OPTIONAL { ?event dbo:societalEvent true . }
}
```",6,10,7,3,2,3,2,20,0,0,4,0,0.0,0
917,66,test,"Give me the parent of the child, that is a royalty, of Kamehameha IV and child of the father of the child, that is a royalty, of Kamehameha III and child of the father of Keʻelikōlani.",SELECT ?result WHERE { <http://dbpedia.org/resource/Kamehameha_III> <http://dbpedia.org/ontology/child> ?v5 . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. <http://dbpedia.org/resource/Keʻelikōlani> <http://dbpedia.org/property/father> ?v6 . ?result <http://dbpedia.org/property/father> ?v0 . ?result <http://dbpedia.org/ontology/parent> ?v6 . ?result <http://dbpedia.org/ontology/child> ?v3 . ?v5 <http://dbpedia.org/property/father> ?v0 . ?v3 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Kamehameha_IV> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?parent WHERE {
  # Kamehameha IV's royal child and their parent
  ?childKIV a dbo:Monarch ;
            dbo:spouseOrPartner ?kamehamehaIV .
  ?kamehamehaIV dbr:Alexander_Liholiho .

  # Parent of Kamehameha IV's royal child
  ?parentKIV dbo:child ?childKIV .

  # Kamehameha III's royal child and their father
  ?childKIII a dbo:Monarch ;
             dbo:spouseOrPartner ?kamehamehaIII .
  ?kamehamehaIII dbr:Kauikeaouli .

  # Father of Kamehameha III's royal child
  ?fatherKIII dbo:child ?childKIII .

  # Keʻelikōlani and her father
  ?keelikolanii a dbo:Monarch ;
                dbo:spouseOrPartner ?keelikolani .
  ?keelikolani dbr:Keʻelikōlani .
  ?fatherKekuanaoa dbo:child ?keelikolani .

  # Common parent
  FILTER(?parentKIV = ?fatherKIII && ?fatherKIII = ?fatherKekuanaoa)
}
```",7,9,8,3,3,3,3,71,0,0,1,0,0.0,0
508,20,test,"Give me the birthplace of the commander, that is Saudi, in the war, that is a military conflict and a societal event, of Hu Yukun and birthplace of the commander, that is a politician, in the war, that is a military conflict and a societal event and an event, of Hayao Tada.",SELECT ?result WHERE { ?v5 <http://dbpedia.org/ontology/birthPlace> ?result . ?v5 <http://dbpedia.org/ontology/nationality> <http://dbpedia.org/resource/Saudi_Arabia>. ?v2 <http://dbpedia.org/ontology/birthPlace> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. <http://dbpedia.org/resource/Hayao_Tada> <http://dbpedia.org/ontology/battle> ?v1 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v1 <http://dbpedia.org/ontology/commander> ?v2 . ?v4 <http://dbpedia.org/ontology/commander> ?v5 . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. <http://dbpedia.org/resource/Hu_Yukun> <http://dbpedia.org/ontology/battle> ?v4 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. },"```sparql
# Query for Hu Yukun's Saudi Commander's Birthplace
SELECT ?birthPlace WHERE {
  ?commander dbo:nationality dbr:Saudi_Arabia .
  ?commander dbo:occupation dbr:Military_person .
  ?conflict dbo:participatedIn dbr:Battle_of_Changsha_1941 .
  ?commander dbo:commanded ?unit .
  ?unit dbo:participatedIn ?conflict .
  ?huYukun dbo:involvedIn ?conflict ;
           rdfs:label ""Hu Yukun""@en .
  ?commander foaf:name ?name .
  FILTER(CONTAINS(LCASE(?name), ""saudi"")).
  ?commander dbo:birthPlace ?birthPlace .
}

UNION

# Query for Hayao Tada's Politician Commander's Birthplace
SELECT ?birthPlace WHERE {
  ?commander dbo:nationality dbr:Japan ;
             dbo:occupation dbr:Politician .
  ?conflict dbo:participatedIn ?event ;
            a dbo:MilitaryConflict, dbo:SocietalEvent .
  ?tada dbo:involvedIn ?conflict ;
        rdfs:label ""Hayao Tada""@en .
  ?commander dbo:commanded ?unit .
  ?unit dbo:participatedIn ?conflict .
  ?commander dbo:birthPlace ?birthPlace .
}
```",6,13,7,3,2,3,2,20,0,0,3,0,0.0,0
158,18,test,"Give me the entity in the award, that is a country, of the reference to Adelbert Cronkhite and party of the successor, that is a prime minister and an office holder and a politician, of André Tardieu.","SELECT ?result WHERE { ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/PrimeMinister>. ?v1 <http://xmlns.com/foaf/0.1/name> ""Adelbert Cronkhite""@en . ?v3 <http://dbpedia.org/ontology/party> ?result . ?result <http://dbpedia.org/ontology/country> ?v2 . ?v1 <http://dbpedia.org/property/awards> ?v2 . <http://dbpedia.org/resource/André_Tardieu> <http://dbpedia.org/ontology/successor> ?v3 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. }","```sparql
# Step 1: Find the award associated with Adelbert Cronkhite
SELECT ?award WHERE {
    ?person dbo:name ""Adelbert Cronkhite""@en .
    ?person dbo:honoraryAward ?award .
}

# Step 2: Find the country associated with the award
SELECT DISTINCT ?country WHERE {
    ?award dbo:awardedByCountry ?country .
    FILTER(?award IN (<result_from_step_1>))
}

# Step 3: Identify André Tardieu's successor
SELECT DISTINCT ?successor WHERE {
    ?tardieu dbo:succeededBy ?successor .
    ?tardieu dbo:name ""André Tardieu""@en .
}

# Step 4: Determine the party of the successor and ensure they are a prime minister, office holder, and politician
SELECT DISTINCT ?party WHERE {
    ?successor dbo:politicalParty ?party .
    ?successor rdf:type dbo:PrimeMinister ;
               dbo:officeHolder ;
               dbo:politician .
    FILTER(?successor IN (<result_from_step_3>))
}

# Step 5: Combine the results to find the entity in the award (country) and the party of the successor
SELECT DISTINCT ?country ?party WHERE {
    VALUES (?award) {(<result_from_step_1>)}
    VALUES (?successor) {(<result_from_step_3>)}
    
    ?award dbo:awardedByCountry ?country .
    ?successor dbo:politicalParty ?party .
    FILTER(?successor rdf:type dbo:PrimeMinister ;
              ?successor rdf:type dbo:officeHolder ;
              ?successor rdf:type dbo:politician)
}
```",5,9,6,3,2,3,2,20,0,0,1,0,0.0,0
926,71,test,"Give me the child of the father, that is a royalty, of the parent, that is a royalty, of Beyhan Sultan (daughter of Mustafa III) and father of the father of the spouse of Neşerek Kadın and successor of the child of the spouse of Şermi Kadın.",SELECT ?result WHERE { ?v1 <http://dbpedia.org/property/father> ?v2 . ?v7 <http://dbpedia.org/property/father> ?v8 . ?v8 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. <http://dbpedia.org/resource/Neşerek_Kadın> <http://dbpedia.org/ontology/spouse> ?v1 . ?v5 <http://dbpedia.org/ontology/successor> ?result . ?v8 <http://dbpedia.org/ontology/child> ?result . <http://dbpedia.org/resource/Beyhan_Sultan_(daughter_of_Mustafa_III)> <http://dbpedia.org/ontology/parent> ?v7 . ?v4 <http://dbpedia.org/ontology/spouse> <http://dbpedia.org/resource/Şermi_Kadın> . ?v5 <http://dbpedia.org/property/father> ?v4 . ?v7 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v2 <http://dbpedia.org/property/father> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?child WHERE {
  # Beyhan Sultan's father (Mustafa III)
  dbr:Beyhan_Sultan dbo:father dbr:Mustafa_III .

  # Neşerek Kadın's spouse and their lineage
  ?nefernekadınSpouse dbo:spouse dbr:Neşerek_Kadın .
  ?nefernekadinsFather dbo:child ?nefernekadınSpouse .
  ?grandfatherOfNefernekadınSpouse dbo:child ?nefernekadinsFather .

  # Şermi Kadın's spouse and their child
  ?sermiKadinSpouse dbo:spouse dbr:Şermi_Kadın .
  ?childOfSermiKadinSpouse dbo:parent ?sermiKadinSpouse .
  
  # Successor of the child of Şermi Kadın's spouse
  ?successor dbo:predecessor ?childOfSermiKadinSpouse .

  # Mustafa III's royal children
  dbr:Mustafa_III dbo:child ?royalChild .

  # Find the person who is both:
  FILTER (?grandfatherOfNefernekadınSpouse = ?successor)
  
  # Return the child of Mustafa III who fits the criteria
  BIND(?royalChild AS ?child)
}
```",9,11,10,3,3,3,3,71,0,0,1,0,0.0,0
715,57,test,"Give me the commander in the force of the mayor, that is an office holder and a politician and a president, of 1933 Spanish general election and commander in Rif War and leader of the office, that is a government agency and an organisation, of Carlos Franco Iribarnegaray.",SELECT ?result WHERE { ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/President>. ?v3 <http://dbpedia.org/ontology/leader> ?result . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/GovernmentAgency>. ?v5 <http://dbpedia.org/ontology/commander> ?v0 . ?v5 <http://dbpedia.org/ontology/commander> ?result . <http://dbpedia.org/resource/Carlos_Franco_Iribarnegaray> <http://dbpedia.org/property/office> ?v3 . <http://dbpedia.org/resource/1933_Spanish_general_election> <http://dbpedia.org/property/leader> ?v0 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. <http://dbpedia.org/resource/Rif_War> <http://dbpedia.org/ontology/commander> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?person WHERE {
  ?person a dbo:Person .
  ?person dbo:birthName ""Miguel Primo de Rivera y Orbaneja""@en .
  
  # Check for roles as commander and politician
  OPTIONAL { ?person dbo:occupation dbr:Military_officer . }
  OPTIONAL { ?person dbo:occupation dbr:Politician . }

  # Check for presidency or leadership role
  OPTIONAL { ?person dbo:officeHolderOf dbr:Prime_Minister_of_Spain . }
  
  # Association with Rif War and Carlos Franco Iribarnegaray
  OPTIONAL {
    ?event dbo:commander ?person .
    ?event dbo:location dbr:Rif_War .
    
    ?organization dbo:leader ?person ;
                  dbo:member dbr:Carlos_Franco_Iribarnegaray .
  }
}
```",6,11,7,3,3,3,3,71,0,0,1,0,0.0,0
579,18,test,"Give me the native of the residence, that is English and a settlement, of the resident of Scotland and person born as the birth name of Jane Percy, Duchess of Northumberland.","SELECT ?result WHERE { ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. ?v2 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/United_Kingdom>. <http://dbpedia.org/resource/Jane_Percy,_Duchess_of_Northumberland> <http://dbpedia.org/property/birthName> ?v3 . ?result <http://dbpedia.org/property/birthName> ?v3 . ?v1 <http://dbpedia.org/property/residence> ?v2 . ?v1 <http://dbpedia.org/ontology/residence> <http://dbpedia.org/resource/Scotland> . ?result <http://dbpedia.org/ontology/birthPlace> ?v2 . }","```sparql
# Step 1: Find Jane Percy's birth name
SELECT ?birthName WHERE {
  dbpedia:Jane_Percy_Duchess_of_Northumberland dbo:birthName ?birthName .
}

# Step 2: Find a person from Scotland with that birth name
SELECT DISTINCT ?person WHERE {
  ?person dbo:birthName ?birthName ;
          dbo:nationality dbr:Scottish_people .
  
  # Replace ?birthNameValue with the actual value obtained from step 1
  FILTER(?birthName = <http://dbpedia.org/resource/Your_Birth_Name_Here>)
}

# Step 3: Find their residence
SELECT DISTINCT ?residence WHERE {
  ?person dbo:residence ?residence .
  
  # Replace ?personValue with the actual value obtained from step 2
  FILTER(?person = <http://dbpedia.org/resource/Your_Person_Here>)
}

# Step 4: Check if the residence has English as its native language and is a settlement
SELECT DISTINCT ?nativeLanguage WHERE {
  ?residence dbo:nativeName ?nativeName ;
             dbo:language ?nativeLanguage .
  
  # Replace ?residenceValue with the actual value obtained from step 3
  FILTER(?residence = <http://dbpedia.org/resource/Your_Residence_Here>)
  
  FILTER(langMatches(lang(?nativeName), ""en""))
  FILTER(CONTAINS(str(?nativeLanguage), ""English""))
}
```",5,7,6,3,2,3,2,20,0,0,1,0,0.0,0
527,19,test,"Give me the actor of the movie, that is a work and English and a television show, with Bernard Bresslaw and author of the work, that is a work and a book, of the host of Hyperland.",SELECT ?result WHERE { ?v2 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/United_Kingdom>. ?v4 <http://dbpedia.org/property/author> ?v0 . <http://dbpedia.org/resource/Hyperland> <http://dbpedia.org/ontology/presenter> ?v0 . ?v4 <http://dbpedia.org/property/author> ?result . ?v2 <http://dbpedia.org/property/starring> ?result . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/TelevisionShow>. ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?v2 <http://dbpedia.org/property/starring> <http://dbpedia.org/resource/Bernard_Bresslaw> . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Book>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?actor WHERE {
  # Step 1: Identify the host of Hyperland and their authored book
  dbr:Hyperland dbo:host dbr:Tim_Brooke-Taylor .
  dbr:Tim_Brooke-Taylor dbo:author dbr:The_Complete_Hyperland .

  # Step 2: Find works related to The Complete Hyperland (book)
  ?work dbo:author dbr:Tim_Brooke-Taylor .
  
  # Step 3: Identify if there's a work that is English and features Bernard Bresslaw
  ?work dbo:actor dbr:Bernard_Bresslaw ;
        dbo:language ""English"" .

  # Step 4: Get the actor from this work
  ?work dbo:actor ?actor .
}
```",5,10,6,3,2,3,2,20,0,0,1,0,0.0,0
892,58,test,"Give me the entity in Italy and landmark at elevation of the award of Anna Ishii and entity in the administration, that is Italian and a region and a settlement and an administrative region, of the party, that is a political party and an organisation, of Andrea Cozzolino.",SELECT ?result WHERE { <http://dbpedia.org/resource/Anna_Ishii> <http://dbpedia.org/property/awards> ?v5 . ?v0 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Italy>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/AdministrativeRegion>. ?result <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Italy> . ?result <http://dbpedia.org/ontology/province> ?v0 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Region>. <http://dbpedia.org/resource/Andrea_Cozzolino> <http://dbpedia.org/ontology/party> ?v4 . ?result <http://dbpedia.org/ontology/elevation> ?v5 . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/PoliticalParty>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?v0 <http://dbpedia.org/property/leaderParty> ?v4 . },"```sparql
# Query 1: Identify Anna Ishii's Award
SELECT ?award WHERE {
  ?person foaf:name ""Anna Ishii""@en .
  ?person dbo:awardsReceived ?award .
}

# Query 2: Find Landmark at Elevation Related to the Award
SELECT DISTINCT ?landmark ?elevation WHERE {
  ?award dbo:elevation ?elevation .
  ?landmark dbo:elevation ?elevation ;
           dbo:country dbr:Italy .
}

# Query 3: Determine Andrea Cozzolino's Political Party
SELECT ?party WHERE {
  ?person foaf:name ""Andrea Cozzolino""@en .
  ?person dbo:memberOfParty ?party .
  ?party a dbo:PoliticalParty ;
         dbo:country dbr:Italy .
}

# Query 4: Identify the Administrative Region of the Party
SELECT DISTINCT ?region WHERE {
  ?party dbo:administrativeRegion ?region .
  ?region a dbo:AdministrativeRegion, dbo:Settlement, dbo:Region ;
          dbo:country dbr:Italy .
}
```",6,12,7,3,3,3,3,71,0,0,2,0,0.0,0
917,64,test,"Give me the child of Kekūanāoʻa and child of the father of the child, that is a royalty, of Kamehameha III and parent of the child, that is a royalty, of the mayor of Hawaiian Kingdom.",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/child> ?v2 . <http://dbpedia.org/resource/Kamehameha_III> <http://dbpedia.org/ontology/child> ?v5 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v2 <http://dbpedia.org/property/father> ?v4 . ?v5 <http://dbpedia.org/property/father> ?v0 . ?result <http://dbpedia.org/ontology/parent> <http://dbpedia.org/resource/Kekūanāoʻa> . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?result <http://dbpedia.org/property/father> ?v0 . <http://dbpedia.org/resource/Hawaiian_Kingdom> <http://dbpedia.org/property/leader> ?v4 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?childOfKekuanaoa ?grandChildRoyalty ?royalChildOfKamehamehaIII ?mayorParentRoyalty WHERE {
  # Step 1: Find a child of Kekūanāoʻa
  dbr:Kekuanaoa dbo:child ?childOfKekuanaoa .

  # Step 2: Find the grandchild of Kekūanāoʻa who is royalty
  ?childOfKekuanaoa dbo:parent ?kekuanaoa ;
                  dbo:child ?grandChildRoyalty .
  ?grandChildRoyalty a dbo:Monarch .

  # Step 3: Find a royal child of Kamehameha III
  dbr:Kamehameha_III dbo:child ?royalChildOfKamehamehaIII .
  ?royalChildOfKamehamehaIII a dbo:Monarch .

  # Step 4: Identify the mayor of the Hawaiian Kingdom and their royal parent
  ?mayor dbr:Hawaii dbo:mayor ?mayorName .
  ?mayorName dbo:parent ?mayorParentRoyalty .
  ?mayorParentRoyalty a dbo:Monarch .

  # Step 5: Find commonality between grandChildRoyalty and mayorParentRoyalty
  FILTER(?grandChildRoyalty = ?mayorParentRoyalty)
}
```",7,9,8,3,3,3,3,71,0,0,2,0,0.0,0
129,25,test,"Give me the associated musical artist of Saba (rapper) and associated musical artist of the actor, that is an organisation, of Dreamville Presents: Revenge and professional in the mayor of 1999 West Dunbartonshire Council election.",SELECT ?result WHERE { <http://dbpedia.org/resource/Dreamville_Presents:_Revenge> <http://dbpedia.org/property/starring> ?v4 . ?result <http://dbpedia.org/property/occupation> ?v3 . <http://dbpedia.org/resource/1999_West_Dunbartonshire_Council_election> <http://dbpedia.org/property/leader> ?v3 . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. <http://dbpedia.org/resource/Saba_(rapper)> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v4 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . },"```sparql
# Query for Saba's associated musical artist
SELECT ?artist WHERE {
  wd:Q1234567 wdt:P106 wd:Q33999 . # Saba is a musician
  wd:Q1234567 wdt:P527 ?artist .    # Associated artists or collaborators
}

UNION

# Query for J. Cole's association with Dreamville
SELECT ?dreamvilleArtist WHERE {
  wd:Q7890123 wdt:P106 wd:Q33999 . # J. Cole is a musician
  wd:Q7890123 wdt:P112 ?dreamville . # J. Cole is associated with Dreamville
  ?dreamville wdt:P127 ?artist .     # Artists associated with Dreamville
}

UNION

# Query for the mayor of West Dunbartonshire in 1999 and their professional organization
SELECT ?organization WHERE {
  ?mayor wdt:P39 wd:Q12345678 .      # Mayor of West Dunbartonshire
  ?mayor wdt:P106 wd:Q5 .            # Person
  ?mayor wdt:P569 ?dateOfBirth .     # Born in 1999
  FILTER(YEAR(?dateOfBirth) = 1999) .
  ?mayor wdt:P108 ?organization .    # Professional organization
}

UNION

# Query for musical artist associated with the mayor's organization
SELECT ?artist WHERE {
  ?organization wdt:P112 ?artist .   # Organization has a musical artist
}
```",5,6,6,2,3,2,3,28,0,0,1,0,0.0,0
892,59,test,Give me the entity in the profession of the true self of Enrico Crolla and landmark at elevation of the award of the member of E-girls.,"SELECT ?result WHERE { ?v3 <http://dbpedia.org/property/occupation> ?v1 . ?v3 <http://xmlns.com/foaf/0.1/givenName> ""Enrico Crolla""@en . ?result <http://dbpedia.org/ontology/elevation> ?v4 . <http://dbpedia.org/resource/E-girls> <http://dbpedia.org/ontology/bandMember> ?v0 . ?v0 <http://dbpedia.org/property/awards> ?v4 . ?result <http://dbpedia.org/ontology/country> ?v1 . }","```sparql
# Query for Enrico Crolla's profession
SELECT ?profession WHERE {
  dbpedia:Enrico_Crolla dbo:occupation ?profession .
}

# Assuming we identify an award and its elevation, replace `AwardLocation` with the actual location or concept related to the award.
# Query for a landmark at the same elevation as the award's location
SELECT ?landmark WHERE {
  ?awardLocation geo:elevation ?elevation .
  ?landmark geo:elevation ?sameElevation .
  FILTER(?elevation = ?sameElevation)
}
```",6,6,7,3,2,3,3,71,0,0,11,0,0.0,0
417,69,test,"Give me the spouse of the parent, that is a royalty, of the child of Knud, Hereditary Prince of Denmark and child of the father of Frederick IX of Denmark and child of the child, that is a royalty, of the parent, that is a royalty, of Alexandrine of Mecklenburg-Schwerin.","SELECT ?result WHERE { ?v4 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Knud,_Hereditary_Prince_of_Denmark> . ?v3 <http://dbpedia.org/ontology/child> ?v4 . ?result <http://dbpedia.org/ontology/parent> ?v2 . ?result <http://dbpedia.org/property/father> ?v7 . ?result <http://dbpedia.org/ontology/spouse> ?v3 . <http://dbpedia.org/resource/Frederick_IX_of_Denmark> <http://dbpedia.org/property/father> ?v7 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. <http://dbpedia.org/resource/Alexandrine_of_Mecklenburg-Schwerin> <http://dbpedia.org/ontology/parent> ?v1 . ?v2 <http://dbpedia.org/property/father> ?v1 . }","```sparql
SELECT ?spouse WHERE {
  # Identify Knud, Hereditary Prince of Denmark
  ?knud dbo:childOf dbr:Margrethe_II_of_Denmark .
  
  # Identify Frederick IX's father
  ?frederickIX dbo:father dbr:Christian_X_of_Denmark .

  # Find the child of Frederick IX and Christian X (Margrethe II)
  ?margrethe2 dbo:childOf ?frederickIX ;
              dbo:childOf ?christianX .
  
  # Identify Alexandrine's royal parent
  ?alexandrine dbo:parent dbr:Friedrich_Franz_III,_Grand_Duke_of_Mecklenburg-Schwerin .

  # Find the child of Alexandrine who is royalty (Margrethe II)
  ?margrethe2 dbo:childOf ?alexandrine .
  
  # Identify Margrethe II's spouse
  ?margrethe2 dbo:spouse ?spouse .
}
```",8,11,9,3,3,3,3,71,0,0,1,0,0.0,0
892,62,test,Give me the entity in the profession of the true self of Enrico Crolla and entity in Province of Reggio Emilia and landmark at elevation of the award of the member of E-girls.,"SELECT ?result WHERE { ?v1 <http://dbpedia.org/property/awards> ?v5 . ?result <http://dbpedia.org/ontology/elevation> ?v5 . ?result <http://dbpedia.org/ontology/country> ?v2 . ?v4 <http://dbpedia.org/property/occupation> ?v2 . ?result <http://dbpedia.org/ontology/province> <http://dbpedia.org/resource/Province_of_Reggio_Emilia> . <http://dbpedia.org/resource/E-girls> <http://dbpedia.org/ontology/bandMember> ?v1 . ?v4 <http://xmlns.com/foaf/0.1/givenName> ""Enrico Crolla""@en . }","```sparql
# Query 1: Enrico Crolla's True Self Profession
SELECT ?realName ?profession WHERE {
  ?person foaf:name ""Enrico Crolla""@en .
  ?person dbo:birthName ?realName .
  ?realName dbo:occupation ?profession .
}

# Query 2: Entity in Province of Reggio Emilia
SELECT DISTINCT ?entity WHERE {
  ?entity dbo:location dbr:Province_of_Reggio_Emilia .
}

# Query 3: Landmark at Elevation of Award of a Member of E-girls
SELECT ?landmark WHERE {
  ?member foaf:name ?name .
  FILTER regex(?name, ""E-girls"", ""i"") .
  ?member dbo:award ?award .
  ?award dbo:elevation ?elevation .
  ?landmark dbo:elevation ?elevation .
}
```",7,7,8,3,3,3,3,71,0,0,1,0,0.0,0
791,56,test,"Give me the predecessor of Emperor Antoku and spouse of the spouse, that is a royalty, of Emperor Takakura and father of the child, that is a royalty, of the father, that is a royalty and an office holder, of Emperor Antoku.",SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v1 <http://dbpedia.org/property/father> ?result . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?result <http://dbpedia.org/ontology/successor> <http://dbpedia.org/resource/Emperor_Antoku> . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v2 <http://dbpedia.org/ontology/spouse> <http://dbpedia.org/resource/Emperor_Takakura> . <http://dbpedia.org/resource/Emperor_Antoku> <http://dbpedia.org/property/father> ?v0 . ?result <http://dbpedia.org/ontology/spouse> ?v2 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v1 <http://dbpedia.org/property/father> ?v0 . },"```sparql
SELECT ?predecessor ?spouseOfSpouse ?childOfFather WHERE {
  # Step 1: Find Emperor Antoku's predecessor
  ?antoku dbo:succession dbr:Emperor_Antoku .
  ?antoku dbo:predecessor ?predecessor .

  # Step 2: Find spouse of Emperor Takakura
  ?takakura dbo:spouse ?spouseOfTakakura .

  # Step 3: Check if the spouse is royalty and find their spouse
  ?spouseOfSpouse dbo:spouse ?spouseOfTakakura .
  FILTER EXISTS { ?spouseOfSpouse rdf:type dbo:Monarch }

  # Step 4: Find father of this royal individual who is also an office holder
  ?fatherOfSpouseOfSpouse dbo:child ?spouseOfSpouse .
  FILTER EXISTS { ?fatherOfSpouseOfSpouse rdf:type dbo:Monarch }
  FILTER EXISTS { ?fatherOfSpouseOfSpouse dbo:officeHolder ?_ }

  # Step 5: Find the child of this father
  ?childOfFather dbo:parent ?fatherOfSpouseOfSpouse .
}
```",6,10,7,3,3,3,3,71,0,0,1,0,0.0,0
839,57,test,"Give me the band of the band, that is a musical artist, of Charlie Huhn and band of Kevin Russell (musician) and band of the member of the band, that is a band and a group, of Peter Schorowsky.",SELECT ?result WHERE { ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Group>. <http://dbpedia.org/resource/Kevin_Russell_(musician)> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v0 <http://dbpedia.org/ontology/bandMember> ?v5 . <http://dbpedia.org/resource/Peter_Schorowsky> <http://dbpedia.org/ontology/associatedMusicalArtist> ?v0 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Band>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. <http://dbpedia.org/resource/Charlie_Huhn> <http://dbpedia.org/ontology/associatedMusicalArtist> ?v3 . ?result <http://dbpedia.org/ontology/bandMember> ?v3 . ?result <http://dbpedia.org/ontology/bandMember> ?v5 . },"```sparql
# Query to find bands associated with Charlie Huhn
SELECT ?band WHERE {
  ?person dbo:birthName ""Charlie Huhn""@en .
  ?person dbo:associatedBand ?band .
}

UNION

# Query to find bands associated with Kevin Russell
SELECT ?band WHERE {
  ?person dbo:birthName ""Kevin Russell (musician)""@en .
  ?person dbo:associatedBand ?band .
}

UNION

# Query to find bands associated with Peter Schorowsky
SELECT ?band WHERE {
  ?person dbo:birthName ""Peter Schorowsky""@en .
  ?person dbo:associatedBand ?band .
}
```",6,9,7,3,3,3,3,71,0,0,1,0,0.0,0
865,65,test,"Give me the native of the residence, that is a country, of Ram Jaipal Singh Yadav and father of the child, that is a politician, of the spouse of Syeda Shahar Banu and father of the child of Abu Ahmad Abdul Hafiz.",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/birthPlace> ?v0 . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. <http://dbpedia.org/resource/Ram_Jaipal_Singh_Yadav> <http://dbpedia.org/property/residence> ?v0 . ?v5 <http://dbpedia.org/property/father> ?result . ?v5 <http://dbpedia.org/property/father> ?v2 . <http://dbpedia.org/resource/Syeda_Shahar_Banu> <http://dbpedia.org/ontology/spouse> ?v2 . ?v4 <http://dbpedia.org/property/father> ?result . ?v4 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Abu_Ahmad_Abdul_Hafiz> . },"```sparql
# Query to get Ram Jaipal Singh Yadav's country of residence
SELECT ?country WHERE {
  ?person dbo:birthName ""Ram Jaipal Singh Yadav""@en .
  ?person dbo:residence ?location .
  ?location dbo:country ?country .
}

UNION

# Query to find Syeda Shahar Banu's spouse and their child who is a politician
SELECT ?father WHERE {
  ?spouse foaf:surname ""Shahar Banu""@en .
  ?spouse dbo:spouse ?husband .
  ?child dbo:parent ?husband ;
         dbo:occupation ""Politician"" .
  ?child dbo:parent ?father .
}

UNION

# Query to find Abu Ahmad Abdul Hafiz's father
SELECT ?father WHERE {
  ?person foaf:name ""Abu Ahmad Abdul Hafiz""@en .
  ?person dbo:parent ?father .
}
```",7,9,8,3,3,3,3,71,0,0,1,0,0.0,0
917,57,test,"Give me the parent of Albert Kamehameha and child of the father of Kamehameha IV and child of the father of the spouse, that is a royalty, of Leleiohoku I.",SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. <http://dbpedia.org/resource/Kamehameha_IV> <http://dbpedia.org/property/father> ?v0 . ?result <http://dbpedia.org/property/father> ?v0 . ?v1 <http://dbpedia.org/ontology/spouse> <http://dbpedia.org/resource/Leleiohoku_I> . ?v1 <http://dbpedia.org/property/father> ?v4 . ?result <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Albert_Kamehameha> . ?result <http://dbpedia.org/ontology/parent> ?v4 . },"```sparql
# Step 1: Find Albert Kamehameha's parent
SELECT ?parent WHERE {
  wd:Q123456 wdt:P22 ?parent .
}

# Step 2: Identify Kamehameha IV's father
SELECT ?father WHERE {
  wd:Q789012 wdt:P22 ?father .
}

# Step 3: Find the child of Kamehameha IV's father
SELECT ?child WHERE {
  ?father wdt:P40 ?child .
  FILTER(?father = <result_of_step_2>)
}

# Step 4: Identify Leleiohoku I's spouse and their parent
SELECT ?spouse ?parentOfSpouse WHERE {
  wd:Q345678 wdt:P26 ?spouse .
  ?spouse wdt:P22 ?parentOfSpouse .
}

# Step 5: Find the child of the spouse's parent
SELECT ?childOfParent WHERE {
  ?parentOfSpouse wdt:P40 ?childOfParent .
  FILTER(?parentOfSpouse = <result_of_step_4>)
}

# Step 6: Determine royalty among these children
SELECT DISTINCT ?person WHERE {
  VALUES ?list1 { (<results_from_step_3>) }
  VALUES ?list2 { (<results_from_step_5>) }
  
  ?person wdt:P40 ?child .
  FILTER(?child IN ?list1 || ?child IN ?list2)
  OPTIONAL { ?person wdt:P31 wd:Q11424 } # Q11424 is the DBpedia class for royalty
  FILTER(EXISTS { ?person wdt:P31 wd:Q11424 })
}
```

Note: Replace `wd:Q123456`, `wd:Q789012`, and `wd:Q345678` with the actual DBpedia identifiers for Albert Kamehameha, Kamehameha IV, and Leleiohoku I respectively. The placeholders `<result_of_step_2>`, `<results_from_step_3>`, `<result_of_step_4>`, and `<results_from_step_5>` should be replaced with the actual results obtained from executing each respective query.",6,7,7,3,3,3,3,71,0,0,1,0,0.0,0
353,9,test,"Give me the entity in the country of Moskovsky City District, Nizhny Novgorod and alma mater of the awardee of Medal of the Order ""For Merit to the Fatherland"".","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/country> ?v3 . ?v1 <http://dbpedia.org/ontology/almaMater> ?result . <http://dbpedia.org/resource/Moskovsky_City_District,_Nizhny_Novgorod> <http://dbpedia.org/ontology/country> ?v3 . ?v1 <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/Medal_of_the_Order_%22For_Merit_to_the_Fatherland%22> . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT DISTINCT ?entityInMoskovsky ?almaMater WHERE {
  # Find entities in Moskovsky City District, Nizhny Novgorod
  ?entityInMoskovsky dbo:location dbr:Moskovsky_City_District,_Nizhny_Novgorod .

  # Find individuals who have received the Medal of the Order ""For Merit to the Fatherland""
  ?person dbp:awards dbr:Medal_of_the_Order_""For_Merit_to_the_Fatherland"" .
  
  # Get the alma mater of these individuals
  ?person dbo:almaMater ?almaMater .

  # Find a connection between the entity in Moskovsky City District and any alma mater
  OPTIONAL { ?entityInMoskovsky dbp:relatedAlmaMater ?almaMater }
}
```",4,4,5,2,2,2,2,9,0,0,5,0,0.0,0
507,62,test,"Give me the director of the movie, that is a movie and a work, with the person born on 1919-06-17 and spouse of the person born as the birth name of Anne V. Coates and professional in Film director, television director.","SELECT ?result WHERE { ?result <http://dbpedia.org/property/occupation> ""Film director, television director""@en . ?v6 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?v0 <http://dbpedia.org/ontology/birthDate> ""1919-06-17""^^<http://www.w3.org/2001/XMLSchema#date> . <http://dbpedia.org/resource/Anne_V._Coates> <http://dbpedia.org/property/birthName> ?v4 . ?v6 <http://dbpedia.org/property/starring> ?v0 . ?v6 <http://dbpedia.org/ontology/director> ?result . ?v3 <http://dbpedia.org/property/birthName> ?v4 . ?result <http://dbpedia.org/ontology/spouse> ?v3 . ?v6 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Film>. }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?director WHERE {
  # Step 1: Find the person born on 1919-06-17
  ?person dbo:birthday ""1919-06-17""^^xsd:date .
  
  # Step 2: Check if this person is married to Anne V. Coates
  ?person dbo:spouse dbr:Anne_V._Coates .

  # Step 3: Ensure the spouse (Anne V. Coates) has a birth name and professional roles
  dbr:Anne_V._Coates dbp:birthName ""Anne V. Coates"" .
  dbr:Anne_V._Coates dbo:occupation dbr:Film_director ;
                    dbo:occupation dbr:Television_director .

  # Step 4: Find a movie directed by Anne V. Coates
  ?movie dbo:director dbr:Anne_V._Coates ;
         a dbo:Film .
  
  # Get the director of this movie (which is Anne V. Coates)
  ?movie dbo:director ?director .
}
```",7,9,8,3,3,3,3,71,0,0,1,0,0.0,0
976,61,test,"Give me the office of the person born as the birth name of Naci Bostancı and office of the mayor, that is a politician and an office holder and Turkish, of the reference, that is an organisation and a political party and Turkish, to Millet İttifakı.","SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Turkey>. ?v0 <http://dbpedia.org/property/office> ?result . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v1 <http://dbpedia.org/property/leader> ?v4 . ?v4 <http://dbpedia.org/ontology/nationality> <http://dbpedia.org/resource/Turkey>. ?v4 <http://dbpedia.org/property/office> ?result . <http://dbpedia.org/resource/Naci_Bostancı> <http://dbpedia.org/property/birthName> ?v3 . ?v0 <http://dbpedia.org/property/birthName> ?v3 . ?v1 <http://xmlns.com/foaf/0.1/name> ""Millet İttifakı""@en . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/PoliticalParty>. ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. }","```sparql
# Step 1: Find Naci Bostancı's birth name
SELECT ?birthName WHERE {
  dbpedia-tr:Naci_Bostancı dbo:birthName ?birthName .
}

# Step 2: Find the office held by the person with this birth name
SELECT DISTINCT ?office WHERE {
  ?person dbo:birthName ?birthName .
  ?person dbo:occupation ?office .
  FILTER(?birthName = ""Naci Bostancı""@en) # Replace with actual birth name found in Step 1
}

# Step 3: Identify Millet İttifakı and find associated mayors who are politicians
SELECT DISTINCT ?mayor ?office WHERE {
  dbpedia-tr:Millet_İttifakı dbo:member ?person .
  ?person rdf:type dbo:Politician ;
          dbo:occupation ?office .
  OPTIONAL { ?person dbo:positionHeld ?mayor . }
}
```",6,12,7,3,2,3,3,71,0,0,1,0,0.0,0
926,56,test,"Give me the father of the father of Abdulaziz and child of the father, that is a royalty, of the parent, that is a royalty, of Beyhan Sultan (daughter of Mustafa III) and successor of Mustafa III.",SELECT ?result WHERE { ?v0 <http://dbpedia.org/ontology/child> ?result . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v4 <http://dbpedia.org/property/father> ?v0 . <http://dbpedia.org/resource/Abdulaziz> <http://dbpedia.org/property/father> ?v2 . ?v2 <http://dbpedia.org/property/father> ?result . <http://dbpedia.org/resource/Beyhan_Sultan_(daughter_of_Mustafa_III)> <http://dbpedia.org/ontology/parent> ?v4 . <http://dbpedia.org/resource/Mustafa_III> <http://dbpedia.org/ontology/successor> ?result . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?person WHERE {
  # Abdulaziz's father
  dbr:Abdulaziz_Ibn_Saud dbo:father dbr:Abdul_Rahman_bin_Faisal_Al_Saud .
  
  # Father of Abdulaziz's father
  dbr:Abdul_Rahman_bin_Faisal_Al_Saud dbo:father dbr:Faisal_bin_Turki_Al_Saud .

  # Child of Faisal bin Turki who is royalty and connected to Beyhan Sultan's lineage
  dbr:Faisal_bin_Turki_Al_Saud dbo:child ?person .
  
  # Beyhan Sultan's parent (Mustafa III)
  dbr:Beyhan_Sultan dbo:parent dbr:Mustafa_III .

  # Successor of Mustafa III
  dbr:Mustafa_III dbo:succeededBy dbr:Abdul_Hamid_I .

  # Ensure the person is royalty and fits the criteria
  ?person a dbo:Monarch .
}
```",6,8,7,3,3,3,3,71,0,0,1,0,0.0,0
987,68,test,"Give me the birth place of the band, that is an artist and a musical artist, of the band, that is an artist, of Dado Polumenta and birth place of the actor of the show, that is a film, with Emir Hadžihafizbegović and entity in the region, that is a country, of Central European Time.",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/country> ?v0 . ?v6 <http://dbpedia.org/ontology/birthPlace> ?result . ?v0 <http://dbpedia.org/property/timeZone> <http://dbpedia.org/resource/Central_European_Time> . ?v2 <http://dbpedia.org/ontology/birthPlace> ?result . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Film>. ?v1 <http://dbpedia.org/property/starring> ?v6 . ?v4 <http://dbpedia.org/ontology/associatedMusicalArtist> ?v2 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. <http://dbpedia.org/resource/Dado_Polumenta> <http://dbpedia.org/ontology/associatedMusicalArtist> ?v4 . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. ?v1 <http://dbpedia.org/ontology/starring> <http://dbpedia.org/resource/Emir_Hadžihafizbegović> . },"```sparql
# Step 1: Find Dado Prljaca and his birthplace
SELECT ?bandArtist ?birthPlace WHERE {
  ?bandArtist a dbo:Band ;
              foaf:name ""Dino Merlin""@en .
  ?member a dbo:Member ;
          dbo:memberOf ?bandArtist ;
          foaf:name ""Dado Prljaca""@en .
  ?member dbo:birthPlace ?birthPlace .
}

# Step 2: Find a film with Emir Hadžihafizbegović and another actor's birthplace
SELECT ?film ?actorBirthPlace WHERE {
  ?film a dbo:Film ;
        dbo:starring ?emir .
  ?emir foaf:name ""Emir Hadžihafizbegović""@en .
  ?film dbo:starring ?otherActor .
  ?otherActor dbo:birthPlace ?actorBirthPlace .
}

# Step 3: Find a country in the Central European Time zone
SELECT ?country WHERE {
  ?country a dbo:Country ;
           dbo:timeZone ""Central European Time""@en .
}
```",8,13,9,3,3,3,3,71,0,0,1,0,0.0,0
326,18,test,"Give me the resident of the birthplace, that is a state and British, of the professional in Writer and person decedent at the award, that is a country, of Adelbert Cronkhite.","SELECT ?result WHERE { ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. ?v1 <http://dbpedia.org/property/occupation> ""Writer""@en . ?result <http://dbpedia.org/property/residence> ?v2 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/AdministrativeRegion>. ?result <http://dbpedia.org/ontology/deathPlace> ?v3 . ?v2 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/United_Kingdom>. ?v1 <http://dbpedia.org/ontology/birthPlace> ?v2 . <http://dbpedia.org/resource/Adelbert_Cronkhite> <http://dbpedia.org/property/awards> ?v3 . }","```sparql
# Step 1: Get information about Adelbert Cronkhite
SELECT ?person WHERE {
  ?person foaf:name ""Adelbert Cronkhite""@en .
  ?person dbo:occupation dbo:Writer .
}

# Step 2: Find the country where he received an award
SELECT DISTINCT ?awardCountry WHERE {
  ?person dbo:receivedAward ?award .
  ?award dbo:country ?awardCountry .
}

# Step 3: Determine his place of death (decedent location)
SELECT DISTINCT ?deathPlace WHERE {
  ?person dbo:placeOfBirth ?birthPlace .
  ?person dbo:deathPlace ?deathPlace .
  FILTER(?birthPlace IN (dbo:UnitedKingdom)) # Ensure it's a British state
}

# Step 4: Identify the resident of the birthplace state
SELECT DISTINCT ?resident WHERE {
  ?state dbo:country dbr:United_Kingdom .
  ?state foaf:name ?stateName .
  ?birthPlace dbo:partOf ?state .
  ?resident dbo:residence ?birthPlace .
}
```",5,8,6,3,2,3,2,20,0,0,1,0,0.0,0
417,67,test,"Give me the spouse of Princess Caroline-Mathilde of Denmark and child of the father of the leader, that is a royalty, of Colony of Greenland and child of the child, that is a royalty, of the parent, that is a royalty, of Alexandrine of Mecklenburg-Schwerin.",SELECT ?result WHERE { ?v3 <http://dbpedia.org/property/father> ?v1 . <http://dbpedia.org/resource/Colony_of_Greenland> <http://dbpedia.org/property/leader> ?v0 . ?result <http://dbpedia.org/ontology/parent> ?v3 . ?result <http://dbpedia.org/ontology/spouse> <http://dbpedia.org/resource/Princess_Caroline-Mathilde_of_Denmark> . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?result <http://dbpedia.org/property/father> ?v6 . <http://dbpedia.org/resource/Alexandrine_of_Mecklenburg-Schwerin> <http://dbpedia.org/ontology/parent> ?v1 . ?v0 <http://dbpedia.org/property/father> ?v6 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?spouse WHERE {
  # Princess Caroline-Mathilde's spouse
  dbr:Princess_Caroline_Matilda_of_Denmark dbo:spouse dbr:Christian_VII_of_Denmark .

  # Leader of the Colony of Greenland (King Christian VII)
  dbr:Christian_VII_of_Denmark dbo:country dbr:Denmark .
  
  # Father of King Christian VII
  dbr:Christian_VII_of_Denmark dbo:father dbr:Frederick_V_of_Denmark .

  # Child of Frederick V (Princess Louise Auguste)
  dbr:Frederick_V_of_Denmark dbo:child ?princessLouiseAuguste .
  
  # Parent of Alexandrine of Mecklenburg-Schwerin
  dbr:Alexandrine_of_Mecklenburg-Schwerin dbo:father dbr:Charles_II,_Grand_Duke_of_Mecklenburg-Strelitz .

  # Child of Charles II (Princess Marie)
  dbr:Charles_II,_Grand_Duke_of_Mecklenburg-Strelitz dbo:child ?princessMarie .
  
  # Connect the lineage
  ?princessLouiseAuguste dbo:spouse ?commonRoyalty .
  ?princessMarie dbo:spouse ?commonRoyalty .

  FILTER(?commonRoyalty = dbr:Christian_VII_of_Denmark)
}
```",7,10,8,3,3,3,3,71,0,0,1,0,0.0,0
170,27,test,Give me the entity in Russia and birth place of the awardee of People's Artist of Russia and domain of the profession of John Scholey.,SELECT ?result WHERE { <http://dbpedia.org/resource/John_Scholey> <http://dbpedia.org/property/occupation> ?v0 . ?result <http://dbpedia.org/ontology/leaderTitle> ?v0 . ?v3 <http://dbpedia.org/ontology/birthPlace> ?result . ?v3 <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/People's_Artist_of_Russia> . ?result <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Russia> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?entityInRussia ?birthPlace ?professionDomain WHERE {
  # Find John Scholey who is a People's Artist of Russia
  ?person dbo:title ""People's Artist of Russia""@en .
  ?person foaf:name ""John Scholey"" .

  # Get his birthplace
  ?person dbp:birthPlace ?birthPlace .

  # Get the entity in Russia related to him (could be a city or region)
  ?person dbo:country dbr:Russia .
  ?person dbo:residence ?entityInRussia .

  # Determine his professional domain
  ?person dbo:occupation ?profession .
  ?profession rdfs:label ?professionDomain FILTER (lang(?professionDomain) = 'en')
}
```",5,5,6,2,3,2,3,28,0,0,3,0,0.0,0
456,69,test,"Give me the band of the band, that is a musical artist, of the band of Alan Doyle and professional in the alter ego of The Shadow and spouse of the actor of the movie, that is a work and a television show, with Ross Newton.",SELECT ?result WHERE { ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?v2 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v3 <http://dbpedia.org/ontology/spouse> ?result . ?result <http://dbpedia.org/property/occupation> ?v7 . <http://dbpedia.org/resource/The_Shadow> <http://dbpedia.org/property/alterEgo> ?v7 . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?v1 <http://dbpedia.org/ontology/associatedMusicalArtist> ?v2 . ?v4 <http://dbpedia.org/property/starring> <http://dbpedia.org/resource/Ross_Newton> . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/TelevisionShow>. ?v4 <http://dbpedia.org/property/starring> ?v3 . <http://dbpedia.org/resource/Alan_Doyle> <http://dbpedia.org/ontology/associatedMusicalArtist> ?v1 . },"```sparql
SELECT ?bandName WHERE {
  # Step 1: Identify Alan Doyle's Band
  dbpedia:Alan_Doyle dbo:memberOf dbpedia:Great_Big_Sea .
  
  # Step 2: Find the alter ego ""The Shadow""
  dbpedia:The_Shadow rdfs:label ""Christopher Dooley""@en .

  # Step 3: Determine Ross Newton's Movie and TV Work
  ?work dbo:starring dbpedia:Ross_Newton ;
        a dbo:Film ; # Assuming it is a film, similar logic applies for TV shows

  # Step 4: Identify the Spouse of the Actor in that work
  ?actor dbo:spouse ?spouse .
  
  # Ensure the actor is part of the work
  ?work dbo:starring ?actor .

  # Step 5: Find the Band of That Actor's Spouse
  ?spouse dbo:memberOf ?band ;
          rdfs:label ?bandName .
}
```",8,11,9,3,3,3,3,71,0,0,1,0,0.0,0
47,62,test,"Give me the office of the administration of the commander, that is a politician, in Operation Green Hunt and office of the awardee of the award, that is an award, of Mantu Ghosh and office of Ajoy Mukherjee.",SELECT ?result WHERE { ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Award>. <http://dbpedia.org/resource/Mantu_Ghosh> <http://dbpedia.org/property/awards> ?v0 . <http://dbpedia.org/resource/Ajoy_Mukherjee> <http://dbpedia.org/property/office> ?result . ?v3 <http://dbpedia.org/property/office> ?result . ?v6 <http://dbpedia.org/property/office> ?result . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v6 <http://dbpedia.org/property/awards> ?v0 . <http://dbpedia.org/resource/Operation_Green_Hunt> <http://dbpedia.org/ontology/commander> ?v4 . ?v3 <http://dbpedia.org/property/governor> ?v4 . },"```sparql
# Query 1: Office of the administration of the commander in Operation Green Hunt
SELECT ?office WHERE {
  ?person dbo:occupation dbr:Politician .
  ?operation dbo:commander ?person .
  FILTER(STR(?operation) = ""Operation_Green_Hunt"") .
  ?person dbo:office ?office .
}

# Query 2: Office of the awardee of Mantu Ghosh's award
SELECT DISTINCT ?award ?recipientOffice WHERE {
  ?award dbo:awardedTo ?recipient .
  ?recipient rdfs:label ?name .
  FILTER(STR(?name) = ""Mantu_Ghosh"") .
  ?recipient dbo:office ?recipientOffice .
}

# Query 3: Office of Ajoy Mukherjee
SELECT ?office WHERE {
  dbr:Ajoy_Mukherjee dbo:office ?office .
}
```",7,9,8,3,3,3,3,71,0,0,1,0,0.0,0
47,71,test,"Give me the office of the awardee of the entity, that is an award, in India and office of the awardee of the award, that is an award, of Mantu Ghosh and office of the administration of the commander, that is a politician, in Operation Green Hunt.",SELECT ?result WHERE { ?v5 <http://dbpedia.org/property/office> ?result . ?v7 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Award>. ?v5 <http://dbpedia.org/property/awards> ?v4 . ?v2 <http://dbpedia.org/property/office> ?result . ?v2 <http://dbpedia.org/property/governor> ?v1 . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Award>. ?v7 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/India> . <http://dbpedia.org/resource/Operation_Green_Hunt> <http://dbpedia.org/ontology/commander> ?v1 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v8 <http://dbpedia.org/property/office> ?result . <http://dbpedia.org/resource/Mantu_Ghosh> <http://dbpedia.org/property/awards> ?v4 . ?v8 <http://dbpedia.org/property/awards> ?v7 . },"```sparql
# Query for office of the awardee of an award in India
SELECT ?award ?office WHERE {
  ?award a dbo:Award ;
        dbo:country dbr:India .
  OPTIONAL { ?recipient dbo:awardedBy ?award ;
                   dbo:positionHeld ?office . }
}

UNION

# Query for office of the awardee of Mantu Ghosh's award
SELECT ?award ?office WHERE {
  ?award a dbo:Award ;
        dbo:recipient dbr:Mantu_Ghosh .
  OPTIONAL { ?recipient dbo:awardedBy ?award ;
                   dbo:positionHeld ?office . }
}

UNION

# Query for office of the administration of the commander in Operation Green Hunt
SELECT ?politician ?office WHERE {
  ?operation a dbo:MilitaryOperation ;
             dbo:commander ?politician .
  FILTER regex(?operation, ""Green Hunt"", ""i"") .
  OPTIONAL { ?politician dbo:positionHeld ?office . }
}
```",9,12,10,3,3,3,3,71,0,0,1,0,0.0,0
124,68,test,"Give me the military force of the force, that is a societal event and a military conflict, of Herbert Kitchener, 1st Earl Kitchener and military force of the war, that is an event and a military conflict and a societal event, of the awardee of British South Africa Company Medal and commander in the war, that is a societal event and a military conflict, of the reference, that is Australian and an organisation and a military unit, to 'A' Battery, Royal Australian Artillery.","SELECT ?result WHERE { ?v5 <http://dbpedia.org/ontology/battle> ?v4 . ?result <http://dbpedia.org/ontology/battle> ?v7 . ?v3 <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Herbert_Kitchener,_1st_Earl_Kitchener> . ?v4 <http://dbpedia.org/ontology/commander> ?result . ?v0 <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/British_South_Africa_Company_Medal> . ?v5 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Australia>. ?v7 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?v0 <http://dbpedia.org/ontology/battle> ?v7 . ?v7 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryUnit>. ?v5 <http://xmlns.com/foaf/0.1/name> ""'A' Battery, Royal Australian Artillery""@en . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v7 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?result <http://dbpedia.org/ontology/battle> ?v3 . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?kitchenerConflict ?awardeeConflict WHERE {
  # Herbert Kitchener's military conflict
  dbr:Herbert_Kitchener_1st_Earl_Kitchener dbo:militaryConflict ?kitchenerConflict .
  ?kitchenerConflict a dbo:MilitaryConflict ;
                    dbo:socialEvent true .

  # Awardee of British South Africa Company Medal who commanded in the war
  ?awardee dbo:award dbr:British_South_Africa_Company_Medal ;
          dbo:militaryCommanderOf ?awardeeConflict .
  ?awardeeConflict a dbo:MilitaryConflict ;
                   dbo:socialEvent true .

  # Reference to 'A' Battery, Royal Australian Artillery
  dbr:A_Battery,_Royal_Australian_Artillery dbo:participatedIn dbr:World_War_I .
}
```",8,18,9,3,3,3,3,71,0,0,9,0,0.0,0
826,63,test,"Give me the predecessor of the parent of Prince Friedrich of Hesse and by Rhine and successor of the child, that is a royalty, of Louis I, Grand Duke of Hesse and spouse of the child of the father of Anna Magdalena Appel.","SELECT ?result WHERE { <http://dbpedia.org/resource/Prince_Friedrich_of_Hesse_and_by_Rhine> <http://dbpedia.org/ontology/parent> ?v2 . <http://dbpedia.org/resource/Louis_I,_Grand_Duke_of_Hesse> <http://dbpedia.org/ontology/child> ?v6 . ?v3 <http://dbpedia.org/ontology/spouse> ?result . ?v3 <http://dbpedia.org/property/father> ?v4 . ?v6 <http://dbpedia.org/ontology/successor> ?result . ?v6 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. <http://dbpedia.org/resource/Anna_Magdalena_Appel> <http://dbpedia.org/property/father> ?v4 . ?result <http://dbpedia.org/ontology/successor> ?v2 . }","```sparql
# Step 1: Find Prince Friedrich's parent
SELECT ?parent WHERE {
  wd:Q123456 wdt:P22 ?parent .
}

# Step 2: Find predecessor of Prince Friedrich's parent
SELECT ?predecessor WHERE {
  ?parent wdt:P136 ?position .
  ?predecessor wdt:P136 ?position ;
              p:P39 ?statement .
  ?statement ps:P39 ?position ;
             pq:P580 ?start .
  FILTER NOT EXISTS { 
    ?otherStatement ps:P39 ?position ;
                    pq:P580 ?laterStart .
    FILTER (?laterStart > ?start)
  }
}

# Step 3: Find Louis I's royal child
SELECT ?royalChild WHERE {
  wd:Q654321 wdt:P40 ?child .
  ?child wdt:P31 wd:Q5 . # Q5 is the class for human, adjust if more specific royalty class exists
}

# Step 4: Find successor of Louis I's royal child
SELECT ?successor WHERE {
  ?royalChild wdt:P39 ?position .
  ?successor wdt:P136 ?position ;
             p:P39 ?statement .
  ?statement ps:P39 ?position ;
             pq:P580 ?start .
  FILTER NOT EXISTS { 
    ?otherStatement ps:P39 ?position ;
                    pq:P580 ?laterStart .
    FILTER (?laterStart > ?start)
  }
}

# Step 5: Find Anna Magdalena Appel's father and his child
SELECT ?fatherChild WHERE {
  wd:Q789012 wdt:P22 ?father .
  ?father wdt:P40 ?fatherChild .
}

# Step 6: Find spouse of the child from step 5
SELECT ?spouse WHERE {
  ?fatherChild wdt:P26 ?spouse .
}

# Final query to find intersection
SELECT DISTINCT ?individual WHERE {
  VALUES (?predecessor) { (<result_from_step_2>) }
  VALUES (?successor) { (<result_from_step_4>) }
  VALUES (?spouse) { (<result_from_step_6>) }
  FILTER(?predecessor = ?successor && ?successor = ?spouse)
}
```

Note: Replace `wd:Q123456`, `wd:Q654321`, and `wd:Q789012` with the actual DBpedia identifiers for Prince Friedrich of Hesse and by Rhine, Louis I, Grand Duke of Hesse, and Anna Magdalena Appel respectively. The query assumes that specific property numbers (like P22 for parent) are correct; these may need adjustment based on the exact schema used in DBpedia.",7,8,8,3,3,3,3,71,0,0,1,0,0.0,0
715,61,test,"Give me the leader of the office, that is a government agency and an organisation, of the reference to Carlos Franco Iribarnegaray and commander in the force of the mayor, that is an office holder and a politician and a president, of 1933 Spanish general election.","SELECT ?result WHERE { ?v1 <http://dbpedia.org/property/office> ?v3 . ?v5 <http://dbpedia.org/ontology/commander> ?result . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. <http://dbpedia.org/resource/1933_Spanish_general_election> <http://dbpedia.org/property/leader> ?v0 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/President>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/GovernmentAgency>. ?v3 <http://dbpedia.org/ontology/leader> ?result . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v1 <http://xmlns.com/foaf/0.1/name> ""Carlos Franco Iribarnegaray""@en . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?v5 <http://dbpedia.org/ontology/commander> ?v0 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?leader WHERE {
  # Step 1: Identify Carlos Franco Iribarnegaray's role in a government agency
  ?carlos a dbo:Person ;
          foaf:name ""Carlos Franco Iribarnegaray"" ;
          dbo:office ?office .

  # Step 2: Find the mayor during the 1933 Spanish general election
  ?mayor a dbo:Politician ;
         dbo:office ?mayorOffice ;
         dbo:election ?election .
  
  FILTER (?election = dbr:Spanish_general_election,_1933)
  
  # Step 3: Determine who led the office or organization related to both Carlos Franco Iribarnegaray and the mayor
  ?leader a dbo:Person ;
          dbo:office ?relatedOffice .

  ?relatedOffice dbo:head ?leader .
  ?relatedOffice dbo:member ?carlos .
  ?relatedOffice dbo:member ?mayor .
}
```",6,11,7,3,2,3,3,71,0,0,1,0,0.0,0
136,9,test,Give me the region coded as the area code of Levenhagen and landmark at elevation of the award of Bret Anthony Johnston.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/areaCode> ?v1 . <http://dbpedia.org/resource/Bret_Anthony_Johnston> <http://dbpedia.org/property/awards> ?v3 . <http://dbpedia.org/resource/Levenhagen> <http://dbpedia.org/ontology/areaCode> ?v1 . ?result <http://dbpedia.org/ontology/elevation> ?v3 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?region ?landmark WHERE {
  # Find Levenhagen and its area code
  ?levenhagen a dbo:Settlement ;
              rdfs:label ""Levenhagen""@en .
  
  OPTIONAL { 
    ?levenhagen dbo:areaServed ?region .
    ?region dbo:postalCode ?areaCode .
  }
  
  # Find awards associated with Bret Anthony Johnston
  ?johnston a dbo:Person ;
            rdfs:label ""Bret Anthony Johnston""@en .
  
  ?award dbo:recipient ?johnston ;
         dbo:name ?awardName .

  # Find landmarks with elevation matching the award number or related concept
  ?landmark a dbo:Landmark ;
            dbo:elevationAboveSeaLevel ?elevation .
  
  FILTER (?areaCode = ?elevation || STR(?awardName) = STR(?elevation))
}
```",4,4,5,2,2,2,2,9,0,0,1,0,0.0,0
329,26,test,"Give me the entity in United Kingdom and entity in the birthplace, that is an organisation and a country, of Robert Bates (loyalist) and birthplace of the author of The Tailor and Ansty.",SELECT ?result WHERE { <http://dbpedia.org/resource/Robert_Bates_(loyalist)> <http://dbpedia.org/ontology/birthPlace> ?v1 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. ?v2 <http://dbpedia.org/ontology/birthPlace> ?result . ?result <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/United_Kingdom> . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?result <http://dbpedia.org/ontology/country> ?v1 . <http://dbpedia.org/resource/The_Tailor_and_Ansty> <http://dbpedia.org/property/author> ?v2 . },"```sparql
# Query for Robert Bates (loyalist)
SELECT ?birthPlaceLabel WHERE {
  wd:Q123456 wdt:P19 ?birthPlace .
  ?birthPlace wdt:P31/wdt:P279* ?type .
  FILTER(?type IN (wd:Q43229, wd:Q6256)) # Q43229 is Organization, Q6256 is Country
  SERVICE wikibase:label { bd:serviceParam wikibase:language ""en"". }
}

# Query for the author of ""The Tailor and Ansty""
SELECT ?authorBirthPlaceLabel WHERE {
  wd:Q789012 wdt:P19 ?authorBirthPlace .
  ?authorBirthPlace wdt:P31/wdt:P279* ?type .
  FILTER(?type IN (wd:Q43229, wd:Q6256)) # Q43229 is Organization, Q6256 is Country
  SERVICE wikibase:label { bd:serviceParam wikibase:language ""en"". }
}
```

Note: Replace `wd:Q123456` with the actual DBpedia entity ID for Robert Bates (loyalist) and `wd:Q789012` with the entity ID for the author of ""The Tailor and Ansty.""",5,7,6,2,3,2,3,28,0,0,1,0,0.0,0
216,57,test,"Give me the team of the person born, that is a sports manager and a soccer manager and a soccer player, on 1983-12-20 and player in the coach, that is a soccer player and a sports manager and a soccer manager, of the player, that is an organisation and a sports club and a soccer club, in Džemal Berberović and player in Igor Bišćan.","SELECT ?result WHERE { ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerManager>. ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerPlayer>. <http://dbpedia.org/resource/Igor_Bišćan> <http://dbpedia.org/ontology/team> ?result . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerManager>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsManager>. ?v3 <http://dbpedia.org/ontology/birthDate> ""1983-12-20""^^<http://www.w3.org/2001/XMLSchema#date> . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerClub>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerPlayer>. ?v5 <http://dbpedia.org/ontology/team> ?result . ?result <http://dbpedia.org/ontology/coach> ?v3 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsClub>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsManager>. ?v0 <http://dbpedia.org/ontology/coach> ?v5 . <http://dbpedia.org/resource/Džemal_Berberović> <http://dbpedia.org/ontology/team> ?v0 . }","```sparql
SELECT ?team WHERE {
  ?person dbo:birthDate ""1983-12-20""^^xsd:date ;
          rdf:type dbo:SoccerPlayer ;
          dbo:sportManagerOf ?team .
  
  FILTER EXISTS { ?person dbo:occupation dbr:Soccer_Manager }
  FILTER EXISTS { ?person dbo:occupation dbr:Sports_Manager }

  ?player dbo:nationality dbr:Croatia ;
          dbo:playsFor ?team .

  FILTER (?player = dbr:Džemal_Berberović)

  OPTIONAL {
    ?bišćan dbo:playsFor ?team .
    FILTER (?bišćan = dbr:Igor_Bišćan)
  }
}
```",6,15,7,3,3,3,3,71,0,0,1,0,0.0,0
987,60,test,"Give me the entity in the region, that is a country, of the time zone, that is a sports event, in Canicosa de la Sierra and birth place of the band, that is an artist and a musical artist, of the band, that is an artist, of Dado Polumenta.",SELECT ?result WHERE { ?v4 <http://dbpedia.org/ontology/associatedMusicalArtist> ?v2 . ?v0 <http://dbpedia.org/property/timeZone> ?v5 . ?v2 <http://dbpedia.org/ontology/birthPlace> ?result . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. ?result <http://dbpedia.org/ontology/country> ?v0 . <http://dbpedia.org/resource/Canicosa_de_la_Sierra> <http://dbpedia.org/ontology/timeZone> ?v5 . <http://dbpedia.org/resource/Dado_Polumenta> <http://dbpedia.org/ontology/associatedMusicalArtist> ?v4 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsEvent>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. },"```sparql
# Step 1: Get The Motels' birthplace
SELECT ?birthPlace WHERE {
  wd:Q123456 wdt:P19 ?birthPlace .
}

# Step 2: Find the time zone for Canicosa de la Sierra, Spain
SELECT ?timeZone WHERE {
  wd:Q1234567 wdt:P421 ?timeZone .
}

# Step 3: Identify a sports event in that time zone
SELECT DISTINCT ?event WHERE {
  ?event wdt:P421 ?timeZone ;
         wdt:P31/wdt:P279* wd:Q11173 . # Q11173 is the class for Sports Event
}

# Step 4: Determine the country and region of the sports event
SELECT DISTINCT ?country ?region WHERE {
  ?event wdt:P17 ?country .
  OPTIONAL { ?event wdt:P131 ?region }
}

# Step 5: Find a country in that region
SELECT DISTINCT ?entity WHERE {
  ?entity wdt:P31 wd:Q6256 . # Q6256 is the class for Country
  ?entity wdt:P131 ?region .
}
```

Note: Replace `wd:Q123456` with the actual DBpedia identifier for The Motels and `wd:Q1234567` with the identifier for Canicosa de la Sierra. These identifiers need to be looked up in DBpedia.",6,11,7,3,2,3,3,71,0,0,2,0,0.0,0
976,63,test,"Give me the office of the person born as Mehmet Naci Bostancı and office of the leader, that is a politician, of the administration, that is an organisation, of Kemal Kılıçdaroğlu and office of the mayor, that is a politician and an office holder and Turkish, of Nation Alliance (Turkey).","SELECT ?result WHERE { ?v5 <http://dbpedia.org/ontology/nationality> <http://dbpedia.org/resource/Turkey>. ?v1 <http://dbpedia.org/property/office> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v3 <http://dbpedia.org/ontology/leader> ?v1 . <http://dbpedia.org/resource/Nation_Alliance_(Turkey)> <http://dbpedia.org/property/leader> ?v5 . ?v0 <http://dbpedia.org/property/office> ?result . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?v3 <http://dbpedia.org/property/leader> <http://dbpedia.org/resource/Kemal_Kılıçdaroğlu> . ?v5 <http://dbpedia.org/property/office> ?result . ?v0 <http://dbpedia.org/property/birthName> ""Mehmet Naci Bostancı""@en . }","```sparql
# Query for Mehmet Naci Bostancı's office
SELECT ?office WHERE {
  ?person foaf:name ""Mehmet Naci Bostancı""@en .
  ?person dbo:birthName ""Mehmet Naci Bostancı""@en .
  ?person dbo:occupation ?occupation .
  ?occupation dbo:positionHeld ?office .
}

# Query for Kemal Kılıçdaroğlu's office
SELECT ?office WHERE {
  ?leader foaf:name ""Kemal Kılıçdaroğlu""@en .
  ?leader dbo:leaderOf ?organization .
  ?organization a dbo:AdministrativeRegion ;
                rdfs:label ?orgLabel .
  FILTER(CONTAINS(LCASE(?orgLabel), ""administration"") || CONTAINS(LCASE(?orgLabel), ""party"")) .
  ?leader dbo:positionHeld ?office .
}

# Query for the mayor of Nation Alliance (Turkey)
SELECT ?mayorOffice WHERE {
  ?city rdfs:label ?cityLabel ;
        dbo:country dbr:Türkiye ;
        dbo:mayor ?mayor .
  FILTER(CONTAINS(LCASE(?cityLabel), ""nation alliance"") || CONTAINS(LCASE(?cityLabel), ""parti"")) .
  ?mayor foaf:name ?name .
  ?mayor dbo:nationality dbr:Turkey .
  ?mayor dbo:occupation ?occupation .
  FILTER(CONTAINS(LCASE(?occupation), ""politician"") && CONTAINS(LCASE(?occupation), ""office holder"")) .
  ?mayor dbo:positionHeld ?mayorOffice .
}
```",7,12,8,3,3,3,3,71,0,0,1,0,0.0,0
976,64,test,"Give me the office of Meral Akşener and office of the leader, that is a politician, of the administration, that is an organisation, of Kemal Kılıçdaroğlu and office of the person born as the birth name of Naci Bostancı.",SELECT ?result WHERE { <http://dbpedia.org/resource/Meral_Akşener> <http://dbpedia.org/property/office> ?result . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?v4 <http://dbpedia.org/ontology/leader> ?v2 . ?v0 <http://dbpedia.org/property/birthName> ?v5 . ?v0 <http://dbpedia.org/property/office> ?result . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. <http://dbpedia.org/resource/Naci_Bostancı> <http://dbpedia.org/property/birthName> ?v5 . ?v2 <http://dbpedia.org/property/office> ?result . ?v4 <http://dbpedia.org/property/leader> <http://dbpedia.org/resource/Kemal_Kılıçdaroğlu> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?meralOffice ?kemalLeaderOffice ?naciOffice
WHERE {
  # Meral Akşener's office as a politician
  dbr:Meral_Aksener dbo:office ?meralOffice .

  # Kemal Kılıçdaroğlu's administration leader's office
  dbr:Kemal_Kilicdaroglu dbo:leaderOfOrganization ?kemalAdmin .
  ?kemalAdmin dbo:leader ?kemalLeader .
  ?kemalLeader dbo:office ?kemalLeaderOffice .

  # Naci Bostancı's office
  ?naci dbr:Naci_Bostanci ;
        foaf:name ""Naci Bostancı"" ;
        dbo:office ?naciOffice .
}
```",7,9,8,3,3,3,3,71,0,0,1,0,0.0,0
18,24,test,"Give me the alumnus of the figure known, that is an educational institution, as Saints and parent of the professional in Actress.","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/child> ?v0 . ?result <http://dbpedia.org/ontology/almaMater> ?v1 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/EducationalInstitution>. ?v0 <http://dbpedia.org/property/occupation> ""Actress""@en . ?v1 <http://dbpedia.org/property/nickname> ""Saints""@en . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?alumnus WHERE {
  ?college rdfs:label ""Saint Mary's College of California""@en .
  ?alumnus dbo:almaMater ?college .
  ?child dbo:parent ?alumnus ;
         dbo:occupation dbr:Actress .
  ?actress a dbo:Actress ;
           foaf:name ""Jennifer Garner"" ;
           dbo:parent ?child .
}
```",4,5,5,2,2,2,3,28,0,0,1,0,0.0,0
281,28,test,"Give me the awardee of the award of Alfred Warden and commander in the war, that is an event and a military conflict, of Roy Boehm and awardee of the award, that is a military conflict, of Lawrence Moore Cosgrave.",SELECT ?result WHERE { ?result <http://dbpedia.org/property/awards> ?v5 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. <http://dbpedia.org/resource/Roy_Boehm> <http://dbpedia.org/ontology/battle> ?v1 . ?result <http://dbpedia.org/property/awards> ?v3 . <http://dbpedia.org/resource/Lawrence_Moore_Cosgrave> <http://dbpedia.org/property/awards> ?v3 . <http://dbpedia.org/resource/Alfred_Warden> <http://dbpedia.org/property/awards> ?v5 . ?v1 <http://dbpedia.org/ontology/commander> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?awardee WHERE {
  # Find the award named after Alfred Warden and its awardee
  ?award dbo:name ""Alfred Warden"" ;
         dbo:recipient ?awardee .

  # Find the military conflict associated with Roy Boehm
  ?conflict1 dbo:participant ?boehm .
  ?boehm rdfs:label ""Roy Boehm""@en .

  # Ensure the awardee was a commander in this conflict
  ?awardee dbo:commanderOf ?conflict1 .

  # Find the military conflict associated with Lawrence Moore Cosgrave
  ?conflict2 dbo:participant ?cosgrave .
  ?cosgrave rdfs:label ""Lawrence Moore Cosgrave""@en .

  # Ensure the awardee received an award related to this conflict
  ?award2 dbo:name ?conflict2 ;
          dbo:recipient ?awardee .
}
```",6,9,7,2,3,2,3,28,0,0,1,0,0.0,0
382,20,test,"Give me the birthplace of the manager, that is a soccer manager and an athlete and a sports manager, of the player in Lukas Kübler and landmark at elevation of the award of the reference, that is a college coach and a coach, to Harry Combes.","SELECT ?result WHERE { ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/CollegeCoach>. <http://dbpedia.org/resource/Lukas_Kübler> <http://dbpedia.org/ontology/team> ?v1 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsManager>. ?v4 <http://xmlns.com/foaf/0.1/name> ""Harry Combes""@en . ?v4 <http://dbpedia.org/property/awards> ?v5 . ?result <http://dbpedia.org/ontology/elevation> ?v5 . ?v1 <http://dbpedia.org/ontology/manager> ?v2 . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Coach>. ?v2 <http://dbpedia.org/ontology/birthPlace> ?result . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerManager>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Athlete>. }","```sparql
# Step 1: Find Lukas Kübler's manager who is also an athlete and sports manager
SELECT ?manager WHERE {
  ?player dbo:position dbr:Soccer_player .
  ?player foaf:name ""Lukas Kübler"" .
  ?player dbo:team ?team .
  ?team dbo:coach ?manager .
  ?manager rdf:type dbo:Soccer_manager ;
           dbo:occupation dbr:Athlete ;
           dbo:occupation dbr:Sports_manager .
}

# Step 2: Find the birthplace of this manager
SELECT ?birthPlace WHERE {
  ?manager dbo:birthPlace ?birthPlace .
}

# Step 3: Identify Harry Combes' award related to coaching
SELECT ?award WHERE {
  ?person foaf:name ""Harry Combes"" .
  ?person dbo:occupation dbr:College_coach ;
          dbo:occupation dbr:Coach .
  ?person dbo:receivedAward ?award .
}

# Step 4: Find a landmark at the elevation related to this award
SELECT ?landmark WHERE {
  ?award dbo:elevation ?elevation .
  ?landmark dbo:elevation ?elevation ;
            rdf:type dbo:Landscape .
}
```",6,11,7,3,2,3,2,20,0,0,1,0,0.0,0
267,20,test,"Give me the coach of the player, that is a soccer club, in the manager of 2020–21 Tractor S.C. season and person born on the birth date of the reference to Dan Cathy.","SELECT ?result WHERE { ?v4 <http://dbpedia.org/ontology/birthDate> ?v5 . ?result <http://dbpedia.org/ontology/birthDate> ?v5 . ?v1 <http://dbpedia.org/ontology/team> ?v2 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerClub>. ?v4 <http://xmlns.com/foaf/0.1/name> ""Dan Cathy""@en . <http://dbpedia.org/resource/2020–21_Tractor_S.C._season> <http://dbpedia.org/ontology/manager> ?v1 . ?v2 <http://dbpedia.org/ontology/coach> ?result . }","```sparql
# Step 1: Get Dan Cathy's birth date
SELECT ?birthDate WHERE {
  dbpedia:Dan_Cathy dbo:birthday ?birthDate .
}

# Step 2: Find a person born on the same date as Dan Cathy
SELECT DISTINCT ?person WHERE {
  ?person dbo:birthday ?sameBirthDate .
  FILTER (?sameBirthDate = <http://dbpedia.org/resource/Dan_Cathy> )
  FILTER NOT EXISTS { ?person owl:sameAs dbpedia:Dan_Cathy }
}

# Step 3: Find the manager of Tractor S.C. in the 2020–21 season
SELECT DISTINCT ?manager WHERE {
  dbpedia:Tractor_S.C._Football_Club dbo:coach ?manager .
  ?manager dbo:position ""Manager""@en .
  FILTER (YEAR(?startDate) <= 2020 && YEAR(?endDate) >= 2021)
}

# Step 4 and 5: Find the coach of a player who is also a soccer club, connected to the manager found in step 3
SELECT DISTINCT ?coach WHERE {
  ?player dbo:position ""Player""@en .
  ?player dbo:team ?soccerClub .
  ?soccerClub rdf:type dbpedia:Soccer_Club .
  ?manager dbo:managedTeam ?soccerClub .
  ?coach dbo:coach ?player .
}
```",6,7,7,3,2,3,2,20,0,0,1,0,0.0,0
865,69,test,"Give me the father of the child, that is a politician, of Abu Ahmad Abdul Hafiz and father of the child of the father of Abul Maal Abdul Muhith and native of the residence, that is a country, of the person decedent at Patna.",SELECT ?result WHERE { ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. <http://dbpedia.org/resource/Abul_Maal_Abdul_Muhith> <http://dbpedia.org/property/father> ?v7 . ?v1 <http://dbpedia.org/ontology/deathPlace> <http://dbpedia.org/resource/Patna> . ?v3 <http://dbpedia.org/property/father> ?result . ?v1 <http://dbpedia.org/property/residence> ?v0 . ?result <http://dbpedia.org/ontology/birthPlace> ?v0 . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v3 <http://dbpedia.org/property/father> ?v7 . ?v5 <http://dbpedia.org/property/father> ?result . ?v5 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Abu_Ahmad_Abdul_Hafiz> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT DISTINCT ?fatherOfPolitician ?childOfGrandfather ?nativeCountryPerson WHERE {
  # Step 1: Find Abu Ahmad Abdul Hafiz's child who is a politician
  ?politician dbo:parent dbr:Abu_Ahmad_Abdul_Hafiz ;
             dbo:occupation dbr:Politician .
  
  # Step 2: Get the father of that politician
  ?fatherOfPolitician dbo:child ?politician .

  # Step 3: Find Abul Maal Abdul Muhith's grandfather
  ?abulMaal foaf:surname ""Abdul Muhith"" ;
           dbo:parent ?fatherOfAbulMaal .
  
  ?grandfather dbo:child ?fatherOfAbulMaal .

  # Step 4: Get the child of that grandfather
  ?childOfGrandfather dbo:parent ?grandfather .

  # Step 5: Find a person who died in Patna and their native country
  ?decedent dbo:deathPlace dbr:Patna ;
            foaf:nationality ?nativeCountryPerson .
  
  # Combine the information to get the final answer
  FILTER(?fatherOfPolitician = ?childOfGrandfather)
}
```",8,10,9,3,3,3,3,71,0,0,1,0,0.0,0
573,58,test,"Give me the person decedent at Massachusetts and parent of the author, that is a politician and an office holder, of the work of John Quincy Adams and person decedent at the residence, that is a settlement, of William J. Phelan.",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/deathPlace> <http://dbpedia.org/resource/Massachusetts> . ?v1 <http://dbpedia.org/property/author> <http://dbpedia.org/resource/John_Quincy_Adams> . ?v2 <http://dbpedia.org/ontology/parent> ?result . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. ?result <http://dbpedia.org/ontology/deathPlace> ?v5 . ?v1 <http://dbpedia.org/property/author> ?v2 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. <http://dbpedia.org/resource/William_J._Phelan> <http://dbpedia.org/property/residence> ?v5 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?person WHERE {
  ?person dbo:deathPlace dbr:Massachusetts .
  ?person dbo:child dbr:John_Quincy_Adams .
  ?person a dbo:Politician ;
          a dbo:OfficeHolder .

  OPTIONAL { 
    ?phelanResidence dbo:location dbr:San_Francisco .
    ?person dbo:deathPlace ?phelanResidence .
  }
}
```",6,9,7,3,3,3,3,71,1,0,1,1.0,0.5,0.6666666666666666
507,56,test,Give me the spouse of the person born as Anne Voase Coates and professional in the profession of the person born on 1966-02-18 and director of Entertaining Mr Sloane (film).,"SELECT ?result WHERE { ?v0 <http://dbpedia.org/ontology/birthDate> ""1966-02-18""^^<http://www.w3.org/2001/XMLSchema#date> . ?result <http://dbpedia.org/ontology/spouse> ?v2 . ?result <http://dbpedia.org/property/occupation> ?v1 . ?v0 <http://dbpedia.org/property/occupation> ?v1 . ?v2 <http://dbpedia.org/property/birthName> ""Anne Voase Coates""@en . <http://dbpedia.org/resource/Entertaining_Mr_Sloane_(film)> <http://dbpedia.org/ontology/director> ?result . }","```sparql
# Step 1: Find Anne Voase Coates and her spouse
SELECT ?spouse WHERE {
  ?anne foaf:name ""Anne Voase Coates""@en .
  ?anne dbo:spouse ?spouse .
}

# Step 2: Identify the profession of the person born on 1966-02-18 who directed ""Entertaining Mr Sloane""
SELECT ?profession WHERE {
  ?person dbo:birthday ""1966-02-18""^^xsd:date ;
          dbo:directed <http://dbpedia.org/resource/Entertaining_Mr_Sloane> .
  ?person dbo:occupation ?profession .
}

# Step 3: Confirm the spouse's profession matches
SELECT ?spouse WHERE {
  ?anne foaf:name ""Anne Voase Coates""@en .
  ?anne dbo:spouse ?spouse .
  ?spouse dbo:occupation ?matchedProfession .
  FILTER EXISTS { 
    ?person dbo:birthday ""1966-02-18""^^xsd:date ;
            dbo:directed <http://dbpedia.org/resource/Entertaining_Mr_Sloane> .
    ?person dbo:occupation ?profession .
    FILTER (?matchedProfession = ?profession)
  }
}
```",6,6,7,3,3,3,3,71,0,0,1,0,0.0,0
216,59,test,"Give me the player in the coach, that is a soccer player and a sports manager and a soccer manager, of the player, that is an organisation and a sports club and a soccer club, in Džemal Berberović and player in the coach of the reference, that is an organisation and a soccer club, to Croatia U21.","SELECT ?result WHERE { ?v3 <http://dbpedia.org/ontology/coach> ?v2 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsClub>. ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsManager>. ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerManager>. ?v0 <http://dbpedia.org/ontology/coach> ?v5 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerClub>. <http://dbpedia.org/resource/Džemal_Berberović> <http://dbpedia.org/ontology/team> ?v0 . ?v5 <http://dbpedia.org/ontology/team> ?result . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerClub>. ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerPlayer>. ?v3 <http://xmlns.com/foaf/0.1/name> ""Croatia U21""@en . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?v2 <http://dbpedia.org/ontology/team> ?result . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?playerInCoach WHERE {
  # Džemal Berberović's role as a coach
  dbr:Džemal_Berberović dbo:coach ?team .
  
  # Player in the coach who is also a soccer player and sports manager
  ?playerInCoach dbo:occupation dbr:Soccer_player ;
                 dbo:occupation dbr:Sports_manager ;
                 dbo:managerOf ?team .

  # The team must be an organization, sports club, and soccer club
  ?team rdf:type dbo:SportsClub ;
        rdf:type dbo:SoccerClub ;
        rdf:type dbo:Organization .

  # Reference to Croatia U21 as an organization and soccer club
  FILTER (?team = dbr:Croatia_national_under-21_football_team)
}
```",6,14,7,3,2,3,3,71,0,0,3,0,0.0,0
582,69,test,"Give me the figure known as the nickname of the team, that is an organisation, of Hajime Moriyasu and reference to the residence of the reference, that is a scientist, to Hirotaka Sugawara and player in the father, that is an athlete and a soccer manager and a sports manager, of Masami Nagasawa.","SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/coach> <http://dbpedia.org/resource/Hajime_Moriyasu> . ?v1 <http://dbpedia.org/property/nickname> ?v2 . <http://dbpedia.org/resource/Masami_Nagasawa> <http://dbpedia.org/property/father> ?v7 . ?result <http://xmlns.com/foaf/0.1/name> ?v3 . ?result <http://dbpedia.org/property/nickname> ?v2 . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Scientist>. ?v7 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsManager>. ?v4 <http://xmlns.com/foaf/0.1/name> ""Hirotaka Sugawara""@en . ?v4 <http://dbpedia.org/property/residence> ?v3 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?v7 <http://dbpedia.org/ontology/team> ?result . ?v7 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerManager>. ?v7 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Athlete>. }","```sparql
# Step 1: Find Hajime Moriyasu's team nickname
SELECT ?teamNickname WHERE {
  ?person foaf:name ""Hajime Moriyasu""@en .
  ?person dbo:managerOf ?team .
  ?team rdfs:label ?teamLabel .
  FILTER(CONTAINS(LCASE(?teamLabel), ""nickname""))
  BIND(REPLACE(STR(?teamLabel), ""Team "", """") AS ?teamNickname)
}

# Step 2: Find Hirotaka Sugawara's place of residence
SELECT ?residence WHERE {
  ?person foaf:name ""Hirotaka Sugawara""@en .
  ?person dbo:almaMater ?institution .
  ?institution dbo:location ?place .
  ?place rdfs:label ?residenceLabel .
  BIND(STR(?residenceLabel) AS ?residence)
}

# Step 3: Find Masami Nagasawa's father and his professions
SELECT ?fatherName WHERE {
  ?person foaf:name ""Masami Nagasawa""@en .
  ?person dbo:parent ?father .
  ?father foaf:name ?fatherName .
  OPTIONAL { ?father dbo:occupation ?occupation . FILTER(CONTAINS(LCASE(?occupation), ""soccer manager"") || CONTAINS(LCASE(?occupation), ""sports manager"")) }
}

# Step 4: Combine the results to find the final figure
SELECT ?finalFigure WHERE {
  # Assuming we have variables from previous queries: ?teamNickname, ?residence, ?fatherName
  # This step would involve linking these entities based on their relationships or references.
  # The exact query depends on how these entities are connected in DBpedia.
}
```",8,13,9,3,3,3,3,71,0,0,1,0,0.0,0
443,26,test,Give me the landmark at elevation of the award of William Shepherd and birthplace of the work of yes and birthplace of Ulf Lundell.,"SELECT ?result WHERE { ?v2 <http://dbpedia.org/property/author> ""yes""@en . ?result <http://dbpedia.org/ontology/elevation> ?v1 . <http://dbpedia.org/resource/Ulf_Lundell> <http://dbpedia.org/ontology/birthPlace> ?result . <http://dbpedia.org/resource/William_Shepherd> <http://dbpedia.org/property/awards> ?v1 . ?v2 <http://dbpedia.org/ontology/birthPlace> ?result . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?landmark WHERE {
  # Find the award associated with William Shepherd
  ?shepherd a dbo:Person ;
            foaf:name ""William Shepherd""@en .
  ?award dbo:recipient ?shepherd .

  # Find the birthplace of a member of Yes
  ?yesMember a dbo:MusicalArtist ;
             dbo:memberOf dbr:Yes ;
             dbo:birthPlace ?yesBirthPlace .

  # Find Ulf Lundell's birthplace
  ?ulfLundell a dbo:Person ;
              foaf:name ""Ulf Lundell""@en ;
              dbo:birthPlace ?ulfBirthPlace .

  # Get the elevation of the award location
  ?awardLocation dbo:elevation ?elevation .
  
  # Find landmark at that elevation
  ?landmark dbo:elevation ?elevation ;
            a dbo:Lighthouse ; # Assuming we are looking for a lighthouse as an example landmark

  FILTER(?yesBirthPlace != ?ulfBirthPlace)
}
```",5,5,6,2,3,2,3,28,0,0,1,0,0.0,0
892,61,test,"Give me the entity in the administration, that is Italian and a region and a settlement and an administrative region, of the party, that is a political party and an organisation, of Andrea Cozzolino and landmark at elevation of the award of the member of E-girls.",SELECT ?result WHERE { ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/AdministrativeRegion>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/PoliticalParty>. ?v0 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Italy>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Region>. ?result <http://dbpedia.org/ontology/province> ?v0 . ?v0 <http://dbpedia.org/property/leaderParty> ?v3 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. ?v1 <http://dbpedia.org/property/awards> ?v4 . ?result <http://dbpedia.org/ontology/elevation> ?v4 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. <http://dbpedia.org/resource/E-girls> <http://dbpedia.org/ontology/bandMember> ?v1 . <http://dbpedia.org/resource/Andrea_Cozzolino> <http://dbpedia.org/ontology/party> ?v3 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?region WHERE {
  # Step 1: Identify Andrea Cozzolino's political party
  ?party a dbo:PoliticalParty ;
         dbo:member dbr:Andrea_Cozzolino .

  # Step 2: Find the Italian region that is an administrative region and settlement
  ?region a dbo:Region ;
          dbo:country dbr:Italy ;
          dbo:settlement true ;
          dbo:administrativeRegion true ;
          dbo:partOfAdministrativeArea ?party .

  # Step 3: Identify landmark at elevation related to E-girls member
  ?landmark a dbo:Lighthouse ;  # Assuming the landmark is a lighthouse for example
             dbo:elevation ?elevation ;
             dbo:location ?region .
  
  ?member a dbo:E-girls_member ;
          dbo:award ?award ;
          dbo:associatedLandmark ?landmark .

}
```",6,12,7,3,2,3,3,71,0,0,2,0,0.0,0
933,64,test,"Give me the band of the band of the band, that is an artist and a musical artist, of The Ramong Sound and reference to Alan Warner and band of the band, that is a group and a band and an organisation, of the person born, that is a musical artist, on 1947-04-21.","SELECT ?result WHERE { <http://dbpedia.org/resource/The_Ramong_Sound> <http://dbpedia.org/ontology/associatedMusicalArtist> ?v4 . ?v5 <http://dbpedia.org/ontology/birthDate> ""1947-04-21""^^<http://www.w3.org/2001/XMLSchema#date> . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?v5 <http://dbpedia.org/ontology/associatedMusicalArtist> ?v0 . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?result <http://xmlns.com/foaf/0.1/name> ""Alan Warner""@en . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Group>. ?v0 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v2 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v4 <http://dbpedia.org/ontology/associatedMusicalArtist> ?v2 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Band>. }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?finalBand WHERE {
  # Step 1: Identify ""The Ramong Sound""
  ?album rdfs:label ""The Ramong Sound""@en .
  
  # Step 2: Find the band of the album
  ?album dbo:byArtist ?band1 .

  # Step 3: Reference to Alan Warner
  ?band1 dbo:member ?alanWarner .
  ?alanWarner rdfs:label ""Alan Warner""@en .

  # Step 4: Identify the person born on 1947-04-21
  ?person dbo:birthday ?birthday ;
          rdf:type dbo:MusicalArtist .
  FILTER (YEAR(?birthday) = 1947 && MONTH(?birthday) = 4 && DAY(?birthday) = 21)

  # Step 5: Find the band of the person
  ?person dbo:member ?band2 .

  # Step 6: Final connection between bands
  ?band1 dbo:member ?finalBand .
  ?band2 dbo:member ?finalBand .
}
```",7,13,8,3,3,3,3,71,0,0,1,0,0.0,0
888,19,test,"Give me the commander in the force, that is a societal event and an event, of Serhiy Kotenko and awardee of the award of the commander in 2022 Ukrainian eastern counteroffensive.",SELECT ?result WHERE { ?result <http://dbpedia.org/property/awards> ?v4 . ?v2 <http://dbpedia.org/ontology/commander> ?result . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?v2 <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Serhiy_Kotenko> . ?v0 <http://dbpedia.org/property/awards> ?v4 . <http://dbpedia.org/resource/2022_Ukrainian_eastern_counteroffensive> <http://dbpedia.org/ontology/commander> ?v0 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?commander ?award WHERE {
  ?person rdfs:label ""Serhiy Kotenko""@en .
  ?person dbo:position ?commander .
  ?event dbo:awardee ?person ;
         dbo:name ?eventName .
  FILTER(CONTAINS(LCASE(?eventName), ""2022 ukrainian eastern counteroffensive""))
  OPTIONAL { ?person dbo:award ?award . }
}
```",5,7,6,3,2,3,2,20,0,0,1,0,0.0,0
791,65,test,"Give me the predecessor of the child of the child, that is an office holder and a royalty, of Emperor Go-Shirakawa and father of the child, that is a royalty, of Emperor Takakura and spouse of the spouse, that is a royalty, of Emperor Takakura.",SELECT ?result WHERE { ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v6 <http://dbpedia.org/property/father> ?v0 . ?v3 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Emperor_Takakura> . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v3 <http://dbpedia.org/property/father> ?result . ?v0 <http://dbpedia.org/ontology/parent> <http://dbpedia.org/resource/Emperor_Go-Shirakawa> . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v4 <http://dbpedia.org/ontology/spouse> <http://dbpedia.org/resource/Emperor_Takakura> . ?result <http://dbpedia.org/ontology/successor> ?v6 . ?result <http://dbpedia.org/ontology/spouse> ?v4 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?predecessor WHERE {
  # Step 1: Find Emperor Go-Shirakawa's child who is an office holder and royalty
  ?childGoShirakawa dbo:parent dbr:Emperor_Go-Shirakawa ;
                   a dbo:Monarch, dbo:OfficeHolder .

  # Step 2: Find the grandchild of Emperor Go-Shirakawa
  ?grandchildGoShirakawa dbo:parent ?childGoShirakawa .

  # Step 3: Find the predecessor of this grandchild
  ?predecessor dbo:succeededBy ?grandchildGoShirakawa .

  # Step 4: Find Emperor Takakura's child who is royalty
  ?childTakakura dbo:parent dbr:Emperor_Takakura ;
                 a dbo:Monarch .

  # Step 5: Find the father of this child
  ?fatherChildTakakura dbo:spouse ?motherChildTakakura ;
                       dbo:child ?childTakakura .

  # Step 6: Find the spouse of Emperor Takakura who is royalty
  ?spouseTakakura dbo:spouse dbr:Emperor_Takakura ;
                  a dbo:Monarch .

  # Ensure all these individuals are connected as described
  FILTER (?predecessor = ?fatherChildTakakura && ?predecessor = ?spouseTakakura)
}
```",7,11,8,3,3,3,3,71,0,0,1,0,0.0,0
965,68,test,"Give me the parent of the child, that is a royalty, of the person born, that is a politician, on 1854-05-24 and spouse of the spouse of the parent of Louise Mountbatten and parent of the person born, that is a noble, as Prince George of Battenberg.","SELECT ?result WHERE { ?v0 <http://dbpedia.org/property/birthName> ""Prince George of Battenberg""@en . ?v4 <http://dbpedia.org/ontology/spouse> ?v2 . ?v6 <http://dbpedia.org/property/father> ?v1 . ?result <http://dbpedia.org/ontology/spouse> ?v2 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Noble>. ?v6 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. <http://dbpedia.org/resource/Louise_Mountbatten> <http://dbpedia.org/ontology/parent> ?v4 . ?v1 <http://dbpedia.org/ontology/birthDate> ""1854-05-24""^^<http://www.w3.org/2001/XMLSchema#date> . ?v0 <http://dbpedia.org/ontology/parent> ?result . ?v6 <http://dbpedia.org/ontology/parent> ?result . }","```sparql
SELECT DISTINCT ?parentOfRoyalChild WHERE {
  # Step 1: Find the politician born on 1854-05-24
  ?politician dbo:birthDate ""1854-05-24""^^xsd:date ;
              rdf:type dbo:Politician .

  # Step 2: Find the spouse of this politician
  ?spouse dbo:spouse ?politician .

  # Step 3: Find the parent of Louise Mountbatten
  ?louiseMountbatten dbo:parent ?parentOfLouise ;
                     rdfs:label ""Louise Mountbatten""@en .
  
  # Step 4: Find the spouse of the parent from step 3
  ?spouseOfParent dbo:spouse ?parentOfLouise .

  # Step 5: Find the child of this spouse that is royalty
  ?royalChild dbo:child ?spouseOfParent ;
              rdf:type dbo:RoyalFamilyMember .

  # Step 6: Determine the parent of this royal child
  ?royalChild dbo:parent ?parentOfRoyalChild .
}
```",8,11,9,3,3,3,3,71,0,0,2,0,0.0,0
865,64,test,"Give me the father of the child of the father of Abul Maal Abdul Muhith and native of the residence, that is a country, of the person decedent at Patna and father of AK Abdul Momen.",SELECT ?result WHERE { <http://dbpedia.org/resource/AK_Abdul_Momen> <http://dbpedia.org/property/father> ?result . <http://dbpedia.org/resource/Abul_Maal_Abdul_Muhith> <http://dbpedia.org/property/father> ?v6 . ?v2 <http://dbpedia.org/property/father> ?result . ?v2 <http://dbpedia.org/property/father> ?v6 . ?v1 <http://dbpedia.org/property/residence> ?v0 . ?v1 <http://dbpedia.org/ontology/deathPlace> <http://dbpedia.org/resource/Patna> . ?result <http://dbpedia.org/ontology/birthPlace> ?v0 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?fatherOfAbulMaal ?childOfFather ?fatherOfChild ?fatherOfAKAbdulMomen ?residenceCountry WHERE {
  # Step 1: Identify Abul Maal Abdul Muhith's father
  dbr:Abul_Maal_Abdul_Muhith dbo:father ?fatherOfAbulMaal .

  # Step 2: Find the child of that father (likely Abul Maal Abdul Muhith himself)
  ?childOfFather dbo:parent ?fatherOfAbulMaal .
  
  # Step 3: Identify the father of this child
  ?childOfFather dbo:father ?fatherOfChild .

  # Step 4: Find AK Abdul Momen's father
  dbr:AK_Abdul_Momen dbo:father ?fatherOfAKAbdulMomen .

  # Step 5: Determine the residence of AK Abdul Momen's father at the time of his death
  ?fatherOfAKAbdulMomen dbo:deathPlace ?residence .
  
  # Check if the residence is a country and located in Patna
  OPTIONAL { 
    ?residence dbr:Patna dbo:locatedIn ?residenceCountry .
    FILTER (isLiteral(?residenceCountry))
  }
}
```",7,8,8,3,3,3,3,71,0,0,1,0,0.0,0
715,59,test,"Give me the commander in the force, that is a military conflict, of the native of Morocco and commander in the force of the mayor, that is an office holder and a politician and a president, of 1933 Spanish general election.",SELECT ?result WHERE { <http://dbpedia.org/resource/1933_Spanish_general_election> <http://dbpedia.org/property/leader> ?v0 . ?v2 <http://dbpedia.org/ontology/commander> ?v3 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/President>. ?v2 <http://dbpedia.org/ontology/commander> ?result . ?v5 <http://dbpedia.org/ontology/commander> ?v0 . ?v5 <http://dbpedia.org/ontology/commander> ?result . ?v3 <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Morocco> . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?person WHERE {
    # Find a person who was a commander in a military conflict involving Morocco
    ?conflict dbo:location dbr:Morocco .
    ?conflict dbo:commander ?person .

    # Ensure the same person is also involved as a commander related to Spanish politics around 1933
    OPTIONAL { 
        ?politicalEvent dbo:date ""1933""^^xsd:gYear ;
                        dbo:officeHolder ?person .
    }

    FILTER EXISTS {
        ?person dbo:nationality dbr:Morocco .
    }
}
```",6,10,7,3,2,3,3,71,0,0,4,0,0.0,0
122,8,test,"Give me the band of the reference, that is a musical artist and an artist, to Gift of Gab and band member of Lyrics Born.","SELECT ?result WHERE { ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?v2 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v2 <http://xmlns.com/foaf/0.1/name> ""Gift of Gab""@en . ?result <http://dbpedia.org/ontology/associatedMusicalArtist> <http://dbpedia.org/resource/Lyrics_Born> . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?band WHERE {
  ?band a dbo:MusicalArtist ;
        rdfs:label ""Blackalicious""@en .
}
```",3,5,4,2,2,2,2,9,0,0,2,0,0.0,0
976,56,test,"Give me the office of the leader, that is a politician, of Grand National Assembly of Turkey and office of the person born as the birth name of Naci Bostancı and office of Meral Akşener.",SELECT ?result WHERE { <http://dbpedia.org/resource/Meral_Akşener> <http://dbpedia.org/property/office> ?result . ?v2 <http://dbpedia.org/property/office> ?result . ?v0 <http://dbpedia.org/property/office> ?result . <http://dbpedia.org/resource/Grand_National_Assembly_of_Turkey> <http://dbpedia.org/ontology/leader> ?v2 . ?v0 <http://dbpedia.org/property/birthName> ?v4 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. <http://dbpedia.org/resource/Naci_Bostancı> <http://dbpedia.org/property/birthName> ?v4 . },"```sparql
# Query for the office of the leader of the Grand National Assembly of Turkey (Speaker)
SELECT ?office WHERE {
  wd:Q1234567 foaf:name ""Speaker""@en .
  wd:Q1234567 dbo:positionHeld ?office .
}

# Query for the office of Naci Bostancı
SELECT ?office WHERE {
  wd:Q9876543 foaf:name ""Naci Bostancı""@en .
  wd:Q9876543 dbo:positionHeld ?office .
}

# Query for the office of Meral Akşener
SELECT ?office WHERE {
  wd:Q1122334 foaf:name ""Meral Akşener""@en .
  wd:Q1122334 dbo:positionHeld ?office .
}
```

Note: The `wd:Q1234567`, `wd:Q9876543`, and `wd:Q1122334` are placeholders for the actual DBpedia resource identifiers of the Speaker of the Turkish Parliament, Naci Bostancı, and Meral Akşener, respectively. These should be replaced with the correct identifiers from DBpedia.",6,7,7,3,3,3,3,71,0,0,1,0,0.0,0
507,66,test,"Give me the professional in the profession of the person born on 1966-02-18 and spouse of the person born as Anne Voase Coates and director of the movie, that is a movie and a work, with Beryl Reid.","SELECT ?result WHERE { ?v6 <http://dbpedia.org/property/starring> <http://dbpedia.org/resource/Beryl_Reid> . ?v6 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Film>. ?result <http://dbpedia.org/ontology/spouse> ?v3 . ?result <http://dbpedia.org/property/occupation> ?v2 . ?v6 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?v6 <http://dbpedia.org/ontology/director> ?result . ?v1 <http://dbpedia.org/ontology/birthDate> ""1966-02-18""^^<http://www.w3.org/2001/XMLSchema#date> . ?v3 <http://dbpedia.org/property/birthName> ""Anne Voase Coates""@en . ?v1 <http://dbpedia.org/property/occupation> ?v2 . }","```sparql
# Step 1: Find the person born on 1966-02-18
SELECT ?person WHERE {
  ?person dbo:birthday ""1966-02-18""^^xsd:date .
}

# Step 2: Check if this person is married to Anne Voase Coates
SELECT ?spouse WHERE {
  VALUES ?anne { dbr:Anne_Voase_Coates }
  ?marriage dbo:spouse1 ?person ;
            dbo:spouse2 ?anne .
  BIND(?person AS ?spouse)
}

# Step 3: Find a movie directed by this spouse that features Beryl Reid
SELECT DISTINCT ?movie WHERE {
  VALUES ?beryl { dbr:Beryl_Reid }
  ?directedBy dbo:director ?spouse ;
              dbo:actor ?beryl .
  BIND(?directedBy AS ?movie)
}

# Step 4: Find another professional in the same profession as the person from step 1
SELECT DISTINCT ?professional WHERE {
  ?person dbo:occupation ?profession .
  ?otherPerson dbo:occupation ?profession .
  FILTER(?person != ?otherPerson)
}
```",7,9,8,3,3,3,3,71,0,0,1,0,0.0,0
98,26,test,"Give me the entity in the region, that is a country, of Philippine Standard Time and birth place of Paolo Ballesteros and region of the time zone of Lopez Jaena.",SELECT ?result WHERE { <http://dbpedia.org/resource/Lopez_Jaena> <http://dbpedia.org/ontology/timeZone> ?v4 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. ?result <http://dbpedia.org/ontology/timeZone> ?v4 . ?result <http://dbpedia.org/ontology/country> ?v1 . <http://dbpedia.org/resource/Paolo_Ballesteros> <http://dbpedia.org/ontology/birthPlace> ?result . ?v1 <http://dbpedia.org/property/timeZone> <http://dbpedia.org/resource/Philippine_Standard_Time> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?country WHERE {
  # Philippine Standard Time
  ?pst dbo:timeZoneName ""Philippine Standard Time"" .
  
  # Birthplace of Paolo Ballesteros
  ?paolo dbo:birthPlace ?birthPlace .

  # Region of the time zone of Lopez, Jaena
  ?lopez dbo:location ?location .
  ?location dbo:timeZone ?tz .
  ?tz dbo:timeZoneName ""Philippine Standard Time"" .

  # Ensure all entities are in the same region and country
  ?birthPlace dbo:country ?country .
  ?location dbo:country ?country2 .

  FILTER (?country = ?country2)
  
  # Filter to ensure it's a country
  VALUES ?country { dbr:Philippines }
}
```",5,6,6,2,3,2,3,28,0,0,2,0,0.0,0
465,56,test,"Give me the successor of the child of Alfonso I d'Este and successor of the child, that is a royalty, of the parent of Charles Orlando, Dauphin of France and spouse of Archduchess Barbara of Austria.","SELECT ?result WHERE { <http://dbpedia.org/resource/Charles_Orlando,_Dauphin_of_France> <http://dbpedia.org/ontology/parent> ?v0 . ?v1 <http://dbpedia.org/ontology/successor> ?result . ?v0 <http://dbpedia.org/ontology/child> ?v1 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?result <http://dbpedia.org/ontology/spouse> <http://dbpedia.org/resource/Archduchess_Barbara_of_Austria> . ?v2 <http://dbpedia.org/ontology/successor> ?result . ?v2 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Alfonso_I_d'Este> . }","```sparql
# Step 1: Find a notable child of Alfonso I d'Este
SELECT ?child WHERE {
  wd:Q123456 wdt:P40 ?child .
}

# Step 2: Find the successor of that child
SELECT ?successor WHERE {
  ?child wdt:P54 ?successor .
}

# Step 3: Identify Charles Orlando, Dauphin of France's parent
SELECT ?parent WHERE {
  wd:Q789012 wdt:P22 ?parent .
}

# Step 4: Identify the spouse of Archduchess Barbara of Austria
SELECT ?spouse WHERE {
  wd:Q345678 wdt:P26 ?spouse .
}

# Step 5: Find their child that is royalty
SELECT ?royalChild WHERE {
  ?parent wdt:P40 ?child .
  ?spouse wdt:P40 ?child .
  ?child wdt:P31/wdt:P279* wd:Q11850 . # Q11850 is the class for royalty
}

# Step 6: Determine the successor of that child
SELECT ?successor WHERE {
  ?royalChild wdt:P54 ?successor .
}
```

Note: Replace `wd:Q123456`, `wd:Q789012`, and `wd:Q345678` with the actual DBpedia IDs for Alfonso I d'Este, Charles Orlando, Dauphin of France, and Archduchess Barbara of Austria respectively. These placeholders are used here as examples.",6,7,7,3,3,3,3,71,0,0,1,0,0.0,0
273,18,test,Give me the spouse of the child of the child of Edoardo Agnelli (1831-1871) and parent of the alumnus of University of Turin.,SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/child> ?v2 . ?v3 <http://dbpedia.org/ontology/almaMater> <http://dbpedia.org/resource/University_of_Turin> . ?v3 <http://dbpedia.org/ontology/parent> ?result . ?v1 <http://dbpedia.org/ontology/parent> <http://dbpedia.org/resource/Edoardo_Agnelli_(1831-1871)> . ?result <http://dbpedia.org/ontology/spouse> ?v2 . },"```sparql
SELECT DISTINCT ?spouse WHERE {
  # Step 1: Identify Edoardo Agnelli (1831-1871)
  ?edoardo dbo:birthDate ?birthDate .
  FILTER(?birthDate = ""1831-01-01""^^xsd:date && ?birthDate <= ""1871-12-31""^^xsd:date) .
  ?edoardo rdfs:label ""Edoardo Agnelli""@en .

  # Step 2: Find the child of Edoardo Agnelli
  ?child dbo:parent ?edoardo .

  # Step 3: Identify a grandchild (child of the child)
  ?grandchild dbo:parent ?child .

  # Step 4: Determine the spouse of this grandchild
  ?spouse dbo:spouse ?grandchild .

  # Step 5: Find an alumnus from University of Turin and their parent
  ?alumnus foaf:almaMater ?university .
  FILTER(STRSTARTS(LCASE(?university), ""http://dbpedia.org/resource/university_of_turin"")) .
  ?parent dbo:child ?alumnus .

  # Ensure the spouse is also a parent of this alumnus
  FILTER(?spouse = ?parent)
}
```",5,5,6,3,2,3,2,20,0,0,1,0,0.0,0
124,59,test,"Give me the military force of the war, that is an event and a military conflict and a societal event, of the awardee of British South Africa Company Medal and commander in the war, that is a societal event and a military conflict, of the reference, that is Australian and an organisation and a military unit, to 'A' Battery, Royal Australian Artillery.","SELECT ?result WHERE { ?v0 <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/British_South_Africa_Company_Medal> . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?result <http://dbpedia.org/ontology/battle> ?v5 . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?v0 <http://dbpedia.org/ontology/battle> ?v5 . ?v3 <http://xmlns.com/foaf/0.1/name> ""'A' Battery, Royal Australian Artillery""@en . ?v3 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Australia>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryUnit>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v2 <http://dbpedia.org/ontology/commander> ?result . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v3 <http://dbpedia.org/ontology/battle> ?v2 . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?militaryForce WHERE {
  # Identify the war as the Second Boer War
  VALUES ?war { dbr:Second_British_Empire–Boer_War }

  # Find a commander who received the British South Africa Company Medal and was involved in this war
  ?commander dbo:awardReceived dbr:British_South_Africa_Company_Medal ;
             dbo:commanderOf ?war .

  # Identify 'A' Battery, Royal Australian Artillery as part of the Australian Army
  ?unit rdfs:label ""A Battery, Royal Australian Artillery""@en ;
        dbo:militaryUnitOf dbr:Australian_Army .

  # Find the military force involved in the Second Boer War
  ?militaryForce dbo:participatedIn ?war .
}
```",6,14,7,3,2,3,3,71,0,0,10,0,0.0,0
791,68,test,"Give me the spouse of the spouse, that is a royalty, of the reference to Emperor Takakura and father of the child, that is a royalty, of Emperor Takakura and predecessor of the child of the child, that is an office holder and a royalty, of Emperor Go-Shirakawa.","SELECT ?result WHERE { ?v4 <http://dbpedia.org/ontology/spouse> ?v5 . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v3 <http://dbpedia.org/property/father> ?result . ?v0 <http://dbpedia.org/ontology/parent> <http://dbpedia.org/resource/Emperor_Go-Shirakawa> . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v5 <http://xmlns.com/foaf/0.1/name> ""Emperor Takakura""@en . ?v7 <http://dbpedia.org/property/father> ?v0 . ?result <http://dbpedia.org/ontology/spouse> ?v4 . ?result <http://dbpedia.org/ontology/successor> ?v7 . ?v3 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Emperor_Takakura> . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. }","```sparql
SELECT ?finalSpouse WHERE {
  # Step 1: Identify Emperor Takakura's spouse
  dbp:Emperor_Takakura dbo:spouse ?spouseTakakura .

  # Step 2: Find the child of Emperor Takakura and his spouse who is royalty
  ?childTakakura dbo:parent ?spouseTakakura ;
                 dbo:parent dbp:Emperor_Takakura ;
                 a dbo:Monarch .

  # Step 3: Determine the predecessor of this child
  ?predecessor dbo:succeededBy ?childTakakura .

  # Step 4: Identify the child of this predecessor
  ?childPredecessor dbo:parent ?predecessor ;
                   a dbo:Monarch .

  # Step 5: Find the spouse of this child who is an office holder and royalty
  ?officeHolderSpouse dbo:spouse ?childPredecessor ;
                     a dbo:OfficeHolder, dbo:Monarch .

  # Step 6: Determine the spouse's spouse
  ?finalSpouse dbo:spouse ?officeHolderSpouse .
}
```",8,12,9,3,3,3,3,71,0,0,1,0,0.0,0
976,71,test,"Give me the office of the person born as the birth name of Naci Bostancı and office of the mayor, that is a politician and an office holder and Turkish, of the reference, that is an organisation and a political party and Turkish, to Millet İttifakı and office of the leader, that is a politician, of the administration, that is an organisation, of Kemal Kılıçdaroğlu.","SELECT ?result WHERE { ?v5 <http://dbpedia.org/ontology/nationality> <http://dbpedia.org/resource/Turkey>. ?v8 <http://dbpedia.org/property/birthName> ?v7 . ?v4 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Turkey>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?v8 <http://dbpedia.org/property/office> ?result . ?v1 <http://dbpedia.org/ontology/leader> ?v2 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v5 <http://dbpedia.org/property/office> ?result . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?v1 <http://dbpedia.org/property/leader> <http://dbpedia.org/resource/Kemal_Kılıçdaroğlu> . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/PoliticalParty>. ?v4 <http://xmlns.com/foaf/0.1/name> ""Millet İttifakı""@en . <http://dbpedia.org/resource/Naci_Bostancı> <http://dbpedia.org/property/birthName> ?v7 . ?v4 <http://dbpedia.org/property/leader> ?v5 . ?v2 <http://dbpedia.org/property/office> ?result . }","```sparql
# Step 1: Find Naci Bostancı's birth name
SELECT ?birthName WHERE {
  dbpedia-tr:Naci_Bostancı dbo:birthName ?birthName .
}

# Step 2: Find the office held by the person with that birth name
SELECT DISTINCT ?office WHERE {
  ?person dbo:birthName ?birthName .
  ?person dbo:occupation ?office .
  FILTER(?office IN (dbpedia-tr:Politician, dbpedia-tr:OfficeHolder))
} LIMIT 1

# Step 3: Confirm Millet İttifakı as an organization and political party in Turkey
SELECT ?isOrganization ?isPoliticalParty WHERE {
  dbpedia-tr:Millet_İttifakı rdf:type ?type .
  FILTER(?type IN (dbpedia-owl:Organization, dbpedia-owl:PoliticalParty))
}

# Step 4: Determine the office of Kemal Kılıçdaroğlu within his administration
SELECT DISTINCT ?office WHERE {
  dbpedia-tr:Kemal_Kılıçdaroğlu dbo:occupation ?office .
  FILTER(?office IN (dbpedia-tr:Politician, dbpedia-tr:Leader))
}
```",9,17,10,3,3,3,3,71,0,0,1,0,0.0,0
582,65,test,"Give me the figure known as the nickname of Japan national football team and reference to the residence of Hirotaka Sugawara and player in the father, that is an athlete and a soccer manager and a sports manager, of the child of Kazuaki Nagasawa.",SELECT ?result WHERE { ?v6 <http://dbpedia.org/ontology/team> ?result . ?v6 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Athlete>. ?v6 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerManager>. <http://dbpedia.org/resource/Japan_national_football_team> <http://dbpedia.org/property/nickname> ?v3 . ?v0 <http://dbpedia.org/property/father> ?v6 . ?v6 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsManager>. ?result <http://dbpedia.org/property/nickname> ?v3 . <http://dbpedia.org/resource/Hirotaka_Sugawara> <http://dbpedia.org/property/residence> ?v4 . ?v0 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Kazuaki_Nagasawa> . ?result <http://xmlns.com/foaf/0.1/name> ?v4 . },"```sparql
# Step 1: Get the nickname of Japan National Football Team
SELECT ?nickname WHERE {
  ?team dcterms:title ""Japan national football team""@en .
  ?team dbo:nickname ?nickname .
}

UNION

# Step 2: Find Hirotaka Sugawara's residence
SELECT ?residence WHERE {
  ?person foaf:name ""Hirotaka Sugawara""@ja .
  ?person dbo:currentResidence ?residence .
}

UNION

# Step 3: Identify Kazuaki Nagasawa's father and his professions
SELECT ?father ?profession WHERE {
  ?child foaf:name ""Kazuaki Nagasawa""@ja .
  ?child dbo:parent ?father .
  ?father a dbo:Athlete ;
          a dbo:SoccerManager ;
          a dbo:SportsManager .
}

# Step 4: Combine the results to find the connection
SELECT DISTINCT ?nickname ?residence ?father WHERE {
  # Nickname of Japan National Football Team
  ?team dcterms:title ""Japan national football team""@en .
  ?team dbo:nickname ?nickname .

  # Hirotaka Sugawara's residence
  ?person foaf:name ""Hirotaka Sugawara""@ja .
  ?person dbo:currentResidence ?residence .

  # Kazuaki Nagasawa's father and his professions
  ?child foaf:name ""Kazuaki Nagasawa""@ja .
  ?child dbo:parent ?father .
  ?father a dbo:Athlete ;
          a dbo:SoccerManager ;
          a dbo:SportsManager .
}
```",7,10,8,3,3,3,3,71,0,0,1,0,0.0,0
216,66,test,"Give me the player in the coach, that is a soccer player and a sports manager and a soccer manager, of Bosnia and Herzegovina national under-18 football team and player in the coach of Croatia national under-21 football team and team of the person born, that is a sports manager and a soccer manager and a soccer player, on the death of Pavel Vezhinov.",SELECT ?result WHERE { ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsManager>. <http://dbpedia.org/resource/Croatia_national_under-21_football_team> <http://dbpedia.org/ontology/coach> ?v3 . ?v6 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerPlayer>. ?v3 <http://dbpedia.org/ontology/team> ?result . <http://dbpedia.org/resource/Pavel_Vezhinov> <http://dbpedia.org/ontology/deathDate> ?v1 . ?v6 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerManager>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerPlayer>. <http://dbpedia.org/resource/Bosnia_and_Herzegovina_national_under-18_football_team> <http://dbpedia.org/ontology/coach> ?v6 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerManager>. ?v6 <http://dbpedia.org/ontology/team> ?result . ?v6 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsManager>. ?result <http://dbpedia.org/ontology/coach> ?v2 . ?v2 <http://dbpedia.org/ontology/birthDate> ?v1 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT DISTINCT ?person WHERE {
  ?person a dbo:SoccerPlayer .
  ?person a dbo:SportsManager .

  # Involvement with Bosnia and Herzegovina national under-18 football team
  ?team1 dbr:Bosnia_and_Herzegovina_national_under-18_football_team ;
         dbo:player ?person ;
         dbo:coach ?person .
  
  # Involvement with Croatia national under-21 football team
  ?team2 dbr:Croatia_national_under-21_football_team ;
         dbo:player ?person ;
         dbo:coach ?person .

  # Person associated with someone born on Pavel Vezhinov's death date
  ?relatedPerson dbp:birthday ""2013-02-27""^^xsd:date .
  ?person dbo:team ?relatedTeam .
  ?relatedTeam dbo:player ?relatedPerson ;
              dbo:coach ?relatedPerson .
}
```",7,13,8,3,3,3,3,71,0,0,1,0,0.0,0
281,27,test,"Give me the awardee of the award of Alfred Warden and commander in New Guinea campaign and awardee of the award, that is a military conflict, of Lawrence Moore Cosgrave.",SELECT ?result WHERE { <http://dbpedia.org/resource/Alfred_Warden> <http://dbpedia.org/property/awards> ?v0 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. <http://dbpedia.org/resource/Lawrence_Moore_Cosgrave> <http://dbpedia.org/property/awards> ?v3 . ?result <http://dbpedia.org/property/awards> ?v3 . <http://dbpedia.org/resource/New_Guinea_campaign> <http://dbpedia.org/ontology/commander> ?result . ?result <http://dbpedia.org/property/awards> ?v0 . },"```sparql
# Query for the awardee of the Alfred Warden Award associated with a commander in the New Guinea campaign
SELECT ?awardee WHERE {
  ?award dcterms:title ""Alfred Warden Medal""@en .
  ?award dbo:recipient ?person .
  ?person dbo:occupation ""Military personnel""@en .
  ?person dbo:wikiPageWikiLink ?campaign .
  ?campaign rdfs:label ""New Guinea campaign""@en .
}

UNION

# Query for the awardee of the Lawrence Moore Cosgrave Award associated with a military conflict
SELECT ?awardee WHERE {
  ?award dcterms:title ""Lawrence Moore Cosgrave Medal""@en .
  ?award dbo:recipient ?person .
  ?person dbo:occupation ""Military personnel""@en .
  ?person dbo:wikiPageWikiLink ?conflict .
  ?conflict rdfs:label ?conflictLabel .
  FILTER(CONTAINS(LCASE(?conflictLabel), ""military conflict""))
}
```",5,6,6,2,3,2,3,28,0,0,1,0,0.0,0
236,19,test,"Give me the party member of the administration of the reference, that is an office holder and a politician, to James Madison and party member of the administration, that is an organisation, of John Adams.","SELECT ?result WHERE { ?v4 <http://dbpedia.org/property/leader> ?v0 . ?v2 <http://dbpedia.org/property/leader> <http://dbpedia.org/resource/John_Adams> . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v0 <http://xmlns.com/foaf/0.1/name> ""James Madison""@en . ?result <http://dbpedia.org/ontology/party> ?v2 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?result <http://dbpedia.org/ontology/party> ?v4 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. }","```sparql
# Query to find the political party of James Madison
SELECT ?party WHERE {
  wd:Q937 ?p ?o .
  ?o wdt:P102 ?party .
  FILTER (strstarts(str(?party), ""Q""))
}

UNION

# Query to find the political party or organization associated with John Adams
SELECT ?organization WHERE {
  wd:Q424 ?p ?o .
  ?o wdt:P102 ?party .
  FILTER (strstarts(str(?party), ""Q"")) .
}
```",5,8,6,3,2,3,2,20,0,0,19,0,0.0,0
826,59,test,"Give me the successor of the child, that is a royalty, of the reference, that is a royalty, to Louis I and spouse of the child of the father of Anna Magdalena Appel.","SELECT ?result WHERE { ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v0 <http://xmlns.com/foaf/0.1/name> ""Louis I""@en . ?v0 <http://dbpedia.org/ontology/child> ?v5 . ?v5 <http://dbpedia.org/ontology/successor> ?result . <http://dbpedia.org/resource/Anna_Magdalena_Appel> <http://dbpedia.org/property/father> ?v3 . ?v2 <http://dbpedia.org/ontology/spouse> ?result . ?v2 <http://dbpedia.org/property/father> ?v3 . }","```sparql
SELECT ?successor WHERE {
  wd:Q1204 wdt:P26 ?spouse . # Louis I, Grand Duke of Hesse and his spouse
  ?spouse wdt:P31 wd:Q388 .   # Princess Wilhelmine of Baden (royalty)
  ?princessAlice wdt:P25 ?spouse . # Child of Princess Wilhelmine
  ?princessAlice wdt:P31 wd:Q388 . # Princess Alice is royalty
  ?alexandraFeodorovna wdt:P25 ?princessAlice . # Alexandra Feodorovna, child of Princess Alice
  ?alexandraFeodorovna wdt:P39 wd:Q1204 . # Empress consort of Russia (Alexandra)
  ?mariaFeodorovna wdt:P39 wd:Q1204 . # Maria Feodorovna as Empress consort of Russia
  FILTER(?mariaFeodorovna != ?alexandraFeodorovna) .
  ?mariaFeodorovna wdt:P31 wd:Q388 . # Maria Feodorovna is royalty
}
```",6,8,7,3,2,3,3,71,0,0,1,0,0.0,0
170,26,test,Give me the entity in the work of International Energy Agency and birth place of Era Ziganshina and domain of the profession of John Scholey.,SELECT ?result WHERE { <http://dbpedia.org/resource/John_Scholey> <http://dbpedia.org/property/occupation> ?v1 . ?result <http://dbpedia.org/ontology/country> ?v2 . ?result <http://dbpedia.org/ontology/leaderTitle> ?v1 . ?v2 <http://dbpedia.org/property/author> <http://dbpedia.org/resource/International_Energy_Agency> . <http://dbpedia.org/resource/Era_Ziganshina> <http://dbpedia.org/ontology/birthPlace> ?result . },"```sparql
# Query for an entity associated with the International Energy Agency
SELECT ?entity WHERE {
  ?entity wdt:P31 wd:Q4835011 ; # Instance of Organization
          wdt:P463 wd:Q111991 . # Part of IEA
}

UNION

# Query for the birthplace of Era Ziganshina
SELECT ?birthPlace WHERE {
  wd:Q1234567 dbo:birthPlace ?birthPlace . # Replace Q1234567 with Era Ziganshina's DBpedia ID
}

UNION

# Query for the domain of John Scholey's profession
SELECT ?domain WHERE {
  wd:Q2345678 dbo:occupation ?occupation .
  ?occupation dbo:fieldOfStudy ?domain .
} 
```

Note: Replace `wd:Q1234567` with Era Ziganshina's actual DBpedia ID and `wd:Q2345678` with John Scholey's DBpedia ID. These IDs need to be looked up in the DBpedia database.",5,5,6,2,3,2,3,28,0,0,1,0,0.0,0
456,65,test,"Give me the spouse of the actor of Pacific Drive and professional in the alter ego of the reference, that is a fictional character, to Lamont Cranston (radio, film and television) and band of the band, that is a musical artist, of Dean Brody.","SELECT ?result WHERE { ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. <http://dbpedia.org/resource/Dean_Brody> <http://dbpedia.org/ontology/associatedMusicalArtist> ?v3 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/FictionalCharacter>. ?result <http://dbpedia.org/property/occupation> ?v6 . ?v0 <http://xmlns.com/foaf/0.1/name> ""Lamont Cranston (radio, film and television)""@en . ?v3 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v0 <http://dbpedia.org/property/alterEgo> ?v6 . ?v4 <http://dbpedia.org/ontology/spouse> ?result . <http://dbpedia.org/resource/Pacific_Drive> <http://dbpedia.org/property/starring> ?v4 . }","```sparql
# Step 1: Find the actor associated with ""Pacific Drive""
SELECT ?actor WHERE {
  ?movie dbo:title ""Pacific Drive""@en .
  ?movie dbo:starring ?actor .
}

# Step 2: Check if this actor has portrayed Lamont Cranston (The Shadow)
SELECT DISTINCT ?actor WHERE {
  VALUES ?character { <http://dbpedia.org/resource/The_Shadow> }
  ?actor dbo:portrayedCharacter ?character .
  
  # Join with the result from step 1
  ?movie dbo:title ""Pacific Drive""@en .
  ?movie dbo:starring ?actor .
}

# Step 3: Find the spouse of this actor
SELECT DISTINCT ?spouse WHERE {
  ?actor dbo:spouse ?spouse .
  
  # Ensure the actor is the one from steps 1 and 2
  VALUES ?character { <http://dbpedia.org/resource/The_Shadow> }
  ?actor dbo:portrayedCharacter ?character .
  ?movie dbo:title ""Pacific Drive""@en .
  ?movie dbo:starring ?actor .
}

# Step 4: Check if this spouse is a member of Dean Brody's band
SELECT DISTINCT ?spouse WHERE {
  ?band dbo:member ?spouse .
  ?band dbo:associatedBand <http://dbpedia.org/resource/Dean_Brody> .

  # Ensure the spouse is from step 3
  ?actor dbo:spouse ?spouse .
  VALUES ?character { <http://dbpedia.org/resource/The_Shadow> }
  ?actor dbo:portrayedCharacter ?character .
  ?movie dbo:title ""Pacific Drive""@en .
  ?movie dbo:starring ?actor .
}
```",7,9,8,3,3,3,3,71,0,0,1,0,0.0,0
791,63,test,"Give me the spouse of the spouse, that is a royalty, of the reference to Emperor Takakura and father of the child, that is a royalty, of Emperor Takakura and predecessor of the child of Emperor Takakura.","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/spouse> ?v3 . ?v2 <http://dbpedia.org/property/father> ?result . ?result <http://dbpedia.org/ontology/successor> ?v6 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v2 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Emperor_Takakura> . ?v6 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Emperor_Takakura> . ?v4 <http://xmlns.com/foaf/0.1/name> ""Emperor Takakura""@en . ?v3 <http://dbpedia.org/ontology/spouse> ?v4 . }","```sparql
SELECT ?result WHERE {
  # Step 1: Identify Emperor Takakura
  ?emperor rdfs:label ""Emperor Takakura""@en .
  
  # Step 2: Find his spouse
  ?emperor dbo:spouse ?spouse .

  # Step 3: Spouse's spouse who is royalty
  ?spouse dbo:spouse ?royalSpouse .
  ?royalSpouse rdf:type dbo:Monarch .

  # Step 4: Child of Emperor Takakura who is royalty
  ?emperor dbo:child ?royalChild .
  ?royalChild rdf:type dbo:Monarch .

  # Step 5: Predecessor of this royal child
  ?royalChild dbo:predecessor ?result .
}
```",7,9,8,3,3,3,3,71,0,0,1,0,0.0,0
417,63,test,"Give me the child of the father of Frederick IX of Denmark and spouse of the parent, that is a royalty, of the child of Knud, Hereditary Prince of Denmark and child of the child, that is a royalty, of Frederick Francis III, Grand Duke of Mecklenburg-Schwerin.","SELECT ?result WHERE { <http://dbpedia.org/resource/Frederick_IX_of_Denmark> <http://dbpedia.org/property/father> ?v6 . ?result <http://dbpedia.org/property/father> ?v6 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?result <http://dbpedia.org/ontology/parent> ?v2 . ?v4 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Knud,_Hereditary_Prince_of_Denmark> . ?v2 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Frederick_Francis_III,_Grand_Duke_of_Mecklenburg-Schwerin> . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v3 <http://dbpedia.org/ontology/child> ?v4 . ?result <http://dbpedia.org/ontology/spouse> ?v3 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?person WHERE {
  # Frederick IX's father
  dbr:Fredrik_IX_of_Denmark dbo:father dbr:Christian_X_of_Denmark .
  
  # Christian X's spouse
  dbr:Christian_X_of_Denmark dbo:spouse dbr:Alexandrine_of_Mecklenburg-Schwerin .

  # Knud, Hereditary Prince of Denmark's child
  dbr:Knud,_Hereditary_Prince_of_Denmark dbo:child ?margretheII .
  
  # Princess Cecilie's child
  dbr:Cecilie_of_Mecklenburg-Schwerin dbo:child ?margretheII .

  # Check if the person is a royalty and fits all criteria
  ?person dbo:spouse dbr:Alexandrine_of_Mecklenburg-Schwerin .
  ?person dbo:parent ?margretheII .
  FILTER (STRSTARTS(STR(?person), ""http://dbpedia.org/resource/Queen_Margrethe_II_of_Denmark""))
}
```",7,9,8,3,3,3,3,71,0,0,1,0,0.0,0
124,63,test,"Give me the commander in the war, that is a societal event and a military conflict, of the reference, that is Australian and an organisation and a military unit, to 'A' Battery, Royal Australian Artillery and military force of the war, that is an event and a military conflict and a societal event, of Frank Rhodes (British Army officer) and military force of the force, that is a societal event and a military conflict, of Herbert Kitchener, 1st Earl Kitchener.","SELECT ?result WHERE { ?v4 <http://xmlns.com/foaf/0.1/name> ""'A' Battery, Royal Australian Artillery""@en . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryUnit>. ?result <http://dbpedia.org/ontology/battle> ?v6 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?v6 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. <http://dbpedia.org/resource/Frank_Rhodes_(British_Army_officer)> <http://dbpedia.org/ontology/battle> ?v6 . ?v4 <http://dbpedia.org/ontology/battle> ?v3 . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?v3 <http://dbpedia.org/ontology/commander> ?result . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v6 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v2 <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Herbert_Kitchener,_1st_Earl_Kitchener> . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v6 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?v4 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Australia>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?result <http://dbpedia.org/ontology/battle> ?v2 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?commander WHERE {
  # Identify the military conflict associated with Frank Rhodes and Herbert Kitchener
  ?war dbo:participatedInMilitaryConflict dbr:Frank_Rhodes .
  ?war dbo:participatedInMilitaryConflict dbr:Herbert_Kitchener_1st_Earl_Kitchener .

  # Find the organization (Royal Australian Artillery) involved in this war
  ?organization dbo:participatedInMilitaryConflict ?war ;
                rdfs:label ""Royal Australian Artillery""@en .
  
  # Identify A Battery within the Royal Australian Artillery
  ?battery dbo:partOfOrganization ?organization ;
           rdfs:label ""A Battery, Royal Australian Artillery""@en .

  # Find the commander of A Battery during the Boer War
  ?commander dbo:commanded ?battery .
}
```",7,17,8,3,3,3,3,71,0,0,9,0,0.0,0
456,62,test,"Give me the band of Alan Doyle and professional in the alter ego of the reference, that is a fictional character, to Lamont Cranston (radio, film and television) and spouse of the actor of the movie, that is a work and a television show, with Ross Newton.","SELECT ?result WHERE { ?v4 <http://dbpedia.org/property/starring> <http://dbpedia.org/resource/Ross_Newton> . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?v0 <http://xmlns.com/foaf/0.1/name> ""Lamont Cranston (radio, film and television)""@en . ?result <http://dbpedia.org/property/occupation> ?v6 . ?v3 <http://dbpedia.org/ontology/spouse> ?result . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/FictionalCharacter>. ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/TelevisionShow>. <http://dbpedia.org/resource/Alan_Doyle> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v0 <http://dbpedia.org/property/alterEgo> ?v6 . ?v4 <http://dbpedia.org/property/starring> ?v3 . }","```sparql
# Query to find Alan Doyle's band
SELECT ?band WHERE {
  wd:Q1234567 dbo:musicArtist ?band .
}

# Query to find the alter ego of Lamont Cranston
SELECT ?alterEgo WHERE {
  wd:Q7890123 rdfs:label ""Lamont Cranston""@en .
  ?entity dbo:aliasName ?alterEgo .
  FILTER(CONTAINS(LCASE(?alterEgo), ""the shadow""))
}

# Query to find Ross Newton's spouse in the movie and TV show
SELECT ?spouse WHERE {
  wd:Q3456789 dbo:actorInFilmOrTVShow ?work .
  ?work dbo:characterName ""Margo Lane""@en .
  ?work dbo:castMember ?spouse .
  FILTER(CONTAINS(LCASE(?spouse), ""ross newton""))
}
```

Note: The above SPARQL queries are illustrative. The actual DBpedia IDs (e.g., `wd:Q1234567`, `wd:Q7890123`, `wd:Q3456789`) need to be replaced with the correct identifiers for Alan Doyle, Lamont Cranston, and Ross Newton respectively.",7,10,8,3,3,3,3,71,0,0,1,0,0.0,0
417,68,test,"Give me the spouse of the parent, that is a royalty, of the child of Knud, Hereditary Prince of Denmark and child of the child, that is a royalty, of Frederick Francis III, Grand Duke of Mecklenburg-Schwerin and child of the father of the leader, that is a royalty, of Colony of Greenland.","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/spouse> ?v4 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?result <http://dbpedia.org/ontology/parent> ?v3 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?result <http://dbpedia.org/property/father> ?v7 . ?v5 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Knud,_Hereditary_Prince_of_Denmark> . ?v4 <http://dbpedia.org/ontology/child> ?v5 . <http://dbpedia.org/resource/Colony_of_Greenland> <http://dbpedia.org/property/leader> ?v0 . ?v3 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Frederick_Francis_III,_Grand_Duke_of_Mecklenburg-Schwerin> . ?v0 <http://dbpedia.org/property/father> ?v7 . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. }","```sparql
SELECT ?spouse WHERE {
  # Step 1: Find Knud's child who is royalty
  ?knudsChild dbo:childOf dbr:Knud,_Hereditary_Prince_of_Denmark ;
             rdf:type dbo:RoyalFamilyMember .

  # Step 2: Identify the parent of that child (who must be royalty)
  ?parent dbo:spouse ?knudsChildParent ;
          rdf:type dbo:RoyalFamilyMember .

  # Step 3: Find Frederick Francis III's grandchild who is royalty
  ?frederickChild dbo:childOf dbr:Frederick_Francis_III,_Grand_Duke_of_Mecklenburg-Schwerin ;
                  rdf:type dbo:RoyalFamilyMember .
  
  ?grandchild dbo:childOf ?frederickChild .

  # Step 4: Identify the leader of Colony of Greenland and their father
  ?greenlandLeader dbo:leader dbr:Colony_of_Greenland ;
                   rdf:type dbo:RoyalFamilyMember .
  
  ?father dbo:spouse ?greenlandLeaderParent .

  # Step 5: Connect these relationships
  FILTER(?parent = ?grandchild)

  # Step 6: Find the spouse of the identified royalty
  ?identifiedRoyalty dbo:spouse ?spouse .
  FILTER(?identifiedRoyalty = ?knudsChild)
}
```",8,11,9,3,3,3,3,71,0,0,1,0,0.0,0
839,65,test,"Give me the band of the person born, that is a musical artist, as Kevin Richard Russell and band of the member of the band, that is a band and a group, of Peter Schorowsky and band of the band, that is a musical artist, of Charlie Huhn.","SELECT ?result WHERE { ?v4 <http://dbpedia.org/property/birthName> ""Kevin Richard Russell""@en . ?result <http://dbpedia.org/ontology/bandMember> ?v6 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Group>. ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. <http://dbpedia.org/resource/Charlie_Huhn> <http://dbpedia.org/ontology/associatedMusicalArtist> ?v3 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?v0 <http://dbpedia.org/ontology/bandMember> ?v6 . ?result <http://dbpedia.org/ontology/bandMember> ?v3 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Band>. <http://dbpedia.org/resource/Peter_Schorowsky> <http://dbpedia.org/ontology/associatedMusicalArtist> ?v0 . ?v4 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . }","```sparql
SELECT DISTINCT ?bandKevin ?bandPeter ?bandCharlie WHERE {
  # Kevin Richard Russell's band
  ?personKevin dbr:Kevin_Russell .
  ?personKevin dbo:memberOfBand ?bandKevin .

  # Peter Schorowsky (Peter Baltes) and his band
  ?personPeter dbr:Peter_Baltes .
  ?personPeter dbo:memberOf ?bandPeter .
  ?bandPeter a dbo:MusicalGroup ;
             rdfs:label ?bandLabelPeter .
  FILTER(CONTAINS(LCASE(?bandLabelPeter), ""accept""))

  # Charlie Huhn's band
  ?personCharlie dbr:Charlie_Huhn .
  ?personCharlie dbo:memberOfBand ?bandCharlie .
  ?bandCharlie a dbo:MusicalArtist ;
               rdfs:label ?bandLabelCharlie .
  FILTER(CONTAINS(LCASE(?bandLabelCharlie), ""uriah heep""))
}
```",7,11,8,3,3,3,3,71,0,0,1,0,0.0,0
124,65,test,"Give me the military force of the force, that is a societal event and a military conflict, of Herbert Kitchener, 1st Earl Kitchener and commander in the war, that is a societal event and a military conflict, of A Field Battery, Royal Australian Artillery and military force of the war, that is an event and a military conflict and a societal event, of the awardee of British South Africa Company Medal.","SELECT ?result WHERE { ?v4 <http://dbpedia.org/ontology/commander> ?result . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v3 <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Herbert_Kitchener,_1st_Earl_Kitchener> . ?result <http://dbpedia.org/ontology/battle> ?v3 . ?v6 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?v6 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?v0 <http://dbpedia.org/ontology/battle> ?v6 . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?result <http://dbpedia.org/ontology/battle> ?v6 . <http://dbpedia.org/resource/A_Field_Battery,_Royal_Australian_Artillery> <http://dbpedia.org/ontology/battle> ?v4 . ?v6 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v0 <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/British_South_Africa_Company_Medal> . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?event WHERE {
  ?event a dbo:MilitaryConflict ;
         dbo:participatingMilitaryUnit dbr:A_Field_Battery,_Royal_Australian_Artillery ;
         dbo:commander dbr:Herbert_Kitchener .
  
  OPTIONAL { 
    ?medal dbo:awardedFor ?event .
    ?medal rdfs:label ""British South Africa Company Medal""@en .
  }
}
```",7,14,8,3,3,3,3,71,0,0,9,0,0.0,0
715,58,test,"Give me the commander in the force of Francisco Largo Caballero and commander in Rif War and leader of the office, that is a government agency and an organisation, of the reference to Carlos Franco Iribarnegaray.","SELECT ?result WHERE { ?v5 <http://dbpedia.org/ontology/commander> ?result . ?v1 <http://xmlns.com/foaf/0.1/name> ""Carlos Franco Iribarnegaray""@en . <http://dbpedia.org/resource/Rif_War> <http://dbpedia.org/ontology/commander> ?result . ?v1 <http://dbpedia.org/property/office> ?v2 . ?v5 <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Francisco_Largo_Caballero> . ?v2 <http://dbpedia.org/ontology/leader> ?result . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/GovernmentAgency>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?person ?role1 ?role2 ?organizationLeader WHERE {
  # Francisco Largo Caballero's commander
  ?person dbo:commanderOf ?force .
  ?force dbo:leader dbr:Franco_Largo_Caballero .

  # Commander in the Rif War
  OPTIONAL { 
    ?person dbo:participatedInMilitaryConflict ?rifWar .
    ?rifWar rdfs:label ""Rif War""@en .
  }

  # Leader of an organization related to Carlos Franco Iribarnegaray
  OPTIONAL {
    ?organizationLeader dbo:leader ?person .
    ?organization dbo:relatedTo dbr:Carlos_Franco_Iribarnegaray .
    ?organizationLeader dbo:worksFor ?organization .
  }
  
  # Return the person and their roles
  BIND(""Commander under Francisco Largo Caballero"" AS ?role1)
  BIND(""Commander in Rif War"" AS ?role2)
}
```",6,8,7,3,3,3,3,71,0,0,1,0,0.0,0
212,9,test,"Give me the birthplace of the professional, that is a musical artist and an artist, in Singer, rapper, CEO, Facilities and Project Manager and birthplace of the professional in .","SELECT ?result WHERE { ?v3 <http://dbpedia.org/ontology/birthPlace> ?result . ?v1 <http://dbpedia.org/ontology/birthPlace> ?result . ?v3 <http://dbpedia.org/property/occupation> """"@en . ?v1 <http://dbpedia.org/property/occupation> ""Singer, rapper, CEO, Facilities and Project Manager""@en . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?person ?birthPlace WHERE {
  ?person a dbo:MusicalArtist .
  ?person a dbo:Artist .
  ?person a dbo:CEO .
  ?person a dbo:FacilitiesAndProjectManager .
  ?person dbo:birthPlace ?birthPlace .
}
```",4,6,5,2,2,2,2,9,0,0,1,0,0.0,0
791,66,test,"Give me the spouse of the spouse, that is a royalty, of Emperor Takakura and predecessor of the child of Emperor Takakura and father of the child, that is a royalty, of the father, that is a royalty and an office holder, of Emperor Antoku.",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/successor> ?v6 . <http://dbpedia.org/resource/Emperor_Antoku> <http://dbpedia.org/property/father> ?v1 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v6 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Emperor_Takakura> . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v3 <http://dbpedia.org/ontology/spouse> <http://dbpedia.org/resource/Emperor_Takakura> . ?result <http://dbpedia.org/ontology/spouse> ?v3 . ?v2 <http://dbpedia.org/property/father> ?v1 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v2 <http://dbpedia.org/property/father> ?result . },"```sparql
SELECT ?spouse WHERE {
  # Emperor Takakura and his predecessor
  wd:Q123456 wdt:P26* wd:Q789012 . # Emperor Takakura's predecessor (Emperor Go-Shirakawa)
  
  # Taira no Kiyomori as spouse of Emperor Takakura's child's father
  wd:Q123456 wdt:P26 wd:Q345678 . # Emperor Takakura has a child with Taira no Kiyomori
  
  # Taira no Kiyomori is the father of Antoku
  wd:Q987654 wdt:P22 wd:Q345678 . # Antoku's father is Taira no Kiyomori

  # Spouse of Taira no Kiyomori
  wd:Q345678 wdt:P26 ?spouse .
}
```

Note: Replace `wd:Q123456`, `wd:Q789012`, `wd:Q345678`, and `wd:Q987654` with the actual DBpedia identifiers for Emperor Takakura, his predecessor (Emperor Go-Shirakawa), Taira no Kiyomori, and Antoku respectively.",7,11,8,3,3,3,3,71,0,0,1,0,0.0,0
507,69,test,"Give me the professional in the profession of the person born on 1966-02-18 and spouse of the person born as the birth name of Anne V. Coates and director of the movie, that is a movie and a work, with Beryl Reid.","SELECT ?result WHERE { ?result <http://dbpedia.org/property/occupation> ?v2 . ?v1 <http://dbpedia.org/ontology/birthDate> ""1966-02-18""^^<http://www.w3.org/2001/XMLSchema#date> . ?v1 <http://dbpedia.org/property/occupation> ?v2 . <http://dbpedia.org/resource/Anne_V._Coates> <http://dbpedia.org/property/birthName> ?v4 . ?v7 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?v7 <http://dbpedia.org/property/starring> <http://dbpedia.org/resource/Beryl_Reid> . ?v7 <http://dbpedia.org/ontology/director> ?result . ?result <http://dbpedia.org/ontology/spouse> ?v3 . ?v3 <http://dbpedia.org/property/birthName> ?v4 . ?v7 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Film>. }","```sparql
# Step 1: Get Anne V. Coates' birth name
SELECT ?birthName WHERE {
  dbpedia:Anne_V._Coates dbo:birthName ?birthName .
}

# Step 2: Find her spouse using the birth name
SELECT ?spouse WHERE {
  ?person foaf:name ?birthName ;
          dbo:spouse ?spouse .
  FILTER(?birthName = ""Anne V. Coates"") # Replace with actual birth name from step 1
}

# Step 3: Identify the person born on 1966-02-18 and their profession
SELECT ?person ?profession WHERE {
  ?person dbo:birthDate ""1966-02-18""^^xsd:date ;
          dbo:occupation ?profession .
}

# Step 4: Find a movie directed by this person with Beryl Reid
SELECT ?movie WHERE {
  ?director dbo:directed ?movie .
  ?movie dbo:starring ?actor .
  ?actor foaf:name ""Beryl Reid"" .
  FILTER(?director = ?person) # Replace ?person from step 3
}

# Step 5: Determine the profession of the spouse identified in step 2
SELECT ?spouseProfession WHERE {
  ?spouse dbo:occupation ?spouseProfession .
}
```",8,10,9,3,3,3,3,71,0,0,1,0,0.0,0
417,62,test,"Give me the child of Alexandrine of Mecklenburg-Schwerin and spouse of the parent, that is a royalty, of the child of Knud, Hereditary Prince of Denmark and child of the father of the leader, that is a royalty, of Colony of Greenland.","SELECT ?result WHERE { ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. <http://dbpedia.org/resource/Colony_of_Greenland> <http://dbpedia.org/property/leader> ?v0 . ?result <http://dbpedia.org/property/father> ?v6 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?result <http://dbpedia.org/ontology/spouse> ?v3 . ?v4 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Knud,_Hereditary_Prince_of_Denmark> . ?result <http://dbpedia.org/ontology/parent> <http://dbpedia.org/resource/Alexandrine_of_Mecklenburg-Schwerin> . ?v3 <http://dbpedia.org/ontology/child> ?v4 . ?v0 <http://dbpedia.org/property/father> ?v6 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?person WHERE {
  # Alexandrine of Mecklenburg-Schwerin's child
  ?child dbo:parent dbr:Aleksandra_of_Mecklenburg-Schwerin .
  
  # Spouse of Alexandrine (her husband)
  ?spouse dbp:spouse dbr:Aleksandra_of_Mecklenburg-Schwerin .

  # Knud, Hereditary Prince of Denmark's child
  ?knudChild dbo:parent dbr:Knud_Hereditary_Prince_of_Denmark .

  # Leader of Colony of Greenland and their father
  ?leader dbp:position ""Governor of Greenland""@en .
  ?father dbo:child ?leader .

  # Find the person who is a royalty, child of Alexandrine's spouse, and parent of Knud's child
  ?person dbo:spouse ?spouse ;
          dbo:parent ?knudChild ;
          rdf:type dbo:Monarch .
}
```",7,9,8,3,3,3,3,71,0,0,1,0,0.0,0
926,59,test,Give me the father of the father of the spouse of Neşerek Kadın and successor of the child of the spouse of Şermi Kadın.,SELECT ?result WHERE { ?v4 <http://dbpedia.org/ontology/successor> ?result . ?v1 <http://dbpedia.org/property/father> ?result . ?v4 <http://dbpedia.org/property/father> ?v0 . <http://dbpedia.org/resource/Neşerek_Kadın> <http://dbpedia.org/ontology/spouse> ?v3 . ?v3 <http://dbpedia.org/property/father> ?v1 . ?v0 <http://dbpedia.org/ontology/spouse> <http://dbpedia.org/resource/Şermi_Kadın> . },"```sparql
SELECT ?finalAnswer WHERE {
  # Step 1: Find Neşerek Kadın's spouse
  ?neşerek dbp:spouse ?nesereksSpouse .

  # Step 2: Find the father of Neşerek Kadın's spouse
  ?nesereksSpouse dbo:father ?nesereksFather .
  
  # Step 3: Find Şermi Kadın's spouse
  ?sermi dbp:spouse ?sermisSpouse .

  # Step 4: Find the child of Şermi Kadın's spouse
  ?sermisSpouse dbo:child ?sermisChild .

  # Step 5: Find the successor of the child of Şermi Kadın's spouse
  ?sermisChild dbo:succesor ?successorOfSermisChild .

  # Step 6: Find the father of the successor
  ?successorOfSermisChild dbo:father ?successorsFather .

  # Step 7: Combine results to find the final answer
  ?nesereksFather dbp:father ?finalAnswer .
}
```",6,6,7,3,2,3,3,71,0,0,1,0,0.0,0
36,27,test,Give me the actor of Being Mrs Elliot and person born in the birth year of Deanne Bray and person born as the birth name of Ayo Makun.,SELECT ?result WHERE { ?result <http://dbpedia.org/property/birthName> ?v1 . <http://dbpedia.org/resource/Deanne_Bray> <http://dbpedia.org/ontology/birthYear> ?v2 . <http://dbpedia.org/resource/Being_Mrs_Elliot> <http://dbpedia.org/ontology/starring> ?result . <http://dbpedia.org/resource/Ayo_Makun> <http://dbpedia.org/property/birthName> ?v1 . ?result <http://dbpedia.org/ontology/birthYear> ?v2 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?actor WHERE {
  # Find the actor of ""Being Mrs Elliot""
  ?show dbo:title ""Being Mrs Elliot""@en .
  ?show dbo:starring ?actor .

  UNION

  # Check if the actor was born in the same year as Deanne Bray
  ?actor dbo:birthYear ?year .
  {
    SELECT DISTINCT ?deanneBirthYear WHERE {
      dbr:Deanne_Bray dbo:birthYear ?deanneBirthYear .
    }
  } FILTER (?year = ?deanneBirthYear)

  UNION

  # Check if the actor's birth name is the same as Ayo Makun's
  ?actor dbo:birthName ?birthName .
  {
    SELECT DISTINCT ?ayoBirthName WHERE {
      dbr:Ayo_Makun dbo:birthName ?ayoBirthName .
    }
  } FILTER (?birthName = ?ayoBirthName)
}
```",5,5,6,2,3,2,3,28,0,0,1,0,0.0,0
926,60,test,"Give me the child of the father, that is a royalty, of the parent, that is a royalty, of Beyhan Sultan (daughter of Mustafa III) and father of the father of the spouse of Neşerek Kadın.",SELECT ?result WHERE { ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. <http://dbpedia.org/resource/Neşerek_Kadın> <http://dbpedia.org/ontology/spouse> ?v4 . ?v5 <http://dbpedia.org/property/father> ?v0 . <http://dbpedia.org/resource/Beyhan_Sultan_(daughter_of_Mustafa_III)> <http://dbpedia.org/ontology/parent> ?v5 . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v0 <http://dbpedia.org/ontology/child> ?result . ?v2 <http://dbpedia.org/property/father> ?result . ?v4 <http://dbpedia.org/property/father> ?v2 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?child WHERE {
  # Beyhan Sultan's parent
  dbr:Beyhan_Sultan dbo:parent dbr:Mustafa_III .

  # Neşerek Kadın's spouse and his father
  ?spouse dbo:spouse dbr:Neşerek_Kadın .
  ?father dbo:child ?spouse .
  
  # Mustafa III's child who is royalty
  dbr:Mustafa_III dbo:child ?child .
  ?child a dbo:Monarch .

  # Ensure the child matches the lineage criteria
  FILTER(?child = ?father)
}
```",6,8,7,3,2,3,3,71,0,0,1,0,0.0,0
124,56,test,"Give me the military force of Battle of Tamai and military force of the force, that is a societal event and a military conflict, of the person born on 1850-06-24 and commander in the war, that is a societal event and a military conflict, of A Field Battery, Royal Australian Artillery.","SELECT ?result WHERE { <http://dbpedia.org/resource/A_Field_Battery,_Royal_Australian_Artillery> <http://dbpedia.org/ontology/battle> ?v2 . ?result <http://dbpedia.org/ontology/battle> ?v1 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v0 <http://dbpedia.org/ontology/birthDate> ""1850-06-24""^^<http://www.w3.org/2001/XMLSchema#date> . ?v1 <http://dbpedia.org/ontology/commander> ?v0 . ?result <http://dbpedia.org/ontology/battle> <http://dbpedia.org/resource/Battle_of_Tamai> . ?v2 <http://dbpedia.org/ontology/commander> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. }","```sparql
# Query for military forces involved in the Battle of Tamai
SELECT ?force WHERE {
  ?battle dbo:wikiPageRedirects db:Battle_of_Tamai .
  ?battle dbo:militaryConflicts ?conflict .
  ?conflict dbo:participatingMilitaryPersonal ?person .
  ?person dbo:rank ?force .
}

# Query for the person born on 1850-06-24 and their command in a war
SELECT ?person ?war WHERE {
  ?person dbo:birthday ""1850-06-24""^^xsd:date ;
          dbo:militaryCommanderOf ?command .
  ?command dbo:wikiPageRedirects ?war .
  FILTER EXISTS { ?war rdf:type dbo:MilitaryConflict }
}

# Query for the war involving A Field Battery, Royal Australian Artillery and its commanders
SELECT ?battery ?war WHERE {
  db:A_Field_Battery,_Royal_Australian_Artillery dbo:militaryConflicts ?conflict .
  ?conflict dbo:wikiPageRedirects ?war .
  FILTER EXISTS { ?war rdf:type dbo:MilitaryConflict }
}
```",6,10,7,3,3,3,3,71,0,0,1,0,0.0,0
874,20,test,"Give me the band of the band member of the band, that is an organisation, of Mark Read (singer) and band of the writer, that is an artist and a musical artist, of the work, that is a work, of Horace Andy.",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/bandMember> ?v5 . ?v1 <http://dbpedia.org/property/writer> <http://dbpedia.org/resource/Horace_Andy> . ?result <http://dbpedia.org/ontology/bandMember> ?v2 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?v4 <http://dbpedia.org/ontology/bandMember> <http://dbpedia.org/resource/Mark_Read_(singer)> . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?v1 <http://dbpedia.org/property/writer> ?v2 . ?v5 <http://dbpedia.org/ontology/associatedMusicalArtist> ?v4 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. },"```sparql
# Step 1: Find Mark Read's band and check if it is an organization
SELECT ?band WHERE {
  ?person dbo:birthName ""Mark Read""@en .
  ?person dbo:memberOfBand ?band .
  FILTER EXISTS { ?band a dbo:Organization . }
}

# Step 2: Find a work by Horace Andy and identify its writer
SELECT ?work ?writer WHERE {
  ?work dbo:composerHoraceAndy true .
  ?work dbo:author ?writer .
}

# Step 3: Check if the writer is both an artist and a musical artist
SELECT ?band WHERE {
  ?writer (dbo:occupation) { dbo:Artist ; dbo:MusicalArtist } .
  ?writer dbo:memberOfBand ?band .
}
```",6,10,7,3,2,3,2,20,0,0,1,0,0.0,0
124,60,test,"Give me the commander in the war, that is a societal event and a military conflict, of the reference, that is Australian and an organisation and a military unit, to 'A' Battery, Royal Australian Artillery and military force of the force, that is a societal event and a military conflict, of the person born on 1850-06-24.","SELECT ?result WHERE { ?v0 <http://dbpedia.org/ontology/birthDate> ""1850-06-24""^^<http://www.w3.org/2001/XMLSchema#date> . ?result <http://dbpedia.org/ontology/battle> ?v1 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?v3 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Australia>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?v1 <http://dbpedia.org/ontology/commander> ?v0 . ?v2 <http://dbpedia.org/ontology/commander> ?result . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?v3 <http://dbpedia.org/ontology/battle> ?v2 . ?v3 <http://xmlns.com/foaf/0.1/name> ""'A' Battery, Royal Australian Artillery""@en . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryUnit>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?commander WHERE {
  # Step 1: Find the person born on 1850-06-24
  ?person dbo:birthday ""1850-06-24""^^xsd:date .
  
  # Step 2: Identify the military force associated with this person during a societal event and military conflict
  ?event dbo:type dbr:Military_conflict ;
         dbo:participatingOrganisation ?militaryForce .
  ?person dbo:militaryService ?militaryForce .

  # Step 3: Find 'A' Battery, Royal Australian Artillery within this context
  ?unit dbo:name ""A Battery, Royal Australian Artillery"" ;
        dbo:partOf ?militaryForce .

  # Step 4: Determine the commander of the war involving these elements
  ?commander dbo:commanded ?event .
}
```",6,13,7,3,2,3,3,71,0,0,9,0,0.0,0
456,60,test,"Give me the spouse of the actor of the movie, that is a work and a television show, with Ross Newton and band of the band, that is a musical artist, of the band of Alan Doyle.",SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v2 <http://dbpedia.org/ontology/spouse> ?result . ?v0 <http://dbpedia.org/ontology/associatedMusicalArtist> ?v1 . <http://dbpedia.org/resource/Alan_Doyle> <http://dbpedia.org/ontology/associatedMusicalArtist> ?v0 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?v3 <http://dbpedia.org/property/starring> <http://dbpedia.org/resource/Ross_Newton> . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?v3 <http://dbpedia.org/property/starring> ?v2 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/TelevisionShow>. },"```sparql
SELECT ?actor ?spouse WHERE {
  # Step 1: Identify Alan Doyle's band
  dbpedia:Alan_Doyle dbo:musicArtist dbpedia:Great_Big_Sea .
  
  # Step 2: Find a musical artist who is also a band (this step might be implicit in the data)
  
  # Step 3: Determine the work with Ross Newton
  ?work dbo:actor dbpedia:Ross_Newton ;
        rdf:type ?type .
  
  FILTER(?type IN (dbpedia:Film, dbpedia:TelevisionSeries)) .

  # Step 4: Identify an actor from this work
  ?work dbo:actor ?actor .

  # Step 5: Find the spouse of this actor
  OPTIONAL { ?actor dbo:spouse ?spouse . }
}
```",6,9,7,3,2,3,3,71,0,0,1,0,0.0,0
917,61,test,"Give me the child of the father of the spouse, that is a royalty, of Leleiohoku I and child of the father of the child, that is a royalty, of Kamehameha III.",SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. <http://dbpedia.org/resource/Kamehameha_III> <http://dbpedia.org/ontology/child> ?v3 . ?v3 <http://dbpedia.org/property/father> ?v0 . ?result <http://dbpedia.org/ontology/parent> ?v4 . ?result <http://dbpedia.org/property/father> ?v0 . ?v1 <http://dbpedia.org/property/father> ?v4 . ?v1 <http://dbpedia.org/ontology/spouse> <http://dbpedia.org/resource/Leleiohoku_I> . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT DISTINCT ?child1 ?child2 WHERE {
  # Step 1: Identify Leleiohoku I's spouse
  ?leleiohokuI dbo:spouse ?spouse .
  
  # Step 2: Find the father of Leleiohoku I's spouse
  ?spouse dbp:father ?fatherOfSpouse .

  # Step 3: Determine the child of this father that is royalty
  ?child1 dbo:parent ?fatherOfSpouse ;
         a dbo:Monarch .

  # Step 4: Identify Kamehameha III's child that is royalty
  ?kamehamehaIII dbo:child ?royalChild .
  
  # Filter to ensure the child is royalty
  FILTER EXISTS { ?royalChild a dbo:Monarch }

  # Step 5: Find the father of this royal child
  ?royalChild dbp:father ?fatherOfRoyalChild .

  # Step 6: Determine the child of this father that is royalty
  ?child2 dbo:parent ?fatherOfRoyalChild ;
         a dbo:Monarch .
  
  # Ensure we are looking at the same individual in both cases
  FILTER (?child1 = ?child2)
}
```",6,8,7,3,2,3,3,71,0,9,3,0.0,0.0,0
417,65,test,"Give me the child of the father of the leader, that is a royalty, of Colony of Greenland and child of the child, that is a royalty, of Frederick Francis III, Grand Duke of Mecklenburg-Schwerin and spouse of the parent, that is a royalty, of Count Ingolf of Rosenborg.","SELECT ?result WHERE { ?v4 <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Count_Ingolf_of_Rosenborg> . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?result <http://dbpedia.org/ontology/parent> ?v3 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v3 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Frederick_Francis_III,_Grand_Duke_of_Mecklenburg-Schwerin> . <http://dbpedia.org/resource/Colony_of_Greenland> <http://dbpedia.org/property/leader> ?v0 . ?v0 <http://dbpedia.org/property/father> ?v6 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?result <http://dbpedia.org/ontology/spouse> ?v4 . ?result <http://dbpedia.org/property/father> ?v6 . }","```sparql
# Step 1: Identify the leader of the Colony of Greenland
SELECT ?leader WHERE {
  ?colony dcterms:isPartOf dbc:Greenland ;
          dbo:headLeader ?leader .
}

# Step 2: Determine the father of that leader and his child who is royalty
SELECT ?child AS ?royaltyChild WHERE {
  ?leader dbo:father ?father .
  ?father dbo:child ?child .
  ?child rdf:type dbo:Monarch .
}

# Step 3: Identify Frederick Francis III's child who is royalty
SELECT ?frederickChild AS ?royaltyFrederickChild WHERE {
  dbc:Friedrich_Franz_III_of_Mecklenburg-Schwerin dbo:child ?frederickChild .
  ?frederickChild rdf:type dbo:Monarch .
}

# Step 4: Find the spouse of the parent who is royalty for Count Ingolf of Rosenborg
SELECT ?spouse AS ?royaltySpouse WHERE {
  dbc:Ingolf_of_Rosenborg dbo:parent ?parent .
  ?parent dbo:spouse ?spouse .
  ?spouse rdf:type dbo:Monarch .
}

# Step 5: Combine these relationships to find the final individual
SELECT ?finalIndividual WHERE {
  # Assuming we have identified individuals from previous steps as ?royaltyChild, ?royaltyFrederickChild, and ?royaltySpouse
  ?royaltyChild dbo:child ?intermediate1 .
  ?royaltyFrederickChild dbo:child ?intermediate2 .
  ?intermediate1 dbo:spouse ?intermediate2 .
  ?intermediate2 dbo:spouse ?royaltySpouse .
  ?intermediate1 dbo:child ?finalIndividual .
}
```",7,10,8,3,3,3,3,71,0,0,1,0,0.0,0
47,58,test,"Give me the office of the awardee of the entity, that is an award, in India and office of Suvendu Adhikari and office of the awardee of Banga Bhushan.",SELECT ?result WHERE { ?v5 <http://dbpedia.org/property/office> ?result . <http://dbpedia.org/resource/Suvendu_Adhikari> <http://dbpedia.org/property/office> ?result . ?v5 <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/Banga_Bhushan> . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Award>. ?v2 <http://dbpedia.org/property/awards> ?v1 . ?v1 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/India> . ?v2 <http://dbpedia.org/property/office> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?awardAwardeeOffice ?suvenduAdhikariOffice ?bangaBhushanAwardeeOffice WHERE {
  # Find an award given in India and its awardee's office
  ?award dbo:country dbr:India .
  ?award dbo:recipient ?awardee .
  OPTIONAL { ?awardee dbo:office ?awardAwardeeOffice . }

  # Suvendu Adhikari's current office position
  dbr:Suvendu_Adhikari dbo:office ?suvenduAdhikariOffice .

  # Banga Bhushan award recipient and their office
  ?bangaBhushanAward dbo:name ""Banga Bhushan"" .
  ?bangaBhushanAward dbo:recipient ?bangaBhushanAwardee .
  OPTIONAL { ?bangaBhushanAwardee dbo:office ?bangaBhushanAwardeeOffice . }
}
```",6,7,7,3,3,3,3,71,0,0,1,0,0.0,0
170,24,test,Give me the birth place of the awardee of People's Artist of Russia and domain of the profession of John Scholey.,SELECT ?result WHERE { ?v2 <http://dbpedia.org/ontology/birthPlace> ?result . <http://dbpedia.org/resource/John_Scholey> <http://dbpedia.org/property/occupation> ?v0 . ?v2 <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/People's_Artist_of_Russia> . ?result <http://dbpedia.org/ontology/leaderTitle> ?v0 . },"```sparql
# Query for birthplace of awardees of People's Artist of Russia
SELECT DISTINCT ?person ?birthPlace WHERE {
  ?person dbo:award dbpedia-ru:Народный_художник_Российской_Федерации .
  ?person dbo:birthPlace ?birthPlace .
}

UNION

# Query for domain of profession of John Scholey
SELECT DISTINCT ?domain WHERE {
  dbpedia:John_Scholey dbo:profession ?occupation .
  ?occupation dbo:field ?domain .
}
```",4,4,5,2,2,2,3,28,0,0,3,0,0.0,0
465,69,test,"Give me the spouse of the child, that is a royalty, of Ferdinand I, Holy Roman Emperor and successor of the child, that is a royalty, of the parent of Charles Orlando, Dauphin of France and successor of the child of the parent of Ercole II d'Este, Duke of Ferrara.","SELECT ?result WHERE { ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?result <http://dbpedia.org/ontology/spouse> ?v7 . ?v2 <http://dbpedia.org/ontology/successor> ?result . ?v3 <http://dbpedia.org/property/father> ?v4 . ?v1 <http://dbpedia.org/ontology/child> ?v2 . <http://dbpedia.org/resource/Ercole_II_d'Este,_Duke_of_Ferrara> <http://dbpedia.org/ontology/parent> ?v4 . <http://dbpedia.org/resource/Ferdinand_I,_Holy_Roman_Emperor> <http://dbpedia.org/ontology/child> ?v7 . ?v3 <http://dbpedia.org/ontology/successor> ?result . ?v7 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. <http://dbpedia.org/resource/Charles_Orlando,_Dauphin_of_France> <http://dbpedia.org/ontology/parent> ?v1 . }","```sparql
SELECT ?spouse WHERE {
  # Step 1: Ferdinand I's children who are royalty
  ?child rdf:type dbo:RoyalFamilyMember ;
         dbo:parent dbr:Ferdinand_I,_Holy_Roman_Emperor .
  
  # Step 2: Successor of one of these children
  ?successor dbo:succeededBy ?child .

  # Step 3: Charles Orlando, Dauphin of France's parent and successor
  ?charles_orlando_parent dbo:parent dbr:Charles_Orlando,_Dauphin_of_France .
  ?charles_orlando_successor dbo:succeededBy ?charles_orlando_child .
  
  # Step 4: Ercole II d'Este, Duke of Ferrara's parent and successor
  ?ercole_parent dbo:parent dbr:Ercole_II_d%27Este,_Duke_of_Ferrara .
  ?ercole_successor dbo:succeededBy ?ercole_child .

  # Find the spouse of the relevant royalty
  ?successor dbo:spouse ?spouse .
}
```",8,10,9,3,3,3,3,71,0,0,1,0,0.0,0
791,69,test,"Give me the predecessor of the child of Emperor Takakura and father of the child, that is a royalty, of the father, that is a royalty and an office holder, of Emperor Antoku and spouse of the spouse, that is a royalty, of the reference to Emperor Takakura.","SELECT ?result WHERE { ?v2 <http://dbpedia.org/property/father> ?v1 . <http://dbpedia.org/resource/Emperor_Antoku> <http://dbpedia.org/property/father> ?v1 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?result <http://dbpedia.org/ontology/successor> ?v7 . ?v7 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Emperor_Takakura> . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v2 <http://dbpedia.org/property/father> ?result . ?v4 <http://xmlns.com/foaf/0.1/name> ""Emperor Takakura""@en . ?result <http://dbpedia.org/ontology/spouse> ?v3 . ?v3 <http://dbpedia.org/ontology/spouse> ?v4 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?predecessor WHERE {
  # Step 1: Emperor Takakura's child
  VALUES (?child) { dbr:Imperial_Princess_Shushi }
  
  # Step 2: Father of the child who is a royalty
  ?father dbo:spouse ?child .
  ?father rdf:type dbo:Monarch .

  # Step 3: Predecessor of this father (Taira no Kiyomori)
  VALUES (?kiyomori) { dbr:Taira_no_Kiyomori }
  ?predecessor dbo:successorOf ?kiyomori .
  
  # Step 4: Father of Emperor Antoku who is a royalty and office holder
  ?antokuFather dbo:spouse dbr:Emperor_Antoku .
  ?antokuFather rdf:type dbo:Monarch .
  ?antokuFather dbo:officeHolder ?office .

  # Step 5: Spouse of the spouse of reference to Emperor Takakura
  ?takakuraSpouse dbo:spouse dbr:Emperor_Takakura .
  ?referenceToTakakura dbo:spouse ?takakuraSpouse .
  
  FILTER (?predecessor = dbr:Taira_no_Tsunemasa) # Assuming Taira no Tsunemasa as predecessor
}
```",8,12,9,3,3,3,3,71,0,0,1,0,0.0,0
453,8,test,"Give me the religion of the author, that is a cardinal and a cleric, of Apologia Pro Vita Sua and religion of Newfoundland Colony.",SELECT ?result WHERE { ?v0 <http://dbpedia.org/ontology/religion> ?result . <http://dbpedia.org/resource/Apologia_Pro_Vita_Sua> <http://dbpedia.org/property/author> ?v0 . <http://dbpedia.org/resource/Newfoundland_Colony> <http://dbpedia.org/ontology/religion> ?result . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Cardinal>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Cleric>. },"```sparql
SELECT ?authorReligion ?colonyReligion WHERE {
  # Find John Henry Newman's religion
  ?newman dbo:birthName ""John Henry Newman""@en .
  ?newman dbo:profession dbr:Clergy .
  ?newman dbo:religion ?authorReligion .

  # Find the dominant religion of Newfoundland Colony
  ?colony rdfs:label ""Newfoundland Colony""@en .
  ?colony dbo:populationGroup ?group .
  ?group dbo:religion ?colonyReligion .
}
```",3,5,4,2,2,2,2,9,0,0,1,0,0.0,0
965,71,test,"Give me the parent of the person born, that is a noble, as the birth name of George Mountbatten, 2nd Marquess of Milford Haven and spouse of the spouse of the parent of Louise Mountbatten and parent of the child, that is a royalty, of the person born, that is a politician, on 1854-05-24.","SELECT ?result WHERE { <http://dbpedia.org/resource/George_Mountbatten,_2nd_Marquess_of_Milford_Haven> <http://dbpedia.org/property/birthName> ?v7 . <http://dbpedia.org/resource/Louise_Mountbatten> <http://dbpedia.org/ontology/parent> ?v1 . ?v1 <http://dbpedia.org/ontology/spouse> ?v2 . ?v8 <http://dbpedia.org/property/birthName> ?v7 . ?v8 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Noble>. ?result <http://dbpedia.org/ontology/spouse> ?v2 . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v5 <http://dbpedia.org/ontology/parent> ?result . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v5 <http://dbpedia.org/property/father> ?v4 . ?v4 <http://dbpedia.org/ontology/birthDate> ""1854-05-24""^^<http://www.w3.org/2001/XMLSchema#date> . ?v8 <http://dbpedia.org/ontology/parent> ?result . }","```sparql
SELECT ?parentNoble WHERE {
  # Step 1: Identify George Mountbatten, 2nd Marquess of Milford Haven
  ?george dbr:George_Mountbatten,_2nd_Marquess_of_Milford_Haven .
  ?george dbo:birthName ?birthName .

  # Step 2: Find Louise Mountbatten's parent
  ?louise dbr:Louise_Mountbatten .
  ?parentLouise dbo:child ?louise .

  # Step 3: Determine the spouse of that parent
  ?spouseParent dbp:spouse ?parentLouise .

  # Step 4: Identify the child, who is royalty, of a politician born on 1854-05-24
  ?politician dbo:birthday ""1854-05-24""^^xsd:date .
  ?royalChild dbo:child ?politician ;
              rdf:type dbo:Monarch .

  # Step 5: Find the parent of that royal child
  ?parentRoyalChild dbo:child ?royalChild .

  # Step 6: Identify the spouse of the person found in step 5
  ?spouseParent2 dbp:spouse ?parentRoyalChild .

  # Step 7: Finally, find the parent of George Mountbatten's birth name that is a noble
  ?birthName dbo:child ?nobleParent .
  ?nobleParent rdf:type dbo:NoblePerson .
  
  FILTER(?spouseParent = ?spouseParent2)
}
```",9,12,10,3,3,3,3,71,0,0,2,0,0.0,0
281,26,test,"Give me the awardee of the award of Alfred Warden and commander in the war, that is an event and a military conflict, of Roy Boehm and awardee of Medal bar.",SELECT ?result WHERE { ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?result <http://dbpedia.org/property/awards> ?v1 . <http://dbpedia.org/resource/Alfred_Warden> <http://dbpedia.org/property/awards> ?v1 . ?v2 <http://dbpedia.org/ontology/commander> ?result . <http://dbpedia.org/resource/Roy_Boehm> <http://dbpedia.org/ontology/battle> ?v2 . ?result <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/Medal_bar> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?person WHERE {
  # Step 1: Find Alfred Warden's award
  ?award dbo:recipient dbr:Alfred_Warden .
  
  # Step 2: Identify Roy Boehm's military conflict and find commanders
  ?conflict dbo:commander ?commander .
  ?conflict dbo:participant dbr:Roy_Boehm .

  # Step 3: Find individuals who received the Medal bar
  ?medalBarAward dbo:recipient ?person .
  
  # Step 4: Combine criteria to find a common individual
  FILTER (?award = ?medalBarAward)
  FILTER (?commander = ?person)
}
```",5,7,6,2,3,2,3,28,0,0,1,0,0.0,0
933,57,test,"Give me the band of the band, that is a group and a band and an organisation, of Alan Warner (musician) and reference to the birth name of the professional in Musician and band of Mike Elliott (saxophonist).",SELECT ?result WHERE { <http://dbpedia.org/resource/Mike_Elliott_(saxophonist)> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Band>. ?v1 <http://dbpedia.org/property/occupation> <http://dbpedia.org/resource/Musician> . ?v0 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v1 <http://dbpedia.org/property/birthName> ?v4 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. <http://dbpedia.org/resource/Alan_Warner_(musician)> <http://dbpedia.org/ontology/associatedMusicalArtist> ?v0 . ?result <http://xmlns.com/foaf/0.1/name> ?v4 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Group>. },"```sparql
# Query to find Alan Warner's band
SELECT ?band WHERE {
  ?person dbo:birthName ""Alan Warner""@en .
  ?person dbo:musicalArtist ?band .
  FILTER EXISTS { ?band rdf:type dbo:Band }
}

UNION

SELECT ?organisation WHERE {
  ?person dbo:birthName ""Alan Warner""@en .
  ?person dbo:member ?organisation .
  FILTER EXISTS { ?organisation rdf:type dbo:Organization }
}

# Query to find Mike Elliott's birth name
SELECT ?birthName WHERE {
  ?person foaf:name ""Mike Elliott""@en ;
          dbo:birthName ?birthName .
}
```",6,9,7,3,3,3,3,71,0,0,1,0,0.0,0
417,57,test,"Give me the child of the child, that is a royalty, of Frederick Francis III, Grand Duke of Mecklenburg-Schwerin and spouse of Princess Caroline-Mathilde of Denmark and child of the father of the leader, that is a royalty, of Colony of Greenland.","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/parent> ?v3 . ?v3 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Frederick_Francis_III,_Grand_Duke_of_Mecklenburg-Schwerin> . ?result <http://dbpedia.org/ontology/spouse> <http://dbpedia.org/resource/Princess_Caroline-Mathilde_of_Denmark> . <http://dbpedia.org/resource/Colony_of_Greenland> <http://dbpedia.org/property/leader> ?v0 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?result <http://dbpedia.org/property/father> ?v5 . ?v0 <http://dbpedia.org/property/father> ?v5 . }","```sparql
# Step 1: Find Frederick Francis III's children who are royalty
SELECT ?child WHERE {
  wd:Q123456 wdt:P22 ?spouse . # Frederick Francis III
  ?spouse wdt:P26 ?child .
  ?child wdt:P31/wdt:P279* wd:Q5 . # Person and subclass of Person (royalty)
}

# Step 2: Find the child of this royal child who is royalty
SELECT DISTINCT ?grandchild WHERE {
  ?parent wdt:P22 ?spouse . # Royal child from step 1
  ?parent wdt:P31/wdt:P279* wd:Q5 .
  ?parent wdt:P40 ?grandchild .
  ?grandchild wdt:P31/wdt:P279* wd:Q5 .
}

# Step 3: Identify the leader of the Colony of Greenland and their father
SELECT DISTINCT ?leader ?father WHERE {
  ?greenlandLeader wdt:P39 wd:Q1234567 . # Leader of Greenland (historical figure)
  ?greenlandLeader wdt:P22 ?father .
}

# Step 4: Find the child of this leader's father who is royalty
SELECT DISTINCT ?royalChild WHERE {
  ?father wdt:P40 ?royalChild .
  ?royalChild wdt:P31/wdt:P279* wd:Q5 .
}

# Final step: Match these two royals (if any)
SELECT DISTINCT ?grandchild ?royalChild WHERE {
  { SELECT DISTINCT ?grandchild WHERE {
      ?parent wdt:P22 ?spouse . # Royal child from step 1
      ?parent wdt:P31/wdt:P279* wd:Q5 .
      ?parent wdt:P40 ?grandchild .
      ?grandchild wdt:P31/wdt:P279* wd:Q5 .
    }
  }
  { SELECT DISTINCT ?royalChild WHERE {
      ?father wdt:P40 ?royalChild .
      ?royalChild wdt:P31/wdt:P279* wd:Q5 .
    }
  }
}
```

Note: Replace `wd:Q123456` with the actual DBpedia ID for Frederick Francis III and `wd:Q1234567` with the ID for the leader of Greenland during its colonial period. The queries assume that these IDs are known or can be found through preliminary searches.",6,8,7,3,3,3,3,71,0,0,1,0,0.0,0
933,68,test,"Give me the band of the band, that is a group and a band and an organisation, of Alan Warner (musician) and band of the band of the band, that is an artist and a musical artist, of The Ramong Sound and reference to the birth name of the professional in Musician.",SELECT ?result WHERE { ?v1 <http://dbpedia.org/property/birthName> ?v6 . <http://dbpedia.org/resource/The_Ramong_Sound> <http://dbpedia.org/ontology/associatedMusicalArtist> ?v4 . ?v0 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Band>. ?v2 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?result <http://xmlns.com/foaf/0.1/name> ?v6 . ?v1 <http://dbpedia.org/property/occupation> <http://dbpedia.org/resource/Musician> . <http://dbpedia.org/resource/Alan_Warner_(musician)> <http://dbpedia.org/ontology/associatedMusicalArtist> ?v0 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Group>. ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?v4 <http://dbpedia.org/ontology/associatedMusicalArtist> ?v2 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. },"```sparql
# Query to find Alan Warner's band
SELECT ?band WHERE {
  ?person dbo:birthName ""Alan Warner""@en .
  ?person dbo:associatedBand ?band .
  ?band a dbo:MusicalGroup ;
        a dbo:Organisation .
}

UNION

# Query to find The Ramones' associated band
SELECT ?band WHERE {
  ?ramones dbo:associatedBand ?band .
  ?band a dbo:Artist ;
        a dbo:MusicalArtist .
}

UNION

# Query to find Alan Warner's birth name
SELECT ?birthName WHERE {
  ?person dbo:birthName ?birthName .
  ?person rdfs:label ""Alan Warner (musician)""@en .
}
```",8,13,9,3,3,3,3,71,0,0,1,0,0.0,0
456,64,test,"Give me the band of the band, that is a musical artist, of the band of Alan Doyle and spouse of the actor of the movie, that is a work and a television show, with Ross Newton and professional in .","SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v0 <http://dbpedia.org/ontology/associatedMusicalArtist> ?v1 . ?v2 <http://dbpedia.org/ontology/spouse> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?v3 <http://dbpedia.org/property/starring> ?v2 . ?v3 <http://dbpedia.org/property/starring> <http://dbpedia.org/resource/Ross_Newton> . <http://dbpedia.org/resource/Alan_Doyle> <http://dbpedia.org/ontology/associatedMusicalArtist> ?v0 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?result <http://dbpedia.org/property/occupation> """"@en . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/TelevisionShow>. }","```sparql
# Step 1: Find movies/TV shows featuring Ross Newton
SELECT ?work WHERE {
  ?actor foaf:name ""Ross Newton""@en .
  ?actor dbo:profession dbr:Actor .
  ?work dbo:starring ?actor .
}

# Step 2: Identify any actors from these works who might be connected to Alan Doyle through marriage
SELECT DISTINCT ?spouse WHERE {
  ?doyle foaf:name ""Alan Doyle""@en .
  ?doyle dbo:spouse ?spouse .
  ?spouse dbo:profession dbr:MusicalArtist .
  
  # Assuming we have identified a work from Step 1, check if the spouse is connected to it
  OPTIONAL {
    ?work dbo:starring ?actor .
    ?actor foaf:name ?actorName .
    FILTER(?actorName = ""Ross Newton""@en)
  }
}

# Step 3: Determine the band associated with Alan Doyle's spouse
SELECT DISTINCT ?band WHERE {
  ?spouse dbo:member ?band .
  ?doyle foaf:name ""Alan Doyle""@en .
  ?doyle dbo:spouse ?spouse .
}

# Note: The above queries are structured to be executed sequentially, as SPARQL does not support direct chaining of results.
```",7,10,8,3,3,3,3,71,0,0,1,0,0.0,0
329,24,test,"Give me the entity in the region, that is a country, of Western European Time and entity in the birthplace, that is an organisation and a country, of Robert Bates (loyalist).",SELECT ?result WHERE { <http://dbpedia.org/resource/Robert_Bates_(loyalist)> <http://dbpedia.org/ontology/birthPlace> ?v0 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. ?result <http://dbpedia.org/ontology/country> ?v0 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?result <http://dbpedia.org/ontology/country> ?v2 . ?v2 <http://dbpedia.org/property/timeZone> <http://dbpedia.org/resource/Western_European_Time> . },"```sparql
# Query for countries in the Western European Time region
SELECT ?country WHERE {
  ?country wdt:P31 wd:Q6256; # Instance of Country
           wdt:P421 wd:Q11173. # Located in time zone Western European Time (WET)
}

UNION

# Query for organizations that are also countries at the birthplace of Robert Bates
SELECT ?organization WHERE {
  ?bates dbo:birthPlace ?birthPlace.
  FILTER(?bates = dbpedia:Robert_Bates_(loyalist)).
  
  ?organization wdt:P31 wd:Q6256; # Instance of Country
                wdt:P159 wd:Q11173. # Organization type (assuming Q11173 is a placeholder for organization)
                dbo:location ?birthPlace.
}
```",4,7,5,2,2,2,3,28,0,0,531,0,0.0,0
456,71,test,"Give me the spouse of the actor of the movie, that is a work and a television show, with Ross Newton and band of the band, that is a musical artist, of the band of Alan Doyle and professional in the alter ego of the reference, that is a fictional character, to Lamont Cranston (radio, film and television).","SELECT ?result WHERE { ?v4 <http://xmlns.com/foaf/0.1/name> ""Lamont Cranston (radio, film and television)""@en . ?v8 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?v2 <http://dbpedia.org/ontology/spouse> ?result . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/FictionalCharacter>. ?v4 <http://dbpedia.org/property/alterEgo> ?v5 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/TelevisionShow>. <http://dbpedia.org/resource/Alan_Doyle> <http://dbpedia.org/ontology/associatedMusicalArtist> ?v7 . ?result <http://dbpedia.org/property/occupation> ?v5 . ?v7 <http://dbpedia.org/ontology/associatedMusicalArtist> ?v8 . ?v1 <http://dbpedia.org/property/starring> ?v2 . ?v1 <http://dbpedia.org/property/starring> <http://dbpedia.org/resource/Ross_Newton> . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?v8 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . }","```sparql
SELECT ?spouse WHERE {
  # Lamont Cranston as The Shadow
  dbpedia:Lamont_Cranston dbo:alias ""The Shadow""@en .
  
  # Ross Newton's involvement in The Shadow TV series
  dbpedia:Ross_Newton dbo:profession dbpedia:Actor ;
                      dbo:film dbpedia:The_Shadow_(1958_TV_series) .

  # Find spouse of Ross Newton
  ?person dbo:spouse dbpedia:Ross_Newton .
  ?person rdfs:label ?spouseLabel .
  
  FILTER(LANG(?spouseLabel) = 'en')
}
```",9,13,10,3,3,3,3,71,0,0,1,0,0.0,0
326,8,test,"Give me the person decedent at Rancho Mirage, California and professional in the profession of Susanne Lewis.","SELECT ?result WHERE { <http://dbpedia.org/resource/Susanne_Lewis> <http://dbpedia.org/property/occupation> ?v1 . ?result <http://dbpedia.org/ontology/deathPlace> <http://dbpedia.org/resource/Rancho_Mirage,_California> . ?result <http://dbpedia.org/property/occupation> ?v1 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT ?person ?deathPlace WHERE {
  ?person dbo:deathPlace ?deathLocation .
  ?person foaf:worksFor|dbo:employer ?susanneLewis .
  
  FILTER(CONTAINS(LCASE(?deathLocation), ""rancho mirage, california""))
  
  VALUES ?susanneLewis { <http://dbpedia.org/resource/Susanne_Lewis> }
}
```",3,3,4,2,2,2,2,9,0,0,1,0,0.0,0
645,71,test,"Give me the military force of the force, that is an event and a military conflict and a societal event, of the native, that is a president and a politician, of Restoration (Spain) and commander in the force of the commander in Siege of Madrid and leader of the office, that is a government agency and an organisation, of the native of Restoration (Spain).",SELECT ?result WHERE { ?v8 <http://dbpedia.org/ontology/leader> ?result . ?v7 <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Restoration_(Spain)> . ?v7 <http://dbpedia.org/property/office> ?v8 . ?v8 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?v8 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/GovernmentAgency>. ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/President>. <http://dbpedia.org/resource/Siege_of_Madrid> <http://dbpedia.org/ontology/commander> ?v1 . ?result <http://dbpedia.org/ontology/battle> ?v5 . ?v2 <http://dbpedia.org/ontology/commander> ?result . ?v5 <http://dbpedia.org/ontology/commander> ?v4 . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v2 <http://dbpedia.org/ontology/commander> ?v1 . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?v4 <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Restoration_(Spain)> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?militaryForce WHERE {
  # Identify Restoration (Spain) and its native president
  dbr:Restoration_(Spain) dbo:president dbr:Alfonso_XIII_of_Spain .
  
  # Find the military force associated with Alfonso XIII's supporters during the Siege of Madrid
  ?militaryForce dbo:commander dbr:Francisco_Franco .

  # Ensure it is involved in the Siege of Madrid and related events
  ?militaryForce dbo:event dbr:Siege_of_Madrid .
  ?militaryForce a dbo:MilitaryConflict ;
                 a dbo:SocietalEvent .
}
```",9,16,10,3,3,3,3,71,0,0,2,0,0.0,0
465,65,test,"Give me the successor of the child, that is a royalty, of Anne of Brittany and successor of the child of Alfonso I d'Este and spouse of the child, that is a royalty, of the parent of Elizabeth of Austria (1526–1545).",SELECT ?result WHERE { ?v4 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Alfonso_I_d'Este> . ?v4 <http://dbpedia.org/ontology/successor> ?result . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v0 <http://dbpedia.org/ontology/child> ?v6 . ?v6 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. <http://dbpedia.org/resource/Anne_of_Brittany> <http://dbpedia.org/ontology/child> ?v3 . ?v0 <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Elizabeth_of_Austria_(1526–1545)> . ?result <http://dbpedia.org/ontology/spouse> ?v6 . ?v3 <http://dbpedia.org/ontology/successor> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?successor WHERE {
  # Anne of Brittany's child who is royalty
  ?anneChild a dbo:Monarch ;
             dbo:spouse ?francisI ;
             dbo:child ?claudette .

  # Successor of Claude (Anne's child)
  ?claudette a dbo:Monarch ;
             dbo:succ ?successorClaude .

  # Alfonso I d'Este's child
  ?alfonsoChild a dbo:Monarch ;
                dbo:childOf ?alfonsoI .

  # Successor of Ercole II (Alfonso's child)
  ?ercoleII a dbo:Monarch ;
            dbo:succ ?successorErcoleII .

  # Elizabeth of Austria's parent
  ?elizabethParent a dbo:Monarch ;
                   dbo:child ?elizabethAustria .

  # Spouse of Ferdinand I's child who is royalty
  ?ferdinandChild a dbo:Monarch ;
                  dbo:spouse ?mariaAnnaBavaria .

  # Successor of Maria Anna (Ferdinand's spouse)
  ?mariaAnnaBavaria a dbo:Monarch ;
                    dbo:succ ?successorMariaAnna .

  FILTER (?anneChild = dbr:Claude_of_France_(daughter_of_Charles_VIII))
  FILTER (?claudette = dbr:Claude_of_France_(1515-1524))
  FILTER (?alfonsoI = dbr:Alfonso_I_d'Este)
  FILTER (?ercoleII = dbr:Ercole_II_d'Este)
  FILTER (?elizabethAustria = dbr:Elizabeth_of_Austria_(1526–1545))
  FILTER (?ferdinandChild = dbr:Ferdinand_I,_Holy_Roman_Emperor)
  FILTER (?mariaAnnaBavaria = dbr:Maria_Anna_of_Bavaria)

  # Find the ultimate successor
  ?successorClaude rdfs:label ?label1 .
  ?successorErcoleII rdfs:label ?label2 .
  ?successorMariaAnna rdfs:label ?label3 .

  FILTER(CONTAINS(LCASE(?label1), ""claudette""))
  FILTER(CONTAINS(LCASE(?label2), ""alfonso ii d'Este""))
  FILTER(CONTAINS(LCASE(?label3), ""maria anna of bavaria""))

  # Assuming the ultimate successor is a prominent",7,9,8,3,3,3,3,71,0,0,1,0,0.0,0
130,18,test,"Give me the figure known as the film, that is a soccer club and an organisation, of the native, that is a coach and a college coach, of Madison, Alabama and entity in the administration, that is American, of .","SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/CollegeCoach>. ?v1 <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Madison,_Alabama> . ?v3 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/United_States>. ?result <http://dbpedia.org/ontology/state> ?v3 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Coach>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?result <http://dbpedia.org/property/nickname> ?v2 . ?v2 <http://dbpedia.org/ontology/director> ?v1 . ?v3 <http://dbpedia.org/property/governor> """"@en . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerClub>. }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?film WHERE {
  ?person dbo:nationality dbr:United_States ;
          dbo:birthPlace dbr:Birmingham,_Alabama ;
          dbo:occupation dbr:Secretary_of_State_of_the_United_States .
  
  ?film dbo:subject ?person .

  FILTER (CONTAINS(LCASE(?film), ""condoleezza rice""))
}
```",5,10,6,3,2,3,2,20,0,0,1,0,0.0,0
839,62,test,"Give me the band of Matthias Röhr and band of the person born, that is a musical artist, as the persona of Kevin Russell (musician) and band of the member of the band, that is a band and a group, of Peter Schorowsky.",SELECT ?result WHERE { ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Group>. ?result <http://dbpedia.org/ontology/bandMember> <http://dbpedia.org/resource/Matthias_Röhr> . ?v0 <http://dbpedia.org/ontology/bandMember> ?v6 . ?v3 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v3 <http://dbpedia.org/property/birthName> ?v4 . <http://dbpedia.org/resource/Kevin_Russell_(musician)> <http://xmlns.com/foaf/0.1/givenName> ?v4 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Band>. <http://dbpedia.org/resource/Peter_Schorowsky> <http://dbpedia.org/ontology/associatedMusicalArtist> ?v0 . ?result <http://dbpedia.org/ontology/bandMember> ?v6 . },"```sparql
# Query to find Matthias Röhr's band
SELECT ?band WHERE {
  ?person foaf:name ""Matthias Röhr""@en .
  ?person dbo:memberOf ?band .
}

UNION

# Query to find Kevin Russell's persona and his band
SELECT ?band WHERE {
  ?persona dbo:birthName ""Kevin Russell""@en ;
           a dbo:MusicalArtist .
  ?persona dbo:associatedBand ?band .
}

UNION

# Query to find Peter Schorowsky's band that is both a band and a group
SELECT ?band WHERE {
  ?person foaf:name ""Peter Schorowsky""@en .
  ?person dbo:memberOf ?band .
  ?band a dbo:Band ;
        a dbo:MusicalGroup .
}
```",7,10,8,3,3,3,3,71,0,0,1,0,0.0,0
216,26,test,Give me the party of Campbell Newman and office of the mayor of Ros Bates and administration of the designer of Woolfe: The Red Hood Diaries.,SELECT ?result WHERE { <http://dbpedia.org/resource/Ros_Bates> <http://dbpedia.org/property/leader> ?v2 . <http://dbpedia.org/resource/Campbell_Newman> <http://dbpedia.org/ontology/party> ?result . ?result <http://dbpedia.org/property/leader> ?v1 . ?v2 <http://dbpedia.org/property/office> ?result . <http://dbpedia.org/resource/Woolfe:_The_Red_Hood_Diaries> <http://dbpedia.org/property/designer> ?v1 . },"```sparql
# Query to get the political party of Campbell Newman
SELECT ?party WHERE {
  dbpedia:Campbell_Newman dbo:politicalParty ?party .
}

# Query to get the office held by Ros Bates as a mayor
SELECT ?office WHERE {
  dbpedia:Ros_Bates dbo:positionHeld ?office .
  FILTER(CONTAINS(LCASE(STR(?office)), ""mayor""))
}

# Query to find the designer of Woolfe: The Red Hood Diaries and their administration
SELECT DISTINCT ?designer ?administration WHERE {
  # Find the designer of the game
  dbpedia:Woolfe:_The_Red_Hood_Diaries dbo:creator ?designer .
  
  # Get information about the designer's administration (if applicable)
  OPTIONAL { 
    ?designer dbo:positionHeld ?administration .
  }
}
```",5,5,6,2,3,2,3,28,0,0,1,0,0.0,0
773,61,test,"Give me the parent of the child, that is a royalty, of the father, that is an office holder and a royalty, of Carloman of Bavaria and parent of the successor of the child, that is a royalty, of Louis the Pious.",SELECT ?result WHERE { ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. <http://dbpedia.org/resource/Louis_the_Pious> <http://dbpedia.org/ontology/child> ?v0 . ?result <http://dbpedia.org/ontology/child> ?v5 . ?v3 <http://dbpedia.org/ontology/parent> ?result . ?v0 <http://dbpedia.org/ontology/successor> ?v5 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v3 <http://dbpedia.org/property/father> ?v1 . <http://dbpedia.org/resource/Carloman_of_Bavaria> <http://dbpedia.org/property/father> ?v1 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. },"```sparql
SELECT ?parentOfSuccessor WHERE {
  # Step 1: Identify Carloman of Bavaria's father
  dbp:Carmann_of_Bavaria dbo:father ?carlomansFather .
  
  # Step 2: Ensure the father is both an office holder and a royalty
  ?carlomansFather rdf:type dbp:Royalty ;
                   dbo:officeHolder ?office .

  # Step 3: Find the child of this father who is a royalty
  ?carlomansFather dbo:child ?royalChild .
  
  # Step 4: Identify Louis the Pious' child who is a royalty
  dbp:Louis_the_Pious dbo:child ?louisRoyalChild .
  ?louisRoyalChild rdf:type dbp:Royalty .

  # Step 5: Find the successor of Louis the Pious' royal child
  ?louisRoyalChild dbo:succeededBy ?successor .

  # Step 6: Determine the parent of this successor
  ?successor dbo:parent ?parentOfSuccessor .

  # Step 7: Identify the parent of Carloman's father's royal child
  ?royalChild dbo:parent ?parentOfRoyalChild .
  
  FILTER(?parentOfSuccessor = ?parentOfRoyalChild)
}
```",6,10,7,3,2,3,3,71,0,0,2,0,0.0,0
445,61,test,Give me the death place of the awardee of the establishment of 1820-03-10 and entity in the award of the commander in Battle of Saint-Mihiel.,"SELECT ?result WHERE { <http://dbpedia.org/resource/Battle_of_Saint-Mihiel> <http://dbpedia.org/ontology/commander> ?v1 . ?v0 <http://dbpedia.org/ontology/foundingDate> ""1820-03-10""^^<http://www.w3.org/2001/XMLSchema#date> . ?v5 <http://dbpedia.org/ontology/deathPlace> ?result . ?v5 <http://dbpedia.org/property/awards> ?v0 . ?v1 <http://dbpedia.org/property/awards> ?v3 . ?result <http://dbpedia.org/ontology/country> ?v3 . }","```sparql
SELECT ?deathPlace WHERE {
  ?entity dbo:established ?date .
  ?entity dbo:award ?award .
  ?award dbo:name ""Commander"" ;
         dbo:relatedEvent ?event .
  ?event rdfs:label ""Battle of Saint-Mihiel""@en .
  FILTER (YEAR(?date) = 1820 && MONTH(?date) = 3 && DAY(?date) = 10)
  
  OPTIONAL { ?entity dbo:deathPlace ?deathPlace . }
}
```",6,6,7,3,2,3,3,71,0,0,2,0,0.0,0
129,28,test,"Give me the associated musical artist of the actor, that is an organisation, of Dreamville Presents: Revenge and professional in the mayor of 1999 West Dunbartonshire Council election and associated musical artist of the person born as Tahj Malik Chandler.","SELECT ?result WHERE { <http://dbpedia.org/resource/1999_West_Dunbartonshire_Council_election> <http://dbpedia.org/property/leader> ?v1 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?v5 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . <http://dbpedia.org/resource/Dreamville_Presents:_Revenge> <http://dbpedia.org/property/starring> ?v3 . ?v3 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v5 <http://dbpedia.org/property/birthName> ""Tahj Malik Chandler""@en . ?result <http://dbpedia.org/property/occupation> ?v1 . }","```sparql
# Step 1: Find actor associated with ""Dreamville Presents: Revenge""
SELECT ?actor WHERE {
  ?production dcterms:title ""Dreamville Presents: Revenge"" .
  ?production dbo:performer ?actor .
}

# Step 2: Find musical artist that is an organization related to this actor
SELECT DISTINCT ?musicalArtist WHERE {
  ?actor foaf:member ?musicalArtist .
  ?musicalArtist a dbo:MusicalGroup .
}

# Step 3: Identify the mayor of the 1999 West Dunbartonshire Council election
SELECT ?mayor WHERE {
  ?election dbp:electionDate ""1999-05-06""^^xsd:date ;
           dbp:office ""Mayor of West Dunbartonshire"" ;
           dbo:winner ?mayor .
}

# Step 4: Find professional association between this mayor and a musical artist
SELECT DISTINCT ?musicalArtist WHERE {
  ?mayor foaf:member ?musicalArtist .
  ?musicalArtist a dbo:MusicalGroup .
}

# Step 5: Identify the person born as Tahj Malik Chandler (Lil Wayne)
SELECT ?person WHERE {
  ?person foaf:name ""Tahj Malik Chandler"" ;
          dbp:birthName ""Tahj Malik Chandler"" .
}

# Step 6: Find associated musical artist of Lil Wayne
SELECT DISTINCT ?musicalArtist WHERE {
  ?person dbo:associatedMusicalArtist ?musicalArtist .
  ?musicalArtist a dbo:MusicalGroup .
}

# Step 7: Combine results from steps 2 and 6 to find common musical artist or organization
SELECT DISTINCT ?commonMusicalArtist WHERE {
  VALUES (?artist1) { (<actor_uri_from_step_1>) }
  VALUES (?artist2) { (<person_uri_from_step_5>) }

  ?artist1 foaf:member ?commonMusicalArtist .
  ?artist2 dbo:associatedMusicalArtist ?commonMusicalArtist .

  ?commonMusicalArtist a dbo:MusicalGroup .
}
```",6,7,7,2,3,2,3,28,0,0,1,0,0.0,0
465,67,test,"Give me the successor of the child, that is a royalty, of the parent of Charles Orlando, Dauphin of France and spouse of the child, that is a royalty, of the parent of Elizabeth of Austria (1526–1545) and successor of Ercole II d'Este, Duke of Ferrara.","SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/child> ?v3 . <http://dbpedia.org/resource/Ercole_II_d'Este,_Duke_of_Ferrara> <http://dbpedia.org/ontology/successor> ?result . ?v3 <http://dbpedia.org/ontology/successor> ?result . ?v0 <http://dbpedia.org/ontology/child> ?v6 . ?v6 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v0 <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Elizabeth_of_Austria_(1526–1545)> . <http://dbpedia.org/resource/Charles_Orlando,_Dauphin_of_France> <http://dbpedia.org/ontology/parent> ?v1 . ?result <http://dbpedia.org/ontology/spouse> ?v6 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. }","```sparql
SELECT ?successor WHERE {
  ?charles ix dbpedia-owl:parent ?henryII .
  ?elizabeth dbpedia-owl:parent ?ferdinandI .
  ?anna dbpedia-owl:parent ?ferdinandI ;
        dbpedia-owl:spouse ?ferdinandIOfHabsburg .
  ?ercoleII dcterms:successor ?alfonsoII .
  ?anna dbpedia-owl:spouse ?ferdinandIOfHabsburg .
  ?elisabeth dbpedia-owl:parent ?henryII ;
             dbpedia-owl:child ?charlesIX .
  ?charlesIX dbpedia-owl:succesor ?henryIII .
}
```",7,9,8,3,3,3,3,71,0,0,1,0,0.0,0
965,65,test,"Give me the parent of the person born, that is a noble, as Prince George of Battenberg and parent of the child, that is a royalty, of the person born, that is a politician, on 1854-05-24 and spouse of the spouse of Princess Victoria of Hesse and by Rhine.","SELECT ?result WHERE { ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v5 <http://dbpedia.org/property/father> ?v1 . ?v0 <http://dbpedia.org/property/birthName> ""Prince George of Battenberg""@en . ?result <http://dbpedia.org/ontology/spouse> ?v2 . ?v5 <http://dbpedia.org/ontology/parent> ?result . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Noble>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v1 <http://dbpedia.org/ontology/birthDate> ""1854-05-24""^^<http://www.w3.org/2001/XMLSchema#date> . <http://dbpedia.org/resource/Princess_Victoria_of_Hesse_and_by_Rhine> <http://dbpedia.org/ontology/spouse> ?v2 . ?v0 <http://dbpedia.org/ontology/parent> ?result . }","```sparql
SELECT ?parent WHERE {
  ?person dbo:birthDate ""1854-05-24""^^xsd:date .
  ?person rdf:type dbo:Politician .
  ?person foaf:name ""Winston Churchill""@en .

  ?princess dbo:spouse ?husband .
  ?princess foaf:name ""Princess Victoria of Hesse and by Rhine""@en .
  
  ?husband foaf:name ""Prince Louis of Battenberg""@en .
  ?husband dbo:nobleTitle ?title .
  FILTER(?title = dbo:Prince) .

  ?noble foaf:name ""Prince George of Battenberg""@en .
  ?noble rdfs:label ?alias .
  FILTER(CONTAINS(LCASE(STR(?alias)), ""prince george of battenberg"")) .

  ?parent dbo:child ?noble .
  ?parent dbo:child ?royalChild .
  
  ?royalChild dbo:parent ?politician .
  ?politician foaf:name ""Winston Churchill""@en .
}
```",7,10,8,3,3,3,3,71,0,0,1,0,0.0,0
274,26,test,"Give me the band member of the person born, that is a musical artist, as John Birks Gillespie and associated musical artist of the actor, that is a musical artist, of Imagine the Sound and professional in .","SELECT ?result WHERE { ?v2 <http://dbpedia.org/property/birthName> ""John Birks Gillespie""@en . <http://dbpedia.org/resource/Imagine_the_Sound> <http://dbpedia.org/property/starring> ?v1 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?result <http://dbpedia.org/ontology/associatedMusicalArtist> ?v2 . ?result <http://dbpedia.org/property/occupation> """"@en . ?v1 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . }","```sparql
# Find band members of Dizzy Gillespie
SELECT ?bandMember WHERE {
  ?gillespie dbo:birthName ""John Birks Gillespie""@en .
  ?gillespie rdf:type dbo:Musician .
  ?performance dbo:performer ?gillespie ;
               dbo:performer ?bandMember .
}

UNION

# Find the actor associated with ""Imagine the Sound"" and check if they are a musical artist
SELECT ?actorBandMember WHERE {
  ?soundWork dcterms:title ""Imagine the Sound""@en .
  ?soundWork dbo:actor ?actor .
  ?actor rdf:type dbo:Actor ;
         dbo:profession ?profession .

  # Check if actor is also a musical artist
  OPTIONAL { ?actor rdf:type dbo:Musician . }

  # If they are a musical artist, find their band members
  ?performance dbo:performer ?actor ;
               dbo:performer ?actorBandMember .
}
```",5,7,6,2,3,2,3,28,0,0,3,0,0.0,0
465,71,test,"Give me the successor of the child of the parent of Ercole II d'Este, Duke of Ferrara and successor of the child, that is a royalty, of the parent of Charles Orlando, Dauphin of France and spouse of the child, that is a royalty, of the parent of Elizabeth of Austria (1526–1545).","SELECT ?result WHERE { ?v2 <http://dbpedia.org/ontology/successor> ?result . ?v7 <http://dbpedia.org/ontology/child> ?v8 . ?v4 <http://dbpedia.org/ontology/child> ?v5 . <http://dbpedia.org/resource/Ercole_II_d'Este,_Duke_of_Ferrara> <http://dbpedia.org/ontology/parent> ?v1 . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v2 <http://dbpedia.org/property/father> ?v1 . ?result <http://dbpedia.org/ontology/spouse> ?v5 . ?v8 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v8 <http://dbpedia.org/ontology/successor> ?result . ?v4 <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Elizabeth_of_Austria_(1526–1545)> . <http://dbpedia.org/resource/Charles_Orlando,_Dauphin_of_France> <http://dbpedia.org/ontology/parent> ?v7 . }","```sparql
# Step 1: Identify Ercole II d'Este's parent
SELECT ?parent WHERE {
  wd:Q123456 wdt:P31/wdt:P279* wd:Q5; # Ercole II d'Este is a human
  wdt:P22 ?parent. # Parent of Ercole II d'Este
}

# Step 2: Find the child of Alfonso I d'Este (Alfonso I d'Este's children)
SELECT ?child WHERE {
  ?parent wdt:P31/wdt:P279* wd:Q5; # Alfonso I d'Este is a human
  wdt:P40 ?child. # Children of Alfonso I d'Este
}

# Step 3: Identify the successor of Lucrezia Borgia (considering siblings)
SELECT ?successor WHERE {
  ?child wdt:P31/wdt:P279* wd:Q5; # Child is a human
  wdt:P22 ?parent. # Parent of the child
  OPTIONAL { ?sibling wdt:P40 ?parent . } # Siblings of the child
  FILTER(?sibling != ?child)
  ?sibling wdt:P39/wdt:P279* wd:Q1184; # Sibling is a monarch
  wdt:P57 ?successor. # Successor of the sibling
}

# Step 4: Identify Charles Orlando's parent
SELECT ?parent WHERE {
  wd:Q654321 wdt:P31/wdt:P279* wd:Q5; # Charles Orlando is a human
  wdt:P22 ?parent. # Parent of Charles Orlando
}

# Step 5: Find the spouse of a child of Louis XIV
SELECT ?spouse WHERE {
  ?child wdt:P31/wdt:P279* wd:Q5;
  wdt:P22 wd:Q345678; # Louis XIV is the parent
  wdt:P26 ?spouse. # Spouse of the child
}

# Step 6: Identify the parent of Elizabeth of Austria (1526–1545)
SELECT ?parent WHERE {
  wd:Q876543 wdt:P31/wdt:P279* wd:Q5; # Elizabeth of Austria is a human
  wdt:P22 ?parent. # Parent of Elizabeth of Austria
}

# Step 7: Find a royalty child of Ferdinand I
SELECT ?child WHERE {
  ?parent wdt:P31/wdt:P279* wd:Q5;
  wdt:P40 ?child; # Children of Ferdinand I
  FILTER EXISTS { ?child wdt:P39/wdt:P279* wd:Q1184 } # Child is a monarch
}

# Step 8: Successor of Alfonso II d'Este (considering historical context)
SELECT ?successor WHERE {
  ?monarch wdt:P31/wdt:P279* wd:Q5;
  wdt:P39/wdt",9,11,10,3,3,3,3,71,0,0,1,0,0.0,0
976,59,test,"Give me the office of the leader, that is a politician, of the administration, that is an organisation, of Kemal Kılıçdaroğlu and office of the mayor, that is a politician and an office holder and Turkish, of the reference, that is an organisation and a political party and Turkish, to Millet İttifakı.","SELECT ?result WHERE { ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v4 <http://dbpedia.org/ontology/nationality> <http://dbpedia.org/resource/Turkey>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?v3 <http://dbpedia.org/ontology/leader> ?v1 . ?v3 <http://dbpedia.org/property/leader> <http://dbpedia.org/resource/Kemal_Kılıçdaroğlu> . ?v0 <http://xmlns.com/foaf/0.1/name> ""Millet İttifakı""@en . ?v0 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Turkey>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v0 <http://dbpedia.org/property/leader> ?v4 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/PoliticalParty>. ?v4 <http://dbpedia.org/property/office> ?result . ?v1 <http://dbpedia.org/property/office> ?result . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?kemalOffice ?mayorName ?mayorOffice
WHERE {
  # Find Kemal Kılıçdaroğlu's office within his administration (CHP)
  dbr:Kemal_Kılıçdaroğlu dbo:positionHeld ?position .
  ?position dbo:office ?kemalOffice .

  # Find mayors associated with Millet İttifakı
  ?mayor a dbo:Mayor ;
         dbo:memberOf ?party ;
         rdfs:label ?mayorName .
  
  FILTER (CONTAINS(LCASE(?mayorName), ""turkish"") && CONTAINS(LCASE(?party), ""millet ittifaki""))
  
  # Get the office of these mayors
  ?mayor dbo:positionHeld ?mayorPosition .
  ?mayorPosition dbo:office ?mayorOffice .

}
```",6,14,7,3,2,3,3,71,0,0,3,0,0.0,0
926,66,test,"Give me the father of the father of Abdulaziz and child of the father, that is a royalty, of the parent, that is a royalty, of Beyhan Sultan (daughter of Mustafa III) and successor of the child of Ahmed III.",SELECT ?result WHERE { ?v5 <http://dbpedia.org/property/father> ?v0 . ?v3 <http://dbpedia.org/property/father> ?result . <http://dbpedia.org/resource/Beyhan_Sultan_(daughter_of_Mustafa_III)> <http://dbpedia.org/ontology/parent> ?v5 . <http://dbpedia.org/resource/Abdulaziz> <http://dbpedia.org/property/father> ?v3 . ?v6 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Ahmed_III> . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v6 <http://dbpedia.org/ontology/successor> ?result . ?v0 <http://dbpedia.org/ontology/child> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?person WHERE {
  # Abdulaziz's father
  dbr:Abdul_Aziz_of_Saudi_Arabia dbo:father dbr:Abdul_Rahman_bin_Faisal_Al_Saud .
  
  # Father of Abdul Rahman bin Faisal Al Saud
  dbr:Abdul_Rahman_bin_Faisal_Al_Saud dbo:father dbr:Faisal_bin_Turki_Al_Saud .

  # Children of Faisal bin Turki Al Saud who are royalty
  ?person dbo:parent dbr:Faisal_bin_Turki_Al_Saud .
  ?person a dbo:Monarch .

  # Beyhan Sultan's parent (Mustafa III)
  dbr:Beyhan_Sultan dbo:father dbr:Mustafa_III .

  # Successor of the child of Ahmed III
  dbr:Ahmed_III dbo:child dbr:Mahmud_I .
  dbr:Osman_III dbo:predecessor dbr:Mahmud_I .

  # Parent of Osman III (royalty)
  dbr:Osman_III dbo:father dbr:Mustafa_II .

  # Child of Mustafa II
  dbr:Mustafa_II dbo:child dbr:Mustafa_III .
}
```",7,9,8,3,3,3,3,71,0,0,1,0,0.0,0
773,69,test,"Give me the parent of the child, that is a royalty, of the father, that is an office holder and a royalty, of Carloman of Bavaria and spouse of the father of the parent of Bernard (son of Charles the Fat) and parent of the successor of Charles the Bald.",SELECT ?result WHERE { ?v3 <http://dbpedia.org/ontology/spouse> ?result . ?v4 <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Bernard_(son_of_Charles_the_Fat)> . ?v2 <http://dbpedia.org/ontology/parent> ?result . ?v2 <http://dbpedia.org/property/father> ?v1 . ?result <http://dbpedia.org/ontology/child> ?v7 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. <http://dbpedia.org/resource/Carloman_of_Bavaria> <http://dbpedia.org/property/father> ?v1 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v4 <http://dbpedia.org/property/father> ?v3 . <http://dbpedia.org/resource/Charles_the_Bald> <http://dbpedia.org/ontology/successor> ?v7 . },"```sparql
SELECT ?parent WHERE {
  # Carloman of Bavaria's father
  wd:Q123456 wdt:P22 ?fatherOfCarloman .
  
  # Father's spouse (Hemma of Austria)
  ?fatherOfCarloman wdt:P26 ?spouseOfFather .

  # Bernard's parent and their parent
  wd:Q789012 wdt:P25 ?parentOfBernard .
  ?parentOfBernard wdt:P25 ?grandParentOfBernard .

  # Charles the Bald's successor and their parent
  wd:Q345678 wdt:P921 ?successorOfCharlesTheBald .
  ?successorOfCharlesTheBald wdt:P22 ?parentOfSuccessor .

  # Hemma of Austria's parent (Burchard III, Duke of Swabia)
  ?spouseOfFather wdt:P22 ?parentOfHemma .
  
  FILTER (?fatherOfCarloman = wd:Q987654) # Louis the German
  FILTER (?successorOfCharlesTheBald = wd:Q678901) # Louis II of West Francia
  FILTER (?parentOfBernard = wd:Q234567) # Richard the Justiciar
  FILTER (?grandParentOfBernard = wd:Q345678) # Boso of Provence
  FILTER (?parentOfSuccessor = wd:Q456789) # Charles the Bald

  SERVICE wikibase:label { bd:serviceParam wikibase:language ""[AUTO_LANGUAGE],en"". }
}
```",8,11,9,3,3,3,3,71,0,0,1,0,0.0,0
281,25,test,"Give me the awardee of Volunteer Decoration and commander in the war, that is an event and a military conflict, of Roy Boehm and awardee of the award, that is a military conflict, of Lawrence Moore Cosgrave.",SELECT ?result WHERE { ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?v3 <http://dbpedia.org/ontology/commander> ?result . ?result <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/Volunteer_Decoration> . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. <http://dbpedia.org/resource/Lawrence_Moore_Cosgrave> <http://dbpedia.org/property/awards> ?v4 . <http://dbpedia.org/resource/Roy_Boehm> <http://dbpedia.org/ontology/battle> ?v3 . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?result <http://dbpedia.org/property/awards> ?v4 . },"```sparql
# Query for Roy Boehm
SELECT ?person ?war WHERE {
  ?person dbo:award dbpedia:Volunteer_Decoration;
          dbo:commanderOf ?war.
  FILTER (str(?person) = ""Roy_Boehm"")
}

UNION

# Query for Lawrence Moore Cosgrave
SELECT ?person ?award ?conflict WHERE {
  ?person dbo:award ?award.
  ?award dbo:relatedEvent ?conflict.
  FILTER (str(?person) = ""Lawrence_Moore_Cosgrave"" && 
          rdf:type(?conflict, dbo:MilitaryConflict))
}
```",5,8,6,2,3,2,3,28,0,0,1,0,0.0,0
130,19,test,"Give me the figure known as the film, that is a soccer club and an organisation, of Candice Storey Lee and entity in the administration, that is American, of the award of Živko Ključe.",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/state> ?v4 . ?v4 <http://dbpedia.org/property/governor> ?v0 . ?result <http://dbpedia.org/property/nickname> ?v2 . ?v4 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/United_States>. <http://dbpedia.org/resource/Živko_Ključe> <http://dbpedia.org/property/awards> ?v0 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerClub>. ?v2 <http://dbpedia.org/ontology/director> <http://dbpedia.org/resource/Candice_Storey_Lee> . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?filmClubFigure WHERE {
  # Candice Storey Lee's roles in films and soccer clubs
  { 
    ?candice a dbo:Person ;
             foaf:name ""Candice Storey Lee"" .
    OPTIONAL { ?candice dbo:worksFor ?film . }
    OPTIONAL { ?candice dbo:memberOf ?soccerClub . }
  }

  # Živko Ključe's award and American administrative role
  {
    ?award a dbo:Award ;
           dbo:recipient ?zivko .
    ?zivko foaf:name ""Živko Ključe"" .
    OPTIONAL { ?americanAdmin dbo:administratorOf ?award . }
    ?americanAdmin foaf:nationality <http://dbpedia.org/resource/Category:American_people> .
  }

  # Find the common figure
  FILTER EXISTS {
    ?filmClubFigure = ?candice ;
                     = ?americanAdmin .
  }
}
```",5,8,6,3,2,3,2,20,0,0,1,0,0.0,0
773,70,test,"Give me the spouse of the father of Charles the Fat and parent of the successor of the child, that is a royalty, of Louis the Pious and parent of the child, that is a royalty, of the father, that is an office holder and a royalty, of Carloman of Bavaria.",SELECT ?result WHERE { ?v0 <http://dbpedia.org/ontology/successor> ?v7 . <http://dbpedia.org/resource/Carloman_of_Bavaria> <http://dbpedia.org/property/father> ?v1 . <http://dbpedia.org/resource/Charles_the_Fat> <http://dbpedia.org/property/father> ?v4 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?result <http://dbpedia.org/ontology/child> ?v7 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v4 <http://dbpedia.org/ontology/spouse> ?result . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. <http://dbpedia.org/resource/Louis_the_Pious> <http://dbpedia.org/ontology/child> ?v0 . ?v3 <http://dbpedia.org/ontology/parent> ?result . ?v3 <http://dbpedia.org/property/father> ?v1 . },"```sparql
SELECT ?spouse WHERE {
  ?charlesFat rdf:type dbo:Person ;
              foaf:name ""Charles the Fat""@en .
  ?louisGerman dbo:childOf ?charlesFat ;
               foaf:name ""Louis the German""@en .
  ?hemma waiblingen:Hemma_of_Waiblingen ;
          dbo:spouse ?louisGerman .

  ?lothairI dbo:successor ?childOfLouisPious ;
            foaf:name ""Lothair I""@en .
  ?louisPious dbo:parent ?lothairI ;
              foaf:name ""Louis the Pious""@en .
  ?ermengarde dbo:spouse ?louisPious ;
              foaf:name ""Ermengarde of Hesbaye""@en .

  ?carlomanBavaria dbo:childOf ?louisGerman ;
                   foaf:name ""Carloman of Bavaria""@en .
}
```",8,12,9,3,3,3,3,71,0,0,1,0,0.0,0
47,63,test,"Give me the office of the awardee of Padma Vibhushan and office of the administration of the commander, that is a politician, in Operation Green Hunt and office of the awardee of Banga Bhushan.",SELECT ?result WHERE { ?v3 <http://dbpedia.org/property/governor> ?v4 . ?v3 <http://dbpedia.org/property/office> ?result . ?v6 <http://dbpedia.org/property/office> ?result . ?v2 <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/Padma_Vibhushan> . ?v6 <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/Banga_Bhushan> . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. <http://dbpedia.org/resource/Operation_Green_Hunt> <http://dbpedia.org/ontology/commander> ?v4 . ?v2 <http://dbpedia.org/property/office> ?result . },"```sparql
# Query for Padma Vibhushan awardee's office
SELECT ?person ?office WHERE {
  ?person dbo:award dbp:Padma_Vibhushan .
  OPTIONAL { ?person dbo:occupation ?office . }
}

UNION

# Query for politician involved in Operation Green Hunt and their office
SELECT ?person ?office WHERE {
  ?person dbo:occupation dbp:Politician ;
          dbo:participatedIn dbp:Operation_Green_Hunt .
  OPTIONAL { ?person dbo:office ?office . }
}

UNION

# Query for Banga Bhushan awardee's office
SELECT ?person ?office WHERE {
  ?person dbo:award dbp:Banga_Bhushan ;
          OPTIONAL { ?person dbo:occupation ?office . }
}
```",7,8,8,3,3,3,3,71,0,0,1,0,0.0,0
965,67,test,"Give me the spouse of Prince Louis of Battenberg and parent of the person born, that is a noble, as the birth name of George Mountbatten, 2nd Marquess of Milford Haven and parent of the child, that is a royalty, of the person born, that is a politician, on 1854-05-24.","SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?result <http://dbpedia.org/ontology/spouse> <http://dbpedia.org/resource/Prince_Louis_of_Battenberg> . ?v5 <http://dbpedia.org/property/father> ?v1 . ?v5 <http://dbpedia.org/ontology/parent> ?result . ?v1 <http://dbpedia.org/ontology/birthDate> ""1854-05-24""^^<http://www.w3.org/2001/XMLSchema#date> . ?v0 <http://dbpedia.org/property/birthName> ?v4 . ?v0 <http://dbpedia.org/ontology/parent> ?result . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Noble>. ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. <http://dbpedia.org/resource/George_Mountbatten,_2nd_Marquess_of_Milford_Haven> <http://dbpedia.org/property/birthName> ?v4 . }","```sparql
SELECT ?spouse WHERE {
  ?person dbo:familyName ""Battenberg""@en .
  ?person dbo:givenName ""Louis""@en .
  ?person dbo:spouse ?spouse .
}

UNION

SELECT ?child WHERE {
  ?parent dbo:birthName ?name .
  ?parent rdfs:label ""George Mountbatten, 2nd Marquess of Milford Haven""@en .
  ?parent dbo:child ?child .
}

UNION

SELECT ?politicianChild WHERE {
  ?politician dbo:birthDate ""1854-05-24""^^xsd:date .
  ?politician rdfs:label ?politicianLabel .
  FILTER(CONTAINS(LCASE(?politicianLabel), ""politician""))
  ?politician dbo:child ?parent .
  ?parent dbo:child ?politicianChild .
}

UNION

SELECT ?spouse WHERE {
  ?person dbo:birthName ?name .
  ?person rdfs:label ""George Mountbatten, 2nd Marquess of Milford Haven""@en .
  ?person dbo:child ?child .
  ?child dbo:parent ?politicianChild .
  ?person dbo:spouse ?spouse .
}
```",7,10,8,3,3,3,3,71,0,0,1,0,0.0,0
216,60,test,"Give me the player in the coach of the reference, that is an organisation and a soccer club, to Croatia U21 and team of the person born, that is a sports manager and a soccer manager and a soccer player, on the death of Pavel Vezhinov.","SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/birthDate> ?v0 . ?v3 <http://dbpedia.org/ontology/coach> ?v2 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerManager>. ?v2 <http://dbpedia.org/ontology/team> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerPlayer>. ?v3 <http://xmlns.com/foaf/0.1/name> ""Croatia U21""@en . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsManager>. <http://dbpedia.org/resource/Pavel_Vezhinov> <http://dbpedia.org/ontology/deathDate> ?v0 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerClub>. ?result <http://dbpedia.org/ontology/coach> ?v1 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?player WHERE {
  # Find the organisation that is also a soccer club related to Croatia U21
  ?club dbo:type/dbo:subClassOf* dbo:SoccerClub ;
        dbo:nationality dbr:Croatia ;
        dbo:team dbr:Croatia_U21 .

  # Identify the person who is a sports manager, soccer manager, and player
  ?person dbo:occupation dbr:Sports_manager ;
          dbo:occupation dbr:Soccer_manager ;
          dbo:occupation dbr:Soccer_player ;
          dbo:managerTeam ?club .

  # Link to Pavel Vezhinov's death (assuming there is a direct or indirect reference)
  OPTIONAL {
    ?event dbo:deathOf dbr:Pavel_Vezhinov .
    ?person dbo:relatedEvent ?event .
  }

  # Return the player
  BIND(?person AS ?player)
}
```",6,11,7,3,2,3,3,71,0,0,1,0,0.0,0
645,63,test,"Give me the leader of the office, that is a government agency and an organisation, of Camilo Menéndez Tolosa and commander in the force of the commander in Siege of Madrid and military force of the force, that is an event and a military conflict and a societal event, of Francisco Largo Caballero.",SELECT ?result WHERE { <http://dbpedia.org/resource/Camilo_Menéndez_Tolosa> <http://dbpedia.org/property/office> ?v2 . ?v3 <http://dbpedia.org/ontology/commander> ?v4 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/GovernmentAgency>. ?v6 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v6 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?v2 <http://dbpedia.org/ontology/leader> ?result . ?v3 <http://dbpedia.org/ontology/commander> ?result . <http://dbpedia.org/resource/Siege_of_Madrid> <http://dbpedia.org/ontology/commander> ?v4 . ?v6 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?result <http://dbpedia.org/ontology/battle> ?v6 . ?v6 <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Francisco_Largo_Caballero> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?leader WHERE {
  # Find the organization or agency where Camilo Menéndez Tolosa was a leader
  ?organization dbo:leader dbr:Camilo_Menéndez_Tolosa .
  
  # Find the military force involved in the Siege of Madrid
  ?siegeEvent dbo:militaryForce ?militaryForce .
  FILTER (str(?siegeEvent) = ""Siege_of_Madrid""^^xsd:string)
  
  # Find the commander of that military force who is also linked to Francisco Largo Caballero
  ?militaryForce dbo:commander ?leader .
  ?leader dbo:memberOf ?organization .
  
  # Ensure the leader is connected to Francisco Largo Caballero
  ?franciscoRole dbo:agent dbr:Francisco_Largo_Caballero .
  ?franciscoRole dbo:place ?siegeEvent .
}
```",7,12,8,3,3,3,3,71,0,0,1,0,0.0,0
267,19,test,"Give me the coach of the player, that is a soccer club, in Rasoul Khatibi and person born on the birth date of the reference to Dan Cathy.","SELECT ?result WHERE { <http://dbpedia.org/resource/Rasoul_Khatibi> <http://dbpedia.org/ontology/team> ?v2 . ?v2 <http://dbpedia.org/ontology/coach> ?result . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerClub>. ?result <http://dbpedia.org/ontology/birthDate> ?v4 . ?v0 <http://xmlns.com/foaf/0.1/name> ""Dan Cathy""@en . ?v0 <http://dbpedia.org/ontology/birthDate> ?v4 . }","```sparql
# Step 1: Get Rasoul Khatibi's birth date
SELECT ?birthDate WHERE {
  dbpedia:Rasoul_Khatibi dbo:birthDate ?birthDate .
}

# Step 2: Find a person born on the same date as Dan Cathy
SELECT DISTINCT ?person WHERE {
  ?person dbo:birthDate ?date .
  FILTER (?date = (SELECT ?cathyBirthDate WHERE { dbpedia:Dan_Cathy dbo:birthDate ?cathyBirthDate }))
}

# Step 3: Check if this person is associated with a soccer club
SELECT DISTINCT ?soccerClub WHERE {
  ?person dbo:member ?team .
  ?team rdf:type dbo:Soccer_Club .
}

# Step 4: Find the coach of that soccer club
SELECT DISTINCT ?coach WHERE {
  ?soccerClub dbo:coach ?coach .
}
```",5,6,6,3,2,3,2,20,0,0,1,0,0.0,0
417,60,test,"Give me the child of the child, that is a royalty, of the parent, that is a royalty, of Alexandrine of Mecklenburg-Schwerin and spouse of the parent, that is a royalty, of the child of Knud, Hereditary Prince of Denmark.","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/spouse> ?v2 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. <http://dbpedia.org/resource/Alexandrine_of_Mecklenburg-Schwerin> <http://dbpedia.org/ontology/parent> ?v0 . ?v1 <http://dbpedia.org/property/father> ?v0 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?result <http://dbpedia.org/ontology/parent> ?v1 . ?v2 <http://dbpedia.org/ontology/child> ?v3 . ?v3 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Knud,_Hereditary_Prince_of_Denmark> . }","```sparql
# Step 1: Find Alexandrine of Mecklenburg-Schwerin's parent who is royalty
SELECT ?parent WHERE {
  wd:Q123456 wdt:P22 ?parent .
  ?parent wdt:P31/wdt:P279* wd:Q5 . # Ensure the parent is a human (royalty)
}

# Step 2: Find Alexandrine's spouse who is royalty
SELECT ?spouse WHERE {
  wd:Q123456 wdt:P26 ?spouse .
  ?spouse wdt:P31/wdt:P279* wd:Q5 . # Ensure the spouse is a human (royalty)
}

# Step 3: Identify Knud, Hereditary Prince of Denmark's child
SELECT ?child WHERE {
  wd:Q654321 wdt:P40 ?child .
}

# Step 4: Determine the parent of Knud's child who is royalty
SELECT ?parent WHERE {
  ?child wdt:P22 ?parent .
  ?parent wdt:P31/wdt:P279* wd:Q5 . # Ensure the parent is a human (royalty)
}

# Step 5: Find the spouse of this parent
SELECT ?spouse WHERE {
  ?parent wdt:P26 ?spouse .
  ?spouse wdt:P31/wdt:P279* wd:Q5 . # Ensure the spouse is a human (royalty)
}

# Step 6: Identify the child of this spouse who is royalty
SELECT ?child WHERE {
  ?spouse wdt:P40 ?child .
  ?child wdt:P31/wdt:P279* wd:Q5 . # Ensure the child is a human (royalty)
}

# Step 7: Determine the child of this child who is royalty
SELECT ?grandchild WHERE {
  ?child wdt:P40 ?grandchild .
  ?grandchild wdt:P31/wdt:P279* wd:Q5 . # Ensure the grandchild is a human (royalty)
}
```

Note: Replace `wd:Q123456` with Alexandrine of Mecklenburg-Schwerin's DBpedia ID and `wd:Q654321` with Knud, Hereditary Prince of Denmark's DBpedia ID. The queries assume that the properties used (`P22` for parent, `P26` for spouse, `P40` for child) are correct according to DBpedia's schema.",6,9,7,3,2,3,3,71,0,0,1,0,0.0,0
892,68,test,"Give me the landmark at elevation of the award of the member of E-girls and entity in the profession of the true self of Enrico Crolla and entity in the administration, that is Italian and a region and a settlement and an administrative region, of Democratic Party (Italy).","SELECT ?result WHERE { ?v4 <http://dbpedia.org/property/occupation> ?v2 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. ?v1 <http://dbpedia.org/property/awards> ?v6 . ?v0 <http://dbpedia.org/property/leaderParty> <http://dbpedia.org/resource/Democratic_Party_(Italy)> . ?v4 <http://xmlns.com/foaf/0.1/givenName> ""Enrico Crolla""@en . ?v0 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Italy>. <http://dbpedia.org/resource/E-girls> <http://dbpedia.org/ontology/bandMember> ?v1 . ?result <http://dbpedia.org/ontology/elevation> ?v6 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Region>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/AdministrativeRegion>. ?result <http://dbpedia.org/ontology/country> ?v2 . ?result <http://dbpedia.org/ontology/province> ?v0 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?landmark WHERE {
  # Step 1: Identify the member of E-girls
  VALUES ?eGirlMember { dbr:Lisa_Horie } # Assuming Lisa Horie as an example

  # Step 2: Find the award associated with this member
  ?award dbo:recipient ?eGirlMember .
  
  # Step 3: Determine the elevation of the landmark associated with this award
  ?landmark dbo:elevation ?elevation .
  ?award dbo:elevation ?sameElevation .
  FILTER (?elevation = ?sameElevation)

  # Step 4: Identify Enrico Crolla's true self profession
  dbr:Enrico_Crolla dbo:occupation ?profession .

  # Step 5: Find an entity in administration associated with this profession
  ?adminEntity dbo:occupation ?profession .
  ?adminEntity dbo:country dbr:Italy .

  # Step 6 & 7: Identify Italian regions and settlements connected to the Democratic Party
  ?region a dbo:Region ;
          dbo:country dbr:Italy ;
          dbo:settlement ?settlement ;
          dbo:administrativeRegion ?adminRegion .
  
  ?settlement dbo:politicalParty dbr:Democratic_Party_(Italy) .

  # Step 8: Combine all elements
  FILTER EXISTS { ?region rdfs:label ?landmarkLabel }
}
```",8,12,9,3,3,3,3,71,0,0,2,0,0.0,0
933,63,test,"Give me the reference to the birth name of Alan Warner (musician) and band of the band, that is a group and a band and an organisation, of Alan Warner (musician) and band of the band of the band, that is an artist and a musical artist, of The Ramong Sound.",SELECT ?result WHERE { ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Band>. ?v3 <http://dbpedia.org/ontology/associatedMusicalArtist> ?v1 . <http://dbpedia.org/resource/The_Ramong_Sound> <http://dbpedia.org/ontology/associatedMusicalArtist> ?v3 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. ?result <http://xmlns.com/foaf/0.1/name> ?v5 . ?v0 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v1 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . <http://dbpedia.org/resource/Alan_Warner_(musician)> <http://dbpedia.org/property/birthName> ?v5 . <http://dbpedia.org/resource/Alan_Warner_(musician)> <http://dbpedia.org/ontology/associatedMusicalArtist> ?v0 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Group>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT ?birthName ?band ?theRamongSoundArtist WHERE {
  # Find Alan Warner (musician)
  ?alanWarner a dbo:MusicalArtist ;
              foaf:name ""Alan Warner"" .

  # Get his birth name
  OPTIONAL { ?alanWarner foaf:givenName ?firstName . }
  OPTIONAL { ?alanWarner foaf:familyName ?lastName . }
  BIND(CONCAT(?firstName, "" "", ?lastName) AS ?birthName)

  # Find the band associated with Alan Warner
  ?band a dbo:MusicalBand ;
        dbo:musicalArtist ?alanWarner .
  
  # Ensure the band is recognized as an organization and group
  ?band rdf:type dbo:Organization .

  # Identify The Ramong Sound's artist association
  ?theRamongSoundArtist a dbo:MusicalArtist ;
                        foaf:name ""The Ramong Sound"" .

  # Ensure The Ramong Sound is recognized as an artist and musical artist
  ?theRamongSoundArtist rdf:type dbo:Artist .
}
```",7,12,8,3,3,3,3,71,0,0,1,0,0.0,0
382,19,test,"Give me the landmark at elevation of the award of the reference, that is a college coach and a coach, to Harry Combes and birthplace of the manager, that is a soccer manager and an athlete and a sports manager, of Bonner SC.","SELECT ?result WHERE { ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Coach>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsManager>. ?result <http://dbpedia.org/ontology/elevation> ?v4 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerManager>. <http://dbpedia.org/resource/Bonner_SC> <http://dbpedia.org/ontology/manager> ?v2 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/CollegeCoach>. ?v2 <http://dbpedia.org/ontology/birthPlace> ?result . ?v0 <http://xmlns.com/foaf/0.1/name> ""Harry Combes""@en . ?v0 <http://dbpedia.org/property/awards> ?v4 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Athlete>. }","```sparql
# Step 1: Identify Harry Combes and his award
SELECT ?award WHERE {
  ?person rdfs:label ""Harry Combes""@en .
  ?person dbo:occupation dbr:College_coach ;
          dbo:occupation dbr:Coach .
  ?person dbo:honorReceived ?award .
}

# Step 2: Find the elevation of the award and landmark
SELECT ?landmark WHERE {
  ?award dbo:elevation ?elevation .
  ?landmark geo:hasElevation ?elevation ;
           rdf:type dbo:Lighthouse .
}

# Step 3: Identify the manager of Bonner SC
SELECT ?manager WHERE {
  ?team rdfs:label ""Bonner SC""@en .
  ?team dbo:coach ?manager .
  ?manager dbo:occupation dbr:Soccer_manager ;
           dbo:occupation dbr:Athlete ;
           dbo:occupation dbr:Sports_manager .
}

# Step 4: Find the birthplace of this manager
SELECT ?birthPlace WHERE {
  ?manager dbo:birthPlace ?birthPlace .
}
```",5,10,6,3,2,3,2,20,0,0,1,0,0.0,0
865,60,test,"Give me the native of the residence, that is a country, of the person decedent at Patna and father of the child of the father of Abul Maal Abdul Muhith.",SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/deathPlace> <http://dbpedia.org/resource/Patna> . ?v1 <http://dbpedia.org/property/residence> ?v0 . <http://dbpedia.org/resource/Abul_Maal_Abdul_Muhith> <http://dbpedia.org/property/father> ?v5 . ?result <http://dbpedia.org/ontology/birthPlace> ?v0 . ?v2 <http://dbpedia.org/property/father> ?v5 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. ?v2 <http://dbpedia.org/property/father> ?result . },"```sparql
SELECT ?native WHERE {
  # Step 1: Find Abul Maal Abdul Muhith's father
  ?person dbo:birthName ""Abul Maal Abdul Muhith""@en .
  ?person dbo:father ?father .

  # Step 2: Identify the residence of his father as a country
  ?father dbo:residence ?countryResidence .
  ?countryResidence rdf:type dbo:Country .

  # Step 3: Find the native place associated with this country
  ?countryResidence dbo:nativePlace ?native .
}
```",6,7,7,3,2,3,3,71,0,0,1,0,0.0,0
465,58,test,"Give me the spouse of the child, that is a royalty, of Ferdinand I, Holy Roman Emperor and successor of Ercole II d'Este, Duke of Ferrara and successor of the child, that is a royalty, of the parent of Charles Orlando, Dauphin of France.","SELECT ?result WHERE { ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. <http://dbpedia.org/resource/Charles_Orlando,_Dauphin_of_France> <http://dbpedia.org/ontology/parent> ?v1 . <http://dbpedia.org/resource/Ercole_II_d'Este,_Duke_of_Ferrara> <http://dbpedia.org/ontology/successor> ?result . ?v1 <http://dbpedia.org/ontology/child> ?v2 . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. <http://dbpedia.org/resource/Ferdinand_I,_Holy_Roman_Emperor> <http://dbpedia.org/ontology/child> ?v5 . ?v2 <http://dbpedia.org/ontology/successor> ?result . ?result <http://dbpedia.org/ontology/spouse> ?v5 . }","```sparql
# Step 1: Find Ferdinand I's children who are royalty
SELECT ?child WHERE {
    ?ferdinand dbo:spouse ?parent .
    ?parent foaf:name ""Ferdinand I, Holy Roman Emperor"" .
    ?child dbo:parent ?parent ;
           rdf:type dbo:Monarch .
}

# Step 2: Find Ercole II d'Este's successor and their royal child
SELECT ?successorChild WHERE {
    ?ercole dbo:succeededBy ?successor .
    ?ercole foaf:name ""Ercole II d'Este, Duke of Ferrara"" .
    ?successorChild dbo:parent ?successor ;
                    rdf:type dbo:Monarch .
}

# Step 3: Find the parent of Charles Orlando and their royal child
SELECT ?charlesParent WHERE {
    ?charles foaf:name ""Charles Orlando, Dauphin of France"" .
    ?charles dbo:parent ?charlesParent .
}
SELECT ?royalChild WHERE {
    ?charlesParent dbo:child ?royalChild ;
                   rdf:type dbo:Monarch .
}

# Step 4: Find the spouse of the relevant royal child
SELECT DISTINCT ?spouse WHERE {
    VALUES (?child) { 
        # Replace with actual URIs or names found from previous queries
    }
    ?child dbo:spouse ?spouse .
}
```

Note: The query above is a template and requires specific URIs or names to be filled in based on the results of each sub-query. This involves iterative querying and manual verification due to the complexity and potential ambiguities in historical records.",6,8,7,3,3,3,3,71,0,0,1,0,0.0,0
582,58,test,"Give me the player in the father, that is an athlete and a soccer manager and a sports manager, of Masami Nagasawa and reference to Japan and figure known as the nickname of the team, that is an organisation, of Hajime Moriyasu.","SELECT ?result WHERE { ?v5 <http://dbpedia.org/ontology/team> ?result . ?v1 <http://dbpedia.org/property/nickname> ?v2 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. <http://dbpedia.org/resource/Masami_Nagasawa> <http://dbpedia.org/property/father> ?v5 . ?v1 <http://dbpedia.org/ontology/coach> <http://dbpedia.org/resource/Hajime_Moriyasu> . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsManager>. ?result <http://xmlns.com/foaf/0.1/name> ""Japan""@en . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerManager>. ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Athlete>. ?result <http://dbpedia.org/property/nickname> ?v2 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?father ?teamNickname WHERE {
  # Find Masami Nagasawa's father
  ?nagasawa a dbo:Person ;
            foaf:name ""Masami Nagasawa""@en ;
            dbo:parent ?father .

  # Ensure the father is an athlete, soccer manager, and sports manager
  ?father a dbo:Athlete ;
          a dbo:SoccerManager ;
          a dbo:SportsManager ;
          dbo:nationality dbr:Japan .

  # Find Hajime Moriyasu's team nickname
  ?moriyasu a dbo:Person ;
            foaf:name ""Hajime Moriyasu""@en ;
            dbo:managerOf ?team .
  
  ?team dbo:officialName ?teamNickname ;
        dbo:nationality dbr:Japan .

  # Link the father to the team nickname
  ?father dbp:nickname ?teamNickname .
}
```",6,10,7,3,3,3,3,71,0,0,1,0,0.0,0
715,56,test,"Give me the commander in the force, that is a military conflict, of Abd el-Krim and commander in Spanish Civil War and leader of the office, that is a government agency and an organisation, of the reference to Carlos Franco Iribarnegaray.","SELECT ?result WHERE { ?v0 <http://xmlns.com/foaf/0.1/name> ""Carlos Franco Iribarnegaray""@en . ?v0 <http://dbpedia.org/property/office> ?v1 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/GovernmentAgency>. ?v2 <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Abd_el-Krim> . ?v2 <http://dbpedia.org/ontology/commander> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. <http://dbpedia.org/resource/Spanish_Civil_War> <http://dbpedia.org/ontology/commander> ?result . ?v1 <http://dbpedia.org/ontology/leader> ?result . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?abdElKrimRole ?spanishCivilWarCommander ?carlosFrancoRole
WHERE {
  # Abd el-Krim's role in the Rif War
  dbr:Abd_el-Krim dbo:militaryConflict dbr:Rif_War .
  dbr:Rif_War dbo:commander ?abdElKrimRole .

  # Commanders in the Spanish Civil War
  OPTIONAL {
    ?spanishCivilWarCommander dbo:militaryConflict dbr:Spanish_Civil_War .
  }

  # Carlos Franco Iribarnegaray's role
  dbr:Carlos_Franco_Iribarnegaray dbo:leaderOf ?office .
  ?office a dbo:GovernmentAgency ;
         a dbo:Organization .

  OPTIONAL {
    ?carlosFrancoRole rdfs:label ""Carlos Franco Iribarnegaray""@en .
  }
}
```",6,9,7,3,3,3,3,71,0,0,1,0,0.0,0
433,64,test,"Give me the professional in the profession of the writer of Slowhand at 70 – Live at the Royal Albert Hall and associated musical artist of Bill Evans and associated musical artist of the person born, that is a musical artist and an artist, as the persona of Paul Chambers.",SELECT ?result WHERE { ?result <http://dbpedia.org/property/occupation> ?v1 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. <http://dbpedia.org/resource/Paul_Chambers> <http://xmlns.com/foaf/0.1/givenName> ?v3 . <http://dbpedia.org/resource/Slowhand_at_70_–_Live_at_the_Royal_Albert_Hall> <http://dbpedia.org/property/writer> ?v0 . ?v2 <http://dbpedia.org/property/birthName> ?v3 . ?v0 <http://dbpedia.org/property/occupation> ?v1 . <http://dbpedia.org/resource/Bill_Evans> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v2 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?artist WHERE {
  VALUES ?album { dbr:Slowhand_at_70_%E2%80%93_Live_at_the_Royal_Albert_Hall }
  ?album dbo:composer dbr:Eric_Clapton .
  
  OPTIONAL {
    ?billEvansArtist dbo:associatedBandOrMusicalArtist dbr:Miles_Davis ;
                     dbo:associatedBandOrMusicalArtist dbr:Bill_Evans .
    ?milesDavisArtist dbo:associatedBandOrMusicalArtist dbr:Miles_Davis .
    FILTER(?billEvansArtist = ?milesDavisArtist)
  }
  
  OPTIONAL {
    ?paulChambersArtist dbo:associatedBandOrMusicalArtist dbr:Paul_Chambers ;
                        dbo:associatedBandOrMusicalArtist ?artist .
    FILTER(?paulChambersArtist = ?artist)
  }

  ?person dbo:birthName ""Eric Patrick Clapton""@en ;
          a dbo:Musician, dbo:Artist .

  FILTER(?artist = ?person)
}
```",7,9,8,3,3,3,3,71,0,0,1,0,0.0,0
573,70,test,"Give me the person decedent at the residence, that is a settlement, of the professional, that is American, in Politician and parent of the author, that is a politician and an office holder, of the work of John Quincy Adams and person decedent at the administration, that is a region, of Charlie Baker.","SELECT ?result WHERE { ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v0 <http://dbpedia.org/property/occupation> ""Politician""@en . ?result <http://dbpedia.org/ontology/deathPlace> ?v4 . ?v7 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. ?v0 <http://dbpedia.org/property/residence> ?v7 . ?v1 <http://dbpedia.org/property/author> ?v3 . ?v3 <http://dbpedia.org/ontology/parent> ?result . ?v0 <http://dbpedia.org/ontology/nationality> <http://dbpedia.org/resource/United_States>. ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Region>. ?v4 <http://dbpedia.org/property/governor> ""Charlie Baker""@en . ?v1 <http://dbpedia.org/property/author> <http://dbpedia.org/resource/John_Quincy_Adams> . ?result <http://dbpedia.org/ontology/deathPlace> ?v7 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?personDecedentAtResidence WHERE {
  # Step 1: Identify John Quincy Adams' work
  ?work dbo:author dbr:John_Quincy_Adams .
  
  # Step 2: Find the author of that work
  ?work dbo:author ?author .

  # Step 3: Determine the parent of the author who is a politician and office holder
  ?parent dbo:child ?author ;
          rdf:type dbo:Politician ;
          dbo:officeHolder ?office .
  
  # Step 4: Identify Charlie Baker's administration
  ?administration dbo:administrator dbr:Charlie_Baker .

  # Step 5: Find the person decedent at that administration
  ?decedentAtAdmin dbo:decedentAt ?administration ;
                   rdf:type dbo:Person .
  
  # Step 6: Determine the residence of the professional (parent) who is American and works in politics
  ?residence dbo:settlementOf ?professional ;
             rdf:type dbo:Settlement .
  ?professional dbo:nationality dbr:United_States ;
                dbo:occupation dbo:Politician ;
                dbo:child ?parent .

  # Step 7: Identify the person decedent at that residence
  ?personDecedentAtResidence dbo:decedentAt ?residence .
}
```",8,13,9,3,3,3,3,71,0,0,2,0,0.0,0
102,20,test,"Give me the native of the residence, that is English and a settlement, of the resident, that is an athlete, of Dewsbury and manager of the player in the member, that is a soccer player, of England women's national football team.",SELECT ?result WHERE { ?v4 <http://dbpedia.org/property/residence> ?v5 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerPlayer>. ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Athlete>. ?v2 <http://dbpedia.org/ontology/manager> ?result . ?result <http://dbpedia.org/ontology/birthPlace> ?v5 . ?v4 <http://dbpedia.org/ontology/residence> <http://dbpedia.org/resource/Dewsbury> . ?v5 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/United_Kingdom>. ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. ?v1 <http://dbpedia.org/ontology/team> <http://dbpedia.org/resource/England_women's_national_football_team> . ?v1 <http://dbpedia.org/ontology/team> ?v2 . },"```sparql
SELECT DISTINCT ?nativeLanguage WHERE {
  ?player dbo:memberOf dbr:England_women's_national_football_team .
  ?manager dbo:manages ?player .
  ?manager dbo:residence ?residence .
  ?residence rdfs:label ""Dewsbury""@en .
  ?residence dbo:type dbr:Settlement .
  ?athlete dbo:name ?manager ;
           dbo:nationality dbr:United_Kingdom .
  ?residence dbo:language ?nativeLanguage .
  FILTER (lang(?nativeLanguage) = 'en' && strstarts(str(?nativeLanguage), ""English""))
}
```",6,10,7,3,2,3,2,20,0,0,1,0,0.0,0
192,19,test,"Give me the spouse of the spouse, that is a royalty, of Charles Martel of Anjou and child of the child of the parent of Anna of Hungary (Byzantine empress).",SELECT ?result WHERE { ?v0 <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Anna_of_Hungary_(Byzantine_empress)> . ?v2 <http://dbpedia.org/ontology/spouse> <http://dbpedia.org/resource/Charles_Martel_of_Anjou> . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v4 <http://dbpedia.org/property/father> ?v0 . ?v2 <http://dbpedia.org/ontology/spouse> ?result . ?result <http://dbpedia.org/ontology/parent> ?v4 . },"```sparql
SELECT ?finalPerson WHERE {
  # Step 1: Identify Anna of Hungary (Byzantine empress)
  dbpedia:Anna_of_Hungary_(Byzantine_empress) dbo:parent ?annaParent .

  # Step 2: Find the parent of Anna of Hungary
  ?annaParent a dbo:Person .

  # Step 3: Determine the child of the parent of Anna (could be Anna or another sibling)
  ?annaParent dbo:child ?annaChild .
  
  # Step 4: Identify Charles Martel of Anjou's spouse
  dbpedia:Charles_Martel_of_Anjou dbo:spouse ?charlesSpouse .

  # Step 5: Find the spouse of Charles Martel's spouse
  ?charlesSpouse dbo:spouse ?finalPerson .

  # Step 6: Check if this person is royalty
  ?finalPerson a dbo:Monarch .
}
```",5,6,6,3,2,3,2,20,0,0,1,0,0.0,0
456,57,test,"Give me the spouse of Danielle Spencer (Australian actress) and band of the band, that is a musical artist, of Dean Brody and professional in the alter ego of the reference, that is a fictional character, to Lamont Cranston (radio, film and television).","SELECT ?result WHERE { ?v0 <http://dbpedia.org/property/alterEgo> ?v5 . <http://dbpedia.org/resource/Dean_Brody> <http://dbpedia.org/ontology/associatedMusicalArtist> ?v3 . <http://dbpedia.org/resource/Danielle_Spencer_(Australian_actress)> <http://dbpedia.org/ontology/spouse> ?result . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?v0 <http://xmlns.com/foaf/0.1/name> ""Lamont Cranston (radio, film and television)""@en . ?result <http://dbpedia.org/property/occupation> ?v5 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/FictionalCharacter>. ?v3 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?spouse ?band ?alterEgo ?profession 
WHERE {
  # Spouse of Danielle Spencer
  dbr:Danielle_Spencer (dbo:spouse) ?spouse .

  # Band associated with Dean Brody
  dbr:Dean_Brody dbo:musicalArtist ?band .

  # Alter ego of Lamont Cranston
  dbr:Lamont_Cranston dbo:fictionalAlterEgo ?alterEgo .
  
  # Profession of The Shadow (alter ego)
  ?alterEgo dbo:profession ?profession .
}
```",6,8,7,3,3,3,3,71,0,0,1,0,0.0,0
274,28,test,"Give me the professional in the designer of Tetris Classic and band member of the person born, that is a musical artist, as John Birks Gillespie and associated musical artist of the actor, that is a musical artist, of Imagine the Sound.","SELECT ?result WHERE { ?v5 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?result <http://dbpedia.org/ontology/associatedMusicalArtist> ?v1 . <http://dbpedia.org/resource/Imagine_the_Sound> <http://dbpedia.org/property/starring> ?v5 . ?v1 <http://dbpedia.org/property/birthName> ""John Birks Gillespie""@en . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. <http://dbpedia.org/resource/Tetris_Classic> <http://dbpedia.org/property/designer> ?v3 . ?result <http://dbpedia.org/property/occupation> ?v3 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. }","```sparql
# Step 1: Get Dizzy Gillespie's band members
SELECT ?bandMember WHERE {
  ?gillespie dbo:birthName ""John Birks Gillespie""@en .
  ?gillespie dbo:member ?band .
  ?band dbo:member ?bandMember .
}

UNION

# Step 2: Find designers of Tetris Classic
SELECT ?designer WHERE {
  ?tetris dcterms:title ""Tetris Classic""@en ;
          dbo:creator ?designer .
}

# Step 3: Identify overlap between band members and designers
SELECT DISTINCT ?commonPerson WHERE {
  { 
    # Dizzy Gillespie's band members
    ?gillespie dbo:birthName ""John Birks Gillespie""@en .
    ?gillespie dbo:member ?band .
    ?band dbo:member ?commonPerson .
  }
  
  UNION
  
  {
    # Designers of Tetris Classic
    ?tetris dcterms:title ""Tetris Classic""@en ;
            dbo:creator ?commonPerson .
  }
}

# Step 4: Find actors in ""Imagine the Sound"" who are musical artists
SELECT ?actor WHERE {
  ?soundWork dcterms:title ""Imagine the Sound""@en ;
             dbo:performer ?actor .
  ?actor a dbo:MusicalArtist .
}

# Step 5: Find associated musical artists with those actors
SELECT DISTINCT ?associatedArtist WHERE {
  ?actor a dbo:MusicalArtist .
  ?actor dbo:associatedWith ?associatedArtist .
}
```",6,8,7,2,3,2,3,28,0,0,3,0,0.0,0
274,27,test,"Give me the associated musical artist of the actor, that is a musical artist, of Imagine the Sound and band member of Dizzy Gillespie and professional in the designer of Tetris Classic.",SELECT ?result WHERE { ?result <http://dbpedia.org/property/occupation> ?v3 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?v0 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . <http://dbpedia.org/resource/Imagine_the_Sound> <http://dbpedia.org/property/starring> ?v0 . ?result <http://dbpedia.org/ontology/associatedMusicalArtist> <http://dbpedia.org/resource/Dizzy_Gillespie> . <http://dbpedia.org/resource/Tetris_Classic> <http://dbpedia.org/property/designer> ?v3 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?actor WHERE {
  # Step 1: Find the actor associated with ""Imagine the Sound""
  ?sound dbr:Imagine_the_Sound .
  
  # Assuming there is a property linking soundtracks to actors
  ?sound dbo:performer ?actor .

  # Step 2: Check if this actor is also a musical artist and band member of Dizzy Gillespie
  ?actor dbo:musicalArtist true .
  ?gillespieBand dbr:Dizzy_Gillespie .
  ?gillespieBand dbo:bandMember ?actor .

  # Step 3: Verify professional involvement in designing ""Tetris Classic""
  ?tetrisDesigner dbr:Tetris_Classic .
  ?tetrisDesigner dbo:designer ?actor .
}
```",5,6,6,2,3,2,3,28,0,0,3,0,0.0,0
926,65,test,"Give me the successor of the child of the spouse of Şermi Kadın and father of the father of Abdulaziz and child of the father, that is a royalty, of Mustafa III.",SELECT ?result WHERE { <http://dbpedia.org/resource/Mustafa_III> <http://dbpedia.org/property/father> ?v0 . ?v0 <http://dbpedia.org/ontology/child> ?result . ?v5 <http://dbpedia.org/ontology/successor> ?result . ?v5 <http://dbpedia.org/property/father> ?v1 . ?v2 <http://dbpedia.org/property/father> ?result . <http://dbpedia.org/resource/Abdulaziz> <http://dbpedia.org/property/father> ?v2 . ?v1 <http://dbpedia.org/ontology/spouse> <http://dbpedia.org/resource/Şermi_Kadın> . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?successor WHERE {
  # Şermi Kadın's spouse
  dbr:Ibrahim_of_the_Ottoman_Empire dbo:spouse dbr:Şermi_Kadın .
  
  # Their child, Abdul Hamid I
  dbr:Ibrahim_of_the_Ottoman_Empire dbo:child dbr:Abdul_Hamid_I .

  # Mustafa III's father and his royalty child
  dbr:Mustafa_III dbo:father dbr:Ahmad_III .
  dbr:Mustafa_III a dbo:Sultan .

  # Successor of Mustafa III
  dbr:Mustafa_III dbo:succeededBy ?successor .
}
```",7,8,8,3,3,3,3,71,0,0,1,0,0.0,0
926,64,test,"Give me the successor of Mustafa III and father of the father of the spouse of Neşerek Kadın and child of the father, that is a royalty, of the parent, that is a royalty, of Beyhan Sultan (daughter of Mustafa III).",SELECT ?result WHERE { ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. <http://dbpedia.org/resource/Neşerek_Kadın> <http://dbpedia.org/ontology/spouse> ?v4 . ?v2 <http://dbpedia.org/property/father> ?result . <http://dbpedia.org/resource/Mustafa_III> <http://dbpedia.org/ontology/successor> ?result . <http://dbpedia.org/resource/Beyhan_Sultan_(daughter_of_Mustafa_III)> <http://dbpedia.org/ontology/parent> ?v5 . ?v4 <http://dbpedia.org/property/father> ?v2 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v5 <http://dbpedia.org/property/father> ?v0 . ?v0 <http://dbpedia.org/ontology/child> ?result . },"```sparql
SELECT ?successor WHERE {
  wd:Q1234568 wdt:P35 wd:Q1234569 . # Mustafa III (Q1234568) has a successor (P35) who is Abdul Hamid I (Q1234569)
  wd:Q1234569 wdt:P22 ?neserekKadin . # Abdul Hamid I (Q1234569) has a spouse (P22) Neşerek Kadın (?neserekKadin)
  wd:Q1234568 wdt:P25 ?beyhanSultan . # Mustafa III (Q1234568) is the parent (P25) of Beyhan Sultan (?beyhanSultan)
}
```

Note: The actual DBpedia IDs for Mustafa III, Abdul Hamid I, Neşerek Kadın, and Beyhan Sultan need to be replaced with their correct identifiers in the query.",7,9,8,3,3,3,3,71,0,0,1,0,0.0,0
965,60,test,"Give me the spouse of the spouse of the parent of Louise Mountbatten and parent of the person born, that is a noble, as the birth name of George Mountbatten, 2nd Marquess of Milford Haven.","SELECT ?result WHERE { ?v0 <http://dbpedia.org/property/birthName> ?v5 . ?v0 <http://dbpedia.org/ontology/parent> ?result . ?v4 <http://dbpedia.org/ontology/spouse> ?v2 . ?result <http://dbpedia.org/ontology/spouse> ?v2 . <http://dbpedia.org/resource/Louise_Mountbatten> <http://dbpedia.org/ontology/parent> ?v4 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Noble>. <http://dbpedia.org/resource/George_Mountbatten,_2nd_Marquess_of_Milford_Haven> <http://dbpedia.org/property/birthName> ?v5 . }","```sparql
# Step 1: Find Louise Mountbatten's parent
SELECT ?parent WHERE {
    dbpedia:Louise_Mountbatten dbo:parent ?parent .
}

# Step 2: Find the spouse of Louise Mountbatten's parent
SELECT ?spouse WHERE {
    ?parent dbo:spouse ?spouse .
}

# Step 3: Find the spouse of that spouse
SELECT ?secondSpouse WHERE {
    ?spouse dbo:spouse ?secondSpouse .
}

# Step 4: Identify a noble person born from this lineage
SELECT ?noblePerson WHERE {
    ?secondSpouse dbo:child ?noblePerson .
    ?noblePerson rdf:type dbo:Noble .
}

# Step 5: Find George Mountbatten's birth name
SELECT ?birthName WHERE {
    dbpedia:George_Mountbatten_2nd_Marquess_of_Milford_Haven dbo:birthName ?birthName .
}
```",6,7,7,3,2,3,3,71,0,0,2,0,0.0,0
976,66,test,"Give me the office of the leader, that is a politician, of Grand National Assembly of Turkey and office of the person born as the birth name of Naci Bostancı and office of the mayor, that is a politician and an office holder and Turkish, of Nation Alliance (Turkey).",SELECT ?result WHERE { <http://dbpedia.org/resource/Grand_National_Assembly_of_Turkey> <http://dbpedia.org/ontology/leader> ?v3 . <http://dbpedia.org/resource/Nation_Alliance_(Turkey)> <http://dbpedia.org/property/leader> ?v6 . ?v6 <http://dbpedia.org/ontology/nationality> <http://dbpedia.org/resource/Turkey>. ?v6 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v6 <http://dbpedia.org/property/office> ?result . ?v0 <http://dbpedia.org/property/birthName> ?v5 . <http://dbpedia.org/resource/Naci_Bostancı> <http://dbpedia.org/property/birthName> ?v5 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v0 <http://dbpedia.org/property/office> ?result . ?v6 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v3 <http://dbpedia.org/property/office> ?result . },"```sparql
# Query for the office of the leader of the Grand National Assembly of Turkey
SELECT ?office WHERE {
  wd:Q123456 rdfs:label ""Speaker of the Grand National Assembly of Turkey""@en .
  ?office dbo:positionHeldBy wd:Q123456 .
}

UNION

# Query for the office held by Naci Bostancı
SELECT ?office WHERE {
  wd:Q789012 rdfs:label ""Naci Bostancı""@en .
  ?office dbo:positionHeldBy wd:Q789012 .
}

UNION

# Query for the office of the mayor of Nation Alliance (Turkey)
SELECT DISTINCT ?office WHERE {
  ?mayor dbo:nationality dbr:Turkey ;
         dbo:politicalParty dbr:Nation_Alliance_(Turkey) ;
         dbo:occupation dbr:Politician ;
         dbo:positionHeldBy ?office .
  FILTER EXISTS { ?office rdfs:label ?label . FILTER (lang(?label) = ""en"") }
}
```",7,11,8,3,3,3,3,71,0,0,1,0,0.0,0
917,70,test,"Give me the child of the father of the child, that is a royalty, of Kamehameha III and parent of the child, that is a royalty, of Kamehameha IV and child of the father of the spouse, that is a royalty, of Leleiohoku I.",SELECT ?result WHERE { ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v1 <http://dbpedia.org/property/father> ?v6 . ?result <http://dbpedia.org/ontology/child> ?v3 . <http://dbpedia.org/resource/Kamehameha_III> <http://dbpedia.org/ontology/child> ?v5 . ?v5 <http://dbpedia.org/property/father> ?v0 . ?v3 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Kamehameha_IV> . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v1 <http://dbpedia.org/ontology/spouse> <http://dbpedia.org/resource/Leleiohoku_I> . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?result <http://dbpedia.org/property/father> ?v0 . ?result <http://dbpedia.org/ontology/parent> ?v6 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?child WHERE {
  # Kamehameha III's child who is royalty
  ?kamehamehaIII_child dbo:parent dbr:Kamehameha_III ;
                      a dbo:Monarch .

  # Kamehameha IV's child who is royalty
  ?kamehamehaIV_child dbo:parent dbr:Kamehameha_IV ;
                     a dbo:Monarch .

  # Leleiohoku I's spouse who is royalty
  ?leleiohoku_spouse dbo:spouse dbr:Leleiohoku_I ;
                    a dbo:Monarch .

  # Father of Leleiohoku I's spouse
  ?father_of_spouse dbo:child ?leleiohoku_spouse .

  # The child we are looking for must satisfy all conditions
  ?child dbo:parent dbr:Kamehameha_III ;
         dbo:parent ?kamehamehaIV_child ;
         dbo:child ?father_of_spouse .
}
```",8,11,9,3,3,3,3,71,0,0,1,0,0.0,0
987,67,test,"Give me the birth place of the actor of the show, that is a film, with Emir Hadžihafizbegović and entity in the region, that is a country, of the time zone, that is a sports event, in Canicosa de la Sierra and birth place of Dado Polumenta.",SELECT ?result WHERE { <http://dbpedia.org/resource/Canicosa_de_la_Sierra> <http://dbpedia.org/ontology/timeZone> ?v4 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Film>. ?v5 <http://dbpedia.org/ontology/birthPlace> ?result . ?v0 <http://dbpedia.org/property/timeZone> ?v4 . ?v1 <http://dbpedia.org/ontology/starring> <http://dbpedia.org/resource/Emir_Hadžihafizbegović> . ?v1 <http://dbpedia.org/property/starring> ?v5 . <http://dbpedia.org/resource/Dado_Polumenta> <http://dbpedia.org/ontology/birthPlace> ?result . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsEvent>. ?result <http://dbpedia.org/ontology/country> ?v0 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. },"```sparql
# Step 1: Find films featuring Emir Hadžihafizbegović
SELECT ?film WHERE {
  ?film dbo:starring dbpedia:Emir_Hadžihafizić.
}

# Step 2: Identify actors from those films and their birthplaces
SELECT DISTINCT ?actor ?birthPlace WHERE {
  ?film dbo:starring ?actor .
  ?actor foaf:bornIn ?birthPlace .
  FILTER NOT EXISTS { ?actor = dbpedia:Emir_Hadžihafizić }
}

# Step 3: Determine the time zone for Canicosa de la Sierra
SELECT DISTINCT ?timeZone WHERE {
  dbpedia:Canicosa_de_la_Sierra dbo:timezone ?timeZone .
}

# Step 4: Find a sports event related to that time zone and identify countries in that region
SELECT DISTINCT ?country WHERE {
  ?event dbo:location ?timeZone .
  ?timeZone dbo:country ?country .
  ?event rdf:type dbpedia:SportsEvent .
}

# Step 5: Find Dado Polumenta's birthplace
SELECT ?birthPlace WHERE {
  dbpedia:Dado_Polumenta foaf:bornIn ?birthPlace .
}
```",7,10,8,3,3,3,3,71,0,0,1,0,0.0,0
98,27,test,"Give me the region of Philippine Standard Time and birth place of the person born as Paolo Elito M. Ballesteros IV and entity in the region, that is a country, of Philippine Standard Time.","SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. ?result <http://dbpedia.org/ontology/timeZone> <http://dbpedia.org/resource/Philippine_Standard_Time> . ?v2 <http://dbpedia.org/ontology/birthPlace> ?result . ?v2 <http://dbpedia.org/property/birthName> ""Paolo Elito M. Ballesteros IV""@en . ?v1 <http://dbpedia.org/property/timeZone> <http://dbpedia.org/resource/Philippine_Standard_Time> . ?result <http://dbpedia.org/ontology/country> ?v1 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?birthPlace ?region ?country WHERE {
  # Find Paolo Elito M. Ballesteros IV and his birthplace
  ?person a dbo:Person ;
          foaf:name ""Paolo Elito M. Ballesteros IV""@en .
  OPTIONAL { ?person dbo:birthPlace ?birthPlace . }

  # Identify the region for Philippine Standard Time
  dbr:Philippine_Standard_Time dbo:timeZoneForCountry dbr:Philippines ;
                               dbo:region ?region .

  # Confirm that Philippines is a country in this region
  ?country a dbo:Country ;
           dbo:locatedIn ?region .
  FILTER(?country = dbr:Philippines)
}
```",5,6,6,2,3,2,3,28,0,0,2,0,0.0,0
839,66,test,"Give me the band of the member of Böhse Onkelz and band of the person born, that is a musical artist, as Kevin Richard Russell and band of the band, that is a musical artist, of the professional in Musician.","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/bandMember> ?v2 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?v3 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . <http://dbpedia.org/resource/Böhse_Onkelz> <http://dbpedia.org/ontology/bandMember> ?v6 . ?v3 <http://dbpedia.org/property/birthName> ""Kevin Richard Russell""@en . ?result <http://dbpedia.org/ontology/bandMember> ?v6 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?v1 <http://dbpedia.org/ontology/associatedMusicalArtist> ?v2 . ?v1 <http://dbpedia.org/property/occupation> ""Musician""@en . }","```sparql
# Query for a Böhse Onkelz member's band
SELECT ?member ?band WHERE {
  ?band rdf:type dbo:MusicalBand ;
        dbo:bandMember ?person .
  ?person foaf:name ?name .
  FILTER(CONTAINS(LCASE(?name), ""boehse onkelz""))
}

# Query for Kevin Richard Russell's band
SELECT ?band WHERE {
  ?person dbo:birthName ""Kevin Richard Russell"" ;
          rdf:type dbo:MusicalArtist .
  ?person dbo:associatedBand ?band .
}

# Query for a professional musician's band (example with a known musician)
SELECT ?musician ?band WHERE {
  ?musician rdf:type dbo:Musician ;
            foaf:name ?name .
  FILTER(CONTAINS(LCASE(?name), ""john legend"")) # Example musician
  ?musician dbo:associatedBand ?band .
}
```",7,9,8,3,3,3,3,71,0,0,1,0,0.0,0
124,58,test,"Give me the military force of the force, that is a societal event and a military conflict, of the person born on 1850-06-24 and military force of the war, that is an event and a military conflict and a societal event, of Frank Rhodes (British Army officer) and commander in Mahdist War.","SELECT ?result WHERE { <http://dbpedia.org/resource/Frank_Rhodes_(British_Army_officer)> <http://dbpedia.org/ontology/battle> ?v5 . ?v1 <http://dbpedia.org/ontology/birthDate> ""1850-06-24""^^<http://www.w3.org/2001/XMLSchema#date> . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. <http://dbpedia.org/resource/Mahdist_War> <http://dbpedia.org/ontology/commander> ?result . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?result <http://dbpedia.org/ontology/battle> ?v2 . ?result <http://dbpedia.org/ontology/battle> ?v5 . ?v2 <http://dbpedia.org/ontology/commander> ?v1 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?militaryForce1 ?militaryForce2 WHERE {
  # Find the person born on 1850-06-24
  ?person dbo:birthDate ""1850-06-24""^^xsd:date .
  
  # Get military force or conflict associated with this person
  ?person dbo:militaryConflict ?conflict1 .
  ?conflict1 dbo:participatingMilitaryForce ?militaryForce1 .

  # Find Frank Rhodes and his military involvement
  dbr:Frank_Rhodes dbo:militaryConflict ?conflict2 .
  ?conflict2 dbo:participatingMilitaryForce ?militaryForce2 .

  # Ensure the conflict is a societal event and military conflict
  ?conflict1 rdf:type dbo:SocietalEvent ;
             rdf:type dbo:MilitaryConflict .

  # Find commander in Mahdist War
  ?mahdistWar dbo:commander ?commander .
  ?mahdistWar rdfs:label ""Mahdist War""@en .
  
  # Ensure Frank Rhodes was a commander in the Mahdist War
  FILTER(?commander = dbr:Frank_Rhodes)
}
```",6,11,7,3,3,3,3,71,0,0,3,0,0.0,0
773,65,test,"Give me the parent of the child, that is a royalty, of Louis the German and parent of the successor of the child, that is a royalty, of Louis the Pious and spouse of the father of Charles the Fat.",SELECT ?result WHERE { ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. <http://dbpedia.org/resource/Louis_the_Pious> <http://dbpedia.org/ontology/child> ?v0 . <http://dbpedia.org/resource/Charles_the_Fat> <http://dbpedia.org/property/father> ?v4 . ?v3 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Louis_the_German> . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v0 <http://dbpedia.org/ontology/successor> ?v6 . ?v3 <http://dbpedia.org/ontology/parent> ?result . ?result <http://dbpedia.org/ontology/child> ?v6 . ?v4 <http://dbpedia.org/ontology/spouse> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?parent
WHERE {
  # Louis the German's child who is royalty
  ?child1 dbo:father dbr:Louis_the_German ;
         a dbo:Monarch .

  # Parent of Louis the German's royal child
  ?parent1 dbo:child ?child1 .

  # Louis the Pious' child who is royalty
  ?child2 dbo:father dbr:Louis_the_Pious ;
         a dbo:Monarch .

  # Successor of Louis the Pious' royal child
  ?successor dbo:predecessor ?child2 .

  # Parent of the successor
  ?parent2 dbo:child ?successor .

  # Charles the Fat's father and his spouse
  dbr:Charles_the_Fat dbo:father ?charles_father .
  ?charles_father dbo:spouse ?spouse .

  # Combine all conditions
  FILTER (?parent1 = ?parent && ?parent2 = ?parent && ?spouse = ?parent)
}
```",7,9,8,3,3,3,3,71,0,0,1,0,0.0,0
83,18,test,"Give me the ruling party in the birthplace, that is a town and Brazilian and a soccer club, of the member, that is a sports manager, of Kedah FA and party of the governor of Dilma Rousseff.",SELECT ?result WHERE { ?v2 <http://dbpedia.org/property/leaderParty> ?result . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerClub>. ?v1 <http://dbpedia.org/ontology/team> <http://dbpedia.org/resource/Kedah_FA> . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Town>. ?v2 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Brazil>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsManager>. ?v3 <http://dbpedia.org/ontology/party> ?result . ?v1 <http://dbpedia.org/ontology/birthPlace> ?v2 . <http://dbpedia.org/resource/Dilma_Rousseff> <http://dbpedia.org/property/governor> ?v3 . },"```sparql
# Step 1: Identify the sports manager associated with Kedah FA
SELECT ?manager WHERE {
  ?kfa dbo:member ?person .
  ?person rdf:type dbo:SportsManager .
  ?person foaf:name ?name .
  FILTER CONTAINS(LCASE(?name), ""kedah fa"")
}

# Step 2: Determine their birthplace and verify it is a Brazilian town with a soccer club
SELECT DISTINCT ?birthPlace WHERE {
  ?manager dbo:birthPlace ?birthPlace .
  ?birthPlace rdf:type dbo:Town .
  ?birthPlace dbo:country dbr:Brazil .
  OPTIONAL { ?birthPlace dbo:sportTeam ?soccerClub . }
  FILTER EXISTS { ?soccerClub rdf:type dbo:SoccerClub }
}

# Step 3: Identify the governor of Dilma Rousseff's state and their party
SELECT DISTINCT ?governorParty WHERE {
  ?dilma dbo:governmentRole ?role .
  ?role dbo:officeHolder ?governor .
  ?governor dbo:party ?governorParty .
  FILTER CONTAINS(LCASE(?dilma), ""dilma rousseff"")
}

# Step 4: Find the ruling party in the identified Brazilian town
SELECT DISTINCT ?rulingParty WHERE {
  ?town dbo:rulingParty ?rulingParty .
  ?town rdf:type dbo:Town .
  ?town dbo:country dbr:Brazil .
  FILTER(?town = <URI_OF_THE_IDENTIFIED_TOWN>)
}
```

Note: Replace `<URI_OF_THE_IDENTIFIED_TOWN>` with the actual URI of the town identified in Step 2.",5,9,6,3,2,3,2,20,0,0,1,0,0.0,0
826,68,test,"Give me the predecessor of the parent of Prince Friedrich of Hesse and by Rhine and successor of the child, that is a royalty, of the reference, that is a royalty, to Louis I and spouse of the child of the father of Anna Magdalena Appel.","SELECT ?result WHERE { <http://dbpedia.org/resource/Anna_Magdalena_Appel> <http://dbpedia.org/property/father> ?v5 . ?v4 <http://dbpedia.org/ontology/spouse> ?result . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. <http://dbpedia.org/resource/Prince_Friedrich_of_Hesse_and_by_Rhine> <http://dbpedia.org/ontology/parent> ?v3 . ?v0 <http://dbpedia.org/ontology/child> ?v7 . ?result <http://dbpedia.org/ontology/successor> ?v3 . ?v7 <http://dbpedia.org/ontology/successor> ?result . ?v4 <http://dbpedia.org/property/father> ?v5 . ?v7 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v0 <http://xmlns.com/foaf/0.1/name> ""Louis I""@en . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?predecessor WHERE {
  # Step 1: Find Prince Friedrich of Hesse and by Rhine's parent
  ?friedrich a dbo:Person ;
             foaf:name ""Prince Friedrich of Hesse and by Rhine""@en .
  ?friedrich dbo:parent ?father .

  # Step 2: Find the predecessor of this parent
  ?predecessor dbo:successor ?father .

  # Step 3: Identify Louis I's reference that is royalty
  ?louisI a dbo:Person ;
          foaf:name ""Louis I""@en .
  
  # Step 4: Find the child of this royal figure
  ?child dbo:parent ?louisI .

  # Step 5: Identify the spouse of this child
  ?spouse dbo:spouse ?child .

  # Step 6: Find the successor of this spouse that is royalty
  ?successor dbo:predecessor ?spouse .
  
  FILTER(?predecessor != ?father) # Ensure it's not the same as Friedrich's father
}
```",8,10,9,3,3,3,3,71,0,0,1,0,0.0,0
926,63,test,"Give me the child of the father, that is a royalty, of Mustafa III and father of the father of the spouse of Neşerek Kadın and successor of the child of Ahmed III.",SELECT ?result WHERE { <http://dbpedia.org/resource/Neşerek_Kadın> <http://dbpedia.org/ontology/spouse> ?v3 . ?v3 <http://dbpedia.org/property/father> ?v1 . <http://dbpedia.org/resource/Mustafa_III> <http://dbpedia.org/property/father> ?v0 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v1 <http://dbpedia.org/property/father> ?result . ?v0 <http://dbpedia.org/ontology/child> ?result . ?v5 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Ahmed_III> . ?v5 <http://dbpedia.org/ontology/successor> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?mustafaIII WHERE {
  # Mustafa III's father
  dbr:Mustafa_III dbo:father dbr:Mahmud_I .
  
  # Mahmud I's children who are royalty (Sultans)
  ?child dbo:father dbr:Mahmud_I .
  ?child a dbo:Sultan .

  # Ahmed III's child and successor
  dbr:Selim_III dbo:succeededBy dbr:Mustafa_IV .
  dbr:Ahmed_III dbo:child dbr:Selim_III .

  # Neşerek Kadın's spouse and his father
  dbr:Abdul_Hamid_I dbo:father ?mustafaIII .
  dbr:Neşerek_Kadın dbo:spouse dbr:Abdul_Hamid_I .
  
  FILTER(?child = ?mustafaIII)
}
```",7,8,8,3,3,3,3,71,0,0,1,0,0.0,0
216,27,test,Give me the office of Tim Nicholls and party of the awardee of Australian Defence Medal and administration of the designer of Woolfe: The Red Hood Diaries.,SELECT ?result WHERE { <http://dbpedia.org/resource/Woolfe:_The_Red_Hood_Diaries> <http://dbpedia.org/property/designer> ?v0 . ?v3 <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/Australian_Defence_Medal> . ?result <http://dbpedia.org/property/leader> ?v0 . <http://dbpedia.org/resource/Tim_Nicholls> <http://dbpedia.org/property/office> ?result . ?v3 <http://dbpedia.org/ontology/party> ?result . },"```sparql
# Query for Tim Nicholls' office
SELECT ?office WHERE {
  wd:Q1234568 dbo:occupation ?office .
}

UNION

# Query for a notable awardee of the Australian Defence Medal and their party
SELECT ?party WHERE {
  ?person dbo:awardReceived wd:Q7890123 ; # Assuming Q7890123 is the Australian Defence Medal
           dbo:politicalParty ?party .
  FILTER (lang(?party) = ""en"")
}

UNION

# Query for the designer of Woolfe: The Red Hood Diaries and their administration
SELECT ?administration WHERE {
  wd:Q3456789 dbo:creator ?designer ;
              rdfs:label ""Woolfe: The Red Hood Diaries""@en .
  ?designer dbo:memberOf ?organization .
  ?organization dbo:administrativeRole ?administration .
}
```

Note: Replace `wd:Q1234568`, `wd:Q7890123`, and `wd:Q3456789` with the actual DBpedia identifiers for Tim Nicholls, a notable awardee of the Australian Defence Medal, and the designer of ""Woolfe: The Red Hood Diaries,"" respectively. These identifiers need to be looked up or known beforehand.",5,5,6,2,3,2,3,28,0,0,1,0,0.0,0
456,67,test,"Give me the band of the band, that is a musical artist, of the band of Alan Doyle and spouse of Danielle Spencer (Australian actress) and professional in the alter ego of the reference, that is a fictional character, to Lamont Cranston (radio, film and television).","SELECT ?result WHERE { <http://dbpedia.org/resource/Danielle_Spencer_(Australian_actress)> <http://dbpedia.org/ontology/spouse> ?result . ?result <http://dbpedia.org/property/occupation> ?v6 . <http://dbpedia.org/resource/Alan_Doyle> <http://dbpedia.org/ontology/associatedMusicalArtist> ?v1 . ?v1 <http://dbpedia.org/ontology/associatedMusicalArtist> ?v3 . ?v0 <http://dbpedia.org/property/alterEgo> ?v6 . ?v3 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/FictionalCharacter>. ?v0 <http://xmlns.com/foaf/0.1/name> ""Lamont Cranston (radio, film and television)""@en . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. }","```sparql
SELECT ?band WHERE {
  ?person foaf:name ""Alan Doyle"" .
  ?person dbo:memberOf <http://dbpedia.org/resource/Great_Big_Sea> .

  ?spouse1 foaf:name ""Danielle Spencer""@en .
  ?spouse2 foaf:name ""Ryan Reynolds""@en .
  ?spouse1 dbo:spouse ?spouse2 .

  ?character foaf:name ""The Shadow""@en .
  ?character dbo:fictionalCharacterOf <http://dbpedia.org/resource/Lamont_Cranston> .

  ?hipBand dbo:member ?reynoldsMember .
  ?reynoldsMember foaf:name ""Ryan Reynolds"" .
  ?hipBand rdfs:label ?bandLabel .
  
  FILTER (lang(?bandLabel) = 'en')
}
```",7,9,8,3,3,3,3,71,0,0,1,0,0.0,0
170,25,test,Give me the birth place of the awardee of People's Artist of Russia and domain of Mayor and entity in the work of International Energy Agency.,"SELECT ?result WHERE { ?v3 <http://dbpedia.org/property/author> <http://dbpedia.org/resource/International_Energy_Agency> . ?v4 <http://dbpedia.org/ontology/birthPlace> ?result . ?v4 <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/People's_Artist_of_Russia> . ?result <http://dbpedia.org/ontology/leaderTitle> ""Mayor""@en . ?result <http://dbpedia.org/ontology/country> ?v3 . }","```sparql
# Query for birthplace of awardees of People's Artist of Russia
SELECT ?person ?birthPlace WHERE {
  ?person dbo:award dbpedia-ru:Народный_художник_Российской_Федерации .
  ?person dbo:birthPlace ?birthPlace .
}

UNION

# Assuming the domain of a mayor refers to cities or municipalities
SELECT DISTINCT ?city WHERE {
  ?mayor dbo:officeLocation ?city .
  FILTER EXISTS { ?mayor rdf:type dbo:Mayor }
}

UNION

# Query for entities related to the work of International Energy Agency (IEA)
SELECT ?entity WHERE {
  ?entity dbo:organization dbpedia:International_Energy_Agency .
}
```",5,5,6,2,3,2,3,28,0,0,3,0,0.0,0
955,19,test,"Give me the band of the band member, that is a musical artist and an artist, of the reference, that is a band and a group and an organisation, to Street Dogs and band of the writer of Don't Forget Your Roots (album).","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/bandMember> ?v2 . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?result <http://dbpedia.org/ontology/bandMember> ?v4 . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. ?v4 <http://dbpedia.org/ontology/associatedMusicalArtist> ?v0 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Band>. <http://dbpedia.org/resource/Don't_Forget_Your_Roots_(album)> <http://dbpedia.org/property/writer> ?v2 . ?v0 <http://xmlns.com/foaf/0.1/name> ""Street Dogs""@en . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Group>. }","```sparql
SELECT ?band WHERE {
  # Step 1: Identify the band associated with Street Dogs and the album ""Don't Forget Your Roots""
  ?album dbo:title ""Don't Forget Your Roots"" ;
         dbo:artist <http://dbpedia.org/resource/Street_Dogs> .

  # Step 2: Find the writer of the album
  ?writer dbo:wikiPageRedirects ?album .
  
  # Step 3: Identify other bands associated with this writer
  ?band dbo:member ?writer ;
        a dbo:Band ;
        a dbo:MusicalArtist ;
        a dbo:Artist .

  FILTER(?writer = <http://dbpedia.org/resource/Mike_McColgan>)
}
```",5,10,6,3,2,3,2,20,0,0,1,0,0.0,0
216,28,test,Give me the party of the awardee of Australian Defence Medal and office of the mayor of Ros Bates and administration of the designer of Woolfe: The Red Hood Diaries.,SELECT ?result WHERE { ?result <http://dbpedia.org/property/leader> ?v5 . <http://dbpedia.org/resource/Woolfe:_The_Red_Hood_Diaries> <http://dbpedia.org/property/designer> ?v5 . ?v3 <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/Australian_Defence_Medal> . <http://dbpedia.org/resource/Ros_Bates> <http://dbpedia.org/property/leader> ?v1 . ?v1 <http://dbpedia.org/property/office> ?result . ?v3 <http://dbpedia.org/ontology/party> ?result . },"```sparql
# Query for a notable awardee of the Australian Defence Medal and their political party
SELECT ?person ?party WHERE {
  ?person dbo:award dbpedia:Australian_Defence_Medal .
  OPTIONAL { ?person dbo:politicalParty ?party . }
  FILTER (LANG(?party) = ""en"")
} LIMIT 1

# Query for Ros Bates' office as mayor
SELECT ?office WHERE {
  dbpedia:Ros_Bates dbo:positionHeld ?office .
  ?office rdfs:label ?officeLabel .
  FILTER (CONTAINS(LCASE(STR(?officeLabel)), ""mayor""))
}

# Query for the designer of Woolfe: The Red Hood Diaries and their administration
SELECT ?designer ?administration WHERE {
  dbpedia:Woolfe:_The_Red_Hood_Diaries dbo:creator ?designer .
  OPTIONAL { ?designer dbo:memberOf ?administration . }
}
```",6,6,7,2,3,2,3,28,0,0,1,0,0.0,0
18,25,test,"Give me the parent of the professional in Actress and alumnus of Marymount College, Tarrytown and professional in the award of Ana María Sánchez de Ríos.","SELECT ?result WHERE { ?result <http://dbpedia.org/property/occupation> ?v3 . ?result <http://dbpedia.org/ontology/child> ?v0 . ?v0 <http://dbpedia.org/property/occupation> ""Actress""@en . ?result <http://dbpedia.org/ontology/almaMater> <http://dbpedia.org/resource/Marymount_College,_Tarrytown> . <http://dbpedia.org/resource/Ana_María_Sánchez_de_Ríos> <http://dbpedia.org/property/awards> ?v3 . }","```sparql
SELECT ?person ?parentLabel WHERE {
  ?person dbo:almaMater dbr:Marymount_College_(Tarrytown,_New_York) .
  ?person dbo:profession dbr/Actress .
  OPTIONAL { ?person dbo:spouse dbr/Ana_María_Sánchez_de_Ríos . }
  ?parent dbo:child ?person .
  SERVICE wikibase:label { bd:serviceParam wikibase:language ""[AUTO_LANGUAGE],en"". }
}
```",5,5,6,2,3,2,3,28,0,0,1,0,0.0,0
773,58,test,"Give me the spouse of Louis the German and parent of the child, that is a royalty, of the father, that is an office holder and a royalty, of Carloman of Bavaria and parent of the successor of Charles the Bald.",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/child> ?v5 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v2 <http://dbpedia.org/ontology/parent> ?result . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. <http://dbpedia.org/resource/Charles_the_Bald> <http://dbpedia.org/ontology/successor> ?v5 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. <http://dbpedia.org/resource/Carloman_of_Bavaria> <http://dbpedia.org/property/father> ?v1 . <http://dbpedia.org/resource/Louis_the_German> <http://dbpedia.org/ontology/spouse> ?result . ?v2 <http://dbpedia.org/property/father> ?v1 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?spouse WHERE {
  dbr:Louis_the_German dbo:spouse ?spouse .
  ?spouse dbo:child ?royaltyChild .
  ?royaltyChild dbo:parent ?officeHolderRoyaltyFather .
  ?officeHolderRoyaltyFather dbr:Carloman_of_Bavaria .
  ?royaltyChild dbo:child ?successorOfCharlesTheBald .
  ?successorOfCharlesTheBald dbr:Louis_the_Stammerer .
}
```",6,9,7,3,3,3,3,71,0,0,1,0,0.0,0
129,27,test,"Give me the associated musical artist of the actor, that is an organisation, of Dreamville Presents: Revenge and professional in  and associated musical artist of the person born as Tahj Malik Chandler.","SELECT ?result WHERE { <http://dbpedia.org/resource/Dreamville_Presents:_Revenge> <http://dbpedia.org/property/starring> ?v3 . ?v0 <http://dbpedia.org/property/birthName> ""Tahj Malik Chandler""@en . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?v0 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v3 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?result <http://dbpedia.org/property/occupation> """"@en . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT DISTINCT ?artist1 ?artist2 WHERE {
  # Find J. Cole as an actor in ""Dreamville Presents: Revenge"" and confirm he is a professional musician
  ?production dbo:title ""Dreamville Presents: Revenge""@en .
  ?production dbo:actor dbr:J._Cole .
  ?jcole dbo:profession dbp:musician .

  # Find Childish Gambino as the person born Tahj Malik Chandler
  ?childishGambino rdfs:label ""Childish Gambino""@en ;
                  foaf:name ""Donald Glover"" ;
                  dbo:birthName ""Tahj Malik Chandler"" .
  
  # Confirm Childish Gambino is a professional musician
  ?childishGambino dbo:profession dbp:musician .

  # Get the associated musical artist for J. Cole and Childish Gambino
  ?jcole foaf:name ?artist1 .
  ?childishGambino foaf:name ?artist2 .
}
```",5,6,6,2,3,2,3,28,0,0,1,0,0.0,0
573,71,test,"Give me the parent of the author, that is a politician and an office holder, of the work of John Quincy Adams and person decedent at the residence, that is a settlement, of the professional, that is American, in Politician and person decedent at the administration, that is a region, of the real name of Charlie Baker (Australian footballer).","SELECT ?result WHERE { <http://dbpedia.org/resource/Charlie_Baker_(Australian_footballer)> <http://xmlns.com/foaf/0.1/name> ?v1 . ?result <http://dbpedia.org/ontology/deathPlace> ?v2 . ?v4 <http://dbpedia.org/property/occupation> ""Politician""@en . ?result <http://dbpedia.org/ontology/deathPlace> ?v5 . ?v8 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v8 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v2 <http://dbpedia.org/property/governor> ?v1 . ?v7 <http://dbpedia.org/property/author> ?v8 . ?v8 <http://dbpedia.org/ontology/parent> ?result . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Region>. ?v4 <http://dbpedia.org/ontology/nationality> <http://dbpedia.org/resource/United_States>. ?v4 <http://dbpedia.org/property/residence> ?v5 . ?v7 <http://dbpedia.org/property/author> <http://dbpedia.org/resource/John_Quincy_Adams> . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. }","```sparql
# Step 1: Find Charlie Baker's real name
SELECT ?realName WHERE {
  ?person foaf:name ""Charlie Baker (Australian footballer)"" .
  ?person dbo:birthPlace ?place .
  ?person dbo:profession dbr:Australian_footballer .
  ?person foaf:name ?realName .
}

# Step 2: Find the administration associated with Charlie Baker
SELECT ?administration WHERE {
  ?person dbo:politicalAffiliation ?party .
  ?person dbo:officeHolder ?office .
  ?office dbo:administrativeRegion ?administration .
  FILTER(?person = <http://dbpedia.org/resource/Charlie_Baker_(Australian_footballer)>)
}

# Step 3: Find the residence of Charlie Baker
SELECT ?residence WHERE {
  ?person dbo:residence ?residence .
  ?residence a dbo:Settlement .
  FILTER(?person = <http://dbpedia.org/resource/Charlie_Baker_(Australian_footballer)>)
}

# Step 4: Identify John Quincy Adams' work
SELECT ?work WHERE {
  ?author foaf:name ""John Quincy Adams"" .
  ?author dbo:work ?work .
}

# Step 5: Find the author's parent who is a politician and office holder
SELECT ?parent WHERE {
  ?author foaf:name ""Author of John Quincy Adams' work"" .
  ?author dbo:parent ?parent .
  ?parent dbo:officeHolder ?office .
  FILTER(?work = <http://dbpedia.org/resource/Specific_Work_by_John_Quincy_Adams>)
}

# Step 6: Find the parent of that author
SELECT ?grandParent WHERE {
  ?parent foaf:name ""Politician and office holder"" .
  ?parent dbo:parent ?grandParent .
}
```",9,14,10,3,3,3,3,71,0,0,2,0,0.0,0
791,59,test,"Give me the spouse of the spouse, that is a royalty, of the reference to Emperor Takakura and predecessor of the child of the child, that is an office holder and a royalty, of Emperor Go-Shirakawa.","SELECT ?result WHERE { ?v2 <http://dbpedia.org/ontology/spouse> ?v3 . ?result <http://dbpedia.org/ontology/spouse> ?v2 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v5 <http://dbpedia.org/property/father> ?v0 . ?v3 <http://xmlns.com/foaf/0.1/name> ""Emperor Takakura""@en . ?v0 <http://dbpedia.org/ontology/parent> <http://dbpedia.org/resource/Emperor_Go-Shirakawa> . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?result <http://dbpedia.org/ontology/successor> ?v5 . }","```sparql
SELECT ?spouseOfSpouse WHERE {
  # Step 1: Find Emperor Takakura's spouse
  dbpedia:Emperor_Takakura dbo:spouse ?takakurasSpouse .

  # Step 2: Find the spouse of that spouse
  ?takakurasSpouse dbo:spouse ?spouseOfSpouse .

  # Step 3: Ensure this person is royalty
  ?spouseOfSpouse rdf:type dbpedia:Royalty .

  # Step 4: Find Emperor Go-Shirakawa's child
  dbpedia:Emperor_Go-Shirakawa dbo:child ?goShirakawasChild .

  # Step 5: Find the grandchild of Emperor Go-Shirakawa
  ?goShirakawasChild dbo:child ?grandchildOfGoShirakawa .

  # Step 6: Ensure this grandchild is an office holder and royalty
  ?grandchildOfGoShirakawa rdf:type dbpedia:Royalty .
  ?grandchildOfGoShirakawa dbo:officeHolder ?office .

  # Step 7: Find the predecessor of that grandchild
  ?predecessor dbo:succeededBy ?grandchildOfGoShirakawa .

  # Step 8: Find the spouse of that predecessor
  ?predecessor dbo:spouse ?finalSpouse .
}
```",6,9,7,3,2,3,3,71,0,0,1,0,0.0,0
715,70,test,"Give me the commander in the force, that is a military conflict, of Abd el-Krim and leader of the office, that is a government agency and an organisation, of the reference to Carlos Franco Iribarnegaray and commander in the force of the mayor, that is an office holder and a politician and a president, of 1933 Spanish general election.","SELECT ?result WHERE { ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/GovernmentAgency>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/President>. ?v1 <http://dbpedia.org/property/office> ?v3 . <http://dbpedia.org/resource/1933_Spanish_general_election> <http://dbpedia.org/property/leader> ?v0 . ?v4 <http://dbpedia.org/ontology/commander> ?result . ?v4 <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Abd_el-Krim> . ?v7 <http://dbpedia.org/ontology/commander> ?v0 . ?v3 <http://dbpedia.org/ontology/leader> ?result . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v7 <http://dbpedia.org/ontology/commander> ?result . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?v1 <http://xmlns.com/foaf/0.1/name> ""Carlos Franco Iribarnegaray""@en . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?abdElKrimCommander ?carlosFrancoRole ?mayorPresident ?mayorCommander
WHERE {
  # Abd el-Krim as commander in the Rif War
  dbr:Abd_el-Krim dbo:militaryConflict dbr:Rif_War .
  
  # Carlos Franco Iribarnegaray's role and connection to Abd el-Krim
  OPTIONAL { 
    ?carlosFrancoRole dbo:leader dbr:Carlos_Franco_Iribarnegaray .
    ?carlosFrancoRole dbo:officeHolder dbr:Abd_el-Krim .
  }
  
  # Mayor from the 1933 Spanish general election who became president
  OPTIONAL {
    ?mayorPresident dbo:electedAs dbr:Spanish_President ;
                    dbo:termStart ""1933""^^xsd:gYear .
    
    # Commander of this mayor-president
    ?mayorCommander dbo:militaryConflict ?rifWar ;
                   dbo:commander ?mayorPresident .
  }
}
```",8,14,9,3,3,3,3,71,0,0,1,0,0.0,0
579,20,test,"Give me the native of the residence, that is English and a settlement, of the resident of Scotland and person born as the birth name of the native, that is an office holder, of Edinburgh.",SELECT ?result WHERE { ?result <http://dbpedia.org/property/birthName> ?v5 . ?v4 <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Edinburgh> . ?v1 <http://dbpedia.org/property/residence> ?v2 . ?result <http://dbpedia.org/ontology/birthPlace> ?v2 . ?v2 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/United_Kingdom>. ?v4 <http://dbpedia.org/property/birthName> ?v5 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. ?v1 <http://dbpedia.org/ontology/residence> <http://dbpedia.org/resource/Scotland> . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. },"```sparql
# Step 1: Find an office holder native of Edinburgh
SELECT ?officeHolder ?birthName WHERE {
  ?officeHolder dbo:nationality dbr:United_Kingdom ;
               dbo:birthPlace dbr:Edinburgh .
  ?officeHolder foaf:name ?name .
  OPTIONAL { ?officeHolder schema:givenName ?givenName . }
  OPTIONAL { ?officeHolder schema:familyName ?familyName . }
  BIND(CONCAT(?givenName, "" "", ?familyName) AS ?birthName)
}

# Step 2: Get their birth name (already done in step 1)

# Step 3: Identify a resident of Scotland with that birth name
SELECT ?resident WHERE {
  ?resident foaf:name ?name .
  OPTIONAL { ?resident schema:givenName ?givenName . }
  OPTIONAL { ?resident schema:familyName ?familyName . }
  BIND(CONCAT(?givenName, "" "", ?familyName) AS ?birthName)
  FILTER(?birthName = ""<birth_name_from_step_1>"")
  ?resident dbo:residence dbr:Scotland .
}

# Step 4: Determine their residence, ensuring it's English and a settlement
SELECT DISTINCT ?settlement WHERE {
  ?resident dbo:residence ?place .
  ?place dbo:country dbr:United_Kingdom ;
         dbo:isPartOf dbr:England ;
         rdf:type dbo:Settlement .
}

# Step 5: Find the native of that residence
SELECT ?native WHERE {
  ?native dbo:birthPlace ?settlement .
}
```

Note: Replace `<birth_name_from_step_1>` with the actual birth name obtained from step 1.",6,9,7,3,2,3,2,20,0,0,18,0,0.0,0
47,65,test,"Give me the office of the administration of Jagdeep Dhankhar and office of the awardee of Padma Vibhushan and office of the awardee of the award, that is an award, of Mantu Ghosh.",SELECT ?result WHERE { <http://dbpedia.org/resource/Mantu_Ghosh> <http://dbpedia.org/property/awards> ?v0 . ?v3 <http://dbpedia.org/property/office> ?result . ?v4 <http://dbpedia.org/property/governor> <http://dbpedia.org/resource/Jagdeep_Dhankhar> . ?v6 <http://dbpedia.org/property/office> ?result . ?v6 <http://dbpedia.org/property/awards> ?v0 . ?v4 <http://dbpedia.org/property/office> ?result . ?v3 <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/Padma_Vibhushan> . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Award>. },"```sparql
# Query for Jagdeep Dhankhar's office
SELECT ?office WHERE {
  wd:Q1234568 dbo:positionHeld ?office .
}

# Query for a notable Padma Vibhushan awardee and their office
SELECT DISTINCT ?person ?office WHERE {
  ?person dbo:awardReceived wd:Q7890123 ; # Assuming Q7890123 is the DBpedia item for Padma Vibhushan
         dbo:positionHeld ?office .
}

# Query for Mantu Ghosh's award and associated office
SELECT DISTINCT ?award ?office WHERE {
  wd:Q3456789 dbo:awardReceived ?award ;
             dbo:positionHeld ?office .
}
```

Note: The placeholders `wd:Q1234568`, `wd:Q7890123`, and `wd:Q3456789` should be replaced with the actual DBpedia QIDs for Jagdeep Dhankhar, Padma Vibhushan, and Mantu Ghosh respectively. These can be found by searching DBpedia or using a SPARQL endpoint to resolve these entities.",7,8,8,3,3,3,3,71,0,0,1,0,0.0,0
976,65,test,"Give me the office of the mayor, that is a politician and an office holder and Turkish, of the reference, that is an organisation and a political party and Turkish, to Millet İttifakı and office of the leader, that is a politician, of Grand National Assembly of Turkey and office of the person born as Mehmet Naci Bostancı.","SELECT ?result WHERE { ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v0 <http://dbpedia.org/property/birthName> ""Mehmet Naci Bostancı""@en . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v2 <http://dbpedia.org/property/office> ?result . ?v1 <http://dbpedia.org/property/leader> ?v5 . <http://dbpedia.org/resource/Grand_National_Assembly_of_Turkey> <http://dbpedia.org/ontology/leader> ?v2 . ?v0 <http://dbpedia.org/property/office> ?result . ?v5 <http://dbpedia.org/ontology/nationality> <http://dbpedia.org/resource/Turkey>. ?v5 <http://dbpedia.org/property/office> ?result . ?v1 <http://xmlns.com/foaf/0.1/name> ""Millet İttifakı""@en . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/PoliticalParty>. ?v1 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Turkey>. }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT DISTINCT ?mayorOffice ?leaderOffice ?personOffice
WHERE {
  # Millet İttifakı as an organization and political party in Turkey
  VALUES ?milatRef { dbr:Millet_İttifakı }
  
  # Office of the Mayor: Politician, office holder, Turkish
  ?mayor dbo:office ?mayorOffice .
  ?mayor foaf:nationality dbr:Turkey .
  ?mayor rdf:type dbo:Politician .

  # Leader's office of Grand National Assembly of Turkey
  ?leader dbo:office ?leaderOffice .
  ?leader rdf:type dbo:Politician .
  ?leader dbo:organization dbr:Grand_National_Assembly_of_Turkey .

  # Office held by Mehmet Naci Bostancı
  ?person foaf:name ""Mehmet Naci Bostancı""@en .
  ?person dbo:office ?personOffice .
}
```",7,14,8,3,3,3,3,71,0,0,1,0,0.0,0
933,59,test,"Give me the reference to the birth name of the professional in Musician and band of the band of the band, that is an artist and a musical artist, of The Ramong Sound.",SELECT ?result WHERE { ?result <http://xmlns.com/foaf/0.1/name> ?v4 . ?v3 <http://dbpedia.org/ontology/associatedMusicalArtist> ?v1 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. ?v1 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v0 <http://dbpedia.org/property/birthName> ?v4 . ?v0 <http://dbpedia.org/property/occupation> <http://dbpedia.org/resource/Musician> . <http://dbpedia.org/resource/The_Ramong_Sound> <http://dbpedia.org/ontology/associatedMusicalArtist> ?v3 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT ?birthName WHERE {
  ?person a dbo:Musician .
  ?person dbo:band dbr:The_Rolling_Stones .
  ?person foaf:name ""Mick Jagger"" .
  ?person foaf:givenName ?birthName .
}
```",6,8,7,3,2,3,3,71,0,0,1,0,0.0,0
917,59,test,"Give me the parent of the child, that is a royalty, of the mayor of Hawaiian Kingdom and child of the father of the spouse, that is a royalty, of Leleiohoku I.",SELECT ?result WHERE { ?v0 <http://dbpedia.org/property/father> ?v4 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?result <http://dbpedia.org/ontology/parent> ?v4 . <http://dbpedia.org/resource/Hawaiian_Kingdom> <http://dbpedia.org/property/leader> ?v3 . ?v1 <http://dbpedia.org/property/father> ?v3 . ?result <http://dbpedia.org/ontology/child> ?v1 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v0 <http://dbpedia.org/ontology/spouse> <http://dbpedia.org/resource/Leleiohoku_I> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?parent WHERE {
  # Leleiohoku I
  dbr:Leleiohoku_I a dbo:Person ;
                  dbo:spouse ?spouse .

  # Spouse of Leleiohoku I who is royalty
  ?spouse a dbo:RoyalFamilyMember .

  # Father of the spouse
  ?spouse dbo:parent ?father .

  # Mayor of Hawaiian Kingdom
  ?mayor a dbo:Mayor ;
         dbo:country dbr:Hawaiian_Kingdom .

  # Child of the mayor who is royalty
  ?mayorChild dbo:childOf ?mayor ;
              a dbo:RoyalFamilyMember .

  # Parent of this royal child
  ?parent dbo:child ?mayorChild .
}
```",6,8,7,3,2,3,3,71,0,0,3,0,0.0,0
582,56,test,"Give me the figure known as the nickname of the team, that is an organisation, of Hajime Moriyasu and reference to the residence of Hirotaka Sugawara and player in Kazuaki Nagasawa.",SELECT ?result WHERE { ?v0 <http://dbpedia.org/property/nickname> ?v1 . ?v0 <http://dbpedia.org/ontology/coach> <http://dbpedia.org/resource/Hajime_Moriyasu> . ?result <http://xmlns.com/foaf/0.1/name> ?v2 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. <http://dbpedia.org/resource/Kazuaki_Nagasawa> <http://dbpedia.org/ontology/team> ?result . <http://dbpedia.org/resource/Hirotaka_Sugawara> <http://dbpedia.org/property/residence> ?v2 . ?result <http://dbpedia.org/property/nickname> ?v1 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?teamNickname ?residence WHERE {
  # Find Hajime Moriyasu's current team and its nickname
  ?manager a dbo:FootballManager ;
           foaf:name ""Hajime Moriyasu""@en .
  ?manager dbo:currentTeam ?team .
  ?team dbo:nickname ?teamNickname .

  # Check if Kazuaki Nagasawa is a player in the same team
  ?player a dbo:AssociationFootballPlayer ;
          foaf:name ""Kazuaki Nagasawa""@en ;
          dbo:playsFor ?team .

  # Find Hirotaka Sugawara's residence or associated location
  ?sugawara a dbo:Person ;
            foaf:name ""Hirotaka Sugawara""@en .
  ?sugawara dbo:residenceLocation ?location .
  OPTIONAL { ?location rdfs:label ?residence FILTER (lang(?residence) = 'en') }

  # Ensure all conditions are met
  FILTER EXISTS { ?player }
}
```",6,7,7,3,3,3,3,71,0,0,1,0,0.0,0
715,69,test,"Give me the leader of the office, that is a government agency and an organisation, of the reference to Carlos Franco Iribarnegaray and commander in the force of Francisco Largo Caballero and commander in the force, that is a military conflict, of the native of Morocco.","SELECT ?result WHERE { ?v4 <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Morocco> . ?v3 <http://dbpedia.org/ontology/commander> ?v4 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/GovernmentAgency>. ?v7 <http://dbpedia.org/ontology/commander> ?result . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v1 <http://xmlns.com/foaf/0.1/name> ""Carlos Franco Iribarnegaray""@en . ?v2 <http://dbpedia.org/ontology/leader> ?result . ?v7 <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Francisco_Largo_Caballero> . ?v3 <http://dbpedia.org/ontology/commander> ?result . ?v1 <http://dbpedia.org/property/office> ?v2 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?leader WHERE {
  # Carlos Franco Iribarnegaray's leadership role
  ?office dbo:type/dbo:subClassOf* dbo:GovernmentAgency ;
          dbo:type/dbo:subClassOf* dbo:Organization .
  ?office dbo:head dbr:Carlos_Franco_Iribarnegaray .

  # Francisco Largo Caballero as a commander in the force led by Carlos Franco Iribarnegaray
  ?force dbo:commander dbr:Franco_Largo_Caballero ;
         dbo:partOf ?office .

  # Francisco Largo Caballero as a commander in another military conflict involving someone native to Morocco
  ?conflict dbo:commander dbr:Franco_Largo_Caballero .
  ?moroccanNative dbo:nationality dbr:Morocco ;
                  dbo:involvedInMilitaryConflict ?conflict .

  # Return the leader of the office
  ?office dbo:head ?leader .
}
```",8,11,9,3,3,3,3,71,0,0,1,0,0.0,0
326,19,test,"Give me the person decedent at the award, that is a country, of the awardee of French Legion of Honor and resident of the birthplace, that is a state and British, of David Jessel.","SELECT ?result WHERE { ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. ?result <http://dbpedia.org/property/residence> ?v2 . ?v0 <http://dbpedia.org/property/awards> ""French Legion of Honor""@en . ?v0 <http://dbpedia.org/property/awards> ?v4 . <http://dbpedia.org/resource/David_Jessel> <http://dbpedia.org/ontology/birthPlace> ?v2 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/AdministrativeRegion>. ?v2 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/United_Kingdom>. ?result <http://dbpedia.org/ontology/deathPlace> ?v4 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT DISTINCT ?decedent WHERE {
  # Step 1: Find David Jessel's birthplace
  dbr:David_Jessel dbo:birthPlace ?birthPlace .
  
  # Ensure the birthplace is a state in the UK
  ?birthPlace rdf:type dbo:State .

  # Step 2: Find awardees of the French Legion of Honor residing in that place
  ?person dbo:nationality dbr:United_Kingdom ;
          dbo:residence ?birthPlace ;
          dbo:honoraryTitle dbr:French_Legion_of_Honor .

  # Step 3: Identify awards associated with a country for these individuals
  ?award dbo:recipient ?person ;
         dbo:country ?country .

  # Ensure the award is associated with a country
  ?country rdf:type dbo:Country .

  # Step 4: Find the decedent related to such an award
  ?award dbo:decedent ?decedent .
}
```",5,8,6,3,2,3,2,20,0,0,1,0,0.0,0
465,57,test,"Give me the spouse of the child, that is a royalty, of the parent of Elizabeth of Austria (1526–1545) and successor of Ercole II d'Este, Duke of Ferrara and successor of the child, that is a royalty, of Anne of Brittany.","SELECT ?result WHERE { ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. <http://dbpedia.org/resource/Ercole_II_d'Este,_Duke_of_Ferrara> <http://dbpedia.org/ontology/successor> ?result . ?v0 <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Elizabeth_of_Austria_(1526–1545)> . ?v3 <http://dbpedia.org/ontology/successor> ?result . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. <http://dbpedia.org/resource/Anne_of_Brittany> <http://dbpedia.org/ontology/child> ?v3 . ?v0 <http://dbpedia.org/ontology/child> ?v5 . ?result <http://dbpedia.org/ontology/spouse> ?v5 . }","```sparql
SELECT ?spouse WHERE {
  # Step 1: Identify Elizabeth of Austria's parent
  ?elizabeth dbo:parent ?parent .
  FILTER(STR(?elizabeth) = ""Elizabeth_of_Austria_(1526–1545)"")

  # Step 2: Find the successor of Ercole II d'Este, Duke of Ferrara
  ?ercole dbo:succeededBy ?successorErcole .

  # Step 3: Identify the child who is royalty and spouse of this child
  ?parent dbo:child ?royalChild .
  ?royalChild rdf:type dbo:Monarch .
  ?royalChild dbo:spouse ?spouse .

  # Step 4: Identify Anne of Brittany's child who is royalty
  ?anne dbo:child ?royalChildAnne .
  FILTER(STR(?anne) = ""Anne_of_Brittany"")
  ?royalChildAnne rdf:type dbo:Monarch .

  # Step 5: Find the successor of this child
  ?royalChildAnne dbo:succeededBy ?successorRoyalChildAnne .

  # Step 6: Ensure the spouse is related to the identified royalty from step 3
  FILTER(?spouse = ?successorErcole || ?spouse = ?successorRoyalChildAnne)
}
```",6,8,7,3,3,3,3,71,0,0,1,0,0.0,0
987,69,test,"Give me the entity in the region, that is a country, of the time zone, that is a sports event, in Canicosa de la Sierra and birth place of the band, that is an artist and a musical artist, of the band, that is an artist, of Dado Polumenta and birth place of the actor of All for Free.",SELECT ?result WHERE { ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsEvent>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?v0 <http://dbpedia.org/property/timeZone> ?v5 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. <http://dbpedia.org/resource/All_for_Free> <http://dbpedia.org/property/starring> ?v6 . ?result <http://dbpedia.org/ontology/country> ?v0 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. ?v4 <http://dbpedia.org/ontology/associatedMusicalArtist> ?v2 . ?v2 <http://dbpedia.org/ontology/birthPlace> ?result . <http://dbpedia.org/resource/Dado_Polumenta> <http://dbpedia.org/ontology/associatedMusicalArtist> ?v4 . <http://dbpedia.org/resource/Canicosa_de_la_Sierra> <http://dbpedia.org/ontology/timeZone> ?v5 . ?v6 <http://dbpedia.org/ontology/birthPlace> ?result . },"```sparql
# Step 1: Find the time zone of Canicosa de la Sierra
SELECT ?timeZone WHERE {
  wd:Q1234567 wdt:P421 ?timeZone .
}

# Step 2: Find a sports event in that time zone
SELECT ?sportsEvent WHERE {
  ?sportsEvent wdt:P421 ?timeZone .
  ?sportsEvent wdt:P31 wd:Q13442814 . # Q13442814 is the concept of a sports event
}

# Step 3: Determine the region/country of this sports event
SELECT DISTINCT ?country WHERE {
  ?sportsEvent wdt:P17 ?country .
}

# Step 4: Identify Dado Pratelli's band and its birthplace
SELECT ?bandBirthPlace WHERE {
  wd:Q1234567 wdt:P106 wd:Q33999 . # Q33999 is the concept of a musician
  wd:Q1234567 wdt:P153 ?band .
  ?band wdt:P19 ?bandBirthPlace .
}

# Step 5: Find the actor of ""All for Free"" and their birthplace
SELECT ?actorBirthPlace WHERE {
  wd:Q7890123 wdt:P161 wd:Q123456 . # Q7890123 is the movie ""All for Free"", Q123456 is an actor in it
  wd:Q123456 wdt:P19 ?actorBirthPlace .
}

# Step 6: Match the birthplaces
SELECT ?entity WHERE {
  VALUES ?birthPlace { ?bandBirthPlace ?actorBirthPlace }
  ?entity wdt:P131* ?birthPlace . # ?entity is in the same region as the birthplace
}
```

Note: Replace `wd:Q1234567`, `wd:Q7890123`, and other placeholders with actual DBpedia identifiers for Canicosa de la Sierra, Eiffel 65, ""All for Free"", etc., which need to be looked up or known beforehand.",8,13,9,3,3,3,3,71,0,0,1,0,0.0,0
955,18,test,"Give me the band of the band member, that is a musical artist and an artist, of Street Dogs and band of the writer of the work, that is a work and an album and a musical work, of Matt Freeman.",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/bandMember> ?v3 . ?result <http://dbpedia.org/ontology/bandMember> ?v2 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalWork>. ?v3 <http://dbpedia.org/ontology/associatedMusicalArtist> <http://dbpedia.org/resource/Street_Dogs> . ?v1 <http://dbpedia.org/property/writer> ?v2 . ?v1 <http://dbpedia.org/property/writer> <http://dbpedia.org/resource/Matt_Freeman> . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Album>. },"```sparql
# Query for part 1: Band of a member of Street Dogs who is both a musical artist and an artist
SELECT DISTINCT ?memberBand WHERE {
  ?streetDog dbr:Street_Dogs dbo:bandMember ?member .
  ?member dbo:occupation dbp:musical_artist ;
          dbo:occupation dbp:artist .
  ?member dbo:associatedBand ?memberBand .
}

UNION

# Query for part 2: Band of the writer of a work that is a work, album, and musical work by Matt Freeman
SELECT DISTINCT ?band WHERE {
  ?work dbr:Matt_Freeman dbo:composer ?writer ;
        rdf:type dbp:album ;
        rdf:type dbp:musical_work ;
        rdf:type dbp:work .
  ?writer rdfs:label ""Matt Freeman""@en .
  ?work dbo:associatedBand ?band .
}
```",5,10,6,3,2,3,2,20,0,0,1,0,0.0,0
715,63,test,"Give me the commander in the force, that is a military conflict, of the native of Morocco and commander in the force of Francisco Largo Caballero and leader of the office, that is a government agency and an organisation, of Carlos Franco Iribarnegaray.",SELECT ?result WHERE { <http://dbpedia.org/resource/Carlos_Franco_Iribarnegaray> <http://dbpedia.org/property/office> ?v2 . ?v2 <http://dbpedia.org/ontology/leader> ?result . ?v4 <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Morocco> . ?v3 <http://dbpedia.org/ontology/commander> ?result . ?v6 <http://dbpedia.org/ontology/commander> ?result . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/GovernmentAgency>. ?v3 <http://dbpedia.org/ontology/commander> ?v4 . ?v6 <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Francisco_Largo_Caballero> . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. },"```sparql
# Step 1: Find military conflicts involving Francisco Largo Caballero
SELECT ?conflict WHERE {
  ?conflict dbo:commander ?person .
  ?person foaf:name ""Francisco Largo Caballero""@en .
}

UNION

# Step 2: Filter to include a Moroccan native
SELECT ?conflict WHERE {
  ?conflict dbo:participant ?moroccanPerson .
  ?moroccanPerson dbo:nationality dbr:Morocco .
  ?conflict dbo:commander ?person .
  ?person foaf:name ""Francisco Largo Caballero""@en .
}

# Step 3: Identify the commander of that conflict
SELECT DISTINCT ?commander WHERE {
  ?conflict dbo:commander ?commander .
  FILTER EXISTS {
    ?conflict dbo:participant ?moroccanPerson .
    ?moroccanPerson dbo:nationality dbr:Morocco .
  }
  FILTER EXISTS {
    ?conflict dbo:commander ?person .
    ?person foaf:name ""Francisco Largo Caballero""@en .
  }
}

# Step 4: Find out which organization Carlos Franco Iribarnegaray led
SELECT DISTINCT ?organization WHERE {
  ?organization dbo:leader ?carlosFranco .
  ?carlosFranco foaf:name ""Carlos Franco Iribarnegaray""@en .
}
```",7,10,8,3,3,3,3,71,0,0,1,0,0.0,0
129,26,test,Give me the associated musical artist of EarthGang and professional in the mayor of 1999 West Dunbartonshire Council election and associated musical artist of the person born as Tahj Malik Chandler.,"SELECT ?result WHERE { <http://dbpedia.org/resource/1999_West_Dunbartonshire_Council_election> <http://dbpedia.org/property/leader> ?v2 . ?result <http://dbpedia.org/property/occupation> ?v2 . ?v1 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v1 <http://dbpedia.org/property/birthName> ""Tahj Malik Chandler""@en . <http://dbpedia.org/resource/EarthGang> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . }","```sparql
# Query 1: Associated musical artist of EarthGang
SELECT ?artist WHERE {
  wd:Q1105010 wdt:P106 wd:Q82955 . # EarthGang is a musical group
  wd:Q1105010 wdt:P527 ?member .   # Members of EarthGang
  ?member wdt:P175 ?artist         # Associated artist (e.g., producer, collaborator)
}

# Query 2: Professional in the 1999 West Dunbartonshire Council election and associated musical artist
SELECT ?candidate ?artist WHERE {
  ?candidate wdt:P31 wd:Q82955 .   # Candidate is a musician
  ?candidate wdt:P1027 wd:Q1105010 . # Participated in 1999 West Dunbartonshire Council election
  ?candidate wdt:P175 ?artist      # Associated artist (e.g., producer, collaborator)
}

# Query 3: Associated musical artist of Tahj Malik Chandler
SELECT ?stageName ?artist WHERE {
  wd:Q1105010 wdt:P735 wd:Q1105011 . # Tahj Malik Chandler is known as Childish Gambino
  wd:Q1105011 wdt:P175 ?artist       # Associated artist (e.g., producer, collaborator)
}
```",5,5,6,2,3,2,3,28,0,0,1,0,0.0,0
917,68,test,"Give me the parent of the child, that is a royalty, of the mayor of Hawaiian Kingdom and child of the father of Kamehameha IV and child of the father of the spouse, that is a royalty, of Leleiohoku I.",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/child> ?v2 . ?v2 <http://dbpedia.org/property/father> ?v4 . <http://dbpedia.org/resource/Kamehameha_IV> <http://dbpedia.org/property/father> ?v0 . ?v1 <http://dbpedia.org/property/father> ?v6 . <http://dbpedia.org/resource/Hawaiian_Kingdom> <http://dbpedia.org/property/leader> ?v4 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?result <http://dbpedia.org/property/father> ?v0 . ?v1 <http://dbpedia.org/ontology/spouse> <http://dbpedia.org/resource/Leleiohoku_I> . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?result <http://dbpedia.org/ontology/parent> ?v6 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?parent WHERE {
  # Mayor of Hawaiian Kingdom
  ?mayor a dbo:Mayor ;
         dbo:country dbr:Hawaii .

  # Child of the mayor who is royalty
  ?child dbo:parent ?mayor ;
         a dbo:Monarch .

  # Father of Kamehameha IV (Kamehameha III)
  dbr:Kamehameha_IV dbo:father dbr:Kamehameha_III .

  # Child of father of Kamehameha IV
  ?child2 dbo:parent dbr:Kamehameha_III .

  # Spouse of Leleiohoku I who is royalty
  ?spouse dbo:spouse dbr:Leleiohoku_I ;
          a dbo:Monarch .

  # Father of spouse of Leleiohoku I
  ?fatherOfSpouse dbo:child ?spouse .

  # Child of father of spouse of Leleiohoku I
  ?child3 dbo:parent ?fatherOfSpouse .

  # Parent of the child who is royalty
  ?parent dbo:child ?child .
}
```",8,10,9,3,3,3,3,71,0,0,2,0,0.0,0
274,25,test,"Give me the band member of the person born, that is a musical artist, as John Birks Gillespie and associated musical artist of Cecil Taylor and professional in the designer of Tetris Classic.","SELECT ?result WHERE { <http://dbpedia.org/resource/Tetris_Classic> <http://dbpedia.org/property/designer> ?v4 . ?v3 <http://dbpedia.org/property/birthName> ""John Birks Gillespie""@en . ?result <http://dbpedia.org/ontology/associatedMusicalArtist> ?v3 . ?result <http://dbpedia.org/property/occupation> ?v4 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. <http://dbpedia.org/resource/Cecil_Taylor> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?bandMember WHERE {
  # Dizzy Gillespie's band members
  ?gillespieBandMember dbo:musicalArtist dbr:Dizzy_Gillespie .
  
  # Check if the band member is associated with Cecil Taylor
  OPTIONAL { 
    ?association dbo:associatedMusicalArtist dbr:Cecil_Taylor ;
                 dbo:associatedMusicalArtist ?bandMember .
  }
  
  # Check for any connection to Alexey Pajitnov (Tetris Classic designer)
  OPTIONAL {
    ?pajitnovAssociation dbo:professionalIn dbr:Aleksandr_Pažitnov ;
                         dbo:relatedTo ?bandMember .
  }

  FILTER EXISTS { ?association . } 
  FILTER EXISTS { ?pajitnovAssociation . }
}
```",5,6,6,2,3,2,3,28,0,0,1,0,0.0,0
216,67,test,"Give me the player in the coach, that is a soccer player and a sports manager and a soccer manager, of the player, that is an organisation and a sports club and a soccer club, in Džemal Berberović and team of the person born, that is a sports manager and a soccer manager and a soccer player, on the death of Pavel Vezhinov and player in Igor Bišćan.",SELECT ?result WHERE { ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerPlayer>. ?v3 <http://dbpedia.org/ontology/birthDate> ?v1 . ?v6 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerPlayer>. <http://dbpedia.org/resource/Džemal_Berberović> <http://dbpedia.org/ontology/team> ?v0 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsManager>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerClub>. <http://dbpedia.org/resource/Pavel_Vezhinov> <http://dbpedia.org/ontology/deathDate> ?v1 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerManager>. ?v0 <http://dbpedia.org/ontology/coach> ?v6 . ?result <http://dbpedia.org/ontology/coach> ?v3 . <http://dbpedia.org/resource/Igor_Bišćan> <http://dbpedia.org/ontology/team> ?result . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsClub>. ?v6 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsManager>. ?v6 <http://dbpedia.org/ontology/team> ?result . ?v6 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerManager>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?playerInCoach ?soccerClub WHERE {
  # Džemal Berberović details
  dbr:Džemal_Berberović a dbo:SoccerPlayer ;
                        dbo:sportTeam ?team1 .

  # Igor Bišćan details
  dbr:Igor_Bišćan a dbo:SoccerPlayer ;
                  dbo:sportTeam ?team2 .

  # Pavel Vezhinov's death date
  dbr:Pavel_Vezhinov dbo:deathDate ?deathDate .

  # Find players born around the time of Pavel Vezhinov's death
  ?person dbo:birthDate ?birthDate ;
          a dbo:SoccerPlayer, dbo:SportsManager, dbo:SoccerManager ;
          dbo:sportTeam ?team3 .
  
  FILTER (?birthDate >= DATE(?deathDate) && ?birthDate <= DATEADD(year, 1, ?deathDate))

  # Find coaches/managers who were also players
  ?coach a dbo:SoccerPlayer, dbo:SportsManager, dbo:SoccerManager ;
         dbo:coachOf ?playerInCoach .

  # Ensure the coach managed both Džemal Berberović and Igor Bišćan
  ?coach dbo:coachOf dbr:Džemal_Berberović .
  ?coach dbo:coachOf dbr:Igor_Bišćan .

  # Find the soccer club associated with the player in coach
  ?playerInCoach dbo:sportTeam ?soccerClub ;
                 a dbo:SoccerPlayer, dbo:SportsManager, dbo:SoccerManager .
}
```",7,16,8,3,3,3,3,71,0,0,1,0,0.0,0
645,61,test,"Give me the leader of the office, that is a government agency and an organisation, of the native of Restoration (Spain) and military force of the force, that is an event and a military conflict and a societal event, of the native, that is a president and a politician, of Restoration (Spain).",SELECT ?result WHERE { ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/GovernmentAgency>. ?v1 <http://dbpedia.org/property/office> ?v3 . ?v0 <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Restoration_(Spain)> . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/President>. ?result <http://dbpedia.org/ontology/battle> ?v5 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v5 <http://dbpedia.org/ontology/commander> ?v0 . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v1 <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Restoration_(Spain)> . ?v3 <http://dbpedia.org/ontology/leader> ?result . },"```sparql
SELECT DISTINCT ?leader WHERE {
  # Step 1: Find ""Restoration (Spain)"" event
  ?restorationEvent dbr:Restoration_(Spain) .
  
  # Step 2: Identify military forces related to the Restoration event
  ?militaryForce dbo:wikiPageWikiLink ?restorationEvent .
  ?militaryForce rdf:type dbo:MilitaryConflict .
  ?militaryForce rdf:type dbo:SocietalEvent .

  # Step 3: Find native of this military force who is a president and politician
  ?native dbo:nativeOf ?militaryForce .
  ?native rdf:type dbo:President .
  ?native rdf:type dbo:Politician .

  # Step 4: Identify the office led by this individual
  ?office dbo:leader ?native .
  ?office rdf:type dbo:GovernmentAgency .
  ?office rdf:type dbo:Organization .

  # Step 5: Find the leader of this office
  ?leader dbo:leader ?office .
}
```",6,13,7,3,2,3,3,71,0,0,2,0,0.0,0
98,8,test,Give me the child of the child of Emperor Toba and parent of Emperor Rokujō.,SELECT ?result WHERE { <http://dbpedia.org/resource/Emperor_Toba> <http://dbpedia.org/ontology/child> ?v2 . ?result <http://dbpedia.org/ontology/parent> ?v2 . <http://dbpedia.org/resource/Emperor_Rokujō> <http://dbpedia.org/ontology/parent> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?grandchild ?parentOfRokujō WHERE {
  # Find Emperor Toba's children
  ?tobaChild dbo:fatherOrMother dbr:Emperor_Toba .
  
  # Find the child of Toba's child (Toba's grandchild)
  ?grandchild dbo:fatherOrMother ?tobaChild .

  # Identify Emperor Rokujō and their parent
  ?parentOfRokujō dbo:fatherOrMother dbr:Emperor_Rokujō .
  
  # Match the grandchild with the parent of Rokujō
  FILTER(?grandchild = ?parentOfRokujō)
}
```",3,3,4,2,2,2,2,9,0,0,1,0,0.0,0
507,57,test,"Give me the spouse of Anne V. Coates and director of the movie, that is a movie and a work, with the person born on 1919-06-17 and professional in the profession of Guy Ferland.","SELECT ?result WHERE { ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?result <http://dbpedia.org/property/occupation> ?v3 . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Film>. ?v5 <http://dbpedia.org/property/starring> ?v0 . ?v5 <http://dbpedia.org/ontology/director> ?result . ?v0 <http://dbpedia.org/ontology/birthDate> ""1919-06-17""^^<http://www.w3.org/2001/XMLSchema#date> . <http://dbpedia.org/resource/Guy_Ferland> <http://dbpedia.org/property/occupation> ?v3 . ?result <http://dbpedia.org/ontology/spouse> <http://dbpedia.org/resource/Anne_V._Coates> . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT ?spouse ?director ?person WHERE {
  # Find Anne V. Coates and her spouse
  dbr:Anne_V._Coates dbo:spouse ?spouse .

  # Find a director of a movie that is both a ""movie"" and a ""work""
  ?movie dbo:type dbr:Film ;
         dbo:director ?director .
  
  # Find the person born on 1919-06-17 with profession similar to Guy Ferland
  ?person dbo:birthday ""1919-06-17""^^xsd:date ;
          dbo:profession dbr:Guy_Ferland .

  FILTER(?spouse = ?director && ?director = ?person)
}
```",6,8,7,3,3,3,3,71,0,0,1,0,0.0,0
573,62,test,"Give me the person decedent at the residence, that is a settlement, of the professional, that is American, in Politician and person decedent at the administration, that is a region, of the real name of Charlie Baker (Australian footballer) and parent of John Quincy Adams.","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/deathPlace> ?v6 . ?v0 <http://dbpedia.org/ontology/nationality> <http://dbpedia.org/resource/United_States>. ?v0 <http://dbpedia.org/property/residence> ?v6 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Region>. ?v3 <http://dbpedia.org/property/governor> ?v4 . ?v6 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. ?v0 <http://dbpedia.org/property/occupation> ""Politician""@en . <http://dbpedia.org/resource/John_Quincy_Adams> <http://dbpedia.org/ontology/parent> ?result . <http://dbpedia.org/resource/Charlie_Baker_(Australian_footballer)> <http://xmlns.com/foaf/0.1/name> ?v4 . ?result <http://dbpedia.org/ontology/deathPlace> ?v3 . }","```sparql
# Step 1: Find Charlie Baker's real name
SELECT ?charlieBakerRealName WHERE {
  ?charlieBaker dbo:birthPlace dbr:Australia .
  ?charlieBaker foaf:name ""Charlie Baker"" .
  ?charlieBaker rdfs:label ?realName .
}

# Step 2: Find John Quincy Adams's parent
SELECT ?johnAdams WHERE {
  ?jQA dbo:parent ?johnAdams .
  ?jQA rdfs:label ""John Quincy Adams""@en .
}

# Step 3: Identify the residence of John Adams that is a settlement
SELECT ?residence WHERE {
  ?johnAdams dbo:residence ?residence .
  ?residence rdf:type dbo:Settlement .
  ?johnAdams rdfs:label ""John Adams""@en .
}

# Step 4: Find the decedent at this residence
SELECT DISTINCT ?decedentAtResidence WHERE {
  ?deathEvent dbo:place ?residence .
  ?deathEvent dbo:agent ?decedentAtResidence .
  ?decedentAtResidence rdf:type dbo:Person .
}

# Step 5: Identify the administration region associated with Charlie Baker's real name
SELECT ?adminRegion WHERE {
  ?charlieBakerRealName dbo:associatedWith ?adminRegion .
  ?adminRegion rdf:type dbo:AdministrativeRegion .
}

# Step 6: Determine the decedent at this administration region
SELECT DISTINCT ?decedentAtAdminRegion WHERE {
  ?deathEvent dbo:place ?adminRegion .
  ?deathEvent dbo:agent ?decedentAtAdminRegion .
  ?decedentAtAdminRegion rdf:type dbo:Person .
}

# Step 7: Find the common person decedent between both locations
SELECT DISTINCT ?commonDecedent WHERE {
  VALUES (?decedent) { ?decedentAtResidence ?decedentAtAdminRegion }
  ?deathEvent dbo:agent ?decedent .
}
```",7,10,8,3,3,3,3,71,0,0,2,0,0.0,0
573,56,test,"Give me the parent of the author, that is a politician and an office holder, of the work of John Quincy Adams and person decedent at Quincy, Massachusetts and person decedent at the administration, that is a region, of Charlie Baker.","SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v0 <http://dbpedia.org/property/author> <http://dbpedia.org/resource/John_Quincy_Adams> . ?result <http://dbpedia.org/ontology/deathPlace> <http://dbpedia.org/resource/Quincy,_Massachusetts> . ?result <http://dbpedia.org/ontology/deathPlace> ?v2 . ?v0 <http://dbpedia.org/property/author> ?v1 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Region>. ?v1 <http://dbpedia.org/ontology/parent> ?result . ?v2 <http://dbpedia.org/property/governor> ""Charlie Baker""@en . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?parent WHERE {
  # Find works by John Quincy Adams
  ?work dbo:author dbr:John_Quincy_Adams .
  
  # Identify any related authors who are politicians or office holders
  OPTIONAL { ?relatedAuthor dbo:worksFor ?work . }
  OPTIONAL { ?relatedAuthor a dbo:Politician ; dbo:officeHolder ?office . }

  # Find Charlie Baker's decedent locations
  dbr:Charlie_Baker dbo:placeOfBirth dbr:Quincy,_Massachusetts ;
                    dbo:deceasedPlace dbr:Administration .

  # Check if there is a common parent figure who is a politician and office holder
  ?parent dbo:child ?relatedAuthor .
  ?parent a dbo:Politician ; dbo:officeHolder ?office .
}
```",6,9,7,3,3,3,3,71,0,0,2,0,0.0,0
582,59,test,"Give me the player in the father, that is an athlete and a soccer manager and a sports manager, of the child of Kazuaki Nagasawa and reference to the residence of the reference, that is a scientist, to Hirotaka Sugawara.","SELECT ?result WHERE { ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Scientist>. ?v3 <http://xmlns.com/foaf/0.1/name> ""Hirotaka Sugawara""@en . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Athlete>. ?v0 <http://dbpedia.org/property/father> ?v5 . ?v0 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Kazuaki_Nagasawa> . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsManager>. ?v5 <http://dbpedia.org/ontology/team> ?result . ?v3 <http://dbpedia.org/property/residence> ?v2 . ?result <http://xmlns.com/foaf/0.1/name> ?v2 . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerManager>. }","```sparql
# Step 1: Find Kazuaki Nagasawa's child
SELECT ?child WHERE {
  ?person dbo:spouse dbpedia:Kazuaki_Nagasawa .
  ?person dbo:child ?child .
}

# Step 2: Find the father of that child and check his roles
SELECT DISTINCT ?father WHERE {
  VALUES (?child) { <URI_of_Kazuakis_child> } # Replace with actual URI from step 1
  ?child dbo:parent ?father .
  ?father a dbo:Athlete ;
          a dbo:SoccerManager ;
          a dbo:SportsManager .
}

# Step 3: Find Hirotaka Sugawara's residence
SELECT DISTINCT ?residence WHERE {
  dbpedia:Hirotaka_Sugawara dbo:location ?residence .
}

# Step 4: Identify a scientist associated with that residence
SELECT DISTINCT ?scientist WHERE {
  VALUES (?residence) { <URI_of_Hirotakas_residence> } # Replace with actual URI from step 3
  ?scientist dbo:location ?residence ;
             a dbo:Scientist .
}

# Step 5: Combine findings to get the final player (father)
SELECT DISTINCT ?player WHERE {
  VALUES (?child) { <URI_of_Kazuakis_child> } # Replace with actual URI from step 1
  VALUES (?residence) { <URI_of_Hirotakas_residence> } # Replace with actual URI from step 3
  ?child dbo:parent ?player .
  ?player a dbo:Athlete ;
          a dbo:SoccerManager ;
          a dbo:SportsManager .
  ?scientist dbo:location ?residence ;
             a dbo:Scientist .
}
```",6,10,7,3,2,3,3,71,0,0,1,0,0.0,0
433,68,test,"Give me the associated musical artist of the associated musical artist, that is an artist and a musical artist, of the associated musical artist, that is a musical artist and an artist, of Ornette Coleman and professional in the profession of Bob Marley and associated musical artist of the person born, that is a musical artist and an artist, as the persona of Paul Chambers.",SELECT ?result WHERE { ?v7 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . <http://dbpedia.org/resource/Paul_Chambers> <http://xmlns.com/foaf/0.1/givenName> ?v5 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. <http://dbpedia.org/resource/Bob_Marley> <http://dbpedia.org/property/occupation> ?v3 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. <http://dbpedia.org/resource/Ornette_Coleman> <http://dbpedia.org/ontology/associatedMusicalArtist> ?v0 . ?v7 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?v4 <http://dbpedia.org/property/birthName> ?v5 . ?v4 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?result <http://dbpedia.org/property/occupation> ?v3 . ?v0 <http://dbpedia.org/ontology/associatedMusicalArtist> ?v7 . ?v7 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. },"```sparql
# Step 1: Find Ornette Coleman's associated musical artist
SELECT ?associatedArtist1 WHERE {
  wd:Q1234 wdt:P106 wd:Q33999 . # Ornette Coleman is a musician
  wd:Q1234 wdt:P463 ?associatedArtist1 .
}

# Step 2: Find the associated musical artist of that person who is both an artist and a musical artist
SELECT ?associatedArtist2 WHERE {
  ?artist wdt:P106 wd:Q33999 . # The person is a musician
  ?artist wdt:P800 ?artwork .   # The person is also an artist (has created artwork)
  ?associatedArtist1 wdt:P463 ?artist .
}

# Step 3: Identify Bob Marley's profession
SELECT ?profession WHERE {
  wd:Q1117 wdt:P106 ?profession . # Bob Marley's profession
}

# Step 4: Find the associated musical artist of that person who is a musical artist and an artist
SELECT ?associatedArtist3 WHERE {
  ?artist wdt:P106 ?profession . # The person has the same profession as Bob Marley
  ?artist wdt:P800 ?artwork .     # The person is also an artist (has created artwork)
  ?associatedArtist2 wdt:P463 ?artist .
}

# Step 5: Identify Paul Chambers' birth persona
SELECT ?birthPersona WHERE {
  wd:Q12345 wdt:P569 ?dateOfBirth . # Paul Chambers' date of birth
  wd:Q12345 rdfs:label ?birthPersona FILTER (lang(?birthPersona) = ""en"") .
}

# Step 6: Find the associated musical artist of that person who is both a musical artist and an artist
SELECT ?finalArtist WHERE {
  ?artist wdt:P106 wd:Q33999 . # The person is a musician
  ?artist wdt:P800 ?artwork .   # The person is also an artist (has created artwork)
  ?birthPersona rdfs:label ?artist FILTER (lang(?artist) = ""en"") .
  ?associatedArtist3 wdt:P463 ?artist .
}
```",8,14,9,3,3,3,3,71,0,0,4,0,0.0,0
892,56,test,"Give me the entity in the administration, that is Italian and a region and a settlement and an administrative region, of the party, that is a political party and an organisation, of Andrea Cozzolino and entity in the profession of Henri Crolla and landmark at elevation of 58.","SELECT ?result WHERE { ?v0 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Italy>. <http://dbpedia.org/resource/Henri_Crolla> <http://dbpedia.org/property/occupation> ?v2 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Region>. ?result <http://dbpedia.org/ontology/elevation> ""58""^^<http://www.w3.org/2001/XMLSchema#integer> . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?v0 <http://dbpedia.org/property/leaderParty> ?v4 . <http://dbpedia.org/resource/Andrea_Cozzolino> <http://dbpedia.org/ontology/party> ?v4 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/AdministrativeRegion>. ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/PoliticalParty>. ?result <http://dbpedia.org/ontology/province> ?v0 . ?result <http://dbpedia.org/ontology/country> ?v2 . }","```sparql
# Step 1: Find Andrea Cozzolino's political party
SELECT ?party WHERE {
  ?person foaf:name ""Andrea Cozzolino"" .
  ?person dbo:memberOf ?membership .
  ?membership dbo:organization ?party .
  ?party a dbo:PoliticalParty .
}

# Step 2: Identify Italian regions that are part of the administration of the identified party
SELECT DISTINCT ?region WHERE {
  ?party ?p ?admin .
  ?admin dbo:administrativeRegion ?region .
  ?region a dbo:AdministrativeRegion ;
          dbo:country dbr:Italy ;
          rdf:type dbo:Settlement ;
          rdf:type dbo:Region .
}

# Step 3: Determine Henri Crolla's profession
SELECT DISTINCT ?profession WHERE {
  ?person foaf:name ""Henri Crolla"" .
  ?person dbo:occupation ?profession .
}

# Step 4: Find landmarks at an elevation of 58 meters
SELECT DISTINCT ?landmark WHERE {
  ?landmark a dbo:Lighthouse ;
            dbo:elevation ""58""^^xsd:float .
}

# Final Query: Combine all conditions to find the common entity
SELECT DISTINCT ?entity WHERE {
  # Assuming results from previous queries are stored in variables or known values
  VALUES (?party) { (URI_of_the_party_from_step_1) }
  VALUES (?region) { (URIs_of_regions_from_step_2) }
  VALUES (?profession) { (URIs_of_professions_from_step_3) }
  VALUES (?landmark) { (URIs_of_landmarks_from_step_4) }

  ?entity dbo:memberOf ?membership .
  ?membership dbo:organization ?party .

  ?entity a dbo:AdministrativeRegion ;
          dbo:country dbr:Italy ;
          rdf:type dbo:Settlement ;
          rdf:type dbo:Region .

  ?entity dbo:occupation ?profession .

  ?entity dbo:location ?landmark .
}
```",6,12,7,3,3,3,3,71,0,0,2,0,0.0,0
874,19,test,"Give me the band of the band member of the band, that is an organisation, of Mark Read (singer) and band of the writer, that is an artist and a musical artist, of Mezzanine (album).",SELECT ?result WHERE { ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. ?v4 <http://dbpedia.org/ontology/associatedMusicalArtist> ?v0 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?result <http://dbpedia.org/ontology/bandMember> ?v2 . ?result <http://dbpedia.org/ontology/bandMember> ?v4 . ?v0 <http://dbpedia.org/ontology/bandMember> <http://dbpedia.org/resource/Mark_Read_(singer)> . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. <http://dbpedia.org/resource/Mezzanine_(album)> <http://dbpedia.org/property/writer> ?v2 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?band1 ?band2 WHERE {
  # Mark Read's band
  dbr:The_Vamps dbo:member dbr:Mark_Read .
  
  # Mezzanine album writer
  dbr:Mezzanine dbo:composer dbr:Robert_Del_Naja .

  # Robert Del Naja's other band
  ?band2 dbo:member dbr:Robert_Del_Naja .
  
  # Ensure both bands are artists
  ?band1 a dbo:Band ;
         dbo:genre ?genre1 .
  FILTER EXISTS { ?genre1 rdfs:subClassOf* dbo:MusicalArtist }
  
  ?band2 a dbo:Band ;
         dbo:genre ?genre2 .
  FILTER EXISTS { ?genre2 rdfs:subClassOf* dbo:MusicalArtist }

  # Ensure The Vamps is the band of Mark Read
  ?band1 dbr:The_Vamps .

}
```",5,8,6,3,2,3,2,20,0,0,1,0,0.0,0
267,18,test,"Give me the person born on the birth date of Dan Cathy and coach of the player, that is a soccer club, in the manager of 2020–21 Tractor S.C. season.",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/birthDate> ?v3 . <http://dbpedia.org/resource/2020–21_Tractor_S.C._season> <http://dbpedia.org/ontology/manager> ?v1 . ?v1 <http://dbpedia.org/ontology/team> ?v2 . <http://dbpedia.org/resource/Dan_Cathy> <http://dbpedia.org/ontology/birthDate> ?v3 . ?v2 <http://dbpedia.org/ontology/coach> ?result . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerClub>. },"```sparql
# Step 1: Get Dan Cathy's birth date
SELECT ?birthDate WHERE {
  dbpedia:Dan_Cathy dbo:birthday ?birthDate .
}

# Step 2: Find another person with the same birth date
SELECT DISTINCT ?person WHERE {
  ?person dbo:birthday ?sameBirthDate .
  FILTER(?sameBirthDate = <URI_of_Dan_Cathys_birth_date>)
  FILTER NOT EXISTS { ?person owl:sameAs dbpedia:Dan_Cathy }
}

# Step 3: Find the manager of Tractor S.C. during the 2020-21 season
SELECT DISTINCT ?manager WHERE {
  dbpedia:Tractor_S.C._(football)_season_2020–21 dbo:coach ?manager .
}

# Step 4: Identify the soccer club managed by this person in 2020-21
SELECT DISTINCT ?soccerClub WHERE {
  ?manager dbo:managedTeam ?soccerClub .
  FILTER EXISTS { 
    ?soccerClub dbo:season <URI_of_2020–21_season> .
  }
}
```

Note: Replace `<URI_of_Dan_Cathys_birth_date>` and `<URI_of_2020–21_season>` with the actual URIs obtained from previous queries.",5,6,6,3,2,3,2,20,0,0,1,0,0.0,0
83,9,test,"Give me the player in the person born on 1995-07-07 and player in the person born, that is an athlete, on 1991-11-19.","SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/team> ?result . ?v3 <http://dbpedia.org/ontology/birthDate> ""1991-11-19""^^<http://www.w3.org/2001/XMLSchema#date> . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Athlete>. ?v3 <http://dbpedia.org/ontology/team> ?result . ?v1 <http://dbpedia.org/ontology/birthDate> ""1995-07-07""^^<http://www.w3.org/2001/XMLSchema#date> . }","```sparql
# Query for the player born on 1995-07-07
SELECT ?person ?name WHERE {
  ?person dbo:birthDate ?birth .
  ?person foaf:name ?name .
  FILTER (YEAR(?birth) = 1995 && MONTH(?birth) = 7 && DAY(?birth) = 7)
  OPTIONAL { ?person dbo:occupation dbc:Athletes }
  FILTER EXISTS { ?person dbo:occupation dbc:Athletes }
}

UNION

# Query for the player born on 1991-11-19
SELECT ?person ?name WHERE {
  ?person dbo:birthDate ?birth .
  ?person foaf:name ?name .
  FILTER (YEAR(?birth) = 1991 && MONTH(?birth) = 11 && DAY(?birth) = 19)
  OPTIONAL { ?person dbo:occupation dbc:Athletes }
  FILTER EXISTS { ?person dbo:occupation dbc:Athletes }
}
```",4,5,5,2,2,2,2,9,0,0,5,0,0.0,0
192,18,test,"Give me the spouse of the spouse, that is a royalty, of the child of Charles II of Naples and child of the child of Stephen V of Hungary.",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/parent> ?v3 . ?v2 <http://dbpedia.org/ontology/spouse> ?result . ?v1 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Charles_II_of_Naples> . ?v3 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Stephen_V_of_Hungary> . ?v2 <http://dbpedia.org/ontology/spouse> ?v1 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. },"```sparql
# Step 1: Get children of Charles II of Naples
SELECT ?child WHERE {
  wd:Q123456 wdt:P40 ?child .
}

# Step 2: Find which child is also a descendant of Stephen V of Hungary
SELECT DISTINCT ?descendant WHERE {
  ?child wdt:P40 ?grandchild .
  ?grandchild wdt:P31/wdt:P361* wd:Q789012 . # Q789012 represents Stephen V of Hungary
}

# Step 3: Find the spouse of this descendant
SELECT ?spouse WHERE {
  ?descendant wdt:P26 ?spouse .
}

# Step 4: Find the spouse of that spouse who is royalty
SELECT DISTINCT ?royalSpouse WHERE {
  ?spouse wdt:P26 ?royalSpouse .
  ?royalSpouse wdt:P31 wd:Q5 . # Q5 represents human, but we need to filter for royalty
  OPTIONAL { ?royalSpouse wdt:P39 ?title . FILTER EXISTS { ?title wdt:P279* wd:Q1184 } }
}
```

Note: Replace `wd:Q123456` with the actual DBpedia ID of Charles II of Naples and `wd:Q789012` with the ID for Stephen V of Hungary. The query assumes that royalty can be identified by a specific property or class related to royal titles.",5,6,6,3,2,3,2,20,0,0,1,0,0.0,0
791,57,test,"Give me the spouse of Taira no Tokuko and father of the child, that is a royalty, of Emperor Takakura and predecessor of the child of the child, that is an office holder and a royalty, of Emperor Go-Shirakawa.",SELECT ?result WHERE { ?v5 <http://dbpedia.org/property/father> ?v0 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?result <http://dbpedia.org/ontology/successor> ?v5 . ?v3 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Emperor_Takakura> . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v3 <http://dbpedia.org/property/father> ?result . ?result <http://dbpedia.org/ontology/spouse> <http://dbpedia.org/resource/Taira_no_Tokuko> . ?v0 <http://dbpedia.org/ontology/parent> <http://dbpedia.org/resource/Emperor_Go-Shirakawa> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?spouse WHERE {
  # Taira no Tokuko's spouse
  dbr:Taira_no_Tokuko dbo:spouse ?spouse .
  
  # Emperor Takakura and his child Antoku
  ?emperorTakakura a dbo:Monarch ;
                   dbo:spouse dbr:Taira_no_Tokuko ;
                   dbo:child ?antoku .

  # Antoku's predecessor in the imperial lineage
  ?antoku dbo:predecessor ?emperorGoShirakawaFather .
  
  # Emperor Go-Shirakawa and his child who is an office holder and royalty
  dbr:Emperor_Go-Shirakawa dbo:child ?officeHolderRoyalty ;
                           dbo:father ?emperorGoShirakawaFather .

  FILTER (?officeHolderRoyalty = dbr:Emperor_Nijō) # Emperor Nijō was both an office holder and royalty

}
```",6,9,7,3,3,3,3,71,0,0,1,0,0.0,0
933,69,test,"Give me the band of the band, that is a group and a band and an organisation, of the person born, that is a musical artist, on 1947-04-21 and reference to the birth name of Alan Warner (musician) and band of the band of the band, that is an artist and a musical artist, of The Ramong Sound.","SELECT ?result WHERE { ?v5 <http://dbpedia.org/ontology/birthDate> ""1947-04-21""^^<http://www.w3.org/2001/XMLSchema#date> . ?v0 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. ?v5 <http://dbpedia.org/ontology/associatedMusicalArtist> ?v0 . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?result <http://xmlns.com/foaf/0.1/name> ?v6 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?v4 <http://dbpedia.org/ontology/associatedMusicalArtist> ?v2 . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. <http://dbpedia.org/resource/Alan_Warner_(musician)> <http://dbpedia.org/property/birthName> ?v6 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Band>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Group>. ?v2 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . <http://dbpedia.org/resource/The_Ramong_Sound> <http://dbpedia.org/ontology/associatedMusicalArtist> ?v4 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?band WHERE {
  # Step 1: Find Alan Warner born on 1947-04-21
  ?person a dbo:MusicalArtist ;
          dbo:birthDate ""1947-04-21""^^xsd:date ;
          rdfs:label ?name .
  
  FILTER(CONTAINS(LCASE(?name), ""alan warner""))

  # Step 2: Find Alan Warner's birth name and band
  OPTIONAL { ?person dbp:birthName ?birthName }
  OPTIONAL { ?band1 dbo:member ?person ; a dbo:Band }

  # Step 3: Identify The Ramones as both an artist and a musical artist, find their band
  ?ramones a dbo:MusicalArtist ;
           rdfs:label ""The Ramones"" .
  
  ?band2 dbo:member ?ramones ;
         a dbo:Band .

  # Step 4: Find the final band that fits all criteria
  ?finalBand dbo:member ?person ;
             dbo:member ?ramones ;
             a dbo:Band .

}
```",8,14,9,3,3,3,3,71,0,0,1,0,0.0,0
417,66,test,"Give me the child of the father of Frederick IX of Denmark and child of the child, that is a royalty, of the parent, that is a royalty, of Alexandrine of Mecklenburg-Schwerin and spouse of the parent, that is a royalty, of Count Ingolf of Rosenborg.",SELECT ?result WHERE { ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?result <http://dbpedia.org/property/father> ?v6 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?result <http://dbpedia.org/ontology/spouse> ?v3 . ?v3 <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Count_Ingolf_of_Rosenborg> . <http://dbpedia.org/resource/Alexandrine_of_Mecklenburg-Schwerin> <http://dbpedia.org/ontology/parent> ?v1 . <http://dbpedia.org/resource/Frederick_IX_of_Denmark> <http://dbpedia.org/property/father> ?v6 . ?result <http://dbpedia.org/ontology/parent> ?v2 . ?v2 <http://dbpedia.org/property/father> ?v1 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?child WHERE {
  # Frederick IX's father
  dbr:Frederick_IX_of_Denmark dbo:father dbr:Christian_X_of_Denmark .
  
  # Child of Christian X
  dbr:Christian_X_of_Denmark dbo:child ?margrethe .

  # Alexandrine's parent
  dbr:Alexandrine_of_Mecklenburg-Schwerin dbo:parent dbr:Friedrich_Franz_II,_Grand_Duke_of_Mecklenburg-Schwerin .
  
  # Child of Friedrich Franz II
  dbr:Friedrich_Franz_II,_Grand_Duke_of_Mecklenburg-Schwerin dbo:child ?alexandra .

  # Count Ingolf's parent
  dbr:Count_Ingolf_of_Rosenborg dbo:parent dbr:Prince_Valdemar_of_Denmark .
  
  # Spouse of Prince Valdemar
  dbr:Prince_Valdemar_of_Denmark dbo:spouse dbr:Cecilie_of_Mecklenburg-Schwerin .

  # Child of Margrethe II (child of Christian X) and royalty connected to Cecilie
  ?margrethe dbo:child ?frederik .
  
  # Frederik's spouse connection to royalty
  ?frederik dbo:spouse dbr:Mary,_Duchess_of_Gloucester .

  FILTER(?child = ?frederik)
}
```",7,10,8,3,3,3,3,71,0,0,1,0,0.0,0
93,20,test,"Give me the death place of the governor of the native, that is a politician, of Seattle and capital of the headquarter, that is a region and a settlement, of the headquarter of Clam Cove Pictograph Site.",SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/location> ?v2 . ?v2 <http://dbpedia.org/ontology/capital> ?result . ?v4 <http://dbpedia.org/property/governor> ?v5 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v5 <http://dbpedia.org/ontology/deathPlace> ?result . ?v4 <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Seattle> . <http://dbpedia.org/resource/Clam_Cove_Pictograph_Site> <http://dbpedia.org/ontology/location> ?v1 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Region>. },"```sparql
SELECT ?deathPlace WHERE {
  # Step 1: Identify Clam Cove Pictograph Site
  dbpedia:ClamCovePictographSite dcterms:isPartOf ?region .
  
  # Step 2: Determine the Headquarter Region and Settlement
  ?region a dbo:Region ;
          dbo:headquartersIn ?settlement .

  # Step 3: Find the Capital of the Headquarters
  ?settlement dbo:capital ?capitalCity .

  # Step 4: Identify the Governor of Seattle
  dbpedia:Seattle dbo:governedBy ?governor .
  
  # Step 5: Determine the Death Place of the Governor
  ?governor dbo:deathPlace ?deathPlace .
}
```",6,9,7,3,2,3,2,20,0,0,1,0,0.0,0
456,56,test,"Give me the band of the band, that is a musical artist, of the band of Alan Doyle and professional in  and spouse of the actor of Pacific Drive.","SELECT ?result WHERE { ?v2 <http://dbpedia.org/ontology/spouse> ?result . <http://dbpedia.org/resource/Pacific_Drive> <http://dbpedia.org/property/starring> ?v2 . ?v1 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v0 <http://dbpedia.org/ontology/associatedMusicalArtist> ?v1 . <http://dbpedia.org/resource/Alan_Doyle> <http://dbpedia.org/ontology/associatedMusicalArtist> ?v0 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?result <http://dbpedia.org/property/occupation> """"@en . }","```sparql
# Step 1: Find Alan Doyle's Band
SELECT ?band WHERE {
  wd:Q123456 wdt:P106 wd:Q33999; # Alan Doyle is a member of an organization (Great Big Sea)
  wdt:P463 ?band.               # The band has sub-organizations or members
}

# Step 2: Find actors from ""Pacific Drive"" and their spouses
SELECT DISTINCT ?actor ?spouse WHERE {
  wd:Q789012 wdt:P161 ?actor;    # Pacific Drive has cast (actors)
  ?actor wdt:P26 ?spouse.       # Actor has spouse
}

# Step 3: Check if any spouse is a musical artist and identify their band
SELECT DISTINCT ?musicalArtist ?band WHERE {
  ?spouse wdt:P106 wd:Q215627;   # Spouse is a musician
  ?spouse wdt:P463 ?band.        # The band has sub-organizations or members
}

# Step 4: Determine the band of that band
SELECT DISTINCT ?finalBand WHERE {
  ?musicalArtist wdt:P463 ?intermediateBand;
  ?intermediateBand wdt:P463 ?finalBand.
}
```

Note: Replace `wd:Q123456` with Alan Doyle's DBpedia ID and `wd:Q789012` with ""Pacific Drive"" movie's DBpedia ID. The actual IDs need to be looked up in the DBpedia database.",6,7,7,3,3,3,3,71,0,0,1,0,0.0,0
232,9,test,"Give me the claim to fame of the person born as Emily Katherine Jacques and artistic movement of the person born, that is a writer, on 1849-09-14.","SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/movement> ?result . ?v3 <http://dbpedia.org/property/birthName> ""Emily Katherine Jacques""@en . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Writer>. ?v3 <http://dbpedia.org/ontology/knownFor> ?result . ?v1 <http://dbpedia.org/ontology/birthDate> ""1849-09-14""^^<http://www.w3.org/2001/XMLSchema#date> . }","```sparql
# Query for Emily Katherine Jacques' claim to fame
SELECT ?claimToFame WHERE {
  ?person dbo:birthName ""Emily Katherine Jacques""@en .
  ?person dbo:notableFact ?claimToFame .
}

UNION

# Query for the artistic movement of the writer born on 1849-09-14
SELECT ?artisticMovement WHERE {
  ?writer dbo:birthDate ""1849-09-14""^^xsd:date ;
          rdf:type dbo:Writer .
  ?writer dbo:associatedMusicalArtistOrBand ?movement .
  ?movement rdfs:label ?artisticMovement .
  FILTER(LANG(?artisticMovement) = 'en')
}
```",4,5,5,2,2,2,2,9,0,0,1,0,0.0,0
715,66,test,"Give me the commander in the force, that is a military conflict, of Abd el-Krim and leader of the office, that is a government agency and an organisation, of the reference to Carlos Franco Iribarnegaray and commander in the force of Francisco Largo Caballero.","SELECT ?result WHERE { ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/GovernmentAgency>. ?v1 <http://dbpedia.org/property/office> ?v2 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?v2 <http://dbpedia.org/ontology/leader> ?result . ?v6 <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Francisco_Largo_Caballero> . ?v3 <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Abd_el-Krim> . ?v6 <http://dbpedia.org/ontology/commander> ?result . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v3 <http://dbpedia.org/ontology/commander> ?result . ?v1 <http://xmlns.com/foaf/0.1/name> ""Carlos Franco Iribarnegaray""@en . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?commander WHERE {
  # Abd el-Krim's military conflict
  ?rifWar dbo:commander ?commander .
  ?rifWar dbo:opponent dbr:Abd_el-Krim .

  # Carlos Franco Iribarnegaray's office
  ?office dbo:leader ?commander .
  ?office rdfs:label ""Spanish Civil Guard""@en .

  # Francisco Largo Caballero's military force
  ?civilWar dbo:commander ?commander .
  ?civilWar dbo:opponent dbr:Francisco_Largo_Caballero .
}
```",7,10,8,3,3,3,3,71,0,0,1,0,0.0,0
888,20,test,"Give me the commander in the force, that is a societal event and an event, of the military force of War in Donbas (2014–2022) and awardee of the award of the commander in 2022 Ukrainian eastern counteroffensive.",SELECT ?result WHERE { ?v4 <http://dbpedia.org/property/awards> ?v5 . <http://dbpedia.org/resource/2022_Ukrainian_eastern_counteroffensive> <http://dbpedia.org/ontology/commander> ?v4 . ?v2 <http://dbpedia.org/ontology/commander> ?v1 . ?v2 <http://dbpedia.org/ontology/commander> ?result . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?result <http://dbpedia.org/property/awards> ?v5 . ?v1 <http://dbpedia.org/ontology/battle> <http://dbpedia.org/resource/War_in_Donbas_(2014–2022)> . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?commander ?award WHERE {
  ?event dbo:type dbr:Military_conflict .
  ?event dbo:location dbr:Donbas .
  ?event dbo:date ""2014-01-01T00:00:00""^^xsd:dateTime ;
         dbo:endDate ""2022-12-31T23:59:59""^^xsd:dateTime .

  ?commander dbo:position dbr:Military_commander .
  ?commander dbo:memberOf dbr:Ukrainian_Armed_Forces .
  ?commander dbo:participatedIn ?event .

  ?awardEvent dbo:type dbr:Military_award_event .
  ?awardEvent dbo:date ""2022-01-01T00:00:00""^^xsd:dateTime ;
              dbo:endDate ""2022-12-31T23:59:59""^^xsd:dateTime .
  ?awardEvent dbo:location dbr:Ukraine .

  ?commander dbo:awardeeOf ?award .
  ?award dbo:givenFor dbr:Military_achievement .
}
```",6,8,7,3,2,3,2,20,0,0,4,0,0.0,0
456,61,test,"Give me the band of the band, that is a musical artist, of the band of Alan Doyle and professional in the alter ego of the reference, that is a fictional character, to Lamont Cranston (radio, film and television).","SELECT ?result WHERE { <http://dbpedia.org/resource/Alan_Doyle> <http://dbpedia.org/ontology/associatedMusicalArtist> ?v1 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?v1 <http://dbpedia.org/ontology/associatedMusicalArtist> ?v3 . ?v3 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/FictionalCharacter>. ?v0 <http://dbpedia.org/property/alterEgo> ?v5 . ?result <http://dbpedia.org/property/occupation> ?v5 . ?v0 <http://xmlns.com/foaf/0.1/name> ""Lamont Cranston (radio, film and television)""@en . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?band ?relatedBand WHERE {
  # Alan Doyle is a member of Great Big Sea
  dbr:Alan_Doyle dbo:memberOf dbr:Great_Big_Sea .
  
  # Find related bands or musical artists associated with Great Big Sea
  dbr:Great_Big_Sea dbo:associatedBand ?relatedBand .

  OPTIONAL {
    # Consider the fictional character Lamont Cranston (""The Shadow"")
    dbr:The_Shadow dbo:fictionalCharacterOf ?character .
    
    # Check if there's any connection between the related band and ""The Shadow""
    ?relatedBand dbo:reference ?character .
  }
}
```",6,8,7,3,2,3,3,71,0,0,1,0,0.0,0
459,23,val,"Give me the governor of the death place, that is a settlement, of Cliff Roquemore and person born as the birth name of Kevin Stitt.",SELECT ?result WHERE { ?result <http://dbpedia.org/property/birthName> ?v2 . ?v1 <http://dbpedia.org/property/governor> ?result . <http://dbpedia.org/resource/Kevin_Stitt> <http://dbpedia.org/property/birthName> ?v2 . <http://dbpedia.org/resource/Cliff_Roquemore> <http://dbpedia.org/ontology/deathPlace> ?v1 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?governor WHERE {
  # Find Cliff Roquemore's death place and ensure it is a settlement
  dbr:Cliff_Roquemore dbo:deathPlace ?deathPlace .
  ?deathPlace rdf:type dbo:Settlement .

  # Get the state or region of the death place
  ?deathPlace dbo:stateOrRegion ?region .

  # Find Kevin Stitt's birth name
  dbr:Kevin_Stitt dbp:birthName ?birthName .

  # Find the current governor of the region where Cliff Roquemore died
  ?governor dbo:governs ?region .
}
```",4,5,5,2,2,2,3,28,0,0,1,0,0.0,0
773,49,val,"Give me the spouse of the father of Charles the Fat and parent of the child, that is a royalty, of the father, that is an office holder and a royalty, of Carloman of Bavaria.",SELECT ?result WHERE { ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v1 <http://dbpedia.org/ontology/parent> ?result . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v1 <http://dbpedia.org/property/father> ?v0 . <http://dbpedia.org/resource/Charles_the_Fat> <http://dbpedia.org/property/father> ?v2 . <http://dbpedia.org/resource/Carloman_of_Bavaria> <http://dbpedia.org/property/father> ?v0 . ?v2 <http://dbpedia.org/ontology/spouse> ?result . },"```sparql
SELECT ?spouse WHERE {
  ?charles rdf:type dbo:Person ;
           foaf:name ""Charles the Fat""@en .
  ?father dbo:child ?charles ;
          foaf:name ""Louis the German""@en .
  ?father dbo:spouse ?spouse .
}
```",5,8,6,3,2,3,3,71,0,0,1,0,0.0,0
18,20,val,"Give me the professional in  and parent of the professional in Actress and alumnus of Marymount College, Tarrytown.","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/almaMater> <http://dbpedia.org/resource/Marymount_College,_Tarrytown> . ?result <http://dbpedia.org/ontology/child> ?v0 . ?result <http://dbpedia.org/property/occupation> """"@en . ?v0 <http://dbpedia.org/property/occupation> ""Actress""@en . }","```sparql
SELECT ?actress ?parentName ?parentProfession WHERE {
  ?actress dbo:almaMater dbr:Marymount_College_(Tarrytown,_New_York) .
  ?actress rdf:type dbo:Actress .
  ?actress foaf:name ?name .
  
  OPTIONAL { 
    ?parent dbo:child ?actress .
    ?parent foaf:name ?parentName .
    ?parent dbo:occupation ?parentProfession .
  }
}
```",4,4,5,2,3,2,3,28,0,0,1,0,0.0,0
443,23,val,Give me the landmark at elevation of the award of William Shepherd and birthplace of the work of yes.,"SELECT ?result WHERE { <http://dbpedia.org/resource/William_Shepherd> <http://dbpedia.org/property/awards> ?v1 . ?v2 <http://dbpedia.org/property/author> ""yes""@en . ?result <http://dbpedia.org/ontology/elevation> ?v1 . ?v2 <http://dbpedia.org/ontology/birthPlace> ?result . }","```sparql
# Step 1: Find an award received by William Shepherd
SELECT ?award WHERE {
  ?person foaf:name ""William Shepherd""@en .
  ?person dbo:awardsReceived ?award .
}

# Step 2: Get the location and elevation of the award's landmark
SELECT ?location ?elevation WHERE {
  ?award dbo:location ?location .
  OPTIONAL { ?location geo:elevation ?elevation . }
}

# Step 3: Find a work by Yes and its associated birthplace
SELECT ?work ?birthPlace WHERE {
  ?band foaf:name ""Yes""@en .
  ?band dbo:album ?work .
  ?artist dbo:recordedWith ?band ;
          dbo:birthPlace ?birthPlace .
}

# Step 4: Find a landmark at the identified elevation
SELECT ?landmark WHERE {
  ?landmark geo:elevation ?elevation .
}
```",4,4,5,2,2,2,3,28,0,0,2,0,0.0,0
917,49,val,"Give me the child of the father of the child, that is a royalty, of Kamehameha III and parent of the child, that is a royalty, of Kamehameha IV.",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/child> ?v2 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v4 <http://dbpedia.org/property/father> ?v0 . ?result <http://dbpedia.org/property/father> ?v0 . <http://dbpedia.org/resource/Kamehameha_III> <http://dbpedia.org/ontology/child> ?v4 . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v2 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Kamehameha_IV> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?childOfFather ?parentOfChildIV WHERE {
  # Step 1: Find Kamehameha III's children who are royalty
  ?childIII a dbo:Monarch ;
            dbo:father dbr:Kamehameha_III ;
            dbo:spouse ?mother .

  # Step 2: For each child of Kamehameha III, find another child (i.e., sibling)
  ?siblingIII a dbo:Monarch ;
              dbo:father dbr:Kamehameha_III ;
              dbo:spouse ?motherSibling .
  
  BIND(?siblingIII AS ?childOfFather)

  # Step 3: Find Kamehameha IV's children who are royalty
  ?childIV a dbo:Monarch ;
           dbo:father dbr:Kamehameha_IV .

  # Step 4: Identify the parent of each child of Kamehameha IV
  OPTIONAL { ?childIV dbo:mother ?parentOfChildIV }
  OPTIONAL { ?childIV dbo:father ?parentOfChildIV }

  FILTER(?childOfFather != ?childIII)
}
```",5,7,6,3,2,3,3,71,0,0,1,0,0.0,0
170,23,val,Give me the entity in the work of International Energy Agency and domain of the profession of John Scholey.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/country> ?v2 . ?v2 <http://dbpedia.org/property/author> <http://dbpedia.org/resource/International_Energy_Agency> . ?result <http://dbpedia.org/ontology/leaderTitle> ?v1 . <http://dbpedia.org/resource/John_Scholey> <http://dbpedia.org/property/occupation> ?v1 . },"```sparql
# Query for entity associated with the work of the International Energy Agency
SELECT ?entity WHERE {
  ?work dcterms:isPartOf <http://dbpedia.org/resource/International_Energy_Agency> .
  ?work dbo:wikiPageRedirects ?entity .
}

UNION

# Query for domain of profession of John Scholey
SELECT ?domain WHERE {
  ?person foaf:name ""John Scholey""@en .
  ?person dbo:occupation ?profession .
  ?profession dbo:fieldOfStudyOrDiscipline ?domain .
}
```",4,4,5,2,2,2,3,28,0,0,99,0,0.0,0
645,46,val,"Give me the commander in the force of the commander in Siege of Madrid and military force of the force, that is an event and a military conflict and a societal event, of Francisco Largo Caballero.",SELECT ?result WHERE { ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?result <http://dbpedia.org/ontology/battle> ?v4 . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. <http://dbpedia.org/resource/Siege_of_Madrid> <http://dbpedia.org/ontology/commander> ?v2 . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?v1 <http://dbpedia.org/ontology/commander> ?v2 . ?v1 <http://dbpedia.org/ontology/commander> ?result . ?v4 <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Francisco_Largo_Caballero> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?commander ?militaryForce WHERE {
  # Find the commander of the Siege of Madrid
  ?siege dbo:commander ?commander .
  ?siege rdfs:label ""Siege of Madrid""@en .

  OPTIONAL {
    # Link to Francisco Largo Caballero's military force
    ?commander dbo:militaryConflict ?conflict .
    ?conflict dbo:participatedInMilitaryForce ?militaryForce .
    ?militaryForce dbo:leader dbr:Francisco_Largo_Caballero .
  }
}
```",5,8,6,3,2,3,3,71,17,10,36,0.6296296296296297,0.32075471698113206,0.425
715,42,val,"Give me the commander in the force, that is a military conflict, of Abd el-Krim and commander in Spanish Civil War and leader of the office, that is a government agency and an organisation, of Carlos Franco Iribarnegaray.",SELECT ?result WHERE { <http://dbpedia.org/resource/Carlos_Franco_Iribarnegaray> <http://dbpedia.org/property/office> ?v1 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?v1 <http://dbpedia.org/ontology/leader> ?result . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/GovernmentAgency>. ?v2 <http://dbpedia.org/ontology/commander> ?result . ?v2 <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Abd_el-Krim> . <http://dbpedia.org/resource/Spanish_Civil_War> <http://dbpedia.org/ontology/commander> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?abdElKrimCommander ?carlosFrancoRole
WHERE {
  # Abd el-Krim's involvement in the Rif War and his opponent
  dbr:Abd_el-Krim dbo:militaryConflict dbr:Rif_War .
  ?rifWarParticipant dbo:opponent dbr:Spain ;
                     dbo:commander ?abdElKrimCommander .

  # Carlos Franco Iribarnegaray's role in the Spanish Civil War
  dbr:Carlos_Franco_Iribarnegaray dbo:militaryConflict dbr:Spanish_Civil_War .
  dbr:Carlos_Franco_Iribarnegaray dbo:leaderOf ?organization ;
                                  dbo:positionHeld ?carlosFrancoRole .

  # Ensure the organization is a government agency or an organization
  ?organization rdf:type/(dbo:GovernmentAgency|dbo:Organization) .
}
```",5,8,6,2,3,3,3,71,0,0,1,0,0.0,0
839,44,val,"Give me the band of the member of Böhse Onkelz and band of Kevin Russell (musician) and band of the band, that is a musical artist, of Charlie Huhn.",SELECT ?result WHERE { <http://dbpedia.org/resource/Böhse_Onkelz> <http://dbpedia.org/ontology/bandMember> ?v4 . <http://dbpedia.org/resource/Charlie_Huhn> <http://dbpedia.org/ontology/associatedMusicalArtist> ?v2 . ?result <http://dbpedia.org/ontology/bandMember> ?v2 . <http://dbpedia.org/resource/Kevin_Russell_(musician)> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?result <http://dbpedia.org/ontology/bandMember> ?v4 . },"```sparql
# Query 1: Band of a member of Böhse Onkelz
SELECT ?member ?band WHERE {
  ?onkelz dbo:member ?member .
  FILTER(STRSTARTS(LCASE(?onkelz), ""bohse onkelz""))
  OPTIONAL { ?member dbo:associatedBand ?band . }
} LIMIT 1

# Query 2: Band of Kevin Russell
SELECT ?band WHERE {
  wd:Q1234567 dbo:associatedBand ?band .
}

# Query 3: Band of Charlie Huhn and its notable artists
SELECT ?band ?artist WHERE {
  ?huhn dbo:member ?band .
  FILTER(STRSTARTS(LCASE(?huhn), ""charlie huhn""))
  OPTIONAL { ?band dbo:associatedBandMember ?artist . }
} LIMIT 1
```

Note: Replace `wd:Q1234567` with the actual DBpedia QID for Kevin Russell.",5,6,6,2,3,3,3,71,0,0,1,0,0.0,0
41,23,val,"Give me the party of the work, that is an office holder, of yes and party of the leader, that is a politician and an office holder, of 2005 Castlereagh Borough Council election.","SELECT ?result WHERE { ?v3 <http://dbpedia.org/ontology/party> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. <http://dbpedia.org/resource/2005_Castlereagh_Borough_Council_election> <http://dbpedia.org/property/leader> ?v3 . ?v1 <http://dbpedia.org/property/author> ""yes""@en . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v1 <http://dbpedia.org/ontology/party> ?result . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?winnerParty ?leaderParty WHERE {
  # Find the winner of the 2005 Castlereagh Borough Council election and their party
  ?election dbo:electionDate ?date .
  FILTER (YEAR(?date) = 2005 && CONTAINS(LCASE(STR(?election)), ""castlereagh borough council""))
  
  ?winner dbo:officeHolderOf ?election ;
          dbo:partyAffiliation ?winnerParty .

  # Find the leader who is a politician and office holder, and their party
  ?leader dbo:politician ?true ;
          dbo:officeHolderOf ?election ;
          dbo:partyAffiliation ?leaderParty .
}
```",4,7,5,2,2,2,3,28,0,0,1,0,0.0,0
865,41,val,"Give me the father of the child, that is a politician, of Abu Ahmad Abdul Hafiz and father of Shahla Khatun and native of the residence, that is a country, of Ram Jaipal Singh Yadav.",SELECT ?result WHERE { ?v4 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Abu_Ahmad_Abdul_Hafiz> . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. <http://dbpedia.org/resource/Ram_Jaipal_Singh_Yadav> <http://dbpedia.org/property/residence> ?v0 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. <http://dbpedia.org/resource/Shahla_Khatun> <http://dbpedia.org/property/father> ?result . ?result <http://dbpedia.org/ontology/birthPlace> ?v0 . ?v4 <http://dbpedia.org/property/father> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?father WHERE {
  # Find Abu Ahmad Abdul Hafiz's child who is a politician
  ?child dbo:parent dbr:Abu_Ahmad_Abdul_Hafiz .
  ?child dbo:occupation dbr:Politician .

  # Check if this child is Shahla Khatun's father
  ?child dbo:spouse ?mother .
  ?mother dbo:child dbr:Shahla_Khatun .

  # Find Ram Jaipal Singh Yadav's country of residence
  dbr:Ram_Jaipal_Singh_Yadav dbo:nationality ?country .

  # Ensure the identified person is native to this country
  ?father dbo:nativeCountry ?country .
  
  # Link the child back to the father
  ?child dbo:parent ?father .
}
```",5,7,6,2,3,3,3,71,0,0,1,0,0.0,0
216,54,val,"Give me the player in the coach, that is a soccer player and a sports manager and a soccer manager, of the player, that is an organisation and a sports club and a soccer club, in Džemal Berberović and player in the coach of Croatia national under-21 football team and team of Ognjen Vukojević.",SELECT ?result WHERE { ?v0 <http://dbpedia.org/ontology/coach> ?v5 . ?result <http://dbpedia.org/ontology/coach> <http://dbpedia.org/resource/Ognjen_Vukojević> . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. <http://dbpedia.org/resource/Croatia_national_under-21_football_team> <http://dbpedia.org/ontology/coach> ?v3 . <http://dbpedia.org/resource/Džemal_Berberović> <http://dbpedia.org/ontology/team> ?v0 . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsManager>. ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerManager>. ?v5 <http://dbpedia.org/ontology/team> ?result . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerClub>. ?v3 <http://dbpedia.org/ontology/team> ?result . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerPlayer>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsClub>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT DISTINCT ?playerInCoach WHERE {
  # Find the sports club associated with Džemal Berberović
  ?club a dbo:SoccerClub ;
        dbo:member ?džemal .
  
  FILTER(?džemal = dbp:Džemal_Berberović) .

  # Find the coach of Croatia national under-21 football team
  ?coach dbo:coachOf <http://dbpedia.org/resource/Croatia_national_under-21_football_team> ;
         dbo:playerInTeam ?playerInCoach1 .
  
  FILTER(
    ?playerInCoach1 a dbo:SoccerPlayer ;
                   (dbo:sportsManager | dbo:soccerManager) ?club
  ) .

  # Find the team associated with Ognjen Vukojević and their coach's player roles
  ?team dbp:member <http://dbpedia.org/resource/Ognjen_Vukojević> .
  
  ?coach2 dbo:coachOf ?team ;
          dbo:playerInTeam ?playerInCoach2 .

  FILTER(
    ?playerInCoach2 a dbo:SoccerPlayer ;
                   (dbo:sportsManager | dbo:soccerManager) ?club
  ) .

  # Ensure the player in coach is the same for both conditions
  VALUES ?playerInCoach { ?playerInCoach1 ?playerInCoach2 }
}
```",6,12,7,3,3,3,3,71,0,0,1,0,0.0,0
129,21,val,Give me the associated musical artist of the person born as Tahj Malik Chandler and associated musical artist of EarthGang and professional in .,"SELECT ?result WHERE { <http://dbpedia.org/resource/EarthGang> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v0 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v0 <http://dbpedia.org/property/birthName> ""Tahj Malik Chandler""@en . ?result <http://dbpedia.org/property/occupation> """"@en . }","```sparql
# Query for Lil Uzi Vert (Tahj Malik Chandler)
SELECT ?artist WHERE {
  ?person dbo:birthName ""Tahj Malik Chandler""@en .
  ?person foaf:name ""Lil Uzi Vert""@en .
  ?person dbo:associatedMusicalArtist ?artist .
}

UNION

# Query for EarthGang members
SELECT ?member, ?artist WHERE {
  VALUES ?group { dbpedia:EarthGang }
  ?group dbo:member ?member .
  ?member foaf:name ?name .
  FILTER (CONTAINS(LCASE(?name), ""doctur dot"") || CONTAINS(LCASE(?name), ""wowgr8""))
  OPTIONAL { ?member dbo:associatedMusicalArtist ?artist . }
}
```",4,4,5,2,3,2,3,28,0,0,1,0,0.0,0
976,47,val,"Give me the office of the leader, that is a politician, of Grand National Assembly of Turkey and office of the mayor, that is a politician and an office holder and Turkish, of the reference, that is an organisation and a political party and Turkish, to Millet İttifakı.","SELECT ?result WHERE { ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v0 <http://xmlns.com/foaf/0.1/name> ""Millet İttifakı""@en . ?v3 <http://dbpedia.org/property/office> ?result . ?v0 <http://dbpedia.org/property/leader> ?v3 . ?v1 <http://dbpedia.org/property/office> ?result . ?v3 <http://dbpedia.org/ontology/nationality> <http://dbpedia.org/resource/Turkey>. ?v0 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Turkey>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/PoliticalParty>. <http://dbpedia.org/resource/Grand_National_Assembly_of_Turkey> <http://dbpedia.org/ontology/leader> ?v1 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?office1 ?office2 WHERE {
  # Office of the leader of the Grand National Assembly of Turkey
  dbr:Speaker_of_the_Grand_National_Assembly_of_Turkey dbo:positionHeld ?office1 .
  
  # Mayor associated with Millet İttifakı
  ?mayor a dbo:Mayor ;
         dbo:politicalAffiliation ?party ;
         dbo:officeHolder ?office2 .

  # Ensure the party is part of Millet İttifakı
  ?party dbo:memberOf dbr:Millet_İttifakı .
  
  # Ensure the mayor is a politician and office holder
  ?mayor a dbo:Politician ;
         dbo:officeHolder ?office2 .
}
```",5,12,6,3,2,3,3,71,0,0,1,0,0.0,0
573,52,val,"Give me the person decedent at the residence, that is a settlement, of William J. Phelan and parent of John Quincy Adams and person decedent at the administration, that is a region, of the real name of Charlie Baker (Australian footballer).",SELECT ?result WHERE { <http://dbpedia.org/resource/John_Quincy_Adams> <http://dbpedia.org/ontology/parent> ?result . ?result <http://dbpedia.org/ontology/deathPlace> ?v2 . ?result <http://dbpedia.org/ontology/deathPlace> ?v5 . <http://dbpedia.org/resource/Charlie_Baker_(Australian_footballer)> <http://xmlns.com/foaf/0.1/name> ?v3 . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Region>. <http://dbpedia.org/resource/William_J._Phelan> <http://dbpedia.org/property/residence> ?v5 . ?v2 <http://dbpedia.org/property/governor> ?v3 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?parent1 ?parent2 WHERE {
  # Part 1: Person decedent at the residence of William J. Phelan and parent of John Quincy Adams
  ?residence a dbo:Settlement ;
             dbo:resident dbr:William_J._Phelan .
  ?phelanParent dbo:child dbr:John_Quincy_Adams ;
                dbo:spouse ?parent1 ;
                dbo:deceased ?deathDate1 .
  ?parent1 dbo:child dbr:John_Quincy_Adams .

  # Part 2: Person decedent at the administration of Charlie Baker's real name
  ?charlieBaker foaf:name ""Charlie Baker"" ;
                 dbo:birthName ?realName .
  ?administration a dbo:Region ;
                  dbo:administrator ?realName .
  ?adminParent dbo:child ?realName ;
               dbo:deceased ?deathDate2 .

  # Ensure the persons are decedents
  FILTER EXISTS { ?phelanParent dbo:deceased ?deathDate1 }
  FILTER EXISTS { ?adminParent dbo:deceased ?deathDate2 }

  # Return the parents
  BIND(?parent1 AS ?parent1)
  BIND(?adminParent AS ?parent2)
}
```",6,8,7,3,3,3,3,71,0,0,2,0,0.0,0
645,48,val,"Give me the commander in the force of the commander in Siege of Madrid and leader of the office, that is a government agency and an organisation, of Camilo Menéndez Tolosa.",SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. <http://dbpedia.org/resource/Camilo_Menéndez_Tolosa> <http://dbpedia.org/property/office> ?v1 . <http://dbpedia.org/resource/Siege_of_Madrid> <http://dbpedia.org/ontology/commander> ?v3 . ?v2 <http://dbpedia.org/ontology/commander> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/GovernmentAgency>. ?v1 <http://dbpedia.org/ontology/leader> ?result . ?v2 <http://dbpedia.org/ontology/commander> ?v3 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?commander ?officeLeader WHERE {
  # Find the commander involved in the Siege of Madrid
  ?siege dbo:partOf dbr:Siege_of_Madrid .
  ?siege dbo:commander ?commander .

  # Find any office or government agency led by Camilo Menéndez Tolosa
  ?office dbo:leader dbr:Camilo_Menéndez_Tolosa ;
          a dbo:GovernmentAgency ; # Assuming the office is a government agency

  # Check if the commander is also linked to this office
  OPTIONAL { ?commander dbo:positionHeld ?office . }
}
```",5,7,6,3,2,3,3,71,0,0,1,0,0.0,0
926,47,val,Give me the father of the father of Abdulaziz and successor of the child of the spouse of Şermi Kadın.,SELECT ?result WHERE { ?v0 <http://dbpedia.org/ontology/spouse> <http://dbpedia.org/resource/Şermi_Kadın> . ?v3 <http://dbpedia.org/property/father> ?v0 . ?v3 <http://dbpedia.org/ontology/successor> ?result . <http://dbpedia.org/resource/Abdulaziz> <http://dbpedia.org/property/father> ?v1 . ?v1 <http://dbpedia.org/property/father> ?result . },"```sparql
# Query to find Abdulaziz's father
SELECT ?father WHERE {
  wd:Q12345 wdt:P22 ?father .
}

# Query to find Faisal bin Turki (Abdul Rahman's father)
SELECT ?faisal WHERE {
  ?abdulrahman wdt:P22 wd:Q67890 . # Abdul Rahman's identifier
  ?abdulrahman wdt:P22 ?faisal .
}

# Query to find Şermi Kadın's spouse and child
SELECT ?child WHERE {
  wd:Q98765 wdt:P26 ?spouse . # Şermi Kadın's identifier
  ?spouse wdt:P40 ?child .
}

# Query to find Murad V's successor
SELECT ?successor WHERE {
  wd:Q54321 wdt:P54 ?successor . # Murad V's identifier
}
```",5,5,6,3,2,3,3,71,0,0,1,0,0.0,0
976,55,val,"Give me the office of the mayor, that is a politician and an office holder and Turkish, of Nation Alliance (Turkey) and office of the person born as Mehmet Naci Bostancı and office of the leader, that is a politician, of Grand National Assembly of Turkey.","SELECT ?result WHERE { <http://dbpedia.org/resource/Nation_Alliance_(Turkey)> <http://dbpedia.org/property/leader> ?v5 . ?v5 <http://dbpedia.org/property/office> ?result . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v2 <http://dbpedia.org/property/office> ?result . ?v0 <http://dbpedia.org/property/office> ?result . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. <http://dbpedia.org/resource/Grand_National_Assembly_of_Turkey> <http://dbpedia.org/ontology/leader> ?v2 . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v5 <http://dbpedia.org/ontology/nationality> <http://dbpedia.org/resource/Turkey>. ?v0 <http://dbpedia.org/property/birthName> ""Mehmet Naci Bostancı""@en . }","```sparql
# Query for the Mayor associated with Nation Alliance (Turkey)
SELECT ?mayorOffice WHERE {
  ?person a dbo:Mayor ;
          foaf:nationality dbr:Turkey ;
          dbo:politicalParty dbr:Nation_Alliance_(Turkey) .
  ?person dbo:occupation dbr:Politician ;
          dbo:officeHolder dbr:Office_holder .
  ?person dbo:holdsPublicOffice ?mayorOffice .
}

# Query for Mehmet Naci Bostancı's Office
SELECT ?office WHERE {
  ?person foaf:name ""Mehmet Naci Bostancı""@en ;
          foaf:birthName ""Mehmet Naci Bostancı""@en ;
          dbo:holdsPublicOffice ?office .
}

# Query for the Leader of the Grand National Assembly of Turkey
SELECT ?leaderOffice WHERE {
  ?person a dbo:Politician ;
          dbo:headOf dbr:Grand_National_Assembly_of_Turkey ;
          dbo:holdsPublicOffice ?leaderOffice .
}
```",6,10,7,2,3,3,3,71,0,0,1,0,0.0,0
839,54,val,"Give me the band of the person born, that is a musical artist, as Kevin Richard Russell and band of the member of the band, that is a band and a group, of Peter Schorowsky and band of Matthias Röhr.","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/bandMember> <http://dbpedia.org/resource/Matthias_Röhr> . ?v0 <http://dbpedia.org/ontology/bandMember> ?v5 . ?v3 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Group>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Band>. ?v3 <http://dbpedia.org/property/birthName> ""Kevin Richard Russell""@en . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?result <http://dbpedia.org/ontology/bandMember> ?v5 . <http://dbpedia.org/resource/Peter_Schorowsky> <http://dbpedia.org/ontology/associatedMusicalArtist> ?v0 . }","```sparql
# Query for Kevin Richard Russell's band
SELECT ?band WHERE {
  ?person dbo:birthName ""Kevin Richard Russell""@en .
  ?person dbo:associatedBand ?band .
  FILTER EXISTS { ?band a dbo:MusicalArtist . }
}

UNION

# Query for Peter Schorowsky's band
SELECT ?band WHERE {
  ?person dbo:birthName ""Peter Schorowsky""@en .
  ?person dbo:memberOf ?group .
  ?group a dbo:Band ;
         a dbo:Group .
  ?group dbo:associatedBand ?band .
}

UNION

# Query for Matthias Röhr's band
SELECT ?band WHERE {
  ?person dbo:birthName ""Matthias Röhr""@en .
  ?person dbo:memberOf ?group .
  ?group a dbo:Band ;
         a dbo:Group .
  ?group dbo:associatedBand ?band .
}
```",6,9,7,3,3,3,3,71,0,0,1,0,0.0,0
445,53,val,"Give me the death place of Patrick Moore and entity in the residence, that is a country, of the resident, that is an athlete, of Great Britain and entity in the award of George H. Cameron.",SELECT ?result WHERE { ?v3 <http://dbpedia.org/property/residence> <http://dbpedia.org/resource/Great_Britain> . ?v3 <http://dbpedia.org/property/residence> ?v2 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Athlete>. ?result <http://dbpedia.org/ontology/country> ?v1 . <http://dbpedia.org/resource/George_H._Cameron> <http://dbpedia.org/property/awards> ?v1 . <http://dbpedia.org/resource/Patrick_Moore> <http://dbpedia.org/ontology/deathPlace> ?result . ?result <http://dbpedia.org/ontology/location> ?v2 . },"```sparql
# Query to find Patrick Moore's death place
SELECT ?deathPlace WHERE {
  dbpedia:Patrick_Moore dbo:deathPlace ?deathPlace .
}

UNION

# Query to find a British athlete and their country of residence
SELECT ?athlete ?residenceCountry WHERE {
  ?athlete rdf:type dbo:Athlete ;
           dbo:nationality dbr:United_Kingdom .
  OPTIONAL { ?athlete dbo:residenceCountry ?residenceCountry . }
}

UNION

# Query to find the award associated with George H. Cameron
SELECT ?award WHERE {
  dbpedia:George_H._Cameron dbo:award ?award .
}
```",6,8,7,3,3,3,3,71,0,0,1,0,0.0,0
773,54,val,"Give me the spouse of the father of Charles the Fat and parent of Charles the Fat and parent of the successor of the child, that is a royalty, of Louis the Pious.",SELECT ?result WHERE { <http://dbpedia.org/resource/Charles_the_Fat> <http://dbpedia.org/ontology/parent> ?result . <http://dbpedia.org/resource/Louis_the_Pious> <http://dbpedia.org/ontology/child> ?v0 . ?v3 <http://dbpedia.org/ontology/spouse> ?result . <http://dbpedia.org/resource/Charles_the_Fat> <http://dbpedia.org/property/father> ?v3 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?result <http://dbpedia.org/ontology/child> ?v5 . ?v0 <http://dbpedia.org/ontology/successor> ?v5 . },"```sparql
SELECT ?spouse WHERE {
  ?charlesFat dbo:father dbc:Louis_the_German .
  ?louisGerman dbo:spouse ?spouse .
  FILTER EXISTS { ?spouse rdf:type dbo:Monarch . }
}
```",6,7,7,3,3,3,3,71,0,0,1,0,0.0,0
507,43,val,"Give me the professional in Film director, television director and director of the movie, that is a movie and a work, with the person born on 1919-06-17 and spouse of Anne V. Coates.","SELECT ?result WHERE { ?v4 <http://dbpedia.org/property/starring> ?v0 . ?result <http://dbpedia.org/ontology/spouse> <http://dbpedia.org/resource/Anne_V._Coates> . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Film>. ?v0 <http://dbpedia.org/ontology/birthDate> ""1919-06-17""^^<http://www.w3.org/2001/XMLSchema#date> . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?result <http://dbpedia.org/property/occupation> ""Film director, television director""@en . ?v4 <http://dbpedia.org/ontology/director> ?result . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?person ?filmDirectorRole ?tvDirectorRole ?movieDirectorRole WHERE {
  ?person a dbo:FilmDirector ;
          dbo:birthDate ""1919-06-17""^^xsd:date ;
          dbo:spouse dbr:Anne_V._Coates .
  
  OPTIONAL { ?person dbo:occupation ?filmDirectorRole . }
  OPTIONAL { ?person dbo:occupation ?tvDirectorRole . }
  OPTIONAL { ?person dbo:directorOf ?movieDirectorRole . }

  FILTER (CONTAINS(LCASE(STR(?filmDirectorRole)), ""film director"") || 
          CONTAINS(LCASE(STR(?tvDirectorRole)), ""television director"") ||
          CONTAINS(LCASE(STR(?movieDirectorRole)), ""director""))
}
```",5,7,6,3,3,3,3,71,0,0,1,0,0.0,0
36,22,val,"Give me the actor of the claim to fame, that is a film, of Lepacious Bose and person born in the birth year of Deanne Bray.",SELECT ?result WHERE { <http://dbpedia.org/resource/Deanne_Bray> <http://dbpedia.org/ontology/birthYear> ?v0 . <http://dbpedia.org/resource/Lepacious_Bose> <http://dbpedia.org/ontology/knownFor> ?v3 . ?result <http://dbpedia.org/ontology/birthYear> ?v0 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Film>. ?v3 <http://dbpedia.org/ontology/starring> ?result . },"```sparql
# Step 1: Find a notable film of Lepacious Bose
SELECT ?film WHERE {
    ?person dbo:birthName ""Lepacious Bose""@en .
    ?person dbo:profession dbr:Actor .
    ?film dbo:starring ?person .
    FILTER NOT EXISTS { ?film dbo:genre ?genre . FILTER regex(?genre, ""TV"", ""i"") }
} LIMIT 1

# Step 2: Find Deanne Bray's birth year
SELECT ?birthYear WHERE {
    ?person dbo:birthName ""Deanne Bray""@en .
    ?person dbo:birthday ?dateBirth .
    BIND(YEAR(?dateBirth) AS ?birthYear)
}

# Step 3: Find an actor from the film who was born in Deanne Bray's birth year
SELECT DISTINCT ?actor WHERE {
    # Assuming we have found a film and birth year from previous queries
    VALUES (?film ?birthYear) { (dbr:FilmName dbr:BirthYear) } # Replace with actual values

    ?film dbo:starring ?actor .
    ?actor dbo:birthday ?dateBirth .
    FILTER(YEAR(?dateBirth) = ?birthYear)
}
```

Note: The placeholders `dbr:FilmName` and `dbr:BirthYear` should be replaced with the actual film name and birth year obtained from steps 1 and 2.",4,5,5,2,2,2,3,28,0,0,1,0,0.0,0
200,7,val,Give me the reference to the name of Angelcorpse and band member of Order from Chaos.,SELECT ?result WHERE { <http://dbpedia.org/resource/Angelcorpse> <http://xmlns.com/foaf/0.1/name> ?v0 . ?result <http://dbpedia.org/ontology/associatedMusicalArtist> <http://dbpedia.org/resource/Order_from_Chaos> . ?result <http://xmlns.com/foaf/0.1/name> ?v0 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?angelcorpseName ?commonMember WHERE {
  # Get the name of Angelcorpse
  dbr:Angelcorpse dbo:name ?angelcorpseName .

  # Find members of Angelcorpse
  ?member dbo:band dbr:Angelcorpse .
  
  # Find members of Order from Chaos
  ?orderMember dbo:band dbr:Order_from_Chaos .

  # Identify common members between the two bands
  FILTER (?member = ?orderMember)
  BIND(?member AS ?commonMember)
}
```",3,3,4,2,2,2,2,9,0,0,1,0,0.0,0
582,46,val,"Give me the reference to the residence of the reference, that is a scientist, to Hirotaka Sugawara and player in the father, that is an athlete and a soccer manager and a sports manager, of Masami Nagasawa.","SELECT ?result WHERE { ?v2 <http://xmlns.com/foaf/0.1/name> ""Hirotaka Sugawara""@en . ?v2 <http://dbpedia.org/property/residence> ?v1 . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Athlete>. ?result <http://xmlns.com/foaf/0.1/name> ?v1 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Scientist>. ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsManager>. ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerManager>. ?v4 <http://dbpedia.org/ontology/team> ?result . <http://dbpedia.org/resource/Masami_Nagasawa> <http://dbpedia.org/property/father> ?v4 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?hirotakaResidence ?fatherResidence WHERE {
  # Find Hirotaka Sugawara's residence
  OPTIONAL { 
    ?hirotaka a dbo:Scientist ;
              foaf:name ""Hirotaka Sugawara"" .
    ?hirotaka dbo:residenceLocation ?hirotakaResidence .
  }

  # Find Masami Nagasawa and her father's details
  ?masami a dbo:Person ;
          foaf:name ""Masami Nagasawa"" ;
          dbo:father ?father .

  OPTIONAL {
    ?father a dbo:Athlete ;
            dbo:sportTeam ?team ;
            dbo:occupation [a dbo:SoccerManager, dbo:SportsManager] .
    ?father dbo:residenceLocation ?fatherResidence .
  }
}
```",5,9,6,3,2,3,3,71,0,0,1,0,0.0,0
507,55,val,"Give me the spouse of the person born as Anne Voase Coates and professional in the profession of Guy Ferland and director of the movie, that is a movie and a work, with Beryl Reid.","SELECT ?result WHERE { ?v5 <http://dbpedia.org/property/starring> <http://dbpedia.org/resource/Beryl_Reid> . ?v3 <http://dbpedia.org/property/birthName> ""Anne Voase Coates""@en . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Film>. <http://dbpedia.org/resource/Guy_Ferland> <http://dbpedia.org/property/occupation> ?v2 . ?result <http://dbpedia.org/ontology/spouse> ?v3 . ?v5 <http://dbpedia.org/ontology/director> ?result . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?result <http://dbpedia.org/property/occupation> ?v2 . }","```sparql
SELECT ?spouse WHERE {
  ?anne foaf:name ""Anne Voase Coates""@en .
  ?anne dbo:spouse ?spouse .
  
  OPTIONAL { 
    ?spouse dbo:profession dbr:Film_editor .
  }
  
  ?movie dbo:director ?anne ;
         dbo:starring ?beryl .
  ?beryl foaf:name ""Beryl Reid""@en .
}
```",6,8,7,2,3,3,3,71,0,0,1,0,0.0,0
976,54,val,"Give me the office of the leader, that is a politician, of Grand National Assembly of Turkey and office of Naci Bostancı and office of the mayor, that is a politician and an office holder and Turkish, of the reference, that is an organisation and a political party and Turkish, to Millet İttifakı.","SELECT ?result WHERE { ?v1 <http://xmlns.com/foaf/0.1/name> ""Millet İttifakı""@en . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?v4 <http://dbpedia.org/ontology/nationality> <http://dbpedia.org/resource/Turkey>. ?v1 <http://dbpedia.org/property/leader> ?v4 . ?v2 <http://dbpedia.org/property/office> ?result . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v4 <http://dbpedia.org/property/office> ?result . <http://dbpedia.org/resource/Grand_National_Assembly_of_Turkey> <http://dbpedia.org/ontology/leader> ?v2 . <http://dbpedia.org/resource/Naci_Bostancı> <http://dbpedia.org/property/office> ?result . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v1 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Turkey>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/PoliticalParty>. }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?officeLeader ?naciBostanciOffice ?mayorOffice WHERE {
  # Office of the leader of the Grand National Assembly of Turkey
  ?assembly a dbo:Parliament ;
            dbo:president ?leader .
  ?leader dbo:positionHeld ?officeLeader .

  # Office of Naci Bostancı
  dbr:Naci_Bostancı dbo:politicalOffice ?naciBostanciOffice .

  # Millet İttifakı as an organization or political party
  ?millettifaki a (dbo:Organization|dbo:PoliticalParty) ;
                rdfs:label ""Millet İttifakı""@tr .
  
  # Mayor associated with Millet İttifakı, who is also a politician and office holder
  ?mayor dbo:politicalAffiliation ?millettifaki ;
         dbo:positionHeld ?mayorOffice ;
         dbo:officeHolder true ;
         dbo:politician true .
}
```",6,13,7,3,3,3,3,71,0,0,1,0,0.0,0
41,21,val,"Give me the party of Declan Costello and party of the work, that is an office holder, of yes and party of Mark Durkan.","SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. <http://dbpedia.org/resource/Mark_Durkan> <http://dbpedia.org/ontology/party> ?result . ?v1 <http://dbpedia.org/ontology/party> ?result . <http://dbpedia.org/resource/Declan_Costello> <http://dbpedia.org/ontology/party> ?result . ?v1 <http://dbpedia.org/property/author> ""yes""@en . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX db: <http://dbpedia.org/resource/>

SELECT ?declanParty ?markOfficeHolder ?markParty WHERE {
  # Declan Costello's Party
  db:Declan_Costello dbo:party ?declanParty .

  # Mark Durkan's Office Holder Status and Party
  OPTIONAL { 
    db:Mark_Durkan dbo:officeHolder ?markOfficeHolder .
    db:Mark_Durkan dbo:party ?markParty .
  }
}
```",4,5,5,2,3,2,3,28,1,0,0,1.0,1.0,1.0
645,55,val,"Give me the leader of the office, that is a government agency and an organisation, of Camilo Menéndez Tolosa and military force of the force, that is an event and a military conflict and a societal event, of Francisco Largo Caballero and commander in the force of Carlos Asensio Cabanillas.",SELECT ?result WHERE { ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?v5 <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Francisco_Largo_Caballero> . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/GovernmentAgency>. ?v3 <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Carlos_Asensio_Cabanillas> . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v3 <http://dbpedia.org/ontology/commander> ?result . ?v2 <http://dbpedia.org/ontology/leader> ?result . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?result <http://dbpedia.org/ontology/battle> ?v5 . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. <http://dbpedia.org/resource/Camilo_Menéndez_Tolosa> <http://dbpedia.org/property/office> ?v2 . },"```sparql
# Step 1: Find the government agency or organization led by Camilo Menéndez Tolosa
SELECT ?office WHERE {
  ?person dbo:name ""Camilo Menéndez Tolosa""@en .
  ?person dbo:positionHeld ?office .
  ?office a ?type .
  FILTER(?type IN (dbpedia-owl:GovernmentAgency, dbpedia-owl:Organization))
}

# Step 2: Find the military force associated with Francisco Largo Caballero
SELECT DISTINCT ?militaryForce WHERE {
  ?event dbo:name ?eventName .
  ?event rdf:type ?eventType .
  ?person dbo:name ""Francisco Largo Caballero""@en .
  ?person dbo:participatedIn ?event .
  FILTER(?eventType IN (dbpedia-owl:MilitaryConflict, dbpedia-owl:SocietalEvent))
  
  OPTIONAL { ?militaryForce dbo:relatedTo ?event . }
}

# Step 3: Find Carlos Asensio Cabanillas' role in the identified military force
SELECT DISTINCT ?role WHERE {
  ?person dbo:name ""Carlos Asensio Cabanillas""@en .
  ?person dbo:commanderOf ?militaryForce .
  
  FILTER(?militaryForce IN (?militaryForce))
}

# Step 4: Find the leader of the office or organization led by Camilo Menéndez Tolosa
SELECT DISTINCT ?leader WHERE {
  ?office dbo:head ?leader .
  ?person dbo:name ""Camilo Menéndez Tolosa""@en .
  ?person dbo:positionHeld ?office .
}
```",6,11,7,2,3,3,3,71,0,0,1,0,0.0,0
892,50,val,"Give me the landmark at elevation of the award of the member of E-girls and entity in the administration, that is Italian and a region and a settlement and an administrative region, of Democratic Party (Italy).",SELECT ?result WHERE { ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. ?v0 <http://dbpedia.org/property/leaderParty> <http://dbpedia.org/resource/Democratic_Party_(Italy)> . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/AdministrativeRegion>. ?result <http://dbpedia.org/ontology/province> ?v0 . ?v1 <http://dbpedia.org/property/awards> ?v3 . ?v0 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Italy>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Region>. <http://dbpedia.org/resource/E-girls> <http://dbpedia.org/ontology/bandMember> ?v1 . ?result <http://dbpedia.org/ontology/elevation> ?v3 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?landmark WHERE {
  # Step 1: Identify the member of E-girls associated with an award
  ?member dbo:memberOf dbr:E-girls .
  ?member dbo:award ?award .

  # Step 2: Find the Italian entity that is a region, settlement, and administrative region in the Democratic Party
  ?region a dbo:Region ;
          dbo:country dbr:Italy ;
          dbo:settlementType ?settlementType ;
          dbo:administrativeRegion ?adminRegion ;
          dbo:politicalParty dbr:Democratic_Party_(Italy) .

  FILTER(?settlementType = dbo:Settlement && ?adminRegion = dbo:AdministrativeRegion)

  # Step 3: Find the landmark at the highest elevation in this region
  ?landmark dbo:elevation ?elevation .
  ?landmark dbo:location dbr:?region .

  # Order by elevation to get the highest one
  ORDER BY DESC(?elevation)
}
LIMIT 1
```",5,9,6,3,2,3,3,71,0,0,2,0,0.0,0
645,42,val,"Give me the leader of the office, that is a government agency and an organisation, of Camilo Menéndez Tolosa and military force of Spanish Civil War and commander in the force of Carlos Asensio Cabanillas.",SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/GovernmentAgency>. ?v1 <http://dbpedia.org/ontology/leader> ?result . ?v2 <http://dbpedia.org/ontology/commander> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?v2 <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Carlos_Asensio_Cabanillas> . ?result <http://dbpedia.org/ontology/battle> <http://dbpedia.org/resource/Spanish_Civil_War> . <http://dbpedia.org/resource/Camilo_Menéndez_Tolosa> <http://dbpedia.org/property/office> ?v1 . },"```sparql
# Find the role of Camilo Menéndez Tolosa
SELECT ?office WHERE {
  ?person foaf:name ""Camilo Menéndez Tolosa""@en .
  ?person dbo:positionHeld ?office .
}

UNION

# Find the military force commanded by Carlos Asensio Cabanillas during the Spanish Civil War
SELECT ?forceLeader WHERE {
  ?person foaf:name ""Carlos Asensio Cabanillas""@en .
  ?person dbo:commanderOf ?militaryForce .
  ?militaryForce dbo:participatedIn <http://dbpedia.org/resource/Spanish_Civil_War> .
  ?militaryForce dbo:leader ?forceLeader .
}

# Find a common leader
SELECT DISTINCT ?commonLeader WHERE {
  # Camilo Menéndez Tolosa's office leadership
  ?office dbo:leader ?commonLeader .
  
  # Carlos Asensio Cabanillas' military force leadership
  ?militaryForceLeader dbo:leader ?commonLeader .
}
```",5,7,6,2,3,3,3,71,0,0,1,0,0.0,0
987,53,val,"Give me the birth place of Moamer Kasumović and entity in the region, that is a country, of Central European Time and birth place of the band, that is an artist and a musical artist, of the band, that is an artist, of Dado Polumenta.",SELECT ?result WHERE { <http://dbpedia.org/resource/Dado_Polumenta> <http://dbpedia.org/ontology/associatedMusicalArtist> ?v3 . ?v3 <http://dbpedia.org/ontology/associatedMusicalArtist> ?v1 . ?v1 <http://dbpedia.org/ontology/birthPlace> ?result . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. ?v0 <http://dbpedia.org/property/timeZone> <http://dbpedia.org/resource/Central_European_Time> . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. <http://dbpedia.org/resource/Moamer_Kasumović> <http://dbpedia.org/ontology/birthPlace> ?result . ?result <http://dbpedia.org/ontology/country> ?v0 . },"```sparql
# Query for Slobodan Milošević's birthplace
SELECT ?birthPlace WHERE {
  wd:Q1198 dbo:birthPlace ?birthPlace .
}

# Query for countries in Central European Time zone from the birthplace of Slobodan Milošević
SELECT DISTINCT ?country WHERE {
  ?birthPlace wdt:P30 ?country .
  ?country wdt:P421 wd:Q11173 . # Q11173 is the identifier for Central European Time
}

# Query to find the band associated with Dado Povh
SELECT ?band WHERE {
  wd:Q1105048 dbo:member ?band .
}

# Query for the birth place of the band found in the previous query
SELECT ?bandBirthPlace WHERE {
  ?band dbo:birthPlace ?bandBirthPlace .
}

# Query for countries in the region of the band's birthplace
SELECT DISTINCT ?country WHERE {
  ?bandBirthPlace wdt:P30 ?country .
}
```",6,10,7,3,3,3,3,71,0,0,1,0,0.0,0
865,45,val,Give me the father of AK Abdul Momen and father of the child of the father of Abul Maal Abdul Muhith and native of British Raj.,SELECT ?result WHERE { <http://dbpedia.org/resource/AK_Abdul_Momen> <http://dbpedia.org/property/father> ?result . ?v1 <http://dbpedia.org/property/father> ?v4 . ?v1 <http://dbpedia.org/property/father> ?result . ?result <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/British_Raj> . <http://dbpedia.org/resource/Abul_Maal_Abdul_Muhith> <http://dbpedia.org/property/father> ?v4 . },"```sparql
SELECT DISTINCT ?father WHERE {
  # Father of AK Abdul Momen
  ?momem dbr:AK_Abdul_Momen dbo:parent ?father .
  
  # Father of Abul Maal Abdul Muhith
  ?muhith dbr:Abul_Maal_Abdul_Muhith dbo:parent ?fatherOfMuhith .

  # Child of the father of Abul Maal Abdul Muhith (could be Abul Maal himself or a sibling)
  OPTIONAL { ?childOfFatherOfMuhith dbo:parent ?fatherOfMuhith . }

  # Father of the child from step 3
  OPTIONAL { ?childOfFatherOfMuhith dbr:Abul_Maal_Abdul_Muhith ?isChild . }
  
  # Ensure the person is a native of British Raj
  ?father dbo:nativePlace dbr:British_Raj .

  FILTER (?father = ?fatherOfMuhith)
}
```",5,5,6,3,3,3,3,71,0,0,1,0,0.0,0
926,42,val,"Give me the child of the father, that is a royalty, of Mustafa III and father of the father of Abdulaziz and successor of Mustafa III.",SELECT ?result WHERE { <http://dbpedia.org/resource/Mustafa_III> <http://dbpedia.org/ontology/successor> ?result . ?v0 <http://dbpedia.org/ontology/child> ?result . <http://dbpedia.org/resource/Mustafa_III> <http://dbpedia.org/property/father> ?v0 . ?v1 <http://dbpedia.org/property/father> ?result . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. <http://dbpedia.org/resource/Abdulaziz> <http://dbpedia.org/property/father> ?v1 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?child WHERE {
  dbr:Mustafa_III dbo:spouse ?spouse .
  ?spouse dbo:child ?child .
  ?child a dbo:Monarch ;
         dbo:succeededBy dbr:Selim_III .
}
```",5,6,6,2,3,3,3,71,0,0,1,0,0.0,0
456,54,val,"Give me the professional in the alter ego of the reference, that is a fictional character, to Lamont Cranston (radio, film and television) and spouse of the actor of Pacific Drive and band of Alan Doyle.","SELECT ?result WHERE { ?v3 <http://dbpedia.org/ontology/spouse> ?result . <http://dbpedia.org/resource/Alan_Doyle> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v0 <http://dbpedia.org/property/alterEgo> ?v5 . ?result <http://dbpedia.org/property/occupation> ?v5 . ?v0 <http://xmlns.com/foaf/0.1/name> ""Lamont Cranston (radio, film and television)""@en . <http://dbpedia.org/resource/Pacific_Drive> <http://dbpedia.org/property/starring> ?v3 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/FictionalCharacter>. }","```sparql
SELECT ?character ?alterEgo WHERE {
  ?character dbo:alias ""Lamont Cranston""@en .
  ?character dbo:alterEgo ?alterEgo .
}
```",6,7,7,3,3,3,3,71,0,0,1,0,0.0,0
933,46,val,"Give me the reference to the birth name of Alan Warner (musician) and band of the band of the band, that is an artist and a musical artist, of The Ramong Sound.",SELECT ?result WHERE { ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. <http://dbpedia.org/resource/Alan_Warner_(musician)> <http://dbpedia.org/property/birthName> ?v3 . <http://dbpedia.org/resource/The_Ramong_Sound> <http://dbpedia.org/ontology/associatedMusicalArtist> ?v2 . ?result <http://xmlns.com/foaf/0.1/name> ?v3 . ?v2 <http://dbpedia.org/ontology/associatedMusicalArtist> ?v0 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?v0 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?birthName ?bandName WHERE {
  ?person a dbo:Musician ;
          foaf:name ""Alan Warner"" ;
          dbp:birthdayYear ?year .
  
  OPTIONAL { ?person dbp:birthName ?birthName . }
  
  ?person dbo:memberOfBand ?band .
  ?band foaf:name ?bandName .

  FILTER EXISTS {
    ?band dbo:genre dbr:Punk_rock ;
          dbo:influencedBy dbr:The_Ramones .
  }
}
```",5,7,6,3,2,3,3,71,0,0,1,0,0.0,0
791,42,val,"Give me the predecessor of Emperor Antoku and father of the child, that is a royalty, of Emperor Takakura and spouse of the spouse, that is a royalty, of Emperor Takakura.",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/successor> <http://dbpedia.org/resource/Emperor_Antoku> . ?v1 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Emperor_Takakura> . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v1 <http://dbpedia.org/property/father> ?result . ?v2 <http://dbpedia.org/ontology/spouse> <http://dbpedia.org/resource/Emperor_Takakura> . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?result <http://dbpedia.org/ontology/spouse> ?v2 . },"```sparql
# Step 1: Find Emperor Antoku's predecessor
SELECT ?predecessor WHERE {
  wd:Q123456 wdt:P39 wd:Q123457 . # Emperor Antoku (replace with actual QID)
  wd:Q123457 wdt:P1367 ?predecessor .
}

UNION

# Step 2: Find a royal child of Emperor Takakura
SELECT DISTINCT ?child WHERE {
  wd:Q234567 wdt:P39 wd:Q345678 . # Emperor Takakura (replace with actual QID)
  ?child wdt:P40 wd:Q234567 .
  ?child wdt:P31 wd:Q5 . # Ensure the child is a human
}

UNION

# Step 3: Find the spouse of this royal child
SELECT DISTINCT ?spouse WHERE {
  ?child wdt:P26 ?spouse .
  ?spouse wdt:P31 wd:Q5 . # Ensure the spouse is a human
}

UNION

# Step 4: Find Emperor Takakura's spouse who is royalty
SELECT DISTINCT ?empress WHERE {
  wd:Q234567 wdt:P26 ?empress .
  ?empress wdt:P31 wd:Q5 . # Ensure the empress is a human
}
```

Note: Replace `wd:Q123456`, `wd:Q123457`, `wd:Q234567`, and `wd:Q345678` with the actual QIDs for Emperor Antoku, his predecessor, Emperor Takakura, and any relevant individuals respectively. The queries are structured to find the necessary relationships and ensure all individuals involved are identified as royalty where specified.",5,7,6,2,3,3,3,71,0,0,1,0,0.0,0
606,16,val,"Give me the birthplace of the alumnus of University of Pennsylvania and figure known as the nickname of DeKalb, Illinois.","SELECT ?result WHERE { ?result <http://dbpedia.org/property/nickname> ?v2 . ?v3 <http://dbpedia.org/ontology/birthPlace> ?result . ?v3 <http://dbpedia.org/ontology/almaMater> <http://dbpedia.org/resource/University_of_Pennsylvania> . <http://dbpedia.org/resource/DeKalb,_Illinois> <http://dbpedia.org/property/nickname> ?v2 . }","```sparql
SELECT ?birthPlace WHERE {
  ?person dbo:almaMater dbr_University_of_Pennsylvania ;
          foaf:name ""Ronald Reagan""@en .
  OPTIONAL { ?person dbo:nickname ""DeKalb""@en . }
  ?person dbo:birthPlace ?birthPlace .
}
```",4,4,5,2,2,3,2,20,0,0,1,0,0.0,0
216,52,val,"Give me the player in the coach of the reference, that is an organisation and a soccer club, to Croatia U21 and player in the coach, that is a soccer player and a sports manager and a soccer manager, of Bosnia and Herzegovina national under-18 football team and team of Ognjen Vukojević.","SELECT ?result WHERE { ?v3 <http://xmlns.com/foaf/0.1/name> ""Croatia U21""@en . ?result <http://dbpedia.org/ontology/coach> <http://dbpedia.org/resource/Ognjen_Vukojević> . ?v2 <http://dbpedia.org/ontology/team> ?result . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsManager>. ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerManager>. ?v3 <http://dbpedia.org/ontology/coach> ?v2 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerClub>. ?v5 <http://dbpedia.org/ontology/team> ?result . <http://dbpedia.org/resource/Bosnia_and_Herzegovina_national_under-18_football_team> <http://dbpedia.org/ontology/coach> ?v5 . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerPlayer>. }","```sparql
# Query to find the first individual (coach of Croatia U21 associated with a soccer club)
SELECT ?player WHERE {
  ?club rdf:type dbo:SoccerClub .
  ?club dbo:coach ?player .
  ?player dbo:nationality dbr:Croatia .
  ?team dbo:coach ?player .
  ?team rdfs:label ""Croatia national under-21 football team""@en
}

UNION

# Query to find the second individual (soccer player, sports manager, soccer manager of Bosnia and Herzegovina U18)
SELECT ?player WHERE {
  ?player rdf:type dbo:SoccerPlayer ;
          dbo:sportsManagerOf ?team1 ;
          dbo:managerOf ?team2 .
  ?team1 rdfs:label ""Bosnia and Herzegovina national under-18 football team""@en .
  ?team2 dbo:member ?ognjen .
  ?ognjen rdfs:label ""Ognjen Vukojević""@en .
}
```",6,11,7,3,3,3,3,71,0,0,1,0,0.0,0
888,15,val,"Give me the commander in the force, that is a societal event and an event, of the military force of War in Donbas (2014–2022) and awardee of Hero of Ukraine.","SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/commander> ?result . ?result <http://dbpedia.org/property/awards> ""Hero of Ukraine""@en . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?v1 <http://dbpedia.org/ontology/commander> ?v0 . ?v0 <http://dbpedia.org/ontology/battle> <http://dbpedia.org/resource/War_in_Donbas_(2014–2022)> . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?commander ?name WHERE {
  ?event dbo:type dbr:Military_conflict .
  ?event dbo:name ""War in Donbas (2014–2022)""@en .
  
  ?commander dbo:role ""Commander""@en ;
             dbo:awardReceived dbr:Hero_of_Ukraine .

  ?commander rdfs:label ?name .
  FILTER(LANG(?name) = 'uk' || LANG(?name) = 'en')
}
```",4,6,5,3,2,3,2,20,0,0,2,0,0.0,0
507,51,val,"Give me the director of the movie, that is a movie and a work, with Beryl Reid and professional in the profession of the person born on 1966-02-18.","SELECT ?result WHERE { ?v4 <http://dbpedia.org/ontology/director> ?result . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Film>. ?v1 <http://dbpedia.org/ontology/birthDate> ""1966-02-18""^^<http://www.w3.org/2001/XMLSchema#date> . ?v1 <http://dbpedia.org/property/occupation> ?v2 . ?v4 <http://dbpedia.org/property/starring> <http://dbpedia.org/resource/Beryl_Reid> . ?result <http://dbpedia.org/property/occupation> ?v2 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT DISTINCT ?director WHERE {
  # Step 1: Identify the person born on 1966-02-18
  ?person dbo:birthday ""1966-02-18""^^xsd:date .
  
  # Step 2: Determine their profession
  ?person dbo:profession ?occupation .

  # Step 3: Find movies featuring Beryl Reid
  dbr:Beryl_Reid dbo:actedIn ?movie .

  # Step 4: Identify common works (movies) associated with the person
  ?person dbo:work ?movie .
  
  # Ensure the movie is both a work of the person and features Beryl Reid
  FILTER(?movie = ?movie)

  # Step 5: Determine the director of such a movie
  ?movie dbo:director ?director .
}
```",5,7,6,3,2,3,3,71,0,0,2,0,0.0,0
47,40,val,"Give me the office of Bidesh Ranjan Bose and office of the administration of the commander, that is a politician, in Operation Green Hunt and office of Ajoy Mukherjee.",SELECT ?result WHERE { ?v1 <http://dbpedia.org/property/governor> ?v2 . ?v1 <http://dbpedia.org/property/office> ?result . <http://dbpedia.org/resource/Ajoy_Mukherjee> <http://dbpedia.org/property/office> ?result . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. <http://dbpedia.org/resource/Operation_Green_Hunt> <http://dbpedia.org/ontology/commander> ?v2 . <http://dbpedia.org/resource/Bidesh_Ranjan_Bose> <http://dbpedia.org/property/office> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?person ?office ?role WHERE {
  # Bidesh Ranjan Bose's role in Operation Green Hunt
  OPTIONAL {
    VALUES ?bosesResource { dbr:Bidesh_Ranjan_Bose }
    ?bosesResource dbo:occupation ?office .
    FILTER(CONTAINS(LCASE(?office), ""naxalite"") || CONTAINS(LCASE(?office), ""operation green hunt""))
  }

  # Commander in Operation Green Hunt
  OPTIONAL {
    ?commander dbo:occupation ?role .
    FILTER(CONTAINS(LCASE(?role), ""politician"") && CONTAINS(LCASE(?role), ""operation green hunt""))
    ?commander dbo:office ?office .
  }

  # Ajoy Mukherjee's office
  OPTIONAL {
    VALUES ?mukherjeeResource { dbr:Ajoy_Mukherjee }
    ?mukherjeeResource dbo:occupation ?office .
  }

  # Bind person names for clarity in results
  BIND(COALESCE(?bosesResource, ?commander, ?mukherjeeResource) AS ?person)
}
```",5,6,6,3,3,3,3,71,0,0,1,0,0.0,0
933,47,val,Give me the band of the band of Alan Warner (musician) and reference to the birth name of the professional in Musician.,SELECT ?result WHERE { ?v0 <http://dbpedia.org/property/occupation> <http://dbpedia.org/resource/Musician> . ?v0 <http://dbpedia.org/property/birthName> ?v3 . ?v1 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?result <http://xmlns.com/foaf/0.1/name> ?v3 . <http://dbpedia.org/resource/Alan_Warner_(musician)> <http://dbpedia.org/ontology/associatedMusicalArtist> ?v1 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?band ?birthName WHERE {
  # Find Alan Warner and his associated band
  ?person a dbo:Musician ;
          foaf:name ""Alan Warner"" ;
          dbo:associatedBand ?band .
  
  # Get the birth name of Alan Warner
  OPTIONAL { 
    ?person foaf:name ?birthName .
  }
}
```",5,5,6,3,2,3,3,71,0,0,1,0,0.0,0
98,20,val,Give me the region of Philippine Standard Time and entity in Philippines and birth place of the person born as Paolo Elito M. Ballesteros IV.,"SELECT ?result WHERE { ?v1 <http://dbpedia.org/property/birthName> ""Paolo Elito M. Ballesteros IV""@en . ?v1 <http://dbpedia.org/ontology/birthPlace> ?result . ?result <http://dbpedia.org/ontology/timeZone> <http://dbpedia.org/resource/Philippine_Standard_Time> . ?result <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Philippines> . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT DISTINCT ?region ?entity ?birthPlace WHERE {
  # Find the region of Philippine Standard Time
  OPTIONAL {
    ?timeZone a dbo:TimeZone ;
              dbo:country dbr:Philippines ;
              dbo:timezoneName ""PST"" .
    ?region dbo:hasTimezone ?timeZone .
    BIND(?region AS ?entity)
  }
  
  # Find entities in the Philippines (e.g., regions or notable places)
  OPTIONAL {
    ?entity a dbo:Place ;
            dbo:country dbr:Philippines .
  }

  # Find birthplace of Paolo Elito M. Ballesteros IV
  OPTIONAL {
    ?person dbr:Paolo_Elito_M._Ballesteros_IV ;
            dbo:birthPlace ?birthPlace .
  }
}
```",4,4,5,2,3,2,3,28,0,0,2,0,0.0,0
281,19,val,"Give me the awardee of Medal bar and awardee of Volunteer Decoration and commander in the war, that is an event and a military conflict, of Roy Boehm.",SELECT ?result WHERE { <http://dbpedia.org/resource/Roy_Boehm> <http://dbpedia.org/ontology/battle> ?v2 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v2 <http://dbpedia.org/ontology/commander> ?result . ?result <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/Volunteer_Decoration> . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?result <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/Medal_bar> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?medalBar ?volunteerDecoration ?war 
WHERE {
  # Find the DBpedia resource for Roy Boehm
  ?person rdfs:label ""Roy Boehm""@en .
  
  # Get the Medal Bar awarded to him
  OPTIONAL { ?person dbo:award ?medalAward . ?medalAward dbo:name ?medalBar }
  
  # Get the Volunteer Decoration awarded to him
  OPTIONAL { ?person dbo:volunteerDecoration ?volunteerAward . ?volunteerAward dbo:name ?volunteerDecoration }
  
  # Find wars or conflicts he commanded in
  OPTIONAL { ?person dbo:commanderIn ?war }
  
  FILTER (lang(?medalBar) = 'en' && lang(?volunteerDecoration) = 'en')
}
```",4,6,5,2,3,2,3,28,0,0,1,0,0.0,0
582,48,val,"Give me the figure known as the nickname of Japan national football team and reference to the residence of the reference, that is a scientist, to Hirotaka Sugawara.","SELECT ?result WHERE { ?result <http://xmlns.com/foaf/0.1/name> ?v2 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Scientist>. ?result <http://dbpedia.org/property/nickname> ?v1 . ?v3 <http://dbpedia.org/property/residence> ?v2 . ?v3 <http://xmlns.com/foaf/0.1/name> ""Hirotaka Sugawara""@en . <http://dbpedia.org/resource/Japan_national_football_team> <http://dbpedia.org/property/nickname> ?v1 . }","```sparql
# Step 1: Get the nickname of the Japan national football team
SELECT ?nickname WHERE {
  wd:Q123456 rdfs:label ?nickname .
  FILTER (lang(?nickname) = 'en')
} LIMIT 1

# Step 2: Find a scientist associated with this nickname and their residence
SELECT DISTINCT ?scientist ?residenceLabel WHERE {
  # Assuming the nickname is ""Samurai Blue""
  wd:Q123456 rdfs:label ""Samurai Blue""@en .
  
  ?scientist dbo:nickname ?nickname .
  ?scientist dbo:residencePlace ?residence .
  ?residence rdfs:label ?residenceLabel .
  FILTER (lang(?residenceLabel) = 'en')
} LIMIT 1

# Step 3: Reference to Hirotaka Sugawara
SELECT DISTINCT ?connection WHERE {
  wd:Q123456 rdfs:label ""Samurai Blue""@en .
  
  ?scientist dbo:nickname ?nickname .
  ?scientist foaf:name ""Hirotaka Sugawara"" .
  ?scientist ?p ?connection .
} LIMIT 1
```

Note: Replace `wd:Q123456` with the actual DBpedia resource ID for the Japan national football team.",5,6,6,3,2,3,3,71,0,0,1,0,0.0,0
715,44,val,"Give me the commander in the force of Francisco Largo Caballero and commander in Rif War and leader of the office, that is a government agency and an organisation, of Carlos Franco Iribarnegaray.",SELECT ?result WHERE { ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/GovernmentAgency>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?v4 <http://dbpedia.org/ontology/commander> ?result . ?v4 <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Francisco_Largo_Caballero> . <http://dbpedia.org/resource/Rif_War> <http://dbpedia.org/ontology/commander> ?result . ?v2 <http://dbpedia.org/ontology/leader> ?result . <http://dbpedia.org/resource/Carlos_Franco_Iribarnegaray> <http://dbpedia.org/property/office> ?v2 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?commanderInForce ?rifWarCommander ?leaderOfOffice WHERE {
  # Francisco Largo Caballero's military command during the Rif War
  OPTIONAL {
    ?largoCaballero dbo:militaryCommander ?rifWarCommander .
    ?rifWarCommander dbo:spouse dbr:Franco_Iribarnegaray ; 
                    dbo:occupation ""Military"" .
    FILTER (CONTAINS(LCASE(?rifWarCommander), ""riff war""))
  }

  # Carlos Franco Iribarnegaray's leadership role
  ?francoIribarnegaray dbo:leaderOfOrganization ?leaderOfOffice ;
                      a dbo:MilitaryPerson .

  # Linking the commander under Largo Caballero to Franco Iribarnegaray
  OPTIONAL {
    ?commanderInForce dbo:militaryCommander ?rifWarCommander .
    ?commanderInForce dbo:spouse ?francoIribarnegaray .
  }

  # Identifying Francisco Largo Caballero and Carlos Franco Iribarnegaray
  VALUES (?largoCaballero ?francoIribarnegaray) {
    (dbr:Franco_Largo_Caballero dbr:Carlos_Franco_Iribarnegaray)
  }
}
```",5,7,6,2,3,3,3,71,0,0,1,0,0.0,0
433,55,val,"Give me the associated musical artist of the associated musical artist, that is an artist and a musical artist, of Scott LaFaro and professional in the profession of Bob Marley and associated musical artist of the person born, that is a musical artist and an artist, as Paul Laurence Dunbar Chambers Jr..","SELECT ?result WHERE { ?v5 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?v3 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. ?v3 <http://dbpedia.org/property/birthName> ""Paul Laurence Dunbar Chambers Jr.""@en . <http://dbpedia.org/resource/Scott_LaFaro> <http://dbpedia.org/ontology/associatedMusicalArtist> ?v5 . <http://dbpedia.org/resource/Bob_Marley> <http://dbpedia.org/property/occupation> ?v2 . ?result <http://dbpedia.org/property/occupation> ?v2 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. }","```sparql
# Step 1: Find Bill Evans as Scott LaFaro's associated musical artist
SELECT ?billEvans WHERE {
  ?scottLaFaro dbo:associatedMusicalArtist ?billEvans .
  ?scottLaFaro rdfs:label ""Scott LaFaro""@en .
}

# Step 2: Identify a musician who is also an artist (like Bob Marley)
SELECT ?musicianArtist WHERE {
  ?musicianArtist rdf:type dbo:Musician ;
                  dbo:profession dbr:Musician ;
                  dbo:associatedMusicalArtist ?artist .
  ?artist rdf:type dbo:Artist .
}

# Step 3: Find someone born in Pittsburgh who is both a musical artist and an artist
SELECT ?pittsburghPerson WHERE {
  ?pittsburghPerson dbo:birthPlace dbr:Pittsburgh,_Pennsylvania ;
                    rdf:type dbo:MusicalArtist, dbo:Artist .
}
```",6,10,7,2,3,3,3,71,0,0,1,0,0.0,0
93,17,val,"Give me the capital of Alaska and death place of the governor of the native, that is a politician, of Seattle.",SELECT ?result WHERE { ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. <http://dbpedia.org/resource/Alaska> <http://dbpedia.org/ontology/capital> ?result . ?v3 <http://dbpedia.org/ontology/deathPlace> ?result . ?v0 <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Seattle> . ?v0 <http://dbpedia.org/property/governor> ?v3 . },"```sparql
# Query to get the capital of Alaska
SELECT ?capital WHERE {
  wd:Q1599 dbo:capital ?capital .
}

UNION

# Query to find Gary Locke's death place (assuming he is the relevant politician)
SELECT ?deathPlace WHERE {
  wd:Q1693 dbo:placeOfBirth wd:Q1204 . # Seattle
  wd:Q1693 dbo:deathPlace ?deathPlace .
}
```",4,5,5,3,2,3,2,20,0,0,1,0,0.0,0
645,54,val,"Give me the leader of Ministry of the Army (Spain) and military force of the force, that is an event and a military conflict and a societal event, of the native, that is a president and a politician, of Restoration (Spain) and commander in the force of Carlos Asensio Cabanillas.",SELECT ?result WHERE { ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. <http://dbpedia.org/resource/Ministry_of_the_Army_(Spain)> <http://dbpedia.org/ontology/leader> ?result . ?v3 <http://dbpedia.org/ontology/commander> ?result . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?v5 <http://dbpedia.org/ontology/commander> ?v0 . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/President>. ?v3 <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Carlos_Asensio_Cabanillas> . ?v0 <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Restoration_(Spain)> . ?result <http://dbpedia.org/ontology/battle> ?v5 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?leader ?militaryForce ?event WHERE {
  # Find leaders of the Ministry of the Army during Restoration (Spain)
  ?leader dbo:positionTitle ""Minister of War""@en .
  ?leader dbo:nationality dbr:Spain .

  # Ensure they are connected to a president and politician from Restoration (Spain)
  ?president dbo:office ""President of Spain""@en ;
             dbo:termStart ?start ;
             dbo:termEnd ?end .
  FILTER (?start >= ""1874-12-29""^^xsd:date && ?end <= ""1931-04-14""^^xsd:date) # Approximate Restoration period
  ?leader dbo:spouseOrPartner ?president .

  # Find military forces involved in events that are both military conflicts and societal events
  ?militaryForce dbo:commander ?leader .
  ?event dbo:participatedInMilitaryConflict ?militaryForce ;
         a dbo:MilitaryConflict, dbo:SocietalEvent .

  # Ensure Carlos Asensio Cabanillas was a commander in the same force
  dbr:Claudio_Asen%C3%A7io_Cabanillas dbo:commander ?militaryForce .
}
```",6,11,7,3,3,3,3,71,0,0,1,0,0.0,0
645,49,val,"Give me the leader of the office, that is a government agency and an organisation, of the native of Restoration (Spain) and commander in the force of Carlos Asensio Cabanillas.",SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?v0 <http://dbpedia.org/property/office> ?v1 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/GovernmentAgency>. ?v2 <http://dbpedia.org/ontology/commander> ?result . ?v1 <http://dbpedia.org/ontology/leader> ?result . ?v0 <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Restoration_(Spain)> . ?v2 <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Carlos_Asensio_Cabanillas> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?leader WHERE {
  # Find Carlos Asensio Cabanillas and his birthplace
  dbr:Carlos_Asensio_Cabanillas dbo:nativePlace dbr:Restoration_(Spain) .
  
  # Identify the office or force he commanded
  OPTIONAL { 
    dbr:Carlos_Asensio_Cabanillas dbo:positionHeld ?office .
    ?office a dbo:GovernmentAgency ;
           a dbo:Organization .
  }
  
  # Find the current leader of that office
  ?office dbo:leader ?leader .
}
```",5,7,6,3,2,3,3,71,0,0,3,0,0.0,0
645,50,val,"Give me the leader of the office, that is a government agency and an organisation, of Camilo Menéndez Tolosa and military force of the force, that is an event and a military conflict and a societal event, of the native, that is a president and a politician, of Restoration (Spain).",SELECT ?result WHERE { ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. <http://dbpedia.org/resource/Camilo_Menéndez_Tolosa> <http://dbpedia.org/property/office> ?v3 . ?v0 <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Restoration_(Spain)> . ?v3 <http://dbpedia.org/ontology/leader> ?result . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/President>. ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/GovernmentAgency>. ?v4 <http://dbpedia.org/ontology/commander> ?v0 . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?result <http://dbpedia.org/ontology/battle> ?v4 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?leader WHERE {
  # Identify Camilo Menéndez Tolosa's role
  dbr:Camilo_Menéndez_Tolosa dbo:positionHeld ?office .
  
  # Find the military force and related events/conflicts
  ?militaryForce dbo:relatedEvent ?event ;
                a dbo:MilitaryConflict, dbo:SocietalEvent .

  # Determine the native president during the Restoration period
  ?president dbo:nationality dbr:Spain ;
             dbo:politicalParty ?party ;
             dbo:officeHeld ?restorationOffice .
  
  FILTER (STRSTARTS(STR(?event), ""Restoration (Spain)""))

  # Query for the leader of the office associated with these elements
  ?leader dbo:positionHeld ?office .
}
```",5,12,6,3,2,3,3,71,0,0,1,0,0.0,0
933,41,val,Give me the reference to the birth name of Alan Warner (musician) and band of the band of Alan Warner (musician) and band of The Ramong Sound.,SELECT ?result WHERE { ?result <http://xmlns.com/foaf/0.1/name> ?v4 . ?v2 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . <http://dbpedia.org/resource/Alan_Warner_(musician)> <http://dbpedia.org/property/birthName> ?v4 . <http://dbpedia.org/resource/The_Ramong_Sound> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . <http://dbpedia.org/resource/Alan_Warner_(musician)> <http://dbpedia.org/ontology/associatedMusicalArtist> ?v2 . },"```sparql
# Query for Alan Warner's birth name and band
SELECT ?birthName ?band WHERE {
  ?person a dbo:Musician ;
          foaf:name ""Alan Warner"" ;
          dbp:birthName ?birthName .
  OPTIONAL { 
    ?person dbo:memberOfBand ?band .
  }
  FILTER (lang(?birthName) = 'en')
} LIMIT 1

# Query for The Ramong Sound band members
SELECT ?member WHERE {
  ?band a dbo:MusicalGroup ;
        foaf:name ""The Ramong Sound"" ;
        dbo:member ?member .
}
```",5,5,6,2,3,3,3,71,0,0,1,0,0.0,0
5,16,val,"Give me the entity in the award of Coro de la Pontificia Universidad Católica de Puerto Rico and birthplace of the person born, that is a politician, as .","SELECT ?result WHERE { <http://dbpedia.org/resource/Coro_de_la_Pontificia_Universidad_Católica_de_Puerto_Rico> <http://dbpedia.org/property/awards> ?v0 . ?v2 <http://dbpedia.org/property/birthName> """"@en . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v2 <http://dbpedia.org/ontology/birthPlace> ?result . ?result <http://dbpedia.org/ontology/country> ?v0 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?person ?birthPlace WHERE {
  ?person dbo:award dbr:Coro_de_la_Pontificia_Universidad_Católica_de_Puerto_Rico .
  ?person dbo:occupation dbr:Politician .
  ?person dbo:birthPlace ?birthPlace .
}
```",4,5,5,2,2,3,2,20,0,0,2,0,0.0,0
129,22,val,"Give me the professional in the mayor of 1999 West Dunbartonshire Council election and associated musical artist of the actor, that is an organisation, of Dreamville Presents: Revenge.",SELECT ?result WHERE { <http://dbpedia.org/resource/1999_West_Dunbartonshire_Council_election> <http://dbpedia.org/property/leader> ?v2 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. <http://dbpedia.org/resource/Dreamville_Presents:_Revenge> <http://dbpedia.org/property/starring> ?v3 . ?result <http://dbpedia.org/property/occupation> ?v2 . ?v3 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . },"```sparql
# Step 1: Find the Mayor of West Dunbartonshire Council in 1999
SELECT ?mayor WHERE {
  ?event dbo:type dbr:Election.
  ?event dbo:date ""1999-01-01""^^xsd:date.
  ?event dbo:place dbr:West_Dunbartonshire_Council.
  ?event dbo:officeHolder ?mayor.
}

# Step 2: Find an actor associated with a musical artist
SELECT DISTINCT ?actor ?musician WHERE {
  ?actor dbo:profession dbr:Actor.
  ?association dbo:subject ?actor;
               dbo:object ?musician.
  ?musician dbo:type dbr:MusicalArtist.
}

# Step 3: Find the organization associated with Dreamville Presents: Revenge
SELECT DISTINCT ?organization WHERE {
  ?event dbo:title ""Dreamville Presents: Revenge""@en.
  ?event dbo:organizer ?organization.
}
```",4,5,5,2,2,2,3,28,0,0,3,0,0.0,0
465,50,val,"Give me the successor of the child, that is a royalty, of Anne of Brittany and spouse of the child, that is a royalty, of the parent of Elizabeth of Austria (1526–1545).",SELECT ?result WHERE { <http://dbpedia.org/resource/Anne_of_Brittany> <http://dbpedia.org/ontology/child> ?v3 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v0 <http://dbpedia.org/ontology/child> ?v4 . ?v0 <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Elizabeth_of_Austria_(1526–1545)> . ?v3 <http://dbpedia.org/ontology/successor> ?result . ?result <http://dbpedia.org/ontology/spouse> ?v4 . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. },"```sparql
# Step 1: Find Anne of Brittany's child who is royalty
SELECT ?child WHERE {
    wd:Q1198 dbo:spouse ?husband .
    ?husband dbo:child ?child .
    ?child rdf:type wd:Q5 . # Person type
    FILTER EXISTS { ?child dbo:occupation wd:Q11173 } # Royalty occupation
}

# Step 2: Find the spouse of Anne of Brittany's royal child (Claude of France)
SELECT ?spouse WHERE {
    ?child dbo:spouse ?spouse .
    ?spouse rdf:type wd:Q5 . # Person type
    FILTER EXISTS { ?spouse dbo:occupation wd:Q11173 } # Royalty occupation
}

# Step 3: Find Elizabeth of Austria's parent who is royalty
SELECT ?parent WHERE {
    wd:Q1199 dbo:child ?elizabeth .
    ?elizabeth rdf:type wd:Q5 . # Person type
    FILTER EXISTS { ?elizabeth dbo:occupation wd:Q11173 } # Royalty occupation
    ?parent dbo:spouse ?elizabethParent .
}

# Step 4: Find the child, that is royalty, of Elizabeth of Austria's parent (Ferdinand I)
SELECT ?child WHERE {
    ?parent dbo:child ?child .
    ?child rdf:type wd:Q5 . # Person type
    FILTER EXISTS { ?child dbo:occupation wd:Q11173 } # Royalty occupation
}

# Step 5: Find the successor of Francis I (spouse of Claude of France)
SELECT ?successor WHERE {
    ?francisI dbo:succeededBy ?successor .
    ?successor rdf:type wd:Q5 . # Person type
    FILTER EXISTS { ?successor dbo:occupation wd:Q11173 } # Royalty occupation
}
```",5,7,6,3,2,3,3,71,0,0,1,0,0.0,0
353,7,val,"Give me the alma mater of the awardee of Medal of the Order ""For Merit to the Fatherland"" and entity in Russia.",SELECT ?result WHERE { ?v2 <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/Medal_of_the_Order_%22For_Merit_to_the_Fatherland%22> . ?result <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Russia> . ?v2 <http://dbpedia.org/ontology/almaMater> ?result . },"```sparql
SELECT ?university WHERE {
  wd:Q1599 dbo:almaMater ?university .
}
```",3,3,4,2,2,2,2,9,0,0,5,0,0.0,0
874,15,val,"Give me the band of Robert Hart (musician) and band of the writer, that is an artist and a musical artist, of the work, that is a work, of Horace Andy.",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/bandMember> <http://dbpedia.org/resource/Robert_Hart_(musician)> . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. ?result <http://dbpedia.org/ontology/bandMember> ?v1 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?v0 <http://dbpedia.org/property/writer> <http://dbpedia.org/resource/Horace_Andy> . ?v0 <http://dbpedia.org/property/writer> ?v1 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?band ?writer WHERE {
  # Step 1: Find Robert Hart's band
  dbr:Robert_Hart_(musician) dbo:memberOf ?band .

  # Step 2: Find works by Horace Andy that involve another artist
  ?work dbo:artist dbr:Horace_Andy ;
        dbo:contributor ?writer .

  # Ensure the writer is both an artist and a musical artist
  ?writer rdf:type dbo:Artist, dbo:MusicalArtist .
}
```",4,7,5,3,2,3,2,20,0,0,1,0,0.0,0
892,53,val,"Give me the entity in the profession of the true self of Enrico Crolla and entity in the administration, that is Italian and a region and a settlement and an administrative region, of Democratic Party (Italy) and landmark at elevation of 58.","SELECT ?result WHERE { ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. ?v0 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Italy>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Region>. ?v0 <http://dbpedia.org/property/leaderParty> <http://dbpedia.org/resource/Democratic_Party_(Italy)> . ?v3 <http://xmlns.com/foaf/0.1/givenName> ""Enrico Crolla""@en . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/AdministrativeRegion>. ?result <http://dbpedia.org/ontology/country> ?v1 . ?result <http://dbpedia.org/ontology/elevation> ""58""^^<http://www.w3.org/2001/XMLSchema#integer> . ?v3 <http://dbpedia.org/property/occupation> ?v1 . ?result <http://dbpedia.org/ontology/province> ?v0 . }","```sparql
# Query for Enrico Crolla's profession
SELECT ?profession WHERE {
  dbpedia:Enrico_Crolla dbo:occupation ?profession .
}

# Query for Italian region associated with Democratic Party (Italy) that is a settlement and administrative region
SELECT DISTINCT ?region WHERE {
  ?party rdf:type dbo:PoliticalParty ;
         foaf:name ""Democratic Party (Italy)""@en .
  ?region dbo:politicalParty ?party ;
          dbo:country dbr:Italy ;
          rdf:type dbo:Settlement, dbo:AdministrativeRegion .
}

# Query for landmark at elevation of 58 meters
SELECT ?landmark WHERE {
  ?landmark a dbo:Lighthouse ;
            dbo:elevation ""58""^^xsd:decimal .
}
```",6,10,7,3,3,3,3,71,0,0,2,0,0.0,0
865,44,val,"Give me the native of British Raj and father of the child of Abu Ahmad Abdul Hafiz and father of the child, that is a politician, of Abu Ahmad Abdul Hafiz.",SELECT ?result WHERE { ?v2 <http://dbpedia.org/property/father> ?result . ?result <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/British_Raj> . ?v2 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Abu_Ahmad_Abdul_Hafiz> . ?v3 <http://dbpedia.org/property/father> ?result . ?v3 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Abu_Ahmad_Abdul_Hafiz> . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. },"```sparql
SELECT ?person WHERE {
  ?child rdf:type dbo:Politician .
  ?child dbo:father dbr:Muhammad_Ali_Jinnah .
  ?mother dbo:spouse dbr:Muhammad_Ali_Jinnah ;
          dbo:nationality dbr:British_Raj .
  ?mother dbo:child ?child .
}
```",5,6,6,2,3,3,3,71,0,0,1,0,0.0,0
573,44,val,"Give me the parent of the author, that is a politician and an office holder, of Exchequer Standards and person decedent at the residence, that is a settlement, of William J. Phelan and person decedent at Massachusetts.",SELECT ?result WHERE { ?v2 <http://dbpedia.org/ontology/parent> ?result . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. <http://dbpedia.org/resource/William_J._Phelan> <http://dbpedia.org/property/residence> ?v4 . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?result <http://dbpedia.org/ontology/deathPlace> ?v4 . ?result <http://dbpedia.org/ontology/deathPlace> <http://dbpedia.org/resource/Massachusetts> . <http://dbpedia.org/resource/Exchequer_Standards> <http://dbpedia.org/property/author> ?v2 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?parent WHERE {
  # Step 1: Find the author of ""Exchequer Standards""
  ?work dbo:title ""Exchequer Standards""@en .
  ?work dbo:author ?author .

  # Step 2: Check if this author is a politician and office holder
  ?author dbo:occupation dbr:Politician ;
          dbo:officeHolder ?office .

  # Step 3: Find William J. Phelan's place of death and ensure it is a settlement
  dbr:William_J._Phelan dbo:placeOfDeath ?deathPlace .
  ?deathPlace rdf:type dbo:Settlement .

  # Step 4: Identify any person who died in Massachusetts
  ?person dbo:placeOfDeath dbr:Massachusetts ;
          dbo:deceased ?date .

  # Ensure the author is connected to the findings above
  FILTER(?author = ?person)

  # Step 5: Extract the parent of the identified author
  ?author dbo:parent ?parent .
}
```",5,8,6,2,3,3,3,71,0,0,2,0,0.0,0
582,44,val,"Give me the figure known as the nickname of Japan national football team and player in the father, that is an athlete and a soccer manager and a sports manager, of Masami Nagasawa and reference to Japan.","SELECT ?result WHERE { <http://dbpedia.org/resource/Japan_national_football_team> <http://dbpedia.org/property/nickname> ?v2 . ?result <http://dbpedia.org/property/nickname> ?v2 . ?v4 <http://dbpedia.org/ontology/team> ?result . <http://dbpedia.org/resource/Masami_Nagasawa> <http://dbpedia.org/property/father> ?v4 . ?result <http://xmlns.com/foaf/0.1/name> ""Japan""@en . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Athlete>. ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerManager>. ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsManager>. }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?player ?nickname ?role1 ?role2 WHERE {
  ?player a dbo:SoccerPlayer ;
          foaf:name ""Kazuyoshi Miura""@en .
  
  OPTIONAL { 
    ?team dbo:nationalTeamFor dbr:Japan_national_football_team ;
          dbo:commonName ?nickname .
  }
  
  OPTIONAL {
    ?player dbo:occupation ?role1 .
    FILTER (CONTAINS(LCASE(?role1), ""soccer manager"") || CONTAINS(LCASE(?role1), ""sports manager""))
  }

  OPTIONAL {
    ?player dbo:occupation ?role2 .
    FILTER (CONTAINS(LCASE(?role2), ""athlete""))
  }
}
```",5,8,6,2,3,3,3,71,0,1,1,0.0,0.0,0
645,53,val,"Give me the military force of Spanish Civil War and leader of the office, that is a government agency and an organisation, of Camilo Menéndez Tolosa and commander in the force of the commander in Siege of Madrid.",SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/leader> ?result . ?v2 <http://dbpedia.org/ontology/commander> ?result . <http://dbpedia.org/resource/Camilo_Menéndez_Tolosa> <http://dbpedia.org/property/office> ?v1 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/GovernmentAgency>. ?result <http://dbpedia.org/ontology/battle> <http://dbpedia.org/resource/Spanish_Civil_War> . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?v2 <http://dbpedia.org/ontology/commander> ?v3 . <http://dbpedia.org/resource/Siege_of_Madrid> <http://dbpedia.org/ontology/commander> ?v3 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?militaryForce ?leaderOfOffice ?commanderInSiege WHERE {
  # Identify military forces involved in the Spanish Civil War
  ?militaryForce dbo:participatedIn dbr:Spanish_Civil_War .
  
  # Find Camilo Menéndez Tolosa's leadership role
  ?office dbo:head dbr:Camilo_Menéndez_Tolosa ;
          a dbo:GovernmentAgency ; 
          a dbo:Organization .

  # Determine the commander during the Siege of Madrid
  ?siegeEvent dbo:commander ?commanderInSiege .
  ?siegeEvent rdfs:label ""Siege of Madrid""@en .

  # Link Camilo Menéndez Tolosa to the commander in the Siege of Madrid
  OPTIONAL { ?office dbo:member ?commanderInSiege . }
  
  FILTER (lang(?militaryForce) = 'en' && lang(?leaderOfOffice) = 'en' && lang(?commanderInSiege) = 'en')
}
```",6,8,7,3,3,3,3,71,0,0,1,0,0.0,0
965,53,val,"Give me the spouse of the spouse of the parent of Louise Mountbatten and parent of the person born, that is a noble, as Prince George of Battenberg and parent of Louise Mountbatten.","SELECT ?result WHERE { ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Noble>. ?result <http://dbpedia.org/ontology/spouse> ?v1 . ?v3 <http://dbpedia.org/ontology/spouse> ?v1 . ?v0 <http://dbpedia.org/property/birthName> ""Prince George of Battenberg""@en . <http://dbpedia.org/resource/Louise_Mountbatten> <http://dbpedia.org/ontology/parent> ?result . ?v0 <http://dbpedia.org/ontology/parent> ?result . <http://dbpedia.org/resource/Louise_Mountbatten> <http://dbpedia.org/ontology/parent> ?v3 . }","```sparql
SELECT ?finalSpouse WHERE {
  # Step 1: Identify Louise Mountbatten's parent
  wd:Q123456 a dbo:Person ;
             foaf:sibling* wd:Q789012 . # Assuming Q789012 is Louise Mountbatten

  # Step 2: Find the spouse of that parent
  ?parentParent wdt:P26 ?spouseOfParent .

  # Step 3: Identify the child who was born as Prince George of Battenberg and is a noble
  ?child wdt:P25 ?spouseOfParent ;
         wdt:P31 wd:Q1234567 ; # Assuming Q1234567 represents nobility
         rdfs:label ""Prince George of Battenberg""@en .

  # Step 4: Find the parent of this noble person
  ?parentOfChild wdt:P25 ?child .

  # Step 5: Determine the spouse of that parent
  ?finalSpouse wdt:P26 ?parentOfChild .
}
```

Note: The placeholders `wd:Q123456`, `wd:Q789012`, and `wd:Q1234567` need to be replaced with the actual DBpedia identifiers for Louise Mountbatten, her parent, and the class representing nobility, respectively. These can be found using additional queries or by consulting a reliable source.",6,7,7,3,3,3,3,71,0,0,2,0,0.0,0
917,44,val,Give me the child of the father of Keʻelikōlani and parent of Albert Kamehameha and child of the father of Kamehameha IV.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Albert_Kamehameha> . <http://dbpedia.org/resource/Kamehameha_IV> <http://dbpedia.org/property/father> ?v0 . ?result <http://dbpedia.org/ontology/parent> ?v4 . <http://dbpedia.org/resource/Keʻelikōlani> <http://dbpedia.org/property/father> ?v4 . ?result <http://dbpedia.org/property/father> ?v0 . },"```sparql
SELECT ?person WHERE {
  # Find Keʻelikōlani's father
  ?keelikolani dbo:parent dbc:Keelikolani;
              rdfs:label ""Keʻelikōlani""@en.
  ?father1 dbo:child ?keelikolani;
           rdfs:label ?fatherLabel1.

  # Find Kamehameha IV's father
  ?kamehamehaIV dbo:parent dbc:Kamehameha_IV;
                rdfs:label ""Kamehameha IV""@en.
  ?father2 dbo:child ?kamehamehaIV;
           rdfs:label ?fatherLabel2.

  # Find the common child of both fathers
  ?commonChild dbo:parent ?father1, ?father2;
               rdfs:label ?commonChildLabel.

  # Ensure this person is also a parent of Albert Kamehameha
  ?albertKamehameha dbo:parent ?commonChild;
                   rdfs:label ""Albert Kamehameha""@en.
}
```",5,5,6,2,3,3,3,71,0,0,1,0,0.0,0
507,54,val,"Give me the professional in Film director, television director and spouse of the person born as Anne Voase Coates and director of the movie, that is a movie and a work, with the person born on 1919-06-17.","SELECT ?result WHERE { ?v5 <http://dbpedia.org/property/starring> ?v0 . ?v5 <http://dbpedia.org/ontology/director> ?result . ?v3 <http://dbpedia.org/property/birthName> ""Anne Voase Coates""@en . ?v0 <http://dbpedia.org/ontology/birthDate> ""1919-06-17""^^<http://www.w3.org/2001/XMLSchema#date> . ?result <http://dbpedia.org/property/occupation> ""Film director, television director""@en . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?result <http://dbpedia.org/ontology/spouse> ?v3 . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Film>. }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?spouse ?profession WHERE {
  # Find Anne Voase Coates by birth date and name
  ?anne a dbo:Person ;
        foaf:name ""Anne Voase Coates""@en ;
        dbo:birthDate ""1919-06-17""^^xsd:date .

  # Get her spouse
  ?anne dbo:spouse ?spouse .

  # Check if the spouse is a film director or television director
  OPTIONAL { ?spouse dbo:occupation ?profession . FILTER (CONTAINS(LCASE(?profession), ""film director"") || CONTAINS(LCASE(?profession), ""television director"")) }

  # Ensure the spouse directed at least one movie
  OPTIONAL {
    ?movie dbo:director ?spouse ;
           a dbo:Film .
  }
}
```",6,8,7,3,3,3,3,71,0,0,1,0,0.0,0
933,53,val,"Give me the band of the band of the band, that is an artist and a musical artist, of The Ramong Sound and reference to Alan Warner and band of the band, that is a group and a band and an organisation, of Alan Warner (musician).","SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. <http://dbpedia.org/resource/The_Ramong_Sound> <http://dbpedia.org/ontology/associatedMusicalArtist> ?v3 . <http://dbpedia.org/resource/Alan_Warner_(musician)> <http://dbpedia.org/ontology/associatedMusicalArtist> ?v0 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Band>. ?v0 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Group>. ?result <http://xmlns.com/foaf/0.1/name> ""Alan Warner""@en . ?v3 <http://dbpedia.org/ontology/associatedMusicalArtist> ?v1 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. }","```sparql
SELECT ?band WHERE {
  ?ramones dbo:genre dbr:Punk_rock .
  ?influence dbo:influencedBy ?ramones ;
             rdfs:label ""The Beatles""@en .
  ?beatles dbo:type dbr:Musical_artist ;
           dbo:type dbr:Artist ;
           dbo:reference dbr:Alan_Warner .
  FILTER(CONTAINS(LCASE(?influence), ""the beatles""))
}
```",6,11,7,3,3,3,3,71,0,0,1,0,0.0,0
47,43,val,"Give me the office of Ajoy Mukherjee and office of the awardee of the award, that is an award, of Mantu Ghosh and office of Suvendu Adhikari.",SELECT ?result WHERE { ?v4 <http://dbpedia.org/property/awards> ?v0 . <http://dbpedia.org/resource/Mantu_Ghosh> <http://dbpedia.org/property/awards> ?v0 . <http://dbpedia.org/resource/Ajoy_Mukherjee> <http://dbpedia.org/property/office> ?result . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Award>. <http://dbpedia.org/resource/Suvendu_Adhikari> <http://dbpedia.org/property/office> ?result . ?v4 <http://dbpedia.org/property/office> ?result . },"```sparql
# Query for Ajoy Mukherjee's office
SELECT ?office WHERE {
  ?person foaf:name ""Ajoy Mukherjee""@en .
  ?person dbo:office ?office .
}

UNION

# Query for Mantu Ghosh's award and another awardee's office
{
  SELECT ?award (SAMPLE(?otherOffice) AS ?office) WHERE {
    ?ghosh foaf:name ""Mantu Ghosh""@en .
    ?ghosh dbo:awardReceived ?award .
    ?award dbo:recipient ?awardee .
    ?awardee dbo:office ?otherOffice .
  }
}

UNION

# Query for Suvendu Adhikari's office
SELECT ?office WHERE {
  ?person foaf:name ""Suvendu Adhikari""@en .
  ?person dbo:office ?office .
}
```",5,6,6,3,3,3,3,71,0,0,1,0,0.0,0
236,17,val,"Give me the party member of Federalist Party and party member of the administration of the reference, that is an office holder and a politician, to James Madison.","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/party> <http://dbpedia.org/resource/Federalist_Party> . ?v0 <http://xmlns.com/foaf/0.1/name> ""James Madison""@en . ?v3 <http://dbpedia.org/property/leader> ?v0 . ?result <http://dbpedia.org/ontology/party> ?v3 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT DISTINCT ?person ?office WHERE {
  ?person a dbo:Politician ;
          dbo:partyAffiliation dbr:Federalist_Party ;
          dbo:officeHeld ?office .
  
  OPTIONAL { 
    ?office dbo:startDate ?start ;
            dbo:endDate ?end .
  }
  
  FILTER (
    EXISTS { ?office dbo:heldBy ?person . }
    && (?start <= ""1817-03-04""^^xsd:date && ?end >= ""1809-03-04""^^xsd:date)
  )
}
```",4,6,5,3,2,3,2,20,0,0,19,0,0.0,0
917,41,val,"Give me the child of Kekūanāoʻa and child of the father of Keʻelikōlani and parent of the child, that is a royalty, of Kamehameha IV.","SELECT ?result WHERE { ?v2 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Kamehameha_IV> . ?result <http://dbpedia.org/ontology/child> ?v2 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?result <http://dbpedia.org/property/father> ""Kekūanāoʻa""@en . ?result <http://dbpedia.org/ontology/parent> ?v4 . <http://dbpedia.org/resource/Keʻelikōlani> <http://dbpedia.org/property/father> ?v4 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?person WHERE {
  # Kekūanāoʻa's child
  VALUES (?kekuanaoaChild) { dbr:Princess_Ruth_Keelikolani }
  
  # Keʻelikōlani's father and his child
  ?keelikoChild dbo:parent dbr:High_Chief_Kahekili_II .
  FILTER(?keelikoChild = dbr:Kekūanāoʻa)
  
  # Parent of Kamehameha IV's child
  ?kamahamehaIVChild dbo:parent dbr:King_Kamehameha_IV .
  VALUES (?kamahamehaIVChild) { dbr:Princess_Victoria_Kamāmalu }
  
  # Check if the person is royalty and fits all criteria
  ?person dbo:childOf ?kekuanaoaChild ;
          dbo:parent ?keelikoChild ;
          dbo:parent ?kamahamehaIVChild .
  
  FILTER(?person = dbr:Princess_Ruth_Keelikolani)
}
```",5,6,6,2,3,3,3,71,0,0,1,0,0.0,0
917,48,val,"Give me the child of the father of Kamehameha IV and parent of the child, that is a royalty, of the mayor of Hawaiian Kingdom.",SELECT ?result WHERE { ?result <http://dbpedia.org/property/father> ?v0 . ?v1 <http://dbpedia.org/property/father> ?v3 . <http://dbpedia.org/resource/Kamehameha_IV> <http://dbpedia.org/property/father> ?v0 . ?result <http://dbpedia.org/ontology/child> ?v1 . <http://dbpedia.org/resource/Hawaiian_Kingdom> <http://dbpedia.org/property/leader> ?v3 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?child ?royalDescendant WHERE {
  # Find children of Kamehameha I
  ?kamehamehaI a dbo:Monarch ;
              foaf:surname ""Kamehameha"" ;
              dbo:spouse ?parent .
  
  ?parent dbo:child ?child .

  # Check if the child is royalty
  ?child a dbo:Monarch .

  # Find significant figures in Hawaiian Kingdom (assuming governor or similar role)
  ?figure a dbo:GovernmentOfficial ;
          dbo:country dbr:Hawaii ;
          dbo:position ""Governor"" ; # This might need adjustment based on historical context

  # Find their royal descendants
  ?figure dbo:child ?royalDescendant .
  
  FILTER(?royalDescendant = ?child)
}
```",5,6,6,3,2,3,3,71,0,0,2,0,0.0,0
839,53,val,"Give me the band of the person born, that is a musical artist, as the persona of Kevin Russell (musician) and band of the band, that is a musical artist, of Charlie Huhn and band of Peter Schorowsky.",SELECT ?result WHERE { <http://dbpedia.org/resource/Kevin_Russell_(musician)> <http://xmlns.com/foaf/0.1/givenName> ?v3 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?result <http://dbpedia.org/ontology/bandMember> <http://dbpedia.org/resource/Peter_Schorowsky> . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?v2 <http://dbpedia.org/property/birthName> ?v3 . <http://dbpedia.org/resource/Charlie_Huhn> <http://dbpedia.org/ontology/associatedMusicalArtist> ?v1 . ?result <http://dbpedia.org/ontology/bandMember> ?v1 . ?v2 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . },"```sparql
SELECT DISTINCT ?personLabel ?bandLabel WHERE {
  # Kevin Russell (musician)
  {
    ?kevin a dbo:MusicalArtist ;
           foaf:name ""Kevin Russell"" .
    OPTIONAL { ?kevin dbo:associatedBand ?band . }
    BIND(""Kevin Russell"" AS ?personName)
  }

  UNION

  # Charlie Huhn
  {
    ?charlie a dbo:MusicalArtist ;
             foaf:name ""Charlie Huhn"" .
    OPTIONAL { ?charlie dbo:associatedBand ?band . }
    BIND(""Charlie Huhn"" AS ?personName)
  }

  UNION

  # Peter Schorowsky
  {
    ?peter a dbo:MusicalArtist ;
           foaf:name ""Peter Schorowsky"" .
    OPTIONAL { ?peter dbo:associatedBand ?band . }
    BIND(""Peter Schorowsky"" AS ?personName)
  }

  SERVICE wikibase:label { bd:serviceParam wikibase:language ""[AUTO_LANGUAGE],en"". }
}
```",6,8,7,3,3,3,3,71,0,0,1,0,0.0,0
606,15,val,"Give me the birthplace of Charles I. Barber and figure known as the nickname of the figure known, that is a settlement, as Barb City.","SELECT ?result WHERE { ?v0 <http://dbpedia.org/property/nickname> ?v1 . ?result <http://dbpedia.org/property/nickname> ?v1 . <http://dbpedia.org/resource/Charles_I._Barber> <http://dbpedia.org/ontology/birthPlace> ?result . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. ?v0 <http://dbpedia.org/property/nickname> ""Barb City""@en . }","```sparql
# Query to get the birthplace of Charles I. Barber
SELECT ?birthPlace WHERE {
  ?person dbo:birthName ""Charles I. Barber""@en .
  ?person dbo:birthPlace ?birthPlace .
}

UNION

# Query to find a settlement named ""Barb City""
SELECT ?settlement WHERE {
  ?settlement rdf:type dbo:Settlement ;
              rdfs:label ""Barb City""@en .
}
```",4,5,5,3,2,3,2,20,0,0,1,0,0.0,0
933,51,val,"Give me the band of the band, that is a group and a band and an organisation, of the person born, that is a musical artist, on 1947-04-21 and reference to the birth name of Alan Warner (musician).","SELECT ?result WHERE { ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?result <http://xmlns.com/foaf/0.1/name> ?v4 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Group>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Band>. <http://dbpedia.org/resource/Alan_Warner_(musician)> <http://dbpedia.org/property/birthName> ?v4 . ?v3 <http://dbpedia.org/ontology/birthDate> ""1947-04-21""^^<http://www.w3.org/2001/XMLSchema#date> . ?v0 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?v3 <http://dbpedia.org/ontology/associatedMusicalArtist> ?v0 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?band WHERE {
  ?person dbo:birthDate ""1947-04-21""^^xsd:date ;
          a dbo:MusicalArtist ;
          dbp:birthName dbr:Alan_Warner_(musician) .
  
  ?person dbo:member ?membership .
  ?membership dbo:band ?band .

  ?band a dbo:Band, dbo:Group, dbo:Organization .
}
```",5,9,6,3,2,3,3,71,0,0,1,0,0.0,0
192,17,val,Give me the child of the child of the parent of Anna of Hungary (Byzantine empress) and spouse of Clemence of Austria.,SELECT ?result WHERE { ?v3 <http://dbpedia.org/property/father> ?v0 . ?v0 <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Anna_of_Hungary_(Byzantine_empress)> . <http://dbpedia.org/resource/Clemence_of_Austria> <http://dbpedia.org/ontology/spouse> ?result . ?result <http://dbpedia.org/ontology/parent> ?v3 . },"```sparql
# Step 1: Identify Anna of Hungary (Byzantine empress)
SELECT ?anna WHERE {
  ?anna dbo:title ""Anna of Hungary (Byzantine Empress)""@en .
}

# Step 2: Find her parent
SELECT ?parent WHERE {
  VALUES ?anna { <http://dbpedia.org/resource/Anna_of_Hungary_(Byzantine_empress)> }
  ?anna dbo:motherOrFather ?parent .
}

# Step 3: Determine the child of that parent (other than Anna)
SELECT DISTINCT ?child WHERE {
  ?parent dbo:motherOrFather ?child .
  FILTER(?child != <http://dbpedia.org/resource/Anna_of_Hungary_(Byzantine_empress)>)
}

# Step 4: Identify Clemence of Austria and her spouse
SELECT ?clemence ?spouse WHERE {
  VALUES ?clemence { <http://dbpedia.org/resource/Clemence_of_Austria> }
  ?clemence dbo:spouse ?spouse .
}

# Step 5: Find the child of this couple (child of the parent's other child and Clemence's spouse)
SELECT DISTINCT ?grandparentChild WHERE {
  VALUES ?parent { <result_from_step_3> } # Replace with actual result from step 3
  VALUES ?spouse { <result_from_step_4> } # Replace with actual result from step 4
  ?parent dbo:motherOrFather ?child .
  ?spouse dbo:motherOrFather ?child .
}

# Step 6: Determine the grandchild (child of the individual identified in step 5)
SELECT DISTINCT ?grandchild WHERE {
  VALUES ?grandparentChild { <result_from_step_5> } # Replace with actual result from step 5
  ?grandparentChild dbo:motherOrFather ?grandchild .
}
```

Note: The placeholders `<result_from_step_3>`, `<result_from_step_4>`, and `<result_from_step_5>` need to be replaced with the actual URIs obtained from executing each respective query.",4,4,5,3,2,3,2,20,0,0,1,0,0.0,0
465,46,val,"Give me the spouse of the child, that is a royalty, of Ferdinand I, Holy Roman Emperor and successor of the child of the parent of Ercole II d'Este, Duke of Ferrara.","SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/successor> ?result . ?result <http://dbpedia.org/ontology/spouse> ?v4 . <http://dbpedia.org/resource/Ercole_II_d'Este,_Duke_of_Ferrara> <http://dbpedia.org/ontology/parent> ?v2 . ?v1 <http://dbpedia.org/property/father> ?v2 . <http://dbpedia.org/resource/Ferdinand_I,_Holy_Roman_Emperor> <http://dbpedia.org/ontology/child> ?v4 . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?spouse WHERE {
  # Step 1: Identify Ercole II d'Este's parent
  dbr:Ercole_II_d%27Este dbo:parent dbr:Aloisio_I_d%27Este .

  # Step 2: Find the child of Aloisio I d'Este (which is Alfonso I d'Este)
  dbr:Aloisio_I_d%27Este dbo:child dbr:Alfonso_I_d%27Este .

  # Step 3: Determine the successor of Alfonso I d'Este
  dbr:Alfonso_I_d%27Este dbo:succeededBy dbr:Cesare_d%27Este .

  # Step 4: Identify Ferdinand I's children
  dbr:Ferdinand_I,_Holy_Roman_Emperor dbo:child ?child .

  # Step 5: Find the royalty among these children
  ?child a dbo:Monarch ;
        rdfs:label ?name .
  
  FILTER(CONTAINS(LCASE(?name), ""king"") || CONTAINS(LCASE(?name), ""queen""))

  # Step 6: Find the spouse of this royal child
  ?child dbo:spouse ?spouse .
}
```",5,6,6,3,2,3,3,71,0,0,1,0,0.0,0
917,40,val,"Give me the child of Kekūanāoʻa and parent of the child, that is a royalty, of the mayor of Hawaiian Kingdom and child of Kekūanāoʻa.","SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?result <http://dbpedia.org/ontology/child> ?v1 . ?v1 <http://dbpedia.org/property/father> ?v3 . ?result <http://dbpedia.org/ontology/parent> <http://dbpedia.org/resource/Kekūanāoʻa> . <http://dbpedia.org/resource/Hawaiian_Kingdom> <http://dbpedia.org/property/leader> ?v3 . ?result <http://dbpedia.org/property/father> ""Kekūanāoʻa""@en . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?child ?parent WHERE {
  # Kekūanāoʻa's child who is royalty
  ?kekuanaoa a dbo:Person ;
              foaf:name ""Kekūanāoʻa"" ;
              dbo:child ?child .
  
  ?child a dbo:Monarch ;
         dbo:parent dbr:Kamehameha_III .

  # Kamehameha III's child
  ?kamehameha3 a dbo:Person ;
               foaf:name ""Kamehameha III"" ;
               dbo:child ?b_pauahi_bishop .
  
  # Bernice Pauahi Bishop's child (King David Kalākava)
  ?b_pauahi_bishop a dbo:Person ;
                   foaf:name ""Bernice Pauahi Bishop"" ;
                   dbo:child dbr:David_Kalākaua .

  # Kamehameha V, the mayor
  ?mayor a dbo:Person ;
         foaf:name ""Kamehameha V"" ;
         dbo:parent dbr:David_Kalākaua .
}
```",5,6,6,3,3,3,3,71,0,0,2,0,0.0,0
839,51,val,"Give me the band of the member of Böhse Onkelz and band of the band, that is a musical artist, of the professional in Musician.","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/bandMember> ?v2 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. <http://dbpedia.org/resource/Böhse_Onkelz> <http://dbpedia.org/ontology/bandMember> ?v4 . ?result <http://dbpedia.org/ontology/bandMember> ?v4 . ?v1 <http://dbpedia.org/property/occupation> ""Musician""@en . ?v1 <http://dbpedia.org/ontology/associatedMusicalArtist> ?v2 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?bandOfMember ?bandOfBand WHERE {
  # Find Stephan Weidner's association with Böhse Onkelz
  dbr:Stephan_Weidner dbo:memberOf dbr:Böhse_Onkelz .
  
  # Find the band associated with Stephan Weidner beyond Böhse Onkelz
  dbr:Stephan_Weidner dbo:memberOf ?bandOfMember .

  # Ensure that this band is a musical artist and find its association
  ?bandOfMember a dbo:MusicalArtist .
  
  # Find the professional in Musician who is part of this band
  ?professionalInMusician dbo:occupation dbr:Musician ;
                        dbo:memberOf ?bandOfBand .

  # Ensure that this band is also recognized as a musical artist
  ?bandOfBand a dbo:MusicalArtist .
}
```",5,6,6,3,2,3,3,71,0,0,1,0,0.0,0
865,43,val,"Give me the native of British Raj and father of Shahla Khatun and father of the child, that is a politician, of the spouse of Syeda Shahar Banu.",SELECT ?result WHERE { <http://dbpedia.org/resource/Syeda_Shahar_Banu> <http://dbpedia.org/ontology/spouse> ?v1 . ?result <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/British_Raj> . ?v3 <http://dbpedia.org/property/father> ?result . ?v3 <http://dbpedia.org/property/father> ?v1 . <http://dbpedia.org/resource/Shahla_Khatun> <http://dbpedia.org/property/father> ?result . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. },"```sparql
SELECT ?person WHERE {
  # Shahla Khatun's father and native of British Raj
  ?shahla dbo:father dbr:Sheikh_Mujibur_Rahman .
  dbr:Sheikh_Mujibur_Rahman dbo:nationality dbr:British_India .

  # Politician child of Syeda Shahar Banu's spouse (Tofail Ahmed)
  OPTIONAL {
    ?tofail dbo:spouse dbr:Syeda_Sharbanu .
    ?child dbo:parent ?tofail ;
           a dbo:Politician .
    FILTER(?person = ?child || ?person = dbr:Sheikh_Mujibur_Rahman)
  }
}
```",5,6,6,3,3,3,3,71,0,0,1,0,0.0,0
976,53,val,"Give me the office of the person born as Mehmet Naci Bostancı and office of the leader, that is a politician, of the administration, that is an organisation, of Kemal Kılıçdaroğlu and office of Meral Akşener.","SELECT ?result WHERE { ?v3 <http://dbpedia.org/property/leader> <http://dbpedia.org/resource/Kemal_Kılıçdaroğlu> . ?v0 <http://dbpedia.org/property/office> ?result . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. <http://dbpedia.org/resource/Meral_Akşener> <http://dbpedia.org/property/office> ?result . ?v3 <http://dbpedia.org/ontology/leader> ?v1 . ?v1 <http://dbpedia.org/property/office> ?result . ?v0 <http://dbpedia.org/property/birthName> ""Mehmet Naci Bostancı""@en . }","```sparql
# Query for Mehmet Naci Bostancı's office
SELECT ?office WHERE {
  ?person foaf:name ""Mehmet Naci Bostancı""@en .
  ?person dbo:occupation ?occupation .
  ?occupation dbo:positionHeld ?office .
}

UNION

# Query for Kemal Kılıçdaroğlu's leadership office in the organization he administers
SELECT ?office WHERE {
  ?person foaf:name ""Kemal Kılıçdaroğlu""@en .
  ?person dbo:politicalAffiliation ?party .
  ?party dbo:leader ?leader .
  FILTER (?leader = ?person) .
  ?party dbo:positionHeld ?office .
}

UNION

# Query for Meral Akşener's office
SELECT ?office WHERE {
  ?person foaf:name ""Meral Akşener""@en .
  ?person dbo:occupation ?occupation .
  ?occupation dbo:positionHeld ?office .
}
```",6,8,7,3,3,3,3,71,0,0,1,0,0.0,0
926,54,val,Give me the successor of the child of the spouse of Şermi Kadın and father of the father of Abdulaziz and child of Ahmed III.,SELECT ?result WHERE { <http://dbpedia.org/resource/Ahmed_III> <http://dbpedia.org/ontology/child> ?result . ?v4 <http://dbpedia.org/ontology/successor> ?result . ?v1 <http://dbpedia.org/ontology/spouse> <http://dbpedia.org/resource/Şermi_Kadın> . ?v2 <http://dbpedia.org/property/father> ?result . <http://dbpedia.org/resource/Abdulaziz> <http://dbpedia.org/property/father> ?v2 . ?v4 <http://dbpedia.org/property/father> ?v1 . },"```sparql
SELECT ?successor WHERE {
  wd:Q1234567 wdt:P26 wd:Q7890123 . # Mustafa III (Şermi Kadın's spouse) is the father of Selim III
  wd:Q7890123 wdt:P22 wd:Q3456789 . # Selim III is a child of Mustafa III
  wd:Q7890123 wdt:P31 wd:Q9876543 . # Abdulaziz is a child of Selim III
  wd:Q1234567 wdt:P40 wd:Q11121314 . # Mustafa III is a child of Ahmed III
  wd:Q1234567 wdt:P39 ?successor . # Successor of Mustafa III
}
```

Note: The placeholders `wd:Q1234567`, `wd:Q7890123`, `wd:Q3456789`, `wd:Q9876543`, and `wd:Q11121314` should be replaced with the actual DBpedia QIDs for Mustafa III, Selim III, Abdulaziz, and Ahmed III respectively.",6,6,7,3,3,3,3,71,0,0,1,0,0.0,0
715,49,val,"Give me the commander in the force, that is a military conflict, of Abd el-Krim and leader of the office, that is a government agency and an organisation, of the reference to Carlos Franco Iribarnegaray.","SELECT ?result WHERE { ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v0 <http://dbpedia.org/property/office> ?v1 . ?v2 <http://dbpedia.org/ontology/commander> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/GovernmentAgency>. ?v1 <http://dbpedia.org/ontology/leader> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?v0 <http://xmlns.com/foaf/0.1/name> ""Carlos Franco Iribarnegaray""@en . ?v2 <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Abd_el-Krim> . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?rifWar ?commander ?organization ?leader 
WHERE {
  # Find the Rif War and Abd el-Krim's role as commander
  dbr:Rif_War dbo:commander ?commander .
  ?commander rdfs:label ""Abd el-Krim""@en .

  # Find Carlos Franco Iribarnegaray's leadership in an organization
  OPTIONAL {
    ?organization dbo:leader ?leader .
    ?leader rdfs:label ""Carlos Franco Iribarnegaray""@en .
    FILTER EXISTS { ?organization dbo:country dbr:Spain }
  }

  # Bind the Rif War to a variable for clarity
  BIND(dbr:Rif_War AS ?rifWar)
}
```",5,8,6,3,2,3,3,71,0,2,1,0.0,0.0,0
645,52,val,"Give me the military force of the force, that is an event and a military conflict and a societal event, of Francisco Largo Caballero and commander in the force of the commander in Siege of Madrid and leader of Ministry of the Army (Spain).",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/battle> ?v5 . <http://dbpedia.org/resource/Siege_of_Madrid> <http://dbpedia.org/ontology/commander> ?v3 . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?v2 <http://dbpedia.org/ontology/commander> ?v3 . <http://dbpedia.org/resource/Ministry_of_the_Army_(Spain)> <http://dbpedia.org/ontology/leader> ?result . ?v5 <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Francisco_Largo_Caballero> . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v2 <http://dbpedia.org/ontology/commander> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?militaryForce WHERE {
  # Francisco Largo Caballero as a leader and commander during the Siege of Madrid
  dbr:Francisco_Largo_Caballero dbo:positionHeld [
    a dbo:Position ;
    dbo:organization dbr:Spanish_Ministry_of_the_Army ;
    dbo:role ""Minister"" .
  ] .

  # Linking to the Spanish Civil War and Siege of Madrid
  ?event dbo:participatedIn dbr:Francisco_Largo_Caballero ;
         a dbo:MilitaryConflict, dbo:SocietalEvent ;
         rdfs:label ?eventName .

  FILTER CONTAINS(LCASE(?eventName), ""siege of madrid"") .
  
  # Finding the military force associated with him
  ?militaryForce dbo:commander dbr:Francisco_Largo_Caballero ;
                a dbo:MilitaryUnit, dbo:MilitaryOrganization .
}
```",6,9,7,3,3,3,3,71,0,0,1,0,0.0,0
978,16,val,"Give me the band member of the person born as Nicholas Bracegirdle and band member of the professional, that is a musical artist and an artist, in .","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/associatedMusicalArtist> ?v3 . ?v3 <http://dbpedia.org/property/birthName> ""Nicholas Bracegirdle""@en . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. ?result <http://dbpedia.org/ontology/associatedMusicalArtist> ?v2 . ?v2 <http://dbpedia.org/property/occupation> """"@en . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?band WHERE {
  ?person dbo:birthName ""Nicholas Bracegirdle""@en .
  ?person dbo:musicalArtist ?artistRole .
  ?person dbo:memberOfBand ?band .
  FILTER EXISTS { ?band rdfs:label ""The Feeling""@en }
}
```",4,6,5,2,2,3,2,20,0,0,2,0,0.0,0
926,52,val,Give me the child of Ahmed III and successor of the child of Ahmed III and father of the father of the spouse of Neşerek Kadın.,SELECT ?result WHERE { ?v4 <http://dbpedia.org/ontology/successor> ?result . ?v4 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Ahmed_III> . <http://dbpedia.org/resource/Ahmed_III> <http://dbpedia.org/ontology/child> ?result . ?v1 <http://dbpedia.org/property/father> ?result . ?v3 <http://dbpedia.org/property/father> ?v1 . <http://dbpedia.org/resource/Neşerek_Kadın> <http://dbpedia.org/ontology/spouse> ?v3 . },"```sparql
# Step 1: Find a notable child of Ahmed III
SELECT ?child WHERE {
    ?s dbp:father dbr:Aḥmed_III.
    ?s rdf:type dbo:Person.
    FILTER(CONTAINS(LCASE(STR(?s)), ""osman""))
} LIMIT 1

# Assuming the result is Osman III, we proceed to find his successor
SELECT ?successor WHERE {
    ?s dbp:predecessor dbr:Osman_III.
    ?s rdf:type dbo:Person.
} LIMIT 1

# Step 3: Find Neşerek Kadın's spouse and their father
SELECT ?spouse ?father WHERE {
    ?neşerek dbp:spouse ?spouse.
    ?spouse dbp:father ?father.
    ?neşerek rdfs:label ""Neşerek Kadın""@en.
} LIMIT 1

# Find the grandfather of Neşerek Kadın's spouse
SELECT ?grandfather WHERE {
    ?father dbp:father ?grandfather.
    # Use the result from the previous query for ?father
} LIMIT 1

# Step 4: Match the successor with the grandfather found in step 3
SELECT ?successor WHERE {
    ?s dbp:predecessor dbr:Osman_III.
    ?s rdf:type dbo:Person.
    ?s dbp:father ?grandfather. # Use the result from the previous query for ?grandfather
} LIMIT 1

# Step 5: Find the child of this matched individual (successor)
SELECT ?child WHERE {
    ?matchedIndividual dbp:child ?child.
    ?matchedIndividual rdf:type dbo:Person.
    # Use the result from the previous query for ?matchedIndividual
}
```",6,6,7,3,3,3,3,71,0,0,1,0,0.0,0
273,17,val,Give me the spouse of Edoardo Agnelli (industrialist) and parent of the alumnus of the reference to Università degli Studi di Torino.,"SELECT ?result WHERE { ?v3 <http://dbpedia.org/ontology/almaMater> ?v0 . ?result <http://dbpedia.org/ontology/spouse> <http://dbpedia.org/resource/Edoardo_Agnelli_(industrialist)> . ?v0 <http://xmlns.com/foaf/0.1/name> ""Università degli Studi di Torino""@en . ?v3 <http://dbpedia.org/ontology/parent> ?result . }","```sparql
PREFIX dbpedia-owl: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?spouse WHERE {
  ?edoardo a dbpedia-owl:Person ;
           rdfs:label ""Edoardo Agnelli (industrialist)""@en .
  
  ?edoardo dbp:spouse ?spouse .

  OPTIONAL {
    ?child dbp:parent ?spouse ;
           dbp:almaMater <http://dbpedia.org/resource/Universit%C3%A0_degli_Studi_di_Torino> .
  }
}
```",4,4,5,3,2,3,2,20,0,0,1,0,0.0,0
976,40,val,"Give me the office of Naci Bostancı and office of the leader, that is a politician, of the administration, that is an organisation, of Kemal Kılıçdaroğlu and office of Meral Akşener.",SELECT ?result WHERE { ?v1 <http://dbpedia.org/property/office> ?result . <http://dbpedia.org/resource/Meral_Akşener> <http://dbpedia.org/property/office> ?result . <http://dbpedia.org/resource/Naci_Bostancı> <http://dbpedia.org/property/office> ?result . ?v3 <http://dbpedia.org/property/leader> <http://dbpedia.org/resource/Kemal_Kılıçdaroğlu> . ?v3 <http://dbpedia.org/ontology/leader> ?v1 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?person ?office WHERE {
  VALUES (?person ?label) { 
    (dbr:Naci_Bostancı ""Naci Bostancı"")
    (dbr:Kemal_Kılıçdaroğlu ""Kemal Kılıçdaroğlu"")
    (dbr:Meral_Akşener ""Meral Akşener"")
  }
  
  OPTIONAL {
    ?person dbo:office ?office .
  }

  OPTIONAL {
    ?organization dbo:leader ?person ;
                  a dbo:Organization .
    ?organization dbo:leaderPosition ?position .
    BIND(CONCAT(""Office of the "", STR(?position)) AS ?office)
  }
}
```",5,7,6,3,3,3,3,71,0,3,1,0.0,0.0,0
917,51,val,"Give me the child of the father of the child, that is a royalty, of Kamehameha III and child of the father of Keʻelikōlani.",SELECT ?result WHERE { <http://dbpedia.org/resource/Keʻelikōlani> <http://dbpedia.org/property/father> ?v4 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v3 <http://dbpedia.org/property/father> ?v0 . ?result <http://dbpedia.org/ontology/parent> ?v4 . ?result <http://dbpedia.org/property/father> ?v0 . <http://dbpedia.org/resource/Kamehameha_III> <http://dbpedia.org/ontology/child> ?v3 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?child WHERE {
  # Kamehameha III's children
  ?kamehamehaIII dbr:Kamehameha_III .
  ?kamehamehaIII dbo:spouse ?spouse1 ;
                dbo:child ?child .

  # Keʻelikōlani's father
  ?keʻelikoLANI dbr:Keʻelikōlani .
  ?keʻelikoLANI dbo:parent ?fatherOfKeʻelikoLANI .

  # Find the common child who is royalty
  FILTER (?child = ?commonChild)
  
  # Check if the child is also a child of Keʻelikōlani's father
  ?fatherOfKeʻelikoLANI dbo:child ?commonChild .
  
  # Ensure the child has a royal title
  OPTIONAL { ?commonChild dbo:title ?title . FILTER regex(?title, ""King|Queen"", ""i"") }
}
```",5,6,6,3,2,3,3,71,0,0,3,0,0.0,0
935,15,val,"Give me the headquarter of Provincial Assembly of Balochistan and death place of the awardee of the award, that is an award, of Syed Sohail Hussain Naqvi.",SELECT ?result WHERE { ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Award>. ?v1 <http://dbpedia.org/ontology/deathPlace> ?result . ?v1 <http://dbpedia.org/property/awards> ?v0 . <http://dbpedia.org/resource/Provincial_Assembly_of_Balochistan> <http://dbpedia.org/ontology/location> ?result . <http://dbpedia.org/resource/Syed_Sohail_Hussain_Naqvi> <http://dbpedia.org/property/awards> ?v0 . },"```sparql
# Query for the headquarters of the Provincial Assembly of Balochistan
SELECT ?headquarters WHERE {
  dbpedia:Provincial_Assembly_of_Balochistan dbo:location ?headquarters .
}

UNION

# Query for the award received by Syed Sohail Hussain Naqvi and his death place
SELECT ?deathPlace WHERE {
  ?person foaf:name ""Syed Sohail Hussain Naqvi""@en ;
          dbo:awardReceived ?award .
  ?award dbo:recipient ?person .
  ?person dbo:deathPlace ?deathPlace .
}
```",4,5,5,3,2,3,2,20,0,0,1,0,0.0,0
507,49,val,Give me the spouse of the person born as Anne Voase Coates and professional in the profession of the person born on 1966-02-18.,"SELECT ?result WHERE { ?v0 <http://dbpedia.org/ontology/birthDate> ""1966-02-18""^^<http://www.w3.org/2001/XMLSchema#date> . ?v0 <http://dbpedia.org/property/occupation> ?v1 . ?result <http://dbpedia.org/property/occupation> ?v1 . ?v2 <http://dbpedia.org/property/birthName> ""Anne Voase Coates""@en . ?result <http://dbpedia.org/ontology/spouse> ?v2 . }","```sparql
SELECT ?spouse WHERE {
  ?anne foaf:name ""Anne Voase Coates""@en .
  ?anne dbo:birthName ""Anne Voase Coates"" .
  ?anne dbo:spouse ?spouse .
}

# This part is for identifying the profession of a person born on 1966-02-18
SELECT ?person ?profession WHERE {
  ?person dbo:birthday ""1966-02-18""^^xsd:date .
  ?person dbo:occupation ?profession .
}
```",5,5,6,3,2,3,3,71,0,0,1,0,0.0,0
976,51,val,"Give me the office of the mayor, that is a politician and an office holder and Turkish, of Nation Alliance (Turkey) and office of the person born as the birth name of Naci Bostancı.",SELECT ?result WHERE { ?v0 <http://dbpedia.org/property/office> ?result . <http://dbpedia.org/resource/Nation_Alliance_(Turkey)> <http://dbpedia.org/property/leader> ?v4 . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v4 <http://dbpedia.org/ontology/nationality> <http://dbpedia.org/resource/Turkey>. ?v0 <http://dbpedia.org/property/birthName> ?v3 . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v4 <http://dbpedia.org/property/office> ?result . <http://dbpedia.org/resource/Naci_Bostancı> <http://dbpedia.org/property/birthName> ?v3 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?person ?mayorOffice WHERE {
  ?person a dbo:Politician ;
          foaf:name ""Naci Bostancı""@en ;
          dbo:nationality dbr:Turkey .
  
  OPTIONAL { ?person dbo:memberOfParty dbr:Nation_Alliance_(Turkey) . }
  
  OPTIONAL { ?person dbo:officeHolder ?mayorOffice .
             ?mayorOffice a dbo:Mayor ; 
                          rdfs:label ?officeLabel .
             FILTER(CONTAINS(LCASE(?officeLabel), ""mayor"")) 
           }
}
```",5,8,6,3,2,3,3,71,0,0,1,0,0.0,0
917,50,val,"Give me the child of the father of Kamehameha IV and child of the father of the spouse, that is a royalty, of Leleiohoku I.",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/parent> ?v3 . ?result <http://dbpedia.org/property/father> ?v0 . ?v1 <http://dbpedia.org/property/father> ?v3 . <http://dbpedia.org/resource/Kamehameha_IV> <http://dbpedia.org/property/father> ?v0 . ?v1 <http://dbpedia.org/ontology/spouse> <http://dbpedia.org/resource/Leleiohoku_I> . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?child WHERE {
  # Kamehameha IV's father is Kamehameha I
  dbr:Kamehameha_IV dbo:father dbr:Kamehameha_I .
  
  # Child of Kamehameha I who is royalty
  ?child dbo:parent dbr:Kamehameha_I .
  ?child a dbo:Monarch .

  # Leleiohoku I's spouse is Queen Emma
  dbr:Leleiohoku_I dbo:spouse dbr:Queen_Emma_of_the_Hawaiian_Islands .

  # Child of the father of Queen Emma (considering royal lineage)
  ?child dbo:parent ?parent .
  ?parent dbo:spouse dbr:Kamehameha_IV ; # or Kamehameha V, as they are children of their parents' union
  
  FILTER(?child = ?royalChild) .
}
```",5,6,6,3,2,3,3,71,0,0,3,0,0.0,0
329,21,val,"Give me the entity in the birthplace, that is an organisation and a country, of Robert Bates (loyalist) and entity in United Kingdom and birthplace of Eric Cross (writer).",SELECT ?result WHERE { ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. <http://dbpedia.org/resource/Robert_Bates_(loyalist)> <http://dbpedia.org/ontology/birthPlace> ?v0 . ?result <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/United_Kingdom> . <http://dbpedia.org/resource/Eric_Cross_(writer)> <http://dbpedia.org/ontology/birthPlace> ?result . ?result <http://dbpedia.org/ontology/country> ?v0 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?birthplaceRobertBates ?organisation ?country ?entityUKEricCross ?birthplaceEricCross
WHERE {
  # Robert Bates (loyalist)
  dbr:Robert_Bates_(loyalist) dbo:birthPlace ?birthplaceRobertBates .
  
  OPTIONAL {
    ?birthplaceRobertBates dbo:country ?country .
  }
  
  OPTIONAL {
    ?organisation dbo:location ?birthplaceRobertBates ;
                  a dbo:Organisation .
  }

  # Eric Cross (writer)
  dbr:Eric_Cross_(writer) dbo:birthPlace ?birthplaceEricCross .
  
  OPTIONAL {
    ?entityUKEricCross dbo:country dbr:United_Kingdom ;
                       dbo:wikiPageDisambiguates ?ericCrossResource .
    
    FILTER(?ericCrossResource = dbr:Eric_Cross_(writer))
  }
}
```",4,6,5,2,3,2,3,28,0,0,1,0,0.0,0
36,23,val,"Give me the actor of the claim to fame, that is a film, of Lepacious Bose and person born as the birth name of Ayo Makun.",SELECT ?result WHERE { ?v3 <http://dbpedia.org/ontology/starring> ?result . ?result <http://dbpedia.org/property/birthName> ?v1 . <http://dbpedia.org/resource/Ayo_Makun> <http://dbpedia.org/property/birthName> ?v1 . <http://dbpedia.org/resource/Lepacious_Bose> <http://dbpedia.org/ontology/knownFor> ?v3 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Film>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?actor WHERE {
  # Lepacious Bose's claim to fame (film)
  dbr:Lepa_Bose dbo:claimToFameFilm dbr:FilmX .

  # Ayo Makun's birth name
  dbr:Ayo_Makun dbo:birthName ""Ayo Makun""@en .

  # Find actors in the film
  dbr:FilmX dbo:starring ?actor .
  
  # Ensure actor is also associated with Ayo Makun's birth name
  ?actor dbo:birthName ""Ayo Makun""@en .
}
```

Note: Replace `dbr:FilmX` with the actual DBpedia resource for Lepacious Bose's claim to fame film once identified.",4,5,5,2,2,2,3,28,0,0,1,0,0.0,0
445,45,val,Give me the entity in England and death place of Patrick Moore and entity in the award of the commander in Battle of Saint-Mihiel.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/country> ?v1 . ?v0 <http://dbpedia.org/property/awards> ?v1 . ?result <http://dbpedia.org/ontology/location> <http://dbpedia.org/resource/England> . <http://dbpedia.org/resource/Battle_of_Saint-Mihiel> <http://dbpedia.org/ontology/commander> ?v0 . <http://dbpedia.org/resource/Patrick_Moore> <http://dbpedia.org/ontology/deathPlace> ?result . },"```sparql
# Query for Patrick Moore's death place in England
SELECT ?deathPlace WHERE {
  dbpedia:Patrick_Moore dbo:deathPlace ?deathPlace .
  ?deathPlace dbo:country dbr:England .
}

UNION

# Query for awards related to the Battle of Saint-Mihiel involving a commander
SELECT ?award WHERE {
  ?battle dbo:name ""Battle of Saint-Mihiel""@en ;
          dbo:awardsReceived ?award .
  ?award dbo:title ?title .
  FILTER(CONTAINS(LCASE(?title), ""commander""))
}
```",5,5,6,3,3,3,3,71,0,0,1,0,0.0,0
839,55,val,"Give me the band of the band, that is a musical artist, of Charlie Huhn and band of the person born, that is a musical artist, as Kevin Richard Russell and band of the member of Böhse Onkelz.","SELECT ?result WHERE { ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?v3 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v3 <http://dbpedia.org/property/birthName> ""Kevin Richard Russell""@en . ?result <http://dbpedia.org/ontology/bandMember> ?v5 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. <http://dbpedia.org/resource/Charlie_Huhn> <http://dbpedia.org/ontology/associatedMusicalArtist> ?v2 . ?result <http://dbpedia.org/ontology/bandMember> ?v2 . <http://dbpedia.org/resource/Böhse_Onkelz> <http://dbpedia.org/ontology/bandMember> ?v5 . }","```sparql
# Query to find Charlie Huhn's band
SELECT ?band WHERE {
  ?person dbo:birthName ""Charlie Huhn""@en .
  ?person dbo:associatedBand ?band .
}

UNION

# Query to find Kevin Richard Russell's (Little Feat) band
SELECT ?band WHERE {
  ?person foaf:name ""Kevin Richard Russell""@en ;
          dbo:birthDate ?date .
  FILTER (?date = ""1959-03-31""^^xsd:date)
  ?person dbo:associatedBand ?band .
}

UNION

# Query to find a Böhse Onkelz member's band
SELECT ?member ?band WHERE {
  ?group dbo:name ""Böhse Onkelz""@en ;
         dbo:member ?member .
  ?member dbo:associatedBand ?band .
}
```",6,8,7,2,3,3,3,71,0,0,1,0,0.0,0
573,40,val,"Give me the parent of John Quincy Adams and person decedent at Quincy, Massachusetts and person decedent at the administration, that is a region, of the real name of Charlie Baker (Australian footballer).","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/deathPlace> <http://dbpedia.org/resource/Quincy,_Massachusetts> . <http://dbpedia.org/resource/John_Quincy_Adams> <http://dbpedia.org/ontology/parent> ?result . <http://dbpedia.org/resource/Charlie_Baker_(Australian_footballer)> <http://xmlns.com/foaf/0.1/name> ?v2 . ?result <http://dbpedia.org/ontology/deathPlace> ?v1 . ?v1 <http://dbpedia.org/property/governor> ?v2 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Region>. }","```sparql
# Step 1: Get the parent of John Quincy Adams
SELECT ?parent WHERE {
  wd:Q15295 wdt:P22 ?parent .
}

# Step 2: Find person decedent at Quincy, Massachusetts
SELECT DISTINCT ?person WHERE {
  ?person wdt:P20 wd:Q1204 . # P20 is deathPlace
  ?place wdt:P31/wdt:P279* wd:Q12140 ; # P31 is instance of, P279 is subclass of (for cities)
       rdfs:label ""Quincy""@en .
}

# Step 3: Find Charlie Baker's real name and associated region
SELECT DISTINCT ?realName ?region WHERE {
  wd:Q1065182 wdt:P735 ?realName . # P735 is also known as
  ?person wdt:P31/wdt:P279* wd:Q1065182 ; # Person who is Charlie Baker
       wdt:P69 ?position . # P69 is position held
  ?position wdt:P131 ?region . # P131 is administrative territorial entity
}

# Step 4: Find person decedent at the administration of that region
SELECT DISTINCT ?person WHERE {
  ?person wdt:P20 ?deathPlace .
  ?position wdt:P131 ?region .
  ?person wdt:P69 ?position .
  FILTER(?region IN ({?region}))
}
```",5,6,6,3,3,3,3,71,0,0,2,0,0.0,0
456,50,val,"Give me the band of the band, that is a musical artist, of Dean Brody and professional in the alter ego of the reference, that is a fictional character, to Lamont Cranston (radio, film and television).","SELECT ?result WHERE { ?v0 <http://xmlns.com/foaf/0.1/name> ""Lamont Cranston (radio, film and television)""@en . <http://dbpedia.org/resource/Dean_Brody> <http://dbpedia.org/ontology/associatedMusicalArtist> ?v3 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?result <http://dbpedia.org/property/occupation> ?v4 . ?v0 <http://dbpedia.org/property/alterEgo> ?v4 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/FictionalCharacter>. ?v3 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . }","```sparql
# Step 1: Find the band of Dean Brody
SELECT ?band WHERE {
  wd:Q123456 wdt:P106 wd:Q33999; # Dean Brody is a musical artist
  wdt:P175 ?band.               # P175 denotes ""member of""
}

UNION

# Step 2: Find any band associated with The Shadow (alter ego of Lamont Cranston)
SELECT ?shadowBand WHERE {
  wd:Q789012 wdt:P136 ?shadowBand. # The Shadow is a fictional character
  FILTER(CONTAINS(LCASE(?shadowBandLabel), ""the shadow"")) # Filter for bands related to The Shadow
}

# Step 3: Find the common band between Dean Brody and The Shadow
SELECT DISTINCT ?commonBand WHERE {
  { 
    wd:Q123456 wdt:P175 ?band. # Dean Brody's band
    BIND(?band AS ?commonBand)
  }
  
  UNION
  
  {
    wd:Q789012 wdt:P136 ?shadowBand.
    FILTER(CONTAINS(LCASE(?shadowBandLabel), ""the shadow""))
    BIND(?shadowBand AS ?commonBand)
  }

  # Filter for common band
  FILTER(?band = ?shadowBand)
}
```",5,7,6,3,2,3,3,71,0,0,1,0,0.0,0
573,46,val,"Give me the person decedent at the residence, that is a settlement, of William J. Phelan and person decedent at the administration, that is a region, of the real name of Charlie Baker (Australian footballer).",SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Region>. <http://dbpedia.org/resource/Charlie_Baker_(Australian_footballer)> <http://xmlns.com/foaf/0.1/name> ?v2 . ?v1 <http://dbpedia.org/property/governor> ?v2 . <http://dbpedia.org/resource/William_J._Phelan> <http://dbpedia.org/property/residence> ?v4 . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. ?result <http://dbpedia.org/ontology/deathPlace> ?v4 . ?result <http://dbpedia.org/ontology/deathPlace> ?v1 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?personDecedentAtPhelanResidence ?personDecedentAtAustralianFootballerAdmin
WHERE {
  # Find William J. Phelan's residence and check if it is a settlement
  ?phelan dbo:residence ?residence .
  FILTER (CONTAINS(LCASE(STR(?residence)), ""william j. phelan""))
  
  # Check if the residence is a settlement
  ?residence rdf:type dbo:Settlement .

  # Find person decedent at this residence
  ?deathEvent dbo:place ?residence ;
              dbo:agent ?personDecedentAtPhelanResidence .
  ?personDecedentAtPhelanResidence dbo:deathPlace ?residence .

  # Find Charlie Baker (Australian footballer) and his real name
  ?charlieBaker dbr:Charlie_Baker_(Australian_footballer) ;
                rdfs:label ""Charlie Baker""@en .
  
  # Find the administration associated with him
  ?administration dbo:administrativeRegion ?realName .
  ?realName rdfs:label ?charlieRealNameLabel .
  FILTER (CONTAINS(LCASE(?charlieRealNameLabel), ""charlie baker""))

  # Find person decedent at this administrative region
  ?deathEvent2 dbo:place ?administration ;
               dbo:agent ?personDecedentAtAustralianFootballerAdmin .
  ?personDecedentAtAustralianFootballerAdmin dbo:deathPlace ?administration .
}
```",5,7,6,3,2,3,3,71,0,0,4,0,0.0,0
579,15,val,"Give me the native of the residence, that is English and a settlement, of the resident of Scotland and person born as Isobel Jane Miller Richard.","SELECT ?result WHERE { ?result <http://dbpedia.org/property/birthName> ""Isobel Jane Miller Richard""@en . ?result <http://dbpedia.org/ontology/birthPlace> ?v1 . ?v0 <http://dbpedia.org/property/residence> ?v1 . ?v0 <http://dbpedia.org/ontology/residence> <http://dbpedia.org/resource/Scotland> . ?v1 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/United_Kingdom>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?settlement ?nativeLanguage WHERE {
  # Identify Isobel Campbell and her residence in Scotland
  ?isobelCampbell dbo:birthName ""Isobel Jane Miller""@en .
  ?isobelCampbell dbo:residence dbr:Glasgow .

  # Find English settlements with English as the native language
  ?settlement a dbo:Settlement ;
              dbp:nativeLanguage ""English"" ;
              dbo:country dbr:United_Kingdom .

  # Link the settlement to Glasgow through Isobel Campbell's residence
  OPTIONAL { ?isobelCampbell dbo:residence ?linkSettlement .
             FILTER(?linkSettlement = ?settlement) }
}
```",4,6,5,3,2,3,2,20,0,0,1,0,0.0,0
826,45,val,"Give me the successor of Louis II, Grand Duke of Hesse and spouse of Anna Magdalena Appel and predecessor of the parent of the child of Louis IV, Grand Duke of Hesse.","SELECT ?result WHERE { ?v0 <http://dbpedia.org/ontology/parent> <http://dbpedia.org/resource/Louis_IV,_Grand_Duke_of_Hesse> . ?result <http://dbpedia.org/ontology/successor> ?v1 . <http://dbpedia.org/resource/Louis_II,_Grand_Duke_of_Hesse> <http://dbpedia.org/ontology/successor> ?result . <http://dbpedia.org/resource/Anna_Magdalena_Appel> <http://dbpedia.org/ontology/spouse> ?result . ?v0 <http://dbpedia.org/ontology/parent> ?v1 . }","```sparql
SELECT ?successor WHERE {
  wd:Q1234568 wdt:P136 ?successor .
}
```

Note: `wd:Q1234568` should be replaced with the actual DBpedia identifier for Louis II, Grand Duke of Hesse. You would need to look up this identifier in DBpedia.",5,5,6,3,3,3,3,71,0,0,1,0,0.0,0
892,47,val,Give me the entity in the profession of Henri Crolla and landmark at elevation of the award of the member of E-girls.,SELECT ?result WHERE { <http://dbpedia.org/resource/E-girls> <http://dbpedia.org/ontology/bandMember> ?v0 . ?result <http://dbpedia.org/ontology/elevation> ?v3 . ?result <http://dbpedia.org/ontology/country> ?v1 . <http://dbpedia.org/resource/Henri_Crolla> <http://dbpedia.org/property/occupation> ?v1 . ?v0 <http://dbpedia.org/property/awards> ?v3 . },"```sparql
# Query to get the profession of Henri Crolla
SELECT ?profession WHERE {
  dbpedia:Henri_Crolla dbo:occupation ?profession .
}

# Query to find a member of E-girls, their award, and the landmark's elevation
SELECT DISTINCT ?member ?award ?landmark ?elevation WHERE {
  # Find a member of E-girls
  ?member dbo:memberOf dbpedia:E-girls .

  # Find an award received by this member
  ?member dbo:receivedAward ?award .

  # Check if the award is associated with a landmark and get its elevation
  OPTIONAL { 
    ?award dbo:location ?landmark .
    ?landmark geo:elevation ?elevation .
  }
}
```",5,5,6,3,2,3,3,71,0,0,11,0,0.0,0
826,47,val,"Give me the spouse of the child of Johann Heinrich Appel and successor of the child, that is a royalty, of the reference, that is a royalty, to Louis I.","SELECT ?result WHERE { ?v2 <http://dbpedia.org/property/father> ""Johann Heinrich Appel""@en . ?v0 <http://xmlns.com/foaf/0.1/name> ""Louis I""@en . ?v4 <http://dbpedia.org/ontology/successor> ?result . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v0 <http://dbpedia.org/ontology/child> ?v4 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v2 <http://dbpedia.org/ontology/spouse> ?result . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?spouse ?successor WHERE {
  # Find Johann Heinrich Appel's child
  ?child dbo:parent dbr:Johann_Heinrich_Appel .
  
  # Find the spouse of that child
  ?spouse dbo:spouse ?child .
  
  # Ensure the spouse is royalty and connected to Louis I
  ?spouse a dbo:Monarch ;
          dbo:succession dbr:Louis_I .

  # Find the successor (offspring) of the child
  ?successor dbo:parent ?child .
  
  # Ensure the successor is royalty and connected to Louis I
  ?successor a dbo:Monarch ;
             dbo:succession dbr:Louis_I .
}
```",5,7,6,3,2,3,3,71,0,0,1,0,0.0,0
791,40,val,"Give me the father of Emperor Go-Toba and predecessor of Emperor Antoku and spouse of the spouse, that is a royalty, of the reference to Emperor Takakura.","SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v2 <http://xmlns.com/foaf/0.1/name> ""Emperor Takakura""@en . ?v1 <http://dbpedia.org/ontology/spouse> ?v2 . ?result <http://dbpedia.org/ontology/successor> <http://dbpedia.org/resource/Emperor_Antoku> . <http://dbpedia.org/resource/Emperor_Go-Toba> <http://dbpedia.org/property/father> ?result . ?result <http://dbpedia.org/ontology/spouse> ?v1 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?emperor WHERE {
  ?goToba dbo:father dbr:Takakura;
          dbo:predecessor dbr:Antoku.
  
  ?takakura dbo:spouse ?shikishi;
            rdfs:label ""Emperor Takakura""@en.

  ?shikishi dbo:spouse ?emperor;
            a dbo:Person;
            rdfs:label ""Shikishi""^^xsd:string.

  FILTER(CONTAINS(LCASE(?emperor), ""takakura""))
}
```",5,6,6,3,3,3,3,71,0,0,1,0,0.0,0
573,54,val,"Give me the person decedent at the administration, that is a region, of Charlie Baker and person decedent at the residence, that is a settlement, of the professional, that is American, in Politician and parent of John Quincy Adams.","SELECT ?result WHERE { ?v0 <http://dbpedia.org/ontology/nationality> <http://dbpedia.org/resource/United_States>. ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. ?result <http://dbpedia.org/ontology/deathPlace> ?v5 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Region>. ?v0 <http://dbpedia.org/property/residence> ?v5 . ?result <http://dbpedia.org/ontology/deathPlace> ?v3 . <http://dbpedia.org/resource/John_Quincy_Adams> <http://dbpedia.org/ontology/parent> ?result . ?v3 <http://dbpedia.org/property/governor> ""Charlie Baker""@en . ?v0 <http://dbpedia.org/property/occupation> ""Politician""@en . }","```sparql
# Step 1: Find Charlie Baker's state (Massachusetts)
SELECT ?state WHERE {
    ?governor dbo:officeHolderOf dbr:Governor_of_Massachusetts.
    ?governor foaf:name ""Charlie Baker""@en.
    ?governor dbo:governmentRole dbr:Governor_of_Massachusetts.
    ?governor dbo:administrativeArea ?state.
}

# Step 2: Find a notable person buried in Massachusetts
SELECT DISTINCT ?person WHERE {
    ?person dbo:deathPlace dbr:Massachusetts.
    ?person dbo:deceased dbr:Category:Burials_in_Massachusetts.
}

# Step 3: Identify John Adams' residence (Braintree/Quincy, Massachusetts)
SELECT ?residence WHERE {
    ?johnAdams foaf:name ""John Adams""@en.
    ?johnAdams dbo:spouse dbr:Abigail_Adams.
    ?johnAdams dbo:child dbr:John_Quincy_Adams.
    ?johnAdams dbo:residenceLocation ?residence.
}

# Step 4: Find a notable person buried in Braintree/Quincy, Massachusetts
SELECT DISTINCT ?person WHERE {
    ?person dbo:deathPlace dbr:Braintree,_Massachusetts.
    ?person dbo:deceased dbr:Category:Burials_in_Braintree,_Massachusetts.
}
```",6,9,7,3,3,3,3,71,0,0,2,0,0.0,0
976,42,val,"Give me the office of the person born as Mehmet Naci Bostancı and office of Meral Akşener and office of the leader, that is a politician, of Grand National Assembly of Turkey.","SELECT ?result WHERE { ?v0 <http://dbpedia.org/property/office> ?result . ?v1 <http://dbpedia.org/property/office> ?result . <http://dbpedia.org/resource/Grand_National_Assembly_of_Turkey> <http://dbpedia.org/ontology/leader> ?v1 . <http://dbpedia.org/resource/Meral_Akşener> <http://dbpedia.org/property/office> ?result . ?v0 <http://dbpedia.org/property/birthName> ""Mehmet Naci Bostancı""@en . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. }","```sparql
# Query to find the office of Mehmet Naci Bostancı
SELECT ?office WHERE {
  ?person foaf:name ""Mehmet Naci Bostancı""@en .
  ?person dbo:birthName ""Mehmet Naci Bostancı""@en .
  ?person dbo:occupation ?office .
}

UNION

# Query to find the office of Meral Akşener
SELECT ?office WHERE {
  ?person foaf:name ""Meral Akşener""@en .
  ?person dbo:currentOffice ?office .
}

UNION

# Query to find the office of the leader of the Grand National Assembly of Turkey
SELECT ?office WHERE {
  ?position rdfs:label ""Speaker of the Grand National Assembly of Turkey""@en .
  ?position dbo:officeHolder ?office .
}
```",5,6,6,2,3,3,3,71,0,0,1,0,0.0,0
715,47,val,"Give me the commander in the force of the mayor, that is an office holder and a politician and a president, of 1933 Spanish general election and commander in the force, that is a military conflict, of Abd el-Krim.",SELECT ?result WHERE { ?v4 <http://dbpedia.org/ontology/commander> ?result . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v2 <http://dbpedia.org/ontology/commander> ?result . <http://dbpedia.org/resource/1933_Spanish_general_election> <http://dbpedia.org/property/leader> ?v0 . ?v4 <http://dbpedia.org/ontology/commander> ?v0 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v2 <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Abd_el-Krim> . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/President>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. },"```sparql
# Query to find the commander in the force of the mayor (president) in the 1933 Spanish general election
SELECT ?person WHERE {
  ?person dbo:officeHolderOf dbr:President_of_Spain.
  ?person dbo:termStartYear ""1933""^^xsd:gYear.
  ?person a dbo:Politician .
}

UNION

# Query to find the commander in the force of Abd el-Krim
SELECT ?commander WHERE {
  ?conflict dbo:participatedIn dbr:Rif_War.
  ?conflict dbo:commandedBy ?commander.
  ?conflict dbo:opponent dbr:Abd_el-Krim .
}
```",5,9,6,3,2,3,3,71,0,0,4,0,0.0,0
124,50,val,"Give me the military force of the war, that is an event and a military conflict and a societal event, of the awardee of British South Africa Company Medal and military force of the force, that is a societal event and a military conflict, of Herbert Kitchener, 1st Earl Kitchener.","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/battle> ?v3 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?v0 <http://dbpedia.org/ontology/battle> ?v4 . ?result <http://dbpedia.org/ontology/battle> ?v4 . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v0 <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/British_South_Africa_Company_Medal> . ?v3 <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Herbert_Kitchener,_1st_Earl_Kitchener> . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?war WHERE {
  # Find wars associated with the British South Africa Company Medal
  ?medal dbo:awardedFor ?event1 .
  FILTER(STRSTARTS(STR(?medal), ""http://dbpedia.org/resource/British_South_Africa_Company_Medal""))

  # Find wars associated with Herbert Kitchener, 1st Earl Kitchener
  ?person dbo:militaryForce ?force .
  ?force dbo:partOf ?event2 .
  FILTER(STRSTARTS(STR(?person), ""http://dbpedia.org/resource/Herbert_Kitchener,_1st_Earl_Kitchener""))

  # Ensure the events are wars and societal events
  ?event1 a dbo:MilitaryConflict ;
         a dbo:SocietalEvent .

  ?event2 a dbo:MilitaryConflict ;
         a dbo:SocietalEvent .

  # Find common war
  FILTER(?event1 = ?event2)
}
```",5,10,6,3,2,3,3,71,0,0,1085,0,0.0,0
216,45,val,"Give me the player in Mario Ivanković and player in Igor Bišćan and team of the person born, that is a sports manager and a soccer manager and a soccer player, on the death of Pavel Vezhinov.",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/coach> ?v1 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerManager>. <http://dbpedia.org/resource/Igor_Bišćan> <http://dbpedia.org/ontology/team> ?result . ?v1 <http://dbpedia.org/ontology/birthDate> ?v0 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsManager>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerPlayer>. <http://dbpedia.org/resource/Pavel_Vezhinov> <http://dbpedia.org/ontology/deathDate> ?v0 . <http://dbpedia.org/resource/Mario_Ivanković> <http://dbpedia.org/ontology/team> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?player1Team ?player2Team ?person ?personTeam WHERE {
  # Find teams for Mario Ivanković and Igor Bišćan
  OPTIONAL { 
    dbr:Mario_Ivanković dbo:team ?player1Team .
  }
  OPTIONAL { 
    dbr:Igor_Bišćan dbo:team ?player2Team .
  }

  # Find a person born on March 5, 2013, who is a sports manager and soccer player
  ?person dbo:birthDate ""2013-03-05""^^xsd:date ;
          rdf:type dbo:SoccerManager ;
          rdf:type dbo:SportsManager ;
          rdf:type dbo:SoccerPlayer .

  # Find the team of this person
  OPTIONAL { 
    ?person dbo:team ?personTeam .
  }

  # Ensure the person is a soccer manager and player
  FILTER EXISTS { ?person rdf:type dbo:SoccerManager }
  FILTER EXISTS { ?person rdf:type dbo:SoccerPlayer }
}
```",5,8,6,3,3,3,3,71,0,0,1,0,0.0,0
892,49,val,"Give me the entity in the profession of Henri Crolla and entity in the administration, that is Italian and a region and a settlement and an administrative region, of the party, that is a political party and an organisation, of Andrea Cozzolino.",SELECT ?result WHERE { <http://dbpedia.org/resource/Henri_Crolla> <http://dbpedia.org/property/occupation> ?v2 . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/PoliticalParty>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/AdministrativeRegion>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. <http://dbpedia.org/resource/Andrea_Cozzolino> <http://dbpedia.org/ontology/party> ?v4 . ?result <http://dbpedia.org/ontology/province> ?v0 . ?result <http://dbpedia.org/ontology/country> ?v2 . ?v0 <http://dbpedia.org/property/leaderParty> ?v4 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Region>. ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?v0 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Italy>. },"```sparql
# Step 1: Get Henri Crolla's Profession
SELECT ?profession WHERE {
    wd:Q123456 a dbo:Person .
    ?person wdt:P106 ?occupation .
    ?occupation rdfs:label ?profession .
    FILTER (lang(?profession) = ""en"")
} LIMIT 1

# Step 2: Get Andrea Cozzolino's Party
SELECT ?party WHERE {
    wd:Q654321 a dbo:Person .
    ?person wdt:P102 ?party .
    ?party rdfs:label ?partyLabel .
    FILTER (lang(?partyLabel) = ""en"")
} LIMIT 1

# Step 3: Get Italian Regions, Settlements, and Administrative Regions associated with the Party
SELECT DISTINCT ?region ?settlement WHERE {
    ?party wdt:P131* ?location .
    ?location a dbo:AdministrativeRegion ;
              rdfs:label ?regionLabel .
    OPTIONAL { 
        ?location a dbo:Settlement ;
                  rdfs:label ?settlementLabel .
    }
    FILTER (lang(?regionLabel) = ""en"" && lang(?settlementLabel) = ""en"")
    FILTER CONTAINS(LCASE(?regionLabel), ""italy"") || CONTAINS(LCASE(?settlementLabel), ""italy"")
} LIMIT 10
```

Note: Replace `wd:Q123456` with the actual DBpedia ID for Henri Crolla and `wd:Q654321` with the DBpedia ID for Andrea Cozzolino.",5,11,6,3,2,3,3,71,0,0,587,0,0.0,0
47,53,val,"Give me the office of the administration of the commander, that is a politician, in Operation Green Hunt and office of the awardee of Padma Vibhushan and office of Bidesh Ranjan Bose.",SELECT ?result WHERE { ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. <http://dbpedia.org/resource/Operation_Green_Hunt> <http://dbpedia.org/ontology/commander> ?v3 . ?v1 <http://dbpedia.org/property/office> ?result . ?v2 <http://dbpedia.org/property/governor> ?v3 . <http://dbpedia.org/resource/Bidesh_Ranjan_Bose> <http://dbpedia.org/property/office> ?result . ?v2 <http://dbpedia.org/property/office> ?result . ?v1 <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/Padma_Vibhushan> . },"```sparql
# Query for the commander in Operation Green Hunt
SELECT ?person ?office WHERE {
  ?operation dbo:wikiPageRedirects db:Operation_Green_Hunt .
  ?operation dbo:participant ?person .
  ?person rdf:type dbo:Politician .
  ?person dbo:officeHeld ?office .
}

UNION

# Query for the awardee of Padma Vibhushan
SELECT ?person ?awardOffice WHERE {
  ?person dbo:honoraryTitle db:Padma_Vibhushan .
  OPTIONAL { ?person dbo:officeHeld ?awardOffice }
}

UNION

# Query for Bidesh Ranjan Bose's office
SELECT ?bosesOffice WHERE {
  db:Bidesh_Ranjan_Bose dbo:officeHeld ?bosesOffice .
}
```",6,7,7,3,3,3,3,71,0,0,1,0,0.0,0
232,7,val,"Give me the claim to fame of Katherine ""Kitty"" Marshall and artistic movement of the person born, that is a writer, on 1849-09-14.","SELECT ?result WHERE { <http://dbpedia.org/resource/Katherine_%22Kitty%22_Marshall> <http://dbpedia.org/ontology/knownFor> ?result . ?v0 <http://dbpedia.org/ontology/birthDate> ""1849-09-14""^^<http://www.w3.org/2001/XMLSchema#date> . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Writer>. ?v0 <http://dbpedia.org/ontology/movement> ?result . }","```sparql
# Query for Katherine ""Kitty"" Marshall's claim to fame
SELECT ?claimToFame WHERE {
  ?person foaf:name ""Katherine \""Kitty\"" Marshall""@en .
  ?person dbo:occupation ?occupation .
  OPTIONAL { ?person dbo:notableWork ?claimToFame . }
}

UNION

# Query for the artistic movement of a writer born on 1849-09-14
SELECT ?artisticMovement WHERE {
  ?writer dbo:birthDate ""1849-09-14""^^xsd:date ;
          rdf:type dbo:Writer .
  OPTIONAL { ?writer dbo:associatedArtisticMovement ?artisticMovement . }
}
```",3,4,4,2,2,2,2,9,0,0,1,0,0.0,0
987,52,val,"Give me the birth place of the band, that is an artist and a musical artist, of the band, that is an artist, of Dado Polumenta and entity in Montenegro and birth place of the actor of All for Free.",SELECT ?result WHERE { ?v3 <http://dbpedia.org/ontology/associatedMusicalArtist> ?v1 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?result <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Montenegro> . <http://dbpedia.org/resource/All_for_Free> <http://dbpedia.org/property/starring> ?v4 . ?v1 <http://dbpedia.org/ontology/birthPlace> ?result . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. ?v4 <http://dbpedia.org/ontology/birthPlace> ?result . <http://dbpedia.org/resource/Dado_Polumenta> <http://dbpedia.org/ontology/associatedMusicalArtist> ?v3 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. },"```sparql
# Step 1: Find Dado Prljaca's band
SELECT ?band WHERE {
  wd:Q123456 a dbo:Band ;
             dbo:member wd:Q789012 . # Assuming Q789012 is Dado Prljaca
}

# Step 2: Find the main artist of Zabranjeto Pušenje
SELECT ?artist WHERE {
  wd:Q345678 a dbo:MusicalArtist ; # Assuming Q345678 is Zabranjeno Pušenje
              dbo:member wd:Q789012 .
}

# Step 3: Find the birthplace of Goran Bregović
SELECT ?birthPlaceLabel WHERE {
  wd:Q987654 dbo:birthPlace ?birthPlace . # Assuming Q987654 is Goran Bregović
  SERVICE wikibase:label { bd:serviceParam wikibase:language ""en"". }
}

# Step 4: Find the actor in ""All for Free""
SELECT ?actor WHERE {
  wd:Q678901 dbo:castMember ?actor . # Assuming Q678901 is All for Free
}

# Step 5: Find the birthplace of Miki Manojlović
SELECT ?birthPlaceLabel WHERE {
  wd:Q876543 dbo:birthPlace ?birthPlace . # Assuming Q876543 is Miki Manojlović
  SERVICE wikibase:label { bd:serviceParam wikibase:language ""en"". }
}
```",6,9,7,3,3,3,3,71,0,0,1,0,0.0,0
926,49,val,"Give me the father of the father of Abdulaziz and child of the father, that is a royalty, of the parent, that is a royalty, of Beyhan Sultan (daughter of Mustafa III).",SELECT ?result WHERE { ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. <http://dbpedia.org/resource/Beyhan_Sultan_(daughter_of_Mustafa_III)> <http://dbpedia.org/ontology/parent> ?v4 . ?v2 <http://dbpedia.org/property/father> ?result . ?v4 <http://dbpedia.org/property/father> ?v0 . <http://dbpedia.org/resource/Abdulaziz> <http://dbpedia.org/property/father> ?v2 . ?v0 <http://dbpedia.org/ontology/child> ?result . },"```sparql
# Step 1: Find Abdulaziz Ibn Saud's father
SELECT ?father WHERE {
  wd:Q1596 wdt:P22 ?father .
}

# Step 2: Find the father of Abdul Rahman bin Faisal Al Saud
SELECT ?grandFather WHERE {
  ?father wdt:P22 ?grandFather .
  FILTER(?father = <URI_of_Abdul_Rahman_bin_Faisal_Al_Saud>)
}

# Step 3: Find a child of Faisal bin Turki Al Saud who is royalty
SELECT ?child WHERE {
  ?grandFather wdt:P40 ?child .
  ?child wdt:P31 wd:Q33999 . # Instance of Monarch
}

# Step 4: Identify Mustafa III's children who are royalty
SELECT ?child WHERE {
  wd:Q1234567 wdt:P40 ?child . # Mustafa III's URI
  ?child wdt:P31 wd:Q33999 .
}

# Note: Replace <URI_of_Abdul_Rahman_bin_Faisal_Al_Saud> and wd:Q1234567 with actual URIs from DBpedia.
```",5,7,6,3,2,3,3,71,0,0,1,0,0.0,0
976,48,val,"Give me the office of the leader, that is a politician, of the administration, that is an organisation, of Kemal Kılıçdaroğlu and office of the person born as Mehmet Naci Bostancı.","SELECT ?result WHERE { ?v0 <http://dbpedia.org/property/office> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v0 <http://dbpedia.org/property/birthName> ""Mehmet Naci Bostancı""@en . ?v3 <http://dbpedia.org/ontology/leader> ?v1 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?v3 <http://dbpedia.org/property/leader> <http://dbpedia.org/resource/Kemal_Kılıçdaroğlu> . ?v1 <http://dbpedia.org/property/office> ?result . }","```sparql
# Query to find the office of the leader of the organization associated with Kemal Kılıçdaroğlu
SELECT ?office WHERE {
  wd:Q123456 wdt:P39 ?organization . # Assuming Q123456 is the DBpedia ID for Kemal Kılıçdaroğlu
  ?organization wdt:P69 wd:Q789012 . # P69 denotes leader of an organization, assuming Q789012 is the DBpedia ID for Republican People's Party
  ?leader wdt:P39 wd:Q789012 .
  ?leader wdt:P106 wd:Q82955 . # P106 denotes occupation, and Q82955 is politician
  ?leader wdt:P39 ?office .
}

UNION

# Query to find the office of Mehmet Naci Bostancı by birth name
SELECT ?office WHERE {
  ?person schema:name ""Mehmet Naci Bostancı""@en . # Using schema:name for birth name
  ?person wdt:P106 wd:Q82955 . # P106 denotes occupation, and Q82955 is politician
  ?person wdt:P39 ?office .
}
```",5,7,6,3,2,3,3,71,0,0,1,0,0.0,0
216,20,val,Give me the administration of  and office of Tim Nicholls and party of the awardee of Australian Defence Medal.,"SELECT ?result WHERE { <http://dbpedia.org/resource/Tim_Nicholls> <http://dbpedia.org/property/office> ?result . ?v3 <http://dbpedia.org/ontology/party> ?result . ?result <http://dbpedia.org/property/leader> """"@en . ?v3 <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/Australian_Defence_Medal> . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?administrationRole ?officeHeld ?partyAffiliation ?award
WHERE {
  VALUES ?timNicholls { dbr:Tim_Nicholls }
  
  OPTIONAL { ?timNicholls dbo:positionHeld ?office . ?office rdfs:label ?officeHeld . FILTER(LANG(?officeHeld) = ""en"") }
  OPTIONAL { ?timNicholls dbo:partyAffiliation ?party . ?party rdfs:label ?partyAffiliation . FILTER(LANG(?partyAffiliation) = ""en"") }
  OPTIONAL { ?timNicholls dbo:award ?award . ?award rdfs:label ?awardLabel .
             FILTER(CONTAINS(LCASE(STR(?awardLabel)), ""australian defence medal"")) }
}
```",4,4,5,2,3,2,3,28,0,0,1,0,0.0,0
582,51,val,"Give me the player in the father, that is an athlete and a soccer manager and a sports manager, of Masami Nagasawa and figure known as the nickname of the team, that is an organisation, of Hajime Moriyasu.",SELECT ?result WHERE { ?result <http://dbpedia.org/property/nickname> ?v2 . ?v4 <http://dbpedia.org/ontology/team> ?result . ?v1 <http://dbpedia.org/ontology/coach> <http://dbpedia.org/resource/Hajime_Moriyasu> . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerManager>. ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Athlete>. ?v1 <http://dbpedia.org/property/nickname> ?v2 . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsManager>. <http://dbpedia.org/resource/Masami_Nagasawa> <http://dbpedia.org/property/father> ?v4 . },"```sparql
# Step 1: Find Masami Nagasawa's father who is an athlete, soccer manager, and sports manager.
SELECT ?father WHERE {
    ?nagasawa dbo:spouse ?person .
    ?person foaf:name ""Masami Nagasawa""@en .
    ?person dbo:parent ?father .
    ?father rdf:type dbo:Athlete ;
            dbo:sportTeamRole dbo:SoccerManager ;
            dbo:sportTeamRole dbo:SportsManager .
}

# Step 2: Find Hajime Moriyasu's team and its nickname.
SELECT ?team ?nickname WHERE {
    ?moriyasu dbo:manager ?team .
    ?moriyasu foaf:name ""Hajime Moriyasu""@en .
    ?team dbo:nickname ?nickname .
}

# Step 3: Check if there is any connection between the father and the team's nickname.
SELECT ?father ?nickname WHERE {
    # Assuming we have results from previous queries stored in variables
    VALUES (?father) { (URI_of_father_from_step_1) }
    VALUES (?team) { (URI_of_team_from_step_2) }

    ?father dbo:relatedTo ?team .
}
```",5,9,6,3,2,3,3,71,0,0,1,0,0.0,0
715,45,val,"Give me the leader of the office, that is a government agency and an organisation, of the reference to Carlos Franco Iribarnegaray and commander in Spanish Civil War and commander in Rif War.","SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/GovernmentAgency>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?v1 <http://dbpedia.org/ontology/leader> ?result . ?v0 <http://xmlns.com/foaf/0.1/name> ""Carlos Franco Iribarnegaray""@en . ?v0 <http://dbpedia.org/property/office> ?v1 . <http://dbpedia.org/resource/Spanish_Civil_War> <http://dbpedia.org/ontology/commander> ?result . <http://dbpedia.org/resource/Rif_War> <http://dbpedia.org/ontology/commander> ?result . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?office WHERE {
  ?person rdfs:label ""Carlos Franco Iribarnegaray""@en .
  ?person dbo:occupation ?occupation .
  
  # Filter for roles in the Spanish Civil War and Rif War
  ?person dbo:militaryConflict [
    a dbo:MilitaryConflict ;
    dbr:Spanish_Civil_War ;
    dbr:Rif_War
  ] .

  # Find the office he led
  ?office dbo:head ?person .
  
  # Ensure the office is both a government agency and an organization
  ?office rdf:type [
    a dbo:GovernmentAgency ;
    a dbo:Organization
  ] .
}
```",5,7,6,3,3,3,3,71,0,0,1,0,0.0,0
158,15,val,"Give me the party of Théodore Steeg and entity in the award, that is a country, of the reference to Adelbert Cronkhite.","SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. ?v0 <http://dbpedia.org/property/awards> ?v1 . ?v0 <http://xmlns.com/foaf/0.1/name> ""Adelbert Cronkhite""@en . ?result <http://dbpedia.org/ontology/country> ?v1 . <http://dbpedia.org/resource/Théodore_Steeg> <http://dbpedia.org/ontology/party> ?result . }","```sparql
SELECT ?party ?awardCountry WHERE {
  # Part 1: Get the political party of Théodore Steeg
  ?steeg dbo:name ""Théodore Steeg""@en .
  ?steeg dbo:partyAffiliation ?party .

  # Part 2: Find the award related to Adelbert Cronkhite and get its country
  OPTIONAL {
    ?cronkhite dbo:name ""Adelbert Cronkhite""@en .
    ?cronkhite dbo:award ?award .
    ?award dbo:country ?awardCountry .
  }
}
```",4,5,5,3,2,3,2,20,0,0,1,0,0.0,0
129,20,val,"Give me the professional in  and associated musical artist of Saba (rapper) and associated musical artist of the actor, that is an organisation, of Dreamville Presents: Revenge.","SELECT ?result WHERE { <http://dbpedia.org/resource/Saba_(rapper)> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?result <http://dbpedia.org/property/occupation> """"@en . ?v3 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . <http://dbpedia.org/resource/Dreamville_Presents:_Revenge> <http://dbpedia.org/property/starring> ?v3 . }","```sparql
# Query to find J. Cole as an associated musical artist with Saba
SELECT ?artist WHERE {
  wd:Q1234567 wdt:P106 wd:Q33999 . # Saba's profession (rapper)
  wd:Q33999 wdt:P463 wd:Q1234567 . # Saba is a member of Dreamville Records
  wd:Q1234567 wdt:P175 ?artist .   # J. Cole as an associated artist in Dreamville Records
}

# Query to find Michael B. Jordan's association with Dreamville Presents: Revenge
SELECT ?actor WHERE {
  wd:Q9876543 wdt:P31 wd:Q11424 .    # Dreamville Presents: Revenge is a film project
  wd:Q9876543 wdt:P161 wd:Q1234567 . # J. Cole's involvement in the project
  wd:Q9876543 wdt:P162 ?actor .      # Actor involved in the project
}

# Query to find J. Cole as an associated musical artist with Michael B. Jordan
SELECT ?artist WHERE {
  wd:Q9876543 wdt:P161 wd:Q1234567 . # Dreamville Presents: Revenge involves J. Cole
  wd:Q9876543 wdt:P162 wd:Q67891011 . # Michael B. Jordan's involvement in the project
  wd:Q67891011 wdt:P175 ?artist .     # Associated musical artist with Michael B. Jordan
}
```",4,5,5,2,3,2,3,28,0,0,1,0,0.0,0
791,46,val,"Give me the predecessor of the child of Emperor Takakura and spouse of the spouse, that is a royalty, of the reference to Emperor Takakura.","SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?result <http://dbpedia.org/ontology/successor> ?v4 . ?v4 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Emperor_Takakura> . ?v2 <http://xmlns.com/foaf/0.1/name> ""Emperor Takakura""@en . ?v1 <http://dbpedia.org/ontology/spouse> ?v2 . ?result <http://dbpedia.org/ontology/spouse> ?v1 . }","```sparql
# Step 1: Get Emperor Takakura's child
SELECT ?child WHERE {
    dbpedia:Emperor_Takakura dbo:spouse ?spouse .
    ?spouse dbo:child ?child .
}

# Step 2: Find the predecessor of that child (assuming it is an emperor)
SELECT ?predecessor WHERE {
    # Assuming we found a specific child, replace `?specificChild` with actual URI
    ?specificChild dbo:predecessorOrSuccessor ?relation .
    ?relation dbpedia-owl:successor ?predecessor .
}

# Step 3: Identify Emperor Takakura's spouse
SELECT ?spouse WHERE {
    dbpedia:Emperor_Takakura dbo:spouse ?spouse .
}

# Step 4: Find the spouse of that spouse
SELECT ?grandSpouse WHERE {
    # Assuming we found a specific spouse, replace `?specificSpouse` with actual URI
    ?specificSpouse dbo:spouse ?grandSpouse .
}

# Step 5: Ensure the final answer is royalty
SELECT ?finalResult WHERE {
    ?grandSpouse rdf:type dbpedia-owl:Monarch .
}
```

Note: The above SPARQL queries are structured to be executed sequentially, with each step's result feeding into the next. You will need to replace placeholders like `?specificChild` and `?specificSpouse` with actual URIs obtained from previous query results.",5,6,6,3,2,3,3,71,0,0,1,0,0.0,0
216,22,val,Give me the office of the mayor of Ros Bates and party of the awardee of Australian Defence Medal.,SELECT ?result WHERE { ?v3 <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/Australian_Defence_Medal> . ?v2 <http://dbpedia.org/property/office> ?result . <http://dbpedia.org/resource/Ros_Bates> <http://dbpedia.org/property/leader> ?v2 . ?v3 <http://dbpedia.org/ontology/party> ?result . },"```sparql
# Query to get the office of Ros Bates
SELECT ?office WHERE {
  wd:Q1234568 dbo:occupation ?office .
  FILTER(CONTAINS(LCASE(STR(?office)), ""mayor""))
}

# Query to find awardees of the Australian Defence Medal and their party affiliation
SELECT DISTINCT ?person ?party WHERE {
  ?award wdt:P31/wdt:P279* wd:Q1234567 ; # Q1234567 is a placeholder for the Australian Defence Medal entity
          wdt:P921 ?person .
  OPTIONAL { 
    ?person dbo:politicalParty ?party .
  }
}
```

Note: Replace `wd:Q1234568` with the actual DBpedia identifier for Ros Bates and `wd:Q1234567` with the correct identifier for the Australian Defence Medal.",4,4,5,2,2,2,3,28,0,0,2,0,0.0,0
507,41,val,"Give me the director of the movie, that is a movie and a work, with Beryl Reid and spouse of the person born as Anne Voase Coates and professional in Film director, television director.","SELECT ?result WHERE { ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Film>. ?v4 <http://dbpedia.org/ontology/director> ?result . ?v2 <http://dbpedia.org/property/birthName> ""Anne Voase Coates""@en . ?result <http://dbpedia.org/property/occupation> ""Film director, television director""@en . ?v4 <http://dbpedia.org/property/starring> <http://dbpedia.org/resource/Beryl_Reid> . ?result <http://dbpedia.org/ontology/spouse> ?v2 . }","```sparql
SELECT ?director WHERE {
  ?movie dbo:starring ?person1 .
  ?movie dbo:starring ?person2 .
  ?movie dbo:director ?director .

  ?person1 foaf:name ""Beryl Reid"" .
  ?person2 foaf:name ""Sidney Cole"" .
  
  FILTER (regex(?movie, ""film|work""))
}
```",5,7,6,2,3,3,3,71,0,0,1,0,0.0,0
267,15,val,"Give me the person born on 1953-03-01 and coach of the player, that is a soccer club, in the manager of 2020–21 Tractor S.C. season.","SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/coach> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerClub>. <http://dbpedia.org/resource/2020–21_Tractor_S.C._season> <http://dbpedia.org/ontology/manager> ?v0 . ?v0 <http://dbpedia.org/ontology/team> ?v1 . ?result <http://dbpedia.org/ontology/birthDate> ""1953-03-01""^^<http://www.w3.org/2001/XMLSchema#date> . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?manager WHERE {
    ?manager dbo:position ""coach""@en .
    ?manager dbo:birthDate ""1953-03-01""^^xsd:date .
    ?team dbo:manager ?manager ;
          rdfs:label ""Tractor S.C.""@en .
    FILTER (YEAR(?team.dbp:seasonStart) = 2020 && YEAR(?team.dbp:seasonEnd) = 2021)
}
```",4,5,5,3,2,3,2,20,0,0,1,0,0.0,0
865,55,val,"Give me the native of the residence, that is a country, of Ram Jaipal Singh Yadav and father of the child of Abu Ahmad Abdul Hafiz and father of the child, that is a politician, of Abu Ahmad Abdul Hafiz.",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/birthPlace> ?v0 . ?v3 <http://dbpedia.org/property/father> ?result . <http://dbpedia.org/resource/Ram_Jaipal_Singh_Yadav> <http://dbpedia.org/property/residence> ?v0 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v4 <http://dbpedia.org/property/father> ?result . ?v3 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Abu_Ahmad_Abdul_Hafiz> . ?v4 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Abu_Ahmad_Abdul_Hafiz> . },"```sparql
# Step 1: Find Ram Jaipal Singh Yadav's residence country
SELECT ?residenceCountry WHERE {
  ?yadav dbo:birthName ""Ram Jaipal Singh Yadav""@en .
  ?yadav dbo:residence ?residence .
  ?residence geo:hasCountry ?country .
  BIND(STR(?country) AS ?residenceCountry)
}

UNION

# Step 2: Find Abu Ahmad Abdul Hafiz's politician child
SELECT ?politicianChild WHERE {
  ?hafiz dbo:child ?child .
  ?child rdf:type dbo:Politician .
  FILTER(CONTAINS(LCASE(STR(?child)), ""abu ahmad abdul hafiz""))
}

UNION

# Step 3: Find the father of that politician child
SELECT ?father WHERE {
  ?politicianChild dbo:parent ?father .
}

UNION

# Step 4: Get the native country of that father
SELECT ?nativeCountry WHERE {
  ?father dbo:nationality ?nationality .
  ?nationality geo:hasCountry ?country .
  BIND(STR(?country) AS ?nativeCountry)
}
```",6,8,7,2,3,3,3,71,0,0,1,0,0.0,0
645,45,val,"Give me the military force of Spanish Civil War and commander in Battle of Jarama and leader of the office, that is a government agency and an organisation, of the native of Restoration (Spain).",SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/leader> ?result . ?v0 <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Restoration_(Spain)> . ?v0 <http://dbpedia.org/property/office> ?v1 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/GovernmentAgency>. <http://dbpedia.org/resource/Battle_of_Jarama> <http://dbpedia.org/ontology/commander> ?result . ?result <http://dbpedia.org/ontology/battle> <http://dbpedia.org/resource/Spanish_Civil_War> . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?militaryForce ?commander ?leader ?agency WHERE {
  # Military forces in the Spanish Civil War
  ?battle dbo:participatedInMilitaryConflict dbr:Spanish_Civil_War .
  ?battle dbo:location dbr:Battle_of_Jarama .
  
  # Commanders of these forces during the Battle of Jarama
  ?militaryForce dbo:commander ?commander .
  ?militaryForce dbo:participatedInBattle ?battle .

  # Leader of a government agency or organization from Restoration (Spain)
  ?person dbo:nationality dbr:Spain ;
          dbo:birthPlace ?place ;
          dbo:leaderOfOrganization ?agency ;
          dbo:officeHolder ?office .
  
  FILTER EXISTS { 
    ?place dbo:partOf dbr:Restoration_(Spain) .
  }
  
  # Linking the leader to a government agency or organization
  ?agency a dbo:GovernmentAgency ; 
          dbo:leader ?person .

}
```",5,7,6,3,3,3,3,71,0,0,1,0,0.0,0
987,44,val,"Give me the birth place of Dado Polumenta and birth place of the actor of All for Free and entity in the region, that is a country, of Central European Time.",SELECT ?result WHERE { <http://dbpedia.org/resource/Dado_Polumenta> <http://dbpedia.org/ontology/birthPlace> ?result . ?v0 <http://dbpedia.org/property/timeZone> <http://dbpedia.org/resource/Central_European_Time> . ?result <http://dbpedia.org/ontology/country> ?v0 . <http://dbpedia.org/resource/All_for_Free> <http://dbpedia.org/property/starring> ?v4 . ?v4 <http://dbpedia.org/ontology/birthPlace> ?result . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. },"```sparql
# Query 1: Birthplace of Dado Povolny
SELECT ?birthPlace WHERE {
  dbpedia:Dado_Povolný dbo:birthPlace ?birthPlace .
}

# Query 2: Actor(s) of ""All for Free"" and their birthplaces
SELECT DISTINCT ?actor ?birthPlace WHERE {
  { 
    dbpedia:""All_for_Free_(film)"" dbo:starring ?actor .
    ?actor dbo:birthPlace ?birthPlace .
  }
  UNION
  {
    dbpedia:""All_for_Free_(film)"" dbo:director ?director .
    ?director dbo:birthPlace ?birthPlace .
  }
}

# Query 3: Country in the Central European Time region
SELECT DISTINCT ?country WHERE {
  ?country a dbo:Country ;
           dbo:timeZone ?tz .
  FILTER(CONTAINS(str(?tz), ""Central European Time""))
}
```",5,6,6,2,3,3,3,71,0,0,1,0,0.0,0
216,51,val,"Give me the player in the coach, that is a soccer player and a sports manager and a soccer manager, of Bosnia and Herzegovina national under-18 football team and team of the person born, that is a sports manager and a soccer manager and a soccer player, on the death of Pavel Vezhinov.",SELECT ?result WHERE { ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsManager>. ?result <http://dbpedia.org/ontology/coach> ?v2 . ?v4 <http://dbpedia.org/ontology/team> ?result . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerManager>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerManager>. ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerPlayer>. ?v2 <http://dbpedia.org/ontology/birthDate> ?v1 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerPlayer>. <http://dbpedia.org/resource/Pavel_Vezhinov> <http://dbpedia.org/ontology/deathDate> ?v1 . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsManager>. <http://dbpedia.org/resource/Bosnia_and_Herzegovina_national_under-18_football_team> <http://dbpedia.org/ontology/coach> ?v4 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?player WHERE {
  ?player a dbo:SoccerPlayer .
  ?player a dbo:SportsManager .
  ?player a dbo:SoccerManager .

  ?coachship dbo:team dbr:Bosnia_and_Herzegovina_national_under-18_football_team ;
             dbo:manager ?player .

  ?person dbp:dateOfBirth ?birthDate .
  
  FILTER (?birthDate = ""2011-03-05""^^xsd:date)

  BIND(?player AS ?person)
}
```",5,11,6,3,2,3,3,71,0,0,1,0,0.0,0
773,42,val,"Give me the parent of Carloman of Bavaria and spouse of the father of Charles the Fat and parent of the child, that is a royalty, of Louis the German.",SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v1 <http://dbpedia.org/ontology/parent> ?result . ?v2 <http://dbpedia.org/ontology/spouse> ?result . ?result <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Carloman_of_Bavaria> . <http://dbpedia.org/resource/Charles_the_Fat> <http://dbpedia.org/property/father> ?v2 . ?v1 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Louis_the_German> . },"```sparql
SELECT DISTINCT ?parent ?spouse WHERE {
  # Step 1: Find Carloman of Bavaria's parent
  ?carloman dbo:father ?parent .
  FILTER(STR(?carloman) = ""Carloman_of_Bavaria"") .

  # Step 2: Check if this parent is also the father of Charles the Fat and find his spouse
  OPTIONAL { ?parent dbo:child ?charlesFat . }
  FILTER(EXISTS { ?parent dbo:child ?charlesFat } && STR(?charlesFat) = ""Charles_the_Fat"") .
  
  # Find the spouse of this parent
  ?spouse dbo:spouse ?parent .

  # Step 3: Identify a royal child of Louis the German
  ?louisGerman dbo:child ?royalChild .
  FILTER(STR(?louisGerman) = ""Louis_the_German"") .
  
  # Ensure the child is royalty
  ?royalChild rdf:type dbo:Monarch .

  # Step 4: Find the common parent
  OPTIONAL { ?parent dbo:child ?royalChild }
}
```",5,6,6,2,3,3,3,71,0,0,1,0,0.0,0
573,45,val,"Give me the person decedent at Quincy, Massachusetts and person decedent at Massachusetts and parent of the author, that is a politician and an office holder, of the work of John Quincy Adams.","SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v1 <http://dbpedia.org/ontology/parent> ?result . ?v0 <http://dbpedia.org/property/author> ?v1 . ?result <http://dbpedia.org/ontology/deathPlace> <http://dbpedia.org/resource/Massachusetts> . ?result <http://dbpedia.org/ontology/deathPlace> <http://dbpedia.org/resource/Quincy,_Massachusetts> . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v0 <http://dbpedia.org/property/author> <http://dbpedia.org/resource/John_Quincy_Adams> . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?personDecedentAtQuincy ?parentOfAuthor
WHERE {
  # John Quincy Adams decedent at Quincy, Massachusetts
  dbr:John_Quincy_Adams dbo:deathPlace dbr:Quincy,_Massachusetts .
  
  # Parent of John Quincy Adams who is a politician and office holder
  dbr:John_Quincy_Adams dbo:father ?parentOfAuthor .
  ?parentOfAuthor rdf:type dbo:Politician ;
                  dbo:officeHolder true .

  # Ensure the parent is also linked to Massachusetts
  OPTIONAL { ?parentOfAuthor dbo:nationality dbr:United_States . }
}
```",5,7,6,3,3,3,3,71,0,0,2,0,0.0,0
865,46,val,"Give me the father of the child, that is a politician, of Abu Ahmad Abdul Hafiz and native of the residence, that is a country, of the person decedent at Patna.",SELECT ?result WHERE { ?v3 <http://dbpedia.org/property/father> ?result . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v3 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Abu_Ahmad_Abdul_Hafiz> . ?v1 <http://dbpedia.org/ontology/deathPlace> <http://dbpedia.org/resource/Patna> . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. ?v1 <http://dbpedia.org/property/residence> ?v0 . ?result <http://dbpedia.org/ontology/birthPlace> ?v0 . },"```sparql
# Step 1: Find Abu Ahmad Abdul Hafiz's child who is a politician
SELECT ?child WHERE {
    ?person rdfs:label ""Abu Ahmad Abdul Hafiz""@en .
    ?person dbo:spouse ?spouse .
    ?spouse dbo:child ?child .
    ?child dbo:occupation ?occupation .
    FILTER(CONTAINS(LCASE(?occupation), ""politician""))
}

# Step 2: Find the person who died in Patna and their country of residence
SELECT ?country WHERE {
    ?person dbo:deathPlace dbr:Patna ;
            dbo:residenceCountry ?country .
}

# Step 3: Use the identified politician's details to find their father
SELECT ?father WHERE {
    # Assuming we have found a child who is a politician in step 1, let's say it's ?politicianChild
    ?politicianChild dbo:parent ?father .
}
```

Note: The above SPARQL query assumes that the necessary data exists and is correctly linked in DBpedia. You may need to adjust property paths or labels based on actual data availability.",5,7,6,3,2,3,3,71,0,0,1,0,0.0,0
926,53,val,"Give me the successor of Mustafa III and father of the father of the spouse of Neşerek Kadın and child of the father, that is a royalty, of Mustafa III.",SELECT ?result WHERE { <http://dbpedia.org/resource/Mustafa_III> <http://dbpedia.org/ontology/successor> ?result . ?v0 <http://dbpedia.org/ontology/child> ?result . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. <http://dbpedia.org/resource/Mustafa_III> <http://dbpedia.org/property/father> ?v0 . ?v3 <http://dbpedia.org/property/father> ?v1 . ?v1 <http://dbpedia.org/property/father> ?result . <http://dbpedia.org/resource/Neşerek_Kadın> <http://dbpedia.org/ontology/spouse> ?v3 . },"```sparql
SELECT ?successor ?grandfather WHERE {
  # Step 1: Find the successor of Mustafa III
  dbpedia:Mustafa_III dbo:succeededBy ?successor .

  # Step 2: Identify Neşerek Kadın's spouse
  dbpedia:Neşerek_Kadın dbo:spouse ?spouse .

  # Step 3: Determine the father of Neşerek Kadın's spouse
  ?spouse dbo:father ?fatherOfSpouse .

  # Step 4: Find Mustafa III's child who is royalty and has the same father as identified in step 3
  dbpedia:Mustafa_III dbo:child ?royalChild .
  ?royalChild dbo:father ?fatherOfSpouse .

  # Step 5: Identify the grandfather (father of the father) who is a royal figure related to Mustafa III
  ?fatherOfSpouse dbo:father ?grandfather .
}
```",6,7,7,3,3,3,3,71,0,0,1,0,0.0,0
433,49,val,"Give me the professional in the profession of the writer of Slowhand at 70 – Live at the Royal Albert Hall and associated musical artist of the person born, that is a musical artist and an artist, as Paul Laurence Dunbar Chambers Jr..","SELECT ?result WHERE { ?result <http://dbpedia.org/property/occupation> ?v1 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. <http://dbpedia.org/resource/Slowhand_at_70_–_Live_at_the_Royal_Albert_Hall> <http://dbpedia.org/property/writer> ?v0 . ?v0 <http://dbpedia.org/property/occupation> ?v1 . ?v2 <http://dbpedia.org/property/birthName> ""Paul Laurence Dunbar Chambers Jr.""@en . ?v2 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. }","```sparql
SELECT ?person WHERE {
  # Find the person who wrote ""Slowhand at 70 – Live at the Royal Albert Hall""
  ?album dcterms:creator ?writer .
  ?album dct:title ""Slowhand at 70 – Live at the Royal Albert Hall"" .

  # Ensure the writer is a musician
  ?writer dbo:occupation dbc:Musicians .

  # Find Jack Bruce and his association with the person
  ?jackBruce foaf:name ""Jack Bruce""@en .
  ?association dbo:associatedWith ?person .
  ?association dbo:associatedWith ?jackBruce .

  # Ensure the person is both a musical artist and an artist
  ?person dbo:occupation dbc:Musicians ;
          dbo:occupation dbc:Artists .
  
  FILTER (?writer = ?person)
}
```",5,7,6,3,2,3,3,71,0,0,16,0,0.0,0
216,48,val,"Give me the team of the person born, that is a sports manager and a soccer manager and a soccer player, on 1983-12-20 and player in the coach of the reference, that is an organisation and a soccer club, to Croatia U21.","SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/birthDate> ""1983-12-20""^^<http://www.w3.org/2001/XMLSchema#date> . ?v3 <http://dbpedia.org/ontology/coach> ?v2 . ?result <http://dbpedia.org/ontology/coach> ?v1 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?v3 <http://xmlns.com/foaf/0.1/name> ""Croatia U21""@en . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerManager>. ?v2 <http://dbpedia.org/ontology/team> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerPlayer>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsManager>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerClub>. }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?person ?team WHERE {
  ?person a dbo:Person ;
          dbo:birthDate ""1983-12-20""^^xsd:date ;
          (dbo:occupation|dbo:profession) ?occupation .
  
  FILTER (
    EXISTS { ?occupation rdfs:label ?label1 . FILTER(CONTAINS(LCASE(?label1), ""sports manager"")) }
    || EXISTS { ?occupation rdfs:label ?label2 . FILTER(CONTAINS(LCASE(?label2), ""soccer manager"")) }
    || EXISTS { ?occupation rdfs:label ?label3 . FILTER(CONTAINS(LCASE(?label3), ""soccer player"")) }
  )
  
  OPTIONAL {
    ?person dbo:currentTeam ?team .
    ?team a dbo:SoccerClub ;
          dbo:coach ?playerCoach .
    
    FILTER (
      EXISTS { ?playerCoach dbr:Croatia_U21 }
    )
  }
}
```",5,10,6,3,2,3,3,71,0,0,1,0,0.0,0
507,52,val,"Give me the professional in Film director, television director and spouse of the person born as the birth name of Anne V. Coates and director of the movie, that is a movie and a work, with Beryl Reid.","SELECT ?result WHERE { ?result <http://dbpedia.org/property/occupation> ""Film director, television director""@en . ?v2 <http://dbpedia.org/property/birthName> ?v3 . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Film>. ?v5 <http://dbpedia.org/ontology/director> ?result . ?v5 <http://dbpedia.org/property/starring> <http://dbpedia.org/resource/Beryl_Reid> . ?result <http://dbpedia.org/ontology/spouse> ?v2 . <http://dbpedia.org/resource/Anne_V._Coates> <http://dbpedia.org/property/birthName> ?v3 . }","```sparql
# Step 1: Find Anne V. Coates' birth name
SELECT ?birthName WHERE {
  wd:Q1234568 foaf:name ""Anne V. Coates""@en .
  wd:Q1234568 schema:birthName ?birthName .
}

# Step 2: Identify her spouse
SELECT ?spouse WHERE {
  wd:Q1234568 dbo:spouse ?spouse .
}

# Step 3: Check if the spouse is a film director and television director
SELECT DISTINCT ?spouse WHERE {
  ?spouse wdt:P106 wd:Q33999 . # Film director
  ?spouse wdt:P106 wd:Q11173 .  # Television director
  FILTER(?spouse IN (?spouse))
}

# Step 4: Find a movie directed by the spouse that features Beryl Reid
SELECT DISTINCT ?movie WHERE {
  ?movie dbo:director ?spouse .
  ?movie dbo:starring ?actor .
  ?actor foaf:name ""Beryl Reid""@en .
}
```",6,8,7,3,3,3,3,71,0,0,1,0,0.0,0
892,54,val,Give me the landmark at elevation of the award of the member of E-girls and entity in the profession of Henri Crolla and entity in Province of Reggio Emilia.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/elevation> ?v4 . <http://dbpedia.org/resource/E-girls> <http://dbpedia.org/ontology/bandMember> ?v1 . ?result <http://dbpedia.org/ontology/province> <http://dbpedia.org/resource/Province_of_Reggio_Emilia> . ?v1 <http://dbpedia.org/property/awards> ?v4 . ?result <http://dbpedia.org/ontology/country> ?v2 . <http://dbpedia.org/resource/Henri_Crolla> <http://dbpedia.org/property/occupation> ?v2 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?landmark ?elevation WHERE {
  # Step 1: Identify a member of E-girls
  ?member dbo:memberOf dbr:E-girls .
  
  # Step 2: Find the award associated with this member
  ?award dbo:recipient ?member .
  
  # Step 3: Determine the elevation of the landmark associated with the award
  ?landmark dbo:associatedWith ?award ;
            dbo:elevationAboveSeaLevel ?elevation .

  # Step 4: Identify Henri Crolla's profession
  dbr:Henri_Crolla dbo:profession ?profession .
  
  # Step 5: Find an entity in the Province of Reggio Emilia
  ?entity dbo:locatedIn dbr:Province_of_Reggio_Emilia ;
          rdf:type ?type .

  # Combine elements to find the landmark at the elevation related to the award and profession/entity
  FILTER(?profession = ?type)
}
```",6,6,7,3,3,3,3,71,0,0,1,0,0.0,0
433,52,val,"Give me the associated musical artist of the person born, that is a musical artist and an artist, as the persona of Paul Chambers and professional in Musician and associated musical artist of the associated musical artist, that is an artist and a musical artist, of Scott LaFaro.","SELECT ?result WHERE { ?v2 <http://dbpedia.org/property/birthName> ?v3 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?result <http://dbpedia.org/property/occupation> ""Musician""@en . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. <http://dbpedia.org/resource/Paul_Chambers> <http://xmlns.com/foaf/0.1/givenName> ?v3 . ?v5 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . <http://dbpedia.org/resource/Scott_LaFaro> <http://dbpedia.org/ontology/associatedMusicalArtist> ?v5 . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. ?v2 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . }","```sparql
SELECT ?commonArtist WHERE {
  # Scott LaFaro's associated musical artist
  ?laFaro dbo:birthName ""Scott LaFaro""@en .
  ?laFaro dbo:associatedMusicalArtist ?artist1 .

  # Paul Chambers' associated musical artist
  ?chambers dbo:birthName ""Paul Chambers""@en .
  ?chambers dbo:associatedMusicalArtist ?artist2 .

  # Find the common artist
  FILTER (?artist1 = ?artist2)
  BIND(?artist1 AS ?commonArtist)

  # Ensure the common artist is both a musician and an artist
  ?commonArtist rdf:type dbo:Musician .
  ?commonArtist rdf:type dbo:Artist .
}
```",6,10,7,3,3,3,3,71,0,0,1,0,0.0,0
645,47,val,"Give me the commander in the force of Carlos Asensio Cabanillas and military force of the force, that is an event and a military conflict and a societal event, of the native, that is a president and a politician, of Restoration (Spain).",SELECT ?result WHERE { ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/President>. ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?result <http://dbpedia.org/ontology/battle> ?v4 . ?v0 <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Restoration_(Spain)> . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v4 <http://dbpedia.org/ontology/commander> ?v0 . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?v2 <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Carlos_Asensio_Cabanillas> . ?v2 <http://dbpedia.org/ontology/commander> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?commander WHERE {
  # Carlos Asensio Cabanillas' involvement in a military force
  ?militaryForce dbo:member dbr:Carlos_Asensio_Cabanillas .
  
  # The commander of the military force
  ?militaryForce dbo:commander ?commander .

  # The event is both a military conflict and societal event
  ?event dbo:participatedIn ?militaryForce ;
         rdf:type dbo:MilitaryConflict, dbo:SocietalEvent .

  # Alfonso XIII as the native president during Restoration (Spain)
  dbr:Alfonso_XIII_of_Spain dbo:nationality dbr:Spain ;
                            dbo:officeHolder dbr:President_of_Spain .
  
  # Linking the event to Alfonso XIII's time
  ?event dbo:date ?date .
  FILTER (?date >= ""1874-11-29""^^xsd:date && ?date <= ""1931-04-14""^^xsd:date)
}
```",5,10,6,3,2,3,3,71,0,0,23,0,0.0,0
445,43,val,Give me the death place of the awardee of the establishment of 1820-03-10 and entity in England and entity in United Kingdom.,"SELECT ?result WHERE { ?v4 <http://dbpedia.org/ontology/deathPlace> ?result . ?v0 <http://dbpedia.org/ontology/foundingDate> ""1820-03-10""^^<http://www.w3.org/2001/XMLSchema#date> . ?result <http://dbpedia.org/ontology/location> <http://dbpedia.org/resource/England> . ?result <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/United_Kingdom> . ?v4 <http://dbpedia.org/property/awards> ?v0 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?deathPlace WHERE {
  ?award dbo:foundingDate ""1820-03-10""^^xsd:date .
  ?award dbo:recipient ?person .
  
  ?person dbo:nationality dbr:United_Kingdom ;
          dbo:birthPlace ?birthPlace .

  OPTIONAL { ?person dbo:deathPlace ?deathPlace . }

  ?place1 a dbo:Place ;
          dbo:country dbr:England ;
          dbo:resident ?person .

  ?place2 a dbo:Place ;
          dbo:country dbr:United_Kingdom ;
          dbo:resident ?person .
}
```",5,5,6,3,3,3,3,71,0,0,1,0,0.0,0
456,49,val,"Give me the band of the band, that is a musical artist, of the band of Alan Doyle and spouse of the actor of Pacific Drive.",SELECT ?result WHERE { <http://dbpedia.org/resource/Alan_Doyle> <http://dbpedia.org/ontology/associatedMusicalArtist> ?v0 . ?v0 <http://dbpedia.org/ontology/associatedMusicalArtist> ?v1 . ?v2 <http://dbpedia.org/ontology/spouse> ?result . <http://dbpedia.org/resource/Pacific_Drive> <http://dbpedia.org/property/starring> ?v2 . ?v1 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. },"```sparql
# Step 1: Find Alan Doyle's Band
SELECT ?band WHERE {
  wd:Q123456 wdt:P106 wd:Q33999; # Alan Doyle is a musician
  wdt:P46 ?band. # Alan Doyle is a member of the band
}

# Step 2: Find actors in ""Pacific Drive"" and their spouses
SELECT DISTINCT ?actor ?spouse WHERE {
  ?show wdt:P31 wd:Q11424; # Pacific Drive is a TV series
        wdt:P161 ?actor. # Cast members of Pacific Drive
  OPTIONAL { ?actor wdt:P26 ?spouse. } # Spouses of the actors
}

# Step 3: Check if any spouse is a musical artist and identify their band
SELECT DISTINCT ?musicalArtist ?band WHERE {
  ?spouse wdt:P106 wd:Q33999; # The spouse is a musician
          wdt:P46 ?band. # The band of the spouse
}

# Step 4: Determine the band of that musical artist
SELECT DISTINCT ?finalBand WHERE {
  ?musicalArtist wdt:P46 ?finalBand. # Band of the musical artist
}
```

Note: Replace `wd:Q123456` with Alan Doyle's actual DBpedia QID and adjust queries based on available data in DBpedia.",5,6,6,3,2,3,3,71,0,0,1,0,0.0,0
18,19,val,"Give me the professional in the award of Ana María Sánchez de Ríos and parent of Liza Huber and alumnus of Marymount College, Tarrytown.","SELECT ?result WHERE { ?result <http://dbpedia.org/property/occupation> ?v3 . ?result <http://dbpedia.org/ontology/almaMater> <http://dbpedia.org/resource/Marymount_College,_Tarrytown> . ?result <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Liza_Huber> . <http://dbpedia.org/resource/Ana_María_Sánchez_de_Ríos> <http://dbpedia.org/property/awards> ?v3 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?person WHERE {
  ?person dbo:award dbr:Award_of_Ana_María_Sánchez_de_Ríos .
  
  OPTIONAL { 
    ?liza dbo:parent ?person .
    FILTER (str(?liza) = ""Liza_Huber"")
  }
  
  OPTIONAL {
    ?person dbo:almaMater dbr:Marymount_College,_Tarrytown .
  }

  FILTER EXISTS { ?liza dbo:parent ?person . }
  FILTER EXISTS { ?person dbo:almaMater dbr:Marymount_College,_Tarrytown . }
}
```",4,4,5,2,3,2,3,28,0,0,1,0,0.0,0
465,45,val,"Give me the spouse of Archduchess Barbara of Austria and successor of the child, that is a royalty, of the parent of Charles Orlando, Dauphin of France and successor of Ercole II d'Este, Duke of Ferrara.","SELECT ?result WHERE { <http://dbpedia.org/resource/Charles_Orlando,_Dauphin_of_France> <http://dbpedia.org/ontology/parent> ?v0 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?result <http://dbpedia.org/ontology/spouse> <http://dbpedia.org/resource/Archduchess_Barbara_of_Austria> . ?v0 <http://dbpedia.org/ontology/child> ?v1 . ?v1 <http://dbpedia.org/ontology/successor> ?result . <http://dbpedia.org/resource/Ercole_II_d'Este,_Duke_of_Ferrara> <http://dbpedia.org/ontology/successor> ?result . }","```sparql
# Step 1: Find Charles Orlando's parent
SELECT ?parent WHERE {
  wd:Q1234567 wdt:P22 ?parent .
}

# Step 2: Find successor of Ercole II d'Este, Duke of Ferrara
SELECT ?successor WHERE {
  wd:Q2345678 wdt:P136 ?successor .
}

# Step 3: Find a common child who is royalty
SELECT DISTINCT ?child WHERE {
  ?parent wdt:P40 ?child .
  ?successor wdt:P40 ?child .
  ?child wdt:P31/wdt:P279* wd:Q5 . # Ensure the child is a human (royalty)
}

# Step 4: Find spouse of Archduchess Barbara of Austria
SELECT ?spouse WHERE {
  wd:Q3456789 wdt:P26 ?spouse .
}

# Step 5: Find successor of the common royal child
SELECT DISTINCT ?successorChild WHERE {
  ?child wdt:P22 ?successorChild .
  ?successorChild wdt:P31/wdt:P279* wd:Q5 . # Ensure the successor is a human (royalty)
}

# Final query to get the spouse and successor
SELECT ?spouse ?successorChild WHERE {
  { SELECT ?spouse WHERE {
      wd:Q3456789 wdt:P26 ?spouse .
    }
  }
  UNION
  { SELECT DISTINCT ?successorChild WHERE {
      ?child wdt:P22 ?successorChild .
      ?successorChild wdt:P31/wdt:P279* wd:Q5 .
    }
  }
}
```

Note: Replace `wd:Q1234567`, `wd:Q2345678`, and `wd:Q3456789` with the actual DBpedia QIDs for Charles Orlando, Ercole II d'Este, and Archduchess Barbara of Austria respectively. These IDs need to be looked up in DBpedia.",5,6,6,3,3,3,3,71,0,0,1,0,0.0,0
773,41,val,Give me the parent of the successor of Charles the Bald and parent of Charles the Fat and spouse of the father of Charles the Fat.,SELECT ?result WHERE { ?v2 <http://dbpedia.org/ontology/spouse> ?result . ?result <http://dbpedia.org/ontology/child> ?v4 . <http://dbpedia.org/resource/Charles_the_Fat> <http://dbpedia.org/ontology/parent> ?result . <http://dbpedia.org/resource/Charles_the_Bald> <http://dbpedia.org/ontology/successor> ?v4 . <http://dbpedia.org/resource/Charles_the_Fat> <http://dbpedia.org/property/father> ?v2 . },"```sparql
# Step 1: Find the successor of Charles the Bald
SELECT ?successor WHERE {
  wd:Q1343 dbo:successor ?successor .
}

# Step 2: Find the parent of the successor of Charles the Bald
SELECT ?parent WHERE {
  ?successor dbo:child ?parent .
}

# Step 3: Find the parent of Charles the Fat
SELECT ?parent WHERE {
  wd:Q1344 dbo:child ?parent .
}

# Step 4: Identify the father of Charles the Fat
SELECT ?father WHERE {
  wd:Q1344 dbo:father ?father .
}

# Step 5: Find the spouse of the father of Charles the Fat
SELECT ?spouse WHERE {
  ?father dbo:spouse ?spouse .
}
```",5,5,6,2,3,3,3,71,0,0,1,0,0.0,0
326,7,val,"Give me the professional in Composer and person decedent at the region coded, that is a settlement, as 442/760.","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/deathPlace> ?v2 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. ?result <http://dbpedia.org/property/occupation> <http://dbpedia.org/resource/Composer> . ?v2 <http://dbpedia.org/ontology/areaCode> ""442/760"" . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT DISTINCT ?person WHERE {
  # Find composers associated with Nantes
  ?composer dbo:nationality dbr:France ;
            dbo:birthPlace dbr:Nantes ;
            a dbo:Composer .
  
  # Find people who were decedents in Nantes
  ?decedent dbo:deathPlace dbr:Nantes ;
            a dbo:Person .

  # Combine criteria to find individuals meeting both conditions
  FILTER (?composer = ?decedent)
  BIND(?composer AS ?person)
}
```",3,4,4,2,2,2,2,9,0,0,6,0,0.0,0
341,7,val,Give me the band member of the awardee of List of awards and nominations received by Beyoncé and writer of In Love & War (Amerie album).,SELECT ?result WHERE { <http://dbpedia.org/resource/In_Love_&_War_(Amerie_album)> <http://dbpedia.org/property/writer> ?result . ?result <http://dbpedia.org/ontology/associatedMusicalArtist> ?v2 . ?v2 <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/List_of_awards_and_nominations_received_by_Beyoncé> . },"```sparql
# Step 1: Get awards received by Beyoncé
SELECT ?award WHERE {
  wd:Q134064 dbp:awardsReceived ?award .
}

# Step 2: Identify a specific awardee (assuming we find an award related to a band)
SELECT DISTINCT ?bandMember WHERE {
  ?award dbo:recipient ?entity .
  ?entity foaf:name ?name .
  FILTER regex(?name, ""Beyoncé"", ""i"") .
  
  # Assuming the band member is part of the same entity
  OPTIONAL { ?entity dbo:member ?bandMember . }
}

# Step 3: Find writer(s) of Amerie's album ""In Love & War""
SELECT DISTINCT ?writer WHERE {
  wd:Q2106782 dbo:album ?album .
  ?album foaf:name ""In Love & War"" .
  ?album dbo:composer ?writer .
}

# Step 4: Check for common band member
SELECT DISTINCT ?commonMember WHERE {
  # From Beyoncé's award recipient
  ?award dbo:recipient ?entity1 .
  ?entity1 dbo:member ?bandMember1 .

  # From Amerie's album writer
  wd:Q2106782 dbo:album ?album .
  ?album foaf:name ""In Love & War"" .
  ?album dbo:composer ?writer .
  
  # Assuming the writer is also a band member in another entity
  ?writer dbo:member ?bandMember2 .

  # Check for commonality
  FILTER (?bandMember1 = ?bandMember2)
  BIND(?bandMember1 AS ?commonMember)
}
```",3,3,4,2,2,2,2,9,0,0,1,0,0.0,0
582,49,val,"Give me the reference to the residence of Hirotaka Sugawara and figure known as the nickname of the team, that is an organisation, of Hajime Moriyasu.",SELECT ?result WHERE { ?v0 <http://dbpedia.org/ontology/coach> <http://dbpedia.org/resource/Hajime_Moriyasu> . ?v0 <http://dbpedia.org/property/nickname> ?v1 . <http://dbpedia.org/resource/Hirotaka_Sugawara> <http://dbpedia.org/property/residence> ?v2 . ?result <http://dbpedia.org/property/nickname> ?v1 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?result <http://xmlns.com/foaf/0.1/name> ?v2 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?sugawaraResidence ?teamNickname WHERE {
  # Find Hirotaka Sugawara's residence
  OPTIONAL { 
    dbr:Hirotaka_Sugawara dbo:residence ?sugawaraResidence .
  }
  
  # Find the nickname of the Japan national football team under Hajime Moriyasu
  OPTIONAL {
    dbr:Hajime_Moriyasu dbo:team dbr:Japan_national_football_team ;
                        dbo:nickname ?teamNickname .
  }
}
```",5,6,6,3,2,3,3,71,0,0,1,0,0.0,0
433,48,val,"Give me the associated musical artist of the person born, that is a musical artist and an artist, as the persona of Paul Chambers and professional in the profession of Bob Marley.",SELECT ?result WHERE { ?v2 <http://dbpedia.org/property/birthName> ?v3 . ?result <http://dbpedia.org/property/occupation> ?v1 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. <http://dbpedia.org/resource/Paul_Chambers> <http://xmlns.com/foaf/0.1/givenName> ?v3 . <http://dbpedia.org/resource/Bob_Marley> <http://dbpedia.org/property/occupation> ?v1 . ?v2 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?person WHERE {
  ?person dbo:birthPlace ?place .
  ?person a dbo:MusicArtist .
  ?person dbo:profession dbr:Musical_artist .
  FILTER EXISTS { ?person dbo:associatedBand dbr:The_Police } # Sting's band
}
```",5,7,6,3,2,3,3,71,0,0,16,0,0.0,0
892,43,val,Give me the entity in Italy and entity in Province of Reggio Emilia and landmark at elevation of the award of the member of E-girls.,SELECT ?result WHERE { ?v1 <http://dbpedia.org/property/awards> ?v3 . ?result <http://dbpedia.org/ontology/elevation> ?v3 . ?result <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Italy> . ?result <http://dbpedia.org/ontology/province> <http://dbpedia.org/resource/Province_of_Reggio_Emilia> . <http://dbpedia.org/resource/E-girls> <http://dbpedia.org/ontology/bandMember> ?v1 . },"```sparql
# Step 1: Identify a member of E-girls and their award
SELECT ?member ?award WHERE {
  ?member dbo:memberOf dbr:E-girls .
  ?member dbo:awardReceived ?award .
}

# Assuming we have identified the member and their award, let's say the elevation is X meters

# Step 2: Find a landmark in Italy at that elevation
SELECT ?landmark WHERE {
  ?landmark a dbo:Lighthouse ;
            dbo:elevationAboveSeaLevel ?elevation .
  FILTER (?elevation = X) # Replace X with the actual elevation value found from the award
}

# Step 3: Find an entity in Province of Reggio Emilia
SELECT ?entity WHERE {
  ?entity dbo:location dbr:Province_of_Reggio_Emilia ;
          a ?type .
}
```

Note: The above SPARQL queries are structured to be executed sequentially. You will need to replace `X` with the actual elevation value obtained from the award associated with the E-girls member.",5,5,6,3,3,3,3,71,0,0,1,0,0.0,0
47,45,val,"Give me the office of the awardee of the entity, that is an award, in India and office of Suvendu Adhikari and office of Bidesh Ranjan Bose.",SELECT ?result WHERE { ?v1 <http://dbpedia.org/property/office> ?result . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Award>. ?v1 <http://dbpedia.org/property/awards> ?v0 . <http://dbpedia.org/resource/Suvendu_Adhikari> <http://dbpedia.org/property/office> ?result . <http://dbpedia.org/resource/Bidesh_Ranjan_Bose> <http://dbpedia.org/property/office> ?result . ?v0 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/India> . },"```sparql
# Query for an award given in India and its awardee's office
SELECT ?award ?awardee ?office WHERE {
  ?award dbo:country dbr/India .
  ?award dbo:recipient ?awardee .
  ?awardee dbo:office ?office .
}

UNION

# Query for Suvendu Adhikari's office
SELECT ?person ?office WHERE {
  ?person foaf:name ""Suvendu Adhikari""@en .
  ?person dbo:office ?office .
}

UNION

# Query for Bidesh Ranjan Bose's office
SELECT ?person ?office WHERE {
  ?person foaf:name ""Bidesh Ranjan Bose""@en .
  ?person dbo:office ?office .
}
```",5,6,6,3,3,3,3,71,0,0,1,0,0.0,0
582,55,val,"Give me the figure known as the nickname of Japan national football team and player in the father, that is an athlete and a soccer manager and a sports manager, of Masami Nagasawa and reference to the residence of Hirotaka Sugawara.",SELECT ?result WHERE { ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsManager>. <http://dbpedia.org/resource/Masami_Nagasawa> <http://dbpedia.org/property/father> ?v5 . ?result <http://dbpedia.org/property/nickname> ?v2 . ?v5 <http://dbpedia.org/ontology/team> ?result . <http://dbpedia.org/resource/Japan_national_football_team> <http://dbpedia.org/property/nickname> ?v2 . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Athlete>. ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerManager>. ?result <http://xmlns.com/foaf/0.1/name> ?v3 . <http://dbpedia.org/resource/Hirotaka_Sugawara> <http://dbpedia.org/property/residence> ?v3 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?nickname ?player ?father ?residence WHERE {
  # Step 1: Find the nickname of Japan national football team
  ?team dbo:nickname ?nickname .
  FILTER (str(?team) = ""Japan_National_Football_Team"")

  # Step 2: Identify a player whose father is an athlete and also works as a soccer manager and sports manager
  ?player dbo:father ?father .
  ?father rdf:type dbo:Athlete ;
          dbo:occupation dbr:Soccer_Manager ;
          dbo:occupation dbr:Sports_Manager .

  # Step 3: Link this player to Masami Nagasawa
  ?nagasawa dbo:spouse ?player .
  FILTER (str(?nagasawa) = ""Masami_Nagasawa"")

  # Step 4: Find Hirotaka Sugawara's residence
  dbr:Hirotaka_Sugawara dbo:residenceLocation ?residence .
}
```",6,9,7,2,3,3,3,71,0,0,1,0,0.0,0
933,52,val,"Give me the band of the band of the band, that is an artist and a musical artist, of The Ramong Sound and reference to the birth name of Alan Warner (musician) and band of The Ramong Sound.",SELECT ?result WHERE { ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. <http://dbpedia.org/resource/Alan_Warner_(musician)> <http://dbpedia.org/property/birthName> ?v4 . <http://dbpedia.org/resource/The_Ramong_Sound> <http://dbpedia.org/ontology/associatedMusicalArtist> ?v3 . ?result <http://xmlns.com/foaf/0.1/name> ?v4 . ?v3 <http://dbpedia.org/ontology/associatedMusicalArtist> ?v1 . ?v1 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . <http://dbpedia.org/resource/The_Ramong_Sound> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?band WHERE {
  # The Rolling Stones
  VALUES ?rollingStones { dbr:The_Rolling_Stones }
  
  # Find a band associated with The Rolling Stones
  ?member dbo:memberOf ?rollingStones .
  ?member dbo:memberOf ?associatedBand .

  # Ensure the entity is both an artist and a musical artist
  ?associatedBand rdf:type dbo:MusicalArtist ;
                 dbo:genre dbr:Rock_music .

  # Alan Warner's birth name and band association
  VALUES ?alanWarner { dbr:Alan_Warner_(musician) }
  ?alanWarner dbo:birthName ?birthName .
  ?alanWarner dbo:memberOf ?alanBand .

  # Find the final connection
  ?associatedBand = ?alanBand .
}
```",6,8,7,3,3,3,3,71,0,0,1,0,0.0,0
926,41,val,Give me the successor of the child of Ahmed III and child of Ahmed III and father of the father of Abdulaziz.,SELECT ?result WHERE { <http://dbpedia.org/resource/Abdulaziz> <http://dbpedia.org/property/father> ?v2 . ?v4 <http://dbpedia.org/ontology/successor> ?result . ?v4 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Ahmed_III> . <http://dbpedia.org/resource/Ahmed_III> <http://dbpedia.org/ontology/child> ?result . ?v2 <http://dbpedia.org/property/father> ?result . },"```sparql
# Find Ahmed III's child (Mahmud I)
SELECT ?child WHERE {
  wd:Q1234 wdt:P40 ?child .
}

# Find the successor of Mahmud I (Abdul Hamid I)
SELECT ?successor WHERE {
  ?mahmud1 wdt:P136 ?abdulhamid1 .
  ?mahmud1 wdt:P39 wd:Q1234 . # Ahmed III
}

# Find Abdulaziz's father (Abdülmecid I) and his father (Mahmud II)
SELECT ?abdulmecid, ?mahmud2 WHERE {
  wd:Q12345 wdt:P22 ?abdulmecid .
  ?abdulmecid wdt:P22 ?mahmud2 .
}

# Find the successor of Mahmud II (Abdülaziz)
SELECT ?successor WHERE {
  ?mahmud2 wdt:P136 ?abdulaziz .
}
```",5,5,6,2,3,3,3,71,0,0,1,0,0.0,0
976,43,val,"Give me the office of the mayor, that is a politician and an office holder and Turkish, of the reference, that is an organisation and a political party and Turkish, to Millet İttifakı and office of Mustafa Şentop and office of Naci Bostancı.","SELECT ?result WHERE { ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/PoliticalParty>. <http://dbpedia.org/resource/Naci_Bostancı> <http://dbpedia.org/property/office> ?result . ?v3 <http://dbpedia.org/property/office> ?result . ?v1 <http://xmlns.com/foaf/0.1/name> ""Millet İttifakı""@en . <http://dbpedia.org/resource/Mustafa_Şentop> <http://dbpedia.org/property/office> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?v1 <http://dbpedia.org/property/leader> ?v3 . ?v1 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Turkey>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v3 <http://dbpedia.org/ontology/nationality> <http://dbpedia.org/resource/Turkey>. }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?officeOfMayor ?referenceOrganization
WHERE {
  # Office of Mustafa Şentop
  dbr:Mustafa_Şentop dbo:positionHeld dbr:Speaker_of_the_Grand_National_Assembly_of_Turkey .
  
  # Office of Naci Bostancı
  dbr:Naci_Bostancı dbo:positionHeld ?officeOfMayor .

  # Millet İttifakı as a political alliance
  dbr:Millet_İttifakı a dbo:PoliticalAlliance ;
                     dbo:country dbr:Turkey .

  # Find reference organization related to Millet İttifakı and is a political party
  ?referenceOrganization dbo:memberOf dbr:Millet_İttifakı ;
                         a dbo:PoliticalParty ;
                         dbo:country dbr:Turkey .
}
```",5,11,6,3,3,3,3,71,0,0,1,0,0.0,0
326,15,val,"Give me the person decedent at France and resident of the birthplace, that is a state and British, of the professional in Writer.","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/deathPlace> <http://dbpedia.org/resource/France> . ?v1 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/United_Kingdom>. ?v0 <http://dbpedia.org/ontology/birthPlace> ?v1 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/AdministrativeRegion>. ?v0 <http://dbpedia.org/property/occupation> ""Writer""@en . ?result <http://dbpedia.org/property/residence> ?v1 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?decedent WHERE {
  ?writer rdf:type dbo:Writer ;
          dbo:nationality dbr:United_Kingdom ;
          dbo:birthPlace ?birthplace .
  
  FILTER EXISTS { ?birthplace dbp:country ?state . }
  
  ?decedent dbo:deathPlace dbr:France ;
            dbo:residence ?birthplace .

}
```",4,6,5,3,2,3,2,20,0,0,1,0,0.0,0
606,17,val,"Give me the figure known as Barb City and birthplace of the alumnus of the figure known, that is a university and a sports league and an educational institution, as Penn Quakers.","SELECT ?result WHERE { ?v3 <http://dbpedia.org/ontology/birthPlace> ?result . ?v0 <http://dbpedia.org/property/nickname> <http://dbpedia.org/resource/Penn_Quakers> . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/University>. ?v3 <http://dbpedia.org/ontology/almaMater> ?v0 . ?result <http://dbpedia.org/property/nickname> ""Barb City""@en . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/EducationalInstitution>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsLeague>. }","```sparql
SELECT ?birthPlace WHERE {
  wd:Q1056 wdt:P19 ?birthPlace .
}
```",4,7,5,3,2,3,2,20,0,0,1,0,0.0,0
445,44,val,Give me the entity in the award of George H. Cameron and death place of the awardee of Royal Astronomical Society and entity in England.,SELECT ?result WHERE { <http://dbpedia.org/resource/George_H._Cameron> <http://dbpedia.org/property/awards> ?v2 . ?v4 <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/Royal_Astronomical_Society> . ?result <http://dbpedia.org/ontology/country> ?v2 . ?v4 <http://dbpedia.org/ontology/deathPlace> ?result . ?result <http://dbpedia.org/ontology/location> <http://dbpedia.org/resource/England> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?award ?awardee ?deathPlace ?entityInEngland
WHERE {
  # Find the award associated with George H. Cameron
  ?person dbo:name ""George H. Cameron""@en .
  ?person dbo:honoraryTitle ?award .

  # Find the awardee of this award from the Royal Astronomical Society and their death place
  ?awardee dbo:award ?award ;
          dbo:memberOf dbr:Royal_Astronomical_Society ;
          dbo:deathPlace ?deathPlace .

  # Identify an entity in England
  ?entityInEngland a dbo:Place ;
                   dbo:country dbr:United_Kingdom ;
                   rdfs:label ?label .
}
```",5,5,6,2,3,3,3,71,0,0,1,0,0.0,0
865,47,val,"Give me the father of the child, that is a politician, of the spouse of Syeda Shahar Banu and native of the residence, that is a country, of Ram Jaipal Singh Yadav.",SELECT ?result WHERE { <http://dbpedia.org/resource/Ram_Jaipal_Singh_Yadav> <http://dbpedia.org/property/residence> ?v0 . <http://dbpedia.org/resource/Syeda_Shahar_Banu> <http://dbpedia.org/ontology/spouse> ?v2 . ?result <http://dbpedia.org/ontology/birthPlace> ?v0 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. ?v3 <http://dbpedia.org/property/father> ?result . ?v3 <http://dbpedia.org/property/father> ?v2 . },"```sparql
SELECT ?politicianFather WHERE {
  # Step 1: Find Syeda Shahar Banu's spouse
  ?spouse dbo:spouse dbpedia:Syeda_Sharbanoo .
  
  # Step 2: Identify their children who are politicians
  ?child dbo:parent ?spouse ;
         dbo:occupation dbc:Politician .
  
  # Step 3: Find Ram Jaipal Singh Yadav's residence country
  ?ramResidence dbo:nationality ?countryResidence .
  FILTER(?ramResidence = dbpedia:Ram_Jaipal_Singh_Yadav)
  
  # Step 4: Ensure the politician is native to the same country as Ram Jaipal Singh Yadav's residence
  ?child dbo:nationality ?countryResidence .
  
  # Step 5: Find the father of this child (politician)
  ?spouse dbo:parent ?politicianFather .
}
```",5,7,6,3,2,3,3,71,0,0,1,0,0.0,0
166,15,val,"Give me the resting place of the military force of the force, that is an event and a societal event and a military conflict, of Manuel Hedilla and entity in Spain.",SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/restingPlace> ?result . ?v0 <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Manuel_Hedilla> . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?result <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Spain> . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?v1 <http://dbpedia.org/ontology/battle> ?v0 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?burialPlace WHERE {
  dbr:Manuel_Hedilla dbo:placeOfBurial ?burialPlace .
}
```",4,7,5,3,2,3,2,20,0,0,4,0,0.0,0
433,41,val,"Give me the associated musical artist of the associated musical artist, that is an artist and a musical artist, of Scott LaFaro and associated musical artist of the person born, that is a musical artist and an artist, as Paul Laurence Dunbar Chambers Jr. and professional in Musician.","SELECT ?result WHERE { ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. <http://dbpedia.org/resource/Scott_LaFaro> <http://dbpedia.org/ontology/associatedMusicalArtist> ?v4 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?v2 <http://dbpedia.org/property/birthName> ""Paul Laurence Dunbar Chambers Jr.""@en . ?v2 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?result <http://dbpedia.org/property/occupation> ""Musician""@en . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. ?v4 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . }","```sparql
# Query to find Bill Evans' associated musical artist who is an artist and a musician
SELECT ?artist WHERE {
  wd:Q12345 wdt:P106 wd:Q33999 . # Scott LaFaro's occupation as a musician
  wd:Q12345 wdt:P175 ?billEvans . # Scott LaFaro's associated musical artist Bill Evans
  ?billEvans wdt:P106 wd:Q33999 . # Bill Evans' occupation as a musician
  ?billEvans wdt:P800 ?artist .   # Associated musical artist of Bill Evans
  ?artist wdt:P106 wd:Q33999 .    # Artist is also a musician
}

UNION

# Query to find Ron Carter's associated musical artist who is an artist and a musician
SELECT ?artist WHERE {
  wd:Q12346 wdt:P569 ?birthDate . # Paul Laurence Dunbar Chambers Jr.'s birth date
  wd:Q12346 wdt:P106 wd:Q33999 .   # His occupation as a musician
  wd:Q12346 wdt:P800 ?ronCarter .  # Ron Carter's DBpedia ID
  ?ronCarter wdt:P106 wd:Q33999 .  # Ron Carter's occupation as a musician
  ?ronCarter wdt:P800 ?artist .    # Associated musical artist of Ron Carter
  ?artist wdt:P106 wd:Q33999 .     # Artist is also a musician
}

# Find the common associated musical artist from both queries
SELECT DISTINCT ?commonArtist WHERE {
  VALUES ?artist1 { ?artist } .
  ?artist1 rdfs:label ""Miles Davis""@en . # Assuming Miles Davis as the common artist
}
```",5,9,6,2,3,3,3,71,0,0,1,0,0.0,0
826,53,val,"Give me the predecessor of the parent of Prince Friedrich of Hesse and by Rhine and spouse of the child of the father of Anna Magdalena Appel and successor of Louis II, Grand Duke of Hesse.","SELECT ?result WHERE { <http://dbpedia.org/resource/Prince_Friedrich_of_Hesse_and_by_Rhine> <http://dbpedia.org/ontology/parent> ?v1 . <http://dbpedia.org/resource/Louis_II,_Grand_Duke_of_Hesse> <http://dbpedia.org/ontology/successor> ?result . ?result <http://dbpedia.org/ontology/successor> ?v1 . ?v2 <http://dbpedia.org/property/father> ?v3 . <http://dbpedia.org/resource/Anna_Magdalena_Appel> <http://dbpedia.org/property/father> ?v3 . ?v2 <http://dbpedia.org/ontology/spouse> ?result . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?predecessor WHERE {
  # Step 1: Find Prince Friedrich of Hesse and by Rhine's parent
  ?prince rdfs:label ""Prince Friedrich of Hesse and by Rhine""@en.
  ?parent dbo:child ?prince.

  # Step 2: Find Anna Magdalena Appel's father
  ?anna dbr:Anna_Magdalena_Appel dbo:father ?father.

  # Step 3: Find a child of this father and their spouse
  ?child dbo:parent ?father.
  ?spouse dbo:sibling ?child.

  # Step 4: Identify Louis II, Grand Duke of Hesse's successor
  ?louis rdfs:label ""Louis II, Grand Duke of Hesse""@en.
  ?successor dbo:predecessorOrMonarch ?louis.

  # Combine relationships to find the entity we are interested in
  ?combinedEntity rdf:type dbo:Person;
                  (dbo:child|dbo:sibling) ?parent,
                  (dbo:spouse|dbo:successor) ?spouse.

  # Find the predecessor of this combined entity
  ?predecessor dbo:successorOrMonarch ?combinedEntity.
}
```",6,6,7,3,3,3,3,71,0,0,1,0,0.0,0
917,47,val,"Give me the child of the father of the spouse, that is a royalty, of Leleiohoku I and parent of the child, that is a royalty, of Kamehameha IV.",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/child> ?v1 . ?v0 <http://dbpedia.org/ontology/spouse> <http://dbpedia.org/resource/Leleiohoku_I> . ?v0 <http://dbpedia.org/property/father> ?v3 . ?result <http://dbpedia.org/ontology/parent> ?v3 . ?v1 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Kamehameha_IV> . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?child WHERE {
  # Leleiohoku I's spouse
  dbr:Leleiohoku_I dbo:spouse dbr:Victoria_Kamāmalu_of_Hawaii .
  
  # Father of Victoria Kamāmalu (Kamehameha II)
  dbr:Victoria_Kamāmalu_of_Hawaii dbo:father dbr:Kamehameha_II .

  # Child of Kamehameha II who is royalty
  ?child dbo:parent dbr:Kamehameha_II .
  ?child a dbo:Monarch .

  # Children of Kamehameha IV who are royalty
  ?royaltyChild dbo:parent dbr:Kamehameha_IV .
  ?royaltyChild a dbo:Monarch .

  # Parent of the royalty child of Kamehameha IV
  FILTER (?child = ?royaltyChild)
}
```",5,7,6,3,2,3,3,71,0,0,1,0,0.0,0
456,51,val,"Give me the band of the band, that is a musical artist, of the band of Alan Doyle and professional in the alter ego of The Shadow.",SELECT ?result WHERE { ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?v1 <http://dbpedia.org/ontology/associatedMusicalArtist> ?v2 . <http://dbpedia.org/resource/Alan_Doyle> <http://dbpedia.org/ontology/associatedMusicalArtist> ?v1 . ?v2 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?result <http://dbpedia.org/property/occupation> ?v4 . <http://dbpedia.org/resource/The_Shadow> <http://dbpedia.org/property/alterEgo> ?v4 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?band ?artist WHERE {
  # Find bands associated with Alan Doyle
  ?person dbo:memberOfBand dbr:Great_Big_Sea .
  FILTER (str(?person) = ""Alan Doyle"") .

  OPTIONAL { 
    ?person dbo:memberOfBand ?otherBand .
    ?otherBand dbo:bandMember ?artist .
    FILTER NOT EXISTS {
      ?otherBand rdfs:label ""Great Big Sea""@en
    }
  }

  # Find musical artists associated with those bands
  ?otherBand dbo:musicalArtist ?artist .
}
```",5,6,6,3,2,3,3,71,0,0,1,0,0.0,0
573,41,val,"Give me the person decedent at the residence, that is a settlement, of William J. Phelan and parent of John Quincy Adams and person decedent at the administration, that is a region, of Charlie Baker.","SELECT ?result WHERE { <http://dbpedia.org/resource/John_Quincy_Adams> <http://dbpedia.org/ontology/parent> ?result . ?result <http://dbpedia.org/ontology/deathPlace> ?v2 . <http://dbpedia.org/resource/William_J._Phelan> <http://dbpedia.org/property/residence> ?v4 . ?v2 <http://dbpedia.org/property/governor> ""Charlie Baker""@en . ?result <http://dbpedia.org/ontology/deathPlace> ?v4 . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Region>. }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?person1 ?person2 WHERE {
  # Part 1: Abigail Smith Adams and John Quincy Adams
  ?parent a dbo:Person ;
          foaf:name ""Abigail Smith Adams""@en .
  ?parent dbo:child dbr:John_Quincy_Adams .

  OPTIONAL { 
    ?residence dbo:type dbr:Settlement ;
               dbo:decedent ?person1 .
    ?person1 foaf:name ?name1 .
    FILTER(?name1 = ""Abigail Smith Adams""@en)
  }

  # Part 2: Person decedent at Charlie Baker's administration
  OPTIONAL {
    ?administration dbo:type dbr:Region ;
                    dbo:governor dbr:Charlie_Baker .
    ?administration dbo:decedent ?person2 .
    ?person2 foaf:name ?name2 .
  }
}
```",5,7,6,2,3,3,3,71,0,0,2,0,0.0,0
47,51,val,"Give me the office of the awardee of Banga Bhushan and office of the awardee of the entity, that is an award, in India.",SELECT ?result WHERE { ?v2 <http://dbpedia.org/property/awards> ?v1 . ?v4 <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/Banga_Bhushan> . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Award>. ?v2 <http://dbpedia.org/property/office> ?result . ?v4 <http://dbpedia.org/property/office> ?result . ?v1 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/India> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?awardee ?office WHERE {
  # Banga Bhushan awardees
  {
    VALUES ?award { dbr:Banga_Bhushan }
    ?recipient dbo:recipientOf ?award .
    ?recipient dbo:occupation ?office .
    FILTER NOT EXISTS { ?recipient dbo:deathDate ?date } # Exclude deceased individuals if needed
  }

  UNION

  # Assuming Bharat Ratna as the other award entity for this example
  {
    VALUES ?award { dbr:Bharat_Ratna }
    ?recipient dbo:recipientOf ?award .
    ?recipient dbo:occupation ?office .
    FILTER NOT EXISTS { ?recipient dbo:deathDate ?date } # Exclude deceased individuals if needed
  }
}
```",5,6,6,3,2,3,3,71,0,0,1,0,0.0,0
773,51,val,"Give me the parent of the successor of Charles the Bald and parent of the child, that is a royalty, of the father, that is an office holder and a royalty, of Carloman of Bavaria.",SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v2 <http://dbpedia.org/ontology/parent> ?result . <http://dbpedia.org/resource/Charles_the_Bald> <http://dbpedia.org/ontology/successor> ?v4 . ?v2 <http://dbpedia.org/property/father> ?v1 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?result <http://dbpedia.org/ontology/child> ?v4 . <http://dbpedia.org/resource/Carloman_of_Bavaria> <http://dbpedia.org/property/father> ?v1 . },"```sparql
# Step 1: Find Charles the Bald's successor
SELECT ?successor WHERE {
  wd:Q134064 dbo:successionSuccessor ?successor .
}

# Step 2: Find the parent of Charles the Bald's successor
SELECT ?parent WHERE {
  ?successor dbo:parent ?parent .
}

# Step 3: Identify Carloman of Bavaria's father who is an office holder and royalty
SELECT ?father WHERE {
  wd:Q134064 dbo:father ?father .
  ?father a wd:Q5 . # Person
  ?father a wd:Q11696 . # Monarch
}

# Step 4: Find the child that is a royalty of Carloman of Bavaria's father
SELECT ?royalChild WHERE {
  ?father dbo:child ?royalChild .
  ?royalChild a wd:Q5 . # Person
  ?royalChild a wd:Q11696 . # Monarch
}

# Step 5: Determine the parent of this royal child
SELECT ?parentOfRoyalChild WHERE {
  ?royalChild dbo:parent ?parentOfRoyalChild .
}
```",5,8,6,3,2,3,3,71,0,0,2,0,0.0,0
582,53,val,"Give me the figure known as the nickname of Japan national football team and reference to the residence of the reference, that is a scientist, to Hirotaka Sugawara and player in Kazuaki Nagasawa.","SELECT ?result WHERE { <http://dbpedia.org/resource/Japan_national_football_team> <http://dbpedia.org/property/nickname> ?v1 . ?result <http://dbpedia.org/property/nickname> ?v1 . ?v3 <http://xmlns.com/foaf/0.1/name> ""Hirotaka Sugawara""@en . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Scientist>. ?result <http://xmlns.com/foaf/0.1/name> ?v2 . <http://dbpedia.org/resource/Kazuaki_Nagasawa> <http://dbpedia.org/ontology/team> ?result . ?v3 <http://dbpedia.org/property/residence> ?v2 . }","```sparql
# Step 1: Get the nickname of the Japan national football team
SELECT ?nickname WHERE {
  wd:Q123456 rdfs:label ""Japan national football team""@en .
  wd:Q123456 foaf:nick ?nickname .
}

UNION

# Step 2 and 3: Find a scientist connected to Hirotaka Sugawara and Kazuaki Nagasawa, and their residence
SELECT DISTINCT ?scientist ?residence WHERE {
  # Assuming we have identified the scientist's DBpedia ID as wd:QScientistID
  ?scientist wdt:P106 wd:Q36180 .  # P106 is ""occupation"", Q36180 is ""scientist""
  
  # Connections to Hirotaka Sugawara and Kazuaki Nagasawa (hypothetical)
  ?scientist wdt:P463 wd:QPersonHirotakaSugawara .
  ?scientist wdt:P463 wd:QPersonKazuakiNagasawa .

  OPTIONAL {
    ?scientist wdt:P19 ?residence .  # P19 is ""place of birth"" or residence
  }
}
```

Note: The above query assumes hypothetical DBpedia IDs for the Japan national football team (`wd:Q123456`), Hirotaka Sugawara (`wd:QPersonHirotakaSugawara`), and Kazuaki Nagasawa (`wd:QPersonKazuakiNagasawa`). These would need to be replaced with actual identifiers from DBpedia. Additionally, the connection between the scientist and the two individuals is assumed based on a property like `P463` (part of) or another relevant property.",6,7,7,3,3,3,3,71,0,0,1,0,0.0,0
715,53,val,"Give me the commander in Spanish Civil War and leader of the office, that is a government agency and an organisation, of Carlos Franco Iribarnegaray and commander in the force, that is a military conflict, of the native of Morocco.",SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v1 <http://dbpedia.org/ontology/leader> ?result . <http://dbpedia.org/resource/Spanish_Civil_War> <http://dbpedia.org/ontology/commander> ?result . ?v3 <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Morocco> . <http://dbpedia.org/resource/Carlos_Franco_Iribarnegaray> <http://dbpedia.org/property/office> ?v1 . ?v2 <http://dbpedia.org/ontology/commander> ?v3 . ?v2 <http://dbpedia.org/ontology/commander> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/GovernmentAgency>. },"```sparql
# Query to find Carlos Franco Iribarnegaray's role in the Spanish Civil War
SELECT ?role WHERE {
  ?person rdfs:label ""Carlos Franco Iribarnegaray""@en .
  ?person dbo:nationality dbr:Spain .
  ?person dbo:occupation ?occupation .
  ?occupation dbo:field dbr:Military_conflict .
  ?occupation dbo:part_of dbr:Spanish_Civil_War .
  ?person dbo:role ?role .
}

# Query to find the organization Carlos Franco Iribarnegaray led
SELECT ?organization WHERE {
  ?person rdfs:label ""Carlos Franco Iribarnegaray""@en .
  ?person dbo:leaderOf ?organization .
  ?organization a dbo:Government_agency ;
                a dbo:Organization .
}

# Query to find Moroccan forces and their commanders in the Spanish Civil War
SELECT ?force ?commander WHERE {
  ?conflict rdfs:label ""Spanish_Civil_War""@en .
  ?conflict dbo:participatingMilitaryUnit ?unit .
  ?unit dbo:nationality dbr:Morocco .
  ?unit dbo:commander ?commander .
}
```",6,9,7,3,3,3,3,71,0,0,1,0,0.0,0
36,21,val,Give me the actor of Being Mrs Elliot and person born as the birth name of Ayo Makun and person born in 1971.,"SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/birthYear> ""1971""^^<http://www.w3.org/2001/XMLSchema#gYear> . <http://dbpedia.org/resource/Being_Mrs_Elliot> <http://dbpedia.org/ontology/starring> ?result . ?result <http://dbpedia.org/property/birthName> ?v1 . <http://dbpedia.org/resource/Ayo_Makun> <http://dbpedia.org/property/birthName> ?v1 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?actor WHERE {
  # Actor of ""Being Mrs Elliot""
  ?castMember dbo:characterName ?character .
  ?castMember dbo:title ?title .
  ?title rdfs:label ""Being Mrs Elliot""@en .

  # Person born as Ayo Makun's birth name
  ?person foaf:name ""Ayoola Makushin"" .
  
  # Person born in 1971
  ?person dbo:birthYear ?birthYear .
  FILTER (?birthYear = 1971)

  # Ensure the actor is the same person who matches all criteria
  BIND(?castMember AS ?actor)
}
```",4,4,5,2,3,2,3,28,0,0,1,0,0.0,0
281,23,val,"Give me the awardee of the award of Alfred Warden and commander in the war, that is an event and a military conflict, of Roy Boehm.",SELECT ?result WHERE { <http://dbpedia.org/resource/Roy_Boehm> <http://dbpedia.org/ontology/battle> ?v2 . ?result <http://dbpedia.org/property/awards> ?v1 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v2 <http://dbpedia.org/ontology/commander> ?result . <http://dbpedia.org/resource/Alfred_Warden> <http://dbpedia.org/property/awards> ?v1 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?awardee ?event WHERE {
  ?award dbo:name ""Alfred Warden Award""@en .
  ?award dbo:recipient ?person .
  ?person foaf:name ""Roy Boehm"" .
  OPTIONAL { ?person dbo:occupation ?occupation . FILTER(CONTAINS(LCASE(?occupation), ""commander"")) }
  OPTIONAL { ?event dbo:participatedIn ?person . }
}
```",4,6,5,2,2,2,3,28,0,0,1,0,0.0,0
826,49,val,"Give me the predecessor of the parent of the child of Louis IV, Grand Duke of Hesse and spouse of the child of Johann Heinrich Appel.","SELECT ?result WHERE { ?v0 <http://dbpedia.org/ontology/parent> ?v1 . ?result <http://dbpedia.org/ontology/successor> ?v1 . ?v2 <http://dbpedia.org/ontology/spouse> ?result . ?v0 <http://dbpedia.org/ontology/parent> <http://dbpedia.org/resource/Louis_IV,_Grand_Duke_of_Hesse> . ?v2 <http://dbpedia.org/property/father> ""Johann Heinrich Appel""@en . }","```sparql
# Step 1: Find a child of Louis IV, Grand Duke of Hesse
SELECT ?child WHERE {
    wd:Q123456 dbo:child ?child .
}

# Step 2: Find the spouse of this child who is also connected to Johann Heinrich Appel's lineage
SELECT ?spouse WHERE {
    ?child dbo:spouse ?spouse .
    ?appelChild dbo:parent ?spouse .
    wd:Q654321 dbo:child ?appelChild .  # Assuming Q654321 is the DBpedia ID for Johann Heinrich Appel
}

# Step 3: Find the parent of this spouse
SELECT ?parent WHERE {
    ?spouse dbo:parent ?parent .
}

# Step 4: Find the predecessor of this parent
SELECT ?predecessor WHERE {
    ?parent dbo:successor ?currentParent .
    ?predecessor dbo:successor ?parent .
}
```

Note: The actual DBpedia IDs for Louis IV, Grand Duke of Hesse (`Q123456`) and Johann Heinrich Appel (`Q654321`) need to be verified or replaced with the correct identifiers. This query assumes these placeholders are accurate.",5,5,6,3,2,3,3,71,0,0,1,0,0.0,0
326,17,val,"Give me the resident of Berkshire and person decedent at the award, that is a country, of the awardee of French Legion of Honor.","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/deathPlace> ?v3 . ?result <http://dbpedia.org/property/residence> <http://dbpedia.org/resource/Berkshire> . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. ?v0 <http://dbpedia.org/property/awards> ?v3 . ?v0 <http://dbpedia.org/property/awards> ""French Legion of Honor""@en . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?awardee ?resident WHERE {
  ?awardee dbo:honoraryTitle dbr:French_Legion_of_Honor ;
          dbo:deathPlace ?deceasedPlace .
  
  OPTIONAL { 
    ?residence dbo:location dbr:Berkshire ;
               dbo:resident ?resident .
    
    FILTER (?awardee = ?resident)
  }
}
```",4,5,5,3,2,3,2,20,0,0,1,0,0.0,0
527,17,val,"Give me the actor of The Book Tower and author of the work, that is a work and a book, of the host of Hyperland.",SELECT ?result WHERE { ?v3 <http://dbpedia.org/property/author> ?result . <http://dbpedia.org/resource/Hyperland> <http://dbpedia.org/ontology/presenter> ?v0 . <http://dbpedia.org/resource/The_Book_Tower> <http://dbpedia.org/property/starring> ?result . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?v3 <http://dbpedia.org/property/author> ?v0 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Book>. },"```sparql
# Step 1: Find the host of Hyperland
SELECT ?host WHERE {
  ?hyperland dbo:genre dbc:Children's_television_shows ;
             dbo:hostedBy ?host .
}

# Step 2: Find books authored by the host of Hyperland
SELECT DISTINCT ?book WHERE {
  ?author foaf:name ?name .
  ?author dbo:wikiPageRedirects ?redirect .
  ?redirect rdfs:label ""Hyperland""@en .
  
  OPTIONAL { ?author dbo:work ?book . }
  FILTER EXISTS { ?book a dbo:Book . }
}

# Step 3: Find the actor of The Book Tower
SELECT DISTINCT ?actor WHERE {
  ?tower dbo:title ""The Book Tower""@en ;
         dbo:starring ?actor .
}
```",4,6,5,3,2,3,2,20,0,0,1,0,0.0,0
5,15,val,"Give me the birthplace of the person born, that is a politician, as the award of Renata Adler and entity in Canada.",SELECT ?result WHERE { ?v3 <http://dbpedia.org/ontology/birthPlace> ?result . <http://dbpedia.org/resource/Renata_Adler> <http://dbpedia.org/property/awards> ?v2 . ?v3 <http://dbpedia.org/property/birthName> ?v2 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?result <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Canada> . },"```sparql
SELECT ?birthPlace WHERE {
  ?person dbo:occupation dbr:Politician ;
          foaf:awardReceivedBy <http://dbpedia.org/resource/Renata_Adler> .
  ?person dbp:countryOfBirth dbr:Canada .
  ?person foaf:birthPlace ?birthPlace .
}
```",4,5,5,3,2,3,2,20,0,0,2,0,0.0,0
382,15,val,"Give me the birthplace of the manager, that is a soccer manager and an athlete and a sports manager, of the player in Lukas Kübler and landmark at elevation of 100.","SELECT ?result WHERE { <http://dbpedia.org/resource/Lukas_Kübler> <http://dbpedia.org/ontology/team> ?v0 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Athlete>. ?v1 <http://dbpedia.org/ontology/birthPlace> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsManager>. ?result <http://dbpedia.org/ontology/elevation> ""100""^^<http://www.w3.org/2001/XMLSchema#integer> . ?v0 <http://dbpedia.org/ontology/manager> ?v1 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerManager>. }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?managerBirthPlace ?landmarkName WHERE {
  # Find Lukas Kübler's manager who is a soccer manager, athlete, and sports manager
  ?player foaf:name ""Lukas Kübler"" .
  ?team dbo:captain ?player .
  ?team dbo:coach ?manager .
  ?manager dbo:occupation dbr:Soccer_manager ;
           dbo:occupation dbr:Athlete ;
           dbo:occupation dbr:Sports_manager .

  # Get the birthplace of the manager
  ?manager dbo:birthPlace ?birthPlace .
  ?birthPlace foaf:name ?managerBirthPlace .

  # Find a landmark at an elevation of 100 meters
  ?landmark dbo:elevation ""100""^^xsd:float ;
            foaf:name ?landmarkName .
}
```",4,7,5,3,2,3,2,20,0,0,1,0,0.0,0
573,42,val,"Give me the parent of the author, that is a politician and an office holder, of Exchequer Standards and person decedent at the administration, that is a region, of Charlie Baker and person decedent at Quincy, Massachusetts.","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/deathPlace> ?v2 . <http://dbpedia.org/resource/Exchequer_Standards> <http://dbpedia.org/property/author> ?v1 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Region>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v1 <http://dbpedia.org/ontology/parent> ?result . ?result <http://dbpedia.org/ontology/deathPlace> <http://dbpedia.org/resource/Quincy,_Massachusetts> . ?v2 <http://dbpedia.org/property/governor> ""Charlie Baker""@en . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?parent WHERE {
  # Charlie Baker's administration region
  dbr:Charlie_Baker dbo:governmentRole dbr:Governor_of_Massachusetts .

  # John Maynard Keynes as the author of ""Exchequer Standards""
  dbr:John_Maynard_Keynes dbo:authorOf dbr:Exchequer_Standards .

  # Parent of John Maynard Keynes
  ?parent dbo:child dbr:John_Maynard_Keynes .
  
  # Parent is a politician and office holder
  ?parent a dbo:Politician ;
          dbo:officeHolder true .

  # Decedent at the administration region (Massachusetts)
  ?parent dbo:placeOfDeath dbr:Massachusetts .

  # Decedent at Quincy, Massachusetts
  OPTIONAL { ?parent dbo:placeOfDeath dbr:Quincy,_Massachusetts . }
}
```",5,8,6,2,3,3,3,71,0,0,2,0,0.0,0
47,47,val,"Give me the office of the administration of Jagdeep Dhankhar and office of the awardee of the award, that is an award, of Mantu Ghosh.",SELECT ?result WHERE { ?v2 <http://dbpedia.org/property/governor> <http://dbpedia.org/resource/Jagdeep_Dhankhar> . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Award>. <http://dbpedia.org/resource/Mantu_Ghosh> <http://dbpedia.org/property/awards> ?v0 . ?v2 <http://dbpedia.org/property/office> ?result . ?v4 <http://dbpedia.org/property/awards> ?v0 . ?v4 <http://dbpedia.org/property/office> ?result . },"```sparql
# Query to find the office of Jagdeep Dhankhar
SELECT ?office WHERE {
  dbpedia:Jagdeep_Dhankhar dbo:positionHeld ?office .
}

UNION

# Query to find the award received by Mantu Ghosh and its associated office
SELECT DISTINCT ?awardOffice WHERE {
  ?person rdfs:label ""Mantu Ghosh""@en.
  ?person dbo:awardsReceived ?award.
  ?award dbo:associatedWith ?awardOffice .
}
```",5,6,6,3,2,3,3,71,0,0,1,0,0.0,0
124,45,val,"Give me the military force of the force, that is a societal event and a military conflict, of the person born on 1850-06-24 and commander in Mahdist War and military force of Battle of Tamai.","SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?result <http://dbpedia.org/ontology/battle> ?v1 . ?result <http://dbpedia.org/ontology/battle> <http://dbpedia.org/resource/Battle_of_Tamai> . <http://dbpedia.org/resource/Mahdist_War> <http://dbpedia.org/ontology/commander> ?result . ?v1 <http://dbpedia.org/ontology/commander> ?v0 . ?v0 <http://dbpedia.org/ontology/birthDate> ""1850-06-24""^^<http://www.w3.org/2001/XMLSchema#date> . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?person ?militaryForce WHERE {
  ?person dbo:birthDate ""1850-06-24""^^xsd:date .
  ?person dbo:occupation dbr:Military_person .
  
  # Check involvement in Mahdist War
  OPTIONAL { 
    ?event dbo:participatedInMilitaryConflict ?war .
    ?war rdfs:label ""Mahdist War""@en .
    ?person dbo:commanderOf ?event .
  }
  
  # Check involvement in Battle of Tamai
  OPTIONAL {
    ?battle dbo:participatedInMilitaryConflict ?conflict .
    ?conflict rdfs:label ""Battle of Tamai""@en .
    ?person dbo:commanderOf ?battle .
  }

  # Retrieve military force associated with the person
  ?person dbo:militaryForce ?militaryForce .
  
  FILTER (BOUND(?war) && BOUND(?conflict))
}
```",5,7,6,3,3,3,3,71,0,0,1,0,0.0,0
791,49,val,"Give me the father of the child, that is a royalty, of the father, that is a royalty and an office holder, of Emperor Antoku and spouse of the spouse, that is a royalty, of Emperor Takakura.",SELECT ?result WHERE { ?v1 <http://dbpedia.org/property/father> ?v0 . ?result <http://dbpedia.org/ontology/spouse> ?v2 . ?v1 <http://dbpedia.org/property/father> ?result . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v2 <http://dbpedia.org/ontology/spouse> <http://dbpedia.org/resource/Emperor_Takakura> . <http://dbpedia.org/resource/Emperor_Antoku> <http://dbpedia.org/property/father> ?v0 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. },"```sparql
SELECT ?fatherLabel WHERE {
  # Step 1: Find Emperor Antoku's father who is royalty and an office holder
  ?antoku dbo:parent ?antokuFather .
  ?antoku rdf:type dbo:Emperor .
  ?antoku rdfs:label ""Antoku""@en .

  # Ensure the father is royalty and has held an office
  ?antokuFather rdf:type dbo:RoyalFamilyMember ;
                dbo:officeHolder ?office .

  # Step 2: Find Emperor Takakura's spouse who is royalty
  ?takakura dbo:spouse ?takakuraSpouse .
  ?takakura rdfs:label ""Takakura""@en .
  ?takakuraSpouse rdf:type dbo:RoyalFamilyMember .

  # Step 3: Find the child of both identified individuals
  ?child dbo:parent ?antokuFather ;
         dbo:parent ?takakuraSpouse .

  # Ensure the child is royalty
  ?child rdf:type dbo:RoyalFamilyMember .

  # Step 4: Identify the father of this child
  ?child dbo:father ?father .
  
  # Get the label for the father
  ?father rdfs:label ?fatherLabel .
}
```",5,9,6,3,2,3,3,71,0,0,1,0,0.0,0
47,46,val,"Give me the office of the awardee of Banga Bhushan and office of the administration of the commander, that is a politician, in Operation Green Hunt.",SELECT ?result WHERE { ?v4 <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/Banga_Bhushan> . ?v1 <http://dbpedia.org/property/office> ?result . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v4 <http://dbpedia.org/property/office> ?result . ?v1 <http://dbpedia.org/property/governor> ?v2 . <http://dbpedia.org/resource/Operation_Green_Hunt> <http://dbpedia.org/ontology/commander> ?v2 . },"```sparql
# Query to find the office of the awardee of Banga Bhushan
SELECT ?person ?office WHERE {
  ?award dcterms:isPartOf <http://dbpedia.org/resource/Category:Banga_Bhushan_awards> .
  ?award dbo:recipient ?person .
  ?person dbo:occupation ?office .
}

UNION

# Query to find the office of a politician involved in Operation Green Hunt
SELECT ?person ?office WHERE {
  ?operation dbo:commander ?person .
  ?person rdf:type <http://dbpedia.org/ontology/Politician> .
  ?person dbo:occupation ?office .
  FILTER(CONTAINS(LCASE(?operation), ""operation green hunt""))
}
```",5,6,6,3,2,3,3,71,0,0,1,0,0.0,0
965,51,val,"Give me the parent of the person born, that is a noble, as the birth name of George Mountbatten, 2nd Marquess of Milford Haven and parent of the child, that is a royalty, of Prince Louis of Battenberg.","SELECT ?result WHERE { ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Noble>. ?v0 <http://dbpedia.org/ontology/parent> ?result . ?v4 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Prince_Louis_of_Battenberg> . ?v4 <http://dbpedia.org/ontology/parent> ?result . ?v0 <http://dbpedia.org/property/birthName> ?v3 . <http://dbpedia.org/resource/George_Mountbatten,_2nd_Marquess_of_Milford_Haven> <http://dbpedia.org/property/birthName> ?v3 . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?parentName WHERE {
  # Step 1: Find George Mountbatten by his birth name and check if he is a noble
  ?georgeMountbatten dbo:birthName ""Prince George of Battenberg""@en .
  ?georgeMountbatten rdf:type dbo:Noble .

  # Step 2: Identify his parent who is also a noble
  ?parent dbo:child ?georgeMountbatten .
  ?parent rdf:type dbo:Noble .
  
  # Get the name of this parent
  ?parent rdfs:label ?parentName .

  # Step 3: Find Prince Louis of Battenberg's child who is royalty
  ?princeLouis dbr:Prince_Louis_of_Battenberg .
  ?royalChild dbo:child ?princeLouis .
  ?royalChild rdf:type dbo:RoyalFamilyMember .

  # Ensure the parent found in step 2 is also the parent of this royal child
  FILTER(?parent = ?royalChildParent)
}
```",5,7,6,3,2,3,3,71,0,0,2,0,0.0,0
507,40,val,"Give me the director of Entertaining Mr Sloane (film) and professional in Film director, television director and spouse of the person born as the birth name of Anne V. Coates.","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/spouse> ?v1 . ?v1 <http://dbpedia.org/property/birthName> ?v2 . <http://dbpedia.org/resource/Anne_V._Coates> <http://dbpedia.org/property/birthName> ?v2 . <http://dbpedia.org/resource/Entertaining_Mr_Sloane_(film)> <http://dbpedia.org/ontology/director> ?result . ?result <http://dbpedia.org/property/occupation> ""Film director, television director""@en . }","```sparql
# Step 1: Find the director of ""Entertaining Mr Sloane""
SELECT ?director WHERE {
    dbpedia:Entertaining_Mr_Sloane_film dbo:director ?director .
}

# Step 2: Find Anne V. Coates' spouse
SELECT ?spouse WHERE {
    dbpedia:Anne_V._Coates dbo:spouse ?spouse .
}

# Step 3: Check if the spouse is a professional in film and television directing
SELECT ?spouse WHERE {
    ?spouse rdf:type dbo:FilmDirector ;
            rdf:type dbo:TelevisionDirector .
}
```",5,5,6,3,3,3,3,71,0,0,1,0,0.0,0
433,46,val,"Give me the associated musical artist of the person born, that is a musical artist and an artist, as the persona of Paul Chambers and associated musical artist of the associated musical artist, that is an artist and a musical artist, of Scott LaFaro.",SELECT ?result WHERE { ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. ?v1 <http://dbpedia.org/property/birthName> ?v2 . ?v1 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . <http://dbpedia.org/resource/Paul_Chambers> <http://xmlns.com/foaf/0.1/givenName> ?v2 . ?v4 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. <http://dbpedia.org/resource/Scott_LaFaro> <http://dbpedia.org/ontology/associatedMusicalArtist> ?v4 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?person WHERE {
  # Paul Chambers associated musical artist who is also an artist
  ?paulChambersArtist a dbo:MusicalArtist ;
                      dbo:associatedBandMember dbr:Paul_Chambers .

  # Scott LaFaro associated musical artist who is also an artist
  ?scottLaFaroArtist a dbo:MusicalArtist ;
                     dbo:associatedBandMember dbr:Scott_LaFaro .

  # Find the common person between these two artists
  FILTER (?paulChambersArtist = ?scottLaFaroArtist)
  
  # Ensure this person is both an artist and a musical artist
  ?person a dbo:MusicalArtist ;
          dbo:associatedBandMember ?commonArtist .
}
```",5,9,6,3,2,3,3,71,0,0,2,0,0.0,0
839,48,val,"Give me the band of the band, that is a musical artist, of Charlie Huhn and band of the person born, that is a musical artist, as the persona of Kevin Russell (musician).",SELECT ?result WHERE { <http://dbpedia.org/resource/Charlie_Huhn> <http://dbpedia.org/ontology/associatedMusicalArtist> ?v1 . <http://dbpedia.org/resource/Kevin_Russell_(musician)> <http://xmlns.com/foaf/0.1/givenName> ?v3 . ?result <http://dbpedia.org/ontology/bandMember> ?v1 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?v2 <http://dbpedia.org/property/birthName> ?v3 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?v2 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . },"```sparql
SELECT ?charlieHuhnBand ?kevinRussellBand WHERE {
  # Find Charlie Huhn's band
  ?charlieHuhn dbo:associatedMusicalArtist dbr:Charlie_Huhn .
  ?charlieHuhn dbo:band dbr:?charlieHuhnBand .

  # Find Kevin Russell's birth details and his associated band
  ?kevinRussell dbo:birthPlace ?place .
  ?kevinRussell dbo:associatedMusicalArtist dbr:Kevin_Russell_(musician) .
  ?kevinRussell dbo:band dbr:?kevinRussellBand .
}
```",5,7,6,3,2,3,3,71,0,0,1,0,0.0,0
892,52,val,Give me the entity in Province of Reggio Emilia and landmark at elevation of the award of Anna Ishii and entity in the profession of the true self of Enrico Crolla.,"SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/elevation> ?v4 . ?v3 <http://xmlns.com/foaf/0.1/givenName> ""Enrico Crolla""@en . ?result <http://dbpedia.org/ontology/province> <http://dbpedia.org/resource/Province_of_Reggio_Emilia> . <http://dbpedia.org/resource/Anna_Ishii> <http://dbpedia.org/property/awards> ?v4 . ?v3 <http://dbpedia.org/property/occupation> ?v1 . ?result <http://dbpedia.org/ontology/country> ?v1 . }","```sparql
# Part 1: Entity in Province of Reggio Emilia
SELECT ?entity WHERE {
  ?entity dbo:location dbr:Province_of_Reggio_Emilia .
}

UNION

# Part 2: Landmark at Elevation of the Award of Anna Ishii
# Assuming we have a way to determine the elevation (e.g., literal value or metaphorical interpretation)
SELECT ?landmark WHERE {
  # Find the award associated with Anna Ishii
  ?award dbo:recipient dbr:Anna_Ishii .
  
  # Assume ?elevation is determined from the context of the award
  BIND(?elevation AS ?targetElevation) 

  # Find landmarks at this elevation
  ?landmark dbo:elevation ?elevation .
}

UNION

# Part 3: Entity in the Profession of the True Self of Enrico Crolla
SELECT ?entity WHERE {
  # Assuming we have a way to determine Enrico Crolla's true profession
  BIND(""Profession"" AS ?trueProfession) 

  ?entity dbo:profession dbr:?trueProfession .
}
```",6,6,7,3,3,3,3,71,0,0,1,0,0.0,0
935,17,val,"Give me the headquarter of the office of the native of Balochistan, Pakistan and death place of Abdul Raziq Bugti.","SELECT ?result WHERE { ?v0 <http://dbpedia.org/property/office> ?v3 . ?v0 <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Balochistan,_Pakistan> . ?v3 <http://dbpedia.org/ontology/location> ?result . <http://dbpedia.org/resource/Abdul_Raziq_Bugti> <http://dbpedia.org/ontology/deathPlace> ?result . }","```sparql
SELECT ?capital ?deathPlace WHERE {
  # Query for the capital of Balochistan
  dbpedia:Balochistan dbo:capital ?capital .
  
  # Query for the death place of Abdul Raziq Bugti
  dbpedia:Abdul_Razzaq_Bugti dbo:placeOfBirth ?birthPlace ;
                              dbo:deathPlace ?deathPlace .
}
```",4,4,5,3,2,3,2,20,0,0,1,0,0.0,0
976,49,val,"Give me the office of the leader, that is a politician, of Grand National Assembly of Turkey and office of the person born as the birth name of Naci Bostancı.",SELECT ?result WHERE { ?v0 <http://dbpedia.org/property/birthName> ?v4 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v2 <http://dbpedia.org/property/office> ?result . <http://dbpedia.org/resource/Grand_National_Assembly_of_Turkey> <http://dbpedia.org/ontology/leader> ?v2 . <http://dbpedia.org/resource/Naci_Bostancı> <http://dbpedia.org/property/birthName> ?v4 . ?v0 <http://dbpedia.org/property/office> ?result . },"```sparql
# Query to find the office of the leader of the Grand National Assembly of Turkey
SELECT ?office WHERE {
  ?person dbo:position ""Speaker of the Grand National Assembly of Turkey""@en .
  ?person dbo:office ?office .
}

UNION

# Query to find Naci Bostancı's birth name and his office
SELECT ?birthName, ?office WHERE {
  wd:Q1234567 foaf:name ?birthName . # Replace Q1234567 with the actual DBpedia ID for Naci Bostancı
  wd:Q1234567 dbo:office ?office .
}
```

Note: The placeholder `wd:Q1234567` should be replaced with the actual DBpedia resource identifier for Naci Bostancı. You may need to look up this identifier in DBpedia or another reliable source.",5,6,6,3,2,3,3,71,0,0,1,0,0.0,0
274,22,val,"Give me the band member of the person born, that is a musical artist, as John Birks Gillespie and professional in the designer of Tetris Classic.","SELECT ?result WHERE { ?v2 <http://dbpedia.org/property/birthName> ""John Birks Gillespie""@en . ?result <http://dbpedia.org/ontology/associatedMusicalArtist> ?v2 . ?result <http://dbpedia.org/property/occupation> ?v3 . <http://dbpedia.org/resource/Tetris_Classic> <http://dbpedia.org/property/designer> ?v3 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?bandMember WHERE {
  # Find band members associated with Dizzy Gillespie
  ?gillespieBand dbo:member ?bandMember .
  
  # Ensure the person is a musical artist
  ?bandMember dbo:occupation dbr:Musical_artist .

  # Check if this band member has any connection to Alexey Pajitnov
  OPTIONAL {
    ?pajitnovRelation dbo:agent ?bandMember .
    FILTER (STRSTARTS(STR(?pajitnovRelation), ""http://dbpedia.org/resource/Alexey_Pajitnov""))
  }
  
  # Dizzy Gillespie's resource
  VALUES ?gillespieBand { dbr:Dizzy_Gillespie }
}
```",4,5,5,2,2,2,3,28,0,0,8,0,0.0,0
216,19,val,Give me the office of the mayor of Ros Bates and administration of  and party of Campbell Newman.,"SELECT ?result WHERE { <http://dbpedia.org/resource/Campbell_Newman> <http://dbpedia.org/ontology/party> ?result . ?v2 <http://dbpedia.org/property/office> ?result . <http://dbpedia.org/resource/Ros_Bates> <http://dbpedia.org/property/leader> ?v2 . ?result <http://dbpedia.org/property/leader> """"@en . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?mayorOffice ?administration ?newmanParty WHERE {
  # Ros Bates information
  OPTIONAL {
    ?rosBates a dbo:Mayor ;
              foaf:name ""Ros Bates"" .
    ?rosBates dbo:office ?mayorOffice .
    ?termStart dbo:startDate ?startYear .
    ?termStart dbo:endDate ?endYear .
    ?administration dbo:startDate ?adminStart .
    ?administration dbo:endDate ?adminEnd .
    FILTER (?startYear >= ?adminStart && ?endYear <= ?adminEnd) .
  }

  # Campbell Newman information
  OPTIONAL {
    ?campbellNewman a dbo:Politician ;
                    foaf:name ""Campbell Newman"" .
    ?campbellNewman dbo:party ?newmanParty .
  }
}
```",4,4,5,2,3,2,3,28,0,0,1,0,0.0,0
917,52,val,"Give me the child of Kekūanāoʻa and child of the father of Keʻelikōlani and parent of the child, that is a royalty, of the mayor of Hawaiian Kingdom.","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/parent> ?v4 . ?result <http://dbpedia.org/property/father> ""Kekūanāoʻa""@en . ?v1 <http://dbpedia.org/property/father> ?v3 . ?result <http://dbpedia.org/ontology/child> ?v1 . <http://dbpedia.org/resource/Keʻelikōlani> <http://dbpedia.org/property/father> ?v4 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. <http://dbpedia.org/resource/Hawaiian_Kingdom> <http://dbpedia.org/property/leader> ?v3 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?childOfKekuanaoa ?royalChild WHERE {
  # Step 1: Find a child of Kekūanāoʻa
  ?person dbo:parent dbr:Kekūanāoʻa .
  
  # Step 2: Identify Keʻelikōlani's father and his child
  ?keelikoChild dbo:parent ?fatherOfKeeliko .
  ?fatherOfKeeliko rdfs:label ""High Chief Kahekili II""@en .
  ?keelikoChild rdfs:label ""Queen Kapiolani""@en .

  # Step 3: Find the parent of this child (likely the same as father)
  ?parentOfRoyalChild dbo:child ?keelikoChild .
  
  # Step 4: Identify the mayor of the Hawaiian Kingdom and their royal child
  ?mayor rdfs:label ""John Owen Dominis""@en .
  ?royalChild dbo:parent ?mayor .
  ?royalChild dbo:title dbr:Royal_Titles_of_the_Kingdom_of_Hawaii .

  # Step 5: Find the commonality
  FILTER (?person = ?childOfKekuanaoa)
  FILTER (?parentOfRoyalChild = ?royalChild)

}
```",6,7,7,3,3,3,3,71,0,0,2,0,0.0,0
216,53,val,"Give me the team of the person born, that is a sports manager and a soccer manager and a soccer player, on 1983-12-20 and player in the coach of the reference, that is an organisation and a soccer club, to Croatia U21 and player in Mario Ivanković.","SELECT ?result WHERE { <http://dbpedia.org/resource/Mario_Ivanković> <http://dbpedia.org/ontology/team> ?result . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?v1 <http://dbpedia.org/ontology/birthDate> ""1983-12-20""^^<http://www.w3.org/2001/XMLSchema#date> . ?v3 <http://xmlns.com/foaf/0.1/name> ""Croatia U21""@en . ?v2 <http://dbpedia.org/ontology/team> ?result . ?v3 <http://dbpedia.org/ontology/coach> ?v2 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsManager>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerManager>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerClub>. ?result <http://dbpedia.org/ontology/coach> ?v1 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerPlayer>. }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?team WHERE {
  ?person dbo:birthDate ""1983-12-20""^^xsd:date .
  ?person dbo:occupation ?occupation .
  FILTER (
    (CONTAINS(LCASE(str(?occupation)), ""sports manager"") ||
     CONTAINS(LCASE(str(?occupation)), ""soccer manager"") ||
     CONTAINS(LCASE(str(?occupation)), ""soccer player""))
  ) .
  ?person dbo:coach dbr:Croatia_national_under-21_football_team .
  ?playerInTeam dbo:member ?person ;
                a dbo:SoccerClub .
  ?playerInTeam dbp:manager dbr:Mario_Ivanković .
  ?playerInTeam rdfs:label ?team .
}
```",6,11,7,3,3,3,3,71,0,0,1,0,0.0,0
926,45,val,"Give me the successor of Mustafa III and child of the father, that is a royalty, of the parent, that is a royalty, of Beyhan Sultan (daughter of Mustafa III) and father of Mahmud II.",SELECT ?result WHERE { ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. <http://dbpedia.org/resource/Mahmud_II> <http://dbpedia.org/property/father> ?result . ?v0 <http://dbpedia.org/ontology/child> ?result . <http://dbpedia.org/resource/Mustafa_III> <http://dbpedia.org/ontology/successor> ?result . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. <http://dbpedia.org/resource/Beyhan_Sultan_(daughter_of_Mustafa_III)> <http://dbpedia.org/ontology/parent> ?v3 . ?v3 <http://dbpedia.org/property/father> ?v0 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?successor WHERE {
  # Mustafa III's successor
  dbr:Mustafa_III dbo:succeededBy ?successor .
  
  # Beyhan Sultan's parent (royalty)
  dbr:Beyhan_Sultan dbo:parent ?mustafaIII .
  FILTER(?mustafaIII = dbr:Mustafa_III) .

  # Mahmud II's father
  dbr:Mahmud_II dbo:father ?successor .
}
```",5,7,6,3,3,3,3,71,0,0,1,0,0.0,0
976,41,val,"Give me the office of Naci Bostancı and office of the leader, that is a politician, of Grand National Assembly of Turkey and office of the mayor, that is a politician and an office holder and Turkish, of Nation Alliance (Turkey).",SELECT ?result WHERE { <http://dbpedia.org/resource/Nation_Alliance_(Turkey)> <http://dbpedia.org/property/leader> ?v4 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v4 <http://dbpedia.org/property/office> ?result . <http://dbpedia.org/resource/Grand_National_Assembly_of_Turkey> <http://dbpedia.org/ontology/leader> ?v2 . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. <http://dbpedia.org/resource/Naci_Bostancı> <http://dbpedia.org/property/office> ?result . ?v4 <http://dbpedia.org/ontology/nationality> <http://dbpedia.org/resource/Turkey>. ?v2 <http://dbpedia.org/property/office> ?result . },"```sparql
# Query for Naci Bostancı's office
SELECT ?office WHERE {
  wd:Q1234567 dbo:positionHeld ?office .
}

UNION

# Query for the Leader of the Grand National Assembly of Turkey (Speaker)
SELECT ?office WHERE {
  wd:Q7890123 dbo:positionHeld ?office .
}

UNION

# Query for a Mayor associated with Nation Alliance (Turkey) and is Turkish
SELECT DISTINCT ?mayor ?office WHERE {
  ?mayor rdf:type wd:Q11424 ; # Q11424 is the type for ""Mayor""
           dbo:nationality wd:Q30 ; # Q30 is the type for ""Turkish people""
           dbo:memberOf wd:Q12345678 . # Assuming Q12345678 represents Nation Alliance
  ?mayor dbo:positionHeld ?office .
}
```

Note: The placeholders `wd:Q1234567`, `wd:Q7890123`, and `wd:Q12345678` should be replaced with the actual DBpedia identifiers for Naci Bostancı, the Speaker of the Grand National Assembly of Turkey, and Nation Alliance (Turkey), respectively. These can be found by searching DBpedia or using a SPARQL endpoint to look up these entities.",5,9,6,2,3,3,3,71,0,0,1,0,0.0,0
645,44,val,"Give me the leader of the office, that is a government agency and an organisation, of Camilo Menéndez Tolosa and military force of the force, that is an event and a military conflict and a societal event, of Francisco Largo Caballero and commander in Battle of Jarama.",SELECT ?result WHERE { ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/GovernmentAgency>. <http://dbpedia.org/resource/Camilo_Menéndez_Tolosa> <http://dbpedia.org/property/office> ?v2 . <http://dbpedia.org/resource/Battle_of_Jarama> <http://dbpedia.org/ontology/commander> ?result . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?v4 <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Francisco_Largo_Caballero> . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?v2 <http://dbpedia.org/ontology/leader> ?result . ?result <http://dbpedia.org/ontology/battle> ?v4 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?leaderOfOffice ?battleCommander WHERE {
  # Find the office led by Camilo Menéndez Tolosa
  ?office dbo:head dbr:Camilo_Menéndez_Tolosa .
  ?office a dbo:GovernmentAgency OR ?office a dbo:Organization .

  # Find the leader of that office
  ?leaderOfOffice dbo:head ?office .

  # Find the military force associated with Francisco Largo Caballero
  ?militaryForce dbo:participant dbr:Francisco_Largo_Caballero .
  ?militaryForce a dbo:MilitaryConflict .
  ?militaryForce a dbo:SocietalEvent .
  ?militaryForce a dbo:Event .

  # Find the commander in the Battle of Jarama
  ?battleCommander dbo:commander dbr:Battle_of_Jarama .
}
```",5,10,6,2,3,3,3,71,0,0,1,0,0.0,0
773,53,val,"Give me the parent of Carloman of Bavaria and spouse of the father of the parent of Bernard (son of Charles the Fat) and parent of the child, that is a royalty, of Louis the German.",SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?result <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Carloman_of_Bavaria> . ?v1 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Louis_the_German> . ?v1 <http://dbpedia.org/ontology/parent> ?result . ?v3 <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Bernard_(son_of_Charles_the_Fat)> . ?v2 <http://dbpedia.org/ontology/spouse> ?result . ?v3 <http://dbpedia.org/property/father> ?v2 . },"```sparql
SELECT DISTINCT ?individual WHERE {
  # Carloman of Bavaria's parent
  ?carloman dbo:parent ?parent1 .
  ?carloman dbp:name ""Carloman of Bavaria""@en .

  # Charles the Fat's parent and their spouse
  ?charlesFat dbo:child ?bernard .
  ?bernard rdfs:label ""Bernard (son of Charles the Fat)""@en .
  ?charlesFat dbo:parent ?grandparent .
  ?grandparent dbo:spouse ?spouse .

  # Louis the German's royal child and their parent
  ?louisGerman dbo:child ?royalChild .
  ?royalChild dbo:title ?title .
  FILTER EXISTS { ?title rdfs:label ?label . FILTER regex(?label, ""King|Queen"", ""i"") }
  ?royalChild dbo:parent ?parent2 .

  # Find the common individual
  FILTER (?parent1 = ?spouse && ?parent2 = ?spouse)
}
```",6,7,7,3,3,3,3,71,0,0,1,0,0.0,0
773,44,val,"Give me the parent of the child, that is a royalty, of Louis the German and spouse of Louis the German and parent of the successor of Charles the Bald.",SELECT ?result WHERE { ?v2 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Louis_the_German> . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. <http://dbpedia.org/resource/Charles_the_Bald> <http://dbpedia.org/ontology/successor> ?v4 . <http://dbpedia.org/resource/Louis_the_German> <http://dbpedia.org/ontology/spouse> ?result . ?result <http://dbpedia.org/ontology/child> ?v4 . ?v2 <http://dbpedia.org/ontology/parent> ?result . },"```sparql
SELECT ?parent WHERE {
  ?hildegarde wdt:P31 wd:Q215627; # Hildegarde of Vinzgouw (instance of a person)
              wdt:P26 wd:Q1343. # Spouse of Louis the German

  ?adalrich wdt:P22 ?hildegarde. # Adalrich is parent of Hildegarde
}
```",5,6,6,2,3,3,3,71,0,0,1,0,0.0,0
98,21,val,"Give me the entity in the region, that is a country, of Philippine Standard Time and region of Philippine Standard Time and birth place of Paolo Ballesteros.",SELECT ?result WHERE { ?v1 <http://dbpedia.org/property/timeZone> <http://dbpedia.org/resource/Philippine_Standard_Time> . ?result <http://dbpedia.org/ontology/timeZone> <http://dbpedia.org/resource/Philippine_Standard_Time> . ?result <http://dbpedia.org/ontology/country> ?v1 . <http://dbpedia.org/resource/Paolo_Ballesteros> <http://dbpedia.org/ontology/birthPlace> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?country WHERE {
  # Find the country using Philippine Standard Time
  ?timeZone dbo:country dbr:Philippines .
  
  # Ensure this is a country entity
  ?timeZone rdf:type dbo:Country .

  # Get the birthplace of Paolo Ballesteros
  dbr:Paolo_Ballesteros dbo:birthPlace ?birthPlace .

  # Match the country with the birthplace
  ?birthPlace rdfs:label ""Philippines""@en .
  
  # Bind the country to the result variable
  BIND(dbr:Philippines AS ?country)
}
```",4,5,5,2,3,2,3,28,0,0,2,0,0.0,0
987,55,val,"Give me the birth place of the actor of All for Free and birth place of the band, that is an artist and a musical artist, of Šako Polumenta and entity in the region, that is a country, of Central European Time.",SELECT ?result WHERE { ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. ?v5 <http://dbpedia.org/ontology/birthPlace> ?result . ?result <http://dbpedia.org/ontology/country> ?v0 . ?v0 <http://dbpedia.org/property/timeZone> <http://dbpedia.org/resource/Central_European_Time> . <http://dbpedia.org/resource/Šako_Polumenta> <http://dbpedia.org/ontology/associatedMusicalArtist> ?v2 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. <http://dbpedia.org/resource/All_for_Free> <http://dbpedia.org/property/starring> ?v5 . ?v2 <http://dbpedia.org/ontology/birthPlace> ?result . },"```sparql
# Query for the actor of ""All for Free"" and their birth place
SELECT ?actor ?birthPlace WHERE {
  ?movie dbo:title ""All for Free""@en .
  ?movie dbo:starring ?actor .
  ?actor dbo:birthPlace ?birthPlace .
}

UNION

# Query for Šako Polumenta's band and its birth place
SELECT ?band ?birthPlace WHERE {
  ?person foaf:name ""Šako Polumenta""@en .
  ?person dbo:memberOfBand ?band .
  ?band dbo:birthPlace ?birthPlace .
}

UNION

# Query for a country in the Central European Time region
SELECT ?country WHERE {
  ?country dbo:timeZone dbr:Central_European_Time .
}
```",6,9,7,2,3,3,3,71,0,0,1,0,0.0,0
158,16,val,"Give me the party of the successor, that is a prime minister and an office holder and a politician, of André Tardieu and entity in the award, that is a country, of Adelbert Cronkhite.",SELECT ?result WHERE { <http://dbpedia.org/resource/Adelbert_Cronkhite> <http://dbpedia.org/property/awards> ?v2 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. ?v3 <http://dbpedia.org/ontology/party> ?result . <http://dbpedia.org/resource/André_Tardieu> <http://dbpedia.org/ontology/successor> ?v3 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?result <http://dbpedia.org/ontology/country> ?v2 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/PrimeMinister>. },"```sparql
SELECT ?successorParty ?awardCountry WHERE {
  # Part 1: Find André Tardieu's successor and their political party
  ?tardieu dbo:officeHolder dbr:Prime_Minister_of_France .
  ?tardieu dbo:termStart ?startTardieu .
  ?successor dbo:officeHolder dbr:Prime_Minister_of_France ;
             dbo:termStart ?startSuccessor ;
             dbo:predecessor ?tardieu .
  FILTER(?startSuccessor > ?startTardieu) .
  ?successor dbo:party ?party .
  
  # Part 2: Find the award associated with Adelbert Cronkhite and its country
  ?cronkhite dbo:award ?award .
  ?award dbo:country ?country .

  BIND(?party AS ?successorParty)
  BIND(?country AS ?awardCountry)
}
```",4,8,5,2,2,3,2,20,0,0,1,0,0.0,0
715,51,val,"Give me the leader of the office, that is a government agency and an organisation, of the reference to Carlos Franco Iribarnegaray and commander in the force of Francisco Largo Caballero.","SELECT ?result WHERE { ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?v4 <http://dbpedia.org/ontology/commander> ?result . ?v1 <http://dbpedia.org/property/office> ?v2 . ?v2 <http://dbpedia.org/ontology/leader> ?result . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/GovernmentAgency>. ?v4 <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Francisco_Largo_Caballero> . ?v1 <http://xmlns.com/foaf/0.1/name> ""Carlos Franco Iribarnegaray""@en . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?officeLeader WHERE {
  # Identify Francisco Largo Caballero's command position
  ?caballero dbo:position ""Prime Minister of Spain""@en .
  
  # Find the government office associated with him
  ?governmentOffice dbo:head ?caballero ;
                   a dbo:GovernmentAgency .

  # Identify Carlos Franco Iribarnegaray's association with this office
  ?franco dbo:office ?governmentOffice .

  # Get the leader of the office during their time
  ?officeLeader dbo:position ""Prime Minister of Spain""@en .
}
```",5,7,6,3,2,3,3,71,0,0,1,0,0.0,0
83,7,val,Give me the player in the person born on 1995-07-07 and player in Albert Edward (soccer).,"SELECT ?result WHERE { <http://dbpedia.org/resource/Albert_Edward_(soccer)> <http://dbpedia.org/ontology/team> ?result . ?v0 <http://dbpedia.org/ontology/birthDate> ""1995-07-07""^^<http://www.w3.org/2001/XMLSchema#date> . ?v0 <http://dbpedia.org/ontology/team> ?result . }","```sparql
# Query for player born on 1995-07-07
SELECT ?player WHERE {
    ?player a dbo:FootballPlayer .
    ?player dbo:birthDate ""1995-07-07""^^xsd:date .
}

UNION

# Query for player associated with Albert Edward (soccer)
SELECT ?relatedPlayer WHERE {
    ?albertEdward a dbo:SoccerPlayer ;
                  foaf:name ""Albert Edward""@en .
    ?albertEdward dbo:alias ?alias .
    ?relatedPlayer foaf:alias ?alias .
}
```",3,3,4,2,2,2,2,9,0,0,1,0,0.0,0
987,40,val,"Give me the birth place of the band, that is an artist and a musical artist, of the band, that is an artist, of Dado Polumenta and entity in Montenegro and birth place of Moamer Kasumović.",SELECT ?result WHERE { ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. ?v3 <http://dbpedia.org/ontology/associatedMusicalArtist> ?v1 . ?v1 <http://dbpedia.org/ontology/birthPlace> ?result . <http://dbpedia.org/resource/Dado_Polumenta> <http://dbpedia.org/ontology/associatedMusicalArtist> ?v3 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?result <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Montenegro> . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. <http://dbpedia.org/resource/Moamer_Kasumović> <http://dbpedia.org/ontology/birthPlace> ?result . },"```sparql
SELECT ?birthPlace WHERE {
  ?band rdf:type dbo:MusicalArtist ;
        foaf:name ""Bijelo Dugme""@en .
  OPTIONAL { ?band dbp:birthPlace ?birthPlace . }
}
```",5,8,6,3,3,3,3,71,0,0,1,0,0.0,0
433,53,val,"Give me the professional in the profession of Bob Marley and associated musical artist of Bill Evans and associated musical artist of the person born, that is a musical artist and an artist, as the persona of Paul Chambers.",SELECT ?result WHERE { <http://dbpedia.org/resource/Paul_Chambers> <http://xmlns.com/foaf/0.1/givenName> ?v3 . ?v2 <http://dbpedia.org/property/birthName> ?v3 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?v2 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . <http://dbpedia.org/resource/Bill_Evans> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . <http://dbpedia.org/resource/Bob_Marley> <http://dbpedia.org/property/occupation> ?v1 . ?result <http://dbpedia.org/property/occupation> ?v1 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?person WHERE {
  # Bob Marley's profession
  dbr:Bob_Marley dbo:profession dbr:Singer-songwriter .
  
  # Bill Evans' associated artist
  OPTIONAL { 
    dbr:Bill_Evans dbo:associatedMusicalArtist dbr:Miles_Davis .
  }
  
  # Paul Chambers' persona
  OPTIONAL {
    dbr:Paul_Chambers dbo:associatedMusicalArtist dbr:John_Coltrane .
  }

  # David Bowie as a musical artist and another type of artist
  OPTIONAL {
    dbr:David_Bowie dbo:profession dbr:Singer-songwriter ;
                    dbo:occupation dbr:Actor .
  }
  
  # Mick Jagger's association with David Bowie
  OPTIONAL {
    dbr:Mick_Jagger dbo:associatedMusicalArtist dbr:David_Bowie .
  }

  # Find the person who fits all criteria
  ?person dbo:profession dbr:Singer-songwriter ;
          dbo:associatedMusicalArtist dbr:Miles_Davis ;
          dbo:associatedMusicalArtist dbr:John_Coltrane ;
          dbo:associatedMusicalArtist dbr:David_Bowie .
}
```",6,8,7,3,3,3,3,71,0,0,1,0,0.0,0
507,44,val,"Give me the professional in the profession of Guy Ferland and spouse of Anne V. Coates and director of the movie, that is a movie and a work, with Beryl Reid.",SELECT ?result WHERE { ?result <http://dbpedia.org/property/occupation> ?v2 . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. <http://dbpedia.org/resource/Guy_Ferland> <http://dbpedia.org/property/occupation> ?v2 . ?v4 <http://dbpedia.org/property/starring> <http://dbpedia.org/resource/Beryl_Reid> . ?result <http://dbpedia.org/ontology/spouse> <http://dbpedia.org/resource/Anne_V._Coates> . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Film>. ?v4 <http://dbpedia.org/ontology/director> ?result . },"```sparql
SELECT ?person WHERE {
  # Guy Ferland's profession (editor)
  ?guyFerland dbo:profession dbr:Film_editor .
  
  # Anne V. Coates' spouse who is also a director and has worked with Beryl Reid
  ?anneVCoates dbo:spouse ?person .
  ?person dbo:profession dbr:Film_director .
  ?movie dbo:director ?person ;
         dbo:starring dbr:Beryl_Reid .

  # Ensure the person is in the same profession as Guy Ferland (editor)
  ?person dbo:profession dbr:Film_editor .
}
```",5,7,6,2,3,3,3,71,0,0,1,0,0.0,0
917,55,val,"Give me the child of the father of Keʻelikōlani and child of the father of Kamehameha IV and parent of the child, that is a royalty, of Kamehameha IV.",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/child> ?v2 . <http://dbpedia.org/resource/Kamehameha_IV> <http://dbpedia.org/property/father> ?v0 . <http://dbpedia.org/resource/Keʻelikōlani> <http://dbpedia.org/property/father> ?v5 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?result <http://dbpedia.org/ontology/parent> ?v5 . ?result <http://dbpedia.org/property/father> ?v0 . ?v2 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Kamehameha_IV> . },"```sparql
# Step 1: Find Keʻelikōlani's father
SELECT ?keelikoalanifather WHERE {
  wd:Q123456 dbo:child wd:Q789012 . # Assuming Q123456 is Keʻelikōlani and Q789012 is her father
}

# Step 2: Find Kamehameha IV's father
SELECT ?kamehamehavifather WHERE {
  wd:Q345678 dbo:child wd:Q901234 . # Assuming Q345678 is Kamehameha IV and Q901234 is his father
}

# Step 3: Find common child of both fathers
SELECT DISTINCT ?commonChild WHERE {
  ?commonChild dbo:parent ?keelikoalanifather .
  ?commonChild dbo:parent ?kamehamehavifather .
}

# Step 4: Identify parent of Kamehameha IV's child who is royalty
SELECT DISTINCT ?royalParent WHERE {
  ?child dbo:child wd:Q345678 . # Child of Kamehameha IV
  ?child dbo:parent ?commonChild .
  ?commonChild dbo:parent ?royalParent .
  ?royalParent dbo:royalTitle ?title . # Ensure the parent has a royal title
}
```

Note: The actual DBpedia IDs (e.g., `Q123456`, `Q789012`) need to be replaced with the correct identifiers for Keʻelikōlani, her father, Kamehameha IV, and his father.",6,7,7,2,3,3,3,71,0,0,1,0,0.0,0
826,54,val,"Give me the successor of the child, that is a royalty, of the reference, that is a royalty, to Louis I and predecessor of Louis IV, Grand Duke of Hesse and spouse of the child of Johann Heinrich Appel.","SELECT ?result WHERE { ?v3 <http://dbpedia.org/property/father> ""Johann Heinrich Appel""@en . ?v5 <http://dbpedia.org/ontology/successor> ?result . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v0 <http://xmlns.com/foaf/0.1/name> ""Louis I""@en . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?result <http://dbpedia.org/ontology/successor> <http://dbpedia.org/resource/Louis_IV,_Grand_Duke_of_Hesse> . ?v3 <http://dbpedia.org/ontology/spouse> ?result . ?v0 <http://dbpedia.org/ontology/child> ?v5 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>

SELECT ?successor WHERE {
  # Step 1: Identify Louis I as predecessor of Louis IV
  ?louisI dbo:predecessor ?reference ;
         a dbo:Monarch .

  # Step 2: Find the child of this reference who is royalty
  ?child dbo:parent ?reference ;
         a dbo:Monarch .

  # Step 3: Determine the successor of this child
  ?successor dbo:predecessor ?child .

  # Step 4: Identify Johann Heinrich Appel's child and find their spouse
  ?appelChild dbo:parent <http://dbpedia.org/resource/Johann_Heinrich_Appel> ;
              a dbo:Person .
  
  FILTER (?successor = ?spouse)
}
```",6,8,7,3,3,3,3,71,0,0,1,0,0.0,0
773,52,val,Give me the parent of Charles the Fat and parent of the successor of Charles the Bald and spouse of the father of the parent of Bernard (son of Charles the Fat).,SELECT ?result WHERE { ?v3 <http://dbpedia.org/property/father> ?v2 . ?result <http://dbpedia.org/ontology/child> ?v5 . <http://dbpedia.org/resource/Charles_the_Bald> <http://dbpedia.org/ontology/successor> ?v5 . <http://dbpedia.org/resource/Charles_the_Fat> <http://dbpedia.org/ontology/parent> ?result . ?v3 <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Bernard_(son_of_Charles_the_Fat)> . ?v2 <http://dbpedia.org/ontology/spouse> ?result . },"```sparql
# Query to find the parent of Charles the Fat
SELECT ?parent WHERE {
  wd:Q12345 wdt:P22 ?parent .
}

UNION

# Query to find the successor of Charles the Bald and their parent
SELECT ?successorParent WHERE {
  wd:Q67890 wdt:P136 ?successor . # P136 is ""position held""
  ?successor wdt:P39 wd:Q12345 .   # Assuming Charles the Bald's position is linked to his successor
  ?successor wdt:P22 ?successorParent .
}

UNION

# Query to find the spouse of the father of the parent of Bernard (son of Charles the Fat)
SELECT ?spouse WHERE {
  wd:Q23456 wdt:P22 ?bernardParent . # Bernard's parent
  ?bernardParent wdt:P22 ?grandparent . # Parent of Bernard's parent
  ?grandparent wdt:P25 ?grandfather .   # Father of the grandparent
  ?grandfather wdt:P26 ?spouse .        # Spouse of the grandfather
}
```

Note: Replace `wd:Q12345`, `wd:Q67890`, and `wd:Q23456` with the actual DBpedia identifiers for Charles the Fat, Charles the Bald, and Bernard respectively. These identifiers can be found by querying DBpedia or using a resource like Wikidata.",6,6,7,3,3,3,3,71,0,0,1,0,0.0,0
459,22,val,"Give me the governor of the death place, that is a settlement, of Cliff Roquemore and governor of the administration, that is a politician, of Brad Henry.",SELECT ?result WHERE { ?v3 <http://dbpedia.org/property/governor> ?result . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. <http://dbpedia.org/resource/Cliff_Roquemore> <http://dbpedia.org/ontology/deathPlace> ?v2 . ?v2 <http://dbpedia.org/property/governor> ?result . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v3 <http://dbpedia.org/property/governor> <http://dbpedia.org/resource/Brad_Henry> . },"```sparql
# Part 1: Governor of Cliff Roquemore's death place
SELECT ?governor WHERE {
    ?cliff foaf:name ""Cliff Roquemore"" .
    ?cliff dbo:deathPlace ?deathPlace .
    ?deathPlace a dbo:Settlement .
    ?state dbo:capital ?deathPlace .
    ?state dbo:governmentHead ?governor .
    ?governor dbo:officeHolder ?term .
    ?term dbo:endDate ?endDate .
    FILTER EXISTS { ?cliff dbo:dateOfDeath ?dateOfDeath . ?dateOfDeath < ?endDate }
}

UNION

# Part 2: Governor of Brad Henry's administration
SELECT ?governor WHERE {
    ?brad foaf:name ""Brad Henry"" .
    ?brad dbo:officeHolder ?term .
    ?term dbo:position dbr:Governor_of_Oklahoma .
    ?term dbo:startDate ?startDate .
    ?term dbo:endDate ?endDate .
    ?state dbo:governmentHead ?governor .
    FILTER (?startDate <= ?termStartDate && ?termEndDate <= ?endDate)
}
```",4,6,5,2,2,2,3,28,0,0,1,0,0.0,0
329,20,val,"Give me the entity in Northern Ireland and entity in the region, that is a country, of Western European Time and birthplace of Eric Cross (writer).",SELECT ?result WHERE { ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. ?v3 <http://dbpedia.org/property/timeZone> <http://dbpedia.org/resource/Western_European_Time> . <http://dbpedia.org/resource/Eric_Cross_(writer)> <http://dbpedia.org/ontology/birthPlace> ?result . ?result <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Northern_Ireland> . ?result <http://dbpedia.org/ontology/country> ?v3 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?entityInNorthernIreland ?regionEntity WHERE {
  # Find Eric Cross and his birthplace in Northern Ireland
  ?writer a dbo:Writer ;
          foaf:name ""Eric Cross"" ;
          dbo:birthPlace ?birthPlace .
  
  ?birthPlace dbp:country dbr:Northern_Ireland ;
              rdfs:label ?entityInNorthernIreland .

  # Find the region of the country using Western European Time
  ?regionEntity a dbo:Region ;
                dbo:timeZone dbr:Western_European_Time ;
                dbo:partOfCountry dbr:Ireland .
  
  FILTER(CONTAINS(LCASE(?entityInNorthernIreland), ""county down""))
}
```",4,5,5,2,3,2,3,28,0,0,1,0,0.0,0
47,42,val,Give me the office of the awardee of Padma Vibhushan and office of Bidesh Ranjan Bose and office of the administration of Jagdeep Dhankhar.,SELECT ?result WHERE { ?v2 <http://dbpedia.org/property/governor> <http://dbpedia.org/resource/Jagdeep_Dhankhar> . ?v2 <http://dbpedia.org/property/office> ?result . ?v1 <http://dbpedia.org/property/office> ?result . ?v1 <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/Padma_Vibhushan> . <http://dbpedia.org/resource/Bidesh_Ranjan_Bose> <http://dbpedia.org/property/office> ?result . },"```sparql
# Query for an awardee of Padma Vibhushan (example: Lata Mangeshkar)
SELECT ?office WHERE {
  wd:Q123456 wdt:P39 ?office .
}

# Query for Bidesh Ranjan Bose
SELECT ?office WHERE {
  wd:Q789012 wdt:P39 ?office .
}

# Query for Jagdeep Dhankhar
SELECT ?office WHERE {
  wd:Q345678 wdt:P39 ?office .
}
```

Note: The `wd:Q123456`, `wd:Q789012`, and `wd:Q345678` are placeholders for the actual DBpedia resource identifiers of Lata Mangeshkar, Bidesh Ranjan Bose, and Jagdeep Dhankhar, respectively. You would need to replace these with the correct QIDs from DBpedia.",5,5,6,2,3,3,3,71,0,0,1,0,0.0,0
791,47,val,"Give me the predecessor of the child of the child, that is an office holder and a royalty, of Emperor Go-Shirakawa and spouse of the spouse, that is a royalty, of Emperor Takakura.",SELECT ?result WHERE { ?v4 <http://dbpedia.org/property/father> ?v0 . ?result <http://dbpedia.org/ontology/spouse> ?v2 . ?result <http://dbpedia.org/ontology/successor> ?v4 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v0 <http://dbpedia.org/ontology/parent> <http://dbpedia.org/resource/Emperor_Go-Shirakawa> . ?v2 <http://dbpedia.org/ontology/spouse> <http://dbpedia.org/resource/Emperor_Takakura> . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. },"```sparql
# Step 1: Find a child of Emperor Go-Shirakawa who is an office holder and royalty
SELECT ?child WHERE {
    ?goShirakawa dbo:spouse ?parent .
    ?parent dbo:child ?child .
    FILTER (str(?goShirakawa) = ""Emperor_Go-Shirakawa"")
    ?child a dbo:Royalty ;
           a dbo:OfficeHolder .
}

# Step 2: Find the child of that child
SELECT ?grandChild WHERE {
    ?child dbo:child ?grandChild .
    # Assuming ?child is bound from previous query result
}

# Step 3: Determine the predecessor of this grandchild
SELECT ?predecessor WHERE {
    ?grandChild dbo:predecessor ?predecessor .
    # Assuming ?grandChild is bound from previous query result
}

# Step 4: Find the spouse of Emperor Takakura who is royalty
SELECT ?spouse WHERE {
    ?takakura dbo:spouse ?parent .
    ?parent dbo:child ?spouse .
    FILTER (str(?takakura) = ""Emperor_Takakura"")
    ?spouse a dbo:Royalty .
}

# Step 5: Find the spouse of that spouse
SELECT ?finalSpouse WHERE {
    ?spouse dbo:spouse ?finalSpouse .
    # Assuming ?spouse is bound from previous query result
}

# Final step: Combine results to find if the predecessor is also the final spouse
SELECT DISTINCT ?predecessor WHERE {
    { SELECT ?predecessor WHERE {
        ?grandChild dbo:predecessor ?predecessor .
        # Assuming ?grandChild is bound from previous query result
    }}
    { SELECT ?finalSpouse WHERE {
        ?spouse dbo:spouse ?finalSpouse .
        # Assuming ?spouse is bound from previous query result
    }}
    FILTER (?predecessor = ?finalSpouse)
}
```",5,8,6,3,2,3,3,71,0,0,1,0,0.0,0
865,52,val,"Give me the father of Shahla Khatun and father of the child, that is a politician, of Abu Ahmad Abdul Hafiz and native of the residence, that is a country, of the person decedent at Patna.",SELECT ?result WHERE { ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. <http://dbpedia.org/resource/Shahla_Khatun> <http://dbpedia.org/property/father> ?result . ?v1 <http://dbpedia.org/ontology/deathPlace> <http://dbpedia.org/resource/Patna> . ?v1 <http://dbpedia.org/property/residence> ?v0 . ?v4 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Abu_Ahmad_Abdul_Hafiz> . ?result <http://dbpedia.org/ontology/birthPlace> ?v0 . ?v4 <http://dbpedia.org/property/father> ?result . },"```sparql
# Step 1: Find Shahla Khatun's father
SELECT ?father WHERE {
  ?shahla dbo:mother ?person .
  ?person foaf:name ""Shahla Khatun"" .
  ?person dbo:parent ?father .
}

UNION

# Step 2: Find Abu Ahmad Abdul Hafiz's child who is a politician and their father
SELECT ?childFather WHERE {
  ?abuAhmad dbo:child ?child .
  ?abuAhmad foaf:name ""Abu Ahmad Abdul Hafiz"" .
  ?child dbo:occupation dbc:Politicians .
  ?child dbo:parent ?childFather .
}

UNION

# Step 3: Find the native country of the person who died in Patna
SELECT ?country WHERE {
  ?person dbo:deathPlace dbr:Patna .
  ?person dbo:nationality ?nationality .
  ?nationality rdfs:label ?country .
  FILTER (lang(?country) = ""en"")
}

# Step 4: Combine the information to ensure fathers are from the same country
SELECT DISTINCT ?father, ?childFather WHERE {
  # Shahla Khatun's father
  {
    SELECT ?shahlaFather WHERE {
      ?shahla dbo:mother ?person .
      ?person foaf:name ""Shahla Khatun"" .
      ?person dbo:parent ?shahlaFather .
      ?shahlaFather dbo:nationality ?nationality1 .
      ?nationality1 rdfs:label ?country .
      FILTER (lang(?country) = ""en"")
    }
  }

  # Abu Ahmad Abdul Hafiz's child who is a politician and their father
  {
    SELECT ?childFather WHERE {
      ?abuAhmad dbo:child ?child .
      ?abuAhmad foaf:name ""Abu Ahmad Abdul Hafiz"" .
      ?child dbo:occupation dbc:Politicians .
      ?child dbo:parent ?childFather .
      ?childFather dbo:nationality ?nationality2 .
      ?nationality2 rdfs:label ?country .
      FILTER (lang(?country) = ""en"")
    }
  }

  # Ensure both fathers are from the same country
  VALUES ?country { ?country1 ?country2 }
}
```",6,8,7,3,3,3,3,71,0,0,1,0,0.0,0
281,21,val,Give me the awardee of Medal bar and awardee of the award of Alfred Warden and commander in New Guinea campaign.,SELECT ?result WHERE { <http://dbpedia.org/resource/New_Guinea_campaign> <http://dbpedia.org/ontology/commander> ?result . ?result <http://dbpedia.org/property/awards> ?v0 . ?result <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/Medal_bar> . <http://dbpedia.org/resource/Alfred_Warden> <http://dbpedia.org/property/awards> ?v0 . },"```sparql
# Query for the awardee of the Medal Bar
SELECT ?person WHERE {
  ?award dbo:recipient ?person .
  ?award rdf:type dbo:MilitaryMedalAward .
  ?award dbo:name ""Medal of Honor"" .
  ?award dbo:device ""Medal Bar"" .
}

UNION

# Query for the awardee of the Alfred Warden Award
SELECT ?person WHERE {
  ?award dbo:recipient ?person .
  ?award rdf:type dbo:Award .
  ?award dbo:name ""Alfred Warden Award"" .
}

UNION

# Query for a commander in the New Guinea Campaign
SELECT ?person WHERE {
  ?person dbo:occupation ""Military Commander"" ;
          dbo:participatedInBattle ?battle .
  ?battle dbo:name ""New Guinea Campaign"" .
}
```",4,4,5,2,3,2,3,28,0,0,1,0,0.0,0
826,51,val,"Give me the predecessor of the parent of the child of Louis IV, Grand Duke of Hesse and successor of the child, that is a royalty, of Louis I, Grand Duke of Hesse.","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/successor> ?v2 . ?v4 <http://dbpedia.org/ontology/successor> ?result . <http://dbpedia.org/resource/Louis_I,_Grand_Duke_of_Hesse> <http://dbpedia.org/ontology/child> ?v4 . ?v1 <http://dbpedia.org/ontology/parent> <http://dbpedia.org/resource/Louis_IV,_Grand_Duke_of_Hesse> . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v1 <http://dbpedia.org/ontology/parent> ?v2 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?predecessor ?successor WHERE {
  # Louis IV, Grand Duke of Hesse and his child
  dbr:Louis_IV,_Grand_Duke_of_Hesse dbo:child ?child .
  
  # Parent of the child (Louis IV)
  ?parent dbo:child ?child .
  
  # Predecessor of Louis IV
  ?predecessor dbo:successor dbr:Louis_IV,_Grand_Duke_of_Hesse .

  # Louis I, Grand Duke of Hesse and his child
  dbr:Louis_I,_Grand_Duke_of_Hesse dbo:child ?child2 .
  
  # Successor of the child that is a royalty
  ?successor dbo:predecessor ?child2 .
  FILTER EXISTS { ?successor a dbo:Monarch }
}
```",5,6,6,3,2,3,3,71,0,0,1,0,0.0,0
465,52,val,"Give me the successor of Renée of France and successor of the child of the parent of Ercole II d'Este, Duke of Ferrara and spouse of the child, that is a royalty, of Ferdinand I, Holy Roman Emperor.","SELECT ?result WHERE { <http://dbpedia.org/resource/Ercole_II_d'Este,_Duke_of_Ferrara> <http://dbpedia.org/ontology/parent> ?v3 . <http://dbpedia.org/resource/Renée_of_France> <http://dbpedia.org/ontology/successor> ?result . ?result <http://dbpedia.org/ontology/spouse> ?v5 . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v2 <http://dbpedia.org/ontology/successor> ?result . <http://dbpedia.org/resource/Ferdinand_I,_Holy_Roman_Emperor> <http://dbpedia.org/ontology/child> ?v5 . ?v2 <http://dbpedia.org/property/father> ?v3 . }","```sparql
# Query for the successor of Renée of France
SELECT ?successor WHERE {
  ?renée dbo:spouse ?husband .
  ?renée rdfs:label ""Renée of France""@en .
  ?husband dbo:successor ?successor .
}

UNION

# Query for the child of Alfonso I d'Este (parent of Ercole II d'Este)
SELECT ?child WHERE {
  ?ercole dbo:parent ?alfonso .
  ?ercole rdfs:label ""Ercole II d'Este, Duke of Ferrara""@en .
  ?alfonso rdfs:label ""Alfonso I d'Este, Duke of Ferrara""@en .
  ?alfonso dbo:child ?child .
}

UNION

# Query for the successor of the child of Alfonso I d'Este
SELECT ?successor WHERE {
  ?child dbo:successor ?successor .
  ?alfonso rdfs:label ""Alfonso I d'Este, Duke of Ferrara""@en .
  ?alfonso dbo:child ?child .
}

UNION

# Query for the children of Ferdinand I who are royalty
SELECT ?royalChild WHERE {
  ?ferdinand dbo:child ?royalChild .
  ?ferdinand rdfs:label ""Ferdinand I, Holy Roman Emperor""@en .
  ?royalChild rdf:type dbo:RoyalPerson .
}

UNION

# Query for the spouse of the royal child
SELECT ?spouse WHERE {
  ?royalChild dbo:spouse ?spouse .
}
```",6,7,7,3,3,3,3,71,0,0,1,0,0.0,0
130,15,val,"Give me the figure known as the film, that is a soccer club and an organisation, of the native, that is a coach and a college coach, of Madison, Alabama and entity in Tennessee.","SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Coach>. ?v0 <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Madison,_Alabama> . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerClub>. ?result <http://dbpedia.org/property/nickname> ?v1 . ?v1 <http://dbpedia.org/ontology/director> ?v0 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/CollegeCoach>. ?result <http://dbpedia.org/ontology/state> <http://dbpedia.org/resource/Tennessee> . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?person ?club WHERE {
  ?person a dbo:SoccerPlayer ;
          dbo:nationality dbr:United_States ;
          dbo:birthPlace dbr:Madison,_Alabama ;
          dbo:occupation dbr:Soccer_coach ;
          dbo:collegeCoach true .
  
  OPTIONAL { ?person dbo:associatedWith dbr:Tennessee . }
  
  ?association dbo:agent ?person ;
               dbo:club ?club .
}
```",4,8,5,3,2,3,2,20,0,0,1,0,0.0,0
791,45,val,"Give me the father of the child, that is a royalty, of the father, that is a royalty and an office holder, of Emperor Antoku and predecessor of Emperor Antoku and spouse of Taira no Tokuko.",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/spouse> <http://dbpedia.org/resource/Taira_no_Tokuko> . ?v1 <http://dbpedia.org/property/father> ?result . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v1 <http://dbpedia.org/property/father> ?v0 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?result <http://dbpedia.org/ontology/successor> <http://dbpedia.org/resource/Emperor_Antoku> . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. <http://dbpedia.org/resource/Emperor_Antoku> <http://dbpedia.org/property/father> ?v0 . },"```sparql
SELECT ?father WHERE {
  wd:Q123456 wdt:P31/wdt:P279* wd:Q5; # Emperor Antoku is an instance of human
  wdt:P22 ?father. # Father of Emperor Antoku

  ?father wdt:P31/wdt:P279* wd:Q5; # The father is a human
          wdt:P39 ?office. # Holds an office (royalty or other)

  OPTIONAL { ?father wdt:P26 wd:Q123456 } . # Taira no Kiyomori as the predecessor of Emperor Antoku

  FILTER EXISTS {
    ?father wdt:P26 wd:Q789012 . # Taira no Kiyomori is spouse of Taira no Tokuko
  }
}
```

Note: Replace `wd:Q123456` with the actual DBpedia identifier for Emperor Antoku and `wd:Q789012` with the identifier for Taira no Tokuko.",5,8,6,3,3,3,3,71,0,0,1,0,0.0,0
978,17,val,Give me the band member of Enya and band member of the person born as the name of Chicane (musician).,SELECT ?result WHERE { ?v3 <http://dbpedia.org/property/birthName> ?v0 . ?result <http://dbpedia.org/ontology/associatedMusicalArtist> ?v3 . ?result <http://dbpedia.org/ontology/associatedMusicalArtist> <http://dbpedia.org/resource/Enya> . <http://dbpedia.org/resource/Chicane_(musician)> <http://xmlns.com/foaf/0.1/givenName> ?v0 . },"```sparql
# Query to find Enya's collaborators (band members)
SELECT ?collaborator WHERE {
  wd:Q15288 wdt:P106 wd:Q82955 . # Enya is a musician
  ?collaboration wdt:P527 wd:Q15288 . # Collaborations involving Enya
  ?collaboration wdt:P175 ?collaborator . # Collaborators in these collaborations
}

UNION

# Query to find Chicane's birth name and associated collaborators
SELECT ?collaborator WHERE {
  wd:Q177763 wdt:P735 wd:Q15288 . # Enya is a collaborator of Nick Bracegirdle (Chicane)
  ?chicaneCollaboration wdt:P527 wd:Q177763 . # Collaborations involving Chicane
  ?chicaneCollaboration wdt:P175 ?collaborator . # Collaborators in these collaborations
}
```",4,4,5,3,2,3,2,20,0,0,1,0,0.0,0
839,49,val,"Give me the band of the person born, that is a musical artist, as Kevin Richard Russell and band of the band, that is a musical artist, of the professional in Musician.","SELECT ?result WHERE { ?v0 <http://dbpedia.org/ontology/associatedMusicalArtist> ?v1 . ?v2 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?result <http://dbpedia.org/ontology/bandMember> ?v1 . ?v2 <http://dbpedia.org/property/birthName> ""Kevin Richard Russell""@en . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?v0 <http://dbpedia.org/property/occupation> ""Musician""@en . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. }","```sparql
# Query to find the band of Kevin Richard Russell
SELECT ?band WHERE {
  ?person dbo:birthName ""Kevin Richard Russell""@en .
  ?person a dbo:MusicalArtist .
  ?person dbo:associatedBand ?band .
}

UNION

# Query to find bands associated with musicians from The Blasters
SELECT DISTINCT ?relatedBand WHERE {
  ?blasterBand dbo:associatedBand ?musician .
  FILTER(CONTAINS(LCASE(?blasterBand), ""the blasters""))
  ?musician dbo:associatedBand ?relatedBand .
}
```",5,7,6,3,2,3,3,71,0,0,1,0,0.0,0
417,40,val,"Give me the child of Alexandrine of Mecklenburg-Schwerin and child of Christian X of Denmark and spouse of the parent, that is a royalty, of the child of Knud, Hereditary Prince of Denmark.","SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/child> ?v2 . ?result <http://dbpedia.org/ontology/parent> <http://dbpedia.org/resource/Alexandrine_of_Mecklenburg-Schwerin> . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?result <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Christian_X_of_Denmark> . ?v2 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Knud,_Hereditary_Prince_of_Denmark> . ?result <http://dbpedia.org/ontology/spouse> ?v1 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?child WHERE {
  # Alexandrine of Mecklenburg-Schwerin and Christian X of Denmark's child
  VALUES (?parent1) { (dbr:Alexandrine_of_Mecklenburg-Schwerin dbr:Christian_X_of_Denmark) }
  
  # Knud, Hereditary Prince of Denmark's child
  ?child2 dbo:spouse ?parent2 .
  ?child2 dbo:father dbr:Knud,_Hereditary_Prince_of_Denmark .

  # Parent of Joachim (Princess Benedikte)
  ?parent2 dbo:spouse ?grandParent .
  
  # Spouse of the parent of Joachim
  ?grandParent dbo:spouse ?spouseOfGrandParent .

  # Child of Margrethe II who is royalty and related to these individuals
  ?child dbo:mother dbr:Margrethe_II_of_Denmark .
  ?child dbo:father ?parent1 .
  
  FILTER(?child = ?child2)
}
```",5,6,6,3,3,3,3,71,0,0,1,0,0.0,0
554,16,val,Give me the leader of the birth place of The Legendary Tigerman and leader of the administration of Francisco da Costa Gomes.,SELECT ?result WHERE { ?v2 <http://dbpedia.org/property/leader> <http://dbpedia.org/resource/Francisco_da_Costa_Gomes> . ?v2 <http://dbpedia.org/property/leader> ?result . ?v3 <http://dbpedia.org/property/leader> ?result . <http://dbpedia.org/resource/The_Legendary_Tigerman> <http://dbpedia.org/ontology/birthPlace> ?v3 . },"```sparql
# Part 1: Find the birthplace of The Legendary Tigerman and its current leader
SELECT ?birthPlaceLabel ?leaderLabel WHERE {
  # Identify the birthplace of José Manuel Cerqueira Afonso dos Santos (The Legendary Tigerman)
  wd:Q123456 wdt:P19 ?birthPlace. # Replace Q123456 with the actual DBpedia ID for The Legendary Tigerman

  # Get the label for the birthplace
  SERVICE wikibase:label { bd:serviceParam wikibase:language ""[AUTO_LANGUAGE],en"". }
  
  # Find the current leader of the birthplace (e.g., mayor or governor)
  ?birthPlace wdt:P6 ?leader. # P6 is a placeholder property; replace with actual property for local leadership
} 

UNION

# Part 2: Identify Francisco da Costa Gomes's role and confirm his presidency
SELECT ?roleLabel WHERE {
  wd:Q654321 wdt:P39 ?role. # Replace Q654321 with the actual DBpedia ID for Francisco da Costa Gomes
  
  # Get the label for the role
  SERVICE wikibase:label { bd:serviceParam wikibase:language ""[AUTO_LANGUAGE],en"". }
  
  FILTER(?role = wd:Q1234567) # Replace Q1234567 with the DBpedia ID for President of Portugal
}
```

Note: The placeholders `wd:Q123456`, `wd:Q654321`, and property IDs like `P19` (place of birth), `P6` (leader), and `P39` (occupation) need to be replaced with actual identifiers from DBpedia. Additionally, the specific property for local leadership might vary depending on the type of administrative division.",4,4,5,2,2,3,2,20,0,0,3,0,0.0,0
715,52,val,"Give me the commander in the force, that is a military conflict, of the native of Morocco and leader of Ministry of the Air (Spain) and commander in the force of Francisco Largo Caballero.",SELECT ?result WHERE { ?v2 <http://dbpedia.org/ontology/commander> ?v3 . ?v2 <http://dbpedia.org/ontology/commander> ?result . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v3 <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Morocco> . <http://dbpedia.org/resource/Ministry_of_the_Air_(Spain)> <http://dbpedia.org/ontology/leader> ?result . ?v5 <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Francisco_Largo_Caballero> . ?v5 <http://dbpedia.org/ontology/commander> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?person WHERE {
  ?person dbo:nationality dbr:Morocco .
  ?person dbo:occupation dbr:Military_officer .
  ?person dbo:leaderOf dbr:Ministry_of_Air_(Spain) .
  ?conflict dbo:commander ?person ;
            dbo:participant dbr:Francisco_Largo_Caballero .
}
```",6,7,7,3,3,3,3,71,0,0,1,0,0.0,0
715,50,val,"Give me the commander in the force of the mayor, that is an office holder and a politician and a president, of 1933 Spanish general election and leader of the office, that is a government agency and an organisation, of Carlos Franco Iribarnegaray.",SELECT ?result WHERE { ?v4 <http://dbpedia.org/ontology/commander> ?v0 . <http://dbpedia.org/resource/Carlos_Franco_Iribarnegaray> <http://dbpedia.org/property/office> ?v3 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/GovernmentAgency>. ?v4 <http://dbpedia.org/ontology/commander> ?result . <http://dbpedia.org/resource/1933_Spanish_general_election> <http://dbpedia.org/property/leader> ?v0 . ?v3 <http://dbpedia.org/ontology/leader> ?result . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/President>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?commander WHERE {
  ?election dbo:date ""1933""^^xsd:gYear .
  ?election dbo:electionFor dbr:Spain .
  
  ?mayor dbo:officeHolderOf ?office .
  ?office dbo:type dbr:Government_Agency ; dbo:type dbr:Organization .

  ?commander dbo:positionHeld ?mayorPosition ;
             dbo:officeHolderOf ?office ;
             dbo:politicalParty ?party ;
             dbo:presidentOf ?country .

  ?country rdfs:label ""Spain""@en .
  
  ?commander dbo:leaderOf ?agency .
  ?agency dbo:type dbr:Government_Agency ; dbo:type dbr:Organization .

  ?franco dbr:Carlos_Franco_Iribarnegaray ;
          dbo:relatedTo ?commander .
}
```",5,10,6,3,2,3,3,71,0,0,1,0,0.0,0
917,45,val,"Give me the child of Kekūanāoʻa and child of the father of the child, that is a royalty, of Kamehameha III and parent of Albert Kamehameha.",SELECT ?result WHERE { ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v3 <http://dbpedia.org/property/father> ?v0 . <http://dbpedia.org/resource/Kamehameha_III> <http://dbpedia.org/ontology/child> ?v3 . ?result <http://dbpedia.org/ontology/parent> <http://dbpedia.org/resource/Kekūanāoʻa> . ?result <http://dbpedia.org/property/father> ?v0 . ?result <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Albert_Kamehameha> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?person WHERE {
  ?person dbo:parent dbr:Kekūanāoʻa .
  ?person dbo:child dbr:Lorrin_A._Thurston .
  ?person rdf:type dbo:Monarch .
  ?person dbo:spouse ?spouse .
  ?spouse dbo:child dbr:Albert_Kamehameha .
  ?person dbo:parent dbr:Kamehameha_III .
}
```",5,6,6,3,3,3,3,71,0,0,1,0,0.0,0
459,21,val,Give me the person born as the birth name of Kevin Stitt and governor of Oklahoma and governor of Dana Murphy.,SELECT ?result WHERE { <http://dbpedia.org/resource/Kevin_Stitt> <http://dbpedia.org/property/birthName> ?v1 . <http://dbpedia.org/resource/Oklahoma> <http://dbpedia.org/property/governor> ?result . ?result <http://dbpedia.org/property/birthName> ?v1 . <http://dbpedia.org/resource/Dana_Murphy> <http://dbpedia.org/property/governor> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT ?person ?birthName ?governorRole
WHERE {
  ?person a dbo:Person ;
          foaf:name ""Kevin Stitt"" ;
          dbo:birthName ?birthName .
  
  OPTIONAL { 
    ?person dbo:governmentPosition [
      a dbo:GovernmentPost ;
      dbo:officeHolder ?holder ;
      dbo:officeName ?governorRole
    ] .
  }
  
  FILTER (?birthName = ""Dana Murphy"")
  
  # Check if the person is associated with being governor of Oklahoma
  OPTIONAL {
    ?person dbo:governmentPosition [
      a dbo:GovernmentPost ;
      dbo:officeHolder ?holder ;
      dbo:officeName ?governorRole ;
      dbo:country dbr:Oklahoma
    ] .
  }
  
  # Check if the person is associated with being governor under the name Dana Murphy
  OPTIONAL {
    ?person foaf:name ""Dana Murphy"" .
  }
}
```",4,4,5,2,3,2,3,28,0,0,1,0,0.0,0
373,7,val,"Give me the professional in Singer, songwriter and writer of the work, that is a single and a musical work and a work and a soundtrack, of .","SELECT ?result WHERE { ?v2 <http://dbpedia.org/property/writer> """"@en . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Single>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?v2 <http://dbpedia.org/property/writer> ?result . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Song>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalWork>. ?result <http://dbpedia.org/property/occupation> ""Singer, songwriter""@en . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?person WHERE {
  ?person a dbo:Singer .
  ?person a dbo:Songwriter .
  ?person a dbo:Writer .

  OPTIONAL { ?work dbo:artist ?person . }
  OPTIONAL { ?work dbo:type dbr:Single . }
  OPTIONAL { ?work dbo:type dbr:MusicalWork . }
  OPTIONAL { ?work dbo:type dbr:Soundtrack . }

  FILTER EXISTS { ?work a dbo:Single }
  FILTER EXISTS { ?work a dbo:MusicalWork }
  FILTER EXISTS { ?work a dbo:Soundtrack }
}
```",3,7,4,2,2,2,2,9,0,0,78,0,0.0,0
826,40,val,"Give me the spouse of the child of the father of Anna Magdalena Appel and predecessor of Louis IV, Grand Duke of Hesse and successor of Louis II, Grand Duke of Hesse.","SELECT ?result WHERE { <http://dbpedia.org/resource/Louis_II,_Grand_Duke_of_Hesse> <http://dbpedia.org/ontology/successor> ?result . ?v1 <http://dbpedia.org/ontology/spouse> ?result . <http://dbpedia.org/resource/Anna_Magdalena_Appel> <http://dbpedia.org/property/father> ?v2 . ?v1 <http://dbpedia.org/property/father> ?v2 . ?result <http://dbpedia.org/ontology/successor> <http://dbpedia.org/resource/Louis_IV,_Grand_Duke_of_Hesse> . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?spouse WHERE {
  # Step 1: Identify Anna Magdalena Bach's father
  dbr:Anna_Magdalena_Bach dbo:father ?father .

  # Step 2: Find the child of Anna Magdalena Bach's father
  ?child dbo:parent ?father .
  
  # Step 3: Identify Louis IV's predecessor (Louis III)
  dbr:Louis_IV,_Grand_Duke_of_Hesse dbo:predecessor ?predecessor .

  # Step 4: Identify Louis II's successor (Louis III)
  dbr:Louis_II,_Grand_Duke_of_Hesse dbo:successor ?successor .
  
  # Ensure the predecessor and successor are the same person
  FILTER (?predecessor = ?successor)

  # Step 5: Find the spouse of the child identified in step 2
  ?child dbo:spouse ?spouse .
}
```",5,5,6,3,3,3,3,71,0,0,1,0,0.0,0
465,40,val,"Give me the spouse of Archduchess Barbara of Austria and successor of Renée of France and successor of the child of the parent of Ercole II d'Este, Duke of Ferrara.","SELECT ?result WHERE { <http://dbpedia.org/resource/Renée_of_France> <http://dbpedia.org/ontology/successor> ?result . ?v1 <http://dbpedia.org/ontology/successor> ?result . ?result <http://dbpedia.org/ontology/spouse> <http://dbpedia.org/resource/Archduchess_Barbara_of_Austria> . <http://dbpedia.org/resource/Ercole_II_d'Este,_Duke_of_Ferrara> <http://dbpedia.org/ontology/parent> ?v2 . ?v1 <http://dbpedia.org/property/father> ?v2 . }","```sparql
# Step 1: Find Archduchess Barbara of Austria's spouse
SELECT ?spouse WHERE {
  wd:Q123456 wdt:P26 ?spouse .
}

# Step 2: Find successor of Renée of France
SELECT ?successor WHERE {
  wd:Q654321 wdt:P136 ?position .
  ?successor wdt:P136 ?position .
  FILTER(?successor != wd:Q654321)
}

# Step 3: Find successor of Ercole II d'Este, Duke of Ferrara
# Identify Ercole II's parent
SELECT ?parent WHERE {
  wd:Q789012 wdt:P22 ?parent .
}

# Find the child of that parent (Ercole II himself)
SELECT ?child WHERE {
  ?parent wdt:P40 ?child .
  FILTER(?child = wd:Q789012)
}

# Determine who succeeded Ercole II as Duke of Ferrara
SELECT ?successor WHERE {
  wd:Q789012 wdt:P39 ?position .
  ?successor wdt:P39 ?position .
  FILTER(?successor != wd:Q789012)
}

# Combine the results to find the common individual
SELECT DISTINCT ?individual WHERE {
  VALUES ?individual { 
    # Replace with actual QIDs from previous queries
    wd:Q999999 # Placeholder for spouse of Barbara
    wd:Q888888 # Placeholder for successor of Renée
    wd:Q777777 # Placeholder for successor of Ercole II
  }
}
```

Note: The placeholders `wd:Q123456`, `wd:Q654321`, `wd:Q789012`, `wd:Q999999`, `wd:Q888888`, and `wd:Q777777` need to be replaced with the actual QIDs for Archduchess Barbara of Austria, Renée of France, Ercole II d'Este, and their respective spouses or successors.",5,5,6,3,3,3,3,71,0,0,1,0,0.0,0
839,42,val,"Give me the band of Peter Schorowsky and band of the person born, that is a musical artist, as Kevin Richard Russell and band of the band, that is a musical artist, of Charlie Huhn.","SELECT ?result WHERE { ?v2 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?v2 <http://dbpedia.org/property/birthName> ""Kevin Richard Russell""@en . <http://dbpedia.org/resource/Charlie_Huhn> <http://dbpedia.org/ontology/associatedMusicalArtist> ?v1 . ?result <http://dbpedia.org/ontology/bandMember> ?v1 . ?result <http://dbpedia.org/ontology/bandMember> <http://dbpedia.org/resource/Peter_Schorowsky> . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. }","```sparql
# Query for Peter Schorowsky's Band
SELECT ?band WHERE {
  ?person foaf:name ""Peter Schorowsky"" .
  ?person dbo:associatedBand ?band .
}

UNION

# Query for Kevin Richard Russell's Birth and Confirmation as a Musical Artist
SELECT ?birthPlace WHERE {
  ?person foaf:name ""Kevin Richard Russell"" .
  ?person dbo:birthPlace ?birthPlace .
  FILTER EXISTS { ?person rdf:type dbo:MusicalArtist }
}

UNION

# Query for Charlie Huhn's Band
SELECT ?band WHERE {
  ?person foaf:name ""Charlie Huhn"" .
  ?person dbo:associatedBand ?band .
}
```",5,7,6,2,3,3,3,71,0,0,1,0,0.0,0
839,47,val,"Give me the band of the person born, that is a musical artist, as Kevin Richard Russell and band of the member of the band, that is a band and a group, of Peter Schorowsky.","SELECT ?result WHERE { ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Band>. ?v0 <http://dbpedia.org/ontology/bandMember> ?v4 . ?result <http://dbpedia.org/ontology/bandMember> ?v4 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Group>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. <http://dbpedia.org/resource/Peter_Schorowsky> <http://dbpedia.org/ontology/associatedMusicalArtist> ?v0 . ?v2 <http://dbpedia.org/property/birthName> ""Kevin Richard Russell""@en . ?v2 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . }","```sparql
# Query for Kevin Richard Russell's Band
SELECT ?band WHERE {
  ?person dbo:birthName ""Kevin Richard Russell""@en .
  ?person rdf:type dbo:MusicalArtist .
  ?person dbo:associatedBand ?band .
}

UNION

# Query for Peter Schorowsky's Band and its Members' Bands
SELECT DISTINCT ?memberBand WHERE {
  ?band a dbo:Band, dbo:MusicalGroup ;
        dbo:member ?member .
  FILTER(?member = dbpedia:Peter_Schorowsky) .
  
  OPTIONAL { 
    ?member dbo:associatedBand ?memberBand .
  }
}
```",5,8,6,3,2,3,3,71,0,0,1,0,0.0,0
192,15,val,"Give me the spouse of the spouse, that is a royalty, of the child of Charles II of Naples and child of Mary of Hungary, Queen of Naples.","SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/spouse> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?result <http://dbpedia.org/ontology/parent> <http://dbpedia.org/resource/Mary_of_Hungary,_Queen_of_Naples> . ?v0 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Charles_II_of_Naples> . ?v1 <http://dbpedia.org/ontology/spouse> ?v0 . }","```sparql
SELECT ?royalSpouse WHERE {
  ?person dbo:parent dbr:Charles_II_of_Naples .
  ?person dbo:parent dbr:Mary_of_Hungary_(Queen_of_Naples) .
  
  ?spouse1 dbo:spouse ?person .
  
  OPTIONAL { 
    ?spouse2 dbo:spouse ?spouse1 .
    ?spouse2 a dbo:RoyalFamilyMember .
  }
  
  FILTER EXISTS {
    ?spouse2 a dbo:RoyalFamilyMember
  }
}
```",4,5,5,3,2,3,2,20,0,0,1,0,0.0,0
715,54,val,"Give me the commander in the force of the mayor, that is an office holder and a politician and a president, of 1933 Spanish general election and commander in the force, that is a military conflict, of Abd el-Krim and leader of Ministry of the Air (Spain).",SELECT ?result WHERE { <http://dbpedia.org/resource/1933_Spanish_general_election> <http://dbpedia.org/property/leader> ?v0 . ?v5 <http://dbpedia.org/ontology/commander> ?v0 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/President>. ?v5 <http://dbpedia.org/ontology/commander> ?result . ?v3 <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Abd_el-Krim> . ?v3 <http://dbpedia.org/ontology/commander> ?result . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. <http://dbpedia.org/resource/Ministry_of_the_Air_(Spain)> <http://dbpedia.org/ontology/leader> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?person WHERE {
  ?person a dbo:Person .
  ?person foaf:name ""Manuel Azaña""@en .

  # Check if he was President of Spain during the relevant period
  ?presidency dbo:officeHolder ?person ;
              dbo:positionTitle dbr:President_of_Spain .
  
  # Check his involvement in the Rif War against Abd el-Krim
  ?militaryRole dbo:agent ?person ;
                dbo:place dbr:Rif_War ;
                dbo:oppositeSide dbr:Abd_el-Krim .

  # Check if he was leader of the Ministry of the Air (Spain)
  ?ministryRole dbo:officeHolder ?person ;
                dbo:positionTitle dbr:Ministry_of_the_Air_(Spain) .
}
```",6,10,7,3,3,3,3,71,0,0,1,0,0.0,0
281,22,val,"Give me the commander in the war, that is an event and a military conflict, of Roy Boehm and awardee of the award, that is a military conflict, of Lawrence Moore Cosgrave.",SELECT ?result WHERE { <http://dbpedia.org/resource/Roy_Boehm> <http://dbpedia.org/ontology/battle> ?v2 . ?result <http://dbpedia.org/property/awards> ?v3 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. <http://dbpedia.org/resource/Lawrence_Moore_Cosgrave> <http://dbpedia.org/property/awards> ?v3 . ?v2 <http://dbpedia.org/ontology/commander> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?event WHERE {
  # Roy Boehm's war command
  ?boehm dbo:occupation dbr:Military_person ;
         dbo:commanded ?war .
  
  FILTER (str(?boehm) = ""Roy Boehm"") .

  # Lawrence Moore Cosgrave's award
  ?cosgrave dbo:awardReceived ?award ;
            dbo:occupation dbr:Military_person .
  
  FILTER (str(?cosgrave) = ""Lawrence Moore Cosgrave"") .
  ?award dbo:name ?awardName .
  FILTER regex(str(?awardName), ""war"", ""i"") .

  # Find the common event or conflict
  ?event dbo:partOf ?war ;
         dbo:partOf ?award .
}
```",4,7,5,2,2,2,3,28,0,0,3,0,0.0,0
47,54,val,"Give me the office of Ajoy Mukherjee and office of the administration of Jagdeep Dhankhar and office of the awardee of the award, that is an award, of Mantu Ghosh.",SELECT ?result WHERE { ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Award>. ?v5 <http://dbpedia.org/property/office> ?result . <http://dbpedia.org/resource/Mantu_Ghosh> <http://dbpedia.org/property/awards> ?v0 . ?v3 <http://dbpedia.org/property/governor> <http://dbpedia.org/resource/Jagdeep_Dhankhar> . ?v3 <http://dbpedia.org/property/office> ?result . <http://dbpedia.org/resource/Ajoy_Mukherjee> <http://dbpedia.org/property/office> ?result . ?v5 <http://dbpedia.org/property/awards> ?v0 . },"```sparql
# Query for Ajoy Mukherjee's office
SELECT ?office WHERE {
  ?person foaf:name ""Ajoy Mukherjee""@en .
  ?person dbo:office ?office .
}

UNION

# Query for Jagdeep Dhankhar's current administrative office
SELECT ?office WHERE {
  ?person foaf:name ""Jagdeep Dhankhar""@en .
  ?person dbo:currentAdministrativePost ?post .
  ?post rdfs:label ?office .
  FILTER(lang(?office) = 'en')
}

UNION

# Query for Mantu Ghosh's award and the office of its awardee
SELECT DISTINCT ?awardOffice WHERE {
  ?person foaf:name ""Mantu Ghosh""@en .
  ?person dbo:awardsReceived ?award .
  
  # Assuming we find a specific award, e.g., Padma Shri
  OPTIONAL { 
    ?award rdfs:label ?awardLabel .
    FILTER(CONTAINS(LCASE(?awardLabel), ""padma shri"") && langMatches(lang(?awardLabel), ""en""))
  }
  
  ?award dbo:recipient ?awardee .
  ?awardee dbo:office ?awardOffice .
}
```",6,7,7,3,3,3,3,71,0,0,1,0,0.0,0
456,43,val,"Give me the band of Alan Doyle and professional in the alter ego of the reference, that is a fictional character, to Lamont Cranston (radio, film and television) and spouse of Danielle Spencer (Australian actress).","SELECT ?result WHERE { <http://dbpedia.org/resource/Danielle_Spencer_(Australian_actress)> <http://dbpedia.org/ontology/spouse> ?result . ?v0 <http://xmlns.com/foaf/0.1/name> ""Lamont Cranston (radio, film and television)""@en . ?v0 <http://dbpedia.org/property/alterEgo> ?v4 . ?result <http://dbpedia.org/property/occupation> ?v4 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/FictionalCharacter>. <http://dbpedia.org/resource/Alan_Doyle> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . }","```sparql
SELECT ?band WHERE {
  ?person foaf:name ""Alan Doyle"" .
  ?person dbo:memberOf ?band .
  FILTER regex(str(?band), ""Great Big Sea"", ""i"") .

  OPTIONAL {
    ?fictionalCharacter rdfs:label ""The Shadow""@en .
    ?fictionalCharacter dbo:alterEgo ?lamontCranston .
    ?lamontCranston foaf:name ""Lamont Cranston"" .
  }

  OPTIONAL {
    ?spouse1 foaf:name ""Stephen Amell"" .
    ?spouse2 foaf:name ""Danielle Spencer"" .
    ?spouse1 dbo:spouse ?spouse2 .
  }
}
```",5,6,6,3,3,3,3,71,0,0,1,0,0.0,0
987,45,val,"Give me the birth place of Moamer Kasumović and birth place of Dado Polumenta and entity in the region, that is a country, of the time zone, that is a sports event, in Canicosa de la Sierra.",SELECT ?result WHERE { <http://dbpedia.org/resource/Moamer_Kasumović> <http://dbpedia.org/ontology/birthPlace> ?result . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. <http://dbpedia.org/resource/Dado_Polumenta> <http://dbpedia.org/ontology/birthPlace> ?result . ?result <http://dbpedia.org/ontology/country> ?v0 . <http://dbpedia.org/resource/Canicosa_de_la_Sierra> <http://dbpedia.org/ontology/timeZone> ?v3 . ?v0 <http://dbpedia.org/property/timeZone> ?v3 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsEvent>. },"```sparql
# Query for birthplace of Moamer Kadhafi
SELECT ?birthPlace WHERE {
  dbpedia:Moamer_Kadhafi dbo:birthPlace ?birthPlace .
}

UNION

# Query for birthplace of Dado Pršo
SELECT ?birthPlace WHERE {
  dbpedia:Dado_Pršo dbo:birthPlace ?birthPlace .
}

UNION

# Query to find the country in the time zone of Canicosa de la Sierra
SELECT DISTINCT ?country WHERE {
  # Find the time zone for Canicosa de la Sierra
  dbpedia:Canicosa_de_la_Sierra dbo:timeZone ?timeZone .

  # Find a country within that time zone
  ?country dbo:timeZone ?timeZone .
  
  FILTER (isBlank(?country) = false)
}

UNION

# Query to find a sports event in the identified country
SELECT DISTINCT ?event WHERE {
  ?country dbo:sportEvent ?event .
}
```",5,7,6,3,3,3,3,71,0,0,1,0,0.0,0
124,49,val,"Give me the commander in the war, that is a societal event and a military conflict, of A Field Battery, Royal Australian Artillery and military force of the force, that is a societal event and a military conflict, of the person born on 1850-06-24.","SELECT ?result WHERE { ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. <http://dbpedia.org/resource/A_Field_Battery,_Royal_Australian_Artillery> <http://dbpedia.org/ontology/battle> ?v2 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?v0 <http://dbpedia.org/ontology/birthDate> ""1850-06-24""^^<http://www.w3.org/2001/XMLSchema#date> . ?v1 <http://dbpedia.org/ontology/commander> ?v0 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?result <http://dbpedia.org/ontology/battle> ?v1 . ?v2 <http://dbpedia.org/ontology/commander> ?result . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?person ?militaryForce ?commander WHERE {
  # Find the person born on June 24, 1850
  ?person dbo:birthDate ?birthDate .
  FILTER (YEAR(?birthDate) = 1850 && MONTH(?birthDate) = 6 && DAY(?birthDate) = 24)

  # Find military forces associated with this person during a conflict
  ?militaryForce dbo:commander ?person ;
                 dbo:participatedIn ?conflict .
  
  # Find the commander of A Field Battery, Royal Australian Artillery during the same conflict
  ?unit dbo:commander ?commander ;
        dbp:name ""A Field Battery, Royal Australian Artillery"" ;
        dbo:participatedIn ?conflict .

}
```",5,9,6,3,2,3,3,71,0,0,9,0,0.0,0
965,47,val,"Give me the spouse of the spouse of Princess Victoria of Hesse and by Rhine and parent of the child, that is a royalty, of the person born, that is a politician, on 1854-05-24.","SELECT ?result WHERE { ?v3 <http://dbpedia.org/property/father> ?v0 . ?v3 <http://dbpedia.org/ontology/parent> ?result . <http://dbpedia.org/resource/Princess_Victoria_of_Hesse_and_by_Rhine> <http://dbpedia.org/ontology/spouse> ?v1 . ?result <http://dbpedia.org/ontology/spouse> ?v1 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v0 <http://dbpedia.org/ontology/birthDate> ""1854-05-24""^^<http://www.w3.org/2001/XMLSchema#date> . }","```sparql
# Find Princess Victoria of Hesse and by Rhine
SELECT ?princessVictoria WHERE {
  ?princessVictoria dbo:spouse dbr:Ernest_Louis,_Grand_Duke_of_Hesse .
  ?princessVictoria rdfs:label ""Princess Victoria of Hesse and by Rhine""@en .
}

# Find her spouse, Ernest Louis
SELECT ?ernestLouis WHERE {
  ?ernestLouis dbo:spouse ?princessVictoria .
  ?ernestLouis rdfs:label ""Ernest Louis, Grand Duke of Hesse""@en .
}

# Find a child of Princess Victoria who is royalty (e.g., Empress Alexandra Feodorovna)
SELECT ?child WHERE {
  ?child dbo:parent ?princessVictoria ;
         rdf:type dbo:Monarch .
  ?child rdfs:label ""Alexandra Feodorovna, Empress of Russia""@en .
}

# Find Wilhelm II
SELECT ?wilhelmII WHERE {
  ?wilhelmII dbo:dateOfBirth ""1854-05-24""^^xsd:date ;
             rdf:type dbo:Politician .
  ?wilhelmII rdfs:label ""Wilhelm II, German Emperor""@en .
}

# Find spouse of Wilhelm II (Augusta Victoria)
SELECT ?augustaVictoria WHERE {
  ?augustaVictoria dbo:spouse ?wilhelmII .
  ?augustaVictoria rdfs:label ""Augusta Victoria of Schleswig-Holstein""@en .
}
```",5,7,6,3,2,3,3,71,0,0,1,0,0.0,0
926,40,val,Give me the child of Ahmed III and father of the father of the spouse of Neşerek Kadın and successor of Mustafa III.,SELECT ?result WHERE { <http://dbpedia.org/resource/Neşerek_Kadın> <http://dbpedia.org/ontology/spouse> ?v3 . ?v1 <http://dbpedia.org/property/father> ?result . <http://dbpedia.org/resource/Ahmed_III> <http://dbpedia.org/ontology/child> ?result . ?v3 <http://dbpedia.org/property/father> ?v1 . <http://dbpedia.org/resource/Mustafa_III> <http://dbpedia.org/ontology/successor> ?result . },"```sparql
SELECT ?person WHERE {
  # Ahmed III's children
  ?child dbo:parent dbr:Aḥmed_III.
  
  # Neşerek Kadın's spouse
  ?spouse dbo:spouse dbr:Neserekkadın.

  # Selim III is the spouse of Neşerek Kadın
  FILTER(?spouse = dbr:Selim_III).

  # Mustafa III is the father of Selim III
  ?mustafa dbo:child ?spouse.
  
  # Abdul Hamid I is the father of Mustafa III
  ?abdul_hamid dbo:child ?mustafa.

  # Abdul Hamid I succeeded Mustafa III
  ?abdul_hamid dbo:succeeded dbr:Mustafa_III.

  # The person we are looking for
  BIND(?abdul_hamid AS ?person)
}
```",5,5,6,3,3,3,3,71,0,0,1,0,0.0,0
495,15,val,Give me the father of Princess Charlotte of Württemberg and child of the father of the parent of Princess Catherine of Württemberg.,SELECT ?result WHERE { ?v0 <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Princess_Catherine_of_Württemberg> . ?result <http://dbpedia.org/property/father> ?v1 . <http://dbpedia.org/resource/Princess_Charlotte_of_Württemberg> <http://dbpedia.org/property/father> ?result . ?v0 <http://dbpedia.org/property/father> ?v1 . },"```sparql
# Step 1: Find the father of Princess Charlotte of Württemberg
SELECT ?charlotteFather WHERE {
    ?charlotte dbo:parent dbc:Princess_Charlotte_of_W%C3%BCrttemberg .
    ?charlotte rdf:type dbo:Person .
    ?charlotte dbo:gender dbr:Male .
}

# Step 2 and 3: Find the parent of Princess Catherine of Württemberg, then find their father
SELECT ?catherineParentFather WHERE {
    ?catherineParent dbo:parent dbc:Princess_Catherine_of_W%C3%BCrttemberg .
    ?catherineParent rdf:type dbo:Person .
    ?catherineParent dbo:gender dbr:Male ; dbo:father ?catherineParentFather .
}

# Step 4: Find the child of the person identified in step 3
SELECT ?child WHERE {
    ?parentChild dbo:parent ?catherineParentFather .
    ?parentChild rdf:type dbo:Person .
}
```",4,4,5,3,2,3,2,20,0,0,1,0,0.0,0
773,55,val,"Give me the parent of the child, that is a royalty, of Louis the German and spouse of the father of Charles the Fat and parent of the successor of Charles the Bald.",SELECT ?result WHERE { <http://dbpedia.org/resource/Charles_the_Fat> <http://dbpedia.org/property/father> ?v3 . ?v3 <http://dbpedia.org/ontology/spouse> ?result . ?v2 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Louis_the_German> . ?v2 <http://dbpedia.org/ontology/parent> ?result . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. <http://dbpedia.org/resource/Charles_the_Bald> <http://dbpedia.org/ontology/successor> ?v5 . ?result <http://dbpedia.org/ontology/child> ?v5 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?parent WHERE {
  # Louis the German and his spouse Hemma of Altdorf
  dbr:Louis_the_German dbo:spouse dbr:Hemma_of_Altdorf .
  
  # Charles the Fat is a child of Louis the German
  dbr:Charles_the_Fat dbo:childOf dbr:Louis_the_German .

  # Charles the Bald and his successor, Louis the Stammerer
  dbr:Charles_the_Bald dbo:successor dbr:Louis_the_Stammerer .
  
  # Hemma of Altdorf is a parent of someone in the Carolingian lineage
  ?parent dbo:spouse dbr:Louis_the_German .
  OPTIONAL { ?parent dbo:child dbr:Louis_the_Stammerer . }
}
```",6,7,7,2,3,3,3,71,0,0,1,0,0.0,0
459,20,val,"Give me the governor of Oklahoma and governor of the administration, that is a politician, of Brad Henry and person born as John Kevin Stitt.","SELECT ?result WHERE { ?result <http://dbpedia.org/property/birthName> ""John Kevin Stitt""@en . ?v3 <http://dbpedia.org/property/governor> ?result . ?v3 <http://dbpedia.org/property/governor> <http://dbpedia.org/resource/Brad_Henry> . <http://dbpedia.org/resource/Oklahoma> <http://dbpedia.org/property/governor> ?result . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?person ?name WHERE {
  VALUES (?governorRole) { 
    dbr:Governor_of_Oklahoma 
  }
  
  # Brad Henry as Governor of Oklahoma
  OPTIONAL {
    ?henry dbo:officeHolder ?role1 .
    ?role1 dbo:positionHeld ?governorRole .
    ?henry rdfs:label ?name .
    FILTER(CONTAINS(LCASE(?name), ""brad henry""))
  }
  
  # John Kevin Stitt as Governor of Oklahoma
  OPTIONAL {
    ?stitt dbo:officeHolder ?role2 .
    ?role2 dbo:positionHeld ?governorRole .
    ?stitt rdfs:label ?name .
    FILTER(CONTAINS(LCASE(?name), ""john kevin stitt""))
  }
  
  BIND(IF(BOUND(?henry), ?henry, ?stitt) AS ?person)
}
```",4,5,5,2,3,2,3,28,0,0,1,0,0.0,0
791,41,val,"Give me the predecessor of the child of Emperor Takakura and spouse of the spouse, that is a royalty, of Emperor Takakura and father of Emperor Go-Toba.",SELECT ?result WHERE { <http://dbpedia.org/resource/Emperor_Go-Toba> <http://dbpedia.org/property/father> ?result . ?v2 <http://dbpedia.org/ontology/spouse> <http://dbpedia.org/resource/Emperor_Takakura> . ?result <http://dbpedia.org/ontology/spouse> ?v2 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?result <http://dbpedia.org/ontology/successor> ?v4 . ?v4 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Emperor_Takakura> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?predecessor WHERE {
  # Emperor Takakura's child is Emperor Antoku
  dbr:Takakura#Emperor_Takakura dbo:child dbr:Antoku.

  # Predecessor of Emperor Antoku (Emperor Takakura)
  dbr:Antoku dbo:predecessor ?predecessor.

  # Spouse of the predecessor (Emperor Takakura) is Taira no Shigeko
  ?predecessor dbo:spouse dbr:Taira_no_Shigeko.

  # Ensure the person is royalty and father of Emperor Go-Toba
  ?predecessor a dbo:Monarch;
               dbo:child dbr:Go_Toba.
}
```",5,6,6,2,3,3,3,71,0,0,1,0,0.0,0
976,46,val,"Give me the office of the leader, that is a politician, of the administration, that is an organisation, of Kemal Kılıçdaroğlu and office of the mayor, that is a politician and an office holder and Turkish, of Nation Alliance (Turkey).",SELECT ?result WHERE { ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v2 <http://dbpedia.org/ontology/leader> ?v0 . ?v3 <http://dbpedia.org/ontology/nationality> <http://dbpedia.org/resource/Turkey>. <http://dbpedia.org/resource/Nation_Alliance_(Turkey)> <http://dbpedia.org/property/leader> ?v3 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?v2 <http://dbpedia.org/property/leader> <http://dbpedia.org/resource/Kemal_Kılıçdaroğlu> . ?v0 <http://dbpedia.org/property/office> ?result . ?v3 <http://dbpedia.org/property/office> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?officeKemal ?mayorName ?mayorOffice
WHERE {
  # Find the office of Kemal Kılıçdaroğlu
  dbr:Kemal_Kılıçdaroğlu dbo:positionHeld ?position .
  ?position dbo:title ?officeKemal .

  # Find mayors associated with Nation Alliance and filter by nationality
  ?mayor a dbo:Mayor ;
         dbo:nationality dbr:Turkey ;
         dbo:partyAffiliation ?party .
  
  ?party rdfs:label ""Nation Alliance""@en .
  
  ?mayor dbo:title ?mayorOffice .
  BIND (str(?mayor) AS ?mayorName)
}
```",5,10,6,3,2,3,3,71,0,0,3,0,0.0,0
573,53,val,"Give me the person decedent at Quincy, Massachusetts and parent of the author, that is a politician and an office holder, of Exchequer Standards and person decedent at the administration, that is a region, of the real name of Charlie Baker (Australian footballer).","SELECT ?result WHERE { ?v2 <http://dbpedia.org/property/governor> ?v3 . ?v1 <http://dbpedia.org/ontology/parent> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?result <http://dbpedia.org/ontology/deathPlace> ?v2 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. <http://dbpedia.org/resource/Exchequer_Standards> <http://dbpedia.org/property/author> ?v1 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Region>. ?result <http://dbpedia.org/ontology/deathPlace> <http://dbpedia.org/resource/Quincy,_Massachusetts> . <http://dbpedia.org/resource/Charlie_Baker_(Australian_footballer)> <http://xmlns.com/foaf/0.1/name> ?v3 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?personDecedent WHERE {
  # Find Charlie Baker's real name and administrative region
  ?charlieBaker a dbo:AustralianFootballer ;
                foaf:name ""Charlie Baker"" ;
                dbo:realName ?realName .
  
  OPTIONAL { ?charlieBaker dbo:administrativeRegion ?region . }
  
  # Identify person decedent at Quincy, Massachusetts
  ?personDecedent dbo:deathPlace dbr:Quincy,_Massachusetts ;
                  a dbo:Politician ;
                  dbo:officeHolder ?office .
  
  # Ensure the person is related as a parent to an author
  OPTIONAL { ?author dbo:parent ?personDecedent . }
  OPTIONAL { ?author a dbo:Author . }

  # Check for involvement with Exchequer Standards (if applicable)
  OPTIONAL { ?personDecedent dbo:occupation dbr:Exchequer_Standards . }
  
  FILTER(?realName = ""Charlie Baker"" && EXISTS(?region))
}
```",6,9,7,3,3,3,3,71,0,0,2,0,0.0,0
987,46,val,"Give me the birth place of the actor of All for Free and birth place of the band, that is an artist and a musical artist, of the band, that is an artist, of Dado Polumenta.",SELECT ?result WHERE { ?v3 <http://dbpedia.org/ontology/birthPlace> ?result . ?v0 <http://dbpedia.org/ontology/birthPlace> ?result . <http://dbpedia.org/resource/Dado_Polumenta> <http://dbpedia.org/ontology/associatedMusicalArtist> ?v2 . <http://dbpedia.org/resource/All_for_Free> <http://dbpedia.org/property/starring> ?v3 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. ?v2 <http://dbpedia.org/ontology/associatedMusicalArtist> ?v0 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. },"```sparql
# Query for the actor of ""All for Free"" and their birthplace
SELECT ?actor ?birthPlaceActor WHERE {
  ?film dcterms:title ""All for Free""@en .
  ?film dbo:starring ?actor .
  ?actor foaf:birthPlace ?birthPlaceActor .
}

UNION

# Query for the band of Dado Pršo and their birthplaces
SELECT ?bandMember ?birthPlaceBand WHERE {
  ?person foaf:name ""Dado Pršo""@en ;
          dbo:memberOfBand ?band .
  ?band dcterms:title ""Zabranjeno Pušenje""@en .
  ?band dbo:member ?bandMember .
  ?bandMember foaf:birthPlace ?birthPlaceBand .
}
```",5,8,6,3,2,3,3,71,0,0,4,0,0.0,0
281,20,val,"Give me the awardee of the award, that is a military conflict, of Lawrence Moore Cosgrave and commander in New Guinea campaign and awardee of Volunteer Decoration.",SELECT ?result WHERE { ?result <http://dbpedia.org/property/awards> ?v3 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?result <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/Volunteer_Decoration> . <http://dbpedia.org/resource/Lawrence_Moore_Cosgrave> <http://dbpedia.org/property/awards> ?v3 . <http://dbpedia.org/resource/New_Guinea_campaign> <http://dbpedia.org/ontology/commander> ?result . },"```sparql
SELECT ?award WHERE {
  wd:Q123456 a dbo:Award ; # Replace Q123456 with Lawrence Moore Cosgrave's DBpedia entity ID
    dbo:recipient wd:Q789012 . # Replace Q789012 with the Victoria Cross entity ID in DBpedia

  OPTIONAL { 
    wd:Q123456 dbo:award ?award .
  }
}
```

Note: The actual DBpedia IDs for Lawrence Moore Cosgrave and the Victoria Cross need to be verified and replaced in the query above.",4,5,5,2,3,2,3,28,0,0,1,0,0.0,0
465,43,val,"Give me the spouse of the child, that is a royalty, of the parent of Elizabeth of Austria (1526–1545) and successor of Renée of France and successor of Ercole II d'Este, Duke of Ferrara.","SELECT ?result WHERE { <http://dbpedia.org/resource/Ercole_II_d'Este,_Duke_of_Ferrara> <http://dbpedia.org/ontology/successor> ?result . ?v0 <http://dbpedia.org/ontology/child> ?v4 . ?v0 <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Elizabeth_of_Austria_(1526–1545)> . ?result <http://dbpedia.org/ontology/spouse> ?v4 . <http://dbpedia.org/resource/Renée_of_France> <http://dbpedia.org/ontology/successor> ?result . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. }","```sparql
SELECT ?spouse WHERE {
  ?parent dbo:child ?elizabeth .
  ?elizabeth foaf:name ""Elizabeth of Austria""@en ;
             dbo:birthDate ?birthDate ;
             dbo:deathDate ?deathDate .
  FILTER(?birthDate >= ""1526-01-01""^^xsd:date && ?deathDate <= ""1545-12-31""^^xsd:date) .

  ?parent foaf:name ""Anna of Bohemia and Hungary""@en .

  ?child dbo:spouse ?spouse ;
         dbo:parent ?parent ;
         rdf:type dbo:Monarch .
  
  ?renée dbo:succeededBy ?alfonsoII .
  ?ercoleII dbo:succeededBy ?alfonsoII .
  
  ?renée foaf:name ""Renée of France""@en .
  ?ercoleII foaf:name ""Ercole II d'Este, Duke of Ferrara""@en .

  ?alfonsoII foaf:name ""Alfonso II d'Este, Duke of Ferrara""@en ;
             dbo:succeededBy ?renée ;
             dbo:succeededBy ?ercoleII .
}
```",5,6,6,3,3,3,3,71,0,0,1,0,0.0,0
83,16,val,"Give me the ruling party in the birthplace, that is a town and Brazilian and a soccer club, of Sandro (footballer, born October 1983) and party of the governor of Dilma Rousseff.","SELECT ?result WHERE { ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Town>. ?v2 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Brazil>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerClub>. ?v2 <http://dbpedia.org/property/leaderParty> ?result . <http://dbpedia.org/resource/Sandro_(footballer,_born_October_1983)> <http://dbpedia.org/ontology/birthPlace> ?v2 . ?v3 <http://dbpedia.org/ontology/party> ?result . <http://dbpedia.org/resource/Dilma_Rousseff> <http://dbpedia.org/property/governor> ?v3 . }","```sparql
# Step 1: Find Sandro's birthplace and ensure it's a Brazilian town with a soccer club
SELECT ?town WHERE {
  ?sandro dbo:birthPlace ?town .
  FILTER EXISTS { ?sandro dbo:birthDate ?date . FILTER (YEAR(?date) = 1983 && MONTH(?date) = 10) }
  ?town rdf:type dbo:Town .
  ?club dbo:foundedIn ?town .
  ?club rdf:type dbo:SoccerClub .
  ?club dbo:nationality dbr:Brazil .
}

# Step 2: Find the ruling party in Sandro's birthplace
SELECT DISTINCT ?party WHERE {
  ?town dbo:government ?government .
  ?government dbo:rulingParty ?party .
  # Assuming we have identified the town from step 1, replace <Town_URI> with the actual URI
}

# Step 3: Find the political party of Dilma Rousseff's governor
SELECT DISTINCT ?governorParty WHERE {
  dbr:Dilma_Rousseff dbo:governmentRole ?role .
  ?role dbo:officeHolder ?governor .
  ?governor dbo:politicalAffiliation ?governorParty .
}
```

Note: The above SPARQL query is a template and assumes that the necessary URIs for Sandro's birthplace and Dilma Rousseff's governorship are available in DBpedia. You may need to adjust the queries based on actual data availability.",4,7,5,2,2,3,2,20,0,0,1,0,0.0,0
445,52,val,"Give me the death place of the awardee of Royal Astronomical Society and entity in United Kingdom and entity in the residence, that is a country, of the resident, that is an athlete, of Great Britain.",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/United_Kingdom> . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. ?v3 <http://dbpedia.org/property/residence> ?v2 . ?v3 <http://dbpedia.org/property/residence> <http://dbpedia.org/resource/Great_Britain> . ?result <http://dbpedia.org/ontology/location> ?v2 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Athlete>. ?v5 <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/Royal_Astronomical_Society> . ?v5 <http://dbpedia.org/ontology/deathPlace> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?deathPlace WHERE {
  ?person dbo:awardReceived dbr:Royal_Astronomical_Society .
  ?person dbo:nationality dbr:United_Kingdom .
  ?person dbo:residenceCountry ?country .
  
  # Ensure the country has athletes representing Great Britain
  ?athlete dbo:nationality dbr:Great_Britain ;
           dbo:residenceCountry ?country .

  OPTIONAL { ?person dbo:deathPlace ?deathPlace . }
}
```",6,8,7,3,3,3,3,71,0,0,1,0,0.0,0
791,44,val,"Give me the predecessor of the child of Emperor Takakura and father of the child, that is a royalty, of Emperor Takakura and spouse of Taira no Tokuko.",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/spouse> <http://dbpedia.org/resource/Taira_no_Tokuko> . ?v4 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Emperor_Takakura> . ?v2 <http://dbpedia.org/property/father> ?result . ?v2 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Emperor_Takakura> . ?result <http://dbpedia.org/ontology/successor> ?v4 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. },"```sparql
SELECT ?predecessor WHERE {
  wd:Q12345 wdt:P39 wd:Q1189 . # Emperor Takakura (Q12345) has position of monarch of Japan (P39)
  wd:Q1189 wdt:P1368 ?predecessor . # The predecessor of Emperor Takakura
}
```",5,6,6,2,3,3,3,71,0,0,1,0,0.0,0
892,40,val,Give me the entity in Province of Reggio Emilia and landmark at elevation of 58 and entity in the profession of the true self of Enrico Crolla.,"SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/elevation> ""58""^^<http://www.w3.org/2001/XMLSchema#integer> . ?result <http://dbpedia.org/ontology/country> ?v1 . ?v3 <http://dbpedia.org/property/occupation> ?v1 . ?v3 <http://xmlns.com/foaf/0.1/givenName> ""Enrico Crolla""@en . ?result <http://dbpedia.org/ontology/province> <http://dbpedia.org/resource/Province_of_Reggio_Emilia> . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX geo: <http://www.w3.org/2003/01/geo/wgs84_pos#>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT DISTINCT ?entityInReggioEmilia ?landmarkAtElevation58 ?professionEntity
WHERE {
  # Entity in Province of Reggio Emilia
  ?entityInReggioEmilia dbo:locatedIn dbr:Province_of_Reggio_Emilia .

  # Landmark at elevation of 58
  ?landmarkAtElevation58 geo:elevation ""58""^^xsd:decimal .
  
  # Enrico Crolla's profession
  ?enricoCrolla dbp:name ""Enrico Crolla""@en ;
                dbo:occupation ?profession .

  # Entity in the same profession as Enrico Crolla
  ?professionEntity dbo:occupation ?profession .
}
```",5,5,6,3,3,3,3,71,0,0,1,0,0.0,0
826,46,val,"Give me the successor of the child, that is a royalty, of Louis I, Grand Duke of Hesse and spouse of the child of the father of Anna Magdalena Appel.","SELECT ?result WHERE { <http://dbpedia.org/resource/Louis_I,_Grand_Duke_of_Hesse> <http://dbpedia.org/ontology/child> ?v4 . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v1 <http://dbpedia.org/ontology/spouse> ?result . ?v4 <http://dbpedia.org/ontology/successor> ?result . ?v1 <http://dbpedia.org/property/father> ?v2 . <http://dbpedia.org/resource/Anna_Magdalena_Appel> <http://dbpedia.org/property/father> ?v2 . }","```sparql
SELECT ?successor WHERE {
  # Louis I, Grand Duke of Hesse
  wd:Q123456 a dbo:Person ;
             foaf:name ""Louis I, Grand Duke of Hesse""@en .

  # His children
  ?child dbo:parent wd:Q123456 ;
         dbo:royalty true .

  # Spouse of the royal child
  ?spouse dbo:spouse ?child .

  # Anna Magdalena Appel's father
  wd:Q654321 a dbo:Person ;
             foaf:name ""Anna Magdalena Appel""@en .
  ?father dbo:parent wd:Q654321 .

  # Child of Anna Magdalena Appel's father
  ?childOfFather dbo:parent ?father .

  # Successor of the spouse
  ?spouse dbo:succeededBy ?successor .
}
```

Note: The placeholders `wd:Q123456` and `wd:Q654321` should be replaced with the actual DBpedia identifiers for Louis I, Grand Duke of Hesse, and Anna Magdalena Appel's father, respectively. These identifiers can be found by querying DBpedia or using a resource like Wikidata.",5,6,6,3,2,3,3,71,0,0,1,0,0.0,0
433,45,val,Give me the associated musical artist of Bill Evans and associated musical artist of Paul Chambers and professional in the profession of the writer of Slowhand at 70 – Live at the Royal Albert Hall.,SELECT ?result WHERE { <http://dbpedia.org/resource/Bill_Evans> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . <http://dbpedia.org/resource/Slowhand_at_70_–_Live_at_the_Royal_Albert_Hall> <http://dbpedia.org/property/writer> ?v0 . <http://dbpedia.org/resource/Paul_Chambers> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?result <http://dbpedia.org/property/occupation> ?v1 . ?v0 <http://dbpedia.org/property/occupation> ?v1 . },"```sparql
# Query to find associated musical artists of Bill Evans
SELECT ?artist WHERE {
  ?billEvans dbo:associatedMusicalArtist ?artist .
  FILTER (str(?billEvans) = ""Bill_Evans_(musician)"")
}

UNION

# Query to find associated musical artists of Paul Chambers
SELECT ?artist WHERE {
  ?paulChambers dbo:associatedMusicalArtist ?artist .
  FILTER (str(?paulChambers) = ""Paul_Chambers_(bassist)"")
}

UNION

# Query to find the writer of ""Slowhand at 70 – Live at the Royal Albert Hall"" and their profession
SELECT DISTINCT ?writer ?profession WHERE {
  ?album dbo:author ?writer .
  ?writer dbo:occupation ?profession .
  FILTER (str(?album) = ""Slowhand_at_70_-_Live_at_the_Royal_Albert_Hall"")
}
```",5,5,6,3,3,3,3,71,0,0,1,0,0.0,0
826,50,val,"Give me the successor of the child, that is a royalty, of the reference, that is a royalty, to Louis I and predecessor of the parent of Prince Friedrich of Hesse and by Rhine.","SELECT ?result WHERE { <http://dbpedia.org/resource/Prince_Friedrich_of_Hesse_and_by_Rhine> <http://dbpedia.org/ontology/parent> ?v3 . ?v4 <http://dbpedia.org/ontology/successor> ?result . ?v0 <http://dbpedia.org/ontology/child> ?v4 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v0 <http://xmlns.com/foaf/0.1/name> ""Louis I""@en . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?result <http://dbpedia.org/ontology/successor> ?v3 . }","```sparql
SELECT ?successor WHERE {
  # Step 1: Identify Louis I of Hesse and by Rhine
  wd:Q123456 rdfs:label ""Louis I, Landgrave of Hesse""@en .
  
  # Step 2: Find Louis I's predecessor (father)
  ?predecessor wdt:P31/wdt:P279* wd:Q5 ;  # Predecessor is a human
               wdt:P22 ?parent .         # Parent of Louis I
  
  ?parent rdfs:label ""Louis IX, Landgrave of Hesse""@en .
  
  # Step 3: Identify the child of this predecessor who is royalty
  ?child wdt:P31/wdt:P279* wd:Q5 ;       # Child is a human
         wdt:P22 ?predecessor .        # Child of Louis IX
  
  ?child rdfs:label ""Charles I, Landgrave of Hesse""@en .
  
  # Step 4: Determine the successor of this child
  ?successor wdt:P31/wdt:P279* wd:Q5 ;  # Successor is a human
             wdt:P22 ?child .           # Successor of Charles I
  
  ?successor rdfs:label ""Frederick II, Landgrave of Hesse""@en .
  
  # Step 5: Find Prince Friedrich's parent
  wd:Q654321 wdt:P31/wdt:P279* wd:Q5 ;  # Prince Friedrich is a human
               wdt:P22 ?parent .        # Parent of Prince Friedrich
  
  ?parent rdfs:label ""Friedrich Karl, Landgrave of Hesse""@en .
  
  # Step 6: Identify predecessor of this parent
  ?predecessorParent wdt:P31/wdt:P279* wd:Q5 ;  # Predecessor is a human
                      wdt:P22 ?parent .        # Parent of Friedrich Karl
  
  ?predecessorParent rdfs:label ""Frederick II, Landgrave of Hesse""@en .
  
  FILTER(?successor = ?predecessorParent)
}
```",5,7,6,3,2,3,3,71,0,0,1,0,0.0,0
865,51,val,"Give me the father of the child of the father of Abul Maal Abdul Muhith and father of the child, that is a politician, of Abu Ahmad Abdul Hafiz.",SELECT ?result WHERE { ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v1 <http://dbpedia.org/property/father> ?v4 . ?v3 <http://dbpedia.org/property/father> ?result . ?v3 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Abu_Ahmad_Abdul_Hafiz> . <http://dbpedia.org/resource/Abul_Maal_Abdul_Muhith> <http://dbpedia.org/property/father> ?v4 . ?v1 <http://dbpedia.org/property/father> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT DISTINCT ?father WHERE {
  # Step 1: Find Abul Maal Abdul Muhith's father
  ?abulMaal a dbo:Person ;
            foaf:name ""Abul Maal Abdul Muhith""@en .
  
  ?abulMaal dbo:parent ?fatherOfAbulMaal .

  # Step 2: Find the child of Abul Maal Abdul Muhith's father
  ?childOfFather a dbo:Person ;
                dbo:parent ?fatherOfAbulMaal .

  # Step 3: Find Abu Ahmad Abdul Hafiz's child who is a politician
  ?abuAhmad a dbo:Person ;
            foaf:name ""Abu Ahmad Abdul Hafiz""@en .
  
  ?childPolitician a dbo:Person, dbo:Politician ;
                   dbo:parent ?fatherOfAbuAhmad .

  # Step 4: Find the father of both identified children
  ?fatherOfAbulMaal foaf:name ?name1 .
  ?fatherOfAbuAhmad foaf:name ?name2 .

  FILTER(?childOfFather = ?childPolitician)
}
```",5,6,6,3,2,3,3,71,0,0,1,0,0.0,0
417,44,val,"Give me the child of the father of Frederick IX of Denmark and spouse of Princess Caroline-Mathilde of Denmark and child of the child, that is a royalty, of Frederick Francis III, Grand Duke of Mecklenburg-Schwerin.","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/spouse> <http://dbpedia.org/resource/Princess_Caroline-Mathilde_of_Denmark> . ?result <http://dbpedia.org/property/father> ?v4 . <http://dbpedia.org/resource/Frederick_IX_of_Denmark> <http://dbpedia.org/property/father> ?v4 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?result <http://dbpedia.org/ontology/parent> ?v2 . ?v2 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Frederick_Francis_III,_Grand_Duke_of_Mecklenburg-Schwerin> . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?person WHERE {
  # Frederick IX's father
  dbr:Fredrik_IX_of_Denmark dbo:father dbr:Christian_X_of_Denmark .
  
  # Spouse of Princess Caroline-Mathilde
  dbr:Princess_Caroline_Matilda_of_Denmark dbo:spouse dbr:Christian_VII_of_Denmark .

  # Child of Frederick Francis III and spouse of Christian X
  dbr:Friedrich_Franz_III,_Grand_Duke_of_Mecklenburg-Schwerin dbo:child dbr:Alexandrine_of_Mecklenburg-Schwerin .
  dbr:Alexandrine_of_Mecklenburg-Schwerin dbo:spouse dbr:Christian_X_of_Denmark .

  # Child of Alexandrine and Christian X
  dbr:Alexandrine_of_Mecklenburg-Schwerin dbo:child ?person .

  # Ensure the person is a royalty
  ?person rdf:type dbo:Monarch .
}
```",5,6,6,2,3,3,3,71,0,0,1,0,0.0,0
365,15,val,"Give me the spouse of Olha Petliura and person born as the birth name of the commander, that is an office holder, in Ukrainian–Soviet War.",SELECT ?result WHERE { <http://dbpedia.org/resource/Ukrainian–Soviet_War> <http://dbpedia.org/ontology/commander> ?v0 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. <http://dbpedia.org/resource/Olha_Petliura> <http://dbpedia.org/ontology/spouse> ?result . ?result <http://dbpedia.org/property/birthName> ?v1 . ?v0 <http://dbpedia.org/property/birthName> ?v1 . },"```sparql
# Query to find the spouse of Olha Petliura
SELECT ?spouse WHERE {
  dbpedia:Olha_Petliura dbo:spouse ?spouse .
}

# Query to find commanders in the Ukrainian–Soviet War and their birth names
SELECT DISTINCT ?commander ?birthName WHERE {
  ?commander dbo:occupation dbr:Commander ;
            dbo:birthName ?birthName ;
            dbo:wikiPageWikiLink dbr:Ukrainian%E2%80%93Soviet_War .
  
  # Check if the commander is an office holder
  OPTIONAL { 
    ?officeHolder dbo:birthName ?birthName .
    FILTER EXISTS { ?officeHolder a dbo:OfficeHolder }
  }
}
```",4,5,5,3,2,3,2,20,0,0,1,0,0.0,0
933,45,val,"Give me the band of the band, that is a group and a band and an organisation, of the person born, that is a musical artist, on 1947-04-21 and band of Mike Elliott (saxophonist) and reference to Alan Warner.","SELECT ?result WHERE { ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?v0 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v3 <http://dbpedia.org/ontology/associatedMusicalArtist> ?v0 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Band>. ?result <http://xmlns.com/foaf/0.1/name> ""Alan Warner""@en . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Group>. ?v3 <http://dbpedia.org/ontology/birthDate> ""1947-04-21""^^<http://www.w3.org/2001/XMLSchema#date> . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. <http://dbpedia.org/resource/Mike_Elliott_(saxophonist)> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT DISTINCT ?band WHERE {
  # Step 1: Find the musical artist born on 1947-04-21
  ?person dbo:birthDate ""1947-04-21""^^xsd:date ;
          a dbo:MusicalArtist .

  # Step 2: Find bands associated with Mike Elliott (saxophonist)
  ?mikeElliott dbp:saxophonist dbr:Mike_Elliott_(saxophonist) .
  ?band dbo:member ?mikeElliott .

  # Step 3: Ensure the band is both a group and an organization
  ?band a dbo:Band ;
        a dbo:Organization .

  # Step 4: Check for any reference to Alan Warner
  OPTIONAL { ?band dbp:reference dbr:Alan_Warner . }

  FILTER EXISTS { ?band dbp:reference dbr:Alan_Warner }
}
```",5,9,6,3,3,3,3,71,0,0,1,0,0.0,0
465,47,val,"Give me the successor of the child of Alfonso I d'Este and spouse of the child, that is a royalty, of the parent of Elizabeth of Austria (1526–1545).",SELECT ?result WHERE { ?v2 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Alfonso_I_d'Este> . ?v0 <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Elizabeth_of_Austria_(1526–1545)> . ?v0 <http://dbpedia.org/ontology/child> ?v4 . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?result <http://dbpedia.org/ontology/spouse> ?v4 . ?v2 <http://dbpedia.org/ontology/successor> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?successor WHERE {
    # Step 1: Identify Alfonso I d'Este's notable child
    dbr:Alfonso_I_d%27Este dbo:child dbr:Eleanor_of_Ferrara .

    # Step 2: Find the spouse of Eleanor of Ferrara who is royalty
    dbr:Eleanor_of_Ferrara dbo:spouse ?spouse .
    ?spouse a dbo:Monarch .

    # Step 3: Determine Elizabeth of Austria's parent
    dbr:Elizabeth_of_Austria dbo:parent dbr:Ferdinand_I,_Holy_Roman_Emperor .

    # Step 4: Identify a royal child of Ferdinand I who is married to the spouse from step 2
    ?royalChild dbo:spouse ?spouse .
    ?royalChild a dbo:Monarch .
    ?royalChild dbo:parent dbr:Ferdinand_I,_Holy_Roman_Emperor .

    # Step 5: Find the successor of this royal child
    ?royalChild dbo:successor ?successor .
}
```",5,6,6,3,2,3,3,71,0,0,1,0,0.0,0
965,40,val,"Give me the spouse of the spouse of the parent of Louise Mountbatten and parent of Louise Mountbatten and parent of George Mountbatten, 2nd Marquess of Milford Haven.","SELECT ?result WHERE { ?v3 <http://dbpedia.org/ontology/spouse> ?v1 . <http://dbpedia.org/resource/Louise_Mountbatten> <http://dbpedia.org/ontology/parent> ?result . <http://dbpedia.org/resource/Louise_Mountbatten> <http://dbpedia.org/ontology/parent> ?v3 . ?result <http://dbpedia.org/ontology/spouse> ?v1 . <http://dbpedia.org/resource/George_Mountbatten,_2nd_Marquess_of_Milford_Haven> <http://dbpedia.org/ontology/parent> ?result . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT DISTINCT ?parent ?spouseOfParent WHERE {
  # Find Louise Mountbatten's parent
  ?louiseMountbatten dbo:parent ?parent .
  ?louiseMountbatten rdfs:label ""Louise Mountbatten""@en .

  # Find the spouse of Louise Mountbatten's parent
  ?parent dbo:spouse ?spouseOfParent .

  # Find George Mountbatten, 2nd Marquess of Milford Haven's parent
  ?georgeMountbatten dbo:parent ?parent .
  ?georgeMountbatten rdfs:label ""George Mountbatten, 2nd Marquess of Milford Haven""@en .
}
```",5,5,6,3,3,3,3,71,2,0,0,1.0,1.0,1.0
216,44,val,"Give me the team of the person born, that is a sports manager and a soccer manager and a soccer player, on 1983-12-20 and player in the coach, that is a soccer player and a sports manager and a soccer manager, of Bosnia and Herzegovina national under-18 football team and player in Igor Bišćan.","SELECT ?result WHERE { <http://dbpedia.org/resource/Bosnia_and_Herzegovina_national_under-18_football_team> <http://dbpedia.org/ontology/coach> ?v4 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsManager>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerManager>. ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerManager>. ?v2 <http://dbpedia.org/ontology/birthDate> ""1983-12-20""^^<http://www.w3.org/2001/XMLSchema#date> . <http://dbpedia.org/resource/Igor_Bišćan> <http://dbpedia.org/ontology/team> ?result . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerPlayer>. ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsManager>. ?v4 <http://dbpedia.org/ontology/team> ?result . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerPlayer>. ?result <http://dbpedia.org/ontology/coach> ?v2 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?person ?team WHERE {
  ?person dbo:birthDate ?date .
  FILTER (YEAR(?date) = 1983 && MONTH(?date) = 12 && DAY(?date) = 20)
  
  ?person dbo:sportsManager ?managerRole .
  ?person dbo:coach ?coachRole .
  ?person dbo:playerInTeam ?playerRole .

  ?coachRole dbo:team dbr:Bosnia_and_Herzegovina_national_under-18_football_team .
  ?playerRole dbo:team dbr:Bosnia_and_Herzegovina_national_under-18_football_team .

  ?person dbo:playerInTeam ?bišćanTeam .
  ?bišćanTeam dbo:member dbr:Igor_Bišćan .
  
  ?person dbo:playerInTeam ?team .
}
```",5,11,6,2,3,3,3,71,0,0,1,0,0.0,0
965,46,val,"Give me the spouse of the spouse of the parent of Louise Mountbatten and parent of the child, that is a royalty, of Prince Louis of Battenberg.",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/spouse> ?v0 . ?v2 <http://dbpedia.org/ontology/spouse> ?v0 . ?v3 <http://dbpedia.org/ontology/parent> ?result . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. <http://dbpedia.org/resource/Louise_Mountbatten> <http://dbpedia.org/ontology/parent> ?v2 . ?v3 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Prince_Louis_of_Battenberg> . },"```sparql
# Step 1: Find Louise Mountbatten's parent
SELECT ?parent WHERE {
    wd:Q123456 wdt:P40 ?parent. # Assuming Q123456 is the DBpedia ID for Louise Mountbatten
}

# Step 2: Find the spouse of Louise Mountbatten's parent
SELECT ?spouse WHERE {
    ?parent wdt:P26 ?spouse.
}

# Step 3: Identify Prince Louis of Battenberg's child that is a royalty
SELECT ?royalChild WHERE {
    wd:Q654321 wdt:P40 ?child. # Assuming Q654321 is the DBpedia ID for Prince Louis of Battenberg
    ?child wdt:P31 wd:Q12345.   # Assuming Q12345 represents royalty
}

# Step 4: Find the parent of this royal child
SELECT ?parentOfRoyalChild WHERE {
    ?royalChild wdt:P40 ?parentOfRoyalChild.
}

# Step 5: Determine the spouse of this parent
SELECT ?spouseOfParentOfRoyalChild WHERE {
    ?parentOfRoyalChild wdt:P26 ?spouseOfParentOfRoyalChild.
}

# Step 6: Identify the spouse of the spouse from step 2
SELECT ?finalSpouse WHERE {
    ?spouse wdt:P26 ?finalSpouse.
}
```

Note: The actual DBpedia IDs for Louise Mountbatten, Prince Louis of Battenberg, and royalty need to be replaced with their correct identifiers. This query assumes a structure where `wdt:P40` is used for parent-child relationships, `wdt:P26` for spouse relationships, and `wdt:P31` for instance of (type) relationships.",5,6,6,3,2,3,3,71,0,0,2,0,0.0,0
465,55,val,"Give me the successor of the child of Alfonso I d'Este and spouse of the child, that is a royalty, of Ferdinand I, Holy Roman Emperor and successor of the child, that is a royalty, of Anne of Brittany.","SELECT ?result WHERE { ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. <http://dbpedia.org/resource/Ferdinand_I,_Holy_Roman_Emperor> <http://dbpedia.org/ontology/child> ?v5 . ?v3 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Alfonso_I_d'Este> . ?v2 <http://dbpedia.org/ontology/successor> ?result . <http://dbpedia.org/resource/Anne_of_Brittany> <http://dbpedia.org/ontology/child> ?v2 . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?result <http://dbpedia.org/ontology/spouse> ?v5 . ?v3 <http://dbpedia.org/ontology/successor> ?result . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?finalSuccessor WHERE {
  # Step 1: Find Alfonso I d'Este's child
  ?alChild dbo:parent dbc:Alfonso_I_d%27Este ;
           a dbo:Person .

  # Step 2: Find Ferdinand I's royal child and their spouse
  ?ferChild dbo:parent dbc:Ferdinand_I,_Holy_Roman_Emperor ;
            a dbo:Monarch .
  ?spouse dbo:spouse ?ferChild ;
          a dbo:Monarch .

  # Step 3: Find Anne of Brittany's royal child
  ?anneChild dbo:parent dbc:Anne_of_Brittany ;
             a dbo:Monarch .

  # Step 4: Find successors
  ?alSuccessor dbo:successorOf ?alChild .
  ?ferSuccessor dbo:successorOf ?ferChild .
  ?anneSuccessor dbo:successorOf ?anneChild .

  # Step 5: Find the successor of the spouse of Ferdinand's royal child
  ?spouseSuccessor dbo:successorOf ?spouse .

  # Final step: Find the successor of the spouse's successor
  ?finalSuccessor dbo:successorOf ?spouseSuccessor .
}
```",6,8,7,2,3,3,3,71,0,0,1,0,0.0,0
41,19,val,"Give me the party of Enda Kenny and party of the leader, that is a politician and an office holder, of 2005 Castlereagh Borough Council election and party of Declan Costello.",SELECT ?result WHERE { <http://dbpedia.org/resource/Enda_Kenny> <http://dbpedia.org/ontology/party> ?result . <http://dbpedia.org/resource/Declan_Costello> <http://dbpedia.org/ontology/party> ?result . ?v3 <http://dbpedia.org/ontology/party> ?result . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. <http://dbpedia.org/resource/2005_Castlereagh_Borough_Council_election> <http://dbpedia.org/property/leader> ?v3 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?partyEndaKenny ?partyLeaderCastlereagh ?partyDeclanCostello WHERE {
  # Enda Kenny's party affiliation
  dbr:Enda_Kenny dbo:politicalParty ?partyEndaKenny .
  
  # Declan Costello's party affiliation
  dbr:Declan_Costello dbo:politicalParty ?partyDeclanCostello .

  # Leader of the Castlereagh Borough Council in 2005
  OPTIONAL {
    ?leader dbo:officeHolderOf dbr:Castlereagh_Borough_Council .
    ?leader dbo:electionYear ""2005""^^xsd:gYear .
    ?leader dbo:politicalParty ?partyLeaderCastlereagh .
  }
}
```",4,6,5,2,3,2,3,28,0,0,1,0,0.0,0
41,20,val,Give me the party of Mark Durkan and party of the person born as David Declan Costello and party of Enda Kenny.,"SELECT ?result WHERE { <http://dbpedia.org/resource/Mark_Durkan> <http://dbpedia.org/ontology/party> ?result . <http://dbpedia.org/resource/Enda_Kenny> <http://dbpedia.org/ontology/party> ?result . ?v1 <http://dbpedia.org/property/birthName> ""David Declan Costello""@en . ?v1 <http://dbpedia.org/ontology/party> ?result . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?person ?partyLabel WHERE {
  VALUES ?person { 
    dbr:Mark_Durkan 
    dbr:Martin_McGuinness 
    dbr:Enda_Kenny
  }
  
  OPTIONAL {
    ?person dbo:politicalParty ?party .
    SERVICE <http://dbpedia.org/sparql> {
      ?party rdfs:label ?partyLabel .
      FILTER (lang(?partyLabel) = 'en')
    }
  }
}
```",4,4,5,2,3,2,3,28,0,0,1,0,0.0,0
329,19,val,Give me the birthplace of the author of The Tailor and Ansty and entity in United Kingdom and entity in Northern Ireland.,SELECT ?result WHERE { <http://dbpedia.org/resource/The_Tailor_and_Ansty> <http://dbpedia.org/property/author> ?v2 . ?result <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/United_Kingdom> . ?v2 <http://dbpedia.org/ontology/birthPlace> ?result . ?result <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Northern_Ireland> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?birthPlace ?ukEntityLabel ?niEntityLabel WHERE {
  # Find the birthplace of George MacDonald
  dbr:George_MacDonald dbo:birthPlace ?birthPlace .
  
  # Find entities related to the United Kingdom
  ?ukEntity rdf:type dbo:Country ;
            rdfs:label ?ukEntityLabel .
  FILTER (CONTAINS(LCASE(?ukEntityLabel), ""united kingdom""))

  # Find entities related to Northern Ireland
  ?niEntity rdf:type dbo:AdministrativeRegion ;
            rdfs:label ?niEntityLabel .
  FILTER (CONTAINS(LCASE(?niEntityLabel), ""northern ireland""))
}
```",4,4,5,2,3,2,3,28,0,175,1,0.0,0.0,0
216,55,val,"Give me the player in the coach of Croatia national under-21 football team and team of the person born, that is a sports manager and a soccer manager and a soccer player, on 1983-12-20 and player in the coach, that is a soccer player and a sports manager and a soccer manager, of Bosnia and Herzegovina national under-18 football team.","SELECT ?result WHERE { ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerManager>. <http://dbpedia.org/resource/Bosnia_and_Herzegovina_national_under-18_football_team> <http://dbpedia.org/ontology/coach> ?v5 . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerManager>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerPlayer>. ?v5 <http://dbpedia.org/ontology/team> ?result . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerPlayer>. ?result <http://dbpedia.org/ontology/coach> ?v2 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsManager>. ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsManager>. ?v3 <http://dbpedia.org/ontology/team> ?result . <http://dbpedia.org/resource/Croatia_national_under-21_football_team> <http://dbpedia.org/ontology/coach> ?v3 . ?v2 <http://dbpedia.org/ontology/birthDate> ""1983-12-20""^^<http://www.w3.org/2001/XMLSchema#date> . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?person ?birthDate ?roleCroatia ?roleBosnia
WHERE {
  ?person a dbo:SoccerPlayer ;
          dbo:birthDate ?birthDate ;
          (dbo:coachOf|dbo:playerIn) dbr:Croatia_national_under-21_football_team ;
          (dbo:coachOf|dbo:playerIn) dbr:Bosnia_and_Herzegovina_national_under-18_football_team .
  FILTER (?birthDate = ""1983-12-20""^^xsd:date)
  
  OPTIONAL { ?person dbo:sportsManager ?roleCroatia . }
  OPTIONAL { ?person dbo:coach ?roleBosnia . }
}
```",6,12,7,2,3,3,3,71,0,0,1,0,0.0,0
456,47,val,"Give me the spouse of the actor of Pacific Drive and professional in the alter ego of the reference, that is a fictional character, to Lamont Cranston (radio, film and television).","SELECT ?result WHERE { ?v0 <http://dbpedia.org/property/alterEgo> ?v4 . <http://dbpedia.org/resource/Pacific_Drive> <http://dbpedia.org/property/starring> ?v2 . ?v0 <http://xmlns.com/foaf/0.1/name> ""Lamont Cranston (radio, film and television)""@en . ?result <http://dbpedia.org/property/occupation> ?v4 . ?v2 <http://dbpedia.org/ontology/spouse> ?result . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/FictionalCharacter>. }","```sparql
# Step 1: Find Lamont Cranston's alter ego
SELECT ?alterEgo WHERE {
  wd:Lamont_Cranston dbo:aliasName ""The Shadow""@en .
}

# Step 2: Identify the actor from Pacific Drive
SELECT ?actor WHERE {
  ?movie rdfs:label ""Pacific Drive""@en .
  ?movie dbo:starring ?actor .
  FILTER(lang(?movie) = 'en')
}

# Step 3: Find the spouse of the identified actor
SELECT ?spouse WHERE {
  ?actor dbo:spouse ?spouse .
}
```",5,6,6,3,2,3,3,71,0,0,2,0,0.0,0
773,47,val,"Give me the spouse of the father of Charles the Fat and parent of the successor of the child, that is a royalty, of Louis the Pious.",SELECT ?result WHERE { <http://dbpedia.org/resource/Louis_the_Pious> <http://dbpedia.org/ontology/child> ?v0 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v0 <http://dbpedia.org/ontology/successor> ?v4 . ?v2 <http://dbpedia.org/ontology/spouse> ?result . <http://dbpedia.org/resource/Charles_the_Fat> <http://dbpedia.org/property/father> ?v2 . ?result <http://dbpedia.org/ontology/child> ?v4 . },"```sparql
SELECT ?spouse WHERE {
  ?charlesFat dbo:father dbc:Louis_the_German .
  ?louisGerman dbo:spouse ?emma .
  ?emma rdf:type dbo:Monarch .
  ?louisPious dbo:child ?louisGerman .
}
```",5,6,6,3,2,3,3,71,0,0,1,0,0.0,0
865,50,val,"Give me the father of the child, that is a politician, of the spouse of Syeda Shahar Banu and father of the child of Abu Ahmad Abdul Hafiz.",SELECT ?result WHERE { ?v2 <http://dbpedia.org/property/father> ?result . ?v3 <http://dbpedia.org/property/father> ?result . ?v2 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Abu_Ahmad_Abdul_Hafiz> . <http://dbpedia.org/resource/Syeda_Shahar_Banu> <http://dbpedia.org/ontology/spouse> ?v0 . ?v3 <http://dbpedia.org/property/father> ?v0 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. },"```sparql
# Step 1: Find Syeda Shahar Banu's spouse
SELECT ?spouse WHERE {
  wd:Q123456 wdt:P26 ?spouse .
}

# Step 2: Identify the child of Syeda Shahar Banu's spouse who is a politician
SELECT DISTINCT ?child WHERE {
  ?spouse wdt:P40 ?child .
  ?child wdt:P106 wd:Q82955 . # P106 is the property for occupation, Q82955 is the concept of politician
}

# Step 3: Find out who the father of that child is
SELECT DISTINCT ?father WHERE {
  ?child wdt:P22 ?father .
}

# Step 4: Determine the child of Abu Ahmad Abdul Hafiz
SELECT DISTINCT ?child2 WHERE {
  wd:Q654321 wdt:P40 ?child2 . # Assuming Q654321 is the DBpedia ID for Abu Ahmad Abdul Hafiz
}

# Step 5: Identify the father of this child
SELECT DISTINCT ?father2 WHERE {
  ?child2 wdt:P22 ?father2 .
}

# Step 6: Find the common father from both parts
SELECT DISTINCT ?commonFather WHERE {
  { 
    SELECT DISTINCT ?father WHERE {
      ?child wdt:P22 ?father .
    }
  } UNION {
    SELECT DISTINCT ?father2 WHERE {
      ?child2 wdt:P22 ?father2 .
    }
  }
}
```

Note: Replace `wd:Q123456` with the actual DBpedia ID for Syeda Shahar Banu and `wd:Q654321` with the actual DBpedia ID for Abu Ahmad Abdul Hafiz. The queries assume that these IDs are known.",5,6,6,3,2,3,3,71,0,0,1,0,0.0,0
124,55,val,"Give me the military force of the war, that is an event and a military conflict and a societal event, of Frank Rhodes (British Army officer) and commander in the war, that is a societal event and a military conflict, of A Field Battery, Royal Australian Artillery and military force of the force, that is a societal event and a military conflict, of Herbert Kitchener, 1st Earl Kitchener.","SELECT ?result WHERE { ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. <http://dbpedia.org/resource/A_Field_Battery,_Royal_Australian_Artillery> <http://dbpedia.org/ontology/battle> ?v3 . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. <http://dbpedia.org/resource/Frank_Rhodes_(British_Army_officer)> <http://dbpedia.org/ontology/battle> ?v5 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?v3 <http://dbpedia.org/ontology/commander> ?result . ?result <http://dbpedia.org/ontology/battle> ?v5 . ?v2 <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Herbert_Kitchener,_1st_Earl_Kitchener> . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?result <http://dbpedia.org/ontology/battle> ?v2 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?militaryForce WHERE {
  # Frank Rhodes' involvement in a war
  OPTIONAL { 
    dbr:Frank_Rhodes dbo:militaryConflict ?war1 .
  }
  
  # A Field Battery, Royal Australian Artillery's involvement in a war
  OPTIONAL { 
    dbr:A_Field_Battery,_Royal_Australian_Artillery dbo:militaryConflict ?war2 .
  }

  # Herbert Kitchener's military force
  OPTIONAL {
    dbr:Herbert_Kitchener_1st_Earl_Kitchener dbo:militaryForce ?militaryForce .
  }
  
  # Ensure the wars are World War I and connect to a common military force
  FILTER(?war1 = dbr:World_War_I && ?war2 = dbr:World_War_I)
}
```",6,13,7,2,3,3,3,71,0,0,9,0,0.0,0
274,21,val,"Give me the professional in  and associated musical artist of the actor, that is a musical artist, of Imagine the Sound and band member of Dizzy Gillespie.","SELECT ?result WHERE { ?v0 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . <http://dbpedia.org/resource/Imagine_the_Sound> <http://dbpedia.org/property/starring> ?v0 . ?result <http://dbpedia.org/property/occupation> """"@en . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?result <http://dbpedia.org/ontology/associatedMusicalArtist> <http://dbpedia.org/resource/Dizzy_Gillespie> . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?actor ?associatedArtist WHERE {
  # Find the actor in ""Imagine the Sound""
  ?work dbo:title ""Imagine the Sound""@en .
  ?work dbo:starring ?actor .

  # Check if this actor is associated with a musical artist
  ?actor dbo:associatedMusicalArtist ?associatedArtist .

  # Ensure that the associated artist is also a musician and was a band member of Dizzy Gillespie
  ?associatedArtist rdf:type dbo:Musician .
  ?bandMemberRelation dbo:musicalArtist ?associatedArtist ;
                      dbo:member ?dizzyGillespie .
  ?dizzyGillespie rdfs:label ""Dizzy Gillespie""@en .
}
```",4,5,5,2,3,2,3,28,0,0,3,0,0.0,0
442,7,val,"Give me the resting place of the work of Roosevelt, Theodore and resting place of Fay Bainter.","SELECT ?result WHERE { ?v2 <http://dbpedia.org/property/author> ""Roosevelt, Theodore""@en . <http://dbpedia.org/resource/Fay_Bainter> <http://dbpedia.org/ontology/restingPlace> ?result . ?v2 <http://dbpedia.org/ontology/restingPlace> ?result . }","```sparql
# Query to find the resting place of Theodore Roosevelt
SELECT ?restingPlace WHERE {
  dbpedia:Theodore_Roosevelt dbo:deathPlace ?restingPlace .
  OPTIONAL { ?restingPlace rdfs:label ?placeLabel FILTER (lang(?placeLabel) = ""en"") }
}

UNION

# Query to find the resting place of Fay Bainter
SELECT ?restingPlace WHERE {
  dbpedia:Fay_Bainter dbo:deathPlace ?restingPlace .
  OPTIONAL { ?restingPlace rdfs:label ?placeLabel FILTER (lang(?placeLabel) = ""en"") }
}
```",3,3,4,2,2,2,2,9,0,0,1,0,0.0,0
445,42,val,"Give me the death place of Patrick Moore and entity in the award of George H. Cameron and entity in the residence, that is a country, of Anna Sharkey.",SELECT ?result WHERE { ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. <http://dbpedia.org/resource/Anna_Sharkey> <http://dbpedia.org/property/residence> ?v2 . <http://dbpedia.org/resource/Patrick_Moore> <http://dbpedia.org/ontology/deathPlace> ?result . <http://dbpedia.org/resource/George_H._Cameron> <http://dbpedia.org/property/awards> ?v1 . ?result <http://dbpedia.org/ontology/location> ?v2 . ?result <http://dbpedia.org/ontology/country> ?v1 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?deathPlace ?award ?countryResidence WHERE {
  # Death place of Patrick Moore
  dbr:Patrick_Moore dbo:deathPlace ?deathPlace .

  # Award associated with George H. Cameron
  dbr:George_H._Cameron dbo:honoraryAward ?award .

  # Country of residence for Anna Sharkey
  dbr:Anna_Sharkey dbo:residence ?residence .
  ?residence a dbo:Country ; rdfs:label ?countryResidence .
}
```",5,6,6,2,3,3,3,71,0,0,1,0,0.0,0
965,48,val,"Give me the spouse of the spouse of the parent of Louise Mountbatten and parent of the person born, that is a noble, as Prince George of Battenberg.","SELECT ?result WHERE { ?v0 <http://dbpedia.org/ontology/parent> ?result . ?result <http://dbpedia.org/ontology/spouse> ?v1 . ?v3 <http://dbpedia.org/ontology/spouse> ?v1 . <http://dbpedia.org/resource/Louise_Mountbatten> <http://dbpedia.org/ontology/parent> ?v3 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Noble>. ?v0 <http://dbpedia.org/property/birthName> ""Prince George of Battenberg""@en . }","```sparql
# Step 1: Find Louise Mountbatten's parent
SELECT ?parent WHERE {
    wd:Q123456 wdt:P22 ?parent. # Assuming Q123456 is Louise Mountbatten's DBpedia ID
}

# Step 2: Find the spouse of Louise Mountbatten's parent
SELECT ?spouse WHERE {
    ?parent wdt:P26 ?spouse.
}

# Step 3: Find the spouse of that spouse
SELECT ?finalSpouse WHERE {
    ?spouse wdt:P26 ?finalSpouse.
}

# Step 4: Determine the parent of Prince George of Battenberg
SELECT ?parentOfPrinceGeorge WHERE {
    wd:Q654321 wdt:P22 ?parentOfPrinceGeorge. # Assuming Q654321 is Prince George of Battenberg's DBpedia ID
}

# Step 5: Find the noble person born from that parentage
SELECT ?noblePerson WHERE {
    ?parentOfPrinceGeorge wdt:P40 ?noblePerson.
    ?noblePerson wdt:P31 wd:Q12345. # Assuming Q12345 is the class for nobles
}

# Step 6: Identify the spouse of that noble person
SELECT ?spouseOfNoble WHERE {
    ?noblePerson wdt:P26 ?spouseOfNoble.
}
```

Note: The actual DBpedia IDs (e.g., `Q123456`, `Q654321`) need to be replaced with the correct identifiers for Louise Mountbatten and Prince George of Battenberg. Additionally, the class ID for nobles (`Q12345`) should be verified.",5,6,6,3,2,3,3,71,0,0,2,0,0.0,0
443,19,val,Give me the birthplace of Ulf Lundell and landmark at elevation of the award of William Shepherd and birthplace of Carl Larsson.,SELECT ?result WHERE { <http://dbpedia.org/resource/Carl_Larsson> <http://dbpedia.org/ontology/birthPlace> ?result . ?result <http://dbpedia.org/ontology/elevation> ?v1 . <http://dbpedia.org/resource/William_Shepherd> <http://dbpedia.org/property/awards> ?v1 . <http://dbpedia.org/resource/Ulf_Lundell> <http://dbpedia.org/ontology/birthPlace> ?result . },"```sparql
# Query to get the birthplace of Ulf Lundell
SELECT ?birthPlace WHERE {
  ?person dbo:birthName ""Ulf Lundell""@sv .
  ?person dbo:birthPlace ?birthPlace .
}

UNION

# Assuming William Shepherd is associated with a specific award, we need to find it first.
# This part might require additional context or assumptions about the award.
SELECT ?landmark WHERE {
  ?award dbo:recipient wd:Q123456 . # Replace Q123456 with the actual WD item for William Shepherd
  ?awardLocation geo:hasElevation ?elevation .
  ?landmark geo:hasElevation ?elevation .
  ?landmark a dbo:Landmark .
}

UNION

# Query to get the birthplace of Carl Larsson
SELECT ?birthPlace WHERE {
  ?person dbo:birthName ""Carl Larsson""@sv .
  ?person dbo:birthPlace ?birthPlace .
}
```

Note: The query for William Shepherd assumes there is a known award and its location. You may need to adjust the WD item ID (`Q123456`) based on actual data.",4,4,5,2,3,2,3,28,0,0,1,0,0.0,0
236,16,val,"Give me the party member of the administration of James Madison and party member of the administration, that is an organisation, of John Adams.",SELECT ?result WHERE { ?v2 <http://dbpedia.org/property/leader> <http://dbpedia.org/resource/John_Adams> . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?v3 <http://dbpedia.org/property/leader> <http://dbpedia.org/resource/James_Madison> . ?result <http://dbpedia.org/ontology/party> ?v3 . ?result <http://dbpedia.org/ontology/party> ?v2 . },"```sparql
# Query for James Madison's party
SELECT ?party WHERE {
  wd:Q937 wdt:P39 wd:Q30 .
  wd:Q937 wdt:P102 ?party .
}

UNION

# Query for John Adams' party
SELECT ?party WHERE {
  wd:Q1166 wdt:P39 wd:Q30 .
  wd:Q1166 wdt:P102 ?party .
}
```",4,5,5,2,2,3,2,20,0,0,19,0,0.0,0
826,55,val,"Give me the predecessor of the parent of Prince Friedrich of Hesse and by Rhine and successor of the child, that is a royalty, of Louis I, Grand Duke of Hesse and spouse of the child of Johann Heinrich Appel.","SELECT ?result WHERE { ?v5 <http://dbpedia.org/ontology/successor> ?result . <http://dbpedia.org/resource/Louis_I,_Grand_Duke_of_Hesse> <http://dbpedia.org/ontology/child> ?v5 . ?v3 <http://dbpedia.org/ontology/spouse> ?result . <http://dbpedia.org/resource/Prince_Friedrich_of_Hesse_and_by_Rhine> <http://dbpedia.org/ontology/parent> ?v2 . ?result <http://dbpedia.org/ontology/successor> ?v2 . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v3 <http://dbpedia.org/property/father> ""Johann Heinrich Appel""@en . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?predecessor ?successor ?spouse WHERE {
  # Step 1: Find Prince Friedrich of Hesse and by Rhine's parent
  ?friedrich a dbo:Person ;
             foaf:name ""Prince Friedrich of Hesse and by Rhine""@en .
  ?parent dbo:child ?friedrich .

  # Step 2: Find the predecessor of this parent
  ?predecessor dbo:succeededBy ?parent .

  # Step 3: Identify Louis I's royal child
  ?louisI a dbo:Person ;
          foaf:name ""Louis I, Grand Duke of Hesse""@en .
  ?royalChild dbo:child ?louisI ;
              dbo:title ?title .
  FILTER EXISTS { ?title rdfs:label ?label . FILTER regex(?label, ""King|Queen|Duke|Duchess"", ""i"") }

  # Step 4: Find the successor of this royal child
  ?successor dbo:succeededBy ?royalChild .

  # Step 5: Identify Johann Heinrich Appel's child
  ?appel a dbo:Person ;
         foaf:name ""Johann Heinrich Appel""@en .
  ?child dbo:child ?appel .

  # Step 6: Find the spouse of Johann Heinrich Appel's child
  ?spouse dbo:spouse ?child .

  # Combine relationships to find the final answer
  FILTER (?predecessor = ?successor)
}
```",6,7,7,2,3,3,3,71,0,0,1,0,0.0,0
892,45,val,"Give me the landmark at elevation of 58 and entity in the administration, that is Italian and a region and a settlement and an administrative region, of the party, that is a political party and an organisation, of Andrea Cozzolino and entity in Italy.","SELECT ?result WHERE { ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/PoliticalParty>. ?result <http://dbpedia.org/ontology/province> ?v0 . <http://dbpedia.org/resource/Andrea_Cozzolino> <http://dbpedia.org/ontology/party> ?v3 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/AdministrativeRegion>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?result <http://dbpedia.org/ontology/elevation> ""58""^^<http://www.w3.org/2001/XMLSchema#integer> . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Region>. ?v0 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Italy>. ?result <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Italy> . ?v0 <http://dbpedia.org/property/leaderParty> ?v3 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?landmark ?region ?party WHERE {
  ?landmark a dbo:Lighthouse ;
            dbo:elevationAboveSeaLevel ""58""^^xsd:float ;
            dbo:location dbr:Italy .
  
  ?region a dbo:Region, dbo:Settlement ;
          dbo:country dbr:Italy ;
          dbo:administrativeRegion ?landmark .

  ?cozzolino dbo:memberOf ?party ;
             rdfs:label ""Andrea Cozzolino""@en .
  
  ?party a dbo:PoliticalParty, dbo:Organization .

  FILTER (lang(?cozzolino) = 'en')
}
```",5,11,6,3,3,3,3,71,0,0,2,0,0.0,0
955,17,val,"Give me the band of the band member, that is a musical artist and an artist, of the reference, that is a band and a group and an organisation, to Street Dogs and band of Nate Albert.","SELECT ?result WHERE { ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. ?result <http://dbpedia.org/ontology/bandMember> <http://dbpedia.org/resource/Nate_Albert> . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?v3 <http://dbpedia.org/ontology/associatedMusicalArtist> ?v0 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Group>. ?v0 <http://xmlns.com/foaf/0.1/name> ""Street Dogs""@en . ?result <http://dbpedia.org/ontology/bandMember> ?v3 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Band>. }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT DISTINCT ?bandOfInterest WHERE {
  # Find the band associated with Street Dogs and Nate Albert
  ?streetDogs a dbo:Band ;
              dbo:member ?nateAlbert .

  # Ensure Nate Albert is part of another band
  ?nateAlbert dbp:associatedBand ?otherBand .
  
  # Filter for bands that are also musical artists and artists
  ?otherBand a dbo:MusicalArtist, dbo:Artist ;
             rdfs:label ?bandLabel .

  FILTER (lang(?bandLabel) = 'en')
}
```",4,9,5,3,2,3,2,20,0,0,1,0,0.0,0
965,44,val,"Give me the spouse of Prince Louis of Battenberg and parent of the child, that is a royalty, of Prince Louis of Battenberg and parent of the person born, that is a noble, as Prince George of Battenberg.","SELECT ?result WHERE { ?v0 <http://dbpedia.org/ontology/parent> ?result . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Noble>. ?v4 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Prince_Louis_of_Battenberg> . ?v4 <http://dbpedia.org/ontology/parent> ?result . ?result <http://dbpedia.org/ontology/spouse> <http://dbpedia.org/resource/Prince_Louis_of_Battenberg> . ?v0 <http://dbpedia.org/property/birthName> ""Prince George of Battenberg""@en . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?spouse WHERE {
  dbr:Prince_Louis_of_Battenberg dbo:spouse ?spouse .
  FILTER EXISTS { ?child dbo:parent ?spouse . 
                 ?child a dbo:RoyalFamilyMember ;
                        dbo:parent dbr:Prince_Louis_of_Battenberg }
}
```",5,7,6,2,3,3,3,71,0,0,1,0,0.0,0
865,40,val,"Give me the native of the residence, that is a country, of the person decedent at Patna and father of Shahla Khatun and father of AK Abdul Momen.",SELECT ?result WHERE { ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. <http://dbpedia.org/resource/Shahla_Khatun> <http://dbpedia.org/property/father> ?result . ?v1 <http://dbpedia.org/ontology/deathPlace> <http://dbpedia.org/resource/Patna> . <http://dbpedia.org/resource/AK_Abdul_Momen> <http://dbpedia.org/property/father> ?result . ?v1 <http://dbpedia.org/property/residence> ?v0 . ?result <http://dbpedia.org/ontology/birthPlace> ?v0 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?nativePlace WHERE {
  ?person a dbo:Person ;
          foaf:name ""Maulvi Tamizuddin Khan""@en .
  
  OPTIONAL { ?person dbo:deathPlace dbr:Patna . }
  OPTIONAL { ?person dbo:spouse ?spouse . 
             ?spouse foaf:name ""Shahla Khatun""@en . }
  OPTIONAL { ?person dbo:child ?child1 .
             ?child1 foaf:name ""AK Abdul Momen""@en . }

  OPTIONAL { ?person dbo:residence ?residenceCountry .
             ?residenceCountry rdfs:label ?countryLabel .
             FILTER (lang(?countryLabel) = 'en' && regex(?countryLabel, ""Bangladesh"", ""i"")) }
  
  OPTIONAL { ?person dbo:nationality ?nationality . 
             ?nationality rdfs:label ?nativePlace . 
             FILTER (lang(?nativePlace) = 'en') }
}
```",5,6,6,3,3,3,3,71,0,0,1,0,0.0,0
892,51,val,"Give me the landmark at elevation of the award of Anna Ishii and entity in the administration, that is Italian and a region and a settlement and an administrative region, of the party, that is a political party and an organisation, of Andrea Cozzolino.",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/elevation> ?v4 . ?v0 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Italy>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. <http://dbpedia.org/resource/Anna_Ishii> <http://dbpedia.org/property/awards> ?v4 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?result <http://dbpedia.org/ontology/province> ?v0 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/PoliticalParty>. <http://dbpedia.org/resource/Andrea_Cozzolino> <http://dbpedia.org/ontology/party> ?v3 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Region>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/AdministrativeRegion>. ?v0 <http://dbpedia.org/property/leaderParty> ?v3 . },"```sparql
# Step 1: Find Anna Ishii's Award
SELECT ?award WHERE {
  ?person foaf:name ""Anna Ishii""@en .
  ?person dbo:awardsReceived ?award .
}

# Step 2: Find Landmark at the Elevation of the Award
SELECT DISTINCT ?landmark WHERE {
  ?award dbo:elevation ?elevation .
  ?landmark dbo:elevation ?elevation ;
            a dbo:Lighthouse ; # Assuming we are looking for a landmark like a lighthouse
            dbo:country dbr:Italy .
}

# Step 3: Find Andrea Cozzolino's Party
SELECT DISTINCT ?party WHERE {
  ?person foaf:name ""Andrea Cozzolino""@en ;
          dbo:memberOf ?party .
  ?party a dbo:PoliticalParty .
}

# Step 4: Identify the Italian Region and Settlement
SELECT DISTINCT ?region ?settlement WHERE {
  ?party dbo:country dbr:Italy .
  ?region a dbo:AdministrativeRegion, dbo:Settlement ;
          dbo:country dbr:Italy ;
          rdfs:label ?label .
  FILTER (CONTAINS(LCASE(?label), ""italy""))
}
```",5,11,6,3,2,3,3,71,0,0,2,0,0.0,0
582,45,val,"Give me the player in Kazuaki Nagasawa and figure known as the nickname of the team, that is an organisation, of Hajime Moriyasu and reference to Japan.","SELECT ?result WHERE { ?result <http://xmlns.com/foaf/0.1/name> ""Japan""@en . <http://dbpedia.org/resource/Kazuaki_Nagasawa> <http://dbpedia.org/ontology/team> ?result . ?v0 <http://dbpedia.org/ontology/coach> <http://dbpedia.org/resource/Hajime_Moriyasu> . ?v0 <http://dbpedia.org/property/nickname> ?v1 . ?result <http://dbpedia.org/property/nickname> ?v1 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?playerTeam ?managerNickname WHERE {
  # Find the team Kazuaki Nagasawa played for
  ?nagasawa a dbo:FootballPlayer ;
            foaf:name ""Kazuaki Nagasawa""@en .
  ?nagasawa dbo:team ?playerTeam .

  # Find Hajime Moriyasu's current managerial position and its nickname
  ?moriyasu a dbo:FootballManager ;
           foaf:name ""Hajime Moriyasu""@en .
  ?moriyasu dbo:currentClub ?managerTeam .
  ?managerTeam dbp:nickname ?managerNickname .

  # Ensure both teams have a connection to Japan
  ?playerTeam dbo:country dbr:Japan .
  ?managerTeam dbo:country dbr:Japan .
}
```",5,6,6,3,3,3,3,71,0,0,1,0,0.0,0
417,49,val,"Give me the spouse of the parent, that is a royalty, of Count Ingolf of Rosenborg and child of the child, that is a royalty, of the parent, that is a royalty, of Alexandrine of Mecklenburg-Schwerin.",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/parent> ?v1 . ?v2 <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Count_Ingolf_of_Rosenborg> . ?result <http://dbpedia.org/ontology/spouse> ?v2 . ?v1 <http://dbpedia.org/property/father> ?v0 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. <http://dbpedia.org/resource/Alexandrine_of_Mecklenburg-Schwerin> <http://dbpedia.org/ontology/parent> ?v0 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT DISTINCT ?spouse WHERE {
  # Step 1: Find Count Ingolf of Rosenborg's royal parent
  ?ingolf dbo:parent ?royalParentIngolf .
  ?royalParentIngolf rdf:type dbo:Monarch .

  # Step 2: Find the spouse of that royal parent
  ?royalParentIngolf dbp:spouse ?spouseIngolf .

  # Step 3: Find Alexandrine of Mecklenburg-Schwerin's royal parent
  ?alexandrine dbo:parent ?royalParentAlexandrine .
  ?royalParentAlexandrine rdf:type dbo:Monarch .

  # Step 4: Find the child of that royal parent who is royalty
  ?royalChild dbp:childOf ?royalParentAlexandrine ;
              rdf:type dbo:Monarch .

  # Step 5: Identify the child of that royal descendant
  ?finalDescendant dbp:parent ?royalChild .

  # Step 6: Determine the spouse of this final individual
  ?finalDescendant dbp:spouse ?spouse .
}
```",5,8,6,3,2,3,3,71,0,0,1,0,0.0,0
987,51,val,"Give me the entity in the region, that is a country, of the time zone, that is a sports event, in Canicosa de la Sierra and birth place of the actor of All for Free.",SELECT ?result WHERE { <http://dbpedia.org/resource/All_for_Free> <http://dbpedia.org/property/starring> ?v4 . ?result <http://dbpedia.org/ontology/country> ?v0 . <http://dbpedia.org/resource/Canicosa_de_la_Sierra> <http://dbpedia.org/ontology/timeZone> ?v3 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. ?v4 <http://dbpedia.org/ontology/birthPlace> ?result . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsEvent>. ?v0 <http://dbpedia.org/property/timeZone> ?v3 . },"```sparql
# Step 1: Find Canicosa de la Sierra's time zone
SELECT ?timeZone WHERE {
  wd:Q1234568 wdt:P421 ?timeZone .
}

# Step 2: Identify sports events in this time zone
SELECT DISTINCT ?event WHERE {
  ?event wdt:P421 ?timeZone ;
         wdt:P31 wd:Q118037 . # Q118037 is the concept of a sports event
}

# Step 3: Determine the region or country associated with these sports events
SELECT DISTINCT ?country WHERE {
  ?event wdt:P17 ?country .
}

# Step 4: Identify actor from ""All for Free""
SELECT DISTINCT ?actor WHERE {
  wd:Q789012 wdt:P161 ?actor . # Q789012 is the movie ""All for Free""
}

# Step 5: Find birthplace of this actor
SELECT DISTINCT ?birthPlace WHERE {
  ?actor wdt:P19 ?birthPlace .
}

# Step 6: Match region/country with birthplace
SELECT DISTINCT ?entity WHERE {
  VALUES (?country) { ?country }
  ?birthPlace wdt:P17 ?country .
}
```

Note: Replace `wd:Q1234568` with the actual DBpedia identifier for Canicosa de la Sierra and `wd:Q789012` with the identifier for ""All for Free"" in DBpedia. The query assumes that these identifiers are known or can be found through preliminary queries.",5,7,6,3,2,3,3,71,0,0,4,0,0.0,0
124,47,val,"Give me the military force of the war, that is an event and a military conflict and a societal event, of the awardee of British South Africa Company Medal and commander in the war, that is a societal event and a military conflict, of A Field Battery, Royal Australian Artillery.","SELECT ?result WHERE { ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?result <http://dbpedia.org/ontology/battle> ?v4 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?v0 <http://dbpedia.org/ontology/battle> ?v4 . ?v2 <http://dbpedia.org/ontology/commander> ?result . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. <http://dbpedia.org/resource/A_Field_Battery,_Royal_Australian_Artillery> <http://dbpedia.org/ontology/battle> ?v2 . ?v0 <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/British_South_Africa_Company_Medal> . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. }","```sparql
SELECT ?war ?militaryForce WHERE {
  # Step 1: Identify wars involving A Field Battery, Royal Australian Artillery
  ?unit rdfs:label ""A Field Battery, Royal Australian Artillery""@en .
  ?unit dbo:militaryConflict ?war .

  # Step 2: Find commanders of those wars
  ?commander dbo:commandedMilitaryForce ?militaryForce ;
             dbo:commandedMilitaryConflict ?war .

  # Step 3: Check if any commander received the British South Africa Company Medal
  ?medal rdfs:label ""British South Africa Company Medal""@en .
  ?recipient dbo:receivedAward ?medal .
  FILTER(?recipient = ?commander)

  # Ensure war is a societal event and military conflict
  ?war rdf:type dbpedia-owl:MilitaryConflict ;
       rdf:type dbpedia-owl:SocietalEvent .

  # Return the war and its associated military force
}
```",5,10,6,3,2,3,3,71,0,0,10,0,0.0,0
865,48,val,"Give me the native of the residence, that is a country, of the person decedent at Patna and father of the child of Abu Ahmad Abdul Hafiz.",SELECT ?result WHERE { ?v2 <http://dbpedia.org/property/father> ?result . ?v1 <http://dbpedia.org/property/residence> ?v0 . ?v2 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Abu_Ahmad_Abdul_Hafiz> . ?v1 <http://dbpedia.org/ontology/deathPlace> <http://dbpedia.org/resource/Patna> . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. ?result <http://dbpedia.org/ontology/birthPlace> ?v0 . },"```sparql
SELECT ?native WHERE {
  ?person foaf:name ""Abu Ahmad Abdul Hafiz""@en .
  ?person dbo:deathPlace dbr:Patna .
  ?person dbo:residence ?country .
  FILTER (isLiteral(?country) && datatype(?country) = xsd:string)
  ?country dbo:nativeCountry ?native .
}
```",5,6,6,3,2,3,3,71,0,0,1,0,0.0,0
465,42,val,"Give me the spouse of Archduchess Barbara of Austria and successor of the child, that is a royalty, of Anne of Brittany and successor of the child of Alfonso I d'Este.",SELECT ?result WHERE { <http://dbpedia.org/resource/Anne_of_Brittany> <http://dbpedia.org/ontology/child> ?v1 . ?v2 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Alfonso_I_d'Este> . ?v2 <http://dbpedia.org/ontology/successor> ?result . ?v1 <http://dbpedia.org/ontology/successor> ?result . ?result <http://dbpedia.org/ontology/spouse> <http://dbpedia.org/resource/Archduchess_Barbara_of_Austria> . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. },"```sparql
SELECT ?spouse WHERE {
  wd:Q123456 wdt:P26 ?spouse . # Archduchess Barbara of Austria's spouse
  FILTER EXISTS { 
    ?child wdt:P25 wd:Q123456 . # Child of Anne of Brittany
    ?successor wdt:P1368 ?child . # Successor of the child
    ?esteChild wdt:P25 wd:Q789012 . # Child of Alfonso I d'Este
    ?esteSuccessor wdt:P1368 ?esteChild . # Successor of the child
    ?spouse wdt:P26 ?successor . # Spouse connected to successor
    ?spouse wdt:P26 ?esteSuccessor . # Spouse connected to Este's successor
  }
}
```

Note: Replace `wd:Q123456` with the actual DBpedia ID for Archduchess Barbara of Austria, and `wd:Q789012` with the ID for Alfonso I d'Este. The query assumes that these IDs are known or can be looked up in DBpedia.",5,6,6,2,3,3,3,71,0,0,1,0,0.0,0
715,55,val,"Give me the commander in the force, that is a military conflict, of Abd el-Krim and leader of the office, that is a government agency and an organisation, of Carlos Franco Iribarnegaray and commander in the force of Francisco Largo Caballero.",SELECT ?result WHERE { ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. <http://dbpedia.org/resource/Carlos_Franco_Iribarnegaray> <http://dbpedia.org/property/office> ?v2 . ?v3 <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Abd_el-Krim> . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v5 <http://dbpedia.org/ontology/commander> ?result . ?v5 <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Francisco_Largo_Caballero> . ?v3 <http://dbpedia.org/ontology/commander> ?result . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/GovernmentAgency>. ?v2 <http://dbpedia.org/ontology/leader> ?result . },"```sparql
SELECT ?person WHERE {
  # Abd el-Krim's military conflict (Rif War)
  ?rifWar dbo:commander ?abdelKrim .
  ?abdelKrim foaf:name ""Abd el-Krim"" .

  # Carlos Franco Iribarnegaray's office (Director-General of Security during the Spanish Civil War)
  ?office dbo:leader ?carlosFranco .
  ?carlosFranco foaf:name ""Carlos Franco Iribarnegaray"" .
  
  # Francisco Largo Caballero's military force (Spanish Civil War)
  ?civilWar dbo:commander ?franciscoLargo .
  ?franciscoLargo foaf:name ""Francisco Largo Caballero"" .

  # The person we are looking for
  ?rifWar dbo:commander ?person .
  ?office dbo:leader ?person .
  ?civilWar dbo:commander ?person .

  FILTER(?person != ?abdelKrim && ?person != ?carlosFranco && ?person != ?franciscoLargo)
}
```",6,9,7,2,3,3,3,71,0,0,1,0,0.0,0
976,52,val,"Give me the office of Naci Bostancı and office of the mayor, that is a politician and an office holder and Turkish, of Nation Alliance (Turkey) and office of the leader, that is a politician, of the administration, that is an organisation, of Kemal Kılıçdaroğlu.",SELECT ?result WHERE { ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v4 <http://dbpedia.org/ontology/nationality> <http://dbpedia.org/resource/Turkey>. ?v3 <http://dbpedia.org/ontology/leader> ?v1 . ?v1 <http://dbpedia.org/property/office> ?result . <http://dbpedia.org/resource/Naci_Bostancı> <http://dbpedia.org/property/office> ?result . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. <http://dbpedia.org/resource/Nation_Alliance_(Turkey)> <http://dbpedia.org/property/leader> ?v4 . ?v3 <http://dbpedia.org/property/leader> <http://dbpedia.org/resource/Kemal_Kılıçdaroğlu> . ?v4 <http://dbpedia.org/property/office> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?naciBostanciOffice ?kemalKilicdarogluOffice
WHERE {
  # Find Naci Bostancı's office in the Nation Alliance
  dbr:Naci_Bostancı dbo:nationality dbr:Turkey ;
                    dbo:partyAffiliation dbr:Nation_Alliance_(Turkey) .
  
  OPTIONAL { 
    ?naciBostanciOffice dbo:officeHolder dbr:Naci_Bostancı .
  }
  
  # Find Kemal Kılıçdaroğlu's office as leader of CHP
  dbr:Kemal_Kılıçdaroğlu dbo:nationality dbr:Turkey ;
                        dbo:partyAffiliation dbr:Republican_People%27s_Party_(Turkey) .
  
  OPTIONAL { 
    ?kemalKilicdarogluOffice dbo:leader dbr:Kemal_Kılıçdaroğlu .
  }
}
```",6,11,7,3,3,3,3,71,0,0,1,0,0.0,0
445,40,val,"Give me the entity in the residence, that is a country, of the resident, that is an athlete, of Great Britain and entity in United Kingdom and death place of Patrick Moore.",SELECT ?result WHERE { ?v2 <http://dbpedia.org/property/residence> <http://dbpedia.org/resource/Great_Britain> . ?v2 <http://dbpedia.org/property/residence> ?v1 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. ?result <http://dbpedia.org/ontology/location> ?v1 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Athlete>. <http://dbpedia.org/resource/Patrick_Moore> <http://dbpedia.org/ontology/deathPlace> ?result . ?result <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/United_Kingdom> . },"```sparql
# Step 1: Get athletes from Great Britain and their residences that are in the UK
SELECT DISTINCT ?athlete ?residenceCountry WHERE {
  ?athlete dbo:nationality dbr:United_Kingdom ;
           dbo:sport ?sport .
  OPTIONAL { ?athlete dbo:residenceLocation ?location . }
  ?location dbo:country dbr:United_Kingdom .
  ?location rdfs:label ?residenceCountry .
  FILTER (lang(?residenceCountry) = ""en"")
}

UNION

# Step 2: Get the death place of Patrick Moore
SELECT DISTINCT ?deathPlace WHERE {
  dbr:Patrick_Moore dbo:placeOfBirth ?birthPlace ;
                     dbo:deathPlace ?deathPlace .
}

# Step 3: Find common entity between athlete's residence and Patrick Moore's death place
SELECT DISTINCT ?commonEntity WHERE {
  VALUES ?residenceCountry { 
    # Placeholder for results from step 1
  }
  VALUES ?deathPlace { 
    # Placeholder for results from step 2
  }
  FILTER (?residenceCountry = ?deathPlace)
}
```

Note: The placeholders in the `VALUES` clause need to be replaced with actual values obtained from executing the first two queries separately. This is because SPARQL does not support dynamic subquery results directly within a single query.",5,7,6,3,3,3,3,71,0,0,1,0,0.0,0
839,50,val,"Give me the band of the band, that is a musical artist, of Charlie Huhn and band of the member of the band, that is a band and a group, of Peter Schorowsky.",SELECT ?result WHERE { ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. <http://dbpedia.org/resource/Peter_Schorowsky> <http://dbpedia.org/ontology/associatedMusicalArtist> ?v0 . ?result <http://dbpedia.org/ontology/bandMember> ?v4 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Band>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Group>. ?result <http://dbpedia.org/ontology/bandMember> ?v3 . ?v0 <http://dbpedia.org/ontology/bandMember> ?v4 . <http://dbpedia.org/resource/Charlie_Huhn> <http://dbpedia.org/ontology/associatedMusicalArtist> ?v3 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?charlieBand ?peterBand WHERE {
  # Find the band associated with Charlie Huhn as a musical artist
  ?charlieHuhn dbo:musicalArtist dbr:Charlie_Huhn .
  ?charlieHuhn dbo:band ?charlieBand .

  # Find the band that Peter Schorowsky is a member of
  ?peterSchorowsky dbo:member dbr:Peter_Schorowsky .
  ?peterSchorowsky dbo:band ?peterBand .
}
```",5,8,6,3,2,3,3,71,0,0,1,0,0.0,0
507,46,val,"Give me the spouse of the person born as the birth name of Anne V. Coates and director of the movie, that is a movie and a work, with Beryl Reid.",SELECT ?result WHERE { <http://dbpedia.org/resource/Anne_V._Coates> <http://dbpedia.org/property/birthName> ?v2 . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Film>. ?v1 <http://dbpedia.org/property/birthName> ?v2 . ?v4 <http://dbpedia.org/property/starring> <http://dbpedia.org/resource/Beryl_Reid> . ?v4 <http://dbpedia.org/ontology/director> ?result . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?result <http://dbpedia.org/ontology/spouse> ?v1 . },"```sparql
# Step 1: Find Anne V. Coates' birth name
SELECT ?birthName WHERE {
  dbpedia:Anne_V._Coates dbo:birthName ?birthName .
}

# Step 2: Identify movies directed by Anne V. Coates featuring Beryl Reid
SELECT DISTINCT ?movie WHERE {
  dbpedia:Anne_V._Coates dbo:directed ?movie .
  ?movie dbo:starring ?actor .
  ?actor rdfs:label ""Beryl Reid""@en .
}

# Step 3: Find the spouse of the person born with Anne V. Coates' birth name and directed that movie
SELECT DISTINCT ?spouse WHERE {
  # Assuming we have found the birth name from step 1, let's say it is stored in a variable $birthName
  BIND(""Anne_V._Coates"" AS ?directorLabel) # This would be dynamically set based on previous query results

  ?person rdfs:label ?directorLabel .
  ?person dbo:birthName ?birthName .
  
  ?movie dbo:directedBy ?person .
  ?movie dbpedia-owl:starring ?actor .
  ?actor rdfs:label ""Beryl Reid""@en .

  ?person dbo:spouse ?spouse .
}
```",5,7,6,3,2,3,3,71,0,0,1,0,0.0,0
216,43,val,"Give me the player in the coach, that is a soccer player and a sports manager and a soccer manager, of the player, that is an organisation and a sports club and a soccer club, in Džemal Berberović and player in Igor Bišćan and team of Ognjen Vukojević.",SELECT ?result WHERE { ?v0 <http://dbpedia.org/ontology/coach> ?v4 . <http://dbpedia.org/resource/Igor_Bišćan> <http://dbpedia.org/ontology/team> ?result . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsManager>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerClub>. <http://dbpedia.org/resource/Džemal_Berberović> <http://dbpedia.org/ontology/team> ?v0 . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerPlayer>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsClub>. ?v4 <http://dbpedia.org/ontology/team> ?result . ?result <http://dbpedia.org/ontology/coach> <http://dbpedia.org/resource/Ognjen_Vukojević> . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerManager>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?coach WHERE {
  # Find the clubs for Džemal Berberović
  ?club1 dbo:member dbr:Džemal_Berberović .
  ?club1 a dbo:SoccerClub .

  # Find the clubs for Igor Bišćan
  ?club2 dbo:member dbr:Igor_Bišćan .
  ?club2 a dbo:SoccerClub .

  # Find the club for Ognjen Vukojević
  ?club3 dbo:member dbr:Ognjen_Vukojević .
  ?club3 a dbo:SportsTeam .

  # Find coaches who are players, sports managers, and soccer managers
  ?coach dbo:managerOf ?club1 ;
         dbo:managerOf ?club2 ;
         dbo:managerOf ?club3 ;
         a dbo:SoccerPlayer ;
         a dbo:SportsManager ;
         a dbo:SoccerManager .
}
```",5,11,6,3,3,3,3,71,0,0,1,0,0.0,0
926,48,val,"Give me the father of the father of the spouse of Neşerek Kadın and child of the father, that is a royalty, of Mustafa III.",SELECT ?result WHERE { ?v0 <http://dbpedia.org/ontology/child> ?result . ?v3 <http://dbpedia.org/property/father> ?v1 . <http://dbpedia.org/resource/Mustafa_III> <http://dbpedia.org/property/father> ?v0 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v1 <http://dbpedia.org/property/father> ?result . <http://dbpedia.org/resource/Neşerek_Kadın> <http://dbpedia.org/ontology/spouse> ?v3 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?commonAncestor ?fatherOfCommonAncestor WHERE {
  # Step 1: Identify Neşerek Kadın's spouse
  ?neserekkadin a dbo:Spouse ;
                dbo:spouse ?spouse .

  # Step 2: Find the father of Neşerek Kadın's spouse
  ?spouse dbo:father ?fatherOfSpouse .

  # Step 3: Identify Mustafa III and his father
  dbr:Mustafa_III a dbo:Monarch ;
                  dbo:father ?mustafaFather .

  # Step 4: Find the child of Mustafa III's father who is royalty
  ?mustafaFather dbo:child ?royalChild .
  FILTER EXISTS { ?royalChild a dbo:Monarch }

  # Step 5: Determine the common ancestor
  ?fatherOfSpouse rdfs:subClassOf* ?commonAncestor .
  ?royalChild rdfs:subClassOf* ?commonAncestor .

  # Step 6: Identify the father of this common ancestor who is royalty
  ?commonAncestor dbo:father ?fatherOfCommonAncestor .
  FILTER EXISTS { ?fatherOfCommonAncestor a dbo:Monarch }
}
```",5,6,6,3,2,3,3,71,0,0,1,0,0.0,0
933,54,val,Give me the reference to the birth name of the professional in Musician and band of The Ramong Sound and band of the band of Alan Warner (musician).,SELECT ?result WHERE { ?v2 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?result <http://xmlns.com/foaf/0.1/name> ?v4 . <http://dbpedia.org/resource/The_Ramong_Sound> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v1 <http://dbpedia.org/property/occupation> <http://dbpedia.org/resource/Musician> . ?v1 <http://dbpedia.org/property/birthName> ?v4 . <http://dbpedia.org/resource/Alan_Warner_(musician)> <http://dbpedia.org/ontology/associatedMusicalArtist> ?v2 . },"```sparql
PREFIX dbp: <http://dbpedia.org/property/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT ?birthName WHERE {
  ?band a dbo:Band ;
        rdfs:label ""The Ramong Sound""@en .
  
  ?musician dbp:band ?band ;
            foaf:name ?realName .

  FILTER(CONTAINS(LCASE(?realName), ""alan warner""))

  OPTIONAL { ?musician foaf:name ?birthName }
}
```",6,6,7,3,3,3,3,71,0,0,1,0,0.0,0
329,22,val,"Give me the entity in the region, that is a country, of Western European Time and birthplace of the author of The Tailor and Ansty.",SELECT ?result WHERE { <http://dbpedia.org/resource/The_Tailor_and_Ansty> <http://dbpedia.org/property/author> ?v2 . ?result <http://dbpedia.org/ontology/country> ?v3 . ?v3 <http://dbpedia.org/property/timeZone> <http://dbpedia.org/resource/Western_European_Time> . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. ?v2 <http://dbpedia.org/ontology/birthPlace> ?result . },"```sparql
SELECT ?country WHERE {
  ?author foaf:name ""George MacDonald""@en .
  ?author dbo:birthPlace ?birthPlace .
  ?birthPlace geo:hasCoordinate ?coordinate .
  ?coordinate geo:lat ?latitude ;
              geo:long ?longitude .
  FILTER(?latitude >= 56.0 && ?latitude <= 60.0 && ?longitude >= -8.0 && ?longitude <= -2.0) # Approximate coordinates for Scotland
  ?country dbr:United_Kingdom/geo:hasLocation/geo:location ?birthPlace .
  ?country a dbo:Country .
}
```",4,5,5,2,2,2,3,28,0,0,1,0,0.0,0
136,7,val,Give me the landmark at elevation of 5 and region coded as the area code of Levenhagen.,"SELECT ?result WHERE { <http://dbpedia.org/resource/Levenhagen> <http://dbpedia.org/ontology/areaCode> ?v0 . ?result <http://dbpedia.org/ontology/elevation> ""5""^^<http://www.w3.org/2001/XMLSchema#integer> . ?result <http://dbpedia.org/ontology/areaCode> ?v0 . }","```sparql
# Step 1: Find the area code for Levenhagen
SELECT ?areaCode WHERE {
  ?place rdfs:label ""Levenhagen""@en .
  ?place wdt:P281 ?areaCode .
}

# Step 2: Use the obtained area code to find a landmark at elevation of 5 meters in that region
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?landmark WHERE {
  ?landmark a dbo:Lighthouse ;
            dbo:elevationAboveSeaLevel ""5""^^xsd:float ;
            dbo:location dbr:Levenhagen .
}
```

Note: The second query assumes that the area code obtained from the first query is used to filter landmarks in Levenhagen. If DBpedia does not directly link landmarks with postal codes, additional steps may be needed to refine this search based on available data.",3,3,4,2,2,2,2,9,0,0,1,0,0.0,0
582,43,val,"Give me the player in the father, that is an athlete and a soccer manager and a sports manager, of the child of Kazuaki Nagasawa and figure known as --10-19 and reference to Japan.","SELECT ?result WHERE { ?v0 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Kazuaki_Nagasawa> . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerManager>. ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Athlete>. ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsManager>. ?result <http://dbpedia.org/property/nickname> ""--10-19""^^<http://www.w3.org/2001/XMLSchema#gMonthDay> . ?v4 <http://dbpedia.org/ontology/team> ?result . ?v0 <http://dbpedia.org/property/father> ?v4 . ?result <http://xmlns.com/foaf/0.1/name> ""Japan""@en . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?father WHERE {
  # Find Kazuaki Nagasawa
  ?kazuaki a dbo:Person ;
           foaf:name ""Kazuaki Nagasawa""@en .

  # Identify his child
  ?child dbo:parent ?kazuaki .
  
  # Assume --10-19 is an alias or another name for the child
  OPTIONAL { ?child foaf:name ""--10-19""@en . }

  # Find the father of this child who fits the description
  ?father dbo:spouse ?mother ;
          dbo:parent ?child .

  # Ensure the father is an athlete, soccer manager, and sports manager
  ?father a dbo:Athlete ;
          dbo:sport ""Soccer""@en .
  
  OPTIONAL { ?father dbo:occupation dbp:SoccerManager . }
  OPTIONAL { ?father dbo:occupation dbp:SportsManager . }

  # Ensure the father has a connection to Japan
  ?father dbo:nationality <http://dbpedia.org/resource/Japan> .

}
```",5,8,6,3,3,3,3,71,0,0,1,0,0.0,0
933,48,val,"Give me the band of the band of the band, that is an artist and a musical artist, of The Ramong Sound and band of the band, that is a group and a band and an organisation, of Alan Warner (musician).",SELECT ?result WHERE { ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. ?v1 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Band>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Group>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. <http://dbpedia.org/resource/The_Ramong_Sound> <http://dbpedia.org/ontology/associatedMusicalArtist> ?v3 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. <http://dbpedia.org/resource/Alan_Warner_(musician)> <http://dbpedia.org/ontology/associatedMusicalArtist> ?v0 . ?v0 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v3 <http://dbpedia.org/ontology/associatedMusicalArtist> ?v1 . },"```sparql
SELECT DISTINCT ?bandMember ?alanWarnerBand WHERE {
  # Find members of The Ramones who are also artists and musical artists
  ?ramones rdf:type dbo:MusicalArtist .
  ?ramones foaf:name ""The Ramones"" .
  ?ramones dbo:member ?bandMember .
  ?bandMember rdf:type dbo:MusicalArtist .
  ?bandMember dbo:genre ?genre .

  # Find bands associated with Alan Warner
  ?alanWarner foaf:name ""Alan Warner (musician)"" .
  ?alanWarner dbo:memberOf ?alanWarnerBand .
  ?alanWarnerBand rdf:type dbo:Band ;
                  dbo:genre ?genre2 .
  
  FILTER(?genre = ?genre2)
}
```",5,10,6,3,2,3,3,71,0,0,4,0,0.0,0
495,16,val,Give me the father of the child of Princess Charlotte of Saxe-Hildburghausen and child of the father of William I of Württemberg.,SELECT ?result WHERE { ?v3 <http://dbpedia.org/ontology/parent> <http://dbpedia.org/resource/Princess_Charlotte_of_Saxe-Hildburghausen> . ?result <http://dbpedia.org/property/father> ?v2 . <http://dbpedia.org/resource/William_I_of_Württemberg> <http://dbpedia.org/property/father> ?v2 . ?v3 <http://dbpedia.org/property/father> ?result . },"```sparql
SELECT ?father WHERE {
  ?princess rdf:type dbo:Person ;
            foaf:name ""Princess Charlotte of Saxe-Hildburghausen""@en .
  ?child1 dbo:parent ?princess ;
          dbo:parent ?father .
  ?william1 dbo:parent ?child1 ;
            foaf:name ""William I, Duke of Württemberg""@en .
  ?charles2Eugene rdf:type dbo:Person ;
                  foaf:name ""Charles II Eugene, Duke of Württemberg""@en ;
                  dbo:spouse ?princess .
  ?william2 rdf:type dbo:Person ;
            foaf:name ""William I of Württemberg""@en ;
            dbo:parent ?charles2Eugene .
}
```",4,4,5,2,2,3,2,20,0,0,1,0,0.0,0
273,15,val,Give me the spouse of the child of the child of Edoardo Agnelli (1831-1871) and parent of Gianni Agnelli.,SELECT ?result WHERE { <http://dbpedia.org/resource/Gianni_Agnelli> <http://dbpedia.org/ontology/parent> ?result . ?result <http://dbpedia.org/ontology/spouse> ?v1 . ?v0 <http://dbpedia.org/ontology/parent> <http://dbpedia.org/resource/Edoardo_Agnelli_(1831-1871)> . ?v0 <http://dbpedia.org/ontology/child> ?v1 . },"```sparql
SELECT ?spouse WHERE {
  # Find Edoardo Agnelli
  ?edoardo dbo:birthDate ?birthDate .
  FILTER (YEAR(?birthDate) = 1831 && MONTH(?birthDate) <= 12)
  
  # Find his children
  ?edoardo dbo:child ?child .

  # Find grandchildren by finding the child of each child
  ?child dbo:child ?grandchild .

  # Identify which grandchild is a parent to Gianni Agnelli
  ?grandchild dbo:parent ?gianni .
  ?gianni rdfs:label ""Gianni Agnelli""@en .

  # Find the spouse of this grandchild
  ?grandchild dbo:spouse ?spouse .
}
```",4,4,5,3,2,3,2,20,0,0,1,0,0.0,0
465,48,val,"Give me the successor of the child, that is a royalty, of Anne of Brittany and successor of the child of the parent of Ercole II d'Este, Duke of Ferrara.","SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/successor> ?result . <http://dbpedia.org/resource/Ercole_II_d'Este,_Duke_of_Ferrara> <http://dbpedia.org/ontology/parent> ?v3 . ?v2 <http://dbpedia.org/property/father> ?v3 . <http://dbpedia.org/resource/Anne_of_Brittany> <http://dbpedia.org/ontology/child> ?v1 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v2 <http://dbpedia.org/ontology/successor> ?result . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?successor WHERE {
  # Anne of Brittany's child who became royalty
  ?anneChild a dbo:Monarch ;
             dbo:spouse dbr:François_I_of_France ;
             rdfs:label ""Claude of France""@en .

  # Successor of Claude of France
  ?claudesuccessor dbo:predecessor ?anneChild ;
                   rdfs:label ?successorLabel .

  FILTER(CONTAINS(LCASE(?successorLabel), ""claude of france"") && LCASE(?successorLabel) != ""claude of france"")

  # Ercole II d'Este's parent
  ?ercoleParent dbo:child dbr:Alfonso_I_d'_Este ;
                rdfs:label ""Ercole II d'Este""@en .

  # Child of Alfonso I d'Este
  ?alfonsoChild dbo:parent ?ercoleParent ;
               rdfs:label ""Lucrezia Borgia""@en .

  # Successor of Lucrezia Borgia's child (Giovanni de' Medici)
  ?giovannisuccessor dbo:predecessor ?alfonsoChild ;
                    rdfs:label ?successorLabel2 .
  
  FILTER(CONTAINS(LCASE(?successorLabel2), ""pope leo x"") && LCASE(?successorLabel2) != ""lucrezia borgia"")

  # Find common successor
  VALUES ?commonSuccessor { ?claudesuccessor ?giovannisuccessor }
}
```",5,6,6,3,2,3,3,71,0,0,1,0,0.0,0
365,16,val,"Give me the spouse of the native, that is a politician, of Poltava Governorate and person born as the birth name of Symon Petliura.",SELECT ?result WHERE { ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v3 <http://dbpedia.org/ontology/spouse> ?result . ?result <http://dbpedia.org/property/birthName> ?v2 . ?v3 <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Poltava_Governorate> . <http://dbpedia.org/resource/Symon_Petliura> <http://dbpedia.org/property/birthName> ?v2 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?spouse WHERE {
  # Find Symon Petliura's birth name
  dbr:Symon_Petliura dbo:birthName ?birthName .
  
  # Find politicians native to Poltava Governorate
  ?politician a dbo:Politician ;
             dbo:nativePlace dbr:Poltava_Governorate ;
             dbo:birthName ?birthName .

  # Get the spouse of such a politician
  ?politician dbo:spouse ?spouse .
}
```",4,5,5,2,2,3,2,20,0,0,1,0,0.0,0
917,54,val,"Give me the parent of the child, that is a royalty, of Kamehameha IV and child of the father of the spouse, that is a royalty, of Leleiohoku I and child of Kekūanāoʻa.","SELECT ?result WHERE { ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v1 <http://dbpedia.org/ontology/spouse> <http://dbpedia.org/resource/Leleiohoku_I> . ?v1 <http://dbpedia.org/property/father> ?v4 . ?result <http://dbpedia.org/ontology/child> ?v2 . ?result <http://dbpedia.org/property/father> ""Kekūanāoʻa""@en . ?v2 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Kamehameha_IV> . ?result <http://dbpedia.org/ontology/parent> ?v4 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?parent WHERE {
  # Victoria Kamāmalu's details
  VALUES (?victoria) { dbr:Victoria_Kamāmalu }

  # Kamehameha IV and his spouse Kīnaʻu
  VALUES (?kamehamehaIV) { dbr:Kamehameha_IV }
  ?kamehamehaIV dbo:spouse ?kinau .
  
  # Leleiohoku I's spouse (Kīnaʻu)
  VALUES (?leleiokuiI) { dbr:Leleiohoku_I }
  ?leleiokuiI dbo:spouse ?kinau .

  # Kīnaʻu's father
  ?kinau dbo:father ?keoua .
  
  # Keōua Kalanikupule (father of Kīnaʻu)
  VALUES (?keoua) { dbr:Keōua_Kalanikupule }

  # Kekūanāoʻa
  VALUES (?kekuanaoa) { dbr:Kekūanāoʻa }
  
  # Victoria Kamāmalu's parents
  ?victoria dbo:parent ?parent .
  
  FILTER(?parent IN (dbr:Kamehameha_IV, dbr:Kīnaʻu))
}
```",6,8,7,3,3,3,3,71,0,0,1,0,0.0,0
645,43,val,"Give me the military force of the force, that is an event and a military conflict and a societal event, of the native, that is a president and a politician, of Restoration (Spain) and commander in Battle of Jarama and leader of Ministry of the Army (Spain).",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/battle> ?v4 . ?v0 <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Restoration_(Spain)> . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/President>. <http://dbpedia.org/resource/Ministry_of_the_Army_(Spain)> <http://dbpedia.org/ontology/leader> ?result . ?v4 <http://dbpedia.org/ontology/commander> ?v0 . <http://dbpedia.org/resource/Battle_of_Jarama> <http://dbpedia.org/ontology/commander> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?militaryForce WHERE {
  ?person dbo:nationality dbr:Spain .
  ?person dbo:birthPlace dbr:Restoration_(Spain) .
  ?person dbo:occupation dbr:President_of_Spain .
  ?person dbo:commanderInBattle dbr:Battle_of_Jarama .
  ?person dbo:leaderOfMinistry dbr:Ministry_of_the_Army_(Spain) .
  ?event dbo:type dbr:Military_conflict ; dbo:type dbr:Societal_event .
  ?militaryForce dbo:participatedIn ?event .
  FILTER(?person = dbr:Franco)
}
```",5,10,6,3,3,3,3,71,0,0,1,0,0.0,0
382,16,val,"Give me the landmark at elevation of the award of Harry Combes and birthplace of the manager, that is a soccer manager and an athlete and a sports manager, of Bonner SC.",SELECT ?result WHERE { ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsManager>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Athlete>. ?v2 <http://dbpedia.org/ontology/birthPlace> ?result . <http://dbpedia.org/resource/Bonner_SC> <http://dbpedia.org/ontology/manager> ?v2 . <http://dbpedia.org/resource/Harry_Combes> <http://dbpedia.org/property/awards> ?v3 . ?result <http://dbpedia.org/ontology/elevation> ?v3 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerManager>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?landmark WHERE {
  # Find the award associated with Harry Combes
  ?award dbo:name ""Combes Award""@en .
  
  # Find Thomas Stratos and his birthplace
  ?manager a dbo:SoccerManager ;
           foaf:birthPlace ?birthPlace .

  FILTER(?manager = dbr:Thomas_Stratos)

  # Find landmarks at the elevation of the award (symbolic) and birthplace of Thomas Stratos
  ?landmark dbo:elevation ?elevation .
  ?landmark dbo:location ?location .

  FILTER(?location = ?birthPlace)
  
  # Assuming symbolic elevation related to the Combes Award
  # This part is abstract as DBpedia might not have direct elevation data for awards
  # We assume a placeholder or known elevation if available

  # Example of using a known elevation (e.g., 1000 meters) for demonstration
  FILTER(?elevation = 1000)
}
```",4,7,5,2,2,3,2,20,0,0,1,0,0.0,0
445,48,val,"Give me the entity in the award of George H. Cameron and entity in the residence, that is a country, of the resident, that is an athlete, of Great Britain.",SELECT ?result WHERE { <http://dbpedia.org/resource/George_H._Cameron> <http://dbpedia.org/property/awards> ?v1 . ?v3 <http://dbpedia.org/property/residence> ?v2 . ?result <http://dbpedia.org/ontology/location> ?v2 . ?result <http://dbpedia.org/ontology/country> ?v1 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. ?v3 <http://dbpedia.org/property/residence> <http://dbpedia.org/resource/Great_Britain> . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Athlete>. },"```sparql
# Step 1: Find the award associated with George H. Cameron
SELECT ?award WHERE {
    ?person dbo:name ""George H. Cameron""@en .
    ?person dbo:awardsReceived ?award .
}

UNION

# Step 2: Find athletes who are residents of Great Britain and their countries of residence
SELECT DISTINCT ?athlete ?country WHERE {
    ?athlete dbo:nationality dbr:United_Kingdom ;
             a dbo:Athlete .
    OPTIONAL { ?athlete dbo:residenceCountry ?country . }
}
```",5,7,6,3,2,3,3,71,0,0,102,0,0.0,0
865,42,val,"Give me the father of the child of Abu Ahmad Abdul Hafiz and father of AK Abdul Momen and native of the residence, that is a country, of Ram Jaipal Singh Yadav.",SELECT ?result WHERE { <http://dbpedia.org/resource/Ram_Jaipal_Singh_Yadav> <http://dbpedia.org/property/residence> ?v0 . ?v2 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Abu_Ahmad_Abdul_Hafiz> . <http://dbpedia.org/resource/AK_Abdul_Momen> <http://dbpedia.org/property/father> ?result . ?v2 <http://dbpedia.org/property/father> ?result . ?result <http://dbpedia.org/ontology/birthPlace> ?v0 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. },"```sparql
# Step 1: Find Abu Ahmad Abdul Hafiz's child
SELECT ?child WHERE {
    ?person dbo:spouse ?abuAhmad.
    ?abuAhmad foaf:name ""Abu Ahmad Abdul Hafiz""@en.
    ?person dbo:parent ?child.
}

# Step 2: Find the father of Abu Ahmad Abdul Hafiz's child
SELECT ?father WHERE {
    ?child dbo:parent ?father.
    FILTER(?child IN (<result_from_step_1>))
}

# Step 3: Find AK Abdul Momen's father
SELECT ?akFather WHERE {
    ?person foaf:name ""AK Abdul Momen""@en.
    ?person dbo:parent ?akFather.
}

# Step 4: Check if the fathers are the same person
SELECT DISTINCT ?father WHERE {
    VALUES (?father) { (<result_from_step_2>) (<result_from_step_3>) }
}

# Step 5: Find Ram Jaipal Singh Yadav's native country
SELECT ?country WHERE {
    ?person foaf:name ""Ram Jaipal Singh Yadav""@en.
    ?person dbo:nationality ?nationality.
    ?nationality rdfs:label ?country.
    FILTER(LANG(?country) = 'en')
}

# Step 6: Check if the father is native of that country
SELECT DISTINCT ?father WHERE {
    VALUES (?father) { (<result_from_step_4>) }
    ?father dbo:nationality ?nationality.
    ?nationality rdfs:label ?country.
    FILTER(?country = <result_from_step_5> && LANG(?country) = 'en')
}
```",5,6,6,2,3,3,3,71,0,0,1,0,0.0,0
216,46,val,"Give me the player in the coach, that is a soccer player and a sports manager and a soccer manager, of Bosnia and Herzegovina national under-18 football team and player in the coach of the reference, that is an organisation and a soccer club, to Croatia U21.","SELECT ?result WHERE { ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerManager>. ?v2 <http://dbpedia.org/ontology/coach> ?v1 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. <http://dbpedia.org/resource/Bosnia_and_Herzegovina_national_under-18_football_team> <http://dbpedia.org/ontology/coach> ?v4 . ?v4 <http://dbpedia.org/ontology/team> ?result . ?v1 <http://dbpedia.org/ontology/team> ?result . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsManager>. ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerPlayer>. ?v2 <http://xmlns.com/foaf/0.1/name> ""Croatia U21""@en . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerClub>. }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?person WHERE {
  # Player in the coach for Bosnia and Herzegovina national under-18 football team
  ?team1 dbo:coach ?playerInCoach1 .
  ?playerInCoach1 dbo:nationality dbr:Bosnia_and_Herzegovina .
  ?playerInCoach1 dbo:occupation dbr:Soccer_player ;
                  dbo:occupation dbr:Sports_manager ;
                  dbo:occupation dbr:Soccer_manager .

  # Player in the coach for Croatia U21
  ?team2 dbo:coach ?playerInCoach2 .
  ?playerInCoach2 dbo:nationality dbr:Croatia .
  ?playerInCoach2 = ?playerInCoach1 .

  # Ensure team1 is Bosnia and Herzegovina national under-18 football team
  ?team1 rdfs:label ""Bosnia and Herzegovina national under-18 football team""@en .

  # Ensure team2 is associated with Croatia U21
  ?team2 rdfs:label ""Croatia national under-21 football team""@en .
}
```",5,10,6,3,2,3,3,71,0,0,3,0,0.0,0
47,41,val,Give me the office of the awardee of Banga Bhushan and office of the administration of Jagdeep Dhankhar and office of Ajoy Mukherjee.,SELECT ?result WHERE { ?v4 <http://dbpedia.org/property/office> ?result . ?v2 <http://dbpedia.org/property/office> ?result . ?v2 <http://dbpedia.org/property/governor> <http://dbpedia.org/resource/Jagdeep_Dhankhar> . ?v4 <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/Banga_Bhushan> . <http://dbpedia.org/resource/Ajoy_Mukherjee> <http://dbpedia.org/property/office> ?result . },"```sparql
# Query for Banga Bhushan awardee's office
SELECT ?office WHERE {
  ?award dcterms:isPartOf wd:Q1116 ; # West Bengal
          dbo:recipient ?person .
  ?person dbo:occupation ?office .
  FILTER (str(?award) = ""Banga Bhushan"")
}

# Query for Jagdeep Dhankhar's office
SELECT ?office WHERE {
  wd:Q1105018 dbo:positionHeld ?office .
  FILTER (str(?office) = ""Vice President of India"")
}

# Query for Ajoy Mukherjee's office
SELECT ?office WHERE {
  wd:Q1112345 dbo:positionHeld ?office .
  FILTER (str(?office) = ""Chief Minister of West Bengal"")
}
```",5,5,6,2,3,3,3,71,0,0,1,0,0.0,0
417,47,val,"Give me the spouse of the parent, that is a royalty, of Count Ingolf of Rosenborg and child of the father of the leader, that is a royalty, of Colony of Greenland.",SELECT ?result WHERE { ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. <http://dbpedia.org/resource/Colony_of_Greenland> <http://dbpedia.org/property/leader> ?v0 . ?result <http://dbpedia.org/ontology/spouse> ?v2 . ?result <http://dbpedia.org/property/father> ?v4 . ?v0 <http://dbpedia.org/property/father> ?v4 . ?v2 <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Count_Ingolf_of_Rosenborg> . },"```sparql
# Step 1: Identify Count Ingolf of Rosenborg
SELECT ?countIngolf WHERE {
  ?countIngolf dbo:title ""Count Ingolf of Rosenborg""@en .
}

# Step 2: Find the Parent that is a Royalty
SELECT ?royalParent WHERE {
  ?countIngolf foaf:parent ?person .
  ?person dbo:occupation dbp:Royalty .
  FILTER(?countIngolf IN (?countIngolf))
}

# Step 3: Determine the Spouse of this Royal Parent
SELECT ?spouse WHERE {
  ?royalParent dbo:spouse ?spouse .
  FILTER(?royalParent IN (SELECT ?person WHERE {
    ?countIngolf foaf:parent ?person .
    ?person dbo:occupation dbp:Royalty .
    FILTER(?countIngolf IN (?countIngolf))
  }))
}

# Step 4: Identify the Leader of Colony of Greenland
SELECT ?leader WHERE {
  ?leader dbo:title ""Leader of Colony of Greenland""@en .
}

# Step 5: Find the Father of this Leader
SELECT ?father WHERE {
  ?leader foaf:parent ?person .
  ?person rdf:type dbo:Father .
  FILTER(?leader IN (SELECT ?leader WHERE {
    ?leader dbo:title ""Leader of Colony of Greenland""@en .
  }))
}

# Step 6: Determine the Child of this Father that is a Royalty
SELECT ?royalChild WHERE {
  ?father foaf:child ?person .
  ?person dbo:occupation dbp:Royalty .
  FILTER(?father IN (SELECT ?person WHERE {
    ?leader foaf:parent ?person .
    ?person rdf:type dbo:Father .
    FILTER(?leader IN (SELECT ?leader WHERE {
      ?leader dbo:title ""Leader of Colony of Greenland""@en .
    }))
  }))
}

# Step 7: Combine Information
SELECT DISTINCT ?spouse WHERE {
  ?royalParent dbo:spouse ?spouse .
  ?royalParent foaf:parent ?person .
  ?person dbo:occupation dbp:Royalty .
  FILTER(?royalParent IN (SELECT ?person WHERE {
    ?countIngolf foaf:parent ?person .
    ?person dbo:occupation dbp:Royalty .
    FILTER(?countIngolf IN (SELECT ?countIngolf WHERE {
      ?countIngolf dbo:title ""Count Ingolf of Rosenborg""@en .
    }))
  }))
}
```",5,7,6,3,2,3,3,71,0,0,1,0,0.0,0
715,41,val,"Give me the commander in the force of Francisco Largo Caballero and commander in the force, that is a military conflict, of Abd el-Krim and leader of Ministry of the Air (Spain).",SELECT ?result WHERE { ?v2 <http://dbpedia.org/ontology/commander> ?result . <http://dbpedia.org/resource/Ministry_of_the_Air_(Spain)> <http://dbpedia.org/ontology/leader> ?result . ?v4 <http://dbpedia.org/ontology/commander> ?result . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v4 <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Francisco_Largo_Caballero> . ?v2 <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Abd_el-Krim> . },"```sparql
# Query to find the commander in the force of Francisco Largo Caballero
SELECT ?commander WHERE {
  ?person dbo:spouse|dbo:partner|dbo:child|dbo:parent|dbo:employer|dbo:employee|dbo:member|dbo:memberOf|dbo:director|dbo:executive|dbo:founder|dbo:foundingDirector|dbo:cofounder|dbo:vicePresident|dbo:president|dbo:chairman|dbo:boardMember|dbo:chiefExecutiveOfficer|dbo:CEO|dbo:head|dbo:leader|dbo:commander ?francisco .
  ?francisco rdfs:label ""Francisco Largo Caballero""@en .
  ?person rdfs:label ?commanderLabel .
  FILTER(LANG(?commanderLabel) = 'en')
}

UNION

# Query to find the commander in the force of Abd el-Krim
SELECT ?commander WHERE {
  ?conflict dbo:opposingMilitaryCommander|dbo:militaryCommander ?abdElKrim .
  ?abdElKrim rdfs:label ""Abd el-Krim""@en .
  ?conflict dbo:opposingMilitaryCommander|dbo:militaryCommander ?commander .
  ?commander rdfs:label ?commanderLabel .
  FILTER(LANG(?commanderLabel) = 'en')
}

UNION

# Query to find the leader of Ministry of the Air (Spain)
SELECT ?leader WHERE {
  ?ministry dbo:head|dbo:leader ?person .
  ?ministry rdfs:label ""Ministry of the Air (Spain)""@en .
  ?person rdfs:label ?leaderLabel .
  FILTER(LANG(?leaderLabel) = 'en')
}
```",5,6,6,2,3,3,3,71,0,0,1,0,0.0,0
582,42,val,Give me the reference to the residence of Hirotaka Sugawara and player in Kazuaki Nagasawa and figure known as the nickname of Japan national football team.,SELECT ?result WHERE { <http://dbpedia.org/resource/Kazuaki_Nagasawa> <http://dbpedia.org/ontology/team> ?result . ?result <http://dbpedia.org/property/nickname> ?v1 . <http://dbpedia.org/resource/Hirotaka_Sugawara> <http://dbpedia.org/property/residence> ?v2 . <http://dbpedia.org/resource/Japan_national_football_team> <http://dbpedia.org/property/nickname> ?v1 . ?result <http://xmlns.com/foaf/0.1/name> ?v2 . },"```sparql
# Query for Hirotaka Sugawara's residence
SELECT ?residence WHERE {
  ?s dbp:birthName ""Hirotaka Sugawara""@en.
  OPTIONAL { ?s dbo:residenceLocation ?residence. }
}

# Query for Kazuaki Nagasawa as a player
SELECT ?playerRole WHERE {
  ?s dbp:name ""Kazuaki Nagasawa""@en.
  OPTIONAL { ?s dbo:role ?playerRole. }
}

# Query for the nickname of the Japan National Football Team
SELECT ?nickname WHERE {
  ?team dbp:country ""Japan""@en;
        dbp:nickname ?nickname.
}
```",5,5,6,2,3,3,3,71,0,0,1,0,0.0,0
47,55,val,Give me the office of the awardee of Banga Bhushan and office of the administration of Jagdeep Dhankhar and office of the awardee of Padma Vibhushan.,SELECT ?result WHERE { ?v2 <http://dbpedia.org/property/office> ?result . ?v2 <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/Padma_Vibhushan> . ?v5 <http://dbpedia.org/property/office> ?result . ?v3 <http://dbpedia.org/property/governor> <http://dbpedia.org/resource/Jagdeep_Dhankhar> . ?v5 <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/Banga_Bhushan> . ?v3 <http://dbpedia.org/property/office> ?result . },"```sparql
# Query for Banga Bhushan Awardee's Office
SELECT ?person ?office WHERE {
  ?person dbo:award dbr:Banga_Bhushan_Award .
  OPTIONAL { ?person dbo:officeHolder ?office . }
}

UNION

# Query for Jagdeep Dhankhar's Administration Role
SELECT ?person ?position WHERE {
  ?person foaf:name ""Jagdeep Dhankhar""@en .
  OPTIONAL { ?person dbo:position ?position . }
}

UNION

# Query for Padma Vibhushan Awardee's Office
SELECT ?person ?office WHERE {
  ?person dbo:award dbr:Padma_Vibhushan .
  OPTIONAL { ?person dbo:officeHolder ?office . }
}
```",6,6,7,2,3,3,3,71,0,0,1,0,0.0,0
47,44,val,Give me the office of the awardee of Padma Vibhushan and office of the awardee of Banga Bhushan and office of Suvendu Adhikari.,SELECT ?result WHERE { ?v2 <http://dbpedia.org/property/office> ?result . <http://dbpedia.org/resource/Suvendu_Adhikari> <http://dbpedia.org/property/office> ?result . ?v4 <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/Banga_Bhushan> . ?v4 <http://dbpedia.org/property/office> ?result . ?v2 <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/Padma_Vibhushan> . },"```sparql
# Query for a specific Padma Vibhushan Awardee's Office (example: Amitabh Bachchan)
SELECT ?awardee ?office WHERE {
  ?awardee dbo:award ""Padma Vibhushan"" .
  OPTIONAL { ?awardee foaf:currentProject ?project . }
  OPTIONAL { ?awardee dbo:occupation ?office . }
  FILTER (str(?awardee) = str(dbpedia:Amitabh_Bachchan))
}

# Query for a specific Banga Bhushan Awardee's Office (example: Manna Dey)
SELECT ?awardee ?office WHERE {
  ?awardee dbo:award ""Banga Bhasha Samman"" .
  OPTIONAL { ?awardee foaf:currentProject ?project . }
  OPTIONAL { ?awardee dbo:occupation ?office . }
  FILTER (str(?awardee) = str(dbpedia:Manna_Dey))
}

# Query for Suvendu Adhikari's Office
SELECT ?person ?office WHERE {
  ?person foaf:name ""Suvendu Adhikari""@en .
  OPTIONAL { ?person dbo:occupation ?office . }
}
```",5,5,6,2,3,3,3,71,0,0,1,0,0.0,0
417,50,val,"Give me the child of the child, that is a royalty, of Frederick Francis III, Grand Duke of Mecklenburg-Schwerin and child of the father of the leader, that is a royalty, of Colony of Greenland.","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/parent> ?v3 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. <http://dbpedia.org/resource/Colony_of_Greenland> <http://dbpedia.org/property/leader> ?v0 . ?result <http://dbpedia.org/property/father> ?v4 . ?v0 <http://dbpedia.org/property/father> ?v4 . ?v3 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Frederick_Francis_III,_Grand_Duke_of_Mecklenburg-Schwerin> . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. }","```sparql
# Step 1: Find Frederick Francis III's children
SELECT ?child WHERE {
  wd:Q123456 wdt:P40 ?child .
}

# Step 2: Identify grandchildren who are royalty
SELECT DISTINCT ?grandchild WHERE {
  ?child wdt:P40 ?grandchild .
  ?grandchild wdt:P31/wdt:P279* wd:Q11850 . # Q11850 is the class for monarchs
}

# Step 3: Find the leader of the Colony of Greenland (Denmark)
SELECT DISTINCT ?denmarkLeader WHERE {
  wd:Q1234 wdt:P35 ?denmarkLeader .
}

# Step 4: Identify the father of this Danish leader
SELECT DISTINCT ?father WHERE {
  ?denmarkLeader wdt:P22 ?father .
}

# Step 5: Find a child of this father who is royalty
SELECT DISTINCT ?royalChild WHERE {
  ?father wdt:P40 ?royalChild .
  ?royalChild wdt:P31/wdt:P279* wd:Q11850 . # Q11850 is the class for monarchs
}

# Combine steps to find the final answer
SELECT DISTINCT ?grandchild WHERE {
  ?child wdt:P40 ?grandchild .
  ?grandchild wdt:P31/wdt:P279* wd:Q11850 .
  
  ?denmarkLeader wdt:P35 ?leaderRole .
  ?leaderRole wdt:P17 wd:Q30 . # Q30 is the country code for Denmark
  
  ?denmarkLeader wdt:P22 ?father .
  ?father wdt:P40 ?royalChild .
  ?royalChild wdt:P31/wdt:P279* wd:Q11850 .
}
```

Note: Replace `wd:Q123456` with the actual DBpedia ID for Frederick Francis III and `wd:Q1234` with the DBpedia ID for the Colony of Greenland. The query assumes that the leader role is linked to Denmark (Q30) during the colonial period.",5,7,6,3,2,3,3,71,0,0,2,0,0.0,0
83,15,val,"Give me the ruling party in the birthplace, that is a town and Brazilian and a soccer club, of the member, that is a sports manager, of Kedah FA and party of Alceu Collares.",SELECT ?result WHERE { ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsManager>. ?v0 <http://dbpedia.org/ontology/birthPlace> ?v1 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerClub>. ?v0 <http://dbpedia.org/ontology/team> <http://dbpedia.org/resource/Kedah_FA> . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Town>. <http://dbpedia.org/resource/Alceu_Collares> <http://dbpedia.org/ontology/party> ?result . ?v1 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Brazil>. ?v1 <http://dbpedia.org/property/leaderParty> ?result . },"```sparql
SELECT ?town ?rulingParty WHERE {
  # Find Alceu Collares and his association with Kedah FA
  ?person dbo:occupation dbr:Sports_manager .
  ?person foaf:name ""Alceu Collares"" .
  ?person dbo:memberOf dbr:Kedah_FA .

  # Determine his birthplace, ensuring it is a town in Brazil with a soccer club
  ?person dbo:birthPlace ?town .
  ?town rdf:type dbo:Town .
  ?town dbo:country dbr:Brazil .
  ?town dbo:sportTeam ?soccerClub .
  ?soccerClub rdf:type dbo:Soccer_club .

  # Find the ruling party of this town
  ?town dbo:government ?government .
  ?government dbo:rulingParty ?rulingParty .
}
```",4,8,5,3,2,3,2,20,0,0,1,0,0.0,0
933,42,val,"Give me the reference to Alan Warner and band of the band, that is a group and a band and an organisation, of Alan Warner (musician) and band of the band of Alan Warner (musician).","SELECT ?result WHERE { ?v0 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v1 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . <http://dbpedia.org/resource/Alan_Warner_(musician)> <http://dbpedia.org/ontology/associatedMusicalArtist> ?v1 . <http://dbpedia.org/resource/Alan_Warner_(musician)> <http://dbpedia.org/ontology/associatedMusicalArtist> ?v0 . ?result <http://xmlns.com/foaf/0.1/name> ""Alan Warner""@en . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Group>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Band>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?band ?organization WHERE {
  ?musician a dbo:MusicArtist ;
            foaf:name ""Alan Warner"" .
  
  OPTIONAL { 
    ?musician dbo:memberOfBandOrMusicalGroup ?band .
    ?band a dbo:Band .
  }
  
  OPTIONAL {
    ?musician dbo:memberOfOrganization ?organization .
    ?organization a dbo:Organisation .
  }
}
```",5,8,6,2,3,3,3,71,0,0,1,0,0.0,0
791,43,val,"Give me the predecessor of the child of the child, that is an office holder and a royalty, of Emperor Go-Shirakawa and father of Emperor Go-Toba and spouse of Taira no Tokuko.",SELECT ?result WHERE { <http://dbpedia.org/resource/Emperor_Go-Toba> <http://dbpedia.org/property/father> ?result . ?v4 <http://dbpedia.org/property/father> ?v0 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?result <http://dbpedia.org/ontology/spouse> <http://dbpedia.org/resource/Taira_no_Tokuko> . ?v0 <http://dbpedia.org/ontology/parent> <http://dbpedia.org/resource/Emperor_Go-Shirakawa> . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?result <http://dbpedia.org/ontology/successor> ?v4 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?predecessor WHERE {
  # Emperor Go-Shirakawa
  ?goShirakawa a dbo:Monarch ;
               foaf:name ""Go-Shirakawa""@en .

  # Child of Emperor Go-Shirakawa who is father of Emperor Go-Toba and spouse of Taira no Tokuko
  ?mochihito dbo:childOf ?goShirakawa ;
            foaf:name ""Mochihito""@en ;
            dbo:spouse dbr:Taira_no_Tokuko .

  # Child of Mochihito who is an office holder and royalty (Emperor Tsuchimikado)
  ?tsuchimikado dbo:childOf ?mochihito ;
                a dbo:Monarch ;
                foaf:name ""Tsuchimikado""@en .

  # Predecessor of Emperor Tsuchimikado
  ?predecessor dbo:successor ?tsuchimikado .
}
```",5,7,6,3,3,3,3,71,0,0,1,0,0.0,0
865,54,val,"Give me the father of the child, that is a politician, of the spouse of Syeda Shahar Banu and father of Shahla Khatun and native of the residence, that is a country, of Ram Jaipal Singh Yadav.",SELECT ?result WHERE { ?v4 <http://dbpedia.org/property/father> ?result . <http://dbpedia.org/resource/Syeda_Shahar_Banu> <http://dbpedia.org/ontology/spouse> ?v2 . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. <http://dbpedia.org/resource/Shahla_Khatun> <http://dbpedia.org/property/father> ?result . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. ?v4 <http://dbpedia.org/property/father> ?v2 . <http://dbpedia.org/resource/Ram_Jaipal_Singh_Yadav> <http://dbpedia.org/property/residence> ?v0 . ?result <http://dbpedia.org/ontology/birthPlace> ?v0 . },"```sparql
# Step 1: Identify Syeda Shahar Banu's spouse
SELECT ?spouse WHERE {
  wd:Q123456 wdt:P26 ?spouse .
}

# Step 2: Find children who are politicians and fathers of Shahla Khatun
SELECT ?child WHERE {
  ?spouse wdt:P40 ?child .
  ?child wdt:P106 wd:Q82955 . # Politician
  ?child wdt:P22 wd:Q654321 . # Father of Shahla Khatun (assuming Q654321 is Shahla Khatun's DBpedia ID)
}

# Step 3: Identify Ram Jaipal Singh Yadav's residence country
SELECT ?country WHERE {
  wd:Q987654 wdt:P19 ?location .
  ?location wdt:P17 ?country .
}

# Step 4: Match the politician's native country with Ram Jaipal Singh Yadav's residence country
SELECT DISTINCT ?politician WHERE {
  ?child wdt:P27 ?nativeCountry .
  ?country wdt:P31 wd:Q6256 . # Ensure it is a country
  FILTER(?nativeCountry = ?country)
}

# Step 5: Find the father of this politician
SELECT ?father WHERE {
  ?politician wdt:P22 ?father .
}
```

Note: Replace `wd:Q123456`, `wd:Q987654`, and `wd:Q654321` with the actual DBpedia IDs for Syeda Shahar Banu, Ram Jaipal Singh Yadav, and Shahla Khatun respectively. These IDs need to be looked up in DBpedia.",6,8,7,3,3,3,3,71,0,0,1,0,0.0,0
987,42,val,"Give me the birth place of the band, that is an artist and a musical artist, of Šako Polumenta and entity in the region, that is a country, of Central European Time and birth place of Moamer Kasumović.",SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. ?v0 <http://dbpedia.org/property/timeZone> <http://dbpedia.org/resource/Central_European_Time> . <http://dbpedia.org/resource/Šako_Polumenta> <http://dbpedia.org/ontology/associatedMusicalArtist> ?v1 . ?v1 <http://dbpedia.org/ontology/birthPlace> ?result . ?result <http://dbpedia.org/ontology/country> ?v0 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. <http://dbpedia.org/resource/Moamer_Kasumović> <http://dbpedia.org/ontology/birthPlace> ?result . },"```sparql
# Step 1: Find the band associated with Šako Polumenta
SELECT ?band WHERE {
  ?band dbo:member ?person .
  ?person foaf:name ""Šako Polumenta""@en .
  ?band dbo:genre dbr:Musical_Artist .
}

# Assuming we find a band, let's say it is ""Bijelo Dugme"" (for example purposes)
# Step 2: Find the birthplace of this band
SELECT ?birthPlace WHERE {
  <http://dbpedia.org/resource/Bijelo_Dugme> dbo:originLocation ?birthPlace .
}

# Step 3: Identify countries in the Central European Time zone
SELECT DISTINCT ?country WHERE {
  ?country dct:subject dbc:Central_European_Time_Zone .
}

# Step 4: Find the birthplace of Alija Izetbegović (Moamer Kasumović)
SELECT ?birthPlace WHERE {
  <http://dbpedia.org/resource/Alija_Izetbegović> dbo:birthPlace ?birthPlace .
}

# Combine results to find a common place
SELECT DISTINCT ?commonPlace WHERE {
  # Assuming the band's birthplace is found in step 2 and Alija Izetbegović's birthplace in step 4
  VALUES (?bandBirthPlace ?aliaBirthPlace) { (<http://dbpedia.org/resource/Some_Band_Birthplace> <http://dbpedia.org/resource/Sarajevo>) }
  
  # Check if both places are in a country within the CET region
  ?country dct:subject dbc:Central_European_Time_Zone .
  FILTER (?bandBirthPlace = ?commonPlace || ?aliaBirthPlace = ?commonPlace)
}
```",5,8,6,2,3,3,3,71,0,0,1,0,0.0,0
573,47,val,"Give me the person decedent at the administration, that is a region, of Charlie Baker and person decedent at the residence, that is a settlement, of the professional, that is American, in Politician.","SELECT ?result WHERE { ?v0 <http://dbpedia.org/ontology/nationality> <http://dbpedia.org/resource/United_States>. ?v0 <http://dbpedia.org/property/occupation> ""Politician""@en . ?v0 <http://dbpedia.org/property/residence> ?v4 . ?v2 <http://dbpedia.org/property/governor> ""Charlie Baker""@en . ?result <http://dbpedia.org/ontology/deathPlace> ?v2 . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. ?result <http://dbpedia.org/ontology/deathPlace> ?v4 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Region>. }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?person1 ?person2 WHERE {
  # Find a person who died in Massachusetts
  ?person1 dbo:deathPlace dbr:Massachusetts .
  
  # Find a person who died in Wilmington, Delaware
  ?person2 dbo:deathPlace dbr:Wilmington,_Delaware .
}
```",5,8,6,3,2,3,3,71,0,0,400,0,0.0,0
554,17,val,"Give me the leader of Portuguese São Tomé and Príncipe and leader of the birth place of the band, that is an artist, of Rita Redshoes.",SELECT ?result WHERE { ?v0 <http://dbpedia.org/ontology/birthPlace> ?v3 . ?v3 <http://dbpedia.org/property/leader> ?result . <http://dbpedia.org/resource/Rita_Redshoes> <http://dbpedia.org/ontology/associatedMusicalArtist> ?v0 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. <http://dbpedia.org/resource/Portuguese_São_Tomé_and_Príncipe> <http://dbpedia.org/property/leader> ?result . },"```sparql
# Leader of São Tomé and Príncipe
SELECT ?leader WHERE {
  wd:Q1108 wdt:P6 ?leader .
}

UNION

# Leader of the birthplace of Rita Redshoes' band's artist
{
  # Find Rita Redshoes' band
  SELECT ?band WHERE {
    wd:Q1069502 wdt:P175 ?band .
  }

  # Find lead artist or member of the band
  SELECT ?artist WHERE {
    ?band wdt:P175 ?artist .
  }

  # Find birthplace of the artist
  SELECT ?birthPlace WHERE {
    ?artist wdt:P19 ?birthPlace .
  }

  # Get leader of the birthplace country
  SELECT ?leader WHERE {
    ?birthPlace wdt:P31/wdt:P279* wd:Q6256 . # Ensure it's a country
    ?birthPlace wdt:P6 ?leader .
  }
}
```",4,5,5,3,2,3,2,20,0,0,1,0,0.0,0
955,15,val,"Give me the band of the writer of the work, that is a work and an album and a musical work, of Matt Freeman and band of Johnny Rioux.",SELECT ?result WHERE { ?v0 <http://dbpedia.org/property/writer> <http://dbpedia.org/resource/Matt_Freeman> . ?v0 <http://dbpedia.org/property/writer> ?v1 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalWork>. ?result <http://dbpedia.org/ontology/bandMember> ?v1 . ?result <http://dbpedia.org/ontology/bandMember> <http://dbpedia.org/resource/Johnny_Rioux> . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Album>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?work ?band WHERE {
  # Find works that are both albums and musical works
  ?work a dbo:Album ;
        a dbo:MusicalWork .

  # Ensure the work involves Matt Freeman
  ?work dbo:artist dbr:Matt_Freeman .

  # Ensure the work also involves Johnny Rioux
  ?work dbo:artist dbr:Johnny_Rioux .

  # Find the band associated with Matt Freeman as a writer
  ?band dbo:member dbr:Matt_Freeman .
  
  # Filter to ensure it's Rancid, since we know Matt Freeman is from Rancid
  FILTER(?band = dbr:Rancid)
}
```",4,7,5,3,2,3,2,20,0,0,1,0,0.0,0
987,48,val,"Give me the birth place of the band, that is an artist and a musical artist, of the band, that is an artist, of Dado Polumenta and entity in the region, that is a country, of Central European Time.",SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/birthPlace> ?result . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. ?v0 <http://dbpedia.org/property/timeZone> <http://dbpedia.org/resource/Central_European_Time> . ?v3 <http://dbpedia.org/ontology/associatedMusicalArtist> ?v1 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. ?result <http://dbpedia.org/ontology/country> ?v0 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. <http://dbpedia.org/resource/Dado_Polumenta> <http://dbpedia.org/ontology/associatedMusicalArtist> ?v3 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. },"```sparql
SELECT ?birthPlace WHERE {
  ?band rdf:type dbo:Band .
  ?band foaf:name ""Zabranjeto Pušenje""@en .
  ?member dbo:memberOf ?band ;
          foaf:name ""Dado Pršo""@en .
  ?member dbo:birthPlace ?birthPlace .
}
```",5,9,6,3,2,3,3,71,0,0,2,0,0.0,0
965,55,val,"Give me the parent of the child, that is a royalty, of Prince Louis of Battenberg and spouse of the spouse of Princess Victoria of Hesse and by Rhine and parent of the person born, that is a noble, as Prince George of Battenberg.","SELECT ?result WHERE { ?v0 <http://dbpedia.org/property/birthName> ""Prince George of Battenberg""@en . ?v5 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Prince_Louis_of_Battenberg> . ?result <http://dbpedia.org/ontology/spouse> ?v2 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Noble>. ?v0 <http://dbpedia.org/ontology/parent> ?result . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v5 <http://dbpedia.org/ontology/parent> ?result . <http://dbpedia.org/resource/Princess_Victoria_of_Hesse_and_by_Rhine> <http://dbpedia.org/ontology/spouse> ?v2 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?parent WHERE {
  # Step 1: Find Prince Louis of Battenberg's child who is royalty
  ?child dbo:spouse ?royalty .
  ?child dbo:father dbr:Prince_Louis_of_Battenberg .

  # Step 2: Identify the spouse of Princess Victoria of Hesse and by Rhine
  ?spouse dbo:spouse dbr:Princess_Victoria_of_Hesse_and_by_Rhine .

  # Step 3: Find the parent of Prince George of Battenberg
  ?parent dbo:child ?george .
  ?george rdfs:label ""Prince George of Battenberg""@en .

  # Connect these relationships to find the desired parent
  FILTER(?royalty = ?spouse)
}
```",6,8,7,2,3,3,3,71,0,0,1,0,0.0,0
129,19,val,Give me the professional in the mayor of 1999 West Dunbartonshire Council election and associated musical artist of Saba (rapper) and associated musical artist of EarthGang.,SELECT ?result WHERE { <http://dbpedia.org/resource/Saba_(rapper)> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . <http://dbpedia.org/resource/EarthGang> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?result <http://dbpedia.org/property/occupation> ?v2 . <http://dbpedia.org/resource/1999_West_Dunbartonshire_Council_election> <http://dbpedia.org/property/leader> ?v2 . },"```sparql
# Query to find the professional in the 1999 West Dunbartonshire Council election
SELECT ?mayor WHERE {
  ?election dbpedia-owl:year ""1999"" .
  ?election dbo:electionOfficial ?mayor .
  ?mayor rdf:type dbo:ElectedOfficial .
  FILTER(CONTAINS(LCASE(STR(?mayor)), ""west dunbartonshire council""))
}

UNION

# Query to find associated musical artists of Saba
SELECT DISTINCT ?artist WHERE {
  ?saba dbo:associatedMusicalArtist ?artist .
  VALUES ?saba { <http://dbpedia.org/resource/Saba_(rapper)> }
  ?artist rdf:type dbo:Musician .
}

UNION

# Query to find associated musical artists of EarthGang
SELECT DISTINCT ?artist WHERE {
  ?earthgang dbo:associatedMusicalArtist ?artist .
  VALUES ?earthgang { <http://dbpedia.org/resource/EarthGang> }
  ?artist rdf:type dbo:Musician .
}
```",4,4,5,2,3,2,3,28,0,0,1,0,0.0,0
98,22,val,Give me the birth place of the person born as Paolo Elito M. Ballesteros IV and region of the time zone of Lopez Jaena.,"SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/timeZone> ?v3 . <http://dbpedia.org/resource/Lopez_Jaena> <http://dbpedia.org/ontology/timeZone> ?v3 . ?v0 <http://dbpedia.org/property/birthName> ""Paolo Elito M. Ballesteros IV""@en . ?v0 <http://dbpedia.org/ontology/birthPlace> ?result . }","```sparql
# Query 1: Birth Place of Paolo Elito M. Ballesteros IV
SELECT ?birthPlace WHERE {
  ?person foaf:name ""Paolo Elito M. Ballesteros IV""@en .
  ?person dbo:birthPlace ?birthPlace .
}

# Query 2: Region of the Time Zone for Lopez Jaena
SELECT DISTINCT ?region WHERE {
  ?location rdfs:label ""Jaena, Lopez""@en .
  ?location geo:timezone ?timeZone .
  ?timeZone dbp:region ?region .
}
```",4,4,5,2,2,2,3,28,0,0,2,0,0.0,0
926,51,val,"Give me the child of the father, that is a royalty, of the parent, that is a royalty, of Beyhan Sultan (daughter of Mustafa III) and successor of the child of Ahmed III.",SELECT ?result WHERE { ?v0 <http://dbpedia.org/ontology/child> ?result . ?v3 <http://dbpedia.org/property/father> ?v0 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v4 <http://dbpedia.org/ontology/successor> ?result . <http://dbpedia.org/resource/Beyhan_Sultan_(daughter_of_Mustafa_III)> <http://dbpedia.org/ontology/parent> ?v3 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v4 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Ahmed_III> . },"```sparql
SELECT ?child WHERE {
  wd:Q123456 wdt:P22 wd:Q789012 . # Beyhan Sultan (Q123456) has father Abdul Hamid I (Q789012)
  wd:Q789012 wdt:P31 wd:Q5 .       # Abdul Hamid I is a human
  wd:Q789012 wdt:P39 wd:Q12345 .   # Abdul Hamid I was an Ottoman Sultan (Q12345)

  wd:Q789012 wdt:P40 ?child .      # Abdul Hamid I has child ?child

  ?child wdt:P31 wd:Q5 .           # ?child is a human
  ?child wdt:P39 wd:Q12345 .       # ?child was an Ottoman Sultan (royalty)

  wd:Q678901 wdt:P22 wd:Q345678 .  # Ahmed III (Q678901) has child Mahmud I (Q345678)
  wd:Q345678 wdt:P57 wd:Q456789 .  # Mahmud I's successor is Osman III (Q456789)

  ?child rdfs:label ""Selim III""@en . # Ensure the child is Selim III
}
```",5,7,6,3,2,3,3,71,0,0,1,0,0.0,0
892,44,val,"Give me the landmark at elevation of the award of Anna Ishii and entity in the administration, that is Italian and a region and a settlement and an administrative region, of Democratic Party (Italy) and entity in Italy.",SELECT ?result WHERE { <http://dbpedia.org/resource/Anna_Ishii> <http://dbpedia.org/property/awards> ?v4 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Region>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/AdministrativeRegion>. ?result <http://dbpedia.org/ontology/province> ?v0 . ?v0 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Italy>. ?result <http://dbpedia.org/ontology/elevation> ?v4 . ?v0 <http://dbpedia.org/property/leaderParty> <http://dbpedia.org/resource/Democratic_Party_(Italy)> . ?result <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Italy> . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT DISTINCT ?landmark ?elevation ?region WHERE {
  # Step 1: Find Anna Ishii's award and its elevation
  ?award dbo:recipient dbr:Anna_Ishii .
  ?award dbo:elevation ?elevation .

  # Step 2: Find landmarks at the same elevation as the award
  ?landmark dbo:elevation ?sameElevation .
  FILTER(?elevation = ?sameElevation)

  # Step 3: Identify an Italian administrative region or settlement associated with the Democratic Party (Italy)
  ?region a dbo:AdministrativeRegion ;
          dbp:country dbr:Italy ;
          dbo:party dbr:Democratic_Party_(Italy) .

  # Ensure the region is also a settlement
  ?region a dbo:Settlement .
}
```",5,9,6,2,3,3,3,71,0,0,2,0,0.0,0
865,53,val,"Give me the father of the child of Abu Ahmad Abdul Hafiz and father of AK Abdul Momen and native of the residence, that is a country, of the person decedent at Patna.",SELECT ?result WHERE { ?v1 <http://dbpedia.org/property/residence> ?v0 . ?result <http://dbpedia.org/ontology/birthPlace> ?v0 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. ?v2 <http://dbpedia.org/property/father> ?result . ?v1 <http://dbpedia.org/ontology/deathPlace> <http://dbpedia.org/resource/Patna> . ?v2 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Abu_Ahmad_Abdul_Hafiz> . <http://dbpedia.org/resource/AK_Abdul_Momen> <http://dbpedia.org/property/father> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?father ?nativeCountry WHERE {
  # Find Abu Ahmad Abdul Hafiz's child and AK Abdul Momen's father
  ?child dbo:parent dbr:Abu_Ahmad_Abdul_Hafiz .
  ?akChild dbo:parent ?father .
  FILTER (?akChild = dbr:AK_Abdul_Momen) .

  # Find the decedent at Patna and their native country
  ?decedent dbo:deathPlace dbr:Patna .
  ?decedent dbo:nationality ?nativeCountry .

  # Ensure the father's native country matches the decedent's native country
  ?father dbo:nativeCountry ?nativeCountry .
}
```",6,7,7,3,3,3,3,71,0,0,1,0,0.0,0
965,42,val,"Give me the parent of the person born, that is a noble, as Prince George of Battenberg and spouse of the spouse of Princess Victoria of Hesse and by Rhine and parent of Louise Mountbatten.","SELECT ?result WHERE { ?v0 <http://dbpedia.org/property/birthName> ""Prince George of Battenberg""@en . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Noble>. <http://dbpedia.org/resource/Louise_Mountbatten> <http://dbpedia.org/ontology/parent> ?result . ?result <http://dbpedia.org/ontology/spouse> ?v1 . ?v0 <http://dbpedia.org/ontology/parent> ?result . <http://dbpedia.org/resource/Princess_Victoria_of_Hesse_and_by_Rhine> <http://dbpedia.org/ontology/spouse> ?v1 . }","```sparql
SELECT ?parent WHERE {
  wd:Q123456 wdt:P31/wdt:P279* wd:Q5; # Prince Louis of Battenberg is a human
  wdt:P22 ?mother. # Mother of Prince Louis of Battenberg

  OPTIONAL { ?mother rdfs:label ""Julia von Hauke""@en }.
  OPTIONAL { ?father wdt:P25 ?mother; # Father of Julia von Hauke
             rdfs:label ?parentLabel FILTER (lang(?parentLabel) = ""en"") }
}
```

Replace `wd:Q123456` with the actual DBpedia resource ID for Prince Louis of Battenberg.",5,6,6,2,3,3,3,71,0,0,1,0,0.0,0
433,44,val,"Give me the associated musical artist of Paul Chambers and associated musical artist of the associated musical artist, that is an artist and a musical artist, of Scott LaFaro and professional in the profession of Bob Marley.",SELECT ?result WHERE { <http://dbpedia.org/resource/Bob_Marley> <http://dbpedia.org/property/occupation> ?v2 . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. <http://dbpedia.org/resource/Scott_LaFaro> <http://dbpedia.org/ontology/associatedMusicalArtist> ?v4 . ?v4 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . <http://dbpedia.org/resource/Paul_Chambers> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?result <http://dbpedia.org/property/occupation> ?v2 . },"```sparql
# Step 1: Find Paul Chambers' associated musical artist
SELECT ?artist WHERE {
  dbpedia:Paul_Chambers dbo:musicalArtist ?artist .
}

# Assuming the result from step 1 is John Coltrane (as an example)

# Step 2: Find the associated musical artist of John Coltrane
SELECT ?associatedArtist WHERE {
  dbpedia:John_Coltrane dbo:musicalArtist ?associatedArtist .
}

# Assuming the result from step 2 is McCoy Tyner

# Step 3: Find Scott LaFaro's associated musical artist
SELECT ?artist WHERE {
  dbpedia:Scott_LaFaro dbo:musicalArtist ?artist .
}

# Assuming the result from step 3 is Bill Evans (as an example)

# Step 4: Find professionals in the same profession as Bob Marley
SELECT ?person WHERE {
  ?person a dbo:Singer ;
          a dbo:Songwriter .
}

# Step 5: Combine results to find an artist who matches both criteria
SELECT DISTINCT ?finalArtist WHERE {
  # From step 2 result (McCoy Tyner)
  dbpedia:Mccoy_Tyner dbo:musicalArtist ?finalArtist .

  # From step 4 result (profession of Bob Marley)
  ?finalArtist a dbo:Singer ;
               a dbo:Songwriter .
}
```",5,7,6,2,3,3,3,71,0,0,1,0,0.0,0
987,41,val,"Give me the birth place of the actor of All for Free and entity in Montenegro and birth place of the band, that is an artist and a musical artist, of Šako Polumenta.",SELECT ?result WHERE { ?v4 <http://dbpedia.org/ontology/birthPlace> ?result . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. <http://dbpedia.org/resource/Šako_Polumenta> <http://dbpedia.org/ontology/associatedMusicalArtist> ?v2 . ?v2 <http://dbpedia.org/ontology/birthPlace> ?result . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?result <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Montenegro> . <http://dbpedia.org/resource/All_for_Free> <http://dbpedia.org/property/starring> ?v4 . },"```sparql
# Query for the actor of ""All for Free"" and their birthplace, checking association with Montenegro
SELECT ?actor ?birthPlace WHERE {
  ?movie dbo:productionName ""All for Free""@en .
  ?movie dbo:starring ?actor .
  OPTIONAL { ?actor dbo:birthPlace ?birthPlace . }
  OPTIONAL { ?actor dbo:country ?country . FILTER(?country = dbpedia-montenegro:Montenegro) }
}
```

```sparql
# Query for the band of Šako Polumenta and its birthplace, ensuring it is an artist and a musical artist
SELECT ?band ?birthPlace WHERE {
  ?person foaf:name ""Šako Polumenta""@en .
  ?person dbo:memberOfBand ?band .
  ?band rdf:type dbpedia-owl:MusicalArtist ;
        rdf:type dbpedia-owl:Artist .
  OPTIONAL { ?band dbo:birthPlace ?birthPlace . }
}
```",5,7,6,2,3,3,3,71,0,0,1,0,0.0,0
445,54,val,"Give me the entity in the residence, that is a country, of Anna Sharkey and entity in United Kingdom and death place of the awardee of the establishment of 1820-03-10.","SELECT ?result WHERE { ?v5 <http://dbpedia.org/property/awards> ?v0 . ?result <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/United_Kingdom> . ?result <http://dbpedia.org/ontology/location> ?v3 . ?v5 <http://dbpedia.org/ontology/deathPlace> ?result . <http://dbpedia.org/resource/Anna_Sharkey> <http://dbpedia.org/property/residence> ?v3 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. ?v0 <http://dbpedia.org/ontology/foundingDate> ""1820-03-10""^^<http://www.w3.org/2001/XMLSchema#date> . }","```sparql
# Part 1: Anna Sharkey's Residence
SELECT ?residence WHERE {
    wd:Q123456 rdfs:label ""Anna Sharkey""@en. # Replace Q123456 with the actual DBpedia ID for Anna Sharkey
    ?residence dbo:resident wd:Q123456.
    ?residence rdf:type dbo:Country.
}

# Part 2: Entity in United Kingdom
SELECT DISTINCT ?entity WHERE {
    ?entity dbo:country dbr:United_Kingdom. # Find entities associated with the UK
}

# Part 3: Death Place of an Awardee from Establishment on 1820-03-10
SELECT ?deathPlace WHERE {
    ?establishment dbo:foundingDate ""1820-03-10""^^xsd:date.
    ?award dbo:awardedBy ?establishment.
    ?recipient dbo:receivedAward ?award.
    ?recipient dbo:deathPlace ?deathPlace.
}
```",6,7,7,3,3,3,3,71,0,0,1,0,0.0,0
892,55,val,"Give me the entity in the profession of Henri Crolla and entity in the administration, that is Italian and a region and a settlement and an administrative region, of Democratic Party (Italy) and landmark at elevation of the award of Anna Ishii.",SELECT ?result WHERE { <http://dbpedia.org/resource/Anna_Ishii> <http://dbpedia.org/property/awards> ?v5 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Region>. ?v0 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Italy>. ?result <http://dbpedia.org/ontology/country> ?v2 . ?result <http://dbpedia.org/ontology/province> ?v0 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. <http://dbpedia.org/resource/Henri_Crolla> <http://dbpedia.org/property/occupation> ?v2 . ?v0 <http://dbpedia.org/property/leaderParty> <http://dbpedia.org/resource/Democratic_Party_(Italy)> . ?result <http://dbpedia.org/ontology/elevation> ?v5 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/AdministrativeRegion>. },"```sparql
# Query for Henri Crolla's profession
SELECT ?profession WHERE {
  dbpedia:Henri_Crolla dbo:occupation ?profession .
}

# Query for Italian region and settlement in Democratic Party (Italy)
SELECT DISTINCT ?region ?settlement WHERE {
  ?party rdf:type dbo:PoliticalParty ;
         foaf:name ""Democratic Party (Italy)"" .
  ?region dbo:politicalParty ?party ;
          a dbo:AdministrativeRegion, dbo:Settlement ;
          dbo:country dbr:Italy .
}

# Query for landmark at elevation of Anna Ishii's award
SELECT DISTINCT ?landmark WHERE {
  dbpedia:Anna_Ishii dbo:award ?award .
  ?award dbo:elevation ?elevation .
  ?landmark dbo:elevation ?elevation ;
           a dbo:Lighthouse .
}
```",6,10,7,2,3,3,3,71,0,0,2,0,0.0,0
41,22,val,"Give me the party of the person born as David Declan Costello and party of the leader, that is a politician and an office holder, of 2005 Castlereagh Borough Council election.","SELECT ?result WHERE { ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v3 <http://dbpedia.org/ontology/party> ?result . ?v0 <http://dbpedia.org/ontology/party> ?result . <http://dbpedia.org/resource/2005_Castlereagh_Borough_Council_election> <http://dbpedia.org/property/leader> ?v3 . ?v0 <http://dbpedia.org/property/birthName> ""David Declan Costello""@en . }","```sparql
# Query to find the political party of David Declan Costello
SELECT ?party WHERE {
  ?person a dbo:Person ;
          foaf:name ""David Declan Costello""@en .
  OPTIONAL { ?person dbo:politicalParty ?party . }
}

UNION

# Query to find the leader and their party in the 2005 Castlereagh Borough Council election
SELECT ?leaderParty WHERE {
  ?election a dbo:Election ;
            dbo:electedOffice dbo:CouncilMember ;
            dbo:date ""2005-05-01""^^xsd:date .
  ?officeHolder dbo:holdsPublicOffice ?position ;
                dbo:memberOfPoliticalBody ?party .
  FILTER EXISTS { ?position dbo:isLeaderOf ?election }
  BIND(?party AS ?leaderParty)
}
```",4,6,5,2,2,2,3,28,0,0,1,0,0.0,0
98,23,val,"Give me the region of the time zone of Lopez Jaena and entity in the region, that is a country, of Philippine Standard Time.",SELECT ?result WHERE { ?v1 <http://dbpedia.org/property/timeZone> <http://dbpedia.org/resource/Philippine_Standard_Time> . ?result <http://dbpedia.org/ontology/timeZone> ?v3 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. <http://dbpedia.org/resource/Lopez_Jaena> <http://dbpedia.org/ontology/timeZone> ?v3 . ?result <http://dbpedia.org/ontology/country> ?v1 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?region ?country WHERE {
  # Find Lopez Jaena and its time zone
  ?lorenzoJaena a dbo:PopulatedPlace ;
                rdfs:label ""Lopez Jaena""@en .
  
  OPTIONAL { 
    ?lorenzoJaena dbo:timeZone ?timezone .
  }
  
  # Filter for Philippine Standard Time (UTC+8)
  FILTER(?timezone = dbr:Philippine_Standard_Time)

  # Find the region associated with PST
  ?region dbo:hasTimezone dbr:Philippine_Standard_Time .

  # Identify countries within this region
  ?country a dbo:Country ;
           dbo:locatedIn ?region .
}
```",4,5,5,2,2,2,3,28,0,0,1743,0,0.0,0
170,20,val,Give me the domain of Mayor and entity in Russia and birth place of the awardee of People's Artist of Russia.,"SELECT ?result WHERE { ?v3 <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/People's_Artist_of_Russia> . ?result <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Russia> . ?result <http://dbpedia.org/ontology/leaderTitle> ""Mayor""@en . ?v3 <http://dbpedia.org/ontology/birthPlace> ?result . }","```sparql
# Query to find mayors associated with entities in Russia
SELECT ?mayor ?entity WHERE {
  ?mayor dbo:positionTitle dbr:Mayor .
  ?mayor dbo:country dbr:Russia .
  ?mayor dbo:officeHolder ?entity .
}

# Query to find birthplaces of awardees of People's Artist of Russia
SELECT ?person ?birthPlace WHERE {
  ?person dbo:honor ""People's Artist of Russia""@en .
  ?person dbo:birthPlace ?birthPlace .
}
```",4,4,5,2,3,2,3,28,0,0,3,0,0.0,0
645,51,val,"Give me the military force of the force, that is an event and a military conflict and a societal event, of Francisco Largo Caballero and leader of the office, that is a government agency and an organisation, of the native of Restoration (Spain).",SELECT ?result WHERE { ?v4 <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Francisco_Largo_Caballero> . ?v2 <http://dbpedia.org/ontology/leader> ?result . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?result <http://dbpedia.org/ontology/battle> ?v4 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/GovernmentAgency>. ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?v1 <http://dbpedia.org/property/office> ?v2 . ?v1 <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Restoration_(Spain)> . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?militaryForce WHERE {
  # Francisco Largo Caballero
  dbr:Francisco_Largo_Caballero 
    dbo:spouse ?spouse . 

  # Spanish Civil War as an event, military conflict, and societal event
  dbr:Spanish_Civil_War 
    a dbo:MilitaryConflict ;
    dbo:participatedInMilitaryGroup ?militaryForce .

  # Francisco Largo Caballero's role in the government
  dbr:Francisco_Largo_Caballero 
    dbo:officeHeld ?primeMinisterRole .
  
  ?primeMinisterRole 
    a dbo:GovernmentAgency ;
    dbo:headOf ?leader .
  
  FILTER(?leader = dbr:Francisco_Largo_Caballero)

  # Ensure the military force is related to the Spanish Civil War
  ?militaryForce 
    dbo:participatedInMilitaryConflict dbr:Spanish_Civil_War .

}
```",5,10,6,3,2,3,3,71,0,0,2,0,0.0,0
365,17,val,"Give me the person born as Symon Vasylyovych Petliura and spouse of the native, that is a politician, of the reference to Полтавская губерния.","SELECT ?result WHERE { ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v3 <http://dbpedia.org/ontology/spouse> ?result . ?v0 <http://xmlns.com/foaf/0.1/name> ""Полтавская губерния""@en . ?v3 <http://dbpedia.org/ontology/birthPlace> ?v0 . ?result <http://dbpedia.org/property/birthName> ""Symon Vasylyovych Petliura""@en . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?spouse ?politician WHERE {
  # Find the spouse of Symon Vasylyovych Petliura
  dbr:Symon_Petliura dbo:spouse ?spouse .

  # Check if this spouse is a politician and has a connection to Полтавская губерния
  OPTIONAL { ?spouse dbo:nationality dbr:Ukraine . }
  OPTIONAL { ?spouse dbo:birthPlace dbr:Poltava_Governorate . }
  OPTIONAL { ?spouse dbo:occupation dbr:Politician . }

  # Ensure the spouse is a politician and has a connection to Полтавская губерния
  FILTER (?politician = ?spouse)
}
```",4,5,5,3,2,3,2,20,0,0,1,0,0.0,0
274,20,val,Give me the professional in the designer of Tetris Classic and band member of Dizzy Gillespie and associated musical artist of Cecil Taylor.,SELECT ?result WHERE { ?result <http://dbpedia.org/property/occupation> ?v3 . <http://dbpedia.org/resource/Cecil_Taylor> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?result <http://dbpedia.org/ontology/associatedMusicalArtist> <http://dbpedia.org/resource/Dizzy_Gillespie> . <http://dbpedia.org/resource/Tetris_Classic> <http://dbpedia.org/property/designer> ?v3 . },"```sparql
SELECT ?person WHERE {
  ?person dbo:occupation dbr/Drummer .
  ?person dbo:musicalArtistOf dbr/Cecil_Taylor .
  ?bandMemberRelation dbo:member dbr/Dizzy_Gillespie .
  ?bandMemberRelation dbo:member ?person .
}
```",4,4,5,2,3,2,3,28,0,0,1,0,0.0,0
216,47,val,"Give me the player in the coach of Croatia national under-21 football team and player in the coach, that is a soccer player and a sports manager and a soccer manager, of the player, that is an organisation and a sports club and a soccer club, in Džemal Berberović.",SELECT ?result WHERE { <http://dbpedia.org/resource/Croatia_national_under-21_football_team> <http://dbpedia.org/ontology/coach> ?v2 . ?v4 <http://dbpedia.org/ontology/team> ?result . ?v0 <http://dbpedia.org/ontology/coach> ?v4 . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerPlayer>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerClub>. ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerManager>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsClub>. ?v2 <http://dbpedia.org/ontology/team> ?result . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsManager>. <http://dbpedia.org/resource/Džemal_Berberović> <http://dbpedia.org/ontology/team> ?v0 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?playerRole ?managerRole ?organization WHERE {
  # Džemal Berberović's role as a coach of the Croatia national under-21 football team
  dbr:Džemal_Berberović dbo:coach dbr:Croatia_national_under-21_football_team .

  # Check if he is also a soccer player and sports manager
  OPTIONAL { dbr:Džemal_Berberović dbo:sport dbr:Soccer . }
  OPTIONAL { dbr:Džemal_Berberović dbo:occupation dbr:Sports_manager . }

  # Identify the club or organization he manages
  ?organization a dbo:Sports_club ;
                a dbo:Organization ;
                a dbo:Football_club .

  dbr:Džemal_Berberović dbo:manager ?organization .
  
  BIND(""Coach of Croatia national under-21 football team"" AS ?playerRole)
  BIND(""Soccer player and sports manager"" AS ?managerRole)
}
```",5,11,6,3,2,3,3,71,0,0,3,0,0.0,0
933,55,val,"Give me the reference to the birth name of Alan Warner (musician) and band of the band of Alan Warner (musician) and band of the band, that is a group and a band and an organisation, of Alan Warner (musician).",SELECT ?result WHERE { ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?result <http://xmlns.com/foaf/0.1/name> ?v5 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Group>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Band>. <http://dbpedia.org/resource/Alan_Warner_(musician)> <http://dbpedia.org/ontology/associatedMusicalArtist> ?v2 . ?v0 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . <http://dbpedia.org/resource/Alan_Warner_(musician)> <http://dbpedia.org/ontology/associatedMusicalArtist> ?v0 . ?v2 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . <http://dbpedia.org/resource/Alan_Warner_(musician)> <http://dbpedia.org/property/birthName> ?v5 . },"```sparql
PREFIX foaf: <http://xmlns.com/foaf/0.1/>
PREFIX dbo: <http://dbpedia.org/ontology/>

SELECT ?birthName ?band WHERE {
  ?person a dbo:Musician ;
          foaf:name ""Alan Warner"" ;
          foaf:givenName ?givenName ;
          foaf:familyName ?familyName .
  
  BIND(CONCAT(?givenName, "" "", ?familyName) AS ?birthName)
  
  OPTIONAL { 
    ?person dbo:musicalArtist ?band .
  }
  
  FILTER(CONTAINS(LCASE(STR(?person)), ""alan warner""))
}
```",6,9,7,2,3,3,3,71,0,0,1,0,0.0,0
124,48,val,"Give me the military force of the force, that is a societal event and a military conflict, of Herbert Kitchener, 1st Earl Kitchener and commander in the war, that is a societal event and a military conflict, of the reference, that is Australian and an organisation and a military unit, to 'A' Battery, Royal Australian Artillery.","SELECT ?result WHERE { ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v3 <http://dbpedia.org/ontology/battle> ?v2 . ?v3 <http://xmlns.com/foaf/0.1/name> ""'A' Battery, Royal Australian Artillery""@en . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v1 <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Herbert_Kitchener,_1st_Earl_Kitchener> . ?v2 <http://dbpedia.org/ontology/commander> ?result . ?result <http://dbpedia.org/ontology/battle> ?v1 . ?v3 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Australia>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryUnit>. }","```sparql
SELECT ?militaryForce WHERE {
  ?kitchener dbo:occupation dbr:Military_person ;
             foaf:name ""Herbert Kitchener""@en .
  
  ?worldWar1 dbo:commander ?kitchener ;
             rdf:type dbo:Military_conflict .

  ?australianUnit dbo:participatedIn ?worldWar1 ;
                  dbo:military_unit dbr:A_Battery,_Royal_Australian_Artillery ;
                  dbo:nationality dbr:Australia .

  ?britishArmy dbo:commander ?kitchener ;
               rdf:type dbo:Military_force .
  
  BIND(?britishArmy AS ?militaryForce)
}
```",5,12,6,3,2,3,3,71,0,0,9,0,0.0,0
170,19,val,Give me the domain of Mayor and entity in the work of International Energy Agency and birth place of Era Ziganshina.,"SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/leaderTitle> ""Mayor""@en . <http://dbpedia.org/resource/Era_Ziganshina> <http://dbpedia.org/ontology/birthPlace> ?result . ?result <http://dbpedia.org/ontology/country> ?v2 . ?v2 <http://dbpedia.org/property/author> <http://dbpedia.org/resource/International_Energy_Agency> . }","```sparql
# Query for domain of Mayor and entity in the work of International Energy Agency
SELECT ?mayor ?entity WHERE {
  ?mayor a dbo:Mayor .
  ?work dcterms:isPartOf <http://dbpedia.org/resource/International_Energy_Agency> .
  ?mayor foaf:name ?name .
  FILTER(CONTAINS(LCASE(?name), ""mayor""))
  OPTIONAL { ?work dbo:agent ?entity }
}

# Query for birthplace of Era Ziganshina
SELECT ?birthPlace WHERE {
  ?era a dbo:Person ;
       foaf:name ""Era Ziganshina""@en ;
       dbp:birthPlace ?birthPlace .
}
```",4,4,5,2,3,2,3,28,0,0,1,0,0.0,0
465,51,val,"Give me the successor of the child, that is a royalty, of the parent of Charles Orlando, Dauphin of France and spouse of the child, that is a royalty, of Ferdinand I, Holy Roman Emperor.","SELECT ?result WHERE { ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. <http://dbpedia.org/resource/Ferdinand_I,_Holy_Roman_Emperor> <http://dbpedia.org/ontology/child> ?v4 . ?v2 <http://dbpedia.org/ontology/successor> ?result . ?result <http://dbpedia.org/ontology/spouse> ?v4 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v1 <http://dbpedia.org/ontology/child> ?v2 . <http://dbpedia.org/resource/Charles_Orlando,_Dauphin_of_France> <http://dbpedia.org/ontology/parent> ?v1 . }","```sparql
# Step 1: Identify Charles Orlando's parent
SELECT ?parent WHERE {
  wd:Q1234567 wdt:P22 ?parent .
}

# Step 2: Find a royal child of that parent
SELECT ?royalChild WHERE {
  ?parent wdt:P40 ?royalChild .
  ?royalChild wdt:P31 wd:Q5 . # Assuming Q5 is the class for royalty
}

# Step 3: Identify Ferdinand I and his royal child
SELECT ?ferdinand1, ?royalChildFerdinand WHERE {
  wd:Q654321 wdt:P22 ?parentFerdinand .
  ?parentFerdinand wdt:P40 ?royalChildFerdinand .
  ?royalChildFerdinand wdt:P31 wd:Q5 .
}

# Step 4: Find the spouse of this royal child
SELECT ?spouse WHERE {
  ?royalChildFerdinand wdt:P26 ?spouse .
}

# Step 5: Determine the successor of this spouse
SELECT ?successor WHERE {
  ?spouse wdt:P46 ?successor . # Assuming P46 is used for succession or similar relationship
}
```

Note: The actual DBpedia IDs (e.g., `Q1234567`, `Q654321`) need to be replaced with the correct identifiers for Charles Orlando and Ferdinand I. Additionally, property numbers like `P22` (parent), `P40` (child), `P31` (instance of), `P26` (spouse), and `P46` (successor) are used based on common DBpedia properties but may need adjustment based on the specific relationships in the dataset.",5,7,6,3,2,3,3,71,0,0,1,0,0.0,0
267,16,val,"Give me the coach of the player, that is a soccer club, in Rasoul Khatibi and person born on the birth date of Dan Cathy.",SELECT ?result WHERE { ?v2 <http://dbpedia.org/ontology/coach> ?result . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerClub>. <http://dbpedia.org/resource/Rasoul_Khatibi> <http://dbpedia.org/ontology/team> ?v2 . ?result <http://dbpedia.org/ontology/birthDate> ?v3 . <http://dbpedia.org/resource/Dan_Cathy> <http://dbpedia.org/ontology/birthDate> ?v3 . },"```sparql
# Step 1: Find Rasoul Khatibi's soccer club
SELECT ?club WHERE {
  ?player rdf:type dbo:SoccerPlayer .
  ?player foaf:name ""Rasoul Khatibi"" .
  ?player dbo:playsFor ?club .
}

UNION

# Step 2: Get Dan Cathy's birth date
SELECT ?birthDate WHERE {
  ?person rdf:type dbo:Person .
  ?person foaf:name ""Dan Cathy"" .
  ?person dbo:birthday ?birthDate .
}

UNION

# Step 3: Find person born on the same date as Dan Cathy
SELECT ?personName WHERE {
  ?person rdf:type dbo:Person .
  ?person dbo:birthday ?birthDate .
  FILTER(?birthDate = <Dan_Cathys_Birth_Date>)
  ?person foaf:name ?personName .
}

UNION

# Step 4: Find the coach of both Rasoul Khatibi and the person found in step 3
SELECT DISTINCT ?coach WHERE {
  # Coach for Rasoul Khatibi's club
  ?club dbo:coach ?coach .
  
  # Coach for the person born on Dan Cathy's birth date (assuming they are a player)
  ?person rdf:type dbo:SoccerPlayer .
  ?person foaf:name ?personName .
  ?team dbo:coach ?coach .
  ?person dbo:playsFor ?team .
}
```

Note: Replace `<Dan_Cathys_Birth_Date>` with the actual birth date obtained from Step 2.",4,5,5,2,2,3,2,20,0,0,1,0,0.0,0
715,46,val,"Give me the commander in the force of Francisco Largo Caballero and commander in the force, that is a military conflict, of the native of Morocco.",SELECT ?result WHERE { ?v4 <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Francisco_Largo_Caballero> . ?v1 <http://dbpedia.org/ontology/commander> ?result . ?v4 <http://dbpedia.org/ontology/commander> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v1 <http://dbpedia.org/ontology/commander> ?v2 . ?v2 <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Morocco> . },"```sparql
# Query 1: Commander associated with Francisco Largo Caballero
SELECT ?commander WHERE {
  ?person dbo:nationality dbr:Spain ;
          foaf:name ""Francisco Largo Caballero""@en .
  OPTIONAL { ?person dbo:leaderOf ?organization . }
  OPTIONAL { ?organization dbo:leader ?commander . }
}

# Query 2: Commander in a military conflict involving a Moroccan native
SELECT DISTINCT ?conflict ?commander WHERE {
  ?person dbo:nationality dbr:Morocco ;
          foaf:name ?name .
  ?conflict dbo:participatedInMilitaryConflict ?person .
  OPTIONAL { ?conflict dbo:commander ?commander . }
}
```",5,6,6,3,2,3,3,71,0,0,4,0,0.0,0
573,48,val,"Give me the parent of the author, that is a politician and an office holder, of Exchequer Standards and person decedent at the administration, that is a region, of the real name of Charlie Baker (Australian footballer).",SELECT ?result WHERE { <http://dbpedia.org/resource/Charlie_Baker_(Australian_footballer)> <http://xmlns.com/foaf/0.1/name> ?v3 . ?result <http://dbpedia.org/ontology/deathPlace> ?v2 . ?v1 <http://dbpedia.org/ontology/parent> ?result . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Region>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. <http://dbpedia.org/resource/Exchequer_Standards> <http://dbpedia.org/property/author> ?v1 . ?v2 <http://dbpedia.org/property/governor> ?v3 . },"```sparql
SELECT ?parent WHERE {
  # Step 1: Identify Charlie Baker (Australian footballer)
  ?charlieBaker dbo:wikiPageRedirects db:Charlie_Baker_(Australian_footballer) .
  
  # Step 2: Find the real name of Charlie Baker
  ?charlieBaker foaf:name ?realName .

  # Step 3: Determine the administration he was a decedent at
  ?administration dbo:type dbr:Region .
  ?charlieBaker dbo:decedentAt ?administration .

  # Step 4: Identify Exchequer Standards author
  ?exchequerStandards dbo:author ?author .
  ?exchequerStandards rdfs:label ""Exchequer Standards""@en .

  # Step 5: Find the parent of this author who is a politician and an office holder
  ?author foaf:parent ?parent .
  ?parent dbo:occupation dbr:Politician ;
          dbo:officeHolder true .
}
```",5,8,6,3,2,3,3,71,0,0,2,0,0.0,0
508,16,val,"Give me the birthplace of the commander, that is Saudi, in Central Plains War and birthplace of the commander, that is a politician, in 1939–1940 Winter Offensive.",SELECT ?result WHERE { ?v3 <http://dbpedia.org/ontology/birthPlace> ?result . ?v3 <http://dbpedia.org/ontology/nationality> <http://dbpedia.org/resource/Saudi_Arabia>. <http://dbpedia.org/resource/Central_Plains_War> <http://dbpedia.org/ontology/commander> ?v3 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. <http://dbpedia.org/resource/1939–1940_Winter_Offensive> <http://dbpedia.org/ontology/commander> ?v2 . ?v2 <http://dbpedia.org/ontology/birthPlace> ?result . },"```sparql
# Query for the birthplace of Prince Faisal of Saudi Arabia
SELECT ?birthPlace WHERE {
  wd:Q123456 wdt:P19 ?birthPlace .
}

# Query for the birthplace of Vyacheslav Molotov
SELECT ?birthPlace WHERE {
  wd:Q654321 wdt:P19 ?birthPlace .
}
```

Note: The placeholders `wd:Q123456` and `wd:Q654321` should be replaced with the actual DBpedia resource identifiers for Prince Faisal and Vyacheslav Molotov, respectively. You can find these identifiers by searching DBpedia or using a SPARQL endpoint to query for individuals matching their names.",4,6,5,2,2,3,2,20,0,0,3,0,0.0,0
645,40,val,Give me the commander in the force of the commander in Siege of Madrid and military force of Spanish Civil War and leader of Ministry of the Army (Spain).,SELECT ?result WHERE { <http://dbpedia.org/resource/Siege_of_Madrid> <http://dbpedia.org/ontology/commander> ?v2 . ?v1 <http://dbpedia.org/ontology/commander> ?v2 . ?result <http://dbpedia.org/ontology/battle> <http://dbpedia.org/resource/Spanish_Civil_War> . <http://dbpedia.org/resource/Ministry_of_the_Army_(Spain)> <http://dbpedia.org/ontology/leader> ?result . ?v1 <http://dbpedia.org/ontology/commander> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?person WHERE {
  ?person a dbo:MilitaryPerson .
  ?person dbo:commanderOf ?siegeEvent .
  FILTER(CONTAINS(LCASE(str(?siegeEvent)), ""siege of madrid"")) .
  
  ?person dbo:militaryConflict ?civilWar .
  FILTER(CONTAINS(LCASE(str(?civilWar)), ""spanish civil war"")) .

  ?person dbo:headOfGovernment ?ministry .
  FILTER(CONTAINS(LCASE(str(?ministry)), ""ministry of the army (spain)"")) .
}
```",5,5,6,3,3,3,3,71,0,0,1,0,0.0,0
122,7,val,Give me the band of Gift of Gab (rapper) and band member of the band of Gift of Gab (rapper).,SELECT ?result WHERE { <http://dbpedia.org/resource/Gift_of_Gab_(rapper)> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . <http://dbpedia.org/resource/Gift_of_Gab_(rapper)> <http://dbpedia.org/ontology/associatedMusicalArtist> ?v0 . ?result <http://dbpedia.org/ontology/associatedMusicalArtist> ?v0 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?bandLabel ?memberLabel WHERE {
  ?giftOfGab a dbo:MusicalArtist ;
             foaf:name ""Gift of Gab""@en .
  
  ?giftOfGab dbo:band ?band .

  ?band rdfs:label ?bandLabel .
  FILTER (lang(?bandLabel) = 'en')

  OPTIONAL { 
    ?member dbo:band ?band ;
            foaf:name ?memberLabel .
    FILTER (lang(?memberLabel) = 'en')
  }
}
```",3,3,4,2,2,2,2,9,0,0,3,0,0.0,0
18,21,val,"Give me the parent of Liza Huber and professional in  and alumnus of the figure known, that is an educational institution, as Saints.","SELECT ?result WHERE { ?result <http://dbpedia.org/property/occupation> """"@en . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/EducationalInstitution>. ?v1 <http://dbpedia.org/property/nickname> ""Saints""@en . ?result <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Liza_Huber> . ?result <http://dbpedia.org/ontology/almaMater> ?v1 . }","```sparql
# Step 1: Find Liza Huber's parent
SELECT ?parent WHERE {
  dbpedia:Liza_Huber dbo:parent ?parent .
}

# Assuming we identify a parent (e.g., ?parent), proceed to find their profession

# Step 2: Determine the professional field of the identified parent
SELECT ?profession WHERE {
  ?parent dbo:occupation ?profession .
}

# Assuming we have identified the profession, proceed to find an educational institution known as ""Saints""

# Step 3: Identify the educational institution known as ""Saints""
SELECT ?institution WHERE {
  ?institution rdfs:label ?label .
  FILTER(CONTAINS(LCASE(?label), ""saints""))
}

# Assuming we have identified the institution (e.g., ?institution), proceed to find alumni

# Step 4: Find alumni from this institution who are professionals in the same field
SELECT DISTINCT ?alumnus WHERE {
  ?alumnus dbo:almaMater ?institution .
  ?alumnus dbo:occupation ?profession .
  FILTER(?profession = <identified_profession_uri>) # Replace with actual URI of identified profession
}
```",4,5,5,2,3,2,3,28,0,0,1,0,0.0,0
917,46,val,"Give me the parent of the child, that is a royalty, of the mayor of Hawaiian Kingdom and child of the father of Keʻelikōlani.",SELECT ?result WHERE { <http://dbpedia.org/resource/Keʻelikōlani> <http://dbpedia.org/property/father> ?v3 . ?v0 <http://dbpedia.org/property/father> ?v2 . ?result <http://dbpedia.org/ontology/child> ?v0 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?result <http://dbpedia.org/ontology/parent> ?v3 . <http://dbpedia.org/resource/Hawaiian_Kingdom> <http://dbpedia.org/property/leader> ?v2 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?parent WHERE {
  # Step 1: Identify the mayor and his children
  ?mayor a dbo:Mayor ;
         foaf:name ""John Young""@en .
  
  ?child dbo:childOf ?mayor ;
         a dbo:Person .

  # Step 2: Filter for those children who are royalty
  OPTIONAL { ?child dbo:title dbr:Royal_Titles_of_the_Kingdom_of_Hawaii . }

  # Step 3: Determine the father of Keʻelikōlani
  ?keelikolani a dbo:Person ;
               foaf:name ""Ruth Keʻelikōlani""@en .
  
  ?father dbo:child ?keelikolani .

  # Step 4: Find the parent of the identified royal child
  ?parent dbo:child ?child .
}
```",5,6,6,3,2,3,3,71,0,0,2,0,0.0,0
826,42,val,"Give me the spouse of the child of Johann Heinrich Appel and predecessor of the parent of Prince Friedrich of Hesse and by Rhine and successor of Louis II, Grand Duke of Hesse.","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/successor> ?v1 . <http://dbpedia.org/resource/Prince_Friedrich_of_Hesse_and_by_Rhine> <http://dbpedia.org/ontology/parent> ?v1 . <http://dbpedia.org/resource/Louis_II,_Grand_Duke_of_Hesse> <http://dbpedia.org/ontology/successor> ?result . ?v2 <http://dbpedia.org/property/father> ""Johann Heinrich Appel""@en . ?v2 <http://dbpedia.org/ontology/spouse> ?result . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?spouse WHERE {
  # Step 1: Identify Johann Heinrich Appel's child
  ?child dbo:parent dbr:Johann_Heinrich_Appel .
  
  # Step 2: Find the spouse of that child
  ?child dbo:spouse ?spouse .

  # Step 3: Identify Prince Friedrich of Hesse and by Rhine's parent
  ?friedrichParent dbo:child dbr:Prince_Friedrich_of_Hesse_and_by_Rhine .
  
  # Step 4: Determine the predecessor of that parent
  ?predecessor dbo:succeededBy ?friedrichParent .

  # Step 5: Find Louis II, Grand Duke of Hesse's successor
  dbr:Louis_II,_Grand_Duke_of_Hesse dbo:succeededBy ?successor .

  # Step 6: Combine these elements
  FILTER (?spouse = ?predecessor && ?spouse = ?successor)
}
```",5,5,6,2,3,3,3,71,0,0,1,0,0.0,0
892,46,val,Give me the landmark at elevation of the award of Anna Ishii and entity in the profession of the true self of Enrico Crolla.,"SELECT ?result WHERE { ?v2 <http://xmlns.com/foaf/0.1/givenName> ""Enrico Crolla""@en . <http://dbpedia.org/resource/Anna_Ishii> <http://dbpedia.org/property/awards> ?v3 . ?result <http://dbpedia.org/ontology/country> ?v0 . ?result <http://dbpedia.org/ontology/elevation> ?v3 . ?v2 <http://dbpedia.org/property/occupation> ?v0 . }","```sparql
# Step 1: Find the award received by Anna Ishii
SELECT ?award WHERE {
  ?person foaf:name ""Anna Ishii""@en .
  ?person dbo:honorificTitle ?award .
}

# Step 2: Identify a landmark at the elevation of the award (assuming elevation is numeric)
# This step requires knowing the elevation, which might be part of the award's description or related data.
SELECT ?landmark WHERE {
  ?landmark dbo:elevation ?elevation .
  FILTER(?elevation = <ELEVATION_VALUE>) # Replace <ELEVATION_VALUE> with actual value from Step 1
}

# Step 3: Find Enrico Crolla's profession
SELECT ?profession WHERE {
  ?person foaf:name ""Enrico Crolla""@en .
  ?person dbo:occupation ?profession .
}

# Step 4: Identify an entity in the same profession as Enrico Crolla
SELECT ?entity WHERE {
  ?entity dbo:occupation ?profession .
  FILTER(?profession = <PROFESSION_VALUE>) # Replace <PROFESSION_VALUE> with actual value from Step 3
}
```",5,5,6,3,2,3,3,71,0,0,11,0,0.0,0
124,54,val,"Give me the commander in the war, that is a societal event and a military conflict, of A Field Battery, Royal Australian Artillery and military force of Battle of Atbara and military force of the war, that is an event and a military conflict and a societal event, of the awardee of British South Africa Company Medal.","SELECT ?result WHERE { ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?result <http://dbpedia.org/ontology/battle> ?v5 . ?v0 <http://dbpedia.org/ontology/battle> ?v5 . ?v3 <http://dbpedia.org/ontology/commander> ?result . ?v0 <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/British_South_Africa_Company_Medal> . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?result <http://dbpedia.org/ontology/battle> <http://dbpedia.org/resource/Battle_of_Atbara> . <http://dbpedia.org/resource/A_Field_Battery,_Royal_Australian_Artillery> <http://dbpedia.org/ontology/battle> ?v3 . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?commander WHERE {
  # Find a field battery from the Royal Australian Artillery and its commander in a war
  ?battery dbo:type dbr:Field_Battery ;
           dbo:militaryUnitOf dbr:Royal_Australian_Artillery ;
           dbo:commandedBy ?raaCommander .
  
  ?war dbo:participatingMilitaryUnit ?battery ;
       dbo:eventType dbr:Military_Conflict, dbr:Societal_Event .

  # Find military forces involved in the Battle of Atbara and their commander
  ?atbaraForce dbo:participatedInBattle dbr:Battle_of_Atbara ;
               dbo:commandedBy ?atbaraCommander .
  
  # Check if the commanders are the same
  FILTER (?raaCommander = ?atbaraCommander)

  # Ensure the war is a societal event and military conflict
  ?war dbo:eventType dbr:Military_Conflict, dbr:Societal_Event .

  # Find awardees of the British South Africa Company Medal
  ?medalAwardee dbo:awardedMedal dbr:British_South_Africa_Company_Medal ;
                dbo:participatedInWar ?war .
}
```",6,11,7,3,3,3,3,71,0,0,1,0,0.0,0
124,41,val,"Give me the commander in the war, that is a societal event and a military conflict, of A Field Battery, Royal Australian Artillery and military force of Battle of Atbara and military force of the war, that is an event and a military conflict and a societal event, of Frank Rhodes (British Army officer).","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/battle> ?v4 . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?v2 <http://dbpedia.org/ontology/commander> ?result . <http://dbpedia.org/resource/A_Field_Battery,_Royal_Australian_Artillery> <http://dbpedia.org/ontology/battle> ?v2 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?result <http://dbpedia.org/ontology/battle> <http://dbpedia.org/resource/Battle_of_Atbara> . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. <http://dbpedia.org/resource/Frank_Rhodes_(British_Army_officer)> <http://dbpedia.org/ontology/battle> ?v4 . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. }","```sparql
# Step 1: Identify the war involving A Field Battery, Royal Australian Artillery
SELECT ?war WHERE {
  ?unit rdf:type dbo:MilitaryUnit .
  ?unit rdfs:label ""A Field Battery, Royal Australian Artillery""@en .
  ?unit dbo:militaryConflict ?war .
}

# Step 2: Find the commander of the British forces at the Battle of Atbara
SELECT ?commander WHERE {
  ?battle rdf:type dbo:MilitaryEngagement ;
          rdfs:label ""Battle of Atbara""@en ;
          dbo:participatingMilitaryForce ?force .
  ?force dbo:commander ?commander .
}

# Step 3: Determine the military conflict Frank Rhodes was involved in and its commander
SELECT ?conflict ?frankCommander WHERE {
  ?officer rdf:type dbo:MilitaryPerson ;
           rdfs:label ""Frank Rhodes (British Army officer)""@en ;
           dbo:militaryConflict ?conflict .
  ?conflict dbo:commander ?frankCommander .
}

# Step 4: Check if there is a common commander for both conflicts
SELECT DISTINCT ?commonCommander WHERE {
  VALUES (?war1 ?war2) { (<WAR_URI_1> <WAR_URI_2>) }
  
  ?war1 dbo:commander ?commonCommander .
  ?war2 dbo:commander ?commonCommander .
}
```

Note: Replace `<WAR_URI_1>` and `<WAR_URI_2>` with the actual URIs obtained from steps 1 and 3.",5,10,6,2,3,3,3,71,0,0,1,0,0.0,0
773,43,val,"Give me the spouse of Louis the German and parent of the successor of the child, that is a royalty, of Louis the Pious and parent of Charles the Fat.",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/child> ?v4 . <http://dbpedia.org/resource/Louis_the_German> <http://dbpedia.org/ontology/spouse> ?result . ?v0 <http://dbpedia.org/ontology/successor> ?v4 . <http://dbpedia.org/resource/Louis_the_Pious> <http://dbpedia.org/ontology/child> ?v0 . <http://dbpedia.org/resource/Charles_the_Fat> <http://dbpedia.org/ontology/parent> ?result . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. },"```sparql
# Step 1: Find Louis the German's spouse
SELECT ?spouse WHERE {
  wd:Q12345 wdt:P26 ?spouse .
}

# Step 2: Identify a child of Louis the Pious whose successor is royalty
SELECT DISTINCT ?child ?successor WHERE {
  wd:Q67890 wdt:P40 ?child .
  ?child wdt:P46 ?successor .
  FILTER EXISTS { ?successor wdt:P31 wd:Q5 } # Ensure successor is a person (royalty)
}

# Step 3: Find the parent of Charles the Fat
SELECT ?parent WHERE {
  wd:Q13579 wdt:P22 ?parent .
}

# Step 4: Connect these relationships to find the common individual
SELECT DISTINCT ?commonIndividual WHERE {
  # Louis the German's spouse
  wd:Q12345 wdt:P26 ?commonIndividual .

  # Parent of successor of a child of Louis the Pious
  ?child wdt:P40 wd:Q67890 .
  ?child wdt:P46 ?successor .
  ?successor wdt:P22 ?commonIndividual .
  
  # Parent of Charles the Fat
  wd:Q13579 wdt:P22 ?commonIndividual .
}
```

Note: Replace `wd:Q12345`, `wd:Q67890`, and `wd:Q13579` with the actual DBpedia QIDs for Louis the German, Louis the Pious, and Charles the Fat respectively.",5,6,6,3,3,3,3,71,0,0,1,0,0.0,0
888,17,val,Give me the awardee of the award of the commander in 2022 Ukrainian eastern counteroffensive and commander in Southern Ukraine campaign.,SELECT ?result WHERE { ?result <http://dbpedia.org/property/awards> ?v3 . <http://dbpedia.org/resource/Southern_Ukraine_campaign> <http://dbpedia.org/ontology/commander> ?result . <http://dbpedia.org/resource/2022_Ukrainian_eastern_counteroffensive> <http://dbpedia.org/ontology/commander> ?v0 . ?v0 <http://dbpedia.org/property/awards> ?v3 . },"```sparql
SELECT ?awardee WHERE {
  # Award related to the Ukrainian eastern counteroffensive in 2022
  ?award1 dbo:name ""Award for Commander in Eastern Ukraine Counteroffensive""@en .
  ?award1 dbo:year ""2022""^^xsd:gYear .
  ?award1 dbo:recipient ?awardee .

  UNION

  # Award related to the Southern Ukraine campaign in 2022
  ?award2 dbo:name ""Award for Commander in Southern Ukraine Campaign""@en .
  ?award2 dbo:year ""2022""^^xsd:gYear .
  ?award2 dbo:recipient ?awardee .
}
```",4,4,5,3,2,3,2,20,0,0,1,0,0.0,0
839,52,val,"Give me the band of the person born, that is a musical artist, as the persona of Kevin Russell (musician) and band of Matthias Röhr and band of the member of Böhse Onkelz.",SELECT ?result WHERE { ?v2 <http://dbpedia.org/property/birthName> ?v3 . ?v2 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. <http://dbpedia.org/resource/Böhse_Onkelz> <http://dbpedia.org/ontology/bandMember> ?v5 . ?result <http://dbpedia.org/ontology/bandMember> ?v5 . ?result <http://dbpedia.org/ontology/bandMember> <http://dbpedia.org/resource/Matthias_Röhr> . <http://dbpedia.org/resource/Kevin_Russell_(musician)> <http://xmlns.com/foaf/0.1/givenName> ?v3 . },"```sparql
SELECT DISTINCT ?person ?band WHERE {
  # Kevin Russell (musician)
  { 
    ?person rdfs:label ""Kevin Russell (musician)""@en .
    ?person dbo:birthPlace ?place .
    ?person dbo:band ?band .
  }
  
  UNION
  
  # Matthias Röhr
  { 
    ?person rdfs:label ""Matthias Röhr""@en .
    ?person dbo:birthPlace ?place .
    ?person dbo:band ?band .
  }

  UNION

  # Member of Böhse Onkelz (e.g., Kevin Russell)
  {
    ?member dbo:memberOfBand <http://dbpedia.org/resource/Böhse_Onkelz> .
    ?member rdfs:label ?label .
    FILTER(CONTAINS(LCASE(?label), ""kevin russell"") || CONTAINS(LCASE(?label), ""matthias röhr"")) .
    ?member dbo:birthPlace ?place .
    ?member dbo:band ?band .
  }
  
  # Filter to ensure they are musical artists
  FILTER EXISTS { ?person dbo:birthPlace ?place . }
}
```",6,7,7,3,3,3,3,71,0,0,1,0,0.0,0
839,41,val,"Give me the band of the person born, that is a musical artist, as Kevin Richard Russell and band of the member of Böhse Onkelz and band of Matthias Röhr.","SELECT ?result WHERE { ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?result <http://dbpedia.org/ontology/bandMember> ?v4 . ?v2 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . <http://dbpedia.org/resource/Böhse_Onkelz> <http://dbpedia.org/ontology/bandMember> ?v4 . ?v2 <http://dbpedia.org/property/birthName> ""Kevin Richard Russell""@en . ?result <http://dbpedia.org/ontology/bandMember> <http://dbpedia.org/resource/Matthias_Röhr> . }","```sparql
# Query to find the band associated with Kip Winger (Kevin Richard Russell)
SELECT ?band WHERE {
  ?person dbo:birthName ""Kevin Richard Russell""@en .
  ?person foaf:name ""Kip Winger""@en .
  ?person dbo:associatedBand ?band .
}

UNION

# Query to find the band Böhse Onkelz associated with Matthias Röhr
SELECT ?band WHERE {
  ?person foaf:name ""Matthias Röhr""@de .
  ?person dbo:memberOf ?group .
  ?group rdfs:label ""Böhse Onkelz""@en .
  ?group dbo:associatedBand ?band .
}
```",5,6,6,2,3,3,3,71,0,0,1,0,0.0,0
976,44,val,"Give me the office of the mayor, that is a politician and an office holder and Turkish, of Nation Alliance (Turkey) and office of the person born as Mehmet Naci Bostancı and office of Mustafa Şentop.","SELECT ?result WHERE { ?v4 <http://dbpedia.org/property/office> ?result . ?v0 <http://dbpedia.org/property/birthName> ""Mehmet Naci Bostancı""@en . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v0 <http://dbpedia.org/property/office> ?result . ?v4 <http://dbpedia.org/ontology/nationality> <http://dbpedia.org/resource/Turkey>. <http://dbpedia.org/resource/Nation_Alliance_(Turkey)> <http://dbpedia.org/property/leader> ?v4 . <http://dbpedia.org/resource/Mustafa_Şentop> <http://dbpedia.org/property/office> ?result . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT DISTINCT ?office WHERE {
  # Office of Mehmet Naci Bostancı
  OPTIONAL {
    ?person dbr:Mehmet_Naci_Bostancı .
    ?person dbo:nationality dbr:Turkey ;
            dbo:partyMember dbr:Nation_Alliance_(Turkey) .
    ?person dbo:office ?office .
  }

  # Office of Mustafa Şentop
  OPTIONAL {
    ?person dbr:Mustafa_Şentop .
    ?person dbo:office ?office .
  }

  # Any Turkish politician from Nation Alliance (Turkey)
  OPTIONAL {
    ?person dbo:nationality dbr:Turkey ;
            dbo:partyMember dbr:Nation_Alliance_(Turkey) .
    ?person dbo:office ?office .
  }
}
```",5,8,6,2,3,3,3,71,0,0,1,0,0.0,0
955,16,val,"Give me the band of the band member, that is a musical artist and an artist, of Street Dogs and band of the writer of Don't Forget Your Roots (album).",SELECT ?result WHERE { ?v3 <http://dbpedia.org/ontology/associatedMusicalArtist> <http://dbpedia.org/resource/Street_Dogs> . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?result <http://dbpedia.org/ontology/bandMember> ?v2 . ?result <http://dbpedia.org/ontology/bandMember> ?v3 . <http://dbpedia.org/resource/Don't_Forget_Your_Roots_(album)> <http://dbpedia.org/property/writer> ?v2 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. },"```sparql
# Query to find a member of Street Dogs who is also an artist (in terms of visual arts)
SELECT ?member WHERE {
  ?band dbr:Street_Dogs .
  ?band dbo:bandMember ?member .
  ?member foaf:name ?name .
  FILTER(?name = ""Mike McColgan"") .
  OPTIONAL { ?member dbo:occupation dbp:musician . }
  OPTIONAL { ?member dbo:occupation dbp:artist . }
}

# Query to find the band associated with Mike McColgan
SELECT ?band WHERE {
  ?person foaf:name ""Mike McColgan"" .
  ?person dbo:memberOf ?band .
}

# Query to find the writer of the album ""Don't Forget Your Roots""
SELECT ?writer WHERE {
  ?album dbr:Don_t_Forget_Your_Roots_(Street_Dogs_album) .
  ?album dbo:composer ?writer .
  FILTER(?writer = dbp:Mike_McColgan)
}

# Query to find the band associated with Mike McColgan
SELECT ?band WHERE {
  ?person foaf:name ""Mike McColgan"" .
  ?person dbo:memberOf ?band .
}
```",4,6,5,2,2,3,2,20,0,0,1,0,0.0,0
965,52,val,"Give me the parent of the child, that is a royalty, of Prince Louis of Battenberg and spouse of the spouse of the parent of Louise Mountbatten and parent of George Mountbatten, 2nd Marquess of Milford Haven.","SELECT ?result WHERE { ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. <http://dbpedia.org/resource/George_Mountbatten,_2nd_Marquess_of_Milford_Haven> <http://dbpedia.org/ontology/parent> ?result . ?result <http://dbpedia.org/ontology/spouse> ?v1 . ?v3 <http://dbpedia.org/ontology/spouse> ?v1 . ?v4 <http://dbpedia.org/ontology/parent> ?result . <http://dbpedia.org/resource/Louise_Mountbatten> <http://dbpedia.org/ontology/parent> ?v3 . ?v4 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Prince_Louis_of_Battenberg> . }","```sparql
SELECT ?parent WHERE {
  # Victoria Eugenie of Battenberg (child of Prince Louis of Battenberg)
  wd:Q1234567 wdt:P31/wdt:P279* wd:Q5 . # Victoria Eugenie is a person and royalty

  # Alfonso XIII of Spain (spouse of Victoria Eugenie)
  ?victoriaEugenie wdt:P26 ?alfonsoXIII .
  
  # Maria de las Mercedes of Bourbon-Two Sicilies (mother of Victoria Eugenie)
  ?alfonsoXIII wdt:P25 ?mariaDeLasMercedes .

  # Prince Alfonso, Duke of Calabria (father of Maria de las Mercedes)
  ?mariaDeLasMercedes wdt:P22 ?parent .
}
```",6,7,7,3,3,3,3,71,0,0,2,0,0.0,0
917,43,val,"Give me the child of Kekūanāoʻa and parent of Albert Kamehameha and child of the father of the spouse, that is a royalty, of Leleiohoku I.","SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/spouse> <http://dbpedia.org/resource/Leleiohoku_I> . ?v1 <http://dbpedia.org/property/father> ?v3 . ?result <http://dbpedia.org/ontology/parent> ?v3 . ?result <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Albert_Kamehameha> . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?result <http://dbpedia.org/property/father> ""Kekūanāoʻa""@en . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?person WHERE {
  # Step 1: Find Kekūanāoʻa's child who is also the parent of Albert Kamehameha
  ?childKekuanaoa dbo:parent dbr:Kekūanāoʻa .
  ?childKekuanaoa dbo:child dbr:Albert_Kamehameha .

  # Step 2: Find Leleiohoku I's spouse and their father
  ?spouseLeleiohoku1 dbo:spouse dbr:Leleiohoku_I .
  ?fatherSpouse dbp:spouse ?spouseLeleiohoku1 .
  
  # Step 3: Find the child of that father
  ?childFather dbp:parent ?fatherSpouse .

  # Ensure the person is royalty
  ?person dbo:royalty dbr:Monarchy_of_the_Kingdom_of_Hawaii .

  # Cross-reference to find a common individual
  FILTER (?childKekuanaoa = ?person && ?childFather = ?person)
}
```",5,6,6,3,3,3,3,71,0,0,1,0,0.0,0
715,40,val,"Give me the commander in Spanish Civil War and commander in the force, that is a military conflict, of the native of Morocco and leader of Ministry of the Air (Spain).",SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v1 <http://dbpedia.org/ontology/commander> ?v2 . <http://dbpedia.org/resource/Spanish_Civil_War> <http://dbpedia.org/ontology/commander> ?result . ?v2 <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Morocco> . <http://dbpedia.org/resource/Ministry_of_the_Air_(Spain)> <http://dbpedia.org/ontology/leader> ?result . ?v1 <http://dbpedia.org/ontology/commander> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?person ?name WHERE {
  ?person a dbo:MilitaryPerson .
  ?person dbo:nationality dbr:Morocco .
  
  # Commander in the Spanish Civil War
  ?civilWarEvent dbo:commander ?person ;
                 rdfs:label ""Spanish Civil War""@en .
  
  # Commander in a military conflict involving Morocco
  ?moroccanConflict dbo:location dbr:Morocco ;
                   dbo:commander ?person .
  
  # Leader of the Ministry of the Air (Spain)
  ?ministerPosition dbo:officeHolder ?person ;
                    rdfs:label ""Ministry of the Air (Spain)""@en .
  
  # Get the name of the person
  ?person foaf:name ?name .
}
```",5,6,6,3,3,3,3,71,0,0,1,0,0.0,0
102,17,val,"Give me the native of the residence, that is English and a settlement, of the resident, that is an athlete, of Dewsbury and manager of Sheffield United W.F.C..",SELECT ?result WHERE { ?v0 <http://dbpedia.org/ontology/residence> <http://dbpedia.org/resource/Dewsbury> . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Athlete>. ?v0 <http://dbpedia.org/property/residence> ?v3 . ?result <http://dbpedia.org/ontology/birthPlace> ?v3 . <http://dbpedia.org/resource/Sheffield_United_W.F.C.> <http://dbpedia.org/ontology/manager> ?result . ?v3 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/United_Kingdom>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?nativeLanguage WHERE {
  ?person a dbo:Athlete ;
          dbo:managerOfTeam dbr:Sheffield_United_Women_Football_Club ;
          dbo:placeOfBirth ?dewsbury .
  
  ?residence dbo:nativeName ""English"" ;
             dbo:settlementType ?settlementType ;
             dbo:language ?nativeLanguage .

  ?person dbo:currentResidence ?residence .
  
  FILTER(?settlementType = dbo:Settlement)
}
```",4,7,5,3,2,3,2,20,0,0,1,0,0.0,0
987,50,val,"Give me the birth place of the actor of the show, that is a film, with Emir Hadžihafizbegović and entity in the region, that is a country, of Central European Time.",SELECT ?result WHERE { ?v3 <http://dbpedia.org/ontology/birthPlace> ?result . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Film>. ?v0 <http://dbpedia.org/property/timeZone> <http://dbpedia.org/resource/Central_European_Time> . ?v1 <http://dbpedia.org/property/starring> ?v3 . ?v1 <http://dbpedia.org/ontology/starring> <http://dbpedia.org/resource/Emir_Hadžihafizbegović> . ?result <http://dbpedia.org/ontology/country> ?v0 . },"```sparql
SELECT ?actorBirthPlace WHERE {
  # Step 1: Find a film featuring Emir Hadžihafizbegović
  ?film dbo:starring dbpedia:Emir_Hadžihafizbegović .
  
  # Step 2: Identify related shows or adaptations (assuming there's a direct link)
  OPTIONAL { ?show dbo:basedOnFilm ?film . }
  
  # Step 3: Find entities in CET countries
  ?entity dbo:country ?cetCountry .
  FILTER (
    ?cetCountry IN (
      dbpedia:Germany, 
      dbpedia:France, 
      dbpedia:Poland, 
      dbpedia:Czech_Republic, 
      dbpedia:Slovakia,
      dbpedia:Austria
    )
  )
  
  # Step 4: Determine the main actor of the show
  ?show dbo:starring ?actor .
  
  # Step 5: Find the birthplace of this actor
  ?actor dbo:birthPlace ?actorBirthPlace .
}
```",5,7,6,3,2,3,3,71,0,0,18,0,0.0,0
465,41,val,"Give me the spouse of the child, that is a royalty, of Ferdinand I, Holy Roman Emperor and successor of Renée of France and successor of the child of Alfonso I d'Este.","SELECT ?result WHERE { <http://dbpedia.org/resource/Ferdinand_I,_Holy_Roman_Emperor> <http://dbpedia.org/ontology/child> ?v4 . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v2 <http://dbpedia.org/ontology/successor> ?result . <http://dbpedia.org/resource/Renée_of_France> <http://dbpedia.org/ontology/successor> ?result . ?v2 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Alfonso_I_d'Este> . ?result <http://dbpedia.org/ontology/spouse> ?v4 . }","```sparql
SELECT ?spouse WHERE {
  # Step 1: Find Ferdinand I, Holy Roman Emperor's children
  ?child dbo:parent dbr:Ferdinand_I,_Holy_Roman_Emperor .
  
  # Step 2: Filter for the child who is royalty and succeeded Renée of France
  ?child dbo:title ?title .
  FILTER(CONTAINS(LCASE(STR(?title)), ""royalty""))
  ?child dbo:succeededBy dbr:Renée_of_France .

  # Step 3: Find the successor of this child
  ?successor dbo:succeededBy ?child .

  # Step 4: Query for the spouse of this successor
  ?successor dbo:spouse ?spouse .
}
```",5,6,6,2,3,3,3,71,0,0,1,0,0.0,0
987,47,val,"Give me the birth place of the actor of the show, that is a film, with Emir Hadžihafizbegović and birth place of the band, that is an artist and a musical artist, of Šako Polumenta.",SELECT ?result WHERE { ?v0 <http://dbpedia.org/property/starring> ?v3 . <http://dbpedia.org/resource/Šako_Polumenta> <http://dbpedia.org/ontology/associatedMusicalArtist> ?v1 . ?v3 <http://dbpedia.org/ontology/birthPlace> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?v0 <http://dbpedia.org/ontology/starring> <http://dbpedia.org/resource/Emir_Hadžihafizbegović> . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Film>. ?v1 <http://dbpedia.org/ontology/birthPlace> ?result . },"```sparql
# Query to find a film featuring Emir Hadžihafizbegović and a related TV show
SELECT ?film ?show WHERE {
  ?film dbo:starring dbpedia:Emir_Hadžihafizbegović .
  ?film dbo:basedOn ?show .
}

# Assuming we have identified the show, query for an actor from that show and their birthplace
SELECT ?actor ?birthPlace WHERE {
  ?actor dbo:actedIn ?show .
  ?actor foaf:bornIn ?birthPlace .
}

# Query to find the band associated with Šako Polumenta
SELECT ?band WHERE {
  dbpedia:Šako_Polumenta dbo:memberOf ?band .
  ?band a dbo:Band .
}

# Assuming we have identified the band, query for its birthplace
SELECT ?birthPlace WHERE {
  ?band dbo:originLocation ?birthPlace .
}
```",5,8,6,3,2,3,3,71,0,0,4,0,0.0,0
839,45,val,"Give me the band of Kevin Russell (musician) and band of the band, that is a musical artist, of the professional in Musician and band of Peter Schorowsky.","SELECT ?result WHERE { ?v0 <http://dbpedia.org/property/occupation> ""Musician""@en . ?v0 <http://dbpedia.org/ontology/associatedMusicalArtist> ?v1 . ?result <http://dbpedia.org/ontology/bandMember> <http://dbpedia.org/resource/Peter_Schorowsky> . ?result <http://dbpedia.org/ontology/bandMember> ?v1 . <http://dbpedia.org/resource/Kevin_Russell_(musician)> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?bandKevinRussell ?relatedBandGourds ?bandPeterSchorowsky ?relatedBandHooters WHERE {
  # Bands associated with Kevin Russell
  OPTIONAL { 
    dbr:Kevin_Russell dbo:musicalArtist ?bandKevinRussell .
    ?bandKevinRussell rdfs:label ?bandLabelKevinRussell FILTER (lang(?bandLabelKevinRussell) = 'en')
  }
  
  # Related bands to The Gourds
  OPTIONAL {
    dbr:The_Gourds dbo:musicalArtist ?relatedBandGourds .
    ?relatedBandGourds rdfs:label ?relatedBandLabelGourds FILTER (lang(?relatedBandLabelGourds) = 'en')
  }
  
  # Bands associated with Peter Schorowsky
  OPTIONAL {
    dbr:Peter_Schorowsky dbo:musicalArtist ?bandPeterSchorowsky .
    ?bandPeterSchorowsky rdfs:label ?bandLabelPeterSchorowsky FILTER (lang(?bandLabelPeterSchorowsky) = 'en')
  }
  
  # Related bands to The Hooters
  OPTIONAL {
    dbr:The_Hooters dbo:musicalArtist ?relatedBandHooters .
    ?relatedBandHooters rdfs:label ?relatedBandLabelHooters FILTER (lang(?relatedBandLabelHooters) = 'en')
  }
}
```",5,6,6,3,3,3,3,71,0,0,1,0,0.0,0
874,17,val,"Give me the band of Manfred Mann (musician) and band of the band member of the band, that is an organisation, of Mark Read (singer).",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/bandMember> <http://dbpedia.org/resource/Manfred_Mann_(musician)> . ?v0 <http://dbpedia.org/ontology/bandMember> <http://dbpedia.org/resource/Mark_Read_(singer)> . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?v3 <http://dbpedia.org/ontology/associatedMusicalArtist> ?v0 . ?result <http://dbpedia.org/ontology/bandMember> ?v3 . },"```sparql
# Step 1: Find the band associated with Manfred Mann
SELECT ?band WHERE {
    wd:Q12345 dbo:musicArtist <http://dbpedia.org/resource/Category:Musical_groups> .
}

# Step 2: Identify members of that band and check if any are organizations
SELECT DISTINCT ?member WHERE {
    ?band dbo:bandMember ?member .
    FILTER EXISTS { ?member a dbo:Organization }
}

# Step 3: Determine the bands those organizational members belong to
SELECT DISTINCT ?otherBand WHERE {
    ?orgMember dbo:bandMember ?otherBand .
}

# Step 4: Find Mark Read's association with one of these bands
SELECT DISTINCT ?finalBand WHERE {
    wd:Q1234567 dbo:musicArtist ?finalBand .
    FILTER EXISTS { ?finalBand = ?otherBand }
}
```

Note: Replace `wd:Q12345` with the actual DBpedia resource ID for Manfred Mann and `wd:Q1234567` with the resource ID for Mark Read.",4,5,5,3,2,3,2,20,0,0,1,0,0.0,0
935,16,val,Give me the death place of the awardee of Sitara-i-Imtiaz and headquarter of the office of Sanaullah Khan Zehri.,SELECT ?result WHERE { ?v3 <http://dbpedia.org/ontology/location> ?result . ?v2 <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/Sitara-i-Imtiaz> . ?v2 <http://dbpedia.org/ontology/deathPlace> ?result . <http://dbpedia.org/resource/Sanaullah_Khan_Zehri> <http://dbpedia.org/property/office> ?v3 . },"```sparql
SELECT DISTINCT ?deathPlace ?officeHeadquarters WHERE {
  # Find a notable Sitara-i-Imtiaz awardee who has passed away
  ?person dbo:award dbr:Sitara-i-Imtiaz .
  ?person dbo:deathPlace ?deathPlace .

  # Confirm Sanaullah Khan Zehri's office headquarters
  OPTIONAL {
    ?office dbo:headquarter ?officeHeadquarters ;
            dbo:member dbr:Sanaullah_Khan_Zehri .
    FILTER(?officeHeadquarters = dbpedia:Quetta)
  }
}
```",4,4,5,2,2,3,2,20,0,0,1,0,0.0,0
839,43,val,"Give me the band of Matthias Röhr and band of the member of the band, that is a band and a group, of Peter Schorowsky and band of Kevin Russell (musician).",SELECT ?result WHERE { <http://dbpedia.org/resource/Peter_Schorowsky> <http://dbpedia.org/ontology/associatedMusicalArtist> ?v0 . ?v0 <http://dbpedia.org/ontology/bandMember> ?v4 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Group>. <http://dbpedia.org/resource/Kevin_Russell_(musician)> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?result <http://dbpedia.org/ontology/bandMember> <http://dbpedia.org/resource/Matthias_Röhr> . ?result <http://dbpedia.org/ontology/bandMember> ?v4 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Band>. },"```sparql
# Query for Matthias Röhr's band
SELECT ?band WHERE {
  ?person foaf:name ""Matthias Röhr""@en .
  ?person dbo:memberOf ?band .
}

UNION

# Query for Peter Schorowsky's band that is both a band and a group
SELECT ?band WHERE {
  ?person foaf:name ""Peter Schorowsky""@en .
  ?person dbo:memberOf ?band .
  ?band rdf:type dbp:Band .
  ?band rdf:type dbp:MusicalGroup .
}

UNION

# Query for Kevin Russell's band
SELECT ?band WHERE {
  ?person foaf:name ""Kevin Russell (musician)""@en .
  ?person dbo:memberOf ?band .
}
```",5,7,6,3,3,3,3,71,0,0,1,0,0.0,0
987,49,val,"Give me the entity in the region, that is a country, of the time zone, that is a sports event, in Canicosa de la Sierra and birth place of the band, that is an artist and a musical artist, of Šako Polumenta.",SELECT ?result WHERE { ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?result <http://dbpedia.org/ontology/country> ?v0 . ?v2 <http://dbpedia.org/ontology/birthPlace> ?result . <http://dbpedia.org/resource/Canicosa_de_la_Sierra> <http://dbpedia.org/ontology/timeZone> ?v4 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. <http://dbpedia.org/resource/Šako_Polumenta> <http://dbpedia.org/ontology/associatedMusicalArtist> ?v2 . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsEvent>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. ?v0 <http://dbpedia.org/property/timeZone> ?v4 . },"```sparql
SELECT DISTINCT ?entity WHERE {
  # Step 1: Identify Šako Polumenta's band
  ?band dbo:artist dbr:Šako_Polumenta .
  
  # Step 2: Determine the birth place of the band
  ?band dbo:birthPlace ?place .

  # Step 3: Find the time zone in Canicosa de la Sierra
  ?canicosa dbp:timeZone ?timezone .

  # Step 4: Identify a sports event in that time zone
  ?event dbo:timeZone ?timezone ;
         rdf:type dbo:SportsEvent .

  # Step 5: Determine the region of the country associated with the sports event
  ?region dbo:country ?country .
  ?country dbo:location ?event .

  # Filter to ensure the country is a country entity
  FILTER (STRSTARTS(STR(?country), ""http://dbpedia.org/resource/Category:""))

  # Return the entity in the region that is a country
  ?entity rdf:type dbo:Country ;
          dbo:region ?region .
}
```",5,9,6,3,2,3,3,71,0,0,2,0,0.0,0
216,40,val,"Give me the player in Mario Ivanković and player in the coach of the reference, that is an organisation and a soccer club, to Croatia U21 and team of Ognjen Vukojević.","SELECT ?result WHERE { ?v2 <http://dbpedia.org/ontology/coach> ?v1 . ?v1 <http://dbpedia.org/ontology/team> ?result . <http://dbpedia.org/resource/Mario_Ivanković> <http://dbpedia.org/ontology/team> ?result . ?v2 <http://xmlns.com/foaf/0.1/name> ""Croatia U21""@en . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerClub>. ?result <http://dbpedia.org/ontology/coach> <http://dbpedia.org/resource/Ognjen_Vukojević> . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?player ?coachTeam WHERE {
  # Find the player associated with Mario Ivanković
  ?mario a dbo:FootballPlayer ;
         foaf:name ""Mario Ivanković""@en .
  
  # Find Ognjen Vukojević's coaching position and team
  ?ognjen a dbo:Coach ;
          foaf:name ""Ognjen Vukojević""@en ;
          dbo:team ?coachTeam .

  # Ensure the coach's team is both an organisation and a soccer club
  ?coachTeam a dbo:SoccerClub, dbo:Organisation .

  # Link to Croatia U21
  ?croatiaU21 a dbo:NationalFootballTeam ;
              foaf:name ""Croatia national under-21 football team""@en .
  
  OPTIONAL { ?mario dbo:team ?croatiaU21 . }
  OPTIONAL { ?ognjen dbo:team ?croatiaU21 . }

  # Return the player and coach's team
  ?player a dbo:FootballPlayer ;
          foaf:name ?nameIvankovic .
  
  FILTER(?nameIvankovic = ""Mario Ivanković""@en)
}
```",5,7,6,3,3,3,3,71,0,0,1,0,0.0,0
433,50,val,"Give me the professional in the profession of Bob Marley and associated musical artist of the associated musical artist, that is an artist and a musical artist, of the associated musical artist, that is a musical artist and an artist, of Ornette Coleman.",SELECT ?result WHERE { ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. <http://dbpedia.org/resource/Bob_Marley> <http://dbpedia.org/property/occupation> ?v3 . ?result <http://dbpedia.org/property/occupation> ?v3 . ?v0 <http://dbpedia.org/ontology/associatedMusicalArtist> ?v4 . ?v4 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. <http://dbpedia.org/resource/Ornette_Coleman> <http://dbpedia.org/ontology/associatedMusicalArtist> ?v0 . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. },"```sparql
# Step 1: Find musicians associated with Bob Marley
SELECT ?associatedArtist WHERE {
    wd:Q2457 dbo:profession wd:Q482980 .
    wd:Q2457 dbp:associatedMusicalArtist ?associatedArtist .
    ?associatedArtist a wd:Q215380 .
}

UNION

# Step 2: Find artists associated with Ornette Coleman
SELECT ?associatedArtist WHERE {
    wd:Q1234 dbo:profession wd:Q482980 .
    wd:Q1234 dbp:associatedMusicalArtist ?associatedArtist .
    ?associatedArtist a wd:Q215380 .
}

# Step 3: Find the intersection of these two sets
SELECT DISTINCT ?commonArtist WHERE {
    { 
        wd:Q2457 dbo:profession wd:Q482980 .
        wd:Q2457 dbp:associatedMusicalArtist ?commonArtist .
        ?commonArtist a wd:Q215380 .
    }
    
    UNION
    
    {
        wd:Q1234 dbo:profession wd:Q482980 .
        wd:Q1234 dbp:associatedMusicalArtist ?commonArtist .
        ?commonArtist a wd:Q215380 .
    }
}
```",5,9,6,3,2,3,3,71,0,0,44,0,0.0,0
267,17,val,Give me the person born on the birth date of the reference to Dan Cathy and coach of Iran national football team.,"SELECT ?result WHERE { ?v0 <http://xmlns.com/foaf/0.1/name> ""Dan Cathy""@en . ?result <http://dbpedia.org/ontology/birthDate> ?v3 . ?v0 <http://dbpedia.org/ontology/birthDate> ?v3 . <http://dbpedia.org/resource/Iran_national_football_team> <http://dbpedia.org/ontology/coach> ?result . }","```sparql
# Query 1: Get Dan Cathy's birth date
SELECT ?birthDate WHERE {
  dbpedia:Dan_Cathy dbo:birthday ?birthDate .
}

# Query 2: Find a person born on the same date as Dan Cathy who is also the coach of the Iran national football team
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?person WHERE {
  # Replace 'YYYY-MM-DD' with the actual birth date obtained from Query 1
  VALUES ?birthDate { ""YYYY-MM-DD""^^xsd:date }

  ?person dbo:birthday ?birthDate .
  ?person foaf:name ?name .

  OPTIONAL { 
    ?person dbo:spouse dbr:Iran_national_football_team_coach .
  }
  
  FILTER EXISTS {
    ?team dbo:coach ?person .
    ?team dbpedia-owl:country dbr:Iran .
  }

  # Ensure the person is not Dan Cathy
  FILTER (?person != dbr:Dan_Cathy)
}
```",4,4,5,3,2,3,2,20,0,0,1,0,0.0,0
892,42,val,"Give me the entity in the profession of Henri Crolla and entity in the administration, that is Italian and a region and a settlement and an administrative region, of Democratic Party (Italy) and landmark at elevation of 58.","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/country> ?v1 . <http://dbpedia.org/resource/Henri_Crolla> <http://dbpedia.org/property/occupation> ?v1 . ?v0 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Italy>. ?v0 <http://dbpedia.org/property/leaderParty> <http://dbpedia.org/resource/Democratic_Party_(Italy)> . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/AdministrativeRegion>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Region>. ?result <http://dbpedia.org/ontology/province> ?v0 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. ?result <http://dbpedia.org/ontology/elevation> ""58""^^<http://www.w3.org/2001/XMLSchema#integer> . }","```sparql
# Query to find Henri Crolla's profession
SELECT ?profession WHERE {
  ?person foaf:name ""Henri Crolla""@en .
  ?person dbo:occupation ?profession .
}

UNION

# Query to find an Italian entity in administration that is a region, settlement, administrative region, and part of the Democratic Party (Italy)
SELECT DISTINCT ?entity WHERE {
  ?entity rdf:type dbo:Region ;
          dbo:country dbr:Italy ;
          dbo:politicalParty dbr:Democratic_Party_(Italy) .
  OPTIONAL { ?entity rdf:type dbo:Settlement . }
  OPTIONAL { ?entity rdf:type dbo:AdministrativeRegion . }
}

UNION

# Query to find a landmark at an elevation of 58 meters
SELECT DISTINCT ?landmark WHERE {
  ?landmark rdf:type dbo:Lighthouse ;
            dbo:elevation ""58""^^xsd:integer .
}
```",5,9,6,2,3,3,3,71,0,0,2,0,0.0,0
926,46,val,Give me the successor of the child of Ahmed III and father of the father of the spouse of Neşerek Kadın.,SELECT ?result WHERE { ?v3 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Ahmed_III> . <http://dbpedia.org/resource/Neşerek_Kadın> <http://dbpedia.org/ontology/spouse> ?v2 . ?v3 <http://dbpedia.org/ontology/successor> ?result . ?v0 <http://dbpedia.org/property/father> ?result . ?v2 <http://dbpedia.org/property/father> ?v0 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?successor WHERE {
  # Ahmed III's child (e.g., Mustafa III)
  dbr:Ahmed_III dbo:child dbr:Mustafa_III .
  
  # Successor of Mustafa III
  dbr:Mustafa_III dbo:successor ?successor .

  OPTIONAL {
    # Neşerek Kadın's spouse (e.g., Mahmud I)
    dbr:Neşerek_Kadın dbo:spouse dbr:Mahmud_I .
  }
}
```",5,5,6,3,2,3,3,71,1,0,0,1.0,1.0,1.0
443,20,val,"Give me the birthplace of Carl Larsson and landmark at elevation of 28 and birthplace of the person born, that is a musical artist and an artist, on 1949-11-20.","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/elevation> ""28""^^<http://www.w3.org/2001/XMLSchema#integer> . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. <http://dbpedia.org/resource/Carl_Larsson> <http://dbpedia.org/ontology/birthPlace> ?result . ?v3 <http://dbpedia.org/ontology/birthPlace> ?result . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. ?v3 <http://dbpedia.org/ontology/birthDate> ""1949-11-20""^^<http://www.w3.org/2001/XMLSchema#date> . }","```sparql
# Step 1: Get the birthplace of Carl Larsson
SELECT ?birthPlace WHERE {
    ?s dbp:birthName ""Carl Olof Love Larsson"" .
    ?s dbo:birthPlace ?birthPlace .
}

UNION

# Step 2: Find a landmark at elevation 28 meters
SELECT ?landmark WHERE {
    ?landmark a dbo:Lighthouse ;
              dbo:elevationAboveSeaLevel ?elevation .
    FILTER (?elevation = ""28""^^xsd:string)
}

UNION

# Step 3: Get the birthplace of an artist and musical artist born on 1949-11-20
SELECT ?birthPlace WHERE {
    ?person dbp:birthday ""1949-11-20"" ;
            dbo:occupation ?occupation .
    FILTER (
        EXISTS { ?person dbo:occupation dbr:Painter . }
        && EXISTS { ?person dbo:occupation dbr:Singer . }
    )
    ?person dbo:birthPlace ?birthPlace .
}

# Step 4: Ensure the birthplace of Carl Larsson matches with the person born on 1949-11-20
SELECT DISTINCT ?birthPlace WHERE {
    VALUES (?birthPlace) {
        { SELECT ?birthPlace WHERE {
            ?s dbp:birthName ""Carl Olof Love Larsson"" .
            ?s dbo:birthPlace ?birthPlace .
        }}
        
        { SELECT ?birthPlace WHERE {
            ?person dbp:birthday ""1949-11-20"" ;
                    dbo:occupation ?occupation .
            FILTER (
                EXISTS { ?person dbo:occupation dbr:Painter . }
                && EXISTS { ?person dbo:occupation dbr:Singer . }
            )
            ?person dbo:birthPlace ?birthPlace .
        }}
    }
}
```",4,6,5,2,3,2,3,28,0,0,1,0,0.0,0
216,41,val,"Give me the team of Ognjen Vukojević and player in the coach, that is a soccer player and a sports manager and a soccer manager, of Bosnia and Herzegovina national under-18 football team and player in the coach of Croatia national under-21 football team.",SELECT ?result WHERE { <http://dbpedia.org/resource/Bosnia_and_Herzegovina_national_under-18_football_team> <http://dbpedia.org/ontology/coach> ?v4 . ?result <http://dbpedia.org/ontology/coach> <http://dbpedia.org/resource/Ognjen_Vukojević> . ?v4 <http://dbpedia.org/ontology/team> ?result . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsManager>. <http://dbpedia.org/resource/Croatia_national_under-21_football_team> <http://dbpedia.org/ontology/coach> ?v2 . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerPlayer>. ?v2 <http://dbpedia.org/ontology/team> ?result . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerManager>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?team ?role
WHERE {
  VALUES ?person { dbr:Ognjen_Vukojević }
  
  # Find teams where he is a coach for Bosnia and Herzegovina national under-18 football team
  ?team dbo:coach ?person .
  FILTER EXISTS { 
    ?team dbo:memberTeam dbr:Bosnia_and_Herzegovina_national_under-18_football_team .
  }
  
  # Find teams where he is a coach for Croatia national under-21 football team
  OPTIONAL {
    ?team2 dbo:coach ?person .
    FILTER EXISTS { 
      ?team2 dbo:memberTeam dbr:Croatia_national_under-21_football_team .
    }
  }

  # Check if he has roles as a player or sports manager in these teams
  OPTIONAL {
    ?roleType dbr:Soccer_player ;
              dbo:wikiPageRedirects ?playerRole .
    FILTER EXISTS { 
      ?team dbo:memberTeam ?person . 
      ?person rdf:type ?roleType .
    }
  }

  OPTIONAL {
    ?roleType2 dbr:Sports_manager ;
               dbo:wikiPageRedirects ?managerRole .
    FILTER EXISTS { 
      ?team dbo:memberTeam ?person . 
      ?person rdf:type ?roleType2 .
    }
  }
}
```",5,8,6,2,3,3,3,71,0,0,1,0,0.0,0
826,44,val,"Give me the predecessor of the parent of Prince Friedrich of Hesse and by Rhine and spouse of Anna Magdalena Appel and successor of the child, that is a royalty, of Louis I, Grand Duke of Hesse.","SELECT ?result WHERE { <http://dbpedia.org/resource/Louis_I,_Grand_Duke_of_Hesse> <http://dbpedia.org/ontology/child> ?v4 . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?result <http://dbpedia.org/ontology/successor> ?v2 . ?v4 <http://dbpedia.org/ontology/successor> ?result . <http://dbpedia.org/resource/Anna_Magdalena_Appel> <http://dbpedia.org/ontology/spouse> ?result . <http://dbpedia.org/resource/Prince_Friedrich_of_Hesse_and_by_Rhine> <http://dbpedia.org/ontology/parent> ?v2 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?predecessor WHERE {
  # Step 1: Identify Prince Friedrich of Hesse and by Rhine
  ?prince rdfs:label ""Prince Friedrich of Hesse and by Rhine""@en .
  
  # Step 2: Find the parent of Prince Friedrich
  ?parent dbo:child ?prince .

  # Step 3: Determine the predecessor of this parent
  ?predecessor dbo:successor ?parent .

  # Step 4: Identify Anna Magdalena Appel's spouse
  ?anna dbr:Anna_Magdalena_Appel dbo:spouse ?prince .
  
  # Step 5: Find Louis I, Grand Duke of Hesse's child
  ?louisChild dbo:parent dbr:Louis_I,_Grand_Duke_of_Hesse .

  # Step 6: Determine the successor of this child
  ?successor dbo:predecessor ?louisChild .
  
  # Ensure Prince Friedrich is the successor of Louis I's child
  FILTER(?prince = ?successor)
}
```",5,6,6,2,3,3,3,71,0,0,1,0,0.0,0
456,55,val,"Give me the professional in the alter ego of The Shadow and band of the band, that is a musical artist, of Dean Brody and spouse of the actor of Pacific Drive.",SELECT ?result WHERE { ?v2 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . <http://dbpedia.org/resource/Pacific_Drive> <http://dbpedia.org/property/starring> ?v3 . ?result <http://dbpedia.org/property/occupation> ?v5 . ?v3 <http://dbpedia.org/ontology/spouse> ?result . <http://dbpedia.org/resource/Dean_Brody> <http://dbpedia.org/ontology/associatedMusicalArtist> ?v2 . <http://dbpedia.org/resource/The_Shadow> <http://dbpedia.org/property/alterEgo> ?v5 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. },"```sparql
SELECT ?person WHERE {
  # Find Lamont Cranston's alter ego
  ?shadow dbo:alterEgo dbr:Lamont_Cranston .
  
  # Find Dean Brody's band
  ?brody dbo:musicalBand dbr:High_Valley .
  
  # Find Ryan Robbins' spouse who is a musical artist
  ?pacificDrive dbo:actor dbr:Ryan_Robbins .
  ?pacificDrive dbo:spouse ?spouse .
  ?spouse rdf:type dbo:Singer ;
          rdfs:label ""Tara Slone""@en .
  
  # Ensure the person matches all criteria
  FILTER (?shadow = ?brody && ?spouse = ?person)
}
```",6,7,7,2,3,3,3,71,0,0,1,0,0.0,0
507,42,val,Give me the spouse of the person born as Anne Voase Coates and director of Entertaining Mr Sloane (film) and professional in the profession of Guy Ferland.,"SELECT ?result WHERE { <http://dbpedia.org/resource/Guy_Ferland> <http://dbpedia.org/property/occupation> ?v1 . ?result <http://dbpedia.org/ontology/spouse> ?v2 . ?v2 <http://dbpedia.org/property/birthName> ""Anne Voase Coates""@en . ?result <http://dbpedia.org/property/occupation> ?v1 . <http://dbpedia.org/resource/Entertaining_Mr_Sloane_(film)> <http://dbpedia.org/ontology/director> ?result . }","```sparql
SELECT ?spouse WHERE {
  ?person foaf:name ""Anne Voase Coates""@en .
  ?person dbo:birthName ""Anne Voase Coates""@en .
  ?person dbo:profession dbr:Film_editor .
  ?person dbo:directed dbr:Entertaining_Mr_Sloane .
  OPTIONAL { ?person dbo:spouse ?spouse . }
}
```",5,5,6,2,3,3,3,71,0,0,1,0,0.0,0
102,16,val,"Give me the manager of the player in Ellie Roebuck and native of the residence, that is English and a settlement, of Peter Finbow.",SELECT ?result WHERE { <http://dbpedia.org/resource/Ellie_Roebuck> <http://dbpedia.org/ontology/team> ?v2 . ?v3 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/United_Kingdom>. ?result <http://dbpedia.org/ontology/birthPlace> ?v3 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. <http://dbpedia.org/resource/Peter_Finbow> <http://dbpedia.org/property/residence> ?v3 . ?v2 <http://dbpedia.org/ontology/manager> ?result . },"```sparql
SELECT ?manager ?nativeResidence WHERE {
  # Find Ellie Roebuck's manager
  ?person dbo:name ""Ellie Roebuck""@en .
  ?person dbo:manager ?manager .

  # Find Peter Finbow's native residence that is an English settlement
  ?person2 dbo:name ""Peter Finbow""@en .
  ?person2 dbo:nativePlace ?nativeResidence .
  ?nativeResidence dbo:country dbr:England ;
                   a dbo:Settlement .
}
```",4,6,5,2,2,3,2,20,0,0,1,0,0.0,0
826,43,val,"Give me the spouse of Anna Magdalena Appel and successor of the child, that is a royalty, of the reference, that is a royalty, to Louis I and predecessor of Louis IV, Grand Duke of Hesse.","SELECT ?result WHERE { ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v0 <http://xmlns.com/foaf/0.1/name> ""Louis I""@en . ?v0 <http://dbpedia.org/ontology/child> ?v4 . ?v4 <http://dbpedia.org/ontology/successor> ?result . <http://dbpedia.org/resource/Anna_Magdalena_Appel> <http://dbpedia.org/ontology/spouse> ?result . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?result <http://dbpedia.org/ontology/successor> <http://dbpedia.org/resource/Louis_IV,_Grand_Duke_of_Hesse> . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?spouse ?successor WHERE {
  # Anna Magdalena Bach's spouse
  dbr:Anna_Magdalena_Bach dbo:spouse dbr:Johann_Sebastian_Bach .
  
  # Friederica Henriette, daughter of Johann Sebastian Bach
  dbr:Friederica_Henriette_Bach dbo:parent dbr:Johann_Sebastian_Bach ;
                                dbo:spouse ?mariaAntoniaWalpurgis .

  # Maria Antonia Walpurgis married Charles II Augustus, Duke of Zweibrücken-Birkenfeld
  ?mariaAntoniaWalpurgis dbo:spouse dbr:Charles_II_Augustus,_Duke_of_Zweibrücken-Birkenfeld ;
                         dbo:child ?maximilianJoseph .

  # Maximilian Joseph became King of Bavaria, succeeded by Ludwig I of Bavaria
  ?maximilianJoseph dbo:succeededBy dbr:Ludwig_I_of_Bavaria ;
                    rdf:type dbo:Monarch .

  # Louis I and his successor
  dbr:Louis_I,_Grand_Duke_of_Hesse dbo:succeededBy dbr:Louis_II,_Grand_Duke_of_Hesse .
  
  # Predecessor of Louis IV, Grand Duke of Hesse
  dbr:Louis_IV,_Grand_Duke_of_Hesse dbo:predecessor dbr:Louis_III,_Grand_Duke_of_Hesse .

  BIND(dbr:Johann_Sebastian_Bach AS ?spouse)
  BIND(dbr:Ludwig_I_of_Bavaria AS ?successor)
}
```",5,7,6,3,3,3,3,71,0,0,1,0,0.0,0
36,19,val,"Give me the person born in 1971 and person born as Ayo Makun and actor of the claim to fame, that is a film, of Lepacious Bose.","SELECT ?result WHERE { ?v3 <http://dbpedia.org/ontology/starring> ?result . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Film>. ?result <http://dbpedia.org/ontology/birthYear> ""1971""^^<http://www.w3.org/2001/XMLSchema#gYear> . <http://dbpedia.org/resource/Lepacious_Bose> <http://dbpedia.org/ontology/knownFor> ?v3 . ?result <http://dbpedia.org/property/birthName> ""Ayo Makun""@en . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?person ?film WHERE {
  # Find Ayo Makun born in 1971
  ?person dbo:birthYear ""1971""^^xsd:gYear ;
          rdfs:label ""Ayo Makun""@en .

  # Find Lepacious Bose's claim-to-fame film
  ?lepa dbo:profession dbr:Actor ;
        dbo:film ?film .
  
  # Check if Ayo Makun acted in that film
  ?film dbo:actor ?person .
}
```",4,5,5,2,3,2,3,28,0,0,1,0,0.0,0
192,16,val,"Give me the child of the child of Stephen V of Hungary and spouse of the spouse, that is a royalty, of Charles Martel of Anjou.",SELECT ?result WHERE { ?v2 <http://dbpedia.org/ontology/spouse> ?result . ?v3 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Stephen_V_of_Hungary> . ?v2 <http://dbpedia.org/ontology/spouse> <http://dbpedia.org/resource/Charles_Martel_of_Anjou> . ?result <http://dbpedia.org/ontology/parent> ?v3 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?grandchild ?spouseOfSpouse WHERE {
  # Find Stephen V of Hungary's children
  ?stephenV a dbo:Monarch ;
            foaf:name ""Stephen V of Hungary""@en ;
            dbo:child ?child .

  # Find the child of that child (Stephen V's grandchild)
  ?child dbo:child ?grandchild .

  # Find Charles Martel of Anjou's spouse
  ?charlesMartel a dbo:Monarch ;
                 foaf:name ""Charles Martel of Anjou""@en ;
                 dbo:spouse ?spouse .

  # Find the spouse of that spouse
  ?spouse dbo:spouse ?spouseOfSpouse .

  # Ensure both are royalty
  ?grandchild a dbo:Monarch .
  ?spouseOfSpouse a dbo:Monarch .

  # Match the grandchild with the spouse of Charles Martel's spouse
  FILTER(?grandchild = ?spouseOfSpouse)
}
```",4,5,5,2,2,3,2,20,0,0,1,0,0.0,0
456,41,val,Give me the spouse of the actor of Pacific Drive and professional in the alter ego of The Shadow and band of Alan Doyle.,SELECT ?result WHERE { <http://dbpedia.org/resource/The_Shadow> <http://dbpedia.org/property/alterEgo> ?v4 . <http://dbpedia.org/resource/Alan_Doyle> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v2 <http://dbpedia.org/ontology/spouse> ?result . ?result <http://dbpedia.org/property/occupation> ?v4 . <http://dbpedia.org/resource/Pacific_Drive> <http://dbpedia.org/property/starring> ?v2 . },"```sparql
# Step 1: Find the actor of ""Pacific Drive""
SELECT ?actor WHERE {
  ?movie dcterms:title ""Pacific Drive""@en .
  ?movie dbo:starring ?actor .
}

# Assuming we find an actor, let's say their DBpedia resource is ?actorResource

# Step 2: Check if this actor has any connection to Lamont Cranston (The Shadow) and Great Big Sea
SELECT ?actor WHERE {
  VALUES (?entity1 ?entity2) { 
    (dbpedia:Lamont_Cranston dbpedia:Great_Big_Sea)
  }
  
  ?actor dbo:profession ?entity1 .
  ?actor dbo:member ?entity2 .
}

# Step 3: Find the spouse of this actor
SELECT ?spouse WHERE {
  ?actor foaf:mbox <mailto:some_actor_email@example.com> . # Replace with actual actor's email or identifier found in step 1
  ?actor dbo:spouse ?spouse .
}
```

Note: The above SPARQL query is a template and assumes that we can identify the actor from ""Pacific Drive"" and their connections to Lamont Cranston and Great Big Sea. You would need to replace placeholders with actual data obtained from intermediate queries.",5,5,6,2,3,3,3,71,0,0,1,0,0.0,0
417,43,val,"Give me the child of the father of the leader, that is a royalty, of Colony of Greenland and spouse of Princess Caroline-Mathilde of Denmark and child of Alexandrine of Mecklenburg-Schwerin.",SELECT ?result WHERE { ?v0 <http://dbpedia.org/property/father> ?v4 . <http://dbpedia.org/resource/Colony_of_Greenland> <http://dbpedia.org/property/leader> ?v0 . ?result <http://dbpedia.org/ontology/parent> <http://dbpedia.org/resource/Alexandrine_of_Mecklenburg-Schwerin> . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?result <http://dbpedia.org/property/father> ?v4 . ?result <http://dbpedia.org/ontology/spouse> <http://dbpedia.org/resource/Princess_Caroline-Mathilde_of_Denmark> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?child WHERE {
  ?leader dbo:spouse dbr:Caroline_Matilda_of_Great_Britain ;
          dbo:father ?father .
  ?father dbo:child ?child .
  ?child dbo:spouse ?spouse .
  FILTER EXISTS { ?spouse rdfs:label ""Princess Caroline-Mathilde of Denmark""@en }
  ?child dbo:mother dbr:Alexandrine_of_Mecklenburg-Schwerin ;
         rdf:type dbo:Monarch .
}
```",5,6,6,3,3,3,3,71,0,0,1,0,0.0,0
456,52,val,"Give me the professional in the alter ego of The Shadow and band of Alan Doyle and spouse of the actor of the movie, that is a work and a television show, with Ross Newton.",SELECT ?result WHERE { ?result <http://dbpedia.org/property/occupation> ?v5 . ?v3 <http://dbpedia.org/property/starring> <http://dbpedia.org/resource/Ross_Newton> . <http://dbpedia.org/resource/The_Shadow> <http://dbpedia.org/property/alterEgo> ?v5 . <http://dbpedia.org/resource/Alan_Doyle> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/TelevisionShow>. ?v3 <http://dbpedia.org/property/starring> ?v2 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?v2 <http://dbpedia.org/ontology/spouse> ?result . },"```sparql
SELECT ?spouse WHERE {
  wd:Q238857 wd:P26 ?spouse .
  FILTER (STRSTARTS(STR(?spouse), ""http://www.wikidata.org/entity/Q""))
}
```

This query retrieves the spouse of Benedict Cumberbatch from Wikidata, where `wd:Q238857` is the entity for Benedict Cumberbatch.",6,8,7,3,3,3,3,71,0,0,1,0,0.0,0
579,16,val,"Give me the person born as the birth name of Jane Percy, Duchess of Northumberland and native of the residence, that is English and a settlement, of Alan Clyne.","SELECT ?result WHERE { ?result <http://dbpedia.org/property/birthName> ?v3 . <http://dbpedia.org/resource/Alan_Clyne> <http://dbpedia.org/property/residence> ?v2 . ?v2 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/United_Kingdom>. <http://dbpedia.org/resource/Jane_Percy,_Duchess_of_Northumberland> <http://dbpedia.org/property/birthName> ?v3 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. ?result <http://dbpedia.org/ontology/birthPlace> ?v2 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?person WHERE {
  # Find Jane Percy's birth name
  dbr:Jane_Percy Duchess_of_Northumberland dbo:birthName ?birthName .

  # Find Alan Clyne's place of origin
  dbr:Alan_Clyne dbo:nativePlace ?placeOfOrigin .
  
  FILTER (lang(?placeOfOrigin) = 'en') # Ensure the place is an English settlement

  # Find a person with the same birth name and place of origin
  ?person dbo:birthName ?birthName ;
          dbo:birthPlace ?placeOfOrigin .
}
```",4,6,5,2,2,3,2,20,0,0,1,0,0.0,0
791,52,val,"Give me the spouse of the spouse, that is a royalty, of the reference to Emperor Takakura and predecessor of the child of Emperor Takakura and father of Emperor Go-Toba.","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/spouse> ?v2 . <http://dbpedia.org/resource/Emperor_Go-Toba> <http://dbpedia.org/property/father> ?result . ?result <http://dbpedia.org/ontology/successor> ?v5 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v3 <http://xmlns.com/foaf/0.1/name> ""Emperor Takakura""@en . ?v2 <http://dbpedia.org/ontology/spouse> ?v3 . ?v5 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Emperor_Takakura> . }","```sparql
SELECT ?spouseOfSpouse WHERE {
  # Step 1: Identify Emperor Takakura
  dbpedia:Emperor_Takakura dbo:predecessor ?emperorAntoku .
  
  # Step 2: Find predecessor of Emperor Antoku (Emperor Tsuchimikado)
  ?emperorAntoku dbo:predecessor ?emperorTsuchimikado .

  # Step 3: Identify spouse of Emperor Tsuchimikado
  ?emperorTsuchimikado dbo:spouse ?spouseOfEmperorTsuchimikado .
  
  # Step 4: Find the spouse's spouse that is royalty
  ?spouseOfEmperorTsuchimikado dbo:spouse ?spouseOfSpouse .
  FILTER EXISTS { ?spouseOfSpouse rdf:type dbpedia:RoyalPerson }
}
```",6,7,7,3,3,3,3,71,0,0,1,0,0.0,0
433,42,val,"Give me the associated musical artist of Bill Evans and associated musical artist of the person born, that is a musical artist and an artist, as Paul Laurence Dunbar Chambers Jr. and professional in the profession of Bob Marley.","SELECT ?result WHERE { <http://dbpedia.org/resource/Bill_Evans> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v2 <http://dbpedia.org/property/birthName> ""Paul Laurence Dunbar Chambers Jr.""@en . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. <http://dbpedia.org/resource/Bob_Marley> <http://dbpedia.org/property/occupation> ?v1 . ?v2 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?result <http://dbpedia.org/property/occupation> ?v1 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. }","```sparql
# Query for Bill Evans' associated musician
SELECT ?associatedArtist WHERE {
  wd:Q1234 wdt:P106 wd:Q33999 . # Bill Evans is a musician
  wd:Q1234 wdt:P527 ?associatedArtist . # Associated musicians (collaborators)
  FILTER EXISTS { ?associatedArtist wdt:P106 wd:Q33999 } # Filter to ensure they are also musicians
}

UNION

# Query for Chick Corea's associated musician
SELECT ?associatedArtist WHERE {
  wd:Q1235 wdt:P31 wd:Q215380 . # Paul Laurence Dunbar Chambers Jr. is a person
  wd:Q1235 wdt:P569 ?birthDate . # Birth date of Paul Laurence Dunbar Chambers Jr.
  FILTER EXISTS { ?person wdt:P31 wd:Q215380 . ?person wdt:P569 ?birthDate } # Ensure the person matches Chick Corea's birth details
  ?person wdt:P106 wd:Q33999 . # Person is a musician (like Bob Marley)
  ?person wdt:P527 ?associatedArtist . # Associated musicians (collaborators)
  FILTER EXISTS { ?associatedArtist wdt:P106 wd:Q33999 } # Filter to ensure they are also musicians
}
```",5,7,6,2,3,3,3,71,0,0,1,0,0.0,0
926,43,val,Give me the successor of the child of the spouse of Şermi Kadın and child of Ahmed III and father of Mahmud II.,SELECT ?result WHERE { <http://dbpedia.org/resource/Ahmed_III> <http://dbpedia.org/ontology/child> ?result . ?v3 <http://dbpedia.org/property/father> ?v1 . ?v3 <http://dbpedia.org/ontology/successor> ?result . ?v1 <http://dbpedia.org/ontology/spouse> <http://dbpedia.org/resource/Şermi_Kadın> . <http://dbpedia.org/resource/Mahmud_II> <http://dbpedia.org/property/father> ?result . },"```sparql
SELECT ?successor WHERE {
  wd:Q1234567 wdt:P26 wd:Q7890123 . # Abdul Hamid I (father of Mahmud II)
  wd:Q7890123 wdt:P57 ?successor .   # Successor of Abdul Hamid I
}
```

Note: Replace `wd:Q1234567` with the actual DBpedia ID for Abdul Hamid I and `wd:Q7890123` with the actual DBpedia ID for Mahmud II. The property `P26` is used to denote spouse, `P57` for successor, and `P25` for child.",5,5,6,3,3,3,3,71,0,0,1,0,0.0,0
158,17,val,"Give me the entity in France and party of the successor, that is a prime minister and an office holder and a politician, of the person deceased, that is an office holder and a politician, on 1945-09-15.","SELECT ?result WHERE { ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?result <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/France> . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v3 <http://dbpedia.org/ontology/party> ?result . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v0 <http://dbpedia.org/ontology/deathDate> ""1945-09-15""^^<http://www.w3.org/2001/XMLSchema#date> . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/PrimeMinister>. ?v0 <http://dbpedia.org/ontology/successor> ?v3 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?successor ?party WHERE {
  # Find Édouard Daladier and his death date
  ?daladier a dbo:Politician ;
            dbo:dateOfBirth ?dobDaladier ;
            dbo:dateOfDeath ""1945-09-15""^^xsd:date ;
            dbp:nationality dbr:Francois ; 
            dbo:officeHolder dbr:Prime_Minister_of_France .

  # Find his successor who is a Prime Minister and politician
  ?successor a dbo:Politician, dbo:OfficeHolder ;
             dbo:officeHolder dbr:Prime_Minister_of_France ;
             dbp:nationality dbr:Francois ;
             dbo:politicalParty ?party .

  FILTER(?successor != ?daladier)
}
```",4,9,5,3,2,3,2,20,0,0,1,0,0.0,0
527,16,val,"Give me the author of the work, that is a work and a book, of Tom Baker and actor of the movie, that is a work and English and a television show, with Bernard Bresslaw.",SELECT ?result WHERE { ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Book>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?v2 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/United_Kingdom>. ?v2 <http://dbpedia.org/property/starring> <http://dbpedia.org/resource/Bernard_Bresslaw> . ?v3 <http://dbpedia.org/property/author> <http://dbpedia.org/resource/Tom_Baker> . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/TelevisionShow>. ?v2 <http://dbpedia.org/property/starring> ?result . ?v3 <http://dbpedia.org/property/author> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?author WHERE {
  # Find works that are both books and associated with Tom Baker
  ?work dbo:bookAuthor ?author .
  ?work dbo:actor ?tomBaker .
  ?tomBaker rdfs:label ""Tom Baker""@en .

  UNION

  # Find television shows in English featuring Bernard Bresslaw
  ?tvShow dbo:starring ?bernardBresslaw .
  ?tvShow dbo:language dbr:English_language .
  ?bernardBresslaw rdfs:label ""Bernard Bresslaw""@en .
  
  FILTER EXISTS { ?work rdfs:label ?title . FILTER regex(?title, ""Doctor Who"", ""i"") }
}
```",4,9,5,2,2,3,2,20,0,0,1,0,0.0,0
465,44,val,"Give me the successor of the child, that is a royalty, of Anne of Brittany and successor of Ercole II d'Este, Duke of Ferrara and spouse of the child, that is a royalty, of Ferdinand I, Holy Roman Emperor.","SELECT ?result WHERE { <http://dbpedia.org/resource/Ferdinand_I,_Holy_Roman_Emperor> <http://dbpedia.org/ontology/child> ?v4 . <http://dbpedia.org/resource/Ercole_II_d'Este,_Duke_of_Ferrara> <http://dbpedia.org/ontology/successor> ?result . <http://dbpedia.org/resource/Anne_of_Brittany> <http://dbpedia.org/ontology/child> ?v2 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v2 <http://dbpedia.org/ontology/successor> ?result . ?result <http://dbpedia.org/ontology/spouse> ?v4 . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. }","```sparql
SELECT ?successor WHERE {
  wd:Q1116 wdt:P26 wd:Q1120 . # Anne of Brittany (wd:Q1116) child (wdt:P26) Claude of France (wd:Q1120)
  wd:Q1120 wdt:P31/wdt:P279* wd:Q5 . # Claude of France (wd:Q1120) is a human/royalty (wdt:P31/wdt:P279*)
  
  wd:Q1116 wdt:P26 wd:Q1138 . # Anne of Brittany (wd:Q1116) child (wdt:P26) Francis I of France (wd:Q1138)
  wd:Q1138 wdt:P31/wdt:P279* wd:Q5 . # Francis I of France (wd:Q1138) is a human/royalty (wdt:P31/wdt:P279*)

  wd:Q1120 wdt:P26 ?spouse1 . # Claude of France (wd:Q1120) spouse (wdt:P26) ?spouse1
  ?spouse1 wdt:P39 wd:Q1116 . # ?spouse1 position (wdt:P39) Anne of Brittany (wd:Q1116)

  wd:Q1138 wdt:P26 ?spouse2 . # Francis I of France (wd:Q1138) spouse (wdt:P26) ?spouse2
  ?spouse2 wdt:P39 wd:Q1116 . # ?spouse2 position (wdt:P39) Anne of Brittany (wd:Q1116)

  wd:Q1120 wdt:P26 wd:Q1139 . # Claude of France (wd:Q1120) child (wdt:P26) Louise of France (wd:Q1139)
  wd:Q1139 wdt:P26 wd:Q1141 . # Louise of France (wd:Q1139) spouse (wdt:P26) Ercole II d'Este, Duke of Ferrara (wd:Q1141)

  wd:Q1141 wdt:P57 ?successorErcole . # Ercole II d'Este, Duke of Ferrara (wd:Q1141) successor (wdt:P57) ?successorErcole
  ?successorErcole rdfs:label ""Alfonso II d'Este""@en . # Alfonso II d'Este

  wd:Q1139 wdt:P26 wd:Q1142 . # Louise of France (wd:Q1139) child (wdt:P26) Anna Caterina Gonzaga (wd:Q1142)
  wd:Q1142 wdt:P26 ?spouseAlfonso . # Anna Caterina Gonzaga (wd:Q1142) spouse (wdt:P26) ?spouseAlfonso
  ?spouseAlfonso rdfs:label ""Alfonso II d'Este""@en . # Alfonso II d'Este

  wd:Q1141 wdt:P57 ?successorCesare . # Ercole II d'Este, Duke of Ferrara (wd:Q1141) successor (wdt:P57) ?successorCesare
  ?successorCesare rdfs:label ""Cesare d'Este""@en . # Cesare d'Este

  FILTER(?successorErcole = wd:Q1123) # Alfonso II d'Este (",5,7,6,2,3,3,3,71,0,0,1,0,0.0,0
47,50,val,"Give me the office of the awardee of Padma Vibhushan and office of the awardee of the award, that is an award, of Mantu Ghosh.",SELECT ?result WHERE { ?v4 <http://dbpedia.org/property/awards> ?v0 . <http://dbpedia.org/resource/Mantu_Ghosh> <http://dbpedia.org/property/awards> ?v0 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Award>. ?v3 <http://dbpedia.org/property/office> ?result . ?v4 <http://dbpedia.org/property/office> ?result . ?v3 <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/Padma_Vibhushan> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?padmaVibhushanOffice ?mantuGhoshAward ?mantuGhoshOffice WHERE {
  # Find offices of Padma Vibhushan awardees
  ?person dbo:award dbr:Padma_Vibhushan ;
          dbo:occupation ?padmaVibhushanOffice .

  # Find Mantu Ghosh's award and his office
  dbr:Mantu_Ghosh dbo:award ?mantuGhoshAward .
  dbr:Mantu_Ghosh dbo:occupation ?mantuGhoshOffice .
}
```",5,6,6,3,2,3,3,71,0,84,1,0.0,0.0,0
124,43,val,"Give me the commander in Mahdist War and military force of the war, that is an event and a military conflict and a societal event, of the awardee of British South Africa Company Medal and military force of Battle of Atbara.",SELECT ?result WHERE { ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?v0 <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/British_South_Africa_Company_Medal> . <http://dbpedia.org/resource/Mahdist_War> <http://dbpedia.org/ontology/commander> ?result . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?result <http://dbpedia.org/ontology/battle> ?v4 . ?v0 <http://dbpedia.org/ontology/battle> ?v4 . ?result <http://dbpedia.org/ontology/battle> <http://dbpedia.org/resource/Battle_of_Atbara> . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?commander ?militaryForce ?awardee WHERE {
  # Mahdist War details
  VALUES (?event) { dbr:Mahdist_War }
  
  # Commander of the Mahdist War
  ?commander dbo:role ?role .
  FILTER(CONTAINS(LCASE(?role), ""mahdi"") || CONTAINS(LCASE(?role), ""commander""))
  ?commander dbo:associatedWith ?event .

  # Military force involved in the Mahdist War
  ?militaryForce dbo:participatedIn ?event .
  
  # Awardee of the British South Africa Company Medal and participant in Battle of Atbara
  ?awardee dbo:receivedAward dbr:British_South_Africa_Company_Medal ;
           dbo:participatedIn dbr:Battle_of_Atbara .

  # Ensure the event is a military conflict and societal event
  ?event rdf:type ?eventType .
  FILTER(?eventType IN (dbr:Military_conflict, dbr:Societal_event))
}
```",5,8,6,3,3,3,3,71,0,0,1,0,0.0,0
933,43,val,Give me the reference to the birth name of the professional in Musician and band of The Ramong Sound and band of Mike Elliott (saxophonist).,SELECT ?result WHERE { <http://dbpedia.org/resource/Mike_Elliott_(saxophonist)> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v1 <http://dbpedia.org/property/birthName> ?v3 . <http://dbpedia.org/resource/The_Ramong_Sound> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?result <http://xmlns.com/foaf/0.1/name> ?v3 . ?v1 <http://dbpedia.org/property/occupation> <http://dbpedia.org/resource/Musician> . },"```sparql
# Query for The Ramong Sound (assuming it refers to ""The Rolling Stones"")
SELECT ?birthName WHERE {
  ?person dbo:bandMember dbr:The_Rolling_Stones .
  ?person foaf:name ?name .
  FILTER regex(?name, ""Ramong"", ""i"") # Assuming a typo or variation
  OPTIONAL { ?person foaf:name ?birthName . }
}

# Query for Mike Elliott (saxophonist)
SELECT ?birthName WHERE {
  ?person dbo:instrument dbr:Saxophone ;
          foaf:name ""Mike Elliott"" .
  OPTIONAL { ?person foaf:name ?birthName . }
}
```",5,5,6,3,3,3,3,71,0,0,1,0,0.0,0
453,7,val,"Give me the religion of the birth place, that is a country, of William Denning and religion of John Henry Newman.",SELECT ?result WHERE { <http://dbpedia.org/resource/John_Henry_Newman> <http://dbpedia.org/ontology/religion> ?result . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. <http://dbpedia.org/resource/William_Denning> <http://dbpedia.org/ontology/birthPlace> ?v2 . ?v2 <http://dbpedia.org/ontology/religion> ?result . },"```sparql
# Query for William Denning's birthplace and the religion of that place if it is a country
SELECT ?birthPlaceLabel ?religionLabel WHERE {
  # Find William Denning's birthplace
  wd:Q123456 wdt:P19 ?birthPlace . 
  SERVICE wikibase:label { bd:serviceParam wikibase:language ""[AUTO_LANGUAGE],en"". }
  
  # Check if the birthplace is a country and get its predominant religion
  OPTIONAL {
    ?birthPlace wdt:P31/wdt:P279* wd:Q6256 .
    ?birthPlace wdt:P464 ?religion .
    SERVICE wikibase:label { bd:serviceParam wikibase:language ""[AUTO_LANGUAGE],en"". }
  }
  
  # Query for John Henry Newman's religion
  OPTIONAL {
    wd:Q654321 wdt:P106 ?occupation .
    FILTER(?occupation = wd:Q36180) . # P106 is occupation, Q36180 is Catholic priest
    ?religionLabel rdfs:label ""Catholic Church""@en .
  }
}
```

Note: Replace `wd:Q123456` with the actual DBpedia entity ID for William Denning and `wd:Q654321` with the entity ID for John Henry Newman. The query assumes that the religion of a country can be found using property P464, which links to religious organizations.",3,4,4,2,2,2,2,9,0,0,1,0,0.0,0
582,47,val,"Give me the player in the father, that is an athlete and a soccer manager and a sports manager, of the child of Kazuaki Nagasawa and reference to the residence of Hirotaka Sugawara.",SELECT ?result WHERE { ?v0 <http://dbpedia.org/property/father> ?v4 . ?result <http://xmlns.com/foaf/0.1/name> ?v2 . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Athlete>. ?v0 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Kazuaki_Nagasawa> . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsManager>. <http://dbpedia.org/resource/Hirotaka_Sugawara> <http://dbpedia.org/property/residence> ?v2 . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerManager>. ?v4 <http://dbpedia.org/ontology/team> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT ?father ?residence WHERE {
  # Find Kazuaki Nagasawa's child
  ?child dbo:parent ?kazuakiNagasawa .
  ?kazuakiNagasawa foaf:name ""Kazuaki Nagasawa"" .

  # Identify the father of that child who is an athlete, soccer manager, and sports manager
  ?father dbo:spouse ?mother .
  ?mother dbo:child ?child .
  
  FILTER EXISTS { ?father dbo:occupation dbr:Athlete . }
  FILTER EXISTS { ?father dbo:occupation dbr:Soccer_Manager . }
  FILTER EXISTS { ?father dbo:occupation dbr:Sports_Manager . }

  # Retrieve the residence of Hirotaka Sugawara
  ?sugawara foaf:name ""Hirotaka Sugawara"" .
  ?sugawara dbo:residenceLocation ?residence .

}
```",5,8,6,3,2,3,3,71,0,0,1,0,0.0,0
445,47,val,"Give me the death place of the awardee of the establishment of 1820-03-10 and entity in the residence, that is a country, of Anna Sharkey.","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/location> ?v2 . ?v4 <http://dbpedia.org/ontology/deathPlace> ?result . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. ?v0 <http://dbpedia.org/ontology/foundingDate> ""1820-03-10""^^<http://www.w3.org/2001/XMLSchema#date> . <http://dbpedia.org/resource/Anna_Sharkey> <http://dbpedia.org/property/residence> ?v2 . ?v4 <http://dbpedia.org/property/awards> ?v0 . }","```sparql
# Step 1: Find an institution or award established on March 10, 1820
SELECT ?award WHERE {
  ?award dbo:foundingDate ""1820-03-10""^^xsd:date .
}

# Assuming we find an award, let's say it is the Nobel Prize (hypothetical example)
# Step 2: Find notable awardees of this award
SELECT DISTINCT ?awardee ?deathPlace WHERE {
  ?awardee dbo:award ?award .
  OPTIONAL { ?awardee dbo:deathPlace ?deathPlace . }
}

# Step 3: Determine Anna Sharkey's country of residence
SELECT DISTINCT ?country WHERE {
  wd:Q1234567 dbo:residenceLocation ?location .
  ?location rdf:type dbo:Country .
  BIND(?location AS ?country)
}
```

Note: Replace `wd:Q1234567` with the actual DBpedia identifier for Anna Sharkey. The above queries are structured to find the necessary information, but specific identifiers and relationships may need adjustment based on available data in DBpedia.",5,6,6,3,2,3,3,71,0,0,1,0,0.0,0
417,55,val,"Give me the spouse of the parent, that is a royalty, of Count Ingolf of Rosenborg and child of the child, that is a royalty, of Frederick Francis III, Grand Duke of Mecklenburg-Schwerin and child of the father of Frederick IX of Denmark.","SELECT ?result WHERE { ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v2 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Frederick_Francis_III,_Grand_Duke_of_Mecklenburg-Schwerin> . ?result <http://dbpedia.org/property/father> ?v5 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?result <http://dbpedia.org/ontology/parent> ?v2 . ?v3 <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Count_Ingolf_of_Rosenborg> . ?result <http://dbpedia.org/ontology/spouse> ?v3 . <http://dbpedia.org/resource/Frederick_IX_of_Denmark> <http://dbpedia.org/property/father> ?v5 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?spouse ?child
WHERE {
    # Count Ingolf of Rosenborg's parent who is royalty
    ?countIngolf dbo:parent ?royalParent .
    FILTER(CONTAINS(LCASE(?royalParent), ""king"") || CONTAINS(LCASE(?royalParent), ""queen"") || CONTAINS(LCASE(?royalParent), ""prince"") || CONTAINS(LCASE(?royalParent), ""princess""))

    # Spouse of Count Ingolf's royal parent
    ?royalParent dbo:spouse ?spouse .

    # Frederick Francis III's child who is royalty
    dbp:FrederickFrancisIIIGrandDukeOfMecklenburgSchwerin dbo:child ?royalChild .
    FILTER(CONTAINS(LCASE(?royalChild), ""king"") || CONTAINS(LCASE(?royalChild), ""queen"") || CONTAINS(LCASE(?royalChild), ""prince"") || CONTAINS(LCASE(?royalChild), ""princess""))

    # Child of Frederick Francis III's royal child
    ?royalChild dbo:child ?grandChild .

    # Frederick IX of Denmark's father
    dbp:FrederickIXOfDenmark dbo:father ?frederickVIII .

    # Ensure the grandChild is also a child of Frederick VIII
    ?grandChild dbo:parent ?frederickVIII .
}
```",6,8,7,2,3,3,3,71,0,0,1,0,0.0,0
417,46,val,"Give me the spouse of the parent, that is a royalty, of the child of Knud, Hereditary Prince of Denmark and child of the father of Frederick IX of Denmark.","SELECT ?result WHERE { ?v2 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Knud,_Hereditary_Prince_of_Denmark> . <http://dbpedia.org/resource/Frederick_IX_of_Denmark> <http://dbpedia.org/property/father> ?v4 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?result <http://dbpedia.org/ontology/spouse> ?v1 . ?v1 <http://dbpedia.org/ontology/child> ?v2 . ?result <http://dbpedia.org/property/father> ?v4 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?spouse WHERE {
  # Step 1: Identify Frederick IX's father
  ?frederickIX dbo:father ?fatherFrederickIX .
  
  FILTER (str(?frederickIX) = ""King_Frederick_IX_of_Denmark"")

  # Step 2: Find Knud, Hereditary Prince of Denmark's child
  ?knudChild dbo:childOf ?knudHereditaryPrince .

  FILTER (str(?knudHereditaryPrince) = ""Knud_Hereditary_Prince_of_Denmark"")
  
  # Step 3: Determine the parent that is royalty
  OPTIONAL { ?knudChild dbo:mother ?royalParent . }
  OPTIONAL { ?knudChild dbo:father ?royalParent . }

  # Check if the parent is a member of royalty
  ?royalParent dbo:memberOf dbr:Royal_House_of_Denmark .

  # Step 4: Identify the spouse of this royal parent
  ?royalParent dbp:spouse ?spouse .
}
```",5,6,6,3,2,3,3,71,0,0,1,0,0.0,0
987,43,val,"Give me the birth place of the actor of the show, that is a film, with Emir Hadžihafizbegović and birth place of Dado Polumenta and entity in Montenegro.",SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Film>. ?v1 <http://dbpedia.org/ontology/starring> <http://dbpedia.org/resource/Emir_Hadžihafizbegović> . ?result <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Montenegro> . ?v3 <http://dbpedia.org/ontology/birthPlace> ?result . ?v1 <http://dbpedia.org/property/starring> ?v3 . <http://dbpedia.org/resource/Dado_Polumenta> <http://dbpedia.org/ontology/birthPlace> ?result . },"```sparql
# Query to find a film featuring Emir Hadžihafizbegović
SELECT ?film WHERE {
  wd:Q123456 dbo:starring wd:Q789012 . # Replace Q123456 with Emir Hadžihafizbegović's DBpedia ID and Q789012 with the film's DBpedia ID
}

# Query to find actors from that film who are also in TV shows
SELECT DISTINCT ?actor WHERE {
  ?film dbo:starring ?actor .
  ?actor dbo:wikiPageWikiLink ?tvShow . # Assuming wikiPageWikiLink can be used to identify TV show involvement
}

# Query to get the birthplace of the actor from the film and TV show
SELECT ?birthPlace WHERE {
  ?actor dbo:birthPlace ?birthPlace .
}

# Query to find the birthplace of Dado Polumenta
SELECT ?birthPlace WHERE {
  wd:Q987654 dbo:birthPlace ?birthPlace . # Replace Q987654 with Dado Polumenta's DBpedia ID
}

# Query to find an entity in Montenegro
SELECT DISTINCT ?entity WHERE {
  ?entity wdt:P17 wd:Q30 ; # P17 is the property for country, and Q30 is the DBpedia ID for Montenegro
           rdfs:label ?label .
  FILTER (lang(?label) = 'en')
}
```",5,6,6,3,3,3,3,71,0,0,1,0,0.0,0
917,42,val,"Give me the parent of the child, that is a royalty, of Kamehameha IV and child of the father of Kamehameha IV and child of Kekūanāoʻa.",SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?result <http://dbpedia.org/ontology/child> ?v1 . ?result <http://dbpedia.org/ontology/parent> <http://dbpedia.org/resource/Kekūanāoʻa> . ?result <http://dbpedia.org/property/father> ?v0 . ?v1 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Kamehameha_IV> . <http://dbpedia.org/resource/Kamehameha_IV> <http://dbpedia.org/property/father> ?v0 . },"```sparql
SELECT ?parent WHERE {
  ?child dbr:Victoria_Kamāmalu .
  ?child dbo:parent ?parent .
  FILTER EXISTS { ?parent rdf:type dbo:Monarch . }
}
```",5,6,6,2,3,3,3,71,0,0,1,0,0.0,0
715,48,val,"Give me the commander in the force, that is a military conflict, of the native of Morocco and leader of the office, that is a government agency and an organisation, of Carlos Franco Iribarnegaray.",SELECT ?result WHERE { ?v3 <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Morocco> . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v2 <http://dbpedia.org/ontology/commander> ?result . ?v1 <http://dbpedia.org/ontology/leader> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/GovernmentAgency>. <http://dbpedia.org/resource/Carlos_Franco_Iribarnegaray> <http://dbpedia.org/property/office> ?v1 . ?v2 <http://dbpedia.org/ontology/commander> ?v3 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?commander WHERE {
  # Find Carlos Franco Iribarnegaray and his office
  ?carlos a dbo:Person ;
          foaf:name ""Carlos Franco Iribarnegaray"" ;
          dbo:office ?office .
  
  ?office a dbo:GovernmentAgency, dbo:Organization .

  # Find a Moroccan native involved in a military conflict
  ?moroccan a dbo:Person ;
            dbo:nationality dbr:Morocco ;
            dbo:militaryConflict ?conflict .

  # Identify the commander of that military conflict
  ?conflict dbo:commander ?commander .
}
```",5,8,6,3,2,3,3,71,0,0,1,0,0.0,0
47,48,val,"Give me the office of the awardee of Padma Vibhushan and office of the administration of the commander, that is a politician, in Operation Green Hunt.",SELECT ?result WHERE { ?v1 <http://dbpedia.org/property/office> ?result . ?v1 <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/Padma_Vibhushan> . <http://dbpedia.org/resource/Operation_Green_Hunt> <http://dbpedia.org/ontology/commander> ?v3 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v2 <http://dbpedia.org/property/office> ?result . ?v2 <http://dbpedia.org/property/governor> ?v3 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?awardeeOffice ?commanderOffice WHERE {
  # Find the office of a Padma Vibhushan awardee
  ?person dbo:awardReceived dbr:Padma_Vibhushan .
  ?person dbo:office ?awardeeOffice .

  # Find the office of a politician who was a commander in Operation Green Hunt
  ?commander dbo:occupation dbr:Politician ;
             dbo:participatedIn dbr:Operation_Green_Hunt ;
             dbo:role ""Commander"" .
  ?commander dbo:office ?commanderOffice .
}
```",5,6,6,3,2,3,3,71,0,0,22,0,0.0,0
791,54,val,"Give me the predecessor of the child of the child, that is an office holder and a royalty, of Emperor Go-Shirakawa and spouse of the spouse, that is a royalty, of Emperor Takakura and father of Emperor Go-Toba.",SELECT ?result WHERE { <http://dbpedia.org/resource/Emperor_Go-Toba> <http://dbpedia.org/property/father> ?result . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?result <http://dbpedia.org/ontology/successor> ?v5 . ?v5 <http://dbpedia.org/property/father> ?v0 . ?v3 <http://dbpedia.org/ontology/spouse> <http://dbpedia.org/resource/Emperor_Takakura> . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?result <http://dbpedia.org/ontology/spouse> ?v3 . ?v0 <http://dbpedia.org/ontology/parent> <http://dbpedia.org/resource/Emperor_Go-Shirakawa> . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. },"```sparql
# Step 1: Find Emperor Go-Shirakawa's child
SELECT ?child WHERE {
    wd:Q123456 wdt:P31/wdt:P279* wd:Q43210; # Emperor Go-Shirakawa has a child
    wdt:P40 ?child.
}

# Step 2: Find the grandchild of Emperor Go-Shirakawa
SELECT ?grandchild WHERE {
    ?child wdt:P40 ?grandchild. # Child of Go-Shirakawa's child
}

# Step 3: Find predecessor who is an office holder and royalty
SELECT ?predecessor WHERE {
    ?grandchild wdt:P106 wd:Q43210; # Grandchild is a royalty
                 wdt:P39 ?office. # Holds an office
    ?predecessor wdt:P1367 ?office; # Predecessor holds the same office
                 wdt:P31/wdt:P279* wd:Q43210. # Predecessor is also royalty
}

# Step 4: Find Emperor Takakura's spouse who is royalty
SELECT ?spouse WHERE {
    wd:Q654321 wdt:P26 ?spouse; # Emperor Takakura has a spouse
                wdt:P31/wdt:P279* wd:Q43210. # Spouse is royalty
}

# Step 5: Find the father of Emperor Go-Toba
SELECT ?father WHERE {
    wd:Q987654 wdt:P22 ?father. # Emperor Go-Toba's father
}

# Final step: Combine to find common predecessor
SELECT DISTINCT ?predecessor WHERE {
    { 
        SELECT ?grandchild WHERE {
            ?child wdt:P40 ?grandchild.
            ?child wdt:P40 wd:Q123456. # Child of Go-Shirakawa
        }
        
        ?grandchild wdt:P106 wd:Q43210; # Grandchild is royalty
                    wdt:P39 ?office.
        ?predecessor wdt:P1367 ?office;
                     wdt:P31/wdt:P279* wd:Q43210. # Predecessor is royalty and office holder
    }
    
    {
        SELECT ?father WHERE {
            wd:Q987654 wdt:P22 ?father. # Father of Go-Toba
        }
        
        ?predecessor = ?father.
    }
}
```",6,9,7,3,3,3,3,71,0,0,1,0,0.0,0
917,53,val,"Give me the child of Kekūanāoʻa and child of the father of Kamehameha IV and parent of the child, that is a royalty, of the mayor of Hawaiian Kingdom.",SELECT ?result WHERE { ?result <http://dbpedia.org/property/father> ?v0 . <http://dbpedia.org/resource/Hawaiian_Kingdom> <http://dbpedia.org/property/leader> ?v3 . <http://dbpedia.org/resource/Kamehameha_IV> <http://dbpedia.org/property/father> ?v0 . ?result <http://dbpedia.org/ontology/parent> <http://dbpedia.org/resource/Kekūanāoʻa> . ?result <http://dbpedia.org/ontology/child> ?v1 . ?v1 <http://dbpedia.org/property/father> ?v3 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?child WHERE {
  # Kekūanāoʻa's child
  VALUES (?kekuanaoaChild) { 
    dbr:Bernice_Pauahi_Bishop 
  }

  # Father of Kamehameha IV (Kamehameha I)
  VALUES (?kamehamehaIVFather) {
    dbr/Kamehameha_I
  }

  # Child of Kamehameha I
  ?childOfKamehamehaI dbo:father ?kamehamehaIVFather .
  
  # Mayor of Hawaiian Kingdom (considering Lunalilo)
  VALUES (?mayor) {
    dbr/Lunalilo_of_the_Hawaiian_Islands
  }

  # Child of the mayor
  ?childOfMayor dbo:parent ?mayor .

  # Parent of the child of the mayor
  ?parentOfChildOfMayor dbo:child ?childOfMayor .

  # Check if Bernice Pauahi Bishop fits the criteria
  FILTER (?child = ?kekuanaoaChild && ?child = ?parentOfChildOfMayor)
}
```",6,7,7,3,3,3,3,71,0,0,2,0,0.0,0
274,23,val,"Give me the associated musical artist of the actor, that is a musical artist, of Imagine the Sound and band member of the person born, that is a musical artist, as John Birks Gillespie.","SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . <http://dbpedia.org/resource/Imagine_the_Sound> <http://dbpedia.org/property/starring> ?v1 . ?result <http://dbpedia.org/ontology/associatedMusicalArtist> ?v2 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?v2 <http://dbpedia.org/property/birthName> ""John Birks Gillespie""@en . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?actorArtist WHERE {
  # Identify John Birks Gillespie (Dizzy Gillespie)
  dbr:Dizzy_Gillespie a dbo:Musician ;
                      foaf:name ""John Birks Gillespie"" .

  # Find bands Dizzy Gillespie was part of
  ?band dbo:member dbr:Dizzy_Gillespie .

  # Identify Imagine the Sound and its associated actor who is also a musical artist
  ?soundArtist dbo:associatedBand ?band ;
               foaf:name ""Imagine the Sound"" .
  
  ?actorArtist dbo:associatedBand ?band ;
               a dbo:Musician, dbo:Actor ;
               foaf:name ?name .

  FILTER(?name != ""John Birks Gillespie"")
}
```",4,6,5,2,2,2,3,28,0,0,4,0,0.0,0
236,15,val,"Give me the party member of the administration, that is an organisation, of the person decedent, that is a politician and an office holder, at Quincy, Massachusetts and party member of Democratic-Republican Party.","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/party> ?v1 . ?v0 <http://dbpedia.org/ontology/deathPlace> <http://dbpedia.org/resource/Quincy,_Massachusetts> . ?result <http://dbpedia.org/ontology/party> <http://dbpedia.org/resource/Democratic-Republican_Party> . ?v1 <http://dbpedia.org/property/leader> ?v0 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?person ?administrationPartyMember WHERE {
  ?person a dbo:Politician ;
          dbo:officeHolder true ;
          dbo:birthPlace dbr:Quincy,_Massachusetts ;
          dbo:politicalAffiliation dbr:Democratic-Republican_Party .

  OPTIONAL { 
    ?person dbo:memberOf ?party .
    ?party dbo:organizationType dbp:PoliticalParty .
    ?administration ?partyMember .
    ?partyMember a dbo:Organization ;
                 dbo:memberOf ?party .
    BIND(?partyMember AS ?administrationPartyMember)
  }
}
```",4,7,5,3,2,3,2,20,0,0,18,0,0.0,0
382,17,val,"Give me the birthplace of Björn Joppe and landmark at elevation of the award of the reference, that is a college coach and a coach, to Harry Combes.","SELECT ?result WHERE { ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Coach>. <http://dbpedia.org/resource/Björn_Joppe> <http://dbpedia.org/ontology/birthPlace> ?result . ?v0 <http://xmlns.com/foaf/0.1/name> ""Harry Combes""@en . ?result <http://dbpedia.org/ontology/elevation> ?v3 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/CollegeCoach>. ?v0 <http://dbpedia.org/property/awards> ?v3 . }","```sparql
# Query for Björn Joppe's birthplace
SELECT ?birthPlace WHERE {
  dbpedia:Joppe_Bj%C3%B6rn dbo:birthPlace ?birthPlace .
}

UNION

# Query to find Harry Combes' award and corresponding landmark by elevation
{
  # Assuming the award is a numerical value, we need to identify it first
  SELECT ?award WHERE {
    dbpedia:Combes_Harry dbo:awardReceived ?award .
  }
  
  # Find a landmark with an elevation matching the award's number
  SELECT ?landmark WHERE {
    ?landmark dbo:elevation ?elevation .
    FILTER(?elevation = ?award)
  }
}
```",4,6,5,3,2,3,2,20,0,0,1,0,0.0,0
865,49,val,"Give me the father of the child of the father of Abul Maal Abdul Muhith and native of the residence, that is a country, of Ram Jaipal Singh Yadav.",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/birthPlace> ?v0 . ?v2 <http://dbpedia.org/property/father> ?result . <http://dbpedia.org/resource/Abul_Maal_Abdul_Muhith> <http://dbpedia.org/property/father> ?v4 . <http://dbpedia.org/resource/Ram_Jaipal_Singh_Yadav> <http://dbpedia.org/property/residence> ?v0 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. ?v2 <http://dbpedia.org/property/father> ?v4 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?father ?nativeCountryPerson WHERE {
  # Step 1: Find Abul Maal Abdul Muhith's father
  dbr:Abul_Maal_Abdul_Muhith dbo:father ?father .

  # Step 2 & 3: The father of the child (Abul Maal Abdul Muhith) is his own father
  BIND(?father AS ?childFather)

  # Step 4: Find Ram Jaipal Singh Yadav's native country
  dbr:Ram_Jaipal_Singh_Yadav dbo:nativePlace ?nativeCountry .

  # Step 5: Find a person who is both the father and a native of that country
  ?nativeCountryPerson dbo:nativePlace ?nativeCountry .
  FILTER(?childFather = ?nativeCountryPerson)
}
```",5,6,6,3,2,3,3,71,0,0,1,0,0.0,0
965,49,val,"Give me the spouse of the spouse of Princess Victoria of Hesse and by Rhine and parent of the person born, that is a noble, as the birth name of George Mountbatten, 2nd Marquess of Milford Haven.","SELECT ?result WHERE { <http://dbpedia.org/resource/George_Mountbatten,_2nd_Marquess_of_Milford_Haven> <http://dbpedia.org/property/birthName> ?v4 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Noble>. ?v0 <http://dbpedia.org/property/birthName> ?v4 . <http://dbpedia.org/resource/Princess_Victoria_of_Hesse_and_by_Rhine> <http://dbpedia.org/ontology/spouse> ?v2 . ?result <http://dbpedia.org/ontology/spouse> ?v2 . ?v0 <http://dbpedia.org/ontology/parent> ?result . }","```sparql
SELECT ?spouse WHERE {
  wd:Q1234567 wdt:P26 ?spouse .
}
```

Explanation:
- `wd:Q1234567` is a placeholder for the DBpedia resource ID of Princess Victoria of Hesse and by Rhine.
- `wdt:P26` is the property for ""spouse"" in Wikidata/DBpedia.

To execute this query, you would need to replace `wd:Q1234567` with the actual resource ID for Princess Victoria of Hesse and by Rhine. Then, follow through the chain as described above to find Lord Louis Mountbatten's spouse.",5,6,6,3,2,3,3,71,0,0,1,0,0.0,0
124,44,val,"Give me the military force of the force, that is a societal event and a military conflict, of Herbert Kitchener, 1st Earl Kitchener and military force of the war, that is an event and a military conflict and a societal event, of Frank Rhodes (British Army officer) and commander in Mahdist War.","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/battle> ?v4 . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?result <http://dbpedia.org/ontology/battle> ?v2 . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. <http://dbpedia.org/resource/Frank_Rhodes_(British_Army_officer)> <http://dbpedia.org/ontology/battle> ?v4 . <http://dbpedia.org/resource/Mahdist_War> <http://dbpedia.org/ontology/commander> ?result . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v2 <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Herbert_Kitchener,_1st_Earl_Kitchener> . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?forceKitchener ?forceRhodes WHERE {
  # Herbert Kitchener's military force in a societal event and military conflict
  OPTIONAL { 
    dbr:Herbert_Kitchener dbo:militaryConflict ?conflictKitchener .
    ?conflictKitchener dbo:participatingMilitaryUnit ?forceKitchener .
  }

  # Frank Rhodes' military force in an event, military conflict, and societal event
  OPTIONAL {
    dbr:Frank_Rhodes dbo:militaryConflict ?conflictRhodes .
    ?conflictRhodes dbo:participatingMilitaryUnit ?forceRhodes .
  }
  
  FILTER(?forceKitchener = ?forceRhodes)
}
```",5,10,6,2,3,3,3,71,0,0,3,0,0.0,0
892,48,val,"Give me the entity in the administration, that is Italian and a region and a settlement and an administrative region, of Democratic Party (Italy) and entity in the profession of the true self of Enrico Crolla.","SELECT ?result WHERE { ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. ?v3 <http://dbpedia.org/property/occupation> ?v1 . ?v3 <http://xmlns.com/foaf/0.1/givenName> ""Enrico Crolla""@en . ?v0 <http://dbpedia.org/property/leaderParty> <http://dbpedia.org/resource/Democratic_Party_(Italy)> . ?result <http://dbpedia.org/ontology/province> ?v0 . ?result <http://dbpedia.org/ontology/country> ?v1 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/AdministrativeRegion>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Region>. ?v0 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Italy>. }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT DISTINCT ?region ?profession WHERE {
  # Part 1: Find the region in Italy that is a settlement and administrative region associated with Democratic Party
  ?region dbo:country dbr:Italy ;
          rdf:type/(dbo:Region|dbo:Settlement) ;
          dbo:administrativeRegion true ;
          dbp:politicalParty dbr:Democratic_Party_(Italy) .
  
  # Part 2: Find the profession of Enrico Crolla
  ?enricoCrolla a dbo:Person ;
                foaf:name ""Enrico Crolla""@it ;
                dbo:occupation ?profession .

}
```",5,9,6,3,2,3,3,71,0,0,587,0,0.0,0
273,16,val,Give me the spouse of the child of Giovanni Agnelli and parent of the alumnus of University of Turin.,SELECT ?result WHERE { <http://dbpedia.org/resource/Giovanni_Agnelli> <http://dbpedia.org/ontology/child> ?v2 . ?v3 <http://dbpedia.org/ontology/parent> ?result . ?v3 <http://dbpedia.org/ontology/almaMater> <http://dbpedia.org/resource/University_of_Turin> . ?result <http://dbpedia.org/ontology/spouse> ?v2 . },"```sparql
SELECT ?spouse WHERE {
  ?giovanni dbo:spouse ?edoardo .
  ?giovanni foaf:name ""Giovanni Agnelli""@en .
  ?child dbo:parent ?giovanni ;
         dbo:parent ?edoardo .
  ?child dbo:spouse ?spouse .
  ?alumnus dbp:almaMater dbr:University_of_Turin .
  ?spouse foaf:name ?nameSpouse .
  FILTER(?nameSpouse = ""Susanna Agnelli""@en) .
}
```",4,4,5,2,2,3,2,20,0,0,1,0,0.0,0
216,21,val,Give me the administration of the designer of Woolfe: The Red Hood Diaries and party of Campbell Newman and office of Tim Nicholls.,SELECT ?result WHERE { <http://dbpedia.org/resource/Campbell_Newman> <http://dbpedia.org/ontology/party> ?result . <http://dbpedia.org/resource/Tim_Nicholls> <http://dbpedia.org/property/office> ?result . <http://dbpedia.org/resource/Woolfe:_The_Red_Hood_Diaries> <http://dbpedia.org/property/designer> ?v0 . ?result <http://dbpedia.org/property/leader> ?v0 . },"```sparql
# Query for Gameloft (company behind Woolfe: The Red Hood Diaries)
SELECT ?gameloftDescription WHERE {
  wd:Q169878 dbp:description ?gameloftDescription .
} LIMIT 1

# Query for Campbell Newman's administration role
SELECT ?newmanRole WHERE {
  wd:Q2109788 dbo:officeHeld ?newmanOffice .
  ?newmanOffice dbo:positionTitle ?newmanRole .
} LIMIT 1

# Query for Tim Nicholls' office or position
SELECT ?nichollsPosition WHERE {
  wd:Q1055986 dbo:officeHeld ?nichollsOffice .
  ?nichollsOffice dbo:positionTitle ?nichollsPosition .
} LIMIT 1
```",4,4,5,2,3,2,3,28,0,0,1,0,0.0,0
445,55,val,"Give me the death place of the awardee of Royal Astronomical Society and entity in the residence, that is a country, of Anna Sharkey and entity in the award of George H. Cameron.",SELECT ?result WHERE { <http://dbpedia.org/resource/George_H._Cameron> <http://dbpedia.org/property/awards> ?v2 . ?v5 <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/Royal_Astronomical_Society> . ?v5 <http://dbpedia.org/ontology/deathPlace> ?result . ?result <http://dbpedia.org/ontology/location> ?v3 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. ?result <http://dbpedia.org/ontology/country> ?v2 . <http://dbpedia.org/resource/Anna_Sharkey> <http://dbpedia.org/property/residence> ?v3 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?deathPlace ?residenceCountry ?awardEntity WHERE {
  # Find an awardee of the Royal Astronomical Society and their death place
  ?person dbo:awardedBy dbr:Royal_Astronomical_Society .
  OPTIONAL { ?person dbo:deathPlace ?deathPlace . }

  # Find Anna Sharkey's residence country
  dbr:Anna_Sharkey dbo:residenceCountry ?residenceCountry .

  # Find an entity in George H. Cameron's award
  ?georgeHawkins dbo:award ?award .
  ?award dbo:entity ?awardEntity .
  
  FILTER(?person != ?georgeHawkins) # Ensure we are not querying the same person for both parts
}
```",6,7,7,2,3,3,3,71,0,0,1,0,0.0,0
124,53,val,"Give me the military force of Battle of Tamai and commander in the war, that is a societal event and a military conflict, of the reference, that is Australian and an organisation and a military unit, to 'A' Battery, Royal Australian Artillery and military force of the force, that is a societal event and a military conflict, of Herbert Kitchener, 1st Earl Kitchener.","SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Herbert_Kitchener,_1st_Earl_Kitchener> . ?v3 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Australia>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v3 <http://xmlns.com/foaf/0.1/name> ""'A' Battery, Royal Australian Artillery""@en . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryUnit>. ?result <http://dbpedia.org/ontology/battle> ?v1 . ?v3 <http://dbpedia.org/ontology/battle> ?v2 . ?result <http://dbpedia.org/ontology/battle> <http://dbpedia.org/resource/Battle_of_Tamai> . ?v2 <http://dbpedia.org/ontology/commander> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?battle ?force ?commander WHERE {
  # Identify the Battle of Tamai
  VALUES ?battle { dbr:Battle_of_Tamai }

  # Find military forces involved in the battle
  ?battle dbo:militaryConflicts ?conflict .
  ?conflict dbo:participatingMilitaryUnit ?unit .

  # Filter for A Battery, Royal Australian Artillery
  FILTER(?unit = dbr:A_Battery,_Royal_Australian_Artillery)

  # Find the larger military force that includes A Battery
  ?unit dbo:partOf ?force .

  # Identify commanders involved in the conflict
  OPTIONAL {
    ?conflict dbo:commander ?commander .
    FILTER(CONTAINS(LCASE(?commander), ""herbert kitchener""))
  }

  # Ensure the event is a societal and military conflict
  ?conflict rdf:type ?type .
  FILTER((?type = dbo:MilitaryConflict) && (?type = dbo:SocietalEvent))
}
```",6,13,7,3,3,3,3,71,0,0,1,0,0.0,0
433,54,val,"Give me the associated musical artist of the associated musical artist, that is an artist and a musical artist, of the associated musical artist, that is a musical artist and an artist, of Ornette Coleman and professional in Musician and associated musical artist of the person born, that is a musical artist and an artist, as Paul Laurence Dunbar Chambers Jr..","SELECT ?result WHERE { ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. ?v5 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. ?v3 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . <http://dbpedia.org/resource/Ornette_Coleman> <http://dbpedia.org/ontology/associatedMusicalArtist> ?v0 . ?v0 <http://dbpedia.org/ontology/associatedMusicalArtist> ?v5 . ?v3 <http://dbpedia.org/property/birthName> ""Paul Laurence Dunbar Chambers Jr.""@en . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?result <http://dbpedia.org/property/occupation> ""Musician""@en . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. }","```sparql
# Step 1: Find associated musical artist of Paul Chambers
SELECT ?chambersAssociatedArtist WHERE {
    ?paulChambers a dbo:Person ;
                  foaf:name ""Paul Laurence Dunbar Chambers Jr.""@en ;
                  dbo:associatedMusicalArtist ?artist .
    FILTER EXISTS { ?artist a dbo:Musician . }
}

# Step 2: Find associated musical artist of the result from step 1
SELECT ?secondLevelChambersAssociatedArtist WHERE {
    ?chambersAssociatedArtist a dbo:Person ;
                              foaf:name ?name ;
                              dbo:associatedMusicalArtist ?secondLevelChambersAssociatedArtist .
    FILTER EXISTS { ?secondLevelChambersAssociatedArtist a dbo:Musician . }
}

# Step 3: Find associated musical artist of Ornette Coleman
SELECT ?colemanAssociatedArtist WHERE {
    ?ornetteColeman a dbo:Person ;
                    foaf:name ""Ornette Coleman""@en ;
                    dbo:associatedMusicalArtist ?artist .
    FILTER EXISTS { ?artist a dbo:Musician . }
}

# Step 4: Find associated musical artist of the result from step 3
SELECT ?secondLevelColemanAssociatedArtist WHERE {
    ?colemanAssociatedArtist a dbo:Person ;
                             foaf:name ?name ;
                             dbo:associatedMusicalArtist ?secondLevelColemanAssociatedArtist .
    FILTER EXISTS { ?secondLevelColemanAssociatedArtist a dbo:Musician . }
}

# Step 5: Find commonality between results from step 2 and step 4
SELECT DISTINCT ?commonArtist WHERE {
    VALUES (?artist1) { (<result_from_step_2>) }
    VALUES (?artist2) { (<result_from_step_4>) }
    FILTER (?artist1 = ?artist2)
}
```

Note: Replace `<result_from_step_2>` and `<result_from_step_4>` with the actual URIs obtained from executing steps 2 and 4.",6,12,7,3,3,3,3,71,0,0,3,0,0.0,0
216,50,val,"Give me the player in the coach, that is a soccer player and a sports manager and a soccer manager, of the player, that is an organisation and a sports club and a soccer club, in Džemal Berberović and team of the person born, that is a sports manager and a soccer manager and a soccer player, on 1983-12-20.","SELECT ?result WHERE { ?v0 <http://dbpedia.org/ontology/coach> ?v4 . ?result <http://dbpedia.org/ontology/coach> ?v3 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerClub>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerPlayer>. ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsManager>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsClub>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerManager>. ?v3 <http://dbpedia.org/ontology/birthDate> ""1983-12-20""^^<http://www.w3.org/2001/XMLSchema#date> . ?v4 <http://dbpedia.org/ontology/team> ?result . <http://dbpedia.org/resource/Džemal_Berberović> <http://dbpedia.org/ontology/team> ?v0 . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerManager>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsManager>. ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerPlayer>. }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?coach WHERE {
  # Step 1: Identify Džemal Berberović and his team
  dbr:Džemal_Berberović dbo:birthDate ""1983-12-20""^^xsd:date ;
                        dbo:memberOfTeam ?team .

  # Ensure the team is an organization, sports club, and soccer club
  ?team a dbo:SoccerClub ;
        a dbo:SportsOrganization ;
        a dbo:Organisation .

  # Step 2: Find the coach of that team with specified roles
  ?coach dbo:memberOfTeam ?team ;
         a dbo:SoccerPlayer ;
         a dbo:SportsManager ;
         a dbo:SoccerManager .
}
```",5,14,6,3,2,3,3,71,0,0,1,0,0.0,0
495,17,val,Give me the child of Frederick I of Württemberg and father of the child of the parent of Princess Pauline of Württemberg (1810–1856).,SELECT ?result WHERE { ?v3 <http://dbpedia.org/ontology/parent> ?v0 . ?v3 <http://dbpedia.org/property/father> ?result . <http://dbpedia.org/resource/Princess_Pauline_of_Württemberg_(1810–1856)> <http://dbpedia.org/ontology/parent> ?v0 . ?result <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Frederick_I_of_Württemberg> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?person WHERE {
  # Princess Pauline of Württemberg
  VALUES ?princess { dbr:Princess_Pauline_of_W%C3%BCrttemberg }
  
  # Her parent (William I, King of Württemberg)
  ?princess dbo:parent ?williamI .
  
  # Frederick I of Württemberg
  VALUES ?frederickI { dbr:Friedrich_I_of_W%C3%BCrttemberg }
  
  # Children of William I (including Frederick I and Pauline's parent)
  ?williamI dbo:child ?childOfWilliam .
  
  # Check if Frederick I is a child of William I
  FILTER(?childOfWilliam = ?frederickI)
  
  # Children of Frederick I
  ?frederickI dbo:child ?childOfFrederick .
  
  # Find the parent of Pauline's sibling (another child of William I)
  ?childOfFrederick dbo:parent ?siblingParent .
  
  # Ensure this parent is also a child of William I
  VALUES ?siblingParent { ?frederickI }
}
```",4,4,5,3,2,3,2,20,0,0,1,0,0.0,0
507,47,val,"Give me the director of the movie, that is a movie and a work, with the person born on 1919-06-17 and spouse of the person born as Anne Voase Coates.","SELECT ?result WHERE { ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Film>. ?v4 <http://dbpedia.org/property/starring> ?v0 . ?v2 <http://dbpedia.org/property/birthName> ""Anne Voase Coates""@en . ?v4 <http://dbpedia.org/ontology/director> ?result . ?result <http://dbpedia.org/ontology/spouse> ?v2 . ?v0 <http://dbpedia.org/ontology/birthDate> ""1919-06-17""^^<http://www.w3.org/2001/XMLSchema#date> . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?director WHERE {
  ?person dbo:birthday ""1919-06-17""^^xsd:date ;
          dbo:spouse dbr:Anne_Voase_Coates .
  
  ?movie dbo:director ?person ;
         a dbo:Film, dbo:Work .

  BIND(?person AS ?director)
}
```",5,7,6,3,2,3,3,71,0,0,1,0,0.0,0
433,47,val,"Give me the associated musical artist of the person born, that is a musical artist and an artist, as Paul Laurence Dunbar Chambers Jr. and associated musical artist of the associated musical artist, that is an artist and a musical artist, of the associated musical artist, that is a musical artist and an artist, of Ornette Coleman.","SELECT ?result WHERE { ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?v0 <http://dbpedia.org/ontology/associatedMusicalArtist> ?v4 . ?v2 <http://dbpedia.org/property/birthName> ""Paul Laurence Dunbar Chambers Jr.""@en . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. ?v4 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . <http://dbpedia.org/resource/Ornette_Coleman> <http://dbpedia.org/ontology/associatedMusicalArtist> ?v0 . ?v2 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. }","```sparql
# Step 1: Find Paul Chambers' associated musical artist (Miles Davis)
SELECT ?milesDavis WHERE {
    wd:Q12345 wdt:P106 wd:Q33999 . # Paul Chambers is a musician
    wd:Q12345 wdt:P170 ?milesDavis . # Associated with Miles Davis
    ?milesDavis wdt:P106 wd:Q33999 . # Miles Davis is a musician
}

# Step 2: Find Ornette Coleman's associated musical artist (John Coltrane)
SELECT ?johnColtrane WHERE {
    wd:Q12346 wdt:P106 wd:Q33999 . # Ornette Coleman is a musician
    wd:Q12346 wdt:P170 ?johnColtrane . # Associated with John Coltrane
    ?johnColtrane wdt:P106 wd:Q33999 . # John Coltrane is a musician
}

# Step 3: Find the associated musical artist of John Coltrane (Sonny Rollins)
SELECT ?sonnyRollins WHERE {
    ?johnColtrane wdt:P170 ?sonnyRollins . # Associated with Sonny Rollins
    ?sonnyRollins wdt:P106 wd:Q33999 . # Sonny Rollins is a musician
}
```

Note: Replace `wd:Q12345` and `wd:Q12346` with the actual DBpedia identifiers for Paul Chambers and Ornette Coleman, respectively. The property `P170` represents ""associated with,"" and `P106` represents ""occupation.""",5,11,6,3,2,3,3,71,0,0,10,0,0.0,0
417,41,val,"Give me the child of Alexandrine of Mecklenburg-Schwerin and spouse of the parent, that is a royalty, of Count Ingolf of Rosenborg and child of the father of Frederick IX of Denmark.",SELECT ?result WHERE { <http://dbpedia.org/resource/Frederick_IX_of_Denmark> <http://dbpedia.org/property/father> ?v4 . ?result <http://dbpedia.org/ontology/parent> <http://dbpedia.org/resource/Alexandrine_of_Mecklenburg-Schwerin> . ?result <http://dbpedia.org/property/father> ?v4 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v2 <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Count_Ingolf_of_Rosenborg> . ?result <http://dbpedia.org/ontology/spouse> ?v2 . },"```sparql
SELECT ?child WHERE {
  # Alexandrine of Mecklenburg-Schwerin's child who is royalty and spouse of Count Ingolf's parent
  ?alexChild dbo:parent dbr:Aleksandra_Mecklenburg-Schwerin ;
             rdf:type dbo:RoyalFamilyMember ;
             dbo:spouse ?countParent .

  # Parent of Count Ingolf of Rosenborg (Frederick IX)
  ?countParent rdfs:label ""Frederik_IX_of_Denmark""@en .

  # Father of Frederick IX of Denmark
  ?father dbr:Christian_X_of_Denmark ;
          dbo:child ?alexChild .

  FILTER(?alexChild = dbr:Margrethe_II_of_Denmark)
}
```",5,6,6,2,3,3,3,71,0,0,1,0,0.0,0
102,15,val,"Give me the manager of the player in the member, that is a soccer player, of England women's national football team and native of Dewsbury.",SELECT ?result WHERE { ?v0 <http://dbpedia.org/ontology/team> <http://dbpedia.org/resource/England_women's_national_football_team> . ?v1 <http://dbpedia.org/ontology/manager> ?result . ?result <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Dewsbury> . ?v0 <http://dbpedia.org/ontology/team> ?v1 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerPlayer>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?manager WHERE {
  ?player dbo:nationalTeam dbr:England_women's_national_football_team ;
          dbo:birthPlace dbr:Dewsbury .
  
  ?player dbo:currentClub ?club .
  
  ?club dbo:manager ?manager .
}
```",4,5,5,3,2,3,2,20,0,0,1,0,0.0,0
130,16,val,"Give me the figure known as the film, that is a soccer club and an organisation, of Candice Storey Lee and entity in the administration, that is American, of .","SELECT ?result WHERE { ?v3 <http://dbpedia.org/property/governor> """"@en . ?result <http://dbpedia.org/ontology/state> ?v3 . ?v3 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/United_States>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerClub>. ?result <http://dbpedia.org/property/nickname> ?v2 . ?v2 <http://dbpedia.org/ontology/director> <http://dbpedia.org/resource/Candice_Storey_Lee> . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?film WHERE {
  ?film dbo:director dbr:Candice_Storey_Lee .
  ?film dbo:genre dbr:Soccer_film .
  OPTIONAL { ?film dbo:subject dbr:American_politician . }
}
```",4,7,5,2,2,3,2,20,0,0,1,0,0.0,0
212,7,val,"Give me the birthplace of KODA (singer) and birthplace of the professional, that is a musical artist and an artist, in Singer, rapper, CEO, Facilities and Project Manager.","SELECT ?result WHERE { ?v0 <http://dbpedia.org/property/occupation> ""Singer, rapper, CEO, Facilities and Project Manager""@en . <http://dbpedia.org/resource/KODA_(singer)> <http://dbpedia.org/ontology/birthPlace> ?result . ?v0 <http://dbpedia.org/ontology/birthPlace> ?result . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. }","```sparql
# Query for the birthplace of Koda (Kumi Koda)
SELECT ?birthPlace WHERE {
  wd:Q123456 wdt:P19 ?birthPlace .
}

# Query for the birthplace of Kanye West
SELECT ?birthPlace WHERE {
  wd:Q222222 wdt:P19 ?birthPlace .
}
```

Note: The placeholders `wd:Q123456` and `wd:Q222222` should be replaced with the actual DBpedia QIDs for Kumi Koda and Kanye West, respectively. You can find these IDs by searching their names on DBpedia or using a SPARQL endpoint to query for them.",3,5,4,2,2,2,2,9,0,0,1,0,0.0,0
18,22,val,Give me the professional in the award of Ana María Sánchez de Ríos and parent of the professional in Actress.,"SELECT ?result WHERE { ?v0 <http://dbpedia.org/property/occupation> ""Actress""@en . ?result <http://dbpedia.org/property/occupation> ?v2 . <http://dbpedia.org/resource/Ana_María_Sánchez_de_Ríos> <http://dbpedia.org/property/awards> ?v2 . ?result <http://dbpedia.org/ontology/child> ?v0 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?professional WHERE {
  # Find the award associated with Ana María Sánchez de Ríos
  dbr:Ana_María_Sánchez_de_Ríos dbo:awardReceived ?award .

  # Find professionals who have received this award
  ?person dbo:awardReceived ?award .
  
  # Find parents of individuals in the profession of actress
  ?child a dbo:Actress ;
        dbo:parent ?parent .
  
  # Check if any professional is both an awardee and a parent of an actress
  ?person rdfs:label ?professionalLabel FILTER (lang(?professionalLabel) = ""en"") .
  BIND(IRI(CONCAT(""http://dbpedia.org/resource/"", REPLACE(LCASE(REPLACE(STR(?parent), "" "", ""_"")), ""/"", """"))) AS ?parentResource)
  
  # Ensure the professional is linked to the parent resource
  OPTIONAL { ?person dbo:spouseOrPartner ?parentResource . }
  FILTER EXISTS { ?person = ?parentResource }
}
```",4,4,5,2,2,2,3,28,0,0,200,0,0.0,0
18,23,val,"Give me the professional in the award of Ana María Sánchez de Ríos and alumnus of the figure known, that is an educational institution, as Saints.","SELECT ?result WHERE { ?v0 <http://dbpedia.org/property/nickname> ""Saints""@en . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/EducationalInstitution>. <http://dbpedia.org/resource/Ana_María_Sánchez_de_Ríos> <http://dbpedia.org/property/awards> ?v3 . ?result <http://dbpedia.org/ontology/almaMater> ?v0 . ?result <http://dbpedia.org/property/occupation> ?v3 . }","```sparql
# Step 1: Find the award associated with Ana María Sánchez de Ríos
SELECT ?award WHERE {
    wd:Q1234567 dbo:receivedAward ?award .
}

# Step 2: Identify educational institutions known as ""Saints""
SELECT ?institution WHERE {
    ?institution rdfs:label ?label .
    FILTER(CONTAINS(LCASE(?label), ""saints"") && CONTAINS(LCASE(?label), ""educational institution""))
}

# Step 3: Find alumni of these institutions who received the same award
SELECT DISTINCT ?alumnus WHERE {
    # Replace ?award with the actual URI obtained from step 1
    ?alumnus dbo:receivedAward ?award .
    
    # Ensure they are an alumnus of one of the institutions found in step 2
    ?alumnus dbo:almaMater ?institution .
}
```

Note: Replace `wd:Q1234567` with the actual DBpedia URI for Ana María Sánchez de Ríos, and replace `?award` in Step 3 with the actual award URI obtained from Step 1.",4,5,5,2,2,2,3,28,0,0,1,0,0.0,0
465,54,val,"Give me the spouse of the child, that is a royalty, of the parent of Elizabeth of Austria (1526–1545) and successor of the child of Alfonso I d'Este and successor of Renée of France.",SELECT ?result WHERE { ?v3 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Alfonso_I_d'Este> . ?result <http://dbpedia.org/ontology/spouse> ?v5 . ?v0 <http://dbpedia.org/ontology/child> ?v5 . ?v0 <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Elizabeth_of_Austria_(1526–1545)> . <http://dbpedia.org/resource/Renée_of_France> <http://dbpedia.org/ontology/successor> ?result . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v3 <http://dbpedia.org/ontology/successor> ?result . },"```sparql
SELECT ?spouse WHERE {
  # Step 1: Identify Elizabeth of Austria's parent
  ?elizabeth dbo:childOf ?parent .
  FILTER(STR(?elizabeth) = ""Elizabeth_of_Austria_(1526–1545)"")

  # Step 2: Find the child who is royalty from this parent
  ?royaltyChild dbo:childOf ?parent ;
                a dbo:Monarch .

  # Step 3: Identify Alfonso I d'Este's child and successor
  ?alfonsoChild dbo:childOf ?alfonsoI .
  FILTER(STR(?alfonsoI) = ""Alfonso_I_d'_Este"")
  
  ?successorAlfonso dbo:successor ?alfonsoChild .

  # Step 4: Identify Renée of France's successor
  ?successorRenée dbo:successor ?renée .
  FILTER(STR(?renée) = ""Renée_of_France"")

  # Step 5: Find commonality (person who is both successors)
  VALUES ?commonSuccessor { ?successorAlfonso ?successorRenée }
  
  # Ensure the person is a successor to both
  FILTER(?commonSuccessor = ?successorAlfonso && ?commonSuccessor = ?successorRenée)

  # Step 6: Find spouse of the royalty child
  ?spouse dbo:spouse ?royaltyChild .
}
```",6,7,7,3,3,3,3,71,0,0,1,0,0.0,0
93,15,val,"Give me the death place of John Weir Troy and capital of the headquarter, that is a region and a settlement, of the headquarter of Clam Cove Pictograph Site.",SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. <http://dbpedia.org/resource/Clam_Cove_Pictograph_Site> <http://dbpedia.org/ontology/location> ?v0 . ?v0 <http://dbpedia.org/ontology/location> ?v1 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Region>. <http://dbpedia.org/resource/John_Weir_Troy> <http://dbpedia.org/ontology/deathPlace> ?result . ?v1 <http://dbpedia.org/ontology/capital> ?result . },"```sparql
# Query for the death place of John Weir Troy
SELECT ?deathPlace WHERE {
  ?person dbo:birthName ""John Weir Troy"" .
  ?person dbo:deathPlace ?deathPlace .
}

UNION

# Assuming Clam Cove Pictograph Site is a notable landmark, we need to find its administrative region and settlement.
# This part might require some assumptions or additional context about what ""headquarter"" refers to.

SELECT ?regionCapital WHERE {
  # Find the region associated with Clam Cove Pictograph Site
  ?site dbo:location ?settlement .
  ?settlement dbo:partOfRegion ?region .

  # Get the capital of that region
  ?region dbo:capital ?regionCapital .
}
```",4,6,5,3,2,3,2,20,0,0,1,0,0.0,0
216,23,val,Give me the administration of the designer of Woolfe: The Red Hood Diaries and office of the mayor of Ros Bates.,SELECT ?result WHERE { <http://dbpedia.org/resource/Woolfe:_The_Red_Hood_Diaries> <http://dbpedia.org/property/designer> ?v1 . <http://dbpedia.org/resource/Ros_Bates> <http://dbpedia.org/property/leader> ?v2 . ?v2 <http://dbpedia.org/property/office> ?result . ?result <http://dbpedia.org/property/leader> ?v1 . },"```sparql
# Query to find the designer of Woolfe: The Red Hood Diaries and their administration
SELECT ?designer ?administration WHERE {
  ?game dcterms:title ""Woolfe: The Red Hood Diaries""@en .
  ?game dbo:creator ?designer .
  OPTIONAL { ?designer dbo:office ?administration . }
}

# Query to find the office of Ros Bates as mayor
SELECT ?mayorOffice WHERE {
  ?person foaf:name ""Ros Bates""@en ;
          dbo:occupation dbo:Mayor .
  ?person dbo:office ?mayorOffice .
}
```",4,4,5,2,2,2,3,28,0,0,1,0,0.0,0
443,22,val,"Give me the landmark at elevation of the award of William Shepherd and birthplace of the person born, that is a musical artist and an artist, on 1949-11-20.","SELECT ?result WHERE { ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. ?v3 <http://dbpedia.org/ontology/birthPlace> ?result . ?v3 <http://dbpedia.org/ontology/birthDate> ""1949-11-20""^^<http://www.w3.org/2001/XMLSchema#date> . ?result <http://dbpedia.org/ontology/elevation> ?v2 . <http://dbpedia.org/resource/William_Shepherd> <http://dbpedia.org/property/awards> ?v2 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. }","```sparql
# Step 1: Find William Shepherd's Award
SELECT ?award WHERE {
  ?person foaf:name ""William Shepherd""@en .
  ?person dbo:award ?award .
}

# Assuming we found an award, let's say it is associated with a landmark
# Step 2: Find the Landmark and its Elevation
SELECT ?landmark ?elevation WHERE {
  ?award dbo:location ?landmark .
  ?landmark dbo:elevationAboveSeaLevel ?elevation .
}

# Step 3: Find a person born on 1949-11-20 who is both a musical artist and an artist
SELECT ?person ?birthPlace WHERE {
  ?person dbo:birthDate ""1949-11-20""^^xsd:date ;
          rdf:type dbo:MusicalArtist, dbo:Artist .
  ?person dbo:birthPlace ?birthPlace .
}

# Step 4: Match the elevation of the landmark with the birthplace
SELECT ?landmark WHERE {
  ?award dbo:location ?landmark .
  ?landmark dbo:elevationAboveSeaLevel ?elevation .

  ?person dbo:birthDate ""1949-11-20""^^xsd:date ;
          rdf:type dbo:MusicalArtist, dbo:Artist .
  ?person dbo:birthPlace ?birthPlace .

  FILTER(?elevation = ?birthPlace)
}
```",4,6,5,2,2,2,3,28,0,0,1,0,0.0,0
456,40,val,"Give me the professional in  and band of Alan Doyle and spouse of the actor of the movie, that is a work and a television show, with Ross Newton.","SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/spouse> ?result . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/TelevisionShow>. ?v2 <http://dbpedia.org/property/starring> ?v1 . ?v2 <http://dbpedia.org/property/starring> <http://dbpedia.org/resource/Ross_Newton> . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. <http://dbpedia.org/resource/Alan_Doyle> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?result <http://dbpedia.org/property/occupation> """"@en . }","```sparql
# Step 1: Get Alan Doyle's band
SELECT ?band WHERE {
  wd:Q1234567 dbo:memberOf ?band .
}

# Step 2: Identify Ross Newton's movie and its adaptations
SELECT ?movie ?work ?tvShow WHERE {
  wd:Q7890123 dbo:actedIn ?movie .
  OPTIONAL { ?movie dbo:adaptationOfWork ?work . }
  OPTIONAL { ?movie dbo:adaptationForTelevision ?tvShow . }
}

# Step 3: Find Dan Stevens' spouse
SELECT ?spouse WHERE {
  wd:Q3456789 dbo:spouse ?spouse .
}

# Step 4: Check for professional connection between the band and Dan Stevens' spouse
SELECT ?connection WHERE {
  ?band dbo:member ?alanDoyle .
  ?alanDoyle foaf:name ""Alan Doyle"" .
  ?spouse dbo:professionalConnection ?connection .
}
```

Note: Replace `wd:Q1234567` with Alan Doyle's DBpedia ID, `wd:Q7890123` with Ross Newton's DBpedia ID, and `wd:Q3456789` with Dan Stevens' DBpedia ID. These IDs need to be looked up in the DBpedia dataset.",5,7,6,3,3,3,3,71,0,0,1,0,0.0,0
417,42,val,"Give me the child of the child, that is a royalty, of Frederick Francis III, Grand Duke of Mecklenburg-Schwerin and child of Christian X of Denmark and spouse of the parent, that is a royalty, of Count Ingolf of Rosenborg.","SELECT ?result WHERE { ?v1 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Frederick_Francis_III,_Grand_Duke_of_Mecklenburg-Schwerin> . ?result <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Christian_X_of_Denmark> . ?result <http://dbpedia.org/ontology/parent> ?v1 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?result <http://dbpedia.org/ontology/spouse> ?v2 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v2 <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Count_Ingolf_of_Rosenborg> . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?grandchild WHERE {
  # Frederick Francis III's children
  VALUES ?frederickChild { 
    dbr:Adolphus_Frederick_VI,_Grand_Duke_of_Mecklenburg-Schwerin 
    dbr:Cecilie_of_Mecklenburg-Schwerin 
  }
  
  # Frederick Francis III's grandchildren
  ?frederickChild dbo:child ?grandchild .
  
  # Check if the grandchild is a royalty
  ?grandchild dbo:occupation dbr:Monarch .

  # Christian X of Denmark's child and spouse
  dbr:Alexandrine_of_Denmark dbo:spouse ?princeConnaught ;
                             dbo:parent dbr:Christian_X_of_Denmark .
  
  # Count Ingolf's parent who is a royalty
  dbr:Ingeborg_of_Rosenborg dbo:child dbr:Ingolf_of_Rosenborg ;
                           dbo:parent ?royalParent .

  # Find the intersection of grandchild and royal parent
  ?grandchild rdfs:label ?name .
  FILTER(CONTAINS(LCASE(?name), ""alexandrine"") || CONTAINS(LCASE(?name), ""ingeborg""))
}
```",5,7,6,2,3,3,3,71,0,0,1,0,0.0,0
773,48,val,"Give me the parent of the child, that is a royalty, of Louis the German and spouse of the father of the parent of Bernard (son of Charles the Fat).",SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/parent> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v1 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Louis_the_German> . ?v3 <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Bernard_(son_of_Charles_the_Fat)> . ?v2 <http://dbpedia.org/ontology/spouse> ?result . ?v3 <http://dbpedia.org/property/father> ?v2 . },"```sparql
SELECT ?parent WHERE {
  wd:Q1114 wdt:P22 ?spouse . # Charles the Fat (wd:Q1114) and his spouse
  ?spouse wdt:P26 wd:Q1114 . # Spouse of Charles the Fat

  wd:Q1114 wdt:P31/wdt:P279* wd:Q5 . # Charles the Fat is a human/royalty
  ?child wdt:P25 wd:Q1114 . # Child of Charles the Fat
  FILTER EXISTS { ?child wdt:P31/wdt:P279* wd:Q5 } . # Child is royalty

  wd:Q1114 wdt:P22 ?parentSpouse . # Spouse of Charles the Fat (Richardis of Worms)
  
  wd:Q1114 wdt:P25 ?father . # Father of Charles the Fat
  ?father wdt:P26 ?grandParentSpouse . # Spouse of Louis the German

  SERVICE wikibase:label { bd:serviceParam wikibase:language ""[AUTO_LANGUAGE],en"". }
}
```",5,6,6,3,2,3,3,71,0,0,1,0,0.0,0
129,23,val,Give me the associated musical artist of the person born as Tahj Malik Chandler and professional in the mayor of 1999 West Dunbartonshire Council election.,"SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?result <http://dbpedia.org/property/occupation> ?v2 . <http://dbpedia.org/resource/1999_West_Dunbartonshire_Council_election> <http://dbpedia.org/property/leader> ?v2 . ?v1 <http://dbpedia.org/property/birthName> ""Tahj Malik Chandler""@en . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?artist WHERE {
  ?person a dbo:MusicalArtist ;
          foaf:name ""The Game"" .
  OPTIONAL { ?person dbo:birthName ""Tahj Malik Chandler"" . }
}
```",4,4,5,2,2,2,3,28,0,0,7,0,0.0,0
507,45,val,Give me the director of Entertaining Mr Sloane (film) and professional in the profession of the person born on 1966-02-18 and spouse of Anne V. Coates.,"SELECT ?result WHERE { ?v0 <http://dbpedia.org/property/occupation> ?v1 . <http://dbpedia.org/resource/Entertaining_Mr_Sloane_(film)> <http://dbpedia.org/ontology/director> ?result . ?result <http://dbpedia.org/ontology/spouse> <http://dbpedia.org/resource/Anne_V._Coates> . ?result <http://dbpedia.org/property/occupation> ?v1 . ?v0 <http://dbpedia.org/ontology/birthDate> ""1966-02-18""^^<http://www.w3.org/2001/XMLSchema#date> . }","```sparql
# Query to get the director of ""Entertaining Mr Sloane""
SELECT ?director WHERE {
  ?film dcterms:title ""Entertaining Mr Sloane""@en .
  ?film dbo:director ?director .
}

# Query to find the person born on 1966-02-18 and spouse of Anne V. Coates
SELECT ?person ?profession WHERE {
  ?person dbo:birthday ""1966-02-18""^^xsd:date ;
          foaf:surname ?surname .
  ?coates foaf:name ""Anne V. Coates""@en ;
          foaf:spouse ?person .
  OPTIONAL { ?person dbo:occupation ?profession }
}

# Query to get the profession of the director
SELECT ?directorProfession WHERE {
  ?film dcterms:title ""Entertaining Mr Sloane""@en .
  ?film dbo:director ?director .
  ?director dbo:occupation ?directorProfession .
}
```",5,5,6,3,3,3,3,71,0,0,1,0,0.0,0
573,55,val,"Give me the parent of the author, that is a politician and an office holder, of Exchequer Standards and person decedent at the residence, that is a settlement, of William J. Phelan and person decedent at the administration, that is a region, of Charlie Baker.","SELECT ?result WHERE { ?v2 <http://dbpedia.org/ontology/parent> ?result . <http://dbpedia.org/resource/William_J._Phelan> <http://dbpedia.org/property/residence> ?v5 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?result <http://dbpedia.org/ontology/deathPlace> ?v5 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Region>. ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. ?result <http://dbpedia.org/ontology/deathPlace> ?v3 . ?v3 <http://dbpedia.org/property/governor> ""Charlie Baker""@en . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. <http://dbpedia.org/resource/Exchequer_Standards> <http://dbpedia.org/property/author> ?v2 . }","```sparql
# Step 1: Identify the author of ""Exchequer Standards""
SELECT ?author WHERE {
  ?work dcterms:title ""Exchequer Standards""@en .
  ?work dbo:author ?author .
}

# Step 2: Find the parent of this author
SELECT ?parent WHERE {
  ?author foaf:parent ?parent .
}

# Step 3: Check if the parent is a politician and an office holder
SELECT ?parent WHERE {
  ?parent rdf:type dbo:Politician ;
          dbo:officeHolder ?office .
}

# Step 4: Identify William J. Phelan's residence (place of death)
SELECT ?residence WHERE {
  dbo:William_J._Phelan dbo:deathPlace ?residence .
}

# Step 5: Find the person who died at this residence
SELECT DISTINCT ?person WHERE {
  ?person dbo:deathPlace ?residence .
  FILTER(?person != dbo:William_J._Phelan)
}

# Step 6: Identify Charlie Baker's administration region
SELECT ?region WHERE {
  dbo:Charlie_Baker dbo:officeHolder ?administration .
  ?administration dbo:administrativeRegion ?region .
}

# Step 7: Find the person who died in this administration region
SELECT DISTINCT ?person WHERE {
  ?person dbo:deathPlace ?location .
  ?location dbo:administrativeRegion ?region .
  FILTER(?person != dbo:Charlie_Baker)
}
```",6,10,7,2,3,3,3,71,0,0,2,0,0.0,0
582,54,val,"Give me the figure known as --10-19 and player in the father, that is an athlete and a soccer manager and a sports manager, of the child of Kazuaki Nagasawa and reference to the residence of Hirotaka Sugawara.","SELECT ?result WHERE { ?v5 <http://dbpedia.org/ontology/team> ?result . ?result <http://dbpedia.org/property/nickname> ""--10-19""^^<http://www.w3.org/2001/XMLSchema#gMonthDay> . ?result <http://xmlns.com/foaf/0.1/name> ?v3 . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Athlete>. <http://dbpedia.org/resource/Hirotaka_Sugawara> <http://dbpedia.org/property/residence> ?v3 . ?v0 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Kazuaki_Nagasawa> . ?v0 <http://dbpedia.org/property/father> ?v5 . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsManager>. ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerManager>. }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?child ?role ?residence WHERE {
  # Identify Kazuaki Nagasawa and his child
  ?parent a dbo:Person ;
          foaf:name ""Kazuaki Nagasawa""@en .
  ?child dbo:parent ?parent .

  # Determine the roles of this child
  OPTIONAL { ?child dbo:occupation ?role . FILTER(CONTAINS(LCASE(?role), ""athlete"") || CONTAINS(LCASE(?role), ""soccer manager"") || CONTAINS(LCASE(?role), ""sports manager"")) }

  # Find the residence of Hirotaka Sugawara
  ?sugawara a dbo:Person ;
            foaf:name ""Hirotaka Sugawara""@en .
  ?sugawara dbo:residenceLocation ?location .
  ?location rdfs:label ?residence .

  FILTER(?child != ?sugawara) # Ensure we are not conflating the two individuals
}
```",6,9,7,3,3,3,3,71,0,0,1,0,0.0,0
965,43,val,"Give me the parent of George Mountbatten, 2nd Marquess of Milford Haven and spouse of Prince Louis of Battenberg and parent of the child, that is a royalty, of the person born, that is a politician, on 1854-05-24.","SELECT ?result WHERE { ?v3 <http://dbpedia.org/property/father> ?v1 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?result <http://dbpedia.org/ontology/spouse> <http://dbpedia.org/resource/Prince_Louis_of_Battenberg> . ?v3 <http://dbpedia.org/ontology/parent> ?result . <http://dbpedia.org/resource/George_Mountbatten,_2nd_Marquess_of_Milford_Haven> <http://dbpedia.org/ontology/parent> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v1 <http://dbpedia.org/ontology/birthDate> ""1854-05-24""^^<http://www.w3.org/2001/XMLSchema#date> . }","```sparql
SELECT ?parent WHERE {
  # Step 1: Identify George Mountbatten and his spouse
  ?georgeMountbatten dbo:title ""George Mountbatten, 2nd Marquess of Milford Haven""@en .
  ?georgeMountbatten foaf:surname ""Mountbatten""@en .
  ?spouse rdf:type dbo:Spouse ;
          dbo:spouse ?georgeMountbatten ;
          foaf:name ""Prince Louis of Battenberg""@en .

  # Step 2: Identify their children and filter for royalty
  ?child dbo:parent ?georgeMountbatten ;
         dbo:parent ?spouse .
  ?child rdf:type dbo:RoyalFamilyMember .

  # Step 3: Find the politician born on 1854-05-24 who is a parent to this royal child
  ?politician dbo:birthday ""1854-05-24""^^xsd:date ;
              dbo:parentOf ?child .
  
  # Step 4: Retrieve the parent of this politician
  ?parent dbo:parent ?politician .
}
```",5,7,6,3,3,3,3,71,0,0,1,0,0.0,0
417,48,val,"Give me the spouse of the parent, that is a royalty, of the child of Knud, Hereditary Prince of Denmark and child of the child, that is a royalty, of Frederick Francis III, Grand Duke of Mecklenburg-Schwerin.","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/parent> ?v1 . ?v3 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Knud,_Hereditary_Prince_of_Denmark> . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v2 <http://dbpedia.org/ontology/child> ?v3 . ?result <http://dbpedia.org/ontology/spouse> ?v2 . ?v1 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Frederick_Francis_III,_Grand_Duke_of_Mecklenburg-Schwerin> . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. }","```sparql
# Step 1: Find Knud's child who is a royalty
SELECT ?child WHERE {
    wd:Q1234567 dbo:spouse ?parent . # Knud, Hereditary Prince of Denmark
    ?parent dbo:child ?child .
    ?child rdf:type wd:Q5 . # Human (assuming royalty is a subclass or related)
}

# Step 2: Find the spouse of that child's parent who is a royalty
SELECT ?spouse WHERE {
    ?child dbo:parent ?royalParent .
    ?royalParent dbo:spouse ?spouse .
    ?royalParent rdf:type wd:Q5 . # Human (assuming royalty is a subclass or related)
}

# Step 3: Find Frederick Francis III's grandchild who is a royalty
SELECT ?grandChild WHERE {
    wd:Q6543210 dbo:child ?parent . # Frederick Francis III, Grand Duke of Mecklenburg-Schwerin
    ?parent dbo:child ?grandChild .
    ?grandChild rdf:type wd:Q5 . # Human (assuming royalty is a subclass or related)
}

# Step 4: Find the spouse of that grandchild's parent who is a royalty
SELECT ?spouse WHERE {
    ?grandChild dbo:parent ?royalParent .
    ?royalParent dbo:spouse ?spouse .
    ?royalParent rdf:type wd:Q5 . # Human (assuming royalty is a subclass or related)
}
```

Note: Replace `wd:Q1234567` and `wd:Q6543210` with the actual DBpedia identifiers for Knud, Hereditary Prince of Denmark, and Frederick Francis III, Grand Duke of Mecklenburg-Schwerin respectively. The query assumes that royalty is a subclass or related to human (`rdf:type wd:Q5`). Adjustments may be needed based on the exact schema used in DBpedia.",5,7,6,3,2,3,3,71,0,0,1,0,0.0,0
433,43,val,"Give me the associated musical artist of the associated musical artist, that is an artist and a musical artist, of the associated musical artist, that is a musical artist and an artist, of Ornette Coleman and associated musical artist of Paul Chambers and professional in Musician.","SELECT ?result WHERE { ?v4 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?v0 <http://dbpedia.org/ontology/associatedMusicalArtist> ?v4 . <http://dbpedia.org/resource/Ornette_Coleman> <http://dbpedia.org/ontology/associatedMusicalArtist> ?v0 . ?result <http://dbpedia.org/property/occupation> ""Musician""@en . <http://dbpedia.org/resource/Paul_Chambers> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. }","```sparql
# Step 1: Find Ornette Coleman's associated musical artist who is both an artist and a musical artist
SELECT ?artist1 WHERE {
    wd:Q12345 wdt:P106 wd:Q33999 . # Ornette Coleman is a musician
    wd:Q12345 wdt:P175 ?artist1 .   # Associated with artist1
    ?artist1 wdt:P106 wd:Q33999 .   # Artist1 is a musician
    ?artist1 wdt:P101 wd:Q1234567 . # Artist1 is also an artist (replace Q1234567 with the appropriate property for ""artist"")
}

# Step 2: Find the associated musical artist of that person who is both a musical artist and an artist
SELECT ?artist2 WHERE {
    ?artist1 wdt:P175 ?artist2 .   # Associated with artist2
    ?artist2 wdt:P106 wd:Q33999 .  # Artist2 is a musician
    ?artist2 wdt:P101 wd:Q1234567 .# Artist2 is also an artist (replace Q1234567 with the appropriate property for ""artist"")
}

# Step 3: Find Paul Chambers' associated musical artist who is both a musical artist and an artist
SELECT ?chambersArtist WHERE {
    wd:Q12345 wdt:P106 wd:Q33999 . # Paul Chambers is a musician
    wd:Q12345 wdt:P175 ?chambersArtist . # Associated with chambersArtist
    ?chambersArtist wdt:P106 wd:Q33999 . # chambersArtist is a musician
    ?chambersArtist wdt:P101 wd:Q1234567 .# chambersArtist is also an artist (replace Q1234567 with the appropriate property for ""artist"")
}

# Step 4: Find the professional in Musician of that person
SELECT ?finalArtist WHERE {
    ?chambersArtist wdt:P175 ?finalArtist . # Associated with finalArtist
    ?finalArtist wdt:P106 wd:Q33999 .       # finalArtist is a musician
}
```

Note: Replace `wd:Q12345` and `wd:Q1234567` with the correct DBpedia identifiers for Ornette Coleman, Paul Chambers, and the property for ""artist"" respectively. The queries assume that `P175` is used for associated artists/musicians.",5,9,6,3,3,3,3,71,0,0,3,0,0.0,0
976,50,val,"Give me the office of the mayor, that is a politician and an office holder and Turkish, of the reference, that is an organisation and a political party and Turkish, to Millet İttifakı and office of the person born as Mehmet Naci Bostancı.","SELECT ?result WHERE { ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v3 <http://dbpedia.org/ontology/nationality> <http://dbpedia.org/resource/Turkey>. ?v1 <http://xmlns.com/foaf/0.1/name> ""Millet İttifakı""@en . ?v1 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Turkey>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/PoliticalParty>. ?v0 <http://dbpedia.org/property/office> ?result . ?v1 <http://dbpedia.org/property/leader> ?v3 . ?v0 <http://dbpedia.org/property/birthName> ""Mehmet Naci Bostancı""@en . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?v3 <http://dbpedia.org/property/office> ?result . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?mayorOffice ?organization ?bostanciOffice WHERE {
  # Find the mayor associated with Millet İttifakı
  ?mayor dbo:nationality dbr:Turkey ;
         a dbo:Politician, dbo:Mayor ;
         dbp:affiliation dbr:Millet_İttifakı .
  
  # Find the organization that is a political party and Turkish
  ?organization dbo:type dbr:Political_party ;
                dbo:nationality dbr:Turkey ;
                dbp:affiliation dbr:Millet_İttifakı .

  # Find the office of Mehmet Naci Bostancı
  dbr:Mehmet_Naci_Bostancı dbo:office ?bostanciOffice .
  
  # Get the mayor's office
  ?mayor dbp:office ?mayorOffice .
}
```",5,11,6,3,2,3,3,71,0,0,1,0,0.0,0
445,49,val,"Give me the entity in the residence, that is a country, of Anna Sharkey and entity in the award of the commander in Battle of Saint-Mihiel.",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/country> ?v1 . <http://dbpedia.org/resource/Battle_of_Saint-Mihiel> <http://dbpedia.org/ontology/commander> ?v0 . ?v0 <http://dbpedia.org/property/awards> ?v1 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. <http://dbpedia.org/resource/Anna_Sharkey> <http://dbpedia.org/property/residence> ?v2 . ?result <http://dbpedia.org/ontology/location> ?v2 . },"```sparql
# Query for Anna Sharkey's residence country
SELECT ?country WHERE {
  ?person dbo:birthName ""Anna Sharkey"" .
  ?person dbo:residence ?location .
  ?location a dbo:Country .
  BIND(?location AS ?country)
}

UNION

# Query for the commander in the Battle of Saint-Mihiel and their award
SELECT ?award WHERE {
  ?battle dbo:commander ?commander .
  ?battle rdfs:label ""Battle of Saint-Mihiel""@en .
  ?commander dbo:receivedAward ?award .
}
```",5,6,6,3,2,3,3,71,0,0,102,0,0.0,0
791,50,val,"Give me the father of the child, that is a royalty, of Emperor Takakura and predecessor of the child of the child, that is an office holder and a royalty, of Emperor Go-Shirakawa.",SELECT ?result WHERE { ?v3 <http://dbpedia.org/property/father> ?result . ?result <http://dbpedia.org/ontology/successor> ?v4 . ?v3 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Emperor_Takakura> . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v4 <http://dbpedia.org/property/father> ?v0 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v0 <http://dbpedia.org/ontology/parent> <http://dbpedia.org/resource/Emperor_Go-Shirakawa> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?father WHERE {
  # Emperor Takakura's child who became royalty (Emperor Go-Shirakawa)
  dbr:Takakura_of_Japan dbo:child dbr:Go-Shirakawa .

  # Predecessor of Emperor Go-Shirakawa
  dbr:Go-Shirakawa dbo:predecessor ?predecessor .
  
  # Emperor Go-Shirakawa's grandchild who is an office holder and royalty (Taira no Kiyomori)
  ?grandchild dbo:parent dbr:Go-Shirakawa ;
              a dbo:OfficeHolder, dbo:Royalty .

  # Father of Emperor Go-Shirakawa
  dbr:Go-Shirakawa dbo:father ?father .
}
```",5,8,6,3,2,3,3,71,0,0,1,0,0.0,0
417,52,val,"Give me the child of the father of Frederick IX of Denmark and spouse of the parent, that is a royalty, of the child of Knud, Hereditary Prince of Denmark and child of Alexandrine of Mecklenburg-Schwerin.","SELECT ?result WHERE { ?v3 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Knud,_Hereditary_Prince_of_Denmark> . ?v2 <http://dbpedia.org/ontology/child> ?v3 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. <http://dbpedia.org/resource/Frederick_IX_of_Denmark> <http://dbpedia.org/property/father> ?v5 . ?result <http://dbpedia.org/property/father> ?v5 . ?result <http://dbpedia.org/ontology/spouse> ?v2 . ?result <http://dbpedia.org/ontology/parent> <http://dbpedia.org/resource/Alexandrine_of_Mecklenburg-Schwerin> . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?child WHERE {
  # Frederick IX's father
  dbr:Frederick_IX_of_Denmark dbo:father dbr:Christian_X_of_Denmark .
  
  # Christian X and Alexandrine's children
  dbr:Christian_X_of_Denmark dbo:spouse dbr:Alexandrine_of_Mecklenburg-Schwerin ;
                             dbo:child ?child1 .

  # Knud, Hereditary Prince of Denmark's child
  dbr:Knud,_Hereditary_Prince_of_Denmark dbo:child ?knudChild .
  
  # Princess Benedikte as a royalty
  ?knudChild rdfs:label ""Benedikte of Denmark""@en ;
             dbo:spouse ?spouse .

  FILTER EXISTS { ?spouse rdf:type dbo:Monarch . }
}
```",6,7,7,3,3,3,3,71,0,0,1,0,0.0,0
326,16,val,"Give me the person decedent at the award, that is a country, of Adelbert Cronkhite and resident of the birthplace, that is a state and British, of David Jessel.",SELECT ?result WHERE { ?result <http://dbpedia.org/property/residence> ?v2 . ?v2 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/United_Kingdom>. <http://dbpedia.org/resource/Adelbert_Cronkhite> <http://dbpedia.org/property/awards> ?v3 . ?result <http://dbpedia.org/ontology/deathPlace> ?v3 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/AdministrativeRegion>. <http://dbpedia.org/resource/David_Jessel> <http://dbpedia.org/ontology/birthPlace> ?v2 . },"```sparql
# Step 1: Find Adelbert Cronkhite's awards
SELECT ?award WHERE {
    ?person dbo:birthName ""Adelbert Cronkhite""@en .
    ?person dbo:honoraryAward ?award .
}

# Step 2: Check if the award is associated with a country
SELECT DISTINCT ?country WHERE {
    ?award dbo:awardedByCountry ?country .
    FILTER (isLiteral(?country))
}

# Step 3: Find David Jessel's birthplace and ensure it is a state in the UK
SELECT DISTINCT ?birthPlace WHERE {
    ?person dbo:birthName ""David Jessel""@en .
    ?person dbo:birthPlace ?birthPlace .
    ?birthPlace rdf:type dbo:State .
    ?birthPlace dbo:country dbr:United_Kingdom .
}

# Step 4: Find the person who is a resident of David Jessel's birthplace and decedent at the award country
SELECT DISTINCT ?person WHERE {
    # Assuming we have identified ?awardCountry from step 2 and ?birthPlace from step 3
    ?person dbo:residence ?birthPlace .
    ?decedentEvent dbo:eventLocation ?awardCountry .
    ?decedentEvent dbo:decedent ?person .
}
```

Note: The above SPARQL queries are structured to be executed in sequence, with intermediate results used in subsequent steps. Adjustments may be needed based on actual data availability and structure in DBpedia.",4,7,5,2,2,3,2,20,0,0,1,0,0.0,0
456,44,val,"Give me the band of the band, that is a musical artist, of Dean Brody and spouse of Danielle Spencer (Australian actress) and professional in the alter ego of The Shadow.",SELECT ?result WHERE { <http://dbpedia.org/resource/The_Shadow> <http://dbpedia.org/property/alterEgo> ?v4 . <http://dbpedia.org/resource/Dean_Brody> <http://dbpedia.org/ontology/associatedMusicalArtist> ?v2 . ?v2 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . <http://dbpedia.org/resource/Danielle_Spencer_(Australian_actress)> <http://dbpedia.org/ontology/spouse> ?result . ?result <http://dbpedia.org/property/occupation> ?v4 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. },"```sparql
SELECT ?band WHERE {
  ?person foaf:name ""Dean Brody"" .
  ?person dbo:memberOfBand ?band .
  FILTER EXISTS { ?band dbo:genre dbr:Countrys_music } # Assuming High Valley is a country music band
}
```",5,6,6,2,3,3,3,71,0,0,1,0,0.0,0
433,40,val,"Give me the professional in Musician and associated musical artist of Bill Evans and associated musical artist of the person born, that is a musical artist and an artist, as the persona of Paul Chambers.","SELECT ?result WHERE { ?result <http://dbpedia.org/property/occupation> ""Musician""@en . <http://dbpedia.org/resource/Paul_Chambers> <http://xmlns.com/foaf/0.1/givenName> ?v2 . ?v1 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?v1 <http://dbpedia.org/property/birthName> ?v2 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. <http://dbpedia.org/resource/Bill_Evans> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . }","```sparql
# Query for Bill Evans
SELECT ?associatedArtist WHERE {
  wd:Q12345 wdt:P106 wd:Q33999 . # Bill Evans is a Musician
  wd:Q12345 wdt:P175 ?associatedArtist . # Associated musical artists of Bill Evans
}

UNION

# Query for Paul Chambers
SELECT ?person, ?associatedArtist WHERE {
  ?person wdt:P31 wd:Q215380 ; # Person who is a Musical Artist and an Artist
          wdt:P569 ?birthDate ;
          rdfs:label ""Paul Chambers""@en .
  
  OPTIONAL { ?person wdt:P106 wd:Q33999 } . # Check if also a Musician
  
  ?person wdt:P175 ?associatedArtist . # Associated musical artists of Paul Chambers
}
```",5,7,6,3,3,3,3,71,0,0,1,0,0.0,0
5,17,val,"Give me the birthplace of Gerald Regan and entity in the award of the associated musical artist, that is a band, of Rubén Colón Tarrats.",SELECT ?result WHERE { <http://dbpedia.org/resource/Rubén_Colón_Tarrats> <http://dbpedia.org/ontology/associatedMusicalArtist> ?v3 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Band>. ?result <http://dbpedia.org/ontology/country> ?v0 . <http://dbpedia.org/resource/Gerald_Regan> <http://dbpedia.org/ontology/birthPlace> ?result . ?v3 <http://dbpedia.org/property/awards> ?v0 . },"```sparql
# Query for Gerald Regan's birthplace
SELECT ?birthPlace WHERE {
  ?gerry reg:birthPlace ?birthPlace .
  FILTER (str(?gerry) = ""Gerald_Regan"")
}

UNION

# Query for the award entity associated with a band linked to Rubén Colón Tarrats
SELECT DISTINCT ?awardEntity WHERE {
  ?ruben dbo:musicalArtist ?artist .
  FILTER (str(?ruben) = ""Rubén_Colón_Tarrats"") .

  ?artist dbo:associatedBand ?band .
  
  ?band dbo:awardsReceived ?award .
  ?award rdf:type dbpedia-owl:Award .
  
  BIND(?award AS ?awardEntity)
}
```",4,5,5,3,2,3,2,20,0,0,1,0,0.0,0
216,42,val,"Give me the player in the coach of Croatia national under-21 football team and player in Mario Ivanković and team of the person born, that is a sports manager and a soccer manager and a soccer player, on 1983-12-20.","SELECT ?result WHERE { <http://dbpedia.org/resource/Croatia_national_under-21_football_team> <http://dbpedia.org/ontology/coach> ?v2 . ?v2 <http://dbpedia.org/ontology/team> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerManager>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsManager>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerPlayer>. <http://dbpedia.org/resource/Mario_Ivanković> <http://dbpedia.org/ontology/team> ?result . ?v1 <http://dbpedia.org/ontology/birthDate> ""1983-12-20""^^<http://www.w3.org/2001/XMLSchema#date> . ?result <http://dbpedia.org/ontology/coach> ?v1 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?player WHERE {
  # Mario Ivanković as coach of Croatia national under-21 football team
  dbr:Mario_Ivanković dbo:position dbr:Croatia_national_under-21_football_team .
  
  # Players in the team during his tenure
  ?teamMember dbo:memberOfTeam dbr:Croatia_national_under-21_football_team ;
              dbo:coach dbr:Mario_Ivanković .

  # Check if this player was also part of another team coached by Mario Ivanković
  ?player dbp:name ?name .
  FILTER (?teamMember = ?player) .

  # Filter for the person born on December 20, 1983
  ?player dbo:birthDate ""1983-12-20""^^xsd:date ;
          a dbo:SoccerPlayer ;
          a dbo:SportsManager ;
          a dbo:SoccerCoach .
}
```",5,8,6,2,3,3,3,71,0,0,1,0,0.0,0
645,41,val,"Give me the commander in the force of Carlos Asensio Cabanillas and military force of the force, that is an event and a military conflict and a societal event, of Francisco Largo Caballero and leader of Ministry of the Army (Spain).",SELECT ?result WHERE { ?v2 <http://dbpedia.org/ontology/commander> ?result . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. <http://dbpedia.org/resource/Ministry_of_the_Army_(Spain)> <http://dbpedia.org/ontology/leader> ?result . ?v2 <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Carlos_Asensio_Cabanillas> . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?result <http://dbpedia.org/ontology/battle> ?v4 . ?v4 <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Francisco_Largo_Caballero> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?commander ?militaryForce ?event WHERE {
  # Find the military force associated with Carlos Asensio Cabanillas
  ?militaryForce dbo:commander dbr:Carlos_Asensio_Cabanillas .
  
  # Find the commander of that military force
  ?militaryForce dbo:commander ?commander .

  # Identify events related to Francisco Largo Caballero as Minister of Defense
  ?event dbo:leader dbr:Francisco_Largo_Caballero ;
         a dbo:MilitaryConflict, dbo:SocietalEvent .
  
  # Link the military force to an event involving Francisco Largo Caballero
  ?militaryForce dbo:event ?event .
}
```",5,8,6,2,3,3,3,71,0,0,1,0,0.0,0
582,41,val,"Give me the reference to the residence of Hirotaka Sugawara and player in the father, that is an athlete and a soccer manager and a sports manager, of Masami Nagasawa and figure known as --10-19.","SELECT ?result WHERE { ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerManager>. ?result <http://xmlns.com/foaf/0.1/name> ?v2 . <http://dbpedia.org/resource/Hirotaka_Sugawara> <http://dbpedia.org/property/residence> ?v2 . ?v4 <http://dbpedia.org/ontology/team> ?result . ?result <http://dbpedia.org/property/nickname> ""--10-19""^^<http://www.w3.org/2001/XMLSchema#gMonthDay> . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsManager>. <http://dbpedia.org/resource/Masami_Nagasawa> <http://dbpedia.org/property/father> ?v4 . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Athlete>. }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?hirotakaResidence ?fatherName ?figureNickname WHERE {
  # Find Hirotaka Sugawara's residence
  OPTIONAL { 
    ?hirotaka a dbo:Person ;
              foaf:name ""Hirotaka Sugawara"" ;
              dbo:residence ?hirotakaResidence .
  }

  # Find Masami Nagasawa's father who is an athlete, soccer manager, and sports manager
  OPTIONAL {
    ?father a dbo:Person ;
            foaf:name ?fatherName ;
            dbo:spouse dbr:Masami_Nagasawa ;
            (dbo:sportTeamMember|dbo:manager) ?team .
    FILTER EXISTS { ?team a dbo:SoccerClub }
  }

  # Find the figure known as --10-19
  OPTIONAL {
    ?figure a dbo:Person ;
            foaf:name ?figureNickname .
    FILTER regex(?figureNickname, ""--10-19"", ""i"")
  }

  # Attempt to connect these entities if possible
  OPTIONAL { 
    ?hirotakaResidence dbr:location ?connectedEntity .
    ?father dbr:relatedTo ?connectedEntity .
    ?figure dbr:relatedTo ?connectedEntity .
  }
}
```",5,8,6,2,3,3,3,71,0,0,1,0,0.0,0
773,45,val,"Give me the parent of the child, that is a royalty, of the father, that is an office holder and a royalty, of Carloman of Bavaria and parent of Carloman of Bavaria and spouse of Louis the German.",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Carloman_of_Bavaria> . ?v1 <http://dbpedia.org/ontology/parent> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v1 <http://dbpedia.org/property/father> ?v0 . <http://dbpedia.org/resource/Louis_the_German> <http://dbpedia.org/ontology/spouse> ?result . <http://dbpedia.org/resource/Carloman_of_Bavaria> <http://dbpedia.org/property/father> ?v0 . },"```sparql
SELECT ?parent WHERE {
  wd:Q123456 wdt:P22 wd:Q789012 . # Louis the German (father) and spouse of Hemma of Altdorf
  wd:Q789012 wdt:P25 wd:Q345678 . # Hemma of Altdorf is parent of Carloman of Bavaria
  wd:Q123456 wdt:P31/wdt:P279* wd:Q11424 . # Louis the German is royalty and office holder
}
```

Note: The actual DBpedia IDs (e.g., Q123456, Q789012) need to be replaced with the correct identifiers for Louis the German, Hemma of Altdorf, and Carloman of Bavaria.",5,8,6,3,3,3,3,71,0,0,1,0,0.0,0
978,15,val,"Give me the band member of the professional, that is a musical artist and an artist, in the award of Michel Claparède and band member of Chicane (musician).",SELECT ?result WHERE { ?v1 <http://dbpedia.org/property/occupation> ?v0 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. ?result <http://dbpedia.org/ontology/associatedMusicalArtist> ?v1 . <http://dbpedia.org/resource/Michel_Claparède> <http://dbpedia.org/property/awards> ?v0 . ?result <http://dbpedia.org/ontology/associatedMusicalArtist> <http://dbpedia.org/resource/Chicane_(musician)> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?person WHERE {
  ?band dbo:member ?person .
  ?person dbo:occupation dbr/Musical_artist .
  FILTER(CONTAINS(LCASE(?band), ""chicane"")) .

  OPTIONAL { 
    ?person dbo:award dbr/Michel_Claparède_Award .
  }

  OPTIONAL {
    ?person dbo:profession dbr/Artist .
  }
}
```",4,6,5,3,2,3,2,20,0,0,2,0,0.0,0
465,53,val,"Give me the spouse of Archduchess Barbara of Austria and successor of the child, that is a royalty, of Anne of Brittany and successor of the child of the parent of Ercole II d'Este, Duke of Ferrara.","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/spouse> <http://dbpedia.org/resource/Archduchess_Barbara_of_Austria> . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. <http://dbpedia.org/resource/Ercole_II_d'Este,_Duke_of_Ferrara> <http://dbpedia.org/ontology/parent> ?v3 . ?v1 <http://dbpedia.org/ontology/successor> ?result . ?v2 <http://dbpedia.org/property/father> ?v3 . ?v2 <http://dbpedia.org/ontology/successor> ?result . <http://dbpedia.org/resource/Anne_of_Brittany> <http://dbpedia.org/ontology/child> ?v1 . }","```sparql
# Step 1: Find spouse of Archduchess Barbara of Austria
SELECT ?spouse WHERE {
  wd:Q123456 wdt:P26 ?spouse .
}

# Step 2: Find a royal successor among Anne of Brittany's children
SELECT ?royalSuccessor WHERE {
  wd:Q789012 wdt:P40 ?child .
  ?child wdt:P31/wdt:P279* wd:Q11424 . # Ensure the child is royalty
  OPTIONAL { ?child wdt:P36 ?position } # Check if they held a royal position
  FILTER EXISTS { ?child wdt:P27 wd:Q42 } # French nationality for Anne's children
}

# Step 3: Find successor of Ercole II d'Este's parent's child
SELECT ?successor WHERE {
  wd:Q345678 wdt:P22 ?parent .
  ?parent wdt:P40 ?child .
  OPTIONAL { ?child wdt:P36 ?position } # Check if they held a position
  FILTER EXISTS { ?child wdt:P27 wd:Q42 } # Ensure French nationality for Ercole's parent's child
}

# Step 4: Combine results to find the common individual
SELECT DISTINCT ?commonIndividual WHERE {
  VALUES ?spouse { ?spouse1 }
  VALUES ?royalSuccessor { ?royalSuccessor1 }
  VALUES ?successor { ?successor1 }
  
  FILTER (?spouse = ?royalSuccessor && ?royalSuccessor = ?successor)
}
```

Note: Replace `wd:Q123456`, `wd:Q789012`, and `wd:Q345678` with the actual DBpedia identifiers for Archduchess Barbara of Austria, Anne of Brittany, and Ercole II d'Este respectively. The query assumes these identifiers are known or can be looked up.",6,7,7,3,3,3,3,71,0,0,1,0,0.0,0
933,40,val,"Give me the band of the band of the band, that is an artist and a musical artist, of The Ramong Sound and reference to Alan Warner and band of The Ramong Sound.","SELECT ?result WHERE { <http://dbpedia.org/resource/The_Ramong_Sound> <http://dbpedia.org/ontology/associatedMusicalArtist> ?v3 . ?result <http://xmlns.com/foaf/0.1/name> ""Alan Warner""@en . <http://dbpedia.org/resource/The_Ramong_Sound> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v1 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v3 <http://dbpedia.org/ontology/associatedMusicalArtist> ?v1 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?band WHERE {
  # Identify members of The Ramones
  ?member dbo:musicalArtist dbr:The_Ramones .
  
  # Filter for those who are also visual artists
  ?member dbo:occupation dbr:Visual_artist .
  
  # Check if they have a connection to Alan Warner
  OPTIONAL { 
    ?member dbo:wikiPageWikiLink dbr:Alan_Warner .
  }
  
  # Retrieve the band associated with this person
  ?member dbo:musicalArtist ?band .
}
```",5,7,6,3,3,3,3,71,0,0,1,0,0.0,0
791,48,val,"Give me the father of the child, that is a royalty, of Emperor Takakura and spouse of the spouse, that is a royalty, of the reference to Emperor Takakura.","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/spouse> ?v2 . ?v1 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Emperor_Takakura> . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v2 <http://dbpedia.org/ontology/spouse> ?v3 . ?v1 <http://dbpedia.org/property/father> ?result . ?v3 <http://xmlns.com/foaf/0.1/name> ""Emperor Takakura""@en . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. }","```sparql
SELECT ?father WHERE {
  wd:Q123456 wdt:P22 wd:Q789012 . # Emperor Takakura's spouse is Fujiwara no Shōshi (replace Q123456 with Emperor Takakura's DBpedia ID, and Q789012 with Fujiwara no Shōshi's DBpedia ID)
  wd:Q123456 wdt:P31 wd:Q5 .         # Emperor Takakura is a human
  wd:Q123456 wdt:P39 wd:Q11424 .    # Emperor Takakura has the occupation of emperor (replace Q11424 with the DBpedia ID for 'emperor')
  wd:Q123456 wdt:P25 ?child .       # Emperor Takakura's child is Antoku
  ?child wdt:P31 wd:Q5 .            # The child is a human
  ?child wdt:P39 wd:Q11424 .        # The child has the occupation of emperor (Antoku)
  ?father wdt:P25 ?child .          # The father of the child is Emperor Takakura
}
```",5,7,6,3,2,3,3,71,0,0,1,0,0.0,0
445,41,val,"Give me the entity in the residence, that is a country, of Anna Sharkey and death place of the awardee of Royal Astronomical Society and entity in United Kingdom.",SELECT ?result WHERE { ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. <http://dbpedia.org/resource/Anna_Sharkey> <http://dbpedia.org/property/residence> ?v2 . ?result <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/United_Kingdom> . ?v4 <http://dbpedia.org/ontology/deathPlace> ?result . ?result <http://dbpedia.org/ontology/location> ?v2 . ?v4 <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/Royal_Astronomical_Society> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?country WHERE {
  # Residence of Anna Sharkey
  dbr:Anna_Sharkey dbo:residenceLocation ?residence .
  
  # Death place of a Royal Astronomical Society awardee
  ?awardee dbo:awardReceived dbr:Royal_Astronomical_Society_Medal .
  ?awardee dbo:deathPlace ?deathPlace .

  # Ensure the death place is in the UK
  ?deathPlace dbo:country ?country .
  FILTER (STRSTARTS(STR(?country), ""http://dbpedia.org/resource/United_Kingdom""))

  # Match residence with death place
  ?residence owl:sameAs ?deathPlace .

  # Ensure the country is a country entity
  ?country rdf:type dbo:Country .
}
```",5,6,6,2,3,3,3,71,0,0,1,0,0.0,0
791,51,val,"Give me the predecessor of the child of Emperor Takakura and father of the child, that is a royalty, of the father, that is a royalty and an office holder, of Emperor Antoku.",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/successor> ?v4 . ?v2 <http://dbpedia.org/property/father> ?v1 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v2 <http://dbpedia.org/property/father> ?result . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v4 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Emperor_Takakura> . <http://dbpedia.org/resource/Emperor_Antoku> <http://dbpedia.org/property/father> ?v1 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?predecessor WHERE {
  # Emperor Antoku's father
  dbr:Emperor_Antoku dbo:father dbr:Taira_no_Kiyomori .
  
  # Taira no Kiyomori's child who is royalty and an office holder
  dbr:Taira_no_Kiyomori dbo:child ?emperorTakakura .
  ?emperorTakakura a dbo:Monarch ;
                   dbo:country dbr:Japan .

  # Emperor Takakura's child
  ?emperorTakakura dbo:child dbr:Emperor_Antoku .

  # Predecessor of Emperor Antoku
  dbr:Emperor_Antoku dbo:predecessor ?predecessor .
}
```",5,8,6,3,2,3,3,71,0,0,1,0,0.0,0
573,51,val,"Give me the parent of the author, that is a politician and an office holder, of the work of John Quincy Adams and person decedent at the residence, that is a settlement, of William J. Phelan.",SELECT ?result WHERE { <http://dbpedia.org/resource/William_J._Phelan> <http://dbpedia.org/property/residence> ?v4 . ?v1 <http://dbpedia.org/property/author> <http://dbpedia.org/resource/John_Quincy_Adams> . ?v1 <http://dbpedia.org/property/author> ?v2 . ?v2 <http://dbpedia.org/ontology/parent> ?result . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?result <http://dbpedia.org/ontology/deathPlace> ?v4 . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. },"```sparql
SELECT DISTINCT ?parent ?decedent WHERE {
  # Step 1: Identify a work by John Quincy Adams
  ?work dbo:author dbr:John_Quincy_Adams .
  
  # Step 2: Find his parent who is a politician and office holder
  ?adams dbo:child ?parent .
  ?parent rdf:type dbo:Politician ;
          dbo:officeHolder ?office .

  # Step 3: Identify William J. Phelan's residence
  dbr:William_J._Phelan dbo:residence ?settlement .

  # Step 4: Find the person who decedent at that settlement
  ?decedent dbo:placeOfDeath ?settlement .
  
  # Step 5: Link parent and decedent (if any connection exists)
  FILTER(?parent = ?decedent) 
}
```",5,8,6,3,2,3,3,71,0,0,2,0,0.0,0
329,23,val,"Give me the birthplace of the author of The Tailor and Ansty and entity in the birthplace, that is an organisation and a country, of Robert Bates (loyalist).",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/country> ?v1 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. <http://dbpedia.org/resource/The_Tailor_and_Ansty> <http://dbpedia.org/property/author> ?v2 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. ?v2 <http://dbpedia.org/ontology/birthPlace> ?result . <http://dbpedia.org/resource/Robert_Bates_(loyalist)> <http://dbpedia.org/ontology/birthPlace> ?v1 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?birthPlace ?organizationCountry
WHERE {
  # Find Robert Bates' birthplace
  dbr:Robert_Bates_(loyalist) dbo:birthPlace ?birthPlace .

  # Within the birthplace, find an entity that is both an organization and a country
  ?organizationCountry rdf:type dbo:Organisation ;
                      rdf:type dbo:Country ;
                      dbo:location ?birthPlace .
}
```",4,6,5,2,2,2,3,28,0,0,1,0,0.0,0
98,7,val,Give me the child of Emperor Go-Shirakawa and parent of the successor of Emperor Nijō.,SELECT ?result WHERE { <http://dbpedia.org/resource/Emperor_Nijō> <http://dbpedia.org/ontology/successor> ?v0 . ?result <http://dbpedia.org/ontology/parent> <http://dbpedia.org/resource/Emperor_Go-Shirakawa> . ?v0 <http://dbpedia.org/ontology/parent> ?result . },"```sparql
# Step 1: Find Emperor Go-Shirakawa's children
SELECT ?child WHERE {
    ?goShirakawa dbo:spouse ?parent .
    ?goShirakawa rdfs:label ""Emperor Go-Shirakawa""@en .
    ?parent dbo:child ?child .
}

# Step 2: Find the successor of Emperor Nijō
SELECT ?successor WHERE {
    ?nijo dbo:succeededBy ?successor .
    ?nijo rdfs:label ""Emperor Nijō""@en .
}

# Step 3: Find the parent of the successor identified in step 2
SELECT DISTINCT ?parent WHERE {
    ?successor dbo:child ?parent .
    VALUES ?successor { <URI_of_Successor> } # Replace with actual URI from step 2
    ?parent dbo:spouseOrParentOf ?goShirakawaChild .
    VALUES ?goShirakawaChild { 
        # Insert URIs of Go-Shirakawa's children from step 1 here
    }
}
```

Note: The above SPARQL query is structured in steps. You will need to replace `<URI_of_Successor>` and insert the actual URIs of Emperor Go-Shirakawa's children obtained from Step 1 into the `VALUES` clause for a complete execution.",3,3,4,2,2,2,2,9,0,0,1,0,0.0,0
926,50,val,"Give me the child of the father, that is a royalty, of Mustafa III and successor of the child of the spouse of Şermi Kadın.",SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/spouse> <http://dbpedia.org/resource/Şermi_Kadın> . <http://dbpedia.org/resource/Mustafa_III> <http://dbpedia.org/property/father> ?v0 . ?v0 <http://dbpedia.org/ontology/child> ?result . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v3 <http://dbpedia.org/property/father> ?v1 . ?v3 <http://dbpedia.org/ontology/successor> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?childOfFather ?successor WHERE {
  # Mustafa III's father
  dbr:Mustafa_III dbo:father dbr:Sultan_Mahmud_I .

  # Child of Sultan Mahmud I who is royalty
  dbr:Sultan_Mahmud_I dbo:child ?childOfFather .
  
  # Şermi Kadın's spouse
  dbr:Şermi_Kadın dbo:spouse ?spouse .

  # Child of Şermi Kadın's spouse
  ?spouse dbo:child ?childOfSpouse .

  # Successor of the child of Şermi Kadın's spouse
  ?childOfSpouse dbo:succeededBy ?successor .
  
  # Ensure the successor is also a royal child from Mustafa III's father
  FILTER (?childOfFather = ?successor)
}
```",5,6,6,3,2,3,3,71,0,0,1,0,0.0,0
456,42,val,"Give me the spouse of the actor of Pacific Drive and professional in  and band of the band, that is a musical artist, of Dean Brody.","SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?v2 <http://dbpedia.org/ontology/spouse> ?result . ?result <http://dbpedia.org/property/occupation> """"@en . <http://dbpedia.org/resource/Pacific_Drive> <http://dbpedia.org/property/starring> ?v2 . ?v1 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . <http://dbpedia.org/resource/Dean_Brody> <http://dbpedia.org/ontology/associatedMusicalArtist> ?v1 . }","```sparql
# Step 1: Find the actor of ""Pacific Drive""
SELECT ?actor WHERE {
    ?movie dbo:title ""Pacific Drive""@en .
    ?movie dbo:starring ?actor .
}

# Step 2: Get the spouse of that actor
SELECT ?spouse WHERE {
    ?actor foaf:surname ?surname .
    ?actor dbo:spouse ?spouse .
}

# Step 3: Find Dean Brody's band
SELECT ?band WHERE {
    dbpedia:Dean_Brody dbo:member ?band .
}

# Step 4: Identify the musical artist in that band and their professional roles/bands
SELECT ?artist ?professionalRole ?band WHERE {
    ?band dbo:member ?artist .
    FILTER (rdf:type(?artist, dbo:MusicalArtist)) .
    
    OPTIONAL { ?artist dbo:profession ?professionalRole . }
    OPTIONAL { ?artist dbo:member ?otherBand . }
}
```",5,6,6,2,3,3,3,71,0,0,1,0,0.0,0
433,51,val,"Give me the professional in the profession of the writer of Slowhand at 70 – Live at the Royal Albert Hall and associated musical artist of the associated musical artist, that is an artist and a musical artist, of Scott LaFaro.",SELECT ?result WHERE { <http://dbpedia.org/resource/Slowhand_at_70_–_Live_at_the_Royal_Albert_Hall> <http://dbpedia.org/property/writer> ?v1 . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?result <http://dbpedia.org/property/occupation> ?v2 . ?v4 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . <http://dbpedia.org/resource/Scott_LaFaro> <http://dbpedia.org/ontology/associatedMusicalArtist> ?v4 . ?v1 <http://dbpedia.org/property/occupation> ?v2 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?professional WHERE {
  # Find the writer of ""Slowhand at 70 – Live at the Royal Albert Hall""
  dbr:Eric_Clapton dbo:profession dbr:Musician .
  
  # Find associated musical artists of Eric Clapton
  ?associatedArtist dbo:associatedMusicalArtist dbr:Eric_Clapton .

  # Find Scott LaFaro's associated musical artist
  dbr:Scott_LaFaro dbo:associatedMusicalArtist ?laFarosAssociatedArtist .
  
  # Ensure the professional is an artist and a musical artist
  ?professional dbo:profession dbr:Musician ;
                dbo:associatedMusicalArtist ?associatedArtist ;
                dbo:associatedMusicalArtist ?laFarosAssociatedArtist .

}
```",5,7,6,3,2,3,3,71,0,0,4,0,0.0,0
791,53,val,"Give me the predecessor of Emperor Antoku and father of the child, that is a royalty, of Emperor Takakura and spouse of the spouse, that is a royalty, of the reference to Emperor Takakura.","SELECT ?result WHERE { ?v1 <http://dbpedia.org/property/father> ?result . ?result <http://dbpedia.org/ontology/successor> <http://dbpedia.org/resource/Emperor_Antoku> . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v2 <http://dbpedia.org/ontology/spouse> ?v3 . ?v1 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Emperor_Takakura> . ?v3 <http://xmlns.com/foaf/0.1/name> ""Emperor Takakura""@en . ?result <http://dbpedia.org/ontology/spouse> ?v2 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?predecessor WHERE {
  # Find the predecessor of Emperor Antoku
  ?antoku dbo:succession dbr:Emperor_Antoku .
  ?predecessor dbo:succession ?antoku .

  # Confirm that this predecessor is also Emperor Takakura
  ?takakura dbo:spouse ?spouse .
  ?child dbo:parent ?takakura ;
         dbo:parent ?spouse .
  FILTER EXISTS { ?child a dbo:Monarch . }
  
  # Check if the predecessor of Antoku is Takakura
  FILTER (?predecessor = dbr:Emperor_Takakura)
}
```",6,8,7,3,3,3,3,71,0,0,1,0,0.0,0
47,52,val,"Give me the office of Ajoy Mukherjee and office of the administration of the commander, that is a politician, in Operation Green Hunt and office of the awardee of Banga Bhushan.",SELECT ?result WHERE { ?v5 <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/Banga_Bhushan> . <http://dbpedia.org/resource/Ajoy_Mukherjee> <http://dbpedia.org/property/office> ?result . ?v2 <http://dbpedia.org/property/office> ?result . <http://dbpedia.org/resource/Operation_Green_Hunt> <http://dbpedia.org/ontology/commander> ?v3 . ?v2 <http://dbpedia.org/property/governor> ?v3 . ?v5 <http://dbpedia.org/property/office> ?result . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. },"```sparql
# Query for Ajoy Mukherjee's office
SELECT ?office WHERE {
  wd:Q123456 foaf:holdsOffice ?office .
}

# Query for the commander in Operation Green Hunt and their administrative role
SELECT ?person ?role WHERE {
  ?operation dbo:partOfOperation ""Operation Green Hunt"" ;
             dbo:commander ?person .
  ?person dbo:occupation ?role .
}

# Query for an awardee of Banga Bhushan and their office
SELECT ?office WHERE {
  ?awardee dbo:award ""Banga Bhushan Award"" ;
           foaf:holdsOffice ?office .
}
```

Note: Replace `wd:Q123456` with the actual DBpedia entity ID for Ajoy Mukherjee. The queries assume that DBpedia has structured data about these individuals and their roles.",6,7,7,3,3,3,3,71,0,0,1,0,0.0,0
892,41,val,Give me the landmark at elevation of the award of Anna Ishii and entity in the profession of Henri Crolla and entity in Province of Reggio Emilia.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/elevation> ?v4 . ?result <http://dbpedia.org/ontology/country> ?v2 . <http://dbpedia.org/resource/Henri_Crolla> <http://dbpedia.org/property/occupation> ?v2 . ?result <http://dbpedia.org/ontology/province> <http://dbpedia.org/resource/Province_of_Reggio_Emilia> . <http://dbpedia.org/resource/Anna_Ishii> <http://dbpedia.org/property/awards> ?v4 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?landmark WHERE {
  # Find Anna Ishii's award
  ?annaIshii dbo:award ?award .
  
  # Get the elevation related to the award
  ?award dbo:elevation ?elevation .

  # Find landmarks at that elevation
  ?landmark dbo:elevation ?elevation .

  # Henri Crolla's profession
  ?henriCrolla dbo:profession ?profession .

  # Entity in Province of Reggio Emilia
  ?reggioEntity dbo:locatedIn dbr:Province_of_Reggio_Emilia .

  # Ensure the landmark is related to both the profession and the province entity
  ?landmark dbo:relatedTo ?profession .
  ?landmark dbo:relatedTo ?reggioEntity .
}
```",5,5,6,2,3,3,3,71,0,0,1,0,0.0,0
773,46,val,Give me the parent of the successor of Charles the Bald and spouse of the father of the parent of Bernard (son of Charles the Fat).,SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/spouse> ?result . <http://dbpedia.org/resource/Charles_the_Bald> <http://dbpedia.org/ontology/successor> ?v4 . ?result <http://dbpedia.org/ontology/child> ?v4 . ?v2 <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Bernard_(son_of_Charles_the_Fat)> . ?v2 <http://dbpedia.org/property/father> ?v1 . },"```sparql
SELECT ?spouse WHERE {
  wd:Q1116 wdt:P22 ?parentOfCharlesTheFat . # Charles the Fat's parent (Louis the German)
  ?parentOfCharlesTheFat wdt:P26 ?spouse .    # Louis the German's spouse
}
```",5,5,6,3,2,3,3,71,0,0,1,0,0.0,0
582,40,val,"Give me the reference to the residence of the reference, that is a scientist, to Hirotaka Sugawara and figure known as --10-19 and player in Kazuaki Nagasawa.","SELECT ?result WHERE { ?result <http://xmlns.com/foaf/0.1/name> ?v1 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Scientist>. ?v2 <http://xmlns.com/foaf/0.1/name> ""Hirotaka Sugawara""@en . ?v2 <http://dbpedia.org/property/residence> ?v1 . <http://dbpedia.org/resource/Kazuaki_Nagasawa> <http://dbpedia.org/ontology/team> ?result . ?result <http://dbpedia.org/property/nickname> ""--10-19""^^<http://www.w3.org/2001/XMLSchema#gMonthDay> . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?residence WHERE {
  # Find Hirotaka Sugawara's residence
  OPTIONAL { 
    dbr:Hirotaka_Sugawara dbo:residence ?residence .
  }

  # Identify any connection with the figure known as --10-19
  OPTIONAL {
    ?entity rdfs:label ""-10-19"" ;
            dbo:wikiPageRedirects ?redirectEntity .
    ?redirectEntity dbo:wikiPageRedirects dbr:Hirotaka_Sugawara .
  }

  # Find Kazuaki Nagasawa's role as a player
  OPTIONAL {
    dbr:Kazuaki_Nagasawa dbo:sport dbr:Soccer ;
                         dbo:role ""player"" .
  }
}
```",5,6,6,3,3,3,3,71,0,0,1,0,0.0,0
130,17,val,"Give me the entity in the administration, that is American, of the award of Živko Ključe and figure known as Vanderbilt Commodores.",SELECT ?result WHERE { <http://dbpedia.org/resource/Živko_Ključe> <http://dbpedia.org/property/awards> ?v0 . ?v3 <http://dbpedia.org/property/governor> ?v0 . ?v3 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/United_States>. ?result <http://dbpedia.org/property/nickname> <http://dbpedia.org/resource/Vanderbilt_Commodores> . ?result <http://dbpedia.org/ontology/state> ?v3 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?administrationEntity WHERE {
  # Find the award associated with Živko Ključe
  ?award dbo:recipient dbr:Živko_Klju%C4%8De .
  
  # Find a significant figure related to Vanderbilt Commodores
  ?figure dbo:associatedTeam dbr:Vanderbilt_Commodores ;
          dbo:nationality dbr:United_States .

  # Ensure the figure is part of an administration entity that is American
  ?administrationEntity dbo:member ?figure .
}
```",4,5,5,3,2,3,2,20,0,0,1,0,0.0,0
965,54,val,"Give me the parent of the child, that is a royalty, of the person born, that is a politician, on 1854-05-24 and spouse of the spouse of Princess Victoria of Hesse and by Rhine and parent of George Mountbatten, 2nd Marquess of Milford Haven.","SELECT ?result WHERE { ?v4 <http://dbpedia.org/property/father> ?v1 . ?result <http://dbpedia.org/ontology/spouse> ?v2 . <http://dbpedia.org/resource/Princess_Victoria_of_Hesse_and_by_Rhine> <http://dbpedia.org/ontology/spouse> ?v2 . ?v1 <http://dbpedia.org/ontology/birthDate> ""1854-05-24""^^<http://www.w3.org/2001/XMLSchema#date> . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. <http://dbpedia.org/resource/George_Mountbatten,_2nd_Marquess_of_Milford_Haven> <http://dbpedia.org/ontology/parent> ?result . ?v4 <http://dbpedia.org/ontology/parent> ?result . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?parent WHERE {
  # Lord Randolph Churchill (politician born on 1854-05-24)
  ?randolph a dbo:Politician ;
            dbo:birthDate ""1854-05-24""^^xsd:date ;
            dbo:spouse ?spouseRandolph .

  # Princess Victoria of Hesse and by Rhine
  dbr:Princess_Victoria_of_Hesse_and_by_Rhine dbo:spouse ?spouseVictoria .

  # Ernest Louis, Grand Duke of Hesse (spouse of Princess Victoria)
  ?spouseVictoria a dbo:Person ;
                  rdfs:label ""Ernest Louis, Grand Duke of Hesse""@en .

  # Princess Alice of the United Kingdom (spouse of Ernest Louis)
  ?spouseAlice a dbo:Person ;
               rdfs:label ""Princess Alice of the United Kingdom""@en ;
               dbo:spouse ?spouseVictoria .

  # George Mountbatten, 2nd Marquess of Milford Haven
  dbr:George_Mountbatten_2nd_Marquess_of_Milford_Haven dbo:parent ?princessVictoria .

  # Louis Mountbatten, 1st Earl Mountbatten of Burma (child of Princess Victoria)
  dbr:Louis_Mountbatten_1st_Earl_Mountbatten_of_Burma dbo:parent ?princessVictoria .

  # Find the parent of Louis Mountbatten
  ?princessVictoria a dbo:Person ;
                    rdfs:label ""Princess Victoria of Hesse and by Rhine""@en ;
                    dbo:child ?louisMountbatten .

  # Return the parent of the royalty child (Louis Mountbatten)
  ?parent dbo:spouse ?randolph .
}
```",6,8,7,3,3,3,3,71,0,0,1,0,0.0,0
965,50,val,"Give me the parent of the child, that is a royalty, of the person born, that is a politician, on 1854-05-24 and parent of the person born, that is a noble, as Prince George of Battenberg.","SELECT ?result WHERE { ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v0 <http://dbpedia.org/ontology/parent> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v0 <http://dbpedia.org/property/birthName> ""Prince George of Battenberg""@en . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Noble>. ?v3 <http://dbpedia.org/ontology/parent> ?result . ?v1 <http://dbpedia.org/ontology/birthDate> ""1854-05-24""^^<http://www.w3.org/2001/XMLSchema#date> . ?v3 <http://dbpedia.org/property/father> ?v1 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?parent WHERE {
  # Step 1: Find the politician born on 1854-05-24
  ?politician dbo:birthDate ""1854-05-24""^^xsd:date ;
              a dbo:Politician .

  # Step 2: Check if this politician has any children who are royalty
  ?politician dbo:child ?royaltyChild .
  ?royaltyChild dbo:royaltyStatus ?status .
  
  FILTER(?status IN (dbo:Monarch, dbo:Noble)) # Assuming these classes represent royalty

  # Step 3: Identify Prince George of Battenberg and his parent
  ?prince a dbo:Person ;
          rdfs:label ""Prince George of Battenberg""@en ;
          dbo:nationality dbr:Principality_of_Baden ; # Assuming nationality helps identify nobility
          dbo:parent ?parent .

  # Step 4: Connect the royalty child to their parent
  ?royaltyChild dbo:parent ?parent .
}
```",5,8,6,3,2,3,3,71,0,0,2,0,0.0,0
826,41,val,"Give me the successor of the child, that is a royalty, of Louis I, Grand Duke of Hesse and spouse of the child of Johann Heinrich Appel and predecessor of Louis IV, Grand Duke of Hesse.","SELECT ?result WHERE { <http://dbpedia.org/resource/Louis_I,_Grand_Duke_of_Hesse> <http://dbpedia.org/ontology/child> ?v4 . ?v4 <http://dbpedia.org/ontology/successor> ?result . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v2 <http://dbpedia.org/property/father> ""Johann Heinrich Appel""@en . ?result <http://dbpedia.org/ontology/successor> <http://dbpedia.org/resource/Louis_IV,_Grand_Duke_of_Hesse> . ?v2 <http://dbpedia.org/ontology/spouse> ?result . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?successor WHERE {
  # Louis I, Grand Duke of Hesse
  dbr:Louis_I,_Grand_Duke_of_Hesse dbo:child ?royalChild .
  
  # The royal child's spouse
  ?royalChild dbo:spouse ?spouse .

  # Johann Heinrich Appel and his child
  dbr:Johann_Heinrich_Appel dbo:child ?appelChild .

  # Predecessor of Louis IV, Grand Duke of Hesse
  dbr:Louis_IV,_Grand_Duke_of_Hesse dbo:predecessor ?predecessor .

  # The spouse is also a child of Johann Heinrich Appel's child and predecessor of Louis IV
  ?spouse dbo:childOf ?appelChild .
  ?spouse dbo:predecessor ?predecessor .

  # Find the successor of this person
  ?spouse dbo:successor ?successor .
}
```",5,6,6,2,3,3,3,71,0,0,1,0,0.0,0
456,48,val,"Give me the spouse of the actor of the movie, that is a work and a television show, with Ross Newton and band of the band, that is a musical artist, of Dean Brody.",SELECT ?result WHERE { ?v3 <http://dbpedia.org/property/starring> <http://dbpedia.org/resource/Ross_Newton> . <http://dbpedia.org/resource/Dean_Brody> <http://dbpedia.org/ontology/associatedMusicalArtist> ?v1 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?v1 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v3 <http://dbpedia.org/property/starring> ?v2 . ?v2 <http://dbpedia.org/ontology/spouse> ?result . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/TelevisionShow>. },"```sparql
SELECT ?movie ?actorRole ?bandName ?spouse WHERE {
  # Find a movie that is both a work and a television show
  ?movie dbo:wikiPageWikiLink dbc:Category:Television_films .
  ?movie dbo:wikiPageWikiLink dbc:Category:Films_based_on_television_programs .

  # Ross Newton's role in the movie
  ?actor foaf:name ""Ross Newton"" .
  ?actorRole dbo:characterName ?role .
  ?actorRole dbo:actor ?actor .
  ?actorRole dbo:film ?movie .

  # Dean Brody's band
  ?musician foaf:name ""Dean Brody"" .
  ?band dbo:musicalArtist ?musician .
  BIND(str(?band) AS ?bandName)

  # Ross Newton's spouse
  ?spouseRelationship dbo:spouse ?actor .
  ?spouseRelationship dbo:spouse ?spouse .
  BIND(str(?spouse) AS ?spouseName)
}
```",5,8,6,3,2,3,3,71,0,0,1,0,0.0,0
124,51,val,"Give me the military force of the force, that is a societal event and a military conflict, of the person born on 1850-06-24 and military force of the war, that is an event and a military conflict and a societal event, of Frank Rhodes (British Army officer).","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/battle> ?v2 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. <http://dbpedia.org/resource/Frank_Rhodes_(British_Army_officer)> <http://dbpedia.org/ontology/battle> ?v4 . ?v1 <http://dbpedia.org/ontology/birthDate> ""1850-06-24""^^<http://www.w3.org/2001/XMLSchema#date> . ?result <http://dbpedia.org/ontology/battle> ?v4 . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?v2 <http://dbpedia.org/ontology/commander> ?v1 . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?personMilitaryForce ?frankRhodesWar ?frankRhodesMilitaryForce WHERE {
  # Find the person born on June 24, 1850
  ?person dbo:birthDate ""1850-06-24""^^xsd:date .
  
  # Retrieve military forces associated with this person that are societal events and military conflicts
  ?personMilitaryForce dbo:agent ?person ;
                      a dbo:MilitaryConflict ;
                      a dbo:SocietalEvent .

  # Find Frank Rhodes, the British Army officer
  ?frankRhodes foaf:name ""Frank Rhodes"" ;
               dbo:nationality dbr:United_Kingdom ;
               dbo:militaryBranch dbr:British_Army .
  
  # Retrieve wars involving Frank Rhodes that are events, military conflicts, and societal events
  ?frankRhodesWar dbo:agent ?frankRhodes ;
                  a dbo:MilitaryConflict ;
                  a dbo:Event ;
                  a dbo:SocietalEvent .

  # Find the military force involved in these wars
  ?frankRhodesMilitaryForce dbo:partOf ?frankRhodesWar .
}
```",5,10,6,3,2,3,3,71,0,0,1085,0,0.0,0
124,52,val,"Give me the military force of Battle of Atbara and commander in the war, that is a societal event and a military conflict, of the reference, that is Australian and an organisation and a military unit, to 'A' Battery, Royal Australian Artillery and military force of the war, that is an event and a military conflict and a societal event, of Frank Rhodes (British Army officer).","SELECT ?result WHERE { ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?v3 <http://xmlns.com/foaf/0.1/name> ""'A' Battery, Royal Australian Artillery""@en . <http://dbpedia.org/resource/Frank_Rhodes_(British_Army_officer)> <http://dbpedia.org/ontology/battle> ?v5 . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?result <http://dbpedia.org/ontology/battle> ?v5 . ?v3 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Australia>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?v2 <http://dbpedia.org/ontology/commander> ?result . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryUnit>. ?result <http://dbpedia.org/ontology/battle> <http://dbpedia.org/resource/Battle_of_Atbara> . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v3 <http://dbpedia.org/ontology/battle> ?v2 . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?battle ?commander ?unit ?frankConflict WHERE {
  # Find the Battle of Atbara and its commanders
  VALUES (?battle) { dbr:Battle_of_Atbara }
  ?battle dbo:commander ?commander .

  # Check for any connection to 'A' Battery, Royal Australian Artillery
  OPTIONAL {
    ?unit rdfs:label ""A Battery, Royal Australian Artillery""@en .
    ?battle dbo:militaryUnit ?unit .
  }

  # Find a military conflict involving Frank Rhodes
  VALUES (?frank) { dbr:Frank_Rhodes_(British_Army_officer) }
  ?frankConflict dbo:commander ?frank .

  # Check if the military force of Frank's conflict is related to the Battle of Atbara
  OPTIONAL {
    ?frankConflict dbo:militaryUnit ?unit .
    ?battle dbo:militaryUnit ?unit .
  }
}
```",6,14,7,3,3,3,3,71,0,0,1,0,0.0,0
170,22,val,Give me the birth place of the awardee of People's Artist of Russia and entity in the work of International Energy Agency.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/country> ?v2 . ?v3 <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/People's_Artist_of_Russia> . ?v2 <http://dbpedia.org/property/author> <http://dbpedia.org/resource/International_Energy_Agency> . ?v3 <http://dbpedia.org/ontology/birthPlace> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?person ?birthPlace WHERE {
  ?person dbo:honorificTitle dbr:People's_Artist_of_Russia .
  ?person dbo:memberOf dbr:International_Energy_Agency .
  ?person dbo:birthPlace ?birthPlace .
}
```",4,4,5,2,2,2,3,28,0,0,12,0,0.0,0
839,40,val,"Give me the band of the person born, that is a musical artist, as the persona of Kevin Russell (musician) and band of Peter Schorowsky and band of Matthias Röhr.",SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. <http://dbpedia.org/resource/Kevin_Russell_(musician)> <http://xmlns.com/foaf/0.1/givenName> ?v2 . ?v1 <http://dbpedia.org/property/birthName> ?v2 . ?result <http://dbpedia.org/ontology/bandMember> <http://dbpedia.org/resource/Peter_Schorowsky> . ?v1 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?result <http://dbpedia.org/ontology/bandMember> <http://dbpedia.org/resource/Matthias_Röhr> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?person ?band WHERE {
  VALUES (?personName) { 
    (dbr:Kevin_Russell_(musician)) 
    (dbr:Peter_Schorowsky)
    (dbr:Matthias_Röhr)
  }
  
  ?person rdfs:label ?personLabel .
  FILTER(?personLabel IN (?personName))
  OPTIONAL {
    ?person dbo:musicArtistOf ?band .
    ?band rdfs:label ?bandLabel .
  }

  FILTER(BOUND(?band)) # Ensure only musical artists with bands are included
}
```",5,6,6,3,3,3,3,71,0,0,1,0,0.0,0
507,50,val,"Give me the professional in the profession of Guy Ferland and director of the movie, that is a movie and a work, with the person born on 1919-06-17.","SELECT ?result WHERE { ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?v4 <http://dbpedia.org/property/starring> ?v0 . ?v4 <http://dbpedia.org/ontology/director> ?result . <http://dbpedia.org/resource/Guy_Ferland> <http://dbpedia.org/property/occupation> ?v3 . ?result <http://dbpedia.org/property/occupation> ?v3 . ?v0 <http://dbpedia.org/ontology/birthDate> ""1919-06-17""^^<http://www.w3.org/2001/XMLSchema#date> . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Film>. }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?person ?movie WHERE {
  # Find the profession of Guy Ferland
  ?guyFerland dbo:profession ?profession .
  
  # Find a person with the same profession and born on June 17, 1919
  ?person dbo:birthDate ""1919-06-17""^^xsd:date ;
          dbo:profession ?sameProfession ;
          foaf:name ?name .

  FILTER (?sameProfession = ?profession)

  # Ensure this person directed a movie that is also considered a work
  ?movie dbo:director ?person ;
         rdf:type dbo:Film, dbo:CreativeWork .
  
  # Return the person and one of their movies
}
```",5,7,6,3,2,3,3,71,0,0,1,0,0.0,0
987,54,val,"Give me the entity in Montenegro and birth place of the actor of the show, that is a film, with Emir Hadžihafizbegović and birth place of the band, that is an artist and a musical artist, of Šako Polumenta.",SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/starring> <http://dbpedia.org/resource/Emir_Hadžihafizbegović> . ?result <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Montenegro> . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. ?v1 <http://dbpedia.org/property/starring> ?v4 . <http://dbpedia.org/resource/Šako_Polumenta> <http://dbpedia.org/ontology/associatedMusicalArtist> ?v2 . ?v2 <http://dbpedia.org/ontology/birthPlace> ?result . ?v4 <http://dbpedia.org/ontology/birthPlace> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Film>. },"```sparql
# Step 1: Find a film featuring Emir Hadžihafizbegović
SELECT ?film WHERE {
  ?film dbo:starring dbpedia:Emir_Hadžihafizbegović .
}

# Step 2: Identify actors in the film who were born in Montenegro
SELECT DISTINCT ?actor ?birthPlace WHERE {
  VALUES ?film { <INSERT_FILM_URI_HERE> } # Replace with actual URI from step 1
  ?film dbo:starring ?actor .
  ?actor dbo:birthPlace ?birthLocation .
  ?birthLocation rdfs:label ""Montenegro""@en .
}

# Step 3: Find bands associated with Šako Polumenta and their birthplaces
SELECT DISTINCT ?band ?bandBirthPlace WHERE {
  ?band dbo:member dbpedia:Šako_Polumenta .
  ?band dbo:birthPlace ?bandBirthLocation .
  ?bandBirthLocation rdfs:label ?bandBirthPlace .
}

# Note: The above queries need to be executed sequentially, and the results from each step should be used in subsequent steps.
```",6,9,7,3,3,3,3,71,0,0,1,0,0.0,0
926,44,val,"Give me the successor of the child of Ahmed III and father of Mahmud II and child of the father, that is a royalty, of Mustafa III.",SELECT ?result WHERE { <http://dbpedia.org/resource/Mahmud_II> <http://dbpedia.org/property/father> ?result . ?v4 <http://dbpedia.org/ontology/successor> ?result . <http://dbpedia.org/resource/Mustafa_III> <http://dbpedia.org/property/father> ?v0 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v0 <http://dbpedia.org/ontology/child> ?result . ?v4 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Ahmed_III> . },"```sparql
SELECT ?successor WHERE {
  wd:Q1234 wdt:P40 wd:Q1235 . # Mustafa III (Q1234) succeeded Abdul Hamid I (Q1235)
  wd:Q1235 wdt:P22 wd:Q1236 . # Abdul Hamid I (Q1235) is a child of Ahmed III (Q1236)
  wd:Q1236 wdt:P40 wd:Q1237 . # Ahmed III (Q1236) succeeded Mustafa II (Q1237)
  wd:Q1234 wdt:P22 wd:Q1238 . # Mustafa III (Q1234) is a father of Mahmud II (Q1238)

  wd:Q1234 wdt:P136 ?royalty . # Mustafa III (Q1234) has royalty as occupation
  wd:Q1235 wdt:P136 ?royalty . # Abdul Hamid I (Q1235) has royalty as occupation

  wd:Q1234 wdt:P57 ?successor . # Mustafa III's successor is ?
}
```",5,6,6,2,3,3,3,71,0,0,1,0,0.0,0
826,48,val,Give me the predecessor of the parent of Prince Friedrich of Hesse and by Rhine and spouse of the child of the father of Anna Magdalena Appel.,SELECT ?result WHERE { ?v2 <http://dbpedia.org/ontology/spouse> ?result . ?v2 <http://dbpedia.org/property/father> ?v3 . <http://dbpedia.org/resource/Anna_Magdalena_Appel> <http://dbpedia.org/property/father> ?v3 . ?result <http://dbpedia.org/ontology/successor> ?v1 . <http://dbpedia.org/resource/Prince_Friedrich_of_Hesse_and_by_Rhine> <http://dbpedia.org/ontology/parent> ?v1 . },"```sparql
# Step 1: Find Anna Magdalena Bach's father
SELECT ?father WHERE {
  wd:Q123456 wdt:P22 ?mother .
  ?mother wdt:P25 wd:Q789012 . # Johann Christoph Bach
}

# Step 2: Find a child of Johann Christoph Bach (Carl Philipp Emanuel Bach)
SELECT ?child WHERE {
  wd:Q789012 wdt:P40 ?child .
}

# Step 3: Find the spouse of Carl Philipp Emanuel Bach
SELECT ?spouse WHERE {
  ?child wdt:P26 ?spouse .
}

# Step 4: Identify Prince Friedrich's parent (Louis IV, Grand Duke of Hesse)
SELECT ?parent WHERE {
  wd:Q987654 wdt:P22 ?mother .
  ?mother wdt:P25 wd:Q345678 . # Princess Alice
  ?parent wdt:P31/wdt:P279* wd:Q1234567 . # Louis IV, Grand Duke of Hesse
}

# Step 5: Find the predecessor of Louis IV, Grand Duke of Hesse (Ludwig III)
SELECT ?predecessor WHERE {
  wd:Q345678 wdt:P136 ?position .
  ?predecessor wdt:P136 ?position .
  FILTER(?predecessor != wd:Q345678) # Exclude current holder
}
```

Note: The actual Wikidata IDs (e.g., `wd:Q123456`, `wd:Q789012`) need to be replaced with the correct identifiers for Anna Magdalena Bach, Johann Christoph Bach, Carl Philipp Emanuel Bach, Princess Alice, and Louis IV, Grand Duke of Hesse.",5,5,6,3,2,3,3,71,0,0,1,0,0.0,0
459,19,val,"Give me the governor of Dana Murphy and governor of the death place, that is a settlement, of Cliff Roquemore and person born as John Kevin Stitt.","SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. <http://dbpedia.org/resource/Dana_Murphy> <http://dbpedia.org/property/governor> ?result . <http://dbpedia.org/resource/Cliff_Roquemore> <http://dbpedia.org/ontology/deathPlace> ?v1 . ?v1 <http://dbpedia.org/property/governor> ?result . ?result <http://dbpedia.org/property/birthName> ""John Kevin Stitt""@en . }","```sparql
# Query for Dana Murphy's birthplace and current governor
SELECT ?governor WHERE {
  ?dana dbo:birthPlace ?birthPlace .
  ?birthPlace a dbo:Settlement ;
              dbo:state ?state .
  ?state dbo:governmentHead ?governor .
  FILTER(CONTAINS(LCASE(?dana), ""dana murphy""))
}

UNION

# Query for Cliff Roquemore's death place and current governor
SELECT ?governor WHERE {
  ?cliff dbo:deathPlace ?deathPlace .
  ?deathPlace a dbo:Settlement ;
              dbo:state ?state .
  ?state dbo:governmentHead ?governor .
  FILTER(CONTAINS(LCASE(?cliff), ""cliff roquemore""))
}

UNION

# Query for John Kevin Stitt (Kevin Stitt) as governor
SELECT ?person WHERE {
  ?person rdfs:label ""Kevin Stitt""@en ;
          dbo:governmentHead ?state .
  ?state a dbo:State .
}
```",4,5,5,2,3,2,3,28,0,0,1,0,0.0,0
124,42,val,"Give me the commander in the war, that is a societal event and a military conflict, of A Field Battery, Royal Australian Artillery and military force of Battle of Tamai and military force of the force, that is a societal event and a military conflict, of Herbert Kitchener, 1st Earl Kitchener.","SELECT ?result WHERE { ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?v2 <http://dbpedia.org/ontology/commander> ?result . <http://dbpedia.org/resource/A_Field_Battery,_Royal_Australian_Artillery> <http://dbpedia.org/ontology/battle> ?v2 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?result <http://dbpedia.org/ontology/battle> <http://dbpedia.org/resource/Battle_of_Tamai> . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?result <http://dbpedia.org/ontology/battle> ?v1 . ?v1 <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Herbert_Kitchener,_1st_Earl_Kitchener> . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?commander WHERE {
  # Find the commander of the Battle of Tamai
  ?battle a dbo:MilitaryConflict ;
         dbo:participatingMilitaryUnit ?australianArtillery ;
         dbo:commander ?commander .

  FILTER(?battle = dbr:Battle_of_Tamai)

  # Ensure A Field Battery, Royal Australian Artillery participated in the battle
  ?australianArtillery rdfs:label ""A Field Battery, Royal Australian Artillery""@en .

  # Find conflicts involving Herbert Kitchener
  ?kitchenerConflict a dbo:MilitaryConflict ;
                     dbo:commander ?commander .
  
  FILTER(?kitchenerConflict IN (dbr:Sudan_Campaign_of_1882-1899, dbr:World_War_I)) # Example conflicts

  # Ensure the same commander is involved in both contexts
}
```",5,9,6,2,3,3,3,71,0,0,1,0,0.0,0
445,51,val,Give me the entity in the award of the commander in Battle of Saint-Mihiel and death place of the awardee of Royal Astronomical Society.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/country> ?v2 . <http://dbpedia.org/resource/Battle_of_Saint-Mihiel> <http://dbpedia.org/ontology/commander> ?v1 . ?v4 <http://dbpedia.org/ontology/deathPlace> ?result . ?v4 <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/Royal_Astronomical_Society> . ?v1 <http://dbpedia.org/property/awards> ?v2 . },"```sparql
SELECT ?entity WHERE {
  # Part 1: Find entities awarded ""Commander"" in connection with the Battle of Saint-Mihiel
  ?battle dbo:type dbr:Battle_of_Saint-Mihiel .
  ?battle dbo:commander ?person .
  ?person dbo:title dbr:Commander .

  # Part 2: Find entities who received an award from the Royal Astronomical Society and their death place
  OPTIONAL {
    ?award dbo:recipient ?person .
    ?award dbo:awardingBody dbr:Royal_Astronomical_Society .
    ?person dbo:deathPlace ?deathPlace .
  }

  # Ensure both conditions are met by the same entity
  FILTER(?person = ?person2)
}
```",5,5,6,3,2,3,3,71,0,0,2,0,0.0,0
507,53,val,Give me the professional in the profession of Guy Ferland and director of Entertaining Mr Sloane (film) and spouse of the person born as the birth name of Anne V. Coates.,SELECT ?result WHERE { <http://dbpedia.org/resource/Anne_V._Coates> <http://dbpedia.org/property/birthName> ?v3 . ?result <http://dbpedia.org/ontology/spouse> ?v2 . ?result <http://dbpedia.org/property/occupation> ?v1 . ?v2 <http://dbpedia.org/property/birthName> ?v3 . <http://dbpedia.org/resource/Entertaining_Mr_Sloane_(film)> <http://dbpedia.org/ontology/director> ?result . <http://dbpedia.org/resource/Guy_Ferland> <http://dbpedia.org/property/occupation> ?v1 . },"```sparql
# Step 1: Find Guy Ferland's profession
SELECT ?profession WHERE {
  dbpedia:Guy_Ferland dbo:occupation ?profession .
}

# Step 2: Find director of ""Entertaining Mr Sloane"" (film)
SELECT ?director WHERE {
  dbpedia:""Entertaining_Mr_Sloane_(film)"" dbo:director ?director .
}

# Step 3: Find spouse of Anne V. Coates
SELECT ?spouse WHERE {
  dbpedia:Anne_V._Coates dbo:spouse ?spouse .
}

# Combine the results to find the common individual
SELECT DISTINCT ?person WHERE {
  # Guy Ferland's profession
  { SELECT ?profession WHERE {
      dbpedia:Guy_Ferland dbo:occupation ?profession .
    }
  } AS %ferlandProfession

  # Director of ""Entertaining Mr Sloane"" (film)
  { SELECT ?director WHERE {
      dbpedia:""Entertaining_Mr_Sloane_(film)"" dbo:director ?director .
    }
  } AS %sloaneDirector

  # Spouse of Anne V. Coates
  { SELECT ?spouse WHERE {
      dbpedia:Anne_V._Coates dbo:spouse ?spouse .
    }
  } AS %coatesSpouse

  # Find the common individual
  VALUES ?person {
    (dbpedia:%ferlandProfession)
    (dbpedia:%sloaneDirector)
    (dbpedia:%coatesSpouse)
  }

  FILTER (?person = dbpedia:%ferlandProfession && ?person = dbpedia:%sloaneDirector && ?person = dbpedia:%coatesSpouse)
}
```",6,6,7,3,3,3,3,71,0,0,1,0,0.0,0
791,55,val,"Give me the spouse of the spouse, that is a royalty, of Emperor Takakura and father of the child, that is a royalty, of Emperor Takakura and predecessor of the child of Emperor Takakura.",SELECT ?result WHERE { ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v2 <http://dbpedia.org/property/father> ?result . ?result <http://dbpedia.org/ontology/successor> ?v5 . ?result <http://dbpedia.org/ontology/spouse> ?v3 . ?v3 <http://dbpedia.org/ontology/spouse> <http://dbpedia.org/resource/Emperor_Takakura> . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v5 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Emperor_Takakura> . ?v2 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Emperor_Takakura> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?spouseOfSpouse WHERE {
  # Step 1: Identify Emperor Takakura's spouse
  dbr:Takakura_Emperor dbo:spouse ?empress .
  
  # Step 2: Find the spouse of Emperor Takakura's spouse (Emperor Takakura himself)
  ?empress dbo:spouse ?spouseOfSpouse .

  # Step 3: Ensure this second spouse is royalty
  ?spouseOfSpouse a dbo:Monarch .
  
  # Step 4: Identify Emperor Takakura's child who is royalty
  dbr:Takakura_Emperor dbo:child ?royalChild .
  ?royalChild a dbo:Monarch .

  # Step 5: Find the father of this royal child
  ?royalChild dbo:father ?fatherOfRoyalChild .

  # Step 6: Ensure the father is the predecessor of the child
  ?royalChild dbo:predecessor ?fatherOfRoyalChild .
  
  FILTER (?spouseOfSpouse = ?fatherOfRoyalChild)
}
```",6,8,7,2,3,3,3,71,0,0,1,0,0.0,0
527,15,val,"Give me the actor of the movie, that is a work and English and a television show, with the professional in Actor and author of The Boy Who Kicked Pigs.","SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/United_Kingdom>. <http://dbpedia.org/resource/The_Boy_Who_Kicked_Pigs> <http://dbpedia.org/property/author> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?v1 <http://dbpedia.org/property/starring> ?v0 . ?v0 <http://dbpedia.org/property/occupation> ""Actor""@en . ?v1 <http://dbpedia.org/property/starring> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/TelevisionShow>. }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?actor WHERE {
  ?book dbo:author ?person .
  ?person foaf:name ""David Walliams"" . # Assuming David Walliams is the author based on external knowledge
  FILTER EXISTS { ?person dbo:profession dbr:Actor } .
  
  OPTIONAL {
    ?work dbo:starring ?actor .
    ?work rdf:type ?type .
    VALUES ?type { dbr:Film dbr:TelevisionSeries }
    FILTER (LANG(?work) = ""en"")
  }
}
```",4,7,5,3,2,3,2,20,0,0,1,0,0.0,0
274,19,val,"Give me the associated musical artist of Cecil Taylor and professional in  and band member of the person born, that is a musical artist, as John Birks Gillespie.","SELECT ?result WHERE { ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. <http://dbpedia.org/resource/Cecil_Taylor> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?result <http://dbpedia.org/ontology/associatedMusicalArtist> ?v2 . ?v2 <http://dbpedia.org/property/birthName> ""John Birks Gillespie""@en . ?result <http://dbpedia.org/property/occupation> """"@en . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?person WHERE {
  # Find artists associated with Cecil Taylor
  ?artist dbo:associatedMusicalArtist dbr:Cecil_Taylor .
  
  # Ensure the artist is also a band member of Dizzy Gillespie
  ?bandMember dbo:member dbr:Dizzy_Gillespie ;
              rdf:type dbo:Band ;
              dbo:bandMember ?person .

  # Ensure the person is recognized as a musical artist
  ?person rdf:type dbo:MusicalArtist .
  
  # Link the two conditions
  FILTER (?artist = ?person)
}
```",4,5,5,2,3,2,3,28,0,0,1,0,0.0,0
579,17,val,"Give me the native of Edinburgh and person born as the birth name of the native, that is an office holder, of Edinburgh.",SELECT ?result WHERE { ?v0 <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Edinburgh> . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?result <http://dbpedia.org/property/birthName> ?v3 . ?v0 <http://dbpedia.org/property/birthName> ?v3 . ?result <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Edinburgh> . },"```sparql
SELECT ?person ?officeHolderLabel WHERE {
  # Find a notable person from Edinburgh
  ?person dbo:nativePlace dbr:Edinburgh .
  
  # Check if the person is Nicola Sturgeon
  FILTER(?person = dbpedia:Nicola_Sturgeon) .

  # Get her birth name
  ?person foaf:name ""Nicola Anne Sturgeon""@en .

  # Find any office holders with the same birth name
  ?officeHolder foaf:name ""Nicola Anne Sturgeon""@en .
  
  # Ensure the office holder is an office holder (e.g., politician)
  ?officeHolder dbo:occupation dbr:Politician ;
               rdfs:label ?officeHolderLabel .

}
```",4,5,5,3,2,3,2,20,0,0,18,0,0.0,0
933,44,val,"Give me the band of the band, that is a group and a band and an organisation, of Alan Warner (musician) and reference to the birth name of Alan Warner (musician) and band of Mike Elliott (saxophonist).",SELECT ?result WHERE { ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Group>. <http://dbpedia.org/resource/Mike_Elliott_(saxophonist)> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v0 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Band>. ?result <http://xmlns.com/foaf/0.1/name> ?v4 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. <http://dbpedia.org/resource/Alan_Warner_(musician)> <http://dbpedia.org/ontology/associatedMusicalArtist> ?v0 . <http://dbpedia.org/resource/Alan_Warner_(musician)> <http://dbpedia.org/property/birthName> ?v4 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?alanWarnerBand ?alanWarnerBirthName ?mikeElliottBand WHERE {
  # Find Alan Warner's birth name and band
  ?alanWarner a dbo:Musician ;
              foaf:name ""Alan Warner"" ;
              dbo:birthName ?alanWarnerBirthName .
  
  ?band a dbo:MusicalGroup, dbo:Organization ;
        dbo:member ?alanWarner .

  # Find Mike Elliott's associated band
  ?mikeElliott a dbo:Musician ;
               foaf:name ""Mike Elliott"" .
  
  ?mikeBand a dbo:MusicalGroup ;
            dbo:member ?mikeElliott .

  BIND(?band AS ?alanWarnerBand)
}
```",5,8,6,2,3,3,3,71,0,0,1,0,0.0,0
839,46,val,"Give me the band of the member of Böhse Onkelz and band of the person born, that is a musical artist, as the persona of Kevin Russell (musician).",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/bandMember> ?v4 . ?v1 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . <http://dbpedia.org/resource/Kevin_Russell_(musician)> <http://xmlns.com/foaf/0.1/givenName> ?v2 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. <http://dbpedia.org/resource/Böhse_Onkelz> <http://dbpedia.org/ontology/bandMember> ?v4 . ?v1 <http://dbpedia.org/property/birthName> ?v2 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?band1 ?band2 WHERE {
  # Find a member of Böhse Onkelz and their other bands
  ?member dbo:memberOfBand dbr:Böhse_Onkelz .
  OPTIONAL { ?member dbo:memberOfBand ?otherBand . FILTER(?otherBand != dbr:Böhse_Onkelz) }
  
  # Kevin Russell's band
  dbr:Kevin_Russell dbo:birthPlace ?place ;
                    a dbo:MusicalArtist .
  ?kevinRussellBand dbo:leadMember dbr:Kevin_Russell .

  BIND(IF(BOUND(?otherBand), ?otherBand, ""No other band found"") AS ?band1)
  BIND(dbo:leadMember ?kevinRussellBand AS ?band2)

}
```",5,6,6,3,2,3,3,71,0,0,1,0,0.0,0
926,55,val,"Give me the child of the father, that is a royalty, of Mustafa III and father of the father of Abdulaziz and successor of the child of Ahmed III.",SELECT ?result WHERE { ?v0 <http://dbpedia.org/ontology/child> ?result . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v2 <http://dbpedia.org/property/father> ?result . <http://dbpedia.org/resource/Abdulaziz> <http://dbpedia.org/property/father> ?v2 . <http://dbpedia.org/resource/Mustafa_III> <http://dbpedia.org/property/father> ?v0 . ?v5 <http://dbpedia.org/ontology/successor> ?result . ?v5 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Ahmed_III> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?child WHERE {
  # Mustafa III's father
  dbr:Mustafa_III dbo:father dbr:Mahmud_I .
  
  # Mahmud I's children who are royalty (Sultans)
  dbr:Mahmud_I dbo:child ?sultan .
  ?sultan a dbo:Sultan .

  # Mehmed V, Abdulaziz's grandfather
  dbr:Abdulaziz dbo:father dbr:Vahideddin .
  dbr:Vahideddin dbo:father dbr:Mehmed_V .

  # Ahmed III's child and successor
  dbr:Ahmed_III dbo:child ?ahmedChild .
  ?sultan dbo:succeededBy ?ahmedChild .

  # Find the child of Mahmud I who is a Sultan and father of Mehmed V
  ?sultan dbo:father dbr:Mehmed_V .
  
  BIND(?sultan AS ?child)
}
```",6,7,7,2,3,3,3,71,0,0,1,0,0.0,0
443,21,val,Give me the birthplace of Ulf Lundell and landmark at elevation of 28 and birthplace of the work of yes.,"SELECT ?result WHERE { ?v1 <http://dbpedia.org/property/author> ""yes""@en . <http://dbpedia.org/resource/Ulf_Lundell> <http://dbpedia.org/ontology/birthPlace> ?result . ?result <http://dbpedia.org/ontology/elevation> ""28""^^<http://www.w3.org/2001/XMLSchema#integer> . ?v1 <http://dbpedia.org/ontology/birthPlace> ?result . }","```sparql
# Query 1: Birthplace of Ulf Lundell
SELECT ?birthPlace WHERE {
  dbpedia:Ulf_Lundell dbo:birthPlace ?birthPlace .
}

# Query 2: Landmark at Elevation of 28 (assuming meters)
SELECT ?landmark ?elevation WHERE {
  ?landmark a dbo:Landmark ;
            dbo:elevationAboveSeaLevel ?elevation .
  FILTER (?elevation = ""28""^^xsd:integer) # Assuming elevation is in meters
}

# Query 3: Birthplace of the Work of Yes (assuming an album or song)
SELECT ?work ?productionLocation WHERE {
  ?work dbo:artist dbpedia:Yes ;
        dbo:productionLocation ?productionLocation .
  FILTER regex(str(?work), ""Yes"") # Assuming we are looking for works by Yes
}
```",4,4,5,2,3,2,3,28,0,0,1,0,0.0,0
98,19,val,Give me the entity in Philippines and region of the time zone of Lopez Jaena and birth place of Paolo Ballesteros.,SELECT ?result WHERE { <http://dbpedia.org/resource/Lopez_Jaena> <http://dbpedia.org/ontology/timeZone> ?v3 . <http://dbpedia.org/resource/Paolo_Ballesteros> <http://dbpedia.org/ontology/birthPlace> ?result . ?result <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Philippines> . ?result <http://dbpedia.org/ontology/timeZone> ?v3 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT DISTINCT ?entityLopezJaena ?timeZoneRegion ?birthPlacePaoloBallesteros WHERE {
  # Find the entity related to Lopez Jaena in the Philippines
  ?entityLopezJaena dbo:country dbr:Philippines .
  ?entityLopezJaena rdfs:label ""Lopez""@en .
  
  # Get the time zone region for this entity
  OPTIONAL { ?entityLopezJaena dbp:timeZoneRegion ?timeZoneRegion . }
  
  # Find the birthplace of Paolo Ballesteros
  ?paoloBallesteros dbo:birthPlace ?birthPlacePaoloBallesteros .
  ?paoloBallesteros rdfs:label ""Paolo Ballesteros""@en .
}
```",4,4,5,2,3,2,3,28,0,0,2,0,0.0,0
124,40,val,"Give me the military force of Battle of Tamai and commander in the war, that is a societal event and a military conflict, of the reference, that is Australian and an organisation and a military unit, to 'A' Battery, Royal Australian Artillery and military force of Battle of Atbara.","SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/commander> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?result <http://dbpedia.org/ontology/battle> <http://dbpedia.org/resource/Battle_of_Atbara> . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v2 <http://xmlns.com/foaf/0.1/name> ""'A' Battery, Royal Australian Artillery""@en . ?v2 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Australia>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?v2 <http://dbpedia.org/ontology/battle> ?v1 . ?result <http://dbpedia.org/ontology/battle> <http://dbpedia.org/resource/Battle_of_Tamai> . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryUnit>. }","```sparql
# Query for military force and commander in the Battle of Tamai
SELECT ?militaryForce ?commander WHERE {
  ?battle dbpedia-owl:wikiPageRedirects dbp:Battle_of_Tamai .
  ?battle dbpedia-owl:participatingMilitaryUnit ?militaryForce .
  OPTIONAL { ?militaryForce dbpedia-owl:commander ?commander . }
}

# Query for the war involving the Battle of Tamai
SELECT ?war WHERE {
  ?battle dbpedia-owl:wikiPageRedirects dbp:Battle_of_Tamai .
  ?battle dbpedia-owl:partOfWar ?war .
  FILTER (strstarts(str(?war), ""Military conflict"") || strstarts(str(?war), ""Societal event""))
}

# Query for military force in the Battle of Atbara
SELECT ?militaryForce WHERE {
  ?battle dbpedia-owl:wikiPageRedirects dbp:Battle_of_Atbara .
  ?battle dbpedia-owl:participatingMilitaryUnit ?militaryForce .
}
```",5,10,6,3,3,3,3,71,0,0,1,0,0.0,0
715,43,val,"Give me the leader of Ministry of the Air (Spain) and commander in Rif War and commander in the force of the mayor, that is an office holder and a politician and a president, of 1933 Spanish general election.",SELECT ?result WHERE { <http://dbpedia.org/resource/Ministry_of_the_Air_(Spain)> <http://dbpedia.org/ontology/leader> ?result . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. <http://dbpedia.org/resource/Rif_War> <http://dbpedia.org/ontology/commander> ?result . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/President>. ?v4 <http://dbpedia.org/ontology/commander> ?result . ?v4 <http://dbpedia.org/ontology/commander> ?v0 . <http://dbpedia.org/resource/1933_Spanish_general_election> <http://dbpedia.org/property/leader> ?v0 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?person WHERE {
  ?person a dbo:Person .
  
  # Manuel Azaña's involvement in Ministry of the Air and Rif War
  OPTIONAL { ?ministry dbo:leader ?person . FILTER(STRSTARTS(STR(?ministry), ""http://dbpedia.org/resource/Ministry_of_the_Air_(Spain)"")) }
  OPTIONAL { ?rifWar dbo:commander ?person . FILTER(STRSTARTS(STR(?rifWar), ""http://dbpedia.org/resource/Rif_War"")) }

  # Political roles
  OPTIONAL { ?officeHolder dbo:officeHolder ?person . }
  OPTIONAL { ?politician dbo:politician ?person . }
  OPTIONAL { ?president dbo:electedAsPresident ?person . FILTER(STRSTARTS(STR(?president), ""http://dbpedia.org/resource/1933_Spanish_general_election"")) }

  # Ensure the person is Manuel Azaña
  VALUES ?person { dbr:Manuel_Azaña }
}
```",5,8,6,3,3,3,3,71,0,1,1,0.0,0.0,0
456,45,val,"Give me the spouse of Danielle Spencer (Australian actress) and professional in  and band of the band, that is a musical artist, of the band of Alan Doyle.","SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?v0 <http://dbpedia.org/ontology/associatedMusicalArtist> ?v1 . ?v1 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?result <http://dbpedia.org/property/occupation> """"@en . <http://dbpedia.org/resource/Danielle_Spencer_(Australian_actress)> <http://dbpedia.org/ontology/spouse> ?result . <http://dbpedia.org/resource/Alan_Doyle> <http://dbpedia.org/ontology/associatedMusicalArtist> ?v0 . }","```sparql
# Query to get the spouse of Danielle Spencer
SELECT ?spouse WHERE {
  wd:Q1234567 wdt:P26 ?spouse .
}

# Query to identify Alan Doyle's band and find associated bands with musical artists
SELECT DISTINCT ?band ?member WHERE {
  # Alan Doyle is a member of Great Big Sea
  wd:Q7890123 wdt:P106 wd:Q1345678 ; # Alan Doyle has occupation Musician
    wdt:P463 ?greatBigSeaBand .
  
  # Find bands associated with members of Great Big Sea
  ?member wdt:P463 ?band ;
          wdt:P31 wd:Q215627 . # member is a musical artist
  
  FILTER(?greatBigSeaBand = wd:Q9876543) # Assuming Q9876543 is the ID for Great Big Sea
}
```

Note: The placeholders `wd:Q1234567` and `wd:Q7890123` should be replaced with the actual DBpedia IDs for Danielle Spencer and Alan Doyle, respectively. Similarly, `wd:Q9876543` should be replaced with the correct ID for Great Big Sea.",5,6,6,3,3,3,3,71,0,0,1,0,0.0,0
573,49,val,"Give me the person decedent at the administration, that is a region, of Charlie Baker and parent of the author, that is a politician and an office holder, of the work of John Quincy Adams.","SELECT ?result WHERE { ?v0 <http://dbpedia.org/property/author> <http://dbpedia.org/resource/John_Quincy_Adams> . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v2 <http://dbpedia.org/property/governor> ""Charlie Baker""@en . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Region>. ?v0 <http://dbpedia.org/property/author> ?v1 . ?v1 <http://dbpedia.org/ontology/parent> ?result . ?result <http://dbpedia.org/ontology/deathPlace> ?v2 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?person WHERE {
  # Find Charlie Baker's predecessor as Governor of Massachusetts
  ?charlieBaker dbo:officeHolderOf dbr:Governor_of_Massachusetts .
  ?charlieBaker dbo:predecessor ?predecessor .

  # Ensure the predecessor is a person
  ?predecessor rdf:type dbo:Person .

  # Find John Quincy Adams' parent who was a politician and office holder
  dbr:John_Quincy_Adams dbo:parent ?parent .
  ?parent rdf:type dbo:Politician ;
          dbo:officeHolderOf ?office .

  # Match the predecessor with the parent of John Quincy Adams
  FILTER(?predecessor = ?parent)
}
```",5,8,6,3,2,3,3,71,0,0,2,0,0.0,0
773,40,val,Give me the parent of Carloman of Bavaria and parent of Charles the Fat and spouse of the father of the parent of Bernard (son of Charles the Fat).,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Carloman_of_Bavaria> . ?v1 <http://dbpedia.org/ontology/spouse> ?result . <http://dbpedia.org/resource/Charles_the_Fat> <http://dbpedia.org/ontology/parent> ?result . ?v2 <http://dbpedia.org/property/father> ?v1 . ?v2 <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Bernard_(son_of_Charles_the_Fat)> . },"```sparql
# Query for the parent of Carloman of Bavaria
SELECT ?parent WHERE {
  ?carloman dbo:parent ?parent .
  FILTER (str(?carloman) = ""Carloman_of_Bavaria"")
}

UNION

# Query for the parent of Charles the Fat
SELECT ?parent WHERE {
  ?charlesFat dbo:parent ?parent .
  FILTER (str(?charlesFat) = ""Charles_the_Fat"")
}

UNION

# Query for the spouse of the father of the parent of Bernard (son of Charles the Fat)
SELECT ?spouse WHERE {
  ?bernard dbo:parent ?charlesFat .
  FILTER (str(?bernard) = ""Bernard_(son_of_Charles_the_Fat)"")
  
  ?charlesFat dbo:parent ?grandParent .
  
  ?grandParent dbo:parent ?greatGrandParent .
  
  ?greatGrandParent dbo:spouse ?spouse .
}
```",5,5,6,3,3,3,3,71,0,0,1,0,0.0,0
166,17,val,"Give me the resting place of Gonzalo Queipo de Llano and entity in the territory administered, that is a country, from the reference to Madrid.","SELECT ?result WHERE { ?v0 <http://xmlns.com/foaf/0.1/name> ""Madrid""@en . ?v3 <http://dbpedia.org/ontology/capital> ?v0 . <http://dbpedia.org/resource/Gonzalo_Queipo_de_Llano> <http://dbpedia.org/ontology/restingPlace> ?result . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. ?result <http://dbpedia.org/ontology/country> ?v3 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?restingPlace ?administeredCountry WHERE {
  # Find the resting place of Gonzalo Queipo de Llano
  OPTIONAL { 
    dbr:Gonzalo_Queipo_de_Llano dbo:finalRestingPlace ?restingPlace .
  }
  
  # Find a country or territory administered by him with reference to Madrid
  OPTIONAL {
    dbr:Gonzalo_Queipo_de_Llano dbo:administeredCountry ?administeredEntity .
    ?administeredEntity dbo:capital dbr:Madrid .
    ?administeredEntity rdf:type dbo:Country .
    BIND(?administeredEntity AS ?administeredCountry)
  }
}
```",4,5,5,3,2,3,2,20,0,0,1,0,0.0,0
445,50,val,Give me the entity in the award of George H. Cameron and death place of the awardee of the establishment of 1820-03-10.,"SELECT ?result WHERE { ?v4 <http://dbpedia.org/property/awards> ?v0 . <http://dbpedia.org/resource/George_H._Cameron> <http://dbpedia.org/property/awards> ?v3 . ?v4 <http://dbpedia.org/ontology/deathPlace> ?result . ?result <http://dbpedia.org/ontology/country> ?v3 . ?v0 <http://dbpedia.org/ontology/foundingDate> ""1820-03-10""^^<http://www.w3.org/2001/XMLSchema#date> . }","```sparql
# Step 1: Find the award associated with George H. Cameron
SELECT ?award WHERE {
    ?person dbo:givenName ""George"" .
    ?person dbo:familyName ""H. Cameron"" .
    ?person dbo:awards ?award .
}

# Step 2: Identify the establishment on 1820-03-10 and its awardee
SELECT ?entity ?awardee WHERE {
    ?entity dbo:dateEstablished ""1820-03-10""^^xsd:date .
    ?entity dbo:awards ?award .
    ?award dbo:recipient ?awardee .
}

# Step 3: Find the death place of the awardee from step 2
SELECT ?deathPlace WHERE {
    ?awardee dbo:deathPlace ?deathPlace .
}
```

Note: This is a conceptual breakdown. The actual SPARQL query might need adjustments based on available data in DBpedia and specific property paths.",5,5,6,3,2,3,3,71,0,0,2,0,0.0,0
508,15,val,"Give me the birthplace of Ma Bufang and birthplace of the commander, that is a politician, in the war, that is a military conflict and a societal event and an event, of Hayao Tada.",SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v0 <http://dbpedia.org/ontology/commander> ?v1 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. <http://dbpedia.org/resource/Ma_Bufang> <http://dbpedia.org/ontology/birthPlace> ?result . ?v1 <http://dbpedia.org/ontology/birthPlace> ?result . <http://dbpedia.org/resource/Hayao_Tada> <http://dbpedia.org/ontology/battle> ?v0 . },"```sparql
SELECT ?maBufangBirthplace ?hayaoTadaBirthplace WHERE {
  dbpedia:Ma_Bufang dbo:birthPlace ?maBufangBirthplace .
  dbpedia:Hayao_Tada dbo:birthPlace ?hayaoTadaBirthplace .
}
```",4,8,5,3,2,3,2,20,0,0,3,0,0.0,0
47,49,val,"Give me the office of the administration of Jagdeep Dhankhar and office of the awardee of the entity, that is an award, in India.",SELECT ?result WHERE { ?v1 <http://dbpedia.org/property/office> ?result . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Award>. ?v2 <http://dbpedia.org/property/governor> <http://dbpedia.org/resource/Jagdeep_Dhankhar> . ?v0 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/India> . ?v2 <http://dbpedia.org/property/office> ?result . ?v1 <http://dbpedia.org/property/awards> ?v0 . },"```sparql
# Query to get the office of Jagdeep Dhankhar
SELECT ?office WHERE {
  wd:Q1234568 dbo:positionHeld ?office .
}

UNION

# Query to get the office associated with Bharat Ratna awardees
SELECT DISTINCT ?awardOffice WHERE {
  # Assuming we are looking at a specific award like Bharat Ratna
  wd:Q1234567 dbo:recipient ?person .
  
  # Get the typical office of such recipients (e.g., President, Prime Minister)
  ?person dbo:office ?awardOffice .
}
```

Note: Replace `wd:Q1234568` with the actual DBpedia entity ID for Jagdeep Dhankhar and `wd:Q1234567` with the entity ID for Bharat Ratna.",5,6,6,3,2,3,3,71,0,0,11,0,0.0,0
826,52,val,"Give me the successor of the child, that is a royalty, of Louis I, Grand Duke of Hesse and spouse of the child of the father of Anna Magdalena Appel and predecessor of Louis IV, Grand Duke of Hesse.","SELECT ?result WHERE { ?v2 <http://dbpedia.org/ontology/spouse> ?result . ?result <http://dbpedia.org/ontology/successor> <http://dbpedia.org/resource/Louis_IV,_Grand_Duke_of_Hesse> . ?v2 <http://dbpedia.org/property/father> ?v3 . ?v5 <http://dbpedia.org/ontology/successor> ?result . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. <http://dbpedia.org/resource/Louis_I,_Grand_Duke_of_Hesse> <http://dbpedia.org/ontology/child> ?v5 . <http://dbpedia.org/resource/Anna_Magdalena_Appel> <http://dbpedia.org/property/father> ?v3 . }","```sparql
SELECT ?successor WHERE {
  # Louis I, Grand Duke of Hesse
  wd:Q123456 rdfs:label ""Louis I, Grand Duke of Hesse""@en .
  
  # His child who is royalty
  ?child wdt:P31/wdt:P279* wd:Q5 ; # Instance of human and subclass of human
         wdt:P22 wd:Q123456 . # Parent is Louis I

  ?royalChild wdt:P31/wdt:P279* wd:Q34629 ; # Instance of monarch
              wdt:P40 ?child . # Child of the royal child

  # Spouse of this royal child
  ?spouse wdt:P26 ?royalChild .

  # Anna Magdalena Appel's father (Johann Georg Bach)
  wd:Q1234567 rdfs:label ""Johann Georg Bach""@en .
  
  # Predecessor of Louis IV, Grand Duke of Hesse
  wd:Q765432 rdfs:label ""Louis III, Grand Duke of Hesse""@en ;
             wdt:P39 wd:Q765432 . # Held office

  # Child of Johann Georg Bach and predecessor of Louis IV
  ?childOfJGB wdt:P22 wd:Q1234567 .
  ?predecessorChild wdt:P40 wd:Q765432 .

  # Find the successor of this child
  ?successor wdt:P57 ?predecessorChild .
}
```",6,7,7,3,3,3,3,71,0,0,1,0,0.0,0
417,54,val,"Give me the child of the father of the leader, that is a royalty, of Colony of Greenland and spouse of the parent, that is a royalty, of Count Ingolf of Rosenborg and child of Alexandrine of Mecklenburg-Schwerin.",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/parent> <http://dbpedia.org/resource/Alexandrine_of_Mecklenburg-Schwerin> . ?v3 <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Count_Ingolf_of_Rosenborg> . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?result <http://dbpedia.org/ontology/spouse> ?v3 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?result <http://dbpedia.org/property/father> ?v5 . <http://dbpedia.org/resource/Colony_of_Greenland> <http://dbpedia.org/property/leader> ?v0 . ?v0 <http://dbpedia.org/property/father> ?v5 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?child WHERE {
  # Step 1: Identify the leader of the Colony of Greenland
  ?leader dbo:country dbr:Greenland .
  
  # Step 2: Determine the father of that leader and his child who is royalty
  ?father dbo:child ?leader .
  ?child dbo:parent ?father .
  ?child a dbo:Monarch .

  # Step 3: Identify Count Ingolf of Rosenborg's parent who is royalty
  dbr:Count_Ingolf_of_Rosenborg dbo:parent ?royalParent .
  ?royalParent a dbo:RoyalFamilyMember .

  # Step 4: Find the spouse of that royal parent
  ?spouse dbo:spouse ?royalParent .

  # Step 5: Identify Alexandrine of Mecklenburg-Schwerin's child
  dbr:Alexandrine_of_Mecklenburg-Schwerin dbo:child ?alexChild .

  # Step 6: Find the common individual
  FILTER (?child = ?spouse && ?child = ?alexChild)
}
```",6,8,7,3,3,3,3,71,0,0,1,0,0.0,0
976,45,val,Give me the office of Meral Akşener and office of Mustafa Şentop and office of the person born as the birth name of Naci Bostancı.,SELECT ?result WHERE { <http://dbpedia.org/resource/Mustafa_Şentop> <http://dbpedia.org/property/office> ?result . ?v0 <http://dbpedia.org/property/birthName> ?v3 . <http://dbpedia.org/resource/Naci_Bostancı> <http://dbpedia.org/property/birthName> ?v3 . ?v0 <http://dbpedia.org/property/office> ?result . <http://dbpedia.org/resource/Meral_Akşener> <http://dbpedia.org/property/office> ?result . },"```sparql
# Query for Meral Akşener's office
SELECT ?office WHERE {
  dbpedia:en:Meral_Akşener dbo:office ?office .
}

UNION

# Query for Mustafa Şentop's office
SELECT ?office WHERE {
  dbpedia:tr:Mustafa_Şentop dbo:office ?office .
}

UNION

# Query to find Naci Bostancı's birth name and the corresponding person's office
{
  SELECT ?birthName WHERE {
    dbpedia:en:Naci_Bostancı dbo:birthName ?birthName .
  }
  
  # Assuming we have found the birth name, query for the office of that person
  SELECT ?office WHERE {
    ?person rdfs:label ?birthName .
    FILTER (lang(?birthName) = 'en') # Ensure language consistency if needed
    ?person dbo:office ?office .
  }
}
```",5,5,6,3,3,3,3,71,0,0,1,0,0.0,0
216,49,val,"Give me the player in the coach of Croatia national under-21 football team and team of the person born, that is a sports manager and a soccer manager and a soccer player, on the death of Pavel Vezhinov.",SELECT ?result WHERE { <http://dbpedia.org/resource/Pavel_Vezhinov> <http://dbpedia.org/ontology/deathDate> ?v0 . <http://dbpedia.org/resource/Croatia_national_under-21_football_team> <http://dbpedia.org/ontology/coach> ?v2 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerManager>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerPlayer>. ?v2 <http://dbpedia.org/ontology/team> ?result . ?v1 <http://dbpedia.org/ontology/birthDate> ?v0 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsManager>. ?result <http://dbpedia.org/ontology/coach> ?v1 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?coach ?birthPlace ?deathDate
WHERE {
  # Find the coach of Croatia national under-21 football team
  ?team dbo:coach ?coach .
  FILTER(STRSTARTS(STR(?team), ""Croatia national under-21 football team""))

  # Get birthplace and roles of the coach
  ?coach dbp:birthPlace ?birthPlace ;
         a ?role1, ?role2, ?role3 .

  # Ensure the person is a sports manager, soccer manager, and soccer player
  VALUES (?role1 ?role2 ?role3) {
    (dbr:Soccer_manager dbr:Sports_manager dbr:Soccer_player)
  }

  # Find Pavel Vezhinov's death date
  OPTIONAL { 
    dbr:Pavel_Vezhinov dbo:dateOfDeath ?deathDate .
  }
}
```",5,8,6,3,2,3,3,71,0,0,1,0,0.0,0
933,50,val,"Give me the reference to the birth name of the professional in Musician and band of the band, that is a group and a band and an organisation, of Alan Warner (musician).",SELECT ?result WHERE { ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Band>. ?v1 <http://dbpedia.org/property/birthName> ?v3 . ?v0 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v1 <http://dbpedia.org/property/occupation> <http://dbpedia.org/resource/Musician> . <http://dbpedia.org/resource/Alan_Warner_(musician)> <http://dbpedia.org/ontology/associatedMusicalArtist> ?v0 . ?result <http://xmlns.com/foaf/0.1/name> ?v3 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Group>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT ?birthName WHERE {
  ?musician a dbo:MusicArtist ;
            foaf:name ""Alan Warner"" .
  ?band a dbo:Band ;
        dbo:musicalArtist ?musician .
  FILTER (str(?band) = str(dbpedia:The_Waterboys))
  
  OPTIONAL { 
    ?musician foaf:givenName ?firstName .
    ?musician foaf:familyName ?lastName .
    BIND(CONCAT(?firstName, "" "", ?lastName) AS ?birthName)
  }
}
```",5,8,6,3,2,3,3,71,0,0,1,0,0.0,0
445,46,val,"Give me the death place of the awardee of Royal Astronomical Society and entity in the residence, that is a country, of the resident, that is an athlete, of Great Britain.",SELECT ?result WHERE { ?v2 <http://dbpedia.org/property/residence> <http://dbpedia.org/resource/Great_Britain> . ?v4 <http://dbpedia.org/ontology/deathPlace> ?result . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Athlete>. ?result <http://dbpedia.org/ontology/location> ?v1 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. ?v2 <http://dbpedia.org/property/residence> ?v1 . ?v4 <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/Royal_Astronomical_Society> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?deathPlace WHERE {
  ?person dbo:awardReceived dbr:Royal_Astronomical_Society_Award .
  
  OPTIONAL { 
    ?athlete dbo:nationality dbr:United_Kingdom ;
             dbo:residenceCountry ?country .
    
    ?person dbp:residence ?location .
    ?location dbo:country ?country .
  }
  
  ?person dbo:deathPlace ?deathPlace .
}
```",5,7,6,3,2,3,3,71,0,0,1,0,0.0,0
874,16,val,"Give me the band of the writer, that is an artist and a musical artist, of Mezzanine (album) and band of the band member of The Jones Gang.",SELECT ?result WHERE { <http://dbpedia.org/resource/Mezzanine_(album)> <http://dbpedia.org/property/writer> ?v2 . ?v3 <http://dbpedia.org/ontology/associatedMusicalArtist> <http://dbpedia.org/resource/The_Jones_Gang> . ?result <http://dbpedia.org/ontology/bandMember> ?v2 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. ?result <http://dbpedia.org/ontology/bandMember> ?v3 . },"```sparql
SELECT ?band1 ?band2 WHERE {
  # Find the band associated with the album Mezzanine
  ?album dcterms:title ""Mezzanine""@en .
  ?album dbo:artist ?member .
  ?member foaf:name ?name .
  FILTER(?name IN (""Robert Del Naja"", ""Grant Marshall"", ""Daddy G"")) .
  ?member dbo:musicArtist ?band1 .

  # Find the band associated with a member of The Jones Gang
  ?theJonesGang dcterms:title ""The Jones Gang""@en .
  ?theJonesGang dbo:bandMember ?jonesGangMember .
  ?jonesGangMember foaf:name ""Steve Jones"" .
  ?jonesGangMember dbo:musicArtist ?band2 .
}
```",4,6,5,2,2,3,2,20,0,0,1,0,0.0,0
83,17,val,"Give me the ruling party in Fortaleza and party of the governor of the commander, that is a politician, in Central African Republic Civil War.",SELECT ?result WHERE { <http://dbpedia.org/resource/Fortaleza> <http://dbpedia.org/property/leaderParty> ?result . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. <http://dbpedia.org/resource/Central_African_Republic_Civil_War> <http://dbpedia.org/ontology/commander> ?v0 . ?v3 <http://dbpedia.org/ontology/party> ?result . ?v0 <http://dbpedia.org/property/governor> ?v3 . },"```sparql
# Query to get the ruling party in Fortaleza, Brazil
SELECT ?party WHERE {
  ?mayor dbo:office dbo:Mayor ;
         dbo:city dbr:Fortaleza .
  ?mayor dbo:politicalParty ?party .
}

UNION

# Query to get the political party of a key politician involved in the Central African Republic Civil War
SELECT ?party WHERE {
  ?person dbo:occupation dbo:Politician ;
          dbo:country dbr:Central_African_Republic ;
          dbo:politicalAffiliation ?party .
  FILTER(CONTAINS(LCASE(?person), ""central african republic civil war""))
}
```",4,5,5,3,2,3,2,20,0,0,1,0,0.0,0
456,53,val,"Give me the band of the band, that is a musical artist, of Dean Brody and spouse of the actor of the movie, that is a work and a television show, with Ross Newton and professional in .","SELECT ?result WHERE { ?v3 <http://dbpedia.org/property/starring> <http://dbpedia.org/resource/Ross_Newton> . <http://dbpedia.org/resource/Dean_Brody> <http://dbpedia.org/ontology/associatedMusicalArtist> ?v1 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/TelevisionShow>. ?v2 <http://dbpedia.org/ontology/spouse> ?result . ?result <http://dbpedia.org/property/occupation> """"@en . ?v1 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?v3 <http://dbpedia.org/property/starring> ?v2 . }","```sparql
# Step 1: Find Dean Brody's band
SELECT ?band WHERE {
  wd:Q123456 wdt:P106 wd:Q33999 . # Dean Brody is a musical artist
  wd:Q123456 wdt:P175 ?band .     # Dean Brody's band
}

# Step 2: Identify a movie or TV show with Ross Newton and another actor
SELECT DISTINCT ?actor WHERE {
  ?work wdt:P161 wd:Q56789 .      # Work featuring Ross Newton (replace Q56789 with Ross Newton's DBpedia ID)
  ?work wdt:P162 ?actor .         # Another actor in the same work
}

# Step 3: Find the spouse of that other actor
SELECT DISTINCT ?spouse WHERE {
  ?actor wdt:P26 ?spouse .        # Actor's spouse
}

# Step 4: Determine the profession of the spouse
SELECT DISTINCT ?profession WHERE {
  ?spouse wdt:P106 ?occupation .  # Spouse's occupation
  ?occupation rdfs:label ?profession .
  FILTER (lang(?profession) = ""en"")
}
```

Note: Replace `wd:Q123456` with Dean Brody's DBpedia ID and `wd:Q56789` with Ross Newton's DBpedia ID. The queries assume that the necessary properties (`P106`, `P175`, `P161`, `P162`, `P26`) are used in DBpedia to represent these relationships.",6,9,7,3,3,3,3,71,0,0,1,0,0.0,0
417,51,val,"Give me the child of the father of Frederick IX of Denmark and child of the child, that is a royalty, of the parent, that is a royalty, of Alexandrine of Mecklenburg-Schwerin.",SELECT ?result WHERE { <http://dbpedia.org/resource/Alexandrine_of_Mecklenburg-Schwerin> <http://dbpedia.org/ontology/parent> ?v1 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v2 <http://dbpedia.org/property/father> ?v1 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?result <http://dbpedia.org/property/father> ?v4 . ?result <http://dbpedia.org/ontology/parent> ?v2 . <http://dbpedia.org/resource/Frederick_IX_of_Denmark> <http://dbpedia.org/property/father> ?v4 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?person WHERE {
  # Frederick IX's father
  ?father dbo:spouse dbr:Frederick_IX_of_Denmark .
  ?father dbo:child dbr:Christian_X_of_Denmark .

  # Christian X's children
  ?child1 dbo:parent dbr:Christian_X_of_Denmark .
  
  # Alexandrine of Mecklenburg-Schwerin's royal parent
  ?alexParent dbo:spouse dbr:Alexandrine_of_Mecklenburg-Schwerin .
  ?alexChild dbo:parent ?alexParent .

  # Child of the child (royalty) of Princess Cecilie
  ?princessCecilieChild dbo:parent dbr:Cecilie_of_Mecklenburg-Schwerin .
  
  # Find common person who is a royalty and fits both criteria
  FILTER (?child1 = ?person && ?princessCecilieChild = ?person)
}
```",5,7,6,3,2,3,3,71,0,0,2,0,0.0,0
36,20,val,Give me the person born in the birth year of Deanne Bray and actor of Being Mrs Elliot and person born as Ayo Makun.,"SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/birthYear> ?v1 . <http://dbpedia.org/resource/Being_Mrs_Elliot> <http://dbpedia.org/ontology/starring> ?result . <http://dbpedia.org/resource/Deanne_Bray> <http://dbpedia.org/ontology/birthYear> ?v1 . ?result <http://dbpedia.org/property/birthName> ""Ayo Makun""@en . }","```sparql
# Step 1: Find Deanne Bray's birth year
SELECT ?birthYear WHERE {
    dbpedia:Deanne_Bray dbo:birthDate ?date .
    BIND(YEAR(?date) AS ?birthYear)
}

# Step 2: Find actors of ""Being Mrs Elliot""
SELECT DISTINCT ?actor WHERE {
    dbpedia:Being_Mrs_Elliot dbo:starring ?actor .
}

# Step 3: Find person born as Ayo Makun
SELECT ?person WHERE {
    ?person rdfs:label ""Ayo Makun""@en .
    ?person foaf:name ""Ayo Makun"" .
}

# Final Query: Combine all conditions to find the matching person
SELECT DISTINCT ?person WHERE {
    # Deanne Bray's birth year
    SELECT ?birthYear WHERE {
        dbpedia:Deanne_Bray dbo:birthDate ?date .
        BIND(YEAR(?date) AS ?birthYear)
    } LIMIT 1

    # Actor of ""Being Mrs Elliot""
    ?actor dbo:starring dbpedia:Being_Mrs_Elliot .

    # Person born as Ayo Makun
    ?person rdfs:label ""Ayo Makun""@en .
    ?person foaf:name ""Ayo Makun"" .

    # Check if the person matches all criteria
    ?person dbo:birthDate ?date .
    BIND(YEAR(?date) AS ?birthYearPerson)

    FILTER (?birthYear = ?birthYearPerson)
}
```",4,4,5,2,3,2,3,28,0,0,1,0,0.0,0
507,48,val,Give me the professional in the profession of Guy Ferland and spouse of the person born as the birth name of Anne V. Coates.,SELECT ?result WHERE { <http://dbpedia.org/resource/Guy_Ferland> <http://dbpedia.org/property/occupation> ?v1 . ?result <http://dbpedia.org/property/occupation> ?v1 . <http://dbpedia.org/resource/Anne_V._Coates> <http://dbpedia.org/property/birthName> ?v3 . ?result <http://dbpedia.org/ontology/spouse> ?v2 . ?v2 <http://dbpedia.org/property/birthName> ?v3 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?professional WHERE {
  # Find Guy Ferland's profession
  ?guyFerland a dbo:Person ;
              foaf:name ""Guy Ferland"" .
  ?guyFerland dbo:profession ?profession .

  # Find Anne V. Coates' spouse
  ?anneVCoates a dbo:Person ;
               foaf:name ""Anne V. Coates""@en .
  ?anneVCoates dbp:spouse ?spouse .

  # Match the profession and spouse
  ?professional a dbo:Person ;
                dbo:profession ?profession ;
                dbp:spouse ?anneVCoates .
}
```",5,5,6,3,2,3,3,71,0,0,1,0,0.0,0
933,49,val,"Give me the band of the band, that is a group and a band and an organisation, of the person born, that is a musical artist, on 1947-04-21 and band of the band of Alan Warner (musician).","SELECT ?result WHERE { ?v2 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v4 <http://dbpedia.org/ontology/birthDate> ""1947-04-21""^^<http://www.w3.org/2001/XMLSchema#date> . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Group>. ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?v4 <http://dbpedia.org/ontology/associatedMusicalArtist> ?v0 . <http://dbpedia.org/resource/Alan_Warner_(musician)> <http://dbpedia.org/ontology/associatedMusicalArtist> ?v2 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Band>. ?v0 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . }","```sparql
# Step 1: Find the musical artist born on 1947-04-21
SELECT ?person WHERE {
  ?person dbo:birthDate ""1947-04-21""^^xsd:date .
  ?person rdf:type dbo:MusicalArtist .
}

# Assuming the result of step 1 is stored in a variable called $artist

# Step 2: Find the band associated with this person
SELECT ?band WHERE {
  <$artist> dbo:member <http://dbpedia.org/resource/Category:Bands_with_a_person_as_member> .
  ?band rdf:type dbo:Band .
}

# Assuming the result of step 2 is stored in a variable called $band

# Step 3: Find the band associated with Alan Warner (musician)
SELECT ?alanWarnerBand WHERE {
  <http://dbpedia.org/resource/Alan_Warner_(musician)> dbo:member <http://dbpedia.org/resource/Category:Bands_with_a_person_as_member> .
  ?alanWarnerBand rdf:type dbo:Band .
}

# Assuming the result of step 3 is stored in a variable called $alanWarnerBand

# Step 4: Find if there's an organization that is both a group and a band related to the band from step 2
SELECT ?organization WHERE {
  <$band> dbo:member <http://dbpedia.org/resource/Category:Bands_with_a_person_as_member> .
  ?organization rdf:type dbo:Band, dbo:Organization .
}
```",5,9,6,3,2,3,3,71,0,0,4,0,0.0,0
465,49,val,"Give me the successor of the child of Alfonso I d'Este and successor of the child, that is a royalty, of the parent of Charles Orlando, Dauphin of France.","SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. <http://dbpedia.org/resource/Charles_Orlando,_Dauphin_of_France> <http://dbpedia.org/ontology/parent> ?v0 . ?v2 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Alfonso_I_d'Este> . ?v2 <http://dbpedia.org/ontology/successor> ?result . ?v0 <http://dbpedia.org/ontology/child> ?v1 . ?v1 <http://dbpedia.org/ontology/successor> ?result . }","```sparql
# Step 1: Find a notable child of Alfonso I d'Este
SELECT ?child WHERE {
    ?alfonso dbo:child ?child .
    ?alfonso rdfs:label ""Alfonso I d'Este""@en .
}

# Step 2: Find the successor of that child
SELECT ?successor WHERE {
    ?child dbo:successor ?successor .
    FILTER(?child IN (SELECT ?child WHERE {
        ?alfonso dbo:child ?child .
        ?alfonso rdfs:label ""Alfonso I d'Este""@en .
    }))
}

# Step 3: Identify the parent of Charles Orlando, Dauphin of France
SELECT ?parent WHERE {
    ?charlesOrlando dbo:parent ?parent .
    ?charlesOrlando rdfs:label ""Charles Orlando, Dauphin of France""@en .
}

# Step 4: Find a child of that parent who is royalty
SELECT ?royalChild WHERE {
    ?parent dbo:child ?royalChild .
    FILTER(?parent IN (SELECT ?parent WHERE {
        ?charlesOrlando dbo:parent ?parent .
        ?charlesOrlando rdfs:label ""Charles Orlando, Dauphin of France""@en .
    }))
    ?royalChild rdf:type dbo:Monarch .
}

# Step 5: Determine the successor of that royal child
SELECT ?successor WHERE {
    ?royalChild dbo:successor ?successor .
    FILTER(?royalChild IN (SELECT ?royalChild WHERE {
        ?parent dbo:child ?royalChild .
        FILTER(?parent IN (SELECT ?parent WHERE {
            ?charlesOrlando dbo:parent ?parent .
            ?charlesOrlando rdfs:label ""Charles Orlando, Dauphin of France""@en .
        }))
        ?royalChild rdf:type dbo:Monarch .
    }))
}
```",5,6,6,3,2,3,3,71,0,0,1,0,0.0,0
456,46,val,"Give me the professional in the alter ego of The Shadow and spouse of the actor of the movie, that is a work and a television show, with Ross Newton.",SELECT ?result WHERE { ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?result <http://dbpedia.org/property/occupation> ?v4 . <http://dbpedia.org/resource/The_Shadow> <http://dbpedia.org/property/alterEgo> ?v4 . ?v2 <http://dbpedia.org/property/starring> <http://dbpedia.org/resource/Ross_Newton> . ?v2 <http://dbpedia.org/property/starring> ?v1 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/TelevisionShow>. ?v1 <http://dbpedia.org/ontology/spouse> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?spouse WHERE {
  ?actor a dbo:Actor ;
         foaf:name ""Ross Newton""@en .
  OPTIONAL { 
    ?film dbo:starring ?actor .
    ?film dbo:title ?title .
    FILTER(CONTAINS(LCASE(?title), ""the shadow""))
  }
  ?actor dbo:spouse ?spouse .
}
```",5,7,6,3,2,3,3,71,0,0,2,0,0.0,0
554,15,val,Give me the leader of the administration of the party member of Independent politician and leader of Portuguese Mozambique.,SELECT ?result WHERE { <http://dbpedia.org/resource/Portuguese_Mozambique> <http://dbpedia.org/property/leader> ?result . ?v1 <http://dbpedia.org/property/leader> ?result . ?v0 <http://dbpedia.org/ontology/party> <http://dbpedia.org/resource/Independent_politician> . ?v1 <http://dbpedia.org/property/leader> ?v0 . },"```sparql
SELECT ?leader ?administrationLeader WHERE {
  ?person dbo:occupation dbr:President_of_Mozambique .
  ?person foaf:name ""Samora Machel""@en .
  ?person dbo:partyMemberOf dbr:FRELIMO .
  
  OPTIONAL {
    ?person dbo:spouse ?leader .
    ?leader dbo:occupation dbr:Prime_Minister_of_Mozambique .
  }
  
  OPTIONAL {
    ?administrationLeader dbo:positionHeld dbr:Prime_Minister_of_Mozambique ;
                          dbo:heldBy ?person .
  }
}
```",4,4,5,3,2,3,2,20,0,0,3,0,0.0,0
888,16,val,"Give me the commander in the force, that is a societal event and an event, of Serhiy Kotenko and awardee of the award of Oleksandr Syrskyi.",SELECT ?result WHERE { <http://dbpedia.org/resource/Oleksandr_Syrskyi> <http://dbpedia.org/property/awards> ?v3 . ?v2 <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Serhiy_Kotenko> . ?v2 <http://dbpedia.org/ontology/commander> ?result . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?result <http://dbpedia.org/property/awards> ?v3 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?force WHERE {
  # Find Serhiy Kotenko's role as a commander in a force
  ?kotenko dbo:positionTitle ?commanderRole .
  ?kotenko foaf:name ""Serhiy Kotenko"" .

  # The force he commands should be linked to both a societal event and an event
  ?force dbo:commander ?kotenko ;
         dbo:societalEvent ?societalEvent ;
         dbo:event ?event .

  # Find the award associated with Oleksandr Syrskyi
  ?syrskyi dbo:awardReceived ?award .
  ?syrskyi foaf:name ""Oleksandr Syrskyi"" .

  # Ensure the force is linked to the award received by Oleksandr Syrskyi
  ?force dbo:awardee ?syrskyi .
}
```",4,6,5,2,2,3,2,20,0,0,1,0,0.0,0
417,45,val,"Give me the child of the child, that is a royalty, of the parent, that is a royalty, of Alexandrine of Mecklenburg-Schwerin and spouse of Princess Caroline-Mathilde of Denmark and child of Christian X of Denmark.",SELECT ?result WHERE { ?v1 <http://dbpedia.org/property/father> ?v0 . ?result <http://dbpedia.org/ontology/parent> ?v1 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. <http://dbpedia.org/resource/Alexandrine_of_Mecklenburg-Schwerin> <http://dbpedia.org/ontology/parent> ?v0 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?result <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Christian_X_of_Denmark> . ?result <http://dbpedia.org/ontology/spouse> <http://dbpedia.org/resource/Princess_Caroline-Mathilde_of_Denmark> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?grandchild WHERE {
  # Alexandrine of Mecklenburg-Schwerin's spouse
  ?spouse a dbo:Spouse ;
          dbo:spouse dbr:Alexandrine_of_Mecklenburg-Schwerin .

  # Spouse is child of Christian X and Princess Caroline-Mathilde
  ?spouse dbo:childOf dbr:Christian_X_of_Denmark .
  ?spouse dbo:childOf dbr:Princess_Caroline-Mathilde_of_Denmark .

  # Child of the spouse (Prince Harald)
  ?child a dbo:Child ;
        dbo:parent ?spouse .

  # Queen Margrethe II is the child of Prince Harald
  ?queen a dbo:Person ;
         rdfs:label ""Margrethe II""@en ;
         dbo:childOf ?child .

  # Crown Prince Frederik is the child of Queen Margrethe II
  ?grandchild a dbo:Person ;
              rdfs:label ""Frederik, Crown Prince of Denmark""@en ;
              dbo:parent ?queen .
}
```",5,7,6,3,3,3,3,71,0,0,1,0,0.0,0
93,16,val,"Give me the death place of the governor of Bob Bartlett and capital of the headquarter, that is a region and a settlement, of Lake Clark National Park and Preserve.",SELECT ?result WHERE { ?v3 <http://dbpedia.org/ontology/deathPlace> ?result . <http://dbpedia.org/resource/Lake_Clark_National_Park_and_Preserve> <http://dbpedia.org/ontology/location> ?v2 . <http://dbpedia.org/resource/Bob_Bartlett> <http://dbpedia.org/property/governor> ?v3 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Region>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. ?v2 <http://dbpedia.org/ontology/capital> ?result . },"```sparql
SELECT ?deathPlace ?capital WHERE {
  # Query to find Bob Bartlett's death place
  ?person dbo:birthName ""Bob Bartlett""@en .
  ?person dbo:deathPlace ?deathPlace .

  # Query to find the capital of Alaska, which is also a settlement
  dbpedia:Alaska dbo:capital ?capital .
  ?capital rdf:type dbo:PopulatedPlace .
}
```",4,6,5,2,2,3,2,20,0,0,1,0,0.0,0
582,50,val,"Give me the figure known as the nickname of Japan national football team and player in the father, that is an athlete and a soccer manager and a sports manager, of the child of Kazuaki Nagasawa.",SELECT ?result WHERE { ?v4 <http://dbpedia.org/ontology/team> ?result . ?result <http://dbpedia.org/property/nickname> ?v3 . ?v0 <http://dbpedia.org/property/father> ?v4 . ?v0 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Kazuaki_Nagasawa> . <http://dbpedia.org/resource/Japan_national_football_team> <http://dbpedia.org/property/nickname> ?v3 . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Athlete>. ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsManager>. ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerManager>. },"```sparql
# Step 1: Find Kazuaki Nagasawa's child who is an athlete or sports manager
SELECT ?child WHERE {
  ?person dbo:spouse dbpedia:Kazuaki_Nagasawa.
  ?person dbo:child ?child.
  OPTIONAL { ?child rdf:type dbo:Athlete . }
  OPTIONAL { ?child rdf:type dbo:SoccerManager . }
}

# Step 2: Find the nickname of Japan's national football team
SELECT ?nickname WHERE {
  dbpedia:Japan_national_football_team dbo:nickname ?nickname .
}

# Step 3: Identify a player with that nickname connected to Kazuaki Nagasawa
SELECT DISTINCT ?player WHERE {
  ?person dbo:spouse dbpedia:Kazuaki_Nagasawa.
  ?person dbo:child ?child.
  OPTIONAL { ?child rdf:type dbo:Athlete . }
  OPTIONAL { ?child rdf:type dbo:SoccerManager . }

  ?team dbo:nickname ?nickname .
  FILTER(?nickname = ""Bashamichi""^^xsd:string) # Assuming ""Bashamichi"" is the nickname

  ?player dbo:memberOfTeam ?team.
  ?player rdfs:label ?name.
  FILTER(CONTAINS(LCASE(?name), LCASE(?nickname)))
}
```",5,8,6,3,2,3,3,71,0,0,1,0,0.0,0
573,43,val,"Give me the person decedent at the residence, that is a settlement, of the professional, that is American, in Politician and parent of John Quincy Adams and person decedent at Massachusetts.","SELECT ?result WHERE { ?v0 <http://dbpedia.org/ontology/nationality> <http://dbpedia.org/resource/United_States>. ?v0 <http://dbpedia.org/property/occupation> ""Politician""@en . ?result <http://dbpedia.org/ontology/deathPlace> <http://dbpedia.org/resource/Massachusetts> . ?v0 <http://dbpedia.org/property/residence> ?v4 . <http://dbpedia.org/resource/John_Quincy_Adams> <http://dbpedia.org/ontology/parent> ?result . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. ?result <http://dbpedia.org/ontology/deathPlace> ?v4 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?personDecedentAtResidence ?otherPersonDecedentInMassachusetts
WHERE {
  # John Adams as the decedent at his residence, Quincy
  dbr:John_Adams dbo:deathPlace dbr:Quincy,_Massachusetts ;
                  dbp:nationality ""American"" ;
                  dbo:profession dbr:Politician .

  # Residence is a settlement
  dbr:Quincy,_Massachusetts a dbo:Settlement .

  # Another person who died in Massachusetts, e.g., Paul Revere
  ?otherPersonDecedentInMassachusetts dbo:deathPlace ?massDeathPlace ;
                                      dbp:nationality ""American"" .
  FILTER EXISTS { ?massDeathPlace rdfs:label ""Massachusetts""@en }
}
```",5,7,6,3,3,3,3,71,0,0,2,0,0.0,0
573,50,val,"Give me the parent of the author, that is a politician and an office holder, of Exchequer Standards and person decedent at the residence, that is a settlement, of the professional, that is American, in Politician.","SELECT ?result WHERE { ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. ?v0 <http://dbpedia.org/property/residence> ?v4 . <http://dbpedia.org/resource/Exchequer_Standards> <http://dbpedia.org/property/author> ?v3 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?result <http://dbpedia.org/ontology/deathPlace> ?v4 . ?v3 <http://dbpedia.org/ontology/parent> ?result . ?v0 <http://dbpedia.org/ontology/nationality> <http://dbpedia.org/resource/United_States>. ?v0 <http://dbpedia.org/property/occupation> ""Politician""@en . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?author ?parentName WHERE {
  # Step 1: Find the author of ""Exchequer Standards""
  ?book dbo:title ""Exchequer Standards""@en .
  ?book dbo:author ?author .

  # Step 2: Check if the author is a politician and an office holder
  OPTIONAL { ?author dbo:occupation dbr:Politician . }
  OPTIONAL { ?author dbo:officeHolder ?office . }

  # Step 3: Find the place of death (residence) and ensure it's a settlement
  ?author dbp:placeOfDeath ?deathPlace .
  ?deathPlace rdf:type dbo:Settlement .

  # Step 4: Identify an American professional in politics
  ?americanPolitician dbo:nationality dbr:United_States ;
                      dbo:occupation dbr:Politician .

  # Step 5: Find the parent of the author who is a politician and office holder
  OPTIONAL { ?author dbp:parent ?parent . }
  OPTIONAL { ?parent dbo:occupation dbr:Politician ; dbo:officeHolder ?office . }

  FILTER EXISTS { ?parent dbo:occupation dbr:Politician }
  FILTER EXISTS { ?parent dbo:officeHolder ?office }

  # Return the author and parent's name
  BIND (STR(?author) AS ?authorName)
  BIND (STR(?parent) AS ?parentName)
}
```",5,9,6,3,2,3,3,71,0,0,2,0,0.0,0
166,16,val,"Give me the resting place of the military force of Spanish Civil War and entity in the territory administered, that is a country, from Madrid.",SELECT ?result WHERE { ?v2 <http://dbpedia.org/ontology/battle> <http://dbpedia.org/resource/Spanish_Civil_War> . ?result <http://dbpedia.org/ontology/country> ?v3 . ?v2 <http://dbpedia.org/ontology/restingPlace> ?result . ?v3 <http://dbpedia.org/ontology/capital> <http://dbpedia.org/resource/Madrid> . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?restingPlace ?description WHERE {
  ?restingPlace a dbo:MilitaryCemetery ;
                dbo:country dbr:Spain ;
                rdfs:label ?label .
  FILTER(CONTAINS(LCASE(?label), ""valle de los caídos""))
  OPTIONAL { ?restingPlace dbo:description ?description }
}
```",4,5,5,2,2,3,2,20,0,0,4,0,0.0,0
508,17,val,"Give me the birthplace of Ma Hongkui and birthplace of the commander, that is Saudi, in the war, that is a military conflict and a societal event, of Hu Yukun.",SELECT ?result WHERE { <http://dbpedia.org/resource/Hu_Yukun> <http://dbpedia.org/ontology/battle> ?v0 . ?v3 <http://dbpedia.org/ontology/nationality> <http://dbpedia.org/resource/Saudi_Arabia>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. <http://dbpedia.org/resource/Ma_Hongkui> <http://dbpedia.org/ontology/birthPlace> ?result . ?v0 <http://dbpedia.org/ontology/commander> ?v3 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?v3 <http://dbpedia.org/ontology/birthPlace> ?result . },"```sparql
# Query for the birthplace of Ma Hongkui
SELECT ?birthPlace WHERE {
  dbpedia:Ma_Hongkui dbo:birthPlace ?birthPlace .
}

# Hypothetical query structure for the Saudi commander's birthplace, assuming we identify the event and commander:
# SELECT ?commanderBirthPlace WHERE {
#   ?event dbo:participant ?huYukun ;
#          dbo:commander ?saudiCommander .
#   ?saudiCommander foaf:birthPlace ?commanderBirthPlace .
# }
```",4,7,5,3,2,3,2,20,0,0,3,0,0.0,0
170,21,val,Give me the domain of the profession of John Scholey and birth place of Era Ziganshina and entity in Russia.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Russia> . <http://dbpedia.org/resource/John_Scholey> <http://dbpedia.org/property/occupation> ?v0 . ?result <http://dbpedia.org/ontology/leaderTitle> ?v0 . <http://dbpedia.org/resource/Era_Ziganshina> <http://dbpedia.org/ontology/birthPlace> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>
PREFIX wd: <http://www.wikidata.org/entity/>

SELECT DISTINCT ?professionDomain ?birthPlace ?entityInRussia WHERE {
  # John Scholey's profession domain
  wd:Q123456 dbo:occupation ?occupation .
  ?occupation rdfs:domain ?professionDomain .

  # Era Ziganshina's birth place
  wd:Q654321 dbo:birthPlace ?birthPlace .

  # Entity in Russia
  ?entityInRussia dbo:location ?location .
  FILTER(CONTAINS(LCASE(?location), ""russia""))
}
```

Note: Replace `wd:Q123456` with the actual DBpedia resource ID for John Scholey and `wd:Q654321` with the actual DBpedia resource ID for Era Ziganshina.",4,4,5,2,3,2,3,28,0,0,1,0,0.0,0
965,45,val,"Give me the parent of Louise Mountbatten and spouse of Prince Louis of Battenberg and parent of the person born, that is a noble, as the birth name of George Mountbatten, 2nd Marquess of Milford Haven.","SELECT ?result WHERE { <http://dbpedia.org/resource/Louise_Mountbatten> <http://dbpedia.org/ontology/parent> ?result . ?v0 <http://dbpedia.org/property/birthName> ?v3 . ?result <http://dbpedia.org/ontology/spouse> <http://dbpedia.org/resource/Prince_Louis_of_Battenberg> . <http://dbpedia.org/resource/George_Mountbatten,_2nd_Marquess_of_Milford_Haven> <http://dbpedia.org/property/birthName> ?v3 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Noble>. ?v0 <http://dbpedia.org/ontology/parent> ?result . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?person WHERE {
  # Louise Mountbatten's parent is Prince Louis of Battenberg
  ?louiseMountbatten dbo:parent dbr:Prince_Louis_of_Battenberg .
  
  # Princess Victoria of Hesse and by Rhine is the spouse of Prince Louis of Battenberg
  dbr:Princess_Victoria_of_Hesse_and_by_Rhine dbo:spouse dbr:Prince_Louis_of_Battenberg .

  # George Mountbatten, 2nd Marquess of Milford Haven's birth name and parent
  ?georgeMountbatten dbo:birthName ""George Mountbatten, 2nd Marquess of Milford Haven""@en .
  ?georgeMountbatten dbo:parent dbr:Princess_Victoria_of_Hesse_and_by_Rhine .

  # Check if the person is the same for all conditions
  FILTER (?louiseMountbatten = ?georgeMountbatten)
}
```",5,6,6,3,3,3,3,71,0,0,1,0,0.0,0
417,53,val,"Give me the child of the child, that is a royalty, of Frederick Francis III, Grand Duke of Mecklenburg-Schwerin and spouse of the parent, that is a royalty, of the child of Knud, Hereditary Prince of Denmark and child of Christian X of Denmark.","SELECT ?result WHERE { ?result <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Christian_X_of_Denmark> . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?result <http://dbpedia.org/ontology/parent> ?v1 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v3 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Knud,_Hereditary_Prince_of_Denmark> . ?v2 <http://dbpedia.org/ontology/child> ?v3 . ?result <http://dbpedia.org/ontology/spouse> ?v2 . ?v1 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Frederick_Francis_III,_Grand_Duke_of_Mecklenburg-Schwerin> . }","```sparql
SELECT ?person WHERE {
  # Step 1: Identify Margrethe II of Denmark
  wd:Q1576 wdt:P31/wdt:P279* wd:Q5 . # Margrethe II is a human

  # Step 2: Find her parent, Frederick IX of Denmark
  wd:Q1576 wdt:P22 ?parent .
  ?parent wdt:P31/wdt:P279* wd:Q5 . # Parent is a human
  ?parent rdfs:label ""Frederick IX""@en .

  # Step 3: Find the spouse of Frederick IX, Ingrid of Sweden
  ?parent wdt:P26 ?spouse .
  ?spouse rdfs:label ""Ingrid of Sweden""@en .

  # Step 4: Identify child of Frederick Francis III and Ingrid of Sweden
  wd:Q1576 wdt:P25 ?child .
  ?child wdt:P31/wdt:P279* wd:Q5 . # Child is a human
  ?child rdfs:label ""Princess Cecilie of Mecklenburg-Schwerin""@en .

  # Step 5: Find a royal child of Princess Cecilie
  ?princessCecilie wdt:P31/wdt:P279* wd:Q5 . # Princess Cecilie is a human
  ?princessCecilie rdfs:label ""Princess Cecilie of Mecklenburg-Schwerin""@en .
  ?princessCecilie wdt:P25 ?royalChild .
  ?royalChild wdt:P31/wdt:P279* wd:Q5 . # Royal child is a human
  ?royalChild rdfs:label ""Princess Benedikte of Denmark""@en .
  
  BIND(?royalChild AS ?person)
}
```",6,8,7,3,3,3,3,71,0,0,1,0,0.0,0
582,52,val,"Give me the figure known as --10-19 and player in the father, that is an athlete and a soccer manager and a sports manager, of Masami Nagasawa and reference to the residence of the reference, that is a scientist, to Hirotaka Sugawara.","SELECT ?result WHERE { ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsManager>. ?v3 <http://xmlns.com/foaf/0.1/name> ""Hirotaka Sugawara""@en . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Scientist>. ?v3 <http://dbpedia.org/property/residence> ?v2 . <http://dbpedia.org/resource/Masami_Nagasawa> <http://dbpedia.org/property/father> ?v5 . ?v5 <http://dbpedia.org/ontology/team> ?result . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Athlete>. ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerManager>. ?result <http://xmlns.com/foaf/0.1/name> ?v2 . ?result <http://dbpedia.org/property/nickname> ""--10-19""^^<http://www.w3.org/2001/XMLSchema#gMonthDay> . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?father ?residence WHERE {
  # Find Masami Nagasawa's father who is an athlete, soccer manager, and sports manager
  ?mother dbo:child dbr:Masami_Nagasawa .
  ?mother dbo:spouse ?father .
  ?father a dbo:Athlete ;
          a dbo:SoccerManager ;
          a dbo:SportsManager .

  # Find Hirotaka Sugawara's residence
  ?scientist foaf:name ""Hirotaka Sugawara""@en .
  ?scientist dbo:residenceLocation ?residence .

  # Check if the father and scientist share the same residence
  FILTER(?father = ?scientist)
}
```",6,10,7,3,3,3,3,71,0,0,1,0,0.0,0
965,41,val,"Give me the parent of George Mountbatten, 2nd Marquess of Milford Haven and spouse of the spouse of Princess Victoria of Hesse and by Rhine and parent of the child, that is a royalty, of Prince Louis of Battenberg.","SELECT ?result WHERE { ?v4 <http://dbpedia.org/ontology/parent> ?result . <http://dbpedia.org/resource/George_Mountbatten,_2nd_Marquess_of_Milford_Haven> <http://dbpedia.org/ontology/parent> ?result . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. <http://dbpedia.org/resource/Princess_Victoria_of_Hesse_and_by_Rhine> <http://dbpedia.org/ontology/spouse> ?v2 . ?v4 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Prince_Louis_of_Battenberg> . ?result <http://dbpedia.org/ontology/spouse> ?v2 . }","```sparql
SELECT ?parent WHERE {
  ?george dbo:spouse ?princeLouis.
  ?princeLouis foaf:name ""Prince Louis of Battenberg""@en.
  ?george dbo:parent ?parent.
  
  ?princessVictoria dbo:spouse ?princeLouis.
  ?princessVictoria foaf:name ""Princess Victoria of Hesse and by Rhine""@en.

  FILTER(?parent = ?princessVictoria)
}
```",5,6,6,2,3,3,3,71,0,0,1,0,0.0,0
773,50,val,"Give me the parent of the child, that is a royalty, of Louis the German and parent of the successor of the child, that is a royalty, of Louis the Pious.",SELECT ?result WHERE { ?v3 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Louis_the_German> . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. <http://dbpedia.org/resource/Louis_the_Pious> <http://dbpedia.org/ontology/child> ?v0 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v3 <http://dbpedia.org/ontology/parent> ?result . ?v0 <http://dbpedia.org/ontology/successor> ?v4 . ?result <http://dbpedia.org/ontology/child> ?v4 . },"```sparql
# Step 1: Find Louis the German's children who were royalty
SELECT ?child WHERE {
    ?child dbo:parent dbr:Louis_the_German .
    ?child dbo:royalty true .
}

# Step 2: Determine the parent of one of these royal children (assuming we choose the first result)
SELECT ?parent WHERE {
    ?child dbo:parent ?parent .
    FILTER(?child = <URI_OF_SELECTED_CHILD>)
}

# Step 3: Find Louis the Pious' children who were royalty
SELECT ?child WHERE {
    ?child dbo:parent dbr:Louis_the_Pious .
    ?child dbo:royalty true .
}

# Step 4: Determine the successor of one of these royal children (assuming we choose the first result)
SELECT ?successor WHERE {
    ?child dbo:succesor ?successor .
    FILTER(?child = <URI_OF_SELECTED_CHILD>)
}

# Step 5: Determine the parent of this successor
SELECT ?parent WHERE {
    ?successor dbo:parent ?parent .
    FILTER(?successor = <URI_OF_SUCCESSOR>)
}
```

Note: Replace `<URI_OF_SELECTED_CHILD>` and `<URI_OF_SUCCESSOR>` with actual URIs obtained from previous query results.",5,7,6,3,2,3,3,71,0,0,2,0,0.0,0
124,46,val,"Give me the military force of the war, that is an event and a military conflict and a societal event, of Frank Rhodes (British Army officer) and commander in the war, that is a societal event and a military conflict, of the reference, that is Australian and an organisation and a military unit, to 'A' Battery, Royal Australian Artillery.","SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v2 <http://xmlns.com/foaf/0.1/name> ""'A' Battery, Royal Australian Artillery""@en . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?result <http://dbpedia.org/ontology/battle> ?v4 . ?v1 <http://dbpedia.org/ontology/commander> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. <http://dbpedia.org/resource/Frank_Rhodes_(British_Army_officer)> <http://dbpedia.org/ontology/battle> ?v4 . ?v2 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Australia>. ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?v2 <http://dbpedia.org/ontology/battle> ?v1 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryUnit>. ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?militaryForce WHERE {
  # Find wars where Frank Rhodes was a commander
  ?war dbo:commander dbr:Frank_Rhodes ;
       a dbo:MilitaryConflict, dbo:SocietalEvent .

  # Identify the reference to 'A' Battery, Royal Australian Artillery as an organization or unit
  ?reference dbo:nationality dbr:Australia ;
             a dbo:Organisation, dbo:MilitaryUnit ;
             dbo:partOf ?war .

  # Determine the military force involved in that specific war
  ?militaryForce dbo:participatedIn ?war .
}
```",5,13,6,3,2,3,3,71,0,0,9,0,0.0,0
582,27,train,"Give me the figure known as the nickname of the team, that is an organisation, of Hajime Moriyasu.",SELECT ?result WHERE { ?result <http://dbpedia.org/property/nickname> ?v2 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?v1 <http://dbpedia.org/ontology/coach> <http://dbpedia.org/resource/Hajime_Moriyasu> . ?v1 <http://dbpedia.org/property/nickname> ?v2 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?team ?nickname WHERE {
  ?person a dbo:FootballManager ;
          foaf:name ""Hajime Moriyasu""@en .
  
  ?person dbo:managedTeam ?team .

  OPTIONAL { 
    ?team dbo:nickname ?nickname .
  }
}
```",3,4,4,3,1,3,3,71,0,0,1,0,0.0,0
47,1,train,Give me the office of Bidesh Ranjan Bose.,SELECT ?result WHERE { <http://dbpedia.org/resource/Bidesh_Ranjan_Bose> <http://dbpedia.org/property/office> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?office WHERE {
  ?person rdfs:label ""Bidesh Ranjan Bose""@en .
  OPTIONAL { ?person dbo:positionHeld ?office . }
}
```",1,1,2,1,1,3,3,71,0,0,1,0,0.0,0
129,10,train,"Give me the associated musical artist of the actor, that is an organisation, of Dreamville Presents: Revenge.",SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. <http://dbpedia.org/resource/Dreamville_Presents:_Revenge> <http://dbpedia.org/property/starring> ?v1 . ?v1 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?artist WHERE {
  # Find the event or album related to Dreamville Presents: Revenge
  ?event dbo:title ""Dreamville Presents: Revenge"" .
  
  # Find actors associated with this event
  ?actor dbo:associatedWith ?event .

  # Find musical artists (organizations) associated with these actors
  ?artist dbo:associatedMusicalArtist ?actor .
  FILTER EXISTS { ?artist a dbo:Band . } # Ensure the artist is an organization

  # Limit to known Dreamville Records related entities
  OPTIONAL { ?event dbo:label dbr:Dreamville_Records }
}
```",2,3,3,2,1,2,3,28,0,0,4,0,0.0,0
926,20,train,Give me the successor of the child of Ahmed III and father of Mahmud II.,SELECT ?result WHERE { <http://dbpedia.org/resource/Mahmud_II> <http://dbpedia.org/property/father> ?result . ?v1 <http://dbpedia.org/ontology/successor> ?result . ?v1 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Ahmed_III> . },"```sparql
SELECT ?successor WHERE {
  wd:Q1234568 wdt:P22 wd:Q7890123 .  # Mustafa III (child of Ahmed III and father of Mahmud II)
  wd:Q7890123 wdt:P35 wd:Q3456789 .   # Mustafa III's successor
  ?successor rdfs:label ""Abdul Hamid I""@en .
}
```

Note: The placeholders `wd:Q1234568`, `wd:Q7890123`, and `wd:Q3456789` should be replaced with the actual DBpedia resource identifiers for Mustafa III, Abdul Hamid I, and their respective relationships.",3,3,4,2,2,3,3,71,0,0,1,0,0.0,0
933,6,train,Give me the birth name of Alan Warner (musician).,SELECT ?result WHERE { <http://dbpedia.org/resource/Alan_Warner_(musician)> <http://dbpedia.org/property/birthName> ?result . },"```sparql
PREFIX foaf: <http://xmlns.com/foaf/0.1/>
PREFIX schema: <http://schema.org/>

SELECT ?birthName WHERE {
  ?person a foaf:Person ;
          foaf:name ""Alan Warner (musician)"" .
  
  OPTIONAL { ?person foaf:givenName ?givenName . }
  OPTIONAL { ?person schema:birthName ?birthName . }

  FILTER(?birthName != """")
}
```",1,1,2,1,1,3,3,71,0,0,1,0,0.0,0
791,27,train,"Give me the father of the child, that is a royalty, of the father, that is a royalty and an office holder, of Emperor Antoku.",SELECT ?result WHERE { ?v2 <http://dbpedia.org/property/father> ?result . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. <http://dbpedia.org/resource/Emperor_Antoku> <http://dbpedia.org/property/father> ?v1 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v2 <http://dbpedia.org/property/father> ?v1 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?father WHERE {
  # Emperor Antoku's father
  dbr:Emperor_Antoku dbo:father dbr:Taira_no_Kiyomori .
  
  # Taira no Kiyomori is a royalty and an office holder
  dbr:Taira_no_Kiyomori dbo:nationality dbr:Japan ;
                        dbo:occupation ?office .

  FILTER EXISTS { 
    VALUES ?office { dbo:Ruler dbo:GovernmentOfficial }
  }

  # Find a child of Taira no Kiyomori who is royalty
  OPTIONAL {
    dbr:Taira_no_Kiyomori dbo:child ?royalChild .
    ?royalChild dbo:nationality dbr:Japan .
  }

  # Identify the father of this royal child (which should be Taira no Kiyomori)
  BIND(dbr:Taira_no_Kiyomori AS ?father)
}
```",3,6,4,3,1,3,3,71,0,0,1,0,0.0,0
216,35,train,"Give me the team of the person born, that is a sports manager and a soccer manager and a soccer player, on 1983-12-20 and player in the coach of Croatia national under-21 football team.","SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerManager>. ?v2 <http://dbpedia.org/ontology/team> ?result . ?v1 <http://dbpedia.org/ontology/birthDate> ""1983-12-20""^^<http://www.w3.org/2001/XMLSchema#date> . <http://dbpedia.org/resource/Croatia_national_under-21_football_team> <http://dbpedia.org/ontology/coach> ?v2 . ?result <http://dbpedia.org/ontology/coach> ?v1 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerPlayer>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsManager>. }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?person ?team WHERE {
  ?person a dbo:SoccerManager ;
          dbo:birthDate ""1983-12-20""^^xsd:date ;
          dbo:sport dbr:Soccer ;
          dbo:occupation [a dbo:SportsManager] .
  
  ?person dbo:managerTeam dbr:Croatia_national_under-21_football_team .

  OPTIONAL {
    ?person dbo:currentTeam ?team .
  }
}
```",4,7,5,2,2,3,3,71,0,0,1,0,0.0,0
579,14,train,"Give me the person born as the birth name of the native, that is an office holder, of Edinburgh.",SELECT ?result WHERE { ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v2 <http://dbpedia.org/property/birthName> ?v0 . ?v2 <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Edinburgh> . ?result <http://dbpedia.org/property/birthName> ?v0 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?person ?birthName WHERE {
  ?person a dbo:OfficeHolder ;
          dbo:birthPlace dbr:Edinburgh .
  OPTIONAL { ?person foaf:name ?birthName . }
}
```",3,4,4,3,1,3,2,20,18,157,2,0.10285714285714286,0.9,0.1846153846153846
170,10,train,Give me the birth place of the awardee of People's Artist of Russia.,SELECT ?result WHERE { ?v1 <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/People's_Artist_of_Russia> . ?v1 <http://dbpedia.org/ontology/birthPlace> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?person ?birthPlace WHERE {
  ?person a dbo:Person .
  ?person dbo:honoraryTitle dbr:People's_Artist_of_Russia .
  ?person dbo:birthPlace ?birthPlace .
}
```",2,2,3,2,1,2,3,28,0,0,33,0,0.0,0
465,21,train,Give me the successor of the child of Alfonso I d'Este and successor of Renée of France.,SELECT ?result WHERE { ?v1 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Alfonso_I_d'Este> . <http://dbpedia.org/resource/Renée_of_France> <http://dbpedia.org/ontology/successor> ?result . ?v1 <http://dbpedia.org/ontology/successor> ?result . },"```sparql
SELECT ?successor WHERE {
  ?alfonso1 dbo:spouse ?rene .
  ?rene foaf:name ""Renée of France""@en .
  ?alfonso1 foaf:name ""Alfonso I d'Este""@en .
  ?child dbo:parent ?alfonso1 ;
         dbo:parent ?rene .
  ?ercole2 foaf:name ""Ercole II d'Este""@en .
  ?ercole2 dbo:successorOf ?alfonso1 .
  ?alberto2 foaf:name ""Alfonso II d'Este""@en .
  ?alberto2 dbo:successorOf ?ercole2 .
  BIND(?alberto2 AS ?successor)
}
```",3,3,4,2,2,3,3,71,0,0,1,0,0.0,0
933,17,train,"Give me the band, that is a group and a band and an organisation, of the person born, that is a musical artist, on 1947-04-21.","SELECT ?result WHERE { ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?v0 <http://dbpedia.org/ontology/birthDate> ""1947-04-21""^^<http://www.w3.org/2001/XMLSchema#date> . ?v0 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Band>. ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Group>. }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?bandName WHERE {
  ?person a dbo:MusicalArtist ;
          dbo:birthDate ""1947-04-21""^^xsd:date .
  
  ?person dbo:member ?band .

  ?band a dbo:Band, dbo:Organization, dbo:Group ;
        rdfs:label ?bandName .
  
  FILTER (lang(?bandName) = 'en')
}
```",2,6,3,2,1,3,3,71,0,0,2,0,0.0,0
36,12,train,Give me the actor of Being Mrs Elliot and person born in 1971 and person born as Ayo Makun.,"SELECT ?result WHERE { <http://dbpedia.org/resource/Being_Mrs_Elliot> <http://dbpedia.org/ontology/starring> ?result . ?result <http://dbpedia.org/property/birthName> ""Ayo Makun""@en . ?result <http://dbpedia.org/ontology/birthYear> ""1971""^^<http://www.w3.org/2001/XMLSchema#gYear> . }","```sparql
SELECT DISTINCT ?person WHERE {
  # Actor of ""Being Mrs Elliot""
  { 
    ?work dcterms:title ""Being Mrs Elliot""@en .
    ?work dbo:starring ?actor .
    ?actor foaf:name ?person .
  }
  
  UNION
  
  # Person born in 1971
  { 
    ?person dbo:birthYear ""1971""^^xsd:gYear .
  }
  
  UNION
  
  # Person born as Ayo Makun
  {
    ?person foaf:givenName ""Ayo""@en ;
            foaf:familyName ""Makun""@en .
  }
}
```",3,3,4,1,3,2,3,28,0,0,1,0,0.0,0
507,5,train,Who is the person born on 1919-06-17?,"SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/birthDate> ""1919-06-17""^^<http://www.w3.org/2001/XMLSchema#date> . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT ?person ?name WHERE {
  ?person a dbo:Person .
  ?person foaf:name ?name .
  ?person dbo:birthDate ?date .
  FILTER (YEAR(?date) = 1919 && MONTH(?date) = 6 && DAY(?date) = 17)
}
```",1,1,2,1,1,3,3,71,13,14,1,0.48148148148148145,0.9285714285714286,0.6341463414634146
917,29,train,Give me the child of the father of Keʻelikōlani and child of Kekūanāoʻa and parent of Albert Kamehameha.,"SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Albert_Kamehameha> . <http://dbpedia.org/resource/Keʻelikōlani> <http://dbpedia.org/property/father> ?v3 . ?result <http://dbpedia.org/property/father> ""Kekūanāoʻa""@en . ?result <http://dbpedia.org/ontology/parent> ?v3 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?person WHERE {
  # Find the father of Keʻelikōlani
  ?keelikolani dbo:father ?father .
  FILTER(STR(?keelikolani) = ""Keʻelikōlani"")

  # Find a child of Kekūanāoʻa who is also a child of Keʻelikōlani's father
  ?child dbo:parent ?father ;
        dbo:parent dbr:Kekūanāoʻa .

  # Ensure this person is the parent of Albert Kamehameha
  ?person dbo:child dbr:Albert_Kamehameha .
  FILTER(STR(?person) = STR(?child))

  # Return the person who matches all criteria
  BIND(?person AS ?result)
}
```",4,4,5,2,3,3,3,71,0,0,1,0,0.0,0
465,37,train,"Give me the spouse of the child, that is a royalty, of the parent of Elizabeth of Austria (1526–1545) and successor of Renée of France.",SELECT ?result WHERE { ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?result <http://dbpedia.org/ontology/spouse> ?v3 . ?v0 <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Elizabeth_of_Austria_(1526–1545)> . ?v0 <http://dbpedia.org/ontology/child> ?v3 . <http://dbpedia.org/resource/Renée_of_France> <http://dbpedia.org/ontology/successor> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?spouse WHERE {
  # Elizabeth of Austria (1526–1545)
  ?elizabeth a dbo:Person ;
             foaf:name ""Elizabeth of Austria"" ;
             dbo:parent ?parent .

  # Parent of Elizabeth of Austria
  ?parent dbo:child ?royaltyChild .

  # Royalty child of Ferdinand I
  ?royaltyChild dbo:spouse ?successorSpouse .

  # Successor of Renée of France (Ercole II d'Este's successor)
  ?renée a dbo:Person ;
         foaf:name ""Renée of France"" ;
         dbo:spouse ?ercoleII .
  
  ?ercoleII dbo:succeededBy ?successorOfRenée .

  # Spouse of the royalty child
  ?successorSpouse dbr:Mary_of_Hungary .
}
```",4,5,5,3,2,3,3,71,0,0,1,0,0.0,0
606,4,train,"Give me the figure known, that is a university and a sports league and an educational institution, as Penn Quakers.",SELECT ?result WHERE { ?result <http://dbpedia.org/property/nickname> <http://dbpedia.org/resource/Penn_Quakers> . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/EducationalInstitution>. ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/University>. ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsLeague>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?team WHERE {
  ?university a dbo:EducationalInstitution ;
              dbo:officialName ""University of Pennsylvania""@en .
  ?university dbo:sportsTeam ?team .
  FILTER(CONTAINS(LCASE(?team), ""quakers""))
}
```",1,4,2,1,1,3,2,20,0,0,1,0,0.0,0
976,19,train,"Give me the office of the leader, that is a politician, of Grand National Assembly of Turkey and office of Meral Akşener.",SELECT ?result WHERE { <http://dbpedia.org/resource/Meral_Akşener> <http://dbpedia.org/property/office> ?result . <http://dbpedia.org/resource/Grand_National_Assembly_of_Turkey> <http://dbpedia.org/ontology/leader> ?v2 . ?v2 <http://dbpedia.org/property/office> ?result . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?office1 ?office2 WHERE {
  # Office of the Speaker of the Grand National Assembly of Turkey
  dbr:Speaker_of_the_Grand_National_Assembly_of_Turkey dbo:positionHeldBy ?person .
  ?person dbo:office ?office1 .

  # Current office held by Meral Akşener
  OPTIONAL {
    dbr:Meral_Akşener dbo:politicalParty ?party ;
                      dbo:office ?office2 .
  }
}
```",3,4,4,2,2,3,3,71,0,0,1,0,0.0,0
508,7,train,"Give me the birthplace of the commander, that is a politician, in 1939–1940 Winter Offensive.",SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/birthPlace> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. <http://dbpedia.org/resource/1939–1940_Winter_Offensive> <http://dbpedia.org/ontology/commander> ?v1 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?birthPlace WHERE {
  ?person a dbo:MilitaryPerson ;
          foaf:name ""Semyon Timoshenko""@en ;
          dbo:placeOfBirth ?birthPlace .
  
  OPTIONAL { 
    ?event dbo:commander ?person ;
           rdfs:label ?label .
    FILTER(CONTAINS(LCASE(?label), ""winter war"") || CONTAINS(LCASE(?label), ""soviet-finnish war""))
  }
}
```",2,3,3,2,1,3,2,20,0,0,11,0,0.0,0
417,14,train,"Give me the child of the child, that is a royalty, of Frederick Francis III, Grand Duke of Mecklenburg-Schwerin.","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/parent> ?v1 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v1 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Frederick_Francis_III,_Grand_Duke_of_Mecklenburg-Schwerin> . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT DISTINCT ?grandchild ?title WHERE {
  # Identify Frederick Francis III
  ?frederick a dbo:Person ;
             foaf:name ""Frederick Francis III, Grand Duke of Mecklenburg-Schwerin""@en .

  # Find his children
  ?frederick dbo:child ?child .

  # For each child, find their children (grandchildren)
  ?child dbo:child ?grandchild .

  # Check if the grandchild has a royal title or association
  OPTIONAL { ?grandchild dbp:title ?title . }
  
  FILTER EXISTS {
    ?grandchild dbo:occupation ?occupation .
    VALUES ?occupation { 
      dbo:Monarch 
      dbo:RoyalFamilyMember 
      dbo:Prince 
      dbo:Duke 
      dbo:Archduke 
      dbo:CrownPrince 
      dbo:King 
      dbo:Queen
    }
  }

  FILTER (lang(?title) = 'en' && regex(str(?title), ""royal|kingdom|prince|duke|archduke|crown prince"", ""i""))
}
```",2,3,3,2,1,3,3,71,0,0,8,0,0.0,0
865,9,train,Give me the native of British Raj and father of AK Abdul Momen.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/British_Raj> . <http://dbpedia.org/resource/AK_Abdul_Momen> <http://dbpedia.org/property/father> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?father WHERE {
  ?person a dbo:Person ;
          foaf:name ""AK Abdul Momen""@en .
  OPTIONAL { ?person dbo:father ?father . }
}
```",2,2,3,1,2,3,3,71,0,0,1,0,0.0,0
41,15,train,"Give me the party of Enda Kenny and party of the leader, that is a politician and an office holder, of 2005 Castlereagh Borough Council election.",SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/party> ?result . <http://dbpedia.org/resource/Enda_Kenny> <http://dbpedia.org/ontology/party> ?result . <http://dbpedia.org/resource/2005_Castlereagh_Borough_Council_election> <http://dbpedia.org/property/leader> ?v1 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?politician ?party WHERE {
  # Find office holders in the 2005 Castlereagh Borough Council election
  ?officeHolder dbo:electedDuring dbr:2005_Castlereagh_Borough_Council_election .
  
  # Get their political party affiliation
  OPTIONAL { ?officeHolder dbo:politicalParty ?party . }
  
  # Bind politician name to variable for clarity
  BIND(?officeHolder AS ?politician)
}
```",3,5,4,2,2,2,3,28,0,0,1,0,0.0,0
83,10,train,"Who is the governor of the commander, that is a politician, in Central African Republic Civil War?",SELECT ?result WHERE { ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. <http://dbpedia.org/resource/Central_African_Republic_Civil_War> <http://dbpedia.org/ontology/commander> ?v0 . ?v0 <http://dbpedia.org/property/governor> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?governor WHERE {
  ?conf dbo:location dbr:Central_African_Republic .
  ?conf dbo:subject dbr:Central_African_Republic_Civil_War .
  
  ?commander dbo:commanderOf ?conf .
  ?governor dbo:governs ?region .
  ?region dbo:partOf dbr:Central_African_Republic .

  FILTER EXISTS { ?governor a dbo:Politician . }
  
  ?commander dbo:hasLeader ?governor .
}
```",2,3,3,2,1,3,2,20,0,0,19,0,0.0,0
573,0,train,Give me the person decedent at Massachusetts.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/deathPlace> <http://dbpedia.org/resource/Massachusetts> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?person ?name WHERE {
  ?person a dbo:Person ;
          dbo:deathPlace dbr:Massachusetts ;
          rdfs:label ?name .
  FILTER (LANG(?name) = 'en')
}
```",1,1,2,1,1,3,3,71,950,950,18,0.5,0.981404958677686,0.6624825662482565
267,5,train,Give me the birth date of Dan Cathy.,SELECT ?result WHERE { <http://dbpedia.org/resource/Dan_Cathy> <http://dbpedia.org/ontology/birthDate> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?birthDate WHERE {
  ?person a dbo:Person ;
          rdfs:label ""Dan Cathy""@en .
  OPTIONAL { ?person dbo:birthDate ?birthDate . }
}
```",1,1,2,1,1,3,2,20,1,0,0,1.0,1.0,1.0
987,1,train,Give me the birth place of Moamer Kasumović.,SELECT ?result WHERE { <http://dbpedia.org/resource/Moamer_Kasumović> <http://dbpedia.org/ontology/birthPlace> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?birthPlaceLabel WHERE {
  dbr:Mohamed_Gaddafi dbo:birthPlace ?birthPlace.
  SERVICE wikibase:label { bd:serviceParam wikibase:language ""[AUTO_LANGUAGE],en"". }
}
```",1,1,2,1,1,3,3,71,0,0,3,0,0.0,0
935,1,train,Give me the headquarter of Provincial Assembly of Balochistan.,SELECT ?result WHERE { <http://dbpedia.org/resource/Provincial_Assembly_of_Balochistan> <http://dbpedia.org/ontology/location> ?result . },"```sparql
SELECT ?headquarters WHERE {
  ?assembly a dbo:Legislature ;
            rdfs:label ""Provincial Assembly of Balochistan""@en .
  OPTIONAL { ?assembly dbp:headquarters ?headquarters . }
}
```",1,1,2,1,1,3,2,20,0,0,1,0,0.0,0
170,11,train,Give me the domain of the profession of John Scholey.,SELECT ?result WHERE { <http://dbpedia.org/resource/John_Scholey> <http://dbpedia.org/property/occupation> ?v1 . ?result <http://dbpedia.org/ontology/leaderTitle> ?v1 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT ?domain WHERE {
  ?person foaf:name ""John Scholey""@en .
  ?person foaf:profession ?profession .
  ?profession dbo:fieldOfActivity ?domain .
}
```",2,2,3,2,1,2,3,28,0,0,39395,0,0.0,0
129,7,train,Give me the associated musical artist of Saba (rapper) and professional in .,"SELECT ?result WHERE { <http://dbpedia.org/resource/Saba_(rapper)> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?result <http://dbpedia.org/property/occupation> """"@en . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?associatedArtist WHERE {
  VALUES ?saba { dbr:Saba_(rapper) }
  ?saba dbo:associatedMusicalArtist ?associatedArtist .
}
```",2,2,3,1,2,2,3,28,0,0,7,0,0.0,0
445,11,train,"Give me the entity in the residence, that is a country, of Anna Sharkey.",SELECT ?result WHERE { <http://dbpedia.org/resource/Anna_Sharkey> <http://dbpedia.org/property/residence> ?v0 . ?result <http://dbpedia.org/ontology/location> ?v0 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?country WHERE {
  ?person a dbo:Person ;
          foaf:name ""Anna Sharkey""@en .
  
  OPTIONAL { 
    ?person dbo:residence ?residence .
    
    ?residence dbo:country ?country .
  }
}
```",2,3,3,2,1,3,3,71,0,0,3570,0,0.0,0
41,17,train,Give me the party of the person born as David Declan Costello and party of Enda Kenny.,"SELECT ?result WHERE { ?v2 <http://dbpedia.org/ontology/party> ?result . <http://dbpedia.org/resource/Enda_Kenny> <http://dbpedia.org/ontology/party> ?result . ?v2 <http://dbpedia.org/property/birthName> ""David Declan Costello""@en . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT ?person ?name ?partyLabel WHERE {
  {
    ?person a dbo:Person ;
            foaf:name ""David Declan Costello""@en .
    OPTIONAL { ?person dbo:party ?party . }
  } UNION {
    ?person a dbo:Person ;
            foaf:name ""Enda Kenny""@en .
    OPTIONAL { ?person dbo:party ?party . }
  }
  SERVICE <http://dbpedia.org/sparql> {
    ?party rdfs:label ?partyLabel FILTER (lang(?partyLabel) = 'en')
  }
}
```",3,3,4,2,2,2,3,28,0,0,1,0,0.0,0
41,9,train,Give me the party of Declan Costello and party of Enda Kenny.,SELECT ?result WHERE { <http://dbpedia.org/resource/Enda_Kenny> <http://dbpedia.org/ontology/party> ?result . <http://dbpedia.org/resource/Declan_Costello> <http://dbpedia.org/ontology/party> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?person ?partyName WHERE {
  VALUES ?person { 
    dbr:Declan_Costello (dbpedia-owl:memberOf|dbo:party) ?party .
    dbr:Enda_Kenny (dbpedia-owl:memberOf|dbo:party) ?party .
  }
  ?party rdfs:label ?partyName .
  FILTER(LANG(?partyName) = 'en')
}
```",2,2,3,1,2,2,3,28,0,0,1,0,0.0,0
98,5,train,"Give me the region, that is a country, of Philippine Standard Time.",SELECT ?result WHERE { ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. ?result <http://dbpedia.org/property/timeZone> <http://dbpedia.org/resource/Philippine_Standard_Time> . },"```sparql
SELECT ?country WHERE {
  ?pst dbp:name ""Philippine Standard Time""@en .
  ?pst dbp:country ?country .
}
```",1,2,2,1,1,2,3,28,0,0,8,0,0.0,0
933,12,train,Give me the reference to Alan Warner and band of The Ramong Sound.,"SELECT ?result WHERE { <http://dbpedia.org/resource/The_Ramong_Sound> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?result <http://xmlns.com/foaf/0.1/name> ""Alan Warner""@en . }","```sparql
# Query for Alan Warner's notable work
SELECT ?work WHERE {
  ?person dbo:birthName ""Alan Warner""@en .
  ?person dbo:notableWork ?work .
}

UNION

# Query for The Ramones' discography
SELECT ?album WHERE {
  ?band rdfs:label ""The Ramones""@en .
  ?band dbo:discography ?album .
}
```",2,2,3,1,2,3,3,71,0,0,1,0,0.0,0
773,6,train,Give me the successor of Charles the Bald.,SELECT ?result WHERE { <http://dbpedia.org/resource/Charles_the_Bald> <http://dbpedia.org/ontology/successor> ?result . },"```sparql
SELECT ?successor WHERE {
  dbpedia:Charles_the_Bald dbo:successor ?successor .
}
```",1,1,2,1,1,3,3,71,0,0,2,0,0.0,0
236,8,train,Give me the party member of the administration of James Madison.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/party> ?v0 . ?v0 <http://dbpedia.org/property/leader> <http://dbpedia.org/resource/James_Madison> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?person ?position WHERE {
  # James Madison's presidency
  dbr:James_Madison dbo:presidentOf ?country .
  
  # Democratic-Republican Party affiliation during his administration
  dbr:Democratic-Republican_Party dbo:member ?partyMember .
  
  # Filter members who were part of the administration
  ?partyMember dbo:officeHolder ?position .
  ?partyMember dbo:heldBy ?person .

  FILTER (?country = dbr:United_States)
}
```",2,2,3,2,1,3,2,20,0,0,597,0,0.0,0
826,5,train,"Who is the reference, that is a royalty, to Louis I?","SELECT ?result WHERE { ?result <http://xmlns.com/foaf/0.1/name> ""Louis I""@en . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. }","```sparql
SELECT ?person ?relation ?relatedPerson WHERE {
  VALUES ?entity { dbr:Louis_I_of_Hungary }
  ?entity dbo:spouse|dbo:child|dbo:parent|dbo:successor|dbo:predecessor ?person .
  ?person ?relation ?relatedPerson .
  FILTER (strstarts(str(?relatedPerson), ""http://dbpedia.org/resource/""))
}
```",1,2,2,1,1,3,3,71,1,790,7,0.0012642225031605564,0.125,0.002503128911138924
216,39,train,"Give me the team of the person born, that is a sports manager and a soccer manager and a soccer player, on the death of Pavel Vezhinov and player in Mario Ivanković.",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/coach> ?v1 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerPlayer>. ?v1 <http://dbpedia.org/ontology/birthDate> ?v0 . <http://dbpedia.org/resource/Mario_Ivanković> <http://dbpedia.org/ontology/team> ?result . <http://dbpedia.org/resource/Pavel_Vezhinov> <http://dbpedia.org/ontology/deathDate> ?v0 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsManager>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerManager>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?person ?team WHERE {
  # Find Pavel Vezhinov's birthdate
  VALUES ?vezhinovBirthDate { 
    SELECT ?birthdate WHERE { 
      dbr:Pavel_Vezhinov dbo:birthday ?birthdate .
    }
  }

  # Find people born on the same date as Pavel Vezhinov who are sports managers, soccer managers, and players
  ?person dbo:birthDate ?sameBirthDate ;
          a dbo:SoccerManager ;
          a dbo:SoccerPlayer ;
          a dbo:SportsManager .

  FILTER (?sameBirthDate = ?vezhinovBirthDate)

  # Check if these individuals have any connection with Mario Ivanković through a team
  OPTIONAL {
    ?person dbo:team ?team .
    ?team dbo:player dbr:Mario_Ivanković .
  }

  FILTER EXISTS { ?team }
}
```",4,7,5,3,2,3,3,71,0,0,1,0,0.0,0
579,5,train,"Give me the birth name of Jane Percy, Duchess of Northumberland.","SELECT ?result WHERE { <http://dbpedia.org/resource/Jane_Percy,_Duchess_of_Northumberland> <http://dbpedia.org/property/birthName> ?result . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT ?birthName WHERE {
  ?person a dbo:Duchess ;
          foaf:name ""Jane Percy"" ;
          dbo:spouse ?spouse .
  OPTIONAL { ?person dbo:birthName ?birthName . }
}
```",1,1,2,1,1,3,2,20,0,0,1,0,0.0,0
200,0,train,Give me the reference to Angelcorpse.,"SELECT ?result WHERE { ?result <http://xmlns.com/foaf/0.1/name> ""Angelcorpse""@en . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?band ?description WHERE {
  ?band a dbo:Band ;
        foaf:name ""Angelcorpse""@en .
  OPTIONAL { ?band dbo:description ?description . FILTER (lang(?description) = 'en') }
}
```",1,1,2,1,1,2,2,9,1,0,0,1.0,1.0,1.0
606,7,train,"Give me the figure known as the nickname of DeKalb, Illinois.","SELECT ?result WHERE { <http://dbpedia.org/resource/DeKalb,_Illinois> <http://dbpedia.org/property/nickname> ?v1 . ?result <http://dbpedia.org/property/nickname> ?v1 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?nickname WHERE {
  VALUES ?dekalb { dbr:DeKalb_(Illinois) }
  OPTIONAL { ?dekalb dbo:nickname ?nickname . }
}
```",2,2,3,2,1,3,2,20,0,0,1,0,0.0,0
445,18,train,Give me the death place of Patrick Moore and entity in United Kingdom and entity in England.,SELECT ?result WHERE { <http://dbpedia.org/resource/Patrick_Moore> <http://dbpedia.org/ontology/deathPlace> ?result . ?result <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/United_Kingdom> . ?result <http://dbpedia.org/ontology/location> <http://dbpedia.org/resource/England> . },"```sparql
# Query to get Patrick Moore's death place
SELECT ?deathPlace WHERE {
  dbpedia:Patrick_Moore dbo:deathPlace ?deathPlace .
}

# Assuming we have obtained a deathPlace URI, let's call it <DeathPlaceURI>

# Query to find an entity in the United Kingdom related to the death place
SELECT DISTINCT ?ukEntity WHERE {
  ?ukEntity dbo:location ?deathPlace .
  ?ukEntity dbo:country dbpedia:United_Kingdom .
}

# Query to find an entity in England related to the death place
SELECT DISTINCT ?englandEntity WHERE {
  ?englandEntity dbo:location ?deathPlace .
  ?englandEntity dbo:country dbpedia:England .
}
```

Note: Replace `<DeathPlaceURI>` with the actual URI obtained from the first query.",3,3,4,1,3,3,3,71,0,0,1,0,0.0,0
507,1,train,Give me the director of Entertaining Mr Sloane (film).,SELECT ?result WHERE { <http://dbpedia.org/resource/Entertaining_Mr_Sloane_(film)> <http://dbpedia.org/ontology/director> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?director WHERE {
  dbr:Entertaining_Mr_Sloane (dbo:director) ?director .
}
```",1,1,2,1,1,3,3,71,0,0,1,0,0.0,0
273,9,train,Give me the child of the child of Edoardo Agnelli (1831-1871).,SELECT ?result WHERE { ?v0 <http://dbpedia.org/ontology/parent> <http://dbpedia.org/resource/Edoardo_Agnelli_(1831-1871)> . ?v0 <http://dbpedia.org/ontology/child> ?result . },"```sparql
SELECT ?grandchild WHERE {
  # Find the children of Edoardo Agnelli (1831-1871)
  ?child dbo:parent dbr:Edoardo_Agnelli_(1831–1871) .
  
  # For each child, find their children (i.e., grandchildren of Edoardo Agnelli)
  ?grandchild dbo:parent ?child .
}
```",2,2,3,2,1,3,2,20,0,0,1,0,0.0,0
83,13,train,"Give me the ruling party in the birthplace, that is a town and Brazilian and a soccer club, of the member, that is a sports manager, of Kedah FA.",SELECT ?result WHERE { ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsManager>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Town>. ?v1 <http://dbpedia.org/property/leaderParty> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerClub>. ?v0 <http://dbpedia.org/ontology/team> <http://dbpedia.org/resource/Kedah_FA> . ?v1 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Brazil>. ?v0 <http://dbpedia.org/ontology/birthPlace> ?v1 . },"```sparql
SELECT ?town ?rulingParty WHERE {
  # Step 1: Find sports managers associated with Kedah FA
  ?person dbo:occupation dbp:Sports_Manager ;
          dbo:memberOf dbp:Kedah_FA .

  # Step 2: Filter by birthplace being a Brazilian town with a soccer club
  ?person dbo:birthPlace ?town .
  ?town rdf:type dbo:Town ;
        dbo:country dbr:Brazil ;
        dbo:sportTeam ?soccerClub .
  ?soccerClub rdf:type dbo:Soccer_Club .

  # Step 3: Find the ruling party of that town
  ?town dbo:government ?government .
  ?government dbo:rulingParty ?rulingParty .
}
```",3,7,4,3,1,3,2,20,0,0,1,0,0.0,0
507,36,train,Give me the professional in the profession of the person born on 1966-02-18 and spouse of Anne V. Coates.,"SELECT ?result WHERE { ?v0 <http://dbpedia.org/property/occupation> ?v1 . ?v0 <http://dbpedia.org/ontology/birthDate> ""1966-02-18""^^<http://www.w3.org/2001/XMLSchema#date> . ?result <http://dbpedia.org/ontology/spouse> <http://dbpedia.org/resource/Anne_V._Coates> . ?result <http://dbpedia.org/property/occupation> ?v1 . }","```sparql
SELECT ?person ?profession ?spouse WHERE {
  ?person dbo:birthDate ""1966-02-18""^^xsd:date .
  ?person foaf:surname ?surname .
  ?person dbo:spouse ?spouse .
  ?spouse foaf:name ""Anne V. Coates""@en .
  ?person dbo:occupation ?profession .
}
```",4,4,5,3,2,3,3,71,0,0,1,0,0.0,0
715,26,train,"Give me the commander in the force of the mayor, that is an office holder and a politician and a president, of 1933 Spanish general election.",SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v2 <http://dbpedia.org/ontology/commander> ?v1 . <http://dbpedia.org/resource/1933_Spanish_general_election> <http://dbpedia.org/property/leader> ?v1 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/President>. ?v2 <http://dbpedia.org/ontology/commander> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?person WHERE {
  ?election dbo:event = dbr:1933_Spanish_general_election .
  ?person dbo:electedDuring = ?election ;
          a dbo:Politician, dbo:President ;
          dbo:officeHolder = ?mayorRole .
  
  OPTIONAL { ?mayorRole rdfs:label ?roleLabel FILTER (CONTAINS(LCASE(?roleLabel), ""commander in the force of the mayor"")) }
}
```",3,6,4,3,1,3,3,71,0,0,28,0,0.0,0
715,4,train,"Give me the force, that is a military conflict, of Abd el-Krim.",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Abd_el-Krim> . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?conflict WHERE {
  ?person a dbo:Person ;
          foaf:name ""Abd el-Krim""@en .
  
  ?event dbo:agent ?person ;
         a dbo:MilitaryConflict .

  ?conflict rdfs:label ?eventLabel .
  FILTER (lang(?eventLabel) = 'en' && regex(str(?eventLabel), ""Rif War"", ""i""))
}
```",1,2,2,1,1,3,3,71,0,0,2,0,0.0,0
839,36,train,"Give me the band of Kevin Russell (musician) and band of the band, that is a musical artist, of the professional in Musician.","SELECT ?result WHERE { <http://dbpedia.org/resource/Kevin_Russell_(musician)> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?v0 <http://dbpedia.org/ontology/associatedMusicalArtist> ?v1 . ?v0 <http://dbpedia.org/property/occupation> ""Musician""@en . ?result <http://dbpedia.org/ontology/bandMember> ?v1 . }","```sparql
# Query to find the band Kevin Russell is part of
SELECT ?band WHERE {
  ?person foaf:name ""Kevin Russell""@en .
  ?person dbo:associatedBand ?band .
}

# Assuming the result from above gives us The Gourds, we query for bands associated with The Gourds
SELECT ?associatedBand WHERE {
  <http://dbpedia.org/resource/The_Gourds> dbo:associatedBand ?associatedBand .
}
```",4,5,5,3,2,3,3,71,0,0,1,0,0.0,0
47,37,train,"Give me the office of the awardee of the award, that is an award, of Mantu Ghosh and office of Ajoy Mukherjee.",SELECT ?result WHERE { ?v3 <http://dbpedia.org/property/office> ?result . <http://dbpedia.org/resource/Ajoy_Mukherjee> <http://dbpedia.org/property/office> ?result . <http://dbpedia.org/resource/Mantu_Ghosh> <http://dbpedia.org/property/awards> ?v0 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Award>. ?v3 <http://dbpedia.org/property/awards> ?v0 . },"```sparql
# Query to find the office held by Mantu Ghosh when he received an award
SELECT DISTINCT ?award ?office 
WHERE {
  ?person foaf:name ""Mantu Ghosh""@en .
  ?person dbo:awards ?award .
  ?award rdf:type dbo:Award .
  OPTIONAL { ?person dbo:holdsOffice ?office . }
}

UNION

# Query to find the office held by Ajoy Mukherjee
SELECT DISTINCT ?office 
WHERE {
  ?person foaf:name ""Ajoy Mukherjee""@en .
  ?person dbo:holdsOffice ?office .
}
```",4,5,5,3,2,3,3,71,0,0,1,0,0.0,0
465,17,train,"Give me the child, that is a royalty, of the parent of Charles Orlando, Dauphin of France.","SELECT ?result WHERE { ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. <http://dbpedia.org/resource/Charles_Orlando,_Dauphin_of_France> <http://dbpedia.org/ontology/parent> ?v1 . ?v1 <http://dbpedia.org/ontology/child> ?result . }","```sparql
SELECT ?child WHERE {
  ?charlesOrlando dbo:spouse ?parent .
  FILTER(STR(?charlesOrlando) = ""Charles Orlando, Dauphin of France"") .

  ?parent dbo:child ?child .
  FILTER EXISTS { ?child a dbo:Monarch } .
}
```",2,3,3,2,1,3,3,71,0,0,2,0,0.0,0
839,37,train,"Give me the band of Matthias Röhr and band of the member of the band, that is a band and a group, of Peter Schorowsky.",SELECT ?result WHERE { ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Group>. ?result <http://dbpedia.org/ontology/bandMember> <http://dbpedia.org/resource/Matthias_Röhr> . ?result <http://dbpedia.org/ontology/bandMember> ?v3 . ?v0 <http://dbpedia.org/ontology/bandMember> ?v3 . <http://dbpedia.org/resource/Peter_Schorowsky> <http://dbpedia.org/ontology/associatedMusicalArtist> ?v0 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Band>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?matthiasBand ?peterBand WHERE {
  # Find the band associated with Matthias Röhr
  ?matthiasPerson a dbo:Musician ;
                  foaf:name ""Matthias Röhr"" .
  ?matthiasPerson dbo:bandMemberOf ?matthiasBand .

  # Find the band associated with Peter Schorowsky that is both a band and a group
  ?peterPerson a dbo:Musician ;
               foaf:name ""Peter Schorowsky"" .
  ?peterPerson dbo:bandMemberOf ?peterBand .
  ?peterBand rdf:type dbo:MusicalGroup .
  FILTER EXISTS { ?peterBand dbo:genre dbr:Rock_music } # Assuming Rock music as a common genre for bands
  FILTER EXISTS { ?peterBand rdf:type dbo:Band }
}
```",4,6,5,3,2,3,3,71,0,0,1,0,0.0,0
508,13,train,"Give me the birthplace of the commander, that is a politician, in the war, that is a military conflict and a societal event and an event, of Hayao Tada.",SELECT ?result WHERE { ?v0 <http://dbpedia.org/ontology/commander> ?v1 . ?v1 <http://dbpedia.org/ontology/birthPlace> ?result . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. <http://dbpedia.org/resource/Hayao_Tada> <http://dbpedia.org/ontology/battle> ?v0 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?birthPlace WHERE {
  ?person a dbo:Person ;
          foaf:name ""Hayao Tada""@en ;
          dbo:occupation dbo:Politician ;
          dbo:militaryCommanderOf ?war .
  
  OPTIONAL { ?person dbo:birthPlace ?birthPlace . }
}
```",3,7,4,3,1,3,2,20,0,0,49,0,0.0,0
365,14,train,"Give me the spouse of the native, that is a politician, of the reference to Полтавская губерния.","SELECT ?result WHERE { ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v0 <http://dbpedia.org/ontology/birthPlace> ?v2 . ?v2 <http://xmlns.com/foaf/0.1/name> ""Полтавская губерния""@en . ?v0 <http://dbpedia.org/ontology/spouse> ?result . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?spouse WHERE {
  # Find entities related to Полтавская губерния
  ?region rdfs:label ""Полтавская губерния""@ru .
  
  # Identify politicians native to this region
  ?person dbo:nationality dbr:Ukraine ;
          dbo:birthPlace ?region ;
          a dbo:Politician .

  # Get the spouse of the politician
  OPTIONAL { ?person dbp:spouse ?spouse . }
}
```",3,4,4,3,1,3,2,20,0,0,3,0,0.0,0
917,25,train,Give me the child of Kekūanāoʻa and child of the father of Kamehameha IV.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/parent> <http://dbpedia.org/resource/Kekūanāoʻa> . ?result <http://dbpedia.org/property/father> ?v0 . <http://dbpedia.org/resource/Kamehameha_IV> <http://dbpedia.org/property/father> ?v0 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?child WHERE {
  # Kekūanāoʻa's children
  VALUES ?kekuanaoa { dbr:Kekuanaoa }
  
  ?kekuanaoa dbo:child ?child1 .
  
  # Kamehameha IV's father and his children
  VALUES ?kamehamehaIVfather { dbr:Kiwalao }
  
  ?kamehamehaIVfather dbo:child ?child2 .

  # Find common child
  FILTER (?child1 = ?child2)
  BIND(?child1 AS ?child)
}
```",3,3,4,2,2,3,3,71,0,0,3,0,0.0,0
98,16,train,"Give me the region of Philippine Standard Time and entity in the region, that is a country, of Philippine Standard Time.",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/country> ?v0 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. ?result <http://dbpedia.org/ontology/timeZone> <http://dbpedia.org/resource/Philippine_Standard_Time> . ?v0 <http://dbpedia.org/property/timeZone> <http://dbpedia.org/resource/Philippine_Standard_Time> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT DISTINCT ?region ?country WHERE {
  ?entity dbp:timeZone ""Philippine Standard Time"" .
  ?entity dbo:location ?region .
  OPTIONAL { 
    ?region dbo:country ?country .
    FILTER EXISTS { ?country a dbo:Country }
  }
}
```",3,4,4,2,2,2,3,28,0,0,1743,0,0.0,0
216,29,train,"Give me the player in Igor Bišćan and player in the coach, that is a soccer player and a sports manager and a soccer manager, of Bosnia and Herzegovina national under-18 football team and team of Ognjen Vukojević.",SELECT ?result WHERE { ?v3 <http://dbpedia.org/ontology/team> ?result . ?result <http://dbpedia.org/ontology/coach> <http://dbpedia.org/resource/Ognjen_Vukojević> . <http://dbpedia.org/resource/Bosnia_and_Herzegovina_national_under-18_football_team> <http://dbpedia.org/ontology/coach> ?v3 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerPlayer>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsManager>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerManager>. <http://dbpedia.org/resource/Igor_Bišćan> <http://dbpedia.org/ontology/team> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?player WHERE {
  # Find players who played with Igor Bišćan
  ?team dbo:member dbr:Igor_Bišćan .
  ?team dbo:member ?player .

  # Ensure the player is also a coach under Ognjen Vukojević
  ?coachTeam dbo:manager dbr:Ognjen_Vukojević .
  ?coachTeam dbo:member ?player .

  # Check if the player has been involved with Bosnia and Herzegovina national under-18 football team as a manager
  ?under18Team dbo:manager ?player ;
               rdfs:label ""Bosnia and Herzegovina national under-18 football team""@en .

  # Ensure the person is both a soccer player and a sports manager or soccer manager
  ?player dbo:occupation dbr:Soccer_player .
  OPTIONAL { ?player dbo:occupation dbr:Sports_manager . }
  OPTIONAL { ?player dbo:occupation dbr:Soccer_manager . }

  FILTER (LANG(?under18Team) = ""en"")
}
```",4,7,5,2,3,3,3,71,0,0,1,0,0.0,0
839,33,train,"Give me the band of Kevin Russell (musician) and band of the member of the band, that is a band and a group, of Peter Schorowsky.",SELECT ?result WHERE { <http://dbpedia.org/resource/Peter_Schorowsky> <http://dbpedia.org/ontology/associatedMusicalArtist> ?v0 . ?v0 <http://dbpedia.org/ontology/bandMember> ?v3 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Group>. ?result <http://dbpedia.org/ontology/bandMember> ?v3 . <http://dbpedia.org/resource/Kevin_Russell_(musician)> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Band>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?kevinBand ?peterBand WHERE {
  # Find the band associated with Kevin Russell
  ?kevinRussell a dbo:Musician ;
                foaf:name ""Kevin Russell"" .
  ?kevinRussell dbo:bandMemberOf ?kevinBand .

  # Find the band associated with Peter Schorowsky, ensuring it is both a band and a group
  ?peterSchorowsky a dbo:Musician ;
                   foaf:name ""Peter Schorowsky"" .
  ?peterSchorowsky dbo:bandMemberOf ?peterBand .
  ?peterBand a dbo:MusicalGroup, dbo:Band .
}
```",4,6,5,3,2,3,3,71,0,0,1,0,0.0,0
987,10,train,Give me the entity in Montenegro and birth place of Dado Polumenta.,SELECT ?result WHERE { <http://dbpedia.org/resource/Dado_Polumenta> <http://dbpedia.org/ontology/birthPlace> ?result . ?result <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Montenegro> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX geo: <http://www.w3.org/2003/01/geo/wgs84_pos#>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?birthPlace WHERE {
  ?person a dbo:Person ;
          foaf:name ""Dado Polumenta""@en .
  ?person dbo:birthPlace ?birthPlace .
  ?birthPlace geo:lat ?lat ;
              geo:long ?long .
  OPTIONAL { 
    ?birthPlace dbp:country ""Montenegro""@en .
  }
}
```",2,2,3,1,2,3,3,71,1,2,0,0.3333333333333333,1.0,0.5
791,34,train,"Give me the father of Emperor Go-Toba and spouse of the spouse, that is a royalty, of the reference to Emperor Takakura.","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/spouse> ?v1 . ?v1 <http://dbpedia.org/ontology/spouse> ?v2 . <http://dbpedia.org/resource/Emperor_Go-Toba> <http://dbpedia.org/property/father> ?result . ?v2 <http://xmlns.com/foaf/0.1/name> ""Emperor Takakura""@en . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. }","```sparql
SELECT ?goTobaFather ?takakuraSpouse WHERE {
  # Find Emperor Go-Toba's father
  dbpedia:Emperor_Go-Toba dbo:father ?goTobaFather .
  
  # Find Emperor Takakura's spouse
  dbpedia:Emperor_Takakura dbo:spouse ?takakuraSpouse .

  # Ensure the spouse of Takakura's spouse is royalty (which should be Takakura himself)
  ?takakuraSpouse dbo:spouse dbpedia:Emperor_Takakura .
  
  # Check if Go-Toba's father and Takakura are the same person
  FILTER (?goTobaFather = dbpedia:Emperor_Takakura)
}
```",4,5,5,3,2,3,3,71,0,0,1,0,0.0,0
978,5,train,Give me the person born as Nicholas Bracegirdle.,"SELECT ?result WHERE { ?result <http://dbpedia.org/property/birthName> ""Nicholas Bracegirdle""@en . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT ?person ?name WHERE {
  ?person dbo:birthName ""Nicholas Bracegirdle""@en .
  OPTIONAL { ?person foaf:name ?name . }
}
```",1,1,2,1,1,3,2,20,0,0,1,0,0.0,0
926,5,train,Give me the spouse of Şermi Kadın.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/spouse> <http://dbpedia.org/resource/Şermi_Kadın> . },"```sparql
SELECT ?spouse WHERE {
  dbpedia:Şermi_Kadın dbo:spouse ?spouse .
}
```",1,1,2,1,1,3,3,71,0,0,1,0,0.0,0
158,0,train,Give me the entity in France.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/France> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?entity ?entityLabel WHERE {
  ?entity dbo:country dbr:France .
  SERVICE wikibase:label { bd:serviceParam wikibase:language ""[AUTO_LANGUAGE],en"". }
}
LIMIT 10
```",1,1,2,1,1,3,2,20,0,0,44301,0,0.0,0
715,34,train,"Give me the commander in the force, that is a military conflict, of the native of Morocco and leader of Ministry of the Air (Spain).",SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/commander> ?v2 . <http://dbpedia.org/resource/Ministry_of_the_Air_(Spain)> <http://dbpedia.org/ontology/leader> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v2 <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Morocco> . ?v1 <http://dbpedia.org/ontology/commander> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?person ?name ?role ?conflict WHERE {
  ?person a dbo:MilitaryPerson .
  ?person dbo:nationality dbr:Morocco .
  ?person dbo:occupation dbr:Ministry_of_the_Air_(Spain) .
  ?person rdfs:label ?name FILTER (lang(?name) = 'en') .

  OPTIONAL { 
    ?person dbo:militaryConflict ?conflict .
    ?conflict rdfs:label ?conflictLabel FILTER (lang(?conflictLabel) = 'en') .
  }
  
  FILTER regex(str(?name), ""Francisco Franco"", ""i"")
}
```",4,5,5,3,2,3,3,71,0,0,1,0,0.0,0
888,4,train,Give me the commander in 2022 Ukrainian eastern counteroffensive.,SELECT ?result WHERE { <http://dbpedia.org/resource/2022_Ukrainian_eastern_counteroffensive> <http://dbpedia.org/ontology/commander> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?commander WHERE {
  ?operation a dbo:MilitaryOperation ;
             dbo:partOf ?conflict .
  
  FILTER(CONTAINS(LCASE(STR(?operation)), ""ukrainian eastern counteroffensive"") &&
         CONTAINS(LCASE(STR(?conflict)), ""2022""))

  ?operation dbo:commander ?commander .
}
```",1,1,2,1,1,3,2,20,0,0,4,0,0.0,0
527,7,train,"Give me the actor of the movie, that is a work and English and a television show, with Bernard Bresslaw.",SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?v1 <http://dbpedia.org/property/starring> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/TelevisionShow>. ?v1 <http://dbpedia.org/property/starring> <http://dbpedia.org/resource/Bernard_Bresslaw> . ?v1 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/United_Kingdom>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dcterms: <http://purl.org/dc/terms/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT DISTINCT ?actor WHERE {
  ?work dbo:starring ?role .
  ?role dbo:agent ?actor .
  FILTER (?actor = dbpedia:Bernard_Bresslaw) .
  
  ?work a ?type .
  VALUES ?type { dbo:Film dbo:TelevisionSeries } .

  ?work dcterms:language ""English"" .
  
  OPTIONAL {
    ?work rdfs:label ?title .
    FILTER (lang(?title) = 'en')
  }
}
```",2,5,3,2,1,3,2,20,0,0,7,0,0.0,0
18,17,train,"Give me the parent of the professional in Actress and alumnus of Marymount College, Tarrytown.","SELECT ?result WHERE { ?v2 <http://dbpedia.org/property/occupation> ""Actress""@en . ?result <http://dbpedia.org/ontology/child> ?v2 . ?result <http://dbpedia.org/ontology/almaMater> <http://dbpedia.org/resource/Marymount_College,_Tarrytown> . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?parent WHERE {
  ?person a dbo:Person ;
          dbo:almaMater dbr:Marymount_College_(Tarrytown) ;
          dbo:occupation dbr:Actress .
  
  OPTIONAL { ?person dbo:parent ?parent . }
}
```",3,3,4,2,2,2,3,28,0,0,1,0,0.0,0
773,35,train,"Give me the parent of the child, that is a royalty, of Louis the German and spouse of the father of Charles the Fat.",SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. <http://dbpedia.org/resource/Charles_the_Fat> <http://dbpedia.org/property/father> ?v2 . ?v1 <http://dbpedia.org/ontology/parent> ?result . ?v2 <http://dbpedia.org/ontology/spouse> ?result . ?v1 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Louis_the_German> . },"```sparql
SELECT ?parent WHERE {
  # Step 1: Find Louis the German's children
  ?child dbo:spouse ?spouse .
  ?child dbo:father dbr:Louis_the_German .

  # Step 2: Filter for royalty (assuming they have a title)
  OPTIONAL { ?child dbo:title ?title . FILTER(STRSTARTS(LCASE(?title), ""king"") || STRSTARTS(LCASE(?title), ""queen"")) }

  # Step 3: Get spouse information
  ?spouse rdfs:label ""Emma of Altdorf""@en .

  # Step 4: Identify Charles the Fat's father (already known as Louis the German)

  # Step 5: Find parent of the spouse
  ?spouse dbo:parent ?parent .
}
```",4,5,5,2,2,3,3,71,0,0,1,0,0.0,0
129,2,train,Give me the associated musical artist of Saba (rapper).,SELECT ?result WHERE { <http://dbpedia.org/resource/Saba_(rapper)> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?artist WHERE {
  dbr:Saba_(rapper) dbo:associatedMusicalArtist ?artist .
}
```",1,1,2,1,1,2,3,28,0,0,8,0,0.0,0
417,12,train,Give me the child of Alexandrine of Mecklenburg-Schwerin and child of Christian X of Denmark.,SELECT ?result WHERE { ?result <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Christian_X_of_Denmark> . ?result <http://dbpedia.org/ontology/parent> <http://dbpedia.org/resource/Alexandrine_of_Mecklenburg-Schwerin> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>

SELECT ?child WHERE {
  ?alexandrine dbo:spouse ?christianX .
  ?alexandrine a dbo:Person ;
               foaf:name ""Alexandrine of Mecklenburg-Schwerin""@en .
  ?christianX a dbo:Person ;
              foaf:name ""Christian X of Denmark""@en .
  
  ?child dbo:parent ?alexandrine ;
         dbo:parent ?christianX .
}
```",2,2,3,1,2,3,3,71,0,0,2,0,0.0,0
36,1,train,Give me the person born in 1971.,"SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/birthYear> ""1971""^^<http://www.w3.org/2001/XMLSchema#gYear> . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?person ?name WHERE {
    ?person a dbo:Person .
    ?person dbo:birthYear ""1971""^^xsd:gYear .
    OPTIONAL { ?person rdfs:label ?name . FILTER (lang(?name) = 'en') }
}
ORDER BY ?name
```",1,1,2,1,1,2,3,28,2611,2567,0,0.5042487446890691,1.0,0.6704326614456284
281,16,train,Give me the commander in New Guinea campaign and awardee of the award of Alfred Warden.,SELECT ?result WHERE { ?result <http://dbpedia.org/property/awards> ?v2 . <http://dbpedia.org/resource/New_Guinea_campaign> <http://dbpedia.org/ontology/commander> ?result . <http://dbpedia.org/resource/Alfred_Warden> <http://dbpedia.org/property/awards> ?v2 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?commander ?name WHERE {
  ?campaign dbo:location dbr:New_Guinea .
  ?campaign dbo:commander ?commander .
  ?commander rdfs:label ?name .
  FILTER(CONTAINS(LCASE(?name), ""new guinea"") || CONTAINS(LCASE(?name), ""guadalcanal"")) # To ensure relevance to the New Guinea campaign
  OPTIONAL {
    ?commander dbo:award dbr:Alfred_Ward_Award .
  }
  FILTER EXISTS { ?commander dbo:award dbr:Alfred_Ward_Award . }
}
ORDER BY ?name
```",3,3,4,2,2,2,3,28,0,0,1,0,0.0,0
965,34,train,"Give me the spouse of the spouse of the parent of Louise Mountbatten and parent of George Mountbatten, 2nd Marquess of Milford Haven.","SELECT ?result WHERE { <http://dbpedia.org/resource/George_Mountbatten,_2nd_Marquess_of_Milford_Haven> <http://dbpedia.org/ontology/parent> ?result . ?v3 <http://dbpedia.org/ontology/spouse> ?v1 . ?result <http://dbpedia.org/ontology/spouse> ?v1 . <http://dbpedia.org/resource/Louise_Mountbatten> <http://dbpedia.org/ontology/parent> ?v3 . }","```sparql
SELECT ?spouseOfSpouse WHERE {
  # Step 1: Find Louise Mountbatten's parent
  ?louise dbo:parent ?parentLouise .
  ?louise dbp:name ""Louise Mountbatten""@en .

  # Step 2: Find the spouse of Louise Mountbatten's parent
  ?parentLouise dbo:spouse ?spouseParentLouise .

  # Step 3: Find George Mountbatten, 2nd Marquess of Milford Haven's parent
  ?george dbo:parent ?parentGeorge .
  ?george dbp:name ""George Mountbatten, 2nd Marquess of Milford Haven""@en .

  # Step 4: Ensure the spouse from step 2 is also a parent to George Mountbatten
  FILTER(?spouseParentLouise = ?parentGeorge)

  # Step 5: Find the spouse of the spouse from step 2
  ?spouseParentLouise dbo:spouse ?spouseOfSpouse .
}
```",4,4,5,3,2,3,3,71,0,0,2,0,0.0,0
216,6,train,"Give me the coach, that is a soccer player and a sports manager and a soccer manager, of Bosnia and Herzegovina national under-18 football team.",SELECT ?result WHERE { ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerManager>. ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsManager>. <http://dbpedia.org/resource/Bosnia_and_Herzegovina_national_under-18_football_team> <http://dbpedia.org/ontology/coach> ?result . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerPlayer>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?coach WHERE {
  ?team dbo:coach ?coach .
  ?coach dbo:occupation ?occupation1 .
  ?coach dbo:occupation ?occupation2 .
  ?coach dbo:occupation ?occupation3 .

  FILTER (
    str(?team) = ""Bosnia_and_Herzegovina_national_under-18_football_team"" &&
    (str(?occupation1) = ""Soccer player"" || str(?occupation1) = ""Sports manager"" || str(?occupation1) = ""Soccer manager"") &&
    (str(?occupation2) = ""Soccer player"" || str(?occupation2) = ""Sports manager"" || str(?occupation2) = ""Soccer manager"") &&
    (str(?occupation3) = ""Soccer player"" || str(?occupation3) = ""Sports manager"" || str(?occupation3) = ""Soccer manager"")
  )
}
```",1,4,2,1,1,3,3,71,0,0,1,0,0.0,0
417,39,train,"Give me the child of the child, that is a royalty, of the parent, that is a royalty, of Alexandrine of Mecklenburg-Schwerin and child of Christian X of Denmark.",SELECT ?result WHERE { <http://dbpedia.org/resource/Alexandrine_of_Mecklenburg-Schwerin> <http://dbpedia.org/ontology/parent> ?v0 . ?v1 <http://dbpedia.org/property/father> ?v0 . ?result <http://dbpedia.org/ontology/parent> ?v1 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?result <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Christian_X_of_Denmark> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?grandchild WHERE {
  # Alexandrine of Mecklenburg-Schwerin and Christian X of Denmark's child
  ?parent1 a dbo:Person ;
           foaf:name ""Alexandrine of Mecklenburg-Schwerin""@en .
  ?parent2 a dbo:Person ;
           foaf:name ""Christian X of Denmark""@en .

  # Their child, Princess Margrethe
  ?child a dbo:Person ;
         foaf:name ""Princess Margrethe of Denmark""@en ;
         dbo:parent ?parent1 ;
         dbo:parent ?parent2 .

  # Crown Prince Frederik as the grandchild
  ?grandchild a dbo:Person ;
              foaf:name ""Frederik, Crown Prince of Denmark""@en ;
              dbo:parent ?child .
}
```",4,6,5,3,2,3,3,71,0,0,2,0,0.0,0
495,11,train,Give me the child of the father of William I of Württemberg and father of Princess Charlotte of Württemberg.,SELECT ?result WHERE { ?result <http://dbpedia.org/property/father> ?v2 . <http://dbpedia.org/resource/Princess_Charlotte_of_Württemberg> <http://dbpedia.org/property/father> ?result . <http://dbpedia.org/resource/William_I_of_Württemberg> <http://dbpedia.org/property/father> ?v2 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?child WHERE {
  VALUES ?parent { dbr:Friedrich_I_of_Württemberg }
  ?parent dbo:spouse ?spouse .
  OPTIONAL { ?parent dbo:child ?child . FILTER(?child IN (dbr:William_I_of_Württemberg, dbr:Princess_Charlotte_of_Württemberg)) }
}
```",3,3,4,2,2,3,2,20,0,0,1,0,0.0,0
41,6,train,Give me the party of Declan Costello and party of Mark Durkan.,SELECT ?result WHERE { <http://dbpedia.org/resource/Mark_Durkan> <http://dbpedia.org/ontology/party> ?result . <http://dbpedia.org/resource/Declan_Costello> <http://dbpedia.org/ontology/party> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>

SELECT ?person ?partyLabel WHERE {
  VALUES ?person { 
    dbpedia:Declan_Costello_(politician) 
    dbpedia:Mark_Durkan 
  }
  ?person dbo:party ?party .
  SERVICE wikibase:label { bd:serviceParam wikibase:language ""[AUTO_LANGUAGE],en"". }
}
```",2,2,3,1,2,2,3,28,0,0,1,0,0.0,0
158,5,train,"Who is the successor, that is a prime minister and an office holder and a politician, of André Tardieu?",SELECT ?result WHERE { ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. <http://dbpedia.org/resource/André_Tardieu> <http://dbpedia.org/ontology/successor> ?result . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/PrimeMinister>. },"```sparql
SELECT ?successor WHERE {
  ?tardieu dbo:officeHolder dbr:Prime_Minister_of_France ;
           dbo:termStart ?startTardieu ;
           dbo:termEnd ?endTardieu .
  
  ?successor dbo:officeHolder dbr:Prime_Minister_of_France ;
             dbo:predecessor ?tardieu ;
             dbo:termStart ?startSuccessor .

  FILTER (?startSuccessor > ?endTardieu)
  
  ?successor a dbo:Politician .
}
```",1,4,2,1,1,3,2,20,0,0,1,0,0.0,0
978,0,train,Give me the band member of Enya.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/associatedMusicalArtist> <http://dbpedia.org/resource/Enya> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?person ?role WHERE {
  VALUES ?enyasong {dbr:Watermark dbr:The_Celtic_Woman dbr:A_day_without_rain}
  ?song dbo:artist dbr:Enya .
  OPTIONAL { ?song dbo:producer ?person . }
  OPTIONAL { ?song dbo:lyricist ?person . }
  FILTER(?person != dbr:Enya)
  BIND(""Producer"" AS ?role) 
  UNION
  {
    ?song dbo:lyricist ?person .
    FILTER(?person != dbr:Roma_Ryan)
    BIND(""Lyricist"" AS ?role)
  }
}
```",1,1,2,1,1,3,2,20,0,0,7,0,0.0,0
465,19,train,Give me the successor of the child of Alfonso I d'Este and spouse of Archduchess Barbara of Austria.,SELECT ?result WHERE { ?v0 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Alfonso_I_d'Este> . ?result <http://dbpedia.org/ontology/spouse> <http://dbpedia.org/resource/Archduchess_Barbara_of_Austria> . ?v0 <http://dbpedia.org/ontology/successor> ?result . },"```sparql
SELECT ?successor WHERE {
  ?alfonso1 dbo:spouse ?lucrezia .
  ?alfonso1 foaf:name ""Alfonso I d'Este""@en .
  
  ?lucrezia dbo:spouse ?barbara .
  ?barbara foaf:name ""Barbara of Austria""@en .

  ?lucrezia dbo:child ?successor .
}
```",3,3,4,2,2,3,3,71,0,0,1,0,0.0,0
573,5,train,"Who is the professional, that is American, in Politician?","SELECT ?result WHERE { ?result <http://dbpedia.org/property/occupation> ""Politician""@en . ?result <http://dbpedia.org/ontology/nationality> <http://dbpedia.org/resource/United_States>. }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?person WHERE {
  ?person a dbo:Politician .
  ?person dbo:nationality dbr:United_States .
}
LIMIT 10
```",1,2,2,1,1,3,3,71,0,10,83,0.0,0.0,0
865,28,train,"Give me the native of the residence, that is a country, of Ram Jaipal Singh Yadav and father of AK Abdul Momen and father of Shahla Khatun.",SELECT ?result WHERE { <http://dbpedia.org/resource/Shahla_Khatun> <http://dbpedia.org/property/father> ?result . ?result <http://dbpedia.org/ontology/birthPlace> ?v0 . <http://dbpedia.org/resource/Ram_Jaipal_Singh_Yadav> <http://dbpedia.org/property/residence> ?v0 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. <http://dbpedia.org/resource/AK_Abdul_Momen> <http://dbpedia.org/property/father> ?result . },"```sparql
SELECT ?nativeCountry WHERE {
  ?person1 foaf:name ""Ram Jaipal Singh Yadav"" .
  ?person2 foaf:name ""AK Abdul Momen"" .
  ?person3 foaf:name ""Shahla Khatun"" .

  ?person1 dbo:child ?person2 .
  ?person2 dbo:sibling ?person3 .

  ?person2 dbo:nationality <http://dbpedia.org/resource/Bangladesh> .
  
  OPTIONAL { ?person2 dbo:residence ?location . }
  OPTIONAL { ?location dbo:countryName ?nativeCountry . }

  FILTER(?nativeCountry = ""Bangladesh"")
}
```",4,5,5,2,3,3,3,71,0,0,1,0,0.0,0
865,5,train,Who is the spouse of Syeda Shahar Banu?,SELECT ?result WHERE { <http://dbpedia.org/resource/Syeda_Shahar_Banu> <http://dbpedia.org/ontology/spouse> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>

SELECT ?spouse WHERE {
  ?person rdfs:label ""Syeda Shahar Banu""@en .
  ?person dbo:spouse ?spouse .
}
```",1,1,2,1,1,3,3,71,1,0,0,1.0,1.0,1.0
573,39,train,"Give me the person decedent at Quincy, Massachusetts and parent of the author, that is a politician and an office holder, of the work of John Quincy Adams.","SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v0 <http://dbpedia.org/property/author> <http://dbpedia.org/resource/John_Quincy_Adams> . ?result <http://dbpedia.org/ontology/deathPlace> <http://dbpedia.org/resource/Quincy,_Massachusetts> . ?v1 <http://dbpedia.org/ontology/parent> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v0 <http://dbpedia.org/property/author> ?v1 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?person ?deathPlace ?parentOf ?occupation WHERE {
  ?person a dbo:Person .
  ?person dbo:deathPlace dbr:Quincy,_Massachusetts .
  ?person dbo:spouse ?spouse .
  ?spouse dbo:child dbr:John_Quincy_Adams .
  ?person dbo:occupation ?occupation .
  FILTER(CONTAINS(LCASE(?occupation), ""politician"") || CONTAINS(LCASE(?occupation), ""office holder""))
}
```",4,6,5,3,2,3,3,71,0,0,2,0,0.0,0
892,3,train,Give me the true self of Enrico Crolla.,"SELECT ?result WHERE { ?result <http://xmlns.com/foaf/0.1/givenName> ""Enrico Crolla""@en . }","```sparql
PREFIX foaf: <http://xmlns.com/foaf/0.1/>
PREFIX schema: <http://schema.org/>

SELECT ?givenName ?familyName ?alias WHERE {
  ?person a foaf:Person ;
          foaf:name ""Enrico Crolla"" .
  
  OPTIONAL { ?person foaf:givenName ?givenName . }
  OPTIONAL { ?person foaf:familyName ?familyName . }
  OPTIONAL { ?person schema:name ?alias . FILTER(?alias != ""Enrico Crolla"") }
}
```",1,1,2,1,1,3,3,71,0,0,1,0,0.0,0
102,13,train,"Give me the manager of the player in the member, that is a soccer player, of England women's national football team.",SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/manager> ?result . ?v0 <http://dbpedia.org/ontology/team> ?v1 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerPlayer>. ?v0 <http://dbpedia.org/ontology/team> <http://dbpedia.org/resource/England_women's_national_football_team> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?player ?manager WHERE {
  ?player dbo:member dbr:England_women's_national_football_team .
  ?player dbo:occupation dbr:Soccer_player .
  OPTIONAL { ?player dbo:managedBy ?manager . }
}
```",3,4,4,3,1,3,2,20,0,0,43,0,0.0,0
527,11,train,"Give me the actor of the movie, that is a work and English and a television show, with Bernard Bresslaw and author of The Boy Who Kicked Pigs.",SELECT ?result WHERE { <http://dbpedia.org/resource/The_Boy_Who_Kicked_Pigs> <http://dbpedia.org/property/author> ?result . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?v2 <http://dbpedia.org/property/starring> <http://dbpedia.org/resource/Bernard_Bresslaw> . ?v2 <http://dbpedia.org/property/starring> ?result . ?v2 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/United_Kingdom>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/TelevisionShow>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?actor WHERE {
  ?tvShow a dbo:TelevisionSeries ;
          dbo:language ""English"" ;
          dbo:starring dbr:Bernard_Bresslaw .
  
  OPTIONAL { 
    ?tvShow dbo:basedOn dbr:The_Boy_Who_Kicked_Pigs .
  }
  
  ?tvShow dbo:actor ?actor .
}
```",3,6,4,2,2,3,2,20,0,0,1,0,0.0,0
987,27,train,"Give me the entity in the region, that is a country, of the time zone, that is a sports event, in Canicosa de la Sierra.",SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsEvent>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. ?v0 <http://dbpedia.org/property/timeZone> ?v1 . ?result <http://dbpedia.org/ontology/country> ?v0 . <http://dbpedia.org/resource/Canicosa_de_la_Sierra> <http://dbpedia.org/ontology/timeZone> ?v1 . },"```sparql
SELECT DISTINCT ?country WHERE {
  # Step 1: Identify Canicosa de la Sierra and its time zone
  dbpedia:Canicosa_de_la_Sierra dbo:locationInTimezone ?timezone .

  # Step 2: Find sports events associated with the time zone
  ?event dbo:timeZone ?timezone .
  FILTER EXISTS { ?event a dbo:SportsEvent }

  # Step 3: Identify countries in the region of the sports event
  ?region dbo:location ?event .
  ?country dbo:locatedInRegion ?region .

  # Ensure that the country is indeed a country
  ?country a dbo:Country .
}
```",3,5,4,3,1,3,3,71,0,0,173261,0,0.0,0
18,2,train,"Give me the alumnus of Marymount College, Tarrytown.","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/almaMater> <http://dbpedia.org/resource/Marymount_College,_Tarrytown> . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?alumnus WHERE {
  ?alumnus dbo:almaMater dbr:Marymount_College_(Tarrytown,_New_York) .
}
```",1,1,2,1,1,2,3,28,0,0,5,0,0.0,0
36,7,train,Give me the actor of Being Mrs Elliot and person born as Ayo Makun.,"SELECT ?result WHERE { <http://dbpedia.org/resource/Being_Mrs_Elliot> <http://dbpedia.org/ontology/starring> ?result . ?result <http://dbpedia.org/property/birthName> ""Ayo Makun""@en . }","```sparql
# Query to find the actor(s) of ""Being Mrs Elliot""
SELECT ?actor WHERE {
  ?movie dbo:title ""Being Mrs Elliot""@en .
  ?movie dbo:starring ?actor .
}

UNION

# Query to find the person born as Ayo Makun
SELECT ?person WHERE {
  ?person foaf:name ""Ayo Makun"" .
  ?person dbo:birthName ""Ayo Makun"" .
}
```",2,2,3,1,2,2,3,28,0,0,1,0,0.0,0
715,23,train,"Give me the commander in the force, that is a military conflict, of the native of Morocco.",SELECT ?result WHERE { ?v0 <http://dbpedia.org/ontology/commander> ?v2 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v2 <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Morocco> . ?v0 <http://dbpedia.org/ontology/commander> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?conflict ?commander WHERE {
  ?conflict a dbo:MilitaryConflict ;
           dbo:location dbr:Morocco .
  
  OPTIONAL { 
    ?conflict dbo:militaryCommander ?commander .
  }
}
LIMIT 1
```",3,4,4,3,1,3,3,71,0,0,476,0,0.0,0
507,15,train,Who is the person born as the birth name of Anne V. Coates?,SELECT ?result WHERE { <http://dbpedia.org/resource/Anne_V._Coates> <http://dbpedia.org/property/birthName> ?v1 . ?result <http://dbpedia.org/property/birthName> ?v1 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT ?person ?fullName WHERE {
  ?person dbo:birthName ""Anne V. Coates"" .
  OPTIONAL { ?person foaf:name ?fullName }
}
```",2,2,3,2,1,3,3,71,0,0,1,0,0.0,0
216,18,train,Give me the party of Campbell Newman and administration of the designer of Woolfe: The Red Hood Diaries.,SELECT ?result WHERE { <http://dbpedia.org/resource/Campbell_Newman> <http://dbpedia.org/ontology/party> ?result . <http://dbpedia.org/resource/Woolfe:_The_Red_Hood_Diaries> <http://dbpedia.org/property/designer> ?v2 . ?result <http://dbpedia.org/property/leader> ?v2 . },"```sparql
# Query to get Campbell Newman's party
SELECT ?party WHERE {
  wd:Q2108780 dbo:politicalParty ?party .
}

# Assuming we identify the designer as a person with a DBpedia entry, e.g., ""John Doe""
# Replace 'wd:Q1234567' with the actual DBpedia ID of the designer if known

# Query to get the administration or political role of the designer
SELECT ?administration WHERE {
  wd:Q1234567 dbo:politicalAffiliation ?party .
  ?party dbo:headOfGovernment ?administration .
}
```

Note: Replace `wd:Q1234567` with the actual DBpedia ID of the designer if it is available. If the designer does not have a known political role, this part of the query may need to be adjusted or omitted.",3,3,4,2,2,2,3,28,0,0,1,0,0.0,0
443,18,train,Give me the birthplace of Ulf Lundell and birthplace of the work of yes.,"SELECT ?result WHERE { <http://dbpedia.org/resource/Ulf_Lundell> <http://dbpedia.org/ontology/birthPlace> ?result . ?v0 <http://dbpedia.org/property/author> ""yes""@en . ?v0 <http://dbpedia.org/ontology/birthPlace> ?result . }","```sparql
SELECT ?ulBirthPlace ?yesOriginCity WHERE {
  # Query for Ulf Lundell's birthplace
  dbpedia:Ulf_Lundell dbo:birthPlace ?ulBirthPlace .
  
  # Query for the origin city of the band Yes
  dbpedia:Yes dbo:originLocation ?yesOriginCity .
}
```",3,3,4,2,2,2,3,28,0,0,2,0,0.0,0
965,23,train,Give me the spouse of the spouse of the parent of Louise Mountbatten.,SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/spouse> ?v2 . ?result <http://dbpedia.org/ontology/spouse> ?v2 . <http://dbpedia.org/resource/Louise_Mountbatten> <http://dbpedia.org/ontology/parent> ?v1 . },"```sparql
SELECT ?finalSpouse WHERE {
  ?louise dbo:parent ?parent .
  FILTER (str(?louise) = ""Louise Mountbatten"") .

  ?parent dbo:spouse ?spouseOfParent .

  ?spouseOfParent dbo:spouse ?finalSpouse .
}
```",3,3,4,3,1,3,3,71,0,0,2,0,0.0,0
826,20,train,"Give me the spouse of Anna Magdalena Appel and successor of the child, that is a royalty, of Louis I, Grand Duke of Hesse.","SELECT ?result WHERE { ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. <http://dbpedia.org/resource/Anna_Magdalena_Appel> <http://dbpedia.org/ontology/spouse> ?result . ?v2 <http://dbpedia.org/ontology/successor> ?result . <http://dbpedia.org/resource/Louis_I,_Grand_Duke_of_Hesse> <http://dbpedia.org/ontology/child> ?v2 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?spouse ?successor WHERE {
  # Find the spouse of Anna Magdalena Appel (Bach)
  dbr:Anna_Magdalena_Bach dbo:spouse dbr:Johann_Sebastian_Bach .
  
  # Find a royal successor from Louis I, Grand Duke of Hesse
  dbr:Louis_I,_Grand_Duke_of_Hesse dbo:child ?royalChild .
  ?royalChild rdf:type dbo:RoyalFamily ;
              dbo:successor ?successor .

  FILTER (?successor IN (dbr:Nicholas_II_of_Russia, dbr:Alexei_Nikolaevich_Tsesarevich_of_Russia))
}
```",3,4,4,2,2,3,3,71,0,0,1,0,0.0,0
892,5,train,Give me the member of E-girls.,SELECT ?result WHERE { <http://dbpedia.org/resource/E-girls> <http://dbpedia.org/ontology/bandMember> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?member WHERE {
  ?group dbp:name ""E-girls""@en .
  ?group dbo:member ?member .
}
```",1,1,2,1,1,3,3,71,0,0,8,0,0.0,0
47,2,train,Give me the office of Ajoy Mukherjee.,SELECT ?result WHERE { <http://dbpedia.org/resource/Ajoy_Mukherjee> <http://dbpedia.org/property/office> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?office WHERE {
  ?person a dbo:Person ;
          foaf:name ""Ajoy Mukherjee""@en .
  OPTIONAL { ?person dbo:office ?office . }
}
```",1,1,2,1,1,3,3,71,0,0,2,0,0.0,0
433,16,train,"Give me the associated musical artist, that is an artist and a musical artist, of the associated musical artist, that is a musical artist and an artist, of Ornette Coleman.",SELECT ?result WHERE { ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?v1 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. <http://dbpedia.org/resource/Ornette_Coleman> <http://dbpedia.org/ontology/associatedMusicalArtist> ?v1 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. },"```sparql
SELECT DISTINCT ?artist2 WHERE {
  # Step 1: Find an artist associated with Ornette Coleman who is both a musician and an artist
  ?association1 dbo:associatedMusicalArtist dbr:Ornette_Coleman .
  ?association1 dbo:musicalArtist ?artist1 .
  ?artist1 dbo:occupation dbr:Musical_artist .
  ?artist1 dbo:occupation dbr:Artist .

  # Step 2: Find an artist associated with the first artist who is both a musician and an artist
  ?association2 dbo:associatedMusicalArtist ?artist1 .
  ?association2 dbo:musicalArtist ?artist2 .
  ?artist2 dbo:occupation dbr:Musical_artist .
  ?artist2 dbo:occupation dbr:Artist .
}
```",2,6,3,2,1,3,3,71,0,0,20,0,0.0,0
158,13,train,"Give me the entity in the award, that is a country, of the reference to Adelbert Cronkhite.","SELECT ?result WHERE { ?v0 <http://dbpedia.org/property/awards> ?v1 . ?v0 <http://xmlns.com/foaf/0.1/name> ""Adelbert Cronkhite""@en . ?result <http://dbpedia.org/ontology/country> ?v1 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. }","```sparql
SELECT ?award ?country WHERE {
  ?person foaf:name ""Adelbert Cronkhite""@en .
  ?person dbo:awardsReceived ?award .
  OPTIONAL { ?award dbo:country ?country . }
}
```",3,4,4,3,1,3,2,20,0,0,44301,0,0.0,0
645,0,train,Give me the commander in Battle of Jarama.,SELECT ?result WHERE { <http://dbpedia.org/resource/Battle_of_Jarama> <http://dbpedia.org/ontology/commander> ?result . },"```sparql
PREFIX dbp: <http://dbpedia.org/property/>
PREFIX dbo: <http://dbpedia.org/ontology/>

SELECT ?commander WHERE {
  ?battle dbo:wikiPageRedirects dbp:Battle_of_Jarama .
  ?battle dbp:commander ?commander .
}
```",1,1,2,1,1,3,3,71,0,0,10,0,0.0,0
965,37,train,"Give me the parent of George Mountbatten, 2nd Marquess of Milford Haven and parent of the child, that is a royalty, of the person born, that is a politician, on 1854-05-24.","SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v2 <http://dbpedia.org/property/father> ?v1 . <http://dbpedia.org/resource/George_Mountbatten,_2nd_Marquess_of_Milford_Haven> <http://dbpedia.org/ontology/parent> ?result . ?v1 <http://dbpedia.org/ontology/birthDate> ""1854-05-24""^^<http://www.w3.org/2001/XMLSchema#date> . ?v2 <http://dbpedia.org/ontology/parent> ?result . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. }","```sparql
# Step 1: Find George Mountbatten, 2nd Marquess of Milford Haven and his parents
SELECT ?parent WHERE {
    ?person rdfs:label ""George Mountbatten, 2nd Marquess of Milford Haven""@en .
    ?person dbo:parent ?parent .
}

# Step 2: Find a child of George Mountbatten who is royalty
SELECT DISTINCT ?royalChild WHERE {
    ?child dbo:parent ?georgeMountbatten ;
           rdf:type dbo:RoyalFamilyMember .
    FILTER EXISTS { 
        ?georgeMountbatten rdfs:label ""George Mountbatten, 2nd Marquess of Milford Haven""@en .
    }
}

# Step 3: Identify the politician born on May 24, 1854
SELECT ?politician WHERE {
    ?person dbo:dateOfBirth ?dob ;
            rdf:type dbo:Politician .
    FILTER (STR(?dob) = ""1854-05-24""^^xsd:date)
}

# Step 4: Find a child of this politician who is royalty
SELECT DISTINCT ?royalChild2 WHERE {
    ?child dbo:parent ?politician ;
           rdf:type dbo:RoyalFamilyMember .
    FILTER EXISTS { 
        ?politician dbo:dateOfBirth ""1854-05-24""^^xsd:date .
    }
}

# Step 5: Find the common parent of both identified royals
SELECT DISTINCT ?commonParent WHERE {
    ?royalChild1 dbo:parent ?commonParent .
    ?royalChild2 dbo:parent ?commonParent .
    FILTER EXISTS { 
        ?royalChild1 ?p ?royalChild2 .
    }
}
```",4,6,5,3,2,3,3,71,0,0,2,0,0.0,0
865,34,train,"Give me the native of the residence, that is a country, of the person decedent at Patna and father of Shahla Khatun.",SELECT ?result WHERE { ?v1 <http://dbpedia.org/property/residence> ?v0 . ?v1 <http://dbpedia.org/ontology/deathPlace> <http://dbpedia.org/resource/Patna> . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. ?result <http://dbpedia.org/ontology/birthPlace> ?v0 . <http://dbpedia.org/resource/Shahla_Khatun> <http://dbpedia.org/property/father> ?result . },"```sparql
SELECT ?native WHERE {
  ?shahla dbo:mother ?mother .
  ?mother foaf:name ""Shahla Khatun"" .
  
  ?father dbo:child ?shahla .
  ?father dbo:deathPlace dbr:Patna .

  ?father dbo:residence ?residence .
  ?residence a dbo:Country .

  ?native dbo:nativeOf ?residence .
}
```",4,5,5,3,2,3,3,71,0,0,1,0,0.0,0
47,28,train,Give me the office of the administration of Jagdeep Dhankhar and office of Ajoy Mukherjee and office of Bidesh Ranjan Bose.,SELECT ?result WHERE { <http://dbpedia.org/resource/Ajoy_Mukherjee> <http://dbpedia.org/property/office> ?result . ?v1 <http://dbpedia.org/property/office> ?result . <http://dbpedia.org/resource/Bidesh_Ranjan_Bose> <http://dbpedia.org/property/office> ?result . ?v1 <http://dbpedia.org/property/governor> <http://dbpedia.org/resource/Jagdeep_Dhankhar> . },"```sparql
# Query for Jagdeep Dhankhar's office
SELECT ?office WHERE {
  dbpedia:Jagdeep_Dhankhar dbo:positionHeld ?position .
  ?position dbo:office ?office .
}

UNION

# Query for Ajoy Mukherjee's office
SELECT ?office WHERE {
  dbpedia:Ajoy_Mukherjee dbo:positionHeld ?position .
  ?position dbo:office ?office .
}

UNION

# Query for Bidesh Ranjan Bose's office
SELECT ?office WHERE {
  dbpedia:Bidesh_Ranjan_Bose dbo:positionHeld ?position .
  ?position dbo:office ?office .
}
```",4,4,5,2,3,3,3,71,0,0,1,0,0.0,0
917,2,train,Give me the child of Kekūanāoʻa.,"SELECT ?result WHERE { ?result <http://dbpedia.org/property/father> ""Kekūanāoʻa""@en . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?child WHERE {
  ?person dbo:spouse ?kekuanaoa .
  FILTER(?kekuanaoa = dbr:Kekūanāoʻa)
  ?person dbo:hasChild ?child .
}
```",1,1,2,1,1,3,3,71,0,0,3,0,0.0,0
933,24,train,Give me the reference to the birth name of Alan Warner (musician) and band of The Ramong Sound.,SELECT ?result WHERE { <http://dbpedia.org/resource/The_Ramong_Sound> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?result <http://xmlns.com/foaf/0.1/name> ?v2 . <http://dbpedia.org/resource/Alan_Warner_(musician)> <http://dbpedia.org/property/birthName> ?v2 . },"```sparql
# Query to get the birth name of Alan Warner (musician)
SELECT ?birthName WHERE {
  dbpedia:Alan_Warner_(musician) dbo:birthName ?birthName .
}

# Query to find the band associated with ""The Ramong Sound""
SELECT ?band WHERE {
  ?entity rdfs:label ""The Ramong Sound""@en .
  ?entity dbo:associatedBand ?band .
}
```",3,3,4,2,2,3,3,71,0,0,1,0,0.0,0
933,16,train,Give me the birth name of the professional in Musician.,SELECT ?result WHERE { ?v0 <http://dbpedia.org/property/occupation> <http://dbpedia.org/resource/Musician> . ?v0 <http://dbpedia.org/property/birthName> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT ?musician ?givenName ?familyName WHERE {
  ?musician rdf:type dbo:Musician .
  OPTIONAL { ?musician foaf:givenName ?givenName . }
  OPTIONAL { ?musician foaf:familyName ?familyName . }
}
```",2,2,3,2,1,3,3,71,0,0,856,0,0.0,0
18,3,train,Give me the award of Ana María Sánchez de Ríos.,SELECT ?result WHERE { <http://dbpedia.org/resource/Ana_María_Sánchez_de_Ríos> <http://dbpedia.org/property/awards> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?award WHERE {
  ?person dbo:givenName ""Ana María"" .
  ?person dbo:familyName ""Sánchez de Ríos"" .
  ?person dbo:award ?award .
}
```",1,1,2,1,1,2,3,28,0,0,3,0,0.0,0
773,11,train,Give me the spouse of the father of Charles the Fat.,SELECT ?result WHERE { ?v0 <http://dbpedia.org/ontology/spouse> ?result . <http://dbpedia.org/resource/Charles_the_Fat> <http://dbpedia.org/property/father> ?v0 . },"```sparql
SELECT ?spouse WHERE {
  wd:Q1198 dbo:fatherOf wd:Q1187 .
  wd:Q1198 dbo:spouse ?spouse .
}
```",2,2,3,2,1,3,3,71,0,0,1,0,0.0,0
124,16,train,"Give me the war, that is an event and a military conflict and a societal event, of the awardee of British South Africa Company Medal.",SELECT ?result WHERE { ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v1 <http://dbpedia.org/ontology/battle> ?result . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?v1 <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/British_South_Africa_Company_Medal> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?war WHERE {
  ?medal dbo:awardedFor ?campaign .
  ?campaign dbo:partOf ?war .
  ?war a dbo:MilitaryConflict ;
      a dbo:Event ;
      a dbo:SocietalEvent .

  FILTER EXISTS { 
    ?medal rdfs:label ""British South Africa Company Medal""@en
  }
}
```",2,5,3,2,1,3,3,71,0,0,13,0,0.0,0
773,5,train,"Give me the child, that is a royalty, of Louis the Pious.",SELECT ?result WHERE { ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. <http://dbpedia.org/resource/Louis_the_Pious> <http://dbpedia.org/ontology/child> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?child WHERE {
  # Identify Louis the Pious by his DBpedia resource
  dbr:Louis_the_Pious dbo:spouse ?parent .
  
  # Retrieve children of Louis the Pious
  ?parent dbo:child ?child .

  # Filter for royalty based on occupation or title
  OPTIONAL { ?child dbo:occupation ?occupation . FILTER(CONTAINS(LCASE(?occupation), ""king"") || CONTAINS(LCASE(?occupation), ""queen"")) }
  OPTIONAL { ?child dbo:title ?title . FILTER(CONTAINS(LCASE(?title), ""king"") || CONTAINS(LCASE(?title), ""queen"")) }

  # Ensure the child is not null and has a royal title or occupation
  FILTER(BOUND(?occupation) || BOUND(?title))
}
```",1,2,2,1,1,3,3,71,0,0,3,0,0.0,0
987,17,train,"Give me the region, that is a country, of the time zone, that is a sports event, in Canicosa de la Sierra.",SELECT ?result WHERE { ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. ?result <http://dbpedia.org/property/timeZone> ?v0 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsEvent>. <http://dbpedia.org/resource/Canicosa_de_la_Sierra> <http://dbpedia.org/ontology/timeZone> ?v0 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?region WHERE {
  # Step 1: Identify Canicosa de la Sierra
  dbr:Canicosa_de_la_Sierra dbo:timeZone ?timezone .

  # Step 2: Find sports events associated with the time zone
  ?event dbo:timeZone ?timezone .
  
  # Ensure the event is a sports event
  ?event rdf:type dbo:SportEvent .

  # Step 3: Identify the region/country of the sports event
  ?event dbo:location ?location .
  ?location dbo:country ?region .
}
```",2,4,3,2,1,3,3,71,0,0,56,0,0.0,0
281,9,train,Give me the awardee of Medal bar and awardee of Volunteer Decoration.,SELECT ?result WHERE { ?result <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/Volunteer_Decoration> . ?result <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/Medal_bar> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>

SELECT ?awardee WHERE {
  {
    ?award dbo:wikiPageRedirects db:Medal_bar .
    ?award dbo:recipient ?awardee .
  }
  UNION
  {
    ?award dbo:wikiPageRedirects db:Volunteer_Decoration .
    ?award dbo:recipient ?awardee .
  }
}
```",2,2,3,1,2,2,3,28,0,0,1,0,0.0,0
955,0,train,Give me the band of Nate Albert.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/bandMember> <http://dbpedia.org/resource/Nate_Albert> . },"```sparql
PREFIX dbp: <http://dbpedia.org/property/>
PREFIX dbo: <http://dbpedia.org/ontology/>

SELECT ?bandName WHERE {
  ?person foaf:name ""Nate Albert""@en .
  ?person dbp:band ?band .
  ?band foaf:name ?bandName .
}
```",1,1,2,1,1,3,2,20,0,0,1,0,0.0,0
445,19,train,"Give me the death place of Patrick Moore and entity in the residence, that is a country, of Anna Sharkey.",SELECT ?result WHERE { ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. ?result <http://dbpedia.org/ontology/location> ?v0 . <http://dbpedia.org/resource/Patrick_Moore> <http://dbpedia.org/ontology/deathPlace> ?result . <http://dbpedia.org/resource/Anna_Sharkey> <http://dbpedia.org/property/residence> ?v0 . },"```sparql
SELECT ?deathPlace ?residenceCountry WHERE {
  # Query for Patrick Moore's death place
  dbpedia:Patrick_Moore dbo:deathPlace ?deathPlace .

  # Query for Anna Sharkey's residence country
  dbpedia:Anna_Sharkey dbo:residence ?residence .
  ?residence geo:country ?residenceCountry .
}
```",3,4,4,2,2,3,3,71,0,0,1,0,0.0,0
93,6,train,Give me the death place of John Weir Troy and capital of Alaska.,SELECT ?result WHERE { <http://dbpedia.org/resource/Alaska> <http://dbpedia.org/ontology/capital> ?result . <http://dbpedia.org/resource/John_Weir_Troy> <http://dbpedia.org/ontology/deathPlace> ?result . },"```sparql
SELECT ?deathPlace ?capitalCity WHERE {
  ?johnWeirTroy dbo:deathPlace ?deathPlace .
  FILTER(STRSTARTS(LCASE(?johnWeirTroy), ""http://dbpedia.org/resource/john_weir_troy""))
  
  dbpedia:Alaska dbo:capital ?capitalCity .
}
```",2,2,3,1,2,3,2,20,0,0,1,0,0.0,0
216,12,train,Give me the party of Campbell Newman and office of Tim Nicholls and administration of .,"SELECT ?result WHERE { <http://dbpedia.org/resource/Tim_Nicholls> <http://dbpedia.org/property/office> ?result . <http://dbpedia.org/resource/Campbell_Newman> <http://dbpedia.org/ontology/party> ?result . ?result <http://dbpedia.org/property/leader> """"@en . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?party ?office WHERE {
  # Query for Campbell Newman's political party
  OPTIONAL { 
    dbr:Campbell_Newman dbo:politicalParty ?party .
  }
  
  # Query for Tim Nicholls' office
  OPTIONAL { 
    dbr:Tim_Nicholls dbo:positionHeld ?office .
  }
}
```",3,3,4,1,3,2,3,28,0,0,1,0,0.0,0
281,7,train,Give me the awardee of Volunteer Decoration and commander in New Guinea campaign.,SELECT ?result WHERE { <http://dbpedia.org/resource/New_Guinea_campaign> <http://dbpedia.org/ontology/commander> ?result . ?result <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/Volunteer_Decoration> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?person ?name WHERE {
  ?person dbo:award dbr:Volunteer_Decoration .
  ?person dbo:militaryCommanderOf dbr:New_Guinea_campaign .
  ?person rdfs:label ?name .
  FILTER (LANG(?name) = 'en')
}
```",2,2,3,1,2,2,3,28,0,0,1,0,0.0,0
888,12,train,Give me the commander in Southern Ukraine campaign and awardee of the award of Oleksandr Syrskyi.,SELECT ?result WHERE { <http://dbpedia.org/resource/Oleksandr_Syrskyi> <http://dbpedia.org/property/awards> ?v0 . ?result <http://dbpedia.org/property/awards> ?v0 . <http://dbpedia.org/resource/Southern_Ukraine_campaign> <http://dbpedia.org/ontology/commander> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?commander ?campaign ?award WHERE {
  ?commander dbo:occupation dbr:Military_person .
  ?commander dbo:placeOfBirth ?location .
  FILTER(CONTAINS(LCASE(STR(?location)), ""ukraine"") || CONTAINS(LCASE(STR(?location)), ""southern ukraine"")) .

  OPTIONAL { 
    ?campaign dbo:commander ?commander .
    ?campaign dbo:location ?campaignLocation .
    FILTER(CONTAINS(LCASE(STR(?campaignLocation)), ""southern ukraine""))
  }

  OPTIONAL {
    ?award dbo:name dbr:Award_of_Oleksandr_Syrskyi .
    ?award dbo:recipient ?commander .
  }
}
```",3,3,4,2,2,3,2,20,0,0,1,0,0.0,0
122,5,train,Give me the band member of the band of Gift of Gab (rapper).,SELECT ?result WHERE { <http://dbpedia.org/resource/Gift_of_Gab_(rapper)> <http://dbpedia.org/ontology/associatedMusicalArtist> ?v0 . ?result <http://dbpedia.org/ontology/associatedMusicalArtist> ?v0 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?bandMember WHERE {
  ?giftOfGab a dbo:MusicalArtist ;
             foaf:name ""Gift of Gab"" .
  
  ?blackalicious a dbo:Band ;
                 dbo:member ?giftOfGab ;
                 dbo:member ?bandMember .

  FILTER(?bandMember != ?giftOfGab)
}
```",2,2,3,2,1,2,2,9,0,0,24,0,0.0,0
935,0,train,Give me the death place of Abdul Raziq Bugti.,SELECT ?result WHERE { <http://dbpedia.org/resource/Abdul_Raziq_Bugti> <http://dbpedia.org/ontology/deathPlace> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?deathPlace WHERE {
  dbr:Abdul_Raziq_Bugti dbo:deathPlace ?deathPlace .
}
```",1,1,2,1,1,3,2,20,3,0,0,1.0,1.0,1.0
433,28,train,"Give me the associated musical artist of Bill Evans and professional in Musician and associated musical artist of the person born, that is a musical artist and an artist, as Paul Laurence Dunbar Chambers Jr..","SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. <http://dbpedia.org/resource/Bill_Evans> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v1 <http://dbpedia.org/property/birthName> ""Paul Laurence Dunbar Chambers Jr.""@en . ?result <http://dbpedia.org/property/occupation> ""Musician""@en . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?v1 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT DISTINCT ?artist1 ?artist2 WHERE {
  # Find an associated musical artist of Bill Evans who is a musician
  ?billEvans dbo:associatedMusicalArtist ?artist1 .
  ?billEvans rdf:type dbo:Musician .

  FILTER(?billEvans = dbpedia:Bill_Evans) 

  # Find an associated musical artist of Paul Chambers who is both a musical artist and an artist
  ?paulChambers dbo:associatedMusicalArtist ?artist2 .
  ?paulChambers rdf:type dbo:Musician .
  ?paulChambers dbp:birthName ""Paul Laurence Dunbar Chambers Jr."" .

  FILTER(?paulChambers = dbpedia:Paul_Chambers_(bassist))
}
```",4,6,5,2,3,3,3,71,0,0,1,0,0.0,0
926,13,train,Give me the successor of the child of Ahmed III.,SELECT ?result WHERE { ?v1 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Ahmed_III> . ?v1 <http://dbpedia.org/ontology/successor> ?result . },"```sparql
SELECT ?successor WHERE {
  # Identify Mustafa III, a child of Ahmed III
  ?mustafa3 dbo:father dbr:Ahmed_III ;
           rdf:type dbo:Sultan_of_the_Ottoman_Empire .
  
  # Find the successor of Mustafa III
  ?mustafa3 dbo:succeededBy ?successor .
}
```",2,2,3,2,1,3,3,71,0,0,2,0,0.0,0
192,3,train,"Give me the spouse, that is a royalty, of Charles Martel of Anjou.",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/spouse> <http://dbpedia.org/resource/Charles_Martel_of_Anjou> . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?spouse ?title WHERE {
  ?person dbo:spouse ?spouse .
  ?person rdfs:label ""Charles Martel of Anjou""@en .
  
  OPTIONAL { ?spouse dbo:title ?title . FILTER (CONTAINS(LCASE(?title), ""king"") || CONTAINS(LCASE(?title), ""queen"") || CONTAINS(LCASE(?title), ""prince"") || CONTAINS(LCASE(?title), ""princess"")) }
  OPTIONAL { ?spouse dbo:royalHouse ?house . FILTER (!isBlank(?house)) }

  FILTER (LANG(?person) = 'en')
}
```",1,2,2,1,1,3,2,20,0,0,1,0,0.0,0
98,0,train,Give me the parent of Emperor Rokujō.,SELECT ?result WHERE { <http://dbpedia.org/resource/Emperor_Rokujō> <http://dbpedia.org/ontology/parent> ?result . },"```sparql
SELECT ?parent WHERE {
  ?emperor rdf:type dbo:Emperor .
  ?emperor rdfs:label ""Rokujō""@en .
  ?emperor dbo:parent ?parent .
}
```",1,1,2,1,1,2,2,9,0,0,1,0,0.0,0
582,8,train,Give me the nickname of Japan national football team.,SELECT ?result WHERE { <http://dbpedia.org/resource/Japan_national_football_team> <http://dbpedia.org/property/nickname> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?nickname WHERE {
  ?team a dbo:NationalSoccerTeam ;
        rdfs:label ""Japan national football team""@en .
  OPTIONAL { ?team dbo:nickname ?nickname . }
}
```",1,1,2,1,1,3,3,71,0,0,1,0,0.0,0
329,3,train,Give me the author of The Tailor and Ansty.,SELECT ?result WHERE { <http://dbpedia.org/resource/The_Tailor_and_Ansty> <http://dbpedia.org/property/author> ?result . },"```sparql
SELECT ?author WHERE {
  ?book dbo:title ""The Tailor and Ansty""@en .
  ?book dbo:author ?author .
}
```",1,1,2,1,1,2,3,28,0,0,1,0,0.0,0
892,30,train,"Give me the landmark at elevation of 58 and entity in the administration, that is Italian and a region and a settlement and an administrative region, of Democratic Party (Italy) and entity in Italy.","SELECT ?result WHERE { ?v0 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Italy>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. ?result <http://dbpedia.org/ontology/elevation> ""58""^^<http://www.w3.org/2001/XMLSchema#integer> . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/AdministrativeRegion>. ?result <http://dbpedia.org/ontology/province> ?v0 . ?v0 <http://dbpedia.org/property/leaderParty> <http://dbpedia.org/resource/Democratic_Party_(Italy)> . ?result <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Italy> . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Region>. }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?landmark WHERE {
  ?landmark a dbo:Landmark ;
            dbo:elevationAboveSeaLevel ""58""^^xsd:integer ;
            dbo:country dbr:Italy ;
            dbo:administrativeRegion ?region .
  
  ?region a dbo:AdministrativeRegion, dbo:Settlement, dbo:Region ;
          dbp:politicalParty dbr:Democratic_Party_(Italy) .

  FILTER (lang(?landmarkLabel) = 'it')
}
```",4,8,5,2,3,3,3,71,0,0,2,0,0.0,0
892,39,train,"Give me the landmark at elevation of 58 and entity in the administration, that is Italian and a region and a settlement and an administrative region, of the party, that is a political party and an organisation, of Andrea Cozzolino.","SELECT ?result WHERE { ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/AdministrativeRegion>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. <http://dbpedia.org/resource/Andrea_Cozzolino> <http://dbpedia.org/ontology/party> ?v2 . ?v0 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Italy>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Region>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. ?v0 <http://dbpedia.org/property/leaderParty> ?v2 . ?result <http://dbpedia.org/ontology/province> ?v0 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/PoliticalParty>. ?result <http://dbpedia.org/ontology/elevation> ""58""^^<http://www.w3.org/2001/XMLSchema#integer> . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT DISTINCT ?landmark ?region WHERE {
  # Find the political party associated with Andrea Cozzolino
  ?party a dbo:PoliticalParty ;
         dbo:member dbr:Andrea_Cozzolino .

  # Identify regions that are Italian, and classified as region, settlement, and administrative region
  ?region a dbo:Region , dbo:Settlement , dbo:AdministrativeRegion ;
          dbp:country dbr:Italy ;
          dbo:administrativeDivision ?party .

  # Find landmarks in these regions at an elevation of 58 meters
  ?landmark dbo:elevation ""58""^^xsd:float ;
            dbo:location ?region .
}
```",4,10,5,3,2,3,3,71,0,0,2,0,0.0,0
507,14,train,Give me the professional in the profession of Guy Ferland.,SELECT ?result WHERE { ?result <http://dbpedia.org/property/occupation> ?v1 . <http://dbpedia.org/resource/Guy_Ferland> <http://dbpedia.org/property/occupation> ?v1 . },"```sparql
# Step 1: Retrieve the profession of Guy Ferland
SELECT ?profession WHERE {
  dbpedia:Guy_Ferland dbo:occupation ?profession .
}

# Step 2: Find other professionals with the same profession as Guy Ferland
PREFIX dbo: <http://dbpedia.org/ontology/>

SELECT DISTINCT ?person WHERE {
  # Replace 'Profession' with the actual URI obtained from step 1
  ?person a dbo:Person ;
          dbo:occupation ?profession .
  
  FILTER(?person != dbpedia:Guy_Ferland)
}
```",2,2,3,2,1,3,3,71,0,0,38,0,0.0,0
417,21,train,"Give me the child of Alexandrine of Mecklenburg-Schwerin and spouse of the parent, that is a royalty, of Count Ingolf of Rosenborg.",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/parent> <http://dbpedia.org/resource/Alexandrine_of_Mecklenburg-Schwerin> . ?result <http://dbpedia.org/ontology/spouse> ?v1 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v1 <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Count_Ingolf_of_Rosenborg> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?child ?spouse WHERE {
  # Find Alexandrine of Mecklenburg-Schwerin's children
  ?alexandrine a dbo:Person ;
              foaf:name ""Alexandrine of Mecklenburg-Schwerin""@en ;
              dbp:child ?child .

  # Identify the child who is married to Count Ingolf of Rosenborg's parent
  ?child dbo:spouse ?spouse .
  
  # Find Count Ingolf of Rosenborg and his parent
  ?count a dbo:Person ;
         foaf:name ""Count Ingolf of Rosenborg""@en ;
         dbp:parent ?parent .

  # Ensure the spouse is related to the parent of Count Ingolf of Rosenborg
  ?spouse dbo:spouse ?parent .
  
  # Check if the spouse is royalty
  ?spouse a dbo:Monarch .
}
```",3,4,4,2,2,3,3,71,0,0,1,0,0.0,0
417,34,train,"Give me the spouse of the parent, that is a royalty, of the child of Knud, Hereditary Prince of Denmark and child of Alexandrine of Mecklenburg-Schwerin.","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/spouse> ?v1 . ?result <http://dbpedia.org/ontology/parent> <http://dbpedia.org/resource/Alexandrine_of_Mecklenburg-Schwerin> . ?v1 <http://dbpedia.org/ontology/child> ?v2 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v2 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Knud,_Hereditary_Prince_of_Denmark> . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT DISTINCT ?spouse WHERE {
  # Identify children of Knud, Hereditary Prince of Denmark who are also children of Alexandrine of Mecklenburg-Schwerin
  ?child dbo:parent dbr:Knud,_Hereditary_Prince_of_Denmark .
  ?child dbo:parent dbr:Alexandrine_of_Mecklenburg-Schwerin .

  # Find the royal parent (either Knud or Alexandrine)
  OPTIONAL { ?child dbo:parent ?royalParent . FILTER(STRSTARTS(STR(?royalParent), ""http://dbpedia.org/resource/"") && 
    (CONTAINS(LCASE(STR(?royalParent)), ""prince"") || CONTAINS(LCASE(STR(?royalParent)), ""queen"") || 
     CONTAINS(LCASE(STR(?royalParent)), ""king"") || CONTAINS(LCASE(STR(?royalParent)), ""duke"") ||
     CONTAINS(LCASE(STR(?royalParent)), ""princess""))) }

  # Find the spouse of this royal parent
  ?royalParent dbo:spouse ?spouse .
}
```",4,5,5,3,2,3,3,71,0,0,1,0,0.0,0
212,2,train,"Give me the professional, that is a musical artist and an artist, in Singer, rapper, CEO, Facilities and Project Manager.","SELECT ?result WHERE { ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. ?result <http://dbpedia.org/property/occupation> ""Singer, rapper, CEO, Facilities and Project Manager""@en . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT DISTINCT ?person WHERE {
  ?person a dbo:MusicalArtist .
  ?person dbo:occupation ?occupation .

  FILTER (
    (CONTAINS(LCASE(?occupation), ""singer"") || CONTAINS(LCASE(?occupation), ""rapper"")) &&
    EXISTS { ?person dbo:profession dbp:Artist . } &&
    (
      EXISTS { ?person dbo:positionTitle ""CEO""@en . } ||
      EXISTS { ?person dbo:positionTitle ""Facilities and Project Manager""@en . }
    )
  )

  FILTER (LANG(?occupation) = 'en')
}
```",1,3,2,1,1,2,2,9,0,0,1,0,0.0,0
267,4,train,Who is the reference to Dan Cathy?,"SELECT ?result WHERE { ?result <http://xmlns.com/foaf/0.1/name> ""Dan Cathy""@en . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?person ?description ?occupation WHERE {
  ?person rdfs:label ""Dan Cathy""@en .
  OPTIONAL { ?person dbo:description ?description . FILTER (lang(?description) = 'en') }
  OPTIONAL { ?person dbo:occupation ?occupation . }
}
```",1,1,2,1,1,3,2,20,1,2,0,0.3333333333333333,1.0,0.5
192,4,train,Give me the parent of Anna of Hungary (Byzantine empress).,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Anna_of_Hungary_(Byzantine_empress)> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?parent WHERE {
  VALUES ?anna { dbr:Anna_of_Hungary_(Byzantine_empress) }
  ?anna dbo:parent ?parent .
}
```",1,1,2,1,1,3,2,20,0,0,1,0,0.0,0
47,31,train,"Give me the office of the administration of the commander, that is a politician, in Operation Green Hunt and office of Bidesh Ranjan Bose.",SELECT ?result WHERE { <http://dbpedia.org/resource/Bidesh_Ranjan_Bose> <http://dbpedia.org/property/office> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v0 <http://dbpedia.org/property/governor> ?v1 . ?v0 <http://dbpedia.org/property/office> ?result . <http://dbpedia.org/resource/Operation_Green_Hunt> <http://dbpedia.org/ontology/commander> ?v1 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?operationGreenHuntOffice ?bideshRanjanBoseOffice WHERE {
  # Find the politician associated with Operation Green Hunt and their office
  ?politician dbo:wikiPageWikiLink dbr:Operation_Green_Hunt .
  ?politician dbo:office ?operationGreenHuntOffice .

  # Find Bidesh Ranjan Bose and his office
  ?bideshRanjanBose a dbo:Person ;
                   foaf:name ""Bidesh Ranjan Bose""@en ;
                   dbo:office ?bideshRanjanBoseOffice .
}
```",4,5,5,3,2,3,3,71,0,0,1,0,0.0,0
136,2,train,Give me the area code of Levenhagen.,SELECT ?result WHERE { <http://dbpedia.org/resource/Levenhagen> <http://dbpedia.org/ontology/areaCode> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?state WHERE {
  ?place a dbo:Settlement .
  ?place rdfs:label ""Levenhagen""@en .
  OPTIONAL { ?place dbo:country dbr:Germany . }
  ?place dbo:administrativeTerritory ?state .
}
```",1,1,2,1,1,2,2,9,0,0,1,0,0.0,0
495,9,train,Give me the father of the parent of Princess Catherine of Württemberg.,SELECT ?result WHERE { ?v0 <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Princess_Catherine_of_Württemberg> . ?v0 <http://dbpedia.org/property/father> ?result . },"```sparql
SELECT ?grandfather WHERE {
  ?catherine dbo:label ""Princess Catherine of Württemberg""@en .
  ?parent dbo:child ?catherine ;
          a dbo:Person .
  OPTIONAL { ?parent dbo:father ?grandfather . }
}
```",2,2,3,2,1,3,2,20,0,0,2,0,0.0,0
98,3,train,Who is the child of Emperor Toba?,SELECT ?result WHERE { <http://dbpedia.org/resource/Emperor_Toba> <http://dbpedia.org/ontology/child> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>

SELECT ?child WHERE {
  ?emperor rdf:type dbo:Monarch .
  ?emperor rdfs:label ""Emperor Toba""@en .
  ?emperor dbo:child ?child .
}
```",1,1,2,1,1,2,2,9,0,0,5,0,0.0,0
582,1,train,Give me the player in Kazuaki Nagasawa.,SELECT ?result WHERE { <http://dbpedia.org/resource/Kazuaki_Nagasawa> <http://dbpedia.org/ontology/team> ?result . },"```sparql
PREFIX dbp: <http://dbpedia.org/property/>
PREFIX dbo: <http://dbpedia.org/ontology/>

SELECT ?teamName WHERE {
  ?person a dbo:FootballPlayer ;
          foaf:name ""Kazuaki Nagasawa""@en .
  OPTIONAL { ?person dbp:team ?team . }
  OPTIONAL { ?person dbo:currentClub ?team . }
  ?team rdfs:label ?teamName .
  FILTER (lang(?teamName) = 'en')
}
```",1,1,2,1,1,3,3,71,0,0,4,0,0.0,0
158,8,train,"Give me the party of the successor, that is a prime minister and an office holder and a politician, of André Tardieu.",SELECT ?result WHERE { ?v0 <http://dbpedia.org/ontology/party> ?result . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. <http://dbpedia.org/resource/André_Tardieu> <http://dbpedia.org/ontology/successor> ?v0 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/PrimeMinister>. },"```sparql
SELECT ?successor ?partyLabel WHERE {
  ?tardieu dbo:primeMinisterOf dbr:France .
  ?tardieu foaf:name ""André Tardieu"" .
  ?office dbo:positionTitle dbr:Prime_Minister_of_France ;
          dbo:incumbent ?tardieu ;
          dbo:successor ?successor .
  ?successor a dbo:OfficeHolder ;
             a dbo:Politician .
  OPTIONAL { ?successor dbo:party ?party . }
  SERVICE wikibase:label { bd:serviceParam wikibase:language ""[AUTO_LANGUAGE],en"". }
}
```",2,5,3,2,1,3,2,20,0,0,1,0,0.0,0
926,28,train,Give me the child of Ahmed III and father of the father of Abdulaziz and successor of Mustafa III.,SELECT ?result WHERE { <http://dbpedia.org/resource/Abdulaziz> <http://dbpedia.org/property/father> ?v1 . <http://dbpedia.org/resource/Ahmed_III> <http://dbpedia.org/ontology/child> ?result . ?v1 <http://dbpedia.org/property/father> ?result . <http://dbpedia.org/resource/Mustafa_III> <http://dbpedia.org/ontology/successor> ?result . },"```sparql
SELECT ?person WHERE {
  ?ahmed3 dbo:spouse ?wife .
  ?child dbo:parent ?ahmed3 ;
         dbo:parent ?wife .
  ?abdulaziz1 dbo:father ?mahmud2 .
  ?mahmud2 dbo:father ?abdulhamid1 .
  ?mustafa3 dbo:succeededBy ?abdulhamid1 .
  
  FILTER(?child = ?abdulhamid1)
}
```",4,4,5,2,3,3,3,71,0,0,1,0,0.0,0
281,11,train,Give me the awardee of the award of Alfred Warden.,SELECT ?result WHERE { ?result <http://dbpedia.org/property/awards> ?v1 . <http://dbpedia.org/resource/Alfred_Warden> <http://dbpedia.org/property/awards> ?v1 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>

SELECT ?awardee WHERE {
  ?award a dbo:Award ;
        rdfs:label ""Alfred Warden Award""@en .
  
  ?award dbo:recipient ?awardee .
}
```",2,2,3,2,1,2,3,28,0,0,12,0,0.0,0
874,0,train,Give me the band of Manfred Mann (musician).,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/bandMember> <http://dbpedia.org/resource/Manfred_Mann_(musician)> . },"```sparql
SELECT ?band WHERE {
  ?manfredMann dbo:birthName ""Manfred Jakob Peter Mann""@en .
  ?manfredMann dbo:musicalBand ?band .
}
```",1,1,2,1,1,3,2,20,0,0,2,0,0.0,0
978,8,train,Give me the band member of the person born as Nicholas Bracegirdle.,"SELECT ?result WHERE { ?v0 <http://dbpedia.org/property/birthName> ""Nicholas Bracegirdle""@en . ?result <http://dbpedia.org/ontology/associatedMusicalArtist> ?v0 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?bandMember WHERE {
  # Find Nicholas Bracegirdle by his birth name
  ?person a dbo:Person ;
          foaf:name ""Nicholas Bracegirdle""@en .
  
  # Identify bands he is associated with
  ?person dbo:musicalBand ?band .

  # Get members of those bands
  ?bandMember dbo:memberOf ?band ;
              foaf:name ?name .
}
```",2,2,3,2,1,3,2,20,0,0,2,0,0.0,0
373,2,train,"Give me the work, that is a single and a musical work and a work and a soundtrack, of .","SELECT ?result WHERE { ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalWork>. ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Single>. ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?result <http://dbpedia.org/property/writer> """"@en . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Song>. }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?work WHERE {
  ?work a dbo:Single .
  ?work a dbo:MusicalWork .
  ?work a dbo:Soundtrack .
}
```",1,5,2,1,1,2,2,9,0,0,8275,0,0.0,0
36,0,train,Give me the actor of Being Mrs Elliot.,SELECT ?result WHERE { <http://dbpedia.org/resource/Being_Mrs_Elliot> <http://dbpedia.org/ontology/starring> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?actorLabel WHERE {
  ?movie rdfs:label ""Being Mrs. Elliot""@en .
  ?movie dbo:starring ?actor .
  ?actor rdfs:label ?actorLabel .
  FILTER(LANG(?actorLabel) = 'en')
}
```",1,1,2,1,1,2,3,28,0,0,6,0,0.0,0
232,2,train,"Give me the person born, that is a writer, on 1849-09-14.","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/birthDate> ""1849-09-14""^^<http://www.w3.org/2001/XMLSchema#date> . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Writer>. }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>
PREFIX xsd: <http://www.w3.org/2001/XMLSchema#>

SELECT ?person ?name WHERE {
  ?person rdf:type dbo:Writer .
  ?person dbo:birthDate ?date .
  ?person foaf:name ?name .
  FILTER (YEAR(?date) = 1849 && MONTH(?date) = 9 && DAY(?date) = 14)
}
```",1,2,2,1,1,2,2,9,1,1,0,0.5,1.0,0.6666666666666666
826,7,train,"Who is the child of Louis IV, Grand Duke of Hesse?","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/parent> <http://dbpedia.org/resource/Louis_IV,_Grand_Duke_of_Hesse> . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>

SELECT ?child WHERE {
  ?person a dbo:Person ;
          foaf:name ""Louis IV, Grand Duke of Hesse""@en .
  ?person dbo:child ?child .
}
```",1,1,2,1,1,3,3,71,0,0,4,0,0.0,0
382,11,train,"Give me the landmark at elevation of 100 and birthplace of the manager, that is a soccer manager and an athlete and a sports manager, of Bonner SC.","SELECT ?result WHERE { ?v2 <http://dbpedia.org/ontology/birthPlace> ?result . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerManager>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsManager>. ?result <http://dbpedia.org/ontology/elevation> ""100""^^<http://www.w3.org/2001/XMLSchema#integer> . <http://dbpedia.org/resource/Bonner_SC> <http://dbpedia.org/ontology/manager> ?v2 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Athlete>. }","```sparql
# Step 1: Find the manager of Bonner SC who is a soccer manager, athlete, and sports manager
SELECT ?manager WHERE {
  ?team dbo:coach ?manager .
  ?manager rdf:type dbo:SoccerManager .
  ?manager dbo:sport dbr:Soccer .
  ?manager dbo:occupation dbr:Athlete .
  ?manager dbo:occupation dbr:Sports_Manager .
  FILTER (CONTAINS(LCASE(STR(?team)), ""bonner sc""))
}

# Step 2: Find the birthplace of this manager
SELECT ?birthPlace WHERE {
  ?manager dbo:birthPlace ?birthPlace .
  # Assuming we have identified the manager from step 1, replace <Manager_URI> with actual URI
  BIND(<Manager_URI> AS ?manager)
}

# Step 3: Find a landmark at elevation 100 meters in this birthplace
SELECT ?landmark WHERE {
  ?landmark dbo:elevation ""100""^^xsd:integer .
  ?landmark dbo:location ?birthPlace .
  # Assuming we have identified the birthplace from step 2, replace <BirthPlace_URI> with actual URI
  BIND(<BirthPlace_URI> AS ?birthPlace)
}
```

Note: Replace `<Manager_URI>` and `<BirthPlace_URI>` with the actual URIs obtained from the previous queries.",3,6,4,2,2,3,2,20,0,0,1,0,0.0,0
136,4,train,Give me the region coded as 03834 and landmark at elevation of 5.,"SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/areaCode> ""03834"" . ?result <http://dbpedia.org/ontology/elevation> ""5""^^<http://www.w3.org/2001/XMLSchema#integer> . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?landmark WHERE {
  ?region dbo:postalCode ""03834"" .
  ?landmark a dbo:Lighthouse ;
            dbo:elevation ?elevation ;
            dbo:location ?location .
  FILTER (?elevation = 5)
  VALUES ?location { ?region }
}
```",2,2,3,1,2,2,2,9,0,0,1,0,0.0,0
166,5,train,"Give me the territory administered, that is a country, from Madrid.",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/capital> <http://dbpedia.org/resource/Madrid> . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. },"```sparql
SELECT ?territory WHERE {
  ?country dbo:capital dbr:Madrid .
  ?country a dbo:Country .
  ?territory dbo:administrativeTerritory ?country .
}
```",1,2,2,1,1,3,2,20,0,0,15,0,0.0,0
124,18,train,Give me the military force of Battle of Atbara and military force of Battle of Tamai and commander in Mahdist War.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/battle> <http://dbpedia.org/resource/Battle_of_Atbara> . <http://dbpedia.org/resource/Mahdist_War> <http://dbpedia.org/ontology/commander> ?result . ?result <http://dbpedia.org/ontology/battle> <http://dbpedia.org/resource/Battle_of_Tamai> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?battle ?force ?commander WHERE {
  # Battle of Atbara
  VALUES (?battle) { 
    dbr:Battle_of_Atbara 
  }
  
  OPTIONAL {
    ?entity dbo:participatedIn ?battle .
    ?entity dbp:militaryForce ?force .
    ?entity dbo:commander ?commander .
  }

  # Battle of Tamai
  VALUES (?battle) { 
    dbr:Battle_of_Tamai 
  }
  
  OPTIONAL {
    ?entity dbo:participatedIn ?battle .
    ?entity dbp:militaryForce ?force .
    ?entity dbo:commander ?commander .
  }
}
```",3,3,4,1,3,3,3,71,0,0,1,0,0.0,0
773,37,train,"Give me the parent of Charles the Fat and parent of the successor of the child, that is a royalty, of Louis the Pious.",SELECT ?result WHERE { <http://dbpedia.org/resource/Louis_the_Pious> <http://dbpedia.org/ontology/child> ?v0 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v0 <http://dbpedia.org/ontology/successor> ?v3 . ?result <http://dbpedia.org/ontology/child> ?v3 . <http://dbpedia.org/resource/Charles_the_Fat> <http://dbpedia.org/ontology/parent> ?result . },"```sparql
# Step 1: Find Charles the Fat's parent
SELECT ?parent WHERE {
  wd:Q1198 wdt:P22 ?parent .
}

# Step 2: Identify Louis the Pious' royal children
SELECT DISTINCT ?child WHERE {
  wd:Q1240 wdt:P40 ?child .
  FILTER EXISTS { ?child wdt:P31 wd:Q5 } # Ensure it's a person
  FILTER EXISTS { ?child wdt:P39/wdt:P279* wd:Q11173 } # Check if they have a royal title
}

# Step 3: Find the successor of each child identified in step 2
SELECT DISTINCT ?successor WHERE {
  ?child wdt:P57 ?successor .
  FILTER EXISTS { ?child wdt:P40 wd:Q1240 } # Ensure it's a child of Louis the Pious
}

# Step 4: Identify the parent of each successor found in step 3
SELECT DISTINCT ?parentOfSuccessor WHERE {
  ?successor wdt:P22 ?parentOfSuccessor .
}
```",4,5,5,3,2,3,3,71,0,0,2,0,0.0,0
554,11,train,Give me the leader of the administration of Francisco da Costa Gomes and leader of Portuguese Mozambique.,SELECT ?result WHERE { ?v2 <http://dbpedia.org/property/leader> ?result . ?v2 <http://dbpedia.org/property/leader> <http://dbpedia.org/resource/Francisco_da_Costa_Gomes> . <http://dbpedia.org/resource/Portuguese_Mozambique> <http://dbpedia.org/property/leader> ?result . },"```sparql
# Query for the leader (Prime Minister) under Francisco da Costa Gomes
SELECT ?primeMinister WHERE {
  ?presidency dbo:president dbr:Francisco_da_Costa_Gomes .
  ?presidency dbo:headOfGovernment ?primeMinister .
}

UNION

# Query for the governor of Portuguese Mozambique during Francisco da Costa Gomes' presidency (1974-1976)
SELECT ?governor WHERE {
  ?governor dbo:office dbr:Governor_of_Portuguese_Mozambique .
  ?governor dbo:termStart ?start .
  ?governor dbo:termEnd ?end .
  FILTER (?start <= ""1976-07-30""^^xsd:date && ?end >= ""1974-09-30""^^xsd:date)
}
```",3,3,4,2,2,3,2,20,0,0,3,0,0.0,0
582,11,train,Give me the reference to the residence of Hirotaka Sugawara.,SELECT ?result WHERE { <http://dbpedia.org/resource/Hirotaka_Sugawara> <http://dbpedia.org/property/residence> ?v0 . ?result <http://xmlns.com/foaf/0.1/name> ?v0 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT ?residence WHERE {
  ?person a dbo:Person ;
          foaf:name ""Hirotaka Sugawara""@en .
  OPTIONAL { ?person dbo:residence ?residence . }
}
```",2,2,3,2,1,3,3,71,0,0,41,0,0.0,0
965,19,train,Give me the spouse of the spouse of Princess Victoria of Hesse and by Rhine and parent of Louise Mountbatten.,SELECT ?result WHERE { <http://dbpedia.org/resource/Louise_Mountbatten> <http://dbpedia.org/ontology/parent> ?result . <http://dbpedia.org/resource/Princess_Victoria_of_Hesse_and_by_Rhine> <http://dbpedia.org/ontology/spouse> ?v2 . ?result <http://dbpedia.org/ontology/spouse> ?v2 . },"```sparql
SELECT ?spouse WHERE {
  wd:Q123456 wdt:P26 wd:Q789012 . # Princess Victoria (Q123456) married to Grand Duke Ernst Ludwig (Q789012)
  wd:Q789012 wdt:P26 ?spouse .   # Spouse of Grand Duke Ernst Ludwig
  FILTER NOT EXISTS { 
    ?spouse wdt:P31/wdt:P279* wd:Q5 . # Ensure the spouse is not a human (to exclude Princess Victoria herself)
  }
}
```

Note: Replace `wd:Q123456` with the actual DBpedia ID for Princess Victoria of Hesse and by Rhine, and `wd:Q789012` with the ID for Grand Duke Ernst Ludwig. The query assumes that these IDs are known or can be looked up in DBpedia.",3,3,4,2,2,3,3,71,0,0,1,0,0.0,0
826,13,train,"Give me the successor of the child, that is a royalty, of Louis I, Grand Duke of Hesse.","SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v1 <http://dbpedia.org/ontology/successor> ?result . <http://dbpedia.org/resource/Louis_I,_Grand_Duke_of_Hesse> <http://dbpedia.org/ontology/child> ?v1 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?successor WHERE {
  # Find Louis I, Grand Duke of Hesse
  ?louis a dbo:GrandDuke ;
         foaf:name ""Louis I, Grand Duke of Hesse""@en .
  
  # Find his child who is royalty and succeeded him
  ?child dbo:parent ?louis ;
         dbo:successor ?successor .

  FILTER EXISTS { ?child dbo:title ?title . }
}
```",2,3,3,2,1,3,3,71,0,0,1,0,0.0,0
274,7,train,Give me the band member of Dizzy Gillespie and associated musical artist of Cecil Taylor.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/associatedMusicalArtist> <http://dbpedia.org/resource/Dizzy_Gillespie> . <http://dbpedia.org/resource/Cecil_Taylor> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . },"```sparql
SELECT ?bandMember ?associatedArtist WHERE {
  # Find a band member associated with Dizzy Gillespie
  ?gillespie dbo:genre dbr:Bebop .
  ?gillespie dbo:member ?bandMember .
  
  FILTER(?gillespie = dbr:Dizzy_Gillespie)

  # Find an associated musical artist of Cecil Taylor
  ?taylor dbo:genre dbr:Avant-garde_jazz .
  ?taylor dbo:associatedMusicalArtist ?associatedArtist .

  FILTER(?taylor = dbr:Cecil_Taylor)
}
```",2,2,3,1,2,2,3,28,0,0,1,0,0.0,0
917,26,train,"Give me the child of the father of the spouse, that is a royalty, of Leleiohoku I.",SELECT ?result WHERE { ?v2 <http://dbpedia.org/ontology/spouse> <http://dbpedia.org/resource/Leleiohoku_I> . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v2 <http://dbpedia.org/property/father> ?v0 . ?result <http://dbpedia.org/ontology/parent> ?v0 . },"```sparql
SELECT ?child WHERE {
  ?leleiohoku1 dbo:spouse ?spouse .
  FILTER (str(?leleiohoku1) = ""Leleiohoku I"") .

  ?spouse dbo:father ?fatherOfSpouse .

  ?fatherOfSpouse dbo:child ?child .

  ?child rdf:type ?royaltyType .
  FILTER (
    ?royaltyType IN (dbo:Monarch, dbo:RoyalFamilyMember)
  )
}
```",3,4,4,3,1,3,3,71,0,0,11,0,0.0,0
465,35,train,"Give me the successor of the child of Alfonso I d'Este and successor of the child, that is a royalty, of Anne of Brittany.",SELECT ?result WHERE { <http://dbpedia.org/resource/Anne_of_Brittany> <http://dbpedia.org/ontology/child> ?v1 . ?v2 <http://dbpedia.org/ontology/successor> ?result . ?v2 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Alfonso_I_d'Este> . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v1 <http://dbpedia.org/ontology/successor> ?result . },"```sparql
# Query for the successor of a child of Alfonso I d'Este
SELECT ?child ?successor WHERE {
  ?alfonso dbo:spouse ?parent .
  FILTER(?alfonso = dbpedia:Alfonso_I_d%27Este) .
  
  ?parent dbo:child ?child .
  ?child rdf:type dbo:Monarch .

  OPTIONAL { ?child dbo:successor ?successor } .
}

UNION

# Query for the successor of a child of Anne of Brittany
SELECT ?child ?successor WHERE {
  ?anne dbo:spouse ?parent .
  FILTER(?anne = dbpedia:Anne_of_Brittany) .
  
  ?parent dbo:child ?child .
  ?child rdf:type dbo:Monarch .

  OPTIONAL { ?child dbo:successor ?successor } .
}
```",4,5,5,2,2,3,3,71,0,0,1,0,0.0,0
573,29,train,"Give me the parent of John Quincy Adams and person decedent at the residence, that is a settlement, of William J. Phelan and person decedent at Massachusetts.",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/deathPlace> ?v3 . <http://dbpedia.org/resource/William_J._Phelan> <http://dbpedia.org/property/residence> ?v3 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. ?result <http://dbpedia.org/ontology/deathPlace> <http://dbpedia.org/resource/Massachusetts> . <http://dbpedia.org/resource/John_Quincy_Adams> <http://dbpedia.org/ontology/parent> ?result . },"```sparql
# Query for the parent of John Quincy Adams
SELECT ?parent WHERE {
  wd:Q11142 dbo:parent ?parent .
}

# Query for person decedent at the residence (settlement) of William J. Phelan
SELECT DISTINCT ?decedent WHERE {
  # Find William J. Phelan's residence that is a settlement
  wd:Q1234567 dbo:residence ?residence .
  ?residence rdf:type dbo:Settlement .

  # Find who is buried at this residence
  ?decedent dbo:placeOfBurial ?residence .
}

# Query for person decedent at Massachusetts
SELECT DISTINCT ?decedent WHERE {
  ?decedent dbo:placeOfBurial ?burialPlace .
  ?burialPlace rdf:type dbo:AdministrativeRegion ;
               rdfs:label ""Massachusetts""@en .
}
```

Note: Replace `wd:Q1234567` with the actual DBpedia identifier for William J. Phelan if available.",4,5,5,2,3,3,3,71,0,0,2,0,0.0,0
267,12,train,Give me the person born on the birth date of Dan Cathy and coach of Iran national football team.,SELECT ?result WHERE { <http://dbpedia.org/resource/Dan_Cathy> <http://dbpedia.org/ontology/birthDate> ?v0 . <http://dbpedia.org/resource/Iran_national_football_team> <http://dbpedia.org/ontology/coach> ?result . ?result <http://dbpedia.org/ontology/birthDate> ?v0 . },"```sparql
# Step 1: Retrieve Dan Cathy's birth date
SELECT ?birthDate WHERE {
    dbpedia:Dan_Cathy dbo:birthday ?birthDate .
}

# Step 2: Find person born on that date who is a coach of the Iran national football team
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?person WHERE {
    # Replace 'YYYY-MM-DD' with Dan Cathy's birth date obtained from Step 1
    VALUES ?birthDate { ""YYYY-MM-DD""^^xsd:date }
    
    ?person dbo:birthday ?birthDate .
    ?person dbo:occupation dbr:Football_manager .
    ?team dbo:coach ?person .
    FILTER (strstarts(str(?team), str(dbr:Iran_national_football_team)))
}
```

Note: Replace `""YYYY-MM-DD""` with the actual birth date of Dan Cathy obtained from the first query.",3,3,4,2,2,3,2,20,0,0,1,0,0.0,0
773,12,train,Give me the parent of Carloman of Bavaria and parent of Charles the Fat.,SELECT ?result WHERE { <http://dbpedia.org/resource/Charles_the_Fat> <http://dbpedia.org/ontology/parent> ?result . ?result <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Carloman_of_Bavaria> . },"```sparql
# Query to find the parents of Carloman of Bavaria
SELECT ?father ?mother WHERE {
  wd:Q123456 dbo:father ?father .
  OPTIONAL { wd:Q123456 dbo:mother ?mother . }
}

UNION

# Query to find the parents of Charles the Fat
SELECT ?father ?mother WHERE {
  wd:Q654321 dbo:father ?father .
  OPTIONAL { wd:Q654321 dbo:mother ?mother . }
}
```

Note: Replace `wd:Q123456` with the actual DBpedia entity ID for Carloman of Bavaria and `wd:Q654321` with the actual DBpedia entity ID for Charles the Fat. You can find these IDs by searching their names on DBpedia or using a SPARQL endpoint to query for them.",2,2,3,1,2,3,3,71,0,0,2,0,0.0,0
791,22,train,"Give me the spouse of Taira no Tokuko and father of the child, that is a royalty, of Emperor Takakura.",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/spouse> <http://dbpedia.org/resource/Taira_no_Tokuko> . ?v1 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Emperor_Takakura> . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v1 <http://dbpedia.org/property/father> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?child WHERE {
  # Taira no Tokuko's spouse is Emperor Takakura
  dbr:Taira_no_Tokuko dbo:spouse dbr:Emperor_Takakura .
  
  # Children of Emperor Takakura who are royalty
  dbr:Emperor_Takakura dbo:child ?child .
  ?child a dbo:Monarch .
}
```",3,4,4,2,2,3,3,71,0,0,1,0,0.0,0
216,1,train,Give me the party of Campbell Newman.,SELECT ?result WHERE { <http://dbpedia.org/resource/Campbell_Newman> <http://dbpedia.org/ontology/party> ?result . },"```sparql
SELECT ?party WHERE {
  ?person foaf:name ""Campbell Newman""@en .
  ?person dbo:partyAffiliation ?party .
}
```",1,1,2,1,1,2,3,28,0,0,2,0,0.0,0
166,9,train,"Who is the military force of the force, that is an event and a societal event and a military conflict, of Manuel Hedilla?",SELECT ?result WHERE { ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?v0 <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Manuel_Hedilla> . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?result <http://dbpedia.org/ontology/battle> ?v0 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?militaryForce WHERE {
  # Step 1: Identify Manuel Hedilla
  dbr:Manuel_Hedilla dbo:militaryService ?service.

  # Step 2: Determine his military force
  ?service dbo:member ?militaryForce.

  # Step 3: Find events related to this military force that are societal and military conflicts
  ?event dbo:agent ?militaryForce.
  ?event a dbo:SocietalEvent .
  ?event a dbo:MilitaryConflict .

  # Ensure the event is linked to Manuel Hedilla through his service
  ?service dbo:event ?event.
}
```",2,5,3,2,1,3,2,20,0,0,514,0,0.0,0
573,30,train,"Give me the parent of the author, that is a politician and an office holder, of Exchequer Standards and person decedent at Massachusetts and person decedent at Quincy, Massachusetts.","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/deathPlace> <http://dbpedia.org/resource/Massachusetts> . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. <http://dbpedia.org/resource/Exchequer_Standards> <http://dbpedia.org/property/author> ?v1 . ?v1 <http://dbpedia.org/ontology/parent> ?result . ?result <http://dbpedia.org/ontology/deathPlace> <http://dbpedia.org/resource/Quincy,_Massachusetts> . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?parent WHERE {
  ?author dbo:deathPlace ?deathPlace .
  ?author dbo:occupation ?occupation .
  ?author dbo:causeOfDeath ?causeOfDeath .
  ?author dbo:wikiPageRedirects dbr:Exchequer_Standards .

  FILTER(CONTAINS(LCASE(STR(?deathPlace)), ""massachusetts"") && CONTAINS(LCASE(STR(?deathPlace)), ""quincy, massachusetts""))
  
  VALUES ?occupation { <http://dbpedia.org/resource/Politician> <http://dbpedia.org/resource/Office_holder> }
  
  OPTIONAL {
    ?author dbo:parent ?parent .
    ?parent dbo:occupation ?parentOccupation .
    
    FILTER(?parentOccupation IN (<http://dbpedia.org/resource/Politician>, <http://dbpedia.org/resource/Office_holder>) && 
           EXISTS { ?parent dbo:officeHolder ?true })
  }
}
```",4,6,5,2,3,3,3,71,0,0,2,0,0.0,0
839,20,train,Give me the band of Kevin Russell (musician) and band of the member of Böhse Onkelz.,SELECT ?result WHERE { <http://dbpedia.org/resource/Böhse_Onkelz> <http://dbpedia.org/ontology/bandMember> ?v2 . ?result <http://dbpedia.org/ontology/bandMember> ?v2 . <http://dbpedia.org/resource/Kevin_Russell_(musician)> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . },"```sparql
# Query for Kevin Russell's band
SELECT ?band WHERE {
  dbpedia:Kevin_Russell dbo:musicBrainzArtist <http://musicbrainz.org/artist/*> .
  ?artist dbo:associatedBand ?band .
}

UNION

# Query for Böhse Onkelz members and their bands
SELECT DISTINCT ?member ?otherBand WHERE {
  # Michael ""Bones"" Breitkopf
  dbpedia:Michael_Breitkopf dbo:musicBrainzArtist <http://musicbrainz.org/artist/*> .
  ?artist dbo:associatedBand ?band .
  FILTER(?band != dbpedia:Böhse_Onkelz) .
  BIND(dbpedia:Michael_Breitkopf AS ?member)

  UNION

  # Peter ""Pe"" Schorowsky
  dbpedia:Peter_Schorowsky dbo:musicBrainzArtist <http://musicbrainz.org/artist/*> .
  ?artist dbo:associatedBand ?band .
  FILTER(?band != dbpedia:Böhse_Onkelz) .
  BIND(dbpedia:Peter_Schorowsky AS ?member)

  UNION

  # Stephan ""Der Graf"" Weidner
  dbpedia:Stephan_Weidner dbo:musicBrainzArtist <http://musicbrainz.org/artist/*> .
  ?artist dbo:associatedBand ?band .
  FILTER(?band != dbpedia:Böhse_Onkelz) .
  BIND(dbpedia:Stephan_Weidner AS ?member)
}
```",3,3,4,2,2,3,3,71,0,0,1,0,0.0,0
573,20,train,"Give me the person decedent at Massachusetts and person decedent at the residence, that is a settlement, of William J. Phelan.",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/deathPlace> ?v2 . ?result <http://dbpedia.org/ontology/deathPlace> <http://dbpedia.org/resource/Massachusetts> . <http://dbpedia.org/resource/William_J._Phelan> <http://dbpedia.org/property/residence> ?v2 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. },"```sparql
# Query for person decedent at Massachusetts
SELECT ?person WHERE {
  ?person dbo:deathPlace dbr:Massachusetts .
  ?person rdf:type dbo:Person .
}

UNION

# Query for person decedent at the residence of William J. Phelan
SELECT ?decedent WHERE {
  # Find William J. Phelan's residence
  ?phelan dbo:residence ?residence .
  ?phelan foaf:name ""William J. Phelan"" .

  # Ensure the residence is a settlement
  ?residence rdf:type dbo:Settlement .

  # Find decedent at this residence
  ?decedent dbo:deathPlace ?residence .
  ?decedent rdf:type dbo:Person .
}
```",3,4,4,2,2,3,3,71,0,0,4,0,0.0,0
582,13,train,"Give me the player in the father, that is an athlete and a soccer manager and a sports manager, of Masami Nagasawa.",SELECT ?result WHERE { <http://dbpedia.org/resource/Masami_Nagasawa> <http://dbpedia.org/property/father> ?v1 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerManager>. ?v1 <http://dbpedia.org/ontology/team> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsManager>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Athlete>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?father ?occupation WHERE {
  ?person a dbo:Person ;
          foaf:name ""Masami Nagasawa""@en .
  
  OPTIONAL { ?person dbo:father ?father . }
  
  FILTER EXISTS { ?father a dbo:Person . }

  OPTIONAL { 
    ?father dbo:occupation ?occupation .
    FILTER (CONTAINS(LCASE(?occupation), ""athlete"") || CONTAINS(LCASE(?occupation), ""soccer manager"") || CONTAINS(LCASE(?occupation), ""sports manager""))
  }
  
  VALUES ?person { dbr:Masami_Nagasawa }
}
```",2,5,3,2,1,3,3,71,0,0,4,0,0.0,0
236,7,train,"Give me the party member of the administration, that is an organisation, of John Adams.",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/party> ?v1 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?v1 <http://dbpedia.org/property/leader> <http://dbpedia.org/resource/John_Adams> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?party WHERE {
  dbr:John_Adams dbo:presidentOf dbr:United_States .
  dbr:John_Adams dbo:politicalParty ?party .
  FILTER (isLiteral(?party) = false)
}
```",2,3,3,2,1,3,2,20,0,0,269,0,0.0,0
365,10,train,"Give me the native, that is a politician, of the reference to Полтавская губерния.","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/birthPlace> ?v0 . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v0 <http://xmlns.com/foaf/0.1/name> ""Полтавская губерния""@en . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?person ?name WHERE {
  ?person dbo:birthPlace dbr:Poltava_Governorate ;
          dbo:occupation ?occupation .
  FILTER (CONTAINS(LCASE(str(?occupation)), ""politician"") || CONTAINS(LCASE(str(?occupation)), ""political""))
  SERVICE wikibase:label { bd:serviceParam wikibase:language ""[AUTO_LANGUAGE],en"". }
}
```",2,3,3,2,1,3,2,20,0,0,11,0,0.0,0
373,5,train,"Give me the writer of the work, that is a single and a musical work and a work and a soundtrack, of .","SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?v1 <http://dbpedia.org/property/writer> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Single>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Song>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalWork>. ?v1 <http://dbpedia.org/property/writer> """"@en . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?work WHERE {
  ?work a dbo:Singles;
        a dbo:MusicalWork;
        a dbo:CreativeWork;
        dbo:soundtrack dbr:Titanic_(1997_film).
}
```",2,6,3,2,1,2,2,9,0,0,15041,0,0.0,0
98,4,train,Give me the person born as Paolo Elito M. Ballesteros IV.,"SELECT ?result WHERE { ?result <http://dbpedia.org/property/birthName> ""Paolo Elito M. Ballesteros IV""@en . }","```sparql
PREFIX foaf: <http://xmlns.com/foaf/0.1/>
PREFIX schema: <http://schema.org/>

SELECT ?person WHERE {
  VALUES ?name {""Paolo Elito M. Ballesteros IV""}
  
  # Check if the full name matches
  { ?person schema:name ?name }
  
  UNION
  
  # Check if given and family names match parts of the full name
  { 
    ?person foaf:givenName ?given .
    ?person foaf:familyName ?family .
    FILTER (str(?given) + "" "" + str(?family) = ?name)
  }
}
```",1,1,2,1,1,2,3,28,0,0,1,0,0.0,0
216,7,train,Give me the death of Pavel Vezhinov.,SELECT ?result WHERE { <http://dbpedia.org/resource/Pavel_Vezhinov> <http://dbpedia.org/ontology/deathDate> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?deathDate WHERE {
  ?person a dbo:Person ;
          rdfs:label ""Pavel Vezhinov""@en .
  OPTIONAL { ?person dbo:deathDate ?deathDate . }
}
```",1,1,2,1,1,3,3,71,1,0,0,1.0,1.0,1.0
917,19,train,"Give me the parent of the child, that is a royalty, of Kamehameha IV and child of Kekūanāoʻa.",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/child> ?v2 . ?v2 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Kamehameha_IV> . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?result <http://dbpedia.org/ontology/parent> <http://dbpedia.org/resource/Kekūanāoʻa> . },"```sparql
SELECT ?parent WHERE {
  ?child dbr:Princess_Victoria_Kamāmalu .
  ?child dbo:mother dbr:Queen_Emma_of_the_Hawaiian_Islands .
  ?child dbo:father ?parent .
  ?parent rdfs:label ""Kamehameha IV""@en .
  FILTER EXISTS { ?child dbo:mother dbr:Kekūanāoʻa }
}
```",3,4,4,2,2,3,3,71,0,0,1,0,0.0,0
495,3,train,Give me the father of William I of Württemberg.,SELECT ?result WHERE { <http://dbpedia.org/resource/William_I_of_Württemberg> <http://dbpedia.org/property/father> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>

SELECT ?father WHERE {
  ?person dbo:givenName ""William"" .
  ?person dbo:familyName ""I of Württemberg""@en .
  ?person dbo:father ?father .
}
```",1,1,2,1,1,3,2,20,0,0,1,0,0.0,0
18,5,train,"Give me the figure known, that is an educational institution, as Saints.","SELECT ?result WHERE { ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/EducationalInstitution>. ?result <http://dbpedia.org/property/nickname> ""Saints""@en . }","```sparql
SELECT ?institution WHERE {
  ?institution dbo:name ?name .
  FILTER(CONTAINS(LCASE(?name), ""saints""))
  OPTIONAL { ?institution dbo:wikiPageRedirects ?redirect . }
  ?institution a dbo:EducationalInstitution .
}
```",1,2,2,1,1,2,3,28,0,0,25,0,0.0,0
791,28,train,"Give me the predecessor of Emperor Antoku and spouse of the spouse, that is a royalty, of Emperor Takakura and father of Emperor Go-Toba.",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/spouse> ?v1 . ?v1 <http://dbpedia.org/ontology/spouse> <http://dbpedia.org/resource/Emperor_Takakura> . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?result <http://dbpedia.org/ontology/successor> <http://dbpedia.org/resource/Emperor_Antoku> . <http://dbpedia.org/resource/Emperor_Go-Toba> <http://dbpedia.org/property/father> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?predecessor ?spouseOfSpouse ?fatherOfGoToba WHERE {
  # Predecessor of Emperor Antoku (Emperor Takakura)
  dbr:Emperor_Takakura dbo:successionSuccessor dbr:Emperor_Antoku .
  dbr:Emperor_Takakura dbo:predecessor ?predecessor .

  # Spouse of Taira no Kiyomori who is royalty
  dbr:Taira_no_Kiyomori dbo:spouse dbr:Taira_no_Tokuko .
  dbr:Taira_no_Tokuko dbo:spouse dbr:Emperor_Takakura .

  # Father of Emperor Go-Toba
  dbr:Emperor_Go-Toba dbo:father ?fatherOfGoToba .

  # Check if the predecessor is also the father of Emperor Go-Toba
  FILTER (?predecessor = ?fatherOfGoToba)
}
```",4,5,5,2,3,3,3,71,0,0,1,0,0.0,0
124,33,train,"Give me the military force of the war, that is an event and a military conflict and a societal event, of the awardee of British South Africa Company Medal and commander in Mahdist War.",SELECT ?result WHERE { ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v0 <http://dbpedia.org/ontology/battle> ?v3 . ?v0 <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/British_South_Africa_Company_Medal> . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?result <http://dbpedia.org/ontology/battle> ?v3 . <http://dbpedia.org/resource/Mahdist_War> <http://dbpedia.org/ontology/commander> ?result . },"```sparql
SELECT ?militaryForce WHERE {
  ?person dbo:award dbpedia:British_South_Africa_Company_Medal .
  ?person dbo:militaryCommanderOf dbpedia:Mahdist_War .
  ?person foaf:name ""Herbert Kitchener""@en .
  
  ?event dbo:type dbr:Event ;
         dbo:type dbr:Military_conflict ;
         dbo:type dbr:Societal_event ;
         dbo:commandedBy ?person .

  ?militaryForce dbo:participatedIn ?event .
}
```",4,7,5,3,2,3,3,71,0,0,3,0,0.0,0
433,0,train,Give me the associated musical artist of Paul Chambers.,SELECT ?result WHERE { <http://dbpedia.org/resource/Paul_Chambers> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?artist WHERE {
  ?chambers dbo:associatedMusicalArtist ?artist .
  ?chambers rdfs:label ""Paul Chambers""@en .
  FILTER NOT EXISTS { ?chambers dbo:associatedMusicalArtist ?self . }
}
```",1,1,2,1,1,3,3,71,0,0,31,0,0.0,0
874,10,train,"Give me the band member of the band, that is an organisation, of Mark Read (singer).",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/associatedMusicalArtist> ?v0 . ?v0 <http://dbpedia.org/ontology/bandMember> <http://dbpedia.org/resource/Mark_Read_(singer)> . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?member WHERE {
  ?person a dbo:Singer ;
          foaf:name ""Mark Read""@en .
  ?person dbo:bandMember ?band .
  ?band dbo:member ?member .
  FILTER(?member != ?person)
}
```",2,3,3,2,1,3,2,20,0,0,7,0,0.0,0
892,24,train,Give me the entity in Province of Reggio Emilia and landmark at elevation of the award of Anna Ishii.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/province> <http://dbpedia.org/resource/Province_of_Reggio_Emilia> . <http://dbpedia.org/resource/Anna_Ishii> <http://dbpedia.org/property/awards> ?v2 . ?result <http://dbpedia.org/ontology/elevation> ?v2 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT DISTINCT ?entityInReggioEmilia ?landmark WHERE {
  # Find Anna Ishii and her awards
  ?annaIshii dbo:award ?award .
  
  FILTER (str(?annaIshii) = ""Anna_Ishii"")

  # Determine the elevation of the award
  OPTIONAL { ?award dbp:elevation ?elevation . }

  # Find landmarks at this elevation
  ?landmark dbo:elevation ?sameElevation .
  
  FILTER (?sameElevation = ?elevation)

  # Find entities in Province of Reggio Emilia related to the landmark
  ?entityInReggioEmilia dbo:location dbr:Province_of_Reggio_Emilia ;
                       dbo:relatedTo ?landmark .

}
```",3,3,4,2,2,3,3,71,0,0,1,0,0.0,0
582,25,train,Give me the figure known as the nickname of Japan national football team and player in Kazuaki Nagasawa.,SELECT ?result WHERE { ?result <http://dbpedia.org/property/nickname> ?v1 . <http://dbpedia.org/resource/Kazuaki_Nagasawa> <http://dbpedia.org/ontology/team> ?result . <http://dbpedia.org/resource/Japan_national_football_team> <http://dbpedia.org/property/nickname> ?v1 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?nickname WHERE {
  dbr:Japan_national_football_team dbo:nickname ?nickname .
}

UNION

SELECT DISTINCT ?playerName WHERE {
  ?team dbo:member ?player .
  ?player foaf:name ""Kazuaki Nagasawa""@en .
  ?team rdfs:label ""Japan national football team""@en .
}
```",3,3,4,2,2,3,3,71,0,0,1,0,0.0,0
453,3,train,"Who is the author, that is a cardinal and a cleric, of Apologia Pro Vita Sua?",SELECT ?result WHERE { <http://dbpedia.org/resource/Apologia_Pro_Vita_Sua> <http://dbpedia.org/property/author> ?result . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Cardinal>. ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Cleric>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?author WHERE {
  ?book dbo:author ?author .
  ?book rdfs:label ""Apologia Pro Vita Sua""@en .

  OPTIONAL { ?author dbo:title ""Cardinal""@en . }
  OPTIONAL { ?author dbo:occupation ?occupation .
             FILTER(CONTAINS(LCASE(?occupation), ""cleric"") || CONTAINS(LCASE(?occupation), ""priest"")) 
           }

  FILTER((CONTAINS(LCASE(STR(?author)), ""john henry newman"")) && EXISTS{?author dbo:title ""Cardinal""@en} && EXISTS{?author dbo:occupation ?occupation . FILTER(CONTAINS(LCASE(?occupation), ""cleric"") || CONTAINS(LCASE(?occupation), ""priest""))}})
}
```",1,3,2,1,1,2,2,9,0,0,1,0,0.0,0
465,18,train,"Give me the successor of Renée of France and successor of Ercole II d'Este, Duke of Ferrara and spouse of Archduchess Barbara of Austria.","SELECT ?result WHERE { <http://dbpedia.org/resource/Renée_of_France> <http://dbpedia.org/ontology/successor> ?result . <http://dbpedia.org/resource/Ercole_II_d'Este,_Duke_of_Ferrara> <http://dbpedia.org/ontology/successor> ?result . ?result <http://dbpedia.org/ontology/spouse> <http://dbpedia.org/resource/Archduchess_Barbara_of_Austria> . }","```sparql
# Query to find the successor of Renée of France
SELECT ?successor WHERE {
  wd:Q12345 wdt:P39 wd:Q67890 . # Renée of France's title (e.g., Duchess of Ferrara)
  wd:Q67890 wdt:P1368 ?successor . # Successor property for the title
}

UNION

# Query to find the successor of Ercole II d'Este, Duke of Ferrara
SELECT ?successor WHERE {
  wd:Q23456 wdt:P39 wd:Q78901 . # Ercole II d'Este's title (Duke of Ferrara)
  wd:Q78901 wdt:P1368 ?successor . # Successor property for the title
}
```

Note: Replace `wd:Q12345` with the DBpedia ID for Renée of France and `wd:Q23456` with the DBpedia ID for Ercole II d'Este. Similarly, replace `wd:Q67890` and `wd:Q78901` with the respective DBpedia IDs for their titles.",3,3,4,1,3,3,3,71,0,0,1,0,0.0,0
274,18,train,"Give me the associated musical artist of the actor, that is a musical artist, of Imagine the Sound and professional in .","SELECT ?result WHERE { ?v2 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?result <http://dbpedia.org/property/occupation> """"@en . <http://dbpedia.org/resource/Imagine_the_Sound> <http://dbpedia.org/property/starring> ?v2 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?actorArtist WHERE {
  ?person a dbo:MusicalArtist ;
          a dbo:Actor ;
          dbo:associatedBandOrMusicalGroup dbr:Imagine_the_Sound .
  
  OPTIONAL { ?person foaf:name ?name . }
}
```",3,4,4,2,2,2,3,28,0,0,6,0,0.0,0
124,8,train,"Give me the force, that is a societal event and a military conflict, of Herbert Kitchener, 1st Earl Kitchener.","SELECT ?result WHERE { ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?result <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Herbert_Kitchener,_1st_Earl_Kitchener> . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?force WHERE {
  ?kitchener a dbo:Person ;
             foaf:name ""Herbert Kitchener"" ;
             dbo:associatedWith ?force .
  
  ?force a dbo:MilitaryUnit ;
         dbo:partOf ?event .

  ?event a dbo:SocietalEvent, dbo:MilitaryConflict .
}
```",1,3,2,1,1,3,3,71,0,0,8,0,0.0,0
715,27,train,"Give me the leader of the office, that is a government agency and an organisation, of the reference to Carlos Franco Iribarnegaray.","SELECT ?result WHERE { ?v1 <http://xmlns.com/foaf/0.1/name> ""Carlos Franco Iribarnegaray""@en . ?v2 <http://dbpedia.org/ontology/leader> ?result . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?v1 <http://dbpedia.org/property/office> ?v2 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/GovernmentAgency>. }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?leader WHERE {
  ?organization dbo:member dbr:Carlos_Franco_Iribarnegaray .
  ?organization dbo:head ?leader .
}
```",3,5,4,3,1,3,3,71,0,0,2,0,0.0,0
459,5,train,Give me the birth name of Kevin Stitt.,SELECT ?result WHERE { <http://dbpedia.org/resource/Kevin_Stitt> <http://dbpedia.org/property/birthName> ?result . },"```sparql
PREFIX foaf: <http://xmlns.com/foaf/0.1/>
PREFIX dbo: <http://dbpedia.org/ontology/>

SELECT ?birthName WHERE {
  ?person a dbo:Politician ;
          foaf:name ""Kevin Stitt""@en .
  
  OPTIONAL { ?person foaf:givenName ?firstName . }
  OPTIONAL { ?person foaf:familyName ?lastName . }
  OPTIONAL { ?person foaf:name ?alias . FILTER (lang(?alias) = 'en') }

  BIND(CONCAT(COALESCE(?firstName, """"), "" "", COALESCE(?lastName, """")) AS ?birthName)
}
```",1,1,2,1,1,2,3,28,0,1,1,0.0,0.0,0
507,34,train,"Give me the professional in Film director, television director and spouse of the person born as the birth name of Anne V. Coates.","SELECT ?result WHERE { <http://dbpedia.org/resource/Anne_V._Coates> <http://dbpedia.org/property/birthName> ?v2 . ?result <http://dbpedia.org/ontology/spouse> ?v1 . ?v1 <http://dbpedia.org/property/birthName> ?v2 . ?result <http://dbpedia.org/property/occupation> ""Film director, television director""@en . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT ?spouse WHERE {
  ?anne a dbo:Person ;
        foaf:name ""Anne V. Coates""@en .
  
  ?anne dbo:spouse ?spouse .

  ?spouse dbo:occupation ?occupation .
  
  FILTER (
    EXISTS { ?spouse dbo:occupation dbr:Film_director . }
    && EXISTS { ?spouse dbo:occupation dbr:Television_director . }
  )
}
```",4,4,5,3,2,3,3,71,0,0,1,0,0.0,0
865,24,train,"Give me the father of the child, that is a politician, of Abu Ahmad Abdul Hafiz and father of Shahla Khatun.",SELECT ?result WHERE { ?v2 <http://dbpedia.org/property/father> ?result . ?v2 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Abu_Ahmad_Abdul_Hafiz> . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. <http://dbpedia.org/resource/Shahla_Khatun> <http://dbpedia.org/property/father> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?politicianChild ?fatherOfShahla WHERE {
  # Find Abu Ahmad Abdul Hafiz's child who is a politician
  ?person dbo:spouse|dbo:child ?abuAhmadAbdulHafiz .
  ?abuAhmadAbdulHafiz rdfs:label ""Abu Ahmad Abdul Hafiz""@en.
  
  # Ensure the person found is a politician
  ?politicianChild dbo:profession dbp:Politician ;
                  (dbo:spouse|dbo:child) ?person .
  
  # Find Shahla Khatun's father
  ?shahlaKhatun dbo:parent ?fatherOfShahla .
  ?shahlaKhatun rdfs:label ""Shahla Khatun""@en.
  
  # Check if the politician child and Shahla Khatun's father are the same person
  FILTER (?politicianChild = ?fatherOfShahla)
}
```",3,4,4,2,2,3,3,71,0,0,1,0,0.0,0
554,3,train,Give me the administration of Francisco da Costa Gomes.,SELECT ?result WHERE { ?result <http://dbpedia.org/property/leader> <http://dbpedia.org/resource/Francisco_da_Costa_Gomes> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?predecessor ?successor WHERE {
  ?president a dbo:President ;
             foaf:name ""Francisco da Costa Gomes"" .
  
  OPTIONAL { 
    ?presidency dbo:predecessor ?predecessor .
  }
  
  OPTIONAL { 
    ?presidency dbo:successor ?successor .
  }

  FILTER EXISTS {
    ?president dbo:country dbr:Portugal .
  }
}
```",1,1,2,1,1,3,2,20,0,0,3,0,0.0,0
987,8,train,"Give me the region, that is a country, of Central European Time.",SELECT ?result WHERE { ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. ?result <http://dbpedia.org/property/timeZone> <http://dbpedia.org/resource/Central_European_Time> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?country WHERE {
  ?country a dbo:Country .
  ?country dbo:timeZone dbr:Central_European_Time_Zone .
}
```",1,2,2,1,1,3,3,71,0,0,56,0,0.0,0
645,34,train,Give me the commander in the force of the commander in Siege of Madrid and leader of Ministry of the Army (Spain).,SELECT ?result WHERE { <http://dbpedia.org/resource/Ministry_of_the_Army_(Spain)> <http://dbpedia.org/ontology/leader> ?result . ?v1 <http://dbpedia.org/ontology/commander> ?v2 . ?v1 <http://dbpedia.org/ontology/commander> ?result . <http://dbpedia.org/resource/Siege_of_Madrid> <http://dbpedia.org/ontology/commander> ?v2 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?person WHERE {
  # Find the commander of the forces in the Siege of Madrid
  OPTIONAL { 
    dbr:Siege_of_Madrid dbo:commander ?person .
  }
  
  # Find the leader of the Ministry of the Army (Spain)
  OPTIONAL { 
    dbr:Ministry_of_the_Army_(Spain) dbo:leader ?person .
  }

  # Filter to ensure we get Francisco Franco
  FILTER(?person = dbr:Franco)
}
```",4,4,5,3,2,3,3,71,0,0,1,0,0.0,0
124,17,train,"Give me the force, that is a societal event and a military conflict, of the person born on 1850-06-24.","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/commander> ?v1 . ?v1 <http://dbpedia.org/ontology/birthDate> ""1850-06-24""^^<http://www.w3.org/2001/XMLSchema#date> . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?event WHERE {
  ?person dbo:birthDate ""1850-06-24""^^xsd:date .
  ?person rdfs:label ""Theodore Roosevelt""@en .
  
  ?event dbo:agent ?person ;
         a ?eventType .

  FILTER (
    (str(?eventType) = str(dbo:MilitaryConflict)) ||
    (str(?eventType) = str(dbo:SocietalEvent))
  )
}
```",2,4,3,2,1,3,3,71,0,0,8,0,0.0,0
445,6,train,Who is the awardee of Royal Astronomical Society?,SELECT ?result WHERE { ?result <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/Royal_Astronomical_Society> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?awardee WHERE {
  ?award dbo:givenBy dbr:Royal_Astronomical_Society .
  ?award dbo:recipient ?awardee .
}
```",1,1,2,1,1,3,3,71,0,0,2,0,0.0,0
456,27,train,"Give me the band of the band, that is a musical artist, of the band of Alan Doyle.",SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/associatedMusicalArtist> ?v2 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?v2 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . <http://dbpedia.org/resource/Alan_Doyle> <http://dbpedia.org/ontology/associatedMusicalArtist> ?v1 . },"```sparql
SELECT ?band WHERE {
  wd:Q123456 wdt:P31/wdt:P279* wd:Q482994.
  wd:Q123456 wdt:P106 wd:Q215380.
  wd:Q482994 rdfs:label ""Great Big Sea""@en.
}
```

In this query:
- `wd:Q123456` is a placeholder for Alan Doyle's Wikidata item ID.
- `wdt:P31/wdt:P279*` checks if the entity is an instance of or subclass of a musical artist (`wd:Q482994`).
- `wdt:P106` checks for occupation, specifically being a musician.
- The label filter ensures we are looking at ""Great Big Sea.""",3,4,4,3,1,3,3,71,0,0,3,0,0.0,0
917,23,train,"Give me the parent of the child, that is a royalty, of the mayor of Hawaiian Kingdom.",SELECT ?result WHERE { ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v2 <http://dbpedia.org/property/father> ?v1 . <http://dbpedia.org/resource/Hawaiian_Kingdom> <http://dbpedia.org/property/leader> ?v1 . ?result <http://dbpedia.org/ontology/child> ?v2 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?parent WHERE {
    # Identify the monarch of the Hawaiian Kingdom, focusing on King Kamehameha I
    dbr:King_Kamehameha_I dbo:spouse ?spouse .
    
    # Find children who are royalty (i.e., have a royal title)
    ?child dbo:parent ?spouse ;
           dbo:parent dbr:King_Kamehameha_I ;
           a dbo:RoyalPerson .

    # Get the parent of this child
    ?child dbo:parent ?parent .
}
```",3,4,4,3,1,3,3,71,0,0,12,0,0.0,0
216,24,train,"Give me the team of Ognjen Vukojević and player in the coach, that is a soccer player and a sports manager and a soccer manager, of Bosnia and Herzegovina national under-18 football team.",SELECT ?result WHERE { ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerPlayer>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsManager>. ?result <http://dbpedia.org/ontology/coach> <http://dbpedia.org/resource/Ognjen_Vukojević> . ?v2 <http://dbpedia.org/ontology/team> ?result . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerManager>. <http://dbpedia.org/resource/Bosnia_and_Herzegovina_national_under-18_football_team> <http://dbpedia.org/ontology/coach> ?v2 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?team WHERE {
  ?person rdfs:label ""Ognjen Vukojević""@en .
  ?person dbo:nationality dbr:Bosnia_and_Herzegovina .
  ?person dbo:sport dbr:Soccer .
  ?person dbo:occupation dbp:Sports_manager .
  ?person dbo:managerTeam ?team .
  FILTER(CONTAINS(LCASE(?team), ""bosnia and herzegovina national under-18 football team""))
}
```",3,6,4,2,2,3,3,71,0,0,1,0,0.0,0
826,11,train,Give me the spouse of the child of Johann Heinrich Appel.,"SELECT ?result WHERE { ?v0 <http://dbpedia.org/property/father> ""Johann Heinrich Appel""@en . ?v0 <http://dbpedia.org/ontology/spouse> ?result . }","```sparql
SELECT DISTINCT ?child ?spouse WHERE {
  ?person foaf:name ""Johann Heinrich Appel""@en .
  ?person dbo:child ?child .
  ?child dbp:spouse ?spouse .
}
```",2,2,3,2,1,3,3,71,0,0,1,0,0.0,0
124,1,train,Give me the military force of Battle of Tamai.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/battle> <http://dbpedia.org/resource/Battle_of_Tamai> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?militaryForce WHERE {
  ?battle a dbo:Battle ;
          rdfs:label ""Battle of Tamai""@en .
  
  ?militaryForce dbo:participatedIn ?battle .
}
```",1,1,2,1,1,3,3,71,0,0,4,0,0.0,0
417,24,train,Give me the child of the father of Frederick IX of Denmark and child of Alexandrine of Mecklenburg-Schwerin.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/parent> <http://dbpedia.org/resource/Alexandrine_of_Mecklenburg-Schwerin> . <http://dbpedia.org/resource/Frederick_IX_of_Denmark> <http://dbpedia.org/property/father> ?v2 . ?result <http://dbpedia.org/property/father> ?v2 . },"```sparql
SELECT ?person WHERE {
  ?frederick ix:father ?christianX .
  ?frederick ix:mother ?alexandrine .
  ?christianX foaf:name ""Christian X""@en .
  ?alexandrine foaf:name ""Alexandrine of Mecklenburg-Schwerin""@en .
}
```",3,3,4,2,2,3,3,71,0,0,2,0,0.0,0
273,7,train,Give me the spouse of the child of Giovanni Agnelli.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/spouse> ?v1 . <http://dbpedia.org/resource/Giovanni_Agnelli> <http://dbpedia.org/ontology/child> ?v1 . },"```sparql
SELECT ?spouse WHERE {
  wd:Q123456 wdt:P40 wd:Q789012 . # Giovanni Agnelli (wd:Q123456) has a child (wdt:P40) Edoardo Agnelli (wd:Q789012)
  wd:Q789012 wdt:P26 ?spouse .    # Edoardo Agnelli (wd:Q789012) has a spouse (wdt:P26) ?spouse
}
```

Note: Replace `wd:Q123456` with the actual DBpedia identifier for Giovanni Agnelli and `wd:Q789012` with the identifier for Edoardo Agnelli. You can find these identifiers by querying DBpedia or using a resource like Wikidata.",2,2,3,2,1,3,2,20,0,0,1,0,0.0,0
965,22,train,"Give me the spouse of Prince Louis of Battenberg and parent of the person born, that is a noble, as Prince George of Battenberg.","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/spouse> <http://dbpedia.org/resource/Prince_Louis_of_Battenberg> . ?v0 <http://dbpedia.org/ontology/parent> ?result . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Noble>. ?v0 <http://dbpedia.org/property/birthName> ""Prince George of Battenberg""@en . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?spouse WHERE {
  ?person a dbo:Person ;
          foaf:name ""Louis Mountbatten, 1st Marquess of Milford Haven""@en .
  ?person dbo:spouse ?spouse .
  ?child dbo:parent ?spouse .
  ?child foaf:name ""George Mountbatten, 2nd Marquess of Milford Haven""@en .
}
```",3,4,4,2,2,3,3,71,0,0,1,0,0.0,0
417,6,train,Who is the father of Frederick IX of Denmark?,SELECT ?result WHERE { <http://dbpedia.org/resource/Frederick_IX_of_Denmark> <http://dbpedia.org/property/father> ?result . },"```sparql
SELECT ?father WHERE {
  dbpedia:Frederick_IX_of_Denmark dbo:father ?father .
}
```",1,1,2,1,1,3,3,71,0,0,1,0,0.0,0
36,16,train,Give me the person born as the birth name of Ayo Makun and actor of Being Mrs Elliot.,SELECT ?result WHERE { ?result <http://dbpedia.org/property/birthName> ?v0 . <http://dbpedia.org/resource/Being_Mrs_Elliot> <http://dbpedia.org/ontology/starring> ?result . <http://dbpedia.org/resource/Ayo_Makun> <http://dbpedia.org/property/birthName> ?v0 . },"```sparql
SELECT ?person WHERE {
  ?person dbo:birthName ""Ayo Makun""@en .
  ?person dbo:actorInFilmOrTVSeries dbr:Being_Mrs_Elliot .
}
```",3,3,4,2,2,2,3,28,0,0,1,0,0.0,0
124,31,train,"Give me the military force of Battle of Tamai and commander in the war, that is a societal event and a military conflict, of the reference, that is Australian and an organisation and a military unit, to 'A' Battery, Royal Australian Artillery.","SELECT ?result WHERE { ?v1 <http://xmlns.com/foaf/0.1/name> ""'A' Battery, Royal Australian Artillery""@en . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?v1 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Australia>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?v1 <http://dbpedia.org/ontology/battle> ?v0 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryUnit>. ?v0 <http://dbpedia.org/ontology/commander> ?result . ?result <http://dbpedia.org/ontology/battle> <http://dbpedia.org/resource/Battle_of_Tamai> . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?militaryForce ?commander WHERE {
  # Find the Battle of Tamai and its military forces involved
  ?battle a dbo:MilitaryConflict ;
          rdfs:label ""Battle of Tamai""@en .
  
  ?battle dbo:militaryUnit ?militaryForce .

  OPTIONAL { 
    ?militaryForce dbo:commander ?commander .
  }

  # Ensure the reference is to the Crimean War
  ?war a dbo:MilitaryConflict ;
       rdfs:label ""Crimean War""@en .
  
  ?battle dbo:partOf ?war .

  # Check for connection to 'A' Battery, Royal Australian Artillery
  OPTIONAL {
    ?australianUnit a dbo:MilitaryUnit ;
                    rdfs:label ""A Battery, Royal Australian Artillery""@en .
    
    ?australianUnit dbo:militaryConflict ?battle .
  }
}
```",4,9,5,3,2,3,3,71,0,0,1,0,0.0,0
98,4,train,Give me the parent of Emperor Rokujō and child of Emperor Go-Shirakawa.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/parent> <http://dbpedia.org/resource/Emperor_Go-Shirakawa> . <http://dbpedia.org/resource/Emperor_Rokujō> <http://dbpedia.org/ontology/parent> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?parent WHERE {
  ?rokujō a dbo:Person ;
          rdfs:label ""Emperor Rokujō""@en .
  
  ?parent dbo:child ?rokujō .

  ?goShirakawa a dbo:Person ;
               rdfs:label ""Emperor Go-Shirakawa""@en .

  ?parent dbo:child ?goShirakawa .
}
```",2,2,3,1,2,2,2,9,0,0,1,0,0.0,0
976,32,train,"Give me the office of the mayor, that is a politician and an office holder and Turkish, of Nation Alliance (Turkey) and office of the leader, that is a politician, of Grand National Assembly of Turkey.",SELECT ?result WHERE { <http://dbpedia.org/resource/Grand_National_Assembly_of_Turkey> <http://dbpedia.org/ontology/leader> ?v1 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. <http://dbpedia.org/resource/Nation_Alliance_(Turkey)> <http://dbpedia.org/property/leader> ?v3 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v3 <http://dbpedia.org/ontology/nationality> <http://dbpedia.org/resource/Turkey>. ?v3 <http://dbpedia.org/property/office> ?result . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v1 <http://dbpedia.org/property/office> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?mayorOffice ?leaderOffice WHERE {
  # Find the mayor from Nation Alliance (Turkey) who is Turkish
  ?mayor a dbo:Mayor ;
         dbo:nationality dbr:Turkey ;
         dbo:partyAffiliation dbr:Nation_Alliance_(Turkey) .
  
  # Ensure the individual is an office holder and politician
  ?mayor dbo:officeHolderOf ?city ;
         dbo:occupation dbp:Politician .

  # Find the leader of the Grand National Assembly of Turkey who is a politician
  ?leader a dbo:Member_of_the_Grand_National_Assembly_of_Turkey ;
          dbo:position dbr:Speaker_of_the_Grand_National_Assembly_of_Turkey ;
          dbo:occupation dbp:Politician .

  # Bind the offices to variables for output
  BIND(?mayor AS ?mayorOffice)
  BIND(?leader AS ?leaderOffice)
}
```",4,8,5,2,2,3,3,71,0,0,1,0,0.0,0
47,11,train,Give me the office of the administration of Jagdeep Dhankhar.,SELECT ?result WHERE { ?v0 <http://dbpedia.org/property/office> ?result . ?v0 <http://dbpedia.org/property/governor> <http://dbpedia.org/resource/Jagdeep_Dhankhar> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?officeLabel WHERE {
  ?person rdfs:label ""Jagdeep Dhankhar""@en .
  ?person dbo:office ?office .
  ?office rdfs:label ?officeLabel .
}
```",2,2,3,2,1,3,3,71,0,0,80,0,0.0,0
216,13,train,"Give me the player in the coach, that is a soccer player and a sports manager and a soccer manager, of Bosnia and Herzegovina national under-18 football team.",SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/team> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerManager>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerPlayer>. <http://dbpedia.org/resource/Bosnia_and_Herzegovina_national_under-18_football_team> <http://dbpedia.org/ontology/coach> ?v1 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsManager>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?player WHERE {
  ?player a dbo:SoccerPlayer .
  ?player dbo:occupation dbr:Sports_Manager .
  ?player dbo:coachOfTeam dbr:Bosnia_and_Herzegovina_national_under-18_football_team .
}
```",2,5,3,2,1,3,3,71,0,0,13,0,0.0,0
645,23,train,Give me the commander in the force of the commander in Siege of Madrid.,SELECT ?result WHERE { ?v0 <http://dbpedia.org/ontology/commander> ?result . <http://dbpedia.org/resource/Siege_of_Madrid> <http://dbpedia.org/ontology/commander> ?v2 . ?v0 <http://dbpedia.org/ontology/commander> ?v2 . },"```sparql
SELECT ?commanderInCharge WHERE {
  ?siege dcterms:subject dbc:Siege_of_Madrid .
  ?siege dbo:commander ?commanderDuringSiege .
  ?commanderDuringSiege foaf:name ""José Enrique Varela""@en .
  ?commanderDuringSiege dbo:commander ?commanderInCharge .
  ?commanderInCharge foaf:name ""Francisco Franco""@en .
}
```",3,3,4,3,1,3,3,71,0,0,274,0,0.0,0
892,34,train,Give me the entity in the profession of the true self of Enrico Crolla and entity in Province of Reggio Emilia.,"SELECT ?result WHERE { ?v3 <http://xmlns.com/foaf/0.1/givenName> ""Enrico Crolla""@en . ?result <http://dbpedia.org/ontology/province> <http://dbpedia.org/resource/Province_of_Reggio_Emilia> . ?result <http://dbpedia.org/ontology/country> ?v1 . ?v3 <http://dbpedia.org/property/occupation> ?v1 . }","```sparql
# Query to find Enrico Crolla's profession
SELECT ?profession WHERE {
  dbpedia:Enrico_Crolla dbo:occupation ?profession .
}

# Query to find an entity in the Province of Reggio Emilia
SELECT DISTINCT ?entity WHERE {
  ?entity dbo:locatedIn dbr:Province_of_Reggio_Emilia .
}
```",4,4,5,3,2,3,3,71,0,0,40,0,0.0,0
130,2,train,"Give me the native, that is a coach and a college coach, of Madison, Alabama.","SELECT ?result WHERE { ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Coach>. ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/CollegeCoach>. ?result <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Madison,_Alabama> . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?person ?name WHERE {
  ?person dbo:birthPlace dbr:Madison,_Alabama ;
          a dbo:Person ;
          dbo:occupation ?occupation .
  
  FILTER (
    EXISTS { ?occupation rdfs:label ?label . 
             FILTER (CONTAINS(LCASE(?label), ""coach"") && CONTAINS(LCASE(?label), ""college"")) }
  )
  
  OPTIONAL {
    ?person foaf:name ?name .
  }

  FILTER (LANG(?name) = 'en')
}
ORDER BY ?name
LIMIT 1
```",1,3,2,1,1,3,2,20,0,0,3,0,0.0,0
353,5,train,"Give me the alma mater of the awardee of Medal of the Order ""For Merit to the Fatherland"".",SELECT ?result WHERE { ?v1 <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/Medal_of_the_Order_%22For_Merit_to_the_Fatherland%22> . ?v1 <http://dbpedia.org/ontology/almaMater> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT DISTINCT ?recipient ?almaMater WHERE {
  ?medal a dbo:Award ;
         rdfs:label ""Medal of the Order 'For Merit to the Fatherland'""@en .
  
  ?medal dbo:recipient ?recipient .

  OPTIONAL { 
    ?recipient foaf:almaMater ?almaMater .
  }
}
```",2,2,3,2,1,2,2,9,0,0,8,0,0.0,0
326,11,train,"Give me the person decedent at France and resident of the birthplace, that is a state and British, of David Jessel.",SELECT ?result WHERE { ?v2 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/United_Kingdom>. ?result <http://dbpedia.org/property/residence> ?v2 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/AdministrativeRegion>. ?result <http://dbpedia.org/ontology/deathPlace> <http://dbpedia.org/resource/France> . <http://dbpedia.org/resource/David_Jessel> <http://dbpedia.org/ontology/birthPlace> ?v2 . },"```sparql
# Step 1: Find David Jessel's birthplace
SELECT ?birthPlace WHERE {
    dbpedia:David_Jessel dbo:birthPlace ?birthPlace .
}

# Assuming the result from above is a place named ""StateName""

# Step 2: Ensure this place is a state and has a British connection
SELECT ?state WHERE {
    ?state rdf:type dbo:State .
    ?state rdfs:label ""StateName""@en .
    ?state dbo:country dbr:United_Kingdom .
}

# Assuming the result from above confirms it's a valid state

# Step 3: Find individuals who were residents of this birthplace and died in France
SELECT DISTINCT ?person WHERE {
    ?person dbo:birthPlace ?state ;
            dbo:deathPlace dbr:France .
}
```",3,5,4,2,2,3,2,20,0,0,1,0,0.0,0
839,18,train,Give me the band of Peter Schorowsky and band of Kevin Russell (musician) and band of Matthias Röhr.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/bandMember> <http://dbpedia.org/resource/Matthias_Röhr> . <http://dbpedia.org/resource/Kevin_Russell_(musician)> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?result <http://dbpedia.org/ontology/bandMember> <http://dbpedia.org/resource/Peter_Schorowsky> . },"```sparql
SELECT ?person ?personLabel ?band ?bandLabel WHERE {
  VALUES (?person ?personLabel) {
    (dbpedia:Peter_Schorowsky ""Peter Schorowsky"")
    (dbpedia:Kevin_Russell_(musician) ""Kevin Russell (musician)"")
    (dbpedia:Matthias_Röhr ""Matthias Röhr"")
  }
  
  ?person dbp:band ?band .
  OPTIONAL { ?band rdfs:label ?bandLabel . FILTER(lang(?bandLabel) = 'en') }
  SERVICE wikibase:label { bd:serviceParam wikibase:language ""[AUTO_LANGUAGE],en"". }
}
ORDER BY ?person
```",3,3,4,1,3,3,3,71,0,0,1,0,0.0,0
382,0,train,Give me the birthplace of Björn Joppe.,SELECT ?result WHERE { <http://dbpedia.org/resource/Björn_Joppe> <http://dbpedia.org/ontology/birthPlace> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?birthPlace WHERE {
  ?person a dbo:Person ;
          foaf:name ""Björn Joppe""@en .
  OPTIONAL { ?person dbo:birthPlace ?birthPlace . }
}
```",1,1,2,1,1,3,2,20,2,0,0,1.0,1.0,1.0
158,7,train,"Give me the entity in the award, that is a country, of Adelbert Cronkhite.",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/country> ?v1 . <http://dbpedia.org/resource/Adelbert_Cronkhite> <http://dbpedia.org/property/awards> ?v1 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?award ?country WHERE {
  ?person rdfs:label ""Adelbert Cronkhite""@en .
  ?person dbo:award ?award .
  OPTIONAL { ?award dbo:country ?country . }
  FILTER (lang(?person) = 'en')
  FILTER (!isBlank(?country))
}
```",2,3,3,2,1,3,2,20,0,0,44301,0,0.0,0
47,33,train,"Give me the office of the awardee of the award, that is an award, of Mantu Ghosh and office of Suvendu Adhikari.",SELECT ?result WHERE { ?v3 <http://dbpedia.org/property/office> ?result . ?v3 <http://dbpedia.org/property/awards> ?v0 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Award>. <http://dbpedia.org/resource/Mantu_Ghosh> <http://dbpedia.org/property/awards> ?v0 . <http://dbpedia.org/resource/Suvendu_Adhikari> <http://dbpedia.org/property/office> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?awardOffice ?suvenduOffice WHERE {
  # Find Mantu Ghosh's awards and corresponding offices
  {
    SELECT DISTINCT ?award (SAMPLE(?office) AS ?awardOffice) WHERE {
      VALUES ?mantuGhosh { dbr:Mantu_Ghosh }
      ?mantuGhosh dbo:awarded <?award> .
      OPTIONAL { ?mantuGhosh dbo:office ?office . }
    } GROUP BY ?award
  }

  # Find Suvendu Adhikari's office
  {
    SELECT DISTINCT (SAMPLE(?office) AS ?suvenduOffice) WHERE {
      VALUES ?suvenduAdhikari { dbr:Suvendu_Adhikari }
      ?suvenduAdhikari dbo:office ?office .
    }
  }
}
```",4,5,5,3,2,3,3,71,0,0,1,0,0.0,0
124,22,train,"Give me the commander in Mahdist War and military force of the force, that is a societal event and a military conflict, of Herbert Kitchener, 1st Earl Kitchener.","SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Herbert_Kitchener,_1st_Earl_Kitchener> . <http://dbpedia.org/resource/Mahdist_War> <http://dbpedia.org/ontology/commander> ?result . ?result <http://dbpedia.org/ontology/battle> ?v1 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?force WHERE {
  ?kitchener a dbo:Person ;
             foaf:name ""Herbert Kitchener"" ;
             dbo:commander ?force .
  
  ?mahdistWar a dbo:MilitaryConflict, dbo:SocietalEvent ;
              rdfs:label ?eventLabel .

  FILTER(CONTAINS(LCASE(?eventLabel), ""mahdist war""))

  ?kitchener dbo:militaryConflict ?mahdistWar .
}
```",3,5,4,2,2,3,3,71,0,0,3,0,0.0,0
329,9,train,Give me the entity in United Kingdom and entity in Northern Ireland.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/United_Kingdom> . ?result <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Northern_Ireland> . },"```sparql
SELECT ?ukEntity ?niEntity WHERE {
  # Find an entity in the United Kingdom
  ?ukEntity dbo:country dbr:United_Kingdom .
  
  # Find an entity in Northern Ireland
  ?niEntity dbo:region dbr:Northern_Ireland .
}
```",2,2,3,1,2,2,3,28,531,42470,0,0.012348550033720146,1.0,0.024395846733437473
527,6,train,Give me the author of The Boy Who Kicked Pigs and actor of The Book Tower.,SELECT ?result WHERE { <http://dbpedia.org/resource/The_Book_Tower> <http://dbpedia.org/property/starring> ?result . <http://dbpedia.org/resource/The_Boy_Who_Kicked_Pigs> <http://dbpedia.org/property/author> ?result . },"```sparql
# Query to find the author of ""The Boy Who Kicked Pigs""
SELECT ?author WHERE {
  ?book dbo:title ""The Boy Who Kicked Pigs""@en .
  ?book dbo:author ?author .
}

# Query to find an actor from ""The Book Tower""
SELECT ?actor WHERE {
  ?film dbo:title ""The Book Tower""@en .
  ?film dbo:starring ?actor .
}
```",2,2,3,1,2,3,2,20,0,0,1,0,0.0,0
933,39,train,"Give me the reference to Alan Warner and band of the band, that is a group and a band and an organisation, of the person born, that is a musical artist, on 1947-04-21.","SELECT ?result WHERE { ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Group>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?v2 <http://dbpedia.org/ontology/associatedMusicalArtist> ?v0 . ?v2 <http://dbpedia.org/ontology/birthDate> ""1947-04-21""^^<http://www.w3.org/2001/XMLSchema#date> . ?v0 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Band>. ?result <http://xmlns.com/foaf/0.1/name> ""Alan Warner""@en . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?person ?band WHERE {
  ?person a dbo:MusicalArtist ;
          dbo:birthday ""1947-04-21""^^xsd:date .
  
  ?person dbo:memberOfBand ?band .
  ?band a dbo:Band, dbo:Organization, dbo:Group .
}
```",4,8,5,3,2,3,3,71,0,0,1,0,0.0,0
200,6,train,Give me the band member of the band of Revenge (Canadian band).,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/associatedMusicalArtist> ?v0 . <http://dbpedia.org/resource/Revenge_(Canadian_band)> <http://dbpedia.org/ontology/associatedMusicalArtist> ?v0 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?member ?memberLabel WHERE {
  ?band a dbo:Band ;
        rdfs:label ""Revenge""@en .
  
  ?band dbo:bandMember ?member .

  OPTIONAL { ?member rdfs:label ?memberLabel . FILTER (lang(?memberLabel) = 'en') }
}
```",2,2,3,2,1,2,2,9,0,0,9,0,0.0,0
232,5,train,"Give me the artistic movement of the person born, that is a writer, on 1849-09-14.","SELECT ?result WHERE { ?v0 <http://dbpedia.org/ontology/movement> ?result . ?v0 <http://dbpedia.org/ontology/birthDate> ""1849-09-14""^^<http://www.w3.org/2001/XMLSchema#date> . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Writer>. }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?person ?artMovement WHERE {
  ?person dbo:birthDate ""1849-09-14""^^xsd:date .
  ?person dbo:occupation dbr:Writer .
  OPTIONAL { ?person dbo:artMovement ?artMovement . }
}
```",2,3,3,2,1,2,2,9,0,0,1,0,0.0,0
236,11,train,"Give me the party member of Democratic-Republican Party and party member of the administration, that is an organisation, of John Adams.",SELECT ?result WHERE { ?v2 <http://dbpedia.org/property/leader> <http://dbpedia.org/resource/John_Adams> . ?result <http://dbpedia.org/ontology/party> ?v2 . ?result <http://dbpedia.org/ontology/party> <http://dbpedia.org/resource/Democratic-Republican_Party> . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?party ?administration WHERE {
  VALUES ?johnAdams { dbr:John_Adams_(1735-1826) }
  
  # Find the political party of John Adams
  ?johnAdams dbo:politicalParty ?party .
  
  # Find the administration or organization under which he served as President
  ?office dbo:positionHeld ?presidency .
  ?presidency dbo:agent ?johnAdams .
  ?office dbo:organization ?administration .
}
```",3,4,4,2,2,3,2,20,0,0,18,0,0.0,0
507,18,train,"Give me the director of Entertaining Mr Sloane (film) and professional in Film director, television director and spouse of Anne V. Coates.","SELECT ?result WHERE { <http://dbpedia.org/resource/Entertaining_Mr_Sloane_(film)> <http://dbpedia.org/ontology/director> ?result . ?result <http://dbpedia.org/ontology/spouse> <http://dbpedia.org/resource/Anne_V._Coates> . ?result <http://dbpedia.org/property/occupation> ""Film director, television director""@en . }","```sparql
SELECT ?director WHERE {
  ?film dcterms:title ""Entertaining Mr Sloane""@en .
  ?film dbo:director ?director .
  ?director dbo:profession ?profession .
  FILTER EXISTS { ?profession rdfs:label ""Film director""@en }
  FILTER EXISTS { ?profession rdfs:label ""Television director""@en }
  ?director foaf:mbox ?email . # Assuming there's a way to identify the person uniquely
  OPTIONAL {
    ?director dbo:spouse ?spouse .
    ?spouse foaf:name ""Anne V. Coates"" .
  }
}
```",3,3,4,1,3,3,3,71,0,0,1,0,0.0,0
129,9,train,Give me the associated musical artist of EarthGang and associated musical artist of Saba (rapper).,SELECT ?result WHERE { <http://dbpedia.org/resource/EarthGang> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . <http://dbpedia.org/resource/Saba_(rapper)> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . },"```sparql
SELECT ?artist WHERE {
  # Find associated artists of EarthGang
  { 
    dbpedia:EarthGang dbo:associatedMusicalArtist ?artist .
  }
  
  UNION
  
  # Find associated artists of Saba (rapper)
  { 
    dbpedia:Saba_(rapper) dbo:associatedMusicalArtist ?artist .
  }
}
```",2,2,3,1,2,2,3,28,0,0,1,0,0.0,0
573,14,train,"Give me the parent of the author, that is a politician and an office holder, of Exchequer Standards.",SELECT ?result WHERE { <http://dbpedia.org/resource/Exchequer_Standards> <http://dbpedia.org/property/author> ?v1 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v1 <http://dbpedia.org/ontology/parent> ?result . },"```sparql
SELECT ?parent WHERE {
  ?author dbo:workExample dbr:Exchequer_Standards .
  ?author dbo:occupation dbr:Politician ;
          dbo:officeHolder true .
  ?author foaf:familyName ?name .
  ?author dbo:parent ?parent .
  ?parent dbo:occupation dbr:Politician ;
          dbo:officeHolder true .
}
```",2,4,3,2,1,3,3,71,0,0,2,0,0.0,0
773,2,train,Give me the parent of Charles the Fat.,SELECT ?result WHERE { <http://dbpedia.org/resource/Charles_the_Fat> <http://dbpedia.org/ontology/parent> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?parentLabel WHERE {
  ?charles a dbo:Person ;
           rdfs:label ""Charles the Fat""@en .
  
  OPTIONAL { ?charles dbo:father ?parent . }
  OPTIONAL { ?charles dbo:mother ?parent . }

  ?parent rdfs:label ?parentLabel .
}
```",1,1,2,1,1,3,3,71,0,0,2,0,0.0,0
41,7,train,Give me the party of Enda Kenny and party of Mark Durkan.,SELECT ?result WHERE { <http://dbpedia.org/resource/Enda_Kenny> <http://dbpedia.org/ontology/party> ?result . <http://dbpedia.org/resource/Mark_Durkan> <http://dbpedia.org/ontology/party> ?result . },"```sparql
SELECT ?person ?name ?party WHERE {
  VALUES (?person ?name) { 
    (dbr:Enda_Kenny ""Enda Kenny"") 
    (dbr:Mark_Durkan ""Mark Durkan"")
  }
  ?person rdfs:label ?name .
  OPTIONAL { ?person dbp:party ?party . }
}
```",2,2,3,1,2,2,3,28,0,0,1,0,0.0,0
865,18,train,Give me the father of AK Abdul Momen and native of British Raj and father of Shahla Khatun.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/British_Raj> . <http://dbpedia.org/resource/AK_Abdul_Momen> <http://dbpedia.org/property/father> ?result . <http://dbpedia.org/resource/Shahla_Khatun> <http://dbpedia.org/property/father> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?father WHERE {
  ?person dbo:name ""AK Abdul Momen""@en .
  ?person dbo:father ?father .
  
  OPTIONAL { 
    ?father dbo:nationality dbr:British_Raj . 
  }
  
  OPTIONAL {
    ?child dbo:mother ?father .
    ?child dbp:name ""Shahla Khatun""@en .
  }
}
```",3,3,4,1,3,3,3,71,0,0,1,0,0.0,0
582,31,train,"Give me the reference to the residence of the reference, that is a scientist, to Hirotaka Sugawara and player in Kazuaki Nagasawa.","SELECT ?result WHERE { ?v1 <http://dbpedia.org/property/residence> ?v0 . ?v1 <http://xmlns.com/foaf/0.1/name> ""Hirotaka Sugawara""@en . ?result <http://xmlns.com/foaf/0.1/name> ?v0 . <http://dbpedia.org/resource/Kazuaki_Nagasawa> <http://dbpedia.org/ontology/team> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Scientist>. }","```sparql
SELECT ?scientist ?residence WHERE {
  # Find Hirotaka Sugawara's profession or notable association
  ?sugawara dbo:spouse ?person1 .
  
  # Find Kazuaki Nagasawa's profession or notable association
  ?nagasawa dbo:spouse ?person2 .

  # Identify a common scientist associated with both individuals
  FILTER (?person1 = ?person2)
  BIND(?person1 AS ?scientist)

  # Get the residence of the identified scientist
  ?scientist dbo:residence ?residence .
}
```",4,5,5,3,2,3,3,71,0,2016,1,0.0,0.0,0
645,15,train,Give me the force of the commander in Siege of Madrid.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/commander> ?v1 . <http://dbpedia.org/resource/Siege_of_Madrid> <http://dbpedia.org/ontology/commander> ?v1 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?force WHERE {
  ?event dbo:location dbr:Madrid .
  ?event dbo:dateStart ?dateStart .
  ?event dbo:dateEnd ?dateEnd .
  FILTER (?dateStart >= ""1936-11-01""^^xsd:date && ?dateEnd <= ""1939-03-31""^^xsd:date) .
  
  ?person dbo:occupation dbr:Military_person .
  ?person dbo:almaMater ?university .
  ?person foaf:name ""Francisco Franco"" .
  
  ?event dbo:commander ?person .
  OPTIONAL { ?person dbo:militaryUnit ?force . }
}
```",2,2,3,2,1,3,3,71,0,0,65,0,0.0,0
417,22,train,"Give me the child of the child, that is a royalty, of Frederick Francis III, Grand Duke of Mecklenburg-Schwerin and spouse of Princess Caroline-Mathilde of Denmark.","SELECT ?result WHERE { ?v1 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Frederick_Francis_III,_Grand_Duke_of_Mecklenburg-Schwerin> . ?result <http://dbpedia.org/ontology/spouse> <http://dbpedia.org/resource/Princess_Caroline-Mathilde_of_Denmark> . ?result <http://dbpedia.org/ontology/parent> ?v1 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?grandchild ?grandchildLabel WHERE {
  # Frederick Francis III and his spouse
  dbr:Friedrich_Franz_III,_Grand_Duke_of_Mecklenburg-Schwerin dbo:spouse dbr:Caroline_Mathilde_of_Schleswig-Holstein-Gottorp .

  # Their children
  ?child dbo:parent dbr:Friedrich_Franz_III,_Grand_Duke_of_Mecklenburg-Schwerin .
  ?child dbo:parent dbr:Caroline_Mathilde_of_Schleswig-Holstein-Gottorp .

  # Check each child for offspring with a royal title
  ?grandchild dbo:parent ?child .
  ?grandchild dbo:title ?title .
  
  FILTER EXISTS {
    ?title rdfs:label ?royaltyLabel .
    FILTER(CONTAINS(LCASE(?royaltyLabel), ""prince"") || CONTAINS(LCASE(?royaltyLabel), ""duke"") || CONTAINS(LCASE(?royaltyLabel), ""king"") || CONTAINS(LCASE(?royaltyLabel), ""queen""))
  }

  # Return the grandchild with a royal title
  SERVICE wikibase:label { bd:serviceParam wikibase:language ""[AUTO_LANGUAGE],en"". }
}
```",3,4,4,2,2,3,3,71,0,0,1,0,0.0,0
933,5,train,Who is the professional in Musician?,SELECT ?result WHERE { ?result <http://dbpedia.org/property/occupation> <http://dbpedia.org/resource/Musician> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?person ?name WHERE {
  ?person a dbo:Person .
  ?person dbo:occupation ?occupation .
  ?occupation rdfs:subClassOf* dbo:Musician .
  OPTIONAL { ?person foaf:name ?name . }
}
ORDER BY ?name
LIMIT 100
```",1,1,2,1,1,3,3,71,0,0,1825,0,0.0,0
865,27,train,Give me the father of the child of the father of Abul Maal Abdul Muhith.,SELECT ?result WHERE { ?v0 <http://dbpedia.org/property/father> ?v2 . <http://dbpedia.org/resource/Abul_Maal_Abdul_Muhith> <http://dbpedia.org/property/father> ?v2 . ?v0 <http://dbpedia.org/property/father> ?result . },"```sparql
SELECT ?grandfather ?childFather WHERE {
  ?abulMaal a dbo:Person ;
            foaf:name ""Abul Maal Abdul Muhith""@en .
  
  ?abulMaal dbo:father ?father .

  ?father dbo:child ?child .

  ?child dbo:father ?childFather .
}
```",3,3,4,3,1,3,3,71,1,0,0,1.0,1.0,1.0
443,17,train,"Give me the birthplace of the person born, that is a musical artist and an artist, on 1949-11-20 and birthplace of Carl Larsson.","SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. ?v1 <http://dbpedia.org/ontology/birthPlace> ?result . <http://dbpedia.org/resource/Carl_Larsson> <http://dbpedia.org/ontology/birthPlace> ?result . ?v1 <http://dbpedia.org/ontology/birthDate> ""1949-11-20""^^<http://www.w3.org/2001/XMLSchema#date> . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. }","```sparql
# Query for the person born on 1949-11-20 who is both a musical artist and an artist
SELECT ?person ?birthPlace WHERE {
  ?person dbo:birthDate ""1949-11-20""^^xsd:date .
  ?person dbo:occupation ?occupation1 .
  ?person dbo:occupation ?occupation2 .
  FILTER (
    (str(?occupation1) = ""musical artist"") &&
    (str(?occupation2) = ""artist"")
  ) .
  ?person dbo:birthPlace ?birthPlace .
}

UNION

# Query for Carl Larsson's birthplace
SELECT ?person ?birthPlace WHERE {
  ?person rdfs:label ""Carl Larsson""@en .
  ?person dbo:birthPlace ?birthPlace .
}
```",3,5,4,2,2,2,3,28,0,0,1,0,0.0,0
445,29,train,Give me the entity in United Kingdom and entity in England and death place of the awardee of Royal Astronomical Society.,SELECT ?result WHERE { ?v3 <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/Royal_Astronomical_Society> . ?result <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/United_Kingdom> . ?result <http://dbpedia.org/ontology/location> <http://dbpedia.org/resource/England> . ?v3 <http://dbpedia.org/ontology/deathPlace> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?awardee ?deathPlace WHERE {
  ?awardee dbo:awardReceived dbr:Royal_Astronomical_Society .
  ?awardee dbo:deathPlace ?deathPlace .

  OPTIONAL { 
    ?awardee dbo:country dbr:United_Kingdom .
  }
  
  OPTIONAL { 
    ?awardee dbo:stateOrProvince dbr:England .
  }

  FILTER EXISTS { ?awardee dbo:country dbr:United_Kingdom . }
  FILTER EXISTS { ?awardee dbo:stateOrProvince dbr:England . }
}
```",4,4,5,2,3,3,3,71,0,0,1,0,0.0,0
582,36,train,"Give me the figure known as the nickname of the team, that is an organisation, of Hajime Moriyasu and reference to Japan.","SELECT ?result WHERE { ?result <http://dbpedia.org/property/nickname> ?v1 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?v0 <http://dbpedia.org/property/nickname> ?v1 . ?v0 <http://dbpedia.org/ontology/coach> <http://dbpedia.org/resource/Hajime_Moriyasu> . ?result <http://xmlns.com/foaf/0.1/name> ""Japan""@en . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?team ?nickname WHERE {
  ?person a dbo:Person ;
          foaf:name ""Hajime Moriyasu""@en .
  ?person dbo:coach ?team .
  ?team dbo:country dbr:Japan .
  OPTIONAL { ?team rdfs:label ?nickname FILTER (lang(?nickname) = 'en') }
}
```",4,5,5,3,2,3,3,71,0,0,1,0,0.0,0
935,12,train,Give me the death place of Abdul Raziq Bugti and headquarter of the office of Sanaullah Khan Zehri.,SELECT ?result WHERE { <http://dbpedia.org/resource/Abdul_Raziq_Bugti> <http://dbpedia.org/ontology/deathPlace> ?result . ?v0 <http://dbpedia.org/ontology/location> ?result . <http://dbpedia.org/resource/Sanaullah_Khan_Zehri> <http://dbpedia.org/property/office> ?v0 . },"```sparql
SELECT ?deathPlace ?headquarterLocation WHERE {
  # Find death place of Abdul Raziq Bugti
  dbpedia:Abdul_Razzaq_Bugti dbo:deathPlace ?deathPlace .

  # Assuming Sanaullah Khan Zehri was a Chief Minister, find the headquarters location
  OPTIONAL {
    ?zehri foaf:name ""Sanaullah Khan Zehri"" .
    ?zehri dbo:office dbpedia:Chief_Minister_of_Balochistan .
    ?office dbo:headquarterLocation ?headquarterLocation .
  }
}
```",3,3,4,2,2,3,2,20,0,0,1,0,0.0,0
232,1,train,"Give me the claim to fame of Katherine ""Kitty"" Marshall.",SELECT ?result WHERE { <http://dbpedia.org/resource/Katherine_%22Kitty%22_Marshall> <http://dbpedia.org/ontology/knownFor> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?claimToFame WHERE {
  VALUES ?kittyMarshall { dbr:Katherine_Marshall_(actress) }
  
  OPTIONAL { ?kittyMarshall dbo:occupation ?occupation . FILTER (lang(?occupation) = 'en') }
  OPTIONAL { ?kittyMarshall dbo:notableWork ?notableWork . FILTER (lang(?notableWork) = 'en') }
  OPTIONAL { ?kittyMarshall dbo:award ?award . FILTER (lang(?award) = 'en') }

  BIND(COALESCE(?occupation, ?notableWork, ?award) AS ?claimToFame)
}
```",1,1,2,1,1,2,2,9,0,0,2,0,0.0,0
573,2,train,Give me the parent of John Quincy Adams.,SELECT ?result WHERE { <http://dbpedia.org/resource/John_Quincy_Adams> <http://dbpedia.org/ontology/parent> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>

SELECT ?parentLabel WHERE {
  ?person dbo:father ?parent .
  ?person rdfs:label ""John Quincy Adams""@en .
  ?parent rdfs:label ?parentLabel .
}
UNION
{
  ?person dbo:mother ?parent .
  ?person rdfs:label ""John Quincy Adams""@en .
  ?parent rdfs:label ?parentLabel .
}
```",1,1,2,1,1,3,3,71,0,0,2,0,0.0,0
554,13,train,Give me the leader of the administration of the party member of Independent politician.,SELECT ?result WHERE { ?v1 <http://dbpedia.org/property/leader> ?result . ?v0 <http://dbpedia.org/ontology/party> <http://dbpedia.org/resource/Independent_politician> . ?v1 <http://dbpedia.org/property/leader> ?v0 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?leader ?administration WHERE {
  ?leader a dbo:HeadOfState ;
          dbo:politicalAffiliation dbr:Independent_politician .
  OPTIONAL { ?leader dbo:headOfGovernment ?administration . }
}
```",3,3,4,3,1,3,2,20,0,0,1909,0,0.0,0
124,12,train,Give me the military force of Battle of Tamai and military force of Battle of Atbara.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/battle> <http://dbpedia.org/resource/Battle_of_Tamai> . ?result <http://dbpedia.org/ontology/battle> <http://dbpedia.org/resource/Battle_of_Atbara> . },"```sparql
# Query for the military forces of the Battle of Tamai
SELECT ?participant WHERE {
  ?battle dbo:wikiPageRedirects db:Battle_of_Tamai .
  ?battle dbo:participatedIn ?event .
  ?event dbo:participatingMilitaryUnit ?participant .
}

UNION

# Query for the military forces of the Battle of Atbara
SELECT ?participant WHERE {
  ?battle dbo:wikiPageRedirects db:Battle_of_Atbara .
  ?battle dbo:participatedIn ?event .
  ?event dbo:participatingMilitaryUnit ?participant .
}
```",2,2,3,1,2,3,3,71,0,0,1,0,0.0,0
93,10,train,"Who is the governor of the native, that is a politician, of Seattle?",SELECT ?result WHERE { ?v0 <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Seattle> . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v0 <http://dbpedia.org/property/governor> ?result . },"```sparql
SELECT ?governor WHERE {
  ?seattle dbo:locationCity dbr:Seattle .
  ?politician dbo:birthPlace ?seattle ;
              a dbo:Politician .
  ?state dbo:capital ?city .
  ?city rdfs:label ""Olympia""@en .
  ?state rdfs:label ""Washington (state)""@en .
  ?governor dbo:governmentRole ?role .
  ?role rdfs:label ""Governor of Washington""@en ;
        dbo:officeHolder ?politician .
}
```",2,3,3,2,1,3,2,20,0,0,18,0,0.0,0
47,7,train,"Give me the entity, that is an award, in India.",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/India> . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Award>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?award WHERE {
  ?award a dbo:Award .
  OPTIONAL { ?award dbo:country dbr:India . }
  FILTER NOT EXISTS { ?award dbo:country [] } # Ensure the award has a country specified
}
```",1,2,2,1,1,3,3,71,0,15043,272,0.0,0.0,0
933,13,train,Give me the reference to the birth name of Alan Warner (musician).,SELECT ?result WHERE { <http://dbpedia.org/resource/Alan_Warner_(musician)> <http://dbpedia.org/property/birthName> ?v1 . ?result <http://xmlns.com/foaf/0.1/name> ?v1 . },"```sparql
PREFIX foaf: <http://xmlns.com/foaf/0.1/>
PREFIX schema: <http://schema.org/>

SELECT ?birthName WHERE {
  ?person a foaf:Person ;
          foaf:name ""Alan Warner (musician)"" .
  
  OPTIONAL { ?person foaf:givenName ?givenName . }
  OPTIONAL { ?person schema:birthName ?birthName . }

  FILTER(?birthName != """")
}
```",2,2,3,2,1,3,3,71,0,0,1,0,0.0,0
791,4,train,"Give me the spouse, that is a royalty, of Emperor Takakura.",SELECT ?result WHERE { ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?result <http://dbpedia.org/ontology/spouse> <http://dbpedia.org/resource/Emperor_Takakura> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?spouse ?spouseName WHERE {
  ?emperor rdf:type dbo:Emperor ;
           rdfs:label ""Takakura""@en .
  
  ?emperor dbo:spouse ?spouse .

  OPTIONAL { 
    ?spouse dbo:royalty ?isRoyalty .
  }

  FILTER(LANG(?spouseName) = 'en')
  BIND(STR(?spouse) AS ?spouseURI)
  SERVICE wikibase:label { bd:serviceParam wikibase:language ""[AUTO_LANGUAGE],en"". }
}
```",1,2,2,1,1,3,3,71,0,0,1,0,0.0,0
83,2,train,"Who is the member, that is a sports manager, of Kedah FA?",SELECT ?result WHERE { ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsManager>. ?result <http://dbpedia.org/ontology/team> <http://dbpedia.org/resource/Kedah_FA> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?managerName WHERE {
  ?person dbo:team dbp:Kedah_FA .
  ?person a dbo:SportsManager .
  ?person foaf:name ?managerName .
}
```",1,2,2,1,1,3,2,20,0,0,17,0,0.0,0
216,2,train,Give me the team of Ognjen Vukojević.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/coach> <http://dbpedia.org/resource/Ognjen_Vukojević> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?teamLabel WHERE {
  ?person a dbo:Footballer ;
          foaf:name ""Ognjen Vukojević""@en .
  
  OPTIONAL { ?person dbo:currentTeam ?team . }
  
  ?team rdfs:label ?teamLabel .
  FILTER (lang(?teamLabel) = 'en')
}
```",1,1,2,1,1,3,3,71,0,0,1,0,0.0,0
83,14,train,"Give me the party of the governor of the commander, that is a politician, in Central African Republic Civil War.",SELECT ?result WHERE { ?v0 <http://dbpedia.org/ontology/party> ?result . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. <http://dbpedia.org/resource/Central_African_Republic_Civil_War> <http://dbpedia.org/ontology/commander> ?v2 . ?v2 <http://dbpedia.org/property/governor> ?v0 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?person ?party WHERE {
  ?person a dbo:Politician ;
          dbo:nationality dbr:Central_African_Republic ;
          dbo:officeTitle ?title .
  
  OPTIONAL { ?person dbo:politicalParty ?party . }
  
  FILTER(CONTAINS(LCASE(?title), ""governor"") || CONTAINS(LCASE(?title), ""president""))
  FILTER(CONTAINS(LCASE(STR(?person)), ""central african republic civil war""))
}
```",3,4,4,3,1,3,2,20,0,0,12,0,0.0,0
507,11,train,Give me the spouse of the person born as Anne Voase Coates.,"SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/spouse> ?v0 . ?v0 <http://dbpedia.org/property/birthName> ""Anne Voase Coates""@en . }","```sparql
SELECT ?spouse WHERE {
  ?person foaf:name ""Anne Voase Coates""@en .
  ?person dbo:birthName ""Anne Voase Coates"" .
  ?person dbo:spouse ?spouse .
}
```",2,2,3,2,1,3,3,71,0,0,1,0,0.0,0
865,22,train,Give me the native of British Raj and father of the child of Abu Ahmad Abdul Hafiz.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/British_Raj> . ?v0 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Abu_Ahmad_Abdul_Hafiz> . ?v0 <http://dbpedia.org/property/father> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?nativeOfBritishRaj WHERE {
  # Step 1: Identify Abu Ahmad Abdul Hafiz
  ?abuAH a dbo:Person ;
         foaf:name ""Abu Ahmad Abdul Hafiz""@en .

  # Step 2: Find his children
  ?child dbo:parent ?abuAH .

  # Step 3: Determine the father of that child (assuming it's Abu Ahmad Abdul Hafiz)
  ?father dbo:child ?child .
  
  # Step 4: Check if this person is native to British Raj
  ?nativeOfBritishRaj dbo:nativePlace dbr:British_Raj ;
                      foaf:name ?name .

  FILTER (?abuAH = ?father) 
}
```",3,3,4,2,2,3,3,71,0,0,1,0,0.0,0
976,39,train,Give me the office of the person born as the birth name of Naci Bostancı and office of Meral Akşener.,SELECT ?result WHERE { <http://dbpedia.org/resource/Naci_Bostancı> <http://dbpedia.org/property/birthName> ?v2 . ?v0 <http://dbpedia.org/property/birthName> ?v2 . ?v0 <http://dbpedia.org/property/office> ?result . <http://dbpedia.org/resource/Meral_Akşener> <http://dbpedia.org/property/office> ?result . },"```sparql
# Query for Naci Bostancı's birth name and office
SELECT ?birthName ?officeLabel WHERE {
  ?person a dbo:Person ;
          foaf:name ""Naci Bostancı""@en .
  OPTIONAL { ?person dbp:birthName ?birthName . }
  OPTIONAL { ?person dbo:positionHeld ?office . 
             ?office rdfs:label ?officeLabel . 
             FILTER(LANG(?officeLabel) = 'en') }
}
UNION
# Query for Meral Akşener's office
SELECT ?officeLabel WHERE {
  ?person a dbo:Person ;
          foaf:name ""Meral Akşener""@en .
  OPTIONAL { ?person dbo:positionHeld ?office . 
             ?office rdfs:label ?officeLabel . 
             FILTER(LANG(?officeLabel) = 'en') }
}
```",4,4,5,3,2,3,3,71,0,0,1,0,0.0,0
976,37,train,"Give me the office of Naci Bostancı and office of the mayor, that is a politician and an office holder and Turkish, of the reference, that is an organisation and a political party and Turkish, to Millet İttifakı.","SELECT ?result WHERE { ?v1 <http://dbpedia.org/property/leader> ?v2 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v2 <http://dbpedia.org/ontology/nationality> <http://dbpedia.org/resource/Turkey>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?v2 <http://dbpedia.org/property/office> ?result . ?v1 <http://xmlns.com/foaf/0.1/name> ""Millet İttifakı""@en . <http://dbpedia.org/resource/Naci_Bostancı> <http://dbpedia.org/property/office> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/PoliticalParty>. ?v1 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Turkey>. }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?naciBostanciOffice ?mayorOffice ?milletIttifaki
WHERE {
  # Find Naci Bostancı's office or position
  OPTIONAL { 
    dbr:Naci_Bostancı dbo:office ?naciBostanciOffice .
  }

  # Find the office of a mayor who is Turkish
  OPTIONAL {
    ?mayor a dbo:Mayor ;
           dbo:nationality dbr:Turkey ;
           dbo:position ?mayorOffice .
  }

  # Confirm Millet İttifakı as a political party and organization in Turkey
  dbr:Millet_İttifakı a dbo:PoliticalParty, dbo:Organization ;
                     dbo:country dbr:Turkey .

}
```",4,10,5,3,2,3,3,71,0,0,1,0,0.0,0
645,37,train,"Give me the military force of the force, that is an event and a military conflict and a societal event, of the native, that is a president and a politician, of Restoration (Spain) and leader of Ministry of the Army (Spain).",SELECT ?result WHERE { ?v3 <http://dbpedia.org/ontology/commander> ?v0 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/President>. <http://dbpedia.org/resource/Ministry_of_the_Army_(Spain)> <http://dbpedia.org/ontology/leader> ?result . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?v0 <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Restoration_(Spain)> . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?result <http://dbpedia.org/ontology/battle> ?v3 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?militaryForce WHERE {
  # Identify Alfonso XIII as the native of Restoration (Spain) who is a president and politician
  dbr:Alfonso_XIII_of_Spain dbo:nationality dbr:Spain ;
                             dbo:positionHeld dbr:King_of_Spain .

  # Find events that are military conflicts and societal events during his reign
  ?event dbo:type dbr:Military_conflict ;
         dbo:place dbr:Morocco ; # The Rif War took place in Morocco
         dbo:participatedIn ?militaryForce .

  # Ensure the event is a societal event (e.g., part of broader historical context)
  ?event dbo:isPartOf ?societalEvent .
  
  # Identify the military force involved, specifically the Spanish Army
  ?militaryForce rdfs:label ""Spanish Army""@en ;
                 dbo:country dbr:Spain .
}
```",4,9,5,3,2,3,3,71,0,0,1,0,0.0,0
216,17,train,"Give me the person born, that is a sports manager and a soccer manager and a soccer player, on the death of Pavel Vezhinov.",SELECT ?result WHERE { ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerPlayer>. ?result <http://dbpedia.org/ontology/birthDate> ?v1 . <http://dbpedia.org/resource/Pavel_Vezhinov> <http://dbpedia.org/ontology/deathDate> ?v1 . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsManager>. ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerManager>. },"```sparql
SELECT ?person ?birthDate WHERE {
  # Find the death date of Pavel Vezhinov
  ?vezhinov dbo:deathDate ?deathDate .
  FILTER(STR(?vezhinov) = ""Pavel_Vezhinov"") .

  # Find people born on this date
  ?person dbo:birthDate ?birthDate .
  
  # Ensure the person has all three roles
  ?person dbo:occupation ?occupation1 ;
          ?person dbo:occupation ?occupation2 ;
          ?person dbo:occupation ?occupation3 .

  FILTER(STR(?occupation1) = ""Sports manager"" &&
         STR(?occupation2) = ""Soccer manager"" &&
         STR(?occupation3) = ""Soccer player"") .

  # Match the birth date with Vezhinov's death date
  FILTER(STR(?birthDate) = STR(?deathDate))
}
```",2,5,3,2,1,3,3,71,0,0,1,0,0.0,0
353,6,train,"Give me the entity in the country of Moskovsky City District, Nizhny Novgorod.","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/country> ?v1 . <http://dbpedia.org/resource/Moskovsky_City_District,_Nizhny_Novgorod> <http://dbpedia.org/ontology/country> ?v1 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?entity WHERE {
  ?district a dbo:District ;
           rdfs:label ""Moskovsky City District""@en .
  ?city a dbo:City ;
        dbo:administrativeUnit ?district ;
        rdfs:label ""Nizhny Novgorod""@en .
  ?entity dbo:location ?city .
}
```",2,2,3,2,1,2,2,9,0,0,29927,0,0.0,0
917,3,train,Who is the mayor of Hawaiian Kingdom?,SELECT ?result WHERE { <http://dbpedia.org/resource/Hawaiian_Kingdom> <http://dbpedia.org/property/leader> ?result . },"```sparql
# This query is intentionally left blank as there is no valid answer to the question.
```",1,1,2,1,1,3,3,71,0,0,8,0,0.0,0
582,18,train,Give me the player in Kazuaki Nagasawa and figure known as --10-19 and reference to Japan.,"SELECT ?result WHERE { <http://dbpedia.org/resource/Kazuaki_Nagasawa> <http://dbpedia.org/ontology/team> ?result . ?result <http://dbpedia.org/property/nickname> ""--10-19""^^<http://www.w3.org/2001/XMLSchema#gMonthDay> . ?result <http://xmlns.com/foaf/0.1/name> ""Japan""@en . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?player WHERE {
  ?coach a dbo:Coach ;
         foaf:name ""Kazuaki Nagasawa""@en .
  
  ?team dbo:coach ?coach .

  ?player dbo:jerseyNumber ""-10""^^xsd:int ;
          dbo:nationality dbr:Japan ;
          dbo:playsFor ?team .

  FILTER (regex(str(?player), ""19"", ""i""))
}
```",3,3,4,1,3,3,3,71,0,0,1,0,0.0,0
892,33,train,Give me the landmark at elevation of the award of the member of E-girls and entity in Italy.,SELECT ?result WHERE { ?v0 <http://dbpedia.org/property/awards> ?v2 . <http://dbpedia.org/resource/E-girls> <http://dbpedia.org/ontology/bandMember> ?v0 . ?result <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Italy> . ?result <http://dbpedia.org/ontology/elevation> ?v2 . },"```sparql
# Step 1: Find members of E-girls
SELECT ?member WHERE {
  ?member dbo:memberOf dbr:E-girls .
}

# Assuming we have identified a member, let's say ""Ami Yamamoto"" for demonstration purposes

# Step 2: Find awards received by the member
SELECT ?award WHERE {
  dbp:Ami_Yamamoto dbo:receivedAward ?award .
}

# Step 3: Find landmarks associated with these awards and their elevations
SELECT ?landmark ?elevation WHERE {
  ?award dbo:location ?place .
  ?place dbo:wikiPageRedirects ?landmark .
  OPTIONAL { ?landmark dbo:elevationAboveSeaLevel ?elevation . }
}

# Step 4: Find entities in Italy
SELECT ?italianEntity WHERE {
  ?italianEntity dbo:country dbr:Italy .
}

# Step 5: Find landmarks in Italy and their elevations
SELECT ?italianLandmark ?italianElevation WHERE {
  ?italianEntity dbo:wikiPageRedirects ?italianLandmark .
  OPTIONAL { ?italianLandmark dbo:elevationAboveSeaLevel ?italianElevation . }
}

# Step 6: Match the elevations to find a corresponding landmark
SELECT ?italianLandmark WHERE {
  ?award dbo:location ?place .
  ?place dbo:wikiPageRedirects ?landmark .
  OPTIONAL { ?landmark dbo:elevationAboveSeaLevel ?elevation . }
  
  ?italianEntity dbo:country dbr:Italy .
  ?italianEntity dbo:wikiPageRedirects ?italianLandmark .
  OPTIONAL { ?italianLandmark dbo:elevationAboveSeaLevel ?italianElevation . }

  FILTER (?elevation = ?italianElevation)
}
```",4,4,5,3,2,3,3,71,0,0,11,0,0.0,0
826,15,train,Who is the child of the father of Anna Magdalena Appel?,SELECT ?result WHERE { <http://dbpedia.org/resource/Anna_Magdalena_Appel> <http://dbpedia.org/property/father> ?v1 . ?result <http://dbpedia.org/property/father> ?v1 . },"```sparql
SELECT ?child WHERE {
  wd:Q123456 dbo:mother wd:Q789012 .  # Assuming Q123456 is Anna Magdalena Appel and Q789012 is her mother
  wd:Q789012 dbo:spouse ?father .
  ?father a dbo:Person .
  ?father dbo:child ?child .
}
```

Note: Replace `wd:Q123456` with the actual DBpedia resource ID for Anna Magdalena Appel and `wd:Q789012` with her mother's resource ID. The query assumes that the father is linked through a spouse relationship to Anna Magdalena Appel's mother.",2,2,3,2,1,3,3,71,0,0,1,0,0.0,0
987,13,train,Give me the birth place of the actor of All for Free.,SELECT ?result WHERE { <http://dbpedia.org/resource/All_for_Free> <http://dbpedia.org/property/starring> ?v1 . ?v1 <http://dbpedia.org/ontology/birthPlace> ?result . },"```sparql
SELECT ?actor ?birthPlace WHERE {
  VALUES ?film { dbpedia:All_for_Free }
  
  # Find actors associated with the film
  ?film dbo:starring ?actor .
  
  # Filter for known main actors (Leonardo DiCaprio and Kate Winslet)
  FILTER(?actor IN (
    dbpedia:Leonardo_DiCaprio,
    dbpedia:Kate_Winslet
  ))
  
  # Retrieve birthplace information
  OPTIONAL { ?actor dbo:birthPlace ?birthPlace }
}
```",2,2,3,2,1,3,3,71,0,0,14,0,0.0,0
5,7,train,"Give me the birthplace of the person born, that is a politician, as .","SELECT ?result WHERE { ?v0 <http://dbpedia.org/property/birthName> """"@en . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v0 <http://dbpedia.org/ontology/birthPlace> ?result . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT ?politicianName ?birthPlaceLabel WHERE {
  ?person a dbo:Politician .
  ?person foaf:name ?politicianName .
  ?person dbo:birthPlace ?birthPlace .
  ?birthPlace rdfs:label ?birthPlaceLabel .
  FILTER (lang(?birthPlaceLabel) = 'en')
}
ORDER BY ?politicianName
```",2,3,3,2,1,3,2,20,0,190543,222,0.0,0.0,0
274,17,train,Give me the associated musical artist of Cecil Taylor and professional in the designer of Tetris Classic.,SELECT ?result WHERE { ?result <http://dbpedia.org/property/occupation> ?v1 . <http://dbpedia.org/resource/Cecil_Taylor> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . <http://dbpedia.org/resource/Tetris_Classic> <http://dbpedia.org/property/designer> ?v1 . },"```sparql
# Query to find associated musical artists of Cecil Taylor
SELECT ?artist WHERE {
  ?cecil a dbo:MusicalArtist ;
         foaf:name ""Cecil Taylor"" .
  ?collaboration dbo:performer ?cecil ;
                 dbo:performer ?artist .
}

UNION

# Query to find the designer of Tetris Classic
SELECT ?designer WHERE {
  ?tetrisClassic a dbo:VideoGame ;
                  rdfs:label ""Tetris Classic""@en .
  ?designer dbo:creatorOf ?tetrisClassic ;
            foaf:name ?name .
}
```",3,3,4,2,2,2,3,28,0,0,1,0,0.0,0
888,7,train,"Give me the commander in the force, that is a societal event and an event, of Serhiy Kotenko.",SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/commander> ?result . ?v1 <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Serhiy_Kotenko> . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?event ?commanderInForce WHERE {
  ?event dbo:agent dbr:Serhiy_Kotenko .
  ?event a dbo:SocietalEvent .
  OPTIONAL { ?event dbo:commanderInForce ?commanderInForce . }
}
```",2,4,3,2,1,3,2,20,0,0,13,0,0.0,0
865,8,train,Who is the child of Abu Ahmad Abdul Hafiz?,SELECT ?result WHERE { ?result <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Abu_Ahmad_Abdul_Hafiz> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>

SELECT ?child WHERE {
  ?person rdfs:label ""Abu Ahmad Abdul Hafiz""@en .
  ?person dbo:child ?child .
}
```",1,1,2,1,1,3,3,71,3,0,0,1.0,1.0,1.0
83,0,train,Give me the player in Greg Boehme.,SELECT ?result WHERE { <http://dbpedia.org/resource/Greg_Boehme> <http://dbpedia.org/ontology/team> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?team WHERE {
  ?person a dbo:Athlete .
  ?person foaf:name ""Greg Boehme"" .
  ?person dbo:team ?team .
}
```",1,1,2,1,1,2,2,9,0,0,2,0,0.0,0
373,6,train,Give me the professional in the profession of Beto Guedes.,SELECT ?result WHERE { ?result <http://dbpedia.org/property/occupation> ?v1 . <http://dbpedia.org/resource/Beto_Guedes> <http://dbpedia.org/property/occupation> ?v1 . },"```sparql
SELECT ?person WHERE {
  dbpedia:Betinho_Guedes dbo:occupation ?profession .
  ?person dbo:occupation ?profession .
  FILTER(?person != dbpedia:Betinho_Guedes)
}
```",2,2,3,2,1,2,2,9,0,0,1543,0,0.0,0
124,34,train,"Give me the commander in the war, that is a societal event and a military conflict, of the reference, that is Australian and an organisation and a military unit, to 'A' Battery, Royal Australian Artillery and military force of Battle of Atbara.","SELECT ?result WHERE { ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryUnit>. ?v2 <http://xmlns.com/foaf/0.1/name> ""'A' Battery, Royal Australian Artillery""@en . ?result <http://dbpedia.org/ontology/battle> <http://dbpedia.org/resource/Battle_of_Atbara> . ?v2 <http://dbpedia.org/ontology/battle> ?v1 . ?v2 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Australia>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?v1 <http://dbpedia.org/ontology/commander> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?commander WHERE {
  # Find the commander of A Battery, Royal Australian Artillery
  ?unit a dbo:MilitaryUnit ;
        rdfs:label ""A Battery, Royal Australian Artillery""@en .
  
  OPTIONAL { 
    ?unit dbo:commander ?commander .
  }
  
  # Ensure the unit participated in the Battle of Atbara
  ?battle dbr:Battle_of_Atbara ;
         dbo:participatingUnit ?unit .

  # Ensure the commander is Australian
  ?commander dbo:nationality dbr:Australia .
}
```",4,9,5,3,2,3,3,71,0,0,1,0,0.0,0
129,12,train,Give me the associated musical artist of Saba (rapper) and associated musical artist of EarthGang and professional in .,"SELECT ?result WHERE { <http://dbpedia.org/resource/Saba_(rapper)> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?result <http://dbpedia.org/property/occupation> """"@en . <http://dbpedia.org/resource/EarthGang> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . }","```sparql
# Query to find associated musical artists of Saba (rapper)
SELECT ?artist WHERE {
  ?saba dbo:associatedMusicalArtist ?artist .
  FILTER(STRSTARTS(LCASE(?saba), ""http://dbpedia.org/resource/saba_(rapper)""))
}

UNION

# Query to find associated musical artists of EarthGang
SELECT ?artist WHERE {
  ?earthgang dbo:associatedMusicalArtist ?artist .
  FILTER(STRSTARTS(LCASE(?earthgang), ""http://dbpedia.org/resource/earthgang""))
}
```",3,3,4,1,3,2,3,28,0,0,1,0,0.0,0
341,0,train,Give me the band member of Beyoncé.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/associatedMusicalArtist> <http://dbpedia.org/resource/Beyoncé> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?band ?member WHERE {
  ?band dbo:member dbr:Beyoncé .
  ?band dbo:member ?member .
  FILTER(?member != dbr:Beyoncé)
}
```",1,1,2,1,1,2,2,9,0,0,50,0,0.0,0
459,2,train,Give me the person born as John Kevin Stitt.,"SELECT ?result WHERE { ?result <http://dbpedia.org/property/birthName> ""John Kevin Stitt""@en . }","```sparql
PREFIX foaf: <http://xmlns.com/foaf/0.1/>
SELECT ?person WHERE {
  ?person foaf:givenName ""John"" .
  ?person foaf:familyName ""Stitt"" .
}
```",1,1,2,1,1,2,3,28,0,0,1,0,0.0,0
5,6,train,Give me the entity in Canada and birthplace of Gerald Regan.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Canada> . <http://dbpedia.org/resource/Gerald_Regan> <http://dbpedia.org/ontology/birthPlace> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?birthPlace WHERE {
  ?person a dbo:Politician ;
          foaf:name ""Gerald Regan""@en .
  ?person dbo:birthPlace ?birthPlace .
  FILTER EXISTS { ?birthPlace dbo:country dbr:Canada }
}
```",2,2,3,1,2,3,2,20,1,0,0,1.0,1.0,1.0
459,16,train,Give me the person born as the birth name of Kevin Stitt and governor of Oklahoma.,SELECT ?result WHERE { <http://dbpedia.org/resource/Oklahoma> <http://dbpedia.org/property/governor> ?result . ?result <http://dbpedia.org/property/birthName> ?v2 . <http://dbpedia.org/resource/Kevin_Stitt> <http://dbpedia.org/property/birthName> ?v2 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?person ?governorRole WHERE {
  ?person dbo:birthName ""Kevin Stitt""@en .
  OPTIONAL { ?person dbo:officeHolder ?role . }
  FILTER EXISTS { 
    ?role dbo:positionTitle ""Governor of Oklahoma""@en ;
          dbo:incumbent ?person .
  }
}
```",3,3,4,2,2,2,3,28,0,0,1,0,0.0,0
41,8,train,"Give me the party of the leader, that is a politician and an office holder, of 2005 Castlereagh Borough Council election.",SELECT ?result WHERE { <http://dbpedia.org/resource/2005_Castlereagh_Borough_Council_election> <http://dbpedia.org/property/leader> ?v1 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v1 <http://dbpedia.org/ontology/party> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?leader ?partyLabel WHERE {
    ?election dbo:electionDate ?date .
    ?election dbo:officeHolder ?leader .
    ?leader dbo:politicalParty ?party .
    
    FILTER(CONTAINS(LCASE(STR(?date)), ""2005""))
    FILTER(CONTAINS(LCASE(STR(?election)), ""castlereagh borough council""))

    SERVICE <http://dbpedia.org/sparql> {
        ?party rdfs:label ?partyLabel .
        FILTER (LANG(?partyLabel) = 'en')
    }
}
```",2,4,3,2,1,2,3,28,0,0,6,0,0.0,0
645,39,train,"Give me the leader of the office, that is a government agency and an organisation, of the native of Restoration (Spain) and military force of Spanish Civil War.",SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/GovernmentAgency>. ?result <http://dbpedia.org/ontology/battle> <http://dbpedia.org/resource/Spanish_Civil_War> . ?v0 <http://dbpedia.org/property/office> ?v1 . ?v0 <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Restoration_(Spain)> . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?v1 <http://dbpedia.org/ontology/leader> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?person ?office WHERE {
  ?person a dbo:Person .
  ?person dbo:nationality dbr:Spain .
  
  # Born during the Bourbon Restoration period (1874-1931)
  ?person dbo:birthDate ?birthDate .
  FILTER (?birthDate >= ""1874-01-01""^^xsd:date && ?birthDate <= ""1931-12-31""^^xsd:date) .

  # Involved in the Spanish Civil War
  ?person dbo:militaryConflict dbr:Spanish_Civil_War .

  # Held a leadership position in a government agency or organization
  ?person dbo:office ?office .
  FILTER EXISTS { ?office dbo:type ?type . 
                 FILTER (?type IN (dbr:Government_Agency, dbr:Organization)) }
}
```",4,6,5,3,2,3,3,71,0,0,2,0,0.0,0
36,10,train,Give me the person born in the birth year of Deanne Bray.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/birthYear> ?v1 . <http://dbpedia.org/resource/Deanne_Bray> <http://dbpedia.org/ontology/birthYear> ?v1 . },"```sparql
# Step 1: Retrieve Deanne Bray's birth year
SELECT ?birthYear WHERE {
  dbpedia:Deanne_Bray dbo:birthDate ?date .
  BIND(YEAR(?date) AS ?birthYear)
}

# Step 2: Find other persons born in the same year as Deanne Bray
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT DISTINCT ?person WHERE {
  # Retrieve Deanne Bray's birth year from the first query
  BIND(?birthYear AS ?deanneBirthYear) .
  
  ?person a dbo:Person ;
          dbo:birthDate ?date .
  FILTER(YEAR(?date) = ?deanneBirthYear)
  FILTER(?person != dbpedia:Deanne_Bray) # Exclude Deanne Bray herself
}
```",2,2,3,2,1,2,3,28,0,0,2611,0,0.0,0
926,34,train,Give me the child of Ahmed III and father of the father of the spouse of Neşerek Kadın.,SELECT ?result WHERE { ?v1 <http://dbpedia.org/property/father> ?result . ?v3 <http://dbpedia.org/property/father> ?v1 . <http://dbpedia.org/resource/Neşerek_Kadın> <http://dbpedia.org/ontology/spouse> ?v3 . <http://dbpedia.org/resource/Ahmed_III> <http://dbpedia.org/ontology/child> ?result . },"```sparql
SELECT ?child WHERE {
  wd:Q1234567 wdt:P26 ?spouse . # Neşerek Kadın's spouse
  ?spouse wdt:P22 ?father .    # Father of the spouse
  ?father wdt:P31/wdt:P361* wd:Q1234568 . # Father is a child of Ahmed III (Q1234568)
}
```

Note: Replace `wd:Q1234567` with the actual DBpedia entity ID for Neşerek Kadın and `wd:Q1234568` with the entity ID for Ahmed III. The exact IDs need to be looked up in DBpedia.",4,4,5,3,2,3,3,71,0,0,1,0,0.0,0
573,9,train,"Give me the person decedent at Massachusetts and person decedent at Quincy, Massachusetts.","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/deathPlace> <http://dbpedia.org/resource/Quincy,_Massachusetts> . ?result <http://dbpedia.org/ontology/deathPlace> <http://dbpedia.org/resource/Massachusetts> . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?person WHERE {
  {
    ?person dbo:deathPlace dbr:Massachusetts .
  }
  UNION
  {
    ?person dbo:deathPlace dbr:Quincy,_Massachusetts .
  }
}
```",2,2,3,1,2,3,3,71,0,0,4,0,0.0,0
442,6,train,Give me the resting place of the actor of This Side of Heaven.,SELECT ?result WHERE { ?v0 <http://dbpedia.org/ontology/restingPlace> ?result . <http://dbpedia.org/resource/This_Side_of_Heaven> <http://dbpedia.org/ontology/starring> ?v0 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?actorName ?burialPlace WHERE {
  ?actor a dbo:Actor ;
         foaf:name ""Stephen Baldwin""@en .
  OPTIONAL { ?actor dbo:deathPlace ?burialPlace . }
  FILTER (lang(?actorName) = 'en')
}
```",2,2,3,2,1,2,2,9,0,0,3,0,0.0,0
456,14,train,"Give me the band of the band, that is a musical artist, of Dean Brody.",SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . <http://dbpedia.org/resource/Dean_Brody> <http://dbpedia.org/ontology/associatedMusicalArtist> ?v1 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?band WHERE {
  ?person a dbo:MusicalArtist ;
          foaf:name ""Dean Brody""@en .
  OPTIONAL { ?person dbo:band ?band . }
}
```",2,3,3,2,1,3,3,71,0,0,3,0,0.0,0
417,8,train,"Who is the child, that is a royalty, of Frederick Francis III, Grand Duke of Mecklenburg-Schwerin?","SELECT ?result WHERE { ?result <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Frederick_Francis_III,_Grand_Duke_of_Mecklenburg-Schwerin> . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?child ?title WHERE {
  ?person dbo:spouse ?frederick .
  ?frederick foaf:name ""Frederick Francis III, Grand Duke of Mecklenburg-Schwerin""@en .
  ?frederick dbo:title ?title .

  OPTIONAL { ?person dbo:child ?child . }
  
  FILTER EXISTS {
    ?child dbo:title ?royalTitle .
    FILTER(CONTAINS(LCASE(?royalTitle), ""prince"") || CONTAINS(LCASE(?royalTitle), ""duke"") || CONTAINS(LCASE(?royalTitle), ""grand duke""))
  }

  FILTER NOT EXISTS { ?person foaf:name ""Frederick Francis III, Grand Duke of Mecklenburg-Schwerin""@en }
}
```",1,2,2,1,1,3,3,71,0,0,3,0,0.0,0
216,28,train,Give me the player in Mario Ivanković and team of Ognjen Vukojević and player in the coach of Croatia national under-21 football team.,SELECT ?result WHERE { <http://dbpedia.org/resource/Croatia_national_under-21_football_team> <http://dbpedia.org/ontology/coach> ?v1 . ?result <http://dbpedia.org/ontology/coach> <http://dbpedia.org/resource/Ognjen_Vukojević> . <http://dbpedia.org/resource/Mario_Ivanković> <http://dbpedia.org/ontology/team> ?result . ?v1 <http://dbpedia.org/ontology/team> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?marioTeam ?ognjenTeam ?coachPlayer WHERE {
  # Find the team Mario Ivanković played for
  OPTIONAL { 
    dbr:Mario_Ivanković dbo:team ?marioTeam .
  }

  # Find the team Ognjen Vukojević was associated with
  OPTIONAL { 
    dbr:Ognjen_Vukojević dbo:team ?ognjenTeam .
  }
  
  # Find the current coach of Croatia national under-21 football team and a player they coached
  OPTIONAL {
    ?coach dbo:position ""Coach""@en ;
           dbo:team dbr:Croatia_national_under-21_football_team .
    ?coachPlayer dbo:coachedBy ?coach .
  }
}
```",4,4,5,2,3,3,3,71,1,19,0,0.05,1.0,0.09523809523809523
353,2,train,"Give me the awardee of Medal of the Order ""For Merit to the Fatherland"".",SELECT ?result WHERE { ?result <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/Medal_of_the_Order_%22For_Merit_to_the_Fatherland%22> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?recipient WHERE {
  ?award a dbo:Award .
  ?award rdfs:label ""Medal of the Order 'For Merit to the Fatherland'""@en .
  ?award dbo:recipient ?recipient .
}
```",1,1,2,1,1,2,2,9,0,0,12,0,0.0,0
453,2,train,"Give me the birth place, that is a country, of William Denning.",SELECT ?result WHERE { ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. <http://dbpedia.org/resource/William_Denning> <http://dbpedia.org/ontology/birthPlace> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?country WHERE {
  ?person a dbo:Person ;
          foaf:name ""William Denning""@en .
  ?person dbo:birthPlace ?place .
  ?place rdf:type dbo:Country ;
         rdfs:label ?country .
}
```",1,2,2,1,1,2,2,9,0,1,1,0.0,0.0,0
382,2,train,Give me the player in Lukas Kübler.,SELECT ?result WHERE { <http://dbpedia.org/resource/Lukas_Kübler> <http://dbpedia.org/ontology/team> ?result . },"```sparql
PREFIX dbp: <http://dbpedia.org/property/>
PREFIX dbo: <http://dbpedia.org/ontology/>

SELECT ?team WHERE {
  ?person a dbo:FootballPlayer ;
          foaf:name ""Lukas Kübler""@en .
  OPTIONAL { ?person dbp:team ?team . }
}
```",1,1,2,1,1,3,2,20,0,0,6,0,0.0,0
865,35,train,"Give me the father of the child of Abu Ahmad Abdul Hafiz and native of the residence, that is a country, of Ram Jaipal Singh Yadav.",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/birthPlace> ?v0 . ?v2 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Abu_Ahmad_Abdul_Hafiz> . <http://dbpedia.org/resource/Ram_Jaipal_Singh_Yadav> <http://dbpedia.org/property/residence> ?v0 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. ?v2 <http://dbpedia.org/property/father> ?result . },"```sparql
# Step 1: Find Abu Ahmad Abdul Hafiz's children
SELECT ?child WHERE {
  ?person dbo:name ""Abu Ahmad Abdul Hafiz""@en .
  ?person dbo:child ?child .
}

# Step 2: Identify Ram Jaipal Singh Yadav's country of residence or origin
SELECT ?country WHERE {
  ?person dbo:name ""Ram Jaipal Singh Yadav""@en .
  ?person dbo:nationality ?country .
}

# Combine the information to find Abu Ahmad Abdul Hafiz as the father
SELECT DISTINCT ?father WHERE {
  # Abu Ahmad Abdul Hafiz's child
  ?child dbo:parent ?father .
  
  # Ram Jaipal Singh Yadav's country of residence or origin
  ?person dbo:name ""Ram Jaipal Singh Yadav""@en .
  ?person dbo:nationality ?country .

  # Ensure the father is Abu Ahmad Abdul Hafiz and associated with the same country
  ?father rdfs:label ""Abu Ahmad Abdul Hafiz""@en .
  ?father dbo:nationality ?country .
}
```",4,5,5,2,2,3,3,71,0,0,1,0,0.0,0
456,30,train,"Give me the spouse of Danielle Spencer (Australian actress) and band of the band, that is a musical artist, of Dean Brody and professional in .","SELECT ?result WHERE { <http://dbpedia.org/resource/Danielle_Spencer_(Australian_actress)> <http://dbpedia.org/ontology/spouse> ?result . ?result <http://dbpedia.org/property/occupation> """"@en . <http://dbpedia.org/resource/Dean_Brody> <http://dbpedia.org/ontology/associatedMusicalArtist> ?v1 . ?v1 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. }","```sparql
# Query for Danielle Spencer's spouse
SELECT ?spouse WHERE {
  ?person dbo:name ""Danielle Spencer""@en .
  ?person dbo:nationality dbr:Australia .
  ?person dbo:occupation dbr/Actress .
  ?person dbo:spouse ?spouse .
}

UNION

# Query for Dean Brody's band
SELECT DISTINCT ?band WHERE {
  ?brody dbo:name ""Dean Brody""@en .
  ?brody dbo:member ?band .
  ?band a dbo:MusicalArtist .
}
```",4,5,5,2,3,3,3,71,0,0,1,0,0.0,0
715,37,train,"Give me the commander in the force of the mayor, that is an office holder and a politician and a president, of 1933 Spanish general election and leader of Ministry of the Air (Spain).",SELECT ?result WHERE { <http://dbpedia.org/resource/Ministry_of_the_Air_(Spain)> <http://dbpedia.org/ontology/leader> ?result . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/President>. ?v3 <http://dbpedia.org/ontology/commander> ?v0 . ?v3 <http://dbpedia.org/ontology/commander> ?result . <http://dbpedia.org/resource/1933_Spanish_general_election> <http://dbpedia.org/property/leader> ?v0 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?person ?name WHERE {
  ?person a dbo:Politician ;
          dbo:officeHolderOf dbr:1933_Spanish_general_election ;
          dbo:positionHeld dbr:Ministry_of_the_Air_(Spain) ;
          dbo:role dbp:CommanderInChief .
  
  OPTIONAL { ?person foaf:name ?name . }
  
  FILTER (CONTAINS(LCASE(?name), ""juan negrin""))
}
```",4,7,5,3,2,3,3,71,0,0,1,0,0.0,0
267,3,train,"Give me the player, that is a soccer club, in Rasoul Khatibi.",SELECT ?result WHERE { <http://dbpedia.org/resource/Rasoul_Khatibi> <http://dbpedia.org/ontology/team> ?result . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerClub>. },"```sparql
PREFIX dbp: <http://dbpedia.org/property/>
PREFIX dbo: <http://dbpedia.org/ontology/>

SELECT ?club WHERE {
  ?person a dbo:SoccerPlayer .
  ?person foaf:name ""Rasoul Khatibi""@en .
  ?person dbp:team ?club .
}
```",1,2,2,1,1,3,2,20,0,0,12,0,0.0,0
236,4,train,"Give me the reference, that is an office holder and a politician, to James Madison.","SELECT ?result WHERE { ?result <http://xmlns.com/foaf/0.1/name> ""James Madison""@en . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?reference WHERE {
  ?entity a dbo:OfficeHolder .
  ?entity a dbo:Politician .
  ?entity dbo:wikiPageRedirects ?redirect .
  ?redirect rdfs:label ""James Madison""@en .
}
```",1,3,2,1,1,3,2,20,0,0,2,0,0.0,0
892,2,train,Give me the entity in Province of Reggio Emilia.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/province> <http://dbpedia.org/resource/Province_of_Reggio_Emilia> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?entity WHERE {
  ?entity dbo:location dbr:Province_of_Reggio_Emilia .
}
```",1,1,2,1,1,3,3,71,0,1,40,0.0,0.0,0
976,30,train,Give me the office of Mustafa Şentop and office of Meral Akşener and office of the person born as Mehmet Naci Bostancı.,"SELECT ?result WHERE { <http://dbpedia.org/resource/Meral_Akşener> <http://dbpedia.org/property/office> ?result . <http://dbpedia.org/resource/Mustafa_Şentop> <http://dbpedia.org/property/office> ?result . ?v0 <http://dbpedia.org/property/birthName> ""Mehmet Naci Bostancı""@en . ?v0 <http://dbpedia.org/property/office> ?result . }","```sparql
SELECT ?person ?name ?officeLabel WHERE {
  VALUES (?person ?name) {
    (dbr/Mustafa_Şentop ""Mustafa Şentop"")
    (dbr/Meral_Akşener ""Meral Akşener"")
    (dbr/Cem_Karaca ""Cem Karaca"") # Mehmet Naci Bostancı is known as Cem Karaca
  }
  
  ?person rdfs:label ?name .
  OPTIONAL { ?person dbo:office ?office . }
  OPTIONAL { ?office rdfs:label ?officeLabel . FILTER (lang(?officeLabel) = ""en"") }
}
ORDER BY ?person
```",4,4,5,2,3,3,3,71,0,0,1,0,0.0,0
433,36,train,Give me the professional in the profession of the writer of Slowhand at 70 – Live at the Royal Albert Hall and associated musical artist of Paul Chambers.,SELECT ?result WHERE { ?result <http://dbpedia.org/property/occupation> ?v1 . <http://dbpedia.org/resource/Slowhand_at_70_–_Live_at_the_Royal_Albert_Hall> <http://dbpedia.org/property/writer> ?v0 . <http://dbpedia.org/resource/Paul_Chambers> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v0 <http://dbpedia.org/property/occupation> ?v1 . },"```sparql
# Query to find Eric Clapton as the writer/artist of ""Slowhand at 70 – Live at the Royal Albert Hall""
SELECT ?clapton WHERE {
    ?album dcterms:title ""Slowhand at 70 – Live at the Royal Albert Hall"" .
    ?album dbo:performer ?clapton .
    ?clapton foaf:name ""Eric Clapton""@en .
}

# Query to find Paul Chambers' associated musical artist
SELECT ?chambers WHERE {
    ?person foaf:name ""Paul Chambers""@en .
    ?person dbo:associatedMusicalArtist ?artist .
}

# Assuming the above queries return Eric Clapton and a musician for Paul Chambers, we can conclude:
SELECT DISTINCT ?profession WHERE {
    VALUES (?individual) { (""Eric Clapton""^^xsd:string) (""Miles Davis""^^xsd:string) } # Example associated artist
    ?individual dbo:occupation ?profession .
    FILTER(?profession IN (dbo:Musician, dbo:Singer))
}
```",4,4,5,3,2,3,3,71,0,0,16,0,0.0,0
955,13,train,"Give me the band of the writer of the work, that is a work and an album and a musical work, of Matt Freeman.",SELECT ?result WHERE { ?v0 <http://dbpedia.org/property/writer> <http://dbpedia.org/resource/Matt_Freeman> . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Album>. ?result <http://dbpedia.org/ontology/bandMember> ?v1 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?v0 <http://dbpedia.org/property/writer> ?v1 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalWork>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?band WHERE {
  ?work dbo:composer dbr:Matt_Freeman .
  ?work a dbo:Album ;
        a dbo:MusicalWork .
  ?work dbo:title ""Let It Be"" .
  ?work dbo:artist dbr:Rancid .
  ?band dbo:member dbr:Matt_Freeman .
}
```",3,6,4,3,1,3,2,20,0,0,21,0,0.0,0
281,0,train,Give me the commander in New Guinea campaign.,SELECT ?result WHERE { <http://dbpedia.org/resource/New_Guinea_campaign> <http://dbpedia.org/ontology/commander> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?person ?name WHERE {
  VALUES ?campaign { 
    dbr/New_Guinea_campaign_(1942%E2%80%9345) 
  }
  
  ?commander dbo:commandedBy ?campaign .
  ?commander rdfs:label ?name .
  FILTER (LANG(?name) = 'en')
  
  OPTIONAL {
    ?person dbo:commander ?commander .
    ?person rdfs:label ?namePerson .
    FILTER (LANG(?namePerson) = 'en') 
    BIND(CONCAT(?name, "" and "", ?namePerson) AS ?name)
  }
}
ORDER BY ?name
LIMIT 10
```",1,1,2,1,1,2,3,28,0,0,27,0,0.0,0
83,1,train,Give me the player in Albert Edward (soccer).,SELECT ?result WHERE { <http://dbpedia.org/resource/Albert_Edward_(soccer)> <http://dbpedia.org/ontology/team> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?player WHERE {
  ?person rdfs:label ""Albert Edward""@en.
  ?association dbo:member ?person .
  ?association dbo:teamMember ?player .
  FILTER (lang(?player) = 'en')
}
```",1,1,2,1,1,2,2,9,0,0,8,0,0.0,0
926,22,train,"Give me the child of the father, that is a royalty, of Mustafa III and father of Mahmud II.",SELECT ?result WHERE { ?v0 <http://dbpedia.org/ontology/child> ?result . <http://dbpedia.org/resource/Mustafa_III> <http://dbpedia.org/property/father> ?v0 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. <http://dbpedia.org/resource/Mahmud_II> <http://dbpedia.org/property/father> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?child WHERE {
  # Mustafa III's information
  dbr:Mustafa_III dbo:spouse ?spouse .
  
  # Find children who are royalty (Sultans)
  ?spouse dbo:child ?child .
  ?child a dbo:Sultan .

  # Check if the child is father of Mahmud II
  ?child dbo:father dbr:Mahmud_II .
}
```",3,4,4,2,2,3,3,71,0,0,1,0,0.0,0
122,3,train,"Who is the reference, that is a musical artist and an artist, to Gift of Gab?","SELECT ?result WHERE { ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?result <http://xmlns.com/foaf/0.1/name> ""Gift of Gab""@en . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?person WHERE {
  ?person dbo:associatedMusicalArtist dbr:Gift_of_Gab .
  ?person dbo:occupation dbr:Musical_artist ;
          dbo:occupation dbr:Producer_(music) .
}
```",1,3,2,1,1,2,2,9,0,0,1,0,0.0,0
443,15,train,Give me the landmark at elevation of the award of William Shepherd and birthplace of Carl Larsson.,SELECT ?result WHERE { <http://dbpedia.org/resource/Carl_Larsson> <http://dbpedia.org/ontology/birthPlace> ?result . ?result <http://dbpedia.org/ontology/elevation> ?v1 . <http://dbpedia.org/resource/William_Shepherd> <http://dbpedia.org/property/awards> ?v1 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?landmark WHERE {
  # Find landmarks with an elevation of 1996 meters
  ?landmark a dbo:Mountain ;
            dbo:elevation ""1996""^^xsd:int .
  
  # Ensure the landmark is near Stockholm, Sweden
  OPTIONAL { 
    ?landmark dbo:location dbr:Stockholm .
  }
}
```",3,3,4,2,2,2,3,28,0,2,1,0.0,0.0,0
508,6,train,Give me the birthplace of Ma Hongkui and birthplace of Ma Bufang.,SELECT ?result WHERE { <http://dbpedia.org/resource/Ma_Hongkui> <http://dbpedia.org/ontology/birthPlace> ?result . <http://dbpedia.org/resource/Ma_Bufang> <http://dbpedia.org/ontology/birthPlace> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?person ?name ?birthPlace WHERE {
  VALUES ?person { 
    dbr:Ma_Hongkui 
    dbr:Ma_Bufang 
  }
  
  ?person dbo:name ?name .
  OPTIONAL { ?person dbo:birthPlace ?birthPlace . }
}
```",2,2,3,1,2,3,2,20,0,0,3,0,0.0,0
382,3,train,"Give me the manager, that is a soccer manager and an athlete and a sports manager, of Bonner SC.",SELECT ?result WHERE { ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsManager>. <http://dbpedia.org/resource/Bonner_SC> <http://dbpedia.org/ontology/manager> ?result . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Athlete>. ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerManager>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?manager WHERE {
  ?club rdf:type dbo:SoccerClub ;
        rdfs:label ""Bonner SC""@en .
  
  ?club dbp:manager ?manager .

  ?manager rdf:type dbo:SoccerManager ;
           rdf:type dbo:Athlete ;
           rdf:type dbo:SportsManager .
}
```",1,4,2,1,1,3,2,20,1,0,0,1.0,1.0,1.0
170,15,train,Give me the entity in the work of International Energy Agency and domain of Mayor.,"SELECT ?result WHERE { ?v1 <http://dbpedia.org/property/author> <http://dbpedia.org/resource/International_Energy_Agency> . ?result <http://dbpedia.org/ontology/leaderTitle> ""Mayor""@en . ?result <http://dbpedia.org/ontology/country> ?v1 . }","```sparql
SELECT DISTINCT ?ieaEntity ?city WHERE {
  # Part 1: Find entities associated with the International Energy Agency
  ?ieaEntity dbo:workOf dbr:International_Energy_Agency .
  
  # Part 2: Find cities that have a mayor
  ?city dbo:mayor ?mayor .
}
```",3,3,4,2,2,2,3,28,0,0,99,0,0.0,0
465,10,train,"Give me the successor of Ercole II d'Este, Duke of Ferrara and successor of Renée of France.","SELECT ?result WHERE { <http://dbpedia.org/resource/Ercole_II_d'Este,_Duke_of_Ferrara> <http://dbpedia.org/ontology/successor> ?result . <http://dbpedia.org/resource/Renée_of_France> <http://dbpedia.org/ontology/successor> ?result . }","```sparql
SELECT ?successor WHERE {
  wd:Q123456 wdt:P39 wd:Q789012 . # Ercole II d'Este is the Duke of Ferrara (replace with actual QID)
  wd:Q123456 wdt:P1368 ?successor . # Successor property for a title
}
```

Note: Replace `wd:Q123456` with the DBpedia QID for Ercole II d'Este and `wd:Q789012` with the QID for the Duchy of Ferrara. The exact QIDs can be found in the DBpedia database.",2,2,3,1,2,3,3,71,0,0,1,0,0.0,0
5,3,train,"Give me the person born, that is a politician, as .","SELECT ?result WHERE { ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?result <http://dbpedia.org/property/birthName> """"@en . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?person ?name ?birthDate WHERE {
  ?person a dbo:Person .
  ?person dbo:occupation dbr:Politician ; # or use more specific politician classes if needed
         foaf:name ?name ;
         dbo:birthDate ?birthDate .
}
ORDER BY ?birthDate
```",1,2,2,1,1,3,2,20,4,11119,165,0.0003596152117234559,0.023668639053254437,0.0007084661707403471
935,13,train,"Give me the death place of the awardee of the award, that is an award, of Syed Sohail Hussain Naqvi.",SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/deathPlace> ?result . ?v1 <http://dbpedia.org/property/awards> ?v0 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Award>. <http://dbpedia.org/resource/Syed_Sohail_Hussain_Naqvi> <http://dbpedia.org/property/awards> ?v0 . },"```sparql
SELECT ?deathPlace WHERE {
  ?person dbo:birthName ""Syed Sohail Hussain Naqvi""@en .
  ?person dbo:award ?award .
  ?award dbo:recipient ?person .
  ?person dbo:deathPlace ?deathPlace .
}
```",3,4,4,3,1,3,2,20,0,0,18,0,0.0,0
129,0,train,Give me the professional in .,"SELECT ?result WHERE { ?result <http://dbpedia.org/property/occupation> """"@en . }","```sparql
# No valid SPARQL query can be generated due to lack of specificity in the question.
```",1,1,2,1,1,2,3,28,0,0,39640,0,0.0,0
645,22,train,"Give me the commander in Battle of Jarama and leader of the office, that is a government agency and an organisation, of Camilo Menéndez Tolosa.",SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/leader> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/GovernmentAgency>. <http://dbpedia.org/resource/Camilo_Menéndez_Tolosa> <http://dbpedia.org/property/office> ?v1 . <http://dbpedia.org/resource/Battle_of_Jarama> <http://dbpedia.org/ontology/commander> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?commander ?officeLeader WHERE {
  # Find the commander of the Battle of Jarama
  OPTIONAL {
    ?battle dbo:commander ?commander .
    FILTER(STRSTARTS(STR(?battle), ""http://dbpedia.org/resource/Battle_of_Jarama""))
  }

  # Find an office that is both a government agency and organization led by Camilo Menéndez Tolosa
  OPTIONAL {
    ?office dbo:leader ?officeLeader ;
            rdf:type dbo:GovernmentAgency, dbo:Organization .
    ?office dbo:member dbr:Camilo_Menéndez_Tolosa .
  }
}
```",3,5,4,2,2,3,3,71,1,9,0,0.1,1.0,0.18181818181818182
573,35,train,"Give me the person decedent at the administration, that is a region, of Charlie Baker and parent of the author, that is a politician and an office holder, of Exchequer Standards.","SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Region>. ?v1 <http://dbpedia.org/ontology/parent> ?result . <http://dbpedia.org/resource/Exchequer_Standards> <http://dbpedia.org/property/author> ?v1 . ?v2 <http://dbpedia.org/property/governor> ""Charlie Baker""@en . ?result <http://dbpedia.org/ontology/deathPlace> ?v2 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. }","```sparql
# Step 1: Find Charlie Baker's administration (state)
SELECT ?administration WHERE {
  wd:Q123456 wdt:P39 ?administration .
}

# Step 2: Identify the decedent at that administration
SELECT ?decedent WHERE {
  ?administration wdt:P1368 ?decedent .
}

# Step 3: Find the author of ""Exchequer Standards"" who is a politician and office holder
SELECT ?author WHERE {
  ?work dcterms:title ""Exchequer Standards""@en .
  ?work dbo:author ?author .
  ?author wdt:P39 ?office .
}

# Step 4: Retrieve the parent of this author
SELECT ?parent WHERE {
  ?author wdt:P22 ?parent .
}
```

Note: Replace `wd:Q123456` with Charlie Baker's actual DBpedia QID. The exact properties and classes might need adjustment based on available data in DBpedia.",4,7,5,2,2,3,3,71,0,0,2,0,0.0,0
826,27,train,"Give me the predecessor of the parent of the child of Louis IV, Grand Duke of Hesse.","SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/parent> <http://dbpedia.org/resource/Louis_IV,_Grand_Duke_of_Hesse> . ?v1 <http://dbpedia.org/ontology/parent> ?v2 . ?result <http://dbpedia.org/ontology/successor> ?v2 . }","```sparql
SELECT DISTINCT ?predecessor WHERE {
  # Step 1: Identify Louis IV, Grand Duke of Hesse
  ?louisIV dbo:spouse ?spouse .
  FILTER (str(?louisIV) = ""Louis_IV,_Grand_Duke_of_Hesse"")

  # Step 2: Find his children
  ?child dbo:parent ?louisIV .

  # Step 3: Determine the parent of this child
  OPTIONAL { ?child dbo:mother ?mother . }
  OPTIONAL { ?child dbo:father ?father . }

  BIND(COALESCE(?mother, ?father) AS ?parent)

  # Step 4: Identify the predecessor of this parent
  OPTIONAL {
    ?parent dbo:predecessor ?predecessor .
  }
}
```",3,3,4,3,1,3,3,71,0,0,1,0,0.0,0
445,31,train,"Give me the entity in the residence, that is a country, of the resident, that is an athlete, of Great Britain and death place of Patrick Moore.",SELECT ?result WHERE { <http://dbpedia.org/resource/Patrick_Moore> <http://dbpedia.org/ontology/deathPlace> ?result . ?v1 <http://dbpedia.org/property/residence> <http://dbpedia.org/resource/Great_Britain> . ?v1 <http://dbpedia.org/property/residence> ?v0 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. ?result <http://dbpedia.org/ontology/location> ?v0 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Athlete>. },"```sparql
SELECT DISTINCT ?athleteResidenceCountry WHERE {
  # Find an athlete from Great Britain and their country of residence
  ?athlete dbo:nationality dbr:United_Kingdom ;
           rdf:type dbo:Athlete .
  OPTIONAL { 
    ?athlete dbo:residenceLocation ?residence .
    ?residence rdfs:label ?residenceLabel .
    FILTER (lang(?residenceLabel) = ""en"")
  }
  
  # Find Patrick Moore's death place
  dbr:Patrick_Moore dbo:deathPlace ?deathPlace .
  ?deathPlace rdfs:label ?deathPlaceLabel .
  FILTER (lang(?deathPlaceLabel) = ""en"")

  # Match the residence country with the death place
  BIND(STRAFTER(STR(?residenceLabel), "", "") AS ?athleteResidenceCountry)
  FILTER (?deathPlaceLabel = ?athleteResidenceCountry)
}
```",4,6,5,3,2,3,3,71,0,0,1,0,0.0,0
41,12,train,Give me the party of Enda Kenny and party of Declan Costello and party of Mark Durkan.,SELECT ?result WHERE { <http://dbpedia.org/resource/Enda_Kenny> <http://dbpedia.org/ontology/party> ?result . <http://dbpedia.org/resource/Mark_Durkan> <http://dbpedia.org/ontology/party> ?result . <http://dbpedia.org/resource/Declan_Costello> <http://dbpedia.org/ontology/party> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?person ?partyLabel WHERE {
  VALUES ?person { 
    dbr:Enda_Kenny 
    dbr:Declan_Costello_(politician) 
    dbr:Mark_Durkan
  }
  
  ?person dbo:memberOfParty ?party .
  SERVICE <http://dbpedia.org/sparql> {
    ?party rdfs:label ?partyLabel .
    FILTER (lang(?partyLabel) = 'en')
  }
}
```",3,3,4,1,3,2,3,28,0,0,1,0,0.0,0
554,8,train,Give me the leader of the birth place of The Legendary Tigerman.,SELECT ?result WHERE { <http://dbpedia.org/resource/The_Legendary_Tigerman> <http://dbpedia.org/ontology/birthPlace> ?v0 . ?v0 <http://dbpedia.org/property/leader> ?result . },"```sparql
# Step 1: Find the birthplace of The Legendary Tigerman
SELECT ?birthPlace WHERE {
  ?tigerman dbo:birthPlace ?birthPlace .
  ?tigerman rdfs:label ""The Legendary Tigerman""@en .
  FILTER (LANG(?tigerman) = 'en')
}

# Step 2: Find the leader of the birthplace
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?leader WHERE {
  # Replace `?birthPlace` with the actual URI obtained from step 1
  ?birthPlace dbo:mayor ?leader .
  OPTIONAL { ?birthPlace dbp:governor ?leader . }
}
```

Note: The second query requires replacing `?birthPlace` with the actual URI of the birthplace obtained from the first query. This process might need to be done manually or programmatically if automating.",2,2,3,2,1,3,2,20,0,0,3,0,0.0,0
527,10,train,"Give me the work, that is a work and a book, of the host of Hyperland.",SELECT ?result WHERE { <http://dbpedia.org/resource/Hyperland> <http://dbpedia.org/ontology/presenter> ?v0 . ?result <http://dbpedia.org/property/author> ?v0 . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Book>. },"```sparql
SELECT ?work WHERE {
  ?person foaf:name ""Tim Brooke-Taylor""@en .
  ?person dbo:profession dbr:Comedian .
  ?person dbo:memberOf dbr:The_Goodies .
  ?work dbo:author ?person ;
        a dbo:Book ;
        rdfs:label ?title .
  FILTER(CONTAINS(LCASE(?title), ""the goodies""))
}
```",2,4,3,2,1,3,2,20,0,0,9,0,0.0,0
874,5,train,Give me the band member of The Jones Gang.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/associatedMusicalArtist> <http://dbpedia.org/resource/The_Jones_Gang> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?member WHERE {
  ?band rdfs:label ""The Jones Gang""@en .
  ?band dbo:bandMember ?member .
}
```",1,1,2,1,1,3,2,20,2,2,2,0.5,0.5,0.5
987,35,train,"Give me the birth place of the band, that is an artist and a musical artist, of Šako Polumenta and entity in the region, that is a country, of Central European Time.",SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/birthPlace> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. ?result <http://dbpedia.org/ontology/country> ?v0 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. <http://dbpedia.org/resource/Šako_Polumenta> <http://dbpedia.org/ontology/associatedMusicalArtist> ?v1 . ?v0 <http://dbpedia.org/property/timeZone> <http://dbpedia.org/resource/Central_European_Time> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?bandName ?birthPlace WHERE {
  ?person a dbo:Artist ;
          foaf:name ""Šako Polumenta"" .
  
  ?person dbo:memberOf ?band .
  ?band a dbo:Band ;
        rdfs:label ?bandName .

  OPTIONAL { ?band dbo:birthPlace ?birthPlace . }
  
  ?country dbo:timeZone dbp:CET ;
           dbo:location ?band .
}
```",4,7,5,2,2,3,3,71,0,0,2,0,0.0,0
443,5,train,Who is the work of yes?,"SELECT ?result WHERE { ?result <http://dbpedia.org/property/author> ""yes""@en . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?album WHERE {
  ?album dbo:artist dbr:Yes .
  ?album a dbo:Album .
}
```",1,1,2,1,1,2,3,28,0,0,1563,0,0.0,0
554,0,train,Give me the leader of Portuguese São Tomé and Príncipe.,SELECT ?result WHERE { <http://dbpedia.org/resource/Portuguese_São_Tomé_and_Príncipe> <http://dbpedia.org/property/leader> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?leader ?startYear ?endYear
WHERE {
    ?country a dbo:Country .
    ?country rdfs:label ""Portugal""@en .

    ?leader dbo:officeHolderOf ?position .
    ?position dbo:positionTitle ""Prime Minister of Portugal"" .
    
    OPTIONAL { ?leader dbo:startDate ?startYear . }
    OPTIONAL { ?leader dbo:endDate ?endYear . }

    FILTER (?startYear <= 1975 && (BOUND(?endYear) -> ?endYear >= 1974))
}
ORDER BY DESC(?startYear)
LIMIT 1
```",1,1,2,1,1,3,2,20,0,0,2,0,0.0,0
773,33,train,"Give me the spouse of Louis the German and parent of the successor of the child, that is a royalty, of Louis the Pious.",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/child> ?v3 . ?v0 <http://dbpedia.org/ontology/successor> ?v3 . <http://dbpedia.org/resource/Louis_the_German> <http://dbpedia.org/ontology/spouse> ?result . <http://dbpedia.org/resource/Louis_the_Pious> <http://dbpedia.org/ontology/child> ?v0 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. },"```sparql
# Step 1: Find spouse of Louis the German
SELECT ?spouse WHERE {
  wd:Q1198 wdt:P26 ?spouse .
}

# Step 2: Identify a child of Louis the Pious who is royalty
SELECT ?child WHERE {
  wd:Q1184 wdt:P40 ?child .
  FILTER EXISTS { ?child wdt:P31/wdt:P279* wd:Q11624 } # Instance of Royalty
}

# Step 3: Determine successor of this child (e.g., Charles the Bald)
SELECT ?successor WHERE {
  ?child wdt:P136 ?successor . # Has successor
  FILTER EXISTS { ?successor wdt:P31/wdt:P279* wd:Q11624 } # Instance of Royalty
}

# Step 4: Identify parent of this successor (e.g., Charles the Bald)
SELECT ?parent WHERE {
  ?successor wdt:P22 ?parent .
}

# Step 5: Check if spouse of Louis the German is the same as identified parent
SELECT DISTINCT ?spouse WHERE {
  wd:Q1198 wdt:P26 ?spouse .
  ?child wdt:P40 wd:Q1184 .
  ?child wdt:P136 ?successor .
  ?successor wdt:P22 ?parent .
  FILTER (?spouse = ?parent)
}
```",4,5,5,3,2,3,3,71,0,0,1,0,0.0,0
192,12,train,Give me the child of the child of Stephen V of Hungary and spouse of Clemence of Austria.,SELECT ?result WHERE { <http://dbpedia.org/resource/Clemence_of_Austria> <http://dbpedia.org/ontology/spouse> ?result . ?v0 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Stephen_V_of_Hungary> . ?result <http://dbpedia.org/ontology/parent> ?v0 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?grandchild ?spouse WHERE {
  # Stephen V of Hungary
  VALUES ?stephenV { dbr:Stephen_V_of_Hungary }

  # Find children of Stephen V
  ?child dbo:parent ?stephenV .
  
  # Find grandchildren (children of the children)
  ?grandchild dbo:parent ?child .

  # Check if any grandchild is married to Clemence of Austria
  ?marriage dbo:spouse1 ?grandchild ;
            dbo:spouse2 dbr:Clemence_of_Austria .
  
  OPTIONAL { ?marriage dbo:spouse1 ?grandchild . BIND(dbo:spouse2 AS ?spouse) }
  OPTIONAL { ?marriage dbo:spouse2 ?grandchild . BIND(dbo:spouse1 AS ?spouse) }

}
```",3,3,4,2,2,3,2,20,0,0,1,0,0.0,0
507,30,train,Give me the spouse of Anne V. Coates and director of Entertaining Mr Sloane (film) and professional in the profession of Guy Ferland.,SELECT ?result WHERE { ?result <http://dbpedia.org/property/occupation> ?v1 . <http://dbpedia.org/resource/Guy_Ferland> <http://dbpedia.org/property/occupation> ?v1 . <http://dbpedia.org/resource/Entertaining_Mr_Sloane_(film)> <http://dbpedia.org/ontology/director> ?result . ?result <http://dbpedia.org/ontology/spouse> <http://dbpedia.org/resource/Anne_V._Coates> . },"```sparql
SELECT DISTINCT ?person WHERE {
  # Query for the spouse of Anne V. Coates
  { 
    dbpedia:Anne_V._Coates dbo:spouse ?person .
  }
  
  UNION
  
  # Query for the director of ""Entertaining Mr Sloane""
  { 
    dbpedia:Entertaining_Mr_Sloane dbo:director ?person .
  }

  UNION

  # Query for a professional in the same profession as Guy Ferland (Film Editor)
  {
    dbpedia:Guy_Ferland dbo:profession dbpedia:Film_Editor ;
                       dbo:wikiPageRedirects ?redirectedPerson .
    OPTIONAL { ?redirectedPerson rdfs:label ?personLabel . FILTER(LANG(?personLabel) = ""en"") }
    BIND(IF(BOUND(?personLabel), ?redirectedPerson, dbpedia:Guy_Ferland) AS ?person)
  }
}
```",4,4,5,2,3,3,3,71,0,0,1,0,0.0,0
826,14,train,Give me the predecessor of the parent of Prince Friedrich of Hesse and by Rhine.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/successor> ?v1 . <http://dbpedia.org/resource/Prince_Friedrich_of_Hesse_and_by_Rhine> <http://dbpedia.org/ontology/parent> ?v1 . },"```sparql
SELECT ?grandparentLabel WHERE {
  # Find Prince Friedrich of Hesse and by Rhine
  ?friedrich dbo:child ?parent .
  ?friedrich rdfs:label ""Prince Friedrich of Hesse and by Rhine""@en .

  # Find the parent of Prince Friedrich
  ?parent a dbo:Person ;
          dbo:spouse ?spouse .

  # Find the grandparent (predecessor of the parent)
  ?parent dbo:child ?grandparent .
  
  # Return the label of the grandparent
  ?grandparent rdfs:label ?grandparentLabel .
}
```",2,2,3,2,1,3,3,71,0,0,1,0,0.0,0
582,34,train,"Give me the reference to the residence of the reference, that is a scientist, to Hirotaka Sugawara and figure known as --10-19.","SELECT ?result WHERE { ?v2 <http://dbpedia.org/property/residence> ?v1 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Scientist>. ?result <http://dbpedia.org/property/nickname> ""--10-19""^^<http://www.w3.org/2001/XMLSchema#gMonthDay> . ?v2 <http://xmlns.com/foaf/0.1/name> ""Hirotaka Sugawara""@en . ?result <http://xmlns.com/foaf/0.1/name> ?v1 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?scientist ?residence WHERE {
  # Assuming Hirotaka Sugawara is a known entity in DBpedia
  VALUES ?hirotaka { dbr:Hirotaka_Sugawara }

  # Find any scientist associated with Hirotaka Sugawara
  ?hirotaka dbo:colleague|dbo:collaborator ?scientist .
  
  # Assuming --10-19 refers to a specific event or person, we need more context
  # For now, let's assume it might be related to a date or identifier in DBpedia
  OPTIONAL {
    ?event dbr:Event_2010-11-19 ?relatedEntity .
    ?scientist dbo:mentionedIn|dbo:authorOf ?relatedEntity .
  }

  # Get the residence of the identified scientist
  ?scientist dbo:residenceLocation ?residence .
}
```",4,5,5,3,2,3,3,71,0,0,1,0,0.0,0
573,23,train,"Give me the person decedent at the administration, that is a region, of the real name of Charlie Baker (Australian footballer).",SELECT ?result WHERE { ?v0 <http://dbpedia.org/property/governor> ?v2 . <http://dbpedia.org/resource/Charlie_Baker_(Australian_footballer)> <http://xmlns.com/foaf/0.1/name> ?v2 . ?result <http://dbpedia.org/ontology/deathPlace> ?v0 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Region>. },"```sparql
# Step 1: Find Charlie Baker (Australian footballer) and his real name
SELECT ?charlieBaker ?realName WHERE {
  ?charlieBaker dbo:occupation dbr:Australian_footballer .
  ?charlieBaker foaf:name ""Charlie Baker"" .
  ?charlieBaker foaf:name ?realName .
}

# Step 2: Find the administrative region associated with his real name
SELECT DISTINCT ?region WHERE {
  # Assuming we have identified Charlie Baker's resource as ?charlieBaker from step 1
  VALUES (?charlieBaker) { <http://dbpedia.org/resource/Charlie_Baker_(Australian_footballer)> }
  
  ?charlieBaker dbo:birthPlace ?place .
  ?place dbo:administrativeRegion ?region .
}

# Step 3: Find a notable person decedent in that region
SELECT DISTINCT ?decedent WHERE {
  # Assuming we have identified the region as ?region from step 2
  VALUES (?region) { <http://dbpedia.org/resource/Some_Administrative_Region> } # Replace with actual region URI
  
  ?person dbo:deathPlace ?place .
  ?place dbo:administrativeRegion ?region .
  ?person foaf:name ?decedent .
}
```

Note: The above SPARQL queries are structured to be executed in sequence. You will need to replace `<http://dbpedia.org/resource/Some_Administrative_Region>` with the actual URI of the administrative region identified in step 2.",3,4,4,3,1,3,3,71,0,0,968,0,0.0,0
582,6,train,"Give me the father, that is an athlete and a soccer manager and a sports manager, of Masami Nagasawa.",SELECT ?result WHERE { ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerManager>. <http://dbpedia.org/resource/Masami_Nagasawa> <http://dbpedia.org/property/father> ?result . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Athlete>. ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsManager>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?father WHERE {
  ?person dbp:name ""Masami Nagasawa""@en .
  ?person dbo:father ?father .

  FILTER EXISTS { ?father dbo:occupation dbo:Athlete . }
  FILTER EXISTS { ?father dbo:occupation dbo:SoccerManager . }
  FILTER EXISTS { ?father dbo:occupation dbo:SportsManager . }
}
```",1,4,2,1,1,3,3,71,0,0,1,0,0.0,0
166,6,train,Give me the resting place of Gonzalo Queipo de Llano and entity in Spain.,SELECT ?result WHERE { <http://dbpedia.org/resource/Gonzalo_Queipo_de_Llano> <http://dbpedia.org/ontology/restingPlace> ?result . ?result <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Spain> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?burialPlace ?location WHERE {
  VALUES ?person { dbr:Gonzalo_Queipo_de_Llano }
  ?person dbo:deathPlace ?burialPlace .
  OPTIONAL { ?burialPlace dbo:location ?location . FILTER (CONTAINS(LCASE(?location), ""spain"")) }
}
```",2,2,3,1,2,3,2,20,0,0,1,0,0.0,0
926,29,train,Give me the child of Ahmed III and successor of the child of Ahmed III and father of Mahmud II.,SELECT ?result WHERE { ?v3 <http://dbpedia.org/ontology/successor> ?result . ?v3 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Ahmed_III> . <http://dbpedia.org/resource/Mahmud_II> <http://dbpedia.org/property/father> ?result . <http://dbpedia.org/resource/Ahmed_III> <http://dbpedia.org/ontology/child> ?result . },"```sparql
SELECT ?successor WHERE {
  wd:Q1234 wdt:P31 wd:Q11696; # Ahmed III is an instance of Sultan
           wdt:P40 ?child1.       # Child of Ahmed III (Mahmud I)
  
  ?child1 wdt:P1368 ?successor1. # Successor of Mahmud I (Osman III)

  wd:Q1234 wdt:P31 wd:Q11696;    # Reiterating Ahmed III is a Sultan
           wdt:P40 ?child2.       # Child of Ahmed III (Mahmud I)
  
  ?successor1 wdt:P1368 ?successor2. # Successor of Osman III

  ?successor2 wdt:P22 wd:Q12345;    # Abdul Hamid I is the father of Mahmud II
           wdt:P31 wd:Q11696.        # Abdul Hamid I is a Sultan
}
```",4,4,5,2,3,3,3,71,0,0,1,0,0.0,0
192,0,train,Give me the spouse of Clemence of Austria.,SELECT ?result WHERE { <http://dbpedia.org/resource/Clemence_of_Austria> <http://dbpedia.org/ontology/spouse> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>

SELECT ?spouse WHERE {
  ?clemence a dbo:Person ;
           foaf:name ""Clemence of Austria""@en .
  ?clemence dbo:spouse ?spouse .
}
```",1,1,2,1,1,3,2,20,0,0,1,0,0.0,0
874,8,train,Give me the band of the band member of The Jones Gang.,SELECT ?result WHERE { ?v0 <http://dbpedia.org/ontology/associatedMusicalArtist> <http://dbpedia.org/resource/The_Jones_Gang> . ?result <http://dbpedia.org/ontology/bandMember> ?v0 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?bandMember ?otherBand WHERE {
  ?member dbo:memberOf dbr:The_Jones_Gang .
  ?member dbo:memberOf ?otherBand .
  FILTER(?otherBand != dbr:The_Jones_Gang)
}
```",2,2,3,2,1,3,2,20,0,0,4,0,0.0,0
433,14,train,Give me the professional in the profession of Bob Marley.,SELECT ?result WHERE { <http://dbpedia.org/resource/Bob_Marley> <http://dbpedia.org/property/occupation> ?v1 . ?result <http://dbpedia.org/property/occupation> ?v1 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?person ?name WHERE {
  ?marley a dbo:MusicArtist ;
          foaf:name ""Bob Marley""@en .
  
  ?marley dbo:profession ?profession .

  ?person a ?profession ;
          foaf:name ?name .
  
  FILTER(?person != ?marley)
}
```",2,2,3,2,1,3,3,71,0,0,45013,0,0.0,0
839,13,train,Give me the band of the member of Böhse Onkelz.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/bandMember> ?v1 . <http://dbpedia.org/resource/Böhse_Onkelz> <http://dbpedia.org/ontology/bandMember> ?v1 . },"```sparql
SELECT DISTINCT ?member ?otherBand WHERE {
  # Find the resource for Böhse Onkelz
  ?bo dbp:name ""Böhse Onkelz""@en .
  
  # Identify members of Böhse Onkelz
  ?bo dbo:bandMember ?member .

  # Check if these members are part of any other bands
  ?member dbo:band ?otherBand .
  
  FILTER(?otherBand != ?bo) # Exclude the original band to find other bands
}
```",2,2,3,2,1,3,3,71,0,0,1,0,0.0,0
917,12,train,Give me the child of Kekūanāoʻa and child of Kekūanāoʻa.,"SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/parent> <http://dbpedia.org/resource/Kekūanāoʻa> . ?result <http://dbpedia.org/property/father> ""Kekūanāoʻa""@en . }","```sparql
# Query to retrieve the children of Kekūanāoʻa
SELECT ?child WHERE {
  wd:Q123456 wdt:P40 ?child .
}

# Assuming we get a result like ?child = wd:Q789012, use this in the next query

# Query to retrieve the child of one of Kekūanāoʻa's children (replace Q789012 with actual results)
SELECT ?grandchild WHERE {
  wd:Q789012 wdt:P40 ?grandchild .
}
```

Note: Replace `wd:Q123456` with the correct DBpedia entity ID for Kekūanāoʻa and `wd:Q789012` with the IDs of his children obtained from the first query.",2,2,3,1,2,3,3,71,0,0,3,0,0.0,0
433,13,train,"Give me the associated musical artist of the associated musical artist, that is an artist and a musical artist, of Scott LaFaro.",SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . <http://dbpedia.org/resource/Scott_LaFaro> <http://dbpedia.org/ontology/associatedMusicalArtist> ?v1 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. },"```sparql
SELECT DISTINCT ?finalArtist WHERE {
  # Step 1: Find Scott LaFaro's associated musical artist
  ?laFaro dbo:associatedMusicalArtist ?firstAssociatedArtist .
  
  FILTER(?laFaro = dbpedia:Scott_LaFaro) .

  # Ensure the first associated artist is a musician
  ?firstAssociatedArtist rdf:type dbo:Musician .

  # Step 2: Find the associated musical artist of the first associated artist
  ?firstAssociatedArtist dbo:associatedMusicalArtist ?finalArtist .
  
  # Ensure the final artist is also a musician
  ?finalArtist rdf:type dbo:Musician .
}
```",2,4,3,2,1,3,3,71,0,0,13,0,0.0,0
326,4,train,Who is the awardee of French Legion of Honor?,"SELECT ?result WHERE { ?result <http://dbpedia.org/property/awards> ""French Legion of Honor""@en . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?person ?personLabel WHERE {
  ?award a dbo:Award .
  ?award rdfs:label ""Legion of Honor""@en .
  ?award dbo:recipient ?person .
  SERVICE wikibase:label { bd:serviceParam wikibase:language ""[AUTO_LANGUAGE],en"". }
}
LIMIT 10
```",1,1,2,1,1,3,2,20,0,0,13,0,0.0,0
18,14,train,Give me the parent of the professional in Actress and professional in .,"SELECT ?result WHERE { ?v2 <http://dbpedia.org/property/occupation> ""Actress""@en . ?result <http://dbpedia.org/property/occupation> """"@en . ?result <http://dbpedia.org/ontology/child> ?v2 . }","```sparql
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>
SELECT ?parentClass WHERE {
  ?actressClass rdfs:label ""Actress""@en.
  ?actressClass rdfs:subClassOf+ ?parentClass.
}
```",3,3,4,2,2,2,3,28,0,0,200,0,0.0,0
839,28,train,"Give me the band of the person born, that is a musical artist, as Kevin Richard Russell and band of Peter Schorowsky and band of Matthias Röhr.","SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?result <http://dbpedia.org/ontology/bandMember> <http://dbpedia.org/resource/Peter_Schorowsky> . ?v1 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?result <http://dbpedia.org/ontology/bandMember> <http://dbpedia.org/resource/Matthias_Röhr> . ?v1 <http://dbpedia.org/property/birthName> ""Kevin Richard Russell""@en . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?person ?bandName WHERE {
  VALUES (?name) { (""Kevin Richard Russell"" ""Peter Schorowsky"" ""Matthias Röhr"") }
  
  # Find the DBpedia resource for each person
  ?person dbo:name ?name .
  
  OPTIONAL {
    ?person dbo:associatedBand ?band .
    ?band dbo:name ?bandName .
  }

  FILTER (EXISTS { ?person a dbo:MusicalArtist } || EXISTS { ?person dbo:associatedBand ?band })
}
```",4,5,5,2,3,3,3,71,0,0,1,0,0.0,0
232,4,train,"Give me the artistic movement of Ella Cheever Thayer and claim to fame of Katherine ""Kitty"" Marshall.",SELECT ?result WHERE { <http://dbpedia.org/resource/Katherine_%22Kitty%22_Marshall> <http://dbpedia.org/ontology/knownFor> ?result . <http://dbpedia.org/resource/Ella_Cheever_Thayer> <http://dbpedia.org/ontology/movement> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?movement ?claimToFame WHERE {
  # Query for Ella Cheever Thayer's artistic movement
  OPTIONAL {
    dbr:Ella_Cheever_Thayer dbo:movement ?movement .
  }
  
  # Query for Katherine ""Kitty"" Marshall's claim to fame
  OPTIONAL {
    dbr:Katherine_Marshall_(actress) dbo:notableWork ?claimToFame .
  }
}
```",2,2,3,1,2,2,2,9,0,0,1,0,0.0,0
329,8,train,Give me the birthplace of the author of The Tailor and Ansty.,SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/birthPlace> ?result . <http://dbpedia.org/resource/The_Tailor_and_Ansty> <http://dbpedia.org/property/author> ?v1 . },"```sparql
SELECT ?birthPlace WHERE {
  ?author foaf:name ""George MacDonald""@en .
  ?author dbo:birthPlace ?birthPlace .
}
```",2,2,3,2,1,2,3,28,0,2,2,0.0,0.0,0
192,8,train,Give me the child of the child of Stephen V of Hungary.,SELECT ?result WHERE { ?v0 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Stephen_V_of_Hungary> . ?result <http://dbpedia.org/ontology/parent> ?v0 . },"```sparql
SELECT DISTINCT ?grandchild WHERE {
  # Find Stephen V of Hungary
  ?stephenV dbr:Stephen_V_of_Hungary .
  
  # Find his children
  ?stephenV dbo:spouse ?spouse .
  ?spouse dbo:child ?child .

  # For each child, find their children (grandchildren of Stephen V)
  ?child dbo:child ?grandchild .
}
```",2,2,3,2,1,3,2,20,0,0,7,0,0.0,0
373,0,train,Give me the writer of 2300 Jackson Street (song).,SELECT ?result WHERE { <http://dbpedia.org/resource/2300_Jackson_Street_(song)> <http://dbpedia.org/property/writer> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?composer WHERE {
  VALUES ?song { dbr:2300_Jackson_Street_(song) }
  ?song dbo:composer ?composer .
}
```",1,1,2,1,1,2,2,9,0,0,6,0,0.0,0
976,3,train,"Give me the administration, that is an organisation, of Kemal Kılıçdaroğlu.",SELECT ?result WHERE { ?result <http://dbpedia.org/property/leader> <http://dbpedia.org/resource/Kemal_Kılıçdaroğlu> . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. },"```sparql
SELECT ?administration WHERE {
  wd:Q123456 wdt:P39 ?administration .
  FILTER (langMatches(lang(?administration), ""en""))
}
```

Note: Replace `wd:Q123456` with the actual DBpedia resource identifier for Kemal Kılıçdaroğlu. You can find this by searching for his name in DBpedia or using a SPARQL endpoint to query for entities named ""Kemal Kılıçdaroğlu"".",1,2,2,1,1,3,3,71,0,0,3,0,0.0,0
465,30,train,"Give me the successor of Ercole II d'Este, Duke of Ferrara and successor of the child, that is a royalty, of Anne of Brittany and spouse of Archduchess Barbara of Austria.","SELECT ?result WHERE { <http://dbpedia.org/resource/Anne_of_Brittany> <http://dbpedia.org/ontology/child> ?v1 . ?v1 <http://dbpedia.org/ontology/successor> ?result . <http://dbpedia.org/resource/Ercole_II_d'Este,_Duke_of_Ferrara> <http://dbpedia.org/ontology/successor> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?result <http://dbpedia.org/ontology/spouse> <http://dbpedia.org/resource/Archduchess_Barbara_of_Austria> . }","```sparql
# Query to find the successor of Ercole II d'Este
SELECT ?successor WHERE {
  ?este dbo:spouse ?ercole2 .
  ?ercole2 foaf:name ""Ercole II d'Este""@en .
  ?este dbo:positionHeld ?position .
  ?position dbo:title ""Duke of Ferrara""@en ;
            dbo:successor ?successor .
}

# Query to find Anne of Brittany's child who is royalty and married Archduchess Barbara of Austria
SELECT ?child WHERE {
  ?anne foaf:name ""Anne of Brittany""@en .
  ?anne dbo:child ?child .
  ?child rdf:type dbo:Monarch ;
         dbo:spouse ?barbara .
  ?barbara foaf:name ""Barbara of Austria""@en .
}

# Query to find the successor of the identified child
SELECT ?successor WHERE {
  ?child dbo:spouse ?barbara .
  ?barbara foaf:name ""Barbara of Austria""@en .
  ?child dbo:positionHeld ?position .
  ?position dbo:title ?title ;
            dbo:successor ?successor .
}
```",4,5,5,2,3,3,3,71,0,0,1,0,0.0,0
865,32,train,"Give me the native of the residence, that is a country, of Ram Jaipal Singh Yadav and father of the child, that is a politician, of Abu Ahmad Abdul Hafiz.",SELECT ?result WHERE { ?v3 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Abu_Ahmad_Abdul_Hafiz> . ?v3 <http://dbpedia.org/property/father> ?result . ?result <http://dbpedia.org/ontology/birthPlace> ?v0 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. <http://dbpedia.org/resource/Ram_Jaipal_Singh_Yadav> <http://dbpedia.org/property/residence> ?v0 . },"```sparql
# Query to find Ram Jaipal Singh Yadav's residence country and its native language
SELECT ?country ?nativeLanguage WHERE {
  ?person dbo:birthName ""Ram Jaipal Singh Yadav""@en .
  ?person dbo:residence ?location .
  ?location rdf:type dbo:Country .
  ?location rdfs:label ?country .
  ?location dbo:officialLanguage ?language .
  ?language rdfs:label ?nativeLanguage .
  FILTER (lang(?country) = 'en' && lang(?nativeLanguage) = 'en')
}

# Query to find the politician child of Abu Ahmad Abdul Hafiz
SELECT ?politician WHERE {
  ?person dbo:birthName ""Abu Ahmad Abdul Hafiz""@en .
  ?person dbo:child ?child .
  ?child rdf:type dbo:Politician .
  ?child rdfs:label ?politician .
  FILTER (lang(?politician) = 'en')
}
```",4,6,5,2,2,3,3,71,0,0,1,0,0.0,0
456,35,train,"Give me the spouse of the actor of Pacific Drive and band of the band, that is a musical artist, of Dean Brody.",SELECT ?result WHERE { <http://dbpedia.org/resource/Pacific_Drive> <http://dbpedia.org/property/starring> ?v2 . ?v2 <http://dbpedia.org/ontology/spouse> ?result . ?v1 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. <http://dbpedia.org/resource/Dean_Brody> <http://dbpedia.org/ontology/associatedMusicalArtist> ?v1 . },"```sparql
# Step 1: Find the actor of ""Pacific Drive""
SELECT ?actor WHERE {
  ?film dcterms:title ""Pacific Drive""@en .
  ?film dbo:starring ?actor .
}

# Step 2: Find the spouse of this actor (assuming we found an actor with a URI `?actor`)
SELECT ?spouse WHERE {
  ?actor foaf:spouse ?spouse .
}

# Step 3: Identify Dean Brody's band
SELECT ?band WHERE {
  dbpedia:Dean_Brody dbo:musicalBand ?band .
}

# Step 4: Find a musical artist from this band (assuming we found a band with URI `?band`)
SELECT DISTINCT ?member WHERE {
  ?band dbo:member ?member .
  ?member rdf:type dbo:MusicalArtist .
}
```",4,5,5,2,2,3,3,71,0,0,1,0,0.0,0
445,33,train,Give me the death place of the awardee of the establishment of 1820-03-10 and entity in England.,"SELECT ?result WHERE { ?v3 <http://dbpedia.org/property/awards> ?v0 . ?v0 <http://dbpedia.org/ontology/foundingDate> ""1820-03-10""^^<http://www.w3.org/2001/XMLSchema#date> . ?result <http://dbpedia.org/ontology/location> <http://dbpedia.org/resource/England> . ?v3 <http://dbpedia.org/ontology/deathPlace> ?result . }","```sparql
SELECT ?deathPlace WHERE {
  wd:Q11916 dbo:deathPlace ?deathPlace .
}
```",4,4,5,3,2,3,3,71,0,0,1,0,0.0,0
47,17,train,"Give me the awardee of the entity, that is an award, in India.",SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Award>. ?result <http://dbpedia.org/property/awards> ?v1 . ?v1 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/India> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?person ?name WHERE {
  ?award dbo:country dbr:India .
  ?award dbo:name ""Bharat Ratna""@en .
  ?award dbo:recipient ?person .
  ?person rdfs:label ?name .
  FILTER(LANG(?name) = 'en')
}
```",2,3,3,2,1,3,3,71,0,0,1632,0,0.0,0
791,0,train,Give me the spouse of Taira no Tokuko.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/spouse> <http://dbpedia.org/resource/Taira_no_Tokuko> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?spouse ?spouseLabel WHERE {
  VALUES ?tokuko { dbr:Taira_no_Tokuko }
  ?tokuko dbo:spouse ?spouse .
  SERVICE wikibase:label { bd:serviceParam wikibase:language ""[AUTO_LANGUAGE],en"". }
}
```",1,1,2,1,1,3,3,71,0,0,1,0,0.0,0
41,2,train,Give me the party of Enda Kenny.,SELECT ?result WHERE { <http://dbpedia.org/resource/Enda_Kenny> <http://dbpedia.org/ontology/party> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?partyName WHERE {
  dbr:Enda_Kenny dbo:partyAffiliation ?party .
  ?party rdfs:label ?partyName .
  FILTER (lang(?partyName) = 'en')
}
```",1,1,2,1,1,2,3,28,0,0,1,0,0.0,0
465,15,train,"Give me the child of the parent of Ercole II d'Este, Duke of Ferrara.","SELECT ?result WHERE { ?result <http://dbpedia.org/property/father> ?v1 . <http://dbpedia.org/resource/Ercole_II_d'Este,_Duke_of_Ferrara> <http://dbpedia.org/ontology/parent> ?v1 . }","```sparql
SELECT ?parent ?child WHERE {
  # Find the parent (mother or father) of Ercole II d'Este
  dbpedia:Ercole_II_d%27Este,_Duke_of_Ferrara dbo:mother|dbo:father ?parent .
  
  # Find a child of that parent
  ?parent dbo:child|dbo:son|dbo:daughter ?child .
}
```",2,2,3,2,1,3,3,71,0,0,2,0,0.0,0
456,29,train,Give me the professional in the alter ego of The Shadow and band of Alan Doyle and spouse of Danielle Spencer (Australian actress).,SELECT ?result WHERE { ?result <http://dbpedia.org/property/occupation> ?v3 . <http://dbpedia.org/resource/Alan_Doyle> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . <http://dbpedia.org/resource/Danielle_Spencer_(Australian_actress)> <http://dbpedia.org/ontology/spouse> ?result . <http://dbpedia.org/resource/The_Shadow> <http://dbpedia.org/property/alterEgo> ?v3 . },"```sparql
SELECT ?person WHERE {
  # Lamont Cranston (The Shadow's alter ego)
  ?shadow dbo:alterEgo dbr:Lamont_Cranston .
  
  # Great Big Sea (Alan Doyle's band)
  ?band rdf:type dbo:Band ;
        dbo:member dbr:Alan_Doyle .

  # Danielle Spencer's spouse
  ?spouse dbo:spouse dbr:Danielle_Spencer ;
          dbo:profession dbr:Tim_Minchin .
  
  # Tim Minchin as the connecting person
  ?person rdfs:label ""Tim Minchin""@en .
  FILTER (?shadow = ?person || ?band = ?person || ?spouse = ?person)
}
```",4,4,5,2,3,3,3,71,0,0,1,0,0.0,0
917,1,train,Give me the child of Kekūanāoʻa.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/parent> <http://dbpedia.org/resource/Kekūanāoʻa> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>

SELECT ?child WHERE {
  ?person a dbo:Person ;
          foaf:name ""Kekūanāoʻa""@en .
  ?person dbo:child ?child .
}
```",1,1,2,1,1,3,3,71,0,0,6,0,0.0,0
130,0,train,Give me the figure known as Vanderbilt Commodores.,SELECT ?result WHERE { ?result <http://dbpedia.org/property/nickname> <http://dbpedia.org/resource/Vanderbilt_Commodores> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?team ?description WHERE {
  ?team a dbo:SportsTeam ;
        rdfs:label ""Vanderbilt Commodores""@en .
  OPTIONAL { ?team dbo:description ?description . }
}
```",1,1,2,1,1,3,2,20,0,1,3,0.0,0.0,0
582,16,train,"Give me the father, that is an athlete and a soccer manager and a sports manager, of the child of Kazuaki Nagasawa.",SELECT ?result WHERE { ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Athlete>. ?v1 <http://dbpedia.org/property/father> ?result . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerManager>. ?v1 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Kazuaki_Nagasawa> . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsManager>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>

SELECT ?father WHERE {
  ?kazuakiNagasawa dbo:child ?child .
  FILTER (str(?kazuakiNagasawa) = ""Kazuaki Nagasawa"") .

  ?child dbo:father ?father .

  ?father a dbo:Athlete ;
         a dbo:SoccerManager ;
         a dbo:SportsManager .
}
```",2,5,3,2,1,3,3,71,0,0,1,0,0.0,0
715,32,train,"Give me the commander in the force, that is a military conflict, of Abd el-Krim and commander in the force of Francisco Largo Caballero.",SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Abd_el-Krim> . ?v3 <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Francisco_Largo_Caballero> . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v3 <http://dbpedia.org/ontology/commander> ?result . ?v1 <http://dbpedia.org/ontology/commander> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?rifWarCommander ?civilWarCommander WHERE {
  # Abd el-Krim's role in the Rif War
  OPTIONAL {
    ?rifWar dbo:commander ?rifWarCommander .
    ?rifWar dbo:name ""Rif War""@en .
    ?rifWarCommander dbr:Abd_el-Krim .
  }

  # Francisco Largo Caballero's role in the Spanish Civil War
  OPTIONAL {
    ?civilWar dbo:commander ?civilWarCommander .
    ?civilWar dbo:name ""Spanish Civil War""@en .
    ?civilWarCommander dbr:Francisco_Largo_Caballero .
  }
}
```",4,5,5,2,2,3,3,71,0,0,4,0,0.0,0
417,30,train,"Give me the spouse of Princess Caroline-Mathilde of Denmark and child of the child, that is a royalty, of Frederick Francis III, Grand Duke of Mecklenburg-Schwerin and child of Christian X of Denmark.","SELECT ?result WHERE { ?v1 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Frederick_Francis_III,_Grand_Duke_of_Mecklenburg-Schwerin> . ?result <http://dbpedia.org/ontology/spouse> <http://dbpedia.org/resource/Princess_Caroline-Mathilde_of_Denmark> . ?result <http://dbpedia.org/ontology/parent> ?v1 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?result <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Christian_X_of_Denmark> . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?spouse ?royalChild ?grandchild WHERE {
  # Find spouse of Princess Caroline-Mathilde of Denmark
  ?princess a dbo:Princess ;
            foaf:name ""Caroline-Mathilde"" ;
            dbo:country dbr:Denmark .
  ?princess dbo:spouse ?spouse .

  # Find children of Frederick Francis III, Grand Duke of Mecklenburg-Schwerin
  ?frederick a dbo:GrandDuke ;
             foaf:name ""Frederick Francis III"" ;
             dbo:country dbr:Mecklenburg-Schwerin .
  ?frederick dbo:child ?royalChild .

  # Check if the child is royalty (e.g., has title)
  ?royalChild a ?title .
  FILTER(?title IN (dbo:King, dbo:Queen, dbo:Duke, dbo:Princess, dbo:Prince))

  # Find Christian X of Denmark
  ?christianX a dbo:Monarch ;
              foaf:name ""Christian X"" ;
              dbo:country dbr:Denmark .

  # Find the child of the royal child who is also a descendant of Christian X
  ?royalChild dbo:child ?grandchild .
  ?grandchild dbo:parent ?christianX .
}
```",4,5,5,2,3,3,3,71,0,0,1,0,0.0,0
373,3,train,Give me the profession of Beto Guedes.,SELECT ?result WHERE { <http://dbpedia.org/resource/Beto_Guedes> <http://dbpedia.org/property/occupation> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?occupation WHERE {
  ?person foaf:name ""Beto Guedes""@en .
  OPTIONAL { ?person dbo:occupation ?occupation . }
}
```",1,1,2,1,1,2,2,9,0,0,1,0,0.0,0
341,2,train,Give me the awardee of List of awards and nominations received by Beyoncé.,SELECT ?result WHERE { ?result <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/List_of_awards_and_nominations_received_by_Beyoncé> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?award WHERE {
  ?award dbo:recipient dbr:Beyoncé .
}
```",1,1,2,1,1,2,2,9,0,0,1,0,0.0,0
47,24,train,Give me the office of the awardee of Banga Bhushan and office of Ajoy Mukherjee.,SELECT ?result WHERE { ?v2 <http://dbpedia.org/property/office> ?result . ?v2 <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/Banga_Bhushan> . <http://dbpedia.org/resource/Ajoy_Mukherjee> <http://dbpedia.org/property/office> ?result . },"```sparql
SELECT ?awardeeOffice ?mukherjeeOffice WHERE {
  # Find offices of Banga Bibhushan awardees
  ?person dbo:awardReceived dbr:Banga_Bibhushan .
  OPTIONAL { ?person dbo:office ?awardeeOffice . }
  
  # Find office of Ajoy Mukherjee
  dbp:Ajoy_Mukherjee dbo:office ?mukherjeeOffice .

}
```",3,3,4,2,2,3,3,71,0,0,1,0,0.0,0
158,4,train,"Who is the person deceased, that is an office holder and a politician, on 1945-09-15?","SELECT ?result WHERE { ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?result <http://dbpedia.org/ontology/deathDate> ""1945-09-15""^^<http://www.w3.org/2001/XMLSchema#date> . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?person ?name WHERE {
  ?person a dbo:Politician ;
          a dbo:OfficeHolder ;
          dbo:dateOfDeath ?deathDate .
  FILTER (YEAR(?deathDate) = 1945 && MONTH(?deathDate) = 9 && DAY(?deathDate) = 15)
  OPTIONAL { ?person rdfs:label ?name . FILTER(LANG(?name) = 'en') }
}
ORDER BY ?name
```",1,3,2,1,1,3,2,20,0,0,3,0,0.0,0
582,4,train,Give me the residence of Hirotaka Sugawara.,SELECT ?result WHERE { <http://dbpedia.org/resource/Hirotaka_Sugawara> <http://dbpedia.org/property/residence> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>

SELECT ?residence WHERE {
  ?person a dbo:Person ;
          foaf:name ""Hirotaka Sugawara""@en .
  OPTIONAL { ?person dbo:residence ?residence . }
}
```",1,1,2,1,1,3,3,71,0,0,2,0,0.0,0
273,2,train,Give me the child of Edoardo Agnelli (1831-1871).,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/parent> <http://dbpedia.org/resource/Edoardo_Agnelli_(1831-1871)> . },"```sparql
SELECT ?child WHERE {
  ?child dbo:parent dbr:Edoardo_Agnelli_(1831-1871) .
}
```",1,1,2,1,1,3,2,20,0,0,1,0,0.0,0
456,22,train,"Give me the band of the band, that is a musical artist, of Dean Brody and spouse of Danielle Spencer (Australian actress).",SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?v1 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . <http://dbpedia.org/resource/Danielle_Spencer_(Australian_actress)> <http://dbpedia.org/ontology/spouse> ?result . <http://dbpedia.org/resource/Dean_Brody> <http://dbpedia.org/ontology/associatedMusicalArtist> ?v1 . },"```sparql
SELECT ?band WHERE {
  ?person foaf:name ""Dean Brody"" .
  ?person dbo:spouse ?spouse .
  ?spouse foaf:name ""Danielle Spencer""@en .
  
  OPTIONAL { 
    ?person dbo:musicalArtist ?artist .
    ?artist dbo:associatedBand ?band .
  }
  
  FILTER EXISTS {
    ?band rdfs:label ?bandLabel .
    FILTER(CONTAINS(LCASE(?bandLabel), ""high valley""))
  }
}
```",3,4,4,2,2,3,3,71,0,0,1,0,0.0,0
892,8,train,"Give me the administration, that is Italian and a region and a settlement and an administrative region, of Democratic Party (Italy).",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Italy>. ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Region>. ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/AdministrativeRegion>. ?result <http://dbpedia.org/property/leaderParty> <http://dbpedia.org/resource/Democratic_Party_(Italy)> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT DISTINCT ?region WHERE {
  ?region a dbo:Region ;
          dbo:country dbr:Italy ;
          dbo:settlementType dbr:Settlement .
  
  OPTIONAL { 
    ?party dbp:hasMember ?person .
    ?person dbo:memberOf ?party .
    ?party rdfs:label ""Democratic Party (Italy)""@en .
    
    ?region dbo:governingParty ?party .
  }
}
```",1,5,2,1,1,3,3,71,0,0,14,0,0.0,0
926,23,train,Give me the father of the father of the spouse of Neşerek Kadın.,SELECT ?result WHERE { <http://dbpedia.org/resource/Neşerek_Kadın> <http://dbpedia.org/ontology/spouse> ?v1 . ?v2 <http://dbpedia.org/property/father> ?result . ?v1 <http://dbpedia.org/property/father> ?v2 . },"```sparql
SELECT ?grandFatherOfSpouse WHERE {
  ?neserekKadin a dbo:Person ;
                rdfs:label ""Neşerek Kadın""@en .
  
  OPTIONAL { ?neserekKadin dbo:spouse ?spouse . }
  
  OPTIONAL { ?spouse dbo:father ?fatherOfSpouse . }
  
  OPTIONAL { ?fatherOfSpouse dbo:father ?grandFatherOfSpouse . }
}
```",3,3,4,3,1,3,3,71,0,2296,1,0.0,0.0,0
507,29,train,"Give me the spouse of Anne V. Coates and professional in Film director, television director and director of the movie, that is a movie and a work, with Beryl Reid.","SELECT ?result WHERE { ?result <http://dbpedia.org/property/occupation> ""Film director, television director""@en . ?v3 <http://dbpedia.org/property/starring> <http://dbpedia.org/resource/Beryl_Reid> . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Film>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?result <http://dbpedia.org/ontology/spouse> <http://dbpedia.org/resource/Anne_V._Coates> . ?v3 <http://dbpedia.org/ontology/director> ?result . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?spouse ?movie WHERE {
  # Find Anne V. Coates' spouse
  dbr:Anne_V._Coates dbo:spouse ?spouse .
  
  # Ensure the spouse is a film or television director
  ?spouse dbo:occupation ?occupation .
  FILTER (
    CONTAINS(LCASE(STR(?occupation)), ""film director"") ||
    CONTAINS(LCASE(STR(?occupation)), ""television director"")
  )
  
  # Find movies directed by this spouse that feature Beryl Reid
  ?movie dbo:director ?spouse ;
         dbo:starring dbr:Beryl_Reid .
}
```",4,6,5,2,3,3,3,71,0,0,1,0,0.0,0
274,14,train,Give me the professional in the designer of Tetris Classic and band member of Dizzy Gillespie.,SELECT ?result WHERE { ?result <http://dbpedia.org/property/occupation> ?v2 . <http://dbpedia.org/resource/Tetris_Classic> <http://dbpedia.org/property/designer> ?v2 . ?result <http://dbpedia.org/ontology/associatedMusicalArtist> <http://dbpedia.org/resource/Dizzy_Gillespie> . },"```sparql
SELECT ?person WHERE {
  # Find individuals associated with Tetris Classic
  ?tetrisDesigner dcterms:creatorOf <http://dbpedia.org/resource/Tetris_Classic> .
  
  # Find individuals who were band members of Dizzy Gillespie
  ?gillespieBandMember dbo:musicGroup <http://dbpedia.org/resource/Dizzy_Gillespie> ;
                      rdf:type dbo:BandMember .

  # Look for a person who is both a designer and a band member
  ?person owl:sameAs ?tetrisDesigner .
  ?person owl:sameAs ?gillespieBandMember .
}
```",3,3,4,2,2,2,3,28,0,0,8,0,0.0,0
326,13,train,"Give me the resident of the birthplace, that is a state and British, of the professional in Writer.","SELECT ?result WHERE { ?v0 <http://dbpedia.org/property/occupation> ""Writer""@en . ?v0 <http://dbpedia.org/ontology/birthPlace> ?v1 . ?result <http://dbpedia.org/property/residence> ?v1 . ?v1 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/United_Kingdom>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/AdministrativeRegion>. }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT DISTINCT ?resident WHERE {
  # Step 1: Find British writers
  ?writer a dbo:Writer ;
          dbo:nationality dbr:United_Kingdom .

  # Step 2: Get their birthplace, ensuring it's a state or similar
  ?writer dbo:birthPlace ?birthPlace .
  FILTER EXISTS { ?birthPlace a dbo:StateOrTerritory }

  # Step 3: Find residents of that birthplace
  ?resident dbo:residence ?birthPlace .
}
```",3,5,4,3,1,3,2,20,0,0,120,0,0.0,0
459,18,train,Give me the governor of Dana Murphy and person born as the birth name of Kevin Stitt.,SELECT ?result WHERE { <http://dbpedia.org/resource/Kevin_Stitt> <http://dbpedia.org/property/birthName> ?v0 . <http://dbpedia.org/resource/Dana_Murphy> <http://dbpedia.org/property/governor> ?result . ?result <http://dbpedia.org/property/birthName> ?v0 . },"```sparql
# Find the governor of Kansas during Dana Murphy's tenure (1997-2003)
SELECT ?governor WHERE {
  ?state dcterms:isPartOf dbc:Kansas .
  ?state dbo:governmentCountry dbc:United_States_of_America .
  ?office dbo:positionTitle ""Governor""@en ;
          dbo:country dbc:United_States_of_America ;
          dbo:stateOrTerritory ?state .
  ?governor dbo:holdsOffice ?office ;
            dbo:termStart ?start ;
            dbo:termEnd ?end .
  FILTER (?start <= ""2003-01-03""^^xsd:date && ?end >= ""1997-01-03""^^xsd:date)
}

UNION

# Find Kevin Stitt's birth name
SELECT ?birthName WHERE {
  dbpedia:Kevin_Stitt dbo:birthName ?birthName .
}
```",3,3,4,2,2,2,3,28,0,0,1,0,0.0,0
791,2,train,Give me the father of Emperor Go-Toba.,SELECT ?result WHERE { <http://dbpedia.org/resource/Emperor_Go-Toba> <http://dbpedia.org/property/father> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>

SELECT ?father WHERE {
  ?goToba a dbo:Monarch ;
          foaf:name ""Go-Toba Tennō""@en .
  ?goToba dbo:father ?father .
}
```",1,1,2,1,1,3,3,71,0,0,1,0,0.0,0
129,6,train,Give me the professional in  and associated musical artist of EarthGang.,"SELECT ?result WHERE { ?result <http://dbpedia.org/property/occupation> """"@en . <http://dbpedia.org/resource/EarthGang> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . }","```sparql
# Query to find EarthGang's professional role
SELECT ?role WHERE {
  dbpedia:EarthGang dbo:occupation ?role .
}

# Query to find associated musical artists with EarthGang
SELECT DISTINCT ?associatedArtist WHERE {
  ?collaboration dbo:artist ?earthgang ;
                 dbo:artist ?associatedArtist .
  FILTER(?earthgang = dbpedia:EarthGang)
}
```",2,2,3,1,2,2,3,28,0,0,3,0,0.0,0
507,23,train,Give me the spouse of the person born as the birth name of Anne V. Coates.,SELECT ?result WHERE { ?v0 <http://dbpedia.org/property/birthName> ?v2 . ?result <http://dbpedia.org/ontology/spouse> ?v0 . <http://dbpedia.org/resource/Anne_V._Coates> <http://dbpedia.org/property/birthName> ?v2 . },"```sparql
SELECT ?spouse WHERE {
  wd:Q123456 foaf:name ""Anne V. Coates""@en .
  ?anne wdt:P735 ?birthName .
  ?person wdt:P31/wdt:P279* wd:Q5 ; # Person or subclass of person
          wdt:P734 ?birthName . # Birth name matches Anne V. Coates' birth name
  OPTIONAL { ?person wdt:P26 ?spouse } .
  FILTER(?anne != ?person) .
}
```

Note: Replace `wd:Q123456` with the actual DBpedia resource identifier for Anne V. Coates, and ensure that the property identifiers (like `P735` for birth name and `P26` for spouse) are correct as per DBpedia's schema.",3,3,4,3,1,3,3,71,0,0,1,0,0.0,0
888,3,train,"Give me the force, that is a societal event and an event, of Serhiy Kotenko.",SELECT ?result WHERE { ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?result <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Serhiy_Kotenko> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?societalEvent ?otherEvent ?force WHERE {
  # Find societal event related to Serhiy Kotenko
  ?event1 dbo:agent dbr:Serhiy_Kotenko .
  ?event1 a dbo:SocietalEvent .

  # Find another event related to Serhiy Kotenko
  ?event2 dbo:agent dbr:Serhiy_Kotenko .
  ?event2 a ?eventType .
  FILTER(?eventType != dbo:SocietalEvent)

  # Identify the force associated with these events
  ?force dbo:member ?person .
  ?person foaf:name ""Serhiy Kotenko"" .

  # Bind variables for clarity
  BIND(?event1 AS ?societalEvent)
  BIND(?event2 AS ?otherEvent)
}
```",1,3,2,1,1,3,2,20,0,0,1,0,0.0,0
645,25,train,"Give me the military force of Spanish Civil War and leader of the office, that is a government agency and an organisation, of Camilo Menéndez Tolosa.",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/battle> <http://dbpedia.org/resource/Spanish_Civil_War> . ?v1 <http://dbpedia.org/ontology/leader> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. <http://dbpedia.org/resource/Camilo_Menéndez_Tolosa> <http://dbpedia.org/property/office> ?v1 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/GovernmentAgency>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?militaryForce ?leaderRole WHERE {
  # Find Camilo Menéndez Tolosa's involvement in military forces during the Spanish Civil War
  OPTIONAL {
    ?person dbo:nationality dbr:Spain ;
            rdfs:label ""Camilo Menéndez Tolosa""@en .
    ?person dbo:militaryService ?militaryForce .
    FILTER(CONTAINS(LCASE(?militaryForce), ""army of africa"") || CONTAINS(LCASE(?militaryForce), ""spanish civil war""))
  }
  
  # Find any leadership roles he held
  OPTIONAL {
    ?person dbo:office ?leaderRole .
    FILTER(STRSTARTS(LCASE(?leaderRole), ""chief of staff"") || STRSTARTS(LCASE(?leaderRole), ""army of africa""))
  }
}
LIMIT 10
```",3,5,4,2,2,3,3,71,0,9,1,0.0,0.0,0
216,4,train,Give me the awardee of Australian Defence Medal.,SELECT ?result WHERE { ?result <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/Australian_Defence_Medal> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?recipient WHERE {
  ?recipient dbo:award dbr:Australian_Defence_Medal .
}
```",1,1,2,1,1,2,3,28,5,2,0,0.7142857142857143,1.0,0.8333333333333333
965,38,train,"Give me the parent of the child, that is a royalty, of Prince Louis of Battenberg and parent of the person born, that is a noble, as Prince George of Battenberg.","SELECT ?result WHERE { ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v3 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Prince_Louis_of_Battenberg> . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Noble>. ?v3 <http://dbpedia.org/ontology/parent> ?result . ?v0 <http://dbpedia.org/property/birthName> ""Prince George of Battenberg""@en . ?v0 <http://dbpedia.org/ontology/parent> ?result . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT DISTINCT ?royalChildParent ?nobleChildParent WHERE {
  # Find a child of Prince Louis of Battenberg who is royalty
  ?child dbo:parent dbr:Prince_Louis_of_Battenberg ;
         dbo:title ?title .
  FILTER(CONTAINS(LCASE(?title), ""prince"") || CONTAINS(LCASE(?title), ""duke"") || CONTAINS(LCASE(?title), ""king"") || CONTAINS(LCASE(?title), ""queen""))

  # Get the parent of this royal child
  ?child dbo:parent ?royalChildParent .

  # Find a child of Prince George of Battenberg who is noble
  ?nobleChild dbo:parent dbr:Prince_George_of_Battenberg ;
              dbo:title ?nobleTitle .
  FILTER(CONTAINS(LCASE(?nobleTitle), ""prince"") || CONTAINS(LCASE(?nobleTitle), ""duke"") || CONTAINS(LCASE(?nobleTitle), ""count"") || CONTAINS(LCASE(?nobleTitle), ""baron""))

  # Get the parent of this noble child
  ?nobleChild dbo:parent ?nobleChildParent .
}
```",4,6,5,2,2,3,3,71,0,0,2,0,0.0,0
445,35,train,"Give me the entity in the residence, that is a country, of Anna Sharkey and entity in the award of George H. Cameron.",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/country> ?v1 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. <http://dbpedia.org/resource/Anna_Sharkey> <http://dbpedia.org/property/residence> ?v2 . ?result <http://dbpedia.org/ontology/location> ?v2 . <http://dbpedia.org/resource/George_H._Cameron> <http://dbpedia.org/property/awards> ?v1 . },"```sparql
# Query to find the country of residence for Anna Sharkey
SELECT ?country WHERE {
  ?person foaf:name ""Anna Sharkey""@en .
  ?person dbo:residence ?residence .
  ?residence rdf:type dbo:Country .
  ?residence rdfs:label ?country .
  FILTER(LANG(?country) = 'en')
}

UNION

# Query to find the entity associated with an award received by George H. Cameron
SELECT ?awardEntity WHERE {
  ?person foaf:name ""George H. Cameron""@en .
  ?person dbo:award ?award .
  ?award dbo:recipient ?person ;
         dbo:givenBy|dbo:organizer ?awardEntity .
}
```",4,5,5,2,2,3,3,71,0,0,102,0,0.0,0
433,39,train,Give me the associated musical artist of Bill Evans and professional in the profession of the writer of Slowhand at 70 – Live at the Royal Albert Hall.,SELECT ?result WHERE { <http://dbpedia.org/resource/Slowhand_at_70_–_Live_at_the_Royal_Albert_Hall> <http://dbpedia.org/property/writer> ?v0 . ?v0 <http://dbpedia.org/property/occupation> ?v1 . ?result <http://dbpedia.org/property/occupation> ?v1 . <http://dbpedia.org/resource/Bill_Evans> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . },"```sparql
SELECT ?artist WHERE {
  ?billEvans dbo:associatedMusicalArtist ?artist .
  FILTER(?billEvans = dbpedia:Bill_Evans) .

  OPTIONAL { 
    ?slowhandAlbum dbo:writer ?writer .
    FILTER(?slowhandAlbum = dbpedia:Slowhand_at_70_%E2%80%93_Live_at_the_Royal_Albert_Hall)
    ?writer rdf:type dbo:Musician .
  }

  ?artist rdf:type dbo:Musician .
}
```",4,4,5,3,2,3,3,71,0,0,4,0,0.0,0
865,38,train,"Give me the father of the child, that is a politician, of Abu Ahmad Abdul Hafiz and father of the child of Abu Ahmad Abdul Hafiz.",SELECT ?result WHERE { ?v2 <http://dbpedia.org/property/father> ?result . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v2 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Abu_Ahmad_Abdul_Hafiz> . ?v1 <http://dbpedia.org/property/father> ?result . ?v1 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Abu_Ahmad_Abdul_Hafiz> . },"```sparql
SELECT ?father WHERE {
  ?person dbo:child ?child .
  ?person foaf:name ""Abu Ahmad Abdul Hafiz"" .
  
  ?child dbo:occupation dbr:Politician .
  
  ?child dbo:parent ?father .
}
```",4,5,5,2,2,3,3,71,0,0,1,0,0.0,0
839,34,train,"Give me the band of Matthias Röhr and band of the person born, that is a musical artist, as the persona of Kevin Russell (musician).",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/bandMember> <http://dbpedia.org/resource/Matthias_Röhr> . ?v1 <http://dbpedia.org/property/birthName> ?v2 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?v1 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . <http://dbpedia.org/resource/Kevin_Russell_(musician)> <http://xmlns.com/foaf/0.1/givenName> ?v2 . },"```sparql
# Query to find the band associated with Matthias Röhr
SELECT ?band WHERE {
  ?person foaf:name ""Matthias Röhr"" .
  ?person dbo:memberOf ?band .
  FILTER(CONTAINS(LCASE(STR(?band)), ""the boss hoss""))
}

UNION

# Query to find Kevin Russell's birth name and associated band
{
  ?morby foaf:name ""Kevin Morby""@en .
  ?morby dbo:birthName ?birthName .
  
  OPTIONAL {
    ?morby dbo:memberOf ?band .
    FILTER(?band != """")
  }
  
  BIND(CONCAT(""Kevin Russell is a persona of "", STR(?birthName)) AS ?result)
}
```",4,5,5,3,2,3,3,71,0,0,1,0,0.0,0
926,18,train,Give me the child of Ahmed III and successor of Mustafa III and father of Mahmud II.,SELECT ?result WHERE { <http://dbpedia.org/resource/Ahmed_III> <http://dbpedia.org/ontology/child> ?result . <http://dbpedia.org/resource/Mahmud_II> <http://dbpedia.org/property/father> ?result . <http://dbpedia.org/resource/Mustafa_III> <http://dbpedia.org/ontology/successor> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?sultan WHERE {
  ?sultan dbo:child dbr:Ahmed_III .
  ?sultan dbo:succeededBy dbr:Mustafa_III .
  ?sultan dbo:parent dbr:Mahmud_II .
}
```",3,3,4,1,3,3,3,71,0,0,1,0,0.0,0
495,7,train,Give me the child of the father of William I of Württemberg.,SELECT ?result WHERE { ?result <http://dbpedia.org/property/father> ?v1 . <http://dbpedia.org/resource/William_I_of_Württemberg> <http://dbpedia.org/property/father> ?v1 . },"```sparql
SELECT ?child WHERE {
  ?person dbo:wikiPageID ""William_I_of_W%C3%BCrttemberg"" .
  ?person dbo:father ?father .
  ?father dbo:child ?child .
}
```",2,2,3,2,1,3,2,20,0,0,3,0,0.0,0
582,39,train,"Give me the player in Kazuaki Nagasawa and figure known as the nickname of the team, that is an organisation, of Hajime Moriyasu.",SELECT ?result WHERE { ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?v0 <http://dbpedia.org/property/nickname> ?v1 . ?result <http://dbpedia.org/property/nickname> ?v1 . <http://dbpedia.org/resource/Kazuaki_Nagasawa> <http://dbpedia.org/ontology/team> ?result . ?v0 <http://dbpedia.org/ontology/coach> <http://dbpedia.org/resource/Hajime_Moriyasu> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?player WHERE {
  # Find the team Kazuaki Nagasawa plays for
  ?team dbo:member dbr:Kazuaki_Nagasawa .
  
  # Get the nickname of that team
  ?team dbo:nickname ?nickname .

  # Find the organization associated with Hajime Moriyasu
  ?organization dbo:manager dbr:Hajime_Moriyasu .

  # Find players who are members of both the team and the organization
  ?player dbo:member ?team ;
          dbo:memberOf ?organization .
}
```",4,5,5,3,2,3,3,71,0,0,1,0,0.0,0
791,1,train,Give me the predecessor of Emperor Antoku.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/successor> <http://dbpedia.org/resource/Emperor_Antoku> . },"```sparql
SELECT ?predecessor WHERE {
  wd:Q123456 dbo:predecessor ?predecessor .
}
```

Note: Replace `wd:Q123456` with the actual DBpedia identifier for Emperor Antoku. You can find this identifier by searching for ""Emperor Antoku"" in DBpedia or using a SPARQL query to retrieve it.",1,1,2,1,1,3,3,71,0,0,1,0,0.0,0
130,8,train,"Give me the entity in the administration, that is American, of .","SELECT ?result WHERE { ?v0 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/United_States>. ?result <http://dbpedia.org/ontology/state> ?v0 . ?v0 <http://dbpedia.org/property/governor> """"@en . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?entity WHERE {
  ?entity dbo:administration ?admin .
  ?entity dbo:nationality dbr:United_States .
}
```",2,3,3,2,1,3,2,20,0,0,26076,0,0.0,0
326,0,train,"Give me the person decedent at Rancho Mirage, California.","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/deathPlace> <http://dbpedia.org/resource/Rancho_Mirage,_California> . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?person WHERE {
  ?person dbo:deathPlace dbr:Rancho_Mirage .
}
```",1,1,2,1,1,2,2,9,0,5,97,0.0,0.0,0
445,4,train,"Give me the residence, that is a country, of Anna Sharkey.",SELECT ?result WHERE { ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. <http://dbpedia.org/resource/Anna_Sharkey> <http://dbpedia.org/property/residence> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?residence WHERE {
  ?person a dbo:Person ;
          foaf:name ""Anna Sharkey""@en .
  ?person dbo:residence ?residence .
  ?residence a dbo:Country .
}
```",1,2,2,1,1,3,3,71,0,0,2,0,0.0,0
124,35,train,"Give me the commander in the war, that is a societal event and a military conflict, of A Field Battery, Royal Australian Artillery and military force of the force, that is a societal event and a military conflict, of Herbert Kitchener, 1st Earl Kitchener.","SELECT ?result WHERE { ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?v1 <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Herbert_Kitchener,_1st_Earl_Kitchener> . <http://dbpedia.org/resource/A_Field_Battery,_Royal_Australian_Artillery> <http://dbpedia.org/ontology/battle> ?v2 . ?v2 <http://dbpedia.org/ontology/commander> ?result . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?result <http://dbpedia.org/ontology/battle> ?v1 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?commander ?militaryForce
WHERE {
  # Finding World War I as a societal event and military conflict
  ?war dbo:type dbr:Military_conflict ;
       dbo:societal_event dbr:World_War_I .

  # Identifying commanders of forces involved in World War I
  ?force dbo:commander ?commander .
  ?force dbo:participatedIn ?war .

  # Finding the military force associated with Herbert Kitchener
  ?kitchenerForce dbo:commander dbr:Herbert_Kitchener,_1st_Earl_Kitchener ;
                  dbo:participatedIn ?war .
  
  FILTER(?force = ?kitchenerForce)
}
```",4,8,5,2,2,3,3,71,0,0,9,0,0.0,0
326,5,train,"Give me the award, that is a country, of Adelbert Cronkhite.",SELECT ?result WHERE { ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. <http://dbpedia.org/resource/Adelbert_Cronkhite> <http://dbpedia.org/property/awards> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?award WHERE {
  ?person a dbo:MilitaryPerson ;
          foaf:name ""Adelbert Cronkhite""@en .
  
  ?person dbo:receivedAward ?award .

  ?award rdfs:label ?awardLabel .
  FILTER (lang(?awardLabel) = 'en')

  OPTIONAL { 
    ?country a dbo:Country ;
             rdfs:label ?countryLabel .
    FILTER (lang(?countryLabel) = 'en' && ?awardLabel = ?countryLabel)
  }
  
  FILTER EXISTS { ?country . } # Ensures that the award is also a country
}
```",1,2,2,1,1,3,2,20,0,0,1,0,0.0,0
47,0,train,Give me the office of Suvendu Adhikari.,SELECT ?result WHERE { <http://dbpedia.org/resource/Suvendu_Adhikari> <http://dbpedia.org/property/office> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?office WHERE {
  dbr:Suvendu_Adhikari dbo:office ?office .
}
```",1,1,2,1,1,3,3,71,0,0,8,0,0.0,0
417,27,train,"Give me the child of the child, that is a royalty, of the parent, that is a royalty, of Alexandrine of Mecklenburg-Schwerin.",SELECT ?result WHERE { <http://dbpedia.org/resource/Alexandrine_of_Mecklenburg-Schwerin> <http://dbpedia.org/ontology/parent> ?v1 . ?result <http://dbpedia.org/ontology/parent> ?v2 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v2 <http://dbpedia.org/property/father> ?v1 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. },"```sparql
SELECT ?grandchild WHERE {
  # Step 1: Identify Alexandrine's parent who is a royalty
  ?parent dbo:child dbr:Alexandrine_of_Mecklenburg-Schwerin .
  ?parent rdf:type dbo:Monarch .

  # Step 2: Find the child of this royal parent
  ?child dbo:child ?parent .
  
  # Step 3: Determine the child of that child who is a royalty
  ?grandchild dbo:child ?child .
  ?grandchild rdf:type dbo:Monarch .
}
```",3,5,4,3,1,3,3,71,0,0,8,0,0.0,0
216,0,train,Give me the player in Igor Bišćan.,SELECT ?result WHERE { <http://dbpedia.org/resource/Igor_Bišćan> <http://dbpedia.org/ontology/team> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?team WHERE {
  dbr:Igor_Bišćan dbo:team ?team .
}
```",1,1,2,1,1,3,3,71,6,0,0,1.0,1.0,1.0
136,6,train,Give me the landmark at elevation of the award of Bret Anthony Johnston.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/elevation> ?v0 . <http://dbpedia.org/resource/Bret_Anthony_Johnston> <http://dbpedia.org/property/awards> ?v0 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?landmark ?elevation WHERE {
  # Step 1: Identify Bret Anthony Johnston and his awards
  ?person a dbo:Writer ;
          foaf:name ""Bret Anthony Johnston"" .
  
  ?award dbo:recipient ?person .

  # Step 2: Find landmarks associated with the award
  OPTIONAL { 
    ?award dbo:location ?landmark .
    
    # Step 3: Retrieve elevation of the landmark if available
    ?landmark dbo:elevationAboveSeaLevel ?elevation .
  }
}
```",2,2,3,2,1,2,2,9,0,0,909,0,0.0,0
892,4,train,Give me the profession of Henri Crolla.,SELECT ?result WHERE { <http://dbpedia.org/resource/Henri_Crolla> <http://dbpedia.org/property/occupation> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?profession 
WHERE {
  ?person a dbo:Person ;
          foaf:name ""Henri Crolla""@en .
  OPTIONAL { ?person dbo:occupation ?profession . }
}
```",1,1,2,1,1,3,3,71,1,0,1,1.0,0.5,0.6666666666666666
124,20,train,"Give me the military force of the war, that is an event and a military conflict and a societal event, of Frank Rhodes (British Army officer) and commander in Mahdist War.",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/battle> ?v2 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. <http://dbpedia.org/resource/Frank_Rhodes_(British_Army_officer)> <http://dbpedia.org/ontology/battle> ?v2 . <http://dbpedia.org/resource/Mahdist_War> <http://dbpedia.org/ontology/commander> ?result . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?militaryForce WHERE {
  ?war dbo:type dbr:Military_conflict .
  ?war dbo:type dbr:Societal_event .
  ?war dbo:participatingMilitaryUnit ?unit .
  ?unit dbo:commander dbr:Frank_Rhodes .
  ?unit dbo:militaryBranch ?militaryForce .
  
  FILTER(CONTAINS(LCASE(?war), ""mahdist war""))
}
```",3,6,4,2,2,3,3,71,0,0,3,0,0.0,0
216,5,train,Give me the designer of Woolfe: The Red Hood Diaries.,SELECT ?result WHERE { <http://dbpedia.org/resource/Woolfe:_The_Red_Hood_Diaries> <http://dbpedia.org/property/designer> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?designer WHERE {
  ?game dbo:title ""Woolfe: The Red Hood Diaries""@en .
  ?game dbo:developer ?developer .
  ?developer dbo:employee ?person .
  ?person dbo:occupationLabel ?occupation .
  FILTER(CONTAINS(LCASE(?occupation), ""game designer""))
  BIND(REPLACE(STR(?person), ""http://dbpedia.org/resource/"", """") AS ?designer)
}
```",1,1,2,1,1,2,3,28,0,0,4,0,0.0,0
582,22,train,Give me the figure known as the nickname of Japan national football team and reference to Japan.,"SELECT ?result WHERE { ?result <http://dbpedia.org/property/nickname> ?v1 . ?result <http://xmlns.com/foaf/0.1/name> ""Japan""@en . <http://dbpedia.org/resource/Japan_national_football_team> <http://dbpedia.org/property/nickname> ?v1 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?nickname WHERE {
  ?team a dbo:NationalSoccerTeam ;
        rdfs:label ""Japan national football team""@en .
  OPTIONAL { ?team dbo:nickName ?nickname . }
}
```",3,3,4,2,2,3,3,71,0,0,1,0,0.0,0
47,22,train,Give me the office of the awardee of Padma Vibhushan and office of Suvendu Adhikari.,SELECT ?result WHERE { ?v1 <http://dbpedia.org/property/office> ?result . <http://dbpedia.org/resource/Suvendu_Adhikari> <http://dbpedia.org/property/office> ?result . ?v1 <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/Padma_Vibhushan> . },"```sparql
# Query for offices of Padma Vibhushan awardees
SELECT DISTINCT ?person ?office WHERE {
  ?person dbo:award dbp:Padma_Vibhushan .
  OPTIONAL { ?person dbo:office ?office . }
}

# Query for the office of Suvendu Adhikari
SELECT ?office WHERE {
  dbpedia:Suvendu_Adhikari dbo:office ?office .
}
```",3,3,4,2,2,3,3,71,0,0,2,0,0.0,0
443,6,train,Give me the birthplace of Ulf Lundell and landmark at elevation of 28.,"SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/elevation> ""28""^^<http://www.w3.org/2001/XMLSchema#integer> . <http://dbpedia.org/resource/Ulf_Lundell> <http://dbpedia.org/ontology/birthPlace> ?result . }","```sparql
# Query 1: Birthplace of Ulf Lundell
SELECT ?birthPlace WHERE {
  ?person dbo:name ""Ulf Lundell""@sv.
  ?person dbo:birthPlace ?birthPlace.
}

UNION

# Query 2: Landmark at Elevation of 28
SELECT ?landmark WHERE {
  ?landmark a dbo:Landmark;
            dbo:elevationAboveSeaLevel ?elevation.
  FILTER (?elevation = ""28""^^xsd:integer)
}
```",2,2,3,1,2,2,3,28,0,0,1,0,0.0,0
353,3,train,"Give me the country of Moskovsky City District, Nizhny Novgorod.","SELECT ?result WHERE { <http://dbpedia.org/resource/Moskovsky_City_District,_Nizhny_Novgorod> <http://dbpedia.org/ontology/country> ?result . }","```sparql
SELECT ?country WHERE {
  ?district rdfs:label ""Moskovsky City District""@en .
  OPTIONAL { ?district dbo:country ?country . }
  FILTER (lang(?district) = 'en')
}
```",1,1,2,1,1,2,2,9,0,0,1,0,0.0,0
926,27,train,"Give me the child of the father, that is a royalty, of the parent, that is a royalty, of Beyhan Sultan (daughter of Mustafa III).",SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v1 <http://dbpedia.org/property/father> ?v0 . ?v0 <http://dbpedia.org/ontology/child> ?result . <http://dbpedia.org/resource/Beyhan_Sultan_(daughter_of_Mustafa_III)> <http://dbpedia.org/ontology/parent> ?v1 . },"```sparql
SELECT DISTINCT ?childOfFather WHERE {
  # Step 1: Identify Beyhan Sultan and confirm her parentage
  ?beyhanSultan dbp:father ?mustafaIII .
  ?beyhanSultan rdfs:label ""Beyhan Sultan""@en .

  # Step 2: Confirm Mustafa III is a royalty
  ?mustafaIII rdf:type dbo:Monarch ;
              rdfs:label ""Mustafa III""@en .

  # Step 3: Find Mustafa III's children who are royalty
  ?child dbp:father ?mustafaIII ;
         rdf:type dbo:Monarch .

  # Step 4: Determine the father of these children
  ?fatherOfChild dbp:sonOrDaughter ?child .

  # Step 5: Identify the child of this father who is a royalty
  ?childOfFather dbp:father ?fatherOfChild ;
                 rdf:type dbo:Monarch .
}
```",3,5,4,3,1,3,3,71,0,0,11,0,0.0,0
582,14,train,Give me the figure known as the nickname of Japan national football team.,SELECT ?result WHERE { ?result <http://dbpedia.org/property/nickname> ?v1 . <http://dbpedia.org/resource/Japan_national_football_team> <http://dbpedia.org/property/nickname> ?v1 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?nickname WHERE {
  ?team a dbo:NationalSoccerTeam ;
        dbo:country dbr:Japan .
  OPTIONAL { ?team dbo:nickname ?nickname . }
}
```",2,2,3,2,1,3,3,71,0,0,1,0,0.0,0
507,8,train,Give me the profession of Guy Ferland.,SELECT ?result WHERE { <http://dbpedia.org/resource/Guy_Ferland> <http://dbpedia.org/property/occupation> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?profession 
WHERE {
  ?person rdfs:label ""Guy Ferland""@en.
  ?person dbo:occupation ?profession.
}
```",1,1,2,1,1,3,3,71,0,2,1,0.0,0.0,0
987,16,train,"Who is the actor of the show, that is a film, with Emir Hadžihafizbegović?",SELECT ?result WHERE { ?v0 <http://dbpedia.org/property/starring> ?result . ?v0 <http://dbpedia.org/ontology/starring> <http://dbpedia.org/resource/Emir_Hadžihafizbegović> . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Film>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?film ?actorInShow WHERE {
  # Find films featuring Emir Hadžihafizbegović
  dbr:Emir_Hadžihafizbegović dbo:actedIn ?film .
  
  # Check if the film is also a TV show
  ?film rdf:type dbo:Film ;
        dbo:basedOn ?show .

  # Find actors in the TV show adaptation
  ?actorInShow dbo:actedIn ?show .
}
```",2,3,3,2,1,3,3,71,0,0,54,0,0.0,0
102,9,train,"Give me the player in the member, that is a soccer player, of England women's national football team.",SELECT ?result WHERE { ?v0 <http://dbpedia.org/ontology/team> <http://dbpedia.org/resource/England_women's_national_football_team> . ?v0 <http://dbpedia.org/ontology/team> ?result . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerPlayer>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?player WHERE {
  ?team dbp:name ""England women's national football team""@en .
  ?team dbo:member ?player .
  ?player a dbo:SoccerPlayer .
}
```",2,3,3,2,1,3,2,20,0,0,180,0,0.0,0
826,25,train,"Give me the successor of Louis II, Grand Duke of Hesse and predecessor of the parent of Prince Friedrich of Hesse and by Rhine.","SELECT ?result WHERE { <http://dbpedia.org/resource/Louis_II,_Grand_Duke_of_Hesse> <http://dbpedia.org/ontology/successor> ?result . <http://dbpedia.org/resource/Prince_Friedrich_of_Hesse_and_by_Rhine> <http://dbpedia.org/ontology/parent> ?v1 . ?result <http://dbpedia.org/ontology/successor> ?v1 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?successor ?predecessor WHERE {
  # Successor of Louis II, Grand Duke of Hesse
  dbr:Louis_II,_Grand_Duke_of_Hesse dbo:succeededBy ?successor .

  # Parent of Prince Friedrich of Hesse and by Rhine is Prince Christoph of Hesse
  dbr:Friedrich_of_Hesse_and_by_Rhine dbo:father ?parent .
  
  # Predecessor of Prince Christoph in his title or position
  ?predecessor dbo:succeededBy ?parent .

  # Find the overlap between successor and predecessor
  FILTER (?successor = ?predecessor)
}
```",3,3,4,2,2,3,3,71,0,0,1,0,0.0,0
527,13,train,"Give me the actor of the movie, that is a work and English and a television show, with the professional in Actor.","SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?v1 <http://dbpedia.org/property/starring> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/TelevisionShow>. ?v1 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/United_Kingdom>. ?v0 <http://dbpedia.org/property/occupation> ""Actor""@en . ?v1 <http://dbpedia.org/property/starring> ?v0 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?actor WHERE {
  ?movie a dbo:Film ;
         dbo:genre ?genre .
  
  FILTER EXISTS { ?movie dbo:abstract ?abstract . FILTER (lang(?abstract) = ""en"") }
  FILTER EXISTS { ?movie a dbo:TelevisionShow }

  ?movie dbo:starring ?actor .
  ?actor a dbo:Actor .

  OPTIONAL {
    ?actor rdfs:label ?actorLabel .
    FILTER (LANG(?actorLabel) = ""en"")
  }
}
```",3,6,4,3,1,3,2,20,6,103,1466,0.05504587155963303,0.004076086956521739,0.007590132827324478
216,10,train,Give me the player in Igor Bišćan and team of Ognjen Vukojević.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/coach> <http://dbpedia.org/resource/Ognjen_Vukojević> . <http://dbpedia.org/resource/Igor_Bišćan> <http://dbpedia.org/ontology/team> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT DISTINCT ?bišćanTeam ?vukojevićPlayer WHERE {
  # Find the team Igor Bišćan played for
  ?bišćanTeam dbo:player ?bišćan .
  ?bišćan rdfs:label ""Igor Bišćan""@en .

  # Find the teams Ognjen Vukojević played for and their players
  ?vukojevićTeam dbo:player ?vukojević .
  ?vukojević rdfs:label ""Ognjen Vukojević""@en .
  
  ?vukojevićTeam dbo:player ?vukojevićPlayer .
}
```",2,2,3,1,2,3,3,71,0,0,1,0,0.0,0
136,0,train,Give me the region coded as 03834.,"SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/areaCode> ""03834"" . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?regionLabel WHERE {
  ?region a dbo:AdministrativeRegion ;
          dbp:postalCode ""03834"" .
  SERVICE wikibase:label { bd:serviceParam wikibase:language ""[AUTO_LANGUAGE],en"". }
}
```",1,1,2,1,1,2,2,9,0,0,9,0,0.0,0
465,1,train,Give me the spouse of Archduchess Barbara of Austria.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/spouse> <http://dbpedia.org/resource/Archduchess_Barbara_of_Austria> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?spouse WHERE {
  ?archduchess a dbo:Archduchess ;
               foaf:name ""Barbara of Austria""@en .
  OPTIONAL { 
    ?archduchess dbo:spouse ?spouse .
  }
}
```",1,1,2,1,1,3,3,71,0,0,1,0,0.0,0
791,15,train,"Give me the spouse, that is a royalty, of the reference to Emperor Takakura.","SELECT ?result WHERE { ?v1 <http://xmlns.com/foaf/0.1/name> ""Emperor Takakura""@en . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?result <http://dbpedia.org/ontology/spouse> ?v1 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?spouse ?title WHERE {
  ?emperor rdf:type dbo:Monarch ;
           rdfs:label ""Emperor Takakura""@en .
  
  ?emperor dbo:spouse ?spouse .

  OPTIONAL { 
    ?spouse dbp:title ?title .
  }

  FILTER (CONTAINS(LCASE(?title), ""empress"") || CONTAINS(LCASE(?title), ""princess""))
}
```",2,3,3,2,1,3,3,71,0,0,1,0,0.0,0
926,9,train,Give me the successor of Mustafa III and father of Mahmud II.,SELECT ?result WHERE { <http://dbpedia.org/resource/Mahmud_II> <http://dbpedia.org/property/father> ?result . <http://dbpedia.org/resource/Mustafa_III> <http://dbpedia.org/ontology/successor> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?successor ?father WHERE {
  # Find the successor of Mustafa III
  ?mustafa3 dbo:succeededBy ?successor .
  ?mustafa3 dbr:Mustafa_III .

  # Ensure this successor is also the father of Mahmud II
  ?successor dbo:child ?mahmud2 .
  ?mahmud2 dbr:Mahmud_II .

  # Bind the names for clarity in results
  ?successor rdfs:label ?nameSuccessor .
  FILTER(LANG(?nameSuccessor) = 'en')
  
  ?father rdfs:label ?nameFather .
  FILTER(LANG(?nameFather) = 'en')

  # Ensure that successor and father are the same entity
  BIND(?successor AS ?father)
}
```",2,2,3,1,2,3,3,71,0,0,1,0,0.0,0
645,1,train,Give me the military force of Spanish Civil War.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/battle> <http://dbpedia.org/resource/Spanish_Civil_War> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?force ?description WHERE {
  VALUES ?event { dbr:Spanish_Civil_War }
  
  ?force dbo:participatedIn ?event .
  OPTIONAL { ?force rdfs:comment ?description . FILTER (lang(?description) = 'en') }

  # Filter for known forces
  FILTER (
    strstarts(str(?force), ""dbr:"") &&
    (
      str(?force) = ""dbr:Republican_Francisco_Franco"" ||
      str(?force) = ""dbr:Nationalist_Francisco_Franco"" ||
      str(?force) = ""dbr:Spanish_Republicans_(1936–39)"" ||
      str(?force) = ""dbr:Nationalist_Spain""
    )
  )
}
ORDER BY ?force
```",1,1,2,1,1,3,3,71,0,0,514,0,0.0,0
353,1,train,Give me the entity in Russia.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Russia> . },"```sparql
SELECT DISTINCT ?entity WHERE {
  ?entity dbo:country dbr:Russia .
}
LIMIT 10
```",1,1,2,1,1,2,2,9,10,0,29917,1.0,0.00033414642296254217,0.0006680696128536594
83,5,train,Give me the player in the person born on 1995-07-07.,"SELECT ?result WHERE { ?v0 <http://dbpedia.org/ontology/birthDate> ""1995-07-07""^^<http://www.w3.org/2001/XMLSchema#date> . ?v0 <http://dbpedia.org/ontology/team> ?result . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?player WHERE {
  ?player a dbo:Person ;
          dbo:birthDate ""1995-07-07""^^xsd:date .
  
  OPTIONAL { 
    ?player dbo:sport dbr:Soccer . # Example for soccer, can be adjusted or expanded
  }
}
```",2,2,3,2,1,2,2,9,0,34,133,0.0,0.0,0
508,9,train,"Give me the commander, that is a politician, in the war, that is a military conflict and a societal event and an event, of Hayao Tada.",SELECT ?result WHERE { ?v0 <http://dbpedia.org/ontology/commander> ?result . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. <http://dbpedia.org/resource/Hayao_Tada> <http://dbpedia.org/ontology/battle> ?v0 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?commander WHERE {
  ?event dbo:type dbr:Military_conflict .
  ?event dbo:type dbr:Societal_event .
  ?event dbo:participatedIn dbr:Hayao_Tada .
  ?event dbo:commander ?commander .
  ?commander dbo:occupation dbr:Politician .
}
```",2,6,3,2,1,3,2,20,0,0,28,0,0.0,0
839,12,train,Give me the band of Peter Schorowsky and band of Matthias Röhr.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/bandMember> <http://dbpedia.org/resource/Matthias_Röhr> . ?result <http://dbpedia.org/ontology/bandMember> <http://dbpedia.org/resource/Peter_Schorowsky> . },"```sparql
# Query for Peter Schorowsky's band
SELECT ?band WHERE {
  ?person dbp:name ""Peter Schorowsky""@en .
  OPTIONAL { ?person dbp:band ?band . }
}

UNION

# Query for Matthias Röhr's band
SELECT ?band WHERE {
  ?person dbp:name ""Matthias Röhr""@en .
  OPTIONAL { ?person dbp:band ?band . }
}
```",2,2,3,1,2,3,3,71,0,0,1,0,0.0,0
573,7,train,Give me the work of John Quincy Adams.,SELECT ?result WHERE { ?result <http://dbpedia.org/property/author> <http://dbpedia.org/resource/John_Quincy_Adams> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?work WHERE {
  VALUES ?person { dbr:John_Quincy_Adams }
  ?person dbo:work ?work .
}
```",1,1,2,1,1,3,3,71,0,0,1,0,0.0,0
5,14,train,"Give me the entity in the award of the associated musical artist, that is a band, of Rubén Colón Tarrats.",SELECT ?result WHERE { ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Band>. ?v0 <http://dbpedia.org/property/awards> ?v2 . ?result <http://dbpedia.org/ontology/country> ?v2 . <http://dbpedia.org/resource/Rubén_Colón_Tarrats> <http://dbpedia.org/ontology/associatedMusicalArtist> ?v0 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?awardEntity WHERE {
  # Find Rubén Colón Tarrats as a person
  ?person rdfs:label ""Rubén Colón Tarrats""@en .
  
  # Identify any band he is associated with
  ?band dbo:member ?person ;
        rdf:type dbo:Band .

  # Find awards related to that band
  ?award dbo:recipient ?band ;
         rdf:type dbo:Award .

  # Get the entity of the award
  ?award rdfs:label ?awardEntity .
}
```",3,4,4,3,1,3,2,20,0,0,20990,0,0.0,0
495,8,train,Give me the father of the child of Princess Charlotte of Saxe-Hildburghausen.,SELECT ?result WHERE { ?v0 <http://dbpedia.org/ontology/parent> <http://dbpedia.org/resource/Princess_Charlotte_of_Saxe-Hildburghausen> . ?v0 <http://dbpedia.org/property/father> ?result . },"```sparql
SELECT ?father WHERE {
  wd:Q1234567 wdt:P40 ?child . # Princess Charlotte's children
  ?child wdt:P22 ?father .   # The father of the child
}
```

Note: `wd:Q1234567` should be replaced with the actual DBpedia resource identifier for Princess Charlotte of Saxe-Hildburghausen.",2,2,3,2,1,3,2,20,0,0,1,0,0.0,0
839,38,train,"Give me the band of the member of Böhse Onkelz and band of the band, that is a musical artist, of Charlie Huhn.",SELECT ?result WHERE { <http://dbpedia.org/resource/Charlie_Huhn> <http://dbpedia.org/ontology/associatedMusicalArtist> ?v2 . <http://dbpedia.org/resource/Böhse_Onkelz> <http://dbpedia.org/ontology/bandMember> ?v3 . ?result <http://dbpedia.org/ontology/bandMember> ?v3 . ?result <http://dbpedia.org/ontology/bandMember> ?v2 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. },"```sparql
# Step 1: Find a member of Böhse Onkelz
SELECT ?member WHERE {
  ?band dbr:Böhse_Onkelz .
  ?band dbo:bandMember ?member .
}

# Step 2: Find bands associated with both the identified member and Charlie Huhn
SELECT DISTINCT ?commonBand WHERE {
  # Replace 'http://dbpedia.org/resource/Name_of_Member' with actual URI of a Böhse Onkelz member found in step 1
  ?band dbo:bandMember <http://dbpedia.org/resource/Name_of_Member> .
  
  ?band dbo:bandMember dbr:Charlie_Huhn .

  # Ensure the band is recognized as a musical artist
  ?band rdf:type dbo:MusicalArtist .
}
```",4,5,5,2,2,3,3,71,0,0,1,0,0.0,0
773,18,train,Give me the parent of Carloman of Bavaria and spouse of Louis the German and parent of Charles the Fat.,SELECT ?result WHERE { <http://dbpedia.org/resource/Louis_the_German> <http://dbpedia.org/ontology/spouse> ?result . <http://dbpedia.org/resource/Charles_the_Fat> <http://dbpedia.org/ontology/parent> ?result . ?result <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Carloman_of_Bavaria> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?person WHERE {
  ?person dbo:spouse dbr:Louis_the_German .
  ?person dbo:child dbr:Carloman_of_Bavaria .
  ?person dbo:child dbr:Charles_the_Fat .
}
```",3,3,4,1,3,3,3,71,1,0,0,1.0,1.0,1.0
445,17,train,Give me the award of the commander in Battle of Saint-Mihiel.,SELECT ?result WHERE { <http://dbpedia.org/resource/Battle_of_Saint-Mihiel> <http://dbpedia.org/ontology/commander> ?v1 . ?v1 <http://dbpedia.org/property/awards> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?award WHERE {
  ?battle dbo:eventLocation ?location .
  ?battle dbo:commander ?commander .
  ?commander foaf:name ""John J. Pershing"" .
  ?battle rdfs:label ?battleLabel .
  FILTER(CONTAINS(LCASE(?battleLabel), ""battle of saint-mihiel"")) .

  OPTIONAL {
    ?commander dbo:honoraryTitle ?award .
  }
}
```",2,2,3,2,1,3,3,71,0,0,26,0,0.0,0
839,1,train,Give me the band of Peter Schorowsky.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/bandMember> <http://dbpedia.org/resource/Peter_Schorowsky> . },"```sparql
PREFIX dbp: <http://dbpedia.org/property/>
PREFIX dbo: <http://dbpedia.org/ontology/>

SELECT ?band WHERE {
  ?person foaf:name ""Peter Schorowsky""@en .
  ?person dbp:band ?band .
}
```",1,1,2,1,1,3,3,71,0,0,1,0,0.0,0
445,32,train,"Give me the entity in the residence, that is a country, of Anna Sharkey and death place of the awardee of Royal Astronomical Society.",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/location> ?v1 . <http://dbpedia.org/resource/Anna_Sharkey> <http://dbpedia.org/property/residence> ?v1 . ?v3 <http://dbpedia.org/ontology/deathPlace> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. ?v3 <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/Royal_Astronomical_Society> . },"```sparql
# Query to get the residence country of Anna Sharkey
SELECT ?residenceCountry WHERE {
  ?person foaf:name ""Anna Sharkey""@en .
  ?person dbo:residenceLocation ?location .
  ?location geo:hasCoordinate ?coordinate .
  ?location rdf:type dbo:Place .
  ?location dbo:country ?residenceCountry .
}

UNION

# Query to get the death place of an awardee of the Royal Astronomical Society
SELECT ?deathPlace WHERE {
  ?awardee dbo:award ""Royal Astronomical Society""@en .
  ?awardee dbo:placeOfDeath ?deathLocation .
  ?deathLocation rdf:type dbo:Place .
  ?deathLocation geo:hasCoordinate ?coordinate .
  ?deathLocation dbo:country ?deathCountry .
}

# Find the intersection where both are countries
SELECT DISTINCT ?entity WHERE {
  VALUES ?residenceCountry { ?residenceCountry }
  VALUES ?deathCountry { ?deathCountry }
  
  FILTER (?residenceCountry = ?deathCountry)
  BIND(?residenceCountry AS ?entity)
}
```",4,5,5,2,2,3,3,71,0,0,1,0,0.0,0
935,6,train,Give me the death place of Abdul Raziq Bugti and headquarter of Provincial Assembly of Balochistan.,SELECT ?result WHERE { <http://dbpedia.org/resource/Abdul_Raziq_Bugti> <http://dbpedia.org/ontology/deathPlace> ?result . <http://dbpedia.org/resource/Provincial_Assembly_of_Balochistan> <http://dbpedia.org/ontology/location> ?result . },"```sparql
# Query to get the death place of Abdul Raziq Bugti
SELECT ?deathPlace WHERE {
  dbpedia:Abdul_Razzaq_Bugti dbo:deathPlace ?deathPlace .
}

# Query to get the headquarter of the Provincial Assembly of Balochistan
SELECT ?headquarter WHERE {
  dbpedia:Provincial_Assembly_of_Balochistan dbo:headquarter ?headquarter .
}
```",2,2,3,1,2,3,2,20,0,0,1,0,0.0,0
166,2,train,"Give me the force, that is an event and a societal event and a military conflict, of Manuel Hedilla.",SELECT ?result WHERE { ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?result <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Manuel_Hedilla> . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?force WHERE {
  ?event dbo:wikiPageRedirects dbr:Manuel_Hedilla .
  ?event a dbo:Event ;
         dbo:socialEvent true ;
         dbo:militaryConflict true .
  
  OPTIONAL { ?event dbo:associatedForce ?force . }
}
```",1,4,2,1,1,3,2,20,0,0,1,0,0.0,0
36,11,train,Give me the person born as the birth name of Ayo Makun.,SELECT ?result WHERE { <http://dbpedia.org/resource/Ayo_Makun> <http://dbpedia.org/property/birthName> ?v1 . ?result <http://dbpedia.org/property/birthName> ?v1 . },"```sparql
# Step 1: Retrieve Ayo Makun's birth name
SELECT ?birthName WHERE {
  ?person rdfs:label ""Ayo Makun""@en .
  ?person foaf:name ?birthName .
  FILTER(LANG(?birthName) = 'en')
}

# Step 2: Find any other person with the same birth name
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT DISTINCT ?otherPerson WHERE {
  # Replace 'Ayo Makun's Birth Name' with the actual birth name obtained from Step 1
  ?person foaf:name ""Ayo Makun's Birth Name""@en .
  
  ?otherPerson foaf:name ""Ayo Makun's Birth Name""@en .
  FILTER(?person != ?otherPerson)
}
```",2,2,3,2,1,2,3,28,0,0,1,0,0.0,0
465,29,train,"Give me the successor of Ercole II d'Este, Duke of Ferrara and spouse of the child, that is a royalty, of Ferdinand I, Holy Roman Emperor and successor of Renée of France.","SELECT ?result WHERE { <http://dbpedia.org/resource/Ercole_II_d'Este,_Duke_of_Ferrara> <http://dbpedia.org/ontology/successor> ?result . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. <http://dbpedia.org/resource/Renée_of_France> <http://dbpedia.org/ontology/successor> ?result . ?result <http://dbpedia.org/ontology/spouse> ?v3 . <http://dbpedia.org/resource/Ferdinand_I,_Holy_Roman_Emperor> <http://dbpedia.org/ontology/child> ?v3 . }","```sparql
SELECT ?successor WHERE {
  wd:Q123456 wdt:P39 wd:Q789012 . # Ercole II d'Este is Duke of Ferrara (P39)
  wd:Q123457 wdt:P57 wd:Q789012 . # Alfonso II d'Este succeeded Ercole II d'Este
  ?marriage wdt:P26 wd:Q123457 ; # Marriage where Alfonso II is the groom
            wdt:P26 wd:Q987654 . # Maria of Inner Austria is the bride (child of Ferdinand I and Renée)
  ?person wdt:P31 wd:Q5 .        # Person is a human (P31)
  FILTER (?successor = wd:Q123457) # Alfonso II d'Este
}
```",4,5,5,2,3,3,3,71,0,0,1,0,0.0,0
791,9,train,Give me the spouse of Taira no Tokuko and predecessor of Emperor Antoku.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/spouse> <http://dbpedia.org/resource/Taira_no_Tokuko> . ?result <http://dbpedia.org/ontology/successor> <http://dbpedia.org/resource/Emperor_Antoku> . },"```sparql
SELECT ?spouse WHERE {
  dbpedia:Taira_no_Tokuko dbo:spouse ?spouse .
  ?spouse dbo:successor dbpedia:Emperor_Antoku .
}
```",2,2,3,1,2,3,3,71,0,0,1,0,0.0,0
582,37,train,"Give me the figure known as --10-19 and player in the father, that is an athlete and a soccer manager and a sports manager, of the child of Kazuaki Nagasawa.","SELECT ?result WHERE { ?v0 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Kazuaki_Nagasawa> . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Athlete>. ?result <http://dbpedia.org/property/nickname> ""--10-19""^^<http://www.w3.org/2001/XMLSchema#gMonthDay> . ?v0 <http://dbpedia.org/property/father> ?v3 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsManager>. ?v3 <http://dbpedia.org/ontology/team> ?result . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerManager>. }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT ?father WHERE {
  ?kazuaki a dbo:Person ;
           foaf:name ""Kazuaki Nagasawa""@en .
  
  ?child dbo:parent ?kazuaki ;
         dbo:parent ?father .

  ?father a dbo:Athlete ;
          dbo:sportTeamRole <http://dbpedia.org/resource/Soccer_manager> ;
          dbo:sportTeamRole <http://dbpedia.org/resource/Sports_manager> .

  FILTER (regex(str(?father), ""10-19"", ""i""))
}
```",4,7,5,3,2,3,3,71,0,0,1,0,0.0,0
41,0,train,Give me the party of Mark Durkan.,SELECT ?result WHERE { <http://dbpedia.org/resource/Mark_Durkan> <http://dbpedia.org/ontology/party> ?result . },"```sparql
SELECT ?party WHERE {
  ?person foaf:name ""Mark Durkan""@en .
  OPTIONAL { ?person dbp:party ?party . }
}
```",1,1,2,1,1,2,3,28,1,1,1,0.5,0.5,0.5
456,1,train,Give me the professional in .,"SELECT ?result WHERE { ?result <http://dbpedia.org/property/occupation> """"@en . }","```sparql
# This is a placeholder as the question lacks specificity.
SELECT ?person WHERE {
  # Example for ""medicine"" if specified:
  # ?person dbo:fieldOfStudy dbr:Medicine .
  # Add more conditions based on specific requirements.
}
```",1,1,2,1,1,3,3,71,0,0,39640,0,0.0,0
839,15,train,"Give me the person born, that is a musical artist, as the persona of Kevin Russell (musician).",SELECT ?result WHERE { ?result <http://dbpedia.org/property/birthName> ?v1 . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. <http://dbpedia.org/resource/Kevin_Russell_(musician)> <http://xmlns.com/foaf/0.1/givenName> ?v1 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?person ?birthDate WHERE {
  ?person dbo:wikiPageRedirects dbr:Kevin_Russell_(musician) .
  ?person dbo:birthDate ?birthDate .
  FILTER EXISTS { ?person a dbo:MusicalArtist . }
}
```",2,3,3,2,1,3,3,71,0,0,1,0,0.0,0
329,11,train,"Give me the entity in the birthplace, that is an organisation and a country, of Robert Bates (loyalist).",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/country> ?v1 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. <http://dbpedia.org/resource/Robert_Bates_(loyalist)> <http://dbpedia.org/ontology/birthPlace> ?v1 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?entity WHERE {
  # Step 1: Identify Robert Bates (loyalist)
  ?bates a dbo:Person ;
         foaf:name ""Robert Bates"" ;
         dbo:nationality dbr:Loyalist .

  # Step 2: Retrieve his birthplace
  ?bates dbo:birthPlace ?birthplace .

  # Step 3: Find entities related to the birthplace that are both an organization and a country
  ?entity dbo:location ?birthplace ;
          a dbo:Country, dbo:Organization .
}
```",2,4,3,2,1,2,3,28,0,0,846,0,0.0,0
987,30,train,"Give me the birth place of Moamer Kasumović and birth place of Dado Polumenta and entity in the region, that is a country, of Central European Time.",SELECT ?result WHERE { ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. <http://dbpedia.org/resource/Moamer_Kasumović> <http://dbpedia.org/ontology/birthPlace> ?result . ?result <http://dbpedia.org/ontology/country> ?v0 . <http://dbpedia.org/resource/Dado_Polumenta> <http://dbpedia.org/ontology/birthPlace> ?result . ?v0 <http://dbpedia.org/property/timeZone> <http://dbpedia.org/resource/Central_European_Time> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX geo: <http://www.w3.org/2003/01/geo/wgs84_pos#>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT DISTINCT ?moamerBirthPlace ?dadoBirthPlace ?countryName WHERE {
  # Find the birthplace of Moamer Kadhafi
  ?moamer dbo:birthPlace ?moamerBirthPlace .
  FILTER (str(?moamer) = ""Moamer_Kadhafi"")

  # Find the birthplace of Dado Polumenta
  ?dado dbo:birthPlace ?dadoBirthPlace .
  FILTER (str(?dado) = ""Dado_Polumenta"")

  # Find a country in the Central European Time region
  ?country a dbo:Country ;
           dbp:name ?countryName ;
           geo:timezone ?timezone .
  FILTER (str(?timezone) = ""Europe/Berlin"" || str(?timezone) = ""Europe/Brussels"")
}
```",4,5,5,2,3,3,3,71,0,0,1,0,0.0,0
865,25,train,Give me the father of AK Abdul Momen and father of the child of Abu Ahmad Abdul Hafiz.,SELECT ?result WHERE { <http://dbpedia.org/resource/AK_Abdul_Momen> <http://dbpedia.org/property/father> ?result . ?v0 <http://dbpedia.org/property/father> ?result . ?v0 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Abu_Ahmad_Abdul_Hafiz> . },"```sparql
# Query to find the father of AK Abdul Momen
SELECT ?father WHERE {
  ?person dbo:parent ?father .
  ?person foaf:name ""AK Abdul Momen""@en .
  ?father rdf:type dbo:Male .
}

UNION

# Query to find the father of the child of Abu Ahmad Abdul Hafiz
SELECT ?grandFather WHERE {
  ?child dbo:parent ?abuAhmad .
  ?abuAhmad foaf:name ""Abu Ahmad Abdul Hafiz""@en .
  ?child dbo:parent ?grandFather .
  ?grandFather rdf:type dbo:Male .
}
```",3,3,4,2,2,3,3,71,0,0,1,0,0.0,0
582,21,train,Give me the figure known as --10-19 and reference to the residence of Hirotaka Sugawara.,"SELECT ?result WHERE { ?result <http://xmlns.com/foaf/0.1/name> ?v1 . ?result <http://dbpedia.org/property/nickname> ""--10-19""^^<http://www.w3.org/2001/XMLSchema#gMonthDay> . <http://dbpedia.org/resource/Hirotaka_Sugawara> <http://dbpedia.org/property/residence> ?v1 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?residence WHERE {
  ?person rdfs:label ""Hirotaka Sugawara""@en .
  ?person dbo:residence ?residence .
}
```",3,3,4,2,2,3,3,71,0,0,1,0,0.0,0
382,5,train,Give me the award of Harry Combes.,SELECT ?result WHERE { <http://dbpedia.org/resource/Harry_Combes> <http://dbpedia.org/property/awards> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?award WHERE {
  VALUES ?person { dbr:Harry_Combes }
  ?person dbo:award ?award .
}
```",1,1,2,1,1,3,2,20,0,0,1,0,0.0,0
645,31,train,Give me the commander in the force of the commander in Siege of Madrid and military force of Spanish Civil War.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/battle> <http://dbpedia.org/resource/Spanish_Civil_War> . ?v0 <http://dbpedia.org/ontology/commander> ?v1 . <http://dbpedia.org/resource/Siege_of_Madrid> <http://dbpedia.org/ontology/commander> ?v1 . ?v0 <http://dbpedia.org/ontology/commander> ?result . },"```sparql
SELECT ?person WHERE {
  ?event dcterms:subject dbc:Siege_of_Madrid .
  ?event dbo:commander ?person .
  FILTER(CONTAINS(LCASE(?person), ""francisco franco"")) .

  OPTIONAL {
    ?war dbo:participatedInMilitaryConflict ?person ;
         rdfs:label ?label .
    FILTER(CONTAINS(LCASE(?label), ""spanish civil war"") && CONTAINS(LCASE(?person), ""francisco franco""))
  }
}
```",4,4,5,3,2,3,3,71,0,0,53,0,0.0,0
465,2,train,Give me the successor of Renée of France.,SELECT ?result WHERE { <http://dbpedia.org/resource/Renée_of_France> <http://dbpedia.org/ontology/successor> ?result . },"```sparql
SELECT ?successor WHERE {
  ?renée dbo:title ""Duchess of Ferrara""@en .
  ?renée foaf:name ""Renée of France"" .
  ?renée dbo:deathDate ?deathDate .

  ?successor dbo:title ""Duchess of Ferrara""@en .
  ?successor dbo:startDate ?startDate .
  
  FILTER (?startDate > ?deathDate)
}
ORDER BY ?startDate
LIMIT 1
```",1,1,2,1,1,3,3,71,0,0,1,0,0.0,0
236,2,train,"Give me the person decedent, that is a politician and an office holder, at Quincy, Massachusetts.","SELECT ?result WHERE { ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?result <http://dbpedia.org/ontology/deathPlace> <http://dbpedia.org/resource/Quincy,_Massachusetts> . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?person ?name WHERE {
  ?person dbo:occupation dbr:Politician .
  ?person dbo:officeHolder ?office .
  OPTIONAL { ?person foaf:name ?name . }
  FILTER EXISTS { 
    ?place a dbo:Place ;
           rdfs:label ""Quincy, Massachusetts""@en .
    ?person dbo:birthPlace ?place .
  }
}
ORDER BY ?name
LIMIT 1
```",1,3,2,1,1,3,2,20,0,0,3,0,0.0,0
839,0,train,Give me the band of Kevin Russell (musician).,SELECT ?result WHERE { <http://dbpedia.org/resource/Kevin_Russell_(musician)> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?band WHERE {
  ?person a dbo:Musician ;
          foaf:name ""Kevin Russell""@en .
  ?person dbo:memberOfBand ?band .
}
```",1,1,2,1,1,3,3,71,0,0,1,0,0.0,0
365,3,train,Give me the birth name of Symon Petliura.,SELECT ?result WHERE { <http://dbpedia.org/resource/Symon_Petliura> <http://dbpedia.org/property/birthName> ?result . },"```sparql
SELECT ?birthName WHERE {
  <http://dbpedia.org/resource/Symon_Petliura> dbo:birthName ?birthName .
}
```",1,1,2,1,1,3,2,20,1,0,0,1.0,1.0,1.0
465,31,train,"Give me the spouse of Archduchess Barbara of Austria and successor of the child of the parent of Ercole II d'Este, Duke of Ferrara.","SELECT ?result WHERE { ?v0 <http://dbpedia.org/property/father> ?v1 . ?result <http://dbpedia.org/ontology/spouse> <http://dbpedia.org/resource/Archduchess_Barbara_of_Austria> . ?v0 <http://dbpedia.org/ontology/successor> ?result . <http://dbpedia.org/resource/Ercole_II_d'Este,_Duke_of_Ferrara> <http://dbpedia.org/ontology/parent> ?v1 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?spouse WHERE {
  # Step 1: Identify Ercole II d'Este
  ?ercole2 rdf:type dbo:Duke ;
           foaf:name ""Ercole II d'Este"" ;
           dbo:parent ?parent .

  # Step 2: Find the parent of Ercole II d'Este
  ?parent dbo:child ?sibling .

  # Step 3: Determine the child (sibling) of this parent
  FILTER(?sibling != ?ercole2)

  # Step 4: Identify the successor of this sibling
  OPTIONAL { ?sibling dbo:successor ?successor . }

  # Step 5: Find Archduchess Barbara of Austria's spouse
  ?barbara rdf:type dbo:Archduchess ;
           foaf:name ""Barbara of Austria"" ;
           dbp:spouse ?spouse .

  FILTER(?sibling = ?successor)
}
```",4,4,5,3,2,3,3,71,0,0,1,0,0.0,0
124,11,train,"Give me the commander in the war, that is a societal event and a military conflict, of A Field Battery, Royal Australian Artillery.","SELECT ?result WHERE { <http://dbpedia.org/resource/A_Field_Battery,_Royal_Australian_Artillery> <http://dbpedia.org/ontology/battle> ?v0 . ?v0 <http://dbpedia.org/ontology/commander> ?result . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?war ?commander WHERE {
  VALUES ?unit { 
    dbr:A_Field_Battery_(Royal_Australian_Artillery) 
  }
  
  ?unit dbo:partOf ?conflict .
  ?conflict rdf:type dbo:MilitaryConflict .

  FILTER (
    ?conflict IN (dbr:World_War_I, dbr:World_War_II)
  )

  OPTIONAL {
    ?unit dbo:commander ?commander .
  }

  BIND(?conflict AS ?war)
}
```",2,4,3,2,1,3,3,71,0,0,109,0,0.0,0
839,26,train,"Give me the band of the member of the band, that is a band and a group, of Peter Schorowsky.",SELECT ?result WHERE { <http://dbpedia.org/resource/Peter_Schorowsky> <http://dbpedia.org/ontology/associatedMusicalArtist> ?v1 . ?result <http://dbpedia.org/ontology/bandMember> ?v2 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Band>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Group>. ?v1 <http://dbpedia.org/ontology/bandMember> ?v2 . },"```sparql
SELECT ?band WHERE {
  ?person foaf:name ""Peter Schorowsky""@en .
  ?membership dbo:member ?person ;
              dbo:bandOrMusicalArtist ?band .
  ?band a dbo:Band ;
        a dbo:Group .
  
  OPTIONAL { 
    ?subMembership dbo:bandOrMusicalArtist ?band ;
                   dbo:bandOrMusicalArtist ?subgroup .
    FILTER(?subgroup != ?band)
  }
}
```",3,5,4,3,1,3,3,71,0,0,1,0,0.0,0
102,14,train,"Give me the native of the residence, that is English and a settlement, of the resident, that is an athlete, of Dewsbury.",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/birthPlace> ?v0 . ?v0 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/United_Kingdom>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. ?v2 <http://dbpedia.org/property/residence> ?v0 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Athlete>. ?v2 <http://dbpedia.org/ontology/residence> <http://dbpedia.org/resource/Dewsbury> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT DISTINCT ?nativeLanguage
WHERE {
  # Step 1: Identify Dewsbury
  dbr:Dewsbury dbo:resident ?athlete .

  # Step 2: Ensure the athlete resides in an English settlement
  ?athlete dbo:residence ?settlement .
  ?settlement rdf:type dbo:Settlement ;
              rdfs:label ?label .
  
  FILTER (CONTAINS(LCASE(?label), ""england"") || CONTAINS(LCASE(?label), ""english""))

  # Step 3: Find the native language of this settlement
  ?settlement dbo:nativeLanguage ?nativeLanguage .
}
```",3,6,4,3,1,3,2,20,0,0,100,0,0.0,0
976,33,train,"Give me the office of the mayor, that is a politician and an office holder and Turkish, of the reference, that is an organisation and a political party and Turkish, to Millet İttifakı and office of Mustafa Şentop.","SELECT ?result WHERE { ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/PoliticalParty>. ?v2 <http://dbpedia.org/property/office> ?result . ?v0 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Turkey>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v2 <http://dbpedia.org/ontology/nationality> <http://dbpedia.org/resource/Turkey>. ?v0 <http://dbpedia.org/property/leader> ?v2 . <http://dbpedia.org/resource/Mustafa_Şentop> <http://dbpedia.org/property/office> ?result . ?v0 <http://xmlns.com/foaf/0.1/name> ""Millet İttifakı""@en . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?mayorOffice ?mustafaOffice WHERE {
  # Find the office of a mayor who is Turkish, a politician, and an office holder
  ?person dbo:nationality dbr:Turkey ;
          dbo:office ?mayorOffice ;
          rdf:type dbo:Politician ;
          dbo:occupation dbo:OfficeHolder .
  
  # Ensure the person is associated with Millet İttifakı as a political party
  ?party dbo:name ""Millet İttifakı""@tr ;
         dbo:member ?person .
  FILTER EXISTS { ?party rdf:type dbo:PoliticalParty }
  
  # Find the office held by Mustafa Şentop
  dbr:Mustafa_Şentop dbo:office ?mustafaOffice .
}
```",4,10,5,3,2,3,3,71,0,0,1,0,0.0,0
453,0,train,Give me the religion of Newfoundland Colony.,SELECT ?result WHERE { <http://dbpedia.org/resource/Newfoundland_Colony> <http://dbpedia.org/ontology/religion> ?result . },"```sparql
SELECT ?religion WHERE {
  ?colony rdfs:label ""Newfoundland Colony""@en .
  ?colony dbo:populationGroup ?group .
  ?group dbo:religion ?religion .
}
```",1,1,2,1,1,2,2,9,0,0,1,0,0.0,0
933,31,train,"Give me the reference to Alan Warner and band of the band of the band, that is an artist and a musical artist, of The Ramong Sound.","SELECT ?result WHERE { ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?v2 <http://dbpedia.org/ontology/associatedMusicalArtist> ?v0 . <http://dbpedia.org/resource/The_Ramong_Sound> <http://dbpedia.org/ontology/associatedMusicalArtist> ?v2 . ?result <http://xmlns.com/foaf/0.1/name> ""Alan Warner""@en . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. ?v0 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?band ?artist WHERE {
  # Find bands associated with Alan Warner
  ?band a dbo:Band ;
        dbo:member ?alanWarner .
  
  ?alanWarner foaf:name ""Alan Warner""@en .

  OPTIONAL {
    # Find artists or musical artists linked to The Rolling Stones
    ?artist a dbo:MusicalArtist ;
            dbo:associatedBand ?rollingStones .
    
    ?rollingStones foaf:name ""The Rolling Stones""@en .
  }
}
```",4,6,5,3,2,3,3,71,0,0,1,0,0.0,0
326,6,train,Give me the person decedent at France and resident of Berkshire.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/deathPlace> <http://dbpedia.org/resource/France> . ?result <http://dbpedia.org/property/residence> <http://dbpedia.org/resource/Berkshire> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>

SELECT ?person ?name WHERE {
  ?person a dbo:Person .
  ?person dbo:name ?name .
  ?person dbo:deathPlace ?deathPlace .
  ?person dbo:residence ?residence .

  FILTER (CONTAINS(LCASE(?deathPlace), ""france""))
  FILTER (CONTAINS(LCASE(?residence), ""berkshire""))

}
ORDER BY ?name
```",2,2,3,1,2,3,2,20,0,0,1,0,0.0,0
200,3,train,Give me the band of Revenge (Canadian band).,SELECT ?result WHERE { <http://dbpedia.org/resource/Revenge_(Canadian_band)> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?bandLabel WHERE {
  ?band a dbo:Band .
  ?band rdfs:label ""Revenge""@en .
  FILTER (LANG(?bandLabel) = 'en')
}
```",1,1,2,1,1,2,2,9,0,0,5,0,0.0,0
274,3,train,"Who is the person born, that is a musical artist, as John Birks Gillespie?","SELECT ?result WHERE { ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?result <http://dbpedia.org/property/birthName> ""John Birks Gillespie""@en . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?person WHERE {
  ?person dbo:birthName ""John Birks Gillespie""@en .
  OPTIONAL { ?person a dbo:MusicArtist . }
}
```",1,2,2,1,1,2,3,28,0,0,1,0,0.0,0
892,13,train,Give me the landmark at elevation of the award of Anna Ishii.,SELECT ?result WHERE { <http://dbpedia.org/resource/Anna_Ishii> <http://dbpedia.org/property/awards> ?v1 . ?result <http://dbpedia.org/ontology/elevation> ?v1 . },"```sparql
# Step 1: Find Anna Ishii and any awards she might have received.
SELECT ?award WHERE {
    ?person foaf:name ""Anna Ishii""@en .
    ?person dbo:awardReceived ?award .
}

# Assuming we find an award, let's say it has a property for elevation (hypothetical).
# Step 2: Find the elevation of the award (if such data exists).
SELECT ?elevation WHERE {
    ?award dbo:elevation ?elevation .
}

# Step 3: Find a landmark at this elevation.
SELECT ?landmark WHERE {
    ?landmark dbo:elevation ?elevation .
}
```

Note: The above query assumes that awards have an ""elevation"" property, which is not standard. Adjustments may be needed based on actual DBpedia schema and available data.",2,2,3,2,1,3,3,71,0,0,258,0,0.0,0
166,3,train,Who is the military force of Spanish Civil War?,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/battle> <http://dbpedia.org/resource/Spanish_Civil_War> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?group ?label WHERE {
  ?group a dbo:MilitaryUnit ;
         dbo:participatedIn dbr:Spanish_Civil_War .
  OPTIONAL { ?group rdfs:label ?label . FILTER (lang(?label) = 'en') }
}
```",1,1,2,1,1,3,2,20,0,0,514,0,0.0,0
456,32,train,Give me the professional in the alter ego of The Shadow and spouse of the actor of Pacific Drive.,SELECT ?result WHERE { <http://dbpedia.org/resource/The_Shadow> <http://dbpedia.org/property/alterEgo> ?v3 . <http://dbpedia.org/resource/Pacific_Drive> <http://dbpedia.org/property/starring> ?v1 . ?v1 <http://dbpedia.org/ontology/spouse> ?result . ?result <http://dbpedia.org/property/occupation> ?v3 . },"```sparql
# Step 1: Find Orson Welles as The Shadow
SELECT ?orsonWelles WHERE {
  ?shadow rdf:type dbo:FictionalCharacter .
  ?shadow dbo:alterEgo ""The Shadow"" .
  ?shadow dbo:portrayedBy ?actor .
  ?actor foaf:name ""Orson Welles""@en .
}

# Step 2: Find the actor associated with Pacific Drive
SELECT ?pacificActor WHERE {
  ?movie dbo:title ""Pacific Drive""@en .
  ?movie dbo:starring ?actor .
  ?actor foaf:name ?name .
}

# Step 3: Find the spouse of the actor from Pacific Drive
SELECT ?spouse WHERE {
  ?pacificActor dbo:spouse ?spouse .
}
```",4,4,5,2,2,3,3,71,0,0,2,0,0.0,0
508,1,train,Give me the birthplace of Ma Bufang.,SELECT ?result WHERE { <http://dbpedia.org/resource/Ma_Bufang> <http://dbpedia.org/ontology/birthPlace> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?birthPlace WHERE {
  dbr:Ma_Bufang dbo:birthPlace ?birthPlace .
}
```",1,1,2,1,1,3,2,20,3,0,0,1.0,1.0,1.0
98,18,train,"Give me the entity in the region, that is a country, of Philippine Standard Time and birth place of Paolo Ballesteros.",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/country> ?v1 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. <http://dbpedia.org/resource/Paolo_Ballesteros> <http://dbpedia.org/ontology/birthPlace> ?result . ?v1 <http://dbpedia.org/property/timeZone> <http://dbpedia.org/resource/Philippine_Standard_Time> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?country WHERE {
  ?person dbo:birthPlace ?country .
  FILTER (?person = dbr:Paolo_Ballesteros) .
  
  ?country dbo:timeZone dbr:Philippine_Standard_Time .
}
```",3,4,4,2,2,2,3,28,2,0,0,1.0,1.0,1.0
573,22,train,"Give me the person decedent at Massachusetts and parent of the author, that is a politician and an office holder, of Exchequer Standards.",SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v1 <http://dbpedia.org/ontology/parent> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?result <http://dbpedia.org/ontology/deathPlace> <http://dbpedia.org/resource/Massachusetts> . <http://dbpedia.org/resource/Exchequer_Standards> <http://dbpedia.org/property/author> ?v1 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?person WHERE {
  # Find the author of ""Exchequer Standards""
  ?author dbo:work dbr:Exchequer_Standards .
  
  # Identify the parent(s) of this author
  ?parent dbo:child ?author .

  # Ensure the parent is a politician and an office holder
  ?parent dbo:occupation dbr:Politician ;
          dbo:officeHolder true .

  # Check if the person has a connection to Massachusetts as a decedent
  OPTIONAL { ?person dbp:placeOfDeath dbr:Massachusetts . }

  FILTER (?parent = ?person)
}
```",3,5,4,2,2,3,3,71,0,0,2,0,0.0,0
976,24,train,"Give me the office of the mayor, that is a politician and an office holder and Turkish, of Nation Alliance (Turkey) and office of Naci Bostancı.",SELECT ?result WHERE { ?v2 <http://dbpedia.org/property/office> ?result . ?v2 <http://dbpedia.org/ontology/nationality> <http://dbpedia.org/resource/Turkey>. <http://dbpedia.org/resource/Naci_Bostancı> <http://dbpedia.org/property/office> ?result . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. <http://dbpedia.org/resource/Nation_Alliance_(Turkey)> <http://dbpedia.org/property/leader> ?v2 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?office WHERE {
  ?person a dbo:Politician ;
          dbo:nationality dbr:Turkey ;
          dbo:partyAffiliation dbr:Nation_Alliance_(Turkey) .
  
  ?person dbo:occupation ?office .
  FILTER (?office = dbo:Mayor || ?office = dbo:Municipal_Officer)
  
  OPTIONAL {
    ?person rdfs:label ""Naci Bostancı""@en .
  }
}
```",3,6,4,2,2,3,3,71,0,0,1,0,0.0,0
326,2,train,Who is the professional in Writer?,"SELECT ?result WHERE { ?result <http://dbpedia.org/property/occupation> ""Writer""@en . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT ?person ?name WHERE {
  ?person a dbo:Writer .
  ?person foaf:name ?name .
  FILTER (lang(?name) = 'en')
}
ORDER BY ?name
LIMIT 10
```",1,1,2,1,1,3,2,20,1,10,6465,0.09090909090909091,0.0001546551190844417,0.00030878493129535284
274,13,train,"Give me the professional in  and band member of the person born, that is a musical artist, as John Birks Gillespie.","SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?result <http://dbpedia.org/property/occupation> """"@en . ?v1 <http://dbpedia.org/property/birthName> ""John Birks Gillespie""@en . ?result <http://dbpedia.org/ontology/associatedMusicalArtist> ?v1 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?professionalRole ?bandMember 
WHERE {
  VALUES ?gillespie { dbr:Dizzy_Gillespie }
  
  ?gillespie dbo:birthName ""John Birks Gillespie""@en .
  ?gillespie dbo:profession ?professionalRole .
  OPTIONAL { ?gillespie dbo:bandMembership ?bandMember . }
}
```",3,4,4,2,2,2,3,28,0,0,8,0,0.0,0
826,33,train,"Give me the successor of the child, that is a royalty, of the reference, that is a royalty, to Louis I and spouse of Anna Magdalena Appel.","SELECT ?result WHERE { ?v3 <http://dbpedia.org/ontology/successor> ?result . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. <http://dbpedia.org/resource/Anna_Magdalena_Appel> <http://dbpedia.org/ontology/spouse> ?result . ?v0 <http://dbpedia.org/ontology/child> ?v3 . ?v0 <http://xmlns.com/foaf/0.1/name> ""Louis I""@en . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. }","```sparql
SELECT ?successor WHERE {
  ?louis1 rdf:type dbo:Monarch ;
          foaf:name ""Louis I""@en .
  ?annaMagdalenaAppel foaf:name ""Anna Magdalena Appel""@en ;
                      dbo:spouse ?louis1 .
  
  ?child dbo:parent ?louis1 ;
         rdf:type dbo:RoyalFamilyMember .

  ?successor dbo:predecessor ?child .
}
```",4,6,5,3,2,3,3,71,0,0,1,0,0.0,0
933,8,train,"Give me the band, that is a group and a band and an organisation, of Alan Warner (musician).",SELECT ?result WHERE { ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Group>. <http://dbpedia.org/resource/Alan_Warner_(musician)> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Band>. ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?band WHERE {
  ?band a dbo:Band ;
        dbo:member dbr:Alan_Warner_(musician) .
  
  OPTIONAL { 
    ?band a dbo:Organization .
  }
}
```",1,4,2,1,1,3,3,71,0,0,2,0,0.0,0
839,14,train,"Give me the band of the band, that is a musical artist, of Charlie Huhn.",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/bandMember> ?v1 . <http://dbpedia.org/resource/Charlie_Huhn> <http://dbpedia.org/ontology/associatedMusicalArtist> ?v1 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?band WHERE {
  ?person a dbo:MusicalArtist ;
          foaf:name ""Charlie Huhn""@en .
  
  OPTIONAL { ?person dbo:memberOfBand ?band . }
}
```",2,3,3,2,1,3,3,71,0,0,2,0,0.0,0
507,6,train,"Give me the movie, that is a movie and a work, with Beryl Reid.",SELECT ?result WHERE { ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Film>. ?result <http://dbpedia.org/property/starring> <http://dbpedia.org/resource/Beryl_Reid> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?movie WHERE {
  ?movie a dbo:Film ;
         dbo:starring dbr:Beryl_Reid .
}
```",1,3,2,1,1,3,3,71,9,2,0,0.8181818181818182,1.0,0.9
170,18,train,Give me the domain of the profession of John Scholey and birth place of Era Ziganshina.,SELECT ?result WHERE { <http://dbpedia.org/resource/Era_Ziganshina> <http://dbpedia.org/ontology/birthPlace> ?result . <http://dbpedia.org/resource/John_Scholey> <http://dbpedia.org/property/occupation> ?v2 . ?result <http://dbpedia.org/ontology/leaderTitle> ?v2 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?domainOfJohnScholeyOccupation (SAMPLE(?birthPlaceEraZiganshina) AS ?birthPlaceEraZiganshina)
WHERE {
  # Find the domain of John Scholey's occupation
  ?johnScholey dbo:occupation ?occupation .
  ?occupation dbo:domainOf ?domainOfJohnScholeyOccupation .

  # Find Era Ziganshina's birthplace
  dbp:Era_Ziganshina dbo:birthPlace ?birthPlaceEraZiganshina .
}
```",3,3,4,2,2,2,3,28,0,0,1,0,0.0,0
933,33,train,Give me the reference to the birth name of the professional in Musician and band of Mike Elliott (saxophonist).,SELECT ?result WHERE { ?v0 <http://dbpedia.org/property/occupation> <http://dbpedia.org/resource/Musician> . ?result <http://xmlns.com/foaf/0.1/name> ?v2 . ?v0 <http://dbpedia.org/property/birthName> ?v2 . <http://dbpedia.org/resource/Mike_Elliott_(saxophonist)> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?birthName WHERE {
  dbr:Mike_Elliott (dbo:birthName) ?birthName .
}
```",4,4,5,3,2,3,3,71,0,0,1,0,0.0,0
453,6,train,"Give me the religion of the author, that is a cardinal and a cleric, of Apologia Pro Vita Sua.",SELECT ?result WHERE { ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Cleric>. <http://dbpedia.org/resource/Apologia_Pro_Vita_Sua> <http://dbpedia.org/property/author> ?v0 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Cardinal>. ?v0 <http://dbpedia.org/ontology/religion> ?result . },"```sparql
SELECT ?religion WHERE {
  ?author foaf:name ""John Henry Newman""@en .
  ?author dbo:book dbp:Apologia_Pro_Vita_Sua .
  ?author dbo:position dbr:Cardinal .
  ?author dbo:occupation dbr:Cleric .
  ?author dbo:religion ?religion .
}
```",2,4,3,2,1,2,2,9,0,0,2,0,0.0,0
417,16,train,"Who is the father of the leader, that is a royalty, of Colony of Greenland?",SELECT ?result WHERE { ?v1 <http://dbpedia.org/property/father> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. <http://dbpedia.org/resource/Colony_of_Greenland> <http://dbpedia.org/property/leader> ?v1 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?leader ?father WHERE {
  # Find a person who was a leader (monarch) of Greenland
  ?leader dbo:country dbr:Greenland .
  ?leader dbo:title ?title .
  
  FILTER(CONTAINS(LCASE(?title), ""king"") || CONTAINS(LCASE(?title), ""queen""))
  
  # Ensure the leader is royalty
  ?leader dbo:royalHouse ?house .

  # Find the father of this leader
  ?leader dbo:father ?father .
}
```",2,3,3,2,1,3,3,71,0,0,1,0,0.0,0
433,15,train,"Give me the person born, that is a musical artist and an artist, as the persona of Paul Chambers.",SELECT ?result WHERE { ?result <http://dbpedia.org/property/birthName> ?v1 . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. <http://dbpedia.org/resource/Paul_Chambers> <http://xmlns.com/foaf/0.1/givenName> ?v1 . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?person WHERE {
  ?person a dbo:MusicalArtist .
  ?person dbo:genre dbr:Jazz . # Assuming we are looking for jazz artists similar to Paul Chambers
  ?person dbo:occupation dbr:Artist . # Looking for those who are also recognized as artists in general
  FILTER(CONTAINS(LCASE(?personLabel), ""paul chambers"")) # This is a placeholder; adjust based on actual persona recognition if needed
}
```",2,4,3,2,1,3,3,71,0,0,1,0,0.0,0
41,10,train,Give me the party of the person born as David Declan Costello.,"SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/party> ?result . ?v1 <http://dbpedia.org/property/birthName> ""David Declan Costello""@en . }","```sparql
PREFIX dbpedia-owl: <http://dbpedia.org/ontology/>
PREFIX dbpprop: <http://dbpedia.org/property/>

SELECT ?party WHERE {
  ?person rdfs:label ""David Declan Costello""@en .
  ?person dbpprop:party ?party .
}
```",2,2,3,2,1,2,3,28,0,0,1,0,0.0,0
445,0,train,Give me the entity in England.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/location> <http://dbpedia.org/resource/England> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>

SELECT ?entity ?label WHERE {
  ?entity dbo:country dbr:England .
  SERVICE wikibase:label { bd:serviceParam wikibase:language ""[AUTO_LANGUAGE],en"". }
}
LIMIT 10
```",1,1,2,1,1,3,3,71,0,0,3546,0,0.0,0
129,11,train,Give me the associated musical artist of the person born as Tahj Malik Chandler.,"SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v1 <http://dbpedia.org/property/birthName> ""Tahj Malik Chandler""@en . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?artist WHERE {
  ?game a dbo:MusicalArtist ;
        foaf:name ""The Game"" .
  
  OPTIONAL { 
    ?game dbo:associatedBandOrMusicalGroup ?artist .
  }
}
```",2,2,3,2,1,2,3,28,0,0,8,0,0.0,0
281,8,train,"Give me the commander in the war, that is an event and a military conflict, of Roy Boehm.",SELECT ?result WHERE { <http://dbpedia.org/resource/Roy_Boehm> <http://dbpedia.org/ontology/battle> ?v1 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v1 <http://dbpedia.org/ontology/commander> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?war ?commander WHERE {
  # Find military conflicts (wars) associated with Roy Boehm
  ?boehm dbo:occupation dbr:Military_person .
  ?boehm foaf:name ""Roy Boehm"" .
  
  ?boehm dbo:participatedIn ?event .
  ?event a dbo:MilitaryConflict .

  # Find the commander of each military conflict
  ?event dbo:commander ?commander .
  
  # Return the war and its commander
  ?war rdfs:label ?warLabel .
  FILTER (lang(?warLabel) = 'en')
  BIND(IRI(CONCAT(""http://dbpedia.org/resource/"", REPLACE(LCASE(STR(?warLabel)), "" "", ""_""))) AS ?war)
}
```",2,4,3,2,1,2,3,28,0,0,171,0,0.0,0
508,4,train,"Give me the war, that is a military conflict and a societal event, of Hu Yukun.",SELECT ?result WHERE { ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. <http://dbpedia.org/resource/Hu_Yukun> <http://dbpedia.org/ontology/battle> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?war WHERE {
  ?person dbo:nationality dbr:China .
  ?person rdfs:label ""Hu Yukun""@en .
  ?event dbo:agent ?person ;
         a dbo:MilitaryConflict ;
         dbo:socialEvent true .
  ?event rdfs:label ?war .
}
```",1,3,2,1,1,3,2,20,0,0,4,0,0.0,0
976,9,train,Give me the office of Mustafa Şentop and office of Meral Akşener.,SELECT ?result WHERE { <http://dbpedia.org/resource/Mustafa_Şentop> <http://dbpedia.org/property/office> ?result . <http://dbpedia.org/resource/Meral_Akşener> <http://dbpedia.org/property/office> ?result . },"```sparql
# Query for Mustafa Şentop's offices
SELECT ?office WHERE {
  wd:Q123456 dbo:office ?office .
}

UNION

# Query for Meral Akşener's offices
SELECT ?office WHERE {
  wd:Q654321 dbo:office ?office .
}
```

Note: Replace `wd:Q123456` with the actual DBpedia resource ID for Mustafa Şentop and `wd:Q654321` with the actual DBpedia resource ID for Meral Akşener. You can find these IDs by searching their names on DBpedia or using a SPARQL endpoint to query for them.",2,2,3,1,2,3,3,71,0,0,1,0,0.0,0
826,38,train,"Give me the predecessor of the parent of Prince Friedrich of Hesse and by Rhine and successor of the child, that is a royalty, of Louis I, Grand Duke of Hesse.","SELECT ?result WHERE { <http://dbpedia.org/resource/Prince_Friedrich_of_Hesse_and_by_Rhine> <http://dbpedia.org/ontology/parent> ?v2 . <http://dbpedia.org/resource/Louis_I,_Grand_Duke_of_Hesse> <http://dbpedia.org/ontology/child> ?v3 . ?v3 <http://dbpedia.org/ontology/successor> ?result . ?result <http://dbpedia.org/ontology/successor> ?v2 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?predecessor WHERE {
  # Step 1: Identify Prince Friedrich of Hesse and by Rhine
  ?friedrich a dbo:Person ;
             rdfs:label ""Prince Friedrich of Hesse and by Rhine""@en .

  # Step 2: Find his parent
  ?parent dbo:child ?friedrich .

  # Step 3: Determine the predecessor of this parent
  ?predecessor dbo:succeededBy ?parent .

  # Step 4: Identify Louis I, Grand Duke of Hesse
  ?louis a dbo:Person ;
         rdfs:label ""Louis I, Grand Duke of Hesse""@en .

  # Step 5: Find his child that is royalty
  ?royalChild dbo:child ?louis ;
              a dbo:Monarch .

  # Step 6: Determine the successor of this royal child
  ?successor dbo:succeededBy ?royalChild .

  # Step 7: Combine the results to find the common individual
  FILTER (?predecessor = ?successor)
}
```",4,5,5,2,2,3,3,71,0,0,1,0,0.0,0
459,11,train,Give me the person born as the birth name of Kevin Stitt.,SELECT ?result WHERE { ?result <http://dbpedia.org/property/birthName> ?v1 . <http://dbpedia.org/resource/Kevin_Stitt> <http://dbpedia.org/property/birthName> ?v1 . },"```sparql
PREFIX foaf: <http://xmlns.com/foaf/0.1/>
SELECT ?birthName WHERE {
  ?person a foaf:Person ;
          foaf:name ""Kevin Stitt""@en .
  OPTIONAL { 
    ?person foaf:givenName ?givenName .
    ?person foaf:familyName ?familyName .
    BIND(CONCAT(?givenName, "" "", ?familyName) AS ?birthName)
  }
}
```",2,2,3,2,1,2,3,28,0,0,1,0,0.0,0
495,0,train,Give me the child of Frederick I of Württemberg.,SELECT ?result WHERE { ?result <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Frederick_I_of_Württemberg> . },"```sparql
SELECT ?child WHERE {
  ?person dbo:spouse ?spouse .
  ?spouse foaf:name ""Frederick I of Württemberg""@en .
  ?person dbo:child ?child .
}
```",1,1,2,1,1,3,2,20,0,0,3,0,0.0,0
130,13,train,"Give me the figure known as the film, that is a soccer club and an organisation, of the native, that is a coach and a college coach, of Madison, Alabama.","SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerClub>. ?v0 <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Madison,_Alabama> . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/CollegeCoach>. ?result <http://dbpedia.org/property/nickname> ?v1 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Coach>. ?v1 <http://dbpedia.org/ontology/director> ?v0 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. }","```sparql
SELECT ?person ?film WHERE {
  ?person dbo:birthPlace dbr:Madison,_Alabama ;
          dbo:occupation dbr:Coolie .
  OPTIONAL { ?person foaf:name ?name . }
  
  ?association dbo:associatedWith ?person ;
               a dbo:SoccerClub ;
               rdfs:label ?clubLabel .
  
  ?film dbo:title ?clubLabel .
}
```",3,7,4,3,1,3,2,20,0,0,3,0,0.0,0
124,15,train,"Give me the war, that is a societal event and a military conflict, of the reference, that is Australian and an organisation and a military unit, to 'A' Battery, Royal Australian Artillery.","SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryUnit>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v1 <http://dbpedia.org/ontology/battle> ?result . ?v1 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Australia>. ?v1 <http://xmlns.com/foaf/0.1/name> ""'A' Battery, Royal Australian Artillery""@en . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?war WHERE {
  ?war a dbo:MilitaryConflict ;
      a dbo:SocietalEvent .
  
  ?unit dbo:country dbr:Australia ;
        rdfs:label ""A Battery, Royal Australian Artillery""@en .

  ?unit dbo:participatedIn ?war .
}
```",2,7,3,2,1,3,3,71,0,0,6,0,0.0,0
166,8,train,"Give me the entity in the territory administered, that is a country, from Madrid.",SELECT ?result WHERE { ?v0 <http://dbpedia.org/ontology/capital> <http://dbpedia.org/resource/Madrid> . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. ?result <http://dbpedia.org/ontology/country> ?v0 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?entity WHERE {
  ?entity dbo:capital dbr:Madrid .
  ?entity a dbo:Country .
}
```",2,3,3,2,1,3,2,20,0,15,12023,0.0,0.0,0
826,35,train,Give me the spouse of the child of Johann Heinrich Appel and predecessor of the parent of Prince Friedrich of Hesse and by Rhine.,"SELECT ?result WHERE { ?v2 <http://dbpedia.org/ontology/spouse> ?result . ?v2 <http://dbpedia.org/property/father> ""Johann Heinrich Appel""@en . ?result <http://dbpedia.org/ontology/successor> ?v1 . <http://dbpedia.org/resource/Prince_Friedrich_of_Hesse_and_by_Rhine> <http://dbpedia.org/ontology/parent> ?v1 . }","```sparql
# Step 1: Find Johann Heinrich Appel's child
SELECT ?child WHERE {
    ?appel dbo:spouse ?partner .
    ?partner dbo:child ?child .
    FILTER(CONTAINS(LCASE(?appel), ""johann heinrich appel""))
}

# Assuming we have identified a specific child, let's call it :ChildID

# Step 2: Find the spouse of Johann Heinrich Appel's child
SELECT ?spouse WHERE {
    :ChildID dbo:spouse ?spouse .
}

# Assuming we have identified a specific spouse, let's call it :SpouseID

# Step 3: Identify Prince Friedrich of Hesse and by Rhine's parent
SELECT ?parent WHERE {
    dbpedia:Prince_Friedrich_of_Hesse_and_by_Rhine dbo:parent ?parent .
}

# Assuming we have identified a specific parent, let's call it :ParentID

# Step 4: Determine the predecessor of that parent
SELECT ?predecessor WHERE {
    ?parent dbo:predecessor ?predecessor .
}

# Assuming we have identified a specific predecessor, let's call it :PredecessorID

# Step 5: Ensure the spouse from step 2 is connected through this predecessor relationship
SELECT ?spouse WHERE {
    :SpouseID dbo:relatedTo ?PredecessorID .
}
```

Note: The above SPARQL queries are structured to be executed sequentially, with each step depending on the results of the previous one. In practice, you would need to replace placeholders like `:ChildID`, `:SpouseID`, `:ParentID`, and `:PredecessorID` with actual values obtained from executing the queries.",4,4,5,2,2,3,3,71,0,0,1,0,0.0,0
170,14,train,Give me the entity in Russia and birth place of the awardee of People's Artist of Russia.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Russia> . ?v2 <http://dbpedia.org/ontology/birthPlace> ?result . ?v2 <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/People's_Artist_of_Russia> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?person ?entityInRussia ?birthPlace WHERE {
  ?person dbo:title ""People's Artist of Russia""@ru .
  OPTIONAL { ?person dbo:birthPlace ?birthPlace . }
  OPTIONAL { ?person dbo:residenceLocation ?entityInRussia . FILTER (regex(str(?entityInRussia), ""Russia"")) }
}
```",3,3,4,2,2,2,3,28,0,0,12,0,0.0,0
216,10,train,Give me the party of the awardee of Australian Defence Medal.,SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/party> ?result . ?v1 <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/Australian_Defence_Medal> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?person ?party WHERE {
  ?person dbo:award dbr:Australian_Defence_Medal .
  OPTIONAL { 
    ?person dbo:politicalParty ?party .
  }
}
```",2,2,3,2,1,2,3,28,0,7,5,0.0,0.0,0
888,2,train,Give me the military force of War in Donbas (2014–2022).,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/battle> <http://dbpedia.org/resource/War_in_Donbas_(2014–2022)> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?militaryForce WHERE {
  VALUES ?conflict { 
    dbr:War_in_Donbas_(2014–2022) 
  }
  
  # Ukrainian Armed Forces
  OPTIONAL {
    ?ukraineMilitary dbo:participatedIn ?conflict .
    ?ukraineMilitary rdfs:label ?militaryForce .
    FILTER (lang(?militaryForce) = ""en"")
  }

  # Donetsk People's Republic
  OPTIONAL {
    ?donetskRepublic dbo:participatedIn ?conflict .
    ?donetskRepublic rdfs:label ?militaryForce .
    FILTER (lang(?militaryForce) = ""en"")
  }
  
  # Luhansk People's Republic
  OPTIONAL {
    ?luhanskRepublic dbo:participatedIn ?conflict .
    ?luhanskRepublic rdfs:label ?militaryForce .
    FILTER (lang(?militaryForce) = ""en"")
  }
}
```",1,1,2,1,1,3,2,20,0,0,135,0,0.0,0
715,39,train,"Give me the commander in Spanish Civil War and leader of the office, that is a government agency and an organisation, of the reference to Carlos Franco Iribarnegaray.","SELECT ?result WHERE { <http://dbpedia.org/resource/Spanish_Civil_War> <http://dbpedia.org/ontology/commander> ?result . ?v0 <http://dbpedia.org/property/office> ?v1 . ?v1 <http://dbpedia.org/ontology/leader> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/GovernmentAgency>. ?v0 <http://xmlns.com/foaf/0.1/name> ""Carlos Franco Iribarnegaray""@en . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?person ?role ?organization WHERE {
  VALUES ?person { dbr:Franco }
  
  # Find roles related to the Spanish Civil War and leadership positions
  ?person dbo:occupation ?role .
  FILTER CONTAINS(LCASE(?role), ""commander"" || ""leader"")
  
  # Check for association with Carlos Franco Iribarnegaray
  OPTIONAL {
    ?organization dbo:head ?person .
    ?organization rdfs:label ?orgLabel .
    FILTER(CONTAINS(LCASE(?orgLabel), ""falange española tradicionalista y de las jons""))
  }
  
  # Ensure the organization is a government agency and an organization
  ?organization a dbo:GovernmentAgency ;
                a dbo:Organization .
}
```",4,6,5,3,2,3,3,71,0,0,1,0,0.0,0
456,11,train,Give me the spouse of the actor of Pacific Drive.,SELECT ?result WHERE { ?v0 <http://dbpedia.org/ontology/spouse> ?result . <http://dbpedia.org/resource/Pacific_Drive> <http://dbpedia.org/property/starring> ?v0 . },"```sparql
SELECT ?actor ?spouse WHERE {
  # Find the movie ""Pacific Drive""
  ?movie dbo:title ""Pacific Drive""@en .
  
  # Find actors starring in this movie
  ?movie dbo:starring ?actor .

  # Get the spouse of each actor
  OPTIONAL { ?actor dbo:spouse ?spouse . }
}
```",2,2,3,2,1,3,3,71,0,0,4,0,0.0,0
216,3,train,"Give me the reference, that is an organisation and a soccer club, to Croatia U21.","SELECT ?result WHERE { ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerClub>. ?result <http://xmlns.com/foaf/0.1/name> ""Croatia U21""@en . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>

SELECT ?club WHERE {
  ?team dbo:team ?club .
  ?team rdfs:label ""Croatia national under-21 football team""@en .
  ?club rdf:type dbo:SoccerClub ;
        rdf:type dbo:Organization .
}
```",1,3,2,1,1,3,3,71,0,0,1,0,0.0,0
892,27,train,"Give me the entity in the administration, that is Italian and a region and a settlement and an administrative region, of the party, that is a political party and an organisation, of Andrea Cozzolino.",SELECT ?result WHERE { ?v0 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Italy>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. ?result <http://dbpedia.org/ontology/province> ?v0 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?v0 <http://dbpedia.org/property/leaderParty> ?v1 . <http://dbpedia.org/resource/Andrea_Cozzolino> <http://dbpedia.org/ontology/party> ?v1 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Region>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/PoliticalParty>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/AdministrativeRegion>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?region WHERE {
  # Step 1: Identify Andrea Cozzolino's political party
  ?party dbo:member dbr:Andrea_Cozzolino .
  
  # Step 2: Ensure the entity is a political party and an organisation
  ?party rdf:type dbo:PoliticalParty ;
         rdf:type dbo:Organisation .

  # Step 3: Find Italian regions that are also settlements and administrative regions
  ?region rdf:type dbo:Region ;
          rdf:type dbo:Settlement ;
          rdf:type dbo:AdministrativeRegion ;
          dbo:country dbr:Italy .
  
  # Step 4: Link the political party to the region through DBpedia properties
  ?party dbo:administrativeRegion ?region .
}
```",3,9,4,3,1,3,3,71,0,0,587,0,0.0,0
935,14,train,"Give me the headquarter of the office of the native of Balochistan, Pakistan.","SELECT ?result WHERE { ?v2 <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Balochistan,_Pakistan> . ?v0 <http://dbpedia.org/ontology/location> ?result . ?v2 <http://dbpedia.org/property/office> ?v0 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?governor ?officeLocation WHERE {
  ?governor a dbo:Governor ;
           dbo:stateOrProvince dbr:Balochistan_(province) .
  OPTIONAL { ?governor dbo:officeLocation ?officeLocation . }
}
```",3,3,4,3,1,3,2,20,0,0,1,0,0.0,0
93,11,train,"Give me the capital of the headquarter, that is a region and a settlement, of Lake Clark National Park and Preserve and death place of John Weir Troy.",SELECT ?result WHERE { ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Region>. ?v2 <http://dbpedia.org/ontology/capital> ?result . <http://dbpedia.org/resource/Lake_Clark_National_Park_and_Preserve> <http://dbpedia.org/ontology/location> ?v2 . <http://dbpedia.org/resource/John_Weir_Troy> <http://dbpedia.org/ontology/deathPlace> ?result . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?capital ?deathPlace WHERE {
  # Find the administrative center or region for Lake Clark National Park and Preserve
  ?park dbo:location dbr:Alaska .
  ?park dbo:administrativeCenter ?region .

  # Get the capital of that region or settlement
  ?region dbo:capital ?capital .

  # Find John Weir Troy's death place
  dbr:John_Weir_Troy dbo:deathPlace ?deathPlace .

  # Ensure both are the same location
  FILTER (?capital = ?deathPlace)
}
```",3,5,4,2,2,3,2,20,0,0,1,0,0.0,0
456,2,train,Give me the band of Alan Doyle.,SELECT ?result WHERE { <http://dbpedia.org/resource/Alan_Doyle> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . },"```sparql
SELECT ?band WHERE {
  ?person foaf:name ""Alan Doyle""@en .
  ?person dbp:band ?band .
}
```",1,1,2,1,1,3,3,71,0,0,3,0,0.0,0
130,4,train,Give me the award of Živko Ključe.,SELECT ?result WHERE { <http://dbpedia.org/resource/Živko_Ključe> <http://dbpedia.org/property/awards> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?award WHERE {
  ?person a dbo:Person ;
          foaf:name ""Živko Ključe""@en .
  OPTIONAL { ?person dbo:honoraryAward ?award . }
  OPTIONAL { ?person dbo:receivedAward ?award . }
}
```",1,1,2,1,1,3,2,20,0,0,2,0,0.0,0
839,31,train,"Give me the band of the person born, that is a musical artist, as the persona of Kevin Russell (musician) and band of Peter Schorowsky.",SELECT ?result WHERE { ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?result <http://dbpedia.org/ontology/bandMember> <http://dbpedia.org/resource/Peter_Schorowsky> . <http://dbpedia.org/resource/Kevin_Russell_(musician)> <http://xmlns.com/foaf/0.1/givenName> ?v1 . ?v0 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v0 <http://dbpedia.org/property/birthName> ?v1 . },"```sparql
SELECT ?band WHERE {
  ?person foaf:name ""Kevin Russell""@en .
  ?person dbo:birthPlace ?place .
  ?person dbo:occupation dbp:musician .
  ?person dbo:memberOfBand ?band .
}
```

Note: The query above is designed to find the band associated with Kevin Russell. For Peter Schorowsky, unless more information is available in DBpedia, a similar query cannot be constructed effectively.",4,5,5,3,2,3,3,71,0,0,1,0,0.0,0
216,5,train,"Give me the player, that is an organisation and a sports club and a soccer club, in Džemal Berberović.",SELECT ?result WHERE { <http://dbpedia.org/resource/Džemal_Berberović> <http://dbpedia.org/ontology/team> ?result . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerClub>. ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsClub>. ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?club WHERE {
  ?person rdfs:label ""Džemal Berberović""@sl .
  FILTER NOT EXISTS { ?person a dbo:Agent } # Ensure it's not an agent type
  ?person (dbo:member|dbo:president) ?club .
  ?club a dbo:SportsClub ;
        dbp:sport dbp:Fútbol ; # Soccer is referred to as Fútbol in DBpedia
        rdfs:label ?label .
}
```",1,4,2,1,1,3,3,71,0,0,10,0,0.0,0
976,29,train,"Give me the office of the mayor, that is a politician and an office holder and Turkish, of Nation Alliance (Turkey) and office of Naci Bostancı and office of Mustafa Şentop.",SELECT ?result WHERE { <http://dbpedia.org/resource/Mustafa_Şentop> <http://dbpedia.org/property/office> ?result . ?v3 <http://dbpedia.org/ontology/nationality> <http://dbpedia.org/resource/Turkey>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. <http://dbpedia.org/resource/Naci_Bostancı> <http://dbpedia.org/property/office> ?result . <http://dbpedia.org/resource/Nation_Alliance_(Turkey)> <http://dbpedia.org/property/leader> ?v3 . ?v3 <http://dbpedia.org/property/office> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?person ?officeName WHERE {
  ?person dbo:nationality dbr:Turkey .
  ?person dbo:party ?party .
  FILTER (
    ?party IN (dbr:Nation_Alliance_(Turkey), dbr:Justice_and_Development_Party, dbr:Nationalist_Movement_Party)
  ) .
  ?person dbo:office ?office .
  ?office dbo:name ?officeName .
  FILTER (?officeName IN (""Naci Bostancı"", ""Mustafa Şentop""))
}
```",4,7,5,2,3,3,3,71,0,0,1,0,0.0,0
874,3,train,"Give me the writer, that is an artist and a musical artist, of Mezzanine (album).",SELECT ?result WHERE { ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. <http://dbpedia.org/resource/Mezzanine_(album)> <http://dbpedia.org/property/writer> ?result . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?writer WHERE {
  ?album dbo:artist ?band .
  ?band dbo:member ?person .
  ?person foaf:name ?name .
  
  FILTER(CONTAINS(LCASE(?name), ""massive attack""))
  
  ?album dbo:title ""Mezzanine"" .
  ?album dbo:composer ?writer .
  
  OPTIONAL {
    ?writer dbo:occupation dbr:Artist .
  }
  OPTIONAL {
    ?writer dbo:occupation dbr:Musical_artist .
  }

  FILTER((BOUND(?writer) && EXISTS { ?writer dbo:occupation dbr:Artist } && EXISTS { ?writer dbo:occupation dbr:Musical_artist }))
}
```",1,3,2,1,1,3,2,20,0,0,15,0,0.0,0
445,9,train,Give me the entity in England and death place of Patrick Moore.,SELECT ?result WHERE { <http://dbpedia.org/resource/Patrick_Moore> <http://dbpedia.org/ontology/deathPlace> ?result . ?result <http://dbpedia.org/ontology/location> <http://dbpedia.org/resource/England> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?associatedLocationLabel ?deathPlaceLabel WHERE {
  VALUES ?person { dbr:Patrick_Moore }
  
  # Find the associated location in England (likely birthplace)
  OPTIONAL {
    ?person dbo:birthPlace ?location .
    ?location rdfs:label ?associatedLocationLabel .
    FILTER(CONTAINS(LCASE(?associatedLocationLabel), ""england""))
  }

  # Find the place of death
  ?person dbo:deathPlace ?deathPlace .
  ?deathPlace rdfs:label ?deathPlaceLabel .
  FILTER(CONTAINS(LCASE(?deathPlaceLabel), ""england""))
}
```",2,2,3,1,2,3,3,71,0,0,1,0,0.0,0
47,27,train,"Give me the office of the awardee of the entity, that is an award, in India.",SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/India> . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Award>. ?v2 <http://dbpedia.org/property/awards> ?v1 . ?v2 <http://dbpedia.org/property/office> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?recipient ?office WHERE {
  ?award dbo:country dbr:India .
  ?award dbo:name ""Bharat Ratna""@en .
  ?award dbo:recipient ?recipient .
  OPTIONAL { ?recipient dbo:occupation ?office . }
  FILTER NOT EXISTS { 
    ?otherAward dbo:country dbr:India .
    ?otherAward dbo:name ""Bharat Ratna""@en .
    ?otherAward dbo:recipient ?otherRecipient .
    ?otherRecipient rdfs:label ?otherLabel .
    FILTER (str(?otherLabel) > str(?recipient->rdfs:label))
  }
}
ORDER BY DESC(?award)
LIMIT 1
```",3,4,4,3,1,3,3,71,0,0,200,0,0.0,0
892,7,train,"Give me the party, that is a political party and an organisation, of Andrea Cozzolino.",SELECT ?result WHERE { ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/PoliticalParty>. <http://dbpedia.org/resource/Andrea_Cozzolino> <http://dbpedia.org/ontology/party> ?result . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?party WHERE {
  ?cozzolino dbo:name ""Andrea Cozzolino""@en .
  ?cozzolino dbo:party ?party .
  ?party rdf:type dbo:PoliticalParty ;
         a rdfs:Class .
  FILTER EXISTS { ?party dbo:isOrganization true }
}
```",1,3,2,1,1,3,3,71,0,0,1,0,0.0,0
791,5,train,"Give me the child, that is an office holder and a royalty, of Emperor Go-Shirakawa.",SELECT ?result WHERE { ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?result <http://dbpedia.org/ontology/parent> <http://dbpedia.org/resource/Emperor_Go-Shirakawa> . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?child WHERE {
  dbr:Emperor_Go-Shirakawa dbo:spouse ?parent .
  ?parent dbo:child ?child .
  
  ?child a dbo:Monarch ;
         dbo:country dbr:Japan .

  FILTER EXISTS { ?child dbo:officeHolder ?position }
}
```",1,3,2,1,1,3,3,71,0,0,2,0,0.0,0
129,17,train,"Give me the associated musical artist of the actor, that is an organisation, of Dreamville Presents: Revenge and associated musical artist of Saba (rapper).",SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . <http://dbpedia.org/resource/Dreamville_Presents:_Revenge> <http://dbpedia.org/property/starring> ?v1 . <http://dbpedia.org/resource/Saba_(rapper)> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?dreamvilleArtist ?sabaArtist WHERE {
  # Find the organization associated with Dreamville Presents: Revenge
  OPTIONAL {
    ?album dbr:Dreamville_Presents:_Revenge .
    ?album dbo:musicalArtist ?dreamvilleArtist .
    FILTER (isBlank(?dreamvilleArtist) = false)
  }

  # Find the musical artist associated with Saba (rapper)
  OPTIONAL {
    ?saba dbr:Saba_(rapper) .
    ?saba dbo:associatedMusicalArtist ?sabaArtist .
    FILTER (isBlank(?sabaArtist) = false)
  }
}
```",3,4,4,2,2,2,3,28,0,0,1,0,0.0,0
495,6,train,Give me the father of Princess Charlotte of Württemberg and child of Frederick I of Württemberg.,SELECT ?result WHERE { <http://dbpedia.org/resource/Princess_Charlotte_of_Württemberg> <http://dbpedia.org/property/father> ?result . ?result <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Frederick_I_of_Württemberg> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>

SELECT ?father WHERE {
  ?child dbo:parent ?father .
  ?child rdfs:label ""Princess Charlotte of Württemberg""@en .

  ?father dbo:child ?prince .
  ?prince rdfs:label ""Frederick I of Württemberg""@en
}
```",2,2,3,1,2,3,2,20,0,0,1,0,0.0,0
606,0,train,Give me the figure known as Barb City.,"SELECT ?result WHERE { ?result <http://dbpedia.org/property/nickname> ""Barb City""@en . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?entity ?label WHERE {
  ?entity rdfs:label ""Barb City""@en .
  OPTIONAL { ?entity dbo:wikiPageRedirects ?redirect . }
  FILTER NOT EXISTS { ?redirect rdfs:label ?redirectLabel } # Exclude redirects
}
```",1,1,2,1,1,3,2,20,0,0,1,0,0.0,0
93,7,train,"Give me the capital of the headquarter, that is a region and a settlement, of Lake Clark National Park and Preserve.",SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/capital> ?result . <http://dbpedia.org/resource/Lake_Clark_National_Park_and_Preserve> <http://dbpedia.org/ontology/location> ?v1 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Region>. },"```sparql
# Step 1: Find the region and settlement for Lake Clark National Park and Preserve
SELECT ?region ?settlement WHERE {
    ?park dcterms:isPartOf ?region .
    ?park dbp:headquarters ?settlement .
    ?park rdfs:label ""Lake Clark National Park and Preserve""@en .
}

# Step 2: Verify if the settlement is also a region
SELECT ?settlement WHERE {
    VALUES (?settlement) { 
        # Replace with actual results from step 1
    }
    ?settlement rdf:type dbo:Settlement .
    ?settlement rdf:type dbo:AdministrativeRegion .
}

# Step 3: Find the capital of this region/settlement
SELECT ?capital WHERE {
    VALUES (?region) { 
        # Replace with actual result from step 2
    }
    ?region dbo:capital ?capital .
}
```",2,4,3,2,1,3,2,20,0,0,2,0,0.0,0
917,10,train,Give me the child of Kekūanāoʻa and parent of Albert Kamehameha.,"SELECT ?result WHERE { ?result <http://dbpedia.org/property/father> ""Kekūanāoʻa""@en . ?result <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Albert_Kamehameha> . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>

SELECT ?person WHERE {
  ?child dbo:parent dbr:Kekūanāoʻa .
  ?person dbo:child dbr:Albert_Kamehameha .
  FILTER (?child = ?person)
}
```",2,2,3,1,2,3,3,71,1,0,0,1.0,1.0,1.0
326,7,train,"Give me the resident of the birthplace, that is a state and British, of David Jessel.",SELECT ?result WHERE { ?result <http://dbpedia.org/property/residence> ?v1 . ?v1 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/United_Kingdom>. <http://dbpedia.org/resource/David_Jessel> <http://dbpedia.org/ontology/birthPlace> ?v1 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/AdministrativeRegion>. },"```sparql
SELECT ?resident WHERE {
  wd:Q30 dbo:birthPlace dbr:London .
  ?resident dbo:residence dbr:London .
}
```",2,4,3,2,1,3,2,20,0,0,5,0,0.0,0
965,1,train,Give me the parent of Louise Mountbatten.,SELECT ?result WHERE { <http://dbpedia.org/resource/Louise_Mountbatten> <http://dbpedia.org/ontology/parent> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>

SELECT ?parent WHERE {
  ?person a dbo:Person ;
          foaf:name ""Louise Mountbatten""@en .
  ?person dbo:child ?child .
  ?child foaf:name ""Louise Mountbatten""@en .
  ?child dbo:parent ?parent .
}
```",1,1,2,1,1,3,3,71,0,0,2,0,0.0,0
582,23,train,"Give me the reference to the residence of the reference, that is a scientist, to Hirotaka Sugawara.","SELECT ?result WHERE { ?v2 <http://xmlns.com/foaf/0.1/name> ""Hirotaka Sugawara""@en . ?result <http://xmlns.com/foaf/0.1/name> ?v0 . ?v2 <http://dbpedia.org/property/residence> ?v0 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Scientist>. }","```sparql
PREFIX foaf: <http://xmlns.com/foaf/0.1/>
PREFIX dbo: <http://dbpedia.org/ontology/>

SELECT ?residence WHERE {
  ?person foaf:name ""Hirotaka Sugawara""@en .
  ?person dbo:residence ?residence .
}
```",3,4,4,3,1,3,3,71,0,0,41,0,0.0,0
236,5,train,Give me the administration of James Madison.,SELECT ?result WHERE { ?result <http://dbpedia.org/property/leader> <http://dbpedia.org/resource/James_Madison> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?termStart ?termEnd ?vicePresident WHERE {
  ?presidency a dbo:Presidency ;
              dbo:president dbr:James_Madison ;
              dbo:startDate ?termStart ;
              dbo:endDate ?termEnd .
  
  OPTIONAL { 
    ?presidency dbo:vicePresidents ?vp .
    ?vp rdfs:label ?vicePresident .
    FILTER (lang(?vicePresident) = 'en')
  }
}
```",1,1,2,1,1,3,2,20,0,0,4,0,0.0,0
987,20,train,Give me the birth place of Dado Polumenta and birth place of the actor of All for Free.,SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/birthPlace> ?result . <http://dbpedia.org/resource/All_for_Free> <http://dbpedia.org/property/starring> ?v1 . <http://dbpedia.org/resource/Dado_Polumenta> <http://dbpedia.org/ontology/birthPlace> ?result . },"```sparql
# Query for Dado Polumenta's birth place
SELECT ?birthPlace WHERE {
  wd:Dado_Polumenta dbo:birthPlace ?birthPlace .
}

UNION

# Query to find actors of ""All for Free"" and their birth places
SELECT DISTINCT ?actorBirthPlace WHERE {
  # Find the DBpedia resource for the movie ""All for Free""
  wd:Q1234567 dbo:starring ?actor . # Replace Q1234567 with the actual DBpedia ID for ""All for Free""

  # Get the birth place of each actor
  ?actor dbo:birthPlace ?actorBirthPlace .
}
```

Note: The placeholder `wd:Q1234567` should be replaced with the actual DBpedia resource identifier for the movie ""All for Free"". You may need to look up this identifier in DBpedia or another reliable source.",3,3,4,2,2,3,3,71,0,0,3,0,0.0,0
926,17,train,"Give me the father, that is a royalty, of the parent, that is a royalty, of Beyhan Sultan (daughter of Mustafa III).",SELECT ?result WHERE { ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. <http://dbpedia.org/resource/Beyhan_Sultan_(daughter_of_Mustafa_III)> <http://dbpedia.org/ontology/parent> ?v0 . ?v0 <http://dbpedia.org/property/father> ?result . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. },"```sparql
SELECT ?father WHERE {
  wd:Q123456 wdt:P22 ?parent . # Beyhan Sultan's parent (Mustafa III)
  ?parent wdt:P22 ?grandParent . # Mustafa III's father
  ?grandParent wdt:P31 wd:Q43210 . # Ensure the grandparent is a royalty (Ottoman Sultan)
}
```

Note: In this query, `wd:Q123456` should be replaced with Beyhan Sultan's DBpedia identifier, and `wd:Q43210` should be replaced with the DBpedia class for an Ottoman Sultan or similar royal figure.",2,4,3,2,1,3,3,71,0,0,1,0,0.0,0
273,13,train,Give me the spouse of the child of the child of Edoardo Agnelli (1831-1871).,SELECT ?result WHERE { ?v0 <http://dbpedia.org/ontology/parent> <http://dbpedia.org/resource/Edoardo_Agnelli_(1831-1871)> . ?v0 <http://dbpedia.org/ontology/child> ?v1 . ?result <http://dbpedia.org/ontology/spouse> ?v1 . },"```sparql
SELECT DISTINCT ?grandchildSpouse WHERE {
  # Find Edoardo Agnelli's children
  ?edoardo dbo:child ?child .
  FILTER(?edoardo = dbpedia-it:Edoardo_Agnelli_(1831-1871)) .

  # For each child, find their children (Edoardo's grandchildren)
  ?child dbo:child ?grandchild .

  # Find the spouse of each grandchild
  ?grandchild dbo:spouse ?grandchildSpouse .
}
```",3,3,4,3,1,3,2,20,0,0,1,0,0.0,0
926,7,train,"Give me the parent, that is a royalty, of Beyhan Sultan (daughter of Mustafa III).",SELECT ?result WHERE { ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. <http://dbpedia.org/resource/Beyhan_Sultan_(daughter_of_Mustafa_III)> <http://dbpedia.org/ontology/parent> ?result . },"```sparql
SELECT ?parent WHERE {
  ?s dbr:Beyhan_Sultan_of_the_Ottoman_Empire dbo:mother ?parent .
  ?parent dbo:spouse* dbr:Mustafa_III .
  FILTER EXISTS { ?parent a dbo:Sovereign . }
}
```",1,2,2,1,1,3,3,71,0,0,2,0,0.0,0
715,17,train,"Give me the office, that is a government agency and an organisation, of the reference to Carlos Franco Iribarnegaray.","SELECT ?result WHERE { ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/GovernmentAgency>. ?v1 <http://xmlns.com/foaf/0.1/name> ""Carlos Franco Iribarnegaray""@en . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?v1 <http://dbpedia.org/property/office> ?result . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?office WHERE {
  ?person foaf:name ""Carlos Franco Iribarnegaray""@en .
  ?person dbo:office ?office .
  ?office a dbo:GovernmentAgency ;
          a dbo:Organization .
}
```",2,4,3,2,1,3,3,71,0,0,1,0,0.0,0
987,26,train,"Give me the birth place of the actor of the show, that is a film, with Emir Hadžihafizbegović.",SELECT ?result WHERE { ?v2 <http://dbpedia.org/property/starring> ?v0 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Film>. ?v0 <http://dbpedia.org/ontology/birthPlace> ?result . ?v2 <http://dbpedia.org/ontology/starring> <http://dbpedia.org/resource/Emir_Hadžihafizbegović> . },"```sparql
SELECT ?actor ?birthPlace WHERE {
  ?film dcterms:subject dbc:Category:Fictional_films_set_in_Bosnia_and_Herzegovina .
  ?film dbo:starringEmirHadžihafizbegović dbp:name ""Emir Hadžihafizbegović"" .
  ?film dbo:starring ?actor .
  ?actor dbo:birthPlace ?birthPlace .
}
```",3,4,4,3,1,3,3,71,0,0,40,0,0.0,0
417,10,train,Give me the child of Alexandrine of Mecklenburg-Schwerin and spouse of Princess Caroline-Mathilde of Denmark.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/spouse> <http://dbpedia.org/resource/Princess_Caroline-Mathilde_of_Denmark> . ?result <http://dbpedia.org/ontology/parent> <http://dbpedia.org/resource/Alexandrine_of_Mecklenburg-Schwerin> . },"```sparql
SELECT ?child WHERE {
  ?alexandrine dbo:spouse ?husband .
  ?alexandrine foaf:name ""Alexandrine of Mecklenburg-Schwerin""@en .
  ?alexandrine dbo:child ?child .

  ?child dbo:spouse ?spouse .
  ?spouse foaf:name ""Princess Caroline-Mathilde of Denmark""@en
}
```",2,2,3,1,2,3,3,71,0,0,1,0,0.0,0
965,14,train,"Give me the parent of the person born, that is a noble, as Prince George of Battenberg.","SELECT ?result WHERE { ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Noble>. ?v0 <http://dbpedia.org/ontology/parent> ?result . ?v0 <http://dbpedia.org/property/birthName> ""Prince George of Battenberg""@en . }","```sparql
SELECT ?parent WHERE {
  wd:Q123456 wdt:P31 wd:Q5; # Prince George of Battenberg is an instance of human
  wdt:P22 ?parent.        # has parent

  OPTIONAL { 
    ?parent wdt:P106 wd:Q82955 . # has occupation as noble
  }
  
  FILTER EXISTS {
    ?parent wdt:P31 wd:Q5 .      # parent is a human
  }
}
```

Note: Replace `wd:Q123456` with the actual DBpedia identifier for Prince George of Battenberg.",2,3,3,2,1,3,3,71,0,0,2,0,0.0,0
892,29,train,Give me the entity in Province of Reggio Emilia and landmark at elevation of the award of Anna Ishii and entity in Italy.,SELECT ?result WHERE { <http://dbpedia.org/resource/Anna_Ishii> <http://dbpedia.org/property/awards> ?v3 . ?result <http://dbpedia.org/ontology/province> <http://dbpedia.org/resource/Province_of_Reggio_Emilia> . ?result <http://dbpedia.org/ontology/elevation> ?v3 . ?result <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Italy> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?reggioEntity ?landmark ?italyEntity WHERE {
  # Entities in Province of Reggio Emilia
  ?reggioEntity dbo:location dbr:Province_of_Reggio_Emilia .

  # Elevation associated with an award received by Anna Ishii
  ?award dbo:recipient dbr:Anna_Ishii .
  ?award dbo:elevation ?elevation .

  # Landmarks at the elevation of the award
  ?landmark dbo:elevation ?elevation .

  # Entities in Italy
  ?italyEntity dbo:location dbr:Italy .
}
```",4,4,5,2,3,3,3,71,0,0,1,0,0.0,0
445,20,train,Give me the entity in England and death place of the awardee of Royal Astronomical Society.,SELECT ?result WHERE { ?v2 <http://dbpedia.org/ontology/deathPlace> ?result . ?result <http://dbpedia.org/ontology/location> <http://dbpedia.org/resource/England> . ?v2 <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/Royal_Astronomical_Society> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?person ?deathPlace WHERE {
  ?person dbo:awardReceivedBy dbr:Royal_Astronomical_Society .
  ?person dbo:birthPlace dbr:England .
  OPTIONAL { ?person dbo:deathPlace ?deathPlace . }
}
```",3,3,4,2,2,3,3,71,0,0,1,0,0.0,0
965,4,train,Give me the spouse of Princess Victoria of Hesse and by Rhine.,SELECT ?result WHERE { <http://dbpedia.org/resource/Princess_Victoria_of_Hesse_and_by_Rhine> <http://dbpedia.org/ontology/spouse> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?spouse WHERE {
  dbr:Princess_Victoria_of_Hesse_and_by_Rhine dbo:spouse ?spouse .
}
```",1,1,2,1,1,3,3,71,1,0,0,1.0,1.0,1.0
445,12,train,Give me the entity in United Kingdom and death place of Patrick Moore.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/United_Kingdom> . <http://dbpedia.org/resource/Patrick_Moore> <http://dbpedia.org/ontology/deathPlace> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?deathPlace WHERE {
  ?person rdfs:label ""Patrick Moore""@en .
  ?person dbo:nationality ?nationality .
  FILTER(CONTAINS(LCASE(str(?nationality)), ""united kingdom"") || CONTAINS(LCASE(str(?nationality)), ""british""))
  ?person dbo:placeOfBirth ?birthPlace .
  ?person dbo:deathPlace ?deathPlace .
}
```",2,2,3,1,2,3,3,71,0,0,2,0,0.0,0
573,8,train,"Who is the author, that is a politician and an office holder, of Exchequer Standards?",SELECT ?result WHERE { ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. <http://dbpedia.org/resource/Exchequer_Standards> <http://dbpedia.org/property/author> ?result . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?author WHERE {
  ?work dbo:title ""Exchequer Standards""@en .
  ?work dbo:author ?author .

  ?author a dbo:Politician ;
          dbo:officeHolder ?office .

}
```",1,3,2,1,1,3,3,71,0,0,1,0,0.0,0
47,29,train,Give me the office of Ajoy Mukherjee and office of Suvendu Adhikari and office of the awardee of Banga Bhushan.,SELECT ?result WHERE { <http://dbpedia.org/resource/Suvendu_Adhikari> <http://dbpedia.org/property/office> ?result . ?v3 <http://dbpedia.org/property/office> ?result . ?v3 <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/Banga_Bhushan> . <http://dbpedia.org/resource/Ajoy_Mukherjee> <http://dbpedia.org/property/office> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?person ?name ?office WHERE {
  VALUES (?person ?name) {
    (dbr:Ajoy_Mukherjee ""Ajoy Mukherjee"")
    (dbr:Suvendu_Adhikari ""Suvendu Adhikari"")
    # Assuming the most recent awardee is known or can be queried separately
    (dbr:Most_Recent_Banga_Bhushan_Awardee ""Banga Bhushan Awardee"") 
  }
  
  OPTIONAL {
    ?person dbo:office ?office .
  }

  OPTIONAL {
    ?person rdfs:label ?name .
    FILTER(LANG(?name) = 'en')
  }
}
```

Note: The placeholder `dbr:Most_Recent_Banga_Bhushan_Awardee` should be replaced with the actual DBpedia resource identifier for the most recent awardee of the Banga Bhushan award. This might require a separate query or manual lookup to determine the correct resource.",4,4,5,2,3,3,3,71,0,0,1,0,0.0,0
917,0,train,Give me the parent of Albert Kamehameha.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Albert_Kamehameha> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>

SELECT ?parent WHERE {
  ?person dbo:child ?albert .
  ?albert foaf:name ""Albert Kamehameha""@en .
  ?person dbo:parent ?parent .
}
```",1,1,2,1,1,3,3,71,0,4,2,0.0,0.0,0
216,23,train,"Give me the player in the coach of the reference, that is an organisation and a soccer club, to Croatia U21.","SELECT ?result WHERE { ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerClub>. ?v2 <http://xmlns.com/foaf/0.1/name> ""Croatia U21""@en . ?v0 <http://dbpedia.org/ontology/team> ?result . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?v2 <http://dbpedia.org/ontology/coach> ?v0 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?club WHERE {
  ?coach dbo:position ""head coach""@en .
  ?coach dbo:team dbr:Croatia_national_under-21_football_team .
  
  ?club dbo:manager ?coach ;
        a dbo:SoccerClub, dbo:Organization .

}
```",3,5,4,3,1,3,3,71,0,0,6,0,0.0,0
865,36,train,Give me the native of British Raj and father of the child of the father of Abul Maal Abdul Muhith.,SELECT ?result WHERE { ?v1 <http://dbpedia.org/property/father> ?result . ?result <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/British_Raj> . ?v1 <http://dbpedia.org/property/father> ?v3 . <http://dbpedia.org/resource/Abul_Maal_Abdul_Muhith> <http://dbpedia.org/property/father> ?v3 . },"```sparql
SELECT ?nativeOfBritishRaj WHERE {
  ?muhith dbo:birthName ""Abul Maal Abdul Muhith"" .
  ?muhith dbo:father ?father .
  ?father dbo:nationality dbr:Bangladesh ; # Assuming nationality during British Raj is inferred as Bangladesh
           dbo:birthPlace ?place .
  FILTER (
    (EXISTS { ?place dbp:country dbr:British_India } ) || 
    (EXISTS { ?place dbp:country dbr:United_Kingdom }) # Considering the broader context of British Raj
  )
}
```",4,4,5,3,2,3,3,71,0,0,1,0,0.0,0
507,7,train,Who is the person born on 1966-02-18?,"SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/birthDate> ""1966-02-18""^^<http://www.w3.org/2001/XMLSchema#date> . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?person ?name WHERE {
  ?person a dbo:Person .
  ?person dbo:birthDate ?date .
  ?person foaf:name ?name .
  FILTER (STR(?date) = ""1966-02-18"")
}
ORDER BY ?name
```",1,1,2,1,1,3,3,71,18,23,3,0.43902439024390244,0.8571428571428571,0.5806451612903225
645,4,train,Give me the force of Carlos Asensio Cabanillas.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Carlos_Asensio_Cabanillas> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?birthDate ?deathDate ?occupation ?description
WHERE {
  VALUES ?person { dbr:Caballero_de_la_Sierra }
  
  ?person dbo:birthDate ?birthDate .
  ?person dbo:deathDate ?deathDate .
  ?person dbo:occupation ?occupation .
  OPTIONAL { ?person dbo:abstract ?description . FILTER(lang(?description) = 'en') }
}
```",1,1,2,1,1,3,3,71,0,0,9,0,0.0,0
976,35,train,"Give me the office of the leader, that is a politician, of Grand National Assembly of Turkey and office of the person born as Mehmet Naci Bostancı.","SELECT ?result WHERE { ?v0 <http://dbpedia.org/property/birthName> ""Mehmet Naci Bostancı""@en . <http://dbpedia.org/resource/Grand_National_Assembly_of_Turkey> <http://dbpedia.org/ontology/leader> ?v1 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v1 <http://dbpedia.org/property/office> ?result . ?v0 <http://dbpedia.org/property/office> ?result . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?office1 ?office2 WHERE {
  # Query for the office of the leader of the Grand National Assembly of Turkey
  ?leader a dbo:MemberOfParliament ;
          dbo:memberOf dbr:Grand_National_Assembly_of_Turkey ;
          dbo:positionTitle ?office1 .
  
  FILTER regex(?office1, ""Speaker"", ""i"") # Assuming the leader is typically the Speaker

  # Query for the office of Mehmet Naci Bostancı
  ?person a dbo:Politician ;
          foaf:name ""Mehmet Naci Bostancı""@en ;
          dbo:positionTitle ?office2 .
}
```",4,5,5,2,2,3,3,71,0,0,1,0,0.0,0
645,16,train,"Give me the force, that is an event and a military conflict and a societal event, of the native, that is a president and a politician, of Restoration (Spain).",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/commander> ?v1 . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/President>. ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?v1 <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Restoration_(Spain)> . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?force WHERE {
  ?president dbo:nationality dbr:Spain .
  ?president a dbo:Politician ;
             dbo:officeHolderOf dbr:Restoration_(Spain) .
  
  ?force dbo:type dbr:Military_conflict ;
         dbo:societal_event true ;
         dbo:relatedTo ?president .

  FILTER (regex(str(?force), ""Carlist War|Uprising"", ""i""))
}
```",2,7,3,2,1,3,3,71,0,0,1,0,0.0,0
442,1,train,Give me the resting place of Fay Bainter.,SELECT ?result WHERE { <http://dbpedia.org/resource/Fay_Bainter> <http://dbpedia.org/ontology/restingPlace> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?restingPlace WHERE {
  ?person a dbo:Actor ;
          foaf:name ""Fay Bainter""@en .
  OPTIONAL { ?person dbo:finalRestingPlace ?restingPlace . }
}
```",1,1,2,1,1,2,2,9,0,0,1,0,0.0,0
158,14,train,"Give me the party of the successor, that is a prime minister and an office holder and a politician, of the person deceased, that is an office holder and a politician, on 1945-09-15.","SELECT ?result WHERE { ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v2 <http://dbpedia.org/ontology/successor> ?v0 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v2 <http://dbpedia.org/ontology/deathDate> ""1945-09-15""^^<http://www.w3.org/2001/XMLSchema#date> . ?v0 <http://dbpedia.org/ontology/party> ?result . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/PrimeMinister>. }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?successorParty WHERE {
  ?deceased a dbo:Politician ;
            dbo:officeHolder true ;
            dbo:deathDate ""1945-09-15""^^xsd:date .
  
  ?successor dbo:predecessor ?deceased ;
             a dbo:PrimeMinister, dbo:OfficeHolder, dbo:Politician .

  ?successor dbo:party ?party .
  
  BIND(?party AS ?successorParty)
}
```",3,8,4,3,1,3,2,20,0,0,1,0,0.0,0
645,26,train,"Give me the military force of the force, that is an event and a military conflict and a societal event, of the native, that is a president and a politician, of Restoration (Spain).",SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Restoration_(Spain)> . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?result <http://dbpedia.org/ontology/battle> ?v2 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/President>. ?v2 <http://dbpedia.org/ontology/commander> ?v1 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?event ?militaryForce WHERE {
  # Identify the political figure during the Restoration period
  VALUES ?politician { dbr:Antonio_Cánovas_del_Castillo }

  # Find events that are both military conflicts and societal events
  ?event dbo:type/dbo:subClassOf* dbo:MilitaryConflict ;
         dbo:type/dbo:subClassOf* dbo:SocietalEvent .

  # Link the event to a military force associated with the politician
  ?event dbo:militaryForce ?militaryForce .
  ?politician dbo:associatedWith ?militaryForce .

  # Ensure the event is related to the Restoration period in Spain
  ?event dbo:relatedTo dbr:Restoration_(Spain) .
}
```",3,8,4,3,1,3,3,71,0,0,514,0,0.0,0
365,5,train,"Give me the native, that is a politician, of Poltava Governorate.",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Poltava_Governorate> . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?person ?name WHERE {
  ?person dbo:nativePlace dbr:Poltava_Governorate ;
          dbo:occupation ?occupation .
  FILTER (CONTAINS(LCASE(str(?occupation)), ""politician"") || CONTAINS(LCASE(str(?occupation)), ""politik""))
  SERVICE wikibase:label { bd:serviceParam wikibase:language ""[AUTO_LANGUAGE],en"". }
}
```",1,2,2,1,1,3,2,20,0,0,11,0,0.0,0
443,9,train,Give me the birthplace of Carl Larsson and birthplace of Ulf Lundell.,SELECT ?result WHERE { <http://dbpedia.org/resource/Carl_Larsson> <http://dbpedia.org/ontology/birthPlace> ?result . <http://dbpedia.org/resource/Ulf_Lundell> <http://dbpedia.org/ontology/birthPlace> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT ?person ?name ?birthPlace WHERE {
  VALUES (?name) { (""Carl Larsson"" ""Ulf Lundell"") }
  
  ?person foaf:name ?name .
  OPTIONAL { ?person dbo:birthPlace ?birthPlace . }
}
```",2,2,3,1,2,2,3,28,0,0,1,0,0.0,0
976,13,train,"Give me the office of the mayor, that is a politician and an office holder and Turkish, of Nation Alliance (Turkey).",SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/nationality> <http://dbpedia.org/resource/Turkey>. ?v1 <http://dbpedia.org/property/office> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. <http://dbpedia.org/resource/Nation_Alliance_(Turkey)> <http://dbpedia.org/property/leader> ?v1 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?mayor ?officeLabel WHERE {
  ?mayor dbo:office dbr:Municipality_of_Turkey_mayors .
  ?mayor foaf:nationality dbr:Turkey .
  ?mayor dbp:politicalParty dbr:Nation_Alliance_(Turkey) .
  ?mayor rdf:type dbo:Politician .
  ?mayor rdf:type dbo:OfficeHolder .
  
  OPTIONAL { ?mayor rdfs:label ?officeLabel FILTER (lang(?officeLabel) = ""en"") }
}
```",2,5,3,2,1,3,3,71,0,0,3,0,0.0,0
443,14,train,"Give me the birthplace of the person born, that is a musical artist and an artist, on 1949-11-20 and landmark at elevation of 28.","SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?result <http://dbpedia.org/ontology/elevation> ""28""^^<http://www.w3.org/2001/XMLSchema#integer> . ?v1 <http://dbpedia.org/ontology/birthDate> ""1949-11-20""^^<http://www.w3.org/2001/XMLSchema#date> . ?v1 <http://dbpedia.org/ontology/birthPlace> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?birthPlaceLabel WHERE {
  ?person dbo:birthDate ""1949-11-20""^^xsd:date .
  ?person dbo:occupation dbr:Musicians .
  ?person dbo:occupation dbr:Artists .
  ?person dbp:birthPlace ?birthPlace .
  ?birthPlace dbo:elevation ""28""^^xsd:decimal .
  SERVICE wikibase:label { bd:serviceParam wikibase:language ""[AUTO_LANGUAGE],en"". }
}
```",3,5,4,2,2,2,3,28,0,0,1,0,0.0,0
791,19,train,"Give me the predecessor of Emperor Antoku and spouse of the spouse, that is a royalty, of Emperor Takakura.",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/spouse> ?v0 . ?result <http://dbpedia.org/ontology/successor> <http://dbpedia.org/resource/Emperor_Antoku> . ?v0 <http://dbpedia.org/ontology/spouse> <http://dbpedia.org/resource/Emperor_Takakura> . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?predecessor ?spouseOfSpouse WHERE {
  # Find Emperor Antoku's predecessor
  ?antoku dbo:succession dbr:Emperor_Antoku .
  ?antoku dbo:predecessor ?predecessor .

  # Find Emperor Takakura's spouse
  ?takakura dbo:spouse ?spouseTakakura .
  FILTER(?takakura = dbr:Emperor_Takakura) .

  # Find the spouse of Emperor Takakura's spouse, ensuring they are royalty
  ?spouseTakakura dbo:spouse ?spouseOfSpouse .
  ?spouseOfSpouse a dbo:Monarch .
}
```",3,4,4,2,2,3,3,71,0,0,1,0,0.0,0
933,27,train,"Give me the band of the band, that is a group and a band and an organisation, of the person born, that is a musical artist, on 1947-04-21.","SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?v1 <http://dbpedia.org/ontology/birthDate> ""1947-04-21""^^<http://www.w3.org/2001/XMLSchema#date> . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Group>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?v0 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Band>. ?v1 <http://dbpedia.org/ontology/associatedMusicalArtist> ?v0 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?person ?band WHERE {
  ?person a dbo:MusicalArtist ;
          dbo:birthDate ?date .
  
  FILTER (YEAR(?date) = 1947 && MONTH(?date) = 4 && DAY(?date) = 21)
  
  OPTIONAL { ?person dbo:band ?band . }
  
  ?band a dbo:Band, dbo:Organization .
}
```",3,7,4,3,1,3,3,71,0,0,4,0,0.0,0
865,15,train,"Give me the residence, that is a country, of the person decedent at Patna.",SELECT ?result WHERE { ?v0 <http://dbpedia.org/ontology/deathPlace> <http://dbpedia.org/resource/Patna> . ?v0 <http://dbpedia.org/property/residence> ?result . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?personName ?countryOfResidence WHERE {
  ?person a dbo:Person ;
          dbo:deathPlace dbr:Patna .
  OPTIONAL { ?person dbo:residenceCountry ?country . }
  BIND (STR(?person) AS ?personName)
  BIND (IF(BOUND(?country), STR(?country), ""Unknown"") AS ?countryOfResidence)
}
```",2,3,3,2,1,3,3,71,0,67,1,0.0,0.0,0
122,6,train,"Give me the band of the reference, that is a musical artist and an artist, to Gift of Gab.","SELECT ?result WHERE { ?v0 <http://xmlns.com/foaf/0.1/name> ""Gift of Gab""@en . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?v0 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?band WHERE {
  ?person rdfs:label ""Gift of Gab""@en .
  ?person a dbo:MusicalArtist ;
          dbo:associatedBandOrMusicalGroup ?band .
  
  FILTER (LANG(?person) = 'en')
}
```",2,4,3,2,1,2,2,9,0,0,4,0,0.0,0
18,15,train,"Give me the alumnus of Marymount College, Tarrytown and professional in the award of Ana María Sánchez de Ríos.","SELECT ?result WHERE { ?result <http://dbpedia.org/property/occupation> ?v0 . ?result <http://dbpedia.org/ontology/almaMater> <http://dbpedia.org/resource/Marymount_College,_Tarrytown> . <http://dbpedia.org/resource/Ana_María_Sánchez_de_Ríos> <http://dbpedia.org/property/awards> ?v0 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?alumnus WHERE {
  ?alumnus dbo:almaMater dbr:Marymount_College,_Tarrytown .
  
  OPTIONAL {
    ?award dbo:name ""Ana María Sánchez de Ríos Award""@en ;
           dbo:recipient ?alumnus .
  }
}
```",3,3,4,2,2,2,3,28,0,0,1,0,0.0,0
456,7,train,Give me the band of Alan Doyle.,SELECT ?result WHERE { <http://dbpedia.org/resource/Alan_Doyle> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . },"```sparql
PREFIX dbp: <http://dbpedia.org/property/>
PREFIX dbo: <http://dbpedia.org/ontology/>

SELECT ?bandName WHERE {
  ?person foaf:name ""Alan Doyle""@en .
  ?person dbp:band ?band .
  ?band foaf:name ?bandName .
}
```",1,1,2,1,1,3,3,71,0,0,3,0,0.0,0
965,10,train,"Give me the parent of George Mountbatten, 2nd Marquess of Milford Haven and spouse of Prince Louis of Battenberg.","SELECT ?result WHERE { <http://dbpedia.org/resource/George_Mountbatten,_2nd_Marquess_of_Milford_Haven> <http://dbpedia.org/ontology/parent> ?result . ?result <http://dbpedia.org/ontology/spouse> <http://dbpedia.org/resource/Prince_Louis_of_Battenberg> . }","```sparql
SELECT ?father WHERE {
  ?george a dbo:Marquess ;
          foaf:name ""George Mountbatten, 2nd Marquess of Milford Haven""@en .
  ?princeLouis a dbo:Spouse ;
               foaf:name ""Prince Louis of Battenberg""@en .
  ?george dbo:spouse ?princeLouis .
  ?george dbo:parent ?father .
}
```",2,2,3,1,2,3,3,71,0,0,1,0,0.0,0
136,1,train,Give me the landmark at elevation of 5.,"SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/elevation> ""5""^^<http://www.w3.org/2001/XMLSchema#integer> . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?landmark ?name WHERE {
    ?landmark a dbo:Landmark .
    ?landmark rdfs:label ?name .
    OPTIONAL { ?landmark dbp:elevation ?elevation . }
    FILTER (?elevation = ""5""^^xsd:decimal)
}
```",1,1,2,1,1,2,2,9,0,0,909,0,0.0,0
645,19,train,Give me the military force of Spanish Civil War and commander in the force of Carlos Asensio Cabanillas.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/battle> <http://dbpedia.org/resource/Spanish_Civil_War> . ?v0 <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Carlos_Asensio_Cabanillas> . ?v0 <http://dbpedia.org/ontology/commander> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?militaryForce ?commander WHERE {
  # Find Carlos Asensio Cabanillas and his associated military role
  dbr:Carlos_Asensio_Cabanillas dbo:militaryService [
    a dbo:MilitaryUnit ;
    dbo:commandedBy ?commander .
  ] .

  # Retrieve the military force he was part of during the Spanish Civil War
  OPTIONAL {
    ?militaryForce dbo:member ?asensioCabanillasRole .
    ?asensioCabanillasRole dbo:position ""General""@en .
  }
}
```",3,3,4,2,2,3,3,71,0,0,23,0,0.0,0
93,4,train,"Who is the native, that is a politician, of Seattle?",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Seattle> . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?person ?name WHERE {
  ?person dbo:birthPlace dbr:Seattle .
  ?person dbo:occupation ?occupation .
  FILTER (
    ?occupation IN (dbo:Politician, dbo:Mayor, dbo:MemberOfParliament) ||
    EXISTS { ?person dbo:positionHeld ?position . ?position dbo:officeHolder ?person . }
  )
  OPTIONAL { ?person rdfs:label ?name FILTER (lang(?name) = 'en') }
}
ORDER BY ?name
```",1,2,2,1,1,3,2,20,0,0,114,0,0.0,0
456,34,train,"Give me the band of Alan Doyle and spouse of the actor of the movie, that is a work and a television show, with Ross Newton.",SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/spouse> ?result . <http://dbpedia.org/resource/Alan_Doyle> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v2 <http://dbpedia.org/property/starring> ?v1 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/TelevisionShow>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?v2 <http://dbpedia.org/property/starring> <http://dbpedia.org/resource/Ross_Newton> . },"```sparql
# Query to get Alan Doyle's band
SELECT ?band WHERE {
  dbo:AlanDoyle dbo:musicBandMember ?band .
}

UNION

# Query to find Ross Newton's movie ""The Work and the Glory""
SELECT ?movie WHERE {
  dbo:RossNewton dbo:actedIn ?movie .
  FILTER(CONTAINS(LCASE(STR(?movie)), ""work and glory""))
}

UNION

# Assuming Joseph Pearce is a key actor, query for his spouse
SELECT ?spouse WHERE {
  dbo:JosephPearce dbo:spouse ?spouse .
}
```",4,6,5,3,2,3,3,71,0,0,1,0,0.0,0
124,5,train,Who is the awardee of British South Africa Company Medal?,SELECT ?result WHERE { ?result <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/British_South_Africa_Company_Medal> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?awardee WHERE {
  ?medal a dbo:Award .
  ?medal rdfs:label ""British South Africa Company Medal""@en .
  
  ?recipient dbo:award ?medal .
  ?recipient foaf:name ?awardee .
}
```",1,1,2,1,1,3,3,71,0,4,5,0.0,0.0,0
102,0,train,Give me the manager of Sheffield United W.F.C..,SELECT ?result WHERE { <http://dbpedia.org/resource/Sheffield_United_W.F.C.> <http://dbpedia.org/ontology/manager> ?result . },"```sparql
PREFIX dbp: <http://dbpedia.org/property/>
PREFIX dbo: <http://dbpedia.org/ontology/>

SELECT ?manager WHERE {
  ?team dbp:name ""Sheffield United W.F.C.""@en .
  ?team dbp:manager ?manager .
}
```",1,1,2,1,1,3,2,20,0,0,1,0,0.0,0
456,9,train,Give me the professional in  and spouse of Danielle Spencer (Australian actress).,"SELECT ?result WHERE { ?result <http://dbpedia.org/property/occupation> """"@en . <http://dbpedia.org/resource/Danielle_Spencer_(Australian_actress)> <http://dbpedia.org/ontology/spouse> ?result . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?profession ?spouseLabel WHERE {
  ?person rdfs:label ""Danielle Spencer (Australian actress)""@en .
  ?person dbo:occupation ?profession .
  OPTIONAL { 
    ?person dbo:spouse ?spouse .
    ?spouse rdfs:label ?spouseLabel .
  }
}
```",2,2,3,1,2,3,3,71,0,2,1,0.0,0.0,0
192,2,train,Give me the child of Charles II of Naples.,SELECT ?result WHERE { ?result <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Charles_II_of_Naples> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?child WHERE {
  dbr:Charles_II_of_Naples dbo:child ?child .
}
```",1,1,2,1,1,3,2,20,2,9,0,0.18181818181818182,1.0,0.3076923076923077
582,30,train,Give me the reference to Japan and figure known as the nickname of Japan national football team and player in Kazuaki Nagasawa.,"SELECT ?result WHERE { ?result <http://xmlns.com/foaf/0.1/name> ""Japan""@en . <http://dbpedia.org/resource/Japan_national_football_team> <http://dbpedia.org/property/nickname> ?v1 . ?result <http://dbpedia.org/property/nickname> ?v1 . <http://dbpedia.org/resource/Kazuaki_Nagasawa> <http://dbpedia.org/ontology/team> ?result . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?nickname ?playerName WHERE {
  # Retrieve the nickname of Japan's national football team
  OPTIONAL { 
    dbr:Japan_national_football_team dbo:nickname ?nickname .
  }
  
  # Find information about Kazuaki Nagasawa and confirm his association with the Japanese national football team
  OPTIONAL {
    ?player a dbo:FootballPlayer ;
           foaf:name ""Kazuaki Nagasawa"" ;
           dbo:team dbr:Japan_national_football_team .
    BIND(""Kazuaki Nagasawa"" AS ?playerName)
  }
}
```",4,4,5,2,3,3,3,71,0,0,1,0,0.0,0
433,7,train,Give me the writer of Slowhand at 70 – Live at the Royal Albert Hall.,SELECT ?result WHERE { <http://dbpedia.org/resource/Slowhand_at_70_–_Live_at_the_Royal_Albert_Hall> <http://dbpedia.org/property/writer> ?result . },"```sparql
SELECT ?writer WHERE {
  wd:Q1116 dbo:album ""Slowhand at 70 – Live at the Royal Albert Hall""@en .
  wd:Q1116 dbo:artist ?artist .
  ?artist foaf:name ""Eric Clapton""@en .
  ?artist dbo:occupation ?occupation .
  FILTER(?occupation IN (dbo:Singer, dbo:Songwriter))
}
```",1,1,2,1,1,3,3,71,0,0,30,0,0.0,0
36,8,train,"Give me the actor of the claim to fame, that is a film, of Lepacious Bose.",SELECT ?result WHERE { <http://dbpedia.org/resource/Lepacious_Bose> <http://dbpedia.org/ontology/knownFor> ?v1 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Film>. ?v1 <http://dbpedia.org/ontology/starring> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?actor WHERE {
  ?film dbo:title ""Chhinnamul""@en .
  ?film dbo:starring ?actor .
}
```",2,3,3,2,1,2,3,28,0,0,6,0,0.0,0
926,4,train,Give me the father of Abdulaziz.,SELECT ?result WHERE { <http://dbpedia.org/resource/Abdulaziz> <http://dbpedia.org/property/father> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?fatherLabel WHERE {
  ?person a dbo:Person ;
          rdfs:label ""Abdulaziz Ibn Saud""@en .
  OPTIONAL { ?person dbo:father ?father . }
  SERVICE <https://query.wikidata.org/sparql> {
    ?father wdt:P31 wdQ5 ; # instance of Person
            rdfs:label ?fatherLabel .
    FILTER(LANG(?fatherLabel) = ""en"")
  }
}
```",1,1,2,1,1,3,3,71,0,0,1,0,0.0,0
791,20,train,Give me the predecessor of the child of Emperor Takakura and spouse of Taira no Tokuko.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/successor> ?v2 . ?v2 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Emperor_Takakura> . ?result <http://dbpedia.org/ontology/spouse> <http://dbpedia.org/resource/Taira_no_Tokuko> . },"```sparql
SELECT ?predecessor WHERE {
  wd:Q1234567 wdt:P31 wd:Q11840; # Emperor Antoku (replace Q1234567 with the actual DBpedia ID for Emperor Antoku)
    wdt:P22 wd:Q12345; # Taira no Tokuko (replace Q12345 with the actual DBpedia ID for Taira no Tokuko)
    wdt:P25 ?father.
  ?father wdt:P31 wd:Q11840. # Person is an instance of Emperor
  ?father wdt:P921 ?predecessor. # Father's predecessor
}
```

Note: The placeholders `wd:Q1234567` and `wd:Q12345` should be replaced with the actual DBpedia IDs for Emperor Antoku and Taira no Tokuko, respectively.",3,3,4,2,2,3,3,71,0,0,1,0,0.0,0
443,16,train,Give me the landmark at elevation of 28 and birthplace of the work of yes.,"SELECT ?result WHERE { ?v2 <http://dbpedia.org/ontology/birthPlace> ?result . ?v2 <http://dbpedia.org/property/author> ""yes""@en . ?result <http://dbpedia.org/ontology/elevation> ""28""^^<http://www.w3.org/2001/XMLSchema#integer> . }","```sparql
# Query for landmark at elevation of 28
SELECT ?landmark WHERE {
  ?landmark dbo:elevation ""28""^^xsd:integer .
  ?landmark rdf:type dbo:Lighthouse .
}

UNION

# Query for birthplace of a member of the band Yes
SELECT ?person ?birthPlace WHERE {
  ?band dbo:member ?person ;
        rdfs:label ""Yes""@en .
  ?person dbo:birthPlace ?birthPlace .
}
```",3,3,4,2,2,2,3,28,0,0,2,0,0.0,0
47,19,train,Give me the office of Bidesh Ranjan Bose and office of the administration of Jagdeep Dhankhar.,SELECT ?result WHERE { <http://dbpedia.org/resource/Bidesh_Ranjan_Bose> <http://dbpedia.org/property/office> ?result . ?v0 <http://dbpedia.org/property/office> ?result . ?v0 <http://dbpedia.org/property/governor> <http://dbpedia.org/resource/Jagdeep_Dhankhar> . },"```sparql
# Query for Bidesh Ranjan Bose's office
SELECT ?office WHERE {
  ?person dbo:name ""Bidesh Ranjan Bose""@en .
  ?person dbo:positionHeld ?position .
  ?position dbo:title ?office .
  FILTER(CONTAINS(LCASE(?office), ""chief justice""))
}

# Query for Jagdeep Dhankhar's office
SELECT ?office WHERE {
  ?person dbo:name ""Jagdeep Dhankhar""@en .
  ?person dbo:positionHeld ?position .
  ?position dbo:title ?office .
  FILTER(CONTAINS(LCASE(?office), ""vice president""))
}
```",3,3,4,2,2,3,3,71,0,0,1,0,0.0,0
442,4,train,Give me the resting place of Fay Bainter and resting place of Allyn K. Capron.,SELECT ?result WHERE { <http://dbpedia.org/resource/Allyn_K._Capron> <http://dbpedia.org/ontology/restingPlace> ?result . <http://dbpedia.org/resource/Fay_Bainter> <http://dbpedia.org/ontology/restingPlace> ?result . },"```sparql
# Query for Fay Bainter's resting place
SELECT ?place WHERE {
  wd:Q123456 dbo:deathPlace ?place .
  SERVICE wikibase:label { bd:serviceParam wikibase:language ""[AUTO_LANGUAGE],en"". }
}

UNION

# Query for Allyn K. Capron's resting place
SELECT ?place WHERE {
  wd:Q789012 dbo:deathPlace ?place .
  SERVICE wikibase:label { bd:serviceParam wikibase:language ""[AUTO_LANGUAGE],en"". }
}
```

Note: Replace `wd:Q123456` with the actual DBpedia URI for Fay Bainter and `wd:Q789012` with the URI for Allyn K. Capron.",2,2,3,1,2,2,2,9,0,0,1,0,0.0,0
888,0,train,Give me the commander in Southern Ukraine campaign.,SELECT ?result WHERE { <http://dbpedia.org/resource/Southern_Ukraine_campaign> <http://dbpedia.org/ontology/commander> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?commander ?commanderLabel WHERE {
  ?campaign dbo:partOf dbr:Operation_Barbarossa .
  ?campaign rdfs:label ""Southern Ukraine Campaign""@en .
  ?campaign dbo:militaryCommander ?commander .
  SERVICE wikibase:label { bd:serviceParam wikibase:language ""[AUTO_LANGUAGE],en"". }
}
```",1,1,2,1,1,3,2,20,0,0,13,0,0.0,0
645,9,train,Give me the military force of Spanish Civil War and commander in Battle of Jarama.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/battle> <http://dbpedia.org/resource/Spanish_Civil_War> . <http://dbpedia.org/resource/Battle_of_Jarama> <http://dbpedia.org/ontology/commander> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?force ?commander WHERE {
  # Find military forces involved in the Spanish Civil War
  ?civilWar dbo:militaryConflictOf [
    a dbo:MilitaryConflict ;
    dbo:participatingMilitaryForce ?force .
  ].
  
  FILTER (str(?civilWar) = ""Spanish_Civil_War"")

  OPTIONAL {
    # Find commanders for the Battle of Jarama
    ?battle dbo:commander ?commander .
    
    FILTER (str(?battle) = ""Battle_of_Jarama"")
    
    ?force dbo:participatingMilitaryForceIn [
      a dbo:MilitaryConflict ;
      dbo:name ?battleName .
    ].
    
    FILTER (str(?battleName) = str(?battle))
  }
}
```",2,2,3,1,2,3,3,71,0,0,6,0,0.0,0
192,5,train,Give me the child of Stephen V of Hungary.,SELECT ?result WHERE { ?result <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Stephen_V_of_Hungary> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?child ?childLabel WHERE {
  ?person dbo:givenName ""Stephen"" .
  ?person dbo:familyName ""V of Hungary"" .
  ?person dbo:child ?child .
  SERVICE wikibase:label { bd:serviceParam wikibase:language ""[AUTO_LANGUAGE],en"". }
}
```",1,1,2,1,1,3,2,20,0,0,5,0,0.0,0
582,26,train,"Give me the player in the father, that is an athlete and a soccer manager and a sports manager, of the child of Kazuaki Nagasawa.",SELECT ?result WHERE { ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Athlete>. ?v1 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Kazuaki_Nagasawa> . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsManager>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerManager>. ?v2 <http://dbpedia.org/ontology/team> ?result . ?v1 <http://dbpedia.org/property/father> ?v2 . },"```sparql
SELECT ?player WHERE {
  ?child dbo:parent dbpedia:Kazuaki_Nagasawa .
  ?child dbo:father ?player .
  ?player rdf:type dbo:Athlete ;
          rdf:type dbo:SoccerManager ;
          rdf:type dbo:SportsManager .
}
```",3,6,4,3,1,3,3,71,0,0,4,0,0.0,0
83,11,train,"Give me the party of Alceu Collares and ruling party in the birthplace, that is a town and Brazilian and a soccer club, of Sandro (footballer, born October 1983).","SELECT ?result WHERE { ?v2 <http://dbpedia.org/property/leaderParty> ?result . ?v2 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Brazil>. <http://dbpedia.org/resource/Alceu_Collares> <http://dbpedia.org/ontology/party> ?result . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Town>. <http://dbpedia.org/resource/Sandro_(footballer,_born_October_1983)> <http://dbpedia.org/ontology/birthPlace> ?v2 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerClub>. }","```sparql
# Step 1: Find Sandro's birthplace
SELECT ?sandroBirthPlace WHERE {
    ?sandro dbo:birthDate ?date .
    FILTER (YEAR(?date) = 1983 && MONTH(?date) = 10)
    ?sandro dbo:birthPlace ?sandroBirthPlace .
}

# Step 2: Verify if the birthplace is a Brazilian town with a soccer club
SELECT DISTINCT ?town WHERE {
    VALUES (?sandroBirthPlace) { <http://dbpedia.org/resource/PLACE_URI> } # Replace PLACE_URI with actual URI from step 1 result
    ?town dbo:country dbr:Brazil .
    ?town rdf:type dbo:Settlement .
    OPTIONAL { ?town dbo:sportTeam ?soccerClub . }
    FILTER EXISTS { ?soccerClub rdf:type dbo:SoccerClub }
}

# Step 3: Find Alceu Collares' political party
SELECT DISTINCT ?alceuParty WHERE {
    ?alceu foaf:name ""Alceu Collares"" .
    ?alceu dbo:partyAffiliation ?alceuParty .
}

# Step 4: Determine the ruling party in Sandro's birthplace
SELECT DISTINCT ?rulingParty WHERE {
    VALUES (?town) { <http://dbpedia.org/resource/TOWN_URI> } # Replace TOWN_URI with actual URI from step 2 result
    ?governingBody dbo:location ?town .
    ?governingBody dbo:partyAffiliation ?rulingParty .
}
```",3,6,4,2,2,3,2,20,0,0,1,0,0.0,0
573,13,train,"Give me the person decedent at the residence, that is a settlement, of William J. Phelan.",SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. ?result <http://dbpedia.org/ontology/deathPlace> ?v1 . <http://dbpedia.org/resource/William_J._Phelan> <http://dbpedia.org/property/residence> ?v1 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?decedent WHERE {
  # Find William J. Phelan's resource
  ?phelan a dbo:Person ;
          foaf:name ""William J. Phelan""@en .
  
  # Get his place of residence that is a settlement
  ?phelan dbo:residence ?settlement .
  ?settlement a dbo:Settlement .

  # Find persons who died at this settlement
  ?decedent dbo:deathPlace ?settlement ;
            a dbo:Person .
}
```",2,3,3,2,1,3,3,71,40,0,0,1.0,1.0,1.0
83,7,train,"Give me the ruling party in the birthplace, that is a town and Brazilian and a soccer club, of Sandro (footballer, born October 1983).","SELECT ?result WHERE { <http://dbpedia.org/resource/Sandro_(footballer,_born_October_1983)> <http://dbpedia.org/ontology/birthPlace> ?v1 . ?v1 <http://dbpedia.org/property/leaderParty> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerClub>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Town>. ?v1 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Brazil>. }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?town ?rulingParty WHERE {
  # Step 1: Find Sandro's birthplace
  ?sandro a dbo:Footballer ;
          foaf:name ""Sandro"" ;
          dbo:birthDate ?birthDate .
  
  FILTER (YEAR(?birthDate) = 1983 && MONTH(?birthDate) = 10)

  ?sandro dbo:birthPlace ?town .

  # Step 2: Ensure the birthplace is a Brazilian town with a soccer club
  ?town a dbo:Town ;
        dbp:country dbr:Brazil .
  
  OPTIONAL { 
    ?club dbo:location ?town ;
          a dbo:SoccerClub .
  }

  FILTER EXISTS { ?club a dbo:SoccerClub }
  
  # Step 3: Find the ruling party of the town
  ?town dbo:government ?government .
  ?government dbp:rulingParty ?rulingParty .
}
```",2,5,3,2,1,3,2,20,0,0,1,0,0.0,0
645,33,train,"Give me the military force of the force, that is an event and a military conflict and a societal event, of the native, that is a president and a politician, of Restoration (Spain) and commander in Battle of Jarama.",SELECT ?result WHERE { ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v3 <http://dbpedia.org/ontology/commander> ?v0 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. <http://dbpedia.org/resource/Battle_of_Jarama> <http://dbpedia.org/ontology/commander> ?result . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?result <http://dbpedia.org/ontology/battle> ?v3 . ?v0 <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Restoration_(Spain)> . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/President>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?militaryForce WHERE {
  ?person dbo:nationality dbr:Spain ;
          (dbo:presidentOf|dbo:politician) ?restorationEvent .
  
  FILTER(CONTAINS(LCASE(STR(?restorationEvent)), ""restoration"")) .

  ?person dbo:commanderIn ?battleJarama .
  FILTER(STR(?battleJarama) = ""Battle_of_Jarama"") .

  ?militaryForce dbo:event ?event ;
                dbo:militaryConflict ?conflict ;
                dbo:societalEvent ?societalEvent ;
                dbo:force ?person .
}
```",4,9,5,3,2,3,3,71,0,0,6,0,0.0,0
573,19,train,"Give me the person decedent at Quincy, Massachusetts and person decedent at the administration, that is a region, of Charlie Baker.","SELECT ?result WHERE { ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Region>. ?result <http://dbpedia.org/ontology/deathPlace> ?v0 . ?v0 <http://dbpedia.org/property/governor> ""Charlie Baker""@en . ?result <http://dbpedia.org/ontology/deathPlace> <http://dbpedia.org/resource/Quincy,_Massachusetts> . }","```sparql
# Query for person decedent at Quincy, Massachusetts
SELECT ?person WHERE {
  ?deathEvent dbo:place dbr:Quincy,_Massachusetts .
  ?deathEvent dbo:deceased ?person .
  FILTER (lang(?label) = 'en')
}

UNION

# Query for person associated with Charlie Baker's administration as a region
SELECT ?person WHERE {
  ?administration dbo:administrator dbr:Charlie_Baker .
  ?administration dbo:region ?region .
  ?region dbo:head ?person .
  FILTER (lang(?label) = 'en')
}
```",3,4,4,2,2,3,3,71,0,0,4,0,0.0,0
507,37,train,"Give me the professional in Film director, television director and director of the movie, that is a movie and a work, with the person born on 1919-06-17.","SELECT ?result WHERE { ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Film>. ?v3 <http://dbpedia.org/property/starring> ?v0 . ?v0 <http://dbpedia.org/ontology/birthDate> ""1919-06-17""^^<http://www.w3.org/2001/XMLSchema#date> . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?result <http://dbpedia.org/property/occupation> ""Film director, television director""@en . ?v3 <http://dbpedia.org/ontology/director> ?result . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?person ?film WHERE {
  ?person a dbo:FilmDirector ;
          dbo:birthDate ""1919-06-17""^^xsd:date ;
          dbo:works ?work .
  
  ?work a dbo:Film ;
        rdfs:label ?film .

  FILTER (CONTAINS(LCASE(?film), ""film"") || CONTAINS(LCASE(?film), ""movie""))
}
ORDER BY ?person
LIMIT 1
```",4,6,5,3,2,3,3,71,0,0,1,0,0.0,0
98,12,train,Give me the birth place of Paolo Ballesteros and entity in Philippines and region of Philippine Standard Time.,SELECT ?result WHERE { <http://dbpedia.org/resource/Paolo_Ballesteros> <http://dbpedia.org/ontology/birthPlace> ?result . ?result <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Philippines> . ?result <http://dbpedia.org/ontology/timeZone> <http://dbpedia.org/resource/Philippine_Standard_Time> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?birthPlace ?philippineEntity ?pstRegion
WHERE {
  # Find Paolo Ballesteros's birthplace
  dbr:Paolo_Ballesteros dbo:birthPlace ?birthPlace .

  # Find a related entity in the Philippines (e.g., nationality)
  OPTIONAL { 
    dbr:Paolo_Ballesteros dbo:nationality ?philippineEntity .
    FILTER(CONTAINS(LCASE(STR(?philippineEntity)), ""philippines""))
  }

  # Identify the region associated with Philippine Standard Time
  {
    SELECT DISTINCT ?pstRegion WHERE {
      ?region dbo:timeZone dbr:Philippine_Standard_Time .
      ?region rdfs:label ?pstRegionLabel .
      FILTER(LANG(?pstRegionLabel) = ""en"")
    }
  }
}
```",3,3,4,1,3,2,3,28,2,0,0,1.0,1.0,1.0
433,22,train,Give me the associated musical artist of Paul Chambers and professional in the profession of Bob Marley.,SELECT ?result WHERE { ?result <http://dbpedia.org/property/occupation> ?v1 . <http://dbpedia.org/resource/Bob_Marley> <http://dbpedia.org/property/occupation> ?v1 . <http://dbpedia.org/resource/Paul_Chambers> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . },"```sparql
SELECT ?artist WHERE {
  # Find artists associated with Paul Chambers
  ?association dbo:associatedWith dbr:Paul_Chambers .
  ?association dbo:associatedWith ?artist .

  # Ensure the artist is a musician like Bob Marley
  ?artist dbo:profession dbr:Singer-songwriter ;
          dbo:genre dbr:Reggae .
}
```",3,3,4,2,2,3,3,71,0,0,16,0,0.0,0
216,15,train,"Give me the coach of the reference, that is an organisation and a soccer club, to Croatia U21.","SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerClub>. ?v1 <http://dbpedia.org/ontology/coach> ?result . ?v1 <http://xmlns.com/foaf/0.1/name> ""Croatia U21""@en . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. }","```sparql
SELECT ?coach WHERE {
  ?club rdf:type dbo:FootballClub .
  ?club rdfs:label ""Dinamo Zagreb""@en .
  ?club dbo:coach ?coach .
}
```",2,4,3,2,1,3,3,71,0,0,1,0,0.0,0
326,1,train,Give me the person decedent at France.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/deathPlace> <http://dbpedia.org/resource/France> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?person ?name WHERE {
  ?person a dbo:Person ;
          dbo:deathPlace dbr:France .
  OPTIONAL { ?person rdfs:label ?name . FILTER (lang(?name) = 'en') }
}
LIMIT 10
```",1,1,2,1,1,3,2,20,10,10,3785,0.5,0.002635046113306983,0.005242463958060288
976,1,train,Give me the office of Meral Akşener.,SELECT ?result WHERE { <http://dbpedia.org/resource/Meral_Akşener> <http://dbpedia.org/property/office> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?office WHERE {
  dbr:Meral_Akşener dbo:office ?office .
}
```",1,1,2,1,1,3,3,71,0,0,3,0,0.0,0
976,11,train,"Give me the office of the leader, that is a politician, of Grand National Assembly of Turkey.",SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v1 <http://dbpedia.org/property/office> ?result . <http://dbpedia.org/resource/Grand_National_Assembly_of_Turkey> <http://dbpedia.org/ontology/leader> ?v1 . },"```sparql
SELECT ?officeLabel WHERE {
  ?assembly dbpedia-owl:officialName ""Grand National Assembly of Turkey""@en .
  ?assembly dbpedia-owl:leader ?leader .
  ?leader dbo:positionHeld ?office .
  SERVICE wikibase:label { bd:serviceParam wikibase:language ""[AUTO_LANGUAGE],en"". }
}
```",2,3,3,2,1,3,3,71,0,0,4,0,0.0,0
527,12,train,"Give me the author of the work, that is a work and a book, of Tom Baker and actor of The Book Tower.",SELECT ?result WHERE { ?v0 <http://dbpedia.org/property/author> ?result . ?v0 <http://dbpedia.org/property/author> <http://dbpedia.org/resource/Tom_Baker> . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Book>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. <http://dbpedia.org/resource/The_Book_Tower> <http://dbpedia.org/property/starring> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?author WHERE {
  ?work dbo:author dbr:Tom_Baker .
  ?work a dbo:Book .
  OPTIONAL { ?work dbo:narratedBy dbr:Tom_Baker . }
  FILTER EXISTS {
    ?actor dbo:actedIn ?work .
    ?actor rdfs:label ?actorLabel .
    FILTER(CONTAINS(LCASE(?actorLabel), ""the book tower""))
  }
}
```",3,5,4,2,2,3,2,20,0,0,1,0,0.0,0
773,39,train,"Give me the parent of the child, that is a royalty, of the father, that is an office holder and a royalty, of Carloman of Bavaria and parent of Carloman of Bavaria.",SELECT ?result WHERE { <http://dbpedia.org/resource/Carloman_of_Bavaria> <http://dbpedia.org/property/father> ?v0 . ?result <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Carloman_of_Bavaria> . ?v1 <http://dbpedia.org/ontology/parent> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v1 <http://dbpedia.org/property/father> ?v0 . },"```sparql
SELECT DISTINCT ?parent WHERE {
  # Step 1: Identify Carloman of Bavaria
  ?carloman dbr:Carloman_of_Bavaria .
  
  # Step 2: Find his father who is both a royalty and an office holder
  ?father dbo:child ?carloman ;
          rdf:type dbo:Monarch ; # Assuming Monarch as a type for royalty
          dbo:officeHolder ?office .

  # Step 3: Identify any child of this father who is royalty
  ?royalChild dbo:parent ?father ;
              rdf:type dbo:Monarch .

  # Step 4: Find the parent of this royal child
  ?parent dbo:child ?royalChild .
}
```",4,7,5,3,2,3,3,71,0,0,2,0,0.0,0
192,13,train,"Give me the spouse of the spouse, that is a royalty, of the child of Charles II of Naples.",SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v1 <http://dbpedia.org/ontology/spouse> ?v0 . ?v1 <http://dbpedia.org/ontology/spouse> ?result . ?v0 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Charles_II_of_Naples> . },"```sparql
SELECT DISTINCT ?spouseOfSpouse WHERE {
  # Step 1: Identify Charles II of Naples
  ?charles2 dcterms:title ""Charles II of Naples""@en .
  
  # Step 2: Find his children
  ?child dbo:parent ?charles2 ;
         rdf:type dbo:Child .

  # Step 3: Determine the spouse of that child
  ?spouse dbo:spouse ?child .

  # Step 4: Identify if any of these spouses have a spouse who is royalty
  ?spouseOfSpouse dbo:spouse ?spouse ;
                  rdf:type dbo:RoyalFamilyMember .
}
```",3,4,4,3,1,3,2,20,0,0,2,0,0.0,0
791,24,train,Give me the predecessor of the child of Emperor Takakura and father of Emperor Go-Toba.,SELECT ?result WHERE { <http://dbpedia.org/resource/Emperor_Go-Toba> <http://dbpedia.org/property/father> ?result . ?v2 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Emperor_Takakura> . ?result <http://dbpedia.org/ontology/successor> ?v2 . },"```sparql
SELECT ?predecessorLabel WHERE {
  # Step 1: Get Emperor Takakura and his child, Antoku
  ?emperorTakakura dbo:spouse ?antoku .
  ?antoku rdfs:label ""Emperor Antoku""@en .

  # Step 2: Get Emperor Go-Toba's father, Go-Shirakawa
  ?goToba dbo:father ?goShirakawa .
  ?goShirakawa rdfs:label ""Emperor Go-Shirakawa""@en .

  # Step 3: Find the predecessor of Emperor Go-Shirakawa
  ?goShirakawa dbo:predecessor ?predecessor .
  ?predecessor rdfs:label ?predecessorLabel .
  
  FILTER(LANG(?predecessorLabel) = ""en"")
}
```",3,3,4,2,2,3,3,71,0,0,1,0,0.0,0
433,38,train,"Give me the professional in the profession of Bob Marley and associated musical artist of the associated musical artist, that is an artist and a musical artist, of Scott LaFaro.",SELECT ?result WHERE { <http://dbpedia.org/resource/Bob_Marley> <http://dbpedia.org/property/occupation> ?v2 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. <http://dbpedia.org/resource/Scott_LaFaro> <http://dbpedia.org/ontology/associatedMusicalArtist> ?v3 . ?result <http://dbpedia.org/property/occupation> ?v2 . ?v3 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?person WHERE {
  # Find people with the profession of musician like Bob Marley
  ?person dbo:profession dbr:Singer-songwriter .
  
  # Ensure they are associated with Bill Evans, who is linked to Scott LaFaro
  ?person dbo:associatedMusicalArtist dbr:Bill_Evans .

  # Ensure they are recognized as an artist in general
  ?person a dbo:Artist .
}
```",4,6,5,2,2,3,3,71,0,0,4,0,0.0,0
926,31,train,Give me the father of the father of the spouse of Neşerek Kadın and successor of Mustafa III.,SELECT ?result WHERE { <http://dbpedia.org/resource/Neşerek_Kadın> <http://dbpedia.org/ontology/spouse> ?v2 . <http://dbpedia.org/resource/Mustafa_III> <http://dbpedia.org/ontology/successor> ?result . ?v0 <http://dbpedia.org/property/father> ?result . ?v2 <http://dbpedia.org/property/father> ?v0 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?fatherOfSpouse ?successorFather WHERE {
  # Step 1 & 2: Find Neşerek Kadın's spouse
  ?neserekkadin a dbo:Person ;
                dbo:spouse ?spouse .

  # Step 3: Find the father of Neşerek Kadın's spouse
  ?spouse dbo:father ?fatherOfSpouse .

  # Step 4 & 5: Identify Mustafa III's successor and find his father
  dbr:Mustafa_III dbo:succeededBy ?successor .
  ?successor dbo:father ?successorFather .

  # Step 6: Check if the fathers are the same person
  FILTER (?fatherOfSpouse = ?successorFather)
}
```",4,4,5,3,2,3,3,71,0,0,1,0,0.0,0
874,12,train,Give me the band of Manfred Mann (musician) and band of the band member of The Jones Gang.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/bandMember> <http://dbpedia.org/resource/Manfred_Mann_(musician)> . ?result <http://dbpedia.org/ontology/bandMember> ?v0 . ?v0 <http://dbpedia.org/ontology/associatedMusicalArtist> <http://dbpedia.org/resource/The_Jones_Gang> . },"```sparql
# Query to get the band of Manfred Mann
SELECT ?band WHERE {
  wd:Q12345 dbo:musicGroupMember ?band .
}

UNION

# Query to get the bands associated with members of The Jones Gang
SELECT DISTINCT ?memberBand WHERE {
  # Find members of The Jones Gang
  wd:Q67890 dbo:bandMember ?member .

  # Get other band memberships for these members
  ?member dbo:musicGroupMember ?memberBand .
}
```

Note: Replace `wd:Q12345` with the actual DBpedia entity ID for Manfred Mann and `wd:Q67890` with the entity ID for The Jones Gang. These IDs can be found by searching DBpedia or using a service like Wikidata to get the correct identifiers.",3,3,4,2,2,3,2,20,0,0,1,0,0.0,0
892,0,train,Give me the entity in Italy.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Italy> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?entity WHERE {
  ?entity dbo:country dbr:Italy .
}
LIMIT 10
```",1,1,2,1,1,3,3,71,10,0,13082,1.0,0.0007638252367858234,0.0015264845061822622
433,34,train,"Give me the professional in Musician and associated musical artist of the person born, that is a musical artist and an artist, as the persona of Paul Chambers.","SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. <http://dbpedia.org/resource/Paul_Chambers> <http://xmlns.com/foaf/0.1/givenName> ?v2 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?v1 <http://dbpedia.org/property/birthName> ?v2 . ?v1 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?result <http://dbpedia.org/property/occupation> ""Musician""@en . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT DISTINCT ?person ?associatedArtist ?birthPlace WHERE {
  # Identify Paul Chambers and confirm his profession as a musician
  VALUES ?chambers { dbr:Paul_Chambers_(musician) }
  
  ?chambers dbo:occupation dbr:Musician ;
            dbp:birthPlace ?birthPlace .

  # Find associated musical artists with whom he worked
  ?album dbo:artist ?associatedArtist .
  ?album dbo:performer ?chambers .

  # Find other persons born in the same place who are both musicians and artists
  ?person dbo:occupation dbr:Musician ;
          dbo:occupation dbr:Artist ;
          dbp:birthPlace ?birthPlace .
}
```",4,6,5,3,2,3,3,71,0,0,15,0,0.0,0
158,12,train,"Give me the party of the successor, that is a prime minister and an office holder and a politician, of André Tardieu and entity in France.",SELECT ?result WHERE { ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. <http://dbpedia.org/resource/André_Tardieu> <http://dbpedia.org/ontology/successor> ?v0 . ?result <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/France> . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/PrimeMinister>. ?v0 <http://dbpedia.org/ontology/party> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?successor ?party WHERE {
  # André Tardieu's resource in DBpedia
  dbr:André_Tardieu dbo:officeHolderOf dbr:Prime_Minister_of_France .

  # Find successors who are also Prime Ministers, politicians, and office holders
  ?successor dbo:officeHolderOf dbr:Prime_Minister_of_France .
  ?successor a dbo:Politician ;
            a dbo:OfficeHolder .
  
  # Ensure the successor comes after André Tardieu in terms of office holding
  FILTER NOT EXISTS {
    ?intermediate dbo:officeHolderOf dbr:Prime_Minister_of_France .
    ?intermediate dbo:predecessor dbr:André_Tardieu ;
                   dbo:successor ?successor .
  }

  # Get the political party of the successor
  ?successor dbo:party ?party .
}
```",3,6,4,2,2,3,2,20,0,0,1,0,0.0,0
166,1,train,Give me the entity in Spain.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Spain> . },"```sparql
SELECT DISTINCT ?entity WHERE {
  ?entity dbo:country dbr:Spain .
}
LIMIT 10
```",1,1,2,1,1,3,2,20,10,0,11834,1.0,0.0008443093549476528,0.0016871941960519654
267,7,train,"Give me the coach of the player, that is a soccer club, in Rasoul Khatibi.",SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/coach> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerClub>. <http://dbpedia.org/resource/Rasoul_Khatibi> <http://dbpedia.org/ontology/team> ?v1 . },"```sparql
SELECT ?coach WHERE {
  ?player foaf:name ""Rasoul Khatibi""@en .
  ?player dbo:team ?club .
  ?club rdfs:label ""Rasoul Khatibi""@en .
  ?club dbo:coach ?coach .
}
```",2,3,3,2,1,3,2,20,0,0,2,0,0.0,0
965,27,train,"Give me the parent of the person born, that is a noble, as the birth name of George Mountbatten, 2nd Marquess of Milford Haven.","SELECT ?result WHERE { ?v0 <http://dbpedia.org/property/birthName> ?v1 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Noble>. <http://dbpedia.org/resource/George_Mountbatten,_2nd_Marquess_of_Milford_Haven> <http://dbpedia.org/property/birthName> ?v1 . ?v0 <http://dbpedia.org/ontology/parent> ?result . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?parent ?parentLabel WHERE {
  # Find George Mountbatten, 2nd Marquess of Milford Haven
  VALUES ?george { dbr:George_Mountbatten,_2nd_Marquess_of_Milford_Haven }
  
  # Get his birth name
  ?george dbo:birthName ?birthName .
  
  # Find parents using the birth name
  ?parent dbo:child ?george .
  
  # Ensure parent is a noble by checking for a title or similar property
  OPTIONAL { ?parent dbo:title ?title . FILTER (CONTAINS(LCASE(?title), ""noble"")) }
  
  # Get labels for readability
  SERVICE wikibase:label { bd:serviceParam wikibase:language ""[AUTO_LANGUAGE],en"". }
}
```",3,4,4,3,1,3,3,71,0,0,2,0,0.0,0
433,12,train,Give me the associated musical artist of Bill Evans and professional in Musician.,"SELECT ?result WHERE { <http://dbpedia.org/resource/Bill_Evans> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?result <http://dbpedia.org/property/occupation> ""Musician""@en . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?artist WHERE {
  dbr:Bill_Evans dbo:associatedMusicalArtist ?artist .
  FILTER EXISTS { ?artist a dbo:Musician . }
}
```",2,2,3,1,2,3,3,71,0,0,3,0,0.0,0
773,3,train,Give me the parent of Bernard (son of Charles the Fat).,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Bernard_(son_of_Charles_the_Fat)> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?parent WHERE {
  ?charles a dbo:Monarch ;
           rdfs:label ""Charles the Fat""@en .
  
  ?bernard dbo:childOf ?charles ;
           rdfs:label ""Bernard (son of Charles the Fat)""@en .

  ?bernard dbo:parent ?parent .
}
```",1,1,2,1,1,3,3,71,0,0,1,0,0.0,0
773,14,train,"Give me the parent of the child, that is a royalty, of Louis the German.",SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v1 <http://dbpedia.org/ontology/parent> ?result . ?v1 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Louis_the_German> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?child ?parent WHERE {
  # Identify Louis the German
  dbr:Louis_the_German a dbo:Person ;
                       dbo:spouse ?spouse .

  # Find his children
  ?child dbo:parent dbr:Louis_the_German .
  
  # Filter for royalty (e.g., King, Queen)
  ?child dbo:title ?title .
  FILTER (
    str(?title) CONTAINS ""King"" ||
    str(?title) CONTAINS ""Queen"" ||
    str(?title) CONTAINS ""Emperor"" ||
    str(?title) CONTAINS ""Empress""
  )

  # Return the parent (Louis the German)
  BIND(dbr:Louis_the_German AS ?parent)
}
```",2,3,3,2,1,3,3,71,0,0,2,0,0.0,0
791,25,train,"Give me the predecessor of Emperor Antoku and father of the child, that is a royalty, of Emperor Takakura.",SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?result <http://dbpedia.org/ontology/successor> <http://dbpedia.org/resource/Emperor_Antoku> . ?v1 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Emperor_Takakura> . ?v1 <http://dbpedia.org/property/father> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?predecessor WHERE {
  # Find the predecessor of Emperor Antoku
  ?antoku dbo:succession dbr:Emperor_Antoku .
  ?predecessor dbo:succession ?antoku .

  # Find a child of Emperor Takakura who is royalty
  ?takakura dbo:child ?royalChild .
  FILTER (strstarts(str(?royalChild), ""http://dbpedia.org/resource/Emperor_"") || strstarts(str(?royalChild), ""http://dbpedia.org/resource/Prince_""))

  # Ensure the father of this child is Emperor Takakura
  ?royalChild dbo:father dbr:Emperor_Takakura .

  # Check if the predecessor and the father are the same person
  FILTER (?predecessor = dbr:Emperor_Takakura)
}
```",3,4,4,2,2,3,3,71,0,0,1,0,0.0,0
917,39,train,"Give me the child of Kekūanāoʻa and child of the father of the child, that is a royalty, of Kamehameha III.",SELECT ?result WHERE { <http://dbpedia.org/resource/Kamehameha_III> <http://dbpedia.org/ontology/child> ?v2 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v2 <http://dbpedia.org/property/father> ?v0 . ?result <http://dbpedia.org/property/father> ?v0 . ?result <http://dbpedia.org/ontology/parent> <http://dbpedia.org/resource/Kekūanāoʻa> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?child WHERE {
  # Step 1: Find Kekūanāoʻa's child (Bernice Pauahi Bishop)
  ?kekuanaoa dbo:child dbr:Bernice_Pauahi_Bishop .
  
  # Step 2: Find Bernice Pauahi Bishop's child
  dbr:Bernice_Pauahi_Bishop dbo:child ?bishopsChild .

  # Step 3: Ensure the child is royalty and related to Kamehameha III
  ?bishopsChild a dbo:Royal .
  OPTIONAL { ?bishopsChild dbo:spouse ?spouse . }
  FILTER EXISTS {
    ?spouse dbo:parent dbr:Kamehameha_III .
  }

  # Bind the result to ?child
  BIND(?bishopsChild AS ?child)
}
```",4,5,5,3,2,3,3,71,0,0,3,0,0.0,0
874,6,train,Give me the band of Robert Hart (musician) and band of Manfred Mann (musician).,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/bandMember> <http://dbpedia.org/resource/Robert_Hart_(musician)> . ?result <http://dbpedia.org/ontology/bandMember> <http://dbpedia.org/resource/Manfred_Mann_(musician)> . },"```sparql
SELECT ?musicianLabel ?bandLabel WHERE {
  VALUES (?musician) { 
    dbr:Robert_Hart_(musician)
    dbr:Manfred_Mann_(musician)
  }
  
  ?musician rdfs:label ?musicianLabel .
  ?musician dbo:band ?band .
  ?band rdfs:label ?bandLabel .

  FILTER (lang(?musicianLabel) = 'en' && lang(?bandLabel) = 'en')
}
```",2,2,3,1,2,3,2,20,0,0,1,0,0.0,0
573,3,train,Give me the real name of Charlie Baker (Australian footballer).,SELECT ?result WHERE { <http://dbpedia.org/resource/Charlie_Baker_(Australian_footballer)> <http://xmlns.com/foaf/0.1/name> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT ?realName WHERE {
  ?person a dbo:AustralianFootballer ;
          foaf:name ""Charlie Baker"" .
  OPTIONAL { ?person dbo:birthName ?realName }
}
```",1,1,2,1,1,3,3,71,0,0,2,0,0.0,0
715,28,train,"Give me the commander in the force, that is a military conflict, of Abd el-Krim and commander in Spanish Civil War and leader of Ministry of the Air (Spain).",SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. <http://dbpedia.org/resource/Ministry_of_the_Air_(Spain)> <http://dbpedia.org/ontology/leader> ?result . ?v1 <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Abd_el-Krim> . <http://dbpedia.org/resource/Spanish_Civil_War> <http://dbpedia.org/ontology/commander> ?result . ?v1 <http://dbpedia.org/ontology/commander> ?result . },"```sparql
SELECT ?person WHERE {
  # Abd el-Krim's conflict (Rif War)
  ?rifWar dbo:opposingCommander ?commander1 .
  ?commander1 foaf:name ""Francisco Franco"" .

  # Spanish Civil War commander
  ?civilWar dbo:commander ?commander2 .
  ?commander2 foaf:name ""Francisco Franco"" .

  # Leader of the Ministry of the Air (Spain)
  ?ministry dcterms:title ""Ministerio del Aire""@es ;
            dbo:leader ?leader .
  ?leader foaf:name ""Francisco Franco"" .
}
```",4,5,5,2,3,3,3,71,0,0,1,0,0.0,0
933,37,train,Give me the reference to the birth name of the professional in Musician and band of The Ramong Sound.,SELECT ?result WHERE { ?v1 <http://dbpedia.org/property/birthName> ?v2 . <http://dbpedia.org/resource/The_Ramong_Sound> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v1 <http://dbpedia.org/property/occupation> <http://dbpedia.org/resource/Musician> . ?result <http://xmlns.com/foaf/0.1/name> ?v2 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?musician ?birthName WHERE {
  ?band a dbo:Band ;
        rdfs:label ""The Rolling Stones""@en .
  
  ?member dbo:member ?band ;
          dbo:birthName ?birthName ;
          foaf:name ?musician .

  FILTER (lang(?band) = 'en')
}
```",4,4,5,3,2,3,3,71,0,0,1,0,0.0,0
83,1,train,Give me the party of Alceu Collares.,SELECT ?result WHERE { <http://dbpedia.org/resource/Alceu_Collares> <http://dbpedia.org/ontology/party> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?party WHERE {
  ?person dbo:birthName ""Alceu Collares"" .
  ?person a dbo:Politician .
  ?person dbo:party ?party .
}
```",1,1,2,1,1,3,2,20,0,0,1,0,0.0,0
965,32,train,"Give me the spouse of the spouse of Princess Victoria of Hesse and by Rhine and parent of the child, that is a royalty, of Prince Louis of Battenberg.",SELECT ?result WHERE { ?v3 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Prince_Louis_of_Battenberg> . ?result <http://dbpedia.org/ontology/spouse> ?v1 . <http://dbpedia.org/resource/Princess_Victoria_of_Hesse_and_by_Rhine> <http://dbpedia.org/ontology/spouse> ?v1 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v3 <http://dbpedia.org/ontology/parent> ?result . },"```sparql
SELECT ?spouse WHERE {
  wd:Q123456 wdt:P26 wd:Q789012 . # Princess Victoria of Hesse and by Rhine (wd:Q123456) married to Ernest Louis, Grand Duke of Hesse (wd:Q789012)
  wd:Q789012 wdt:P26 ?child .     # Children of Ernest Louis
  ?child wdt:P31 wd:Q5 .          # The child is a human
  ?child wdt:P22 wd:Q987654 .     # The child is Princess Alice of Battenberg (wd:Q987654)
  ?child wdt:P26 ?spouse .        # Spouse of Princess Alice of Battenberg
}
```

Note: In the above SPARQL query, `wd:Q123456`, `wd:Q789012`, and `wd:Q987654` are placeholders for the actual DBpedia identifiers for Princess Victoria of Hesse and by Rhine, Ernest Louis, Grand Duke of Hesse, and Princess Alice of Battenberg respectively. You would need to replace these with their correct DBpedia resource IDs.",4,5,5,2,2,3,3,71,0,0,1,0,0.0,0
495,14,train,Give me the father of the child of the parent of Princess Pauline of Württemberg (1810–1856).,SELECT ?result WHERE { ?v0 <http://dbpedia.org/ontology/parent> ?v2 . <http://dbpedia.org/resource/Princess_Pauline_of_Württemberg_(1810–1856)> <http://dbpedia.org/ontology/parent> ?v2 . ?v0 <http://dbpedia.org/property/father> ?result . },"```sparql
SELECT DISTINCT ?father WHERE {
  # Step 1: Identify Princess Pauline of Württemberg
  ?princess a dbo:Person ;
            foaf:name ""Princess Pauline of Württemberg""@en .
  
  FILTER(YEAR(?princess.foaf:birthday) = 1810 && YEAR(?princess.foaf:death) = 1856)

  # Step 2: Find her parent(s)
  ?parent dbo:child ?princess .

  # Step 3: Determine the child of her parent
  ?parentChild dbo:child ?child .

  # Step 4: Identify the father of this child
  ?father dbo:child ?child .
}
```",3,3,4,3,1,3,2,20,0,0,1,0,0.0,0
329,15,train,Give me the entity in Northern Ireland and birthplace of the author of The Tailor and Ansty.,SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/birthPlace> ?result . ?result <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Northern_Ireland> . <http://dbpedia.org/resource/The_Tailor_and_Ansty> <http://dbpedia.org/property/author> ?v1 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?author ?birthPlace WHERE {
  ?book dbo:author ?author .
  ?book rdfs:label ""The Tailor and Ansty""@en .
  
  OPTIONAL { ?author dbo:birthPlace ?birthPlace . }
  
  FILTER (CONTAINS(LCASE(STR(?birthPlace)), ""northern ireland""))
}
```",3,3,4,2,2,2,3,28,0,0,1,0,0.0,0
433,17,train,Give me the profession of the writer of Slowhand at 70 – Live at the Royal Albert Hall.,SELECT ?result WHERE { <http://dbpedia.org/resource/Slowhand_at_70_–_Live_at_the_Royal_Albert_Hall> <http://dbpedia.org/property/writer> ?v1 . ?v1 <http://dbpedia.org/property/occupation> ?result . },"```sparql
SELECT ?profession WHERE {
  wd:Q3473 dbo:occupation ?profession .
}
```",2,2,3,2,1,3,3,71,0,0,11,0,0.0,0
791,17,train,"Give me the child, that is a royalty, of the father, that is a royalty and an office holder, of Emperor Antoku.",SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. <http://dbpedia.org/resource/Emperor_Antoku> <http://dbpedia.org/property/father> ?v1 . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?result <http://dbpedia.org/property/father> ?v1 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?child WHERE {
  # Minamoto no Yoritomo is the father of Emperor Antoku and holds an office
  dbr:Emperor_Antoku dbo:father dbr:Minamoto_no_Yoritomo .
  dbr:Minamoto_no_Yoritomo a dbo:Monarch ;
                         dbo:officeHolderOf dbr:Shogunate_of_Japan .

  # Emperor Antoku is the child of Minamoto no Yoritomo
  dbr:Emperor_Antoku dbo:child dbr:Minamoto_no_Yoritomo .

  # Prince Atsumichi is a child of Emperor Antoku and is royalty
  ?child dbo:father dbr:Emperor_Antoku .
  ?child a dbo:Monarch .
}
```",2,5,3,2,1,3,3,71,0,0,3,0,0.0,0
976,14,train,Give me the office of the person born as Mehmet Naci Bostancı.,"SELECT ?result WHERE { ?v0 <http://dbpedia.org/property/office> ?result . ?v0 <http://dbpedia.org/property/birthName> ""Mehmet Naci Bostancı""@en . }","```sparql
SELECT ?office WHERE {
  ?person foaf:name ""Mehmet Naci Bostancı""@en .
  ?person dbo:office ?office .
}
```",2,2,3,2,1,3,3,71,0,0,4,0,0.0,0
573,4,train,"Give me the administration, that is a region, of Charlie Baker.","SELECT ?result WHERE { ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Region>. ?result <http://dbpedia.org/property/governor> ""Charlie Baker""@en . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?region WHERE {
  ?person a dbo:Person ;
          foaf:name ""Charlie Baker""@en .
  ?position dbo:agent ?person ;
            dbo:title ""Governor of Massachusetts""@en .
  ?position dbo:administrativeRegion ?region .
}
```",1,2,2,1,1,3,3,71,0,0,1,0,0.0,0
839,4,train,"Give me the person born, that is a musical artist, as Kevin Richard Russell.","SELECT ?result WHERE { ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?result <http://dbpedia.org/property/birthName> ""Kevin Richard Russell""@en . }","```sparql
PREFIX foaf: <http://xmlns.com/foaf/0.1/>
PREFIX dbo: <http://dbpedia.org/ontology/>

SELECT ?person ?fullName WHERE {
  ?person a dbo:MusicalArtist .
  ?person foaf:givenName ""Kevin"" .
  ?person foaf:familyName ""Russell"" .
  OPTIONAL { ?person foaf:name ?fullName }
}
```",1,2,2,1,1,3,3,71,0,0,1,0,0.0,0
47,21,train,Give me the office of the administration of Jagdeep Dhankhar and office of Ajoy Mukherjee.,SELECT ?result WHERE { ?v1 <http://dbpedia.org/property/governor> <http://dbpedia.org/resource/Jagdeep_Dhankhar> . ?v1 <http://dbpedia.org/property/office> ?result . <http://dbpedia.org/resource/Ajoy_Mukherjee> <http://dbpedia.org/property/office> ?result . },"```sparql
# Query for Jagdeep Dhankhar's office
SELECT ?office WHERE {
  ?person dbo:wikiPageID ""Jagdeep_Dhankhar"" .
  ?person dbo:positionHeld ?office .
}

UNION

# Query for Ajoy Mukherjee's office
SELECT ?office WHERE {
  ?person dbo:wikiPageID ""Ajoy_Mukherjee"" .
  ?person dbo:positionHeld ?office .
}
```",3,3,4,2,2,3,3,71,0,0,1,0,0.0,0
417,2,train,Give me the child of Alexandrine of Mecklenburg-Schwerin.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/parent> <http://dbpedia.org/resource/Alexandrine_of_Mecklenburg-Schwerin> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT ?child WHERE {
  ?person foaf:name ""Alexandrine of Mecklenburg-Schwerin""@en .
  ?person dbo:child ?child .
}
```",1,1,2,1,1,3,3,71,2,0,0,1.0,1.0,1.0
976,16,train,"Who is the mayor, that is a politician and an office holder and Turkish, of the reference, that is an organisation and a political party and Turkish, to Millet İttifakı?","SELECT ?result WHERE { ?v0 <http://xmlns.com/foaf/0.1/name> ""Millet İttifakı""@en . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v0 <http://dbpedia.org/property/leader> ?result . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/PoliticalParty>. ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?result <http://dbpedia.org/ontology/nationality> <http://dbpedia.org/resource/Turkey>. ?v0 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Turkey>. }","```sparql
SELECT ?mayor WHERE {
  # Identify Millet İttifakı as an organization and political party
  dbpedia:Milli_İttifak_Partisi dbo:type dbpedia-owl:PoliticalParty ;
                                  dbo:type dbpedia-owl:Organization .

  # Find entities that are references or related to Millet İttifakı
  ?reference dbo:wikiPageRedirects dbpedia:Milli_İttifak_Partisi .
  
  # Filter these entities to find those that are organizations and political parties
  ?reference a dbpedia-owl:PoliticalParty ;
             a dbpedia-owl:Organization .

  # Identify the mayor who is a politician, office holder, and Turkish
  ?mayor dbo:nationality dbr:Turkey ;
         dbo:occupation dbr:Politician ;
         dbo:officeHolder ?reference .
}
```",2,8,3,2,1,3,3,71,0,0,1,0,0.0,0
495,5,train,Give me the child of Princess Charlotte of Saxe-Hildburghausen.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/parent> <http://dbpedia.org/resource/Princess_Charlotte_of_Saxe-Hildburghausen> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?child WHERE {
  dbr:Princess_Charlotte_of_Saxe-Hildburghausen dbo:child ?child .
}
```",1,1,2,1,1,3,2,20,4,0,0,1.0,1.0,1.0
955,12,train,"Give me the band of the band member, that is a musical artist and an artist, of Street Dogs and band of Nate Albert.",SELECT ?result WHERE { ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. ?result <http://dbpedia.org/ontology/bandMember> <http://dbpedia.org/resource/Nate_Albert> . ?result <http://dbpedia.org/ontology/bandMember> ?v0 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?v0 <http://dbpedia.org/ontology/associatedMusicalArtist> <http://dbpedia.org/resource/Street_Dogs> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?band WHERE {
  ?person a dbo:MusicalArtist ;
          dbo:memberOfBand dbr:Street_Dogs .
  ?person foaf:name ""Nate Albert"" .
  OPTIONAL { ?person dbo:associatedBand ?band . }
  FILTER EXISTS { ?band a dbo:MusicalGroup } 
}
```",3,5,4,2,2,3,2,20,0,0,1,0,0.0,0
773,16,train,"Give me the successor of the child, that is a royalty, of Louis the Pious.",SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/successor> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. <http://dbpedia.org/resource/Louis_the_Pious> <http://dbpedia.org/ontology/child> ?v1 . },"```sparql
SELECT ?child ?successor WHERE {
  ?louis rdf:type dbo:Monarch ;
         foaf:name ""Louis the Pious""@en .
  
  ?louis dbo:spouse ?wife .
  ?wife dbo:child ?child .

  ?child rdf:type dbo:Monarch ;
         foaf:name ?nameChild .

  OPTIONAL {
    ?child dbo:succeededBy ?successor .
    ?successor foaf:name ?nameSuccessor .
  }

  FILTER(?nameChild IN (""Lothair I"", ""Pepin of Aquitaine"", ""Louis the German"", ""Charles the Bald""))
}
```",2,3,3,2,1,3,3,71,0,0,5,0,0.0,0
36,6,train,Give me the actor of Being Mrs Elliot and person born in 1971.,"SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/birthYear> ""1971""^^<http://www.w3.org/2001/XMLSchema#gYear> . <http://dbpedia.org/resource/Being_Mrs_Elliot> <http://dbpedia.org/ontology/starring> ?result . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?actor WHERE {
  ?film dbo:title ""Being Mrs Elliot""@en .
  ?film dbo:starring ?actor .
  ?actor dbo:birthdayYear ?year .
  FILTER (?year = 1971)
}
```",2,2,3,1,2,2,3,28,0,0,1,0,0.0,0
987,14,train,"Give me the entity in the region, that is a country, of Central European Time.",SELECT ?result WHERE { ?v0 <http://dbpedia.org/property/timeZone> <http://dbpedia.org/resource/Central_European_Time> . ?result <http://dbpedia.org/ontology/country> ?v0 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?country WHERE {
  ?country a dbo:Country .
  ?country dbo:timeZone dbr:Central_European_Time .
}
```",2,3,3,2,1,3,3,71,29,65,173232,0.30851063829787234,0.00016737754024275515,0.00033457356292001964
933,14,train,"Give me the band of the band, that is a group and a band and an organisation, of Alan Warner (musician).",SELECT ?result WHERE { <http://dbpedia.org/resource/Alan_Warner_(musician)> <http://dbpedia.org/ontology/associatedMusicalArtist> ?v0 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Group>. ?v0 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Band>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?band WHERE {
  ?band a dbo:Band ;
        a dbo:MusicalGroup ;
        a dbo:Organization .
  ?band dbo:musicalArtist dbp:Alan_Warner .
}
```",2,5,3,2,1,3,3,71,0,0,4,0,0.0,0
579,1,train,Give me the person born as Isobel Jane Miller Richard.,"SELECT ?result WHERE { ?result <http://dbpedia.org/property/birthName> ""Isobel Jane Miller Richard""@en . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT ?person ?name WHERE {
  ?person dbo:birthName ""Isobel Jane Miller Richard"" .
  OPTIONAL { ?person foaf:name ?name . }
}
```",1,1,2,1,1,3,2,20,0,0,1,0,0.0,0
102,3,train,Give me the player in Ellie Roebuck.,SELECT ?result WHERE { <http://dbpedia.org/resource/Ellie_Roebuck> <http://dbpedia.org/ontology/team> ?result . },"```sparql
PREFIX dbp: <http://dbpedia.org/property/>
PREFIX dbo: <http://dbpedia.org/ontology/>

SELECT ?teamName WHERE {
  ?person foaf:name ""Ellie Roebuck""@en .
  ?person dbp:team ?team .
  ?team foaf:name ?teamName .
}
```",1,1,2,1,1,3,2,20,0,0,5,0,0.0,0
826,8,train,Who is the parent of Prince Friedrich of Hesse and by Rhine?,SELECT ?result WHERE { <http://dbpedia.org/resource/Prince_Friedrich_of_Hesse_and_by_Rhine> <http://dbpedia.org/ontology/parent> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?parent WHERE {
  VALUES ?person { dbr:Friedrich_of_Hesse_and_by_Rhine }
  ?person dbo:parent ?parent .
}
```",1,1,2,1,1,3,3,71,0,0,2,0,0.0,0
170,12,train,Give me the domain of Mayor and entity in Russia and birth place of Era Ziganshina.,"SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Russia> . <http://dbpedia.org/resource/Era_Ziganshina> <http://dbpedia.org/ontology/birthPlace> ?result . ?result <http://dbpedia.org/ontology/leaderTitle> ""Mayor""@en . }","```sparql
# Query for Domain of Mayor and Entity in Russia
SELECT ?mayor ?location WHERE {
  ?mayor dbo:positionTitle dbr:Mayor .
  ?mayor dbo:country dbr:Russia .
  ?mayor dbo:location ?location .
}

# Query for Birth Place of Era Ziganshina
SELECT ?birthPlace WHERE {
  dbpedia-owl:Person rdfs:label ""Era Ziganshina""@en .
  ?era dbp:birthPlace ?birthPlace .
}
```",3,3,4,1,3,2,3,28,0,0,1,0,0.0,0
170,1,train,Give me the birth place of Era Ziganshina.,SELECT ?result WHERE { <http://dbpedia.org/resource/Era_Ziganshina> <http://dbpedia.org/ontology/birthPlace> ?result . },"```sparql
SELECT ?birthPlace WHERE {
  dbpedia:en:Era_Ziganshina dbo:birthPlace ?birthPlace .
}
```",1,1,2,1,1,2,3,28,0,0,3,0,0.0,0
554,12,train,Give me the leader of the birth place of The Legendary Tigerman and leader of Portuguese São Tomé and Príncipe.,SELECT ?result WHERE { ?v0 <http://dbpedia.org/property/leader> ?result . <http://dbpedia.org/resource/The_Legendary_Tigerman> <http://dbpedia.org/ontology/birthPlace> ?v0 . <http://dbpedia.org/resource/Portuguese_São_Tomé_and_Príncipe> <http://dbpedia.org/property/leader> ?result . },"```sparql
# Query to find the birthplace of José Manuel Coimbra (The Legendary Tigerman)
SELECT ?birthPlace WHERE {
  wd:Q1234568 dbo:birthPlace ?birthPlace .
}

# Query to find the leader of the identified birthplace in Portugal
SELECT ?leader WHERE {
  ?birthPlace a dbo:PopulatedPlace ;
              dbo:country dbr:Portugal ;
              dbo:mayor ?leader .
}

# Query to find the current President of São Tomé and Príncipe
SELECT ?president WHERE {
  wd:Q1234567 dbo:headOfState ?president .
}
```

Note: Replace `wd:Q1234568` with the actual DBpedia identifier for José Manuel Coimbra, and `wd:Q1234567` with the identifier for São Tomé and Príncipe.",3,3,4,2,2,3,2,20,0,0,1,0,0.0,0
382,7,train,"Give me the birthplace of the manager, that is a soccer manager and an athlete and a sports manager, of Bonner SC.",SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerManager>. <http://dbpedia.org/resource/Bonner_SC> <http://dbpedia.org/ontology/manager> ?v1 . ?v1 <http://dbpedia.org/ontology/birthPlace> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsManager>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Athlete>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?birthPlace WHERE {
  dbr:Rainer_Widmayer dbo:birthPlace ?birthPlace .
}
```",2,5,3,2,1,3,2,20,1,1,1,0.5,0.5,0.5
267,14,train,Give me the person born on the birth date of the reference to Dan Cathy.,"SELECT ?result WHERE { ?v2 <http://xmlns.com/foaf/0.1/name> ""Dan Cathy""@en . ?result <http://dbpedia.org/ontology/birthDate> ?v0 . ?v2 <http://dbpedia.org/ontology/birthDate> ?v0 . }","```sparql
# Step 1: Get the birth date of Dan Cathy
SELECT ?birthDate WHERE {
    dbpedia:Dan_Cathy dbo:birthDate ?birthDate .
}

# Step 2: Find other people with the same birth date as Dan Cathy
PREFIX dbo: <http://dbpedia.org/ontology/>
SELECT DISTINCT ?person ?name WHERE {
    ?person a dbo:Person ;
            dbo:birthDate ?birthDate .
    FILTER(?birthDate = ""1978-12-19""^^xsd:date) # Assuming we found this date from the first query
    OPTIONAL { ?person rdfs:label ?name . FILTER(LANG(?name) = 'en') }
}
```",3,3,4,3,1,3,2,20,0,0,35,0,0.0,0
417,32,train,"Give me the child of the father of Frederick IX of Denmark and spouse of the parent, that is a royalty, of Count Ingolf of Rosenborg.",SELECT ?result WHERE { ?result <http://dbpedia.org/property/father> ?v3 . ?result <http://dbpedia.org/ontology/spouse> ?v1 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. <http://dbpedia.org/resource/Frederick_IX_of_Denmark> <http://dbpedia.org/property/father> ?v3 . ?v1 <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Count_Ingolf_of_Rosenborg> . },"```sparql
# Step 1: Find Frederick IX of Denmark's father
SELECT ?father WHERE {
  wd:Q12345 wdt:P22 ?father .
}

# Step 2: Find the children of Frederick IX's father and his spouse
SELECT DISTINCT ?child WHERE {
  ?father wdt:P40 ?child .
  OPTIONAL { ?spouse wdt:P26 ?father . }
}

# Step 3: Identify Count Ingolf of Rosenborg's parent
SELECT ?parent WHERE {
  wd:Q67890 wdt:P25 ?parent .
}

# Step 4: Find the spouse of this parent
SELECT DISTINCT ?spouse WHERE {
  ?parent wdt:P26 ?spouse .
}

# Step 5: Determine if any child is royalty and common between both sets
SELECT DISTINCT ?commonChild WHERE {
  # Children from Frederick IX's father and his spouse
  ?father wdt:P40 ?child1 .
  OPTIONAL { ?spouse1 wdt:P26 ?father . }
  
  # Children from Count Ingolf of Rosenborg's parent and their spouse
  ?parent wdt:P25 ?child2 .
  OPTIONAL { ?spouse2 wdt:P26 ?parent . }

  # Check if the child is royalty
  FILTER EXISTS {
    ?child1 wdt:P31 wd:Q5 .
  }
  
  # Find common children
  FILTER (?child1 = ?child2)
  BIND(?child1 AS ?commonChild)
}
```

Note: Replace `wd:Q12345` with the DBpedia ID for Frederick IX of Denmark and `wd:Q67890` with the DBpedia ID for Count Ingolf of Rosenborg.",4,5,5,2,2,3,3,71,0,0,1,0,0.0,0
341,5,train,Give me the band member of the awardee of List of awards and nominations received by Beyoncé.,SELECT ?result WHERE { ?v1 <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/List_of_awards_and_nominations_received_by_Beyoncé> . ?result <http://dbpedia.org/ontology/associatedMusicalArtist> ?v1 . },"```sparql
SELECT ?bandMember WHERE {
  ?beyonce dbo:wikiPageRedirects dbr:Beyoncé .
  ?award dbo:recipient ?beyonce ;
         dbp:name ?awardName .
  
  OPTIONAL {
    ?group dbo:member ?bandMember .
    ?beyonce dbo:memberOf ?group .
  }
  
  FILTER EXISTS { ?beyonce dbo:award ?award }
}
```",2,2,3,2,1,2,2,9,0,0,50,0,0.0,0
166,13,train,"Give me the resting place of the military force of the force, that is an event and a societal event and a military conflict, of Manuel Hedilla.",SELECT ?result WHERE { ?v0 <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Manuel_Hedilla> . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v1 <http://dbpedia.org/ontology/battle> ?v0 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?v1 <http://dbpedia.org/ontology/restingPlace> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?restingPlace WHERE {
  ?hedilla dbo:birthName ""Manuel Hedilla"" .
  ?hedilla dbo:deathPlace ?deathPlace .
  ?hedilla dbo:burialPlace ?restingPlace .
  
  OPTIONAL { 
    ?force dbo:leader ?hedilla .
    ?event dbo:participatedInMilitaryConflict ?civilWar .
    ?civilWar rdfs:label ""Spanish Civil War""@en .
  }
}
```",3,6,4,3,1,3,2,20,0,0,36,0,0.0,0
326,4,train,"Give me the person decedent at Rancho Mirage, California and professional in Composer.","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/deathPlace> <http://dbpedia.org/resource/Rancho_Mirage,_California> . ?result <http://dbpedia.org/property/occupation> <http://dbpedia.org/resource/Composer> . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?person ?name WHERE {
  ?person dbo:deathPlace dbr:Rancho_Mirage,_California .
  ?person dbo:occupation dbr:Composer .
  OPTIONAL { ?person foaf:name ?name . }
}
```",2,2,3,1,2,2,2,9,0,0,1,0,0.0,0
892,35,train,"Give me the entity in the profession of Henri Crolla and entity in the administration, that is Italian and a region and a settlement and an administrative region, of Democratic Party (Italy).",SELECT ?result WHERE { ?v0 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Italy>. <http://dbpedia.org/resource/Henri_Crolla> <http://dbpedia.org/property/occupation> ?v1 . ?v0 <http://dbpedia.org/property/leaderParty> <http://dbpedia.org/resource/Democratic_Party_(Italy)> . ?result <http://dbpedia.org/ontology/country> ?v1 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Region>. ?result <http://dbpedia.org/ontology/province> ?v0 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/AdministrativeRegion>. },"```sparql
# Query to find Henri Crolla's profession
SELECT ?profession WHERE {
  dbpedia:Henri_Crolla dbo:occupation ?profession .
}

# Query to find Italian regions that are settlements, administrative regions, and associated with the Democratic Party (Italy)
SELECT DISTINCT ?region WHERE {
  ?region a dbo:Settlement ;
          a dbo:AdministrativeRegion ;
          dbo:country dbr:Italy ;
          dbp:party dbr:Democratic_Party_(Italy) .
}
```",4,8,5,2,2,3,3,71,0,0,587,0,0.0,0
216,11,train,Give me the administration of the designer of Woolfe: The Red Hood Diaries.,SELECT ?result WHERE { ?result <http://dbpedia.org/property/leader> ?v1 . <http://dbpedia.org/resource/Woolfe:_The_Red_Hood_Diaries> <http://dbpedia.org/property/designer> ?v1 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?designer ?role WHERE {
  # Find the designer of Woolfe: The Red Hood Diaries
  ?game dbo:director ?designer .
  ?game rdfs:label ""Woolfe: The Red Hood Diaries""@en .

  OPTIONAL {
    # Check if the designer has an administrative role in the game
    ?role dbr:Woolfe:_The_Red_Hood_Diaries ?relation .
    ?role dbo:agent ?designer .
    ?role a ?roleType .
    
    FILTER(?roleType IN (dbo:Producer, dbo:Director))
  }
}
```",2,2,3,2,1,2,3,28,0,0,1099,0,0.0,0
892,6,train,Give me the award of Anna Ishii.,SELECT ?result WHERE { <http://dbpedia.org/resource/Anna_Ishii> <http://dbpedia.org/property/awards> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?award WHERE {
  ?person a dbo:Person ;
          foaf:name ""Anna Ishii""@en .
  OPTIONAL { ?person dbo:award ?award . }
}
```",1,1,2,1,1,3,3,71,0,1,1,0.0,0.0,0
791,13,train,Give me the predecessor of the child of Emperor Takakura.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/successor> ?v1 . ?v1 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Emperor_Takakura> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>

SELECT ?predecessor WHERE {
  ?emperor a dbo:Emperor ;
           foaf:name ""Takakura""@en .
  
  ?child dbo:parent ?emperor ;
         a dbo:Person .

  ?successor dbo:predecessor ?child ;
             a dbo:Emperor .

  ?successor dbo:predecessor ?predecessor .
}
```",2,2,3,2,1,3,3,71,0,0,2,0,0.0,0
216,2,train,Give me the administration of .,"SELECT ?result WHERE { ?result <http://dbpedia.org/property/leader> """"@en . }","```
# No valid SPARQL query can be generated due to lack of specific subject in the question.
```",1,1,2,1,1,2,3,28,0,0,1099,0,0.0,0
645,11,train,Give me the commander in the force of Carlos Asensio Cabanillas.,SELECT ?result WHERE { ?v0 <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Carlos_Asensio_Cabanillas> . ?v0 <http://dbpedia.org/ontology/commander> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?commander WHERE {
  ?person a dbo:MilitaryPerson ;
          foaf:name ""Carlos Asensio Cabanillas""@en .
  
  OPTIONAL { ?person dbo:commander ?commander . }
  FILTER (strstarts(str(?person), str(dbr:Carlos_Asensio_Cabanillas)))
}
```",2,2,3,2,1,3,3,71,0,0,51,0,0.0,0
573,25,train,"Give me the parent of the author, that is a politician and an office holder, of Exchequer Standards and person decedent at Quincy, Massachusetts.","SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. <http://dbpedia.org/resource/Exchequer_Standards> <http://dbpedia.org/property/author> ?v1 . ?v1 <http://dbpedia.org/ontology/parent> ?result . ?result <http://dbpedia.org/ontology/deathPlace> <http://dbpedia.org/resource/Quincy,_Massachusetts> . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. }","```sparql
SELECT ?author ?parent WHERE {
  ?work dcterms:creator ?author .
  ?work dc:title ""Exchequer Standards"" .
  
  ?author dbo:occupation dbp:Politician ;
         dbo:officeHolder ?office .
  
  ?author dbo:deathPlace dbr:Quincy,_Massachusetts .

  OPTIONAL { ?author dbo:parent ?parent . }
}
```",3,5,4,2,2,3,3,71,0,0,2,0,0.0,0
955,4,train,"Give me the reference, that is a band and a group and an organisation, to Street Dogs.","SELECT ?result WHERE { ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Group>. ?result <http://xmlns.com/foaf/0.1/name> ""Street Dogs""@en . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Band>. ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?streetDogs WHERE {
  ?streetDogs a dbo:Band ;
              rdfs:label ?label .
  FILTER (CONTAINS(LCASE(?label), ""street dogs""))
  
  OPTIONAL { 
    ?streetDogs dbo:organization ?org .
  }
}
```",1,4,2,1,1,3,2,20,1,0,0,1.0,1.0,1.0
273,3,train,Give me the child of Giovanni Agnelli.,SELECT ?result WHERE { <http://dbpedia.org/resource/Giovanni_Agnelli> <http://dbpedia.org/ontology/child> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>

SELECT ?child WHERE {
  ?person a dbo:Person ;
          foaf:name ""Giovanni Agnelli""@en .
  ?person dbo:child ?child .
}
```",1,1,2,1,1,3,2,20,1,1,0,0.5,1.0,0.6666666666666666
965,25,train,"Give me the parent of the person born, that is a noble, as Prince George of Battenberg and parent of Louise Mountbatten.","SELECT ?result WHERE { ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Noble>. <http://dbpedia.org/resource/Louise_Mountbatten> <http://dbpedia.org/ontology/parent> ?result . ?v0 <http://dbpedia.org/ontology/parent> ?result . ?v0 <http://dbpedia.org/property/birthName> ""Prince George of Battenberg""@en . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?parent WHERE {
  ?person1 dbo:birthName ""Prince George of Battenberg""@en .
  ?person2 foaf:name ""Louise Mountbatten""@en .
  
  ?person1 dbo:child ?commonChild .
  ?person2 dbo:child ?commonChild .

  ?commonChild dbo:parent ?parent .
  ?parent a dbo:NoblePerson .
}
```",3,4,4,2,2,3,3,71,0,0,2,0,0.0,0
865,37,train,"Give me the father of the child, that is a politician, of the spouse of Syeda Shahar Banu and father of Shahla Khatun.",SELECT ?result WHERE { ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v2 <http://dbpedia.org/property/father> ?v0 . ?v2 <http://dbpedia.org/property/father> ?result . <http://dbpedia.org/resource/Syeda_Shahar_Banu> <http://dbpedia.org/ontology/spouse> ?v0 . <http://dbpedia.org/resource/Shahla_Khatun> <http://dbpedia.org/property/father> ?result . },"```sparql
SELECT ?father WHERE {
  ?shaharBanu dbo:spouse ?spouse .
  FILTER (str(?shaharBanu) = ""Syeda_Shahar_Banu"") .

  ?child dbo:parent ?spouse ;
         rdf:type dbo:Politician ;
         dbo:child ?shahlaKhatun .
  FILTER (str(?shahlaKhatun) = ""Shahla_Khatun"") .

  ?child dbo:father ?father .
}
```",4,5,5,3,2,3,3,71,0,0,1,0,0.0,0
978,9,train,"Who is the professional, that is a musical artist and an artist, in the award of Michel Claparède?",SELECT ?result WHERE { ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. <http://dbpedia.org/resource/Michel_Claparède> <http://dbpedia.org/property/awards> ?v0 . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. ?result <http://dbpedia.org/property/occupation> ?v0 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?recipient WHERE {
  ?award dbo:awardee ?recipient .
  FILTER (str(?award) = ""Michel_Claparède_Award"")
  
  ?recipient dbo:occupation ?occupation1 .
  ?recipient dbo:occupation ?occupation2 .

  VALUES ?musicOccupation { 
    dbr:Singer 
    dbr:Musician 
    dbr:Bands_and_musicians
  }
  VALUES ?artOccupation {
    dbr:Artist 
    dbr:Painter 
    dbr:Sculptor
  }

  FILTER (
    (?occupation1 IN(?musicOccupation) && ?occupation2 IN(?artOccupation)) ||
    (?occupation1 IN(?artOccupation) && ?occupation2 IN(?musicOccupation))
  )
}
```",2,4,3,2,1,3,2,20,0,0,8677,0,0.0,0
365,13,train,"Give me the person born as the birth name of the commander, that is an office holder, in Ukrainian–Soviet War.",SELECT ?result WHERE { ?v0 <http://dbpedia.org/property/birthName> ?v1 . <http://dbpedia.org/resource/Ukrainian–Soviet_War> <http://dbpedia.org/ontology/commander> ?v0 . ?result <http://dbpedia.org/property/birthName> ?v1 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?person ?birthName WHERE {
  ?person dbo:occupation dbr:Military_person .
  ?person dbo:nationality dbr:Ukraine .
  ?person dbo:birthName ?birthName .
  
  # Filter for involvement in the Ukrainian–Soviet War
  ?person dbo:wikiPageWikiLink dbr:Ukrainian_Soviet_War .

  # Check if they held a command position
  ?person dbo:commanderOf ?unit .
  ?unit dbo:participatedIn dbr:Ukrainian_Soviet_War .

  # Check if they were office holders
  OPTIONAL { ?person dbo:officeHolderOf ?office . }
  
  FILTER EXISTS { ?person dbo:officeHolderOf ?office } .
}
```",3,4,4,3,1,3,2,20,0,0,2,0,0.0,0
281,17,train,"Give me the awardee of Volunteer Decoration and awardee of the award, that is a military conflict, of Lawrence Moore Cosgrave.",SELECT ?result WHERE { ?result <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/Volunteer_Decoration> . ?result <http://dbpedia.org/property/awards> ?v1 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. <http://dbpedia.org/resource/Lawrence_Moore_Cosgrave> <http://dbpedia.org/property/awards> ?v1 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?volunteerDecorationAward ?militaryConflictAward WHERE {
  # Find Lawrence Moore Cosgrave
  ?cosgrave a dbo:Person ;
            foaf:name ""Lawrence Moore Cosgrave""@en .

  # Find the Volunteer Decoration award
  OPTIONAL { 
    ?cosgrave dbo:awardReceived ?volunteerDecorationAward .
    ?volunteerDecorationAward rdfs:label ?volunteerLabel .
    FILTER(CONTAINS(LCASE(?volunteerLabel), ""volunteer decoration""))
  }

  # Find any awards related to a military conflict
  OPTIONAL {
    ?cosgrave dbo:awardReceived ?militaryConflictAward .
    ?militaryConflictAward dbo:conflict ?conflict .
    ?conflict rdfs:label ?conflictLabel .
    FILTER(CONTAINS(LCASE(?conflictLabel), ""war"") || CONTAINS(LCASE(?conflictLabel), ""battle""))
  }
}
```",3,4,4,2,2,2,3,28,0,0,1,0,0.0,0
935,4,train,"Give me the native of Balochistan, Pakistan.","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Balochistan,_Pakistan> . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?nativePeople WHERE {
  dbr:Balochistan dbo:populationGroup ?nativePeople .
}
```",1,1,2,1,1,3,2,20,0,0,57,0,0.0,0
791,21,train,"Give me the father of Emperor Go-Toba and spouse of the spouse, that is a royalty, of Emperor Takakura.",SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/spouse> <http://dbpedia.org/resource/Emperor_Takakura> . <http://dbpedia.org/resource/Emperor_Go-Toba> <http://dbpedia.org/property/father> ?result . ?result <http://dbpedia.org/ontology/spouse> ?v1 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. },"```sparql
SELECT ?father WHERE {
  ?goToba dbo:parent ?father .
  ?goToba rdfs:label ""Emperor Go-Toba""@en .
  
  ?takakura dbo:spouse ?spouse .
  ?takakura rdfs:label ""Emperor Takakura""@en .
  
  ?spouse rdf:type dbo:RoyalPerson .
  
  ?spouse dbo:parent ?father .
}
```",3,4,4,2,2,3,3,71,0,0,1,0,0.0,0
83,0,train,Give me the ruling party in Fortaleza.,SELECT ?result WHERE { <http://dbpedia.org/resource/Fortaleza> <http://dbpedia.org/property/leaderParty> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?party WHERE {
  ?city a dbo:City ;
        rdfs:label ""Fortaleza""@en .
  
  OPTIONAL { 
    ?mayor dbo:officeHolderOf ?city ;
           dbo:politicalParty ?party .
  }
  
  FILTER (lang(?city) = 'en')
}
```",1,1,2,1,1,3,2,20,0,0,1,0,0.0,0
955,1,train,Give me the band of Johnny Rioux.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/bandMember> <http://dbpedia.org/resource/Johnny_Rioux> . },"```sparql
PREFIX dbp: <http://dbpedia.org/property/>
PREFIX dbo: <http://dbpedia.org/ontology/>

SELECT ?bandName WHERE {
  ?person foaf:name ""Johnny Rioux""@en .
  ?person dbp:band ?band .
  ?band foaf:name ?bandName .
}
```",1,1,2,1,1,3,2,20,0,0,1,0,0.0,0
445,27,train,Give me the entity in the award of the commander in Battle of Saint-Mihiel.,SELECT ?result WHERE { ?v1 <http://dbpedia.org/property/awards> ?v2 . <http://dbpedia.org/resource/Battle_of_Saint-Mihiel> <http://dbpedia.org/ontology/commander> ?v1 . ?result <http://dbpedia.org/ontology/country> ?v2 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?awardEntity WHERE {
  ?battle dbo:wikiPageRedirects dbr:Battle_of_Saint-Mihiel .
  ?person dbo:commanderOf ?battle .
  ?person dbo:awardsReceived ?award .
  ?award dbo:recipient ?person .
  FILTER EXISTS { ?award rdfs:label ?awardLabel . FILTER(CONTAINS(LCASE(?awardLabel), ""legion of honor"")) }
}
```",3,3,4,3,1,3,3,71,0,0,87241,0,0.0,0
645,8,train,"Give me the office, that is a government agency and an organisation, of Camilo Menéndez Tolosa.",SELECT ?result WHERE { ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/GovernmentAgency>. <http://dbpedia.org/resource/Camilo_Menéndez_Tolosa> <http://dbpedia.org/property/office> ?result . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?office WHERE {
  ?person foaf:name ""Camilo Menéndez Tolosa""@en .
  ?person dbo:positionHeld ?office .
  ?office a dbo:GovernmentAgency ;
          a dbo:Organization .
}
```",1,3,2,1,1,3,3,71,0,0,1,0,0.0,0
645,21,train,Give me the leader of Ministry of the Army (Spain) and commander in the force of Carlos Asensio Cabanillas.,SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Carlos_Asensio_Cabanillas> . ?v1 <http://dbpedia.org/ontology/commander> ?result . <http://dbpedia.org/resource/Ministry_of_the_Army_(Spain)> <http://dbpedia.org/ontology/leader> ?result . },"```sparql
# Query for the leader of the Ministry of the Army (Spain)
SELECT ?minister WHERE {
  ?minister dbo:officeHolderOf dbr:Ministry_of_Defense_(Spain) .
  ?minister dbo:nationality dbr:Spain .
}

UNION

# Query for the commander in the force of Carlos Asensio Cabanillas
SELECT ?commander WHERE {
  ?person foaf:name ""Carlos Asensio Cabanillas""@en .
  ?person dbo:rank ?rank .
  OPTIONAL { ?person dbo:commandedBy ?commander . }
}
```",3,3,4,2,2,3,3,71,0,0,1,0,0.0,0
976,10,train,Give me the office of Mustafa Şentop and office of Naci Bostancı.,SELECT ?result WHERE { <http://dbpedia.org/resource/Mustafa_Şentop> <http://dbpedia.org/property/office> ?result . <http://dbpedia.org/resource/Naci_Bostancı> <http://dbpedia.org/property/office> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT ?person ?officeLabel WHERE {
  VALUES (?personName) { (""Mustafa Şentop""@en ""Naci Bostancı""@en) }
  
  ?person foaf:name ?personName .
  OPTIONAL { ?person dbo:office ?office . }
  SERVICE <http://dbpedia.org/sparql> {
    ?office rdfs:label ?officeLabel FILTER (lang(?officeLabel) = ""en"")
  }
}
```",2,2,3,1,2,3,3,71,0,0,1,0,0.0,0
158,9,train,"Give me the award, that is a country, of the reference to Adelbert Cronkhite.","SELECT ?result WHERE { ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. ?v0 <http://dbpedia.org/property/awards> ?result . ?v0 <http://xmlns.com/foaf/0.1/name> ""Adelbert Cronkhite""@en . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?award WHERE {
  ?person rdfs:label ""Adelbert Cronkhite""@en .
  ?person dbo:awardsReceived ?award .
  FILTER(CONTAINS(LCASE(?award), ""pulitzer prize"") || CONTAINS(LCASE(?award), ""national""))
}
```",2,3,3,2,1,3,2,20,0,0,1,0,0.0,0
527,2,train,Give me the professional in Actor.,"SELECT ?result WHERE { ?result <http://dbpedia.org/property/occupation> ""Actor""@en . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT DISTINCT ?professional WHERE {
  ?professional rdfs:subClassOf* dbo:Actor .
}
```",1,1,2,1,1,3,2,20,0,4,21580,0.0,0.0,0
465,32,train,"Give me the successor of the child of Alfonso I d'Este and spouse of the child, that is a royalty, of Ferdinand I, Holy Roman Emperor.","SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/successor> ?result . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v1 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Alfonso_I_d'Este> . ?result <http://dbpedia.org/ontology/spouse> ?v3 . <http://dbpedia.org/resource/Ferdinand_I,_Holy_Roman_Emperor> <http://dbpedia.org/ontology/child> ?v3 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?successor WHERE {
  # Step 1: Find a child of Alfonso I d'Este
  ?child dbo:parent dbr:Alfonso_I_d%27Este.

  # Step 2: Find the spouse of this child
  ?spouse dbp:spouse ?child.
  
  # Step 3: Identify Ferdinand I's child who is royalty
  ?royaltyChild dbo:parent dbr:Ferdinand_I,_Holy_Roman_Emperor;
                a dbo:Monarch.

  # Step 4: Determine the successor of the spouse in terms of royal lineage
  ?successor dbp:predecessorOrPredeceasedBy ?spouse.
}
```",4,5,5,2,2,3,3,71,0,0,1,0,0.0,0
129,14,train,"Give me the associated musical artist of the actor, that is an organisation, of Dreamville Presents: Revenge and professional in .","SELECT ?result WHERE { ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?result <http://dbpedia.org/property/occupation> """"@en . ?v2 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . <http://dbpedia.org/resource/Dreamville_Presents:_Revenge> <http://dbpedia.org/property/starring> ?v2 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?artist WHERE {
  ?event dbo:associatedMusicalArtist ?artist .
  FILTER(CONTAINS(LCASE(STR(?event)), ""dreamville presents: revenge""))
  ?artist a dbo:RecordLabel .
}
```",3,4,4,2,2,2,3,28,0,0,3,0,0.0,0
888,9,train,"Give me the force, that is a societal event and an event, of the military force of War in Donbas (2014–2022).",SELECT ?result WHERE { ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?result <http://dbpedia.org/ontology/commander> ?v0 . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?v0 <http://dbpedia.org/ontology/battle> <http://dbpedia.org/resource/War_in_Donbas_(2014–2022)> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?force WHERE {
  ?event dbo:location dbr:Donbas .
  ?event dbo:dateStart ?dateStart .
  FILTER(?dateStart >= ""2014-04-06""^^xsd:date && ?dateStart <= ""2022-12-31""^^xsd:date) .
  ?event dbo:participant ?force .
  ?force a dbo:MilitaryUnit ;
         rdfs:label ?label .
  FILTER(CONTAINS(LCASE(?label), ""pro-russian separatist"") || CONTAINS(LCASE(?label), ""donetsk people's republic"") || CONTAINS(LCASE(?label), ""luhansk people's republic"")) .
}
```",2,4,3,2,1,3,2,20,0,0,24,0,0.0,0
273,6,train,Give me the parent of Gianni Agnelli and spouse of Edoardo Agnelli (industrialist).,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/spouse> <http://dbpedia.org/resource/Edoardo_Agnelli_(industrialist)> . <http://dbpedia.org/resource/Gianni_Agnelli> <http://dbpedia.org/ontology/parent> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?person WHERE {
  # Gianni Agnelli's parent
  dbr:Gianni_Agnelli dbo:parent ?gianniParent .
  
  # Edoardo Agnelli's spouse
  dbr:Edoardo_Agnelli dbo:spouse ?edoardoSpouse .

  # Find the common individual
  FILTER (?gianniParent = ?edoardoSpouse)
  BIND(?gianniParent AS ?person)
}
```",2,2,3,1,2,3,2,20,0,0,1,0,0.0,0
839,39,train,"Give me the band of Peter Schorowsky and band of the band, that is a musical artist, of the professional in Musician.","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/bandMember> <http://dbpedia.org/resource/Peter_Schorowsky> . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?v0 <http://dbpedia.org/ontology/associatedMusicalArtist> ?v1 . ?v0 <http://dbpedia.org/property/occupation> ""Musician""@en . ?result <http://dbpedia.org/ontology/bandMember> ?v1 . }","```sparql
# Part 1: Find the band associated with Peter Schorowsky
SELECT ?band WHERE {
    ?person dbo:profession dbr:Musician .
    ?person foaf:name ""Peter Schorowsky""@en .
    ?person dbo:memberOf ?band .
}

UNION

# Part 2: Find a band that is also a musical artist and has another band linked to it
SELECT ?band WHERE {
    ?band a dbr:Band ;
          dbo:genre dbr:Musical_artist ;
          dbo:memberOf ?sub_band .
}
```",4,5,5,3,2,3,3,71,0,0,1,0,0.0,0
417,25,train,"Give me the child of the child, that is a royalty, of Frederick Francis III, Grand Duke of Mecklenburg-Schwerin and child of Christian X of Denmark.","SELECT ?result WHERE { ?result <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Christian_X_of_Denmark> . ?result <http://dbpedia.org/ontology/parent> ?v1 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v1 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Frederick_Francis_III,_Grand_Duke_of_Mecklenburg-Schwerin> . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?grandchild WHERE {
  # Frederick Francis III and his children
  dbr:Friedrich_Franz_III_of_Mecklenburg-Schwerin dbo:spouse ?spouse1 .
  ?spouse1 dbo:child ?childFrederick .

  # Christian X of Denmark and his children
  dbr:Christian_X_of_Denmark dbo:spouse ?spouse2 .
  ?spouse2 dbo:child ?childChristian .

  # Find common child (Alexandrine)
  FILTER(?childFrederick = dbr:Alexandra_of_Mecklenburg-Schwerin && ?childChristian = dbr:Alexandra_of_Mecklenburg-Schwerin)

  # Children of Alexandrine and Christian X
  dbr:Alexandra_of_Mecklenburg-Schwerin dbo:spouse dbr:Christian_X_of_Denmark .
  dbr:Alexandra_of_Mecklenburg-Schwerin dbo:child ?commonChild .

  # Find children of the common child (Frederick IX)
  ?commonChild dbo:child ?grandchild .

  # Filter for royalty
  OPTIONAL { ?grandchild dbo:title ?title . FILTER(CONTAINS(LCASE(?title), ""queen"") || CONTAINS(LCASE(?title), ""king"")) }
  FILTER(BOUND(?title))
}
```",3,4,4,2,2,3,3,71,0,0,2,0,0.0,0
987,4,train,"Who is the band, that is an artist and a musical artist, of Šako Polumenta?",SELECT ?result WHERE { <http://dbpedia.org/resource/Šako_Polumenta> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?band WHERE {
  ?s dbp:name ""Šako Polumenta""@sl .
  ?s a dbo:Artist ;
     a dbo:MusicalArtist .
  ?s dbo:bandMember ?band .
  ?band a dbo:Band .
}
```",1,3,2,1,1,3,3,71,0,0,2,0,0.0,0
965,12,train,"Give me the parent of George Mountbatten, 2nd Marquess of Milford Haven and parent of Louise Mountbatten.","SELECT ?result WHERE { <http://dbpedia.org/resource/Louise_Mountbatten> <http://dbpedia.org/ontology/parent> ?result . <http://dbpedia.org/resource/George_Mountbatten,_2nd_Marquess_of_Milford_Haven> <http://dbpedia.org/ontology/parent> ?result . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?parent WHERE {
  VALUES ?child { 
    dbr:George_Mountbatten,_2nd_Marquess_of_Milford_Haven 
    dbr:Louise_Mountbatten
  }
  
  ?child dbo:parent ?parent .
}
```",2,2,3,1,2,3,3,71,0,0,2,0,0.0,0
892,11,train,Give me the entity in the profession of Henri Crolla.,SELECT ?result WHERE { <http://dbpedia.org/resource/Henri_Crolla> <http://dbpedia.org/property/occupation> ?v1 . ?result <http://dbpedia.org/ontology/country> ?v1 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?occupation WHERE {
  VALUES ?person { dbr:Henri_Crolla }
  ?person dbo:occupation ?occupation .
}
```",2,2,3,2,1,3,3,71,0,1,13092,0.0,0.0,0
976,6,train,"Who is the mayor, that is a politician and an office holder and Turkish, of Nation Alliance (Turkey)?",SELECT ?result WHERE { <http://dbpedia.org/resource/Nation_Alliance_(Turkey)> <http://dbpedia.org/property/leader> ?result . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?result <http://dbpedia.org/ontology/nationality> <http://dbpedia.org/resource/Turkey>. ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>

SELECT ?mayor ?city WHERE {
  ?mayor rdf:type dbo:Mayor ;
         dbo:politicalParty dbr:Nation_Alliance_(Turkey) ;
         dbo:nationality dbr:Turkey .
  
  ?mayor dbo:officeHolderOf ?city .
}
```",1,4,2,1,1,3,3,71,0,0,1,0,0.0,0
417,19,train,"Give me the spouse of the parent, that is a royalty, of Count Ingolf of Rosenborg and child of Christian X of Denmark.",SELECT ?result WHERE { ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v0 <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Count_Ingolf_of_Rosenborg> . ?result <http://dbpedia.org/ontology/spouse> ?v0 . ?result <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Christian_X_of_Denmark> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?spouse WHERE {
  # Identify Count Ingolf of Rosenborg
  ?ingolf a dbo:Person ;
          foaf:name ""Ingolf of Rosenborg""@en .
  
  # Find his parents
  ?ingolf dbo:parent ?parent .

  # Check if the parent is royalty and a child of Christian X of Denmark
  ?parent a dbo:Monarch ;
          dbo:child dbr:Christian_X_of_Denmark .

  # Get the spouse of this royal parent
  ?parent dbo:spouse ?spouse .
}
```",3,4,4,2,2,3,3,71,0,0,1,0,0.0,0
353,0,train,Give me the alma mater of Daniil Yegorov.,SELECT ?result WHERE { <http://dbpedia.org/resource/Daniil_Yegorov> <http://dbpedia.org/ontology/almaMater> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?almaMater WHERE {
  ?person a dbo:Person ;
          foaf:name ""Daniil Yegorov""@en .
  ?person dbo:almaMater ?almaMater .
}
```",1,1,2,1,1,2,2,9,1,0,0,1.0,1.0,1.0
456,13,train,Give me the professional in the alter ego of The Shadow.,SELECT ?result WHERE { <http://dbpedia.org/resource/The_Shadow> <http://dbpedia.org/property/alterEgo> ?v1 . ?result <http://dbpedia.org/property/occupation> ?v1 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?profession WHERE {
  dbr:Walter_B._Gibson dbo:occupation ?profession .
}
```",2,2,3,2,1,3,3,71,0,1,39640,0.0,0.0,0
554,4,train,"Who is the band, that is an artist, of Rita Redshoes?",SELECT ?result WHERE { ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. <http://dbpedia.org/resource/Rita_Redshoes> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?bandName WHERE {
  ?artist a dbo:MusicalArtist ;
          foaf:name ""Rita Redshoes""@en .
  
  OPTIONAL { 
    ?artist dbo:band ?band .
    ?band foaf:name ?bandName .
  }
}
```",1,2,2,1,1,3,2,20,0,0,1,0,0.0,0
865,21,train,"Give me the father of Shahla Khatun and native of the residence, that is a country, of Ram Jaipal Singh Yadav.",SELECT ?result WHERE { <http://dbpedia.org/resource/Shahla_Khatun> <http://dbpedia.org/property/father> ?result . ?result <http://dbpedia.org/ontology/birthPlace> ?v2 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. <http://dbpedia.org/resource/Ram_Jaipal_Singh_Yadav> <http://dbpedia.org/property/residence> ?v2 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?father ?nativeCountry WHERE {
  # Part 1: Find Shahla Khatun's father
  OPTIONAL {
    ?shahla a dbo:Person ;
           foaf:name ""Shahla Khatun""@en .
    ?shahla dbo:father ?father .
    BIND(?father AS ?person)
  }

  # Part 2: Find the native country of Ram Jaipal Singh Yadav's residence
  OPTIONAL {
    ?ram a dbo:Person ;
         foaf:name ""Ram Jaipal Singh Yadav""@en .
    ?ram dbo:nativePlace ?nativePlace .
    ?nativePlace dbo:country ?nativeCountry .
  }
}
```",3,4,4,2,2,3,3,71,1,0,0,1.0,1.0,1.0
281,15,train,"Give me the commander in the war, that is an event and a military conflict, of Roy Boehm and awardee of Volunteer Decoration.",SELECT ?result WHERE { <http://dbpedia.org/resource/Roy_Boehm> <http://dbpedia.org/ontology/battle> ?v1 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?result <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/Volunteer_Decoration> . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v1 <http://dbpedia.org/ontology/commander> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?war ?role WHERE {
  # Find Roy Boehm and his role in wars
  ?person a dbo:MilitaryPerson ;
          foaf:name ""Roy Boehm"" ;
          dbo:commanderOf ?war .
  
  # Ensure the war is classified as both an event and a military conflict
  ?war a dbo:Event, dbo:MilitaryConflict .

  # Check if Roy Boehm received the Volunteer Decoration
  OPTIONAL {
    ?person dbo:awardReceived dbr:Volunteer_Decoration .
  }

  FILTER EXISTS { ?person dbo:awardReceived dbr:Volunteer_Decoration }
  
  # Return the war and his role
  BIND(""Commander"" AS ?role)
}
```",3,5,4,2,2,2,3,28,0,0,1,0,0.0,0
47,15,train,"Give me the administration of the commander, that is a politician, in Operation Green Hunt.",SELECT ?result WHERE { ?result <http://dbpedia.org/property/governor> ?v1 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. <http://dbpedia.org/resource/Operation_Green_Hunt> <http://dbpedia.org/ontology/commander> ?v1 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?administration WHERE {
  ?operation dbo:relatedThrough ?event .
  ?event dbo:location ?location .
  ?operation rdfs:label ""Operation Green Hunt""@en .
  
  OPTIONAL { 
    ?politician dbo:officeHolder ?role .
    ?role dbo:positionHeld ?position .
    ?position rdfs:label ""Prime Minister of India""@en .
    ?politician foaf:name ""Manmohan Singh"" .
    
    ?administration dbo:headOfGovernment ?politician .
  }
}
```",2,3,3,2,1,3,3,71,0,0,189,0,0.0,0
170,3,train,Give me the work of International Energy Agency.,SELECT ?result WHERE { ?result <http://dbpedia.org/property/author> <http://dbpedia.org/resource/International_Energy_Agency> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?work WHERE {
  VALUES ?iea { dbr:International_Energy_Agency }
  ?iea dbo:work ?work .
}
UNION
SELECT ?publication WHERE {
  VALUES ?iea { dbr:International_Energy_Agency }
  ?iea dbo:publication ?publication .
}
```",1,1,2,1,1,2,3,28,0,0,2,0,0.0,0
129,3,train,Give me the mayor of 1999 West Dunbartonshire Council election.,SELECT ?result WHERE { <http://dbpedia.org/resource/1999_West_Dunbartonshire_Council_election> <http://dbpedia.org/property/leader> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?mayor WHERE {
  ?election dbo:place dbr:West_Dunbartonshire_Council .
  ?election dbo:electionYear ?year .
  FILTER(?year = ""1999""^^xsd:gYear) .
  ?mayor dbo:officeHolder ?position .
  ?position a dbo:Mayorship ;
            dbo:incumbent ?mayor .
}
```",1,1,2,1,1,2,3,28,0,0,4,0,0.0,0
47,18,train,Give me the office of Suvendu Adhikari and office of Ajoy Mukherjee and office of Bidesh Ranjan Bose.,SELECT ?result WHERE { <http://dbpedia.org/resource/Ajoy_Mukherjee> <http://dbpedia.org/property/office> ?result . <http://dbpedia.org/resource/Bidesh_Ranjan_Bose> <http://dbpedia.org/property/office> ?result . <http://dbpedia.org/resource/Suvendu_Adhikari> <http://dbpedia.org/property/office> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?person ?officeTitle WHERE {
  VALUES ?person { 
    dbr:Suvendu_Adhikari 
    dbr:Ajoy_Mukherjee 
    dbr:Bidesh_Ranjan_Bose
  }
  
  ?person dbo:office ?office .
  ?office dbo:title ?officeTitle .
}
```",3,3,4,1,3,3,3,71,0,0,1,0,0.0,0
917,16,train,"Who is the father of the spouse, that is a royalty, of Leleiohoku I?",SELECT ?result WHERE { ?v0 <http://dbpedia.org/property/father> ?result . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v0 <http://dbpedia.org/ontology/spouse> <http://dbpedia.org/resource/Leleiohoku_I> . },"```sparql
SELECT ?fatherLabel WHERE {
  ?leleiohoku1 dbo:spouse ?spouse .
  ?spouse rdfs:label ?spouseLabel .
  FILTER(CONTAINS(LCASE(?spouseLabel), ""leleiohoku i"") && CONTAINS(LCASE(?spouseLabel), ""spouse"")) .
  
  OPTIONAL { ?spouse dbo:royalty true . }
  
  ?spouse dbo:father ?father .
  ?father rdfs:label ?fatherLabel .
}
```",2,3,3,2,1,3,3,71,0,0,2,0,0.0,0
715,18,train,Give me the commander in Rif War and commander in Spanish Civil War and leader of Ministry of the Air (Spain).,SELECT ?result WHERE { <http://dbpedia.org/resource/Spanish_Civil_War> <http://dbpedia.org/ontology/commander> ?result . <http://dbpedia.org/resource/Ministry_of_the_Air_(Spain)> <http://dbpedia.org/ontology/leader> ?result . <http://dbpedia.org/resource/Rif_War> <http://dbpedia.org/ontology/commander> ?result . },"```sparql
# Query for Commander in Rif War
SELECT ?person WHERE {
  ?event dcterms:subject dbc:Rif_War .
  ?event dbo:commander ?person .
  FILTER (lang(?label) = 'en') 
}
UNION
# Query for Commander in Spanish Civil War
SELECT ?person WHERE {
  ?event dcterms:subject dbc:Spanish_Civil_War .
  ?event dbo:commander ?person .
  FILTER (lang(?label) = 'en')
}
UNION
# Query for Leader of Ministry of the Air (Spain)
SELECT ?person WHERE {
  ?ministry rdfs:label ""Ministry of the Air""@en ;
            dbo:head ?person .
  FILTER (lang(?label) = 'en') 
}
```",3,3,4,1,3,3,3,71,0,0,1,0,0.0,0
507,28,train,"Give me the spouse of the person born as Anne Voase Coates and professional in Film director, television director and director of Entertaining Mr Sloane (film).","SELECT ?result WHERE { ?result <http://dbpedia.org/property/occupation> ""Film director, television director""@en . <http://dbpedia.org/resource/Entertaining_Mr_Sloane_(film)> <http://dbpedia.org/ontology/director> ?result . ?result <http://dbpedia.org/ontology/spouse> ?v1 . ?v1 <http://dbpedia.org/property/birthName> ""Anne Voase Coates""@en . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?spouse WHERE {
  VALUES ?anneVoaseCoates { dbr:Anne_Voase_Coates }
  ?anneVoaseCoates dbo:spouseOrPartner ?spouse .
}
```",4,4,5,2,3,3,3,71,0,0,1,0,0.0,0
965,2,train,"Give me the parent of George Mountbatten, 2nd Marquess of Milford Haven.","SELECT ?result WHERE { <http://dbpedia.org/resource/George_Mountbatten,_2nd_Marquess_of_Milford_Haven> <http://dbpedia.org/ontology/parent> ?result . }","```sparql
SELECT ?parent WHERE {
  dbpedia:George_Mountbatten,_2nd_Marquess_of_Milford_Haven dbo:father ?parent .
}
```",1,1,2,1,1,3,3,71,0,0,2,0,0.0,0
579,4,train,"Give me the native, that is an office holder, of Edinburgh.",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Edinburgh> . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?person ?office WHERE {
  ?person dbo:birthPlace dbr:Edinburgh .
  ?person dbo:officeHolder ?office .
}
```",1,2,2,1,1,3,2,20,0,0,88,0,0.0,0
715,12,train,Give me the commander in Spanish Civil War and leader of Ministry of the Air (Spain).,SELECT ?result WHERE { <http://dbpedia.org/resource/Ministry_of_the_Air_(Spain)> <http://dbpedia.org/ontology/leader> ?result . <http://dbpedia.org/resource/Spanish_Civil_War> <http://dbpedia.org/ontology/commander> ?result . },"```sparql
SELECT ?person ?name WHERE {
  ?person dbo:occupation dbr:Spanish_Civil_War_commander .
  ?person dbo:officeHolder dbr:Minister_of_Air_(Spain) .
  OPTIONAL { ?person rdfs:label ?name FILTER (lang(?name) = ""en"") }
}
```",2,2,3,1,2,3,3,71,0,0,1,0,0.0,0
445,2,train,Give me the entity in United Kingdom.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/United_Kingdom> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?entity WHERE {
  ?entity a dbo:Place .
  ?entity dbo:country dbpedia:United_Kingdom .
}
LIMIT 100
```",1,1,2,1,1,3,3,71,0,0,42999,0,0.0,0
326,0,train,Give me the resident of Berkshire.,SELECT ?result WHERE { ?result <http://dbpedia.org/property/residence> <http://dbpedia.org/resource/Berkshire> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?person ?name WHERE {
  VALUES ?berkshire (dbr:Berkshire)
  
  # Find people born in Berkshire
  { 
    ?person dbo:birthPlace ?berkshire .
    ?person rdfs:label ?name .
    FILTER(LANG(?name) = 'en')
  }
  
  UNION
  
  # Find people who have resided in Berkshire
  {
    ?person dbo:residence ?berkshire .
    ?person rdfs:label ?name .
    FILTER(LANG(?name) = 'en')
  }
}
ORDER BY ?name
LIMIT 100
```",1,1,2,1,1,3,2,20,0,0,5,0,0.0,0
274,0,train,Give me the band member of Dizzy Gillespie.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/associatedMusicalArtist> <http://dbpedia.org/resource/Dizzy_Gillespie> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?bandMember WHERE {
  dbr:Dizzy_Gillespie dbo:bandMember ?bandMember .
}
```",1,1,2,1,1,2,3,28,0,0,67,0,0.0,0
36,9,train,Give me the person born as Ayo Makun and person born in 1971.,"SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/birthYear> ""1971""^^<http://www.w3.org/2001/XMLSchema#gYear> . ?result <http://dbpedia.org/property/birthName> ""Ayo Makun""@en . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT ?person ?givenName ?familyName ?birthYear WHERE {
  ?person a dbo:Person .
  OPTIONAL { ?person foaf:givenName ?givenName . }
  OPTIONAL { ?person foaf:familyName ?familyName . }
  ?person dbo:birthYear ?birthYear .

  FILTER (?birthYear = ""1971""^^xsd:gYear)
  
  # Assuming Ayo Makun is known by a specific DBpedia resource or alias
  VALUES ?givenName { ""Ayo"" }
  VALUES ?familyName { ""Makun"" }

}
```",2,2,3,1,2,2,3,28,0,0,1,0,0.0,0
773,32,train,Give me the parent of the successor of Charles the Bald and spouse of the father of Charles the Fat.,SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/spouse> ?result . <http://dbpedia.org/resource/Charles_the_Bald> <http://dbpedia.org/ontology/successor> ?v3 . <http://dbpedia.org/resource/Charles_the_Fat> <http://dbpedia.org/property/father> ?v1 . ?result <http://dbpedia.org/ontology/child> ?v3 . },"```sparql
# Step 1: Find Charles the Bald's successor
SELECT ?successor WHERE {
  wd:Q134064 # Charles the Bald
  wdt:P39 ?position .
  ?position wdt:P106 ?occupation .
  FILTER(?occupation = wd:Q82955) # Monarch occupation
  ?position wdt:P1373 ?successor .
}

# Step 2: Find the parent of that successor
SELECT ?parent WHERE {
  ?successor wdt:P22 ?parent .
}

# Step 3: Identify Charles the Fat's father
SELECT ?father WHERE {
  wd:Q134071 # Charles the Fat
  wdt:P22 ?father .
}

# Step 4: Find the spouse of Charles the Fat's father
SELECT ?spouse WHERE {
  ?father wdt:P26 ?spouse .
}

# Step 5: Check if the parent and spouse are the same individual
SELECT DISTINCT ?parent ?spouse WHERE {
  # Parent of successor
  ?successor wdt:P22 ?parent .
  
  # Spouse of Charles the Fat's father
  ?father wdt:P26 ?spouse .

  # Conditions for successors and fathers
  ?position wdt:P1373 ?successor .
  wd:Q134064 wdt:P39 ?position .
  wd:Q134071 wdt:P22 ?father .
}
```",4,4,5,2,2,3,3,71,0,0,1,0,0.0,0
917,38,train,Give me the child of the father of Keʻelikōlani and child of the father of Kamehameha IV.,SELECT ?result WHERE { <http://dbpedia.org/resource/Keʻelikōlani> <http://dbpedia.org/property/father> ?v3 . <http://dbpedia.org/resource/Kamehameha_IV> <http://dbpedia.org/property/father> ?v0 . ?result <http://dbpedia.org/property/father> ?v0 . ?result <http://dbpedia.org/ontology/parent> ?v3 . },"```sparql
# Query to get the father of Keʻelikōlani
SELECT ?father WHERE {
  wd:Q123456 wdt:P22 ?father .
}

UNION

# Query to get the father of Kamehameha IV
SELECT ?father WHERE {
  wd:Q789012 wdt:P22 ?father .
}

# Find a common child between these two fathers
SELECT DISTINCT ?child WHERE {
  ?father1 wdt:P40 ?child .
  ?father2 wdt:P40 ?child .
  
  # Ensure father1 and father2 are the results from above queries
  VALUES (?father1) { (wd:Q123456_father) }
  VALUES (?father2) { (wd:Q789012_father) }
}
```

Note: Replace `wd:Q123456` with the actual DBpedia ID for Keʻelikōlani and `wd:Q789012` with the actual DBpedia ID for Kamehameha IV. Similarly, replace `wd:Q123456_father` and `wd:Q789012_father` with the results obtained from the first two queries.",4,4,5,2,2,3,3,71,0,0,3,0,0.0,0
791,12,train,Give me the predecessor of Emperor Antoku and father of Emperor Go-Toba.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/successor> <http://dbpedia.org/resource/Emperor_Antoku> . <http://dbpedia.org/resource/Emperor_Go-Toba> <http://dbpedia.org/property/father> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?emperor WHERE {
  ?antoku dbo:predecessor ?emperor .
  ?goToba dbo:father ?emperor .
  
  VALUES ?antoku { dbr:Emperor_Antoku }
  VALUES ?goToba { dbr:Emperor_Go-Toba }
}
```",2,2,3,1,2,3,3,71,0,0,1,0,0.0,0
456,6,train,Give me the alter ego of The Shadow.,SELECT ?result WHERE { <http://dbpedia.org/resource/The_Shadow> <http://dbpedia.org/property/alterEgo> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?alterEgo WHERE {
  dbr:The_Shadow dbo:aliasName ?alterEgo .
}
```",1,1,2,1,1,3,3,71,0,0,3,0,0.0,0
965,39,train,"Give me the parent of the person born, that is a noble, as the birth name of George Mountbatten, 2nd Marquess of Milford Haven and parent of Louise Mountbatten.","SELECT ?result WHERE { ?v0 <http://dbpedia.org/property/birthName> ?v2 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Noble>. ?v0 <http://dbpedia.org/ontology/parent> ?result . <http://dbpedia.org/resource/Louise_Mountbatten> <http://dbpedia.org/ontology/parent> ?result . <http://dbpedia.org/resource/George_Mountbatten,_2nd_Marquess_of_Milford_Haven> <http://dbpedia.org/property/birthName> ?v2 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?parent WHERE {
  # Find George Mountbatten, 2nd Marquess of Milford Haven's birth name
  dbr:George_Mountbatten,_2nd_Marquess_of_Milford_Haven dbo:birthName ?birthName .

  # Find Louise Mountbatten's parent with the same birth name and who is a noble
  dbr:Louise_Mountbatten dbo:parent ?parent .
  ?parent dbo:birthName ?birthName .
  
  # Ensure the parent is a noble (using nationality or similar property)
  OPTIONAL { ?parent dbo:nationality ?nationality . FILTER(CONTAINS(LCASE(?nationality), ""noble"")) }
}
```",4,5,5,3,2,3,3,71,0,0,2,0,0.0,0
122,1,train,Give me the band of Gift of Gab (rapper).,SELECT ?result WHERE { <http://dbpedia.org/resource/Gift_of_Gab_(rapper)> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?band WHERE {
  ?person a dbo:MusicalArtist ;
          foaf:name ""Gift of Gab""@en .
  OPTIONAL { ?person dbo:memberOfBand ?band . }
}
```",1,1,2,1,1,2,2,9,0,0,4,0,0.0,0
341,1,train,Give me the writer of In Love & War (Amerie album).,SELECT ?result WHERE { <http://dbpedia.org/resource/In_Love_&_War_(Amerie_album)> <http://dbpedia.org/property/writer> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?writer WHERE {
  ?album dbo:artist dbr:Amerie ;
         rdfs:label ""In Love & War""@en .
  OPTIONAL { ?album dbo:composer ?writer . }
}
```",1,1,2,1,1,2,2,9,0,0,57,0,0.0,0
976,2,train,Give me the office of Naci Bostancı.,SELECT ?result WHERE { <http://dbpedia.org/resource/Naci_Bostancı> <http://dbpedia.org/property/office> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?office WHERE {
  dbr:Naci_Bostancı dbo:occupation ?office .
}
```",1,1,2,1,1,3,3,71,0,0,4,0,0.0,0
507,31,train,Give me the director of Entertaining Mr Sloane (film) and spouse of the person born as the birth name of Anne V. Coates.,SELECT ?result WHERE { <http://dbpedia.org/resource/Anne_V._Coates> <http://dbpedia.org/property/birthName> ?v1 . <http://dbpedia.org/resource/Entertaining_Mr_Sloane_(film)> <http://dbpedia.org/ontology/director> ?result . ?v0 <http://dbpedia.org/property/birthName> ?v1 . ?result <http://dbpedia.org/ontology/spouse> ?v0 . },"```sparql
# Query to get the director of ""Entertaining Mr Sloane"" (film) and their spouse
SELECT ?director ?spouse WHERE {
  ?film dcterms:title ""Entertaining Mr Sloane""@en .
  ?film dbo:director ?director .
  OPTIONAL { ?director foaf:mbox ?email . } # To ensure we get a person, not an organization
  OPTIONAL { ?director dbo:spouse ?spouse . }
}

UNION

# Query to find Anne V. Coates' birth name and the spouse of the person with that birth name
SELECT ?coatesSpouse WHERE {
  wd:Q123456 foaf:name ""Anne V. Coates""@en ; # Replace Q123456 with the actual DBpedia ID for Anne V. Coates
    foaf:givenName ?birthFirstName ;
    foaf:familyName ?birthLastName .
  
  ?person foaf:givenName ?birthFirstName ;
          foaf:familyName ?birthLastName .
  OPTIONAL { ?person dbo:spouse ?coatesSpouse . }
}
```

Note: Replace `wd:Q123456` with the actual DBpedia ID for Anne V. Coates, which can be found by querying DBpedia or using a resource like Wikidata.",4,4,5,3,2,3,3,71,0,0,1,0,0.0,0
715,9,train,Give me the commander in Rif War and commander in Spanish Civil War.,SELECT ?result WHERE { <http://dbpedia.org/resource/Spanish_Civil_War> <http://dbpedia.org/ontology/commander> ?result . <http://dbpedia.org/resource/Rif_War> <http://dbpedia.org/ontology/commander> ?result . },"```sparql
# Query for the commander in the Rif War
SELECT ?person WHERE {
  ?person dbo:wikiPageDisambiguates ""Rif_War"" .
  ?person dbo:occupation dbr:Military_person .
  FILTER(CONTAINS(LCASE(?personLabel), ""abd el-krim""))
}
```

```sparql
# Query for the commander in the Spanish Civil War
SELECT ?person WHERE {
  ?person dbo:wikiPageDisambiguates ""Spanish_Civil_War"" .
  ?person dbo:occupation dbr:Military_person .
  FILTER(CONTAINS(LCASE(?personLabel), ""francisco franco""))
}
```",2,2,3,1,2,3,3,71,0,0,4,0,0.0,0
987,34,train,"Give me the entity in Montenegro and birth place of the band, that is an artist and a musical artist, of the band, that is an artist, of Dado Polumenta.",SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?result <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Montenegro> . ?v3 <http://dbpedia.org/ontology/associatedMusicalArtist> ?v1 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. <http://dbpedia.org/resource/Dado_Polumenta> <http://dbpedia.org/ontology/associatedMusicalArtist> ?v3 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. ?v1 <http://dbpedia.org/ontology/birthPlace> ?result . },"```sparql
SELECT ?artist ?birthPlaceLabel WHERE {
  # Find the band of Dado Polumenta
  ?band dbo:member dbr:Dado_Polumenta .
  
  # Find artists associated with that band who are also musical artists
  ?artist dbo:associatedBand ?band ;
          a dbo:MusicalArtist ;
          dbo:birthPlace ?birthPlace .

  # Filter for birthplaces in Montenegro
  ?birthPlace wdt:P31/wdt:P279* wd:Q159 .
  
  # Get the label of the artist and their birthplace
  SERVICE wikibase:label { bd:serviceParam wikibase:language ""en"". }
}
```",4,7,5,3,2,3,3,71,0,0,1,0,0.0,0
417,9,train,Give me the child of Christian X of Denmark and spouse of Princess Caroline-Mathilde of Denmark.,SELECT ?result WHERE { ?result <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Christian_X_of_Denmark> . ?result <http://dbpedia.org/ontology/spouse> <http://dbpedia.org/resource/Princess_Caroline-Mathilde_of_Denmark> . },"```sparql
SELECT ?child ?spouse WHERE {
  # Find Christian X's children
  ?christianX dbo:spouse ?parentY .
  ?parentY foaf:name ""Caroline Mathilde of Denmark""@en .
  
  ?christianX dbo:child ?child .

  # Find Princess Caroline-Mathilde's spouse
  ?carolineMathilde dbo:spouse ?spouse .
  
  FILTER(?child = ?spouse)
}
```",2,2,3,1,2,3,3,71,0,0,1,0,0.0,0
606,5,train,Who is the alumnus of University of Pennsylvania?,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/almaMater> <http://dbpedia.org/resource/University_of_Pennsylvania> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?person WHERE {
  ?person dbo:almaMater dbr:University_of_Pennsylvania .
}
```",1,1,2,1,1,3,2,20,1114,0,0,1.0,1.0,1.0
606,14,train,"Give me the birthplace of the alumnus of the figure known, that is a university and a sports league and an educational institution, as Penn Quakers.",SELECT ?result WHERE { ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsLeague>. ?v0 <http://dbpedia.org/ontology/almaMater> ?v2 . ?v0 <http://dbpedia.org/ontology/birthPlace> ?result . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/EducationalInstitution>. ?v2 <http://dbpedia.org/property/nickname> <http://dbpedia.org/resource/Penn_Quakers> . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/University>. },"```sparql
SELECT ?birthPlace WHERE {
  wd:Q937 ?almaMater .
  wd:Q937 wdt:P69 wd:Q95 . # Albert Einstein is an alumnus of the University of Pennsylvania (wd:Q95)
  wd:Q95 wdt:P19 ?birthPlace .
}
```",3,6,4,3,1,3,2,20,0,0,598,0,0.0,0
41,3,train,"Who is the leader, that is a politician and an office holder, of 2005 Castlereagh Borough Council election?",SELECT ?result WHERE { <http://dbpedia.org/resource/2005_Castlereagh_Borough_Council_election> <http://dbpedia.org/property/leader> ?result . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?leader WHERE {
  ?election dbo:electionDate ?date .
  ?election dbo:electoralBody dbr:Castlereagh_Borough_Council .
  FILTER(YEAR(?date) = 2005)
  
  ?officeHolder dbo:positionTitle ?title .
  ?officeHolder dbo:holdsOffice ?election .
  ?officeHolder dbp:name ?leader .

  # Filter for a politician and office holder
  ?officeHolder rdf:type dbo:Politician .
  FILTER(CONTAINS(LCASE(?title), ""mayor"") || CONTAINS(LCASE(?title), ""council leader""))
}
```",1,3,2,1,1,2,3,28,0,0,4,0,0.0,0
917,32,train,"Give me the parent of the child, that is a royalty, of Kamehameha IV and child of the father of Keʻelikōlani.",SELECT ?result WHERE { ?v1 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Kamehameha_IV> . ?result <http://dbpedia.org/ontology/child> ?v1 . <http://dbpedia.org/resource/Keʻelikōlani> <http://dbpedia.org/property/father> ?v3 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?result <http://dbpedia.org/ontology/parent> ?v3 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?parent WHERE {
  # Kamehameha IV's child who is royalty
  ?child dbo:spouse ?kamehamehaIV .
  ?kamehamehaIV dbr:Kamehameha_IV .

  # Keʻelikōlani's father
  ?keelikolanisFather dbo:child dbr:Keʻelikōlani .
  
  # Child of Kapaakea (father of Keʻelikōlani)
  ?kapaakea dbo:child ?keelikolanisChild .
  ?keelikolanisChild rdfs:label ""Keʻelikōlani""@en .

  # Common parent
  ?parent dbo:child ?child ;
          dbo:child ?keelikolanisChild .
}
```",4,5,5,2,2,3,3,71,0,0,1,0,0.0,0
507,19,train,Give me the spouse of the person born as Anne Voase Coates and director of Entertaining Mr Sloane (film).,"SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/spouse> ?v0 . <http://dbpedia.org/resource/Entertaining_Mr_Sloane_(film)> <http://dbpedia.org/ontology/director> ?result . ?v0 <http://dbpedia.org/property/birthName> ""Anne Voase Coates""@en . }","```sparql
SELECT ?spouse WHERE {
  ?person foaf:name ""Anne Voase Coates""@en .
  ?person dbo:birthName ""Anne Voase Coates""@en .
  ?film dbo:director ?person ;
        rdfs:label ""Entertaining Mr Sloane""@en .
  OPTIONAL { ?person dbo:spouse ?spouse . }
}
```",3,3,4,2,2,3,3,71,0,0,1,0,0.0,0
216,21,train,Give me the player in the coach of Croatia national under-21 football team and team of Ognjen Vukojević.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/coach> <http://dbpedia.org/resource/Ognjen_Vukojević> . ?v1 <http://dbpedia.org/ontology/team> ?result . <http://dbpedia.org/resource/Croatia_national_under-21_football_team> <http://dbpedia.org/ontology/coach> ?v1 . },"```sparql
# Query 1: Get the coach of the Croatia national under-21 football team
SELECT ?coach WHERE {
  ?team rdf:type dbo:NationalFootballTeam .
  ?team rdfs:label ""Croatia national under-21 football team""@en .
  ?team dbo:headCoach ?coach .
}

# Query 2: Get the teams that Ognjen Vukojević played for
SELECT DISTINCT ?team WHERE {
  ?player rdf:type dbo:FootballPlayer .
  ?player rdfs:label ""Ognjen Vukojević""@en .
  ?player dbo:playsForTeam ?team .
}
```",3,3,4,2,2,3,3,71,0,0,1,0,0.0,0
826,30,train,"Give me the spouse of Anna Magdalena Appel and predecessor of the parent of Prince Friedrich of Hesse and by Rhine and successor of Louis II, Grand Duke of Hesse.","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/successor> ?v1 . <http://dbpedia.org/resource/Prince_Friedrich_of_Hesse_and_by_Rhine> <http://dbpedia.org/ontology/parent> ?v1 . <http://dbpedia.org/resource/Louis_II,_Grand_Duke_of_Hesse> <http://dbpedia.org/ontology/successor> ?result . <http://dbpedia.org/resource/Anna_Magdalena_Appel> <http://dbpedia.org/ontology/spouse> ?result . }","```sparql
SELECT ?person WHERE {
  # Spouse of Anna Magdalena Bach
  ?b1 dbo:spouse dbr:Anna_Magdalena_Bach .
  
  # Predecessor of the parent of Prince Friedrich of Hesse and by Rhine
  ?parent dbo:child dbr:Prince_Friedrich_of_Hesse_and_by_Rhine .
  ?parent dbo:fatherOrMother ?grandParent .
  ?predecessor dbo:succeededBy ?grandParent .

  # Successor of Louis II, Grand Duke of Hesse
  ?successor dbo:predecessor dbr:Louis_II,_Grand_Duke_of_Hesse .

  # Linking the person to all conditions
  FILTER (?b1 = ?person && ?predecessor = ?person && ?successor = ?person)
}
```",4,4,5,2,3,3,3,71,0,0,1,0,0.0,0
93,13,train,"Give me the capital of the headquarter, that is a region and a settlement, of the headquarter of Clam Cove Pictograph Site.",SELECT ?result WHERE { ?v0 <http://dbpedia.org/ontology/location> ?v1 . ?v1 <http://dbpedia.org/ontology/capital> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Region>. <http://dbpedia.org/resource/Clam_Cove_Pictograph_Site> <http://dbpedia.org/ontology/location> ?v0 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?capital WHERE {
  # Find the Clam Cove Pictograph Site and its associated region (Nunavut)
  dbr:Clam_Cove_Pictographs_Site dbo:locatedIn dbr:Nunavut .
  
  # Get the capital of Nunavut
  dbr:Nunavut dbo:capital ?capital .
}
```",3,5,4,3,1,3,2,20,0,0,2,0,0.0,0
83,4,train,"Who is the commander, that is a politician, in Central African Republic Civil War?",SELECT ?result WHERE { ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. <http://dbpedia.org/resource/Central_African_Republic_Civil_War> <http://dbpedia.org/ontology/commander> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?commander ?politicianRole WHERE {
  # Find individuals involved as commanders in the Central African Republic Civil War
  ?war dbr:Central_African_Republic_Civil_War .
  ?war dbo:participant ?commander .
  ?commander a dbo:MilitaryPerson .

  OPTIONAL {
    # Check if these commanders have any political roles
    ?commander dbo:politicalRole ?politicianRole .
    FILTER EXISTS { ?politicianRole a dbo:PoliticalOffice }
  }

  FILTER NOT EXISTS { 
    ?commander dbo:politicalRole [] . 
  } UNION {
    ?commander dbo:politicalRole ?politicianRole .
  }
}
```",1,2,2,1,1,3,2,20,0,0,279,0,0.0,0
236,3,train,"Give me the administration, that is an organisation, of John Adams.",SELECT ?result WHERE { ?result <http://dbpedia.org/property/leader> <http://dbpedia.org/resource/John_Adams> . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. },"```sparql
SELECT ?administration WHERE {
  ?person foaf:name ""John Adams""@en .
  ?person dbo:president ?administration .
}
```",1,2,2,1,1,3,2,20,0,0,1,0,0.0,0
826,2,train,"Give me the predecessor of Louis IV, Grand Duke of Hesse.","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/successor> <http://dbpedia.org/resource/Louis_IV,_Grand_Duke_of_Hesse> . }","```sparql
SELECT ?predecessor WHERE {
  wd:Q123456 dbo:predecessor ?predecessor .
}
```

In this query:
- Replace `wd:Q123456` with the actual DBpedia resource identifier for Louis IV, Grand Duke of Hesse. You can find this by searching DBpedia or using a SPARQL endpoint to look up his unique identifier.",1,1,2,1,1,3,3,71,0,0,1,0,0.0,0
955,2,train,"Give me the work, that is a work and an album and a musical work, of Matt Freeman.",SELECT ?result WHERE { ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Album>. ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalWork>. ?result <http://dbpedia.org/property/writer> <http://dbpedia.org/resource/Matt_Freeman> . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?work WHERE {
  ?work dbo:creator dbr:Matt_Freeman .
  ?work a dbo:Album ;
        a dbo:MusicalWork .
}
```",1,4,2,1,1,3,2,20,0,0,2,0,0.0,0
507,4,train,Who is the person born as Anne Voase Coates?,"SELECT ?result WHERE { ?result <http://dbpedia.org/property/birthName> ""Anne Voase Coates""@en . }","```sparql
PREFIX foaf: <http://xmlns.com/foaf/0.1/>
PREFIX schema: <http://schema.org/>

SELECT ?person ?name WHERE {
  ?person a foaf:Person .
  OPTIONAL { ?person foaf:givenName ?firstName . }
  OPTIONAL { ?person foaf:familyName ?lastName . }
  ?person schema:birthName ""Anne Voase Coates"" .
  
  BIND(CONCAT(?firstName, "" "", ?lastName) AS ?name)
}
```",1,1,2,1,1,3,3,71,0,0,1,0,0.0,0
976,22,train,Give me the office of Mustafa Şentop and office of the person born as Mehmet Naci Bostancı.,"SELECT ?result WHERE { <http://dbpedia.org/resource/Mustafa_Şentop> <http://dbpedia.org/property/office> ?result . ?v0 <http://dbpedia.org/property/office> ?result . ?v0 <http://dbpedia.org/property/birthName> ""Mehmet Naci Bostancı""@en . }","```sparql
SELECT ?person ?office WHERE {
  # Query for Mustafa Şentop
  { 
    wd:Q1234567 dbo:office ?office .
    BIND(wd:Q1234567 AS ?person)
  }
  
  UNION
  
  # Query for Mehmet Naci Bostancı (Mustafa Kemal Atatürk)
  {
    wd:Q12345 dbo:birthName ""Mehmet Naci Bostancı""@tr .
    wd:Q12345 dbo:office ?office .
    BIND(wd:Q12345 AS ?person)
  }
}
```

Note: Replace `wd:Q1234567` with the actual DBpedia identifier for Mustafa Şentop and `wd:Q12345` with the identifier for Mustafa Kemal Atatürk.",3,3,4,2,2,3,3,71,0,0,1,0,0.0,0
129,8,train,Give me the professional in the mayor of 1999 West Dunbartonshire Council election.,SELECT ?result WHERE { ?result <http://dbpedia.org/property/occupation> ?v1 . <http://dbpedia.org/resource/1999_West_Dunbartonshire_Council_election> <http://dbpedia.org/property/leader> ?v1 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT ?mayorName ?profession WHERE {
  ?election dbo:electionDate ?date .
  ?election dbo:officeHolder ?mayor .
  ?mayor foaf:name ?mayorName .
  OPTIONAL { ?mayor dbo:occupation ?profession . }
  
  FILTER (YEAR(?date) = 1999)
  FILTER CONTAINS(LCASE(str(?election)), ""west dunbartonshire council"")
}
```",2,2,3,2,1,2,3,28,0,0,39640,0,0.0,0
826,39,train,"Give me the successor of Louis II, Grand Duke of Hesse and predecessor of the parent of the child of Louis IV, Grand Duke of Hesse.","SELECT ?result WHERE { <http://dbpedia.org/resource/Louis_II,_Grand_Duke_of_Hesse> <http://dbpedia.org/ontology/successor> ?result . ?result <http://dbpedia.org/ontology/successor> ?v1 . ?v0 <http://dbpedia.org/ontology/parent> <http://dbpedia.org/resource/Louis_IV,_Grand_Duke_of_Hesse> . ?v0 <http://dbpedia.org/ontology/parent> ?v1 . }","```sparql
SELECT ?successor WHERE {
  wd:Q1234567 wdt:P39 wd:Q7890123 . # Louis II, Grand Duke of Hesse (P39 is ""position held"")
  wd:Q7890123 wdt:P57 ?successor .   # P57 is ""child""
}
UNION
SELECT ?predecessor WHERE {
  wd:Q3456789 wdt:P39 wd:Q9012345 . # Louis IV, Grand Duke of Hesse (P39 is ""position held"")
  wd:Q9012345 wdt:P40 ?child .       # P40 is ""parent""
  ?child wdt:P57 wd:Q1234567 .       # Child of Louis II
  wd:Q3456789 wdt:P1365 ?predecessor . # P1365 is ""predecessor""
}
```

Note: The actual DBpedia IDs (e.g., `wd:Q1234567`, `wd:Q7890123`) need to be replaced with the correct identifiers for Louis II, Louis III, and Louis IV from DBpedia.",4,4,5,3,2,3,3,71,0,0,1,0,0.0,0
465,23,train,"Give me the successor of the child of the parent of Ercole II d'Este, Duke of Ferrara.","SELECT ?result WHERE { ?v0 <http://dbpedia.org/property/father> ?v2 . ?v0 <http://dbpedia.org/ontology/successor> ?result . <http://dbpedia.org/resource/Ercole_II_d'Este,_Duke_of_Ferrara> <http://dbpedia.org/ontology/parent> ?v2 . }","```sparql
SELECT ?successor WHERE {
  ?ercole2 dbr:Ercole_II_d%27Este ""Ercole II d'Este"" .
  ?ercole2 dbo:father ?parent .
  ?parent dbo:child ?ercole2 .
  ?ercole2 dbo:succeededBy ?successor .
}
```",3,3,4,3,1,3,3,71,0,0,1,0,0.0,0
926,32,train,Give me the father of the father of Abdulaziz and successor of the child of Ahmed III.,SELECT ?result WHERE { <http://dbpedia.org/resource/Abdulaziz> <http://dbpedia.org/property/father> ?v1 . ?v3 <http://dbpedia.org/ontology/successor> ?result . ?v3 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Ahmed_III> . ?v1 <http://dbpedia.org/property/father> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?person WHERE {
  # Abdulaziz Ibn Saud's father
  dbr:Abdulaziz_Ibn_Saud dbo:father dbr:Abdul_Rahman_bin_Faisal_Al_Saud .
  
  # Abdul Rahman bin Faisal Al Saud's father (Abdulaziz's grandfather)
  dbr:Abdul_Rahman_bin_Faisal_Al_Saud dbo:father ?grandfather .

  # Ahmed III's child
  dbr:Aḥmed_III dbo:child dbr:Mustafa_III .

  # Mustafa III's successor
  dbr:Selim_III dbo:predecessor dbr:Mustafa_III .
  
  # Selim III's father
  dbr:Selim_III dbo:father dbr:Mustafa_III .

  # Find the person who is both Faisal bin Turki Al Saud's father and Mustafa III's successor
  ?grandfather rdfs:label ""Faisal bin Turki Al Saud""@en .
}
```",4,4,5,2,2,3,3,71,0,0,1,0,0.0,0
573,37,train,"Give me the person decedent at the residence, that is a settlement, of the professional, that is American, in Politician and parent of John Quincy Adams.","SELECT ?result WHERE { ?v0 <http://dbpedia.org/property/occupation> ""Politician""@en . ?result <http://dbpedia.org/ontology/deathPlace> ?v3 . ?v0 <http://dbpedia.org/property/residence> ?v3 . ?v0 <http://dbpedia.org/ontology/nationality> <http://dbpedia.org/resource/United_States>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. <http://dbpedia.org/resource/John_Quincy_Adams> <http://dbpedia.org/ontology/parent> ?result . }","```sparql
SELECT ?decedent WHERE {
  # Find John Quincy Adams' parent who was an American politician
  wd:Q9376 wdt:P40 wd:Q9376; # John Quincy Adams (P40 is child)
  wdt:P106 wd:Q82955; # P106 is profession, Q82955 is politician
  wdt:P27 wd:Q30. # P27 is country of citizenship, Q30 is the United States

  ?parent wdt:P40 wd:Q9376;
          wdt:P106 wd:Q82955;
          wdt:P27 wd:Q30.

  # Find John Adams' residence that is a settlement
  ?residence wdt:P551 ?parent; # P551 is resides at
             wdt:P31/wdt:P279* wd:Q515. # P31 is instance of, Q515 is settlement

  # Find the decedent who died at this residence
  ?decedent wdt:P20 ?residence.
}
```",4,6,5,3,2,3,3,71,0,0,2,0,0.0,0
47,23,train,"Give me the office of the administration of the commander, that is a politician, in Operation Green Hunt.",SELECT ?result WHERE { ?v0 <http://dbpedia.org/property/governor> ?v2 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. <http://dbpedia.org/resource/Operation_Green_Hunt> <http://dbpedia.org/ontology/commander> ?v2 . ?v0 <http://dbpedia.org/property/office> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?office WHERE {
  ?person a dbo:Politician ;
          foaf:name ""Manmohan Singh""@en .
  ?person dbo:positionHeld ?office .
  ?office dbo:startDate ?start ;
          dbo:endDate ?end .
  FILTER (?start <= ""2010-01-01""^^xsd:date && (BOUND(?end) => ?end >= ""2004-05-22""^^xsd:date))
}
```",3,4,4,3,1,3,3,71,0,0,369,0,0.0,0
573,12,train,"Give me the person decedent at Quincy, Massachusetts and parent of John Quincy Adams.","SELECT ?result WHERE { <http://dbpedia.org/resource/John_Quincy_Adams> <http://dbpedia.org/ontology/parent> ?result . ?result <http://dbpedia.org/ontology/deathPlace> <http://dbpedia.org/resource/Quincy,_Massachusetts> . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?person WHERE {
  ?person dbo:spouse dbr:John_Quincy_Adams .
  ?person dbo:deathPlace dbr:Quincy,_Massachusetts .
}
```",2,2,3,1,2,3,3,71,0,0,2,0,0.0,0
987,15,train,"Who is the band, that is an artist and a musical artist, of the band, that is an artist, of Dado Polumenta?",SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. <http://dbpedia.org/resource/Dado_Polumenta> <http://dbpedia.org/ontology/associatedMusicalArtist> ?v1 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?band1 ?band2 WHERE {
  # Find Dado Povolny's primary band
  dbr:Dado_Povolný dbo:musicalArtist ?band1 .
  
  # Ensure the band is a musical artist
  ?band1 rdf:type dbo:MusicalArtist .

  # Find any associated bands with that band
  OPTIONAL {
    ?band1 dbo:associatedBand ?band2 .
    
    # Ensure the associated band is also a musical artist
    ?band2 rdf:type dbo:MusicalArtist .
  }
}
```",2,5,3,2,1,3,3,71,0,0,2,0,0.0,0
826,37,train,"Give me the successor of the child, that is a royalty, of the reference, that is a royalty, to Louis I and predecessor of Louis IV, Grand Duke of Hesse.","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/successor> <http://dbpedia.org/resource/Louis_IV,_Grand_Duke_of_Hesse> . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v3 <http://dbpedia.org/ontology/successor> ?result . ?v0 <http://xmlns.com/foaf/0.1/name> ""Louis I""@en . ?v0 <http://dbpedia.org/ontology/child> ?v3 . }","```sparql
SELECT ?successor WHERE {
  # Identify Louis I of Hesse
  ?louisI dbr:Louis_I,_Grand_Duke_of_Hesse .

  # Find predecessor of Louis IV, who is also related to Louis I
  ?predecessor dbo:predecessorOf dbr:Louis_IV,_Grand_Duke_of_Hesse ;
              dbo:successor dbr:Louis_III,_Grand_Duke_of_Hesse .
  
  # Ensure the predecessor is royalty and related to Louis I
  ?predecessor rdf:type dbo:Monarch .

  # Find a child of this predecessor who is royalty
  ?child dbo:parent ?predecessor ;
         rdf:type dbo:Monarch .

  # Identify Princess Alice as one such child
  ?alice dbr:Princess_Alice_of_the_United_Kingdom ;
         rdfs:label ""Alice, Princess Royal""@en .
  
  FILTER(?child = ?alice)

  # Find the successor of this child (Princess Alice)
  ?successor dbo:parent ?alice .
}
```",4,6,5,3,2,3,3,71,0,0,1,0,0.0,0
865,33,train,"Give me the native of British Raj and father of the child, that is a politician, of the spouse of Syeda Shahar Banu.",SELECT ?result WHERE { ?v2 <http://dbpedia.org/property/father> ?v1 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v2 <http://dbpedia.org/property/father> ?result . <http://dbpedia.org/resource/Syeda_Shahar_Banu> <http://dbpedia.org/ontology/spouse> ?v1 . ?result <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/British_Raj> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?nativePlace WHERE {
  ?person dbo:nationality dbr:India .
  ?person dbo:birthPlace dbr:Hyderabad,_Telangana .
  ?person rdfs:label ""Asaduddin Owaisi""@en .
}
```",4,5,5,3,2,3,3,71,0,0,1,0,0.0,0
987,18,train,Give me the entity in Montenegro and birth place of Dado Polumenta and birth place of Moamer Kasumović.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Montenegro> . <http://dbpedia.org/resource/Moamer_Kasumović> <http://dbpedia.org/ontology/birthPlace> ?result . <http://dbpedia.org/resource/Dado_Polumenta> <http://dbpedia.org/ontology/birthPlace> ?result . },"```sparql
# Query for Dado Polumenta's birthplace
SELECT ?birthPlace WHERE {
  wd:Q123456 dbo:birthPlace ?birthPlace .
}

# Query for Moamer Kasumović (Ramush Haradinaj)'s birthplace
SELECT ?birthPlace WHERE {
  wd:Q654321 dbo:birthPlace ?birthPlace .
}
```

Note: Replace `wd:Q123456` with the actual DBpedia entity ID for Dado Polumenta and `wd:Q654321` with the actual DBpedia entity ID for Moamer Kasumović (Ramush Haradinaj). You can find these IDs by searching their names on DBpedia or using a SPARQL endpoint to query for them.",3,3,4,1,3,3,3,71,0,0,1,0,0.0,0
130,7,train,"Give me the figure known as the film, that is a soccer club and an organisation, of Candice Storey Lee.",SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerClub>. ?result <http://dbpedia.org/property/nickname> ?v1 . ?v1 <http://dbpedia.org/ontology/director> <http://dbpedia.org/resource/Candice_Storey_Lee> . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?club WHERE {
  ?person foaf:name ""Candice Storey Lee""@en.
  ?person dbo:worksFor ?organization.
  
  ?organization a ?type1.
  ?organization a ?type2.

  FILTER(?type1 IN (dbo:SoccerClub, dbo:Organization))
  FILTER(?type2 IN (dbo:Film, dbo:Organization))

  BIND(?organization AS ?club)
}
```",2,4,3,2,1,3,2,20,0,0,3,0,0.0,0
715,8,train,"Give me the office, that is a government agency and an organisation, of Carlos Franco Iribarnegaray.",SELECT ?result WHERE { ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/GovernmentAgency>. <http://dbpedia.org/resource/Carlos_Franco_Iribarnegaray> <http://dbpedia.org/property/office> ?result . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?office WHERE {
  ?person foaf:name ""Carlos Franco Iribarnegaray""@en .
  ?person dbo:positionHeld ?office .
  ?office a dbo:GovernmentAgency ;
         a dbo:Organization .
}
```",1,3,2,1,1,3,3,71,0,0,1,0,0.0,0
465,25,train,"Give me the successor of the child, that is a royalty, of Anne of Brittany and spouse of Archduchess Barbara of Austria.",SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. <http://dbpedia.org/resource/Anne_of_Brittany> <http://dbpedia.org/ontology/child> ?v1 . ?v1 <http://dbpedia.org/ontology/successor> ?result . ?result <http://dbpedia.org/ontology/spouse> <http://dbpedia.org/resource/Archduchess_Barbara_of_Austria> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?child ?successor WHERE {
  # Anne of Brittany's children who were royalty
  ?child dbo:parent dbr:Anne_of_Brittany ;
         a dbo:Monarch .

  # Child married to Archduchess Barbara of Austria
  ?marriage dbo:spouse1 ?child ;
            dbo:spouse2 dbr:Barbara_of_Austria .
  
  # Find the successor of this child
  ?successor dbo:predecessor ?child .
}
```",3,4,4,2,2,3,3,71,0,0,1,0,0.0,0
976,34,train,"Give me the office of Naci Bostancı and office of the leader, that is a politician, of the administration, that is an organisation, of Kemal Kılıçdaroğlu.",SELECT ?result WHERE { <http://dbpedia.org/resource/Naci_Bostancı> <http://dbpedia.org/property/office> ?result . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v3 <http://dbpedia.org/ontology/leader> ?v1 . ?v3 <http://dbpedia.org/property/leader> <http://dbpedia.org/resource/Kemal_Kılıçdaroğlu> . ?v1 <http://dbpedia.org/property/office> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?naciOffice ?kemalOrganization ?leaderName ?leaderOffice
WHERE {
  # Find Naci Bostancı's office
  OPTIONAL { 
    dbr:Naci_Bostancı dbo:office ?naciOffice .
  }

  # Identify Kemal Kılıçdaroğlu's leading organization (CHP)
  dbr:Kemal_Kılıçdaroğlu dbo:leaderOfOrganization dbr:Republican_People%27s_Party_(Turkey) .

  # Find the leader of CHP and their office
  OPTIONAL {
    ?organization dbo:leader dbr:Kemal_Kılıçdaroğlu .
    ?organization dbo:leader ?leaderName .
    ?leaderName dbo:office ?leaderOffice .
  }
}
```",4,6,5,3,2,3,3,71,0,0,1,0,0.0,0
166,10,train,"Give me the territory administered, that is a country, from the reference to Madrid.","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/capital> ?v0 . ?v0 <http://xmlns.com/foaf/0.1/name> ""Madrid""@en . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. }","```sparql
SELECT ?country WHERE {
  ?city rdfs:label ""Madrid""@en .
  ?city dbo:country ?country .
  FILTER(LANG(?city) = 'en')
}
```",2,3,3,2,1,3,2,20,0,0,15,0,0.0,0
865,2,train,Give me the father of Shahla Khatun.,SELECT ?result WHERE { <http://dbpedia.org/resource/Shahla_Khatun> <http://dbpedia.org/property/father> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>

SELECT ?father WHERE {
  ?person a dbo:Person ;
          foaf:name ""Shahla Khatun""@en .
  ?person dbo:father ?father .
}
```",1,1,2,1,1,3,3,71,1,0,0,1.0,1.0,1.0
98,15,train,Give me the region of the time zone of Lopez Jaena and entity in Philippines.,SELECT ?result WHERE { <http://dbpedia.org/resource/Lopez_Jaena> <http://dbpedia.org/ontology/timeZone> ?v1 . ?result <http://dbpedia.org/ontology/timeZone> ?v1 . ?result <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Philippines> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?region WHERE {
  ?place a dbo:Municipality ;
        dbo:country dbr:Philippines ;
        rdfs:label ""Lopez Jaena""@en .
  
  OPTIONAL { ?place dbo:timeZone dbr:Time_in_the_Philippines . }
  
  ?place dbo:partOfRegion ?region .
}
```",3,3,4,2,2,2,3,28,0,0,1743,0,0.0,0
926,36,train,"Give me the child of the father, that is a royalty, of the parent, that is a royalty, of Beyhan Sultan (daughter of Mustafa III) and father of Mahmud II.",SELECT ?result WHERE { <http://dbpedia.org/resource/Beyhan_Sultan_(daughter_of_Mustafa_III)> <http://dbpedia.org/ontology/parent> ?v3 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v0 <http://dbpedia.org/ontology/child> ?result . ?v3 <http://dbpedia.org/property/father> ?v0 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. <http://dbpedia.org/resource/Mahmud_II> <http://dbpedia.org/property/father> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?child WHERE {
  ?sultan dbo:spouse ?parent .
  ?parent foaf:name ""Beyhan Sultan""@en .
  ?sultan foaf:name ""Mustafa III""@en .
  
  ?mustafaChild dbo:father ?sultan ;
                a dbo:Sovereign .
  ?abdulHamid dbo:mother ?parent ;
              dbo:father ?mustafaChild ;
              foaf:name ""Abdul Hamid I""@en .

  ?mahmudII dbo:father ?abdulHamid ;
            foaf:name ""Mahmud II""@en .

  OPTIONAL { ?abdulHamid dbo:child ?child . }
}
```",4,6,5,3,2,3,3,71,0,0,1,0,0.0,0
839,5,train,"Give me the band, that is a band and a group, of Peter Schorowsky.",SELECT ?result WHERE { <http://dbpedia.org/resource/Peter_Schorowsky> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Group>. ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Band>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?band WHERE {
  ?person a dbo:Musician ;
          foaf:name ""Peter Schorowsky""@en .
  
  ?person dbo:member ?band .

  FILTER (CONTAINS(LCASE(STR(?band)), ""band"") && CONTAINS(LCASE(STR(?band)), ""group""))
}
```",1,3,2,1,1,3,3,71,0,0,1,0,0.0,0
417,17,train,"Who is the child, that is a royalty, of the parent, that is a royalty, of Alexandrine of Mecklenburg-Schwerin?",SELECT ?result WHERE { <http://dbpedia.org/resource/Alexandrine_of_Mecklenburg-Schwerin> <http://dbpedia.org/ontology/parent> ?v1 . ?result <http://dbpedia.org/property/father> ?v1 . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?grandchild WHERE {
  # Step 1: Identify Alexandrine of Mecklenburg-Schwerin
  dbr:Alexandrine_of_Mecklenburg-Schwerin dbo:spouse ?parent .

  # Step 2: Find her children who are royalty
  ?parent dbo:child ?child .
  ?child a dbo:Monarch ; 
         rdfs:label ?childLabel .

  # Step 3: For each child, find their children (Alexandrine's grandchildren)
  ?child dbo:child ?grandchild .
  
  # Step 4: Ensure the grandchild is royalty
  ?grandchild a dbo:Monarch ;
              rdfs:label ?grandchildLabel .
}
```",2,4,3,2,1,3,3,71,0,0,3,0,0.0,0
874,9,train,"Give me the writer, that is an artist and a musical artist, of the work, that is a work, of Horace Andy.",SELECT ?result WHERE { ?v0 <http://dbpedia.org/property/writer> <http://dbpedia.org/resource/Horace_Andy> . ?v0 <http://dbpedia.org/property/writer> ?result . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?writer WHERE {
  # Find Horace Andy's works
  ?work dbo:artist dbr:Horace_Andy .
  
  # Get the writers of those works
  ?work dbo:lyricist ?writer .

  # Ensure the writer is also an artist and a musical artist
  ?writer a dbo:Artist ;
         a dbo:MusicalArtist .
}
```",2,5,3,2,1,3,2,20,0,0,29,0,0.0,0
417,0,train,Give me the spouse of Princess Caroline-Mathilde of Denmark.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/spouse> <http://dbpedia.org/resource/Princess_Caroline-Mathilde_of_Denmark> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?spouse WHERE {
  VALUES ?princess { dbr:Princess_Caroline-Mathilde_of_Denmark }
  ?princess dbo:spouse ?spouse .
}
```",1,1,2,1,1,3,3,71,1,0,0,1.0,1.0,1.0
445,3,train,"Who is the resident, that is an athlete, of Great Britain?",SELECT ?result WHERE { ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Athlete>. ?result <http://dbpedia.org/property/residence> <http://dbpedia.org/resource/Great_Britain> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?athlete WHERE {
  ?athlete rdf:type dbo:Athlete .
  ?athlete dbo:residence dbr:United_Kingdom .
}
```",1,2,2,1,1,3,3,71,0,19,6,0.0,0.0,0
527,9,train,"Give me the movie, that is a work and English and a television show, with the professional in Actor.","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/United_Kingdom>. ?v0 <http://dbpedia.org/property/occupation> ""Actor""@en . ?result <http://dbpedia.org/property/starring> ?v0 . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/TelevisionShow>. ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dcterms: <http://purl.org/dc/terms/>

SELECT ?movie ?title WHERE {
  ?movie rdf:type dbo:Film .
  ?movie rdf:type dbo:TVSeries .
  ?movie dcterms:language ""en"" .
  ?movie dbo:starring ?actor .
  ?actor rdf:type dbo:Actor .
  ?movie rdfs:label ?title .
  FILTER (lang(?title) = 'en')
}
```",2,5,3,2,1,3,2,20,0,0,298,0,0.0,0
329,16,train,"Give me the birthplace of Eric Cross (writer) and entity in the birthplace, that is an organisation and a country, of Robert Bates (loyalist).",SELECT ?result WHERE { ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?result <http://dbpedia.org/ontology/country> ?v2 . <http://dbpedia.org/resource/Eric_Cross_(writer)> <http://dbpedia.org/ontology/birthPlace> ?result . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. <http://dbpedia.org/resource/Robert_Bates_(loyalist)> <http://dbpedia.org/ontology/birthPlace> ?v2 . },"```sparql
# Query for Eric Cross (writer) birthplace
SELECT ?birthPlace WHERE {
  dbpedia:Eric_Cross_(writer) dbo:birthPlace ?birthPlace .
}

# Query for Robert Bates (loyalist) birthplace and related organization and country
SELECT DISTINCT ?birthPlace ?organization ?country WHERE {
  # Find the birthplace of Robert Bates (loyalist)
  dbpedia:Robert_Bates_(loyalist) dbo:birthPlace ?birthPlace .

  OPTIONAL {
    # Find an organization in the birthplace
    ?birthPlace dbo:location ?organization .
    FILTER (?organization rdf:type dbo:Organisation)
  }

  OPTIONAL {
    # Find a country associated with the birthplace
    ?birthPlace dbo:country ?country .
    FILTER (?country rdf:type dbo:Country)
  }
}
```",3,5,4,2,2,2,3,28,0,0,1,0,0.0,0
826,16,train,"Who is the child, that is a royalty, of the reference, that is a royalty, to Louis I?","SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v1 <http://xmlns.com/foaf/0.1/name> ""Louis I""@en . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v1 <http://dbpedia.org/ontology/child> ?result . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?child WHERE {
  # Identify Louis I, assuming we are referring to a specific historical figure like Louis I of Hungary or France.
  # For example, let's assume Louis I of Hungary:
  dbr:Louis_I_of_Hungary dbo:spouse ?parent .

  # Find children who are also royals
  ?parent dbo:child ?child .
  
  OPTIONAL { 
    ?child dbo:royalTitle ?title .
  }
  
  FILTER EXISTS {
    ?child dbo:royalTitle ?title .
  }
}
```",2,4,3,2,1,3,3,71,0,0,8,0,0.0,0
124,0,train,Give me the commander in Mahdist War.,SELECT ?result WHERE { <http://dbpedia.org/resource/Mahdist_War> <http://dbpedia.org/ontology/commander> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?person ?name WHERE {
  VALUES ?war { dbr:Mahdist_War }
  
  # Find commanders on the Mahdist side
  {
    ?person dbo:commanderOf ?war .
    ?person rdfs:label ?name .
    FILTER (CONTAINS(LCASE(?name), ""muhammad ahmad"") || CONTAINS(LCASE(?name), ""khalifa abdullah al-taashi""))
  }
  
  # Find commanders on the British-Egyptian side
  UNION {
    ?person dbo:commanderOf ?war .
    ?person rdfs:label ?name .
    FILTER (CONTAINS(LCASE(?name), ""charles gordon"") || CONTAINS(LCASE(?name), ""lord kitchener""))
  }
  
  # Filter out non-English labels
  FILTER (LANG(?name) = 'en')
}
ORDER BY ?person
```",1,1,2,1,1,3,3,71,0,0,15,0,0.0,0
554,5,train,Give me the birth place of The Legendary Tigerman.,SELECT ?result WHERE { <http://dbpedia.org/resource/The_Legendary_Tigerman> <http://dbpedia.org/ontology/birthPlace> ?result . },"```sparql
SELECT ?birthPlace WHERE {
  ?person rdfs:label ""The Legendary Tigerman""@en.
  ?person dbo:birthPlace ?birthPlace.
}
```",1,1,2,1,1,3,2,20,1,0,0,1.0,1.0,1.0
445,21,train,"Give me the entity in United Kingdom and entity in the residence, that is a country, of Anna Sharkey.",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/location> ?v1 . <http://dbpedia.org/resource/Anna_Sharkey> <http://dbpedia.org/property/residence> ?v1 . ?result <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/United_Kingdom> . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?ukEntity ?residenceCountry WHERE {
  # Find Anna Sharkey's entity
  ?anna a dbo:Person ;
        foaf:name ""Anna Sharkey""@en .

  OPTIONAL { 
    # Get the residence country of Anna Sharkey
    ?anna dbo:residence ?residence .
    ?residence dbo:country ?residenceCountry .
  }

  # Find an entity in the United Kingdom associated with Anna Sharkey
  ?ukEntity a dbo:Place ;
            dbo:country dbr:United_Kingdom .

  FILTER (?anna = ?ukEntity || ?residence = ?ukEntity)
}
```",3,4,4,2,2,3,3,71,0,0,102,0,0.0,0
507,16,train,"Give me the movie, that is a movie and a work, with the person born on 1919-06-17.","SELECT ?result WHERE { ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?v1 <http://dbpedia.org/ontology/birthDate> ""1919-06-17""^^<http://www.w3.org/2001/XMLSchema#date> . ?result <http://dbpedia.org/property/starring> ?v1 . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Film>. }","```sparql
SELECT ?movie WHERE {
  ?person dbo:birthday ""1919-06-17""^^xsd:date .
  ?person dbo:film ?movie .
  ?movie rdf:type dbp:Film .
  ?movie rdf:type dbr:Work .
}
```",2,4,3,2,1,3,3,71,0,0,11,0,0.0,0
98,1,train,Give me the birth place of Paolo Ballesteros.,SELECT ?result WHERE { <http://dbpedia.org/resource/Paolo_Ballesteros> <http://dbpedia.org/ontology/birthPlace> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?birthPlace WHERE {
  ?person a dbo:Person ;
          foaf:name ""Paolo Ballesteros""@en .
  OPTIONAL { ?person dbo:birthPlace ?birthPlace . }
}
```",1,1,2,1,1,2,3,28,2,0,0,1.0,1.0,1.0
495,1,train,Give me the father of Princess Charlotte of Württemberg.,SELECT ?result WHERE { <http://dbpedia.org/resource/Princess_Charlotte_of_Württemberg> <http://dbpedia.org/property/father> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?father WHERE {
  ?person rdfs:label ""Charlotte of Württemberg""@en .
  ?person dbo:parent ?father .
  FILTER (lang(?person) = 'en')
}
```",1,1,2,1,1,3,2,20,0,0,1,0,0.0,0
839,22,train,"Give me the band of Kevin Russell (musician) and band of the band, that is a musical artist, of Charlie Huhn.",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/bandMember> ?v1 . <http://dbpedia.org/resource/Charlie_Huhn> <http://dbpedia.org/ontology/associatedMusicalArtist> ?v1 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. <http://dbpedia.org/resource/Kevin_Russell_(musician)> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT DISTINCT ?kevinBand ?charlieBand ?bandArtist
WHERE {
  # Find Kevin Russell's band
  ?kevin dbr:Kevin_Russell .
  ?kevin dbo:associatedBand ?kevinBand .

  # Find Charlie Huhn's band
  ?charlie dbr:Charlie_Huhn .
  ?charlie dbo:associatedBand ?charlieBand .

  # Check if the band associated with Charlie Huhn is also a musical artist considered as a ""band""
  OPTIONAL {
    ?charlieBand rdf:type dbp:MusicalArtist ;
                 rdfs:label ?bandLabel .
    FILTER (CONTAINS(LCASE(?bandLabel), ""band""))
  }
}
```",3,4,4,2,2,3,3,71,0,0,1,0,0.0,0
326,2,train,"Give me the region coded, that is a settlement, as 442/760.","SELECT ?result WHERE { ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. ?result <http://dbpedia.org/ontology/areaCode> ""442/760"" . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?settlement WHERE {
  ?settlement a dbo:PopulatedPlace .
  ?settlement dbp:regionCode ""442/760"" .
}
```",1,2,2,1,1,2,2,9,0,0,168,0,0.0,0
791,39,train,"Give me the father of the child, that is a royalty, of the father, that is a royalty and an office holder, of Emperor Antoku and predecessor of Emperor Antoku.",SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v1 <http://dbpedia.org/property/father> ?v0 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?result <http://dbpedia.org/ontology/successor> <http://dbpedia.org/resource/Emperor_Antoku> . ?v1 <http://dbpedia.org/property/father> ?result . <http://dbpedia.org/resource/Emperor_Antoku> <http://dbpedia.org/property/father> ?v0 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?fatherOfChild WHERE {
  # Step 1: Find Emperor Antoku's father
  dbr:Emperor_Antoku dbo:father ?antokuFather .

  # Step 2: Find the predecessor of Emperor Antoku
  dbr:Emperor_Antoku dbo:predecessor ?antokuPredecessor .

  # Step 3: Identify a child of this predecessor who is royalty and an office holder
  ?child dbo:father ?antokuPredecessor .
  ?child rdf:type dbo:Monarch .
  OPTIONAL { ?child dbo:office ?office } .

  # Step 4: Find the father of this child
  ?child dbo:father ?fatherOfChild .
}
```",4,7,5,3,2,3,3,71,0,0,1,0,0.0,0
715,2,train,Give me the leader of Ministry of the Air (Spain).,SELECT ?result WHERE { <http://dbpedia.org/resource/Ministry_of_the_Air_(Spain)> <http://dbpedia.org/ontology/leader> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?leader WHERE {
  ?ministry a dbo:GovernmentMinistry ;
            rdfs:label ""Ministry of the Air""@en .
  ?ministry dbo:country dbr:Spain .
  ?ministry dbo:head ?leader .
}
```",1,1,2,1,1,3,3,71,0,0,2,0,0.0,0
987,24,train,Give me the entity in Montenegro and birth place of the actor of All for Free.,SELECT ?result WHERE { <http://dbpedia.org/resource/All_for_Free> <http://dbpedia.org/property/starring> ?v2 . ?v2 <http://dbpedia.org/ontology/birthPlace> ?result . ?result <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Montenegro> . },"```sparql
SELECT ?actor ?birthPlace WHERE {
  ?movie dbo:director <http://dbpedia.org/resource/Goran_Radovanović> .
  ?movie dbo:starring ?actor .
  FILTER(CONTAINS(LCASE(str(?movie)), ""all for free""))
  ?actor dbo:birthPlace ?birthPlace .
  ?birthPlace dbo:country <http://dbpedia.org/resource/Montenegro> .
}
```",3,3,4,2,2,3,3,71,0,0,1,0,0.0,0
965,13,train,"Give me the parent of the child, that is a royalty, of Prince Louis of Battenberg.",SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v1 <http://dbpedia.org/ontology/parent> ?result . ?v1 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Prince_Louis_of_Battenberg> . },"```sparql
SELECT ?child ?parent WHERE {
  # Find children of Prince Louis of Battenberg
  ?child dbo:spouse|dbo:childOf dbp:Prince_Louis_of_Battenberg .
  
  # Filter for royalty among the children
  OPTIONAL { 
    ?child dbo:title dbr:Royal_Titles . 
  }
  
  FILTER EXISTS {
    ?child dbo:title dbr:Royal_Titles .
  }

  # Find parent of the royal child
  ?parent dbo:spouse|dbo:childOf ?child .
}
```",2,3,3,2,1,3,3,71,0,0,2,0,0.0,0
507,21,train,"Give me the professional in Film director, television director and spouse of the person born as Anne Voase Coates.","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/spouse> ?v1 . ?result <http://dbpedia.org/property/occupation> ""Film director, television director""@en . ?v1 <http://dbpedia.org/property/birthName> ""Anne Voase Coates""@en . }","```sparql
SELECT ?director WHERE {
  ?person foaf:name ""Sidney Coates""@en .
  ?person dbo:spouse dbr:Anne_V._Coates .
  ?person dbo:occupation dbr:Film_director ;
          dbo:occupation dbr:Television_director .
}
```",3,3,4,2,2,3,3,71,0,0,1,0,0.0,0
955,14,train,"Give me the band of the band member, that is a musical artist and an artist, of the reference, that is a band and a group and an organisation, to Street Dogs.","SELECT ?result WHERE { ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. ?v2 <http://xmlns.com/foaf/0.1/name> ""Street Dogs""@en . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Band>. ?v0 <http://dbpedia.org/ontology/associatedMusicalArtist> ?v2 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Group>. ?result <http://dbpedia.org/ontology/bandMember> ?v0 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. }","```sparql
SELECT DISTINCT ?memberBand WHERE {
  # Step 1: Identify ""Street Dogs"" as a band, group, and organization
  ?streetDogs dbo:type dbr:Musical_band .
  ?streetDogs rdfs:label ""Street Dogs""@en .

  # Step 2: Find members of Street Dogs
  ?member dbo:bandMember ?streetDogs .

  # Step 3: Check if the member is both a musical artist and an artist
  ?member dbo:type dbr:Musical_artist .
  ?member dbo:type dbr:Artist .

  # Step 4: Identify other bands of this member
  ?memberBand dbo:bandMember ?member .
  
  FILTER(?memberBand != ?streetDogs) # Exclude Street Dogs itself from the results

  SERVICE wikibase:label { bd:serviceParam wikibase:language ""[AUTO_LANGUAGE],en"". }
}
```",3,8,4,3,1,3,2,20,0,0,3,0,0.0,0
892,15,train,Give me the profession of the true self of Enrico Crolla.,"SELECT ?result WHERE { ?v1 <http://xmlns.com/foaf/0.1/givenName> ""Enrico Crolla""@en . ?v1 <http://dbpedia.org/property/occupation> ?result . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>

SELECT ?profession WHERE {
  ?person rdfs:label ""Enrico Crolla""@en .
  ?person dbo:occupation ?profession .
}
```",2,2,3,2,1,3,3,71,0,0,2,0,0.0,0
826,31,train,"Give me the successor of Louis II, Grand Duke of Hesse and spouse of the child of the father of Anna Magdalena Appel.","SELECT ?result WHERE { <http://dbpedia.org/resource/Anna_Magdalena_Appel> <http://dbpedia.org/property/father> ?v1 . ?v0 <http://dbpedia.org/ontology/spouse> ?result . ?v0 <http://dbpedia.org/property/father> ?v1 . <http://dbpedia.org/resource/Louis_II,_Grand_Duke_of_Hesse> <http://dbpedia.org/ontology/successor> ?result . }","```sparql
SELECT ?successor WHERE {
  ?grandDuke dbr:Louis_II,_Grand_Duke_of_Hesse dbo:succeededBy ?successor .
  ?bachelor rdf:type dbo:Person ;
            dbo:spouse ?childOfBachFather .
  ?childOfBachFather dbo:father dbr:Johann_Sebastian_Bach .
  FILTER(?successor = ?bachelor)
}
```",4,4,5,3,2,3,3,71,0,0,1,0,0.0,0
527,4,train,Give me the host of Hyperland.,SELECT ?result WHERE { <http://dbpedia.org/resource/Hyperland> <http://dbpedia.org/ontology/presenter> ?result . },"```sparql
PREFIX dbp: <http://dbpedia.org/property/>
PREFIX dbo: <http://dbpedia.org/ontology/>

SELECT ?hostName WHERE {
  ?show rdfs:label ""Hyperland""@en.
  ?show dbo:presenter ?person.
  ?person foaf:name ?hostName.
}
```",1,1,2,1,1,3,2,20,0,2,2,0.0,0.0,0
158,1,train,Give me the party of Théodore Steeg.,SELECT ?result WHERE { <http://dbpedia.org/resource/Théodore_Steeg> <http://dbpedia.org/ontology/party> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT ?party WHERE {
  ?person foaf:name ""Théodore Steeg""@en .
  ?person dbo:partyAffiliation ?party .
}
```",1,1,2,1,1,3,2,20,0,0,1,0,0.0,0
47,30,train,Give me the office of Bidesh Ranjan Bose and office of the awardee of Padma Vibhushan and office of Suvendu Adhikari.,SELECT ?result WHERE { ?v1 <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/Padma_Vibhushan> . <http://dbpedia.org/resource/Suvendu_Adhikari> <http://dbpedia.org/property/office> ?result . ?v1 <http://dbpedia.org/property/office> ?result . <http://dbpedia.org/resource/Bidesh_Ranjan_Bose> <http://dbpedia.org/property/office> ?result . },"```sparql
# Query for Bidesh Ranjan Bose
SELECT ?office WHERE {
  wd:Q1234567 dbo:position ?office .
}

# Query for any Padma Vibhushan awardee (assuming a specific person is not given)
SELECT DISTINCT ?person ?office WHERE {
  ?person dbo:award ""Padma Vibhushan""@en ;
          dbo:position ?office .
}

# Query for Suvendu Adhikari
SELECT ?office WHERE {
  wd:Q9876543 dbo:position ?office .
}
```

Note: Replace `wd:Q1234567` with the actual DBpedia entity ID for Bidesh Ranjan Bose and `wd:Q9876543` with the entity ID for Suvendu Adhikari. The queries assume that the property `dbo:position` is used to denote their office or role, which might need adjustment based on the actual data model in DBpedia.",4,4,5,2,3,3,3,71,0,0,1,0,0.0,0
791,26,train,"Give me the predecessor of the child of the child, that is an office holder and a royalty, of Emperor Go-Shirakawa.",SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?result <http://dbpedia.org/ontology/successor> ?v2 . ?v2 <http://dbpedia.org/property/father> ?v1 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v1 <http://dbpedia.org/ontology/parent> <http://dbpedia.org/resource/Emperor_Go-Shirakawa> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?predecessor WHERE {
  # Step 1: Identify Emperor Go-Shirakawa
  dbr:Emperor_Go-Shirakawa a dbo:Monarch ;
                            dbo:child ?child .

  # Step 2: Find His Children
  ?child a dbo:Person ;
         dbo:child ?grandChild .

  # Step 3: Find the Child of Each Child (Grandchildren)
  
  # Step 4: Identify Office Holders and Royalty Among Grandchildren
  ?grandChild a dbo:Monarch, dbo:OfficeHolder ;
              rdfs:label ?name .
  
  # Step 5: Find the Predecessor
  OPTIONAL {
    ?officeHolderPosition dbo:predecessor ?predecessor .
    ?grandChild dbo:positionHeld ?officeHolderPosition .
  }
}
ORDER BY ?name
LIMIT 1
```",3,5,4,3,1,3,3,71,0,0,3,0,0.0,0
5,12,train,Give me the birthplace of Gerald Regan and entity in the award of Coro de la Pontificia Universidad Católica de Puerto Rico.,SELECT ?result WHERE { <http://dbpedia.org/resource/Coro_de_la_Pontificia_Universidad_Católica_de_Puerto_Rico> <http://dbpedia.org/property/awards> ?v2 . <http://dbpedia.org/resource/Gerald_Regan> <http://dbpedia.org/ontology/birthPlace> ?result . ?result <http://dbpedia.org/ontology/country> ?v2 . },"```sparql
# Query to get the birthplace of Gerald Regan
SELECT ?birthPlace WHERE {
  dbpedia:Gerald_Regan dbo:birthPlace ?birthPlace .
}
```

```sparql
# Query to find out which entity awarded Coro de la Pontificia Universidad Católica de Puerto Rico
SELECT ?awarder WHERE {
  ?choir rdf:type dbo:MusicalGroup ;
         rdfs:label ""Coro de la Pontificia Universidad Católica de Puerto Rico""@en .
  OPTIONAL { ?choir dbo:awarder ?awarder . }
}
```",3,3,4,2,2,3,2,20,0,0,1,0,0.0,0
933,1,train,Give me the reference to Alan Warner.,"SELECT ?result WHERE { ?result <http://xmlns.com/foaf/0.1/name> ""Alan Warner""@en . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
SELECT ?linkedEntity WHERE {
  ?s dbo:wikiPageWikiLink ?linkedEntity .
  VALUES ?s { <http://dbpedia.org/page/Alan_Warner> }
}
```",1,1,2,1,1,3,3,71,0,0,1,0,0.0,0
917,14,train,Give me the child of the father of Kamehameha IV.,SELECT ?result WHERE { ?result <http://dbpedia.org/property/father> ?v0 . <http://dbpedia.org/resource/Kamehameha_IV> <http://dbpedia.org/property/father> ?v0 . },"```sparql
SELECT ?child WHERE {
  ?kamehamehaIV dbo:father ?father .
  ?father rdfs:label ""Kamehameha III""@en .
  ?father dbo:child ?child .
}
```",2,2,3,2,1,3,3,71,0,0,3,0,0.0,0
18,16,train,"Give me the alumnus of the figure known, that is an educational institution, as Saints and professional in .","SELECT ?result WHERE { ?result <http://dbpedia.org/property/occupation> """"@en . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/EducationalInstitution>. ?result <http://dbpedia.org/ontology/almaMater> ?v1 . ?v1 <http://dbpedia.org/property/nickname> ""Saints""@en . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?alumnus ?profession WHERE {
  dbr:University_of_San_Francisco dbo:alumni ?alumnus .
  OPTIONAL { ?alumnus dbo:occupation ?profession . }
}
```",3,4,4,2,2,2,3,28,0,0,1,0,0.0,0
987,31,train,"Give me the birth place of Moamer Kasumović and birth place of the band, that is an artist and a musical artist, of the band, that is an artist, of Dado Polumenta.",SELECT ?result WHERE { <http://dbpedia.org/resource/Dado_Polumenta> <http://dbpedia.org/ontology/associatedMusicalArtist> ?v2 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. ?v2 <http://dbpedia.org/ontology/associatedMusicalArtist> ?v0 . ?v0 <http://dbpedia.org/ontology/birthPlace> ?result . <http://dbpedia.org/resource/Moamer_Kasumović> <http://dbpedia.org/ontology/birthPlace> ?result . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. },"```sparql
# Query for the birthplace of Moamer Kalamović (Slobodan Milošević)
SELECT ?birthPlace WHERE {
  wd:Q3046 dbo:birthPlace ?birthPlace .
}

# Query to find the band associated with Dado Polumenta
SELECT ?band WHERE {
  wd:Q1234567 dbo:member ?band . # Replace Q1234567 with Dado Polumenta's DBpedia ID
}

# Assuming we have found a band, query for an artist or musical artist linked to this band
SELECT ?artist WHERE {
  ?band dbo:associatedBand ?artist .
  FILTER (STRSTARTS(STR(?artist), ""http://dbpedia.org/resource/Category:Musical_artists"") || STRSTARTS(STR(?artist), ""http://dbpedia.org/resource/Category:Artists""))
}

# Assuming we have found an artist, query for the band associated with this artist
SELECT ?secondaryBand WHERE {
  ?artist dbo:associatedBand ?secondaryBand .
}

# Query to find the birthplace of the secondary band
SELECT ?birthPlace WHERE {
  ?secondaryBand dbo:birthPlace ?birthPlace .
}
```",4,7,5,3,2,3,3,71,0,0,3,0,0.0,0
839,16,train,"Give me the member of the band, that is a band and a group, of Peter Schorowsky.",SELECT ?result WHERE { <http://dbpedia.org/resource/Peter_Schorowsky> <http://dbpedia.org/ontology/associatedMusicalArtist> ?v1 . ?v1 <http://dbpedia.org/ontology/bandMember> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Band>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Group>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?band WHERE {
  ?person rdfs:label ""Peter Schorowsky""@en.
  ?person dbo:member ?band.
  
  ?band a dbo:Band;
        a dbo:MusicalGroup.
}
```",2,4,3,2,1,3,3,71,0,0,4,0,0.0,0
933,32,train,Give me the reference to the birth name of Alan Warner (musician) and band of the band of Alan Warner (musician).,SELECT ?result WHERE { <http://dbpedia.org/resource/Alan_Warner_(musician)> <http://dbpedia.org/property/birthName> ?v3 . ?result <http://xmlns.com/foaf/0.1/name> ?v3 . ?v1 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . <http://dbpedia.org/resource/Alan_Warner_(musician)> <http://dbpedia.org/ontology/associatedMusicalArtist> ?v1 . },"```sparql
PREFIX foaf: <http://xmlns.com/foaf/0.1/>
PREFIX dbpedia-owl: <http://dbpedia.org/ontology/>

SELECT ?birthName ?bandLabel WHERE {
  ?person rdfs:label ""Alan Warner (musician)""@en .
  OPTIONAL { 
    ?person foaf:givenName ?firstName ;
            foaf:familyName ?lastName .
    BIND(CONCAT(?firstName, "" "", ?lastName) AS ?birthName)
  }
  OPTIONAL {
    ?person dbpedia-owl:memberOf ?band .
    ?band rdfs:label ?bandLabel .
  }
}
```",4,4,5,2,2,3,3,71,0,0,1,0,0.0,0
933,35,train,"Give me the band of the band of Alan Warner (musician) and band of the band, that is a group and a band and an organisation, of Alan Warner (musician).",SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v0 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . <http://dbpedia.org/resource/Alan_Warner_(musician)> <http://dbpedia.org/ontology/associatedMusicalArtist> ?v0 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. <http://dbpedia.org/resource/Alan_Warner_(musician)> <http://dbpedia.org/ontology/associatedMusicalArtist> ?v1 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Band>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Group>. },"```sparql
# Step 1: Find Alan Warner's band
SELECT ?band WHERE {
  ?person dbo:birthName ""Alan Warner""@en .
  ?person dbo:musicGroup ?band .
}

# Step 2: Identify sub-groups or related bands within that band
SELECT DISTINCT ?subgroup WHERE {
  ?band dbo:member ?subgroup .
  ?subgroup a dbo:Band ;
            rdfs:label ?label .
  FILTER (lang(?label) = 'en')
}

# Step 3: Ensure the subgroup is also an organization
SELECT DISTINCT ?subgroupLabel WHERE {
  ?subgroup a dbo:Band, dbo:Organization ;
            rdfs:label ?subgroupLabel .
  FILTER (lang(?subgroupLabel) = 'en')
}
```",4,7,5,2,2,3,3,71,0,0,4,0,0.0,0
459,14,train,"Give me the governor of Oklahoma and governor of the administration, that is a politician, of Brad Henry.",SELECT ?result WHERE { ?v1 <http://dbpedia.org/property/governor> ?result . ?v1 <http://dbpedia.org/property/governor> <http://dbpedia.org/resource/Brad_Henry> . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. <http://dbpedia.org/resource/Oklahoma> <http://dbpedia.org/property/governor> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?governorOfOklahoma ?associatedPolitician WHERE {
  # Find Brad Henry and his role as Governor of Oklahoma
  dbr:Brad_Henry dbo:governmentRole ?role .
  ?role dbo:officeHolder dbr:Brad_Henry ;
        dbo:positionTitle ""Governor of Oklahoma""@en .

  # The governor of Oklahoma during his administration is himself
  BIND(dbr:Brad_Henry AS ?governorOfOklahoma)

  # Find a politician associated with Brad Henry's administration
  OPTIONAL {
    ?role dbo:officeHolder ?politician .
    FILTER(?politician != dbr:Brad_Henry)
    BIND(?politician AS ?associatedPolitician)
  }
}
```",3,4,4,2,2,2,3,28,0,0,1,0,0.0,0
281,3,train,"Give me the war, that is an event and a military conflict, of Roy Boehm.",SELECT ?result WHERE { <http://dbpedia.org/resource/Roy_Boehm> <http://dbpedia.org/ontology/battle> ?result . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?war WHERE {
  ?person rdfs:label ""Roy Boehm""@en .
  ?event dbo:wikiPageDisambiguates ?person .
  ?event rdf:type dbo:War ;
         rdf:type dbo:MilitaryConflict .
}
```",1,3,2,1,1,2,3,28,0,0,20,0,0.0,0
274,10,train,Give me the professional in the designer of Tetris Classic.,SELECT ?result WHERE { ?result <http://dbpedia.org/property/occupation> ?v1 . <http://dbpedia.org/resource/Tetris_Classic> <http://dbpedia.org/property/designer> ?v1 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?designer WHERE {
  ?game dbo:title ""Tetris Classic""@en .
  ?game dbo:developer ?developer .
  ?developer dbo:employee ?designer .
}
```",2,2,3,2,1,2,3,28,0,0,39640,0,0.0,0
839,30,train,"Give me the band of Peter Schorowsky and band of Kevin Russell (musician) and band of the band, that is a musical artist, of Charlie Huhn.",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/bandMember> ?v1 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. <http://dbpedia.org/resource/Charlie_Huhn> <http://dbpedia.org/ontology/associatedMusicalArtist> ?v1 . ?result <http://dbpedia.org/ontology/bandMember> <http://dbpedia.org/resource/Peter_Schorowsky> . <http://dbpedia.org/resource/Kevin_Russell_(musician)> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . },"```sparql
# Get the band associated with Peter Schorowsky
SELECT ?band1 WHERE {
  ?person foaf:name ""Peter Schorowsky""@en .
  ?person dbo:memberOf ?band1 .
}

UNION

# Get the band associated with Kevin Russell (musician)
SELECT ?band2 WHERE {
  ?person foaf:name ""Kevin Russell (musician)""@en .
  ?person dbo:memberOf ?band2 .
}

UNION

# Get the band associated with Charlie Huhn
SELECT ?band3 WHERE {
  ?person foaf:name ""Charlie Huhn""@en .
  ?person dbo:memberOf ?band3 .
}

# Find common bands among Peter Schorowsky, Kevin Russell, and Charlie Huhn
SELECT DISTINCT ?commonBand WHERE {
  VALUES (?band1 ?band2 ?band3) { 
    ( ?x ?y ?z ) 
  }
  
  ?band1 dbo:member ?person1 .
  ?band2 dbo:member ?person2 .
  ?band3 dbo:member ?person3 .

  FILTER(?x = ?band1 && ?y = ?band2 && ?z = ?band3)

  BIND(?band1 AS ?commonBand)
}
```",4,5,5,2,3,3,3,71,0,0,1,0,0.0,0
926,35,train,"Give me the father of the father of Abdulaziz and child of the father, that is a royalty, of Mustafa III.",SELECT ?result WHERE { ?v1 <http://dbpedia.org/property/father> ?result . <http://dbpedia.org/resource/Abdulaziz> <http://dbpedia.org/property/father> ?v1 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v0 <http://dbpedia.org/ontology/child> ?result . <http://dbpedia.org/resource/Mustafa_III> <http://dbpedia.org/property/father> ?v0 . },"```sparql
# Query to find Abdulaziz's father
SELECT ?father WHERE {
  wd:Q12345 wdt:P22 ?father .
}

# Query to find Abdul Rahman's father (Abdulaziz's grandfather)
SELECT ?grandfather WHERE {
  ?father wdt:P22 ?grandfather .
}

# Query to find Mustafa III's father
SELECT ?mustafa_father WHERE {
  wd:Q12346 wdt:P22 ?mustafa_father .
}

# Query to find the children of Ahmad III (Mustafa III's father) who are royalty
SELECT ?child WHERE {
  ?mustafa_father wdt:P40 ?child .
  FILTER EXISTS { ?child wdt:P31 wd:Q11850 } # Instance of Monarch
}
```

Note: Replace `wd:Q12345` with the DBpedia identifier for Abdulaziz Al Saud and `wd:Q12346` with the identifier for Mustafa III.",4,5,5,2,2,3,3,71,0,0,1,0,0.0,0
773,23,train,Give me the spouse of the father of the parent of Bernard (son of Charles the Fat).,SELECT ?result WHERE { ?v0 <http://dbpedia.org/ontology/spouse> ?result . ?v2 <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Bernard_(son_of_Charles_the_Fat)> . ?v2 <http://dbpedia.org/property/father> ?v0 . },"```sparql
SELECT ?spouse WHERE {
  # Step 1: Identify Bernard (son of Charles the Fat)
  ?bernard dbo:father dbc:Charles_the_Fat .
  
  # Step 2: Find the parent of Bernard
  ?parent dbo:child ?bernard .

  # Step 3: Determine the father of that parent
  ?grandfather dbo:child ?parent .

  # Step 4: Identify the spouse of this father
  ?grandfather dbo:spouse ?spouse .
}
```",3,3,4,3,1,3,3,71,0,0,1,0,0.0,0
791,10,train,Give me the father of Emperor Go-Toba and spouse of Taira no Tokuko.,SELECT ?result WHERE { <http://dbpedia.org/resource/Emperor_Go-Toba> <http://dbpedia.org/property/father> ?result . ?result <http://dbpedia.org/ontology/spouse> <http://dbpedia.org/resource/Taira_no_Tokuko> . },"```sparql
SELECT ?person WHERE {
  ?person dbo:spouse dbr:Taira_no_Tokuko .
  ?person dbo:father dbr:Emperor_Go-Toba .
}
```",2,2,3,1,2,3,3,71,0,0,1,0,0.0,0
926,26,train,Give me the successor of the child of the spouse of Şermi Kadın.,SELECT ?result WHERE { ?v0 <http://dbpedia.org/ontology/successor> ?result . ?v2 <http://dbpedia.org/ontology/spouse> <http://dbpedia.org/resource/Şermi_Kadın> . ?v0 <http://dbpedia.org/property/father> ?v2 . },"```sparql
SELECT ?successor WHERE {
  ?şermiKadin rdf:type dbo:Person ;
              foaf:name ""Şermi Kadın""@en .
  
  ?şermiKadin dbo:spouse ?spouse .

  ?spouse dbo:child ?child .

  ?child dbo:predecessor ?successor .
}
```",3,3,4,3,1,3,3,71,0,2,2,0.0,0.0,0
978,13,train,"Give me the band member of the professional, that is a musical artist and an artist, in the award of Michel Claparède.",SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. <http://dbpedia.org/resource/Michel_Claparède> <http://dbpedia.org/property/awards> ?v0 . ?result <http://dbpedia.org/ontology/associatedMusicalArtist> ?v1 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. ?v1 <http://dbpedia.org/property/occupation> ?v0 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?bandMember WHERE {
  # Identify Michel Claparède and the award associated with him
  dbr:Michel_Clapi%C3%A8re a dbo:Person ;
    dbo:award dbr:Award .

  # Find band members who are both musical artists and artists
  ?bandMember a dbo:Band ;
              dbo:member ?person .
  
  ?person a dbo:MusicalArtist, dbo:Artist ;
          dbo:award dbr:Award .

}
```",3,5,4,3,1,3,2,20,0,0,9007,0,0.0,0
36,15,train,"Give me the person born as Ayo Makun and actor of the claim to fame, that is a film, of Lepacious Bose.","SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Film>. ?result <http://dbpedia.org/property/birthName> ""Ayo Makun""@en . <http://dbpedia.org/resource/Lepacious_Bose> <http://dbpedia.org/ontology/knownFor> ?v1 . ?v1 <http://dbpedia.org/ontology/starring> ?result . }","```sparql
SELECT ?personAyoMakun ?filmLepaciousBose WHERE {
  # Find the person born as Ayo Makun
  ?personAyoMakun dbo:birthName ""Ayo Makun"" .
  
  # Find the film associated with Lepacious Bose's claim to fame
  ?lepaiousBose foaf:name ""Lepacious Bose"" .
  ?lepaiousBose dbo:claimToFame ?filmLepaciousBose .
}
```",3,4,4,2,2,2,3,28,0,0,1,0,0.0,0
917,18,train,Give me the child of Kekūanāoʻa and child of Kekūanāoʻa and parent of Albert Kamehameha.,"SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/parent> <http://dbpedia.org/resource/Kekūanāoʻa> . ?result <http://dbpedia.org/property/father> ""Kekūanāoʻa""@en . ?result <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Albert_Kamehameha> . }","```sparql
SELECT ?child WHERE {
    # Find children of Kekūanāoʻa
    ?child dbo:parent dbr:Kekūanāoʻa .
    
    # Ensure the same person is a parent of Albert Kamehameha
    ?child dbo:child dbr:Albert_Kamehameha .
}
```",3,3,4,1,3,3,3,71,1,0,0,1.0,1.0,1.0
926,12,train,Give me the successor of Mustafa III and child of Ahmed III.,SELECT ?result WHERE { <http://dbpedia.org/resource/Ahmed_III> <http://dbpedia.org/ontology/child> ?result . <http://dbpedia.org/resource/Mustafa_III> <http://dbpedia.org/ontology/successor> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?succeedingSultan WHERE {
  ?mustafaIII dbo:successor ?succeedingSultan .
  FILTER(STR(?mustafaIII) = ""Mustafa_III"")
  
  ?ahmedIII dbo:child ?succeedingSultan .
  FILTER(STR(?ahmedIII) = ""Ahmed_III"")
}
```",2,2,3,1,2,3,3,71,0,0,1,0,0.0,0
417,28,train,"Give me the spouse of the parent, that is a royalty, of Count Ingolf of Rosenborg and child of Alexandrine of Mecklenburg-Schwerin and child of Christian X of Denmark.",SELECT ?result WHERE { ?result <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Christian_X_of_Denmark> . ?v1 <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Count_Ingolf_of_Rosenborg> . ?result <http://dbpedia.org/ontology/spouse> ?v1 . ?result <http://dbpedia.org/ontology/parent> <http://dbpedia.org/resource/Alexandrine_of_Mecklenburg-Schwerin> . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. },"```sparql
SELECT ?spouse WHERE {
  wd:Q123456 wdt:P26 wd:Q789012 . # Princess Alexandrine of Denmark (replace Q123456 with her DBpedia ID)
  wd:Q789012 wdt:P26 ?spouse .
}
```

Note: Replace `wd:Q123456` and `wd:Q789012` with the actual DBpedia IDs for Princess Alexandrine of Denmark and King Frederick VIII of Denmark, respectively.",4,5,5,2,3,3,3,71,0,0,1,0,0.0,0
978,12,train,Give me the band member of the person born as Nicholas Bracegirdle and band member of Enya.,"SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/associatedMusicalArtist> <http://dbpedia.org/resource/Enya> . ?result <http://dbpedia.org/ontology/associatedMusicalArtist> ?v0 . ?v0 <http://dbpedia.org/property/birthName> ""Nicholas Bracegirdle""@en . }","```sparql
SELECT ?bandMember WHERE {
  # Find Nicky Ryan's alias and his band membership
  ?nicky a dbo:MusicalArtist ;
         foaf:name ""Nicky Ryan"" ;
         dbo:memberOfBand ?clannad .
  
  # Get the members of Clannad
  ?clannad dbo:bandMember ?bandMember .

  # Find Enya's band membership in Clannad
  OPTIONAL {
    ?enya a dbo:MusicalArtist ;
          foaf:name ""Enya"" ;
          dbo:memberOfBand ?clannad .
  }
}
```",3,3,4,2,2,3,2,20,0,0,1,0,0.0,0
935,7,train,Give me the death place of the awardee of Sitara-i-Imtiaz.,SELECT ?result WHERE { ?v1 <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/Sitara-i-Imtiaz> . ?v1 <http://dbpedia.org/ontology/deathPlace> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT DISTINCT ?person ?deathPlace WHERE {
  ?person dbo:award [dbo:recipient ?recipient; rdf:type dbr:Sitara-i-Imtiaz] .
  OPTIONAL { ?person dbo:deathPlace ?deathPlace . }
  FILTER NOT EXISTS { ?person dbo:birthDate ?birthDate } .
}
```",2,2,3,2,1,3,2,20,0,0,18,0,0.0,0
216,3,train,Give me the mayor of Ros Bates.,SELECT ?result WHERE { <http://dbpedia.org/resource/Ros_Bates> <http://dbpedia.org/property/leader> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?mayor WHERE {
  ?location a dbo:Municipality ;
            rdfs:label ""Ros Bates""@en .
  OPTIONAL { ?location dbo:mayor ?mayor . }
}
```",1,1,2,1,1,2,3,28,0,0,4,0,0.0,0
83,4,train,Give me the player in Greg Boehme and player in Albert Edward (soccer).,SELECT ?result WHERE { <http://dbpedia.org/resource/Greg_Boehme> <http://dbpedia.org/ontology/team> ?result . <http://dbpedia.org/resource/Albert_Edward_(soccer)> <http://dbpedia.org/ontology/team> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?player WHERE {
  VALUES ?name { ""Greg Boehme"" ""Albert Edward (soccer)"" }
  
  ?player a dbo:SoccerPlayer ;
          rdfs:label ?label .
  
  FILTER(CONTAINS(LCASE(?label), LCASE(?name)))
}
```",2,2,3,1,2,2,2,9,0,2,1,0.0,0.0,0
987,11,train,"Give me the birth place of the band, that is an artist and a musical artist, of Šako Polumenta.",SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. <http://dbpedia.org/resource/Šako_Polumenta> <http://dbpedia.org/ontology/associatedMusicalArtist> ?v1 . ?v1 <http://dbpedia.org/ontology/birthPlace> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?birthPlace WHERE {
  VALUES ?band { dbr:Bijelo_Dugme }
  
  # Check if the band is both an artist and a musical artist
  ?band dbo:type/dbo:subClassOf* dbo:Artist .
  ?band dbo:type/dbo:subClassOf* dbo:MusicalArtist .

  # Retrieve the birthplace of the band
  OPTIONAL { ?band dbo:birthPlace ?birthPlace }
}
```",2,4,3,2,1,3,3,71,0,0,6,0,0.0,0
158,3,train,"Give me the award, that is a country, of Adelbert Cronkhite.",SELECT ?result WHERE { <http://dbpedia.org/resource/Adelbert_Cronkhite> <http://dbpedia.org/property/awards> ?result . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?award WHERE {
  ?person dbo:name ""Adelbert Cronkhite""@en .
  ?person dbo:awardsReceived ?award .
  ?award rdfs:label ?awardLabel .
  FILTER (CONTAINS(LCASE(?awardLabel), ""country""))
}
```",1,2,2,1,1,3,2,20,0,0,1,0,0.0,0
274,4,train,Give me the designer of Tetris Classic.,SELECT ?result WHERE { <http://dbpedia.org/resource/Tetris_Classic> <http://dbpedia.org/property/designer> ?result . },"```sparql
SELECT ?designer WHERE {
  ?game dcterms:title ""Tetris""@en .
  ?game dbo:creator ?designer .
}
```",1,1,2,1,1,2,3,28,0,0,3,0,0.0,0
445,25,train,Give me the entity in the award of George H. Cameron and death place of Patrick Moore.,SELECT ?result WHERE { <http://dbpedia.org/resource/Patrick_Moore> <http://dbpedia.org/ontology/deathPlace> ?result . <http://dbpedia.org/resource/George_H._Cameron> <http://dbpedia.org/property/awards> ?v1 . ?result <http://dbpedia.org/ontology/country> ?v1 . },"```sparql
SELECT ?georgeAward ?patrickDeathPlace WHERE {
  ?george dbo:award ?georgeAward .
  FILTER(STRSTARTS(LCASE(?george), ""george h. cameron""))
  
  ?patrick dbo:deathPlace ?patrickDeathPlace .
  FILTER(STRSTARTS(LCASE(?patrick), ""patrick moore""))
}
```",3,3,4,2,2,3,3,71,0,0,2,0,0.0,0
158,11,train,"Give me the entity in the award, that is a country, of Adelbert Cronkhite and party of Théodore Steeg.",SELECT ?result WHERE { <http://dbpedia.org/resource/Théodore_Steeg> <http://dbpedia.org/ontology/party> ?result . <http://dbpedia.org/resource/Adelbert_Cronkhite> <http://dbpedia.org/property/awards> ?v2 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. ?result <http://dbpedia.org/ontology/country> ?v2 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?award ?countryEntity WHERE {
  ?person1 dbo:awardedBy ?award .
  ?person2 dbo:awardedBy ?award .

  VALUES ?person1 { dbr:Adelbert_Cronkhite }
  VALUES ?person2 { dbr:Théodore_Steeg }

  OPTIONAL { ?award dbo:country dbr:France . BIND(dbr:France AS ?countryEntity) }
}
```",3,4,4,2,2,3,2,20,0,0,1,0,0.0,0
456,10,train,Give me the band of Alan Doyle and spouse of Danielle Spencer (Australian actress).,SELECT ?result WHERE { <http://dbpedia.org/resource/Danielle_Spencer_(Australian_actress)> <http://dbpedia.org/ontology/spouse> ?result . <http://dbpedia.org/resource/Alan_Doyle> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . },"```sparql
SELECT DISTINCT ?band WHERE {
  ?person foaf:name ""Alan Doyle""@en .
  ?person dbo:memberOf ?group .
  ?group rdfs:label ?band .
  FILTER(LANG(?band) = 'en')
}

UNION

SELECT DISTINCT ?spouse WHERE {
  ?person foaf:name ""Danielle Spencer""@en .
  ?person dbo:spouse ?spousePerson .
  ?spousePerson foaf:name ?spouse .
  FILTER(LANG(?spouse) = 'en')
}
```",2,2,3,1,2,3,3,71,0,0,1,0,0.0,0
124,13,train,"Give me the military force of the war, that is an event and a military conflict and a societal event, of Frank Rhodes (British Army officer).",SELECT ?result WHERE { <http://dbpedia.org/resource/Frank_Rhodes_(British_Army_officer)> <http://dbpedia.org/ontology/battle> ?v1 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?result <http://dbpedia.org/ontology/battle> ?v1 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?war ?militaryForce WHERE {
  ?officer a dbo:MilitaryPerson ;
          foaf:name ""Frank Rhodes"" .
  
  ?officer dbo:servedInMilitaryOrganization ?organization .

  ?war dbo:hasParticipant ?officer ;
       a dbo:MilitaryConflict, dbo:SocietalEvent .

  ?war dbo:militaryForce ?militaryForce .
}
```",2,5,3,2,1,3,3,71,0,0,1091,0,0.0,0
216,30,train,"Give me the player in Mario Ivanković and team of the person born, that is a sports manager and a soccer manager and a soccer player, on 1983-12-20 and player in Igor Bišćan.","SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsManager>. <http://dbpedia.org/resource/Igor_Bišćan> <http://dbpedia.org/ontology/team> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerManager>. <http://dbpedia.org/resource/Mario_Ivanković> <http://dbpedia.org/ontology/team> ?result . ?v1 <http://dbpedia.org/ontology/birthDate> ""1983-12-20""^^<http://www.w3.org/2001/XMLSchema#date> . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerPlayer>. ?result <http://dbpedia.org/ontology/coach> ?v1 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?player WHERE {
  ?player a dbo:SoccerPlayer ;
          dbo:birthDate ""1983-12-20""^^xsd:date ;
          dbo:sportsManager true ;
          dbo:manager true .
  
  ?team1 dbo:member ?player .
  ?team2 dbo:member ?player .

  ?team1 dbo:member dbr:Mario_Ivanković .
  ?team2 dbo:member dbr:Igor_Bišćan .
}
```",4,7,5,2,3,3,3,71,0,0,1,0,0.0,0
365,4,train,Give me the reference to Полтавская губерния.,"SELECT ?result WHERE { ?result <http://xmlns.com/foaf/0.1/name> ""Полтавская губерния""@en . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?entity ?label WHERE {
  VALUES ?name { ""Poltava Governorate"" ""Полтавская губерния"" }
  ?entity rdfs:label ?name .
  FILTER (lang(?label) = 'en')
}
```",1,1,2,1,1,3,2,20,0,0,1,0,0.0,0
987,19,train,"Give me the birth place of the band, that is an artist and a musical artist, of Šako Polumenta and birth place of Moamer Kasumović.",SELECT ?result WHERE { ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. <http://dbpedia.org/resource/Moamer_Kasumović> <http://dbpedia.org/ontology/birthPlace> ?result . ?v2 <http://dbpedia.org/ontology/birthPlace> ?result . <http://dbpedia.org/resource/Šako_Polumenta> <http://dbpedia.org/ontology/associatedMusicalArtist> ?v2 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. },"```sparql
SELECT ?bandBirthPlace ?ramboAmadeusBirthPlace WHERE {
  # Find the birthplace of Zabranjeno Pušenje (the band associated with Šako Polumenta)
  dbpedia:Zabranjeno_Pušenje dbo:birthPlace ?bandBirthPlace .

  # Find the birthplace of Rambo Amadeus (Moamer Kasumović)
  dbpedia:Rambo_Amadeus dbo:birthPlace ?ramboAmadeusBirthPlace .
}
```",3,5,4,2,2,3,3,71,0,0,3,0,0.0,0
433,6,train,"Give me the associated musical artist, that is an artist and a musical artist, of Scott LaFaro.",SELECT ?result WHERE { <http://dbpedia.org/resource/Scott_LaFaro> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?associatedArtist WHERE {
  ?person a dbo:Musician ;
          foaf:name ""Scott LaFaro""@en .
  
  OPTIONAL { 
    ?collaboration dbo:artist ?person ;
                   dbo:associatedMusicalArtist ?associatedArtist .
  }
  
  FILTER(?associatedArtist != ?person)
}
```",1,3,2,1,1,3,3,71,0,0,1,0,0.0,0
200,2,train,Give me the name of Angelcorpse.,SELECT ?result WHERE { <http://dbpedia.org/resource/Angelcorpse> <http://xmlns.com/foaf/0.1/name> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?band WHERE {
  ?band a dbo:Band .
  ?band rdfs:label ""Angelcorpse""@en .
}
```",1,1,2,1,1,2,2,9,0,1,1,0.0,0.0,0
926,6,train,Give me the child of Ahmed III.,SELECT ?result WHERE { ?result <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Ahmed_III> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?child WHERE {
  ?s dbp:name ""Ahmed III""@en .
  ?s a dbo:Sultan .
  ?s dbo:child ?child .
}
```",1,1,2,1,1,3,3,71,0,0,12,0,0.0,0
987,0,train,Give me the birth place of Dado Polumenta.,SELECT ?result WHERE { <http://dbpedia.org/resource/Dado_Polumenta> <http://dbpedia.org/ontology/birthPlace> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>

SELECT ?birthPlace WHERE {
  ?person a dbo:Person ;
          foaf:name ""Dado Polumenta"" .
  ?person dbo:birthPlace ?birthPlace .
}
```",1,1,2,1,1,3,3,71,0,0,3,0,0.0,0
442,3,train,Give me the actor of This Side of Heaven.,SELECT ?result WHERE { <http://dbpedia.org/resource/This_Side_of_Heaven> <http://dbpedia.org/ontology/starring> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?actor WHERE {
  ?movie dbo:title ""This Side of Heaven""@en .
  ?movie dbo:starring ?actor .
}
```",1,1,2,1,1,2,2,9,0,0,5,0,0.0,0
236,1,train,Give me the party member of Democratic-Republican Party.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/party> <http://dbpedia.org/resource/Democratic-Republican_Party> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?person ?name WHERE {
  ?person dbo:partyAffiliation dbr:Democratic-Republican_Party .
  ?person rdfs:label ?name .
  FILTER (LANG(?name) = 'en')
}
```",1,1,2,1,1,3,2,20,0,0,590,0,0.0,0
978,11,train,"Give me the band member of the professional, that is a musical artist and an artist, in  and band member of Chicane (musician).","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/associatedMusicalArtist> ?v2 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. ?v2 <http://dbpedia.org/property/occupation> """"@en . ?result <http://dbpedia.org/ontology/associatedMusicalArtist> <http://dbpedia.org/resource/Chicane_(musician)> . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?person ?name WHERE {
  ?band dbo:bandMember ?person .
  ?person rdfs:label ?name .
  FILTER(CONTAINS(LCASE(?name), ""chicane"") || CONTAINS(LCASE(?bandLabel), ""chicane""))
  
  OPTIONAL { 
    ?person dbo:occupation ?occupation .
    FILTER(CONTAINS(LCASE(?occupation), ""artist"") || CONTAINS(LCASE(?occupation), ""musical artist""))
  }
  
  SERVICE wikibase:label { bd:serviceParam wikibase:language ""[AUTO_LANGUAGE],en"". }
}
ORDER BY ?name
```",3,5,4,2,2,3,2,20,0,0,2,0,0.0,0
267,9,train,"Give me the player, that is a soccer club, in the manager of 2020–21 Tractor S.C. season.",SELECT ?result WHERE { ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerClub>. ?v0 <http://dbpedia.org/ontology/team> ?result . <http://dbpedia.org/resource/2020–21_Tractor_S.C._season> <http://dbpedia.org/ontology/manager> ?v0 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?managerName WHERE {
    ?club a dbo:SoccerClub ;
          rdfs:label ""Tractor S.C.""@en .
    
    ?position dbo:agent ?manager ;
              dbo:team ?club ;
              dbo:startDate ?start ;
              dbo:endDate ?end .

    FILTER (
        EXISTS { 
            ?manager a dbo:Person ;
                     foaf:name ?managerName .
        }
    )

    FILTER (
        ?start <= ""2020-08-01""^^xsd:date &&
        (?end >= ""2021-07-31""^^xsd:date || NOT EXISTS { ?position dbo:endDate ?end })
    )
}
```",2,3,3,2,1,3,2,20,0,0,31,0,0.0,0
987,29,train,Give me the birth place of Dado Polumenta and entity in Montenegro and birth place of the actor of All for Free.,SELECT ?result WHERE { <http://dbpedia.org/resource/All_for_Free> <http://dbpedia.org/property/starring> ?v3 . <http://dbpedia.org/resource/Dado_Polumenta> <http://dbpedia.org/ontology/birthPlace> ?result . ?result <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Montenegro> . ?v3 <http://dbpedia.org/ontology/birthPlace> ?result . },"```sparql
# Query for Dado Polumenta's birthplace and check if it is in Montenegro
SELECT ?birthPlace (COUNT(?country) AS ?isInMontenegro)
WHERE {
  wd:Q1234568 dbo:birthPlace ?birthPlace .
  OPTIONAL { ?birthPlace wdt:P17 wd:Q30 . } # Q30 is the DBpedia entity for Montenegro
}
GROUP BY ?birthPlace

# Query for actors of ""All for Free"" and their birthplaces
SELECT DISTINCT ?actor ?actorBirthPlace
WHERE {
  wd:Q7890123 dbo:castMember ?actor .
  ?actor dbo:birthPlace ?actorBirthPlace .
}
```

Note: Replace `wd:Q1234568` with the actual DBpedia entity ID for Dado Polumenta and `wd:Q7890123` with the entity ID for ""All for Free"" once identified.",4,4,5,2,3,3,3,71,0,0,1,0,0.0,0
417,23,train,"Give me the spouse of the parent, that is a royalty, of the child of Knud, Hereditary Prince of Denmark.","SELECT ?result WHERE { ?v0 <http://dbpedia.org/ontology/child> ?v2 . ?result <http://dbpedia.org/ontology/spouse> ?v0 . ?v2 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Knud,_Hereditary_Prince_of_Denmark> . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. }","```sparql
SELECT DISTINCT ?spouse WHERE {
  # Step 1: Identify Knud, Hereditary Prince of Denmark
  ?knud dbo:name ""Knud, Hereditary Prince of Denmark""@en .
  
  # Step 2: Find the child of Knud
  ?child dbo:parent ?knud .

  # Step 3: Determine the parent that is royalty (should be Knud himself in this case)
  ?royalParent rdf:type dbp:Royal ;
               dbo:child ?child .
  
  # Step 4: Identify the spouse of this royal parent
  ?royalParent dbo:spouse ?spouse .
}
```",3,4,4,3,1,3,3,71,0,0,2,0,0.0,0
582,9,train,Give me the player in Kazuaki Nagasawa and reference to Japan.,"SELECT ?result WHERE { <http://dbpedia.org/resource/Kazuaki_Nagasawa> <http://dbpedia.org/ontology/team> ?result . ?result <http://xmlns.com/foaf/0.1/name> ""Japan""@en . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?playerRole ?country WHERE {
  VALUES ?person { dbr:Kazuaki_Nagasawa }
  
  ?person dbo:nationality ?nationality .
  ?person dbo:sport ?sport .
  ?person dbo:occupation ?occupation .

  OPTIONAL { ?person dbo:position ?playerRole . }

  FILTER(?nationality = dbr:Japan || ?country = dbr:Japan)
  FILTER(?sport = dbr:Fútbol || ?sport = dbr:Soccer)

  BIND(IF(BOUND(?playerRole), ?playerRole, ""Unknown"") AS ?playerRole)
}
```",2,2,3,1,2,3,3,71,0,0,1,0,0.0,0
826,32,train,"Give me the successor of the child, that is a royalty, of Louis I, Grand Duke of Hesse and spouse of the child of Johann Heinrich Appel.","SELECT ?result WHERE { ?v3 <http://dbpedia.org/ontology/successor> ?result . <http://dbpedia.org/resource/Louis_I,_Grand_Duke_of_Hesse> <http://dbpedia.org/ontology/child> ?v3 . ?v1 <http://dbpedia.org/property/father> ""Johann Heinrich Appel""@en . ?v1 <http://dbpedia.org/ontology/spouse> ?result . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. }","```sparql
# Step 1: Get Louis I, Grand Duke of Hesse and his children who are royalty
SELECT ?child WHERE {
  wd:Q123456 wdt:P31/wdt:P279* wd:Q5; # Louis I is a human
  wdt:P40 ?child. # His children
  FILTER EXISTS { ?child wdt:P39 wd:Q1184 } # Filter for royalty (e.g., monarch)
}

# Step 2: Find the spouse of this royal child
SELECT ?spouse WHERE {
  ?royalChild wdt:P26 ?spouse.
  VALUES ?royalChild { <URI_of_the_royal_child> }
}

# Step 3: Identify Johann Heinrich Appel's children
SELECT ?appelChild WHERE {
  wd:Q789012 wdt:P40 ?appelChild. # Johann Heinrich Appel and his children
}

# Step 4: Determine the successor of the spouse
SELECT ?successor WHERE {
  ?spouse wdt:P57 ?successor.
  VALUES ?spouse { <URI_of_the_spouse> }
}
```

Note: Replace `<URI_of_the_royal_child>` and `<URI_of_the_spouse>` with actual URIs obtained from previous query results.",4,5,5,2,2,3,3,71,0,0,1,0,0.0,0
606,10,train,"Who is the alumnus of the figure known, that is a university and a sports league and an educational institution, as Penn Quakers?",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/almaMater> ?v0 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/EducationalInstitution>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsLeague>. ?v0 <http://dbpedia.org/property/nickname> <http://dbpedia.org/resource/Penn_Quakers> . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/University>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?person WHERE {
  ?person dbo:almaMater dbr:University_of_Pennsylvania .
}
```",2,5,3,2,1,3,2,20,1114,0,0,1.0,1.0,1.0
978,14,train,Give me the band member of the person born as the name of Chicane (musician).,SELECT ?result WHERE { ?v0 <http://dbpedia.org/property/birthName> ?v2 . <http://dbpedia.org/resource/Chicane_(musician)> <http://xmlns.com/foaf/0.1/givenName> ?v2 . ?result <http://dbpedia.org/ontology/associatedMusicalArtist> ?v0 . },"```sparql
# Step 1: Find the DBpedia resource for Nick Bracegirdle
SELECT ?person WHERE {
  ?person rdfs:label ""Nick Bracegirdle""@en .
  FILTER (lang(?person) = 'en')
}

# Step 2: Find musical groups or bands associated with Nick Bracegirdle
SELECT DISTINCT ?band WHERE {
  VALUES ?person { <http://dbpedia.org/resource/Nick_Bracegirdle> } # Replace this URI with the actual one found in step 1
  ?person dbo:memberOfBandOrMusicalGroup ?band .
}

# Step 3: Find other members of those bands
SELECT DISTINCT ?bandMember WHERE {
  VALUES ?band { <http://dbpedia.org/resource/Chicane> } # Replace this URI with the actual band URIs found in step 2
  ?band dbo:member ?bandMember .
  FILTER (?bandMember != <http://dbpedia.org/resource/Nick_Bracegirdle>) # Exclude Nick Bracegirdle himself
}
```",3,3,4,3,1,3,2,20,0,0,2,0,0.0,0
527,5,train,"Give me the work, that is a work and a book, of Tom Baker.",SELECT ?result WHERE { ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Book>. ?result <http://dbpedia.org/property/author> <http://dbpedia.org/resource/Tom_Baker> . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?work WHERE {
  ?work dbo:author dbr:Tom_Baker .
  ?work a dbo:Book ;
        a dbo:CreativeWork .
}
```",1,3,2,1,1,3,2,20,0,0,1,0,0.0,0
987,9,train,Give me the birth place of Dado Polumenta and birth place of Moamer Kasumović.,SELECT ?result WHERE { <http://dbpedia.org/resource/Moamer_Kasumović> <http://dbpedia.org/ontology/birthPlace> ?result . <http://dbpedia.org/resource/Dado_Polumenta> <http://dbpedia.org/ontology/birthPlace> ?result . },"```sparql
PREFIX foaf: <http://xmlns.com/foaf/0.1/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?person ?birthPlaceLabel WHERE {
  VALUES ?givenName ?surname ?label {
    (""Dado"" ""Pršo"" ""Dado Pršo"") 
    (""Radovan"" ""Karadžić"" ""Radovan Karadžić"")
  }
  
  ?person a foaf:Person ;
          foaf:givenName ?givenName ;
          foaf:surname ?surname .
  
  OPTIONAL { ?person rdfs:label ?label . FILTER(lang(?label) = 'en') }

  ?person dbp:birthPlace ?birthPlace .
  ?birthPlace rdfs:label ?birthPlaceLabel .
  FILTER(lang(?birthPlaceLabel) = 'en')
}
```",2,2,3,1,2,3,3,71,0,0,3,0,0.0,0
341,6,train,"Give me the writer of the work, that is a work and an album, of Serrano.","SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Album>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?v1 <http://dbpedia.org/property/writer> ""Serrano""@en . ?v1 <http://dbpedia.org/property/writer> ?result . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?writer WHERE {
  ?work a dbo:Work ;
        dbo:creator ?writer .
  ?album a dbo:Album ;
         dbo:artist ?writer .
  FILTER(CONTAINS(LCASE(STR(?work)), ""serrano"") || CONTAINS(LCASE(STR(?album)), ""serrano""))
}
```",2,4,3,2,1,2,2,9,0,0,283,0,0.0,0
892,17,train,"Give me the administration, that is Italian and a region and a settlement and an administrative region, of the party, that is a political party and an organisation, of Andrea Cozzolino.",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Italy>. ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/AdministrativeRegion>. ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Region>. <http://dbpedia.org/resource/Andrea_Cozzolino> <http://dbpedia.org/ontology/party> ?v0 . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. ?result <http://dbpedia.org/property/leaderParty> ?v0 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/PoliticalParty>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?administration WHERE {
  # Find Andrea Cozzolino's political party
  ?cozzolino dbo:party ?party .
  
  FILTER(?cozzolino = dbr:Andrea_Cozzolino) .

  # Identify an Italian administrative entity that is a region, settlement, and administrative region
  ?administration a dbo:Region ;
                 dbo:country dbr:Italy ;
                 a dbo:Settlement ;
                 a dbo:AdministrativeRegion .
  
  # Link the political party to this administration
  ?administration dbo:governingParty ?party .
}
```",2,8,3,2,1,3,3,71,0,0,14,0,0.0,0
41,14,train,Give me the party of the person born as David Declan Costello and party of Mark Durkan.,"SELECT ?result WHERE { ?v2 <http://dbpedia.org/ontology/party> ?result . ?v2 <http://dbpedia.org/property/birthName> ""David Declan Costello""@en . <http://dbpedia.org/resource/Mark_Durkan> <http://dbpedia.org/ontology/party> ?result . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?personLabel ?partyAffiliationLabel WHERE {
  VALUES (?personLabel) { (""David Declan Costello""@en ""Mark Durkan""@en) }
  
  ?person rdfs:label ?personLabel .
  OPTIONAL { ?person dbo:partyAffiliation ?partyAffiliation . }
  OPTIONAL { ?partyAffiliation rdfs:label ?partyAffiliationLabel . }
}
```",3,3,4,2,2,2,3,28,0,0,1,0,0.0,0
715,3,train,Who is the native of Morocco?,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Morocco> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?person ?name WHERE {
  ?person rdf:type dbo:Person .
  ?person dbo:birthPlace ?place .
  ?place rdfs:label ?label .
  FILTER (CONTAINS(LCASE(?label), ""morocco""))
  OPTIONAL { ?person rdfs:label ?name }
}
ORDER BY ?name
```",1,1,2,1,1,3,3,71,868,1238,0,0.4121557454890788,1.0,0.5837256220578345
18,9,train,"Give me the parent of Liza Huber and alumnus of Marymount College, Tarrytown.","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/almaMater> <http://dbpedia.org/resource/Marymount_College,_Tarrytown> . ?result <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Liza_Huber> . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?parentName WHERE {
  ?liza a dbo:Person ;
        foaf:name ""Liza Huber""@en .
  
  ?liza dbo:parent ?parent .

  ?parent foaf:name ?parentName ;
          dbo:almaMater ?college .

  FILTER (str(?college) = str(dbp:Marymount_College_Tarrytown))
}
```",2,2,3,1,2,2,3,28,0,0,1,0,0.0,0
554,9,train,Give me the administration of the party member of Independent politician.,SELECT ?result WHERE { ?result <http://dbpedia.org/property/leader> ?v0 . ?v0 <http://dbpedia.org/ontology/party> <http://dbpedia.org/resource/Independent_politician> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?role ?description WHERE {
  VALUES ?person { dbr:Bernie_Sanders }
  ?person dbo:office ?office .
  ?office dbo:positionHeldBy ?role .
  OPTIONAL { ?role rdfs:label ?description . FILTER (lang(?description) = 'en') }
}
```",2,2,3,2,1,3,2,20,0,0,905,0,0.0,0
507,35,train,Give me the professional in the profession of Guy Ferland and spouse of the person born as Anne Voase Coates.,"SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/spouse> ?v2 . ?v2 <http://dbpedia.org/property/birthName> ""Anne Voase Coates""@en . ?result <http://dbpedia.org/property/occupation> ?v1 . <http://dbpedia.org/resource/Guy_Ferland> <http://dbpedia.org/property/occupation> ?v1 . }","```sparql
# Query to get Guy Ferland's profession
SELECT ?profession WHERE {
  dbpedia:Guy_Ferland dbo:occupation ?profession .
}

# Query to find Anne Voase Coates' spouse
SELECT ?spouse WHERE {
  dbpedia:Anne_Voase_Coates dbo:spouse ?spouse .
}

# Assuming we have the results from above queries, let's say:
# Guy Ferland's profession is ""Film Editor"" (example)
# Anne Voase Coates' spouse is ""John Doe"" (example)

# Final query to find a professional in the same field as Guy Ferland and who is also John Doe
SELECT ?person WHERE {
  ?person dbo:occupation dbpedia:Film_Editor .
  ?person rdfs:label ""John Doe""@en .
}
```",4,4,5,2,2,3,3,71,0,0,1,0,0.0,0
606,13,train,"Give me the figure known as the nickname of the figure known, that is a settlement, as Barb City.","SELECT ?result WHERE { ?result <http://dbpedia.org/property/nickname> ?v1 . ?v0 <http://dbpedia.org/property/nickname> ""Barb City""@en . ?v0 <http://dbpedia.org/property/nickname> ?v1 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. }","```sparql
SELECT ?settlement WHERE {
  ?settlement dbo:wikiPageWikiLink dbr:Barb_City .
}
```",3,4,4,3,1,3,2,20,0,0,1,0,0.0,0
192,14,train,Give me the child of the child of the parent of Anna of Hungary (Byzantine empress).,SELECT ?result WHERE { ?v0 <http://dbpedia.org/property/father> ?v2 . ?result <http://dbpedia.org/ontology/parent> ?v0 . ?v2 <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Anna_of_Hungary_(Byzantine_empress)> . },"```sparql
SELECT ?grandchild WHERE {
  # Step 1: Find Anna of Hungary (Byzantine empress)
  ?anna dbr:Anna_of_Hungary_(Byzantine_empress) .

  # Step 2: Find her parent
  ?anna dbo:parent ?parent .

  # Step 3: Find the child of this parent
  ?parent dbo:child ?child .

  # Step 4: Find the grandchild (child of the child)
  ?child dbo:child ?grandchild .
}
```",3,3,4,3,1,3,2,20,0,0,7,0,0.0,0
417,36,train,"Give me the spouse of Princess Caroline-Mathilde of Denmark and child of the child, that is a royalty, of the parent, that is a royalty, of Alexandrine of Mecklenburg-Schwerin.",SELECT ?result WHERE { <http://dbpedia.org/resource/Alexandrine_of_Mecklenburg-Schwerin> <http://dbpedia.org/ontology/parent> ?v0 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?result <http://dbpedia.org/ontology/parent> ?v1 . ?result <http://dbpedia.org/ontology/spouse> <http://dbpedia.org/resource/Princess_Caroline-Mathilde_of_Denmark> . ?v1 <http://dbpedia.org/property/father> ?v0 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT DISTINCT ?spouseOfCarolineMathilde ?childOfSpouse ?parentOfAlexandrine ?childOfParent ?finalSpouse WHERE {
  # Step 1: Find spouse of Princess Caroline-Mathilde of Denmark
  ?carolineMathilde rdfs:label ""Princess Caroline-Mathilde of Denmark""@en .
  ?carolineMathilde dbo:spouse ?spouseOfCarolineMathilde .

  # Step 2: Find child of that spouse who is royalty
  ?spouseOfCarolineMathilde dbo:child ?childOfSpouse .
  FILTER EXISTS { ?childOfSpouse rdfs:label ?labelChild . FILTER regex(?labelChild, ""Royal"", ""i"") }

  # Step 3: Determine the parent of Alexandrine of Mecklenburg-Schwerin
  ?alexandrine rdfs:label ""Alexandrine of Mecklenburg-Schwerin""@en .
  ?parentOfAlexandrine dbo:child ?alexandrine .

  # Step 4: Identify child of that parent who is royalty
  ?parentOfAlexandrine dbo:child ?childOfParent .
  FILTER EXISTS { ?childOfParent rdfs:label ?labelChild . FILTER regex(?labelChild, ""Royal"", ""i"") }

  # Step 5: Find the spouse of the child from step 2
  ?childOfSpouse dbo:spouse ?finalSpouse .
}
```",4,6,5,3,2,3,3,71,0,0,1,0,0.0,0
93,2,train,Give me the headquarter of Clam Cove Pictograph Site.,SELECT ?result WHERE { <http://dbpedia.org/resource/Clam_Cove_Pictograph_Site> <http://dbpedia.org/ontology/location> ?result . },"```sparql
SELECT ?headquarter WHERE {
  ?site rdfs:label ""Clam Cove Pictograph Site""@en .
  OPTIONAL { ?site dbo:location ?place . }
  OPTIONAL { ?place dbo:headquarter ?headquarter . }
}
```",1,1,2,1,1,3,2,20,0,0,1,0,0.0,0
465,26,train,"Give me the spouse of the child, that is a royalty, of the parent of Elizabeth of Austria (1526–1545).",SELECT ?result WHERE { ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v1 <http://dbpedia.org/ontology/child> ?v2 . ?result <http://dbpedia.org/ontology/spouse> ?v2 . ?v1 <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Elizabeth_of_Austria_(1526–1545)> . },"```sparql
SELECT ?spouse WHERE {
  # Identify Elizabeth of Austria (1526–1545)
  ?elizabeth a dbo:Person ;
             foaf:name ""Elizabeth of Austria"" ;
             dbo:birthYear ?birthYear ;
             dbo:deathYear ?deathYear .
  
  FILTER(?birthYear = 1526 && ?deathYear = 1545)

  # Find her parent(s)
  ?parent dbo:child ?elizabeth .

  # For each parent, find their children who are royalty
  ?royalChild dbo:parent ?parent ;
              a dbo:RoyalFamilyMember .

  # Identify the spouse of that royal child
  ?royalChild dbo:spouse ?spouse .
}
```",3,4,4,3,1,3,3,71,0,0,7,0,0.0,0
456,20,train,Give me the spouse of Danielle Spencer (Australian actress) and professional in the alter ego of The Shadow.,SELECT ?result WHERE { ?result <http://dbpedia.org/property/occupation> ?v2 . <http://dbpedia.org/resource/Danielle_Spencer_(Australian_actress)> <http://dbpedia.org/ontology/spouse> ?result . <http://dbpedia.org/resource/The_Shadow> <http://dbpedia.org/property/alterEgo> ?v2 . },"```sparql
# Query for Danielle Spencer's spouse
SELECT ?spouse WHERE {
  ?person dbo:occupation dbr/Australian_actress .
  ?person foaf:name ""Danielle Spencer""@en .
  ?person dbo:spouse ?spouse .
}

UNION

# Query for the professional associated with The Shadow
SELECT ?professional WHERE {
  ?alias foaf:name ""The Shadow""@en .
  ?alias dbo:alsoKnownAs ?realName .
  ?realName dbo:profession ?professional .
}
```",3,3,4,2,2,3,3,71,0,0,1,0,0.0,0
274,15,train,"Give me the band member of the person born, that is a musical artist, as John Birks Gillespie and associated musical artist of Cecil Taylor.","SELECT ?result WHERE { <http://dbpedia.org/resource/Cecil_Taylor> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?v1 <http://dbpedia.org/property/birthName> ""John Birks Gillespie""@en . ?result <http://dbpedia.org/ontology/associatedMusicalArtist> ?v1 . }","```sparql
SELECT ?bandMemberDizzyGillespie ?associatedArtistCecilTaylor WHERE {
  # Find band members associated with Dizzy Gillespie
  ?dizzyGillespie dbo:birthName ""John Birks Gillespie""@en .
  ?dizzyGillespie a dbo:MusicalArtist .

  OPTIONAL {
    ?bandMemberDizzyGillespie dbo:member ?dizzyGillespie .
    ?bandMemberDizzyGillespie a dbo:MusicalArtist .
  }

  # Find associated musical artists of Cecil Taylor
  ?cecilTaylor dbo:birthName ""Cecil Taylor""@en .
  ?cecilTaylor a dbo:MusicalArtist .

  OPTIONAL {
    ?associatedArtistCecilTaylor dbo:collaboratorOf ?cecilTaylor .
    ?associatedArtistCecilTaylor a dbo:MusicalArtist .
  }
}
```",3,4,4,2,2,2,3,28,0,0,1,0,0.0,0
456,0,train,Give me the spouse of Danielle Spencer (Australian actress).,SELECT ?result WHERE { <http://dbpedia.org/resource/Danielle_Spencer_(Australian_actress)> <http://dbpedia.org/ontology/spouse> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?spouse WHERE {
  ?person a dbo:Actor ;
          foaf:name ""Danielle Spencer""@en .
  OPTIONAL { ?person dbo:spouse ?spouse . }
}
```",1,1,2,1,1,3,3,71,0,0,1,0,0.0,0
933,2,train,Give me the band of The Ramong Sound.,SELECT ?result WHERE { <http://dbpedia.org/resource/The_Ramong_Sound> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?band WHERE {
  ?ramones a dbo:Band ;
           foaf:name ""The Ramones""@en .
}
```",1,1,2,1,1,3,3,71,0,0,4,0,0.0,0
36,17,train,Give me the person born as Ayo Makun and person born in the birth year of Deanne Bray.,"SELECT ?result WHERE { <http://dbpedia.org/resource/Deanne_Bray> <http://dbpedia.org/ontology/birthYear> ?v2 . ?result <http://dbpedia.org/property/birthName> ""Ayo Makun""@en . ?result <http://dbpedia.org/ontology/birthYear> ?v2 . }","```sparql
# Query to find the person born as Ayo Makun
SELECT ?person WHERE {
  ?person dbo:birthName ""Ayo Makun""@en .
}

# Query to find the birth year of Deanne Bray
SELECT ?birthYear WHERE {
  dbpedia:Deanne_Bray dbo:birthDate ?date .
  BIND(YEAR(?date) AS ?birthYear)
}

# Assuming we have obtained the birth year from the above query, replace <YEAR> with that value.
# Query to find persons born in the same year as Deanne Bray
SELECT ?person WHERE {
  ?person dbo:birthDate ?date .
  FILTER (YEAR(?date) = <YEAR>)
}
```",3,3,4,2,2,2,3,28,0,0,1,0,0.0,0
417,37,train,"Give me the child of the father of the leader, that is a royalty, of Colony of Greenland and child of Alexandrine of Mecklenburg-Schwerin.",SELECT ?result WHERE { <http://dbpedia.org/resource/Colony_of_Greenland> <http://dbpedia.org/property/leader> ?v0 . ?result <http://dbpedia.org/property/father> ?v3 . ?result <http://dbpedia.org/ontology/parent> <http://dbpedia.org/resource/Alexandrine_of_Mecklenburg-Schwerin> . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v0 <http://dbpedia.org/property/father> ?v3 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?child WHERE {
  # Step 1: Identify the leader of the Colony of Greenland
  ?leader dbo:country dbr:Greenland .
  
  # Step 2: Determine the father of this leader
  ?father dbo:child ?leader .

  # Step 3: Find the child of this father who is royalty
  ?child dbo:parent ?father ;
         a dbo:Monarch .

  # Step 4: Identify Alexandrine of Mecklenburg-Schwerin and her child
  dbr:Alexandrine_of_Mecklenburg-Schwerin dbo:spouse ?husband .
  ?husband dbo:child ?alexChild .

  # Step 5: Cross-reference both children
  FILTER (?child = ?alexChild)
}
```",4,5,5,3,2,3,3,71,0,0,2,0,0.0,0
976,18,train,Give me the office of Naci Bostancı and office of Meral Akşener and office of Mustafa Şentop.,SELECT ?result WHERE { <http://dbpedia.org/resource/Naci_Bostancı> <http://dbpedia.org/property/office> ?result . <http://dbpedia.org/resource/Mustafa_Şentop> <http://dbpedia.org/property/office> ?result . <http://dbpedia.org/resource/Meral_Akşener> <http://dbpedia.org/property/office> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>

SELECT ?person ?personLabel ?office ?officeLabel WHERE {
  VALUES ?person { 
    dbpedia:Naci_Bostancı 
    dbpedia:Meral_Akşener 
    dbpedia:Mustafa_Şentop 
  }
  
  ?person rdfs:label ?personLabel .
  OPTIONAL { ?person dbo:office ?office . }
  OPTIONAL { ?office rdfs:label ?officeLabel . }
  
  FILTER (lang(?personLabel) = 'en')
  FILTER (lang(?officeLabel) = 'en')
}
ORDER BY ?person
```",3,3,4,1,3,3,3,71,0,0,1,0,0.0,0
216,33,train,"Give me the player in Igor Bišćan and player in the coach, that is a soccer player and a sports manager and a soccer manager, of the player, that is an organisation and a sports club and a soccer club, in Džemal Berberović.",SELECT ?result WHERE { ?v0 <http://dbpedia.org/ontology/coach> ?v3 . <http://dbpedia.org/resource/Igor_Bišćan> <http://dbpedia.org/ontology/team> ?result . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerManager>. ?v3 <http://dbpedia.org/ontology/team> ?result . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerClub>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. <http://dbpedia.org/resource/Džemal_Berberović> <http://dbpedia.org/ontology/team> ?v0 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsManager>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsClub>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerPlayer>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?player ?coach WHERE {
  # Find the sports club associated with Džemal Berberović
  dbr:Džemal_Berberović dbo:playsFor ?club .
  
  # Ensure the club is a soccer club and an organization
  ?club rdf:type dbo:SoccerClub ;
        rdf:type dbo:Organization .

  # Find players who are both soccer players, sports managers, and soccer managers
  ?player rdf:type dbo:SoccerPlayer ;
          rdf:type dbo:SportsManager ;
          rdf:type dbo:SoccerManager ;
          dbo:playsFor ?club .
  
  # Specifically find Igor Bišćan among these players
  OPTIONAL { ?player dbr:Igor_Bišćan . }

  # Find coaches who are both soccer players, sports managers, and soccer managers
  ?coach rdf:type dbo:SoccerPlayer ;
         rdf:type dbo:SportsManager ;
         rdf:type dbo:SoccerManager ;
         dbo:managerOf ?club .
}
```",4,10,5,3,2,3,3,71,0,0,3,0,0.0,0
5,2,train,Give me the award of Renata Adler.,SELECT ?result WHERE { <http://dbpedia.org/resource/Renata_Adler> <http://dbpedia.org/property/awards> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?award WHERE {
  ?person dbo:givenName ""Renata"" .
  ?person dbo:familyName ""Adler"" .
  ?person dbo:award ?award .
}
```",1,1,2,1,1,3,2,20,0,0,1,0,0.0,0
443,13,train,Give me the birthplace of Ulf Lundell and landmark at elevation of the award of William Shepherd.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/elevation> ?v1 . <http://dbpedia.org/resource/Ulf_Lundell> <http://dbpedia.org/ontology/birthPlace> ?result . <http://dbpedia.org/resource/William_Shepherd> <http://dbpedia.org/property/awards> ?v1 . },"```sparql
# Query 1: Birthplace of Ulf Lundell
SELECT ?birthPlace WHERE {
    dbpedia:Ulf_Lundell dbo:birthPlace ?birthPlace .
}

# Query 2: Landmark at Elevation of William Shepherd's Award
SELECT ?landmark WHERE {
    # Find the award given to William Shepherd
    dbpedia:William_Shepherd dbo:award ?award .

    # Find a landmark with an elevation equal to the award number/value
    ?landmark geo:elevation ?elevation .
    FILTER (?elevation = ?award)
}
```",3,3,4,2,2,2,3,28,0,0,1,0,0.0,0
122,2,train,Who is the band of Gift of Gab (rapper)?,SELECT ?result WHERE { <http://dbpedia.org/resource/Gift_of_Gab_(rapper)> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . },"```sparql
SELECT ?band WHERE {
  ?person foaf:name ""Gift of Gab""@en .
  ?person dbo:memberOfBand ?band .
}
```",1,1,2,1,1,2,2,9,0,0,4,0,0.0,0
212,6,train,Give me the birthplace of the professional in .,"SELECT ?result WHERE { ?v0 <http://dbpedia.org/ontology/birthPlace> ?result . ?v0 <http://dbpedia.org/property/occupation> """"@en . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?birthPlace WHERE {
  ?person a dbo:Person .
  ?person foaf:name ""Professional Name""@en .  # Replace ""Professional Name"" with the actual name of the professional
  ?person dbo:birthPlace ?birthPlace .
}
```",2,2,3,2,1,2,2,9,0,0,13346,0,0.0,0
965,24,train,"Give me the parent of George Mountbatten, 2nd Marquess of Milford Haven and parent of the child, that is a royalty, of Prince Louis of Battenberg.","SELECT ?result WHERE { ?v2 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Prince_Louis_of_Battenberg> . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. <http://dbpedia.org/resource/George_Mountbatten,_2nd_Marquess_of_Milford_Haven> <http://dbpedia.org/ontology/parent> ?result . ?v2 <http://dbpedia.org/ontology/parent> ?result . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?parent WHERE {
  # George Mountbatten, 2nd Marquess of Milford Haven (Prince Louis of Battenberg)
  dbr:George_Mountbatten,_2nd_Marquess_of_Milford_Haven dbo:father dbr:Louis_of_Battenberg .
  
  # Prince Andrew of Greece and Denmark
  dbr:Andrew_of_Greece_and_Denmark dbo:father dbr:Louis_of_Battenberg .

  # Find the mother (Princess Victoria of Hesse and by Rhine)
  dbr:Louis_of_Battenberg dbo:mother ?parent .
  
  FILTER EXISTS {
    ?child dbo:mother ?parent .
    VALUES ?child {dbr:George_Mountbatten,_2nd_Marquess_of_Milford_Haven dbr:Andrew_of_Greece_and_Denmark}
  }
}
```",3,4,4,2,2,3,3,71,0,0,2,0,0.0,0
5,11,train,"Give me the birthplace of the person born, that is a politician, as  and entity in Canada.","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Canada> . ?v0 <http://dbpedia.org/ontology/birthPlace> ?result . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v0 <http://dbpedia.org/property/birthName> """"@en . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?person ?birthPlace WHERE {
  ?person a dbo:Politician ;
          dbo:nationality dbr:Canada .
  OPTIONAL { ?person dbo:birthPlace ?birthPlace . }
}
LIMIT 1
```",3,4,4,2,2,3,2,20,0,2,2,0.0,0.0,0
459,8,train,"Give me the governor of the death place, that is a settlement, of Cliff Roquemore.",SELECT ?result WHERE { ?v1 <http://dbpedia.org/property/governor> ?result . <http://dbpedia.org/resource/Cliff_Roquemore> <http://dbpedia.org/ontology/deathPlace> ?v1 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?governor WHERE {
  # Identify Cliff Roquemore's death place
  dbr:Cliff_Roquemore dbo:deathPlace ?deathPlace .

  # Ensure the death place is a settlement
  ?deathPlace rdf:type dbo:Settlement .

  # Find the governor of this settlement
  OPTIONAL { 
    ?deathPlace dbo:headOfGovernment ?governor .
  }
}
```",2,3,3,2,1,2,3,28,0,0,2,0,0.0,0
232,0,train,Give me the artistic movement of Ella Cheever Thayer.,SELECT ?result WHERE { <http://dbpedia.org/resource/Ella_Cheever_Thayer> <http://dbpedia.org/ontology/movement> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?movement WHERE {
  dbr:Ella_Cheever_Thayer dbo:artisticMovement ?movement .
}
```",1,1,2,1,1,2,2,9,0,0,1,0,0.0,0
98,14,train,Give me the region of Philippine Standard Time and birth place of the person born as Paolo Elito M. Ballesteros IV.,"SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/timeZone> <http://dbpedia.org/resource/Philippine_Standard_Time> . ?v2 <http://dbpedia.org/ontology/birthPlace> ?result . ?v2 <http://dbpedia.org/property/birthName> ""Paolo Elito M. Ballesteros IV""@en . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?region ?birthPlace WHERE {
  # Find the region associated with Philippine Standard Time
  OPTIONAL {
    dbr:Philippine_Standard_Time dbo:timeZoneRegion ?region .
  }
  
  # Find the birthplace of Paolo Elito M. Ballesteros IV
  OPTIONAL {
    dbr:Paolo_Elito_M._Ballesteros_IV dbo:birthPlace ?birthPlace .
  }
}
```",3,3,4,2,2,2,3,28,0,0,2,0,0.0,0
456,3,train,"Give me the movie, that is a work and a television show, with Ross Newton.",SELECT ?result WHERE { ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/TelevisionShow>. ?result <http://dbpedia.org/property/starring> <http://dbpedia.org/resource/Ross_Newton> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?work WHERE {
  ?actor foaf:name ""Ross Newton""@en.
  ?actor dbo:actedIn ?work.
  ?work a ?type1, ?type2.
  FILTER(?type1 = dbo:Film || ?type1 = dbo:Movie).
  FILTER(?type2 = dbo:TelevisionShow || ?type2 = dbo:TVSeries).
}
```",1,3,2,1,1,3,3,71,0,0,2,0,0.0,0
274,9,train,Give me the associated musical artist of Cecil Taylor and professional in .,"SELECT ?result WHERE { ?result <http://dbpedia.org/property/occupation> """"@en . <http://dbpedia.org/resource/Cecil_Taylor> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?artist WHERE {
  VALUES ?cecil_taylor { dbr:Cecil_Taylor }
  ?association dbo:associatedWith ?cecil_taylor .
  ?association dbo:associatedWith ?artist .
  FILTER(?artist != ?cecil_taylor)
}
```",2,2,3,1,2,2,3,28,0,0,1,0,0.0,0
645,32,train,"Give me the military force of the force, that is an event and a military conflict and a societal event, of Francisco Largo Caballero and commander in the force of Carlos Asensio Cabanillas.",SELECT ?result WHERE { ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?result <http://dbpedia.org/ontology/battle> ?v3 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?v1 <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Carlos_Asensio_Cabanillas> . ?v3 <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Francisco_Largo_Caballero> . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?v1 <http://dbpedia.org/ontology/commander> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?militaryForce WHERE {
  # Francisco Largo Caballero's association with a military force
  OPTIONAL { 
    dbr:Francisco_Largo_Caballero dbo:militaryConflict ?conflict .
    ?conflict dbo:participatingMilitaryUnit ?militaryForce .
  }
  
  # Carlos Asensio Cabanillas' association with a military force
  OPTIONAL {
    dbr:Carlos_Asensio_Cabanillas dbo:militaryConflict ?conflict .
    ?conflict dbo:participatingMilitaryUnit ?militaryForce .
  }

  # Filter for the Spanish Civil War as the event, conflict, and societal event
  FILTER(?conflict = dbr:Spanish_Civil_War)

  # Ensure the military force is related to both individuals
  VALUES ?individual {dbr:Francisco_Largo_Caballero dbr:Carlos_Asensio_Cabanillas}
  ?individual dbo:militaryConflict ?conflict .
  ?conflict dbo:participatingMilitaryUnit ?militaryForce .

  # Ensure the military force is a recognized entity
  FILTER(STRSTARTS(STR(?militaryForce), ""http://dbpedia.org/resource/""))
}
```",4,7,5,2,2,3,3,71,0,0,23,0,0.0,0
18,13,train,Give me the professional in the award of Ana María Sánchez de Ríos and parent of Liza Huber.,SELECT ?result WHERE { ?result <http://dbpedia.org/property/occupation> ?v0 . ?result <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Liza_Huber> . <http://dbpedia.org/resource/Ana_María_Sánchez_de_Ríos> <http://dbpedia.org/property/awards> ?v0 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?professional WHERE {
  # Find the award associated with Ana María Sánchez de Ríos
  dbr:Ana_María_Sánchez_de_Ríos dbo:award ?award .

  # Find the parent of Liza Huber
  dbr:Liza_Huber dbo:parent ?parent .

  # Match the professional who is both the recipient of the award and the parent
  ?professional dbo:award ?award .
  ?professional dbo:parent ?parent .
}
```",3,3,4,2,2,2,3,28,0,0,1,0,0.0,0
93,0,train,Give me the capital of Alaska.,SELECT ?result WHERE { <http://dbpedia.org/resource/Alaska> <http://dbpedia.org/ontology/capital> ?result . },"```sparql
SELECT ?capital WHERE {
  dbpedia:Alaska dbo:capital ?capital .
}
```",1,1,2,1,1,3,2,20,0,0,2,0,0.0,0
442,2,train,"Give me the work of Roosevelt, Theodore.","SELECT ?result WHERE { ?result <http://dbpedia.org/property/author> ""Roosevelt, Theodore""@en . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?work WHERE {
  VALUES ?theodoreRoosevelt { dbr:Theodore_Roosevelt }
  ?theodoreRoosevelt dbo:work ?work .
}
```",1,1,2,1,1,2,2,9,0,0,1,0,0.0,0
579,3,train,"Give me the residence, that is English and a settlement, of Alan Clyne.",SELECT ?result WHERE { <http://dbpedia.org/resource/Alan_Clyne> <http://dbpedia.org/property/residence> ?result . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. ?result <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/United_Kingdom>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?residence WHERE {
  ?person dbo:name ""Alan Clyne""@en.
  ?person dbo:residence ?residence.
  
  ?residence a dbo:Settlement .
  ?residence dbo:country dbr:England .
}
```",1,3,2,1,1,3,2,20,0,0,1,0,0.0,0
839,35,train,"Give me the band of the person born, that is a musical artist, as Kevin Richard Russell and band of the band, that is a musical artist, of Charlie Huhn.","SELECT ?result WHERE { ?v2 <http://dbpedia.org/property/birthName> ""Kevin Richard Russell""@en . ?v2 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . <http://dbpedia.org/resource/Charlie_Huhn> <http://dbpedia.org/ontology/associatedMusicalArtist> ?v1 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?result <http://dbpedia.org/ontology/bandMember> ?v1 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?person ?name ?bandName WHERE {
  # Find Kevin Richard Russell and his band
  { 
    ?person a dbo:MusicalArtist ;
            foaf:name ""Kevin Richard Russell""@en .
    OPTIONAL { ?person dbo:band ?band . }
    BIND(""Kevin Richard Russell"" AS ?name)
  } UNION
  # Find Charlie Huhn and his band
  {
    ?person a dbo:MusicalArtist ;
            foaf:name ""Charlie Huhn""@en .
    OPTIONAL { ?person dbo:band ?band . }
    BIND(""Charlie Huhn"" AS ?name)
  }

  OPTIONAL { ?band foaf:name ?bandName . }
}
```",4,6,5,2,2,3,3,71,0,2,1,0.0,0.0,0
124,39,train,"Give me the military force of the force, that is a societal event and a military conflict, of the person born on 1850-06-24 and military force of Battle of Tamai.","SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/commander> ?v0 . ?result <http://dbpedia.org/ontology/battle> ?v1 . ?v0 <http://dbpedia.org/ontology/birthDate> ""1850-06-24""^^<http://www.w3.org/2001/XMLSchema#date> . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?result <http://dbpedia.org/ontology/battle> <http://dbpedia.org/resource/Battle_of_Tamai> . }","```sparql
# Query to find the person born on 1850-06-24
SELECT ?person ?birthDate WHERE {
  ?person dbo:birthDate ?birthDate .
  FILTER (YEAR(?birthDate) = 1850 && MONTH(?birthDate) = 6 && DAY(?birthDate) = 24)
}

# Query to find the military force associated with Horatio Herbert Kitchener
SELECT ?militaryForce WHERE {
  ?kitchener dbo:occupation ""Military officer""@en .
  ?kitchener foaf:name ""Horatio Herbert Kitchener""@en .
  ?kitchener dbo:militaryService ?militaryForce .
}

# Query to find the military forces involved in the Battle of Tamai
SELECT ?battle ?involvedForces WHERE {
  ?battle dbo:wikiPageID ""Battle_of_Tamai""@en .
  ?battle dbo:participatingMilitaryUnit ?involvedForces .
}
```",4,6,5,3,2,3,3,71,0,0,4,0,0.0,0
216,16,train,Give me the administration of the designer of Woolfe: The Red Hood Diaries and office of Tim Nicholls.,SELECT ?result WHERE { ?result <http://dbpedia.org/property/leader> ?v2 . <http://dbpedia.org/resource/Tim_Nicholls> <http://dbpedia.org/property/office> ?result . <http://dbpedia.org/resource/Woolfe:_The_Red_Hood_Diaries> <http://dbpedia.org/property/designer> ?v2 . },"```sparql
# Query for the administration of the designer of Woolfe: The Red Hood Diaries
SELECT ?designer ?organization WHERE {
  ?game dcterms:title ""Woolfe: The Red Hood Diaries""@en .
  ?game dbo:developer ?studio .
  ?studio dbo:employee ?designer .
  ?designer foaf:name ?name .
  OPTIONAL { ?designer dbo:worksFor ?organization . }
  FILTER(CONTAINS(LCASE(?name), ""designer""))
}
```

```sparql
# Query for the office of Tim Nicholls
SELECT ?office WHERE {
  ?person foaf:name ""Tim Nicholls""@en .
  ?person dbo:positionHeld ?office .
}
```",3,3,4,2,2,2,3,28,0,0,1,0,0.0,0
579,0,train,Give me the native of Edinburgh.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Edinburgh> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?person WHERE {
  ?person dbo:birthPlace dbr:Edinburgh .
}
```",1,1,2,1,1,3,2,20,1711,0,0,1.0,1.0,1.0
465,28,train,Give me the successor of the child of Alfonso I d'Este and spouse of Archduchess Barbara of Austria and successor of Renée of France.,SELECT ?result WHERE { ?v1 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Alfonso_I_d'Este> . ?result <http://dbpedia.org/ontology/spouse> <http://dbpedia.org/resource/Archduchess_Barbara_of_Austria> . <http://dbpedia.org/resource/Renée_of_France> <http://dbpedia.org/ontology/successor> ?result . ?v1 <http://dbpedia.org/ontology/successor> ?result . },"```sparql
SELECT ?successor WHERE {
  wd:Q1234567 wdt:P136 wd:Q7890123 . # Leonora Gonzaga as Duchess of Mantua (spouse of Archduke Ferdinand II)
  wd:Q7890123 wdt:P26 wd:Q3456789 .   # Ferdinand II, Archduke of Austria
  wd:Q1234567 wdt:P22 wd:Q11121314 .  # Leonora Gonzaga's father is Alfonso I d'Este
  wd:Q11121314 wdt:P21 wd:Q15161718 . # Alfonso I d'Este's mother is Lucrezia Borgia
  wd:Q3456789 wdt:P136 wd:Q19283746 . # Ferdinand II as Archduke of Austria (spouse of Barbara)
  
  wd:Q11121314 wdt:P22 wd:Q15161719 . # Renée of France, Alfonso I's wife
  wd:Q15161719 wdt:P136 wd:Q19283747 . # Renée as Duchess of Ferrara
  
  wd:Q11121319 wdt:P136 wd:Q19283748 . # Ercole II d'Este as Duke of Ferrara (child of Alfonso I and Renée)
  
  wd:Q19283748 wdt:P57 ?successor .   # Successor of Ercole II d'Este
}
```",4,4,5,2,3,3,3,71,0,0,1,0,0.0,0
791,14,train,"Give me the father of the child, that is a royalty, of Emperor Takakura.",SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v1 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Emperor_Takakura> . ?v1 <http://dbpedia.org/property/father> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?child ?father WHERE {
  ?person dbo:spouse ?emperor .
  ?emperor rdfs:label ""Emperor Takakura""@en .
  ?person dbo:child ?child .
  OPTIONAL { ?child dbo:royalTitle ?title . }
  FILTER (LANG(?emperor) = 'en' && LANG(?person) = 'en')
}
```",2,3,3,2,1,3,3,71,0,0,1,0,0.0,0
826,26,train,"Give me the successor of the child, that is a royalty, of the reference, that is a royalty, to Louis I.","SELECT ?result WHERE { ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v2 <http://dbpedia.org/ontology/successor> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v1 <http://xmlns.com/foaf/0.1/name> ""Louis I""@en . ?v1 <http://dbpedia.org/ontology/child> ?v2 . }","```sparql
SELECT DISTINCT ?successor WHERE {
  # Step 1: Identify Louis I (assuming Louis I of Hungary for this example)
  ?louisI rdf:type dbo:Monarch ;
          foaf:name ""Louis I of Hungary""@en .

  # Step 2: Find the reference royalty (parent or predecessor)
  ?reference rdf:type dbo:Monarch ;
             dbo:child ?louisI .

  # Step 3: Identify the child royalty from this reference
  ?childRoyalty rdf:type dbo:Monarch ;
                dbo:child ?reference .

  # Step 4: Find the successor of this child royalty
  ?childRoyalty dbo:successor ?successor .
}
```",3,5,4,3,1,3,3,71,0,0,4,0,0.0,0
267,13,train,"Give me the coach of the player, that is a soccer club, in the manager of 2020–21 Tractor S.C. season.",SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerClub>. <http://dbpedia.org/resource/2020–21_Tractor_S.C._season> <http://dbpedia.org/ontology/manager> ?v0 . ?v1 <http://dbpedia.org/ontology/coach> ?result . ?v0 <http://dbpedia.org/ontology/team> ?v1 . },"```sparql
# Step 1: Find the coach of Tractor S.C. for the 2020-21 season
SELECT ?coach WHERE {
  ?team dcterms:title ""Tractor S.C.""@en .
  ?team dbo:season ""2020–21""@en ;
        dbo:manager ?coach .
}

# Step 2: Check if this coach is a manager of any soccer club
PREFIX dbp: <http://dbpedia.org/property/>
SELECT DISTINCT ?club WHERE {
  VALUES ?coach { ?coach1 } # Replace ?coach1 with the actual URI obtained from step 1

  ?coach dbo:managerOf ?club .
}
```",3,4,4,3,1,3,2,20,0,0,2,0,0.0,0
445,15,train,"Give me the residence, that is a country, of the resident, that is an athlete, of Great Britain.",SELECT ?result WHERE { ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. ?v1 <http://dbpedia.org/property/residence> ?result . ?v1 <http://dbpedia.org/property/residence> <http://dbpedia.org/resource/Great_Britain> . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Athlete>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?athlete ?residenceCountry WHERE {
  ?athlete a dbo:Athlete .
  ?athlete dbo:nationality dbr:United_Kingdom .
  ?athlete dbo:residence ?residence .
  ?residence a dbo:Country .
  BIND(?residence AS ?residenceCountry)
}
```",2,4,3,2,1,3,3,71,1,20,1,0.047619047619047616,0.5,0.08695652173913042
865,17,train,Who is the child of the father of Abul Maal Abdul Muhith?,SELECT ?result WHERE { ?result <http://dbpedia.org/property/father> ?v1 . <http://dbpedia.org/resource/Abul_Maal_Abdul_Muhith> <http://dbpedia.org/property/father> ?v1 . },"```sparql
# Step 1: Find the father of Abul Maal Abdul Muhith
SELECT ?father WHERE {
  wd:Q123456 dbo:father ?father .
}

# Step 2: Use the result from step 1 to find the children of the identified father
PREFIX dbo: <http://dbpedia.org/ontology/>

SELECT ?child WHERE {
  ?father dbo:child ?child .
}
```

Note: Replace `wd:Q123456` with the actual DBpedia resource identifier for Abul Maal Abdul Muhith. You would need to look up this identifier in DBpedia or use a query to find it if you don't have it.",2,2,3,2,1,3,3,71,0,0,3,0,0.0,0
573,11,train,"Give me the person decedent at the administration, that is a region, of Charlie Baker.","SELECT ?result WHERE { ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Region>. ?result <http://dbpedia.org/ontology/deathPlace> ?v0 . ?v0 <http://dbpedia.org/property/governor> ""Charlie Baker""@en . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX xsd: <http://www.w3.org/2001/XMLSchema#>

SELECT ?decedent ?region WHERE {
  # Identify Charlie Baker as the Governor of Massachusetts
  dbr:Charlie_Baker dbo:officeHolder dbr:Governor_of_Massachusetts.
  
  # Find individuals who were decedents during or before his term (2015-2023)
  ?decedent a dbo:Person;
            dbo:dateOfDeath ?deathDate .
  FILTER (?deathDate <= ""2023-01-01""^^xsd:date && ?deathDate >= ""2015-01-01""^^xsd:date)

  # Ensure these individuals have an association with a region
  ?decedent dbo:birthPlace ?region.
}
```",2,3,3,2,1,3,3,71,0,0,968,0,0.0,0
965,18,train,"Give me the parent of Louise Mountbatten and parent of George Mountbatten, 2nd Marquess of Milford Haven and spouse of Prince Louis of Battenberg.","SELECT ?result WHERE { <http://dbpedia.org/resource/George_Mountbatten,_2nd_Marquess_of_Milford_Haven> <http://dbpedia.org/ontology/parent> ?result . <http://dbpedia.org/resource/Louise_Mountbatten> <http://dbpedia.org/ontology/parent> ?result . ?result <http://dbpedia.org/ontology/spouse> <http://dbpedia.org/resource/Prince_Louis_of_Battenberg> . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT DISTINCT ?person ?parent1 ?parent2 ?spouse WHERE {
  # Louise Mountbatten's parents
  VALUES ?louise { dbp:Louise_Mountbatten }
  ?louise dbo:parent ?parent1 .
  
  # George Mountbatten, 2nd Marquess of Milford Haven's parents
  VALUES ?george { dbp:George_Mountbatten_2nd_Marquess_of_Milford_Haven }
  ?george dbo:parent ?parent2 .

  # Spouse of Prince Louis of Battenberg
  VALUES ?princeLouis { dbp:Prince_Louis_of_Battenberg }
  ?princeLouis dbo:spouse ?spouse .
}
```",3,3,4,1,3,3,3,71,0,0,1,0,0.0,0
773,22,train,"Give me the parent of the child, that is a royalty, of Louis the German and spouse of Louis the German.",SELECT ?result WHERE { <http://dbpedia.org/resource/Louis_the_German> <http://dbpedia.org/ontology/spouse> ?result . ?v1 <http://dbpedia.org/ontology/parent> ?result . ?v1 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Louis_the_German> . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?spouse WHERE {
  # Identify Louis the German
  VALUES ?louisTheGerman { dbr:Louis_the_German }

  # Find his children who are royalty
  ?child dbo:parent ?louisTheGerman .
  ?child dbo:title ?title .
  
  FILTER regex(?title, ""King|Queen|Prince|Princess"", ""i"") .

  # Get the spouse of this child
  ?child dbo:spouse ?spouse .
}
```",3,4,4,2,2,3,3,71,0,0,1,0,0.0,0
976,8,train,Who is the person born as Mehmet Naci Bostancı?,"SELECT ?result WHERE { ?result <http://dbpedia.org/property/birthName> ""Mehmet Naci Bostancı""@en . }","```sparql
PREFIX foaf: <http://xmlns.com/foaf/0.1/>
PREFIX schema: <http://schema.org/>

SELECT ?person ?name WHERE {
  ?person a foaf:Person .
  ?person foaf:givenName ""Mehmet"" .
  ?person foaf:familyName ""Bostancı"" .
  OPTIONAL { 
    ?person schema:birthName ""Mehmet Naci Bostancı""@en .
  }
  ?person foaf:name ?name
}
```",1,1,2,1,1,3,3,71,0,0,1,0,0.0,0
124,21,train,"Give me the commander in the war, that is a societal event and a military conflict, of A Field Battery, Royal Australian Artillery and military force of Battle of Atbara.","SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/commander> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. <http://dbpedia.org/resource/A_Field_Battery,_Royal_Australian_Artillery> <http://dbpedia.org/ontology/battle> ?v1 . ?result <http://dbpedia.org/ontology/battle> <http://dbpedia.org/resource/Battle_of_Atbara> . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?commander WHERE {
  # Identify the Battle of Atbara as a societal event and military conflict
  dbr:Battle_of_Atbara dbo:type ?type .
  
  FILTER(?type IN (dbo:MilitaryConflict, dbo:SocietalEvent))
  
  # Find the military forces involved in the battle
  OPTIONAL { 
    ?battleParticipant dbo:participatedIn dbr:Battle_of_Atbara .
    ?battleParticipant dbo:unitName ""A Field Battery, Royal Australian Artillery""^^xsd:string .
    
    # Retrieve information about the commander of this unit during the battle
    ?battleParticipant dbo:commander ?commander .
  }
}
```",3,5,4,2,2,3,3,71,0,0,1,0,0.0,0
888,14,train,Give me the awardee of the award of the commander in 2022 Ukrainian eastern counteroffensive.,SELECT ?result WHERE { <http://dbpedia.org/resource/2022_Ukrainian_eastern_counteroffensive> <http://dbpedia.org/ontology/commander> ?v2 . ?result <http://dbpedia.org/property/awards> ?v0 . ?v2 <http://dbpedia.org/property/awards> ?v0 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?recipient WHERE {
  ?award dbo:rank ""Commander"" .
  ?award dbo:awardedBy dbr:Ukraine .
  ?award dbo:dateAwarded ?date .
  FILTER (YEAR(?date) = 2022)
  ?award dbo:recipient ?recipient .
  ?recipient dbo:description ?description .
  FILTER CONTAINS(LCASE(?description), ""ukrainian eastern counteroffensive"")
}
```",3,3,4,3,1,3,2,20,0,0,44,0,0.0,0
47,5,train,"Give me the award, that is an award, of Mantu Ghosh.",SELECT ?result WHERE { ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Award>. <http://dbpedia.org/resource/Mantu_Ghosh> <http://dbpedia.org/property/awards> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?award WHERE {
  ?person a dbo:Person ;
          foaf:name ""Mantu Ghosh""@en .
  OPTIONAL { ?person dbo:award ?award . }
}
```",1,2,2,1,1,3,3,71,2,0,0,1.0,1.0,1.0
917,6,train,Who is the father of Keʻelikōlani?,SELECT ?result WHERE { <http://dbpedia.org/resource/Keʻelikōlani> <http://dbpedia.org/property/father> ?result . },"```sparql
SELECT ?father WHERE {
  ?person dbo:name ""Keʻelikōlani""@en .
  ?person dbo:father ?father .
}
```",1,1,2,1,1,3,3,71,0,0,1,0,0.0,0
98,2,train,Who is the successor of Emperor Nijō?,SELECT ?result WHERE { <http://dbpedia.org/resource/Emperor_Nijō> <http://dbpedia.org/ontology/successor> ?result . },"```sparql
SELECT ?successor WHERE {
  dbpedia:Emperor_Nijo dbo:successor ?successor .
}
```",1,1,2,1,1,2,2,9,0,0,1,0,0.0,0
839,8,train,"Give me the band, that is a musical artist, of Charlie Huhn.",SELECT ?result WHERE { ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. <http://dbpedia.org/resource/Charlie_Huhn> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?band WHERE {
  dbr:Charlie_Huhn dbo:musicalArtist ?artist .
  ?artist dbo:band ?band .
}
```",1,2,2,1,1,3,3,71,0,0,4,0,0.0,0
365,2,train,"Give me the commander, that is an office holder, in Ukrainian–Soviet War.",SELECT ?result WHERE { <http://dbpedia.org/resource/Ukrainian–Soviet_War> <http://dbpedia.org/ontology/commander> ?result . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?person ?name WHERE {
  # Find commanders involved in the Ukrainian–Soviet War
  { 
    ?event dbo:commander ?person .
    ?person rdfs:label ?name .
    FILTER(CONTAINS(LCASE(?name), ""ukrainian-soviet war"") || CONTAINS(LCASE(?name), ""ukraine soviet war""))
  }
  
  UNION
  
  {
    # Find office holders during the Ukrainian–Soviet War
    ?person dbo:officeHolder ?office .
    ?office rdfs:label ?officeLabel .
    FILTER(CONTAINS(LCASE(?officeLabel), ""soviet"") || CONTAINS(LCASE(?officeLabel), ""ukrainian""))
    ?person rdfs:label ?name .
  }
  
  # Filter for relevant time period
  OPTIONAL { 
    ?event dbo:date ?date .
    FILTER(year(?date) >= 1917 && year(?date) <= 1921)
  }

  # Ensure the person is a human
  ?person rdf:type dbo:Person .

  # Limit results to known figures
  FILTER(CONTAINS(LCASE(?name), ""lenin"") || CONTAINS(LCASE(?name), ""petliura""))
}
ORDER BY ?name
LIMIT 10
```",1,2,2,1,1,3,2,20,0,0,5,0,0.0,0
93,8,train,Give me the death place of the governor of Bob Bartlett.,SELECT ?result WHERE { <http://dbpedia.org/resource/Bob_Bartlett> <http://dbpedia.org/property/governor> ?v0 . ?v0 <http://dbpedia.org/ontology/deathPlace> ?result . },"```sparql
SELECT ?deathPlace WHERE {
  wd:Q12345 dbo:deathPlace ?deathPlace .
}
```

In this SPARQL query, `wd:Q12345` should be replaced with the actual DBpedia resource identifier for Bob Bartlett. This identifier can typically be found by searching DBpedia or using a service like Wikidata to find the correct Q-number associated with him.",2,2,3,2,1,3,2,20,0,0,4,0,0.0,0
976,17,train,Who is the person born as the birth name of Naci Bostancı?,SELECT ?result WHERE { ?result <http://dbpedia.org/property/birthName> ?v0 . <http://dbpedia.org/resource/Naci_Bostancı> <http://dbpedia.org/property/birthName> ?v0 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?person ?fullName WHERE {
  ?person dbp:birthName ""Naci Bostancı"" .
  ?person dbo:fullName ?fullName .
}
```",2,2,3,2,1,3,3,71,0,0,1,0,0.0,0
935,5,train,Give me the office of Sanaullah Khan Zehri.,SELECT ?result WHERE { <http://dbpedia.org/resource/Sanaullah_Khan_Zehri> <http://dbpedia.org/property/office> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?office WHERE {
  dbr:Sanaullah_Khan_Zehri dbo:office ?office .
}
```",1,1,2,1,1,3,2,20,0,0,5,0,0.0,0
445,7,train,Who is the commander in Battle of Saint-Mihiel?,SELECT ?result WHERE { <http://dbpedia.org/resource/Battle_of_Saint-Mihiel> <http://dbpedia.org/ontology/commander> ?result . },"```sparql
PREFIX dbp: <http://dbpedia.org/property/>
PREFIX dbo: <http://dbpedia.org/ontology/>

SELECT ?commander ?commanderLabel WHERE {
  ?battle a dbo:Battle ;
         rdfs:label ""Battle of Saint-Mihiel""@en .
  
  OPTIONAL { 
    ?battle dbp:commander ?commander .
    ?commander rdfs:label ?commanderLabel .
    FILTER(LANG(?commanderLabel) = 'en')
  }
}
```",1,1,2,1,1,3,3,71,0,0,13,0,0.0,0
417,35,train,"Give me the spouse of the parent, that is a royalty, of Count Ingolf of Rosenborg and child of the child, that is a royalty, of Frederick Francis III, Grand Duke of Mecklenburg-Schwerin.","SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v1 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Frederick_Francis_III,_Grand_Duke_of_Mecklenburg-Schwerin> . ?v2 <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Count_Ingolf_of_Rosenborg> . ?result <http://dbpedia.org/ontology/parent> ?v1 . ?result <http://dbpedia.org/ontology/spouse> ?v2 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT DISTINCT ?spouse ?grandchild WHERE {
  # Step 1: Find Count Ingolf of Rosenborg's parent
  ?countIngolf dbo:title ""Count"" ;
               dbo:parent ?parent .

  # Step 2: Check if the parent is royalty
  OPTIONAL { ?parent dbo:title ?title . FILTER(CONTAINS(LCASE(?title), ""royalty"")) }

  # Step 3: Find the spouse of the royal parent
  ?parent dbo:spouse ?spouse .

  # Step 4: Identify Frederick Francis III's child
  dbp:FrederickFrancisIII dbo:child ?child .

  # Step 5: Check if the child is royalty
  OPTIONAL { ?child dbo:title ?title2 . FILTER(CONTAINS(LCASE(?title2), ""royalty"")) }

  # Step 6: Find the grandchild of Frederick Francis III who is royalty
  ?child dbo:child ?grandchild .
  OPTIONAL { ?grandchild dbo:title ?title3 . FILTER(CONTAINS(LCASE(?title3), ""royalty"")) }
}
```",4,6,5,2,2,3,3,71,0,0,1,0,0.0,0
892,9,train,Give me the entity in Italy and landmark at elevation of 58.,"SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/elevation> ""58""^^<http://www.w3.org/2001/XMLSchema#integer> . ?result <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Italy> . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?landmark WHERE {
  ?landmark rdf:type dbo:Landmark .
  ?landmark dbo:elevation ""58""^^xsd:decimal .
  ?landmark dbo:country dbr:Italy .
}
```",2,2,3,1,2,3,3,71,0,0,11,0,0.0,0
865,10,train,Give me the native of British Raj and father of Shahla Khatun.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/British_Raj> . <http://dbpedia.org/resource/Shahla_Khatun> <http://dbpedia.org/property/father> ?result . },"```sparql
SELECT ?person WHERE {
  ?shahla dbo:father ?person .
  FILTER (str(?shahla) = ""Shahla_Khatun"") .

  OPTIONAL { ?person dbo:nationality ?nationality . }
  OPTIONAL { ?person dbo:birthPlace ?birthPlace . }

  # Check if the person is associated with British Raj
  OPTIONAL {
    ?place rdfs:label ?label .
    FILTER (CONTAINS(LCASE(?label), ""british raj"") || CONTAINS(LCASE(STR(?nationality)), ""india"") || CONTAINS(LCASE(STR(?birthPlace)), ""india""))
  }
}
```",2,2,3,1,2,3,3,71,0,0,1,0,0.0,0
955,6,train,Give me the band of Nate Albert and band of Johnny Rioux.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/bandMember> <http://dbpedia.org/resource/Nate_Albert> . ?result <http://dbpedia.org/ontology/bandMember> <http://dbpedia.org/resource/Johnny_Rioux> . },"```sparql
SELECT ?bandNateAlbert ?bandJohnnyRioux WHERE {
  ?nateAlbert dbo:birthName ""Nate Albert""@en .
  ?nateAlbert dbo:musicalArtist <http://dbpedia.org/resource/The_Format> .
  ?format dbo:name ?bandNateAlbert .

  ?johnnyRioux dbo:birthName ""Johnny Rioux""@en .
  ?johnnyRioux dbo:musicalArtist <http://dbpedia.org/resource/The_Front_Bottoms> .
  ?frontBottoms dbo:name ?bandJohnnyRioux .
}
```",2,2,3,1,2,3,2,20,0,0,1,0,0.0,0
987,2,train,Give me the entity in Montenegro.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Montenegro> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT DISTINCT ?entity ?name WHERE {
  ?entity (dbo:country|dbp:location) dbr:Montenegro .
  ?entity rdfs:label ?name .
  FILTER(LANG(?name) = 'en')
}
ORDER BY ?name
```",1,1,2,1,1,3,3,71,900,1302,9,0.4087193460490463,0.9900990099009901,0.5785920925747348
465,38,train,"Give me the successor of the child, that is a royalty, of Anne of Brittany and spouse of the child, that is a royalty, of Ferdinand I, Holy Roman Emperor.","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/spouse> ?v3 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v2 <http://dbpedia.org/ontology/successor> ?result . <http://dbpedia.org/resource/Ferdinand_I,_Holy_Roman_Emperor> <http://dbpedia.org/ontology/child> ?v3 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. <http://dbpedia.org/resource/Anne_of_Brittany> <http://dbpedia.org/ontology/child> ?v2 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?successor WHERE {
  # Anne of Brittany's children
  VALUES (?anneChild) { 
    dbr:Claude_of_France 
  }
  
  # Claude of France married Francis I of France
  ?claudesSpouse a dbo:Person ;
                dbo:spouse ?anneChild .

  # Child of Ferdinand I, Holy Roman Emperor (Anna of Austria)
  ?ferdinandChild a dbo:Person ;
                  dbo:child dbr:Ferdinand_I,_Holy_Roman_Emperor ;
                  dbo:spouse ?claudesSpouse .

  # Successor of Henry II of France
  ?henryII a dbo:Person ;
           dbo:parent ?anneChild, ?claudesSpouse ;
           dbo:succ ?successor .
}
```",4,6,5,2,2,3,3,71,0,0,1,0,0.0,0
715,10,train,Give me the leader of Ministry of the Air (Spain) and commander in Rif War.,SELECT ?result WHERE { <http://dbpedia.org/resource/Rif_War> <http://dbpedia.org/ontology/commander> ?result . <http://dbpedia.org/resource/Ministry_of_the_Air_(Spain)> <http://dbpedia.org/ontology/leader> ?result . },"```sparql
SELECT ?person ?role1Label ?role2Label WHERE {
  ?person dbo:positionHeld dbr:Ministry_of_the_Air_(Spain) ;
          dbo:commanderInRifWar ?rifWar .
  
  OPTIONAL { ?rifWar rdfs:label ?rifWarLabel . }
  
  SERVICE wikibase:label { bd:serviceParam wikibase:language ""[AUTO_LANGUAGE],en"". }

  ?person rdfs:label ?personLabel .

  FILTER(CONTAINS(LCASE(?personLabel), ""miguel cabanellas""))
}
```",2,2,3,1,2,3,3,71,0,0,1,0,0.0,0
987,6,train,Who is the actor of All for Free?,SELECT ?result WHERE { <http://dbpedia.org/resource/All_for_Free> <http://dbpedia.org/property/starring> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?actor ?actorLabel WHERE {
  VALUES ?movie { dbr:All_for_Free }
  ?movie dbo:starring ?actor .
  ?actor rdfs:label ?actorLabel .
  FILTER (lang(?actorLabel) = 'en')
}
```",1,1,2,1,1,3,3,71,8,8,0,0.5,1.0,0.6666666666666666
645,28,train,Give me the military force of Spanish Civil War and leader of Ministry of the Army (Spain) and commander in the force of Carlos Asensio Cabanillas.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/battle> <http://dbpedia.org/resource/Spanish_Civil_War> . ?v1 <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Carlos_Asensio_Cabanillas> . ?v1 <http://dbpedia.org/ontology/commander> ?result . <http://dbpedia.org/resource/Ministry_of_the_Army_(Spain)> <http://dbpedia.org/ontology/leader> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?militaryForce ?leaderOfArmy ?commanderRole
WHERE {
  # Find the military force involved in the Spanish Civil War
  ?militaryForce dbo:wikiPageWikiLink dbr:Spanish_Civil_War .
  
  # Find the leader of the Ministry of the Army (Spain) during the Spanish Civil War
  ?leaderOfArmy dbo:positionHeld dbr:Ministry_of_the_Army_(Spain) ;
               dbo:officeHolder dbr:Francisco_Franco .

  # Find Carlos Asensio Cabanillas and his role in the military force
  dbr:Carlos_Asensio_Cabanillas dbo:militaryCommander ?commanderRole .
  
  # Link the commander role to the military force
  ?commanderRole dbo:partOf ?militaryForce .
}
```",4,4,5,2,3,3,3,71,0,0,1,0,0.0,0
917,24,train,Give me the child of Kekūanāoʻa and child of the father of Keʻelikōlani.,"SELECT ?result WHERE { ?result <http://dbpedia.org/property/father> ""Kekūanāoʻa""@en . ?result <http://dbpedia.org/ontology/parent> ?v2 . <http://dbpedia.org/resource/Keʻelikōlani> <http://dbpedia.org/property/father> ?v2 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?child WHERE {
  # Find children of Kekūanāoʻa
  ?person dbo:parent dbr:Kekūanāoʻa .
  
  # Find father of Keʻelikōlani
  ?father dbo:child dbr:Keʻelikōlani .

  # Check if the person is both a child of Kekūanāoʻa and father of Keʻelikōlani
  FILTER (?person = ?father)
}
```",3,3,4,2,2,3,3,71,0,0,3,0,0.0,0
192,1,train,"Give me the child of Mary of Hungary, Queen of Naples.","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/parent> <http://dbpedia.org/resource/Mary_of_Hungary,_Queen_of_Naples> . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?child ?childLabel WHERE {
  VALUES ?mary { dbr:Maria_of_Hungary_(1371-1395) }
  ?mary dbo:child ?child .
  SERVICE wikibase:label { bd:serviceParam wikibase:language ""[AUTO_LANGUAGE],en"". }
}
```",1,1,2,1,1,3,2,20,0,0,3,0,0.0,0
582,3,train,"Give me the reference, that is a scientist, to Hirotaka Sugawara.","SELECT ?result WHERE { ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Scientist>. ?result <http://xmlns.com/foaf/0.1/name> ""Hirotaka Sugawara""@en . }","```sparql
PREFIX foaf: <http://xmlns.com/foaf/0.1/>
PREFIX dbo: <http://dbpedia.org/ontology/>

SELECT ?scientist WHERE {
  ?sugawara foaf:name ""Hirotaka Sugawara""@en .
  ?sugawara foaf:knows ?person .
  ?person dbo:occupation ?occupation .
  FILTER(CONTAINS(LCASE(?occupation), ""scientist""))
}
```",1,2,2,1,1,3,3,71,0,0,1,0,0.0,0
98,10,train,Give me the birth place of the person born as Paolo Elito M. Ballesteros IV.,"SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/birthPlace> ?result . ?v1 <http://dbpedia.org/property/birthName> ""Paolo Elito M. Ballesteros IV""@en . }","```sparql
SELECT ?birthPlace WHERE {
  ?person foaf:name ""Paolo Elito M. Ballesteros IV""@en .
  ?person dbo:birthPlace ?birthPlace .
}
```",2,2,3,2,1,2,3,28,0,0,2,0,0.0,0
935,10,train,"Give me the office of the native of Balochistan, Pakistan.","SELECT ?result WHERE { ?v0 <http://dbpedia.org/property/office> ?result . ?v0 <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Balochistan,_Pakistan> . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?office WHERE {
  dbr:Nawabzada_Nasrullah_Khan dbo:positionHeld ?office .
}
```",2,2,3,2,1,3,2,20,0,0,35,0,0.0,0
18,4,train,Who is the professional in Actress?,"SELECT ?result WHERE { ?result <http://dbpedia.org/property/occupation> ""Actress""@en . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT ?person ?name WHERE {
  ?person a dbo:Person .
  OPTIONAL { ?person foaf:name ?name . }
  ?person dbo:occupation dbo:Actress .
}
ORDER BY ?name
LIMIT 100
```",1,1,2,1,1,2,3,28,0,0,19241,0,0.0,0
236,9,train,"Give me the administration, that is an organisation, of the person decedent, that is a politician and an office holder, at Quincy, Massachusetts.","SELECT ?result WHERE { ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?v0 <http://dbpedia.org/ontology/deathPlace> <http://dbpedia.org/resource/Quincy,_Massachusetts> . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?result <http://dbpedia.org/property/leader> ?v0 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?administration WHERE {
  ?person a dbo:Politician ;
          dbo:officeHolderOf dbr:Boston ;
          dbo:birthPlace dbr:Quincy,_Massachusetts .
  ?person dbo:positionHeld ?position .
  ?position dbo:organization ?administration .
  
  FILTER(CONTAINS(LCASE(?person), ""josiah quincy iii""))
}
```",2,5,3,2,1,3,2,20,0,0,1,0,0.0,0
433,31,train,"Give me the associated musical artist of the person born, that is a musical artist and an artist, as the persona of Paul Chambers and associated musical artist of Bill Evans.",SELECT ?result WHERE { ?v0 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . <http://dbpedia.org/resource/Bill_Evans> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . <http://dbpedia.org/resource/Paul_Chambers> <http://xmlns.com/foaf/0.1/givenName> ?v1 . ?v0 <http://dbpedia.org/property/birthName> ?v1 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?commonArtist WHERE {
  # Find the musical artists associated with Paul Chambers
  ?paulChambers a dbo:MusicalArtist ;
                foaf:name ""Paul Chambers"" .
  
  ?paulChambers dbo:associatedBandOrMusicalGroup ?artist1 .

  # Find the musical artists associated with Bill Evans
  ?billEvans a dbo:MusicalArtist ;
             foaf:name ""Bill Evans"" .
  
  ?billEvans dbo:associatedBandOrMusicalGroup ?artist2 .

  # Find common artist between Paul Chambers and Bill Evans
  FILTER (?artist1 = ?artist2)
  BIND(?artist1 AS ?commonArtist)
}
```",4,6,5,3,2,3,3,71,0,0,2,0,0.0,0
579,6,train,Give me the native of Edinburgh and person born as Isobel Jane Miller Richard.,"SELECT ?result WHERE { ?result <http://dbpedia.org/property/birthName> ""Isobel Jane Miller Richard""@en . ?result <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Edinburgh> . }","```sparql
SELECT ?person1Label ?person2Label WHERE {
  # Find person native to Edinburgh
  ?person1 dbo:nativePlace dbr:Edinburgh .
  
  # Find person born as Isobel Jane Miller Richard
  ?person2 foaf:givenName ""Isobel"" ;
           foaf:middleName ""Jane"" ;
           foaf:familyName ""Miller Richard""@en .

  # Get labels for the persons
  SERVICE wikibase:label { bd:serviceParam wikibase:language ""[AUTO_LANGUAGE],en"". }
}
```",2,2,3,1,2,3,2,20,0,0,1,0,0.0,0
865,29,train,"Give me the father of Shahla Khatun and native of British Raj and father of the child, that is a politician, of Abu Ahmad Abdul Hafiz.",SELECT ?result WHERE { ?v3 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Abu_Ahmad_Abdul_Hafiz> . <http://dbpedia.org/resource/Shahla_Khatun> <http://dbpedia.org/property/father> ?result . ?result <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/British_Raj> . ?v3 <http://dbpedia.org/property/father> ?result . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?father WHERE {
  # Find Shahla Khatun's father
  ?shahlaKhatun a dbo:Person ;
                foaf:surname ""Khatun"" ;
                dbo:parent ?father .

  # Ensure the father is a native of British Raj
  ?father dbo:nationality dbr:British_Raj .

  # Find Abu Ahmad Abdul Hafiz's child who is a politician
  ?abuAhmadAbdulHafiz a dbo:Person ;
                     foaf:surname ""Abdul Hafiz"" ;
                     dbo:child ?politicianChild .
  
  ?politicianChild a dbo:Politician ;
                   dbo:parent ?father .

  # Ensure the same father is linked to both Shahla Khatun and the politician child
}
```",4,5,5,2,3,3,3,71,0,0,1,0,0.0,0
645,24,train,"Give me the leader of Ministry of the Army (Spain) and military force of the force, that is an event and a military conflict and a societal event, of Francisco Largo Caballero.",SELECT ?result WHERE { <http://dbpedia.org/resource/Ministry_of_the_Army_(Spain)> <http://dbpedia.org/ontology/leader> ?result . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?v2 <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Francisco_Largo_Caballero> . ?result <http://dbpedia.org/ontology/battle> ?v2 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?leader ?militaryForce WHERE {
  # Francisco Largo Caballero as Minister of War during the Spanish Civil War
  dbr:Francisco_Largo_Caballero dbo:ministerOfWar dbr:Spanish_Civil_War .
  
  # The military force involved in the Spanish Civil War
  dbr:Spanish_Civil_War dbo:militaryConflict ?militaryForce .

  # Ensuring the event is both a military conflict and societal event
  FILTER EXISTS { ?militaryForce a dbo:MilitaryConflict . }
  FILTER EXISTS { ?militaryForce a dbo:SocietalEvent . }

  # Assigning Francisco Largo Caballero as leader
  BIND(dbr:Francisco_Largo_Caballero AS ?leader)
}
```",3,6,4,2,2,3,3,71,0,0,1,0,0.0,0
130,3,train,"Give me the film, that is a soccer club and an organisation, of Candice Storey Lee.",SELECT ?result WHERE { ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerClub>. ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?result <http://dbpedia.org/ontology/director> <http://dbpedia.org/resource/Candice_Storey_Lee> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?film WHERE {
  ?person foaf:name ""Candice Storey Lee""@en .
  ?person dbo:worksFor ?work.
  ?work dbo:title ?film .
  
  OPTIONAL { 
    ?film dbo:genre ?genre .
    FILTER (CONTAINS(LCASE(?genre), ""organization"") || CONTAINS(LCASE(?genre), ""club""))
  }
}
```",1,3,2,1,1,3,2,20,0,0,1,0,0.0,0
465,4,train,Give me the child of Alfonso I d'Este.,SELECT ?result WHERE { ?result <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Alfonso_I_d'Este> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?child WHERE {
  ?person dbo:spouse ?spouse .
  FILTER (str(?spouse) = ""Alfonso I d'Este"")
  ?person dbo:child ?child .
}
```",1,1,2,1,1,3,3,71,0,0,2,0,0.0,0
715,24,train,Give me the leader of Ministry of the Air (Spain) and commander in the force of Francisco Largo Caballero.,SELECT ?result WHERE { <http://dbpedia.org/resource/Ministry_of_the_Air_(Spain)> <http://dbpedia.org/ontology/leader> ?result . ?v2 <http://dbpedia.org/ontology/commander> ?result . ?v2 <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Francisco_Largo_Caballero> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?ministerOfAir ?commanderInForce WHERE {
  # Find Francisco Largo Caballero as Prime Minister of Spain
  ?largoCaballero a dbo:PrimeMinister ;
                 foaf:name ""Francisco Largo Caballero""@en ;
                 dbo:country dbr:Spain ;
                 dbo:termStart ?startTerm .

  # Find the leader of the Ministry of the Air during his term
  ?ministerOfAir dbo:officeHolder ?largoCaballero ;
                 dbo:position ""Minister of Air""@en ;
                 foaf:name ?nameMinister .

  # Find a commander in the force under Francisco Largo Caballero
  ?commanderInForce dbo:subordinateTo ?largoCaballero ;
                    dbo:rank ?rank ;
                    foaf:name ?nameCommander .
}
```",3,3,4,2,2,3,3,71,0,0,1,0,0.0,0
41,11,train,"Give me the party of the work, that is an office holder, of yes.","SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v1 <http://dbpedia.org/property/author> ""yes""@en . ?v1 <http://dbpedia.org/ontology/party> ?result . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT ?person ?party WHERE {
  ?person a dbo:Person ;
          foaf:name ""Yes""@en .
  OPTIONAL { 
    ?officeHolder dbo:officeHolder ?person .
    ?person dbo:party ?party .
  }
}
```",2,3,3,2,1,2,3,28,0,0,35,0,0.0,0
965,35,train,"Give me the parent of the person born, that is a noble, as Prince George of Battenberg and spouse of the spouse of Princess Victoria of Hesse and by Rhine.","SELECT ?result WHERE { ?v0 <http://dbpedia.org/property/birthName> ""Prince George of Battenberg""@en . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Noble>. ?v0 <http://dbpedia.org/ontology/parent> ?result . ?result <http://dbpedia.org/ontology/spouse> ?v1 . <http://dbpedia.org/resource/Princess_Victoria_of_Hesse_and_by_Rhine> <http://dbpedia.org/ontology/spouse> ?v1 . }","```sparql
SELECT ?parent WHERE {
  wd:Q123456 a dbo:NoblePerson ; # Replace with actual DBpedia resource for Prince Louis of Battenberg
             foaf:surname ""Battenberg""@en ;
             dbo:spouse wd:Q654321 . # Replace with actual DBpedia resource for Princess Victoria of Hesse and by Rhine

  ?parent dbo:child wd:Q123456 .
}
```

Note: The above SPARQL query is a template. You need to replace `wd:Q123456` with the actual DBpedia resource identifier for Prince Louis of Battenberg, and `wd:Q654321` with that for Princess Victoria of Hesse and by Rhine.",4,5,5,2,2,3,3,71,0,0,1,0,0.0,0
456,8,train,"Give me the band, that is a musical artist, of Dean Brody.",SELECT ?result WHERE { ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. <http://dbpedia.org/resource/Dean_Brody> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . },"```sparql
PREFIX dbpedia-owl: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?band WHERE {
  ?person a dbpedia-owl:MusicalArtist .
  ?person rdfs:label ""Dean Brody""@en .
  OPTIONAL { ?person dbp:band ?band . }
}
```",1,2,2,1,1,3,3,71,0,0,2,0,0.0,0
917,9,train,Give me the parent of Albert Kamehameha and child of Kekūanāoʻa.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/parent> <http://dbpedia.org/resource/Kekūanāoʻa> . ?result <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Albert_Kamehameha> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?person WHERE {
  # Find the parent of Albert Kamehameha
  ?albertKamehameha dbo:parent ?parent .
  FILTER (?albertKamehameha = dbr:Albert_Kamehameha)

  # Find the child of Kekūanāoʻa
  ?child dbo:parent dbr:Kekūanāoʻa .

  # The person must satisfy both conditions
  FILTER (?parent = ?child)
}
```",2,2,3,1,2,3,3,71,0,0,1,0,0.0,0
965,21,train,"Give me the parent of George Mountbatten, 2nd Marquess of Milford Haven and spouse of the spouse of Princess Victoria of Hesse and by Rhine.","SELECT ?result WHERE { <http://dbpedia.org/resource/Princess_Victoria_of_Hesse_and_by_Rhine> <http://dbpedia.org/ontology/spouse> ?v2 . ?result <http://dbpedia.org/ontology/spouse> ?v2 . <http://dbpedia.org/resource/George_Mountbatten,_2nd_Marquess_of_Milford_Haven> <http://dbpedia.org/ontology/parent> ?result . }","```sparql
SELECT ?parent WHERE {
    wd:Q123456 dbo:parent ?parent .
}
```

Note: Replace `wd:Q123456` with the actual DBpedia resource identifier for George Mountbatten, 2nd Marquess of Milford Haven.",3,3,4,2,2,3,3,71,0,0,1,0,0.0,0
507,22,train,Give me the spouse of Anne V. Coates and professional in the profession of Guy Ferland.,SELECT ?result WHERE { ?result <http://dbpedia.org/property/occupation> ?v1 . ?result <http://dbpedia.org/ontology/spouse> <http://dbpedia.org/resource/Anne_V._Coates> . <http://dbpedia.org/resource/Guy_Ferland> <http://dbpedia.org/property/occupation> ?v1 . },"```sparql
# Query for Anne V. Coates' spouse
SELECT ?spouse WHERE {
  ?anne dbo:name ""Anne V. Coates""@en .
  ?anne dbo:spouse ?spouse .
}

UNION

# Query for Guy Ferland's profession and find professionals in that field
{
  SELECT ?profession WHERE {
    ?guy dbo:name ""Guy Ferland""@en .
    ?guy dbo:occupation ?profession .
  }
  
  # Find other individuals with the same profession as Guy Ferland
  SELECT DISTINCT ?individual WHERE {
    ?individual dbo:occupation ?profession .
    FILTER(?individual != ?guy)
  }
}
```",3,3,4,2,2,3,3,71,0,0,1,0,0.0,0
274,1,train,Give me the professional in .,"SELECT ?result WHERE { ?result <http://dbpedia.org/property/occupation> """"@en . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?person ?name WHERE {
  ?person a dbo:Doctor .
  ?person foaf:name ?name .
}
```

This query is hypothetical and assumes we are looking for doctors. It selects individuals who have the occupation of ""Doctor"" and retrieves their names.",1,1,2,1,1,2,3,28,0,0,39640,0,0.0,0
329,0,train,Give me the birthplace of Eric Cross (writer).,SELECT ?result WHERE { <http://dbpedia.org/resource/Eric_Cross_(writer)> <http://dbpedia.org/ontology/birthPlace> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?birthPlace WHERE {
  ?person a dbo:Writer ;
          foaf:name ""Eric Cross"" .
  ?person dbo:birthPlace ?birthPlace .
}
```",1,1,2,1,1,2,3,28,0,0,2,0,0.0,0
47,38,train,Give me the office of the awardee of Banga Bhushan and office of the awardee of Padma Vibhushan.,SELECT ?result WHERE { ?v3 <http://dbpedia.org/property/office> ?result . ?v2 <http://dbpedia.org/property/office> ?result . ?v2 <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/Padma_Vibhushan> . ?v3 <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/Banga_Bhushan> . },"```sparql
SELECT DISTINCT ?awardee ?office WHERE {
  # Find awardees of Banga Bhushan
  {
    ?award dcterms:isPartOf <http://dbpedia.org/resource/Category:Banga_Bhushan_awards> .
    ?award dbo:recipient ?awardee .
    OPTIONAL { ?awardee dbo:office ?office . }
  }

  UNION

  # Find awardees of Padma Vibhushan
  {
    ?award dcterms:isPartOf <http://dbpedia.org/resource/Category:Padma_Vibhushan_recipients> .
    ?award dbo:recipient ?awardee .
    OPTIONAL { ?awardee dbo:office ?office . }
  }

  FILTER(?office != """")
}
```",4,4,5,2,2,3,3,71,0,0,1,0,0.0,0
917,11,train,"Give me the parent of the child, that is a royalty, of Kamehameha IV.",SELECT ?result WHERE { ?v1 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Kamehameha_IV> . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?result <http://dbpedia.org/ontology/child> ?v1 . },"```sparql
SELECT ?child ?parent WHERE {
  ?kamehamehaIV dbo:spouse ?spouse .
  FILTER (str(?kamehamehaIV) = ""Kamehameha_IV_(King_of_the_Hawaiian_Islands)"")
  
  ?kamehamehaIV dbo:child ?child .
  ?child rdf:type dbo:Royalty .

  OPTIONAL { ?child dbo:parent ?parent . }
}
```",2,3,3,2,1,3,3,71,0,0,2,0,0.0,0
433,32,train,"Give me the associated musical artist of the associated musical artist, that is an artist and a musical artist, of Scott LaFaro and associated musical artist of the person born, that is a musical artist and an artist, as Paul Laurence Dunbar Chambers Jr..","SELECT ?result WHERE { ?v3 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. <http://dbpedia.org/resource/Scott_LaFaro> <http://dbpedia.org/ontology/associatedMusicalArtist> ?v3 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?v1 <http://dbpedia.org/property/birthName> ""Paul Laurence Dunbar Chambers Jr.""@en . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?v1 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . }","```sparql
# Find Scott LaFaro's associated musical artist who is both an artist and a musical artist.
SELECT ?artist WHERE {
  wd:Q123456 wdt:P106 wd:Q33999 . # Scott LaFaro has occupation musician (musical artist)
  wd:Q123456 wdt:P175 ?associatedArtist . # Associated with
  ?associatedArtist wdt:P106 wd:Q33999 . # Associated artist is a musician (musical artist)
  ?associatedArtist rdfs:label ?artistLabel FILTER(LANG(?artistLabel) = ""en"") .
}

UNION

# Find Paul Laurence Dunbar Chambers Jr.'s associated musical artist who is both an artist and a musical artist.
SELECT ?artist WHERE {
  wd:Q654321 wdt:P106 wd:Q33999 . # Ron Carter has occupation musician (musical artist)
  wd:Q654321 wdt:P175 ?associatedArtist . # Associated with
  ?associatedArtist wdt:P106 wd:Q33999 . # Associated artist is a musician (musical artist)
  ?associatedArtist rdfs:label ?artistLabel FILTER(LANG(?artistLabel) = ""en"") .
}

UNION

# Find the associated musical artist of Bill Evans.
SELECT ?finalArtist WHERE {
  wd:Q123456 wdt:P175 wd:Q98765 . # Scott LaFaro's associated artist is Bill Evans
  wd:Q654321 wdt:P175 wd:Q98765 . # Ron Carter's associated artist is also Bill Evans
  wd:Q98765 wdt:P175 ?finalArtist . # Associated with
  ?finalArtist rdfs:label ?artistLabel FILTER(LANG(?artistLabel) = ""en"") .
}
```",4,8,5,2,2,3,3,71,0,0,2,0,0.0,0
326,9,train,"Give me the birthplace, that is a state and British, of the professional in Writer.","SELECT ?result WHERE { ?v0 <http://dbpedia.org/ontology/birthPlace> ?result . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/AdministrativeRegion>. ?result <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/United_Kingdom>. ?v0 <http://dbpedia.org/property/occupation> ""Writer""@en . }","```sparql
SELECT ?birthPlace WHERE {
  ?person dbo:occupation dbr:Writer .
  ?person dbo:nationality dbr:United_Kingdom .
  ?person dbo:birthPlace ?birthPlace .
  FILTER regex(?birthPlace, ""New York"", ""i"")
}
```",2,4,3,2,1,3,2,20,0,0,38,0,0.0,0
917,34,train,"Give me the child of Kekūanāoʻa and parent of the child, that is a royalty, of the mayor of Hawaiian Kingdom.","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/child> ?v1 . ?result <http://dbpedia.org/property/father> ""Kekūanāoʻa""@en . ?v1 <http://dbpedia.org/property/father> ?v3 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. <http://dbpedia.org/resource/Hawaiian_Kingdom> <http://dbpedia.org/property/leader> ?v3 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?parent WHERE {
  # Kekūanāoʻa's child who became royalty
  ?child dbo:father dbr:Kekūanāoʻa .
  ?child dbo:mother ?parent .
  
  # Ensure the child is a monarch (royalty)
  ?child dbo:occupation dbr:Monarch .

  # Lorrin A. Thurston's relationship to Kalākaua
  OPTIONAL {
    ?thurston dbo:spouse ?kalakaua .
    ?kalakaua rdfs:label ""Kalākaua""@en .
  }
  
  FILTER (lang(?childLabel) = 'en' && lang(?parentLabel) = 'en')
}
```",4,5,5,3,2,3,3,71,0,0,2,0,0.0,0
47,6,train,Give me the awardee of Banga Bhushan.,SELECT ?result WHERE { ?result <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/Banga_Bhushan> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?recipient ?recipientLabel WHERE {
  ?award dbo:recipient ?recipient .
  ?award rdf:type dbr:Banga_Bhushan_Award .
  SERVICE wikibase:label { bd:serviceParam wikibase:language ""[AUTO_LANGUAGE],en"". }
}
```",1,1,2,1,1,3,3,71,0,0,2,0,0.0,0
976,28,train,"Give me the office of Meral Akşener and office of the leader, that is a politician, of Grand National Assembly of Turkey and office of Naci Bostancı.",SELECT ?result WHERE { <http://dbpedia.org/resource/Meral_Akşener> <http://dbpedia.org/property/office> ?result . <http://dbpedia.org/resource/Grand_National_Assembly_of_Turkey> <http://dbpedia.org/ontology/leader> ?v1 . <http://dbpedia.org/resource/Naci_Bostancı> <http://dbpedia.org/property/office> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v1 <http://dbpedia.org/property/office> ?result . },"```sparql
SELECT ?person ?name ?office WHERE {
  VALUES (?person ?name) {
    (dbpedia:en:Meral_Akşener ""Meral Akşener"")
    (dbpedia:en:Serdar_Dağdelen ""Serdar Dağdelen"") # Assuming Serdar Dağdelen is the current Speaker
    (dbpedia:en:Naci_Bostancı ""Naci Bostancı"")
  }
  ?person foaf:name ?name .
  OPTIONAL { ?person dbo:office ?office . }
}
```",4,5,5,2,3,3,3,71,0,0,1,0,0.0,0
433,5,train,"Give me the associated musical artist, that is a musical artist and an artist, of Ornette Coleman.",SELECT ?result WHERE { <http://dbpedia.org/resource/Ornette_Coleman> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?associatedArtist WHERE {
  ?s dbp:name ""Ornette Coleman""@en .
  ?s dbo:associatedMusicalArtist ?associatedArtist .
  ?associatedArtist a dbo:MusicalArtist ;
                   a dbo:Artist .
}
```",1,3,2,1,1,3,3,71,0,0,10,0,0.0,0
965,6,train,"Give me the child, that is a royalty, of Prince Louis of Battenberg.",SELECT ?result WHERE { ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?result <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Prince_Louis_of_Battenberg> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?child ?title WHERE {
  ?person rdfs:label ""Prince Louis of Battenberg""@en .
  ?person dbo:child ?child .
  
  OPTIONAL { 
    ?child dbo:title ?title .
    FILTER(CONTAINS(LCASE(str(?title)), ""prince"") || CONTAINS(LCASE(str(?title)), ""princess""))
  }
}
```",1,2,2,1,1,3,3,71,0,0,2,0,0.0,0
130,5,train,"Give me the administration, that is American, of .","SELECT ?result WHERE { ?result <http://dbpedia.org/property/governor> """"@en . ?result <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/United_States>. }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?administration ?president WHERE {
  ?administration a dbo:Government ;
                  dbo:country dbr:United_States .
  OPTIONAL { ?administration dbo:headOfState ?president . }
}
```",1,2,2,1,1,3,2,20,0,0,43,0,0.0,0
773,15,train,Give me the father of the parent of Bernard (son of Charles the Fat).,SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Bernard_(son_of_Charles_the_Fat)> . ?v1 <http://dbpedia.org/property/father> ?result . },"```sparql
SELECT ?grandfather WHERE {
  ?charles dbp:son ?bernard .
  ?charles foaf:name ""Charles the Fat""@en .
  ?charles dbo:spouse ?spouse .
  ?charles dbo:child ?parentOfBernard .
  ?parentOfBernard foaf:name ""Bernard""@en .
  ?charles dbo:father ?grandfather .
}
```",2,2,3,2,1,3,3,71,0,0,1,0,0.0,0
456,33,train,"Give me the professional in the alter ego of the reference, that is a fictional character, to Lamont Cranston (radio, film and television) and spouse of Danielle Spencer (Australian actress).","SELECT ?result WHERE { ?result <http://dbpedia.org/property/occupation> ?v3 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/FictionalCharacter>. ?v0 <http://xmlns.com/foaf/0.1/name> ""Lamont Cranston (radio, film and television)""@en . ?v0 <http://dbpedia.org/property/alterEgo> ?v3 . <http://dbpedia.org/resource/Danielle_Spencer_(Australian_actress)> <http://dbpedia.org/ontology/spouse> ?result . }","```sparql
SELECT ?character WHERE {
  ?person dbo:alterEgo ?character .
  ?person rdfs:label ""Lamont Cranston""@en .
}
```",4,5,5,3,2,3,3,71,0,0,1,0,0.0,0
892,31,train,Give me the entity in the profession of the true self of Enrico Crolla and landmark at elevation of 58.,"SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/country> ?v0 . ?result <http://dbpedia.org/ontology/elevation> ""58""^^<http://www.w3.org/2001/XMLSchema#integer> . ?v2 <http://dbpedia.org/property/occupation> ?v0 . ?v2 <http://xmlns.com/foaf/0.1/givenName> ""Enrico Crolla""@en . }","```sparql
# Query to find Enrico Crolla's profession or role
SELECT ?profession WHERE {
  ?person foaf:name ""Enrico Crolla""@en .
  ?person dbo:occupation ?profession .
}

UNION

# Query to find a landmark at elevation of 58
SELECT ?landmark WHERE {
  ?landmark a dbo:Lighthouse ;
            dbo:elevation ""58""^^xsd:integer .
}
```",4,4,5,3,2,3,3,71,0,0,11,0,0.0,0
573,27,train,"Give me the parent of the author, that is a politician and an office holder, of the work of John Quincy Adams.",SELECT ?result WHERE { ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v2 <http://dbpedia.org/ontology/parent> ?result . ?v1 <http://dbpedia.org/property/author> ?v2 . ?v1 <http://dbpedia.org/property/author> <http://dbpedia.org/resource/John_Quincy_Adams> . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. },"```sparql
SELECT ?parent WHERE {
  ?work dcterms:creator <http://dbpedia.org/resource/John_Quincy_Adams> .
  ?johnQuincyAdams dbo:birthName ""John Quincy Adams""@en ;
                   foaf:parent ?parent .
  OPTIONAL { ?parent dbo:occupation dbp:Politician . }
  FILTER EXISTS {
    ?parent dbo:officeHolderOf ?office .
  }
}
```",3,5,4,3,1,3,3,71,0,0,2,0,0.0,0
715,30,train,"Give me the commander in Spanish Civil War and commander in Rif War and leader of the office, that is a government agency and an organisation, of Carlos Franco Iribarnegaray.",SELECT ?result WHERE { <http://dbpedia.org/resource/Rif_War> <http://dbpedia.org/ontology/commander> ?result . <http://dbpedia.org/resource/Spanish_Civil_War> <http://dbpedia.org/ontology/commander> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. <http://dbpedia.org/resource/Carlos_Franco_Iribarnegaray> <http://dbpedia.org/property/office> ?v1 . ?v1 <http://dbpedia.org/ontology/leader> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/GovernmentAgency>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?person ?spanishCivilWarCommander ?rifWarCommander ?officeLeader WHERE {
  ?person a dbo:MilitaryPerson .
  
  # Commander in the Spanish Civil War
  OPTIONAL { 
    ?spanishCivilWarEvent dbo:commander ?person ;
                          rdf:type dbr:Spanish_Civil_War .
  }
  
  # Commander in the Rif War
  OPTIONAL { 
    ?rifWarEvent dbo:commander ?person ;
                 rdf:type dbr:Rif_War .
  }

  # Leader of an office related to Carlos Franco Iribarnegaray
  OPTIONAL {
    ?office dbo:leader ?person ;
            dbo:headOfGovernmentAgency true ;
            dbo:organization true .
    
    ?carlosFrancoIribarnegaray dbr:Carlos_Franco_Iribarnegaray ;
                               dbo:relatedTo ?office .
  }
  
  # Linking the person to Francisco Franco
  OPTIONAL {
    ?person rdfs:label ""Francisco Franco""@en .
  }

  FILTER (BOUND(?spanishCivilWarCommander) && BOUND(?rifWarCommander) && BOUND(?officeLeader))
}
```",4,6,5,2,3,3,3,71,0,0,1,0,0.0,0
917,36,train,"Give me the parent of Albert Kamehameha and child of the father of the child, that is a royalty, of Kamehameha III.",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Albert_Kamehameha> . ?result <http://dbpedia.org/property/father> ?v0 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v3 <http://dbpedia.org/property/father> ?v0 . <http://dbpedia.org/resource/Kamehameha_III> <http://dbpedia.org/ontology/child> ?v3 . },"```sparql
# Step 1: Find the parent of Albert Kamehameha
SELECT ?parent WHERE {
    ?albert dbo:spouse ?parent .
    FILTER (str(?albert) = ""Albert Kamehameha"")
}

UNION

SELECT ?parent WHERE {
    ?albert dbo:child ?parent .
    FILTER (str(?albert) = ""Albert Kamehameha"")
}

# Step 2: Find the father of a child of Kamehameha III who is royalty
SELECT DISTINCT ?father WHERE {
    ?k3 dbo:child ?child .
    ?child dbo:spouseOrPartner ?father .
    FILTER (str(?k3) = ""Kamehameha III"")
    
    # Ensure the father is a member of royalty
    ?father rdf:type dbo:Monarch .
}

# Step 3: Find if there's any overlap between the parent from step 1 and the royal figure from step 2
SELECT DISTINCT ?parent WHERE {
    VALUES (?parent) {
        { SELECT ?parent WHERE {
            ?albert dbo:spouseOrPartner ?parent .
            FILTER (str(?albert) = ""Albert Kamehameha"")
        }}
        
        UNION
        
        { SELECT ?parent WHERE {
            ?albert dbo:child ?parent .
            FILTER (str(?albert) = ""Albert Kamehameha"")
        }}
    }
    
    # Check if this parent is also a father of a child of Kamehameha III who is royalty
    ?k3 dbo:child ?child .
    ?child dbo:spouseOrPartner ?parent .
    FILTER (str(?k3) = ""Kamehameha III"")
    
    ?parent rdf:type dbo:Monarch .
}
```",4,5,5,3,2,3,3,71,0,0,1,0,0.0,0
124,26,train,"Give me the military force of the war, that is an event and a military conflict and a societal event, of the awardee of British South Africa Company Medal.",SELECT ?result WHERE { ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v1 <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/British_South_Africa_Company_Medal> . ?v1 <http://dbpedia.org/ontology/battle> ?v2 . ?result <http://dbpedia.org/ontology/battle> ?v2 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?militaryForce WHERE {
  # Find the event associated with the British South Africa Company Medal
  ?medal dbo:awardedFor ?event .
  
  # Ensure the event is a military conflict and societal event
  ?event rdf:type dbo:MilitaryConflict ;
         rdf:type dbo:SocietalEvent .

  # Identify the war related to the medal
  ?event dbo:name ?warName .
  FILTER(CONTAINS(LCASE(?warName), ""first matabele war"") || CONTAINS(LCASE(?warName), ""first chimurenga""))

  # Find the military force involved in this war
  ?militaryForce dbo:participatedIn ?event ;
                 rdf:type dbo:MilitaryUnit .
}
```",3,6,4,3,1,3,3,71,0,0,1434,0,0.0,0
5,4,train,"Give me the associated musical artist, that is a band, of Rubén Colón Tarrats.",SELECT ?result WHERE { <http://dbpedia.org/resource/Rubén_Colón_Tarrats> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Band>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?band WHERE {
  ?person foaf:name ""Rubén Colón Tarrats""@en .
  ?person dbo:musicArtist ?band .
  ?band a dbo:Band .
}
```",1,2,2,1,1,3,2,20,0,0,2,0,0.0,0
976,31,train,"Give me the office of the leader, that is a politician, of the administration, that is an organisation, of Kemal Kılıçdaroğlu and office of Meral Akşener.",SELECT ?result WHERE { ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?v2 <http://dbpedia.org/ontology/leader> ?v0 . <http://dbpedia.org/resource/Meral_Akşener> <http://dbpedia.org/property/office> ?result . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v0 <http://dbpedia.org/property/office> ?result . ?v2 <http://dbpedia.org/property/leader> <http://dbpedia.org/resource/Kemal_Kılıçdaroğlu> . },"```sparql
SELECT ?person ?office WHERE {
  VALUES (?person ?label) { 
    (:Kemal_Kılıçdaroğlu ""Kemal Kılıçdaroğlu""@en)
    (:Meral_Akşener ""Meral Akşener""@en)
  }
  
  ?person rdfs:label ?label .
  OPTIONAL {
    ?person dbo:office ?office .
    ?office rdfs:label ?officeLabel .
  }
}
```",4,6,5,3,2,3,3,71,0,0,3,0,0.0,0
417,20,train,Give me the child of the father of Frederick IX of Denmark and spouse of Princess Caroline-Mathilde of Denmark.,SELECT ?result WHERE { ?result <http://dbpedia.org/property/father> ?v2 . <http://dbpedia.org/resource/Frederick_IX_of_Denmark> <http://dbpedia.org/property/father> ?v2 . ?result <http://dbpedia.org/ontology/spouse> <http://dbpedia.org/resource/Princess_Caroline-Mathilde_of_Denmark> . },"```sparql
SELECT ?child WHERE {
  ?father dbr:Frederick_IX_of_Denmark dbo:father ?fatherOfFrederick.
  ?fatherOfFrederick foaf:name ""Christian X""@en.
  
  ?spouse dbr:Princess_Caroline-Mathilde_of_Denmark dbo:spouse ?spouseOfCarolineMathilde.
  ?child dbo:parent ?spouseOfCarolineMathilde.

  FILTER(?father = ?spouseOfCarolineMathilde)
}
```",3,3,4,2,2,3,3,71,0,0,1,0,0.0,0
130,1,train,Give me the entity in Tennessee.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/state> <http://dbpedia.org/resource/Tennessee> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?entity WHERE {
  ?entity a dbo:PopulatedPlace .
  ?entity dbo:state dbr:Tennessee .
}
```",1,1,2,1,1,3,2,20,95,0,593,1.0,0.1380813953488372,0.24265644955300128
442,5,train,"Give me the resting place of the work of Roosevelt, Theodore.","SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/restingPlace> ?result . ?v1 <http://dbpedia.org/property/author> ""Roosevelt, Theodore""@en . }","```sparql
SELECT ?location WHERE {
  ?work dcterms:creator <http://dbpedia.org/resource/Theodore_Roosevelt> .
  ?work dbo:isArchivedAt ?archive .
  ?archive dbp:name ?location .
}
```",2,2,3,2,1,2,2,9,0,0,1,0,0.0,0
236,14,train,"Give me the party member of the administration of the reference, that is an office holder and a politician, to James Madison.","SELECT ?result WHERE { ?v0 <http://dbpedia.org/property/leader> ?v2 . ?result <http://dbpedia.org/ontology/party> ?v0 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v2 <http://xmlns.com/foaf/0.1/name> ""James Madison""@en . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?administration ?party WHERE {
  dbr:James_Madison dbo:presidentOf ?administration .
  OPTIONAL { ?administration dbo:politicalParty ?party . }
}
```",3,5,4,3,1,3,2,20,0,0,597,0,0.0,0
965,30,train,"Give me the parent of the person born, that is a noble, as Prince George of Battenberg and spouse of Prince Louis of Battenberg and parent of Louise Mountbatten.","SELECT ?result WHERE { ?v0 <http://dbpedia.org/property/birthName> ""Prince George of Battenberg""@en . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Noble>. ?result <http://dbpedia.org/ontology/spouse> <http://dbpedia.org/resource/Prince_Louis_of_Battenberg> . <http://dbpedia.org/resource/Louise_Mountbatten> <http://dbpedia.org/ontology/parent> ?result . ?v0 <http://dbpedia.org/ontology/parent> ?result . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?parent WHERE {
  ?person rdfs:label ""Prince George of Battenberg""@en .
  ?person dbo:spouse ?spouse .
  ?spouse rdfs:label ""Prince Louis of Battenberg""@en .
  ?child dbo:parent ?person ;
         dbo:parent ?spouse ;
         rdfs:label ""Louise Mountbatten""@en .
  
  OPTIONAL { ?person dbo:father ?parent . }
  OPTIONAL { ?person dbo:mother ?parent . }

  FILTER(?parent != ?person)
}
```",4,5,5,2,3,3,3,71,0,0,1,0,0.0,0
508,0,train,Give me the birthplace of Ma Hongkui.,SELECT ?result WHERE { <http://dbpedia.org/resource/Ma_Hongkui> <http://dbpedia.org/ontology/birthPlace> ?result . },"```sparql
SELECT ?birthPlace WHERE {
  dbpedia:Ma_Hongkui dbo:birthPlace ?birthPlace .
}
```",1,1,2,1,1,3,2,20,0,0,3,0,0.0,0
507,32,train,"Give me the director of the movie, that is a movie and a work, with Beryl Reid and spouse of the person born as Anne Voase Coates.","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/spouse> ?v1 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?v3 <http://dbpedia.org/ontology/director> ?result . ?v3 <http://dbpedia.org/property/starring> <http://dbpedia.org/resource/Beryl_Reid> . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Film>. ?v1 <http://dbpedia.org/property/birthName> ""Anne Voase Coates""@en . }","```sparql
# Step 1: Find Anne Voase Coates' spouse
SELECT ?spouse WHERE {
  ?anne a dbo:Person ;
        foaf:name ""Anne Voase Coates""@en .
  ?anne dbo:spouse ?spouse .
}

# Assuming the result of the above query gives us the spouse, let's call it ?spouse

# Step 2: Find movies featuring Beryl Reid and the spouse
SELECT DISTINCT ?movie WHERE {
  ?movie a dbo:Film ;
         dbo:starring ?beryl ;
         dbo:starring ?spouse .
  ?beryl foaf:name ""Beryl Reid""@en .
}

# Assuming the result of the above query gives us the movie, let's call it ?movie

# Step 3: Find the director of that movie
SELECT DISTINCT ?director WHERE {
  ?movie dbo:director ?director .
}
```",4,6,5,2,2,3,3,71,0,0,1,0,0.0,0
124,10,train,Give me the military force of Battle of Atbara and commander in Mahdist War.,SELECT ?result WHERE { <http://dbpedia.org/resource/Mahdist_War> <http://dbpedia.org/ontology/commander> ?result . ?result <http://dbpedia.org/ontology/battle> <http://dbpedia.org/resource/Battle_of_Atbara> . },"```sparql
PREFIX dbpedia-owl: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?force ?commander WHERE {
  ?battle a dbpedia-owl:Battle ;
          rdfs:label ""Battle of Atbara""@en .
  
  OPTIONAL { 
    ?force dbp:participatedIn ?battle ;
           rdfs:label ?forceLabel .
    FILTER (lang(?forceLabel) = 'en')
  }
  
  OPTIONAL {
    ?commander dbp:commanderOf ?force ;
               rdfs:label ?commanderLabel .
    FILTER (lang(?commanderLabel) = 'en')
  }
}
```",2,2,3,1,2,3,3,71,0,0,1,0,0.0,0
582,10,train,Give me the figure known as --10-19 and reference to Japan.,"SELECT ?result WHERE { ?result <http://dbpedia.org/property/nickname> ""--10-19""^^<http://www.w3.org/2001/XMLSchema#gMonthDay> . ?result <http://xmlns.com/foaf/0.1/name> ""Japan""@en . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dct: <http://purl.org/dc/terms/>

SELECT ?event ?date WHERE {
  ?event a dbo:Earthquake ;
         dbo:date ?date .
  FILTER(CONTAINS(LCASE(STR(?event)), ""great kanto earthquake"") && 
         CONTAINS(LCASE(STR(?date)), ""1923-10-19""))
}
```",2,2,3,1,2,3,3,71,0,0,1,0,0.0,0
965,3,train,Give me the parent of Louise Mountbatten.,SELECT ?result WHERE { <http://dbpedia.org/resource/Louise_Mountbatten> <http://dbpedia.org/ontology/parent> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?parentName WHERE {
  ?person rdfs:label ""Louise Mountbatten""@en .
  ?person dbo:parent ?parent .
  ?parent rdfs:label ?parentName .
  FILTER(LANG(?parentName) = 'en')
}
```",1,1,2,1,1,3,3,71,0,2,2,0.0,0.0,0
445,28,train,"Give me the death place of Patrick Moore and entity in the residence, that is a country, of Anna Sharkey and entity in United Kingdom.",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/United_Kingdom> . ?result <http://dbpedia.org/ontology/location> ?v1 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. <http://dbpedia.org/resource/Anna_Sharkey> <http://dbpedia.org/property/residence> ?v1 . <http://dbpedia.org/resource/Patrick_Moore> <http://dbpedia.org/ontology/deathPlace> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?deathPlace (SAMPLE(?country) AS ?residenceCountry)
WHERE {
  # Patrick Moore's death place
  dbr:Patrick_Moore dbo:deathPlace ?deathPlace .

  # Anna Sharkey's residence and its country
  dbr:Anna_Sharkey dbo:residence ?residence .
  ?residence dbo:country ?country .

  # Ensure one of the entities is in the United Kingdom
  FILTER (
    EXISTS { ?deathPlace dbo:country dbr:United_Kingdom } ||
    EXISTS { ?country dbr:United_Kingdom }
  )
}
```",4,5,5,2,3,3,3,71,0,0,1,0,0.0,0
554,10,train,"Give me the birth place of the band, that is an artist, of Rita Redshoes.",SELECT ?result WHERE { ?v0 <http://dbpedia.org/ontology/birthPlace> ?result . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. <http://dbpedia.org/resource/Rita_Redshoes> <http://dbpedia.org/ontology/associatedMusicalArtist> ?v0 . },"```sparql
SELECT ?band ?birthPlace WHERE {
  ?band dbo:associatedBand dbr:Rita_Redshoes .
  ?band a dbo:MusicalArtist .
  OPTIONAL { ?band dbo:birthPlace ?birthPlace . }
  FILTER (str(?band) = ""The Legendary Tigerman"")
}
```",2,3,3,2,1,3,2,20,0,0,1,0,0.0,0
433,2,train,Give me the professional in Musician.,"SELECT ?result WHERE { ?result <http://dbpedia.org/property/occupation> ""Musician""@en . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>

SELECT ?musician WHERE {
  ?musician rdf:type dbo:MusicalArtist .
}
LIMIT 10
```",1,1,2,1,1,3,3,71,0,10,7563,0.0,0.0,0
365,12,train,"Give me the person born as Symon Vasylyovych Petliura and spouse of the native, that is a politician, of Poltava Governorate.","SELECT ?result WHERE { ?v0 <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Poltava_Governorate> . ?result <http://dbpedia.org/property/birthName> ""Symon Vasylyovych Petliura""@en . ?v0 <http://dbpedia.org/ontology/spouse> ?result . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. }","```sparql
SELECT ?spouse ?politician WHERE {
  ?petliura dbo:birthName ""Symon Vasylyovych Petliura"" .
  ?petliura dbo:spouse ?spouse .

  ?politician dbo:nativePlace ?poltava .
  ?poltava rdfs:label ""Poltava Governorate""@en .

  FILTER(?spouse = ?politician)
}
```",3,4,4,2,2,3,2,20,0,0,1,0,0.0,0
433,29,train,"Give me the associated musical artist of the associated musical artist, that is an artist and a musical artist, of Scott LaFaro and professional in Musician and associated musical artist of Paul Chambers.","SELECT ?result WHERE { ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. ?v3 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . <http://dbpedia.org/resource/Scott_LaFaro> <http://dbpedia.org/ontology/associatedMusicalArtist> ?v3 . ?result <http://dbpedia.org/property/occupation> ""Musician""@en . <http://dbpedia.org/resource/Paul_Chambers> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . }","```sparql
# Step 1: Find Scott LaFaro's associated musical artists
SELECT ?artist WHERE {
    wd:Q123456 wdt:P106 wd:Q33999 . # Scott LaFaro is a musician
    wd:Q123456 wdt:P463 ?artist .   # Associated musicians of Scott LaFaro
    FILTER EXISTS { ?artist wdt:P106 wd:Q33999 } # Ensure they are musicians
}

# Step 2: Find Paul Chambers' associated musical artists
SELECT ?chambersArtist WHERE {
    wd:Q654321 wdt:P106 wd:Q33999 . # Paul Chambers is a musician
    wd:Q654321 wdt:P463 ?chambersArtist . # Associated musicians of Paul Chambers
    FILTER EXISTS { ?chambersArtist wdt:P106 wd:Q33999 } # Ensure they are musicians
}

# Step 3: Find common associated musical artist who is both an artist and a musician with Scott LaFaro
SELECT DISTINCT ?commonArtist WHERE {
    wd:Q123456 wdt:P463 ?commonArtist .
    FILTER EXISTS { ?commonArtist wdt:P106 wd:Q33999 } # Ensure they are musicians
    ?commonArtist wdt:P170 wd:Q987654 . # Assume Q987654 is an artist (replace with actual ID)
}

# Step 4: Find the associated musical artist of the common artist identified in step 3
SELECT ?finalArtist WHERE {
    ?commonArtist wdt:P463 ?finalArtist .
}
```

Note: Replace `wd:Q123456`, `wd:Q654321`, and `wd:Q987654` with the actual DBpedia IDs for Scott LaFaro, Paul Chambers, and the artist respectively. The query assumes that these entities are correctly identified in DBpedia.",4,6,5,2,3,3,3,71,0,0,1,0,0.0,0
273,0,train,Give me the spouse of Edoardo Agnelli (industrialist).,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/spouse> <http://dbpedia.org/resource/Edoardo_Agnelli_(industrialist)> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?spouse WHERE {
  ?person a dbo:Person ;
          foaf:name ""Edoardo Agnelli"" ;
          dbo:birthDate ?birthDate .
  FILTER (YEAR(?birthDate) = 1934 && YEAR(?birthDate) != 1892) # Ensuring we get the industrialist born in 1934
  OPTIONAL { ?person dbo:occupation ?occupation . }
  ?person dbo:spouse ?spouse .
}
```",1,1,2,1,1,3,2,20,0,0,1,0,0.0,0
645,29,train,"Give me the military force of the force, that is an event and a military conflict and a societal event, of Francisco Largo Caballero and leader of Ministry of the Army (Spain) and commander in Battle of Jarama.",SELECT ?result WHERE { ?v3 <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Francisco_Largo_Caballero> . ?result <http://dbpedia.org/ontology/battle> ?v3 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. <http://dbpedia.org/resource/Battle_of_Jarama> <http://dbpedia.org/ontology/commander> ?result . <http://dbpedia.org/resource/Ministry_of_the_Army_(Spain)> <http://dbpedia.org/ontology/leader> ?result . },"```sparql
SELECT ?militaryForce WHERE {
  ?event dcterms:isPartOf <http://dbpedia.org/resource/Spanish_Civil_War> .
  ?event dbo:type dbp:Military_Conflict .
  ?event dbo:type dbp:Societal_Event .
  ?person foaf:name ""Francisco Largo Caballero""@en ;
          dbo:leaderOf ?ministry ;
          dbo:commanderInBattle <http://dbpedia.org/resource/Battle_of_Jarama> .
  ?ministry rdfs:label ""Ministry of the Army (Spain)""@en .
  ?person dbo:militaryForce ?militaryForce .
  FILTER(CONTAINS(LCASE(?militaryForce), ""spanish republican army""))
}
```",4,7,5,2,3,3,3,71,0,0,1,0,0.0,0
129,18,train,Give me the associated musical artist of the person born as Tahj Malik Chandler and associated musical artist of EarthGang.,"SELECT ?result WHERE { <http://dbpedia.org/resource/EarthGang> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v2 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v2 <http://dbpedia.org/property/birthName> ""Tahj Malik Chandler""@en . }","```sparql
# Query for Lil Uzi Vert (Tahj Malik Chandler)
SELECT ?musicalArtist WHERE {
  ?entity rdfs:label ""Lil Uzi Vert""@en .
  ?entity dbo:birthName Tahj Malik Chandler .
  ?entity dbo:musicalArtist ?musicalArtist .
  FILTER(LANG(?musicalArtist) = 'en')
}

UNION

# Query for EarthGang
SELECT ?musicalArtist WHERE {
  ?entity rdfs:label ""EarthGang""@en .
  ?entity dbo:musicalArtist ?musicalArtist .
  FILTER(LANG(?musicalArtist) = 'en')
}
```",3,3,4,2,2,2,3,28,0,0,1,0,0.0,0
773,38,train,"Give me the parent of the child, that is a royalty, of Louis the German and parent of the successor of Charles the Bald.",SELECT ?result WHERE { ?v2 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Louis_the_German> . <http://dbpedia.org/resource/Charles_the_Bald> <http://dbpedia.org/ontology/successor> ?v3 . ?v2 <http://dbpedia.org/ontology/parent> ?result . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?result <http://dbpedia.org/ontology/child> ?v3 . },"```sparql
# Step 1: Find Louis the German's royal children
SELECT ?child WHERE {
    ?louis dbp:spouse ?parent .
    ?louis rdfs:label ""Louis the German""@en .
    ?child dbo:parent ?louis ;
           dbo:royalTitle ?title .
}

# Step 2: Find the parent of Louis the German's royal child
SELECT DISTINCT ?parent WHERE {
    ?louis dbp:spouse ?parent .
    ?louis rdfs:label ""Louis the German""@en .
    ?child dbo:parent ?louis ;
           dbo:royalTitle ?title .
    ?parent dbo:child ?child .
}

# Step 3: Find Charles the Bald's successor
SELECT ?successor WHERE {
    ?charles dbp:succeededBy ?successor .
    ?charles rdfs:label ""Charles the Bald""@en .
}

# Step 4: Find the parent of Charles the Bald's successor
SELECT DISTINCT ?parent WHERE {
    ?charles dbp:succeededBy ?successor .
    ?charles rdfs:label ""Charles the Bald""@en .
    ?parent dbo:child ?successor .
}

# Final step: Combine results to find common parent
SELECT DISTINCT ?commonParent WHERE {
    { 
        ?louis dbp:spouse ?commonParent .
        ?louis rdfs:label ""Louis the German""@en .
        ?child dbo:parent ?louis ;
               dbo:royalTitle ?title .
        ?commonParent dbo:child ?child .
    }
    UNION
    {
        ?charles dbp:succeededBy ?successor .
        ?charles rdfs:label ""Charles the Bald""@en .
        ?commonParent dbo:child ?successor .
    }
}
```",4,5,5,2,2,3,3,71,0,0,2,0,0.0,0
353,4,train,Give me the entity in Russia and alma mater of Daniil Yegorov.,SELECT ?result WHERE { <http://dbpedia.org/resource/Daniil_Yegorov> <http://dbpedia.org/ontology/almaMater> ?result . ?result <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Russia> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?entityInRussia ?almaMater WHERE {
  ?yegorov dbo:birthPlace ?birthPlace .
  ?yegorov dbo:almaMater ?almaMater .

  FILTER (strstarts(str(?birthPlace), ""http://dbpedia.org/resource/"") && 
          EXISTS { ?birthPlace dbp:country ""Russia"" } )

  VALUES ?yegorov {
    <http://dbpedia.org/resource/Daniil_Yegorov>
  }
}
```",2,2,3,1,2,2,2,9,0,0,1,0,0.0,0
582,19,train,Give me the player in Kazuaki Nagasawa and reference to the residence of Hirotaka Sugawara.,SELECT ?result WHERE { ?result <http://xmlns.com/foaf/0.1/name> ?v0 . <http://dbpedia.org/resource/Hirotaka_Sugawara> <http://dbpedia.org/property/residence> ?v0 . <http://dbpedia.org/resource/Kazuaki_Nagasawa> <http://dbpedia.org/ontology/team> ?result . },"```sparql
# Query to find a player associated with Kazuaki Nagasawa
SELECT ?player WHERE {
  ?nagasawa dbo:occupation ""Footballer""@en .
  ?nagasawa foaf:name ""Kazuaki Nagasawa"" .
  ?team dbo:member ?nagasawa .
  ?team dbo:member ?player .
  FILTER(?player != ?nagasawa)
}

# Query to find the residence of Hirotaka Sugawara
SELECT ?residence WHERE {
  ?sugawara foaf:name ""Hirotaka Sugawara"" .
  ?sugawara dbo:residenceLocation ?residence .
}
```",3,3,4,2,2,3,3,71,0,0,1,0,0.0,0
122,4,train,Give me the band of Gift of Gab (rapper) and band member of Lyrics Born.,SELECT ?result WHERE { <http://dbpedia.org/resource/Gift_of_Gab_(rapper)> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?result <http://dbpedia.org/ontology/associatedMusicalArtist> <http://dbpedia.org/resource/Lyrics_Born> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?band ?collaboration WHERE {
  # Find the band associated with Gift of Gab
  OPTIONAL { 
    dbr:Gift_of_Gab dbo:memberOf ?band .
  }
  
  # Find collaborations involving Lyrics Born and members of Blackalicious
  OPTIONAL {
    ?collaboration dbo:artist dbr:Lyrics_Born ;
                  dbo:artist ?blackaliciousMember .
    ?blackaliciousMember dbo:memberOf ?band .
  }
}
```",2,2,3,1,2,2,2,9,0,0,2,0,0.0,0
326,1,train,Give me the professional in Composer.,SELECT ?result WHERE { ?result <http://dbpedia.org/property/occupation> <http://dbpedia.org/resource/Composer> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?composer WHERE {
  ?composer dbo:occupation dbr:Composer .
}
```",1,1,2,1,1,2,2,9,1846,1753,70,0.512920255626563,0.9634655532359081,0.6694469628286491
892,25,train,"Give me the landmark at elevation of 58 and entity in the administration, that is Italian and a region and a settlement and an administrative region, of Democratic Party (Italy).","SELECT ?result WHERE { ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Region>. ?v0 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Italy>. ?result <http://dbpedia.org/ontology/elevation> ""58""^^<http://www.w3.org/2001/XMLSchema#integer> . ?result <http://dbpedia.org/ontology/province> ?v0 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/AdministrativeRegion>. ?v0 <http://dbpedia.org/property/leaderParty> <http://dbpedia.org/resource/Democratic_Party_(Italy)> . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX wd: <http://www.wikidata.org/entity/>

SELECT ?landmark WHERE {
  ?landmark a dbo:Landmark ;
            dbo:elevation ""58""^^xsd:int ;
            dbo:country dbr:Italy ;
            dbo:administrativeRegion ?region ;
            dbo:settlement ?settlement ;
            dbo:region ?region .
  
  OPTIONAL { 
    ?region dbo:party dbr:Democratic_Party_(Italy) .
  }
}
```",3,7,4,2,2,3,3,71,0,0,2,0,0.0,0
645,35,train,"Give me the leader of the office, that is a government agency and an organisation, of Camilo Menéndez Tolosa and commander in the force of Carlos Asensio Cabanillas.",SELECT ?result WHERE { <http://dbpedia.org/resource/Camilo_Menéndez_Tolosa> <http://dbpedia.org/property/office> ?v1 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?v2 <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Carlos_Asensio_Cabanillas> . ?v2 <http://dbpedia.org/ontology/commander> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/GovernmentAgency>. ?v1 <http://dbpedia.org/ontology/leader> ?result . },"```sparql
# Step 1: Find the office or organization led by Camilo Menéndez Tolosa
SELECT ?office WHERE {
  ?person foaf:name ""Camilo Menéndez Tolosa""@en .
  ?person dbo:positionHeld ?office .
  FILTER EXISTS { ?office a dbo:GovernmentAgency . }
  FILTER EXISTS { ?office a dbo:Organization . }
}

# Step 2: Identify the military force commanded by Carlos Asensio Cabanillas
SELECT ?force WHERE {
  ?person foaf:name ""Carlos Asensio Cabanillas""@en .
  ?person dbo:commanded ?force .
}

# Step 3: Find a common leader for both roles
SELECT DISTINCT ?leader WHERE {
  # Leader of the office led by Camilo Menéndez Tolosa
  ?office dbo:head ?leader .
  
  # Commander in the force commanded by Carlos Asensio Cabanillas
  ?force dbo:commander ?leader .
}
```",4,6,5,2,2,3,3,71,0,0,1,0,0.0,0
926,2,train,Give me the child of Ahmed III.,SELECT ?result WHERE { <http://dbpedia.org/resource/Ahmed_III> <http://dbpedia.org/ontology/child> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>

SELECT ?child WHERE {
  ?s dbp:name ""Ahmed III""@en .
  ?s a dbo:Sultan .
  ?s dbo:child ?child .
}
```",1,1,2,1,1,3,3,71,0,0,11,0,0.0,0
573,1,train,"Give me the person decedent at Quincy, Massachusetts.","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/deathPlace> <http://dbpedia.org/resource/Quincy,_Massachusetts> . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?person ?name WHERE {
  ?person a dbo:Person .
  ?person dbo:deathPlace dbr:Quincy,_Massachusetts .
  OPTIONAL { ?person foaf:name ?name . }
}
```",1,1,2,1,1,3,3,71,0,0,40,0,0.0,0
839,19,train,"Give me the band of the person born, that is a musical artist, as Kevin Richard Russell and band of Peter Schorowsky.","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/bandMember> <http://dbpedia.org/resource/Peter_Schorowsky> . ?v0 <http://dbpedia.org/property/birthName> ""Kevin Richard Russell""@en . ?v0 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?band WHERE {
  VALUES ?person { 
    dbr:Kenny_Wayne_Shepherd
  }
  ?person dbo:musicalArtist ?artist .
  ?artist dbo:associatedBand ?band .
}
```",3,4,4,2,2,3,3,71,0,0,1,0,0.0,0
573,15,train,"Give me the administration, that is a region, of the real name of Charlie Baker (Australian footballer).",SELECT ?result WHERE { ?result <http://dbpedia.org/property/governor> ?v1 . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Region>. <http://dbpedia.org/resource/Charlie_Baker_(Australian_footballer)> <http://xmlns.com/foaf/0.1/name> ?v1 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?realName ?region WHERE {
  ?person a dbo:AustralianFootballer ;
          foaf:name ""Charlie Baker"" .
  
  OPTIONAL { 
    ?person dbo:birthName ?realName .
  }
  
  OPTIONAL {
    ?person dbo:administers ?region .
  }
}
```",2,3,3,2,1,3,3,71,0,0,1,0,0.0,0
933,3,train,"Who is the band, that is an artist and a musical artist, of The Ramong Sound?",SELECT ?result WHERE { <http://dbpedia.org/resource/The_Ramong_Sound> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?band WHERE {
  ?band a dbo:Band .
  ?band rdfs:label ?label .
  FILTER(CONTAINS(LCASE(?label), ""the rolling stones""))
  OPTIONAL { ?band dbo:genre ?genre . }
}
```",1,3,2,1,1,3,3,71,0,3,3,0.0,0.0,0
527,1,train,Give me the author of The Boy Who Kicked Pigs.,SELECT ?result WHERE { <http://dbpedia.org/resource/The_Boy_Who_Kicked_Pigs> <http://dbpedia.org/property/author> ?result . },"```sparql
SELECT ?author WHERE {
  ?book dbo:title ""The Boy Who Kicked Pigs""@en .
  ?book dbo:author ?author .
}
```",1,1,2,1,1,3,2,20,0,0,1,0,0.0,0
166,4,train,Give me the reference to Madrid.,"SELECT ?result WHERE { ?result <http://xmlns.com/foaf/0.1/name> ""Madrid""@en . }","```sparql
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>
SELECT ?city ?label ?description WHERE {
  ?city rdfs:label ""Madrid""@en.
  OPTIONAL { ?city rdfs:comment ?description. }
  FILTER (LANG(?label) = 'en')
}
LIMIT 1
```",1,1,2,1,1,3,2,20,0,0,6,0,0.0,0
465,20,train,"Give me the successor of Ercole II d'Este, Duke of Ferrara and spouse of the child, that is a royalty, of Ferdinand I, Holy Roman Emperor.","SELECT ?result WHERE { ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?result <http://dbpedia.org/ontology/spouse> ?v2 . <http://dbpedia.org/resource/Ferdinand_I,_Holy_Roman_Emperor> <http://dbpedia.org/ontology/child> ?v2 . <http://dbpedia.org/resource/Ercole_II_d'Este,_Duke_of_Ferrara> <http://dbpedia.org/ontology/successor> ?result . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?successor ?spouse WHERE {
  ?ercole2 dbo:title ""Duke of Ferrara""@en .
  ?ercole2 dbo:succeededBy ?successor .
  ?successor dbo:spouse ?spouse .

  ?ferdinand1 dbp:child ?annaCaterinaGonzaga .
  ?annaCaterinaGonzaga dbo:spouse ?cesareEste .
  
  FILTER(?successor = <http://dbpedia.org/resource/Alfonso_II_Duke_of_Ferrara>)
}
```",3,4,4,2,2,3,3,71,0,0,1,0,0.0,0
102,12,train,"Give me the manager of Sheffield United W.F.C. and native of the residence, that is English and a settlement, of Peter Finbow.",SELECT ?result WHERE { ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. ?v0 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/United_Kingdom>. <http://dbpedia.org/resource/Peter_Finbow> <http://dbpedia.org/property/residence> ?v0 . <http://dbpedia.org/resource/Sheffield_United_W.F.C.> <http://dbpedia.org/ontology/manager> ?result . ?result <http://dbpedia.org/ontology/birthPlace> ?v0 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?manager WHERE {
  # Find Peter Finbow's birthplace that is an English settlement
  dbr:Peter_Finbow dbo:birthPlace ?residence .
  
  # Ensure the residence is a settlement in England
  ?residence rdf:type dbo:Settlement ;
             dbo:country dbr:England .

  # Link to the manager of Sheffield United W.F.C.
  OPTIONAL {
    ?manager dbo:worksFor dbr:Sheffield_United_Women_Football_Club .
  }
  
  FILTER EXISTS { ?manager a dbo:Person } # Ensure it's a person
}
```",3,5,4,2,2,3,2,20,0,0,1,0,0.0,0
326,5,train,"Give me the person decedent at the region coded, that is a settlement, as 442/760.","SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. ?result <http://dbpedia.org/ontology/deathPlace> ?v1 . ?v1 <http://dbpedia.org/ontology/areaCode> ""442/760"" . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?person ?personLabel WHERE {
  ?person a dbo:Person ;
          dbo:deathPlace dbr:Settlement_442760 .
  SERVICE wikibase:label { bd:serviceParam wikibase:language ""[AUTO_LANGUAGE],en"". }
}
```

Note: Replace `dbr:Settlement_442760` with the actual DBpedia resource identifier for the settlement corresponding to ""442/760"" once identified.",2,3,3,2,1,2,2,9,0,0,699,0,0.0,0
456,31,train,"Give me the spouse of the actor of the movie, that is a work and a television show, with Ross Newton and professional in .","SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/TelevisionShow>. ?v0 <http://dbpedia.org/ontology/spouse> ?result . ?v1 <http://dbpedia.org/property/starring> <http://dbpedia.org/resource/Ross_Newton> . ?result <http://dbpedia.org/property/occupation> """"@en . ?v1 <http://dbpedia.org/property/starring> ?v0 . }","```sparql
SELECT ?movie ?actor ?spouse WHERE {
  # Find works (movies/TV shows) featuring Ross Newton
  ?work dcterms:subject dbc:Category:Films_featuring_Ross_Newton .
  
  # Get actors in these works
  ?work dbo:starring ?actor .

  # Check if the actor has a spouse listed
  OPTIONAL { ?actor dbo:spouse ?spouse . }

  FILTER(?actor != <http://dbpedia.org/resource/Ross_Newton>)
}
```",4,6,5,3,2,3,3,71,0,0,2,0,0.0,0
465,33,train,"Give me the spouse of the child, that is a royalty, of the parent of Elizabeth of Austria (1526–1545) and successor of Ercole II d'Este, Duke of Ferrara.","SELECT ?result WHERE { ?v0 <http://dbpedia.org/ontology/child> ?v3 . ?result <http://dbpedia.org/ontology/spouse> ?v3 . <http://dbpedia.org/resource/Ercole_II_d'Este,_Duke_of_Ferrara> <http://dbpedia.org/ontology/successor> ?result . ?v0 <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Elizabeth_of_Austria_(1526–1545)> . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. }","```sparql
SELECT ?spouse WHERE {
  # Elizabeth of Austria (1526–1545)
  ?elizabeth dbo:birthDate ""1526-06-15""^^xsd:date ;
             dbo:deathDate ""1545-02-14""^^xsd:date ;
             dbo:parent ?parent .

  # Parent of Elizabeth of Austria
  ?parent rdfs:label ""Anna Jagiellon""@en .

  # Successor of Ercole II d'Este, Duke of Ferrara
  ?ercole2 dbo:succeededBy ?successor .
  ?successor rdfs:label ""Alfonso II d'Este, Duke of Ferrara""@en .

  # Child of Anna Jagiellon and Alfonso II d'Este
  ?child dbo:parent ?anna ;
         dbo:parent ?alfonsoII ;
         rdf:type dbo:RoyalPerson .

  ?anna rdfs:label ""Anna Jagiellon""@en .
  ?alfonsoII rdfs:label ""Alfonso II d'Este, Duke of Ferrara""@en .

  # Spouse of the child (Renée of Austria)
  ?child dbo:spouse ?spouse .
}
```",4,5,5,3,2,3,3,71,0,0,1,0,0.0,0
93,3,train,"Give me the headquarter, that is a region and a settlement, of Lake Clark National Park and Preserve.",SELECT ?result WHERE { ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Region>. <http://dbpedia.org/resource/Lake_Clark_National_Park_and_Preserve> <http://dbpedia.org/ontology/location> ?result . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?headquarters WHERE {
  ?park dbo:administrativeRegion ?region .
  ?park dbo:headquarters ?headquarters .
  
  FILTER (?park = dbr:Lake_Clark_National_Park_and_Preserve)
  
  ?headquarters a dbo:Region ;
                a (dbo:Settlement|dbo:City) .
}
```",1,3,2,1,1,3,2,20,0,0,5,0,0.0,0
102,5,train,"Give me the residence, that is English and a settlement, of Peter Finbow.",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/United_Kingdom>. ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. <http://dbpedia.org/resource/Peter_Finbow> <http://dbpedia.org/property/residence> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>

SELECT ?residence WHERE {
  ?person dbo:birthName ""Peter Finbow""@en.
  ?person dbo:residence ?residence.
  ?residence rdf:type dbo:Settlement.
  OPTIONAL { ?residence dbo:country dbr:England. }
}
```",1,3,2,1,1,3,2,20,0,0,1,0,0.0,0
527,8,train,"Give me the author of the work, that is a work and a book, of Tom Baker.",SELECT ?result WHERE { ?v0 <http://dbpedia.org/property/author> ?result . ?v0 <http://dbpedia.org/property/author> <http://dbpedia.org/resource/Tom_Baker> . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Book>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>

SELECT ?book ?authorName WHERE {
  ?work dbo:creator ?tomBaker .
  ?tomBaker foaf:name ""Tom Baker"" .
  ?work rdf:type dbo:Book .
  ?work rdfs:label ?book .
  OPTIONAL { ?work dbo:author ?author . }
  BIND (COALESCE(?author, ?tomBaker) AS ?author)
  ?author foaf:name ?authorName
}
```",2,4,3,2,1,3,2,20,0,0,1,0,0.0,0
433,10,train,Give me the associated musical artist of Paul Chambers and professional in Musician.,"SELECT ?result WHERE { ?result <http://dbpedia.org/property/occupation> ""Musician""@en . <http://dbpedia.org/resource/Paul_Chambers> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?artist WHERE {
  VALUES ?paulChambers { dbr:Paul_Chambers_(bassist) }
  
  ?paulChambers dbo:associatedBand ?band .
  ?band dbo:member ?artist .

  FILTER(?artist != ?paulChambers)
}
```",2,2,3,1,2,3,3,71,0,0,15,0,0.0,0
273,12,train,Give me the parent of the alumnus of University of Turin and spouse of Edoardo Agnelli (industrialist).,SELECT ?result WHERE { ?v0 <http://dbpedia.org/ontology/almaMater> <http://dbpedia.org/resource/University_of_Turin> . ?v0 <http://dbpedia.org/ontology/parent> ?result . ?result <http://dbpedia.org/ontology/spouse> <http://dbpedia.org/resource/Edoardo_Agnelli_(industrialist)> . },"```sparql
SELECT ?spouse ?parent WHERE {
  # Find Edoardo Agnelli's spouse
  dbpedia:Edoardo_Agnelli_(industrialist) dbo:spouse ?spouse .
  
  # Check if the spouse is an alumnus of University of Turin
  ?spouse dbo:almaMater dbr:University_of_Turin .

  # Find parent(s) of the identified spouse
  OPTIONAL { ?spouse dbo:parent ?parent . }
}
```",3,3,4,2,2,3,2,20,0,0,1,0,0.0,0
715,6,train,Give me the force of Francisco Largo Caballero.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Francisco_Largo_Caballero> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?role ?startYear ?endYear
WHERE {
  VALUES ?person { dbr:Franco_Largo_Caballero }
  ?person dbo:occupation ?role .
  OPTIONAL { ?role dbo:beginDate ?startYear . }
  OPTIONAL { ?role dbo:endDate ?endYear . }
  FILTER(?role != dbr:Prime_Minister_of_Spain)
}
ORDER BY DESC(?startYear)
```",1,1,2,1,1,3,3,71,0,0,1,0,0.0,0
926,37,train,Give me the successor of the child of the spouse of Şermi Kadın and child of Ahmed III.,SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/spouse> <http://dbpedia.org/resource/Şermi_Kadın> . <http://dbpedia.org/resource/Ahmed_III> <http://dbpedia.org/ontology/child> ?result . ?v2 <http://dbpedia.org/property/father> ?v1 . ?v2 <http://dbpedia.org/ontology/successor> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?successor WHERE {
  # Şermi Kadın's spouse is Mustafa II
  dbr:Sultan_Mustafa_II dbo:spouse dbr:Şermi_Kadın .
  
  # Mustafa III is the child of Mustafa II and thus a child of Ahmed III
  ?mustafaIII dbo:childOf dbr:Sultan_Mustafa_II ;
              dbo:childOf dbr:Aḥmed_III .

  # Abdul Hamid I is the successor of Mustafa III
  ?successor dbo:predecessor ?mustafaIII .
  
  FILTER(?mustafaIII = dbr:Mustafa_III)
}
```",4,4,5,3,2,3,3,71,0,0,1,0,0.0,0
826,3,train,Give me the father of Anna Magdalena Appel.,SELECT ?result WHERE { <http://dbpedia.org/resource/Anna_Magdalena_Appel> <http://dbpedia.org/property/father> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>

SELECT ?father WHERE {
  ?person a dbo:Person ;
          foaf:name ""Anna Magdalena Appel""@en .
  ?person dbo:father ?father .
}
```",1,1,2,1,1,3,3,71,0,0,1,0,0.0,0
606,3,train,"Give me the nickname of DeKalb, Illinois.","SELECT ?result WHERE { <http://dbpedia.org/resource/DeKalb,_Illinois> <http://dbpedia.org/property/nickname> ?result . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?nickname WHERE {
  ?place a dbo:PopulatedPlace ;
        rdfs:label ""DeKalb, Illinois""@en .
  OPTIONAL { ?place dbo:nickName ?nickname . }
}
```",1,1,2,1,1,3,2,20,0,0,1,0,0.0,0
47,4,train,Give me the administration of Jagdeep Dhankhar.,SELECT ?result WHERE { ?result <http://dbpedia.org/property/governor> <http://dbpedia.org/resource/Jagdeep_Dhankhar> . },"```sparql
SELECT ?administration WHERE {
  ?person foaf:name ""Jagdeep Dhankhar""@en .
  ?person dbo:position dbr:Vice_President_of_India .
  ?person dbo:memberOf ?party .
  ?party dbo:head ?leader .
  ?leader dbo:officeHolder ?office .
  ?office dbo:holder ?currentLeader .
  ?currentLeader dbo:memberOf ?administration .
}
```",1,1,2,1,1,3,3,71,0,0,49,0,0.0,0
791,6,train,Give me the child of Emperor Takakura.,SELECT ?result WHERE { ?result <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Emperor_Takakura> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?child WHERE {
  ?person a dbo:Monarch ;
          foaf:name ""Takakura""@en .
  OPTIONAL { ?person dbo:spouse ?spouse . }
  ?person dbo:child ?child .
}
```",1,1,2,1,1,3,3,71,0,0,3,0,0.0,0
582,24,train,"Give me the figure known as --10-19 and player in the father, that is an athlete and a soccer manager and a sports manager, of Masami Nagasawa.","SELECT ?result WHERE { ?result <http://dbpedia.org/property/nickname> ""--10-19""^^<http://www.w3.org/2001/XMLSchema#gMonthDay> . ?v2 <http://dbpedia.org/ontology/team> ?result . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Athlete>. <http://dbpedia.org/resource/Masami_Nagasawa> <http://dbpedia.org/property/father> ?v2 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerManager>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsManager>. }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?fatherName ?nickname WHERE {
  ?masami a dbo:Person ;
          foaf:name ""Masami Nagasawa""@en .
  ?masami dbo:parent ?father .
  ?father foaf:name ?fatherName .
  OPTIONAL { 
    ?father dbp:nickname ?nickname .
  }
  FILTER(CONTAINS(?nickname, ""-10-19""))
  
  # Check if the father is an athlete
  ?father dbo:occupation ?occupation .
  VALUES ?athleteTypes {dbo:Athlete dbo:SoccerPlayer}
  ?athleteTypes rdfs:subClassOf* ?occupation .

  # Check if the father is a soccer manager or sports manager
  OPTIONAL {
    ?father dbo:manager ?team .
    ?team a dbo:SoccerTeam ;
          dbo:coach ?father .
  }
  
  OPTIONAL {
    ?father dbo:occupation [a dbo:SportsManager] .
  }
}
```",3,6,4,2,2,3,3,71,0,0,1,0,0.0,0
98,7,train,Give me the region of Philippine Standard Time and entity in Philippines.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Philippines> . ?result <http://dbpedia.org/ontology/timeZone> <http://dbpedia.org/resource/Philippine_Standard_Time> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?regionLabel ?entityLabel WHERE {
  # Find the region associated with Philippine Standard Time
  ?timeZone a dbo:TimeZone ;
            rdfs:label ""Philippine Standard Time""@en .
  
  ?place dbo:timeZone ?timeZone ;
         rdfs:label ?regionLabel .

  FILTER (lang(?regionLabel) = 'en')

  # Find an entity in the Philippines
  OPTIONAL {
    ?entity a dbo:Place ;
            dbo:country dbr:Philippines ;
            rdfs:label ?entityLabel .
    
    FILTER (lang(?entityLabel) = 'en')
  }
}
LIMIT 1
```",2,2,3,1,2,2,3,28,0,0,1743,0,0.0,0
465,13,train,"Give me the spouse of the child, that is a royalty, of Ferdinand I, Holy Roman Emperor.","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/spouse> ?v1 . <http://dbpedia.org/resource/Ferdinand_I,_Holy_Roman_Emperor> <http://dbpedia.org/ontology/child> ?v1 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. }","```sparql
SELECT ?spouse WHERE {
  # Identify Ferdinand I, Holy Roman Emperor
  wd:Ferdinand_I,_Holy_Roman_Emperor dbo:child ?royalChild .
  
  # Ensure the child is royalty (has a royal title)
  ?royalChild wdt:P39 wd:Q11696 .  # P39 is ""position held"" and Q11696 represents ""monarch""
  
  # Find the spouse of this royal child
  ?royalChild dbp:spouse ?spouse .
}
```",2,3,3,2,1,3,3,71,0,0,7,0,0.0,0
839,29,train,Give me the band of the member of Böhse Onkelz and band of Matthias Röhr and band of Kevin Russell (musician).,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/bandMember> <http://dbpedia.org/resource/Matthias_Röhr> . <http://dbpedia.org/resource/Böhse_Onkelz> <http://dbpedia.org/ontology/bandMember> ?v3 . <http://dbpedia.org/resource/Kevin_Russell_(musician)> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?result <http://dbpedia.org/ontology/bandMember> ?v3 . },"```sparql
SELECT ?band1 ?band2 ?band3 WHERE {
  # Stephan Weidner's band (Böhse Onkelz)
  dbpedia:Stephan_Weidner dbo:musicArtist dbpedia:Bhse_Onkelz .
  BIND(dbpedia:Bhse_Onkelz AS ?band1)

  # Matthias Röhr's bands
  dbpedia:Matthias_Rohr dbo:musicArtist dbpedia:Eisbrecher .
  BIND(dbpedia:Eisbrecher AS ?band2)

  # Kevin Russell's band (The Black Crowes)
  dbpedia:Kevin_Russell_(musician) dbo:musicArtist dbpedia:The_Black_Crowes .
  BIND(dbpedia:The_Black_Crowes AS ?band3)
}
```",4,4,5,2,3,3,3,71,0,0,1,0,0.0,0
987,39,train,"Give me the entity in the region, that is a country, of the time zone, that is a sports event, in Canicosa de la Sierra and birth place of Moamer Kasumović.",SELECT ?result WHERE { ?v0 <http://dbpedia.org/property/timeZone> ?v2 . ?result <http://dbpedia.org/ontology/country> ?v0 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. <http://dbpedia.org/resource/Canicosa_de_la_Sierra> <http://dbpedia.org/ontology/timeZone> ?v2 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsEvent>. <http://dbpedia.org/resource/Moamer_Kasumović> <http://dbpedia.org/ontology/birthPlace> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?country WHERE {
  # Step 1: Find Canicosa de la Sierra's time zone
  dbr:Canicosa_de_la_Sierra dbo:timeZone ?timezone .

  # Step 2: Identify sports events in that time zone
  ?event dbo:timeZone ?timezone ;
         a dbo:SportsEvent .

  # Step 3: Determine Moamer Kasumović's birthplace
  dbr:Radovan_Karadžić dbo:birthPlace ?birthPlace .

  # Step 4: Find the country of the region associated with the sports event and birthplace
  ?region dbo:country ?country ;
          dbo:location ?event .
  
  ?birthRegion dbo:country ?country ;
               dbr:Radovan_Karadžić dbo:birthPlace ?birthRegion .

}
```",4,6,5,3,2,3,3,71,0,0,1,0,0.0,0
102,2,train,"Give me the member, that is a soccer player, of England women's national football team.",SELECT ?result WHERE { ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerPlayer>. ?result <http://dbpedia.org/ontology/team> <http://dbpedia.org/resource/England_women's_national_football_team> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?player WHERE {
  ?team rdfs:label ""England women's national football team""@en .
  ?team dbo:member ?player .
  ?player rdf:type dbo:SoccerPlayer .
}
```",1,2,2,1,1,3,2,20,0,0,147,0,0.0,0
865,26,train,"Give me the father of the child, that is a politician, of the spouse of Syeda Shahar Banu.",SELECT ?result WHERE { ?v1 <http://dbpedia.org/property/father> ?v0 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. <http://dbpedia.org/resource/Syeda_Shahar_Banu> <http://dbpedia.org/ontology/spouse> ?v0 . ?v1 <http://dbpedia.org/property/father> ?result . },"```sparql
SELECT ?politicianChildFather WHERE {
  # Step 1: Identify Syeda Shahar Banu
  ?syeda a dbo:Person ;
         foaf:name ""Syeda Shahar Banu""@en .

  # Step 2: Find her spouse
  ?syeda dbo:spouse ?spouse .

  # Step 3: Identify children of the spouse
  ?spouse dbo:child ?child .

  # Step 4: Filter politician children
  ?child dbo:occupation ?occupation .
  FILTER(CONTAINS(LCASE(?occupation), ""politician""))

  # Step 5: Find the father of the politician child
  ?child dbo:father ?politicianChildFather .
}
```",3,4,4,3,1,3,3,71,0,0,1,0,0.0,0
41,18,train,"Give me the party of the work, that is an office holder, of yes and party of Declan Costello.","SELECT ?result WHERE { ?v1 <http://dbpedia.org/property/author> ""yes""@en . <http://dbpedia.org/resource/Declan_Costello> <http://dbpedia.org/ontology/party> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v1 <http://dbpedia.org/ontology/party> ?result . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?person ?partyLabel ?officeLabel WHERE {
  VALUES ?person { 
    dbr:Boris_Johnson 
    dbr:Declan_Costello 
  }
  
  OPTIONAL {
    ?person dbo:politicalParty ?party .
    ?party rdfs:label ?partyLabel .
    FILTER (lang(?partyLabel) = 'en')
  }

  OPTIONAL {
    ?person dbo:officeHeld ?office .
    ?office rdfs:label ?officeLabel .
    FILTER (lang(?officeLabel) = 'en')
  }
}
```",3,4,4,2,2,2,3,28,0,2,1,0.0,0.0,0
978,7,train,"Give me the band member of the professional, that is a musical artist and an artist, in .","SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?result <http://dbpedia.org/ontology/associatedMusicalArtist> ?v1 . ?v1 <http://dbpedia.org/property/occupation> """"@en . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?member WHERE {
  ?band a dbo:Band ;
        rdfs:label ""BandName""@en. # Replace ""BandName"" with the actual band name

  ?band dbo:member ?member .

  OPTIONAL { 
    ?member dbo:occupation dbp:MusicalArtist . # Ensure they are a musical artist
  }

  OPTIONAL {
    ?member dbo:occupation dbp:Artist . # Ensure they are an artist in another context
  }
}
```

Note: Replace `""BandName""` with the actual name of the band you're interested in. This query assumes that DBpedia has structured data for both musical and other artistic occupations.",2,4,3,2,1,3,2,20,0,0,9007,0,0.0,0
18,0,train,Give me the professional in .,"SELECT ?result WHERE { ?result <http://dbpedia.org/property/occupation> """"@en . }","```sparql
# This is a placeholder query since the question lacks specificity.
SELECT ?person WHERE {
  ?person dbo:field dbr:Physics .
}
```

This example assumes we are looking for individuals in the field of Physics. However, without knowing the specific profession or domain from the original question, this remains a hypothetical query.",1,1,2,1,1,2,3,28,0,0,39640,0,0.0,0
453,5,train,"Give me the religion of the birth place, that is a country, of William Denning.",SELECT ?result WHERE { <http://dbpedia.org/resource/William_Denning> <http://dbpedia.org/ontology/birthPlace> ?v1 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. ?v1 <http://dbpedia.org/ontology/religion> ?result . },"```sparql
# Step 1: Find William Denning's birthplace
SELECT ?birthPlace WHERE {
    dbpedia:William_Denning dbo:birthPlace ?birthPlace .
}

# Assuming the result of the above query gives us a specific birthplace, let's call it <BirthPlaceURI>

# Step 2: Check if the birthplace is a country
ASK {
    <BirthPlaceURI> rdf:type dbo:Country .
}

# If the ASK query returns true, proceed to step 3

# Step 3: Find the predominant religion of the country
SELECT ?religion WHERE {
    <BirthPlaceURI> dbo:religion ?religion .
}
```

Note: Replace `<BirthPlaceURI>` with the actual URI obtained from the first query.",2,3,3,2,1,2,2,9,0,0,1,0,0.0,0
573,38,train,"Give me the parent of the author, that is a politician and an office holder, of Exchequer Standards and person decedent at the residence, that is a settlement, of William J. Phelan.",SELECT ?result WHERE { ?v2 <http://dbpedia.org/ontology/parent> ?result . <http://dbpedia.org/resource/William_J._Phelan> <http://dbpedia.org/property/residence> ?v3 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. ?result <http://dbpedia.org/ontology/deathPlace> ?v3 . <http://dbpedia.org/resource/Exchequer_Standards> <http://dbpedia.org/property/author> ?v2 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?parent WHERE {
  # Step 1: Find the residence (settlement) of William J. Phelan
  dbr:William_J._Phelan dbo:placeOfDeath ?residence .

  # Step 2: Identify the author of ""Exchequer Standards""
  ?author dbo:title ""Exchequer Standards""@en .
  
  # Step 3: Check if the author is a politician and office holder
  ?author dbo:occupation dbr:Politician ;
          dbo:officeHolderOf ?office .

  # Step 4: Find the parent of this author who is also a politician and office holder
  ?parent dbo:child ?author .
  ?parent dbo:occupation dbr:Politician ;
          dbo:officeHolderOf ?parentOffice .

  # Step 5: Ensure the decedent at the residence is connected to William J. Phelan
  ?decedent dbo:placeOfDeath ?residence .
  FILTER (?decedent = ?parent)
}
```",4,7,5,2,2,3,3,71,0,0,2,0,0.0,0
459,9,train,Give me the person born as John Kevin Stitt and governor of Dana Murphy.,"SELECT ?result WHERE { ?result <http://dbpedia.org/property/birthName> ""John Kevin Stitt""@en . <http://dbpedia.org/resource/Dana_Murphy> <http://dbpedia.org/property/governor> ?result . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT ?person ?givenName ?familyName WHERE {
  ?person a dbo:Person .
  ?person foaf:givenName ?givenName .
  ?person foaf:familyName ?familyName .
  OPTIONAL { ?person dbo:birthName ""John Kevin Stitt"" . }
  OPTIONAL { ?role dbo:agent ?person ;
             dbo:title ""Governor Dana Murphy""@en . }
}
```",2,2,3,1,2,2,3,28,0,54,1,0.0,0.0,0
93,5,train,Who is the governor of Bob Bartlett?,SELECT ?result WHERE { <http://dbpedia.org/resource/Bob_Bartlett> <http://dbpedia.org/property/governor> ?result . },"```sparql
SELECT ?governor WHERE {
  ?office dbo:positionHeld dbr:Governor_of_Alaska .
  ?office dbo:officeHolder ?governor .
  ?governor foaf:name ""Bob Bartlett""@en .
}
```",1,1,2,1,1,3,2,20,0,0,2,0,0.0,0
329,4,train,"Give me the region, that is a country, of Western European Time.",SELECT ?result WHERE { ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. ?result <http://dbpedia.org/property/timeZone> <http://dbpedia.org/resource/Western_European_Time> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?country WHERE {
  ?timeZone dbo:timezoneName ""Western European Time"" .
  ?location dbo:timeZone ?timeZone ;
            a dbo:Country .
  ?location rdfs:label ?country .
  FILTER (LANG(?country) = 'en')
}
```",1,2,2,1,1,2,3,28,0,0,6,0,0.0,0
216,15,train,Give me the office of the mayor of Ros Bates and administration of .,"SELECT ?result WHERE { ?result <http://dbpedia.org/property/leader> """"@en . <http://dbpedia.org/resource/Ros_Bates> <http://dbpedia.org/property/leader> ?v1 . ?v1 <http://dbpedia.org/property/office> ?result . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT ?office ?administrativeArea WHERE {
  ?person foaf:name ""Ros Bates""@en .
  ?person dbo:office ?office .
  ?office dbo:administrativeArea ?administrativeArea .
}
```",3,3,4,2,2,2,3,28,0,0,1,0,0.0,0
47,26,train,"Give me the office of the awardee of the award, that is an award, of Mantu Ghosh.",SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Award>. <http://dbpedia.org/resource/Mantu_Ghosh> <http://dbpedia.org/property/awards> ?v1 . ?v2 <http://dbpedia.org/property/office> ?result . ?v2 <http://dbpedia.org/property/awards> ?v1 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?awardName ?awardeeOffice WHERE {
  # Identify Mantu Ghosh as an entity
  dbr:Mantu_Ghosh dbo:award ?award .

  # Retrieve the name of the award
  ?award rdfs:label ?awardName .

  # For each award, identify the awardees
  ?award dbo:recipient ?awardee .

  # Determine the office or position of the awardee at the time they received the award
  OPTIONAL { 
    ?awardee dbo:office ?awardeeOffice .
  }

  FILTER (lang(?awardName) = 'en')
}
```",3,4,4,3,1,3,3,71,0,0,1,0,0.0,0
715,21,train,"Give me the commander in the force, that is a military conflict, of Abd el-Krim and leader of Ministry of the Air (Spain).",SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Abd_el-Krim> . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. <http://dbpedia.org/resource/Ministry_of_the_Air_(Spain)> <http://dbpedia.org/ontology/leader> ?result . ?v1 <http://dbpedia.org/ontology/commander> ?result . },"```sparql
SELECT ?person WHERE {
  ?person dbo:spouse ?abdElKrim .
  FILTER EXISTS { ?abdElKrim rdfs:label ""Abd el-Krim""@en }
  
  OPTIONAL { 
    ?conflict dbo:commander ?person .
    FILTER EXISTS { ?conflict rdfs:label ""Rif War""@en }
  }

  OPTIONAL {
    ?ministry dbo:leader ?person .
    FILTER EXISTS { ?ministry rdfs:label ""Ministry of the Air (Spain)""@en }
  }
}
```",3,4,4,2,2,3,3,71,0,0,1,0,0.0,0
715,20,train,Give me the commander in the force of Francisco Largo Caballero and commander in Rif War.,SELECT ?result WHERE { ?v2 <http://dbpedia.org/ontology/commander> ?result . <http://dbpedia.org/resource/Rif_War> <http://dbpedia.org/ontology/commander> ?result . ?v2 <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Francisco_Largo_Caballero> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?commander1 ?commander2 WHERE {
  # Commander associated with Francisco Largo Caballero
  OPTIONAL {
    ?person dbo:spouse dbr:Fran%C3%A7ois_Largo_Caballero .
    ?person dbo:occupation dbr:Military_person .
    ?person rdfs:label ?commander1 FILTER (lang(?commander1) = 'en') .
  }
  
  # Commander in the Rif War
  OPTIONAL {
    ?rifLeader dbo:spouse ? . # Placeholder to find relevant person
    ?rifLeader dbo:occupation dbr:Military_person .
    ?rifLeader dbo:wikiPageWikiLink dbr:Rif_War .
    ?rifLeader rdfs:label ?commander2 FILTER (lang(?commander2) = 'en') .
  }
}
```",3,3,4,2,2,3,3,71,0,0,4,0,0.0,0
459,4,train,"Who is the administration, that is a politician, of Brad Henry?",SELECT ?result WHERE { ?result <http://dbpedia.org/property/governor> <http://dbpedia.org/resource/Brad_Henry> . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?party WHERE {
  ?person dbo:officeHolderOf dbr:Governor_of_Oklahoma.
  ?person foaf:name ""Brad Henry""@en.
  OPTIONAL { ?person dbo:politicalParty ?party. }
}
```",1,2,2,1,1,2,3,28,0,0,30,0,0.0,0
582,17,train,"Give me the nickname of the team, that is an organisation, of Hajime Moriyasu.",SELECT ?result WHERE { ?v1 <http://dbpedia.org/property/nickname> ?result . ?v1 <http://dbpedia.org/ontology/coach> <http://dbpedia.org/resource/Hajime_Moriyasu> . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. },"```sparql
SELECT ?team ?nickname WHERE {
  ?person dbo:occupation dbp:Football_manager .
  ?person foaf:name ""Hajime Moriyasu""@en .
  
  ?person dbo:managerOf ?team .
  
  OPTIONAL { 
    ?team rdfs:label ?teamLabel .
    FILTER (lang(?teamLabel) = 'en')
  }
  
  OPTIONAL {
    ?team dbp:nickname ?nickname .
    FILTER (lang(?nickname) = 'en')
  }
}
```",2,3,3,2,1,3,3,71,0,0,1,0,0.0,0
456,25,train,"Give me the band of the band, that is a musical artist, of Dean Brody and professional in .","SELECT ?result WHERE { ?result <http://dbpedia.org/property/occupation> """"@en . ?v1 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. <http://dbpedia.org/resource/Dean_Brody> <http://dbpedia.org/ontology/associatedMusicalArtist> ?v1 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?band WHERE {
  ?person rdfs:label ""Dean Brody""@en.
  ?person dbo:associatedBand ?band.
}
```",3,4,4,2,2,3,3,71,0,2,1,0.0,0.0,0
281,10,train,"Give me the awardee of the award, that is a military conflict, of Lawrence Moore Cosgrave.",SELECT ?result WHERE { ?result <http://dbpedia.org/property/awards> ?v1 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. <http://dbpedia.org/resource/Lawrence_Moore_Cosgrave> <http://dbpedia.org/property/awards> ?v1 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?conflict WHERE {
  dbr:Lt._Lawrence_Moore_Cosgrave dbo:recipientOf dbr:Victoria_Cross.
  ?vc dbo:awardedFor ?conflict.
}
```",2,3,3,2,1,2,3,28,0,0,656,0,0.0,0
874,13,train,"Give me the band of the writer, that is an artist and a musical artist, of the work, that is a work, of Horace Andy.",SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. ?v0 <http://dbpedia.org/property/writer> <http://dbpedia.org/resource/Horace_Andy> . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?result <http://dbpedia.org/ontology/bandMember> ?v1 . ?v0 <http://dbpedia.org/property/writer> ?v1 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?band WHERE {
  # Horace Andy as subject
  dbr:Horace_Andy a dbo:MusicalArtist .

  # Find works by Horace Andy
  ?work dbo:artist dbr:Horace_Andy ;
        a dbo:Work .

  # Identify artists involved in these works who are also writers and musicians
  ?work dbo:contributor ?contributingArtist .
  ?contributingArtist a dbo:MusicalArtist, dbo:Writer .

  # Find the band associated with this contributing artist
  ?band dbo:member ?contributingArtist .
}
```",3,6,4,3,1,3,2,20,0,0,6,0,0.0,0
41,16,train,"Give me the party of the work, that is an office holder, of yes and party of Mark Durkan.","SELECT ?result WHERE { ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v0 <http://dbpedia.org/property/author> ""yes""@en . ?v0 <http://dbpedia.org/ontology/party> ?result . <http://dbpedia.org/resource/Mark_Durkan> <http://dbpedia.org/ontology/party> ?result . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?person ?partyLabel WHERE {
  VALUES ?person { 
    dbr:Jeremy_Corbyn 
    dbr:Mark_Durkan 
  }
  
  ?person dbo:politicalParty ?party .
  SERVICE wikibase:label { bd:serviceParam wikibase:language ""[AUTO_LANGUAGE],en"". }

}
```",3,4,4,2,2,2,3,28,0,0,1,0,0.0,0
508,14,train,"Give me the birthplace of the commander, that is Saudi, in the war, that is a military conflict and a societal event, of Hu Yukun.",SELECT ?result WHERE { ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v2 <http://dbpedia.org/ontology/commander> ?v0 . ?v0 <http://dbpedia.org/ontology/birthPlace> ?result . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?v0 <http://dbpedia.org/ontology/nationality> <http://dbpedia.org/resource/Saudi_Arabia>. <http://dbpedia.org/resource/Hu_Yukun> <http://dbpedia.org/ontology/battle> ?v2 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?birthPlace WHERE {
  ?person dbo:nationality dbr:Saudi_Arabia .
  ?person dbo:occupation dbr:Military_officer .
  ?person dbo:birthPlace ?birthPlace .

  OPTIONAL { 
    ?conflict dbo:location ?location .
    ?conflict dbo:participant ?person .
    FILTER(CONTAINS(LCASE(?location), ""yemen"")) # Assuming Yemen as a potential conflict location
  }

  OPTIONAL {
    ?huYukun dbo:nationality dbr:China .
    ?huYukun dbo:occupation dbr:Military_officer .
    ?conflict dbo:participant ?huYukun .
  }
}
```",3,6,4,3,1,3,2,20,0,0,3,0,0.0,0
47,10,train,Give me the office of Suvendu Adhikari and office of Ajoy Mukherjee.,SELECT ?result WHERE { <http://dbpedia.org/resource/Suvendu_Adhikari> <http://dbpedia.org/property/office> ?result . <http://dbpedia.org/resource/Ajoy_Mukherjee> <http://dbpedia.org/property/office> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?person ?officeLabel WHERE {
  VALUES ?person { 
    dbr:Suvendu_Adhikari 
    dbr:Ajoy_Mukherjee 
  }
  
  ?person dbo:office ?office .
  SERVICE wikibase:label { bd:serviceParam wikibase:language ""[AUTO_LANGUAGE],en"". }
}
```",2,2,3,1,2,3,3,71,0,0,1,0,0.0,0
93,12,train,Give me the death place of the governor of Bob Bartlett and capital of Alaska.,SELECT ?result WHERE { ?v0 <http://dbpedia.org/ontology/deathPlace> ?result . <http://dbpedia.org/resource/Bob_Bartlett> <http://dbpedia.org/property/governor> ?v0 . <http://dbpedia.org/resource/Alaska> <http://dbpedia.org/ontology/capital> ?result . },"```sparql
SELECT ?deathPlace ?capital WHERE {
  # Query for Bob Bartlett's death place
  dbpedia:Bob_Bartlett dbo:placeOfBirth ?birthPlace .
  dbpedia:Bob_Bartlett dbo:deathPlace ?deathPlace .

  # Query for the capital of Alaska
  dbpedia:Alaska dbo:capital ?capital .
}
```",3,3,4,2,2,3,2,20,0,0,1,0,0.0,0
955,10,train,"Who is the band member, that is a musical artist and an artist, of the reference, that is a band and a group and an organisation, to Street Dogs?","SELECT ?result WHERE { ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?v0 <http://xmlns.com/foaf/0.1/name> ""Street Dogs""@en . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Group>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Band>. ?result <http://dbpedia.org/ontology/associatedMusicalArtist> ?v0 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?member WHERE {
  # Identify Street Dogs as a band, group, or organization
  dbr:Street_Dogs a ?type1 .
  
  FILTER(?type1 IN (dbo:Band, dbo:MusicalGroup, dbo:Organization))

  # Find members of the band
  ?bandMember dbo:member ?streetDogs .
  ?bandMember a ?type2 .

  FILTER(?type2 IN (dbo:Person, dbo:Artist))
  
  # Ensure they are musical artists and artists
  ?bandMember dbo:musicalArtist dbr:Street_Dogs .
  ?bandMember dbo:artist dbr:Street_Dogs .

  BIND(?bandMember AS ?member)
}
```",2,7,3,2,1,3,2,20,0,0,2,0,0.0,0
465,5,train,Give me the parent of Elizabeth of Austria (1526–1545).,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Elizabeth_of_Austria_(1526–1545)> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?parent WHERE {
  ?person a dbo:Person ;
          dbo:birthYear ""1526""^^xsd:gYear ;
          dbo:deathYear ""1545""^^xsd:gYear .
  OPTIONAL { ?person dbo:parent ?parent . }
  FILTER (strstarts(str(?person), str(dbr:Elizabeth_of_Austria_(1526–1545))))
}
```",1,1,2,1,1,3,3,71,0,0,2,0,0.0,0
329,2,train,Give me the entity in Northern Ireland.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Northern_Ireland> . },"```sparql
PREFIX dbp: <http://dbpedia.org/property/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?entity ?name WHERE {
  ?entity dbp:country <http://dbpedia.org/resource/Northern_Ireland> .
  ?entity rdfs:label ?name .
  FILTER (lang(?name) = 'en')
}
```",1,1,2,1,1,2,3,28,197,351,649,0.3594890510948905,0.23286052009456265,0.2826398852223817
933,9,train,Give me the band of Mike Elliott (saxophonist) and reference to Alan Warner.,"SELECT ?result WHERE { ?result <http://xmlns.com/foaf/0.1/name> ""Alan Warner""@en . <http://dbpedia.org/resource/Mike_Elliott_(saxophonist)> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?band ?description WHERE {
  # Find the band associated with Mike Elliott (saxophonist)
  ?person a dbo:Saxophonist ;
          foaf:name ""Mike Elliott"" .
  
  OPTIONAL { 
    ?person dbo:memberOfBand ?band .
  }
  
  # Check if Alan Warner is mentioned in the description of the band
  ?band dbo:description ?description .
  FILTER(CONTAINS(LCASE(?description), LCASE(""alan warner"")))
}
```",2,2,3,1,2,3,3,71,0,0,1,0,0.0,0
917,4,train,"Who is the child, that is a royalty, of Kamehameha IV?",SELECT ?result WHERE { ?result <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Kamehameha_IV> . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?child ?title WHERE {
  # Kamehameha IV's resource identifier in DBpedia
  dbr:Kamehameha_IV dbo:child ?child .
  
  OPTIONAL { 
    ?child dbo:title ?title .
    FILTER(CONTAINS(LCASE(?title), ""king"") || CONTAINS(LCASE(?title), ""queen"") || CONTAINS(LCASE(?title), ""prince"") || CONTAINS(LCASE(?title), ""princess""))
  }
}
```",1,2,2,1,1,3,3,71,1,1,0,0.5,1.0,0.6666666666666666
933,36,train,"Give me the band of the band, that is a group and a band and an organisation, of the person born, that is a musical artist, on 1947-04-21 and band of Mike Elliott (saxophonist).","SELECT ?result WHERE { ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Band>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. <http://dbpedia.org/resource/Mike_Elliott_(saxophonist)> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v3 <http://dbpedia.org/ontology/associatedMusicalArtist> ?v0 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Group>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?v3 <http://dbpedia.org/ontology/birthDate> ""1947-04-21""^^<http://www.w3.org/2001/XMLSchema#date> . ?v0 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . }","```sparql
SELECT DISTINCT ?band WHERE {
  # Step 1: Find the person born on 1947-04-21 who is a musical artist
  ?person dbo:birthday ""1947-04-21""^^xsd:date ;
          rdf:type dbo:MusicalArtist .
  
  # Step 2: Find bands associated with Mike Elliott (saxophonist)
  ?mikeElliott dbo:memberOfBand ?band ;
               rdfs:label ""Mike Elliott (saxophonist)""@en .

  # Step 3: Check if the person from step 1 is also a member of the same band
  ?person dbo:memberOfBand ?band .
}
```",4,8,5,3,2,3,3,71,0,0,3,0,0.0,0
715,36,train,"Give me the commander in Rif War and leader of the office, that is a government agency and an organisation, of the reference to Carlos Franco Iribarnegaray.","SELECT ?result WHERE { ?v0 <http://xmlns.com/foaf/0.1/name> ""Carlos Franco Iribarnegaray""@en . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?v0 <http://dbpedia.org/property/office> ?v1 . <http://dbpedia.org/resource/Rif_War> <http://dbpedia.org/ontology/commander> ?result . ?v1 <http://dbpedia.org/ontology/leader> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/GovernmentAgency>. }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?commanderRole ?agencyLeader WHERE {
  # Identify Carlos Franco Iribarnegaray
  VALUES ?person { dbr:Claudio_Franco_Iribarnegaray }

  # Check if he was a commander in the Rif War
  OPTIONAL {
    ?person dbo:role ?commanderRole .
    FILTER(CONTAINS(LCASE(STR(?commanderRole)), ""rif war"") && CONTAINS(LCASE(STR(?commanderRole)), ""commander""))
  }
  
  # Find leadership role in a government agency or organization
  OPTIONAL {
    ?person dbo:positionHeld ?agencyLeader .
    FILTER(CONTAINS(LCASE(STR(?agencyLeader)), ""government"") || CONTAINS(LCASE(STR(?agencyLeader)), ""organization""))
  }
}
```",4,6,5,3,2,3,3,71,0,0,1,0,0.0,0
865,20,train,"Give me the father of the child, that is a politician, of Abu Ahmad Abdul Hafiz and native of British Raj.",SELECT ?result WHERE { ?v2 <http://dbpedia.org/property/father> ?result . ?v2 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Abu_Ahmad_Abdul_Hafiz> . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?result <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/British_Raj> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?child ?father WHERE {
  # Find Abu Ahmad Abdul Hafiz
  ?abuHafiz a dbo:Person ;
            foaf:name ""Abu Ahmad Abdul Hafiz""@en .

  # Find children of Abu Ahmad Abdul Hafiz who are politicians and natives of British Raj
  ?abuHafiz dbo:child ?child .
  ?child dbo:nationality dbr:British_Raj ;
         a dbo:Politician .

  # Get the father of that child
  ?child dbo:father ?father .
}
```",3,4,4,2,2,3,3,71,0,0,1,0,0.0,0
459,7,train,Give me the person born as John Kevin Stitt and governor of Oklahoma.,"SELECT ?result WHERE { <http://dbpedia.org/resource/Oklahoma> <http://dbpedia.org/property/governor> ?result . ?result <http://dbpedia.org/property/birthName> ""John Kevin Stitt""@en . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?person WHERE {
  ?person dbo:birthName ""John Kevin Stitt""@en .
  ?person dbo:officeHolder [
    a dbo:Office ;
    dbo:title dbr:Governor_of_Oklahoma
  ] .
}
```",2,2,3,1,2,2,3,28,0,0,1,0,0.0,0
281,18,train,Give me the awardee of the award of Alfred Warden and awardee of Medal bar.,SELECT ?result WHERE { ?result <http://dbpedia.org/property/awards> ?v2 . <http://dbpedia.org/resource/Alfred_Warden> <http://dbpedia.org/property/awards> ?v2 . ?result <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/Medal_bar> . },"```sparql
SELECT DISTINCT ?awardName ?recipientName WHERE {
  # Alfred P. Sloan Award
  { 
    ?s dbo:award dbr:Alfred_P._Sloan_Award .
    ?s foaf:name ?recipientName .
    BIND(""Alfred P. Sloan Award"" AS ?awardName)
  }
  
  UNION
  
  # Medal bar (assuming a known medal, e.g., ""Medal of Honor"")
  { 
    ?s dbo:award dbr:Medal_of_Honor_(United_States) .
    ?s foaf:name ?recipientName .
    BIND(""Medal of Honor"" AS ?awardName)
  }
}
ORDER BY ?awardName
```",3,3,4,2,2,2,3,28,0,0,1,0,0.0,0
917,13,train,Give me the child of the father of Keʻelikōlani.,SELECT ?result WHERE { <http://dbpedia.org/resource/Keʻelikōlani> <http://dbpedia.org/property/father> ?v1 . ?result <http://dbpedia.org/ontology/parent> ?v1 . },"```sparql
SELECT ?child WHERE {
  ?keelikolani dbo:parent dbc:Keʻelikōlani.
  ?father dbo:spouse ?keelikolani.
  ?father dbo:child ?child.
}
```",2,2,3,2,1,3,3,71,0,0,6,0,0.0,0
579,9,train,"Give me the residence, that is English and a settlement, of the resident of Scotland.",SELECT ?result WHERE { ?v0 <http://dbpedia.org/property/residence> ?result . ?result <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/United_Kingdom>. ?v0 <http://dbpedia.org/ontology/residence> <http://dbpedia.org/resource/Scotland> . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?person ?settlement WHERE {
  ?person dbo:nationality dbr:Scotland .
  ?person dbo:residence ?settlement .
  ?settlement a dbo:Settlement ;
              dbo:country dbr:United_Kingdom ;
              dbo:isPartOf dbr:England .
}
```",2,4,3,2,1,3,2,20,0,0,8,0,0.0,0
865,31,train,"Give me the native of the residence, that is a country, of the person decedent at Patna and father of AK Abdul Momen.",SELECT ?result WHERE { ?v1 <http://dbpedia.org/property/residence> ?v0 . ?v1 <http://dbpedia.org/ontology/deathPlace> <http://dbpedia.org/resource/Patna> . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. ?result <http://dbpedia.org/ontology/birthPlace> ?v0 . <http://dbpedia.org/resource/AK_Abdul_Momen> <http://dbpedia.org/property/father> ?result . },"```sparql
SELECT ?native WHERE {
  ?person dbo:father ?father .
  ?person foaf:name ""AK Abdul Momen""@en .
  
  ?father dbo:residenceLocation ?location .
  ?location rdfs:label ?locationLabel .
  FILTER(CONTAINS(LCASE(?locationLabel), ""patna"") && LCASE(?locationLabel) = ?countryLabel)
  
  ?country dbo:officialName ?countryLabel .
  ?country dbo:nativeName ?native .
}
```",4,5,5,3,2,3,3,71,0,0,1,0,0.0,0
456,12,train,Give me the band of Alan Doyle and professional in .,"SELECT ?result WHERE { ?result <http://dbpedia.org/property/occupation> """"@en . <http://dbpedia.org/resource/Alan_Doyle> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?bandName ?profession 
WHERE {
  ?person rdfs:label ""Alan Doyle""@en .
  ?person dbo:band ?band .
  ?band rdfs:label ?bandName .
  FILTER(LANG(?bandName) = 'en')
  
  ?person dbo:occupation ?occupation .
  ?occupation rdfs:label ?profession .
  FILTER(LANG(?profession) = 'en')
}
```",2,2,3,1,2,3,3,71,0,0,1,0,0.0,0
926,1,train,Give me the successor of Mustafa III.,SELECT ?result WHERE { <http://dbpedia.org/resource/Mustafa_III> <http://dbpedia.org/ontology/successor> ?result . },"```sparql
SELECT ?successor WHERE {
  dbpedia:Mustafa_III dbo:successor ?successor .
}
```",1,1,2,1,1,3,3,71,0,0,1,0,0.0,0
124,27,train,"Give me the military force of the force, that is a societal event and a military conflict, of the person born on 1850-06-24.","SELECT ?result WHERE { ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?result <http://dbpedia.org/ontology/battle> ?v2 . ?v1 <http://dbpedia.org/ontology/birthDate> ""1850-06-24""^^<http://www.w3.org/2001/XMLSchema#date> . ?v2 <http://dbpedia.org/ontology/commander> ?v1 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?person ?event ?militaryForce WHERE {
  ?person dbo:birthday ""1850-06-24""^^xsd:date .
  OPTIONAL { ?person dbo:wikiPageDisambiguates ?disambiguation . }
  
  # Find events related to the person
  ?event dbo:agent ?person ;
         a ?eventType .

  FILTER (?eventType IN (dbo:SocietalEvent, dbo:MilitaryConflict))

  # Find military forces involved in these events
  OPTIONAL { 
    ?event dbo:militaryForce ?militaryForce .
  }

  # Ensure the event is both a force and an event
  ?event rdf:type ?forceType .
  FILTER (?forceType IN (dbo:Force, dbo:Event))
  
  SERVICE wikibase:label { bd:serviceParam wikibase:language ""[AUTO_LANGUAGE],en"". }
}
```",3,5,4,3,1,3,3,71,0,0,1190,0,0.0,0
47,20,train,Give me the office of the awardee of Banga Bhushan and office of Suvendu Adhikari.,SELECT ?result WHERE { ?v2 <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/Banga_Bhushan> . <http://dbpedia.org/resource/Suvendu_Adhikari> <http://dbpedia.org/property/office> ?result . ?v2 <http://dbpedia.org/property/office> ?result . },"```sparql
# Query for the office of the awardee(s) of Banga Bibhushan
SELECT DISTINCT ?person ?office WHERE {
  ?award dcterms:isPartOf <http://dbpedia.org/resource/Category:Banga_Bibhushan_awards> .
  ?award dbo:recipient ?person .
  OPTIONAL { ?person dbo:position ?office . }
}

# Query for the office of Suvendu Adhikari
SELECT DISTINCT ?office WHERE {
  ?suvendu a dbo:Person ;
           foaf:name ""Suvendu Adhikari""@en ;
           dbo:position ?office .
}
```",3,3,4,2,2,3,3,71,0,0,1,0,0.0,0
130,12,train,"Give me the entity in the administration, that is American, of  and figure known as Vanderbilt Commodores.","SELECT ?result WHERE { ?v0 <http://dbpedia.org/property/governor> """"@en . ?v0 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/United_States>. ?result <http://dbpedia.org/ontology/state> ?v0 . ?result <http://dbpedia.org/property/nickname> <http://dbpedia.org/resource/Vanderbilt_Commodores> . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?person WHERE {
  ?person a dbo:AthleticDirector .
  ?person dbo:affiliation dbr:Vanderbilt_University .
  ?person dbo:nationality dbr:United_States .
}
```",3,4,4,2,2,3,2,20,0,0,1,0,0.0,0
926,30,train,"Give me the child of the father, that is a royalty, of Mustafa III and successor of Mustafa III and father of Mahmud II.",SELECT ?result WHERE { ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v0 <http://dbpedia.org/ontology/child> ?result . <http://dbpedia.org/resource/Mustafa_III> <http://dbpedia.org/property/father> ?v0 . <http://dbpedia.org/resource/Mahmud_II> <http://dbpedia.org/property/father> ?result . <http://dbpedia.org/resource/Mustafa_III> <http://dbpedia.org/ontology/successor> ?result . },"```sparql
SELECT ?successor WHERE {
  wd:Q123456 wdt:P22 wd:Q789012; # Mustafa III (P22: child)
  wdt:P35 wd:Q345678;           # Mustafa III (P35: instance of, royalty/Sultan)
  wdt:P136 wd:Q567890.         # Mustafa III (P136: occupation, Sultan)

  ?successor wdt:P57 wd:Q789012; # Abdul Hamid I (P57: father) is child of Mustafa III
  ?successor wdt:P35 wd:Q345678; # Abdul Hamid I (P35: instance of, royalty/Sultan)
  ?successor wdt:P136 wd:Q567890. # Abdul Hamid I (P136: occupation, Sultan)

  ?successor wdt:P54 wd:Q123456; # Abdul Hamid I (P54: predecessor) is Mustafa III
  ?successor wdt:P40 wd:Q678901. # Abdul Hamid I (P40: child) is Mahmud II
}
```",4,5,5,2,3,3,3,71,0,0,1,0,0.0,0
124,25,train,"Give me the military force of Battle of Tamai and military force of the force, that is a societal event and a military conflict, of Herbert Kitchener, 1st Earl Kitchener.","SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?v1 <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Herbert_Kitchener,_1st_Earl_Kitchener> . ?result <http://dbpedia.org/ontology/battle> <http://dbpedia.org/resource/Battle_of_Tamai> . ?result <http://dbpedia.org/ontology/battle> ?v1 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. }","```sparql
# Query for the Battle of Tamai
SELECT ?battle ?participant WHERE {
  ?battle dcterms:subject dbc:Battles_of_the_Sudan_War.
  ?battle dbo:wikiPageRedirects db:Battle_of_Tamai.
  ?battle dbo:participatingMilitaryUnit ?participant.
}

UNION

# Query for the Sudan Campaign associated with Herbert Kitchener
SELECT ?event ?militaryForce WHERE {
  ?person foaf:name ""Herbert Kitchener, 1st Earl Kitchener""@en.
  ?person dbo:wikiPageRedirects db:Herbert_Kitchener,_1st_Earl_Kitchener.
  ?event dbo:participatingPerson ?person.
  ?event dbo:subject dbc:Sudan_Campaign_(1884–1899).
  ?event dbo:militaryForce ?militaryForce.
}
```",3,5,4,2,2,3,3,71,0,0,4,0,0.0,0
326,3,train,"Give me the birthplace, that is a state and British, of David Jessel.",SELECT ?result WHERE { <http://dbpedia.org/resource/David_Jessel> <http://dbpedia.org/ontology/birthPlace> ?result . ?result <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/United_Kingdom>. ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/AdministrativeRegion>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?birthPlace WHERE {
  ?person dbo:birthName ""David Jessel"" .
  ?person dbo:birthPlace ?birthPlace .
  FILTER EXISTS { ?birthPlace a dbr:StateOrRegion . }
  FILTER EXISTS { ?birthPlace dbo:country dbr:United_Kingdom . }
}
```",1,3,2,1,1,3,2,20,0,0,1,0,0.0,0
645,38,train,"Give me the leader of the office, that is a government agency and an organisation, of Camilo Menéndez Tolosa and military force of the force, that is an event and a military conflict and a societal event, of Francisco Largo Caballero.",SELECT ?result WHERE { ?v3 <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Francisco_Largo_Caballero> . <http://dbpedia.org/resource/Camilo_Menéndez_Tolosa> <http://dbpedia.org/property/office> ?v2 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/GovernmentAgency>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?v2 <http://dbpedia.org/ontology/leader> ?result . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?result <http://dbpedia.org/ontology/battle> ?v3 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?leader ?militaryForce WHERE {
  # Find the office related to Camilo Menéndez Tolosa
  ?office dbo:type/dbo:subClassOf* dbo:GovernmentAgency ;
          dbo:type/dbo:subClassOf* dbo:Organization ;
          dbo:head dbr:Camilo_Menéndez_Tolosa .

  # Find who led this office
  ?leader dbo:positionHeld ?office .

  # Find the military force related to Francisco Largo Caballero
  ?militaryForce dbo:type/dbo:subClassOf* dbo:MilitaryConflict ;
                 dbo:type/dbo:subClassOf* dbo:SocietalEvent ;
                 dbo:type/dbo:subClassOf* dbo:Event ;
                 dbo:participatedIn dbr:Francisco_Largo_Caballero .

}
```",4,9,5,2,2,3,3,71,0,0,1,0,0.0,0
47,14,train,Give me the office of the awardee of Padma Vibhushan.,SELECT ?result WHERE { ?v1 <http://dbpedia.org/property/office> ?result . ?v1 <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/Padma_Vibhushan> . },"```sparql
SELECT ?person ?office WHERE {
  ?award dcterms:isPartOf <http://dbpedia.org/resource/Padma_Vibhushan> .
  ?award dbo:recipient ?person .
  OPTIONAL { ?person dbo:position ?office . }
}
```",2,2,3,2,1,3,3,71,0,0,77,0,0.0,0
445,26,train,Give me the death place of the awardee of the establishment of 1820-03-10.,"SELECT ?result WHERE { ?v2 <http://dbpedia.org/property/awards> ?v1 . ?v1 <http://dbpedia.org/ontology/foundingDate> ""1820-03-10""^^<http://www.w3.org/2001/XMLSchema#date> . ?v2 <http://dbpedia.org/ontology/deathPlace> ?result . }","```sparql
SELECT ?award ?awardee ?deathPlace WHERE {
  ?award dbo:established ?date .
  ?date dbr:March_10,_1820 .
  
  ?awardRecipient dbo:recipient ?awardee .
  ?award rdfs:subClassOf* dbp:Award .
  
  OPTIONAL { ?awardee dbo:deathPlace ?deathPlace . }
}
```",3,3,4,3,1,3,3,71,0,0,2,0,0.0,0
216,7,train,Give me the administration of  and office of Tim Nicholls.,"SELECT ?result WHERE { ?result <http://dbpedia.org/property/leader> """"@en . <http://dbpedia.org/resource/Tim_Nicholls> <http://dbpedia.org/property/office> ?result . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?office ?administration WHERE {
  VALUES ?tim_nicholls { dbr:Tim_Nicholls }
  
  ?position dbo:positionHeldBy ?tim_nicholls .
  ?position dbo:office ?office .
  OPTIONAL { ?position dbo:partOf ?administration . }
}
```",2,2,3,1,2,2,3,28,0,0,1,0,0.0,0
192,11,train,"Give me the child of Mary of Hungary, Queen of Naples and spouse of the spouse, that is a royalty, of Charles Martel of Anjou.","SELECT ?result WHERE { ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v2 <http://dbpedia.org/ontology/spouse> ?result . ?v2 <http://dbpedia.org/ontology/spouse> <http://dbpedia.org/resource/Charles_Martel_of_Anjou> . ?result <http://dbpedia.org/ontology/parent> <http://dbpedia.org/resource/Mary_of_Hungary,_Queen_of_Naples> . }","```sparql
SELECT ?child WHERE {
  # Find the children of Mary of Hungary, Queen of Naples
  ?mary dbo:spouse ?husband .
  ?mary foaf:name ""Mary of Hungary"" .
  ?mary dbo:title dbr:Queen_of_Naples .

  ?mary dbo:child ?child .
  
  # Find the spouse of Charles Martel of Anjou
  ?charles dbo:spouse ?spouse .
  ?charles foaf:name ""Charles Martel of Anjou"" .

  # Ensure the child is also a spouse of Charles's spouse and is royalty
  ?child dbo:spouse ?spouse .
  ?child dbo:title ?title .
  
  FILTER EXISTS { ?title rdfs:subClassOf* dbr:Royalty }
}
```",3,4,4,2,2,3,2,20,0,0,1,0,0.0,0
874,2,train,"Give me the work, that is a work, of Horace Andy.",SELECT ?result WHERE { ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?result <http://dbpedia.org/property/writer> <http://dbpedia.org/resource/Horace_Andy> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT ?work WHERE {
  ?artist foaf:name ""Horace Andy""@en .
  ?artist a dbo:MusicalArtist .
  ?artist dbo:album ?work .
}
```",1,2,2,1,1,3,2,20,0,0,4,0,0.0,0
773,36,train,"Give me the parent of the child, that is a royalty, of the father, that is an office holder and a royalty, of Carloman of Bavaria and spouse of Louis the German.",SELECT ?result WHERE { <http://dbpedia.org/resource/Carloman_of_Bavaria> <http://dbpedia.org/property/father> ?v0 . ?v1 <http://dbpedia.org/ontology/parent> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v1 <http://dbpedia.org/property/father> ?v0 . <http://dbpedia.org/resource/Louis_the_German> <http://dbpedia.org/ontology/spouse> ?result . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. },"```sparql
SELECT ?parent WHERE {
  wd:Q1234567 wdt:P22 ?father . # Carloman of Bavaria's father (Louis the Younger)
  ?father wdt:P39 ?officeHolder . # Louis the Younger as an office holder
  ?father wdt:P31 wd:Q5 .         # Louis the Younger is a human, implying royalty
  ?father wdt:P26 ?spouse .       # Spouse of Louis the Younger (Ermengarde of Hesbaye)
  ?spouse wdt:P25 ?child .        # Child of Ermengarde and Louis the Younger
  ?child wdt:P31 wd:Q5 .          # The child is a human, implying royalty
  ?father rdfs:label ""Louis the Younger""@en .
}
```

Note: Replace `wd:Q1234567` with the actual DBpedia ID for Carloman of Bavaria.",4,7,5,3,2,3,3,71,0,0,1,0,0.0,0
433,23,train,"Give me the associated musical artist of the person born, that is a musical artist and an artist, as the persona of Paul Chambers.",SELECT ?result WHERE { ?v0 <http://dbpedia.org/property/birthName> ?v2 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. <http://dbpedia.org/resource/Paul_Chambers> <http://xmlns.com/foaf/0.1/givenName> ?v2 . ?v0 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?associatedArtist WHERE {
  # Define Paul Chambers' birth details
  VALUES (?birthdate ?birthplace) { 
    (dbr:Paul_Chambers_(bassist)#birthDate dbr:St._Louis,_Missouri)
  }

  # Find another individual with the same birthdate and birthplace
  ?person dbo:birthDate ?birthdate ;
          dbo:birthPlace ?birthplace .

  # Ensure this person is a musical artist and an artist in general
  ?person dbo:occupation dbr:Musical_artist ;
          dbo:occupation dbr:Artist .

  # Exclude Paul Chambers from the results
  FILTER (?person != dbr:Paul_Chambers_(bassist))

  # Return the associated artist's name
  BIND(?person AS ?associatedArtist)
}
```",3,5,4,3,1,3,3,71,0,0,31,0,0.0,0
41,13,train,"Give me the party of Declan Costello and party of the leader, that is a politician and an office holder, of 2005 Castlereagh Borough Council election.",SELECT ?result WHERE { ?v0 <http://dbpedia.org/ontology/party> ?result . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. <http://dbpedia.org/resource/Declan_Costello> <http://dbpedia.org/ontology/party> ?result . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. <http://dbpedia.org/resource/2005_Castlereagh_Borough_Council_election> <http://dbpedia.org/property/leader> ?v0 . },"```sparql
# Query to find the political party of Declan Costello
SELECT ?party WHERE {
  ?costello dbo:birthName ""Declan Costello""@en .
  ?costello dbo:politicalParty ?party .
}

UNION

# Query to find the leader of the 2005 Castlereagh Borough Council election and their party
SELECT ?leaderParty WHERE {
  ?election dbo:electionDate ?date .
  ?election dbo:officeHolder ?holder .
  ?election dbo:winner ?party .
  
  FILTER (YEAR(?date) = 2005 && STRSTARTS(STR(?election), ""Castlereagh Borough Council election, 2005""))
  
  ?leader dbo:positionHeld ?office .
  ?leader dbo:politicalParty ?leaderParty .
  ?office dbo:officeHolder ?holder .
}
```",3,5,4,2,2,2,3,28,0,0,1,0,0.0,0
281,1,train,Give me the awardee of Medal bar.,SELECT ?result WHERE { ?result <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/Medal_bar> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?winner ?year WHERE {
  ?award dbo:recipient ?winner .
  ?award a dbo:NobelPrizeAward .
  OPTIONAL { ?award dbo:year ?year . }
  FILTER EXISTS { ?winner dbo:wikiPageRedirects dbr:Medal_Bar } 
}
ORDER BY DESC(?year)
LIMIT 10
```",1,1,2,1,1,2,3,28,0,0,656,0,0.0,0
465,11,train,Give me the successor of the child of Alfonso I d'Este.,SELECT ?result WHERE { ?v0 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Alfonso_I_d'Este> . ?v0 <http://dbpedia.org/ontology/successor> ?result . },"```sparql
SELECT ?successor WHERE {
  ?alfonso1 dbo:child ?ercole2 .
  ?ercole2 foaf:surname ""d'Este"" .
  ?ercole2 dbo:title dbr:Duke_of_Ferrara .
  ?ercole2 dbo:successor ?alfonso2 .
  ?alfonso2 foaf:surname ""d'Este"" .
  ?alfonso2 dbo:title dbr:Duke_of_Ferrara .
}
```",2,2,3,2,1,3,3,71,0,0,1,0,0.0,0
124,29,train,"Give me the commander in Mahdist War and military force of Battle of Atbara and military force of the war, that is an event and a military conflict and a societal event, of Frank Rhodes (British Army officer).",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/battle> <http://dbpedia.org/resource/Battle_of_Atbara> . <http://dbpedia.org/resource/Frank_Rhodes_(British_Army_officer)> <http://dbpedia.org/ontology/battle> ?v3 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. <http://dbpedia.org/resource/Mahdist_War> <http://dbpedia.org/ontology/commander> ?result . ?result <http://dbpedia.org/ontology/battle> ?v3 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?commander ?battleForce ?warForce WHERE {
  # Find the commander of the Mahdist War
  ?event a dbo:MilitaryConflict ;
         rdfs:label ""Mahdist War""@en .
  OPTIONAL { ?event dbo:commander ?commander . }

  # Find military force involved in the Battle of Atbara
  ?battleEvent a dbo:Battle ;
               rdfs:label ""Battle of Atbara""@en .
  OPTIONAL { ?battleEvent dbo:militaryForce ?battleForce . }

  # Find military forces involved in the Mahdist War
  ?warEvent a dbo:MilitaryConflict ;
            rdfs:label ""Mahdist War""@en .
  OPTIONAL { ?warEvent dbo:militaryForce ?warForce . }

  # Link Frank Rhodes to these events
  ?person dbr:Frank_Rhodes_(British_Army_officer) ;
          dbo:occupation dbo:MilitaryPerson ;
          dbo:participatedIn ?event ;
          dbo:participatedIn ?battleEvent .
}
```",4,7,5,2,3,3,3,71,0,0,1,0,0.0,0
130,10,train,"Give me the administration, that is American, of the award of Živko Ključe.",SELECT ?result WHERE { ?result <http://dbpedia.org/property/governor> ?v0 . ?result <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/United_States>. <http://dbpedia.org/resource/Živko_Ključe> <http://dbpedia.org/property/awards> ?v0 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?administration WHERE {
  ?award dbo:recipient dbr:Živko_Ključe .
  ?award dbo:administrator ?administration .
  FILTER (CONTAINS(LCASE(?administration), ""american"") || CONTAINS(LCASE(?administration), ""usa""))
}
```",2,3,3,2,1,3,2,20,0,0,43,0,0.0,0
443,3,train,Give me the award of William Shepherd.,SELECT ?result WHERE { <http://dbpedia.org/resource/William_Shepherd> <http://dbpedia.org/property/awards> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?awardLabel WHERE {
  ?person a dbo:Person ;
          foaf:name ""William Shepherd""@en .
  ?person dbo:award ?award .
  ?award rdfs:label ?awardLabel .
}
```",1,1,2,1,1,2,3,28,0,1,1,0.0,0.0,0
124,30,train,"Give me the military force of Battle of Tamai and commander in Mahdist War and military force of the force, that is a societal event and a military conflict, of Herbert Kitchener, 1st Earl Kitchener.","SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Herbert_Kitchener,_1st_Earl_Kitchener> . ?result <http://dbpedia.org/ontology/battle> <http://dbpedia.org/resource/Battle_of_Tamai> . ?result <http://dbpedia.org/ontology/battle> ?v1 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. <http://dbpedia.org/resource/Mahdist_War> <http://dbpedia.org/ontology/commander> ?result . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?battle ?force1 ?commander1 ?force2 ?commander2 ?kitchenerForce ?kitchenerCommander WHERE {
  # Battle of Tamai details
  VALUES ?battle { dbr:Battle_of_Tamai }
  
  OPTIONAL {
    ?battle dbo:participatingMilitaryUnit ?unit1 .
    ?unit1 dbo:commander ?commander1 .
    FILTER(CONTAINS(LCASE(STR(?unit1)), ""british"") || CONTAINS(LCASE(STR(?unit1)), ""egyptian""))
    BIND(""British-Egyptian"" AS ?force1)
  }
  
  OPTIONAL {
    ?battle dbo:participatingMilitaryUnit ?unit2 .
    ?unit2 dbo:commander ?commander2 .
    FILTER(CONTAINS(LCASE(STR(?unit2)), ""mahdist""))
    BIND(""Mahdist"" AS ?force2)
  }

  # Herbert Kitchener's military involvement
  VALUES ?kitchener { dbr:Herbert_Kitchener_1st_Earl_Kitchener }
  
  OPTIONAL {
    ?kitchener dbo:militaryConflict ?conflict .
    ?conflict dbo:participatingMilitaryUnit ?unit3 .
    ?unit3 dbo:commander ?kitchenerCommander .
    FILTER(CONTAINS(LCASE(STR(?conflict)), ""sudan campaign"") || CONTAINS(LCASE(STR(?conflict)), ""mahdist war""))
    BIND(""British-Egyptian"" AS ?kitchenerForce)
  }
}
```",4,6,5,2,3,3,3,71,0,1,1,0.0,0.0,0
216,0,train,Give me the office of Tim Nicholls.,SELECT ?result WHERE { <http://dbpedia.org/resource/Tim_Nicholls> <http://dbpedia.org/property/office> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?office WHERE {
  dbr:Tim_Nicholls dbo:office ?office .
}
```",1,1,2,1,1,2,3,28,0,0,15,0,0.0,0
892,12,train,Give me the entity in Province of Reggio Emilia and landmark at elevation of 58.,"SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/elevation> ""58""^^<http://www.w3.org/2001/XMLSchema#integer> . ?result <http://dbpedia.org/ontology/province> <http://dbpedia.org/resource/Province_of_Reggio_Emilia> . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?entity WHERE {
  ?entity a dbo:Landmark .
  ?entity dbo:location dbr:Province_of_Reggio_Emilia .
  OPTIONAL { ?entity dbo:elevation ?elevation . FILTER (?elevation = ""58""^^xsd:integer) }
}
```",2,2,3,1,2,3,3,71,0,0,1,0,0.0,0
102,7,train,Give me the manager of the player in Ellie Roebuck.,SELECT ?result WHERE { <http://dbpedia.org/resource/Ellie_Roebuck> <http://dbpedia.org/ontology/team> ?v1 . ?v1 <http://dbpedia.org/ontology/manager> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?manager WHERE {
  ?player a dbo:Athlete ;
          foaf:name ""Ellie Roebuck""@en .
  
  OPTIONAL { 
    ?player dbo:sport ?sport .
    ?team dbo:member ?player ;
          dbo:coach ?manager .
  }
}
```",2,2,3,2,1,3,2,20,0,0,2,0,0.0,0
582,12,train,Give me the player in Kazuaki Nagasawa and figure known as --10-19.,"SELECT ?result WHERE { ?result <http://dbpedia.org/property/nickname> ""--10-19""^^<http://www.w3.org/2001/XMLSchema#gMonthDay> . <http://dbpedia.org/resource/Kazuaki_Nagasawa> <http://dbpedia.org/ontology/team> ?result . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?player ?alias WHERE {
  ?player a dbo:FootballPlayer ;
          rdfs:label ""Kazuaki Nagasawa""@en .
  
  OPTIONAL {
    ?player dbo:nickName ?alias .
    FILTER (CONTAINS(LCASE(?alias), ""-10-19""))
  }
}
```",2,2,3,1,2,3,3,71,0,0,1,0,0.0,0
216,25,train,"Give me the team of the person born, that is a sports manager and a soccer manager and a soccer player, on 1983-12-20 and player in Mario Ivanković.","SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/birthDate> ""1983-12-20""^^<http://www.w3.org/2001/XMLSchema#date> . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsManager>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerManager>. <http://dbpedia.org/resource/Mario_Ivanković> <http://dbpedia.org/ontology/team> ?result . ?result <http://dbpedia.org/ontology/coach> ?v1 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerPlayer>. }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?person ?team WHERE {
  ?person a dbo:SoccerPlayer ;
          dbo:birthDate ?date ;
          dbo:occupation ?occupation .
  
  FILTER (?date = ""1983-12-20""^^xsd:date)
  
  VALUES ?occupation { 
    dbr:Sports_manager
    dbr:Soccer_manager
    dbr:Soccer_player
  }
  
  ?person dbo:team ?team .
  
  ?team dbo:player dbr:Mario_Ivanković .
}
```",3,6,4,2,2,3,3,71,0,0,1,0,0.0,0
917,37,train,"Give me the child of the father of the spouse, that is a royalty, of Leleiohoku I and child of Kekūanāoʻa.","SELECT ?result WHERE { ?v1 <http://dbpedia.org/property/father> ?v2 . ?result <http://dbpedia.org/ontology/parent> ?v2 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?result <http://dbpedia.org/property/father> ""Kekūanāoʻa""@en . ?v1 <http://dbpedia.org/ontology/spouse> <http://dbpedia.org/resource/Leleiohoku_I> . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>

SELECT ?royalChild
WHERE {
    # Step 1: Identify Leleiohoku I
    ?leleiohokuI a dbo:Person ;
                 foaf:name ""Leleiohoku I""@en .

    # Step 2: Find Spouse of Leleiohoku I
    ?spouse dbo:spouse ?leleiohokuI .

    # Step 3: Identify Father of the Spouse
    ?father dbo:child ?spouse .

    # Step 4: Find Child of the Father who is Royalty
    ?royalChild dbo:child ?father ;
                dbo:royalTitle ?title .

    # Step 5: Identify Kekūanāoʻa
    ?kekuanaoa a dbo:Person ;
               foaf:name ""Kekūanāoʻa""@en .

    # Step 6: Find Child of Kekūanāoʻa and match with Royal Child
    FILTER EXISTS { ?royalChild dbo:child ?kekuanaoa }
}
```",4,5,5,3,2,3,3,71,0,0,3,0,0.0,0
459,0,train,Give me the governor of Oklahoma.,SELECT ?result WHERE { <http://dbpedia.org/resource/Oklahoma> <http://dbpedia.org/property/governor> ?result . },"```sparql
SELECT ?governor WHERE {
  dbpedia:Oklahoma dbo:stateGovernor ?governor .
}
```",1,1,2,1,1,2,3,28,0,0,2,0,0.0,0
417,11,train,"Give me the spouse of the parent, that is a royalty, of Count Ingolf of Rosenborg.",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/spouse> ?v0 . ?v0 <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Count_Ingolf_of_Rosenborg> . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?spouse WHERE {
  # Step 1: Identify Count Ingolf of Rosenborg
  ?countIngolf a dbo:Person ;
               rdfs:label ""Count Ingolf of Rosenborg""@en .

  # Step 2: Find the parents of Count Ingolf
  ?parent dbo:child ?countIngolf .

  # Step 3: Determine if a parent is royalty
  OPTIONAL { ?parent dbp:title ?title . FILTER(CONTAINS(LCASE(?title), ""royalty"")) }

  # Ensure we have at least one royal title
  VALUES ?parent {
    ?parent
  }
  
  # Step 4: Identify the spouse of the royal parent
  ?spouse dbo:spouse ?parent .
}
```",2,3,3,2,1,3,3,71,0,0,2,0,0.0,0
236,13,train,"Give me the party member of the administration, that is an organisation, of the person decedent, that is a politician and an office holder, at Quincy, Massachusetts.","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/party> ?v1 . ?v1 <http://dbpedia.org/property/leader> ?v0 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?v0 <http://dbpedia.org/ontology/deathPlace> <http://dbpedia.org/resource/Quincy,_Massachusetts> . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT DISTINCT ?politician ?administration WHERE {
  ?politician a dbo:Politician ;
             dbo:officeHolder ?office ;
             dbp:residence ?location .
  
  FILTER (regex(str(?location), ""Quincy, Massachusetts"", ""i""))
  
  ?politician dbo:partyMember ?administration .
  
  ?administration a dbo:Organization .
}
```",3,6,4,3,1,3,2,20,0,0,269,0,0.0,0
573,6,train,"Give me the residence, that is a settlement, of William J. Phelan.",SELECT ?result WHERE { ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. <http://dbpedia.org/resource/William_J._Phelan> <http://dbpedia.org/property/residence> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?residence WHERE {
  ?person foaf:name ""William J. Phelan""@en .
  ?person dbo:residence ?residence .
  ?residence a dbo:Settlement .
}
```",1,2,2,1,1,3,3,71,1,0,0,1.0,1.0,1.0
926,15,train,Give me the father of the spouse of Neşerek Kadın.,SELECT ?result WHERE { <http://dbpedia.org/resource/Neşerek_Kadın> <http://dbpedia.org/ontology/spouse> ?v1 . ?v1 <http://dbpedia.org/property/father> ?result . },"```sparql
SELECT ?father WHERE {
  ?neşerekKadın foaf:name ""Neşerek Kadın""@en .
  ?neşerekKadın dbo:spouse ?spouse .
  ?spouse dbo:father ?father .
}
```",2,2,3,2,1,3,3,71,0,0,1,0,0.0,0
606,8,train,Give me the birthplace of the alumnus of University of Pennsylvania.,SELECT ?result WHERE { ?v0 <http://dbpedia.org/ontology/almaMater> <http://dbpedia.org/resource/University_of_Pennsylvania> . ?v0 <http://dbpedia.org/ontology/birthPlace> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?alumnus ?birthPlace WHERE {
  ?alumnus dbo:almaMater dbr:University_of_Pennsylvania .
  OPTIONAL { ?alumnus dbo:birthPlace ?birthPlace . }
}
```",2,2,3,2,1,3,2,20,598,1114,0,0.3492990654205608,1.0,0.5177489177489177
216,37,train,"Give me the player in the coach, that is a soccer player and a sports manager and a soccer manager, of the player, that is an organisation and a sports club and a soccer club, in Džemal Berberović and team of Ognjen Vukojević.",SELECT ?result WHERE { <http://dbpedia.org/resource/Džemal_Berberović> <http://dbpedia.org/ontology/team> ?v0 . ?result <http://dbpedia.org/ontology/coach> <http://dbpedia.org/resource/Ognjen_Vukojević> . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsManager>. ?v0 <http://dbpedia.org/ontology/coach> ?v3 . ?v3 <http://dbpedia.org/ontology/team> ?result . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerManager>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerPlayer>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsClub>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerClub>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?coach WHERE {
  # Find Džemal Berberović's coaches
  ?player dbr:Džemal_Berberović .
  ?player dbo:team ?team .
  ?team dbo:manager ?coach .

  # Ensure the coach is a soccer player, sports manager, and soccer manager
  ?coach dbo:occupation ?occupation1 .
  ?coach dbo:occupation ?occupation2 .
  ?coach dbo:occupation ?occupation3 .
  
  FILTER (
    (str(?occupation1) = ""soccer player"" || str(?occupation1) = ""Sports manager"" || str(?occupation1) = ""Soccer manager"") &&
    (str(?occupation2) = ""soccer player"" || str(?occupation2) = ""Sports manager"" || str(?occupation2) = ""Soccer manager"") &&
    (str(?occupation3) = ""soccer player"" || str(?occupation3) = ""Sports manager"" || str(?occupation3) = ""Soccer manager"")
  )

  # Ensure the team is an organization, sports club, and soccer club
  ?team a dbo:SportsClub ;
        a dbo:SoccerClub .

  # Find connection to Ognjen Vukojević's team
  ?otherTeam dbr:Ognjen_Vukojević .
  ?otherTeam dbo:manager ?coach .
}
```",4,10,5,3,2,3,3,71,0,0,1,0,0.0,0
443,8,train,Give me the landmark at elevation of the award of William Shepherd.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/elevation> ?v1 . <http://dbpedia.org/resource/William_Shepherd> <http://dbpedia.org/property/awards> ?v1 . },"```sparql
# Step 1: Identify William Shepherd and his award
SELECT ?shepherd ?award WHERE {
  ?shepherd a dbo:Person ;
           foaf:name ""William Shepherd""@en .
  ?shepherd dbo:receivedAward ?award .
}

# Step 2: Find the elevation of the award (assuming it's numerical)
SELECT ?award ?elevation WHERE {
  ?award a dbo:Award ;
         dbp:elevation ?elevation .
  FILTER EXISTS { 
    SELECT ?shepherd WHERE {
      ?shepherd a dbo:Person ;
               foaf:name ""William Shepherd""@en .
      ?shepherd dbo:receivedAward ?award .
    }
  }
}

# Step 3: Find landmarks with the same elevation
SELECT DISTINCT ?landmark WHERE {
  ?landmark a dbo:Landmark ;
            dbp:elevation ?elevation .
  FILTER EXISTS { 
    SELECT ?award ?elevation WHERE {
      ?award a dbo:Award ;
             dbp:elevation ?elevation .
      FILTER EXISTS { 
        SELECT ?shepherd WHERE {
          ?shepherd a dbo:Person ;
                   foaf:name ""William Shepherd""@en .
          ?shepherd dbo:receivedAward ?award .
        }
      }
    }
  }
}
```",2,2,3,2,1,2,3,28,0,0,349,0,0.0,0
573,28,train,"Give me the parent of John Quincy Adams and person decedent at Quincy, Massachusetts and person decedent at the administration, that is a region, of Charlie Baker.","SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Region>. ?v1 <http://dbpedia.org/property/governor> ""Charlie Baker""@en . <http://dbpedia.org/resource/John_Quincy_Adams> <http://dbpedia.org/ontology/parent> ?result . ?result <http://dbpedia.org/ontology/deathPlace> ?v1 . ?result <http://dbpedia.org/ontology/deathPlace> <http://dbpedia.org/resource/Quincy,_Massachusetts> . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?parent ?decedent
WHERE {
  # Parent of John Quincy Adams
  dbr:John_Quincy_Adams dbo:parent ?parent .

  # Person decedent at Quincy, Massachusetts
  ?decedent dbo:deathPlace dbr:Quincy,_Massachusetts .
  
  # Person decedent during Charlie Baker's administration (2015 onwards)
  ?decedent dbo:deathDate ?date .
  FILTER (?date >= ""2015-01-01""^^xsd:date) .

  # Ensure the person is associated with Massachusetts
  ?decedent dbo:residence dbr:Massachusetts .
}
```",4,5,5,2,3,3,3,71,0,0,2,0,0.0,0
465,8,train,"Give me the child, that is a royalty, of Anne of Brittany.",SELECT ?result WHERE { ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. <http://dbpedia.org/resource/Anne_of_Brittany> <http://dbpedia.org/ontology/child> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?childLabel WHERE {
  ?child dbo:parent dbr:Anne_of_Brittany .
  ?child rdfs:label ?childLabel .
  
  OPTIONAL { 
    ?child dbo:royalTitle ?title .
  }
  FILTER (LANG(?childLabel) = 'en')
}
ORDER BY ?childLabel
```",1,2,2,1,1,3,3,71,0,2,2,0.0,0.0,0
456,36,train,"Give me the band of the band, that is a musical artist, of the band of Alan Doyle and spouse of Danielle Spencer (Australian actress).",SELECT ?result WHERE { <http://dbpedia.org/resource/Alan_Doyle> <http://dbpedia.org/ontology/associatedMusicalArtist> ?v0 . ?v0 <http://dbpedia.org/ontology/associatedMusicalArtist> ?v1 . ?v1 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. <http://dbpedia.org/resource/Danielle_Spencer_(Australian_actress)> <http://dbpedia.org/ontology/spouse> ?result . },"```sparql
# Step 1: Find Alan Doyle's band
SELECT ?band WHERE {
  wd:Q123456 wdt:P106 wd:Q33999; # Alan Doyle is a member of this band
  wdt:P175 ?band.               # The band he is a member of
}

# Step 2: Find Danielle Spencer's spouse
SELECT ?spouse WHERE {
  wd:Q789012 wdt:P26 ?spouse.   # Danielle Spencer's spouse
}

# Step 3: Identify the musical artist associated with this spouse (Dave Lang)
SELECT ?band WHERE {
  ?spouse wdt:P106 wd:Q33999;   # The spouse is a musician
  wdt:P175 ?band.               # The band they are part of
}

# Step 4: Confirm the band name
SELECT ?bandLabel WHERE {
  ?band rdfs:label ?bandLabel.
}
```

Note: Replace `wd:Q123456` with Alan Doyle's Wikidata ID and `wd:Q789012` with Danielle Spencer's Wikidata ID. The property `P175` is used for ""member of musical group"" and `P26` for ""spouse.""",4,5,5,3,2,3,3,71,0,0,1,0,0.0,0
926,19,train,Give me the successor of Mustafa III and father of the father of Abdulaziz.,SELECT ?result WHERE { ?v2 <http://dbpedia.org/property/father> ?result . <http://dbpedia.org/resource/Mustafa_III> <http://dbpedia.org/ontology/successor> ?result . <http://dbpedia.org/resource/Abdulaziz> <http://dbpedia.org/property/father> ?v2 . },"```sparql
SELECT ?successor ?fatherOfFather WHERE {
  # Find the successor of Mustafa III
  wd:Q123456 rdfs:label ""Mustafa III""@en .
  ?mustafa3Successor wdt:P35 wd:Q123456 ;
                     wdt:P1368 ?successor .

  # Find Abdulaziz's father and his father
  wd:Q789012 rdfs:label ""Abdulaziz""@en .
  ?abdulazizFather wdt:P22 wd:Q789012 .
  ?abdulazizGrandfather wdt:P22 ?abdulazizFather .

  # Check if the successor of Mustafa III is the father of Abdulaziz's father
  FILTER (?successor = ?abdulazizGrandfather)
}
```

Note: Replace `wd:Q123456` with the actual DBpedia identifier for Mustafa III and `wd:Q789012` with the identifier for Abdulaziz. The property `P1368` is used to denote a successor in some contexts, but you may need to adjust based on available properties in DBpedia.",3,3,4,2,2,3,3,71,0,0,1,0,0.0,0
83,5,train,Who is the governor of Dilma Rousseff?,SELECT ?result WHERE { <http://dbpedia.org/resource/Dilma_Rousseff> <http://dbpedia.org/property/governor> ?result . },"```sparql
SELECT ?stateName ?governorName WHERE {
  ?state a dbo:State ;
         rdfs:label ?stateName ;
         dbp:governor ?governor .
  
  ?governor foaf:name ?governorName .

  FILTER (lang(?stateName) = 'en' && lang(?governorName) = 'en')
  FILTER (YEAR(NOW()) >= 2011 && YEAR(NOW()) <= 2016)
}
ORDER BY ?stateName
```",1,1,2,1,1,3,2,20,0,0,2,0,0.0,0
507,12,train,"Give me the director of Entertaining Mr Sloane (film) and professional in Film director, television director.","SELECT ?result WHERE { <http://dbpedia.org/resource/Entertaining_Mr_Sloane_(film)> <http://dbpedia.org/ontology/director> ?result . ?result <http://dbpedia.org/property/occupation> ""Film director, television director""@en . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?director ?profession WHERE {
  # Find the film Entertaining Mr Sloane
  dbr:Entertaining_Mr_Sloane (dbo:director) ?director .
  
  # Check if the director has a profession of film director or television director
  OPTIONAL { ?director dbo:occupation ?occupation . }
  FILTER (
    EXISTS {
      ?occupation rdfs:label ?professionLabel .
      FILTER (
        langMatches(lang(?professionLabel), ""EN"") &&
        (strContains(lcase(?professionLabel), ""film director"") ||
         strContains(lcase(?professionLabel), ""television director""))
      )
    }
  )

  # Return the director and their profession if it matches
  BIND(
    IF (
      EXISTS {
        ?occupation rdfs:label ?professionLabel .
        FILTER (
          langMatches(lang(?professionLabel), ""EN"") &&
          (strContains(lcase(?professionLabel), ""film director"") ||
           strContains(lcase(?professionLabel), ""television director""))
        )
      },
      ?professionLabel,
      ""No relevant profession found""
    ) AS ?profession
  )
}
```",2,2,3,1,2,3,3,71,0,0,1,0,0.0,0
892,38,train,"Give me the entity in the administration, that is Italian and a region and a settlement and an administrative region, of Democratic Party (Italy) and landmark at elevation of the award of Anna Ishii.",SELECT ?result WHERE { ?v0 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Italy>. <http://dbpedia.org/resource/Anna_Ishii> <http://dbpedia.org/property/awards> ?v3 . ?result <http://dbpedia.org/ontology/elevation> ?v3 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/AdministrativeRegion>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. ?v0 <http://dbpedia.org/property/leaderParty> <http://dbpedia.org/resource/Democratic_Party_(Italy)> . ?result <http://dbpedia.org/ontology/province> ?v0 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Region>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?region WHERE {
  ?region a dbo:Region ;
          dbo:country dbr:Italy ;
          dbo:governingParty dbr:Democratic_Party_(Italy) ;
          dbo:settlementType ?settlementType ;
          dbo:elevation ?elevation .
  
  FILTER (?settlementType IN (dbo:Settlement, dbo:AdministrativeRegion))
  
  OPTIONAL { ?region dbo:landmark ?landmark . }
  
  # Assuming a connection to Anna Ishii's award through cultural significance
  OPTIONAL { ?region dbo:culturalSignificance ?culturalSignificance .
             ?culturalSignificance dbr:Anna_Ishii_Award .
           }
}
```",4,8,5,2,2,3,3,71,0,0,2,0,0.0,0
18,8,train,Give me the professional in the award of Ana María Sánchez de Ríos.,SELECT ?result WHERE { <http://dbpedia.org/resource/Ana_María_Sánchez_de_Ríos> <http://dbpedia.org/property/awards> ?v0 . ?result <http://dbpedia.org/property/occupation> ?v0 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT ?award ?profession WHERE {
  ?person foaf:name ""Ana María Sánchez de Ríos""@en .
  ?person dbo:award ?award .
  OPTIONAL { ?person foaf:occupation ?profession . }
}
```",2,2,3,2,1,2,3,28,0,2,39640,0.0,0.0,0
47,39,train,"Give me the office of the awardee of the entity, that is an award, in India and office of Bidesh Ranjan Bose.",SELECT ?result WHERE { ?v0 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/India> . ?v1 <http://dbpedia.org/property/awards> ?v0 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Award>. ?v1 <http://dbpedia.org/property/office> ?result . <http://dbpedia.org/resource/Bidesh_Ranjan_Bose> <http://dbpedia.org/property/office> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?awardeeOffice ?boseOffice WHERE {
  # Find an awardee of the Padma Shri award in India and their office
  ?awardAwardedTo dbo:recipient dbr:Padma_Shri_award_recipients.
  ?awardAwardedTo dbo:country dbr:India.
  ?awardAwardedTo dbo:office ?awardeeOffice.

  # Find Bidesh Ranjan Bose and his office
  OPTIONAL {
    ?bose dbo:birthPlace dbr:India.
    ?bose dbo:occupation ?boseOccupation.
    ?bose dbo:office ?boseOffice.
  }
  
  FILTER(?awardeeOffice != '' && ?boseOffice != '')
}
LIMIT 1
```",4,5,5,3,2,3,3,71,0,0,1,0,0.0,0
267,10,train,Give me the birth date of the reference to Dan Cathy.,"SELECT ?result WHERE { ?v0 <http://xmlns.com/foaf/0.1/name> ""Dan Cathy""@en . ?v0 <http://dbpedia.org/ontology/birthDate> ?result . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?birthDate WHERE {
  ?person a dbo:Person ;
          foaf:name ""Dan Cathy""@en .
  ?person dbo:birthDate ?birthDate .
}
```",2,2,3,2,1,3,2,20,1,0,0,1.0,1.0,1.0
874,1,train,Give me the band of Robert Hart (musician).,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/bandMember> <http://dbpedia.org/resource/Robert_Hart_(musician)> . },"```sparql
PREFIX dbpedia-owl: <http://dbpedia.org/ontology/>
PREFIX dbo: <http://dbpedia.org/ontology/>

SELECT ?band WHERE {
  ?person rdfs:label ""Robert Hart""@en .
  FILTER (regex(str(?person), ""Musician""))
  OPTIONAL { ?person dbo:musicGroup ?band . }
}
```",1,1,2,1,1,3,2,20,0,0,2,0,0.0,0
456,38,train,"Give me the band of the band, that is a musical artist, of Dean Brody and professional in the alter ego of The Shadow.",SELECT ?result WHERE { <http://dbpedia.org/resource/The_Shadow> <http://dbpedia.org/property/alterEgo> ?v3 . ?v2 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?result <http://dbpedia.org/property/occupation> ?v3 . <http://dbpedia.org/resource/Dean_Brody> <http://dbpedia.org/ontology/associatedMusicalArtist> ?v2 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. },"```sparql
# Query to find the genre or label associated with Dean Brody
SELECT ?genre WHERE {
  ?artist foaf:name ""Dean Brody""@en .
  ?artist dbo:genre ?genre .
}

UNION

# Query to find any professional entity related to ""The Shadow""
SELECT ?entity WHERE {
  ?entity rdfs:label ""The Shadow""@en .
  ?entity dbo:profession ?profession .
}
```",4,5,5,2,2,3,3,71,0,0,1,0,0.0,0
281,2,train,Give me the awardee of Volunteer Decoration.,SELECT ?result WHERE { ?result <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/Volunteer_Decoration> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?awardee WHERE {
  ?award a dbo:Award .
  ?award rdfs:label ""Volunteer Decoration""@en .
  OPTIONAL { ?award dbo:recipient ?awardee . }
}
```",1,1,2,1,1,2,3,28,0,0,12,0,0.0,0
976,0,train,Give me the office of Mustafa Şentop.,SELECT ?result WHERE { <http://dbpedia.org/resource/Mustafa_Şentop> <http://dbpedia.org/property/office> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?office WHERE {
  dbr:Mustafa_Şentop dbo:office ?office .
}
```",1,1,2,1,1,3,3,71,0,0,4,0,0.0,0
865,12,train,Give me the father of Shahla Khatun and father of AK Abdul Momen.,SELECT ?result WHERE { <http://dbpedia.org/resource/Shahla_Khatun> <http://dbpedia.org/property/father> ?result . <http://dbpedia.org/resource/AK_Abdul_Momen> <http://dbpedia.org/property/father> ?result . },"```sparql
# Query to find the father of Shahla Khatun
SELECT ?father WHERE {
  ?person dbo:givenName ""Shahla"" .
  ?person dbo:familyName ""Khatun"" .
  ?person dbo:father ?father .
}

UNION

# Query to find the father of AK Abdul Momen
SELECT ?father WHERE {
  ?person dbo:givenName ""AK"" .
  ?person dbo:middleName ""Abdul"" .
  ?person dbo:familyName ""Momen"" .
  ?person dbo:father ?father .
}
```",2,2,3,1,2,3,3,71,0,0,1,0,0.0,0
955,7,train,Give me the band of the writer of Don't Forget Your Roots (album).,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/bandMember> ?v1 . <http://dbpedia.org/resource/Don't_Forget_Your_Roots_(album)> <http://dbpedia.org/property/writer> ?v1 . },"```sparql
SELECT ?band WHERE {
  ?album dcterms:title ""Don't Forget Your Roots""@en .
  ?album dbo:artist ?artist .
  OPTIONAL { ?artist dbo:musicalBand ?band . }
}
```",2,2,3,2,1,3,2,20,0,0,18,0,0.0,0
456,19,train,Give me the professional in  and spouse of the actor of Pacific Drive.,"SELECT ?result WHERE { ?result <http://dbpedia.org/property/occupation> """"@en . <http://dbpedia.org/resource/Pacific_Drive> <http://dbpedia.org/property/starring> ?v0 . ?v0 <http://dbpedia.org/ontology/spouse> ?result . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?actor ?profession ?spouse WHERE {
  # Find the movie ""Pacific Drive""
  ?movie dbo:title ""Pacific Drive""@en .
  
  # Get actors associated with this movie
  ?movie dbo:starring ?actor .

  # Retrieve the profession of these actors
  ?actor a dbo:Actor ;
         foaf:profession ?profession .

  # Find spouses of these actors
  OPTIONAL { ?actor dbo:spouse ?spouse }
}
```",3,3,4,2,2,3,3,71,0,0,2,0,0.0,0
926,0,train,Give me the father of Mahmud II.,SELECT ?result WHERE { <http://dbpedia.org/resource/Mahmud_II> <http://dbpedia.org/property/father> ?result . },"```sparql
SELECT ?father WHERE {
  wd:Q1234 wdt:P22 ?father .
}
```

Note: `wd:Q1234` should be replaced with the actual DBpedia identifier for Mahmud II. You can find this by searching DBpedia or using a SPARQL query to identify the correct entity.",1,1,2,1,1,3,3,71,0,0,1,0,0.0,0
456,37,train,"Give me the professional in the alter ego of the reference, that is a fictional character, to Lamont Cranston (radio, film and television) and band of Alan Doyle.","SELECT ?result WHERE { ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/FictionalCharacter>. <http://dbpedia.org/resource/Alan_Doyle> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v0 <http://xmlns.com/foaf/0.1/name> ""Lamont Cranston (radio, film and television)""@en . ?result <http://dbpedia.org/property/occupation> ?v3 . ?v0 <http://dbpedia.org/property/alterEgo> ?v3 . }","```sparql
# Query to get the fictional character associated with Lamont Cranston
SELECT ?character WHERE {
  ?person dbo:birthName ""Lamont Cranston""@en .
  ?person dbo:fictionalCharacter ?character .
}

UNION

# Query to get the band associated with Alan Doyle
SELECT ?band WHERE {
  ?musician foaf:name ""Alan Doyle""@en .
  ?musician dbo:memberOfBand ?band .
}
```",4,5,5,3,2,3,3,71,0,0,1,0,0.0,0
433,20,train,"Give me the associated musical artist of the associated musical artist, that is an artist and a musical artist, of Scott LaFaro and associated musical artist of Paul Chambers.",SELECT ?result WHERE { ?v2 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. <http://dbpedia.org/resource/Paul_Chambers> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . <http://dbpedia.org/resource/Scott_LaFaro> <http://dbpedia.org/ontology/associatedMusicalArtist> ?v2 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. },"```sparql
SELECT DISTINCT ?finalArtist1 ?finalArtist2 WHERE {
  # Step 1: Find Scott LaFaro's associated musical artist
  ?scottLaFaro dbo:birthName ""Scott LaFaro""@en .
  ?scottLaFaro dbo:associatedBand ?artist1 .

  # Step 2: Find the associated musical artist of that artist
  ?artist1 dbo:associatedBand ?finalArtist1 .

  # Step 3: Find Paul Chambers' associated musical artist
  ?paulChambers dbo:birthName ""Paul Chambers""@en .
  ?paulChambers dbo:associatedBand ?artist2 .

  # Step 4: Find the associated musical artist of that artist
  ?artist2 dbo:associatedBand ?finalArtist2 .

  # Ensure both final artists are musicians
  ?finalArtist1 a dbo:MusicalArtist .
  ?finalArtist2 a dbo:MusicalArtist .
}
```",3,5,4,2,2,3,3,71,0,0,2,0,0.0,0
791,23,train,"Give me the spouse of the spouse, that is a royalty, of the reference to Emperor Takakura.","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/spouse> ?v0 . ?v2 <http://xmlns.com/foaf/0.1/name> ""Emperor Takakura""@en . ?v0 <http://dbpedia.org/ontology/spouse> ?v2 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. }","```sparql
# Step 1: Identify Emperor Takakura and find his spouse
SELECT ?emperorTakakura ?spouse WHERE {
  ?emperorTakakura a dbo:Monarch ;
                   foaf:name ""Emperor Takakura""@en .
  ?emperorTakakura dbo:spouse ?spouse .
}

# Step 2: Find the spouse of Emperor Takakura's spouse
SELECT ?secondSpouse WHERE {
  # Assuming we have identified the spouse from the previous query as ?firstSpouse
  ?firstSpouse a dbo:Person ;
               dbo:spouse ?secondSpouse .
}

# Step 3: Check if the second spouse is royalty
SELECT ?secondSpouse WHERE {
  ?secondSpouse a dbo:Monarch ;
                foaf:name ?name .
}
```

Note: The above SPARQL queries are structured to be executed sequentially. You would need to replace `?firstSpouse` with the actual URI obtained from the first query when executing the second query.",3,4,4,3,1,3,3,71,0,0,1,0,0.0,0
933,7,train,"Who is the person born, that is a musical artist, on 1947-04-21?","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/birthDate> ""1947-04-21""^^<http://www.w3.org/2001/XMLSchema#date> . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?person WHERE {
  ?person a dbo:Person .
  ?person dbo:birthDate ?date .
  FILTER (YEAR(?date) = 1947 && MONTH(?date) = 4 && DAY(?date) = 21)
  OPTIONAL { ?person dbo:occupation ?occupation . }
  VALUES ?occupation { 
    dbr:Musician
    dbr:Singer-songwriter
    dbr:Bassist
    dbr:Guitarist
    dbr:Pianist
    dbr:Drummer
    dbr:Composer
    dbr:Producer
    dbr:Conductor
  }
}
```",1,2,2,1,1,3,3,71,1,0,3,1.0,0.25,0.4
433,11,train,"Give me the associated musical artist of the person born, that is a musical artist and an artist, as Paul Laurence Dunbar Chambers Jr..","SELECT ?result WHERE { ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?v0 <http://dbpedia.org/property/birthName> ""Paul Laurence Dunbar Chambers Jr.""@en . ?v0 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. }","```sparql
SELECT ?associatedArtist WHERE {
  dbpedia:Paul_Chambers_(musician) dbo:profession dbr:Jazz_bassist .
  dbpedia:Paul_Chambers_(musician) dbo:associatedMusicalArtist ?associatedArtist .
}
```",2,4,3,2,1,3,3,71,0,0,31,0,0.0,0
216,34,train,"Give me the player in the coach of the reference, that is an organisation and a soccer club, to Croatia U21 and team of Ognjen Vukojević.","SELECT ?result WHERE { ?v2 <http://dbpedia.org/ontology/coach> ?v1 . ?v2 <http://xmlns.com/foaf/0.1/name> ""Croatia U21""@en . ?v1 <http://dbpedia.org/ontology/team> ?result . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerClub>. ?result <http://dbpedia.org/ontology/coach> <http://dbpedia.org/resource/Ognjen_Vukojević> . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?club WHERE {
  ?coach foaf:name ""Ognjen Vukojević""@en .
  ?coach dbo:position dbr:Football_manager .
  ?team dbo:manager ?coach ;
        a dbo:Soccer_Club ;
        dbo:nationality dbr:Croatia .
  ?croatiaU21 dbo:head_coach ?coach ;
              a dbo:National_football_team_under_21 ;
              dbo:country dbr:Croatia .
  FILTER EXISTS { ?team dbo:league ?league } # Ensures it's an active club
}
```",4,6,5,3,2,3,3,71,0,0,1,0,0.0,0
124,37,train,"Give me the military force of Battle of Atbara and military force of the war, that is an event and a military conflict and a societal event, of the awardee of British South Africa Company Medal.",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/battle> <http://dbpedia.org/resource/Battle_of_Atbara> . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?v0 <http://dbpedia.org/ontology/battle> ?v3 . ?v0 <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/British_South_Africa_Company_Medal> . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?result <http://dbpedia.org/ontology/battle> ?v3 . },"```sparql
# Query to find military forces involved in the Battle of Atbara
SELECT ?force WHERE {
  ?battle dbpedia-owl:wikiPageRedirects dbpedia:Battle_of_Atbara .
  ?battle dbo:militaryConflicts ?conflict .
  ?conflict dbo:participatingMilitaryForce ?force .
}

# Query to find military forces involved in the First or Second Matabele War
SELECT DISTINCT ?force WHERE {
  { 
    ?war dbpedia-owl:wikiPageRedirects dbpedia:First_Matabele_War ;
         dbo:militaryConflicts ?conflict .
  }
  UNION
  {
    ?war dbpedia-owl:wikiPageRedirects dbpedia:Second_Matabele_War ;
         dbo:militaryConflicts ?conflict .
  }
  ?conflict dbo:participatingMilitaryForce ?force .
}
```",4,7,5,3,2,3,3,71,0,0,7,0,0.0,0
573,34,train,"Give me the parent of John Quincy Adams and person decedent at the administration, that is a region, of the real name of Charlie Baker (Australian footballer).",SELECT ?result WHERE { ?v1 <http://dbpedia.org/property/governor> ?v2 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Region>. ?result <http://dbpedia.org/ontology/deathPlace> ?v1 . <http://dbpedia.org/resource/John_Quincy_Adams> <http://dbpedia.org/ontology/parent> ?result . <http://dbpedia.org/resource/Charlie_Baker_(Australian_footballer)> <http://xmlns.com/foaf/0.1/name> ?v2 . },"```sparql
# Step 1: Find John Quincy Adams' parent
SELECT ?parent WHERE {
  wd:Q9373 wdt:P22 ?parent .
}

# Step 2: Find Charlie Baker's real name
SELECT ?realName WHERE {
  wd:Q1234567 foaf:name ""Charlie Baker""@en .
  wd:Q1234567 schema:givenName ?realName .
}

# Assuming we have a region and administration linked to the real name:
# Step 3 & 4: Find the person decedent at that administration
SELECT ?decedent WHERE {
  ?administration wdt:P69 ?person . # Administration role
  ?administration wdt:P136 ?region . # Region associated with administration
  ?person wdt:P106 wd:Q1930181 .     # Occupation (e.g., politician)
  OPTIONAL { ?person wdt:P136 ?decedentRegion } .
}
```

Note: The above queries assume certain properties and may need adjustments based on actual DBpedia data availability.",4,5,5,3,2,3,3,71,0,0,2,0,0.0,0
433,9,train,Give me the associated musical artist of Paul Chambers and associated musical artist of Bill Evans.,SELECT ?result WHERE { <http://dbpedia.org/resource/Paul_Chambers> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . <http://dbpedia.org/resource/Bill_Evans> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . },"```sparql
PREFIX dbp: <http://dbpedia.org/property/>
PREFIX dbo: <http://dbpedia.org/ontology/>

SELECT ?musician ?associatedArtist WHERE {
  VALUES (?musician ?label) { 
    (<http://dbpedia.org/resource/Paul_Chambers_(bassist)> ""Paul Chambers"") 
    (<http://dbpedia.org/resource/Bill_Evans_(pianist)> ""Bill Evans"")
  }
  
  OPTIONAL {
    ?musician dbp:associatedBand ?band .
    ?band rdfs:label ?associatedArtist .
    FILTER (lang(?associatedArtist) = 'en')
  }

  OPTIONAL {
    ?musician dbo:collaboratedWith ?artist .
    ?artist rdfs:label ?associatedArtist .
    FILTER (lang(?associatedArtist) = 'en')
  }
}
ORDER BY ?musician
```",2,2,3,1,2,3,3,71,0,2,2,0.0,0.0,0
935,2,train,"Give me the award, that is an award, of Syed Sohail Hussain Naqvi.",SELECT ?result WHERE { <http://dbpedia.org/resource/Syed_Sohail_Hussain_Naqvi> <http://dbpedia.org/property/awards> ?result . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Award>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?award WHERE {
  ?person a dbo:Person ;
          foaf:name ""Syed Sohail Hussain Naqvi""@en .
  
  OPTIONAL { ?person dbo:award ?award . }
}
```",1,2,2,1,1,3,2,20,1,0,0,1.0,1.0,1.0
888,10,train,Give me the award of the commander in 2022 Ukrainian eastern counteroffensive.,SELECT ?result WHERE { <http://dbpedia.org/resource/2022_Ukrainian_eastern_counteroffensive> <http://dbpedia.org/ontology/commander> ?v0 . ?v0 <http://dbpedia.org/property/awards> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?award ?description WHERE {
  ?award a dbo:Award ;
        dbo:dateReceived ?date ;
        dbo:description ?description .
  
  FILTER (CONTAINS(LCASE(?description), ""commander"") && CONTAINS(LCASE(?description), ""2022"") && CONTAINS(LCASE(?description), ""ukraine""))
}
```",2,2,3,2,1,3,2,20,0,0,3,0,0.0,0
987,32,train,"Give me the birth place of the actor of All for Free and birth place of the band, that is an artist and a musical artist, of Šako Polumenta.",SELECT ?result WHERE { <http://dbpedia.org/resource/All_for_Free> <http://dbpedia.org/property/starring> ?v3 . ?v3 <http://dbpedia.org/ontology/birthPlace> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. ?v1 <http://dbpedia.org/ontology/birthPlace> ?result . <http://dbpedia.org/resource/Šako_Polumenta> <http://dbpedia.org/ontology/associatedMusicalArtist> ?v1 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. },"```sparql
# Query for the actor of ""All for Free""
SELECT ?actor ?birthPlace WHERE {
  ?movie dcterms:title ""All for Free""@en .
  ?movie dbo:starring ?actor .
  ?actor foaf:bornIn ?birthPlace .
}

UNION

# Query for the band associated with Šako Polumenta
SELECT ?band ?birthPlace WHERE {
  ?person foaf:name ""Šako Polumenta""@sl .
  ?person dbo:memberOfBand ?band .
  OPTIONAL { ?band dbo:birthPlace ?birthPlace . }
}
```",4,6,5,2,2,3,3,71,0,0,4,0,0.0,0
456,24,train,Give me the band of Alan Doyle and professional in the alter ego of The Shadow.,SELECT ?result WHERE { ?result <http://dbpedia.org/property/occupation> ?v2 . <http://dbpedia.org/resource/The_Shadow> <http://dbpedia.org/property/alterEgo> ?v2 . <http://dbpedia.org/resource/Alan_Doyle> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . },"```sparql
SELECT ?band ?alterEgo WHERE {
  # Find the band associated with Alan Doyle
  ?person foaf:name ""Alan Doyle""@en .
  ?person dbo:memberOf ?band .
  
  # Find the alter ego of The Shadow
  ?character rdfs:label ""The Shadow (pulp magazine character)""@en ;
             dbo:alterEgo ?alterEgo .
}
```",3,3,4,2,2,3,3,71,0,0,1,0,0.0,0
965,33,train,"Give me the parent of the child, that is a royalty, of the person born, that is a politician, on 1854-05-24 and spouse of Prince Louis of Battenberg.","SELECT ?result WHERE { ?v0 <http://dbpedia.org/ontology/birthDate> ""1854-05-24""^^<http://www.w3.org/2001/XMLSchema#date> . ?v2 <http://dbpedia.org/property/father> ?v0 . ?result <http://dbpedia.org/ontology/spouse> <http://dbpedia.org/resource/Prince_Louis_of_Battenberg> . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v2 <http://dbpedia.org/ontology/parent> ?result . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. }","```sparql
SELECT ?parent WHERE {
  ?person dbo:birthDate ""1854-05-24""^^xsd:date ;
          rdf:type dbo:Politician .
  ?person foaf:surname ""Victoria"" .
  ?person dbo:spouse ?spouse .
  ?spouse rdfs:label ""Prince Louis of Battenberg""@en .
  
  ?child dbo:parent ?parent ;
         dbo:parent ?person ;
         rdf:type dbo:Royalty .

  FILTER(CONTAINS(LCASE(?child), ""mountbatten""))
}
```",4,6,5,3,2,3,3,71,0,0,1,0,0.0,0
987,28,train,"Give me the birth place of Moamer Kasumović and entity in Montenegro and birth place of the band, that is an artist and a musical artist, of Šako Polumenta.",SELECT ?result WHERE { <http://dbpedia.org/resource/Šako_Polumenta> <http://dbpedia.org/ontology/associatedMusicalArtist> ?v1 . <http://dbpedia.org/resource/Moamer_Kasumović> <http://dbpedia.org/ontology/birthPlace> ?result . ?v1 <http://dbpedia.org/ontology/birthPlace> ?result . ?result <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Montenegro> . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. },"```sparql
# Query for Moamer Kalamović's birthplace and check for an entity in Montenegro
SELECT ?birthPlaceLabel WHERE {
  wd:Q3046 dbo:birthPlace ?birthPlace .
  ?birthPlace rdfs:label ?birthPlaceLabel .
  FILTER (lang(?birthPlaceLabel) = ""en"")
}
UNION
{
  SELECT DISTINCT ?entityLabel WHERE {
    wd:Q3046 dbo:birthPlace ?birthPlace .
    ?birthPlace wdt:P31/wdt:P279* wd:Q199947 .
    ?entity wdt:P131 wd:Q30 ; # Montenegro
            rdfs:label ?entityLabel .
    FILTER (lang(?entityLabel) = ""en"")
  }
}

# Query for the band associated with Šako Polumenta and its birthplace
SELECT ?bandBirthPlaceLabel WHERE {
  wd:Q1234567 dbo:member ?band . # Replace Q1234567 with the actual entity ID of Šako Polumenta
  ?band a wd:Q215380 .
  ?band dbo:birthPlace ?bandBirthPlace .
  ?bandBirthPlace rdfs:label ?bandBirthPlaceLabel .
  FILTER (lang(?bandBirthPlaceLabel) = ""en"")
}
```

Note: Replace `wd:Q1234567` with the actual DBpedia entity ID for Šako Polumenta.",4,6,5,2,3,3,3,71,0,0,1,0,0.0,0
18,7,train,"Give me the alumnus of Marymount College, Tarrytown and professional in .","SELECT ?result WHERE { ?result <http://dbpedia.org/property/occupation> """"@en . ?result <http://dbpedia.org/ontology/almaMater> <http://dbpedia.org/resource/Marymount_College,_Tarrytown> . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?alumnus ?profession 
WHERE {
  ?college rdf:type dbo:College ;
           rdfs:label ""Marymount College, Tarrytown""@en .
  
  ?college dbo:alumni ?alumnus .
  ?alumnus dbo:occupation ?profession .
}
```",2,2,3,1,2,2,3,28,0,0,1,0,0.0,0
417,5,train,"Who is the leader, that is a royalty, of Colony of Greenland?",SELECT ?result WHERE { <http://dbpedia.org/resource/Colony_of_Greenland> <http://dbpedia.org/property/leader> ?result . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. },"```sparql
SELECT ?monarch WHERE {
  wd:Q30 wdt:P39 wd:Q159 ; # Q30 is Greenland, P39 is head of government (for context), Q159 is Kingdom of Denmark
  wdt:P35 ?monarch . # P35 is the position held by a person
  FILTER EXISTS { ?monarch wdt:P31 wd:Q5 } # Ensure the monarch is a human (Q5)
}
```",1,2,2,1,1,3,3,71,0,0,1,0,0.0,0
124,14,train,"Give me the military force of the force, that is a societal event and a military conflict, of Herbert Kitchener, 1st Earl Kitchener.","SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v1 <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Herbert_Kitchener,_1st_Earl_Kitchener> . ?result <http://dbpedia.org/ontology/battle> ?v1 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?conflict WHERE {
  ?kitchener dbo:nationality dbr:United_Kingdom ;
             foaf:name ""Herbert Kitchener"" .
  ?conflict dbo:commander ?kitchener ;
            a dbo:MilitaryConflict .
}
```",2,4,3,2,1,3,3,71,0,0,1190,0,0.0,0
465,7,train,"Give me the parent of Charles Orlando, Dauphin of France.","SELECT ?result WHERE { <http://dbpedia.org/resource/Charles_Orlando,_Dauphin_of_France> <http://dbpedia.org/ontology/parent> ?result . }","```sparql
SELECT ?parent WHERE {
  wd:Q11175 wdt:P22 ?parent .
}
```",1,1,2,1,1,3,3,71,0,0,2,0,0.0,0
892,36,train,"Give me the entity in Italy and entity in the administration, that is Italian and a region and a settlement and an administrative region, of the party, that is a political party and an organisation, of Andrea Cozzolino.",SELECT ?result WHERE { ?v0 <http://dbpedia.org/property/leaderParty> ?v3 . <http://dbpedia.org/resource/Andrea_Cozzolino> <http://dbpedia.org/ontology/party> ?v3 . ?result <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Italy> . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/AdministrativeRegion>. ?result <http://dbpedia.org/ontology/province> ?v0 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Region>. ?v0 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Italy>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/PoliticalParty>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?region ?settlement WHERE {
  # Step 1: Find Andrea Cozzolino's political party
  ?cozzolino dbo:party dbr:Italian_Party_1 . # Replace with actual DBpedia resource for the party

  # Step 2: Identify the region where this party operates
  ?region dbo:country dbr:Italy ;
          dbo:administrativeRegion dbr:Italian_Party_1 .

  # Step 3: Find a settlement that is also an administrative region within this Italian region
  ?settlement dbo:isPartOf ?region ;
              rdf:type dbo:Settlement, dbo:AdministrativeRegion .
}
```

Note: Replace `dbr:Italian_Party_1` with the actual DBpedia resource for Andrea Cozzolino's political party once identified.",4,10,5,3,2,3,3,71,0,0,587,0,0.0,0
773,0,train,Give me the spouse of Louis the German.,SELECT ?result WHERE { <http://dbpedia.org/resource/Louis_the_German> <http://dbpedia.org/ontology/spouse> ?result . },"```sparql
SELECT ?spouse WHERE {
  dbpedia:Louis_the_German dbo:spouse ?spouse .
}
```",1,1,2,1,1,3,3,71,0,0,1,0,0.0,0
839,25,train,"Give me the band of the band, that is a musical artist, of Charlie Huhn and band of Peter Schorowsky.",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/bandMember> <http://dbpedia.org/resource/Peter_Schorowsky> . ?result <http://dbpedia.org/ontology/bandMember> ?v1 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. <http://dbpedia.org/resource/Charlie_Huhn> <http://dbpedia.org/ontology/associatedMusicalArtist> ?v1 . },"```sparql
SELECT ?charlieBand ?peterBand WHERE {
  ?charlieHuhn dbo:bandMemberOf ?charlieBand .
  ?charlieHuhn foaf:name ""Charlie Huhn"" .

  ?peterSchorowsky dbo:bandMemberOf ?peterBand .
  ?peterSchorowsky foaf:name ""Peter Schorowsky"" .
}
```",3,4,4,2,2,3,3,71,0,0,1,0,0.0,0
933,38,train,"Give me the band of the band, that is a group and a band and an organisation, of Alan Warner (musician) and reference to the birth name of Alan Warner (musician).",SELECT ?result WHERE { ?result <http://xmlns.com/foaf/0.1/name> ?v3 . ?v0 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . <http://dbpedia.org/resource/Alan_Warner_(musician)> <http://dbpedia.org/property/birthName> ?v3 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Band>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Group>. <http://dbpedia.org/resource/Alan_Warner_(musician)> <http://dbpedia.org/ontology/associatedMusicalArtist> ?v0 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?bandLabel ?birthName WHERE {
  ?musician a dbo:MusicArtist ;
            foaf:name ""Alan Warner"" ;
            dbp:hometown ?hometown .
  
  ?musician dbo:memberOfBandOrchestra ?band .
  ?band rdf:type ?type1, ?type2 .

  FILTER (?type1 = dbo:MusicalGroup && ?type2 = dbo:Organization)

  OPTIONAL { ?musician foaf:name ?birthName }

  SERVICE <http://dbpedia.org/sparql> {
    VALUES ?labelType { rdfs:label }
    ?band ?labelType ?bandLabel .
  }
}
```",4,7,5,2,2,3,3,71,0,0,1,0,0.0,0
507,20,train,"Give me the director of the movie, that is a movie and a work, with Beryl Reid and spouse of Anne V. Coates.",SELECT ?result WHERE { ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Film>. ?v2 <http://dbpedia.org/ontology/director> ?result . ?result <http://dbpedia.org/ontology/spouse> <http://dbpedia.org/resource/Anne_V._Coates> . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?v2 <http://dbpedia.org/property/starring> <http://dbpedia.org/resource/Beryl_Reid> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?director WHERE {
  ?movie a dbo:Film ;
         dbo:starring dbr:Beryl_Reid .
  
  ?movie dbo:director ?director .

  ?director dbo:spouse dbr:Anne_V._Coates .
}
```",3,5,4,2,2,3,3,71,1,0,0,1.0,1.0,1.0
839,2,train,Give me the band of Matthias Röhr.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/bandMember> <http://dbpedia.org/resource/Matthias_Röhr> . },"```sparql
PREFIX dbp: <http://dbpedia.org/property/>
PREFIX dbo: <http://dbpedia.org/ontology/>

SELECT ?band WHERE {
  ?person foaf:name ""Matthias Röhr""@en .
  ?person dbp:band ?band .
}
```",1,1,2,1,1,3,3,71,0,0,1,0,0.0,0
773,9,train,Give me the parent of Carloman of Bavaria and spouse of Louis the German.,SELECT ?result WHERE { <http://dbpedia.org/resource/Louis_the_German> <http://dbpedia.org/ontology/spouse> ?result . ?result <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Carloman_of_Bavaria> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?parent ?spouse WHERE {
  # Find Carloman of Bavaria's parent
  OPTIONAL { 
    dbr:C._Carloman_of_Bavaria dbo:childOf ?parent .
  }
  
  # Find Louis the German's spouse
  OPTIONAL {
    dbr:Louis_the_German dbo:spouse ?spouse .
  }

  FILTER (?parent = dbr:Louis_the_German)
}
```",2,2,3,1,2,3,3,71,1,1,0,0.5,1.0,0.6666666666666666
47,32,train,Give me the office of the awardee of Banga Bhushan and office of the administration of Jagdeep Dhankhar.,SELECT ?result WHERE { ?v1 <http://dbpedia.org/property/office> ?result . ?v3 <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/Banga_Bhushan> . ?v1 <http://dbpedia.org/property/governor> <http://dbpedia.org/resource/Jagdeep_Dhankhar> . ?v3 <http://dbpedia.org/property/office> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?officeBhushanAwardee ?officeJagdeepDhankhar WHERE {
  # Find a notable awardee of the Banga Bhushan and their office
  OPTIONAL {
    ?awardee dbo:award dbr:Banga_Bhushan_Award .
    ?awardee dbo:occupation ?officeBhushanAwardee .
  }
  
  # Find Jagdeep Dhankhar's current office
  dbr:Jagdeep_Dhankhar dbo:positionHeld ?officeJagdeepDhankhar .
}
```",4,4,5,2,2,3,3,71,0,0,1,0,0.0,0
373,4,train,"Give me the professional in Singer, songwriter and writer of 2300 Jackson Street (song).","SELECT ?result WHERE { ?result <http://dbpedia.org/property/occupation> ""Singer, songwriter""@en . <http://dbpedia.org/resource/2300_Jackson_Street_(song)> <http://dbpedia.org/property/writer> ?result . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?artist WHERE {
  ?song dbo:title ""2300 Jackson Street"" .
  ?song dbo:artist ?artist .
  FILTER(CONTAINS(LCASE(STR(?artist)), ""stevie wonder""))
}
```",2,2,3,1,2,2,2,9,0,0,1,0,0.0,0
839,7,train,Give me the professional in Musician.,"SELECT ?result WHERE { ?result <http://dbpedia.org/property/occupation> ""Musician""@en . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>

SELECT ?musician WHERE {
  ?musician rdf:type dbo:Musician .
}
LIMIT 10
```",1,1,2,1,1,3,3,71,0,0,7563,0,0.0,0
773,26,train,"Give me the parent of the successor of the child, that is a royalty, of Louis the Pious.",SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?result <http://dbpedia.org/ontology/child> ?v2 . <http://dbpedia.org/resource/Louis_the_Pious> <http://dbpedia.org/ontology/child> ?v1 . ?v1 <http://dbpedia.org/ontology/successor> ?v2 . },"```sparql
SELECT DISTINCT ?parent WHERE {
  # Step 1: Identify Louis the Pious
  wd:Q1234 dbo:child ?child . 

  # Step 2 & 3: Find children who are royalty
  ?child a dbo:Monarch .

  # Step 4: Find successors of these royal children
  ?child dbo:successor ?successor .

  # Step 5: Identify parent of the successor
  ?successor dbo:child ?parent .
}
```

Note: `wd:Q1234` is a placeholder for Louis the Pious's DBpedia entity ID. You would need to replace it with the correct identifier from DBpedia.",3,4,4,3,1,3,3,71,0,0,4,0,0.0,0
892,10,train,Give me the entity in Italy and entity in Province of Reggio Emilia.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/province> <http://dbpedia.org/resource/Province_of_Reggio_Emilia> . ?result <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Italy> . },"```sparql
SELECT ?italyEntity ?reggioEmiliaEntity WHERE {
  # Entity representing Italy
  VALUES ?italyEntity { dbr:Rome dbr:Italy }

  # Entity in Province of Reggio Emilia
  VALUES ?reggioEmiliaEntity { dbr:Reggio_Emilia }

  # Ensure the entities are distinct and valid
  FILTER(?italyEntity != ?reggioEmiliaEntity)
}
```",2,2,3,1,2,3,3,71,1,2,39,0.3333333333333333,0.025,0.046511627906976744
216,1,train,Give me the player in Mario Ivanković.,SELECT ?result WHERE { <http://dbpedia.org/resource/Mario_Ivanković> <http://dbpedia.org/ontology/team> ?result . },"```sparql
PREFIX dbp: <http://dbpedia.org/property/>
PREFIX dbo: <http://dbpedia.org/ontology/>

SELECT ?team WHERE {
  ?player rdf:type dbo:FootballPlayer .
  ?player foaf:name ""Mario Ivanković""@en .
  ?player dbp:team ?team .
}
```",1,1,2,1,1,3,3,71,0,0,13,0,0.0,0
47,12,train,Give me the office of Ajoy Mukherjee and office of Bidesh Ranjan Bose.,SELECT ?result WHERE { <http://dbpedia.org/resource/Bidesh_Ranjan_Bose> <http://dbpedia.org/property/office> ?result . <http://dbpedia.org/resource/Ajoy_Mukherjee> <http://dbpedia.org/property/office> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT ?person ?officeName WHERE {
  VALUES ?name { ""Ajoy Mukherjee"" ""Bidesh Ranjan Bose"" }
  
  ?person foaf:name ?name .
  ?person dbo:office ?office .
  ?office rdfs:label ?officeName .
  
  FILTER (lang(?officeName) = 'en')
}
ORDER BY ?person
```",2,2,3,1,2,3,3,71,0,0,1,0,0.0,0
645,5,train,"Who is the native, that is a president and a politician, of Restoration (Spain)?",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Restoration_(Spain)> . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/President>. ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?person ?name WHERE {
  ?person a dbo:Politician ;
          dbo:nationality dbr:Spain ;
          dbo:birthPlace ?place .
  
  OPTIONAL { ?person dbo:officeTitle ?title . FILTER regex(?title, ""President|Prime Minister"", ""i"") }
  
  ?period dbo:country dbr:Spain ;
          rdfs:label ?label .
  FILTER (CONTAINS(LCASE(?label), ""restoration""))

  ?place dbo:locatedIn ?period .

  ?person foaf:name ?name .
}
ORDER BY ?name
```",1,3,2,1,1,3,3,71,0,0,1,0,0.0,0
507,33,train,"Give me the director of the movie, that is a movie and a work, with the person born on 1919-06-17 and spouse of Anne V. Coates.","SELECT ?result WHERE { ?v3 <http://dbpedia.org/ontology/director> ?result . ?v0 <http://dbpedia.org/ontology/birthDate> ""1919-06-17""^^<http://www.w3.org/2001/XMLSchema#date> . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Film>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?result <http://dbpedia.org/ontology/spouse> <http://dbpedia.org/resource/Anne_V._Coates> . ?v3 <http://dbpedia.org/property/starring> ?v0 . }","```sparql
SELECT ?director WHERE {
  ?person dbo:birthDate ""1919-06-17""^^xsd:date .
  ?person foaf:surname ?surname .
  ?person dbo:spouse ?spouse .
  ?spouse foaf:name ""Anne V. Coates""@en .

  ?movie dbo:director ?person ;
         a dbo:Film ;
         dbo:workExample ?work .

  FILTER EXISTS { ?work a dbo:Work }
}
```",4,6,5,3,2,3,3,71,0,0,1,0,0.0,0
433,33,train,"Give me the associated musical artist of the associated musical artist, that is an artist and a musical artist, of the associated musical artist, that is a musical artist and an artist, of Ornette Coleman and associated musical artist of Paul Chambers.",SELECT ?result WHERE { ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. <http://dbpedia.org/resource/Paul_Chambers> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v3 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . <http://dbpedia.org/resource/Ornette_Coleman> <http://dbpedia.org/ontology/associatedMusicalArtist> ?v0 . ?v0 <http://dbpedia.org/ontology/associatedMusicalArtist> ?v3 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. },"```sparql
# Step 1: Find Ornette Coleman's associated musical artist
WITH {
    SELECT ?associatedArtist1 WHERE {
        dbpedia:Ornette_Coleman dbo:associatedMusicalArtist ?associatedArtist1 .
        FILTER EXISTS { ?associatedArtist1 a dbo:Musician . }
        FILTER EXISTS { ?associatedArtist1 a dbo:Artist . }
    } LIMIT 1
} AS %artist1

# Step 2: Find the associated musical artist of that person, ensuring they are both an artist and musician
WITH {
    SELECT ?associatedArtist2 WHERE {
        %artist1 dbo:associatedMusicalArtist ?associatedArtist2 .
        FILTER EXISTS { ?associatedArtist2 a dbo:Musician . }
        FILTER EXISTS { ?associatedArtist2 a dbo:Artist . }
    } LIMIT 1
} AS %artist2

# Step 3: Find Paul Chambers' associated musical artist
WITH {
    SELECT ?associatedArtist3 WHERE {
        dbpedia:Paul_Chambers dbo:associatedMusicalArtist ?associatedArtist3 .
        FILTER EXISTS { ?associatedArtist3 a dbo:Musician . }
        FILTER EXISTS { ?associatedArtist3 a dbo:Artist . }
    } LIMIT 1
} AS %artist3

# Step 4: Find the associated musical artist of that person, ensuring they are both musicians and artists
WITH {
    SELECT ?associatedArtist4 WHERE {
        %artist3 dbo:associatedMusicalArtist ?associatedArtist4 .
        FILTER EXISTS { ?associatedArtist4 a dbo:Musician . }
        FILTER EXISTS { ?associatedArtist4 a dbo:Artist . }
    } LIMIT 1
} AS %artist4

# Step 5: Compare results from steps 2 and 4 to find commonality or connection
SELECT DISTINCT ?commonArtist WHERE {
    VALUES (?artistA ?artistB) {(%artist2 %artist4)}
    
    OPTIONAL { ?artistA dbo:associatedMusicalArtist ?commonArtist . }
    OPTIONAL { ?artistB dbo:associatedMusicalArtist ?commonArtist . }

    FILTER EXISTS { ?commonArtist a dbo:Musician . }
    FILTER EXISTS { ?commonArtist a dbo:Artist . }
}
```",4,8,5,3,2,3,3,71,0,0,10,0,0.0,0
98,5,train,Give me the parent of the successor of Emperor Nijō.,SELECT ?result WHERE { ?v0 <http://dbpedia.org/ontology/parent> ?result . <http://dbpedia.org/resource/Emperor_Nijō> <http://dbpedia.org/ontology/successor> ?v0 . },"```sparql
SELECT ?successorParent WHERE {
  ?emperor dbo:wikiPageID ""Emperor_Nijō"" .
  ?emperor dbo:successor ?successor .
  ?successor dbo:parent ?successorParent .
}
```",2,2,3,2,1,2,2,9,0,0,1,0,0.0,0
507,26,train,"Give me the director of the movie, that is a movie and a work, with the person born on 1919-06-17.","SELECT ?result WHERE { ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?v1 <http://dbpedia.org/ontology/birthDate> ""1919-06-17""^^<http://www.w3.org/2001/XMLSchema#date> . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Film>. ?v2 <http://dbpedia.org/ontology/director> ?result . ?v2 <http://dbpedia.org/property/starring> ?v1 . }","```sparql
SELECT ?directorName WHERE {
  ?person dbo:birthDate ""1919-06-17""^^xsd:date .
  ?movie dbo:director ?person ;
         rdf:type dbo:Film ;
         rdf:type dbo:CreativeWork .
  ?person foaf:name ?directorName .
}
```",3,5,4,3,1,3,3,71,0,0,11,0,0.0,0
124,9,train,Give me the commander in Mahdist War and military force of Battle of Tamai.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/battle> <http://dbpedia.org/resource/Battle_of_Tamai> . <http://dbpedia.org/resource/Mahdist_War> <http://dbpedia.org/ontology/commander> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?commander ?militaryForce WHERE {
  # Find the Battle of Tamai entity
  dbr:Battle_of_Tamai dbo:participatedInMilitaryConflict dbr:Mahdist_War .
  
  # Identify the commander involved in the battle
  OPTIONAL { 
    dbr:Battle_of_Tamai dbo:commander ?commander .
  }
  
  # Determine the military force associated with the commander during the Mahdist War
  OPTIONAL {
    ?commander dbo:militaryServiceIn ?militaryForce .
    FILTER EXISTS { ?militaryForce dbo:participatedInMilitaryConflict dbr:Mahdist_War }
  }
}
```",2,2,3,1,2,3,3,71,0,0,1,0,0.0,0
443,11,train,Give me the birthplace of the work of yes.,"SELECT ?result WHERE { ?v1 <http://dbpedia.org/property/author> ""yes""@en . ?v1 <http://dbpedia.org/ontology/birthPlace> ?result . }","```sparql
SELECT ?birthPlace WHERE {
  ?author foaf:name ""Clarissa Pinkola Estés"" .
  ?author dbo:birthPlace ?birthPlace .
}
```",2,2,3,2,1,2,3,28,0,0,993,0,0.0,0
102,8,train,"Give me the native of the residence, that is English and a settlement, of Peter Finbow.",SELECT ?result WHERE { ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. ?v0 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/United_Kingdom>. <http://dbpedia.org/resource/Peter_Finbow> <http://dbpedia.org/property/residence> ?v0 . ?result <http://dbpedia.org/ontology/birthPlace> ?v0 . },"```sparql
SELECT ?residence ?nativeName WHERE {
  ?person dbo:birthPlace dbr:England .
  ?person foaf:name ""Peter Finbow""@en .
  ?person dbo:residence ?residence .
  ?residence a dbo:Settlement ;
             dbo:country dbr:England .
  OPTIONAL { ?residence rdfs:label ?nativeName . FILTER (lang(?nativeName) = 'en') }
}
```",2,4,3,2,1,3,2,20,0,0,100,0,0.0,0
917,33,train,"Give me the parent of Albert Kamehameha and child of the father of the spouse, that is a royalty, of Leleiohoku I.",SELECT ?result WHERE { ?v0 <http://dbpedia.org/ontology/spouse> <http://dbpedia.org/resource/Leleiohoku_I> . ?result <http://dbpedia.org/ontology/parent> ?v2 . ?v0 <http://dbpedia.org/property/father> ?v2 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?result <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Albert_Kamehameha> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?child WHERE {
    # Step 1: Identify Leleiohoku I
    dbr:Leleiohoku_I a dbo:Monarch ;
                     dbo:spouse ?spouse .

    # Step 2: Find the spouse of Leleiohoku I
    ?spouse a dbo:Person .

    # Step 3: Determine the father of the spouse
    ?spouse dbo:father ?fatherOfSpouse .

    # Step 4 & 5: Identify children of the father who are royalty
    ?fatherOfSpouse dbo:child ?child .
    FILTER EXISTS { ?child a dbo:Monarch } .

    # Step 6: Find Albert Kamehameha's parent
    dbr:Albert_Kamehameha a dbo:Person ;
                          dbo:parent ?parentOfAlbert .

    # Step 7: Identify common ancestor (child of father of spouse and parent of Albert)
    ?parentOfAlbert rdfs:label ?ancestorLabel .
    FILTER (?child = ?parentOfAlbert) .
}
```",4,5,5,3,2,3,3,71,0,0,1,0,0.0,0
216,14,train,"Give me the team of the person born, that is a sports manager and a soccer manager and a soccer player, on 1983-12-20.","SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerPlayer>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsManager>. ?result <http://dbpedia.org/ontology/coach> ?v1 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerManager>. ?v1 <http://dbpedia.org/ontology/birthDate> ""1983-12-20""^^<http://www.w3.org/2001/XMLSchema#date> . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?person ?team WHERE {
  ?person dbo:birthDate ""1983-12-20""^^xsd:date .
  ?person dbo:occupation dbr:Soccer_manager ;
          dbo:occupation dbr:Sports_manager ;
          dbo:occupation dbr:Soccer_player .
  
  OPTIONAL { 
    ?person dbo:currentTeam ?team .
  }
}
```",2,5,3,2,1,3,3,71,0,0,1,0,0.0,0
917,8,train,Give me the father of Kamehameha IV.,SELECT ?result WHERE { <http://dbpedia.org/resource/Kamehameha_IV> <http://dbpedia.org/property/father> ?result . },"```sparql
SELECT ?father WHERE {
  ?person dbo:givenName ""Alexander"" .
  ?person dbo:familyName ""Liholiho"" .
  ?person dbo:father ?father .
}
```",1,1,2,1,1,3,3,71,0,0,1,0,0.0,0
773,30,train,"Give me the parent of Carloman of Bavaria and parent of the child, that is a royalty, of Louis the German and spouse of Louis the German.",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Carloman_of_Bavaria> . ?v1 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Louis_the_German> . ?v1 <http://dbpedia.org/ontology/parent> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. <http://dbpedia.org/resource/Louis_the_German> <http://dbpedia.org/ontology/spouse> ?result . },"```sparql
# Query to find the parents of Carloman of Bavaria
SELECT ?parent WHERE {
  dbpedia:Carloman_of_Bavaria dbo:parent ?parent .
}

# Query to find a royal child of Louis the German and their parent
SELECT DISTINCT ?child ?parent WHERE {
  dbpedia:Louis_the_German dbo:child ?child .
  ?child rdf:type dbo:Monarch .
  ?child dbo:parent ?parent .
}

# Query to find the spouse of Louis the German
SELECT ?spouse WHERE {
  dbpedia:Louis_the_German dbo:spouse ?spouse .
}
```",4,5,5,2,3,3,3,71,0,0,1,0,0.0,0
130,6,train,Give me the entity in Tennessee and figure known as Vanderbilt Commodores.,SELECT ?result WHERE { ?result <http://dbpedia.org/property/nickname> <http://dbpedia.org/resource/Vanderbilt_Commodores> . ?result <http://dbpedia.org/ontology/state> <http://dbpedia.org/resource/Tennessee> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?team WHERE {
  ?university a dbo:University ;
              dbo:location dbr:Nashville,_Tennessee ;
              rdfs:label ""Vanderbilt University""@en .
  ?team dbo:sportTeamOf ?university ;
        rdfs:label ?label .
  FILTER(CONTAINS(LCASE(?label), ""commodores""))
}
```",2,2,3,1,2,3,2,20,0,0,1,0,0.0,0
216,31,train,"Give me the player in Mario Ivanković and player in the coach of the reference, that is an organisation and a soccer club, to Croatia U21.","SELECT ?result WHERE { <http://dbpedia.org/resource/Mario_Ivanković> <http://dbpedia.org/ontology/team> ?result . ?v1 <http://xmlns.com/foaf/0.1/name> ""Croatia U21""@en . ?v0 <http://dbpedia.org/ontology/team> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?v1 <http://dbpedia.org/ontology/coach> ?v0 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerClub>. }","```sparql
# Query to determine if Mario Ivanković is a player or coach for Croatia U21
SELECT ?role WHERE {
  ?person rdfs:label ""Mario Ivanković""@en .
  OPTIONAL { ?person dbo:position ?playerPosition . }
  OPTIONAL { ?person dbo:coachOf ?team . }
  FILTER EXISTS { ?team rdfs:label ""Croatia national under-21 football team""@en }
  
  # Determine role
  BIND(IF(BOUND(?playerPosition), ""Player"", IF(BOUND(?team), ""Coach"", ""Unknown"")) AS ?role)
}

# Query to find the organization and soccer club if Mario Ivanković is a coach
SELECT DISTINCT ?organization ?club WHERE {
  ?person rdfs:label ""Mario Ivanković""@en .
  ?person dbo:coachOf ?team .
  FILTER EXISTS { ?team rdfs:label ""Croatia national under-21 football team""@en }
  
  OPTIONAL { ?team dbo:partOf ?organization . }
  OPTIONAL { ?team dbo:member ?club . }
}
```",4,6,5,3,2,3,3,71,0,0,3,0,0.0,0
341,4,train,Give me the band member of Beyoncé and writer of In Love & War (Amerie album).,SELECT ?result WHERE { <http://dbpedia.org/resource/In_Love_&_War_(Amerie_album)> <http://dbpedia.org/property/writer> ?result . ?result <http://dbpedia.org/ontology/associatedMusicalArtist> <http://dbpedia.org/resource/Beyoncé> . },"```sparql
# Query to find members of Destiny's Child or collaborators with Beyoncé
SELECT ?person WHERE {
  ?band dcterms:member ?person .
  FILTER(CONTAINS(LCASE(?band), ""destiny's child"") || CONTAINS(LCASE(?band), ""beyoncé""))
}

UNION

# Query to find the writer of ""In Love & War"" from Amerie's album
SELECT DISTINCT ?writer WHERE {
  ?song dcterms:creator ?writer .
  ?album dcterms:hasPart ?song .
  FILTER(CONTAINS(LCASE(?album), ""amerie"") && CONTAINS(LCASE(?song), ""in love & war""))
}

# Combine results to find common individuals
SELECT DISTINCT ?person WHERE {
  VALUES ?person { 
    # Results from the first query (members of Destiny's Child or collaborators with Beyoncé)
    # Placeholder for actual SPARQL result values
  }
  
  VALUES ?writer { 
    # Results from the second query (writers of ""In Love & War"")
    # Placeholder for actual SPARQL result values
  }

  FILTER(?person = ?writer)
}
```",2,2,3,1,2,2,2,9,0,0,1,0,0.0,0
582,0,train,Give me the reference to Japan.,"SELECT ?result WHERE { ?result <http://xmlns.com/foaf/0.1/name> ""Japan""@en . }","```sparql
SELECT ?resource WHERE {
  ?resource rdfs:label ""Japan""@en.
}
```",1,1,2,1,1,3,3,71,1,1,14,0.5,0.06666666666666667,0.11764705882352941
965,8,train,"Give me the person born, that is a noble, as Prince George of Battenberg.","SELECT ?result WHERE { ?result <http://dbpedia.org/property/birthName> ""Prince George of Battenberg""@en . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Noble>. }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?person ?birthPlace ?title WHERE {
  ?person a dbo:Person ;
          dbo:title ?title ;
          dbo:birthPlace ?birthPlace .
  FILTER(CONTAINS(LCASE(str(?title)), ""prince"") || CONTAINS(LCASE(str(?title)), ""duke"") || CONTAINS(LCASE(str(?title)), ""count""))
}
```",1,2,2,1,1,3,3,71,0,2268,1,0.0,0.0,0
433,30,train,Give me the associated musical artist of Bill Evans and professional in the profession of Bob Marley and associated musical artist of Paul Chambers.,SELECT ?result WHERE { <http://dbpedia.org/resource/Bill_Evans> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?result <http://dbpedia.org/property/occupation> ?v1 . <http://dbpedia.org/resource/Bob_Marley> <http://dbpedia.org/property/occupation> ?v1 . <http://dbpedia.org/resource/Paul_Chambers> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>

SELECT DISTINCT ?billEvansArtist ?bobMarleyProfession ?paulChambersArtist 
WHERE {
  # Find associated musical artist of Bill Evans
  dbpedia:Bill_Evans dbo:associatedMusicalArtist ?billEvansArtist .
  
  # Find profession of Bob Marley
  dbpedia:Bob_Marley rdf:type ?bobMarleyProfession .

  # Find associated musical artist of Paul Chambers
  dbpedia:Paul_Chambers dbo:associatedMusicalArtist ?paulChambersArtist .
}
```",4,4,5,2,3,3,3,71,0,0,1,0,0.0,0
826,18,train,"Give me the predecessor of Louis IV, Grand Duke of Hesse and spouse of Anna Magdalena Appel and successor of Louis II, Grand Duke of Hesse.","SELECT ?result WHERE { <http://dbpedia.org/resource/Anna_Magdalena_Appel> <http://dbpedia.org/ontology/spouse> ?result . ?result <http://dbpedia.org/ontology/successor> <http://dbpedia.org/resource/Louis_IV,_Grand_Duke_of_Hesse> . <http://dbpedia.org/resource/Louis_II,_Grand_Duke_of_Hesse> <http://dbpedia.org/ontology/successor> ?result . }","```sparql
SELECT ?predecessor WHERE {
  ?grandDuke dbr:Louis_IV,_Grand_Duke_of_Hesse dbo:successorOf ?predecessor .
  ?predecessor rdf:type dbo:Monarch .
}
```",3,3,4,1,3,3,3,71,0,0,1,0,0.0,0
865,11,train,"Give me the native of the residence, that is a country, of Ram Jaipal Singh Yadav.",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/birthPlace> ?v1 . <http://dbpedia.org/resource/Ram_Jaipal_Singh_Yadav> <http://dbpedia.org/property/residence> ?v1 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?native WHERE {
  # Find the residence of Ram Jaipal Singh Yadav
  ?person dbo:name ""Ram Jaipal Singh Yadav""@en.
  
  OPTIONAL { 
    ?person dbo:residence ?residence .
  }
  
  # Ensure that the residence is a country
  ?residence rdf:type dbo:Country .

  # Find natives of this country
  ?native dbo:nationality ?residence .
}
```",2,3,3,2,1,3,3,71,0,0,1898,0,0.0,0
987,22,train,"Give me the entity in the region, that is a country, of Central European Time and birth place of Dado Polumenta.",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/country> ?v0 . ?v0 <http://dbpedia.org/property/timeZone> <http://dbpedia.org/resource/Central_European_Time> . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. <http://dbpedia.org/resource/Dado_Polumenta> <http://dbpedia.org/ontology/birthPlace> ?result . },"```sparql
SELECT ?country WHERE {
  ?person foaf:name ""Dado Polumenta""@en .
  ?person dbo:birthPlace ?birthPlace .
  ?birthPlace a dbo:Country ;
              dbp:timeZone ""Central European Time"" .
  BIND(?birthPlace AS ?country)
}
```",3,4,4,2,2,3,3,71,0,0,1,0,0.0,0
773,19,train,Give me the parent of Carloman of Bavaria and spouse of the father of Charles the Fat.,SELECT ?result WHERE { <http://dbpedia.org/resource/Charles_the_Fat> <http://dbpedia.org/property/father> ?v0 . ?v0 <http://dbpedia.org/ontology/spouse> ?result . ?result <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Carloman_of_Bavaria> . },"```sparql
SELECT ?individual WHERE {
  # Find the parent of Carloman of Bavaria
  ?carloman dbo:parent ?parent .
  ?carloman rdfs:label ""Carloman of Bavaria""@en .

  # Find the father of Charles the Fat and his spouse
  ?charlesFat dbo:father ?father .
  ?charlesFat rdfs:label ""Charles the Fat""@en .
  ?father dbo:spouse ?individual .

  # Ensure the parent of Carloman is the same as the spouse of Charles the Fat's father
  FILTER (?parent = ?individual)
}
```",3,3,4,2,2,3,3,71,0,0,1,0,0.0,0
267,11,train,"Give me the coach of the player, that is a soccer club, in Rasoul Khatibi and person born on 1953-03-01.","SELECT ?result WHERE { ?v2 <http://dbpedia.org/ontology/coach> ?result . ?result <http://dbpedia.org/ontology/birthDate> ""1953-03-01""^^<http://www.w3.org/2001/XMLSchema#date> . <http://dbpedia.org/resource/Rasoul_Khatibi> <http://dbpedia.org/ontology/team> ?v2 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerClub>. }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?player ?club ?coach WHERE {
  ?player a dbo:SoccerPlayer ;
          dbo:birthDate ""1953-03-01""^^xsd:date ;
          dbo:playsFor ?club .
  
  OPTIONAL { 
    ?club dbo:coach ?coach .
  }
  
  FILTER (str(?player) = str(dbr:Rasoul_Khatibi))
}
```",3,4,4,2,2,3,2,20,0,0,1,0,0.0,0
136,5,train,Give me the region coded as the area code of Levenhagen.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/areaCode> ?v0 . <http://dbpedia.org/resource/Levenhagen> <http://dbpedia.org/ontology/areaCode> ?v0 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?region WHERE {
  ?place a dbo:Settlement ;
        rdfs:label ""Levenhagen""@en .
  
  OPTIONAL { 
    ?place dbo:areaServed ?serviceArea .
    ?serviceArea dbo:telephoneCode ?areaCode .
    
    # Assuming we have a mapping of area codes to regions
    ?region dbo:telephoneCode ?areaCode ;
            rdfs:label ?regionLabel .
  }
  
  FILTER (lang(?regionLabel) = 'en')
}
```",2,2,3,2,1,2,2,9,0,0,9,0,0.0,0
456,26,train,"Give me the professional in the alter ego of the reference, that is a fictional character, to Lamont Cranston (radio, film and television).","SELECT ?result WHERE { ?result <http://dbpedia.org/property/occupation> ?v2 . ?v1 <http://dbpedia.org/property/alterEgo> ?v2 . ?v1 <http://xmlns.com/foaf/0.1/name> ""Lamont Cranston (radio, film and television)""@en . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/FictionalCharacter>. }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?alterEgo WHERE {
  dbr:Lamont_Cranston dbo:alterEgo ?alterEgo .
}
```",3,4,4,3,1,3,3,71,0,0,39640,0,0.0,0
582,38,train,"Give me the player in the father, that is an athlete and a soccer manager and a sports manager, of Masami Nagasawa and figure known as the nickname of Japan national football team.",SELECT ?result WHERE { <http://dbpedia.org/resource/Japan_national_football_team> <http://dbpedia.org/property/nickname> ?v2 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsManager>. <http://dbpedia.org/resource/Masami_Nagasawa> <http://dbpedia.org/property/father> ?v3 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Athlete>. ?v3 <http://dbpedia.org/ontology/team> ?result . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerManager>. ?result <http://dbpedia.org/property/nickname> ?v2 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?father WHERE {
  # Find Masami Nagasawa's father
  ?nagasawa dbo:parent ?father .
  FILTER(STRSTARTS(STR(?nagasawa), ""http://dbpedia.org/resource/Masami_Nagasawa""))

  # Check if the father is an athlete and a soccer manager
  ?father dbo:occupation dbr:Soccer_manager ;
          dbo:occupation dbr:Athlete .

  # Verify he is also a sports manager
  ?father dbo:occupation dbr:Sports_manager .

  # Confirm the nickname associated with Japan national football team
  ?father rdfs:label ""Hajime Moriyasu""@en .
}
```",4,7,5,2,2,3,3,71,0,0,1,0,0.0,0
433,8,train,Give me the profession of Bob Marley.,SELECT ?result WHERE { <http://dbpedia.org/resource/Bob_Marley> <http://dbpedia.org/property/occupation> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?occupation WHERE {
  dbr:Bob_Marley dbo:occupation ?occupation .
}
```",1,1,2,1,1,3,3,71,0,1,3,0.0,0.0,0
216,12,train,Give me the player in Mario Ivanković and team of Ognjen Vukojević.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/coach> <http://dbpedia.org/resource/Ognjen_Vukojević> . <http://dbpedia.org/resource/Mario_Ivanković> <http://dbpedia.org/ontology/team> ?result . },"```sparql
# Query for Mario Ivanković's team
SELECT ?team WHERE {
  ?person foaf:name ""Mario Ivanković""@en .
  ?person foaf:currentTeam ?team .
}

UNION

# Query for Ognjen Vukojević's team
SELECT ?team WHERE {
  ?person foaf:name ""Ognjen Vukojević""@en .
  ?person foaf:currentTeam ?team .
}
```",2,2,3,1,2,3,3,71,0,0,1,0,0.0,0
933,29,train,Give me the reference to the birth name of Alan Warner (musician) and band of Mike Elliott (saxophonist) and band of The Ramong Sound.,SELECT ?result WHERE { <http://dbpedia.org/resource/Alan_Warner_(musician)> <http://dbpedia.org/property/birthName> ?v3 . ?result <http://xmlns.com/foaf/0.1/name> ?v3 . <http://dbpedia.org/resource/Mike_Elliott_(saxophonist)> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . <http://dbpedia.org/resource/The_Ramong_Sound> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . },"```sparql
# Query for Alan Warner's birth name
SELECT ?birthName WHERE {
  dbpedia:Alan_Warner_(musician) dbo:birthName ?birthName .
}

# Query for Mike Elliott's band
SELECT ?band WHERE {
  dbpedia:Mike_Elliott_(saxophonist) dbo:band ?band .
}

# Query for The Ramong Sound's associated band or project
SELECT ?associatedBand WHERE {
  dbpedia:The_Ramong_Sound dbo:associatedBandOrProject ?associatedBand .
}
```",4,4,5,2,3,3,3,71,0,0,1,0,0.0,0
170,4,train,Give me the awardee of People's Artist of Russia.,SELECT ?result WHERE { ?result <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/People's_Artist_of_Russia> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?awardeeName WHERE {
  ?award a dbo:Award ;
        rdfs:label ""People's Artist of Russia""@en .
  
  ?recipient dbo:receivedAward ?award ;
             foaf:name ?awardeeName .
}
```",1,1,2,1,1,2,3,28,0,0,24,0,0.0,0
36,13,train,"Give me the person born in 1971 and actor of the claim to fame, that is a film, of Lepacious Bose.","SELECT ?result WHERE { ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Film>. ?result <http://dbpedia.org/ontology/birthYear> ""1971""^^<http://www.w3.org/2001/XMLSchema#gYear> . <http://dbpedia.org/resource/Lepacious_Bose> <http://dbpedia.org/ontology/knownFor> ?v0 . ?v0 <http://dbpedia.org/ontology/starring> ?result . }","```sparql
# Step 1: Find the claim-to-fame film of Lepa Brena
SELECT ?film WHERE {
    wd:Q123456 foaf:name ?name .
    ?film dbo:starring wd:Q123456 .
    FILTER(CONTAINS(LCASE(?name), ""lepa brena""))
}

# Step 2: Find actors in the identified film born in 1971
SELECT DISTINCT ?actor WHERE {
    # Replace 'FilmURI' with the actual URI of the film found in step 1
    wd:FilmURI dbo:starring ?actor .
    ?actor dbo:birthdayYear ""1971""^^xsd:gYear .
}
```

Note: The placeholder `wd:Q123456` should be replaced with Lepa Brena's DBpedia identifier, and `wd:FilmURI` should be replaced with the URI of her claim-to-fame film once identified.",3,4,4,2,2,2,3,28,0,0,1,0,0.0,0
445,14,train,Give me the entity in the award of George H. Cameron.,SELECT ?result WHERE { <http://dbpedia.org/resource/George_H._Cameron> <http://dbpedia.org/property/awards> ?v1 . ?result <http://dbpedia.org/ontology/country> ?v1 . },"```sparql
SELECT ?award WHERE {
  wd:Q1234567 dbo:recipient wd:Q7890123 .
  wd:Q1234567 rdfs:label ?awardLabel .
  FILTER (lang(?awardLabel) = 'en' && regex(str(?awardLabel), ""National Medal of Technology"", ""i""))
}
```

Note: In the above SPARQL query, `wd:Q1234567` should be replaced with the DBpedia resource identifier for George H. Cameron, and `wd:Q7890123` is a placeholder for his DBpedia entity ID.",2,2,3,2,1,3,3,71,0,0,87241,0,0.0,0
459,15,train,"Give me the person born as John Kevin Stitt and governor of the death place, that is a settlement, of Cliff Roquemore.","SELECT ?result WHERE { ?result <http://dbpedia.org/property/birthName> ""John Kevin Stitt""@en . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. ?v1 <http://dbpedia.org/property/governor> ?result . <http://dbpedia.org/resource/Cliff_Roquemore> <http://dbpedia.org/ontology/deathPlace> ?v1 . }","```sparql
# Query to find details about John Kevin Stitt using his birth name
SELECT ?person WHERE {
  ?person foaf:name ""John Kevin Stitt""@en .
  ?person dbo:birthName ""John Kevin Stitt"" .
}

# Query to find the death place of Cliff Roquemore and ensure it is a settlement
SELECT ?deathPlace WHERE {
  ?cliffRoquemore dbo:deathPlace ?deathPlace .
  FILTER(CONTAINS(LCASE(STR(?deathPlace)), ""settlement""))
  ?cliffRoquemore foaf:name ""Cliff Roquemore""@en .
}

# Query to check if John Kevin Stitt is the governor of the death place of Cliff Roquemore
SELECT ?governor WHERE {
  ?person dbo:birthName ""John Kevin Stitt"" .
  ?deathPlace dbo:governmentOfficial ?governor .
  FILTER(?governor = ?person)
}
```",3,4,4,2,2,2,3,28,0,0,1,0,0.0,0
987,21,train,"Give me the birth place of the band, that is an artist and a musical artist, of Šako Polumenta and entity in Montenegro.",SELECT ?result WHERE { <http://dbpedia.org/resource/Šako_Polumenta> <http://dbpedia.org/ontology/associatedMusicalArtist> ?v2 . ?result <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Montenegro> . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?v2 <http://dbpedia.org/ontology/birthPlace> ?result . },"```sparql
SELECT ?band ?birthPlace WHERE {
  ?band dbo:member Šako_Polumenta ;
        a dbo:Band ;
        dbo:genre dbc:Musical_Artists .
  OPTIONAL { ?band dbo:country dbr:Montenegro . }
  ?band dbo:birthPlace ?birthPlace .
}
```",3,5,4,2,2,3,3,71,0,0,1,0,0.0,0
216,17,train,Give me the administration of  and party of the awardee of Australian Defence Medal.,"SELECT ?result WHERE { ?result <http://dbpedia.org/property/leader> """"@en . ?v1 <http://dbpedia.org/ontology/party> ?result . ?v1 <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/Australian_Defence_Medal> . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?person ?party ?administration WHERE {
  ?person dbo:award dbr:Australian_Defence_Medal .
  OPTIONAL { ?person dbo:politicalParty ?party . }
  OPTIONAL { ?person dbo:officeHeld ?office . 
             ?office dbo:holder ?person ;
                     dbo:termStart ?start ;
                     dbo:termEnd ?end .
             ?office dbo:administration ?administration . }
}
```",3,3,4,2,2,2,3,28,0,7,1,0.0,0.0,0
935,3,train,Give me the awardee of Sitara-i-Imtiaz.,SELECT ?result WHERE { ?result <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/Sitara-i-Imtiaz> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?recipient ?recipientLabel WHERE {
  ?award dbo:wikiPageRedirects dbr:Sitara-i-Imtiaz .
  ?award dbo:recipient ?recipient .
  SERVICE wikibase:label { bd:serviceParam wikibase:language ""[AUTO_LANGUAGE],en"". }
}
```",1,1,2,1,1,3,2,20,0,0,52,0,0.0,0
715,35,train,"Give me the leader of the office, that is a government agency and an organisation, of Carlos Franco Iribarnegaray and commander in the force, that is a military conflict, of Abd el-Krim.",SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v2 <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Abd_el-Krim> . <http://dbpedia.org/resource/Carlos_Franco_Iribarnegaray> <http://dbpedia.org/property/office> ?v1 . ?v1 <http://dbpedia.org/ontology/leader> ?result . ?v2 <http://dbpedia.org/ontology/commander> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/GovernmentAgency>. },"```sparql
# Query for the leader of the office associated with Carlos Franco Iribarnegaray
SELECT ?officeLeader WHERE {
  ?person foaf:name ""Carlos Franco Iribarnegaray""@en .
  ?person dbo:positionHeld ?office .
  ?office a dbo:GovernmentAgency ;
          dbo:leader ?officeLeader .
}

UNION

# Query for the commander in the force of Abd el-Krim
SELECT ?commander WHERE {
  ?conflict dbo:commander ?commander .
  ?commander foaf:name ""Abd el-Krim""@en .
  ?conflict a dbo:MilitaryConflict .
}
```",4,7,5,2,2,3,3,71,0,0,1,0,0.0,0
274,8,train,"Give me the band member of the person born, that is a musical artist, as John Birks Gillespie.","SELECT ?result WHERE { ?v1 <http://dbpedia.org/property/birthName> ""John Birks Gillespie""@en . ?result <http://dbpedia.org/ontology/associatedMusicalArtist> ?v1 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?band WHERE {
  ?person dbo:birthName ""John Birks Gillespie""@en .
  ?person dbo:occupation dbr:Musical_artist .
  ?person dbo:memberOfBand ?band .
}
```",2,3,3,2,1,2,3,28,0,0,67,0,0.0,0
98,8,train,Give me the region of the time zone of Lopez Jaena.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/timeZone> ?v1 . <http://dbpedia.org/resource/Lopez_Jaena> <http://dbpedia.org/ontology/timeZone> ?v1 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?region WHERE {
  ?location rdfs:label ""Lopez Jaena""@en .
  ?location dbo:timeZone ?timezone .
  ?timezone dbo:region ?region .
}
```",2,2,3,2,1,2,3,28,0,0,1874,0,0.0,0
465,6,train,"Give me the child, that is a royalty, of Ferdinand I, Holy Roman Emperor.","SELECT ?result WHERE { ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. <http://dbpedia.org/resource/Ferdinand_I,_Holy_Roman_Emperor> <http://dbpedia.org/ontology/child> ?result . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?child ?title WHERE {
  ?person a dbo:Person ;
          foaf:name ""Ferdinand I"" ;
          dbo:spouse ?spouse .
  
  OPTIONAL { ?spouse dbo:child ?child . }
  OPTIONAL { ?child dbo:title ?title . }

  FILTER regex(?title, ""King|Queen|Emperor|Empress|Prince|Princess"", ""i"")
}
```",1,2,2,1,1,3,3,71,0,0,11,0,0.0,0
232,6,train,Give me the claim to fame of the person born as Emily Katherine Jacques.,"SELECT ?result WHERE { ?v0 <http://dbpedia.org/property/birthName> ""Emily Katherine Jacques""@en . ?v0 <http://dbpedia.org/ontology/knownFor> ?result . }","```sparql
SELECT ?claimToFame WHERE {
  wd:Q210867 dcterms:title ""Emily Deschanel""@en .
  OPTIONAL { wd:Q210867 dbo:notableWork ?work . }
  OPTIONAL { ?work dbo:abstract ?claimToFame FILTER (lang(?claimToFame) = 'en') }
}
```",2,2,3,2,1,2,2,9,0,0,2,0,0.0,0
839,21,train,"Give me the band of the person born, that is a musical artist, as Kevin Richard Russell and band of Matthias Röhr.","SELECT ?result WHERE { ?v1 <http://dbpedia.org/property/birthName> ""Kevin Richard Russell""@en . ?result <http://dbpedia.org/ontology/bandMember> <http://dbpedia.org/resource/Matthias_Röhr> . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?v1 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . }","```sparql
SELECT ?kipWingerBand ?matthiasRoehrBand WHERE {
  # Find Kip Winger's band
  ?kipWinger dbo:birthName ""Kevin Richard Russell""@en .
  ?kipWinger dbo:band ?kipWingerBand .

  # Find Matthias Röhr's band
  ?matthiasRoehr foaf:name ""Matthias Röhr""@de .
  ?matthiasRoehr dbo:band ?matthiasRoehrBand .

  FILTER EXISTS { ?kipWinger dbo:occupation dbp:musician . }
  FILTER EXISTS { ?matthiasRoehr dbo:occupation dbp:musician . }
}
```",3,4,4,2,2,3,3,71,0,0,1,0,0.0,0
417,13,train,Give me the child of the father of Frederick IX of Denmark.,SELECT ?result WHERE { <http://dbpedia.org/resource/Frederick_IX_of_Denmark> <http://dbpedia.org/property/father> ?v1 . ?result <http://dbpedia.org/property/father> ?v1 . },"```sparql
SELECT ?child WHERE {
  wd:Q1116 wdt:P22 ?father .
  ?father wdt:P31 wd:Q5 .
  ?father wdt:P40 ?child .
  FILTER(?child != wd:Q1116) # Exclude Frederick IX himself to find other children
}
```",2,2,3,2,1,3,3,71,0,0,2,0,0.0,0
645,27,train,"Give me the leader of the office, that is a government agency and an organisation, of the native of Restoration (Spain).",SELECT ?result WHERE { ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?v1 <http://dbpedia.org/property/office> ?v2 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/GovernmentAgency>. ?v2 <http://dbpedia.org/ontology/leader> ?result . ?v1 <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Restoration_(Spain)> . },"```sparql
SELECT ?leader WHERE {
  ?office dbo:country dbr:Spain ;
          dbo:location dbr:Restoration_(city) .
  ?office dbo:head ?leader .
}
```

Note: The query assumes ""Restoration (Spain)"" refers to a city or administrative region named ""Restoration"" in Spain. If it refers to the historical period, adjustments would be needed based on available DBpedia data.",3,5,4,3,1,3,3,71,0,0,15,0,0.0,0
47,9,train,Give me the office of Suvendu Adhikari and office of Bidesh Ranjan Bose.,SELECT ?result WHERE { <http://dbpedia.org/resource/Suvendu_Adhikari> <http://dbpedia.org/property/office> ?result . <http://dbpedia.org/resource/Bidesh_Ranjan_Bose> <http://dbpedia.org/property/office> ?result . },"```sparql
PREFIX dbp: <http://dbpedia.org/property/>
PREFIX dbo: <http://dbpedia.org/ontology/>

SELECT ?person ?officeName WHERE {
  VALUES ?person { 
    <http://dbpedia.org/resource/Suvendu_Adhikari> 
    <http://dbpedia.org/resource/Bidesh_Ranjan_Bose>
  }
  
  ?person dbo:office ?office .
  ?office rdfs:label ?officeName .
  FILTER (lang(?officeName) = 'en')
}
```",2,2,3,1,2,3,3,71,0,0,1,0,0.0,0
200,4,train,Give me the reference to Angelcorpse and band member of Order from Chaos.,"SELECT ?result WHERE { ?result <http://xmlns.com/foaf/0.1/name> ""Angelcorpse""@en . ?result <http://dbpedia.org/ontology/associatedMusicalArtist> <http://dbpedia.org/resource/Order_from_Chaos> . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?member ?orderFromChaosAssociation WHERE {
  # Identify Angelcorpse entity
  VALUES ?angelcorpse { dbr:Angelcorpse }
  
  # Find band members of Angelcorpse
  ?angelcorpse dbo:bandMember ?member .
  
  OPTIONAL {
    # Check if the member is associated with Order from Chaos
    ?orderFromChaosAssociation dbo:bandMember ?member ;
                               rdfs:label ""Order from Chaos""@en .
  }
}
```",2,2,3,1,2,2,2,9,0,0,1,0,0.0,0
443,1,train,Give me the birthplace of Ulf Lundell.,SELECT ?result WHERE { <http://dbpedia.org/resource/Ulf_Lundell> <http://dbpedia.org/ontology/birthPlace> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?birthPlace WHERE {
  ?person a dbo:Person ;
          foaf:name ""Ulf Lundell""@en .
  ?person dbo:birthPlace ?birthPlace .
}
```",1,1,2,1,1,2,3,28,2,0,0,1.0,1.0,1.0
507,25,train,Give me the director of Entertaining Mr Sloane (film) and professional in the profession of Guy Ferland.,SELECT ?result WHERE { <http://dbpedia.org/resource/Guy_Ferland> <http://dbpedia.org/property/occupation> ?v1 . <http://dbpedia.org/resource/Entertaining_Mr_Sloane_(film)> <http://dbpedia.org/ontology/director> ?result . ?result <http://dbpedia.org/property/occupation> ?v1 . },"```sparql
SELECT ?director ?profession WHERE {
  # Query for the director of ""Entertaining Mr Sloane""
  dbpedia:Entertaining_Mr_Sloane (dbp:director) ?director .
  
  # Query for the profession of Guy Ferland
  dbpedia:Guy_Ferland dbo:occupation ?profession .
}
```",3,3,4,2,2,3,3,71,0,0,1,0,0.0,0
326,8,train,"Give me the person decedent at the award, that is a country, of Adelbert Cronkhite.",SELECT ?result WHERE { ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. <http://dbpedia.org/resource/Adelbert_Cronkhite> <http://dbpedia.org/property/awards> ?v0 . ?result <http://dbpedia.org/ontology/deathPlace> ?v0 . },"```sparql
SELECT ?decedent WHERE {
  ?award dbo:name ?awardName .
  ?award dbo:country ?country .
  ?award dbo:recipient ?person .
  ?person foaf:name ""Adelbert Cronkhite"" .
  
  OPTIONAL { 
    ?award dbo:decedent ?decedent .
  }
}
```",2,3,3,2,1,3,2,20,0,0,3795,0,0.0,0
216,32,train,"Give me the player in the coach, that is a soccer player and a sports manager and a soccer manager, of Bosnia and Herzegovina national under-18 football team and player in the coach of Croatia national under-21 football team.",SELECT ?result WHERE { ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerManager>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsManager>. <http://dbpedia.org/resource/Croatia_national_under-21_football_team> <http://dbpedia.org/ontology/coach> ?v1 . ?v1 <http://dbpedia.org/ontology/team> ?result . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerPlayer>. <http://dbpedia.org/resource/Bosnia_and_Herzegovina_national_under-18_football_team> <http://dbpedia.org/ontology/coach> ?v3 . ?v3 <http://dbpedia.org/ontology/team> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?person WHERE {
  # Person is a coach of Bosnia and Herzegovina national under-18 football team
  ?person dbo:coach dbr:Bosnia_and_Herzegovina_national_under-18_football_team .
  
  # Person has been a player (or involved in coaching) for Croatia national under-21 football team
  ?person dbo:player dbr:Croatia_national_under-21_football_team .

  # Ensure the person is also known as a sports manager and soccer manager
  ?person dbo:sportsManager ?x .
  ?person dbo:manager ?y .
}
```",4,7,5,2,2,3,3,71,0,0,3,0,0.0,0
124,19,train,"Give me the military force of Battle of Tamai and commander in the war, that is a societal event and a military conflict, of A Field Battery, Royal Australian Artillery.","SELECT ?result WHERE { ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v0 <http://dbpedia.org/ontology/commander> ?result . ?result <http://dbpedia.org/ontology/battle> <http://dbpedia.org/resource/Battle_of_Tamai> . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. <http://dbpedia.org/resource/A_Field_Battery,_Royal_Australian_Artillery> <http://dbpedia.org/ontology/battle> ?v0 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?militaryForce ?commander WHERE {
  # Identify the Battle of Tamai as a military conflict
  dbr:Battle_of_Tamai dbo:partOf ?war .
  
  # Ensure the war is both a societal event and a military conflict
  ?war rdf:type dbo:MilitaryConflict ;
       rdf:type dbo:SocietalEvent .

  # Find military forces involved in the Battle of Tamai
  ?militaryForce dbo:involvedInMilitaryConflicts dbr:Battle_of_Tamai .
  
  # Check if A Field Battery, Royal Australian Artillery is part of these forces
  OPTIONAL { 
    ?unit dbr:A_Field_Battery,_Royal_Australian_Artillery ;
          dbo:partOf ?militaryForce .
  }
  
  # Retrieve commanders associated with the military force
  ?commander dbo:commanded ?militaryForce .
}
```",3,5,4,2,2,3,3,71,0,0,1,0,0.0,0
606,9,train,"Give me the nickname of the figure known, that is a settlement, as Barb City.","SELECT ?result WHERE { ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. ?v0 <http://dbpedia.org/property/nickname> ?result . ?v0 <http://dbpedia.org/property/nickname> ""Barb City""@en . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?settlement ?label WHERE {
  ?settlement a dbo:PopulatedPlace ;
              rdfs:label ?label .
  FILTER (CONTAINS(LCASE(?label), ""barb city""))
}
```",2,3,3,2,1,3,2,20,0,0,1,0,0.0,0
606,2,train,"Give me the figure known, that is a settlement, as Barb City.","SELECT ?result WHERE { ?result <http://dbpedia.org/property/nickname> ""Barb City""@en . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?settlement WHERE {
  ?settlement a dbo:PopulatedPlace .
  ?settlement rdfs:label ""Barb City""@en .
}
```",1,2,2,1,1,3,2,20,0,0,1,0,0.0,0
839,27,train,"Give me the band of the band, that is a musical artist, of the professional in Musician.","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/bandMember> ?v2 . ?v1 <http://dbpedia.org/property/occupation> ""Musician""@en . ?v1 <http://dbpedia.org/ontology/associatedMusicalArtist> ?v2 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>

SELECT ?musician ?band1 ?band2 WHERE {
  ?musician a dbo:Musician .
  ?musician dbo:musicalArtist ?artist .
  ?musician dbo:band ?band1 .
  OPTIONAL { ?band1 dbo:band ?band2 . }
}
```",3,4,4,3,1,3,3,71,0,0,706,0,0.0,0
715,22,train,"Give me the leader of the office, that is a government agency and an organisation, of Carlos Franco Iribarnegaray and commander in Rif War.",SELECT ?result WHERE { <http://dbpedia.org/resource/Rif_War> <http://dbpedia.org/ontology/commander> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. <http://dbpedia.org/resource/Carlos_Franco_Iribarnegaray> <http://dbpedia.org/property/office> ?v1 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/GovernmentAgency>. ?v1 <http://dbpedia.org/ontology/leader> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?officeLeader WHERE {
  # Find Carlos Franco Iribarnegaray's roles
  ?person a dbo:Person ;
          foaf:name ""Carlos Franco Iribarnegaray""@en ;
          dbo:occupation ?occupation .

  OPTIONAL { 
    ?occupation dbo:field dbr:Military ; # Check if he was in the military field
               dbo:positionHeld ?office .
  }

  OPTIONAL {
    ?person dbo:memberOf ?organization .
    ?organization a dbo:GovernmentAgency ; # Ensure it's a government agency
                  dbo:head ?officeLeader .
  }
  
  OPTIONAL {
    ?rifWar dbr:Rif_War ;
            dbo:commander ?person . # Confirm his role in the Rif War
  }

  FILTER EXISTS { ?rifWar } # Ensure he was indeed a commander in the Rif War

  # Return the leader of the office/organization
}
```",3,5,4,2,2,3,3,71,0,0,1,0,0.0,0
865,0,train,Give me the native of British Raj.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/British_Raj> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?native 
WHERE {
  dbr:British_Raj dbo:nativeName ?native .
}
```",1,1,2,1,1,3,3,71,0,0,1898,0,0.0,0
382,1,train,Give me the landmark at elevation of 100.,"SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/elevation> ""100""^^<http://www.w3.org/2001/XMLSchema#integer> . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?landmark WHERE {
  ?landmark a dbo:Landmark .
  OPTIONAL { ?landmark dbo:elevation ?elevation . }
  FILTER (?elevation = ""100""^^xsd:decimal)
}
```",1,1,2,1,1,3,2,20,0,0,727,0,0.0,0
573,31,train,"Give me the person decedent at the administration, that is a region, of the real name of Charlie Baker (Australian footballer) and person decedent at Quincy, Massachusetts.","SELECT ?result WHERE { ?v0 <http://dbpedia.org/property/governor> ?v1 . ?result <http://dbpedia.org/ontology/deathPlace> <http://dbpedia.org/resource/Quincy,_Massachusetts> . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Region>. <http://dbpedia.org/resource/Charlie_Baker_(Australian_footballer)> <http://xmlns.com/foaf/0.1/name> ?v1 . ?result <http://dbpedia.org/ontology/deathPlace> ?v0 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT DISTINCT ?person WHERE {
  # Find the real name of Charlie Baker (Australian footballer)
  ?charlieBaker a dbo:AustralianFootballer ;
                foaf:name ""Charlie Baker"" ;
                dbp:birthName ?realName .

  # Get the administrative region associated with this real name
  ?region dbo:administrativeRegionFor ?realName .

  # Find persons who are decedents in both the identified region and Quincy, Massachusetts
  ?person dbo:deathPlace ?place .
  
  FILTER EXISTS {
    ?place dbr:Quincy,_Massachusetts .
  }
  
  FILTER EXISTS {
    ?place ?p ?region .
  }
}
```",4,5,5,3,2,3,3,71,0,0,4,0,0.0,0
715,16,train,"Give me the force of the mayor, that is an office holder and a politician and a president, of 1933 Spanish general election.",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/commander> ?v1 . <http://dbpedia.org/resource/1933_Spanish_general_election> <http://dbpedia.org/property/leader> ?v1 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/President>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?person ?mayorRole ?presidentRole WHERE {
  ?person a dbo:Politician ;
          foaf:name ?name .
  
  OPTIONAL { ?person dbo:officeHolderOf dbr:Mayor_of_Madrid . }
  OPTIONAL { ?person dbo:officeHolderOf dbr:President_of_Spain . }

  FILTER(CONTAINS(LCASE(?name), ""niceto alcalá zamora""))
}
```",2,5,3,2,1,3,3,71,0,0,1,0,0.0,0
645,36,train,"Give me the commander in Battle of Jarama and leader of the office, that is a government agency and an organisation, of the native of Restoration (Spain).",SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/GovernmentAgency>. ?v0 <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Restoration_(Spain)> . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?v1 <http://dbpedia.org/ontology/leader> ?result . <http://dbpedia.org/resource/Battle_of_Jarama> <http://dbpedia.org/ontology/commander> ?result . ?v0 <http://dbpedia.org/property/office> ?v1 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?commander ?officeLeader WHERE {
  # Find Francisco Franco as commander in the Battle of Jarama
  ?battle dbo:commander ?commander .
  ?commander rdfs:label ""Francisco Franco""@en .

  FILTER regex(str(?battle), ""Battle of Jarama"", ""i"")

  # Find Francisco Franco as leader of an office or organization
  ?officeLeader dbo:leader ?commander .
  ?officeLeader a dbo:GovernmentAgency ;
                a dbo:Organization .

  # Ensure the person is native to Spain during its Restoration period
  ?commander dbo:nationality dbr:Spain .
  ?commander dbo:dateOfBirth ?dob .
  ?commander dbo:dateOfDeath ?dod .

  FILTER (?dob <= ""1939-04-01""^^xsd:date && (?dod >= ""1939-04-01""^^xsd:date || ?dod = """")) 
}
```",4,6,5,3,2,3,3,71,0,0,2,0,0.0,0
935,11,train,Give me the headquarter of Provincial Assembly of Balochistan and death place of the awardee of Sitara-i-Imtiaz.,SELECT ?result WHERE { <http://dbpedia.org/resource/Provincial_Assembly_of_Balochistan> <http://dbpedia.org/ontology/location> ?result . ?v2 <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/Sitara-i-Imtiaz> . ?v2 <http://dbpedia.org/ontology/deathPlace> ?result . },"```sparql
# Query 1: Headquarter of Provincial Assembly of Balochistan
SELECT ?headquarters WHERE {
  wd:Q123456 rdfs:label ""Provincial Assembly of Balochistan""@en .
  OPTIONAL { wd:Q123456 dbo:location ?headquarters . }
}

# Query 2: Death place of awardees of Sitara-i-Imtiaz
SELECT DISTINCT ?deathPlace WHERE {
  ?person dbo:awardReceived wd:Q789012 ; # Assuming Q789012 is the DBpedia item for Sitara-i-Imtiaz
           dbo:deathPlace ?deathPlace .
}
```

Note: The placeholders `wd:Q123456` and `wd:Q789012` should be replaced with the actual DBpedia identifiers for the Provincial Assembly of Balochistan and the Sitara-i-Imtiaz award, respectively. These can be found by searching DBpedia or using a SPARQL endpoint to query for these entities.",3,3,4,2,2,3,2,20,0,0,1,0,0.0,0
433,21,train,"Give me the professional in Musician and associated musical artist of the person born, that is a musical artist and an artist, as Paul Laurence Dunbar Chambers Jr..","SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?v1 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?result <http://dbpedia.org/property/occupation> ""Musician""@en . ?v1 <http://dbpedia.org/property/birthName> ""Paul Laurence Dunbar Chambers Jr.""@en . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?associatedMusician WHERE {
  ?person a dbo:MusicalArtist ;
          foaf:name ""Paul Chambers"" ;
          dbp:birthName ""Paul Laurence Dunbar Chambers Jr."" .
  
  ?person dbo:musicalArtist ?associatedMusician .

  FILTER EXISTS { ?associatedMusician a dbo:MusicalArtist }
  FILTER EXISTS { ?associatedMusician a dbo:Artist }
}
```",3,5,4,2,2,3,3,71,0,0,15,0,0.0,0
508,12,train,"Give me the birthplace of the commander, that is Saudi, in Central Plains War and birthplace of Ma Hongkui.",SELECT ?result WHERE { <http://dbpedia.org/resource/Ma_Hongkui> <http://dbpedia.org/ontology/birthPlace> ?result . ?v0 <http://dbpedia.org/ontology/birthPlace> ?result . ?v0 <http://dbpedia.org/ontology/nationality> <http://dbpedia.org/resource/Saudi_Arabia>. <http://dbpedia.org/resource/Central_Plains_War> <http://dbpedia.org/ontology/commander> ?v0 . },"```sparql
# Query to find the birthplace of Ma Hongkui
SELECT ?birthPlace WHERE {
  wd:Q123456 foaf:bornIn ?birthPlace .
}

# Note: Replace `wd:Q123456` with the actual DBpedia resource identifier for Ma Hongkui.
```",3,4,4,2,2,3,2,20,0,0,3,0,0.0,0
917,20,train,Give me the parent of Albert Kamehameha and child of the father of Keʻelikōlani.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Albert_Kamehameha> . ?result <http://dbpedia.org/ontology/parent> ?v1 . <http://dbpedia.org/resource/Keʻelikōlani> <http://dbpedia.org/property/father> ?v1 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?person WHERE {
  # Albert Kamehameha's parent
  OPTIONAL { 
    ?albertKamehameha dbo:parent ?parent1 .
    ?parent1 rdfs:label ""Albert Kamehameha""@en .
  }
  
  # Father of Keʻelikōlani (Liholiho, also known as Kamehameha II)
  OPTIONAL {
    ?liholiho dbo:child ?keelikolanisChild .
    ?liholiho rdfs:label ""Kamehameha II""@en .
    ?keelikolanisChild rdfs:label ""Keʻelikōlani""@en .
  }
  
  # Find the common person
  FILTER (?parent1 = ?keelikolanisChild)
  
  # Return the person's label
  ?person rdfs:label ?name .
  FILTER (CONTAINS(LCASE(?name), LCASE(str(?parent1))))
}
```",3,3,4,2,2,3,3,71,0,0,1,0,0.0,0
554,7,train,Give me the leader of the administration of Francisco da Costa Gomes.,SELECT ?result WHERE { ?v1 <http://dbpedia.org/property/leader> ?result . ?v1 <http://dbpedia.org/property/leader> <http://dbpedia.org/resource/Francisco_da_Costa_Gomes> . },"```sparql
SELECT ?president WHERE {
  ?person dbo:officeLabel ""President""@en.
  ?person dbo:termStart ?start.
  ?person dbo:termEnd ?end.
  ?person foaf:name ""Francisco da Costa Gomes""@pt.
  FILTER(?start <= ""1976-07-14""^^xsd:date && ?end >= ""1974-09-09""^^xsd:date)
}
```",2,2,3,2,1,3,2,20,0,0,4,0,0.0,0
715,5,train,"Who is the mayor, that is an office holder and a politician and a president, of 1933 Spanish general election?",SELECT ?result WHERE { ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/President>. ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. <http://dbpedia.org/resource/1933_Spanish_general_election> <http://dbpedia.org/property/leader> ?result . },"```sparql
SELECT ?person WHERE {
  ?person dbo:officeHolderOf dbr:1933_Spanish_general_election .
  ?person dbo:positionTitle dbr:Mayor_of_Madrid .
  ?person dbo:politicalPartyMember dbr:Spanish_Liberal_Party .
  ?person dbo:presidentOf dbr:Spain .
}
```",1,4,2,1,1,3,3,71,0,0,1,0,0.0,0
978,1,train,Give me the band member of Chicane (musician).,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/associatedMusicalArtist> <http://dbpedia.org/resource/Chicane_(musician)> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?member WHERE {
  VALUES ?chicane { dbr:Chicane_(musician) }
  ?bandMember dbo:associatedBand ?chicane .
  ?bandMember a dbo:MusicalArtist .
  FILTER NOT EXISTS { ?bandMember dbo:alias ?alias . } # To avoid aliases
}
```",1,1,2,1,1,3,2,20,0,0,2,0,0.0,0
124,28,train,"Give me the military force of Battle of Tamai and military force of Battle of Atbara and commander in the war, that is a societal event and a military conflict, of A Field Battery, Royal Australian Artillery.","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/battle> <http://dbpedia.org/resource/Battle_of_Atbara> . ?result <http://dbpedia.org/ontology/battle> <http://dbpedia.org/resource/Battle_of_Tamai> . <http://dbpedia.org/resource/A_Field_Battery,_Royal_Australian_Artillery> <http://dbpedia.org/ontology/battle> ?v1 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?v1 <http://dbpedia.org/ontology/commander> ?result . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?battle ?forces1 ?forces2 ?commander1 ?commander2 ?war ?artilleryEvent
WHERE {
  # Battle of Tamai
  VALUES ?tamai { dbr:Battle_of_Tamai }
  
  ?tamai dbo:participatedIn ?angloEgyptianWar .
  ?tamai dbo:opposingMilitaryForce ?forces1, ?forces2 .
  OPTIONAL { ?forces1 dbo:commander ?commander1 . }
  OPTIONAL { ?forces2 dbo:commander ?commander2 . }

  # Battle of Atbara
  VALUES ?atbara { dbr:Battle_of_Atbara }
  
  ?atbara dbo:participatedIn ?angloEgyptianWar .
  ?atbara dbo:opposingMilitaryForce ?forces3, ?forces4 .
  OPTIONAL { ?forces3 dbo:commander ?commander3 . }
  OPTIONAL { ?forces4 dbo:commander ?commander4 . }

  # A Field Battery, Royal Australian Artillery
  VALUES ?artillery { dbr:A_Field_Battery,_Royal_Australian_Artillery }
  
  ?artillery dbo:participatedIn ?worldWarI .
  ?worldWarI dbo:name ?artilleryEvent .

}
```",4,6,5,2,3,3,3,71,0,0,1,0,0.0,0
573,36,train,"Give me the parent of the author, that is a politician and an office holder, of the work of John Quincy Adams and person decedent at Massachusetts.",SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v0 <http://dbpedia.org/property/author> ?v1 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v1 <http://dbpedia.org/ontology/parent> ?result . ?result <http://dbpedia.org/ontology/deathPlace> <http://dbpedia.org/resource/Massachusetts> . ?v0 <http://dbpedia.org/property/author> <http://dbpedia.org/resource/John_Quincy_Adams> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?parent WHERE {
  ?author rdf:type dbo:Writer .
  ?author foaf:name ""John Quincy Adams"" .
  ?work dbo:author ?author .
  
  ?author dbo:father ?parent .
  ?parent rdf:type dbo:Politician ;
          dbo:officeHolder true ;
          dbo:deathPlace dbr:Massachusetts .

}
```",4,6,5,3,2,3,3,71,0,0,2,0,0.0,0
715,33,train,"Give me the commander in Rif War and commander in the force of the mayor, that is an office holder and a politician and a president, of 1933 Spanish general election.",SELECT ?result WHERE { ?v3 <http://dbpedia.org/ontology/commander> ?v0 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/President>. <http://dbpedia.org/resource/1933_Spanish_general_election> <http://dbpedia.org/property/leader> ?v0 . ?v3 <http://dbpedia.org/ontology/commander> ?result . <http://dbpedia.org/resource/Rif_War> <http://dbpedia.org/ontology/commander> ?result . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. },"```sparql
SELECT ?person ?role WHERE {
  VALUES ?event { dbpedia:Rif_War dbpedia:Spanish_general_election,_1933 }
  
  # Find the commander in Rif War
  OPTIONAL {
    ?rifWarEvent dbo:commander ?person .
    ?person rdf:type dbo:MilitaryPerson ;
            rdfs:label ?role .
    FILTER(CONTAINS(LCASE(?event), ""rif war""))
  }

  # Find the political figure in 1933 Spanish general election
  OPTIONAL {
    ?electionEvent dbo:officeHolder ?person .
    ?person rdf:type dbo:Politician ;
            dbo:occupation ?role ;
            rdfs:label ?name .
    FILTER(CONTAINS(LCASE(?event), ""spanish general election, 1933""))
  }

  # Filter for office holder and politician
  OPTIONAL {
    ?person dbo:officeHolder ?office .
    ?person rdf:type dbo:Politician .
    ?office rdfs:label ?role .
  }
  
  # Ensure the person is a president or equivalent influential figure in 1933
  OPTIONAL {
    ?person dbo:presidentOf ?country .
    FILTER(YEAR(?event) = 1933)
  }

  FILTER(?person != dbpedia:Unknown)
}
```",4,7,5,3,2,3,3,71,0,0,4,0,0.0,0
212,3,train,Give me the professional in .,"SELECT ?result WHERE { ?result <http://dbpedia.org/property/occupation> """"@en . }","```sparql
# No valid SPARQL query can be generated due to lack of specificity in the question.
```",1,1,2,1,1,2,2,9,0,0,39640,0,0.0,0
715,15,train,"Give me the force, that is a military conflict, of the native of Morocco.",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/commander> ?v1 . ?v1 <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Morocco> . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?conflict WHERE {
  ?person dbo:nationality dbr:Morocco .
  ?person rdfs:label ""Tariq ibn Ziyad""@en .
  ?person dbo:occupation dbo:General .
  ?person dbo:associatedWith ?conflict .
  FILTER (lang(?conflict) = 'en')
}
```",2,3,3,2,1,3,3,71,0,0,15,0,0.0,0
129,15,train,Give me the associated musical artist of Saba (rapper) and professional in the mayor of 1999 West Dunbartonshire Council election.,SELECT ?result WHERE { <http://dbpedia.org/resource/Saba_(rapper)> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . <http://dbpedia.org/resource/1999_West_Dunbartonshire_Council_election> <http://dbpedia.org/property/leader> ?v1 . ?result <http://dbpedia.org/property/occupation> ?v1 . },"```sparql
# Query to find Saba's associated musical artists
SELECT ?artist WHERE {
    ?saba dbo:associatedMusicalArtist ?artist .
    FILTER (str(?saba) = ""Saba_(rapper)"")
}

UNION

# Query to find professionals involved in the 1999 West Dunbartonshire Council election and their associated musical artists
SELECT DISTINCT ?artist WHERE {
    ?person dbo:profession ?profession .
    ?election dbo:candidate ?person .
    ?person dbo:associatedMusicalArtist ?artist .
    FILTER (str(?election) = ""West_Dunbartonshire_Council_election,_1999"")
}

# Find common artists between the two queries
SELECT DISTINCT ?commonArtist WHERE {
    VALUES (?sabaArtist ?electionArtist) { 
        { ?saba dbo:associatedMusicalArtist ?commonArtist . FILTER (str(?saba) = ""Saba_(rapper)"") }
        { ?person dbo:profession ?profession .
          ?election dbo:candidate ?person .
          ?person dbo:associatedMusicalArtist ?commonArtist .
          FILTER (str(?election) = ""West_Dunbartonshire_Council_election,_1999"")
        }
    }
}
```",3,3,4,2,2,2,3,28,0,0,7,0,0.0,0
606,12,train,Give me the birthplace of the alumnus of University of Pennsylvania and figure known as Barb City.,"SELECT ?result WHERE { ?result <http://dbpedia.org/property/nickname> ""Barb City""@en . ?v0 <http://dbpedia.org/ontology/almaMater> <http://dbpedia.org/resource/University_of_Pennsylvania> . ?v0 <http://dbpedia.org/ontology/birthPlace> ?result . }","```sparql
SELECT ?birthPlace WHERE {
  ?person foaf:name ""Barbara Corcoran""@en .
  ?person dbo:almaMater dbr_University_of_Pennsylvania .
  ?person dbo:birthPlace ?birthPlace .
}
```",3,3,4,2,2,3,2,20,0,0,1,0,0.0,0
267,2,train,Who is the manager of 2020–21 Tractor S.C. season?,SELECT ?result WHERE { <http://dbpedia.org/resource/2020–21_Tractor_S.C._season> <http://dbpedia.org/ontology/manager> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?manager WHERE {
    ?team a dbo:FootballClub ;
          dbo:homeGround ?ground ;
          dbo:league [dbo:season ""2020–21""] .
    
    ?team dbo:manager ?manager .

    FILTER (strstarts(str(?team), str(dbr:Tractor_S.C.)))
}
```",1,1,2,1,1,3,2,20,0,0,4,0,0.0,0
933,23,train,"Give me the band of the band of the band, that is an artist and a musical artist, of The Ramong Sound.",SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. ?v1 <http://dbpedia.org/ontology/associatedMusicalArtist> ?v2 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?v2 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . <http://dbpedia.org/resource/The_Ramong_Sound> <http://dbpedia.org/ontology/associatedMusicalArtist> ?v1 . },"```sparql
SELECT ?finalBand WHERE {
  # Step 1: Identify ""The Ramong Sound""
  ?ramongSound dbo:name ""Ramones"" .
  
  # Step 2: Find the band associated with ""The Ramong Sound""
  ?band1 dbo:band ?ramongSound .

  # Step 3: Ensure this band is also an artist and a musical artist
  ?band1 rdf:type dbo:Artist ;
         rdf:type dbo:MusicalArtist .
  
  # Step 4: Find the next associated band
  ?band2 dbo:band ?band1 .

  # Step 5: Ensure this second band is also an artist and a musical artist
  ?band2 rdf:type dbo:Artist ;
         rdf:type dbo:MusicalArtist .

  # Final step: Return the final band in the chain
  BIND(?band2 AS ?finalBand)
}
```",3,5,4,3,1,3,3,71,0,0,30,0,0.0,0
507,3,train,Give me the birth name of Anne V. Coates.,SELECT ?result WHERE { <http://dbpedia.org/resource/Anne_V._Coates> <http://dbpedia.org/property/birthName> ?result . },"```sparql
PREFIX foaf: <http://xmlns.com/foaf/0.1/>
PREFIX schema: <http://schema.org/>

SELECT ?birthName WHERE {
  ?person a foaf:Person ;
          foaf:name ""Anne V. Coates""@en .
  OPTIONAL { ?person schema:birthName ?birthName . }
}
```",1,1,2,1,1,3,3,71,0,0,1,0,0.0,0
976,25,train,Give me the office of Meral Akşener and office of the person born as Mehmet Naci Bostancı.,"SELECT ?result WHERE { ?v0 <http://dbpedia.org/property/office> ?result . <http://dbpedia.org/resource/Meral_Akşener> <http://dbpedia.org/property/office> ?result . ?v0 <http://dbpedia.org/property/birthName> ""Mehmet Naci Bostancı""@en . }","```sparql
SELECT ?person ?name ?officeLabel WHERE {
  VALUES (?person ?name) { 
    (dbpedia:Meral_Akşener ""Meral Akşener"")
    (dbpedia:Mehmet_Naci_Bostancı ""Mehmet Naci Bostancı"")
  }
  
  ?person foaf:name ?name .
  OPTIONAL {
    ?office dbo:agent ?person ;
            rdfs:label ?officeLabel .
  }
}
ORDER BY ?person
```",3,3,4,2,2,3,3,71,0,0,1,0,0.0,0
791,3,train,Give me the reference to Emperor Takakura.,"SELECT ?result WHERE { ?result <http://xmlns.com/foaf/0.1/name> ""Emperor Takakura""@en . }","```sparql
SELECT ?reference WHERE {
  ?emperor dbo:wikiPageRedirects ?reference .
  FILTER EXISTS { ?emperor rdfs:label ""Takakura""@en }
}
```",1,1,2,1,1,3,3,71,0,0,1,0,0.0,0
579,11,train,"Give me the native of the residence, that is English and a settlement, of Alan Clyne and person born as Isobel Jane Miller Richard.","SELECT ?result WHERE { ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. ?result <http://dbpedia.org/ontology/birthPlace> ?v2 . ?v2 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/United_Kingdom>. ?result <http://dbpedia.org/property/birthName> ""Isobel Jane Miller Richard""@en . <http://dbpedia.org/resource/Alan_Clyne> <http://dbpedia.org/property/residence> ?v2 . }","```sparql
SELECT DISTINCT ?residence ?nativeLanguage WHERE {
  # Query for Alan Clyne's place of residence
  ?alanClyne dbo:birthPlace ?placeAlan .
  ?placeAlan rdfs:label ?residenceAlan ;
             dbo:country dbc:England ;
             rdf:type dbo:Settlement .

  # Query for Isobel Jane Miller Richard's place of residence
  ?isobelMillerRichard dbo:birthPlace ?placeIsobel .
  ?placeIsobel rdfs:label ?residenceIsobel ;
               dbo:country dbc:England ;
               rdf:type dbo:Settlement .

  # Filter for English settlements that are the same for both individuals
  FILTER(?residenceAlan = ?residenceIsobel)
  
  # Get native language of the residence
  OPTIONAL { ?placeAlan dbo:nativeLanguage ?nativeLanguage }

  BIND(CONCAT(LCASE(?residenceAlan), "" ("", LCASE(?nativeLanguage), "")"") AS ?residence)

  SERVICE wikibase:label { bd:serviceParam wikibase:language ""[AUTO_LANGUAGE],en"". }
}
```",3,5,4,2,2,3,2,20,0,0,1,0,0.0,0
373,1,train,"Give me the professional in Singer, songwriter.","SELECT ?result WHERE { ?result <http://dbpedia.org/property/occupation> ""Singer, songwriter""@en . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT DISTINCT ?person ?name WHERE {
  ?person a dbo:Singer .
  ?person a dbo:Songwriter .
  OPTIONAL { ?person foaf:name ?name . }
}
ORDER BY ?name
```",1,1,2,1,1,2,2,9,0,0,1543,0,0.0,0
865,3,train,Who is the person decedent at Patna?,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/deathPlace> <http://dbpedia.org/resource/Patna> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?person ?name WHERE {
  ?person dbo:deathPlace dbr:Patna .
  OPTIONAL { ?person rdfs:label ?name FILTER (lang(?name) = 'en') }
}
ORDER BY ?name
LIMIT 10
```",1,1,2,1,1,3,3,71,10,10,56,0.5,0.15151515151515152,0.23255813953488375
273,10,train,Give me the alumnus of the reference to Università degli Studi di Torino.,"SELECT ?result WHERE { ?v0 <http://xmlns.com/foaf/0.1/name> ""Università degli Studi di Torino""@en . ?result <http://dbpedia.org/ontology/almaMater> ?v0 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?alumnus WHERE {
  ?alumnus dbo:almaMater dbp:Universit%C3%A0_degli_Studi_di_Torino .
}
```",2,2,3,2,1,3,2,20,0,0,141,0,0.0,0
326,14,train,"Give me the person decedent at the award, that is a country, of the awardee of French Legion of Honor.","SELECT ?result WHERE { ?v2 <http://dbpedia.org/property/awards> ?v0 . ?result <http://dbpedia.org/ontology/deathPlace> ?v0 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. ?v2 <http://dbpedia.org/property/awards> ""French Legion of Honor""@en . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?awardee ?country
WHERE {
  # Find the French Legion of Honor
  dbr:Legion_of_Honour dbo:recipient ?awardee .
  
  # Check if the award is associated with a country
  OPTIONAL { 
    ?award dbo:country ?country .
    FILTER(?country != dbr:France) # Exclude France itself to find other countries
  }
}
```",3,4,4,3,1,3,2,20,0,0,4699,0,0.0,0
892,1,train,Give me the landmark at elevation of 58.,"SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/elevation> ""58""^^<http://www.w3.org/2001/XMLSchema#integer> . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>

SELECT ?landmark ?name WHERE {
    ?landmark a dbo:Lighthouse .
    ?landmark dbo:elevation ""58""^^xsd:decimal .
    ?landmark rdfs:label ?name .
    FILTER (lang(?name) = 'en')
}
```",1,1,2,1,1,3,3,71,0,0,258,0,0.0,0
36,4,train,Give me the birth year of Deanne Bray.,SELECT ?result WHERE { <http://dbpedia.org/resource/Deanne_Bray> <http://dbpedia.org/ontology/birthYear> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?birthYear WHERE {
  ?person a dbo:Actor ;
          foaf:name ""Deanne Bray""@en .
  OPTIONAL { 
    ?person dbo:birthDate ?birthDate .
    BIND(YEAR(?birthDate) AS ?birthYear)
  }
}
```",1,1,2,1,1,2,3,28,0,0,1,0,0.0,0
888,6,train,Give me the commander in Southern Ukraine campaign and awardee of Hero of Ukraine.,"SELECT ?result WHERE { ?result <http://dbpedia.org/property/awards> ""Hero of Ukraine""@en . <http://dbpedia.org/resource/Southern_Ukraine_campaign> <http://dbpedia.org/ontology/commander> ?result . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?person ?name WHERE {
  ?person a dbo:MilitaryPerson ;
          dbo:commanderOf ?campaign .
  ?campaign rdfs:label ""Southern Ukraine campaign""@en .
  
  OPTIONAL { 
    ?person dbo:honoraryTitle dbr:Hero_of_Ukraine .
  }
  
  FILTER EXISTS { ?person dbo:honoraryTitle dbr:Hero_of_Ukraine . }
  
  ?person foaf:name ?name .
}
```",2,2,3,1,2,3,2,20,0,0,1,0,0.0,0
170,13,train,Give me the entity in the work of International Energy Agency and birth place of Era Ziganshina.,SELECT ?result WHERE { <http://dbpedia.org/resource/Era_Ziganshina> <http://dbpedia.org/ontology/birthPlace> ?result . ?result <http://dbpedia.org/ontology/country> ?v1 . ?v1 <http://dbpedia.org/property/author> <http://dbpedia.org/resource/International_Energy_Agency> . },"```sparql
# Query to get a notable entity from the International Energy Agency's work
SELECT ?entity WHERE {
  ?entity dbo:organizer dbr:International_Energy_Agency .
  FILTER(CONTAINS(LCASE(STR(?entity)), ""world energy outlook""))
}

UNION

# Query to get the birthplace of Era Ziganshina
SELECT ?birthPlace WHERE {
  ?era foaf:name ""Era Ziganshina""@en .
  ?era dbo:birthPlace ?birthPlace .
}
```",3,3,4,2,2,2,3,28,0,0,1,0,0.0,0
5,5,train,Give me the award of Coro de la Pontificia Universidad Católica de Puerto Rico.,SELECT ?result WHERE { <http://dbpedia.org/resource/Coro_de_la_Pontificia_Universidad_Católica_de_Puerto_Rico> <http://dbpedia.org/property/awards> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?award WHERE {
  ?choir rdfs:label ""Coro de la Pontificia Universidad Católica de Puerto Rico""@en .
  OPTIONAL { ?choir dbo:awardsReceived ?award . }
}
```",1,1,2,1,1,3,2,20,0,0,7,0,0.0,0
200,5,train,Give me the reference to the name of Angelcorpse.,SELECT ?result WHERE { ?result <http://xmlns.com/foaf/0.1/name> ?v0 . <http://dbpedia.org/resource/Angelcorpse> <http://xmlns.com/foaf/0.1/name> ?v0 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?name WHERE {
  VALUES ?band { dbr:Angelcorpse }
  ?band dbo:name ?name .
}
```",2,2,3,2,1,2,2,9,0,0,1,0,0.0,0
507,13,train,"Give me the director of the movie, that is a movie and a work, with Beryl Reid.",SELECT ?result WHERE { ?v1 <http://dbpedia.org/property/starring> <http://dbpedia.org/resource/Beryl_Reid> . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Film>. ?v1 <http://dbpedia.org/ontology/director> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?movie ?director WHERE {
  ?actor a dbo:Actor ;
         foaf:name ""Beryl Reid""@en .
  
  ?work dbo:starring ?actor ;
        a dbo:Film .

  OPTIONAL { 
    ?work dbo:director ?director .
  }

  FILTER (lang(?actorLabel) = 'en')
}
```",2,4,3,2,1,3,3,71,0,0,9,0,0.0,0
955,11,train,Give me the band of the writer of Don't Forget Your Roots (album) and band of Johnny Rioux.,SELECT ?result WHERE { <http://dbpedia.org/resource/Don't_Forget_Your_Roots_(album)> <http://dbpedia.org/property/writer> ?v2 . ?result <http://dbpedia.org/ontology/bandMember> <http://dbpedia.org/resource/Johnny_Rioux> . ?result <http://dbpedia.org/ontology/bandMember> ?v2 . },"```sparql
# Query for the writer of ""Don't Forget Your Roots"" album and their band
SELECT ?artist ?band WHERE {
  ?album dcterms:title ""Don't Forget Your Roots""@en .
  ?album dbo:creator ?artist .
  OPTIONAL { ?artist dbo:memberOfBand ?band . }
}

UNION

# Query for Johnny Rioux's band
SELECT ?rioux ?band WHERE {
  ?person foaf:name ""Johnny Rioux""@en .
  ?person dbo:occupation dbc:Musicians_from_Canada .
  OPTIONAL { ?person dbo:memberOfBand ?band . }
}
```",3,3,4,2,2,3,2,20,0,0,1,0,0.0,0
465,27,train,"Give me the successor of the child, that is a royalty, of the parent of Charles Orlando, Dauphin of France.","SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/child> ?v2 . ?v2 <http://dbpedia.org/ontology/successor> ?result . <http://dbpedia.org/resource/Charles_Orlando,_Dauphin_of_France> <http://dbpedia.org/ontology/parent> ?v1 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. }","```sparql
SELECT ?successor WHERE {
  # Step 1: Identify Charles Orlando
  ?charlesOrlando dbo:givenName ""Charles"" .
  ?charlesOrlando dbo:familyName ""Orlando"" .
  ?charlesOrlando dbo:title ""Dauphin of France""@en .

  # Step 2: Determine His Parent
  ?parent dbo:child ?charlesOrlando .

  # Step 3: Find a Royalty Child of This Parent
  ?royalChild dbo:parent ?parent .
  ?royalChild dbo:royalTitle ?title .

  # Step 4: Identify the Successor of This Royal Child
  ?royalChild dbo:successor ?successor .
}
```",3,4,4,3,1,3,3,71,0,0,2,0,0.0,0
507,9,train,Give me the spouse of Anne V. Coates and director of Entertaining Mr Sloane (film).,SELECT ?result WHERE { <http://dbpedia.org/resource/Entertaining_Mr_Sloane_(film)> <http://dbpedia.org/ontology/director> ?result . ?result <http://dbpedia.org/ontology/spouse> <http://dbpedia.org/resource/Anne_V._Coates> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?spouse ?director WHERE {
  # Find Anne V. Coates' spouse
  OPTIONAL { 
    dbr:Anne_V._Coates dbo:spouse ?spouse .
  }
  
  # Find the director of Entertaining Mr Sloane
  OPTIONAL {
    dbr:Entertaining_Mr_Sloane dbo:director ?director .
  }

  # Ensure that both variables refer to the same individual, if possible
  FILTER (?spouse = ?director)
}
```",2,2,3,1,2,3,3,71,0,0,1,0,0.0,0
826,22,train,Give me the predecessor of the parent of Prince Friedrich of Hesse and by Rhine and spouse of Anna Magdalena Appel.,SELECT ?result WHERE { <http://dbpedia.org/resource/Prince_Friedrich_of_Hesse_and_by_Rhine> <http://dbpedia.org/ontology/parent> ?v1 . <http://dbpedia.org/resource/Anna_Magdalena_Appel> <http://dbpedia.org/ontology/spouse> ?result . ?result <http://dbpedia.org/ontology/successor> ?v1 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?parent ?predecessor WHERE {
  # Find Prince Friedrich of Hesse and by Rhine
  ?friedrich a dbo:Person ;
             rdfs:label ""Prince Friedrich of Hesse and by Rhine""@en .
  
  # Find his parent
  ?friedrich dbo:childOf ?parent .

  OPTIONAL {
    # Attempt to find any predecessor or related title for the parent
    ?parent dbo:predecessor ?predecessor .
  }
}
```",3,3,4,2,2,3,3,71,0,0,1,0,0.0,0
926,38,train,"Give me the child of the father, that is a royalty, of Mustafa III and successor of the child of Ahmed III.",SELECT ?result WHERE { ?v3 <http://dbpedia.org/ontology/successor> ?result . <http://dbpedia.org/resource/Mustafa_III> <http://dbpedia.org/property/father> ?v0 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v3 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Ahmed_III> . ?v0 <http://dbpedia.org/ontology/child> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?successor WHERE {
  # Mustafa III's father is Ahmed III
  dbr:Mustafa_III dbo:father dbr:Ahmed_III .
  
  # Child of Ahmed III who succeeded him as Sultan
  dbr:Ahmed_III dbo:succeededBy dbr:Mahmud_I .

  # Successor of Mahmud I
  dbr:Mahmud_I dbo:succeededBy ?successor .
}
```",4,5,5,2,2,3,3,71,0,0,1,0,0.0,0
365,6,train,Give me the person born as Symon Vasylyovych Petliura and spouse of Olha Petliura.,"SELECT ?result WHERE { ?result <http://dbpedia.org/property/birthName> ""Symon Vasylyovych Petliura""@en . <http://dbpedia.org/resource/Olha_Petliura> <http://dbpedia.org/ontology/spouse> ?result . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?person WHERE {
  ?person dbo:birthName ""Symon Vasylyovych Petliura""@uk .
  ?person dbo:spouse ?spouse .
  ?spouse rdfs:label ""Olha Petliura""@en .
}
```",2,2,3,1,2,3,2,20,0,0,1,0,0.0,0
273,8,train,Give me the parent of the alumnus of University of Turin.,SELECT ?result WHERE { ?v0 <http://dbpedia.org/ontology/parent> ?result . ?v0 <http://dbpedia.org/ontology/almaMater> <http://dbpedia.org/resource/University_of_Turin> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT ?alumnus ?parent WHERE {
  ?alumnus dbo:almaMater dbr:University_of_Turin .
  OPTIONAL { ?alumnus foaf:parent ?parent . }
}
```",2,2,3,2,1,3,2,20,0,141,2,0.0,0.0,0
281,6,train,Give me the commander in New Guinea campaign and awardee of Medal bar.,SELECT ?result WHERE { <http://dbpedia.org/resource/New_Guinea_campaign> <http://dbpedia.org/ontology/commander> ?result . ?result <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/Medal_bar> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?commander ?name WHERE {
  ?campaign dbo:location dbr:New_Guinea.
  ?campaign dbo:commander ?commander.
  ?commander a dbo:MilitaryPerson;
             foaf:name ?name.
  
  OPTIONAL { 
    ?commander dbo:honorsReceived ?medal.
    ?medal rdf:type dbr:Medal_of_Honor.
    FILTER EXISTS {
      ?medal dbo:recipient ?commander.
      ?medal dbo:additionalAward ""bar""@en.
    }
  }

  FILTER NOT EXISTS { 
    ?commander dbo:honorsReceived ?otherMedal.
    ?otherMedal rdf:type dbr:Medal_of_Honor.
    FILTER NOT EXISTS {
      ?otherMedal dbo:recipient ?commander.
      ?otherMedal dbo:additionalAward ""bar""@en.
    }
  }

} ORDER BY ?name
```",2,2,3,1,2,2,3,28,0,0,1,0,0.0,0
41,1,train,Give me the party of Declan Costello.,SELECT ?result WHERE { <http://dbpedia.org/resource/Declan_Costello> <http://dbpedia.org/ontology/party> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?partyName WHERE {
  ?person a dbo:Person ;
          foaf:name ""Declan Costello""@en .
  ?person dbo:party ?party .
  ?party rdfs:label ?partyName .
  FILTER (lang(?partyName) = 'en')
}
```",1,1,2,1,1,2,3,28,0,1,1,0.0,0.0,0
554,2,train,Who is the party member of Independent politician?,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/party> <http://dbpedia.org/resource/Independent_politician> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?independentPolitician ?name WHERE {
  ?independentPolitician a dbo:IndependentPolitician .
  OPTIONAL { ?independentPolitician dbo:party ?party . }
  FILTER (!bound(?party))
  SERVICE wikibase:label { bd:serviceParam wikibase:language ""[AUTO_LANGUAGE],en"". }
}
```",1,1,2,1,1,3,2,20,0,0,2968,0,0.0,0
926,16,train,Give me the child of the spouse of Şermi Kadın.,SELECT ?result WHERE { ?v0 <http://dbpedia.org/ontology/spouse> <http://dbpedia.org/resource/Şermi_Kadın> . ?result <http://dbpedia.org/property/father> ?v0 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>

SELECT ?childName WHERE {
  ?şermiKadin a dbo:Person ;
              foaf:name ""Şermi Kadın""@en .
  
  ?şermiKadin dbo:spouse ?spouse .

  ?spouse dbo:child ?child .
  ?child foaf:name ?childName .
}
```",2,2,3,2,1,3,3,71,0,11,12,0.0,0.0,0
124,38,train,"Give me the military force of the force, that is a societal event and a military conflict, of Herbert Kitchener, 1st Earl Kitchener and military force of the war, that is an event and a military conflict and a societal event, of Frank Rhodes (British Army officer).","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/battle> ?v2 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. <http://dbpedia.org/resource/Frank_Rhodes_(British_Army_officer)> <http://dbpedia.org/ontology/battle> ?v3 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?result <http://dbpedia.org/ontology/battle> ?v3 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?v2 <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Herbert_Kitchener,_1st_Earl_Kitchener> . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?kitchenerForce ?rhodesForce WHERE {
  # Herbert Kitchener's military force (Second Boer War)
  OPTIONAL { 
    dbr:Herbert_Kitchener dbo:militaryConflict dbr:Second_Boer_War .
    dbr:Second_Boer_War a dbo:MilitaryConflict ;
                       dbo:socialEvent ?kitchenerForce .
  }

  # Frank Rhodes' military force (World War I)
  OPTIONAL { 
    dbr:Frank_Rhodes dbo:militaryConflict dbr:World_War_I .
    dbr:World_War_I a dbo:MilitaryConflict ;
                   dbo:socialEvent ?rhodesForce .
  }
}
```",4,9,5,2,2,3,3,71,0,0,1085,0,0.0,0
508,10,train,"Give me the commander, that is Saudi, in the war, that is a military conflict and a societal event, of Hu Yukun.",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/nationality> <http://dbpedia.org/resource/Saudi_Arabia>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. <http://dbpedia.org/resource/Hu_Yukun> <http://dbpedia.org/ontology/battle> ?v0 . ?v0 <http://dbpedia.org/ontology/commander> ?result . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?commander WHERE {
  ?event dbo:type dbr:Second_Sino-Japanese_War .
  ?event dbo:participant ?country .
  ?country rdfs:label ""Saudi Arabia""@en .
  
  OPTIONAL { 
    ?commander dbo:nationality dbr:Saudi_Arabia ;
               dbo:occupation dbr:Military_officer ;
               dbo:alumniOf ?militarySchool .
    
    FILTER(CONTAINS(LCASE(?commander), ""hu yukun"") || CONTAINS(LCASE(?event), ""second sino-japanese war""))
  }
}
```",2,5,3,2,1,3,2,20,0,0,1,0,0.0,0
573,18,train,"Give me the person decedent at Massachusetts and person decedent at Quincy, Massachusetts and parent of John Quincy Adams.","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/deathPlace> <http://dbpedia.org/resource/Quincy,_Massachusetts> . <http://dbpedia.org/resource/John_Quincy_Adams> <http://dbpedia.org/ontology/parent> ?result . ?result <http://dbpedia.org/ontology/deathPlace> <http://dbpedia.org/resource/Massachusetts> . }","```sparql
# Query for person who died in Massachusetts
SELECT ?person ?name WHERE {
  ?person dbo:deathPlace dbr:Massachusetts .
  ?person rdfs:label ?name .
  FILTER(LANG(?name) = 'en')
} LIMIT 1

UNION

# Query for person who died in Quincy, Massachusetts
SELECT ?person ?name WHERE {
  ?person dbo:deathPlace dbr:Quincy,_Massachusetts .
  ?person rdfs:label ?name .
  FILTER(LANG(?name) = 'en')
} LIMIT 1

UNION

# Query for parent of John Quincy Adams
SELECT ?parent ?pname WHERE {
  dbp:John_Quincy_Adams dbo:parent ?parent .
  ?parent rdfs:label ?pname .
  FILTER(LANG(?pname) = 'en')
}
```",3,3,4,1,3,3,3,71,0,0,2,0,0.0,0
18,6,train,Give me the parent of Liza Huber and professional in .,"SELECT ?result WHERE { ?result <http://dbpedia.org/property/occupation> """"@en . ?result <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Liza_Huber> . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?parentLabel ?occupationLabel
WHERE {
  ?person a dbo:Person ;
          foaf:name ""Liza Huber""@en .
  
  OPTIONAL { 
    ?person dbo:parent ?parent .
    ?parent rdfs:label ?parentLabel .
    FILTER (lang(?parentLabel) = 'en')
  }
  
  OPTIONAL {
    ?person dbo:occupation ?occupation .
    ?occupation rdfs:label ?occupationLabel .
    FILTER (lang(?occupationLabel) = 'en')
  }
}
```",2,2,3,1,2,2,3,28,0,0,1,0,0.0,0
465,39,train,"Give me the successor of the child, that is a royalty, of the parent of Charles Orlando, Dauphin of France and spouse of Archduchess Barbara of Austria.","SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/successor> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v0 <http://dbpedia.org/ontology/child> ?v1 . <http://dbpedia.org/resource/Charles_Orlando,_Dauphin_of_France> <http://dbpedia.org/ontology/parent> ?v0 . ?result <http://dbpedia.org/ontology/spouse> <http://dbpedia.org/resource/Archduchess_Barbara_of_Austria> . }","```sparql
# Step 1: Find Charles Orlando and his parent
SELECT ?parent WHERE {
  ?charlesOrlando dbo:spouse dbr:Archduchess_Barbara_of_Austria .
  ?charlesOrlando foaf:name ""Charles Orlando""@en .
  ?charlesOrlando dbo:childOf ?parent .
}

# Step 2: Find the spouse of Charles Orlando's parent
SELECT ?archduchessBarbara WHERE {
  ?parent dbo:spouse ?archduchessBarbara .
  ?archduchessBarbara foaf:name ""Archduchess Barbara of Austria""@en .
}

# Step 3: Identify their child with a royalty title
SELECT ?child WHERE {
  ?parent dbo:child ?child .
  ?child rdf:type dbo:RoyalPerson .
}

# Step 4: Find the successor of this royal child
SELECT ?successor WHERE {
  ?child dbo:successor ?successor .
}
```",4,5,5,3,2,3,3,71,0,0,1,0,0.0,0
839,11,train,"Give me the band of the person born, that is a musical artist, as Kevin Richard Russell.","SELECT ?result WHERE { ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?v0 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v0 <http://dbpedia.org/property/birthName> ""Kevin Richard Russell""@en . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT ?bandName WHERE {
  ?person a dbo:MusicalArtist ;
          foaf:name ""Kevin Russell"" .
  
  OPTIONAL { 
    ?person dbo:birthPlace ?birthPlace .
  }
  
  ?person dbo:memberOfBand ?band .
  ?band foaf:name ?bandName .
}
```",2,3,3,2,1,3,3,71,0,0,1,0,0.0,0
129,4,train,"Give me the actor, that is an organisation, of Dreamville Presents: Revenge.",SELECT ?result WHERE { ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. <http://dbpedia.org/resource/Dreamville_Presents:_Revenge> <http://dbpedia.org/property/starring> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?organization WHERE {
  ?film a dbo:Film ;
        rdfs:label ""Dreamville Presents: Revenge""@en .
  
  ?film dbo:productionCompany ?organization .
  
  FILTER (isBlank(?organization) || ?organization != dbr:)
}
```",1,2,2,1,1,2,3,28,0,0,1,0,0.0,0
18,18,train,"Give me the alumnus of the figure known, that is an educational institution, as Saints and parent of Liza Huber.","SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/EducationalInstitution>. ?v1 <http://dbpedia.org/property/nickname> ""Saints""@en . ?result <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Liza_Huber> . ?result <http://dbpedia.org/ontology/almaMater> ?v1 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?alumnus WHERE {
  ?person dbo:almaMater dbr:Saint_Mary%27s_College_(Notre_Dame,_Indiana) .
  ?person dbo:child dbr:Liza_Huber .
  BIND(?person AS ?alumnus)
}
```",3,4,4,2,2,2,3,28,0,0,1,0,0.0,0
124,32,train,"Give me the military force of the war, that is an event and a military conflict and a societal event, of Frank Rhodes (British Army officer) and commander in the war, that is a societal event and a military conflict, of A Field Battery, Royal Australian Artillery.","SELECT ?result WHERE { <http://dbpedia.org/resource/Frank_Rhodes_(British_Army_officer)> <http://dbpedia.org/ontology/battle> ?v3 . ?v1 <http://dbpedia.org/ontology/commander> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?result <http://dbpedia.org/ontology/battle> ?v3 . <http://dbpedia.org/resource/A_Field_Battery,_Royal_Australian_Artillery> <http://dbpedia.org/ontology/battle> ?v1 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?militaryForce WHERE {
  # Frank Rhodes' involvement in World War II
  dbr:Frank_Rhodes dbo:militaryConflict [
    a dbo:MilitaryConflict ;
    rdfs:label ""World War II""@en .
  ] .

  # A Field Battery, Royal Australian Artillery's involvement in World War II
  dbr:A_Field_Battery,_Royal_Australian_Artillery dbo:militaryConflict [
    a dbo:MilitaryConflict ;
    rdfs:label ""World War II""@en .
  ] .

  # The military force involved in World War II
  ?militaryForce dbo:militaryConflict [
    a dbo:MilitaryConflict ;
    rdfs:label ""World War II""@en .
  ] .
}
```",4,9,5,2,2,3,3,71,0,0,9,0,0.0,0
573,16,train,"Give me the residence, that is a settlement, of the professional, that is American, in Politician.","SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/nationality> <http://dbpedia.org/resource/United_States>. ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. ?v1 <http://dbpedia.org/property/residence> ?result . ?v1 <http://dbpedia.org/property/occupation> ""Politician""@en . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?politicianName ?residence WHERE {
  ?person a dbo:Politician ;
          dbo:nationality dbr:United_States ;
          foaf:name ?politicianName .
  OPTIONAL { ?person dbo:residenceLocation ?residence . }
  FILTER EXISTS { ?residence a dbo:Settlement }
}
```",2,4,3,2,1,3,3,71,0,0,41,0,0.0,0
582,35,train,Give me the figure known as the nickname of Japan national football team and reference to the residence of Hirotaka Sugawara.,SELECT ?result WHERE { <http://dbpedia.org/resource/Hirotaka_Sugawara> <http://dbpedia.org/property/residence> ?v2 . ?result <http://dbpedia.org/property/nickname> ?v1 . ?result <http://xmlns.com/foaf/0.1/name> ?v2 . <http://dbpedia.org/resource/Japan_national_football_team> <http://dbpedia.org/property/nickname> ?v1 . },"```sparql
# Query for the nickname of the Japan national football team
SELECT ?nickname WHERE {
  ?team dcterms:subject dbc:Japan_national_football_team .
  ?team foaf:nick ?nickname .
}

UNION

# Query to find the residence associated with Hirotaka Sugawara
SELECT ?residence WHERE {
  ?person dbo:name ""Hirotaka Sugawara""@en .
  ?person dbo:birthPlace ?location .
  ?location rdfs:label ?residence .
  FILTER (LANG(?residence) = 'en')
}
```",4,4,5,2,2,3,3,71,0,0,1,0,0.0,0
926,8,train,"Give me the father, that is a royalty, of Mustafa III.",SELECT ?result WHERE { <http://dbpedia.org/resource/Mustafa_III> <http://dbpedia.org/property/father> ?result . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?father WHERE {
  ?mustafa3 dbo:parent ?father .
  ?mustafa3 dbr:Mustafa_III .
  ?father a dbo:Sultan .
}
```",1,2,2,1,1,3,3,71,0,0,1,0,0.0,0
965,16,train,"Give me the child, that is a royalty, of the person born, that is a politician, on 1854-05-24.","SELECT ?result WHERE { ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v0 <http://dbpedia.org/ontology/birthDate> ""1854-05-24""^^<http://www.w3.org/2001/XMLSchema#date> . ?result <http://dbpedia.org/property/father> ?v0 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?child WHERE {
  ?person dbo:birthDate ""1854-05-24""^^xsd:date ;
          rdf:type dbo:Politician .
  
  ?person dbo:child ?child .

  OPTIONAL { 
    ?child dbo:spouse ?spouse .
    FILTER EXISTS { ?spouse dbo:title dbr:Royal_Titles }
  }

  OPTIONAL {
    ?child dbo:title ?title .
    FILTER regex(?title, ""King|Queen|Prince|Princess"", ""i"")
  }
}
```",2,4,3,2,1,3,3,71,0,0,2,0,0.0,0
129,1,train,Give me the associated musical artist of EarthGang.,SELECT ?result WHERE { <http://dbpedia.org/resource/EarthGang> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?artist WHERE {
  VALUES ?earthGang { dbr:EarthGang }
  ?association dbo:musicalArtist ?earthGang .
  ?association dbo:associatedMusicalArtist ?artist .
  FILTER(?artist != ?earthGang)
}
```",1,1,2,1,1,2,3,28,0,0,4,0,0.0,0
715,25,train,"Give me the leader of the office, that is a government agency and an organisation, of Carlos Franco Iribarnegaray and commander in Spanish Civil War.",SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?v1 <http://dbpedia.org/ontology/leader> ?result . <http://dbpedia.org/resource/Carlos_Franco_Iribarnegaray> <http://dbpedia.org/property/office> ?v1 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/GovernmentAgency>. <http://dbpedia.org/resource/Spanish_Civil_War> <http://dbpedia.org/ontology/commander> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?office ?leader WHERE {
  ?person rdfs:label ""Carlos Franco Iribarnegaray""@en .
  ?person dbo:positionHeld ?office .
  ?office a dbo:GovernmentAgency ;
          dbo:head ?leader .
  
  FILTER(CONTAINS(LCASE(?office), ""civil war""))
}
```",3,5,4,2,2,3,3,71,0,0,1,0,0.0,0
465,36,train,"Give me the successor of Ercole II d'Este, Duke of Ferrara and successor of the child, that is a royalty, of the parent of Charles Orlando, Dauphin of France.","SELECT ?result WHERE { <http://dbpedia.org/resource/Ercole_II_d'Este,_Duke_of_Ferrara> <http://dbpedia.org/ontology/successor> ?result . ?v0 <http://dbpedia.org/ontology/child> ?v1 . ?v1 <http://dbpedia.org/ontology/successor> ?result . <http://dbpedia.org/resource/Charles_Orlando,_Dauphin_of_France> <http://dbpedia.org/ontology/parent> ?v0 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. }","```sparql
# Step 1: Find Ercole II d'Este's successor
SELECT ?successor WHERE {
  wd:Q123456 wdt:P39 wd:Q789012 . # Ercole II d'Este was Duke of Ferrara (replace with actual DBpedia IDs)
  wd:Q789012 wdt:P46 ?successor .
}

# Step 2: Find Charles Orlando's parent
SELECT ?parent WHERE {
  wd:Q987654 wdt:P22 ?parent . # Charles Orlando, Dauphin of France (replace with actual DBpedia ID)
}

# Step 3: Identify a royal child of this parent
SELECT DISTINCT ?child WHERE {
  ?parent wdt:P40 ?child .
  ?child wdt:P31 wd:Q5 . # Ensure the child is royalty (instance of human and has a title)
}

# Step 4: Find the successor of that royal child
SELECT ?successor WHERE {
  ?royalChild wdt:P39 ?position . # The position held by the royal child
  ?position wdt:P46 ?successor .
}
```

Note: Replace `wd:Q123456`, `wd:Q789012`, and `wd:Q987654` with the actual DBpedia resource IDs for Ercole II d'Este, Duke of Ferrara, and Charles Orlando, Dauphin of France, respectively. The queries assume that these entities have direct properties linking to their successors or familial relationships.",4,5,5,3,2,3,3,71,0,0,1,0,0.0,0
216,22,train,"Give me the player in Igor Bišćan and team of the person born, that is a sports manager and a soccer manager and a soccer player, on 1983-12-20.","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/coach> ?v1 . ?v1 <http://dbpedia.org/ontology/birthDate> ""1983-12-20""^^<http://www.w3.org/2001/XMLSchema#date> . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerPlayer>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsManager>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerManager>. <http://dbpedia.org/resource/Igor_Bišćan> <http://dbpedia.org/ontology/team> ?result . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?person ?team WHERE {
  ?person a dbo:SoccerPlayer ;
          dbo:birthDate ""1983-12-20""^^xsd:date ;
          dbo:sportsManager true ;
          dbo:soccerManager true .
  
  ?person dbo:playedFor ?team .

  OPTIONAL { 
    ?bišćan dbr:Igor_Bišćan ;
             dbo:playedFor ?team .
  }
}
```",3,6,4,2,2,3,3,71,0,0,1,0,0.0,0
791,8,train,"Give me the child, that is a royalty, of Emperor Takakura.",SELECT ?result WHERE { ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?result <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Emperor_Takakura> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?child ?title WHERE {
  dbr:Emperor_Takakura dbo:spouse ?parent .
  ?parent dbo:child ?child .
  OPTIONAL { ?child dbo:title ?title . FILTER(CONTAINS(LCASE(?title), ""emperor"") || CONTAINS(LCASE(?title), ""prince"") || CONTAINS(LCASE(?title), ""princess"")) }
}
```",1,2,2,1,1,3,3,71,1,0,2,1.0,0.3333333333333333,0.5
965,15,train,Give me the spouse of the parent of Louise Mountbatten.,SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/spouse> ?result . <http://dbpedia.org/resource/Louise_Mountbatten> <http://dbpedia.org/ontology/parent> ?v1 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?parent ?spouse WHERE {
  # Find Louise Mountbatten's parents
  VALUES ?louise { dbr:Louise_Mountbatten }
  
  ?louise dbo:mother|dbo:father ?parent .
  
  # Find the spouse of one of her parents
  ?parent dbo:spouse ?spouse .
}
```",2,2,3,2,1,3,3,71,0,0,2,0,0.0,0
47,3,train,"Give me the commander, that is a politician, in Operation Green Hunt.",SELECT ?result WHERE { ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. <http://dbpedia.org/resource/Operation_Green_Hunt> <http://dbpedia.org/ontology/commander> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?person ?name WHERE {
  ?operation dbo:relatedThrough ?event .
  ?event dbo:agent ?person .
  ?person a dbo:Politician ;
          rdfs:label ?name .
  FILTER(CONTAINS(LCASE(?operation), ""operation green hunt""))
}
```",1,2,2,1,1,3,3,71,0,0,104,0,0.0,0
926,39,train,"Give me the child of the father, that is a royalty, of the parent, that is a royalty, of Beyhan Sultan (daughter of Mustafa III) and successor of Mustafa III.",SELECT ?result WHERE { <http://dbpedia.org/resource/Mustafa_III> <http://dbpedia.org/ontology/successor> ?result . ?v0 <http://dbpedia.org/ontology/child> ?result . ?v2 <http://dbpedia.org/property/father> ?v0 . <http://dbpedia.org/resource/Beyhan_Sultan_(daughter_of_Mustafa_III)> <http://dbpedia.org/ontology/parent> ?v2 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?royalChild WHERE {
  # Beyhan Sultan's parent is Mustafa III
  ?beyhanSultan a dbo:Person ;
                dbp:parent ?mustafaIII .
  
  FILTER (str(?beyhanSultan) = ""Beyhan Sultan"")

  # Find Mustafa III's successor
  ?mustafaIII dbo:successor ?successor .

  # Find the royal child of the successor
  ?successor dbo:child ?royalChild ;
            a dbo:Sovereign .
  
  FILTER EXISTS { ?royalChild a dbo:Sovereign }
}
```",4,6,5,3,2,3,3,71,0,0,1,0,0.0,0
456,23,train,"Give me the spouse of the actor of the movie, that is a work and a television show, with Ross Newton.",SELECT ?result WHERE { ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/TelevisionShow>. ?v0 <http://dbpedia.org/ontology/spouse> ?result . ?v2 <http://dbpedia.org/property/starring> <http://dbpedia.org/resource/Ross_Newton> . ?v2 <http://dbpedia.org/property/starring> ?v0 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?actor ?spouse WHERE {
  # Find works that are both films and TV shows
  ?work a dbo:Film ;
        a dbo:TelevisionShow .
  
  # Ross Newton is an actor in these works
  ?work dbo:starring dbr:Ross_Newton .

  # Get other actors from these works
  ?work dbo:starring ?actor .
  
  FILTER(?actor != dbr:Ross_Newton) # Exclude Ross Newton himself

  # Find the spouse of these actors
  OPTIONAL { ?actor dbo:spouse ?spouse }
}
```",3,5,4,3,1,3,3,71,0,0,5,0,0.0,0
826,21,train,"Give me the spouse of the child of Johann Heinrich Appel and predecessor of Louis IV, Grand Duke of Hesse.","SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/spouse> ?result . ?result <http://dbpedia.org/ontology/successor> <http://dbpedia.org/resource/Louis_IV,_Grand_Duke_of_Hesse> . ?v1 <http://dbpedia.org/property/father> ""Johann Heinrich Appel""@en . }","```sparql
# Step 1: Find a notable child of Johann Heinrich Appel and their spouse
SELECT ?child ?spouse WHERE {
  wd:Q1234567 foaf:child ?child .
  ?child dbo:spouse ?spouse .
}

# Step 2: Find the predecessor of Louis IV, Grand Duke of Hesse
SELECT ?predecessor WHERE {
  wd:Q7890123 dbo:predecessor ?predecessor .
}
```

Note: Replace `wd:Q1234567` with the actual DBpedia ID for Johann Heinrich Appel and `wd:Q7890123` with the DBpedia ID for Louis IV, Grand Duke of Hesse. The exact IDs need to be looked up in DBpedia.",3,3,4,2,2,3,3,71,0,0,1,0,0.0,0
329,17,train,"Give me the entity in Northern Ireland and entity in the region, that is a country, of Western European Time.",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Northern_Ireland> . ?v1 <http://dbpedia.org/property/timeZone> <http://dbpedia.org/resource/Western_European_Time> . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. ?result <http://dbpedia.org/ontology/country> ?v1 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?entityInNorthernIreland ?regionCountry
WHERE {
  # Entity in Northern Ireland that is a country using Western European Time
  ?entityInNorthernIreland dbo:timeZone dbr:Western_European_Time ;
                          dbo:country dbr:Northern_Ireland .

  # Region that is a country and uses Western European Time
  ?regionCountry dbo:timeZone dbr:Western_European_Time ;
                 rdf:type dbo:Country .
}
```",3,4,4,2,2,2,3,28,0,10,531,0.0,0.0,0
170,0,train,Give me the entity in Russia.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Russia> . },"```sparql
SELECT DISTINCT ?entity WHERE {
  ?entity dbo:country dbr:Russia .
}
```",1,1,2,1,1,2,3,28,29927,0,0,1.0,1.0,1.0
773,28,train,Give me the spouse of the father of Charles the Fat and parent of Charles the Fat and parent of Carloman of Bavaria.,SELECT ?result WHERE { <http://dbpedia.org/resource/Charles_the_Fat> <http://dbpedia.org/ontology/parent> ?result . <http://dbpedia.org/resource/Charles_the_Fat> <http://dbpedia.org/property/father> ?v1 . ?result <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Carloman_of_Bavaria> . ?v1 <http://dbpedia.org/ontology/spouse> ?result . },"```sparql
SELECT ?spouse WHERE {
  ?charlesFat dbo:givenName ""Charles"" .
  ?charlesFat dbo:familyName ""the Fat"" .
  ?charlesFat dbo:father ?father .

  ?carloman dbo:givenName ""Carloman"" .
  ?carloman dbo:familyName ""of Bavaria"" .
  ?carloman dbo:parent ?father .

  ?father dbo:spouse ?spouse .
}
```",4,4,5,2,3,3,3,71,0,0,1,0,0.0,0
433,3,train,Give me the persona of Paul Chambers.,SELECT ?result WHERE { <http://dbpedia.org/resource/Paul_Chambers> <http://xmlns.com/foaf/0.1/givenName> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT ?birthDate ?deathDate ?occupation ?notableWorks ?collaborators WHERE {
  VALUES ?paulChambers { dbr:Paul_Chambers_(bassist) }
  
  ?paulChambers dbo:birthDate ?birthDate .
  ?paulChambers dbo:deathDate ?deathDate .
  ?paulChambers dbo:occupation ?occupation .
  OPTIONAL {
    ?paulChambers dbo:notableWorks ?notableWorks .
  }
  OPTIONAL {
    ?paulChambers dbo:collaborator ?collaborators .
  }
}
```",1,1,2,1,1,3,3,71,0,0,1,0,0.0,0
465,0,train,"Give me the successor of Ercole II d'Este, Duke of Ferrara.","SELECT ?result WHERE { <http://dbpedia.org/resource/Ercole_II_d'Este,_Duke_of_Ferrara> <http://dbpedia.org/ontology/successor> ?result . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?successor WHERE {
  ?person a dbo:Duke ;
          dbp:name ""Ercole II d'Este"" .
  OPTIONAL { ?person dbo:successor ?successor . }
}
```",1,1,2,1,1,3,3,71,0,0,1,0,0.0,0
582,7,train,"Give me the team, that is an organisation, of Hajime Moriyasu.",SELECT ?result WHERE { ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?result <http://dbpedia.org/ontology/coach> <http://dbpedia.org/resource/Hajime_Moriyasu> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?team WHERE {
  ?person a dbo:Person ;
          foaf:name ""Hajime Moriyasu""@en .
  OPTIONAL { ?person dbo:coach ?team . }
  FILTER (isLiteral(?team) = false)
}
```",1,2,2,1,1,3,3,71,0,0,1,0,0.0,0
926,10,train,Give me the child of Ahmed III and father of Mahmud II.,SELECT ?result WHERE { <http://dbpedia.org/resource/Ahmed_III> <http://dbpedia.org/ontology/child> ?result . <http://dbpedia.org/resource/Mahmud_II> <http://dbpedia.org/property/father> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?child WHERE {
  # Find children of Ahmed III
  ?child dbo:parent dbr:Aḥmed_III.
  
  # Ensure the child is also a parent of Mahmud II
  ?child dbo:child dbr:Mahmud_II.
}
```",2,2,3,1,2,3,3,71,0,0,1,0,0.0,0
433,4,train,"Give me the person born, that is a musical artist and an artist, as Paul Laurence Dunbar Chambers Jr..","SELECT ?result WHERE { ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?result <http://dbpedia.org/property/birthName> ""Paul Laurence Dunbar Chambers Jr.""@en . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?person ?birthDate WHERE {
  ?person a dbo:MusicalArtist .
  ?person a dbo:Artist .
  ?person dbo:birthDate ?birthDate .
}
```",1,3,2,1,1,3,3,71,1,71269,0,1.4031149151115476e-05,1.0,2.8061904561462583e-05
582,2,train,Give me the figure known as --10-19.,"SELECT ?result WHERE { ?result <http://dbpedia.org/property/nickname> ""--10-19""^^<http://www.w3.org/2001/XMLSchema#gMonthDay> . }","```sparql
SELECT ?person WHERE {
  ?person dbo:birthDate ""1960-11-19""^^xsd:date .
  ?person rdf:type dbo:Person .
}
```",1,1,2,1,1,3,3,71,0,28,1,0.0,0.0,0
645,12,train,Give me the military force of Spanish Civil War and leader of Ministry of the Army (Spain).,SELECT ?result WHERE { <http://dbpedia.org/resource/Ministry_of_the_Army_(Spain)> <http://dbpedia.org/ontology/leader> ?result . ?result <http://dbpedia.org/ontology/battle> <http://dbpedia.org/resource/Spanish_Civil_War> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?militaryForce ?leader WHERE {
  # Query for military forces involved in the Spanish Civil War
  ?event a dbo:MilitaryConflict ;
         rdfs:label ""Spanish Civil War""@en .
  
  OPTIONAL {
    ?event dbo:participatingMilitaryUnit ?militaryForce .
    FILTER(lang(?militaryForce) = 'en')
  }
  
  # Query for leader of the Ministry of the Army in Spain during the Spanish Civil War
  ?ministry a dbo:GovernmentMinistry ;
            rdfs:label ""Ministry of the Army (Spain)""@en ;
            dbo:country dbr:Spain .
  
  OPTIONAL {
    ?ministry dbo:head ?leader .
    FILTER(lang(?leader) = 'en')
  }
}
```",2,2,3,1,2,3,3,71,0,0,1,0,0.0,0
83,8,train,Give me the party of the governor of Dilma Rousseff.,SELECT ?result WHERE { ?v0 <http://dbpedia.org/ontology/party> ?result . <http://dbpedia.org/resource/Dilma_Rousseff> <http://dbpedia.org/property/governor> ?v0 . },"```sparql
SELECT ?governor ?party WHERE {
  ?dilma rdf:type dbo:Politician ;
         foaf:name ""Dilma Rousseff""@en .
  ?dilma dbo:politicalParty ?pt .
  ?pt rdfs:label ""Workers' Party (Brazil)""@en .

  ?governor dbo:officeHolderOf ?state ;
           dbo:termStart ?start ;
           dbo:termEnd ?end ;
           foaf:name ?name .
  
  ?state dbo:country dbr:Brazil ;
         dbo:governmentType dbr:State_government_of_Brazil .

  FILTER (?start <= ""2016-08-31""^^xsd:date && 
          ?end >= ""2011-01-01""^^xsd:date)

  OPTIONAL { ?governor dbo:politicalParty ?party . }
  
  # Example to get a specific governor's party
  # FILTER(?name = ""Luiz Fernando Pezão""@en)
}
```",2,2,3,2,1,3,2,20,0,0,2,0,0.0,0
987,36,train,"Give me the birth place of Dado Polumenta and entity in the region, that is a country, of the time zone, that is a sports event, in Canicosa de la Sierra.",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/country> ?v0 . <http://dbpedia.org/resource/Dado_Polumenta> <http://dbpedia.org/ontology/birthPlace> ?result . ?v0 <http://dbpedia.org/property/timeZone> ?v3 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsEvent>. <http://dbpedia.org/resource/Canicosa_de_la_Sierra> <http://dbpedia.org/ontology/timeZone> ?v3 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. },"```sparql
# Query to get the birth place of Dado Polumbo
SELECT ?birthPlace WHERE {
  dbpedia:en:Dado_Polumbo dbo:birthPlace ?birthPlace .
}

# Assuming we have obtained the birthPlace URI, let's say it is <http://dbpedia.org/resource/Some_City>

# Query to get the country of the birth place
SELECT ?country WHERE {
  <http://dbpedia.org/resource/Some_City> dbo:country ?country .
}

# Query to find the time zone for Canicosa de la Sierra
SELECT ?timeZone WHERE {
  dbpedia-es:Canicosa_de_la_Sierra dbo:timezone ?timeZone .
}

# Assuming we have obtained the timeZone URI, let's say it is <http://dbpedia.org/resource/Time_Zone>

# Query to find a sports event in that time zone
SELECT ?event WHERE {
  <http://dbpedia.org/resource/Time_Zone> dbo:sportsEvent ?event .
}
```",4,6,5,3,2,3,3,71,0,0,1,0,0.0,0
83,6,train,Give me the ruling party in Fortaleza and party of Alceu Collares.,SELECT ?result WHERE { <http://dbpedia.org/resource/Alceu_Collares> <http://dbpedia.org/ontology/party> ?result . <http://dbpedia.org/resource/Fortaleza> <http://dbpedia.org/property/leaderParty> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?rulingPartyInFortaleza ?partyOfAlceuCollares WHERE {
  # Find the ruling party in Fortaleza by identifying the current mayor and their political party
  ?mayor a dbo:Mayor ;
         dbo:city dbr:Fortaleza ;
         dbo:politicalAffiliation ?rulingPartyInFortaleza .

  # Find the political party of Alceu Collares
  ?alceuCollares a dbo:Person ;
                foaf:name ""Alceu Collares"" ;
                dbo:party ?partyOfAlceuCollares .
}
```",2,2,3,1,2,3,2,20,0,0,1,0,0.0,0
495,10,train,Give me the child of the parent of Princess Pauline of Württemberg (1810–1856).,SELECT ?result WHERE { <http://dbpedia.org/resource/Princess_Pauline_of_Württemberg_(1810–1856)> <http://dbpedia.org/ontology/parent> ?v0 . ?result <http://dbpedia.org/ontology/parent> ?v0 . },"```sparql
SELECT ?child WHERE {
  ?princess dbo:birthDate ""1810-01-01""^^xsd:date ;
            rdfs:label ""Princess Pauline of Württemberg""@en .
  
  ?parent dbo:child ?princess .

  ?parent dbo:child ?child .
}
```",2,2,3,2,1,3,2,20,0,0,4,0,0.0,0
976,4,train,"Who is the leader, that is a politician, of Grand National Assembly of Turkey?",SELECT ?result WHERE { ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. <http://dbpedia.org/resource/Grand_National_Assembly_of_Turkey> <http://dbpedia.org/ontology/leader> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?speaker ?name WHERE {
  ?speaker a dbo:Speaker ;
           dbo:officeHolderOf dbr:Grand_National_Assembly_of_Turkey .
  OPTIONAL { ?speaker foaf:name ?name . }
}
```",1,2,2,1,1,3,3,71,0,0,1,0,0.0,0
826,10,train,"Give me the predecessor of Louis IV, Grand Duke of Hesse and spouse of Anna Magdalena Appel.","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/successor> <http://dbpedia.org/resource/Louis_IV,_Grand_Duke_of_Hesse> . <http://dbpedia.org/resource/Anna_Magdalena_Appel> <http://dbpedia.org/ontology/spouse> ?result . }","```sparql
SELECT ?predecessor WHERE {
  wd:Q1234568 wdt:P39 wd:Q7890123 .
  wd:Q7890123 wdt:P1365 ?predecessor .
}
```

In this query:
- `wd:Q1234568` is a placeholder for the DBpedia resource ID of Louis IV, Grand Duke of Hesse.
- `wdt:P39` represents the ""position held"" property.
- `wd:Q7890123` would be replaced with the actual DBpedia resource ID for the position of ""Grand Duke of Hesse.""
- `wdt:P1365` is used to find the predecessor in a political or organizational role.

Note: The exact DBpedia IDs (`Q1234568`, `Q7890123`) need to be verified and replaced with the correct ones from DBpedia for accurate results.",2,2,3,1,2,3,3,71,0,0,1,0,0.0,0
508,3,train,"Give me the commander, that is a politician, in 1939–1940 Winter Offensive.",SELECT ?result WHERE { ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. <http://dbpedia.org/resource/1939–1940_Winter_Offensive> <http://dbpedia.org/ontology/commander> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?commander WHERE {
  ?offensive dbo:dateStart ?dateStart .
  ?offensive dbo:dateEnd ?dateEnd .
  FILTER (?dateStart >= ""1939-11-01""^^xsd:date && ?dateEnd <= ""1940-03-31""^^xsd:date) .
  ?offensive dbo:commander ?commander .

  OPTIONAL {
    ?commander dbo:occupation dbr:Politician .
  }

  FILTER EXISTS { ?commander dbo:occupation dbr:Politician }
}
```",1,2,2,1,1,3,2,20,0,0,6,0,0.0,0
791,30,train,"Give me the spouse of Taira no Tokuko and father of the child, that is a royalty, of Emperor Takakura and predecessor of Emperor Antoku.",SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?result <http://dbpedia.org/ontology/successor> <http://dbpedia.org/resource/Emperor_Antoku> . ?result <http://dbpedia.org/ontology/spouse> <http://dbpedia.org/resource/Taira_no_Tokuko> . ?v1 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Emperor_Takakura> . ?v1 <http://dbpedia.org/property/father> ?result . },"```sparql
SELECT ?spouse WHERE {
  wd:Q1234567 wdt:P26 ?spouse .
  ?spouse wdt:P31 wd:Q5 .
  ?child wdt:P25 wd:Q1234567 ;
         wdt:P22 ?spouse .
  ?emperor wdt:P62 wd:Q7890123 ; # Emperor Antoku
           wdt:P65 ?child .
  ?predecessor wdt:P54 ?emperor .
}
```

In this query:
- `wd:Q1234567` represents Taira no Tokuko.
- `wdt:P26` is the property for spouse.
- `wd:Q5` is the class for human (to ensure we are looking at a person).
- `wdt:P25` is the property for child.
- `wd:Q7890123` represents Emperor Antoku.
- `wdt:P62` is the property for predecessor.
- `wdt:P65` is the property for parent.",4,5,5,2,3,3,3,71,0,0,1,0,0.0,0
976,12,train,Give me the office of Meral Akşener and office of Naci Bostancı.,SELECT ?result WHERE { <http://dbpedia.org/resource/Meral_Akşener> <http://dbpedia.org/property/office> ?result . <http://dbpedia.org/resource/Naci_Bostancı> <http://dbpedia.org/property/office> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT ?person ?personLabel ?office ?officeLabel
WHERE {
  VALUES ?person { 
    dbr:Meral_Akşener 
    dbr:Naci_Bostancı 
  }
  
  ?person foaf:name ?personLabel .
  ?person dbo:office ?office .
  ?office rdfs:label ?officeLabel .
  
  FILTER (lang(?personLabel) = 'en')
  FILTER (lang(?officeLabel) = 'en')
}
ORDER BY ?person
```",2,2,3,1,2,3,3,71,0,0,1,0,0.0,0
83,12,train,Give me the party of the governor of Dilma Rousseff and ruling party in Fortaleza.,SELECT ?result WHERE { <http://dbpedia.org/resource/Fortaleza> <http://dbpedia.org/property/leaderParty> ?result . <http://dbpedia.org/resource/Dilma_Rousseff> <http://dbpedia.org/property/governor> ?v0 . ?v0 <http://dbpedia.org/ontology/party> ?result . },"```sparql
# Query to get the political party of Dilma Rousseff when she was Governor of Rio Grande do Sul
SELECT ?party WHERE {
  wd:Q1329 wdt:P39 wd:Q11173 . # Dilma Rousseff (wd:Q1329) held office as governor of Rio Grande do Sul (wd:Q11173)
  wd:Q1329 wdt:P102 ?party .   # Political party affiliation
}
```

```sparql
# Query to get the ruling party in Fortaleza by finding the current mayor and their political party
SELECT ?mayorParty WHERE {
  wd:Q1103 wdt:P131* wd:Q11173 . # Fortaleza (wd:Q1103) is located in Brazil (wd:Q11173)
  wd:Q1103 wdt:P6 ?mayor .        # Current mayor of Fortaleza
  ?mayor wdt:P102 ?mayorParty     # Political party affiliation of the mayor
}
```",3,3,4,2,2,3,2,20,0,0,1,0,0.0,0
976,26,train,"Give me the office of the mayor, that is a politician and an office holder and Turkish, of the reference, that is an organisation and a political party and Turkish, to Millet İttifakı.","SELECT ?result WHERE { ?v0 <http://dbpedia.org/ontology/nationality> <http://dbpedia.org/resource/Turkey>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v2 <http://dbpedia.org/property/leader> ?v0 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/PoliticalParty>. ?v0 <http://dbpedia.org/property/office> ?result . ?v2 <http://xmlns.com/foaf/0.1/name> ""Millet İttifakı""@en . ?v2 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Turkey>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?mayor ?office WHERE {
  # Find Millet İttifakı as an organization and political party in Turkey
  dbr:Millet_İttifakı 
    a dbo:PoliticalParty ;
    dbo:country dbr:Türkiye .

  # Find mayors who are politicians, office holders, and Turkish
  ?mayor 
    a dbo:Mayor ;
    dbo:country dbr:Türkiye ;
    dbo:officeHolderOf ?office ;
    dbo:politicalAffiliation ?party .

  # Ensure the party is part of Millet İttifakı
  ?party dbo:memberPartyOf dbr:Millet_İttifakı .
}
```",3,9,4,3,1,3,3,71,0,0,3,0,0.0,0
715,31,train,"Give me the commander in the force, that is a military conflict, of the native of Morocco and commander in Spanish Civil War.",SELECT ?result WHERE { ?v0 <http://dbpedia.org/ontology/commander> ?result . ?v0 <http://dbpedia.org/ontology/commander> ?v1 . <http://dbpedia.org/resource/Spanish_Civil_War> <http://dbpedia.org/ontology/commander> ?result . ?v1 <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Morocco> . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?person ?name WHERE {
  ?person dbo:nationality dbr:Morocco .
  ?person dbo:occupation dbr:Military_person .
  ?person rdfs:label ?name .
  
  OPTIONAL { 
    ?conflict1 dbo:commander ?person .
    FILTER(CONTAINS(LCASE(?conflict1), ""rif war"") || CONTAINS(LCASE(?conflict1), ""morocco""))
  }
  
  OPTIONAL {
    ?conflict2 dbo:commander ?person .
    FILTER(CONTAINS(LCASE(?conflict2), ""spanish civil war""))
  }

  FILTER(CONTAINS(LCASE(?name), ""franco""))
}
```",4,5,5,3,2,3,3,71,0,0,4,0,0.0,0
445,5,train,Give me the establishment of 1820-03-10.,"SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/foundingDate> ""1820-03-10""^^<http://www.w3.org/2001/XMLSchema#date> . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?entity ?name ?description WHERE {
  ?entity a dbo:Event .
  ?entity dbo:established ""1820-03-10""^^xsd:date .
  OPTIONAL { ?entity rdfs:label ?name . FILTER (lang(?name) = 'en') }
  OPTIONAL { ?entity dbo:description ?description . FILTER (lang(?description) = 'en') }
}
```",1,1,2,1,1,3,3,71,0,0,1,0,0.0,0
917,21,train,"Give me the child of Kekūanāoʻa and parent of the child, that is a royalty, of Kamehameha IV.","SELECT ?result WHERE { ?v2 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Kamehameha_IV> . ?result <http://dbpedia.org/ontology/child> ?v2 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?result <http://dbpedia.org/property/father> ""Kekūanāoʻa""@en . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?child ?parent WHERE {
  # Kekūanāoʻa's children who are royalty and have their own children
  ?child dbo:father dbr:Kekūanāoʻa .
  ?child a dbo:RoyalFamilyMember .
  
  # The child must also be a parent
  ?child dbo:parent ?grandChild .

  # Filter for royal status
  OPTIONAL { ?child dbo:title ?title . FILTER(CONTAINS(LCASE(?title), ""princess"") || CONTAINS(LCASE(?title), ""king"") || CONTAINS(LCASE(?title), ""queen"")) }
  
  # Link to Kamehameha IV through family connections (optional, for verification)
  OPTIONAL { ?child dbo:spouse dbr:Kamehameha_IV_of_Hawaii . }

  FILTER EXISTS {
    ?child dbo:title ?title .
    FILTER(CONTAINS(LCASE(?title), ""princess"") || CONTAINS(LCASE(?title), ""king"") || CONTAINS(LCASE(?title), ""queen""))
  }
}
```",3,4,4,2,2,3,3,71,0,0,1,0,0.0,0
507,0,train,Give me the spouse of Anne V. Coates.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/spouse> <http://dbpedia.org/resource/Anne_V._Coates> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?spouse WHERE {
  dbr:Anne_V._Coates dbo:spouse ?spouse .
}
```",1,1,2,1,1,3,3,71,1,0,0,1.0,1.0,1.0
987,23,train,"Give me the birth place of the band, that is an artist and a musical artist, of the band, that is an artist, of Dado Polumenta.",SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. ?v2 <http://dbpedia.org/ontology/birthPlace> ?result . ?v1 <http://dbpedia.org/ontology/associatedMusicalArtist> ?v2 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. <http://dbpedia.org/resource/Dado_Polumenta> <http://dbpedia.org/ontology/associatedMusicalArtist> ?v1 . },"```sparql
SELECT ?birthPlace WHERE {
  # Step 1: Identify Dado Prato's primary band
  wd:Q1234567 wdt:P31/wdt:P279* wd:Q482980 . # Assuming Q1234567 is the DBpedia ID for Dado Prato

  # Step 2: Find bands associated with Dado Prato
  ?band wdt:P46 wd:Q1234567 .

  # Step 3: Check if the band is also an artist and a musical artist
  ?band wdt:P31/wdt:P279* wd:Q482980 . # Q482980 is the DBpedia ID for MusicalArtist
  ?band wdt:P31/wdt:P279* wd:Q5 .       # Q5 is the DBpedia ID for Artist

  # Step 4: Find the birth place of this band or artist
  ?band wdt:P19 ?birthPlace .
}
```

Note: The actual DBpedia IDs (e.g., `wd:Q1234567` for Dado Prato and `wd:Q482980` for MusicalArtist) need to be verified and replaced with the correct ones from DBpedia.",3,6,4,3,1,3,3,71,0,0,6,0,0.0,0
382,10,train,"Give me the award of the reference, that is a college coach and a coach, to Harry Combes.","SELECT ?result WHERE { ?v0 <http://dbpedia.org/property/awards> ?result . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/CollegeCoach>. ?v0 <http://xmlns.com/foaf/0.1/name> ""Harry Combes""@en . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Coach>. }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT DISTINCT ?awardLabel WHERE {
  ?person rdfs:label ""Harry Combes""@en .
  FILTER NOT EXISTS { ?person dbo:abstract ?abstract } # To ensure we are getting the correct person
  ?person rdf:type ?type .
  FILTER (
    ?type = dbpedia-owl:CollegeCoach ||
    ?type = dbpedia-owl:Coach
  )
  ?person dbo:award ?award .
  ?award rdfs:label ?awardLabel .
}
ORDER BY ?awardLabel
```",2,4,3,2,1,3,2,20,0,0,1,0,0.0,0
273,11,train,Give me the parent of Gianni Agnelli and spouse of the child of Giovanni Agnelli.,SELECT ?result WHERE { <http://dbpedia.org/resource/Gianni_Agnelli> <http://dbpedia.org/ontology/parent> ?result . ?result <http://dbpedia.org/ontology/spouse> ?v2 . <http://dbpedia.org/resource/Giovanni_Agnelli> <http://dbpedia.org/ontology/child> ?v2 . },"```sparql
SELECT ?parent ?spouse WHERE {
  # Find the parent of Gianni Agnelli
  ?gianni a dbo:Person ;
         foaf:name ""Gianni Agnelli""@en .
  ?parent dbo:child ?gianni .

  # Find a child of Giovanni Agnelli (considering him as Gianni)
  ?giovanni a dbo:Person ;
           foaf:name ""Giovanni Agnelli""@en .
  ?child dbo:child ?giovanni .

  # Find the spouse of Margherita Agnelli
  ?margherita a dbo:Person ;
              foaf:name ""Margherita Agnelli""@en .
  ?spouseRelation dbo:spouse ?margherita ;
                  dbo:spouse ?spouse .
}
```",3,3,4,2,2,3,2,20,0,0,1,0,0.0,0
365,1,train,Give me the spouse of Olha Petliura.,SELECT ?result WHERE { <http://dbpedia.org/resource/Olha_Petliura> <http://dbpedia.org/ontology/spouse> ?result . },"```sparql
SELECT ?spouse WHERE {
  dbpedia-owl:Olha_Petliura dbo:spouse ?spouse .
}
```",1,1,2,1,1,3,2,20,0,0,1,0,0.0,0
926,33,train,Give me the successor of the child of the spouse of Şermi Kadın and father of Mahmud II.,SELECT ?result WHERE { <http://dbpedia.org/resource/Mahmud_II> <http://dbpedia.org/property/father> ?result . ?v2 <http://dbpedia.org/ontology/successor> ?result . ?v0 <http://dbpedia.org/ontology/spouse> <http://dbpedia.org/resource/Şermi_Kadın> . ?v2 <http://dbpedia.org/property/father> ?v0 . },"```sparql
SELECT ?successor WHERE {
  wd:Q1234 wdt:P39 wd:Q1235 .
  wd:Q1235 wdt:P57 ?successor .
}
```

In this query:
- `wd:Q1234` is the DBpedia entity for Abdul Hamid I.
- `wdt:P39` represents the ""father"" property, linking Abdul Hamid I to Mahmud II (`wd:Q1235`).
- `wdt:P57` represents the ""successor"" property, used to find the successor of Mahmud II.",4,4,5,3,2,3,3,71,0,0,1,0,0.0,0
102,11,train,Give me the manager of the player in Ellie Roebuck and native of Dewsbury.,SELECT ?result WHERE { ?v2 <http://dbpedia.org/ontology/manager> ?result . ?result <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Dewsbury> . <http://dbpedia.org/resource/Ellie_Roebuck> <http://dbpedia.org/ontology/team> ?v2 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?manager WHERE {
  ?player a dbo:SoccerPlayer ;
          foaf:name ""Ellie Roebuck""@en ;
          dbo:birthPlace dbr:Dewsbury .
  
  ?player dbo:playsFor ?team .

  ?team dbo:manager ?manager .
}
```",3,3,4,2,2,3,2,20,0,0,1,0,0.0,0
987,25,train,"Give me the entity in the region, that is a country, of Central European Time and birth place of Moamer Kasumović.",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/country> ?v0 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. <http://dbpedia.org/resource/Moamer_Kasumović> <http://dbpedia.org/ontology/birthPlace> ?result . ?v0 <http://dbpedia.org/property/timeZone> <http://dbpedia.org/resource/Central_European_Time> . },"```sparql
SELECT ?country WHERE {
  ?country dcterms:isPartOf dbc:Countries_in_the_Central_European_Time_zone .
  ?country dbo:birthPlace ?place .
  ?place rdfs:label ""Požarevac""@en .
  FILTER (lang(?place) = 'en')
}
```",3,4,4,2,2,3,3,71,0,0,1,0,0.0,0
170,5,train,Give me the profession of John Scholey.,SELECT ?result WHERE { <http://dbpedia.org/resource/John_Scholey> <http://dbpedia.org/property/occupation> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT ?occupation WHERE {
  ?person foaf:name ""John Scholey""@en .
  ?person dbo:occupation ?occupation .
}
```",1,1,2,1,1,2,3,28,0,2,1,0.0,0.0,0
216,6,train,Give me the party of Campbell Newman and office of Tim Nicholls.,SELECT ?result WHERE { <http://dbpedia.org/resource/Tim_Nicholls> <http://dbpedia.org/property/office> ?result . <http://dbpedia.org/resource/Campbell_Newman> <http://dbpedia.org/ontology/party> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?party ?office WHERE {
  OPTIONAL { 
    dbr:Campbell_Newman dbo:party ?party .
  }
  OPTIONAL { 
    dbr:Tim_Nicholls dbo:office ?office .
  }
}
```",2,2,3,1,2,2,3,28,1,1,0,0.5,1.0,0.6666666666666666
274,5,train,"Who is the actor, that is a musical artist, of Imagine the Sound?",SELECT ?result WHERE { ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. <http://dbpedia.org/resource/Imagine_the_Sound> <http://dbpedia.org/property/starring> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?actor WHERE {
  ?actor dbo:occupation dbr:Actor .
  ?actor dbo:occupation dbr:MusicalArtist .
  OPTIONAL { 
    ?sound dbr:Imagine_the_Sound .
    ?sound dbo:performer ?actor .
  }
}
```",1,2,2,1,1,2,3,28,0,0,4,0,0.0,0
495,12,train,Give me the father of the child of Princess Charlotte of Saxe-Hildburghausen and child of Frederick I of Württemberg.,SELECT ?result WHERE { ?result <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Frederick_I_of_Württemberg> . ?v0 <http://dbpedia.org/property/father> ?result . ?v0 <http://dbpedia.org/ontology/parent> <http://dbpedia.org/resource/Princess_Charlotte_of_Saxe-Hildburghausen> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?child1Father ?child2Father WHERE {
  # Princess Charlotte of Saxe-Hildburghausen's child and father
  ?princessCharlotte a dbo:Person ;
                    foaf:name ""Princess Charlotte of Saxe-Hildburghausen""@en .
  ?princessCharlotteChild dbo:parent dbr:Princess_Charlotte_of_Saxe-Hildburghausen ;
                          dbo:father ?child1Father .

  # Frederick I of Württemberg's child and father
  ?frederickI a dbo:Person ;
              foaf:name ""Frederick I, Duke of Württemberg""@en .
  ?frederickIChild dbo:parent dbr:Friedrich_I._von_W%C3%BCrttemberg ;
                   dbo:father ?child2Father .

  # Ensure the fathers are distinct individuals
  FILTER(?child1Father != ?child2Father)
}
```",3,3,4,2,2,3,2,20,0,0,1,0,0.0,0
433,35,train,"Give me the professional in the profession of Bob Marley and associated musical artist of the person born, that is a musical artist and an artist, as Paul Laurence Dunbar Chambers Jr..","SELECT ?result WHERE { ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. ?v2 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v2 <http://dbpedia.org/property/birthName> ""Paul Laurence Dunbar Chambers Jr.""@en . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?result <http://dbpedia.org/property/occupation> ?v1 . <http://dbpedia.org/resource/Bob_Marley> <http://dbpedia.org/property/occupation> ?v1 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?professional WHERE {
  # Bob Marley's profession
  dbr:Bob_Marley dbo:profession dbr:Singer-songwriter .
  
  # Chick Chambers' associated musical artist (e.g., Miles Davis)
  dbr:Chick_Chambers dbo:associatedMusicalArtist dbr:Miles_Davis .

  # Find a professional in the same field
  ?professional dbo:profession dbr:Singer-songwriter ;
                dbo:associatedMusicalArtist dbr:Miles_Davis .
}
```",4,6,5,2,2,3,3,71,0,0,16,0,0.0,0
382,8,train,Give me the landmark at elevation of the award of Harry Combes.,SELECT ?result WHERE { <http://dbpedia.org/resource/Harry_Combes> <http://dbpedia.org/property/awards> ?v0 . ?result <http://dbpedia.org/ontology/elevation> ?v0 . },"```sparql
# Step 1: Find Harry Combes and his awards
SELECT ?award WHERE {
  ?person foaf:name ""Harry Combes""@en .
  ?person dbo:awardsReceived ?award .
}

# Assuming we have identified an award, let's say it is linked to a geographical feature with elevation

# Step 2: Find the elevation of the award (hypothetical step)
SELECT ?elevation WHERE {
  ?award dbo:elevation ?elevation .
}

# Step 3: Find landmarks at that elevation
SELECT DISTINCT ?landmark WHERE {
  ?landmark dbo:elevation ?elevation .
}
```

Note: The above query assumes there is a direct link between an award and its elevation, which may not be the case. Adjustments might be needed based on actual data availability.",2,2,3,2,1,3,2,20,0,0,727,0,0.0,0
507,24,train,"Give me the director of the movie, that is a movie and a work, with Beryl Reid and professional in Film director, television director.","SELECT ?result WHERE { ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Film>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?v2 <http://dbpedia.org/ontology/director> ?result . ?result <http://dbpedia.org/property/occupation> ""Film director, television director""@en . ?v2 <http://dbpedia.org/property/starring> <http://dbpedia.org/resource/Beryl_Reid> . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>
PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>

SELECT DISTINCT ?directorName WHERE {
  ?movie rdf:type dbo:Film ;
         dbo:starring ?actor .
  ?actor foaf:name ""Beryl Reid"" .
  ?movie rdf:type dbo:Work .
  ?movie dbo:director ?director .
  ?director foaf:name ?directorName .
  OPTIONAL { 
    ?director dbo:profession ?profession .
    FILTER (
      ?profession IN (dbo:FilmDirector, dbo:TelevisionDirector)
    )
  }
}
```",3,5,4,2,2,3,3,71,0,0,1,0,0.0,0
216,14,train,Give me the office of Tim Nicholls and party of the awardee of Australian Defence Medal.,SELECT ?result WHERE { <http://dbpedia.org/resource/Tim_Nicholls> <http://dbpedia.org/property/office> ?result . ?v2 <http://dbpedia.org/ontology/party> ?result . ?v2 <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/Australian_Defence_Medal> . },"```sparql
SELECT ?office ?party WHERE {
  # Query to find Tim Nicholls' office
  ?tim a dbo:Person ;
       foaf:name ""Tim Nicholls"" .
  
  OPTIONAL { 
    ?tim dbo:office ?office .
  }
  
  # Query to find awardees of the Australian Defence Medal and their party affiliation
  ?person a dbo:Person ;
          dbo:awardReceived ?medal .
  
  FILTER(?medal = dbpedia:Australian_Defence_Medal)
  
  OPTIONAL {
    ?person dbo:party ?party .
  }
}
```",3,3,4,2,2,2,3,28,0,0,1,0,0.0,0
892,16,train,Give me the award of the member of E-girls.,SELECT ?result WHERE { ?v0 <http://dbpedia.org/property/awards> ?result . <http://dbpedia.org/resource/E-girls> <http://dbpedia.org/ontology/bandMember> ?v0 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?member ?award WHERE {
  ?band a dbo:MusicalBand ;
        dbp:name ""E-girls""@en .
  
  ?band dbo:member ?member .

  OPTIONAL { 
    ?member dbo:award ?award .
  }
}
```",2,2,3,2,1,3,3,71,0,0,2,0,0.0,0
917,27,train,"Give me the child of the father of the child, that is a royalty, of Kamehameha III.",SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v1 <http://dbpedia.org/property/father> ?v0 . <http://dbpedia.org/resource/Kamehameha_III> <http://dbpedia.org/ontology/child> ?v1 . ?result <http://dbpedia.org/property/father> ?v0 . },"```sparql
SELECT ?royalChild WHERE {
  ?kamehamehaIII dbo:spouse ?spouse .
  ?kamehamehaIII rdf:type dbo:Monarch .
  ?child dbo:parent ?kamehamehaIII ;
         rdf:type dbo:Person .

  FILTER EXISTS { ?child dbo:title ?title . FILTER regex(?title, ""King|Queen"", ""i"") }

  ?royalChild dbo:parent ?kamehamehaIII ;
              rdf:type dbo:Person .
}
```",3,4,4,3,1,3,3,71,0,0,5,0,0.0,0
465,3,train,"Give me the parent of Ercole II d'Este, Duke of Ferrara.","SELECT ?result WHERE { <http://dbpedia.org/resource/Ercole_II_d'Este,_Duke_of_Ferrara> <http://dbpedia.org/ontology/parent> ?result . }","```sparql
SELECT ?father WHERE {
  ?person dbo:givenName ""Ercole II"" .
  ?person dbo:familyName ""d'Este"" .
  ?person dbo:title ""Duke of Ferrara"" .
  ?person dbo:father ?father .
}
```",1,1,2,1,1,3,3,71,0,0,2,0,0.0,0
865,7,train,Who is the father of Abul Maal Abdul Muhith?,SELECT ?result WHERE { <http://dbpedia.org/resource/Abul_Maal_Abdul_Muhith> <http://dbpedia.org/property/father> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>

SELECT ?father WHERE {
  ?person dbo:givenName ""Abul Maal"" .
  ?person dbo:familyName ""Abdul Muhith"" .
  ?person dbo:father ?father .
}
```",1,1,2,1,1,3,3,71,0,0,1,0,0.0,0
445,10,train,Give me the entity in United Kingdom and entity in England.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/United_Kingdom> . ?result <http://dbpedia.org/ontology/location> <http://dbpedia.org/resource/England> . },"```sparql
SELECT ?entity WHERE {
  ?entity dbo:country dbr:United_Kingdom .
  ?entity dbo:country dbr:England .
}
```",2,2,3,1,2,3,3,71,0,2303,102,0.0,0.0,0
839,6,train,Give me the member of Böhse Onkelz.,SELECT ?result WHERE { <http://dbpedia.org/resource/Böhse_Onkelz> <http://dbpedia.org/ontology/bandMember> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?member WHERE {
  ?band a dbo:Band .
  ?band rdfs:label ""Böhse Onkelz""@en .
  ?band dbo:bandMember ?member .
}
```",1,1,2,1,1,3,3,71,4,0,0,1.0,1.0,1.0
978,10,train,Give me the person born as the name of Chicane (musician).,SELECT ?result WHERE { ?result <http://dbpedia.org/property/birthName> ?v0 . <http://dbpedia.org/resource/Chicane_(musician)> <http://xmlns.com/foaf/0.1/givenName> ?v0 . },"```sparql
PREFIX foaf: <http://xmlns.com/foaf/0.1/>
SELECT ?birthName WHERE {
  ?person a foaf:Person ;
          foaf:name ""Chicane"" .
  OPTIONAL { ?person foaf:givenName ?birthName . }
}
```",2,2,3,2,1,3,2,20,0,0,1,0,0.0,0
329,7,train,Give me the birthplace of Eric Cross (writer) and entity in Northern Ireland.,SELECT ?result WHERE { <http://dbpedia.org/resource/Eric_Cross_(writer)> <http://dbpedia.org/ontology/birthPlace> ?result . ?result <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Northern_Ireland> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?birthPlace WHERE {
  ?person a dbo:Writer ;
          foaf:name ""Eric Cross"" .
  OPTIONAL { ?person dbo:birthPlace ?birthPlace . }
}
```",2,2,3,1,2,2,3,28,0,0,1,0,0.0,0
445,24,train,Give me the death place of the awardee of Royal Astronomical Society and entity in United Kingdom.,SELECT ?result WHERE { ?v2 <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/Royal_Astronomical_Society> . ?v2 <http://dbpedia.org/ontology/deathPlace> ?result . ?result <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/United_Kingdom> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?person ?deathPlace WHERE {
  ?person dbo:awardReceived dbr:Royal_Astronomical_Society_Medal .
  ?person dbo:nationality dbr:United_Kingdom .
  OPTIONAL { ?person dbo:deathPlace ?deathPlace . }
}
```",3,3,4,2,2,3,3,71,0,0,2,0,0.0,0
170,8,train,Give me the entity in the work of International Energy Agency.,SELECT ?result WHERE { ?v1 <http://dbpedia.org/property/author> <http://dbpedia.org/resource/International_Energy_Agency> . ?result <http://dbpedia.org/ontology/country> ?v1 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?work WHERE {
  VALUES ?iea { dbr:International_Energy_Agency }
  ?iea dbo:work ?work .
}
```",2,2,3,2,1,2,3,28,0,0,29927,0,0.0,0
36,14,train,Give me the person born in the birth year of Deanne Bray and actor of Being Mrs Elliot.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/birthYear> ?v2 . <http://dbpedia.org/resource/Being_Mrs_Elliot> <http://dbpedia.org/ontology/starring> ?result . <http://dbpedia.org/resource/Deanne_Bray> <http://dbpedia.org/ontology/birthYear> ?v2 . },"```sparql
# Step 1: Get Deanne Bray's Birth Year
SELECT ?birthYear WHERE {
  dbpedia:Deanne_Bray dbo:birthDate ?date .
  BIND(YEAR(?date) AS ?birthYear)
}

# Step 2: Find Actor of ""Being Mrs Elliot""
SELECT ?actor WHERE {
  dbpedia:Being_Mrs_Elliot dbo:starring ?actor .
}

# Step 3: Match Birth Year with Actor
SELECT DISTINCT ?person WHERE {
  # Get Deanne Bray's birth year from the first query result
  BIND(?birthYear AS ?deanneBirthYear) 

  # Find actors of ""Being Mrs Elliot""
  dbpedia:Being_Mrs_Elliot dbo:starring ?actor .

  # Get actor's birth year and match with Deanne Bray's birth year
  ?actor dbo:birthDate ?date .
  BIND(YEAR(?date) AS ?actorBirthYear)

  FILTER (?deanneBirthYear = ?actorBirthYear)
}
```",3,3,4,2,2,2,3,28,0,0,1,0,0.0,0
212,0,train,Give me the birthplace of Corp Sayvee.,SELECT ?result WHERE { <http://dbpedia.org/resource/Corp_Sayvee> <http://dbpedia.org/ontology/birthPlace> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?birthPlace WHERE {
  ?person rdfs:label ""Corp Sayvee""@en .
  ?person dbo:birthPlace ?birthPlace .
}
```",1,1,2,1,1,2,2,9,1,0,0,1.0,1.0,1.0
892,20,train,Give me the landmark at elevation of the award of Anna Ishii and entity in Italy.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/elevation> ?v1 . ?result <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Italy> . <http://dbpedia.org/resource/Anna_Ishii> <http://dbpedia.org/property/awards> ?v1 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?landmark ?elevation ?italianEntity WHERE {
  # Step 1: Find Anna Ishii's award
  ?award dbo:recipient dbr:Anna_Ishii .
  
  # Step 2: Find landmarks at the same elevation as the award (assuming elevation is a number)
  OPTIONAL { ?award dbo:elevation ?elevation . }
  ?landmark dbo:elevation ?sameElevation .
  FILTER (?elevation = ?sameElevation)

  # Step 3: Identify an entity in Italy
  ?italianEntity dbo:country dbr:Italy .

  # Ensure we get distinct results for clarity
  VALUES ?landmark { ?landmark }
  VALUES ?italianEntity { ?italianEntity }
}
```",3,3,4,2,2,3,3,71,0,0,11,0,0.0,0
791,16,train,"Give me the child of the child, that is an office holder and a royalty, of Emperor Go-Shirakawa.",SELECT ?result WHERE { ?result <http://dbpedia.org/property/father> ?v1 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v1 <http://dbpedia.org/ontology/parent> <http://dbpedia.org/resource/Emperor_Go-Shirakawa> . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?grandchild WHERE {
  # Identify Emperor Go-Shirakawa
  ?emperor rdfs:label ""Emperor Go-Shirakawa""@en .
  
  # Find his children
  ?child dbo:parent ?emperor ;
         a dbo:Person .

  # Find the grandchildren (children of his children)
  ?grandchild dbo:parent ?child ;
              a dbo:Person .

  # Filter for those who are office holders and royalty
  ?grandchild dbo:officeHolderOf ?office .
  ?grandchild dbo:royalty ?true .
}
```",2,4,3,2,1,3,3,71,0,0,4,0,0.0,0
465,22,train,"Give me the successor of the child, that is a royalty, of Anne of Brittany and successor of Ercole II d'Este, Duke of Ferrara.","SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. <http://dbpedia.org/resource/Ercole_II_d'Este,_Duke_of_Ferrara> <http://dbpedia.org/ontology/successor> ?result . ?v1 <http://dbpedia.org/ontology/successor> ?result . <http://dbpedia.org/resource/Anne_of_Brittany> <http://dbpedia.org/ontology/child> ?v1 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?successor WHERE {
  # Anne of Brittany's children with Louis XII
  ?anneChild dbo:parent dbr:Anne_of_Brittany ;
            dbo:spouse ?husband .
  
  # Claude of France (child of Anne and Louis XII)
  FILTER(?anneChild = dbr:Claude_of_France) .

  # Ercole II d'Este's successor
  ?ercoleSuccessor dbo:successorOf dbr:Ercole_II_d%27Este,_Duke_of_Ferrara ;
                  dbo:title ""Duke of Ferrara""@en .
  
  # Claude's spouse (Henry II)
  ?claudesSpouse dbo:spouse ?anneChild .

  FILTER(?claudesSpouse = dbr:Henry_II_of_France) .

  # Elizabeth of Valois as the successor
  ?successor dbo:parent ?claudesSpouse ;
            dbo:parent ?husband .
  
  FILTER(?successor = dbr:Elizabeth_of_Valois)
}
```",3,4,4,2,2,3,3,71,0,0,1,0,0.0,0
791,31,train,"Give me the spouse of the spouse, that is a royalty, of the reference to Emperor Takakura and predecessor of Emperor Antoku.","SELECT ?result WHERE { ?v0 <http://dbpedia.org/ontology/spouse> ?v1 . ?result <http://dbpedia.org/ontology/spouse> ?v0 . ?v1 <http://xmlns.com/foaf/0.1/name> ""Emperor Takakura""@en . ?result <http://dbpedia.org/ontology/successor> <http://dbpedia.org/resource/Emperor_Antoku> . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?spouseOfSpouse WHERE {
  # Step 1: Identify Emperor Takakura
  ?emperorTakakura a dbo:Monarch ;
                   foaf:name ""Emperor Takakura""@en .

  # Step 2: Find the spouse of Emperor Takakura
  ?emperorTakakura dbo:spouse ?spouseOfTakakura .

  # Step 3: Identify the spouse's spouse (who is royalty)
  ?spouseOfTakakura dbo:spouse ?spouseOfSpouse .
  ?spouseOfSpouse a dbo:Monarch .

  # Step 4: Find predecessor of Emperor Antoku
  ?emperorAntoku a dbo:Monarch ;
                 foaf:name ""Emperor Antoku""@en .
  ?predecessor dbr:Emperor_Antoku dbo:successor .

  # Step 5: Match the two individuals
  FILTER (?spouseOfSpouse = ?predecessor)
}
```",4,5,5,3,2,3,3,71,0,0,1,0,0.0,0
236,12,train,Give me the party member of Federalist Party and party member of the administration of James Madison.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/party> <http://dbpedia.org/resource/Federalist_Party> . ?v0 <http://dbpedia.org/property/leader> <http://dbpedia.org/resource/James_Madison> . ?result <http://dbpedia.org/ontology/party> ?v0 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?person WHERE {
  # Find individuals who were members of the Federalist Party
  ?person dbo:partyMemberOf dbr:Federalist_Party .

  # Find individuals who served in James Madison's administration
  OPTIONAL { 
    ?position dbo:officeHolder ?person .
    ?position dbo:heldByOffice dbr:James_Madison_Administration .
  }

  FILTER EXISTS {
    ?position dbo:officeHolder ?person .
    ?position dbo:heldByOffice dbr:James_Madison_Administration .
  }
}
```",3,3,4,2,2,3,2,20,0,0,19,0,0.0,0
839,17,train,"Give me the band, that is a musical artist, of the professional in Musician.","SELECT ?result WHERE { ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?v1 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v1 <http://dbpedia.org/property/occupation> ""Musician""@en . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT DISTINCT ?musicianLabel ?bandLabel 
WHERE {
  ?musician a dbo:MusicArtist ;
            rdfs:label ?musicianLabel .
  OPTIONAL { ?musician dbo:band ?band . }
  OPTIONAL { ?band rdfs:label ?bandLabel . }
  FILTER (lang(?musicianLabel) = 'en' && lang(?bandLabel) = 'en')
}
ORDER BY ?musicianLabel
LIMIT 10
```",2,3,3,2,1,3,3,71,0,0,3643,0,0.0,0
892,37,train,Give me the landmark at elevation of the award of the member of E-girls and entity in Province of Reggio Emilia.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/elevation> ?v2 . ?v1 <http://dbpedia.org/property/awards> ?v2 . <http://dbpedia.org/resource/E-girls> <http://dbpedia.org/ontology/bandMember> ?v1 . ?result <http://dbpedia.org/ontology/province> <http://dbpedia.org/resource/Province_of_Reggio_Emilia> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?landmark ?elevation ?entityInReggioEmilia WHERE {
  # Find a member of E-girls
  ?member dbo:memberOf dbr:E-girls .
  
  # Find an award associated with that member
  ?award dbo:recipient ?member .
  
  # Find a landmark related to the award and its elevation
  ?landmark dbo:relatedTo ?award ;
            dbo:elevationAboveSeaLevel ?elevation .

  # Find an entity in the Province of Reggio Emilia
  ?entityInReggioEmilia dbo:location dbr:Province_of_Reggio_Emilia .
  
  # Ensure the landmark and entity are distinct entities
  FILTER(?landmark != ?entityInReggioEmilia)
}
```",4,4,5,3,2,3,3,71,0,0,1,0,0.0,0
329,12,train,Give me the entity in United Kingdom and birthplace of Eric Cross (writer) and entity in Northern Ireland.,SELECT ?result WHERE { <http://dbpedia.org/resource/Eric_Cross_(writer)> <http://dbpedia.org/ontology/birthPlace> ?result . ?result <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Northern_Ireland> . ?result <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/United_Kingdom> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?birthPlaceUK ?entityNI WHERE {
  # Find Eric Cross and his birthplace
  dbr:Eric_Cross (dbo:birthPlace) ?birthPlace .
  
  # Check if the birthplace is in the United Kingdom
  OPTIONAL { 
    ?birthPlace dbo:country dbr:United_Kingdom ;
               dbp:name ?birthPlaceUK .
  }
  
  # Find an entity related to Eric Cross in Northern Ireland
  OPTIONAL {
    ?entityNI dbo:nationality dbr:Northern_Ireland ;
             dbo:wikiPageDisambiguates dbr:Eric_Cross .
  }
}
```",3,3,4,1,3,2,3,28,0,0,1,0,0.0,0
170,7,train,Give me the entity in Russia and domain of Mayor.,"SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Russia> . ?result <http://dbpedia.org/ontology/leaderTitle> ""Mayor""@en . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?cityLabel ?mayorDomain WHERE {
  ?city a dbo:City ;
        dbo:country dbr:Russia .
  OPTIONAL { ?city dbp:mayor ?mayor . }
  BIND(SUBSTR(STR(?mayor), STRLEN(""http://dbpedia.org/"")) AS ?mayorDomain)
  SERVICE wikibase:label { bd:serviceParam wikibase:language ""[AUTO_LANGUAGE],en"". }
}
ORDER BY ?cityLabel
```",2,2,3,1,2,2,3,28,0,0,99,0,0.0,0
826,19,train,"Give me the successor of Louis II, Grand Duke of Hesse and spouse of the child of Johann Heinrich Appel.","SELECT ?result WHERE { ?v0 <http://dbpedia.org/ontology/spouse> ?result . <http://dbpedia.org/resource/Louis_II,_Grand_Duke_of_Hesse> <http://dbpedia.org/ontology/successor> ?result . ?v0 <http://dbpedia.org/property/father> ""Johann Heinrich Appel""@en . }","```sparql
SELECT ?successor WHERE {
  wd:Q123456 wdt:P39 wd:Q789012 . # Louis II, Grand Duke of Hesse (replace Q123456 and Q789012 with actual IDs)
  wd:Q789012 wdt:P1368 ?successor .
}
```

Note: Replace `wd:Q123456` with the DBpedia ID for Louis II, Grand Duke of Hesse, and `wdt:P39` with the property indicating his role or title. Similarly, replace `wd:Q789012` with the correct identifier for the position of Grand Duke of Hesse, and `wdt:P1368` with the property that indicates a successor.",3,3,4,2,2,3,3,71,0,0,1,0,0.0,0
826,36,train,"Give me the spouse of Anna Magdalena Appel and predecessor of the parent of the child of Louis IV, Grand Duke of Hesse.","SELECT ?result WHERE { ?v0 <http://dbpedia.org/ontology/parent> ?v1 . ?v0 <http://dbpedia.org/ontology/parent> <http://dbpedia.org/resource/Louis_IV,_Grand_Duke_of_Hesse> . ?result <http://dbpedia.org/ontology/successor> ?v1 . <http://dbpedia.org/resource/Anna_Magdalena_Appel> <http://dbpedia.org/ontology/spouse> ?result . }","```sparql
SELECT ?spouse WHERE {
  wd:Q11940 wdt:P26 ?spouse .
}
```",4,4,5,3,2,3,3,71,0,0,1,0,0.0,0
329,1,train,Give me the entity in United Kingdom.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/United_Kingdom> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?entity WHERE {
  ?entity a dbo:Place .
  ?entity dbo:country dbpedia:United_Kingdom .
}
LIMIT 100
```",1,1,2,1,1,2,3,28,0,0,42999,0,0.0,0
917,35,train,"Give me the child of the father of Kamehameha IV and parent of the child, that is a royalty, of Kamehameha IV.",SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v1 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Kamehameha_IV> . ?result <http://dbpedia.org/property/father> ?v0 . ?result <http://dbpedia.org/ontology/child> ?v1 . <http://dbpedia.org/resource/Kamehameha_IV> <http://dbpedia.org/property/father> ?v0 . },"```sparql
SELECT ?person WHERE {
  ?kamehamehaIV wdt:P31 wd:Q215627; # instance of person
                wdt:P22 ?father. # father

  ?father wdt:P31 wd:Q215626; # instance of king (Kamehameha II)
          rdfs:label ""Kamehameha II""@en.

  OPTIONAL { ?kamehamehaIV wdt:P25 ?mother. } # mother
}
```",4,5,5,2,2,3,3,71,0,0,1,0,0.0,0
826,12,train,"Give me the predecessor of Louis IV, Grand Duke of Hesse and successor of Louis II, Grand Duke of Hesse.","SELECT ?result WHERE { <http://dbpedia.org/resource/Louis_II,_Grand_Duke_of_Hesse> <http://dbpedia.org/ontology/successor> ?result . ?result <http://dbpedia.org/ontology/successor> <http://dbpedia.org/resource/Louis_IV,_Grand_Duke_of_Hesse> . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>

SELECT ?predecessorLabel ?successorLabel WHERE {
  ?person a dbo:Monarch ;
          rdfs:label ""Louis III, Grand Duke of Hesse""@en .
  
  OPTIONAL { ?person dbo:predecessor ?predecessor . 
             ?predecessor rdfs:label ?predecessorLabel . }
  
  OPTIONAL { ?person dbo:successor ?successor . 
             ?successor rdfs:label ?successorLabel . }
}
```",2,2,3,1,2,3,3,71,0,0,1,0,0.0,0
715,13,train,Give me the commander in the force of Francisco Largo Caballero.,SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/commander> ?result . ?v1 <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Francisco_Largo_Caballero> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?commander WHERE {
  ?person dbo:spouse|dbo:child|dbo:parent|dbo:employer dbr:Fran%C3%A7ois_Largo_Caballero .
  ?person dbo:positionHeld ?position .
  ?position dbo:heldBy dbr:Fran%C3%A7ois_Largo_Caballero .
  ?position dbo:commander ?commander .
}
```",2,2,3,2,1,3,3,71,0,0,28,0,0.0,0
382,14,train,"Give me the landmark at elevation of the award of the reference, that is a college coach and a coach, to Harry Combes.","SELECT ?result WHERE { ?v2 <http://dbpedia.org/property/awards> ?v0 . ?result <http://dbpedia.org/ontology/elevation> ?v0 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Coach>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/CollegeCoach>. ?v2 <http://xmlns.com/foaf/0.1/name> ""Harry Combes""@en . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?landmark ?elevation WHERE {
  # Find Harry Combes and his roles
  ?person a dbo:Person ;
          foaf:name ""Harry Combes"" ;
          dbo:occupation ?occupation .
  
  FILTER (CONTAINS(LCASE(STR(?occupation)), ""coach"") || CONTAINS(LCASE(STR(?occupation)), ""college coach""))

  # Find awards associated with Harry Combes
  OPTIONAL { ?person dbo:awardReceived ?award . }

  # Link the award to a landmark and its elevation
  ?award dbo:referenceLandmark ?landmark .
  ?landmark dbo:elevationAboveSeaLevel ?elevation .
}
```",3,5,4,3,1,3,2,20,0,0,727,0,0.0,0
865,16,train,"Who is the child, that is a politician, of the spouse of Syeda Shahar Banu?",SELECT ?result WHERE { <http://dbpedia.org/resource/Syeda_Shahar_Banu> <http://dbpedia.org/ontology/spouse> ?v0 . ?result <http://dbpedia.org/property/father> ?v0 . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT ?child WHERE {
  ?syeda foaf:name ""Syeda Shahar Banu""@en .
  ?syeda dbo:spouse ?spouse .

  ?spouse dbo:child ?child .
  
  OPTIONAL { 
    ?child dbo:occupation ?occupation .
    FILTER(CONTAINS(LCASE(?occupation), ""politician""))
  }
}
```",2,3,3,2,1,3,3,71,3,0,0,1.0,1.0,1.0
170,9,train,Give me the domain of Mayor and birth place of Era Ziganshina.,"SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/leaderTitle> ""Mayor""@en . <http://dbpedia.org/resource/Era_Ziganshina> <http://dbpedia.org/ontology/birthPlace> ?result . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?domain ?birthPlace WHERE {
  # Query for the domain of ""Mayor""
  OPTIONAL { 
    ?mayor a dbo:Mayor .
    ?mayor rdfs:domain ?domain .
  }
  
  # Query for the birthplace of Era Ziganshina
  OPTIONAL {
    ?eraZiganshina a dbo:Person ;
                   foaf:name ""Era Ziganshina""@en ;
                   dbo:birthPlace ?birthPlace .
  }
}
```",2,2,3,1,2,2,3,28,1,2,0,0.3333333333333333,1.0,0.5
606,11,train,"Give me the birthplace of Charles I. Barber and figure known as the nickname of DeKalb, Illinois.","SELECT ?result WHERE { <http://dbpedia.org/resource/Charles_I._Barber> <http://dbpedia.org/ontology/birthPlace> ?result . ?result <http://dbpedia.org/property/nickname> ?v2 . <http://dbpedia.org/resource/DeKalb,_Illinois> <http://dbpedia.org/property/nickname> ?v2 . }","```sparql
# Query for the birthplace of Charles I. Barber
SELECT ?birthPlace WHERE {
  ?person dbo:birthName ""Charles I. Barber""@en .
  ?person dbo:birthPlace ?birthPlace .
}

UNION

# Query for the nickname of DeKalb, Illinois
SELECT ?nickname WHERE {
  ?city rdfs:label ""DeKalb, Illinois""@en ;
        dbo:officialName ""DeKalb, Illinois"" .
  OPTIONAL { ?city dbo:nickname ?nickname . }
}
```",3,3,4,2,2,3,2,20,0,0,1,0,0.0,0
715,19,train,"Give me the commander in the force, that is a military conflict, of Abd el-Krim and commander in Spanish Civil War.",SELECT ?result WHERE { ?v0 <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Abd_el-Krim> . ?v0 <http://dbpedia.org/ontology/commander> ?result . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. <http://dbpedia.org/resource/Spanish_Civil_War> <http://dbpedia.org/ontology/commander> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?rifWarCommander ?spanishCivilWarCommander WHERE {
  # Find the commander in the Rif War associated with Abd el-Krim
  ?rifConflict a dbo:MilitaryConflict ;
               dbo:opposingMilitaryForce [
                 dbo:commander ?rifWarCommander ;
                 dbo:member dbr:Abd_el-Krim
               ] .
  
  # Find a notable commander from the Spanish Civil War
  ?spanishCivilWar a dbo:MilitaryConflict ;
                   dbo:participatingGroup [
                     dbo:commander ?spanishCivilWarCommander ;
                     dbo:name ""Spanish Civil War""@en
                   ] .
}
```",3,4,4,2,2,3,3,71,0,0,4,0,0.0,0
102,6,train,Give me the native of Dewsbury and manager of Sheffield United W.F.C..,SELECT ?result WHERE { <http://dbpedia.org/resource/Sheffield_United_W.F.C.> <http://dbpedia.org/ontology/manager> ?result . ?result <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Dewsbury> . },"```sparql
# Step 1: Find the manager of Sheffield United W.F.C.
SELECT ?manager WHERE {
  ?club dbr:Sheffield_United_Women's_Football_Club dbo:manager ?manager .
}

# Step 2: Check if this manager is native of Dewsbury
SELECT ?managerLabel WHERE {
  # Replace ?manager with the actual URI obtained from step 1
  ?person foaf:name ?managerLabel ;
          dbp:nativePlace dbr:Dewsbury .
  
  FILTER(?manager = ?person)
}
```

Note: The second query requires replacing `?manager` with the actual URI of the manager found in the first query. This can be done programmatically or manually after executing the first query.",2,2,3,1,2,3,2,20,0,0,1,0,0.0,0
935,8,train,Give me the headquarter of the office of Sanaullah Khan Zehri.,SELECT ?result WHERE { ?v0 <http://dbpedia.org/ontology/location> ?result . <http://dbpedia.org/resource/Sanaullah_Khan_Zehri> <http://dbpedia.org/property/office> ?v0 . },"```sparql
SELECT ?headquarters WHERE {
  ?person foaf:name ""Sanaullah Khan Zehri"" .
  ?person dbo:officeTitle dbr:Chief_Minister_of_Balochistan .
  ?office dbo:headquarter ?headquarters ;
          dbo:positionHeldBy ?person .
}
```",2,2,3,2,1,3,2,20,0,0,1,0,0.0,0
281,13,train,"Give me the awardee of Medal bar and commander in the war, that is an event and a military conflict, of Roy Boehm.",SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?result <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/Medal_bar> . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. <http://dbpedia.org/resource/Roy_Boehm> <http://dbpedia.org/ontology/battle> ?v1 . ?v1 <http://dbpedia.org/ontology/commander> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?event WHERE {
  # Find Roy Boehm's resource
  ?person rdfs:label ""Roy Boehm""@en .
  
  # Find the event where he was a commander
  ?event dbo:commander ?person ;
         a dbo:MilitaryConflict .

  # Check if he received a Medal bar in this context
  OPTIONAL {
    ?award dbo:recipient ?person ;
           dbo:name ?medalName .
    FILTER(CONTAINS(LCASE(?medalName), ""medal bar""))
  }
  
  FILTER EXISTS { ?event dbo:commander ?person } .
}
```",3,5,4,2,2,2,3,28,0,0,3,0,0.0,0
839,23,train,"Give me the band of the person born, that is a musical artist, as the persona of Kevin Russell (musician).",SELECT ?result WHERE { ?v0 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v0 <http://dbpedia.org/property/birthName> ?v2 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. <http://dbpedia.org/resource/Kevin_Russell_(musician)> <http://xmlns.com/foaf/0.1/givenName> ?v2 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?bandName WHERE {
  ?person dbo:birthPlace ?place .
  ?person rdfs:label ""Kevin Russell (musician)""@en .
  ?person a dbo:MusicalArtist .
  ?person dbo:associatedBand ?band .
  ?band rdfs:label ?bandName .
  FILTER(LANG(?bandName) = 'en')
}
```",3,4,4,3,1,3,3,71,0,1,1,0.0,0.0,0
976,36,train,Give me the office of the person born as the birth name of Naci Bostancı and office of Mustafa Şentop.,SELECT ?result WHERE { <http://dbpedia.org/resource/Naci_Bostancı> <http://dbpedia.org/property/birthName> ?v3 . <http://dbpedia.org/resource/Mustafa_Şentop> <http://dbpedia.org/property/office> ?result . ?v0 <http://dbpedia.org/property/office> ?result . ?v0 <http://dbpedia.org/property/birthName> ?v3 . },"```sparql
# Query 1: Get the birth name of Naci Bostancı
SELECT ?birthName WHERE {
  dbpedia-tr:ناجى_بوستانچى dbo:birthName ?birthName .
}

# Query 2: Find the office held by a person with the retrieved birth name (assuming we get ""Naci Bostancı"" as the birth name)
SELECT ?office WHERE {
  ?person foaf:name ""Naci Bostancı""@en.
  ?person dbo:holdsPublicOffice ?office .
}

# Query 3: Get the office of Mustafa Şentop
SELECT ?office WHERE {
  dbpedia-tr:مصطفى_شنتوپ dbo:holdsPublicOffice ?office .
}
```",4,4,5,3,2,3,3,71,0,0,1,0,0.0,0
773,20,train,Give me the spouse of Louis the German and parent of the successor of Charles the Bald.,SELECT ?result WHERE { <http://dbpedia.org/resource/Louis_the_German> <http://dbpedia.org/ontology/spouse> ?result . <http://dbpedia.org/resource/Charles_the_Bald> <http://dbpedia.org/ontology/successor> ?v2 . ?result <http://dbpedia.org/ontology/child> ?v2 . },"```sparql
SELECT ?spouse WHERE {
  ?louisTheGerman dbo:spouse ?spouse .
  FILTER(?louisTheGerman = dbpedia:Louis_the_German)
  
  OPTIONAL { 
    ?charlesTheBald dbo:child ?successor .
    ?successor rdfs:label ""Louis the Stammerer""@en .
    ?charlesTheBald rdfs:label ""Charles the Bald""@en .
    
    ?spouse dbo:parent ?successor .
  }
}
```",3,3,4,2,2,3,3,71,0,0,1,0,0.0,0
874,14,train,"Give me the band of the band member of the band, that is an organisation, of Mark Read (singer).",SELECT ?result WHERE { ?v0 <http://dbpedia.org/ontology/associatedMusicalArtist> ?v2 . ?v2 <http://dbpedia.org/ontology/bandMember> <http://dbpedia.org/resource/Mark_Read_(singer)> . ?result <http://dbpedia.org/ontology/bandMember> ?v0 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. },"```sparql
SELECT DISTINCT ?bandName WHERE {
  # Step 1: Identify Mark Read and his band which is an organization
  ?markRead dbo:birthName ""Mark Andrew Read""@en .
  ?markRead dbo:memberOfBand ?band .
  
  # Ensure the band is also considered an organization
  ?band a dbo:MusicalGroup ;
        rdfs:label ?bandLabel .

  # Step 2: Find other members of that band
  ?otherMember dbo:memberOfBand ?band .

  # Step 3: Identify bands those members belong to
  ?otherMember dbo:memberOfBand ?otherBand .
  
  # Return the name of these bands
  ?otherBand rdfs:label ?bandName .
}
```",3,4,4,3,1,3,2,20,0,0,5,0,0.0,0
465,34,train,"Give me the successor of Renée of France and successor of the child of the parent of Ercole II d'Este, Duke of Ferrara.","SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/successor> ?result . <http://dbpedia.org/resource/Ercole_II_d'Este,_Duke_of_Ferrara> <http://dbpedia.org/ontology/parent> ?v2 . ?v1 <http://dbpedia.org/property/father> ?v2 . <http://dbpedia.org/resource/Renée_of_France> <http://dbpedia.org/ontology/successor> ?result . }","```sparql
# Query for the successor of Renée of France
SELECT ?successor WHERE {
  wd:Q123456 wdt:P39 wd:Q789012 . # Renée of France's title or position
  wd:Q789013 wdt:P57 wd:Q123456 . # Person who succeeded Renée of France
  wd:Q789013 rdfs:label ?successor .
  FILTER (lang(?successor) = ""en"")
}

UNION

# Query for the successor of the child of the parent of Ercole II d'Este, Duke of Ferrara
SELECT ?finalSuccessor WHERE {
  wd:Q987654 wdt:P31 wd:Q123456 . # Ercole II d'Este's identifier
  wd:Q987654 wdt:P22 ?parent .    # Parent of Ercole II d'Este
  ?child wdt:P40 wd:Q987654 .     # Child of the parent (Ercole II himself)
  ?child wdt:P57 ?successorChild .# Successor of this child
  ?successorChild rdfs:label ?finalSuccessor .
  FILTER (lang(?finalSuccessor) = ""en"")
}
```

Note: Replace `wd:Q123456`, `wd:Q789012`, `wd:Q789013`, and `wd:Q987654` with the actual DBpedia identifiers for Renée of France, her title or position, her successor, Ercole II d'Este, and his parent respectively. These identifiers can be found by querying DBpedia directly.",4,4,5,3,2,3,3,71,0,0,1,0,0.0,0
917,31,train,"Give me the child of Kekūanāoʻa and parent of the child, that is a royalty, of the mayor of Hawaiian Kingdom.",SELECT ?result WHERE { ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?result <http://dbpedia.org/ontology/parent> <http://dbpedia.org/resource/Kekūanāoʻa> . ?result <http://dbpedia.org/ontology/child> ?v0 . <http://dbpedia.org/resource/Hawaiian_Kingdom> <http://dbpedia.org/property/leader> ?v2 . ?v0 <http://dbpedia.org/property/father> ?v2 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?royalParent WHERE {
  # Kekūanāoʻa's child who became royalty
  VALUES (?childOfKekuanaoa) { 
    dbr:Kauikeaouli_(king_of_the_Kingdom_of_Hawaii)
  }
  
  # Walter Murray Gibson as a notable leader (Premier)
  ?gibson dbo:spouse ?mother .
  ?gibson dbr:Walter_Murray_Gibson .

  # Elizabeth Kekaaniauola Gibson, child of Walter Murray Gibson
  ?elizabeth dbo:parent ?gibson ;
             dbo:parent ?royalParent .

  # Princess Ruth Keelikolani as the royal parent
  VALUES (?royalParent) {
    dbr:Ruth_Keʻelikōlani
  }
}
```",4,5,5,3,2,3,3,71,0,0,2,0,0.0,0
978,4,train,Give me the name of Chicane (musician).,SELECT ?result WHERE { <http://dbpedia.org/resource/Chicane_(musician)> <http://xmlns.com/foaf/0.1/givenName> ?result . },"```sparql
PREFIX foaf: <http://xmlns.com/foaf/0.1/>
SELECT ?name WHERE {
  ?s foaf:name ?name .
  FILTER(CONTAINS(LCASE(STR(?s)), ""chicane""))
}
```",1,1,2,1,1,3,2,20,0,6,1,0.0,0.0,0
212,1,train,Give me the birthplace of KODA (singer).,SELECT ?result WHERE { <http://dbpedia.org/resource/KODA_(singer)> <http://dbpedia.org/ontology/birthPlace> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?birthPlaceLabel WHERE {
  ?person a dbo:Singer .
  ?person dbp:name ""Koda Kumi""@en .
  ?person dbo:birthPlace ?birthPlace .
  SERVICE wikibase:label { bd:serviceParam wikibase:language ""[AUTO_LANGUAGE],en"". }
}
```",1,1,2,1,1,2,2,9,0,0,2,0,0.0,0
791,36,train,"Give me the spouse of Taira no Tokuko and father of the child, that is a royalty, of the father, that is a royalty and an office holder, of Emperor Antoku.",SELECT ?result WHERE { ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v1 <http://dbpedia.org/property/father> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v1 <http://dbpedia.org/property/father> ?v0 . <http://dbpedia.org/resource/Emperor_Antoku> <http://dbpedia.org/property/father> ?v0 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?result <http://dbpedia.org/ontology/spouse> <http://dbpedia.org/resource/Taira_no_Tokuko> . },"```sparql
SELECT ?spouse WHERE {
  wd:Q1234567 wdt:P26 ?spouse .
}
```

In the above query:
- `wd:Q1234567` should be replaced with the actual DBpedia resource ID for Taira no Tokuko. This ID can be found by searching DBpedia or using a tool to look up her specific entry.",4,7,5,3,2,3,3,71,0,0,1,0,0.0,0
579,10,train,"Give me the birth name of the native, that is an office holder, of Edinburgh.",SELECT ?result WHERE { ?v0 <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Edinburgh> . ?v0 <http://dbpedia.org/property/birthName> ?result . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?birthName WHERE {
  ?person a dbo:Politician ;
          foaf:name ""Nicola Sturgeon""@en ;
          dbo:placeOfBirth dbr:Edinburgh .
  OPTIONAL { ?person dbp:birthName ?birthName . }
}
```",2,3,3,2,1,3,2,20,0,0,18,0,0.0,0
933,30,train,"Give me the band of the band, that is a group and a band and an organisation, of Alan Warner (musician) and band of Mike Elliott (saxophonist) and reference to Alan Warner.","SELECT ?result WHERE { ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Band>. <http://dbpedia.org/resource/Mike_Elliott_(saxophonist)> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. <http://dbpedia.org/resource/Alan_Warner_(musician)> <http://dbpedia.org/ontology/associatedMusicalArtist> ?v0 . ?v0 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?result <http://xmlns.com/foaf/0.1/name> ""Alan Warner""@en . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Group>. }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?band WHERE {
  # Find bands associated with Alan Warner
  ?alanWarnerBand dbo:musicalArtist dbr:Alan_Warner ;
                  a dbo:MusicalGroup .

  # Find bands associated with Mike Elliott
  ?mikeElliottBand dbo:musicalArtist dbr:Mike_Elliott ;
                   a dbo:MusicalGroup .

  # Ensure the band is common to both musicians
  FILTER (?alanWarnerBand = ?mikeElliottBand)

  # Bind the result to 'band'
  BIND(?alanWarnerBand AS ?band)
}
```",4,7,5,2,3,3,3,71,0,0,1,0,0.0,0
826,4,train,Who is the child of Johann Heinrich Appel?,"SELECT ?result WHERE { ?result <http://dbpedia.org/property/father> ""Johann Heinrich Appel""@en . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?childLabel WHERE {
  ?person a dbo:Person ;
          foaf:name ""Johann Heinrich Appel""@en .
  ?person dbo:child ?child .
  ?child rdfs:label ?childLabel .
  FILTER(LANG(?childLabel) = 'en')
}
```",1,1,2,1,1,3,3,71,0,0,1,0,0.0,0
158,2,train,Who is the reference to Adelbert Cronkhite?,"SELECT ?result WHERE { ?result <http://xmlns.com/foaf/0.1/name> ""Adelbert Cronkhite""@en . }","```sparql
PREFIX foaf: <http://xmlns.com/foaf/0.1/>
PREFIX dbo: <http://dbpedia.org/ontology/>

SELECT ?person ?name ?occupation ?birthDate ?deathDate WHERE {
  ?person a dbo:Person .
  ?person foaf:name ?name .
  OPTIONAL { ?person dbo:occupation ?occupation . }
  OPTIONAL { ?person dbo:birthDate ?birthDate . }
  OPTIONAL { ?person dbo:deathDate ?deathDate . }
  FILTER(CONTAINS(LCASE(?name), ""adelbert cronkhite""))
}
LIMIT 10
```",1,1,2,1,1,3,2,20,1,1,0,0.5,1.0,0.6666666666666666
93,1,train,Give me the death place of John Weir Troy.,SELECT ?result WHERE { <http://dbpedia.org/resource/John_Weir_Troy> <http://dbpedia.org/ontology/deathPlace> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?deathPlace WHERE {
  ?person a dbo:Person ;
          foaf:name ""John Weir Troy""@en .
  ?person dbo:deathPlace ?deathPlace .
}
```",1,1,2,1,1,3,2,20,3,0,0,1.0,1.0,1.0
216,18,train,Give me the player in Mario Ivanković and team of Ognjen Vukojević and player in Igor Bišćan.,SELECT ?result WHERE { <http://dbpedia.org/resource/Mario_Ivanković> <http://dbpedia.org/ontology/team> ?result . ?result <http://dbpedia.org/ontology/coach> <http://dbpedia.org/resource/Ognjen_Vukojević> . <http://dbpedia.org/resource/Igor_Bišćan> <http://dbpedia.org/ontology/team> ?result . },"```sparql
# Step 1: Get Ognjen Vukojević's team
SELECT ?team WHERE {
    dbpedia-owl:Ognjen_Vukojević dbo:playsFor ?team .
}

# Step 2: Get players in that team
SELECT DISTINCT ?player WHERE {
    ?team dbo:member ?player .
    FILTER NOT EXISTS { ?player rdfs:label ""Ognjen Vukojević""@en }
}

# Step 3: Get teams where Mario Ivanković played
SELECT DISTINCT ?team1 WHERE {
    dbpedia-owl:Mario_Ivanković dbo:playsFor ?team1 .
}

# Step 4: Get teams where Igor Bišćan played
SELECT DISTINCT ?team2 WHERE {
    dbpedia-owl:Igor_Bišćan dbo:playsFor ?team2 .
}

# Step 5: Find common players in the team of Ognjen Vukojević and teams of Mario Ivanković and Igor Bišćan
SELECT DISTINCT ?player WHERE {
    ?team dbo:member ?player .
    FILTER NOT EXISTS { ?player rdfs:label ""Ognjen Vukojević""@en }
    
    VALUES (?team) {
        # Replace with actual team URI from Step 1 result
    }

    OPTIONAL { ?team1 dbo:member ?player . }
    OPTIONAL { ?team2 dbo:member ?player . }
    FILTER EXISTS { ?team1 } && EXISTS { ?team2 }
}
```

Note: The `VALUES (?team)` clause in the final query should be replaced with the actual URI of Ognjen Vukojević's team obtained from Step 1.",3,3,4,1,3,3,3,71,0,0,1,0,0.0,0
865,19,train,"Give me the father of AK Abdul Momen and native of the residence, that is a country, of Ram Jaipal Singh Yadav.",SELECT ?result WHERE { <http://dbpedia.org/resource/Ram_Jaipal_Singh_Yadav> <http://dbpedia.org/property/residence> ?v1 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. <http://dbpedia.org/resource/AK_Abdul_Momen> <http://dbpedia.org/property/father> ?result . ?result <http://dbpedia.org/ontology/birthPlace> ?v1 . },"```sparql
SELECT ?father ?nativeCountry WHERE {
  # Query for the father of AK Abdul Momen
  ?person dbo:birthName ""AK Abdul Momen""@en .
  OPTIONAL { ?person dbo:father ?father . }
  
  # Query for the native country of Ram Jaipal Singh Yadav's residence
  ?yadav dbo:birthName ""Ram Jaipal Singh Yadav""@en .
  OPTIONAL { ?yadav dbo:nativePlace ?nativePlace . }
  OPTIONAL { ?nativePlace dbo:country ?nativeCountry . }

  FILTER(?father != """" && ?nativeCountry != """")
}
```",3,4,4,2,2,3,3,71,0,0,1,0,0.0,0
933,28,train,Give me the band of the band of Alan Warner (musician) and band of The Ramong Sound and reference to Alan Warner.,"SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . <http://dbpedia.org/resource/The_Ramong_Sound> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . <http://dbpedia.org/resource/Alan_Warner_(musician)> <http://dbpedia.org/ontology/associatedMusicalArtist> ?v1 . ?result <http://xmlns.com/foaf/0.1/name> ""Alan Warner""@en . }","```sparql
# Query to get the band associated with Alan Warner (musician)
SELECT ?band WHERE {
  ?person dbo:birthName ""Alan Warner""@en .
  ?person dbo:associatedBand ?band .
}

UNION

# Query to get the band associated with The Ramones
SELECT ?band WHERE {
  ?person rdfs:label ""The Ramones""@en .
  ?person dbo:associatedBand ?band .
}
```",4,4,5,2,3,3,3,71,0,0,1,0,0.0,0
166,12,train,"Give me the resting place of Gonzalo Queipo de Llano and entity in the territory administered, that is a country, from Madrid.",SELECT ?result WHERE { ?v0 <http://dbpedia.org/ontology/capital> <http://dbpedia.org/resource/Madrid> . ?result <http://dbpedia.org/ontology/country> ?v0 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. <http://dbpedia.org/resource/Gonzalo_Queipo_de_Llano> <http://dbpedia.org/ontology/restingPlace> ?result . },"```sparql
# Query for the resting place of Gonzalo Queipo de Llano
SELECT ?burialPlace WHERE {
  ?person dbo:birthName ""Gonzalo Queipo de Llano""@en .
  ?person dbo:deathPlace ?burialPlace .
}

UNION

# Query for a country administered by Madrid (Spain)
SELECT DISTINCT ?country WHERE {
  ?territory dcterms:isPartOf dbc:Administrative_divisions_of_Spain .
  ?territory dbp:capital ""Madrid""@en .
  ?territory dbo:administrativeTerritory ?country .
  FILTER(?country a dbo:Country) 
}
```",3,4,4,2,2,3,2,20,0,0,1,0,0.0,0
216,16,train,"Give me the coach, that is a soccer player and a sports manager and a soccer manager, of the player, that is an organisation and a sports club and a soccer club, in Džemal Berberović.",SELECT ?result WHERE { ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerPlayer>. ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsManager>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerClub>. <http://dbpedia.org/resource/Džemal_Berberović> <http://dbpedia.org/ontology/team> ?v1 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsClub>. ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerManager>. ?v1 <http://dbpedia.org/ontology/coach> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?coach WHERE {
  # Find Džemal Berberović's club
  dbr:Džemal_Berberović a dbo:SoccerPlayer ;
                        dbo:team ?club .

  # Find the coach of this club who is also a soccer player, sports manager, and soccer manager
  ?coach a dbo:SoccerManager, dbo:SportsManager, dbo:SoccerPlayer ;
         dbo:managerOf ?club .
}
```",2,8,3,2,1,3,3,71,0,0,2,0,0.0,0
715,14,train,"Give me the leader of the office, that is a government agency and an organisation, of Carlos Franco Iribarnegaray.",SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/leader> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/GovernmentAgency>. <http://dbpedia.org/resource/Carlos_Franco_Iribarnegaray> <http://dbpedia.org/property/office> ?v1 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?office ?leader WHERE {
  ?person foaf:name ""Carlos Franco Iribarnegaray""@en .
  ?person dbo:positionHeld ?office .
  ?office a dbo:GovernmentAgency ;
          dbo:head ?leader .
}
```",2,4,3,2,1,3,3,71,0,0,2,0,0.0,0
917,28,train,"Give me the parent of the child, that is a royalty, of Kamehameha IV and child of Kekūanāoʻa and child of Kekūanāoʻa.","SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?result <http://dbpedia.org/ontology/parent> <http://dbpedia.org/resource/Kekūanāoʻa> . ?result <http://dbpedia.org/ontology/child> ?v1 . ?v1 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Kamehameha_IV> . ?result <http://dbpedia.org/property/father> ""Kekūanāoʻa""@en . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?parent WHERE {
  # Find a person who is a child of both Kamehameha IV and Kekūanāoʻa
  ?child dbo:spouse ?kamehamehaIV .
  ?child dbo:spouse ?kekuanaoa .

  # Ensure the child is royalty
  ?child rdf:type dbo:Monarch .

  # Find the parent of this child
  ?parent dbo:child ?child .
}
```",4,5,5,2,3,3,3,71,0,17,1,0.0,0.0,0
274,6,train,Give me the band member of Dizzy Gillespie and professional in .,"SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/associatedMusicalArtist> <http://dbpedia.org/resource/Dizzy_Gillespie> . ?result <http://dbpedia.org/property/occupation> """"@en . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?member ?profession WHERE {
  ?gillespie a dbo:MusicArtist ;
            foaf:name ""Dizzy Gillespie""@en .
  
  ?bandMember dbo:bandMember ?gillespie .
  ?bandMember dbo:profession ?profession .

  FILTER(?profession != """")
}
```",2,2,3,1,2,2,3,28,0,0,8,0,0.0,0
41,5,train,"Who is the work, that is an office holder, of yes?","SELECT ?result WHERE { ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?result <http://dbpedia.org/property/author> ""yes""@en . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?film ?officeHolderCharacter WHERE {
  ?film a dbo:Film .
  ?film rdfs:label ""Yes Man""@en .
  OPTIONAL { 
    ?film dbo:starring ?actor .
    ?actor dbo:characterName ?officeHolderCharacter .
    FILTER(CONTAINS(LCASE(?officeHolderCharacter), ""office""))
  }
}
```",1,2,2,1,1,2,3,28,0,0,59,0,0.0,0
773,8,train,"Give me the child, that is a royalty, of Louis the German.",SELECT ?result WHERE { ?result <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Louis_the_German> . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?child ?title WHERE {
  # Identify Louis the German
  VALUES ?louisTheGerman { dbr:Louis_the_German }

  # Find his children who have a royal title
  ?child dbo:parent ?louisTheGerman .
  ?child dbo:royalTitle ?title .
}
```",1,2,2,1,1,3,3,71,0,0,3,0,0.0,0
124,3,train,"Give me the reference, that is Australian and an organisation and a military unit, to 'A' Battery, Royal Australian Artillery.","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Australia>. ?result <http://xmlns.com/foaf/0.1/name> ""'A' Battery, Royal Australian Artillery""@en . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryUnit>. }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX military: <http://dbpedia.org/ontology/military>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?entity WHERE {
  ?entity a dbo:Organisation .
  ?entity a military:MilitaryUnit .
  ?entity rdfs:label ?label .
  FILTER (CONTAINS(LCASE(?label), ""a battery, royal australian artillery"") && LANGMATCHES(LANG(?label), ""en""))
  OPTIONAL { ?entity dbo:country dbr:Australia . }
}
```",1,4,2,1,1,3,3,71,0,0,1,0,0.0,0
791,18,train,Give me the spouse of Taira no Tokuko and father of Emperor Go-Toba and predecessor of Emperor Antoku.,SELECT ?result WHERE { <http://dbpedia.org/resource/Emperor_Go-Toba> <http://dbpedia.org/property/father> ?result . ?result <http://dbpedia.org/ontology/successor> <http://dbpedia.org/resource/Emperor_Antoku> . ?result <http://dbpedia.org/ontology/spouse> <http://dbpedia.org/resource/Taira_no_Tokuko> . },"```sparql
SELECT ?person WHERE {
  # Spouse of Taira no Tokuko
  ?spouse wdt:P26 wd:Q1234567 . # Assuming Q1234567 is the DBpedia ID for Taira no Tokuko

  # Father of Emperor Go-Toba
  ?father wdt:P22 wd:Q2345678 . # Assuming Q2345678 is the DBpedia ID for Emperor Go-Toba

  # Predecessor of Emperor Antoku
  ?predecessor wdt:P39 wd:Q3456789 . # Assuming Q3456789 is the DBpedia ID for Emperor Antoku

  # Find common person among these roles
  FILTER (?spouse = ?father && ?father = ?predecessor)
}
```

Note: The actual DBpedia IDs (e.g., `wd:Q1234567`, `wd:Q2345678`, `wd:Q3456789`) need to be replaced with the correct identifiers for Taira no Tokuko, Emperor Go-Toba, and Emperor Antoku respectively. These can be found by querying DBpedia or using a resource like Wikidata.",3,3,4,1,3,3,3,71,0,0,1,0,0.0,0
892,14,train,"Give me the entity in the administration, that is Italian and a region and a settlement and an administrative region, of Democratic Party (Italy).",SELECT ?result WHERE { ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Region>. ?result <http://dbpedia.org/ontology/province> ?v0 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/AdministrativeRegion>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. ?v0 <http://dbpedia.org/property/leaderParty> <http://dbpedia.org/resource/Democratic_Party_(Italy)> . ?v0 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Italy>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?region WHERE {
  ?region a dbo:Region ;
          dbo:country dbr:Italy ;
          dbo:settlement true ;
          dbo:administrativeRegion true .
  
  OPTIONAL { ?governance dbo:governingParty dbp:Democratic_Party_(Italy) . }
}
```",2,6,3,2,1,3,3,71,0,0,587,0,0.0,0
124,7,train,Who is the person born on 1850-06-24?,"SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/birthDate> ""1850-06-24""^^<http://www.w3.org/2001/XMLSchema#date> . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX xsd: <http://www.w3.org/2001/XMLSchema#>

SELECT ?person ?name WHERE {
  ?person a dbo:Person .
  ?person dbo:birthDate ?date .
  FILTER (YEAR(?date) = 1850 && MONTH(?date) = 6 && DAY(?date) = 24)
  OPTIONAL { ?person foaf:name ?name . }
}
ORDER BY ?name
```",1,1,2,1,1,3,3,71,2,2,0,0.5,1.0,0.6666666666666666
122,0,train,Give me the band member of Lyrics Born.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/associatedMusicalArtist> <http://dbpedia.org/resource/Lyrics_Born> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?band ?memberName WHERE {
  VALUES ?lyricsBorn { dbr:Lyrics_Born }
  
  ?band dbo:bandMember ?lyricsBorn .
  ?band dbo:name ?bandName .
  ?lyricsBorn foaf:name ?memberName .
}
```",1,1,2,1,1,2,2,9,0,0,7,0,0.0,0
158,6,train,Give me the party of Théodore Steeg and entity in France.,SELECT ?result WHERE { <http://dbpedia.org/resource/Théodore_Steeg> <http://dbpedia.org/ontology/party> ?result . ?result <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/France> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?party ?roleInFrance WHERE {
  VALUES ?steeg { dbr:Théodore_Steeg }
  
  # Retrieve political party affiliation
  OPTIONAL {
    ?steeg dbo:politicalParty ?party .
  }

  # Find notable roles or entities in France
  OPTIONAL {
    ?steeg dbo:officeHeld ?roleInFrance .
    FILTER(CONTAINS(LCASE(STR(?roleInFrance)), ""france""))
  }
}
```",2,2,3,1,2,3,2,20,0,0,1,0,0.0,0
18,11,train,"Give me the alumnus of the figure known, that is an educational institution, as Saints.","SELECT ?result WHERE { ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/EducationalInstitution>. ?result <http://dbpedia.org/ontology/almaMater> ?v0 . ?v0 <http://dbpedia.org/property/nickname> ""Saints""@en . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?alumnus WHERE {
  VALUES ?university { dbr:University_of_San_Diego }
  ?alumnus dbo:almaMater ?university .
}
```",2,3,3,2,1,2,3,28,0,37,21,0.0,0.0,0
433,18,train,Give me the associated musical artist of Paul Chambers and associated musical artist of Bill Evans and professional in Musician.,"SELECT ?result WHERE { <http://dbpedia.org/resource/Bill_Evans> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . <http://dbpedia.org/resource/Paul_Chambers> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?result <http://dbpedia.org/property/occupation> ""Musician""@en . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>

SELECT DISTINCT ?artist WHERE {
  # Find associated musical artist of Paul Chambers
  { 
    dbpedia:Paul_Chambers dbo:musicalArtist ?artist .
    FILTER NOT EXISTS { ?artist rdf:type dbo:MusicalWork }
  } UNION
  # Find associated musical artist of Bill Evans
  { 
    dbpedia:Bill_Evans dbo:musicalArtist ?artist .
    FILTER NOT EXISTS { ?artist rdf:type dbo:MusicalWork }
  }

  # Ensure the result is a musician
  ?artist rdf:type dbo:Musician .
}
```",3,3,4,1,3,3,3,71,0,0,1,0,0.0,0
417,7,train,"Who is the parent, that is a royalty, of Alexandrine of Mecklenburg-Schwerin?",SELECT ?result WHERE { ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. <http://dbpedia.org/resource/Alexandrine_of_Mecklenburg-Schwerin> <http://dbpedia.org/ontology/parent> ?result . },"```sparql
SELECT ?parent WHERE {
  dbpedia:Alexandrine_of_Mecklenburg-Schwerin dbo:parent ?parent .
  OPTIONAL { ?parent dbo:title ?title . FILTER(CONTAINS(LCASE(?title), ""king"") || CONTAINS(LCASE(?title), ""queen"") || CONTAINS(LCASE(?title), ""prince"") || CONTAINS(LCASE(?title), ""princess"")) }
}
```",1,2,2,1,1,3,3,71,0,0,2,0,0.0,0
326,12,train,"Give me the person decedent at the award, that is a country, of Adelbert Cronkhite and resident of Berkshire.",SELECT ?result WHERE { ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. <http://dbpedia.org/resource/Adelbert_Cronkhite> <http://dbpedia.org/property/awards> ?v0 . ?result <http://dbpedia.org/property/residence> <http://dbpedia.org/resource/Berkshire> . ?result <http://dbpedia.org/ontology/deathPlace> ?v0 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?person ?award ?country WHERE {
  ?award a dbo:Award ;
         dbo:name ?awardName .
  
  FILTER regex(?awardName, ""Country"", ""i"") .

  ?person dbo:award ?award ;
          dbo:deathDate ?deathDate ;
          dbo:residence dbr:Berkshire .

  FILTER (?deathDate < NOW()) .

  ?award dbo:country ?country .
}
```",3,4,4,2,2,3,2,20,0,0,1,0,0.0,0
445,1,train,Give me the death place of Patrick Moore.,SELECT ?result WHERE { <http://dbpedia.org/resource/Patrick_Moore> <http://dbpedia.org/ontology/deathPlace> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?deathPlace WHERE {
  dbr:Patrick_Moore dbo:deathPlace ?deathPlace .
}
```",1,1,2,1,1,3,3,71,2,0,0,1.0,1.0,1.0
192,6,train,"Give me the child of Mary of Hungary, Queen of Naples and spouse of Clemence of Austria.","SELECT ?result WHERE { <http://dbpedia.org/resource/Clemence_of_Austria> <http://dbpedia.org/ontology/spouse> ?result . ?result <http://dbpedia.org/ontology/parent> <http://dbpedia.org/resource/Mary_of_Hungary,_Queen_of_Naples> . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?child WHERE {
  ?mary a dbo:Queen ;
        foaf:name ""Mary of Hungary"" ;
        dbp:spouse ?clemence .
  
  FILTER(CONTAINS(LCASE(?clemence), ""clemence of austria""))
  
  ?mary dbo:child ?child .
}
```",2,2,3,1,2,3,2,20,0,0,1,0,0.0,0
273,4,train,Give me the reference to Università degli Studi di Torino.,"SELECT ?result WHERE { ?result <http://xmlns.com/foaf/0.1/name> ""Università degli Studi di Torino""@en . }","```sparql
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?entity WHERE {
  ?entity rdfs:label ""Università degli Studi di Torino""@it .
}
```",1,1,2,1,1,3,2,20,0,0,1,0,0.0,0
773,24,train,Give me the parent of the successor of Charles the Bald and parent of Charles the Fat.,SELECT ?result WHERE { <http://dbpedia.org/resource/Charles_the_Bald> <http://dbpedia.org/ontology/successor> ?v2 . ?result <http://dbpedia.org/ontology/child> ?v2 . <http://dbpedia.org/resource/Charles_the_Fat> <http://dbpedia.org/ontology/parent> ?result . },"```sparql
SELECT ?successorParent ?fatParent WHERE {
  # Find Charles the Bald's successor
  ?charlesTheBald dbo:spouse ?successor .
  ?successor foaf:name ""Louis II of Italy""@en .
  
  # Get parent of Louis II of Italy (Charles the Bald's successor)
  ?successor dbo:parent ?successorParent .

  # Find Charles the Fat
  ?charlesTheFat foaf:name ""Charles the Fat""@en .

  # Get parent of Charles the Fat
  ?charlesTheFat dbo:parent ?fatParent .
}
```",3,3,4,2,2,3,3,71,0,0,2,0,0.0,0
527,0,train,Give me the actor of The Book Tower.,SELECT ?result WHERE { <http://dbpedia.org/resource/The_Book_Tower> <http://dbpedia.org/property/starring> ?result . },"```sparql
SELECT ?actor WHERE {
  ?work rdfs:label ""The Book Tower""@en .
  ?work dbo:starring ?actor .
  FILTER (lang(?work) = 'en')
}
```",1,1,2,1,1,3,2,20,0,0,7,0,0.0,0
917,5,train,"Who is the spouse, that is a royalty, of Leleiohoku I?",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/spouse> <http://dbpedia.org/resource/Leleiohoku_I> . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?spouseName WHERE {
  ?person a dbo:Person ;
          foaf:name ""Leleiohoku I""@en .
  ?person dbo:spouse ?spouse .
  ?spouse foaf:name ?spouseName .
  OPTIONAL { 
    ?spouse dbo:title ?title .
    FILTER(CONTAINS(LCASE(?title), ""royalty""))
  }
}
```",1,2,2,1,1,3,3,71,0,0,2,0,0.0,0
573,26,train,"Give me the person decedent at the residence, that is a settlement, of the professional, that is American, in Politician.","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/deathPlace> ?v2 . ?v1 <http://dbpedia.org/property/occupation> ""Politician""@en . ?v1 <http://dbpedia.org/ontology/nationality> <http://dbpedia.org/resource/United_States>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. ?v1 <http://dbpedia.org/property/residence> ?v2 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT DISTINCT ?politician ?residence ?decedent WHERE {
  ?politician a dbo:Politician ;
             dbo:nationality dbr:United_States .
  
  ?politician dbo:residencePlace ?residence .
  FILTER (dbo:Settlement ?residence) .

  ?deathEvent dbo:place ?residence ;
              dbo:agent ?decedent .
}
```",3,5,4,3,1,3,3,71,0,0,6537,0,0.0,0
773,1,train,Give me the parent of Carloman of Bavaria.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Carloman_of_Bavaria> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>

SELECT ?parent WHERE {
  ?person rdfs:label ""Carloman of Bavaria""@en .
  ?person dbo:parent ?parent .
}
```",1,1,2,1,1,3,3,71,2,0,0,1.0,1.0,1.0
933,19,train,Give me the reference to Alan Warner and band of the band of Alan Warner (musician).,"SELECT ?result WHERE { ?result <http://xmlns.com/foaf/0.1/name> ""Alan Warner""@en . <http://dbpedia.org/resource/Alan_Warner_(musician)> <http://dbpedia.org/ontology/associatedMusicalArtist> ?v2 . ?v2 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?reference ?band 
WHERE {
  ?person a dbo:Musician ;
          foaf:name ""Alan Warner"" .
  
  OPTIONAL { ?person dbo:wikiPageWikiLink ?reference . }
  OPTIONAL { ?person dbo:band ?band . }

  FILTER (lang(?reference) = 'en')
}
```",3,3,4,2,2,3,3,71,0,0,1,0,0.0,0
192,7,train,"Give me the spouse of the spouse, that is a royalty, of Charles Martel of Anjou.",SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/spouse> <http://dbpedia.org/resource/Charles_Martel_of_Anjou> . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v1 <http://dbpedia.org/ontology/spouse> ?result . },"```sparql
SELECT ?spouseOfSpouse WHERE {
  # Step 1: Find Charles Martel of Anjou
  ?charles a dbo:Person ;
           foaf:name ""Charles Martel of Anjou""@en .
  
  # Step 2: Get his spouse
  ?charles dbo:spouse ?firstSpouse .

  # Step 3: Find the spouse's spouse and check if they are royalty
  ?firstSpouse dbo:spouse ?secondSpouse ;
              a ?class1 .
  
  FILTER EXISTS { ?secondSpouse a dbo:Monarch } # Ensure the second spouse is royalty

  BIND(?secondSpouse AS ?spouseOfSpouse)
}
```",2,3,3,2,1,3,2,20,0,0,1,0,0.0,0
933,20,train,Give me the reference to the birth name of Alan Warner (musician) and band of Mike Elliott (saxophonist).,SELECT ?result WHERE { <http://dbpedia.org/resource/Mike_Elliott_(saxophonist)> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?result <http://xmlns.com/foaf/0.1/name> ?v1 . <http://dbpedia.org/resource/Alan_Warner_(musician)> <http://dbpedia.org/property/birthName> ?v1 . },"```sparql
SELECT ?birthName ?band WHERE {
  # Query for Alan Warner's birth name
  {
    ?person a dbo:Musician ;
            foaf:name ""Alan Warner"" .
    OPTIONAL { ?person foaf:givenName ?birthName . }
  }

  UNION

  # Query for Mike Elliott's band
  {
    ?musician a dbo:Saxophonist ;
              foaf:name ""Mike Elliott"" .
    ?band dbp:bandMemberOf ?musician .
  }
}
```",3,3,4,2,2,3,3,71,0,0,1,0,0.0,0
582,20,train,"Give me the reference to Japan and player in the father, that is an athlete and a soccer manager and a sports manager, of Masami Nagasawa.","SELECT ?result WHERE { ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerManager>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Athlete>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsManager>. ?result <http://xmlns.com/foaf/0.1/name> ""Japan""@en . ?v2 <http://dbpedia.org/ontology/team> ?result . <http://dbpedia.org/resource/Masami_Nagasawa> <http://dbpedia.org/property/father> ?v2 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?father ?occupation ?referenceToJapan WHERE {
  # Find Masami Nagasawa's father
  dbr:Masami_Nagasawa dbo:father ?father .
  
  # Check if the father is an athlete, soccer manager, and sports manager
  ?father dbo:occupation ?occupation .
  FILTER (
    (CONTAINS(LCASE(?occupation), ""athlete"") ||
     CONTAINS(LCASE(?occupation), ""soccer manager"") ||
     CONTAINS(LCASE(?occupation), ""sports manager""))
  )
  
  # Check for any reference to Japan
  OPTIONAL {
    ?father dbo:country ?referenceToJapan .
    FILTER (CONTAINS(LCASE(STR(?referenceToJapan)), ""japan""))
  }
}
```",3,6,4,2,2,3,3,71,0,0,1,0,0.0,0
417,4,train,"Who is the parent, that is a royalty, of Count Ingolf of Rosenborg?",SELECT ?result WHERE { ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?result <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Count_Ingolf_of_Rosenborg> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?parent ?title WHERE {
  ?countingIngolf dbo:parent ?parent .
  FILTER (CONTAINS(LCASE(?countingIngolf), ""count ingolf of rosenborg""))
  
  OPTIONAL { ?parent dbo:title ?title . }
  OPTIONAL { ?parent dbp:royalTitle ?title . }

  FILTER EXISTS {
    ?parent dbo:title ?t .
    FILTER(CONTAINS(LCASE(STR(?t)), ""king"") || CONTAINS(LCASE(STR(?t)), ""queen"") ||
           CONTAINS(LCASE(STR(?t)), ""prince"") || CONTAINS(LCASE(STR(?t)), ""princess""))
  }
}
```",1,2,2,1,1,3,3,71,0,0,2,0,0.0,0
212,5,train,"Give me the birthplace of the professional, that is a musical artist and an artist, in Singer, rapper, CEO, Facilities and Project Manager.","SELECT ?result WHERE { ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?v0 <http://dbpedia.org/property/occupation> ""Singer, rapper, CEO, Facilities and Project Manager""@en . ?v0 <http://dbpedia.org/ontology/birthPlace> ?result . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT ?birthPlace WHERE {
  ?person foaf:name ""Jay-Z""@en .
  ?person dbo:birthPlace ?birthPlace .
}
```",2,4,3,2,1,2,2,9,0,1,1,0.0,0.0,0
445,36,train,Give me the entity in the award of the commander in Battle of Saint-Mihiel and entity in England.,SELECT ?result WHERE { ?v0 <http://dbpedia.org/property/awards> ?v1 . ?result <http://dbpedia.org/ontology/location> <http://dbpedia.org/resource/England> . ?result <http://dbpedia.org/ontology/country> ?v1 . <http://dbpedia.org/resource/Battle_of_Saint-Mihiel> <http://dbpedia.org/ontology/commander> ?v0 . },"```sparql
SELECT DISTINCT ?awardee ?entityInEngland WHERE {
  # Query for the awardee with the title ""Commander"" in the Battle of Saint-Mihiel
  ?battle dbpedia-owl:wikiPageRedirects dbc:battle_of_saint-mihiel .
  ?award dbpedia-owl:recipient ?awardee ;
         rdfs:label ""Commander""@en .
  ?battle dbpedia-owl:hasPart ?award .

  # Query for an entity located in England
  ?entityInEngland dbo:location dbc:england .
}
```",4,4,5,3,2,3,3,71,0,0,102,0,0.0,0
645,2,train,Give me the leader of Ministry of the Army (Spain).,SELECT ?result WHERE { <http://dbpedia.org/resource/Ministry_of_the_Army_(Spain)> <http://dbpedia.org/ontology/leader> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?minister WHERE {
  ?ministry a dbo:GovernmentMinistry ;
            dbo:country dbr:Spain ;
            rdfs:label ""Ministry of Defence (Spain)""@en .
  
  ?minister dbo:ministerOf ?ministry ;
            foaf:name ?name .

  FILTER(LANG(?name) = 'en')
}
```",1,1,2,1,1,3,3,71,0,0,1,0,0.0,0
83,3,train,"Who is the person born, that is an athlete, on 1991-11-19?","SELECT ?result WHERE { ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Athlete>. ?result <http://dbpedia.org/ontology/birthDate> ""1991-11-19""^^<http://www.w3.org/2001/XMLSchema#date> . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?person ?name WHERE {
  ?person a dbo:Person .
  ?person dbo:birthDate ?date .
  FILTER (YEAR(?date) = 1991 && MONTH(?date) = 11 && DAY(?date) = 19)
  OPTIONAL { ?person dbo:sport ?sport . }
  OPTIONAL { ?person dbo:occupation dbr:Athlete . }
  ?person foaf:name ?name .
}
ORDER BY ?name
LIMIT 10
```",1,2,2,1,1,2,2,9,5,12,25,0.29411764705882354,0.16666666666666666,0.21276595744680848
98,1,train,Give me the child of Emperor Go-Shirakawa.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/parent> <http://dbpedia.org/resource/Emperor_Go-Shirakawa> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?child WHERE {
  ?person dbo:spouse ?spouse .
  FILTER (str(?person) = ""Emperor_Go-Shirakawa"")
  ?spouse dbo:child ?child .
}
```",1,1,2,1,1,2,2,9,0,0,3,0,0.0,0
47,16,train,"Give me the awardee of the award, that is an award, of Mantu Ghosh.",SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Award>. <http://dbpedia.org/resource/Mantu_Ghosh> <http://dbpedia.org/property/awards> ?v1 . ?result <http://dbpedia.org/property/awards> ?v1 . },"```sparql
SELECT ?award ?otherRecipient WHERE {
  ?person foaf:name ""Mantu Ghosh"" .
  ?person dbo:awardsReceived ?award .
  ?award dbo:recipient ?otherRecipient .
  FILTER(?otherRecipient != ?person)
}
```",2,3,3,2,1,3,3,71,0,0,11,0,0.0,0
5,0,train,Give me the birthplace of Gerald Regan.,SELECT ?result WHERE { <http://dbpedia.org/resource/Gerald_Regan> <http://dbpedia.org/ontology/birthPlace> ?result . },"```sparql
SELECT ?birthPlace WHERE {
  ?person foaf:name ""Gerald Regan""@en .
  ?person dbo:birthPlace ?birthPlace .
}
```",1,1,2,1,1,3,2,20,1,0,0,1.0,1.0,1.0
445,22,train,Give me the entity in the award of George H. Cameron and entity in England.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/location> <http://dbpedia.org/resource/England> . ?result <http://dbpedia.org/ontology/country> ?v1 . <http://dbpedia.org/resource/George_H._Cameron> <http://dbpedia.org/property/awards> ?v1 . },"```sparql
# Query to find the award associated with George H. Cameron
SELECT ?award WHERE {
  ?recipient foaf:name ""George H. Cameron""@en .
  ?recipient dbo:receivedAward ?award .
}

UNION

# Query to find an entity located in England
SELECT ?entity WHERE {
  ?entity dbp:country ""England"" .
}
```",3,3,4,2,2,3,3,71,0,0,102,0,0.0,0
445,37,train,Give me the entity in United Kingdom and death place of the awardee of the establishment of 1820-03-10.,"SELECT ?result WHERE { ?v3 <http://dbpedia.org/ontology/deathPlace> ?result . ?v3 <http://dbpedia.org/property/awards> ?v0 . ?result <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/United_Kingdom> . ?v0 <http://dbpedia.org/ontology/foundingDate> ""1820-03-10""^^<http://www.w3.org/2001/XMLSchema#date> . }","```sparql
SELECT ?award ?awardee ?deathPlace ?ukEntity WHERE {
  # Step 1: Identify the establishment with creation date March 10, 1820
  ?establishment dbp:dateEstablished ""1820-03-10""^^xsd:date .
  
  # Step 2: Find awards given by this establishment
  ?award dbo:awardedBy ?establishment .

  # Step 3: Identify the awardee of the award
  ?award dbo:recipient ?awardee .

  # Step 4: Get the death place of the awardee
  OPTIONAL { ?awardee dbo:deathPlace ?deathPlace . }

  # Step 5: Find any related entity in the United Kingdom
  OPTIONAL {
    ?ukEntity dbo:country dbr:United_Kingdom ;
              dbo:relatedTo ?awardee .
  }
}
```",4,4,5,3,2,3,3,71,0,0,2,0,0.0,0
124,2,train,Give me the military force of Battle of Atbara.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/battle> <http://dbpedia.org/resource/Battle_of_Atbara> . },"```sparql
PREFIX dbp: <http://dbpedia.org/property/>
PREFIX dbo: <http://dbpedia.org/ontology/>

SELECT ?force WHERE {
  ?battle a dbo:MilitaryEngagement ;
          rdfs:label ""Battle of Atbara""@en .
  
  OPTIONAL { ?battle dbp:commander ?commander . }
  OPTIONAL { ?battle dbp:partof ?conflict . }
  OPTIONAL { ?battle dbo:hasParticipant ?force . }

  FILTER (lang(?battle) = 'en')
}
```",1,1,2,1,1,3,3,71,0,0,7,0,0.0,0
978,2,train,Give me the award of Michel Claparède.,SELECT ?result WHERE { <http://dbpedia.org/resource/Michel_Claparède> <http://dbpedia.org/property/awards> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?award WHERE {
  VALUES ?person { dbr:Michel_Claparède }
  ?person dbo:award ?award .
}
```",1,1,2,1,1,3,2,20,3,0,1,1.0,0.75,0.8571428571428571
102,4,train,"Give me the resident, that is an athlete, of Dewsbury.",SELECT ?result WHERE { ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Athlete>. ?result <http://dbpedia.org/ontology/residence> <http://dbpedia.org/resource/Dewsbury> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?athlete WHERE {
  ?athlete a dbo:Athlete .
  ?athlete dbo:residence dbp:Dewsbury .
}
```",1,2,2,1,1,3,2,20,0,0,2,0,0.0,0
273,5,train,Give me the alumnus of University of Turin.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/almaMater> <http://dbpedia.org/resource/University_of_Turin> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?alumnus WHERE {
  ?alumnus dbo:almaMater dbr:University_of_Turin .
}
```",1,1,2,1,1,3,2,20,141,0,0,1.0,1.0,1.0
445,39,train,Give me the death place of Patrick Moore and entity in the award of the commander in Battle of Saint-Mihiel.,SELECT ?result WHERE { <http://dbpedia.org/resource/Battle_of_Saint-Mihiel> <http://dbpedia.org/ontology/commander> ?v0 . ?v0 <http://dbpedia.org/property/awards> ?v1 . ?result <http://dbpedia.org/ontology/country> ?v1 . <http://dbpedia.org/resource/Patrick_Moore> <http://dbpedia.org/ontology/deathPlace> ?result . },"```sparql
# Query for Patrick Moore's death place
SELECT ?deathPlace WHERE {
  dbpedia:Patrick_Moore dbo:deathPlace ?deathPlace .
}

# Query for entities related to the Commander award in the Battle of Saint-Mihiel
SELECT DISTINCT ?person ?award WHERE {
  ?person dbo:militaryRank dbr:Commander ;
          dbo:participatedIn dbr:Battle_of_Saint-Mihiel ;
          dbo:award ?award .
}
```",4,4,5,3,2,3,3,71,0,0,2,0,0.0,0
965,5,train,"Give me the person born, that is a politician, on 1854-05-24.","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/birthDate> ""1854-05-24""^^<http://www.w3.org/2001/XMLSchema#date> . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?person WHERE {
  ?person a dbo:Person .
  ?person dbo:birthDate ?date .
  FILTER (YEAR(?date) = 1854 && MONTH(?date) = 5 && DAY(?date) = 24)
  ?person dbo:occupation dbr:Politician .
}
```",1,2,2,1,1,3,3,71,0,0,2,0,0.0,0
715,7,train,Who is the reference to Carlos Franco Iribarnegaray?,"SELECT ?result WHERE { ?result <http://xmlns.com/foaf/0.1/name> ""Carlos Franco Iribarnegaray""@en . }","```sparql
PREFIX foaf: <http://xmlns.com/foaf/0.1/>
PREFIX dbo: <http://dbpedia.org/ontology/>

SELECT ?person ?name ?occupation ?birthDate WHERE {
  ?person a dbo:Person .
  ?person foaf:name ""Carlos Franco Iribarnegaray"" .
  OPTIONAL { ?person foaf:name ?name . }
  OPTIONAL { ?person dbo:occupation ?occupation . }
  OPTIONAL { ?person dbo:birthday ?birthDate . }
}
```",1,1,2,1,1,3,3,71,0,0,1,0,0.0,0
582,28,train,Give me the player in Kazuaki Nagasawa and reference to the residence of Hirotaka Sugawara and figure known as --10-19.,"SELECT ?result WHERE { <http://dbpedia.org/resource/Hirotaka_Sugawara> <http://dbpedia.org/property/residence> ?v1 . ?result <http://dbpedia.org/property/nickname> ""--10-19""^^<http://www.w3.org/2001/XMLSchema#gMonthDay> . ?result <http://xmlns.com/foaf/0.1/name> ?v1 . <http://dbpedia.org/resource/Kazuaki_Nagasawa> <http://dbpedia.org/ontology/team> ?result . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?playerTeam WHERE {
  ?nagasawa a dbo:Person ;
            foaf:name ""Kazuaki Nagasawa""@en .
  OPTIONAL { ?nagasawa dbo:sportsTeam ?playerTeam . }
}

UNION

SELECT ?residence WHERE {
  ?sugawara a dbo:Person ;
             foaf:name ""Hirotaka Sugawara""@en .
  OPTIONAL { ?sugawara dbo:residenceLocation ?residence . }
}
```",4,4,5,2,3,3,3,71,0,0,1,0,0.0,0
987,37,train,"Give me the entity in Montenegro and birth place of the actor of the show, that is a film, with Emir Hadžihafizbegović.",SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Film>. ?v1 <http://dbpedia.org/ontology/starring> <http://dbpedia.org/resource/Emir_Hadžihafizbegović> . ?result <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Montenegro> . ?v2 <http://dbpedia.org/ontology/birthPlace> ?result . ?v1 <http://dbpedia.org/property/starring> ?v2 . },"```sparql
# Step 1: Find a film featuring Emir Hadžihafizbegović
SELECT ?film WHERE {
  ?film dbo:starring <http://dbpedia.org/resource/Emir_Hadžihafizbegović> .
}

# Step 2: Identify the TV show based on one of these films (Grbavica)
SELECT ?tvShow WHERE {
  ?tvShow dbo:basedOnFilm <http://dbpedia.org/resource/Grbavica_(film)> .
}

# Step 3: Find the main actor from that TV show
SELECT DISTINCT ?actor WHERE {
  ?tvShow dbo:starring ?actor .
  FILTER NOT EXISTS { ?tvShow dbo:starring <http://dbpedia.org/resource/Emir_Hadžihafizbegović> }
}

# Step 4: Retrieve information about the actor's birthplace and connection to Montenegro
SELECT DISTINCT ?actor ?birthPlace ?montenegroEntity WHERE {
  VALUES ?actor { <INSERT_ACTOR_URI_HERE> } # Replace with actual URI of Mirjana Karanović after step 3

  OPTIONAL { ?actor dbo:birthPlace ?birthPlace . }
  OPTIONAL { ?actor foaf:nationality <http://dbpedia.org/resource/Montenegro> . }
  OPTIONAL {
    ?montenegroEntity dbo:location <http://dbpedia.org/resource/Montenegro> .
    ?actor dbo:almaMater ?montenegroEntity .
  }
}
```

Note: Replace `<INSERT_ACTOR_URI_HERE>` with the actual URI of Mirjana Karanović obtained from step 3.",4,5,5,3,2,3,3,71,0,0,2,0,0.0,0
47,36,train,"Give me the office of the awardee of the entity, that is an award, in India and office of Suvendu Adhikari.",SELECT ?result WHERE { ?v1 <http://dbpedia.org/property/awards> ?v0 . ?v0 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/India> . ?v1 <http://dbpedia.org/property/office> ?result . <http://dbpedia.org/resource/Suvendu_Adhikari> <http://dbpedia.org/property/office> ?result . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Award>. },"```sparql
SELECT ?award ?awardee ?office WHERE {
  # Part 1: Find an award given in India and its awardee
  ?award dbo:country dbr:India ;
         dbo:recipient ?awardee .
  
  OPTIONAL { ?awardee foaf:currentOffice ?office . }
  
  # Part 2: Find Suvendu Adhikari's office
  OPTIONAL {
    ?person foaf:name ""Suvendu Adhikari""@en ;
            foaf:currentOffice ?office .
    FILTER(?person = <http://dbpedia.org/resource/Suvendu_Adhikari>)
  }
}
```",4,5,5,3,2,3,3,71,0,0,3,0,0.0,0
955,9,train,"Give me the writer of the work, that is a work and an album and a musical work, of Matt Freeman.",SELECT ?result WHERE { ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Album>. ?v0 <http://dbpedia.org/property/writer> <http://dbpedia.org/resource/Matt_Freeman> . ?v0 <http://dbpedia.org/property/writer> ?result . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalWork>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?work ?writer WHERE {
  # Find the resource for Matt Freeman
  VALUES ?matt_freeman { dbr:Matt_Freeman_(musician) }
  
  # Identify works that are both albums and musical works associated with him
  ?work dbo:artist ?matt_freeman .
  ?work a ?type .
  FILTER (?type IN (dbo:Album, dbo:MusicalWork))
  
  # Retrieve the writer of these works
  OPTIONAL { ?work dbo:composer ?writer }
}
```",2,5,3,2,1,3,2,20,0,0,31,0,0.0,0
495,2,train,Give me the parent of Princess Catherine of Württemberg.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Princess_Catherine_of_Württemberg> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?parentName WHERE {
  ?person dbo:familyName ""Württemberg""@en .
  ?person foaf:name ""Catherine of Württemberg""@en .
  ?person dbo:parent ?parent .
  ?parent foaf:name ?parentName .
}
```",1,1,2,1,1,3,2,20,0,0,2,0,0.0,0
274,11,train,"Give me the associated musical artist of the actor, that is a musical artist, of Imagine the Sound.",SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. <http://dbpedia.org/resource/Imagine_the_Sound> <http://dbpedia.org/property/starring> ?v1 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?musicalArtist WHERE {
  # Find the actor associated with ""Imagine the Sound""
  ?actor dbo:actorIn dbr:Imagine_the_Sound .
  
  # Ensure this actor is also a musical artist
  ?actor dbo:musicalArtist .

  # Retrieve any associated musical artists of this actor
  ?actor dbo:associatedMusicalArtist ?musicalArtist .
}
```",2,3,3,2,1,2,3,28,0,0,36,0,0.0,0
839,24,train,Give me the band of Matthias Röhr and band of the member of Böhse Onkelz.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/bandMember> <http://dbpedia.org/resource/Matthias_Röhr> . ?result <http://dbpedia.org/ontology/bandMember> ?v2 . <http://dbpedia.org/resource/Böhse_Onkelz> <http://dbpedia.org/ontology/bandMember> ?v2 . },"```sparql
# Query for Matthias Röhr's band
SELECT ?band WHERE {
  ?person foaf:name ""Matthias Röhr""@en .
  ?person dbo:memberOf ?band .
}

# Queries for each member of Böhse Onkelz and their bands
SELECT ?member ?otherBand WHERE {
  VALUES ?onkelzMember { 
    dbpedia:Kevin_Russell 
    dbpedia:Peter_Schorowsky 
    dbpedia:Stephan_Weidner 
  }
  
  ?onkelzMember dbo:memberOf dbpedia:Böhse_Onkelz .
  ?onkelzMember dbo:memberOf ?otherBand .
}
```",3,3,4,2,2,3,3,71,0,0,1,0,0.0,0
216,11,train,Give me the player in the coach of Croatia national under-21 football team.,SELECT ?result WHERE { <http://dbpedia.org/resource/Croatia_national_under-21_football_team> <http://dbpedia.org/ontology/coach> ?v0 . ?v0 <http://dbpedia.org/ontology/team> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?coach WHERE {
  ?team rdfs:label ""Croatia national under-21 football team""@en .
  ?team dbo:coach ?coach .
}
```",2,2,3,2,1,3,3,71,0,1,6,0.0,0.0,0
892,23,train,Give me the entity in the profession of the true self of Enrico Crolla.,"SELECT ?result WHERE { ?v1 <http://xmlns.com/foaf/0.1/givenName> ""Enrico Crolla""@en . ?result <http://dbpedia.org/ontology/country> ?v2 . ?v1 <http://dbpedia.org/property/occupation> ?v2 . }","```sparql
SELECT ?entity WHERE {
  wd:Q12345 rdfs:label ""Enrico Crolla""@en .
  ?entity wdt:P106 wd:Q134428 . # P106 is the property for occupation
  ?entity wdt:P735 wd:Q12345 .   # P735 is the property for stage name
}
```

Note: In this query, `wd:Q12345` should be replaced with the actual DBpedia resource identifier for Enrico Crolla. Similarly, `wd:Q134428` represents the occupation ""operatic tenor"" in DBpedia.",3,3,4,3,1,3,3,71,0,0,13092,0,0.0,0
456,39,train,"Give me the band of the band, that is a musical artist, of the band of Alan Doyle and professional in .","SELECT ?result WHERE { <http://dbpedia.org/resource/Alan_Doyle> <http://dbpedia.org/ontology/associatedMusicalArtist> ?v0 . ?result <http://dbpedia.org/property/occupation> """"@en . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?v0 <http://dbpedia.org/ontology/associatedMusicalArtist> ?v1 . ?v1 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . }","```sparql
SELECT ?band WHERE {
  wd:Q123456 wdt:P106 wd:Q33999; # Alan Doyle's profession as a musician (wdt:P106)
  wdt:P46 ?band.               # Member of band (wdt:P46)
}
```

Note: `wd:Q123456` should be replaced with the actual DBpedia identifier for Alan Doyle, and `wd:Q33999` is the identifier for the profession ""musician.""",4,5,5,3,2,3,3,71,0,0,1,0,0.0,0
865,4,train,"Give me the residence, that is a country, of Ram Jaipal Singh Yadav.",SELECT ?result WHERE { <http://dbpedia.org/resource/Ram_Jaipal_Singh_Yadav> <http://dbpedia.org/property/residence> ?result . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?residence WHERE {
  dbr:Ram_Jaipal_Singh_Yadav dbo:residence ?residence .
  FILTER (isLiteral(?residence) && datatype(?residence) = xsd:string)
  OPTIONAL { ?residence a dbo:Country . }
}
```",1,2,2,1,1,3,3,71,0,0,1,0,0.0,0
456,16,train,"Give me the alter ego of the reference, that is a fictional character, to Lamont Cranston (radio, film and television).","SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/FictionalCharacter>. ?v1 <http://xmlns.com/foaf/0.1/name> ""Lamont Cranston (radio, film and television)""@en . ?v1 <http://dbpedia.org/property/alterEgo> ?result . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?characterName WHERE {
  dbr:Lamont_Cranston dbo:fictionalAlterEgo ?alterEgo .
  ?alterEgo rdfs:label ?characterName .
  FILTER (lang(?characterName) = 'en')
}
```",2,3,3,2,1,3,3,71,0,0,3,0,0.0,0
645,17,train,"Give me the office, that is a government agency and an organisation, of the native of Restoration (Spain).",SELECT ?result WHERE { ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/GovernmentAgency>. ?v1 <http://dbpedia.org/property/office> ?result . ?v1 <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Restoration_(Spain)> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?office WHERE {
  ?person dbo:nationality dbr:Spain .
  ?person dbo:birthPlace dbr:Restoration_(Spain) .
  ?person dbo:occupation ?office .
  ?office a dbo:GovernmentAgency ;
         a dbo:Organization .
}
```",2,4,3,2,1,3,3,71,0,0,15,0,0.0,0
129,5,train,Give me the person born as Tahj Malik Chandler.,"SELECT ?result WHERE { ?result <http://dbpedia.org/property/birthName> ""Tahj Malik Chandler""@en . }","```sparql
SELECT ?person ?birthName WHERE {
  ?person dbo:birthName ""Tahj Malik Chandler"" .
  OPTIONAL { ?person foaf:name ?name . }
}
```",1,1,2,1,1,2,3,28,0,0,1,0,0.0,0
274,16,train,"Give me the band member of Dizzy Gillespie and associated musical artist of the actor, that is a musical artist, of Imagine the Sound.",SELECT ?result WHERE { ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?v2 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . <http://dbpedia.org/resource/Imagine_the_Sound> <http://dbpedia.org/property/starring> ?v2 . ?result <http://dbpedia.org/ontology/associatedMusicalArtist> <http://dbpedia.org/resource/Dizzy_Gillespie> . },"```sparql
# Step 1: Find band members of Dizzy Gillespie
SELECT ?musician WHERE {
    ?band dbo:member ?musician .
    ?band dbo:performer ?gillespie .
    ?gillespie foaf:name ""Dizzy Gillespie"" .
}

UNION

# Step 2: Find actors from ""Imagine the Sound""
SELECT DISTINCT ?actor WHERE {
    ?film dbp:title ""Imagine the Sound""@en .
    ?film dbo:starring ?actor .
}

# Step 3: Find musical artists associated with these actors
SELECT DISTINCT ?musician WHERE {
    ?actor dbo:musicalArtist ?musician .
    ?actor ?p ?o .
    FILTER(?p IN (dbo:musicalArtist, dbo:associatedBandMember))
}

# Combine results to find common musicians
SELECT DISTINCT ?commonMusician WHERE {
    VALUES (?gillespieMusician) { 
        # Placeholder for musicians found in Step 1
    }
    VALUES (?actorMusician) { 
        # Placeholder for musicians found in Step 2
    }
    FILTER(?gillespieMusician = ?actorMusician)
}
```

Note: The placeholders in the `VALUES` clause need to be replaced with actual results from Steps 1 and 2, which would typically require running those queries separately and then combining their results.",3,4,4,2,2,2,3,28,0,0,4,0,0.0,0
791,37,train,"Give me the father of Emperor Go-Toba and predecessor of the child of the child, that is an office holder and a royalty, of Emperor Go-Shirakawa.",SELECT ?result WHERE { <http://dbpedia.org/resource/Emperor_Go-Toba> <http://dbpedia.org/property/father> ?result . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v0 <http://dbpedia.org/ontology/parent> <http://dbpedia.org/resource/Emperor_Go-Shirakawa> . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?result <http://dbpedia.org/ontology/successor> ?v3 . ?v3 <http://dbpedia.org/property/father> ?v0 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?father ?predecessor WHERE {
  # Emperor Go-Toba's father
  dbr:Emperor_Go-Toba dbo:father ?father .
  
  # Emperor Go-Shirakawa's child and grandchild
  dbr:Emperor_Go-Shirakawa dbo:child ?child .
  ?child dbo:child ?grandchild .
  
  # Ensure the grandchild is an office holder and royalty
  ?grandchild a dbo:Monarch ;
             dbo:officeHolder ?office .

  # Find the predecessor of this grandchild
  ?predecessor dbo:succeededBy ?grandchild .

  # Check if the father of Go-Toba is the predecessor
  FILTER(?father = ?predecessor)
}
```",4,6,5,3,2,3,3,71,0,0,1,0,0.0,0
47,25,train,Give me the office of the awardee of Padma Vibhushan and office of Bidesh Ranjan Bose.,SELECT ?result WHERE { <http://dbpedia.org/resource/Bidesh_Ranjan_Bose> <http://dbpedia.org/property/office> ?result . ?v1 <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/Padma_Vibhushan> . ?v1 <http://dbpedia.org/property/office> ?result . },"```sparql
# Query to find offices held by awardees of the Padma Vibhushan award
SELECT DISTINCT ?person ?office WHERE {
  ?person dbo:award dbpedia:Padma_Vibhushan .
  OPTIONAL { ?person dbo:office ?office . }
}

# Query to find the office held by Bidesh Ranjan Bose
SELECT ?office WHERE {
  dbpedia:Bidesh_Ranjan_Bose dbo:office ?office .
}
```",3,3,4,2,2,3,3,71,0,0,1,0,0.0,0
888,11,train,"Give me the commander in the force, that is a societal event and an event, of Serhiy Kotenko and awardee of Hero of Ukraine.","SELECT ?result WHERE { ?v2 <http://dbpedia.org/ontology/commander> ?result . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?result <http://dbpedia.org/property/awards> ""Hero of Ukraine""@en . ?v2 <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Serhiy_Kotenko> . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?commander WHERE {
  # Find Serhiy Kotenko
  ?serhiyKotenko a dbo:Person ;
                 foaf:name ""Serhiy Kotenko""@en .

  # Identify commanders associated with him
  ?event dbo:agent ?serhiyKotenko .
  ?commander dbo:commanderOf ?event .

  # Ensure the commander is awarded Hero of Ukraine
  ?commander dbo:honorificTitle dbr:Hero_of_Ukraine .

  # Check for societal event and event involving Serhiy Kotenko
  ?societalEvent a dbo:Society ;
                 dbo:agent ?commander .
  ?event2 dbo:agent ?serhiyKotenko ;
          dbo:agent ?commander .
}
```",3,5,4,2,2,3,2,20,0,0,1,0,0.0,0
573,32,train,"Give me the person decedent at the residence, that is a settlement, of William J. Phelan and person decedent at the administration, that is a region, of Charlie Baker.","SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Region>. ?result <http://dbpedia.org/ontology/deathPlace> ?v3 . <http://dbpedia.org/resource/William_J._Phelan> <http://dbpedia.org/property/residence> ?v3 . ?result <http://dbpedia.org/ontology/deathPlace> ?v1 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. ?v1 <http://dbpedia.org/property/governor> ""Charlie Baker""@en . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?personDecedentPhelan ?personDecedentBaker WHERE {
  # Find the residence of William J. Phelan that is a settlement
  ?residence dbo:resident dbr:William_J._Phelan .
  ?residence rdf:type dbo:Settlement .

  # Find person decedent at this residence
  ?personDecedentPhelan dbo:deceasedAt ?residence .

  # Find the administration of Charlie Baker that is a region
  ?administration dbo:administrator dbr:Charlie_Baker .
  ?administration rdf:type dbo:Region .

  # Find person decedent at this administration
  ?personDecedentBaker dbo:deceasedAt ?administration .
}
```",4,6,5,2,2,3,3,71,0,0,4,0,0.0,0
645,20,train,"Give me the commander in Battle of Jarama and military force of the force, that is an event and a military conflict and a societal event, of Francisco Largo Caballero.",SELECT ?result WHERE { <http://dbpedia.org/resource/Battle_of_Jarama> <http://dbpedia.org/ontology/commander> ?result . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?v2 <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Francisco_Largo_Caballero> . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?result <http://dbpedia.org/ontology/battle> ?v2 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?commander ?militaryForce WHERE {
  # Find the Battle of Jarama and its commander
  dbr:Battle_of_Jarama a dbo:MilitaryConflict ;
                       dbo:commander ?commander .

  # Ensure the event is classified as an event, military conflict, and societal event
  dbr:Battle_of_Jarama a dbo:Event ;
                       a dbo:MilitaryConflict ;
                       a dbo:SocietalEvent .

  # Find the military force associated with Francisco Largo Caballero
  ?militaryForce dbo:commander dbr:Francisco_Largo_Caballero .
}
```",3,6,4,2,2,3,3,71,6,5,0,0.5454545454545454,1.0,0.7058823529411764
773,4,train,Give me the father of Charles the Fat.,SELECT ?result WHERE { <http://dbpedia.org/resource/Charles_the_Fat> <http://dbpedia.org/property/father> ?result . },"```sparql
SELECT ?father WHERE {
  ?charles dbo:givenName ""Charles"" .
  ?charles dbo:familyName ""the Fat""@en .
  ?charles dbo:father ?father .
}
```",1,1,2,1,1,3,3,71,0,0,1,0,0.0,0
98,0,train,Give me the region of Philippine Standard Time.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/timeZone> <http://dbpedia.org/resource/Philippine_Standard_Time> . },"```sparql
SELECT ?region WHERE {
  ?timeZone dcterms:isPartOf ?country .
  ?country rdfs:label ""Philippines""@en .
  ?timeZone rdfs:label ?label .
  FILTER(CONTAINS(LCASE(?label), ""philippine standard time""))
}
```",1,1,2,1,1,2,3,28,0,0,1874,0,0.0,0
865,30,train,Give me the father of AK Abdul Momen and native of British Raj and father of the child of Abu Ahmad Abdul Hafiz.,SELECT ?result WHERE { ?v1 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Abu_Ahmad_Abdul_Hafiz> . <http://dbpedia.org/resource/AK_Abdul_Momen> <http://dbpedia.org/property/father> ?result . ?v1 <http://dbpedia.org/property/father> ?result . ?result <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/British_Raj> . },"```sparql
# Step 1: Get the father of AK Abdul Momen
SELECT ?father WHERE {
    wd:Q1234567 foaf:parent ?father .
}

# Step 2: Get Abu Ahmad Abdul Hafiz's child and then find that child's father
SELECT DISTINCT ?childFather WHERE {
    ?child dbo:parent wd:Q2345678 . # Assuming Q2345678 is the DBpedia ID for Abu Ahmad Abdul Hafiz
    ?child foaf:parent ?childFather .
}

# Step 3: Find the common individual who is both fathers and a native of British Raj
SELECT DISTINCT ?commonFather WHERE {
    { wd:Q1234567 foaf:parent ?commonFather . } # Father of AK Abdul Momen
    UNION
    { ?childFather foaf:parent ?commonFather . } # Father of Abu Ahmad Abdul Hafiz's child
    FILTER EXISTS { ?commonFather dbo:nativeCountry dbr:British_Raj }
}
```

Note: Replace `wd:Q1234567` with the actual DBpedia ID for AK Abdul Momen and `wd:Q2345678` with the actual DBpedia ID for Abu Ahmad Abdul Hafiz. The query assumes these IDs are known or can be found through a preliminary search.",4,4,5,2,3,3,3,71,0,0,1,0,0.0,0
102,1,train,Give me the native of Dewsbury.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Dewsbury> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?person ?name WHERE {
  {
    ?person dbo:birthPlace dbr:Dewsbury .
  } UNION {
    ?person dbo:hometown dbr:Dewsbury .
  }
  OPTIONAL { ?person foaf:name ?name . FILTER(lang(?name) = 'en') }
}
```",1,1,2,1,1,3,2,20,100,141,0,0.4149377593360996,1.0,0.5865102639296188
874,4,train,"Give me the band, that is an organisation, of Mark Read (singer).",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/bandMember> <http://dbpedia.org/resource/Mark_Read_(singer)> . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?bandName WHERE {
  ?band a dbo:MusicalGroup .
  ?band dbo:member dbr:Mark_Read_(singer) .
  ?band rdfs:label ?bandName .
  FILTER (lang(?bandName) = 'en')
}
```",1,2,2,1,1,3,2,20,0,0,2,0,0.0,0
445,23,train,"Give me the entity in the residence, that is a country, of the resident, that is an athlete, of Great Britain.",SELECT ?result WHERE { ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Athlete>. ?v2 <http://dbpedia.org/property/residence> <http://dbpedia.org/resource/Great_Britain> . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. ?result <http://dbpedia.org/ontology/location> ?v0 . ?v2 <http://dbpedia.org/property/residence> ?v0 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?athlete ?residenceCountry WHERE {
  ?athlete dbo:nationality dbr:United_Kingdom .
  ?athlete dbo:residence ?residence .
  ?residence a dbo:Country .
  BIND(?residence AS ?residenceCountry)
}
```",3,5,4,3,1,3,3,71,9,113,3561,0.07377049180327869,0.0025210084033613447,0.004875406283856988
826,0,train,Give me the spouse of Anna Magdalena Appel.,SELECT ?result WHERE { <http://dbpedia.org/resource/Anna_Magdalena_Appel> <http://dbpedia.org/ontology/spouse> ?result . },"```sparql
SELECT ?spouse WHERE {
  ?person foaf:name ""Anna Magdalena Bach""@en .
  ?person dbo:spouse ?spouse .
}
```",1,1,2,1,1,3,3,71,0,1,1,0.0,0.0,0
382,6,train,Give me the landmark at elevation of 100 and birthplace of Björn Joppe.,"SELECT ?result WHERE { <http://dbpedia.org/resource/Björn_Joppe> <http://dbpedia.org/ontology/birthPlace> ?result . ?result <http://dbpedia.org/ontology/elevation> ""100""^^<http://www.w3.org/2001/XMLSchema#integer> . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?landmark ?birthPlace WHERE {
  # Find landmarks at an elevation of 100 meters
  ?landmark a dbo:Lighthouse ;
            dbo:elevation ""100""^^xsd:decimal .
  
  # Find Björn Joppe's birthplace
  dbr:Björn_Joppe dbo:birthPlace ?birthPlace .

  # Check if the landmark is also the birthplace of Björn Joppe
  FILTER (?landmark = ?birthPlace)
}
```",2,2,3,1,2,3,2,20,0,0,1,0,0.0,0
507,27,train,Give me the professional in the profession of the person born on 1966-02-18.,"SELECT ?result WHERE { ?result <http://dbpedia.org/property/occupation> ?v2 . ?v1 <http://dbpedia.org/ontology/birthDate> ""1966-02-18""^^<http://www.w3.org/2001/XMLSchema#date> . ?v1 <http://dbpedia.org/property/occupation> ?v2 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT ?person ?profession WHERE {
  ?person dbo:birthDate ""1966-02-18""^^xsd:date .
  OPTIONAL { ?person foaf:profession ?profession . }
}
```",3,3,4,3,1,3,3,71,6,15,35597,0.2857142857142857,0.00016852512428727916,0.00033685156074556477
933,34,train,"Give me the band of the band of the band, that is an artist and a musical artist, of The Ramong Sound and band of The Ramong Sound.",SELECT ?result WHERE { ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. <http://dbpedia.org/resource/The_Ramong_Sound> <http://dbpedia.org/ontology/associatedMusicalArtist> ?v3 . ?v1 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v3 <http://dbpedia.org/ontology/associatedMusicalArtist> ?v1 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. <http://dbpedia.org/resource/The_Ramong_Sound> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . },"```sparql
SELECT ?band WHERE {
  wd:Q1523 wdt:P106 wd:Q33999 . # Joey Ramone (wd:Q1523) is a musician (wdt:P106 wd:Q33999)
  wd:Q1523 wdt:P46 ?band .       # Joey Ramone (wd:Q1523) was a member of band (?band)
}
```",4,6,5,3,2,3,3,71,0,0,4,0,0.0,0
773,31,train,Give me the parent of Carloman of Bavaria and spouse of the father of the parent of Bernard (son of Charles the Fat).,SELECT ?result WHERE { ?v0 <http://dbpedia.org/ontology/spouse> ?result . ?v1 <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Bernard_(son_of_Charles_the_Fat)> . ?v1 <http://dbpedia.org/property/father> ?v0 . ?result <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Carloman_of_Bavaria> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?parentOfCarloman ?spouseOfCharlesTheFat WHERE {
  # Find Bernard and his father Charles the Fat
  ?bernard dbo:father dbr:Charles_the_Fat .
  
  # Retrieve the spouse of Charles the Fat
  dbr:Charles_the_Fat dbo:spouse ?spouseOfCharlesTheFat .

  # Identify Carloman of Bavaria and find his parent
  dbr:Claudius_of_Bavaria dbo:father ?parentOfCarloman .
}
```",4,4,5,3,2,3,3,71,0,0,1,0,0.0,0
216,27,train,"Give me the team of the person born, that is a sports manager and a soccer manager and a soccer player, on the death of Pavel Vezhinov.",SELECT ?result WHERE { ?v2 <http://dbpedia.org/ontology/birthDate> ?v1 . <http://dbpedia.org/resource/Pavel_Vezhinov> <http://dbpedia.org/ontology/deathDate> ?v1 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerManager>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerPlayer>. ?result <http://dbpedia.org/ontology/coach> ?v2 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsManager>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?person ?team WHERE {
  # Find Pavel Vezhinov's birthdate
  VALUES ?vezhinovBirthDate { 
    SELECT ?birthDate WHERE { 
      dbr:Pavel_Vezhinov dbo:birthday ?birthDate .
    }
  }

  # Find people with the same birthdate as Pavel Vezhinov
  ?person dbo:birthday ?birthDate .

  FILTER (?birthDate = ?vezhinovBirthDate)

  # Ensure the person is a sports manager, soccer manager, and soccer player
  ?person dbo:occupation dbr:Sports_manager .
  ?person dbo:occupation dbr:Soccer_manager .
  ?person dbo:occupation dbr:Soccer_player .

  # Retrieve team information for these individuals
  OPTIONAL { 
    ?person dbo:team ?team .
  }
}
```",3,6,4,3,1,3,3,71,0,0,1,0,0.0,0
888,13,train,"Give me the commander in the force, that is a societal event and an event, of the military force of War in Donbas (2014–2022).",SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/commander> ?v0 . ?v1 <http://dbpedia.org/ontology/commander> ?result . ?v0 <http://dbpedia.org/ontology/battle> <http://dbpedia.org/resource/War_in_Donbas_(2014–2022)> . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?commander WHERE {
  ?event dbo:location dbr:Donbas_conflict_(2014–present) .
  ?event dbo:agent ?commander .
  ?commander a dbo:MilitaryPerson ;
             dbo:occupation ""Commander"" .
  OPTIONAL { ?societalEvent dbo:agent ?commander . }
}
```",3,5,4,3,1,3,2,20,0,0,110,0,0.0,0
582,15,train,"Give me the residence of the reference, that is a scientist, to Hirotaka Sugawara.","SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Scientist>. ?v1 <http://xmlns.com/foaf/0.1/name> ""Hirotaka Sugawara""@en . ?v1 <http://dbpedia.org/property/residence> ?result . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?residence WHERE {
  ?person rdfs:label ""Hirotaka Sugawara""@en .
  ?person a dbo:Scientist .
  OPTIONAL { ?person dbo:residence ?residence . }
  FILTER (lang(?person) = 'en')
}
```",2,3,3,2,1,3,3,71,0,0,2,0,0.0,0
170,16,train,Give me the domain of the profession of John Scholey and entity in Russia.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/leaderTitle> ?v2 . <http://dbpedia.org/resource/John_Scholey> <http://dbpedia.org/property/occupation> ?v2 . ?result <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Russia> . },"```sparql
# Step 1: Find John Scholey's profession
SELECT ?profession WHERE {
    ?scholey dbo:occupation ?profession .
    ?scholey rdfs:label ""John Scholey""@en .
}

# Step 2: Determine the domain of his profession
SELECT DISTINCT ?domain WHERE {
    ?profession dbo:fieldOfStudy ?domain .
    # Assuming we have found a specific profession from step 1, replace <profession_uri> with that URI.
    BIND(<profession_uri> AS ?profession)
}

# Step 3: Find an entity in Russia related to this domain
SELECT DISTINCT ?entity WHERE {
    ?entity dbo:fieldOfStudy ?domain .
    ?entity dbo:country dbr:Russia .
    # Assuming we have found a specific domain from step 2, replace <domain_uri> with that URI.
    BIND(<domain_uri> AS ?domain)
}
```

Note: Replace `<profession_uri>` and `<domain_uri>` with the actual URIs obtained from the results of the previous queries.",3,3,4,2,2,2,3,28,0,0,99,0,0.0,0
987,7,train,"Give me the time zone, that is a sports event, in Canicosa de la Sierra.",SELECT ?result WHERE { <http://dbpedia.org/resource/Canicosa_de_la_Sierra> <http://dbpedia.org/ontology/timeZone> ?result . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsEvent>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT DISTINCT ?event ?timeZone WHERE {
  ?location a dbo:Place ;
            rdfs:label ""Canicosa de la Sierra""@en .
  
  ?event dbo:location ?location ;
         a dbo:SportEvent .

  OPTIONAL { 
    ?event dbp:timezone ?timeZone .
  }
}
```",1,2,2,1,1,3,3,71,0,0,2,0,0.0,0
507,38,train,"Give me the professional in the profession of Guy Ferland and director of the movie, that is a movie and a work, with Beryl Reid.",SELECT ?result WHERE { ?v3 <http://dbpedia.org/ontology/director> ?result . ?v3 <http://dbpedia.org/property/starring> <http://dbpedia.org/resource/Beryl_Reid> . <http://dbpedia.org/resource/Guy_Ferland> <http://dbpedia.org/property/occupation> ?v2 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Film>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?result <http://dbpedia.org/property/occupation> ?v2 . },"```sparql
SELECT ?movie ?director WHERE {
  ?movie dbo:starring dbp:Guy_Ferland .
  ?movie dbo:starring dbp:Beryl_Reid .
  ?movie dbo:director ?director .
}
```",4,6,5,2,2,3,3,71,0,0,1,0,0.0,0
129,16,train,Give me the associated musical artist of the person born as Tahj Malik Chandler and professional in .,"SELECT ?result WHERE { ?v2 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v2 <http://dbpedia.org/property/birthName> ""Tahj Malik Chandler""@en . ?result <http://dbpedia.org/property/occupation> """"@en . }","```sparql
SELECT ?artist WHERE {
  ?game dbo:birthName ""Tahj Malik Chandler""@en .
  ?game a dbo:Musician ;
        foaf:name ""The Game""@en .
  OPTIONAL { ?game dbo:associatedMusicalArtist ?artist . }
}
```",3,3,4,2,2,2,3,28,0,0,7,0,0.0,0
888,1,train,Give me the awardee of Hero of Ukraine.,"SELECT ?result WHERE { ?result <http://dbpedia.org/property/awards> ""Hero of Ukraine""@en . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?recipient ?recipientLabel WHERE {
  ?award dbo:awardedBy dbr:Ukraine .
  ?award dbo:hasRecipient ?recipient .
  FILTER(STRSTARTS(LCASE(?award), ""hero of ukraine""))
  SERVICE wikibase:label { bd:serviceParam wikibase:language ""[AUTO_LANGUAGE],en"". }
}
```",1,1,2,1,1,3,2,20,0,0,14,0,0.0,0
582,32,train,"Give me the player in the father, that is an athlete and a soccer manager and a sports manager, of Masami Nagasawa and reference to the residence of Hirotaka Sugawara.",SELECT ?result WHERE { ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Athlete>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerManager>. ?v3 <http://dbpedia.org/ontology/team> ?result . <http://dbpedia.org/resource/Hirotaka_Sugawara> <http://dbpedia.org/property/residence> ?v1 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsManager>. ?result <http://xmlns.com/foaf/0.1/name> ?v1 . <http://dbpedia.org/resource/Masami_Nagasawa> <http://dbpedia.org/property/father> ?v3 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?father ?residence WHERE {
  # Find Masami Nagasawa's father
  dbr:Masami_Nagasawa dbo:parent ?father .

  # Check if the father is an athlete, soccer manager, and sports manager
  ?father a dbo:Athlete .
  ?father a dbo:SoccerManager .
  ?father a dbo:SportsManager .

  # Get Hirotaka Sugawara's residence
  dbr:Hirotaka_Sugawara dbo:residenceLocation ?residence .
}
```",4,7,5,2,2,3,3,71,0,0,1,0,0.0,0
773,29,train,Give me the parent of the successor of Charles the Bald and parent of Charles the Fat and spouse of Louis the German.,SELECT ?result WHERE { <http://dbpedia.org/resource/Charles_the_Bald> <http://dbpedia.org/ontology/successor> ?v3 . <http://dbpedia.org/resource/Charles_the_Fat> <http://dbpedia.org/ontology/parent> ?result . <http://dbpedia.org/resource/Louis_the_German> <http://dbpedia.org/ontology/spouse> ?result . ?result <http://dbpedia.org/ontology/child> ?v3 . },"```sparql
# Query to find the successor of Charles the Bald
SELECT ?successor WHERE {
  ?charles dbp:fullName ""Charles II (King of West Francia)"" .
  ?charles dbo:succeededBy ?successor .
}

UNION

# Query to find the parent(s) of Charles the Fat
SELECT ?parent WHERE {
  ?charlesFat dbp:fullName ""Charles III (Emperor of the Carolingian Empire)"" .
  ?charlesFat dbo:parent ?parent .
}

UNION

# Query to find the spouse of Louis the German
SELECT ?spouse WHERE {
  ?louisGerman dbp:fullName ""Louis II (King of East Francia)"" .
  ?louisGerman dbo:spouse ?spouse .
}
```",4,4,5,2,3,3,3,71,0,0,1,0,0.0,0
826,23,train,Give me the spouse of the child of the father of Anna Magdalena Appel.,SELECT ?result WHERE { ?v0 <http://dbpedia.org/property/father> ?v2 . ?v0 <http://dbpedia.org/ontology/spouse> ?result . <http://dbpedia.org/resource/Anna_Magdalena_Appel> <http://dbpedia.org/property/father> ?v2 . },"```sparql
SELECT ?spouse WHERE {
  ?anna a dbo:Person ;
        foaf:name ""Anna Magdalena Appel""@en .
  
  ?father dbo:child ?anna ;
          rdf:type dbo:Person .

  ?anna dbo:spouse ?spouse .
}
```",3,3,4,3,1,3,3,71,0,0,1,0,0.0,0
465,14,train,"Give me the successor of the child, that is a royalty, of Anne of Brittany.",SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v1 <http://dbpedia.org/ontology/successor> ?result . <http://dbpedia.org/resource/Anne_of_Brittany> <http://dbpedia.org/ontology/child> ?v1 . },"```sparql
SELECT ?successor WHERE {
  wd:Q1116 wdt:P26 wd:Q1161 . # Anne of Brittany (Q1116) has child (P26) Claude of France (Q1161)
  wd:Q1161 wdt:P35 wd:Q1194 .   # Claude of France (Q1161) had role (P35) Queen consort of France (Q1194)
  wd:Q1194 wdt:P136 ?successorRole . # Role of Queen consort of France (Q1194) has successor (P136)
  ?successorRole wdt:P39 wd:Q1194 . # Successor role is also Queen consort of France (Q1194)
  ?successor wdt:P35 ?successorRole . # Successor has role (P35) as Queen consort
}
```",2,3,3,2,1,3,3,71,0,0,2,0,0.0,0
573,24,train,"Give me the person decedent at the residence, that is a settlement, of William J. Phelan and parent of John Quincy Adams.",SELECT ?result WHERE { ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. <http://dbpedia.org/resource/John_Quincy_Adams> <http://dbpedia.org/ontology/parent> ?result . ?result <http://dbpedia.org/ontology/deathPlace> ?v2 . <http://dbpedia.org/resource/William_J._Phelan> <http://dbpedia.org/property/residence> ?v2 . },"```sparql
SELECT ?personDecedent WHERE {
  ?williamJPhelan dbo:residence ?settlement .
  FILTER (isLiteral(?settlement) && datatype(?settlement) = xsd:string)
  
  ?decedentAtResidence dbo:decedentAt ?settlement .
  ?decedentAtResidence dbo:personDecedent ?personDecedent .

  ?johnQuincyAdams dbo:parent ?personDecedent .
  FILTER (str(?johnQuincyAdams) = ""John Quincy Adams"")
}
```",3,4,4,2,2,3,3,71,0,0,2,0,0.0,0
933,4,train,Who is the band of Alan Warner (musician)?,SELECT ?result WHERE { <http://dbpedia.org/resource/Alan_Warner_(musician)> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?bandName WHERE {
  ?person foaf:name ""Alan Warner""@en .
  ?person dbo:occupation dbr:Musical_instrumentalist .
  OPTIONAL { ?person dbo:musicGroup ?band . }
  ?band rdfs:label ?bandName .
  FILTER(LANG(?bandName) = 'en')
}
```",1,1,2,1,1,3,3,71,0,0,10,0,0.0,0
826,1,train,"Give me the successor of Louis II, Grand Duke of Hesse.","SELECT ?result WHERE { <http://dbpedia.org/resource/Louis_II,_Grand_Duke_of_Hesse> <http://dbpedia.org/ontology/successor> ?result . }","```sparql
SELECT ?successor WHERE {
  ?person dbo:title ""Grand Duke of Hesse""@en .
  ?person foaf:name ""Louis II, Grand Duke of Hesse""@en .
  ?person dbo:successor ?successor .
}
```",1,1,2,1,1,3,3,71,0,0,1,0,0.0,0
166,7,train,Give me the resting place of the military force of Spanish Civil War.,SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/battle> <http://dbpedia.org/resource/Spanish_Civil_War> . ?v1 <http://dbpedia.org/ontology/restingPlace> ?result . },"```sparql
SELECT ?place WHERE {
  dbpedia:Francisco_Franco dbo:finalBurialPlace ?place .
}
```",2,2,3,2,1,3,2,20,0,0,36,0,0.0,0
874,7,train,"Give me the band of the writer, that is an artist and a musical artist, of Mezzanine (album).",SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. <http://dbpedia.org/resource/Mezzanine_(album)> <http://dbpedia.org/property/writer> ?v1 . ?result <http://dbpedia.org/ontology/bandMember> ?v1 . },"```sparql
SELECT ?bandMember WHERE {
  ?album dcterms:title ""Mezzanine""@en .
  ?album dbo:artist ?band .
  ?band foaf:name ""Massive Attack"" .
  
  ?band dbp:member ?bandMember .
  OPTIONAL { 
    ?bandMember dbo:occupation ""Artist""@en .
    ?bandMember dbo:occupation ""Musician""@en .
  }
  
  FILTER EXISTS {
    ?bandMember dbo:occupation ""Artist""@en .
  }
  FILTER EXISTS {
    ?bandMember dbo:occupation ""Musician""@en .
  }
}
```",2,4,3,2,1,3,2,20,0,0,4,0,0.0,0
83,3,train,"Give me the birthplace, that is a town and Brazilian and a soccer club, of Sandro (footballer, born October 1983).","SELECT ?result WHERE { ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerClub>. <http://dbpedia.org/resource/Sandro_(footballer,_born_October_1983)> <http://dbpedia.org/ontology/birthPlace> ?result . ?result <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Brazil>. ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Town>. }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?town WHERE {
  ?sandro dbo:birthPlace ?town .
  FILTER (CONTAINS(LCASE(?sandro), ""sandro"") && CONTAINS(LCASE(STR(?sandro)), ""1983-10""))
  
  ?town a dbo:Town .
  
  OPTIONAL { 
    ?club dbo:location ?town ;
          a dbo:SoccerClub .
  }
}
```",1,4,2,1,1,3,2,20,0,0,1,0,0.0,0
445,30,train,Give me the entity in England and death place of Patrick Moore and entity in the award of George H. Cameron.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/country> ?v1 . ?result <http://dbpedia.org/ontology/location> <http://dbpedia.org/resource/England> . <http://dbpedia.org/resource/George_H._Cameron> <http://dbpedia.org/property/awards> ?v1 . <http://dbpedia.org/resource/Patrick_Moore> <http://dbpedia.org/ontology/deathPlace> ?result . },"```sparql
# Query for Patrick Moore's place of death in England
SELECT ?deathPlace WHERE {
  dbpedia:Patrick_Moore dbo:placeOfBirth ?birthPlace .
  dbpedia:Patrick_Moore dbo:deathPlace ?deathPlace .
  FILTER (CONTAINS(LCASE(STR(?deathPlace)), ""england""))
}

# Query for the award entity related to George H. Cameron
SELECT ?awardEntity WHERE {
  dbpedia:George_H._Cameron dbo:award ?award .
  ?award rdfs:label ?awardLabel .
  FILTER (LANG(?awardLabel) = 'en')
}
```",4,4,5,2,3,3,3,71,0,0,1,0,0.0,0
216,36,train,"Give me the team of the person born, that is a sports manager and a soccer manager and a soccer player, on the death of Pavel Vezhinov and player in Igor Bišćan.",SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/birthDate> ?v0 . ?result <http://dbpedia.org/ontology/coach> ?v1 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsManager>. <http://dbpedia.org/resource/Igor_Bišćan> <http://dbpedia.org/ontology/team> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerManager>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerPlayer>. <http://dbpedia.org/resource/Pavel_Vezhinov> <http://dbpedia.org/ontology/deathDate> ?v0 . },"```sparql
# Step 1: Get Pavel Vezhinov's birthdate
SELECT ?birthdate WHERE {
    dbpedia:Pavel_Vezhinov dbo:birthday ?birthdate .
}

# Step 2: Find people born on the same date who are sports managers, soccer managers, and players
SELECT DISTINCT ?person ?team WHERE {
    # Assuming we have obtained Pavel Vezhinov's birthdate as a variable $birthdate
    VALUES (?birthdate) { ""YYYY-MM-DD"" } 

    ?person dbo:birthday ?sameBirthdate .
    FILTER (STR(?sameBirthdate) = STR($birthdate))

    ?person rdf:type dbpedia:SportsManager ;
            rdf:type dbpedia:SoccerManager ;
            rdf:type dbpedia:SoccerPlayer .

    # Step 3: Find teams associated with Igor Bišćan
    dbpedia:Igor_Bišćan dbo:team ?team .

    # Step 4: Check if the person was part of those teams
    ?person dbo:memberOfTeam ?team .
}
```",4,7,5,3,2,3,3,71,0,0,1,0,0.0,0
433,1,train,Give me the associated musical artist of Bill Evans.,SELECT ?result WHERE { <http://dbpedia.org/resource/Bill_Evans> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?artist WHERE {
  dbr:Bill_Evans dbo:associatedBandMember ?artist .
}
```",1,1,2,1,1,3,3,71,0,0,13,0,0.0,0
433,27,train,Give me the professional in the profession of the writer of Slowhand at 70 – Live at the Royal Albert Hall.,SELECT ?result WHERE { ?result <http://dbpedia.org/property/occupation> ?v2 . ?v1 <http://dbpedia.org/property/occupation> ?v2 . <http://dbpedia.org/resource/Slowhand_at_70_–_Live_at_the_Royal_Albert_Hall> <http://dbpedia.org/property/writer> ?v1 . },"```sparql
SELECT ?person WHERE {
  ?album dcterms:title ""Slowhand at 70 – Live at the Royal Albert Hall"" .
  ?album dbo:performer ?person .
  ?person foaf:name ""Eric Clapton""@en .
  ?person dbo:profession ?profession .
  FILTER(CONTAINS(LCASE(?profession), ""musician""))
}
```",3,3,4,3,1,3,3,71,0,0,51837,0,0.0,0
976,5,train,"Give me the reference, that is an organisation and a political party and Turkish, to Millet İttifakı.","SELECT ?result WHERE { ?result <http://xmlns.com/foaf/0.1/name> ""Millet İttifakı""@en . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?result <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Turkey>. ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/PoliticalParty>. }","```sparql
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>
PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>

SELECT ?entity WHERE {
  ?entity rdfs:label ""Millet İttifakı""@tr .
  ?entity rdf:type <http://dbpedia.org/class/yago/Organisation465069> ; # Class for organizations
         rdf:type <http://dbpedia.org/ontology/PoliticalParty> . # Class for political parties
}
```",1,4,2,1,1,3,3,71,0,0,1,0,0.0,0
507,2,train,"Give me the professional in Film director, television director.","SELECT ?result WHERE { ?result <http://dbpedia.org/property/occupation> ""Film director, television director""@en . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT DISTINCT ?person ?name WHERE {
  ?person a dbo:Person .
  ?person dbo:occupation ?occupation1 .
  ?person dbo:occupation ?occupation2 .
  
  FILTER (
    (str(?occupation1) = ""Film director"" && str(?occupation2) = ""Television director"") ||
    (str(?occupation1) = ""Television director"" && str(?occupation2) = ""Film director"")
  )
  
  ?person rdfs:label ?name .
  FILTER (lang(?name) = 'en')
}
ORDER BY ?name
```",1,1,2,1,1,3,3,71,0,0,38,0,0.0,0
955,3,train,Give me the writer of Don't Forget Your Roots (album).,SELECT ?result WHERE { <http://dbpedia.org/resource/Don't_Forget_Your_Roots_(album)> <http://dbpedia.org/property/writer> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?artist ?writer WHERE {
  ?album dbo:title ""Don't Forget Your Roots"" .
  ?album dbo:artist ?artist .
  OPTIONAL { ?album dbo:writer ?writer . }
  FILTER EXISTS { ?artist a dbo:MusicalArtist } 
}
```",1,1,2,1,1,3,2,20,0,0,19,0,0.0,0
329,5,train,"Give me the birthplace, that is an organisation and a country, of Robert Bates (loyalist).",SELECT ?result WHERE { ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. <http://dbpedia.org/resource/Robert_Bates_(loyalist)> <http://dbpedia.org/ontology/birthPlace> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?birthPlace WHERE {
  ?person a dbo:Loyalist;
          foaf:name ""Robert Bates""@en.
  ?person dbo:birthPlace ?birthPlace.
  ?birthPlace a dbo:Country .
  ?birthPlace a dbo:Organization .
}
```",1,3,2,1,1,2,3,28,0,0,1,0,0.0,0
417,33,train,"Give me the child of the father of the leader, that is a royalty, of Colony of Greenland and spouse of Princess Caroline-Mathilde of Denmark.",SELECT ?result WHERE { ?result <http://dbpedia.org/property/father> ?v3 . ?result <http://dbpedia.org/ontology/spouse> <http://dbpedia.org/resource/Princess_Caroline-Mathilde_of_Denmark> . ?v0 <http://dbpedia.org/property/father> ?v3 . <http://dbpedia.org/resource/Colony_of_Greenland> <http://dbpedia.org/property/leader> ?v0 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?child WHERE {
  # Step 1: Identify the leader of the Colony of Greenland
  ?leader dbo:positionTitle ""Governor of Greenland""@en .
  
  # Step 2: Determine the father of that leader
  ?father dbo:child ?leader .

  # Step 3: Find the child of this father who is royalty
  ?child dbo:parent ?father ;
         a dbo:Monarch .

  # Step 4: Identify the spouse of Princess Caroline-Mathilde of Denmark
  dbr:Princess_Caroline_Matilda_of_Denmark dbo:spouse ?spouse .

  # Step 5: Match the two individuals from steps 3 and 4
  FILTER(?child = ?spouse)
}
```",4,5,5,3,2,3,3,71,0,0,1,0,0.0,0
582,29,train,"Give me the reference to Japan and figure known as --10-19 and player in the father, that is an athlete and a soccer manager and a sports manager, of Masami Nagasawa.","SELECT ?result WHERE { ?v3 <http://dbpedia.org/ontology/team> ?result . ?result <http://dbpedia.org/property/nickname> ""--10-19""^^<http://www.w3.org/2001/XMLSchema#gMonthDay> . <http://dbpedia.org/resource/Masami_Nagasawa> <http://dbpedia.org/property/father> ?v3 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerManager>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsManager>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Athlete>. ?result <http://xmlns.com/foaf/0.1/name> ""Japan""@en . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?father ?alias WHERE {
  # Find Masami Nagasawa's father
  ?nagasawa a dbo:Person ;
            dbp:mother ?mother .
  
  ?mother dbo:spouse ?father .

  FILTER (str(?nagasawa) = ""Masami_Nagasawa"")

  # Check if the father is an athlete, soccer manager, and sports manager
  ?father dbo:occupation ?occupation1 .
  ?father dbo:occupation ?occupation2 .
  ?father dbo:occupation ?occupation3 .

  VALUES (?occupation1 ?occupation2 ?occupation3) {
    (dbr:Athlete dbr:Soccer_Manager dbr:Sports_Manager)
  }

  # Find any alias or reference known as --10-19
  OPTIONAL { ?father dbp:alias ?alias . FILTER(STR(?alias) = ""--10-19"") }
}
```",4,7,5,2,3,3,3,71,0,0,1,0,0.0,0
573,33,train,"Give me the person decedent at the residence, that is a settlement, of the professional, that is American, in Politician and person decedent at Massachusetts.","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/deathPlace> ?v3 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. ?v0 <http://dbpedia.org/property/occupation> ""Politician""@en . ?v0 <http://dbpedia.org/ontology/nationality> <http://dbpedia.org/resource/United_States>. ?v0 <http://dbpedia.org/property/residence> ?v3 . ?result <http://dbpedia.org/ontology/deathPlace> <http://dbpedia.org/resource/Massachusetts> . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?person ?decedent WHERE {
  ?person a dbo:Politician ;
          dbo:nationality dbr:United_States ;
          dbo:deathPlace dbr:Massachusetts .
  
  OPTIONAL { 
    ?person dbo:residence ?residence .
    ?residence a dbo:Settlement .
    
    ?decedent dbo:placeOfDeath ?residence .
  }
}
```",4,6,5,3,2,3,3,71,8,19,392,0.2962962962962963,0.02,0.03747072599531616
888,5,train,Give me the award of Oleksandr Syrskyi.,SELECT ?result WHERE { <http://dbpedia.org/resource/Oleksandr_Syrskyi> <http://dbpedia.org/property/awards> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?award WHERE {
  dbr:Oleksandr_Syrskyi dbo:award ?award .
}
```",1,1,2,1,1,3,2,20,0,1,1,0.0,0.0,0
773,17,train,"Give me the child, that is a royalty, of the father, that is an office holder and a royalty, of Carloman of Bavaria.",SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?result <http://dbpedia.org/property/father> ?v1 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. <http://dbpedia.org/resource/Carloman_of_Bavaria> <http://dbpedia.org/property/father> ?v1 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?child WHERE {
  # Identify Carloman of Bavaria
  dbr:Cadalhoch_of_Bavaria dbo:spouse ?parent .
  
  # Find his children
  ?parent dbo:child ?child .

  # Filter for those who are royalty
  ?child a dbo:Monarch ;
         rdfs:label ?name .
}
```",2,5,3,2,1,3,3,71,0,0,3,0,0.0,0
47,8,train,Give me the awardee of Padma Vibhushan.,SELECT ?result WHERE { ?result <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/Padma_Vibhushan> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?awardee WHERE {
  ?award a dbo:Award .
  ?award dbo:name ""Padma Vibhushan""@en .
  ?award dbo:recipient ?awardee .
}
```",1,1,2,1,1,3,3,71,0,0,86,0,0.0,0
527,14,train,"Give me the author of the work, that is a work and a book, of the host of Hyperland.",SELECT ?result WHERE { ?v0 <http://dbpedia.org/property/author> ?result . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?v0 <http://dbpedia.org/property/author> ?v2 . <http://dbpedia.org/resource/Hyperland> <http://dbpedia.org/ontology/presenter> ?v2 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Book>. },"```sparql
SELECT ?author WHERE {
  ?program dcterms:creator ?host .
  ?program rdfs:label ""Hyperland""@en .
  OPTIONAL { ?work dbo:author ?author . }
  FILTER EXISTS { ?host foaf:name ?name . FILTER regex(?name, ""Jon"", ""i"") } # Assuming Jon Stewart was the host
}
```",3,5,4,3,1,3,2,20,0,0,2,0,0.0,0
527,3,train,"Give me the movie, that is a work and English and a television show, with Bernard Bresslaw.",SELECT ?result WHERE { ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/TelevisionShow>. ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?result <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/United_Kingdom>. ?result <http://dbpedia.org/property/starring> <http://dbpedia.org/resource/Bernard_Bresslaw> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?work WHERE {
  ?work rdf:type ?type .
  FILTER (?type IN (dbo:Film, dbo:TelevisionShow)) .
  
  ?work dbo:language dbr:English .
  
  ?work dbo:starring dbr:Bernard_Bresslaw .
}
```",1,4,2,1,1,3,2,20,0,0,1,0,0.0,0
917,30,train,Give me the child of the father of Kamehameha IV and parent of Albert Kamehameha and child of Kekūanāoʻa.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/parent> <http://dbpedia.org/resource/Kekūanāoʻa> . <http://dbpedia.org/resource/Kamehameha_IV> <http://dbpedia.org/property/father> ?v0 . ?result <http://dbpedia.org/property/father> ?v0 . ?result <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Albert_Kamehameha> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?person WHERE {
  # Kamehameha IV's father
  ?kamehamehaIV dbo:father dbr:Kīnaʻu .
  
  # Child of Kīnaʻu who is also a parent of Albert Kamehameha and child of Kekūanāoʻa
  ?person dbo:parent dbr:Albert_Kamehameha ;
          dbo:childOf dbr:Kekūanāoʻa ;
          dbo:parent dbr:Kīnaʻu .
}
```",4,4,5,2,3,3,3,71,0,0,1,0,0.0,0
443,2,train,Give me the birthplace of Carl Larsson.,SELECT ?result WHERE { <http://dbpedia.org/resource/Carl_Larsson> <http://dbpedia.org/ontology/birthPlace> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?birthPlace WHERE {
  dbr:Carl_Larsson dbo:birthPlace ?birthPlace .
}
```",1,1,2,1,1,2,3,28,2,0,0,1.0,1.0,1.0
791,38,train,"Give me the father of the child, that is a royalty, of Emperor Takakura and predecessor of the child of Emperor Takakura.",SELECT ?result WHERE { ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v2 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Emperor_Takakura> . ?result <http://dbpedia.org/ontology/successor> ?v3 . ?v3 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Emperor_Takakura> . ?v2 <http://dbpedia.org/property/father> ?result . },"```sparql
SELECT ?father WHERE {
  wd:Q123456 wdt:P31/wdt:P279* wd:Q5; # Emperor Takakura and his child (Antoku) are instances of human
  wdt:P22 ?father. # The father property for Antoku

  FILTER(?father = wd:Q12345) # Minamoto no Yoritomo's DBpedia ID
}
```

Note: In the query, `wd:Q123456` should be replaced with the actual DBpedia resource identifier for Emperor Takakura, and `wd:Q12345` should be replaced with the identifier for Minamoto no Yoritomo. These identifiers need to be looked up in DBpedia.",4,5,5,2,2,3,3,71,0,0,1,0,0.0,0
47,34,train,"Give me the office of Ajoy Mukherjee and office of the administration of the commander, that is a politician, in Operation Green Hunt.",SELECT ?result WHERE { ?v1 <http://dbpedia.org/property/governor> ?v2 . <http://dbpedia.org/resource/Ajoy_Mukherjee> <http://dbpedia.org/property/office> ?result . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v1 <http://dbpedia.org/property/office> ?result . <http://dbpedia.org/resource/Operation_Green_Hunt> <http://dbpedia.org/ontology/commander> ?v2 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?officeAjoyMukherjee ?officeOperationGreenHunt
WHERE {
  # Office of Ajoy Mukherjee
  dbr:Ajoy_Mukherjee dbo:positionHeld ?officeAjoyMukherjee .
  
  # Assuming the role related to Operation Green Hunt is a high-ranking government position
  OPTIONAL {
    ?person dbo:occupation dbr:Minister_of_Defence_(India) ;
            dbo:memberOf dbr:Government_of_India .
    BIND(""Minister of Defence"" AS ?officeOperationGreenHunt)
  }
  
  UNION
  
  OPTIONAL {
    ?person dbo:occupation dbr:Minister_of_Home_Affairs_(India) ;
            dbo:memberOf dbr:Government_of_India .
    BIND(""Minister of Home Affairs"" AS ?officeOperationGreenHunt)
  }
}
```",4,5,5,3,2,3,3,71,0,0,2,0,0.0,0
130,9,train,"Give me the film, that is a soccer club and an organisation, of the native, that is a coach and a college coach, of Madison, Alabama.","SELECT ?result WHERE { ?v0 <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Madison,_Alabama> . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/CollegeCoach>. ?result <http://dbpedia.org/ontology/director> ?v0 . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerClub>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Coach>. ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?person ?film WHERE {
  ?person dbo:nationality dbr:United_States ;
          dbo:birthPlace dbr:Madison,_Alabama ;
          dbo:occupation dbr:Coach ;
          dbo:almaMater ?college .
  
  FILTER EXISTS { ?person dbo:position ""College coach"" . }
  
  OPTIONAL {
    ?film dbo:director ?person ;
          dbo:genre ?genre .
    
    FILTER EXISTS { 
      ?organization dbo:member ?film ;
                    a dbo:Soccer_Club
    }
  }
}
```",2,6,3,2,1,3,2,20,0,0,1,0,0.0,0
839,10,train,Give me the band of Matthias Röhr and band of Kevin Russell (musician).,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/bandMember> <http://dbpedia.org/resource/Matthias_Röhr> . <http://dbpedia.org/resource/Kevin_Russell_(musician)> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?matthiasBandLabel ?kevinBandLabel WHERE {
  ?matthiasRöhr a dbo:MusicalArtist ;
                foaf:name ""Matthias Röhr"" .
  ?matthiasRöhr dbo:musicalArtist ?matthiasBand .

  ?kevinRussell a dbo:MusicalArtist ;
                foaf:name ""Kevin Russell (musician)"" .
  ?kevinRussell dbo:musicalArtist ?kevinBand .

  SERVICE <http://dbpedia.org/sparql> {
    VALUES ?lang { en }
    ?matthiasBand rdfs:label ?matthiasBandLabel FILTER(LANG(?matthiasBandLabel) = ?lang)
    ?kevinBand rdfs:label ?kevinBandLabel FILTER(LANG(?matthiasBandLabel) = ?lang)
  }
}
```",2,2,3,1,2,3,3,71,0,0,1,0,0.0,0
773,7,train,"Give me the father, that is an office holder and a royalty, of Carloman of Bavaria.",SELECT ?result WHERE { ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. <http://dbpedia.org/resource/Carloman_of_Bavaria> <http://dbpedia.org/property/father> ?result . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?father WHERE {
  ?carloman dbo:parent ?father .
  ?carloman dbr:Carloman_of_Bavaria .
  ?father a dbo:Monarch ;
          dbo:officeHolder ?office .
}
```",1,3,2,1,1,3,3,71,0,0,1,0,0.0,0
232,3,train,Give me the person born as Emily Katherine Jacques.,"SELECT ?result WHERE { ?result <http://dbpedia.org/property/birthName> ""Emily Katherine Jacques""@en . }","```sparql
PREFIX foaf: <http://xmlns.com/foaf/0.1/>
PREFIX schema: <http://schema.org/>

SELECT ?person ?birthName WHERE {
  ?person a foaf:Person .
  ?person schema:birthName ""Emily Katherine Jacques"" .
}
```",1,1,2,1,1,2,2,9,0,0,1,0,0.0,0
267,8,train,Give me the person born on the birth date of Dan Cathy.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/birthDate> ?v0 . <http://dbpedia.org/resource/Dan_Cathy> <http://dbpedia.org/ontology/birthDate> ?v0 . },"```sparql
# Step 1: Retrieve Dan Cathy's birth date
SELECT ?birthDate WHERE {
  dbpedia:Dan_Cathy dbo:birthday ?birthDate .
}

# Step 2: Find other people born on the same date (assuming we have retrieved the birth date as a variable)
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT DISTINCT ?person WHERE {
  ?person a dbo:Person ;
          dbo:birthday ?birthDate .
  FILTER(?person != dbpedia:Dan_Cathy) # Exclude Dan Cathy from the results
}
```

Note: The second query assumes that you have executed the first query and obtained the birth date, which should be substituted in place of `?birthDate` if running as a single query.",2,2,3,2,1,3,2,20,0,0,35,0,0.0,0
124,36,train,"Give me the commander in Mahdist War and military force of the force, that is a societal event and a military conflict, of the person born on 1850-06-24.","SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?v0 <http://dbpedia.org/ontology/birthDate> ""1850-06-24""^^<http://www.w3.org/2001/XMLSchema#date> . ?v1 <http://dbpedia.org/ontology/commander> ?v0 . <http://dbpedia.org/resource/Mahdist_War> <http://dbpedia.org/ontology/commander> ?result . ?result <http://dbpedia.org/ontology/battle> ?v1 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?commander ?militaryForce WHERE {
  ?person dbo:birthDate ""1850-06-24""^^xsd:date .
  ?person rdfs:label ?name .
  FILTER(CONTAINS(LCASE(?name), ""herbert kitchener"")) .
  
  OPTIONAL { 
    ?person dbo:occupation ?occupation .
    FILTER(CONTAINS(LCASE(?occupation), ""commander"") || CONTAINS(LCASE(?occupation), ""general""))
  }
  
  OPTIONAL {
    ?event dbo:participatedInMilitaryConflict ?conflict .
    ?conflict rdfs:label ?conflictName .
    FILTER(CONTAINS(LCASE(?conflictName), ""mahdist war"")) .
    
    ?person dbo:commanded ?militaryForce .
    ?militaryForce rdfs:label ?forceLabel .
  }
  
  BIND(?person AS ?commander)
}
```",4,6,5,3,2,3,3,71,0,1,3,0.0,0.0,0
926,24,train,Give me the successor of the child of Ahmed III and child of Ahmed III.,SELECT ?result WHERE { <http://dbpedia.org/resource/Ahmed_III> <http://dbpedia.org/ontology/child> ?result . ?v2 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Ahmed_III> . ?v2 <http://dbpedia.org/ontology/successor> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?successor WHERE {
  # Find the children of Ahmed III
  ?child dbo:parent dbr:Aḥmed_III.

  # Check if any child became Sultan (i.e., succeeded someone)
  ?child dbo:succeededBy ?sultan.
  
  # Get the successor of this Sultan
  ?sultan dbo:succeededBy ?successor.
}
```",3,3,4,2,2,3,3,71,0,0,1,0,0.0,0
933,18,train,Give me the reference to Alan Warner and band of The Ramong Sound and band of Mike Elliott (saxophonist).,"SELECT ?result WHERE { <http://dbpedia.org/resource/The_Ramong_Sound> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?result <http://xmlns.com/foaf/0.1/name> ""Alan Warner""@en . <http://dbpedia.org/resource/Mike_Elliott_(saxophonist)> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . }","```sparql
SELECT ?band WHERE {
  VALUES (?person ?band) { 
    (dbpedia:Alan_Warner dbpedia:The_Ramones)
    (dbpedia:Mike_Elliott_(saxophonist) dbpedia:Santana)
  }
  ?person dbo:memberOf ?band .
}
```",3,3,4,1,3,3,3,71,0,0,1,0,0.0,0
965,28,train,"Give me the spouse of the spouse of Princess Victoria of Hesse and by Rhine and parent of Louise Mountbatten and parent of George Mountbatten, 2nd Marquess of Milford Haven.","SELECT ?result WHERE { <http://dbpedia.org/resource/Louise_Mountbatten> <http://dbpedia.org/ontology/parent> ?result . <http://dbpedia.org/resource/Princess_Victoria_of_Hesse_and_by_Rhine> <http://dbpedia.org/ontology/spouse> ?v1 . ?result <http://dbpedia.org/ontology/spouse> ?v1 . <http://dbpedia.org/resource/George_Mountbatten,_2nd_Marquess_of_Milford_Haven> <http://dbpedia.org/ontology/parent> ?result . }","```sparql
SELECT ?spouse WHERE {
  wd:Q123456 wdt:P26 wd:Q789012 . # Prince Louis of Battenberg (Lord Mountbatten) married to Princess Victoria of Hesse and by Rhine
  wd:Q789012 wdt:P26 ?spouse .   # Spouse of Princess Victoria after Prince Louis
}
```

Note: Replace `wd:Q123456` with the actual DBpedia ID for Prince Louis of Battenberg, and `wd:Q789012` with the ID for Princess Victoria of Hesse and by Rhine. The query assumes these IDs are known or can be looked up in DBpedia.",4,4,5,2,3,3,3,71,0,0,1,0,0.0,0
933,0,train,Give me the band of Mike Elliott (saxophonist).,SELECT ?result WHERE { <http://dbpedia.org/resource/Mike_Elliott_(saxophonist)> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?band WHERE {
  ?person rdfs:label ""Mike Elliott (saxophonist)""@en .
  ?person dbo:instrument ?instrument .
  FILTER EXISTS { ?instrument rdf:type dbo:Saxophone } .
  OPTIONAL { ?person dbo:member ?membership . }
  OPTIONAL { ?membership dbo:band ?band . }
}
```",1,1,2,1,1,3,3,71,0,0,8,0,0.0,0
554,6,train,Give me the leader of Portuguese Mozambique and leader of Portuguese São Tomé and Príncipe.,SELECT ?result WHERE { <http://dbpedia.org/resource/Portuguese_São_Tomé_and_Príncipe> <http://dbpedia.org/property/leader> ?result . <http://dbpedia.org/resource/Portuguese_Mozambique> <http://dbpedia.org/property/leader> ?result . },"```sparql
# Query for leaders of Portuguese Mozambique
SELECT ?leader ?position WHERE {
  ?entity rdfs:label ""Mozambique""@en.
  ?entity dbo:country dbr:Portugal.
  ?entity dbo:governmentHead ?leader.
  ?leader dbo:occupation ?position.
  FILTER(CONTAINS(LCASE(?position), ""governor"") || CONTAINS(LCASE(?position), ""administrator""))
}

UNION

# Query for leaders of Portuguese São Tomé and Príncipe
SELECT ?leader ?position WHERE {
  ?entity rdfs:label ""São Tomé and Príncipe""@en.
  ?entity dbo:country dbr:Portugal.
  ?entity dbo:governmentHead ?leader.
  ?leader dbo:occupation ?position.
  FILTER(CONTAINS(LCASE(?position), ""governor"") || CONTAINS(LCASE(?position), ""administrator""))
}
```",2,2,3,1,2,3,2,20,0,0,1,0,0.0,0
933,25,train,"Give me the band of the band, that is a group and a band and an organisation, of Alan Warner (musician) and reference to Alan Warner.","SELECT ?result WHERE { <http://dbpedia.org/resource/Alan_Warner_(musician)> <http://dbpedia.org/ontology/associatedMusicalArtist> ?v0 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Group>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Band>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?result <http://xmlns.com/foaf/0.1/name> ""Alan Warner""@en . ?v0 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?band WHERE {
  ?band a dbo:Band .
  ?band dbo:member dbr:Alan_Warner_(musician) .
  ?band dbo:type ?type1 .
  ?band dbo:type ?type2 .
  FILTER (?type1 = dbo:MusicalGroup || ?type1 = dbo:Organization)
  FILTER (?type2 = dbo:MusicalGroup || ?type2 = dbo:Organization)
}
```",3,6,4,2,2,3,3,71,0,0,1,0,0.0,0
865,14,train,Give me the father of the child of Abu Ahmad Abdul Hafiz.,SELECT ?result WHERE { ?v0 <http://dbpedia.org/property/father> ?result . ?v0 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Abu_Ahmad_Abdul_Hafiz> . },"```sparql
SELECT ?grandfather WHERE {
  ?person dbo:parent dbr:Abu_Ahmad_Abdul_Hafiz .
  ?child dbo:parent ?person .
  ?child dbo:parent dbr:Abu_Ahmad_Abdul_Hafiz .
  ?person rdfs:label ""Abu Ahmad Abdul Hafiz""@en .
}
```",2,2,3,2,1,3,3,71,0,0,1,0,0.0,0
459,6,train,Give me the governor of Oklahoma and governor of Dana Murphy.,SELECT ?result WHERE { <http://dbpedia.org/resource/Oklahoma> <http://dbpedia.org/property/governor> ?result . <http://dbpedia.org/resource/Dana_Murphy> <http://dbpedia.org/property/governor> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?oklahomaGovernorLabel ?danaMurphyRoleLabel WHERE {
  # Query to find the current governor of Oklahoma
  dbr:Oklahoma dbo:stateGovernor ?oklahomaGovernor .
  ?oklahomaGovernor rdfs:label ?oklahomaGovernorLabel .

  FILTER (LANG(?oklahomaGovernorLabel) = 'en')

  OPTIONAL {
    # Query to check if Dana Murphy has a political role
    dbr:Dana_Murphy dbo:positionHeld ?danaMurphyRole .
    ?danaMurphyRole rdfs:label ?danaMurphyRoleLabel .

    FILTER (LANG(?danaMurphyRoleLabel) = 'en')
  }
}
```",2,2,3,1,2,2,3,28,0,0,1,0,0.0,0
5,9,train,"Give me the person born, that is a politician, as the award of Renata Adler.",SELECT ?result WHERE { ?result <http://dbpedia.org/property/birthName> ?v0 . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. <http://dbpedia.org/resource/Renata_Adler> <http://dbpedia.org/property/awards> ?v0 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?person ?award WHERE {
  ?person a dbo:Politician ;
          dbo:award ?award .
  
  ?award dbo:recipient ?person ;
         dbo:givenBy dbr:Renata_Adler .

}
```",2,3,3,2,1,3,2,20,0,0,169,0,0.0,0
965,31,train,Give me the parent of Louise Mountbatten and spouse of the spouse of the parent of Louise Mountbatten.,SELECT ?result WHERE { <http://dbpedia.org/resource/Louise_Mountbatten> <http://dbpedia.org/ontology/parent> ?result . ?v2 <http://dbpedia.org/ontology/spouse> ?v0 . ?result <http://dbpedia.org/ontology/spouse> ?v0 . <http://dbpedia.org/resource/Louise_Mountbatten> <http://dbpedia.org/ontology/parent> ?v2 . },"```sparql
SELECT ?grandParent ?grandParentSpouse ?greatGrandInLaw WHERE {
  # Step 1: Find Louise Mountbatten's parent
  dbpedia:Louise_Mountbatten dbo:parent ?parent .

  # Step 2: Find the spouse of that parent
  ?parent dbo:spouse ?grandParentSpouse .

  # Step 3: Find the spouse of the grandparent's spouse (great-grand-in-law)
  ?grandParentSpouse dbo:spouse ?greatGrandInLaw .
  
  # Also, get the grandparent for clarity
  OPTIONAL { ?parent rdfs:label ?grandParent . FILTER(LANG(?grandParent) = ""en"") }
}
```",4,4,5,3,2,3,3,71,0,0,2,0,0.0,0
382,13,train,"Give me the birthplace of the manager, that is a soccer manager and an athlete and a sports manager, of the player in Lukas Kübler.",SELECT ?result WHERE { <http://dbpedia.org/resource/Lukas_Kübler> <http://dbpedia.org/ontology/team> ?v0 . ?v0 <http://dbpedia.org/ontology/manager> ?v1 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsManager>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerManager>. ?v1 <http://dbpedia.org/ontology/birthPlace> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Athlete>. },"```sparql
SELECT ?manager ?birthPlace WHERE {
  ?player dbo:agent ?agent .
  ?agent foaf:name ""Lukas Kübler"" .
  
  ?player dbo:manager ?manager .
  
  ?manager a dbo:SoccerManager ;
          a dbo:Athlete ;
          a dbo:SportsManager .

  OPTIONAL { ?manager dbp:birthPlace ?birthPlace . }
}
```",3,6,4,3,1,3,2,20,0,0,5,0,0.0,0
5,8,train,Give me the entity in the award of Coro de la Pontificia Universidad Católica de Puerto Rico.,SELECT ?result WHERE { <http://dbpedia.org/resource/Coro_de_la_Pontificia_Universidad_Católica_de_Puerto_Rico> <http://dbpedia.org/property/awards> ?v1 . ?result <http://dbpedia.org/ontology/country> ?v1 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?entity WHERE {
  ?award rdfs:label ""Coro de la Pontificia Universidad Católica de Puerto Rico""@en .
  OPTIONAL { ?award dbo:recipient ?entity . }
}
```",2,2,3,2,1,3,2,20,0,0,20990,0,0.0,0
926,3,train,Give me the spouse of Neşerek Kadın.,SELECT ?result WHERE { <http://dbpedia.org/resource/Neşerek_Kadın> <http://dbpedia.org/ontology/spouse> ?result . },"```sparql
SELECT ?spouse WHERE {
  ?person foaf:name ""Neşerek Kadın""@en .
  ?person dbo:spouse ?spouse .
}
```",1,1,2,1,1,3,3,71,1,0,0,1.0,1.0,1.0
465,12,train,Give me the successor of Renée of France and spouse of Archduchess Barbara of Austria.,SELECT ?result WHERE { <http://dbpedia.org/resource/Renée_of_France> <http://dbpedia.org/ontology/successor> ?result . ?result <http://dbpedia.org/ontology/spouse> <http://dbpedia.org/resource/Archduchess_Barbara_of_Austria> . },"```sparql
# Find the successor of Renée of France (likely one of her children)
SELECT ?successor WHERE {
  wd:Q123456 wdt:P31/wdt:P279* wd:Q5; # Renée of France is a human
  wdt:P40 ?child. # Her children
  SERVICE wikibase:label { bd:serviceParam wikibase:language ""[AUTO_LANGUAGE],en"". }
}

# Find the spouse of Archduchess Barbara of Austria
SELECT ?spouse WHERE {
  wd:Q654321 wdt:P26 ?spouse. # Archduchess Barbara's spouse
  SERVICE wikibase:label { bd:serviceParam wikibase:language ""[AUTO_LANGUAGE],en"". }
}
```

Note: Replace `wd:Q123456` with the actual DBpedia identifier for Renée of France and `wd:Q654321` with the identifier for Archduchess Barbara of Austria.",2,2,3,1,2,3,3,71,0,0,1,0,0.0,0
933,11,train,Give me the band of the band of Alan Warner (musician).,SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . <http://dbpedia.org/resource/Alan_Warner_(musician)> <http://dbpedia.org/ontology/associatedMusicalArtist> ?v1 . },"```sparql
SELECT ?band1 ?band2 WHERE {
  ?musician dbo:givenName ""Alan"" .
  ?musician dbo:familyName ""Warner"" .
  ?musician dbo:band ?band1 .

  OPTIONAL { 
    ?band1 dbo:associatedBand ?band2 .
  }
}
```",2,2,3,2,1,3,3,71,0,0,26,0,0.0,0
965,20,train,"Give me the parent of the child, that is a royalty, of Prince Louis of Battenberg and spouse of Prince Louis of Battenberg.",SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v1 <http://dbpedia.org/ontology/parent> ?result . ?result <http://dbpedia.org/ontology/spouse> <http://dbpedia.org/resource/Prince_Louis_of_Battenberg> . ?v1 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Prince_Louis_of_Battenberg> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?parent WHERE {
  # Prince Philip, Duke of Edinburgh
  dbr:Prince_Philip,_Duke_of_Edmonton dbo:childOf dbr:Louis_Mountbatten,_1st_Marquess_of_Milford_Haven .
  
  # Spouse of Prince Philip
  dbr:Queen_Elizabeth_II dbo:spouse dbr:Prince_Philip,_Duke_of_Edmonton .

  # Parent of Queen Elizabeth II
  dbr:Queen_Elizabeth_II dbo:childOf ?parent .
}
```",3,4,4,2,2,3,3,71,0,0,1,0,0.0,0
773,27,train,"Give me the parent of the child, that is a royalty, of the father, that is an office holder and a royalty, of Carloman of Bavaria.",SELECT ?result WHERE { ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v2 <http://dbpedia.org/property/father> ?v1 . <http://dbpedia.org/resource/Carloman_of_Bavaria> <http://dbpedia.org/property/father> ?v1 . ?v2 <http://dbpedia.org/ontology/parent> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. },"```sparql
SELECT DISTINCT ?parent WHERE {
  # Step 1: Identify Carloman of Bavaria
  ?carloman dbr:Carloman_of_Bavaria .
  
  # Step 2: Find his father
  ?father dbo:father ?carloman .

  # Step 3: Check if the father is an office holder and a royalty
  ?father rdf:type dbo:OfficeHolder ;
          rdf:type dbo:Royalty .

  # Step 4: Identify the child of this father who is a royalty
  ?child dbo:child ?father .
  ?child rdf:type dbo:Royalty .

  # Step 5: Find the parent of this royal child
  ?parent dbo:parent ?child .
}
```",3,6,4,3,1,3,3,71,0,0,2,0,0.0,0
917,7,train,"Who is the child, that is a royalty, of Kamehameha III?",SELECT ?result WHERE { <http://dbpedia.org/resource/Kamehameha_III> <http://dbpedia.org/ontology/child> ?result . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?child ?title WHERE {
  ?kamehameha3 dbo:child ?child .
  FILTER (strstarts(str(?kamehameha3), ""Kamehameha III""))
  
  OPTIONAL { ?child dbp:title ?title . }
  FILTER EXISTS { 
    ?child dbo:royalTitle ?title .
  }
}
```",1,2,2,1,1,3,3,71,0,0,3,0,0.0,0
216,4,train,Give me the coach of Croatia national under-21 football team.,SELECT ?result WHERE { <http://dbpedia.org/resource/Croatia_national_under-21_football_team> <http://dbpedia.org/ontology/coach> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?coachLabel WHERE {
  ?team rdfs:label ""Croatia national under-21 football team""@en .
  ?team dbo:coach ?coach .
  ?coach rdfs:label ?coachLabel .
  FILTER(LANG(?coachLabel) = 'en')
}
```",1,1,2,1,1,3,3,71,0,1,1,0.0,0.0,0
341,3,train,"Give me the work, that is a work and an album, of Serrano.","SELECT ?result WHERE { ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Album>. ?result <http://dbpedia.org/property/writer> ""Serrano""@en . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?work WHERE {
  ?work dbo:creator dbr:Serrano .
  ?work rdf:type dbo:Album .
}
```",1,3,2,1,1,2,2,9,0,0,7,0,0.0,0
507,17,train,Give me the profession of the person born on 1966-02-18.,"SELECT ?result WHERE { ?v1 <http://dbpedia.org/property/occupation> ?result . ?v1 <http://dbpedia.org/ontology/birthDate> ""1966-02-18""^^<http://www.w3.org/2001/XMLSchema#date> . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?person ?occupation WHERE {
  ?person a dbo:Person .
  ?person dbo:birthDate ?date .
  FILTER (YEAR(?date) = 1966 && MONTH(?date) = 2 && DAY(?date) = 18)
  OPTIONAL { ?person dbo:occupation ?occupation }
}
```",2,2,3,2,1,3,3,71,5,27,9,0.15625,0.35714285714285715,0.21739130434782608
456,4,train,Give me the actor of Pacific Drive.,SELECT ?result WHERE { <http://dbpedia.org/resource/Pacific_Drive> <http://dbpedia.org/property/starring> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?actor WHERE {
  ?movie dbo:title ""Pacific Drive""@en.
  ?movie dbo:starring ?actor.
}
```",1,1,2,1,1,3,3,71,0,0,22,0,0.0,0
459,10,train,"Give me the governor of the administration, that is a politician, of Brad Henry.",SELECT ?result WHERE { ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v0 <http://dbpedia.org/property/governor> ?result . ?v0 <http://dbpedia.org/property/governor> <http://dbpedia.org/resource/Brad_Henry> . },"```sparql
SELECT ?governor WHERE {
  ?person foaf:name ""Brad Henry""@en .
  ?person dbo:officeHolderOf ?office .
  ?office dbo:positionTitle ""Governor of Oklahoma""@en ;
          dbo:holder ?governor .
}
```",2,3,3,2,1,2,3,28,0,0,10,0,0.0,0
130,14,train,"Give me the entity in the administration, that is American, of the award of Živko Ključe.",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/state> ?v0 . ?v0 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/United_States>. <http://dbpedia.org/resource/Živko_Ključe> <http://dbpedia.org/property/awards> ?v2 . ?v0 <http://dbpedia.org/property/governor> ?v2 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?administration WHERE {
  ?award dbo:recipient dbr:Živko_Ključe .
  ?award dbo:administeredBy ?administration .
  FILTER (CONTAINS(LCASE(str(?administration)), ""american"") || CONTAINS(LCASE(str(?administration)), ""usa""))
}
```",3,4,4,3,1,3,2,20,0,0,26076,0,0.0,0
18,10,train,Give me the parent of the professional in Actress.,"SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/child> ?v1 . ?v1 <http://dbpedia.org/property/occupation> ""Actress""@en . }","```sparql
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?parentClass WHERE {
  ?actressClass rdfs:label ""Actress""@en .
  ?actressClass rdfs:subClassOf ?parentClass .
}
```",2,2,3,2,1,2,3,28,0,0,1063,0,0.0,0
715,38,train,"Give me the leader of the office, that is a government agency and an organisation, of Carlos Franco Iribarnegaray and commander in the force of Francisco Largo Caballero.",SELECT ?result WHERE { ?v3 <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Francisco_Largo_Caballero> . <http://dbpedia.org/resource/Carlos_Franco_Iribarnegaray> <http://dbpedia.org/property/office> ?v2 . ?v2 <http://dbpedia.org/ontology/leader> ?result . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/GovernmentAgency>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?v3 <http://dbpedia.org/ontology/commander> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?leader WHERE {
  # Find the office led by Carlos Franco Iribarnegaray
  ?office dbo:head dbr:Carlos_Franco_Iribarnegaray .
  
  # Ensure the office is a government agency and an organization
  ?office rdf:type dbo:GovernmentAgency ;
          rdf:type dbo:Organization .

  # Find the force commanded by Francisco Largo Caballero
  ?force dbo:commander dbr:Franco_Largo_Caballero .

  # Identify the leader who fits both roles
  ?leader dbo:head ?office .
  ?leader dbo:commander ?force .
}
```",4,6,5,2,2,3,3,71,0,0,1,0,0.0,0
935,9,train,"Give me the awardee of the award, that is an award, of Syed Sohail Hussain Naqvi.",SELECT ?result WHERE { <http://dbpedia.org/resource/Syed_Sohail_Hussain_Naqvi> <http://dbpedia.org/property/awards> ?v0 . ?result <http://dbpedia.org/property/awards> ?v0 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Award>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?awardee WHERE {
  # Find awards associated with Syed Sohail Hussain Naqvi
  dbr:Syed_Sohail_Hussain_Naqvi dbo:award ?award .
  
  # Find other awardees of the same award
  ?awardee dbo:award ?award .
  
  FILTER(?awardee != dbr:Syed_Sohail_Hussain_Naqvi)
}
```",2,3,3,2,1,3,2,20,45,60,7,0.42857142857142855,0.8653846153846154,0.5732484076433121
791,11,train,"Give me the spouse of the spouse, that is a royalty, of Emperor Takakura.",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/spouse> ?v0 . ?v0 <http://dbpedia.org/ontology/spouse> <http://dbpedia.org/resource/Emperor_Takakura> . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. },"```sparql
SELECT ?royalty WHERE {
  ?emperor rdf:type dbo:Emperor ;
           foaf:name ""Takakura""@en .
  
  ?emperor dbo:spouse ?spouse1 .

  ?spouse1 dbo:spouse ?spouse2 .

  FILTER EXISTS { ?spouse2 rdf:type dbo:RoyalFamilyMember }
}
```",2,3,3,2,1,3,3,71,0,0,1,0,0.0,0
978,6,train,Give me the band member of Chicane (musician) and band member of Enya.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/associatedMusicalArtist> <http://dbpedia.org/resource/Enya> . ?result <http://dbpedia.org/ontology/associatedMusicalArtist> <http://dbpedia.org/resource/Chicane_(musician)> . },"```sparql
# Query to find collaborators or associated acts of Chicane
SELECT ?collaborator WHERE {
  wd:Q123456 wdt:P106 wd:Q33999 . # Chicane is a musician
  wd:Q123456 wdt:P527 ?collaborator . # Collaborators or associated acts
}

UNION

# Query to find collaborators or associated acts of Enya
SELECT ?collaborator WHERE {
  wd:Q789012 wdt:P106 wd:Q33999 . # Enya is a musician
  wd:Q789012 wdt:P527 ?collaborator . # Collaborators or associated acts
}

# Replace Q123456 with the actual DBpedia ID for Chicane
# Replace Q789012 with the actual DBpedia ID for Enya
```

Note: The above query uses placeholders `wd:Q123456` and `wd:Q789012` for the DBpedia IDs of Chicane and Enya, respectively. You would need to replace these with the correct identifiers from DBpedia.",2,2,3,1,2,3,2,20,0,0,1,0,0.0,0
216,13,train,Give me the office of the mayor of Ros Bates and party of Campbell Newman.,SELECT ?result WHERE { <http://dbpedia.org/resource/Campbell_Newman> <http://dbpedia.org/ontology/party> ?result . ?v1 <http://dbpedia.org/property/office> ?result . <http://dbpedia.org/resource/Ros_Bates> <http://dbpedia.org/property/leader> ?v1 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?rosBatesOffice ?campbellNewmanParty WHERE {
  # Find Ros Bates' office related to being a mayor
  OPTIONAL { 
    ?rosBates dbr:Ros_Bates .
    ?rosBates dbo:office ?office .
    ?office rdfs:label ?rosBatesOffice .
    FILTER(CONTAINS(LCASE(?rosBatesOffice), ""mayor""))
  }
  
  # Find Campbell Newman's political party
  OPTIONAL {
    ?campbellNewman dbr:Campbell_Newman .
    ?campbellNewman dbo:partyAffiliation ?party .
    ?party rdfs:label ?campbellNewmanParty .
  }
}
```",3,3,4,2,2,2,3,28,0,0,1,0,0.0,0
791,33,train,"Give me the predecessor of the child of the child, that is an office holder and a royalty, of Emperor Go-Shirakawa and spouse of Taira no Tokuko.",SELECT ?result WHERE { ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?result <http://dbpedia.org/ontology/successor> ?v3 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v0 <http://dbpedia.org/ontology/parent> <http://dbpedia.org/resource/Emperor_Go-Shirakawa> . ?v3 <http://dbpedia.org/property/father> ?v0 . ?result <http://dbpedia.org/ontology/spouse> <http://dbpedia.org/resource/Taira_no_Tokuko> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?predecessor WHERE {
  # Emperor Go-Shirakawa's child (Imperial Princess Shoshi)
  dbr:Emperor_Go-Shirakawa dbo:child dbr:Imperial_Princess_Shoshi .
  
  # Taira no Tokuko's spouse (Emperor Antoku)
  dbr:Taira_no_Tokuko dbo:spouse dbr:Emperor_Antoku .

  # Emperor Antoku's notable descendant in terms of office holding and royalty
  dbr:Minamoto_no_Yoritomo dbo:predecessor ?predecessor .
  
  # Taira no Kiyomori as a predecessor in influence before Minamoto no Yoritomo
  FILTER(?predecessor = dbr:Taira_no_Kiyomori)
}
```",4,6,5,3,2,3,3,71,0,0,1,0,0.0,0
433,26,train,"Give me the associated musical artist of the associated musical artist, that is an artist and a musical artist, of the associated musical artist, that is a musical artist and an artist, of Ornette Coleman.",SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. ?v2 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v1 <http://dbpedia.org/ontology/associatedMusicalArtist> ?v2 . <http://dbpedia.org/resource/Ornette_Coleman> <http://dbpedia.org/ontology/associatedMusicalArtist> ?v1 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. },"```sparql
SELECT DISTINCT ?finalArtist WHERE {
  # Step 1: Find an artist associated with Ornette Coleman
  ?artist1 dbo:associatedMusicalArtist dbr:Ornette_Coleman .
  
  # Ensure the first artist is both a musical artist and an artist
  ?artist1 rdf:type dbo:Musician ;
           dbo:genre ?genre .

  # Step 2: From this artist, find another associated artist
  ?artist2 dbo:associatedMusicalArtist ?artist1 .

  # Ensure the second artist is also both a musical artist and an artist
  ?artist2 rdf:type dbo:Musician ;
           dbo:genre ?genre2 .

  # Step 3: From the second artist, find the final associated artist
  ?finalArtist dbo:associatedMusicalArtist ?artist2 .

  # Ensure the final artist is both a musical artist and an artist
  ?finalArtist rdf:type dbo:Musician ;
               dbo:genre ?genre3 .
}
```",3,7,4,3,1,3,3,71,0,0,117,0,0.0,0
606,1,train,Give me the birthplace of Charles I. Barber.,SELECT ?result WHERE { <http://dbpedia.org/resource/Charles_I._Barber> <http://dbpedia.org/ontology/birthPlace> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?birthPlace WHERE {
  ?person a dbo:Person ;
          foaf:name ""Charles I. Barber""@en .
  ?person dbo:birthPlace ?birthPlace .
}
```",1,1,2,1,1,3,2,20,1,0,0,1.0,1.0,1.0
326,3,train,Give me the profession of Susanne Lewis.,SELECT ?result WHERE { <http://dbpedia.org/resource/Susanne_Lewis> <http://dbpedia.org/property/occupation> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?occupation WHERE {
  ?person foaf:name ""Susanne Lewis""@en .
  ?person dbo:occupation ?occupation .
}
```",1,1,2,1,1,2,2,9,2,0,0,1.0,1.0,1.0
329,10,train,"Give me the entity in the region, that is a country, of Western European Time.",SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. ?result <http://dbpedia.org/ontology/country> ?v1 . ?v1 <http://dbpedia.org/property/timeZone> <http://dbpedia.org/resource/Western_European_Time> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?country WHERE {
  ?timeZone a dbo:TimeZone ;
            dbo:hasTimezoneName ""Western European Time"" .
  
  ?location dbo:timezone ?timeZone ;
            a dbo:Country .

  BIND(?location AS ?country)
}
```",2,3,3,2,1,2,3,28,0,0,46363,0,0.0,0
645,18,train,Give me the commander in Battle of Jarama and military force of Spanish Civil War and leader of Ministry of the Army (Spain).,SELECT ?result WHERE { <http://dbpedia.org/resource/Battle_of_Jarama> <http://dbpedia.org/ontology/commander> ?result . ?result <http://dbpedia.org/ontology/battle> <http://dbpedia.org/resource/Spanish_Civil_War> . <http://dbpedia.org/resource/Ministry_of_the_Army_(Spain)> <http://dbpedia.org/ontology/leader> ?result . },"```sparql
# Query 1: Commander in the Battle of Jarama
SELECT ?commander WHERE {
  wd:Q1234567 dbo:commander ?commander .
}
```

```sparql
# Query 2: Military Force in the Spanish Civil War
SELECT DISTINCT ?militaryForce WHERE {
  ?event dbo:participatingMilitaryUnit ?militaryForce ;
         rdfs:label ""Spanish Civil War""@en .
}
```

```sparql
# Query 3: Leader of the Ministry of the Army (Spain)
SELECT ?leader WHERE {
  wd:Q7890123 dbo:head ?leader .
}
```

Note: The placeholders `wd:Q1234567` and `wd:Q7890123` should be replaced with the actual DBpedia resource identifiers for ""Battle of Jarama"" and ""Ministry of the Army (Spain)"" respectively. These can be found by searching DBpedia or using a SPARQL endpoint to query for these entities.",3,3,4,1,3,3,3,71,0,0,1,0,0.0,0
382,4,train,"Give me the reference, that is a college coach and a coach, to Harry Combes.","SELECT ?result WHERE { ?result <http://xmlns.com/foaf/0.1/name> ""Harry Combes""@en . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Coach>. ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/CollegeCoach>. }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?occupation1 ?occupation2 WHERE {
  VALUES ?person { dbr:Harry_Combes }
  
  ?person dbo:occupation ?occupation1 .
  ?person dbo:occupation ?occupation2 .

  FILTER (
    (CONTAINS(LCASE(?occupation1), ""college coach"") && CONTAINS(LCASE(?occupation2), ""coach"")) ||
    (CONTAINS(LCASE(?occupation2), ""college coach"") && CONTAINS(LCASE(?occupation1), ""coach""))
  )
}
```",1,3,2,1,1,3,2,20,0,0,1,0,0.0,0
47,13,train,Give me the office of the awardee of Banga Bhushan.,SELECT ?result WHERE { ?v1 <http://dbpedia.org/property/office> ?result . ?v1 <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/Banga_Bhushan> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?person ?office WHERE {
  ?person dbo:honoraryTitle dbr:Banga_Bhushan .
  OPTIONAL { ?person dbo:positionHeld ?office . }
}
```",2,2,3,2,1,3,3,71,0,0,1,0,0.0,0
955,5,train,"Who is the band member, that is a musical artist and an artist, of Street Dogs?",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/associatedMusicalArtist> <http://dbpedia.org/resource/Street_Dogs> . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?member WHERE {
  ?band dbo:bandMember ?member .
  FILTER(CONTAINS(LCASE(?band), ""street dogs""))
  
  OPTIONAL { ?member dbo:occupation dbr:Musical_artist . }
  OPTIONAL { ?member dbo:occupation dbr:Artist . }

  FILTER((CONTAINS(LCASE(STR(?member)), ""mike mccolgan"")) && 
         (BOUND(?member) && BOUND(?memberdbo:occupation)))
}
```",1,3,2,1,1,3,2,20,0,0,2,0,0.0,0
917,22,train,Give me the parent of Albert Kamehameha and child of the father of Kamehameha IV.,SELECT ?result WHERE { <http://dbpedia.org/resource/Kamehameha_IV> <http://dbpedia.org/property/father> ?v0 . ?result <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Albert_Kamehameha> . ?result <http://dbpedia.org/property/father> ?v0 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?commonIndividual WHERE {
  # Find the parent of Albert Kamehameha
  ?albertKamehameha dbo:parent ?parentOfAlbert .
  FILTER(STRSTARTS(STR(?albertKamehameha), ""dbr:Albert_Kamehameha""))

  # Find the father of Kamehameha IV and his child
  ?kamehamehaIV dbo:father ?fatherOfKamehamehaIV .
  FILTER(STRSTARTS(STR(?kamehamehaIV), ""dbr:King_Kamehameha_IV""))
  
  ?childOfFather dbr:parent ?fatherOfKamehamehaIV .

  # Find the common individual
  VALUES (?commonIndividual) {
    (?parentOfAlbert)
    (?childOfFather)
  }
}
```",3,3,4,2,2,3,3,71,0,0,1,0,0.0,0
917,17,train,"Give me the father of the child, that is a royalty, of Kamehameha III.",SELECT ?result WHERE { ?v0 <http://dbpedia.org/property/father> ?result . <http://dbpedia.org/resource/Kamehameha_III> <http://dbpedia.org/ontology/child> ?v0 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?child ?father WHERE {
  # Find Kamehameha III's children
  dbr:Kamehameha_III dbo:child ?child .
  
  # Ensure the child is royalty (e.g., has a title or role related to royalty)
  OPTIONAL { ?child dbo:title ?title . FILTER(CONTAINS(LCASE(?title), ""king"") || CONTAINS(LCASE(?title), ""queen"")) }
  
  # Find the father of each child
  ?child dbo:father ?father .
}
```",2,3,3,2,1,3,3,71,0,0,2,0,0.0,0
83,6,train,"Give me the player in the person born, that is an athlete, on 1991-11-19.","SELECT ?result WHERE { ?v0 <http://dbpedia.org/ontology/team> ?result . ?v0 <http://dbpedia.org/ontology/birthDate> ""1991-11-19""^^<http://www.w3.org/2001/XMLSchema#date> . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Athlete>. }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>

SELECT ?player WHERE {
  ?player rdf:type dbo:Athlete .
  ?player dbo:birthDate ""1991-11-19""^^xsd:date .
}
```",2,3,3,2,1,2,2,9,0,30,91,0.0,0.0,0
933,21,train,Give me the band of The Ramong Sound and band of the band of Alan Warner (musician).,SELECT ?result WHERE { <http://dbpedia.org/resource/The_Ramong_Sound> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v2 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . <http://dbpedia.org/resource/Alan_Warner_(musician)> <http://dbpedia.org/ontology/associatedMusicalArtist> ?v2 . },"```sparql
# Query for the band associated with ""The Ramong Sound""
SELECT ?band WHERE {
  ?entity rdfs:label ""Ramong Sound""@en .
  ?entity dbo:associatedBand ?band .
}

UNION

# Query for the band associated with Alan Warner (musician)
SELECT ?band WHERE {
  ?entity rdfs:label ""Alan Warner (musician)""@en .
  ?entity dbo:band ?band .
}
```",3,3,4,2,2,3,3,71,0,0,4,0,0.0,0
47,35,train,Give me the office of the administration of Jagdeep Dhankhar and office of the awardee of Padma Vibhushan.,SELECT ?result WHERE { ?v2 <http://dbpedia.org/property/governor> <http://dbpedia.org/resource/Jagdeep_Dhankhar> . ?v1 <http://dbpedia.org/property/office> ?result . ?v1 <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/Padma_Vibhushan> . ?v2 <http://dbpedia.org/property/office> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?officeJagdeepDhankhar ?awardeeOffice WHERE {
  # Query for Jagdeep Dhankhar's office
  OPTIONAL {
    dbr:Jagdeep_Dhankhar dbo:positionHeld ?officeJagdeepDhankhar .
  }

  # Query for Padma Vibhushan awardees' offices
  OPTIONAL {
    ?awardee dbo:honour <http://dbpedia.org/resource/Padma_Vibhushan> ;
            dbo:occupation ?awardeeOffice .
  }
}
```",4,4,5,2,2,3,3,71,0,0,6,0,0.0,0
417,15,train,"Who is the parent, that is a royalty, of the child of Knud, Hereditary Prince of Denmark?","SELECT ?result WHERE { ?v1 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Knud,_Hereditary_Prince_of_Denmark> . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?result <http://dbpedia.org/ontology/child> ?v1 . }","```sparql
SELECT DISTINCT ?royalParent WHERE {
  # Find Knud, Hereditary Prince of Denmark
  ?knud dbo:name ""Knud, Hereditary Prince of Denmark""@en .
  
  # Find the child of Knud
  ?child dbo:parent ?knud .

  # Find the parent of this child
  ?child dbo:parent ?royalParent .

  # Check if the royalParent has a title indicating royalty
  OPTIONAL { ?royalParent dbo:title ?title . FILTER(CONTAINS(LCASE(?title), ""prince"") || CONTAINS(LCASE(?title), ""queen"") || CONTAINS(LCASE(?title), ""king"")) }
  
  # Ensure that the parent is indeed a royalty by checking for a title
  FILTER EXISTS { ?royalParent dbo:title ?title . FILTER(CONTAINS(LCASE(?title), ""prince"") || CONTAINS(LCASE(?title), ""queen"") || CONTAINS(LCASE(?title), ""king"")) }
}
```",2,3,3,2,1,3,3,71,0,0,2,0,0.0,0
129,13,train,Give me the associated musical artist of EarthGang and professional in the mayor of 1999 West Dunbartonshire Council election.,SELECT ?result WHERE { <http://dbpedia.org/resource/1999_West_Dunbartonshire_Council_election> <http://dbpedia.org/property/leader> ?v1 . ?result <http://dbpedia.org/property/occupation> ?v1 . <http://dbpedia.org/resource/EarthGang> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . },"```sparql
# Query to find associated musical artist of EarthGang
SELECT ?artist WHERE {
  wd:Q1234567 wdt:P106 wd:Q33999 . # Assuming Q1234567 is EarthGang's DBpedia ID and P106 is the occupation property for musician
  wd:Q33999 wdt:P463 ?artist . # P463 is the member of band/ensemble property
}

# Query to find candidates in the 1999 West Dunbartonshire Council election
SELECT DISTINCT ?candidate WHERE {
  ?election wdt:P31 wd:Q12345678 ; # Assuming Q12345678 is the DBpedia class for local elections
             wdt:P580 ?start ;
             wdt:P582 ?end .
  FILTER (?start <= ""1999-05-01""^^xsd:date && ?end >= ""1999-05-01""^^xsd:date) .
  ?election wdt:P127 ?candidate . # P127 is the part of administrative territorial entity property
}
```",3,3,4,2,2,2,3,28,0,0,3,0,0.0,0
36,2,train,Give me the person born as Ayo Makun.,"SELECT ?result WHERE { ?result <http://dbpedia.org/property/birthName> ""Ayo Makun""@en . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT ?person ?name WHERE {
  ?person a dbo:Person .
  ?person dbo:birthName ""Ayo Makun"" .
  OPTIONAL { ?person foaf:name ?name }
}
```",1,1,2,1,1,2,3,28,0,0,1,0,0.0,0
773,13,train,Give me the parent of the successor of Charles the Bald.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/child> ?v1 . <http://dbpedia.org/resource/Charles_the_Bald> <http://dbpedia.org/ontology/successor> ?v1 . },"```sparql
SELECT ?successorParent WHERE {
  ?charles dbo:spouse ?spouse .
  ?charles foaf:name ""Charles the Bald""@en .
  ?charles dbo:child ?successor .
  ?successor foaf:name ""Louis II of France""@en .
  ?successor dbo:parent ?successorParent .
}
```",2,2,3,2,1,3,3,71,0,0,2,0,0.0,0
445,38,train,Give me the entity in the award of George H. Cameron and death place of the awardee of Royal Astronomical Society.,SELECT ?result WHERE { ?v3 <http://dbpedia.org/ontology/deathPlace> ?result . ?v3 <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/Royal_Astronomical_Society> . <http://dbpedia.org/resource/George_H._Cameron> <http://dbpedia.org/property/awards> ?v2 . ?result <http://dbpedia.org/ontology/country> ?v2 . },"```sparql
# Query to find the award associated with George H. Cameron
SELECT ?award WHERE {
  ?person dbo:givenName ""George"" .
  ?person dbo:familyName ""H. Cameron"" .
  ?person dbo:honoraryTitle ?award .
}

# Assuming we have identified an award, replace <Award> with the actual award name obtained from the first query

# Query to find recipients of this award from the Royal Astronomical Society
SELECT DISTINCT ?recipient WHERE {
  ?recipient dbo:receivedAward <Award> ;
             dbo:honoraryTitle ""Royal Astronomical Society"" .
}

# Assuming we have identified a recipient, replace <Recipient> with the actual recipient URI obtained from the second query

# Query to find the death place of this recipient
SELECT ?deathPlace WHERE {
  <Recipient> dbo:placeOfDeath ?deathPlace .
}
```",4,4,5,2,2,3,3,71,0,0,2,0,0.0,0
773,10,train,Give me the parent of Charles the Fat and spouse of Louis the German.,SELECT ?result WHERE { <http://dbpedia.org/resource/Charles_the_Fat> <http://dbpedia.org/ontology/parent> ?result . <http://dbpedia.org/resource/Louis_the_German> <http://dbpedia.org/ontology/spouse> ?result . },"```sparql
SELECT ?person WHERE {
  # Find the parent of Charles the Fat
  ?charles dbo:parent ?parent .
  FILTER (str(?charles) = ""Charles_the_Fat"") .

  # Find the spouse of Louis the German
  ?louis dbo:spouse ?spouse .
  FILTER (str(?louis) = ""Louis_the_German"") .

  # Check if both roles are filled by the same person
  VALUES ?person { ?parent ?spouse }
}
```",2,2,3,1,2,3,3,71,0,0,1,0,0.0,0
715,29,train,Give me the commander in the force of Francisco Largo Caballero and leader of Ministry of the Air (Spain) and commander in Rif War.,SELECT ?result WHERE { <http://dbpedia.org/resource/Rif_War> <http://dbpedia.org/ontology/commander> ?result . ?v3 <http://dbpedia.org/ontology/commander> ?result . ?v3 <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Francisco_Largo_Caballero> . <http://dbpedia.org/resource/Ministry_of_the_Air_(Spain)> <http://dbpedia.org/ontology/leader> ?result . },"```sparql
SELECT ?person WHERE {
  ?person dbo:spouse ?largoCaballero .
  FILTER (str(?largoCaballero) = ""Francisco Largo Caballero"") .

  ?person dbo:positionHeld ?ministryOfAirRole .
  ?ministryOfAirRole dbo:officeHolder ?person ;
                     rdfs:label ?roleLabel .
  FILTER (CONTAINS(LCASE(str(?roleLabel)), ""minister of air""))

  ?person dbo:militaryCommanderIn ?rifWar .
  ?rifWar dbo:name ?warName .
  FILTER (str(?warName) = ""Rif War"")
}
```",4,4,5,2,3,3,3,71,0,0,1,0,0.0,0
976,23,train,"Give me the office of the leader, that is a politician, of the administration, that is an organisation, of Kemal Kılıçdaroğlu.",SELECT ?result WHERE { ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v1 <http://dbpedia.org/property/leader> <http://dbpedia.org/resource/Kemal_Kılıçdaroğlu> . ?v1 <http://dbpedia.org/ontology/leader> ?v2 . ?v2 <http://dbpedia.org/property/office> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. },"```sparql
SELECT ?office WHERE {
  ?person foaf:name ""Kemal Kılıçdaroğlu""@en .
  ?person dbo:leader <http://dbpedia.org/resource/Republican_People%27s_Party_(Turkey)> .
  ?person dbp:office ?office .
}
```",3,5,4,3,1,3,3,71,0,0,13,0,0.0,0
826,29,train,"Give me the predecessor of Louis IV, Grand Duke of Hesse and successor of the child, that is a royalty, of Louis I, Grand Duke of Hesse and spouse of Anna Magdalena Appel.","SELECT ?result WHERE { ?v3 <http://dbpedia.org/ontology/successor> ?result . ?result <http://dbpedia.org/ontology/successor> <http://dbpedia.org/resource/Louis_IV,_Grand_Duke_of_Hesse> . <http://dbpedia.org/resource/Anna_Magdalena_Appel> <http://dbpedia.org/ontology/spouse> ?result . <http://dbpedia.org/resource/Louis_I,_Grand_Duke_of_Hesse> <http://dbpedia.org/ontology/child> ?v3 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?person WHERE {
  # Predecessor of Louis IV, Grand Duke of Hesse
  ?predecessor dbo:successor dbr:Louis_IV,_Grand_Duke_of_Hesse .
  
  # Child of Louis I, Grand Duke of Hesse who is royalty and their successor
  ?child dbo:parent dbr:Louis_I,_Grand_Duke_of_Hesse ;
         a dbo:Monarch .
  ?successorChild dbo:predecessor ?child .

  # Spouse of Anna Magdalena Appel
  ?spouse dbo:spouse dbr:Anna_Magdalena_Appel .

  # Convergence on the same person
  FILTER (?predecessor = ?successorChild && ?predecessor = ?spouse)
}
```",4,5,5,2,3,3,3,71,0,0,1,0,0.0,0
865,39,train,Give me the father of the child of the father of Abul Maal Abdul Muhith and father of AK Abdul Momen.,SELECT ?result WHERE { ?v0 <http://dbpedia.org/property/father> ?result . ?v0 <http://dbpedia.org/property/father> ?v3 . <http://dbpedia.org/resource/AK_Abdul_Momen> <http://dbpedia.org/property/father> ?result . <http://dbpedia.org/resource/Abul_Maal_Abdul_Muhith> <http://dbpedia.org/property/father> ?v3 . },"```sparql
SELECT ?fatherOfKamruzzaman WHERE {
  # Find Abul Maal Abdul Muhith's father
  wd:Q1234567 wdt:P22 ?kamruzzaman . # Replace Q1234567 with the actual DBpedia ID for Abul Maal Abdul Muhith

  # Confirm Kamruzzaman is also the father of AK Abdul Momen
  wd:Q2345678 wdt:P22 ?kamruzzaman . # Replace Q2345678 with the actual DBpedia ID for AK Abdul Momen

  # Find Kamruzzaman's father
  ?kamruzzaman wdt:P22 ?fatherOfKamruzzaman .
}
```

Note: The placeholders `Q1234567` and `Q2345678` should be replaced with the actual DBpedia resource identifiers for Abul Maal Abdul Muhith and AK Abdul Momen, respectively. These can typically be found by searching their names on DBpedia or using a tool to resolve these entities.",4,4,5,3,2,3,3,71,0,0,1,0,0.0,0
442,0,train,Give me the resting place of Allyn K. Capron.,SELECT ?result WHERE { <http://dbpedia.org/resource/Allyn_K._Capron> <http://dbpedia.org/ontology/restingPlace> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?burialPlace WHERE {
  ?person a dbo:Person ;
          foaf:name ""Allyn K. Capron""@en .
  OPTIONAL { ?person dbo:deathPlace ?deathPlace . }
  OPTIONAL { ?person dbo:burialPlace ?burialPlace . }
}
```",1,1,2,1,1,2,2,9,0,0,1,0,0.0,0
124,23,train,"Give me the commander in the war, that is a societal event and a military conflict, of the reference, that is Australian and an organisation and a military unit, to 'A' Battery, Royal Australian Artillery.","SELECT ?result WHERE { ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?v2 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Australia>. ?v0 <http://dbpedia.org/ontology/commander> ?result . ?v2 <http://dbpedia.org/ontology/battle> ?v0 . ?v2 <http://xmlns.com/foaf/0.1/name> ""'A' Battery, Royal Australian Artillery""@en . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryUnit>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. }","```sparql
PREFIX dbp: <http://dbpedia.org/property/>
PREFIX dbo: <http://dbpedia.org/ontology/>

SELECT ?commander WHERE {
  ?unit a dbo:MilitaryUnit ;
        dbp:name ""'A' Battery, Royal Australian Artillery"" ;
        dbp:commander ?commander .
  
  OPTIONAL { 
    ?event dbo:participatingOrganisation ?unit ;
           dbo:type ?eventType .
    
    FILTER (
      ?eventType IN (dbo:War, dbo:MilitaryConflict) &&
      EXISTS { ?event dbo:location ?location . ?location dbp:country ""Australia"" }
    )
  }
}
```",3,8,4,3,1,3,3,71,0,0,109,0,0.0,0
236,0,train,Give me the party member of Federalist Party.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/party> <http://dbpedia.org/resource/Federalist_Party> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?person ?name WHERE {
  ?party a dbo:PoliticalParty ;
         rdfs:label ""Federalist Party""@en .
  
  ?member dbo:memberOf ?party ;
          dbo:name ?name .

  BIND(?member AS ?person)
}
```",1,1,2,1,1,3,2,20,0,0,269,0,0.0,0
865,1,train,Give me the father of AK Abdul Momen.,SELECT ?result WHERE { <http://dbpedia.org/resource/AK_Abdul_Momen> <http://dbpedia.org/property/father> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>

SELECT ?father WHERE {
  ?person dbo:name ""AK Abdul Momen""@en .
  ?person dbo:father ?father .
}
```",1,1,2,1,1,3,3,71,0,0,1,0,0.0,0
83,2,train,Who is the person born on 1995-07-07?,"SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/birthDate> ""1995-07-07""^^<http://www.w3.org/2001/XMLSchema#date> . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?person ?name WHERE {
    ?person a dbo:Person .
    ?person dbo:birthDate ?date .
    FILTER (YEAR(?date) = 1995 && MONTH(?date) = 7 && DAY(?date) = 7)
    OPTIONAL { ?person foaf:name ?name . }
}
```",1,1,2,1,1,2,2,9,34,45,0,0.43037974683544306,1.0,0.6017699115044248
579,13,train,"Give me the native of the residence, that is English and a settlement, of the resident of Scotland.",SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/United_Kingdom>. ?v0 <http://dbpedia.org/property/residence> ?v1 . ?result <http://dbpedia.org/ontology/birthPlace> ?v1 . ?v0 <http://dbpedia.org/ontology/residence> <http://dbpedia.org/resource/Scotland> . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. },"```sparql
SELECT ?nativeLanguage WHERE {
  ?person dbo:birthPlace dbr:Scotland .
  ?person dbo:residence ?settlement .
  ?settlement rdf:type dbo:Settlement ;
              dbo:country dbr:United_Kingdom ;
              dbo:officialLanguages ?language .
  FILTER(CONTAINS(LCASE(str(?settlement)), ""london""))
  ?language rdfs:label ?nativeLanguage .
  FILTER(LANG(?nativeLanguage) = 'en')
}
```",3,5,4,3,1,3,2,20,0,0,5279,0,0.0,0
645,10,train,Give me the commander in Battle of Jarama and leader of Ministry of the Army (Spain).,SELECT ?result WHERE { <http://dbpedia.org/resource/Ministry_of_the_Army_(Spain)> <http://dbpedia.org/ontology/leader> ?result . <http://dbpedia.org/resource/Battle_of_Jarama> <http://dbpedia.org/ontology/commander> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?person WHERE {
  ?battle dbo:commander ?person .
  FILTER(STRSTARTS(STR(?battle), ""http://dbpedia.org/resource/Battle_of_Jarama""))
  
  ?ministry dbo:leader ?person .
  FILTER(STRSTARTS(STR(?ministry), ""http://dbpedia.org/resource/Ministry_of_the_Army_(Spain)""))

  ?person rdfs:label ?name .
  FILTER(LANG(?name) = 'en')
}
```",2,2,3,1,2,3,3,71,1,0,0,1.0,1.0,1.0
456,5,train,"Give me the reference, that is a fictional character, to Lamont Cranston (radio, film and television).","SELECT ?result WHERE { ?result <http://xmlns.com/foaf/0.1/name> ""Lamont Cranston (radio, film and television)""@en . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/FictionalCharacter>. }","```sparql
SELECT ?character WHERE {
  ?person dbo:birthName ""Lamont Cranston""@en .
  ?person dbo:fictionalCharacter ?character .
}
```",1,2,2,1,1,3,3,71,0,0,1,0,0.0,0
18,1,train,Give me the parent of Liza Huber.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Liza_Huber> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT ?parent WHERE {
  ?person foaf:name ""Liza Huber""@en .
  ?person dbo:parent ?parent .
}
```",1,1,2,1,1,2,3,28,0,0,1,0,0.0,0
459,12,train,Give me the governor of Dana Murphy and governor of Oklahoma and person born as John Kevin Stitt.,"SELECT ?result WHERE { ?result <http://dbpedia.org/property/birthName> ""John Kevin Stitt""@en . <http://dbpedia.org/resource/Dana_Murphy> <http://dbpedia.org/property/governor> ?result . <http://dbpedia.org/resource/Oklahoma> <http://dbpedia.org/property/governor> ?result . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?governorDanaMurphy ?governorOklahoma ?johnKevinStitt WHERE {
  # Find the governor associated with Dana Murphy
  OPTIONAL { 
    ?d br:Dana_Murphy dbo:governedBy ?governorDanaMurphy .
  }
  
  # Find the current or most recent governor of Oklahoma
  ?oklahomaGovernor a dbo:Governor ;
                   dbo:stateOrTerritory dbr:Oklahoma .

  # Confirm John Kevin Stitt as Governor of Oklahoma
  ?johnKevinStitt a dbo:Governor ;
                  foaf:name ""John Kevin Stitt"" ;
                  dbo:stateOrTerritory dbr:Oklahoma .
}
```",3,3,4,1,3,2,3,28,0,0,1,0,0.0,0
36,18,train,Give me the person born as the birth name of Ayo Makun and person born in 1971.,"SELECT ?result WHERE { ?result <http://dbpedia.org/property/birthName> ?v1 . <http://dbpedia.org/resource/Ayo_Makun> <http://dbpedia.org/property/birthName> ?v1 . ?result <http://dbpedia.org/ontology/birthYear> ""1971""^^<http://www.w3.org/2001/XMLSchema#gYear> . }","```sparql
SELECT ?person WHERE {
  # Get Ayo Makun's birth name
  ?ayoMakun dbo:birthName ?birthName .
  FILTER(?ayoMakun = dbpedia:Ayo_Makun) .

  # Find a person with the same birth name and born in 1971
  ?person dbo:birthName ?birthName ;
          dbo:birthDate ?birthDate .
  FILTER(YEAR(?birthDate) = 1971)
}
```",3,3,4,2,2,2,3,28,0,0,1,0,0.0,0
281,5,train,Give me the award of Alfred Warden.,SELECT ?result WHERE { <http://dbpedia.org/resource/Alfred_Warden> <http://dbpedia.org/property/awards> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?award WHERE {
  dbr:Alfred_Warden dbo:award ?award .
}
```",1,1,2,1,1,2,3,28,1,0,0,1.0,1.0,1.0
365,7,train,Give me the person born as the birth name of Symon Petliura.,SELECT ?result WHERE { ?result <http://dbpedia.org/property/birthName> ?v1 . <http://dbpedia.org/resource/Symon_Petliura> <http://dbpedia.org/property/birthName> ?v1 . },"```sparql
SELECT ?person ?birthName WHERE {
  ?person rdfs:label ""Symon Petliura""@en .
  OPTIONAL { ?person foaf:name ?birthName . }
}
```",2,2,3,2,1,3,2,20,1,1,0,0.5,1.0,0.6666666666666666
715,11,train,"Give me the commander in the force, that is a military conflict, of Abd el-Krim.",SELECT ?result WHERE { ?v0 <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Abd_el-Krim> . ?v0 <http://dbpedia.org/ontology/commander> ?result . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. },"```sparql
PREFIX dbp: <http://dbpedia.org/property/>
PREFIX dbo: <http://dbpedia.org/ontology/>

SELECT ?conflict ?commanderRole WHERE {
  ?abdElKrim dbp:name ""Abd el-Krim""@en .
  ?abdElKrim dbo:spouse ?conflict . # Assuming the conflict is linked via a spouse property for demonstration; adjust based on actual DBpedia schema
  FILTER(CONTAINS(LCASE(?conflict), ""rif war"")) .
  OPTIONAL { ?abdElKrim dbp:commander ?commanderRole }
}
```",2,3,3,2,1,3,3,71,0,0,22,0,0.0,0
93,9,train,"Give me the headquarter, that is a region and a settlement, of the headquarter of Clam Cove Pictograph Site.",SELECT ?result WHERE { ?v0 <http://dbpedia.org/ontology/location> ?result . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Region>. <http://dbpedia.org/resource/Clam_Cove_Pictograph_Site> <http://dbpedia.org/ontology/location> ?v0 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?headquarter ?regionLabel ?settlementLabel WHERE {
  # Find the Clam Cove Pictograph Site and its headquarters
  dbr:Clam_Cove_Pictograph_Site dbo:administrativeRegion ?headquarter .
  
  # Check if the headquarter is a region
  OPTIONAL { ?headquarter rdf:type dbo:AdministrativeRegion . BIND(""Yes"" AS ?regionLabel) }
  OPTIONAL { ?headquarter rdf:type dbo:Region . BIND(""Yes"" AS ?regionLabel) }

  # Check if the headquarter is a settlement
  OPTIONAL { ?headquarter rdf:type dbo:PopulatedPlace . BIND(""Yes"" AS ?settlementLabel) }
  OPTIONAL { ?headquarter rdf:type dbo:Settlement . BIND(""Yes"" AS ?settlementLabel) }

  FILTER(?regionLabel = ""Yes"" && ?settlementLabel = ""Yes"")
}
```",2,4,3,2,1,3,2,20,0,0,5,0,0.0,0
826,17,train,"Who is the parent of the child of Louis IV, Grand Duke of Hesse?","SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/parent> ?result . ?v1 <http://dbpedia.org/ontology/parent> <http://dbpedia.org/resource/Louis_IV,_Grand_Duke_of_Hesse> . }","```sparql
SELECT ?child ?parent WHERE {
  wd:Q123456 dbo:child ?child .
  ?child dbo:parent ?parent .
}
```

Note: Replace `wd:Q123456` with the actual DBpedia identifier for Louis IV, Grand Duke of Hesse. You can find this identifier by searching DBpedia or using a SPARQL query to identify him based on his name.",2,2,3,2,1,3,3,71,0,0,2,0,0.0,0
212,4,train,Give me the birthplace of KODA (singer) and birthplace of Corp Sayvee.,SELECT ?result WHERE { <http://dbpedia.org/resource/KODA_(singer)> <http://dbpedia.org/ontology/birthPlace> ?result . <http://dbpedia.org/resource/Corp_Sayvee> <http://dbpedia.org/ontology/birthPlace> ?result . },"```sparql
# Query for Koda (Singer)
SELECT ?birthPlace WHERE {
  wd:Q123456 dbo:birthPlace ?birthPlace .
}

# Query for Corp Sayvee
SELECT ?birthPlace WHERE {
  wd:Q789012 dbo:birthPlace ?birthPlace .
}
```

Note: Replace `wd:Q123456` with the actual DBpedia resource identifier for Koda (singer) and `wd:Q789012` with the identifier for Corp Sayvee. These identifiers can be found by searching their names in DBpedia or using a service like Wikidata to find the correct QID.",2,2,3,1,2,2,2,9,0,0,1,0,0.0,0
582,5,train,Give me the child of Kazuaki Nagasawa.,SELECT ?result WHERE { ?result <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Kazuaki_Nagasawa> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>

SELECT ?child WHERE {
  ?person a dbo:Person ;
          foaf:name ""Kazuaki Nagasawa""@en .
  ?person dbo:child ?child .
}
```",1,1,2,1,1,3,3,71,0,0,1,0,0.0,0
453,4,train,Give me the religion of Newfoundland Colony and religion of John Henry Newman.,SELECT ?result WHERE { <http://dbpedia.org/resource/John_Henry_Newman> <http://dbpedia.org/ontology/religion> ?result . <http://dbpedia.org/resource/Newfoundland_Colony> <http://dbpedia.org/ontology/religion> ?result . },"```sparql
# Query for the religion of Newfoundland Colony
SELECT ?religion WHERE {
  wd:Q1599 rdfs:label ""Newfoundland Colony""@en .
  OPTIONAL { wd:Q1599 wdt:P31/wdt:P279* wd:Q11424 . } # Instance of or subclass of a religious group
  OPTIONAL { wd:Q1599 wdt:P136 ?religion . } # Religious affiliation
}

# Query for the religion of John Henry Newman
SELECT ?religion WHERE {
  wd:Q1116 rdfs:label ""John Henry Newman""@en .
  OPTIONAL { wd:Q1116 wdt:P140 ?religion . } # Religious order or affiliation
}
```",2,2,3,1,2,2,2,9,0,0,1,0,0.0,0
892,19,train,Give me the landmark at elevation of 58 and entity in the profession of Henri Crolla.,"SELECT ?result WHERE { <http://dbpedia.org/resource/Henri_Crolla> <http://dbpedia.org/property/occupation> ?v2 . ?result <http://dbpedia.org/ontology/country> ?v2 . ?result <http://dbpedia.org/ontology/elevation> ""58""^^<http://www.w3.org/2001/XMLSchema#integer> . }","```sparql
# Query for landmark at elevation of 58
SELECT ?landmark WHERE {
  ?landmark a dbo:Landmark ;
            dbo:elevationAboveSeaLevel ?elevation .
  FILTER (?elevation = ""58""^^xsd:string)
}

UNION

# Query for entities in the profession of boxing (related to Henri Crolla)
SELECT ?person WHERE {
  ?person dbo:occupation dbr:Boxer ;
          foaf:name ?name .
}
```",3,3,4,2,2,3,3,71,0,0,11,0,0.0,0
443,7,train,Give me the landmark at elevation of 28 and birthplace of Carl Larsson.,"SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/elevation> ""28""^^<http://www.w3.org/2001/XMLSchema#integer> . <http://dbpedia.org/resource/Carl_Larsson> <http://dbpedia.org/ontology/birthPlace> ?result . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?landmark WHERE {
    ?person dbo:birthPlace ?place .
    ?place a dbo:PopulatedPlace ;
           dbp:elevationMeters ""28""^^xsd:int .

    FILTER (str(?person) = str(dbr:C._Larsson))
}
```",2,2,3,1,2,2,3,28,0,0,1,0,0.0,0
443,12,train,Give me the landmark at elevation of 28 and birthplace of Carl Larsson and birthplace of Ulf Lundell.,"SELECT ?result WHERE { <http://dbpedia.org/resource/Ulf_Lundell> <http://dbpedia.org/ontology/birthPlace> ?result . <http://dbpedia.org/resource/Carl_Larsson> <http://dbpedia.org/ontology/birthPlace> ?result . ?result <http://dbpedia.org/ontology/elevation> ""28""^^<http://www.w3.org/2001/XMLSchema#integer> . }","```sparql
# Query for landmark at elevation 28
SELECT ?landmark WHERE {
  ?landmark dbo:elevation ""28""^^xsd:integer .
}

UNION

# Query for Carl Larsson's birthplace
SELECT ?birthPlace WHERE {
  dbpedia:Carl_Larsson dbo:birthPlace ?birthPlace .
}

UNION

# Query for Ulf Lundell's birthplace
SELECT ?birthPlace WHERE {
  dbpedia:Ulf_Lundell dbo:birthPlace ?birthPlace .
}
```",3,3,4,1,3,2,3,28,0,0,1,0,0.0,0
865,6,train,"Who is the child, that is a politician, of Abu Ahmad Abdul Hafiz?",SELECT ?result WHERE { ?result <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Abu_Ahmad_Abdul_Hafiz> . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?child WHERE {
  ?person a dbo:Person ;
          foaf:name ""Abu Ahmad Abdul Hafiz""@en .
  
  ?person dbo:child ?child .

  ?child dbo:occupation ?occupation .
  FILTER(CONTAINS(LCASE(STR(?occupation)), ""politician""))
}
```",1,2,2,1,1,3,3,71,0,0,3,0,0.0,0
216,9,train,Give me the player in Mario Ivanković and player in Igor Bišćan.,SELECT ?result WHERE { <http://dbpedia.org/resource/Mario_Ivanković> <http://dbpedia.org/ontology/team> ?result . <http://dbpedia.org/resource/Igor_Bišćan> <http://dbpedia.org/ontology/team> ?result . },"```sparql
# Query for Mario Ivanković's position
SELECT ?position WHERE {
  dbpedia:en:Mario_Ivanković dbo:role ?position .
}

# Query for Igor Bišćan's position
SELECT ?position WHERE {
  dbpedia:en:Igor_Bišćan dbo:role ?position .
}
```",2,2,3,1,2,3,3,71,0,0,3,0,0.0,0
645,3,train,Who is the commander in Siege of Madrid?,SELECT ?result WHERE { <http://dbpedia.org/resource/Siege_of_Madrid> <http://dbpedia.org/ontology/commander> ?result . },"```sparql
PREFIX dbp: <http://dbpedia.org/property/>
PREFIX dbo: <http://dbpedia.org/ontology/>

SELECT ?commander WHERE {
  ?event a dbo:Event .
  ?event rdfs:label ""Siege of Madrid""@en .
  OPTIONAL { ?event dbp:commander ?commander . }
}
```",1,1,2,1,1,3,3,71,0,28,27,0.0,0.0,0
507,10,train,"Give me the spouse of Anne V. Coates and professional in Film director, television director.","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/spouse> <http://dbpedia.org/resource/Anne_V._Coates> . ?result <http://dbpedia.org/property/occupation> ""Film director, television director""@en . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT ?spouseName ?profession WHERE {
  ?anne a dbo:Person ;
        foaf:name ""Anne V. Coates""@en .
  
  OPTIONAL { 
    ?anne dbo:spouse ?spouse .
    ?spouse foaf:name ?spouseName .
    
    OPTIONAL {
      ?spouse dbo:occupation ?occupation .
      FILTER (
        CONTAINS(LCASE(?occupation), ""film director"") ||
        CONTAINS(LCASE(?occupation), ""television director"")
      )
      BIND(""Film or Television Director"" AS ?profession)
    }
  }
}
```",2,2,3,1,2,3,3,71,0,0,1,0,0.0,0
715,1,train,Give me the commander in Spanish Civil War.,SELECT ?result WHERE { <http://dbpedia.org/resource/Spanish_Civil_War> <http://dbpedia.org/ontology/commander> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?commander ?name WHERE {
  ?commander a dbo:Person .
  ?commander dbo:role ?role .
  ?role dbo:wikiPageRedirects ?redirect .
  OPTIONAL { ?commander rdfs:label ?name FILTER (lang(?name) = 'en') . }
  ?event dbo:participatedIn ?commander .
  ?event dbr:Spanish_Civil_War .
}
ORDER BY ?name
```",1,1,2,1,1,3,3,71,0,0,28,0,0.0,0
98,17,train,Give me the entity in Philippines and birth place of the person born as Paolo Elito M. Ballesteros IV.,"SELECT ?result WHERE { ?v2 <http://dbpedia.org/property/birthName> ""Paolo Elito M. Ballesteros IV""@en . ?v2 <http://dbpedia.org/ontology/birthPlace> ?result . ?result <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Philippines> . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?birthPlace WHERE {
  ?person a dbo:Person ;
          foaf:name ""Paolo Elito M. Ballesteros IV""@en .
  
  OPTIONAL { ?person dbo:birthPlace ?birthPlace . }
  
  FILTER EXISTS {
    ?birthPlace dbo:country dbr:Philippines .
  }
}
```",3,3,4,2,2,2,3,28,0,0,2,0,0.0,0
329,14,train,"Give me the entity in the region, that is a country, of Western European Time and birthplace of Eric Cross (writer).",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/country> ?v2 . ?v2 <http://dbpedia.org/property/timeZone> <http://dbpedia.org/resource/Western_European_Time> . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. <http://dbpedia.org/resource/Eric_Cross_(writer)> <http://dbpedia.org/ontology/birthPlace> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?country WHERE {
  ?country a dbo:Country ;
           dbo:timeZone dbr:Western_European_Time .
  
  OPTIONAL { 
    ?person dbo:birthPlace ?country ;
            rdfs:label ""Eric Cross (writer)""@en .
  }
  
  FILTER EXISTS { ?person dbo:birthPlace ?country }
}
```",3,4,4,2,2,2,3,28,0,0,1,0,0.0,0
365,11,train,Give me the person born as the birth name of Symon Petliura and spouse of Olha Petliura.,SELECT ?result WHERE { ?result <http://dbpedia.org/property/birthName> ?v2 . <http://dbpedia.org/resource/Olha_Petliura> <http://dbpedia.org/ontology/spouse> ?result . <http://dbpedia.org/resource/Symon_Petliura> <http://dbpedia.org/property/birthName> ?v2 . },"```sparql
SELECT ?person WHERE {
  ?person foaf:name ""Symon Petliura""@en .
  ?person dbo:birthName ""Symon Vasyl'ovych Petliura""@uk .
  ?marriage dbo:spouse ?olha .
  ?marriage dbo:spouse ?person .
  ?olha foaf:name ""Olha Khoruzhynska""@en ;
        skos:altLabel ""Olha Petliura""@en .
}
```",3,3,4,2,2,3,2,20,0,0,1,0,0.0,0
41,4,train,Who is the person born as David Declan Costello?,"SELECT ?result WHERE { ?result <http://dbpedia.org/property/birthName> ""David Declan Costello""@en . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT ?person ?name WHERE {
  ?person dbo:birthName ""David Declan Costello"" .
  OPTIONAL { ?person foaf:name ?name }
}
```",1,1,2,1,1,2,3,28,0,0,1,0,0.0,0
579,8,train,"Give me the person born as the birth name of Jane Percy, Duchess of Northumberland.","SELECT ?result WHERE { ?result <http://dbpedia.org/property/birthName> ?v0 . <http://dbpedia.org/resource/Jane_Percy,_Duchess_of_Northumberland> <http://dbpedia.org/property/birthName> ?v0 . }","```sparql
# Step 1: Find Jane Percy's birth name
SELECT ?birthName WHERE {
    dbpedia:Jane_Percy_Duchess_of_Northumberland schema:birthName ?birthName .
}

# Step 2: Use the identified birth name to find other individuals with the same birth name
PREFIX foaf: <http://xmlns.com/foaf/0.1/>
PREFIX schema: <http://schema.org/>

SELECT DISTINCT ?person WHERE {
    ?person schema:birthName ?birthName .
    FILTER(?birthName = ""Jane Percy"") # Replace this with the actual birth name found in Step 1
    FILTER NOT EXISTS { 
        ?person foaf:name ""Jane Percy, Duchess of Northumberland""@en .
    }
}
```",2,2,3,2,1,3,2,20,0,0,1,0,0.0,0
508,5,train,"Give me the commander, that is Saudi, in Central Plains War.",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/nationality> <http://dbpedia.org/resource/Saudi_Arabia>. <http://dbpedia.org/resource/Central_Plains_War> <http://dbpedia.org/ontology/commander> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?commander WHERE {
  ?war dbo:wikiPageRedirects dbr:Central_Plains_War .
  ?commander dbo:nationality dbr:Saudi_Arabia ;
             dbo:occupation ?role .
  FILTER(CONTAINS(LCASE(?role), ""commander"") || CONTAINS(LCASE(?role), ""advisor""))
  OPTIONAL { ?war dbo:participant ?commander . }
}
```",1,2,2,1,1,3,2,20,0,0,1,0,0.0,0
826,34,train,"Give me the predecessor of Louis IV, Grand Duke of Hesse and spouse of the child of the father of Anna Magdalena Appel.","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/successor> <http://dbpedia.org/resource/Louis_IV,_Grand_Duke_of_Hesse> . <http://dbpedia.org/resource/Anna_Magdalena_Appel> <http://dbpedia.org/property/father> ?v2 . ?v1 <http://dbpedia.org/property/father> ?v2 . ?v1 <http://dbpedia.org/ontology/spouse> ?result . }","```sparql
SELECT ?predecessor WHERE {
  wd:Q1234567 wdt:P39 wd:Q7890123 . # Louis IV, Grand Duke of Hesse (replace with actual DBpedia ID)
  wd:Q7890123 wdt:P1365 ?predecessor . # Predecessor property
}
```

Note: Replace `wd:Q1234567` and `wd:Q7890123` with the correct DBpedia identifiers for Louis IV, Grand Duke of Hesse, and his position or title.",4,4,5,3,2,3,3,71,0,0,1,0,0.0,0
443,10,train,"Give me the birthplace of the person born, that is a musical artist and an artist, on 1949-11-20.","SELECT ?result WHERE { ?v0 <http://dbpedia.org/ontology/birthDate> ""1949-11-20""^^<http://www.w3.org/2001/XMLSchema#date> . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. ?v0 <http://dbpedia.org/ontology/birthPlace> ?result . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?birthPlace WHERE {
  ?person a dbo:Person ;
          dbo:birthDate ""1949-11-20""^^xsd:date ;
          dbo:occupation ?occupation .
  
  FILTER (
    EXISTS { ?person dbo:occupation dbr:Musical_artist . }
    && EXISTS { ?person dbo:occupation dbr:Artist . }
  )
  
  OPTIONAL { ?person dbp:birthPlace ?birthPlace . }
}
```",2,4,3,2,1,2,3,28,0,0,3,0,0.0,0
170,17,train,Give me the domain of Mayor and birth place of the awardee of People's Artist of Russia.,"SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/birthPlace> ?result . ?result <http://dbpedia.org/ontology/leaderTitle> ""Mayor""@en . ?v1 <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/People's_Artist_of_Russia> . }","```sparql
# Query to get the domain of Mayor
SELECT ?domain WHERE {
  ?class rdfs:subClassOf* dbo:Mayor .
  ?class rdfs:domain ?domain .
}

UNION

# Query to get the birth place of awardees of People's Artist of Russia
SELECT DISTINCT ?birthPlace WHERE {
  ?person dbo:award ""People's Artist of Russia""@en ;
          dbo:birthPlace ?birthPlace .
}
```",3,3,4,2,2,2,3,28,0,0,3,0,0.0,0
865,23,train,"Give me the native of the residence, that is a country, of the person decedent at Patna.",SELECT ?result WHERE { ?v0 <http://dbpedia.org/property/residence> ?v2 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. ?result <http://dbpedia.org/ontology/birthPlace> ?v2 . ?v0 <http://dbpedia.org/ontology/deathPlace> <http://dbpedia.org/resource/Patna> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?person ?nativeCountry WHERE {
  ?person dbo:deathPlace dbr:Patna .
  ?person dbo:residence ?residence .
  FILTER (isLiteral(?residence) && regex(str(?residence), ""country"", ""i""))
  ?residence dbo:nativeCountry ?nativeCountry .
}
```",3,4,4,3,1,3,3,71,0,0,1898,0,0.0,0
382,12,train,Give me the landmark at elevation of the award of Harry Combes and birthplace of Björn Joppe.,SELECT ?result WHERE { <http://dbpedia.org/resource/Björn_Joppe> <http://dbpedia.org/ontology/birthPlace> ?result . <http://dbpedia.org/resource/Harry_Combes> <http://dbpedia.org/property/awards> ?v0 . ?result <http://dbpedia.org/ontology/elevation> ?v0 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?landmark WHERE {
  # Find Harry Combes' award
  ?award dbo:recipient dbr:Harry_Combes .
  
  # Get the elevation of the award (assuming it's a geographical feature)
  OPTIONAL { ?award dbo:elevation ?elevation . }
  
  # Find Björn Joppe's birthplace
  ?bjorn dbo:birthPlace ?birthPlace .

  # Find landmarks in Björn Joppe's birthplace with the same elevation as the award
  ?landmark a dbo:Lighthouse ;
            dbo:elevation ?elevation ;
            dbo:location dbr:Björn_Joppe_birth_place .
}
```

Note: The query assumes that the award has an associated elevation and that Björn Joppe's birthplace is directly available. Adjustments may be needed based on actual data availability in DBpedia.",3,3,4,2,2,3,2,20,0,0,1,0,0.0,0
773,34,train,Give me the spouse of the father of the parent of Bernard (son of Charles the Fat) and parent of Charles the Fat.,SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/spouse> ?result . ?v2 <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Bernard_(son_of_Charles_the_Fat)> . ?v2 <http://dbpedia.org/property/father> ?v1 . <http://dbpedia.org/resource/Charles_the_Fat> <http://dbpedia.org/ontology/parent> ?result . },"```sparql
SELECT ?spouse WHERE {
  ?bernard dbo:parent dbc:Charles_the_Fat ;
           foaf:surname ""Bernard"" .
  
  ?parent dbo:child ?bernard .
  
  ?father dbo:spouse ?parent ;
          rdf:type dbo:Person .

  ?father dbo:spouse ?spouse .
}
```",4,4,5,3,2,3,3,71,0,0,1,0,0.0,0
326,6,train,Give me the professional in the profession of Susanne Lewis.,SELECT ?result WHERE { <http://dbpedia.org/resource/Susanne_Lewis> <http://dbpedia.org/property/occupation> ?v1 . ?result <http://dbpedia.org/property/occupation> ?v1 . },"```sparql
SELECT ?person ?name WHERE {
  # Find Susanne Lewis's profession
  ?susanne a dbo:Person ;
           foaf:name ""Susanne Lewis"" .
  
  # Get her profession
  ?susanne foaf:profession ?profession .

  # Find other people with the same profession
  ?person a dbo:Person ;
          foaf:profession ?profession ;
          foaf:name ?name .
  
  FILTER(?person != ?susanne) # Exclude Susanne Lewis from results
}
```",2,2,3,2,1,2,2,9,0,0,2223,0,0.0,0
216,38,train,"Give me the team of the person born, that is a sports manager and a soccer manager and a soccer player, on 1983-12-20 and player in the coach, that is a soccer player and a sports manager and a soccer manager, of Bosnia and Herzegovina national under-18 football team.","SELECT ?result WHERE { <http://dbpedia.org/resource/Bosnia_and_Herzegovina_national_under-18_football_team> <http://dbpedia.org/ontology/coach> ?v3 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerManager>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsManager>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsManager>. ?v2 <http://dbpedia.org/ontology/birthDate> ""1983-12-20""^^<http://www.w3.org/2001/XMLSchema#date> . ?v3 <http://dbpedia.org/ontology/team> ?result . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerPlayer>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerPlayer>. ?result <http://dbpedia.org/ontology/coach> ?v2 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerManager>. }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?person ?team WHERE {
  ?person dbo:birthDate ?date .
  FILTER (YEAR(?date) = 1983 && MONTH(?date) = 12 && DAY(?date) = 20)
  
  ?person dbo:sportsManager ?managerRole .
  ?person dbo:coach ?coachRole .
  ?person dbo:playerForTeam ?playerRole .

  ?person dbo:manager dbr:Bosnia_and_Herzegovina_national_under-18_football_team .

  OPTIONAL { 
    ?person dbo:currentTeam ?team .
  }
}
```",4,10,5,2,2,3,3,71,0,0,1,0,0.0,0
192,9,train,"Give me the spouse, that is a royalty, of the child of Charles II of Naples.",SELECT ?result WHERE { ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v0 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Charles_II_of_Naples> . ?result <http://dbpedia.org/ontology/spouse> ?v0 . },"```sparql
SELECT DISTINCT ?spouse WHERE {
  # Find Charles II of Naples
  wd:Q1234568 dbo:child ?child . 

  # Find the spouse of his children
  ?child dbo:spouse ?spouse .

  # Check if the spouse is royalty
  OPTIONAL { ?spouse rdf:type ?type . }
  FILTER (
    EXISTS {
      ?spouse rdf:type wd:Q5 .
    } ||
    EXISTS {
      ?spouse rdf:type ?royaltyType .
      VALUES ?royaltyType {
        wd:Q1184 # Monarch
        wd:Q13442814 # Royal person
        wd:Q11173 # Noble
      }
    }
  )
}
```

Note: `wd:Q1234568` is a placeholder for the actual DBpedia resource ID of Charles II of Naples. You would need to replace it with the correct identifier from DBpedia.",2,3,3,2,1,3,2,20,0,0,2,0,0.0,0
456,21,train,Give me the spouse of the actor of Pacific Drive and band of Alan Doyle.,SELECT ?result WHERE { <http://dbpedia.org/resource/Alan_Doyle> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . <http://dbpedia.org/resource/Pacific_Drive> <http://dbpedia.org/property/starring> ?v1 . ?v1 <http://dbpedia.org/ontology/spouse> ?result . },"```sparql
# Query for the spouse of the actor associated with ""Pacific Drive""
SELECT ?actor ?spouse WHERE {
  ?movie dcterms:title ""Pacific Drive""@en .
  ?movie dbo:starring ?actor .
  ?actor foaf:mbox ?email . # Ensures we have a valid person entry
  OPTIONAL { ?actor dbo:spouse ?spouse }
}

UNION

# Query for the band of Alan Doyle
SELECT ?band WHERE {
  ?person foaf:name ""Alan Doyle""@en ;
          dbo:member ?band .
}
```",3,3,4,2,2,3,3,71,0,0,1,0,0.0,0
456,28,train,Give me the band of Alan Doyle and professional in  and spouse of the actor of Pacific Drive.,"SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/spouse> ?result . <http://dbpedia.org/resource/Pacific_Drive> <http://dbpedia.org/property/starring> ?v1 . <http://dbpedia.org/resource/Alan_Doyle> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?result <http://dbpedia.org/property/occupation> """"@en . }","```sparql
# Query to get Alan Doyle's band
SELECT ?band WHERE {
  dbpedia:Alan_Doyle dbo:musicArtist <http://dbpedia.org/resource/Great_Big_Sea> .
}

# Assuming we find the actor associated with ""Pacific Drive"" (let's say it's an actor named ActorName)
# Query to get the spouse of that actor
SELECT ?spouse WHERE {
  dbpedia:ActorName dbo:spouse ?spouse .
}
```

Note: Replace `dbpedia:ActorName` with the actual DBpedia resource for the actor associated with ""Pacific Drive"" once identified.",4,4,5,2,3,3,3,71,0,0,1,0,0.0,0
933,10,train,Give me the band of The Ramong Sound and band of Mike Elliott (saxophonist).,SELECT ?result WHERE { <http://dbpedia.org/resource/Mike_Elliott_(saxophonist)> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . <http://dbpedia.org/resource/The_Ramong_Sound> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . },"```sparql
# Query for the band associated with ""The Ramong Sound""
SELECT ?band WHERE {
  ?entity rdfs:label ""The Ramong Sound""@en .
  ?entity dbo:associatedBand ?band .
}

UNION

# Query for the band associated with Mike Elliott (saxophonist)
SELECT ?band WHERE {
  ?person foaf:name ""Mike Elliott""@en ;
          dbo:instrument dbr:Saxophone ;
          dbo:memberOf ?band .
}
```",2,2,3,1,2,3,3,71,0,0,3,0,0.0,0
192,10,train,Give me the child of the parent of Anna of Hungary (Byzantine empress).,SELECT ?result WHERE { ?v0 <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Anna_of_Hungary_(Byzantine_empress)> . ?result <http://dbpedia.org/property/father> ?v0 . },"```sparql
SELECT ?child WHERE {
  wd:Q123456 wdt:P22 wd:Q789012 . # Anna of Hungary (Byzantine empress) P22 parent is Béla III of Hungary
  wd:Q789012 wdt:P40 ?child .    # Béla III of Hungary P40 child is ?
}
```

Note: The actual DBpedia identifiers for ""Anna of Hungary"" and ""Béla III of Hungary"" need to be replaced with their correct QIDs. In this example, `wd:Q123456` represents Anna of Hungary and `wd:Q789012` represents Béla III.",2,2,3,2,1,3,2,20,0,0,5,0,0.0,0
98,3,train,Give me the time zone of Lopez Jaena.,SELECT ?result WHERE { <http://dbpedia.org/resource/Lopez_Jaena> <http://dbpedia.org/ontology/timeZone> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?timeZone WHERE {
  ?place a dbo:Municipality ;
        rdfs:label ""Lopez Jaena""@en ;
        dbp:country ""Philippines"" .
  OPTIONAL { ?place dbo:timeZone ?timeZone }
}
```",1,1,2,1,1,2,3,28,0,0,1,0,0.0,0
508,2,train,"Give me the war, that is a military conflict and a societal event and an event, of Hayao Tada.",SELECT ?result WHERE { ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. <http://dbpedia.org/resource/Hayao_Tada> <http://dbpedia.org/ontology/battle> ?result . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. },"```sparql
PREFIX dbp: <http://dbpedia.org/property/>
PREFIX dbo: <http://dbpedia.org/ontology/>

SELECT ?war WHERE {
  ?person foaf:name ""Hayao Tada""@en .
  ?person dbo:associatedWith ?event .
  ?event a dbo:MilitaryConflict ;
         a dbo:SocietalEvent ;
         a dbo:Event .
  BIND(?event AS ?war)
}
```",1,4,2,1,1,3,2,20,0,0,5,0,0.0,0
645,7,train,Who is the native of Restoration (Spain)?,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Restoration_(Spain)> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?person ?name WHERE {
  ?person a dbo:Person .
  ?person dbo:birthPlace dbr:Restoration_(Spain) .
  OPTIONAL { ?person foaf:name ?name . }
}
```",1,1,2,1,1,3,3,71,0,0,217,0,0.0,0
93,14,train,"Give me the death place of the governor of the native, that is a politician, of Seattle.",SELECT ?result WHERE { ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v2 <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Seattle> . ?v0 <http://dbpedia.org/ontology/deathPlace> ?result . ?v2 <http://dbpedia.org/property/governor> ?v0 . },"```sparql
SELECT ?deathPlace WHERE {
  ?person dbo:nationality dbr:United_States ;
          dbo:birthPlace dbr:Seattle ;
          dbo:occupation dbr:Politician ;
          dbo:governmentRole dbr:Governor_of_Washington .
  ?person dbo:deathPlace ?deathPlace .
  FILTER (str(?person) = ""Gary_Locke"")
}
```",3,4,4,3,1,3,2,20,0,0,9,0,0.0,0
987,33,train,"Give me the birth place of the actor of the show, that is a film, with Emir Hadžihafizbegović and birth place of Dado Polumenta.",SELECT ?result WHERE { <http://dbpedia.org/resource/Dado_Polumenta> <http://dbpedia.org/ontology/birthPlace> ?result . ?v0 <http://dbpedia.org/ontology/starring> <http://dbpedia.org/resource/Emir_Hadžihafizbegović> . ?v0 <http://dbpedia.org/property/starring> ?v2 . ?v2 <http://dbpedia.org/ontology/birthPlace> ?result . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Film>. },"```sparql
# Query 1: Find a film featuring Emir Hadžihafizbegović, identify a related TV show, and get the birthplace of an actor

SELECT ?actorBirthPlace WHERE {
  # Step 1: Identify a film with Emir Hadžihafizbegović
  ?film dbo:starring dbpedia:Emir_Hadžihafizbegović .
  
  # Step 2: Find a TV show based on that film (assuming there's a direct relation in DBpedia)
  OPTIONAL { 
    ?tvShow dbo:filmBasedOn ?film .
    
    # Step 3: Get an actor from the TV show
    ?castMember dbo:actor dbp:roleIn ?tvShow .
    
    # Step 4: Retrieve birthplace of that actor
    ?castMember foaf:birthPlace ?birthPlace .
    BIND(STR(?birthPlace) AS ?actorBirthPlace)
  }
  
  # If no TV show is found, we can try to get the birthplace directly from Emir Hadžihafizbegović as a fallback
  FILTER NOT EXISTS { ?tvShow dbo:filmBasedOn ?film . }
  OPTIONAL {
    dbpedia:Emir_Hadžihafizbegović foaf:birthPlace ?birthPlace .
    BIND(STR(?birthPlace) AS ?actorBirthPlace)
  }
}
LIMIT 1

# Query 2: Get the birthplace of Dado Polumenta
SELECT ?polumentaBirthPlace WHERE {
  dbpedia:Dado_Polumenta foaf:birthPlace ?birthPlace .
  BIND(STR(?birthPlace) AS ?polumentaBirthPlace)
}
```",4,5,5,3,2,3,3,71,0,0,3,0,0.0,0
826,24,train,"Give me the predecessor of Louis IV, Grand Duke of Hesse and successor of the child, that is a royalty, of Louis I, Grand Duke of Hesse.","SELECT ?result WHERE { <http://dbpedia.org/resource/Louis_I,_Grand_Duke_of_Hesse> <http://dbpedia.org/ontology/child> ?v2 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?result <http://dbpedia.org/ontology/successor> <http://dbpedia.org/resource/Louis_IV,_Grand_Duke_of_Hesse> . ?v2 <http://dbpedia.org/ontology/successor> ?result . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?person WHERE {
  # Find the predecessor of Louis IV, Grand Duke of Hesse
  ?predecessor dbo:successor dbr:Louis_IV,_Grand_Duke_of_Hesse .
  
  # Find a child of Louis I, Grand Duke of Hesse with a royal successor
  ?child dbo:parent dbr:Louis_I,_Grand_Duke_of_Hesse ;
         dbo:successor ?royalSuccessor .

  FILTER EXISTS { ?royalSuccessor dbo:title ?title . FILTER(CONTAINS(LCASE(str(?title)), ""king"") || CONTAINS(LCASE(str(?title)), ""duke"") || CONTAINS(LCASE(str(?title)), ""prince"")) }

  # Ensure the predecessor is also a successor of one of Louis I's children
  ?predecessor dbo:successor ?child .
}
```",3,4,4,2,2,3,3,71,0,0,1,0,0.0,0
445,16,train,Who is the awardee of the establishment of 1820-03-10?,"SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/foundingDate> ""1820-03-10""^^<http://www.w3.org/2001/XMLSchema#date> . ?result <http://dbpedia.org/property/awards> ?v1 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?event ?awardee WHERE {
  ?event dbo:established ""1820-03-10""^^xsd:date .
  OPTIONAL { ?event dbo:awardee ?awardee . }
}
```",2,2,3,2,1,3,3,71,0,0,2,0,0.0,0
417,26,train,"Give me the child of the father of the leader, that is a royalty, of Colony of Greenland.",SELECT ?result WHERE { ?v1 <http://dbpedia.org/property/father> ?v2 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?result <http://dbpedia.org/property/father> ?v2 . <http://dbpedia.org/resource/Colony_of_Greenland> <http://dbpedia.org/property/leader> ?v1 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?child WHERE {
  ?leader dbo:country dbr:Greenland .
  ?leader dbo:monarch dbr:Christian_X_of_Denmark .
  ?father dbo:spouse ?mother .
  ?father dbo:child ?child .
  ?father dbr:Frederick_VIII_of_Denmark .
  ?child dbo:title ?title .
  FILTER(CONTAINS(LCASE(?title), ""princess"") || CONTAINS(LCASE(?title), ""king"") || CONTAINS(LCASE(?title), ""queen""))
}
```",3,4,4,3,1,3,3,71,0,0,2,0,0.0,0
136,3,train,Give me the award of Bret Anthony Johnston.,SELECT ?result WHERE { <http://dbpedia.org/resource/Bret_Anthony_Johnston> <http://dbpedia.org/property/awards> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?award WHERE {
  VALUES ?person { dbr:Bret_Anthony_Johnston }
  ?person dbo:awards ?award .
}
```",1,1,2,1,1,2,2,9,0,0,1,0,0.0,0
200,1,train,Give me the band member of Order from Chaos.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/associatedMusicalArtist> <http://dbpedia.org/resource/Order_from_Chaos> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?member WHERE {
  ?band rdf:type dbo:Band .
  ?band rdfs:label ""Order from Chaos""@en .
  ?band dbo:bandMember ?member .
}
```",1,1,2,1,1,2,2,9,0,0,2,0,0.0,0
987,3,train,"Who is the band, that is an artist, of Dado Polumenta?",SELECT ?result WHERE { ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. <http://dbpedia.org/resource/Dado_Polumenta> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?band WHERE {
  ?artist a dbo:MusicalArtist ;
          foaf:name ""Dado Prso"" .
  
  ?artist dbo:member ?band .
}
```",1,2,2,1,1,3,3,71,0,0,1,0,0.0,0
36,5,train,Give me the birth name of Ayo Makun.,SELECT ?result WHERE { <http://dbpedia.org/resource/Ayo_Makun> <http://dbpedia.org/property/birthName> ?result . },"```sparql
PREFIX foaf: <http://xmlns.com/foaf/0.1/>
PREFIX dbpedia-owl: <http://dbpedia.org/ontology/>

SELECT ?birthName WHERE {
  ?person a dbpedia-owl:Person ;
          foaf:name ""Ayo Makun"" .
  OPTIONAL { 
    ?person foaf:givenName ?birthName .
  }
}
```",1,1,2,1,1,2,3,28,0,0,1,0,0.0,0
976,21,train,"Give me the office of Naci Bostancı and office of the leader, that is a politician, of Grand National Assembly of Turkey.",SELECT ?result WHERE { ?v2 <http://dbpedia.org/property/office> ?result . <http://dbpedia.org/resource/Grand_National_Assembly_of_Turkey> <http://dbpedia.org/ontology/leader> ?v2 . <http://dbpedia.org/resource/Naci_Bostancı> <http://dbpedia.org/property/office> ?result . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. },"```sparql
# Query to find the office held by Naci Bostancı
SELECT ?office WHERE {
  ?person rdfs:label ""Naci Bostancı""@en .
  ?person dbo:occupation ?office .
}

UNION

# Query to find the office of the leader (Speaker) of the Grand National Assembly of Turkey
SELECT ?office WHERE {
  ?assembly rdfs:label ""Grand National Assembly of Turkey""@en .
  ?assembly dbo:leader ?speaker .
  ?speaker dbo:position ?office .
}
```",3,4,4,2,2,3,3,71,0,0,1,0,0.0,0
573,17,train,"Who is the author, that is a politician and an office holder, of the work of John Quincy Adams?",SELECT ?result WHERE { ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v1 <http://dbpedia.org/property/author> ?result . ?v1 <http://dbpedia.org/property/author> <http://dbpedia.org/resource/John_Quincy_Adams> . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?author WHERE {
  ?work dbo:author dbr:John_Quincy_Adams .
  ?work dbo:genre ?genre .
  FILTER(?genre IN (""Diary"", ""Political memoir""))
  
  OPTIONAL { 
    ?work dbo:subject ?subject .
    FILTER(CONTAINS(LCASE(STR(?subject)), ""politics"") || CONTAINS(LCASE(STR(?subject)), ""government""))
  }
  
  ?author dbo:wikiPageRedirects ?work .
}
```",2,4,3,2,1,3,3,71,0,0,1,0,0.0,0
273,14,train,Give me the parent of the alumnus of the reference to Università degli Studi di Torino.,"SELECT ?result WHERE { ?v0 <http://dbpedia.org/ontology/parent> ?result . ?v2 <http://xmlns.com/foaf/0.1/name> ""Università degli Studi di Torino""@en . ?v0 <http://dbpedia.org/ontology/almaMater> ?v2 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?alumnus ?parent WHERE {
  # Resource for Università degli Studi di Torino
  VALUES ?university { dbr:Universit%C3%A0_degli_Studi_di_Torino }

  # Find alumni of the university
  ?alumnus dbo:almaMater ?university .

  # Get parent information for each alumnus
  OPTIONAL {
    ?alumnus dbo:parent ?parent .
  }
}
```",3,3,4,3,1,3,2,20,0,0,2,0,0.0,0
433,37,train,"Give me the associated musical artist of the associated musical artist, that is an artist and a musical artist, of the associated musical artist, that is a musical artist and an artist, of Ornette Coleman and professional in Musician.","SELECT ?result WHERE { ?v0 <http://dbpedia.org/ontology/associatedMusicalArtist> ?v3 . ?result <http://dbpedia.org/property/occupation> ""Musician""@en . ?v3 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. <http://dbpedia.org/resource/Ornette_Coleman> <http://dbpedia.org/ontology/associatedMusicalArtist> ?v0 . }","```sparql
SELECT DISTINCT ?finalArtist WHERE {
  # Step 1: Find an associated musical artist of Ornette Coleman
  ?coleman dbo:associatedMusicalArtist ?firstArtist .
  FILTER (?coleman = dbpedia:Ornette_Coleman) .

  # Step 2: From the first artist, find another who is both a musician and an artist
  ?firstArtist dbo:associatedMusicalArtist ?secondArtist ;
              rdf:type dbo:Musician ;
              dbo:profession dbpedia:Musician .
  
  # Ensure the second artist is also recognized as an artist (visual arts)
  ?secondArtist rdf:type dbo:Artist .

  # Step 3: From this second artist, find another associated musical artist who is also an artist
  ?secondArtist dbo:associatedMusicalArtist ?thirdArtist ;
                rdf:type dbo:Musician ;
                dbo:profession dbpedia:Musician .
  
  # Ensure the third artist is recognized as an artist (visual arts)
  ?thirdArtist rdf:type dbo:Artist .

  # Step 4: Find the final associated musical artist
  ?thirdArtist dbo:associatedMusicalArtist ?finalArtist .
}
```",4,8,5,3,2,3,3,71,0,0,38,0,0.0,0
5,1,train,Give me the entity in Canada.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Canada> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?entity WHERE {
  ?entity dbo:country dbr:Canada .
}
LIMIT 10
```",1,1,2,1,1,3,2,20,10,0,18550,1.0,0.0005387931034482759,0.0010770059235325794
170,6,train,Give me the birth place of Era Ziganshina and entity in Russia.,SELECT ?result WHERE { <http://dbpedia.org/resource/Era_Ziganshina> <http://dbpedia.org/ontology/birthPlace> ?result . ?result <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Russia> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?birthPlace WHERE {
  ?person dbo:birthName ""Era Ziganshina""@en.
  ?person dbo:birthPlace ?birthPlace.
  FILTER EXISTS { ?birthPlace dbo:country dbr:Russia }
}
```",2,2,3,1,2,2,3,28,0,0,1,0,0.0,0
892,18,train,Give me the entity in Province of Reggio Emilia and landmark at elevation of 58 and entity in Italy.,"SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/province> <http://dbpedia.org/resource/Province_of_Reggio_Emilia> . ?result <http://dbpedia.org/ontology/elevation> ""58""^^<http://www.w3.org/2001/XMLSchema#integer> . ?result <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Italy> . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?entity WHERE {
  ?entity dbo:locatedIn ?location .
  ?location rdfs:label ""Province of Reggio Emilia""@en .
  
  OPTIONAL { 
    ?landmark dbo:elevation ?elevation ;
              dbo:partOf ?entity .
    FILTER (?elevation = 58)
  }
  
  ?entity dbo:country ?country .
  ?country rdfs:label ""Italy""@en .
}
```",3,3,4,1,3,3,3,71,0,0,1,0,0.0,0
579,12,train,"Give me the native of Edinburgh and person born as the birth name of Jane Percy, Duchess of Northumberland.","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Edinburgh> . ?result <http://dbpedia.org/property/birthName> ?v0 . <http://dbpedia.org/resource/Jane_Percy,_Duchess_of_Northumberland> <http://dbpedia.org/property/birthName> ?v0 . }","```sparql
# Query to find the native of Edinburgh
SELECT ?person WHERE {
  ?person dbo:birthPlace dbr:Edinburgh .
}

UNION

# Query to find the person born as Jane Percy, Duchess of Northumberland's birth name
SELECT ?person WHERE {
  ?jane a dbo:Person ;
        foaf:name ""Jane Percy""@en ;
        dbp:title ""Duchess of Northumberland"" ;
        foaf:givenName ?birthFirstName ;
        foaf:surname ?birthLastName .
  
  ?person foaf:givenName ?birthFirstName ;
          foaf:surname ?birthLastName .
}
```",3,3,4,2,2,3,2,20,0,0,1,0,0.0,0
459,13,train,"Give me the governor of Dana Murphy and governor of the death place, that is a settlement, of Cliff Roquemore.",SELECT ?result WHERE { ?v1 <http://dbpedia.org/property/governor> ?result . <http://dbpedia.org/resource/Cliff_Roquemore> <http://dbpedia.org/ontology/deathPlace> ?v1 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. <http://dbpedia.org/resource/Dana_Murphy> <http://dbpedia.org/property/governor> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?governorDanaMurphy ?governorCliffRoquemore WHERE {
  # Find the governor of Dana Murphy's birthplace
  OPTIONAL {
    ?danaMurphy dbo:birthPlace ?birthPlaceDana.
    ?birthPlaceDana dbo:governor ?governorDanaMurphy.
    FILTER EXISTS { dbr:Dana_Murphy dbo:birthPlace ?birthPlaceDana }
  }

  # Find the governor of Cliff Roquemore's death place if it is a settlement
  OPTIONAL {
    ?cliffRoquemore dbo:deathPlace ?deathPlaceCliff.
    ?deathPlaceCliff rdf:type dbo:Settlement.
    ?deathPlaceCliff dbo:governor ?governorCliffRoquemore.
    FILTER EXISTS { dbr:Cliff_Roquemore dbo:deathPlace ?deathPlaceCliff }
  }
}
```",3,4,4,2,2,2,3,28,0,0,1,0,0.0,0
170,2,train,Give me the domain of Mayor.,"SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/leaderTitle> ""Mayor""@en . }","```sparql
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?domain WHERE {
  ?mayorClass rdfs:label ""Mayor""@en.
  ?mayorClass a owl:Class.
  OPTIONAL { ?mayorClass rdfs:subClassOf ?domain. }
}
```",1,1,2,1,1,2,3,28,0,0,39395,0,0.0,0
773,25,train,"Give me the parent of Carloman of Bavaria and parent of the child, that is a royalty, of Louis the German.",SELECT ?result WHERE { ?v1 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Louis_the_German> . ?result <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Carloman_of_Bavaria> . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v1 <http://dbpedia.org/ontology/parent> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?parentOfCarloman ?royalChild ?parentOfRoyalChild WHERE {
  # Find the parent of Carloman of Bavaria
  dbr:Carloman_of_Bavaria dbo:child dbr:?person .
  dbr:?person dbo:spouse ?parentOfCarloman .

  UNION

  # Find children of Louis the German who are royalty and their parents
  dbr:Louis_the_German dbo:child dbr:?royalChild .
  OPTIONAL { 
    ?royalChild dbo:title ?title .
    FILTER(CONTAINS(LCASE(?title), ""king"") || CONTAINS(LCASE(?title), ""queen"") || CONTAINS(LCASE(?title), ""duke"") || CONTAINS(LCASE(?title), ""prince""))
  }
  
  # Find the parent of the royal child
  dbr:?royalChild dbo:spouse ?parentOfRoyalChild .
}
```",3,4,4,2,2,3,3,71,0,0,2,0,0.0,0
98,11,train,"Give me the entity in the region, that is a country, of Philippine Standard Time.",SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. ?v1 <http://dbpedia.org/property/timeZone> <http://dbpedia.org/resource/Philippine_Standard_Time> . ?result <http://dbpedia.org/ontology/country> ?v1 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?country WHERE {
  ?timeZone dbo:timezoneOffset ""+08:00"" .
  ?timeZone dbo:country dbr:Philippines .
  OPTIONAL { ?timeZone dbo:country ?country . FILTER(?country != dbr:Philippines) }
}
```",2,3,3,2,1,2,3,28,0,0,5332,0,0.0,0
892,22,train,"Give me the entity in Italy and entity in the administration, that is Italian and a region and a settlement and an administrative region, of Democratic Party (Italy).",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/province> ?v0 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/AdministrativeRegion>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Region>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. ?v0 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Italy>. ?v0 <http://dbpedia.org/property/leaderParty> <http://dbpedia.org/resource/Democratic_Party_(Italy)> . ?result <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Italy> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?region ?settlement WHERE {
  ?region a dbo:Region ;
          dbo:country dbr:Italy ;
          dbo:administrativeRegion true .
  
  ?region dbo:settlement ?settlement .

  OPTIONAL { 
    ?party dbo:member ?person .
    ?person dbo:residence ?region .
    FILTER (str(?party) = ""Democratic Party (Italy)"")
  }
}
```",3,7,4,2,2,3,3,71,0,0,587,0,0.0,0
987,12,train,Give me the birth place of Moamer Kasumović and entity in Montenegro.,SELECT ?result WHERE { <http://dbpedia.org/resource/Moamer_Kasumović> <http://dbpedia.org/ontology/birthPlace> ?result . ?result <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Montenegro> . },"```sparql
# Query to find the birth place of Moamer Kasumović (Muammar Gaddafi)
SELECT ?birthPlace WHERE {
  wd:Q1798 dbo:birthPlace ?birthPlace .
}

# Query to find an entity in Montenegro
SELECT DISTINCT ?entity ?label WHERE {
  ?entity wdt:P17 wd:Q30 ; # P17 is the property for country, Q30 is the identifier for Montenegro
           rdfs:label ?label .
  FILTER (LANG(?label) = 'en')
}
LIMIT 1
```",2,2,3,1,2,3,3,71,0,0,1,0,0.0,0
216,19,train,Give me the player in the coach of Croatia national under-21 football team and player in Mario Ivanković.,SELECT ?result WHERE { <http://dbpedia.org/resource/Mario_Ivanković> <http://dbpedia.org/ontology/team> ?result . <http://dbpedia.org/resource/Croatia_national_under-21_football_team> <http://dbpedia.org/ontology/coach> ?v0 . ?v0 <http://dbpedia.org/ontology/team> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?player WHERE {
  # Find the coach(s) of the Croatia national under-21 football team
  ?team dbo:coach ?coach .
  
  FILTER(?team = dbr:Croatia_national_under-21_football_team)

  # Check if Mario Ivanković is one of these coaches
  OPTIONAL { 
    ?coach rdfs:label ""Mario Ivanković""@en .
  }

  # Find players associated with him during his time as a coach
  ?team dbo:player ?player .

  FILTER EXISTS {
    ?coach rdfs:label ""Mario Ivanković""@en .
  }
}
```",3,3,4,2,2,3,3,71,0,0,3,0,0.0,0
166,0,train,Give me the resting place of Gonzalo Queipo de Llano.,SELECT ?result WHERE { <http://dbpedia.org/resource/Gonzalo_Queipo_de_Llano> <http://dbpedia.org/ontology/restingPlace> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?burialPlace WHERE {
  ?person rdfs:label ""Gonzalo Queipo de Llano""@en .
  OPTIONAL { ?person dbo:deathPlace ?deathPlace . }
  OPTIONAL { ?person dbo:burialPlace ?burialPlace . }
  FILTER(LANG(?person) = 'en')
}
```",1,1,2,1,1,3,2,20,0,0,1,0,0.0,0
573,10,train,Give me the person decedent at Massachusetts and parent of John Quincy Adams.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/deathPlace> <http://dbpedia.org/resource/Massachusetts> . <http://dbpedia.org/resource/John_Quincy_Adams> <http://dbpedia.org/ontology/parent> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT ?mother ?motherName WHERE {
  ?johnQuincyAdams foaf:name ""John Quincy Adams""@en .
  ?johnQuincyAdams dbo:child ?person .
  ?person dbo:parent ?mother .
  ?mother foaf:name ?motherName .
  ?mother dbo:deathPlace ?deathPlace .
  FILTER(CONTAINS(LCASE(STR(?deathPlace)), ""massachusetts""))
}
```",2,2,3,1,2,3,3,71,0,0,2,0,0.0,0
453,1,train,Give me the religion of John Henry Newman.,SELECT ?result WHERE { <http://dbpedia.org/resource/John_Henry_Newman> <http://dbpedia.org/ontology/religion> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?religion WHERE {
  dbr:John_Henry_Newman dbo:religion ?religion .
}
```",1,1,2,1,1,2,2,9,2,0,0,1.0,1.0,1.0
874,11,train,"Give me the band of Robert Hart (musician) and band of the writer, that is an artist and a musical artist, of Mezzanine (album).",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/bandMember> ?v2 . <http://dbpedia.org/resource/Mezzanine_(album)> <http://dbpedia.org/property/writer> ?v2 . ?result <http://dbpedia.org/ontology/bandMember> <http://dbpedia.org/resource/Robert_Hart_(musician)> . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. },"```sparql
SELECT DISTINCT ?band1 ?band2 WHERE {
  # Find the band associated with Robert Hart
  ?person dbo:name ""Robert Hart""@en .
  ?person dbo:member ?band1 .

  # Find the band associated with the album Mezzanine
  ?album dbo:title ""Mezzanine""@en ;
         dbo:artist ?band2 .
}
```",3,5,4,2,2,3,2,20,0,0,1,0,0.0,0
791,35,train,"Give me the father of the child, that is a royalty, of Emperor Takakura and spouse of the spouse, that is a royalty, of Emperor Takakura.",SELECT ?result WHERE { ?v1 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Emperor_Takakura> . ?v2 <http://dbpedia.org/ontology/spouse> <http://dbpedia.org/resource/Emperor_Takakura> . ?result <http://dbpedia.org/ontology/spouse> ?v2 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v1 <http://dbpedia.org/property/father> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?child ?father WHERE {
  # Identify Emperor Takakura and his spouse
  dbr:Takakura_of_Japan a dbo:Monarch ;
                        dbo:spouse ?spouse .
  
  # Ensure the spouse is royalty
  ?spouse a dbo:RoyalFamilyMember .

  # Find their child who is also royalty
  ?child dbo:parent dbr:Takakura_of_Japan ;
         dbo:parent ?spouse ;
         a dbo:RoyalFamilyMember .

  # Confirm the father of this child
  ?father dbo:child ?child .
  
  FILTER(?father = dbr:Takakura_of_Japan)
}
```",4,6,5,2,2,3,3,71,0,0,1,0,0.0,0
124,4,train,"Give me the war, that is a societal event and a military conflict, of A Field Battery, Royal Australian Artillery.","SELECT ?result WHERE { ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. <http://dbpedia.org/resource/A_Field_Battery,_Royal_Australian_Artillery> <http://dbpedia.org/ontology/battle> ?result . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?war WHERE {
  ?unit dbo:partOf ?conflict .
  ?conflict a dbo:MilitaryConflict ;
           rdfs:label ?warLabel .
  FILTER(CONTAINS(LCASE(?warLabel), ""royal australian artillery"") || CONTAINS(LCASE(?warLabel), ""a field battery""))
  FILTER(langMatches(lang(?warLabel), ""en""))
}
```",1,3,2,1,1,3,3,71,0,0,6,0,0.0,0
443,4,train,"Who is the person born, that is a musical artist and an artist, on 1949-11-20?","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/birthDate> ""1949-11-20""^^<http://www.w3.org/2001/XMLSchema#date> . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?person ?name WHERE {
  ?person a dbo:MusicalArtist .
  ?person dbo:musicalArtist true .
  ?person dbo:artist true .
  ?person dbo:birthDate ""1949-11-20""^^xsd:date .
  ?person foaf:name ?name .
}
```",1,3,2,1,1,2,3,28,0,0,2,0,0.0,0
158,10,train,"Who is the successor, that is a prime minister and an office holder and a politician, of the person deceased, that is an office holder and a politician, on 1945-09-15?","SELECT ?result WHERE { ?v0 <http://dbpedia.org/ontology/successor> ?result . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/PrimeMinister>. ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v0 <http://dbpedia.org/ontology/deathDate> ""1945-09-15""^^<http://www.w3.org/2001/XMLSchema#date> . }","```sparql
SELECT ?deceased ?successor WHERE {
  ?deceased dbo:deathDate ""1945-09-15""^^xsd:date ;
            a dbo:OfficeHolder, dbo:Politician .
  
  OPTIONAL { 
    ?office dbo:incumbent ?deceased ;
            dbo:incumbentAfter ?dateBeforeDeath ;
            dbo:incumbentEnd ?dateOfDeath .
    
    ?office dbo:incumbent ?successor ;
            dbo:incumbentStart ?dateAfterDeath .
  }
  
  FILTER (?dateBeforeDeath < ""1945-09-15""^^xsd:date && 
          ?dateOfDeath >= ""1945-09-15""^^xsd:date &&
          ?dateAfterDeath > ""1945-09-15""^^xsd:date)
  
  ?successor a dbo:PrimeMinister, dbo:OfficeHolder, dbo:Politician .
}
```",2,7,3,2,1,3,2,20,0,0,1,0,0.0,0
791,32,train,"Give me the predecessor of the child of Emperor Takakura and spouse of the spouse, that is a royalty, of Emperor Takakura.",SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/spouse> <http://dbpedia.org/resource/Emperor_Takakura> . ?v3 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Emperor_Takakura> . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?result <http://dbpedia.org/ontology/successor> ?v3 . ?result <http://dbpedia.org/ontology/spouse> ?v1 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?predecessor WHERE {
  # Step 1: Identify Emperor Takakura's child
  ?child dbo:parent dbr:Takakura_Emperor .
  
  # Step 2: Find the predecessor of that child
  ?child dbo:successor ?predecessor .

  # Step 3: Identify the spouse of Emperor Takakura
  ?spouse dbo:spouse dbr:Takakura_Emperor .

  # Step 4 & 5: Ensure the predecessor is a royalty and connected through these relationships
  FILTER EXISTS { ?predecessor a dbo:Monarch . }
}
```",4,5,5,2,2,3,3,71,0,0,1,0,0.0,0
933,15,train,"Who is the band of the band, that is an artist and a musical artist, of The Ramong Sound?",SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. <http://dbpedia.org/resource/The_Ramong_Sound> <http://dbpedia.org/ontology/associatedMusicalArtist> ?v1 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?v1 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . },"```sparql
SELECT ?member WHERE {
  ?band rdf:type dbo:Band ;
        foaf:name ""Ramones""@en .
  ?member dbo:band ?band ;
          a dbo:MusicalArtist .
}
```",2,4,3,2,1,3,3,71,0,0,16,0,0.0,0
892,28,train,Give me the entity in the profession of Henri Crolla and landmark at elevation of 58 and entity in Province of Reggio Emilia.,"SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/province> <http://dbpedia.org/resource/Province_of_Reggio_Emilia> . ?result <http://dbpedia.org/ontology/elevation> ""58""^^<http://www.w3.org/2001/XMLSchema#integer> . ?result <http://dbpedia.org/ontology/country> ?v1 . <http://dbpedia.org/resource/Henri_Crolla> <http://dbpedia.org/property/occupation> ?v1 . }","```sparql
# Query 1: Profession of Henri Crolla
SELECT ?profession WHERE {
  dbpedia:Henri_Crolla dbo:occupation ?profession .
}

# Query 2: Landmark at Elevation of 58
SELECT ?landmark WHERE {
  ?landmark a dbo:Lighthouse ;
            dbo:elevationAboveSeaLevel ""58""^^xsd:integer .
}

# Query 3: Entity in Province of Reggio Emilia
SELECT ?entity WHERE {
  ?entity dbo:locatedIn dbpedia:Province_of_Reggio_Emilia .
}
```",4,4,5,2,3,3,3,71,0,0,1,0,0.0,0
573,21,train,"Give me the parent of John Quincy Adams and person decedent at the administration, that is a region, of Charlie Baker.","SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Region>. ?result <http://dbpedia.org/ontology/deathPlace> ?v1 . ?v1 <http://dbpedia.org/property/governor> ""Charlie Baker""@en . <http://dbpedia.org/resource/John_Quincy_Adams> <http://dbpedia.org/ontology/parent> ?result . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?parent ?decedent WHERE {
  # Find the parent of John Quincy Adams
  ?johnQuincyAdams dbo:birthName ""John Quincy Adams""@en .
  ?johnQuincyAdams dbo:parent ?parent .

  # Find Charlie Baker's administration and decedents who are regions
  ?charlieBaker dbp:office ""Governor of Massachusetts"" ;
                dbo:termStart ?start ;
                dbo:termEnd ?end .

  ?decedent dbo:decedentOf ?charlieBaker ;
            a dbo:Region .

  # Ensure the decedent is within the administration period
  FILTER (?start <= ?decedentStartDate && ?decedentEndDate <= ?end)
}
```",3,4,4,2,2,3,3,71,0,0,2,0,0.0,0
124,6,train,"Give me the war, that is an event and a military conflict and a societal event, of Frank Rhodes (British Army officer).",SELECT ?result WHERE { ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. <http://dbpedia.org/resource/Frank_Rhodes_(British_Army_officer)> <http://dbpedia.org/ontology/battle> ?result . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?war WHERE {
  ?officer a dbo:BritishArmyOfficer ;
           foaf:name ""Frank Rhodes""@en .
  
  ?officer dbo:servedIn ?war .

  ?war a dbo:Event, dbo:MilitaryConflict, dbo:SocietalEvent .
}
```",1,4,2,1,1,3,3,71,0,0,7,0,0.0,0
98,2,train,Give me the entity in Philippines.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Philippines> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?entity ?label WHERE {
  VALUES ?country { dbr:Philippines }
  
  ?entity dbo:country ?country .
  SERVICE wikibase:label { bd:serviceParam wikibase:language ""[AUTO_LANGUAGE],en"". }
}
LIMIT 100
```",1,1,2,1,1,2,3,28,0,0,5314,0,0.0,0
965,29,train,"Give me the parent of George Mountbatten, 2nd Marquess of Milford Haven and parent of the child, that is a royalty, of Prince Louis of Battenberg and spouse of Prince Louis of Battenberg.","SELECT ?result WHERE { <http://dbpedia.org/resource/George_Mountbatten,_2nd_Marquess_of_Milford_Haven> <http://dbpedia.org/ontology/parent> ?result . ?result <http://dbpedia.org/ontology/spouse> <http://dbpedia.org/resource/Prince_Louis_of_Battenberg> . ?v3 <http://dbpedia.org/ontology/parent> ?result . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v3 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Prince_Louis_of_Battenberg> . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?parent WHERE {
  # George Mountbatten, 2nd Marquess of Milford Haven's parent
  OPTIONAL { 
    dbr:George_Mountbatten_2nd_Marquess_of_Milford_Haven dbo:mother dbr:Louise_of_Battenberg .
    dbr:Louise_of_Battenberg dbo:parent ?parent .
  }

  # Prince Louis of Battenberg's child who is royalty
  OPTIONAL {
    dbr:Prince_Louis_of_Battenberg dbo:child dbr:Philip_Duke_of_Edmonton .
    dbr:Philip_Duke_of_Edmonton dbo:parent ?royaltyParent .
  }

  # Spouse of Prince Louis of Battenberg
  OPTIONAL {
    dbr:Prince_Louis_of_Battenberg dbo:spouse dbr:Victoria_of_Hesse_and_by_Rhine .
  }
  
  FILTER(?parent = ?royaltyParent)
}
```",4,5,5,2,3,3,3,71,0,0,1,0,0.0,0
445,34,train,"Give me the entity in the residence, that is a country, of the resident, that is an athlete, of Great Britain and entity in United Kingdom.",SELECT ?result WHERE { ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Athlete>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. ?v2 <http://dbpedia.org/property/residence> <http://dbpedia.org/resource/Great_Britain> . ?result <http://dbpedia.org/ontology/location> ?v1 . ?v2 <http://dbpedia.org/property/residence> ?v1 . ?result <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/United_Kingdom> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?country WHERE {
  ?athlete a dbo:Athlete ;
           dbo:nationality dbr:United_Kingdom .
  
  ?athlete dbo:residence ?residence .

  ?residence dbo:country ?country .
  
  FILTER EXISTS { 
    ?uk dbr:United_Kingdom ;
        dbo:part dbr:?country .
  }
}
```",4,6,5,3,2,3,3,71,0,0,102,0,0.0,0
274,12,train,Give me the professional in  and band member of Dizzy Gillespie and associated musical artist of Cecil Taylor.,"SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/associatedMusicalArtist> <http://dbpedia.org/resource/Dizzy_Gillespie> . ?result <http://dbpedia.org/property/occupation> """"@en . <http://dbpedia.org/resource/Cecil_Taylor> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?person WHERE {
  # Find a person who was a band member of Dizzy Gillespie
  ?person dbo:bandMemberOf dbr:Dizzy_Gillespie .
  
  # Ensure the same person is associated with Cecil Taylor as a musical artist
  ?association dbo:musicalArtist dbr:Cecil_Taylor ;
               dbo:associatedMusicalArtist ?person .
}
```",3,3,4,1,3,2,3,28,0,0,1,0,0.0,0
124,24,train,"Give me the military force of the war, that is an event and a military conflict and a societal event, of Frank Rhodes (British Army officer) and military force of Battle of Atbara.",SELECT ?result WHERE { ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?result <http://dbpedia.org/ontology/battle> <http://dbpedia.org/resource/Battle_of_Atbara> . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?result <http://dbpedia.org/ontology/battle> ?v2 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. <http://dbpedia.org/resource/Frank_Rhodes_(British_Army_officer)> <http://dbpedia.org/ontology/battle> ?v2 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?militaryForce1 ?militaryForce2 WHERE {
  # Find military force associated with Frank Rhodes
  ?event dbo:agent dbr:Frank_Rhodes ;
         dbo:militaryConflict ?conflict .
  ?conflict dbo:participatingMilitaryUnit ?militaryForce1 .

  # Find military force associated with the Battle of Atbara
  dbr:Battle_of_Atbara dbo:militaryConflict ?battleEvent .
  ?battleEvent dbo:participatingMilitaryUnit ?militaryForce2 .
}
```",3,6,4,2,2,3,3,71,0,0,7,0,0.0,0
508,11,train,"Give me the birthplace of the commander, that is a politician, in 1939–1940 Winter Offensive and birthplace of Ma Bufang.",SELECT ?result WHERE { <http://dbpedia.org/resource/1939–1940_Winter_Offensive> <http://dbpedia.org/ontology/commander> ?v2 . ?v2 <http://dbpedia.org/ontology/birthPlace> ?result . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. <http://dbpedia.org/resource/Ma_Bufang> <http://dbpedia.org/ontology/birthPlace> ?result . },"```sparql
SELECT ?birthPlace WHERE {
  # Find the birthplace of Semyon Timoshenko
  OPTIONAL { 
    wd:Q12345 dbo:birthPlace ?timoshenkoBirthPlace .
    BIND(?timoshenkoBirthPlace AS ?birthPlace)
  }
  
  # Find the birthplace of Ma Bufang
  OPTIONAL {
    wd:Q67890 dbo:birthPlace ?maBufangBirthPlace .
    BIND(?maBufangBirthPlace AS ?birthPlace)
  }
}
```

Note: Replace `wd:Q12345` with the actual DBpedia identifier for Semyon Timoshenko and `wd:Q67890` with the identifier for Ma Bufang. You can find these identifiers by searching their names on DBpedia.",3,4,4,2,2,3,2,20,0,0,3,0,0.0,0
965,9,train,Give me the parent of Louise Mountbatten and spouse of Prince Louis of Battenberg.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/spouse> <http://dbpedia.org/resource/Prince_Louis_of_Battenberg> . <http://dbpedia.org/resource/Louise_Mountbatten> <http://dbpedia.org/ontology/parent> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?individual WHERE {
  # Find the parent of Louise Mountbatten
  ?louiseMountbatten dbo:parent ?individual .
  FILTER(STR(?louiseMountbatten) = ""Louise_Mountbatten"")

  # Check if this individual is also a spouse of Prince Louis of Battenberg
  OPTIONAL {
    ?princeLouis dbp:spouse ?individual .
    FILTER(STR(?princeLouis) = ""Prince_Louis_of_Battenberg"")
  }
}
```",2,2,3,1,2,3,3,71,0,0,1,0,0.0,0
495,4,train,Give me the parent of Princess Pauline of Württemberg (1810–1856).,SELECT ?result WHERE { <http://dbpedia.org/resource/Princess_Pauline_of_Württemberg_(1810–1856)> <http://dbpedia.org/ontology/parent> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?parent WHERE {
    ?person a dbo:Person ;
            foaf:name ""Pauline"" ;
            dbo:birthYear ""1810"" .
    OPTIONAL { ?person dbo:parent ?parent . }
}
```",1,1,2,1,1,3,2,20,0,0,2,0,0.0,0
978,3,train,"Who is the professional, that is a musical artist and an artist, in ?","SELECT ?result WHERE { ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?result <http://dbpedia.org/property/occupation> """"@en . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?person WHERE {
  ?person a dbo:MusicalArtist .
  ?person a dbo:Artist .
}
```",1,3,2,1,1,3,2,20,8677,58212,0,0.12972237587645202,1.0,0.22965354789190903
365,9,train,"Give me the birth name of the commander, that is an office holder, in Ukrainian–Soviet War.",SELECT ?result WHERE { <http://dbpedia.org/resource/Ukrainian–Soviet_War> <http://dbpedia.org/ontology/commander> ?v0 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v0 <http://dbpedia.org/property/birthName> ?result . },"```sparql
SELECT ?birthName WHERE {
  wd:Q12345 rdfs:label ""Symon Petliura""@en .
  wd:Q12345 foaf:name ?name .
  wd:Q12345 schema:birthName ?birthName .
}
```

Note: The entity ID `wd:Q12345` is a placeholder and should be replaced with the actual DBpedia identifier for Symon Petliura. You can find this by searching DBpedia or using an appropriate SPARQL query to identify his unique identifier.",2,3,3,2,1,3,2,20,0,0,2,0,0.0,0
892,32,train,Give me the entity in the profession of Henri Crolla and landmark at elevation of the award of Anna Ishii.,SELECT ?result WHERE { <http://dbpedia.org/resource/Anna_Ishii> <http://dbpedia.org/property/awards> ?v3 . <http://dbpedia.org/resource/Henri_Crolla> <http://dbpedia.org/property/occupation> ?v1 . ?result <http://dbpedia.org/ontology/elevation> ?v3 . ?result <http://dbpedia.org/ontology/country> ?v1 . },"```sparql
# Query for Henri Crolla's profession
SELECT ?profession WHERE {
  dbpedia:Henri_Crolla dbo:occupation ?profession .
}

# Assuming we have identified the location or context of Anna Ishii's award, 
# and it is associated with a specific elevation (e.g., a city or mountain), 
# we would then query for landmarks at that elevation.
# This part requires additional information about the award's location.

# Example placeholder query if we knew the location:
# SELECT ?landmark WHERE {
#   ?location geo:hasElevation ?elevation .
#   FILTER(?elevation = <known_elevation>)
#   ?landmark geo:hasElevation ?elevation .
# }
```",4,4,5,2,2,3,3,71,0,0,11,0,0.0,0
456,17,train,"Give me the band, that is a musical artist, of the band of Alan Doyle.",SELECT ?result WHERE { ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?v1 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . <http://dbpedia.org/resource/Alan_Doyle> <http://dbpedia.org/ontology/associatedMusicalArtist> ?v1 . },"```sparql
SELECT ?band WHERE {
  wd:Q123456 wdt:P106 wd:Q33999; # Alan Doyle has occupation of musician (P106)
         wdt:P175 wd:Q789012.     # Alan Doyle is a member of Great Big Sea (P175)
  
  wd:Q789012 wdt:P31 ?band.      # Great Big Sea is an instance of (P31) band
}
```

Note: In the above SPARQL query, `wd:Q123456` should be replaced with Alan Doyle's actual DBpedia entity ID and `wd:Q789012` with the entity ID for ""Great Big Sea."" These IDs need to be looked up in DBpedia or a similar resource.",2,3,3,2,1,3,3,71,0,0,2,0,0.0,0
216,26,train,"Give me the player in the coach, that is a soccer player and a sports manager and a soccer manager, of the player, that is an organisation and a sports club and a soccer club, in Džemal Berberović.",SELECT ?result WHERE { <http://dbpedia.org/resource/Džemal_Berberović> <http://dbpedia.org/ontology/team> ?v1 . ?v1 <http://dbpedia.org/ontology/coach> ?v2 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerClub>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerManager>. ?v2 <http://dbpedia.org/ontology/team> ?result . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsManager>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsClub>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerPlayer>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>

SELECT ?coach WHERE {
  ?player rdf:type dbo:SoccerPlayer .
  ?player foaf:name ""Džemal Berberović"" .
  
  ?team rdf:type dbo:SoccerClub ;
        dbo:player ?player .

  ?team dbo:coach ?coach .

  ?coach rdf:type dbo:SoccerManager ;
         rdf:type dbo:SportsManager ;
         rdf:type dbo:SoccerPlayer .
}
```",3,9,4,3,1,3,3,71,0,0,24,0,0.0,0
645,14,train,"Give me the leader of the office, that is a government agency and an organisation, of Camilo Menéndez Tolosa.",SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/leader> ?result . <http://dbpedia.org/resource/Camilo_Menéndez_Tolosa> <http://dbpedia.org/property/office> ?v1 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/GovernmentAgency>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?office ?leader WHERE {
  VALUES ?person { dbr:Camilo_Menéndez_Tolosa }
  
  ?person dbo:office ?office .
  OPTIONAL { 
    ?office dbo:leader ?leader .
  }
}
```",2,4,3,2,1,3,3,71,0,0,1,0,0.0,0
98,13,train,Give me the birth place of Paolo Ballesteros and region of the time zone of Lopez Jaena.,SELECT ?result WHERE { <http://dbpedia.org/resource/Paolo_Ballesteros> <http://dbpedia.org/ontology/birthPlace> ?result . ?result <http://dbpedia.org/ontology/timeZone> ?v0 . <http://dbpedia.org/resource/Lopez_Jaena> <http://dbpedia.org/ontology/timeZone> ?v0 . },"```sparql
SELECT ?birthPlace ?region WHERE {
  # Query for Paolo Ballesteros' birthplace
  dbpedia:Paolo_Ballesteros dbo:birthPlace ?birthPlace .

  # Query for Lopez, Jaena's timezone and its corresponding region
  dbpedia:Lopez,_Jaena dbo:timeZone ?timezone .
  ?timezone rdfs:label ?regionLabel .
  FILTER (lang(?regionLabel) = 'en')
}
```",3,3,4,2,2,2,3,28,0,0,2,0,0.0,0
216,8,train,Give me the office of the mayor of Ros Bates.,SELECT ?result WHERE { <http://dbpedia.org/resource/Ros_Bates> <http://dbpedia.org/property/leader> ?v1 . ?v1 <http://dbpedia.org/property/office> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?office WHERE {
  ?person a dbo:Person ;
          foaf:name ""Ros Bates""@en .
  OPTIONAL { ?person dbo:occupation ?office . }
  FILTER(CONTAINS(LCASE(STR(?office)), ""mayor""))
}
```",2,2,3,2,1,2,3,28,0,0,30,0,0.0,0
579,2,train,Give me the resident of Scotland.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/residence> <http://dbpedia.org/resource/Scotland> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?person WHERE {
  ?person a dbo:Person .
  ?person dbo:birthPlace dbr:Scotland ;
         OPTIONAL { ?person dbo:residence dbr:Scotland }
}
```",1,1,2,1,1,3,2,20,0,0,35,0,0.0,0
645,30,train,"Give me the military force of Spanish Civil War and commander in Battle of Jarama and leader of the office, that is a government agency and an organisation, of Camilo Menéndez Tolosa.",SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. <http://dbpedia.org/resource/Battle_of_Jarama> <http://dbpedia.org/ontology/commander> ?result . <http://dbpedia.org/resource/Camilo_Menéndez_Tolosa> <http://dbpedia.org/property/office> ?v1 . ?result <http://dbpedia.org/ontology/battle> <http://dbpedia.org/resource/Spanish_Civil_War> . ?v1 <http://dbpedia.org/ontology/leader> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/GovernmentAgency>. },"```sparql
# Query for military forces involved in the Battle of Jarama
SELECT ?force WHERE {
  ?battle dbo:wikiPageRedirects db:Battle_of_Jarama .
  ?battle dbo:military_force ?force .
}

# Query for commanders in the Battle of Jarama
SELECT DISTINCT ?commander WHERE {
  ?battle dbo:wikiPageRedirects db:Battle_of_Jarama .
  ?battle dbo:commander ?commander .
}

# Query for Camilo Menéndez Tolosa's associated office, agency, or organization and its leader
SELECT ?office ?leader WHERE {
  ?person foaf:name ""Camilo Menéndez Tolosa""@en ;
          dbo:positionHeld ?office .
  ?office dbo:head ?leader .
}
```",4,6,5,2,3,3,3,71,0,0,1,0,0.0,0
554,14,train,"Give me the leader of the birth place of the band, that is an artist, of Rita Redshoes.",SELECT ?result WHERE { ?v0 <http://dbpedia.org/property/leader> ?result . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. ?v2 <http://dbpedia.org/ontology/birthPlace> ?v0 . <http://dbpedia.org/resource/Rita_Redshoes> <http://dbpedia.org/ontology/associatedMusicalArtist> ?v2 . },"```sparql
SELECT ?mayor WHERE {
  dbpedia:Porto_Lisbon_metro_area dbo:mayor ?mayor .
}
```",3,4,4,3,1,3,2,20,0,0,3,0,0.0,0
606,6,train,Give me the figure known as Barb City and birthplace of Charles I. Barber.,"SELECT ?result WHERE { ?result <http://dbpedia.org/property/nickname> ""Barb City""@en . <http://dbpedia.org/resource/Charles_I._Barber> <http://dbpedia.org/ontology/birthPlace> ?result . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?city ?birthPlace WHERE {
  # Find the city known as Barb City (Birmingham, Alabama)
  VALUES ?barbCity { dbr:Birmingham,_Alabama }
  
  # Get the birthplace of Charles I. Barber
  OPTIONAL {
    ?charles dbo:birthPlace ?birthPlace .
    FILTER(STR(?charles) = ""Charles_I._Barber"")
  }

  # Check if Barb City is the same as the birthplace
  VALUES ?city { ?barbCity }
  
  FILTER (?city = ?birthPlace)
}
```",2,2,3,1,2,3,2,20,0,0,1,0,0.0,0
933,26,train,Give me the reference to the birth name of the professional in Musician.,SELECT ?result WHERE { ?v2 <http://dbpedia.org/property/birthName> ?v0 . ?v2 <http://dbpedia.org/property/occupation> <http://dbpedia.org/resource/Musician> . ?result <http://xmlns.com/foaf/0.1/name> ?v0 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT ?musician ?birthName WHERE {
  ?musician a dbo:Musician .
  OPTIONAL { ?musician foaf:name ?birthName . }
}
```",3,3,4,3,1,3,3,71,0,0,364,0,0.0,0
166,11,train,Give me the entity in Spain and resting place of the military force of Spanish Civil War.,SELECT ?result WHERE { ?v2 <http://dbpedia.org/ontology/restingPlace> ?result . ?v2 <http://dbpedia.org/ontology/battle> <http://dbpedia.org/resource/Spanish_Civil_War> . ?result <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Spain> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?entity ?restingPlace WHERE {
  ?person a dbo:MilitaryPerson ;
          foaf:name ""Francisco Franco""@en .
  OPTIONAL { ?person dbo:placeOfBirth dbr:Spain . }
  OPTIONAL { ?person dbo:deathPlace ?restingPlace . }
  FILTER (lang(?restingPlace) = 'en')
}
```",3,3,4,2,2,3,2,20,0,0,4,0,0.0,0
508,8,train,"Give me the birthplace of the commander, that is Saudi, in Central Plains War.",SELECT ?result WHERE { ?v0 <http://dbpedia.org/ontology/birthPlace> ?result . ?v0 <http://dbpedia.org/ontology/nationality> <http://dbpedia.org/resource/Saudi_Arabia>. <http://dbpedia.org/resource/Central_Plains_War> <http://dbpedia.org/ontology/commander> ?v0 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?birthPlace WHERE {
  ?person a dbo:MilitaryPerson ;
          dbo:nationality dbr:Saudi_Arabia ;
          dbo:militaryConflict dbr:Central_Plains_War .
  ?person dbo:birthPlace ?birthPlace .
}
```",2,3,3,2,1,3,2,20,0,0,3,0,0.0,0
267,1,train,Give me the person born on 1953-03-01.,"SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/birthDate> ""1953-03-01""^^<http://www.w3.org/2001/XMLSchema#date> . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?person ?name WHERE {
  ?person a dbo:Person .
  ?person dbo:name ?name .
  ?person dbo:birthDate ?date .
  FILTER (str(?date) = ""1953-03-01T00:00:00Z""^^xsd:dateTime)
}
```",1,1,2,1,1,3,2,20,0,0,35,0,0.0,0
892,26,train,Give me the landmark at elevation of the award of the member of E-girls.,SELECT ?result WHERE { ?v2 <http://dbpedia.org/property/awards> ?v0 . <http://dbpedia.org/resource/E-girls> <http://dbpedia.org/ontology/bandMember> ?v2 . ?result <http://dbpedia.org/ontology/elevation> ?v0 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?landmark ?elevation WHERE {
  ?landmark a dbo:Lighthouse ;
            dbo:elevationAboveSeaLevel ?elevation .
  
  FILTER(?elevation > 3000) # Assuming we are looking for landmarks with significant elevation

  OPTIONAL {
    ?awardEvent dbo:location dbr:Japan ;
                dbo:recipient dbr:Ami_Suzuki .
    
    ?landmark dbo:nearbyLocation ?awardEvent .
  }
}
ORDER BY DESC(?elevation)
LIMIT 1
```",3,3,4,3,1,3,3,71,0,0,258,0,0.0,0
130,11,train,"Give me the entity in Tennessee and figure known as the film, that is a soccer club and an organisation, of Candice Storey Lee.",SELECT ?result WHERE { ?result <http://dbpedia.org/property/nickname> ?v2 . ?v2 <http://dbpedia.org/ontology/director> <http://dbpedia.org/resource/Candice_Storey_Lee> . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerClub>. ?result <http://dbpedia.org/ontology/state> <http://dbpedia.org/resource/Tennessee> . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?entity WHERE {
  ?entity dbo:location dbr:Tennessee .
  ?entity dbo:director dbr:Candice_Storey_Lee ;
         a dbo:Film ;
         a dbo:SoccerClub ;
         a dbo:Organization .
}
```",3,5,4,2,2,3,2,20,0,0,1,0,0.0,0
791,29,train,Give me the father of Emperor Go-Toba and predecessor of the child of Emperor Takakura and spouse of Taira no Tokuko.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/spouse> <http://dbpedia.org/resource/Taira_no_Tokuko> . ?v3 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Emperor_Takakura> . ?result <http://dbpedia.org/ontology/successor> ?v3 . <http://dbpedia.org/resource/Emperor_Go-Toba> <http://dbpedia.org/property/father> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?father WHERE {
  # Emperor Go-Toba's father
  dbr:Emperor_Go-Toba dbo:father ?goTobaFather .
  
  # Emperor Takakura and Taira no Tokuko's child (Emperor Antoku)
  dbr:Emperor_Antoku dbo:parent dbr:Taira_no_Tokuko ;
                     dbo:parent dbr:Emperor_Takakura .

  # Predecessor of Emperor Antoku
  ?predecessor dbo:succeededBy dbr:Emperor_Antoku .
  
  # Find the common individual
  FILTER (?goTobaFather = ?predecessor)
}
```",4,4,5,2,3,3,3,71,0,0,1,0,0.0,0
976,7,train,Give me the birth name of Naci Bostancı.,SELECT ?result WHERE { <http://dbpedia.org/resource/Naci_Bostancı> <http://dbpedia.org/property/birthName> ?result . },"```sparql
SELECT ?birthName WHERE {
  ?person foaf:name ""Naci Bostancı""@en .
  ?person dbo:birthName ?birthName .
}
```",1,1,2,1,1,3,3,71,1,0,0,1.0,1.0,1.0
976,38,train,"Give me the office of the person born as Mehmet Naci Bostancı and office of the mayor, that is a politician and an office holder and Turkish, of Nation Alliance (Turkey).","SELECT ?result WHERE { ?v3 <http://dbpedia.org/ontology/nationality> <http://dbpedia.org/resource/Turkey>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v0 <http://dbpedia.org/property/office> ?result . <http://dbpedia.org/resource/Nation_Alliance_(Turkey)> <http://dbpedia.org/property/leader> ?v3 . ?v3 <http://dbpedia.org/property/office> ?result . ?v0 <http://dbpedia.org/property/birthName> ""Mehmet Naci Bostancı""@en . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?office WHERE {
  ?person a dbo:Politician ;
          foaf:name ""Mehmet Naci Bostancı""@en ;
          dbo:nationality dbr:Turkey .
  
  OPTIONAL { ?person dbo:positionHeld ?office . }
  
  FILTER EXISTS {
    ?party a dbo:PoliticalParty ;
           dbp:country dbr:Turkey ;
           dbp:name ""Nation Alliance (Turkey)""@en .
    
    ?person dbo:memberOf ?party .
  }
}
```",4,7,5,2,2,3,3,71,0,0,1,0,0.0,0
645,13,train,"Give me the military force of the force, that is an event and a military conflict and a societal event, of Francisco Largo Caballero.",SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v1 <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Francisco_Largo_Caballero> . ?result <http://dbpedia.org/ontology/battle> ?v1 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. },"```sparql
SELECT ?militaryForce WHERE {
  ?event dcterms:isPartOf ?conflict .
  ?conflict rdf:type dbo:MilitaryConflict .
  ?conflict dbo:eventName ""Spanish Civil War"" .
  
  ?person foaf:name ""Francisco Largo Caballero""@en .
  ?person dbo:memberOf ?militaryForce .
  ?militaryForce dbo:participatedIn ?event .

  ?event rdf:type dbo:Event .
  ?event dbo:socialEvent true .
}
```",2,5,3,2,1,3,3,71,0,0,514,0,0.0,0
976,27,train,Give me the office of the person born as the birth name of Naci Bostancı.,SELECT ?result WHERE { ?v0 <http://dbpedia.org/property/birthName> ?v1 . ?v0 <http://dbpedia.org/property/office> ?result . <http://dbpedia.org/resource/Naci_Bostancı> <http://dbpedia.org/property/birthName> ?v1 . },"```sparql
SELECT ?person ?office WHERE {
  # Find Naci Bostancı's birth name
  dbpedia:en:Naci_Bostanc%C4%B1 dbo:birthName ?birthName .
  
  # Find a person with the same birth name
  ?person dbo:birthName ?birthName .

  # Ensure it is not Naci Bostancı himself
  FILTER (?person != dbpedia:en:Naci_Bostanc%C4%B1)

  # Get the office held by this person, if any
  OPTIONAL { ?person dbo:office ?office }
}
```",3,3,4,3,1,3,3,71,0,0,4,0,0.0,0
365,0,train,Give me the person born as Symon Vasylyovych Petliura.,"SELECT ?result WHERE { ?result <http://dbpedia.org/property/birthName> ""Symon Vasylyovych Petliura""@en . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT ?person ?fullName WHERE {
  ?person dbo:birthName ""Symon Vasylyovych Petliura"" .
  OPTIONAL { ?person foaf:name ?fullName }
}
```",1,1,2,1,1,3,2,20,0,0,1,0,0.0,0
216,8,train,"Give me the person born, that is a sports manager and a soccer manager and a soccer player, on 1983-12-20.","SELECT ?result WHERE { ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerManager>. ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsManager>. ?result <http://dbpedia.org/ontology/birthDate> ""1983-12-20""^^<http://www.w3.org/2001/XMLSchema#date> . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerPlayer>. }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?person WHERE {
  ?person a dbo:Person .
  ?person dbo:birthDate ""1983-12-20""^^xsd:date .
  ?person dbo:occupation ?occupation .
  
  FILTER (
    EXISTS { ?person dbo:occupation dbr:Soccer_manager . }
    && EXISTS { ?person dbo:occupation dbr:Sports_manager . }
    && EXISTS { ?person dbo:occupation dbr:Soccer_player . }
  )
}
```",1,4,2,1,1,3,3,71,0,0,1,0,0.0,0
329,18,train,"Give me the entity in United Kingdom and entity in the birthplace, that is an organisation and a country, of Robert Bates (loyalist).",SELECT ?result WHERE { ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?result <http://dbpedia.org/ontology/country> ?v2 . <http://dbpedia.org/resource/Robert_Bates_(loyalist)> <http://dbpedia.org/ontology/birthPlace> ?v2 . ?result <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/United_Kingdom> . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?ukOrganization ?birthCountry WHERE {
  # Find Robert Bates (loyalist)
  ?person a dbo:Person ;
          foaf:name ""Robert Bates"" ;
          dbo:nationality dbr:United_Kingdom .

  # Find organizations related to him in the UK
  OPTIONAL { 
    ?organization dbo:location dbr:United_Kingdom ;
                  dbo:member ?person .
    BIND(?organization AS ?ukOrganization)
  }

  # Find his birthplace and corresponding country
  ?person dbo:birthPlace ?birthPlace .
  ?birthPlace dbo:country ?birthCountry .
}
```",3,5,4,2,2,2,3,28,0,0,531,0,0.0,0
329,6,train,Give me the entity in United Kingdom and birthplace of Eric Cross (writer).,SELECT ?result WHERE { <http://dbpedia.org/resource/Eric_Cross_(writer)> <http://dbpedia.org/ontology/birthPlace> ?result . ?result <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/United_Kingdom> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?birthPlace WHERE {
  ?person a dbo:Writer ;
          foaf:name ""Eric Cross"" .
  ?person dbo:birthPlace ?birthPlace .
  ?birthPlace dbo:country dbr:United_Kingdom .
}
```",2,2,3,1,2,2,3,28,0,0,1,0,0.0,0
826,6,train,"Who is the child, that is a royalty, of Louis I, Grand Duke of Hesse?","SELECT ?result WHERE { ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. <http://dbpedia.org/resource/Louis_I,_Grand_Duke_of_Hesse> <http://dbpedia.org/ontology/child> ?result . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?child WHERE {
  ?parent a dbo:Person ;
          foaf:name ""Louis I, Grand Duke of Hesse""@en .
  
  ?parent dbo:child ?child .

  OPTIONAL { 
    ?child dbo:title ?title .
    FILTER(CONTAINS(LCASE(?title), ""prince"") || CONTAINS(LCASE(?title), ""duke"") || CONTAINS(LCASE(?title), ""king"") || CONTAINS(LCASE(?title), ""queen""))
  }
}
```",1,2,2,1,1,3,3,71,0,0,1,0,0.0,0
459,17,train,"Give me the governor of the administration, that is a politician, of Brad Henry and person born as John Kevin Stitt.","SELECT ?result WHERE { ?v1 <http://dbpedia.org/property/governor> <http://dbpedia.org/resource/Brad_Henry> . ?result <http://dbpedia.org/property/birthName> ""John Kevin Stitt""@en . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v1 <http://dbpedia.org/property/governor> ?result . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?currentGovernor WHERE {
  # Find Brad Henry and his role as Governor of Oklahoma
  dbr:Brad_Henry dbo:governmentRole dbr:Governor_of_Oklahoma .
  
  # Find Kevin Stitt, his birth name, and his role as Governor of Oklahoma
  dbr:Kevin_Stitt dbo:birthName ""John Kevin Stitt""@en ;
                  dbo:governmentRole dbr:Governor_of_Oklahoma .

  # Identify the current governor of Oklahoma
  ?currentGovernor dbo:governmentRole dbr:Governor_of_Oklahoma .
  
  FILTER (?currentGovernor = dbr:Kevin_Stitt)
}
```",3,4,4,2,2,2,3,28,0,0,1,0,0.0,0
417,3,train,"Who is the child of Knud, Hereditary Prince of Denmark?","SELECT ?result WHERE { ?result <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Knud,_Hereditary_Prince_of_Denmark> . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?child WHERE {
  ?person a dbo:Person ;
          dbp:father ""Knud, Hereditary Prince of Denmark""@en .
  ?person dbo:child ?child .
}
```",1,1,2,1,1,3,3,71,0,0,3,0,0.0,0
839,32,train,"Give me the band of the person born, that is a musical artist, as Kevin Richard Russell and band of the member of Böhse Onkelz.","SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. <http://dbpedia.org/resource/Böhse_Onkelz> <http://dbpedia.org/ontology/bandMember> ?v3 . ?result <http://dbpedia.org/ontology/bandMember> ?v3 . ?v1 <http://dbpedia.org/property/birthName> ""Kevin Richard Russell""@en . ?v1 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?bandKevin ?memberBöhseOnkelz WHERE {
  # Find the band associated with Kevin Richard Russell
  OPTIONAL {
    ?person dbo:birthName ""Kevin Richard Russell""@en .
    ?person dbo:musicArtist ?bandKevin .
    FILTER EXISTS { ?bandKevin a dbo:Band }
  }

  # Find members of Böhse Onkelz
  dbr:Böhse_Onkelz dbo:member ?personBöhseOnkelz .
  ?personBöhseOnkelz rdfs:label ?memberBöhseOnkelz .
  FILTER (LANG(?memberBöhseOnkelz) = ""en"")
}
```",4,5,5,2,2,3,3,71,0,0,1,0,0.0,0
36,3,train,"Give me the claim to fame, that is a film, of Lepacious Bose.",SELECT ?result WHERE { <http://dbpedia.org/resource/Lepacious_Bose> <http://dbpedia.org/ontology/knownFor> ?result . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Film>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?film WHERE {
  ?film dbo:starring dbr:Lepa_Brena .
  ?film rdf:type dbo:Film .
}
```",1,2,2,1,1,2,3,28,0,3,1,0.0,0.0,0
965,26,train,"Give me the parent of the child, that is a royalty, of the person born, that is a politician, on 1854-05-24.","SELECT ?result WHERE { ?v0 <http://dbpedia.org/ontology/parent> ?result . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v0 <http://dbpedia.org/property/father> ?v2 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v2 <http://dbpedia.org/ontology/birthDate> ""1854-05-24""^^<http://www.w3.org/2001/XMLSchema#date> . }","```sparql
SELECT ?royalChild ?parent WHERE {
  # Step 1: Find politician born on 1854-05-24
  ?politician dbo:birthDate ""1854-05-24""^^xsd:date ;
              rdf:type dbo:Politician .

  # Step 2: Find children of this politician who are royalty
  ?politician dbo:child ?royalChild .
  ?royalChild rdf:type ?royaltyType .
  
  FILTER (
    ?royaltyType IN (dbo:Monarch, dbo:RoyalFamilyMember) 
  )

  # Step 3: Get the parent of this royal child
  ?royalChild dbo:parent ?parent .
}
```",3,5,4,3,1,3,3,71,0,0,2,0,0.0,0
955,8,train,"Give me the band of the band member, that is a musical artist and an artist, of Street Dogs.",SELECT ?result WHERE { ?v0 <http://dbpedia.org/ontology/associatedMusicalArtist> <http://dbpedia.org/resource/Street_Dogs> . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. ?result <http://dbpedia.org/ontology/bandMember> ?v0 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?bandMember ?band WHERE {
  ?band a dbo:Band ;
        dbo:member ?person .
  
  ?person dbo:occupation ?occupation .

  FILTER(CONTAINS(LCASE(STR(?band)), ""street dogs""))

  # Check if the person is both a musician and an artist
  VALUES ?occupation { 
    dbr:Musician 
    dbr:Artist 
  }

  # Ensure the person has both occupations
  {
    SELECT DISTINCT ?person WHERE {
      ?person dbo:occupation dbr:Musician .
    }
  } AS %musicians

  {
    SELECT DISTINCT ?person WHERE {
      ?person dbo:occupation dbr:Artist .
    }
  } AS %artists
  
  FILTER(EXISTS {SELECT * WHERE { ?person = %musicians} }) &&
  FILTER(EXISTS {SELECT * WHERE { ?person = %artists}})

}
```",2,4,3,2,1,3,2,20,0,0,3,0,0.0,0
445,13,train,Give me the death place of the awardee of Royal Astronomical Society.,SELECT ?result WHERE { ?v1 <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/Royal_Astronomical_Society> . ?v1 <http://dbpedia.org/ontology/deathPlace> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?person ?deathPlace WHERE {
  ?person dbo:awardReceivedBy dbr:Royal_Astronomical_Society .
  OPTIONAL { ?person dbo:deathPlace ?deathPlace . }
}
```",2,2,3,2,1,3,3,71,0,0,2,0,0.0,0
933,22,train,"Give me the band of Mike Elliott (saxophonist) and band of the band, that is a group and a band and an organisation, of Alan Warner (musician).",SELECT ?result WHERE { ?v0 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. <http://dbpedia.org/resource/Alan_Warner_(musician)> <http://dbpedia.org/ontology/associatedMusicalArtist> ?v0 . <http://dbpedia.org/resource/Mike_Elliott_(saxophonist)> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Group>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Band>. },"```sparql
SELECT ?mikeBand ?alanBand WHERE {
  # Find Mike Elliott's band
  ?person a dbo:MusicalArtist ;
          foaf:name ""Mike Elliott"" .
  ?person dbo:memberOf ?band ;
          rdf:type dbo:Saxophonist .
  ?band rdfs:label ?mikeBand .

  # Find Alan Warner's band
  ?musician a dbo:MusicalArtist ;
            foaf:name ""Alan Warner"" .
  ?musician dbo:memberOf ?group ;
            rdf:type dbo:MusicGroup .
  ?group rdfs:label ?alanBand .
  
  FILTER (lang(?mikeBand) = 'en')
  FILTER (lang(?alanBand) = 'en')
}
```",3,6,4,2,2,3,3,71,0,0,3,0,0.0,0
267,6,train,Give me the person born on 1953-03-01 and coach of Iran national football team.,"SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/birthDate> ""1953-03-01""^^<http://www.w3.org/2001/XMLSchema#date> . <http://dbpedia.org/resource/Iran_national_football_team> <http://dbpedia.org/ontology/coach> ?result . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?person WHERE {
  ?person dbo:birthDate ""1953-03-01""^^xsd:date .
  ?person dbo:coachForTeam dbr:Iran_national_football_team .
}
```",2,2,3,1,2,3,2,20,0,0,1,0,0.0,0
582,33,train,"Give me the player in the father, that is an athlete and a soccer manager and a sports manager, of the child of Kazuaki Nagasawa and reference to Japan.","SELECT ?result WHERE { ?v0 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Kazuaki_Nagasawa> . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerManager>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsManager>. ?v3 <http://dbpedia.org/ontology/team> ?result . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Athlete>. ?v0 <http://dbpedia.org/property/father> ?v3 . ?result <http://xmlns.com/foaf/0.1/name> ""Japan""@en . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?child ?father WHERE {
  # Find Kazuaki Nagasawa and his child
  ?person a dbo:Person ;
          foaf:name ""Kazuaki Nagasawa""@en ;
          dbp:spouse ?spouse .
  
  OPTIONAL { ?spouse dbo:child ?child . }
  
  # Ensure the father is an athlete, soccer manager, and sports manager
  ?person dbo:occupation ?occupation1 .
  ?person dbo:occupation ?occupation2 .
  ?person dbo:occupation ?occupation3 .

  FILTER (
    (str(?occupation1) = ""Athlete""@en || str(?occupation1) = ""Soccer player""@en) &&
    (str(?occupation2) = ""Football manager""@en || str(?occupation2) = ""Soccer manager""@en) &&
    (str(?occupation3) = ""Sports manager""@en)
  )
  
  # Ensure the child is related to Japan
  ?child dbo:birthPlace dbr:Japan .
}
```",4,7,5,3,2,3,3,71,0,0,1,0,0.0,0
273,1,train,Give me the parent of Gianni Agnelli.,SELECT ?result WHERE { <http://dbpedia.org/resource/Gianni_Agnelli> <http://dbpedia.org/ontology/parent> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?parentLabel WHERE {
  ?person dbo:birthName ""Gianni Agnelli""@en .
  ?person dbo:parent ?parent .
  ?parent rdfs:label ?parentLabel .
  FILTER(LANG(?parentLabel) = 'en')
}
```",1,1,2,1,1,3,2,20,0,0,2,0,0.0,0
976,20,train,"Give me the office of the mayor, that is a politician and an office holder and Turkish, of Nation Alliance (Turkey) and office of Mustafa Şentop.",SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v1 <http://dbpedia.org/property/office> ?result . <http://dbpedia.org/resource/Nation_Alliance_(Turkey)> <http://dbpedia.org/property/leader> ?v1 . <http://dbpedia.org/resource/Mustafa_Şentop> <http://dbpedia.org/property/office> ?result . ?v1 <http://dbpedia.org/ontology/nationality> <http://dbpedia.org/resource/Turkey>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. },"```sparql
SELECT DISTINCT ?office WHERE {
  # Part 1: Office of Mustafa Şentop
  { 
    dbpedia:Mustafa_Sentop dbo:positionHeld ?office .
  }
  
  UNION
  
  # Part 2: Offices of Turkish politicians in the Nation Alliance (Turkey)
  {
    ?person a dbo:Politician ;
            foaf:nationality dbr:Turkey ;
            dbo:partyAffiliation dbr:Nation_Alliance_(Turkey) .
    ?person dbo:positionHeld ?office .
  }
}
```",3,6,4,2,2,3,3,71,0,0,1,0,0.0,0
326,10,train,"Give me the award, that is a country, of the awardee of French Legion of Honor.","SELECT ?result WHERE { ?v0 <http://dbpedia.org/property/awards> ""French Legion of Honor""@en . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. ?v0 <http://dbpedia.org/property/awards> ?result . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?person ?countryAward WHERE {
  ?person dbo:awardReceived dbr:Légion_d'honneur .
  ?person dbo:awardReceived ?award .
  ?award rdfs:label ?awardLabel .
  FILTER(CONTAINS(LCASE(?awardLabel), ""order of the british empire""))
  BIND(SUBSTR(?awardLabel, STRSTARTS(UCASE(?awardLabel), ""ORDER OF THE BRITISH EMPIRE""), 20) AS ?countryAward)
}
```",2,3,3,2,1,3,2,20,0,0,3,0,0.0,0
554,1,train,Give me the leader of Portuguese Mozambique.,SELECT ?result WHERE { <http://dbpedia.org/resource/Portuguese_Mozambique> <http://dbpedia.org/property/leader> ?result . },"```sparql
SELECT ?leader ?position WHERE {
  ?mz moz:administrativeHead ?leader .
  ?leader dbo:occupation ?position .
  FILTER(CONTAINS(LCASE(?position), ""governor"") || CONTAINS(LCASE(?position), ""high commissioner""))
  OPTIONAL { ?mz rdfs:label ?name . FILTER(langMatches(lang(?name), ""en"")) }
}
```",1,1,2,1,1,3,2,20,0,0,3,0,0.0,0
715,0,train,Give me the commander in Rif War.,SELECT ?result WHERE { <http://dbpedia.org/resource/Rif_War> <http://dbpedia.org/ontology/commander> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?commander ?role WHERE {
  ?event a dbo:MilitaryConflict ;
        dbo:location dbr:Rif_(Morocco) ;
        dbo:dateStart ?dateStart .
  
  FILTER (CONTAINS(LCASE(?event), ""rif war""))

  OPTIONAL { ?event dbo:commander ?commander . }
  OPTIONAL { ?commander dbo:occupation ?role . }

  FILTER (?role IN (""Commander"", ""Leader"", ""Military Leader""))
}
```",1,1,2,1,1,3,3,71,0,0,22,0,0.0,0
382,9,train,"Give me the manager, that is a soccer manager and an athlete and a sports manager, of the player in Lukas Kübler.",SELECT ?result WHERE { ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsManager>. ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerManager>. ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Athlete>. ?v0 <http://dbpedia.org/ontology/manager> ?result . <http://dbpedia.org/resource/Lukas_Kübler> <http://dbpedia.org/ontology/team> ?v0 . },"```sparql
PREFIX dbp: <http://dbpedia.org/property/>
PREFIX dbo: <http://dbpedia.org/ontology/>

SELECT ?manager WHERE {
  ?player rdf:type dbo:SoccerPlayer ;
          foaf:name ""Lukas Kübler""@en .
  
  ?player dbp:team ?team .
  ?team dbp:manager ?manager .

  ?manager rdf:type ?type1, ?type2 .
  FILTER (
    (?type1 = dbo:Athlete || ?type1 = dbo:SoccerManager) &&
    (?type2 = dbo:Athlete || ?type2 = dbo:SportsManager)
  )
}
```",2,5,3,2,1,3,2,20,0,0,3,0,0.0,0
417,1,train,Give me the child of Christian X of Denmark.,SELECT ?result WHERE { ?result <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Christian_X_of_Denmark> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?child WHERE {
  ?person a dbo:Monarch ;
          foaf:name ""Christian X""@en .
  ?person dbo:child ?child .
}
```",1,1,2,1,1,3,3,71,0,0,2,0,0.0,0
456,15,train,"Give me the actor of the movie, that is a work and a television show, with Ross Newton.",SELECT ?result WHERE { ?v1 <http://dbpedia.org/property/starring> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/TelevisionShow>. ?v1 <http://dbpedia.org/property/starring> <http://dbpedia.org/resource/Ross_Newton> . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?movie WHERE {
  ?movie a dbo:Film ;
         a dbo:TelevisionShow .
  ?movie dbo:starring ?actor .
  FILTER (str(?actor) = ""Ross Newton"")
}
```",2,4,3,2,1,3,3,71,0,0,29,0,0.0,0
917,15,train,"Who is the child, that is a royalty, of the mayor of Hawaiian Kingdom?",SELECT ?result WHERE { <http://dbpedia.org/resource/Hawaiian_Kingdom> <http://dbpedia.org/property/leader> ?v1 . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?result <http://dbpedia.org/property/father> ?v1 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT ?child WHERE {
  ?leader dbo:country dbr:Hawaiian_Kingdom .
  ?leader foaf:name ?name .
  FILTER regex(?name, ""King|Queen"", ""i"") . # Assuming the leader is a king or queen
  ?leader dbo:spouse ?parent .
  ?parent dbo:child ?child .
  ?child dbo:title dbr:Royal_Titles . # Assuming there's a resource for royal titles
}
```",2,3,3,2,1,3,3,71,0,0,8,0,0.0,0
579,7,train,"Give me the native of the residence, that is English and a settlement, of Alan Clyne.",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/birthPlace> ?v1 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. <http://dbpedia.org/resource/Alan_Clyne> <http://dbpedia.org/property/residence> ?v1 . ?v1 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/United_Kingdom>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?nativeName
WHERE {
  ?alanClyne dbo:residence ?residence .
  FILTER EXISTS { ?alanClyne rdf:type dbo:Person . }
  
  ?residence dbo:country dbr:England ;
             rdf:type dbo:Settlement .

  ?residence rdfs:label ?nativeName .
  FILTER (LANG(?nativeName) = 'en')
}
```",2,4,3,2,1,3,2,20,0,45,1711,0.0,0.0,0
216,20,train,"Give me the player in Igor Bišćan and player in the coach, that is a soccer player and a sports manager and a soccer manager, of Bosnia and Herzegovina national under-18 football team.",SELECT ?result WHERE { ?v2 <http://dbpedia.org/ontology/team> ?result . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerPlayer>. <http://dbpedia.org/resource/Bosnia_and_Herzegovina_national_under-18_football_team> <http://dbpedia.org/ontology/coach> ?v2 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerManager>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsManager>. <http://dbpedia.org/resource/Igor_Bišćan> <http://dbpedia.org/ontology/team> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?player WHERE {
  # Igor Bišćan as a coach
  dbr:Igor_Bišćan dbo:position dbr:Soccer_coach .
  
  # Players coached by Igor Bišćan
  ?player dbo:coach dbr:Igor_Bišćan .

  # Management roles for Bosnia and Herzegovina national under-18 football team
  ?player (dbo:sportsManager | dbo:manager) _:b1 .
  _:b1 dbo:team dbr:Bosnia_and_Herzegovina_national_under-18_football_team .

  # Ensure the player is a soccer player
  ?player dbo:occupation dbr:Soccer_player .
}
```",3,6,4,2,2,3,3,71,0,0,3,0,0.0,0
216,9,train,Give me the administration of  and party of Campbell Newman.,"SELECT ?result WHERE { <http://dbpedia.org/resource/Campbell_Newman> <http://dbpedia.org/ontology/party> ?result . ?result <http://dbpedia.org/property/leader> """"@en . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?partyLabel ?officeLabel WHERE {
  VALUES ?newman { dbr:Campbell_Newman }
  
  ?newman dbo:party ?party .
  ?newman dbo:office ?office .

  SERVICE wikibase:label { bd:serviceParam wikibase:language ""[AUTO_LANGUAGE],en"". }

}
```",2,2,3,1,2,2,3,28,0,0,1,0,0.0,0
445,8,train,Give me the award of George H. Cameron.,SELECT ?result WHERE { <http://dbpedia.org/resource/George_H._Cameron> <http://dbpedia.org/property/awards> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?award WHERE {
  ?person dbo:honoree ?award .
  ?person rdfs:label ""George H. Cameron""@en .
}
```",1,1,2,1,1,3,3,71,0,0,5,0,0.0,0
892,21,train,Give me the entity in the profession of Henri Crolla and entity in Province of Reggio Emilia.,SELECT ?result WHERE { <http://dbpedia.org/resource/Henri_Crolla> <http://dbpedia.org/property/occupation> ?v2 . ?result <http://dbpedia.org/ontology/province> <http://dbpedia.org/resource/Province_of_Reggio_Emilia> . ?result <http://dbpedia.org/ontology/country> ?v2 . },"```sparql
# Query for Henri Crolla's profession
SELECT ?profession WHERE {
  ?person dbo:wikiPageID ""Henri_Crolla"" .
  ?person dbo:occupation ?profession .
}

UNION

# Query for an entity in the Province of Reggio Emilia
SELECT ?entity WHERE {
  ?entity geo:hasLocation/geo:location ?place .
  ?place rdfs:label ""Reggio Emilia""@en .
}
```",3,3,4,2,2,3,3,71,0,0,40,0,0.0,0
236,10,train,"Give me the administration of the reference, that is an office holder and a politician, to James Madison.","SELECT ?result WHERE { ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?result <http://dbpedia.org/property/leader> ?v0 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v0 <http://xmlns.com/foaf/0.1/name> ""James Madison""@en . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?administration WHERE {
  dbr:James_Madison dbo:presidentOf ?country .
  ?officeHolder dbo:positionHeld ?role .
  ?role dbo:officeHolder ?office .
  ?office dbo:headOfState ?country .
  ?office dbo:termStart ?start .
  ?office dbo:termEnd ?end .
  FILTER (?start <= ""1809-03-04""^^xsd:date && ?end >= ""1809-03-04""^^xsd:date)
  BIND(""Madison Administration"" AS ?administration)
}
```",2,4,3,2,1,3,2,20,0,0,4,0,0.0,0
465,24,train,"Give me the spouse of the child, that is a royalty, of Ferdinand I, Holy Roman Emperor and successor of Renée of France.","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/spouse> ?v2 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. <http://dbpedia.org/resource/Renée_of_France> <http://dbpedia.org/ontology/successor> ?result . <http://dbpedia.org/resource/Ferdinand_I,_Holy_Roman_Emperor> <http://dbpedia.org/ontology/child> ?v2 . }","```sparql
SELECT ?spouse WHERE {
  wd:Q1247 wdt:P26 ?child . # Ferdinand I has children
  ?child wdt:P31 wd:Q5 . # The child is a human
  ?child wdt:P39 wd:Q134428 . # The child holds the position of royalty
  ?child wdt:P26 ?spouse . # The child's spouse
  ?spouse wdt:P106 wd:Q82955 . # The spouse is a monarch (royalty)
  OPTIONAL { ?spouse rdfs:label ?spouseLabel FILTER(LANG(?spouseLabel) = ""en"") }
}
```",3,4,4,2,2,3,3,71,0,0,1,0,0.0,0
976,15,train,"Who is the leader, that is a politician, of the administration, that is an organisation, of Kemal Kılıçdaroğlu?",SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/leader> ?result . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?v1 <http://dbpedia.org/property/leader> <http://dbpedia.org/resource/Kemal_Kılıçdaroğlu> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?leader WHERE {
  ?organization dbo:leader ?leader .
  ?organization dbp:head ""Kemal Kılıçdaroğlu""@en .
  ?leader a dbo:Politician .
}
```",2,4,3,2,1,3,3,71,0,0,5,0,0.0,0
417,38,train,"Give me the child of the child, that is a royalty, of Frederick Francis III, Grand Duke of Mecklenburg-Schwerin and child of the father of Frederick IX of Denmark.","SELECT ?result WHERE { ?v2 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Frederick_Francis_III,_Grand_Duke_of_Mecklenburg-Schwerin> . ?result <http://dbpedia.org/ontology/parent> ?v2 . <http://dbpedia.org/resource/Frederick_IX_of_Denmark> <http://dbpedia.org/property/father> ?v3 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?result <http://dbpedia.org/property/father> ?v3 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?grandchild WHERE {
  # Frederick Francis III and his children
  dbr:Friedrich_Franz_III,_Grand_Duke_of_Mecklenburg-Schwerin dbo:spouse ?spouse .
  ?spouse dbo:child ?child .

  # The child of Frederick IX's father (Christian X)
  dbr:Frederick_IX_of_Denmark dbo:father dbr:Christian_X_of_Denmark .
  
  # Check if the child is also a parent
  ?child dbo:child ?grandchild .

  # Ensure the grandchild has a royal title
  ?grandchild dbo:title ?title .
  FILTER(CONTAINS(LCASE(?title), ""prince"") || CONTAINS(LCASE(?title), ""duke"") || CONTAINS(LCASE(?title), ""king"") || CONTAINS(LCASE(?title), ""queen""))
}
```",4,5,5,2,2,3,3,71,0,0,2,0,0.0,0
456,18,train,Give me the spouse of Danielle Spencer (Australian actress) and professional in  and band of Alan Doyle.,"SELECT ?result WHERE { <http://dbpedia.org/resource/Danielle_Spencer_(Australian_actress)> <http://dbpedia.org/ontology/spouse> ?result . <http://dbpedia.org/resource/Alan_Doyle> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?result <http://dbpedia.org/property/occupation> """"@en . }","```sparql
# Query to find the spouse of Danielle Spencer (Australian actress)
SELECT ?spouse WHERE {
  ?person a dbo:Actor ;
          foaf:name ""Danielle Spencer""@en .
  OPTIONAL { ?person dbo:nationality dbr:Australia . }
  ?person dbo:spouse ?spouse .
}

# Query to find the band associated with Alan Doyle
SELECT ?band WHERE {
  ?person a dbo:Musician ;
          foaf:name ""Alan Doyle""@en .
  ?person dbo:musicalBand ?band .
}
```",3,3,4,1,3,3,3,71,0,0,1,0,0.0,0
417,29,train,Give me the spouse of Princess Caroline-Mathilde of Denmark and child of the father of Frederick IX of Denmark and child of Alexandrine of Mecklenburg-Schwerin.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/parent> <http://dbpedia.org/resource/Alexandrine_of_Mecklenburg-Schwerin> . <http://dbpedia.org/resource/Frederick_IX_of_Denmark> <http://dbpedia.org/property/father> ?v3 . ?result <http://dbpedia.org/ontology/spouse> <http://dbpedia.org/resource/Princess_Caroline-Mathilde_of_Denmark> . ?result <http://dbpedia.org/property/father> ?v3 . },"```sparql
SELECT ?spouse WHERE {
  ?princess rdf:type dbo:Person ;
            rdfs:label ""Princess Caroline-Mathilde of Denmark""@en .
  ?princess dbo:spouse ?spouse .
}
```",4,4,5,2,3,3,3,71,1,0,0,1.0,1.0,1.0
98,9,train,Give me the birth place of Paolo Ballesteros and entity in Philippines.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Philippines> . <http://dbpedia.org/resource/Paolo_Ballesteros> <http://dbpedia.org/ontology/birthPlace> ?result . },"```sparql
# Query to get the birth place of Paolo Ballesteros
SELECT ?birthPlace WHERE {
  dbpedia:Paolo_Ballesteros dbo:birthPlace ?birthPlace .
}

# Query to find an entity in the Philippines
SELECT ?entity WHERE {
  ?entity dbo:country dbr:Philippines .
  LIMIT 1
}
```",2,2,3,1,2,2,3,28,0,0,2,0,0.0,0
465,9,train,"Give me the successor of Ercole II d'Este, Duke of Ferrara and spouse of Archduchess Barbara of Austria.","SELECT ?result WHERE { <http://dbpedia.org/resource/Ercole_II_d'Este,_Duke_of_Ferrara> <http://dbpedia.org/ontology/successor> ?result . ?result <http://dbpedia.org/ontology/spouse> <http://dbpedia.org/resource/Archduchess_Barbara_of_Austria> . }","```sparql
SELECT ?successor WHERE {
  wd:Q123456 wdt:P39 wd:Q789012 . # Ercole II d'Este (Q123456) was Duke of Ferrara (P39, Q789012)
  wd:Q123456 wdt:P26 wd:Q987654 . # Spouse Barbara of Austria (Q987654)
  ?successor wdt:P57 wd:Q123456 . # Successor of Ercole II d'Este
}
```

Note: Replace `wd:Q123456` with the actual DBpedia identifier for Ercole II d'Este and `wd:Q789012` with the identifier for Duke of Ferrara. The query assumes these identifiers are known or can be looked up in DBpedia.",2,2,3,1,2,3,3,71,0,0,1,0,0.0,0
274,2,train,Give me the associated musical artist of Cecil Taylor.,SELECT ?result WHERE { <http://dbpedia.org/resource/Cecil_Taylor> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?artist WHERE {
  VALUES ?cecil_taylor { dbr:Cecil_Taylor }
  ?cecil_taylor dbo:associatedMusicalArtist ?artist .
  ?artist rdfs:label ?artistLabel .
  FILTER (lang(?artistLabel) = 'en')
}
```",1,1,2,1,1,2,3,28,14,0,0,1.0,1.0,1.0
965,0,train,Give me the spouse of Prince Louis of Battenberg.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/spouse> <http://dbpedia.org/resource/Prince_Louis_of_Battenberg> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?spouse WHERE {
  ?person rdf:type dbo:Person ;
          rdfs:label ""Prince Louis of Battenberg""@en .
  OPTIONAL { ?person dbo:spouse ?spouse . }
  FILTER(LANG(?spouse->rdfs:label) = 'en')
}
```",1,1,2,1,1,3,3,71,0,0,1,0,0.0,0
987,38,train,"Give me the birth place of the actor of All for Free and entity in the region, that is a country, of Central European Time.",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/country> ?v0 . ?v3 <http://dbpedia.org/ontology/birthPlace> ?result . ?v0 <http://dbpedia.org/property/timeZone> <http://dbpedia.org/resource/Central_European_Time> . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. <http://dbpedia.org/resource/All_for_Free> <http://dbpedia.org/property/starring> ?v3 . },"```sparql
SELECT ?actor ?birthPlace WHERE {
  ?movie dbo:starring ?actor .
  ?movie rdfs:label ""All for Free""@en .
  
  OPTIONAL { ?actor dbo:birthPlace ?birthPlace . }
  
  FILTER EXISTS {
    ?birthPlace a dbo:Country ;
               dbo:timeZone dbr:Central_European_Time .
  }
}
```",4,5,5,2,2,3,3,71,0,0,4,0,0.0,0
459,3,train,"Give me the death place, that is a settlement, of Cliff Roquemore.",SELECT ?result WHERE { <http://dbpedia.org/resource/Cliff_Roquemore> <http://dbpedia.org/ontology/deathPlace> ?result . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?deathPlace WHERE {
  ?person foaf:name ""Cliff Roquemore""@en .
  ?person dbo:deathPlace ?deathPlace .
  FILTER (isLiteral(?deathPlace) = false)
  ?deathPlace a dbo:PopulatedPlace .
}
```",1,2,2,1,1,2,3,28,2,1,0,0.6666666666666666,1.0,0.8
465,16,train,"Give me the child, that is a royalty, of the parent of Elizabeth of Austria (1526–1545).",SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Elizabeth_of_Austria_(1526–1545)> . ?v1 <http://dbpedia.org/ontology/child> ?result . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. },"```sparql
SELECT ?child WHERE {
  ?parent dbo:spouse ?spouse .
  ?parent foaf:name ""Ferdinand I, Holy Roman Emperor""@en .
  
  ?parent dbo:child ?child .
  ?child rdf:type dbo:Monarch .
}
```",2,3,3,2,1,3,3,71,0,0,11,0,0.0,0
433,25,train,Give me the associated musical artist of Bill Evans and professional in the profession of Bob Marley.,SELECT ?result WHERE { ?result <http://dbpedia.org/property/occupation> ?v1 . <http://dbpedia.org/resource/Bob_Marley> <http://dbpedia.org/property/occupation> ?v1 . <http://dbpedia.org/resource/Bill_Evans> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . },"```sparql
# Find musicians associated with Bill Evans
SELECT ?associatedArtist WHERE {
  ?billEvans dbo:occupation dbr/Musician .
  ?billEvans dbo:associatedBandOrMusicalArtist ?associatedArtist .
}

UNION

# Find reggae singers like Bob Marley
SELECT ?reggaeSinger WHERE {
  ?bobMarley dbo:occupation dbr/Reggae_singer .
  ?reggaeSinger dbo:genre dbr/Reggae_music .
}

# Find the intersection of both queries
SELECT DISTINCT ?person WHERE {
  VALUES ?person { 
    # Results from the first query (associated artists with Bill Evans)
    ?associatedArtist1 .
    
    # Results from the second query (reggae singers like Bob Marley)
    ?reggaeSinger1 .
  }
  
  FILTER(?associatedArtist1 = ?reggaeSinger1)
}
```",3,3,4,2,2,3,3,71,0,0,4,0,0.0,0
888,8,train,Give me the awardee of the award of Oleksandr Syrskyi.,SELECT ?result WHERE { ?result <http://dbpedia.org/property/awards> ?v0 . <http://dbpedia.org/resource/Oleksandr_Syrskyi> <http://dbpedia.org/property/awards> ?v0 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>

SELECT ?award WHERE {
  ?person a dbo:Person ;
          foaf:name ""Oleksandr Syrskyi""@en .
  ?person dbo:award ?award .
}
```",2,2,3,2,1,3,2,20,0,1,14,0.0,0.0,0
645,6,train,"Give me the force, that is an event and a military conflict and a societal event, of Francisco Largo Caballero.",SELECT ?result WHERE { ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?result <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Francisco_Largo_Caballero> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?force WHERE {
  ?person dbo:primeMinisterOf dbr:Spain .
  ?person rdfs:label ""Francisco Largo Caballero""@en .
  
  ?event dbo:participatedIn ?person ;
         a dbo:MilitaryConflict, dbo:Event, dbo:SocietalEvent .

  BIND(?event AS ?force)
}
```",1,4,2,1,1,3,3,71,0,0,1,0,0.0,0
329,13,train,Give me the entity in United Kingdom and birthplace of the author of The Tailor and Ansty.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/United_Kingdom> . <http://dbpedia.org/resource/The_Tailor_and_Ansty> <http://dbpedia.org/property/author> ?v1 . ?v1 <http://dbpedia.org/ontology/birthPlace> ?result . },"```sparql
SELECT ?author ?birthPlace WHERE {
  ?work dcterms:title ""The Tailor and Ansty""@en .
  ?work dbo:author ?author .
  ?author dbo:birthPlace ?birthPlace .
  ?birthPlace dbo:country dbc:United_Kingdom .
}
```",3,3,4,2,2,2,3,28,0,0,1,0,0.0,0
18,12,train,"Give me the professional in  and alumnus of Marymount College, Tarrytown and parent of Liza Huber.","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Liza_Huber> . ?result <http://dbpedia.org/ontology/almaMater> <http://dbpedia.org/resource/Marymount_College,_Tarrytown> . ?result <http://dbpedia.org/property/occupation> """"@en . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?person WHERE {
  ?person dbo:almaMater dbr:Marymount_College_(Tarrytown,_New_York) .
  ?person dbo:child dbr:Liza_Huber .
}
```",3,3,4,1,3,2,3,28,0,0,1,0,0.0,0
865,13,train,"Give me the father of the child, that is a politician, of Abu Ahmad Abdul Hafiz.",SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v1 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Abu_Ahmad_Abdul_Hafiz> . ?v1 <http://dbpedia.org/property/father> ?result . },"```sparql
SELECT ?politicianChild ?father WHERE {
  # Step 1: Identify Abu Ahmad Abdul Hafiz
  ?person rdfs:label ""Abu Ahmad Abdul Hafiz""@en .
  
  # Step 2: Find children of Abu Ahmad Abdul Hafiz
  ?person dbo:child ?child .

  # Step 3: Filter for child who is a politician
  ?child dbo:profession ?profession .
  FILTER(CONTAINS(LCASE(?profession), ""politician""))

  # Step 4: Determine the father of this child
  ?child dbo:father ?father .
  
  # Return results with labels for readability
  SERVICE wikibase:label { bd:serviceParam wikibase:language ""[AUTO_LANGUAGE],en"". }
}
```",2,3,3,2,1,3,3,71,0,0,1,0,0.0,0
459,1,train,Give me the governor of Dana Murphy.,SELECT ?result WHERE { <http://dbpedia.org/resource/Dana_Murphy> <http://dbpedia.org/property/governor> ?result . },"```sparql
SELECT ?governor WHERE {
  ?state dbr:Montana .  # Assuming Dana Murphy was governor of Montana
  ?state dbo:stateGovernor ?governor .
}
```",1,1,2,1,1,2,3,28,0,0,3,0,0.0,0
839,9,train,Give me the band of Peter Schorowsky and band of Kevin Russell (musician).,SELECT ?result WHERE { <http://dbpedia.org/resource/Kevin_Russell_(musician)> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?result <http://dbpedia.org/ontology/bandMember> <http://dbpedia.org/resource/Peter_Schorowsky> . },"```sparql
# Query for Peter Schorowsky's band
SELECT ?band WHERE {
  dbpedia:Peter_Schorowsky dbo:band ?band .
}

UNION

# Query for Kevin Russell (musician)'s band
SELECT ?band WHERE {
  dbpedia:Kevin_Russell_(musician) dbo:band ?band .
}
```",2,2,3,1,2,3,3,71,0,0,1,0,0.0,0
5,10,train,"Give me the award of the associated musical artist, that is a band, of Rubén Colón Tarrats.",SELECT ?result WHERE { ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Band>. <http://dbpedia.org/resource/Rubén_Colón_Tarrats> <http://dbpedia.org/ontology/associatedMusicalArtist> ?v0 . ?v0 <http://dbpedia.org/property/awards> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?band ?award WHERE {
  ?person rdfs:label ""Rubén Colón Tarrats""@en .
  ?person dbo:musicArtist ?band .
  FILTER (isLiteral(?band) = false)
  
  OPTIONAL { 
    ?band dbo:award ?award .
  }
}
```",2,3,3,2,1,3,2,20,0,0,7,0,0.0,0
507,39,train,Give me the professional in the profession of the person born on 1966-02-18 and director of Entertaining Mr Sloane (film).,"SELECT ?result WHERE { ?result <http://dbpedia.org/property/occupation> ?v1 . ?v0 <http://dbpedia.org/ontology/birthDate> ""1966-02-18""^^<http://www.w3.org/2001/XMLSchema#date> . <http://dbpedia.org/resource/Entertaining_Mr_Sloane_(film)> <http://dbpedia.org/ontology/director> ?result . ?v0 <http://dbpedia.org/property/occupation> ?v1 . }","```sparql
SELECT ?director ?profession WHERE {
  ?film dcterms:title ""Entertaining Mr Sloane""@en .
  ?film dbo:director ?director .
  ?director dbo:birthDate ""1966-02-18""^^xsd:date .
  OPTIONAL { ?director dbo:occupation ?profession . }
}
```",4,4,5,3,2,3,3,71,0,0,1,0,0.0,0
965,11,train,Give me the spouse of the spouse of Princess Victoria of Hesse and by Rhine.,SELECT ?result WHERE { <http://dbpedia.org/resource/Princess_Victoria_of_Hesse_and_by_Rhine> <http://dbpedia.org/ontology/spouse> ?v1 . ?result <http://dbpedia.org/ontology/spouse> ?v1 . },"```sparql
SELECT ?spouse WHERE {
  dbpedia:Princess_Victoria_of_Hesse_and_by_Rhine dbo:spouse ?spouse .
}
```

This query retrieves the spouse of Princess Victoria. Since we know from historical data that her spouse was Ernest Louis, Grand Duke of Hesse, the next logical step would be to confirm this by querying for his spouse:

```sparql
SELECT ?spouse WHERE {
  dbpedia:Ernest_Louis,_Grand_Duke_of_Hesse dbo:spouse ?spouse .
}
```

The result from this query should return Princess Victoria of Hesse and by Rhine, confirming that the spouse of her spouse is herself.",2,2,3,2,1,3,3,71,0,0,1,0,0.0,0
433,19,train,"Give me the associated musical artist of the person born, that is a musical artist and an artist, as Paul Laurence Dunbar Chambers Jr. and associated musical artist of Bill Evans.","SELECT ?result WHERE { <http://dbpedia.org/resource/Bill_Evans> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?v0 <http://dbpedia.org/property/birthName> ""Paul Laurence Dunbar Chambers Jr.""@en . ?v0 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?associatedArtistChambers ?associatedArtistEvans WHERE {
  # Find Paul Chambers and his associated artists
  OPTIONAL {
    ?chambers a dbo:Musician ;
              foaf:name ""Paul Chambers"" .
    ?performance dbo:performer ?chambers ;
                 dbo:performer ?associatedArtistChambers .
  }

  # Find Bill Evans and his associated artists
  OPTIONAL {
    ?evans a dbo:Musician ;
           foaf:name ""Bill Evans"" .
    ?performanceEvans dbo:performer ?evans ;
                      dbo:performer ?associatedArtistEvans .
  }
}
```",3,5,4,2,2,3,3,71,0,0,2,0,0.0,0
98,6,train,Give me the birth place of Paolo Ballesteros and region of Philippine Standard Time.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/timeZone> <http://dbpedia.org/resource/Philippine_Standard_Time> . <http://dbpedia.org/resource/Paolo_Ballesteros> <http://dbpedia.org/ontology/birthPlace> ?result . },"```sparql
SELECT ?birthPlaceLabel ?regionLabel WHERE {
  # Query for Paolo Ballesteros's birthplace
  wd:Q1234568 dbo:birthPlace ?birthPlace .
  
  # Get the label of the birthplace in English
  SERVICE wikibase:label { bd:serviceParam wikibase:language ""en"". }
  
  # Query for the region associated with Philippine Standard Time
  wd:Q7890123 wdt:P131 ?region .
  
  # Get the label of the region in English
  SERVICE wikibase:label { bd:serviceParam wikibase:language ""en"". }
}
```

Note: `wd:Q1234568` and `wd:Q7890123` are placeholders for the actual DBpedia identifiers for Paolo Ballesteros and Philippine Standard Time, respectively. You would need to replace these with the correct QIDs from DBpedia.",2,2,3,1,2,2,3,28,0,0,2,0,0.0,0
267,0,train,Give me the coach of Iran national football team.,SELECT ?result WHERE { <http://dbpedia.org/resource/Iran_national_football_team> <http://dbpedia.org/ontology/coach> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?coach WHERE {
  dbr:Iran_national_football_team dbo:coach ?coach .
  OPTIONAL { ?coach dbo:role ?role . FILTER (CONTAINS(LCASE(?role), ""head coach"")) }
}
```",1,1,2,1,1,3,2,20,1,0,0,1.0,1.0,1.0
166,14,train,"Give me the entity in the territory administered, that is a country, from the reference to Madrid.","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/country> ?v0 . ?v0 <http://dbpedia.org/ontology/capital> ?v2 . ?v2 <http://xmlns.com/foaf/0.1/name> ""Madrid""@en . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. }","```sparql
SELECT ?country WHERE {
  ?city dbo:capital ?country .
  ?city rdfs:label ""Madrid""@en .
}
```",3,4,4,3,1,3,2,20,0,0,12023,0,0.0,0
443,0,train,Give me the landmark at elevation of 28.,"SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/elevation> ""28""^^<http://www.w3.org/2001/XMLSchema#integer> . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?landmark ?name WHERE {
    ?landmark a dbo:Landmark .
    ?landmark dbo:elevation ?elevation .
    FILTER (?elevation = ""28""^^xsd:decimal) .
    OPTIONAL { ?landmark rdfs:label ?name . FILTER (lang(?name) = 'en') }
}
```",1,1,2,1,1,2,3,28,0,0,349,0,0.0,0
791,7,train,"Give me the father, that is a royalty and an office holder, of Emperor Antoku.",SELECT ?result WHERE { ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. <http://dbpedia.org/resource/Emperor_Antoku> <http://dbpedia.org/property/father> ?result . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. },"```sparql
SELECT ?father WHERE {
  ?antoku dbo:father ?father .
  FILTER EXISTS { ?antoku rdfs:label ""Emperor Antoku""@en }
  
  OPTIONAL { 
    ?father dbo:positionHeld ?office .
    FILTER EXISTS { ?office rdfs:label ?title . 
                   (VALUES ?title { ""Shogun"" ""Regent"" ""Military Leader"" }) }
  }

  OPTIONAL {
    ?father rdf:type/rdfs:subClassOf* dbpedia-owl:Monarch .
  }
}
```",1,3,2,1,1,3,3,71,0,0,1,0,0.0,0
495,13,train,Give me the child of the father of the parent of Princess Catherine of Württemberg.,SELECT ?result WHERE { ?v0 <http://dbpedia.org/property/father> ?v1 . ?result <http://dbpedia.org/property/father> ?v1 . ?v0 <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Princess_Catherine_of_Württemberg> . },"```sparql
SELECT ?child WHERE {
  ?princess rdf:type dbo:Person ;
            foaf:name ""Princess Catherine of Württemberg""@en .
  
  ?parent dbo:child ?princess .

  ?father dbo:spouse ?parent ;
          a dbo:Man ;
          dbo:child ?grandparent .

  ?grandparent dbo:child ?child .
}
```",3,3,4,3,1,3,2,20,0,0,8,0,0.0,0
926,14,train,"Give me the child of the father, that is a royalty, of Mustafa III.",SELECT ?result WHERE { ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v0 <http://dbpedia.org/ontology/child> ?result . <http://dbpedia.org/resource/Mustafa_III> <http://dbpedia.org/property/father> ?v0 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?child WHERE {
  # Find Mustafa III's father
  dbr:Mustafa_III dbo:father ?father .
  
  # Get all children of the identified father
  ?father dbo:child ?child .

  # Filter for those who are royalty (e.g., Sultan)
  ?child dbo:title ?title .
  FILTER(CONTAINS(LCASE(?title), ""sultan"") || CONTAINS(LCASE(?title), ""prince""))
}
```",2,3,3,2,1,3,3,71,0,0,11,0,0.0,0
236,6,train,Give me the party member of Democratic-Republican Party and party member of Federalist Party.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/party> <http://dbpedia.org/resource/Federalist_Party> . ?result <http://dbpedia.org/ontology/party> <http://dbpedia.org/resource/Democratic-Republican_Party> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT DISTINCT ?person ?name WHERE {
  ?person dbo:partyMemberOf dbp:Democratic-Republican_Party .
  ?person dbo:partyMemberOf dbp:Federalist_Party .
  ?person rdfs:label ?name .
  FILTER (LANG(?name) = 'en')
}
```",2,2,3,1,2,3,2,20,0,0,18,0,0.0,0
98,6,train,Give me the child of the child of Emperor Toba.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/parent> ?v0 . <http://dbpedia.org/resource/Emperor_Toba> <http://dbpedia.org/ontology/child> ?v0 . },"```sparql
SELECT ?grandchild WHERE {
  ?emperorToba dbo:wikiPageID ""Emperor_Toba"" .
  ?emperorToba dbo:child ?child .
  ?child dbo:child ?grandchild .
}
```",2,2,3,2,1,2,2,9,0,0,3,0,0.0,0
965,36,train,"Give me the parent of the person born, that is a noble, as the birth name of George Mountbatten, 2nd Marquess of Milford Haven and spouse of Prince Louis of Battenberg.","SELECT ?result WHERE { ?v0 <http://dbpedia.org/ontology/parent> ?result . <http://dbpedia.org/resource/George_Mountbatten,_2nd_Marquess_of_Milford_Haven> <http://dbpedia.org/property/birthName> ?v3 . ?v0 <http://dbpedia.org/property/birthName> ?v3 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Noble>. ?result <http://dbpedia.org/ontology/spouse> <http://dbpedia.org/resource/Prince_Louis_of_Battenberg> . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT ?parent WHERE {
  # Find George Mountbatten, 2nd Marquess of Milford Haven
  ?george a dbo:Person ;
          foaf:name ""George Mountbatten, 2nd Marquess of Milford Haven"" ;
          dbo:birthName ?birthName .

  # Find the spouse of Prince Louis of Battenberg with the same birth name
  ?spouse a dbo:Person ;
          foaf:name ?nameSpouse ;
          dbo:birthName ?birthName ;
          dbo:spouse dbr:Prince_Louis_of_Battenberg .

  # Get parent information for this spouse
  ?parent a dbo:Person ;
          dbo:child ?spouse .
}
```",4,5,5,3,2,3,3,71,0,0,1,0,0.0,0
965,7,train,"Give me the birth name of George Mountbatten, 2nd Marquess of Milford Haven.","SELECT ?result WHERE { <http://dbpedia.org/resource/George_Mountbatten,_2nd_Marquess_of_Milford_Haven> <http://dbpedia.org/property/birthName> ?result . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?birthName WHERE {
  dbr:George_Mountbatten,_2nd_Marquess_of_Milford_Haven dbo:birthName ?birthName .
}
```",1,1,2,1,1,3,3,71,0,0,1,0,0.0,0
417,31,train,"Give me the spouse of the parent, that is a royalty, of the child of Knud, Hereditary Prince of Denmark and child of Christian X of Denmark.","SELECT ?result WHERE { ?v0 <http://dbpedia.org/ontology/child> ?v1 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?result <http://dbpedia.org/ontology/spouse> ?v0 . ?result <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Christian_X_of_Denmark> . ?v1 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Knud,_Hereditary_Prince_of_Denmark> . }","```sparql
SELECT ?spouse WHERE {
  wd:Q1206 wdt:P26 ?spouse .
}
```",4,5,5,3,2,3,3,71,0,0,1,0,0.0,0
926,21,train,Give me the father of the father of Abdulaziz and child of Ahmed III.,SELECT ?result WHERE { <http://dbpedia.org/resource/Ahmed_III> <http://dbpedia.org/ontology/child> ?result . <http://dbpedia.org/resource/Abdulaziz> <http://dbpedia.org/property/father> ?v2 . ?v2 <http://dbpedia.org/property/father> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?person WHERE {
  # Abdulaziz's father
  dbr:Abdul_Aziz_of_Saudi_Arabia dbo:father dbr:Abdul_Rahman_bin_Faisal_Al_Saud .
  
  # Abdul Rahman's father (Abdulaziz's grandfather)
  dbr:Abdul_Rahman_bin_Faisal_Al_Saud dbo:father ?grandfather .

  # Ahmed III's children
  dbr:Aḥmed_III dbo:child ?child .

  # Check if the grandfather is a child of Ahmed III
  FILTER(?grandfather = ?child)
}
```",3,3,4,2,2,3,3,71,0,0,1,0,0.0,0
926,25,train,"Give me the child of the father, that is a royalty, of Mustafa III and successor of Mustafa III.",SELECT ?result WHERE { ?v0 <http://dbpedia.org/ontology/child> ?result . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. <http://dbpedia.org/resource/Mustafa_III> <http://dbpedia.org/property/father> ?v0 . <http://dbpedia.org/resource/Mustafa_III> <http://dbpedia.org/ontology/successor> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?successor WHERE {
  # Find Mustafa III's father
  dbr:Mustafa_III dbo:father dbr:Ahmad_III .
  
  # Find Mustafa III's successor who is also a child of Ahmad III
  dbr:Mustafa_III dbo:succeededBy ?successor ;
                  dbo:childOf dbr:Ahmad_III .

  # Ensure the successor is royalty (Sultan)
  ?successor rdf:type dbo:Sultan .
}
```",3,4,4,2,2,3,3,71,0,0,1,0,0.0,0
433,24,train,"Give me the professional in Musician and associated musical artist of the associated musical artist, that is an artist and a musical artist, of Scott LaFaro.","SELECT ?result WHERE { <http://dbpedia.org/resource/Scott_LaFaro> <http://dbpedia.org/ontology/associatedMusicalArtist> ?v2 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. ?v2 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?result <http://dbpedia.org/property/occupation> ""Musician""@en . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?professionalInMusician ?associatedArtist
WHERE {
  # Step 1: Find Scott LaFaro's associated musical artists
  VALUES ?scottLaFaro { dbr:Scott_LaFaro }
  
  ?scottLaFaro dbo:associatedMusicalArtist ?artist1 .
  
  # Step 2: Filter these artists to find those who are both musicians and artists
  ?artist1 dbo:profession ?professional1 ;
          rdf:type dbo:Artist .

  FILTER EXISTS { 
    VALUES ?musicianType { dbo:Musician }
    ?artist1 rdf:type ?musicianType .
  }

  # Step 3: For each filtered artist, find their associated musical artists who are also musicians and artists
  ?artist1 dbo:associatedMusicalArtist ?professionalInMusician .

  ?professionalInMusician dbo:profession ?professional2 ;
                          rdf:type dbo:Artist .

  FILTER EXISTS { 
    VALUES ?musicianType { dbo:Musician }
    ?professionalInMusician rdf:type ?musicianType .
  }

  # Ensure the associated artist is distinct from Scott LaFaro
  FILTER(?artist1 != ?scottLaFaro)
}
```",3,5,4,2,2,3,3,71,0,0,3,0,0.0,0
5,13,train,"Give me the birthplace of the person born, that is a politician, as the award of Renata Adler.",SELECT ?result WHERE { <http://dbpedia.org/resource/Renata_Adler> <http://dbpedia.org/property/awards> ?v1 . ?v0 <http://dbpedia.org/ontology/birthPlace> ?result . ?v0 <http://dbpedia.org/property/birthName> ?v1 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?politician ?birthPlace WHERE {
  # Find Renata Adler's birthplace
  dbr:Renata_Adler dbo:birthPlace ?birthPlace .

  # Find politicians born in the same place
  ?politician a dbo:Politician ;
             dbo:birthPlace ?birthPlace .
}
```",3,4,4,3,1,3,2,20,0,87,222,0.0,0.0,0
417,18,train,Give me the spouse of Princess Caroline-Mathilde of Denmark and child of Alexandrine of Mecklenburg-Schwerin and child of Christian X of Denmark.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/spouse> <http://dbpedia.org/resource/Princess_Caroline-Mathilde_of_Denmark> . ?result <http://dbpedia.org/ontology/parent> <http://dbpedia.org/resource/Alexandrine_of_Mecklenburg-Schwerin> . ?result <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Christian_X_of_Denmark> . },"```sparql
SELECT ?spouse WHERE {
  ?person rdfs:label ""Caroline-Mathilde of Denmark""@en .
  ?person dbo:parent ?parent1, ?parent2 .
  ?parent1 rdfs:label ""Alexandrine of Mecklenburg-Schwerin""@en .
  ?parent2 rdfs:label ""Christian X of Denmark""@en .
  ?person dbo:spouse ?spouse .
}
```",3,3,4,1,3,3,3,71,0,0,1,0,0.0,0
102,10,train,"Give me the residence, that is English and a settlement, of the resident, that is an athlete, of Dewsbury.",SELECT ?result WHERE { ?v0 <http://dbpedia.org/property/residence> ?result . ?result <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/United_Kingdom>. ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. ?v0 <http://dbpedia.org/ontology/residence> <http://dbpedia.org/resource/Dewsbury> . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Athlete>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?athlete ?residence WHERE {
  # Find Dewsbury's DBpedia resource
  VALUES ?dewsbury { dbr:Dewsbury }

  # Identify athletes who reside in Dewsbury
  ?athlete dbo:residence ?dewsbury ;
           a dbo:Athlete .

  # Get the residence of these athletes, ensuring it is an English settlement
  ?athlete dbo:residence ?residence .
  
  FILTER EXISTS { 
    ?residence dbo:country dbr:England .
  }
}
```",2,5,3,2,1,3,2,20,0,0,1,0,0.0,0
281,12,train,Give me the awardee of Volunteer Decoration and commander in New Guinea campaign and awardee of Medal bar.,SELECT ?result WHERE { <http://dbpedia.org/resource/New_Guinea_campaign> <http://dbpedia.org/ontology/commander> ?result . ?result <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/Medal_bar> . ?result <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/Volunteer_Decoration> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?person WHERE {
  ?person dbo:volunteerDecoration ?vd .
  ?person dbo:militaryService ?service .
  ?service dbo:campaign ?campaign .
  FILTER (CONTAINS(LCASE(STR(?campaign)), ""new guinea campaign""))
  OPTIONAL { 
    ?person dbo:medalBar ?bar .
    FILTER EXISTS {?bar}
  }
}
```",3,3,4,1,3,2,3,28,0,0,1,0,0.0,0
83,9,train,"Give me the birthplace, that is a town and Brazilian and a soccer club, of the member, that is a sports manager, of Kedah FA.",SELECT ?result WHERE { ?v0 <http://dbpedia.org/ontology/team> <http://dbpedia.org/resource/Kedah_FA> . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsManager>. ?result <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Brazil>. ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Town>. ?v0 <http://dbpedia.org/ontology/birthPlace> ?result . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerClub>. },"```sparql
SELECT DISTINCT ?town ?soccerClub WHERE {
  # Find members who are sports managers at Kedah FA
  ?person dbo:position dbr:Kedah_FA#Sports_Manager ;
          foaf:birthPlace ?place .

  # Ensure the birthplace is a town in Brazil
  ?place rdf:type dbo:Town ;
         dbo:country dbr:Brazil .

  # Check if there's a soccer club in this town
  ?soccerClub dbo:location ?place ;
              rdf:type dbo:Soccer_Club .
}
```",2,6,3,2,1,3,2,20,0,0,1,0,0.0,0
826,9,train,"Give me the successor of Louis II, Grand Duke of Hesse and spouse of Anna Magdalena Appel.","SELECT ?result WHERE { <http://dbpedia.org/resource/Anna_Magdalena_Appel> <http://dbpedia.org/ontology/spouse> ?result . <http://dbpedia.org/resource/Louis_II,_Grand_Duke_of_Hesse> <http://dbpedia.org/ontology/successor> ?result . }","```sparql
SELECT ?successor WHERE {
  ?grandDuke dbr:Louis_II,_Grand_Duke_of_Hesse dbo:successor ?successor .
  FILTER (str(?successor) = ""Ludwig_III,_Grand_Duke_of_Hesse"")
}
```",2,2,3,1,2,3,3,71,0,0,1,0,0.0,0
281,4,train,"Give me the award, that is a military conflict, of Lawrence Moore Cosgrave.",SELECT ?result WHERE { <http://dbpedia.org/resource/Lawrence_Moore_Cosgrave> <http://dbpedia.org/property/awards> ?result . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?award WHERE {
  ?person a dbo:Person ;
          foaf:name ""Lawrence Moore Cosgrave""@en .
  
  OPTIONAL { ?person dbo:birthName ?name . }
  OPTIONAL { ?person dbo:deathDate ?deathDate . }

  ?person dbo:award ?award .

  FILTER EXISTS {
    ?award dbo:relatedToMilitaryConflict ?true
  }
}
```",1,2,2,1,1,2,3,28,0,0,1,0,0.0,0
987,5,train,"Give me the show, that is a film, with Emir Hadžihafizbegović.",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/starring> <http://dbpedia.org/resource/Emir_Hadžihafizbegović> . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Film>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?film WHERE {
  ?actor a dbo:Actor ;
         foaf:name ""Emir Hadžihafizbegović""@en .
  
  ?film dbo:starring ?actor ;
        a dbo:Film .

  FILTER NOT EXISTS { 
    ?film dbo:genre ?genre .
    ?genre rdfs:label ?label .
    FILTER (CONTAINS(LCASE(?label), ""tv"") || CONTAINS(LCASE(?label), ""series""))
  }
}
```",1,2,2,1,1,3,3,71,0,0,15,0,0.0,0
965,17,train,"Give me the person born, that is a noble, as the birth name of George Mountbatten, 2nd Marquess of Milford Haven.","SELECT ?result WHERE { <http://dbpedia.org/resource/George_Mountbatten,_2nd_Marquess_of_Milford_Haven> <http://dbpedia.org/property/birthName> ?v0 . ?result <http://dbpedia.org/property/birthName> ?v0 . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Noble>. }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?birthName WHERE {
  ?person rdfs:label ""George Mountbatten, 2nd Marquess of Milford Haven""@en .
  ?person dbo:birthName ?birthName .
  FILTER (LANG(?birthName) = 'en')
}
```",2,3,3,2,1,3,3,71,0,0,1,0,0.0,0
773,21,train,Give me the spouse of the father of Charles the Fat and parent of Charles the Fat.,SELECT ?result WHERE { <http://dbpedia.org/resource/Charles_the_Fat> <http://dbpedia.org/property/father> ?v1 . ?v1 <http://dbpedia.org/ontology/spouse> ?result . <http://dbpedia.org/resource/Charles_the_Fat> <http://dbpedia.org/ontology/parent> ?result . },"```sparql
SELECT ?father ?spouse WHERE {
  wd:Q1234 wdt:P22 ?father .
  ?father wdt:P26 ?spouse .
}
```

In this query:
- `wd:Q1234` is the DBpedia identifier for Charles the Fat.
- `wdt:P22` is the property for ""father"".
- `wdt:P26` is the property for ""spouse"".",3,3,4,2,2,3,3,71,0,0,1,0,0.0,0
839,3,train,Give me the persona of Kevin Russell (musician).,SELECT ?result WHERE { <http://dbpedia.org/resource/Kevin_Russell_(musician)> <http://xmlns.com/foaf/0.1/givenName> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?fullName ?alias ?bandName ?genre ?album WHERE {
  VALUES ?person { dbr:Kevin_Russell_(musician) }
  
  OPTIONAL { ?person dbo:birthName ?fullName . }
  OPTIONAL { ?person foaf:name ?alias . }
  OPTIONAL { ?person dbo:associatedBand ?band . 
             ?band rdfs:label ?bandName .
             FILTER (lang(?bandName) = 'en') }
  OPTIONAL { ?person dbo:musicalGenre ?genre .
             FILTER (lang(?genre) = 'en') }
  OPTIONAL { ?person dbo:album ?album .
             ?album rdfs:label ?albumLabel .
             FILTER (lang(?albumLabel) = 'en')
           }
}
```",1,1,2,1,1,3,3,71,0,0,1,0,0.0,0
281,14,train,"Give me the awardee of the award, that is a military conflict, of Lawrence Moore Cosgrave and commander in New Guinea campaign.",SELECT ?result WHERE { ?result <http://dbpedia.org/property/awards> ?v2 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. <http://dbpedia.org/resource/Lawrence_Moore_Cosgrave> <http://dbpedia.org/property/awards> ?v2 . <http://dbpedia.org/resource/New_Guinea_campaign> <http://dbpedia.org/ontology/commander> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?awardee ?award ?role WHERE {
  ?person a dbo:MilitaryPerson ;
          foaf:name ""Lawrence Moore Cosgrave""@en .
  
  ?person dbo:receivedAward ?award .
  ?award dbo:category dbr:Victoria_Cross .

  ?campaign dbo:commander ?person .
  ?campaign dbo:name ?role .
  FILTER(CONTAINS(LCASE(?role), ""new guinea campaign""))
}
```",3,4,4,2,2,2,3,28,0,0,1,0,0.0,0
926,11,train,Give me the father of the father of Abdulaziz.,SELECT ?result WHERE { <http://dbpedia.org/resource/Abdulaziz> <http://dbpedia.org/property/father> ?v1 . ?v1 <http://dbpedia.org/property/father> ?result . },"```sparql
SELECT ?grandfather WHERE {
  wd:Q1234 wdt:P22 ?father.
  ?father wdt:P22 ?grandfather.
}
```

In this query:
- `wd:Q1234` should be replaced with the DBpedia resource identifier for King Abdulaziz bin Abdul Rahman Al Saud. You would need to look up or confirm the correct QID for him in DBpedia.",2,2,3,2,1,3,3,71,0,0,1,0,0.0,0
826,28,train,"Give me the spouse of the child of Johann Heinrich Appel and predecessor of Louis IV, Grand Duke of Hesse and successor of Louis II, Grand Duke of Hesse.","SELECT ?result WHERE { ?v1 <http://dbpedia.org/property/father> ""Johann Heinrich Appel""@en . ?v1 <http://dbpedia.org/ontology/spouse> ?result . ?result <http://dbpedia.org/ontology/successor> <http://dbpedia.org/resource/Louis_IV,_Grand_Duke_of_Hesse> . <http://dbpedia.org/resource/Louis_II,_Grand_Duke_of_Hesse> <http://dbpedia.org/ontology/successor> ?result . }","```sparql
SELECT ?spouse WHERE {
  ?person dbo:spouse ?spouse .
  ?person rdfs:label ""Louis III, Grand Duke of Hesse""@en .
}
```",4,4,5,2,3,3,3,71,0,2,1,0.0,0.0,0
365,8,train,"Give me the spouse of the native, that is a politician, of Poltava Governorate.",SELECT ?result WHERE { ?v0 <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Poltava_Governorate> . ?v0 <http://dbpedia.org/ontology/spouse> ?result . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. },"```sparql
SELECT ?spouse WHERE {
  ?person dbo:nationality dbr:Ukraine ;
          dbo:birthPlace dbr:Poltava_Oblast ;
          dbo:occupation dbr/Politician .
  ?person foaf:surname ""Zelenskyy"" .
  ?person dbo:spouse ?spouse .
  FILTER(CONTAINS(LCASE(?spouse), ""olena zelenska""))
}
```",2,3,3,2,1,3,2,20,0,0,3,0,0.0,0
